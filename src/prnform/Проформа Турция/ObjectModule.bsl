Функция Печать(НомерДока = "") Экспорт
	
	НомерНаПечать = НомерДока;
	Если Не Метаданные.Имя = "УправлениеТорговлей" Тогда
		Сообщить("Печатная форма предназначена для использования в конфигурации ""Управление торговлей""", СтатусСообщения.Внимание);
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект) <> Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента) и СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.TyreTechnology Тогда
			Сообщить("Печатная форма только для клиентов Турции!!!", СтатусСообщения.Внимание);
			Возврат Неопределено;
		КонецЕсли;
	иначе
		Если ЗначениеЗаполнено(СсылкаНаОбъект.Основание.документоснование.ДоговорКонтрагента) и СсылкаНаОбъект.Основание.документоснование.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.TyreTechnology Тогда
			Сообщить("Печатная форма только для клиентов Турции!!!", СтатусСообщения.Внимание);
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") или ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя")
		или ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателяСезонный") Тогда
		Ответ = Вопрос("Вывести с картинками?",РежимДиалогаВопрос.ДаНет);
		Если ответ = КодВозвратаДиалога.Да тогда
			сКартинкой=истина;
		Иначе
			сКартинкой=ложь;
		КонецЕсли;
		Возврат ПечатьДокумента(СсылкаНаОбъект,сКартинкой);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Ответ = Вопрос("Вывести с картинками?",РежимДиалогаВопрос.ДаНет);
		Если ответ = КодВозвратаДиалога.Да тогда
			сКартинкой=истина;
		Иначе
			сКартинкой=ложь;
		КонецЕсли;
		Возврат ПечатьДокумента(СсылкаНаОбъект.Основание.документоснование,сКартинкой);
	КонецЕсли;
	
КонецФункции // Печать

Функция ПечатьДокумента(СсылкаНаОбъект2,сКартинкой=ложь)
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УпаковочныйЛист_ЭкспортТТ";
	
	ОрганизацияТТ=?(СсылкаНаОбъект2.Организация=Справочники.Организации.НайтиПоКоду("00004"),истина,ложь);
	
	ИмяМакета = "КоммерческийИнвойсТТ";
		


	Макет = ПолучитьМакет(ИмяМакета);
	ОбластьШапка        = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	Если сКартинкой тогда
		ОбластьСтрока       = Макет.ПолучитьОбласть("СтрокаСКартинкой");
		ОбластьИтогСтр         = Макет.ПолучитьОбласть("ИтогоСКартинкой");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКартинкой");
	иначе
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
		ОбластьИтогСтр         = Макет.ПолучитьОбласть("ИтогоСтр");
	КонецЕсли;
	
	ОбластьИтог         = Макет.ПолучитьОбласть("Итого");
	
	Запрос = Новый Запрос;
	если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
		Запрос.УстановитьПараметр("ТекущийДокумент2", СсылкаНаОбъект2);
	иначе
		Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект2);
		Запрос.УстановитьПараметр("ТекущийДокумент2", СсылкаНаОбъект2);
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Документ.Номенклатура.Код КАК Код,
	               |	Документ.Номенклатура КАК Номенклатура,
	               |	Документ.Номенклатура.Производитель КАК Производитель,
	               |	Документ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	СУММА(Документ.Количество) КАК Количество,
				   |	СУММА(Документ.Вес) КАК Вес,
	               |	СУММА(Документ.КоличествоМест) КАК КоличествоМест,
	               |	СУММА(ЗаказПокупателяСезонныйТовары.Сумма) КАК Сумма,
	               |	ЗаказПокупателяСезонныйТовары.Цена КАК Цена
	               |ИЗ
	               |	Документ."+?(ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг"),"РеализацияТоваровУслуг",?(ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя"),"ЗаказПокупателя",?(ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПоставщику"),"ЗаказПоставщику","ЗаказПокупателяСезонный")))+".Товары КАК Документ
				   |    ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПокупателяСезонныйТовары 
				   |     ПО Документ.Номенклатура = ЗаказПокупателяСезонныйТовары.Номенклатура И ЗаказПокупателяСезонныйТовары.Ссылка = &ТекущийДокумент2
	               |ГДЕ
	               |	Документ.Ссылка = &ТекущийДокумент
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Документ.Номенклатура,
	               |	Документ.ЕдиницаИзмерения,
	               |	ЗаказПокупателяСезонныйТовары.Цена,
	               |	Документ.Номенклатура.Код,
	               |	Документ.Номенклатура.Производитель
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПОДСТРОКА(Документ.Номенклатура.НаименованиеПолное, 1, 50)";
	

	ТЗТоваров = Запрос.Выполнить().Выгрузить();
	
	//вывод шапки
	ВидАдресаЮрАнгл = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38846");
	ВидАдресаФактАнгл = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38847");
		
	//ОбластьШапка.Параметры.Номенклатура = СформироватьНаименованиеТовара(ТЗтоваров);
	

		ФактАдресГО = "ROOM2105 QD3417 TREND CENTRE 29-31 CHEUNG LEE STREET CHAIWAN HK";
		ФактАдресПродавца = "ROOM2105 QD3417 TREND CENTRE 29-31 CHEUNG LEE STREET CHAIWAN HK";
	
	Покупатель  = СсылкаНаОбъект2.Контрагент;
	СведенияОПокупателе     = СведенияОЮрФизЛице(Покупатель,  СсылкаНаОбъект2.Дата);
	
	Грузополучатель  = ?(ЗначениеЗаполнено(СсылкаНаОбъект2.Грузополучатель), СсылкаНаОбъект2.Грузополучатель,   СсылкаНаОбъект2.Контрагент);
	СведенияОГрузополучателе     = СведенияОЮрФизЛице(Грузополучатель,       СсылкаНаОбъект2.Дата);
	Если СокрЛП(СсылкаНаОбъект2.АдресДоставки)= "" Тогда
		ФактАдресГП = ОписаниеОрганизации(СведенияОГрузополучателе, "ФактическийАдрес,");
		ФактАдресГП = ?(СокрЛП(ФактАдресГП)="", ОписаниеОрганизации(СведенияОГрузополучателе, "ЮридическийАдрес,"), СокрЛП(ФактАдресГП));
	Иначе
		ФактАдресГП = СокрЛП(СсылкаНаОбъект2.АдресДоставки);
	КонецЕсли;
	Если ССылкаНаобъект2.ДоговорКонтрагента.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
	//ОбластьШапка.Параметры.Бик = "BIC 047888670 "; 
	//ОбластьШапка.Параметры.РасчетныйСчет = "Acc. 40702810477030004491, Severny Bank  of Sberbank Russia Yaroslavl";
    иначе
	//ОбластьШапка.Параметры.Бик = "SWIFT: SABRRUMMYA1"; 
	//ОбластьШапка.Параметры.РасчетныйСчет = "Acc. 40702840077030000014, Severny Bank  of Sberbank Russia Yaroslavl ";
	конецЕсли;
	//грузоотправитель и продавец
	//ОбластьШапка.Параметры.ФактАдресГрузоотправителя = ФактАдресГО;
	//ОбластьШапка.Параметры.ПродавецНаименование = "Tyre Technology Co.,Limited";
	//ОбластьШапка.Параметры.ФактАдресПродавца = ФактАдресПродавца;
	//грузополучатель и покупатель
	ОбластьШапка.Параметры.ПокупательНаименование = СведенияОПокупателе.ПолноеНаименование;
	РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",Покупатель,Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдресаЮрАнгл));
	ОбластьШапка.Параметры.АдресПокупателяАнгл = РегАдреса.Представление;
	//ОбластьШапка.Параметры.ГрузополучательНаименование = СведенияОГрузополучателе.ПолноеНаименование;
	РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",Грузополучатель,Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдресаФактАнгл));
	//ОбластьШапка.Параметры.АдресГрузополучателяАнгл = РегАдреса.Представление;
	
	ОбластьШапка.Параметры.Договор    = СсылкаНаОбъект2.ДоговорКонтрагента.Номер+" dtd "+формат(СсылкаНаОбъект2.ДоговорКонтрагента.Дата,"ДЛФ=D");
				
	
	//Если НомерНаПечать = "" Тогда
	//	Если СсылкаНаОбъект.НомерФормулаАвто = 0 Тогда
	//		НомерДокумента = ЭтотОбъект.ПолучитьФорму("ВводНомераШинтрейдЯрославль").ОткрытьМодально();
	//	Иначе
	//		НомерДокумента = СтрЗаменить(Строка(СсылкаНаОбъект.НомерФормулаАвто), Символы.НПП,"");
	//	КонецЕсли;
	//Иначе
	//	НомерДокумента = НомерНаПечать;
	//КонецЕсли;
	
	//ОбластьШапка.Параметры.Номер = СсылкаНаОбъект2.Номер;
	//ОбластьШапка.Параметры.ДоговорДата  = Формат(СсылкаНаОбъект2.Дата, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.Номер = СсылкаНаОбъект.Номер;
	ОбластьШапка.Параметры.ДоговорДата  = Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
	//ОбластьШапка.Параметры.УсловиеПоставки = СсылкаНаОбъект.Сделка.УсловиеПоставкиНаЭкспорт;
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	ВалютаДок = СсылкаНаОбъект2.ВалютаДокумента;
	//ОбластьШапкаТаблицы.Параметры.ВалПоАнгл = ВалютаДок.Наименование;
	
	Если сКартинкой тогда
		ОбластьШапкаТаблицы.ТекущаяОбласть.ШиринаКолонки = 100/5;//ШиринаКартинки/5;
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	//конец вывод шапки
		
	ИтВесНетто = 0;
	ИтКоличествоМест = 0;
	ИтКомплКоличество = 0;
	НомСтр = 0;
	Для Каждого Строка Из ТЗТоваров Цикл
		
		НомСтр = НомСтр+1;
		ОбластьСтрока.Параметры.НомерСтроки = НомСтр;
		ОбластьСтрока.Параметры.Код = Строка.Номенклатура.Код;
		ОбластьСтрока.Параметры.Номенклатура = СтрЗаменить(Строка.Номенклатура.НаименованиеПолное, "Диск","Wheel");
		ОбластьСтрока.Параметры.Количество = Строка.Количество;
		ОбластьСтрока.Параметры.Цена = Строка.Цена;
		ОбластьСтрока.Параметры.Сумма = Строка.Сумма;
		//ОбластьСтрока.Параметры.ВесБрутто  = Строка.Вес;
		
		Если сКартинкой тогда
			ОбластьСтрока.Рисунки.Очистить();
			АдресКартинки = ПолучитьАдресКартинкиТовара(Строка.Номенклатура);
			Картинка = неопределено;
			Если АдресКартинки<>"" и АдресКартинки <> неопределено тогда
				ФайлКартинки = ПолучитьФайлССервера(АдресКартинки);
				Если ФайлКартинки<>"" тогда
					Картинка = Новый Картинка(ПолучитьФайлССервера(АдресКартинки));
					
					Если НЕ Картинка = Неопределено Тогда
						ОбластьСтрока.ТекущаяОбласть.ВысотаСтроки = 100;//ВысотаКартинки;
						ОбластьСтрока.ТекущаяОбласть.ШиринаКолонки = 100/5;//ШиринаКартинки/5;
						ФотоТовара = ОбластьСтрока.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
						ФотоТовара.Верх = 0;
						ФотоТовара.Лево = 0;
						ФотоТовара.РазмерКартинки = РазмерКартинки.Пропорционально;
						ФотоТовара.Картинка = Картинка;
						ФотоТовара.Расположить(ОбластьСтрока.Область(1, 1, 1, 1));
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			ОбластьСтрока.ТекущаяОбласть.ВысотаСтроки = 100;//ВысотаКартинки;
			ОбластьСтрока.ТекущаяОбласть.ШиринаКолонки = 100/5;//ШиринаКартинки/5;
			
		Иначе
		КонецЕсли;
		
		Если Строка.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
			парам1   = Строка.Номенклатура.Типоразмер;
			ЭтоЛитойДиск = Строка.Номенклатура.ПринадлежитЭлементу(Справочники.Номенклатура.НайтиПоКоду("0001753"));
			ДваВОдном = Строка.КоличествоМест/Строка.Количество;
			//ВесНетто = Строка.ВесБрутто - ВесУпаковки(парам1, ЭтоЛитойДиск) * Строка.Количество * ?(ДваВОдном=0,1,ДваВОдном); 
			//не опнятно как рассчитывать вес, если кол.мест не равно 0
			ВесНетто = Строка.Вес - ВесУпаковки(парам1, ЭтоЛитойДиск) * Строка.Количество; 
		Иначе
			ВесНетто = Строка.Вес;
		КонецЕсли;
		//ОбластьСтрока.Параметры.ВесНетто = ВесНетто;
		ИтВесНетто = ИтВесНетто+ВесНетто;
				
		ТабДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	//Итог
	
	ОбластьИтогСтр.Параметры.ИтогКоличество = ТЗТоваров.Итог("Количество");
	//ОбластьИтогСтр.Параметры.ИтогВесБрутто= ИтВесНетто;
	ОбластьИтогСтр.Параметры.ИтогСумма = ТЗТоваров.Итог("Сумма");

	Если сКартинкой тогда
		ОбластьИтогСтр.ТекущаяОбласть.ШиринаКолонки = 100/5;//ШиринаКартинки/5;
	КонецЕсли;

    ТабДокумент.Вывести(ОбластьИтогСтр);

	
	//ОбластьИтог.Параметры.ИтогКоличество = ТЗТоваров.Итог("Количество");
	//ОбластьИтог.Параметры.ИтогСумма = ТЗТоваров.Итог("Сумма");
	ОбластьИтог.Параметры.СуммаПрописью = ЧислоПрописью(ТЗТоваров.Итог("Сумма"),"Л=en_US;ДП=истина")+"/"+ЧислоПрописью(ТЗТоваров.Итог("Сумма"),"Л=ru_RU;ДП=истина");
	//ОбластьИтог.Параметры.ИтогВесБрутто = ТЗТоваров.Итог("Вес");
	//ОбластьИтог.Параметры.ИтогВесБрутто= ИтВесНетто;
	Если ТипЗнч(СсылкаНаОбъект2) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
	ОбластьИтог.Параметры.Условиепоставки  =""+ ССылкаНаОбъект2.УсловиеПоставкиНаЭкспорт+" "+РегАдреса.Комментарий;
	КонецЕсли;
	//ОбластьИтог.Параметры.ПродавецНаименование="TYRE TECHNOLOGY CO.,LIMITED";
	//ОбластьИтог.Параметры.БанкИАдрес="ACCOUNTING BANK: PING AN BANK CO.,LTD
	//		|ADD: 11/F,NO.5047, ROAD SHENNAN DONG, SHENZHEN,P.R.CHINA
	//		|A/C NO: OSA11013478943301
			//|SWIFT NO: SZDBCNBS";
	
	ТабДокумент.Вывести(ОбластьИтог);
	
	обКартинка = Макет.ПолучитьОбласть("ПодвалШапка");
	ТабДокумент.Вывести(обКартинка);
	
	обКартинка = Макет.ПолучитьОбласть("Картинка");
	ТабДокумент.Вывести(обКартинка);
		
//-------------------печати и подписи---------------------------------------
	
		
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОтображатьСетку = Ложь;
	
	Возврат ТабДокумент;
				   
КонецФункции

Функция СформироватьНаименованиеТовара(ТЗтоваров, ДваЯзыка=ложь,ОрганизацияТТ=истина)
	
	ГруппаЛитые = Справочники.Номенклатура.НайтиПоКоду("0001753"); //это из алюминия легковые
	ГруппаГрузовые = Справочники.Номенклатура.НайтиПоКоду("9004163");  //это грузовые
	ГруппаШтампованные = Справочники.Номенклатура.НайтиПоКоду("0001755"); //это стальные легковые
	
	ЕстьАлюминиевые = Ложь;
	ЕстьСтальные = Ложь;
	ЕстьГрузовые = Ложь;
	ЕстьАксессуары = Ложь;
	ЕстьШины = Ложь;
	Для Каждого Стр из ТЗТоваров Цикл
		ЭтоЛитойДиск = Стр.Номенклатура.ПринадлежитЭлементу(ГруппаЛитые);
		ЭтоШтампованныйДиск = Стр.Номенклатура.ПринадлежитЭлементу(ГруппаШтампованные);
		ЭтоГрузовойДиск = Стр.Номенклатура.ПринадлежитЭлементу(ГруппаГрузовые);
		Если ЭтоЛитойДиск Тогда
			ЕстьАлюминиевые = Истина;
		ИначеЕсли ЭтоШтампованныйДиск Тогда
			ЕстьСтальные = Истина;
		ИначеЕсли ЭтоГрузовойДиск Тогда 
			ЕстьГрузовые = Истина;
		ИначеЕсли Стр.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Аксессуары Тогда
			ЕстьАксессуары = Истина;
		ИначеЕсли Стр.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
			ЕстьШины = Истина;
		КонецЕсли;	
	КонецЦикла;	
	ПечНаименованиеТовара = "";
	ПечНаименованиеТовараАнгл = "";
	Если ЕстьАлюминиевые Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+"Новые алюминиевые";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+"New aluminum";
	КонецЕсли;
	Если ЕстьСтальные Тогда
		ПечНаименованиеТовара = ?(ПечНаименованиеТовара = "","Новые стальные", ПечНаименованиеТовара+", стальные");
		ПечНаименованиеТовараАнгл = ?(ПечНаименованиеТовараАнгл = "","New steel", ПечНаименованиеТовараАнгл+", steel");
	КонецЕсли;
	Если ПечНаименованиеТовара <> "" Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+" колеса для легковых автомобилей, ";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+" wheels for passenger cars, ";
	КонецЕсли;
	Если ЕстьГрузовые Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+"Новые колеса для грузовых автомобилей, ";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+"New wheels for trucks, ";
	КонецЕсли;
	Если ЕстьШины Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+"Шины, ";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+"Tires, ";
	КонецЕсли;	
	Если ЕстьАксессуары Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+"Аксессуары, ";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+"Accessories, ";
	КонецЕсли;	
	
	ПечНаименованиеТовара = Лев(ПечНаименованиеТовара, СтрДлина(ПечНаименованиеТовара)-2);
	ПечНаименованиеТовараАнгл = Лев(ПечНаименованиеТовараАнгл, СтрДлина(ПечНаименованиеТовараАнгл)-2);
	
	Если ДваЯзыка и не ОрганизацияТТ Тогда
		возврат ПечНаименованиеТовараАнгл+" / "+ПечНаименованиеТовара;
	ИначеЕсли ОрганизацияТТ тогда
		возврат ПечНаименованиеТовараАнгл;
	Иначе	
		возврат ПечНаименованиеТовара;
	КонецЕсли;
	
КонецФункции	

Функция ВесУпаковки(типоразмер, ЭтоЛитойДиск = Ложь)
	
	индексД = ?(типоразмер.Диаметр="",0, число(типоразмер.Диаметр)-13);  
	
	Если индексД>=0 тогда
		Если ЭтоЛитойДиск Тогда
			масса = новый Массив;
			масса.Добавить(0.430); //13
			масса.Добавить(0.650); //14
			масса.Добавить(0.700); //15
			масса.Добавить(0.870); //16
			масса.Добавить(0.950); //17
			масса.Добавить(1.100);  //18
			масса.Добавить(1.200);  //19
			масса.Добавить(1.400);  //20
			масса.Добавить(1.550);  //21
			масса.Добавить(1.700); //22 
			Попытка
			    m = масса[индексД];
			Исключение
				m = 0;
			КонецПопытки;
		Иначе
			масса = новый Массив;
			масса.Добавить(0.300); //13
			масса.Добавить(0.400); //14
			масса.Добавить(0.500); //15
			масса.Добавить(0.600); //16
			масса.Добавить(0.700); //17
			Попытка
			    m = масса[индексД];
			Исключение
				m = 0;
			КонецПопытки;
		КонецЕсли;
	Иначе // это болты или гайки
		m = 0;
	КонецЕсли;
	возврат Окр(m,3);
КонецФункции	
