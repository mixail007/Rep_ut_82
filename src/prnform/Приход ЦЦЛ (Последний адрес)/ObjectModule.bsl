
Функция ПолучитьТекстЗапросаПоЗаказуПоставщику()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ЗаказПоставщикуТовары.НомерСтроки, 1000) КАК НомерСтроки,
	|	ЗаказПоставщикуТовары.Количество КАК КоличествоЗаказано,
	|	ЗаказПоставщикуТовары.Номенклатура.Код КАК Код,
	|	ЗаказПоставщикуТовары.Номенклатура.Артикул КАК Артикул
	|ПОМЕСТИТЬ втТоварыЗаказа
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказПоставщикуТовары.НомерСтроки КАК НомерСтроки,
	|		ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	|		ЗаказПоставщикуТовары.Количество КАК Количество
	|	ИЗ
	|		Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|	ГДЕ
	|		ЗаказПоставщикуТовары.Ссылка = &ТекущийДокумент) КАК ЗаказПоставщикуТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыАдресноеХранениеОбороты.Регистратор,
	|	ТоварыАдресноеХранениеОбороты.Номенклатура,
	|	ТоварыАдресноеХранениеОбороты.АдресХранения,
	|	ТоварыАдресноеХранениеОбороты.Период
	|ПОМЕСТИТЬ втАдреса
	|ИЗ
	|	РегистрНакопления.ТоварыАдресноеХранение.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			Склад = &СкладЦЦЛ
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						втТоварыЗаказа.Номенклатура
	|					ИЗ
	|						втТоварыЗаказа)) КАК ТоварыАдресноеХранениеОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	взПоследнееДвижение.Номенклатура,
	|	втАдреса.АдресХранения
	|ПОМЕСТИТЬ втАдресПоследнегоДвижения
	|ИЗ
	|	втАдреса КАК втАдреса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			втАдреса.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(втАдреса.Период) КАК Период
	|		ИЗ
	|			втАдреса КАК втАдреса
	|		
	|		СГРУППИРОВАТЬ ПО
	|			втАдреса.Номенклатура) КАК взПоследнееДвижение
	|		ПО втАдреса.Номенклатура = взПоследнееДвижение.Номенклатура
	|			И втАдреса.Период = взПоследнееДвижение.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТоварыЗаказа.Номенклатура КАК Номенклатура,
	|	втТоварыЗаказа.НомерСтроки КАК НомерСтроки,
	|	втТоварыЗаказа.КоличествоЗаказано КАК КоличествоЗаказано,
	|	ЕСТЬNULL(втАдресПоследнегоДвижения.АдресХранения, """") КАК АдресХранения,
	|	втТоварыЗаказа.Код КАК Код,
	|	втТоварыЗаказа.Артикул КАК Артикул
	|ИЗ
	|	втТоварыЗаказа КАК втТоварыЗаказа
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАдресПоследнегоДвижения КАК втАдресПоследнегоДвижения
	|		ПО втТоварыЗаказа.Номенклатура = втАдресПоследнегоДвижения.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(НомерСтроки),
	|	МАКСИМУМ(КоличествоЗаказано),
	|	МАКСИМУМ(Код),
	|	МАКСИМУМ(Артикул)
	|ПО
	|	Номенклатура";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаПоЗаказуПоставщику()

Функция ПолучитьТекстЗапросаПоПеремещениюТоваров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеТоваровТовары.Номенклатура.Код КАК Код,
	|	ПеремещениеТоваровТовары.Номенклатура.Артикул КАК Артикул,
	|	ПеремещениеТоваровТовары.Количество КАК КоличествоЗаказано
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &ТекущийДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыАдресноеХранениеОбороты.Регистратор,
	|	ТоварыАдресноеХранениеОбороты.Номенклатура,
	|	ТоварыАдресноеХранениеОбороты.АдресХранения,
	|	ТоварыАдресноеХранениеОбороты.Период
	|ПОМЕСТИТЬ втАдреса
	|ИЗ
	|	РегистрНакопления.ТоварыАдресноеХранение.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			Склад = &СкладЦЦЛ
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						втТовары.Номенклатура
	|					ИЗ
	|						втТовары)) КАК ТоварыАдресноеХранениеОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	взПоследнееДвижение.Номенклатура,
	|	втАдреса.АдресХранения
	|ПОМЕСТИТЬ втАдресПоследнегоДвижения
	|ИЗ
	|	втАдреса КАК втАдреса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			втАдреса.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(втАдреса.Период) КАК Период
	|		ИЗ
	|			втАдреса КАК втАдреса
	|		
	|		СГРУППИРОВАТЬ ПО
	|			втАдреса.Номенклатура) КАК взПоследнееДвижение
	|		ПО втАдреса.Номенклатура = взПоследнееДвижение.Номенклатура
	|			И втАдреса.Период = взПоследнееДвижение.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.НомерСтроки КАК НомерСтроки,
	|	втТовары.Код КАК Код,
	|	втТовары.Артикул КАК Артикул,
	|	втТовары.КоличествоЗаказано КАК КоличествоЗаказано,
	|	втАдресПоследнегоДвижения.АдресХранения
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАдресПоследнегоДвижения КАК втАдресПоследнегоДвижения
	|		ПО втТовары.Номенклатура = втАдресПоследнегоДвижения.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(НомерСтроки),
	|	МАКСИМУМ(Код),
	|	МАКСИМУМ(Артикул),
	|	МАКСИМУМ(КоличествоЗаказано)
	|ПО
	|	Номенклатура";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаПоПеремещениюТоваров()

Функция ПолучитьДанные()
	
	Запрос = Новый Запрос;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаПоЗаказуПоставщику();
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаПоПеремещениюТоваров();
	Иначе
		ТекстЗапроса = "";
		Сообщить("Не удалось определить источник данных");
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("СкладЦЦЛ"       , Справочники.Склады.НайтиПоКоду("02091"));
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции // ПолучитьДанные()

Функция Печать() Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ЭтотОбъект.ПолучитьМакет("ЗаказПоставщикуНаЦЦЛ");
	
	// Заголовок
	Обл = Макет.ПолучитьОбласть("Заголовок");
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ЗаголовокЛок = "Заказ поставщику";
		ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ЗаголовокЛок = "Перемещение товаров";
		ПредставлениеПоставщика = СсылкаНаОбъект.СкладОтправитель.Наименование;
		ПредставлениеПолучателя = СсылкаНаОбъект.СкладПолучатель.Наименование;
	Иначе
		ЗаголовокЛок = "Не удалось определить источник";
		ПредставлениеПоставщика = "";
		ПредставлениеПолучателя = "";
	КонецЕсли;
	ТекстЗаголовка = СформироватьЗаголовокДокумента(СсылкаНаОбъект, ЗаголовокЛок);
	Обл.Параметры.ТекстЗаголовка = ТекстЗаголовка;
	ШтрихКод = глТорговоеОборудование.ПолучитьШтрихКодПоДокументу(СсылкаНаОбъект);  // 20 или 30 префикс
	попытка
		ОбШтрихКод = Обл.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ШтрихКод; 
		ОбШтрихКод.ТекстКода = ШтрихКод; 
	исключение
		//нет компоненты 1CBarCode.exe
	КонецПопытки;
	ТабДок.Вывести(Обл);
	
	
	Обл = Макет.ПолучитьОбласть("Поставщик");
	Обл.Параметры.ПоставщикТекст = "Поставщик: ";
	Обл.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	ТабДок.Вывести(Обл);
	
	Обл = Макет.ПолучитьОбласть("Покупатель");
	Обл.Параметры.ПокупательТекст = "Покупатель: ";
	Обл.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
	ТабДок.Вывести(Обл);
	
	Обл = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(Обл);
	
	Данные  = ПолучитьДанные();
	ВыборкаНоменкл = Данные.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОблНоменкл = Макет.ПолучитьОбласть("Строка");
	ОблАдрес   = Макет.ПолучитьОбласть("Строка1");
	КоличествоВзятьИтого = 0;
	Пока ВыборкаНоменкл.Следующий() Цикл
		КоличествоВзятьИтого = КоличествоВзятьИтого + ВыборкаНоменкл.КоличествоЗаказано;
		ОблНоменкл.Параметры.Заполнить(ВыборкаНоменкл);
		ТабДок.Вывести(ОблНоменкл);
		Выборка = ВыборкаНоменкл.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если НЕ Выборка.АдресХранения = NULL Тогда
				ОблАдрес.Параметры.Заполнить(Выборка);
				ТабДок.Вывести(ОблАдрес);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Итоги
	Обл = Макет.ПолучитьОбласть("Итого");
	Обл.Параметры.КоличествоВзятьИтого = КоличествоВзятьИтого;
	ТабДок.Вывести(Обл);
	
	Обл = Макет.ПолучитьОбласть("Примечание");
	Обл.Параметры.Комментарий = СсылкаНаОбъект.Комментарий;
	ТабДок.Вывести(Обл);
	
	
	Возврат ТабДок;
	
КонецФункции // Печать()