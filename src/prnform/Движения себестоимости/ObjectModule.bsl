Функция Печать() Экспорт
	
	Если Не Метаданные.Имя = "УправлениеТорговлей" Тогда
		Сообщить("Печатная форма предназначена для использования в конфигурации ""Управление торговлей""", СтатусСообщения.Внимание);
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.КомплектацияНоменклатуры") или  ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров")  Тогда
		Возврат ПечатьДокумента(ВидДвиженияНакопления.Приход,СсылкаНаОбъект);
	ИначеЕсли 	ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Возврат ПечатьРеализации(СсылкаНаОбъект);
	КонецЕсли;
	
КонецФункции // Печать

Функция ПечатьДокумента( ВидДвижения, Регистратор ) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
    ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	СУММА(ПартииТоваровНаСкладах.Количество) КАК Количество,
	|	СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|ГДЕ
	|	ПартииТоваровНаСкладах.Регистратор = &Регистратор
	|	И ПартииТоваровНаСкладах.ВидДвижения = &ВидДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладах.Номенклатура
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Стоимость)
	|ПО
	|	ОБЩИЕ";
	
//+++(26.06.2013	
Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") 
 И НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
  	Предупреждение("У вас недостаточно прав для просмотра данного отчета!",60);
	Возврат неопределено;

	Запрос.Текст = стрЗаменить(Запрос.Текст , "ПартииТоваровНаСкладах.Стоимость", 
	 			 "ВЫБОР 
				 |КОГДА ПартииТоваровНаСкладах.НОМЕНКЛАТУРА.ВидТовара = &Диски ТОГДА
				 |	ВЫБОР КОГДА ПартииТоваровНаСкладах.НОМЕНКЛАТУРА.производитель В (&СписокПроизводителей1) 
				 |		ТОГДА Выразить( ПартииТоваровНаСкладах.Стоимость*(1-0.47) как число(15,2))
				 |        КОГДА	ПартииТоваровНаСкладах.НОМЕНКЛАТУРА.производитель=&Производитель2
				 |		ТОГДА Выразить( ПартииТоваровНаСкладах.Стоимость*(1-0.30) как число(15,2))
				 |        КОГДА	ПартииТоваровНаСкладах.НОМЕНКЛАТУРА.производитель = &Производитель3
				 |		ТОГДА Выразить( ПартииТоваровНаСкладах.Стоимость*(1-0.18) как число(15,2))
				 |		  ИНАЧЕ 
				 |			ПартииТоваровНаСкладах.Стоимость
				//|			Выразить( ПартииТоваровНаСкладах.Стоимость*(1-0.18) как число(15,2))
				 |	КОНЕЦ
				 |ИНАЧЕ ПартииТоваровНаСкладах.Стоимость
				 |Конец");
	 Запрос.Параметры.Вставить("Диски",Перечисления.ВидыТоваров.Диски);
										 
	 СписокПроизводителей1 = новый СписокЗначений;  //LegeArtis, NZ
	 СписокПроизводителей1.Добавить(справочники.Производители.НайтиПоКоду(3072) );
	 СписокПроизводителей1.Добавить(справочники.Производители.НайтиПоКоду(65) );
	 СписокПроизводителей1.Добавить(справочники.Производители.НайтиПоКоду(68) );
	 СписокПроизводителей1.Добавить(справочники.Производители.НайтиПоКоду(517) );//NZ
	 Запрос.УстановитьПараметр("СписокПроизводителей1", СписокПроизводителей1); // -47%
	//TREBL
	Запрос.УстановитьПараметр("Производитель2", справочники.Производители.НайтиПоКоду(597) ); // -30%
	//ALCASTA
	Запрос.УстановитьПараметр("Производитель3", справочники.Производители.НайтиПоКоду(100) ); // -18%
КонецЕсли;
//+++)

	Запрос.УстановитьПараметр("ВидДвижения", ВидДвижения);
	Запрос.УстановитьПараметр("Регистратор", СсылкаНаОбъект);
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьПодвал.Параметры.Заполнить(ВыборкаОбщийИтог);           //+++ 05.06.2018
	ТабДок.Вывести(ОбластьПодвал, ВыборкаОбщийИтог.Уровень());

	ВыборкаДетали = ВыборкаОбщийИтог.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	
	 
	ТабДок.Вывести(ОбластьПодвал);
		
   Возврат ТабДок; 
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецФункции

Функция ПечатьРеализации( Регистратор ) Экспорт
	ТабДок=Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ОтчетРеализация");
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ПродажиОбороты.Номенклатура.Код как Код, 
	|	ПродажиОбороты.Номенклатура,
	|	ЕСТЬNULL(ПартииТоваровНаСкладах.Количество,0) как Количество,
	|	ЕСТЬNULL(ПартииТоваровНаСкладах.Стоимость,0) КАК Себестоимость,
	|	ПродажиОбороты.СтоимостьОборот * ЕСТЬNULL(ПартииТоваровНаСкладах.Количество,0) / ПродажиОбороты.КоличествоОборот КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПартииТоваровНаСкладах.Стоимость,0) > 0
	|			ТОГДА ВЫРАЗИТЬ((ПродажиОбороты.СтоимостьОборот * ЕСТЬNULL(ПартииТоваровНаСкладах.Количество,0) / (ПродажиОбороты.КоличествоОборот * ЕСТЬNULL(ПартииТоваровНаСкладах.Стоимость,0)) - 1) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ПроцентПрибыли,
	|	ПродажиОбороты.СтоимостьОборот * ЕСТЬNULL(ПартииТоваровНаСкладах.Количество,0) / ПродажиОбороты.КоличествоОборот - ЕСТЬNULL(ПартииТоваровНаСкладах.Стоимость,0) КАК Наценка
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&ДатаЦен,
	|			&ДатаЦен,
	|			Регистратор,
	|			Номенклатура В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Документ.РеализацияТоваровУслуг.Товары.Номенклатура
	|				ИЗ
	|					Документ.РеализацияТоваровУслуг.Товары
	|				ГДЕ
	|					Документ.РеализацияТоваровУслуг.Товары.Ссылка = &Регистратор)) КАК ПродажиОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|		ПО ПродажиОбороты.Номенклатура = ПартииТоваровНаСкладах.Номенклатура
	|			И ПродажиОбороты.Регистратор = ПартииТоваровНаСкладах.Регистратор
	|ГДЕ
	|	ПродажиОбороты.Регистратор = &Регистратор";
		
//+++(26.06.2013	
Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") 
 И НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
 
	Запрос.Текст ="ВЫБРАТЬ
	              |	ПродажиОбороты.Номенклатура.Код как Код, 
				  |	ПродажиОбороты.Номенклатура,
	              |	ЕСТЬNULL(ПартииТоваровНаСкладах.Количество,0) как Количество,
	              |	ЦеныНом.Цена * ПартииТоваровНаСкладах.Количество КАК Себестоимость,
	              |	ПродажиОбороты.СтоимостьОборот * ПартииТоваровНаСкладах.Количество / ПродажиОбороты.КоличествоОборот КАК Стоимость,
	              |	(ПродажиОбороты.СтоимостьОборот / ПродажиОбороты.КоличествоОборот - ЦеныНом.Цена) * ПартииТоваровНаСкладах.Количество КАК Наценка,
	              |	ВЫБОР
	              |		КОГДА ЦеныНом.Цена <> 0
	              |			ТОГДА ВЫРАЗИТЬ((ПродажиОбороты.СтоимостьОборот / ПродажиОбороты.КоличествоОборот / ЦеныНом.Цена - 1) * 100 КАК ЧИСЛО(15, 2))
	              |		ИНАЧЕ 100
	              |	КОНЕЦ КАК процентПрибыли
	              |ИЗ
	              |	РегистрНакопления.Продажи.Обороты(
	              |			&ДатаЦен,
	              |			&ДатаЦен,
	              |			Регистратор,
	              |			Номенклатура В
	              |				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |					Документ.РеализацияТоваровУслуг.Товары.Номенклатура
	              |				ИЗ
	              |					Документ.РеализацияТоваровУслуг.Товары
	              |				ГДЕ
	              |					Документ.РеализацияТоваровУслуг.Товары.Ссылка = &Регистратор)) КАК ПродажиОбороты
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	              |		ПО ПродажиОбороты.Номенклатура = ПартииТоваровНаСкладах.Номенклатура
	              |			И ПродажиОбороты.Регистратор = ПартииТоваровНаСкладах.Регистратор
	              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |			регСв.Номенклатура КАК Номенклатура,
	              |			ЕСТЬNULL(регСв.Цена, 0) КАК Цена
	              |		ИЗ
	              |			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	              |					&ДатаЦен,
	              |					ТипЦен = &ТипЦен
	              |						И Номенклатура В
	              |							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |								Документ.РеализацияТоваровУслуг.Товары.Номенклатура
	              |							ИЗ
	              |								Документ.РеализацияТоваровУслуг.Товары
	              |							ГДЕ
	              |								Документ.РеализацияТоваровУслуг.Товары.Ссылка = &Регистратор)) КАК регСв) КАК ЦеныНом
	              |		ПО ПродажиОбороты.Номенклатура = ЦеныНом.Номенклатура
	              |ГДЕ
	              |	ПродажиОбороты.Регистратор = &Регистратор";
				  
Запрос.Текст = стрЗаменить(Запрос.Текст, "ЦеныНом.Цена", 
	 			 "ВЫБОР 
				 |КОГДА ПартииТоваровНаСкладах.НОМЕНКЛАТУРА.ВидТовара = &Диски ТОГДА
				 |	ВЫБОР КОГДА ПартииТоваровНаСкладах.НОМЕНКЛАТУРА.производитель В (&СписокПроизводителей1) 
				 |		ТОГДА Выразить( ЦеныНом.Цена*(1-0.47) как число(15,2))
				 |        КОГДА	ПартииТоваровНаСкладах.НОМЕНКЛАТУРА.производитель=&Производитель2
				 |		ТОГДА Выразить( ЦеныНом.Цена*(1-0.30) как число(15,2))
				 |        КОГДА	ПартииТоваровНаСкладах.НОМЕНКЛАТУРА.производитель = &Производитель3
				 |		ТОГДА Выразить( ЦеныНом.Цена*(1-0.18) как число(15,2))
				 |		  ИНАЧЕ 
				 |			ЦеныНом.Цена
				//|			Выразить( ЦеныНом.Цена*(1-0.18) как число(15,2))
				 |	КОНЕЦ
				 |ИНАЧЕ Выразить( ПартииТоваровНаСкладах.Стоимость/(ВЫБОР 
				 |				КОГДА ЕстьNull(ПартииТоваровНаСкладах.Количество,0)=0 ТОГДА 1 
			 		|		    ИНАЧЕ ПартииТоваровНаСкладах.Количество 
					|			КОНЕЦ) как число(15,2) )
				 |КОНЕЦ");
	 Запрос.Параметры.Вставить("ДатаЦен",Регистратор.Дата);
	 Запрос.Параметры.Вставить("ТипЦен", справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008") ); //Базовая - 00008, Крупный опт - 00005
	 		 
	 Запрос.Параметры.Вставить("Диски",Перечисления.ВидыТоваров.Диски);
										 
	 СписокПроизводителей1 = новый СписокЗначений;  //LegeArtis, NZ
	 СписокПроизводителей1.Добавить(справочники.Производители.НайтиПоКоду(3072) );
	 СписокПроизводителей1.Добавить(справочники.Производители.НайтиПоКоду(65) );
	 СписокПроизводителей1.Добавить(справочники.Производители.НайтиПоКоду(68) );
	 СписокПроизводителей1.Добавить(справочники.Производители.НайтиПоКоду(517) );//NZ
	 Запрос.УстановитьПараметр("СписокПроизводителей1", СписокПроизводителей1); // -47%
	//TREBL
	Запрос.УстановитьПараметр("Производитель2", справочники.Производители.НайтиПоКоду(597) ); // -30%
	//ALCASTA
	Запрос.УстановитьПараметр("Производитель3", справочники.Производители.НайтиПоКоду(100) ); // -18%
КонецЕсли;
//+++)
   	 Запрос.Параметры.Вставить("ДатаЦен",Регистратор.Дата);
	Запрос.УстановитьПараметр("Регистратор", Регистратор);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.Номер = строка(СсылкаНаОбъект.Номер);   //06.06.2018
    ОбластьЗаголовок.Параметры.Дата = формат(СсылкаНаОбъект.Дата,"ДЛФ=D");
 	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);

	ВыборкаДетали = Результат.Выбрать();
	
	КоличествоИтог=0; СтоимостьИтог=0; СебестоимостьИтог=0; ном=0; код0=неопределено;
	Пока ВыборкаДетали.Следующий() Цикл
		код1 = ВыборкаДетали.Код;
		ном=ном+?(код0=код1,0,1); //есть повторы!
		код0=код1;
		ОбластьДетальныхЗаписей.Параметры.ном = ном; //06.06.2018
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей);
	КоличествоИтог=КоличествоИтог+ВыборкаДетали.Количество; 
	СтоимостьИтог =СтоимостьИтог+ВыборкаДетали.Стоимость;
	СебестоимостьИтог=СебестоимостьИтог+ВыборкаДетали.Себестоимость;
	КонецЦикла;

	ТабДок.Вывести(ОбластьПодвалТаблицы);
	//05.06.2018
	ОбластьПодвал.Параметры.Количество = КоличествоИтог;
	ОбластьПодвал.Параметры.Себестоимость = СебестоимостьИтог;
	ОбластьПодвал.Параметры.Стоимость = СтоимостьИтог;
	ОбластьПодвал.Параметры.НАЦЕНКА = СтоимостьИтог - СебестоимостьИтог;
	ОбластьПодвал.Параметры.ПроцентПрибыли = ?(СебестоимостьИтог=0,0,окр( 100*(СтоимостьИтог/СебестоимостьИтог - 1),2) );
	ТабДок.Вывести(ОбластьПодвал);

	// Информация о платежах
	
	ИтогоОплачено = 0;
	
	Запрос.Текст = "
	|Выбрать Регистратор как ДокументОплаты, Сумма(СуммаВзаиморасчетов) как Сумма Из 
	|РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|Где ВидДвижения=&Расход
	|И Сделка = &Сделка Сгруппировать по Регистратор";

	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("Сделка", СсылкаНаОбъект.Сделка);
	Результат = Запрос.Выполнить();
    Выб = Результат.Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокПлатежки");
	ОбластьЗаголовок.Параметры.ЗакПок = строка(СсылкаНаОбъект.Сделка);
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыПлатежей");
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	СтрокаПлат = Макет.ПолучитьОбласть("СтрокаПлатежки");
    ном=0;
	Пока Выб.Следующий() Цикл
		ном=ном+1;
		СтрокаПлат.Параметры.ном = ном; //06.06.2018
		СтрокаПлат.Параметры.ПП 		= Выб.ДокументОплаты;
		СтрокаПлат.Параметры.Дата 		= Формат(Выб.ДокументОплаты.Дата,"ДЛФ=DD");
		СтрокаПлат.Параметры.Сумма 		= Выб.Сумма;
		ИтогоОплачено 					= ИтогоОплачено + Выб.Сумма;
		ТабДок.Вывести(СтрокаПлат);
	КонецЦикла; 
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ИтогоПлат = Макет.ПолучитьОбласть("Итого");
	ИтогоПлат.Параметры.ИтогоОплачено = ИтогоОплачено;
	Если СтоимостьИтог=ИтогоОплачено тогда
		ИтогоПлат.Параметры.ПроцентИтого = "Полная оплата!";
	иначеЕсли ИтогоОплачено>0 и СтоимостьИтог>0 тогда
		ИтогоПлат.Параметры.ПроцентИтого = формат(100*ИтогоОплачено/СтоимостьИтог,"ЧДЦ=1")+" %";
	иначеЕсли ИтогоОплачено=0 тогда
		ИтогоПлат.Параметры.ПроцентИтого = "Нет оплат!";
	иначе
		ИтогоПлат.Параметры.ПроцентИтого = "";
	КонецЕсли;
	ТабДок.Вывести(ИтогоПлат);

    Возврат ТабДок;
	КонецФункции