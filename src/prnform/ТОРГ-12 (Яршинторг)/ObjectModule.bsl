
Функция Печать(НомерДокЛок = Неопределено) Экспорт
	
	Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ПеремещениеОТХ тогда
		 #Если Сервер тогда
			   #иначе   
				   Предупреждение("Для договора с типом <Перемещение ОТХ> ТОРГ-12 не требуется!");
			   #КонецЕсли
			Возврат "";

	КонецЕсли;
	
	Если ССылканаОбъект.Дата> Дата('20160504000000') и Найти(СсылканаОбъект.договорКонтрагента.Наименование,"*")=0 и СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.ШинтрейдЯрославль и СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.ФормулаАвтоПлюс и СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда
	   Если ССылканаОбъект.контрольСумма <> СсылкаНаОбъект.СуммаДокумента или  ССылканаОбъект.контрольКоличество <> СсылкаНаОбъект.Товары.Итог("Количество") Тогда
           СсылкаНаОбъект.ПолучитьОбъект().ПеренестиДокиВБухгалтерию();
		   Если ССылканаОбъект.контрольСумма <> СсылкаНаОбъект.СуммаДокумента или  ССылканаОбъект.контрольКоличество <> СсылкаНаОбъект.Товары.Итог("Количество") Тогда
			   #Если Сервер тогда
			   #иначе   
				   Предупреждение("Не совпадают с печатной формой сумма или количество документа. Обратитесь в бухгалтерию!");
			   #КонецЕсли
			Возврат "";
		   КонецЕсли;   
	   КонецЕсли;
	 
		попытка
			ЛокПолноеИмяФайла = КаталогВременныхФайлов()+СсылкаНаОбъект.Номер+".mxl";
			СсылкаНаОбъект.УПД.Получить().Записать(ЛокПолноеИмяФайла);
			ТабДок = Новый ТабличныйДокумент();
			ТабДок.Прочитать(КаталогВременныхфайлов()+СсылкаНаОбъект.Номер+".mxl");
			
			табДок.АвтоМасштаб = Истина;
			Табдок.ОтображатьСетку = истина;
			ТабДок.ТолькоПросмотр = Истина;
			//Попытка
				//ОбШтрихКод=ТабДок.Рисунки.Штрихкод.Объект ;
				//ОбШтрихКод.ТипКода = 4; 
				//ОбШтрихКод.Сообщение = СформироватьШКРеализации(СсылкаНаОбъект,"8");//XMLСтрока(ЭтотОбъект.Ссылка.УникальныйИдентификатор()); 
				//ОбШтрихКод.ОтображатьТекст = Ложь;
			//Исключение
			//Конецпопытки;
			Макет = ПолучитьМакет("Штрих");
			ОбластьШтриха = Макет.ПолучитьОбласть("Штрих");
			Рисунок = ОбластьШтриха.Рисунки.Штрихкод;
			Тд = Новый ТабличныйДокумент;
			ОбШтрихКод=ОбластьШтриха.Рисунки.Штрихкод.Объект ;
			ОбШтрихКод.ТипКода = 4; 
			ОбШтрихКод.Сообщение = СформироватьШКРеализации(СсылкаНаОбъект,"8");//XMLСтрока(ЭтотОбъект.Ссылка.УникальныйИдентификатор()); 
			ОбШтрихКод.ОтображатьТекст = Ложь;

			Тд.Вывести(ОбластьШтриха);
			ТД.Вывести(ТабДок);
			ВнестиКорректировки(ТД);
			
			ТД.Рисунки.D1.Верх = ТД.Рисунки.ШтрихКод.Верх;   
			ТД.Рисунки.D1.Лево = ТД.Рисунки.ШтрихКод.Лево; 
			тд.Рисунки.Удалить("Штрихкод");
			ТД.УдалитьОбласть(ТД.Область("Штрих"),ТипСмещенияТабличногоДокумента.ПоВертикали);
			Тд.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			ТД.АвтоМасштаб = Истина;
			ТД.ПолеСверху = 12;
			ТД.ПолеСлева = 0;
			ТД.ПолеСправа = 0;
			ТД.ПолеСнизу = 0;
			ТД.ОтображатьСетку = Ложь;
			ТД.ТолькоПросмотр = Истина;
			тд.ОтображатьЗаголовки = ложь;
			
			Возврат ТД;
		исключение
           СсылкаНаОбъект.ПолучитьОбъект().ПеренестиДокиВБухгалтерию();
	   конецпопытки;
	   
	    Если ССылканаОбъект.контрольСумма <> СсылкаНаОбъект.СуммаДокумента или  ССылканаОбъект.контрольКоличество <> СсылкаНаОбъект.Товары.Итог("Количество") Тогда
			#Если Сервер тогда
			#иначе 
				Предупреждение("Не совпадают с печатной формой сумма или количество документа. Обратитесь в бухгалтерию!");
			#КонецЕсли
		 Возврат "";
		КонецЕсли;

	иначе
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Значение,
		|	ЗначенияСвойствОбъектов.Объект
		|ПОМЕСТИТЬ ГосКонтракт
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Объект
		|	И ЗначенияСвойствОбъектов.Свойство.Код = ""90254""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Значение,
		|	ЗначенияСвойствОбъектов.Объект
		|ПОМЕСТИТЬ ЛС
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Объект
		|	И ЗначенияСвойствОбъектов.Свойство.Код = ""90253""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка,
		|	ГосКонтракт.Значение КАК Контракт,
		|	ЛС.Значение КАК ЛС
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГосКонтракт КАК ГосКонтракт
		|		ПО ДоговорыКонтрагентов.Ссылка = ГосКонтракт.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЛС КАК ЛС
		|		ПО ДоговорыКонтрагентов.Ссылка = ЛС.Объект
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Объект
		|	И ГосКонтракт.Значение <> """"";

	Запрос.УстановитьПараметр("Объект", СсылкаНаОбъект.ДоговорКонтрагента);

	Результат = Запрос.Выполнить().Выгрузить();


	ЕдиницаИзмеренияВеса = Константы.ЕдиницаИзмеренияВеса.Получить();
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СсылкаНаОбъект.Склад);
	Запрос.УстановитьПараметр("ТекущийДокумент",    СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата КАК ДатаДокумента,
	|	Организация,
	|	Организация КАК ЮрФизЛицо,
	|	Организация КАК Поставщик,
	|	Организация КАК Контрагент,
	|	Организация КАК Руководители,
	|	АдресДоставки КАК АдресДоставки,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	      ТОГДА ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|               	  ТОГДА Контрагент
	|					  ИНАЧЕ КонтрагентДляПечати КОНЕЦ
	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
	|	      ТОГДА Организация
	|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	|	БанковскийСчетОрганизации КАК БанковскийСчет,
	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|		  ТОГДА Контрагент
	|		  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Покупатель,
	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|		  ТОГДА Контрагент
	|		  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Плательщик,
	|	ДоговорКонтрагента.Представление  КАК Основание,
	|	ДоговорКонтрагента.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	Подразделение,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов      КАК Курс,
	|	КратностьВзаиморасчетов КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	НомерДоверенности,
	|	ДатаДоверенности,
	|	ОрганизацияВыдавшаяДоверенность,
	|	ФизЛицоДоверенности
	//|	ЧерезТК,
	//|	ОтгрузкаЧерезЧП
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг,
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|ПО
	|	ОтветственныеЛица.СтруктурнаяЕдиница = РеализацияТоваровУслуг.Склад
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	
	Если СсылкаНаОбъект.ВалютаДокумента = СсылкаНаОбъект.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		Запрос.УстановитьПараметр("Курс", СсылкаНаОбъект.КурсВзаиморасчетов);
		Запрос.УстановитьПараметр("Кратность", СсылкаНаОбъект.КратностьВзаиморасчетов);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		Запрос.УстановитьПараметр("Курс", 1);
		Запрос.УстановитьПараметр("Кратность", 1);
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
|"+	?(СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.ШинтрейдЯрославль, "
//+++ 04.03.2015 ---- Количество мест!
//	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление            КАК ВидУпаковки,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА ""уп"" 
	|			Иначе ВложенныйЗапрос.ЕдиницаИзмерения.Представление конец как ВидУпаковки,
	
//	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА выразить(ВложенныйЗапрос.Количество/ВложенныйЗапрос.КоличествоМест  как число(15,1))
	|			Иначе 1 конец как КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА 	ВложенныйЗапрос.КоличествоМест 
	|			Иначе ВложенныйЗапрос.Количество Конец  КАК КоличествоМест,",
	
" 	 ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление            КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
  |	0 как КоличествоМест,")+"	
	//|	ВЫБОР
	//|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА ВложенныйЗапрос.КоличествоМест * ВложенныйЗапрос.ЕдиницаИзмеренияМест.Вес
	//|		ИНАЧЕ ВложенныйЗапрос.Количество * ВложенныйЗапрос.ЕдиницаИзмерения.Вес
	//|	КОНЕЦ КАК Вес,
	|	ВложенныйЗапрос.Количество * ВложенныйЗапрос.ЕдиницаИзмерения.Вес КАК Вес,
//+++)	

	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.СтавкаНДС            КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                 КАК Цена,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.Сумма                КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС             КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка                КАК Метка
	|ИЗ
	|
	|	(
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест.Коэффициент     КАК КоэффициентМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры           КАК Характеристика,
	|		РеализацияТоваровУслуг.СерияНоменклатуры                    КАК Серия,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена * &Курс / &Кратность            КАК Цена,
	|		СУММА(РеализацияТоваровУслуг.Количество)                    КАК Количество,
	|		СУММА(РеализацияТоваровУслуг.КоличествоМест)                КАК КоличествоМест,
	|		СУММА(РеализацияТоваровУслуг.Сумма    * &Курс / &Кратность) КАК Сумма,
	|		СУММА(РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	|		МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки)                 КАК НомерСтроки,
	|		0                                                           КАК Метка
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры,
	|		РеализацияТоваровУслуг.СерияНоменклатуры,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена
	|
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номенклатура                  КАК Номенклатура,
	|	РеализацияТоваровУслуг.Содержание                    КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Номенклатура." + ТоварКод + " КАК ТоварКод,
	|	РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Представление,
	|РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код,
	|РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков,
	|NULL,
	|NULL,
	|0,
	|NULL,
	|NULL,
	|NULL,
	|РеализацияТоваровУслуг.СтавкаНДС,
	|РеализацияТоваровУслуг.Цена * &Курс / &Кратность,
	|РеализацияТоваровУслуг.Количество,
	|РеализацияТоваровУслуг.Сумма * &Курс / &Кратность,
	|РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность,
	|РеализацияТоваровУслуг.НомерСтроки,
	|1        
    |ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номенклатура                    КАК Номенклатура,
	|	ВЫРАЗИТЬ(РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Номенклатура." + ТоварКод + "   КАК ТоварКод,
	|РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Представление,
	|РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код,
	|РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков,
	|NULL,
	|NULL,
	|РеализацияТоваровУслуг.Количество * РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Вес,
	|NULL,
	|NULL,
	|NULL,
	|""Без НДС"",
	|РеализацияТоваровУслуг.Цена * &Курс / &Кратность,
	|РеализацияТоваровУслуг.Количество,
	|РеализацияТоваровУслуг.Сумма * &Курс / &Кратность,
	|0,
	|РеализацияТоваровУслуг.НомерСтроки,
	|2                                       
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВозвратнаяТара КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	ТабДокумент  = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_ТОРГ12_1";
	//Орлов ++
	Если СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00107")
			Или СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00107")
		Или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") //рнд
			Или СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") 
		Или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00112")
			Или СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00112") 
		Или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00122")
			Или СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00122") 
		Или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00138")
			Или СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00138") 
		Или СсылкаНаОбъект.Дата < Дата("20130401000000") Тогда
		Макет = ПолучитьМакет("ТОРГ12");
	Иначе
		Макет = ПолучитьМакет("ТОРГ12_ЯШТ");
	КонецЕсли;
	//Орлов --
	// Выводим общие реквизиты шапки
	
	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента,, Шапка.БанковскийСчет);	
	СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);	
	
	СведенияОПокупателе       = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	
	СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НомерДокумента = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента  = Шапка.ДатаДокумента;
	
	Попытка
	ОбШтрихКод=ОбластьМакета.Рисунки.Штрихкод.Объект;
	ОбШтрихКод.ТипКода = 4; 
	ОбШтрихКод.Сообщение = СформироватьШКРеализации(СсылкаНаОбъект,"1");//XMLСтрока(ЭтотОбъект.Ссылка.УникальныйИдентификатор()); 
	ОбШтрихКод.ОтображатьТекст = Ложь;
    Исключение
	Конецпопытки;
	//+++ 13.08.2012
	флОрг=истина;
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.Подразделение) тогда
		Если СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00106")  тогда //рнд
		  Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")=0 тогда//16-24.04.2018
			ОбластьМакета.Параметры.ПредставлениеОрганизации = "Филиал ЗАО ТК ""Яршинторг"", ИНН 7604069216, ОГРН 1047600418777, 344090, Ростовская обл., г. Ростов-на-Дону, ул. Доватора, д.154/5, тел.:(863)220-92-42";
			Если СсылкаНаОбъект.Дата>='20121001' тогда //+++ 26.10.2012
				ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбластьМакета.Параметры.ПредставлениеОрганизации 
				+"р/с 40702810800300004730 в банке ФИЛИАЛ ОАО БАНК ВТБ В Г.РОСТОВЕ-НА-ДОНУ БИК 046015999" ;
			иначе
				ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбластьМакета.Параметры.ПредставлениеОрганизации 
				+"р/с 40702810377030102956 в банке СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ БИК 047888670" ;
			КонецЕсли;
		  КонецЕсли;
			флОрг = ЗначениеЗаполнено(СсылкаНаОбъект.Грузоотправитель); //+++ 02/07/2013 - живой грузоотправитель
		КонецЕсли;
	иначеЕсли ЗначениеЗаполнено(СсылкаНаОбъект.Сделка.Подразделение) тогда
		Если  СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") тогда 
		Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")=0 тогда//16-24.04.2018
			ОбластьМакета.Параметры.ПредставлениеОрганизации = "Филиал ЗАО ТК ""Яршинторг"", ИНН 7604069216, ОГРН 1047600418777, 344090, Ростовская обл., г. Ростов-на-Дону, ул. Доватора, д.154/5, тел.:(863)220-92-42";
			Если СсылкаНаОбъект.Дата>='20121001' тогда //+++ 26.10.2012
				ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбластьМакета.Параметры.ПредставлениеОрганизации 
				+"р/с 40702810800300004730 в банке ФИЛИАЛ ОАО БАНК ВТБ В Г.РОСТОВЕ-НА-ДОНУ БИК 046015999" ;
			иначе
				ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбластьМакета.Параметры.ПредставлениеОрганизации 
				+"р/с 40702810377030102956 в банке СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ БИК 047888670" ;
			КонецЕсли;
			КонецЕсли;
			флОрг = ЗначениеЗаполнено(СсылкаНаОбъект.Грузоотправитель); //+++ 02/07/2013 - живой грузоотправитель
		КонецЕсли;
	КонецЕсли;
	
	
Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")=0 тогда//16-24.04.2018
	Если флОрг тогда
		Если Шапка.ЮрФизЛицо = Шапка.Грузоотправитель Тогда
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,"); // все реквизиты чтобы были
		Иначе
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		КонецЕсли;
	КонецЕсли;
	
	//+++( 30.03.2012
	//ОбластьМакета.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
	Если ЗначениеЗаполнено(СсылкаНаОбъект.Подразделение) тогда
		//+++ 13.08.2012
		Если СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") тогда //рнд
			ОбластьМакета.Параметры.ПредставлениеПодразделения = "Филиал ЗАО ТК ""Яршинторг"" по адресу: 344090, Ростовская обл., г. Ростов-на-Дону, ул. Доватора, д.154/5";
		иначе
			ОбластьМакета.Параметры.ПредставлениеПодразделения = строка(СсылкаНаОбъект.Подразделение);
		КонецЕсли;
		
	иначеЕсли ЗначениеЗаполнено(СсылкаНаОбъект.Сделка.Подразделение) тогда
		//+++ 13.08.2012
		Если СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") тогда 
			ОбластьМакета.Параметры.ПредставлениеПодразделения = "Филиал ЗАО ТК ""Яршинторг"" по адресу: 344090, Ростовская обл., г. Ростов-на-Дону, ул. Доватора, д.154/5";
		иначе
			ОбластьМакета.Параметры.ПредставлениеПодразделения = строка(СсылкаНаОбъект.Сделка.Подразделение);
		КонецЕсли;
		
	иначе
		ОбластьМакета.Параметры.ПредставлениеПодразделения = "";
	КонецЕсли;
	//+++)
	
	Если СокрЛП(Шапка.АдресДоставки) <> "" Тогда
		ПредставлениеГрузополучателяДоАдреса    = ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН,КПП,");
		ПредставлениеГрузополучателяПослеАдреса = ОписаниеОрганизации(СведенияОГрузополучателе, "Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ?(СокрЛП(ПредставлениеГрузополучателяДоАдреса) = "", "", ПредставлениеГрузополучателяДоАдреса+", ") + Шапка.АдресДоставки+?(СокрЛП(ПредставлениеГрузополучателяПослеАдреса)="", "", ", "+ПредставлениеГрузополучателяПослеАдреса);
	Иначе
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПредставлениеПоставщика  = ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,КПП,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");//+++ 05.12.2012 КоррСчет
	ОбластьМакета.Параметры.ПредставлениеПлательщика = ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,ИНН,КПП,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	//+Лукьяненков 2017.10.09
	
	Если СсылкаНаОбъект.Контрагент.Экспорт Тогда
		Если Найти(ОбластьМакета.Параметры.ПредставлениеГрузополучателя, "БИК") Тогда
		Иначе
			ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ОбластьМакета.Параметры.ПредставлениеГрузополучателя+", БИК "+СсылкаНаОбъект.Контрагент.ОсновнойБанковскийСчет.Банк.СвифтКод;
			ОбластьМакета.Параметры.ПредставлениеПлательщика = ОбластьМакета.Параметры.ПредставлениеПлательщика+", БИК "+СсылкаНаОбъект.Контрагент.ОсновнойБанковскийСчет.Банк.СвифтКод;
		КонецЕсли;
	КонецЕсли;
	
	//-Лукьяненков 2017.10.09
	
	
	//+++ 24.11.2014 - название договора - комиссии, поставки или для прочего - название...!
	назвДог = ?(СсылкаНаОбъект.ДоговорКонтрагента.ВидДоговора = перечисления.ВидыДоговоровКонтрагентов.СКомиссионером,"Договор комиссии",
				?(СсылкаНаОбъект.ДоговорКонтрагента.ВидДоговора = перечисления.ВидыДоговоровКонтрагентов.Прочее, 
				     СсылкаНаОбъект.ДоговорКонтрагента.Наименование, "Договор поставки"));
					 
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента) И ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента.Номер) И  ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента.Дата) Тогда
		ОбластьМакета.Параметры.Основание = назвДог+" №"+СсылкаНаОбъект.ДоговорКонтрагента.Номер+" от "+Формат(СсылкаНаОбъект.ДоговорКонтрагента.Дата,"ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.ОснованиеНомер        = СсылкаНаОбъект.ДоговорКонтрагента.Номер;
		ОбластьМакета.Параметры.ОснованиеДата         = Формат(СсылкаНаОбъект.ДоговорКонтрагента.Дата,"ДФ=dd.MM.yyyy");
	Иначе
		ОбластьМакета.Параметры.Основание = назвДог;
		ОбластьМакета.Параметры.ОснованиеНомер        = "";
		ОбластьМакета.Параметры.ОснованиеДата         = "";
	КонецЕсли;	
	попытка 
		ОбластьМакета.Параметры.Основание =ОбластьМакета.Параметры.Основание + ". Дата оплаты: "+ Формат(ССылкаНаОбъект.Сделка.ДатаОплаты,"ДФ=dd.MM.yyyy");
	Исключение
	конецпопытки;	
	
	// Выводим всевозможные коды
	ОбластьМакета.Параметры.ОрганизацияПоОКПО     = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ВидДеятельностиПоОКДП = "";
	ОбластьМакета.Параметры.ГрузополучательПоОКПО = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПоставщикПоОКПО       = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО      = СведенияОПокупателе.КодПоОКПО;
	Если СсылкаНаОбъект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00106") Тогда//рнд
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = Шапка.Номер;
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = Формат(Шапка.ДатаДокумента, "ДФ=dd.MM.yyyy");
	Иначе
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
	КонецЕсли;
	
	//2013.11.14
	Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда //ФормулаАвто
			//+++( 27.07.2017  - реальные данные из карточки Контрагента
				ФормулаАвто = Справочники.Контрагенты.НайтиПоКоду("92705");
				сведенияФА  = СведенияОЮрФизЛице(ФормулаАвто, СсылкаНаОбъект.Дата);
				Если Результат.Количество() > 0 Тогда 
					Если ЗначениеЗаполнено(Результат[0].ЛС) Тогда
					сведенияФА.ПолноеНаименование = "УФК по Ярославской Области (" +сведенияФА.ПолноеНаименование + " , л/с " + Результат[0].ЛС + ")";
					сведенияФА.НомерСчета  = "р/с 40501810878881000001";
					сведенияФА.Банк  = "в банке ОТДЕЛЕНИЕ ЯРОСЛАВЛЬ";
					сведенияФА.БИК  = "БИК 04788800";
					КонецЕсли;
				КонецЕсли;
				
		если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //+++ 16.04.2018 Задача № 44778 
			парам = ОписаниеОрганизации(сведенияФА, "ПолноеНаименование,");
		иначе
			парам = ОписаниеОрганизации(сведенияФА, "ПолноеНаименование,ИНН,КПП,ФактическийАдрес,НомерСчета,Банк,БИК,КоррСчет,");
		КонецЕсли;	
			Областьмакета.Параметры.ПредставлениеОрганизации = парам;
			Областьмакета.Параметры.ПредставлениеПоставщика  = парам;
			//+++)

		//25.09.14 Смирнов для ФА договор с датой и номером (Артемьева)
		ОбластьМакета.Параметры.Основание = "Договор (с покупателем) №"+СсылкаНаОбъект.ДоговорКонтрагента.Номер+" от "+Формат(СсылкаНаОбъект.ДоговорКонтрагента.Дата,"ДФ=dd.MM.yyyy");
		//ОбластьМакета.Параметры.Основание = "Договор (с покупателем)";
		ОбластьМакета.Параметры.ОрганизацияПоОКПО = "30968584";
		ОбластьМакета.Параметры.ПоставщикПоОКПО   = "30968584";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
		ОбластьМакета.Параметры.ОснованиеНомер = "";
		ОбластьМакета.Параметры.ОснованиеДата = "";
		Если СсылкаНаОбъект.НомерФормулаАвто = 0 Тогда
			НомерДокумента = ЭтотОбъект.ПолучитьФорму("ВводНомераФормулаАвто").ОткрытьМодально();
		Иначе
			НомерДокумента = СсылкаНаОбъект.НомерФормулаАвто;
			сообщить("Отгрузка по организации Формула Авто, номер документа берется из реквизита документа ""Номер Формула Авто"" в закладке ""Дополнительно""");
		КонецЕсли;  
		Если Результат.Количество()>0 Тогда
			
			ОбластьМакета.Параметры.НомерДокумента  = СтрЗаменить(Строка(Результат[0].Контракт)+"/" +Строка(НомерДокумента), Символы.НПП,"");
		Иначе
			ОбластьМакета.Параметры.НомерДокумента  = СтрЗаменить(Строка(НомерДокумента), Символы.НПП,"");
		КонецЕсли;

	//13.08.15	Алексеева А
ИначеЕсли СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда //ФормулаАвто
	
			//+++( 27.07.2017 - реальные данные из карточки Контрагента - изменился Банк
				ФормулаАвтоПлюс = Справочники.Контрагенты.НайтиПоКоду("92797");
								сведенияФАПлюс  = СведенияОЮрФизЛице(ФормулаАвтоПлюс, СсылкаНаОбъект.Дата);
								//Вставить("ПолноеНаименование", Данные.ПолноеНаименование);
								Если Результат.Количество()>0 Тогда
									Если ЗначениеЗаполнено(Результат[0].ЛС) Тогда
									сведенияФАПлюс.ПолноеНаименование = "УФК по Ярославской Области (" +сведенияФАПлюс.ПолноеНаименование + " , л/с " + Результат[0].ЛС+")";
									сведенияФАПлюс.НомерСчета  = "40501810878881000001";
									сведенияФАПлюс.Банк  = "ОТДЕЛЕНИЕ ЯРОСЛАВЛЬ";
									сведенияФАПлюс.БИК  = "04788800";
									сведенияФАПлюс.КоррСчет  = "";
									КонецЕсли;
                                КонецЕсли;
		если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //+++ 16.04.2018 Задача № 44778 
			парам = ОписаниеОрганизации(сведенияФАПлюс, "ПолноеНаименование,");
		иначе	
			парам = ОписаниеОрганизации(сведенияФАПлюс, "ПолноеНаименование,ИНН,КПП,ФактическийАдрес,НомерСчета,Банк,БИК,КоррСчет,");
		КонецЕсли;	
			Областьмакета.Параметры.ПредставлениеОрганизации = парам;
			Областьмакета.Параметры.ПредставлениеПоставщика  = парам;
			//+++)
			
		
	
	
		//ОбластьМакета.Параметры.Основание ="Договор продажи № "+СсылкаНаОбъект.ДоговорКонтрагента.Номер+" от "+ Формат (СсылкаНаОбъект.ДоговорКонтрагента.Дата,"ДЛФ=Д");
		ОбластьМакета.Параметры.Основание = ПолучитьОписаниеДоговораФАП(СсылкаНаОбъект.ДоговорКонтрагента);
		
		Если Результат.Количество()>0 Тогда
			ОбластьМакета.Параметры.Основание = Строка(ОбластьМакета.Параметры.Основание) +",идентификатор гос. контракта " + Результат[0].Контракт;
		КонецЕсли;

		ОбластьМакета.Параметры.ОрганизацияПоОКПО = "30968561";
		ОбластьМакета.Параметры.ПоставщикПоОКПО   = "30968561";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
		ОбластьМакета.Параметры.ОснованиеНомер = "";
		ОбластьМакета.Параметры.ОснованиеДата = "";
		Если СсылкаНаОбъект.НомерФормулаАвто = 0 Тогда
			НомерДокумента = ЭтотОбъект.ПолучитьФорму("ВводНомераФормулаАвтоПлюс").ОткрытьМодально();
		Иначе
			НомерДокумента = СсылкаНаОбъект.НомерФормулаАвто;
			сообщить("Отгрузка по организации Формула Авто Плюс, номер документа берется из реквизита документа ""Номер Формула Авто Плюс"" в закладке ""Дополнительно""");
		КонецЕсли;
		
		Если Результат.Количество()>0 Тогда
			
			ОбластьМакета.Параметры.НомерДокумента  = СтрЗаменить(Строка(Результат[0].Контракт)+"/" +Строка(НомерДокумента), Символы.НПП,"");
		Иначе
			ОбластьМакета.Параметры.НомерДокумента  = СтрЗаменить(Строка(НомерДокумента), Символы.НПП,"");
		КонецЕсли;
		
		//ОЛ 29.01.2015 для экспорта
	ИначеЕсли СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда //Шинтрейд Ярославль
		Если СсылкаНаОбъект.Дата < '20150402000000' Тогда
			Областьмакета.Параметры.ПредставлениеПоставщика = "Общество с ограниченной ответственностью ""ШинТрейд Ярославль"", ИНН 7604090169, 150049, Ярославская обл, Ярославль г, Лисицына ул, дом № 7, р/с 40702810477030004491, в банке СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ, БИК 047888670, к/с 30101810500000000670";
		Иначе
		//со  2 апреля 2015 г. изменился адрес
			если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //+++ 16.04.2018 Задача № 44778 
			Областьмакета.Параметры.ПредставлениеПоставщика = "Общество с ограниченной ответственностью ""ШинТрейд Ярославль""";
			иначе
			Областьмакета.Параметры.ПредставлениеПоставщика = "Общество с ограниченной ответственностью ""ШинТрейд Ярославль"", ИНН 7604090169, 150014, Ярославская обл, Ярославль г, Салтыкова-Щедрина ул, дом № 21, офис 507, р/с 40702810477030004491, в банке СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ, БИК 047888670, к/с 30101810500000000670";
			КонецЕсли;
		КонецЕсли;
		ОбластьМакета.Параметры.Основание = "Контракт №"+СсылкаНаОбъект.ДоговорКонтрагента.Номер+" от "+Формат(СсылкаНаОбъект.ДоговорКонтрагента.Дата,"ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.ПоставщикПоОКПО   = "0095770226";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
		ОбластьМакета.Параметры.ОснованиеНомер = "";
		ОбластьМакета.Параметры.ОснованиеДата = "";
		РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",Шапка.Покупатель,Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента));
		Если СокрЛП(Шапка.Грузополучатель.НаименованиеИННэкспорт)<>"" Тогда
			//В Белоруссии не ИНН, а УНП, в Казахстане - БИН
			ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя," ИНН "," "+СокрЛП(Шапка.Грузополучатель.НаименованиеИННэкспорт)+" ");
		Иначе
			сообщить("Не заполнено наименование налогового признака в грузополучателе. В сведениях о грузополучателе вместо ИНН должно печататься БИН, УНП иили др.");
		КонецЕсли;
		Если СокрЛП(Шапка.Покупатель.НаименованиеИННэкспорт)<>"" Тогда
			ОбластьМакета.Параметры.ПредставлениеПлательщика = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеПлательщика," ИНН "," "+СокрЛП(Шапка.Покупатель.НаименованиеИННэкспорт)+" ");
		Иначе
			сообщить("Не заполнено наименование налогового признака в покупателе. В сведениях о покупателе вместо ИНН должно печататься БИН, УНП иили др.");
		КонецЕсли;
		
		Если СсылкаНаОбъект.НомерФормулаАвто = 0 Тогда
			НомерДокумента = ЭтотОбъект.ПолучитьФорму("ВводНомераШинтрейд").ОткрытьМодально();
			
		Иначе
			НомерДокумента = СсылкаНаОбъект.НомерФормулаАвто;
			сообщить("Отгрузка по организации Шинтрейд Ярославль, номер документа берется из реквизита документа ""Номер Шинтрейд Яр."" в закладке ""Дополнительно""");
		КонецЕсли;
		
		ОбластьМакета.Параметры.НомерДокумента  = СтрЗаменить(Строка(НомерДокумента), Символы.НПП,"");
	КонецЕсли;
КонецЕсли;	//*
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	СтрокНаСтранице = 20;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();
	
	Если КоличествоСтрок <= 2 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	// инициализация итогов по странице
	ИтогоМассаБруттоНаСтранице = 0;
	ИтогоМестНаСтранице        = 0;
	ИтогоКоличествоНаСтранице  = 0;
	ИтогоСуммаНаСтранице       = 0;
	ИтогоНДСНаСтранице         = 0;
	ИтогоСуммаСНДСНаСтранице   = 0;
	
	// инициализация итогов по документу
	ИтогоМассаБрутто = 0;
	ИтогоМест        = 0;
	ИтогоКоличество  = 0;
	ИтогоСуммаСНДС   = 0;
	ИтогоСумма       = 0;
	ИтогоНДС         = 0;
	Ном              = 0;
	
	массивСлов=Новый Массив();
	СтрокаДляДисковБезЛоготипов="";
	
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		Если ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Ном           = Ном + 1;
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			
			ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
			
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// очистим итоги по странице
			ИтогоМассаБруттоНаСтранице = 0;
			ИтогоМестНаСтранице        = 0;
			ИтогоКоличествоНаСтранице  = 0;
			ИтогоСуммаНаСтранице       = 0;
			ИтогоНДСНаСтранице         = 0;
			ИтогоСуммаСНДСНаСтранице   = 0;
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.Номер             = ЗапросТовары.Индекс(ВыборкаСтрок) + 1;
		//++Смирнов для Лагерной и Радуга Питер убираем LegeArtis
		Если Шапка.Покупатель.Код="93136  " 
			//+++ 09.03.2016 убрано по просьбе Алии (и Егора)  или  Шапка.Покупатель.Код="91777  "    
			тогда
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(СтрЗаменить(ВыборкаСтрок.ТоварНаименование,"LegeArtis",""))
			+ ПредставлениеСерий(ВыборкаСтрок)
			+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
		ИначеЕсли СокрЛП(Шапка.Покупатель.Код) = "91777" Тогда //***2016.04.06 Радуга Питер
			//При печати LegeArtis нужно выводить аналог TopDriver
			Если ВыборкаСтрок.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду("3333") Тогда //REPLICA TD
				ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование)
				+ ПредставлениеСерий(ВыборкаСтрок)
				+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "") + " (Top Driver)";
			ИначеЕсли ВыборкаСтрок.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду("65") Тогда //REPLICA
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ДискLA", ВыборкаСтрок.Номенклатура);
				Запрос.Текст = "ВЫБРАТЬ
				               |	СоответствиеLegeArtisTopDriver.ДискTD
				               |ИЗ
				               |	РегистрСведений.СоответствиеLegeArtisTopDriver КАК СоответствиеLegeArtisTopDriver
				               |ГДЕ
				               |	СоответствиеLegeArtisTopDriver.ДискLA = &ДискLA";
				ВыборкаTD = Запрос.Выполнить().Выбрать();
				Если ВыборкаTD.Следующий() Тогда
					ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(СтрЗаменить(ВыборкаСтрок.ТоварНаименование,"LegeArtis",""))
					+ ПредставлениеСерий(ВыборкаСтрок)
					+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "") + " (ан. Top Driver " + ВыборкаTD.ДискTD.Код + ")";
				Иначе  //типовой вариант
					ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование)
					+ ПредставлениеСерий(ВыборкаСтрок)
					+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
				КонецЕсли;
			Иначе
				ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование)
				+ ПредставлениеСерий(ВыборкаСтрок)
				+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
			КонецЕсли;
		Иначе
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование)
			+ ПредставлениеСерий(ВыборкаСтрок)
			+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
		КонецЕсли;
		
		Если ЗначениеНеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
			МассаБрутто = 0;
		Иначе
			МассаБрутто = ВыборкаСтрок.Вес;
			МассаБрутто = ?(МассаБрутто <> Неопределено И МассаБрутто <> NULL, МассаБрутто, 0);
		КонецЕсли;
		
		Мест        = ВыборкаСтрок.КоличествоМест;
		Мест        = ?(Мест <> Неопределено И Мест <> NULL, Мест, 0);
		
		//+Лукьяненков 28.08.2017
		//Добавил заполнение массы нетто
		Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда
			Если ВыборкаСтрок.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
				парам1   = ВыборкаСтрок.Номенклатура.Типоразмер;
				ЭтоЛитойДиск = ВыборкаСтрок.Номенклатура.ПринадлежитЭлементу(Справочники.Номенклатура.НайтиПоКоду("0001753"));
				ДваВОдном = ВыборкаСтрок.КоличествоМест/ВыборкаСтрок.Количество;
				//ВесНетто = Строка.ВесБрутто - ВесУпаковки(парам1, ЭтоЛитойДиск) * Строка.Количество * ?(ДваВОдном=0,1,ДваВОдном); 
				//не опнятно как рассчитывать вес, если кол.мест не равно 0
				КоличествоНетто = ВыборкаСтрок.Вес - ВесУпаковки(парам1, ЭтоЛитойДиск) * ВыборкаСтрок.Количество; 
			Иначе
				КоличествоНетто = ВыборкаСтрок.Вес;
			КонецЕсли;
		Иначе
			КоличествоНетто = ВыборкаСтрок.Количество;
		КонецЕсли;
		
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = (ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС));
		СуммаНДС    = ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС = СуммаСНДС  - СуммаНДС;
		
		ОбластьМакета.Параметры.Количество 	= КоличествоНетто;
		ОбластьМакета.Параметры.МассаБрутто = МассаБрутто;
		ОбластьМакета.Параметры.СуммаСНДС   = СуммаСНДС;
		ОбластьМакета.Параметры.СуммаНДС    = СуммаНДС;
		ОбластьМакета.Параметры.СтавкаНДС   = ВыборкаСтрок.СтавкаНДС;
		ОбластьМакета.Параметры.СуммаБезНДС = СуммаБезНДС;
		попытка
		   ОбластьМакета.Параметры.Цена        = СуммаБезНДС / ?(Количество = 0, 1, Количество);
	    исключение
		   ОбластьМакета.Параметры.Цена        = СуммаБезНДС;
		КонецПопытки;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице + МассаБрутто;
		ИтогоМестНаСтранице        = ИтогоМестНаСтранице        + Мест;
		ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + КоличествоНетто;
		ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице       + СуммаБезНДС;
		ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + СуммаНДС;
		ИтогоСуммаСНДСНаСтранице   = ИтогоСуммаСНДСНаСтранице   + СуммаСНДС;
		
		// увеличим итоги по дукументу
		ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБрутто;
		ИтогоМест        = ИтогоМест        + Мест;
		ИтогоКоличество  = ИтогоКоличество  + КоличествоНетто;
		ИтогоСумма       = ИтогоСумма       + СуммаБезНДС;
		ИтогоНДС         = ИтогоНДС         + СуммаНДС;
		ИтогоСуммаСНДС   = ИтогоСуммаСНДС   + СуммаСНДС;
		
		массивСлов.Очистить();
		ПолучитьМассивСлов(ВыборкаСтрок.Номенклатура.Наименование,массивСлов);
		Если массивСлов.Количество()>=3 и массивСлов[0]="YST" и  массивСлов[1]="Replika" Тогда
			// смотрим, чтобы в строке НЕ БЫЛО уже указано таких моделей
			Если Найти(СтрокаДляДисковБезЛоготипов,массивСлов[2])=0 Тогда
				Если СтрДлина(СтрокаДляДисковБезЛоготипов)=0 Тогда
					СтрокаДляДисковБезЛоготипов=массивСлов[2];
				Иначе
					СтрокаДляДисковБезЛоготипов=СтрокаДляДисковБезЛоготипов+", "+массивСлов[2];
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
		
	КонецЦикла;
	
	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
	ОбластьМакета.Параметры.ИтогМест        = ИтогоМест;
	ОбластьМакета.Параметры.ИтогКоличество  = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогСуммы       = ИтогоСумма;
	ОбластьМакета.Параметры.ИтогНДС         = ИтогоНДС;
	ОбластьМакета.Параметры.ИтогСуммыСНДС   = ИтогоСуммаСНДС;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	Если НЕ СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда //ФормулаАвто
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвФАП");
	КонецЕсли;
	
	Если СтрДлина(СтрокаДляДисковБезЛоготипов)>0 Тогда
		ОбластьМакета.Параметры.НадписьДискиБезЛоготипов="Диски "+СтрокаДляДисковБезЛоготипов+ " поставляются без логотипов.";
	Иначе
		ОбластьМакета.Параметры.НадписьДискиБезЛоготипов="";
	КонецЕсли;
	
Если Найти(ссылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")=0 тогда	//*
	
	//Доверенность
	ОбластьМакета.Параметры.НомерДоверенности = Шапка.НомерДоверенности;
	ОбластьМакета.Параметры.ДатаДоверенности  = Шапка.ДатаДоверенности;
	ОбластьМакета.Параметры.КемВыдана 		  = Шапка.ОрганизацияВыдавшаяДоверенность.НаименованиеПолное;
	ОбластьМакета.Параметры.КомуВыдана 		  = Шапка.ФизЛицоДоверенности;
	
	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	
	//	ОбластьМакета.Параметры.ФИОРуководителя       = Руководитель;
	//	ОбластьМакета.Параметры.ФИОГлавБухгалтера     = Бухгалтер;
	
	ОбластьМакета.Параметры.ДатаДокумента=Формат(Шапка.ДатаДокумента,"ДЛФ=DD");
	
	ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;	
	
	
	ФамилияИмяОтчествоФизЛица                     = ФамилияИмяОтчество(Шапка.ОтветственноеЛицо, Шапка.ДатаДокумента);
	//	ФамилияИмяОтчествоКладовщика                  = ФамилияИмяОтчествоФизЛица.Фамилия + " " + ФамилияИмяОтчествоФизЛица.Имя + " " + ФамилияИмяОтчествоФизЛица.Отчество;
	//	ОбластьМакета.Параметры.ФИОКладовщика         = ФамилияИнициалыФизЛица(ФамилияИмяОтчествоКладовщика);
	
	//+++ 30.03.2012
	
	Если  СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда 
			
		Ответств = СсылкаНаОбъект.Ответственный;
		ОбластьМакета.Параметры.ФИОразрешил = Ответств;
		ОбластьМакета.Параметры.ДолжностьРуководителя = "";
		
		ОбластьМакета.Параметры.ФИОпроизвел = Ответств;
		ОбластьМакета.Параметры.ДолжностьКладовщика = "";
		
		ОбластьМакета.Параметры.Доверенность1 = "Имеет право подписи:"; // бух = рук
		ОбластьМакета.Параметры.Доверенность2 = "Невежина Ирина Николаевна по доверенности № 30 от 05.12.2016";
		Если СсылкаНаОбъект.Дата > Дата('20171106000000') Тогда //Лукьяненков 06.11.2017
			ОбластьМакета.Параметры.Доверенность3 = "Ловыгина Елена Игоревна по доверенности № 611 от 02.11.2017";
		Иначе
			ОбластьМакета.Параметры.Доверенность3 = "Рыгачева Татьяна Николаевна по доверенности № 29 от 05.12.2016";
		КонецЕсли;
		
	ИначеЕсли ( СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00107") )
		или ( СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00107") ) тогда
		//ПредставлениеПодразделения
		ОбластьМакета.Параметры.ФИОразрешил = "Войновская Н.Р.";
		ОбластьМакета.Параметры.ФИОглБух	= "Войновская Н.Р.";
		ОбластьМакета.Параметры.ФИОпроизвел = "Войновская Н.Р.";
		ОбластьМакета.Параметры.Доверенность1 = "Руководитель обособленного подразделения г.Москва Войновская Н.Р. на основании приказа по ЗАО ТК ""Яршинторг"" №______ от ___.____._____г.";
		ОбластьМакета.Параметры.Доверенность2 = "";
		ОбластьМакета.Параметры.Доверенность3 = "";
	иначеЕсли ( СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") ) //рнд
		или ( СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") ) тогда   //+++ 13.08.2012
		//ПредставлениеПодразделения
		Отбор1 = новый Структура;
		Отбор1.Вставить("Подразделение",справочники.Подразделения.НайтиПоКоду("00106"));
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
		регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
		регСведГлБух = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		ОбластьМакета.Параметры.ФИОразрешил = регСведГлБух.ФизическоеЛицо; //Жилин А.В.";      
		ОбластьМакета.Параметры.ДолжностьРуководителя = регСведГлБух.Должность;//"Глав.бух.ф-ла г. Ростов-на-Дону";
		
		ОбластьМакета.Параметры.ФИОглБух	= регСведГлБух.ФизическоеЛицо; //Иноземцева Н.И.";
		ОбластьМакета.Параметры.ФИОпроизвел = регСведГлБух.ФизическоеЛицо; //Жилин А.В.";
		ОбластьМакета.Параметры.Доверенность1 = регСведРук.Должность+" "+строка(регСведРук.ФизическоеЛицо)+", действующий  на основании "+регСведРук.Доверенность; // 186 от 10 августа 2012
		ОбластьМакета.Параметры.Доверенность2 = регСведГлБух.Должность+" "+строка(регСведГлБух.ФизическоеЛицо)+", действующий  на основании "+регСведГлБух.Доверенность;
		ОбластьМакета.Параметры.ДолжностьКладовщика = регСведГлБух.Должность;
		
	//+++( 26.11.2013 - по ответственному 
		//Если СсылкаНаОбъект.Дата>='20131031' и СсылкаНаОбъект.Ответственный = Справочники.Пользователи.НайтиПоКоду("Михалева Е. А.") Тогда
		//ОбластьМакета.Параметры.Доверенность3 = "Оператор ПК-менеджер филиала в г. Ростов-На-Дону Михалева Е.А., действующий на основании Доверенности №253 от 31 октября 2013г.";
		//	ОбластьМакета.Параметры.ФИОразрешил = "Михалева Е.А.";
		//	ОбластьМакета.Параметры.ФИОглБух    = "Михалева Е.А.";
		//	ОбластьМакета.Параметры.ФИОпроизвел = "Михалева Е.А.";
		//	ОбластьМакета.Параметры.ДолжностьРуководителя = "Оператор ПК-менеджер";
		//	ОбластьМакета.Параметры.ДолжностьКладовщика   = "Оператор ПК-менеджер";
		//КонецЕсли;
		Если СсылкаНаОбъект.Дата>='20131031' Тогда // ТРОЕ - каждый - за всех!
			
			Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир);
			регСведКассир = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
			
			//			"Оператор ПК-менеджер филиала в г. Ростов-На-Дону Михалева Е.А., действующий на основании Доверенности №253 от 31 октября 2013г.";
			ОбластьМакета.Параметры.Доверенность3 = регСведКассир.Должность+" "+строка(регСведКассир.ФизическоеЛицо)+", действующий  на основании "+регСведКассир.Доверенность;
			
			Если регСведРук.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
				регСведРнД = регСведРук;
			ИначеЕсли регСведГлБух.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
				регСведРнД = регСведГлБух;
			ИначеЕсли регСведКассир.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
				регСведРнД = регСведКассир;
			Иначе
				регСведРнД = новый Структура("ФизическоеЛицо, Должность, Доверенность","","",""); 
			КонецЕсли;
			// 1 за всех 
			Если НЕ регСведРнД.ФизическоеЛицо = "" Тогда  //***2016.04.18 добавлено условие
				ОбластьМакета.Параметры.ФИОразрешил = регСведРнД.ФизическоеЛицо.Наименование;
				ОбластьМакета.Параметры.ФИОглБух    = регСведРнД.ФизическоеЛицо.Наименование;
				ОбластьМакета.Параметры.ФИОпроизвел = регСведРнД.ФизическоеЛицо.Наименование;
			КонецЕсли;
			ОбластьМакета.Параметры.ДолжностьРуководителя = регСведРнД.Должность;
			ОбластьМакета.Параметры.ДолжностьКладовщика   = регСведРнД.Должность;
		КонецЕсли;
		//+++)

	иначеЕсли  СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00112") 
		или  СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00112") тогда   //+++ 30.07.2013
		//ПредставлениеПодразделения
		Отбор1 = новый Структура;
		Отбор1.Вставить("Подразделение",справочники.Подразделения.НайтиПоКоду("00112"));
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
		регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир);
		регСведГлБух = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		ОбластьМакета.Параметры.ФИОразрешил = регСведРук.ФизическоеЛицо; //Жилин А.В.";      
		ОбластьМакета.Параметры.ДолжностьРуководителя = регСведРук.Должность;
		
		ОбластьМакета.Параметры.ФИОглБух	= регСведРук.ФизическоеЛицо; 
		
		//Кладовщик = ПолучитьКладовщика(); //+++ 01.08.2013
		ОбластьМакета.Параметры.ФИОпроизвел = строка(регСведГлБух.ФизическоеЛицо);
		ОбластьМакета.Параметры.ДолжностьКладовщика = регСведГлБух.Должность;
		
		ОбластьМакета.Параметры.Доверенность1 = регСведРук.Должность+" "+строка(регСведРук.ФизическоеЛицо)+", действующий  на основании "+регСведРук.Доверенность;
		ОбластьМакета.Параметры.Доверенность2 = регСведГлБух.Должность+" "+строка(регСведГлБух.ФизическоеЛицо)+", действующий  на основании "+регСведГлБух.Доверенность;
		ОбластьМакета.Параметры.Доверенность3 = "";
		
ИначеЕсли  СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00122")
			Или СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00122") тогда // 23.07.2014
			
		//ПредставлениеПодразделения
		Отбор1 = новый Структура;
		Отбор1.Вставить("Подразделение",справочники.Подразделения.НайтиПоКоду("00122"));
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
		регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
		регСведГлБух = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир);
		регСведКладовщик = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
	
		ОбластьМакета.Параметры.ФИОразрешил = регСведРук.ФизическоеЛицо; //Жилин А.В.";      
		ОбластьМакета.Параметры.ДолжностьРуководителя = регСведРук.Должность;//"Глав.бух.ф-ла г. Ростов-на-Дону";
		
		ОбластьМакета.Параметры.ФИОглБух	= регСведГлБух.ФизическоеЛицо; 
		
		ОбластьМакета.Параметры.ДолжностьКладовщика = регСведКладовщик.Должность;
		ОбластьМакета.Параметры.ФИОпроизвел = регСведКладовщик.ФизическоеЛицо; 
		
		ОбластьМакета.Параметры.Доверенность1 = ""; // бух = рук
	//	ОбластьМакета.Параметры.Доверенность1 = регСведРук.Должность+" "+строка(регСведРук.ФизическоеЛицо)+", действующий  на основании "+регСведРук.Доверенность; 
		ОбластьМакета.Параметры.Доверенность2 = регСведГлБух.Должность+" "+строка(регСведГлБух.ФизическоеЛицо)+", действующий  на основании "+регСведГлБух.Доверенность;
		ОбластьМакета.Параметры.Доверенность3 = регСведКладовщик.Должность+" "+строка(регСведКладовщик.ФизическоеЛицо)+", действующий  на основании "+регСведКладовщик.Доверенность;
		
//01.06.15	
ИначеЕсли  СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00138")
			Или СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00138") тогда // 23.07.2014
			
		//ПредставлениеПодразделения
		Отбор1 = новый Структура;
		Отбор1.Вставить("Подразделение",справочники.Подразделения.НайтиПоКоду("00138"));
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
		регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
		регСведГлБух = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир);
		регСведКладовщик = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
	
		ОбластьМакета.Параметры.ФИОразрешил = регСведРук.ФизическоеЛицо; //Жилин А.В.";      
		ОбластьМакета.Параметры.ДолжностьРуководителя = регСведРук.Должность;//"Глав.бух.ф-ла г. Ростов-на-Дону";
		
		ОбластьМакета.Параметры.ФИОглБух	= регСведГлБух.ФизическоеЛицо; 
		
		ОбластьМакета.Параметры.ДолжностьКладовщика = регСведКладовщик.Должность;
		ОбластьМакета.Параметры.ФИОпроизвел = регСведКладовщик.ФизическоеЛицо; 
		
		ОбластьМакета.Параметры.Доверенность1 = ""; // бух = рук
	//	ОбластьМакета.Параметры.Доверенность1 = регСведРук.Должность+" "+строка(регСведРук.ФизическоеЛицо)+", действующий  на основании "+регСведРук.Доверенность; 
		ОбластьМакета.Параметры.Доверенность2 = регСведГлБух.Должность+" "+строка(регСведГлБух.ФизическоеЛицо)+", действующий  на основании "+регСведГлБух.Доверенность;
		ОбластьМакета.Параметры.Доверенность3 = регСведКладовщик.Должность+" "+строка(регСведКладовщик.ФизическоеЛицо)+", действующий  на основании "+регСведКладовщик.Доверенность;
		
		
//05.11.14	Смирнов
ИначеЕсли  СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00133")
			Или СсылкаНаОбъект.Сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00133") тогда 
			
		//ПредставлениеПодразделения
		Отбор1 = новый Структура;
		Отбор1.Вставить("Подразделение",справочники.Подразделения.НайтиПоКоду("00133"));
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
		регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
		регСведГлБух = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир);
		регСведКладовщик = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
	
		ОбластьМакета.Параметры.ФИОразрешил = регСведРук.ФизическоеЛицо; ;      
		ОбластьМакета.Параметры.ДолжностьРуководителя = регСведРук.Должность;
		
		ОбластьМакета.Параметры.ФИОглБух	= регСведГлБух.ФизическоеЛицо; 
		
		ОбластьМакета.Параметры.ДолжностьКладовщика = регСведКладовщик.Должность;
		ОбластьМакета.Параметры.ФИОпроизвел = регСведКладовщик.ФизическоеЛицо; 
		
		ОбластьМакета.Параметры.Доверенность1 = ""; // бух = рук
	//	ОбластьМакета.Параметры.Доверенность1 = регСведРук.Должность+" "+строка(регСведРук.ФизическоеЛицо)+", действующий  на основании "+регСведРук.Доверенность; 
		ОбластьМакета.Параметры.Доверенность2 = регСведГлБух.Должность+" "+строка(регСведГлБух.ФизическоеЛицо)+", действующий  на основании "+регСведГлБух.Доверенность;
		ОбластьМакета.Параметры.Доверенность3 = регСведКладовщик.Должность+" "+строка(регСведКладовщик.ФизическоеЛицо)+", действующий  на основании "+регСведКладовщик.Доверенность;	

	иначе //Яршинторг	
		ОбластьМакета.Параметры.ФИОразрешил = "Фролов А.И.";
		//ОбластьМакета.Параметры.Доверенность1 = "Зав.складом Фролов А.И. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/21 от 01.07.2009 г.";
		ОбластьМакета.Параметры.Доверенность1 = "Зав.складом Фролов А.И. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/20/2 от 26.07.2011 г.";
		
		ОбластьМакета.Параметры.ФИОглБух	= "Короткова Е.Ю.";
		//ОбластьМакета.Параметры.Доверенность2 = "Бухгалтер Короткова Е.Ю. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/09 от 29.03.2010 г.";
		ОбластьМакета.Параметры.Доверенность2 = "Бухгалтер Короткова Е.Ю. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/20/2 от 26.07.2011 г.";
		
		Если СсылкаНаОбъект.Дата >= '20150902' Тогда  //+++ 07.09.2015 - без Коротковой со 02.09.2015г.
			ОбластьМакета.Параметры.ФИОглБух	= ""; 
			ОбластьМакета.Параметры.Доверенность2 = "";
		КонецЕсли;	
		
		
		
		//Орлов ++
		Если СсылкаНаОбъект.Дата < Дата("20130401000000") Тогда
			//ОбластьМакета.Параметры.Доверенность3 = "Старший кладовщик Гаричев Д.Н. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/37 от 01.12.2010 г.";	
			ОбластьМакета.Параметры.Доверенность3 = "Старший кладовщик Гаричев Д.Н. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/20/2 от 26.07.2011 г.";
		ИначеЕсли СсылкаНаОбъект.Дата < Дата("20160211000000") Тогда
			ОбластьМакета.Параметры.ФИОглБух1	= "Невежина И. Н.";
			ОбластьМакета.Параметры.Доверенность3 = "Бухгалтер Невежина И. Н. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/19 от 01.04.2013 г.";
			ОбластьМакета.Параметры.Доверенность4 = "Старший кладовщик Гаричев Д.Н. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/20/2 от 26.07.2011 г.";
			ОбластьМакета.Параметры.ФИОглБух2   = "Князева И. И.";
			ОбластьМакета.Параметры.Доверенность5 = "Старший кладовщик Цверава В.У. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/25/1 от 31.05.2013 г.";
			ОбластьМакета.Параметры.Доверенность6 = "Бухгалтер Князева И. И. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/62 от 13.12.2013 г.";
		Иначе //+++ 11.02.2016 //Лукьяненков 06.11.2017
			
			Если СсылкаНаОбъект.Дата > Дата('20171106000000') Тогда
				ОбластьМакета.Параметры.ФИОглБух	= "Ловыгина Е.И.";
			Иначе
				ОбластьМакета.Параметры.ФИОглБух	= "Рыгачева Т.Н.";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ФИОглБух1	= "Невежина И. Н.";
			Если СсылкаНаОбъект.Дата > Дата('20171106000000') Тогда
				ОбластьМакета.Параметры.Доверенность2 = "Менеджер по транспорту Ловыгина Е.И. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/67 от 02.11.2017 г.";
			Иначе
				ОбластьМакета.Параметры.Доверенность2 = "Менеджер по транспорту Рыгачева Т.Н. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/35 от 16.05.2016 г.";
			КонецЕсли;
			ОбластьМакета.Параметры.Доверенность3 = "Оператор ПК Невежина И. Н. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/9 от 10.02.2016 г.";
			ОбластьМакета.Параметры.Доверенность4 = "Старший кладовщик Гаричев Д.Н. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/20/2 от 26.07.2011 г.";
			ОбластьМакета.Параметры.ФИОглБух2   = "Князева И. И.";
			ОбластьМакета.Параметры.Доверенность5 = "Старший кладовщик Цверава В.У. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/9 от 31.05.2013 г.";
			ОбластьМакета.Параметры.Доверенность6 = "Оператор ПК Князева И. И. на основании приказа по ЗАО ТК ""Яршинторг"" №01-03/9 от 10.02.2016 г.";
		КонецЕсли;
		//КонецЕсли;
		ОбластьМакета.Параметры.ФИОпроизвел = "Фролов А.И.";
	КонецЕсли;
	
	//2013.11.14
	Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда //ФормулаАвто
		ОбластьМакета.Параметры.ДолжностьРуководителя = "Генеральный директор";
		ОбластьМакета.Параметры.ФИОразрешил = "Зайцева Н.С.";  
		ОбластьМакета.Параметры.ФИОглБух = "Зайцева Н.С.";
		//+++ 23.03.2017
		//ОбластьМакета.Параметры.ФИОглБух1 = "";
		//ОбластьМакета.Параметры.ФИОглБух2 = "";
		//ОбластьМакета.Параметры.ФИОпроизвел = "";
		//ОбластьМакета.Параметры.Доверенность1 = "";
		//ОбластьМакета.Параметры.Доверенность2 = "";
		//ОбластьМакета.Параметры.Доверенность3 = "";
		//ОбластьМакета.Параметры.Доверенность4 = "";
		//ОбластьМакета.Параметры.Доверенность5 = "";
		//ОбластьМакета.Параметры.Доверенность6 = "";
	//А.А.	
	ИначеЕсли СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда //ФормулаАвтоПлюс
		//ОбластьМакета.Параметры.ДолжностьРуководителя = "Генеральный директор";
		//ОбластьМакета.Параметры.ФИОразрешил = "Курапова Е.А.";  
		//ОбластьМакета.Параметры.ФИОглБух = "Курапова Е.А.";
		//ОбластьМакета.Параметры.ФИОглБух1 = "";
		//ОбластьМакета.Параметры.ФИОглБух2 = "";
		//ОбластьМакета.Параметры.ФИОпроизвел = "";
		//ОбластьМакета.Параметры.Доверенность1 = "";
		//ОбластьМакета.Параметры.Доверенность2 = "";
		//ОбластьМакета.Параметры.Доверенность3 = "";
		//ОбластьМакета.Параметры.Доверенность4 = "";
		//ОбластьМакета.Параметры.Доверенность5 = "";
		//ОбластьМакета.Параметры.Доверенность6 = "";
	//ОЛ 29.01.2015 для экспорта
	ИначеЕсли СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда //ФормулаАвто
		ОбластьМакета.Параметры.ДолжностьРуководителя = "Директор";
		ОбластьМакета.Параметры.ФИОразрешил = "Захаров В.В.";  
		ОбластьМакета.Параметры.ФИОглБух = "Захаров В.В.";
		//ОбластьМакета.Параметры.ФИОглБух1 = "";
		//ОбластьМакета.Параметры.ФИОглБух2 = "";
		ОбластьМакета.Параметры.ФИОпроизвел = "";
		ОбластьМакета.Параметры.Доверенность1 = "";
		ОбластьМакета.Параметры.Доверенность2 = "";
		ОбластьМакета.Параметры.Доверенность3 = "";
		//ОбластьМакета.Параметры.Доверенность4 = "";
		//ОбластьМакета.Параметры.Доверенность5 = "";
		//ОбластьМакета.Параметры.Доверенность6 = "";
	КонецЕсли;
	
	Если НЕ ЗначениеНеЗаполнено(ЕдиницаИзмеренияВеса) И ИтогоМассаБрутто > 0 Тогда
		Если ЕдиницаИзмеренияВеса.Наименование = "кг" Тогда
			ВесКгГрамм="кг.,кг.,кг.,,гр.,гр.,гр.,,3";
			
			ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтогоМассаБрутто,"ДП = Истина",ВесКгГрамм);
			
			//+Лукьяненков 28.08.2017
			Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль И ИтогоКоличество > 0 Тогда
				//ОбластьМакета.Параметры.КоличествоПрописью = ЧислоПрописью(ИтогоКоличество,"ДП = Истина",ВесКгГрамм);
			КонецЕсли;
		Иначе
			ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтогоМассаБрутто, ,",,,,,,,,0")+ " " +ЕдиницаИзмеренияВеса.Наименование + ".";
		КонецЕсли;
	КонецЕсли;
	
	Если ИтогоМест > 0 Тогда
		ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтогоМест,,",,,,,,,,0");
	КонецЕсли;
	
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить();
	ОбластьМакета.Параметры.СуммаПрописью = СформироватьСуммуПрописью(ИтогоСуммаСНДС, мВалютаРегламентированногоУчета);
	
	//+++
	ОбластьМакета.Параметры.АвтомобильТелефон = ?(СокрЛП(ссылкаНаОбъект.МаркаАвтомобиля)="" и СокрЛП(ссылкаНаОбъект.ГосНомерАвтомобиля)="", "",
	СокрЛП(ссылкаНаОбъект.МаркаАвтомобиля)+" "+СокрЛП(ссылкаНаОбъект.ГосНомерАвтомобиля)+",")
	+?(СокрЛП(Шапка.ФизЛицоДоверенности)="","", " Водитель: "+СокрЛП(Шапка.ФизЛицоДоверенности)+",")
	+?(сокрЛП(ссылкаНаОбъект.ВидПеревозки)="", "", " тел.:"+СокрЛП(ссылкаНаОбъект.ВидПеревозки));
КонецЕсли;	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
   конецЕсли;	
КонецФункции // Печать


функция ПолучитьКладовщика() Экспорт
	
	Отбор = Новый Структура("СтруктурнаяЕдиница", ЭтотОбъект.СсылкаНаОбъект.Склад);
	СрезПоследних   = РегистрыСведений.ОтветственныеЛица.СрезПоследних(ЭтотОбъект.СсылкаНаОбъект.Дата, Отбор);
	 Если СрезПоследних <> неопределено и СрезПоследних.Количество()>0 Тогда
		Кладовщик = СрезПоследних[0].ФизическоеЛицо.Наименование;
	 Иначе
	 	Кладовщик = "";
	 КонецЕсли;	
	 
	 возврат Кладовщик;
КонецФункции 


 
Процедура ПолучитьМассивСлов(Слово,массивСлов)
	Если СтрДлина(СокрЛП(Слово))=0 Тогда
		Возврат;
	КонецЕсли;	
	позицияП=Найти(Слово, " ");
	Если позицияП>0 Тогда
		массивСлов.Добавить(СокрЛП(Сред(Слово,1,позицияП-1)));
		СловоДляАнализа=СокрЛП(Прав (Слово,СтрДлина(Слово)-позицияП));
		ПолучитьМассивСлов(СловоДляАнализа,массивСлов);
	Иначе
		массивСлов.Добавить(СокрЛП(Слово));
	КонецЕсли;	
КонецПроцедуры

		
Функция ПолучитьЗначениеПоСвойству(Объект, Свойство)
	
	МенеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект   = Объект;
	МенеджерЗаписи.Свойство = Свойство; 
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи.Значение;
	
КонецФункции // ПолучитьЗначениеПоСвойству()

Функция ПолучитьПараметрыДоговораФАП(Договор)
	
	СвойствоНомерДоговораФАП = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90237");
	Если ЗначениеЗаполнено(СвойствоНомерДоговораФАП) Тогда
		Значение = ПолучитьЗначениеПоСвойству(Договор, СвойствоНомерДоговораФАП);
		Если ЗначениеЗаполнено(Значение) Тогда
			НомДог = Значение;
			//Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90245");
			//ДатаКонтракта = ПолучитьЗначениеПоСвойству(Договор, Свойство);
			//Если ЗначениеЗаполнено(ДатаКонтракта) Тогда
			//	ДатаКонтракта = Формат(ДатаКонтракта, "ДЛФ=Д");
			//Иначе
			//	ДатаКонтракта = "";
			//КонецЕсли;
			ДатаКонтракта = Формат(Договор.Дата, "ДЛФ=Д");
		Иначе
			НомДог        = Договор.Номер;
			ДатаКонтракта = Формат(Договор.Дата, "ДЛФ=Д");
		КонецЕсли;
	Иначе
		НомДог        = Договор.Номер;
		ДатаКонтракта = Формат(Договор.Дата, "ДЛФ=Д");
	КонецЕсли;
	
	СтруктПарам = Новый Структура("НомерКонтракта, ДатаКонтракта", НомДог, ДатаКонтракта);
	
	Возврат СтруктПарам;
	
КонецФункции // ПолучитьПараметрыДоговораФАП()

Функция ПолучитьОписаниеДоговораФАП(Договор)
	
	// Дата подписания контракта из свойства
	СтруктПарамКонтракта = ПолучитьПараметрыДоговораФАП(Договор);
	
	НомерДоговора = СтруктПарамКонтракта.НомерКонтракта;
	Если ЗначениеЗаполнено(СтруктПарамКонтракта.ДатаКонтракта) Тогда
		ДатаКонтрактаСтр = " от " + СтруктПарамКонтракта.ДатаКонтракта;
	Иначе
		ДатаКонтрактаСтр = "";
	КонецЕсли;
	
	ОписаниеДоговора = "" + Договор.Наименование + " № " + НомерДоговора + ДатаКонтрактаСтр;
	
	Возврат ОписаниеДоговора;
	
КонецФункции // ПолучитьОписаниеДоговораФАП()

Процедура ВнестиКорректировки(ТабДок)
	
			Если СсылкаНаОбъект.Контрагент.Код = "92226  " Тогда
				Обл = ТабДок.НайтиТекст("Грузополучатель и его адрес:");
				Если НЕ Обл = Неопределено Тогда
					ПозицС = Найти(Обл.Имя, "C");
					Кол = Сред(Обл.Имя, ПозицС+1);
					ПопыткаУспешна = Истина;
					Попытка
						КолЧисло = Число(Кол);
					Исключение
						ПопыткаУспешна = Ложь;
					КонецПопытки;
					Если ПопыткаУспешна Тогда
						АдресТТН = СсылкаНаОбъект.Сделка.АдресДляТТН;
						Если ЗначениеЗаполнено(АдресТТН) Тогда
							ТабДок.Область(Лев(Обл.Имя, ПозицС) + Строка(КолЧисло + 1)).Текст = СсылкаНаОбъект.Контрагент.НаименованиеПолное + ", " + АдресТТН;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
	
		КонецПроцедуры // ВнестиКорректировки()
		
Функция ВесУпаковки(типоразмер, ЭтоЛитойДиск = Ложь)
	
	индексД = ?(типоразмер.Диаметр="",0, число(типоразмер.Диаметр)-13);  
	
	Если индексД>=0 тогда
		Если ЭтоЛитойДиск Тогда
			масса = новый Массив;
			масса.Добавить(0.430); //13
			масса.Добавить(0.650); //14
			масса.Добавить(0.700); //15
			масса.Добавить(0.870); //16
			масса.Добавить(0.950); //17
			масса.Добавить(1.100);  //18
			масса.Добавить(1.200);  //19
			масса.Добавить(1.400);  //20
			масса.Добавить(1.550);  //21
			масса.Добавить(1.700); //22 
			попытка
				m = масса[индексД];
			исключение
				m = 0;
			конецпопытки;
		Иначе
			масса = новый Массив;
			масса.Добавить(0.300); //13
			масса.Добавить(0.400); //14
			масса.Добавить(0.500); //15
			масса.Добавить(0.600); //16
			масса.Добавить(0.700); //17
			попытка
				m = масса[индексД];
			исключение
				m = 0;
			конецпопытки;
		КонецЕсли;
	Иначе // это болты или гайки
		m = 0;
	КонецЕсли;
	возврат Окр(m,3);
КонецФункции