
функция ПолучитьМассивДляЗамены()
	рез = новый Соответствие;
	рез.Вставить("[ДатаСоглашения]", Формат(СсылкаНаОбъект.ДатаС,"ДЛФ=DD"));//29.01.2018
	рез.Вставить("[ПериодБонуса]", "с " + Строка(Формат(СсылкаНаОбъект.ДатаС,"ДЛФ=DD"))+" по "+Строка(Формат(СсылкаНаОбъект.ДатаПо,"ДЛФ=DD")));
	рез.Вставить("[НомерСоглашения]", СсылкаНаОбъект.Номер);
	рез.Вставить("[НомерДоговора]", СсылкаНаОбъект.Контрагент.ОсновнойДоговорКонтрагента.Номер);
	рез.Вставить("[ДатаДоговора]", Формат(СсылкаНаОбъект.Контрагент.ОсновнойДоговорКонтрагента.Дата,"ДФ='dd MMMM yyyy'"));
	рез.Вставить("[ДатаПроверки]",Формат(СсылкаНаОбъект.ДатаПо + 14 * 86400,"ДЛФ=DD") );
	рез.Вставить("[ДатаСогласования]",Формат(СсылкаНаОбъект.ДатаПо + 14 * 86400,"ДЛФ=DD") );
	рез.Вставить("[КолШт]", Формат(СсылкаНаОбъект.КоличествоПлан,"ЧДЦ=0; ЧН=______") );
	
	//Плотников+++
	ТекПокупатель = СсылкаНаОбъект.Контрагент;
   Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		Если Найти(НаимПокупателя,"Общество") = 0 Тогда
			Если Найти(НаимПокупателя,"ООО") > 0 Тогда
				НаимПокупателя = СтрЗаменить(НаимПокупателя,"ООО","Общество с ограниченной ответственностью");
			Иначе
		        НаимПокупателя = "Общество с ограниченной ответственностью " + НаимПокупателя;
			КонецЕсли;
		КонецЕсли;
		
		НаимКороткое = НаимПокупателя;
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
		
		Подписант = "Директор "+ СтруктураКонтЛица.НаимДиректора;
		
		НазваниеОрганизации  = НаимПокупателя;
		НаимПокупателя = НаимПокупателя +", именуемое далее «Покупатель»,
		|в лице (генерального) директора "+ СтруктураКонтЛица.НаимДиректораРодПадеж  +", действующего на основании  Устава";
		
		ФИОДиректора = СтруктураКонтЛица.НаимДиректораРодПадеж;
		Основание = "Устава";
			   
	Иначе //----------------физ.лицо----------------------------------------------------
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		
		Если Найти(НаимПокупателя,"Индивидуальный") = 0 Тогда
			Если Найти(НаимПокупателя,"ИП") > 0 Тогда
				НаимПокупателя = СтрЗаменить(НаимПокупателя,"ИП","Индивидуальный предприниматель");
			Иначе
		        НаимПокупателя = "Индивидуальный предприниматель " + НаимПокупателя;
			КонецЕсли;
		КонецЕсли;
		
		НаимКороткое = НаимПокупателя;
		Подписант = НаимПокупателя;
		
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
		НазваниеОрганизации  = НаимПокупателя;
		НаимПокупателя = НаимПокупателя +", именуемый далее «Покупатель»,
		|в лице "+ СтруктураКонтЛица.НаимДиректораРодПадеж  +", действующий на основании свидетельства ОГРНИП " + ТекПокупатель.ОГРН;
		
		ФИОДиректора = СтруктураКонтЛица.НаимДиректораРодПадеж;
		Основание = "Свидетельства ОГРНИП " + ТекПокупатель.ОГРН;
		
	КонецЕсли;
	рез.Вставить("[НаимКороткое]",НаимКороткое);
	рез.Вставить("[НаимПокупателя]",НаимПокупателя);
	рез.Вставить("[Подписант]",Подписант);
	рез.Вставить("[НазваниеОрганизации]",НазваниеОрганизации);
	рез.Вставить("[ФИОДиректора]",ФИОДиректора);
	рез.Вставить("[Основание]",Основание);
	
	Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		Если Найти(НаимПокупателя,"Общество") = 0 Тогда
			Если Найти(НаимПокупателя,"ООО") > 0 Тогда
				НаимПокупателя = СтрЗаменить(НаимПокупателя,"ООО","Общество с ограниченной ответственностью");
			Иначе
		        НаимПокупателя = "Общество с ограниченной ответственностью " + НаимПокупателя;
			КонецЕсли;
		КонецЕсли;
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
		Доверенность = НаимПокупателя + ", ИНН "+ТекПокупатель.ИНН+", ОГРН "+ТекПокупатель.ОГРН+" (далее – Доверитель),
		|в лице "+ СтруктураКонтЛица.НаимДиректораРодПадеж +", действующего на основании устава";
			   
	Иначе //-----------------физ.лицо--------------------------------
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		Если Найти(НаимПокупателя,"Индивидуальный") = 0 Тогда
			Если Найти(НаимПокупателя,"ИП") > 0 Тогда
				НаимПокупателя = СтрЗаменить(НаимПокупателя,"ИП","Индивидуальный предприниматель");
			Иначе
		        НаимПокупателя = "Индивидуальный предприниматель " + НаимПокупателя;
			КонецЕсли;
		КонецЕсли;
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
		Доверенность = НаимПокупателя + ", ИНН "+ТекПокупатель.ИНН+" (далее – Доверитель),
		|в лице "+ СтруктураКонтЛица.НаимДиректораРодПадеж +", действующий на основании свидетельства ОГРН " + ТекПокупатель.ОГРН;
	КонецЕсли;
		
		//+++ 25.12.2017 - ТОЛЬКО не отмененные строки!
		таблБонусы = СсылкаНаОбъект.Бонусы.Выгрузить();
		i=0;
		пока i<таблБонусы.Количество() цикл
			Если таблБонусы[i].Статус = перечисления.СтатусыСтрокЗаказа.Отменен тогда
				таблБонусы.Удалить(i);
			иначе  i = i+1;
			КонецЕсли;	
		КонецЦикла;
 		рез.Вставить("[Доверенность]",Доверенность);
		
		НомГрб = таблБонусы.Скопировать();//+++
		НомГрб.Свернуть("НоменклатурнаяГруппа");

		ПроизводителиСтрока = "";
		для каждого стрНГ Из НомГрб Цикл
			
			если ПроизводителиСтрока <> "" Тогда
				ПроизводителиСтрока = ПроизводителиСтрока + ",
				|";
			КонецЕсли;
			
			Если стрНГ.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026") Тогда
				
				ПроизводителиСтрока = ПроизводителиСтрока + "литым дискам под торговыми марками ";
				
			ИначеЕсли стрНГ.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049") Тогда
				
				ПроизводителиСтрока = ПроизводителиСтрока + "штампованным дискам под торговыми марками ";
				
			ИначеЕсли найти(стрНГ.НоменклатурнаяГруппа.Наименование,"лет") > 0 
				и стрНГ.НоменклатурнаяГруппа.ВидТовара = перечисления.ВидыТоваров.Шины Тогда
				
				ПроизводителиСтрока = ПроизводителиСтрока + "летним шинам под торговыми марками ";
				
			ИначеЕсли найти(стрНГ.НоменклатурнаяГруппа.Наименование,"зим") > 0 
				и стрНГ.НоменклатурнаяГруппа.ВидТовара = перечисления.ВидыТоваров.Шины Тогда
				
				ПроизводителиСтрока = ПроизводителиСтрока + "зимним шинам под торговыми марками ";
				
			иначе
				
				ПроизводителиСтрока = ПроизводителиСтрока + СокрЛП(стрНГ.НоменклатурнаяГруппа)+" под торговыми марками "; //19.01.2018
				
			КонецЕсли;
			
			Производителитаб = таблБонусы.Скопировать();
			Производителитаб.Свернуть("НоменклатурнаяГруппа,Производитель");
			ПроизводителиСтрокаПр = "";
			
			отбор = Новый Структура;
			отбор.Вставить("НоменклатурнаяГруппа",стрНГ.НоменклатурнаяГруппа);
			произОтбор = Производителитаб.НайтиСтроки(отбор);
			
			Для каждого стр из произОтбор Цикл
				//+++( 14.12.2017
				ПроизводительНаименование = стр.Производитель.Наименование;  
				Если ПроизводительНаименование="REPLICA" тогда 
					ПроизводительНаименование="LegeArtis";
				ИначеЕсли ПроизводительНаименование="REPLICA TD" тогда 
					ПроизводительНаименование="Top Driver";
				ИначеЕсли ПроизводительНаименование="REPLICA TD Special Series" тогда
					ПроизводительНаименование="Top Driver Special Series";
				КонецЕсли;	
				//+++)

				ПроизводителиСтрокаПр = ПроизводителиСтрокаПр + """"+ ПроизводительНаименование + """" + ", "; // Каждый в кавычках
			КонецЦикла;
			с = СтрДлина(ПроизводителиСтрокаПр);
			ПроизводителиСтрокаПр = Сред(ПроизводителиСтрокаПр,1,с-2);
			
			ПроизводителиСтрока = ПроизводителиСтрока + ПроизводителиСтрокаПр;
				
		КонецЦикла;
		рез.Вставить("[НомГрПроизводители]",ПроизводителиСтрока);
		
		ТаблицаСтавокБонуса = СсылкаНаОбъект.СтавкиБонуса.Выгрузить();
		СтрокаСтавокБонуса = "Бонус ";
		ставка = ""; мес1=""; мес2="";  //+++++++++++++++++++++ по периодам! ++++++++++++++++++++++++++++++++
		брэнд = ""; брэнд0 = "";
		Если НЕ ЗначениеЗаполнено(ТаблицаСтавокБонуса[0].Производитель) тогда
		СтрокаСтавокБонуса = СтрокаСтавокБонуса +"по "+ ПроизводителиСтрока+": ";
		КонецЕсли;
		для каждого стр22 из ТаблицаСтавокБонуса Цикл
			
			Если ставка = "" тогда
				ставка = строка(стр22.Ставка);
				мес1 = Формат(стр22.Месяц,"ДФ='MMMM yyyy'")+"г.";
				мес2 = мес1;
			ИначеЕсли ставка <> строка(стр22.Ставка) тогда // пред.период	
			СтрокаСтавокБонуса = СтрокаСтавокБонуса + мес1 +?(мес1=мес2, "", " - "+мес2)+ " составляет " + ставка + "%, ";  
				ставка = строка(стр22.Ставка);
				мес1 = Формат(стр22.Месяц,"ДФ='MMMM yyyy'")+"г.";
				мес2 = мес1;
			Иначе
				мес2 = Формат(стр22.Месяц,"ДФ='MMMM yyyy'")+"г.";
			КонецЕсли;	
			
			брэнд = СокрЛП(стр22.Производитель.Наименование);
			Если брэнд<>брэнд0 тогда //29.01.2018 - по каждому отдельно!
			 СтрокаСтавокБонуса = ?( прав(СтрокаСтавокБонуса,2)=": ", 
			 						лев(СтрокаСтавокБонуса, стрДлина(СтрокаСтавокБонуса)-1)+ ", "
									, СтрокаСтавокБонуса ) + брэнд+": ";
			 брэнд0 = брэнд;
			 ставка = "";
			КонецЕсли; 
		КонецЦикла;
		 СтрокаСтавокБонуса = СтрокаСтавокБонуса + мес1 + ?(мес1=мес2, "", " - "+мес2)+ " составляет " + ставка + "%, ";  
		
		с = СтрДлина(СтрокаСтавокБонуса);
		СтрокаСтавокБонуса = Сред(СтрокаСтавокБонуса,1,с-2);
		СтрокаСтавокБонуса = СтрокаСтавокБонуса + ".";
		
		СтрокаСтавокБонуса1 = "";
		СтрокаСтавокБонуса2 = "";
		//Если СтрДлина(СтрокаСтавокБонуса) > 255 Тогда
		//	СтрокаСтавокБонуса1 = Лев(СтрокаСтавокБонуса,255);
		//	СтрокаСтавокБонуса2 = Сред(СтрокаСтавокБонуса,256,СтрДлина(СтрокаСтавокБонуса));	
		//иначе
			СтрокаСтавокБонуса1 = СтрокаСтавокБонуса;
		//КонецЕсли;
		рез.Вставить("[СтрокаБонусов]",СтрокаСтавокБонуса1);
		рез.Вставить("[СтрокаБонусов2]",СтрокаСтавокБонуса2);
					
		СведенияОПокупателе = СведенияОЮрФизЛице(ТекПокупатель, ТекущаяДата());
		Запрос = Новый Запрос;
		запрос.УстановитьПараметр("Об",ТекПокупатель);
		запрос.УстановитьПараметр("Тип",Перечисления.ТипыКонтактнойИнформации.Адрес);
		запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00015"));
		Запрос.Текст = "ВЫБРАТЬ
		               |	КонтактнаяИнформация.Представление
		               |ИЗ
		               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		               |ГДЕ
		               |	КонтактнаяИнформация.Объект = &Об
		               |	И КонтактнаяИнформация.Тип = &Тип
		               |	И КонтактнаяИнформация.Вид = &Вид";
		Результат = Запрос.Выполнить().Выгрузить();
		Если Результат.Количество() > 0 Тогда
			ПочтовыйАдрес = Результат[0].Представление;
		Иначе
			ПочтовыйАдрес = СведенияОПокупателе.ФактическийАдрес;
		КонецЕсли;
		
		ЮрАдресПокупателя = СведенияОПокупателе.ЮридическийАдрес;
		рез.Вставить("[ЮрАдресПокупателя]",ЮрАдресПокупателя);
		рез.Вставить("[ФактАдресПокупателя]",ПочтовыйАдрес);
		
		Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			КППпокупателя = "ОГРН: "+Строка(ТекПокупатель.ОГРН);
		Иначе	
		    КППпокупателя = "КПП: "+СведенияОПокупателе.КПП;
		КонецЕсли;
        рез.Вставить("[КППпокупателя]",КППпокупателя);
		
		рез.Вставить("[ИННпокупателя]", СведенияОПокупателе.ИНН);
	    рез.Вставить("[ОГРНпокупателя]",СведенияОПокупателе.ОГРН);

        ТелефонПокупателя = СведенияОПокупателе.Телефоны;
		рез.Вставить("[ТелефонПокупателя]",ТелефонПокупателя);
		
		БанковскийСчетПокупателя = ТекПокупатель.ОсновнойБанковскийСчет;
		БанкПокупателяНаим = "";
		БанкПокупателяОКПО = "";
		БанкПокупателяБИК = "";
		БанкПокупателяАдрес = "";
		БанкПокупателяРасчетныйСчет = "";
		БанкПокупателяКоррСчет = "";

		Если ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
			Банк = БанковскийСчетПокупателя.Банк;
			БанкПокупателяНаим = СокрЛП(Банк)+" "+Банк.Город;
			БанкПокупателяБИК = Банк.Код;
            БанкПокупателяАдрес = Банк.Адрес;
			БанкПокупателяРасчетныйСчет = БанковскийСчетПокупателя.НомерСчета;
			БанкПокупателяКоррСчет = БанковскийСчетПокупателя.Банк.КоррСчет;
		КонецЕсли;
		 рез.Вставить("[БанкПокупателяНаим]",БанкПокупателяНаим);
		 рез.Вставить("[БанкПокупателяОКПО]",БанкПокупателяОКПО);
		 рез.Вставить("[БанкПокупателяБИК]",БанкПокупателяБИК);
		 рез.Вставить("[БанкПокупателяАдрес]",БанкПокупателяАдрес);
		 рез.Вставить("[БанкПокупателяРасчетныйСчет]",БанкПокупателяРасчетныйСчет);
		 рез.Вставить("[БанкПокупателяКоррСчет]",БанкПокупателяКоррСчет);

	возврат рез;	
КонецФункции

функция ПолучитьМассивДляЗаменыКолонтитул()
	рез = новый Соответствие;
	//---------------Согласовано---------------		 
	спис1 = СсылкаНаОбъект.Бонусы[0].ЗадачаНаСогласование.ПоследовательностьСогласования.Выгрузить();
	Менеджер = СсылкаНаОбъект.Ответственный;
	Если спис1.Количество()=3 тогда
		РукНапр =  ПолучитьФИО(спис1[0].Сотрудник);
		РукТовГр = ПолучитьФИО(спис1[1].Сотрудник);
		ГлБух = ПолучитьФИО(спис1[2].Сотрудник);
	ИначеЕсли спис1.Количество()=2 тогда // менедер = рук.напр.
		РукНапр =  ПолучитьФИО(менеджер);
		РукТовГр = ПолучитьФИО(спис1[0].Сотрудник);
		ГлБух = ПолучитьФИО(спис1[1].Сотрудник);
	Иначе
		РукНапр =  ПолучитьФИО(Менеджер.НаправлениеПродаж.Руководитель);
		РукТовГр = ПолучитьФИО(СсылкаНаОбъект.НоменклатурнаяГруппа.Ответственный);
		ГлБух    = ПолучитьФИО(Справочники.подразделения.НайтиПоКоду("00008").Руководитель );
	КонецЕсли;
		
	рез.Вставить("[РукНапр]", РукНапр );
	рез.Вставить("[РукТовГр]", РукТовГр);
	рез.Вставить("[ГлБух]",   ГлБух);
	
	//        Главный юрист:	             [Юрист]
	Юрист    = ПолучитьФИО(Справочники.подразделения.НайтиПоКоду("00012").Руководитель);
	рез.Вставить("[Юрист]",   Юрист);

	рез.Вставить("[Менеджер]",  ПолучитьФИО(Менеджер) + ПолучитьВнТел(Менеджер) );

	возврат рез;	
КонецФункции
	
функция ПолучитьФИО(Сотрудник)
    рез = "";
	
	Если НЕ Сотрудник.ФизЛицо.Пустая() тогда
		ФИОСрез = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(,Новый Структура("ФизЛицо",Сотрудник.ФизЛицо));
		Фамилия  = ФИОСрез.Фамилия;
		Имя      = ФИОСрез.Имя;
		Отчество = ФИОСрез.Отчество;
		рез = Фамилия+" "+Лев(Имя,1)+". "+Лев(Отчество,1)+".";
	Иначе
		рез = Сотрудник.Код;
	КонецЕсли;

	возврат рез;
КонецФункции

функция ПолучитьВнТел(Сотрудник)
	рез = "";
	
	Если НЕ Сотрудник.ФизЛицо.Пустая() тогда
	  стрОтбора = Новый Структура("Объект,",Сотрудник.ФизЛицо);
	  стрОтбора.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);
	  стрОтбора.Вставить("Вид", справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38840") );  //вн.номер физ.лица
	иначе
	  стрОтбора = Новый Структура("Объект,",Сотрудник);
	  стрОтбора.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);
	  стрОтбора.Вставить("Вид", справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38841") );  //вн.номер  сотрудника
	КонецЕсли;
	
	регСв = РегистрыСведений.КонтактнаяИнформация.Получить(стрОтбора);
	  
	Если регСв <> неопределено тогда
	  рез = ", доб. "+регСв.Представление;
  	КонецЕсли;	  
  
	возврат рез;
КонецФункции


Функция Печать() Экспорт
	
	ЕстьWord  = ложь; // если будет ошибка - то печатает из OpenOffice!
	Попытка
	//Сообщить("Идёт создание макета Word...");
	Документ = ЭтотОбъект.ПолучитьМакет("МакетАкт");
	НаимПокупателя = "";
	
	МСВорд = Документ.Получить();
	
	Документ = МСВорд.Application.Documents(1);
	Документ.Activate();
	ЕстьWord  = Истина; //есть Word на компьютере!
	
		Замена = Документ.Content.Find;
	
		//+++ 18.01.2018 г.  ====================================
		//Сообщить("Идёт получение данных документа...");
	массивДляЗамены	= ПолучитьМассивДляЗамены(); 
	
		//Сообщить("Идёт заполнение макета Word...");
		для каждого стр1 из массивДляЗамены цикл
				ЗаменитьТекстWord(Замена, стр1.Ключ, стр1.Значение);
        КонецЦикла;
		
		массивДляЗаменыКолонтитул	= ПолучитьМассивДляЗаменыКолонтитул(); 
		
		//МСВорд.Application.ActiveWindow.ActivePane.View.SeekView = 9; 
		//ЗаменаКолонтитул = Документ.Sections(1).Headers(1).Range().Find;
		
		//МСВорд.Application.ActiveWindow.ActivePane.View.SeekView = 10;
		ЗаменаКолонтитул = Документ.Sections(1).Footers(1).Range().Find;
		
		для каждого стр1 из массивДляЗаменыКолонтитул цикл
				ЗаменитьТекстWord(ЗаменаКолонтитул, стр1.Ключ, стр1.Значение);
		КонецЦикла;
		МСВорд.Application.ActiveWindow.ActivePane.View.SeekView = 0; //wdSeekMainDocument
		
	//+++( 06.02.2018 ----------сразу на принтер по умолчанию...-------------------
		Если РольДоступна("ПолныеПрава")                                                       //Бух
			или РольДоступна("яштФинДиректор")                                                 //Фин.отдел
			или РольДоступна("ПравоЗавершенияРаботыПользователей")				//IT-отдел
			или параметрыСеанса.ТекущийПользователь = СсылкаНаОбъект.Ответственный.НаправлениеПродаж.Руководитель //рукНапр
			или параметрыСеанса.ТекущийПользователь = СсылкаНаОбъект.НоменклатурнаяГруппа.Ответственный 	   //рукТГ
			или параметрыСеанса.ТекущийПользователь.ОсновноеПодразделение.Код = "00012" //Юр.отдел
		тогда
			Документ.Activate();
			МСВорд.Application.Visible = 1;
		//-------МСВорд.ActiveWindow.WindowState = 2;
		Иначе	
		// 13.02.2018
	// 13.02.2018
		печататьСразу = истина;
		#Если Клиент тогда
			Если Вопрос("Отправить на принтер (по умолчанию) прямо сейчас?",РежимДиалогаВопрос.ДаНет,0)<>КодВозвратаДиалога.Да тогда
				печататьСразу = ложь;
			КонецЕсли;	
		#КонецЕсли	
			Если печататьСразу тогда
			МСВорд.Application.PrintOut();
			МСВорд.Application.Quit();
			КонецЕсли;
		КонецЕсли;
		//+++)
		
	Исключение
		
		Если ЕстьWord тогда
			Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
			МСВорд.Application.Quit();
		Иначе
			Сообщить("На компьютере не установлен Word. Печать будет запущена из OpenOffice...", СтатусСообщения.Информация);
		КонецЕсли;
	
		ПечатьOpenOffice();

	КонецПопытки;	
	Сообщить("");	
	
	возврат неопределено;
КонецФункции


Функция КонтактныеЛицаКонтрагента(ТекКонтрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	КонтактныеЛица.Фамилия,
	 |	КонтактныеЛица.Имя,
	 |	КонтактныеЛица.Отчество,
	 |	КонтактныеЛица.Должность,
	 |	КонтактныеЛица.Представление,
	 |	КонтактныеЛица.Роль,
	 |	ВЫБОР
	 |		КОГДА КонтактныеЛица.Роль = &Директор
	 |			ТОГДА 1
	 |		КОГДА КонтактныеЛица.Ссылка = &ОсновноеКонтЛицо
	 |			ТОГДА 2
	 |		ИНАЧЕ 3
	 |	КОНЕЦ КАК Порядок,
	 |	КонтактныеЛица.Описание
	 |ИЗ
	 |	Справочник.КонтактныеЛица КАК КонтактныеЛица
	 |ГДЕ
	 |	КонтактныеЛица.ОбъектВладелец = &ТекКонтрагент
	 |	И КонтактныеЛица.ВидКонтактногоЛица = &ВидКонтактногоЛица
	 |	И КонтактныеЛица.ПометкаУдаления = ЛОЖЬ
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	Порядок";
	 
	Запрос.УстановитьПараметр("ТекКонтрагент", ТекКонтрагент);
	Запрос.УстановитьПараметр("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента);
	//Запрос.УстановитьПараметр("ГенДиректор", Справочники.РолиКонтактныхЛиц.ГенеральныйДиректор);
	Запрос.УстановитьПараметр("Директор", Справочники.РолиКонтактныхЛиц.Директор);
	Запрос.УстановитьПараметр("ОсновноеКонтЛицо", ТекКонтрагент.ОсновноеКонтактноеЛицо);
	ДолжностьДиректора = "";
	ДолжностьДиректораРодПадеж = "";
	НаимДиректора = "";
	НаимДиректораКраткое = "";
	НаимДиректораРодПадеж = "";
	ДействующийНаОсновании = "";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СокрЛП(Выборка.Представление) = "" И СокрЛП(Выборка.Фамилия) = "" И СокрЛП(Выборка.Имя) = "" И СокрЛП(Выборка.Отчество) = "" Тогда
			продолжить;
		КонецЕсли;
		Если СокрЛП(Выборка.Представление) <> "" Тогда
			НаимДиректора = СокрЛП(Выборка.Представление); 
		Иначе
			НаимДиректора = СокрЛП(Выборка.Фамилия)+" "+СокрЛП(Выборка.Имя)+" "+СокрЛП(Выборка.Отчество);
		КонецЕсли;
		ДолжностьДиректора = ?(СокрЛП(Выборка.Должность)="",СокрЛП(Выборка.Роль),СокрЛП(Выборка.Должность));
		ДействующийНаОсновании = СокрЛП(Выборка.Описание);
		прервать;
	КонецЦикла;
	Если Найти(НаимДиректора,".")=0 Тогда
		НаимДиректораКраткое = ФамилияИнициалыФизЛица(НаимДиректора);
	Иначе
		НаимДиректораКраткое = НаимДиректора;
	КонецЕсли;
	
	Попытка
		ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСклоненияФИО", "Decl", ТипВнешнейКомпоненты.Native); 
		Объект = Новый("AddIn.Decl.CNameDecl");
		Попытка
			Падеж = 2; //Родительный
			Если СокрЛП(НаимДиректора) <> "" Тогда
				Если Найти(НаимДиректора,".")=0 Тогда
					НаимДиректораРодПадеж = Объект.Просклонять(НаимДиректора, Падеж);
				Иначе
					НаимДиректораРодПадеж = НаимДиректора;
				КонецЕсли;	
			КонецЕсли;
			Если СокрЛП(ДолжностьДиректора)<>"" Тогда
				МассивСтрок = РазложитьСтрокуВМассивПодстрок(ДолжностьДиректора, " ");
				//Выделим первые 3 слова, так как компонента не умеет склонять фразу большую 3х символов
				НомерНесклоняемогоСимвола = 4;
				Для Номер = 1 По Мин(МассивСтрок.Количество(), 3) Цикл
					Попытка
						Рез = Объект.Просклонять(МассивСтрок[Номер-1], Падеж);
					Исключение
						Рез = МассивСтрок[Номер-1];
					КонецПопытки;
					ДолжностьДиректораРодПадеж = ДолжностьДиректораРодПадеж + ?(Номер > 1, " ", "") + Рез;
				КонецЦикла;
			КонецЕсли;
		Исключение
			Сообщить("Не просклонять ФИО/должность покупателя "+НаимДиректора+" / "+ДолжностьДиректора);
		КонецПопытки;
	Исключение
		Сообщить("Не удалось подключить внешнюю компоненту по причине: " + ОписаниеОшибки()); 
	КонецПопытки;
	
	СтруктураКонтЛица = Новый Структура;
	СтруктураКонтЛица.Вставить("НаимДиректора", НаимДиректора);
	СтруктураКонтЛица.Вставить("НаимДиректораРодПадеж", ?(СокрЛП(НаимДиректораРодПадеж)="",НаимДиректора,НаимДиректораРодПадеж));
	СтруктураКонтЛица.Вставить("НаимДиректораКраткое", НаимДиректораКраткое);
	СтруктураКонтЛица.Вставить("ДолжностьДиректора", ДолжностьДиректора);
	СтруктураКонтЛица.Вставить("ДолжностьДиректораРодПадеж", ?(СокрЛП(ДолжностьДиректораРодПадеж)="",ДолжностьДиректора,ДолжностьДиректораРодПадеж));
	СтруктураКонтЛица.Вставить("ДействующийНаОсновании", СтрЗаменить(ДействующийНаОсновании,"Действующий на основании",""));

	
    возврат СтруктураКонтЛица;
	
КонецФункции

//========================================================
Процедура ПечатьOpenOffice() экспорт
	
	// Инициализация ОО
	Попытка
		ServiceManager = Новый COMОбъект("com.sun.star.ServiceManager");
	Исключение
		ВызватьИсключение(НСтр("ru = 'На Вашем Компьютере НЕ УСТАНОВЛЕН OpenOffice!'"));
	КонецПопытки;
	
	Попытка
		Desktop = ServiceManager.CreateInstance("com.sun.star.frame.Desktop");
	Исключение
		ВызватьИсключение(НСтр("ru = 'Ошибка при запуске сервиса Desktop программы OpenOffice!'"));
	КонецПопытки;
	
	// Получаем шаблон макета и сохраняем его на жесткий диск
	ДвоичныеДанныеШаблона = ЭтотОбъект.ПолучитьМакет("МакетOpenOffice");
#Если НЕ ВебКлиент Тогда
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("ODT");
	ДвоичныеДанныеШаблона.Записать(ИмяВременногоФайла);
#КонецЕсли
	
	ПараметрыДок = ПолучитьComSafeArray();
#Если Не ВебКлиент Тогда
	ПараметрыДок.SetValue(0, СвойствоЗначение(ServiceManager, "Hidden", Истина));
#КонецЕсли

	// Открываем макет в ОО, от пользователя он скрыт. 
	Document = Desktop.LoadComponentFromURL("file:///" + ИмяВременногоФайла, "_blank", 0, ПараметрыДок);
//	// Открываем новый пустой документ
//	Document = Desktop.LoadComponentFromURL("private:factory/swriter", "_blank", 0, ПараметрыДок);
	
#Если ВебКлиент Тогда
	Document.getCurrentController().getFrame().getContainerWindow().setVisible(Ложь);   //невидимый!
#КонецЕсли

	oViewCursor = Document.getCurrentController().getViewCursor();
	oTextCursor = Document.Text.createTextCursor();
	oViewCursor.gotoRange(oTextCursor, Ложь);
	oViewCursor.gotoEnd(Ложь);
	
//+++ 18.01.2018 г.  ===================================================================================
		массивДляЗамены	= ПолучитьМассивДляЗамены(); 
		для каждого стр1 из массивДляЗамены цикл
			ЗаменитьТекстOpenOffice(Document, стр1.Ключ, стр1.Значение);
		КонецЦикла;
		
		массивДляЗамены2 = ПолучитьМассивДляЗаменыКолонтитул(); 
		для каждого стр1 из массивДляЗамены2 цикл
			ЗаменитьТекстOpenOffice(Document, стр1.Ключ, стр1.Значение);
        КонецЦикла;
		
//======================================================================================================	
	
	// Покажем документ на экране
//+++( 06.02.2018 ----------сразу на принтер по умолчанию...-------------------
		Если РольДоступна("ПолныеПрава")                                                       //Бух
			или РольДоступна("яштФинДиректор")                                                 //Фин.отдел
			или РольДоступна("ПравоЗавершенияРаботыПользователей")				//IT-отдел
			или параметрыСеанса.ТекущийПользователь = СсылкаНаОбъект.Ответственный.НаправлениеПродаж.Руководитель //рукНапр
			или параметрыСеанса.ТекущийПользователь = СсылкаНаОбъект.НоменклатурнаяГруппа.Ответственный 	   //рукТГ
			или параметрыСеанса.ТекущийПользователь.ОсновноеПодразделение.Код = "00012" //Юр.отдел
		тогда
		// Покажем документ на экране
		ContainerWindow = Document.getCurrentController().getFrame().getContainerWindow();
		ContainerWindow.setVisible(Истина);
		ContainerWindow.setFocus();
		
		Иначе	
		// 13.02.2018
		печататьСразу = истина;
		#Если Клиент тогда
			Если Вопрос("Отправить на принтер (по умолчанию) прямо сейчас?",РежимДиалогаВопрос.ДаНет,0)<>КодВозвратаДиалога.Да тогда
				печататьСразу = ложь;
			КонецЕсли;	
		#КонецЕсли	
			Если печататьСразу тогда
			//1) document = ThisComponent.CurrentController.Frame
			doc1 = Document.getCurrentController().getFrame();
			
			//2) dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
			dispatcher = ServiceManager.CreateInstance("com.sun.star.frame.DispatchHelper");
			
			//3)dispatcher.executeDispatch(document, ".uno:PrintDefault", "", 0, Array())
			
			Array1 =ПолучитьComSafeArray();			
			Array1.SetValue(0, СвойствоЗначение(ServiceManager, "Hidden", TRUE));
			
			dispatcher.executeDispatch( doc1, ".uno:PrintDefault", "", 0, Array1 );  //Print -сразу на печать
			//dispatcher.executeDispatch( doc1, ".uno:Print", "", 0, Array1 );  //Print - выдаёт окошко печати....
			КонецЕсли;
		КонецЕсли;
ContainerWindow = Неопределено;
dispatcher = неопределено;
		//+++)

	Document = Неопределено;
	Desktop = Неопределено;
	ServiceManager = Неопределено;
	ScriptControl = Неопределено;
	
КонецПроцедуры

Функция ПолучитьComSafeArray()
	
#Если ВебКлиент Тогда	
	scr = Новый COMОбъект("MSScriptControl.ScriptControl");
	scr.language = "javascript";
	scr.eval("Массив=new Array()");
	Возврат scr.eval("Массив");
#Иначе
	Возврат Новый COMSafeArray("VT_DISPATCH", 1);
#КонецЕсли
	
КонецФункции

// Получает специальную структуру, через которую объектам UNO устанавливаются
// параметры.
//
Функция СвойствоЗначение(знач ServiceManager, знач Свойство, знач Значение)
	
	PropertyValue = ServiceManager.Bridge_GetStruct("com.sun.star.beans.PropertyValue");
	PropertyValue.Name = Свойство;
	PropertyValue.Value = Значение;
	
	Возврат PropertyValue;
	
КонецФункции

 
//======================================================================================================
процедура ЗаменитьТекстWord(ДокументКонтент, ТекстДляПоиска, ТекстДляЗамены)
	
	
	Если стрДлина(ТекстДляЗамены)>250 тогда
		L = стрДлина(ТекстДляЗамены);
		ТекстДляЗамены0 = лев(ТекстДляЗамены,250);
		ТекстДляПоискаN = ТекстДляПоиска+"0";
		N = цел(L/250);
		масДляЗамены = новый массив;
		масДляЗамены.Добавить(ТекстДляЗамены0);
		для i=1 по N цикл
			масДляЗамены.Добавить( сред(ТекстДляЗамены,i*250+1, 250) );
			ТекстДляПоискаN = ТекстДляПоискаN + ТекстДляПоиска+строка(i);
		КонецЦикла;
		ДокументКонтент.Execute(ТекстДляПоиска, Ложь, Истина, Ложь,,,Истина,,Ложь,ТекстДляПоискаN,2);
		
		для i=0 по N цикл
			Попытка
				ДокументКонтент.Execute(ТекстДляПоиска+строка(i), Ложь, Истина, Ложь,,,Истина,,Ложь,масДляЗамены[i],2);
			Исключение
				сообщить("Не удалось заменить поле "+ТекстДляПоиска+строка(i)+" на "+масДляЗамены[i]+" :  "+ОписаниеОшибки(), СтатусСообщения.Внимание);
			КонецПопытки;
		КонецЦикла;
	иначе
		ТекстДляЗамены1 = ТекстДляЗамены;
		Попытка
			ДокументКонтент.Execute(ТекстДляПоиска, Ложь, Истина, Ложь,,,Истина,,Ложь,ТекстДляЗамены,2);
		Исключение
			сообщить("Не удалось заменить поле "+ТекстДляПоиска+" на "+ТекстДляЗамены+" :  "+ОписаниеОшибки(), СтатусСообщения.Внимание);
		КонецПопытки;
	КонецЕсли;	
	
	
КонецПроцедуры

// По аналогии с Word импользуем медоды поиска и замены ключевых слов на данные из 1с
// Не забываем приводить данные к "простому" виду (Строка, число...)
процедура ЗаменитьТекстOpenOffice(Document, ТекстДляПоиска, ТекстДляЗамены)
	// Получим область Макета	
	ПФ_ReplaceDescriptor = Document.createReplaceDescriptor();
	ПФ_ReplaceDescriptor.SearchString  = ТекстДляПоиска;
	ПФ_ReplaceDescriptor.ReplaceString = ТекстДляЗамены;
	Document.replaceAll(ПФ_ReplaceDescriptor);
КонецПроцедуры


