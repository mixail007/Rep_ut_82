//ЗаказПокупателя
Функция ПечатьЗаказаПокупателя(Тип = "Заказ")
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";

   Макет = ПолучитьМакет("Заказ");

	// Выводим шапку накладной
	
		Если  СокрЛП(СсылкаНаОбъект.МаркаАвтомобиля)<>"" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Авто");
		ОбластьМакета.Параметры.Авто = СокрЛП(СсылкаНаОбъект.МаркаАвтомобиля);
		ОбластьМакета.Параметры.НомерАвто = СокрЛП(СсылкаНаОбъект.ГосНомерАвтомобиля);
		ОбластьМакета.Параметры.Пункт = СокрЛП(СсылкаНаОбъект.АдресДоставки);
		ТабДокумент.Вывести(ОбластьМакета);
		КОнецЕсли;
		 
	//СведенияОПоставщике = СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, Шапка.Дата);

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Заказ покупателя");
	//+++ Штрих-Код номера документа - февраль 2012
	// требуется установленная компонента 1CBarCode.exe
    	ОбШтрихКодСообщение = глТорговоеОборудование.ПолучитьШтрихКодПоДокументу(СсылкаНаОбъект);
		попытка
		ОбШтрихКод=ОбластьМакета.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
		КонецПопытки; 
	//+++)
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ПоставщикТекст = "Поставщик:";//+++
	ТабДокумент.Вывести(ОбластьМакета);

	//СведенияОПолучателе = СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.КОнтрагент, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ПокупательТекст = "Покупатель:";
	ТабДокумент.Вывести(ОбластьМакета);

		
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказПокупателя", СсылкаНаОбъект);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ЗаказПокупателяТовары.НомерСтроки, 1000) КАК НомерСтроки,
	               |	ЗаказыПокупателейОстатки.Номенклатура.Код КАК Код,
	               |	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	               |	ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ЗаказыПокупателейОстатки.КоличествоОстаток КАК КОличествоЗаказано,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.Склад, 0) КАК Склад
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя = &ЗаказПокупателя) КАК ЗаказыПокупателейОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(,(НЕ Склад.Транзитный)) КАК ТоварыНаСкладахОстатки
	               |		ПО ЗаказыПокупателейОстатки.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры = ТоварыНаСкладахОстатки.ХарактеристикаНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	               |			ЗаказПокупателяТовары.НомерСтроки КАК НомерСтроки,
	               |			ЗаказПокупателяТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	               |		ИЗ
	               |			Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |		ГДЕ
	               |			ЗаказПокупателяТовары.Ссылка = &ЗаказПокупателя) КАК ЗаказПокупателяТовары
	               |		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказПокупателяТовары.Номенклатура
	               |			И ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры = ЗаказПокупателяТовары.ХарактеристикаНоменклатуры
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки,
	               |	ТоварыНаСкладахОстатки.Склад.Наименование
	               |ИТОГИ
	               |	МИНИМУМ(НомерСтроки),
	               |	СРЕДНЕЕ(КОличествоЗаказано),
	               |	СУММА(КоличествоОстаток)
	               |ПО
	               |	Номенклатура,
	               |	ХарактеристикаНоменклатуры
	               |АВТОУПОРЯДОЧИВАНИЕ";
    	
		
	Результат = Запрос.Выполнить();
	
	КоличествоСтрок=0;
	КоличествоЗаказаноИтого=0;
	КоличествоЗаказаноХарИтого = 0;
	
	Если не Результат.Пустой() Тогда
	//ТабДокумент.Вывести(ОбластьМакета);
	//ТабДокумент.НачатьАвтогруппировкуСтрок();

	ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    КоррСтр=0;
	Пока ВыборкаНоменклатура.Следующий() Цикл
	//+++ 24.02.2012 - это Группировка не влияет на кол.строк!	КоличествоСтрок=КоличествоСтрок+1;
		//КоличествоЗаказаноИтого=КоличествоЗаказаноИтого+ВыборкаНоменклатура.КоличествоЗаказано;
		//ОбластьНоменклатура=Макет.ПолучитьОбласть("Строка");
		//ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		//ОбластьНоменклатура.Параметры.Склад	="";
			
	//+++( 24.02.2012
	ВыборкаХар = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    Пока ВыборкаХар.Следующий() Цикл
		КоличествоСтрок=КоличествоСтрок+1;
		КоличествоЗаказаноИтого=КоличествоЗаказаноИтого+ВыборкаХар.КоличествоЗаказано;
		
	Если ЗначениеЗаполнено(ВыборкаХар.ХарактеристикаНоменклатуры) тогда	
		Если ВыборкаХар.КоличествоЗаказано>ВыборкаХар.КоличествоОстаток тогда
			ОбластьНоменклатура=Макет.ПолучитьОбласть("СтрокаХар2");
		иначе
			ОбластьНоменклатура=Макет.ПолучитьОбласть("СтрокаХар");
		КонецЕсли;
	иначе // как было - без характеристики!
		Если ВыборкаХар.КоличествоЗаказано>ВыборкаХар.КоличествоОстаток тогда
			ОбластьНоменклатура=Макет.ПолучитьОбласть("Строка2");
		иначе
			ОбластьНоменклатура=Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
	КонецЕсли;
		
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаХар);
		ОбластьНоменклатура.Параметры.Склад	= "";
		//ОбластьНоменклатура.Параметры.Код	= "";
		Если ВыборкаХар.НомерСтроки=1000 тогда
			КоррСтр=КоррСтр+1;  // строки из Корректировки заказа покупателя, их нет в Заказе!
			ОбластьНоменклатура.Параметры.НомерСтроки = 1000+КоррСтр;
		КонецЕсли;
	//+++)

		ВыборкаСклад = ВыборкаХар.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Если ВыборкаСклад.Количество()= 1 Тогда
		ВыборкаСклад.Следующий(); 	
		ОбластьНоменклатура.Параметры.Склад	= ВыборкаСклад.Склад;
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());	
			
		ИначеЕсли ВыборкаСклад.Количество()>0 Тогда
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());	
			Пока ВыборкаСклад.Следующий() Цикл
				Если ВыборкаСклад.КоличествоЗаказано>ВыборкаСклад.КоличествоОстаток тогда
					ОбластьСклад=Макет.ПолучитьОбласть("Строка3");
                иначе
					ОбластьСклад=Макет.ПолучитьОбласть("Строка1");
				КонецЕсли;
			
				ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
				ОбластьСклад.Параметры.Номенклатура="";
				ОбластьСклад.Параметры.Код = "";
				ОбластьСклад.Параметры.КоличествоЗаказано="";
				ОбластьСклад.Параметры.НомерСтроки="";
				ТабДокумент.Вывести(ОбластьСклад, ВыборкаСклад.Уровень());
			КонецЦикла;
			
		Иначе //	ВыборкаСклад.Количество()<=0
			ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());
		КонецЕсли;
			
	КонецЦикла;//+++ 24.02.2012 Характеристика
 КонецЦикла;//номенклатура	
	
	КонецЕсли;

	ОбластьИтого=Макет.ПолучитьОбласть("Итого");
	ОбластьИтого.Параметры.КоличествоСтрок=КоличествоСтрок;
	ОбластьИтого.Параметры.КоличествоЗаказаноИтого=КоличествоЗаказаноИтого;
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьМакета=Макет.ПолучитьОбласть("Примечание");
	ОбластьМакета.Параметры.Комментарий=СсылкаНаОбъект.Комментарий;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета=Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьМакета.Параметры.Менеджер=СсылкаНаОбъект.Ответственный;
	ОбластьМакета.Параметры.ФИОИсполнителя = "Фролов А.И.";
	ТабДокумент.Вывести(ОбластьМакета);
	

	
	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()

//ВнутреннийЗаказ
Функция ПечатьВнутреннегоЗаказа()
    	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ВнутреннийЗаказТовары.Ссылка.Дата КАК Дата,
	              |	ВнутреннийЗаказТовары.Ссылка.Номер КАК Номер,
	              |	ВнутреннийЗаказТовары.Ссылка.Заказчик,
	              |	ВнутреннийЗаказТовары.Ссылка.ДатаОтгрузки,
	              |	ВнутреннийЗаказТовары.Ссылка.Организация КАК Организация,
	              |	ВнутреннийЗаказТовары.Размещение,
	              |	ВнутреннийЗаказТовары.Ссылка.Ответственный
	              |ИЗ
	              |	Документ.ВнутреннийЗаказ.Товары КАК ВнутреннийЗаказТовары
	              |ГДЕ
	              |	ВнутреннийЗаказТовары.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	
	Шапка.Следующий();
	ЕстьКубатура = Ложь;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_ВнутреннийЗаказ";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЗаказПокупателяТовары.НомерСтроки КАК НомерСтроки,
	               |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	               |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК Товар,
	               |	ВложенныйЗапрос.Количество КАК Количество,
	               |	ЕСТЬNULL(ЗаказПокупателяТовары.Количество, 0) - ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК КоличествоОтгружено,
	               |	ВложенныйЗапрос.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВложенныйЗапрос.Цена КАК Цена,
	               |	ВложенныйЗапрос.Сумма КАК Сумма,
	               |	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	               |	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул
	               |ИЗ
	               |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	               |		СУММА(0) КАК Цена,
	               |		СУММА(ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) КАК Количество,
	               |		СУММА(0) КАК Сумма
	               |	ИЗ
	               |		РегистрНакопления.ВнутренниеЗаказы.Остатки(, ВнутреннийЗаказ = &ТекущийДокумент) КАК ЗаказыПокупателейОстатки
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ЗаказыПокупателейОстатки.Номенклатура) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |			МИНИМУМ(ВнутреннийЗаказТовары.НомерСтроки) КАК НомерСтроки,
	               |			ВнутреннийЗаказТовары.Номенклатура КАК Номенклатура,
	               |			ВнутреннийЗаказТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |			СУММА(ВнутреннийЗаказТовары.Количество) КАК Количество,
	               |			ВнутреннийЗаказТовары.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
	               |			СУММА(ВнутреннийЗаказТовары.КоличествоМест) КАК КоличествоМест
	               |		ИЗ
	               |			Документ.ВнутреннийЗаказ.Товары КАК ВнутреннийЗаказТовары
	               |		ГДЕ
	               |			ВнутреннийЗаказТовары.Ссылка = &ТекущийДокумент
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВнутреннийЗаказТовары.Номенклатура,
	               |			ВнутреннийЗаказТовары.ЕдиницаИзмерения,
	               |			ВнутреннийЗаказТовары.ЕдиницаИзмеренияМест) КАК ЗаказПокупателяТовары
	               |		ПО (ЗаказПокупателяТовары.Номенклатура = ВложенныйЗапрос.Номенклатура)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки
	               |АВТОУПОРЯДОЧИВАНИЕ";

	РезультатТаблица = Запрос.Выполнить().Выгрузить();

	Макет = ПолучитьМакет("Заказ");

	// Выводим шапку накладной
	
	//Если (СокрЛП(Шапка.АдресДоставки) <> "") ИЛИ
	//	 (СокрЛП(Шапка.МаркаАвтомобиля) <> "") ИЛИ
	//	 (СокрЛП(Шапка.ГосНомерАвтомобиля) <> "") Тогда 
	//	 
	//	ОбластьМакета = Макет.ПолучитьОбласть("Авто");
	//	ОбластьМакета.Параметры.Авто      = СокрЛП(Шапка.МаркаАвтомобиля);
	//	ОбластьМакета.Параметры.НомерАвто = СокрЛП(Шапка.ГосНомерАвтомобиля);
	//	ОбластьМакета.Параметры.Пункт 	  = СокрЛП(Шапка.АдресДоставки);
	//	ТабДокумент.Вывести(ОбластьМакета);
	//	 
	//КонецЕсли;
	

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, "Внутренний Заказ");
	
	//+++ Штрих-Код номера документа - февраль 2012
	// требуется установленная компонента 1CBarCode.exe
    	ОбШтрихКодСообщение = глТорговоеОборудование.ПолучитьШтрихКодПоДокументу(СсылкаНаОбъект);
		попытка
		ОбШтрихКод=ОбластьМакета.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
		КонецПопытки; 
	//+++)

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик"); //КУДА перемещаем...
	ОбластьМакета.Параметры.ПредставлениеПоставщика = Шапка.Заказчик; //склад 
	ОбластьМакета.Параметры.ПоставщикТекст = "На склад:";
	ТабДокумент.Вывести(ОбластьМакета);

	//+++ по размещению - ссылка на Склад - откуда перемещается....ЗаказПокупателя
	Если ЗначениеЗаполнено(Шапка.Размещение) тогда
		 Если ТипЗнч(Шапка.Размещение)=Тип("ДокументСсылка.ЗаказПокупателя") тогда
	         текст1 = "Покупатель:";
		  Заказчик1 = ОписаниеОрганизации(СведенияОЮрФизЛице(Шапка.Размещение.Контрагент, Шапка.Дата), "ИНН,ПолноеНаименование,ФактическийАдрес,Телефоны,");
		иначе
		  текст1   = "Менеджер:";
		 Заказчик1 = Шапка.Ответственный;
		КонецЕсли;
	Иначе
	    текст1 = "Для менеджера:";
	 Заказчик1 = Шапка.Ответственный;
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	//+++ попытаемся заполнить на основании ТЧ.Размещение
		
	ОбластьМакета.Параметры.ПокупательТекст = текст1;
	ОбластьМакета.Параметры.ПредставлениеПолучателя = Формат(?(Шапка.ДатаОтгрузки=Дата(1,1,1), Шапка.Дата, Шапка.ДатаОтгрузки),"ДЛФ=DD") +" -> " + Заказчик1; //
	ТабДокумент.Вывести(ОбластьМакета);

	ЕстьСкидки = Ложь;

	ВыводитьКоды = Истина;
	Колонка = "Код";
	
	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");

	ТабДокумент.Вывести(ОбластьНомера);
	ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
	ТабДокумент.Присоединить(ОбластьКодов);
	ТабДокумент.Присоединить(ОбластьДанных);
	
	
	//Если ЕстьКубатура Тогда 
	//	ОбластьСуммы.Параметры.Вид = "%";
	//Иначе
	//	ОбластьСуммы.Параметры.Вид = "куб.м.";
	//КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьСуммы);

	ОбластьКолонкаТовар = Макет.Область("Товар");

	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");

	ВсегоКубов = 0;
	КоличествоСтрок=0;
   	КоличествоИтого = 0;  //+++
	КоличествоОтгруженоИтого = 0;
	
	Для каждого ВыборкаСтрокТовары Из РезультатТаблица Цикл 
 	//КоличествоСтрок=КоличествоСтрок+1;
		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
		//	Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
   КоличествоСтрок=КоличествоСтрок+1;
   
   		//ОбластьНомера.Параметры.НомерСтроки = РезультатТаблица.Индекс(ВыборкаСтрокТовары) + 1;
		ОбластьНомера.Параметры.НомерСтроки = ВыборкаСтрокТовары.НомерСтроки;
		ТабДокумент.Вывести(ОбластьНомера);

		ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
		ТабДокумент.Присоединить(ОбластьКодов);

		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьДанных.Параметры.Товар       = СокрП(ВыборкаСтрокТовары.Товар) ;
		
		КоличествоИтого = КоличествоИтого + ВыборкаСтрокТовары.Количество;//+++
	 	КоличествоОтгруженоИтого = КоличествоОтгруженоИтого + ВыборкаСтрокТовары.КоличествоОтгружено;
	 
	 	ТабДокумент.Присоединить(ОбластьДанных);
				
		ТабДокумент.Присоединить(ОбластьСуммы);

	КонецЦикла;

	// Вывести Итого
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьСкидок = Макет.ПолучитьОбласть("Итого|Сумма");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Итого|Сумма");

	ОбластьНомера.Параметры.КоличествоСтрок=КоличествоСтрок;
	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	
	ОбластьДанных.Параметры.КоличествоИтого = КоличествоИтого; //+++
	ОбластьДанных.Параметры.КоличествоОтгруженоИтого = 0; //+++ 11.08.2011 КоличествоОтгруженоИтого; //,"ЧДЦ=2"); 

	ТабДокумент.Присоединить(ОбластьДанных);
	
	ОбластьСуммы.Параметры.ОбъемИтог = Формат(ВсегоКубов, "ЧДЦ=2");
	
	ТабДокумент.Присоединить(ОбластьСуммы);

	ОбластьНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
	
	
	
	ТабДокумент.Вывести(ОбластьНомера);
	
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьДанных);
	
	ТабДокумент.Присоединить(ОбластьСуммы);

	//ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ЗапросТовары.Количество()
	//+ ", на сумму " + ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
	//ТабДокумент.Вывести(ОбластьМакета);

	// Вывести подписи
	
	ОбластьМакета = Макет.ПолучитьОбласть("Примечание"); 
	ОбластьМакета.Параметры.Примечание = "Комментарий:" +СсылкаНаОбъект.Комментарий;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьМакета.Параметры.ФИОИсполнителя = "Фролов А.И."; //+++
	ОбластьМакета.Параметры.Менеджер = СсылкаНаОбъект.Ответственный;
 	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаРасположение");
	
	
	
	ОбластьСклад = Макет.ПолучитьОбласть("СтрокаСклад");
	
	ОбластьНоменклатура = Макет.ПолучитьОбласть("СтрокаНоменклатура");
	ОбластьКомплектующая = Макет.ПолучитьОбласть("СтрокаКомплектующая");
	
	СписокНоменклатуры = Новый СписокЗначений;
	
	СписокНоменклатуры.Очистить();
	
	Для каждого Строка Из РезультатТаблица Цикл
		Если СписокНоменклатуры.НайтиПоЗначению(Строка.Номенклатура)=Неопределено Тогда
			СписокНоменклатуры.Добавить(Строка.Номенклатура);
		КонецЕсли;
	КонецЦикла; 
	
	ЗапросПоНоменклатуре = Новый Запрос;
	
	ЗапросПоНоменклатуре.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                             |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	                             |	ТоварыНаСкладахОстатки.Номенклатура.Код КАК Код,
	                             |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	                             |	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	                             |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки
	                             |ИЗ
	                             |	РегистрНакопления.ТоварыНаСкладах.Остатки(&ТекДата, Номенклатура В (&Товары)) КАК ТоварыНаСкладахОстатки
	                             |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	                             |			МИНИМУМ(ВнутреннийЗаказТовары.НомерСтроки) КАК НомерСтроки,
	                             |			ВнутреннийЗаказТовары.Номенклатура КАК Номенклатура,
	                             |			ВнутреннийЗаказТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	                             |			ВнутреннийЗаказТовары.Качество КАК Качество
	                             |		ИЗ
	                             |			Документ.ВнутреннийЗаказ.Товары КАК ВнутреннийЗаказТовары
	                             |		ГДЕ
	                             |			ВнутреннийЗаказТовары.Ссылка = &ТекущийДокумент
	                             |			И ВнутреннийЗаказТовары.Номенклатура В(&Товары)
	                             |		
	                             |		СГРУППИРОВАТЬ ПО
	                             |			ВнутреннийЗаказТовары.Номенклатура,
	                             |			ВнутреннийЗаказТовары.ХарактеристикаНоменклатуры,
	                             |			ВнутреннийЗаказТовары.Качество) КАК ВложенныйЗапрос
	                             |		ПО ТоварыНаСкладахОстатки.Номенклатура = ВложенныйЗапрос.Номенклатура
	                             |			И ТоварыНаСкладахОстатки.ХарактеристикаНоменклатуры = ВложенныйЗапрос.ХарактеристикаНоменклатуры
	                             |			И ТоварыНаСкладахОстатки.Качество = ВложенныйЗапрос.Качество
	                             |
	                             |СГРУППИРОВАТЬ ПО
	                             |	ТоварыНаСкладахОстатки.Номенклатура,
	                             |	ТоварыНаСкладахОстатки.Склад,
	                             |	ТоварыНаСкладахОстатки.Номенклатура.Код,
	                             |	ВложенныйЗапрос.НомерСтроки
	                             |
	                             |УПОРЯДОЧИТЬ ПО
	                             |	НомерСтроки
	                             |ИТОГИ
	                             |	СУММА(КоличествоОстаток),
	                             |	МИНИМУМ(НомерСтроки)
	                             |ПО
	                             |	Номенклатура
	                             |АВТОУПОРЯДОЧИВАНИЕ";
	
	ЗапросПоНоменклатуре.УстановитьПараметр("ТекДата", ТекущаяДата());//СсылкаНаОбъект.Дата);
	ЗапросПоНоменклатуре.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект.Ссылка);
	ЗапросПоНоменклатуре.УстановитьПараметр("Товары", СписокНоменклатуры);
	
	Результат = ЗапросПоНоменклатуре.Выполнить();
	
	Если не Результат.Пустой() Тогда
	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.НачатьАвтогруппировкуСтрок();

	ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		
		//ОбластьНоменклатура.Параметры.Номенклатура = ВыборкаНоменклатура.КоличествоОстаток;
	
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());

		ВыборкаСклад = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаСклад.Следующий() Цикл
			
			ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
			
			ТабДокумент.Вывести(ОбластьСклад, ВыборкаСклад.Уровень());

		КонецЦикла;
			
	КонецЦикла;

	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();

	КонецЕсли;

	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Отчет по комплектующим к дискам
	
	ЗапросПроверка = Новый Запрос;
	
	ЗапросПроверка.Текст="ВЫБРАТЬ
	                     |	Номенклатура,
	                     |	Комплектующая
	                     |ИЗ
	                     |	РегистрСведений.КомплектующиеНоменклатуры 
						 | ГДЕ Номенклатура В (&Товары) И Номенклатура В ИЕРАРХИИ(&Диски)";
						 
	ЗапросПроверка.УстановитьПараметр("Товары",СписокНоменклатуры);					 
	ЗапросПроверка.УстановитьПараметр("Диски",Справочники.Номенклатура.НайтиПоКоду("0001752"));					 
						 
	Результат=ЗапросПроверка.Выполнить();					 
	Если Результат.Пустой() Тогда // не выводим шпаргалку по комплектующим
		Возврат ТабДокумент;
	КонецЕсли;	
	
	
	
	ВыводитьОстаткиСРазбивкойПоСкладам=Истина;
	
 ЗапросОстатки= Новый Запрос;
 ЗапросОстатки.Текст="ВЫБРАТЬ 
|Номенклатура, Склад,КоличествоОстаток 
|ИЗ
|РегистрНакопления.ТоварыНаСкладах.Остатки(
|					&КонецПериода,
|					
|Номенклатура  В (ВЫБРАТЬ РАЗЛИЧНЫЕ Комплектующая	ИЗ	РегистрСведений.КомплектующиеНоменклатуры)						
|)
|УПОРЯДОЧИТЬ ПО Номенклатура.Наименование,Склад.Наименование" ;

ЗапросОстатки.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДата()));
ТаблицаОстаткиПоСкладам=ЗапросОстатки.Выполнить().Выгрузить();

	
	
	ЗапросКомплекты=Новый Запрос;
	
	ЗапросКомплекты.Текст=	
	"ВЫБРАТЬ
|		КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
|		КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
|		ЕСТЬNULL(ТоварыНаСкладахОстаткиНоменклатура.КоличествоОстаток, 0) КАК ОстатокКомплект,
|		ВЫРАЗИТЬ (ЕСТЬNULL(ТоварыНаСкладахОстаткиКомплектующая.КоличествоОстаток, 0)/КомплектующиеНоменклатуры.Количество КАК ЧИСЛО(15,2)) ОстатокКомплектующая
|		ПОМЕСТИТЬ ВТ_КОМПЛЕКТЫ		
|	ИЗ
|		(ВЫБРАТЬ
|			КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
|			КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
|			КомплектующиеНоменклатуры.Количество
|		ИЗ
|			РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
|		ГДЕ
|			КомплектующиеНоменклатуры.Номенклатура В ИЕРАРХИИ(&Диски)) КАК КомплектующиеНоменклатуры
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
|				&КонецПериода,
|					
|						) КАК ТоварыНаСкладахОстаткиНоменклатура
|			ПО КомплектующиеНоменклатуры.Номенклатура = ТоварыНаСкладахОстаткиНоменклатура.Номенклатура
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
|					&КонецПериода,
|					
|						) КАК ТоварыНаСкладахОстаткиКомплектующая
|			ПО КомплектующиеНоменклатуры.Комплектующая = ТоварыНаСкладахОстаткиКомплектующая.Номенклатура

|;

|ВЫБРАТЬ
|  А.Комплект,
|  А.Комплектующая,
|  СРЕДНЕЕ(А.ОстатокКомплект)  ОстатокКомплект, 
| // МИНИМУМ (А.ОстатокКомплектующая)  ОстатокКомплектующая,
|  СРЕДНЕЕ (А.ОстатокКомплектующая)  ОстатокКомплектующая,
|  МИНИМУМ(А.ОстатокМатериал)  ОстатокМатериал
| ПОМЕСТИТЬ ВТ_ПОЛНЫЙСПИСОК
|  ИЗ
|  
|(ВЫБРАТЬ Комплекты1.Номенклатура Комплект,
|		Комплекты1.Комплектующая Комплектующая,
|		Комплекты2.Комплектующая,
|		Комплекты1.ОстатокКомплект,    // остаток готовая продукция
|		Комплекты1.ОстатокКомплектующая, // остаток полуфабрикат
|		ЕстьNULL(Комплекты2.ОстатокКомплектующая,0) ОстатокМатериал  // остаток материал
|ИЗ	ВТ_КОМПЛЕКТЫ Комплекты1	
|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КОМПЛЕКТЫ Комплекты2
|ПО  Комплекты1.Комплектующая=Комплекты2.Номенклатура ) А
|//ГДЕ А.Комплект=&Комплект
|СГРУППИРОВАТЬ ПО А.Комплект, А.Комплектующая

|;

|ВЫБРАТЬ 
|  Комплект,
|  Комплектующая,
|  ОстатокКомплект,
|  ОстатокКомплектующая+ОстатокМатериал ОстатокКомплектующая
|  ПОМЕСТИТЬ ВТ_КОМПЛЕКТУЮЩИЕ
|  ИЗ
|  ВТ_ПОЛНЫЙСПИСОК
|  ГДЕ Комплект НЕ В (ВЫБРАТЬ РАЗЛИЧНЫЕ Комплектующая ИЗ РегистрСведений.КомплектующиеНоменклатуры)
|	
| ;
| 
| ВЫБРАТЬ 
| Комплект.Код Код,
| Комплект,
| СРЕДНЕЕ (ОстатокКомплект)+МИНИМУМ (ОстатокКомплектующая) МожноСобратьКоличество
| 
| ИЗ
| ВТ_КОМПЛЕКТУЮЩИЕ
| СГРУППИРОВАТЬ ПО Комплект 
| ИМЕЮЩИЕ СРЕДНЕЕ (ОстатокКомплект)+МИНИМУМ (ОстатокКомплектующая)>0
| УПОРЯДОЧИТЬ ПО  Комплект.Наименование ";

ЗапросКомплекты.УстановитьПараметр("Диски", Справочники.Номенклатура.НайтиПоКоду("0001752"));
ЗапросКомплекты.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДата()));

ТаблицаКомплекты=ЗапросКомплекты.Выполнить().Выгрузить();


	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ВнутреннийЗаказТовары.НомерСтроки, 0) КАК НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура
	|ПОМЕСТИТЬ ВТ_ТабЧастьНоменклатура
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.Номенклатура КАК Номенклатура
	|	ИЗ
	|		РегистрНакопления.ВнутренниеЗаказы.Остатки(, ВнутреннийЗаказ = &ТекущийДокумент) КАК ЗаказыОстатки) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВнутреннийЗаказТовары.НомерСтроки КАК НомерСтроки,
	|			ВнутреннийЗаказТовары.Номенклатура КАК Номенклатура
	|		ИЗ
	|			Документ.ВнутреннийЗаказ.Товары КАК ВнутреннийЗаказТовары
	|		ГДЕ
	|			ВнутреннийЗаказТовары.Ссылка = &ТекущийДокумент) КАК ВнутреннийЗаказТовары
	|		ПО ВложенныйЗапрос.Номенклатура = ВнутреннийЗаказТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	|	КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
	|	ЕСТЬNULL(ТоварыНаСкладахОстаткиНоменклатура.КоличествоОстаток, 0) КАК ОстатокКомплект,
	|	ЕСТЬNULL(ТоварыНаСкладахОстаткиКомплектующая.КоличествоОстаток, 0) КАК ОстатокКомплектующая
	|ПОМЕСТИТЬ ВТ_КОМПЛЕКТЫ
	|ИЗ
	|	(ВЫБРАТЬ
	|		КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	|		КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
	|		КомплектующиеНоменклатуры.Количество КАК Количество
	|	ИЗ
	|		РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	|	ГДЕ
	|		КомплектующиеНоменклатуры.Номенклатура В ИЕРАРХИИ(&Диски)) КАК КомплектующиеНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&КонецПериода, Номенклатура В ИЕРАРХИИ (&Диски)) КАК ТоварыНаСкладахОстаткиНоменклатура
	|		ПО КомплектующиеНоменклатуры.Номенклатура = ТоварыНаСкладахОстаткиНоменклатура.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&КонецПериода, Номенклатура В ИЕРАРХИИ (&Диски)) КАК ТоварыНаСкладахОстаткиКомплектующая
	|		ПО КомплектующиеНоменклатуры.Комплектующая = ТоварыНаСкладахОстаткиКомплектующая.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.Комплект.Код КАК Код,
	|	ЕСТЬNULL(ВТ_ТабЧастьНоменклатура.НомерСтроки,0) КАК НомерСтроки,
	|	А.Комплект КАК Комплект,
	|	А.Комплектующая КАК Комплектующая,
	|	А.Материал,
	|	А.ОстатокКомплект КАК ОстатокКомплект,
	|	А.ОстатокКомплектующая КАК ОстатокКомплектующая,
	|	А.ОстатокМатериал КАК ОстатокМатериал
	|ИЗ
	|	(ВЫБРАТЬ
	|		Комплекты1.Номенклатура КАК Комплект,
	|		Комплекты1.Комплектующая КАК Комплектующая,
	|		Комплекты2.Комплектующая КАК Материал,
	|		Комплекты1.ОстатокКомплект КАК ОстатокКомплект,
	|		Комплекты1.ОстатокКомплектующая КАК ОстатокКомплектующая,
	|		ЕСТЬNULL(Комплекты2.ОстатокКомплектующая, 0) КАК ОстатокМатериал
	|	ИЗ
	|		ВТ_КОМПЛЕКТЫ КАК Комплекты1
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КОМПЛЕКТЫ КАК Комплекты2
	|			ПО Комплекты1.Комплектующая = Комплекты2.Номенклатура) КАК А
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабЧастьНоменклатура КАК ВТ_ТабЧастьНоменклатура
	|		ПО А.Комплект = ВТ_ТабЧастьНоменклатура.Номенклатура
	|ГДЕ
	|	(НЕ А.Комплект В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РегистрСведений.КомплектующиеНоменклатуры.Комплектующая
	|				ИЗ
	|					РегистрСведений.КомплектующиеНоменклатуры))
	|	И А.Комплект В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Документ.ВнутреннийЗаказ.Товары.Номенклатура
	|			ИЗ
	|				Документ.ВнутреннийЗаказ.Товары
	|			ГДЕ
	|				Документ.ВнутреннийЗаказ.Товары.Ссылка = &ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	А.Комплект.Наименование,
	|	А.Комплектующая.Наименование
	|ИТОГИ
	|	СРЕДНЕЕ(НомерСтроки),
	|	СРЕДНЕЕ(ОстатокКомплект),
	|	МИНИМУМ(ОстатокКомплектующая),
	|	МИНИМУМ(ОстатокМатериал)
	|ПО
	|	Комплект,
	|	Комплектующая";

	Запрос.УстановитьПараметр("Диски", Справочники.Номенклатура.НайтиПоКоду("0001752"));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект.Ссылка);

	
	Результат = Запрос.Выполнить();

	//ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//ОбластьЗаголовок.Параметры.КонецПериода= Формат(КонДата,"ДФ=dd.MM.yyyy");
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("Шапка3");
	
	ОбластьШапкаТаблицы.Параметры.Примечание=СсылкаНаОбъект.Комментарий; 
	
	ОбластьКомплект = Макет.ПолучитьОбласть("Комплект");
	ОбластьКомплектующая = Макет.ПолучитьОбласть("Комплектующая");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	
	//ТабДок.Вывести(ОбластьЗаголовок);
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	ТабДокумент.НачатьАвтогруппировкуСтрок();

	ВыборкаКомплект = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
     
	Пока ВыборкаКомплект.Следующий() Цикл
		ОбластьКомплект.Параметры.Заполнить(ВыборкаКомплект);   // ОстатокКомплект не выводим
		СтрокаКомплект=ТаблицаКомплекты.Найти(ВыборкаКомплект.Комплект.Код,"Код");
		//Если СтрокаКомплект<>Неопределено И СтрокаКомплект.МожноСобратьКоличество>0 Тогда
		//	
		//	ОбластьКомплект.Параметры.КоличествоМожноСобрать=СтрокаКомплект.МожноСобратьКоличество ;
		//Иначе
		//	ОбластьКомплект.Параметры.КоличествоМожноСобрать=0;
		//КонецЕсли;	

		//Если ВыборкаКомплект.НомерСтроки<1000 Тогда
		//ОбластьКомплект.Параметры.Комплект=Строка(ВыборкаКомплект.НомерСтроки)+"."+ВыборкаКомплект.Комплект.Код+"."+Строка(ВыборкаКомплект.Комплект);
		
		//КонецЕсли;

		ТабДокумент.Вывести(ОбластьКомплект, ВыборкаКомплект.Уровень());
		
		ВыборкаКомплектующая = ВыборкаКомплект.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаКомплектующая.Следующий() Цикл
			ОбластьКомплектующая.Параметры.Заполнить(ВыборкаКомплектующая);
			ОбластьКомплектующая.Параметры.Код=ВыборкаКомплектующая.Комплектующая.Код;
			ОбластьКомплектующая.Параметры.КодСБИС=ВыборкаКомплектующая.Комплектующая.КодСБИС;
			//ОбластьКомплектующая.Параметры.Комплектующая=ВыборкаКомплектующая.Комплектующая.Код+"."+Строка(ВыборкаКомплектующая.Комплектующая);
			ТабДокумент.Вывести(ОбластьКомплектующая, ВыборкаКомплектующая.Уровень());
			
			// Выводим остатки по складам
			Если ВыводитьОстаткиСРазбивкойПоСкладам Тогда
				СтрокиПоСкладам=ТаблицаОстаткиПоСкладам.НайтиСтроки(Новый Структура("Номенклатура",ВыборкаКомплектующая.Комплектующая));
				Если СтрокиПоСкладам<>Неопределено И СтрокиПоСкладам.Количество()>0 Тогда
					Для каждого СтрокаСклад ИЗ СтрокиПоСкладам Цикл
					ОбластьСклад = Макет.ПолучитьОбласть("СтрокаСклад3");
					ОбластьСклад.Параметры.Склад= СтрокаСклад.Склад;
					ОбластьСклад.Параметры.ОстатокКомплектующая= СтрокаСклад.КоличествоОстаток;
					ОбластьСклад.Параметры.ОстатокМатериал=0;
					ТабДокумент.Вывести(ОбластьСклад, 3);
					КонецЦикла;
				КонецЕсли;	
	        КонецЕсли;
				

			

			ВыборкаДетали = ВыборкаКомплектующая.Выбрать();

			Пока ВыборкаДетали.Следующий() Цикл
				Если Строка(ВыборкаДетали.Материал)="" Тогда Продолжить КонецЕсли;
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
				ОбластьДетальныхЗаписей.Параметры.Код=ВыборкаДетали.Материал.Код;
				//ОбластьДетальныхЗаписей.Параметры.Материал=ВыборкаДетали.Материал.Код+"."+Строка(ВыборкаДетали.Материал);
				ТабДокумент.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
				
			// Выводим остатки по складам
			Если ВыводитьОстаткиСРазбивкойПоСкладам Тогда
				СтрокиПоСкладам=ТаблицаОстаткиПоСкладам.НайтиСтроки(Новый Структура("Номенклатура",ВыборкаДетали.Материал));
				Если СтрокиПоСкладам<>Неопределено И СтрокиПоСкладам.Количество()>0 Тогда
					Для каждого СтрокаСклад ИЗ СтрокиПоСкладам Цикл
					ОбластьСклад = Макет.ПолучитьОбласть("СтрокаСклад3");
					ОбластьСклад.Параметры.Склад= СтрокаСклад.Склад;
					ОбластьСклад.Параметры.ОстатокМатериал= СтрокаСклад.КоличествоОстаток;
					ОбластьСклад.Параметры.ОстатокКомплектующая=0;
					ТабДокумент.Вывести(ОбластьСклад, 4);
					КонецЦикла;
				КонецЕсли;	
	        КонецЕсли;
				
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
		
	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()


// общая процедура печати
функция Печать() Экспорт
	ТабДокумент = неопределено;
Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) тогда
Предупреждение("Не выбран документ!", 30);		
КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя")	тогда
		  ТабДокумент = ПечатьЗаказаПокупателя();
	иначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ВнутреннийЗаказ") тогда
		  ТабДокумент = ПечатьВнутреннегоЗаказа();	  
	КонецЕсли;
	
 возврат ТабДокумент;
 
КонецФункции