
Функция Печать() Экспорт
	
	ТабДокумент = ПечатьТОРГ13();
	
	Возврат ТабДокумент;
	
КонецФункции // Печать

// Формирует табличный документ по унифицированной форме ТОРГ-13
// 
// Возвращаемое значение
//  Табличный документ - унифицированная форма ТОРГ-13
//
Функция ПечатьТОРГ13()
	
	//+++ 26.06.2013
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") 
		И НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
		//+++ 08.08.2013 - перемещение доступно ограниченному числу пользователей
		// опасно - видно себестоимость!
		   //СообщитьОбОшибке("У вас недостаточно прав для печати!");
		   //Отказ = истина;
		   //Возврат неопределено;
	КонецЕсли;

	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;

	ВалютаПечати = справочники.Валюты.НайтиПоКоду("643");
	Запрос       = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект.Ссылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер КАК НомерДокумента,
	|	Дата  КАК ДатаДокумента,
	|	Организация,
	//+++ 15.08.2012 - полное наименование склада будет браться из Комментария
	//
	//|	СкладОтправитель КАК ОтправительПодразделение,
	//|	СкладПолучатель  КАК ПолучательПодразделение,
	//
	//для обособл.подразделения или филиала 
	//- нужно в Комментарии писать полное имя и адрес (100 симв.).
	//Например:    Филиал ЗАО ТК "Яршинторг" г. Ростов-на-Дону, ул.Доватора, д.154/5
	//
	|	Выбор Когда Выразить(СкладОтправитель.Комментарий как строка(1))="""" 
	|		  тогда СкладОтправитель
	|		  иначе Выразить(СкладОтправитель.Комментарий как строка(100))
	|	Конец КАК ОтправительПодразделение,
	
	|	Выбор Когда Выразить(СкладПолучатель.Комментарий как строка(1))="""" 
	|		  тогда СкладПолучатель
	|		  иначе Выразить(СкладПолучатель.Комментарий как строка(100))
	|	Конец КАК ПолучательПодразделение,
	//+++)
	|	СкладОтправитель.ВидСклада КАК ОтправительВидСклада,
	|	СкладПолучатель.ВидСклада  КАК ПолучательВидСклада,
	|	Товары.(
	|		НомерСтроки как Номер,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|		Номенклатура." + ТоварКод + " КАК ТоварКод,
	|		Номенклатура.Артикул КАК ТоварАртикул,
	|		Цена,
	|		Количество,
	|		КоличествоМест,
	|		ЕдиницаИзмерения.Представление               КАК ЕдиницаИзмеренияНаименование,
	|		ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		ЕдиницаИзмеренияМест.Представление           КАК ЕдиницаИзмеренияМестНаименование,
	|		ВЫБОР
	|			КОГДА КоличествоМест > 0 ТОГДА ЕдиницаИзмеренияМест.Коэффициент / Коэффициент
	|			ИНАЧЕ NULL
	|		КОНЕЦ КАК КоличествоВОдномМесте,
	|		ХарактеристикаНоменклатуры  КАК Характеристика,
	|		СерияНоменклатуры           КАК Серия
	|	),
	|	ВозвратнаяТара.(
	|		НомерСтроки как Номер,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|		Номенклатура." + ТоварКод + " КАК ТоварКод,
	|		Номенклатура.Артикул КАК ТоварАртикул,
	|		0 КАК Цена,
	|		0 КАК Сумма,
	|		0 КАК КоличествоВОдномМесте,
	|		Количество,
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление               КАК ЕдиницаИзмеренияНаименование,
	|		Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
	|	)
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ВозвратнаяТара.НомерСтроки
	|";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ВыборкаСтрокТара   = Шапка.ВозвратнаяТара.Выбрать();

	ЭтоСкладНТТ = (Шапка.ОтправительВидСклада = Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка
	              ИЛИ Шапка.ПолучательВидСклада = Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка);

	//Если НЕ ЭтоСкладНТТ Тогда
		ТаблицаСтоимости        = ПолучитьТаблицуСтоимостиТоваров();
		ВалютаУпрУчета          = Константы.ВалютаУправленческогоУчета.Получить();
		Параметры               = ПолучитьКурсВалюты(ВалютаУпрУчета, СсылкаНаОбъект.Дата);
		КурсВалютыУпрУчета      = Параметры.Курс;
		КратностьВалютыУпрУчета = Параметры.Кратность;
	//КонецЕсли;

	Макет = ПолучитьМакет("ТОРГ13"); // ПолучитьОбщийМакет("ТОРГ13");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ13";

	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОбластьМакета         = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента));
	ОбластьМакета.Параметры.НомерДокумента           = ПолучитьНомерНаПечать(СсылкаНаОбъект);
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	ОбШтрихКод = ОбластьМакета.Рисунки.Штрихкод.Объект;
	ОбШтрихКод.ТипКода = 4; 
	ОбШтрихКод.Сообщение = СформироватьШКРеализации(СсылкаНаОбъект,"B");
	ОбШтрихКод.ОтображатьТекст = Ложь;
	
	// Правила следующие: 
	/////////////////////////
	// Структурное подразделение в шапке: 
	// 1. Если отправка со складов филиала на филиал товары в пути - ставим СП получателя - ЯШТ головной. 
	// 2. Если отправка со склада ярославля на филиал товары в пути - ставим СП филиала.
	ЯрославльАдрес = "ЗАО ТК ""Яршинторг"" г. Ярославль, ул. Базовая, д.3, стр.2";
	
	СоСкладаВПути = (СсылкаНаОбъект.СкладОтправитель.ТипСклада = перечисления.ТипыСкладов.ВПути);
	НаСкладВПути  = (СсылкаНаОбъект.СкладПолучатель.ТипСклада = перечисления.ТипыСкладов.ВПути);
	
	подразделениеВПути = ?(СоСкладаВПути, СсылкаНаОбъект.СкладОтправитель.Подразделение, 
	 						?(НаСкладВПути, СсылкаНаОбъект.СкладПолучатель.Подразделение, СсылкаНаОбъект.Подразделение));
							
	филиалАдрес = ?(СоСкладаВПути, СсылкаНаОбъект.СкладОтправитель.Комментарий, 
						?(НаСкладВПути, СсылкаНаОбъект.СкладПолучатель.Комментарий,""));
	
	МскТоварыВПути = Справочники.склады.найтиПоКоду("01366");
	ЕкбТоварыВПути = Справочники.склады.найтиПоКоду("00962");
	
	Если НаСкладВПути или СоСкладаВПути тогда

		Если (подразделениеВПути = МскТоварыВПути) и  ссылкаНаОбъект.Дата < '20180629' тогда  //был "северный" склад
				филиалАдрес = "Обособленное подразделение ЗАО ТК ""Яршинторг"" г. Москва, Дмитровское шоссе, дом № 100, строение 2";
		ИначеЕсли (подразделениеВПути = ЕкбТоварыВПути) и ссылкаНаОбъект.Дата < '20151225' тогда // по 24.12.2015 был Филиал
					филиалАдрес = "Филиал ЗАО ТК ""Яршинторг"" г. Екатеринбург Свердловская обл, Екатеринбург г, Цвиллинга ул, дом № 7"; 
		//Иначе			
			//СПБ = "Филиал ЗАО ТК ""Яршинторг"" г.Санкт-Петербург, Грузовой проезд, д.14, корп. 2 лит. А";
			//РнД = "Филиал ЗАО ТК ""Яршинторг"" г.Ростов-на-Дону, ул.Доватора, д.154/5";
			//Тл  = "Обособленное подразделение ЗАО ТК ""Яршинторг"" г. Тольятти, ул.Северная, д.18Б";
		КонецЕсли;
		
		
		Если (НаСкладВПути и СсылкаНаОбъект.СкладОтправитель.Подразделение <> подразделениеВПути)	// с Ярославля на Товары в пути
			или (СоСкладаВПути и  СсылкаНаОбъект.СкладПолучатель.Подразделение = подразделениеВПути) // 2-ое перемещение с Товаров в пути на филиал!
 		тогда  
			ОбластьМакета.Параметры.Отправительподразделение = ЯрославльАдрес;
			ОбластьМакета.Параметры.ПолучательПодразделение  = филиалАдрес;
		иначе// (НаСкладВПути и СсылкаНаОбъект.СкладОтправитель.Подразделение = подразделениеВПути)  //из филиала >> Товары в пути
			// или (СоСкладаВПути и  СсылкаНаОбъект.СкладПолучатель.Подразделение <> подразделениеВПути)   // из в Пути на Ярославль
			ОбластьМакета.Параметры.Отправительподразделение = филиалАдрес;
			ОбластьМакета.Параметры.ПолучательПодразделение  = ЯрославльАдрес;
		конецЕсли;
	
	Иначе //------обычное перемещение - с 1 на 2 склад------просто Склады------------------
		ОбластьМакета.Параметры.Отправительподразделение = СсылкаНаОбъект.СкладОтправитель;
		ОбластьМакета.Параметры.ПолучательПодразделение  = СсылкаНаОбъект.СкладПолучатель;
	конецЕсли; 
	
	///////////////////////////////////////////////////////////////////////////	
	
	ТабДокумент.Вывести(ОбластьМакета);

	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// инициализация итогов по странице
	ИтогКоличествоМестПоСтранице = 0;
	ИтогМассаБруттоПоСтранице    = 0;
	ИтогМассыНеттоПоСтранице     = 0;
	ИтогСуммыПоСтранице          = 0;

	// инициализация итогов по документу
	ИтогоКоличество  = 0;
	ИтогоМассаБрутто = 0;
	ИтогоМассаНетто  = 0;
	ИтогоСумма       = 0;

	Ном = 0;

	// Выводим многострочную часть докмента
	ВыборкаСтрокТовары      = Шапка.Товары.Выбрать();
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");

	// Выборка товаров
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;

			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

			// инициализация итогов по странице
			ИтогКоличествоМестПоСтранице = 0;
			ИтогМассаБруттоПоСтранице    = 0;
			ИтогМассыНеттоПоСтранице     = 0;
			ИтогСуммыПоСтранице          = 0;

			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

		КоличествоМест = Формат(ВыборкаСтрокТовары.Количество, "ЧЦ=15; ЧДЦ=3");

		Если ВыборкаСтрокТовары.КоличествоМест <> 0 И НЕ ЗначениеНеЗаполнено(ВыборкаСтрокТовары.ЕдиницаИзмеренияМестНаименование) Тогда
			КоличествоМест = КоличествоМест 
			                 + Символы.ПС
			                 + " (" + Формат(ВыборкаСтрокТовары.КоличествоМест,"ЧЦ=15; ЧДЦ=0")
			                 + " "
			                 + ВыборкаСтрокТовары.ЕдиницаИзмеренияМестНаименование
			                 + ")";
		КонецЕсли;

		ОбластьМакета.Параметры.КоличествоМест    = КоличествоМест;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование + ПредставлениеСерий(ВыборкаСтрокТовары);

		Если ЭтоСкладНТТ Тогда
			Сумма = ВыборкаСтрокТовары.Количество * ВыборкаСтрокТовары.Цена;
		Иначе
			Если ВыборкаСтрокТовары.Количество = 0 Тогда
				Сумма = 0;
				Цена  = 0;
			Иначе
				//ЦЕНУ БЕРЕМ!
				Цена = ПолучитьЦенуТовара(ТаблицаСтоимости,
				                                ВыборкаСтрокТовары.Номенклатура,
				                                ВыборкаСтрокТовары.Характеристика,
				                                ВыборкаСтрокТовары.Серия);
				Попытка
				Сумма = ВыборкаСтрокТовары.Количество * Цена;
			    Исключение
				Сумма = 0;
				КонецПопытки;
				
				Сумма = ПересчитатьИзВалютыВВалюту(Сумма, ВалютаУпрУчета, ВалютаПечати, КурсВалютыУпрУчета, 1, КратностьВалютыУпрУчета, 1);
				Сумма = ?(Сумма=null или Сумма=неопределено, 0, Сумма);
			КонецЕсли;

			ОбластьМакета.Параметры.Цена = Цена;
		КонецЕсли;
		
		//+++( 22.05.2015
		МассаБрутто  = ВыборкаСтрокТовары.Номенклатура.ЕдиницаХраненияОстатков.Вес * ВыборкаСтрокТовары.Количество;
		ДельтаНетто  = ?(ВыборкаСтрокТовары.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Диски, 1, 0)* ВыборкаСтрокТовары.Количество;
		МассаНетто  = МассаБрутто - ДельтаНетто;
		ОбластьМакета.Параметры.МассаБрутто = МассаБрутто;
		ОбластьМакета.Параметры.МассаНетто = МассаНетто;
		ОбластьМакета.Параметры.КоличествоВОдномМесте = ?(ВыборкаСтрокТовары.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Шины, 1, 0);
		//+++)
		 
		ОбластьМакета.Параметры.Сумма = Сумма;

		ТабДокумент.Вывести(ОбластьМакета);

		// Обновим итоги по странице
		ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + ВыборкаСтрокТовары.Количество;
		ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице    + МассаБрутто;
		ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице     + МассаНетто;
		ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + Сумма;

		// Обновим итогов по документу
		ИтогоКоличество  = ИтогоКоличество  + ВыборкаСтрокТовары.Количество;
		ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБрутто;
		ИтогоМассаНетто  = ИтогоМассаНетто  + МассаНетто;
		ИтогоСумма       = ИтогоСумма       + Сумма;

	КонецЦикла;

	// Выборка возвратная тара
	Пока ВыборкаСтрокТара.Следующий() Цикл

		Если ЗначениеНеЗаполнено(ВыборкаСтрокТара.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;

			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

			// инициализация итогов по странице
			ИтогКоличествоМестПоСтранице = 0;
			ИтогМассаБруттоПоСтранице    = 0;
			ИтогМассаНеттоПоСтранице     = 0;
			ИтогСуммыПоСтранице          = 0;

			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТара);

		ОбластьМакета.Параметры.КоличествоМест    = Формат(ВыборкаСтрокТара.Количество, "ЧЦ=15; ЧДЦ=3");
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТара.ТоварНаименование + " (возвратная тара)";

		ТабДокумент.Вывести(ОбластьМакета);

		// Обновим итоги по странице
		ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + ВыборкаСтрокТара.Количество;
		ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице    + 0;
		ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице     + 0;
		ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + 0;

		// Обновим итогов по документу
		ИтогоКоличество  = ИтогоКоличество  + ВыборкаСтрокТара.Количество;
		ИтогоМассаБрутто = ИтогоМассаБрутто + 0;
		ИтогоМассаНетто  = ИтогоМассаНетто  + 0;
		ИтогоСумма       = ИтогоСумма       + 0;

	КонецЦикла;

	ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;

	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличествоМест = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоМассаБрутто    = ИтогоМассаБрутто;
	ОбластьМакета.Параметры.ИтогоМассаНетто     = ИтогоМассаНетто;
	ОбластьМакета.Параметры.ИтогоСумма          = ИтогоСумма;

	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подвал документа
	
	//+++ 15.08.2012 - двойная запись через водителя
	//ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал2"); 	 //+++ 2-ой подвал
	
	ОбластьМакета.Параметры.ИтогоСуммаПрописью = СформироватьСуммуПрописью(ИтогоСумма, ВалютаПечати);
	
	// ДолжностьОтправителя,  ФИООтправителя
	рс = РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(СсылкаНаОбъект.Дата, новый Структура("СтруктурнаяЕдиница", СсылкаНаОбъект.СкладОтправитель) );
	Если  СсылкаНаОбъект.Подразделение=справочники.Подразделения.НайтиПоКоду("00133") тогда
		регСв = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, новый Структура("Подразделение, ОтветственноеЛицо",
		справочники.Подразделения.НайтиПоКоду("00133"), Перечисления.ОтветственныеЛицаОрганизации.Кассир) );
		ОбластьМакета.Параметры.ДолжностьОтправителяР=регСв.Должность;
		ОбластьМакета.Параметры.ФИООтправителяР=регСв.ФизическоеЛицо;
		
		Отбор1 = новый Структура;
		Отбор1.Вставить("Подразделение", СсылкаНаОбъект.Подразделение);
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
		регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		ОбластьМакета.Параметры.ДолжностьОтправителя = регСведРук.Должность;
		ОбластьМакета.Параметры.ФИООтправителя = регСведРук.ФизическоеЛицо;
		
	Иначеесли ЗначениеЗаполнено(рс.ФизическоеЛицо) тогда
		ОбластьМакета.Параметры.ДолжностьОтправителя = "зав.складом";
		ОбластьМакета.Параметры.ФИООтправителя = рс.ФизическоеЛицо;
		ОбластьМакета.Параметры.ДолжностьОтправителяР = "";
		ОбластьМакета.Параметры.ФИООтправителяР = "";
		
	иначеЕсли НЕ ЗначениеЗаполнено(СсылкаНаОбъект.СкладОтправитель.Подразделение) тогда // нет данных - значит это Фролов
		ОбластьМакета.Параметры.ДолжностьОтправителя = "зав.складом";
		ОбластьМакета.Параметры.ФИООтправителя = "Фролов А.И.";
		ОбластьМакета.Параметры.ДолжностьОтправителяР = "зав.складом";
		ОбластьМакета.Параметры.ФИООтправителяР = "Фролов А.И.";
	КонецЕсли;	
	
	// ДолжностьВодителя, ФИОВодителя
	Если СокрЛП(СсылкаНаОбъект.Водитель)<>"" тогда
		ОбластьМакета.Параметры.ДолжностьВодителя = "водитель";
		ОбластьМакета.Параметры.ФИОВодителя = СсылкаНаОбъект.Водитель;
	КонецЕсли;
	
	// ДолжностьПолучателя, ФИОПолучателя
	рс = РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(СсылкаНаОбъект.Дата, новый Структура("СтруктурнаяЕдиница", СсылкаНаОбъект.СкладПолучатель) );
	если ЗначениеЗаполнено(рс.ФизическоеЛицо) тогда
		ОбластьМакета.Параметры.ДолжностьПолучателя = "зав.складом";
		ОбластьМакета.Параметры.ФИОПолучателя = рс.ФизическоеЛицо;
	иначеЕсли НЕ ЗначениеЗаполнено(СсылкаНаОбъект.СкладПолучатель.Подразделение) тогда // нет данных - значит это Фролов
		ОбластьМакета.Параметры.ДолжностьОтправителя = "зав.складом";
		ОбластьМакета.Параметры.ФИООтправителя = "Фролов А.И.";
	КонецЕсли;
	//для склада СПК-1 и СПБ(товары в пути)>>
	
	// Правила следующие: 
	/////////////////////////
	// Структурное подразделение в шапке: 
	// 1. Если отправка со складов филиала на филиал товары в пути - ставим СП получателя - ЯШТ головной. 
	// 2. Если отправка со склада ярославля на филиал товары в пути - ставим СП филиала. 
	
	Если  СсылкаНаОбъект.СкладОтправитель = Справочники.Склады.НайтиПоКоду("00693") и СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("00692") Тогда
		СсылкаНаОбъектПодразделение = СсылкаНаОбъект.Подразделение;
		
		если СсылкаНаОбъект.СкладОтправитель.Подразделение.ОбособленноеПодразделение тогда
			СсылкаНаОбъектПодразделение = СсылкаНаОбъект.СкладОтправитель.Подразделение;
		КонецЕсли;	   
			
			Если  СсылкаНаОбъектПодразделение = справочники.Подразделения.НайтиПоКоду("00005") тогда
				ОбластьМакета.Параметры.ФИОразрешил = "Фролов А.И.";
				ОбластьМакета.Параметры.ФИОотгрузил = "Фролов А.И.";
				ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "зав. складом";
			Иначе		
				Отбор1 = новый Структура;
				Отбор1.Вставить("Подразделение", СсылкаНаОбъектПодразделение);
				
				Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
				регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
				
				Кладовщик =строка(регСведРук.ФизическоеЛицо);
				ДолжнКладовщика =регСведРук.Должность;
				
				ОбластьМакета.Параметры.ФИООтправителяР = Кладовщик;
				ОбластьМакета.Параметры.ДолжностьОтправителяР = ДолжнКладовщика;
				
				регСв = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, 
				новый Структура("Подразделение, ОтветственноеЛицо",
				СсылкаНаОбъектПодразделение, Перечисления.ОтветственныеЛицаОрганизации.Кассир) );
				Если регСв<>неопределено тогда
					ОбластьМакета.Параметры.ФИООтправителя = регСв.ФизическоеЛицо;
					ОбластьМакета.Параметры.ДолжностьОтправителя = регСв.Должность;
				иначе
					ОбластьМакета.Параметры.ФИООтправителя = Кладовщик;
					ОбластьМакета.Параметры.ДолжностьОтправителя =  ДолжнКладовщика;
				КонецЕсли;
		     КонецЕсли;

	//РНД
	ИначеЕсли (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00643"))) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("00634")) и ЗначениеЗаполнено(СсылкаНаОбъект.Ответственный) Тогда 
		ДолжностьХ = ПолучитьДолжность(Справочники.Подразделения.НайтиПоКоду("00106"),СсылкаНаОбъект.Ответственный.ФизЛицо);
		Если ЗначениеЗаполнено(ДолжностьХ) Тогда 
			ОбластьМакета.Параметры.ФИООтправителя = СсылкаНаОбъект.Ответственный.ФизЛицо;
			ОбластьМакета.Параметры.ДолжностьОтправителя = ДолжностьХ;				
			ОбластьМакета.Параметры.ФИООтправителяР = СсылкаНаОбъект.Ответственный.ФизЛицо;
			ОбластьМакета.Параметры.ДолжностьОтправителяР = ДолжностьХ;				
		КонецЕсли;
	//ЕКБ
	ИначеЕсли (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00929"))) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("00962")) Тогда 	
		ОтветственноеЛицоХ = ПолучитьОтветственноеЛицоРуководителя(Справочники.Подразделения.НайтиПоКоду("00138"),Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
		ДолжностьХ = ПолучитьДолжность(Справочники.Подразделения.НайтиПоКоду("00138"),ОтветственноеЛицоХ);
		Если ЗначениеЗаполнено(ДолжностьХ) и ЗначениеЗАполнено(ОтветственноеЛицоХ) Тогда 
			ОбластьМакета.Параметры.ФИООтправителя = ОтветственноеЛицоХ;
			ОбластьМакета.Параметры.ДолжностьОтправителя = ДолжностьХ;				
			ОбластьМакета.Параметры.ФИООтправителяР = ОтветственноеЛицоХ;
			ОбластьМакета.Параметры.ДолжностьОтправителяР = ДолжностьХ;				
		КонецЕсли;
	// МСК
	ИначеЕсли (СсылкаНаОбъект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00133")) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("01366")) Тогда 
		Буфер1 = ОбластьМакета.Параметры.ФИООтправителяР;	
		Буфер2 = ОбластьМакета.Параметры.ДолжностьОтправителяР;	
		ОбластьМакета.Параметры.ФИООтправителяР = ОбластьМакета.Параметры.ФИООтправителя;	
		ОбластьМакета.Параметры.ДолжностьОтправителяР = ОбластьМакета.Параметры.ДолжностьОтправителя;	
		ОбластьМакета.Параметры.ФИООтправителя = Буфер1;	
		ОбластьМакета.Параметры.ДолжностьОтправителя = Буфер2;	
	конецЕсли; //<<
	
	ОбластьМакета.Параметры.ДатаДокумента = Формат(СсылкаНаОбъект.Дата,"ДЛФ=DD");
	//+++) 
	
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;

КонецФункции // ПечатьТОРГ13()


// Возвращает таблицу стоимости по товарам
//+++ 05.05.2015
Функция ПолучитьТаблицуСтоимостиТоваров()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект.Ссылка);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ПеремещениеТовары.Номенклатура,
	               |	СУММА(ЗаказПокупателяТовары.Цена * ПеремещениеТовары.Количество) КАК Стоимость,
	               |	МАКСИМУМ(ЗаказПокупателяТовары.Цена) КАК Цена
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		Тов.Ссылка КАК Ссылка,
	               |		Тов.Номенклатура КАК Номенклатура,
	               |		СУММА(Тов.Количество) КАК Количество
	               |	ИЗ
	               |		Документ.ПеремещениеТоваров.Товары КАК Тов
	               |	ГДЕ
	               |		Тов.Ссылка = &ТекущийДокумент
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		Тов.Номенклатура,
	               |		Тов.Ссылка) КАК ПеремещениеТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |		ПО ПеремещениеТовары.Номенклатура = ЗаказПокупателяТовары.Номенклатура
	               |			И ПеремещениеТовары.Ссылка.ВнутреннийЗаказ.ДокументОснование = ЗаказПокупателяТовары.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПеремещениеТовары.Номенклатура,
	               |	ЗаказПокупателяТовары.Цена";

		//+++ 08.08.2013 - перемещение доступно ограниченному числу пользователей
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") 
		И НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
		Запрос.Текст = стрЗаменить(Запрос.Текст, "СУММА(ЗаказПокупателяТовары.Цена * ПартииТоваровНаСкладах.Количество)", "0" );
 	КонецЕсли;

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьСтоимостьПоПартиямТоваров()

// Возвращает стоимость товара
//
Функция ПолучитьЦенуТовара(Таблица, Номенклатура, Характеристика = Неопределено, Серия = Неопределено)

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",                   Номенклатура);

	Строки = Таблица.НайтиСтроки(СтруктураПоиска);

	Если Строки.Количество() > 0 Тогда
		Стоимость = Строки[0].Цена;
	Иначе
		Стоимость = 0;
	КонецЕсли;

	Возврат Стоимость;

КонецФункции // ПолучитьСтоимостьПоПартиямТоваров()

Функция ПолучитьДолжность(Подразделение,ФизЛицо)
	
	Запрос = Новый ЗАпрос("Выбрать Период,Должность из РегистрСведений.ОтветственныеЛицаподразделений.Срезпоследних(&Дата,Подразделение=&подразделение и ФизическоеЛицо=&ФЛ) Упорядочить по Период убыв");
	ЗАпрос.УстановитьПараметр("Подразделение",подразделение);
	ЗАпрос.УстановитьПараметр("ФЛ",ФизЛицо);
	ЗАпрос.УстановитьПараметр("Дата",СсылкаНаОбъект.Дата);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Количество()>0 Тогда 
		Выб.Следующий();
		Возврат Выб.должность;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОтветственноеЛицоРуководителя(Подразделение,ОтветственныеЛицаОрганизации)
	Запрос = Новый ЗАпрос("Выбрать ФизическоеЛицо из РегистрСведений.ОтветственныеЛицаподразделений.Срезпоследних(&Дата,Подразделение=&подразделение и ОтветственноеЛицо=&ФЛ)");
	ЗАпрос.УстановитьПараметр("Подразделение",подразделение);
	ЗАпрос.УстановитьПараметр("ФЛ",ОтветственныеЛицаОрганизации);
	ЗАпрос.УстановитьПараметр("Дата",СсылкаНаОбъект.Дата);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Количество()>0 Тогда 
		Выб.Следующий();
		Возврат Выб.ФизическоеЛицо;
	КонецЕсли;	
КонецФункции
