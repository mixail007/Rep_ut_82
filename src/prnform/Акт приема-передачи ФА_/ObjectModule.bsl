Функция Печать(НомерДока = "") Экспорт
	
	НомерНаПечать = НомерДока;
	Если Не Метаданные.Имя = "УправлениеТорговлей" Тогда
		//Сообщить("Печатная форма предназначена для использования в конфигурации ""Управление торговлей""", СтатусСообщения.Внимание);
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		и СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс  Тогда
		Возврат ПечатьДокумента(СсылкаНаОбъект, НомерНаПечать);
	КонецЕсли;
	
КонецФункции // Печать

Функция ПечатьДокумента(СсылкаНаОбъект, НомерНаПечать)
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АактПриема-Передачи";
	
	СтруктураКонтЛица = КонтактныеЛицаКонтрагента(СсылкаНаОбъект.Контрагент);
	
	//Макет = ПолучитьМакет("АктПриемаПередачи");
	Если СсылкаНаОбъект.Дата < '2018.01.12' тогда
		Макет = ПолучитьМакет("АктПриемаПередачи_24_04_2017");
	Иначе
		Макет = ПолучитьМакет("АктПриемаПередачи_12_01_2018");
	КонецЕсли;
	ОбластьШапка        = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог         = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка.Параметры.НомерДоговора = ПолучитьНомерКонтрагтаФАП();
	ОбластьШапка.Параметры.ДатаДоговора = Формат(СсылкаНаОбъект.ДоговорКонтрагента.Дата,"ДЛФ=DD");
    ОбластьШапка.Параметры.КонтрагентПолноеНазвание = СсылкаНаОбъект.Контрагент.НаименованиеПолное ;
	СтруктКонтактКонтрагентаФАП = ПолучитьДанныеОКонтактеКонтрагента(СтруктураКонтЛица.КонтактноеЛицо);
	Если СсылкаНаОбъект.Дата < '2018.01.12' тогда
    	ОбластьШапка.Параметры.КонтрагентДолжность    = СтруктКонтактКонтрагентаФАП.КонтрагентДолжностьПадеж;
		ОбластьШапка.Параметры.КонтрагентРуководитель = СтруктураКонтЛица.НаимДиректораРодПадеж;
		ОбластьШапка.Параметры.КонтрагентНаОсновании  = СтруктКонтактКонтрагентаФАП.КонтрагентНаОсновании;
	КонецЕсли;
    ОбластьШапка.Параметры.ДатаДок = Формат(СсылкаНаОбъект.Дата,"ДЛФ=DD");
	Попытка
		ОбШтрихКод = ОбластьШапка.Рисунки.Штрихкод.Объект;
		ОбШтрихКод.ТипКода = 4; 
		ОбШтрихКод.Сообщение = СформироватьШКРеализации(СсылкаНаОбъект, "A");  // "A" - английское
		ОбШтрихКод.ОтображатьТекст = Ложь;
	Исключение
	Конецпопытки;
	ТабДокумент.Вывести(ОбластьШапка);
	номПП =1;
	Для Каждого СтрТЧ из СсылкаНаОбъект.Товары Цикл
		ОбластьСтрока.Параметры.Заполнить(СтрТЧ);
		ОбластьСтрока.Параметры.НомерПП = номПП;
		ОбластьСтрока.Параметры.Номенклатура = СтрТЧ.Номенклатура.НаименованиеПолное;

		ТабДокумент.Вывести(ОбластьСтрока);
		номПП = НомПП + 1;
	КонецЦикла;
	НомерФормулаАвто = СсылкаНаОбъект.НомерФормулаАвто;
	Если НЕ ЗначениеЗаполнено(НомерФормулаАвто) Тогда
		НомерФормулаАвто = НомерНаПечать;
	КонецЕсли;
	ДатаДокСтр       = Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
	ОбластьИтог.Параметры.СчетФактураНомер = "№ " + НомерФормулаАвто + " от " + ДатаДокСтр;
	ОбластьИтог.Параметры.НакладнаяНомер   = "№ " + НомерФормулаАвто + " от " + ДатаДокСтр;
	ОбластьИтог.Параметры.ТТН_Номер        = "№ " + НомерФормулаАвто + " от " + ДатаДокСтр;
	ОбластьИтог.Параметры.СуммаИтого = Формат(СсылкаНаОбъект.СуммаДокумента,"ЧДЦ=2");
	ОбластьИтог.Параметры.СуммаИтогоПрописью = ЧислоПрописью(СсылкаНаОбъект.СуммаДокумента,"Л=ru_RU","рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	ОбластьИтог.Параметры.СуммаНДС = Формат(СсылкаНаОбъект.Товары.Итог("СуммаНДС"),"ЧДЦ=2");
	ОбластьИтог.Параметры.СуммаНДСПрописью = ЧислоПрописью(СсылкаНаОбъект.Товары.Итог("СуммаНДС"),"Л=ru_RU","рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	//ОбластьИтог.Параметры.НомерДоговора = СсылкаНаОбъект.ДоговорКонтрагента.Номер;
	//ОбластьИтог.Параметры.ДатаДоговора = Формат(СсылкаНаОбъект.ДоговорКонтрагента.Дата,"ДЛФ=DD");
	ОбластьИтог.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.НаименованиеПолное ; // было просто наименование
	
	СведенияОПокупателе = СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент, ТекущаяДата());
	ОбластьИтог.Параметры.ЮрАдресКонтрагента = СведенияОПокупателе.ЮридическийАдрес;
	ОбластьИтог.Параметры.ИННКонтрагента = "ИНН: " + СведенияОПокупателе.ИНН;
    ОбластьИтог.Параметры.КППКонтрагента = "КПП: " + СведенияОПокупателе.КПП;

   	БанковскийСчетПокупателя = СсылкаНаОбъект.Контрагент.ОсновнойБанковскийСчет;
	Если НЕ ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
		//ищем первый попавшийся
		СпрРС = Справочники.БанковскиеСчета.Выбрать(,СсылкаНаОбъект.Контрагент);
		Пока СпрРС.Следующий() Цикл
			Если СокрЛП(СпрРС.НомерСчета)<>"" Тогда
				БанковскийСчетПокупателя = СпрРС.Ссылка;
				прервать;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
		Банк = БанковскийСчетПокупателя.Банк;
		
		ОбластьИтог.Параметры.ИнфоОРС = "Р/с " + БанковскийСчетПокупателя.НомерСчета + "в "+ СокрЛП(Банк)+" "+Банк.Город;
		ОбластьИтог.Параметры.КорСчет = ?(Банк.КоррСчет <> "", "К/с: " +Банк.КоррСчет,"");
		ОбластьИтог.Параметры.БИК = ?(Банк.Код <> "", "БИК: " +Банк.Код,""); 
	КонецЕсли;
	
	//ОбластьИтог.Параметры.ДолжностьРуководителя = СтруктураКонтЛица.ДолжностьДиректора;
	Если СсылкаНаОбъект.Дата < '2018.01.12' тогда
		ОбластьИтог.Параметры.ДолжностьРуководителя = СтруктКонтактКонтрагентаФАП.КонтрагентДолжность;
		ОбластьИтог.Параметры.ФИОРуководителяКратко = СтруктураКонтЛица.НаимДиректораКраткое;
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьИтог);
	
	ТабДокумент.АвтоМасштаб = Истина;
	Возврат ТабДокумент;
КонецФункции

Функция КонтактныеЛицаКонтрагента(ТекКонтрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	КонтактныеЛица.Фамилия,
	 |	КонтактныеЛица.Имя,
	 |	КонтактныеЛица.Отчество,
	 |	КонтактныеЛица.Должность,
	 |	КонтактныеЛица.Представление,
	 |	КонтактныеЛица.Роль,
	 |	ВЫБОР
	 |		КОГДА КонтактныеЛица.Роль = &Директор
	 |			ТОГДА 1
	 |		КОГДА КонтактныеЛица.Ссылка = &ОсновноеКонтЛицо
	 |			ТОГДА 2
	 |		ИНАЧЕ 3
	 |	КОНЕЦ КАК Порядок,
	 |	КонтактныеЛица.Описание,
	 |	КонтактныеЛица.Ссылка КАК КонтактноеЛицо
	 |ИЗ
	 |	Справочник.КонтактныеЛица КАК КонтактныеЛица
	 |ГДЕ
	 |	КонтактныеЛица.ОбъектВладелец = &ТекКонтрагент
	 |	И КонтактныеЛица.ВидКонтактногоЛица = &ВидКонтактногоЛица
	 |	И КонтактныеЛица.ПометкаУдаления = ЛОЖЬ
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	Порядок";
	 
	Запрос.УстановитьПараметр("ТекКонтрагент", ТекКонтрагент);
	Запрос.УстановитьПараметр("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента);
	//Запрос.УстановитьПараметр("ГенДиректор", Справочники.РолиКонтактныхЛиц.ГенеральныйДиректор);
	Запрос.УстановитьПараметр("Директор", Справочники.РолиКонтактныхЛиц.Директор);
	Запрос.УстановитьПараметр("ОсновноеКонтЛицо", ТекКонтрагент.ОсновноеКонтактноеЛицо);
	ДолжностьДиректора = "";
	ДолжностьДиректораРодПадеж = "";
	НаимДиректора = "";
	НаимДиректораКраткое = "";
	НаимДиректораРодПадеж = "";
	ДействующийНаОсновании = "";
	КонтактноеЛицо = Справочники.КонтактныеЛица.ПустаяСсылка();

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СокрЛП(Выборка.Представление) = "" И СокрЛП(Выборка.Фамилия) = "" И СокрЛП(Выборка.Имя) = "" И СокрЛП(Выборка.Отчество) = "" Тогда
			продолжить;
		КонецЕсли;
		Если СокрЛП(Выборка.Представление) <> "" Тогда
			НаимДиректора = СокрЛП(Выборка.Представление); 
		Иначе
			НаимДиректора = СокрЛП(Выборка.Фамилия)+" "+СокрЛП(Выборка.Имя)+" "+СокрЛП(Выборка.Отчество);
		КонецЕсли;
		ДолжностьДиректора = ?(СокрЛП(Выборка.Должность)="",СокрЛП(Выборка.Роль),СокрЛП(Выборка.Должность));
		ДействующийНаОсновании = СокрЛП(Выборка.Описание);
		КонтактноеЛицо = Выборка.КонтактноеЛицо;
		прервать;
	КонецЦикла;
	Если Найти(НаимДиректора,".")=0 Тогда
		НаимДиректораКраткое = ФамилияИнициалыФизЛица(НаимДиректора);
	Иначе
		НаимДиректораКраткое = НаимДиректора;
	КонецЕсли;
	
	ПросклонятьДолжностьНаименование(ДолжностьДиректора, НаимДиректора, ДолжностьДиректораРодПадеж, НаимДиректораРодПадеж);
	
	СтруктураКонтЛица = Новый Структура;
	СтруктураКонтЛица.Вставить("НаимДиректора", НаимДиректора);
	СтруктураКонтЛица.Вставить("НаимДиректораРодПадеж", ?(СокрЛП(НаимДиректораРодПадеж)="",НаимДиректора,НаимДиректораРодПадеж));
	СтруктураКонтЛица.Вставить("НаимДиректораКраткое", НаимДиректораКраткое);
	СтруктураКонтЛица.Вставить("ДолжностьДиректора", ДолжностьДиректора);
	СтруктураКонтЛица.Вставить("ДолжностьДиректораРодПадеж", ?(СокрЛП(ДолжностьДиректораРодПадеж)="",ДолжностьДиректора,ДолжностьДиректораРодПадеж));
	СтруктураКонтЛица.Вставить("ДействующийНаОсновании", СтрЗаменить(ДействующийНаОсновании,"Действующий на основании",""));
	СтруктураКонтЛица.Вставить("КонтактноеЛицо", КонтактноеЛицо);
	
    возврат СтруктураКонтЛица;
	
КонецФункции

Процедура ПросклонятьДолжностьНаименование(ДолжностьДиректора, НаимДиректора, ДолжностьДиректораРодПадеж, НаимДиректораРодПадеж)
	
	Попытка
		ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСклоненияФИО", "Decl", ТипВнешнейКомпоненты.Native); 
		Объект = Новый("AddIn.Decl.CNameDecl");
		Попытка
			Падеж = 2; //Родительный
			Если СокрЛП(НаимДиректора) <> "" Тогда
				Если Найти(НаимДиректора,".")=0 Тогда
					НаимДиректораРодПадеж = Объект.Просклонять(НаимДиректора, Падеж);
				Иначе
					НаимДиректораРодПадеж = НаимДиректора;
				КонецЕсли;	
			КонецЕсли;
			Если СокрЛП(ДолжностьДиректора)<>"" Тогда
				МассивСтрок = РазложитьСтрокуВМассивПодстрок(ДолжностьДиректора, " ");
				//Выделим первые 3 слова, так как компонента не умеет склонять фразу большую 3х символов
				НомерНесклоняемогоСимвола = 4;
				Для Номер = 1 По Мин(МассивСтрок.Количество(), 3) Цикл
					Попытка
						Рез = Объект.Просклонять(МассивСтрок[Номер-1], Падеж);
					Исключение
						Рез = МассивСтрок[Номер-1];
					КонецПопытки;
					ДолжностьДиректораРодПадеж = ДолжностьДиректораРодПадеж + ?(Номер > 1, " ", "") + Рез;
				КонецЦикла;
			КонецЕсли;
		Исключение
			Сообщить("Не просклонять ФИО/должность покупателя "+НаимДиректора+" / "+ДолжностьДиректора);
		КонецПопытки;
	Исключение
		Сообщить("Не удалось подключить внешнюю компоненту по причине: " + ОписаниеОшибки()); 
	КонецПопытки;
	
КонецПроцедуры // ПросклонятьДолжностьНаименование()

Функция ПолучитьДанныеОКонтактеКонтрагента(КонтактноеЛицо)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	""Должность"" КАК Должность,
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект ССЫЛКА Справочник.КонтактныеЛица
	|	И ЗначенияСвойствОбъектов.Свойство.Код = ""90233""                                // КонтрагентДолжность
	|	И ЗначенияСвойствОбъектов.Объект = &Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ДействуетНаОсновании"" КАК Поле1,
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект ССЫЛКА Справочник.КонтактныеЛица
	|	И ЗначенияСвойствОбъектов.Объект = &Объект
	|	И ЗначенияСвойствОбъектов.Свойство.Код = ""90232""";                               // КонтрагентНаОсновании
	
	Запрос.УстановитьПараметр("Объект", КонтактноеЛицо);
	Результат = Запрос.ВыполнитьПакет();
	
	Структ = Новый Структура("КонтрагентНаОсновании, КонтрагентДолжностьПадеж, КонтрагентДолжность");
	
	Если НЕ Результат[0].Пустой() Тогда
		Выборка = Результат[0].Выбрать();
		Выборка.Следующий();
		Если ЗначениеЗаполнено(Выборка.Значение) Тогда
			ДолжностьДиректора = Выборка.Значение.Наименование;
			ДолжностьДиректораРодПадеж = "";
			НаимДиректораРодПадеж      = ""; // для совместимости
			НаимДиректора              = ""; // для совместимости
			Структ.КонтрагентДолжность = ДолжностьДиректора;
			ПросклонятьДолжностьНаименование(ДолжностьДиректора, НаимДиректора, ДолжностьДиректораРодПадеж, НаимДиректораРодПадеж);
			Структ.КонтрагентДолжностьПадеж = ДолжностьДиректораРодПадеж;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Результат[1].Пустой() Тогда
		Выборка = Результат[1].Выбрать();
		Выборка.Следующий();
		Если ЗначениеЗаполнено(Выборка.Значение) Тогда
			Структ.КонтрагентНаОсновании = Выборка.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Структ.КонтрагентДолжностьПадеж) Тогда
		Структ.КонтрагентДолжностьПадеж = "______________________________________________________";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Структ.КонтрагентНаОсновании) Тогда
		Структ.КонтрагентНаОсновании = "________________________________________";
	КонецЕсли;
	
	Возврат Структ;
	
КонецФункции // ПолучитьДанныеОКонтактеКонтрагента()

Функция ПолучитьНомерКонтрагтаФАП()
	
	СвойствоНомерДоговораФАП = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90237");
	Если ЗначениеЗаполнено(СвойствоНомерДоговораФАП) Тогда
		МенеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Объект   = СсылкаНаОбъект.ДоговорКонтрагента;
		МенеджерЗаписи.Свойство = СвойствоНомерДоговораФАП;
		МенеджерЗаписи.Прочитать();
		Если ЗначениеЗаполнено(МенеджерЗаписи.Значение) Тогда
			Номер = МенеджерЗаписи.Значение;
		Иначе
			Номер = СсылкаНаОбъект.ДоговорКонтрагента.Номер;
		КонецЕсли;
	Иначе
		Номер = СсылкаНаОбъект.ДоговорКонтрагента.Номер;
	КонецЕсли;
	
	Возврат Номер;
	
КонецФункции // ПолучитьНомерКонтрагтаФАП()