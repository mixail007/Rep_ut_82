Функция ПечатьДоговораВорд(НужноСохранить = Ложь, ПечататьПоОсновному = Ложь, Вернуть = Ложь) Экспорт
	
	Если Договор.Владелец.Экспорт Тогда
		
		//Страна
		РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",Договор.Владелец,Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента));
		СтранаПокупателя = СокрЛП(РегАдреса.Поле1);
		Если Найти(ВРЕГ(СтранаПокупателя),"БЕЛАРУСЬ")>0 или Найти(ВРЕГ(СтранаПокупателя),"КАЗАХСТАН")>0 или Найти(ВРЕГ(СтранаПокупателя),"АРМЕНИЯ")>0 Тогда
			ПечатьДоговораТаможенныйСоюз(НужноСохранить);
		ИначеЕсли Договор.Организация=Справочники.Организации.НайтиПоКоду("00004") тогда //TT
			ПечатьКонтрактТТ(НужноСохранить);
		ИначеЕсли Договор.Организация=Справочники.Организации.НайтиПоКоду("00005") тогда //WGL
			ПечатьКонтрактWGL(НужноСохранить);
		Иначе	
			ПечатьКонтрактЕвропа(НужноСохранить);
		КонецЕсли;
		
	Иначе
		Если Вернуть Тогда
			Возврат ПечатьДоговорРоссияТиповой(ПечататьПоОсновному, Вернуть);
		Иначе
			ПечатьДоговорРоссияТиповой(ПечататьПоОсновному, Вернуть);
		КонецЕсли;
	КонецЕсли;
		
КонецФункции	
                                                       
Функция ПечатьКонтрактЕвропа(НужноСохранить)
	
	НомерДоговора				 = "";
	ДатаДоговора 				 = "";
	ДатаОкончанияДействия 		 = "";
	НаимПокупателя				 = "";
	СуммаДоговора = 0;
	
	Если Договор.Владелец.ДвуязычныйЭкспорт Тогда
		Документ = ПолучитьМакет("КонтрактЕвропа_ДваЯзыка");
	Иначе
		Документ = ПолучитьМакет("КонтрактЕвропа_Рус");
	КонецЕсли;	
	МСВорд = Документ.Получить();
	
	Попытка
		
		Документ = МСВорд.Application.Documents(1);
		Документ.Activate();
		
		Замена = Документ.Content.Find;
		Замена.Execute("[НомерДоговора]", Ложь, Истина, Ложь,,,Истина,,Ложь,Договор.Номер);
		ДатаДоговора = Формат(Договор.Дата,"ДФ='dd MMMM yyyy'")+" г.";
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаДоговораРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаДоговора);
		ДатаДоговораАнгл = Формат(Договор.Дата,"Л=en; ДФ='dd MMMM yyyy'");
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаДоговораАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаДоговораАнгл);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействия]", Ложь, Истина, Ложь,,,Истина,,Ложь,Формат(Договор.ДатаОкончанияДействия,"ДФ=dd.MM.yyyy")+" г");
		ТекПокупатель = Договор.Владелец;
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		Замена = Документ.Content.Find;
		Замена.Execute("[НаимПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,НаимПокупателя,2);
		
		//Страна
		РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",ТекПокупатель,Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента));
		СтранаПокупателя = СокрЛП(РегАдреса.Поле1);
		Замена = Документ.Content.Find;
		Замена.Execute("[СтранаПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтранаПокупателя);
		
		Замена = Документ.Content.Find;
		Замена.Execute("[СтранаПокупателяВинПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтранаПокупателя);

		
		//поиск директора Покупателя
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
				
		Замена = Документ.Content.Find;
		Замена.Execute("[НаимДиректора]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректора,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДолжностьДиректора]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДолжностьДиректора,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ПодписьПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректораКраткое,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДействующийНаОсновании]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДействующийНаОсновании,2);
		
		ТекВалюта = Договор.ВалютаВзаиморасчетов;
		Если ТекВалюта.Наименование = "руб." Тогда
			ВалютаДоговора = "Российских рублях";
			ВалютаДоговора1 = "Российских рублей";
			ВалютаДоговораАнгл = "Russian rubles";
			ПарПрописиРус = "рубль, рубля, рублей, м, копейка, копейки, копеек, ж";
		    ПарПрописиАнгл = "ruble, rubles, rubles, penny, kopecks, kopecks, 0";

		ИначеЕсли ТекВалюта.Наименование = "USD" Тогда
			ВалютаДоговора = "Долларах США";
			ВалютаДоговора1 = "Долларов США";
			ВалютаДоговораАнгл = "USD";
			ПарПрописиРус = "доллар США, доллара США, долларов США, м, цент, цента, центов, м";
		    ПарПрописиАнгл = "USD, USD, USD, cents, cents, cents, 0";
		ИначеЕсли ТекВалюта.Наименование = "EUR" Тогда
			ВалютаДоговора = "Евро";
			ВалютаДоговора1 = "Евро";
			ВалютаДоговораАнгл = "EUR";
			ПарПрописиРус = "Евро, Евро, Евро, м, цент, цента, центов, м";
		    ПарПрописиАнгл = "EUR, EUR, EUR, cent, cent, cent, 0";
		Иначе
			ВалютаДоговора = "";
			ВалютаДоговора1 = "";
			ВалютаДоговораАнгл = "";
			ПарПрописиРус = "";
			ПарПрописиАнгл = "";
		КонецЕсли;
		
		Замена = Документ.Content.Find;
        Замена.Execute("[ВалютаДоговораРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,ВалютаДоговора,2);
		Замена = Документ.Content.Find;
        Замена.Execute("[ВалютаДоговораАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,ВалютаДоговораАнгл,2);
		
		СуммаДоговора = НайтиСуммуДоговора(Договор);
		СуммаДоговораРус = СокрЛП(СуммаДоговора)+" ("+ЧислоПрописью(СуммаДоговора,"Л=ru_RU")+") "+ВалютаДоговора1;
		СуммаДоговораАнгл = СокрЛП(СуммаДоговора)+" ("+ЧислоПрописью(СуммаДоговора,"Л=en")+") "+ВалютаДоговораАнгл;
        Замена = Документ.Content.Find;
        Замена.Execute("[СуммаДоговораРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,СуммаДоговораРус);
		Замена = Документ.Content.Find;
        Замена.Execute("[СуммаДоговораАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,СуммаДоговораАнгл);
		
		СведенияОПокупателе = СведенияОЮрФизЛице(ТекПокупатель, ТекущаяДата());
		ЮрАдресПокупателя = СведенияОПокупателе.ЮридическийАдрес;
		Замена = Документ.Content.Find;
		Замена.Execute("[ЮрАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ЮрАдресПокупателя);
		
		ФактАдресПокупателя = СведенияОПокупателе.ФактическийАдрес;
		Замена = Документ.Content.Find;
		Замена.Execute("[ФактАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ФактАдресПокупателя);
		
		Если СокрЛП(ТекПокупатель.НаименованиеИННэкспорт)="" Тогда
			НазваниеИНН = "ИНН";
		Иначе
			НазваниеИНН = СокрЛП(ТекПокупатель.НаименованиеИННэкспорт);
		КонецЕсли;	
		
		Замена = Документ.Content.Find;
		Замена.Execute("[НазваниеИНН]", Ложь, Истина, Ложь,,,Истина,,Ложь,НазваниеИНН);
		
		УНПпокупателя = СведенияОПокупателе.ИНН;
		Замена = Документ.Content.Find;
		Замена.Execute("[ИННПпокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,УНПпокупателя);

        ТелефонПокупателя = СведенияОПокупателе.Телефоны;
		Замена = Документ.Content.Find;
		Замена.Execute("[ТелефонПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ТелефонПокупателя);
		
		БанковскийСчетПокупателя = ТекПокупатель.ОсновнойБанковскийСчет;
		Если НЕ ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
			//ищем первый попавшийся
			СпрРС = Справочники.БанковскиеСчета.Выбрать(,ТекПокупатель);
			Пока СпрРС.Следующий() Цикл
				Если СокрЛП(СпрРС.НомерСчета)<>"" Тогда
					БанковскийСчетПокупателя = СпрРС.Ссылка;
					прервать;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
		БанкПокупателяНаим = "";
		БанкПокупателяОКПО = "";
		БанкПокупателяСвифт = "";
		БанкПокупателяАдрес = "";
		БанкПокупателяРасчетныйСчет = "";

		Если ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
			Банк = БанковскийСчетПокупателя.Банк;
			БанкПокупателяНаим = СокрЛП(Банк)+" "+Банк.Город;
			БанкПокупателяСвифт = Банк.СвифтКод;
            БанкПокупателяАдрес = Банк.Адрес;
			БанкПокупателяРасчетныйСчет = БанковскийСчетПокупателя.НомерСчета;
		КонецЕсли;
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяНаим]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяНаим);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяОКПО]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяОКПО);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяСвифт]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяСвифт);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяАдрес]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяАдрес);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяРасчетныйСчет]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяРасчетныйСчет);
		
		//Паспорт только если Физ. лицо, например ИП-шник
		Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность)<>"" Тогда
			ПаспортПокупателя = Символы.ВК+Символы.ПС+СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность);
		Иначе
			ПаспортПокупателя = "";
		КонецЕсли;
		Замена = Документ.Content.Find;
		Замена.Execute("[ПаспортПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПаспортПокупателя);
		
		ДатаОкончанияДействияРус = Формат(Договор.ДатаОкончанияДействия,"ДФ='dd MMMM yyyy'")+" г";
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействияРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаОкончанияДействияРус);
		ДатаОкончанияДействияАнгл = Формат(Договор.ДатаОкончанияДействия,"Л=en; ДФ='dd MMMM yyyy'");
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействияАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаОкончанияДействияАнгл);
		 		
		Если Не НужноСохранить Тогда
			МСВорд.Application.Visible = 1;
			МСВорд.Activate();
			МСВорд.ActiveWindow.WindowState = 2;
			МСВорд.ActiveWindow.WindowState = 1;
		Иначе
			ИмяФайла = КаталогВременныхФайлов() + "ДоговорНаЭкспорт"+СокрЛП(Договор.Код)+".doc";
			МСВорд.SaveAs(ИмяФайла);
       		МСВорд.Close(0);
			ПолученныйФайл = Новый Файл(ИмяФайла);
			//этот файл в хранилище доп. информации записываем
			НовСпр = Справочники.ХранилищеДополнительнойИнформации.СоздатьЭлемент();
			НовСпр.Объект = Договор.Ссылка;
			НовСпр.ВидДанных = Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл;
			НовСпр.ИмяФайла = ПолученныйФайл.Имя;
			НовСпр.Наименование = "Договор продажи № "+Договор.Номер+" от "+Формат(Договор.Дата,"ДФ=dd.MM.yyyy");
			НовСпр.Хранилище = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ПолученныйФайл.ПолноеИмя), Новый СжатиеДанных());
            НовСпр.Записать();
		КонецЕсли;	
		
	Исключение
		Сообщить(ОписаниеОшибки());
		МСВорд.Application.Quit();
	КонецПопытки;	
	
КонецФункции

Функция ПечатьКонтрактТТ(НужноСохранить)
	
	НомерДоговора				 = "";
	ДатаДоговора 				 = "";
	ДатаОкончанияДействия 		 = "";
	НаимПокупателя				 = "";
	СуммаДоговора = 0;
	
	Если Договор.Владелец.ДвуязычныйЭкспорт Тогда
		Документ = ПолучитьМакет("КонтрактTT_ДваЯзыка");
	Иначе
		Документ = ПолучитьМакет("КонтрактTT_Англ");
	КонецЕсли;	
	МСВорд = Документ.Получить();
	
	Попытка
		
		Документ = МСВорд.Application.Documents(1);
		Документ.Activate();
		
		Замена = Документ.Content.Find;
		Замена.Execute("[НомерДоговора]", Ложь, Истина, Ложь,,,Истина,,Ложь,Договор.Номер);
		ДатаДоговора = Формат(Договор.Дата,"ДФ='dd MMMM yyyy'")+" г.";
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаДоговораРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаДоговора);
		ДатаДоговораАнгл = Формат(Договор.Дата,"Л=en; ДФ='dd MMMM yyyy'");
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаДоговораАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаДоговораАнгл,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействия]", Ложь, Истина, Ложь,,,Истина,,Ложь,Формат(Договор.ДатаОкончанияДействия,"ДФ=dd.MM.yyyy")+" г");
		ТекПокупатель = Договор.Владелец;
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		Замена = Документ.Content.Find;
		Замена.Execute("[НаимПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,НаимПокупателя,2);
		
		//Страна
		РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",ТекПокупатель,Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента));
		СтранаПокупателя = СокрЛП(РегАдреса.Поле1);
		Замена = Документ.Content.Find;
		Замена.Execute("[СтранаПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтранаПокупателя,2);
		
		Замена = Документ.Content.Find;
		Замена.Execute("[СтранаПокупателяВинПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтранаПокупателя,2);

		
		//поиск директора Покупателя
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
				
		Замена = Документ.Content.Find;
		Замена.Execute("[НаимДиректора]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректора,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДолжностьДиректора]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДолжностьДиректора,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ПодписьПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректораКраткое,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДействующийНаОсновании]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДействующийНаОсновании,2);
		
		ТекВалюта = Договор.ВалютаВзаиморасчетов;
		Если ТекВалюта.Наименование = "руб." Тогда
			ВалютаДоговора = "Российских рублях";
			ВалютаДоговора1 = "Российских рублей";
			ВалютаДоговораАнгл = "Russian rubles";
			ПарПрописиРус = "рубль, рубля, рублей, м, копейка, копейки, копеек, ж";
		    ПарПрописиАнгл = "ruble, rubles, rubles, penny, kopecks, kopecks, 0";

		ИначеЕсли ТекВалюта.Наименование = "USD" Тогда
			ВалютаДоговора = "Долларах США";
			ВалютаДоговора1 = "Долларов США";
			ВалютаДоговораАнгл = "USD";
			ПарПрописиРус = "доллар США, доллара США, долларов США, м, цент, цента, центов, м";
		    ПарПрописиАнгл = "USD, USD, USD, cents, cents, cents, 0";
		ИначеЕсли ТекВалюта.Наименование = "EUR" Тогда
			ВалютаДоговора = "Евро";
			ВалютаДоговора1 = "Евро";
			ВалютаДоговораАнгл = "EUR";
			ПарПрописиРус = "Евро, Евро, Евро, м, цент, цента, центов, м";
		    ПарПрописиАнгл = "EUR, EUR, EUR, cent, cent, cent, 0";
		Иначе
			ВалютаДоговора = "";
			ВалютаДоговора1 = "";
			ВалютаДоговораАнгл = "";
			ПарПрописиРус = "";
			ПарПрописиАнгл = "";
		КонецЕсли;
		
		Замена = Документ.Content.Find;
        Замена.Execute("[ВалютаДоговораРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,ВалютаДоговора,2);
		Замена = Документ.Content.Find;
        Замена.Execute("[ВалютаДоговораАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,ВалютаДоговораАнгл,2);
		
		СуммаДоговора = НайтиСуммуДоговора(Договор);
		СуммаДоговораРус = СокрЛП(СуммаДоговора)+" ("+ЧислоПрописью(СуммаДоговора,"Л=ru_RU")+") "+ВалютаДоговора1;
		СуммаДоговораАнгл = СокрЛП(СуммаДоговора)+" ("+ЧислоПрописью(СуммаДоговора,"Л=en")+") "+ВалютаДоговораАнгл;
        Замена = Документ.Content.Find;
        Замена.Execute("[СуммаДоговораРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,СуммаДоговораРус);
		Замена = Документ.Content.Find;
        Замена.Execute("[СуммаДоговораАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,СуммаДоговораАнгл);
		
		СведенияОПокупателе = СведенияОЮрФизЛице(ТекПокупатель, ТекущаяДата());
		ЮрАдресПокупателя = СведенияОПокупателе.ЮридическийАдрес;
		Замена = Документ.Content.Find;
		Замена.Execute("[ЮрАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ЮрАдресПокупателя);
		
		ФактАдресПокупателя = СведенияОПокупателе.ФактическийАдрес;
		Замена = Документ.Content.Find;
		Замена.Execute("[ФактАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ФактАдресПокупателя);
		
		Если СокрЛП(ТекПокупатель.НаименованиеИННэкспорт)="" Тогда
			НазваниеИНН = "ИНН";
		Иначе
			НазваниеИНН = СокрЛП(ТекПокупатель.НаименованиеИННэкспорт);
		КонецЕсли;	
		
		Замена = Документ.Content.Find;
		Замена.Execute("[НазваниеИНН]", Ложь, Истина, Ложь,,,Истина,,Ложь,НазваниеИНН);
		
		УНПпокупателя = СведенияОПокупателе.ИНН;
		Замена = Документ.Content.Find;
		Замена.Execute("[ИННПпокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,УНПпокупателя);

        ТелефонПокупателя = СведенияОПокупателе.Телефоны;
		Замена = Документ.Content.Find;
		Замена.Execute("[ТелефонПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ТелефонПокупателя);
		
		БанковскийСчетПокупателя = ТекПокупатель.ОсновнойБанковскийСчет;
		Если НЕ ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
			//ищем первый попавшийся
			СпрРС = Справочники.БанковскиеСчета.Выбрать(,ТекПокупатель);
			Пока СпрРС.Следующий() Цикл
				Если СокрЛП(СпрРС.НомерСчета)<>"" Тогда
					БанковскийСчетПокупателя = СпрРС.Ссылка;
					прервать;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
		БанкПокупателяНаим = "";
		БанкПокупателяОКПО = "";
		БанкПокупателяСвифт = "";
		БанкПокупателяАдрес = "";
		БанкПокупателяРасчетныйСчет = "";

		Если ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
			Банк = БанковскийСчетПокупателя.Банк;
			БанкПокупателяНаим = СокрЛП(Банк)+" "+Банк.Город;
			БанкПокупателяСвифт = Банк.СвифтКод;
            БанкПокупателяАдрес = Банк.Адрес;
			БанкПокупателяРасчетныйСчет = БанковскийСчетПокупателя.НомерСчета;
		КонецЕсли;
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяНаим]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяНаим);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяОКПО]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяОКПО);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяСвифт]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяСвифт);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяАдрес]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяАдрес);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяРасчетныйСчет]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяРасчетныйСчет);
		
		//Паспорт только если Физ. лицо, например ИП-шник
		Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность)<>"" Тогда
			ПаспортПокупателя = Символы.ВК+Символы.ПС+СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность);
		Иначе
			ПаспортПокупателя = "";
		КонецЕсли;
		Замена = Документ.Content.Find;
		Замена.Execute("[ПаспортПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПаспортПокупателя);
		
		ДатаОкончанияДействияРус = Формат(Договор.ДатаОкончанияДействия,"ДФ='dd MMMM yyyy'")+" г";
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействияРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаОкончанияДействияРус);
		ДатаОкончанияДействияАнгл = Формат(Договор.ДатаОкончанияДействия,"Л=en; ДФ='dd MMMM yyyy'");
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействияАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаОкончанияДействияАнгл);
		 		
		Если Не НужноСохранить Тогда
			МСВорд.Application.Visible = 1;
			МСВорд.Activate();
			МСВорд.ActiveWindow.WindowState = 2;
			МСВорд.ActiveWindow.WindowState = 1;
		Иначе
			ИмяФайла = КаталогВременныхФайлов() + "ДоговорНаЭкспорт"+СокрЛП(Договор.Код)+".doc";
			МСВорд.SaveAs(ИмяФайла);
       		МСВорд.Close(0);
			ПолученныйФайл = Новый Файл(ИмяФайла);
			//этот файл в хранилище доп. информации записываем
			НовСпр = Справочники.ХранилищеДополнительнойИнформации.СоздатьЭлемент();
			НовСпр.Объект = Договор.Ссылка;
			НовСпр.ВидДанных = Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл;
			НовСпр.ИмяФайла = ПолученныйФайл.Имя;
			НовСпр.Наименование = "Договор продажи № "+Договор.Номер+" от "+Формат(Договор.Дата,"ДФ=dd.MM.yyyy");
			НовСпр.Хранилище = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ПолученныйФайл.ПолноеИмя), Новый СжатиеДанных());
            НовСпр.Записать();
		КонецЕсли;	
		
	Исключение
		Сообщить(ОписаниеОшибки());
		МСВорд.Application.Quit();
	КонецПопытки;	
	
КонецФункции

Функция ПечатьКонтрактWGL(НужноСохранить)
	
	НомерДоговора				 = "";
	ДатаДоговора 				 = "";
	ДатаОкончанияДействия 		 = "";
	НаимПокупателя				 = "";
	СуммаДоговора = 0;
	
	Документ = ПолучитьМакет("КонтрактWGL_ДваЯзыка");
		
	МСВорд = Документ.Получить();
	
	Попытка
		
		Документ = МСВорд.Application.Documents(1);
		Документ.Activate();
		
		Замена = Документ.Content.Find;
		Замена.Execute("[НомерДоговора]", Ложь, Истина, Ложь,,,Истина,,Ложь,Договор.Номер, 2);
		ДатаДоговора = Формат(Договор.Дата,"ДФ='dd MMMM yyyy'")+" г.";
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаДоговораРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаДоговора, 2);
		ДатаДоговораАнгл = Формат(Договор.Дата,"Л=en; ДФ='dd MMMM yyyy'");
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаДоговораАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаДоговораАнгл,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействия]", Ложь, Истина, Ложь,,,Истина,,Ложь,Формат(Договор.ДатаОкончанияДействия,"ДФ=dd.MM.yyyy")+" г", 2);
		ТекПокупатель = Договор.Владелец;
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		Замена = Документ.Content.Find;
		Замена.Execute("[НаимПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,НаимПокупателя,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[НазвИНН]", Ложь, Истина, Ложь,,,Истина,,Ложь,ТекПокупатель.НаименованиеИННэкспорт,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[НомерДог]", Ложь, Истина, Ложь,,,Истина,,Ложь,Договор.Номер,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаДог]", Ложь, Истина, Ложь,,,Истина,,Ложь,Договор.Дата,2);
		
		//Страна
		РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",ТекПокупатель,Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента));
		СтранаПокупателя = СокрЛП(РегАдреса.Поле1);
		Замена = Документ.Content.Find;
		Замена.Execute("[СтранаПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтранаПокупателя,2);
		
		Замена = Документ.Content.Find;
		Замена.Execute("[СтранаПокупателяВинПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтранаПокупателя,2);

		
		//поиск директора Покупателя
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
				
		Замена = Документ.Content.Find;
		Замена.Execute("[НаимДиректора]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректора,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДолжностьДиректора]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДолжностьДиректора,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ПодписьПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректораКраткое,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДействующийНаОсновании]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДействующийНаОсновании,2);
		
		ТекВалюта = Договор.ВалютаВзаиморасчетов;
		Если ТекВалюта.Наименование = "руб." Тогда
			ВалютаДоговора = "Российских рублях";
			ВалютаДоговора1 = "Российских рублей";
			ВалютаДоговораАнгл = "Russian rubles";
			ПарПрописиРус = "рубль, рубля, рублей, м, копейка, копейки, копеек, ж";
		    ПарПрописиАнгл = "ruble, rubles, rubles, penny, kopecks, kopecks, 0";

		ИначеЕсли ТекВалюта.Наименование = "USD" Тогда
			ВалютаДоговора = "Долларах США";
			ВалютаДоговора1 = "Долларов США";
			ВалютаДоговораАнгл = "USD";
			ПарПрописиРус = "доллар США, доллара США, долларов США, м, цент, цента, центов, м";
		    ПарПрописиАнгл = "USD, USD, USD, cents, cents, cents, 0";
		ИначеЕсли ТекВалюта.Наименование = "EUR" Тогда
			ВалютаДоговора = "Евро";
			ВалютаДоговора1 = "Евро";
			ВалютаДоговораАнгл = "EUR";
			ПарПрописиРус = "Евро, Евро, Евро, м, цент, цента, центов, м";
		    ПарПрописиАнгл = "EUR, EUR, EUR, cent, cent, cent, 0";
		Иначе
			ВалютаДоговора = "";
			ВалютаДоговора1 = "";
			ВалютаДоговораАнгл = "";
			ПарПрописиРус = "";
			ПарПрописиАнгл = "";
		КонецЕсли;
		
		Замена = Документ.Content.Find;
        Замена.Execute("[ВалютаДоговораРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,ВалютаДоговора,2);
		Замена = Документ.Content.Find;
        Замена.Execute("[ВалютаДоговораАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,ВалютаДоговораАнгл,2);
		
		СуммаДоговора = НайтиСуммуДоговора(Договор);
		СуммаДоговораРус = СокрЛП(СуммаДоговора)+" ("+ЧислоПрописью(СуммаДоговора,"Л=ru_RU")+") "+ВалютаДоговора1;
		СуммаДоговораАнгл = СокрЛП(СуммаДоговора)+" ("+ЧислоПрописью(СуммаДоговора,"Л=en")+") "+ВалютаДоговораАнгл;
        Замена = Документ.Content.Find;
        Замена.Execute("[СуммаДоговораРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,СуммаДоговораРус, 2);
		Замена = Документ.Content.Find;
        Замена.Execute("[СуммаДоговораАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,СуммаДоговораАнгл, 2);
		
		СведенияОПокупателе = СведенияОЮрФизЛице(ТекПокупатель, ТекущаяДата());
		ЮрАдресПокупателя = СведенияОПокупателе.ЮридическийАдрес;
		Замена = Документ.Content.Find;
		Замена.Execute("[ЮрАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ЮрАдресПокупателя, 2);
		
		ФактАдресПокупателя = СведенияОПокупателе.ФактическийАдрес;
		Замена = Документ.Content.Find;
		Замена.Execute("[ФактАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ФактАдресПокупателя, 2);
		
		Если СокрЛП(ТекПокупатель.НаименованиеИННэкспорт)="" Тогда
			НазваниеИНН = "ИНН";
		Иначе
			НазваниеИНН = СокрЛП(ТекПокупатель.НаименованиеИННэкспорт);
		КонецЕсли;	
		
		Замена = Документ.Content.Find;
		Замена.Execute("[НазваниеИНН]", Ложь, Истина, Ложь,,,Истина,,Ложь,НазваниеИНН, 2);
		
		УНПпокупателя = СведенияОПокупателе.ИНН;
		Замена = Документ.Content.Find;
		Замена.Execute("[ИННПпокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,УНПпокупателя, 2);

        ТелефонПокупателя = СведенияОПокупателе.Телефоны;
		Замена = Документ.Content.Find;
		Замена.Execute("[ТелефонПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ТелефонПокупателя, 2);
		
		БанковскийСчетПокупателя = ТекПокупатель.ОсновнойБанковскийСчет;
		Если НЕ ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
			//ищем первый попавшийся
			СпрРС = Справочники.БанковскиеСчета.Выбрать(,ТекПокупатель);
			Пока СпрРС.Следующий() Цикл
				Если СокрЛП(СпрРС.НомерСчета)<>"" Тогда
					БанковскийСчетПокупателя = СпрРС.Ссылка;
					прервать;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
		БанкПокупателяНаим = "";
		БанкПокупателяОКПО = "";
		БанкПокупателяСвифт = "";
		БанкПокупателяАдрес = "";
		БанкПокупателяРасчетныйСчет = "";

		Если ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
			Банк = БанковскийСчетПокупателя.Банк;
			БанкПокупателяНаим = СокрЛП(Банк)+" "+Банк.Город;
			БанкПокупателяСвифт = Банк.СвифтКод;
            БанкПокупателяАдрес = Банк.Адрес;
			БанкПокупателяРасчетныйСчет = БанковскийСчетПокупателя.НомерСчета;
		КонецЕсли;
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяНаим]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяНаим, 2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяОКПО]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяОКПО, 2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяСвифт]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяСвифт, 2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяАдрес]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяАдрес, 2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяРасчетныйСчет]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяРасчетныйСчет, 2);
		
		//Паспорт только если Физ. лицо, например ИП-шник
		Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность)<>"" Тогда
			ПаспортПокупателя = Символы.ВК+Символы.ПС+СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность);
		Иначе
			ПаспортПокупателя = "";
		КонецЕсли;
		Замена = Документ.Content.Find;
		Замена.Execute("[ПаспортПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПаспортПокупателя, 2);
		
		ДатаОкончанияДействияРус = Формат(Договор.ДатаОкончанияДействия,"ДФ='dd MMMM yyyy'")+" г";
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействияРус]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаОкончанияДействияРус, 2);
		ДатаОкончанияДействияАнгл = Формат(Договор.ДатаОкончанияДействия,"Л=en; ДФ='dd MMMM yyyy'");
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействияАнгл]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаОкончанияДействияАнгл, 2);
		 		
		Если Не НужноСохранить Тогда
			МСВорд.Application.Visible = 1;
			МСВорд.Activate();
			МСВорд.ActiveWindow.WindowState = 2;
			МСВорд.ActiveWindow.WindowState = 1;
		Иначе
			ИмяФайла = КаталогВременныхФайлов() + "ДоговорНаЭкспорт"+СокрЛП(Договор.Код)+".doc";
			МСВорд.SaveAs(ИмяФайла);
       		МСВорд.Close(0);
			ПолученныйФайл = Новый Файл(ИмяФайла);
			//этот файл в хранилище доп. информации записываем
			НовСпр = Справочники.ХранилищеДополнительнойИнформации.СоздатьЭлемент();
			НовСпр.Объект = Договор.Ссылка;
			НовСпр.ВидДанных = Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл;
			НовСпр.ИмяФайла = ПолученныйФайл.Имя;
			НовСпр.Наименование = "Договор продажи № "+Договор.Номер+" от "+Формат(Договор.Дата,"ДФ=dd.MM.yyyy");
			НовСпр.Хранилище = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ПолученныйФайл.ПолноеИмя), Новый СжатиеДанных());
            НовСпр.Записать();
		КонецЕсли;	
		
	Исключение
		Сообщить(ОписаниеОшибки());
		МСВорд.Application.Quit();
	КонецПопытки;	
	
КонецФункции


Функция ПечатьДоговораТаможенныйСоюз(НужноСохранить)
	
	НомерДоговора				 = "";
	ДатаДоговора 				 = "";
	ДатаОкончанияДействия 		 = "";
	НаимПокупателя				 = "";
	СуммаДоговора = 0;
		
	Документ = ПолучитьМакет("ДоговорЭкспортТаможенныйСоюз_Рус");
	МСВорд = Документ.Получить();
	
	Попытка
		
		Документ = МСВорд.Application.Documents(1);
		Документ.Activate();
		
		Замена = Документ.Content.Find;
		Замена.Execute("[НомерДоговора]", Ложь, Истина, Ложь,,,Истина,,Ложь,Договор.Номер);
		ДатаДоговора = Формат(Договор.Дата,"ДФ='dd MMMM yyyy'")+" г.";
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаДоговора]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаДоговора);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаОкончанияДействия]", Ложь, Истина, Ложь,,,Истина,,Ложь,Формат(Договор.ДатаОкончанияДействия,"ДФ=dd.MM.yyyy")+" г");
		ТекПокупатель = Договор.Владелец;
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		Замена = Документ.Content.Find;
		Замена.Execute("[НаимПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,НаимПокупателя,2);
		
		//Страна
		РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",ТекПокупатель,Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента));
		СтранаПокупателя = СокрЛП(РегАдреса.Поле1);
		Замена = Документ.Content.Find;
		Замена.Execute("[СтранаПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтранаПокупателя);
		
		Замена = Документ.Content.Find;
		Замена.Execute("[СтранаПокупателяВинПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтранаПокупателя);

		
		//поиск директора Покупателя
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
				
		Замена = Документ.Content.Find;
		Замена.Execute("[НаимДиректораРодПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректораРодПадеж);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДолжностьДиректораРодПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДолжностьДиректораРодПадеж);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДолжностьДиректора]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДолжностьДиректора);
		Замена = Документ.Content.Find;
		Замена.Execute("[ПодписьПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректораКраткое);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДействующийНаОсновании]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДействующийНаОсновании);
		
		ТекВалюта = Договор.ВалютаВзаиморасчетов;
		Если ТекВалюта.Наименование = "руб." Тогда
			ВалютаДоговора = "Российских рублях";
			ВалютаДоговора1 = "Российских рублей";
		ИначеЕсли ТекВалюта.Наименование = "USD" Тогда
			ВалютаДоговора = "Долларах США";
			ВалютаДоговора1 = "Долларов США";
		ИначеЕсли ТекВалюта.Наименование = "EUR" Тогда
			ВалютаДоговора = "Евро";
			ВалютаДоговора1 = "Евро";
		Иначе
			ВалютаДоговора = "";
			ВалютаДоговора1 = "";
		КонецЕсли;
		Замена = Документ.Content.Find;
        Замена.Execute("[ВалютаДоговора]", Ложь, Истина, Ложь,,,Истина,,Ложь,ВалютаДоговора);
		Замена = Документ.Content.Find;
        Замена.Execute("[ВалютаДоговора1]", Ложь, Истина, Ложь,,,Истина,,Ложь,ВалютаДоговора1);
		
		СуммаДоговора = НайтиСуммуДоговора(Договор);
		Замена = Документ.Content.Find;
        Замена.Execute("[СуммаДоговора]", Ложь, Истина, Ложь,,,Истина,,Ложь,СуммаДоговора);
		
		СведенияОПокупателе = СведенияОЮрФизЛице(ТекПокупатель, ТекущаяДата());
		ЮрАдресПокупателя = СведенияОПокупателе.ЮридическийАдрес;
		Замена = Документ.Content.Find;
		Замена.Execute("[ЮрАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ЮрАдресПокупателя);
		
		ФактАдресПокупателя = СведенияОПокупателе.ФактическийАдрес;
		Замена = Документ.Content.Find;
		Замена.Execute("[ФактАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ФактАдресПокупателя);
		
		Если СокрЛП(ТекПокупатель.НаименованиеИННэкспорт)="" Тогда
			НазваниеИНН = "ИНН";
		Иначе
			НазваниеИНН = СокрЛП(ТекПокупатель.НаименованиеИННэкспорт);
		КонецЕсли;	
		
		Замена = Документ.Content.Find;
		Замена.Execute("[НазваниеИНН]", Ложь, Истина, Ложь,,,Истина,,Ложь,НазваниеИНН);
		
		УНПпокупателя = СведенияОПокупателе.ИНН;
		Замена = Документ.Content.Find;
		Замена.Execute("[ИННПпокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,УНПпокупателя);

        ТелефонПокупателя = СведенияОПокупателе.Телефоны;
		Замена = Документ.Content.Find;
		Замена.Execute("[ТелефонПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ТелефонПокупателя);
		
		БанковскийСчетПокупателя = ТекПокупатель.ОсновнойБанковскийСчет;
		БанкПокупателяНаим = "";
		БанкПокупателяОКПО = "";
		БанкПокупателяБИК = "";
		БанкПокупателяАдрес = "";
		БанкПокупателяРасчетныйСчет = "";

		Если ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
			Банк = БанковскийСчетПокупателя.Банк;
			БанкПокупателяНаим = СокрЛП(Банк)+" "+Банк.Город;
			БанкПокупателяБИК = Банк.Код;
            БанкПокупателяАдрес = Банк.Адрес;
			БанкПокупателяРасчетныйСчет = БанковскийСчетПокупателя.НомерСчета;
		КонецЕсли;
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяНаим]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяНаим);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяОКПО]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяОКПО);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяБИК]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяБИК);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяАдрес]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяАдрес);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяРасчетныйСчет]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяРасчетныйСчет);
		
		//Паспорт только если Физ. лицо, например ИП-шник
		Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность)<>"" Тогда
			ПаспортПокупателя = Символы.ВК+Символы.ПС+СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность);
		Иначе
			ПаспортПокупателя = "";
		КонецЕсли;
		Замена = Документ.Content.Find;
		Замена.Execute("[ПаспортПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПаспортПокупателя);
		 		
		Если Не НужноСохранить Тогда
			МСВорд.Application.Visible = 1;
			Документ.Activate();
			МСВорд.ActiveWindow.WindowState = 2;
			МСВорд.ActiveWindow.WindowState = 1;
		Иначе
			ИмяФайла = КаталогВременныхФайлов() + "ДоговорНаЭкспорт"+СокрЛП(Договор.Код)+".doc";
			МСВорд.SaveAs(ИмяФайла);
       		МСВорд.Close(0);
			ПолученныйФайл = Новый Файл(ИмяФайла);
			//этот файл в хранилище доп. информации записываем
			НовСпр = Справочники.ХранилищеДополнительнойИнформации.СоздатьЭлемент();
			НовСпр.Объект = Договор.Ссылка;
			НовСпр.ВидДанных = Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл;
			НовСпр.ИмяФайла = ПолученныйФайл.Имя;
			НовСпр.Наименование = "Договор продажи № "+Договор.Номер+" от "+Формат(Договор.Дата,"ДФ=dd.MM.yyyy");
			НовСпр.Хранилище = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ПолученныйФайл.ПолноеИмя), Новый СжатиеДанных());
            НовСпр.Записать();
		КонецЕсли;	
		
	Исключение
		Сообщить(ОписаниеОшибки());
		МСВорд.Application.Quit();
	КонецПопытки;	
	
КонецФункции

Функция КонтактныеЛицаКонтрагента(ТекКонтрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	КонтактныеЛица.Фамилия,
	 |	КонтактныеЛица.Имя,
	 |	КонтактныеЛица.Отчество,
	 |	КонтактныеЛица.Должность,
	 |	КонтактныеЛица.Представление,
	 |	КонтактныеЛица.Роль,
	 |	ВЫБОР
	 |		КОГДА КонтактныеЛица.Роль = &Директор
	 |			ТОГДА 1
	 |		КОГДА КонтактныеЛица.Ссылка = &ОсновноеКонтЛицо
	 |			ТОГДА 2
	 |		ИНАЧЕ 3
	 |	КОНЕЦ КАК Порядок,
	 |	КонтактныеЛица.Описание
	 |ИЗ
	 |	Справочник.КонтактныеЛица КАК КонтактныеЛица
	 |ГДЕ
	 |	КонтактныеЛица.ОбъектВладелец = &ТекКонтрагент
	 |	И КонтактныеЛица.ВидКонтактногоЛица = &ВидКонтактногоЛица
	 |	И КонтактныеЛица.ПометкаУдаления = ЛОЖЬ
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	Порядок";
	 
	Запрос.УстановитьПараметр("ТекКонтрагент", ТекКонтрагент);
	Запрос.УстановитьПараметр("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента);
	//Запрос.УстановитьПараметр("ГенДиректор", Справочники.РолиКонтактныхЛиц.ГенеральныйДиректор);
	Запрос.УстановитьПараметр("Директор", Справочники.РолиКонтактныхЛиц.Директор);
	Запрос.УстановитьПараметр("ОсновноеКонтЛицо", ТекКонтрагент.ОсновноеКонтактноеЛицо);
	ДолжностьДиректора = "";
	ДолжностьДиректораРодПадеж = "";
	НаимДиректора = "";
	НаимДиректораКраткое = "";
	НаимДиректораРодПадеж = "";
	ДействующийНаОсновании = "";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СокрЛП(Выборка.Представление) = "" И СокрЛП(Выборка.Фамилия) = "" И СокрЛП(Выборка.Имя) = "" И СокрЛП(Выборка.Отчество) = "" Тогда
			продолжить;
		КонецЕсли;
		Если СокрЛП(Выборка.Представление) <> "" Тогда
			НаимДиректора = СокрЛП(Выборка.Представление); 
		Иначе
			НаимДиректора = СокрЛП(Выборка.Фамилия)+" "+СокрЛП(Выборка.Имя)+" "+СокрЛП(Выборка.Отчество);
		КонецЕсли;
		ДолжностьДиректора = ?(СокрЛП(Выборка.Должность)="",СокрЛП(Выборка.Роль),СокрЛП(Выборка.Должность));
		ДействующийНаОсновании = СокрЛП(Выборка.Описание);
		прервать;
	КонецЦикла;
	Если Найти(НаимДиректора,".")=0 Тогда
		НаимДиректораКраткое = ФамилияИнициалыФизЛица(НаимДиректора);
	Иначе
		НаимДиректораКраткое = НаимДиректора;
	КонецЕсли;
	
	Попытка
		ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСклоненияФИО", "Decl", ТипВнешнейКомпоненты.Native); 
		Объект = Новый("AddIn.Decl.CNameDecl");
		Попытка
			Падеж = 2; //Родительный
			Если СокрЛП(НаимДиректора) <> "" Тогда
				Если Найти(НаимДиректора,".")=0 Тогда
					НаимДиректораРодПадеж = Объект.Просклонять(НаимДиректора, Падеж);
				Иначе
					НаимДиректораРодПадеж = НаимДиректора;
				КонецЕсли;	
			КонецЕсли;
			Если СокрЛП(ДолжностьДиректора)<>"" Тогда
				МассивСтрок = РазложитьСтрокуВМассивПодстрок(ДолжностьДиректора, " ");
				//Выделим первые 3 слова, так как компонента не умеет склонять фразу большую 3х символов
				НомерНесклоняемогоСимвола = 4;
				Для Номер = 1 По Мин(МассивСтрок.Количество(), 3) Цикл
					Попытка
						Рез = Объект.Просклонять(МассивСтрок[Номер-1], Падеж);
					Исключение
						Рез = МассивСтрок[Номер-1];
					КонецПопытки;
					ДолжностьДиректораРодПадеж = ДолжностьДиректораРодПадеж + ?(Номер > 1, " ", "") + Рез;
				КонецЦикла;
			КонецЕсли;
		Исключение
			Сообщить("Не просклонять ФИО/должность покупателя "+НаимДиректора+" / "+ДолжностьДиректора);
		КонецПопытки;
	Исключение
		Сообщить("Не удалось подключить внешнюю компоненту по причине: " + ОписаниеОшибки()); 
	КонецПопытки;
	
	СтруктураКонтЛица = Новый Структура;
	СтруктураКонтЛица.Вставить("НаимДиректора", НаимДиректора);
	СтруктураКонтЛица.Вставить("НаимДиректораРодПадеж", ?(СокрЛП(НаимДиректораРодПадеж)="",НаимДиректора,НаимДиректораРодПадеж));
	СтруктураКонтЛица.Вставить("НаимДиректораКраткое", НаимДиректораКраткое);
	СтруктураКонтЛица.Вставить("ДолжностьДиректора", ДолжностьДиректора);
	СтруктураКонтЛица.Вставить("ДолжностьДиректораРодПадеж", ?(СокрЛП(ДолжностьДиректораРодПадеж)="",ДолжностьДиректора,ДолжностьДиректораРодПадеж));
	СтруктураКонтЛица.Вставить("ДействующийНаОсновании", СтрЗаменить(ДействующийНаОсновании,"Действующий на основании",""));

	
    возврат СтруктураКонтЛица;
	
КонецФункции	

Функция НайтиСуммуДоговора(ТекДоговор)
	
	СуммаДоговора = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	УсловияПоставокПоДоговорамКонтрагентовОбщиеСрезПоследних.СуммаВзаиморасчетов
	 |ИЗ
	 |	РегистрСведений.УсловияПоставокПоДоговорамКонтрагентовОбщие.СрезПоследних(, ДоговорКонтрагента = &ТекДоговор) КАК УсловияПоставокПоДоговорамКонтрагентовОбщиеСрезПоследних";
	 
	 
	 Запрос.УстановитьПараметр("ТекДоговор", ТекДоговор);
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 Если Выборка.Следующий() Тогда
		 СуммаДоговора = Выборка.СуммаВзаиморасчетов;
	 КонецЕсли;	 
	 возврат СуммаДоговора;
	 
КонецФункции	

Функция ПечатьДоговорРоссияТиповой(ПечататьПоОсновному, Вернуть)
	
	СпТиповДоговоров = Новый СписокЗначений;
	СпТиповДоговоров.Добавить("По условиям оплаты основного договора","По условиям оплаты основного договора");
	СпТиповДоговоров.Добавить("Поручительство","Поручительство");
	СпТиповДоговоров.Добавить("Доп. соглашение","Доп. соглашение");
	СпТиповДоговоров.Добавить("Договор обратная реализация","Договор обратная реализация");
	///+++++
	
	ЗапросОТХ = Новый Запрос;
	ЗапросОТХ.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Справочник.ТипыДоговоров.ПеремещениеОТХ)
		|	И ДоговорыКонтрагентов.Владелец = &Контрагент";

	ЗапросОТХ.УстановитьПараметр("Контрагент", Договор.Владелец);

	Результат = ЗапросОТХ.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() тогда
		СпТиповДоговоров.Добавить("Договор ОТХ с НДС");
		СпТиповДоговоров.Добавить("Договор ОТХ без НДС");
		СпТиповДоговоров.Добавить("Доп. соглашение к договору ОТХ с НДС");     		
		СпТиповДоговоров.Добавить("Доп. соглашение к договору ОТХ без НДС");     		
	КонецЕсли;       
	
	///------
	Документ = ПолучитьМакет("ДоговорРоссияПредоплата");
	ТекПокупатель = Договор.Владелец;
	#Если Клиент тогда
		Если ПечататьПоОсновному Тогда
			УсловияОплаты = ТекПокупатель.УсловияОплаты;
			Если УсловияОплаты = "Предоплата" или УсловияОплаты = "Договор отсрочки до 14 дн" или УсловияОплаты = "Отсрочка до 14 дн." Тогда
				//Документ = ПолучитьМакет("ДоговорРоссияПредоплата");
				Документ = ПолучитьМакет("ДоговорРоссияПредоплата20170616");
			ИначеЕсли УсловияОплаты = "Отсрочка" Тогда
				//Документ = ПолучитьМакет("ДоговорРоссияОтсрочка");
				Документ = ПолучитьМакет("ДоговорРоссияОтсрочка20170616");
			ИначеЕсли УсловияОплаты = "Предоплата по счетам" Тогда
				Сообщить("Договор поставки по условию оплаты ""Предоплата по счетам"" распечатать нельзя!");
				Возврат 0;	
			Иначе
				Сообщить("Не заполнено поле ""Условия оплаты"" во вкладке ""Данные для договора"" ");
				Возврат 0;
			КонецЕсли;
		Иначе
			ВыбТип = СпТиповДоговоров.ВыбратьЭлемент("Укажите тип договора");
			Если ВыбТип <> Неопределено Тогда
				УсловияОплаты = ТекПокупатель.УсловияОплаты;
				Если ЗначениеЗаполнено(УсловияОплаты) Тогда
					Если ВыбТип.Значение = "По условиям оплаты основного договора" тогда
						Если УсловияОплаты = "Предоплата" или УсловияОплаты = "Договор отсрочки до 14 дн" или УсловияОплаты = "Отсрочка до 14 дн." Тогда
							//Документ = ПолучитьМакет("ДоговорРоссияПредоплата");
							Документ = ПолучитьМакет("ДоговорРоссияПредоплата20170616");
						ИначеЕсли УсловияОплаты = "Отсрочка" Тогда
							//Документ = ПолучитьМакет("ДоговорРоссияОтсрочка");
							Документ = ПолучитьМакет("ДоговорРоссияОтсрочка20170616");
						ИначеЕсли УсловияОплаты = "Предоплата по счетам" Тогда
							Сообщить("Договор поставки по условию оплаты ""Предоплата по счетам"" распечатать нельзя!");
							Возврат 0;	
						Иначе
							Сообщить("Не заполнено поле ""Условия оплаты"" во вкладке ""Данные для договора"" ");
							Возврат 0;
						КонецЕсли;
					ИначеЕсли ВыбТип.Значение = "Доп. соглашение" Тогда
						//Документ = ПолучитьМакет("Соглашение");
						Документ = ПолучитьМакет("Соглашение20170616");
					ИначеЕсли ВыбТип.Значение = "Договор обратная реализация" Тогда
						Документ = ПолучитьМакет("ДоговорОбратнаяРеализация");
						
					//++++
					ИначеЕсли ВыбТип.Значение = "Договор ОТХ с НДС" Тогда
						Документ = ПолучитьМакет("ДоговорОТХсНДС");
						
					ИначеЕсли ВыбТип.Значение = "Договор ОТХ без НДС" Тогда
						Документ = ПолучитьМакет("ДоговорОТХбезНДС");
						
					ИначеЕсли ВыбТип.Значение = "Доп. соглашение к договору ОТХ с НДС" Тогда
						Документ = ПолучитьМакет("ДСкДоговоруОТХсНДС");	
						
					ИначеЕсли ВыбТип.Значение = "Доп. соглашение к договору ОТХ без НДС" Тогда
						Документ = ПолучитьМакет("ДСкДоговоруОТХбезНДС");	  					
					//----	
					Иначе
						//Документ = ПолучитьМакет("ДоговорРоссияПоручительство");
						Документ = ПолучитьМакет("ДоговорРоссияПоручительство20170616");
					КонецЕсли;
				КонецЕсли;
			Иначе
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли
	
	НомерДоговора				 = "";
	ДатаДоговора 				 = "";
	ДатаОкончанияДействия 		 = "";
	НаимПокупателя				 = "";
		
	МСВорд = Документ.Получить();
	
	Попытка
		
		Документ = МСВорд.Application.Documents(1);
		Документ.Activate();
		
		Замена = Документ.Content.Find;
		Замена.Execute("[НомерДоговора]", Ложь, Истина, Ложь,,,Истина,,Ложь,Договор.Номер,2);
		ДатаДоговора = Формат(Договор.Дата,"ДФ='dd MMMM yyyy'")+" г.";
		Замена = Документ.Content.Find;
		Замена.Execute("[ДатаДоговора]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДатаДоговора,2);
		Если ЗначениеЗаполнено(Руководитель) Тогда
			РуководительКод = СокрЛП(Руководитель.Код);
			Если РуководительКод = "Лигута А.С." Или РуководительКод = "Лигута А.С.(руководитель)" Тогда
				Город = "г. Ростов-на-Дону";
				РуководительДолжностьПадеж = "директора филиала в г. Ростов-на-Дону";
				РуководительДолжность = "";
				РуководительРодитПадеж = "Лигуты Александра Сергеевича";
				РуководительКратко = "Лигута А.С.";
				ДействуетНаОсновании = "Доверенности № 629 от 01.02.2018";
				//РуководительПодпись = "Лигута А.С.";
			ИначеЕсли РуководительКод = "Красюк Н.В." ИЛИ РуководительКод = "Красюк Н.В.(руководитель)" Тогда
				Город = "г. Санкт-Петербург";
				РуководительДолжностьПадеж = "директора филиала в г. Санкт-Петербург";
				РуководительДолжность = "";
				РуководительРодитПадеж = "Красюк Наталии Васильевны";
				РуководительКратко = "Красюк Н.В.";
				Если Договор.Дата<'20180521' тогда //+++ 14.06.2018
					ДействуетНаОсновании = "Доверенности № 570 от 01.06.2017";
				иначе
					ДействуетНаОсновании = "Доверенности № 637 от 21.05.2018"; //новая доверенность в договоре!
				КонецЕсли;	
			//+++ 31.07.2018	
			ИначеЕсли РуководительКод = "Воронцова О. А."Тогда
				Город = "г. Тольятти";
				РуководительДолжностьПадеж = "руководителя обособленного подразделения в г. Тольятти";
				РуководительДолжность = "";
				РуководительРодитПадеж = "Воронцовой Оксаны Алибалаевны";
				РуководительКратко = "Воронцова О.А.";
				
				ДействуетНаОсновании = "Доверенности № 652 от 31.07.2018"; //новая доверенность в договоре!
				
			Иначе
				Город = "г. Ярославль";
				РуководительДолжностьПадеж = "генерального директора";
				РуководительДолжность = "Генеральный директор";
				РуководительРодитПадеж = "Малышева Игоря Ивановича";
				РуководительКратко = "Малышев И.И.";
				ДействуетНаОсновании = "Устава";
				//РуководительПодпись = "И.И. Малышев";
				#Если Клиент тогда
					Если УсловияОплаты = "Предоплата" или УсловияОплаты = "Договор отсрочки до 14 дн" или УсловияОплаты = "Отсрочка до 14 дн." Тогда
						Город = "г. Ярославль";
						РуководительДолжностьПадеж = "руководителя Департамента продаж";
						РуководительДолжность = "Руководитель Департамента продаж";
						РуководительРодитПадеж = "Серкова Александра Николаевича";
						РуководительКратко = "Серков А.Н.";
						ДействуетНаОсновании = "доверенности №543 от 10 апреля 2017 года";
						Если ВыбТип.Значение = "Договор ОТХ с НДС" или ВыбТип.Значение = "Договор ОТХ без НДС" или ВыбТип.Значение = "Доп. соглашение к договору ОТХ с НДС" или ВыбТип.Значение = "Доп. соглашение к договору ОТХ без НДС" тогда
							ДействуетНаОсновании = "Устава";
						КонецЕсли; 
						//РуководительПодпись = "А.Н. Серков";
					КонецЕсли;
				#КонецЕсли
			КонецЕсли;
		Иначе
			#Если Клиент тогда
				Если УсловияОплаты = "Предоплата" или УсловияОплаты = "Договор отсрочки до 14 дн" или УсловияОплаты = "Отсрочка до 14 дн." Тогда
					РуководительДолжностьПадеж = "руководителя Департамента продаж";
					РуководительДолжность = "Руководитель Департамента продаж";
					РуководительРодитПадеж = "Серкова Александра Николаевича";
					РуководительКратко = "Серков А.Н.";
					ДействуетНаОсновании = "доверенности №543 от 10 апреля 2017 года";
					
					Если ВыбТип.Значение = "Договор ОТХ с НДС" или ВыбТип.Значение = "Договор ОТХ без НДС" или ВыбТип.Значение = "Доп. соглашение к договору ОТХ с НДС" или ВыбТип.Значение = "Доп. соглашение к договору ОТХ без НДС" тогда
						ДействуетНаОсновании = "Устава";
					КонецЕсли; 				
					
					//РуководительПодпись = "А.Н. Серков";
				Иначе
					РуководительДолжностьПадеж = "генерального директора";
					РуководительДолжность = "Генеральный директор";
					РуководительРодитПадеж = "Малышева Игоря Ивановича";
					РуководительКратко = "Малышев И.И.";
					ДействуетНаОсновании = "Устава";
					//РуководительПодпись = "И.И. Малышев";
				КонецЕсли;
			#КонецЕсли
			Город = "г. Ярославль";
		КонецЕсли;
		Замена = Документ.Content.Find;
		Замена.Execute("[Город]", Ложь, Истина, Ложь,,,Истина,,Ложь,Город,2);
		Замена = Документ.Content.Find;
		Замена = Документ.Content.Find;
		Замена.Execute("[РуководительДолжностьПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,РуководительДолжностьПадеж,2);
		Замена.Execute("[РуководительРодитПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,РуководительРодитПадеж,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ДействуетНаОсновании]", Ложь, Истина, Ложь,,,Истина,,Ложь,ДействуетНаОсновании,2);
		
		//Плотников+++
		
   Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
			
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		
		Если Найти(НаимПокупателя,"Общество") = 0 Тогда
			Если Найти(НаимПокупателя,"ООО") > 0 Тогда
				НаимПокупателя = СтрЗаменить(НаимПокупателя,"ООО","Общество с ограниченной ответственностью");
			Иначе
		        НаимПокупателя = "Общество с ограниченной ответственностью " + НаимПокупателя;
			КонецЕсли;
		КонецЕсли;
		
		НаимКороткое = НаимПокупателя;
		
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
		
		//Подписант = "Директор "+ СтруктураКонтЛица.НаимДиректора;
		
		//НаимПокупателя = НаимПокупателя +", именуемое далее «Покупатель»,
		//|в лице (генерального) директора "+ СтруктураКонтЛица.НаимДиректораРодПадеж  +", действующего на основании  Устава";
		
		Именуем = "именуемое";
		ПокупательРуководительДолжность      = СтруктураКонтЛица.ДолжностьДиректора;
		ПокупательРуководительДолжностьПадеж = СтруктураКонтЛица.ДолжностьДиректораРодПадеж;
		ПокупательРуководительРодитПадеж     = СтруктураКонтЛица.НаимДиректораРодПадеж;
		ПокупательРуководитель               = СтруктураКонтЛица.НаимДиректораКраткое;
		ПокупательДействуетНаОсновании       = "Устава";
		ПокупательРуководительКратко         = СтруктураКонтЛица.НаимДиректораКраткое;
		ФормаИП = "";
		НаимИП  = "";
			   
	Иначе
		
		НаимПокупателя = СокрЛП(ТекПокупатель.НаименованиеПолное);
		
		Если Найти(НаимПокупателя,"Индивидуальный") = 0 Тогда
			Если Найти(НаимПокупателя,"ИП") > 0 Тогда
				НаимПокупателя = СтрЗаменить(НаимПокупателя,"ИП","Индивидуальный предприниматель");
			Иначе
		        НаимПокупателя = "Индивидуальный предприниматель " + НаимПокупателя;
			КонецЕсли;
		КонецЕсли;
		ФормаИП = "Индивидуальный предприниматель";
		НаимИП  = СтрЗаменить(НаимПокупателя, "Индивидуальный предприниматель ", "");
		
		НаимКороткое = НаимПокупателя;
		
		//Подписант = НаимПокупателя;
		
		СтруктураКонтЛица = КонтактныеЛицаКонтрагента(ТекПокупатель);
		
		//НаимПокупателя = НаимПокупателя +", именуемый далее «Покупатель»,
		//|в лице "+ СтруктураКонтЛица.НаимДиректораРодПадеж  +", действующий на основании свидетельства ОГРН " + ТекПокупатель.ОГРН;
		
		Именуем = "именуемый";
		ПокупательРуководительДолжность      = "Индивидуальный предприниматель";
		//ПокупательРуководительДолжностьПадеж = "Индивидуального предпринимателя";
		ПокупательРуководительДолжностьПадеж = "";
		ПокупательРуководительРодитПадеж     = СтруктураКонтЛица.НаимДиректораРодПадеж;
		ПокупательРуководитель               = СтруктураКонтЛица.НаимДиректораКраткое;
		ПокупательДействуетНаОсновании       = "ОГРН " + ТекПокупатель.ОГРН;
		ПокупательРуководительКратко         = СтруктураКонтЛица.НаимДиректораКраткое
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекПокупатель.Подписант) Тогда
		Если ЗначениеЗаполнено(ТекПокупатель.Подписант.ОснованиеДляДоговора) Тогда
			ПокупательДействуетНаОсновании = ТекПокупатель.Подписант.ОснованиеДляДоговора;
		Иначе
			#Если Клиент тогда
				Предупреждение("У Подписанта не заполнено свойство ""На основании чего работает""!", 1*60); //1-5 мин
			#КонецЕсли	
		КонецЕсли;
	Иначе
		//Сообщить("Не выбран Подписант!");
		//Возврат 0;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекПокупатель.УсловияОплаты) Тогда
		Сообщить("Не выбрано Условие оплаты!");
		Возврат 0;
	КонецЕсли;
	
	Замена = Документ.Content.Find;
	Замена.Execute("[НаимПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,НаимПокупателя,2);
	
	Замена = Документ.Content.Find;
	Замена.Execute("[Именуем]", Ложь, Истина, Ложь,,,Истина,,Ложь,Именуем,2);
	
	Замена = Документ.Content.Find;
	Замена.Execute("[ПокупательРуководительДолжностьПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПокупательРуководительДолжностьПадеж,2);
	
	Замена = Документ.Content.Find;
	Замена.Execute("[ПокупательРуководительРодитПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПокупательРуководительРодитПадеж,2);
	
	Замена = Документ.Content.Find;
	Замена.Execute("[ПокупательДействуетНаОсновании]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПокупательДействуетНаОсновании,2);
		
	Замена = Документ.Content.Find;
	Замена.Execute("[СпособОтгрузки]", Ложь, Истина, Ложь,,,Истина,,Ложь,ТекПокупатель.СпособОтгрузки.Наименование,2);
	Замена = Документ.Content.Find;
	Замена.Execute("[Пени]", Ложь, Истина, Ложь,,,Истина,,Ложь,ТекПокупатель.ПроцентПени,2);

		
		//Замена Арбитражной оговорки
		ТекстВыбранныйВКарте = ТекПокупатель.Суд;
		Если ВыбТип.Значение = "Поручительство" тогда
			ТекстТретейскийСуд = "4.1. Стороны согласовали, что все споры, разногласия или требования, возникающие из настоящего договора или в связи с ним, в том числе, касающиеся возникновения, изменения, исполнения, нарушения, прекращения, расторжения, признания его недействительности либо незаключенным, передаются для окончательного разрешения в третейский суд, образованный сторонами для разрешения конкретного спора. Стороны определили, что спор будет рассмотрен единоличным арбитром, при этом стороны избрали в качестве единоличного арбитра (третейского судьи) - Фролова Антона Всеволодовича, гражданина РФ, имеющего высшее юридическое образование, подтвержденное выданным на территории РФ дипломом установленного образца, а также не имеющего ограничений, предусмотренных пп. 8-11 ст.11 Федерального закона от 29.12.2015 N 382-ФЗ ""Об арбитраже (третейском разбирательстве) в Российской Федерации"". Стороны договорились, что местом арбитража является адрес: 150014, Ярославская область, г. Ярославль, ул. Салтыкова-Щедрина, д.21, оф.420, при этом третейский суд может в любом ином месте, которое он посчитает надлежащим, провести все необходимые мероприятия, в частности: заслушивание свидетелей, экспертов или сторон, либо осмотр товаров, другого имущества или документов. Размер гонорара арбитра стороны согласовали в размере 0,5% от цены иска, при этом распределение расходов, связанных с разрешением спора в третейском суде между сторонами, производится третейским судом пропорционально удовлетворенным и отклоненным требованиям. Стороны согласовали, что арбитраж в отношении конкретного спора считается начавшимся в день, когда исковое заявление получено третейским судом по месту арбитража: 150014, Ярославская область, г.Ярославль, ул. Салтыкова-Щедрина, д.21, оф.420, с адресатом: Третейский суд, Фролову А.В. Стороны согласовали, что до подачи искового заявления должна быть заявлена претензия срок рассмотрения которой не может превышать четырнадцать календарных дней с даты ее направления адресату, после истечения указанного срока направившая претензию сторона вправе обратиться в суд. Стороны согласовали, что истец излагает свои требования в исковом заявлении, которое в письменной форме передается в третейский суд и направляется ответчику. Стороны согласовали, что документы и иные материалы направляются сторонам заказным письмом по адресам, указанным в настоящем договоре, при этом сторона считается надлежащим образом уведомленной по истечении четырнадцати календарных дней с даты направления корреспонденции. Стороны согласились не проводить устное слушание дела и осуществлять разбирательство только на основе документов и других материалов. Стороны согласовали, что ведение протокола производится по усмотрению третейского суда, при этом третейский суд вправе не вести протокол. Стороны согласовали, что непредставление документов и иных материалов или неявка на заседание третейского суда сторон или их представителей, надлежащим образом уведомленных о времени и месте заседания третейского суда, не является препятствием для проведения арбитража и принятия арбитражного решения, если причина непредставления указанных документов и материалов или неявки сторон на заседание третейского суда признана им неуважительной. Стороны согласовали, что срок рассмотрения конкретного спора не должен превышать двух месяцев. Стороны принимают на себя обязанность добровольно и немедленно исполнять арбитражное решение."; 
			ТекстАрбитражныйСудПоМестуЖительстваИсца = "4.1. В случае невозможности достичь взаимоприемлемого решения в ходе переговоров стороны передают их на рассмотрение в Арбитражный суд по месту нахождения Истца.                                                                                                           6.2. До передачи спора в суд должна быть заявлена претензия, срок рассмотрения которой не может превышать 10 (десяти) дней со дня её отправления почтовой связью.";
		иначе
			ТекстТретейскийСуд = "6.1. Стороны согласовали, что все споры, разногласия или требования, возникающие из настоящего договора или в связи с ним, в том числе, касающиеся возникновения, изменения, исполнения, нарушения, прекращения, расторжения, признания его недействительности либо незаключенным, передаются для окончательного разрешения в третейский суд, образованный сторонами для разрешения конкретного спора. Стороны определили, что спор будет рассмотрен единоличным арбитром, при этом стороны избрали в качестве единоличного арбитра (третейского судьи) - Фролова Антона Всеволодовича, гражданина РФ, имеющего высшее юридическое образование, подтвержденное выданным на территории РФ дипломом установленного образца, а также не имеющего ограничений, предусмотренных пп. 8-11 ст.11 Федерального закона от 29.12.2015 N 382-ФЗ ""Об арбитраже (третейском разбирательстве) в Российской Федерации"". Стороны договорились, что местом арбитража является адрес: 150014, Ярославская область, г. Ярославль, ул. Салтыкова-Щедрина, д.21, оф.420, при этом третейский суд может в любом ином месте, которое он посчитает надлежащим, провести все необходимые мероприятия, в частности: заслушивание свидетелей, экспертов или сторон, либо осмотр товаров, другого имущества или документов. Размер гонорара арбитра стороны согласовали в размере 0,5% от цены иска, при этом распределение расходов, связанных с разрешением спора в третейском суде между сторонами, производится третейским судом пропорционально удовлетворенным и отклоненным требованиям. Стороны согласовали, что арбитраж в отношении конкретного спора считается начавшимся в день, когда исковое заявление получено третейским судом по месту арбитража: 150014, Ярославская область, г.Ярославль, ул. Салтыкова-Щедрина, д.21, оф.420, с адресатом: Третейский суд, Фролову А.В. Стороны согласовали, что до подачи искового заявления должна быть заявлена претензия срок рассмотрения которой не может превышать четырнадцать календарных дней с даты ее направления адресату, после истечения указанного срока направившая претензию сторона вправе обратиться в суд. Стороны согласовали, что истец излагает свои требования в исковом заявлении, которое в письменной форме передается в третейский суд и направляется ответчику. Стороны согласовали, что документы и иные материалы направляются сторонам заказным письмом по адресам, указанным в настоящем договоре, при этом сторона считается надлежащим образом уведомленной по истечении четырнадцати календарных дней с даты направления корреспонденции. Стороны согласились не проводить устное слушание дела и осуществлять разбирательство только на основе документов и других материалов. Стороны согласовали, что ведение протокола производится по усмотрению третейского суда, при этом третейский суд вправе не вести протокол. Стороны согласовали, что непредставление документов и иных материалов или неявка на заседание третейского суда сторон или их представителей, надлежащим образом уведомленных о времени и месте заседания третейского суда, не является препятствием для проведения арбитража и принятия арбитражного решения, если причина непредставления указанных документов и материалов или неявки сторон на заседание третейского суда признана им неуважительной. Стороны согласовали, что срок рассмотрения конкретного спора не должен превышать двух месяцев. Стороны принимают на себя обязанность добровольно и немедленно исполнять арбитражное решение."; 
			ТекстАрбитражныйСудПоМестуЖительстваИсца = "6.1. В случае невозможности достичь взаимоприемлемого решения в ходе переговоров стороны передают их на рассмотрение в Арбитражный суд по месту нахождения Истца.                                                                                                           6.2. До передачи спора в суд должна быть заявлена претензия, срок рассмотрения которой не может превышать 10 (десяти) дней со дня её отправления почтовой связью.";
		КонецЕсли;
		
		Если ТекстВыбранныйВКарте = "Третейский суд" или ТекстВыбранныйВКарте = "" Тогда
        	ТекстФулл = ТекстТретейскийСуд;	
		ИначеЕсли ТекстВыбранныйВКарте = "Арбитражный суд по месту нахождения истца" Тогда
            ТекстФулл = ТекстАрбитражныйСудПоМестуЖительстваИсца;
		Иначе
            ТекстФулл = ТекстВыбранныйВКарте;
		КонецЕсли;
		
		
		//Ограничение на замену в ворде 255 символов поэтому будет цикл
		ТекстОстаток = ТекстФулл;
		Кол_символов = 250;
		ФрагментЗамены = "[ТАО]";
		Пока СтрДлина(ТекстОстаток) > 0 Цикл
			Если СтрДлина(ТекстОстаток) > 255 Тогда
				СтрокаДляЗаписи = Лев(ТекстОстаток, Кол_символов)+ФрагментЗамены;
				ТекстОстаток = Сред(ТекстОстаток, Кол_символов+1);
			Иначе
				СтрокаДляЗаписи = ТекстОстаток;
				ТекстОстаток = "";
			КонецЕсли;
			
			Замена = Документ.Content.Find;
			Замена.Execute(ФрагментЗамены, ложь, Истина, Ложь,,,Истина,,Ложь,СтрокаДляЗаписи,2);
			
		КонецЦикла;
		
		НужноПробелов = (СтрДлина(ТекстТретейскийСуд) - СтрДлина(ТекстФулл)) *1.9;
		Пробелы = " ";
		Если НужноПробелов > 0 Тогда
			i = 0;
			Пока i < НужноПробелов Цикл
				Если i%200 = 0 Тогда
					Пробелы = Пробелы+Символы.ПС;
					i = i+1;
				Иначе
					Пробелы = Пробелы+" ";
					i = i+1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		
		ТекстОстаток = Пробелы;
		Кол_символов = 240;
		ФрагментЗамены = "[Пробел1]";
		Пока СтрДлина(ТекстОстаток) > 0 Цикл
			Если СтрДлина(ТекстОстаток) > 255 Тогда
				СтрокаДляЗаписи = Лев(ТекстОстаток, Кол_символов)+ФрагментЗамены;
				ТекстОстаток = Сред(ТекстОстаток, Кол_символов+1);
			Иначе
				СтрокаДляЗаписи = ТекстОстаток;
				ТекстОстаток = "";
			КонецЕсли;
			
			Замена = Документ.Content.Find;
			Замена.Execute(ФрагментЗамены, ложь, Истина, Ложь,,,Истина,,Ложь,СтрокаДляЗаписи,2);
			
		КонецЦикла;		
		
		//поиск директора Покупателя
		
				
		//Замена = Документ.Content.Find;
		//Если СокрЛП(СтруктураКонтЛица.НаимДиректораРодПадеж) = "" Тогда
		//	Замена.Execute("[НаимДиректораРодПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,"____________________________________");
		//Иначе	
		//	Замена.Execute("[НаимДиректораРодПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректораРодПадеж);
		//КонецЕсли;
		//Замена = Документ.Content.Find;
		//Замена.Execute("[ДолжностьДиректораРодПадеж]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДолжностьДиректораРодПадеж);
		//Замена = Документ.Content.Find;
		//Замена.Execute("[ДолжностьДиректора]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДолжностьДиректора);
		//Замена = Документ.Content.Find;
		//Замена.Execute("[ПодписьПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.НаимДиректораКраткое);
		//Замена = Документ.Content.Find;
		//Замена.Execute("[ДействующийНаОсновании]", Ложь, Истина, Ложь,,,Истина,,Ложь,СтруктураКонтЛица.ДействующийНаОсновании);
		
		Замена = Документ.Content.Find;
		Если ФормаИП = "" Тогда
			Замена.Execute("[ПокупательНаимКороткое]", Ложь, Истина, Ложь,,,Истина,,Ложь,НаимКороткое,2);
		Иначе
			Замена.Execute("[ПокупательНаимКороткое]", Ложь, Истина, Ложь,,,Истина,,Ложь,ФормаИП,2);
		КонецЕсли;
		Замена.Execute("[НаимИП]", Ложь, Истина, Ложь,,,Истина,,Ложь,НаимИП,2);
		
		СведенияОПокупателе = СведенияОЮрФизЛице(ТекПокупатель, ТекущаяДата());
		
		Запрос = Новый Запрос;
		запрос.УстановитьПараметр("Об",ТекПокупатель);
		запрос.УстановитьПараметр("Тип",Перечисления.ТипыКонтактнойИнформации.Адрес);
		запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00015"));
		Запрос.Текст = "ВЫБРАТЬ
		               |	КонтактнаяИнформация.Представление
		               |ИЗ
		               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		               |ГДЕ
		               |	КонтактнаяИнформация.Объект = &Об
		               |	И КонтактнаяИнформация.Тип = &Тип
		               |	И КонтактнаяИнформация.Вид = &Вид";
		Результат = Запрос.Выполнить().Выгрузить();
		Если Результат.Количество() > 0 Тогда
			ПочтовыйАдрес = Результат[0].Представление;
		Иначе
			ПочтовыйАдрес = СведенияОПокупателе.ФактическийАдрес;
		КонецЕсли;
		
		ЮрАдресПокупателя = СведенияОПокупателе.ЮридическийАдрес;
		Замена = Документ.Content.Find;
		Замена.Execute("[ЮрАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ЮрАдресПокупателя,2);
		
		
		Замена = Документ.Content.Find;
		Замена.Execute("[ФактАдресПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПочтовыйАдрес,2);
		
		Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			КППпокупателя = "ОГРН "+Строка(ТекПокупатель.ОГРН);
		Иначе	
		    КППпокупателя = "КПП "+СведенияОПокупателе.КПП;
		КонецЕсли;

		ИННпокупателя = СведенияОПокупателе.ИНН;
		Замена = Документ.Content.Find;
		Замена.Execute("[ИННпокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ИННпокупателя,2);
	    		
		//КППпокупателя = СведенияОПокупателе.КПП;
		Замена = Документ.Content.Find;
		Замена.Execute("[КППпокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,КППпокупателя,2);
		
		//ОГРНпокупателя = СведенияОПокупателе.ОГРН;
		//Замена = Документ.Content.Find;
		//Замена.Execute("[ОГРНпокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ОГРНпокупателя,2);

		//ТелефонПокупателя = СведенияОПокупателе.Телефоны;
		//Замена = Документ.Content.Find;
		//Замена.Execute("[ТелефонПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ТелефонПокупателя);
		
		БанковскийСчетПокупателя = ТекПокупатель.ОсновнойБанковскийСчет;
		БанкПокупателяНаим = "";
		БанкПокупателяОКПО = "";
		БанкПокупателяБИК = "";
		БанкПокупателяАдрес = "";
		БанкПокупателяРасчетныйСчет = "";
		БанкПокупателяКоррСчет = "";

		Если ЗначениеЗаполнено(БанковскийСчетПокупателя) Тогда
			Банк = БанковскийСчетПокупателя.Банк;
			БанкПокупателяНаим = СокрЛП(Банк)+" "+Банк.Город;
			БанкПокупателяБИК = Банк.Код;
            БанкПокупателяАдрес = Банк.Адрес;
			БанкПокупателяРасчетныйСчет = БанковскийСчетПокупателя.НомерСчета;
			БанкПокупателяКоррСчет = БанковскийСчетПокупателя.Банк.КоррСчет;
		КонецЕсли;
		
		Замена = Документ.Content.Find;
		Замена.Execute("[РуководительДолжность]", Ложь, Истина, Ложь,,,Истина,,Ложь,РуководительДолжность,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[РуководительКратко]", Ложь, Истина, Ложь,,,Истина,,Ложь,РуководительКратко,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяНаим]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяНаим,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяОКПО]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяОКПО,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяБИК]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяБИК,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяАдрес]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяАдрес,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяРасчетныйСчет]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяРасчетныйСчет,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[БанкПокупателяКоррСчет]", Ложь, Истина, Ложь,,,Истина,,Ложь,БанкПокупателяКоррСчет,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ПокупательРуководительДолжность]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПокупательРуководительДолжность,2);
		Замена = Документ.Content.Find;
		Замена.Execute("[ПокупательРуководительКратко]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПокупательРуководительКратко,2);
		
		Замена = Документ.Content.Find;
		Замена.Execute("[ОГРН]", Ложь, Истина, Ложь,,,Истина,,Ложь, "ОГРН " + ТекПокупатель.ОГРН);
		Замена = Документ.Content.Find;
		Замена.Execute("[ПокупательРуководительКратко]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПокупательРуководительКратко,2);
		
		//Паспорт только если Физ. лицо, например ИП-шник
		//Если ТекПокупатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность)<>"" Тогда
		//	ПаспортПокупателя = Символы.ВК+Символы.ПС+СокрЛП(ТекПокупатель.ДокументУдостоверяющийЛичность);
		//Иначе
		//	ПаспортПокупателя = "";
		//КонецЕсли;
		//Замена = Документ.Content.Find;
		//Замена.Execute("[ПаспортПокупателя]", Ложь, Истина, Ложь,,,Истина,,Ложь,ПаспортПокупателя);
		
		Если Вернуть Тогда
			Возврат Документ;
		Иначе
			МСВорд.Application.Visible = 1;
			Документ.Activate();
			МСВорд.ActiveWindow.WindowState = 2;
			МСВорд.ActiveWindow.WindowState = 1;
		КонецЕсли;
		
	Исключение
		Сообщить(ОписаниеОшибки());
		МСВорд.Application.Quit();
	КонецПопытки;	
	
	
КонецФункции	
