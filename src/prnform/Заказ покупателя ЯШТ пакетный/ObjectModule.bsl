Функция Печать_Старая() Экспорт

	ДатаОтпуска = ТекущаяДата();	

	//ВвестиДату(ДатаОтпуска, "Введите дату отгрузки", ЧастиДаты.Дата);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|   Организация,
	|	Контрагент,
	|   Ответственный
	|ИЗ 
	|	Документ.РеализацияТоваровУслуг КАК Документ
	|ГДЕ
	|   Документ.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустойСклад", Справочники.Склады.ПустаяСсылка());
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Склад
	|ИЗ
	|   Документ.РеализацияТоваровУслуг.Товары КАК Документ
	|ГДЕ
	|   Документ.Ссылка = &ТекущийДокумент //И Склад <> &ПустойСклад
	|";
	
	Склады = Запрос.Выполнить().Выбрать();
	
	ТабДокумент  = Новый ТабличныйДокумент;
	
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_ТОРГ12";

	Макет = ПолучитьМакет("MX6");

	
	Пока Склады.Следующий() Цикл
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийСклад", Склады.Склад);
		Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
		//Запрос.УстановитьПараметр("ПустойСклад", Справочники.Склады.ПустаяСсылка());
		//Запрос.УстановитьПараметр("СкладШапки", Шапка.Склад);
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Номенклатура,
		|   ЕдиницаИзмерения,
		|   Количество,
		|   Цена,
		|   Склад,
		|   Сумма
		|ИЗ
		|   Документ.РеализацияТоваровУслуг.Товары КАК Документ
		|ГДЕ
		|   Документ.Ссылка = &ТекущийДокумент И Склад = &ТекущийСклад
		|ИТОГИ
		|	СУММА(Количество), СУММА(Сумма) ПО Общие
		|";
		

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		//ОбластьМакета.Параметры.Заполнить(Шапка);
		//ОбластьМакета.Параметры.НомерДокумента = ПолучитьНомерНаПечать(Шапка);
		ОбластьМакета.Параметры.ПериодНачало  	= Формат(Шапка.Дата, "ДФ=""дд ММММ гггг 'г.'""");
		ОбластьМакета.Параметры.ПериодКонец  	= Формат(Шапка.Дата, "ДФ=""дд ММММ гггг 'г.'""");
		ОбластьМакета.Параметры.Организация  	= Шапка.Организация;
		ОбластьМакета.Параметры.Ответственный  	= Шапка.Ответственный;
		ОбластьМакета.Параметры.Склад			= ?(Склады.Склад = Справочники.Склады.ПустаяСсылка(), Шапка.Склад, Склады.Склад);
		ТабДокумент.Вывести(ОбластьМакета);
		
		Сч = 1;
		
		ТабЧасть = Запрос.Выполнить().Выбрать();
		Пока ТабЧасть.Следующий() Цикл
			
			Если ТабЧасть.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
				ОбщаяСумма = ТабЧасть.Сумма;
				ОбщееКолВо = ТабЧасть.Количество;
			Иначе
				ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
				ОбластьСтроки.Параметры.Ном = Сч;
				ОбластьСтроки.Параметры.ДатаОтпуска = Формат(ДатаОтпуска, "ДФ=""дд.ММ.гг""");//Формат(Шапка.Дата, "ДФ=""дд.мм.гг""");
				ОбластьСтроки.Параметры.ДокНом = Шапка.Номер;
				ОбластьСтроки.Параметры.ДокДата = Формат(Шапка.Дата, "ДФ=""дд.ММ.гг""");
				ОбластьСтроки.Параметры.Склад = Шапка.Контрагент;//ТабЧасть.Склад;
				ОбластьСтроки.Параметры.Номенклатура = ТабЧасть.Номенклатура;
				ОбластьСтроки.Параметры.ЕдИзм = ТабЧасть.ЕдиницаИзмерения;
				ОбластьСтроки.Параметры.Цена = ФорматСумм(ТабЧасть.Цена);
				ОбластьСтроки.Параметры.Количество = ТабЧасть.Количество;
				ОбластьСтроки.Параметры.Сумма = ФорматСумм(ТабЧасть.Сумма);
				ТабДокумент.Вывести(ОбластьСтроки);
				Сч = Сч + 1;
			КонецЕсли;
			
			
			
		КонецЦикла;
		
		ОбластьИтоги = Макет.ПолучитьОбласть("Итог");
		ОбластьИтоги.Параметры.КолСумма = ОбщееКолВо;
		ОбластьИтоги.Параметры.СуммаСумма = ФорматСумм(ОбщаяСумма);
		ТабДокумент.Вывести(ОбластьИтоги);
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Подвал"));
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции


Функция Печать_Стар() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",     СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидПоступленияОрдер", Перечисления.ВидыПоступленияТоваров.ПоОрдеру);

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
	|	НомерВходящегоДокумента КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА ВидПоступления = &ВидПоступленияОрдер ТОГДА СкладОрдер.Склад
	|		ИНАЧЕ СкладОрдер
	|	КОНЕЦ КАК МестоПриемки,
	|	ВЫБОР
	|		КОГДА ВидПоступления = &ВидПоступленияОрдер ТОГДА СкладОрдер.Склад.Представление
	|		ИНАЧЕ СкладОрдер.Представление
	|	КОНЕЦ КАК СкладНаименование,
	|	Подразделение,
	|	Подразделение  КАК ПредставлениеПодразделения,
	|	Контрагент.Код КАК ПоставщикКод,
	|	Контрагент     КАК Поставщик,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов      КАК Курс,
	|	КратностьВзаиморасчетов КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	Водитель,
	|   МаркаАвтомобиля,
	|   МаркаПрицепа,
	|   ГосНомерАвтомобиля,
	|	ГосНомерПрицепа
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	ЗапросПоТоварам.УстановитьПараметр("Курс",            СсылкаНаОбъект.КурсВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("Кратность",       СсылкаНаОбъект.КратностьВзаиморасчетов);

	ЗапросПоТоварам.Текст = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код                КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.КоличествоПринято,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Стоимость,
	|	ВложенныйЗапрос.СуммаНДС,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка       КАК Метка
	|
	|ИЗ
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		Склад,
	|		ЕдиницаИзмерения,
	|		СтавкаНДС,
	|		СУММА(Количество)                    КАК КоличествоПринято,
	|		СУММА(Цена     * &Курс / &Кратность) КАК Цена,
	|		СУММА(Сумма    * &Курс / &Кратность) КАК Стоимость,
	|		СУММА(СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	|		ХарактеристикаНоменклатуры           КАК Характеристика,
	|		СерияНоменклатуры                    КАК Серия,
	|		МИНИМУМ(НомерСтроки)                 КАК НомерСтроки,
	|		0                                    КАК Метка
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Склад,
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		СтавкаНДС,
	|		ХарактеристикаНоменклатуры,
	|		СерияНоменклатуры
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Склад,
	|	Номенклатура,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК Строка(1000)),
	|	Номенклатура.Код,
	|	Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаИзмеренияНаименование,
	|	Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	""Без НДС"",
	|	Количество,
	|	Цена     * &Курс / &Кратность,
	|	Сумма    * &Курс / &Кратность,
	|	0,
	|	NULL,
	|	NULL,
	|	НомерСтроки КАК НомерСтроки,
	|	2           КАК Метка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Макет = ПолучитьМакет("М4");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_М4";

	// Выводим общие реквизиты шапки
	СведенияОПокупателе = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.НомерДокумента           = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ФИОВодителя				 = Шапка.Водитель;
	ОбластьМакета.Параметры.МаркаАвтомобиля			 = Шапка.МаркаАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерАвтомобиля		 = Шапка.ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерПрицепа			 = Шапка.ГосНомерПрицепа;
	
	
	
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим заголовок докмента
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
	ПредставлениеКонтрагента = ОписаниеОрганизации(СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
	ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	СтрокНаСтранице = 24;
	СтрокШапки      = 10;
	СтрокПодвала    = 3;
	НомерСтраницы   = 1;

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// Инициализация итогов в документе
	ИтогоКоличествоПринято = 0;
	ИтогоСуммаБезНДС = 0;
	ИтогоСуммаНДС    = 0;
	ИтогоВсегоСНДС   = 0;
	Ном              = 0;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			НомерСтраницы = НомерСтраницы + 1;
			ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
			ТабДокумент.Вывести(ПодвалСтрок);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

		Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
		ВсегоСНДС = (ВыборкаСтрокТовары.Стоимость
			+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));

		КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
		СуммаНДС          = ВыборкаСтрокТовары.СуммаНДС / Шапка.Кратность;
		Цена              = (ВсегоСНДС - СуммаНДС) / КоличествоПринято;

		ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
		ОбластьМакета.Параметры.ВсегоСНДС         = ВсегоСНДС;
		ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
		ОбластьМакета.Параметры.СуммаНДС          = СуммаНДС;
		ОбластьМакета.Параметры.Цена              = Цена;
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
		                                          + ПредставлениеСерий(ВыборкаСтрокТовары)
		                                          + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
												  
		ОбластьМакета.Параметры.НомерПаспорта 	  = СокрЛП(ВыборкаСтрокТовары.Склад);
		                                          										  
		ТабДокумент.Вывести(ОбластьМакета);

		ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
		ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
		ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
		ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

	КонецЦикла;

	
	
	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");

	ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
	ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
	ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
	ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;

КонецФункции // ПечатьМ4()

Функция Печать(Тип = "Заказ") Экспорт

	                                          
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";
	
	ЗапросПоДокументам=Новый Запрос;
	
	ЗапросПоДокументам.Текст=
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПокупателя.Ссылка СсылкаНаОбъект
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(,ДоговорКонтрагента.Владелец=&Контрагент )
	| УПОРЯДОЧИТЬ ПО ЗаказПокупателя.Дата";
 
	ЗапросПоДокументам.УстановитьПараметр("Контрагент",СсылкаНаОбъект.Контрагент);
	
	ВыборкаПоДокументам=ЗапросПоДокументам.Выполнить().Выбрать();
	
	
	
	Макет = ПолучитьМакет("ФрмЗаказ");
	
	ОбластьМакета = Макет.ПолучитьОбласть("НадписьЧислоЗаказов");
	ОбластьМакета.Параметры.НадписьЧислоЗаказов="Всего "+ Строка(ВыборкаПоДокументам.Количество()) +" заказов по "+СсылкаНаОбъект.Контрагент.Наименование;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	
	СведенияОПоставщике = СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);
 	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ТабДокумент.Вывести(ОбластьМакета);

	СведенияОПолучателе = СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
	
    
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.СсылкаНаОбъект);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|   ЕстьNULL(ЗаказПокупателяТовары.НомерСтроки,1000) НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК Товар,
	|	ВложенныйЗапрос.Номенклатура.Код                КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул            КАК Артикул,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Сумма
	|ИЗ
	|(ВЫБРАТЬ
	|Номенклатура ,
	|ЕдиницаИзмерения,
	|Цена,
	|КоличествоОстаток Количество,
	|СуммаВзаиморасчетовОстаток Сумма
	|ИЗ
	|РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя = &ТекущийДокумент) ) ВложенныйЗапрос
	| ЛЕВОЕ СОЕДИНЕНИЕ 
	|	(ВЫБРАТЬ НомерСтроки,Номенклатура
	|ИЗ	Документ.ЗаказПокупателя.Товары 
	|ГДЕ Ссылка = &ТекущийДокумент) КАК ЗаказПокупателяТовары
	| ПО ВложенныйЗапрос.Номенклатура=ЗаказПокупателяТовары.Номенклатура
	| УПОРЯДОЧИТЬ ПО ЕстьNULL(ЗаказПокупателяТовары.НомерСтроки,1000)";

	РезультатТаблица = Запрос.Выполнить().Выгрузить();

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(ВыборкаПоДокументам.СсылкаНаОбъект, "Заказ покупателя");
	ТабДокумент.Вывести(ОбластьМакета);

    
	// Выводим шапку накладной
	
	Если (СокрЛП(ВыборкаПоДокументам.СсылкаНаОбъект.АдресДоставки) <> "") ИЛИ
		 (СокрЛП(ВыборкаПоДокументам.СсылкаНаОбъект.МаркаАвтомобиля) <> "") ИЛИ
		 (СокрЛП(ВыборкаПоДокументам.СсылкаНаОбъект.ГосНомерАвтомобиля) <> "") Тогда 
		 
		ОбластьМакета = Макет.ПолучитьОбласть("Авто");
		ОбластьМакета.Параметры.Авто = СокрЛП(ВыборкаПоДокументам.СсылкаНаОбъект.МаркаАвтомобиля);
		ОбластьМакета.Параметры.НомерАвто = СокрЛП(ВыборкаПоДокументам.СсылкаНаОбъект.ГосНомерАвтомобиля);
		ОбластьМакета.Параметры.Пункт = СокрЛП(ВыборкаПоДокументам.СсылкаНаОбъект.АдресДоставки);
		ТабДокумент.Вывести(ОбластьМакета);
		 
	КонецЕсли;
	


	ЕстьСкидки = Ложь;

	ВыводитьКоды = Истина;
	Колонка = "Код";
	
	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");

	ТабДокумент.Вывести(ОбластьНомера);
	ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
	ТабДокумент.Присоединить(ОбластьКодов);
	ТабДокумент.Присоединить(ОбластьДанных);
	
	
	ТабДокумент.Присоединить(ОбластьСуммы);

	ОбластьКолонкаТовар = Макет.Область("Товар");

	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");

	ВсегоКубов = 0;

	Для каждого ВыборкаСтрокТовары Из РезультатТаблица Цикл 

		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьНомера.Параметры.НомерСтроки = РезультатТаблица.Индекс(ВыборкаСтрокТовары) + 1;
		ТабДокумент.Вывести(ОбластьНомера);

		ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
		ТабДокумент.Присоединить(ОбластьКодов);

		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьДанных.Параметры.Товар       = СокрП(ВыборкаСтрокТовары.Товар) ;
		ТабДокумент.Присоединить(ОбластьДанных);
		
		ТабДокумент.Присоединить(ОбластьСуммы);

	КонецЦикла;

	
	// Вывести Итого
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьСкидок = Макет.ПолучитьОбласть("Итого|Сумма");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Итого|Сумма");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьДанных);
	
	ОбластьСуммы.Параметры.ОбъемИтог = Формат(ВсегоКубов, "ЧДЦ=2");
	
	ТабДокумент.Присоединить(ОбластьСуммы);

	ОбластьНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
	
	
	
	ТабДокумент.Вывести(ОбластьНомера);
	
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьДанных);
	
	ТабДокумент.Присоединить(ОбластьСуммы);

	
	ОбластьМакета = Макет.ПолучитьОбласть("Примечание"); 
	ОбластьМакета.Параметры.Примечание = ВыборкаПоДокументам.СсылкаНаОбъект.Комментарий;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьМакета.Параметры.Менеджер = ВыборкаПоДокументам.СсылкаНаОбъект.Ответственный;

	КонецЦикла;
	
	ВыборкаПоДокументам.Сбросить();
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(ВыборкаПоДокументам.СсылкаНаОбъект, "Заказ покупателя");	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаРасположение");
	
	ОбластьСклад = Макет.ПолучитьОбласть("СтрокаСклад");
	
	ОбластьНоменклатура = Макет.ПолучитьОбласть("СтрокаНоменклатура");
	ОбластьКомплектующая = Макет.ПолучитьОбласть("СтрокаКомплектующая");
	
	
	ЗапросПоНоменклатуре = Новый Запрос;
	
	ЗапросПоНоменклатуре.Текст = "
	|	ВЫБРАТЬ
	|ЕстьNULL(ЗаказПокупателяТовары.НомерСтроки,1000) НомерСтроки,
	|ТоварыНаСкладахОстатки.Склад,
	|ТоварыНаСкладахОстатки.Номенклатура,
	|ТоварыНаСкладахОстатки.КоличествоОстаток
	|ИЗ
	|РегистрНакопления.ТоварыНаСкладах.Остатки(&ТекДата, Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура ИЗ Документ.ЗаказПокупателя.Товары ГДЕ Ссылка=&ТекущийДокумент)) ТоварыНаСкладахОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ
	|НомерСтроки,
	|Номенклатура
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары 
	|ГДЕ
	|	Ссылка = &ТекущийДокумент И Номенклатура В(ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура ИЗ Документ.ЗаказПокупателя.Товары ГДЕ Ссылка=&ТекущийДокумент)) ЗаказПокупателяТовары	
	|ПО 	ТоварыНаСкладахОстатки.Номенклатура=ЗаказПокупателяТовары.Номенклатура
	|УПОРЯДОЧИТЬ ПО ЕстьNULL(ЗаказПокупателяТовары.НомерСтроки,1000)
	|ИТОГИ  Среднее(НомерСтроки),
	|Сумма(КоличествоОстаток)
	|ПО ТоварыНаСкладахОстатки.Номенклатура, Склад";
	
	ЗапросПоНоменклатуре.УстановитьПараметр("ТекДата", ТекущаяДата());//СсылкаНаОбъект.Дата);
	ЗапросПоНоменклатуре.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.СсылкаНаОбъект);
	//ЗапросПоНоменклатуре.УстановитьПараметр("Товары", СписокНоменклатуры);
	
	Результат = ЗапросПоНоменклатуре.Выполнить();
	
	Если не Результат.Пустой() Тогда
	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.НачатьАвтогруппировкуСтрок();

	ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		
		//ОбластьНоменклатура.Параметры.Номенклатура = ВыборкаНоменклатура.КоличествоОстаток;
	
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());

		ВыборкаСклад = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаСклад.Следующий() Цикл
			
			ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
			
			ТабДокумент.Вывести(ОбластьСклад, ВыборкаСклад.Уровень());

		КонецЦикла;
			
	КонецЦикла;

	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();

	КонецЕсли;

	//ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Отчет по комплектующим к дискам
	
	ЗапросПроверка = Новый Запрос;
	
	ЗапросПроверка.Текст="ВЫБРАТЬ
	                     |	Номенклатура,
	                     |	Комплектующая
	                     |ИЗ
	                     |	РегистрСведений.КомплектующиеНоменклатуры 
						 | ГДЕ Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура ИЗ Документ.ЗаказПокупателя.Товары ГДЕ Ссылка=&ТекущийДокумент) И Номенклатура В ИЕРАРХИИ(&Диски)";
						 
	
	ЗапросПроверка.УстановитьПараметр("Диски",Справочники.Номенклатура.НайтиПоКоду("0001752"));					 
	ЗапросПроверка.УстановитьПараметр("ТекущийДокумент",ВыборкаПоДокументам.СсылкаНаОбъект);
	
	Результат=ЗапросПроверка.Выполнить();					 
	Если Результат.Пустой() Тогда // не выводим шпаргалку по комплектующим
		Продолжить;
	КонецЕсли;	
						 
	
	
	ВыводитьОстаткиСРазбивкойПоСкладам=Истина;
	
 ЗапросОстатки= Новый Запрос;
 ЗапросОстатки.Текст="ВЫБРАТЬ 
|Номенклатура, Склад,КоличествоОстаток 
|ИЗ
|РегистрНакопления.ТоварыНаСкладах.Остатки(
|					&КонецПериода,
|					(НЕ Склад.Транзитный	И НЕ Склад.ЗапретитьИспользование) И 
|Номенклатура  В (ВЫБРАТЬ РАЗЛИЧНЫЕ Комплектующая	ИЗ	РегистрСведений.КомплектующиеНоменклатуры)						
|)
|УПОРЯДОЧИТЬ ПО Номенклатура.Наименование,Склад.Наименование" ;

ЗапросОстатки.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДата()));
ТаблицаОстаткиПоСкладам=ЗапросОстатки.Выполнить().Выгрузить();

	
	
	ЗапросКомплекты=Новый Запрос;
	
	ЗапросКомплекты.Текст=	
	"ВЫБРАТЬ
|		КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
|		КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
|		ЕСТЬNULL(ТоварыНаСкладахОстаткиНоменклатура.КоличествоОстаток, 0) КАК ОстатокКомплект,
|		ВЫРАЗИТЬ (ЕСТЬNULL(ТоварыНаСкладахОстаткиКомплектующая.КоличествоОстаток, 0)/КомплектующиеНоменклатуры.Количество КАК ЧИСЛО(15,2)) ОстатокКомплектующая
|		ПОМЕСТИТЬ ВТ_КОМПЛЕКТЫ		
|	ИЗ
|		(ВЫБРАТЬ
|			КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
|			КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
|			КомплектующиеНоменклатуры.Количество
|		ИЗ
|			РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
|		ГДЕ
|			КомплектующиеНоменклатуры.Номенклатура В ИЕРАРХИИ(&Диски)) КАК КомплектующиеНоменклатуры
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
|				&КонецПериода,
|					(НЕ Склад.Транзитный)
|						И (НЕ Склад.ЗапретитьИспользование)) КАК ТоварыНаСкладахОстаткиНоменклатура
|			ПО КомплектующиеНоменклатуры.Номенклатура = ТоварыНаСкладахОстаткиНоменклатура.Номенклатура
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
|					&КонецПериода,
|					(НЕ Склад.Транзитный)
|						И (НЕ Склад.ЗапретитьИспользование)) КАК ТоварыНаСкладахОстаткиКомплектующая
|			ПО КомплектующиеНоменклатуры.Комплектующая = ТоварыНаСкладахОстаткиКомплектующая.Номенклатура

|;

|ВЫБРАТЬ
|  А.Комплект,
|  А.Комплектующая,
|  СРЕДНЕЕ(А.ОстатокКомплект)  ОстатокКомплект, 
| // МИНИМУМ (А.ОстатокКомплектующая)  ОстатокКомплектующая,
|  СРЕДНЕЕ (А.ОстатокКомплектующая)  ОстатокКомплектующая,
|  МИНИМУМ(А.ОстатокМатериал)  ОстатокМатериал
| ПОМЕСТИТЬ ВТ_ПОЛНЫЙСПИСОК
|  ИЗ
|  
|(ВЫБРАТЬ Комплекты1.Номенклатура Комплект,
|		Комплекты1.Комплектующая Комплектующая,
|		Комплекты2.Комплектующая,
|		Комплекты1.ОстатокКомплект,    // остаток готовая продукция
|		Комплекты1.ОстатокКомплектующая, // остаток полуфабрикат
|		ЕстьNULL(Комплекты2.ОстатокКомплектующая,0) ОстатокМатериал  // остаток материал
|ИЗ	ВТ_КОМПЛЕКТЫ Комплекты1	
|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КОМПЛЕКТЫ Комплекты2
|ПО  Комплекты1.Комплектующая=Комплекты2.Номенклатура ) А
|//ГДЕ А.Комплект=&Комплект
|СГРУППИРОВАТЬ ПО А.Комплект, А.Комплектующая

|;

|ВЫБРАТЬ 
|  Комплект,
|  Комплектующая,
|  ОстатокКомплект,
|  ОстатокКомплектующая+ОстатокМатериал ОстатокКомплектующая
|  ПОМЕСТИТЬ ВТ_КОМПЛЕКТУЮЩИЕ
|  ИЗ
|  ВТ_ПОЛНЫЙСПИСОК
|  ГДЕ Комплект НЕ В (ВЫБРАТЬ РАЗЛИЧНЫЕ Комплектующая ИЗ РегистрСведений.КомплектующиеНоменклатуры)
|	
| ;
| 
| ВЫБРАТЬ 
| Комплект.Код Код,
| Комплект,
| СРЕДНЕЕ (ОстатокКомплект)+МИНИМУМ (ОстатокКомплектующая) МожноСобратьКоличество
| 
| ИЗ
| ВТ_КОМПЛЕКТУЮЩИЕ
| СГРУППИРОВАТЬ ПО Комплект 
| ИМЕЮЩИЕ СРЕДНЕЕ (ОстатокКомплект)+МИНИМУМ (ОстатокКомплектующая)>0
| УПОРЯДОЧИТЬ ПО  Комплект.Наименование ";

ЗапросКомплекты.УстановитьПараметр("Диски", Справочники.Номенклатура.НайтиПоКоду("0001752"));
ЗапросКомплекты.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДата()));

ТаблицаКомплекты=ЗапросКомплекты.Выполнить().Выгрузить();


	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ МИНИМУМ(НомерСтроки) НомерСтроки,Номенклатура
	|ПОМЕСТИТЬ ВТ_ТабЧастьНоменклатура
	|ИЗ Документ.ЗаказПокупателя.Товары ГДЕ Ссылка=&ТекущийДокумент 
	| СГРУППИРОВАТЬ ПО Номенклатура
	|
	| ;
	|ВЫБРАТЬ
	|	КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	|	КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
	|	ЕСТЬNULL(ТоварыНаСкладахОстаткиНоменклатура.КоличествоОстаток, 0) КАК ОстатокКомплект,
	|	ЕСТЬNULL(ТоварыНаСкладахОстаткиКомплектующая.КоличествоОстаток, 0) КАК ОстатокКомплектующая
	|ПОМЕСТИТЬ ВТ_КОМПЛЕКТЫ
	|ИЗ
	|	(ВЫБРАТЬ
	|		КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	|		КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
	|		КомплектующиеНоменклатуры.Количество КАК Количество
	|	ИЗ
	|		РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	|	ГДЕ
	|		КомплектующиеНоменклатуры.Номенклатура В ИЕРАРХИИ(&Диски)) КАК КомплектующиеНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&КонецПериода,
	|				(НЕ Склад.Транзитный)
	|					И (НЕ Склад.ЗапретитьИспользование)) КАК ТоварыНаСкладахОстаткиНоменклатура
	|		ПО КомплектующиеНоменклатуры.Номенклатура = ТоварыНаСкладахОстаткиНоменклатура.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&КонецПериода,
	|				(НЕ Склад.Транзитный)
	|					И (НЕ Склад.ЗапретитьИспользование)) КАК ТоварыНаСкладахОстаткиКомплектующая
	|		ПО КомплектующиеНоменклатуры.Комплектующая = ТоварыНаСкладахОстаткиКомплектующая.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.Комплект.Код Код,
	|	ЕстьNULL (ВТ_ТабЧастьНоменклатура.НомерСтроки,1000) НомерСтроки,
	|	А.Комплект КАК Комплект,
	|	А.Комплектующая КАК Комплектующая,
	|	А.Материал,
	|	А.ОстатокКомплект КАК ОстатокКомплект,
	|	А.ОстатокКомплектующая КАК ОстатокКомплектующая,
	|	А.ОстатокМатериал КАК ОстатокМатериал
	|ИЗ
	|	(ВЫБРАТЬ
	|		Комплекты1.Номенклатура КАК Комплект,
	|		Комплекты1.Комплектующая КАК Комплектующая,
	|		Комплекты2.Комплектующая КАК Материал,
	|		Комплекты1.ОстатокКомплект КАК ОстатокКомплект,
	|		Комплекты1.ОстатокКомплектующая КАК ОстатокКомплектующая,
	|		ЕСТЬNULL(Комплекты2.ОстатокКомплектующая, 0) КАК ОстатокМатериал
	|	ИЗ
	|		ВТ_КОМПЛЕКТЫ КАК Комплекты1
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КОМПЛЕКТЫ КАК Комплекты2
	|			ПО Комплекты1.Комплектующая = Комплекты2.Номенклатура) КАК А
	|		ЛЕВОЕ СОЕДИНЕНИЕ  ВТ_ТабЧастьНоменклатура
	|		ПО А.Комплект=ВТ_ТабЧастьНоменклатура.Номенклатура
	|ГДЕ
	|	(НЕ А.Комплект В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ Комплектующая
	|				ИЗ
	|					РегистрСведений.КомплектующиеНоменклатуры)
	| И А.Комплект В (ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура
	|ИЗ Документ.ЗаказПокупателя.Товары ГДЕ Ссылка=&ТекущийДокумент )
	|)
	|
	|УПОРЯДОЧИТЬ ПО  ЕстьNULL(ВТ_ТабЧастьНоменклатура.НомерСтроки,1000),
	|	А.Комплект.Наименование,А.Комплектующая.Наименование
	|ИТОГИ
	|	СРЕДНЕЕ(НомерСтроки),
	|	СРЕДНЕЕ(ОстатокКомплект),
	|	МИНИМУМ(ОстатокКомплектующая),
	|	МИНИМУМ(ОстатокМатериал)
	|ПО
	|	Комплект,
	|	Комплектующая";

	Запрос.УстановитьПараметр("Диски", Справочники.Номенклатура.НайтиПоКоду("0001752"));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.СсылкаНаОбъект);

	
	Результат = Запрос.Выполнить();

	//ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//ОбластьЗаголовок.Параметры.КонецПериода= Формат(КонДата,"ДФ=dd.MM.yyyy");
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("Шапка3");
	
	ОбластьКомплект = Макет.ПолучитьОбласть("Комплект");
	ОбластьКомплектующая = Макет.ПолучитьОбласть("Комплектующая");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	
	//ТабДок.Вывести(ОбластьЗаголовок);
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	ТабДокумент.НачатьАвтогруппировкуСтрок();

	ВыборкаКомплект = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
     
	Пока ВыборкаКомплект.Следующий() Цикл
		ОбластьКомплект.Параметры.Заполнить(ВыборкаКомплект);   // ОстатокКомплект не выводим
		СтрокаКомплект=ТаблицаКомплекты.Найти(ВыборкаКомплект.Комплект.Код,"Код");
		//Если СтрокаКомплект<>Неопределено И СтрокаКомплект.МожноСобратьКоличество>0 Тогда
		//	ОбластьКомплект.Параметры.КоличествоМожноСобрать=СтрокаКомплект.МожноСобратьКоличество ;
		//Иначе
		//	ОбластьКомплект.Параметры.КоличествоМожноСобрать=0;
		//КонецЕсли;	

		//Если ВыборкаКомплект.НомерСтроки<1000 Тогда
		//ОбластьКомплект.Параметры.Комплект=Строка(ВыборкаКомплект.НомерСтроки)+"."+ВыборкаКомплект.Комплект.Код+"."+Строка(ВыборкаКомплект.Комплект);
		//КонецЕсли;

		ТабДокумент.Вывести(ОбластьКомплект, ВыборкаКомплект.Уровень());
		
		ВыборкаКомплектующая = ВыборкаКомплект.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаКомплектующая.Следующий() Цикл
			ОбластьКомплектующая.Параметры.Заполнить(ВыборкаКомплектующая);
			ОбластьКомплектующая.Параметры.Код=ВыборкаКомплектующая.Комплектующая.Код;
			//ОбластьКомплектующая.Параметры.Комплектующая=ВыборкаКомплектующая.Комплектующая.Код+"."+Строка(ВыборкаКомплектующая.Комплектующая);
			ТабДокумент.Вывести(ОбластьКомплектующая, ВыборкаКомплектующая.Уровень());
			
			// Выводим остатки по складам
			Если ВыводитьОстаткиСРазбивкойПоСкладам Тогда
				СтрокиПоСкладам=ТаблицаОстаткиПоСкладам.НайтиСтроки(Новый Структура("Номенклатура",ВыборкаКомплектующая.Комплектующая));
				Если СтрокиПоСкладам<>Неопределено И СтрокиПоСкладам.Количество()>0 Тогда
					Для каждого СтрокаСклад ИЗ СтрокиПоСкладам Цикл
					ОбластьСклад = Макет.ПолучитьОбласть("СтрокаСклад3");
					ОбластьСклад.Параметры.Склад= СтрокаСклад.Склад;
					ОбластьСклад.Параметры.ОстатокКомплектующая= СтрокаСклад.КоличествоОстаток;
					ОбластьСклад.Параметры.ОстатокМатериал=0;
					ТабДокумент.Вывести(ОбластьСклад, 3);
					КонецЦикла;
				КонецЕсли;	
	        КонецЕсли;
				

			

			ВыборкаДетали = ВыборкаКомплектующая.Выбрать();

			Пока ВыборкаДетали.Следующий() Цикл
				Если Строка(ВыборкаДетали.Материал)="" Тогда Продолжить КонецЕсли;
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
				ОбластьДетальныхЗаписей.Параметры.Код=ВыборкаДетали.Материал.Код;
				//ОбластьДетальныхЗаписей.Параметры.Материал=ВыборкаДетали.Материал.Код+"."+Строка(ВыборкаДетали.Материал);
				ТабДокумент.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
				
			// Выводим остатки по складам
			Если ВыводитьОстаткиСРазбивкойПоСкладам Тогда
				СтрокиПоСкладам=ТаблицаОстаткиПоСкладам.НайтиСтроки(Новый Структура("Номенклатура",ВыборкаДетали.Материал));
				Если СтрокиПоСкладам<>Неопределено И СтрокиПоСкладам.Количество()>0 Тогда
					Для каждого СтрокаСклад ИЗ СтрокиПоСкладам Цикл
					ОбластьСклад = Макет.ПолучитьОбласть("СтрокаСклад3");
					ОбластьСклад.Параметры.Склад= СтрокаСклад.Склад;
					ОбластьСклад.Параметры.ОстатокМатериал= СтрокаСклад.КоличествоОстаток;
					ОбластьСклад.Параметры.ОстатокКомплектующая=0;
					ТабДокумент.Вывести(ОбластьСклад, 4);
					КонецЦикла;
				КонецЕсли;	
	        КонецЕсли;
				
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	
КонецЦикла;

	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()
