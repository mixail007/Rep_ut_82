Функция Печать() Экспорт
	
	ТабДокумент = ПечатьПоЗаказуПокупателя();
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет; 
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;
			
КонецФункции // Печать

Функция ПечатьПоЗаказуПокупателя()
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(ПровереннаяНагрузкаДисков.ПрошедшаяНагрузка) КАК ПрошедшаяНагрузка,
		|	ПровереннаяНагрузкаДисков.Номенклатура
		|ПОМЕСТИТЬ НАгрузка
		|ИЗ
		|	РегистрСведений.ПровереннаяНагрузкаДисков КАК ПровереннаяНагрузкаДисков
		|
		|СГРУППИРОВАТЬ ПО
		|	ПровереннаяНагрузкаДисков.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Объект,
		|	ЗначенияСвойствОбъектов.Значение
		|ПОМЕСТИТЬ Заводы
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Свойство = &Завод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Объект,
		|	ЗначенияСвойствОбъектов.Значение
		|ПОМЕСТИТЬ минНагрузки
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Свойство = &МинНагрузка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПеремещениеТоваровТовары.Номенклатура.Код КАК Код,
		|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(НАгрузка.ПрошедшаяНагрузка, 0) КАК ПоИспытаниям,
		|	Заводы.Значение КАК Завод,
		|	ЕСТЬNULL(минНагрузки.Значение, 0) КАК МинНагрузка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НАгрузка.ПрошедшаяНагрузка, 0) < ЕСТЬNULL(минНагрузки.Значение, 0)
		|			ТОГДА ЕСТЬNULL(НАгрузка.ПрошедшаяНагрузка, 0)
		|		ИНАЧЕ ЕСТЬNULL(минНагрузки.Значение, 0)
		|	КОНЕЦ КАК НагрузкаПечать,
		|	ПеремещениеТоваровТовары.Количество
		|ИЗ
		|	Документ."+?(ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ЗаказПокупателя"),"ЗаказПокупателя","ПеремещениеТоваров")+".Товары КАК ПеремещениеТоваровТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ НАгрузка КАК НАгрузка
		|		ПО ПеремещениеТоваровТовары.Номенклатура = НАгрузка.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Заводы КАК Заводы
		|		ПО ПеремещениеТоваровТовары.Номенклатура = Заводы.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ минНагрузки КАК минНагрузки
		|		ПО ПеремещениеТоваровТовары.Номенклатура = минНагрузки.Объект
		|ГДЕ
		|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
		|	И ПеремещениеТоваровТовары.Номенклатура.ВидТовара = &ВидТовара
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПеремещениеТоваровТовары.НомерСтроки";
		
		Запрос.УстановитьПараметр("Завод", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90185"));
		Запрос.УстановитьПараметр("МинНагрузка", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90250"));

		
		Запрос.УстановитьПараметр("ВидТовара", Перечисления.ВидыТоваров.Диски);
    Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);                                  
	Результат = Запрос.Выполнить();                                                                        

	ВыборкаДетальныеЗаписи = Результат.Выгрузить();
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(Шапка);
	Областьстроки = Макет.ПолучитьОбласть("Строка");
	//ОбластьКартинка = Макет.ПолучитьОбласть("строка");
		
	Для каждого стр из ВыборкаДетальныеЗаписи Цикл
			ЗаполнитьЗначенияСвойств(Областьстроки.Параметры, стр); 
			
			набор = РегистрыСведений.ПровереннаяНагрузкаДисков.СоздатьНаборЗаписей();
			набор.Отбор.Номенклатура.Установить(стр.Номенклатура);
			набор.Прочитать();
			
			строкаНагрузка = "";
			строкаПартия = "";
			
			Для каждого стр11 из Набор Цикл
				
				строкаНагрузка = строкаНагрузка + Строка(стр11.ПрошедшаяНагрузка) + Символы.ПС;
				строкаПартия = строкаПартия + Строка(стр11.НомерПартии) + Символы.ПС;
				
			КонецЦикла;
			
			Областьстроки.Параметры.поИспытаниям = строкаНагрузка;
			Областьстроки.Параметры.НомерПартии = строкаПартия;
			
			ФайлПустаяКартинка=ПолучитьФайлССервера("http://photo.yst.ru/nopic_tyre_s.png");
			Областьстроки.Рисунки.Очистить();
			АдресКартинки = ПолучитьАдресКартинкиТовара(стр.Номенклатура);
			Картинка = неопределено;
			Если АдресКартинки<>"" и АдресКартинки <> неопределено тогда
				ФайлКартинки = ПолучитьФайлССервера(АдресКартинки);
				Если ФайлКартинки<>"" тогда				
					Картинка = неопределено;
					Если АдресКартинки<>"" и АдресКартинки <> неопределено тогда
						Картинка = Новый Картинка(ПолучитьФайлССервера(АдресКартинки));
						Если  Картинка = Неопределено Тогда
							Картинка = Новый Картинка(ФайлПустаяКартинка);
						КонецЕсли;	
						ФотоТовара = Областьстроки.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
						ФотоТовара.Верх = 0;
						ФотоТовара.Лево = 0;
						ФотоТовара.РазмерКартинки = РазмерКартинки.Пропорционально;
						ФотоТовара.Картинка = Картинка;
						ФотоТовара.Расположить(Областьстроки.Область(1, 2, 1, 1));
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			//ТабДокумент.Присоединить(ОбластьКартинка);
			ТабДокумент.Вывести(Областьстроки);

		
		
	КонецЦикла;
    Итого = Макет.ПолучитьОбласть("Итого");
	Итого.Параметры.итого = СсылкаНаОбъект.Товары.Итог("Количество");
	ТабДокумент.Вывести(Итого);

Возврат ТабДокумент;	
	
КонецФункции