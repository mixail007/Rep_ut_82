Функция Печать() Экспорт
	
	Если Не Метаданные.Имя = "УправлениеТорговлей" Тогда
		Сообщить("Печатная форма предназначена для использования в конфигурации ""Управление торговлей""", СтатусСообщения.Внимание);
	КонецЕсли;
	СписокРеализаций = Новый СписокЗначений;
	Для каждого стр из СсылкаНаОбъект.ЗаказыПокупателей Цикл
		//Если ЗначениеЗаполнено(стр.Реализация) Тогда
			СписокРеализаций.Добавить(стр.ЗаказПокупателя);
		//КонецЕсли;
	КонецЦикла;
	
	Возврат ПечатьРеализации(СписокРеализаций);
	
КонецФункции // Печать


Функция ПечатьРеализации( Регистратор) Экспорт
	
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЗаказПокупателя", Регистратор);
	Запрос.УстановитьПараметр("Крышки", Справочники.Номенклатура.НайтиПоКоду("0080004"));
	СписокПроизводителей = Новый СписокЗначений;
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3333"));
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3400"));
	Запрос.УстановитьПараметр("СписокПроизводителей", СписокПроизводителей);

	тип = СсылкаНаОбъект.Метаданные().Имя;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	А.Номенклатура,
	             |	А.Комплектующая КАК Комплектующая,
	             |	А.Комплектующая.Код КАК Код,
	             |	А.Комплектующая.КодСБИС КАК КодСБИС,
	             |	МАКСИМУМ(А.КоличествоОстаток) КАК Остаток,
	             |	А.КоличествоЗаказано КАК Количество,
	             |	А.Ссылка КАК Ссылка
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	             |		КомплектующиеНоменклатуры.Комплектующая.Код КАК Код,
	             |		КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
	             |		КомплектующиеНоменклатуры.Комплектующая.КодСБИС КАК КомплектующаяКодСБИС,
	             |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	             |		ЗаказПокупателяТовары.Количество КАК КоличествоЗаказано,
	             |		ЗаказПокупателяТовары.Ссылка КАК Ссылка
	             |	ИЗ
	             |		Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	             |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |				КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	             |				КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая
	             |			ИЗ
	             |				РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	             |			ГДЕ
	             |				КомплектующиеНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	             |				И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Крышки)) КАК КомплектующиеНоменклатуры
	             |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, ) КАК ТоварыНаСкладахОстатки
	             |				ПО КомплектующиеНоменклатуры.Комплектующая = ТоварыНаСкладахОстатки.Номенклатура
	             |			ПО ЗаказПокупателяТовары.Номенклатура = КомплектующиеНоменклатуры.Номенклатура
	             |	ГДЕ
	             |		ЗаказПокупателяТовары.Ссылка В(&ЗаказПокупателя)
	             |		И ЗаказПокупателяТовары.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК А
	             |ГДЕ
	             |	НЕ А.Комплектующая ЕСТЬ NULL 
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	А.Номенклатура,
	             |	А.Комплектующая,
	             |	А.Комплектующая.Код,
	             |	А.Комплектующая.КодСБИС,
	             |	А.Ссылка,
	             |	А.КоличествоЗаказано
	             |ИТОГИ
	             |	СУММА(Количество)
	             |ПО
	             |	Ссылка,
	             |	Комплектующая";
	
	
Результат=Запрос.Выполнить();
ТаблицаПоДокументам=Результат.Выгрузить();
//ТаблицаПоДокументам.Свернуть("Ссылка");
СписокДокументов = СсылкаНаОбъект.ЗаказыПокупателей.ВыгрузитьКолонку("ЗаказПокупателя");
//ТаблицаДисковПоАлфавиту.Сортировать("НоменклатураНаименование");

ВыборкаДискиПоКрышкам=Результат.Выбрать();
 
 
//ЗапросКрышки=Новый Запрос;
//ЗапросКрышки.МенеджерВременныхТаблиц=Запрос.МенеджерВременныхТаблиц;
//ЗапросКрышки.Текст="ВЫБРАТЬ * ИЗ ВТ_ТаблицаКрышек";
//ТаблицаКрышки=ЗапросКрышки.Выполнить().Выгрузить();
////ТаблицаКрышки.ВыбратьСтроку();

//ЗапросДискиБезКрышек=Новый Запрос;
//ЗапросДискиБезКрышек.МенеджерВременныхТаблиц=Запрос.МенеджерВременныхТаблиц;
//ЗапросДискиБезКрышек.Текст="ВЫБРАТЬ * ИЗ ВТ_ТаблицаДисковБезПривязкиКрышек";
//ТаблицаДискиБезКрышек=ЗапросДискиБезКрышек.Выполнить().Выгрузить();
//ТаблицаДискиБезКрышек.ВыбратьСтроку();
Если тип="ЗаказПокупателя" тогда
ДопЗаголовок=?(ЗначениеЗаполнено(Регистратор.ДатаГотовностиНаборки),Символы.ПС+"Подготовить к "+Регистратор.ДатаГотовностиНаборки+", отнести "+Регистратор.КудаНестиКрышки+" "+?(Регистратор.КудаНестиКрышки="к менеджеру",Регистратор.ДоговорКонтрагента.ОтветственноеЛицо,""),"");
Иначе
ДопЗаголовок="";
КонецЕсли;	

ТабДок=Новый ТабличныйДокумент;
ТабДок.Очистить();

Макет = ПолучитьМакет("ОтчетРеализация");
	//ОбластьКомм= Макет.ПолучитьОбласть("Комментарий");
	//ОбластьКомм.Параметры.Комм=Регистратор.Комментарий;
	//ТабДок.Вывести(ОбластьКомм);

	//ОбластьЗаголовок= Макет.ПолучитьОбласть("Заголовок");
	//
	//ОбластьЗаголовок.Параметры.ЗаголовокДокумента="Заказ покупателя №" +  Регистратор.Номер +" от "+Формат(Регистратор.Дата,"ДФ=dd.MM.yyyy") +". Покупатель: "+Регистратор.Контрагент.Наименование+ДопЗаголовок;
	//ОбластьШапка= Макет.ПолучитьОбласть("Шапка");
	//ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ТабДок.Вывести(ОбластьЗаголовок);
	//
	//ТабДок.Вывести(ОбластьШапка);
	//ОбщееКоличество=0;   ОбщийОстаток = 0;
	// Для каждого ВыборкаДетали ИЗ ТаблицаКрышки  Цикл
	//	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	//	ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
	//	ОбщееКоличество=ОбщееКоличество+ВыборкаДетали.КОличество;
	//	ОбщийОстаток   =ОбщийОстаток + ВыборкаДетали.Остаток;
	//	ТабДок.Вывести(ОбластьДетальныхЗаписей);
	//КонецЦикла;
	//ОбластьПодвалТаблицы.Параметры.Количество=ОбщееКоличество;
	//ОбластьПодвалТаблицы.Параметры.Остаток   =ОбщийОстаток;//+++
	//ТабДок.Вывести(ОбластьПодвалТаблицы);	
	
	
	// Выводим дважды
	
	Для каждого стр из СписокДокументов Цикл
	Если ТаблицаПоДокументам.Найти(стр,"Ссылка") <> Неопределено Тогда
	//ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
	ОбластьЗаголовок= Макет.ПолучитьОбласть("ЗаголовокДиски");	
	ОбластьЗаголовок.Параметры.ЗаголовокДискиБезПривязки=стр.Номер;
	//ОбластьЗаголовок.Параметры.ЗаголовокДокумента=Регистратор.Номер;
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ОбластьШапка1= Макет.ПолучитьОбласть("Шапка1");
	ОбластьПодвалТаблицы1 = Макет.ПолучитьОбласть("ПодвалТаблицы1");
	ТабДок.Вывести(ОбластьШапка1);
	ОбщееКоличество=0;   ОбщийОстаток = 0;
	
	
	ВыборкаДискиПоКрышкам.Сбросить(); 
	
	Пока ВыборкаДискиПоКрышкам.Следующий() Цикл
		Если стр = ВыборкаДискиПоКрышкам.ссылка и (Значениезаполнено(ВыборкаДискиПоКрышкам.Номенклатура) или Значениезаполнено(ВыборкаДискиПоКрышкам.Комплектующая)) Тогда
		// выводим только детальные записи
		Если ВыборкаДискиПоКрышкам.ТипЗаписи()=ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("ДеталиДиски1");
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДискиПоКрышкам);
		ОбластьДетальныхЗаписей.Параметры.Код=ВыборкаДискиПоКрышкам.Номенклатура.Код;
		ОбластьДетальныхЗаписей.Параметры.Номенклатура=ВыборкаДискиПоКрышкам.Номенклатура.Наименование;
		
		ОбщееКоличество=ОбщееКоличество+ВыборкаДискиПоКрышкам.КОличество;
		
		ТабДок.Вывести(ОбластьДетальныхЗаписей);
		Иначе
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали1");
		ОбластьДетальныхЗаписей.Параметры.Номенклатура=ВыборкаДискиПоКрышкам.Комплектующая;
		ОбластьДетальныхЗаписей.Параметры.КодСБИС=ВыборкаДискиПоКрышкам.Комплектующая.КодСБИС;
		ОбластьДетальныхЗаписей.Параметры.Код=ВыборкаДискиПоКрышкам.Комплектующая.Код;
		ОбластьДетальныхЗаписей.Параметры.Количество=ВыборкаДискиПоКрышкам.Количество;
		ТабДок.Вывести(ОбластьДетальныхЗаписей);
	    КонецЕсли;
	    КонецЕсли;
	КонецЦикла; 
	
	//Для каждого СтрокаДиск ИЗ  ТаблицаДисковПоАлфавиту Цикл
	//	Если ЗначениеЗаполнено(СтрокаДиск.Номенклатура) Тогда
	//	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали1");
	//	ОбластьДетальныхЗаписей.Параметры.Заполнить(СтрокаДиск);
	//	ОбщееКоличество=ОбщееКоличество+СтрокаДиск.КОличество;
	//	
	//	ТабДок.Вывести(ОбластьДетальныхЗаписей);
	//	КонецЕсли;
	//КонецЦикла;	
	
    ОбластьПодвалТаблицы1.Параметры.Количество  = ОбщееКоличество;
	//ОбластьПодвалТаблицы.Параметры.Остаток     =ОбщийОстаток;//+++
	ТабДок.Вывести(ОбластьПодвалТаблицы1);
	КонецЕсли;	
	КонецЦикла; 

	
	
	// Диски без привязки к крышкам
	
		
		
	//Если ТаблицаДискиБезКрышек.Количество()>0 Тогда
	ОбластьЗаголовок= Макет.ПолучитьОбласть("НовыйПодвал");	
			
	ТабДок.Вывести(ОбластьЗаголовок);
	//	Для каждого Выборка ИЗ ТаблицаДискиБезКрышек Цикл
	//		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("ДеталиДиски");
	//		ОбластьДетальныхЗаписей.Параметры.Заполнить(Выборка);
	//		ОбластьДетальныхЗаписей.Параметры.Код=Выборка.Номенклатура.Код;
	//		ОбластьДетальныхЗаписей.Параметры.Количество=Выборка.Количество;
	//		ТабДок.Вывести(ОбластьДетальныхЗаписей);
	//	КонецЦикла;	
	//	
	//КонецЕсли;	
	ТабДок.ВерхнийКолонтитул.Выводить=Истина;
	ТабДок.ВерхнийКолонтитул.ТекстВЦентре ="[&НомерСтраницы]";
    Возврат ТабДок;
	КонецФункции