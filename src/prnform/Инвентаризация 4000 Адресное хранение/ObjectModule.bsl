

//--------------Общая выборка для любого документа с ТЧ  ТоварыАдресноеХранение ----------------------------
// получает съитоженную выборку по Номенклатуре
функция ПолучитьВыборкуТоваровАдресноеХранение()
	
	
	типДок = СсылкаНаОбъект.Метаданные().Имя;
	
	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	ЗапросПоТоварам.УстановитьПараметр("ПустойСклад", справочники.склады.ПустаяСсылка());
		ЗапросПоТоварам.текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		                        |	Инвентаризация.НомерСтроки КАК НомерСтроки,
		                        |	Инвентаризация.Номенклатура КАК Номенклатура,
		                        |	Инвентаризация.АдресХранения КАК АдресХранения,
		                        |	Инвентаризация.Количество КАК Количество,
		                        |	Инвентаризация.КоличествоУчет КАК КоличествоУчет,
		                        |	Инвентаризация.Количество - Инвентаризация.КоличествоУчет КАК Дельта
		                        |ИЗ
		                        |	Документ.ИнвентаризацияТоваровНаСкладе.ТоварыАдресноеХранение КАК Инвентаризация
		                        |ГДЕ
		                        |	Инвентаризация.Ссылка = &ТекущийДокумент
		                        |
		                        |УПОРЯДОЧИТЬ ПО
							//+++ 02.08.2014	
		                   //     |	Инвентаризация.АдресХранения.Порядок
						    |	Инвентаризация.НомерСтроки
							
		                        |ИТОГИ
		                        |	МИНИМУМ(НомерСтроки),
		                        |	СУММА(Количество),
		                        |	СУММА(КоличествоУчет),
		                        |	СУММА(Дельта)
		                        |ПО
		                        |	ОБЩИЕ,
		                        |	АдресХранения
		                        |АВТОУПОРЯДОЧИВАНИЕ";

		
	ВыборкаСтрок = ЗапросПоТоварам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	возврат ВыборкаСтрок;

КонецФункции


Функция Печать() экспорт
	
	ДатаПечати = СсылкаНаОбъект.МоментВремени(); //ТекущаяДата();//+++ это очень важно!!!
	
	//Склад5000  = справочники.Склады.НайтиПоНаименованию("5000");	
   	
		ВыборкаСтрокИтого = ПолучитьВыборкуТоваровАдресноеХранение();
		ЕстьАдресФакт = истина; // флаг для выборки из выборки...
	

	Макет = ПолучитьМакет("АдресноеХранение");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_АдресноеХранение";

	// Выводим общие реквизиты шапки
	СведенияОПокупателе = СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, ДатаПечати);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ДокументПредставление  = строка(СсылкаНаОбъект.Ссылка);
	ОбластьМакета.Параметры.Организация   = ОписаниеОрганизации(СведенияОПокупателе);
	//-----------должны быть такие реквизиты во всех документах!--------------------------
	ОбластьМакета.Параметры.Подразделение = СокрЛП(СсылкаНаОбъект.Подразделение);
	ОбластьМакета.Параметры.Комментарий   = СокрЛП(СсылкаНаОбъект.Комментарий);
	ТабДокумент.Вывести(ОбластьМакета);
    	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	СтрокШапки      = 9;
	СтрокНаСтранице = 40;
	СтрокПодвала    = 6;
	НомерСтраницы   = 1;
	
	

	// Инициализация итогов в документе
	ИтогоКоличество     = 0;
	ИтогоКоличествоФакт = 0;
	Ном              = СтрокШапки;
	НомерСтрокиПМ = 0;
    КолНаСтранице 		= 0;
	КолНаСтраницеФакт	= 0;
	КолНаСтраницеДельта = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	ОбластьМакета2 = Макет.ПолучитьОбласть("Строка2");
	
	ОбластьМакетаИтого = Макет.ПолучитьОбласть("Итого");
	
	ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
	размер = "";
	
	ВыборкаСтрокИтого.следующий();
	ОбластьМакетаИтого.Параметры.Заполнить(ВыборкаСтрокИтого);
	//ЗаполнитьЗначенияСвойств(ОбластьИтого.Параметры, ВыборкаСтрокИтого);
	
	ВыборкаСтрокАдреса = ВыборкаСтрокИтого.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	КоличествоСтрок = ВыборкаСтрокАдреса.Количество();
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;	   
	
	//====================Основной цикл====================================================
	НомАдр = 1;
	Пока ВыборкаСтрокАдреса.Следующий() Цикл
			
	Ном = Ном + 1; 
		Если ЗначениеНеЗаполнено(ВыборкаСтрокАдреса.АдресХранения) Тогда
			Сообщить("В строке №"+строка(ВыборкаСтрокАдреса.НомерСтроки)+" - не заполнено значение Адреса!", СтатусСообщения.Важное);
		//	Продолжить;
		КонецЕсли;
		
		//+++ 02.08.2014
		ОбШтрихКодТекст=СокрЛП(ВыборкаСтрокАдреса.АдресХранения.Код);
		 Если стрДлина(ОбШтрихКодТекст)<7 тогда
			 ОбШтрихКодТекст = "1"+ОбШтрихКодТекст;
		 КонецЕсли;
		 
Если НомАдр%2=1 тогда
		 ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокАдреса);
		//--------------------------штрих-код Адреса = EAN8  = 1 + код + кс -------------------
		ОбШтрихКодСообщение = ОбШтрихКодТекст;
		попытка
		ОбШтрихКодСообщение = ОбШтрихКодСообщение + КонтрольныйСимволEAN(ОбШтрихКодСообщение, 8);
		ОбШтрихКод=ОбластьМакета.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
	    КонецПопытки; 
        ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета1= Макет.ПолучитьОбласть("Строка1");

иначе		
		 ОбластьМакета2.Параметры.Заполнить(ВыборкаСтрокАдреса);
		//--------------------------штрих-код Адреса = EAN8  = 1 + код + кс -------------------
		ОбШтрихКодСообщение = ОбШтрихКодТекст;
		попытка
			ОбШтрихКодСообщение = ОбШтрихКодСообщение + КонтрольныйСимволEAN(ОбШтрихКодСообщение, 8);
		ОбШтрихКод=ОбластьМакета2.Рисунки.ШК2.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
	 	КонецПопытки; 
   	    ТабДокумент.Вывести(ОбластьМакета2);
	    ОбластьМакета1= Макет.ПолучитьОбласть("Строка3");

КонецЕсли;
НомАдр = НомАдр + 1;
	
		
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		//ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		//Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		// или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
		//		Ном = 3;
		//	НомерСтраницы = НомерСтраницы + 1;
		//	
		//		 ПодвалСтрок.Параметры.ИтогоПоСтранице = Формат(КолНаСтранице,"ЧДЦ=0; ЧГ=0");
		//	 ПодвалСтрок.Параметры.ИтогоПоСтраницеФакт = Формат(КолНаСтраницеФакт,"ЧДЦ=0; ЧГ=0");
		//	ТабДокумент.Вывести(ПодвалСтрок);
		//		КолНаСтранице = 0;
		//	КолНаСтраницеФакт = 0;
		//	
		//	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//	
		//	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница N " + НомерСтраницы;
		//	ТабДокумент.Вывести(ЗаголовокТаблицы);
		//	
		//КонецЕсли;

		


	 //---------------------------------------------------------------------------------------------
	 ВыборкаСтрокТовары = ВыборкаСтрокАдреса.выбрать();
	 
	 обнулятьКоличества = (ВыборкаСтрокТовары.Количество()=1); // чтобы не двоила..
	
	 пока ВыборкаСтрокТовары.Следующий() цикл
		 
		 ном = ном+1;
		ОбластьМакета1.Параметры.Заполнить(ВыборкаСтрокТовары);
		 ОбластьМакета1.Параметры.Код = ВыборкаСтрокТовары.Номенклатура.Код;
		 
		 Если обнулятьКоличества тогда   // чтобы не двоила..
			ОбластьМакета1.Параметры.Количество=0;
			ОбластьМакета1.Параметры.КоличествоУчет=0;
			//ОбластьМакета1.Параметры.Дельта=0;
			//ОбластьМакета1.Параметры.НомерСтроки = 0;
		 КонецЕсли;	
		 
		ТабДокумент.Вывести(ОбластьМакета1);

		//КолНаСтраницеФакт = КолНаСтраницеФакт + ВыборкаСтрокТовары.Количество;
		//КолНаСтранице 	  = КолНаСтранице + ВыборкаСтрокТовары.КоличествоУчет;
		//КолНаСтраницеДельта = КолНаСтраницеДельта + ВыборкаСтрокТовары.Количество - ВыборкаСтрокТовары.КоличествоУчет;
	
		////------------------конец страницы-----------------------------
		//Если (Ном % СтрокНаСтранице = 0 )
	//	 или (  (ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)  ) Тогда
	//		Ном = 4;
	//		НомерСтраницы = НомерСтраницы + 1;
	//		
	//		 ПодвалСтрок.Параметры.ИтогоПоСтранице = Формат(КолНаСтранице,"ЧДЦ=0; ЧГ=0");
	//		 ПодвалСтрок.Параметры.ИтогоПоСтраницеФакт =  Формат(КолНаСтраницеФакт,"ЧДЦ=0; ЧГ=0");
	//		 ПодвалСтрок.Параметры.ИтогоПоСтраницеДельта =  Формат(КолНаСтраницеДельта,"ЧДЦ=0; ЧГ=0");
	//		 
	//		 ТабДокумент.Вывести(ПодвалСтрок);
	//			КолНаСтранице = 0;
	//		КолНаСтраницеФакт = 0;
	//		КолНаСтраницеДельта=0;
	//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//		
	//		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница N " + НомерСтраницы;
	//		ТабДокумент.Вывести(ЗаголовокТаблицы);
	//		
	//		//ОбластьМакета.Параметры.Количество = ОбластьМакета.Параметры.Количество - КолНаСтранице;
	//		//КолНаСтранице = 0;
	//		
	//		ОбластьМакета.параметры.Количество = "---";  //промежуточная строка... не нужно общей суммы
	//		ТабДокумент.Вывести( ОбластьМакета );
	//
	//	КонецЕсли;
    	//Ном = Ном + 1;
	 	
	КонецЦикла; //-----------------------------------------------------------
		
				
	КонецЦикла;
  //=======================================================================
  
  ТабДокумент.Вывести(ОбластьМакетаИтого);

	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.ДолжностьСдал = "";
	ОбластьМакета.Параметры.ФИОСдал = "";
	ОбластьМакета.Параметры.ДолжностьПринял = "";
	ОбластьМакета.Параметры.ФИОПринял = "";
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.Защита = истина;
	ТабДокумент.ТолькоПросмотр = истина;
	
	Возврат ТабДокумент;

КонецФункции // Печать()
