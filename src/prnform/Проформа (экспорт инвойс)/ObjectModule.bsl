Функция Печать(НомерДока = "") Экспорт
	
	Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //24.04.2018
		Предупреждение("Нельзя печатать документ по договору со * !",30);
		возврат Неопределено;
	КонецЕсли;	
		
	НомерНаПечать = НомерДока;
	Если Не Метаданные.Имя = "УправлениеТорговлей" Тогда
		//Сообщить("Печатная форма предназначена для использования в конфигурации ""Управление торговлей""", СтатусСообщения.Внимание);
	КонецЕсли;
	
	Если СсылкаНаОбъект.Подразделение.ВЭД Тогда
		Сообщить("Нельзя использовать эту печатную форму!!!", СтатусСообщения.Внимание);
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") или ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя") 
		или ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателяСезонный") Тогда
		Ответ = Вопрос("Вывести с картинками?",РежимДиалогаВопрос.ДаНет);
		Если ответ = КодВозвратаДиалога.Да тогда
			сКартинкой=истина;
		Иначе
			сКартинкой=ложь;
		КонецЕсли;
		Возврат ПечатьДокумента(СсылкаНаОбъект,сКартинкой);
	КонецЕсли;
	
КонецФункции // Печать

Функция ПечатьДокумента(СсылкаНаОбъект,сКартинкой=ложь)
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УпаковочныйЛист_ЭкспортТТ";
	
	ОрганизацияТТ=?(СсылкаНаОбъект.Организация=Справочники.Организации.НайтиПоКоду("00004"),истина,ложь);
	
	ИмяМакета = "КоммерческийИнвойсТТ";
		


	Макет = ПолучитьМакет(ИмяМакета);
	ОбластьШапка        = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	Если сКартинкой тогда
		ОбластьСтрока       = Макет.ПолучитьОбласть("СтрокаСКартинкой");
		ОбластьИтогСтр         = Макет.ПолучитьОбласть("ИтогоСКартинкой");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКартинкой");
	иначе
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
		ОбластьИтогСтр         = Макет.ПолучитьОбласть("ИтогоСтр");
	КонецЕсли;
	
	ОбластьИтог         = Макет.ПолучитьОбласть("Итого");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Документ.Номенклатура.Код КАК Код,
	               |	Документ.Номенклатура КАК Номенклатура,
	               |	Документ.Номенклатура.Производитель КАК Производитель,
	               |	Документ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
				   |	Сумма(Документ.ЕдиницаИзмерения.Вес*Документ.Количество) КАК ЕдиницаИзмеренияВес,
	               |	СУММА(Документ.Количество) КАК Количество,
				   |	СУММА(Документ.Вес) КАК Вес,
	               |	СУММА(Документ.КоличествоМест) КАК КоличествоМест,
	               |	СУММА(Документ.Сумма) КАК Сумма,
	               |	Документ.Цена КАК Цена
	               |ИЗ
	               |	Документ."+?(ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг"),"РеализацияТоваровУслуг",?(ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя"),"ЗаказПокупателя","ЗаказПокупателяСезонный"))+".Товары КАК Документ
	               |ГДЕ
	               |	Документ.Ссылка = &ТекущийДокумент
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Документ.Номенклатура,
	               |	Документ.ЕдиницаИзмерения,
	               |	Документ.Цена,
	               |	Документ.Номенклатура.Код,
	               |	Документ.Номенклатура.Производитель
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПОДСТРОКА(Документ.Номенклатура.НаименованиеПолное, 1, 50)";
	

	ТЗТоваров = Запрос.Выполнить().Выгрузить();
	
	//вывод шапки
	ВидАдресаЮрАнгл = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38846");
	ВидАдресаФактАнгл = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38847");
		
	//ОбластьШапка.Параметры.Номенклатура = СформироватьНаименованиеТовара(ТЗтоваров);
	

		ФактАдресГО = "ROOM2105 QD3417 TREND CENTRE 29-31 CHEUNG LEE STREET CHAIWAN HK";
		ФактАдресПродавца = "ROOM2105 QD3417 TREND CENTRE 29-31 CHEUNG LEE STREET CHAIWAN HK";
	
	Покупатель  = СсылкаНаОбъект.Контрагент;
	СведенияОПокупателе     = СведенияОЮрФизЛице(Покупатель,  СсылкаНаОбъект.Дата);
	
	Грузополучатель  = ?(ЗначениеЗаполнено(СсылкаНаОбъект.Грузополучатель), СсылкаНаОбъект.Грузополучатель,   СсылкаНаОбъект.Контрагент);
	СведенияОГрузополучателе     = СведенияОЮрФизЛице(Грузополучатель,       СсылкаНаОбъект.Дата);
	Если СокрЛП(СсылкаНаОбъект.АдресДоставки)= "" Тогда
		ФактАдресГП = ОписаниеОрганизации(СведенияОГрузополучателе, "ФактическийАдрес,");
		ФактАдресГП = ?(СокрЛП(ФактАдресГП)="", ОписаниеОрганизации(СведенияОГрузополучателе, "ЮридическийАдрес,"), СокрЛП(ФактАдресГП));
	Иначе
		ФактАдресГП = СокрЛП(СсылкаНаОбъект.АдресДоставки);
	КонецЕсли;
	Если ССылкаНаобъект.ДоговорКонтрагента.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
	ОбластьШапка.Параметры.Бик = "BIC 047888670 "; 
	ОбластьШапка.Параметры.РасчетныйСчет = "Acc. 40702810477030004491, SBERBANK";
    иначе
	ОбластьШапка.Параметры.Бик = "SWIFT: SABRRUMM"; 
	//ОбластьШапка.Параметры.РасчетныйСчет = "Acc. 40702840077030000014, SBERBANK";
	ОбластьШапка.Параметры.РасчетныйСчет = "Acc. 40702840377031000014, SBERBANK";
	конецЕсли;
	//грузоотправитель и продавец
	//ОбластьШапка.Параметры.ФактАдресГрузоотправителя = ФактАдресГО;
	//ОбластьШапка.Параметры.ПродавецНаименование = "Tyre Technology Co.,Limited";
	//ОбластьШапка.Параметры.ФактАдресПродавца = ФактАдресПродавца;
	//грузополучатель и покупатель
	ОбластьШапка.Параметры.ПокупательНаименование = СведенияОПокупателе.ПолноеНаименование;
	РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",Покупатель,Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдресаЮрАнгл));
	ОбластьШапка.Параметры.АдресПокупателяАнгл = РегАдреса.Представление;
	//ОбластьШапка.Параметры.ГрузополучательНаименование = СведенияОГрузополучателе.ПолноеНаименование;
	РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",Грузополучатель,Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдресаФактАнгл));
	//ОбластьШапка.Параметры.АдресГрузополучателяАнгл = РегАдреса.Представление;
	
	ОбластьШапка.Параметры.Договор    = СсылкаНаОбъект.ДоговорКонтрагента.Номер+" dtd "+формат(СсылкаНаОбъект.ДоговорКонтрагента.Дата,"ДЛФ=D");
				
	
	//Если НомерНаПечать = "" Тогда
	//	Если СсылкаНаОбъект.НомерФормулаАвто = 0 Тогда
	//		НомерДокумента = ЭтотОбъект.ПолучитьФорму("ВводНомераШинтрейдЯрославль").ОткрытьМодально();
	//	Иначе
	//		НомерДокумента = СтрЗаменить(Строка(СсылкаНаОбъект.НомерФормулаАвто), Символы.НПП,"");
	//	КонецЕсли;
	//Иначе
	//	НомерДокумента = НомерНаПечать;
	//КонецЕсли;
	
	ОбластьШапка.Параметры.Номер = СсылкаНаОбъект.Номер;
	ОбластьШапка.Параметры.ДоговорДата  = Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
	//ОбластьШапка.Параметры.УсловиеПоставки = СсылкаНаОбъект.Сделка.УсловиеПоставкиНаЭкспорт;
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	ВалютаДок = СсылкаНаОбъект.ВалютаДокумента;
	ОбластьШапкаТаблицы.Параметры.ВалПоАнгл = ВалютаДок.Наименование;
	
	Если сКартинкой тогда
		ОбластьШапкаТаблицы.ТекущаяОбласть.ШиринаКолонки = 100/5;//ШиринаКартинки/5;
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	//конец вывод шапки
		
	ИтВесНетто = 0;
	ИтКоличествоМест = 0;
	ИтКомплКоличество = 0;
	НомСтр = 0;
	Если сКартинкой тогда
		ФайлПустаяКартинка=яПолучитьФайлССервера("http://photo.yst.ru/nopic_tyre_s.png");
	КонецЕсли;
	Для Каждого Строка Из ТЗТоваров Цикл
		
		НомСтр = НомСтр+1;
		ОбластьСтрока.Параметры.НомерСтроки = НомСтр;
		ОбластьСтрока.Параметры.Код = Строка.Номенклатура.Код;
		ОбластьСтрока.Параметры.Номенклатура = СтрЗаменить(Строка.Номенклатура.НаименованиеПолное, "Диск","Wheel");
		ОбластьСтрока.Параметры.Количество = Строка.Количество;
		ОбластьСтрока.Параметры.Цена = Строка.Цена;
		ОбластьСтрока.Параметры.Сумма = Строка.Сумма;
		ОбластьСтрока.Параметры.ВесБрутто  = Строка.ЕдиницаИзмеренияВес;
		
		Если сКартинкой тогда
			ОбластьСтрока.Рисунки.Очистить();
			АдресКартинки = ПолучитьАдресКартинкиТовара(Строка.Номенклатура);
			Картинка = неопределено;
			Если АдресКартинки<>"" и АдресКартинки <> неопределено тогда
				ФайлКартинки = яПолучитьФайлССервера(АдресКартинки);
				Если ФайлКартинки<>"" тогда
					//Картинка = Новый Картинка(яПолучитьФайлССервера(АдресКартинки));
					
					Картинка = неопределено;
					Если АдресКартинки<>"" и АдресКартинки <> неопределено тогда
						Картинка = Новый Картинка(яПолучитьФайлССервера(АдресКартинки));
						Если  Картинка = Неопределено Тогда
							Картинка = Новый Картинка(ФайлПустаяКартинка);
						КонецЕсли;	
							ФотоТовара = ОбластьСтрока.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
							ФотоТовара.Верх = 0;
							ФотоТовара.Лево = 0;
							ФотоТовара.РазмерКартинки = РазмерКартинки.Пропорционально;
							ФотоТовара.Картинка = Картинка;
							ФотоТовара.Расположить(ОбластьСтрока.Область(1, 1, 1, 1));
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			ОбластьСтрока.ТекущаяОбласть.ВысотаСтроки = 100;//ВысотаКартинки;
			ОбластьСтрока.ТекущаяОбласть.ШиринаКолонки = 100/5;//ШиринаКартинки/5;
		Иначе
			
		КонецЕсли;
		Если Строка.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
			парам1   = Строка.Номенклатура.Типоразмер;
			ЭтоЛитойДиск = Строка.Номенклатура.ПринадлежитЭлементу(Справочники.Номенклатура.НайтиПоКоду("0001753"));
			ДваВОдном = Строка.КоличествоМест/Строка.Количество;
			//ВесНетто = Строка.ВесБрутто - ВесУпаковки(парам1, ЭтоЛитойДиск) * Строка.Количество * ?(ДваВОдном=0,1,ДваВОдном); 
			//не опнятно как рассчитывать вес, если кол.мест не равно 0
			ВесНетто = Строка.ЕдиницаИзмеренияВес - ВесУпаковки(парам1, ЭтоЛитойДиск) * Строка.Количество; 
		Иначе
			ВесНетто = Строка.ЕдиницаИзмеренияВес;
		КонецЕсли;
		ОбластьСтрока.Параметры.ВесНетто = ВесНетто;
		ИтВесНетто = ИтВесНетто+ВесНетто;
				
		ТабДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	//Итог
	
	
	ОбластьИтогСтр.Параметры.ИтогКоличество = ТЗТоваров.Итог("Количество");
	ОбластьИтогСтр.Параметры.ИтогВесБрутто= ТЗТоваров.Итог("ЕдиницаИзмеренияВес");
	ОбластьИтогСтр.Параметры.ИтогВесНетто = ИтВесНетто;
	ОбластьИтогСтр.Параметры.ИтогСумма = ТЗТоваров.Итог("Сумма");

	Если сКартинкой тогда
		ОбластьИтогСтр.ТекущаяОбласть.ШиринаКолонки = 100/5;//ШиринаКартинки/5;
	КонецЕсли;

    ТабДокумент.Вывести(ОбластьИтогСтр);

	
	//ОбластьИтог.Параметры.ИтогКоличество = ТЗТоваров.Итог("Количество");
	//ОбластьИтог.Параметры.ИтогСумма = ТЗТоваров.Итог("Сумма");
	ОбластьИтог.Параметры.СуммаПрописью = ЧислоПрописью(ТЗТоваров.Итог("Сумма"),"Л=en_US;ДП=истина")+"/"+ЧислоПрописью(ТЗТоваров.Итог("Сумма"),"Л=ru_RU;ДП=истина");
	//ОбластьИтог.Параметры.ИтогВесБрутто = ТЗТоваров.Итог("Вес");
	//ОбластьИтог.Параметры.ИтогВесБрутто= ИтВесНетто;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
	ОбластьИтог.Параметры.Условиепоставки  =""+ ССылкаНаОбъект.УсловиеПоставкиНаЭкспорт+" "+РегАдреса.Комментарий;
	КонецЕсли;
	//ОбластьИтог.Параметры.ПродавецНаименование="TYRE TECHNOLOGY CO.,LIMITED";
	//ОбластьИтог.Параметры.БанкИАдрес="ACCOUNTING BANK: PING AN BANK CO.,LTD
	//		|ADD: 11/F,NO.5047, ROAD SHENNAN DONG, SHENZHEN,P.R.CHINA
	//		|A/C NO: OSA11013478943301
			//|SWIFT NO: SZDBCNBS";
	
	ТабДокумент.Вывести(ОбластьИтог);
		
//-------------------печати и подписи---------------------------------------
	
		
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОтображатьСетку = Ложь;
	
	Возврат ТабДокумент;
				   
КонецФункции

Функция ПолучитьФайлКартинки(Товар)
	
	ПутьКФотоНаСайте = "http://photo.yst.ru/";
    имяФайлаПусто = ПутьКФотоНаСайте+"nopic_tyre_s.jpg"; //Фото отсутствует
	типФайла = ".png";
	естьФайлМод = ЗначениеЗаполнено(Товар.Модель);
	
		путьККартинкамДисков      = ПутьКФотоНаСайте+"wheels/";
		путьККартинкамШин	      = ПутьКФотоНаСайте+"tires/";
		путьККартинкамАксессуаров = ПутьКФотоНаСайте+"accessories/";
		путьККартинкамРеклама     = ПутьКФотоНаСайте+"reklamnaya_produkciya/";
		путьККартинкамАКБ         = ПутьКФотоНаСайте+"batteries/";    //yst.ru/photos/akb/
		
	
		Если Товар.ВидТовара=Перечисления.ВидыТоваров.Диски тогда
			естьФайлМод = ИСТИНА; // только по моделям!
			путьККартинкамТов         = путьККартинкамДисков; // ДИСКИ
			
			папкаПроизводителя = нрег(Товар.Производитель);
			если найти(папкаПроизводителя, "replica")>0 тогда
				если найти(папкаПроизводителя, "replica td")>0 тогда
				папкаПроизводителя = "top driver";
				иначе
				папкаПроизводителя = "legeartis";
				КонецЕсли;
			КонецЕсли;
			путьККартинкамМоделей     = путьККартинкамДисков+папкаПроизводителя+"/";
			
			//24.03.14 Смирнов для картинки - ТОЛЬКО ДЛЯ ДИСКОВ нужен цвет
			РегСвва=РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
			РегСвва.Отбор.Объект.Установить(Товар);
			РегСвва.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Цвет"));
			РегСвва.Прочитать();
			Если РегСвва.Количество()>0 Тогда
				Цвет = СокрЛП(РегСвва.Получить(0).Значение);
			Иначе
				Цвет="";
			КонецЕсли;
			
			ИмяФайлаМод = путьККартинкамМоделей+СокрЛП(нРЕГ(Товар.Модель.Наименование+"_"+Цвет))+типФайла;
		
		иначеЕсли Товар.ВидТовара=Перечисления.ВидыТоваров.Шины тогда
			путьККартинкамТов           = путьККартинкамШин; // ШИНЫ
			путьККартинкамМоделей 		= путьККартинкамШин;
			
			Если естьФайлМод тогда //и так и сяк
				ИмяФайлаМод = путьККартинкамМоделей+сокрЛП(Товар.Модель.Код)+типФайла;
			Иначе	
				ИмяФайлаТов = путьККартинкамТов+сокрЛП(Товар.Код)+типФайла;
			КонецЕсли;
		
		иначеЕсли Товар.ВидТовара=Перечисления.ВидыТоваров.Аксессуары тогда
			естьФайлМод = ЛОЖЬ; // только по товарам!
			путьККартинкамТов			= путьККартинкамАксессуаров;
			путьККартинкамМоделей 		= путьККартинкамАксессуаров;
			//ИмяФайлаМод =путьККартинкамМоделей + строка(ЭтотОбъект.Модель.Код)+типФайла;
			ИмяФайлаТов = путьККартинкамТов+СокрЛП(нРЕГ(Товар.Код))+типФайла;
		иначеЕсли Товар.ВидТовара=Перечисления.ВидыТоваров.АКБ тогда
			естьФайлМод = ЛОЖЬ; // только по товарам!
			путьККартинкамТов			= путьККартинкамАКБ;
			путьККартинкамМоделей 		= путьККартинкамАКБ;
			//ИмяФайлаМод =путьККартинкамМоделей + строка(ЭтотОбъект.Модель.Код)+типФайла;
			ИмяФайлаТов =путьККартинкамТов + строка(Товар.Код) +типФайла;
		иначеЕсли Товар.ВидТовара=Перечисления.ВидыТоваров.РекламнаяПродукция тогда
			естьФайлМод = ЛОЖЬ; // только по товарам!
			путьККартинкамТов			= путьККартинкамРеклама;
			путьККартинкамМоделей 		= путьККартинкамРеклама;
			//ИмяФайлаМод =путьККартинкамМоделей + строка(ЭтотОбъект.Модель.Код)+типФайла;
			ИмяФайлаТов = путьККартинкамТов+СокрЛП(нРЕГ(Товар.Код))+типФайла;
 		КонецЕсли;
      Возврат ?(естьФайлМод,ИмяФайлаМод,ИмяФайлаТов);
КонецФункции

Функция СформироватьНаименованиеТовара(ТЗтоваров, ДваЯзыка=ложь,ОрганизацияТТ=истина)
	
	ГруппаЛитые = Справочники.Номенклатура.НайтиПоКоду("0001753"); //это из алюминия легковые
	ГруппаГрузовые = Справочники.Номенклатура.НайтиПоКоду("9004163");  //это грузовые
	ГруппаШтампованные = Справочники.Номенклатура.НайтиПоКоду("0001755"); //это стальные легковые
	
	ЕстьАлюминиевые = Ложь;
	ЕстьСтальные = Ложь;
	ЕстьГрузовые = Ложь;
	ЕстьАксессуары = Ложь;
	ЕстьШины = Ложь;
	Для Каждого Стр из ТЗТоваров Цикл
		ЭтоЛитойДиск = Стр.Номенклатура.ПринадлежитЭлементу(ГруппаЛитые);
		ЭтоШтампованныйДиск = Стр.Номенклатура.ПринадлежитЭлементу(ГруппаШтампованные);
		ЭтоГрузовойДиск = Стр.Номенклатура.ПринадлежитЭлементу(ГруппаГрузовые);
		Если ЭтоЛитойДиск Тогда
			ЕстьАлюминиевые = Истина;
		ИначеЕсли ЭтоШтампованныйДиск Тогда
			ЕстьСтальные = Истина;
		ИначеЕсли ЭтоГрузовойДиск Тогда 
			ЕстьГрузовые = Истина;
		ИначеЕсли Стр.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Аксессуары Тогда
			ЕстьАксессуары = Истина;
		ИначеЕсли Стр.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
			ЕстьШины = Истина;
		КонецЕсли;	
	КонецЦикла;	
	ПечНаименованиеТовара = "";
	ПечНаименованиеТовараАнгл = "";
	Если ЕстьАлюминиевые Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+"Новые алюминиевые";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+"New aluminum";
	КонецЕсли;
	Если ЕстьСтальные Тогда
		ПечНаименованиеТовара = ?(ПечНаименованиеТовара = "","Новые стальные", ПечНаименованиеТовара+", стальные");
		ПечНаименованиеТовараАнгл = ?(ПечНаименованиеТовараАнгл = "","New steel", ПечНаименованиеТовараАнгл+", steel");
	КонецЕсли;
	Если ПечНаименованиеТовара <> "" Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+" колеса для легковых автомобилей, ";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+" wheels for passenger cars, ";
	КонецЕсли;
	Если ЕстьГрузовые Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+"Новые колеса для грузовых автомобилей, ";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+"New wheels for trucks, ";
	КонецЕсли;
	Если ЕстьШины Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+"Шины, ";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+"Tires, ";
	КонецЕсли;	
	Если ЕстьАксессуары Тогда
		ПечНаименованиеТовара = ПечНаименованиеТовара+"Аксессуары, ";
		ПечНаименованиеТовараАнгл = ПечНаименованиеТовараАнгл+"Accessories, ";
	КонецЕсли;	
	
	ПечНаименованиеТовара = Лев(ПечНаименованиеТовара, СтрДлина(ПечНаименованиеТовара)-2);
	ПечНаименованиеТовараАнгл = Лев(ПечНаименованиеТовараАнгл, СтрДлина(ПечНаименованиеТовараАнгл)-2);
	
	Если ДваЯзыка и не ОрганизацияТТ Тогда
		возврат ПечНаименованиеТовараАнгл+" / "+ПечНаименованиеТовара;
	ИначеЕсли ОрганизацияТТ тогда
		возврат ПечНаименованиеТовараАнгл;
	Иначе	
		возврат ПечНаименованиеТовара;
	КонецЕсли;
	
КонецФункции	

Функция ВесУпаковки(типоразмер, ЭтоЛитойДиск = Ложь)
	
	индексД = ?(типоразмер.Диаметр="",0, число(типоразмер.Диаметр)-13);  
	
	Если индексД>=0 тогда
		Если ЭтоЛитойДиск Тогда
			масса = новый Массив;
			масса.Добавить(0.430); //13
			масса.Добавить(0.650); //14
			масса.Добавить(0.700); //15
			масса.Добавить(0.870); //16
			масса.Добавить(0.950); //17
			масса.Добавить(1.100);  //18
			масса.Добавить(1.200);  //19
			масса.Добавить(1.400);  //20
			масса.Добавить(1.550);  //21
			масса.Добавить(1.700); //22 
			m = масса[индексД];
		Иначе
			масса = новый Массив;
			масса.Добавить(0.300); //13
			масса.Добавить(0.400); //14
			масса.Добавить(0.500); //15
			масса.Добавить(0.600); //16
			масса.Добавить(0.700); //17
			Попытка
			    m = масса[индексД];
			Исключение
				m = 0;
			КонецПопытки;	
		КонецЕсли;
	Иначе // это болты или гайки
		m = 0;
	КонецЕсли;
	возврат Окр(m,3);
КонецФункции	

Функция яПолучитьАдресКартинкиТовара(Товар) 
	
	ПутьКФотоНаСайте = "http://photo.yst.ru/";
    имяФайлаПусто = ПутьКФотоНаСайте+"nopic_tyre_s.jpg"; //Фото отсутствует
	типФайла = ".png";
	естьФайлМод = ЗначениеЗаполнено(Товар.Модель);
	
		путьККартинкамДисков      = ПутьКФотоНаСайте+"wheels/";
		путьККартинкамШин	      = ПутьКФотоНаСайте+"tires/";
		путьККартинкамАксессуаров = ПутьКФотоНаСайте+"accessories/";
		путьККартинкамРеклама     = ПутьКФотоНаСайте+"reklamnaya_produkciya/";
		путьККартинкамАКБ         = ПутьКФотоНаСайте+"batteries/";    //yst.ru/photos/akb/
		
	
		Если Товар.ВидТовара=Перечисления.ВидыТоваров.Диски тогда
			естьФайлМод = ИСТИНА; // только по моделям!
			путьККартинкамТов         = путьККартинкамДисков; // ДИСКИ
			
			папкаПроизводителя = нрег(Товар.Производитель);
			если найти(папкаПроизводителя, "replica")>0 тогда
				если найти(папкаПроизводителя, "replica td")>0 тогда
				папкаПроизводителя = "top driver";
				иначе
				папкаПроизводителя = "legeartis";
				КонецЕсли;
			КонецЕсли;
			путьККартинкамМоделей     = путьККартинкамДисков+папкаПроизводителя+"/";
			
			//24.03.14 Смирнов для картинки - ТОЛЬКО ДЛЯ ДИСКОВ нужен цвет
			РегСвва=РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
			РегСвва.Отбор.Объект.Установить(Товар);
			РегСвва.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Цвет"));
			РегСвва.Прочитать();
			Если РегСвва.Количество()>0 Тогда
				Цвет = СокрЛП(РегСвва.Получить(0).Значение);
			Иначе
				Цвет="";
			КонецЕсли;
			
			ИмяФайлаМод = путьККартинкамМоделей+СокрЛП(нРЕГ(Товар.Модель.Наименование+"_"+Цвет))+типФайла;
		
		иначеЕсли Товар.ВидТовара=Перечисления.ВидыТоваров.Шины тогда
			путьККартинкамТов           = путьККартинкамШин; // ШИНЫ
			путьККартинкамМоделей 		= путьККартинкамШин;
			
			Если естьФайлМод тогда //и так и сяк
				ИмяФайлаМод = путьККартинкамМоделей+сокрЛП(Товар.Модель.Код)+типФайла;
			Иначе	
				ИмяФайлаТов = путьККартинкамТов+сокрЛП(Товар.Код)+типФайла;
			КонецЕсли;
		
		иначеЕсли Товар.ВидТовара=Перечисления.ВидыТоваров.Аксессуары тогда
			естьФайлМод = ЛОЖЬ; // только по товарам!
			путьККартинкамТов			= путьККартинкамАксессуаров;
			путьККартинкамМоделей 		= путьККартинкамАксессуаров;
			//ИмяФайлаМод =путьККартинкамМоделей + строка(ЭтотОбъект.Модель.Код)+типФайла;
			ИмяФайлаТов = путьККартинкамТов+СокрЛП(нРЕГ(Товар.Код))+типФайла;
		иначеЕсли Товар.ВидТовара=Перечисления.ВидыТоваров.АКБ тогда
			естьФайлМод = ЛОЖЬ; // только по товарам!
			путьККартинкамТов			= путьККартинкамАКБ;
			путьККартинкамМоделей 		= путьККартинкамАКБ;
			//ИмяФайлаМод =путьККартинкамМоделей + строка(ЭтотОбъект.Модель.Код)+типФайла;
			ИмяФайлаТов =путьККартинкамТов + строка(Товар.Код) +типФайла;
		иначеЕсли Товар.ВидТовара=Перечисления.ВидыТоваров.РекламнаяПродукция тогда
			естьФайлМод = ЛОЖЬ; // только по товарам!
			путьККартинкамТов			= путьККартинкамРеклама;
			путьККартинкамМоделей 		= путьККартинкамРеклама;
			//ИмяФайлаМод =путьККартинкамМоделей + строка(ЭтотОбъект.Модель.Код)+типФайла;
			ИмяФайлаТов = путьККартинкамТов+СокрЛП(нРЕГ(Товар.Код))+типФайла;
		иначе
			Возврат "";
 		КонецЕсли;
      Возврат ?(естьФайлМод,ИмяФайлаМод,ИмяФайлаТов);
  КонецФункции
  
Функция яПолучитьHTTPОтвет(ПутьКФайлуНаСервере, ИмяФайла, Соединение, Заголовки, флаг = Истина)
	
	
	HTTPЗапрос = Новый HTTPЗапрос(ПутьКФайлуНаСервере, Заголовки);
	HTTPЗапрос.Заголовки.Вставить("Accept-Charset", "utf-8");
	HTTPОтвет = Соединение.Получить(HTTPЗапрос, ИмяФайла);
	
	Если HTTPОтвет.КодСостояния = 301 или HTTPОтвет.КодСостояния = 302 Тогда		
		ПутьКФайлуНаСервере = HTTPОтвет.Заголовки["Location"];
		URLРазделенный = яРазделитьURL(ПутьКФайлуНаСервере);
		ПутьКФайлуНаСервере  = URLРазделенный.ПутьКФайлуНаСервере; 		
		HTTPОтвет = яПолучитьHTTPОтвет(ПутьКФайлуНаСервере, ИмяФайла, Соединение, Заголовки, Флаг);
	КонецЕсли;
	
	файл = Новый Файл(ИмяФайла); 
	
	Если флаг и HTTPОтвет.КодСостояния >= 200 и HTTPОтвет.КодСостояния <= 299 Тогда
		флаг = Ложь;
		ИмяФайлаВр = ПутьКФайлуНаСервере;
		Пока Найти(ИмяФайлаВр,"/") > 0 цикл
			ИмяФайлаВр = Сред(ИмяФайлаВр,Найти(ИмяФайлаВр,"/")+1);						
		КонецЦикла;
		Если НЕ ПустаяСтрока(ИмяФайлаВр) Тогда
			ПереместитьФайл(ИмяФайла, файл.Путь + ИмяФайлаВр);
			ИмяФайла = файл.Путь + ИмяФайлаВр;
		КонецЕсли;
	КонецЕсли;
		
	Возврат HTTPОтвет;    
	
КонецФункции
 
Функция яПолучитьФайлССервера(ФайлНаВебСервере)
 
	ВремКаталог = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ВремКаталог);
	
	ПараметрыПолученияФайлов = Новый Структура;
	
	ПараметрыПолучения	 = Новый Структура("ИмяФайла");
	ПараметрыПолучения. Вставить("ИмяФайла", ВремКаталог);
	
 
	URLРазделенный = яРазделитьURL(ФайлНаВебСервере);
	
	ИмяСервера           = URLРазделенный.ИмяСервера;
	ПутьКФайлуНаСервере  = URLРазделенный.ПутьКФайлуНаСервере;
	Протокол             = URLРазделенный.Протокол;
	Заголовки 			 = Новый Соответствие; 		
	СписокФайлов 		 = новый Массив;
 
	Соединение = Новый HTTPСоединение(ИмяСервера, , , , , , ); 
	
	ИмяФайла = ВремКаталог + "\temp.htm";
	
	HTTPОтвет = яПолучитьHTTPОтвет(ПутьКФайлуНаСервере, ИмяФайла, Соединение, Заголовки);
			
	Если HTTPОтвет.КодСостояния < 200 Или HTTPОтвет.КодСостояния >= 300 Тогда
		ФайлОтвета = Новый ЧтениеТекста(ВремКаталог + "\temp.htm", КодировкаТекста.UTF8);
		Возврат "";
	КонецЕсли;  
	
	Возврат ИмяФайла;
 
КонецФункции // ПолучитьФайлССервера()

Функция яРазделитьURL(Знач URL) 
	
	СтруктураURL = яСтруктураURI(URL);
	
	Результат = Новый Структура;
	Результат.Вставить("Протокол", ?(ПустаяСтрока(СтруктураURL.Схема), "http", СтруктураURL.Схема));
	Результат.Вставить("ИмяСервера", СтруктураURL.ИмяСервера);
	Результат.Вставить("ПутьКФайлуНаСервере", СтруктураURL.ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции
 
Функция яСтруктураURI(Знач СтрокаURI) 
СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;
 
	// Строка соединения и путь на сервере.
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
		
	// Информация пользователя и имя сервера.
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(ПустаяСтрока(Порт), Неопределено, Число(Порт)));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции