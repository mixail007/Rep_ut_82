

//--------------Общая выборка для любого документа с ТЧ  ТоварыАдресноеХранение ----------------------------
// получает съитоженную выборку по Номенклатуре
функция ПолучитьВыборкуТоваровАдресноеХранение()
	
	
	типДок = СсылкаНаОбъект.Метаданные().Имя;
	
	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	ЗапросПоТоварам.УстановитьПараметр("ПустойСклад", справочники.склады.ПустаяСсылка());
		ЗапросПоТоварам.текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		                        |	Инвентаризация.НомерСтроки КАК НомерСтроки,
		                        |	Инвентаризация.Номенклатура КАК Номенклатура,
		                        |	Инвентаризация.АдресХранения КАК АдресХранения,
		                        |	Инвентаризация.Количество КАК Количество,
		                        |	Инвентаризация.КоличествоУчет КАК КоличествоУчет,
		                        |	Инвентаризация.Количество - Инвентаризация.КоличествоУчет КАК Дельта
		                        |ИЗ
		                        |	Документ.ИнвентаризацияТоваровНаСкладе.ТоварыАдресноеХранение КАК Инвентаризация
		                        |ГДЕ
		                        |	Инвентаризация.Ссылка = &ТекущийДокумент
		                        |	И Инвентаризация.Количество <> Инвентаризация.КоличествоУчет
		                        |
		                        |УПОРЯДОЧИТЬ ПО
		                        |	НомерСтроки,
		                        |	АдресХранения
		                        |ИТОГИ
		                        |	МИНИМУМ(НомерСтроки),
		                        |	СУММА(Количество),
		                        |	СУММА(КоличествоУчет),
		                        |	СУММА(Дельта)
		                        |ПО
		                        |	ОБЩИЕ,
		                        |	АдресХранения
		                        |АВТОУПОРЯДОЧИВАНИЕ";

		
	ВыборкаСтрок = ЗапросПоТоварам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	возврат ВыборкаСтрок;

КонецФункции


Функция Печать() экспорт
	
	ДатаПечати = СсылкаНаОбъект.МоментВремени(); //ТекущаяДата();//+++ это очень важно!!!
	
	//Склад5000  = справочники.Склады.НайтиПоНаименованию("5000");	
   	
		ВыборкаСтрокИтого = ПолучитьВыборкуТоваровАдресноеХранение();
		ЕстьАдресФакт = истина; // флаг для выборки из выборки...
	

	Макет = ПолучитьМакет("АдресноеХранение");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_АдресноеХранение";

	// Выводим общие реквизиты шапки
	СведенияОПокупателе = СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, ДатаПечати);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ДокументПредставление  = строка(СсылкаНаОбъект.Ссылка);
	ОбластьМакета.Параметры.Организация   = ОписаниеОрганизации(СведенияОПокупателе);
	//-----------должны быть такие реквизиты во всех документах!--------------------------
	ОбластьМакета.Параметры.Подразделение = СокрЛП(СсылкаНаОбъект.Подразделение);
	ОбластьМакета.Параметры.Комментарий   = СокрЛП(СсылкаНаОбъект.Комментарий);
	ТабДокумент.Вывести(ОбластьМакета);
    	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	СтрокШапки      = 9;
	СтрокНаСтранице = 40;
	СтрокПодвала    = 6;
	НомерСтраницы   = 1;
	
	

	// Инициализация итогов в документе
	ИтогоКоличество     = 0;
	ИтогоКоличествоФакт = 0;
	Ном              = СтрокШапки;
	НомерСтрокиПМ = 0;
    КолНаСтранице 		= 0;
	КолНаСтраницеФакт	= 0;
	КолНаСтраницеДельта = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета= Макет.ПолучитьОбласть("Строка"); // Адрес! сначала 
	ОбластьМакета1 = Макет.ПолучитьОбласть("Строка1"); //затем Номенклатура
	ОбластьМакетаИтого = Макет.ПолучитьОбласть("Итого");
	
	ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
	размер = "";
	
	ВыборкаСтрокИтого.следующий();
	ОбластьМакетаИтого.Параметры.Заполнить(ВыборкаСтрокИтого);
	//ЗаполнитьЗначенияСвойств(ОбластьИтого.Параметры, ВыборкаСтрокИтого);
	
	ВыборкаСтрокАдреса = ВыборкаСтрокИтого.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	КоличествоСтрок = ВыборкаСтрокАдреса.Количество();
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;	   
	
	//====================Основной цикл====================================================
	Пока ВыборкаСтрокАдреса.Следующий() Цикл
			
	Ном = Ном + 1; 
				
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокАдреса);
	//	ОбластьМакета.Параметры.Код = ВыборкаСтрокАдреса.Номенклатура.Код;//+++ 22.03.2018
		
	ТабДокумент.Вывести(ОбластьМакета);

	 //---------------------------------------------------------------------------------------------
	 ВыборкаСтрокТовары = ВыборкаСтрокАдреса.выбрать();
	 
	ТабДокумент.НачатьГруппуСтрок(); 
	 пока ВыборкаСтрокТовары.Следующий() цикл
		 
		 Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.АдресХранения) Тогда
			Сообщить("В строке №"+строка(ВыборкаСтрокАдреса.НомерСтроки)+" - не заполнено значение Адреса!", СтатусСообщения.Важное);
		//	Продолжить;
		КонецЕсли;

		 ном = ном+1;
		 ОбластьМакета1.Параметры.Заполнить(ВыборкаСтрокТовары);
		 ОбластьМакета1.Параметры.Код = ВыборкаСтрокТовары.Номенклатура.Код;//+++
	 
		ТабДокумент.Вывести(ОбластьМакета1);

		КолНаСтраницеФакт = КолНаСтраницеФакт + ВыборкаСтрокТовары.Количество;
		КолНаСтранице 	  = КолНаСтранице + ВыборкаСтрокТовары.КоличествоУчет;
		КолНаСтраницеДельта = КолНаСтраницеДельта + ВыборкаСтрокТовары.Количество - ВыборкаСтрокТовары.КоличествоУчет;
	
	КонецЦикла; //-----------------------------------------------------------
	ТабДокумент.ЗакончитьГруппуСтрок();	
				
	КонецЦикла;
  //=======================================================================
  
  ТабДокумент.Вывести(ОбластьМакетаИтого);

	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.ДолжностьСдал = "";
	ОбластьМакета.Параметры.ФИОСдал = "";
	ОбластьМакета.Параметры.ДолжностьПринял = "";
	ОбластьМакета.Параметры.ФИОПринял = "";
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.Защита = истина;
	ТабДокумент.ТолькоПросмотр = истина;
	
	Возврат ТабДокумент;

КонецФункции // Печать()
