Перем Соединение ,СоответствиеПоставщиковКодДпд;
функция ПолучитьЗаказыДляПечати()
	СписокКонтрагентов = новый СписокЗначений;
	//СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000382"));
	//СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94247"));
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя
	             |ПОМЕСТИТЬ втЗаказы
	             |ИЗ
	             |	Документ.ЗаданиеНаПеремещение.ЗаказыПокупателей КАК ЗаданиеНаПеремещениеЗаказыПокупателей
	             |ГДЕ
	             |	ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка = &Ссылка
	           //  |	И ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя.Контрагент В(&КонтрагентыАЭ)
	             |	И ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя.Контрагент.КонтрагентДляРезерваИМ = &КонтрагентДляРезерваИМ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗаказПокупателяЗаказы.ЗаказПокупателя.Ссылка,
	             |	ЗаказПокупателяЗаказы.ЗаказПокупателя.НомерВходящегоДокумента
	             |ПОМЕСТИТЬ втИсходныеЗаказы
	             |ИЗ
	             |	втЗаказы КАК втЗаказы
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Заказы КАК ЗаказПокупателяЗаказы
	             |		ПО втЗаказы.ЗаказПокупателя = ЗаказПокупателяЗаказы.Ссылка
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	втЗаказы.ЗаказПокупателя.Ссылка,
	             |	втЗаказы.ЗаказПокупателя.НомерВходящегоДокумента
	             |ИЗ
	             |	втЗаказы КАК втЗаказы
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	втИсходныеЗаказы.ЗаказПокупателяНомерВходящегоДокумента
	             |ИЗ
	             |	втИсходныеЗаказы КАК втИсходныеЗаказы
	             |ГДЕ
	             |	НЕ втИсходныеЗаказы.ЗаказПокупателяНомерВходящегоДокумента = """"";
				 Запрос.УстановитьПараметр("Ссылка",СсылкаНаОбъект);
				 Запрос.УстановитьПараметр("КонтрагентыАЭ",СписокКонтрагентов);
				 Запрос.УстановитьПараметр("КонтрагентДляРезерваИМ",Справочники.Контрагенты.НайтиПоКоду("П004703"));
				 Рез=Запрос.Выполнить().Выбрать();
	
	возврат Рез;
КонецФункции	

//ЗаказПокупателя
Функция ПечатьОбщегоЗаказаПокупателяПоВнутреннимНомерам(СписокЗак)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";
	
	Макет = ПолучитьМакет("Макет");
	
	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	//+++ 13.01.2015 - флОбщий=Истина - номера док.ЯШТ, ЛОЖЬ - вх.док! 
	Если СокрЛП(ссылкаНаОбъект.Контрагент.Код) = "93273" // евротранс
	  или ссылкаНаОбъект.Контрагент.Код = "П000382"
	  или СокрЛП(ссылкаНаОбъект.Контрагент.Код)= "94247" // Автоэксперт
	тогда 
		флОбщий = ЛОЖЬ;
	иначе 	
		флОбщий = Истина;
	КонецЕсли;
	
	
	Если СокрЛП(ссылкаНаОбъект.Контрагент.Код) <> "93273" тогда
		
		ОбластьМакета.Параметры.Поставщик = строка(СсылкаНаОбъект.Подразделение);
		ОбластьМакета.Параметры.Заказчик = строка(СсылкаНаОбъект.Контрагент.НаименованиеПолное);
		
		Заказчик = строка(СсылкаНаОбъект.Контрагент.НаименованиеПолное);
		
	Иначе//Если СокрЛП(сылкаНаОбъект.Контрагент.Код) = "93273" тогда	//ЕвроТранс!	
	
		Если Найти(врег(СсылкаНаОбъект.Комментарий), "ПЕРЕМЕЩЕНИЕ ИЗ ЯРОСЛАВЛЯ") = 0 Тогда
			ОбластьМакета.Параметры.Поставщик = "Яршинторг (Шинтрейд)";
		Иначе
			ОбластьМакета.Параметры.Поставщик = "Яршинторг (Ярославль)";
		КонецЕсли;
//===============================Заказчик из Комментария==========================
	Заказчик = СтрЗаменить(СписокЗак[0].Значение.Комментарий, "ПЕРЕМЕЩЕНИЕ ИЗ ЯРОСЛАВЛЯ", "");//+++ из первоначального!
	Заказчик = СтрЗаменить(Заказчик, "Перемещение из Ярославля", "");//+++ из первоначального!
	Заказчик = СтрЗаменить(Заказчик, "перемещение из Ярославля", "");//+++ из первоначального!
	Заказчик = СтрЗаменить(Заказчик, "перемещение из ярославля", "");//+++ из первоначального!
	Заказчик = СтрЗаменить(Заказчик,"# данные перенесены ", "");    //   '# данные перенесены >> СП018490 # Боровичи 1'
	
	Заказчик = СокрЛП(Заказчик);
	i=найти(Заказчик, "#"); L=стрДлина(Заказчик);
	пока лев(Заказчик,2)=">>" и i>0 цикл// на перемещение из Ярославля или данные перемесены...
		Заказчик = сред(Заказчик,i+1, L-i);
		Заказчик = СокрЛП(Заказчик);
		i=найти(Заказчик, "#"); L=стрДлина(Заказчик);
	КонецЦикла;
	
	Заказчик = СокрЛП( СтрЗаменить(Заказчик, "#", "") );  //номер точки!
	ОбластьМакета.Параметры.Заказчик = Заказчик;
	
	КонецЕсли;
	
	
	
	
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	
  СписокНомеров = "";
  СписокНомеровПортальный = "";
  Для i=0 по СписокЗак.Количество()-1 цикл
	 СписокНомеров = СписокНомеров +СокрЛП(СписокЗак[i].Значение.Номер)+"; ";
	 СписокНомеровПортальный = СписокНомеровПортальный+СокрЛП(СписокЗак[i].Значение.НомерВходящегоДокумента)+"; ";
	
  КонецЦикла;				  
	ОбластьМакета.Параметры.СписокНомеров = СписокНомеров;
	ОбластьМакета.Параметры.СписокНомеровПортальный = СписокНомеровПортальный;
	ТабДокумент.Вывести(ОбластьМакета);
	
Если флОбщий тогда
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
Иначе
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы1");
КонецЕсли;

	ТабДокумент.Вывести(ОбластьМакета);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокЗаказовПокупателей", СписокЗак);
	Запрос.УстановитьПараметр("ЭтотОбщийЗаказ", СсылкаНаОбъект);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателяТовары.НомерСтроки КАК НомерСтроки,
	               |	ЗаказПокупателяТовары.Номенклатура.Код КАК Код,
	               |	ЗаказПокупателяТовары.Номенклатура.Артикул КАК Артикул,
	               |	ЗаказПокупателяТовары.Номенклатура.НаименованиеПолное КАК Наименование,
	               |	ЗаказПокупателяТовары.Номенклатура,
	               |	ЗаказПокупателяТовары.Цена,
	               |	ЗаказПокупателяТовары1.НомерДок КАК НомерПорт,
	               |	ЗаказПокупателяТовары1.Количество КАК Количество,
	               |	ЗаказПокупателяТовары.Количество КАК КоличествоОбщее
	               |ИЗ
	               |	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				   //+++ 13.11.2014 - если нет номера вх.документа - то номер документа!
	               |ЗаказПокТовары1.Ссылка.НомерВходящегоДокумента
				   |	КАК НомерДок,
	               |			ЗаказПокТовары1.Номенклатура КАК Номенклатура,
	               |			ЗаказПокТовары1.Количество КАК Количество
	               |		ИЗ
	               |			Документ.ЗаказПокупателя.Товары КАК ЗаказПокТовары1
	               |		ГДЕ
	               |			ЗаказПокТовары1.Ссылка В(&СписокЗаказовПокупателей)) КАК ЗаказПокупателяТовары1
	               |		ПО ЗаказПокупателяТовары.Номенклатура = ЗаказПокупателяТовары1.Номенклатура
	               |ГДЕ
	               |	ЗаказПокупателяТовары.Ссылка = &ЭтотОбщийЗаказ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки,
				   |	НомерПорт   
				   |
	              |АВТОУПОРЯДОЧИВАНИЕ";
				   
	//+++ 13.11.2014 --------------------------------- 				   
	Если флОбщий тогда
		Запрос.Текст = стрЗаменить(Запрос.Текст, "ЗаказПокТовары1.Ссылка.НомерВходящегоДокумента", "ЗаказПокТовары1.Ссылка.Номер");
	КонецЕсли;

	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Результат);
		
		//ОбластьСтрока.Параметры.НомерСтроки = Результат.НомерСтроки;
		//ОбластьСтрока.Параметры.Код = Результат.Код;
		//ОбластьСтрока.Параметры.Наименование = СокрЛП(Результат.Номенклатура.НаименованиеПолное);
		//ОбластьСтрока.Параметры.Количество = Результат.Количество;
		//ОбластьСтрока.Параметры.Цена = Результат.Цена;
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтого=Макет.ПолучитьОбласть("Подвал");
	ОбластьИтого.Параметры.КоличествоИтого = СсылкаНаОбъект.Товары.Итог("Количество");
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьИтого=Макет.ПолучитьОбласть("ОбластьДата");
	ОбластьИтого.Параметры.Дата=ТекущаяДата();
	ТабДокумент.Вывести(ОбластьИтого);
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ОтображатьСетку = Ложь;
	
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()

//ЗаказПокупателя 1
Функция ПечатьЗаказаПокупателя()
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";
	
	Макет = ПолучитьМакет("Макет1");
	
	// Выводим шапку накладной
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Номер = СсылкаНаОбъект.Номер;
	Заказчик = СтрЗаменить(СсылкаНаОбъект.Комментарий, "ПЕРЕМЕЩЕНИЕ ИЗ ЯРОСЛАВЛЯ", "");
	ОбластьМакета.Параметры.Заказчик = Заказчик;
	Если Найти(врег(СсылкаНаОбъект.Комментарий), "ПЕРЕМЕЩЕНИЕ ИЗ ЯРОСЛАВЛЯ") = 0 Тогда
		ОбластьМакета.Параметры.Поставщик = "Яршинторг (Шинтрейд)";
	Иначе
		ОбластьМакета.Параметры.Поставщик = "Яршинторг (Ярославль)";
	КонецЕсли;
	ОбластьМакета.Параметры.НомерПортальный = СсылкаНаОбъект.НомерВходящегоДокумента;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказПокупателя", СсылкаНаОбъект);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателяТовары.НомерСтроки,
	               |	ЗаказПокупателяТовары.Номенклатура.Код КАК Код,
	               |	ЗаказПокупателяТовары.Номенклатура.Артикул КАК Артикул,
	               |	ЗаказПокупателяТовары.Номенклатура,
	               |	ЗаказПокупателяТовары.Количество,
	               |	ЗаказПокупателяТовары.Цена
	               |ИЗ
	               |	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |ГДЕ
	               |	ЗаказПокупателяТовары.Ссылка = &ЗаказПокупателя";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьСтрока.Параметры.НомерСтроки = Результат.НомерСтроки;
		ОбластьСтрока.Параметры.Код = Результат.Код;
		ОбластьСтрока.Параметры.Наименование = Результат.Номенклатура.НаименованиеПолное;
		ОбластьСтрока.Параметры.Количество = Результат.Количество;
		ОбластьСтрока.Параметры.Цена = Результат.Цена;
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтого=Макет.ПолучитьОбласть("Подвал");
	ОбластьИтого.Параметры.КоличествоИтого=СсылкаНаОбъект.Товары.Итог("Количество");
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьИтого=Макет.ПолучитьОбласть("ОбластьДата");
	ОбластьИтого.Параметры.Дата=ТекущаяДата();
	ТабДокумент.Вывести(ОбластьИтого);
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ОтображатьСетку = Ложь;
	
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()
 
// общая процедура печати
функция Печать() Экспорт
	
	ТабДокумент = неопределено;
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) тогда
		#Если Клиент тогда
		Предупреждение("Не выбран документ!", 30);		
		#КонецЕсли
	КонецЕсли;
	
	//формируем список заказов
	
	ВыборкаЗаказыДляПечати=ПолучитьЗаказыДляПечати();
	
	
	//
	Если  Соединение = неопределено тогда
		Base = "Srvr=""sigma:2041"";Ref=""v82ib_fedunov_ut""";
		UsrPwd = "Usr="""+"Администратор"+""";Pwd="""+"cegthuthjq"+"""";
		СтрокаСоединенияCOM = Base+";"+UsrPwd;
	КонецЕсли;
	//
	Если Соединение = неопределено тогда
		Соединение=ПолучитьСоединение(СтрокаСоединенияCOM);
	КонецЕсли;
	Если Соединение <>неопределено тогда
		Поставщики=Соединение.NewObject("СписокЗначений");
		Поставщики.Добавить(Соединение.Справочники.Контрагенты.НайтиПоКоду("000092773"));  //яшт
		Поставщики.Добавить(Соединение.Справочники.Контрагенты.НайтиПоКоду("УТ0000345"));  //пауэр
		
		СписокЗаказовАЭ=Соединение.NewObject("СписокЗначений");
		Пока ВыборкаЗаказыДляПечати.Следующий() цикл
			СписокЗаказовАЭ.Добавить(ВыборкаЗаказыДляПечати.ЗаказПокупателяНомерВходящегоДокумента);
		КонецЦикла;
		СписокНоменклатурыКод=Соединение.NewObject("СписокЗначений");
		СписокНоменклатуры=СсылкаНаОбъект.Товары.ВыгрузитьКолонку("Номенклатура");
		Для каждого эл из СписокНоменклатуры цикл
			СписокНоменклатурыКод.Добавить(эл.Код);
		КонецЦикла;
		
		Запрос = Соединение.NewObject("Запрос");
		Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказПокупателяТовары.Ссылка КАК ЗаказПокупателя,
		|	ЗаказПокупателяТовары.Номенклатура
		|ПОМЕСТИТЬ втЗаказы
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|		ПО ЗаказПокупателяТовары.Ссылка = ЗаказПокупателя.Ссылка
		|ГДЕ
		|	ЗаказПокупателяТовары.Ссылка.Номер В(&СписокНомеров)
		|	И ЗаказПокупателяТовары.Номенклатура.Код В(&СписокНоменклатурыКод)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказПокупателяТовары.Ссылка.Номер КАК ЗаказНомер,
		|	ЗаказПокупателяТовары.Номенклатура.Код,
		|	ЗаказПокупателяТовары.Поставщик.Код КАК ПоставщикКод,
		|	СУММА(ЗаказПокупателяТовары.Количество) КАК Количество,
		|	ЗаказПокупателяТовары.Ссылка.Организация.Наименование КАК Организация,
		|	ЗаказПокупателяТовары.Ссылка.ТелефонКонтрагента,
		|	ЗаказПокупателяТовары.Ссылка.Контрагент.Наименование КАК Контрагент,
		|	ЗаказПокупателяТовары.Номенклатура.Наименование КАК Номенклатура,
		|	ЗаказПокупателяТовары.Ссылка.НомерВходящегоДокументаЭлектронногоОбмена КАК НомерBITRIX,
		|	ЗаказПокупателяТовары.Поставщик.Наименование КАК Поставщик,
		|	ВЫБОР
		|		КОГДА ЗаказПокупателяТовары.Ссылка.ПунктВыдачи = ЗНАЧЕНИЕ(Справочник.ПунктВыдачи.ПустаяСсылка)
		|			ТОГДА ЗаказПокупателяТовары.Ссылка.АдресКладрСтр
		|		ИНАЧЕ ЗаказПокупателяТовары.Ссылка.ПунктВыдачи.Адрес
		|	КОНЕЦ КАК АдресКуда,
		|	""хххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххххх"" КАК ШК,
		|	ЗаказПокупателяТовары.НомерСтроки,
		|	ЗаказПокупателяТовары.Ссылка.НаправлениеОтгрузки.Наименование КАК НаправлениеОтгрузки,
		//|	ВЫБОР
		//|		КОГДА ЗаказПокупателяТовары.Ссылка.ЗапросПеревозчику ПОДОБНО ""%VAKSV%""
		//|				ИЛИ ЗаказПокупателяТовары.Ссылка.ЗапросПеревозчику ПОДОБНО ""%VKRPV%""
		//|			ТОГДА ИСТИНА
		//|		ИНАЧЕ ЛОЖЬ
		//|	КОНЕЦ КАК НовыйШК,
		| Истина КАК НовыйШК,
		|	ЗаказПокупателяТовары.Номенклатура.ВидНоменклатуры.Наименование КАК ВидНоменклатуры,
		|	ВЫБОР
		|		КОГДА ЗаказПокупателяТовары.Ссылка.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
		|		ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
	    |	КОНЕЦ КАК Юрик,
		|ВЫРАЗИТЬ(ЗаказПокупателяТовары.Ссылка.КомментарийДляСклада КАК СТРОКА(500)) КАК КомментарийДляСклада
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|ГДЕ
		|	(ЗаказПокупателяТовары.Ссылка, ЗаказПокупателяТовары.Номенклатура) В
		|			(ВЫБРАТЬ
		|				втЗаказы.ЗаказПокупателя,
		|				втЗаказы.Номенклатура
		|			ИЗ
		|				втЗаказы КАК втЗаказы)
		|	И ЗаказПокупателяТовары.Поставщик В(&Поставщики)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяТовары.Ссылка.Номер,
		|	ЗаказПокупателяТовары.Поставщик.Код,
		|	ЗаказПокупателяТовары.Номенклатура.Код,
		|	ЗаказПокупателяТовары.Ссылка.Организация,
		|	ЗаказПокупателяТовары.Ссылка.ТелефонКонтрагента,
		|	ЗаказПокупателяТовары.Ссылка.Контрагент,
		|	ЗаказПокупателяТовары.Номенклатура,
		|	ЗаказПокупателяТовары.Ссылка.НомерВходящегоДокументаЭлектронногоОбмена,
		|	ЗаказПокупателяТовары.Поставщик,
		|	ВЫБОР
		|		КОГДА ЗаказПокупателяТовары.Ссылка.ПунктВыдачи = ЗНАЧЕНИЕ(Справочник.ПунктВыдачи.ПустаяСсылка)
		|			ТОГДА ЗаказПокупателяТовары.Ссылка.АдресКладрСтр
		|		ИНАЧЕ ЗаказПокупателяТовары.Ссылка.ПунктВыдачи.Адрес
		|	КОНЕЦ,
		|	ЗаказПокупателяТовары.НомерСтроки,
		|	ЗаказПокупателяТовары.Ссылка.НаправлениеОтгрузки,
		|	ЗаказПокупателяТовары.Ссылка.Контрагент.Наименование,
		|	ЗаказПокупателяТовары.Поставщик.Наименование,
		|	ЗаказПокупателяТовары.Ссылка.Организация.Наименование,
		|	ЗаказПокупателяТовары.Номенклатура.Наименование,
		|	ЗаказПокупателяТовары.Ссылка.НаправлениеОтгрузки.Наименование,
		|	ВЫБОР
		|		КОГДА ЗаказПокупателяТовары.Ссылка.ЗапросПеревозчику ПОДОБНО ""%VAKSV%""
		|				ИЛИ ЗаказПокупателяТовары.Ссылка.ЗапросПеревозчику ПОДОБНО ""%VKRPV%""
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ ,
		|	ЗаказПокупателяТовары.Номенклатура.ВидНоменклатуры.Наименование,
		|ВЫБОР
		|КОГДА ЗаказПокупателяТовары.Ссылка.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
		|	ТОГДА ИСТИНА
		|ИНАЧЕ ЛОЖЬ
		|КОНЕЦ,
		|ВЫРАЗИТЬ(ЗаказПокупателяТовары.Ссылка.КомментарийДляСклада КАК СТРОКА(500))
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказПокупателяТовары.Ссылка.Номер,
		|	ЗаказПокупателяТовары.НомерСтроки
		|ИТОГИ ПО
		|	ЗаказНомер";

		Запрос.УстановитьПараметр("Поставщики",Поставщики);
		Запрос.УстановитьПараметр("СписокНомеров",СписокЗаказовАЭ);
		Запрос.УстановитьПараметр("СписокНоменклатурыКод",СписокНоменклатурыКод);

		
		//Рез = Запрос.Выполнить().Выгрузить();
		
		ТабНаклеек=новый ТаблицаЗначений;
		ТабНаклеек.Колонки.Добавить("ЗаказНомер");
		ТабНаклеек.Колонки.Добавить("НоменклатураКод");
        ТабНаклеек.Колонки.Добавить("ПоставщикКод");
        ТабНаклеек.Колонки.Добавить("Количество");
		ТабНаклеек.Колонки.Добавить("Организация");
        ТабНаклеек.Колонки.Добавить("ТелефонКонтрагента");
        ТабНаклеек.Колонки.Добавить("Контрагент");
		ТабНаклеек.Колонки.Добавить("Номенклатура");
		ТабНаклеек.Колонки.Добавить("НомерBITRIX");
		ТабНаклеек.Колонки.Добавить("Поставщик");
		ТабНаклеек.Колонки.Добавить("ШК");
		ТабНаклеек.Колонки.Добавить("АдресКуда");
        ТабНаклеек.Колонки.Добавить("НаправлениеОтгрузки");
		ТабНаклеек.Колонки.Добавить("ВидНоменклатуры");
		ТабНаклеек.Колонки.Добавить("КомментарийДляСклада");

		ПараметрыНаклейкиДляДокументов = новый Структура("ЗаказНомер,НоменклатураКод,ПоставщикКод,Количество,Организация,ТелефонКонтрагента,Контрагент,Номенклатура,НомерBITRIX,Поставщик,ШК,АдресКуда,НаправлениеОтгрузки,ВидНоменклатуры");
		
		ТабНаклеек.Очистить();
		
		ТабПакеты=ТабНаклеек.Скопировать();
		ТабАксы=ТабНаклеек.Скопировать();
		ТабКрепеж=ТабНаклеек.Скопировать();
		ТабОтдельныеПосылки=ТабНаклеек.Скопировать();
		ТабДокументы=ТабНаклеек.Скопировать();
		ТабСтарыеШК=ТабНаклеек.Скопировать();

	
	ВыборкаЗаказ = Запрос.Выполнить().Выбрать(Соединение.ОбходРезультатаЗапроса.ПоГруппировкам);

	
	Пока ВыборкаЗаказ.Следующий() Цикл
		ВыборкаДетали = ВыборкаЗаказ.Выбрать();
		НовыйШК=ложь;
		
		ТабПакеты.Очистить();
	    ТабАксы.Очистить();
	    ТабКрепеж.Очистить();
	    ТабОтдельныеПосылки.Очистить();
        ТабДокументы.Очистить();
		Юрик=ложь;
		//ПараметрыНаклейкиДляДокументов.Очистить();
		Пока ВыборкаДетали.Следующий() Цикл
			НовыйШК=ВыборкаДетали.НовыйШК;
			Если СокрЛП(ВыборкаДетали.НоменклатураКод)="9178010" тогда //пакеты
				нстр = ТабПакеты.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,ВыборкаДетали);
			иначеЕсли СокрЛП(ВыборкаДетали.ВидНоменклатуры)="Аксессуары" тогда //акс
				нстр = ТабАксы.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,ВыборкаДетали);
			иначеЕсли СокрЛП(ВыборкаДетали.ВидНоменклатуры)="Прочее" тогда //крепеж
				нстр = ТабКрепеж.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,ВыборкаДетали);
			иначе	 
				нстр = ТабОтдельныеПосылки.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,ВыборкаДетали);
			КонецЕсли;
			Если не НовыйШК тогда
				кол=1;
				Пока Кол<=ВыборкаДетали.Количество цикл
					нстр=табНаклеек.Добавить();
					ЗаполнитьЗначенияСвойств(нстр,ВыборкаДетали);
					нстр.ШК=ВРЕГ("KTY"+СокрЛП(ВыборкаДетали.НомерBITRIX)+"V"+СоответствиеПоставщиковКодДпд.Получить(СокрЛП(ВыборкаДетали.ПоставщикКод))+"V"+Соединение.ИнтернетМагазин.Транслитерация(СокрЛП(ВыборкаДетали.НоменклатураКод))+"V"+кол);
					Если СокрЛП(ВыборкаДетали.НоменклатураКод)="9178010" тогда  //пакеты идут как одно место
						кол=ВыборкаДетали.Количество;
					КонецЕсли;
					кол=кол+1;
				КонецЦикла;
			Иначе
			КонецЕсли;
			Юрик=ВыборкаДетали.Юрик;
			ЗаполнитьЗначенияСвойств(ПараметрыНаклейкиДляДокументов, ВыборкаДетали);
		КонецЦикла;//выборкаДетали
		
		Если Юрик тогда
			нстр=ТабОтдельныеПосылки.Добавить();
			ЗаполнитьЗначенияСвойств(нстр,ПараметрыНаклейкиДляДокументов);
			нстр.НоменклатураКод="DOC";
			нстр.Количество=1;
			нстр.Номенклатура="Пакет документов";
			нстр.ВидНоменклатуры="Документы";
			//нстр.ШК=ВРЕГ("KTY"+СокрЛП(стр.НомерBITRIX)+"V"+СоответствиеПоставщиковКодДпд.Получить(СокрЛП(стр.ПоставщикКод))+"VDOCV1");
		КонецЕсли;
		
		
		Если НовыйШК тогда
			Для каждого стр из ТабОтдельныеПосылки Цикл
				кол=1;
				Пока Кол<=стр.Количество цикл
					нстр=табНаклеек.Добавить();
					ЗаполнитьЗначенияСвойств(нстр,стр);
					нстр.ШК=ВРЕГ("KTY"+СокрЛП(стр.НомерBITRIX)+"V"+СоответствиеПоставщиковКодДпд.Получить(СокрЛП(стр.ПоставщикКод))+"V"+Соединение.ИнтернетМагазин.Транслитерация(СокрЛП(стр.НоменклатураКод))+"V"+кол);
					Если СокрЛП(стр.НоменклатураКод)="9178010" тогда  //пакеты идут как одно место
						кол=стр.Количество;
					КонецЕсли;
					кол=кол+1;
				КонецЦикла;
			КонецЦикла;
			
			Для каждого стр из ТабПакеты Цикл
				кол=1;
				Пока Кол<=стр.Количество цикл
					нстр=табНаклеек.Добавить();
					ЗаполнитьЗначенияСвойств(нстр,стр);
					нстр.ШК=ВРЕГ("KTY"+СокрЛП(стр.НомерBITRIX)+"V"+СоответствиеПоставщиковКодДпд.Получить(СокрЛП(стр.ПоставщикКод))+"V"+Соединение.ИнтернетМагазин.Транслитерация(СокрЛП(стр.НоменклатураКод))+"V"+кол);
					нстр.Номенклатура = СокрЛП(стр.Номенклатура)+" "+стр.Количество+"шт."+Символы.ПС;
					кол=стр.Количество;
					кол=кол+1;
				КонецЦикла;
			КонецЦикла;
			
			Аксы="";
			Для каждого стр из ТабАксы Цикл
				//ЗаполнитьЗначенияСвойств(нстр,стр);
				ШК=ВРЕГ("KTY"+СокрЛП(стр.НомерBITRIX)+"V"+СоответствиеПоставщиковКодДпд.Получить(СокрЛП(стр.ПоставщикКод))+"V"+Соединение.ИнтернетМагазин.Транслитерация(СокрЛП("AKS"))+"V"+1);
				Аксы=Аксы+СокрЛП(стр.Номенклатура)+" "+стр.Количество+"шт."+Символы.ПС;
			КонецЦикла;
			Если ТабАксы.Количество()>0 тогда
				нстр=табНаклеек.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,стр);
				нстр.Номенклатура = Аксы;
				нстр.ШК=ШК;
			КонецЕсли;
			
			Крепеж="";
			Для каждого стр из ТабКрепеж Цикл
				//ЗаполнитьЗначенияСвойств(нстр,стр);
				ШК=ВРЕГ("KTY"+СокрЛП(стр.НомерBITRIX)+"V"+СоответствиеПоставщиковКодДпд.Получить(СокрЛП(стр.ПоставщикКод))+"V"+Соединение.ИнтернетМагазин.Транслитерация(СокрЛП("KRP"))+"V"+1);
				Крепеж=Крепеж+СокрЛП(стр.Номенклатура)+" "+стр.Количество+"шт."+Символы.ПС;
			КонецЦикла;
			Если ТабКрепеж.Количество()>0 тогда
				нстр=табНаклеек.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,стр);
				нстр.Номенклатура = Крепеж;
				нстр.ШК=ШК;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
КонецЕсли;
Для каждого стр из табНаклеек цикл
	если сокрЛП(стр.КомментарийДляСклада)<>"" тогда
		стр.Номенклатура="СМОТРИ КОММЕНТАРИЙ"+Символы.ПС+стр.Номенклатура;
	КонецЕсли;
КонецЦикла;

//табНаклеек.ВыбратьСтроку();
		
		
	//	Пока ВыборкаЗаказы.Следующий() Цикл
	//		кол=1;
	//		Пока Кол<=стр.Количество цикл
	//			нстр=табНаклеек.Добавить();
	//			//ЗаполнитьЗначенияСвойств(нстр,стр);
	//			нстр.ЗаказНомер=стр.ЗаказНомер;
	//			нстр.НоменклатураКод=стр.НоменклатураКод;
	//			нстр.ПоставщикКод=стр.ПоставщикКод;
	//			нстр.Количество=стр.Количество;
	//			нстр.Организация=стр.Организация;
	//			нстр.ТелефонКонтрагента=стр.ТелефонКонтрагента;
	//			нстр.Контрагент=стр.Контрагент;
	//			нстр.Номенклатура=стр.Номенклатура;
	//			нстр.НомерBITRIX=стр.НомерBITRIX;
	//			нстр.Поставщик=стр.Поставщик;
	//			нстр.АдресКуда=стр.АдресКуда;
	//			нстр.НаправлениеОтгрузки=стр.НаправлениеОтгрузки;

	//			//ШК=ВРЕГ("KTY"+СокрЛП(Выборка.НомерBITRIX)+"V"+ИнтернетМагазин.Транслитерация(СокрЛП(Выборка.ПоставщикКод))+"V"+ИнтернетМагазин.Транслитерация(СокрЛП(стр.Номенклатура.Код))+"V"+кол);
	//			Если стр.НовыйШК тогда 
	//				нстр.ШК=ВРЕГ("KTY"+СокрЛП(стр.НомерBITRIX)+"V"+СоответствиеПоставщиковКодДпд.Получить(СокрЛП(стр.ПоставщикКод))+"V"+Соединение.ИнтернетМагазин.Транслитерация(СокрЛП(стр.НоменклатураКод))+"V"+кол);
	//			Иначе	
	//				нстр.ШК=ВРЕГ("KTY"+СокрЛП(стр.НомерBITRIX)+"V"+Соединение.ИнтернетМагазин.Транслитерация(СокрЛП(стр.ПоставщикКод))+"V"+Соединение.ИнтернетМагазин.Транслитерация(СокрЛП(стр.НоменклатураКод))+"V"+кол);
	//			КонецЕсли;
	//			Если СокрЛП(стр.НоменклатураКод)="9178010" тогда  //пакеты идут как одно место
	//				кол=стр.Количество;
	//			КонецЕсли;
	//			
	//			кол=кол+1;
	//		КонецЦикла;
	//	КонецЦикла;
	//КонецЕсли;
	
	Макет         		= ПолучитьМакет("Макет");
	Наклейка = Макет.ПолучитьОбласть("Наклейка|Наклейка_В");
	НаклейкаГ = Макет.ПолучитьОбласть("Наклейка|Наклейка_В ");
	Разделитель = Макет.ПолучитьОбласть("Разделитель");
	//Параметры = новый Структура("СтолбцовНапечатано,СтрокНапечатано");
	ТабДокумент   = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_Наклейка";
	нпп=0;
	Для каждого стр из  ТабНаклеек цикл
		нпп=нпп+1;
		Наклейка.Параметры.Заполнить(стр);
		ОбШтрихКод=Наклейка.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = стр.ШК; 
		ОбШтрихКод.ТекстКода = СокрЛП(стр.ШК);
		
		НаклейкаГ.Параметры.Заполнить(стр);
		ОбШтрихКодГ=НаклейкаГ.Рисунки.ШК.Объект;
		ОбШтрихКодГ.Сообщение = стр.ШК; 
		ОбШтрихКодГ.ТекстКода = СокрЛП(стр.ШК);
		
		Если нпп%2=0 тогда
			ТабДокумент.Присоединить(Наклейка);
		Иначе
			ТабДокумент.Вывести(НаклейкаГ);
		КонецЕсли;
		Если нпп%2=0 тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЦикла;

	
	
	Соединение=неопределено;
	
	возврат ТабДокумент;
	
КонецФункции

функция ПолучитьСоединение(СтрокаСоединенияCOM="", v8="V82") Экспорт
	
	v8connect = Новый COMОбъект(v8+".ComConnector");
	Попытка
	Соединение = v8connect.Connect(СтрокаСоединенияCOM);
	#Если Клиент Тогда
	ТипБазы = "Ref=";  длТипаБазы=3;
	Если Найти(СтрокаСоединенияCOM,"File=")>0 тогда		
		ТипБазы = "File="; длТипаБазы=4;
	КонецЕсли;	
	имяБД = Прав(СтрокаСоединенияCOM,стрДлина(СтрокаСоединенияCOM) - найти(СтрокаСоединенияCOM,ТипБазы)-длТипаБазы);
	имяБД = Лев(имяБД, найти(имяБД,";")-1);
	Сообщить("Соединение с базой: "+имяБД+" - успешно установлено.", СтатусСообщения.Информация);
	#КонецЕсли
	Исключение
	#Если Клиент Тогда
		Сообщить("Ошибка соединения с базой: " + ОписаниеОшибки(), СтатусСообщения.Внимание);
	#КонецЕсли
		Возврат неопределено;
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

СоответствиеПоставщиковКодДпд=новый Соответствие; //для ШК Дпд, что бы шк был поменьше
СоответствиеПоставщиковКодДпд.Вставить("000092773","1");//Яршинторг - Ярославль
СоответствиеПоставщиковКодДпд.Вставить("УТ0000494","2");//Яршинторг Екб- Екб
СоответствиеПоставщиковКодДпд.Вставить("Ф00000010","3");//Яршинторг Рнд- Рнд
СоответствиеПоставщиковКодДпд.Вставить("П000835",  "4");//Яршинторг Спб- Спб
СоответствиеПоставщиковКодДпд.Вставить("УТИМ31438",  "6");//Яршинторг Мск- Мск

СоответствиеПоставщиковКодДпд.Вставить("УТ0000345","5");//Пауэр Мск
