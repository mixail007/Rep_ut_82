//ЗаказПокупателя
Функция ПечатьЗаказаПокупателя()
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";

   Макет = ПолучитьМакет("Заказ");

	// Выводим шапку накладной
	
		Если  СокрЛП(СсылкаНаОбъект.МаркаАвтомобиля)<>"" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Авто");
		ОбластьМакета.Параметры.Авто = СокрЛП(СсылкаНаОбъект.МаркаАвтомобиля);
		ОбластьМакета.Параметры.НомерАвто = СокрЛП(СсылкаНаОбъект.ГосНомерАвтомобиля);
		ОбластьМакета.Параметры.Пункт = СокрЛП(СсылкаНаОбъект.АдресДоставки);
		ТабДокумент.Вывести(ОбластьМакета);
		КОнецЕсли;
		 
	//СведенияОПоставщике = СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, Шапка.Дата);

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Заказ покупателя");
	//+++ Штрих-Код номера документа - февраль 2012
	// требуется установленная компонента 1CBarCode.exe
    	ОбШтрихКодСообщение = глТорговоеОборудование.ПолучитьШтрихКодПоДокументу(СсылкаНаОбъект);
		попытка
		ОбШтрихКод=ОбластьМакета.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
		КонецПопытки; 
	//+++)
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //+++ 16.04.2018 Задача № 44778 
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата), "ПолноеНаименование,");
	иначе	
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	КонецЕсли;	
	ОбластьМакета.Параметры.ПоставщикТекст = "Поставщик:";//+++
	ТабДокумент.Вывести(ОбластьМакета);

	//СведенияОПолучателе = СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //+++ 16.04.2018 Задача № 44778 
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.КОнтрагент, СсылкаНаОбъект.Дата), "ПолноеНаименование,");
	Иначе
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.КОнтрагент, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	КонецЕсли;	
	ОбластьМакета.Параметры.ПокупательТекст = "Покупатель:";
	ТабДокумент.Вывести(ОбластьМакета);

		
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказПокупателя", СсылкаНаОбъект);
	                         //ОТБОРСКЛАД
	Запрос.Текст = 	"ВЫБРАТЬ
	               	|	ЕСТЬNULL(ЗаказПокупателяТовары.НомерСтроки, 1000) КАК НомерСтроки,
	               	|	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	               	|	ЗаказыПокупателейОстатки.КоличествоОстаток КАК КОличествоЗаказано,
	               	|	ВЫБОР
	               	|		КОГДА ТоварыНаСкладахОстатки.Склад.АдресноеХранение
	               	|			ТОГДА ЕСТЬNULL(ТоварыАдресноеХранениеОстатки.КоличествоОстаток, 0)
	               	|		ИНАЧЕ ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
	               	|	КОНЕЦ КАК КоличествоОстаток,
	               	|	ТоварыНаСкладахОстатки.Склад КАК Склад,
	               	|	""ЗакПок"" КАК типСклада,
	               	|	ВЫБОР
	               	|		КОГДА ТоварыНаСкладахОстатки.Склад.АдресноеХранение
	               	|			ТОГДА ТоварыАдресноеХранениеОстатки.АдресХранения
	               	|		ИНАЧЕ """"
	               	|	КОНЕЦ КАК Адрес,
					|	ЕСТЬNULL(ТоварыАХдругие.КоличествоОстаток,0) как  КоличествоВАдресе
	               	|ИЗ
	               	|	РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя = &ЗаказПокупателя) КАК ЗаказыПокупателейОстатки
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, //ОТБОРСКЛАД
					|НЕ склад.ЗапретитьИспользование) КАК ТоварыНаСкладахОстатки
			     	|		ПО ЗаказыПокупателейОстатки.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	          		
					
	               	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыАдресноеХранение.Остатки(, //ОТБОРСКЛАД
					|НЕ склад.ЗапретитьИспользование) КАК ТоварыАдресноеХранениеОстатки
	               	|			ПО ТоварыНаСкладахОстатки.Склад = ТоварыАдресноеХранениеОстатки.Склад
	               	|				И ТоварыНаСкладахОстатки.Номенклатура = ТоварыАдресноеХранениеОстатки.Номенклатура
					
//---------------------------ДРУГИЕ ТОВАРЫ-----------------------------------					
					|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыАдресноеХранение.Остатки(, //ОТБОРСКЛАД
					|НЕ склад.ЗапретитьИспользование) КАК ТоварыАХдругие
	               	|			ПО ТоварыАдресноеХранениеОстатки.Склад = ТоварыАХдругие.Склад
                    |              и ТоварыАдресноеХранениеОстатки.АдресХранения = ТоварыАХдругие.АдресХранения
					
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               	|			ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	               	|			ЗаказПокупателяТовары.НомерСтроки КАК НомерСтроки
	               	|		ИЗ
	               	|			Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               	|		ГДЕ
	               	|			ЗаказПокупателяТовары.Ссылка = &ЗаказПокупателя) КАК ЗаказПокупателяТовары
	               	|		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказПокупателяТовары.Номенклатура
	               	|
	               	|ОБЪЕДИНИТЬ ВСЕ
	               	|
	               	|ВЫБРАТЬ
	               	|	ЕСТЬNULL(ЗаказПокупателяТовары.НомерСтроки, 1000),
	               	|	ЗаказыПокупателейОстатки.Номенклатура,
	               	|	ЗаказыПокупателейОстатки.КоличествоОстаток,
	               	|	ЕСТЬNULL(ТоварыНаОтветственномХранении.КоличествоОстаток, 0),
	               	|	ЕСТЬNULL(ТоварыНаОтветственномХранении.Склад, 0),
	               	|	""ОТХ"",
	               	|	"""", 0
	               	|ИЗ
	               	|	РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя = &ЗаказПокупателя) КАК ЗаказыПокупателейОстатки
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(, //ОТБОРСКЛАД
					|НЕ склад.ЗапретитьИспользование) КАК ТоварыНаОтветственномХранении
	               	|		ПО ЗаказыПокупателейОстатки.Номенклатура = ТоварыНаОтветственномХранении.Номенклатура
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               	|			ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	               	|			ЗаказПокупателяТовары.НомерСтроки КАК НомерСтроки
	               	|		ИЗ
	               	|			Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               	|		ГДЕ
	               	|			ЗаказПокупателяТовары.Ссылка = &ЗаказПокупателя) КАК ЗаказПокупателяТовары
	               	|		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказПокупателяТовары.Номенклатура
	               	|
	               	|УПОРЯДОЧИТЬ ПО
	               	|	НомерСтроки,
	               	|	Склад,
					|	типСклада
	               	|ИТОГИ
	               	|	СРЕДНЕЕ(НомерСтроки),
	               	|	СРЕДНЕЕ(КОличествоЗаказано),
	               	|	СУММА(КоличествоОстаток)
	               	|ПО
	               	|	Номенклатура КАК Склад
	               	|АВТОУПОРЯДОЧИВАНИЕ";
				   
		   

		   Если //ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") 
			   //И ЗначениеЗаполнено(глТекущийПользователь.ОсновноеПодразделение) Тогда
			   СсылкаНаОбъект.Транзит тогда
			   Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ОТБОРСКЛАД"," (Склад.Транзитный И Склад.Подразделение=&Подразделение) и ");
			   Запрос.УстановитьПараметр("Подразделение", СсылкаНаОбъект.Подразделение); //+++ 30.09.2013
		   Иначе
			   Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ОТБОРСКЛАД"," (НЕ Склад.Транзитный) и "); 
		   КонецЕсли;	   
	
	
	Результат = Запрос.Выполнить();
	
	КоличествоСтрок=0;
	КоличествоЗаказаноИтого=0;
	КоличествоLegeArtis=0;
	Если не Результат.Пустой() Тогда
	//ТабДокумент.Вывести(ОбластьМакета);
	//ТабДокумент.НачатьАвтогруппировкуСтрок();

	ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    КоррСтр=0;

	Пока ВыборкаНоменклатура.Следующий() Цикл
		КоличествоСтрок=КоличествоСтрок+1;
		КоличествоЗаказаноИтого=КоличествоЗаказаноИтого+ВыборкаНоменклатура.КоличествоЗаказано;
		ОбластьНоменклатура=Макет.ПолучитьОбласть("Строка");
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		Если Найти (ВыборкаНоменклатура.Номенклатура.Наименование,"LegeArtis" ) >0 ИЛИ Найти (ВыборкаНоменклатура.Номенклатура.Наименование,"YST" )>0 Тогда
			КоличествоLegeArtis=КоличествоLegeArtis+ВыборкаНоменклатура.КоличествоЗаказано;
		КонецЕсли;
		ОбластьНоменклатура.Параметры.Склад	="";
		ОбластьНоменклатура.Параметры.Код		=ВыборкаНоменклатура.Номенклатура.Код;
		ОбластьНоменклатура.Параметры.Артикул	=СокрЛП(ВыборкаНоменклатура.Номенклатура.Артикул);
		//+++ 27.10.2011
		Если ВыборкаНоменклатура.НомерСтроки=1000 тогда
			КоррСтр=КоррСтр+1;
			ОбластьНоменклатура.Параметры.НомерСтроки = СсылкаНаОбъект.Товары.Количество()+КоррСтр;
		КонецЕсли;
	
		//НайдСтрока= РезультатТаблица.Найти(ВыборкаНоменклатура.НомерСтроки, "НомерСтроки");
		//Если НайдСтрока<> Неопределено Тогда
		//	ОбластьНоменклатура.Параметры.КоличествоЗаказано = НайдСтрока.Количество;
		//КонецЕсли;
	
		

		ВыборкаСклад = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Если ВыборкаСклад.Количество()= 1 Тогда
		ВыборкаСклад.Следующий(); 	
		ОбластьНоменклатура.Параметры.Склад	= ВыборкаСклад.Склад;
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());	
		ИначеЕсли ВыборкаСклад.Количество()>0 Тогда
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());	
		Пока ВыборкаСклад.Следующий() Цикл
			//+++ 19.03.2012
			Если ВыборкаСклад.ТипСклада = "ОТХ" тогда
				ОбластьСклад=Макет.ПолучитьОбласть("Строка2");
				ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
				ОбластьСклад.Параметры.Склад = ВыборкаСклад.Склад;
				ОбластьСклад.Параметры.КолОтгружено = "X";
			иначе	
				ОбластьСклад=Макет.ПолучитьОбласть("Строка1");
				ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
				если ВыборкаСклад.Адрес<>"" тогда
					//09.12.2015
					если ВыборкаСклад.КоличествоВАдресе>ВыборкаСклад.КоличествоОстаток тогда
	 					ОбластьСклад.Параметры.Склад = строка(ВыборкаСклад.Склад)+": "+строка(ВыборкаСклад.Адрес)
						+"(+"+формат(ВыборкаСклад.КоличествоВАдресе-ВыборкаСклад.КоличествоОстаток,"ЧГ=0")+")";
						ОбластьСклад.Параметры.КоличествоОстаток = строка(ВыборкаСклад.КоличествоОстаток)+"*";
					иначе
						ОбластьСклад.Параметры.Склад = строка(ВыборкаСклад.Склад)+": "+строка(ВыборкаСклад.Адрес)
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
				ОбластьСклад.Параметры.Номенклатура="";
				ОбластьСклад.Параметры.КоличествоЗаказано="";
				ОбластьСклад.Параметры.НомерСтроки="";
				Если ВыборкаСклад.КоличествоОстаток>0  тогда //+++ 19.03.2012
				ТабДокумент.Вывести(ОбластьСклад, ВыборкаСклад.Уровень());
				КонецЕсли;
			КонецЦикла;
			
		Иначе //	ВыборкаСклад.Количество()<=0
			ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());
		КонецЕсли;
			
	КонецЦикла;

	
	КонецЕсли;

	ОбластьИтого=Макет.ПолучитьОбласть("Итого");
	ОбластьИтого.Параметры.КоличествоСтрок=КоличествоСтрок;
	ОбластьИтого.Параметры.КоличествоЗаказаноИтого=КоличествоЗаказаноИтого;
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьМакета=Макет.ПолучитьОбласть("Примечание");
	ОбластьМакета.Параметры.Комментарий=СсылкаНаОбъект.Комментарий+ ?(КоличествоLegeArtis>0," , Всего дисков YST и LegeArtis=" + Строка(КоличествоLegeArtis) ,"" );
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета=Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьМакета.Параметры.Менеджер=СсылкаНаОбъект.Ответственный;
	ОбластьМакета.Параметры.ФИОИсполнителя = ПолучитьКладовщика();
	ТабДокумент.Вывести(ОбластьМакета);
	

	
	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()

Функция ПечатьЗаказаПоОтвХранению()
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказОТХ";

   Макет = ПолучитьМакет("Заказ");

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Заказ по ответственному хранению");
	//+++ Штрих-Код номера документа - февраль 2012
	// требуется установленная компонента 1CBarCode.exe
    	ОбШтрихКодСообщение = глТорговоеОборудование.ПолучитьШтрихКодПоДокументу(СсылкаНаОбъект);
		попытка
		ОбШтрихКод=ОбластьМакета.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
		КонецПопытки; 
	//+++)
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //+++ 16.04.2018 Задача № 44778 
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата), "ПолноеНаименование,");
	иначе
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	КонецЕсли;	
	ОбластьМакета.Параметры.ПоставщикТекст = "Поставщик:";//+++
	ТабДокумент.Вывести(ОбластьМакета);

	//СведенияОПолучателе = СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //+++ 16.04.2018 Задача № 44778 
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.КОнтрагент, СсылкаНаОбъект.Дата), "ПолноеНаименование,");
	иначе
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.КОнтрагент, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	КонецЕсли;	
	ОбластьМакета.Параметры.ПокупательТекст = "Покупатель:";
	ТабДокумент.Вывести(ОбластьМакета);

		
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказПокупателя", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("Контрагент", СсылкаНаОбъект.Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", СсылкаНаОбъект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("СписокНоменклатуры", СсылкаНаОбъект.Товары.ВыгрузитьКолонку("Номенклатура") );
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ЗаказПокупателяТовары.НомерСтроки, 1000) КАК НомерСтроки,
	               |	ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	               |	ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	               |	ЕСТЬNULL(ЗаказыПокупателейОстатки.Склад, 0) КАК Склад,
	               |	ЕСТЬNULL(ЗаказПокупателяТовары.Количество, 0) - ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК КоличествоЗаказано,
	               |	""отх"" КАК типСклада
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	               |			,
	               |			Контрагент = &Контрагент
	               |				И ДоговорКонтрагента = &ДоговорКонтрагента
	               |				И Номенклатура В (&СписокНоменклатуры)) КАК ЗаказыПокупателейОстатки
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗаказПоОтветственномуХранениюТовары.Номенклатура КАК Номенклатура,
	               |			СУММА(ЗаказПоОтветственномуХранениюТовары.Количество) КАК Количество,
	               |			МИНИМУМ(ЗаказПоОтветственномуХранениюТовары.НомерСтроки) КАК НомерСтроки
	               |		ИЗ
	               |			Документ.ЗаказПоОтветственномуХранению.Товары КАК ЗаказПоОтветственномуХранениюТовары
	               |		ГДЕ
	               |			ЗаказПоОтветственномуХранениюТовары.Ссылка = &ЗаказПокупателя
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ЗаказПоОтветственномуХранениюТовары.Номенклатура) КАК ЗаказПокупателяТовары
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |				СУММА(ОперацияПоОтветственномуХранениюТовары.Количество) КАК Количество,
	               |				ОперацияПоОтветственномуХранениюТовары.Номенклатура КАК Номенклатура
	               |			ИЗ
	               |				Документ.ОперацияПоОтветственномуХранению.Товары КАК ОперацияПоОтветственномуХранениюТовары
	               |			ГДЕ
	               |				ОперацияПоОтветственномуХранениюТовары.Ссылка.ДокументОснование = &ЗаказПокупателя
	               |				И ОперацияПоОтветственномуХранениюТовары.Ссылка.Проведен
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ОперацияПоОтветственномуХранениюТовары.Номенклатура) КАК ВложенныйЗапрос
	               |			ПО ЗаказПокупателяТовары.Номенклатура = ВложенныйЗапрос.Номенклатура
	               |		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказПокупателяТовары.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки
	               |ИТОГИ
	               |	МИНИМУМ(НомерСтроки),
	               |	СУММА(КоличествоОстаток),
	               |	МИНИМУМ(КоличествоЗаказано)
	               |ПО
	               |	Номенклатура
	               |АВТОУПОРЯДОЧИВАНИЕ";
    	
		
	Результат = Запрос.Выполнить();
	
	КоличествоСтрок=0;
	КоличествоЗаказаноИтого=0;
	КоличествоLegeArtis=0;
	
	Если не Результат.Пустой() Тогда
	//ТабДокумент.Вывести(ОбластьМакета);
	//ТабДокумент.НачатьАвтогруппировкуСтрок();

	ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    КоррСтр=0;

	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ВыборкаНоменклатура.КоличествоЗаказано<=0 тогда // уже есть операция на данное количество!
			продолжить;
		КонецЕсли;
		
		КоличествоСтрок=КоличествоСтрок+1;
		КоличествоЗаказаноИтого=КоличествоЗаказаноИтого+ВыборкаНоменклатура.КоличествоЗаказано;
		ОбластьНоменклатура=Макет.ПолучитьОбласть("Строка");
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		Если Найти (ВыборкаНоменклатура.Номенклатура.Наименование,"LegeArtis" ) >0 Тогда
			КоличествоLegeArtis=КоличествоLegeArtis+ВыборкаНоменклатура.КоличествоЗаказано;
		КонецЕсли;
		ОбластьНоменклатура.Параметры.Склад	="";
		ОбластьНоменклатура.Параметры.Код	=ВыборкаНоменклатура.Номенклатура.Код;
		ОбластьНоменклатура.Параметры.Артикул	=СокрЛП(ВыборкаНоменклатура.Номенклатура.Артикул);
			//+++ 27.10.2011
		Если ВыборкаНоменклатура.НомерСтроки=1000 тогда
			КоррСтр=КоррСтр+1;
			ОбластьНоменклатура.Параметры.НомерСтроки = 1000 + КоррСтр; //СсылкаНаОбъект.Товары.Количество()+КоррСтр;
		КонецЕсли;
	
		//НайдСтрока= РезультатТаблица.Найти(ВыборкаНоменклатура.НомерСтроки, "НомерСтроки");
		//Если Найдтрока<> Неопределено Тогда
		//	ОбластьНоменклатура.Параметры.КоличествоЗаказано = НайдСтрока.Количество;
		//КонецЕсли;
	
		

		ВыборкаСклад = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Если ВыборкаСклад.Количество()= 1 Тогда
		ВыборкаСклад.Следующий(); 	
		ОбластьНоменклатура.Параметры.Склад	= ВыборкаСклад.Склад;
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());	
		ИначеЕсли ВыборкаСклад.Количество()>0 Тогда
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());	
		Пока ВыборкаСклад.Следующий() Цикл
			Если ВыборкаСклад.типСклада = "отх" тогда  
				ОбластьСклад=Макет.ПолучитьОбласть("Строка1");
				ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
			иначе
				ОбластьСклад=Макет.ПолучитьОбласть("Строка2");
				ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
				ОбластьСклад.Параметры.КолОтгружено = "X";
			КонецЕсли;
			
				ОбластьСклад.Параметры.Номенклатура="";
				ОбластьСклад.Параметры.КоличествоЗаказано="";
				ОбластьСклад.Параметры.НомерСтроки="";
				ТабДокумент.Вывести(ОбластьСклад, ВыборкаСклад.Уровень());
			КонецЦикла;
			
		Иначе //	ВыборкаСклад.Количество()<=0
			ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());
		КонецЕсли;
			
	КонецЦикла;

	
	КонецЕсли;

	ОбластьИтого=Макет.ПолучитьОбласть("Итого");
	ОбластьИтого.Параметры.КоличествоСтрок=КоличествоСтрок;
	ОбластьИтого.Параметры.КоличествоЗаказаноИтого=Окр(КоличествоЗаказаноИтого,3);
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьМакета=Макет.ПолучитьОбласть("Примечание");
	ОбластьМакета.Параметры.Комментарий=СсылкаНаОбъект.Комментарий+ ?(КоличествоLegeArtis>0," , Всего дисков LegeArtis=" + Строка(КоличествоLegeArtis) ,"" );
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета=Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьМакета.Параметры.Менеджер=СсылкаНаОбъект.Ответственный;
	ОбластьМакета.Параметры.ФИОИсполнителя = ПолучитьКладовщика();
	ТабДокумент.Вывести(ОбластьМакета);
	
	//Если КоличествоСтрок>0 и КоличествоСтрок<СсылкаНаОбъект.Товары.Количество() тогда
	//	Предупреждение("Количество строк в печатной форме - "+строка(КоличествоСтрок)+",
	//					|отличается от количества строк 
	//					|в документе - "+строка(СсылкаНаОбъект.Товары.Количество())+"!");
	//КонецЕсли;				

	
	Возврат ТабДокумент;

КонецФункции // ПечатьЗаказаПоОтвХранению()

Функция ПечатьВнутреннегоЗаказа()
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказВнутренний";

   Макет = ПолучитьМакет("Заказ");

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Внутренний Заказ");
	//+++ Штрих-Код номера документа - февраль 2012
	// требуется установленная компонента 1CBarCode.exe
    	ОбШтрихКодСообщение = глТорговоеОборудование.ПолучитьШтрихКодПоДокументу(СсылкаНаОбъект);
		попытка
		ОбШтрихКод=ОбластьМакета.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
		КонецПопытки; 
	//+++)
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //+++ 16.04.2018 Задача № 44778 
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата), "ПолноеНаименование,");
	иначе
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	КонецЕсли;
	ОбластьМакета.Параметры.ПоставщикТекст = "Поставщик:";//+++
	ТабДокумент.Вывести(ОбластьМакета);

	
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.ПокупательТекст = "Покупатель:";
	
	Если  ЗначениеЗаполнено(СсылкаНаОбъект.ДокументОснование) тогда
		Если Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование,"*")>0 тогда //+++ 16.04.2018 Задача № 44778 
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.ДокументОснование.КОнтрагент, СсылкаНаОбъект.Дата), "ПолноеНаименование,");
		иначе
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.ДокументОснование.КОнтрагент, СсылкаНаОбъект.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
        КонецЕсли;
	иначе
		ОбластьМакета.Параметры.ПредставлениеПолучателя = СсылкаНаОбъект.Заказчик;
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьМакета);

		
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказПокупателя", СсылкаНаОбъект);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	МИНИМУМ(ЕСТЬNULL(ЗаказПокупателяТовары.НомерСтроки, 1000)) КАК НомерСтроки,
	               |	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	               |	СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК КОличествоЗаказано,
	               |	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)) КАК КоличествоОстаток,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.Склад, 0) КАК Склад
	               |ИЗ
	               |	РегистрНакопления.ВнутренниеЗаказы.Остатки(, ВнутреннийЗаказ = &ЗаказПокупателя) КАК ЗаказыПокупателейОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	               |		ПО ЗаказыПокупателейОстатки.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВнутреннийЗаказТовары.Номенклатура КАК Номенклатура,
	               |			ВнутреннийЗаказТовары.НомерСтроки КАК НомерСтроки
	               |		ИЗ
	               |			Документ.ВнутреннийЗаказ.Товары КАК ВнутреннийЗаказТовары
	               |		ГДЕ
	               |			ВнутреннийЗаказТовары.Ссылка = &ЗаказПокупателя) КАК ЗаказПокупателяТовары
	               |		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказПокупателяТовары.Номенклатура
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПокупателейОстатки.Номенклатура,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.Склад, 0)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	МИНИМУМ(ЕСТЬNULL(ЗаказПокупателяТовары.НомерСтроки, 1000)),
	               |	ЗаказыПокупателейОстатки.Номенклатура,
	               |	СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток),
	               |	СУММА(ЕСТЬNULL(ТоварыНаОтветственномХранении.КоличествоОстаток, 0)),
	               |	ЕСТЬNULL(ТоварыНаОтветственномХранении.Склад, 0)
	               |ИЗ
	               |	РегистрНакопления.ВнутренниеЗаказы.Остатки(, ВнутреннийЗаказ = &ЗаказПокупателя) КАК ЗаказыПокупателейОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки КАК ТоварыНаОтветственномХранении
	               |		ПО ЗаказыПокупателейОстатки.Номенклатура = ТоварыНаОтветственномХранении.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВнутреннийЗаказТовары.Номенклатура КАК Номенклатура,
	               |			ВнутреннийЗаказТовары.НомерСтроки КАК НомерСтроки
	               |		ИЗ
	               |			Документ.ВнутреннийЗаказ.Товары КАК ВнутреннийЗаказТовары
	               |		ГДЕ
	               |			ВнутреннийЗаказТовары.Ссылка = &ЗаказПокупателя) КАК ЗаказПокупателяТовары
	               |		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказПокупателяТовары.Номенклатура
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПокупателейОстатки.Номенклатура,
	               |	ЕСТЬNULL(ТоварыНаОтветственномХранении.Склад, 0)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки,
	               |	Склад
	               |ИТОГИ
	               |	МИНИМУМ(НомерСтроки),
	               |	СРЕДНЕЕ(КОличествоЗаказано),
	               |	СУММА(КоличествоОстаток)
	               |ПО
	               |	Номенклатура КАК Номенклатура
	               |АВТОУПОРЯДОЧИВАНИЕ";
    	
		
	Результат = Запрос.Выполнить();
	
	КоличествоСтрок=0;
	КоличествоЗаказаноИтого=0;
	КоличествоLegeArtis=0;
	
	Если не Результат.Пустой() Тогда
	//ТабДокумент.Вывести(ОбластьМакета);
	//ТабДокумент.НачатьАвтогруппировкуСтрок();

	ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    КоррСтр=0;
	Пока ВыборкаНоменклатура.Следующий() Цикл
		КоличествоСтрок=КоличествоСтрок+1;
		КоличествоЗаказаноИтого=КоличествоЗаказаноИтого+ВыборкаНоменклатура.КоличествоЗаказано;
		ОбластьНоменклатура=Макет.ПолучитьОбласть("Строка");
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		Если Найти (ВыборкаНоменклатура.Номенклатура.Наименование,"LegeArtis" ) >0 Тогда
			КоличествоLegeArtis=КоличествоLegeArtis+ВыборкаНоменклатура.КоличествоЗаказано;
		КонецЕсли;
		ОбластьНоменклатура.Параметры.Склад	="";
		ОбластьНоменклатура.Параметры.Код	=ВыборкаНоменклатура.Номенклатура.Код;
		ОбластьНоменклатура.Параметры.Артикул	=СокрЛП(ВыборкаНоменклатура.Номенклатура.Артикул);
			//+++ 27.10.2011
		Если ВыборкаНоменклатура.НомерСтроки=1000 тогда
			КоррСтр=КоррСтр+1;
			ОбластьНоменклатура.Параметры.НомерСтроки = СсылкаНаОбъект.Товары.Количество()+КоррСтр;
		КонецЕсли;
	
		//НайдСтрока= РезультатТаблица.Найти(ВыборкаНоменклатура.НомерСтроки, "НомерСтроки");
		//Если НайдСтрока<> Неопределено Тогда
		//	ОбластьНоменклатура.Параметры.КоличествоЗаказано = НайдСтрока.Количество;
		//КонецЕсли;
	
		

		ВыборкаСклад = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Если ВыборкаСклад.Количество()= 1 Тогда
		ВыборкаСклад.Следующий(); 	
		ОбластьНоменклатура.Параметры.Склад	= ВыборкаСклад.Склад;
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());	
		ИначеЕсли ВыборкаСклад.Количество()>0 Тогда
		ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());	
		Пока ВыборкаСклад.Следующий() Цикл
			ОбластьСклад=Макет.ПолучитьОбласть("Строка1");
				ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
				ОбластьСклад.Параметры.Номенклатура="";
				ОбластьСклад.Параметры.КоличествоЗаказано="";
				ОбластьСклад.Параметры.НомерСтроки="";
				ТабДокумент.Вывести(ОбластьСклад, ВыборкаСклад.Уровень());
			КонецЦикла;
			
		Иначе //	ВыборкаСклад.Количество()<=0
			ТабДокумент.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());
		КонецЕсли;
			
	КонецЦикла;

	
	КонецЕсли;

	ОбластьИтого=Макет.ПолучитьОбласть("Итого");
	ОбластьИтого.Параметры.КоличествоСтрок=КоличествоСтрок;
	ОбластьИтого.Параметры.КоличествоЗаказаноИтого=КоличествоЗаказаноИтого;
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьМакета=Макет.ПолучитьОбласть("Примечание");
	ОбластьМакета.Параметры.Комментарий=СсылкаНаОбъект.Комментарий+ ?(КоличествоLegeArtis>0," , Всего дисков LegeArtis=" + Строка(КоличествоLegeArtis) ,"" );
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета=Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьМакета.Параметры.Менеджер=СсылкаНаОбъект.Ответственный;
	ОбластьМакета.Параметры.ФИОИсполнителя = ПолучитьКладовщика();
	ТабДокумент.Вывести(ОбластьМакета);
	

	
	Возврат ТабДокумент;

КонецФункции // ПечатьВнутреннегоЗаказа()


Функция ПолучитьКладовщика()
   рез = "Фролов А.И.";
   регСв = неопределено;
   
   Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ЗаказПокупателя") тогда
   	регСв = РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(ТекущаяДата(), новый Структура("СтруктурнаяЕдиница",СсылкаНаОбъект.Склад) );
   ИначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ВнутреннийЗаказ") тогда
   	регСв = РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(ТекущаяДата(), новый Структура("СтруктурнаяЕдиница",СсылкаНаОбъект.Заказчик) );
   КонецЕсли;

   Если регСв <> неопределено тогда
	  рез = регСв.ФизическоеЛицо.Наименование;
   КонецЕсли;		 
   возврат рез;
КонецФункции


// общая процедура печати
функция Печать() Экспорт
	ТабДокумент = неопределено;
Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) тогда
	#Если Клиент тогда
	Предупреждение("Не выбран документ!", 30);		
	#КонецЕсли
КонецЕсли;

	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя")	тогда
		Если константы.ИспользованиеРезерваНаСкладах.Получить()                                        
			и СсылкаНаОбъект.Подразделение=справочники.Подразделения.НайтиПоКоду("00005") тогда
			#Если Клиент тогда
				Предупреждение("    ЭТУ ФОРМУ - НЕ ПЕЧАТАТЬ!
				|Отгрузки формируются из документа ""Задание на отгрузку""!",30);
			#КонецЕсли	
		КонецЕсли;

		//+++( 20.11.2014
		Если СсылкаНаОбъект.Контрагент.ЗапретОтгрузки тогда
			#Если Клиент тогда
			Предупреждение("         НЕЛЬЗЯ ОТГРУЖАТЬ ТОВАР!
						   |Клиенту "+строка(СсылкаНаОбъект.Контрагент)+" - Запрещены любые отгрузки!", 30);
			#КонецЕсли	
			возврат неопределено;
		КонецЕсли;

		Отказ = ЛОЖЬ;
		ПроверитьПревышениеОбщегоЛимитаДЗСУчетомЗаказа(СсылкаНаОбъект, Отказ);
		если Отказ тогда
			#Если Клиент тогда
			Предупреждение("	         НЕЛЬЗЯ ОТГРУЖАТЬ ТОВАР!
							|Долг клиента: "+строка(СсылкаНаОбъект.Контрагент)+"
							|Превышает Допустимый Лимит Дебиторской Задолжности!
							|
							|Клиент должен сначала оплатить хотя бы часть долга,
							|который уже превышает "+строка(СсылкаНаОбъект.Контрагент.ДопустимаяСуммаЗадолженности)+" руб.
							|и только после оплаты - будет возможна новая отгрузка!",60);
			#КонецЕсли	
			Возврат Неопределено;
		КонецЕсли;	
		//+++)
		
	  	ТабДокумент = ПечатьЗаказаПокупателя();
			
	иначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ВнутреннийЗаказ") тогда
			Если константы.ИспользованиеРезерваНаСкладах.Получить() 
			и СсылкаНаОбъект.Подразделение=справочники.Подразделения.НайтиПоКоду("00005") тогда
			#Если Клиент тогда
			Предупреждение("    ЭТУ ФОРМУ - НЕ ПЕЧАТАТЬ!
			|Отгрузки формируются из документа ""Задание на отгрузку""!",30);
			#КонецЕсли  
		    КонецЕсли;
	
	//+++( 20.11.2014
	Если  ТипЗнч(СсылкаНаОбъект.ДокументОснование) = Тип("ДокументСсылка.ЗаказПокупателя") тогда
		Если СсылкаНаОбъект.ДокументОснование.Контрагент.ЗапретОтгрузки тогда
			#Если Клиент тогда
			Предупреждение("         НЕЛЬЗЯ ОТГРУЖАТЬ ТОВАР!
						   |Клиенту "+строка(СсылкаНаОбъект.ДокументОснование.Контрагент)+" - Запрещены любые отгрузки!", 30);
			#КонецЕсли  
			возврат неопределено;
		КонецЕсли;

		Отказ = ЛОЖЬ;
		ПроверитьПревышениеОбщегоЛимитаДЗСУчетомЗаказа(СсылкаНаОбъект.ДокументОснование, Отказ);
		если Отказ тогда
			#Если Клиент тогда
			Предупреждение("	         НЕЛЬЗЯ ОТГРУЖАТЬ ТОВАР!
							|Долг клиента: "+строка(СсылкаНаОбъект.ДокументОснование.Контрагент)+"
							|Превышает Допустимый Лимит Дебиторской Задолжности!
							|
							|Клиент должен сначала оплатить хотя бы часть долга,
							|который уже превышает "+строка(СсылкаНаОбъект.ДокументОснование.Контрагент.ДопустимаяСуммаЗадолженности)+" руб.
							|и только после оплаты - будет возможна новая отгрузка!",60);
			#КонецЕсли  
			Возврат Неопределено;
		КонецЕсли;	
	КонецЕсли;
	//+++)
	
		ТабДокумент = ПечатьВнутреннегоЗаказа();	  
			
	иначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПоОтветственномуХранению") тогда  //тут ничего не проверяем!
		  ТабДокумент = ПечатьЗаказаПоОтвХранению();	  
	КонецЕсли;
	
 возврат ТабДокумент;
 
КонецФункции