Функция Печать() Экспорт
	
	Если Не Метаданные.Имя = "УправлениеТорговлей" Тогда
		Сообщить("Печатная форма предназначена для использования в конфигурации ""Управление торговлей""", СтатусСообщения.Внимание);
	КонецЕсли;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТОваров") Тогда
		Возврат ПечатьМ15();
		
	КонецЕсли;
	
КонецФункции // Печать

Функция ПечатьМ15() Экспорт
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект.Ссылка) или 
		НЕ ЗначениеЗаполнено(СсылкаНаОбъект.Ссылка.ВнутреннийЗаказ) или
		НЕ ЗначениеЗаполнено(СсылкаНаОбъект.Ссылка.ВнутреннийЗаказ.ДокументОснование) тогда
		Сообщить("Форма М-15 формируется только для перемещений c заполненным полем ""Внутренний заказ"", который создан на основании ""Заказа покупателя""!", СтатусСообщения.Внимание);
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СсылкаНаОбъект.СкладОтправитель);
	Запрос.УстановитьПараметр("ТекущийДокумент",    СсылкаНаОбъект.Ссылка); //ЭтотОбъект.Ссылка);
	ВалютаПечати = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка,
	|	ПеремещениеТоваров.Номер,
	|	ПеремещениеТоваров.Дата КАК ДатаСоставления,
	|	ПеремещениеТоваров.Дата КАК ДатаДокумента,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ПеремещениеТоваров.Организация КАК ЮрФизЛицо,
	|	ПеремещениеТоваров.Организация КАК Руководители,
	|	ПеремещениеТоваров.СкладОтправитель КАК СкладНаименование,
	|	ПеремещениеТоваров.СкладОтправитель.Наименование КАК ОтправительНаименование,
	|	ПеремещениеТоваров.СкладПолучатель КАК Получатель,
	|	ПеремещениеТоваров.ВнутреннийЗаказ.ДокументОснование.Контрагент.НаименованиеПолное КАК КонтрагентНаименование
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	  УстановочнаяЦена = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005");   //Кр.Опт.
	//УстановочнаяЦена = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00018"); //Кр.Опт. СПб
	
	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокументЗакПок", СсылкаНаОбъект.Ссылка.ВнутреннийЗаказ.ДокументОснование);
//	ЗапросПоТоварам.УстановитьПараметр("ТипЦен", УстановочнаяЦена);
	
	ВалютаУпрУчета          = Константы.ВалютаУправленческогоУчета.Получить();
	Параметры               = ПолучитьКурсВалюты(ВалютаУпрУчета, СсылкаНаОбъект.Дата);
	КурсВалютыУпрУчета      = Параметры.Курс;
	КратностьВалютыУпрУчета = Параметры.Кратность;
	
	ЗапросПоТоварам.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	|		ЗаказПокупателяТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		СУММА(ЗаказПокупателяТовары.Количество) КАК Количество,
	|		МИНИМУМ(ЗаказПокупателяТовары.Цена) КАК Цена,
	|		"""" КАК Характеристика,
	|		"""" КАК Серия
	|	ИЗ
	|		Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|	ГДЕ
	|		ЗаказПокупателяТовары.Ссылка = &ТекущийДокументЗакПок
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаказПокупателяТовары.Номенклатура,
	|		ЗаказПокупателяТовары.ЕдиницаИзмерения) КАК ВложенныйЗапрос";
	
	Результат = ЗапросПоТоварам.Выполнить();
	ТаблицаТоваров = Результат.Выгрузить();
	ВыборкаСтрокТовары = Результат.Выбрать();
	
	Макет = ПолучитьМакет("М15");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_М15";
	
	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОбОрганизации);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.НомерДокумента           = ПолучитьНомерНаПечать(Шапка);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	//// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	НомерСтраницы   = 1;
	КоличествоСтрок = ВыборкаСтрокТовары.Количество();
	//
	//// Инициализация итогов в документе
	ИтогоКоличествоПринято = 0;
	ИтогоСуммаБезНДС = 0;
	ИтогоСуммаНДС    = 0;
	ИтогоВсегоСНДС   = 0;
	Ном              = 0;
	
	//Проверка, все ли товары тч документа попали в запрос
	Для каждого СтрокаТЧ ИЗ СсылкаНаОбъект.Товары Цикл
		НайденнаяСтрока = ТаблицаТоваров.Найти(СтрокаТЧ.Номенклатура);
		Если НайденнаяСтрока = Неопределено Тогда
			Сообщить("Для номенклатуры "+ СтрокаТЧ.Номенклатура + " не назначена Цена установочная! Строка не выведена в печатную форму!", СтатусСообщения.Важное);
		КонецЕсли;
	КонецЦикла;
	
	//// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	//// Выводим многострочную часть докмента
	ОбластьМакета  = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		
		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Ном = Ном + 1;
		
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;		
		
		Если НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
			НомерСтраницы	= НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		Количество 		= ВыборкаСтрокТовары.Количество;
		
		ОбластьМакета.Параметры.Количество		  = Количество;
		
		Если ВыборкаСтрокТовары.Количество = 0 Тогда
			Сумма = 0;
			Цена  = 0;
		Иначе
			Сумма = ВыборкаСтрокТовары.Количество * ВыборкаСтрокТовары.Цена;
			Сумма = ПересчитатьИзВалютыВВалюту(Сумма, ВалютаУпрУчета, ВалютаПечати, КурсВалютыУпрУчета, 1, КратностьВалютыУпрУчета, 1);
		КонецЕсли;
		
		ОбластьМакета.Параметры.СуммаСНДС = Сумма;
		СуммаНДС = Сумма  * 18/118;
		ОбластьМакета.Параметры.СуммаНДС = СуммаНДС;
		СуммаБезНДС = Сумма -  СуммаНДС;
		ОбластьМакета.Параметры.СуммаБезНДС = СуммаБезНДС;
		ОбластьМакета.Параметры.Цена = СуммаБезНДС / ВыборкаСтрокТовары.Количество;
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование) + ПредставлениеСерий(ВыборкаСтрокТовары);
		
		
		ТабДокумент.Вывести(ОбластьМакета);
		//	
		ИтогоКоличествоПринято = ИтогоКоличествоПринято + Количество;
		ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + СуммаБезНДС;
		ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + Сумма;
		
	КонецЦикла;
	
	// Выводим итоги по документу
	ОбластьПодвала.Параметры.Заполнить(Шапка);
	
	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	// Главный бухгалтер
	ОбластьПодвала.Параметры.ФИОГлавБухгалтера = Бухгалтер;
	
	ОбластьПодвала.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ОбластьПодвала.Параметры.СуммаПрописью = СформироватьСуммуПрописью(ИтогоВсегоСНДС, мВалютаРегламентированногоУчета);
	ОбластьПодвала.Параметры.ИтогНДС       = Окр(ИтогоВсегоСНДС - ИтогоСуммаБезНДС,2);
	//
	ТабДокумент.Вывести(ОбластьПодвала);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ОтображатьСетку = Ложь;
	
	
	//Возврат ТабДокумент;
	ТабДокумент.Показать();
КонецФункции


