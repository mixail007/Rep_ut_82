Функция ПечатьCMR() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",  СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	Если  ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Номер,
		|	Дата         КАК ДатаДокумента,
		|	Организация,
		|	Организация  КАК ЮрФизЛицо,
		|	Организация  КАК Поставщик,
		|	Организация  КАК Контрагент,
		|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
		|	      ТОГДА ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
		|					  ТОГДА Контрагент
		|					  ИНАЧЕ КонтрагентДляПечати КОНЕЦ
		|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
		|	      ТОГДА Организация
		|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
		|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
		|		  ТОГДА Контрагент
		|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Покупатель,
		|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
		|		  ТОГДА Контрагент
		|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Плательщик
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";
		
	КонецЕсли;
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТоваровУслуг.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА РеализацияТоваровУслуг.КоличествоМест > 0
	|				ТОГДА РеализацияТоваровУслуг.КоличествоМест
	|			ИНАЧЕ РеализацияТоваровУслуг.Количество
	|		КОНЕЦ) КАК КоличествоМест,
	|	СУММА(РеализацияТоваровУслуг.Вес) КАК Вес
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслуг.Номенклатура";

	Если Реализации.Количество()>0 Тогда
		СпРеализаций = Реализации.ВыгрузитьКолонку("Реализация");
		Запрос.УстановитьПараметр("СпРеализаций",СпРеализаций);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент","РеализацияТоваровУслуг.Ссылка В (&СпРеализаций)");
	КонецЕсли;	
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = ПолучитьМакет("CMR");
	
	// Выводим общие реквизиты шапки
	
	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента);	
	
	СведенияОПокупателе       	  = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	
	СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	
	СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Данные");
	
	ОбластьМакета.Параметры.ОтправительНаименование       = СведенияОГрузоотправитель.ПолноеНаименование;
	ОбластьМакета.Параметры.ОтправительАдрес              = СведенияОГрузоотправитель.ЮридическийАдрес+", Россия";
	ОбластьМакета.Параметры.ПоПоручению             	  = "По поручению ООО ""Шинтрейд Ярославль""";
	
	ОбластьМакета.Параметры.ПолучательНаименование       = СведенияОГрузополучателе.ПолноеНаименование;
	ОбластьМакета.Параметры.ПолучательАдрес              = СведенияОГрузополучателе.ЮридическийАдрес;
	ОбластьМакета.Параметры.ПолучательСтрана             = СтранаРазгрузки;
	
	//Данные перевозчика
	ОбластьМакета.Параметры.ПеревозчикНаименование = СокрЛП(Перевозчик);
	ОбластьМакета.Параметры.ПеревозчикАдрес = СокрЛП(ПеревозчикАдрес);
	ОбластьМакета.Параметры.ПеревозчикИНН = ?(СокрЛП(ПеревозчикИНН)="","","ИНН "+СокрЛП(ПеревозчикИНН));

	Если СтрДлина(СокрЛП(ПунктРазгрузки)) < 50 Тогда
		ОбластьМакета.Параметры.МестоРазгрузки2            = ПунктРазгрузки;
	Иначе
		Стр1 = "";
		Стр2 = "";
		РазделитьНаДвеСтроки(ПунктРазгрузки, Стр1, Стр2);
 		ОбластьМакета.Параметры.МестоРазгрузки1 = Стр1;
		ОбластьМакета.Параметры.МестоРазгрузки2 = Стр2;
	КонецЕсли;
	
	ОбластьМакета.Параметры.СтранаРазгрузки            = СтранаРазгрузки;
	//весь пункт погрузки не влезает на одну строку.  Нужно разбить на две
	Если СтрДлина(СокрЛП(ПунктПогрузки)) < 50 Тогда
		ОбластьМакета.Параметры.МестоПогрузки2            = ПунктПогрузки;
	Иначе
		Стр1 = "";
		Стр2 = "";
		РазделитьНаДвеСтроки(ПунктПогрузки, Стр1, Стр2);
 		ОбластьМакета.Параметры.МестоПогрузки1 = Стр1;
		ОбластьМакета.Параметры.МестоПогрузки2 = Стр2;
	КонецЕсли;
	ОбластьМакета.Параметры.СтранаПогрузки            = "Россия";
	ОбластьМакета.Параметры.ДатаПогрузки            = Формат(Шапка.ДатаДокумента, "ДФ=dd.MM.yyyy");
	
	ОбластьМакета.Параметры.ПрилагаемыеДокументы = ПрилагаемыеДокументы;
	ОбластьМакета.Параметры.УказанияОтправителя = "";
	
	ОбластьМакета.Параметры.УсловиеПоставки = СсылкаНаОбъект.Сделка.УсловиеПоставкиНаЭкспорт;
	
	ОбластьМакета.Параметры.МестоСоставления         = "гор. Ярославль";
	ОбластьМакета.Параметры.ДатаСоставления         = Формат(Шапка.ДатаДокумента, "ДФ=dd.MM.yyyy");
	
	ОбластьМакета.Параметры.МаркаАвтомобиля           	  = СокрЛП(МаркаАвтомобиля);
	ОбластьМакета.Параметры.МаркаПрицепа           	  	  = СокрЛП(МаркаПрицепа);
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        	  = СокрЛП(ГосНомерАвтомобиля);
	ОбластьМакета.Параметры.ГосНомерПрицепа           	  = СокрЛП(ГосНомерПрицепа);
	
	ИтогоМест = 0;
	ИтогоВес = 0;
	РодУпаковки = "";
	НаименованиеГруза = "";
	//
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		ИтогоМест       = ИтогоМест + ВыборкаСтрок.КоличествоМест;
		//ИтогоМест       = ИтогоМест + ВыборкаСтрок.Количество;
		ИтогоВес        = ИтогоВес + ВыборкаСтрок.Вес;
		Если ВыборкаСтрок.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
			РодУпаковки = ?(Найти(РодУпаковки,"коробки")=0,РодУпаковки+"коробки, ",РодУпаковки);
			НаименованиеГруза = ?(Найти(НаименованиеГруза,"автомобильные диски")=0,НаименованиеГруза+"автомобильные диски, ",НаименованиеГруза);
		ИначеЕсли ВыборкаСтрок.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
			РодУпаковки = ?(Найти(РодУпаковки,"навалом")=0,РодУпаковки+"навалом, ",РодУпаковки);
			НаименованиеГруза = ?(Найти(НаименованиеГруза,"автомобильные шины")=0,НаименованиеГруза+"автомобильные шины, ",НаименованиеГруза);
		ИначеЕсли ВыборкаСтрок.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Аксессуары Тогда
			РодУпаковки = ?(Найти(РодУпаковки,"коробки")=0,РодУпаковки+"коробки, ",РодУпаковки);
			НаименованиеГруза = ?(Найти(НаименованиеГруза,"аксессуары")=0,НаименованиеГруза+"аксессуары, ",НаименованиеГруза);
		ИначеЕсли Найти(ВыборкаСтрок.Номенклатура.Наименование,"Болт") >0 или Найти(ВыборкаСтрок.Номенклатура.Наименование,"Гайка")>0  
			или Найти(ВыборкаСтрок.Номенклатура.Наименование,"Кольцо")>0 или Найти(ВыборкаСтрок.Номенклатура.Наименование,"Гаек")>0 Тогда
			РодУпаковки = ?(Найти(РодУпаковки,"коробки")=0,РодУпаковки+"коробки, ",РодУпаковки);
			НаименованиеГруза = ?(Найти(НаименованиеГруза,"Креп. материалы и комплектующие")=0,НаименованиеГруза+"Креп. материалы и комплектующие, ",НаименованиеГруза);
		КонецЕсли;	
	КонецЦикла;
	
	РодУпаковки = Лев(РодУпаковки, СтрДлина(РодУпаковки)-2);
	НаименованиеГруза = Лев(НаименованиеГруза, СтрДлина(НаименованиеГруза)-2);

	ОбластьМакета.Параметры.КолМест = ИтогоМест;
	ОбластьМакета.Параметры.РодУпаковки = РодУпаковки;
	ОбластьМакета.Параметры.НаименованиеГруза = НаименованиеГруза;
	ОбластьМакета.Параметры.ВесБрутто = ИтогоВес;  //должен быть вес брутто, а в программе вес нетто
	
	ОбластьМакета.Параметры.СтоимостьГруза = Формат(СтоимостьГруза,"ЧДЦ=2")+" "+СокрЛП(СсылкаНаОбъект.ВалютаДокумента);

	ТабДокумент.Вывести(ОбластьМакета);
		
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьCMR

Функция ПечатьCMR_ДваЯзыка() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",  СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	Если  ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Номер,
		|	Дата         КАК ДатаДокумента,
		|	Организация,
		|	Организация  КАК ЮрФизЛицо,
		|	Организация  КАК Поставщик,
		|	Организация  КАК Контрагент,
		|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
		|	      ТОГДА ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
		|					  ТОГДА Контрагент
		|					  ИНАЧЕ КонтрагентДляПечати КОНЕЦ
		|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
		|	      ТОГДА Организация
		|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
		|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
		|		  ТОГДА Контрагент
		|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Покупатель,
		|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
		|		  ТОГДА Контрагент
		|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Плательщик
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";
		
	КонецЕсли;
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТоваровУслуг.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА РеализацияТоваровУслуг.КоличествоМест > 0
	|				ТОГДА РеализацияТоваровУслуг.КоличествоМест
	|			ИНАЧЕ РеализацияТоваровУслуг.Количество
	|		КОНЕЦ) КАК КоличествоМест,
	|	СУММА(РеализацияТоваровУслуг.Вес) КАК Вес
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслуг.Номенклатура";

	Если Реализации.Количество()>0 Тогда
		СпРеализаций = Реализации.ВыгрузитьКолонку("Реализация");
		Запрос.УстановитьПараметр("СпРеализаций",СпРеализаций);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент","РеализацияТоваровУслуг.Ссылка В (&СпРеализаций)");
	КонецЕсли;
		
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = ПолучитьМакет("CMR");
	
	// Выводим общие реквизиты шапки
	
	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента);	
	
	СведенияОПокупателе       	  = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	
	СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	
	СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Данные");
	
	ОбластьМакета.Параметры.ОтправительНаименование       = "JSC TRADING COMPANY “YARSHINTORG”";
	ОбластьМакета.Параметры.ОтправительАдрес              = "YAROSLAVL 150044,RUSSIA, BAZOVAYA STR., 3,BUILDING.2";
	ОбластьМакета.Параметры.ПоПоручению             	  = "on behalf of the ShinTrade Yaroslavl Ltd";
	
	ОбластьМакета.Параметры.ПолучательНаименование       = СведенияОГрузополучателе.ПолноеНаименование;
	//ищем юридический адрес на аглийском языке
	//получаем юр.адрес на английском языке
	ВидАдресаЮрАнгл = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38846");
	РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",Шапка.Грузополучатель,Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдресаЮрАнгл));
	ОбластьМакета.Параметры.ПолучательАдрес              = РегАдреса.Представление;
	ОбластьМакета.Параметры.ПолучательСтрана             = РегАдреса.Поле1;

	Если СтрДлина(СокрЛП(ПунктРазгрузки)) < 50 Тогда
		ОбластьМакета.Параметры.МестоРазгрузки2            = ПунктРазгрузки;
	Иначе
		Стр1 = "";
		Стр2 = "";
		РазделитьНаДвеСтроки(ПунктРазгрузки, Стр1, Стр2);
 		ОбластьМакета.Параметры.МестоРазгрузки1 = Стр1;
		ОбластьМакета.Параметры.МестоРазгрузки2 = Стр2;
	КонецЕсли;
	
	ОбластьМакета.Параметры.СтранаРазгрузки            = СтранаРазгрузки;
	//весь пункт погрузки не влезает на одну строку.  Нужно разбить на две
	Если СтрДлина(СокрЛП(ПунктПогрузки)) < 50 Тогда
		ОбластьМакета.Параметры.МестоПогрузки2            = ПунктПогрузки;
	Иначе
		Стр1 = "";
		Стр2 = "";
		РазделитьНаДвеСтроки(ПунктПогрузки, Стр1, Стр2);
 		ОбластьМакета.Параметры.МестоПогрузки1 = Стр1;
		ОбластьМакета.Параметры.МестоПогрузки2 = Стр2;
	КонецЕсли;
	ОбластьМакета.Параметры.СтранаПогрузки            = "RUSSIA";
	ОбластьМакета.Параметры.ДатаПогрузки            = Формат(Шапка.ДатаДокумента, "ДФ=dd.MM.yyyy");
	
	ОбластьМакета.Параметры.ПрилагаемыеДокументы = ПрилагаемыеДокументы;
	ОбластьМакета.Параметры.УказанияОтправителя = "";
	
	ОбластьМакета.Параметры.УсловиеПоставки = СсылкаНаОбъект.Сделка.УсловиеПоставкиНаЭкспорт;
	
	ОбластьМакета.Параметры.МестоСоставления         = "Yaroslavl";
	ОбластьМакета.Параметры.ДатаСоставления         = Формат(Шапка.ДатаДокумента, "ДФ=dd.MM.yyyy");
	
	ОбластьМакета.Параметры.МаркаАвтомобиля           	  = СокрЛП(МаркаАвтомобиля);
	ОбластьМакета.Параметры.МаркаПрицепа           	  	  = СокрЛП(МаркаПрицепа);
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        	  = СокрЛП(ГосНомерАвтомобиля);
	ОбластьМакета.Параметры.ГосНомерПрицепа           	  = СокрЛП(ГосНомерПрицепа);
	
	ИтогоМест = 0;
	ИтогоВес = 0;
	РодУпаковки = "";
	НаименованиеГруза = "";
	//
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		ИтогоМест       = ИтогоМест + ВыборкаСтрок.КоличествоМест;
		//ИтогоМест       = ИтогоМест + ВыборкаСтрок.Количество;
		ИтогоВес        = ИтогоВес + ВыборкаСтрок.Вес;
		Если ВыборкаСтрок.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
			РодУпаковки = ?(Найти(РодУпаковки,"boxes")=0,РодУпаковки+"boxes, ",РодУпаковки);
			НаименованиеГруза = ?(Найти(НаименованиеГруза,"wheels")=0,НаименованиеГруза+"wheels, ",НаименованиеГруза);
		ИначеЕсли ВыборкаСтрок.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
			РодУпаковки = ?(Найти(РодУпаковки,"bulk")=0,РодУпаковки+"bulk, ",РодУпаковки);
			НаименованиеГруза = ?(Найти(НаименованиеГруза,"tires")=0,НаименованиеГруза+"tires, ",НаименованиеГруза);
		ИначеЕсли ВыборкаСтрок.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Аксессуары Тогда
			РодУпаковки = ?(Найти(РодУпаковки,"boxes")=0,РодУпаковки+"boxes, ",РодУпаковки);
			НаименованиеГруза = ?(Найти(НаименованиеГруза,"accessories")=0,НаименованиеГруза+"accessories, ",НаименованиеГруза);
  		КонецЕсли;
	КонецЦикла;
	РодУпаковки = Лев(РодУпаковки, СтрДлина(РодУпаковки)-2);
	НаименованиеГруза = Лев(НаименованиеГруза, СтрДлина(НаименованиеГруза)-2);

	ОбластьМакета.Параметры.КолМест = ИтогоМест;
	ОбластьМакета.Параметры.РодУпаковки = РодУпаковки;
	ОбластьМакета.Параметры.НаименованиеГруза = НаименованиеГруза;
	ОбластьМакета.Параметры.ВесБрутто = ИтогоВес;  //должен быть вес брутто, а в программе вес нетто
	
	ОбластьМакета.Параметры.СтоимостьГруза = Формат(СтоимостьГруза,"ЧДЦ=2")+" "+СокрЛП(СсылкаНаОбъект.ВалютаДокумента);

	ТабДокумент.Вывести(ОбластьМакета);
		
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьCMR_ДваЯзыка


Процедура РазделитьНаДвеСтроки(ТекСтр, Стр1, Стр2)
	
	Стр1 = "";
	Стр2 = СокрлП(ТекСтр);
	НомПоз = Найти(Стр2,",");
	Пока СтрДлина(Стр2)>50 и НомПоз <> 0 Цикл
		Стр1 = Стр1+Лев(Стр2, НомПоз);
		Стр2 = Сред(Стр2, НомПоз+1);
		НомПоз = Найти(Стр2,",");
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗаписатьДанныеВДокумент_олд()
	
	//ДокументОбъект = Документ.ПолучитьОбъект();
	////ДокументОбъект.ПунктРазгрузки 		= АдресДоставки;
	//ДокументОбъект.СрокДоставки   		= СрокДоставки;
	//ДокументОбъект.МаркаАвтомобиля 		= МаркаАвтомобиля;
	//ДокументОбъект.МаркаПрицепа			= МаркаПрицепа;
	//ДокументОбъект.ГосНомерАвтомобиля  	= ГосНомерАвтомобиля;
	//ДокументОбъект.ГосНомерПрицепа     	= ГосНомерПрицепа;
	//ДокументОбъект.ПунктПогрузки		= ПунктПогрузки;
	//ДокументОбъект.ПунктРазгрузки      	= ПунктРазгрузки;
	//ДокументОбъект.Водитель            	= Водитель;
	//ДокументОбъект.Перевозчик          	= Перевозчик;
	//ДокументОбъект.Заказчик            	= Заказчик;
	//ДокументОбъект.ВидПеревозки        	= ВидПеревозки;
	//ДокументОбъект.ВодительскоеУдостоверение = ВодительскоеУдостоверение;

	////ДокументОбъект.Записать();
	//
	//ДокументОбъект.Разблокировать();
	//
	//ДокументОбъект.Записать();
	//
	//Если Форма <> Неопределено Тогда
	//
	//	Оповестить("ТТН");	
	//
	//КонецЕсли; 
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Элемент)

	Если ЗначениеНеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если СсылкаНаОбъект.Контрагент.ДвуязычныйЭкспорт Тогда
		ТабДокумент = ПечатьCMR_ДваЯзыка();
	Иначе
		ТабДокумент = ПечатьCMR();
	КонецЕсли;
	ТабДокумент.Показать("CMR");
	//НапечататьДокумент(ТабДокумент, 1, Ложь, "Международная товарно-транспортная накладная");
	
	//ЗаписатьДанныеВДокумент();

КонецПроцедуры

Функция ПолучитьАдресИзКонтактнойИнформации_Лок(Объект, ТипАдреса = "")

	Если ЗначениеНеЗаполнено(ТипАдреса) Тогда
		Возврат "";
	КонецЕсли;

	Если ТипАдреса="Фактический" Тогда
		Начало = "Факт";
		
	ИначеЕсли ТипАдреса="Складской" Тогда
		Начало = "Складской";

	ИначеЕсли ТипАдреса="Регистрации"
		  ИЛИ ТипАдреса="Юридический" Тогда
		Начало = "Юр";
	Иначе
		Возврат "";
	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.Организации") Тогда
		Окончание = "организации";
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
		Окончание = "Контрагента";
	КонецЕсли;
	

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление,
	|	КонтактнаяИнформация.Вид
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект И
	|	КонтактнаяИнформация.Тип = &Тип
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ФактАдрес = "";
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			Если Выборка.Вид.Наименование = "Складской адрес организации" Тогда 
				Возврат Выборка.Представление;
			ИначеЕсли Выборка.Вид.Наименование = "Фактический адрес контрагента" Тогда
				ФактАдрес = Выборка.Представление;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	возврат ФактАдрес;

КонецФункции // ПолучитьАдресИзКонтактнойИнформации()


Процедура ПриОткрытии()
	
   ПриИзмененииДокумента();
	
КонецПроцедуры

Процедура ДокументПриИзменении(Элемент)
	
	ПриИзмененииДокумента();
		
КонецПроцедуры
	
Процедура ПриИзмененииДокумента()
	
	МаркаАвтомобиля 	= СсылкаНаОбъект.МаркаАвтомобиля;
	МаркаПрицепа		= СсылкаНаОбъект.МаркаПрицепа;
	ГосНомерАвтомобиля  = СсылкаНаОбъект.ГосНомерАвтомобиля;
	ГосНомерПрицепа     = СсылкаНаОбъект.ГосНомерПрицепа;
	ПунктПогрузки		= СсылкаНаОбъект.ПунктПогрузки;
	НомерНаПечать = СтрЗаменить(Строка(СсылкаНаОбъект.НомерФормулаАвто),Символы.НПП,"");

	Если ЗначениеЗаполнено(СсылкаНаОбъект.ГрузоПолучатель) Тогда
		ФактАдрес = ПолучитьДанныеКонтактнойИнформации_Страна(СсылкаНаОбъект.ГрузоПолучатель, Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
		СтранаРазгрузки = ?(ФактАдрес.Количество() = 0, "", ФактАдрес[0].Страна);
	ИначеЕсли ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент) Тогда
		ФактАдрес = ПолучитьДанныеКонтактнойИнформации_Страна(СсылкаНаОбъект.Контрагент, Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
		СтранаРазгрузки = ?(ФактАдрес.Количество() = 0, "", ФактАдрес[0].Страна);
	КонецЕсли;
	Если СсылкаНаОбъект.Контрагент.ДвуязычныйЭкспорт Тогда
		ВидАдресаФактАнгл = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38847");
        РегАдреса = РегистрыСведений.КонтактнаяИнформация.Получить(Новый Структура("Объект,Тип,Вид",?(ЗначениеЗаполнено(СсылкаНаОбъект.Грузополучатель), СсылкаНаОбъект.Грузополучатель, СсылкаНаОбъект.Контрагент),Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдресаФактАнгл));
		ПунктРазгрузки              = РегАдреса.Представление;
		СтранаРазгрузки             = РегАдреса.Поле1;
		ПунктПогрузки =  "YAROSLAVL 150044,RUSSIA, BAZOVAYA STR., 3,BUILDING.2";
	Иначе
		Если СокрЛП(СсылкаНаОбъект.АдресДоставки)<>"" и СокрЛП(СсылкаНаОбъект.ПунктРазгрузки)<>"" 
			и СокрЛП(СсылкаНаОбъект.АдресДоставки)<>СокрЛП(СсылкаНаОбъект.ПунктРазгрузки) тогда
			Сообщить("В документе: "+строка(СсылкаНаОбъект)+" указан ""Адрес доставки"" отличный от ""Пункта разгрузки"": "+СокрЛП(СсылкаНаОбъект.ПунктРазгрузки), СтатусСообщения.Внимание);
			Сообщить("В ТТН взят в первую очередь ""Адрес доставки"": "+СокрЛП(СсылкаНаОбъект.АдресДоставки), СтатусСообщения.Информация);
		КонецЕсли;	
		ЭтотОбъект.ПунктРазгрузки      	= ?(СокрЛП(СсылкаНаОбъект.АдресДоставки)="", СокрЛП(СсылкаНаОбъект.ПунктРазгрузки), СокрЛП(СсылкаНаОбъект.АдресДоставки) );
		//Если СокрЛП(СсылкаНаОбъект.ПунктРазгрузки)<>"" Тогда
		//	ПунктРазгрузки = СсылкаНаОбъект.ПунктРазгрузки;
		//ИначеЕсли СокрЛП(СсылкаНаОбъект.АдресДоставки)="" Тогда
		//	ПунктРазгрузки = ПолучитьАдресИзКонтактнойИнформации_Лок(?(ЗначениеЗаполнено(СсылкаНаОбъект.ГрузоПолучатель),СсылкаНаОбъект.ГрузоПолучатель,СсылкаНаОбъект.Контрагент), "Фактический");
		//Иначе	
		//	ПунктРазгрузки      = СсылкаНаОбъект.АдресДоставки; // АдресДоставки;
		//КонецЕсли;
	КонецЕсли;
	Водитель            = СсылкаНаОбъект.Водитель;
	Перевозчик          = СсылкаНаОбъект.Перевозчик;
	ПеревозчикАдрес = "";
	ПеревозчикИНН = "";
	
	Если Перевозчик <> "" Тогда
		ТекКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Контрагент
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(1000)) =  &НаименованиеПолное
		|	И Контрагенты.ПометкаУдаления = Ложь";
		Запрос.УстановитьПараметр("НаименованиеПолное", СокрЛП(Перевозчик));
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ТекКонтрагент = Выборка.Контрагент;
		КонецЕсли;	 
		Если ЗначениеЗаполнено(ТекКонтрагент) Тогда
			ПеревозчикИНН = ТекКонтрагент.ИНН;
			ПеревозчикАдрес = "РФ,"+ПолучитьАдресИзКонтактнойИнформации(ТекКонтрагент,"Юридический");
		КонецЕсли;
	КонецЕсли;
	
	Заказчик            = СсылкаНаОбъект.Заказчик;
	ВидПеревозки        = СсылкаНаОбъект.ВидПеревозки;
	Если НЕ ПустаяСтрока(ПолучитьАдресИзКонтактнойИнформации_Лок(СсылкаНаОбъект.Организация,"Складской")) И НЕ СсылкаНаОбъект.Контрагент.ДвуязычныйЭкспорт Тогда
		ЭлементыФормы.ПунктПогрузки.Значение = ПолучитьАдресИзКонтактнойИнформации_Лок(СсылкаНаОбъект.Организация,"Складской");
	КонецЕсли;
	
	//поиск прилагаемых документов
	Если СсылкаНаОбъект.Контрагент.ДвуязычныйЭкспорт Тогда
		ПрилагаемыеДокументы = "COMMERCIAL INVOICE № "+НомерНаПечать+" dtd "+Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
		ПрилагаемыеДокументы = ПрилагаемыеДокументы+Символы.ПС+"SPECIFICATION № "+НомерНаПечать+" dtd "+Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
		ПрилагаемыеДокументы = ПрилагаемыеДокументы+Символы.ПС+"PACKING LIST № "+НомерНаПечать+" dtd "+Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
	Иначе	
		ПрилагаемыеДокументы = "Товарная накладная № "+НомерНаПечать+" от "+Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy")+"г.";
		СсылкаСпецификация=НайтиПодчиненныйДокумент(СсылкаНаОбъект, "Спецификация");
		Если не ЗначениеНеЗаполнено(СсылкаСпецификация) Тогда
			ПрилагаемыеДокументы = ПрилагаемыеДокументы+Символы.ПС+"Спецификация № "+НомерНаПечать+" от "+Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy")+"г.";
		КонецЕсли;	
	КонецЕсли;
	Если СсылкаНаОбъект.СуммаВключаетНДС Тогда 
		СтоимостьГруза = СсылкаНаОбъект.Товары.Итог("Сумма");
	Иначе
		СтоимостьГруза = СсылкаНаОбъект.Товары.Итог("Сумма")+СсылкаНаОбъект.Товары.Итог("СуммаНДС");
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеКонтактнойИнформации_Страна(Объект, ТипИнформации = Неопределено, ВидИнформации = Неопределено) Экспорт

	Запрос = Новый Запрос;
	
	СтрокаВиртуальныхПараметров = "КонтактнаяИнформация.Объект = &Объект";
	
	Если ТипИнформации <> Неопределено Тогда
		СтрокаВиртуальныхПараметров = СтрокаВиртуальныхПараметров + " И КонтактнаяИнформация.Тип = &Тип";
		Запрос.УстановитьПараметр("Тип", ТипИнформации);
	КонецЕсли; 
	Если ВидИнформации <> Неопределено Тогда
		СтрокаВиртуальныхПараметров = СтрокаВиртуальныхПараметров + " И КонтактнаяИнформация.Вид = &Вид";
		Запрос.УстановитьПараметр("Вид", ВидИнформации);
	КонецЕсли; 
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Объект        КАК Объект,
	|	КонтактнаяИнформация.Вид           КАК Вид,
	|	КонтактнаяИнформация.Тип           КАК Тип,
	|	КонтактнаяИнформация.Представление КАК Представление,
	|	КонтактнаяИнформация.Поле1 КАК Страна
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|
	|ГДЕ
	|	" + СтрокаВиртуальныхПараметров + "
	|";
	
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
	Запрос.УстановитьПараметр("Объект"   , Объект);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеКонтактнойИнформации()

	

Процедура ПриЗакрытии()
	// Вставить содержимое обработчика.
	
	//ЗаписатьДанныеВДокумент();
	
КонецПроцедуры

Процедура ПеревозчикНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка= ЛОЖЬ;
	ТекКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(1000)) =  &НаименованиеПолное
	|	И Контрагенты.ПометкаУдаления = Ложь";
	Запрос.УстановитьПараметр("НаименованиеПолное", СокрЛП(Перевозчик));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекКонтрагент = Выборка.Контрагент;
	КонецЕсли;	 
	ФормаВыбораКонтрагента=Справочники.Контрагенты.ПолучитьФормуВыбора();
	ФормаВыбораКонтрагента.НачальноеЗначениеВыбора = ТекКонтрагент;
	ВыбКонтрагент=ФормаВыбораКонтрагента.ОткрытьМодально();
	Перевозчик=?(ЗначениеЗаполнено(ВыбКонтрагент),ВыбКонтрагент.НаименованиеПолное,"");
	Если ЗначениеЗаполнено(ВыбКонтрагент) Тогда
		ПеревозчикИНН = ВыбКонтрагент.ИНН;
		ПеревозчикАдрес = "РФ,"+ПолучитьАдресИзКонтактнойИнформации(ВыбКонтрагент,"Юридический");
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействиеЗаполнитьНажатие(Элемент)
	
	Нал = 0;
	Реализации.Очистить();
	Если Не ЗначениеНеЗаполнено(СсылкаНаОбъект) Тогда
		Запрос=Новый Запрос;      
		Запрос.Текст=
		"ВЫБРАТЬ
		|	РеализацияТУ.Номенклатура КАК Номенклатура,
		|	РеализацияТУ.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА НЕ РеализацияТУ.Ссылка.СуммаВключаетНДС
		|			ТОГДА РеализацияТУ.Сумма + РеализацияТУ.СуммаНДС
		|		ИНАЧЕ РеализацияТУ.Сумма
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА РеализацияТУ.КоличествоМест = 0
		|			ТОГДА РеализацияТУ.Количество
		|		ИНАЧЕ РеализацияТУ.КоличествоМест
		|	КОНЕЦ КАК КоличествоМест,
		|	РеализацияТУ.Количество КАК Количество,
		|	РеализацияТУ.Вес КАК Вес
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТУ
		|ГДЕ
		|	РеализацияТУ.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И РеализацияТУ.Ссылка.Подразделение = &Подразделение
		|	И РеализацияТУ.Ссылка.Контрагент = &Контрагент
		|	И НЕ РеализацияТУ.Ссылка.ДоговорКонтрагента.Наименование ПОДОБНО ""%*%""
		|	И РеализацияТУ.Ссылка.ДоговорКонтрагента.ТипДоговора = &ТипДоговора
		|	И РеализацияТУ.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РеализацияТУ.Ссылка.Проведен
		|ИТОГИ
		|	СУММА(Сумма),
		|	СУММА(КоличествоМест),
		|	СУММА(Количество),
		|	СУММА(Вес)
		|ПО
		|	Ссылка";
		Запрос.УстановитьПараметр("Подразделение",СсылкаНаОбъект.Подразделение);			 
		Запрос.УстановитьПараметр("Контрагент",СсылкаНаОбъект.Контрагент);			 
		Запрос.УстановитьПараметр("НачДата",НачалоДня(СсылкаНаОбъект.Дата));			 
		Запрос.УстановитьПараметр("КонДата",КонецДня(СсылкаНаОбъект.Дата));			 
		Запрос.УстановитьПараметр("ТипДоговора",Справочники.ТипыДоговоров.ШинтрейдЯрославль);
		Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		СтоимостьГруза = 0;
		НовНомерНаПечать = "";
		Пока Выборка.Следующий() Цикл
			СтрокаРеализации=Реализации.Добавить();
			СтрокаРеализации.Реализация = Выборка.Ссылка;
			СтрокаРеализации.Сумма      = Выборка.Сумма;
			СтрокаРеализации.Количество = Выборка.Количество;
			СтрокаРеализации.КоличествоМест = Выборка.КоличествоМест;
			СтрокаРеализации.Вес = Выборка.Вес;
			СтоимостьГруза = СтоимостьГруза+Выборка.Сумма;
			НовНомерНаПечать = НовНомерНаПечать+СтрЗаменить(Строка(Выборка.Ссылка.НомерФормулаАвто),Символы.НПП,"")+", ";
		КонецЦикла;	
		Если Выборка.Количество()>1 Тогда
			ПрилагаемыеДокументы = СтрЗаменить(ПрилагаемыеДокументы, СокрЛП(НомерНаПечать)+ " от", " от");
			НовНомерНаПечать = СокрЛП(НовНомерНаПечать);
			НовНомерНаПечать = Лев(НовНомерНаПечать,СтрДлина(НовНомерНаПечать)-1);
			ПрилагаемыеДокументы = СтрЗаменить(ПрилагаемыеДокументы,"Товарная накладная № ","Товарные накладные №№ "+НовНомерНаПечать);
			ПрилагаемыеДокументы = СтрЗаменить(ПрилагаемыеДокументы,"Спецификация № ", "Спецификации №№ "+НовНомерНаПечать);
			НомерНаПечать = НовНомерНаПечать;
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры
	
