Перем Логин, Пароль;
Функция Печать() Экспорт
	
	Если Не Метаданные.Имя = "УправлениеТорговлей" Тогда
		Сообщить("Печатная форма предназначена для использования в конфигурации ""Управление торговлей""", СтатусСообщения.Внимание);
	КонецЕсли;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Возврат ПечатьДвиженияЗаказа(ТипЗнч(СсылкаНаОбъект));
		
	КонецЕсли;
	
КонецФункции // Печать

Функция ПечатьДвиженияЗаказа(тип)
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_ДвиженияТК";
	//Таб = СсылкаНаОбъект.Товары.Выгрузить(,"Поставщик,ЗаказПеревозчика");
	//таб.Свернуть("Поставщик,ЗаказПеревозчика");
	
	таб = новый ТаблицаЗначений;
	таб.Колонки.Добавить("Поставщик");
	таб.Колонки.Добавить("ЗаказПеревозчика");
	
	нстр = таб.Добавить();
	нстр.Поставщик = СсылкаНаОбъект.Подразделение;
	нстр.ЗаказПеревозчика = СсылкаНаОбъект.НомерЗаказаТК;
	
	Макет = ПолучитьМакет("Макет");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаЗаказа = Макет.ПолучитьОбласть("шапкаТаблицы");
	ОбластьНомерЗаказа = Макет.ПолучитьОбласть("НомерЗаказа");
	ОбластьСтрока = Макет.ПолучитьОбласть("строка");
	
	ОбластьШапка.Параметры.Заказ=СсылкаНаОбъект;
	ОбластьШапка.Параметры.ЗаказИМ=СсылкаНаОбъект.НомерВходящегоДокумента;
	ТабДокумент.Вывести(ОбластьШапка);

	// Выводим шапку накладной

	Для каждого стр из таб цикл
		Если сокрЛП(стр.ЗаказПеревозчика)<> "" тогда
			НомерЗаказаДПД=стр.ЗаказПеревозчика;
			НомерЗаказаДПД = СтрЗаменить(НомерЗаказаДПД,"	","");
			НомерЗаказаДПД = СтрЗаменить(НомерЗаказаДПД,Символы.НПП,"");
			НомерЗаказаДПД = СтрЗаменить(НомерЗаказаДПД,Символы.ВК,"");
			НомерЗаказаДПД = СтрЗаменить(НомерЗаказаДПД,Символы.ВТаб,"");
			НомерЗаказаДПД = СтрЗаменить(НомерЗаказаДПД,Символы.ПС,"");
			НомерЗаказаДПД = СтрЗаменить(НомерЗаказаДПД,Символы.ПФ,"");
			НомерЗаказаДПД = СтрЗаменить(НомерЗаказаДПД,Символы.Таб,"");
			Если СсылкаНаОбъект.Контрагент.DPD_clientKey <>"" тогда
				Логин=СсылкаНаОбъект.Контрагент.DPD_clientNumber; 
				Пароль = СсылкаНаОбъект.Контрагент.DPD_clientKey; 
			Иначе
				Логин="1007003132"; //ЯШТ
				Пароль = "89CF47BC79EDDE98122968E978B4176783A774BC"; //ЯШТ
			КонецЕсли;
			xml = ЗаполнитьЗапросСостояния(номерЗаказаДПД);
			ИмяФайла = ПолучитьИмяВременногоФайла("xml");
			Ответдпд=ОтправитьЗапросWEBСервису(ИмяФайла,"http://ws.dpd.ru:80/services/tracing",xml);
			Если ответдпд="" тогда //ошибка
				Сообщить("Данные в систему ДПД еще не добавлены.");
				
			иначе	
				РезультатРазбора=РазобратьОтветgetStatesByDPDOrder(ИмяФайла);
			КонецЕсли;
			
						
			ОбластьНомерЗаказа.Параметры.НомерЗаказаДПД=НомерЗаказаДПД;
			ОбластьНомерЗаказа.Параметры.Отправитель=стр.Поставщик;
			
			ТабДокумент.Вывести(ОбластьНомерЗаказа);
			ТабДокумент.Вывести(ОбластьШапкаЗаказа);
			Если ответдпд<>"" тогда
				Для каждого стр из РезультатРазбора цикл
					ОбластьСтрока.Параметры.Заполнить(стр);
					ТабДокумент.Вывести(ОбластьСтрока);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции

Функция ЗаполнитьЗапросСостояния(номерЗаказаДПД)
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Envelope");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soap", "http://schemas.xmlsoap.org/soap/envelope/");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:nl","http://dpd.ru/ws/tracing/2011-11-18");
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Header"); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Body");
	ЗаписьXML.ЗаписатьНачалоЭлемента("nl:getStatesByDPDOrder");
	ЗаписьXML.ЗаписатьНачалоЭлемента("request");
	ЗаписьXML.ЗаписатьНачалоЭлемента("auth");
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientNumber");ЗаписьXML.ЗаписатьТекст(Логин);	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientKey");ЗаписьXML.ЗаписатьТекст(Пароль);ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();//auth
	ЗаписьXML.ЗаписатьНачалоЭлемента("dpdOrderNr");ЗаписьXML.ЗаписатьТекст(СокрЛП(номерЗаказаДПД));ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();

	ТекстXML = ЗаписьXML.Закрыть();
	Возврат ТекстXML;
	
КонецФункции

Функция ОтправитьЗапросWEBСервису(ИмяФайла,URL,ТекстXML,Таймаут = 50000)
	Если ПустаяСтрока(ТекстXML) Тогда
		Возврат "";
	КонецЕсли;
	WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	WinHttp.SetTimeouts(Таймаут, Таймаут, Таймаут, Таймаут);
	WinHttp.Option(2,"utf-8");
	WinHttp.Open("POST",URL);
	WinHttp.setRequestHeader("Content-Type","text/xml; charset=utf-8");
	Попытка
		WinHttp.Send(ТекстXML);
		Если WinHttp.Status = 200 Тогда
			Ответ=WinHttp.ResponseStream;
			Текст = новый ТекстовыйДокумент;
			Текст.ДобавитьСтроку(WinHttp.ResponseText());
			Текст.Записать(ИмяФайла,"UTF-8 "); 
			Возврат(Ответ);
		Иначе
			//#Если клиент тогда
			//	Сообщить("Ошибка сервера: " + WinHttp.Status + " " + WinHttp.ResponseText + " " + WinHttp.StatusText, СтатусСообщения.Важное);
			//#КонецЕсли
			Возврат("");
		КонецЕсли;
	Исключение
		#Если клиент тогда
			Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
		#КонецЕсли
		Возврат("");
	КонецПопытки;
КонецФункции

Функция РазобратьОтветgetStatesByDPDOrder(файл)
	стрДляВозврата = новый Структура("ЭтоКонец,Заказы,docId");
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(Файл);
	
	ТабЗаказы = новый ТаблицаЗначений;
	ТабЗаказы.Колонки.Добавить("dpdOrderNr", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(20)));
	ТабЗаказы.Колонки.Добавить("newState", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(20)));
	ТабЗаказы.Колонки.Добавить("transitionTime", Новый ОписаниеТипов("Дата"	, , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТабЗаказы.Колонки.Добавить("terminalCode", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(20)));
	ТабЗаказы.Колонки.Добавить("terminalCity", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100)));
	ТабЗаказы.Колонки.Добавить("planDeliveryDate", Новый ОписаниеТипов("Дата"	, , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТабЗаказы.Колонки.Добавить("incidentCode", Новый ОписаниеТипов("Число"));
	ТабЗаказы.Колонки.Добавить("incidentName", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(250)));
	ТабЗаказы.Колонки.Добавить("dpdOrderReNr", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(20)));

	ТабЗаказы.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	
	РезультатРазборки = Новый Массив;
	
	ЗаказыXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	Заказы = ЗаказыXDTO.Body.getStatesByDPDOrderResponse.return.states;
	
	Если ТипЗнч(Заказы)<>Тип("СписокXDTO") и ТипЗнч(Заказы)<>Тип("ОбъектXDTO") Тогда
		СписокXDTOЗаказы = Новый Массив;
		СписокXDTOЗаказы.Добавить(ЗаказыXDTO.return);
	ИначеЕсли ТипЗнч(Заказы)=Тип("ОбъектXDTO") тогда
		СписокXDTOЗаказы = Новый Массив;
		СписокXDTOЗаказы.Добавить(Заказы);
	иначе
		СписокXDTOЗаказы = Заказы;
	КонецЕсли;
	НомерСтроки=0;
	Для Каждого XDTOЗаказ из СписокXDTOЗаказы цикл
		НомерСтроки=НомерСтроки+1;
		нстр = ТабЗаказы.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,XDTOЗаказ);
		дат=XDTOЗаказ.transitionTime;
		дат=СтрЗаменить(дат,"-","");
		дат=СтрЗаменить(дат,":","");
		дат=СтрЗаменить(дат,"T","");
		нстр.transitionTime=Дата(дат);
		//
		дат=XDTOЗаказ.planDeliveryDate;
		дат=СтрЗаменить(дат,"-","");
		дат=СтрЗаменить(дат,":","");
		дат=СтрЗаменить(дат,"T","");
		нстр.planDeliveryDate=Дата(дат);
		
		нстр.НомерСтроки=НомерСтроки;
	КонецЦикла;
	
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	тзЗаказы.dpdOrderNr,
	             |	тзЗаказы.transitionTime,
	             |	тзЗаказы.newState,
	             |	тзЗаказы.terminalCode,
	             |	тзЗаказы.terminalCity,
	             |	тзЗаказы.planDeliveryDate,
	             |	тзЗаказы.incidentCode,
	             |	тзЗаказы.incidentName,
	             |	тзЗаказы.dpdOrderReNr,
	             |	тзЗаказы.НомерСтроки
	             |ПОМЕСТИТЬ втЗаказы
	             |ИЗ
	             |	&тзЗаказы КАК тзЗаказы
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втЗаказы.dpdOrderNr КАК НомерЗаказаДПД,
	             |	втЗаказы.transitionTime КАК ВремяИзменения,
	             |	втЗаказы.newState КАК СостояниеЗаказа,
	             |	втЗаказы.terminalCode КАК КодТерминала,
	             |	втЗаказы.terminalCity КАК ГородТерминала,
	             |	втЗаказы.planDeliveryDate КАК ПланируемаяДатаДоставки,
	             |	втЗаказы.incidentCode КАК КодИнцидента,
	             |	втЗаказы.incidentName КАК ИмяИнцидента,
	             |	втЗаказы.dpdOrderReNr КАК НомерЗаказаДПДНовый
	             |ИЗ
	             |	втЗаказы КАК втЗаказы
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	втЗаказы.transitionTime,
	             |	втЗаказы.НомерСтроки
	             |АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("тзЗаказы",ТабЗаказы);
	рез=Запрос.Выполнить().Выгрузить();
	Рез.Свернуть("НомерЗаказаДПД,ВремяИзменения,СостояниеЗаказа,КодТерминала,ГородТерминала,ПланируемаяДатаДоставки,КодИнцидента,ИмяИнцидента,НомерЗаказаДПДНовый");
	возврат рез;
КонецФункции



