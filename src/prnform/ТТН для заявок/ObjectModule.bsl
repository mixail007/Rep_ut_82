Перем ДатаНачалаТТН_13032012, ДатаНачалаТТН_250711, мВалютаРегламентированногоУчета Экспорт;


Функция Печать(ИзДокумента=Истина, мск = "") Экспорт
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		#Если Клиент Тогда
			Сигнал();
			Предупреждение("Выберите документ, для которого необходимо сформировать Транспортную Накладную.",30,"Выберите документ");
		#КонецЕсли		  
	КонецЕсли;  
	
	если ИзДокумента Тогда //откроем форму
		//Форма  = ЭтотОбъект.ПолучитьФорму("Форма").ОткрытьМодально(); //так было
		ЭтотОбъект.ПолучитьФорму("Форма").Открыть();
		ТабДок = Неопределено;
	Иначе
		//+++04.08.2011	ВвестиЧисло(номСтолб,"Число столбцов для назв.товаров",1, 0);
		//АВТО-определение как надо печатать...
		Если (ЭтотОбъект.СсылкаНаОбъект.Организация.ИНН = "7604069216")          // ЗАО ТК Яршинторг (Ярославль)
			или (ЭтотОбъект.СсылкаНаОбъект.Организация.ИНН = "760200230721") Тогда  // ИП Фролов
			номСтолб=0;
			//Орлов++
			ВариантОформления = 0;//один перевозчик
			Если ЭтотОбъект.Перевозчик <> "" И ЭтотОбъект.Перевозчик2 <> "" И ЭтотОбъект.Перевозчик = ЭтотОбъект.Перевозчик2 Тогда
				ВариантОформления = 1;//один перевозчик, две машины
			ИначеЕсли ЭтотОбъект.Перевозчик <> "" И ЭтотОбъект.Перевозчик2 <> "" И ЭтотОбъект.Перевозчик <> ЭтотОбъект.Перевозчик2 Тогда
				ВариантОформления = 2;//два перевозчика, две машины
			КонецЕсли;
			//было:
			//ТабДок = ПечатьТТН_250711_ЯШТ(номСтолб, мск); // числоСтолбцов =1,2,3,4
			//стало:
			ТабДок = ПечатьТТН_250711_ЯШТ(номСтолб, мск, ВариантОформления); // числоСтолбцов =1,2,3,4
			Если ВариантОформления = 2 Тогда
				ПечатьТТН_250711_ЯШТ_2_экземпляр(номСтолб, мск, ВариантОформления);
			КонецЕсли;
			//Орлов--
		Иначе//как было
			ТабДок = ПечатьТТН_250711(); 
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТабДок;
	
КонецФункции

//+++(
функция ПечатьТТН_250711()
	
		#Если Клиент Тогда
		Если СсылкаНаОбъект.Дата<ДатаНачалаТТН_250711 Тогда
			Сигнал();
		    Предупреждение("Транспортная Накладная (Приложение №4) - принята 15.04.2011 №272,
	  				  | но вступает в силу только с "+Формат(ДатаНачалаТТН_250711,"ДФ=dd.MM.yyyy")+",
					  | и на дату: "+Формат(СсылкаНаОбъект.Дата,"ДФ=dd.MM.yyyy")+" - еще не действует!",60,"Транспортная Накладная - не действительна!");
		КонецЕсли;  
		#КонецЕсли		  
				  
	
	
ТабДокумент = Новый ТабличныйДокумент;
ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН_Приложение4";

Макет       = ПолучитьМакет("Приложение4");

ОбластьМакета = Макет.ПолучитьОбласть("Лицевая");

	//ОбШтрихКод=ОбластьМакета.Рисунки.Штрихкод.Объект;
	//ОбШтрихКод.ТипКода = 4; 
	//ОбШтрихКод.Сообщение = СформироватьШКРеализации(СсылкаНаОбъект,"2");//XMLСтрока(ЭтотОбъект.Ссылка.УникальныйИдентификатор()); 
	//ОбШтрихКод.ОтображатьТекст = Ложь;




//-------параметры лицевой стороны-----------------------
    Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") Тогда
		Шапка = ПолучитьШапку_отвХран();
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Шапка = ПолучитьШапку_Перемещение();
	Иначе
		Шапка = ПолучитьШапку();
	КонецЕсли;

	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента,, Шапка.БанковскийСчет);	
	//СведенияОПокупателе       = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузоотправителе = СведенияОЮрФизЛице(Шапка.Грузоотправитель,  Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,   Шапка.ДатаДокумента);

	
	
	ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");//,НомерСчета,Банк,БИК,КоррСчет");
	Если Шапка.Грузоотправитель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо Тогда 
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = ГрузоотправительПредставление;
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = "";
	Иначе	
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = "";
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = ГрузоотправительПредставление;
	КонецЕсли;	
	
	ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	Если Шапка.Грузополучатель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = ГрузополучательПредставление;
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = "";
	Иначе 
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = "";
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = ГрузополучательПредставление;
	КонецЕсли;
	//ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	
	
	//---------------Заполнение значений макета ----------------------------
	ОбластьМакета.Параметры.НомерЭкземпляра = НомерЭкземпляра;
	ОбластьМакета.Параметры.НомерДокумента  = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента   = Формат(Шапка.ДатаДокумента, "Л=ru_RU; ДЛФ=DD; ДП=-");
	ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");//,НомерСчета,Банк,БИК,КоррСчет");
	
	Если Шапка.Грузоотправитель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо Тогда 
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = ГрузоотправительПредставление;
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = "";
	Иначе	
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = "";
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = ГрузоотправительПредставление;
	КонецЕсли;	
	
	ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	Если Шапка.Грузополучатель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = ГрузополучательПредставление;
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = "";
	Иначе 
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = "";
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = ГрузополучательПредставление;
	КонецЕсли;
	//ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	
	
	//1,2
	//ОтпускРазрешилДолжность					ФИООтпускРазрешил	ГрузПринялДолжность					ГрузПолучилДолжность
	
	//  Если НЕ Шапка.ОтгрузкаЧерезЧП Тогда
	Кладовщик = ПолучитьКладовщика();
	
		ОбластьМакета.Параметры.ФИООтпускПроизвел = Кладовщик;
		ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "";
	//КонецЕсли; 
	  ОбластьМакета.Параметры.ФИОГрузПолучил = "";
	  ОбластьМакета.Параметры.ГрузПолучилДолжность = "";
	  
	 //3 ------------------------------------------------------------  
	ОбластьМакета.Параметры.Пункт3_1 = Пункт3_1;
	
	//+++ Нетто, Брутто //, ОбъемШтук, ОбъемМест
	выборка2 = ПолучитьВесОбъем();
	Если Выборка2.Количество()>0 Тогда
	Выборка2.Следующий();
	ОбластьМакета.Параметры.МассаГрузаНетто  = ?(Выборка2.Нетто<>0,Формат(Выборка2.Нетто,"ЧН= ")+"кг; ", "");
	ОбластьМакета.Параметры.МассаГрузаБрутто = ?(Выборка2.Брутто<>0, "("+Формат(Выборка2.Брутто,"ЧН= ")+"кг); ", "");
	кол = Выборка2.Количество;
	колМест = Выборка2.КоличествоМест;
	//ОбластьМакета.Параметры.ВсегоМестПрописью = ?(колМест=0, ?(кол=0,"",Строка(кол)+" шт."), строка(колМест)+" мест");
	
	Иначе 
	ОбластьМакета.Параметры.МассаГрузаНетто  = "";
	ОбластьМакета.Параметры.МассаГрузаБрутто = "";
	ОбластьМакета.Параметры.ВсегоМестПрописью = "";
	конецЕсли;
	
	
	//3.2 КолМест, маркировка-------------------------------------------
	ОбластьМакета.Параметры.Пункт3_2 = Пункт3_2;
	
	// [МассаГрузаНетто]; [МассаГрузаБрутто]; [Размеры]; [ОбъемМест]
	ОбластьМакета.Параметры.Пункт3_3 = Пункт3_3;

	
	//4
	ОбластьМакета.Параметры.ПереченьДопДокументов = ПереченьДопДокументов;
	ОбластьМакета.Параметры.ПереченьСертификатов  = ПереченьСертификатов;
	//5
    ОбластьМакета.Параметры.Пункт5_1 = Пункт5_1;
 	ОбластьМакета.Параметры.Пункт5_2 = Пункт5_2;
 	ОбластьМакета.Параметры.Пункт5_3 = Пункт5_3;
 	
	//6,7
	Если СведенияОГрузоотправителе.Представление<>Неопределено Тогда 
	ОбластьМакета.Параметры.ПунктПогрузки  = ?(ПунктПогрузки="", ?(СведенияОГрузоотправителе.ФактическийАдрес="", СведенияОГрузоотправителе.ЮридическийАдрес, СведенияОГрузоотправителе.ФактическийАдрес), ПунктПогрузки);
	КонецЕсли;

	Если СведенияОГрузоПолучателе.Представление<>Неопределено Тогда 
	ОбластьМакета.Параметры.ПунктРазгрузки = ?(ПунктРазгрузки="", ?(СведенияОГрузоПолучателе.ФактическийАдрес="",СведенияОГрузоПолучателе.ЮридическийАдрес,СведенияОГрузоПолучателе.ФактическийАдрес) , ПунктРазгрузки);
	КонецЕсли;
    ОбластьМакета.Параметры.Пункт6_6 = Пункт6_6;
	ОбластьМакета.Параметры.Пункт7_6 = Пункт7_6;
	
	ОбластьМакета.Параметры.ДатаВремяПогрузки = ДатаВремяПогрузки;// ?(ДатаВремяПогрузки<>Дата(1,1,1), ДатаВремяПогрузки, СсылкаНаОбъект.Дата );
	ОбластьМакета.Параметры.ДатаВремяВыгрузки = ДатаВремяВыгрузки;// ?(ДатаВремяВыгрузки<>Дата(1,1,1), ДатаВремяВыгрузки, СрокДоставки );
	
	ОбластьМакета.Параметры.СостояниеГрузаОтправителя  = СостояниеГрузаОтправителя;
	ОбластьМакета.Параметры.СостояниеГрузаПолучателя  = СостояниеГрузаПолучателя;
							
	ОбластьМакета.Параметры.ВсегоМестПрописью = Пункт3_2;
	//ОбластьМакета.Параметры.ВсегоНаименований = Формат(СсылкаНаОбъект.Товары.Количество(),"ЧН=-")+" тов.";
	
	//8
	ОбластьМакета.Параметры.СрокДоставки1 = Формат(СрокДоставки1,"ДФ=dd.MM.yyyy; ДП=---");
	//+++ ОбластьМакета.Параметры.ВидПеревозки = ?(ЗначениеЗаполнено(ВидПеревозки), ВидПеревозки, "Автомобильным транспортом");
	
	ТабДокумент.Вывести(ОбластьМакета);

	
	
ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

				
//========================параметры оборотной стороны==========================================
ОбластьМакета = Макет.ПолучитьОбласть("Оборотная");

//10
Если ТипЗнч(Перевозчик)<>Тип("Строка") Тогда
  Если ЗначениеЗаполнено(Перевозчик) Тогда
	СведенияОПеревозчике = СведенияОЮрФизЛице(Перевозчик,  Шапка.ДатаДокумента);
    ПеревозчикПредставление = ОписаниеОрганизации(СведенияОПеревозчике,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	Если Перевозчик.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо Тогда 
		ОбластьМакета.Параметры.ОрганизацияПеревозчикФ = ПеревозчикПредставление;
		ОбластьМакета.Параметры.ОрганизацияПеревозчикЮ = "";
	Иначе	
		ОбластьМакета.Параметры.ОрганизацияПеревозчикФ ="";
		ОбластьМакета.Параметры.ОрганизацияПеревозчикЮ = ПеревозчикПредставление;
	КонецЕсли;

	//Иначе
	//Перевозчик = Шапка.Грузоотправитель;
	//СведенияОПеревозчике = СведенияОгрузоотправителе;
	//ПеревозчикПредставление = ГрузоотправительПредставление;
	//ФИОруководителя = Руководители.Руководитель;
  КонецЕсли;
Иначе //строка!
  ОбластьМакета.Параметры.ОрганизацияПеревозчикЮ = Перевозчик;
КонецЕсли;

    //+++ 29.07.2011 Кладовщик = ПолучитьКладовщика();
 	ОбластьМакета.Параметры.ФИОруководителя = ""; //Кладовщик

 	ОбластьМакета.Параметры.ФИОВодителя               = Водитель;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
	
	
//11
	ОбластьМакета.Параметры.МаркаАвтомобиля           = СокрЛП(МаркаАвтомобиля);
	ОбластьМакета.Параметры.Прицеп                    = ?(ЗначениеЗаполнено(МаркаПрицепа), "Прицеп: "+МаркаПрицепа, "");
	
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = ?(ЗначениеЗаполнено(ГосНомерПрицепа), "Прицеп: "+ГосНомерПрицепа, "");
	
//12
	ОбластьМакета.Параметры.СостояниеГрузаОтправителя  = СостояниеГрузаОтправителя;
	ОбластьМакета.Параметры.СостояниеГрузаПолучателя  = СостояниеГрузаПолучателя;
	
//15
ОбластьМакета.Параметры.ВсегоКОплате     = "";
ОбластьМакета.Параметры.ПроцентНаценки   = ""; //"процент: ";
ОбластьМакета.Параметры.СкладскиеРасходы = "";

//16
	 ОбластьМакета.Параметры.ФИООтпускПроизвел       = кладовщик;
     ОбластьМакета.Параметры.ДатаПогрузки = ЭтотОбъект.ДатаВремяПогрузки; //кладовщик
	
	 //  ОбластьМакета.Параметры.Пункт10_1Ведомость = Пункт10_1;
	  
	  ОбластьМакета.Параметры.ФИОГрузПолучил = СсылкаНаОбъект.Контрагент.ОсновноеКонтактноеЛицо;//осн.контактное лицо!
	  ОбластьМакета.Параметры.ДатаРазгрузки = ЭтотОбъект.ДатаВремяВыгрузки; //кладовщик
 	 // ОбластьМакета.Параметры.Пункт10_1Ведомость = Пункт10_2;
	  
ТабДокумент.Вывести(ОбластьМакета);

возврат ТабДокумент;

КонецФункции // ПечатьТТН_250711()

//04.08.2011 - название - в виде таблицы 
функция ПечатьТТН_250711_ЯШТ(КолСтолб = 0, КонтрагентМосква="", ВариантОформления = 0)
	
	#Если Клиент Тогда
		Если СсылкаНаОбъект.Дата<ДатаНачалаТТН_250711 Тогда
			Сигнал();
			Предупреждение("Транспортная Накладная (Приложение №4) - принята 15.04.2011 №272,
			| но вступает в силу только с "+Формат(ДатаНачалаТТН_250711,"ДФ=dd.MM.yyyy")+",
			| и на дату: "+Формат(СсылкаНаОбъект.Дата,"ДФ=dd.MM.yyyy")+" - еще не действует!",60,"Транспортная Накладная - не действительна!");
		КонецЕсли;  
	#КонецЕсли		  
	
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Если СсылкаНаОбъект.Дата<ДатаНачалаТТН_13032012 Тогда 
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН_Приложение4";
		Макет       = ПолучитьМакет("Приложение4_ЯШТ");
	Иначе
		//Орлов++
		//было:
		//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН_Приложение4_13032012";
		//Макет       = ПолучитьМакет("Приложение4_ЯШТ_13032012");
		//стало:
		Если ВариантОформления = 0 ИЛИ ВариантОформления = 2 Тогда
			ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН_Приложение4_13032012";
			Макет       = ПолучитьМакет("Приложение4_ЯШТ_13032012");	
		ИначеЕсли ВариантОформления = 1 Тогда
			ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН_Приложение4_ЯШТ_13032013_2_водителя";
			Макет       = ПолучитьМакет("Приложение4_ЯШТ_13032013_2_водителя");
		КонецЕсли;
		//Орлов--
	КонецЕсли;
	ОбластьМакета = Макет.ПолучитьОбласть("Лицевая");
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	//ОбШтрихКод=ОбластьМакета.Рисунки.Штрихкод.Объект;
	//ОбШтрихКод.ТипКода = 4; 
	//ОбШтрихКод.Сообщение = СформироватьШКРеализации(СсылкаНаОбъект,"2");//XMLСтрока(ЭтотОбъект.Ссылка.УникальныйИдентификатор()); 
	//ОбШтрихКод.ОтображатьТекст = Ложь;
    иначе
	//ОбластьМакета.Рисунки.Штрихкод.ВыводитьНаПечать = Ложь;
	конецЕсли;
	//-------параметры лицевой стороны-----------------------
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") Тогда
		Шапка = ПолучитьШапку_отвХран();
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Шапка = ПолучитьШапку_Перемещение();
	Иначе
		Шапка = ПолучитьШапку();
	КонецЕсли;
	
	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,    Шапка.ДатаДокумента,, СсылкаНаобъект.Организация.ОсновнойБанковскийСчет);	
	//СведенияОПокупателе     = СведенияОЮрФизЛице(Шапка.Покупатель,      Шапка.ДатаДокумента);
	///////////////////////Плотников 11.02.2016 ОперацияПоОтветственномуХранению.Перемещение
	Если СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами Тогда
		СведенияОГрузоотправителе = СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	Иначе
	    СведенияОГрузоотправителе = СведенияОЮрФизЛице(Шапка.Грузоотправитель,  Шапка.ДатаДокумента);
	КонецЕсли;
    ///////////////////////Плотников 11.02.2016 ОперацияПоОтветственномуХранению.Перемещение
	
	Если КонтрагентМосква="" Тогда //+++ 10.05.2012
		СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,   Шапка.ДатаДокумента);
	Иначе
		СведенияОГрузополучателе  = СведенияОЮрФизЛице(КонтрагентМосква,   Шапка.ДатаДокумента);
	КонецЕсли;
	
	
	 
	 
   	ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");//,НомерСчета,Банк,БИК,КоррСчет");
	ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");

	Если Шапка.Грузоотправитель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо Тогда 
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = ГрузоотправительПредставление;
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = "";
	Иначе	
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = "";
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = ГрузоотправительПредставление;
	КонецЕсли;	
	
	Если Шапка.Грузополучатель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = ГрузополучательПредставление;
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = "";
	Иначе 
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = "";
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = ГрузополучательПредставление;
	КонецЕсли;
			
	//ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	
	
	//---------------Заполнение значений макета ----------------------------
	ОбластьМакета.Параметры.НомерЭкземпляра = НомерЭкземпляра;
	ОбластьМакета.Параметры.НомерДокумента  = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента   = Формат(Шапка.ДатаДокумента, "Л=ru_RU; ДЛФ=DD; ДП=-");
	ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //НомерСчета,Банк,БИК,КоррСчет"
	
	Если Шапка.Грузоотправитель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо Тогда 
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = ГрузоотправительПредставление;
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = "";
	Иначе	
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = "";
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = ГрузоотправительПредставление;
	КонецЕсли;	
		
	ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	//ОЛ 12.02.2015
	//В Белоруссии вместо ИНН должно быть УНП, в Казахстане - БИН
	
	//у перемещения - нет договора +++ 12.02.2015
	дог = ?(ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ПеремещениеТоваров"),
					?(СсылкаНаОбъект.ВнутреннийЗаказ.Пустая(), справочники.ДоговорыКонтрагентов.ПустаяСсылка(), 
						?(СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование.Пустая(), справочники.ДоговорыКонтрагентов.ПустаяСсылка(), СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование.ДоговорКонтрагента)
					  ),
					СсылкаНаОбъект.ДоговорКонтрагента);
					
	Если дог.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда
		Если СокрЛП(Шапка.Грузополучатель.НаименованиеИННэкспорт)<>"" Тогда
			ГрузополучательПредставление = СтрЗаменить(ГрузополучательПредставление," ИНН "," "+СокрЛП(Шапка.Грузополучатель.НаименованиеИННэкспорт)+" ");
		Иначе
			сообщить("В сведениях о грузополучателе вместо ИНН должно быть УНП, БИН или др. Необходимо заполнить справочник контрагенты.");
		КонецЕсли;
	КонецЕсли;	
	//конец ОЛ

	Если Шапка.Грузополучатель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = ГрузополучательПредставление;
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = "";
	Иначе 
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = "";
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = ГрузополучательПредставление;
	КонецЕсли;
	//ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	//Если СсылкаНаОбъект.Подразделение=Справочники.Подразделения.НайтиПоКоду("00133") и ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") тогда //24.11.14 Смирнов для москвы так (Бакута)
	//	 ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ=СсылкаНаОбъект.СкладОтправитель.Комментарий;
	//	 ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ=СсылкаНаОбъект.СкладПолучатель.Комментарий;
	//КонецЕсли;
	
	//++АЧ А теперь для москвы как обычно (Бакута). 25.08.15
	
	//1,2
	//ОтпускРазрешилДолжность					ФИООтпускРазрешил	ГрузПринялДолжность					ГрузПолучилДолжность
	
	//  Если НЕ Шапка.ОтгрузкаЧерезЧП Тогда
	Кладовщик = ПолучитьКладовщика();
	ОбластьМакета.Параметры.ФИООтпускПроизвел = Кладовщик;
	
	ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика(Кладовщик);  //!!!
	
	//КонецЕсли; 
	ОбластьМакета.Параметры.ФИОГрузПолучил = "";
	ОбластьМакета.Параметры.ГрузПолучилДолжность = "";
	
	//2013.11.14 ФормулаАвто
	//+++( 04.08.2011 - представление наименований в виде таблицы
	//==========================================================================================
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	//КолСтолб = 2; // 0, 1, 2, 3, 4, 6.
	Если КолСтолб>0 Тогда
		Если КолСтолб=1 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Назв");
			ОбластьМакета.Параметры.Пункт3_1 = стрЗаменить(Пункт3_1, "; ",";"+Символы.ПС);
			ТабДокумент.Вывести(ОбластьМакета);
			
		ИначеЕсли (КолСтолб>6) Тогда
			Предупреждение("Невозможно отобразить названия в "+строка(КолСтолб)+" столбцах!
			|Будет использован стандарный вывод названия (п. 3.1)",10);
			ОбластьМакета = Макет.ПолучитьОбласть("Назв");
			ОбластьМакета.Параметры.Пункт3_1 = Пункт3_1;
			ТабДокумент.Вывести(ОбластьМакета);
		Иначе
			КолСтолб= ?(КолСтолб=5, 6, КолСтолб);
			ОбластьМакета = Макет.ПолучитьОбласть("Назв_стр"+Строка(КолСтолб));
			
			N = СтрЧислоВхождений(Пункт3_1,";");//строки
			Nстр = Цел(N/КолСтолб) + ?(N%КолСтолб=0, 0, 1); // целое + 1 стр. на нецелое
			//-------основной цикл без таблицы значений-----------------------------
			Назв0 = Пункт3_1; // ограничимся циклом
			Для k=0 по Nстр - 1 цикл
				//СтрЗнач = табЗнач[k];
				для j=1 по КолСтолб цикл
					i= найти(Назв0,";");		L=стрДлина(Назв0);
					стрЗнач12 = СокрЛП(лев(Назв0, i-1)); Назв0 = Прав(Назв0, L-i);
					ОбластьМакета.Параметры["назв"+строка(j)] = стрЗнач12; // СтрЗнач[j-1]);
				конецЦикла;
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			//------------------основной цикл -----------------------------
			
		КонецЕсли;
	Иначе  // как было - сплошным текстом!
		ОбластьМакета = Макет.ПолучитьОбласть("Назв");
		ОбластьМакета.Параметры.Пункт3_1 = "Список грузов см. Приложение"; //+++ 12.08.2011 Гаричев
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;	//конец КолСтолб>0
	
	ОбластьМакета = Макет.ПолучитьОбласть("Лицевая2");
	//==========================================================================================
	//+++)
	
	//+++ Нетто, Брутто //, ОбъемШтук, ОбъемМест
	выборка2 = ПолучитьВесОбъем();
	Если Выборка2.Количество()>0 Тогда
		Выборка2.Следующий();
		ОбластьМакета.Параметры.МассаГрузаНетто  = ?(Выборка2.Нетто<>0,Формат(Выборка2.Нетто,"ЧН= ")+"кг; ", "");
		ОбластьМакета.Параметры.МассаГрузаБрутто = ?(Выборка2.Брутто<>0, "("+Формат(Выборка2.Брутто,"ЧН= ")+"кг); ", "");
		кол = Выборка2.Количество;
		колМест = Выборка2.КоличествоМест;
		ОбластьМакета.Параметры.ВсегоМестПрописью = ?(колМест=0, ?(кол=0,"",Строка(кол)+" шт."), строка(колМест)+" мест");
		
	Иначе 
		ОбластьМакета.Параметры.МассаГрузаНетто  = "";
		ОбластьМакета.Параметры.МассаГрузаБрутто = "";
		ОбластьМакета.Параметры.ВсегоМестПрописью = "";
	конецЕсли;
	
	
	//3.2 КолМест, маркировка-------------------------------------------
	ОбластьМакета.Параметры.Пункт3_2 = Пункт3_2;
	
	// [МассаГрузаНетто]; [МассаГрузаБрутто]; [Размеры]; [ОбъемМест]
	ОбластьМакета.Параметры.Пункт3_3 = Пункт3_3;
	
	
	//4
	///////////////////////Плотников 11.02.2016 ОперацияПоОтветственномуХранению.Перемещение
	//Если СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами Тогда
	//	ОбластьМакета.Параметры.ПереченьДопДокументов = ПереченьДопДокументов + " (ОТХ)";
	//Иначе
	//	ОбластьМакета.Параметры.ПереченьДопДокументов = ПереченьДопДокументов;
	//КонецЕсли;
	///////////////////////Плотников 11.02.2016 ОперацияПоОтветственномуХранению.Перемещение
	ОбластьМакета.Параметры.ПереченьСертификатов  = ПереченьСертификатов;
	
	////2013.11.14  ФормулаАвто
	//Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	//	Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда //ФормулаАвто
	//		ОбластьМакета.Параметры.ПереченьДопДокументов  = "Накладная №" + НомерДокументаФА + " от "+Формат(ЭтотОбъект.СсылкаНаОбъект.Дата,"ДЛФ=DD");
	//	ИначеЕсли СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда //ФормулаАвтоПлюс
	//		ОбластьМакета.Параметры.ПереченьДопДокументов  = "Накладная №" + НомерДокументаФАП + " от "+Формат(ЭтотОбъект.СсылкаНаОбъект.Дата,"ДЛФ=DD");
	//	ИначеЕсли СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда
	//		ОбластьМакета.Параметры.ПереченьДопДокументов  = "Накладная №" + НомерДокументаШТЯ + " от "+Формат(ЭтотОбъект.СсылкаНаОбъект.Дата,"ДЛФ=DD");
	//	КонецЕсли;                                                          
	//КонецЕсли;	
	
	//5
	ОбластьМакета.Параметры.Пункт5_1 = Пункт5_1;
	ОбластьМакета.Параметры.Пункт5_2 = Пункт5_2;
	ОбластьМакета.Параметры.Пункт5_3 = Пункт5_3;
	
	//6,7
	
	                                                                                                                                                                                                                                                                                                                                                                                 
		
	///////////////////////Плотников 11.02.2016 ОперацияПоОтветственномуХранению.Перемещение
	Если СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами Тогда
		//Если СведенияОГрузоотправителе.Представление<>Неопределено Тогда 
		ОбластьМакета.Параметры.ПунктПогрузки  = ОписаниеОрганизации(СведенияОЮрФизЛице(?(ЗначениеНеЗаполнено(СсылкаНаОбъект.Подразделение) или СсылкаНаОбъект.Подразделение = Справочники.Подразделения.ПустаяСсылка(),Шапка.ЮрФизЛицо,СсылкаНаОбъект.Подразделение.Контрагент), ТекущаяДата()),"ФактическийАдрес,Телефоны");
		//КонецЕсли;
		

		Если СсылкаНаОбъект.СкладПолучатель.ТипСклада = Перечисления.ТипыСкладов.ВПути и СсылкаНаОбъект.Подразделение <> Справочники.Подразделения.НайтиПоКоду("00005") Тогда
		ОбластьМакета.Параметры.ПунктРазгрузки = ОписаниеОрганизации(СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, ТекущаяДата()),"ФактическийАдрес,Телефоны");
	    Иначе
		ОбластьМакета.Параметры.ПунктРазгрузки = ОписаниеОрганизации(СведенияОЮрФизЛице(?(ЗначениеНеЗаполнено(СсылкаНаОбъект.СкладПолучатель.Подразделение.Контрагент) или СсылкаНаОбъект.Складполучатель.Подразделение.Контрагент = Справочники.Подразделения.ПустаяСсылка(),Шапка.ЮрФизЛицо,СсылкаНаОбъект.Складполучатель.Подразделение.Контрагент), ТекущаяДата()),"ФактическийАдрес,Телефоны");
		КонецЕсли;
	Иначе
	Если СведенияОГрузоотправителе.Представление<>Неопределено Тогда 
		ОбластьМакета.Параметры.ПунктПогрузки  = ?(ПунктПогрузки="", ?(СведенияОГрузоотправителе.ФактическийАдрес="", СведенияОГрузоотправителе.ЮридическийАдрес, СведенияОГрузоотправителе.ФактическийАдрес), ПунктПогрузки);
	КонецЕсли;
	Если СведенияОГрузоПолучателе.Представление<>Неопределено Тогда 
		ОбластьМакета.Параметры.ПунктРазгрузки = ?(ПунктРазгрузки="", ?(СведенияОГрузоПолучателе.ФактическийАдрес="",СведенияОГрузоПолучателе.ЮридическийАдрес,СведенияОГрузоПолучателе.ФактическийАдрес) , ПунктРазгрузки);
	КонецЕсли;
	КонецЕсли;
    ///////////////////////Плотников 11.02.2016 ОперацияПоОтветственномуХранению.Перемещение
	Если СсылкаНаОбъект.Подразделение=Справочники.Подразделения.НайтиПоКоду("00133")  и ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") тогда //24.11.14 Смирнов для москвы так (Бакута)
		 //+АЧ А теперь для москвы так. 25.08.15
		 //ОбластьМакета.Параметры.ПунктПогрузки=СсылкаНаОбъект.СкладОтправитель.Комментарий;
		 //ОбластьМакета.Параметры.ПунктРазгрузки=СсылкаНаОбъект.СкладПолучатель.Комментарий;
	КонецЕсли;
	
	
	Если ВариантОформления = 2 Тогда
		ОбластьМакета.Параметры.ПунктРазгрузки = "86 км МКАДа";	
	КонецЕсли;
	
	
	Если СсылкаНаОбъект.Дата<ДатаНачалаТТН_13032012 Тогда
		ОбластьМакета.Параметры.Пункт6_6 = Пункт6_6;
		ОбластьМакета.Параметры.Пункт7_6 = Пункт7_6;
	Иначе
		ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика(Пункт6_6);//+++
		ОбластьМакета.Параметры.Пункт6_6 = Пункт6_6;
		ОбластьМакета.Параметры.Пункт7_6 = Пункт7_6;
		ОбластьМакета.Параметры.Пункт6_7 = Пункт6_7;
		ОбластьМакета.Параметры.Пункт7_7 = Пункт7_7;
	КонецЕсли;
	//Орлов++
	Если СсылкаНаОбъект.Дата >= ДатаНачалаТТН_13032012 И ВариантОформления = 1 Тогда
		ОбластьМакета.Параметры.ОтпускПроизвелДолжность2 = ?(ЗначениеЗаполнено(Водитель), "водитель", "");
		ОбластьМакета.Параметры.Пункт7_6 = "Глухов А.С."; //Водитель;
		ОбластьМакета.Параметры.Пункт6_62 = Водитель;
		ОбластьМакета.Параметры.Пункт6_72 = "Глухов А.С."; //Водитель;
		ОбластьМакета.Параметры.Пункт7_72 = "Глухов А.С."; //Водитель2;
	ИначеЕсли СсылкаНаОбъект.Дата >= ДатаНачалаТТН_13032012 И ВариантОформления = 2 Тогда
		ОбластьМакета.Параметры.Пункт7_6 = "Глухов А.С."; //Водитель2;	
	КонецЕсли;
	
	Если СсылкаНаОбъект.Дата>='20131031' и СсылкаНаОбъект.Ответственный = Справочники.Пользователи.НайтиПоКоду("Михалева Е. А.") Тогда
		ОбластьМакета.Параметры.Пункт6_6 = "Михалева Е.А.";			
	КонецЕсли;
	//Орлов--
	
	ОбластьМакета.Параметры.ДатаВремяПогрузки = ДатаВремяПогрузки;// ?(ДатаВремяПогрузки<>Дата(1,1,1), ДатаВремяПогрузки, СсылкаНаОбъект.Дата );
	ОбластьМакета.Параметры.ДатаВремяВыгрузки = ДатаВремяВыгрузки;// ?(ДатаВремяВыгрузки<>Дата(1,1,1), ДатаВремяВыгрузки, СрокДоставки );
	
	ОбластьМакета.Параметры.СостояниеГрузаОтправителя  = СостояниеГрузаОтправителя;
	ОбластьМакета.Параметры.СостояниеГрузаПолучателя  = СостояниеГрузаПолучателя;
	
	ОбластьМакета.Параметры.ВсегоМестПрописью = Пункт3_2;
	//ОбластьМакета.Параметры.ВсегоНаименований = Формат(СсылкаНаОбъект.Товары.Количество(),"ЧН=-")+" тов.";
	//8
	ОбластьМакета.Параметры.СрокДоставки1 = Формат(СрокДоставки1,"ДФ=dd.MM.yyyy; ДП=---");
	//+++ ОбластьМакета.Параметры.ВидПеревозки = ?(ЗначениеЗаполнено(ВидПеревозки), ВидПеревозки, "Автомобильным транспортом");
	//9
	//++Орлов
	Если СсылкаНаОбъект.Дата >= ДатаНачалаТТН_13032012 Тогда
		ОбластьМакета.Параметры.ФИОВодителя	              = Водитель;
		ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
		ОбластьМакета.Параметры.ДолжнВодитель             = ?(ЗначениеЗаполнено(Водитель), "водитель", "");
		
		Если ВариантОформления = 1 Тогда
			ОбластьМакета.Параметры.ФИОВодителя2	           = "Глухов А.С."; //Водитель2;
			ОбластьМакета.Параметры.ВодительскоеУдостоверение2 = ""; //не заполняется
			ОбластьМакета.Параметры.ДолжнВодитель2             = "водитель"; //?(ЗначениеЗаполнено(Водитель2), "водитель", "");	
		КонецЕсли;
	КонецЕсли;
	//--Орлов
	
	//2013.11.14 ФормулаАвто
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда //ФормулаАвто
			ОбластьМакета.Параметры.ПунктПогрузки = "150014, Ярославская обл, Ярославль г, Салтыкова-Щедрина ул, дом №21, оф.414";
			ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "Зайцева Н.С.";
			ОбластьМакета.Параметры.Пункт6_6 = "";
	 ИначеЕсли СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда //ФормулаАвтоПлюс
			ОбластьМакета.Параметры.ПунктПогрузки = "150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9";
			ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "Курапова Е.А.";
			ОбластьМакета.Параметры.Пункт6_6 = "";
		КонецЕсли;
	КонецЕсли;	
	
	//АЧ - ответственные лица. Бакута. 25.08.15
	//РНД
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		Если (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00643"))) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("00634")) и ЗначениеЗаполнено(СсылкаНаОбъект.Ответственный) Тогда 
			ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ПолучитьДолжность(Справочники.Подразделения.НайтиПоКоду("00106"),СсылкаНаОбъект.Ответственный.ФизЛицо);
			ОбластьМакета.Параметры.Пункт6_6 = СсылкаНаОбъект.Ответственный.ФизЛицо;
		//ЕКБ
		ИначеЕсли (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00929"))) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("00962")) Тогда 	
			ФЛЕКБ = ПолучитьОтветственноеЛицоРуководителя(СсылкаНаОбъект.Подразделение,Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
			ОбластьМакета.Параметры.Пункт6_6 = ФЛЕКБ;
			ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ПолучитьДолжность(СсылкаНаОбъект.Подразделение,ФЛЕКБ);
		// МСК
		ИначеЕсли (СсылкаНаОбъект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00133")) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("01366")) Тогда 
			ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "Оператор ПК";
			ОбластьМакета.Параметры.Пункт6_6 = "Ильина Наталья Валерьевна";	
		конецЕсли; //<<
	КонецЕсли;
		
	
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	
	//========================параметры оборотной стороны==========================================
	ОбластьМакета = Макет.ПолучитьОбласть("Оборотная");
	
	//10
	Если ТипЗнч(Перевозчик)<>Тип("Строка") Тогда
		Если ЗначениеЗаполнено(Перевозчик) Тогда
			СведенияОПеревозчике = СведенияОЮрФизЛице(Перевозчик,  Шапка.ДатаДокумента);
			//Орлов++ 09.10.2013 по просьбе Яковлевой
			//было:
			//ПеревозчикПредставление = ОписаниеОрганизации(СведенияОПеревозчике,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			//стало:
			ПеревозчикПредставление = ОписаниеОрганизации(СведенияОПеревозчике,  "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
			Если Перевозчик.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо Тогда 
				ОбластьМакета.Параметры.ОрганизацияПеревозчикФ = ПеревозчикПредставление;
				ОбластьМакета.Параметры.ОрганизацияПеревозчикЮ = "";
			Иначе	
				ОбластьМакета.Параметры.ОрганизацияПеревозчикФ ="";
				ОбластьМакета.Параметры.ОрганизацияПеревозчикЮ = ПеревозчикПредставление;
			КонецЕсли;
			
			//Иначе
			//Перевозчик = Шапка.Грузоотправитель;
			//СведенияОПеревозчике = СведенияОгрузоотправителе;
			//ПеревозчикПредставление = ГрузоотправительПредставление;
			//ФИОруководителя = Руководители.Руководитель;
		КонецЕсли;
	Иначе //строка!
		ОбластьМакета.Параметры.ОрганизацияПеревозчикЮ = Перевозчик;
	КонецЕсли;
	
	//+++ 29.07.2011 Кладовщик = ПолучитьКладовщика();
	ОбластьМакета.Параметры.ФИОруководителя = ""; //Кладовщик
	
	ОбластьМакета.Параметры.ФИОВодителя               = Водитель;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
	//Орлов++
	Если СсылкаНаОбъект.Дата >= ДатаНачалаТТН_13032012 И ВариантОформления = 1 Тогда
		ОбластьМакета.Параметры.ФИОВодителя2               = "Глухов А.С."; //Водитель2;
		ОбластьМакета.Параметры.ВодительскоеУдостоверение2 = ""; //не заполняется
	КонецЕсли;
	//Орлов--
	
	
	//11
	ОбластьМакета.Параметры.МаркаАвтомобиля           = СокрЛП(МаркаАвтомобиля);
	ОбластьМакета.Параметры.Прицеп                    = ?(ЗначениеЗаполнено(МаркаПрицепа), "Прицеп: "+МаркаПрицепа, "");
	
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = ?(ЗначениеЗаполнено(ГосНомерПрицепа), "Прицеп: "+ГосНомерПрицепа, "");
	
	//Орлов++
	Если СсылкаНаОбъект.Дата >= ДатаНачалаТТН_13032012 И ВариантОформления = 1 Тогда
		ОбластьМакета.Параметры.МаркаАвтомобиля2           = "Газель"; //СокрЛП(МаркаАвтомобиля2);
		ОбластьМакета.Параметры.Прицеп2                    = ""; //прицепа нет
		
		ОбластьМакета.Параметры.ГосНомерАвтомобиля2        = "А 635 ЕН 76"; //ГосНомерАвтомобиля2;
		ОбластьМакета.Параметры.ГосНомерПрицепа2           = ""; //прицепа нет
	КонецЕсли;
	//Орлов--
	
	//12
	ОбластьМакета.Параметры.СостояниеГрузаОтправителя  = СостояниеГрузаОтправителя;
	ОбластьМакета.Параметры.СостояниеГрузаПолучателя  = СостояниеГрузаПолучателя;
	
	//15
	ОбластьМакета.Параметры.ВсегоКОплате     = "";
	ОбластьМакета.Параметры.ПроцентНаценки   = ""; //"процент: ";
	ОбластьМакета.Параметры.СкладскиеРасходы = "";
	
	//+++ 07.06.2012
	Если СсылкаНаОбъект.Дата>ДатаНачалаТТН_13032012 Тогда 
		
		//Если ЗначениеЗаполнено(Перевозчик) Тогда //+++ 13.06.2012
		//+++ 10.04.2015
		ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		ОбластьМакета.Параметры.Пункт15_7 = ГрузоотправительПредставление;
		//Иначе
		//	ОбластьМакета.Параметры.Пункт15_7 = "";
		//КонецЕсли;	
		
		//16
		ОбластьМакета.Параметры.ФИООтпускПроизвел       = кладовщик;
		//Орлов++
		Если СсылкаНаОбъект.Дата>='20131031' и СсылкаНаОбъект.Ответственный = Справочники.Пользователи.НайтиПоКоду("Михалева Е. А.") Тогда
			ОбластьМакета.Параметры.ФИООтпускПроизвел = "Михалева Е.А.";			
		КонецЕсли;	
		//Орлов--
		ОбластьМакета.Параметры.ДатаПогрузки = ЭтотОбъект.ДатаВремяПогрузки; //кладовщик
		
		//  ОбластьМакета.Параметры.Пункт10_1Ведомость = Пункт10_1;
		//++Орлов
		//было:
		//ОбластьМакета.Параметры.ФИОГрузПолучил = "";//осн.контактное лицо!
		//стало:
		ОбластьМакета.Параметры.ФИОГрузПолучил = Водитель;
		Если ВариантОформления = 1 Тогда
			ОбластьМакета.Параметры.ФИОГрузПолучил2 = "Глухов А.С."; //Водитель2;	
		КонецЕсли;
		//--Орлов
		ОбластьМакета.Параметры.ДатаРазгрузки = ЭтотОбъект.ДатаВремяВыгрузки; //кладовщик
		// ОбластьМакета.Параметры.Пункт10_1Ведомость = Пункт10_2;
	КонецЕсли;
	
	//2013.11.14 ФормулаАвто
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда //ФормулаАвто
			ОбластьМакета.Параметры.Пункт15_7 = "Общество с ограниченной ответственностью ""Формула Авто"", 150014, Ярославская обл, Ярославль г, Салтыкова-Щедрина ул, дом №21, оф.414, р/с 40702810877030004619, в банке СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ, БИК 047888670, к/с 30101810500000000670";
			ОбластьМакета.Параметры.ФИООтпускПроизвел = "Зайцева Н.С.";
		ИначеЕсли СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда //ФормулаАвто
			ОбластьМакета.Параметры.Пункт15_7 = "Общество с ограниченной ответственностью ""Формула Авто Плюс"", 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9,  р/с 40702810277030004620, в банке СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ, БИК 047888670, к/с 30101810500000000670";
			ОбластьМакета.Параметры.ФИООтпускПроизвел = "Курапова Е.А.";
		КонецЕсли;
	КонецЕсли;	
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		Если (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00643"))) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("00634")) и ЗначениеЗаполнено(СсылкаНаОбъект.Ответственный) Тогда 
			ОбластьМакета.Параметры.ФИООтпускПроизвел = СсылкаНаОбъект.Ответственный.ФизЛицо;
		//ЕКБ
	ИначеЕсли (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00929"))) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("00962")) и СсылкаНаОбъект.Дата>='2015-08-20' Тогда 	
			ФЛЕКБ = ПолучитьОтветственноеЛицоРуководителя(СсылкаНаОбъект.Подразделение,Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
			ОбластьМакета.Параметры.ФИООтпускПроизвел = ФЛЕКБ;
		// МСК
		ИначеЕсли (СсылкаНаОбъект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00133")) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("01366")) Тогда 
			ОбластьМакета.Параметры.ФИООтпускПроизвел = "Ильина Наталья Валерьевна";	
		конецЕсли; //<<
	КонецЕсли;
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	//===================================================================
	//Приложение со списком товаров
	//+++ 12.04.2016 - выключено!
	Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
// 13.04.2016	
	Если КолСтолб<=1 и найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование, "*")>0 Тогда  //только не для табличной части 3.1
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаПриложения");
		ОбластьМакета.Параметры.НомерДокумента  = ПолучитьНомерНаПечать(Шапка);
		
		
		ОбластьМакета.Параметры.ДатаДокумента   = Формат(Шапка.ДатаДокумента, "Л=ru_RU; ДЛФ=DD; ДП=-");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПриложения");
		
		//---------------------------------
		//получение всех данных идет из Документа или СпискаДокументов
		Если ЭтотОбъект.Реализации.Количество()=0 Тогда
			Док1 = СсылкаНаОбъект;
			
			ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
			для каждого Стр1 из Док1.Товары цикл
				//++Смирнов для Лагерной и Радуга Питер убираем LegeArtis
				Если Шапка.Покупатель.Код="93136  " или  Шапка.Покупатель.Код="91777  " тогда
					ОбластьМакета.Параметры.ТоварНаименование = СтрЗаменить(стр1.Номенклатура.НаименованиеПолное,"LegeArtis","");
				иначе
					ОбластьМакета.Параметры.ТоварНаименование = стр1.Номенклатура.НаименованиеПолное;
				КонецЕсли;
				ОбластьМакета.Параметры.Количество = стр1.Количество;
				Если ТипЗнч(док1)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					ОбластьМакета.Параметры.Склад	= ?(ЗначениеЗаполнено(стр1.Склад), стр1.Склад, док1.СкладОтправитель);
				Иначе
					ОбластьМакета.Параметры.Склад	= ?(ЗначениеЗаполнено(стр1.Склад), стр1.Склад, док1.Склад);
				КонецЕсли;
				
				ОбластьМакета.Параметры.БазоваяЕдиницаНаименование = стр1.Номенклатура.БазоваяЕдиницаИзмерения;
				Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
					ОбластьМакета.Параметры.Артикул = стр1.Номенклатура.Артикул;
				Иначе
					ОбластьМакета.Параметры.Артикул = стр1.Номенклатура.Код;
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			КолИтого = Док1.Товары.Итог("Количество");
			КолСтрок = Док1.Товары.Количество();
		Иначе//много реализаций или перемещений
			КолИтого = 0; КолСтрок = 0;
			ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
			Док1 = СсылкаНаОбъект;
			
			//+++ 22.06.2015 - общая выборка по товарам
			//  для каждого Док1 из ЭтотОбъект.Реализации цикл
			//	для каждого Стр1 из Док1.реализация.Товары цикл
			списДок = ЭтотОбъект.Реализации.ВыгрузитьКолонку("Реализация");
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
						   |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
						   |	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
						   |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
						   |	ВЫБОР
						   |		КОГДА РеализацияТоваровУслугТовары.Склад = &Пустой
						   |			ТОГДА РеализацияТоваровУслугТовары.Ссылка.Склад
						   |		ИНАЧЕ РеализацияТоваровУслугТовары.Склад
						   |	КОНЕЦ КАК Склад
						   |ИЗ
						   |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
						   |ГДЕ
						   |	РеализацияТоваровУслугТовары.Ссылка В(&списДок)
						   |
						   |СГРУППИРОВАТЬ ПО
						   |	РеализацияТоваровУслугТовары.Номенклатура,
						   |	ВЫБОР
						   |		КОГДА РеализацияТоваровУслугТовары.Склад = &Пустой
						   |			ТОГДА РеализацияТоваровУслугТовары.Ссылка.Склад
						   |		ИНАЧЕ РеализацияТоваровУслугТовары.Склад
						   |	КОНЕЦ
						   |
|"+?(ТипЗнч(Док1)=Тип("ДокументСсылка.ПеремещениеТоваров"), "
//--------------------------------------------------------------------------------------------------						   
						   |ОБЪЕДИНИТЬ ВСЕ
						   |
						   |ВЫБРАТЬ
						   |	ПеремещениеТоваровТовары.Номенклатура,
						   |	СУММА(ПеремещениеТоваровТовары.Количество),
						   |	СУММА(ПеремещениеТоваровТовары.Цена * ПеремещениеТоваровТовары.Количество),
						   |	ВЫБОР
						   |		КОГДА ПеремещениеТоваровТовары.Склад = &Пустой
						   |			ТОГДА ПеремещениеТоваровТовары.Ссылка.СкладОтправитель
						   |		ИНАЧЕ ПеремещениеТоваровТовары.Склад
						   |	КОНЕЦ
						   |ИЗ
						   |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
						   |ГДЕ
						   |	ПеремещениеТоваровТовары.Ссылка В(&списДок)
						   |
						   |СГРУППИРОВАТЬ ПО
						   |	ПеремещениеТоваровТовары.Номенклатура,
						   |	ВЫБОР
						   |		КОГДА ПеремещениеТоваровТовары.Склад = &Пустой
						   |			ТОГДА ПеремещениеТоваровТовары.Ссылка.СкладОтправитель
						   |		ИНАЧЕ ПеремещениеТоваровТовары.Склад
						   |	КОНЕЦ
						   |",
?(ТипЗнч(Док1)=Тип("ДокументСсылка.ВозвратТоваровПоставщику"),"						   
//-----------------------------------------------------------------------------------------						   
						   |ОБЪЕДИНИТЬ ВСЕ
						   |
						   |ВЫБРАТЬ
						   |	ПеремещениеТоваровТовары.Номенклатура,
						   |	СУММА(ПеремещениеТоваровТовары.Количество),
						   |	СУММА(ПеремещениеТоваровТовары.Цена * ПеремещениеТоваровТовары.Количество),
						   |	ВЫБОР
						   |		КОГДА ПеремещениеТоваровТовары.Склад = &Пустой
						   |			ТОГДА ПеремещениеТоваровТовары.Ссылка.Склад
						   |		ИНАЧЕ ПеремещениеТоваровТовары.Склад
						   |	КОНЕЦ
						   |ИЗ
						   |	Документ.ВозвратТоваровПоставщику.Товары КАК ПеремещениеТоваровТовары
						   |ГДЕ
						   |	ПеремещениеТоваровТовары.Ссылка В(&списДок)
						   |
						   |СГРУППИРОВАТЬ ПО
						   |	ПеремещениеТоваровТовары.Номенклатура,
						   |	ВЫБОР
						   |		КОГДА ПеремещениеТоваровТовары.Склад = &Пустой
						   |			ТОГДА ПеремещениеТоваровТовары.Ссылка.Склад
						   |		ИНАЧЕ ПеремещениеТоваровТовары.Склад
						   |	КОНЕЦ
						   |",
?(ТипЗнч(Док1)=Тип("ДокументСсылка.ОперацияПоОтветственномуХранению"),"	
  //-----------------------------------------------------------------------------------------------
						   |ОБЪЕДИНИТЬ ВСЕ
						   |
						   |ВЫБРАТЬ
						   |	ПеремещениеТоваровТовары.Номенклатура,
						   |	СУММА(ПеремещениеТоваровТовары.Количество),
						   |	СУММА(0),
						   |	ВЫБОР
						   |		КОГДА ПеремещениеТоваровТовары.Склад = &Пустой
						   |			ТОГДА ПеремещениеТоваровТовары.Ссылка.СкладПолучатель
						   |		ИНАЧЕ ПеремещениеТоваровТовары.Склад
						   |	КОНЕЦ
						   |ИЗ
						   |	Документ.ОперацияПоОтветственномуХранению.Товары КАК ПеремещениеТоваровТовары
						   |ГДЕ
						   |	ПеремещениеТоваровТовары.Ссылка В(&списДок)
						   |
						   |СГРУППИРОВАТЬ ПО
						   |	ПеремещениеТоваровТовары.Номенклатура,
						   |	ВЫБОР
						   |		КОГДА ПеремещениеТоваровТовары.Склад = &Пустой
						   |			ТОГДА ПеремещениеТоваровТовары.Ссылка.СкладПолучатель
						   |		ИНАЧЕ ПеремещениеТоваровТовары.Склад
						   |	КОНЕЦ
						   |"
,"") ) )+"
						   |
						   |УПОРЯДОЧИТЬ ПО
						   |	Номенклатура
						   |АВТОУПОРЯДОЧИВАНИЕ";
			
			Запрос.УстановитьПараметр("списДок", списДок);
			Запрос.УстановитьПараметр("Пустой", справочники.Склады.ПустаяСсылка() );
			
			Результат = Запрос.Выполнить();
			Стр1 = Результат.Выбрать();
			
			Пока Стр1.Следующий() Цикл
			//+++)
			
					//++Смирнов для Лагерной и Радуга Питер убираем LegeArtis
					Если Шапка.Покупатель.Код="93136  " или  Шапка.Покупатель.Код="91777  " тогда
						ОбластьМакета.Параметры.ТоварНаименование = СтрЗаменить(стр1.Номенклатура,"LegeArtis","");
					Иначе
						ОбластьМакета.Параметры.ТоварНаименование = стр1.Номенклатура;
					КонецЕсли;
					ОбластьМакета.Параметры.Количество = стр1.Количество;
					ОбластьМакета.Параметры.Склад	   = стр1.Склад;
					//Если ТипЗнч(Док1.реализация)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					//	ОбластьМакета.Параметры.Склад	= ?(ЗначениеЗаполнено(стр1.Склад), стр1.Склад, Док1.реализация.СкладОтправитель);
					//Иначе
					//	ОбластьМакета.Параметры.Склад	= ?(ЗначениеЗаполнено(стр1.Склад), стр1.Склад, Док1.реализация.Склад);
					//КонецЕсли;
					ОбластьМакета.Параметры.БазоваяЕдиницаНаименование = стр1.Номенклатура.БазоваяЕдиницаИзмерения;
					
					Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
						ОбластьМакета.Параметры.Артикул = стр1.Номенклатура.Артикул;
					Иначе
						ОбластьМакета.Параметры.Артикул = стр1.Номенклатура.Код;
					КонецЕсли;
					
					КолИтого = КолИтого + стр1.Количество;
					КолСтрок = КолСтрок + 1;
					ТабДокумент.Вывести(ОбластьМакета);
				//КонецЦикла;
				//КолИтого = КолИтого + Док1.реализация.Товары.Итог("Количество");
				//КолСтрок = КолСтрок + Док1.реализация.Товары.Количество();
			КонецЦикла;
		КонецЕсли;
		//---------------------------------
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалПриложения");
		ОбластьМакета.Параметры.ИтогоКоличество  	= КолИтого;
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета=",,,ж,,,,м,0";
		ОбластьМакета.Параметры.ВсегоНаименований	= ЧислоПрописью(КолСтрок, ФормСтрока, ПарПредмета);
		ОбластьМакета.Параметры.КоличествоСтрок	= КолСтрок;
		должВод = "";
		Если ЗначениеЗаполнено(Водитель) Тогда
			должВод = "водитель"; 
		КонецЕсли;
		ОбластьМакета.Параметры.ДолжнВодитель  = должВод;
		ОбластьМакета.Параметры.ФИОВодителя    = Водитель;
		
		ОбластьМакета.Параметры.ОтпускОтгрузилДолжность = "";
		
		//+++ 30.03.2012
		Если ТипЗнч(СсылкаНаОбъект) = тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Если СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00107") Тогда
				ОбластьМакета.Параметры.ФИОразрешил = "Войновская Н.Р.";
				ОбластьМакета.Параметры.ФИОотгрузил = "Войновская Н.Р.";
				ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "";
			ИначеЕсли СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") Тогда  //рнд
				ОбластьМакета.Параметры.ФИОразрешил = кладовщик;
				ОбластьМакета.Параметры.ФИОотгрузил = кладовщик;
				ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика(кладовщик);//+++;
				
				Если СсылкаНаОбъект.Дата>='20131031' и СсылкаНаОбъект.Ответственный = Справочники.Пользователи.НайтиПоКоду("Михалева Е. А.") Тогда
					ОбластьМакета.Параметры.ФИОразрешил = "Михалева Е.А.";
					ОбластьМакета.Параметры.ФИОотгрузил = "Михалева Е.А.";			
				КонецЕсли;
		
			ИначеЕсли ЗначениеЗаполнено(СсылкаНаОбъект.сделка) Тогда
				Если СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00107")Тогда
					ОбластьМакета.Параметры.ФИОразрешил = "Войновская Н.Р.";
					ОбластьМакета.Параметры.ФИОотгрузил = "Войновская Н.Р.";
					ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "";
				ИначеЕсли СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00106")Тогда
					ОбластьМакета.Параметры.ФИОразрешил = Кладовщик;
					ОбластьМакета.Параметры.ФИОотгрузил = Кладовщик;
					ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика(кладовщик);
					
				ИначеЕсли  СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00112")
	 				   или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00112") тогда
					ОбластьМакета.Параметры.ФИОразрешил = Кладовщик;
					ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика(кладовщик);
					//++++++++++++++++++++++++ 05.08.2013
					регСв = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, новый Структура("Подразделение, ОтветственноеЛицо",
					справочники.Подразделения.НайтиПоКоду("00112"), Перечисления.ОтветственныеЛицаОрганизации.Кассир) );
					Если регСв<>неопределено тогда
						ОбластьМакета.Параметры.ФИОотгрузил = регСв.ФизическоеЛицо;
						ОбластьМакета.Параметры.ОтпускОтгрузилДолжность = регСв.Должность;
					иначе
						ОбластьМакета.Параметры.ФИОотгрузил = Кладовщик;
						ОбластьМакета.Параметры.ОтпускОтгрузилДолжность =  ДолжнКладовщика(кладовщик);
					КонецЕсли;
					
				ИначеЕсли  СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00122")
	 				   или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00122") тогда
					ОбластьМакета.Параметры.ФИОразрешил = Кладовщик;
					ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика(кладовщик);
					
					регСв = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, новый Структура("Подразделение, ОтветственноеЛицо",
					справочники.Подразделения.НайтиПоКоду("00122"), Перечисления.ОтветственныеЛицаОрганизации.Кассир) );
					Если регСв<>неопределено тогда
						ОбластьМакета.Параметры.ФИОотгрузил = регСв.ФизическоеЛицо;
						ОбластьМакета.Параметры.ОтпускОтгрузилДолжность = регСв.Должность;
					иначе
						ОбластьМакета.Параметры.ФИОотгрузил = Кладовщик;
						ОбластьМакета.Параметры.ОтпускОтгрузилДолжность =  ДолжнКладовщика(кладовщик);
					КонецЕсли;
			ИначеЕсли  СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00138")
	 				   или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00138") тогда
					ОбластьМакета.Параметры.ФИОразрешил = Кладовщик;
					ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика(кладовщик);
					
					регСв = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, новый Структура("Подразделение, ОтветственноеЛицо",
					справочники.Подразделения.НайтиПоКоду("00138"), Перечисления.ОтветственныеЛицаОрганизации.Кассир) );
					Если регСв<>неопределено тогда
						ОбластьМакета.Параметры.ФИОотгрузил = регСв.ФизическоеЛицо;
						ОбластьМакета.Параметры.ОтпускОтгрузилДолжность = регСв.Должность;
					иначе
						ОбластьМакета.Параметры.ФИОотгрузил = Кладовщик;
						ОбластьМакета.Параметры.ОтпускОтгрузилДолжность =  ДолжнКладовщика(кладовщик);
					КонецЕсли;
			ИначеЕсли  СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00133")
	 				   или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00133") тогда
					ОбластьМакета.Параметры.ФИОразрешил = Кладовщик;
					ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика(кладовщик);
					
					регСв = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, новый Структура("Подразделение, ОтветственноеЛицо",
					справочники.Подразделения.НайтиПоКоду("00133"), Перечисления.ОтветственныеЛицаОрганизации.Кассир) );
					Если регСв<>неопределено тогда
						ОбластьМакета.Параметры.ФИОотгрузил = регСв.ФизическоеЛицо;
						ОбластьМакета.Параметры.ОтпускОтгрузилДолжность = регСв.Должность;
					иначе
						ОбластьМакета.Параметры.ФИОотгрузил = Кладовщик;
						ОбластьМакета.Параметры.ОтпускОтгрузилДолжность =  ДолжнКладовщика(кладовщик);
					КонецЕсли;
				Иначе	
					ОбластьМакета.Параметры.ФИОразрешил = "Фролов А.И.";
					ОбластьМакета.Параметры.ФИОотгрузил = "Фролов А.И.";
					ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "зав. складом";
				КонецЕсли;
			Иначе
					ОбластьМакета.Параметры.ФИОразрешил = "Фролов А.И.";
					ОбластьМакета.Параметры.ФИОотгрузил = "Фролов А.И.";
					ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "зав. складом";
			КонецЕсли;
			//2013.11.14 ФормулаАвто
			Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда //ФормулаАвто
				ОбластьМакета.Параметры.ФИОразрешил = "Зайцева Н.С.";
				ОбластьМакета.Параметры.ФИОотгрузил = "Зайцева Н.С.";
				ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "Ген. директор";
			иначеЕсли СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда //ФормулаАвто
				ОбластьМакета.Параметры.ФИОразрешил = "Курапова Е.А.";
				ОбластьМакета.Параметры.ФИОотгрузил = "Курапова Е.А.";
				ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "Ген. директор";
				
			КонецЕсли;
			
		Иначе //----------------------------------------------------------------------------------------------
			   СсылкаНаОбъектПодразделение = СсылкаНаОбъект.Подразделение;
			   
			   //+++ 02.04.2015 перемещение 
			   Если типЗнч(СсылкаНаОбъект) = тип("ДокументСсылка.ПеремещениеТоваров") тогда
				   если СсылкаНаОбъект.СкладОтправитель.Подразделение.ОбособленноеПодразделение тогда
					   СсылкаНаОбъектПодразделение = СсылкаНаОбъект.СкладОтправитель.Подразделение;
				   КонецЕсли;	   
			   КонецЕсли;	   
			   
			Если  СсылкаНаОбъектПодразделение = справочники.Подразделения.НайтиПоКоду("00005") тогда
				ОбластьМакета.Параметры.ФИОразрешил = "Фролов А.И.";
				ОбластьМакета.Параметры.ФИОотгрузил = "Фролов А.И.";
				ОбластьМакета.Параметры.ОтпускПроизвелДолжность = "зав. складом";
			Иначе		
		 		Отбор1 = новый Структура;
				Отбор1.Вставить("Подразделение", СсылкаНаОбъектПодразделение);
				
				Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
				регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
				
				Кладовщик =строка(регСведРук.ФизическоеЛицо);
				ДолжнКладовщика =регСведРук.Должность;
					
				ОбластьМакета.Параметры.ФИОразрешил = Кладовщик;
				ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика;
				
				регСв = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, 
					новый Структура("Подразделение, ОтветственноеЛицо",
					СсылкаНаОбъектПодразделение, Перечисления.ОтветственныеЛицаОрганизации.Кассир) );
				Если регСв<>неопределено тогда
					ОбластьМакета.Параметры.ФИОотгрузил = регСв.ФизическоеЛицо;
					ОбластьМакета.Параметры.ОтпускОтгрузилДолжность = регСв.Должность;
				иначе
					ОбластьМакета.Параметры.ФИОотгрузил = Кладовщик;
					ОбластьМакета.Параметры.ОтпускОтгрузилДолжность =  ДолжнКладовщика(кладовщик);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// обычно это одно и то же, кроме питера
		Если ОбластьМакета.Параметры.ОтпускОтгрузилДолжность = "" тогда
			ОбластьМакета.Параметры.ОтпускОтгрузилДолжность =  ОбластьМакета.Параметры.ОтпускПроизвелДолжность;
		КонецЕсли;	
		
		//Орлов++
		Если ВариантОформления = 1 Тогда
			ОбластьМакета.Параметры.ДолжнВодитель  = ?(ЗначениеЗаполнено(Водитель), "водитель 1", "");
			ОбластьМакета.Параметры.ФИОВодителя    = Водитель;
			
			ОбластьМакета.Параметры.ДолжнВодитель2  = "водитель"; //?(ЗначениеЗаполнено(Водитель2), "водитель 2", "");
			ОбластьМакета.Параметры.ФИОВодителя2    = "Глухов А.С."; //Водитель2;
		ИначеЕсли ВариантОформления = 2 Тогда
			ОбластьМакета.Параметры.ДолжнВодительПолучил = "водитель";
			ОбластьМакета.Параметры.ФИОВодительПолучил   = "Глухов А.С.";
		КонецЕсли;
		//Орлов--
		
		ОбластьМакета.Параметры.ДатаДокумента		= Формат(Шапка.ДатаДокумента, "Л=ru_RU; ДЛФ=DD; ДП=-");
		
		Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
			//РНД
			Если (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00643"))) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("00634")) и ЗначениеЗаполнено(СсылкаНаОбъект.Ответственный) Тогда 
				ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ПолучитьДолжность(Справочники.Подразделения.НайтиПоКоду("00106"),СсылкаНаОбъект.Ответственный.ФизЛицо);
				ОбластьМакета.Параметры.ФИОразрешил = СсылкаНаОбъект.Ответственный.ФизЛицо;
				ОбластьМакета.Параметры.ОтпускотгрузилДолжность = ПолучитьДолжность(Справочники.Подразделения.НайтиПоКоду("00106"),СсылкаНаОбъект.Ответственный.ФизЛицо);
				ОбластьМакета.Параметры.ФИОотгрузил = СсылкаНаОбъект.Ответственный.ФизЛицо;
			ИначеЕсли (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00929"))) и (СсылкаНаОбъект.СкладПолучатель = Справочники.склады.найтиПоКоду("00962")) и (СсылкаНаОбъект.дата>='2015-08-20') Тогда 	
				ФЛЕКБ = ПолучитьОтветственноеЛицоРуководителя(СсылкаНаОбъект.Подразделение,Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
				ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ПолучитьДолжность(СсылкаНаОбъект.Подразделение,ФЛЕКБ);
				ОбластьМакета.Параметры.ФИОразрешил = ФЛЕКБ;
				ОбластьМакета.Параметры.ОтпускотгрузилДолжность = ПолучитьДолжность(СсылкаНаОбъект.Подразделение,ФЛЕКБ);
				ОбластьМакета.Параметры.ФИОотгрузил = ФЛЕКБ;
			конецЕсли; //<<
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;//КолСтолб<=1
КонецЕсли; // договор *

//	//===================================================================
	Если Реализации.Количество()>1 Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ДопПробел");
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("ДополнительныйШтрихКод");
		//Для каждого стр из Реализации Цикл
		//	Если стр.Реализация <>	СсылкаНаОбъект и ТипЗнч(стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		//		ОбШтрихКод=ОбластьМакета.Рисунки.ШтрихкодД.Объект;
		//		ОбШтрихКод.ТипКода = 4; 
		//		ОбШтрихКод.Сообщение = СформироватьШКРеализации(стр.Реализация,"2");//XMLСтрока(ЭтотОбъект.Ссылка.УникальныйИдентификатор()); 
		//		ОбШтрихКод.ОтображатьТекст = Ложь;
		//		ТабДокумент.Вывести(ОбластьМакета);
		//	конецЕсли;
		//КонецЦикла;
	конецЕсли;
	
	
	возврат ТабДокумент;
	
КонецФункции // ПечатьТТН_250711()

//Орлов++
функция ПечатьТТН_250711_ЯШТ_2_экземпляр(КолСтолб = 0, КонтрагентМосква="", ВариантОформления = 0)
	
	#Если Клиент Тогда
		Если СсылкаНаОбъект.Дата<ДатаНачалаТТН_250711 Тогда
			Сигнал();
			Предупреждение("Транспортная Накладная (Приложение №4) - принята 15.04.2011 №272,
			| но вступает в силу только с "+Формат(ДатаНачалаТТН_250711,"ДФ=dd.MM.yyyy")+",
			| и на дату: "+Формат(СсылкаНаОбъект.Дата,"ДФ=dd.MM.yyyy")+" - еще не действует!",60,"Транспортная Накладная - не действительна!");
		КонецЕсли;  
	#КонецЕсли		  
	
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Если СсылкаНаОбъект.Дата<ДатаНачалаТТН_13032012 Тогда 
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН_Приложение4";
		Макет       = ПолучитьМакет("Приложение4_ЯШТ");
	Иначе
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН_Приложение4_13032012";
		Макет       = ПолучитьМакет("Приложение4_ЯШТ_13032012");	
	КонецЕсли;
	ОбластьМакета = Макет.ПолучитьОбласть("Лицевая");
	
	//-------параметры лицевой стороны-----------------------
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") Тогда
		Шапка = ПолучитьШапку_отвХран();
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Шапка = ПолучитьШапку_Перемещение();
	Иначе
		Шапка = ПолучитьШапку();
	КонецЕсли;
	
	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,    Шапка.ДатаДокумента,, Шапка.БанковскийСчет);	
	//СведенияОПокупателе     = СведенияОЮрФизЛице(Шапка.Покупатель,      Шапка.ДатаДокумента);
	СведенияОГрузоотправителе = СведенияОЮрФизЛице(Шапка.Грузоотправитель,  Шапка.ДатаДокумента);
	
	Если КонтрагентМосква="" Тогда //+++ 10.05.2012
		СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,   Шапка.ДатаДокумента);
	Иначе
		СведенияОГрузополучателе  = СведенияОЮрФизЛице(КонтрагентМосква,   Шапка.ДатаДокумента);
	КонецЕсли;
	
	ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");//,НомерСчета,Банк,БИК,КоррСчет");
	Если Шапка.Грузоотправитель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо Тогда 
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = ГрузоотправительПредставление;
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = "";
	Иначе	
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = "";
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = ГрузоотправительПредставление;
	КонецЕсли;	
	
	ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	Если Шапка.Грузополучатель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = ГрузополучательПредставление;
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = "";
	Иначе 
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = "";
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = ГрузополучательПредставление;
	КонецЕсли;
	//ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	
	
	//---------------Заполнение значений макета ----------------------------
	ОбластьМакета.Параметры.НомерЭкземпляра = НомерЭкземпляра;
	ОбластьМакета.Параметры.НомерДокумента  = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента   = Формат(Шапка.ДатаДокумента, "Л=ru_RU; ДЛФ=DD; ДП=-");
	ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");//,НомерСчета,Банк,БИК,КоррСчет");
	
	Если Шапка.Грузоотправитель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо Тогда 
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = ГрузоотправительПредставление;
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = "";
	Иначе	
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеФ = "";
		ОбластьМакета.Параметры.ГрузоотправительПредставлениеЮ = ГрузоотправительПредставление;
	КонецЕсли;	
	
	ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	Если Шапка.Грузополучатель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = ГрузополучательПредставление;
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = "";
	Иначе 
		ОбластьМакета.Параметры.ГрузополучательПредставлениеЮ  = "";
		ОбластьМакета.Параметры.ГрузополучательПредставлениеФ  = ГрузополучательПредставление;
	КонецЕсли;
	//ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	
	
	//1,2
	//ОтпускРазрешилДолжность					ФИООтпускРазрешил	ГрузПринялДолжность					ГрузПолучилДолжность
	
	//  Если НЕ Шапка.ОтгрузкаЧерезЧП Тогда
	Кладовщик = ПолучитьКладовщика();
	ОбластьМакета.Параметры.ФИООтпускПроизвел = Кладовщик;
	ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ДолжнКладовщика(Кладовщик);  //!!!
	//КонецЕсли; 
	ОбластьМакета.Параметры.ФИОГрузПолучил = "";
	ОбластьМакета.Параметры.ГрузПолучилДолжность = "";
	
	//+++( 04.08.2011 - представление наименований в виде таблицы
	//==========================================================================================
	ТабДокумент.Вывести(ОбластьМакета);
	
	//КолСтолб = 2; // 0, 1, 2, 3, 4, 6.
	Если КолСтолб>0 Тогда
		Если КолСтолб=1 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Назв");
			ОбластьМакета.Параметры.Пункт3_1 = стрЗаменить(Пункт3_1, "; ",";"+Символы.ПС);
			ТабДокумент.Вывести(ОбластьМакета);
			
		ИначеЕсли (КолСтолб>6) Тогда
			Предупреждение("Невозможно отобразить названия в "+строка(КолСтолб)+" столбцах!
			|Будет использован стандарный вывод названия (п. 3.1)",10);
			ОбластьМакета = Макет.ПолучитьОбласть("Назв");
			ОбластьМакета.Параметры.Пункт3_1 = Пункт3_1;
			ТабДокумент.Вывести(ОбластьМакета);
		Иначе
			КолСтолб= ?(КолСтолб=5, 6, КолСтолб);
			ОбластьМакета = Макет.ПолучитьОбласть("Назв_стр"+Строка(КолСтолб));
			
			N = СтрЧислоВхождений(Пункт3_1,";");//строки
			Nстр = Цел(N/КолСтолб) + ?(N%КолСтолб=0, 0, 1); // целое + 1 стр. на нецелое
			//-------основной цикл без таблицы значений-----------------------------
			Назв0 = Пункт3_1; // ограничимся циклом
			Для k=0 по Nстр - 1 цикл
				//СтрЗнач = табЗнач[k];
				для j=1 по КолСтолб цикл
					i= найти(Назв0,";");		L=стрДлина(Назв0);
					стрЗнач12 = СокрЛП(лев(Назв0, i-1)); Назв0 = Прав(Назв0, L-i);
					ОбластьМакета.Параметры["назв"+строка(j)] = стрЗнач12; // СтрЗнач[j-1]);
				конецЦикла;
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			//------------------основной цикл -----------------------------
			
		КонецЕсли;
	Иначе  // как было - сплошным текстом!
		ОбластьМакета = Макет.ПолучитьОбласть("Назв");
		ОбластьМакета.Параметры.Пункт3_1 = "Список грузов см. Приложение"; //+++ 12.08.2011 Гаричев
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;	//конец КолСтолб>0
	
	ОбластьМакета = Макет.ПолучитьОбласть("Лицевая2");
	//==========================================================================================
	//+++)
	
	//+++ Нетто, Брутто //, ОбъемШтук, ОбъемМест
	выборка2 = ПолучитьВесОбъем();
	Если Выборка2.Количество()>0 Тогда
		Выборка2.Следующий();
		ОбластьМакета.Параметры.МассаГрузаНетто  = ?(Выборка2.Нетто<>0,Формат(Выборка2.Нетто,"ЧН= ")+"кг; ", "");
		ОбластьМакета.Параметры.МассаГрузаБрутто = ?(Выборка2.Брутто<>0, "("+Формат(Выборка2.Брутто,"ЧН= ")+"кг); ", "");
		кол = Выборка2.Количество;
		колМест = Выборка2.КоличествоМест;
		ОбластьМакета.Параметры.ВсегоМестПрописью = ?(колМест=0, ?(кол=0,"",Строка(кол)+" шт."), строка(колМест)+" мест");
		
	Иначе 
		ОбластьМакета.Параметры.МассаГрузаНетто  = "";
		ОбластьМакета.Параметры.МассаГрузаБрутто = "";
		ОбластьМакета.Параметры.ВсегоМестПрописью = "";
	конецЕсли;
	
	
	//3.2 КолМест, маркировка-------------------------------------------
	ОбластьМакета.Параметры.Пункт3_2 = Пункт3_2;
	
	// [МассаГрузаНетто]; [МассаГрузаБрутто]; [Размеры]; [ОбъемМест]
	ОбластьМакета.Параметры.Пункт3_3 = Пункт3_3;
	
	
	//4
	ОбластьМакета.Параметры.ПереченьДопДокументов = ПереченьДопДокументов;
	ОбластьМакета.Параметры.ПереченьСертификатов  = ПереченьСертификатов;
	//5
	ОбластьМакета.Параметры.Пункт5_1 = Пункт5_1;
	ОбластьМакета.Параметры.Пункт5_2 = Пункт5_2;
	ОбластьМакета.Параметры.Пункт5_3 = Пункт5_3;
	
	//6,7 
	ОбластьМакета.Параметры.ПунктПогрузки  = "86 км МКАДа";
	
	Если СведенияОГрузоПолучателе.Представление<>Неопределено Тогда 
		ОбластьМакета.Параметры.ПунктРазгрузки = ?(ПунктРазгрузки="", ?(СведенияОГрузоПолучателе.ФактическийАдрес="",СведенияОГрузоПолучателе.ЮридическийАдрес,СведенияОГрузоПолучателе.ФактическийАдрес) , ПунктРазгрузки);
	КонецЕсли;
	
	

	ОбластьМакета.Параметры.Пункт6_6 = Водитель;
	ОбластьМакета.Параметры.Пункт7_6 = Пункт7_6;
	ОбластьМакета.Параметры.Пункт6_7 = "Глухов А.С."; //Водитель2;
	ОбластьМакета.Параметры.Пункт7_7 = "Глухов А.С."; //Водитель2;
	
	ОбластьМакета.Параметры.ДатаВремяПогрузки = ""; // устанавливается вручную
	ОбластьМакета.Параметры.ДатаВремяВыгрузки = ""; // устанавливается вручную
	
	ОбластьМакета.Параметры.СостояниеГрузаОтправителя  = СостояниеГрузаОтправителя;
	ОбластьМакета.Параметры.СостояниеГрузаПолучателя  = СостояниеГрузаПолучателя;
	
	ОбластьМакета.Параметры.ВсегоМестПрописью = Пункт3_2;
	//ОбластьМакета.Параметры.ВсегоНаименований = Формат(СсылкаНаОбъект.Товары.Количество(),"ЧН=-")+" тов.";
	//8
	ОбластьМакета.Параметры.СрокДоставки1 = Формат(СрокДоставки1,"ДФ=dd.MM.yyyy; ДП=---");
	//+++ ОбластьМакета.Параметры.ВидПеревозки = ?(ЗначениеЗаполнено(ВидПеревозки), ВидПеревозки, "Автомобильным транспортом");
	//9
	ОбластьМакета.Параметры.ФИОВодителя	              = "Глухов А.С."; //Водитель2;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
	ОбластьМакета.Параметры.ДолжнВодитель             = ?(ЗначениеЗаполнено(Водитель2), "водитель", "");
	
	ТабДокумент.Вывести(ОбластьМакета);
		
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	
	//========================параметры оборотной стороны==========================================
	ОбластьМакета = Макет.ПолучитьОбласть("Оборотная");
	
	//10
	Если ТипЗнч(Перевозчик2)<>Тип("Строка") Тогда
		Если ЗначениеЗаполнено(Перевозчик2) Тогда
			СведенияОПеревозчике = СведенияОЮрФизЛице(Перевозчик2,  Шапка.ДатаДокумента);
			ПеревозчикПредставление = ОписаниеОрганизации(СведенияОПеревозчике,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
			Если Перевозчик2.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо Тогда 
				ОбластьМакета.Параметры.ОрганизацияПеревозчикФ = ПеревозчикПредставление;
				ОбластьМакета.Параметры.ОрганизацияПеревозчикЮ = "";
			Иначе	
				ОбластьМакета.Параметры.ОрганизацияПеревозчикФ ="";
				ОбластьМакета.Параметры.ОрганизацияПеревозчикЮ = ПеревозчикПредставление;
			КонецЕсли;
			
			//Иначе
			//Перевозчик = Шапка.Грузоотправитель;
			//СведенияОПеревозчике = СведенияОгрузоотправителе;
			//ПеревозчикПредставление = ГрузоотправительПредставление;
			//ФИОруководителя = Руководители.Руководитель;
		КонецЕсли;
	Иначе //строка!
		ОбластьМакета.Параметры.ОрганизацияПеревозчикЮ = Перевозчик2;
	КонецЕсли;
	
	//+++ 29.07.2011 Кладовщик = ПолучитьКладовщика();
	ОбластьМакета.Параметры.ФИОруководителя = ""; //Кладовщик
	
	ОбластьМакета.Параметры.ФИОВодителя               = "Глухов А.С."; //Водитель2;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;	
	
	//11
	ОбластьМакета.Параметры.МаркаАвтомобиля           = "Газель"; //СокрЛП(МаркаАвтомобиля2);
	ОбластьМакета.Параметры.Прицеп                    = ?(ЗначениеЗаполнено(МаркаПрицепа), "Прицеп: "+МаркаПрицепа, "");
	
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = "А 635 СН 76"; //ГосНомерАвтомобиля2;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = ?(ЗначениеЗаполнено(ГосНомерПрицепа), "Прицеп: "+ГосНомерПрицепа, "");
	
	//12
	ОбластьМакета.Параметры.СостояниеГрузаОтправителя  = СостояниеГрузаОтправителя;
	ОбластьМакета.Параметры.СостояниеГрузаПолучателя  = СостояниеГрузаПолучателя;
	
	//15
	ОбластьМакета.Параметры.ВсегоКОплате     = "";
	ОбластьМакета.Параметры.ПроцентНаценки   = ""; //"процент: ";
	ОбластьМакета.Параметры.СкладскиеРасходы = "";
	
	//+++ 07.06.2012
	Если СсылкаНаОбъект.Дата>ДатаНачалаТТН_13032012 Тогда 
		
		Если ЗначениеЗаполнено(Перевозчик) Тогда //+++ 13.06.2012
			ОбластьМакета.Параметры.Пункт15_7 = ГрузоотправительПредставление;
		Иначе
			ОбластьМакета.Параметры.Пункт15_7 = "";
		КонецЕсли;	
		
		//16
		ОбластьМакета.Параметры.ФИООтпускПроизвел       = кладовщик;
		ОбластьМакета.Параметры.ДатаПогрузки = ЭтотОбъект.ДатаВремяПогрузки; //кладовщик
		
		ОбластьМакета.Параметры.ФИОГрузПолучил = "Глухов А.С."; //Водитель2;
		ОбластьМакета.Параметры.ДатаРазгрузки = ЭтотОбъект.ДатаВремяВыгрузки; //кладовщик
		// ОбластьМакета.Параметры.Пункт10_1Ведомость = Пункт10_2;
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	//===================================================================
	//Приложение со списком товаров
	//+++ 12.04.2016 - выключено
Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг")тогда // 13.04.2016	
	Если КолСтолб<=1 
		и найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование, "*")>0 Тогда  //только не для табличной части 3.1
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаПриложения");
		ОбластьМакета.Параметры.НомерДокумента  = ПолучитьНомерНаПечать(Шапка);
		ОбластьМакета.Параметры.ДатаДокумента   = Формат(Шапка.ДатаДокумента, "Л=ru_RU; ДЛФ=DD; ДП=-");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПриложения");
		
		//---------------------------------
		//получение всех данных идет из Документа или СпискаДокументов
		Если ЭтотОбъект.Реализации.Количество()=0 Тогда
			Док1 = СсылкаНаОбъект;
			
			ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
			для каждого Стр1 из Док1.Товары цикл
				//++Смирнов для Лагерной и Радуга Питер убираем LegeArtis
				Если Шапка.Покупатель.Код="93136  " или  Шапка.Покупатель.Код="91777  " тогда
					ОбластьМакета.Параметры.ТоварНаименование = СтрЗаменить(стр1.Номенклатура,"LegeArtis","");
				иначе
					ОбластьМакета.Параметры.ТоварНаименование = стр1.Номенклатура;
				КонецЕсли;
				ОбластьМакета.Параметры.Количество = стр1.Количество;
				Если ТипЗнч(док1)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					ОбластьМакета.Параметры.Склад	= ?(ЗначениеЗаполнено(стр1.Склад), стр1.Склад, док1.СкладОтправитель);
				Иначе
					ОбластьМакета.Параметры.Склад	= ?(ЗначениеЗаполнено(стр1.Склад), стр1.Склад, док1.Склад);
				КонецЕсли;
				
				ОбластьМакета.Параметры.БазоваяЕдиницаНаименование = стр1.Номенклатура.БазоваяЕдиницаИзмерения;
				Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
					ОбластьМакета.Параметры.Артикул = стр1.Номенклатура.Артикул;
				Иначе
					ОбластьМакета.Параметры.Артикул = стр1.Номенклатура.Код;
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			КолИтого = Док1.Товары.Итог("Количество");
			КолСтрок = Док1.Товары.Количество();
		Иначе//много
			КолИтого = 0; КолСтрок = 0;
			ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
			для каждого Док1 из ЭтотОбъект.Реализации цикл
				для каждого Стр1 из Док1.реализация.Товары цикл
					//++Смирнов для Лагерной и Радуга Питер убираем LegeArtis
					Если Шапка.Покупатель.Код="93136  " или  Шапка.Покупатель.Код="91777  " тогда
						ОбластьМакета.Параметры.ТоварНаименование = СтрЗаменить(стр1.Номенклатура,"LegeArtis","");
					иначе
						ОбластьМакета.Параметры.ТоварНаименование = стр1.Номенклатура;
					КонецЕсли;

					ОбластьМакета.Параметры.Количество = стр1.Количество;
					Если ТипЗнч(Док1.реализация)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
						ОбластьМакета.Параметры.Склад	= ?(ЗначениеЗаполнено(стр1.Склад), стр1.Склад, Док1.реализация.СкладОтправитель);
					Иначе
						ОбластьМакета.Параметры.Склад	= ?(ЗначениеЗаполнено(стр1.Склад), стр1.Склад, Док1.реализация.Склад);
					КонецЕсли;
					ОбластьМакета.Параметры.БазоваяЕдиницаНаименование = стр1.Номенклатура.БазоваяЕдиницаИзмерения;
					
					Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
						ОбластьМакета.Параметры.Артикул = стр1.Номенклатура.Артикул;
					Иначе
						ОбластьМакета.Параметры.Артикул = стр1.Номенклатура.Код;
					КонецЕсли;
					
					
					ТабДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
				КолИтого = КолИтого + Док1.реализация.Товары.Итог("Количество");
				КолСтрок = КолСтрок + Док1.реализация.Товары.Количество();
			КонецЦикла;
		КонецЕсли;
		//---------------------------------
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалПриложения");
		ОбластьМакета.Параметры.ИтогоКоличество  	= КолИтого;
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета=",,,ж,,,,м,0";
		ОбластьМакета.Параметры.ВсегоНаименований	= ЧислоПрописью(КолСтрок, ФормСтрока, ПарПредмета);
		ОбластьМакета.Параметры.КоличествоСтрок	= КолСтрок;
		должВод = "";
		Если ЗначениеЗаполнено(Водитель2) Тогда
			должВод = "водитель"; 
		КонецЕсли;
		ОбластьМакета.Параметры.ДолжнВодитель  = должВод;
		ОбластьМакета.Параметры.ФИОВодителя    = "Глухов А.С."; //Водитель2;
		
		
		ОбластьМакета.Параметры.ФИОразрешил = Водитель;
		ОбластьМакета.Параметры.ФИОотгрузил = Водитель;
		ОбластьМакета.Параметры.ОтпускПроизвелДолжность = ?(ЗначениеЗаполнено(Водитель), "водитель", "");
		
		
		ОбластьМакета.Параметры.ДатаДокумента		= Формат(Шапка.ДатаДокумента, "Л=ru_RU; ДЛФ=DD; ДП=-");
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;//КолСтолб<=1
КонецЕсли; // Договор *	
	////===================================================================
	НапечататьДокумент(ТабДокумент, 1, Ложь, "Транспортная Накладная (Приложение №4) для второго перевозчика");
	
КонецФункции // ПечатьТТН_250711()
//Орлов--
//+++)



функция ПолучитьКладовщика() Экспорт
	
	Если Кладовщик <> "" Тогда   //уже заполнен!
		Возврат Кладовщик;
	КонецЕсли;
	
	Отбор = Новый Структура("СтруктурнаяЕдиница");
	
	Если НЕ ЕстьРеквизитДокумента("Склад",СсылкаНаОбъект.Метаданные()) и не (ЕстьРеквизитДокумента("СкладОтправитель",СсылкаНаОбъект.Метаданные()) и ЕстьРеквизитДокумента("СкладПолучатель",СсылкаНаОбъект.Метаданные()) и ((СсылкаНаОбъект.СкладОтправитель.код = "00693" и СсылкаНаОбъект.СкладПолучатель.код = "00692") или (СсылкаНаОбъект.СкладПолучатель.код = "00962" и СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00929"))) или (СсылкаНаОбъект.СкладПолучатель.код = "00634" и СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00643"))) или (СсылкаНаОбъект.СкладПолучатель.код = "01366" и СсылкаНаОбъект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00133")))) Тогда
		возврат Кладовщик;
	КонецЕсли;
	
//---------------Сначала проверим кладовщика склада-------------------------------------------	
	//Отбор.СтруктурнаяЕдиница = ЭтотОбъект.СсылкаНаОбъект.Склад;
	//СрезПоследних   = РегистрыСведений.ОтветственныеЛица.СрезПоследних(ЭтотОбъект.СсылкаНаОбъект.Дата, Отбор);
	// Если СрезПоследних <> неопределено и СрезПоследних.Количество()>0 Тогда
	//	Кладовщик = СрезПоследних[0].ФизическоеЛицо.Наименование;
	//	возврат Кладовщик;
	//КонецЕсли;	
		
	
//------------------только для наших организаций----------------------------------------------------------	
	Если (ЭтотОбъект.СсылкаНаОбъект.Организация.ИНН = "7604069216")          // ЗАО ТК Яршинторг (Ярославль)
		  или (ЭтотОбъект.СсылкаНаОбъект.Организация.ИНН = "760200230721") Тогда  // ИП Фролов
		  
		  
//+++ 30.03.2012 только для реализаций
//+++ 02.04.2015 - для всех док!
Если ТипЗнч(СсылкаНаОбъект) = тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		// проверяем подразделение Реализации
		Если СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00107") Тогда
			Кладовщик ="Войновская Н.Р."
		ИначеЕсли СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00106")
			или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00112")
			или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00122") 
			или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00138") 
			или СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00133") Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			
		Отбор1 = новый Структура;
		Отбор1.Вставить("Подразделение", СсылкаНаОбъект.Подразделение);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
		регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
		регСведГлБух = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);

		//+++( 26.11.2013
		//Если регСведРук.ФизическоеЛицо<>регСведГлБух.ФизическоеЛицо Тогда
		//	Ответ = Вопрос("Использовать Основного ответственного?
		//	| Если ответственный - "+строка(регСведРук.ФизическоеЛицо)+" (Да)
		//	| Иначе - "+строка(регСведГлБух.ФизическоеЛицо)+" (Нет)?", Режим, 0);
		//		Если Ответ = КодВозвратаДиалога.Да Тогда
		//		Кладовщик =строка(регСведРук.ФизическоеЛицо);
		//		Иначе
		//		Кладовщик =строка(регСведГлБух.ФизическоеЛицо);
		//		КонецЕсли;
		//  Иначе		
		//	Кладовщик =строка(регСведРук.ФизическоеЛицо);
		// КонецЕсли;	
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир);
		регСведКассир = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Если СсылкаНаОбъект.Подразделение.Код = "00112" тогда //СПб - фиксировано - с вопросом, если Рук.<>Гл.Бух.!
			
			Если регСведРук.ФизическоеЛицо<>регСведГлБух.ФизическоеЛицо Тогда
				Ответ = КодВозвратаДиалога.Да;//18.02.2016 - ВСЕГДА НЕЯСКИНА
				//Вопрос("Использовать Основного ответственного?
				//| Если ответственный - "+строка(регСведРук.ФизическоеЛицо)+" (Да)
				//| Иначе - "+строка(регСведГлБух.ФизическоеЛицо)+" (Нет)?", РежимДиалогаВопрос.ДаНет, 0);
				Если Ответ = КодВозвратаДиалога.Да Тогда
					Кладовщик =строка(регСведРук.ФизическоеЛицо);
					ДолжнКладовщика =регСведРук.Должность;
				 Иначе
					Кладовщик =строка(регСведГлБух.ФизическоеЛицо);
					ДолжнКладовщика =регСведРук.Должность;
				 КонецЕсли;
			 Иначе		
				Кладовщик =строка(регСведРук.ФизическоеЛицо);
				 ДолжнКладовщика = регСведРук.Должность;
			 КонецЕсли;		
		 ИначеЕсли СсылкаНаОбъект.Подразделение.Код = "00133" тогда
			 Если регСведРук.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
				регСведМск = регСведРук;
			ИначеЕсли регСведГлБух.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
				регСведМск = регСведГлБух;
			ИначеЕсли регСведКассир.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
				регСведМск = регСведКассир;
			Иначе
				регСведМск = новый Структура("ФизическоеЛицо, Должность, Доверенность","","",""); 
			КонецЕсли;
		
			Кладовщик = регСведМск.ФизическоеЛицо;
			ДолжнКладовщика =регСведМск.Должность;
			
		ИначеЕсли СсылкаНаОбъект.Подразделение.Код = "00138" тогда //ЕКТ +++ 25.08.2015
			Кладовщик = регСведРук.ФизическоеЛицо;
			ДолжнКладовщика =регСведРук.Должность;
		
		Иначе//РнД	
			Если регСведРук.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
				регСведРнД = регСведРук;
			ИначеЕсли регСведГлБух.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
				регСведРнД = регСведГлБух;
			ИначеЕсли регСведКассир.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
				регСведРнД = регСведКассир;
			Иначе
				регСведРнД = новый Структура("ФизическоеЛицо, Должность, Доверенность","","",""); 
			КонецЕсли;
		
			Кладовщик = регСведРнД.ФизическоеЛицо;
			ДолжнКладовщика =регСведРнД.Должность;
		КонецЕсли;
		//+++)
	
		//-------------------- проверяем подразделение Заказа Покупателя ------------------------------------------
		ИначеЕсли ЗначениеЗаполнено(СсылкаНаОбъект.сделка) Тогда
			Если СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00107")Тогда
				Кладовщик = "Войновская Н.Р.";
			ИначеЕсли СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00106")
				 или  СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00112")
				  или  СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00122")
				  		  или  СсылкаНаОбъект.сделка.Подразделение = справочники.Подразделения.НайтиПоКоду("00138") Тогда
				Режим = РежимДиалогаВопрос.ДаНет;
				
				Отбор1 = новый Структура;
				Отбор1.Вставить("Подразделение",СсылкаНаОбъект.сделка.Подразделение);
				Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);  //Жилин
				регСведРук = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
				
				Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
				регСведГлБух = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);

		//+++ 26.11.2013
				//Если регСведРук.ФизическоеЛицо<>регСведГлБух.ФизическоеЛицо Тогда
				 //   	Ответ = Вопрос("Использовать Основного ответственного?
				 //   	| Если ответственный - "+строка(регСведРук.ФизическоеЛицо)+" (Да)
				 //   	| Иначе - "+строка(регСведГлБух.ФизическоеЛицо)+" (Нет)?", Режим, 0);
				 //   	Если Ответ = КодВозвратаДиалога.Да Тогда
				 //   		Кладовщик =строка(регСведРук.ФизическоеЛицо);
				 //   	Иначе
				 //   		Кладовщик =строка(регСведГлБух.ФизическоеЛицо);
				 //   	КонецЕсли;
				 //Иначе		
				 //   Кладовщик =строка(регСведРук.ФизическоеЛицо);
				 //КонецЕсли;
				Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир);
				регСведКассир = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
				Если СсылкаНаОбъект.Подразделение.Код = "00112" тогда //СПб - фиксировано - с вопросом, если Рук.<>Гл.Бух.!
					
					Если регСведРук.ФизическоеЛицо<>регСведГлБух.ФизическоеЛицо Тогда
						Ответ = Вопрос("Использовать Основного ответственного?
						| Если ответственный - "+строка(регСведРук.ФизическоеЛицо)+" (Да)
						| Иначе - "+строка(регСведГлБух.ФизическоеЛицо)+" (Нет)?", РежимДиалогаВопрос.ДаНет, 0);
						Если Ответ = КодВозвратаДиалога.Да Тогда
							Кладовщик =строка(регСведРук.ФизическоеЛицо);
							ДолжнКладовщика =регСведРук.Должность;
						 Иначе
							Кладовщик =строка(регСведГлБух.ФизическоеЛицо);
							ДолжнКладовщика =регСведРук.Должность;
						 КонецЕсли;
					 Иначе		
						Кладовщик =строка(регСведРук.ФизическоеЛицо);
						 ДолжнКладовщика = регСведРук.Должность;
					 КонецЕсли;		
				ИначеЕсли СсылкаНаОбъект.Подразделение.Код = "00112" тогда //+++ 02.04.2015  //РнД	
					Если регСведРук.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
						регСведРнД = регСведРук;
					ИначеЕсли регСведГлБух.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
						регСведРнД = регСведГлБух;
					ИначеЕсли регСведКассир.ФизическоеЛицо = СсылкаНаОбъект.Ответственный.ФизЛицо тогда
						регСведРнД = регСведКассир;
					Иначе
						регСведРнД = новый Структура("ФизическоеЛицо, Должность, Доверенность","","",""); 
					КонецЕсли;
				
					Кладовщик = регСведРнД.ФизическоеЛицо;
					ДолжнКладовщика =регСведРнД.Должность;
									
				Иначе  //+++ 02.04.2015
					Отбор1 = новый Структура;
					Отбор1.Вставить("Подразделение", СсылкаНаОбъект.Подразделение);
					Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир); //Кассир - руководителя!
					регСведКладовщик = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
                    Кладовщик =  регСведКладовщик.ФизическоеЛицо;
					ДолжнКладовщика =регСведКладовщик.Должность;
				КонецЕсли;
            //+++)
				
	    	Иначе	
				Кладовщик = "Фролов А.И.";
		    КонецЕсли;
		Иначе	
			Кладовщик = "Фролов А.И.";
		КонецЕсли;	
	Иначе //как было
			Кладовщик = "Фролов А.И.";
	КонецЕсли;

		  
		  
	Иначе //не наша организация....
		Если значениеЗаполнено(ЭтотОбъект.СсылкаНаОбъект.Ответственный.ФизЛицо) Тогда
			Кладовщик = ЭтотОбъект.СсылкаНаОбъект.Ответственный.ФизЛицо.Наименование;
		Иначе	
			Кладовщик = ЭтотОбъект.СсылкаНаОбъект.Ответственный;
		КонецЕсли;
	КонецЕсли;
	
	//+++ 02.04.2015
	Если типЗнч(ЭтотОбъект.СсылкаНаОбъект) = тип("ДокументСсылка.ПеремещениеТоваров")
		И ЭтотОбъект.СсылкаНаОбъект.СкладОтправитель.Подразделение.ОбособленноеПодразделение ТОГДА
		Отбор1 = новый Структура;
		Отбор1.Вставить("Подразделение", ЭтотОбъект.СсылкаНаОбъект.СкладОтправитель.Подразделение);
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир);
		регСведКладовщик = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
        Кладовщик =  регСведКладовщик.ФизическоеЛицо;
		ДолжнКладовщика =регСведКладовщик.Должность;
     КонецЕсли;

	возврат Кладовщик;

КонецФункции 

функция ДолжнКладовщика(Пункт66) экспорт
	Если ДолжнКладовщика="" Тогда
		возврат ДолжнКладовщика;
	КонецЕсли;		
		
		// ПредставлениеПодразделения
		Отбор1 = новый Структура;
		Отбор1.Вставить("Подразделение",    СсылкаНаОбъект.Подразделение);
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель); //Жилин
		регСведРук   = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
		регСведГлБух = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);

		Отбор1.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Кассир);    //+++ 26.11.2013
		регСведКассир = РегистрыСведений.ОтветственныеЛицаПодразделений.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор1);
		
		ДолжнКладовщика =?(Пункт66="Фролов А.И.", "Зав.складом", 
		?(Пункт66="Войновская Н.Р.","",
			?(Пункт66=строка(регСведРук.ФизическоеЛицо),регСведРук.Должность,
			  ?(Пункт66=строка(регСведГлБух.ФизическоеЛицо),регСведГлБух.Должность,
				?(Пункт66=строка(регСведКассир.ФизическоеЛицо),регСведКассир.Должность,""))))  );
		
	возврат ДолжнКладовщика;
	
КонецФункции
 

//----реализация ВозвратТоваровПоставщику ОперацияПоОтветственномуХранению-------------------------------
Функция ПолучитьШапку() экспорт
	Запрос = Новый Запрос;

	Запрос.Текст =
	 "ВЫБРАТЬ
	 |	ЗаявкаНаВозвратТоваров.Номер,
	 |	ЗаявкаНаВозвратТоваров.Дата КАК ДатаДокумента,
	 |	&Организация,
	 |	ЗаявкаНаВозвратТоваров.Контрагент КАК ЮрФизЛицо,
	 |	ЗаявкаНаВозвратТоваров.Контрагент КАК Поставщик,
	 |	&Организация КАК Контрагент,
	 |	ЗаявкаНаВозвратТоваров.Контрагент КАК Руководители,
	 |	&Организация КАК Грузополучатель,
	 |	&Организация КАК Покупатель,
	 |	ЗаявкаНаВозвратТоваров.Контрагент КАК Грузоотправитель,
	 |	ЗаявкаНаВозвратТоваров.Контрагент КАК Плательщик,
	 |	&Подразделение,
	 |	1 КАК Курс,
	 |	1 КАК Кратность
	 |ИЗ
	 |	Документ.ЗаявкаНаВозвратТоваров КАК ЗаявкаНаВозвратТоваров
	 |ГДЕ
	 |	ЗаявкаНаВозвратТоваров.Ссылка = &ТекущийДокумент";
	
	Запрос.УстановитьПараметр("ТекущийДокумент",  Заявка);
	Запрос.УстановитьПараметр("Организация", СсылкаНаОбъект.Организация);
	Запрос.УстановитьПараметр("Подразделение", СсылкаНаОбъект.Подразделение);
	
	
	
	
	
	
	
	
	
//	Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
//		типДок = "РеализацияТоваровУслуг";
//	ИначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
//		типДок = "ВозвратТоваровПоставщику";
//	ИначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") Тогда
//	   возврат ПолучитьШапку_ОтвХран();
//	ИначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
//	   возврат ПолучитьШапку_Перемещение();   
//	КонецЕсли;   
//	
//	Запрос = Новый Запрос;
//	Запрос.УстановитьПараметр("ТекущийДокумент",  СсылкаНаОбъект);
//	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

//	Запрос.Текст ="ВЫБРАТЬ
//	|	Номер,
//	|	Дата         КАК ДатаДокумента,
//	|	Организация,
//	|	Организация  КАК ЮрФизЛицо,
//	|	Организация  КАК Поставщик,
//	|	Организация  КАК Контрагент,
//	|	Организация  КАК Руководители,
//	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
//	//|	      ТОГДА ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
//	|					  ТОГДА Контрагент
//	//|					  ИНАЧЕ КонтрагентДляПечати КОНЕЦ
//	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
//	|
//	|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
//	|	      ТОГДА Организация
//	|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
//	|
//	|	БанковскийСчетОрганизации КАК БанковскийСчет,
////	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
////	|		  ТОГДА Контрагент
////	|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Покупатель,

//|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
//	//|	      ТОГДА ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
//	|					  ТОГДА Контрагент
//	//|					  ИНАЧЕ КонтрагентДляПечати КОНЕЦ
//	|	      ИНАЧЕ Грузополучатель КОНЕЦ как Покупатель,
//	
////	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
////	|		  ТОГДА Контрагент
////	|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Плательщик, 
//	|   Контрагент как Плательщик,
//	|	"+?(типДок = "ВозвратТоваровПоставщику", " Значение(Справочник.Подразделения.ПустаяСсылка)"
//											   , типДок+".Подразделение")+" как Подразделение,
//	|	ВалютаДокумента,
//	|	КурсВзаиморасчетов       КАК Курс,
//	|	КратностьВзаиморасчетов  КАК Кратность,
////	|   ОтгрузкаЧерезЧП,
//	|	УчитыватьНДС,
//	|	ЕСТЬNULL(ОтветственныеЛицаПодразделенийСрезПоследних.Должность, """") КАК Должность,
//	|	Ответственный.ФизЛицо КАК ФизЛицо,
//	|	СуммаВключаетНДС"+?(типДок = "РеализацияТоваровУслуг", ", НомерДоверенности, ДатаДоверенности, ФизЛицоДоверенности", "")+
//	"
//	|ИЗ
//	|	Документ."+ТипДок+" КАК РеализацияТоваровУслуг
//	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаПодразделений.СрезПоследних КАК ОтветственныеЛицаПодразделенийСрезПоследних
//	|	ПО РеализацияТоваровУслуг.Ответственный.ФизЛицо = ОтветственныеЛицаПодразделенийСрезПоследних.ФизическоеЛицо
//	|
//	|ГДЕ
//	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

    Возврат Шапка;
конецФункции

функция ПолучитьШапку_ОтвХран() Экспорт
		ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",  СсылкаНаОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОперацияПоОтветственномуХранению.Номер,
	|	ОперацияПоОтветственномуХранению.Дата КАК ДатаДокумента,
	|	ОперацияПоОтветственномуХранению.Организация,
	|	ОперацияПоОтветственномуХранению.Организация КАК ЮрФизЛицо,
	|	ОперацияПоОтветственномуХранению.Организация КАК Поставщик,
	|	ОперацияПоОтветственномуХранению.Организация КАК Контрагент,
	|	ОперацияПоОтветственномуХранению.Организация КАК Руководители,
	|	ОперацияПоОтветственномуХранению.Контрагент КАК Грузополучатель,
	|	ОперацияПоОтветственномуХранению.Контрагент КАК Покупатель,
	|	ОперацияПоОтветственномуХранению.Организация КАК Грузоотправитель,
	|	ОперацияПоОтветственномуХранению.Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|	ОперацияПоОтветственномуХранению.Контрагент КАК Плательщик,
	|	ОперацияПоОтветственномуХранению.Подразделение,
	|	1 КАК Курс,
	|	1 КАК Кратность
	|ИЗ
	|	Документ.ОперацияПоОтветственномуХранению КАК ОперацияПоОтветственномуХранению
	|ГДЕ
	|	ОперацияПоОтветственномуХранению.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

возврат Шапка;
КонецФункции	

функция ПолучитьШапку_Перемещение() Экспорт
		ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",  СсылкаНаОбъект.Ссылка);
	
	//+++ Контргаент из Заказа который во внутреннем заказе является основанием
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ВнутреннийЗаказ)Тогда 
    	Если ЗначениеЗаполнено(СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование) Тогда
			Контрагент = СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование.Контрагент;
			Грузоотправитель = СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование.Грузоотправитель;
			Грузополучатель = СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование.Грузополучатель;
			//проверим 
			Грузоотправитель = ?(ЗначениеЗаполнено(Грузоотправитель), Грузоотправитель, СсылкаНаОбъект.Организация);
			Грузополучатель =  ?(ЗначениеЗаполнено(Грузополучатель), Грузополучатель,   Контрагент);
		Иначе 
			Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			Грузоотправитель = СсылкаНаОбъект.Организация;
			Грузополучатель  = Контрагент;
		КонецЕсли;
	Иначе 
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Грузоотправитель = СсылкаНаОбъект.Организация;
		Грузополучатель  = Контрагент;
	КонецЕсли;
	
	//+++ 02.04.2015 - внутренние перемещения со сторонним поставщиком!
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") тогда
		Если СсылкаНаОбъект.СкладОтправитель.Подразделение.ОбособленноеПодразделение тогда
			Грузоотправитель = СсылкаНаОбъект.СкладОтправитель.Подразделение.Контрагент;
		КонецЕсли;
		Если СсылкаНаОбъект.СкладПолучатель.Подразделение.ОбособленноеПодразделение тогда
			Грузополучатель = СсылкаНаОбъект.СкладПолучатель.Подразделение.Контрагент;
			Контрагент = СсылкаНаОбъект.СкладПолучатель.Подразделение.Контрагент;
		КонецЕсли;
	КонецЕсли;	
	
	//++АЧ
	// СПБ товары в пути. И остальные склады "товары в пути". 
	Если (СсылкаНаОбъект.СкладПолучатель.код = "00692") Тогда 
		Если (СсылкаНаобъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.Склады.НайтиПоКоду("00691"))) Тогда 
			Грузоотправитель = Справочники.Контрагенты.НайтиПоКоду("П000835");
			Грузополучатель = Справочники.Организации.НайтиПоКоду("00001");
		Иначе 
			Грузополучатель = Справочники.Контрагенты.НайтиПоКоду("П000835");
			Грузоотправитель = Справочники.Организации.НайтиПоКоду("00001");			
		КонецЕсли;
	Конецесли;

	//РНД
	Если (СсылкаНаОбъект.СкладПолучатель.код = "00634") Тогда 
		Если (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.склады.НайтиПоКоду("00643"))) Тогда
			Грузоотправитель = Справочники.Контрагенты.НайтиПоКоду("93187  ");
			Грузополучатель = Справочники.Организации.НайтиПоКоду("00001");
		Иначе 
			Грузополучатель = Справочники.Контрагенты.НайтиПоКоду("93187  ");
			Грузоотправитель = Справочники.Организации.НайтиПоКоду("00001");			
		КонецЕсли;
	Конецесли;	
	
	//Москва
	Если (СсылкаНаОбъект.СкладПолучатель.код = "01366") Тогда 
		Если (СсылкаНаОбъект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00133")) Тогда 
			Грузоотправитель = Справочники.Контрагенты.НайтиПоКоду("93870  ");
			Грузополучатель = Справочники.Организации.НайтиПоКоду("00001");
		Иначе 
			Грузополучатель = Справочники.Контрагенты.НайтиПоКоду("93870  ");
			Грузоотправитель = Справочники.Организации.НайтиПоКоду("00001");			
		конецЕсли;
	Конецесли;	
	
	//ЕКБ
	Если (СсылкаНаОбъект.СкладПолучатель.код = "00962") Тогда 
		Если (СсылкаНаОбъект.СкладОтправитель.ПринадлежитЭлементу(Справочники.склады.НайтиПоКоду("00929"))) Тогда 
			Грузоотправитель = Справочники.Контрагенты.НайтиПоКоду("94036  ");
			Грузополучатель = Справочники.Организации.НайтиПоКоду("00001");
		Иначе 
			Грузополучатель = Справочники.Контрагенты.НайтиПоКоду("94036  ");
			Грузоотправитель = Справочники.Организации.НайтиПоКоду("00001");		
		КонецЕсли;
	Конецесли;
	
    Запрос.УстановитьПараметр("Контрагент", Контрагент);
    Запрос.УстановитьПараметр("Грузоотправитель", Грузоотправитель);
    Запрос.УстановитьПараметр("Грузополучатель", Грузополучатель);
  //+++)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата КАК ДатаДокумента,
	|	Организация,
	|	Организация.ЮрФизЛицо КАК ЮрФизЛицо,
	|	Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|	Организация  КАК Поставщик,
	|	&Контрагент  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	&Контрагент КАК Покупатель,
	|	&Грузоотправитель КАК Грузоотправитель,
	|   &Грузополучатель КАК Грузополучатель,
	|	&Контрагент КАК Плательщик,
	|	Подразделение,
	|	1       КАК Курс,
	|	1  КАК Кратность
	|ИЗ
	|	Документ.ПеремещениеТоваров 
	|
	|ГДЕ
	|	Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

возврат Шапка;
КонецФункции	


функция ПолучитьВесОбъем() экспорт 
	
	
	//[МассаГрузаНетто] ([МассаГрузаБрутто] [Размеры] [ОбъемМест])
	Запрос2 = Новый Запрос;      //"+ТипДок+"
	Запрос2.Текст = 
	                "ВЫБРАТЬ
	                |	СУММА(ЗаявкаНаВозвратТоваровТовары.Количество * ЗаявкаНаВозвратТоваровТовары.Номенклатура.ЕдиницаХраненияОстатков.Вес / ЗаявкаНаВозвратТоваровТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК Брутто,
	                |	СУММА(0) КАК ОбъемШтук,
	                |	СУММА(0) КАК Нетто,
	                |	СУММА(0) КАК ОбъемМест,
	                |	СУММА(ЗаявкаНаВозвратТоваровТовары.Количество / ЗаявкаНаВозвратТоваровТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоМест,
	                |	СУММА(ЗаявкаНаВозвратТоваровТовары.Количество) КАК Количество
	                |ИЗ
	                |	Документ.ЗаявкаНаВозвратТоваров.Товары КАК ЗаявкаНаВозвратТоваровТовары
	                |ГДЕ
	                |	ЗаявкаНаВозвратТоваровТовары.Ссылка = &Ссылка";
	
	
	
	Запрос2.УстановитьПараметр("Ссылка", Заявка);
	
	Результат2 = Запрос2.Выполнить();
	Выборка2 = Результат2.Выбрать();
	
	возврат Выборка2;
	
КонецФункции


//Пункт5_2
функция ПолучитьСуммуДокументов() экспорт
	Сумма = 0;
	//Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	//	типДок = "РеализацияТоваровУслуг";
	//ИначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
	//	типДок = "ВозвратТоваровПоставщику";
	//ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") Тогда
	//	типДок = "ОперацияПоОтветственномуХранению";
	//ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
	//	типДок = "ПеремещениеТоваров";
	//Иначе
	//	ТабЗнач = новый ТаблицаЗначений;	
	//	Возврат ТабЗнач;		
	//КонецЕсли;   
	
	списокДок = новый массив;
	Если Реализации.Количество()>0 Тогда
		списокДок = реализации.ВыгрузитьКолонку("Реализация");	
	КонецЕсли;	
	списокДок.Добавить(СсылкаНаОбъект);
	
	//===================================================================
	Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		или ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ВозвратТоваровПоставщику")  Тогда
		
		Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			типДок = "РеализацияТоваровУслуг";
		ИначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			типДок = "ВозвратТоваровПоставщику";
		КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента
	               |ИЗ
	               |	Документ."+ТипДок+" КАК РеализацияТоваровУслуг
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Ссылка В(&списокДок)
	               |ИТОГИ
	               |	СУММА(СуммаДокумента)
	               |ПО
	               |	ОБЩИЕ";
	Запрос.УстановитьПараметр("списокДок", списокДок);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Выборка.Следующий();
	Сумма = выборка.СуммаДокумента;
	КонецЕсли;

	
	//===================================================================
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателяТовары.Цена * ПеремещениеТоваровТовары.Количество КАК СуммаДокумента,
	               |	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |		ПО ПеремещениеТоваровТовары.Номенклатура = ЗаказПокупателяТовары.Номенклатура
	               |			И ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры = ЗаказПокупателяТовары.ХарактеристикаНоменклатуры
	               |ГДЕ
	               |	ЗаказПокупателяТовары.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ЕСТЬNULL(ПеремещениеТоваров.ВнутреннийЗаказ.ДокументОснование, ""нет"") КАК Заказ
	               |			ИЗ
	               |				Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	               |			ГДЕ
	               |				ПеремещениеТоваров.Ссылка В (&списокДок))
	               |	И ПеремещениеТоваровТовары.Ссылка В(&СписокДок)
	               |ИТОГИ
	               |	СУММА(СуммаДокумента)
	               |ПО
	               |	ОБЩИЕ";
	Запрос.УстановитьПараметр("списокДок", списокДок);
	попытка
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	исключение
		сообщить("Неправильно заполнено поле ""Внутренний заказ"" или ""Документ Основание"" - расчет суммы документов невозможен!", СтатусСообщения.Внимание);
		возврат 0;
	КонецПопытки;;
	
	Выборка.Следующий();
	Сумма = ?(выборка.СуммаДокумента=неопределено, 0, выборка.СуммаДокумента);
	КонецЕсли;
	
	//===================================================================
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") Тогда
				
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТоварыНаОтветственномХранении.Стоимость КАК СуммаДокумента,
	               |	ТоварыНаОтветственномХранении.Номенклатура
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаОтветственномХранении КАК ТоварыНаОтветственномХранении
	               |ГДЕ
	               |	ТоварыНаОтветственномХранении.Регистратор В(&списокДок)
	               |ИТОГИ
	               |	СУММА(Стоимость)
	               |ПО
	               |	ОБЩИЕ";
	Запрос.УстановитьПараметр("списокДок", списокДок);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Выборка.Следующий();
	Сумма = выборка.СуммаДокумента;

	КонецЕсли;
	
	возврат Сумма;
	
КонецФункции


Функция ПолучитьАдресИзКонтактнойИнформации_Лок(Объект, ТипАдреса = "")

	Если ЗначениеНеЗаполнено(ТипАдреса) Тогда
		Возврат "";
	КонецЕсли;

	Если ТипАдреса="Фактический" Тогда
		Начало = "Факт";
		
	ИначеЕсли ТипАдреса="Складской" Тогда
		Начало = "Складской";

	ИначеЕсли ТипАдреса="Регистрации"
		  ИЛИ ТипАдреса="Юридический" Тогда
		Начало = "Юр";
	Иначе
		Возврат "";
	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.Организации") Тогда
		Окончание = "организации";
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
		Окончание = "Контрагента";
	КонецЕсли;
	

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление,
	|	КонтактнаяИнформация.Вид
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект И
	|	КонтактнаяИнформация.Тип = &Тип
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			Если Выборка.Вид.Наименование = "Складской адрес организации" Тогда 
				Возврат Выборка.Представление;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;

КонецФункции // ПолучитьАдресИзКонтактнойИнформации()


Функция ПолучитьДолжность(Подразделение,ФизЛицо)
	
	Запрос = Новый ЗАпрос("Выбрать Период,Должность из РегистрСведений.ОтветственныеЛицаподразделений.Срезпоследних(&Дата,Подразделение=&подразделение и ФизическоеЛицо=&ФЛ) Упорядочить по Период убыв");
	ЗАпрос.УстановитьПараметр("Подразделение",подразделение);
	ЗАпрос.УстановитьПараметр("ФЛ",ФизЛицо);
	ЗАпрос.УстановитьПараметр("Дата",СсылкаНаОбъект.Дата);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Количество()>0 Тогда 
		Выб.Следующий();
		Возврат Выб.должность;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОтветственноеЛицоРуководителя(Подразделение,ОтветственныеЛицаОрганизации)
	Запрос = Новый ЗАпрос("Выбрать ФизическоеЛицо из РегистрСведений.ОтветственныеЛицаподразделений.Срезпоследних(&Дата,Подразделение=&подразделение и ОтветственноеЛицо=&ФЛ)");
	ЗАпрос.УстановитьПараметр("Подразделение",подразделение);
	ЗАпрос.УстановитьПараметр("ФЛ",ОтветственныеЛицаОрганизации);
	ЗАпрос.УстановитьПараметр("Дата",СсылкаНаОбъект.Дата);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Количество()>0 Тогда 
		Выб.Следующий();
		Возврат Выб.ФизическоеЛицо;
	КонецЕсли;	
КонецФункции


мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
//+++ 26.01.2015 - для бухгалтерии - разрешена печать текущей формы ТТН с 01.01.2011 г
//ДатаНачалаТТН_250711 = Дата(2011,07,25);
//ДатаНачалаТТН_13032012 = Дата(2012,03,13);
ДатаНачалаТТН_250711 = Дата(2011,01,01);
ДатаНачалаТТН_13032012 = Дата(2011,01,01);