перем УсловиеМосква, ОтветМосква, КонтрМосква;

//--приложение 4------------------------------------------------

Процедура КнопкаВыполнитьНажатие(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Предупреждение("Не выбран документ!",15,"Выберите документ");
		Возврат;
	КонецЕсли;
	мск = ?(УсловиеМосква и ОтветМосква = КодВозвратаДиалога.Да,КонтрМосква, "");
	ТабДокумент = Печать(ЛОЖЬ, мск );
	НапечататьДокумент(ТабДокумент, 1, Ложь, "Транспортная Накладная (приложение №4)");
	//НомерЭкземпляра = НомерЭкземпляра + 1;
	
	
КонецПроцедуры

//--приложение 8------------------------------------------------
процедура Печать_Приложение8()
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Предупреждение("Не выбран документ!");
		Возврат;
	КонецЕсли;
	
	СтруктураДанныхПечати = Новый Структура();
	Для Каждого Реквизит Из ЭлементыФормы Цикл
		Если Найти(Реквизит.Имя, "Пункт") > 0.00 Тогда
			СтруктураДанныхПечати.Вставить(Реквизит.Имя, ЭтаФорма[Реквизит.Данные]);
		КонецЕсли;
	КонецЦикла;
	ТабДокумент = Новый ТабличныйДокумент();
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН_Приложение8";
	МакетТТНПриложение4 = ПолучитьМакет("Приложение8");
	ЛицеваяСторона = МакетТТНПриложение4.ПолучитьОбласть("ГоризонтальнаяОбласть|ВертикальнаяОбласть");
	ЛицеваяСторона.Параметры.Заполнить(СтруктураДанныхПечати);
	ЛицеваяСторона.Параметры.НомерЭкземпляра = НомерЭкземпляра;
	ТабДокумент.Вывести(ЛицеваяСторона);
	//УниверсальныеМеханизмы
	НапечататьДокумент(ТабДокумент, 1, Ложь, "Сопроводительная ведомость (Приложение N8)");
	//НомерЭкземпляра = НомерЭкземпляра + 1;
	
КонецПроцедуры	

Процедура ОсновныеДействияФормыДействие1(Кнопка)
	
	Печать_Приложение8();
	
КонецПроцедуры


//--обычная ТТН------------------------------------------------
Функция ПечатьТТН()
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	//---------------определеим тип документа---------------------
	типДок = "";
	Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
		типДок = "РеализацияТоваровУслуг";
	иначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") тогда
		типДок = "ВозвратТоваровПоставщику";
	иначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") тогда
		типДок = "ОперацияПоОтветственномуХранению";
	иначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ПеремещениеТоваров") тогда
		типДок = "ПеремещениеТоваров";   
	КонецЕсли;   
	
	
	//+++ 2012 - доп.переменная СсылкаНаОбъектЗакПок вместо СсылкаНаОбъект
	Если  типДок = "ПеремещениеТоваров" тогда
		ЭтоПеремещение = Истина; 
		СсылкаНаОбъектЗакПок = Документы.ЗаказПокупателя.ПустаяСсылка();
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ВнутреннийЗаказ) тогда
			Если ЗначениеЗаполнено(СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование) тогда
				СсылкаНаОбъектЗакПок = СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование;
			КонецЕсли;	
		КонецЕсли;
	иначе 	
		ЭтоПеремещение = Ложь;
	КонецЕсли;	
	//+++)
	
	Шапка = ПолучитьШапку(); // обрабатываются по-разному, но в 1 процедуре в модуле объекта!!!
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	
	Если ЭтотОбъект.Реализации.Количество()>0 тогда
		СписокДок = Реализации.ВыгрузитьКолонку("Реализация");
	иначе	
		СписокДок = новый массив();
		СписокДок.Добавить(СсылкаНаОбъект.Ссылка);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТекущийДокумент", СписокДок);
	
	Если ЭтоПеремещение тогда
		Если СсылкаНаОбъектЗакПок.ВалютаДокумента = СсылкаНаОбъектЗакПок.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
			// Документ оформлен в валюте взаиморасчетов
			Запрос.УстановитьПараметр("Курс", 	   СсылкаНаОбъектЗакПок.КурсВзаиморасчетов);
			Запрос.УстановитьПараметр("Кратность", СсылкаНаОбъектЗакПок.КратностьВзаиморасчетов);
		Иначе
			// Документ оформлен в валюте регламентированного учета
			Запрос.УстановитьПараметр("Курс", 1);
			Запрос.УстановитьПараметр("Кратность", 1);
		КонецЕсли;
	Иначе //Это НЕ Перемещение - так и было изначально!
		Если СсылкаНаОбъект.ВалютаДокумента = СсылкаНаОбъект.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
			// Документ оформлен в валюте взаиморасчетов
			Запрос.УстановитьПараметр("Курс", 	   СсылкаНаОбъект.КурсВзаиморасчетов);
			Запрос.УстановитьПараметр("Кратность", СсылкаНаОбъект.КратностьВзаиморасчетов);
		Иначе
			// Документ оформлен в валюте регламентированного учета
			Запрос.УстановитьПараметр("Курс", 1);
			Запрос.УстановитьПараметр("Кратность", 1);
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.ВидТовара КАК ВидТовара,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + " КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест = 0
	|			ТОГДА ВложенныйЗапрос.ЕдиницаИзмерения
	|		ИНАЧЕ ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление
	|	КОНЕЦ КАК ВидУпаковки,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест,0) = 0
	|			ТОГДА ЕСТЬNULL(ВложенныйЗапрос.Количество,0)
	|		ИНАЧЕ ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест,0)
	|	КОНЕЦ КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВложенныйЗапрос.Вес, 0) = 0
	|			ТОГДА ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) * ЕСТЬNULL(ВложенныйЗапрос.ЕдиницаИзмерения.Вес, 0)
	|		ИНАЧЕ ВложенныйЗапрос.Вес
	|	КОНЕЦ КАК Нетто,
	|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест, 0) * ЕСТЬNULL(ВложенныйЗапрос.ЕдиницаИзмеренияМест.Вес, 0) КАК Брутто,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка КАК Метка
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Номенклатура КАК Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент КАК Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры КАК Характеристика,
	|		РеализацияТоваровУслуг.СерияНоменклатуры КАК Серия,
	|		РеализацияТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена * &Курс / &Кратность КАК Цена,
	|		СУММА(РеализацияТоваровУслуг.Количество) КАК Количество,
	|		СУММА(РеализацияТоваровУслуг.КоличествоМест) КАК КоличествоМест,
	|		СУММА(РеализацияТоваровУслуг.Вес) КАК Вес,
	|		СУММА(РеализацияТоваровУслуг.Сумма * &Курс / &Кратность) КАК Сумма,
	|		СУММА(РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	|		МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки) КАК НомерСтроки,
	|		0 КАК Метка
	|	ИЗ
	|		Документ."+ТипДок+".Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка В (&ТекущийДокумент)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры,
	|		РеализацияТоваровУслуг.СерияНоменклатуры,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена) КАК ВложенныйЗапрос
	|";
	//|ГДЕ
	//|	ВложенныйЗапрос.Ссылка В (&ТекущийДокумент)";
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН_новая";
	
	Макет       = ПолучитьМакет("ТТН");
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента,, Шапка.БанковскийСчет);
	СведенияОПокупателе       = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ГрузоотправительПоОКПО        = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ГрузополучательПоОКПО         = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО              = СведенияОПокупателе.КодПоОКПО;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();
	
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	// инициализация итогов по странице
	ИтогоКоличествоМестНаСтранице=0;
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;
	
	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 0;
	ИтогоБрутто     = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		Если ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Ном           = Ном + 1;
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоМестНаСтранице = ИтогоКоличествоМестНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
			
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// очистим итоги по странице
			ИтогоКоличествоМестНаСтранице = 0;
			ИтогоКоличествоНаСтранице = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		Если Шапка.Покупатель.Код="93136  " или  Шапка.Покупатель.Код="91777  " тогда
			
			ОбластьМакета.Параметры.ТоварНаименование = СтрЗаменить(ВыборкаСтрок.ТоварНаименование,"LegeArtis","")
			+ ПредставлениеСерий(ВыборкаСтрок)
			+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
		иначе
			ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование
			+ ПредставлениеСерий(ВыборкаСтрок)
			+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
		конецЕсли;
		Мест        = ?(ВыборкаСтрок.КоличествоМест=0, ВыборкаСтрок.Количество, ВыборкаСтрок.КоличествоМест);//+++
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = (ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС));
		СуммаНДС    = ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС = СуммаСНДС  - СуммаНДС;
		
		//+++ 
		ОбластьМакета.Параметры.Масса = Окр(ВыборкаСтрок.Нетто/1000,3);
		ОбластьМакета.Параметры.КоличествоМест = Мест;
		//+++
		ИтогоБрутто = ИтогоБрутто + Окр(ВыборкаСтрок.Нетто/1000,3);
		
		ОбластьМакета.Параметры.Сумма = СуммаСНДС;
		ОбластьМакета.Параметры.Цена  = СуммаБезНДС / ?(Количество = 0, 1, Количество);
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		ИтогоКоличествоМестНаСтранице = ИтогоКоличествоМестНаСтранице + Мест;
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
		
		// увеличим итоги по дукументу
		ИтогоМест       = ИтогоМест       + Мест;
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
		
	КонецЦикла;
	
	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоМестНаСтранице = ИтогоКоличествоМестНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличествоМест = ИтогоМест;
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.ФИООтпускРпзрешил     = Руководитель;
	ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;
	ОбластьМакета.Параметры.ДолжностьБухгалтера = "Главный (старший) бухгалтер";
	
	Если Шапка.Подразделение = Справочники.Подразделения.НайтиПоКоду("00106") Тогда
		ОбластьМакета.Параметры.ОтпускРазрешилДолжность = Шапка.Должность;
		ОбластьМакета.Параметры.ДолжностьБухгалтера     = Шапка.Должность;
		ОбластьМакета.Параметры.ОтпускПроизвелДолжность = Шапка.Должность;
		ОбластьМакета.Параметры.ФИООтпускРпзрешил       = ФамилияИнициалыФизЛица(Шапка.ФизЛицо);
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера   = ФамилияИнициалыФизЛица(Шапка.ФизЛицо);
		ОбластьМакета.Параметры.ФИООтпускПроизвел       = ФамилияИнициалыФизЛица(Шапка.ФизЛицо);
	КонецЕсли;
	
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.КоличествоСтрок         = КоличествоСтрок;
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	ОбластьМакета.Параметры.ВсегоМестПрописью       = ЧислоПрописью(ИтогоМест, ,",,,,,,,,0");
	
	ОбластьМакета.Параметры.НомерДоверенности       = Шапка.НомерДоверенности;
	ОбластьМакета.Параметры.ДатаДоверености         = Формат(Шапка.ДатаДоверенности, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.ДоверенностьВыдана      = Шапка.ФизЛицоДоверенности;
	
	
	//+++( 27.07.2011 - масса нетто/брутто
	выборка2 = ПолучитьВесОбъем();
	
	Если Выборка2.Количество()>0 тогда
		Выборка2.Следующий();
		
		МассаГрузаНетто  = Окр(Выборка2.Нетто/1000,3);  // в тоннах
		МассаГрузаБрутто = Окр(Выборка2.Брутто/1000,3); // в тоннах
		МассаГрузаБрутто = ?(МассаГрузаБрутто=0, МассаГрузаНетто, МассаГрузаБрутто);
		МассаГрузаНетто  = ?(МассаГрузаНетто=0, МассаГрузаБрутто, МассаГрузаНетто);
		
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета="тонна,тонны,тонн,ж,килограмм,килограмма,килограммов,м,3";
		
		ОбластьМакета.Параметры.МассаГрузаНетто  = ЧислоПрописью(МассаГрузаНетто  ,ФормСтрока, ПарПредмета); 
		ОбластьМакета.Параметры.МассаГрузаБрутто = ЧислоПрописью(МассаГрузаБрутто ,ФормСтрока, ПарПредмета); 
		
		ОбластьМакета.Параметры.МассаГрузаНеттоЧисло  = Формат(МассаГрузаНетто,"ЧДЦ=3")+" т."; 
		ОбластьМакета.Параметры.МассаГрузаБруттоЧисло = Формат(МассаГрузаБрутто,"ЧДЦ=3")+" т."; 
		
	КонецЕсли;
	//+++)
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьМакета   = Макет.ПолучитьОбласть("ТранспортныйРаздел");
	ШрифтСтандарт   = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , НЕ ЛицензионнаяКарточка);
	ШрифтОграничено = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , ЛицензионнаяКарточка);
	
	ОбластьМакета.Области.Стандарт.Шрифт   = ШрифтСтандарт;
	ОбластьМакета.Области.Ограничено.Шрифт = ШрифтОграничено;
	
	ОбластьМакета.Параметры.СрокДоставки              = СрокДоставки;
	ОбластьМакета.Параметры.Номер                     = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ОрганизацияПеревозчик     = Перевозчик;
	ОбластьМакета.Параметры.МаркаАвтомобиля           = МаркаАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ОрганизацияЗаказчик       = Заказчик;
	ОбластьМакета.Параметры.ФИОВодителя               = Водитель;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
	ОбластьМакета.Параметры.ВидПеревозки              = ВидПеревозки;
	ОбластьМакета.Параметры.ПунктПогрузки             = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки            = ПунктРазгрузки;
	ОбластьМакета.Параметры.Прицеп                    = МаркаПрицепа;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = ГосНомерПрицепа;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СведенияОГрузе");
	
	КраткоеНаименованиеГруза = "";
	ЗапросТовары.Свернуть("ВидТовара");
	Для Каждого Строка Из ЗапросТовары Цикл
		КраткоеНаименованиеГруза = КраткоеНаименованиеГруза +" "+Строка(Строка.ВидТовара);	
	КонецЦикла;
	
	ОбластьМакета.Параметры.КраткоеНаименованиеГруза  = КраткоеНаименованиеГруза;
	ОбластьМакета.Параметры.СледуютДокументы          = "ТОРГ-12 №"+Шапка.Номер;
	ОбластьМакета.Параметры.КолМест                   = ИтогоМест;
	ОбластьМакета.Параметры.МассаБрутто               = ИтогоБрутто;
	
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
	
	ОбластьМакета.Параметры.КолМест                   = ИтогоМест;
	
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьТТН()


//---------------Яршинторг-------------------
Функция ПечатьТТН_ЯШТ()
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	//+++
	//Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
	типДок = "РеализацияТоваровУслуг";
	//иначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") тогда
	//	типДок = "ВозвратТоваровПоставщику";
	//иначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") тогда
	//	типДок = "ОперацияПоОтветственномуХранению";
	//   Возврат Неопределено;
	//КонецЕсли;  //+++)
	
	Если ЭтотОбъект.Реализации.Количество()>0 тогда
		СписокДок = Реализации.ВыгрузитьКолонку("Реализация");
	иначе	
		СписокДок = новый массив();
		СписокДок.Добавить(СсылкаНаОбъект);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",  СписокДок);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	      ТОГДА ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|					  ТОГДА Контрагент
	|					  ИНАЧЕ КонтрагентДляПечати КОНЕЦ
	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
	|	      ТОГДА Организация
	|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	|	БанковскийСчетОрганизации КАК БанковскийСчет,
	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|		  ТОГДА Контрагент
	|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Покупатель,
	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|		  ТОГДА Контрагент
	|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Плательщик,
	|	Подразделение,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов       КАК Курс,
	|	КратностьВзаиморасчетов  КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	//+++ 26.11.2013 |	ЧерезТК,
	|	ОтгрузкаЧерезЧП,
	|	НомерДоверенности,
	|	ДатаДоверенности,
	|	ФизЛицоДоверенности
	|ИЗ
	|	Документ."+типДок+" КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&ТекущийДокумент)";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	
	//+++ всегда 1 реализация
	Запрос.УстановитьПараметр("ТекущийДокумент", СписокДок);
	
	Если СсылкаНаОбъект.ВалютаДокумента = СсылкаНаОбъект.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		Запрос.УстановитьПараметр("Курс", СсылкаНаОбъект.КурсВзаиморасчетов);
		Запрос.УстановитьПараметр("Кратность", СсылкаНаОбъект.КратностьВзаиморасчетов);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		Запрос.УстановитьПараметр("Курс", 1);
		Запрос.УстановитьПараметр("Кратность", 1);
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Склад		                                 КАК Склад,
	|	РеализацияТоваровУслуг.Номенклатура                                 КАК Номенклатура,
	|	РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное              КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Номенклатура." + ТоварКод + "                КАК Артикул,
	|	РеализацияТоваровУслуг.ЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.ЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	Выбор КОГДА ЕстьNull(РеализацияТоваровУслуг.КоличествоМест,0)=0 
	|		ТОГДА РеализацияТоваровУслуг.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ РеализацияТоваровУслуг.ЕдиницаИзмеренияМест.Представление КОНЕЦ КАК ВидУпаковки,
	|	РеализацияТоваровУслуг.СтавкаНДС           КАК СтавкаНДС,
	|	РеализацияТоваровУслуг.Цена                КАК Цена,
	|	РеализацияТоваровУслуг.Количество          КАК Количество,
	|	РеализацияТоваровУслуг.КоличествоМест      КАК КоличествоМест,
	//+++
	|	Выбор КОГДА ЕстьNull(РеализацияТоваровУслуг.Вес,0) = 0 ТОГДА
	|	ЕстьNull(РеализацияТоваровУслуг.Количество,0) * ЕстьNull(РеализацияТоваровУслуг.ЕдиницаИзмерения.Вес,0) 
	|	ИНАЧЕ РеализацияТоваровУслуг.Вес КОНЕЦ КАК Нетто,
	|	ЕстьNull(РеализацияТоваровУслуг.КоличествоМест,0) * ЕстьNull(РеализацияТоваровУслуг.ЕдиницаИзмеренияМест.Вес,0) КАК Брутто,
	//+++
	|	РеализацияТоваровУслуг.Сумма               КАК Сумма,
	|	РеализацияТоваровУслуг.СуммаНДС            КАК СуммаНДС,
	|	РеализацияТоваровУслуг.НомерСтроки         КАК НомерСтроки
	|ИЗ
	|
	|Документ."+типДок+".Товары КАК РеализацияТоваровУслуг
	|ГДЕ
	|РеализацияТоваровУслуг.Ссылка В (&ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО РеализацияТоваровУслуг.Ссылка.Дата ВОЗР, РеализацияТоваровУслуг.НомерСтроки ВОЗР
	|
	|";
	
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = ПолучитьМакет("ТТН_ЯШТ");
	
	// Выводим общие реквизиты шапки
	попытка	
		Если НЕ Шапка.ОтгрузкаЧерезЧП Тогда
			СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента,, Шапка.БанковскийСчет);	
		Иначе 
			
			Если НЕ ЗначениеНеЗаполнено(Константы.ПродажиЧерезЧПОрганизацияДляПечати.Получить()) Тогда
				СведенияОПоставщике		  = СведенияОЮрФизЛице(Константы.ПродажиЧерезЧПОрганизацияДляПечати.Получить(),        Шапка.ДатаДокумента,, Константы.ПродажиЧерезЧПОрганизацияДляПечати.Получить().ОсновнойБанковскийСчет);		
			Иначе 
				СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента,, Шапка.БанковскийСчет);		
			КонецЕсли; 
			
		КонецЕсли; 
	исключение
		СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента,, Шапка.БанковскийСчет);	
	КонецПопытки;	
	
	СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	
	//+++( 10.05.2012 - меняем грузополучателя
	Если УсловиеМосква и ОтветМосква = КодВозвратаДиалога.Да Тогда
		СведенияОПокупателе   = СведенияОЮрФизЛице(КонтрМосква,   Шапка.ДатаДокумента);
		СведенияОГрузополучателе  = СведенияОЮрФизЛице(КонтрМосква,   Шапка.ДатаДокумента);
	иначе // как было
		СведенияОПокупателе       = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
		СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,   Шапка.ДатаДокумента);
	КонецЕсли;
	//+++ )
	
	попытка	
		Если Шапка.ОтгрузкаЧерезЧП Тогда
			Если Шапка.ЮрФизЛицо = Шапка.Грузоотправитель Тогда
				СведенияОГрузоотправитель = СведенияОЮрФизЛице(Константы.ПродажиЧерезЧПОрганизацияДляПечати.Получить(),        Шапка.ДатаДокумента);	
			Иначе
				СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);	
			КонецЕсли; 
		Иначе
			СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);	
		КонецЕсли; 
	исключение
		СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);	
	КонецПопытки;	
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = ?(УсловиеМосква и ОтветМосква = КодВозвратаДиалога.Да, КонтрМосква, Шапка.Грузополучатель); //+++ 10.05.2012
	ОбластьМакета.Параметры.Плательщик                    = ?(УсловиеМосква и ОтветМосква = КодВозвратаДиалога.Да, КонтрМосква, Шапка.Покупатель);
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ГрузоотправительПоОКПО        = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ГрузополучательПоОКПО         = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО              = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.МаркаАвтомобиля           	  = СокрЛП(МаркаАвтомобиля);
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        	  = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя               	  = Водитель;
	ОбластьМакета.Параметры.ГосНомерПрицепа           	  = ГосНомерПрицепа;
	
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();
	
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	// инициализация итогов по странице
	ИтогоКоличествоМестНаСтранице = 0;
	ИтогоКоличествоНаСтранице_Отгр = 0;
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;
	
	// инициализация итогов по документу
	ИтогоКоличествоМест  = 0;
	ИтогоКоличество = 0;
	ИтогоКоличество_Отгр=0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		ИтогоКоличество=ИтогоКоличество+ВыборкаСтрок.Количество;
		ИтогоКоличество_Отгр = ИтогоКоличество_Отгр + ВыборкаСтрок.Количество;
		Если ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Ном           = Ном + 1;
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоМестНаСтранице = ИтогоКоличествоМестНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
			
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// очистим итоги по странице
			ИтогоКоличествоМестНаСтранице = 0;
			ИтогоКоличествоНаСтранице = 0;
			ИтогоКоличествоНаСтранице_Отгр = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		
		ОбластьМакета.Параметры.Склад = ВыборкаСтрок.Склад;
		Если Шапка.Покупатель.Код="93136  " или  Шапка.Покупатель.Код="91777  " тогда
			ОбластьМакета.Параметры.ТоварНаименование = СтрЗаменить(ВыборкаСтрок.ТоварНаименование,"LegeArtis","")
			//+ ПредставлениеСерий(ВыборкаСтрок)
			// + ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "")
			+ ?(ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура.Производитель),""," (" + ВыборкаСтрок.Номенклатура.Производитель + ")");
		иначе
			ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование
			//+ ПредставлениеСерий(ВыборкаСтрок)
			// + ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "")
			+ ?(ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура.Производитель),""," (" + ВыборкаСтрок.Номенклатура.Производитель + ")");
		КонецЕсли;
		
		Мест        = ?(ВыборкаСтрок.КоличествоМест=0, ВыборкаСтрок.Количество, ВыборкаСтрок.КоличествоМест);
		
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = (ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС));
		СуммаНДС    = ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС = СуммаСНДС  - СуммаНДС;
		
		ОбластьМакета.Параметры.Отгружено  = ВыборкаСтрок.Количество;
		//		ОбластьМакета.Параметры.Сумма = ВыборкаСтрок.Сумма;
		//+++		ОбластьМакета.Параметры.Масса = Окр(ВыборкаСтрок.Нетто/1000,3);
		ОбластьМакета.Параметры.КоличествоМест = Окр(мест,3);
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		ИтогоКоличествоМестНаСтранице  = ИтогоКоличествоМестНаСтранице + Мест;
		ИтогоКоличествоНаСтранице      = ИтогоКоличествоНаСтранице + Количество;
		ИтогоКоличествоНаСтранице_Отгр = ИтогоКоличествоНаСтранице_Отгр + Число(Количество);
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
		
		// увеличим итоги по документу
		ИтогоКоличествоМест       = ИтогоКоличествоМест    + Мест;
		ИтогоКоличество_Отгр      = ИтогоКоличество_Отгр + Количество;
		
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
		
	КонецЦикла;
	
	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоМестНаСтранице = ИтогоКоличествоМестНаСтранице;//+++
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоМестНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице_Отгр = ИтогоКоличествоНаСтранице_Отгр;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличествоМест = ИтогоКоличествоМест;
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоКоличество_Отгр = ИтогоКоличество_Отгр;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	//Если НЕ Шапка.ОтгрузкаЧерезЧП Тогда
	
	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	//Доверенность
	ОбластьМакета.Параметры.НомерДоверенности 	= Шапка.НомерДоверенности;
	ОбластьМакета.Параметры.ДатаДоверенности 	= Шапка.ДатаДоверенности;
	ОбластьМакета.Параметры.ДоверенностьВыдана 	= Шапка.ФизЛицоДоверенности;
	
	//Иначе
	//	
	//	Руководители = "";
	//	Руководитель = "";
	//	Бухгалтер    = "";
	
	//КонецЕсли; 
	
	//Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	//Руководитель = Руководители.Руководитель;
	//Бухгалтер    = Руководители.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.ДатаДокумента=Формат(Шапка.ДатаДокумента,"ДЛФ=DD");
	//ОбластьМакета.Параметры.ФИООтпускРпзрешил     = Руководитель;
	//ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;
	
	//+++ 30.03.2012
	Если ТипЗнч(СсылкаНаОбъект) = тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
		Если СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00107") тогда
			ОбластьМакета.Параметры.ФИОразрешил = "Войновская Н.Р.";
			ОбластьМакета.Параметры.ФИОглБух	= "Войновская Н.Р.";
			ОбластьМакета.Параметры.ФИОотгрузил = "Войновская Н.Р.";
		ИначеЕсли СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00133") тогда
			ОбластьМакета.Параметры.ФИОразрешил = "Крачок А.Л.";
			ОбластьМакета.Параметры.ФИОглБух	= "Крачок А.Л.";
			ОбластьМакета.Параметры.ФИОотгрузил = "Крачок А.Л.";
	
		иначе	
			ОбластьМакета.Параметры.ФИОразрешил = "Фролов А.И.";
			ОбластьМакета.Параметры.ФИОглБух	= "Короткова Е.Ю.";
			ОбластьМакета.Параметры.ФИОотгрузил = "Фролов А.И.";
		КонецЕсли;	
	иначе
		ОбластьМакета.Параметры.ФИОразрешил = "Фролов А.И.";
		ОбластьМакета.Параметры.ФИОглБух	= "Короткова Е.Ю.";
		ОбластьМакета.Параметры.ФИОотгрузил = "Фролов А.И.";
	КонецЕсли;
	
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.КоличествоСтрок         = КоличествоСтрок;
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	ОбластьМакета.Параметры.ВсегоМестПрописью       = ЧислоПрописью(ИтогоКоличествоМест, ,",,,,,,,,0");
	
	//+++( 27.07.2011 - масса нетто/брутто
	//выборка2 = ПолучитьВесОбъем();
	//
	//Если Выборка2.Количество()>0 тогда
	//Выборка2.Следующий();
	//
	//МассаГрузаНетто  = Окр(Выборка2.Нетто/1000,3);  // в тоннах
	//МассаГрузаБрутто = Окр(Выборка2.Брутто/1000,3); // в тоннах
	//
	//ОбластьМакета.Параметры.МассаГрузаНетто  = ЧислоПрописью(МассаГрузаНетто  ,",,,,,,,,0"); 
	//ОбластьМакета.Параметры.МассаГрузаБрутто = ЧислоПрописью(МассаГрузаБрутто ,",,,,,,,,0"); 
	//
	//ОбластьМакета.Параметры.МассаГрузаНеттоЧисло  = МассаГрузаНетто; 
	//ОбластьМакета.Параметры.МассаГрузаБруттоЧисло = МассаГрузаБрутто; 
	
	//КонецЕсли;
	//+++)
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьМакета   = Макет.ПолучитьОбласть("ТранспортныйРаздел");
	ШрифтСтандарт   = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , НЕ ЛицензионнаяКарточка);
	ШрифтОграничено = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , ЛицензионнаяКарточка);
	
	ОбластьМакета.Области.Стандарт.Шрифт   = ШрифтСтандарт;
	ОбластьМакета.Области.Ограничено.Шрифт = ШрифтОграничено;
	
	ОбластьМакета.Параметры.СрокДоставки              = СрокДоставки;
	ОбластьМакета.Параметры.Номер                     = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ОрганизацияПеревозчик     = Перевозчик;
	ОбластьМакета.Параметры.МаркаАвтомобиля           = МаркаАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = ГосНомерАвтомобиля;
	//+++	
	Если ТипЗнч(Заказчик)<>Тип("Строка") тогда
		Если значениеЗаполнено(Перевозчик) тогда
			СведенияОПеревозчике = СведенияОЮрФизЛице(Перевозчик, Шапка.ДатаДокумента);
			Перевозчик1 = ОписаниеОрганизации(СведенияОПеревозчике, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");	
		иначе
			Перевозчик1 = Перевозчик;				
		КонецЕсли;
	иначе // строка
		Перевозчик1 = Перевозчик;				
	КонецЕсли;	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик     =  Перевозчик1;
	
	Если ТипЗнч(Заказчик)<>Тип("Строка") тогда //+++ 27.07.2011
		СведенияОЗаказчике = СведенияОЮрФизЛице(Заказчик, Шапка.ДатаДокумента);
		Заказчик1 = ОписаниеОрганизации(СведенияОЗаказчике, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");	
	иначе
		Заказчик1 = Заказчик;				
	КонецЕсли;
	ОбластьМакета.Параметры.ОрганизацияЗаказчик       = Заказчик1;
	
	ОбластьМакета.Параметры.ФИОВодителя               = Водитель;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
	ОбластьМакета.Параметры.ВидПеревозки              = ВидПеревозки;
	ОбластьМакета.Параметры.ПунктПогрузки             = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки            = ПунктРазгрузки;
	ОбластьМакета.Параметры.Прицеп                    = МаркаПрицепа;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = ГосНомерПрицепа;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СведенияОГрузе");
	ОбластьМакета.Параметры.ИтогоКоличествоМест = ИтогоКоличествоМест;//+++
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьТТН_ЯШТ()

Функция ПечатьТТН_ЯШТ_возврат()
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	Если ЭтотОбъект.Реализации.Количество()>0 тогда
		СписокДок = Реализации.ВыгрузитьКолонку("Реализация");
	иначе	
		СписокДок = новый массив();
		СписокДок.Добавить(СсылкаНаОбъект);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",  СписокДок);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	Контрагент 
	//|					  ИНАЧЕ КонтрагентДляПечати КОНЕЦ
	//|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	//|	КОНЕЦ 
	|КАК Грузополучатель,
	|Контрагент КАК Покупатель,
	//|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
	//|	      ТОГДА Организация
	|	      Организация
	//|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	//|	      КОНЕЦ 
	|КАК Грузоотправитель,
	|	Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	//|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	//|		  ТОГДА 
	|Контрагент
	//|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Покупатель,
	//|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	//|		  ТОГДА Контрагент
	//|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ 
	|КАК Плательщик,
	|	Подразделение,
	//|	ВалютаДокумента,
	|	1       КАК Курс,
	|	1  КАК Кратность,
	//|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	Ложь как ЧерезТК
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&ТекущийДокумент)";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СписокДок);
	
	//Если Документ.ВалютаДокумента = Документ.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
	//	// Документ оформлен в валюте взаиморасчетов
	//	Запрос.УстановитьПараметр("Курс", Документ.КурсВзаиморасчетов);
	//	Запрос.УстановитьПараметр("Кратность", Документ.КратностьВзаиморасчетов);
	//Иначе
	// Документ оформлен в валюте регламентированного учета
	Запрос.УстановитьПараметр("Курс", 1);
	Запрос.УстановитьПараметр("Кратность", 1);
	//КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Склад		                                 КАК Склад,
	|	ВложенныйЗапрос.Номенклатура                                 КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное              КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                КАК Артикул,
	|	ВложенныйЗапрос.Номенклатура.БазоваяЕдиницаИзмерения.Наименование 		 КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.Номенклатура.БазоваяЕдиницаИзмерения.Код 			     КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование                КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Наименование            КАК ВидУпаковки,
	|	ВложенныйЗапрос.Характеристика      КАК Характеристика,
	|	ВложенныйЗапрос.Серия               КАК Серия,
	|	ВложенныйЗапрос.СтавкаНДС           КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                КАК Цена,
	|	ВложенныйЗапрос.Количество          КАК Количество,
	|	ВложенныйЗапрос.КоличествоМест      КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма               КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС            КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки         КАК НомерСтроки,
	//|	Выразить(Партии.Стоимость/Партии.Количество Как Число(15,2))Как Цена,
	//|	Выразить(Партии.Стоимость Как Число(15,2)) как Сумма,	
	|	ВложенныйЗапрос.Метка               КАК Метка
	|ИЗ
	|	(
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Ссылка.Склад,
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры            КАК Характеристика,
	|		РеализацияТоваровУслуг.СерияНоменклатуры                     КАК Серия,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена * &Курс / &Кратность             КАК Цена,
	|		СУММА(РеализацияТоваровУслуг.Количество)                     КАК Количество,
	|		СУММА(РеализацияТоваровУслуг.КоличествоМест)                 КАК КоличествоМест,
	|		СУММА(РеализацияТоваровУслуг.Сумма    * &Курс / &Кратность)  КАК Сумма,
	|		СУММА(РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность)  КАК СуммаНДС,
	|		МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки)                  КАК НомерСтроки,
	|		0                                                            КАК Метка
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка В (&ТекущийДокумент)
	|
	|СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслуг.Ссылка.Склад,
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры,
	|		РеализацияТоваровУслуг.СерияНоменклатуры,
	|		РеализацияТоваровУслуг.СтавкаНДС, 	
	|		РеализацияТоваровУслуг.Цена
	|	) КАК ВложенныйЗапрос
	|Левое соединение 
	|	РегистрНакопления.ПартииТоваровНаСкладах как Партии
	|По
	|	ВложенныйЗапрос.Номенклатура = Партии.Номенклатура
	|ГДЕ Партии.Регистратор В (&ТекущийДокумент)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка.Склад		                   КАК Склад,
	|	РеализацияТоваровУслуг.Номенклатура                    КАК Номенклатура,
	|	РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Номенклатура." + ТоварКод + "   КАК Артикул,
	|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Наименование               КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Наименование               КАК ЕдиницаИзмерения,
	|	РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Наименование           КАК ВидУпаковки,
	|	NULL                                                  КАК Характеристика,
	|	NULL                                                  КАК Серия,
	|	""Без НДС""                                           КАК СтавкаНДС,
	|	РеализацияТоваровУслуг.Цена * &Курс / &Кратность      КАК Цена,
	|	РеализацияТоваровУслуг.Количество                     КАК Количество,
	|	Выбор когда ЕстьNull(РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент,0) = 0
	|      тогда РеализацияТоваровУслуг.Количество 
	|      иначе РеализацияТоваровУслуг.Количество / РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
	|	Конец КАК КоличествоМест,
	|	РеализацияТоваровУслуг.Сумма * &Курс / &Кратность     КАК Сумма,
	|	0                                                     КАК СуммаНДС,
	|	РеализацияТоваровУслуг.НомерСтроки                    КАК НомерСтроки,
	|	2                                                     КАК Метка
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.ВозвратнаяТара КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = ПолучитьМакет("ТТН_ЯШТ");
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента,, Шапка.БанковскийСчет);
	
	//Если (Шапка.ЧерезТК <> Неопределено)и НЕ Шапка.ЧерезТК Тогда 
	СведенияОПокупателе       	  = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	//Иначе
	//	Если Константы.ТорговаяКомпания.Получить() <> Справочники.Контрагенты.ПустаяСсылка() Тогда 
	//		СведенияОПокупателе       = СведенияОЮрФизЛице(Константы.ТорговаяКомпания.Получить(),       Шапка.ДатаДокумента);
	//	Иначе
	//		СведенияОПокупателе       = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	//	КонецЕсли;
	//КонецЕсли;
	
	СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ГрузоотправительПоОКПО        = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ГрузополучательПоОКПО         = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО              = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.МаркаАвтомобиля           	  = СокрЛП(МаркаАвтомобиля);
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        	  = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя               	  = Водитель;
	ОбластьМакета.Параметры.ГосНомерПрицепа           	  = ГосНомерПрицепа;
	
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();
	
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;
	
	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		Если ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Ном           = Ном + 1;
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
			
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// очистим итоги по странице
			ИтогоКоличествоНаСтранице = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.Склад = ВыборкаСтрок.Склад;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование
		+ ПредставлениеСерий(ВыборкаСтрок)
		+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "")
		+ ?(ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура.Производитель),""," (" + ВыборкаСтрок.Номенклатура.Производитель + ")");
		
		Мест        = ?(ВыборкаСтрок.КоличествоМест=0, ВыборкаСтрок.Количество, ВыборкаСтрок.КоличествоМест);
		
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = (ВыборкаСтрок.Сумма) + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС);
		СуммаНДС    = ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС = СуммаСНДС  - СуммаНДС;
		
		ОбластьМакета.Параметры.Сумма = СуммаСНДС; //0;
		ОбластьМакета.Параметры.Отгружено  = ВыборкаСтрок.Количество;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоКоличествоНаСтранице_Отгр = ИтогоКоличествоНаСтранице + Количество;
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
		
		// увеличим итоги по дукументу
		ИтогоМест       = ИтогоМест       + Мест;
		ИтогоКоличество_Отгр = ИтогоКоличество + Количество;
		
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
		
	КонецЦикла;
	
	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице_Отгр = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоКоличество_Отгр = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	//ОбластьМакета.Параметры.ФИООтпускРазрешил     = Руководитель; //Кладовщик = Фролов
	//ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;
	
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.КоличествоСтрок         = КоличествоСтрок;
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	ОбластьМакета.Параметры.ВсегоМестПрописью       = ЧислоПрописью(ИтогоМест, ,",,,,,,,,0");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьМакета   = Макет.ПолучитьОбласть("ТранспортныйРаздел");
	ШрифтСтандарт   = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , НЕ ЛицензионнаяКарточка);
	ШрифтОграничено = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , ЛицензионнаяКарточка);
	
	ОбластьМакета.Области.Стандарт.Шрифт   = ШрифтСтандарт;
	ОбластьМакета.Области.Ограничено.Шрифт = ШрифтОграничено;
	
	ОбластьМакета.Параметры.СрокДоставки              = СрокДоставки;
	ОбластьМакета.Параметры.Номер                     = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ОрганизацияПеревозчик     = Перевозчик;
	ОбластьМакета.Параметры.МаркаАвтомобиля           = МаркаАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ОрганизацияЗаказчик       = Заказчик;
	ОбластьМакета.Параметры.ФИОВодителя               = Водитель;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
	ОбластьМакета.Параметры.ВидПеревозки              = ВидПеревозки;
	ОбластьМакета.Параметры.ПунктПогрузки             = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки            = ПунктРазгрузки;
	ОбластьМакета.Параметры.Прицеп                    = МаркаПрицепа;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = ГосНомерПрицепа;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СведенияОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьТТН_ЯШТ_возврат()

Функция ПечатьТТН_отвХран()
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если Реализации.Количество()>0 тогда
		ДокументСписок = Реализации.ВыгрузитьКолонку("Реализация");
	иначе 
		ДокументСписок = новый массив();
		ДокументСписок.Добавить(СсылкаНаОбъект);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТекущийДокумент",  ДокументСписок);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	Контрагент 
	|КАК Грузополучатель,
	|Контрагент КАК Покупатель,
	|	      Организация
	|КАК Грузоотправитель,
	|	Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|Контрагент
	|КАК Плательщик,
	|	Подразделение,
	|	1       КАК Курс,
	|	1  КАК Кратность
	|ИЗ
	|	Документ.ОперацияПоОтветственномуХранению 
	|
	|ГДЕ
	|	Ссылка В (&ТекущийДокумент)";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументСписок);
	
	//Если Документ.ВалютаДокумента = Документ.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
	//	// Документ оформлен в валюте взаиморасчетов
	//	Запрос.УстановитьПараметр("Курс", Документ.КурсВзаиморасчетов);
	//	Запрос.УстановитьПараметр("Кратность", Документ.КратностьВзаиморасчетов);
	//Иначе
	// Документ оформлен в валюте регламентированного учета
	Запрос.УстановитьПараметр("Курс", 1);
	Запрос.УстановитьПараметр("Кратность", 1);
	//КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Склад		                                 КАК Склад,
	|	ВложенныйЗапрос.Номенклатура                                 КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное              КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код                КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление           КАК ВидУпаковки,
	|	ВложенныйЗапрос.Характеристика      КАК Характеристика,
	|	ВложенныйЗапрос.Серия               КАК Серия,
	|	ВложенныйЗапрос.Количество          КАК Количество,
	|	ВложенныйЗапрос.КоличествоМест      КАК КоличествоМест,
	|	ВложенныйЗапрос.НомерСтроки         КАК НомерСтроки,
	|	1 Как Цена,
	|	1 Сумма,	
	|	Метка Метка
	|ИЗ
	|	(
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Склад,
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков ЕдиницаИзмеренияМест,
	|		""""            КАК Характеристика,
	|		РеализацияТоваровУслуг.СерияНоменклатуры                     КАК Серия,
	|		РеализацияТоваровУслуг.Количество                     КАК Количество,
	|		РеализацияТоваровУслуг.Количество                 КАК КоличествоМест,
	
	|		РеализацияТоваровУслуг.НомерСтроки                  КАК НомерСтроки,
	|		0                                                            КАК Метка
	|	ИЗ
	|		Документ.ОперацияПоОтветственномуХранению.Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка В (&ТекущийДокумент)
	|
	|) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = ПолучитьМакет("ТТН_отвХран");
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента,, Шапка.БанковскийСчет);
	
	//Если (Шапка.ЧерезТК <> Неопределено)и НЕ Шапка.ЧерезТК Тогда 
	СведенияОПокупателе       	  = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	//Иначе
	//	Если Константы.ТорговаяКомпания.Получить() <> Справочники.Контрагенты.ПустаяСсылка() Тогда 
	//		СведенияОПокупателе       = СведенияОЮрФизЛице(Константы.ТорговаяКомпания.Получить(),       Шапка.ДатаДокумента);
	//	Иначе
	//		СведенияОПокупателе       = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	//	КонецЕсли;
	//КонецЕсли;
	
	СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ГрузоотправительПоОКПО        = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ГрузополучательПоОКПО         = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО              = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.МаркаАвтомобиля           	  = СокрЛП(МаркаАвтомобиля);
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        	  = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя               	  = Водитель;
	ОбластьМакета.Параметры.ГосНомерПрицепа           	  = ГосНомерПрицепа;
	
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();
	
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	// инициализация итогов по странице
	//МассаНаСтранице = 0;
	КоличествоМестНаСтранице = 0;
	ИтогоКоличествоНаСтранице = 0;
	ИтогоКоличествоНаСтранице_Отгр = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;
	
	// инициализация итогов по документу
	//ИтогоМасса = 0;
	ИтогоКоличествоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоКоличество_Отгр = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		Если ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Ном           = Ном + 1;
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			
			//	ОбластьИтоговПоСтранице.Параметры.МассаНаСтранице = МассаНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.КоличествоМестНаСтранице = КоличествоМестНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице_Отгр      = ИтогоКоличествоНаСтранице_Отгр;
			ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
			
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// очистим итоги по странице
			ИтогоКоличествоНаСтранице = 0;
			ИтогоКоличествоНаСтранице_Отгр = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.Склад = ВыборкаСтрок.Склад;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование
		+ ПредставлениеСерий(ВыборкаСтрок)
		+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "")
		+ ?(ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура.Производитель),""," (" + ВыборкаСтрок.Номенклатура.Производитель + ")");
		
		Мест        = ?(ВыборкаСтрок.КоличествоМест=0, ВыборкаСтрок.Количество, ВыборкаСтрок.КоличествоМест);
		//Масса       = ВыборкаСтрок.Нетто/1000;
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = (ВыборкаСтрок.Сумма); //+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС);
		СуммаНДС    = 0; //ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС = СуммаСНДС  - СуммаНДС;
		
		ОбластьМакета.Параметры.Сумма = 0;
		ОбластьМакета.Параметры.Отгружено  = ВыборкаСтрок.Количество;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		КоличествоМестНаСтранице = КоличествоМестНаСтранице + Мест;
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоКоличествоНаСтранице_Отгр = ИтогоКоличествоНаСтранице_Отгр + Количество;
		//ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
		
		// увеличим итоги по дукументу
		ИтогоКоличествоМест  = ИтогоКоличествоМест + Мест;
		ИтогоКоличество      = ИтогоКоличество + Количество;
		ИтогоКоличество_Отгр = ИтогоКоличество_Отгр + Количество;
		
		//ИтогоСуммаСНДС  =ИтогоСуммаСНДС  + СуммаСНДС;
		
	КонецЦикла;
	
	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.КоличествоМестНаСтранице = КоличествоМестНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице_Отгр = ИтогоКоличествоНаСтранице_Отгр;
	//ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличествоМест = ИтогоКоличествоМест;
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоКоличество_Отгр = ИтогоКоличество_Отгр;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	//	ОбластьМакета.Параметры.ФИООтпускРпзрешил     = Руководитель;
	//	ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;
	
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.КоличествоСтрок         = КоличествоСтрок;
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	ОбластьМакета.Параметры.ВсегоМестПрописью       = ЧислоПрописью(ИтогоКоличествоМест, ,",,,,,,,,0");
	
	//+++( 27.07.2011 - масса нетто/брутто
	выборка2 = ПолучитьВесОбъем();
	
	Если Выборка2.Количество()>0 тогда
		Выборка2.Следующий();
		
		МассаГрузаНетто  = Окр(Выборка2.Нетто/1000,3);  // в тоннах
		МассаГрузаБрутто = Окр(Выборка2.Брутто/1000,3); // в тоннах
		МассаГрузаБрутто = ?(МассаГрузаБрутто=0, МассаГрузаНетто, МассаГрузаБрутто);
		МассаГрузаНетто  = ?(МассаГрузаНетто=0, МассаГрузаБрутто, МассаГрузаНетто);
		
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета="тонна,тонны,тонн,ж,килограмм,килограмма,килограммов,м,3";
		
		ОбластьМакета.Параметры.МассаГрузаНетто  = ЧислоПрописью(МассаГрузаНетто  ,ФормСтрока, ПарПредмета); 
		ОбластьМакета.Параметры.МассаГрузаБрутто = ЧислоПрописью(МассаГрузаБрутто ,ФормСтрока, ПарПредмета); 
		
		ОбластьМакета.Параметры.МассаГрузаНеттоЧисло  = Формат(МассаГрузаНетто,"ЧДЦ=3")+" т."; 
		ОбластьМакета.Параметры.МассаГрузаБруттоЧисло = Формат(МассаГрузаБрутто,"ЧДЦ=3")+" т."; 
		
	КонецЕсли;
	//+++)
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьМакета   = Макет.ПолучитьОбласть("ТранспортныйРаздел");
	ШрифтСтандарт   = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , НЕ ЛицензионнаяКарточка);
	ШрифтОграничено = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , ЛицензионнаяКарточка);
	
	ОбластьМакета.Области.Стандарт.Шрифт   = ШрифтСтандарт;
	ОбластьМакета.Области.Ограничено.Шрифт = ШрифтОграничено;
	
	ОбластьМакета.Параметры.СрокДоставки              = СрокДоставки;
	ОбластьМакета.Параметры.Номер                     = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ОрганизацияПеревозчик     = Перевозчик;
	ОбластьМакета.Параметры.МаркаАвтомобиля           = МаркаАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ОрганизацияЗаказчик       = Заказчик;
	ОбластьМакета.Параметры.ФИОВодителя               = Водитель;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
	ОбластьМакета.Параметры.ВидПеревозки              = ВидПеревозки;
	ОбластьМакета.Параметры.ПунктПогрузки             = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки            = ПунктРазгрузки;
	ОбластьМакета.Параметры.Прицеп                    = МаркаПрицепа;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = ГосНомерПрицепа;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СведенияОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьТТН_отвХран()

Функция ПечатьТТН_Перемещение()
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если Реализации.Количество()>0 тогда
		ДокументСписок = Реализации.ВыгрузитьКолонку("Реализация");
	иначе 
		ДокументСписок = новый массив();
		ДокументСписок.Добавить(СсылкаНаОбъект);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТекущийДокумент",  ДокументСписок);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("Контрагент", СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование.Контрагент); //+++
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация КАК ЮрФизЛицо,
	|	Организация КАК Поставщик,
	|	Организация КАК Контрагент,
	|	Организация КАК Руководители,
	|	&Контрагент КАК Грузополучатель,
	|	&Контрагент КАК Покупатель,
	|	Организация КАК Грузоотправитель,
	|	Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|&Контрагент КАК Плательщик,
	|	Подразделение,
	|	1       КАК Курс,
	|	1  КАК Кратность
	|ИЗ
	|	Документ.ПеремещениеТоваров 
	|
	|ГДЕ
	|	Ссылка В (&ТекущийДокумент)";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументСписок);
	
	//Если Документ.ВалютаДокумента = Документ.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
	//	// Документ оформлен в валюте взаиморасчетов
	//	Запрос.УстановитьПараметр("Курс", Документ.КурсВзаиморасчетов);
	//	Запрос.УстановитьПараметр("Кратность", Документ.КратностьВзаиморасчетов);
	//Иначе
	// Документ оформлен в валюте регламентированного учета
	Запрос.УстановитьПараметр("Курс", 1);
	Запрос.УстановитьПараметр("Кратность", 1);
	//КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.КоличествоМест КАК КоличествоМест,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Цена * ВложенныйЗапрос.Количество КАК Сумма,
	|	ВложенныйЗапрос.Метка КАК Метка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПеремещениеТоваровТовары.Склад КАК Склад,
	|		ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|		ПеремещениеТоваровТовары.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|		ПеремещениеТоваровТовары.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмеренияМест,
	|		ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|		ПеремещениеТоваровТовары.СерияНоменклатуры КАК Серия,
	|		ПеремещениеТоваровТовары.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА ПеремещениеТоваровТовары.КоличествоМест = 0
	|				ТОГДА ПеремещениеТоваровТовары.Количество
	|			ИНАЧЕ ПеремещениеТоваровТовары.КоличествоМест
	|		КОНЕЦ КАК КоличествоМест,
	|		ПеремещениеТоваровТовары.НомерСтроки КАК НомерСтроки,
	|		0 КАК Метка,
	|		ПеремещениеТоваровТовары.Цена КАК Цена
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|	ГДЕ
	|		ПеремещениеТоваровТовары.Ссылка В(&ТекущийДокумент)) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Метка,
	|	НомерСтроки";
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = ПолучитьМакет("ТТН_отвХран");
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента,, Шапка.БанковскийСчет);
	
	//Если (Шапка.ЧерезТК <> Неопределено)и НЕ Шапка.ЧерезТК Тогда 
	СведенияОПокупателе   = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	//Иначе
	//	Если Константы.ТорговаяКомпания.Получить() <> Справочники.Контрагенты.ПустаяСсылка() Тогда 
	//		СведенияОПокупателе       = СведенияОЮрФизЛице(Константы.ТорговаяКомпания.Получить(),       Шапка.ДатаДокумента);
	//	Иначе
	//		СведенияОПокупателе       = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	//	КонецЕсли;
	//КонецЕсли;
	
	СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ГрузоотправительПоОКПО        = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ГрузополучательПоОКПО         = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО              = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.МаркаАвтомобиля           	  = СокрЛП(МаркаАвтомобиля);
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        	  = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя               	  = Водитель;
	ОбластьМакета.Параметры.ГосНомерПрицепа           	  = ГосНомерПрицепа;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();
	
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	// инициализация итогов по странице
	//МассаНаСтранице = 0;
	КоличествоМестНаСтранице  = 0;
	ИтогоКоличествоНаСтранице = 0;
	ИтогоКоличествоНаСтранице_Отгр = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;
	
	// инициализация итогов по документу
	//ИтогоМасса = 0;
	ИтогоКоличествоМест  = 0;
	ИтогоКоличество 	 = 0;
	ИтогоКоличество_Отгр = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		Если ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Ном           = Ном + 1;
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			
			//	ОбластьИтоговПоСтранице.Параметры.МассаНаСтранице = МассаНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.КоличествоМестНаСтранице = КоличествоМестНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице_Отгр = ИтогоКоличествоНаСтранице_Отгр;
			ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
			
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// очистим итоги по странице
			ИтогоКоличествоНаСтранице = 0;
			ИтогоКоличествоНаСтранице_Отгр = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.Склад = ВыборкаСтрок.Склад;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование
		+ ПредставлениеСерий(ВыборкаСтрок)
		+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "")
		+ ?(ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура.Производитель),""," (" + ВыборкаСтрок.Номенклатура.Производитель + ")");
		
		Мест        = ?(ВыборкаСтрок.КоличествоМест=0, ВыборкаСтрок.Количество, ВыборкаСтрок.КоличествоМест);
		//Масса     = ВыборкаСтрок.Нетто/1000;
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = (ВыборкаСтрок.Сумма); //+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС);
		СуммаНДС    = 0; //ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС = СуммаСНДС  - СуммаНДС;
		
		ОбластьМакета.Параметры.Сумма = 0;
		ОбластьМакета.Параметры.Отгружено  = ВыборкаСтрок.Количество;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		КоличествоМестНаСтранице = КоличествоМестНаСтранице + Мест;
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоКоличествоНаСтранице_Отгр = ИтогоКоличествоНаСтранице_Отгр + Количество;
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
		
		// увеличим итоги по дукументу
		ИтогоКоличествоМест  = ИтогоКоличествоМест + Мест;
		ИтогоКоличество      = ИтогоКоличество + Количество;
		ИтогоКоличество_Отгр = ИтогоКоличество_Отгр + Количество;
		
		ИтогоСуммаСНДС  =ИтогоСуммаСНДС  + СуммаСНДС;
		
	КонецЦикла;
	
	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.КоличествоМестНаСтранице = КоличествоМестНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице_Отгр = ИтогоКоличествоНаСтранице_Отгр;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличествоМест = ИтогоКоличествоМест;
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоКоличество_Отгр = ИтогоКоличество_Отгр;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	//	ОбластьМакета.Параметры.ФИООтпускРпзрешил     = Руководитель;
	//	ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;
	
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.КоличествоСтрок         = КоличествоСтрок;
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	ОбластьМакета.Параметры.ВсегоМестПрописью       = ЧислоПрописью(ИтогоКоличествоМест, ,",,,,,,,,0");
	
	//+++( 27.07.2011 - масса нетто/брутто
	выборка2 = ПолучитьВесОбъем();
	
	Если Выборка2.Количество()>0 тогда
		Выборка2.Следующий();
		
		МассаГрузаНетто  = Окр(Выборка2.Нетто/1000,3);  // в тоннах
		МассаГрузаБрутто = Окр(Выборка2.Брутто/1000,3); // в тоннах
		МассаГрузаБрутто = ?(МассаГрузаБрутто=0, МассаГрузаНетто, МассаГрузаБрутто);
		МассаГрузаНетто  = ?(МассаГрузаНетто=0, МассаГрузаБрутто, МассаГрузаНетто);
		
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета="тонна,тонны,тонн,ж,килограмм,килограмма,килограммов,м,3";
		
		ОбластьМакета.Параметры.МассаГрузаНетто  = ЧислоПрописью(МассаГрузаНетто  ,ФормСтрока, ПарПредмета); 
		ОбластьМакета.Параметры.МассаГрузаБрутто = ЧислоПрописью(МассаГрузаБрутто ,ФормСтрока, ПарПредмета); 
		
		ОбластьМакета.Параметры.МассаГрузаНеттоЧисло  = Формат(МассаГрузаНетто,"ЧДЦ=3")+" т."; 
		ОбластьМакета.Параметры.МассаГрузаБруттоЧисло = Формат(МассаГрузаБрутто,"ЧДЦ=3")+" т."; 
		
	КонецЕсли;
	//+++)
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьМакета   = Макет.ПолучитьОбласть("ТранспортныйРаздел");
	ШрифтСтандарт   = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , НЕ ЛицензионнаяКарточка);
	ШрифтОграничено = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , ЛицензионнаяКарточка);
	
	ОбластьМакета.Области.Стандарт.Шрифт   = ШрифтСтандарт;
	ОбластьМакета.Области.Ограничено.Шрифт = ШрифтОграничено;
	
	ОбластьМакета.Параметры.СрокДоставки              = СрокДоставки;
	ОбластьМакета.Параметры.Номер                     = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ОрганизацияПеревозчик     = Перевозчик;
	ОбластьМакета.Параметры.МаркаАвтомобиля           = МаркаАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ОрганизацияЗаказчик       = Заказчик;
	ОбластьМакета.Параметры.ФИОВодителя               = Водитель;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
	ОбластьМакета.Параметры.ВидПеревозки              = ВидПеревозки;
	ОбластьМакета.Параметры.ПунктПогрузки             = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки            = ПунктРазгрузки;
	ОбластьМакета.Параметры.Прицеп                    = МаркаПрицепа;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = ГосНомерПрицепа;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СведенияОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьТТН_отвХран()



Процедура ОсновныеДействияФормыДействие2(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) тогда
		Предупреждение("Не заполнено поле - Документ!",60);
		возврат;
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") тогда
		ТабДокумент = ПечатьТТН_ОтвХран();
	иначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ПеремещениеТоваров") тогда
		ТабДокумент = ПечатьТТН_Перемещение();
	иначе 
		ТабДокумент = ПечатьТТН();
	КонецЕсли;	
	НапечататьДокумент(ТабДокумент, 1, Ложь, "1-Т (Товарно-транспортная накладная)");
	
КонецПроцедуры

//--------------------------------------------------

Процедура ПриОткрытии()
	Кладовщик = "";
	ДолжнКладовщика = "";
	
	ЗаполнитьДанныеПоДокументу();	
	
КонецПроцедуры // ПриОткрытии()

Процедура ДокументПриИзменении(Элемент)
	
	ЗаполнитьДанныеПоДокументу();
	
КонецПроцедуры //ДокументПриИзменении()


//+++ Основная процедура заполнения по документу +++
процедура ЗаполнитьДанныеПоДокументу() Экспорт
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		
		попытка
			//+++ 24.02.2012 - выключены предупреждения!
				
			Если  ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаданиеНаОтгрузку") тогда
				Если СокрЛП(СсылкаНаОбъект.МаркаАвтомобиля)="" тогда
					Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
						Если ТипЗнч(СсылкаНаОбъект.Автомобиль) = Тип("СправочникСсылка.Автомобили") тогда
							ЭтотОбъект.МаркаАвтомобиля 		= СсылкаНаОбъект.Автомобиль.Модель;
						иначеЕсли ТипЗнч(СсылкаНаОбъект.Автомобиль) = Тип("СправочникСсылка.МаркиИНомераАвтомобилей") тогда
							ЭтотОбъект.МаркаАвтомобиля 		= СсылкаНаОбъект.Автомобиль;
						КонецЕсли;
					КонецЕсли;
				иначе
					ЭтотОбъект.МаркаАвтомобиля 		=  СсылкаНаОбъект.МаркаАвтомобиля;
					//++Орлов
					Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
						ЭтотОбъект.МаркаАвтомобиля2		=  СсылкаНаОбъект.МаркаАвтомобиля2;
					КонецЕсли;
					//--Орлов
				КонецЕсли;
				
				Если СокрЛП(СсылкаНаОбъект.ГосНомерАвтомобиля)="" тогда
					Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
						Если ТипЗнч(СсылкаНаОбъект.Автомобиль) = Тип("СправочникСсылка.Автомобили") тогда
							ЭтотОбъект.ГосНомерАвтомобиля  	=  СсылкаНаОбъект.Автомобиль.ГосНомер;
						иначеЕсли ТипЗнч(СсылкаНаОбъект.Автомобиль) = Тип("СправочникСсылка.МаркиИНомераАвтомобилей") тогда
							ЭтотОбъект.ГосНомерАвтомобиля  	=  СсылкаНаОбъект.Автомобиль.НомерАвто;
						конецЕсли; 		
					конецЕсли; 		
				иначе 
					ЭтотОбъект.ГосНомерАвтомобиля  	=  СсылкаНаОбъект.ГосНомерАвтомобиля;
					//++Орлов
					Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
						ЭтотОбъект.ГосНомерАвтомобиля2	=  СсылкаНаОбъект.ГосНомерАвтомобиля2;
					КонецЕсли;
					//--Орлов
				КонецЕсли;	
				
				ЭтотОбъект.МаркаПрицепа			= СсылкаНаОбъект.МаркаПрицепа;
				ЭтотОбъект.ГосНомерПрицепа     	= СсылкаНаОбъект.ГосНомерПрицепа;
				
				ЭтотОбъект.Водитель             	 = СсылкаНаОбъект.Водитель;
				//++Орлов
				Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
					ЭтотОбъект.Водитель2             	 = СсылкаНаОбъект.Водитель2;
				КонецЕсли;
				//--Орлов
				ЭтотОбъект.ВодительскоеУдостоверение = СсылкаНаОбъект.ВодительскоеУдостоверение;
				
					
					
					//ЭтотОбъект.ПунктПогрузки = ПолучитьАдресИзКонтактнойИнформации_Лок(СсылкаНаОбъект.Организация,"Складской");
					ЭтотОбъект.ВидПеревозки        	= "Автомобильным транспортом";
					//02.08.11	
					//ЭтотОбъект.ДатаВремяПогрузки = СсылкаНаОбъект.Дата;
					//ЭтотОбъект.ДатаВремяВыгрузки = ?(СсылкаНаОбъект.СрокДоставки=Дата(1,1,1), СсылкаНаОбъект.Дата, СсылкаНаОбъект.СрокДоставки);
					
					//+++ 27.07.2011 - автоматически находим заказчика
					Заказчик1 = СсылкаНаОбъект.Заказчик; // строка 
					Если Найти(нрег(Заказчик1), "яршинторг")>0 тогда
						Заказчик2 = Справочники.Организации.НайтиПоКоду("00001"); // Первая и основная организация
						Если Найти(нрег(Заказчик2.НаименованиеПолное), "яршинторг")=0 тогда // а это не так!
							Заказчик2 = Справочники.Организации.НайтиПоНаименованию(Заказчик1);
							Если Заказчик2 = Справочники.Организации.ПустаяСсылка() тогда // контрагент?
								Заказчик2 = Справочники.Контрагенты.НайтиПоНаименованию(Заказчик1);
								Если Заказчик2 <> Справочники.Контрагенты.ПустаяСсылка() тогда
									Заказчик1 = Заказчик2;
								КонецЕсли;
							иначе
								Заказчик1 = Заказчик2;
							КонецЕсли;
						иначе
							Заказчик1 = Заказчик2;
						КонецЕсли;
					иначеЕсли (СокрЛП(Заказчик1)<>"") тогда// это какой-то другой контрагент? попробуем найти его по наименованию(точному!)
						Заказчик2 = Справочники.Контрагенты.НайтиПоНаименованию(СокрЛП(Заказчик1));
						Если (Заказчик2 <> Справочники.Контрагенты.ПустаяСсылка()) тогда
							Заказчик1 = Заказчик2;
						КонецЕсли;
					КонецЕсли;
					
					ЭтотОбъект.Заказчик = Заказчик1;
					
					
					
				КонецЕсли; 				
					
			//НомерДокумента  = СсылкаНаОбъект.Номер;
			
			//------------только в форме---------------
			
			//=============Заполнение элементов Формы для Приложения 8=====================
			Шапка = ПолучитьШапку();  //+++ полный разбор по документу
			
			СведенияОГрузоотправителе = СведенияОЮрФизЛице(Заявка.Контрагент,  Заявка.Дата);
			
			СведенияОГрузополучателе = СведенияОЮрФизЛице(ССылкаНаОбъект.Организация,  Заявка.Дата);

			
			
			Если СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00107") Тогда  //Москва
					СведенияОГрузополучателе  = СведенияОЮрФизЛице(справочники.Контрагенты.НайтиПоКоду("93870"),   Заявка.Дата);
			ИначеЕсли СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00112") Тогда // Питер
					СведенияОГрузополучателе  = СведенияОЮрФизЛице(справочники.Контрагенты.НайтиПоКоду("П000835"),   Заявка.Дата);
			ИначеЕсли СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") Тогда //Ростов
					СведенияОГрузополучателе  = СведенияОЮрФизЛице(справочники.Контрагенты.НайтиПоКоду("93187"),   Заявка.Дата);
			ИначеЕсли СсылкаНаОбъект.Подразделение = справочники.Подразделения.НайтиПоКоду("00138") Тогда //Екат
					СведенияОГрузополучателе  = СведенияОЮрФизЛице(справочники.Контрагенты.НайтиПоКоду("93801"),   Заявка.Дата);
			конецЕсли;		
					
					
			
			ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");//,НомерСчета,Банк,БИК,КоррСчет");
			ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны"); //,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		
			Если Шапка.Грузоотправитель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ЮрЛицо тогда 
				ЭлементыФормы.Пункт1_1Ведомость.Значение  = "";
				ЭлементыФормы.Пункт1_2Ведомость.Значение = ГрузоотправительПредставление;
				ЭлементыФормы.Пункт1_3Ведомость.Значение = "";
			иначе	
				ЭлементыФормы.Пункт1_1Ведомость.Значение  = ГрузоотправительПредставление;
				ЭлементыФормы.Пункт1_2Ведомость.Значение = "";
				ЭлементыФормы.Пункт1_3Ведомость.Значение= "";
			КонецЕсли;	
			ЭлементыФормы.Пункт10_1Ведомость.Значение = ГрузоотправительПредставление;
					
			
				ЭтотОбъект.ПунктРазгрузки = СведенияОГрузополучателе.ФактическийАдрес;
				Если ЗначениеЗаполнено(Заявка.АдресДоставки)Тогда
				ЭтотОбъект.ПунктПогрузки	= Заявка.АдресДоставки;
			    КонецЕсли;
				

				
				
				
				
			Если Шапка.Грузополучатель.ЮрФизЛицо = перечисления.ЮрФизЛицо.ЮрЛицо тогда
				ЭлементыФормы.Пункт2_1Ведомость.Значение = "";
				ЭлементыФормы.Пункт2_2Ведомость.Значение = ГрузополучательПредставление;
			иначе 
				ЭлементыФормы.Пункт2_1Ведомость.Значение = ГрузополучательПредставление;
				ЭлементыФормы.Пункт2_2Ведомость.Значение = "";
			КонецЕсли;
			ЭлементыФормы.Пункт2_3ведомость.Значение = "";
			ЭлементыФормы.Пункт10_3Ведомость.Значение = ГрузополучательПредставление;
			
			Если ЕстьРеквизитДокумента("Перевозчик", СсылкаНаОбъект.Метаданные()) тогда	
				перевозчик = СсылкаНаОбъект.Перевозчик;
				Перевозчик1ПриИзменении(Неопределено);//+++ определение перевозчика
			иначе
				перевозчик = "";
			КонецЕсли;
			//Орлов++
			Если ЕстьРеквизитДокумента("Перевозчик2", СсылкаНаОбъект.Метаданные()) тогда	
				Перевозчик2 = СсылкаНаОбъект.Перевозчик2;
				
				Перевозчик3ПриИзменении(Неопределено);//+++ определение перевозчика
			иначе
				Перевозчик2 = "";
			КонецЕсли;
			//Орлов--
			//ОтпускРазрешилДолжность					ФИООтпускРазрешил	ГрузПринялДолжность					ГрузПолучилДолжность
			// 		Если НЕ Шапка.ОтгрузкаЧерезЧП Тогда
			
			//Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента);
			//ФИООтпускРазрешил = Строка(Руководители.Руководитель);
			//ОтпускРазрешилДолжность = Строка(Руководители.РуководительДолжность);
			//ЭлементыФормы.Пункт1_3Ведомость.Значение = ОтпускРазрешилДолжность+"   "+ФИООтпускРазрешил;
			ОтпускРазрешилДолжность ="";
			ФИООтпускРазрешил = "";//ПолучитьКладовщика();
			
			ЭлементыФормы.Пункт1_3Ведомость.Значение = ФИООтпускРазрешил;
			
			//		КонецЕсли; 
			ОтветственныйГрузополучатель =  "";//ОтветственныйЧел(Шапка.Грузополучатель);
			ЭлементыФормы.Пункт2_3Ведомость.Значение  = Водитель;
			
			Если СсылкаНаОбъект.Дата < '20120313' тогда
				ЭлементыФормы.Пункт6_6Ведомость.Значение  = "Сдал:                   /"+ФИООтпускРазрешил+"/ Принял:                   /"+Водитель+"/";
				ЭлементыФормы.Пункт7_6Ведомость.Значение  = "Сдал:                   /"+Водитель+"/ Принял:      ";
			иначе
				ЭлементыФормы.Пункт6_6Ведомость.Значение  = ФИООтпускРазрешил;
				Пункт6_7  = Водитель;
				ЭлементыФормы.Пункт7_6Ведомость.Значение  = ""; //КонтактноеЛицоКонтрагента!
				Пункт7_7  = Водитель;  
			КонецЕсли;	
			
					dt = 0;
			
			Если dt=0 тогда
				ЭлементыФормы.СрокДоставки2.Значение = Дата(1,1,1); // неопределен!	
			иначе
				ЭлементыФормы.СрокДоставки2.Значение = (ЭтотОбъект.ДатаВремяВыгрузки + dt*86400); //c учетом отсрочки по договору!
			КонецЕсли; 
			//---------------------------------------------------------------
			//	    	ЭлементыФормы.Пункт1_3Ведомость.Значение = Водитель;
			//			ЭлементыФормы.Пункт2_3Ведомость.Значение = Водитель;
			
			
			ЭлементыФормы.Пункт0_4.Значение = СсылкаНаОбъект.Номер;
			//------------------------------------------------------------
			//"Резина, изделия резино-технические и эбонитовые (452009)"; //шины
			//"Автомобили и их части (381000)";
			
			//+++ 03.04.2012
			Если ЕстьРеквизитДокумента("ВалютаДокумента", СсылкаНаОбъект.Метаданные()) тогда
				валюта1 = СсылкаНаОбъект.ВалютаДокумента;
			иначе	
				валюта1 = Справочники.Валюты.НайтиПоНаименованию("руб.");
			КонецЕсли;
			ЭлементыФормы.Пункт5_3Ведомость.Значение = "стоимость: "+СформироватьСуммуПрописью(Заявка.Товары.Итог("Сумма"), валюта1);
			// = "стоимость: "+Формат( ПолучитьСуммуДокументов() , "ЧДЦ=2; ЧН=0.00")+" р.";
			
			
			Если ЭтотОбъект.Реализации.Количество()=0 тогда	
				ЭлементыФормы.ПереченьДопДокументов.Значение = "Накладная №"+Строка(ЭтотОбъект.СсылкаНаОбъект.Номер)+" от "+Формат(ЭтотОбъект.СсылкаНаОбъект.Дата,"ДЛФ=DD");
				
				Если типЗнч(СсылкаНаОбъект) = тип("ДокументСсылка.РеализацияТоваровУслуг")  //14.04.2016
					и (СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004")
					или СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль 
					или СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс) Тогда //ФормулаАвто
				ЭлементыФормы.ПереченьДопДокументов.Значение = "Накладная №"+Строка(ЭтотОбъект.СсылкаНаОбъект.НомерФормулаАвто)+" от "+Формат(ЭтотОбъект.СсылкаНаОбъект.Дата,"ДЛФ=DD");
				КонецЕсли;                                                          

				
				//+++( 02.08.2011		
				Пункт3_1 = ""; i=1; //04.08.2011 - число столбцов определяется в модуле...
				Для каждого Стр из Заявка.Товары цикл
					Если ТипЗнч(СсылкаНаОбъект)	= Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") 
						или ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ПеремещениеТоваров") тогда
						Пункт3_1 = Пункт3_1 + СокрЛП(Стр.Номенклатура.НаименованиеПолное);
						Пункт3_1 = Пункт3_1 + " - "+Строка(Стр.Количество)+" шт.; ";
					иначе		
						Пункт3_1 = Пункт3_1 + ?(СокрЛП(Стр.Номенклатура.НаименованиеПолное)="", СокрЛП(Стр.Номенклатура.Наименование), СокрЛП(Стр.Номенклатура.НаименованиеПолное));
						Пункт3_1 = Пункт3_1 + " - "+ строка(Стр.Количество)+" шт.;"; 
							
					КонецЕсли;
					//	Если i%Nстолб=0 тогда
					//	Пункт3_1 = Пункт3_1 +"
					//|"; КонецЕсли;
					i=i+1;
				конецЦикла;
				//+++)
				
			иначе    //02.08.2011
				
				ПереченьДопДокументов = "";  первый=истина;
				Пункт3_1 = ""; n=0; i=1; Nстолб = 2;  //+++ 02.08.2011 
				
				
						
				//2015.09.30  ФормулаАвто
				БеремНомерФормулаАвто = Ложь;
			Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004")или СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль или СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда //ФормулаАвто
					БеремНомерФормулаАвто = Истина;
				КонецЕсли;                                                          
			КонецЕсли;	

				
				
				
				
				пока i<=ЭтотОбъект.Реализации.Количество() цикл
					ВыборкаНом1 = ЭтотОбъект.Реализации[i-1].Реализация.Товары;
					
					Если первый тогда
						Если БеремНомерФормулаАвто Тогда
						ПереченьДопДокументов =?(Реализации.Количество()=1,"Накладная №","Накладные №№")+ЭтотОбъект.Реализации[i-1].Реализация.НомерФормулаАвто;
						Иначе
						ПереченьДопДокументов =?(Реализации.Количество()=1,"Накладная №","Накладные №№")+ЭтотОбъект.Реализации[i-1].Реализация.Номер;
						конецЕсли;
						дата1 = " от "+Формат(ЭтотОбъект.Реализации[i-1].Реализация.Дата,"ДЛФ=DD");
						первый = ложь;
					иначе 
						Если БеремНомерФормулаАвто Тогда
						ПереченьДопДокументов = ПереченьДопДокументов +", "+ЭтотОбъект.Реализации[i-1].Реализация.НомерФормулаАвто;
						иначе	
						ПереченьДопДокументов = ПереченьДопДокументов +", "+ЭтотОбъект.Реализации[i-1].Реализация.Номер;
						конецЕсли;
					КонецЕсли;
					
					j=1; 
					пока j<=ВыборкаНом1.Количество() цикл //------------------------------
						ВыборкаНом = ВыборкаНом1[j-1];
						n=n+1;
						//		Пункт3_1 = Пункт3_1 + ?(СокрЛП(ВыборкаНом.Номенклатура.НаименованиеПолное)="", СокрЛП(ВыборкаНом.Номенклатура.Наименование), СокрЛП(ВыборкаНом.Номенклатура.НаименованиеПолное))+"; ";
						Если ТипЗнч(ЭтотОбъект.Реализации[i-1].Реализация)	= Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") 
							или ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ПеремещениеТоваров") тогда
							Пункт3_1 = Пункт3_1 + СокрЛП(ВыборкаНом.Номенклатура.Наименование);
							Пункт3_1 = Пункт3_1 + " - "+Строка(ВыборкаНом.Количество)+" шт.; ";
						иначе		
							Пункт3_1 = Пункт3_1 + ?(СокрЛП(ВыборкаНом.Номенклатура.НаименованиеПолное)="", СокрЛП(ВыборкаНом.Номенклатура.Наименование), СокрЛП(ВыборкаНом.Номенклатура.НаименованиеПолное));
							Пункт3_1 = Пункт3_1 + " - "+строка(ВыборкаНом.Количество)+" шт.; ";
						КонецЕсли;
						j=j+1;
					КонецЦикла;  //-----------------------------------
					i=i+1;
				КонецЦикла;	
				//++Смирнов для Лагерной и Радуга Питер убираем LegeArtis
				Если Шапка.Покупатель.Код="93136  " или  Шапка.Покупатель.Код="91777  " тогда
					Пункт3_1 = СтрЗаменить(Пункт3_1,"LegeArtis","");
				КонецЕсли;

				ПереченьДопДокументов = ПереченьДопДокументов + " от "+Формат(СсылкаНаОбъект.Дата,"ДЛФ=DD");
				
				
				Если ЕстьРеквизитДокумента("ВалютаДокумента", СсылкаНаОбъект.Метаданные()) тогда
					валюта1 = СсылкаНаОбъект.ВалютаДокумента;
				иначе	
					валюта1 = Справочники.Валюты.НайтиПоНаименованию("руб.");
				КонецЕсли;	
				//+++ Пункт5_3     = СформироватьСуммуПрописью(Реализации.Итог("Сумма"), валюта1);
				
			КонецЕсли;
			
			//Пункт3_3Ведомость =  масса нетто (брутто) грузовых мест в килограммах, размеры (высота, ширина и длина) в метрах, объем грузовых мест в кубических метрах)
			//3.3 [МассаГрузаНетто]; [МассаГрузаБрутто]; [Размеры]; [ОбъемМест]
			
			//+++ Нетто, Брутто, ОбъемШтук, ОбъемМест
			выборка2 = ПолучитьВесОбъем();
			
			//ИтогоМест= СсылкаНаОбъект.Товары.Итог("КоличествоМест");
			//ИтогоКол = СсылкаНаОбъект.Товары.Итог("Количество");
			//колМест  = ?(ИтогоМест=0,?(ИтогоКол=0, "", Строка(ИтогоКол)+" шт."), Строка(ИтогоМест)+" мест");
			//Пункт3_2 =	колМест;
			
			Если Выборка2.Количество()>0 тогда
				Выборка2.Следующий();
				
				ИтогоМест= выборка2.КоличествоМест;
				ИтогоКол = выборка2.Количество;
				колМест  = ?(ИтогоМест>0 и ИтогоМест<>ИтогоКол, Строка(ИтогоМест)+" мест ("+Строка(ИтогоКол)+" шт.)"
				                   , Строка(ИтогоКол)+" шт."); //14.01.2016
				Пункт3_2 =	колМест;
				//Пункт3_2Ведомость = КолМест, маркировка
				
				МассаГрузаНетто  = ?(Выборка2.Нетто<>0,Формат(Выборка2.Нетто,"ЧН= ")+"кг; ", "");
				МассаГрузаБрутто = ?(Выборка2.Брутто<>0, "("+Формат(Выборка2.Брутто,"ЧН= ")+"кг); ", "");
				Размеры   = ""; //"[ВхШхД];";
				ОбъемМест = ?(Выборка2.ОбъемМест<>0, Формат(Выборка2.ОбъемМест, "ЧН= ")+"м3; ","");
				
				Пункт3_3 = МассаГрузаНетто + МассаГрузаБрутто + Размеры + ОбъемМест;
				
				ЭлементыФормы.Пункт6_5Ведомость.Значение = МассаГрузаНетто+колМест;
				ЭлементыФормы.Пункт7_5Ведомость.Значение = МассаГрузаНетто+колМест;
			иначе 
				Пункт3_3 = ""; 
				Пункт3_2 = "";
				ЭлементыФормы.Пункт6_5Ведомость.Значение = "";
				ЭлементыФормы.Пункт7_5Ведомость.Значение = "";
			КонецЕсли;
			
			//-----------------Погрузка-выгрузка--------------
			//6,7
			Если СведенияОГрузоотправителе.Представление<>неопределено тогда
				ПунктПогрузки  = ?(СокрЛП(ПунктПогрузки)="", ?(СокрЛП(СведенияОГрузоотправителе.ФактическийАдрес)="", СведенияОГрузоотправителе.ЮридическийАдрес, СведенияОГрузоотправителе.ФактическийАдрес), ПунктПогрузки);
			КонецЕсли;
			
			//+++ 3-ий этап
			Если СведенияОГрузоПолучателе.Представление<>неопределено тогда
				ПунктРазгрузки = ?(СокрЛП(ПунктРазгрузки)="", ?(СокрЛП(СведенияОГрузоПолучателе.ФактическийАдрес)="",СведенияОГрузоПолучателе.ЮридическийАдрес,СведенияОГрузоПолучателе.ФактическийАдрес) , ПунктРазгрузки);
			КонецЕсли;	
			
			
			
			
		исключение
			#Если Клиент тогда
				сообщить("Не удалось получить все данные из документа: "+СсылкаНаОбъект+" в ТН(приложение №4):"+ОписаниеОшибки(), СтатусСообщения.Внимание);
			#КонецЕсли		  
		КонецПопытки;
		
	КонецЕсли;
	
	Если ЭтотОбъект.НомерЭкземпляра = 0 тогда
		ЭтотОбъект.НомерЭкземпляра = 1;
	КонецЕсли; 
	
КонецПроцедуры


функция ОтветственныйЧел(Контр)
	//-----------------Груз получил--------------------
	//ЗапросЧел  = Новый Запрос;
	//ЗапросЧел.Текст = "ВЫБРАТЬ
	//			   |	КонтактныеЛица.Фамилия,
	//			   |	КонтактныеЛица.Имя,
	//			   |	КонтактныеЛица.Отчество,
	//			   |	КонтактныеЛица.Должность,
	//			   |	КонтактныеЛица.Роль КАК Роль
	//			   |ИЗ
	//			   |	Справочник.КонтактныеЛица КАК КонтактныеЛица
	//			   |ГДЕ
	//			   |	КонтактныеЛица.Роль В(&Роли)
	//			   |	И КонтактныеЛица.ОбъектВладелец = &ОбъектВладелец
	//			   |
	//			   |УПОРЯДОЧИТЬ ПО
	//			   |	Роль УБЫВ
	//			   |АВТОУПОРЯДОЧИВАНИЕ";
	//
	//ЗапросЧел.УстановитьПараметр("ОбъектВладелец", Контр);
	//массивРолей = новый массив;
	//массивРолей.Добавить(Справочники.РолиКонтактныхЛиц.Руководитель);
	//массивРолей.Добавить(Справочники.РолиКонтактныхЛиц.Директор);
	//массивРолей.Добавить(Справочники.РолиКонтактныхЛиц.ГенеральныйДиректор);
	//ЗапросЧел.УстановитьПараметр("Роли", массивРолей);
	//РезультатЧел = ЗапросЧел.Выполнить();
	//чел = РезультатЧел.Выбрать();
	//ФИО ответственного за перевозку со стороны Грузополучателя
	//Если чел.Количество()>0 тогда
	//чел.Следующий();
	//ФИОГрузПолучил 	= СокрЛП(чел.Должность)+"    "+чел.Фамилия+" "+Лев(чел.Имя,1)+". "+Лев(чел.Отчеcтво,1)+".";
	//иначеЕсли ТипЗнч(Контр)=Тип("СправочникСсылка.Контрагенты") тогда
	//Если ЗначениеЗаполнено(Контр.ОсновноеКонтактноеЛицо) тогда
	//чел = Контр.ОсновноеКонтактноеЛицо;
	//ФИОГрузПолучил 	= чел.Должность+"	"+чел.Фамилия+" "+Лев(чел.Имя,1)+". "+Лев(чел.Отчество,1)+".";	
	Если Контр.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо тогда
		ФИОГрузПолучил 	=Контр.Наименование;
	иначе
		ФИОГрузПолучил  = "";
	КонецЕсли;
	//иначеЕсли Контр.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо тогда
	//	ФИОГрузПолучил 	=Контр.Наименование;
	//иначе
	//	ФИОГрузПолучил  = "";
	//КонецЕсли;
	
	возврат ФИОГрузПолучил;
	
КонецФункции

//----------------------------------------------

Процедура ПриЗакрытии()
	
	//ответ = КодВозвратаДиалога.Нет;
	//Если ЗначениеЗаполнено(СсылкаНаОбъект) тогда 
	//	Если Вопрос("Сохранить данные из ТН приложение №4 в Документ?", РежимДиалогаВопрос.ДаНет,10,ответ,"Сохранение данных в документ") = КодВозвратаДиалога.Да тогда
	//	ЗаписатьДанныеВДокумент();
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьДанныеВДокумент()
	
	попытка
		ДокументОбъект = СсылкаНаОбъект.ПолучитьОбъект();
		
		ДокументОбъект.ПунктПогрузки		= ПунктПогрузки;
		ДокументОбъект.ПунктРазгрузки      	= ПунктРазгрузки;
		
		ДокументОбъект.Перевозчик          	= Перевозчик;
		ДокументОбъект.Водитель            	= Водитель;
		ДокументОбъект.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
		
		Если ТипЗнч(МаркаАвтомобиля) = Тип("Строка") тогда
			ДокументОбъект.МаркаАвтомобиля 	= СокрЛП(МаркаАвтомобиля);
		иначе
			ДокументОбъект.Автомобиль = МаркаАвтомобиля;
		КонецЕсли;	
		ДокументОбъект.МаркаПрицепа			= МаркаПрицепа;
		ДокументОбъект.ГосНомерАвтомобиля  	= ГосНомерАвтомобиля;
		ДокументОбъект.ГосНомерПрицепа     	= ГосНомерПрицепа;
		
		ДокументОбъект.СрокДоставки   		= СрокДоставки;
		ДокументОбъект.ВидПеревозки        	= ?(ЗначениеЗаполнено(ВидПеревозки), ВидПеревозки, "Автомобильным транспортом");
		
		//ДокументОбъект.Разблокировать();
		ДокументОбъект.Записать();
		#Если Клиент тогда
			сообщить("Данные ТН приложение №4 успешно сохранены в документ: "+СсылкаНаОбъект, СтатусСообщения.Информация);
		#КонецЕсли		  
		
	исключение
		#Если Клиент тогда
			сообщить("Не удалось сохранить данные ТН приложение №4 в документ: "+СсылкаНаОбъект, СтатусСообщения.Внимание);
		#КонецЕсли		  
	КонецПопытки;
	
	Если Форма <> Неопределено Тогда
		Оповестить("ТТН");	
	КонецЕсли; 
	
КонецПроцедуры



Процедура Пункт3_1НачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Форма = ПолучитьФорму("ФормаВыборГруппыТоваров", Элемент);
	текст1 = Форма.ОткрытьМодально();
	Пункт3_1 = Пункт3_1+?(ЗначениеЗаполнено(текст1), " "+текст1+"; ", "");
	
КонецПроцедуры


Процедура МаркаАвтомобиляПриИзменении(Элемент)
	
	Если ТипЗнч(МаркаАвтомобиля)= Тип("СправочникСсылка.Автомобили") тогда
		ГосНомерАвтомобиля  	=  МаркаАвтомобиля.ГосНомер;
	иначеЕсли ТипЗнч(МаркаАвтомобиля) = Тип("СправочникСсылка.МаркиИНомераАвтомобилей") тогда
		ГосНомерАвтомобиля  	=  МаркаАвтомобиля.НомерАвто;
	конецЕсли; 		
	
КонецПроцедуры


Процедура Пункт3_4ВедомостьНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Форма = ПолучитьФорму("ФормаВыборГруппыТоваров", Элемент);
	ВыбраннаяГруппаТоваров = Форма.ОткрытьМодально();
	ЭлементыФормы.Пункт3_4Ведомость.Значение = ЭлементыФормы.Пункт3_4Ведомость.Значение + ?(ЗначениеЗаполнено(ВыбраннаяГруппаТоваров), " "+ВыбраннаяГруппаТоваров, "");
КонецПроцедуры


Процедура Перевозчик1ПриИзменении(Элемент)
	
	Если значениеЗаполнено(ЭтотОбъект.Перевозчик) и ЗначениеЗаполнено(СсылкаНаОбъект) тогда
		
		перевозчик1= ЭтотОбъект.Перевозчик;
		
		Если ТипЗнч(Перевозчик)=Тип("Строка") тогда
			перевозчик1 =  Перевозчик;
			Перевозчик1 = Справочники.Организации.НайтиПоНаименованию(Перевозчик);
			Если Перевозчик1 = Справочники.Организации.ПустаяСсылка() тогда
				Перевозчик1 = Справочники.Контрагенты.НайтиПоНаименованию(перевозчик);
				Если Перевозчик1 = Справочники.Контрагенты.ПустаяСсылка() тогда
					//Перевозчик1 = Справочники.Контрагенты.НайтиПоРеквизиту("НаименованиеПолное", перевозчик);
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ
					|	Контрагенты.Ссылка
					|ИЗ
					|	Справочник.Контрагенты КАК Контрагенты
					|ГДЕ
					|	ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(1000)) = &Наименование";
					
					Запрос.УстановитьПараметр("Наименование", перевозчик);
					
					Результат = Запрос.Выполнить();
					Выборка = Результат.Выбрать();
					
					Если Выборка.Следующий() тогда
						Перевозчик1 = выборка.Ссылка;
					иначе
						ПеревозчикПредставление = СокрЛП(Перевозчик);
						Предупреждение("Не найдена ни Организация ни Контрагент
						|с наименованием: "+перевозчик+"
						|Выберите Перевозчика из справочника!", 60);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Перевозчик = Перевозчик1;
		
		Если ТипЗнч(Перевозчик)<>Тип("Строка") тогда	
			СведенияОПеревозчике = СведенияОЮрФизЛице(Перевозчик1,  СсылкаНаОбъект.Дата);
			ПеревозчикПредставление = ОписаниеОрганизации(СведенияОПеревозчике, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");//,НомерСчета,Банк,БИК,КоррСчет");
		иначе
			ПеревозчикПредставление = Перевозчик1;
		КонецЕсли;
		
		Если Перевозчик.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо тогда
			ЭлементыФормы.Пункт8_1Ведомость.Значение = ПеревозчикПредставление;
			ЭлементыФормы.Пункт8_2Ведомость.Значение = "";
			ЭлементыФормы.Пункт10_1Ведомость.Значение = ПеревозчикПредставление;
		иначе
			ЭлементыФормы.Пункт8_1Ведомость.Значение = "";
			ЭлементыФормы.Пункт8_2Ведомость.Значение = ПеревозчикПредставление;
			ЭлементыФормы.Пункт10_2Ведомость.Значение = ПеревозчикПредставление;
		КонецЕсли;
		
		ЭлементыФормы.Пункт8_3Ведомость.Значение = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	СостояниеГрузаОтправителя = СокрЛП(СостояниеГрузаОтправителя);
	СостояниеГрузаПолучателя  = СостояниеГрузаОтправителя;
КонецПроцедуры

Процедура Пункт8_1ВедомостьПриИзменении(Элемент)
	
	ЭтотОбъект.Перевозчик = ЭлементыФормы.Пункт8_1Ведомость.Значение;
	Перевозчик1ПриИзменении(Элемент);
	
КонецПроцедуры

Процедура Пункт8_2ВедомостьПриИзменении(Элемент)
	
	ЭтотОбъект.Перевозчик = ЭлементыФормы.Пункт8_2Ведомость.Значение;
	Перевозчик1ПриИзменении(Элемент);
	
КонецПроцедуры

Процедура Пункт2_3ведомостьНачалоВыбора(Элемент, СтандартнаяОбработка)
	//Если ТипЗнч(Пункт2_3)=Тип("СправочникСсылка.КонтактныеЛица") тогда
	//	СтандартнаяОбработка=Ложь;
	//	СправочникСписок = Справочники.КонтактныеЛица;
	//	шапка = ПолучитьШапку();
	//	СправочникСписок.Отбор.ОбъектВладелец = шапка.ГрузоПолучатель;
	//	СправочникСписок.ПолучитьФормуВыбора().ОткрытьМодально();
	//	Пункт2_3 = СправочникСписок.ТекущийЭлемент; 
	//КонецЕсли;
КонецПроцедуры

Процедура Пункт8_3ВедомостьНачалоВыбора(Элемент, СтандартнаяОбработка)
	//Если ТипЗнч(Пункт8_3)=Тип("СправочникСсылка.КонтактныеЛица") тогда
	//	СтандартнаяОбработка=Ложь;
	//	СправочникСписок = Справочники.КонтактныеЛица;
	//	шапка = ПолучитьШапку();
	//	СправочникСписок.Отбор.ОбъектВладелец = шапка.ГрузоПолучатель;
	//	СправочникСписок.ПолучитьФормуВыбора().ОткрытьМодально();
	//	Пункт8_3 = СправочникСписок.ТекущийЭлемент; 
	//КонецЕсли;	
КонецПроцедуры

Процедура ВодительПриИзменении(Элемент)
	ЭлементыФормы.Пункт6_6Ведомость.Значение = ЭлементыФормы.Пункт1_3Ведомость.Значение+"			"+Водитель;
	ЭлементыФормы.Пункт7_6Ведомость.Значение = ЭлементыФормы.Пункт2_3Ведомость.Значение+"			"+Водитель;
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	Форма = ПолучитьФорму("ФормаВыбораКлассаОпасности", Элемент);
	текст1 = Форма.ОткрытьМодально();
	Пункт3_1 = Пункт3_1+?(ЗначениеЗаполнено(текст1), " "+текст1+"; ", "");
КонецПроцедуры

Процедура ОсновныеДействияФормыТТН_ЯШТ(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) тогда
		Предупреждение("Не заполнено поле - Документ!",60);
		возврат;
	КонецЕсли;
	
	
	//+++
	Если ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
		ТабДокумент = ПечатьТТН_ЯШТ();
	иначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") тогда
		ТабДокумент = ПечатьТТН_ЯШТ_возврат();
	иначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") тогда
		ТабДокумент = ПечатьТТН_ОтвХран();
	иначеЕсли ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ПеремещениеТоваров") тогда
		ТабДокумент = ПечатьТТН_Перемещение();
	Иначе
		//	типДок = "ОперацияПоОтветственномуХранению";
		ТабДокумент = Неопределено;
	КонецЕсли;  //+++)
	
	НапечататьДокумент(ТабДокумент, 1, Ложь, "Товарно-транспортная накладная");
	
	
	
КонецПроцедуры

Процедура ДействиеЗаполнитьНажатие(Элемент)	
	Нал = 0;
	ФормулаАвто = Ложь;
	Реализации.Очистить();
	Если Не ЗначениеНеЗаполнено(СсылкаНаОбъект) Тогда
		Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
			Тип = "РеализацияТоваровУслуг";
			Нал = Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование, "*");
			ФормулаАвто = ?(СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004"), Истина, Ложь); 
		иначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") тогда
			Тип = "ВозвратТоваровПоставщику";
			Нал = Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование, "*");
		иначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") тогда
			Тип = "ОперацияПоОтветственномуХранению";
			Нал = Найти(СсылкаНаОбъект.ДоговорКонтрагента.Наименование, "*");
		иначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") тогда
			Тип = "ПеремещениеТоваров";
			Нал = ?(ЗначениеЗаполнено(СсылкаНаОбъект.ВнутреннийЗаказ) и ЗначениеЗаполнено(СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование),
			                 Найти(СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование.ДоговорКонтрагента.Наименование, "*"), 0);
		КонецЕсли;	
		Запрос=Новый Запрос;      
		Запрос.Текст="ВЫБРАТЬ
		|	РеализацияТУ.Номенклатура КАК Номенклатура,
		|	РеализацияТУ.Ссылка КАК Ссылка,
		| ";
		Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") 
			или ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") тогда
			Запрос.Текст=Запрос.Текст+" 0 как Сумма,
			|"; 
		иначе 
			Запрос.Текст=Запрос.Текст+" ВЫБОР
			|		КОГДА (НЕ РеализацияТУ.Ссылка.СуммаВключаетНДС)
			|			ТОГДА РеализацияТУ.Сумма + РеализацияТУ.СуммаНДС
			|		ИНАЧЕ РеализацияТУ.Сумма
			|	КОНЕЦ КАК Сумма,
			|РеализацияТУ.КоличествоМест КАК КоличествоМест,
			|"; 
		КонецЕсли;
		
		//+++ 07.11.2013
		текстПерем = ?(ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров"), "ВнутреннийЗаказ.ДокументОснование.","");
		флПерем = ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ПеремещениеТоваров")
					или ТипЗнч(СсылкаНаОбъект)=Тип("ДокументОбъект.ПеремещениеТоваров"); //+++ 24.06.2015
		флПерем2= ?(флПерем, ЗначениеЗаполнено(СсылкаНаОбъект.ВнутреннийЗаказ) и ЗначениеЗаполнено(СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование), ложь);
		флЕстьПерем2 = (НЕ флПерем) или (флПерем и флПерем2);
		
		Запрос.Текст=Запрос.Текст+"	РеализацияТУ.Количество КАК Количество
		|ИЗ
		|	Документ."+Тип+".Товары КАК РеализацияТУ
		|ГДЕ
		|	РеализацияТУ.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И РеализацияТУ.Ссылка.Подразделение = &Подразделение
		|	"+?(флЕстьПерем2, "И РеализацияТУ.Ссылка."+текстПерем +"Контрагент = &Контрагент
		|	И " +?(Нал>0,"", "НЕ")+" РеализацияТУ.Ссылка."+текстПерем+"ДоговорКонтрагента.Наименование ПОДОБНО ""%*%""
		|	И " +?(ФормулаАвто = Истина, "", "НЕ")+ " РеализацияТУ.Ссылка."+текстПерем+"ДоговорКонтрагента.ТипДоговора = &ТипДоговора",
		//+++ 24.06.2015
			"")+?(флПерем, " И РеализацияТУ.Ссылка.СкладПолучатель=&СкладПолучатель	", "") +"
		|   ИТОГИ
		|	СУММА(Сумма),
		|	СУММА(Количество)
		|ПО
		|	Ссылка";
		Запрос.УстановитьПараметр("Подразделение",СсылкаНаОбъект.Подразделение);			 
			
		Если флПерем тогда
			Если флПерем2 тогда
				Запрос.УстановитьПараметр("Контрагент", СсылкаНаОбъект.ВнутреннийЗаказ.ДокументОснование.Контрагент );			 
				Запрос.УстановитьПараметр("СкладПолучатель", СсылкаНаОбъект.СкладПолучатель );//+++ 24.06.2015 для филиалов!			 
			Иначе
				Запрос.УстановитьПараметр("СкладПолучатель", СсылкаНаОбъект.СкладПолучатель );			 
			КонецЕсли;	
	 	иначе
			Запрос.УстановитьПараметр("Контрагент",СсылкаНаОбъект.Контрагент);			 
		КонецЕсли;
		Запрос.УстановитьПараметр("НачДата",НачалоДня(СсылкаНаОбъект.Дата));			 
		Запрос.УстановитьПараметр("КонДата",КонецДня(СсылкаНаОбъект.Дата));			 
		Запрос.УстановитьПараметр("ТипДоговора",Справочники.ТипыДоговоров.НайтиПоКоду("Я0004"));
		Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пункт3_1 = ""; ПереченьДопДокументов="";
		первый=истина;
		Пока Выборка.Следующий() Цикл
			СтрокаРеализации=Реализации.Добавить();
			СтрокаРеализации.Реализация = Выборка.Ссылка;
			СтрокаРеализации.Сумма      = Выборка.Сумма;
			СтрокаРеализации.Количество = Выборка.Количество;
			Если первый тогда
				ПереченьДопДокументов =?(Выборка.Количество()=1,"Накладная №","Накладные №№")+Выборка.Ссылка.Номер;
				дата1 = " от "+Формат(Выборка.Ссылка.Дата,"ДЛФ=DD");
				первый = ложь;
			иначе 
				ПереченьДопДокументов = ПереченьДопДокументов +", "+Выборка.Ссылка.Номер;
			КонецЕсли;
			
		КонецЦикла;	
		
		ЗаполнитьДанныеПоДокументу();	//+++ 01.08.2011  - все там... повторных действий - не надо!
		
	КонецЕсли;		
	
КонецПроцедуры

Процедура РеализацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ЗаполнитьДанныеПоДокументу();
КонецПроцедуры

Процедура РеализацииПослеУдаления(Элемент)
	ЗаполнитьДанныеПоДокументу();
КонецПроцедуры

Процедура РеализацииРеализацияПриИзменении(Элемент)
	стр1 = ЭлементыФормы.Реализации.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(стр1.Реализация)  тогда
		
		стр1.Количество = стр1.Реализация.Товары.Итог("Количество");
		Если ТипЗнч(стр1.Реализация)=Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") 
			или ТипЗнч(стр1.Реализация)=Тип("ДокументСсылка.ПеремещениеТоваров") тогда
			стр1.Сумма  = 0;
		иначе
			стр1.Сумма  = стр1.Реализация.Товары.Итог("Сумма");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ссылкаНаОбъект) тогда
			Если стр1.Реализация.Дата<>ссылкаНаОбъект.ссылка.Дата тогда
				Предупреждение("Дата документа отличается от даты основного документа!",60);
			иначеЕсли ТипЗнч(стр1.Реализация)<>ТипЗнч(ссылкаНаОбъект.ссылка) тогда
				Предупреждение("Тип документа отличается от Типа основного документа!",60);
			иначеЕсли ТипЗнч(стр1.Реализация)=Тип("ДокументСсылка.ПеремещениеТоваров") тогда
				Если стр1.Реализация.Контрагент<>ссылкаНаОбъект.ссылка.ВнутреннийЗаказ.ДокументОснование.Контрагент тогда
					Предупреждение("Контрагент документа отличается от Контрагента Заказа покупателя во Внутреннем Заказе основного документа!",60);
				КонецЕсли;
			иначеЕсли ТипЗнч(стр1.Реализация)<>Тип("ДокументСсылка.ПеремещениеТоваров") тогда
				Если стр1.Реализация.Контрагент<>ссылкаНаОбъект.ссылка.Контрагент тогда
					Предупреждение("Контрагент документа отличается от Контрагента основного документа!",60);
				КонецЕсли;
				
			КонецЕсли;КонецЕсли;
			ЗаполнитьДанныеПоДокументу();
		КонецЕсли;
		
	КонецПроцедуры
	
Процедура НапечататьРаспискуИДискиПоКрышкам(преф="")  Экспорт
		ТабДокумент  = Новый ТабличныйДокумент;
		
		
		ЗапросКрышки=Новый Запрос;
		
		ЗапросКрышки.Текст="ВЫБРАТЬ  
		|  КомплектующиеНоменклатуры.Комплектующая.Код Код,
		|  КомплектующиеНоменклатуры.Комплектующая Комплектующая,
		|  РеализацияТоваровУслугТовары.Номенклатура Номенклатура,
		|	РеализацияТоваровУслугТовары.Количество Количество
		|	ИЗ
		| (ВЫБРАТЬ Номенклатура Номенклатура, СУММА(Количество) Количество
		|ИЗ Документ.РеализацияТоваровУслуг.Товары 
		|ГДЕ	Ссылка В (&ТекущийДокумент) И Номенклатура.ВидТовара=Значение(Перечисление.ВидыТоваров.Диски) 
		| СГРУППИРОВАТЬ ПО Номенклатура
		|) РеализацияТоваровУслугТовары
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры	 КомплектующиеНоменклатуры
		|ПО РеализацияТоваровУслугТовары.Номенклатура=КомплектующиеНоменклатуры.Номенклатура
		|ГДЕ КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ (&Крышки)
		|УПОРЯДОЧИТЬ ПО Комплектующая
		|ИТОГИ СУММА (Количество) ПО ОБЩИЕ, Комплектующая" ;
		
		ЗапросКрышки.УстановитьПараметр("Крышки", Справочники.Номенклатура.НайтиПоКоду("0080004"));
		
		Если ЭтотОбъект.Реализации.Количество()>0 тогда
			ЗапросКрышки.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Реализации.ВыгрузитьКолонку("Реализация"));	
		Иначе
			СписокДок = новый СписокЗначений();
			СписокДок.Добавить(СсылкаНаОбъект);
			ЗапросКрышки.УстановитьПараметр("ТекущийДокумент",СписокДок); 
		КонецЕсли;
		
		
		Результат=ЗапросКрышки.Выполнить();
		
		
		Если Не Результат.Пустой() Тогда
			
			Для сч=1 по 2 Цикл	
				Макет=ПолучитьМакет("Расписка");
				ОбластьЗаголовок= Макет.ПолучитьОбласть("Расписка");	
				ОбластьЗаголовок.Параметры.ЗаголовокДокумента="Получатель: "+СсылкаНаОбъект.Контрагент.Наименование;
				ОбластьЗаголовок.Параметры.Дата="Дата: "+Формат(СсылкаНаОбъект.Дата,"ДФ=dd.MM.yyyy");
				ТабДокумент.Вывести(ОбластьЗаголовок);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЦикла;
			
			Для сч=1 по 2 Цикл	
				Макет=ПолучитьМакет("МакетКрышки");
				ОбластьЗаголовок= Макет.ПолучитьОбласть("ЗаголовокДиски");	
				ОбластьЗаголовок.Параметры.ЗаголовокДокумента="Получатель: "+СсылкаНаОбъект.Контрагент.Наименование;
				ТабДокумент.Вывести(ОбластьЗаголовок);
				
				ОбластьШапка1= Макет.ПолучитьОбласть("Шапка1");
				
				ТабДокумент.Вывести(ОбластьШапка1);
				ОбщееКоличество=0;   ОбщийОстаток = 0;
				
				
				ВыборкаДискиПоКрышкамИтого=Результат.Выбрать();
				
				/// -----------
				ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				ВыборкаОбщийИтог.Следующий();		// Общий итог
				
				ОбластьОбщийИтог=Макет.ПолучитьОбласть("ОбластьИтог");
				
				ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
				
				
				ВыборкаКомплектующая = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаКомплектующая.Следующий() Цикл
					ОбластьКомплектующая=Макет.ПолучитьОбласть("Детали1");
					ОбластьКомплектующая.Параметры.Заполнить(ВыборкаКомплектующая);
					ОбластьКомплектующая.Параметры.Номенклатура=ВыборкаКомплектующая.Комплектующая;
					
					ОбластьКомплектующая.Параметры.Номенклатура=СтрЗаменить(ОбластьКомплектующая.Параметры.Номенклатура, "LA", "");
					
					ОбластьКомплектующая.Параметры.КодСБИС=ВыборкаКомплектующая.Комплектующая.КодСБИС;
					ОбластьКомплектующая.Параметры.Код=ВыборкаКомплектующая.Комплектующая.Код;
					ОбластьКомплектующая.Параметры.Количество=ВыборкаКомплектующая.Количество;
					
					ТабДокумент.Вывести(ОбластьКомплектующая);
					
					ВыборкаДетали = ВыборкаКомплектующая.Выбрать();
					
					Пока ВыборкаДетали.Следующий() Цикл
						//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("ДеталиДиски1");
						//ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
						//ОбластьДетальныхЗаписей.Параметры.Код=ВыборкаДетали.Номенклатура.Код;
						//ОбластьДетальныхЗаписей.Параметры.Номенклатура=ВыборкаДетали.Номенклатура.Наименование;
						//ТабДокумент.Вывести(ОбластьДетальныхЗаписей);
					КонецЦикла;
				КонецЦикла;
				ТабДокумент.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЦикла;
			
			
			
			// Зададим параметры макета
			ТабДокумент.ПолеСверху              = 0;
			ТабДокумент.ПолеСлева               = 0;
			ТабДокумент.ПолеСнизу               = 0;
			ТабДокумент.ПолеСправа              = 0;
			ТабДокумент.РазмерКолонтитулаСверху = 0;
			ТабДокумент.РазмерКолонтитулаСнизу  = 0;
			ТабДокумент.АвтоМасштаб             = Истина;
			ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
			
			НапечататьДокумент(ТабДокумент, 1, Ложь, преф+"Расшифровка по крышкам");
			
		КонецЕсли;
		
		
	КонецПроцедуры

//Орлов++	
Процедура Перевозчик3ПриИзменении(Элемент)
	
	Если значениеЗаполнено(ЭтотОбъект.Перевозчик2) и ЗначениеЗаполнено(СсылкаНаОбъект) тогда
		
		перевозчик3= ЭтотОбъект.Перевозчик2;
		
		Если ТипЗнч(Перевозчик2)=Тип("Строка") тогда
			перевозчик3 =  Перевозчик2;
			Перевозчик3 = Справочники.Организации.НайтиПоНаименованию(Перевозчик2);
			Если Перевозчик3 = Справочники.Организации.ПустаяСсылка() тогда
				Перевозчик3 = Справочники.Контрагенты.НайтиПоНаименованию(Перевозчик2);
				Если Перевозчик3 = Справочники.Контрагенты.ПустаяСсылка() тогда
					//Перевозчик1 = Справочники.Контрагенты.НайтиПоРеквизиту("НаименованиеПолное", перевозчик);
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ
					|	Контрагенты.Ссылка
					|ИЗ
					|	Справочник.Контрагенты КАК Контрагенты
					|ГДЕ
					|	ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(1000)) = &Наименование";
					
					Запрос.УстановитьПараметр("Наименование", Перевозчик2);
					
					Результат = Запрос.Выполнить();
					Выборка = Результат.Выбрать();
					
					Если Выборка.Следующий() тогда
						Перевозчик3 = выборка.Ссылка;
					иначе
						ПеревозчикПредставление = СокрЛП(Перевозчик2);
						Предупреждение("Не найдена ни Организация ни Контрагент
						|с наименованием: "+Перевозчик2+"
						|Выберите Перевозчика из справочника!", 60);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Перевозчик2 = Перевозчик3;
		
		Если ТипЗнч(Перевозчик2)<>Тип("Строка") тогда	
			СведенияОПеревозчике = СведенияОЮрФизЛице(Перевозчик3,  СсылкаНаОбъект.Дата);
			ПеревозчикПредставление = ОписаниеОрганизации(СведенияОПеревозчике, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");//,НомерСчета,Банк,БИК,КоррСчет");
		иначе
			ПеревозчикПредставление = Перевозчик3;
		КонецЕсли;
		
		Если Перевозчик2.ЮрФизЛицо = перечисления.ЮрФизЛицо.ФизЛицо тогда
			ЭлементыФормы.Пункт8_1Ведомость.Значение = ПеревозчикПредставление;
			ЭлементыФормы.Пункт8_2Ведомость.Значение = "";
			ЭлементыФормы.Пункт10_1Ведомость.Значение = ПеревозчикПредставление;
		иначе
			ЭлементыФормы.Пункт8_1Ведомость.Значение = "";
			ЭлементыФормы.Пункт8_2Ведомость.Значение = ПеревозчикПредставление;
			ЭлементыФормы.Пункт10_2Ведомость.Значение = ПеревозчикПредставление;
		КонецЕсли;
		
		ЭлементыФормы.Пункт8_3Ведомость.Значение = "";
		
	КонецЕсли;
	
КонецПроцедуры
//Орлов--
	
	
	УсловиеМосква = ложь;
	ОтветМосква = КодВозвратаДиалога.НЕТ;
	КонтрМосква = справочники.Контрагенты.ПустаяСсылка();
	