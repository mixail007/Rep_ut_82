
Функция Печать() Экспорт
	
	Если СсылкаНаОбъект = Неопределено Тогда
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	Если СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда //ФормулаАвто
		
		Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ТабДокумент = ПечатьПоЗаказуПокупателя();
		Иначе
			ТабДокумент = ПечатьПоРеализации();
		КонецЕсли;
		
		Возврат ТабДокумент;
		
	иначе
		сообщить("Счет печатается только для типа договора Формула Авто Плюс");
	конецЕсли;	
	
КонецФункции // Печать
 
Процедура ПолучитьМассивСлов(Слово,массивСлов)
	Если СтрДлина(СокрЛП(Слово))=0 Тогда
		Возврат;
	КонецЕсли;	
	позицияП=Найти(Слово, " ");
	Если позицияП>0 Тогда
		массивСлов.Добавить(СокрЛП(Сред(Слово,1,позицияП-1)));
		СловоДляАнализа=СокрЛП(Прав (Слово,СтрДлина(Слово)-позицияП));
		ПолучитьМассивСлов(СловоДляАнализа,массивСлов);
	Иначе
		массивСлов.Добавить(СокрЛП(Слово));
	КонецЕсли;	
КонецПроцедуры

Функция ПолучитьЗначениеПоСвойству(Объект, Свойство)
	
	МенеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект   = Объект;
	МенеджерЗаписи.Свойство = Свойство; 
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи.Значение;
	
КонецФункции // ПолучитьЗначениеПоСвойству()

Функция ПолучитьПараметрыДоговораФАП(Договор)
	
	СвойствоНомерДоговораФАП = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90237");
	Если ЗначениеЗаполнено(СвойствоНомерДоговораФАП) Тогда
		Значение = ПолучитьЗначениеПоСвойству(Договор, СвойствоНомерДоговораФАП);
		Если ЗначениеЗаполнено(Значение) Тогда
			НомДог = Значение;
			//Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90245");
			//ДатаКонтракта = ПолучитьЗначениеПоСвойству(Договор, Свойство);
			//Если ЗначениеЗаполнено(ДатаКонтракта) Тогда
			//	ДатаКонтракта = Формат(ДатаКонтракта, "ДЛФ=Д");
			//Иначе
			//	ДатаКонтракта = "";
			//КонецЕсли;
			ДатаКонтракта = Формат(Договор.Дата, "ДЛФ=Д");
		Иначе
			НомДог        = Договор.Номер;
			ДатаКонтракта = Формат(Договор.Дата, "ДЛФ=Д");
		КонецЕсли;
	Иначе
		НомДог        = Договор.Номер;
		ДатаКонтракта = Формат(Договор.Дата, "ДЛФ=Д");
	КонецЕсли;
	
	СтруктПарам = Новый Структура("НомерКонтракта, ДатаКонтракта", НомДог, ДатаКонтракта);
	
	Возврат СтруктПарам;
	
КонецФункции // ПолучитьПараметрыДоговораФАП()

Функция ПолучитьОписаниеДоговораФАП(Договор)
	
	// Дата подписания контракта из свойства
	СтруктПарамКонтракта = ПолучитьПараметрыДоговораФАП(Договор);
	
	НомерДоговора = СтруктПарамКонтракта.НомерКонтракта;
	Если ЗначениеЗаполнено(СтруктПарамКонтракта.ДатаКонтракта) Тогда
		ДатаКонтрактаСтр = " от " + СтруктПарамКонтракта.ДатаКонтракта;
	Иначе
		ДатаКонтрактаСтр = "";
	КонецЕсли;
	
	ОписаниеДоговора = "" + Договор.Наименование + " № " + НомерДоговора + ДатаКонтрактаСтр;
	
	Возврат ОписаниеДоговора;
	
КонецФункции // ПолучитьОписаниеДоговораФАП()

Функция ПечатьПоРеализации()
	
	ЕдиницаИзмеренияВеса = Константы.ЕдиницаИзмеренияВеса.Получить();
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Значение,
		|	ЗначенияСвойствОбъектов.Объект
		|ПОМЕСТИТЬ ГосКонтракт
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Объект
		|	И ЗначенияСвойствОбъектов.Свойство.Код = ""90254""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Значение,
		|	ЗначенияСвойствОбъектов.Объект
		|ПОМЕСТИТЬ ЛС
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Объект
		|	И ЗначенияСвойствОбъектов.Свойство.Код = ""90253""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка,
		|	ГосКонтракт.Значение КАК Контракт,
		|	ЛС.Значение КАК ЛС
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГосКонтракт КАК ГосКонтракт
		|		ПО ДоговорыКонтрагентов.Ссылка = ГосКонтракт.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЛС КАК ЛС
		|		ПО ДоговорыКонтрагентов.Ссылка = ЛС.Объект
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Объект
		|	И ГосКонтракт.Значение <> """"";

	Запрос.УстановитьПараметр("Объект", СсылкаНаОбъект.ДоговорКонтрагента);

	Результат = Запрос.Выполнить().Выгрузить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СсылкаНаОбъект.Склад);
	Запрос.УстановитьПараметр("ТекущийДокумент",    СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номер,
	|	Дата КАК ДатаДокумента,
	|	Организация,
	|	Организация КАК ЮрФизЛицо,
	|	Организация КАК Поставщик,
	|	Организация КАК Контрагент,
	|	Организация КАК Руководители,
	|	АдресДоставки КАК АдресДоставки,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	      ТОГДА ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|               	  ТОГДА Контрагент
	|					  ИНАЧЕ КонтрагентДляПечати КОНЕЦ
	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
	|	      ТОГДА Организация
	|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	|	БанковскийСчетОрганизации КАК БанковскийСчет,
	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|		  ТОГДА Контрагент
	|		  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Покупатель,
	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|		  ТОГДА Контрагент
	|		  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Плательщик,
	|	ДоговорКонтрагента.Представление  КАК Основание,
	|	ДоговорКонтрагента.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	Подразделение,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов      КАК Курс,
	|	КратностьВзаиморасчетов КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	НомерДоверенности,
	|	ДатаДоверенности,
	|	ОрганизацияВыдавшаяДоверенность,
	|	ФизЛицоДоверенности
	//|	ЧерезТК,
	//|	ОтгрузкаЧерезЧП
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг,
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|ПО
	|	ОтветственныеЛица.СтруктурнаяЕдиница = РеализацияТоваровУслуг.Склад
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	
	Если СсылкаНаОбъект.ВалютаДокумента = СсылкаНаОбъект.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		Запрос.УстановитьПараметр("Курс", СсылкаНаОбъект.КурсВзаиморасчетов);
		Запрос.УстановитьПараметр("Кратность", СсылкаНаОбъект.КратностьВзаиморасчетов);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		Запрос.УстановитьПараметр("Курс", 1);
		Запрос.УстановитьПараметр("Кратность", 1);
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
|"+	?(СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.ШинтрейдЯрославль, "
//+++ 04.03.2015 ---- Количество мест!
//	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление            КАК ВидУпаковки,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА ""уп"" 
	|			Иначе ВложенныйЗапрос.ЕдиницаИзмерения.Представление конец как ВидУпаковки,
	
//	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА выразить(ВложенныйЗапрос.Количество/ВложенныйЗапрос.КоличествоМест  как число(15,1))
	|			Иначе 1 конец как КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА 	ВложенныйЗапрос.КоличествоМест 
	|			Иначе ВложенныйЗапрос.Количество Конец  КАК КоличествоМест,",
	
" 	 ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление            КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
  |	0 как КоличествоМест,")+"	
	//|	ВЫБОР
	//|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА ВложенныйЗапрос.КоличествоМест * ВложенныйЗапрос.ЕдиницаИзмеренияМест.Вес
	//|		ИНАЧЕ ВложенныйЗапрос.Количество * ВложенныйЗапрос.ЕдиницаИзмерения.Вес
	//|	КОНЕЦ КАК Вес,
	|	ВложенныйЗапрос.Количество * ВложенныйЗапрос.ЕдиницаИзмерения.Вес КАК Вес,
//+++)	

	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.СтавкаНДС            КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                 КАК Цена,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.Сумма                КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС             КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка                КАК Метка
	|ИЗ
	|
	|	(
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест.Коэффициент     КАК КоэффициентМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры           КАК Характеристика,
	|		РеализацияТоваровУслуг.СерияНоменклатуры                    КАК Серия,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена * &Курс / &Кратность            КАК Цена,
	|		СУММА(РеализацияТоваровУслуг.Количество)                    КАК Количество,
	|		СУММА(РеализацияТоваровУслуг.КоличествоМест)                КАК КоличествоМест,
	|		СУММА(РеализацияТоваровУслуг.Сумма    * &Курс / &Кратность) КАК Сумма,
	|		СУММА(РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	|		МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки)                 КАК НомерСтроки,
	|		0                                                           КАК Метка
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры,
	|		РеализацияТоваровУслуг.СерияНоменклатуры,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена
	|
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номенклатура                  КАК Номенклатура,
	|	РеализацияТоваровУслуг.Содержание                    КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Номенклатура." + ТоварКод + " КАК ТоварКод,
	|	РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	NULL                                                 КАК ВидУпаковки,
	|	NULL                                                 КАК КоличествоВОдномМесте,
	|	0                                                    КАК Вес,
	|	NULL                                                 КАК Характеристика,
	|	NULL                                                 КАК Серия,
	|	РеализацияТоваровУслуг.СтавкаНДС                     КАК СтавкаНДС,
	|	РеализацияТоваровУслуг.Цена * &Курс / &Кратность     КАК Цена,
	|	РеализацияТоваровУслуг.Количество                    КАК Количество,
	|	NULL                                                 КАК КоличествоМест,
	|	РеализацияТоваровУслуг.Сумма    * &Курс / &Кратность КАК Сумма,
	|	РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	РеализацияТоваровУслуг.НомерСтроки                   КАК НомерСтроки,
	|	1                                                    КАК Метка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номенклатура                    КАК Номенклатура,
	|	ВЫРАЗИТЬ(РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Номенклатура." + ТоварКод + "   КАК ТоварКод,
	|	РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Представление               КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков                             КАК ЕдиницаИзмерения,
	|	NULL                                                  КАК ВидУпаковки,
	|	NULL                                                  КАК КоличествоВОдномМесте,
	|	РеализацияТоваровУслуг.Количество * РеализацияТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Вес КАК Вес,
	|	NULL                                                  КАК Характеристика,
	|	NULL                                                  КАК Серия,
	|	""Без НДС""                                           КАК СтавкаНДС,
	|	РеализацияТоваровУслуг.Цена * &Курс / &Кратность      КАК Цена,
	|	РеализацияТоваровУслуг.Количество                     КАК Количество,
	|	NULL                                                  КАК КоличествоМест,
	|	РеализацияТоваровУслуг.Сумма * &Курс / &Кратность     КАК Сумма,
	|	0                                                     КАК СуммаНДС,
	|	РеализацияТоваровУслуг.НомерСтроки                    КАК НомерСтроки,
	|	2                                                     КАК Метка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВозвратнаяТара КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Счет";
		Макет = ПолучитьМакет("СчетЗаказ");
	// Выводим общие реквизиты шапки
	ЗаголовокСчета =  Макет.ПолучитьОбласть("ЗаголовокСчета");
	Заголовок =  Макет.ПолучитьОбласть("Заголовок");
	Поставщик =  Макет.ПолучитьОбласть("Поставщик");
	Покупатель =  Макет.ПолучитьОбласть("Покупатель");

	
	ПредставлениеПолучателя      = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	Покупатель.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя.ПолноеНаименование+", ИНН "+ПредставлениеПолучателя.ИНН+","+ПредставлениеПолучателя.ЮридическийАдрес;
	Если Результат.Количество() > 0 Тогда 
		Если ЗначениеЗаполнено(Результат[0].ЛС) тогда
		
		ЗаголовокСчета.Параметры.ПредставлениеПоставщика = "УФК по Ярославской Области (ООО ""Формула Авто Плюс"" , л/с " + Результат[0].ЛС + ")";	
   		Если СсылкаНаОбъект.Дата < '2018.01.12' Тогда
			Поставщик.Параметры.ПредставлениеПоставщика = "УФК по Ярославской Области (ООО ""Формула Авто Плюс"" , л/с " + Результат[0].ЛС + "), ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9, офис 415";
		иначе
			Поставщик.Параметры.ПредставлениеПоставщика = "УФК по Ярославской Области (ООО ""Формула Авто Плюс"" , л/с " + Результат[0].ЛС + "), ИНН 7602088206, 150044, Ярославская обл, Ярославль г, Базовая ул, дом №3, офис 233";
		КонецЕсли;
		ЗаголовокСчета.Параметры.БанкПолучателяПредставление = "Отделение по Ярославской области Главного управления Центрального банка Российской Федерации по Центральному региону";
		ЗаголовокСчета.Параметры.БикБанкаПолучателя  = "047888001";
		ЗаголовокСчета.Параметры.СчетПолучателяПредставление = "40501810878881000001";
        Иначе
		
		Если СсылкаНаОбъект.Дата < '2018.01.12' Тогда
			Поставщик.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9, офис 415";
		Иначе
			Поставщик.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150044, Ярославская обл, Ярославль г, Базовая ул, дом №3, офис 233";
		КонецЕсли;
	//	Областьмакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9,  р/с 40702810277030004620, в банке СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ, БИК 047888670, к/с 30101810500000000670";
		//ЗаголовокСчета.Параметры.Основание =СсылкаНаОбъект.ДоговорКонтрагента.Комментарий;
		ЗаголовокСчета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс""";	
		ЗаголовокСчета.Параметры.БанкПолучателяПредставление = "СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ";
		ЗаголовокСчета.Параметры.БикБанкаПолучателя  = "047888670";
		ЗаголовокСчета.Параметры.СчетБанкаПолучателяПредставление = "30101810500000000670";
		ЗаголовокСчета.Параметры.СчетПолучателяПредставление = "40702810277030004620";

	КонецЕсли;	

	Иначе
		Если СсылкаНаОбъект.Дата < '2018.01.12' Тогда
			Поставщик.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9, офис 415";
		Иначе
			Поставщик.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150044, Ярославская обл, Ярославль г, Базовая ул, дом №3, офис 233";
		КонецЕсли;

	//	Областьмакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9,  р/с 40702810277030004620, в банке СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ, БИК 047888670, к/с 30101810500000000670";
		//ЗаголовокСчета.Параметры.Основание =СсылкаНаОбъект.ДоговорКонтрагента.Комментарий;
		ЗаголовокСчета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс""";	
		ЗаголовокСчета.Параметры.БанкПолучателяПредставление = "Калужское отделение № 8608 ПАО Сбербанк";
		ЗаголовокСчета.Параметры.БикБанкаПолучателя  = "042908612";
		ЗаголовокСчета.Параметры.СчетБанкаПолучателяПредставление = "30101810100000000612";
		ЗаголовокСчета.Параметры.СчетПолучателяПредставление = "40702810277030004620";

	КонецЕсли;
	
		ЗаголовокСчета.Параметры.ИНН = "7602088206";
		Если СсылкаНаОбъект.Дата < '2018.01.12' Тогда
            ЗаголовокСчета.Параметры.КПП = "760601001";
		Иначе
			ЗаголовокСчета.Параметры.КПП = "760201001";
		КонецЕсли;
		
		Если СсылкаНаОбъект.НомерФормулаАвто = 0 Тогда
			НомерДокумента = ЭтотОбъект.ПолучитьФорму("ВводНомераФормулаАвтоПлюс").ОткрытьМодально();
		Иначе
			НомерДокумента = СсылкаНаОбъект.НомерФормулаАвто;
			сообщить("Отгрузка по организации Формула Авто Плюс, номер документа берется из реквизита документа ""Номер Формула Авто Плюс"" в закладке ""Дополнительно""");
		КонецЕсли;
	Если Результат.Количество() > 0 Тогда
		Заголовок.Параметры.ТекстЗаголовка  =  "Счет на оплату № " + Строка(Результат[0].Контракт)+"/" + НомерДокумента
	                          + " от " + Формат(СсылкаНаОбъект.Дата, "ДФ='дд ММММ гггг'");	
	Иначе

		Заголовок.Параметры.ТекстЗаголовка  =  "Счет на оплату № " + НомерДокумента
	                          + " от " + Формат(СсылкаНаОбъект.Дата, "ДФ='дд ММММ гггг'");
	КонецЕсли;						  
;
//	КонецЕсли;
	
	ТабДокумент.Вывести(ЗаголовокСчета);
	ТабДокумент.Вывести(Заголовок);
	ТабДокумент.Вывести(Поставщик);
	ТабДокумент.Вывести(Покупатель);
	
	//СтрокНаСтранице = 55;
	//СтрокШапки      = 17;
	//СтрокПодвала    = 9;
	//НомерСтраницы   = 1;
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();
	
	//Если КоличествоСтрок <= 2 Тогда
	//	ПереноситьПоследнююСтроку = 0;
	//Иначе
	//	ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
	//	ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
	//	ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	//КонецЕсли;
	
	// инициализация итогов по документу
	ВсегоНДС         = 0;
	Всего            = 0;
	Ном = 0;
	
	массивСлов=Новый Массив();
	СтрокаДляДисковБезЛоготипов="";
	
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		Если ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Ном           = Ном + 1;
		//ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		//
		//Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		//	или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
		//	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//	ТабДокумент.Вывести(ЗаголовокТаблицы);
		//КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		// Проверим вывод
		СтрокаСПодвалом = Новый Массив;
		Если Ном = 1 Тогда
			СтрокаСПодвалом.Добавить(ЗаголовокТаблицы); // если первая строка, то должен
		КонецЕсли;                                                   // помещаться заголовок
		
		СтрокаСПодвалом.Добавить(ОбластьМакета);
		
		Если НЕ ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда

			Если КоличествоСтрок > 1 Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
				
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;

		КонецЕсли;

		//ОбластьМакета.Параметры.Номер             = ЗапросТовары.Индекс(ВыборкаСтрок) + 1;
		//++Смирнов для Лагерной и Радуга Питер убираем LegeArtis
		//Если Шапка.Покупатель.Код="93136  " или  Шапка.Покупатель.Код="91777  " тогда
		//	ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(СтрЗаменить(ВыборкаСтрок.ТоварНаименование,"LegeArtis",""))
		//	+ ПредставлениеСерий(ВыборкаСтрок)
		//	+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
		//иначе
			ОбластьМакета.Параметры.Товар = СокрЛП(ВыборкаСтрок.ТоварНаименование)
			+ ПредставлениеСерий(ВыборкаСтрок)
			+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
		//КонецЕсли;
		
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = (ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС));
		СуммаНДС    = ВыборкаСтрок.СуммаНДС;
		
		ОбластьМакета.Параметры.Сумма   = СуммаСНДС;
		ОбластьМакета.Параметры.Количество   = Количество;
		//ОбластьМакета.Параметры.СуммаБезСкидки = СуммаСНДС;
		ОбластьМакета.Параметры.Цена        = СуммаСНДС / ?(Количество = 0, 1, Количество);
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ВсегоНДС         = ВсегоНДС         + СуммаНДС;
		Всего            = Всего            + СуммаСНДС;
		
		массивСлов.Очистить();
		ПолучитьМассивСлов(ВыборкаСтрок.Номенклатура.Наименование,массивСлов);
		Если массивСлов.Количество()>=3 и массивСлов[0]="YST" и  массивСлов[1]="Replika" Тогда
			// смотрим, чтобы в строке НЕ БЫЛО уже указано таких моделей
			Если Найти(СтрокаДляДисковБезЛоготипов,массивСлов[2])=0 Тогда
				Если СтрДлина(СтрокаДляДисковБезЛоготипов)=0 Тогда
					СтрокаДляДисковБезЛоготипов=массивСлов[2];
				Иначе
					СтрокаДляДисковБезЛоготипов=СтрокаДляДисковБезЛоготипов+", "+массивСлов[2];
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
		
	КонецЦикла;
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Всего = Всего;
	//ОбластьМакета.Параметры.ВсегоБезСкидок  = Всего;
	ТабДокумент.Вывести(ОбластьМакета);

	
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
	Если ВсегоНДС>0 Тогда
	ОбластьМакета.Параметры.НДС = "в том числе НДС";
	ОбластьМакета.Параметры.ВсегоНДС  = ВсегоНДС;
    иначе
	ОбластьМакета.Параметры.НДС = "без НДС";
	конецЕсли;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	//ОбластьМакета.Параметры.Основание = ССылкаНаОбъект.ДоговорКонтрагента.Комментарий;
	ОбластьМакета.Параметры.Основание = ПолучитьОписаниеДоговораФАП(СсылкаНаОбъект.ДоговорКонтрагента);
	ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + ЗапросТовары.Количество()
	+ ", на сумму " + ФорматСумм(Всего, Шапка.ВалютаДокумента);
;
	мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить();
	ОбластьМакета.Параметры.СуммаПрописью  = СформироватьСуммуПрописью(Всего, мВалютаРегламентированногоУчета);
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");
	ОбластьМакета.Параметры.ФИОРуководителя = "Курапова Е.А.";  
//		ОбластьМакета.Параметры.ФИОБухгалтера = "Курапова Е.А.";
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	ТабДокумент.ОтображатьСетку = Ложь;
	Возврат ТабДокумент;
	
КонецФункции // ПечатьПоРеализации()
// Проверяет, умещаются ли переданные табличные документы на страницу при печати.
//
// Параметры
//  ТабДокумент       – Табличный документ
//  ВыводимыеОбласти  – Массив из проверяемых таблиц или табличный документ
//  РезультатПриОшибке - Какой возвращать результат при возникновении ошибки
//
// Возвращаемое значение:
//   Булево   – умещаются или нет переданные документы
//
Функция ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти, РезультатПриОшибке = Истина) Экспорт

	Попытка
		Возврат ТабДокумент.ПроверитьВывод(ВыводимыеОбласти);
	Исключение
		Возврат РезультатПриОшибке;
	КонецПопытки;

КонецФункции // ПроверитьВыводТабличногоДокумента()

// Заказ покупателя захвачен в хранилище, поэтому делаем во внешней обработке
Функция ПечатьПоЗаказуПокупателя()
	
    //14.02.17 Смирнов, если договор заканчивается, то предупреждаем об этом
	#Если Клиент тогда
		Если НачалоДня(ТекущаяДата())+14*24*60*60 >= СсылкаНаОбъект.ДоговорКонтрагента.ДатаОкончанияДействия и ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента.ДатаОкончанияДействия) тогда
			Предупреждение("Срок действия договора заканчивается "+Формат(СсылкаНаОбъект.ДоговорКонтрагента.ДатаОкончанияДействия,"ДФ=dd.MM.yyyy"));
		КонецЕсли;
	#КонецЕсли
	//
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Значение,
		|	ЗначенияСвойствОбъектов.Объект
		|ПОМЕСТИТЬ ГосКонтракт
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Объект
		|	И ЗначенияСвойствОбъектов.Свойство.Код = ""90254""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Значение,
		|	ЗначенияСвойствОбъектов.Объект
		|ПОМЕСТИТЬ ЛС
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Объект
		|	И ЗначенияСвойствОбъектов.Свойство.Код = ""90253""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка,
		|	ГосКонтракт.Значение КАК Контракт,
		|	ЛС.Значение КАК ЛС
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГосКонтракт КАК ГосКонтракт
		|		ПО ДоговорыКонтрагентов.Ссылка = ГосКонтракт.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЛС КАК ЛС
		|		ПО ДоговорыКонтрагентов.Ссылка = ЛС.Объект
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Объект
		|	И ГосКонтракт.Значение <> """"";

	Запрос.УстановитьПараметр("Объект", СсылкаНаОбъект.ДоговорКонтрагента);

	Результат = Запрос.Выполнить().Выгрузить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст ="ВЫБРАТЬ
	              |	ЗаказПокупателя.Номер,
	              |	ЗаказПокупателя.Дата,
	              |	ЗаказПокупателя.ДоговорКонтрагента,
	              |	ЗаказПокупателя.Организация,
	              |	ЗаказПокупателя.Контрагент КАК Получатель,
	              |	ЗаказПокупателя.Организация КАК Руководители,
	              |	ЗаказПокупателя.Организация КАК Поставщик,
	              |	ЗаказПокупателя.СуммаДокумента,
	              |	ЗаказПокупателя.ВалютаДокумента,
	              |	ЗаказПокупателя.УчитыватьНДС,
	              |	ЗаказПокупателя.СуммаВключаетНДС,
	              |	ЗаказПокупателя.Грузоотправитель,
	              |	ЗаказПокупателя.Подразделение
	              |ИЗ
	              |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	              |ГДЕ
	              |	ЗаказПокупателя.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	               |	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	               |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	               |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	               |	ВложенныйЗапрос.ПроцентСкидкиНаценки + ВложенныйЗапрос.ПроцентАвтоматическихСкидок КАК Скидка,
	               |	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
	               |	ВложенныйЗапрос.Цена КАК Цена,
	               |	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	               |	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК Характеристика,
	               |	NULL КАК Серия,
	               |	ВЫБОР
	               |		КОГДА (НЕ ВложенныйЗапрос.Номенклатура.Услуга)
	               |			ТОГДА 0
	               |		КОГДА ВложенныйЗапрос.Номенклатура.Услуга
	               |			ТОГДА 1
	               |	КОНЕЦ КАК УСЛУГА,
	               |	МИНИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗаказПокупателя.Номенклатура КАК Номенклатура,
	               |		ЗаказПокупателя.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |		ЗаказПокупателя.Цена КАК Цена,
	               |		ЗаказПокупателя.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	               |		ЗаказПокупателя.ПроцентАвтоматическихСкидок КАК ПроцентАвтоматическихСкидок,
	               |		ЗаказПокупателя.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |		ЗаказПокупателя.СуммаНДС КАК СуммаНДС,
	               |		ЗаказПокупателя.Сумма КАК Сумма,
	               |		ЗаказПокупателя.Количество КАК Количество,
	               |		ЗаказПокупателя.НомерСтроки КАК НомерСтроки
	               |	ИЗ
	               |		Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателя
	               |	ГДЕ
	               |		ЗаказПокупателя.Ссылка = &ТекущийДокумент
	               |//СтатусНеОтменен	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		КорректировкаЗаказаПокупателя.Номенклатура,
	               |		КорректировкаЗаказаПокупателя.ЕдиницаИзмерения,
	               |		КорректировкаЗаказаПокупателя.Цена,
	               |		КорректировкаЗаказаПокупателя.ПроцентСкидкиНаценки,
	               |		КорректировкаЗаказаПокупателя.ПроцентАвтоматическихСкидок,
	               |		КорректировкаЗаказаПокупателя.ХарактеристикаНоменклатуры,
	               |		КорректировкаЗаказаПокупателя.СуммаНДС,
	               |		КорректировкаЗаказаПокупателя.Сумма,
	               |		КорректировкаЗаказаПокупателя.Количество,
	               |		1000 + КорректировкаЗаказаПокупателя.НомерСтроки
	               |	ИЗ
	               |		Документ.КорректировкаЗаказаПокупателя.Товары КАК КорректировкаЗаказаПокупателя
	               |	ГДЕ
	               |		КорректировкаЗаказаПокупателя.Ссылка.ЗаказПокупателя = &ТекущийДокумент
	               |		И КорректировкаЗаказаПокупателя.Ссылка.Проведен = ИСТИНА
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗаказПокупателя.Номенклатура,
	               |		ЗаказПокупателя.Номенклатура.ЕдиницаХраненияОстатков,
	               |		ЗаказПокупателя.Цена,
	               |		ЗаказПокупателя.ПроцентСкидкиНаценки,
	               |		0,
	               |		NULL,
	               |		ЗаказПокупателя.СуммаНДС,
	               |		ЗаказПокупателя.Сумма,
	               |		ЗаказПокупателя.Количество,
	               |		ЗаказПокупателя.НомерСтроки
	               |	ИЗ
	               |		Документ.ЗаказПокупателя.Услуги КАК ЗаказПокупателя
	               |	ГДЕ
	               |		ЗаказПокупателя.Ссылка = &ТекущийДокумент
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		КорректировкаЗаказаПокупателя.Номенклатура,
	               |		КорректировкаЗаказаПокупателя.Номенклатура.ЕдиницаХраненияОстатков,
	               |		КорректировкаЗаказаПокупателя.Цена,
	               |		КорректировкаЗаказаПокупателя.ПроцентСкидкиНаценки,
	               |		0,
	               |		NULL,
	               |		КорректировкаЗаказаПокупателя.СуммаНДС,
	               |		КорректировкаЗаказаПокупателя.Сумма,
	               |		КорректировкаЗаказаПокупателя.Количество,
	               |		1000 + КорректировкаЗаказаПокупателя.НомерСтроки
	               |	ИЗ
	               |		Документ.КорректировкаЗаказаПокупателя.Услуги КАК КорректировкаЗаказаПокупателя
	               |	ГДЕ
	               |		КорректировкаЗаказаПокупателя.Ссылка.ЗаказПокупателя = &ТекущийДокумент
	               |		И КорректировкаЗаказаПокупателя.Ссылка.Проведен = ИСТИНА) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ВложенныйЗапрос.ЕдиницаИзмерения,
	               |	ВложенныйЗапрос.ПроцентСкидкиНаценки,
	               |	ВложенныйЗапрос.ПроцентАвтоматическихСкидок,
	               |	ВложенныйЗапрос.ХарактеристикаНоменклатуры,
	               |	ВложенныйЗапрос.Цена,
	               |	ВложенныйЗапрос.Номенклатура.Артикул,
	               |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	               |	ВЫБОР
	               |		КОГДА (НЕ ВложенныйЗапрос.Номенклатура.Услуга)
	               |			ТОГДА 0
	               |		КОГДА ВложенныйЗапрос.Номенклатура.Услуга
	               |			ТОГДА 1
	               |	КОНЕЦ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки,
	               |	УСЛУГА,
	               |	Номенклатура
	               |АВТОУПОРЯДОЧИВАНИЕ";
	//+++ 30.06.2014			  
	Если Константы.ИспользоватьОстаткиСтороннихПоставщиков.Получить()
		и НЕ СсылкаНаОбъект.Поставщик.пустая() Тогда // 13.08.2015 только Если есть поставщик!
	Запрос.Текст = стрЗаменить(Запрос.Текст, "//СтатусНеОтменен", " 
	| И  ЗаказПокупателя.Статус <> Значение(перечисление.СтатусыСтрокЗаказа.Отменен)");
	КонецЕсли;
				   
	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	Макет = ПолучитьМакет("СчетЗаказПокупателя");

	// Выводим шапку накладной

	СведенияОПоставщике = СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата);
	Тип = "Счет";
	Если Тип = "Счет" или Тип = "СчетАртикул" Тогда
		ОбластьМакета       = Макет.ПолучитьОбласть("ЗаголовокСчета");
		//ОЛ 12.02.2015
		Если Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль или
			 Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") 
			 ИЛИ Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда
			 //Для формула авто и шинтрейд ярославль не должно быть упоминание о Яршинторг
			ОбластьМакета       = Макет.ПолучитьОбласть("ЗаголовокСчетаФАиШТЯ");
		КонецЕсли;	 
		//Конец ОЛ
		//ОбластьМакета.Параметры.Заполнить(Шапка);
		//ОбластьМакета.Параметры.ИНН = СведенияОПоставщике.ИНН;
		//ОбластьМакета.Параметры.КПП = СведенияОПоставщике.КПП;
	Если Результат.Количество() > 0 Тогда 
	 	Если ЗначениеЗаполнено(Результат[0].ЛС) тогда			
			ОбластьМакета.Параметры.ПредставлениеПоставщика = "УФК по Ярославской Области (ООО ""Формула Авто Плюс"" , л/с " + Результат[0].ЛС + ")";	
	   		ОбластьМакета.Параметры.БанкПолучателяПредставление = "Отделение по Ярославской области Главного управления Центрального банка Российской Федерации по Центральному региону";
			ОбластьМакета.Параметры.БикБанкаПолучателя  = "047888001";
			ОбластьМакета.Параметры.СчетПолучателяПредставление = "40501810878881000001";
		Иначе
			ОбластьМакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс""";		
			ОбластьМакета.Параметры.БанкПолучателяПредставление = "СЕВЕРНЫЙ БАНК СБЕРБАНКА РОССИИ";
			ОбластьМакета.Параметры.БикБанкаПолучателя  = "047888670";
			ОбластьМакета.Параметры.СчетБанкаПолучателяПредставление = "30101810500000000670";
			ОбластьМакета.Параметры.СчетПолучателяПредставление = "40702810277030004620";
		КонецЕсли;
	Иначе

		ОбластьМакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс""";		
		ОбластьМакета.Параметры.БанкПолучателяПредставление = "Калужское отделение № 8608 ПАО Сбербанк";
		ОбластьМакета.Параметры.БикБанкаПолучателя  = "042908612";
		ОбластьМакета.Параметры.СчетБанкаПолучателяПредставление = "30101810100000000612";
		ОбластьМакета.Параметры.СчетПолучателяПредставление = "40702810277030004620";
	КонецЕсли;
		ОбластьМакета.Параметры.ИНН = "7602088206";
		Если СсылкаНаОбъект.Дата < '2018.01.12' Тогда
        	ОбластьМакета.Параметры.КПП = "760601001";
		Иначе
			ОбластьМакета.Параметры.КПП = "760201001";
		КонецЕсли;
		////+++( 09.11.2012
		//Если Шапка.Подразделение = справочники.Подразделения.НайтиПоКоду("00106") 
		//	и Шапка.Дата >= '20121001' Тогда
		//	Если НЕ ЗначениеЗаполнено(Шапка.Грузоотправитель) Тогда
		//		Сообщить("Не заполнен грузоотправитель!");
		//		возврат неопределено;
		//	КонецЕсли;	
		//	СведенияОГрузоотправителе = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.Дата);  
		//	ОбластьМакета.Параметры.ИНН = СведенияОГрузоотправителе.ИНН;
		//	ОбластьМакета.Параметры.КПП = СведенияОГрузоотправителе.КПП;
		//	СтруктурнаяЕдиница  = Шапка.Грузоотправитель.ОсновнойБанковскийСчет;
		//КонецЕсли;	//+++)

		////+++( 18.06.2014
		//Если СтруктурнаяЕдиница=неопределено Тогда
		//	СтруктурнаяЕдиница = СсылкаНаОбъект.Организация.ОсновнойБанковскийСчет;
		//КонецЕсли;	
		////+++)
		//	
		//Если ТипЗнч(СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		//	Банк       = СтруктурнаяЕдиница.Банк;
		//	БИК        = Банк.Код;
		//	КоррСчет   = Банк.КоррСчет;
		//	НомерСчета = СтруктурнаяЕдиница.НомерСчета;

		//	ОбластьМакета.Параметры.БИКБанкаПолучателя               = БИК;
		//	ОбластьМакета.Параметры.БанкПолучателя                   = Банк;
		//	ОбластьМакета.Параметры.БанкПолучателяПредставление      = СокрЛП(Банк) +" "+Банк.Город;
		//	ОбластьМакета.Параметры.СчетБанкаПолучателя              = КоррСчет;
		//	ОбластьМакета.Параметры.СчетБанкаПолучателяПредставление = КоррСчет;
		//	ОбластьМакета.Параметры.СчетПолучателяПредставление      = НомерСчета;
		//	ОбластьМакета.Параметры.СчетПолучателя                   = НомерСчета;
		//	ОбластьМакета.Параметры.ПредставлениеПоставщика          = СтруктурнаяЕдиница.ТекстКорреспондента;
		//КонецЕсли;
		//Если ЗначениеНеЗаполнено(ОбластьМакета.Параметры.ПредставлениеПоставщика) Тогда
		//	ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
		//КонецЕсли;
		
		//ОЛ 12.02.2015 - Для экспорта
		//ОрганизацияОтгрузки = Справочники.Контрагенты.ПустаяСсылка();
		//Если Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда
		//	ОрганизацияОтгрузки = Справочники.Контрагенты.НайтиПоКоду("П001125");
		//ИначеЕсли Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда 
		//	//Для формула авто тоже нужны свои реквизиты
		//	ОрганизацияОтгрузки = Справочники.Контрагенты.НайтиПоКоду("92705");
		//КонецЕсли;
		//Если Не ОрганизацияОтгрузки.Пустая() Тогда
		//	СведенияОПоставщике = СведенияОЮрФизЛице(ОрганизацияОтгрузки, Шапка.Дата);
		//	ОбластьМакета.Параметры.ИНН = СведенияОПоставщике.ИНН;
		//	ОбластьМакета.Параметры.КПП = СведенияОПоставщике.КПП;
		//	СтруктурнаяЕдиницаОтгрузки = ОрганизацияОтгрузки.ОсновнойБанковскийСчет;
		//	ОбластьМакета.Параметры.БИКБанкаПолучателя               = СтруктурнаяЕдиницаОтгрузки.Банк.Код;
		//	ОбластьМакета.Параметры.БанкПолучателя                   = СтруктурнаяЕдиницаОтгрузки.Банк;
		//	ОбластьМакета.Параметры.БанкПолучателяПредставление      = СокрЛП(СтруктурнаяЕдиницаОтгрузки.Банк) +" "+СтруктурнаяЕдиницаОтгрузки.Банк.Город;
		//	ОбластьМакета.Параметры.СчетБанкаПолучателя              = СтруктурнаяЕдиницаОтгрузки.Банк.КоррСчет;
		//	ОбластьМакета.Параметры.СчетБанкаПолучателяПредставление = СтруктурнаяЕдиницаОтгрузки.Банк.КоррСчет;
		//	ОбластьМакета.Параметры.СчетПолучателяПредставление      = СтруктурнаяЕдиницаОтгрузки.НомерСчета;
		//	ОбластьМакета.Параметры.СчетПолучателя                   = СтруктурнаяЕдиницаОтгрузки.НомерСчета;
		//	ОбластьМакета.Параметры.ПредставлениеПоставщика          = СведенияОПоставщике.ПолноеНаименование;
		//КонецЕсли;	
		//Конец ОЛ
		
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	//Если Тип = "Счет" или Тип = "СчетАртикул" Тогда
	//	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, "Счет на оплату");
	//Иначе
	//	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, "Заказ покупателя");
	//КонецЕсли;
	Если Результат.Количество() > 0 Тогда
		ОбластьМакета.Параметры.ТекстЗаголовка  =  "Счет на оплату № " + Строка(Результат[0].Контракт)+"/" + СсылкаНаОбъект.Номер
		+ " от " + Формат(СсылкаНаОбъект.Дата, "ДФ='дд ММММ гггг'");	
	Иначе

		ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, "Счет на оплату");
	КонецЕсли;				
	
	//ОбластьМакета.Параметры.ТекстЗаголовка  =  "Счет на оплату № " + НомерДокумента
	//						 + " от " + Формат(СсылкаНаОбъект.Дата, "ДФ='дд ММММ гггг'");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	//ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	////ОЛ 12.02.2015
	//Если Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда //Для экспорта
	//	Если НЕ ОрганизацияОтгрузки.Пустая() Тогда
	//		ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(ОрганизацияОтгрузки, Шапка.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	//	КонецЕсли;
	//ИначеЕсли Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда //Для Формула авто
	//	Если НЕ ОрганизацияОтгрузки.Пустая() Тогда
	//		ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(ОрганизацияОтгрузки, Шапка.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	//	КонецЕсли;
	//КонецЕсли;
	//Конец ОЛ
	Если Результат.Количество() > 0 Тогда
		Если ЗначениеЗаполнено(Результат[0].ЛС) тогда
			Если СсылкаНаОбъект.Дата < '2018.01.12' Тогда
			ОбластьМакета.Параметры.ПредставлениеПоставщика = "УФК по Ярославской Области (ООО ""Формула Авто Плюс"" , л/с " + Результат[0].ЛС + "), ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9,, офис 415";
		Иначе
			ОбластьМакета.Параметры.ПредставлениеПоставщика = "УФК по Ярославской Области (ООО ""Формула Авто Плюс"" , л/с " + Результат[0].ЛС + "), ИНН 7602088206, 150044, Ярославская обл, Ярославль г, Базовая ул, дом №3, офис 233";
		КонецЕсли;

			//ОбластьМакета.Параметры.ПредставлениеПоставщика = "УФК по Ярославской Области (ООО ""Формула Авто Плюс"" , л/с " + Результат[0].ЛС + "), ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9,, офис 415";
		Иначе	
			Если СсылкаНаОбъект.Дата < '2018.01.12' Тогда
			ОбластьМакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9, офис 415";
		Иначе
			ОбластьМакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150044, Ярославская обл, Ярославль г, Базовая ул, дом №3, офис 233";
		КонецЕсли;
//ОбластьМакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9,, офис 415";
		КонецЕсли;

	Иначе
		Если СсылкаНаОбъект.Дата < '2018.01.12' Тогда
			ОбластьМакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9, офис 415";
		Иначе
			ОбластьМакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150044, Ярославская обл, Ярославль г, Базовая ул, дом №3, офис 233";
		КонецЕсли;

		//ОбластьМакета.Параметры.ПредставлениеПоставщика = "ООО ""Формула Авто Плюс"", ИНН 7602088206, 150003, Ярославская обл, Ярославль г, Полушкина Роща ул, дом №9,, офис 415";
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);

//+++ 03.10.2012 - Грузоотправитель, Если он есть...
Если (Тип = "Счет" или Тип = "СчетАртикул") и ЗначениеЗаполнено(СсылкаНаОбъект.Грузоотправитель) Тогда 
	ОбластьМакета = Макет.ПолучитьОбласть("Грузоотправитель");
	ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Грузоотправитель, Шапка.Дата), "ИНН,КПП,ПолноеНаименование,ФактическийАдрес,Телефоны,");
	ТабДокумент.Вывести(ОбластьМакета);
КонецЕсли;

	СведенияОПолучателе = СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	//ОЛ 12.02.2015 - Для экспорта
	Если Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда //Для экспорта
		Если СокрЛП(Шапка.Получатель.НаименованиеИННэкспорт)<>"" Тогда
			ОбластьМакета.Параметры.ПредставлениеПолучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеПолучателя,"ИНН ",СокрЛП(Шапка.Получатель.НаименованиеИННэкспорт)+" ");
		КонецЕсли	
	КонецЕсли;
	//Конец ОЛ
	ТабДокумент.Вывести(ОбластьМакета);
	
	//Если ТипЗнч(Сделка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
	//ОбластьМакета = Макет.ПолучитьОбласть("СрокОплаты");
	//
	//// Сакулина. По задаче Серкова меняем Срок Оплаты на дату формирования Счета + 3 дня
	//Если Тип = "Счет" Тогда
	//	ОбластьМакета.Параметры.СрокОплаты = Формат(ТекущаяДата() + 3*24*60*60,"ДЛФ=DD");
	//Иначе
	//	ОбластьМакета.Параметры.СрокОплаты = Формат(СсылкаНаОбъект.ДатаОплаты,"ДЛФ=DD");
	//КонецЕсли;
	//
	//ТабДокумент.Вывести(ОбластьМакета);
   // КонецЕсли;

	//+++ 03.10.2012 - Грузополучатель, Если он есть...
Если (Тип = "Счет" или Тип = "СчетАртикул") и ЗначениеЗаполнено(СсылкаНаОбъект.Грузополучатель) Тогда 
	ОбластьМакета = Макет.ПолучитьОбласть("Грузополучатель");
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(СсылкаНаОбъект.Грузополучатель, Шапка.Дата), "ИНН,КПП,ПолноеНаименование,ФактическийАдрес,Телефоны,");
	//ОЛ 12.02.2015 - Для экспорта
	Если Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда //Для экспорта
		Если СокрЛП(СсылкаНаОбъект.Грузополучатель.НаименованиеИННэкспорт)<>"" Тогда
			ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя,"ИНН ",СокрЛП(СсылкаНаОбъект.Грузополучатель.НаименованиеИННэкспорт)+" ");
		КонецЕсли	
	КонецЕсли;
	//Конец ОЛ
	ТабДокумент.Вывести(ОбластьМакета);
КонецЕсли;

	ЕстьСкидки = Ложь;
	//Для каждого ВыборкаСтрокТовары Из ЗапросТовары Цикл 
	//	Если ЗначениеЗаполнено(ВыборкаСтрокТовары.Скидка) Тогда
	//		ЕстьСкидки = Истина;
	//		Прервать;
	//	КонецЕсли; 
	//КонецЦикла;

	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ВыводитьКоды = Истина;
		Колонка = "Артикул";
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ВыводитьКоды = Истина;
		Колонка = "Код";
	Иначе
		ВыводитьКоды = Ложь;
	КонецЕсли;
	Если Тип = "СчетАртикул" Тогда
		ВыводитьКоды = Истина;
		Колонка = "Артикул";
	КонецЕсли;
	
	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	//ОбластьСкидок = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
	ОбластьШК  = Макет.ПолучитьОбласть("ШапкаТаблицы|ШК"); //+++ 13.05.2015
	ОбластьКартинка  = Макет.ПолучитьОбласть("ШапкаТаблицы|Картинка");


	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);
	//Если ЕстьСкидки Тогда
	//	ТабДокумент.Присоединить(ОбластьСкидок);
	//КонецЕсли;
	ТабДокумент.Присоединить(ОбластьСуммы);
	Если тип = "СчетАртикул" Тогда
 		ТабДокумент.Присоединить(ОбластьШК);    //+++ 13.05.2015
	КонецЕсли;
	
	СКартинкой = Ложь;
	Если СКартинкой тогда
		ТабДокумент.Присоединить(ОбластьКартинка);
	КонецЕсли;

	
	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
											Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	//Если НЕ ЕстьСкидки Тогда
	//	ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
	//										Макет.Область("СуммаБезСкидки").ШиринаКолонки +
	//										Макет.Область("СуммаСкидки").ШиринаКолонки;
	//КонецЕсли;

	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
	//ОбластьСкидок = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");
    ОбластьШК  = Макет.ПолучитьОбласть("Строка|ШК");              //+++ 13.05.2015
	ОбластьКартинка  = Макет.ПолучитьОбласть("Строка|Картинка");
    Если сКартинкой тогда
		ФайлПустаяКартинка=ПолучитьФайлССервера("http://photo.yst.ru/nopic_tyre_s.png");
		//Сообщить(ФайлПустаяКартинка);
	КонецЕсли;

	
	Сумма    = 0;
	СуммаНДС = 0;
	ВсегоСкидок    = 0;
	ВсегоБезСкидок = 0;

	Для каждого ВыборкаСтрокТовары Из ЗапросТовары Цикл 

		Если ВыборкаСтрокТовары.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьНомера.Параметры.НомерСтроки = ЗапросТовары.Индекс(ВыборкаСтрокТовары) + 1;
		
		Если СКартинкой тогда
			ОбластьНомера.ТекущаяОбласть.ВысотаСтроки=100;
		КонецЕсли;

		ТабДокумент.Вывести(ОбластьНомера);

		Если ВыводитьКоды Тогда
			Если Колонка = "Артикул" Тогда
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
			Иначе
				//ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Номенклатура.Код;
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;

		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		
		//++Плотников Для Лагерной и Радуга Питер убираем LegeArtis
		Если СокрЛП(Шапка.Получатель.Код) = "91777" Тогда //***2016.04.06 Радуга Питер
			//При печати LegeArtis нужно выводить аналог TopDriver
			Если ВыборкаСтрокТовары.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду("3333") Тогда //REPLICA TD
				ОбластьДанных.Параметры.Товар = СокрЛП(ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное)
				//+ ПредставлениеСерий(ВыборкаСтрок)
				//+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "") + " (Top Driver)";
			ИначеЕсли  ВыборкаСтрокТовары.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду("65") Тогда //REPLICA
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ДискLA", ВыборкаСтрокТовары.Номенклатура);
				Запрос.Текст = "ВЫБРАТЬ
				               |	СоответствиеLegeArtisTopDriver.ДискTD
				               |ИЗ
				               |	РегистрСведений.СоответствиеLegeArtisTopDriver КАК СоответствиеLegeArtisTopDriver
				               |ГДЕ
				               |	СоответствиеLegeArtisTopDriver.ДискLA = &ДискLA";
				ВыборкаTD = Запрос.Выполнить().Выбрать();
				Если ВыборкаTD.Следующий() Тогда
					ОбластьДанных.Параметры.Товар = СокрЛП(СтрЗаменить(ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное,"LegeArtis",""))
					+ " (ан. Top Driver " + ВыборкаTD.ДискTD.Код + ")";
				Иначе  //типовой вариант
					ОбластьДанных.Параметры.Товар = СокрЛП(ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное);
				КонецЕсли;
			Иначе
				ОбластьДанных.Параметры.Товар = ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное + ПредставлениеСерий(ВыборкаСтрокТовары);
			КонецЕсли;
		Иначе
			ОбластьДанных.Параметры.Товар = ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное + ПредставлениеСерий(ВыборкаСтрокТовары);
		КонецЕсли;

		
		//ОбластьДанных.Параметры.Товар = ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное + ПредставлениеСерий(ВыборкаСтрокТовары);
		ТабДокумент.Присоединить(ОбластьДанных);

		//Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Скидка) Тогда
		//	Скидка = 0;
		//Иначе
		//	Скидка = ВыборкаСтрокТовары.Сумма / (100 - ВыборкаСтрокТовары.Скидка) * ВыборкаСтрокТовары.Скидка;
		//КонецЕсли;
		//Если ЕстьСкидки Тогда
		//	ОбластьСкидок.Параметры.Скидка         = Скидка;
		//	ОбластьСкидок.Параметры.СуммаБезСкидки = ВыборкаСтрокТовары.Сумма + Скидка;
		//	ТабДокумент.Присоединить(ОбластьСкидок);
		//КонецЕсли;

		ОбластьСуммы.Параметры.Заполнить(ВыборкаСтрокТовары);
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		
		//+++( 13.05.2015 - печать цифр штрихКода
		//Если тип = "СчетАртикул" Тогда
		//ШК = ПолучитьКодШтрихКода(ВыборкаСтрокТовары.Номенклатура.Код);
		//	Если ШК="0" Тогда
		//		Если ВыборкаСтрокТовары.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Аксессуары Тогда
		//		ШК = ""; // Если нет "настоящего" ШК, то ничего не надо!
		//		Иначе 
		//		ШК =":"+ПолучитьНовыйКодДляШтрихКодаЯШТ(ВыборкаСтрокТовары.Номенклатура.Код);
		//		КонецЕсли;
		//	КонецЕсли;
		//	ОбластьШК.Параметры.ШК = ШК;
		//ТабДокумент.Присоединить(ОбластьШК);
		//КонецЕсли;
		//+++)
		Если СКартинкой тогда
			ОбластьКартинка.Рисунки.Очистить();
			АдресКартинки = ПолучитьАдресКартинкиТовара(ВыборкаСтрокТовары.Номенклатура);
			Картинка = неопределено;
			Если АдресКартинки<>"" и АдресКартинки <> неопределено тогда
				ФайлКартинки = ПолучитьФайлССервера(АдресКартинки);
				Если ФайлКартинки<>"" тогда
					//Картинка = Новый Картинка(яПолучитьФайлССервера(АдресКартинки));
					
					Картинка = неопределено;
					Если АдресКартинки<>"" и АдресКартинки <> неопределено тогда
						Картинка = Новый Картинка(ПолучитьФайлССервера(АдресКартинки));
						Если  Картинка = Неопределено Тогда
							Картинка = Новый Картинка(ФайлПустаяКартинка);
						КонецЕсли;	
						ФотоТовара = ОбластьКартинка.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
						ФотоТовара.Верх = 0;
						ФотоТовара.Лево = 0;
						ФотоТовара.РазмерКартинки = РазмерКартинки.Пропорционально;
						ФотоТовара.Картинка = Картинка;
						ФотоТовара.Расположить(ОбластьКартинка.Область(1, 1, 1, 1));
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
			
			ТабДокумент.Присоединить(ОбластьКартинка);
			//ОбластьКартинка.ТекущаяОбласть.ВысотаСтроки = 100;//ВысотаКартинки;
		КонецЕсли;

		Сумма          = Сумма       + ВыборкаСтрокТовары.Сумма;
		СуммаНДС       = СуммаНДС    + ВыборкаСтрокТовары.СуммаНДС;
		//ВсегоСкидок    = ВсегоСкидок + Скидка;
		//ВсегоБезСкидок = Сумма       + ВсегоСкидок;

	КонецЦикла;

	// Вывести Итого
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
	//ОбластьСкидок = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Итого|Сумма");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);
	//Если ЕстьСкидки Тогда
	//	ОбластьСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
	//	ОбластьСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
	//	ТабДокумент.Присоединить(ОбластьСкидок);
	//КонецЕсли;
	ОбластьСуммы.Параметры.Всего = ФорматСумм(Сумма);
	ТабДокумент.Присоединить(ОбластьСуммы);

	// Вывести ИтогоНДС
	Если Шапка.УчитыватьНДС Тогда
		ОбластьНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
		//ОбластьСкидок = Макет.ПолучитьОбласть("ИтогоНДС|Скидка");
		ОбластьСуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");

		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ОбластьДанных.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
		//ОЛ 12.02.2015 - Для экспорта 0% всегда
		Если Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда
			Если ЗапросТовары.Итог("СуммаНДС")=0 Тогда 
				ОбластьДанных.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС 0%:", "Сумма НДС 0%:");
			КонецЕсли;
		КонецЕсли;	
		//Конец ОЛ
		ТабДокумент.Присоединить(ОбластьДанных);
		//Если ЕстьСкидки Тогда
		//	ТабДокумент.Присоединить(ОбластьСкидок);
		//КонецЕсли;
		ОбластьСуммы.Параметры.ВсегоНДС = ФорматСумм(ЗапросТовары.Итог("СуммаНДС"));
		ТабДокумент.Присоединить(ОбластьСуммы);
	КонецЕсли;

	// Вывести Сумму прописью
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
	ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ЗапросТовары.Количество()
	+ ", на сумму " + ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
	ОбластьМакета.Параметры.СуммаПрописью = СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
	ТабДокумент.Вывести(ОбластьМакета);

	// Сакулина
	//Если Тип ="Счет" Тогда
	//	Если ЗначениеЗаполнено(СсылкаНаОбъект.СпособОтгрузки) Тогда
	//		Если Найти(СсылкаНаОбъект.СпособОтгрузки.Наименование,"Поставщика за счет Поставщика") <> 0 Тогда
	//			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаСчетПоставщика");
	//			ТабДокумент.Вывести(ОбластьМакета);
	//		ИначеЕсли Найти(СсылкаНаОбъект.СпособОтгрузки.Наименование,"Поставщика за счет Покупателя") <> 0 Тогда
	//			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаСчетПокупателя");
	//			ТабДокумент.Вывести(ОбластьМакета);
	//		Иначе 
	//			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСамовывоз");
	//			ТабДокумент.Вывести(ОбластьМакета);
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	// Сакулина

				 
	// Вывести подписи
	//Если Тип = "Счет" или Тип = "СчетАртикул" Тогда
	//	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");
	//	
	//	РуководителиП = ОтветственныеЛицаПодразделения(СсылкаНаОбъект.Подразделение, Шапка.Дата);//+++ 03.10.2012
	//	
	//	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.Дата,);
	//	Руководитель = ?(РуководителиП.Руководитель=неопределено, Руководители.Руководитель,РуководителиП.Руководитель);
	//	Бухгалтер    = ?(РуководителиП.ГлавныйБухгалтер=неопределено, Руководители.ГлавныйБухгалтер, РуководителиП.ГлавныйБухгалтер);

	//	ОбластьМакета.Параметры.ФИОРуководителя  = "/" + Руководитель  + "/";
	//	ОбластьМакета.Параметры.ФИОБухгалтера    = "/" + Бухгалтер     + "/";
	//	ОбластьМакета.Параметры.ФИООтветственный = "/" + СсылкаНаОбъект.Ответственный + "/";

		//ОЛ 12.02.2015 - Для экспорта
		//Если Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда
		//	Если НЕ ОрганизацияОтгрузки.Пустая() Тогда
		//		ОбластьМакета.Параметры.ФИОРуководителя  = "/Захаров В.В./";
		//		ОбластьМакета.Параметры.ФИОБухгалтера    = "/Захаров В.В./";
		//		ОбластьМакета.Параметры.ФИООтветственный = "";
		//	КонецЕсли;
		//ИначеЕсли Шапка.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда //Для формула авто
		//	Если НЕ ОрганизацияОтгрузки.Пустая() Тогда
		//		ОбластьМакета.Параметры.ФИОРуководителя  = "/Зайцева Н.С./";
		//		ОбластьМакета.Параметры.ФИОБухгалтера    = "/Зайцева Н.С./";
		//		ОбластьМакета.Параметры.ФИООтветственный = "";
		//	КонецЕсли;
		//КонецЕсли;
		//Конец ОЛ
	//	
	//Иначе
	//	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаказа");
	//КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалГенДир");
	ОбластьМакета.Параметры.ФИОРуководителя  = "Курапова Е.А.";
	
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;
	
КонецФункции // ПечатьПоЗаказуПокупателя()