
функция НайтиПервоначальныеЗаказы()
	СписокЗак = новый СписокЗначений;
	
//----------теперь будет просто!----------------------------
//СписокЗак.ЗагрузитьЗначения( СсылкаНаОбъект.Заказы.ВыгрузитьКолонку("ЗаказПокупателя") );
//Возврат СписокЗак;

	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ЗаказПокупателя.Ссылка
	                |ИЗ
	                |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	                |ГДЕ
	                |	ЗаказПокупателя.ПометкаУдаления
	                |	И ЗаказПокупателя.Проверен
	                |	И ЗаказПокупателя.Комментарий ПОДОБНО &Комментарий
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	ЗаказПокупателя.НомерВходящегоДокумента,
	                |	ЗаказПокупателя.Дата
	                |АВТОУПОРЯДОЧИВАНИЕ";
	 
	 Запрос.УстановитьПараметр("Комментарий", "%данные перенесены >> "+СокрЛП(СсылкаНаОбъект.Номер)+"%" );
	 
	 Результат = Запрос.Выполнить();
	 табл = Результат.Выгрузить();	 
	 Если табл.Количество()>0 тогда
		СписокЗак.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Ссылка") );
	 КонецЕсли;
	
	возврат СписокЗак;
КонецФункции	

//ЗаказПокупателя
Функция ПечатьОбщегоЗаказаПокупателяПоВнутреннимНомерам(СписокЗак)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";
	
	Макет = ПолучитьМакет("Макет");
	
	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	Заказчик = СтрЗаменить(СписокЗак[0].Значение.Комментарий, "ПЕРЕМЕЩЕНИЕ ИЗ ЯРОСЛАВЛЯ", "");//+++ из первоначального!
	Заказчик = СтрЗаменить(Заказчик, "Перемещение из Ярославля", "");//+++ из первоначального!
	Заказчик = СтрЗаменить(Заказчик, "перемещение из Ярославля", "");//+++ из первоначального!
	Заказчик = СтрЗаменить(Заказчик, "перемещение из ярославля", "");//+++ из первоначального!
	Заказчик = СтрЗаменить(Заказчик,"# данные перенесены ", "");    //   '# данные перенесены >> СП018490 # Боровичи 1'
	
	Заказчик = СокрЛП(Заказчик);
	i=найти(Заказчик, "#"); L=стрДлина(Заказчик);
	пока лев(Заказчик,2)=">>" и i>0 цикл// на перемещение из Ярославля или данные перемесены...
		Заказчик = сред(Заказчик,i+1, L-i);
		Заказчик = СокрЛП(Заказчик);
		i=найти(Заказчик, "#"); L=стрДлина(Заказчик);
	КонецЦикла;
	
	Заказчик = СокрЛП( СтрЗаменить(Заказчик, "#", "") );  //номер точки!
	
	ОбластьМакета.Параметры.Заказчик = Заказчик;
	Если Найти(врег(СсылкаНаОбъект.Комментарий), "ПЕРЕМЕЩЕНИЕ ИЗ ЯРОСЛАВЛЯ") = 0 Тогда
		ОбластьМакета.Параметры.Поставщик = "Яршинторг (Шинтрейд)";
	Иначе
		ОбластьМакета.Параметры.Поставщик = "Яршинторг (Ярославль)";
	КонецЕсли;
	
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	
  СписокНомеров = "";
  СписокНомеровПортальный = "";
  Для i=0 по СписокЗак.Количество()-1 цикл
	 СписокНомеров = СписокНомеров +СокрЛП(СписокЗак[i].Значение.Номер)+"; ";
	 СписокНомеровПортальный = СписокНомеровПортальный+СокрЛП(СписокЗак[i].Значение.НомерВходящегоДокумента)+"; ";
  КонецЦикла;				  
	ОбластьМакета.Параметры.СписокНомеров = СписокНомеров;
	ОбластьМакета.Параметры.СписокНомеровПортальный = СписокНомеровПортальный;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокЗаказовПокупателей", СписокЗак);
	Запрос.УстановитьПараметр("ЭтотОбщийЗаказ", СсылкаНаОбъект);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателяТовары.НомерСтроки КАК НомерСтроки,
	               |	ЗаказПокупателяТовары.Номенклатура.Код КАК Код,
	               //|	ЗаказПокупателяТовары.Номенклатура.Артикул КАК Артикул,
	               |	ЗаказПокупателяТовары.Номенклатура.НаименованиеПолное КАК Наименование,
	               |	ЗаказПокупателяТовары.Номенклатура,
	               |	ЗаказПокупателяТовары.Цена,
	               |	ЗаказПокупателяТовары1.СсылкаНомерВходящегоДокумента КАК НомерПорт,
	               |	ЗаказПокупателяТовары1.Количество КАК Количество,
	               |	ЗаказПокупателяТовары.Количество КАК КоличествоОбщее
	               |ИЗ
	               |	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗаказПокТовары1.Ссылка.НомерВходящегоДокумента КАК СсылкаНомерВходящегоДокумента,
	               |			ЗаказПокТовары1.Номенклатура КАК Номенклатура,
	               |			ЗаказПокТовары1.Количество КАК Количество
	               |		ИЗ
	               |			Документ.ЗаказПокупателя.Товары КАК ЗаказПокТовары1
	               |		ГДЕ
	               |			ЗаказПокТовары1.Ссылка В(&СписокЗаказовПокупателей)) КАК ЗаказПокупателяТовары1
	               |		ПО ЗаказПокупателяТовары.Номенклатура = ЗаказПокупателяТовары1.Номенклатура
	               |ГДЕ
	               |	ЗаказПокупателяТовары.Ссылка = &ЭтотОбщийЗаказ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки,
	               |	НомерПорт
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Результат);
		//ОбластьСтрока.Параметры.НомерСтроки = Результат.НомерСтроки;
		//ОбластьСтрока.Параметры.Код = Результат.Код;
		//ОбластьСтрока.Параметры.Наименование = СокрЛП(Результат.Номенклатура.НаименованиеПолное);
		//ОбластьСтрока.Параметры.Количество = Результат.Количество;
		//ОбластьСтрока.Параметры.Цена = Результат.Цена;
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтого=Макет.ПолучитьОбласть("Подвал");
	ОбластьИтого.Параметры.КоличествоИтого = СсылкаНаОбъект.Товары.Итог("Количество");
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьИтого=Макет.ПолучитьОбласть("ОбластьДата");
	ОбластьИтого.Параметры.Дата=ТекущаяДата();
	ТабДокумент.Вывести(ОбластьИтого);
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.АвтоМасштаб = Истина;
	
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()

//ЗаказПокупателя 1
Функция ПечатьЗаказаПокупателя()
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";
	
	Макет = ПолучитьМакет("Макет1");
	
	// Выводим шапку накладной
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Номер = СсылкаНаОбъект.Номер;
	Заказчик = СтрЗаменить(СсылкаНаОбъект.Комментарий, "ПЕРЕМЕЩЕНИЕ ИЗ ЯРОСЛАВЛЯ", "");
	ОбластьМакета.Параметры.Заказчик = Заказчик;
	Если Найти(врег(СсылкаНаОбъект.Комментарий), "ПЕРЕМЕЩЕНИЕ ИЗ ЯРОСЛАВЛЯ") = 0 Тогда
		ОбластьМакета.Параметры.Поставщик = "Яршинторг (Шинтрейд)";
	Иначе
		ОбластьМакета.Параметры.Поставщик = "Яршинторг (Ярославль)";
	КонецЕсли;
	ОбластьМакета.Параметры.НомерПортальный = СсылкаНаОбъект.НомерВходящегоДокумента;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказПокупателя", СсылкаНаОбъект);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателяТовары.НомерСтроки,
	               |	ЗаказПокупателяТовары.Номенклатура.Код КАК Код,
	               |	ЗаказПокупателяТовары.Номенклатура,
	               |	ЗаказПокупателяТовары.Количество,
	               |	ЗаказПокупателяТовары.Цена
	               |ИЗ
	               |	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |ГДЕ
	               |	ЗаказПокупателяТовары.Ссылка = &ЗаказПокупателя";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьСтрока.Параметры.НомерСтроки = Результат.НомерСтроки;
		ОбластьСтрока.Параметры.Код = Результат.Код;
		ОбластьСтрока.Параметры.Наименование = Результат.Номенклатура.НаименованиеПолное;
		ОбластьСтрока.Параметры.Количество = Результат.Количество;
		ОбластьСтрока.Параметры.Цена = Результат.Цена;
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтого=Макет.ПолучитьОбласть("Подвал");
	ОбластьИтого.Параметры.КоличествоИтого=СсылкаНаОбъект.Товары.Итог("Количество");
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьИтого=Макет.ПолучитьОбласть("ОбластьДата");
	ОбластьИтого.Параметры.Дата=ТекущаяДата();
	ТабДокумент.Вывести(ОбластьИтого);
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ОтображатьСетку = Ложь;
	
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()


// общая процедура печати - для Групповой Печати 
функция Печать() Экспорт
	
	ТабДокумент = неопределено;
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) тогда
		#Если Клиент тогда
		Предупреждение("Не выбран документ!", 30);		
		#КонецЕсли
	КонецЕсли;
	ЭтотОбъект.ПолучитьФорму("Форма").ОткрытьМодально();
	
	возврат неопределено;
	
КонецФункции
//// общая процедура печати - для Печати Евротранс (NEW)
//
//функция Печать() Экспорт
//	
//	ТабДокумент = неопределено;
//	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) тогда
//		#Если Клиент тогда
//		Предупреждение("Не выбран документ!", 30);		
//		#КонецЕсли
//	КонецЕсли;
//	
//	
//	//=======================определяем - это 1 заказ или это Общий!===================
//	Если Найти(СсылкаНаОбъект.Комментарий, "объединенный заказ")>0 тогда
//		  СписокЗаказов = НайтиПервоначальныеЗаказы();
//		 если СписокЗаказов.Количество()>0 тогда 
//		  ТабДокумент = ПечатьОбщегоЗаказаПокупателяПоВнутреннимНомерам(СписокЗаказов);
//		Иначе
//		  ТабДокумент = ПечатьЗаказаПокупателя();
//		КонецЕсли;
//	Иначе
//		ТабДокумент = ПечатьЗаказаПокупателя();
//	КонецЕсли;
//	
//	возврат ТабДокумент;
//	
//КонецФункции

