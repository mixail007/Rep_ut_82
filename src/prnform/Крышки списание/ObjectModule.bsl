Перем мВалютаРегламентированногоУчета;

// Возвращает таблицу стоимости по товарам
//
Функция ПолучитьТаблицуСтоимостиТоваров()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры,
	|	СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|
	|ГДЕ
	|	ПартииТоваровНаСкладах.Регистратор = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры
	|";

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьСтоимостьПоПартиямТоваров()

// Возвращает стоимость товара
//
Функция ПолучитьСтоимостьТовара(Таблица, Номенклатура, Характеристика = Неопределено, Серия = Неопределено)

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",                   Номенклатура);
	Если НЕ ЗначениеНеЗаполнено(Характеристика) Тогда
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", Характеристика);
	КонецЕсли;
	Если НЕ ЗначениеНеЗаполнено(Серия) Тогда
		СтруктураПоиска.Вставить("СерияНоменклатуры",          Серия);
	КонецЕсли;

	Строки = Таблица.НайтиСтроки(СтруктураПоиска);

	Если Строки.Количество() > 0 Тогда
		Стоимость = Строки[0].Стоимость;
	Иначе
		Стоимость = 0;
	КонецЕсли;

	Возврат Стоимость;

КонецФункции // ПолучитьСтоимостьПоПартиямТоваров()

Функция Печать() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидСкладаНТТ",    Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписаниеТоваров.Номер,
	|	СписаниеТоваров.Дата,
	|	СписаниеТоваров.Организация,
	|	СписаниеТоваров.Склад,
	|	СписаниеТоваров.Склад.Представление КАК ПредставлениеСклада,
	|	СписаниеТоваров.Подразделение КАК Подразделение,
	|	СписаниеТоваров.Подразделение.Представление КАК ПредставлениеПодразделения,
	|	СписаниеТоваров.СуммаДокумента,
	|	Константы.ВалютаРегламентированногоУчета КАК ВалютаДокумента,
	|	СписаниеТоваров.Товары.(
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Код КАК Код,
	|		Номенклатура.Артикул КАК Артикул,
	|		КоличествоМест,
	|		Количество,
	|		Качество,
	|		ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмеренияМест.Представление КАК ЕдиницаИзмеренияМест,
	|		ВЫБОР
	|			КОГДА СписаниеТоваров.Склад.ВидСклада = &ВидСкладаНТТ
	|				ТОГДА СписаниеТоваров.Товары.Цена
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА СписаниеТоваров.Склад.ВидСклада = &ВидСкладаНТТ
	|				ТОГДА СписаниеТоваров.Товары.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Сумма,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		СерияНоменклатуры КАК Серия,
	|		Номенклатура.КодСБИС КАК КодСБИС
	|	),
	|	СписаниеТоваров.ВозвратнаяТара.(
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Код КАК Код,
	|		Номенклатура.Артикул КАК Артикул,
	|		Количество,
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаИзмерения,
	|		0 КАК Цена,
	|		0 КАК Сумма
	|	)
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров,
	|	Константы КАК Константы
	|ГДЕ
	|	СписаниеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	СписаниеТоваров.Товары.НомерСтроки,
	|	СписаниеТоваров.ВозвратнаяТара.НомерСтроки";

	ЭтоСкладНТТ = (СсылкаНаОбъект.Склад.ВидСклада = Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка);

	Если ЭтоСкладНТТ Тогда
		ИмяШапки         = "ШапкаТаблицы";
		ИмяСтроки        = "Строка";
	Иначе
		ТаблицаСтоимости = ПолучитьТаблицуСтоимостиТоваров();
		ИмяШапки         = "ШапкаТаблицыНТТ";
		ИмяСтроки        = "СтрокаНТТ";
	КонецЕсли;

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ВыборкаСтрокТара   = Шапка.ВозвратнаяТара.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеТоваров_Накладная";

	Макет = ПолучитьМакет("Накладная");

	// Выводим шапку накладной
	ОбластьМакета                          = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, "Списание товаров");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("РевизитыОрганизации");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,");
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
	ТабДокумент.Вывести(ОбластьМакета);

	//ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	//Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
	//	ВыводитьКоды = Истина;
	//	Колонка = "Артикул";
	//ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ВыводитьКоды = Истина;
		Колонка = "Код";
	//Иначе
	//	ВыводитьКоды = Ложь;
	//КонецЕсли;

	ФлагПечатиМест = (СсылкаНаОбъект.Товары.Итог("КоличествоМест") > 0);
	ОбластьНомера  = Макет.ПолучитьОбласть(ИмяШапки + "|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть(ИмяШапки + "|КолонкаКодов");
	ОбластьСБИС	   = Макет.ПолучитьОбласть(ИмяШапки + "|КодСБИС");
	ОбластьТовар   = Макет.ПолучитьОбласть(ИмяШапки + "|Товар");
	//ОбластьМест    = Макет.ПолучитьОбласть(ИмяШапки + "|Мест");
	ОбластьДанных  = Макет.ПолучитьОбласть(ИмяШапки + "|Данные");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьСБИС);
	ТабДокумент.Присоединить(ОбластьТовар);
	//ОбластьКолонкаТовар = Макет.Область("Товар");
	//Если ВыводитьКоды Тогда
	//	ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
	//										+ ?(ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
	//Иначе
	//	ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
	//										+ Макет.Область("КолонкаКодов").ШиринаКолонки
	//										+ ?(ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
	//КонецЕсли;
	//Если ФлагПечатиМест Тогда
		//ТабДокумент.Присоединить(ОбластьМест);
	//КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);

	ОбластьНомера = Макет.ПолучитьОбласть(ИмяСтроки + "|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть(ИмяСтроки + "|КолонкаКодов");
	ОбластьСБИС   = Макет.ПолучитьОбласть(ИмяСтроки + "|КодСБИС");
	ОбластьТовар  = Макет.ПолучитьОбласть(ИмяСтроки + "|Товар");
	//ОбластьМест   = Макет.ПолучитьОбласть(ИмяСтроки + "|Мест");
	ОбластьДанных = Макет.ПолучитьОбласть(ИмяСтроки + "|Данные");

	СуммаИтого = 0;
	Ном        = 0;

	// Товары
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;

		ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьНомера.Параметры.НомерСтроки = Ном;
		ТабДокумент.Вывести(ОбластьНомера);

		Если ВыводитьКоды Тогда
			Если Колонка = "Артикул" Тогда
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
			Иначе
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ОбластьСБИС.Параметры.Заполнить(ВыборкаСтрокТовары);
		ТабДокумент.Присоединить(ОбластьСБИС);

		ОбластьТовар.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьТовар.Параметры.Товар = ВыборкаСтрокТовары.Товар + ПредставлениеСерий(ВыборкаСтрокТовары);
		ТабДокумент.Присоединить(ОбластьТовар);

		//Если ФлагПечатиМест Тогда
		//	ОбластьМест.Параметры.Заполнить(ВыборкаСтрокТовары);
		//	ТабДокумент.Присоединить(ОбластьМест);
		//КонецЕсли;

		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		Если ЭтоСкладНТТ Тогда
			Сумма = ВыборкаСтрокТовары.Сумма;
		Иначе
			Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости,
			                                ВыборкаСтрокТовары.Номенклатура,
			                                ВыборкаСтрокТовары.Характеристика,
			                                ВыборкаСтрокТовары.Серия);

			//ОбластьДанных.Параметры.Сумма = Сумма;
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);

		СуммаИтого = СуммаИтого + Сумма;

	КонецЦикла;

	// Тара
	Пока ВыборкаСтрокТара.Следующий() Цикл

		Если ЗначениеНеЗаполнено(ВыборкаСтрокТара.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;

		ОбластьНомера.Параметры.Заполнить(ВыборкаСтрокТара);
		ОбластьНомера.Параметры.НомерСтроки = Ном;
		ТабДокумент.Вывести(ОбластьНомера);

		Если ВыводитьКоды Тогда
			Если Колонка = "Артикул" Тогда
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТара.Артикул;
			Иначе
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТара.Код;
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;

		ОбластьТовар.Параметры.Заполнить(ВыборкаСтрокТара);
		ОбластьТовар.Параметры.Товар = ВыборкаСтрокТара.Товар + " (возвратная тара)";
		ТабДокумент.Присоединить(ОбластьТовар);

		//Если ФлагПечатиМест Тогда
		//	ОбластьМест.Параметры.Заполнить(ВыборкаСтрокТара);
		//	ТабДокумент.Присоединить(ОбластьМест);
		//КонецЕсли;

		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТара);
		Если ЭтоСкладНТТ Тогда
			Сумма = ВыборкаСтрокТара.Сумма;
		Иначе
			Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости, ВыборкаСтрокТара.Номенклатура);

			ОбластьДанных.Параметры.Сумма = Сумма;
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);

		СуммаИтого = СуммаИтого + Сумма;

	КонецЦикла;

	// Вывести Итого
	//ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	//ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	//ОбластьТовар  = Макет.ПолучитьОбласть("Итого|Товар");
	////ОбластьМест   = Макет.ПолучитьОбласть("Итого|Мест");
	//ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");

	//ТабДокумент.Вывести(ОбластьНомера);
	//Если ВыводитьКоды Тогда
	//	ТабДокумент.Присоединить(ОбластьКодов);
	//КонецЕсли;
	//ТабДокумент.Присоединить(ОбластьТовар);
	////Если ФлагПечатиМест Тогда
	////	ТабДокумент.Присоединить(ОбластьМест);
	////КонецЕсли;
	//ОбластьДанных.Параметры.Всего = ФорматСумм(СуммаИтого);
	//ТабДокумент.Присоединить(ОбластьДанных);

	// Вывести Сумму прописью
	ОбластьМакета                          = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + Ном
	                                       + ", на сумму " + ФорматСумм(СуммаИтого, мВалютаРегламентированногоУчета);
	ОбластьМакета.Параметры.СуммаПрописью  = СформироватьСуммуПрописью(СуммаИтого, мВалютаРегламентированногоУчета);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести подписи
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // Печать()


Функция СформироватьЗаголовокДокументаЛок(ДокументОбъект, НазваниеДокумента = "")

	Возврат НазваниеДокумента + " № " + ПолучитьНомерНаПечатьЛок(ДокументОбъект)
	                          + " от " + Формат(ДокументОбъект.Дата, "ДФ='дд ММММ гггг'");

КонецФункции 
						
Функция ПолучитьНомерНаПечатьЛок(Документ) Экспорт

	Если Документ = Неопределено Тогда 
		Возврат 0;
	КонецЕсли;

	Номер = СокрЛП(Документ.Номер);

	Если ЗначениеНеЗаполнено(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация")) Тогда
			Предупреждение("Для текущего пользователя """ + СокрЛП(глТекущийПользователь) 
						   + """ не задана основная организация."
						   + Символы.ПС + "Печать чека невозможна."); 
			Возврат ложь;	
	КонецЕсли; 
		
	Префикс = "";	
	Организация = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
	Префикс = СокрЛП(Организация.Префикс);	

	// удаление префикса из номера документа
	Если Найти(Номер, Префикс)=1 Тогда 
		Номер = Сред(Номер, СтрДлина(Префикс)+1);
	КонецЕсли;

	// так же, может остаться "минус" впереди
	Если Лев(Номер, 1) = "-" Тогда
		Номер = Сред(Номер, 2);
	КонецЕсли;

	// удаление ведущих нулей
	Пока Лев(Номер, 1)="0" Цикл
		Номер=Сред(Номер, 2);
	КонецЦикла;

	Возврат Номер;

КонецФункции // ПолучитьНомерНаПечать()
						  

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();


