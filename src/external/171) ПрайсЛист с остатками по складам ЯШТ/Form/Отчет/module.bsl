Перем ВидОтчета;
Перем ТолькоДиски;
Перем СтрокаВид, путь1;

перем врФТП, ФТПyst,  ИмяФТП, парольФТП;
перем СписокФайловФТПдиски;

Процедура ДействияФормыОтчетСформировать(Кнопка)
	ТолькоДиски=Ложь;
	СтрокаВид="Шины";
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);
	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
КонецПроцедуры

Процедура ДействияФормыСформироватьТолькоДиски(Кнопка, ПоказыватьАртикул = ЛОЖЬ)
	
	СтрокаВид="Диски";
	ТолькоДиски=Истина;
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	//+++  18.05.2012
	началоВр =ТекущаяДата();
	Отчет(ТабДок, , ПоказыватьАртикул); //01.02.2017 Истина
	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
	парамЗапроса = "Диски"; 
	Если ВремяВыполнения>0 тогда
		//общий модуль:  яштПрочее.ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки(
		//ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 171, ВремяВыполнения, "Кнопка [Сформировать] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
		сообщить("-------------Полное время формирования прайса: "+строка(цел(ВремяВыполнения/60))+" мин. "+строка(ВремяВыполнения - цел(ВремяВыполнения/60)*60)+" сек.------------");
	КонецЕсли;	
	//+++)   18.05.2012
	
	//+++ 20.09.2013 - ограничение для Филиалов	
	Если не ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") тогда
		ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0, Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыСформироватьТолькоДискиБрак(Кнопка)
	
	НеВыводитьДискиПодЗаказ = Истина;
	
	СтрокаВид="Диски";
	ТолькоДиски=Истина;
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	Отчет(ТабДок, Истина);  //+++ выгрузку Брака +++
	
	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=ложь;	
	
КонецПроцедуры

//ГЛАВНАЯ ПРОЦЕДУРА
Процедура Отчет(ТабДок, ТолькоБрак = ЛОЖЬ, флАртикул=ЛОЖЬ) Экспорт
	
	Если ТолькоБрак тогда
		Макет=ПолучитьМакет("ОтчетДискиБрак");	
	Иначе	
		Если ВыводитьПрименяемость Тогда
			Макет=ПолучитьМакет("ОтчетДискиПрименяемость");		
		//ИначеЕсли флАртикул тогда
		//	Макет=ПолучитьМакет("ОтчетДискиАртикул");	
		иначе	
			Макет=ПолучитьМакет("ОтчетДиски");	
		КонецЕсли;
	КонецЕсли;
	
	//АКБ=Справочники.Номенклатура.НайтиПоКоду("0080021");
	Диски=Справочники.Номенклатура.НайтиПоКоду("0001752");
	Камеры=Справочники.Номенклатура.НайтиПоКоду("0001127");
	Кольца=Справочники.Номенклатура.НайтиПоКоду("4104444");
	ОбодныеЛенты=Справочники.Номенклатура.НайтиПоКоду("0060110");
	Шины=Справочники.Номенклатура.НайтиПоКоду("0001746");
	Шипы=Справочники.Номенклатура.НайтиПоКоду("0060001");
	Крышки=Справочники.Номенклатура.НайтиПоКоду("0080004");
	
	//02.06.2016 разделяем отчет чтобы в прайс Диски не попадали Комплектующие 
	Комплектующие=Справочники.Номенклатура.НайтиПоКоду("0000701");
	//конец 02.06.2016
	
	Если ВыводитьПрименяемость Тогда
		текст1 = "ВЫБРАТЬ
		|	ДискиСКрышками.Номенклатура.Код,
		|	ДискиСКрышками.Номенклатура,
		|	ДискиСКрышками.Комплектующая,
		|	ДискиСКрышками.КоличествоДисковОстаток,
		|	ДискиСКрышками.КОличествоДисковЗаказано,
		|	ДискиСКрышками.СвободныйОстатокДисков,
		|	ЕСТЬNULL(КрышкиНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоКрышекОстаток
		|ПОМЕСТИТЬ ВТ_ДетальнаяТаблица
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|		Крышки.Комплектующая КАК Комплектующая,
		|		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоДисковОстаток,
		|		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоДисковЗаказано,
		|		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстатокДисков
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,  {Номенклатура.*} 
		|				Номенклатура В ИЕРАРХИИ (&Диски)
		//02.06.2016 разделение номенклатуры Диски и Комплектующие
		|                и не Номенклатура В ИЕРАРХИИ (&Комплектующие)
		//
		|					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							РегистрСведений.КомплектующиеНоменклатуры.Номенклатура
		|						ИЗ
		|							РегистрСведений.КомплектующиеНоменклатуры)
		|					И ("+?(ТолькоБрак,"Склад.Наименование Подобно ""%Брак%"" И ","НЕ")+" Склад.ЗапретитьИспользование)
		|					И (НЕ Склад.Транзитный) ) КАК ТоварыНаСкладахОстатки
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
		|					,  {Номенклатура.*} 
		|					Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|						И Номенклатура В
		|							(ВЫБРАТЬ
		|								РегистрСведений.КомплектующиеНоменклатуры.Номенклатура
		|							ИЗ
		|								РегистрСведений.КомплектующиеНоменклатуры)
		|						И (НЕ ЗаказПокупателя.Транзит)
		|("+?(ТолькоБрак,"И ЗаказПокупателя.ПометкаУдаления","")+"
		|						И ЗаказПокупателя.Проверен ) КАК ЗаказыПокупателейОстатки
		|			ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
		|				КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая
		|			ИЗ
		|				РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
		|			ГДЕ
		|				КомплектующиеНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|				И КомплектующиеНоменклатуры.Комплектующая.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|				И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Крышки)) КАК Крышки
		|			ПО ТоварыНаСкладахОстатки.Номенклатура = Крышки.Номенклатура) КАК ДискиСКрышками
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				Номенклатура В ИЕРАРХИИ (&Крышки)
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							РегистрСведений.КомплектующиеНоменклатуры.Комплектующая
		|						ИЗ
		|							РегистрСведений.КомплектующиеНоменклатуры)
		|					И ("+?(ТолькоБрак,"Склад.Наименование Подобно ""%Брак%"" И ","НЕ")+" Склад.ЗапретитьИспользование)
		|					И (НЕ Склад.Транзитный)) КАК КрышкиНаСкладахОстатки
		|		ПО ДискиСКрышками.Комплектующая = КрышкиНаСкладахОстатки.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДетальнаяТаблица.Комплектующая.Код,
		|	ВТ_ДетальнаяТаблица.Комплектующая,
		|	СУММА(ВТ_ДетальнаяТаблица.КоличествоДисковОстаток) КАК КоличествоДисковОстаток,
		|	СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано) КАК КоличествоДисковЗаказано,
		|	СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) КАК КоличествоКрышекОстаток,
		|	ВЫБОР
		|		КОГДА СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано) >= СУММА(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков)
		|			ТОГДА 1
		|		КОГДА СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано) > 0
		|			ТОГДА (СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано)) / СУММА(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_КрышкиКоэффициенты
		|ИЗ
		|	ВТ_ДетальнаяТаблица КАК ВТ_ДетальнаяТаблица
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДетальнаяТаблица.Комплектующая,
		|	ВТ_ДетальнаяТаблица.Комплектующая.Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДетальнаяТаблица.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков * ВТ_КрышкиКоэффициенты.Коэффициент, 0) КАК СвободныйОстатокПоказать
		|ПОМЕСТИТЬ ВТ_СвободныеОстаткиПоСборнымДискам
		|ИЗ
		|	ВТ_ДетальнаяТаблица КАК ВТ_ДетальнаяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КрышкиКоэффициенты КАК ВТ_КрышкиКоэффициенты
		|		ПО ВТ_ДетальнаяТаблица.Комплектующая = ВТ_КрышкиКоэффициенты.Комплектующая
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Б.Номенклатура,
	//14.12.2018	
		|	Б.Номенклатура.Наименование как НоменклатураНаименование,
		|	Б.Номенклатура.Код как НоменклатураКод,
		|	Б.Номенклатура.Родитель КАК Родитель,
		|	Б.Номенклатура.Код КАК Код,
		|	Б.Типоразмер.Ширина КАК Ширина,
		|	Б.Типоразмер.Высота КАК Высота,
		|	Б.Типоразмер.Диаметр КАК Диаметр,
		|	Б.Типоразмер.КоличествоОтверстий КАК КоличествоОтверстий,
		|	Б.Типоразмер.PCD КАК PCD,
		|	Б.Типоразмер.Вылет КАК Вылет,
		|	Б.Типоразмер.ДиаметрСтупицы КАК ДиаметрСтупицы,
		|	Б.Номенклатура.Модель.Наименование КАК Модель,
		|	Б.Номенклатура.Артикул КАК Артикул,
		|	Б.Номенклатура.Производитель.Наименование КАК Производитель,
		|	Б.ОстатокДляКлиента,
		|	Б.КоличествоВПути,
		|	Б.КоличествоПриход2Недели,
		|	Б.КоличествоПриход2Месяца,
		|	Б.КоличествоВПроизводстве,
		|	Б.СвободныйОстатокДляКлиента,
		|	Б.КОличествоВРезерве,
		|	Б.Цвет КАК Цвет,
		|	Б.ЦенаБазовая КАК ЦенаБазовая,
		|	Б.Автомобили
		|ИЗ
		|	(ВЫБРАТЬ
		|		А.Номенклатура КАК Номенклатура,
		|		А.Номенклатура.Родитель КАК Родитель,
		|		А.Номенклатура.Код КАК Код,
		|		А.Номенклатура.Типоразмер КАК Типоразмер,
		|		А.Номенклатура.Производитель КАК Производитель,
		|		А.Остаток КАК Остаток,
		|		А.КоличествоВПути КАК КоличествоВПути,
		|		А.КоличествоПриход2Недели КАК КоличествоПриход2Недели,
		|		А.КоличествоПриход2Месяца КАК КоличествоПриход2Месяца,
		|		ВЫБОР
		|			КОГДА А.Остаток > 50
		|					И &РежимФормирования
		|				ТОГДА 51
		|			ИНАЧЕ А.Остаток
		|		КОНЕЦ КАК ОстатокДляКлиента,
		|		ВЫБОР
		|			КОГДА ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать ЕСТЬ NULL 
		|				ТОГДА ВЫБОР
		|						КОГДА А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
		|								И &РежимФормирования
		|							ТОГДА 51
		|						ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать > 50
		|							И &РежимФормирования
		|						ТОГДА 51
		|					ИНАЧЕ ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать
		|				КОНЕЦ
		|		КОНЕЦ КАК СвободныйОстатокДляКлиента,
		|		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
		|		ЕСТЬNULL(ЦеныБазовая.Цена, 0) КАК ЦенаБазовая,
		|		ЗначенияСвойствобъектов.Цвет КАК Цвет,
		|		А.КоличествоВПроизводстве КАК КоличествоВПроизводстве,
		|		ЕСТЬNULL(СоответствиеТипоразмеровАвтомобилям.Автомобили, """") КАК Автомобили
		|	ИЗ
		|		(ВЫБРАТЬ
		|			А.Номенклатура КАК Номенклатура,
		|			СУММА(А.Остаток) КАК Остаток,
		|			СУММА(А.КоличествоВПути) КАК КоличествоВПути,
		|			СУММА(А.КоличествоПриход2Недели) КАК КоличествоПриход2Недели,
		|			СУММА(А.КоличествоПриход2Месяца) КАК КоличествоПриход2Месяца,
		|			СУММА(А.КоличествоВПроизводстве) КАК КоличествоВПроизводстве
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|				ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
		|				0 КАК КоличествоВПути,
		|				0 КАК КоличествоПриход2Недели,
		|				0 КАК КоличествоПриход2Месяца,
		|				0 КАК КоличествоВПроизводстве
		|
		|			ИЗ
		|				РегистрНакопления.ТоварыНаСкладах.Остатки(
		|						,   {Номенклатура.*} 
		|						Номенклатура В ИЕРАРХИИ (&Диски)
		//|							И (НЕ Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски))
		//02.06.2016 
		|                            И (НЕ Номенклатура В ИЕРАРХИИ (&Комплектующие))
		//конец 02.06.2016
		|							И (НЕ Склад.ЗапретитьИспользование)
		|							И (НЕ Склад.Транзитный) ) КАК ТоварыНаСкладахОстатки
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				А.Номенклатура,
		|				0,
		|				СУММА(А.КоличествоОстаток),
		|				СУММА(А.КоличествоПриход2Недели),
		|				СУММА(А.КоличествоПриход2Месяца),
		|				0
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступленияВПорт,
		|					ВЫБОР
		|						КОГДА 
		//21.02.2018
		//|ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		|							 (  ( ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		|								и ЗаказыПоставщикамОстатки.ДоговорКонтрагента <> &ИстДогПоставки)
		|                              или 
		|								(ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14)
		|								и ЗаказыПоставщикамОстатки.ДоговорКонтрагента = &ИстДогПоставки)
        |                            )

		|							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
		|						ИНАЧЕ 0
		|					КОНЕЦ КАК КоличествоПриход2Недели,
		|					ВЫБОР
		|						КОГДА 
		//21.02.2018
		//|							ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		//|							и ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 45 - 5)
		|							(   ( ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		|								и ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 45 - 5)
		|								и ЗаказыПоставщикамОстатки.ДоговорКонтрагента <> &ИстДогПоставки)
		|                              или 
		|								( ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 )
		|								и ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 45 )
		|								и ЗаказыПоставщикамОстатки.ДоговорКонтрагента = &ИстДогПоставки)
        |                            )
		|							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
		|						ИНАЧЕ 0
		|					КОНЕЦ КАК КоличествоПриход2Месяца,
		|					ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
		|					ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		|					ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
		|				ИЗ
		|					РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|							,   {Номенклатура.*} 
		|							Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
									//21.02.2018
		|							И (ДоговорКонтрагента.ВалютаВзаиморасчетов.Код <> ""643""
									//11.10.2018
		|								ИЛИ ДоговорКонтрагента В (&СписДог)
		|								)
		
		|							И ДоговорКонтрагента.
		|							"+?(ТолькоБрак,"И ЗаказПоставщику.ПометкаУдаления","")+"
		|								И (ЗаказПоставщику.Транзит=ЛОЖЬ) ) КАК ЗаказыПоставщикамОстатки) КАК А
		|			
		|			СГРУППИРОВАТЬ ПО
		|				А.Номенклатура
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ОстаткиОТХ.Номенклатура,
		|				СУММА(ОстаткиОТХ.КоличествоОстаток),
		|				СУММА(0),
		|				СУММА(0),
		|				СУММА(0),
		|				СУММА(0)
		|			ИЗ
		|				(ВЫБРАТЬ
		|					отх.Номенклатура КАК Номенклатура,
		|					отх.КоличествоОстаток КАК КоличествоОстаток
		|				ИЗ
		|					РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
		|							,   {Номенклатура.*} 
		|							(НЕ Склад.Транзитный)
		//  |							"+?(ТолькоБрак,"И Склад.ПометкаУдаления","")+"
		|								И (НЕ Склад.ЗапретитьИспользование)
		|								И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|								И Контрагент В (&СписокПоставщиковОТХ) ) КАК отх
		|				ГДЕ
		|					отх.КоличествоОстаток > 0) КАК ОстаткиОТХ
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ОстаткиОТХ.Номенклатура) КАК А
		|		
		|		СГРУППИРОВАТЬ ПО
		|			А.Номенклатура) КАК А
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки( ,  {Номенклатура.*} 
		|					(НЕ ЗаказПокупателя.Транзит)
		|	"+?(ТолькоБрак,"И ЗаказПокупателя.ПометкаУдаления","")+"
		|						И ЗаказПокупателя.Проверен 
		//{(Номенклатура).*}
		|) КАК ЗаказыПокупателейОстатки
		|			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СвободныеОстаткиПоСборнымДискам КАК ВТ_СвободныеОстаткиПоСборнымДискам
		|			ПО А.Номенклатура = ВТ_СвободныеОстаткиПоСборнымДискам.Номенклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ЗначенияСвойствобъектов.Объект КАК Объект,
		|				ЗначенияСвойствобъектов.Значение КАК Цвет
		|			ИЗ
		|				РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствобъектов
		|			ГДЕ
		|				ЗначенияСвойствобъектов.Свойство = &СвойствоЦвет) КАК ЗначенияСвойствобъектов
		|			ПО А.Номенклатура = ЗначенияСвойствобъектов.Объект
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &ТипЦенБазовая {Номенклатура.*}) КАК ЦеныБазовая
		|			ПО А.Номенклатура = ЦеныБазовая.Номенклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТипоразмеровАвтомобилям КАК СоответствиеТипоразмеровАвтомобилям
		|			ПО А.Номенклатура.Типоразмер = СоответствиеТипоразмеровАвтомобилям.Типоразмер) КАК Б
		|ГДЕ
		|	(НЕ Б.Номенклатура В ИЕРАРХИИ (&Крышки))
		|	И (Б.ОстатокДляКлиента > 0  
		|	ИЛИ Б.КоличествоВПути > 0 
		
//+++ 14.08.2018	
		|"+?(исклБолее45,"", "ИЛИ Б.КоличествоВПроизводстве > 0")+"
		// как было до этого 
		|	  ) 
		
		//Плотников 26.05.17 запрет на отгрузку моделей временный-----------------------------------------
		//21.02.2018
		|"+?(ВыводитьДискиСтопЛист,"","
			|и НЕ Номенклатура В
			|			( ВЫБРАТЬ
			|	НоменклатураИмпорт.Номенклатура
			|ИЗ
			|	РегистрСведений.НоменклатураИмпорт КАК НоменклатураИмпорт)")+"
        //+++)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Родитель,
		|	Б.Номенклатура.Производитель.Наименование,
		|	Б.Номенклатура.Модель.Наименование,
		|	Б.Номенклатура.Типоразмер.Наименование,
		|	Б.Номенклатура.Наименование";	
КонецЕсли;
	Если НЕ ВыводитьПрименяемость тогда	
		текст1 =
		?(USD, "ВЫБРАТЬ
		|	Цены2.Номенклатура КАК Номенклатура,
		|	Цены2.МинимальнаяЦена КАК Цена
		|ПОМЕСТИТЬ ВТ_ЦеныUSD
		|ИЗ
		|	&Табл222 КАК Цены2
		|ГДЕ  {Номенклатура.*} Цены2.Номенклатура В ИЕРАРХИИ (&Диски)
		//|							И (НЕ Цены2.Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски))
		//02.06.2016
		| И (НЕ Цены2.Номенклатура В ИЕРАРХИИ (&Комплектующие))
		//02.06.2016
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|///////////////////////////////////////////////////////////////
		|", "")+
		"ВЫБРАТЬ
		|	Б.Номенклатура,
		//14.12.2018 .Наименование !!!
		|	Б.Номенклатура.Наименование как НоменклатураНаименование,
		//31.01.2019 - Задача № 62792
		|	Б.Номенклатура.Наименование+""(Арт.""+Б.Номенклатура.Артикул+"")"" как НоменклатураНаименованиеАрт,

		|	Б.Номенклатура.Родитель.Наименование КАК Родитель,
		|	Б.Номенклатура.Код КАК Код,
		|	Б.Типоразмер.Ширина КАК Ширина,
		|	Б.Типоразмер.Высота КАК Высота,
		|	Б.Типоразмер.Диаметр КАК Диаметр,
		|	Б.Типоразмер.КоличествоОтверстий КАК КоличествоОтверстий,
		|	Б.Типоразмер.PCD КАК PCD,
		|	Б.Типоразмер.Вылет КАК Вылет,
		|	Б.Типоразмер.ДиаметрСтупицы КАК ДиаметрСтупицы,
		|	Б.Номенклатура.Модель.Наименование КАК Модель,
		|	Б.Номенклатура.Артикул КАК Артикул,
		|	Б.Номенклатура.Производитель.Наименование КАК Производитель,
		//!!! 12.07.16  сразу в отчете  ">50"
		|	Б.Номенклатура.Код как НоменклатураКод,
		
		|"+?(ВидОтчета = 0,"
		|	выбор когда Б.ОстатокДляКлиента>50 тогда "">50""
		|	иначе ##ОстатокКлиента##
		|	Конец как ОстатокДляКлиента,
		|	выбор когда Б.КоличествоВПути>50 тогда "">50""
		|	иначе Б.КоличествоВПути Конец как КоличествоВПути,
		|	выбор когда Б.КоличествоПриход2Недели>50 тогда "">50""
		//14.06.2018  -> 20.06.2018
		|	иначе ##КоличествоПриход2Месяца## конец как КоличествоПриход2Недели,
		
		|	выбор когда Б.КоличествоПриход2Месяца>50 тогда "">50""
		//20.11.2017 
		|	иначе  Б.КоличествоПриход2Месяца конец как КоличествоПриход2Месяца,
		
		|	выбор когда Б.КоличествоВПроизводстве>50 тогда "">50""
		|	иначе Б.КоличествоВПроизводстве конец как КоличествоВПроизводстве,
		|	выбор когда Б.СвободныйОстатокДляКлиента>50 тогда "">50""
		|	иначе  ##СвободныйОстатокКлиента##
		|		  конец как СвободныйОстатокДляКлиента,
		|	выбор когда Б.КОличествоВРезерве>50 тогда "">50""
		|	иначе Б.КОличествоВРезерве конец как КОличествоВРезерве,", 
		//---------как было если ВидОтчета = 1-------------------------------------
		"
		|	Б.ОстатокДляКлиента,
		|	Б.КоличествоВПути,
		//+++ 14.06.2018
		|	##КоличествоПриход2Месяца## как КоличествоПриход2Недели,
		//20.11.2017 - 13.02.2018 !!!
 		|	Б.КоличествоПриход2Месяца как КоличествоПриход2Месяца,
		
		|	Б.КоличествоВПроизводстве,
		|	Б.СвободныйОстатокДляКлиента,
		|	Б.КОличествоВРезерве,")+"
		
		//01.03.2016
		|	Б.Номенклатура.ЕдиницаХраненияОстатков.Вес как Вес,
		|	Б.Номенклатура.ЕдиницаХраненияОстатков.Объем как Объем,
		    
		|	Б.Цвет КАК Цвет,
		|"+?(ТолькоБрак,"Б.Качество как Качество, Б.Дефект как Дефект","Б.ЦенаБазовая КАК ЦенаБазовая")+"
		|##ДополнительнаяСтрока1##
		|//ПодЗаказБ

		|ИЗ
		|	(ВЫБРАТЬ
		|		А.Номенклатура КАК Номенклатура,
		|		А.Номенклатура.Родитель КАК Родитель,
		|		А.Номенклатура.Код КАК Код,
		|		А.Номенклатура.Типоразмер КАК Типоразмер,
		|		А.Номенклатура.Производитель КАК Производитель,
		|		А.Остаток КАК Остаток,
		|		А.КоличествоВПути КАК КоличествоВПути,
		|		А.КоличествоПриход2Недели КАК КоличествоПриход2Недели,
		|		А.КоличествоПриход2Месяца КАК КоличествоПриход2Месяца,
		|		ВЫБОР
		|			КОГДА А.Остаток > 50
		|					И &РежимФормирования
		|				ТОГДА 51
		|			ИНАЧЕ А.Остаток
		|		КОНЕЦ КАК ОстатокДляКлиента,
		//-------------------------------------------------------------------------------------------
		|		ВЫБОР
		|				КОГДА (А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) > 50
		|						И &РежимФормирования
		|					ТОГДА 51
		|				ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
		|		КОНЕЦ
		|	КАК СвободныйОстатокДляКлиента,
		
		|		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
		|"+?(ТолькоБрак, "ЕСТЬNULL(А.Качество,"""") как Качество, ЕСТЬNULL(А.Дефект,"""") как Дефект", "ЕСТЬNULL(ЦеныБазовая.Цена, 0) КАК ЦенаБазовая")+",
		|		ЗначенияСвойствобъектов.Цвет КАК Цвет,
		|		А.КоличествоВПроизводстве КАК КоличествоВПроизводстве
		//=============Б============================================================================ 
		|##ДополнительнаяСтрока2##
		|//ПодЗаказА
		|
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Б.Номенклатура КАК Номенклатура,
		|"+?(ТолькоБрак, "Б.Качество как Качество,","")+"
		|"+?(ТолькоБрак, "Б.Дефект как Дефект,","")+"
		|			СУММА(Б.Остаток) КАК Остаток,
		|			СУММА(Б.КоличествоВПути) КАК КоличествоВПути,
		|			СУММА(Б.КоличествоПриход2Недели) КАК КоличествоПриход2Недели,
		|			СУММА(Б.КоличествоПриход2Месяца) КАК КоличествоПриход2Месяца,
		|			СУММА(Б.КоличествоВПроизводстве) КАК КоличествоВПроизводстве
		|##ДополнительнаяСтрока3##
		|		ИЗ
		|			(
		|			ВЫБРАТЬ
		|				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|				ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
		|"+?(ТолькоБрак, "ТоварыНаСкладахОстатки.Качество как Качество,","")+"
		|"+?(ТолькоБрак, "ТоварыНаСкладахОстатки.Номенклатура.ВидДефектаДляУценки как Дефект,","")+"
		|				0 КАК КоличествоВПути,
		|				0 КАК КоличествоПриход2Недели,
		|				0 КАК КоличествоПриход2Месяца,
		|				0 КАК КоличествоВПроизводстве
		|##ДополнительнаяСтрока4##
		|			ИЗ
		|				РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.*} Номенклатура В ИЕРАРХИИ (&Диски)
		//|							И (НЕ Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски))
		//02.06.2016
		|                              И (НЕ Номенклатура В ИЕРАРХИИ (&Комплектующие))
		//конец 02.06.2016
		|							И ("+?(ТолькоБрак,
		"Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски) И Склад.Наименование ПОДОБНО ""%Брак%"" И",
		"НЕ")+" Склад.ЗапретитьИспользование)
		|							И (НЕ Склад.Транзитный) ) КАК ТоварыНаСкладахОстатки
		|
		|			ГДЕ ТоварыНаСкладахОстатки.КоличествоОстаток>0
		//=============================в пути============================================================ 
		|"+?(ТолькоБрак,
		// 01.02.2017 --- для выключения по качеству... пока не надо!
		//"И ТоварыНаСкладахОстатки.Качество <> Значение(Справочник.Качество.Новый)" 
		""
		, "	ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				регТоварыВПути.Номенклатура,
		|				0,
		|				СУММА(регТоварыВПути.КоличествоОстаток),
		|				СУММА(регТоварыВПути.КоличествоПриход2Недели),
		|				СУММА(регТоварыВПути.КоличествоПриход2Месяца),
		|				0
		|##ДополнительнаяСтрока5##
		|			ИЗ
		|				(ВЫБРАТЬ
		|						ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступленияВПорт,
		|					ВЫБОР
	//21.02.2018 --------  для Иста - берется ДАТА ПОСТУПЛЕНИЯ БЕЗ 5 дней доставки из Порта  ---------------
	    |					КОГДА  (   (ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		|								и ЗаказыПоставщикамОстатки.ДоговорКонтрагента <> &ИстДогПоставки)
		|                              или 
		|								(ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14)
		|								и ЗаказыПоставщикамОстатки.ДоговорКонтрагента = &ИстДогПоставки)
        |                            )
		//-------------очень старые приходы - уже не придут! --------------------------
		|						И (ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления >= ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, -3)
		|							или ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления=&ПустаяДата)
		|							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
		|						ИНАЧЕ 0
		|					КОНЕЦ КАК КоличествоПриход2Недели,
		|					ВЫБОР
	//21.02.2018 --------  для Иста - берется ДАТА ПОСТУПЛЕНИЯ БЕЗ 5 дней доставки из Порта  ---------------
	//	|						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
	    |					КОГДА  (   (ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		|								и ЗаказыПоставщикамОстатки.ДоговорКонтрагента <> &ИстДогПоставки)
		|                              или 
		|								(ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14)
		|								и ЗаказыПоставщикамОстатки.ДоговорКонтрагента = &ИстДогПоставки)
        |                            )
	
		|					ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
		|						ИНАЧЕ 0
		|					КОНЕЦ КАК КоличествоПриход2Месяца,
		|					ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
		|					ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		|					ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
		|				ИЗ
		|					РегистрНакопления.ЗаказыПоставщикам.Остатки(,  {Номенклатура.*} ( Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|                            Или  Номенклатура В иерархии (&кованныеПапка) )
									//21.02.2018		
	    |							И  ( ДоговорКонтрагента.ВалютаВзаиморасчетов.Код <> ""643""
	// --- 11.10.2018 - список уже 3х договоров	---
		//|								ИЛИ ДоговорКонтрагента = &ИстДогПоставки
		//|								ИЛИ ДоговорКонтрагента = &СкадДогПоставки
		|								ИЛИ ДоговорКонтрагента В (&СписДог)
		|								)

		|								И ЗаказПоставщику.Транзит=ЛОЖЬ ) КАК ЗаказыПоставщикамОстатки
		|) КАК регТоварыВПути
		|
		|ГДЕ регТоварыВПути.КоличествоОстаток>0  
		|или регТоварыВПути.КоличествоПриход2Недели>0
		|или регТоварыВПути.КоличествоПриход2Месяца>0
		|
		|			СГРУППИРОВАТЬ ПО
		|				регТоварыВПути.Номенклатура
		
		//+++ 16.12.2013=================ОТХ увеличивает остаток Дисков на складах===========================
		|			ОБЪЕДИНИТЬ ВСЕ 
		|			Выбрать 
		|			ОстаткиОТХ.Номенклатура,
		|			Сумма(ОстаткиОТХ.КоличествоОстаток),
		|			Сумма(0),
		|			Сумма(0),
		|			Сумма(0),
		|			Сумма(0)
		|##ДополнительнаяСтрока6##				
		|			из (выбрать отх.Номенклатура, отх.КоличествоОстаток 
		|				из РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( ,  {Номенклатура.*}  (НЕ Склад.Транзитный) И (НЕ Склад.ЗапретитьИспользование)
		|											И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|											И Контрагент В(&СписокПоставщиковОТХ) ) как отх
		|ГДЕ отх.КоличествоОстаток>0
		|				)как ОстаткиОТХ
		|			СГРУППИРОВАТЬ ПО
		|			ОстаткиОТХ.Номенклатура
		
		
		////==========================Товары в производстве только для менеджеров!============================
		|//ТоварыВПроизводстве
		
		//Адиянов<<<//==================Товары из регистра НоменклатураПодЗаказ !============================
		|//НоменклатураПодЗаказ
		//Адиянов>>>
		|")+"
		|) КАК Б
		|		СГРУППИРОВАТЬ ПО
		|			Б.Номенклатура
		|"+?(ТолькоБрак, ",Б.Качество,Б.Дефект","")+"
		
		//============================= конец Б сгруппировано по номенклатуре ===========================================================
		|
		|	) КАК А
		
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки( ,  {Номенклатура.*}  ЗаказПокупателя.Проверен 
		|					И (НЕ ЗаказПокупателя.Транзит)  
		|	"+?(ТолькоБрак,"И заказПокупателя.ПометкаУдаления","")+"
		|					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|																		) КАК ЗаказыПокупателейОстатки
		|			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
		
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ЗначенияСвойствобъектов.Объект КАК Объект,
		|				ЗначенияСвойствобъектов.Значение КАК Цвет
		|			ИЗ
		|				РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствобъектов
		|			ГДЕ
		|				ЗначенияСвойствобъектов.Свойство = &СвойствоЦвет) КАК ЗначенияСвойствобъектов
		|			ПО А.Номенклатура = ЗначенияСвойствобъектов.Объект
		|
		|"+?(ТолькоБрак, "",  
		//===========================================================USD NEW ================================================================								 
		//25.02.2016
		?(USD,
		" ЛЕВОЕ СОЕДИНЕНИЕ
		|(выбрать ВТЦеныUSD.Номенклатура, ВТЦеныUSD.Цена из ВТ_ЦеныUSD как ВТЦеныUSD) 
		|	КАК ЦеныБазовая
		|			ПО А.Номенклатура = ЦеныБазовая.Номенклатура"
		,      
		//=========================================================== руб ================================================================								 
		" ЛЕВОЕ СОЕДИНЕНИЕ
		|РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,  {Номенклатура.*} ТипЦен = &ТипЦенБазовая) КАК ЦеныБазовая
		|			ПО А.Номенклатура = ЦеныБазовая.Номенклатура"
		)
		//===========================================================================================================================								 
		)+"
		|) КАК Б
		|ГДЕ
		|	(НЕ Б.Номенклатура В ИЕРАРХИИ (&Крышки))
		//Плотников 26.05.17 запрет на отгрузку моделей временный-----------------------------------------
		//21.02.2018
		|"+?(ВыводитьДискиСтопЛист,"","
		|	И НЕ Номенклатура В
			|			( ВЫБРАТЬ
			|	НоменклатураИмпорт.Номенклатура
			|ИЗ
			|	РегистрСведений.НоменклатураИмпорт КАК НоменклатураИмпорт)")+"
		//Плотников 26.05.17 запрет на отгрузку моделей временный-----------------------------------------
		|
		//+++ 22.10.2014 - вот это главное! контроль остатков >0 в каждом под-запросе отдельно
		|	И (Б.ОстатокДляКлиента > 0
		|			ИЛИ Б.КоличествоВПути > 0
		|			или Б.КоличествоПриход2Недели> 0
		|			или Б.КоличествоПриход2Месяца> 0
		|"+?(исклБолее45,"","ИЛИ Б.КоличествоВПроизводстве > 0")+" 
		|			##ДополнительнаяСтрока8##
		|		)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Родитель,
		|	Производитель,
		|	Модель,
		|	Типоразмер,
		|	НоменклатураНаименование
		|"+?(ТолькоБрак,",Б.Качество","");	
		
	КонецЕсли;
	
//+++16.02.2018 Если ВидОтчета=1 тогда //03.07.2017 - ТОЛЬКО для МЕНЕДЖЕРОВ?! - доп.количество - и в пути и в производстве! 
	Если НЕ ТолькоБрак и НЕ исклБолее45 тогда //14.08.2018
		Текст1 = стрЗаменить(Текст1,"//ТоварыВПроизводстве",
		"ОБЪЕДИНИТЬ ВСЕ
		|			
		|"+"ВЫБРАТЬ
		   |	регТоварыВПроизводстве.Номенклатура,
		   |	0 КАК Поле1,
		   |	0 КАК Поле2,
		   |	0 КАК Поле3,
		   |	0 КАК Поле4,
		   |	ВЫБОР
		   |		КОГДА &РежимФормирования
		   |				И СУММА(регТоварыВПроизводстве.КоличествоОстаток) > 50
		   |			ТОГДА 51
		   |		ИНАЧЕ СУММА(регТоварыВПроизводстве.КоличествоОстаток)
		   |	КОНЕЦ КАК Поле5
		   |##ДополнительнаяСтрока5## 
		   |ИЗ
		   |	(ВЫБРАТЬ
		   |		ЗаказыПоставщикуСезонныеОстатки.Номенклатура КАК Номенклатура,
		   |		ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток КАК КоличествоОстаток
		   |	ИЗ
		   |		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
		   |				&ТекущаяДата,
		   |				ЗаказПоставщикуСезонный.Транзит=ЛОЖЬ
		   //07.12.2016 ТекущаяДатаСезЗак = ТекущаяДата + месяц
		   |					И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекущаяДатаСезЗак
		   |					И Номенклатура В ИЕРАРХИИ (&Диски)
		   |					И НЕ Номенклатура В ИЕРАРХИИ (&Комплектующие) {(Номенклатура).*}) КАК ЗаказыПоставщикуСезонныеОстатки
		   |	ГДЕ
		   |		ЕСТЬNULL(ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток, 0) > 0) КАК регТоварыВПроизводстве
		   |
		   |СГРУППИРОВАТЬ ПО
		   |	регТоварыВПроизводстве.Номенклатура"
		   
//============ 09.02.2017 = (доп.закладки "Грузовые диски" - только для Менеджеров (и в доп.закладку Груз.Диски!) ==============		   
 +
 //?(ВидОтчета = 0, "",
    	 " ОБЪЕДИНИТЬ ВСЕ
    	|"+	"	 ВЫБРАТЬ
    	   |	товарыГрузДиски.Номенклатура,
    	   |	0 КАК Поле1,
    	   |	0 КАК Поле2,
    	   //до 14 дней >20 (6 компл. х4 = 24)
    	   |    товарыГрузДиски.Остаток КАК Поле3,
    	   |    0 КАК Поле4,
    	   |    0 КАК Поле5
    	   | ##ДополнительнаяСтрока5## 
    	   |ИЗ
    	   |регистрСведений.ОстаткиНоменклатурыКонтрагентов как товарыГрузДиски
    	   |Где   товарыГрузДиски.Подразделение = Значение(Справочник.Подразделения.ПустаяСсылка)
    	   |	  И товарыГрузДиски.Контрагент в (&СписокСтороннихПоставщиков)
    	   //ТОЛЬКО hartung и mefro
    		 |    и товарыГрузДиски.Номенклатура.Производитель в (&СписокГрузДиски)
 	   		 |    и не товарыГрузДиски.Номенклатура.ПометкаУдаления
    		|"
		   );
		   
	КонецЕсли;	
	//КонецЕсли;	//16.02.2018
	
	////Адиянов<<< 22.06.2016
	//Текс запроса выше дополнен строками вида ##ДополнительнаяСтрока%НомерДополнения%##
	//Если ВидОтчета = 0 Тогда
	Если НЕ USD и не ТолькоБрак Тогда
		Если НеВыводитьДискиПодЗаказ=ЛОЖЬ Тогда // VISSOL    
			ТекстНоменклатураПодЗаказ = 
			"ОБЪЕДИНИТЬ ВСЕ
			|		
			|"+"	ВЫБРАТЬ
			|		РегНоменклатураПодЗаказ.Номенклатура,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		выбор когда РегНоменклатураПодЗаказ.КонтрагентКод=""П008430"" тогда 7 иначе 14 Конец 
			|	ИЗ
			|		(ВЫБРАТЬ
			|			НоменклатураПодЗаказ.Номенклатура КАК Номенклатура
			//+++ 30.07.2018 по задаче № 51681 - 7 и 14 дней
			|			, НоменклатураПодЗаказ.Контрагент.Код как КонтрагентКод
			|		ИЗ			
			//+++ 30.07.2018 по задаче № 51681 - 7 и 14 дней
			|		РегистрСведений.ОстаткиНоменклатурыКонтрагентов как  НоменклатураПодЗаказ
			|	 ГДЕ НоменклатураПодЗаказ.Номенклатура.НоменклатурнаяГруппа = &Кованные
			
			|		) КАК РегНоменклатураПодЗаказ";
			
			
			Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока1##",", Б.ЭтоНоменклатураПодЗаказ" );
			Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока2##",", А.ЭтоНоменклатураПодЗаказ КАК ЭтоНоменклатураПодЗаказ");
			Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока3##",", Максимум(Б.ЭтоНоменклатураПодЗаказ) КАК ЭтоНоменклатураПодЗаказ");
			Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока4##",", 0 КАК ЭтоНоменклатураПодЗаказ");
			Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока5##",", 0 ");
			Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока6##",", СУММА(0)");
			//	Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока7##",", 0");
			
			Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока8##","ИЛИ Б.ЭтоНоменклатураПодЗаказ>0");//20.11.2017
			
			Текст1 = стрЗаменить(Текст1,"//НоменклатураПодЗаказ",ТекстНоменклатураПодЗаказ);
			//12.07.2016 - сразу в запрос! 08.10.2018 14>>30
			ТекстВыводаВМакет14 = ?(USD, "Under the order. Delivery date of 30 days.", "Под заказ. Доставка 30 дней"); //18.08 - 30.11.2016
			ТекстВыводаВМакет7 = ?(USD, "Under the order. Delivery date of 7 days.", "Под заказ. Доставка 7 дней"); //30.07.2018
			
			Текст1 = стрЗаменить(Текст1,"//ПодЗаказА", ", ВЫБОР КОГДА А.ЭтоНоменклатураПодЗаказ=14 
			//+++ 13.03.2018 не пишем под заказ...
				|И  (А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) )<=0 
				|	тогда """+ТекстВыводаВМакет14+""" 
				
			//+++ 30.07.2018 не пишем под заказ...
				|КОГДА А.ЭтоНоменклатураПодЗаказ=7 
				|И  (А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) )<=0 
				|	тогда """+ТекстВыводаВМакет7+""" 

			|иначе """" Конец как ПодЗаказ");
			Текст1 = стрЗаменить(Текст1,"//ПодЗаказБ", ", Б.ПодЗаказ");
			
			//+++( 20.11.2017 по задаче № 36145 ---- реальные остатки <50 в остатках и св.остатках, а в менее 45 дней  >50
		     Текст1 = стрЗаменить(Текст1,"##ОстатокКлиента##","Б.ОстатокДляКлиента");
			Текст1 = стрЗаменить(Текст1,"##СвободныйОстатокКлиента##","Б.СвободныйОстатокДляКлиента");
			Текст1 = стрЗаменить(Текст1,"##КоличествоПриход2Месяца##","выбор когда Б.ЭтоНоменклатураПодЗаказ>0 тогда "">20""
											|иначе Б.КоличествоПриход2Недели  Конец");
			//+++)								
	

		КонецЕсли;
		
	КонецЕсли;
	Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока1##","");
	Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока2##","");
	Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока3##","");
	Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока4##","");
	Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока5##","");
	Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока6##","");
	//	Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока7##","");
	
	//20.11.2017--------------------------------------------------------------------
	Текст1 = стрЗаменить(Текст1,"##ДополнительнаяСтрока8##","");
	Текст1 = стрЗаменить(Текст1,"##КоличествоПриход2Месяца##","0");
	
	Текст1 = стрЗаменить(Текст1,"##ОстатокКлиента##",  "Б.ОстатокДляКлиента");
	Текст1 = стрЗаменить(Текст1,"##СвободныйОстатокКлиента##", "Б.СвободныйОстатокДляКлиента");
	//Адиянов>>> 22.06.2016
	
	
	//25.02.2016
	Если USD и не ВыводитьПрименяемость тогда
		Запрос1 = новый Запрос;
		Запрос1.Текст = текст1;
		Запрос1.Параметры.Вставить("Диски", Диски);
		Запрос1.Параметры.Вставить("Шины", Шины);
		Запрос1.Параметры.Вставить("Крышки", Крышки);
		Запрос1.Параметры.Вставить("ВидДиски", Перечисления.ВидыТоваров.Диски);                                                                        
		Запрос1.Параметры.Вставить("РежимФормирования", ?(ВидОтчета=0, Истина, Ложь ));
		Запрос1.Параметры.Вставить("ГрузовыеДиски", Справочники.Номенклатура.НайтиПоКоду("9004163")); // грузовыедиски
		
//+++( 11.10.2018 - список договоров поставщиков  дисков!	
	Запрос1.Параметры.Вставить("ИстДогПоставки", справочники.ДоговорыКонтрагентов.НайтиПоКоду("Е1513") );   //ИСТ      - 21.02.2018	
//	Запрос1.Параметры.Вставить("СкадДогПоставки", справочники.ДоговорыКонтрагентов.НайтиПоКоду("Е3200") );  //СКАД ЛМЗ - 03.04.2018
    СписДог = новый СписокЗначений;
	СписДог.Добавить( справочники.ДоговорыКонтрагентов.НайтиПоКоду("Е1513") ); //ИСТ      - Основной договор поставки 
	СписДог.Добавить( справочники.ДоговорыКонтрагентов.НайтиПоКоду("Е3200") ); //скад ЛМЗ - 1 Договор поставки
	СписДог.Добавить( справочники.ДоговорыКонтрагентов.НайтиПоКоду("Е9041") ); //КиК      - 1 Договор поставки
	Запрос1.Параметры.Вставить("СписДог",СписДог);
//+++)
	 СписокПроизводителей  = Новый СписокЗначений;
	 СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3291"));  //Плотников 26.05.17 запрет на отгрузку моделей временный
	 СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3485"));
	 //СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3657"));
	 СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3658"));
	 
	 списокМоделей  = Новый СписокЗначений;
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04911"));   //Плотников 26.05.17 запрет на отгрузку моделей временный
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04913"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04914"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04915"));
	 
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05667"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05668"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05669"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05670"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05671"));
	 
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("20987"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("20965"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31134"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31135"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31136"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31137"));
	 
	 Запрос1.УстановитьПараметр("списокПроизводителей", СписокПроизводителей);      //Плотников 26.05.17 запрет на отгрузку моделей временный
	  
	 Запрос1.УстановитьПараметр("списокМоделей", списокМоделей);      //Плотников 26.05.17 запрет на отгрузку моделей временный
	 
	 Запрос1.УстановитьПараметр("алкаста", Справочники.Производители.НайтиПоКоду("100")); // 27.06.2016     //Плотников 26.05.17 запрет на отгрузку моделей временный

		
		//02.06.2016
		Запрос1.Параметры.Вставить("Комплектующие", Комплектующие);
		
		//29.07.2016
		СписокСтороннихПоставщиков = яштПоставщики.ПолучитьСписокПоставщиков(ЛОЖЬ);  //+++ 28.07.2016
		Запрос1.Параметры.Вставить("СписокСтороннихПоставщиков", СписокСтороннихПоставщиков);
		СписокГрузДиски = новый СписокЗначений;
		СписокГрузДиски.Добавить( справочники.Производители.НайтиПоКоду(3646) ); //HARTUNG
		СписокГрузДиски.Добавить( справочники.Производители.НайтиПоКоду(99) ); //MEFRO 
		Запрос1.Параметры.Вставить("СписокГрузДиски", СписокГрузДиски);
		
		СписокПоставщиковОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);  //+++ 21.05.2015  - ВСЕ!
		Запрос1.Параметры.Вставить("СписокПоставщиковОТХ", СписокПоставщиковОТХ); //+++ 24.12.2013  аналогично как в шинах!
		
		Запрос1.Параметры.Вставить("ПустаяДата", '00010101');
		Запрос1.Параметры.Вставить("ТекущаяДата", ТекущаяДата());
		Запрос1.Параметры.Вставить("ТекущаяДатаСезЗак", ДобавитьМесяц( ТекущаяДата(), -1) );  //07.12.2016

		Запрос1.Параметры.Вставить("СвойствоЦвет", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166"));	
		
	//+++ 16.03.2018
		Запрос1.Параметры.Вставить("Кованные", справочники.НоменклатурныеГруппы.НайтиПоКоду("00022") ) ; // кованные
		Запрос1.Параметры.Вставить("КованныеПапка", Справочники.Номенклатура.НайтиПоКоду("0080062"));
		
		КонтрC  = справочники.Контрагенты.НайтиПоКоду("11033  ");
		СписНом = неопределено;
		Состояние("Идет расчет цен USD для клиента "+строка(КонтрC));
		ТаблUSD = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСвЭкспорт(КонтрC, СписНом);
		Запрос1.Параметры.Вставить("Табл222", ТаблUSD);
		Состояние("Найдено "+строка(ТаблUSD)+" цен");
	иначе //=========================================================================================================================
		
		ПостроительОтчетаОтчет.текст = текст1;
		
		ПостроительОтчетаОтчет.Параметры.Вставить("Диски", Диски);
		ПостроительОтчетаОтчет.Параметры.Вставить("Шины", Шины);
		ПостроительОтчетаОтчет.Параметры.Вставить("Крышки", Крышки);
		ПостроительОтчетаОтчет.Параметры.Вставить("ВидДиски", Перечисления.ВидыТоваров.Диски);                                                                        
		ПостроительОтчетаОтчет.Параметры.Вставить("РежимФормирования", ?(ВидОтчета=0, Истина, Ложь ));
		ПостроительОтчетаОтчет.Параметры.Вставить("ГрузовыеДиски", Справочники.Номенклатура.НайтиПоКоду("9004163")); // грузовыедиски
		
		//+++ 15.03.2018
		ПостроительОтчетаОтчет.Параметры.Вставить("Кованные", справочники.НоменклатурныеГруппы.НайтиПоКоду("00022") ) ; // кованные
		ПостроительОтчетаОтчет.Параметры.Вставить("КованныеПапка", Справочники.Номенклатура.НайтиПоКоду("0080062"));
		//+++ 21.02.2018	
		ПостроительОтчетаОтчет.Параметры.Вставить("ИстДогПоставки", справочники.ДоговорыКонтрагентов.НайтиПоКоду("Е1513") );
		    СписДог = новый СписокЗначений; //11.10.2018
			СписДог.Добавить( справочники.ДоговорыКонтрагентов.НайтиПоКоду("Е1513") ); //ИСТ      - Основной договор поставки 
			СписДог.Добавить( справочники.ДоговорыКонтрагентов.НайтиПоКоду("Е3200") ); //скад ЛМЗ - 1 Договор поставки
			СписДог.Добавить( справочники.ДоговорыКонтрагентов.НайтиПоКоду("Е9041") ); //КиК      - 1 Договор поставки
		ПостроительОтчетаОтчет.Параметры.Вставить("СписДог", СписДог ); 

			 СписокПроизводителей  = Новый СписокЗначений;
	 СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3291"));  //Плотников 26.05.17 запрет на отгрузку моделей временный
	 СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3485"));
	 //СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3657"));
	 СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3658"));
	 
	 списокМоделей  = Новый СписокЗначений;
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04911"));   //Плотников 26.05.17 запрет на отгрузку моделей временный
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04913"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04914"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04915"));
	 
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05667"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05668"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05669"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05670"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05671"));
	 
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("20987"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("20965"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31134"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31135"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31136"));
	 списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31137"));
	 
	 ПостроительОтчетаОтчет.Параметры.Вставить("списокПроизводителей", СписокПроизводителей);      //Плотников 26.05.17 запрет на отгрузку моделей временный
	  
	 ПостроительОтчетаОтчет.Параметры.Вставить("списокМоделей", списокМоделей);      //Плотников 26.05.17 запрет на отгрузку моделей временный
	 
	 ПостроительОтчетаОтчет.Параметры.Вставить("алкаста", Справочники.Производители.НайтиПоКоду("100")); // 27.06.2016     //Плотников 26.05.17 запрет на отгрузку моделей временный

		
		//02.06.2016
		ПостроительОтчетаОтчет.Параметры.Вставить("Комплектующие", Комплектующие);
		//02.06.2016
		
		СписокПоставщиковОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);  //+++ 21.05.2015  - ВСЕ!
		ПостроительОтчетаОтчет.Параметры.Вставить("СписокПоставщиковОТХ", СписокПоставщиковОТХ); //+++ 24.12.2013  аналогично как в шинах!
		
		СписокСтороннихПоставщиков = яштПоставщики.ПолучитьСписокПоставщиков(ЛОЖЬ);  //+++ 28.07.2016
		ПостроительОтчетаОтчет.Параметры.Вставить("СписокСтороннихПоставщиков", СписокСтороннихПоставщиков);

		ПостроительОтчетаОтчет.Параметры.Вставить("ПустаяДата", '00010101');
		ПостроительОтчетаОтчет.Параметры.Вставить("ТекущаяДата", ТекущаяДата());
		ПостроительОтчетаОтчет.Параметры.Вставить("ТекущаяДатаСезЗак", ДобавитьМесяц( ТекущаяДата(), -1) );  //07.12.2016
		ПостроительОтчетаОтчет.Параметры.Вставить("СвойствоЦвет", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166"));	  
		
		//27.06.2016 
		СписокГрузДиски = новый СписокЗначений;
		СписокГрузДиски.Добавить( справочники.Производители.НайтиПоКоду(3646) ); //HARTUNG
		СписокГрузДиски.Добавить( справочники.Производители.НайтиПоКоду(99) ); //MEFRO 
		ПостроительОтчетаОтчет.Параметры.Вставить("СписокГрузДиски", СписокГрузДиски);
		Если ВидОтчета = 1 тогда 
			сообщить("+++ добавлены груз.диски "+строка(СписокГрузДиски)+" которых нет в наличие! +++");
		КонецЕсли;	
	КонецЕсли;
	
	tt=текущаяДата();
	состояние("Идет формирование запроса по выбранным условиям...");
	
	Если USD тогда								  
		//		ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00028")); // Базовая USD
		Результат = Запрос1.Выполнить(); // это Запрос!
	Иначе
		ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
		Результат = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить();
	КонецЕсли;	
	
	ttt = текущаяДата() - tt;
	сообщить("Данные по дискам получены. Время выполнения запроса "+строка(ttt)+" сек.");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование=Организация.НаименованиеПолное;
	СведенияОбОрганизации  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ТекущаяДата=Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	//ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	i=0; N=ВыборкаДетали.Количество(); проц = макс( 10, мин(1000, окр(N/100,0) ) );
	
	//Смирнов 24.03.14
//	состояние("Идет получение фото дисков с FTP...");
	ПутьКДискам = "http://photo.yst.ru/allwheels/"; //21.08.2018

	//+++ 27.10.2015  для "свободной цены" - из регистра цены для Распродажи
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦеныДляРаспродажиСрезПоследних.Номенклатура.Код  как Код
	| , ЦеныДляРаспродажиСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныДляРаспродажи КАК ЦеныДляРаспродажиСрезПоследних
	
	|   ГДЕ  ЦеныДляРаспродажиСрезПоследних.Цена>0
	|		 И ЦеныДляРаспродажиСрезПоследних.Период = &ДатаПоследнейРаспродажи
	|		 И ЦеныДляРаспродажиСрезПоследних.ЗаписьАктивна = "+?(USD,"Истина","ЛОЖЬ")+"  
	|"; //01.02.2017 - только по последней!
	ДатаПоследнейРаспродажи = ОбменСУТИнтернетМагазин.ПолучитьДатуЦеныРаспродажи( USD ); //как ЗаписьАктивна = ЛОЖЬ для рублевых!
    Запрос.УстановитьПараметр("ДатаПоследнейРаспродажи", ДатаПоследнейРаспродажи);
	
	//без даты - быстрее... Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата() );
	Результат = Запрос.Выполнить();
	выборка = Результат.выбрать(); 
	
	соотвРаспродажи = новый Соответствие; //12.07.2016
	пока выборка.Следующий() цикл
		соотвРаспродажи.Вставить( выборка.Код, выборка.Цена);
	КонецЦикла;
	СвЦена =?(USD, "Free price", "Распродажа!"); //не для всех клиентов действует!!!
	
//21.02.2018 -----------------------------------------------------
СтопЛист = новый Соответствие;	
Если ВыводитьДискиСтопЛист тогда
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
			|	НоменклатураИмпорт.Номенклатура.Код как Код
			|ИЗ
			|	РегистрСведений.НоменклатураИмпорт КАК НоменклатураИмпорт";
	Результат = Запрос.Выполнить();
	выборка = Результат.выбрать(); 
	пока выборка.Следующий() цикл
		СтопЛист.Вставить( выборка.Код, 1);
	КонецЦикла;
КонецЕсли;			
			
//+++ 18.08.2016 ========================Аналогично сделаем и Завод=======================	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|СезонныйАссортимент.Номенклатура.Код КАК Код,
	|СезонныйАссортимент.Завод КАК Завод
	|	ИЗ
	|	РегистрСведений.СезонныйАссортимент КАК СезонныйАссортимент
	|";
  	Результат = Запрос.Выполнить();
	выборка = Результат.выбрать(); 
	
	соотвЗавод = новый Соответствие; //12.07.2016
	пока выборка.Следующий() цикл
		соотвЗавод.Вставить( выборка.Код, выборка.Завод);
	КонецЦикла;
//======================================================================

     //+++( 28.03.2018 - ЦенаМРИЦ
	 вр0 = ТекущаяУниверсальнаяДатаВМиллисекундах();
	 контрМРЦ = справочники.Контрагенты.НайтиПоКоду("11011");
	 списТов = новый СписокЗначений;
 	 состояние("Идёт заполнение цен МРЦ...");
	 Пока ВыборкаДетали.Следующий() Цикл списТов.Добавить( ВыборкаДетали.Номенклатура );
	 КонецЦикла;
	ЦеныМРЦ = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(контрМРЦ, списТов);
	вр1 = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Сообщить("Получено "+строка(ЦеныМРЦ.Количество())+" цен МРЦ по списку "+строка(списТов.Количество())+" товаров за "+строка((вр1-вр0)/1000)+" сек.");
	
	ЦеныМРЦсоотв = ЗаполнитьСоответствиеПоТаблице(ЦеныМРЦ, "Номенклатура", "МинимальнаяЦена"); //14.12.2018 - 1 раз!
	 
	Если USD тогда
		курсUSD = константы.КурсUSD.Получить();
	иначе курсUSD = 1;
	КонецЕсли;	
	 //+++)
	 
	 
	 
	 
	 
//=====================================================================================================	 
	//--------------------ГЛАВНЫЙ ЦИКЛ--------------------------------------------------------------	 
	 ВыборкаДетали.Сбросить();
	Пока ВыборкаДетали.Следующий() Цикл
		i=i+1;
		Если i%проц=0 тогда
			состояние("Сформировано "+строка(i)+" из "+строка(N)+" строк ( "+формат(i*100/N,"ЧДЦ=0")+" %)...");
			ОбработкаПрерыванияПользователя();
		КонецЕсли;
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);  //ВСЕ ПОЛЯ из Запроса >> Макет!
		
		////+++ 12.07.2016 - все сразу в запросе!
		Если ЗначениеЗаполнено(ВыборкаДетали.Номенклатура) Тогда
		ценаМРЦ = ЦеныМРЦсоотв.Получить(ВыборкаДетали.Номенклатура);  //14.12.2018 поиск по ключу
		Если ценаМРЦ=неопределено тогда 
			ценаМРЦ = 0; 
		КонецЕсли;
		
		ОбластьДетальныхЗаписей.Параметры.ЦенаМРИЦ = ценаМРЦ / курсUSD; // есть не USD, 1
		
		рез = соотвРаспродажи.Получить( ВыборкаДетали.НоменклатураКод ); //12.07.2016 - соответствие ищет быстрее
		Если рез = Неопределено 
			Тогда ОбластьДетальныхЗаписей.Параметры.СвободнаяЦена = "";
			Иначе ОбластьДетальныхЗаписей.Параметры.СвободнаяЦена = СвЦена; //распродажа!
		КонецЕсли;
			
		//21.02.2018 ------------------------------------------------------------------------------------
		рез1 = СтопЛист.Получить( ВыборкаДетали.НоменклатураКод ); 
		Если рез1 <> Неопределено тогда
			ОбластьДетальныхЗаписей.Параметры.СвободнаяЦена = "Стоп-лист!"; //распродажа!
		КонецЕсли;
			
			рез2 = соотвЗавод.Получить( ВыборкаДетали.НоменклатураКод ); 
			Если рез2 = Неопределено 
				тогда ОбластьДетальныхЗаписей.Параметры.Завод = "";
				Иначе ОбластьДетальныхЗаписей.Параметры.Завод = рез2;
			КонецЕсли;
			
			путьККартинкамТов = ПутьКДискам; //21.08.2018 - БЕЗ производителя!
			
			СловоЦвет = СокрЛП(ВыборкаДетали.Цвет);
			
			ФайлКартинки=нрег(""+СокрЛП(ВыборкаДетали.Модель)+"_"+СловоЦвет)+".png";
			ОбластьДетальныхЗаписей.Параметры.ПутьКФОто = путьККартинкамТов + ФайлКартинки;
			ОбластьДетальныхЗаписей.Параметры.Цвет = СловоЦвет;
			
		иначе//+++ 22.10.2014
			ОбластьДетальныхЗаписей.Параметры.ПутьКФОто = "";
		КонецЕсли;
		
	//	ОбластьДетальныхЗаписей.Параметры.Производитель=ВыборкаДетали.Производитель;
		ТабДок.Вывести(ОбластьДетальныхЗаписей); //+++ 14.12.2018 БЕЗ УРОВНЕЙ! , ВыборкаДетали.Уровень());
	КонецЦикла;
	
	вр2 = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Сообщить("Выведено "+строка(ВыборкаДетали.Количество())+" строк за "+строка((вр2-вр1)/1000)+" сек.");
	
	//состояние("Группировка строк...");
	//ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	состояние(" ");
	
	НеВыводитьДискиПодЗаказ = Ложь;
	
КонецПроцедуры

функция ЗаполнитьСоответствиеПоТаблице(табл1, ПолеПоиска, ПолеЗначения)
	Соотв = новый Соответствие;
	для каждого стр1 из табл1 цикл
		Соотв.Вставить( стр1[ПолеПоиска], стр1[ПолеЗначения] );
	КонецЦикла;	
	возврат Соотв;
КонецФункции

Процедура ДействияФормыСохранитьНаСайте(Кнопка)
	ТабДокумент=ЭлементыФормы.ПолеТабличногоДокумента;
	Если СтрокаВид="Диски" Тогда
		ИмяФайлаСообщения ="diski.xls";
	ИначеЕсли СтрокаВид="Шины" Тогда
		//+++ не надо еще раз формировать!
		//	ТабДокумент=СформироватьПрайсЛистШиныДляВыгрузкиНаСайт();
		ИмяФайлаСообщения ="tyres.xls";
	ИначеЕсли СтрокаВид="АКБ"  Тогда
		Если ФлФотоАксАКБ тогда
			ИмяФайлаСообщения ="akb_photo.xlsx";
			//_03.12.2014
			датаНов = "_"+ формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+формат(месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+формат(год(ТекущаяДата()),"ЧГ=0");
			//+"_"+Час(ТекущаяДата())+"-"+Минута(ТекущаяДата());
			//ИмяФайлаСообщения_Новый ="akb_photo"+датаНов+".xlsx";
			ИмяФайлаСообщения_Новый = ИмяФайлаСообщения;
		Иначе
			ИмяФайлаСообщения ="akb.xls";
		КонецЕсли;	
	Иначе
		Если ФлФотоАксАКБ тогда
			ИмяФайлаСообщения ="accessores_photo.xlsx";
			датаНов = ""; Отбор1 = ПостроительОтчетаОтчет.Отбор;
			
			Если Отбор1.Количество()<>1 тогда 
				Предупреждение("Должно быть 1 условие по Номенклатуре!",10);
				датаНов = "_"+ формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+формат(месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"_"+Час(ТекущаяДата())+"-"+Минута(ТекущаяДата());
			иначеЕсли Отбор1[0].Представление<>"Номенклатура" тогда
				Предупреждение("Должно быть 1 условие по Номенклатуре!",10);
				датаНов = "_"+ формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+формат(месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"_"+Час(ТекущаяДата())+"-"+Минута(ТекущаяДата());
			иначе
				если Отбор1[0].ВидСравнения = ВидСравнения.ВИерархии тогда
					датаНов = "_"+Отбор1[0].Значение.Код;
				иначеесли Отбор1[0].ВидСравнения = ВидСравнения.ВСпискеПоИерархии тогда
					для каждого эл1 из Отбор1[0].Значение цикл
						датаНов = датаНов + "_"+эл1.Значение.Код;
					КонецЦикла;
				Иначе Предупреждение("Не правильное условие отбора по номенклатуре!",30);
					датаНов =  "_"+формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+формат(месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"_"+Час(ТекущаяДата())+"-"+Минута(ТекущаяДата());
				КонецЕсли;
			КонецЕсли;
			ИмяФайлаСообщения_Новый  = "accessores_photo"+датаНов+".xlsx";
			//датаНов =  формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+формат(месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"_"+Час(ТекущаяДата())+"-"+Минута(ТекущаяДата());
			//датаCтар = формат(День(НачалоДня(ТекущаяДата())-1),"ЧЦ=2; ЧВН=")+"-"+формат(месяц(НачалоДня(ТекущаяДата())-1),"ЧЦ=2; ЧВН=");
			//ИмяФайлаСообщения_Старый = "accessores_photo_"+датаCтар+".xlsx";
			//ИмяФайлаСообщения_Старый_Поиск = "accessores_photo_"+датаCтар+"*.xlsx";
			
		Иначе
			ИмяФайлаСообщения ="accessores.xls";
		КонецЕсли;	
	КонецЕсли;
	путь = КаталогВременныхФайлов(); //"c:\"; //+++06.06.2013
	Состояние(строка(ТекущаяДата())+" Идет запись во временный файл: "+путь+ИмяФайлаСообщения);
	Если ФлФотоАксАКБ тогда
		ТабДокумент.Записать(путь+ИмяФайлаСообщения,ТипФайлаТабличногоДокумента.XLSX);
	Иначе
		ТабДокумент.Записать(путь+ИмяФайлаСообщения,ТипФайлаТабличногоДокумента.XLS);
	КонецЕсли;	
	
	//+++ 28.02.2013 измененио
	Если НеВыгружатьНаFTP=ЛОЖЬ тогда //21.11.2017
		Состояние(строка(ТекущаяДата())+" Идет подключение к FTP...");
		врФТПвыгр = Новый FTPСоединение(ФТПyst,,ИмяФТП, парольФТП,, Истина ); //188.225.16.133>>yst.ru>>ftp.yst.ru
		Если врФТПвыгр = Неопределено Тогда
		Сообщить( "Во время обмена данными произошла ошибка при подключении	к FTP. " + ОписаниеОшибки(), СтатусСообщения.Внимание);
		иначе
		Состояние(строка(ТекущаяДата())+" Соединение с FTP установлено...");
		КонецЕсли;
		Состояние("Идет копирование файла на сайт...");
		врФТПвыгр.Записать(путь+ИмяФайлаСообщения , "public_html/data/"+ИмяФайлаСообщения);
		Сообщить(строка(ТекущаяДата())+" - Файл: "+ИмяФайлаСообщения+" - успешно выгружен на сайт.", СтатусСообщения.Информация);
		Сообщить("Прямая cсылка для скачивания:   http://www.yst.ru/data/"+ИмяФайлаСообщения, СтатусСообщения.Информация);
		Состояние(строка(ТекущаяДата())+" Файл записан на сайт ftp://yst.ru/public_html/data/"+ИмяФайлаСообщения);
	КонецЕсли;
	
	
	Если ФлФотоАксАКБ тогда
		//если врФТП.НайтиФайлы("public_html/data/",ИмяФайлаСообщения_Старый_Поиск).Количество() > 0 тогда 
		//	списФайлов = врФТП.НайтиФайлы("public_html/data/",ИмяФайлаСообщения_Старый_Поиск);
		//	для i=0 по списФайлов.Количество()-1 цикл	
		//	врФТП.Удалить("public_html/data/"+списФайлов[i].Имя);
		//	Сообщить(строка(ТекущаяДата())+" - Файл: "+списФайлов[i].Имя+" - успешно удален с сайта.", СтатусСообщения.Информация);
		//	КонецЦикла;
		//иначе
		//Сообщить(строка(ТекущаяДата())+" - Старые файлы: "+ИмяФайлаСообщения_Старый_Поиск+" - не найдены на сайте...", СтатусСообщения.Внимание);
		//КонецЕсли;	
		Если НеВыгружатьНаFTP=ЛОЖЬ тогда //21.11.2017
			врФТП.Записать(путь+ИмяФайлаСообщения, "public_html/data/"+ИмяФайлаСообщения_Новый);
			Сообщить(строка(ТекущаяДата())+" - Файл: "+ИмяФайлаСообщения_Новый+" - успешно записан на сайт.", СтатусСообщения.Информация);
			Сообщить("Прямая cсылка для скачивания:   http://www.yst.ru/data/"+ИмяФайлаСообщения_Новый, СтатусСообщения.Информация);
			Состояние(строка(ТекущаяДата())+" Файл записан на сайт ftp://yst.ru/public_html/data/"+ИмяФайлаСообщения_Новый);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыУстановитьЦены(Кнопка)
	
	Если ЭлементыФормы.ПолеТабличногоДокумента.ВыделенныеОбласти.Количество()=0 Тогда
		Предупреждение("Выделите фрагмент с номенклатурой");
		Возврат;
	КонецЕсли;	
	
	ДокУЦН=Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	ДокУЦН.Дата=ТекущаяДата();
	
	ТипЦенЯкорная=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Якорная");
	ТипЦенКрупныйОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Крупный опт");
	ТипЦенСреднийОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Средний опт");
	ТипЦенМелкийОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Мелкий опт");
	
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенЯкорная;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенКрупныйОпт;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенСреднийОпт;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенМелкийОпт;
	
	
	Для каждого ВыделеннаяОбласть ИЗ ЭлементыФормы.ПолеТабличногоДокумента.ВыделенныеОбласти Цикл
		ИмяОбласти=ВыделеннаяОбласть.Имя;		
		
		индДвоеточия=Найти(ИмяОбласти,":");
		
		Если индДвоеточия>0 Тогда // несколько ячеек
			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			НачальныйНомер=Число(Сред(ИмяОбласти,индR1+1,индC1-индR1-1));
			ОстСтрока=Сред(ИмяОбласти,индДвоеточия);
			
			индR2=Найти(ОстСтрока,"R");
			индC2=Найти(ОстСтрока,"C");
			КонечныйНомер=Число(Сред(ОстСтрока,индR2+1,индC2-индR2-1));
			Для сч=НачальныйНомер по КонечныйНомер Цикл
				мКодНоменклатуры=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C6").Текст;
				СсылкаНоменклатура=Справочники.Номенклатура.НайтиПоКоду(мКодНоменклатуры);
				Если ЗначениеЗаполнено(СсылкаНоменклатура) Тогда
					строкаТовары=ДокУЦН.Товары.Добавить();
					строкаТовары.Номенклатура=СсылкаНоменклатура;
					строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенЯкорная);
					строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					строкаТовары.ТипЦен=ТипЦенЯкорная;
					
					строкаТовары=ДокУЦН.Товары.Добавить();
					строкаТовары.Номенклатура=СсылкаНоменклатура;
					строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенКрупныйОпт);
					строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					строкаТовары.ТипЦен=ТипЦенКрупныйОпт;
					
					строкаТовары=ДокУЦН.Товары.Добавить();
					строкаТовары.Номенклатура=СсылкаНоменклатура;
					строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенСреднийОпт);
					строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					строкаТовары.ТипЦен=ТипЦенСреднийОпт;
					
					строкаТовары=ДокУЦН.Товары.Добавить();
					строкаТовары.Номенклатура=СсылкаНоменклатура;
					строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенМелкийОпт);
					строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					строкаТовары.ТипЦен=ТипЦенМелкийОпт;
					
					
				КонецЕсли;
				//Если не ЗначениеНеЗаполнено(мСсылкаНаДокумент) Тогда 
				//	ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C1:R"+Строка(сч)+"C4").ЦветФона=WebЦвета.Лосось;
				//	Если мСписокДокументовДляРегистрации.НайтиПоЗначению(мСсылкаНаДокумент)=Неопределено Тогда
				//		мСписокДокументовДляРегистрации.Добавить(мСсылкаНаДокумент);
				//		//Сообщить(мСсылкаНаДокумент);
				//	КонецЕсли;	
				//КонецЕсли;
			КонецЦикла;	
			
		Иначе // одна ячейка
			
			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			сч=Сред(ИмяОбласти,индR1+1,индC1-индR1-1);
			
			мКодНоменклатуры=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+сч+"C6").Текст;
			СсылкаНоменклатура=Справочники.Номенклатура.НайтиПоКоду(мКодНоменклатуры);
			Если ЗначениеЗаполнено(СсылкаНоменклатура) Тогда
				строкаТовары=ДокУЦН.Товары.Добавить();
				строкаТовары.Номенклатура=СсылкаНоменклатура;
				строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенЯкорная);
				строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
				строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
				строкаТовары.ТипЦен=ТипЦенЯкорная;
				
				строкаТовары=ДокУЦН.Товары.Добавить();
				строкаТовары.Номенклатура=СсылкаНоменклатура;
				строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенКрупныйОпт);
				строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
				строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
				строкаТовары.ТипЦен=ТипЦенКрупныйОпт;
				
				строкаТовары=ДокУЦН.Товары.Добавить();
				строкаТовары.Номенклатура=СсылкаНоменклатура;
				строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенСреднийОпт);
				строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
				строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
				строкаТовары.ТипЦен=ТипЦенСреднийОпт;
				
				строкаТовары=ДокУЦН.Товары.Добавить();
				строкаТовары.Номенклатура=СсылкаНоменклатура;
				строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенМелкийОпт);
				строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
				строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
				строкаТовары.ТипЦен=ТипЦенМелкийОпт;
				
			КонецЕсли;
			//Если не ЗначениеНеЗаполнено(мСсылкаНаДокумент) Тогда 
			//	ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C1:R"+Строка(сч)+"C4").ЦветФона=WebЦвета.Лосось;
			//		Если мСписокДокументовДляРегистрации.НайтиПоЗначению(мСсылкаНаДокумент)=Неопределено Тогда
			//			мСписокДокументовДляРегистрации.Добавить(мСсылкаНаДокумент);
			//			//Сообщить(мСсылкаНаДокумент);
			//		КонецЕсли;	
			//КонецЕсли;
			
			
		КонецЕсли;	
		
		
		
	КонецЦикла;	
	
	ДокУЦН.ПолучитьФорму().Открыть();
	
	
КонецПроцедуры


Функция ПолучитьЦену(Номенклатура,ТипЦен)
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних( , 
	|			Номенклатура = &Номенклатура
	|				И ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("ТипЦен",ТипЦен);				 
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Выборка=Запрос.Выполнить().Выбрать();
	Если   Выборка.Следующий() Тогда
		Возврат Выборка.Цена;
	КонецЕсли;	
	Возврат 0;
КонецФункции // ПерезаполнитьСтроку()

Процедура ПриОткрытии()
	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=Ложь;
	СтрокаВид="Шины";
	врФТП = неопределено;
	НеВыгружатьНаFTP = Истина; //21.11.2017
	
	//+++ 20.09.2013 - ограничение для Филиалов	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") тогда
		ЭлементыФормы.ДействияФормы.Кнопки.УстановитьЦены.Доступность = ЛОЖЬ;
		ЭлементыФормы.КоманднаяПанельОтбор.Доступность = ложь;
		ЭлементыФормы.КоманднаяПанельОтбор.Видимость = ложь;
		ЭлементыФормы.Отбор.Доступность = ложь;
		ЭлементыФормы.Отбор.Видимость = ложь;
	КонецЕсли;
	
	//+++ только если разрешена установка цен!
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьЦенообразование") тогда
		ЭлементыФормы.ДействияФормы.Кнопки.УстановитьЦены.Доступность = Истина;
	КонецЕсли;
	
	Если РольДоступна("Партнер") Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.СформироватьТолькоАКБ1.Доступность = Ложь;	
		ЭлементыФормы.ДействияФормы.Кнопки.СформироватьТолькоШины.Доступность = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.СформироватьТолькоАксессуары.Доступность = Ложь;
		Переключатель1=0;
		ЭлементыФормы.Переключатель1.Доступность=Ложь;
		ЭлементыФормы.Переключатель2.Доступность=Ложь;
	КонецЕсли;
	
	//Если Константы.ИспользоватьОстаткиСтороннихПоставщиков.Получить() тогда //+++ 05.02.2018
		ЭлементыФормы.ДействияФормы.Кнопки.СформироватьТолькоШины.Текст = "Шины*";
	//КонецЕсли;
	
	Если РольДоступна("ПолныеПрава") Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.ВыгрузитьВExcel.Доступность = истина;
		//ЭлементыФормы.ФлФотоАксАКБ.Видимость = истина;
		ЭлементыФормы.USD.Видимость     = истина;
		
		ЭлементыФормы.НеВыгружатьНаFTP.Доступность = истина; //21.11.2017 - можно
		
	КонецЕсли;
	
	Если РольДоступна("МенеджерПоЗакупкам") тогда
		ЭлементыФормы.флагШК.Видимость  = истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыСформироватьТолькоШины(Кнопка)
	
	
	началоВр =ТекущаяДата();
	СтрокаВид="Шины";	
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
	//АКБ=Справочники.Номенклатура.НайтиПоКоду("0080021");
	Диски=Справочники.Номенклатура.НайтиПоКоду("0001752");
	Камеры=Справочники.Номенклатура.НайтиПоКоду("0001127");
	Кольца=Справочники.Номенклатура.НайтиПоКоду("4104444");
	ОбодныеЛенты=Справочники.Номенклатура.НайтиПоКоду("0060110");
	Шины=Справочники.Номенклатура.НайтиПоКоду("0001746");
	Шипы=Справочники.Номенклатура.НайтиПоКоду("0060001");
	Крышки=Справочники.Номенклатура.НайтиПоКоду("0080004");
	
	Макет = ПолучитьМакет("Отчет2");
	
	Запрос = Новый Запрос;
	ПостроительОтчетаОтчет.Текст= "ВЫБРАТЬ
	|	А.Номенклатура КАК Номенклатура,
	|	А.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	А.Остаток КАК Остаток,
	|	А.ОстатокПоставщиков
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВсеОстатки.Номенклатура КАК Номенклатура,
	|		СУММА(ВсеОстатки.КоличествоОстаток) КАК Остаток,
	|		СУММА(ВсеОстатки.ОстатокПоставщиков) КАК ОстатокПоставщиков
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|			ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|			0 КАК ОстатокПоставщиков
	|		ИЗ
	|			РегистрНакопления.ТоварыНаСкладах.Остатки(
	|					,
	|					Номенклатура В ИЕРАРХИИ (&Шины)
	//|						ИЛИ Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски))
	|						И НЕ Склад.ЗапретитьИспользование
	|						И НЕ Склад.Транзитный {(Номенклатура).*}) КАК ТоварыНаСкладахОстатки
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТоварыНаОтветственномХранении.Номенклатура,
	|			ТоварыНаОтветственномХранении.КоличествоОстаток,
	|			0
	|		ИЗ
	|			РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	|					,
	|					Контрагент В (&СписокПоставщиковОТХ)
	|						И НЕ Склад.Транзитный
	|						И НЕ Склад.ЗапретитьИспользование
	|						И (Номенклатура В ИЕРАРХИИ (&Шины)) {(Номенклатура).*}) КАК ТоварыНаОтветственномХранении
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТоварыНаСкладахОстальныхПартнеров.Номенклатура,
	
	|			ВЫБОР
	|				КОГДА ТоварыНаСкладахОстальныхПартнеров.Контрагент = &АвтошинаНикитин
	|					ТОГДА ТоварыНаСкладахОстальныхПартнеров.Остаток
	|				ИНАЧЕ 0
	|			КОНЕЦ,
	
	|			ВЫБОР
	|				КОГДА ТоварыНаСкладахОстальныхПартнеров.Контрагент = &АвтошинаНикитин
	|					ТОГДА 0
	|				ИНАЧЕ ТоварыНаСкладахОстальныхПартнеров.Остаток
	|			КОНЕЦ КАК ОстатокПоставщиков
	
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ОстаткиНоменклатурыКонтрагентов.Контрагент КАК Контрагент,
	|				ОстаткиНоменклатурыКонтрагентов.Номенклатура КАК Номенклатура,
	|				СУММА(ОстаткиНоменклатурыКонтрагентов.Остаток) КАК Остаток
	|			ИЗ
	|				РегистрСведений.ОстаткиНоменклатурыКонтрагентов КАК ОстаткиНоменклатурыКонтрагентов
	|			ГДЕ
	|				ОстаткиНоменклатурыКонтрагентов.Подразделение = &ПустоеПодразделение
	|				И ОстаткиНоменклатурыКонтрагентов.Контрагент В (&СторонниеПоставщики)
	
	//+++ ВСЕ ШИНЫ !
	|				И ОстаткиНоменклатурыКонтрагентов.Номенклатура.ВидТовара = Значение(Перечисление.ВидыТоваров.Шины) 
	
	//|				И 		( ОстаткиНоменклатурыКонтрагентов.Номенклатура В ИЕРАРХИИ (&Шины)
	//|						ИЛИ ОстаткиНоменклатурыКонтрагентов.Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски) )
	|			{ГДЕ
	|				ОстаткиНоменклатурыКонтрагентов.Номенклатура.*}
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ОстаткиНоменклатурыКонтрагентов.Номенклатура,
	|				ОстаткиНоменклатурыКонтрагентов.Контрагент
	|			
	|			ИМЕЮЩИЕ
	|				СУММА(ОстаткиНоменклатурыКонтрагентов.Остаток) > 0) КАК ТоварыНаСкладахОстальныхПартнеров) КАК ВсеОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВсеОстатки.Номенклатура) КАК А
	
//==========================28.07.2016===================================	
	//|ГДЕ
	//|	А.Остаток > 0 

	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.Номенклатура,
	//+++ 21.08.2015 - пересчет цен в USD
	|	МАКСИМУМ(А.ЦенаКрупныйОпт //пересчет_в_USD
	|) КАК ЦенаКрупныйОпт,
	|	МАКСИМУМ(А.ЦенаСреднийОпт //пересчет_в_USD
	|) КАК ЦенаСреднийОпт,
	//|	МАКСИМУМ(А.ЦенаМелкийОпт  //пересчет_в_USD
	//|) КАК ЦенаМелкийОпт,
	|	МАКСИМУМ(А.ЦенаБазовая //пересчет_в_USD
	|) КАК ЦенаБазовая
	|ПОМЕСТИТЬ ВТ_Цены
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенКрупныйОпт
	|				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЦенаКрупныйОпт,
	|		ВЫБОР
	|			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенСреднийОпт
	|				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЦенаСреднийОпт,
	|		ВЫБОР
	|			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенБазовая
	|				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЦенаБазовая,
	|		ВЫБОР
	|			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенМелкийОпт
	|				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЦенаМелкийОпт
	|	ИЗ
	|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							ВТ_Остатки.Номенклатура
	|						ИЗ
	|							ВТ_Остатки)
	|					И (ТипЦен = &ТипЦенМелкийОпт
	|						ИЛИ ТипЦен = &ТипЦенБазовая
	|						ИЛИ ТипЦен = &ТипЦенСреднийОпт
	|						ИЛИ ТипЦен = &ТипЦенКрупныйОпт)) КАК ЦеныНоменклатурыСрезПоследних) КАК А
	|
	|СГРУППИРОВАТЬ ПО
	|	А.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//Плотников +++ Новый цены на шины								  
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Номенклатура, ЦеныНоменклатурыСрезПоследних1.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК РРЦ,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних1.Цена, 0) КАК МРИЦ
	|ПОМЕСТИТЬ ЦеныНаШины
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			,
	|			ТипЦен = &РРЦШины
	|				И Номенклатура.ВидТовара = &типШины) КАК ЦеныНоменклатурыСрезПоследних
	|		Полное СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				,
	|				ТипЦен = &МРИЦШины
	|					И Номенклатура.ВидТовара = &типШины) КАК ЦеныНоменклатурыСрезПоследних1
	|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ЦеныНоменклатурыСрезПоследних1.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//Плотников +++ Новый цены на шины
	|ВЫБРАТЬ
	|	ВТ_Остатки.Номенклатура КАК Номенклатура,
	//14.12.2018
	|	ВТ_Остатки.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	ВТ_Остатки.Номенклатура.Код КАК Код,
	|	ВТ_Остатки.Номенклатура.Артикул КАК Артикул,
	|	ВТ_Остатки.Номенклатура.Родитель.Наименование КАК Родитель,
	|	ВТ_Остатки.Номенклатура.Типоразмер.Наименование КАК Размер,
	|	ВТ_Остатки.Номенклатура.Производитель.Наименование КАК Производитель,
	|	ВЫБОР
	|		КОГДА ВТ_Остатки.Остаток > 50
	|				И &РежимФормирования
	|			ТОГДА 51
	|		ИНАЧЕ ВТ_Остатки.Остаток
	|	КОНЕЦ КАК ОстатокДляКлиента,
	|	ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоВРезерве,
	|	ВЫБОР
	|		КОГДА ВТ_Остатки.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
	|				И &РежимФормирования
	|			ТОГДА 51
	|		ИНАЧЕ ВТ_Остатки.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
	|	КОНЕЦ КАК СвободныйОстатокДляКлиента,
	|	ВЫБОР
	|		КОГДА ВТ_Остатки.ОстатокПоставщиков > 20
	|				И &РежимФормирования
	|			ТОГДА 21
	|		ИНАЧЕ ВТ_Остатки.ОстатокПоставщиков
	|	КОНЕЦ КАК ОстатокПоставщиков,
	|	ВТ_Цены.ЦенаКрупныйОпт КАК ЦенаКрупныйОпт,
	|	ВТ_Цены.ЦенаСреднийОпт КАК ЦенаСреднийОпт,
	// |	ВТ_Цены.ЦенаМелкийОпт КАК ЦенаМелкийОпт,
	|	ВТ_Цены.ЦенаБазовая КАК ЦенаБазовая,
	|ЦеныНаШины.РРЦ,
	|ЦеныНаШины.МРИЦ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_Остатки.Номенклатура КАК Номенклатура,
	|		ВТ_Остатки.НоменклатураНаименование КАК НоменклатураНаименование,
	|		ВТ_Остатки.Остаток КАК Остаток,
	|		ВТ_Остатки.ОстатокПоставщиков КАК ОстатокПоставщиков
	|	ИЗ
	|		ВТ_Остатки КАК ВТ_Остатки) КАК ВТ_Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	|				,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							ВТ_Остатки.Номенклатура
	|						ИЗ
	|							ВТ_Остатки)
	|					И НЕ ЗаказПокупателя.Транзит
	|					И ЗаказПокупателя.Проверен {(Номенклатура).*}) КАК ЗаказыПокупателейОстатки
	|		ПО ВТ_Остатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	|		ПО ВТ_Остатки.Номенклатура = ВТ_Цены.Номенклатура
	|     ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНаШины КАК ЦеныНаШины
	|     ПО ВТ_Остатки.Номенклатура = ЦеныНаШины.Номенклатура
	
	//+++ 29.10 - 05.11.2015 ---------------ВЫКЛЮЧЕНИЕ AVATYRE-----------------------
	//|ГДЕ ВТ_Остатки.Номенклатура.Производитель.Код <> 3434
	
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Остатки.Номенклатура.Наименование
	|ИТОГИ
	|	СУММА(ОстатокДляКлиента),
	|	СУММА(КоличествоВРезерве),
	|	СУММА(СвободныйОстатокДляКлиента),
	|	СУММА(ОстатокПоставщиков),
	|	СРЕДНЕЕ(ЦенаКрупныйОпт),
	|	СРЕДНЕЕ(ЦенаСреднийОпт),
	//   |	СРЕДНЕЕ(ЦенаМелкийОпт),
	|	СРЕДНЕЕ(ЦенаБазовая),
	|	СРЕДНЕЕ(РРЦ),
	|	СРЕДНЕЕ(МРИЦ)
	|ПО
	|	Номенклатура ИЕРАРХИЯ";
	
	//+++ 21.08.2015								  
	Если USD тогда								  
		ПостроительОтчетаОтчет.Текст = стрЗаменить(ПостроительОтчетаОтчет.Текст, "//пересчет_в_USD", " /&КурсUSD *100/118");
		ПостроительОтчетаОтчет.Параметры.Вставить("КурсUSD", константы.КурсUSD.Получить() );
	КонецЕсли;	
	//+++ 09.10.2014
	ПостроительОтчетаОтчет.Параметры.Вставить("ПустоеПодразделение", справочники.Подразделения.ПустаяСсылка() );	
	ПостроительОтчетаОтчет.Параметры.Вставить("СторонниеПоставщики", яштПоставщики.ПолучитьСписокПоставщиков() );	
	ПостроительОтчетаОтчет.Параметры.Вставить("АвтошинаНикитин", Справочники.Контрагенты.НайтиПоКоду("93920") ); //+++ c 10.12.2014 ЛИНГЛОНГ! АвтоШина (Никитин И.Б.) 
	
	ПостроительОтчетаОтчет.Параметры.Вставить("Шины", Шины);
	ПостроительОтчетаОтчет.Параметры.Вставить("Шипы", Шипы);
	
	СписокПоставщиковОТХ = новый СписокЗначений;
	СписокПоставщиковОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);
	ПостроительОтчетаОтчет.Параметры.Вставить("СписокПоставщиковОТХ",СписокПоставщиковОТХ);
	
	ПостроительОтчетаОтчет.Параметры.Вставить("ГрузовыеДиски", Справочники.Номенклатура.НайтиПоКоду("9004163"));                                                                        
	
	ПостроительОтчетаОтчет.Параметры.Вставить("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));                                                                        
	
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенСреднийОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00002"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенМелкийОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00004"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
	ПостроительОтчетаОтчет.Параметры.Вставить("РРЦШины", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00011"));
	ПостроительОтчетаОтчет.Параметры.Вставить("МРИЦШины", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00025"));
	ПостроительОтчетаОтчет.Параметры.Вставить("типШины", Перечисления.ВидыТоваров.Шины);
	
	Результат = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование=Организация.НаименованиеПолное;
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ТекущаяДата=Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	
	Пока ВыборкаДетали.Следующий() Цикл
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");	
		ИначеЕсли 	ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		Иначе Продолжить;
		КонецЕсли;	
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		Если ВидОтчета =0 И ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда // для клиентов
			Если ВыборкаДетали.СвободныйОстатокДляКлиента<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = "";
			КонецЕсли;	
		КонецЕсли;	
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
		
	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
	парамЗапроса = "Шины"; 
	Если ВремяВыполнения>0 тогда
		сообщить("-------------Полное время формирования прайса: "+строка(цел(ВремяВыполнения/60))+" мин. "+строка(ВремяВыполнения - цел(ВремяВыполнения/60)*60)+" сек.------------");
	КонецЕсли;	
	//+++)   18.05.2012
	
КонецПроцедуры

//+++ 22.10.2014
функция получитьСписокУдаленныхПапок()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ различные
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ПометкаУдаления
	|	И Номенклатура.Ссылка В ИЕРАРХИИ (&Аксессуары)
	|	И Номенклатура.ЭтоГруппа";
	
	Запрос.УстановитьПараметр("Аксессуары", справочники.Номенклатура.НайтиПоКоду("0000001") );
	
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();
	СписокУдПапок = новый СписокЗначений;
	если табл.Количество()>0 тогда
		СписокУдПапок.ЗагрузитьЗначения(табл.ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;
	возврат СписокУдПапок;
КонецФункции

Процедура ДействияФормыСформироватьТолькоАКБ(Кнопка)
	СтрокаВид="АКБ";		
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
	АКБ=Справочники.Номенклатура.НайтиПоКоду("0080021");
	
	
	Макет = ПолучитьМакет("ОтчетАКБ");
	
	
	ПостроительОтчетаОтчет.Текст = "ВЫБРАТЬ
	|	Б.Номенклатура,
	|	Б.Номенклатура.Артикул КАК Модель,
	|	Б.Номенклатура.Код КАК Код,
	|	Б.Номенклатура.Типоразмер КАК Типоразмер,
	|	Б.Номенклатура.Производитель КАК Производитель,
	|	Б.Емкость,
	|	Б.Номенклатура.КодСБИС КАК Полярность,
	|	Б.ПусковойТок,
	|	Б.ОстатокДляКлиента,
	|	Б.СвободныйОстатокДляКлиента,
	|	Б.КОличествоВРезерве,
	//+++ 21.08.2015 
	|	Б.ЦенаДилерская   //пересчет_в_USD
	|	    КАК ЦенаДилерская,
	|	Б.ЦенаКрупныйОпт  //пересчет_в_USD
	|		КАК ЦенаКрупныйОпт,
	|	Б.ЦенаСпец 		  //пересчет_в_USD
	|		КАК ЦенаСпец
	|ИЗ
	|	(ВЫБРАТЬ
	|		А.Номенклатура КАК Номенклатура,
	|		А.Емкость КАК Емкость,
	|		А.ПусковойТок КАК ПусковойТок,
	|		А.Остаток КАК Остаток,
	|		ВЫБОР
	|			КОГДА А.Остаток > 50
	|					И &РежимФормирования
	|				ТОГДА "">50""
	|			ИНАЧЕ А.Остаток
	|		КОНЕЦ КАК ОстатокДляКлиента,
	|		ВЫБОР
	|			КОГДА А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
	|					И &РежимФормирования
	|				ТОГДА "">50""
	|			ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
	|		КОНЕЦ КАК СвободныйОстатокДляКлиента,
	|		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
	|		ЕСТЬNULL(ЦеныКрупныйОпт.Цена, 0) КАК ЦенаКрупныйОпт,
	|		ЕСТЬNULL(ЦеныСпец.Цена, 0) КАК ЦенаСпец,
	|		ЕСТЬNULL(ЦеныДилерская.Цена, 0) КАК ЦенаДилерская
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|			ЗнСвОб1.Емкость КАК Емкость,
	|			ЗнСвОб2.ПусковойТок КАК ПусковойТок,
	|			ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток
	|		ИЗ
	|			РегистрНакопления.ТоварыНаСкладах.Остатки(,  {Номенклатура.*} 
	|					НЕ Склад.ЗапретитьИспользование
	|						И НЕ Склад.Транзитный
	|						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ТоварыНаСкладахОстатки
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ЗначенияСвойствОбъектов.Объект КАК Номенклатура,
	|					ЗначенияСвойствОбъектов.Значение КАК Емкость
	|				ИЗ
	|					РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|				ГДЕ
	|					ЗначенияСвойствОбъектов.Свойство = &Емкость) КАК ЗнСвОб1
	|				ПО ТоварыНаСкладахОстатки.Номенклатура = ЗнСвОб1.Номенклатура
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ЗначенияСвойствОбъектов.Объект КАК Номенклатура,
	|					ЗначенияСвойствОбъектов.Значение КАК ПусковойТок
	|				ИЗ
	|					РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|				ГДЕ
	|					ЗначенияСвойствОбъектов.Свойство = &ПусковойТок) КАК ЗнСвОб2
	|				ПО ТоварыНаСкладахОстатки.Номенклатура = ЗнСвОб2.Номенклатура) КАК А
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(,  {Номенклатура.*} 
	|					НЕ ЗаказПокупателя.Транзит
	|						И ЗаказПокупателя.Проверен
	|						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ЗаказыПокупателейОстатки
	|			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, {Номенклатура.*} 
	|					ТипЦен = &ТипЦенКрупныйОпт
	|						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ЦеныКрупныйОпт
	|			ПО А.Номенклатура = ЦеныКрупныйОпт.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,  {Номенклатура.*} 
	|					ТипЦен = &ТипЦенСпецЦена
	|						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ЦеныСпец
	|			ПО А.Номенклатура = ЦеныСпец.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних( , {Номенклатура.*} 
	|					ТипЦен = &ТипЦенДилерская
	|						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ЦеныДилерская
	|			ПО А.Номенклатура = ЦеныДилерская.Номенклатура) КАК Б
	|ГДЕ
	|	Б.ОстатокДляКлиента > 0
	|{ГДЕ 
	|   Б.Номенклатура.*}
	|УПОРЯДОЧИТЬ ПО
	|	Б.Номенклатура.Наименование
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	//+++ 21.08.2015								  
	Если USD тогда								  
		ПостроительОтчетаОтчет.Текст = стрЗаменить(ПостроительОтчетаОтчет.Текст, "//пересчет_в_USD", " /&КурсUSD *100/118");
		ПостроительОтчетаОтчет.Параметры.Вставить("КурсUSD", константы.КурсUSD.Получить() );
	КонецЕсли;				  
	
	СкладАКБ2013 = Справочники.Склады.НайтиПоКоду("00762");		  
	
	ПостроительОтчетаОтчет.Параметры.Вставить("АКБ", АКБ);
	ПостроительОтчетаОтчет.Параметры.Вставить("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));                                                                        
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенСпецЦена", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00013"));  
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенДилерская", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00009"));
	ПостроительОтчетаОтчет.Параметры.Вставить("Емкость", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00132"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ПусковойТок", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90167"));
	
	Результат = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить(); //ИЕРАРХИЯ
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование=Организация.НаименованиеПолное;
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ТекущаяДата=Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	//ОбластьСтрокаСкладов.Параметры.СтрокаСкладов=СтрокаСкладов;
	//ОбластьСтрокаСкладов.Параметры.СтрокаНоменклатуры=СтрокаНоменклатуры;
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	
	путьККартинкамАКБ = "http://photo.yst.ru/batteries/";
	
	Пока ВыборкаДетали.Следующий() Цикл
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии 
			или ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");	
		Иначе
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		КонецЕсли;	
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);	
		
		
		//+++( 18.06.2015	
		Если СокрЛП(ВыборкаДетали.Код)<>"" тогда
			ФайлКартинки = СокрЛП(ВыборкаДетали.Код)+".png";
			ОбластьДетальныхЗаписей.Параметры.ПутьКФото = путьККартинкамАКБ+ФайлКартинки;
		иначе
			ОбластьДетальныхЗаписей.Параметры.ПутьКФото ="";
		КонецЕсли;
		//+++)
		
		
		//	ОбластьДетальныхЗаписей.Параметры.Производитель=ВыборкаДетали.Производитель;
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
КонецПроцедуры

//Орлов++
Процедура ДействияФормыСформироватьТолькоАксессуары(Кнопка)
	
	СтрокаВид="Аксессуары";
	
	началоВр =ТекущаяДата();	
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
	Аксессуары = Справочники.Номенклатура.НайтиПоКоду("0000001");
	
	Если флагШК тогда
		Макет = ПолучитьМакет("ОтчетАксессуарыФото_ШК");
	иначе	
		Макет = ПолучитьМакет("ОтчетАксессуары");
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	
	ПостроительОтчетаОтчет.Текст= "ВЫБРАТЬ
	|	А.Номенклатура КАК Номенклатура,
	|	А.Остаток КАК Остаток
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВсеОстатки.Номенклатура КАК Номенклатура,
	|		СУММА(ВсеОстатки.КоличествоОстаток) КАК Остаток
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|			ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	|		ИЗ
	|			РегистрНакопления.ТоварыНаСкладах.Остатки( ,  {Номенклатура.*} 
	|					Номенклатура В ИЕРАРХИИ (&Аксессуары)
	|					И  НЕ (Номенклатура В Иерархии (&СписокУдаленныхПапок) )
	|						И (НЕ Склад.ЗапретитьИспользование)
	|						И (НЕ Склад.Транзитный) {(Номенклатура).*}) КАК ТоварыНаСкладахОстатки
	|
	//+++ 09.09.2014
	|//ДопОстатки
	|
	|) КАК ВсеОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВсеОстатки.Номенклатура) КАК А
	|ГДЕ
	|	А.Остаток > 0
	//+++ 22.10.2014
	|	       
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.Номенклатура,
	|	А.ЦенаБазовая
	|ПОМЕСТИТЬ ВТ_Цены
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенБазовая
	|				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЦенаБазовая
	|	ИЗ
	|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних( ,{Номенклатура.*}  Номенклатура В
	|						(ВЫБРАТЬ ВТ_Остатки.Номенклатура ИЗ ВТ_Остатки)
	|					И ТипЦен = &ТипЦенБазовая ) КАК ЦеныНоменклатурыСрезПоследних) КАК А
	|
	|СГРУППИРОВАТЬ ПО
	|	А.Номенклатура,
	|	А.ЦенаБазовая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.Номенклатура,
	|	А.ЦенаКрупныйОпт
	|ПОМЕСТИТЬ ВТ_Цены_КрупныйОпт
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенКрупныйОпт
	|				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЦенаКрупныйОпт
	|	ИЗ
	|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, {(Номенклатура).*}
	|						Номенклатура В (ВЫБРАТЬ ВТ_Остатки.Номенклатура ИЗ ВТ_Остатки)
	|					И ТипЦен = &ТипЦенКрупныйОпт
	//{(Номенклатура).*}
	|) КАК ЦеныНоменклатурыСрезПоследних) КАК А
	|
	|СГРУППИРОВАТЬ ПО
	|	А.Номенклатура,
	|	А.ЦенаКрупныйОпт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Остатки.Номенклатура КАК Номенклатура,
	|	ВТ_Остатки.Номенклатура.Наименование как НоменклатураНаименование,
	|	ВТ_Остатки.Номенклатура.Код КАК Код,
	|	ВТ_Остатки.Номенклатура.Артикул КАК Артикул,
	|	ВТ_Остатки.Номенклатура.Родитель КАК Родитель,
	|	ВЫБОР
	|		КОГДА ВТ_Остатки.Остаток > 50
	|				И &РежимФормирования
	|			ТОГДА 51
	|		ИНАЧЕ ВТ_Остатки.Остаток
	|	КОНЕЦ КАК ОстатокДляКлиента,
	|	ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоВРезерве,
	|	ВЫБОР
	|		КОГДА ВТ_Остатки.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
	|				И &РежимФормирования
	|			ТОГДА 51
	|		ИНАЧЕ ВТ_Остатки.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
	|	КОНЕЦ КАК СвободныйОстатокДляКлиента,
	|	ЕСТЬNULL(ВТ_Остатки.Номенклатура.Комментарий, """") КАК Комментарий,
	//+++ 21.08.2015
	|	ВТ_Цены.ЦенаБазовая  //пересчет_в_USD
	|			КАК ЦенаБазовая,
	|	ВТ_Цены_КрупныйОпт.ЦенаКрупныйОпт //пересчет_в_USD
	|			КАК ЦенаКрупныйОпт
	|ИЗ
	|	ВТ_Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(, {(Номенклатура).*}
	|				Номенклатура В (ВЫБРАТЬ ВТ_Остатки.Номенклатура ИЗ ВТ_Остатки)
	|					И (НЕ ЗаказПокупателя.Транзит)
	|					И ЗаказПокупателя.Проверен ) КАК ЗаказыПокупателейОстатки
	|		ПО ВТ_Остатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	|		ПО ВТ_Остатки.Номенклатура = ВТ_Цены.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены_КрупныйОпт КАК ВТ_Цены_КрупныйОпт
	|		ПО ВТ_Остатки.Номенклатура = ВТ_Цены_КрупныйОпт.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Остатки.Номенклатура.Наименование
	|ИТОГИ
	|	СУММА(ОстатокДляКлиента),
	|	СУММА(КоличествоВРезерве),
	|	СУММА(СвободныйОстатокДляКлиента)
	|ПО
	|	Номенклатура ИЕРАРХИЯ";
	
	//+++ 21.08.2015								  
	Если USD тогда								  
		ПостроительОтчетаОтчет.Текст = стрЗаменить(ПостроительОтчетаОтчет.Текст, "//пересчет_в_USD", " /&КурсUSD *100/118");
		ПостроительОтчетаОтчет.Параметры.Вставить("КурсUSD", константы.КурсUSD.Получить() );
	КонецЕсли;									  
	
	//+++ 09.09.2014 - остатки сторонних поставщиков								  
	ПостроительОтчетаОтчет.Текст = 	стрЗаменить(ПостроительОтчетаОтчет.Текст, "//ДопОстатки", " ОБЪЕДИНИТЬ ВСЕ
	|"+"ВЫБРАТЬ
	|	ДопОстатки.Номенклатура,
	|	ДопОстатки.Остаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрСведений.ОстаткиНоменклатурыКонтрагентов КАК ДопОстатки
	|ГДЕ
	|	ДопОстатки.Номенклатура В ИЕРАРХИИ (&Аксессуары)
	//+++ 22.10.2014
	|	И  НЕ (ДопОстатки.Номенклатура В Иерархии (&СписокУдаленныхПапок) )
	
	|	И ДопОстатки.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ДопОстатки.Остаток > 0
	|{ГДЕ
	|	ДопОстатки.Номенклатура.*}");
	
	//+++ 22.10.2014
	СписокУдаленныхПапок = получитьСписокУдаленныхПапок();
	ПостроительОтчетаОтчет.Параметры.Вставить("СписокУдаленныхПапок", СписокУдаленныхПапок);
	
	ПостроительОтчетаОтчет.Параметры.Вставить("Аксессуары", Аксессуары);
	ПостроительОтчетаОтчет.Параметры.Вставить("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));                                                                        
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	
	Результат = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	
	//Смирнов 24.03.14
	//состояние("Идет получение фото Аксессуаров с FTP...");
	путьККартинкамАксессуаров = "http://photo.yst.ru/accessories/";
	типФайла = ".png";
	//Если ФлФотоАксАКБ тогда
	//	СписокФайловФТП=ПолучитьФайлыФТП(путьККартинкамАксессуаров);
	//	состояние("Получено "+строка(СписокФайловФТП.Количество())+" фото Аксессуаров с FTP...");
	//КонецЕсли;
	//Смирнов 24.03.14
	
	Папки = справочники.Номенклатура.НайтиПоКоду("9165781");
	NovLine = справочники.Номенклатура.НайтиПоКоду("9145226"); //яНОМЕНКЛАТУРА NOVLINE
	Родитель = "";
	Пока ВыборкаДетали.Следующий() Цикл
		если ВыборкаДетали.Номенклатура = Аксессуары  //+++ 22.10.2014 - лишние группировки убираем
			или ВыборкаДетали.Номенклатура = Папки 
			или ВыборкаДетали.Номенклатура = NovLine тогда 
			
			Продолжить; // главную папку не надо!
		КонецЕсли;	
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии 
			или ВыборкаДетали.Номенклатура.ЭтоГруппа Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");
			Родитель = ВыборкаДетали.Номенклатура;//+++ 13.12.2014
		ИначеЕсли 	ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		Иначе Продолжить;
		КонецЕсли;	
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ОбластьДетальныхЗаписей.Параметры.Родитель = Родитель;//+++ 13.12.2014
		
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда // для клиентов
			Если ВидОтчета =0  тогда
				Если ВыборкаДетали.ОстатокДляКлиента>50 Тогда
					ОбластьДетальныхЗаписей.Параметры.ОстатокДляКлиента = ">50" ;
				КонецЕсли;	
				
				Если ВыборкаДетали.СвободныйОстатокДляКлиента>50 Тогда
					ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = ">50";
				ИначеЕсли ВыборкаДетали.СвободныйОстатокДляКлиента<0 Тогда
					ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = "";
				КонецЕсли;	
			КонецЕсли;
		
			Если флагШК тогда //+++ 06.05.2015
				ШтрихКод=ПолучитьКодШтрихКода(СокрЛП(ВыборкаДетали.Код));
				Если ШтрихКод=0 тогда
					ОбластьДетальныхЗаписей.Параметры.ШК = "";
				иначе
					ОбластьДетальныхЗаписей.Параметры.ШК = ШтрихКод;
				КонецЕсли;
			Иначе //25.04.2018 - фото товара
				ОбластьДетальныхЗаписей.Параметры.ПутьКФото = путьККартинкамАксессуаров +СокрЛП(нРЕГ(ВыборкаДетали.Код))+типФайла; 
			КонецЕсли;
		КонецЕсли;	//детальных

		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
		
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
	парамЗапроса = "Аксессуары"; 
	Если ВремяВыполнения>0 тогда
	//	ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 171, ВремяВыполнения, "Кнопка [Сформировать] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
			сообщить("-------------Полное время формирования прайса: "+строка(цел(ВремяВыполнения/60))+" мин. "+строка(ВремяВыполнения - цел(ВремяВыполнения/60)*60)+" сек.------------");
	КонецЕсли;	
	
КонецПроцедуры
//Орлов--


//02.06.2016 вывод в отчет только крепёж 
Процедура ДействияФормыСформироватьТолькоКрепёж(Кнопка)
	   
    СтрокаВид="Крепёж";
    Комплектующие =Справочники.Номенклатура.НайтиПоКоду("0000701");
    Крышки = Справочники.Номенклатура.НайтиПоКоду("0080004");
    Коробки = Справочники.Номенклатура.НайтиПоКоду("9176870");
    Вентили = Справочники.Номенклатура.НайтиПоКоду("9190192");
    Ключи = Справочники.Номенклатура.НайтиПоКоду("0000720");
    
    ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
    ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
    ТолькоБрак = ложь;
    Макет = ПолучитьМакет("ОтчетКрепёж");	
    началоВр =ТекущаяДата(); 	
    
	//ЗапросКрепёж = Новый Запрос;
	//ПостроительОтчетаОтчет.Текст = 
	//"ВЫБРАТЬ
	//|	ТоварыНаСкладахОстатки.Номенклатура.Родитель КАК Родитель,
	//|	ТоварыНаСкладахОстатки.Номенклатура.Производитель КАК Производитель,
	//|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	//|	ТоварыНаСкладахОстатки.Номенклатура.Код КАК Код,
	//|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокДляКлиента
	//|ПОМЕСТИТЬ ВТ_первая
	//|ИЗ
	//|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	//|			,
	//|			Номенклатура В ИЕРАРХИИ (&Комплектующие)
	//|				И НЕ Склад.Транзитный
	//|				И НЕ Склад.ЗапретитьИспользование
	//|				И НЕ Номенклатура В ИЕРАРХИИ (&Крышки)
	//|				И НЕ Номенклатура В ИЕРАРХИИ (&Вентили)
	//|				И НЕ Номенклатура В ИЕРАРХИИ (&Коробки)
	//|				И НЕ Номенклатура В ИЕРАРХИИ (&Ключи)) КАК ТоварыНаСкладахОстатки
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_первая.Родитель,
	//|	ВТ_первая.Производитель,
	//|	ВТ_первая.Номенклатура,
	//|	ВТ_первая.Код,
	//|	ВТ_первая.ОстатокДляКлиента,
	//|	ВТ_первая.ОстатокДляКлиента - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстатокДляКлиента
	//|ПОМЕСТИТЬ ВТ_Вторая
	//|ИЗ
	//|	ВТ_первая КАК ВТ_первая
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	//|				,
	//|				Номенклатура В
	//|						(ВЫБРАТЬ
	//|							ВТ_первая.Номенклатура
	//|						ИЗ
	//|							ВТ_первая КАК ВТ_первая)
	//|					И ЗаказПокупателя.Проверен
	//|					И НЕ ЗаказПокупателя.Транзит) КАК ЗаказыПокупателейОстатки
	//|		ПО ВТ_первая.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_Вторая.Родитель.Наименование КАК Родитель,
	//|	ВТ_Вторая.Производитель.Наименование КАК Производитель,
	//|	ВТ_Вторая.Номенклатура.Наименование КАК Номенклатура,
	//|	ВТ_Вторая.Код,
	//|	ВЫБОР
	//|		КОГДА ВТ_Вторая.ОстатокДляКлиента > 50
	//|				И &РежимФормирования
	//|			ТОГДА "">50""
	//|		ИНАЧЕ ВТ_Вторая.ОстатокДляКлиента
	//|	КОНЕЦ КАК ОстатокдляКлиента,
	//|	ВЫБОР
	//|		КОГДА ВТ_Вторая.СвободныйОстатокДляКлиента > 50
	//|				И &РежимФормирования
	//|			ТОГДА "">50""
	//|		ИНАЧЕ ВТ_Вторая.СвободныйОстатокДляКлиента
	//|	КОНЕЦ КАК СвободныйОстатокДляКлиента,
	//|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ЦенаБазовая
	//|ИЗ
	//|	ВТ_Вторая КАК ВТ_Вторая
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	//|				,
	//|				Номенклатура В
	//|						(ВЫБРАТЬ
	//|							ВТ_первая.Номенклатура
	//|						ИЗ
	//|							ВТ_первая КАК ВТ_первая)
	//|					И ТипЦен = &ЦенаБазовая) КАК ЦеныНоменклатурыСрезПоследних
	//|		ПО ВТ_Вторая.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ВТ_Вторая.Родитель.Наименование";
	//
	//ПостроительОтчетаОтчет.Параметры.Вставить("Комплектующие",Комплектующие);
	//ПостроительОтчетаОтчет.Параметры.Вставить("Крышки",Крышки);
	//ПостроительОтчетаОтчет.Параметры.Вставить("Коробки",Коробки);
	//ПостроительОтчетаОтчет.Параметры.Вставить("Вентили",Вентили);
	//ПостроительОтчетаОтчет.Параметры.Вставить("Ключи",Ключи);	
	//ПостроительОтчетаОтчет.Параметры.Вставить("РежимФормирования", ?(ВидОтчета=0, Истина, Ложь ));
	//ПостроительОтчетаОтчет.Параметры.Вставить("ЦенаБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
	//ВыборкаДетальныеЗаписи = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить().Выбрать();	
    
	
	
	
	Камеры=Справочники.Номенклатура.НайтиПоКоду("0001127");
	Кольца=Справочники.Номенклатура.НайтиПоКоду("4104444");
	ОбодныеЛенты=Справочники.Номенклатура.НайтиПоКоду("0060110");
	//Шины=Справочники.Номенклатура.НайтиПоКоду("0001746");
	//Шипы=Справочники.Номенклатура.НайтиПоКоду("0060001");
	Крышки=Справочники.Номенклатура.НайтиПоКоду("0080004");
	//////
	Болты = Справочники.Номенклатура.НайтиПоКоду("0000702");
	Гайки = Справочники.Номенклатура.НайтиПоКоду("0000713");
	Кольца = Справочники.Номенклатура.НайтиПоКоду("0000726");
	
	текст1 =
		?(USD, "ВЫБРАТЬ
		|	Цены2.Номенклатура КАК Номенклатура,
		|	Цены2.МинимальнаяЦена КАК Цена
		|ПОМЕСТИТЬ ВТ_ЦеныUSD
		|ИЗ
		|	&Табл222 КАК Цены2
		|ГДЕ  {Номенклатура.*} Цены2.Номенклатура В ИЕРАРХИИ (&Болты)
		| Или (Цены2.Номенклатура В ИЕРАРХИИ (&Гайки))
		| Или (Цены2.Номенклатура В ИЕРАРХИИ (&Кольца))
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|", "")+
		
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|Номенклатура.Ссылка 
		|ПОМЕСТИТЬ ВТ_НоменклатураКрепёж
		|ИЗ
		|Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|(Номенклатура.Ссылка В ИЕРАРХИИ (&Болты)
		|	ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&Гайки)
		|	ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&Кольца))
		|И НЕ Номенклатура.ЭтоГруппа
		|И НЕ Номенклатура.ПометкаУдаления
		|;
 		|ВЫБРАТЬ
		|	Б.Номенклатура,
		|	Б.Номенклатура.Родитель КАК Родитель,
		|	Б.Номенклатура.Код КАК Код,
		|	Б.Типоразмер.Ширина КАК Ширина,
		|	Б.Типоразмер.Высота КАК Высота,
		|	Б.Типоразмер.Диаметр КАК Диаметр,
		|	Б.Типоразмер.КоличествоОтверстий КАК КоличествоОтверстий,
		|	Б.Типоразмер.PCD КАК PCD,
		|	Б.Типоразмер.Вылет КАК Вылет,
		|	Б.Типоразмер.ДиаметрСтупицы КАК ДиаметрСтупицы,
		|	Б.Номенклатура.Модель КАК Модель,
		|	Б.Номенклатура.Артикул КАК Артикул,
		|	Б.Номенклатура.Производитель КАК Производитель,
		|	Б.ОстатокДляКлиента,
		|	Б.КоличествоВПути,
		|	Б.КоличествоПриход2Недели,
		|	Б.КоличествоПриход2Месяца,
		|	Б.КоличествоВПроизводстве,
		|	Б.СвободныйОстатокДляКлиента,
		|	Б.КОличествоВРезерве,
		//01.03.2016
		|	Б.Номенклатура.ЕдиницаХраненияОстатков.Вес как Вес,
		|	Б.Номенклатура.ЕдиницаХраненияОстатков.Объем как Объем,
		
		|	Б.Цвет КАК Цвет,
		|"+?(ТолькоБрак,"Б.Качество как Качество","Б.ЦенаБазовая КАК ЦенаБазовая")+"
		|ИЗ
		|	(ВЫБРАТЬ
		|		А.Номенклатура КАК Номенклатура,
		|		А.Номенклатура.Родитель КАК Родитель,
		|		А.Номенклатура.Код КАК Код,
		|		А.Номенклатура.Типоразмер КАК Типоразмер,
		|		А.Номенклатура.Производитель КАК Производитель,
		|		А.Остаток КАК Остаток,
		|		А.КоличествоВПути КАК КоличествоВПути,
		|		А.КоличествоПриход2Недели КАК КоличествоПриход2Недели,
		|		А.КоличествоПриход2Месяца КАК КоличествоПриход2Месяца,
		|		ВЫБОР
		|			КОГДА А.Остаток > 50
		|					И &РежимФормирования
		|				ТОГДА 51
		|			ИНАЧЕ А.Остаток
		|		КОНЕЦ КАК ОстатокДляКлиента,
		//-------------------------------------------------------------------------------------------
		|		ВЫБОР
		|				КОГДА (А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) > 50
		|						И &РежимФормирования
		|					ТОГДА 51
		|				ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
		|		КОНЕЦ
		|	КАК СвободныйОстатокДляКлиента,
		
		|		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
		|"+?(ТолькоБрак, "ЕСТЬNULL(А.Качество,"""") как Качество", "ЕСТЬNULL(ЦеныБазовая.Цена, 0) КАК ЦенаБазовая")+",
		|		ЗначенияСвойствобъектов.Цвет КАК Цвет,
		|		А.КоличествоВПроизводстве КАК КоличествоВПроизводстве
		//=============Б============================================================================ 
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Б.Номенклатура КАК Номенклатура,
		|"+?(ТолькоБрак, "Б.Качество как Качество,","")+"
		|			СУММА(Б.Остаток) КАК Остаток,
		|			СУММА(Б.КоличествоВПути) КАК КоличествоВПути,
		|			СУММА(Б.КоличествоПриход2Недели) КАК КоличествоПриход2Недели,
		|			СУММА(Б.КоличествоПриход2Месяца) КАК КоличествоПриход2Месяца,
		|			СУММА(Б.КоличествоВПроизводстве) КАК КоличествоВПроизводстве
		|		ИЗ
		|			(
		|			ВЫБРАТЬ
		|				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|				ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
		|"+?(ТолькоБрак, "ТоварыНаСкладахОстатки.Качество как Качество,","")+"
		|				0 КАК КоличествоВПути,
		|				0 КАК КоличествоПриход2Недели,
		|				0 КАК КоличествоПриход2Месяца,
		|				0 КАК КоличествоВПроизводстве
		|			ИЗ
		|				РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.*} Номенклатура В ИЕРАРХИИ (&Болты)
		|                              Или (Номенклатура В ИЕРАРХИИ (&Гайки))
		|                              Или (Номенклатура В ИЕРАРХИИ (&Кольца))
		|							И ("+?(ТолькоБрак,
		"Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее) И",
		"НЕ")+" Склад.ЗапретитьИспользование)
		|							И (НЕ Склад.Транзитный) ) КАК ТоварыНаСкладахОстатки
		|
		|			ГДЕ ТоварыНаСкладахОстатки.КоличествоОстаток>0
		//=============================в пути============================================================ 
		|"+?(ТолькоБрак,"", 
		"	ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				регТоварыВПути.Номенклатура,
		|				0,
		|				СУММА(регТоварыВПути.КоличествоОстаток),
		|				СУММА(регТоварыВПути.КоличествоПриход2Недели),
		|				СУММА(регТоварыВПути.КоличествоПриход2Месяца),
		|				0
		|			ИЗ
		|				(ВЫБРАТЬ
		|						ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступленияВПорт,
		|					ВЫБОР
		|						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		//-------------очень старые приходы - уже не придут! --------------------------
		|						И (ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления >= ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, -3)
		|							или ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления=&ПустаяДата)
		|							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
		|						ИНАЧЕ 0
		|					КОНЕЦ КАК КоличествоПриход2Недели,
		|					ВЫБОР
		|						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		// |						И ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 61 - 5)
		|					ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
		|						ИНАЧЕ 0
		|					КОНЕЦ КАК КоличествоПриход2Месяца,
		|					ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
		|					ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		|					ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
		|				ИЗ
		|					РегистрНакопления.ЗаказыПоставщикам.Остатки(,  {Номенклатура.*}  Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
		|								И (НЕ ЗаказПоставщику.Транзит)) КАК ЗаказыПоставщикамОстатки
		|) КАК регТоварыВПути
		|
		|ГДЕ регТоварыВПути.КоличествоОстаток>0  
		|или регТоварыВПути.КоличествоПриход2Недели>0
		|или регТоварыВПути.КоличествоПриход2Месяца>0
		|
		|			СГРУППИРОВАТЬ ПО
		|				регТоварыВПути.Номенклатура
		
		//+++ 16.12.2013=================ОТХ увеличивает остаток Дисков на складах===========================
		|			ОБЪЕДИНИТЬ ВСЕ 
		|			Выбрать 
		|			ОстаткиОТХ.Номенклатура,
		|			Сумма(ОстаткиОТХ.КоличествоОстаток),
		|			Сумма(0),
		|			Сумма(0),
		|			Сумма(0),
		|			Сумма(0)
		|			из (выбрать отх.Номенклатура, отх.КоличествоОстаток 
		|				из РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( ,  {Номенклатура.*}  (НЕ Склад.Транзитный) И (НЕ Склад.ЗапретитьИспользование)
		|											И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
		|											И Контрагент В(&СписокПоставщиковОТХ) ) как отх
		|ГДЕ отх.КоличествоОстаток>0
		|				)как ОстаткиОТХ
		|			СГРУППИРОВАТЬ ПО
		|			ОстаткиОТХ.Номенклатура
		
		
		////==========================Товары в производстве только для менеджеров!============================
		|//ТоварыВПроизводстве
		|")+"
		|) КАК Б
		|		СГРУППИРОВАТЬ ПО
		|			Б.Номенклатура
		|"+?(ТолькоБрак, ",Б.Качество","")+"
		
		//============================= конец Б сгруппировано по номенклатуре ===========================================================
		|
		|	) КАК А
		
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки( ,  {Номенклатура.*}  ЗаказПокупателя.Проверен 
		|					И (НЕ ЗаказПокупателя.Транзит)  
		|	"+?(ТолькоБрак,"И заказПокупателя.ПометкаУдаления","")+"
		|					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
		|																		) КАК ЗаказыПокупателейОстатки
		|			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
		
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ЗначенияСвойствобъектов.Объект КАК Объект,
		|				ЗначенияСвойствобъектов.Значение КАК Цвет
		|			ИЗ
		|				РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствобъектов
		|			ГДЕ
		|				ЗначенияСвойствобъектов.Свойство = &СвойствоЦвет) КАК ЗначенияСвойствобъектов
		|			ПО А.Номенклатура = ЗначенияСвойствобъектов.Объект
		|
		|"+?(ТолькоБрак, "",  
		//===========================================================USD NEW ================================================================								 
		//25.02.2016
		?(USD,
		" ЛЕВОЕ СОЕДИНЕНИЕ
		|(выбрать ВТЦеныUSD.Номенклатура, ВТЦеныUSD.Цена из ВТ_ЦеныUSD как ВТЦеныUSD) 
		|	КАК ЦеныБазовая
		|			ПО А.Номенклатура = ЦеныБазовая.Номенклатура"
		,      
		//=========================================================== руб ================================================================								 
		" ЛЕВОЕ СОЕДИНЕНИЕ
		|РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,  {Номенклатура.*} ТипЦен = &ТипЦенБазовая) КАК ЦеныБазовая
		|			ПО А.Номенклатура = ЦеныБазовая.Номенклатура"
		)
		//===========================================================================================================================								 
		)+"
		|) КАК Б
		|ГДЕ
		|	(НЕ Б.Номенклатура В ИЕРАРХИИ (&Крышки))
		|	И (Б.ОстатокДляКлиента > 0
		|			ИЛИ Б.КоличествоВПути > 0
		//+++ 22.10.2014 - вот это главное! контроль остатков >0 в каждом под-запросе отдельно
		|	"+?(исклБолее45,"","ИЛИ Б.КоличествоВПроизводстве > 0")+" )
		|И Б.Номенклатура В
		|	(ВЫБРАТЬ
		|		ВТ_НоменклатураКрепёж.Ссылка
		|	ИЗ
		|		ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Родитель,
		|	Б.Номенклатура.Производитель.Наименование,
		|	Б.Номенклатура.Модель.Наименование,
		|	Б.Номенклатура.Типоразмер.Наименование,
		|	Б.Номенклатура.Наименование
		|"+?(ТолькоБрак,",Б.Качество.Код","");	
	
	//Если ВидОтчета=1 тогда //24.06.2015 - и для клиентов! только для менеджеров!
	Если НЕ ТолькоБрак и не исклБолее45 тогда //14.08.2018 - не нужно производство!
		Текст1 = стрЗаменить(Текст1,"//ТоварыВПроизводстве",
		"ОБЪЕДИНИТЬ ВСЕ
		|			
		|"+"			ВЫБРАТЬ
		|				регТоварыВПроизводстве.Номенклатура,
		|				0,
		|				0,
		|				0,
		|				0,
		|				выбор когда &РежимФормирования и Сумма(регТоварыВПроизводстве.КоличествоОстаток)>50 тогда 51
		|				иначе Сумма(регТоварыВПроизводстве.КоличествоОстаток) конец
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ЗаказыПоставщикуСезонныеОстатки.Номенклатура КАК Номенклатура,
		|					ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток КАК КоличествоОстаток
		|				ИЗ
		|					РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(&ТекущаяДата,  {Номенклатура.*}  
		|								(НЕ ЗаказПоставщикуСезонный.Транзит)
												//07.12.2016
		|								И (ЗаказПоставщикуСезонный.ДатаДействияПо>=&ТекущаяДатаСезЗак) И
		|								 Номенклатура В ИЕРАРХИИ (&Болты)
		|								 или Номенклатура В ИЕРАРХИИ (&Гайки)
		|								 или Номенклатура В ИЕРАРХИИ (&Кольца)
		|																		) КАК ЗаказыПоставщикуСезонныеОстатки
		|		ГДЕ ЕстьNull(ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток,0) > 0
		|				) КАК регТоварыВПроизводстве
		|			
		|			СГРУППИРОВАТЬ ПО
		|				регТоварыВПроизводстве.Номенклатура
		|");
	КонецЕсли;	
	
	//25.02.2016
	Если USD и не ВыводитьПрименяемость тогда
		
		Запрос1 = новый Запрос;
//		Запрос1.Текст = текст1;
		Запрос1.Текст = текстДляКрепежаUSD();

		Запрос1.Параметры.Вставить("Болты", Болты);
		Запрос1.Параметры.Вставить("Гайки", Гайки);
		Запрос1.Параметры.Вставить("Кольца", Кольца);
		//Запрос1.Параметры.Вставить("Шины", Шины);
		Запрос1.Параметры.Вставить("Крышки", Крышки);
		Запрос1.Параметры.Вставить("Прочее", Перечисления.ВидыТоваров.Прочее);                                                                        
		Запрос1.Параметры.Вставить("РежимФормирования", ?(ВидОтчета=0, Истина, Ложь ));
		Запрос1.Параметры.Вставить("ГрузовыеДиски", Справочники.Номенклатура.НайтиПоКоду("9004163")); // грузовыедиски
		
		СписокПоставщиковОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);  //+++ 21.05.2015  - ВСЕ!
		Запрос1.Параметры.Вставить("СписокПоставщиковОТХ", СписокПоставщиковОТХ); //+++ 24.12.2013  аналогично как в шинах!
		
		Запрос1.Параметры.Вставить("ПустаяДата", '00010101');
		Запрос1.Параметры.Вставить("ТекущаяДата", ТекущаяДата());
		Запрос1.Параметры.Вставить("ТекущаяДатаСезЗак", ДобавитьМесяц( ТекущаяДата(), -1) );  //07.12.2016

		Запрос1.Параметры.Вставить("СвойствоЦвет", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166"));	
		
		КонтрC  = справочники.Контрагенты.НайтиПоКоду("11033  ");
		СписНом = неопределено;
		Состояние("Идет расчет цен USD для клиента "+строка(КонтрC));
		ТаблUSD = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСвЭкспорт(КонтрC, СписНом);
		Запрос1.Параметры.Вставить("Табл222", ТаблUSD);
		Состояние("Найдено "+строка(ТаблUSD)+" цен");
	иначе
		
		//ПостроительОтчетаОтчет.текст = текст1;
		ПостроительОтчетаОтчет.текст = текстДляКрепежа();
		
		ПостроительОтчетаОтчет.Параметры.Вставить("Болты", Болты);
		ПостроительОтчетаОтчет.Параметры.Вставить("Гайки", Гайки);
		ПостроительОтчетаОтчет.Параметры.Вставить("Кольца", Кольца);
		ПостроительОтчетаОтчет.Параметры.Вставить("Вентили", Вентили);
		ПостроительОтчетаОтчет.Параметры.Вставить("Крышки", Крышки);
		ПостроительОтчетаОтчет.Параметры.Вставить("Прочее", Перечисления.ВидыТоваров.Прочее);                                                                        
		ПостроительОтчетаОтчет.Параметры.Вставить("РежимФормирования", ?(ВидОтчета=0, Истина, Ложь ));
		//ПостроительОтчетаОтчет.Параметры.Вставить("ГрузовыеДиски", Справочники.Номенклатура.НайтиПоКоду("9004163")); // грузовыедиски
		////02.06.2016
		//ПостроительОтчетаОтчет.Параметры.Вставить("Комплектующие", Комплектующие);
		//02.06.2016
		
		СписокПоставщиковОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);  //+++ 21.05.2015  - ВСЕ!
		ПостроительОтчетаОтчет.Параметры.Вставить("СписокПоставщиковОТХ", СписокПоставщиковОТХ); //+++ 24.12.2013  аналогично как в шинах!
		
		ПостроительОтчетаОтчет.Параметры.Вставить("ПустаяДата", '00010101');
		ПостроительОтчетаОтчет.Параметры.Вставить("ТекущаяДата", ТекущаяДата());
		ПостроительОтчетаОтчет.Параметры.Вставить("ТекущаяДатаСезЗак", ДобавитьМесяц( ТекущаяДата(), -1) );  //07.12.2016
		ПостроительОтчетаОтчет.Параметры.Вставить("СвойствоЦвет", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166"));	
		
	КонецЕсли;
	
	tt=текущаяДата();
	состояние("Идет формирование запроса по выбранным условиям...");	
	
	Если USD тогда								  
		//		ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00028")); // Базовая USD
		Результат = Запрос1.Выполнить(); // это Запрос!
	Иначе
		ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
		Результат = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить();
	КонецЕсли;	
	
	ttt = текущаяДата() - tt;
	состояние("Данные получены. Время выполнения запроса "+строка(ttt)+" сек.");

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	
    ///==================вывод отчета==================
    ТекущаяДата = ТекущаяДата(); 
    
    ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
    Организация=Справочники.Организации.НайтиПоКоду("00001");
    ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование=Организация.НаименованиеПолное;
    ОбластьЗаголовок.Параметры.ТекущаяДата = Формат(ТекущаяДата,"ДФ=dd.MM.yyyy");
    СведенияОбОрганизации  = СведенияОЮрФизЛице(Организация,ТекущаяДата);
    ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
    ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата;
 
    
    ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
    ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
    ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
    
    ТабДок.Очистить();
    ТабДок.Вывести(ОбластьЗаголовок);
    
    ТабДок.Вывести(ОбластьШапкаТаблицы);
    ТабДок.НачатьАвтогруппировкуСтрок();
    
    
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл      	
    	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
    	ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);			
		
		Если ВидОтчета =0 Тогда // для клиентов
			Если ВыборкаДетальныеЗаписи.ОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.ОстатокДляКлиента = ">50" ;
			КонецЕсли;	
			
			Если ВыборкаДетальныеЗаписи.СвободныйОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = ">50";
				//ИначеЕсли ВыборкаДетали.СвободныйОстатокДляКлиента<0 Тогда
				//	ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = "";
			КонецЕсли;	
			
			// до 14 дней (включительно)
			Если ВыборкаДетальныеЗаписи.КоличествоПриход2Недели>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоПриход2Недели = ">50";
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоПриход2Недели<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоПриход2Недели = "";
			КонецЕсли;
			//от [15 до 45] дней (включительно)
			Если ВыборкаДетальныеЗаписи.КоличествоПриход2Месяца>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоПриход2Месяца = ">50";
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоПриход2Месяца<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоПриход2Месяца = "";
			КонецЕсли;
			//+++ 24.06.2015 только "в производстве"!			
			Если ВыборкаДетальныеЗаписи.КоличествоВПроизводстве>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоВПроизводстве = ">50";
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоВПроизводстве<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоВПроизводстве = "";
			КонецЕсли;
			
		КонецЕсли; 		
    	ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
    КонецЦикла;
	
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
    
    //=================== служебные ==================
    КонецВр = ТекущаяДата();
    ВремяВыполнения = Число(КонецВр - началоВр);	
    парамЗапроса = "Крепёж"; 
    Если ВремяВыполнения>0 тогда
    	//общий модуль:  яштПрочее.ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки(
    	//ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 171, ВремяВыполнения, "Кнопка [Сформировать] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
		сообщить("-------------Полное время формирования прайса: "+строка(цел(ВремяВыполнения/60))+" мин. "+строка(ВремяВыполнения - цел(ВремяВыполнения/60)*60)+" сек.------------");
    КонецЕсли;	
    //+++)   18.05.2012
    
    //+++ 20.09.2013 - ограничение для Филиалов	
    Если не ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") тогда
    	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0, Истина, Ложь);
    КонецЕсли;   		
КонецПроцедуры
//конец 02.06.2016 вывод в отчет только крепёж

функция ПолучитьКодШтрихКода( КодТов ) 
	
	запрос = новый Запрос;
	запрос.Текст = "ВЫБРАТЬ
	|	ШК.Код,
	|	ШК.ТипШтрихкода,
	|	ШК.Штрихкод,
	|	ШК.Владелец,
	|	ШК.ЕдиницаИзмерения,
	|	ШК.ХарактеристикаНоменклатуры,
	|	ШК.СерияНоменклатуры,
	|	ШК.Качество
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК ШК
	|ГДЕ
	|	ШК.Владелец.Код = &Код";
	запрос.Параметры.Вставить("Код", КодТов);
	рез = запрос.Выполнить().Выбрать();
	
	если рез.Следующий() тогда
		ШК = рез.Штрихкод;
	иначе 
		ШК = 0; //ПолучитьНовыйКодДляШтрихКодаЯШТ(КодТов);
	КонецЕсли;
	
	возврат ШК;
	
конецФункции

//+++ 16.03.2012 наш штрихКод
функция ПолучитьНовыйКодДляШтрихКодаЯШТ(Код)
	
	Если стрДлина(Код)<7 тогда
		код1 = Формат(число(Код), "ЧЦ=7; ЧВН=");
	иначе 
		код1 = код;
	КонецЕсли;	
	
	ШтрихКод = "05000"+ Код;
	ШтрихКод = ШтрихКод + КонтрольныйСимволEAN(ШтрихКод, 13);
	
	возврат ШтрихКод;
	
КонецФункции

Функция ОтделитьРазделителем(Стр, Знач Разделитель, Режим=0)
	
	ПраваяЧасть         = "";
	ПозРазделителя      = Найти(Стр, Разделитель);
	ДлинаРазделителя    = СтрДлина(Разделитель);
	Если ПозРазделителя > 0 Тогда
		ПраваяЧасть	 = Сред(Стр, ПозРазделителя + ?(Режим=2, 0, ДлинаРазделителя));
		Стр          = СокрЛП(Лев(Стр, ПозРазделителя - ?(Режим=1, -ДлинаРазделителя + 1, 1)));
	КонецЕсли;
	
	Возврат(ПраваяЧасть);
	
КонецФункции // ОтделитьРазделителем()

// Преобразует значения из строки в массив, используя указанный разделитель
//
// Параметры:
//  Стр            - Разбираемая строка
//  Разделитель    - подстрока разделитель
//
// Возвращаемое значение:
//  Массив значений
// 
Функция МассивИзСтроки(Знач Стр, Разделитель=",")
	
	Массив      = Новый Массив;
	ПраваяЧасть = ОтделитьРазделителем(Стр, Разделитель);
	
	Пока Не ПустаяСтрока(Стр) Цикл
		Массив.Добавить(СокрЛП(Стр));
		Стр         = ПраваяЧасть;
		ПраваяЧасть = ОтделитьРазделителем(Стр, Разделитель);
	КонецЦикла; 
	
	Возврат(Массив);
	
КонецФункции // МассивИзСтроки() 




//=====================================================================
Процедура ДействияФормыНастройка(Кнопка)
	
	Форма = ВнешняяОбработкаОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	
	
	//текущие настройки, возможно уже измененные ранее в этой же Настройке
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Настройка <> Неопределено Тогда
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;
	
	
	
	Если Форма.ОткрытьМодально() = Истина Тогда
		
		//сразу если надо формировать - то формируем Шины
		ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
		ТолькоДиски=Ложь;
		ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
		ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
		
		//Формируем отчет по этим настройкам
		// Отчет(ТабДок);
		
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;
	
	
	
КонецПроцедуры

функция  ТекстНачальногоЗапроса();
	
	Текст= "
	|ВЫБРАТЬ Номенклатура
	|ИЗ 	РегистрНакопления.ЗаказыПокупателей.Остатки(,  
	| Не ЗаказПокупателя.Транзит И ЗаказПокупателя.Проверен) ЗаказыПокупателейОстатки";				
	
	Возврат Текст;
	
КонецФункции


//+++ настройка Построителя
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ПостроительОтчетаОтчет.Текст = ТекстНачальногоЗапроса();
	
	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	//ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	//ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет";
	//Настройка = ВосстановитьЗначение("НастройкаВнешниеОбработкиПрайсЛистСОстаткамиДляКлиентовОтчет_3e223a19-3506-4b69-bfbf-8d521b1048fd");
	//Если Настройка <> Неопределено Тогда
	//	ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	//КонецЕсли;
	
КонецПроцедуры


Процедура ПриЗакрытии()
	//СохранитьЗначение("НастройкаВнешниеОбработкиПрайсЛистСОстаткамиДляКлиентовОтчет_3e223a19-3506-4b69-bfbf-8d521b1048fd", ПостроительОтчетаОтчет.ПолучитьНастройки());
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если Найти(Элемент.ТекущаяОбласть.Имя, ?(ВидОтчета=1,"C22","C21") )>0 тогда //картинка
		
		ПутьДоКартинки = Элемент.ТекущаяОбласть.текст;
		
		Если СокрЛП(ПутьДоКартинки)<>"" тогда
			СтандартнаяОбработка=ложь;
			форма1 = ЭтотОбъект.ПолучитьФорму("ФормаФото");
			форма1.ЭлементыФормы.ПолеHTMLДокумента.УстановитьТекст("<img  src=""" +ПутьДоКартинки+""" > </img>");
			форма1.ЭлементыФормы.Надпись1.значение = СокрЛП(ПутьДоКартинки);
			форма1.Заголовок = Расшифровка.Код+" ) "+Расшифровка.НаименованиеПолное;
			форма1.Открыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтображатьКодПроизводителяПриИзменении(Элемент)
	ТабДок =ЭлементыФормы.ПолеТабличногоДокумента;
	
	ТабДок.Область("C14").Видимость=ОтображатьКодПроизводителя;
	
	
КонецПроцедуры


//=============================================================================
Функция ПолучитьФайлыФТП(Путь, СписокФайлов=неопределено)
	
	//имя и пароль для фото - НЕ Используется!
		 ipФТП = "photo.yst.ru"; //188.225.16.133>>"photo.yst.ru"  
    ИмяФТПфото = "";
 парольФТПфото = "";
	
	ПутьFTP = стрЗаменить(Путь, "http://photo.yst.ru/", "/photo.yst.ru/public_html/");
	
	Если СписокФайлов=неопределено тогда
		СписокФайлов=новый СписокЗначений;
	КонецЕсли;	 
	
	Попытка  
		
		Если НеВыгружатьНаFTP=ЛОЖЬ //21.11.2017
			и врФТП = неопределено тогда //не каждый раз, а 1 раз!
 			врФТП = Новый FTPСоединение(ipФТП ,, имяФТПфото, парольФТПфото,, Истина );
			Масс= врФТП.НайтиФайлы(ПутьFTP,"*.png",истина);
			для каждого элМасс из Масс Цикл
			СписокФайлов.Добавить(элМасс.Имя);
			КонецЦикла;	
			сообщить("Найдено "+строка(Масс.Количество())+" файлов в папке ftp://"+ipФТП+ПутьFTP);
		КонецЕсли;	
			
		возврат СписокФайлов;
		
	Исключение
		сообщить("Ошибка соединения с FTP: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
	
	возврат СписокФайлов;
КонецФункции	

функция ВыгрузитьДанные(Excel, номСтр=1, НазвСтр="Ярославль")
	
	ExcelЛист = Excel.WorkSheets(номСтр);
	ExcelЛист.Name = НазвСтр;
	ExcelЛист.Activate();
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	N = ТабДок.ВысотаТаблицы-2;
	M = ТабДок.ШиринаТаблицы; 
	k = 0;
	
	Если USD тогда  //+++ 21.08.2015
		ExcelЛист.cells(2,2).value = "Price-list ("+НазвСтр+") JSC TC ""Yarshintorg"", "+формат(ТекущаяДата(),"Л=en; ДЛФ=DD");
		ExcelЛист.cells(7,2).value = "Time of report: "+строка(ТекущаяДата());
	Иначе	
		ExcelЛист.cells(2,2).value = "ПРАЙС-ЛИСТ ("+НазвСтр+") ЗАО ТК ""Яршинторг"", "+формат(ТекущаяДата(),"ДЛФ=DD");
		ExcelЛист.cells(7,2).value = Формат(ТекущаяДата(),"ДФ='dd MMM yyyy HH:mm'");;
	КонецЕсли;	
	состояние("Идет вывод данных "+строка(N)+" строк в Закладку "+назвСтр+" Excel-файл...");
	
	
	ТабДок.Защита = Ложь; 
	ТабДок.Вывод  = ИспользованиеВывода.Разрешить; 
	ЭтаФорма.ТекущийЭлемент = ТабДок; 
	ТабДок.Показать();
	
	состояние("Идет сохранение во временный файл: "+КаталогВременныхФайлов()+"111.txt");
	ТабДок.ПолучитьОбласть(11,1,N,M).Записать(КаталогВременныхФайлов()+"111.txt", ТипФайлаТабличногоДокумента.TXT);  
	
	текст1 = новый ТекстовыйДокумент;
	текст1.Прочитать(КаталогВременныхФайлов()+"111.txt");
	ЭлементыФормы.Добавить(Тип("ПолеHTMLДокумента"), "Поле_HTML_Документа_acb123", Ложь); 
	Окно = ЭлементыФормы.Поле_HTML_Документа_acb123.Документ.ParentWindow; 
	состояние("Идет сохранение в буфер обмена текста из временного файла: "+КаталогВременныхФайлов()+"111.txt");
	Окно.ClipboardData.SetData("text", текст1.ПолучитьТекст() );  // только 1 ячейка?!
	ЭлементыФормы.Удалить(ЭлементыФормы.Индекс(ЭлементыФормы.Найти("Поле_HTML_Документа_acb123"))); 
	
//+++ 17.03.2015 - через буфер
	//WSH = Новый COMОбъект("WScript.Shell"); 
	//WSH.SendKeys("^{c}");  //в англ.
	попытка
		NNN = Excel.Application.WorkBooks.Count();
	//+++ 14.12.2018 --- моргание ---
		Excel.Application.Visible = 1;
		Excel.Windows(NNN).Visible = 1;	
		ExcelЛист.Range( ExcelЛист.cells(11,1), ExcelЛист.cells(11,1) ).Select();
		ExcelЛист.Paste();
		//WSH.SendKeys("^v");  WSH.SendKeys("^м");
	Исключение
		сообщить("Ошибка вставки данных в Excel : "+ОписаниеОшибки(), СтатусСообщения.Внимание );
	КонецПопытки;
	
	попытка 
		состояние("Идет оформление "+строка(N)+" строк");
		ExcelЛист.Range( ExcelЛист.cells(11,1), ExcelЛист.cells(11,1) ).Select();
		ExcelЛист.Range( Excel.Application.Selection, ExcelЛист.cells(N-k,M) ).Select();
		
		Excel.Application.Selection.Borders(5).LineStyle = -4142;
		Excel.Application.Selection.Borders(6).LineStyle = -4142;
		для i=7 по 12 цикл
			Excel.Application.Selection.Borders(i).LineStyle = 1;
		КонецЦикла;
		
	//+++ 13.03.2018 - для дисков - убрана АвтоВысота!!! по задаче № 42162
	Если не (назвСтр="Диски" или назвСтр="Wheels") тогда 
		ExcelЛист.Rows("11:"+формат(N,"ЧГ=0")).Select();
		Excel.Application.Selection.EntireRow.AutoFit(); // автовысота строк
		ExcelЛист.Range( ExcelЛист.cells(11,1), ExcelЛист.cells(11,1) ).Select();//снимаем выделение строк
	КонецЕсли;
			
		//11.02.2016 ------СловарьUSD ---------
		Если USD тогда
			Макет = ПолучитьМакет("СловарьUSD");
			номСтр = 1;  столбец=1;
			Слово  = Макет.Область(номСтр, столбец  ).Текст;
			Замена = Макет.Область(номСтр, столбец+1).Текст;
			Пока Слово<>"" цикл
				
				ExcelЛист.Cells.Replace(Слово, Замена, 2, 1);
				
				номСтр = номСтр +1;
				Слово  = Макет.Область(номСтр, столбец  ).Текст;
				Замена = Макет.Область(номСтр, столбец+1).Текст;
			КонецЦикла;
		КонецЕсли;
		//-------------------------------------	
	исключение
		Сообщить("Не удалось сделать обрамление таблицы "+назвСтр, СтатусСообщения.Внимание);
	КонецПопытки;
	
	//+++ 14.02.2018 --- фиксация заголовка (верхние 10 строк)-----------
	Попытка
	ExcelЛист.Rows("11:11").Select();
   	NNN = Excel.Application.WorkBooks.Count();
	Excel.Windows(NNN).FreezePanes = True;   //16.02.2018
	ExcelЛист.Range( ExcelЛист.cells(11,1), ExcelЛист.cells(11,1) ).Select();//снимаем выделение строк
	исключение
		Сообщить("Не удалось сделать фиксацию шапки таблицы "+назвСтр, СтатусСообщения.Внимание);
	КонецПопытки;
	
	попытка
		состояние("Скопирована таблица из "+строка(N)+" строк "+?(k>0,"(удалено "+строка(k)+" пустых строк)","")
		+" в Закладку "+назвСтр+", идет перезапись Excel-файла...");
		Excel.Save(); //перезапись
		Сообщить(строка(ТекущаяДата())+" >> Данные '"+НазвСтр+"' записаны в файл Excel...", СтатусСообщения.Информация);
		
		//NNN = Excel.Application.WorkBooks.Count();
		//Excel.Windows(NNN).Visible = 0;	
		Excel.Application.Visible = 0;
		
		состояние("Скопирована таблица из "+строка(N)+" строк "+?(k>0,"(удалено "+строка(k)+" пустых строк)","")
		+" в Закладку "+назвСтр+", перезапись Excel-файла завершена.");
		
		рез111 = 0;
	исключение
		Сообщить("Ошибка записи файла Excel : "+ОписаниеОшибки(), СтатусСообщения.Важное);
		//---------Закрываем----------------------
		Excel.Application.WorkBooks.Close();
		Excel = 0;
		рез111=-1;
	КонецПопытки;
	
	//+++ 12.02.2019 - во временный файл! шины / акб / аксы
	Если не USD и не ВыводитьДискиСтопЛист и Переключатель1=1 тогда //для менеджеров
		ИмяФайлаПолное = путь1+НазвСтр+"_YAR.mxl";
		ЭлементыФормы.ПолеТабличногоДокумента.Записать(ИмяФайлаПолное,ТипФайлаТабличногоДокумента.MXL);
		Сообщить(строка(ТекущаяДата())+" -->> Сохранен файл "+ИмяФайлаПолное+"-->>", СтатусСообщения.Информация);
	КонецЕсли;
	
    возврат рез111;
	
КонецФункции

Процедура ДействияФормыВыгрузитьВExcel(Кнопка, путь0=неопределено ) Экспорт
	
	Если путь0=неопределено тогда
		путь0 = "\\terminal\ОБМЕН\Гостева Алёна\";
	КонецЕсли;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = " Процедура выполняется длительное время...
	|Для правильной выгрузки - закройте ВСЕ EXCEL-файлы
	|Продолжить выполнение операции ?";
	Ответ = Вопрос(Текст, Режим, 10, КодВозвратаДиалога.Да, "Закройте Excel", КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	

	для нПерек=0 по 1 цикл  
		Переключатель1 = 1-нПерек;//сначала для Менеджеров! 12.02.2019
		
		Если USD и Переключатель1=1 тогда //USD - ТОЛЬКО ДЛЯ КЛИЕНТОВ!
			продолжить;
		КонецЕсли;	
		
		путь = путь0 + формат(Год(ТекущаяДата()),"ЧГ=0")+"\"+формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+формат(ТекущаяДата(),"ДФ=MMMM")+"\";
		
		Если Переключатель1=0 тогда
			Если USD тогда  //+++ 21.08.2015
				ИмяФайла = формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+ формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=") +" Yaroslavl.xls";
			иначе
				ИмяФайла = формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+ формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=") +" Ярославль.xls";
			КонецЕсли;
		иначе
			ИмяФайла = "Остатки "+формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+ формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=") +".xls";
		КонецЕсли;	
		
		Сообщить(строка(ТекущаяДата())+"=== начало выгрузки Ярославль ("+?(Переключатель1=0,"Для клиентов","Для менеджеров")+") в файл: "+путь+ИмяФайла+" ==============");
		
		попытка
			Если Переключатель1=0 тогда
				Если USD тогда  //+++ 21.08.2015
					АктивныйДокумент = ПолучитьМакет("МакетExcelUSD");
				иначе	
					АктивныйДокумент = ПолучитьМакет("МакетExcel");
				КонецЕсли;	
			Иначе//---------Для менеджеров-------------------------------		
				АктивныйДокумент = ПолучитьМакет("МакетExcelОстатки");
			КонецЕсли;
			Excel = АктивныйДокумент.Получить();
			
			Excel.Application.DisplayAlerts = 0;
			NNN = Excel.Application.WorkBooks.Count();
			Excel.Application.WorkBooks(NNN).Activate();
			
		исключение
			Сообщить("Ошибка записи файла "+путь+ИмяФайла+" : "+ОписаниеОшибки(), СтатусСообщения.Важное);
			//---------Закрываем----------------------
			Excel.Application.WorkBooks.Close();
			Excel = 0;

			ВОЗВРАТ;
		КонецПопытки;
		
		Если USD 
			тогда нМакс=1; 
			иначе нМакс=6; // 24.06.2016 - еще Грузовые диски  ТОЛЬКО для клиентов = 0
		КонецЕсли;
		
		Для iii=1 по нМакс цикл
			ExcelЛист = Excel.WorkSheets(iii);
			//ExcelЛист.Name = НазвСтр;
			ExcelЛист.Activate();
			Если USD и iii=1 тогда  //+++ 21.08.2015
				ExcelЛист.cells(2,2).value = "Price-list JSC TC ""Yarshintorg"", "+формат(ТекущаяДата(),"Л=en; ДЛФ=DD");
				ExcelЛист.cells(7,2).value = "Time of report: "+формат(ТекущаяДата(),"""ДФ='dd.MM.yyyy hh:mm'");
			Иначе
				ExcelЛист.cells(2,2).value = "ПРАЙС-ЛИСТ ЗАО ТК ""Яршинторг"" на "+формат(ТекущаяДата(),"ДЛФ=DD");
				ExcelЛист.cells(7,2).value = Формат(ТекущаяДата(),"ДФ='dd MMM yyyy HH:mm");
			КонецЕсли;
		КонецЦикла;
		ExcelЛист = Excel.WorkSheets(1);
		ExcelЛист.Activate();
		
		//---------------видимость ОБЯЗАТЕЛЬНА!-----------------------------		
		Excel.Application.Visible = 1; 
		попытка
			Excel.Windows(NNN).Visible = 1;	
		Исключение
		КонецПопытки;
		
		попытка //сразу пишем файл!
			Excel.SaveAs(путь+ИмяФайла); //чистый c закладками
		исключение
			Сообщить("Ошибка записи файла "+путь+ИмяФайла+" : "+ОписаниеОшибки(), СтатусСообщения.Важное);
			//---------Закрываем----------------------
			Excel.Application.WorkBooks.Close();//ВСЕ книги Excel!
			Excel = 0;
			ВОЗВРАТ;
		КонецПопытки;
		

		Если не USD тогда
			СтрокаВид = "Шины";
			Сообщить(строка(ТекущаяДата())+" --- начало формирования данных "+СтрокаВид+" Ярославль ("+?(Переключатель1=1,"для менеджеров","для клиентов")+")---");
			Если Переключатель1=1 тогда  //только для руб!
				ДействияФормыСформироватьТолькоШины(неопределено);
			Иначе  // 12.02.2019
				ИмяФайлаПолное = путь1+СтрокаВид+"_YAR.mxl";
				фл = новый файл(ИмяФайлаПолное);
				Если фл.Существует() тогда
			    убратьКолБольше50( путь1, СтрокаВид, 7, 9 ); //по Excel - Ярославль!
				иначе
				ДействияФормыСформироватьТолькоШины(неопределено);
				КонецЕсли;
			КонецЕсли;
			
			если Переключатель1=0 и не USD тогда
				ДействияФормыСохранитьНаСайте(неопределено);
				Сообщить(строка(ТекущаяДата())+" >>> "+СтрокаВид+" Ярославль выгружены на сайт---");
			КонецЕсли;	
			если ВыгрузитьДанные(Excel, 1, СтрокаВид)<0 тогда 	возврат; КонецЕсли;
		КонецЕсли;	
		
		СтрокаВид ="Диски";
		Сообщить(строка(ТекущаяДата())+" --- начало формирования данных "+СтрокаВид+" Ярославль ("+?(Переключатель1=1,"для менеджеров","для клиентов")+")---");
		Если Переключатель1=1 тогда
			ДействияФормыСформироватьТолькоДиски(неопределено);
		Иначе  // 12.02.2019 и для USD - диски!
			ИмяФайлаПолное = путь1+СтрокаВид+"_YAR.mxl";
			фл = новый файл(ИмяФайлаПолное);
			Если фл.Существует() тогда
		    	убратьКолБольше50( путь1, СтрокаВид, 15, 19 );  //по Excel - Ярославль!
			иначе
				ДействияФормыСформироватьТолькоДиски(неопределено);
			КонецЕсли;
		КонецЕсли;
		
		//СтрокаВид =?(USD,"Wheels","Диски");
		если Переключатель1=0 и не USD тогда
			ДействияФормыСохранитьНаСайте(неопределено);
			Сообщить(строка(ТекущаяДата())+" >>>"+СтрокаВид+" Ярославль выгружены на сайт---");
		КонецЕсли;	
		
		Если USD тогда
			НеВыводитьДискиПодЗаказ=Истина;	 
			если ВыгрузитьДанные(Excel, 1, "Wheels" )<0 тогда возврат; КонецЕсли;
		иначе	
			НеВыводитьДискиПодЗаказ=ЛОЖЬ;	 //7 и 30 дней
			Если ВыгрузитьДанные(Excel, 2, "Диски" )<0 тогда возврат; КонецЕсли;
			
			//04.07.2016 --- раскраска ---
			ExcelЛист = Excel.WorkSheets(2);
			Если НеВыводитьДискиПодЗаказ=ЛОЖЬ тогда 
				i=11; k=0; Nmax = 16000; //до 15077 строк 31.01.2019!
				Состояние("Идёт раскраска дисков под заказ....");
				пока i<Nmax цикл	
					ОбработкаПрерыванияПользователя();
					Если ExcelЛист.cells(i,25).Text<>"" //есть под заказ 7 или 30 дн.
					   //и ExcelЛист.cells(i,16).Text="" // нет св.остатка! 
						 тогда k=k+1;
						 ExcelЛист.Range( ExcelЛист.cells(i,1), ExcelЛист.cells(i,28) ).Select();
						 Excel.Application.Selection.Interior.ColorIndex = 3; //красный
						 Excel.Application.Selection.Interior.Pattern = 1; //xlSolid;
					 КонецЕсли;
			    	 i=i+1;
					 Если i%500=0 тогда 
					 проц = цел(100*i/Nmax);
					 Состояние("Идёт раскраска дисков под заказ. Пройдено: "+строка(i)+" / "+строка(Nmax)+" ("+формат(проц,"ЧДЦ=0")+"%) строк. Раскрашено: "+строка(k)+" строк",проц,);
					 КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Колонка1 = "Z"; Колонка2="Z";//31.01.2019
			Если НеВыводитьДискиПодЗаказ тогда 
				Колонка1 = "Y";
			КонецЕсли;	
			Если НЕ ВыводитьДискиСтопЛист тогда
				Колонка2="AA";
			КонецЕсли;
			//31.01.2019 - 25/26-26/27 столбцы удаляем - ДискиПодЗаказ, Завод, Распродажа/Стоп-Лист
			ExcelЛист.Columns(Колонка1+":"+Колонка2).Select();
			Excel.Application.Selection.Delete();
			
			//+++ 10.09.2018 ------ДЛЯ ВСЕХ ДИСКОВ - УДАЛЯЕМ!!!------------------------
			Если исклБолее45 тогда
				ExcelЛист.Columns("S:S").Select(); // S -> более 45 дней 
				Excel.Application.Selection.Delete();
			КонецЕсли;
			Состояние(" ");
		КонецЕсли;
		
		Если не USD тогда
			НеВыводитьДискиПодЗаказ=Истина;	 
		    СтрокаВид = "АКБ";
			Сообщить(строка(ТекущаяДата())+" --- начало выгрузки "+СтрокаВид+" Ярославль ("+?(Переключатель1=1,"для менеджеров","для клиентов")+")---");
			если Переключатель1=1 тогда
				ДействияФормыСформироватьТолькоАКБ(неопределено);
			Иначе  // 12.02.2019
				ИмяФайлаПолное = путь1+СтрокаВид+"_YAR.mxl";
				фл = новый файл(ИмяФайлаПолное);
				Если фл.Существует() тогда
			    	убратьКолБольше50( путь1, СтрокаВид, 9, 10 ); //по Excel - Ярославль!
				иначе
					ДействияФормыСформироватьТолькоАКБ(неопределено);
				КонецЕсли;
			КонецЕсли;

			если Переключатель1=0  тогда
				ДействияФормыСохранитьНаСайте(неопределено);
				Сообщить(строка(ТекущаяДата())+" >>> "+СтрокаВид+" Ярославль выгружены на сайт---");
			КонецЕсли;	
			если ВыгрузитьДанные(Excel, 3, ?(USD,"Batteries", "АКБ") )<0 тогда возврат; КонецЕсли;
			
			
			СтрокаВид = "Аксессуары";
			Сообщить(строка(ТекущаяДата())+" --- начало формирования данных "+СтрокаВид+" Ярославль ("+?(Переключатель1=1,"для менеджеров","для клиентов")+")---");
			Если Переключатель1=1  тогда
				ДействияФормыСформироватьТолькоАксессуары(неопределено);
			Иначе  // 12.02.2019
				ИмяФайлаПолное = путь1+СтрокаВид+"_YAR.mxl";
				фл = новый файл(ИмяФайлаПолное);
				Если фл.Существует() тогда
			    	убратьКолБольше50( путь1,СтрокаВид, 6, 7 ); //по Excel - Ярославль!
				иначе
					ДействияФормыСформироватьТолькоАксессуары(неопределено);
				КонецЕсли;
			КонецЕсли;
	
			если Переключатель1=0  и не USD  тогда
				ДействияФормыСохранитьНаСайте(неопределено);
				Сообщить(строка(ТекущаяДата())+" >>> "+СтрокаВид+" Ярославль выгружены на сайт---");
			КонецЕсли;	
			если ВыгрузитьДанные(Excel, 4, ?(USD,"Accessories","Аксессуары") )<0 тогда возврат; КонецЕсли;
		
		//02.06.2016 добавлена выгрузка крепежа
			СтрокаВид = "Крепёж";
			Сообщить(строка(ТекущаяДата())+" --- начало формирования данных "+СтрокаВид+" Ярославль ---");
			ДействияФормыСформироватьТолькоКрепёж(неопределено);
			если Переключатель1=0 и не USD  тогда
				ДействияФормыСохранитьНаСайте(неопределено);
				Сообщить(строка(ТекущаяДата())+" >>>  Ярославль "+СтрокаВид+" выгружены на сайт---");
			КонецЕсли;	
			
			Если ВыгрузитьДанные(Excel, 5, ?(USD,"Fasteners", "Крепёж") )<0 тогда возврат; КонецЕсли;						
			
		//+++ 24.06.2016 ============================================================================		
			если Переключатель1=0 тогда // только для Клиентов!  в файл Остатки - выгружать не надо...
				Сообщить(строка(ТекущаяДата())+" --- начало формирования данных Грузовые диски Ярославль ---");
				Переключатель1 = 1; // для менеджеров
				     ВидОтчета = 1;
					 
				НеВыводитьДискиПодЗаказ=ИСТИНА;	 
				
				ПостроительОтчетаОтчет.Отбор.Сбросить();// прямо через отбор!
				стр1 = ПостроительОтчетаОтчет.Отбор.Добавить("Номенклатура.НоменклатурнаяГруппа", "Номенклатурная группа", "Номенклатурная группа");
				стр1.ВидСравнения = ВидСравнения.Равно;
				стр1.Значение     = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00013"); // Грузовые диски!
				стр1.Использование = Истина;
				
				ДействияФормыСформироватьТолькоДиски(неопределено, истина);//01.02.2017 - выгрузка с учетом Артикула
				
				//28.06.2016 - убираем отбор
				ПостроительОтчетаОтчет.Отбор.Сбросить(); // прямо через отбор!
				для i=0 по ПостроительОтчетаОтчет.Отбор.Количество()-1 цикл    //15.08.2016
				  ПостроительОтчетаОтчет.Отбор.Удалить(0);
			  	КонецЦикла;
			  
			 	Переключатель1 = 0; // для менеджеров
				     ВидОтчета = 0;
			
				если ВыгрузитьДанные(Excel, 6, ?(USD,"Cargo Wheels", "Груз.диски") )<0 тогда возврат;КонецЕсли;						
				
				//31.01.2019 - удаляем "лишние" столбцы
				ExcelЛист = Excel.WorkSheets(6);
					Колонка1 = "Y";	Колонка2="AA"; //груз диски - нет Под заказ, завод, Распродажа/Стоп-лист
					ExcelЛист.Columns(Колонка1+":"+Колонка2).Select();
					Excel.Application.Selection.Delete();

				КонецЕсли;
			
		КонецЕсли;//не USD 
		
		
		//---------Закрываем----------------------
		Попытка
			//	Сообщить(строка(ТекущаяДата())+" - начало сохранения данных в файл "+ИмяФайла);
			Excel.SaveAs(путь+ИмяФайла); //чистый c закладками
			
			Excel.Application.WorkBooks.Close();
			Excel = 0;
			
			Сообщить(строка(ТекущаяДата())+" ==== Данные сохранены в файл: "+путь+ИмяФайла+"
			|", СтатусСообщения.Информация);
		Исключение
			Сообщить(строка(ТекущаяДата())+" ==== Данные НЕ сохранены в файл: "+путь+ИмяФайла+"
			|"+ОписаниеОшибки(), СтатусСообщения.ВАЖНОЕ);
			
			Excel = 0;
			Сообщить(строка(ТекущаяДата())+" --- ошибка сохранения: "+ ОписаниеОшибки(), СтатусСообщения.Внимание);
		КонецПопытки;
	КонецЦикла;
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	
	если не USD тогда
		СохранитьВExcel_ДискиБрак(путь);
	КонецЕсли;
	
	//21.02.2018
	//СохранитьВExcel_ВсеДиски(путь); 

КонецПроцедуры

 процедура СохранитьВExcel_ДискиБрак(путь)
	Переключатель1=0;
	Сообщить(строка(ТекущаяДата())+" --- начало формирования данных Диски Брак Ярославль ---");
	ДействияФормыСформироватьТолькоДискиБрак(неопределено);
	ИмяФайла1 = формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+ формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=") +" Ярославль(Диски-брак).xls";
	попытка
		АктивныйДокумент = ПолучитьМакет("МакетExcelБрак");
		Excel1 = АктивныйДокумент.Получить();
		
		Excel1.Application.DisplayAlerts = 0;
		NNN = Excel1.Application.WorkBooks.Count();
		Excel1.Application.WorkBooks(NNN).Activate();
	исключение
		Сообщить("Ошибка записи файла "+путь+ИмяФайла1+" : "+ОписаниеОшибки(), СтатусСообщения.Важное);
		//---------Закрываем----------------------
		Excel1.Application.WorkBooks.Close();
		Excel1 = 0;
		ВОЗВРАТ;
	КонецПопытки;
	
	если ВыгрузитьДанные(Excel1, 1, "ДискиБрак")<0 тогда возврат; КонецЕсли;
	
	//---------Закрываем----------------------
	Попытка
		//	Сообщить(строка(ТекущаяДата())+" - начало сохранения данных в файл "+ИмяФайла);
		Excel1.SaveAs(путь+ИмяФайла1); //чистый c закладками
		Excel1.Application.WorkBooks.Close();
		Excel1=0;
		
		Сообщить(строка(ТекущаяДата())+" ==== Данные сохранены в файл:"+путь+ИмяФайла1+"
		|", СтатусСообщения.Информация);
	Исключение
		Excel1.Application.WorkBooks.Close();
		Excel1 = 0;
		Сообщить(строка(ТекущаяДата())+" --- ошибка сохранения файла "+ИмяФайла1+": "+ ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
КонецПроцедуры

//----------21.02.2018---------------------------------
процедура СохранитьВExcel_ВсеДиски(путь) ЭКСПОРТ
	Сообщить(строка(ТекущаяДата())+" --- начало формирования данных Диски Ярославль (Стоп-ЛИСТ) ---");
	ВыводитьДискиСтопЛист = ЛОЖЬ; //+++ 04.04.2019
	НеВыводитьДискиПодЗаказ=ЛОЖЬ; 
	исклБолее45 = ЛОЖЬ;
	USD = ЛОЖЬ;

	
для исклБолее45кол=0 по 1 цикл //14.08.2018
	если исклБолее45кол=1 тогда
		исклБолее45 = Истина;
	КонецЕсли;
// для менеджеров/клиентов
Для ПереклНом = 0 по 1 цикл
	
	Переключатель1 = 1-ПереклНом; //наоборот!  сначала для Менеджеров
	
	ИмяФайла1 = формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+ формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")
		  //			+?(исклБолее45," Диски с товарами в пути","_Ярославль") //14.08.2018
		   				+?(исклБолее45," Остатки по дискам+ ","_Ярославль") // 26.09.2018
					+ ?(Переключатель1=1,"(Все диски).xls", "(диски).xls");
					
	//2 раза формируем!				
	ДействияФормыСформироватьТолькоДиски(неопределено);
	
	попытка
		АктивныйДокумент = ПолучитьМакет("МакетExcel_ЯрДиски");
		Excel1 = АктивныйДокумент.Получить();
		
		Excel1.Application.DisplayAlerts = 0;
		NNN = Excel1.Application.WorkBooks.Count();
		Excel1.Application.WorkBooks(NNN).Activate();
	исключение
		Сообщить("Ошибка записи файла "+путь+ИмяФайла1+" : "+ОписаниеОшибки(), СтатусСообщения.Важное);
		//---------Закрываем----------------------
		Excel1.Application.WorkBooks.Close();
		Excel1 = 0;
		ВОЗВРАТ;
	КонецПопытки;
	
	Если ВыгрузитьДанные(Excel1, 2, "Диски")<0 тогда возврат; КонецЕсли;
	
	//04.07.2016 --- раскраска ---
		ExcelЛист = Excel1.WorkSheets(2);
		
		Колонка1 = "Z"; Колонка2="Z";//31.01.2019
		Если НеВыводитьДискиПодЗаказ тогда 
			Колонка1 = "Y";
		КонецЕсли;	
		Если НЕ ВыводитьДискиСтопЛист тогда
			Колонка2="AA";
		КонецЕсли;
			
// 08.10.2018 - 31.01.2019 - 25/26-26/27 столбцы удаляем - ДискиПодЗаказ, Завод,  Распродажа/Стоп-Лист
		ExcelЛист.Columns(Колонка1+":"+Колонка2).Select();
		Excel1.Application.Selection.Delete();
		
	Если исклБолее45 тогда //14.08.2018 - удаляем столбец "более 45 дней"
		ExcelЛист.Columns("S:S").Select(); 
		Excel1.Application.Selection.Delete();
	КонецЕсли;
	
	ExcelЛист.Range( ExcelЛист.cells(11,1), ExcelЛист.cells(11,1) ).Select();
					
	масСтр = новый массив;
	масСтр.Добавить("Нулевая");
	масСтр.Добавить("Шины");	
	масСтр.Добавить("Диски");
	масСтр.Добавить("АКБ");
	масСтр.Добавить("Аксессуары");
	//+++ 12.02.2019 --- копирование страниц Ярославля / Остатков ----
	для номСтраницы=1 по 4 цикл
		НазвСтр = масСтр[номСтраницы];
		Если номСтраницы=2 тогда продолжить; КонецЕсли;	
		ИмяФайлаПолное = путь1+НазвСтр+"_YAR"+?(Переключатель1=0,"0","")+".mxl";  //сразу нужный файл - для клиентов <50!
		фл = новый файл(ИмяФайлаПолное);
		Если фл.Существует() тогда
			ЭлементыФормы.ПолеТабличногоДокумента.Очистить();
			ЭлементыФормы.ПолеТабличногоДокумента.Прочитать(ИмяФайлаПолное);
			Сообщить(строка(ТекущаяДата())+" <---< Прочитан файл "+ИмяФайлаПолное+" <---<");
			Если ВыгрузитьДанные(Excel1, номСтраницы, НазвСтр)<0 тогда возврат; КонецЕсли;
		Иначе
			Сообщить(строка(ТекущаяДата())+" файл: "+ИмяФайлаПолное+" ОТСУТСТВУЕТ!", СтатусСообщения.Внимание);
		КонецЕсли;
	КонецЦикла;
	
		//---------Закрываем----------------------
	Попытка
		Excel1.SaveAs(путь+ИмяФайла1); //чистый c закладками
		Excel1.Application.WorkBooks.Close();
		Excel1=0;
		Сообщить(строка(ТекущаяДата())+" ==== Данные сохранены в файл:"+путь+ИмяФайла1+"
		|", СтатусСообщения.Информация);
	Исключение
		Excel1.Application.WorkBooks.Close();
		Excel1 = 0;
		Сообщить(строка(ТекущаяДата())+" --- ошибка сохранения  файла: "+путь+ИмяФайла1+" : "+ ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;

КонецЦикла;	
КонецЦикла;

КонецПроцедуры

Процедура убратьКолБольше50( путь, СтрокаВид, КолНач, КолКон )
	
	Сообщить(строка(ТекущаяДата())+" >---> Обработка файла "+СтрокаВид+"_YAR.mxl >--->");
	ТабДок = новый ТабличныйДокумент; //в невидимый табДок
	ТабДок.Прочитать(путь+СтрокаВид+"_YAR.mxl");
		N = ТабДок.ВысотаТаблицы;
		для номСтр = 11 по N цикл
			ОбработкаПрерыванияПользователя();
			для номКол=КолНач по КолКон цикл
				числоТ = ТабДок.Область(номСтр, номКол,номСтр, номКол).Текст;
				Если числоТ<>"" тогда
					попытка
						число1 = число(числоТ);
						Если число1>50 тогда	
						ТабДок.Область(номСтр, номКол,номСтр, номКол).Текст = ">50";
						КонецЕсли;
					исключение
					КонецПопытки;	
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;	
	ТабДок.Записать(путь+СтрокаВид+"_YAR0.mxl",ТипФайлаТабличногоДокумента.MXL);
	
	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();
	ЭлементыФормы.ПолеТабличногоДокумента.Прочитать(путь+СтрокаВид+"_YAR0.mxl");
	Сообщить(строка(ТекущаяДата())+" <---< Прочитан файл (кол<50) "+СтрокаВид+"_YAR0.mxl <---<");
	
КонецПроцедуры

//отдельная кнопка для Всех дисков в Excel
Процедура ДействияФормыВсеДиски(Кнопка)
	путь0 = "\\terminal\ОБМЕН\Гостева Алёна\";
	путь =   путь0
		+ формат(Год(ТекущаяДата()),"ЧГ=0")+"\"+формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+формат(ТекущаяДата(),"ДФ=MMMM")+"\";
		
	СохранитьВExcel_ВсеДиски(путь);
КонецПроцедуры


Процедура USDПриИзменении(Элемент)
	ЭлементыФормы.Отбор.Доступность = не USD;
КонецПроцедуры

Функция текстДляКрепежа()
Текст = "";

Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
        |	Номенклатура.Ссылка
        |ПОМЕСТИТЬ ВТ_НоменклатураКрепёж
        |ИЗ
        |	Справочник.Номенклатура КАК Номенклатура
        |ГДЕ
        |	(Номенклатура.Ссылка В ИЕРАРХИИ (&Болты)
        |			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&Гайки)
		|			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&Вентили)
        |			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&Кольца))
        |	И НЕ Номенклатура.ЭтоГруппа
        |	И НЕ Номенклатура.ПометкаУдаления
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	Б.Номенклатура,
        |	Б.Номенклатура.Родитель КАК Родитель,
        |	Б.Номенклатура.Код КАК Код,
        |	Б.Типоразмер.Ширина КАК Ширина,
        |	Б.Типоразмер.Высота КАК Высота,
        |	Б.Типоразмер.Диаметр КАК Диаметр,
        |	Б.Типоразмер.КоличествоОтверстий КАК КоличествоОтверстий,
        |	Б.Типоразмер.PCD КАК PCD,
        |	Б.Типоразмер.Вылет КАК Вылет,
        |	Б.Типоразмер.ДиаметрСтупицы КАК ДиаметрСтупицы,
        |	Б.Номенклатура.Модель КАК Модель,
        |	Б.Номенклатура.Артикул КАК Артикул,
        |	Б.Номенклатура.Производитель КАК Производитель,
        |	Б.ОстатокДляКлиента,
        |	Б.КоличествоВПути,
        |	Б.КоличествоПриход2Недели,
        |	Б.КоличествоПриход2Месяца,
        |	Б.КоличествоВПроизводстве,
        |	Б.СвободныйОстатокДляКлиента,
        |	Б.КОличествоВРезерве,
        |	Б.Номенклатура.ЕдиницаХраненияОстатков.Вес КАК Вес,
        |	Б.Номенклатура.ЕдиницаХраненияОстатков.Объем КАК Объем,
        |	Б.Цвет КАК Цвет,
        |	Б.ЦенаБазовая КАК ЦенаБазовая
        |ИЗ
        |	(ВЫБРАТЬ
        |		А.Номенклатура КАК Номенклатура,
        |		А.Номенклатура.Родитель КАК Родитель,
        |		А.Номенклатура.Код КАК Код,
        |		А.Номенклатура.Типоразмер КАК Типоразмер,
        |		А.Номенклатура.Производитель КАК Производитель,
        |		А.Остаток КАК Остаток,
        |		А.КоличествоВПути КАК КоличествоВПути,
        |		А.КоличествоПриход2Недели КАК КоличествоПриход2Недели,
        |		А.КоличествоПриход2Месяца КАК КоличествоПриход2Месяца,
        |		ВЫБОР
        |			КОГДА А.Остаток > 50
        |					И &РежимФормирования
        |				ТОГДА 51
        |			ИНАЧЕ А.Остаток
        |		КОНЕЦ КАК ОстатокДляКлиента,
        |		ВЫБОР
        |			КОГДА А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
        |					И &РежимФормирования
        |				ТОГДА 51
        |			ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
        |		КОНЕЦ КАК СвободныйОстатокДляКлиента,
        |		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
        |		ЕСТЬNULL(ЦеныБазовая.Цена, 0) КАК ЦенаБазовая,
        |		ЗначенияСвойствобъектов.Цвет КАК Цвет,
        |		А.КоличествоВПроизводстве КАК КоличествоВПроизводстве
        |	ИЗ
        |		(ВЫБРАТЬ
        |			Б.Номенклатура КАК Номенклатура,
        |			СУММА(Б.Остаток) КАК Остаток,
        |			СУММА(Б.КоличествоВПути) КАК КоличествоВПути,
        |			СУММА(Б.КоличествоПриход2Недели) КАК КоличествоПриход2Недели,
        |			СУММА(Б.КоличествоПриход2Месяца) КАК КоличествоПриход2Месяца,
        |			СУММА(Б.КоличествоВПроизводстве) КАК КоличествоВПроизводстве
        |		ИЗ
        |			(ВЫБРАТЬ
        |				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
        |				ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
        |				0 КАК КоличествоВПути,
        |				0 КАК КоличествоПриход2Недели,
        |				0 КАК КоличествоПриход2Месяца,
        |				0 КАК КоличествоВПроизводстве
        |			ИЗ
        |				РегистрНакопления.ТоварыНаСкладах.Остатки(
        |						,
        |						Номенклатура В
        |								(ВЫБРАТЬ
        |									ВТ_НоменклатураКрепёж.Ссылка
        |								ИЗ
        |									ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж)
        |							И НЕ Склад.ЗапретитьИспользование
        |							И НЕ Склад.Транзитный {(Номенклатура).*}) КАК ТоварыНаСкладахОстатки
        |			ГДЕ
        |				ТоварыНаСкладахОстатки.КоличествоОстаток > 0
        |			
        |			ОБЪЕДИНИТЬ ВСЕ
        |			
        |			ВЫБРАТЬ
        |				регТоварыВПути.Номенклатура,
        |				0,
        |				СУММА(регТоварыВПути.КоличествоОстаток),
        |				СУММА(регТоварыВПути.КоличествоПриход2Недели),
        |				СУММА(регТоварыВПути.КоличествоПриход2Месяца),
        |				0
        |			ИЗ
        |				(ВЫБРАТЬ
        |					ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступленияВПорт,
        |					ВЫБОР
        |						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
        |								И (ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления >= ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, -3)
        |									ИЛИ ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления = &ПустаяДата)
        |							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
        |						ИНАЧЕ 0
        |					КОНЕЦ КАК КоличествоПриход2Недели,
        |					ВЫБОР
        |						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
        |							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
        |						ИНАЧЕ 0
        |					КОНЕЦ КАК КоличествоПриход2Месяца,
        |					ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
        |					ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
        |					ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
        |				ИЗ
        |					РегистрНакопления.ЗаказыПоставщикам.Остатки(
        |							,
        |							Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
        |								И НЕ ЗаказПоставщику.Транзит
        |								И номенклатура В
        |									(ВЫБРАТЬ
        |										ВТ_НоменклатураКрепёж.Ссылка
        |									ИЗ
        |										ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж) {(Номенклатура).*}) КАК ЗаказыПоставщикамОстатки) КАК регТоварыВПути
        |			ГДЕ
        |				(регТоварыВПути.КоличествоОстаток > 0
        |						ИЛИ регТоварыВПути.КоличествоПриход2Недели > 0
        |						ИЛИ регТоварыВПути.КоличествоПриход2Месяца > 0)
        |			
        |			СГРУППИРОВАТЬ ПО
        |				регТоварыВПути.Номенклатура
        |			
        |			ОБЪЕДИНИТЬ ВСЕ
        |			
        |			ВЫБРАТЬ
        |				ОстаткиОТХ.Номенклатура,
        |				СУММА(ОстаткиОТХ.КоличествоОстаток),
        |				СУММА(0),
        |				СУММА(0),
        |				СУММА(0),
        |				СУММА(0)
        |			ИЗ
        |				(ВЫБРАТЬ
        |					отх.Номенклатура КАК Номенклатура,
        |					отх.КоличествоОстаток КАК КоличествоОстаток
        |				ИЗ
        |					РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
        |							,
        |							НЕ Склад.Транзитный
        |								И НЕ Склад.ЗапретитьИспользование
        |								И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
        |								И Контрагент В (&СписокПоставщиковОТХ)
        |								И номенклатура В
        |									(ВЫБРАТЬ
        |										ВТ_НоменклатураКрепёж.Ссылка
        |									ИЗ
        |										ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж) {(Номенклатура).*}) КАК отх
        |				ГДЕ
        |					отх.КоличествоОстаток > 0) КАК ОстаткиОТХ
        |			
        |			СГРУППИРОВАТЬ ПО
        |				ОстаткиОТХ.Номенклатура
        |			
        |			ОБЪЕДИНИТЬ ВСЕ
        |			
        |			ВЫБРАТЬ
        |				регТоварыВПроизводстве.Номенклатура,
        |				0,
        |				0,
        |				0,
        |				0,
        |				ВЫБОР
        |					КОГДА &РежимФормирования
        |							И СУММА(регТоварыВПроизводстве.КоличествоОстаток) > 50
        |						ТОГДА 51
        |					ИНАЧЕ СУММА(регТоварыВПроизводстве.КоличествоОстаток)
        |				КОНЕЦ
        |			ИЗ
        |				(ВЫБРАТЬ
        |					ЗаказыПоставщикуСезонныеОстатки.Номенклатура КАК Номенклатура,
        |					ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток КАК КоличествоОстаток
        |				ИЗ
        |					РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
        |							&ТекущаяДата,
        |							НЕ ЗаказПоставщикуСезонный.Транзит
											//07.12.2016
        |								И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекущаяДатаСезЗак
        |								И Номенклатура В
        |									(ВЫБРАТЬ
        |										ВТ_НоменклатураКрепёж.Ссылка
        |									ИЗ
        |										ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж) {(Номенклатура).*}) КАК ЗаказыПоставщикуСезонныеОстатки
        |				ГДЕ
        |					ЕСТЬNULL(ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток, 0) > 0) КАК регТоварыВПроизводстве
        |			
        |			СГРУППИРОВАТЬ ПО
        |				регТоварыВПроизводстве.Номенклатура) КАК Б
        |		
        |		СГРУППИРОВАТЬ ПО
        |			Б.Номенклатура) КАК А
        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
        |					,
        |					ЗаказПокупателя.Проверен
        |						И НЕ ЗаказПокупателя.Транзит
        |						И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее) {(Номенклатура).*}) КАК ЗаказыПокупателейОстатки
        |			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
        |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
        |				ЗначенияСвойствобъектов.Объект КАК Объект,
        |				ЗначенияСвойствобъектов.Значение КАК Цвет
        |			ИЗ
        |				РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствобъектов
        |			ГДЕ
        |				ЗначенияСвойствобъектов.Свойство = &СвойствоЦвет) КАК ЗначенияСвойствобъектов
        |			ПО А.Номенклатура = ЗначенияСвойствобъектов.Объект
        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &ТипЦенБазовая {(Номенклатура).*}) КАК ЦеныБазовая
        |			ПО А.Номенклатура = ЦеныБазовая.Номенклатура) КАК Б
        |ГДЕ
        |	НЕ Б.Номенклатура В ИЕРАРХИИ (&Крышки)
        |	И Б.Номенклатура В
        |			(ВЫБРАТЬ
        |				ВТ_НоменклатураКрепёж.Ссылка
        |			ИЗ
        |				ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж)
        |
        |УПОРЯДОЧИТЬ ПО
        |	Родитель,
        |	Б.Номенклатура.Производитель.Наименование,
        |	Б.Номенклатура.Модель.Наименование,
        |	Б.Номенклатура.Типоразмер.Наименование,
        |	Б.Номенклатура.Наименование";
Возврат Текст;

	
КонецФункции	


Функция текстДляКрепежаUSD()
	Текст = "";
	
	Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	Номенклатура.Ссылка
	        |ПОМЕСТИТЬ ВТ_НоменклатураКрепёж
	        |ИЗ
	        |	Справочник.Номенклатура КАК Номенклатура
	        |ГДЕ
	        |	(Номенклатура.Ссылка В ИЕРАРХИИ (&Болты)
	        |			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&Гайки)
	        |			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&Кольца))
	        |	И НЕ Номенклатура.ЭтоГруппа
	        |	И НЕ Номенклатура.ПометкаУдаления
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	Цены2.Номенклатура КАК Номенклатура,
	        |	Цены2.МинимальнаяЦена КАК Цена
	        |ПОМЕСТИТЬ ВТ_ЦеныUSD
	        |ИЗ
	        |	&Табл222 КАК Цены2
	        |ГДЕ
	        |	Цены2.Номенклатура В
	        |			(ВЫБРАТЬ
	        |				ВТ_НоменклатураКрепёж.Ссылка
	        |			ИЗ
	        |				ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж)
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	Номенклатура
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Б.Номенклатура,
	        |	Б.Номенклатура.Родитель КАК Родитель,
	        |	Б.Номенклатура.Код КАК Код,
	        |	Б.Типоразмер.Ширина КАК Ширина,
	        |	Б.Типоразмер.Высота КАК Высота,
	        |	Б.Типоразмер.Диаметр КАК Диаметр,
	        |	Б.Типоразмер.КоличествоОтверстий КАК КоличествоОтверстий,
	        |	Б.Типоразмер.PCD КАК PCD,
	        |	Б.Типоразмер.Вылет КАК Вылет,
	        |	Б.Типоразмер.ДиаметрСтупицы КАК ДиаметрСтупицы,
	        |	Б.Номенклатура.Модель КАК Модель,
	        |	Б.Номенклатура.Артикул КАК Артикул,
	        |	Б.Номенклатура.Производитель КАК Производитель,
	        |	ЕСТЬNULL(Б.ОстатокДляКлиента, 0) КАК ОстатокДляКлиента,
	        |	ЕСТЬNULL(Б.КоличествоВПути, 0) КАК КоличествоВПути,
	        |	Б.КоличествоПриход2Недели,
	        |	Б.КоличествоПриход2Месяца,
	        |	ЕСТЬNULL(Б.КоличествоВПроизводстве, 0) КАК КоличествоВПроизводстве,
	        |	Б.СвободныйОстатокДляКлиента,
	        |	Б.КОличествоВРезерве,
	        |	Б.Номенклатура.ЕдиницаХраненияОстатков.Вес КАК Вес,
	        |	Б.Номенклатура.ЕдиницаХраненияОстатков.Объем КАК Объем,
	        |	Б.Цвет КАК Цвет,
	        |	Б.ЦенаБазовая КАК ЦенаБазовая
	        |ИЗ
	        |	(ВЫБРАТЬ
	        |		А.Номенклатура КАК Номенклатура,
	        |		А.Номенклатура.Родитель КАК Родитель,
	        |		А.Номенклатура.Код КАК Код,
	        |		А.Номенклатура.Типоразмер КАК Типоразмер,
	        |		А.Номенклатура.Производитель КАК Производитель,
	        |		А.Остаток КАК Остаток,
	        |		А.КоличествоВПути КАК КоличествоВПути,
	        |		А.КоличествоПриход2Недели КАК КоличествоПриход2Недели,
	        |		А.КоличествоПриход2Месяца КАК КоличествоПриход2Месяца,
	        |		ВЫБОР
	        |			КОГДА А.Остаток > 50
	        |					И &РежимФормирования
	        |				ТОГДА 51
	        |			ИНАЧЕ А.Остаток
	        |		КОНЕЦ КАК ОстатокДляКлиента,
	        |		ВЫБОР
	        |			КОГДА А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
	        |					И &РежимФормирования
	        |				ТОГДА 51
	        |			ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
	        |		КОНЕЦ КАК СвободныйОстатокДляКлиента,
	        |		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
	        |		ЕСТЬNULL(ЦеныБазовая.Цена, 0) КАК ЦенаБазовая,
	        |		ЗначенияСвойствобъектов.Цвет КАК Цвет,
	        |		А.КоличествоВПроизводстве КАК КоличествоВПроизводстве
	        |	ИЗ
	        |		(ВЫБРАТЬ
	        |			Б.Номенклатура КАК Номенклатура,
	        |			СУММА(Б.Остаток) КАК Остаток,
	        |			СУММА(Б.КоличествоВПути) КАК КоличествоВПути,
	        |			СУММА(Б.КоличествоПриход2Недели) КАК КоличествоПриход2Недели,
	        |			СУММА(Б.КоличествоПриход2Месяца) КАК КоличествоПриход2Месяца,
	        |			СУММА(Б.КоличествоВПроизводстве) КАК КоличествоВПроизводстве
	        |		ИЗ
	        |			(ВЫБРАТЬ
	        |				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	        |				ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
	        |				0 КАК КоличествоВПути,
	        |				0 КАК КоличествоПриход2Недели,
	        |				0 КАК КоличествоПриход2Месяца,
	        |				0 КАК КоличествоВПроизводстве
	        |			ИЗ
	        |				РегистрНакопления.ТоварыНаСкладах.Остатки(
	        |						,
	        |						Номенклатура В
	        |								(ВЫБРАТЬ
	        |									ВТ_НоменклатураКрепёж.Ссылка
	        |								ИЗ
	        |									ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж)
	        |							И НЕ Склад.ЗапретитьИспользование
	        |							И НЕ Склад.Транзитный {(Номенклатура).*}) КАК ТоварыНаСкладахОстатки
	        |			ГДЕ
	        |				ТоварыНаСкладахОстатки.КоличествоОстаток > 0
	        |			
	        |			ОБЪЕДИНИТЬ ВСЕ
	        |			
	        |			ВЫБРАТЬ
	        |				регТоварыВПути.Номенклатура,
	        |				0,
	        |				СУММА(регТоварыВПути.КоличествоОстаток),
	        |				СУММА(регТоварыВПути.КоличествоПриход2Недели),
	        |				СУММА(регТоварыВПути.КоличествоПриход2Месяца),
	        |				0
	        |			ИЗ
	        |				(ВЫБРАТЬ
	        |					ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступленияВПорт,
	        |					ВЫБОР
	        |						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
	        |								И (ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления >= ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, -3)
	        |									ИЛИ ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления = &ПустаяДата)
	        |							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
	        |						ИНАЧЕ 0
	        |					КОНЕЦ КАК КоличествоПриход2Недели,
	        |					ВЫБОР
	        |						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
	        |							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
	        |						ИНАЧЕ 0
	        |					КОНЕЦ КАК КоличествоПриход2Месяца,
	        |					ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	        |					ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	        |					ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	        |				ИЗ
	        |					РегистрНакопления.ЗаказыПоставщикам.Остатки(
	        |							,
	        |							Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
	        |								И Номенклатура В
	        |									(ВЫБРАТЬ
	        |										ВТ_НоменклатураКрепёж.Ссылка
	        |									ИЗ
	        |										ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж)
	        |								И НЕ ЗаказПоставщику.Транзит {(Номенклатура).*}) КАК ЗаказыПоставщикамОстатки) КАК регТоварыВПути
	        |			ГДЕ
	        |				(регТоварыВПути.КоличествоОстаток > 0
	        |						ИЛИ регТоварыВПути.КоличествоПриход2Недели > 0
	        |						ИЛИ регТоварыВПути.КоличествоПриход2Месяца > 0)
	        |			
	        |			СГРУППИРОВАТЬ ПО
	        |				регТоварыВПути.Номенклатура
	        |			
	        |			ОБЪЕДИНИТЬ ВСЕ
	        |			
	        |			ВЫБРАТЬ
	        |				ОстаткиОТХ.Номенклатура,
	        |				СУММА(ОстаткиОТХ.КоличествоОстаток),
	        |				СУММА(0),
	        |				СУММА(0),
	        |				СУММА(0),
	        |				СУММА(0)
	        |			ИЗ
	        |				(ВЫБРАТЬ
	        |					отх.Номенклатура КАК Номенклатура,
	        |					отх.КоличествоОстаток КАК КоличествоОстаток
	        |				ИЗ
	        |					РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	        |							,
	        |							НЕ Склад.Транзитный
	        |								И НЕ Склад.ЗапретитьИспользование
	        |								И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
	        |								И Контрагент В (&СписокПоставщиковОТХ)
	        |								И Номенклатура В
	        |									(ВЫБРАТЬ
	        |										ВТ_НоменклатураКрепёж.Ссылка
	        |									ИЗ
	        |										ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж) {(Номенклатура).*}) КАК отх
	        |				ГДЕ
	        |					отх.КоличествоОстаток > 0) КАК ОстаткиОТХ
	        |			
	        |			СГРУППИРОВАТЬ ПО
	        |				ОстаткиОТХ.Номенклатура
	        |			
	        |			ОБЪЕДИНИТЬ ВСЕ
	        |			
	        |			ВЫБРАТЬ
	        |				регТоварыВПроизводстве.Номенклатура,
	        |				0,
	        |				0,
	        |				0,
	        |				0,
	        |				ВЫБОР
	        |					КОГДА &РежимФормирования
	        |							И СУММА(регТоварыВПроизводстве.КоличествоОстаток) > 50
	        |						ТОГДА 51
	        |					ИНАЧЕ СУММА(регТоварыВПроизводстве.КоличествоОстаток)
	        |				КОНЕЦ
	        |			ИЗ
	        |				(ВЫБРАТЬ
	        |					ЗаказыПоставщикуСезонныеОстатки.Номенклатура КАК Номенклатура,
	        |					ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток КАК КоличествоОстаток
	        |				ИЗ
	        |					РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
	        |							&ТекущаяДата,
	        |							НЕ ЗаказПоставщикуСезонный.Транзит
																//07.12.2016
	        |								И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекущаяДатаСезЗак
	        |								И Номенклатура В
	        |									(ВЫБРАТЬ
	        |										ВТ_НоменклатураКрепёж.Ссылка
	        |									ИЗ
	        |										ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж) {(Номенклатура).*}) КАК ЗаказыПоставщикуСезонныеОстатки
	        |				ГДЕ
	        |					ЕСТЬNULL(ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток, 0) > 0) КАК регТоварыВПроизводстве
	        |			
	        |			СГРУППИРОВАТЬ ПО
	        |				регТоварыВПроизводстве.Номенклатура) КАК Б
	        |		
	        |		СГРУППИРОВАТЬ ПО
	        |			Б.Номенклатура) КАК А
	        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	        |					,
	        |					ЗаказПокупателя.Проверен
	        |						И НЕ ЗаказПокупателя.Транзит
	        |						И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
	        |						И Номенклатура В
	        |							(ВЫБРАТЬ
	        |								ВТ_НоменклатураКрепёж.Ссылка
	        |							ИЗ
	        |								ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж) {(Номенклатура).*}) КАК ЗаказыПокупателейОстатки
	        |			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	        |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |				ЗначенияСвойствобъектов.Объект КАК Объект,
	        |				ЗначенияСвойствобъектов.Значение КАК Цвет
	        |			ИЗ
	        |				РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствобъектов
	        |			ГДЕ
	        |				ЗначенияСвойствобъектов.Свойство = &СвойствоЦвет) КАК ЗначенияСвойствобъектов
	        |			ПО А.Номенклатура = ЗначенияСвойствобъектов.Объект
	        |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |				ВТЦеныUSD.Номенклатура КАК Номенклатура,
	        |				ВТЦеныUSD.Цена КАК Цена
	        |			ИЗ
	        |				ВТ_ЦеныUSD КАК ВТЦеныUSD) КАК ЦеныБазовая
	        |			ПО А.Номенклатура = ЦеныБазовая.Номенклатура) КАК Б
	        |ГДЕ
	        |	НЕ Б.Номенклатура В ИЕРАРХИИ (&Крышки)
	        |	И (Б.ОстатокДляКлиента > 0
	        |			ИЛИ Б.КоличествоВПути > 0
	        |"+?(исклБолее45,"","ИЛИ Б.КоличествоВПроизводстве > 0")+"
			|			)
	        |	И Б.Номенклатура В
	        |			(ВЫБРАТЬ
	        |				ВТ_НоменклатураКрепёж.Ссылка
	        |			ИЗ
	        |				ВТ_НоменклатураКрепёж КАК ВТ_НоменклатураКрепёж)
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Родитель,
	        |	Б.Номенклатура.Производитель.Наименование,
	        |	Б.Номенклатура.Модель.Наименование,
	        |	Б.Номенклатура.Типоразмер.Наименование,
	        |	Б.Номенклатура.Наименование";
	
	Возврат Текст;
КонецФункции	

//24.06.2016
Процедура ДействияФормыГрузДиски(Кнопка)
	
	НеВыводитьДискиПодЗаказ = Истина;
	
	Сообщить(строка(ТекущаяДата())+" --- начало формирования данных Грузовые диски Ярославль ---");
	Переключатель1 = 1; // для менеджеров
	ВидОтчета = 1;
	USD =false; ФлФотоАксАКБ =false; флагШК=false;
	
	ПостроительОтчетаОтчет.Отбор.Сбросить();
	
	стр1 = ПостроительОтчетаОтчет.Отбор.Добавить("Номенклатура.НоменклатурнаяГруппа", "Номенклатурная группа", "Номенклатурная группа");
	стр1.ВидСравнения = ВидСравнения.Равно;
	стр1.Значение     = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00013");
	стр1.Использование = Истина;
     ПоказыватьАртикул = истина; //01.02.2017
	ДействияФормыСформироватьТолькоДиски(неопределено, истина);
	
	//		АктивныйДокумент = ПолучитьМакет("МакетExcel");
	//		Excel1 = АктивныйДокумент.Получить();
	//		если ВыгрузитьДанные(Excel1, 6, ?(USD,"Cargo Wheels", "Груз.диски") )<0 тогда возврат; КонецЕсли;						
	//		Excel1=неопределено;
	Сообщить(строка(ТекущаяДата())+" --- конец формирования данных Грузовые диски Ярославль ---");
				
КонецПроцедуры

//=====================================================================================================
врФТП = неопределено;

//-----------------------выгрузка в папку www.yst.ru/data/---------------------
	ФТПyst = "ftp.yst.ru";
    ИмяФТП = "dc140403_yst";
 парольФТП = "scdi7kRU";
 
путь1 = "\\terminal\ОБМЕН\Гостева Алёна\2019\"; // путь для временных 
