
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт

	СписокПользователей = Новый СписокЗначений;
	
	ФлагОтображатьВсеЗаказы=Ложь;
	Если НЕ ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОтображатьВсеЗаказы") Тогда
		

		Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") 
			И ЗначениеЗаполнено(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов"))
			И НЕ ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОтображатьТолькоСобственныеЗаказы") Тогда //+++ 2012 для списка заказов
		
			Для каждого СтрокаСпр Из ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов").ПользователиГруппы Цикл
				
				СписокПользователей.Добавить(СтрокаСпр.Пользователь);	
				
			КонецЦикла; 

		Иначе
			СписокПользователей.Добавить(глТекущийПользователь);
			
		КонецЕсли;
	Иначе
		ФлагОтображатьВсеЗаказы=Истина;
	КонецЕсли;	
	
	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентами.Контрагент.Код КАК Код,
	|	ВзаиморасчетыСКонтрагентами.Контрагент.ИНН КАК ИНН,
	|	ВзаиморасчетыСКонтрагентами.Контрагент КАК Контрагент,
	|	ВзаиморасчетыСКонтрагентами.Контрагент.ОсновнойМенеджерКонтрагента КАК ОсновнойМенеджерКонтрагента,
	|	КонтактнаяИнформация.Представление КАК ПочтовыйАдрес
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДоговорКонтрагента.Владелец КАК Контрагент
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|	ГДЕ НЕ ДоговорКонтрагента.Владелец.ЭтоГруппа И 
	| ДоговорКонтрагента.Владелец.ЮрФизЛицо = &ЮрФизЛицо
	|  И ( ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента В (&СписокПользователей)
	|  ИЛИ  &ФлагОтображатьВсеЗаказы) 
	|
	|) КАК ВзаиморасчетыСКонтрагентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Объект КАК Объект,
	|			Вид КАК Вид,
	|			Представление КАК Представление
	|		ИЗ  РегистрСведений.КонтактнаяИнформация 
	|		ГДЕ Вид = &ПочтовыйАдрес) КАК КонтактнаяИнформация
	|		ПО ВзаиморасчетыСКонтрагентами.Контрагент = КонтактнаяИнформация.Объект
	| ГДЕ ВзаиморасчетыСКонтрагентами.Контрагент.Покупатель
	|УПОРЯДОЧИТЬ ПО
	|	ВзаиморасчетыСКонтрагентами.Контрагент.ОсновнойМенеджерКонтрагента.Наименование, ВзаиморасчетыСКонтрагентами.Контрагент.Наименование";

	Запрос.УстановитьПараметр("ПочтовыйАдрес",  Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00015"));
	Запрос.УстановитьПараметр("ЮрФизЛицо",  Перечисления.ЮрФизЛицо.ЮрЛицо);
	Запрос.УстановитьПараметр("СписокПользователей",  СписокПользователей);
	Запрос.УстановитьПараметр("ФлагОтображатьВсеЗаказы",  ФлагОтображатьВсеЗаказы);
	

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ИзменитьАдрес(Кнопка)
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	ЮрАдрес="";
	ПочтАдрес="";
	
	Если  ТабДок.ВыделенныеОбласти.Количество()>0 Тогда
		
		ФормаКонтрагента = ПолучитьФорму("ФормаКонтрагента"); 
		КонтрагентНаименование=ТабДок.ВыделенныеОбласти[0].Текст;
		Контрагент = Справочники.Контрагенты.НайтиПоНаименованию(КонтрагентНаименование);
		///////////////
		МенеджерКонтрагент=РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
		МенеджерКонтрагент.Объект = Контрагент;
		МенеджерКонтрагент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
		МенеджерКонтрагент.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
		
		МенеджерКонтрагент.Прочитать();
		
		Если МенеджерКонтрагент.Выбран() Тогда
			ЮрАдрес=МенеджерКонтрагент.Представление;
		КонецЕсли;	
		///////////////
		МенеджерКонтрагент=РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
		МенеджерКонтрагент.Объект = Контрагент;
		МенеджерКонтрагент.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;
		МенеджерКонтрагент.Вид = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00015"); // почтовый адрес
		
		МенеджерКонтрагент.Прочитать();
		
		Если МенеджерКонтрагент.Выбран() Тогда
			ПочтАдрес=МенеджерКонтрагент.Представление;
		КонецЕсли;	
		
		ФормаКонтрагента.Контрагент = Контрагент;
		ФормаКонтрагента.ЮридическийАдрес = ЮрАдрес;
		ФормаКонтрагента.ПочтовыйАдрес = ПочтАдрес;
		
		ФормаКонтрагента.Открыть();
	КонецЕсли;
КонецПроцедуры
