
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ПродажиПоПоставщикуИнициализация();

КонецПроцедуры

Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОбработкиВнешняяОбработка1ПродажиПоПоставщику_a6eaf31c-7bbe-4aa5-9f30-927164b238f1", ПостроительОтчетаПродажиПоПоставщику.ПолучитьНастройки());

КонецПроцедуры

Процедура ДействияФормыПродажиПоПоставщикуНастройка(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА(ПродажиПоПоставщику)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Форма = ВнешняяОбработкаОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаПродажиПоПоставщику;
	Настройка = ПостроительОтчетаПродажиПоПоставщику.ПолучитьНастройки();
	Если Форма.ОткрытьМодально() = Истина Тогда
		ПродажиПоПоставщикуВывести();
	Иначе
		ПостроительОтчетаПродажиПоПоставщику.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА
КонецПроцедуры

Процедура ДействияФормыПродажиПоПоставщикуСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(ПродажиПоПоставщику)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ПродажиПоПоставщикуВывести();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ПродажиПоПоставщикуВывести()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ(ПродажиПоПоставщику)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();

	ПостроительОтчетаПродажиПоПоставщику.Параметры.Вставить("КонДата", КонДата);
	ПостроительОтчетаПродажиПоПоставщику.Параметры.Вставить("Контрагент", Контрагент);
	ПостроительОтчетаПродажиПоПоставщику.Параметры.Вставить("НачДата", НачДата);

	ПостроительОтчетаПродажиПоПоставщику.Выполнить();
	ПостроительОтчетаПродажиПоПоставщику.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	ПостроительОтчетаПродажиПоПоставщику.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаПродажиПоПоставщику.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаПродажиПоПоставщику.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Классика);
	ПостроительОтчетаПродажиПоПоставщику.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ
КонецПроцедуры

Процедура ПродажиПоПоставщикуИнициализация()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ(ПродажиПоПоставщику)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ПостроительОтчетаПродажиПоПоставщику.Текст =
	"ВЫБРАТЬ
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	ПродажиОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПродажиОбороты.ДокументПродажи,
	|	ПродажиОбороты.Номенклатура,
	|	ПродажиОбороты.КоличествоОборот КАК КоличествоОборот,
	|	ПродажиОбороты.СтоимостьОборот КАК СтоимостьОборот
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&НачДата, &КонДата, Регистратор, ) КАК ПродажиОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(, , Регистратор, ДокументОприходования.ДоговорКонтрагента.Владелец = &Контрагент) КАК ПродажиСебестоимостьОбороты
	|		ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
	|			И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
	|ИТОГИ
	|	СУММА(КоличествоОборот),
	|	СУММА(СтоимостьОборот)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент,
	|	ДоговорКонтрагента";
	ПостроительОтчетаПродажиПоПоставщику.ЗаполнитьНастройки();
	ПостроительОтчетаПродажиПоПоставщику.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительОтчетаПродажиПоПоставщику.ТекстЗаголовка = "Продажи по поставщику";
	Настройка = ВосстановитьЗначение("НастройкаВнешниеОбработкиВнешняяОбработка1ПродажиПоПоставщику_a6eaf31c-7bbe-4aa5-9f30-927164b238f1");
	Если Настройка <> Неопределено Тогда
		ПостроительОтчетаПродажиПоПоставщику.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры
