
Перем ТаблицаКрышкиРасшифровка Экспорт;
Перем  ТаблицаБолтыРасшифровка Экспорт;

Процедура ДействияФормыОтчетСформировать(Кнопка)

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	ТабДок2=ЭлементыФормы.ПолеТабличногоДокумента2;
	ТабДок3=ЭлементыФормы.ПолеТабличногоДокумента3;
	ТабДок4=ЭлементыФормы.ПолеТабличногоДокумента4;

	Отчет(ТабДок,ТабДок2,ТабДок3,ТабДок4);

КонецПроцедуры

Процедура Отчет(ТабДок,ТабДок2,ТабДок3,ТабДок4) Экспорт
	
	Запрос2Передел=Новый Запрос;
	Запрос2Передел.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос2Передел.УстановитьПараметр("Диски", Справочники.Номенклатура.НайтиПоКоду("0001752"));
	Запрос2Передел.Текст="////////////////////////////////////// ПЕРВЫЙ ПЕРЕДЕЛ

|ВЫБРАТЬ А.Номенклатура 
|ПОМЕСТИТЬ ВТ_КомплектующиеДиски
|ИЗ РегистрСведений.КомплектующиеНоменклатуры А
|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
|РегистрСведений.КомплектующиеНоменклатуры Б
|ПО А.Номенклатура=Б.Комплектующая
|ГДЕ А.Номенклатура В ИЕРАРХИИ(&Диски)

|;

|ВЫБРАТЬ КомплектующиеНоменклатуры.Номенклатура,
|КомплектующиеНоменклатуры.Комплектующая,
|КомплектующиеНоменклатуры.Количество,
|ТоварыНаСкладахОстаткиКомплектующая.КоличествоОстаток  КомплектующаяКоличествоОстаток
|ПОМЕСТИТЬ ВТ_1
|ИЗ
|(ВЫБРАТЬ
|			Номенклатура, 
|			Комплектующая, 
|			Количество
|		ИЗ
|			РегистрСведений.КомплектующиеНоменклатуры 
|		ГДЕ
|			Номенклатура В ИЕРАРХИИ(&Диски)
|			И  Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура ИЗ ВТ_КомплектующиеДиски)) КАК КомплектующиеНоменклатуры
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки( ,
|					(НЕ Склад.Транзитный) И (НЕ Склад.ЗапретитьИспользование)) 
|					КАК ТоварыНаСкладахОстаткиКомплектующая
|			ПО КомплектующиеНоменклатуры.Комплектующая = ТоварыНаСкладахОстаткиКомплектующая.Номенклатура

| ;
| 
| ВЫБРАТЬ  Номенклатура,
|Комплектующая,
|Количество,
|КомплектующаяКоличествоОстаток
|ПОМЕСТИТЬ ВТ_Диски
|ИЗ ВТ_1
|ГДЕ Комплектующая.ВидТовара=Значение(Перечисление.ВидыТоваров.Диски)

|;

|ВЫБРАТЬ  Номенклатура,
|Комплектующая,
|Количество,
|КомплектующаяКоличествоОстаток
|ПОМЕСТИТЬ ВТ_11_ТолькоБолты
|ИЗ ВТ_1
|ГДЕ Комплектующая.ВидТовара<>Значение(Перечисление.ВидыТоваров.Диски)

|;

|ВЫБРАТЬ ВТ_Диски.Номенклатура ДискНоменклатура, ВТ_Диски.Комплектующая Диск,
|ВТ_Диски.КомплектующаяКоличествоОстаток ДискОстаток,ВТ_11_ТолькоБолты.Комплектующая Болт,
|ВТ_11_ТолькоБолты.Количество КоличествоБолтовНаДиск, ВТ_11_ТолькоБолты.КомплектующаяКоличествоОстаток БолтОстаток,
|ВТ_Диски.КомплектующаяКоличествоОстаток*ВТ_11_ТолькоБолты.Количество КоличествоБолтовНаДиски
|ПОМЕСТИТЬ ВТ_2
|ИЗ  ВТ_Диски ЛЕВОЕ СОЕДИНЕНИЕ ВТ_11_ТолькоБолты ПО ВТ_Диски.Номенклатура=ВТ_11_ТолькоБолты.Номенклатура
|//УПОРЯДОЧИТЬ ПО ВТ_11_ТолькоБолты.Комплектующая.Наименование

|;

|ВЫБРАТЬ  Болт,СУММА(КоличествоБолтовНаДиски) ИтогоКоличествоБолтовНаДиски
|ПОМЕСТИТЬ ВТ_ТолькоБолты
|ИЗ ВТ_2
|СГРУППИРОВАТЬ ПО Болт

|;

|ВЫБРАТЬ  ВТ_2.ДискНоменклатура, ВТ_2.Диск,
|ЕстьNULL(ВТ_2.ДискОстаток,0) ДискОстаток,ВТ_2.Болт,
|ЕстьNULL(ВТ_2.КоличествоБолтовНаДиск,0) КоличествоБолтовНаДиск, ВТ_2.БолтОстаток,
|ВТ_2.КоличествоБолтовНаДиски,
|ВТ_ТолькоБолты.ИтогоКоличествоБолтовНаДиски,
|ВЫБОР КОГДА ЕстьNULL(ВТ_ТолькоБолты.ИтогоКоличествоБолтовНаДиски,0)>0 И 
|ЕстьNULL(ВТ_ТолькоБолты.ИтогоКоличествоБолтовНаДиски,0)<=ЕстьNULL(ВТ_2.БолтОстаток,0) Тогда // болтами можно укомплектовать все диски
|ЕстьNULL(ВТ_2.ДискОстаток,0)
|КОГДА  ЕстьNULL(ВТ_ТолькоБолты.ИтогоКоличествоБолтовНаДиски,0)>0 И
|ЕстьNULL(ВТ_ТолькоБолты.ИтогоКоличествоБолтовНаДиски,0)>ЕстьNULL(ВТ_2.БолтОстаток,0) Тогда //требуется больше болтов к дискам, делим пропорционально
|ЕстьNULL(ВТ_2.БолтОстаток,0)/ЕстьNULL(ВТ_ТолькоБолты.ИтогоКоличествоБолтовНаДиски,0)*ЕстьNULL(ВТ_2.ДискОстаток,0)
|Иначе
|0
|КОНЕЦ ДисковМожноСобрать1Передел
|ПОМЕСТИТЬ ВТ_3
| ИЗ ВТ_2
|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТолькоБолты
|ПО ВТ_2.Болт=ВТ_ТолькоБолты.Болт
|
|;
|
| // Последний запрос исключительно для округления числа дисков,которые можем собрать:
| // ДисковМожноСобрать1Передел=Цел(ДисковМожноСобрать1Передел)
|
|ВЫБРАТЬ  ВТ_3.ДискНоменклатура, ВТ_3.Диск,
|ВТ_3.ДискОстаток,ВТ_3.Болт,
|ВТ_3.КоличествоБолтовНаДиск, ВТ_3.БолтОстаток,
|ВТ_3.КоличествоБолтовНаДиски,
|ВТ_3.ИтогоКоличествоБолтовНаДиски,
|ВТ_3.ДискОстаток,
|ВЫБОР 
|КОГДА ВЫРАЗИТЬ(ВТ_3.ДисковМожноСобрать1Передел КАК ЧИСЛО(10,0))> ВТ_3.ДисковМожноСобрать1Передел ТОГДА
|ВЫРАЗИТЬ(ВТ_3.ДисковМожноСобрать1Передел КАК ЧИСЛО(10,0))-1 
|ИНАЧЕ
|ВЫРАЗИТЬ(ВТ_3.ДисковМожноСобрать1Передел КАК ЧИСЛО(10,0))
|КОНЕЦ   ДисковМожноСобрать1Передел,
|ВЫБОР 
|КОГДА ВЫРАЗИТЬ(ВТ_3.ДисковМожноСобрать1Передел КАК ЧИСЛО(10,0))> ВТ_3.ДисковМожноСобрать1Передел ТОГДА
|(ВЫРАЗИТЬ(ВТ_3.ДисковМожноСобрать1Передел КАК ЧИСЛО(10,0))-1)* ВТ_3.КоличествоБолтовНаДиск
|ИНАЧЕ
|ВЫРАЗИТЬ(ВТ_3.ДисковМожноСобрать1Передел КАК ЧИСЛО(10,0)) * ВТ_3.КоличествоБолтовНаДиск
|КОНЕЦ   БолтовНа1Передел
|ПОМЕСТИТЬ ВТ_Диски1ПеределПолн
|ИЗ ВТ_3
|
|;
|
| //////////////////   ВТОРОЙ ПЕРЕДЕЛ
|
|
|
|ВЫБРАТЬ  А.Номенклатура, А.Комплектующая, 
|ЕстьNULL(ТоварыНаСкладах.КоличествоОстаток,0) КомплектующаяКоличествоОстаток,
|ВТ_Диски1ПеределПолн.ДисковМожноСобрать1Передел,
|ВЫБОР КОГДА Комплектующая.ВидТовара=Значение (Перечисление.ВидыТоваров.Диски) Тогда
|ЕстьNULL(ТоварыНаСкладах.КоличествоОстаток,0) + ЕстьNULL(ВТ_Диски1ПеределПолн.ДисковМожноСобрать1Передел,0) 
|Иначе
|0
|Конец КоличествоДисковОстаток
|ПОМЕСТИТЬ ВТ_21
|ИЗ
|(ВЫБРАТЬ Номенклатура.Код,Номенклатура,Комплектующая 
|ИЗ РегистрСведений.КомплектующиеНоменклатуры
|ГДЕ Номенклатура В ИЕРАРХИИ(&Диски) И НЕ Номенклатура В (ВЫБРАТЬ Комплектующая ИЗ РегистрСведений.КомплектующиеНоменклатуры )) А
|ЛЕВОЕ СОЕДИНЕНИЕ
|РегистрНакопления.ТоварыНаСкладах.Остатки(,(НЕ Склад.Транзитный) И (НЕ Склад.ЗапретитьИспользование)) ТоварыНаСкладах
|ПО А.Комплектующая=ТоварыНаСкладах.Номенклатура
|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Диски1ПеределПолн
|ПО А.Комплектующая=ВТ_Диски1ПеределПолн.ДискНоменклатура
|//УПОРЯДОЧИТЬ ПО А.Номенклатура.Наименование
|;
|ВЫБРАТЬ   Номенклатура.Код, Номенклатура, КоличествоДисковОстаток 
|ПОМЕСТИТЬ ВТ_22_ТолькоДиски
|ИЗ ВТ_21
|ГДЕ Комплектующая.ВидТовара=Значение (Перечисление.ВидыТоваров.Диски)
|//УПОРЯДОЧИТЬ ПО Номенклатура.Код
|;
|ВЫБРАТЬ   Номенклатура.Код, Номенклатура, Комплектующая, КомплектующаяКоличествоОстаток 
|ПОМЕСТИТЬ ВТ_22_НеДиски
|ИЗ ВТ_21
|ГДЕ Комплектующая.ВидТовара<>Значение (Перечисление.ВидыТоваров.Диски)
|//УПОРЯДОЧИТЬ ПО Номенклатура.Код
| ;
|
|ВЫБРАТЬ ВТ_22_ТолькоДиски.Номенклатура, ВТ_22_ТолькоДиски.КоличествоДисковОстаток,
|ВТ_22_НеДиски.Комплектующая,ВТ_22_НеДиски.КомплектующаяКоличествоОстаток КоличествоКрышекОстаток
|ПОМЕСТИТЬ ВТ_23
|ИЗ ВТ_22_ТолькоДиски
|ЛЕВОЕ СОЕДИНЕНИЕ   ВТ_22_НеДиски
|ПО ВТ_22_ТолькоДиски.Номенклатура=ВТ_22_НеДиски.Номенклатура
|ГДЕ  НЕ Комплектующая ЕСТЬ NULL
|//УПОРЯДОЧИТЬ ПО ВТ_22_ТолькоДиски.Номенклатура.Код
|;
|ВЫБРАТЬ Комплектующая, СУММА(КоличествоДисковОстаток) ИтогоКоличествоКрышекНаДиски
|ПОМЕСТИТЬ ВТ_24
|ИЗ ВТ_23
|СГРУППИРОВАТЬ ПО Комплектующая
|;
|ВЫБРАТЬ ВТ_23.Номенклатура, ЕстьNULL(ВТ_23.КоличествоДисковОстаток,0) КоличествоДисковОстаток,
|ВТ_23.Комплектующая, ЕстьNULL(КоличествоКрышекОстаток,0) КоличествоКрышекОстаток,
|ВТ_24.ИтогоКоличествоКрышекНаДиски,
|ВЫБОР КОГДА ЕстьNULL(ВТ_23.КоличествоКрышекОстаток,0)> ЕстьNULL(ВТ_24.ИтогоКоличествоКрышекНаДиски,0) Тогда
|1
|КОГДА ЕстьNULL(ВТ_23.КоличествоКрышекОстаток,0)<=0 Тогда 0
|КОГДА ЕстьNULL(ВТ_23.КоличествоКрышекОстаток,0)>0 ТОГДА
|ЕстьNULL(ВТ_23.КоличествоКрышекОстаток,0)/ ЕстьNULL(ВТ_24.ИтогоКоличествоКрышекНаДиски,1) 
|КОНЕЦ Коэффициент
|ПОМЕСТИТЬ ВТ_25
|ИЗ ВТ_23
|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_24
|ПО ВТ_23.Комплектующая=ВТ_24.Комплектующая
|
|;
|
|  // вывод остатков и потребностей по болтам
| ВЫБРАТЬ Болт Комплектующая,СРЕДНЕЕ(БолтОстаток) КоличествоКомплектующихОстаток ,СРЕДНЕЕ(ИтогоКоличествоБолтовНаДиски) ИтогоКоличествоКомплектующихНаДиски,
|СРЕДНЕЕ(БолтОстаток) - СРЕДНЕЕ(ИтогоКоличествоБолтовНаДиски) СвободныйОстаток
|ПОМЕСТИТЬ ВТ_Болты
|ИЗ  ВТ_Диски1ПеределПолн
|СГРУППИРОВАТЬ ПО Болт
|//УПОРЯДОЧИТЬ ПО СРЕДНЕЕ(БолтОстаток)-СРЕДНЕЕ(ИтогоКоличествоБолтовНаДиски)
|
| ;
|  // вывод остатков и потребностей по крышкам
|ВЫБРАТЬ Комплектующая, СРЕДНЕЕ(КоличествоКрышекОстаток) КоличествоКомплектующихОстаток, СРЕДНЕЕ (ИтогоКоличествоКрышекНаДиски)  ИтогоКоличествоКомплектующихНаДиски,
|СРЕДНЕЕ(КоличествоКрышекОстаток)-СРЕДНЕЕ (ИтогоКоличествоКрышекНаДиски) СвободныйОстаток
|ПОМЕСТИТЬ ВТ_Крышки
|ИЗ ВТ_25
|СГРУППИРОВАТЬ ПО  Комплектующая
| // 
|;
|ВЫБРАТЬ  ВТ_25.Номенклатура, СРЕДНЕЕ(ВТ_25.КоличествоДисковОстаток) КоличествоДисковОстаток, 
|МИНИМУМ(ВТ_25.Коэффициент) Коэффициент,
|СРЕДНЕЕ(ВТ_25.КоличествоДисковОстаток)*МИНИМУМ(ВТ_25.Коэффициент) ДисковМожноСобрать2Передел
|ПОМЕСТИТЬ ВТ_26
|ИЗ ВТ_25
|СГРУППИРОВАТЬ ПО ВТ_25.Номенклатура
|;
|ВЫБРАТЬ  ВТ_26.Номенклатура, ВТ_26.КоличествоДисковОстаток, ВТ_26.Коэффициент,
|ВТ_26.ДисковМожноСобрать2Передел, ЕстьNULL(ТоварыНаСкладах.КоличествоОстаток,0) КоличествоОстаток,
|  ВЫБОР КОГДА ВТ_26.ДисковМожноСобрать2Передел >= ВЫРАЗИТЬ (ВТ_26.ДисковМожноСобрать2Передел КАК ЧИСЛО(15,0))ТОГДА 
|ВЫРАЗИТЬ (ВТ_26.ДисковМожноСобрать2Передел КАК ЧИСЛО(15,0))
|ИНАЧЕ
|ВЫРАЗИТЬ(ВТ_26.ДисковМожноСобрать2Передел КАК ЧИСЛО(15,0))-1
|КОНЕЦ
|+ ЕстьNULL(ТоварыНаСкладах.КоличествоОстаток,0) ДисковВсего
|ИЗ ВТ_26
|ЛЕВОЕ СОЕДИНЕНИЕ
| РегистрНакопления.ТоварыНаСкладах.Остатки(,(НЕ Склад.Транзитный) И (НЕ Склад.ЗапретитьИспользование)) ТоварыНаСкладах
| ПО ВТ_26.Номенклатура=ТоварыНаСкладах.Номенклатура
| УПОРЯДОЧИТЬ ПО ВТ_26.Номенклатура.Наименование";

// Структура Таблицы2Передел
//  Номенклатура - диск укомпл
//  КоличествоДисковОстаток - количество дисков ** общее (собрано + комплектовано)
//  Коэффициент - если < 0, то крышек не хватает
// ДисковМожноСобрать2Передел - кол-во дисков, которых можно собрать
// КоличествоОстаток - количество собранных дисков укомпл

 Таблица2Передел=Запрос2Передел.Выполнить().Выгрузить();
 //Таблица2Передел.ВыбратьСтроку();
 
Запрос1Передел=Новый Запрос;
Запрос1Передел.МенеджерВременныхТаблиц=Запрос2Передел.МенеджерВременныхТаблиц;
Запрос1Передел.Текст="ВЫБРАТЬ * ИЗ ВТ_Диски1ПеределПолн";
Таблица1Передел=Запрос1Передел.Выполнить().Выгрузить();
 
ЗапросДляКрышек=Новый Запрос;
ЗапросДляКрышек.МенеджерВременныхТаблиц=Запрос2Передел.МенеджерВременныхТаблиц;
ЗапросДляКрышек.Текст="ВЫБРАТЬ * ИЗ ВТ_25";
ТаблицаКрышки=ЗапросДляКрышек.Выполнить().Выгрузить();

ЗапросДляКрышек=Новый Запрос;
ЗапросДляКрышек.МенеджерВременныхТаблиц=Запрос2Передел.МенеджерВременныхТаблиц;
ЗапросДляКрышек.Текст="ВЫБРАТЬ * ИЗ ВТ_Крышки";
ТаблицаКрышкиСводная=ЗапросДляКрышек.Выполнить().Выгрузить();
ТаблицаКрышкиСводная.Сортировать("СвободныйОстаток");

ЗапросБолты=Новый Запрос;
ЗапросБолты.МенеджерВременныхТаблиц=Запрос2Передел.МенеджерВременныхТаблиц;
ЗапросБолты.Текст="ВЫБРАТЬ * ИЗ ВТ_Болты";
ТаблицаБолтыСводная=ЗапросБолты.Выполнить().Выгрузить();
ТаблицаБолтыСводная.Сортировать("СвободныйОстаток");

ЗапросКрышкиРасшифровка=Новый Запрос;
ЗапросКрышкиРасшифровка.МенеджерВременныхТаблиц=Запрос2Передел.МенеджерВременныхТаблиц;
ЗапросКрышкиРасшифровка.Текст="ВЫБРАТЬ * ИЗ ВТ_23";
ТаблицаКрышкиРасшифровка=ЗапросКрышкиРасшифровка.Выполнить().Выгрузить();

ЗапросБолтыРасшифровка=Новый Запрос;
ЗапросБолтыРасшифровка.МенеджерВременныхТаблиц=Запрос2Передел.МенеджерВременныхТаблиц;
ЗапросБолтыРасшифровка.Текст="ВЫБРАТЬ * ИЗ ВТ_3";
ТаблицаБолтыРасшифровка=ЗапросБолтыРасшифровка.Выполнить().Выгрузить();




	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	|	КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая
	|ПОМЕСТИТЬ ВТ_КОМПЛЕКТЫ
	|ИЗ
	|	(ВЫБРАТЬ Номенклатура, 	Комплектующая,  Количество
	|	ИЗ  РегистрСведений.КомплектующиеНоменклатуры 
	|	ГДЕ Номенклатура В ИЕРАРХИИ(&Диски)) КАК КомплектующиеНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.Комплект.Код,
	|	А.Комплект КАК Комплект,
	|	А.Комплектующая КАК Комплектующая,
	|	А.Материал
	|ИЗ
	|	(ВЫБРАТЬ
	|		Комплекты1.Номенклатура КАК Комплект,
	|		Комплекты1.Комплектующая КАК Комплектующая,
	|		Комплекты2.Комплектующая КАК Материал
	|	ИЗ
	|		ВТ_КОМПЛЕКТЫ КАК Комплекты1
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КОМПЛЕКТЫ КАК Комплекты2
	|			ПО Комплекты1.Комплектующая = Комплекты2.Номенклатура) КАК А
	|ГДЕ
	|	(НЕ А.Комплект В  (ВЫБРАТЬ РАЗЛИЧНЫЕ Комплектующая ИЗ  РегистрСведений.КомплектующиеНоменклатуры))
	|  И (Комплект.Наименование ПОДОБНО &ОтборНаименование ИЛИ &НеИспользоватьОтбор) 
	|УПОРЯДОЧИТЬ ПО А.Комплект.Наименование,А.Комплектующая.Наименование
	|ИТОГИ
	|ПО
	|	Комплект,
	|	Комплектующая";

	Запрос.УстановитьПараметр("Диски", Справочники.Номенклатура.НайтиПоКоду("0001752"));
	
	Запрос.УстановитьПараметр("НеИспользоватьОтбор", ?(СокрЛП(ОтборНаименование)="",Истина,Ложь));
    Запрос.Текст=СтрЗаменить(Запрос.Текст,"&ОтборНаименование",""""+"%"+СокрЛП(ОтборНаименование)+"%"+"""");
		
	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.КонецПериода= Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьКомплект = Макет.ПолучитьОбласть("Комплект");
	
	

	ТабДок.Очистить();
	ТабДок2.Очистить();
	ТабДок3.Очистить();
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаКомплект = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаКомплект.Следующий() Цикл
		ОбластьКомплект = Макет.ПолучитьОбласть("Комплект");
		ОбластьКомплект.Параметры.Заполнить(ВыборкаКомплект);
		
		СтруктураПоиска=Новый Структура("Номенклатура");
		СтруктураПоиска.Номенклатура=ВыборкаКомплект.Комплект ;
		ОбластьКомплект.Параметры.Код=ВыборкаКомплект.Комплект.Код;
		НайдСтроки=Таблица2Передел.НайтиСтроки(СтруктураПоиска);
		Если НайдСтроки.Количество()>0 Тогда
			ОбластьКомплект.Параметры.ОстатокКомплектующая=Цел(НайдСтроки[0].ДисковМожноСобрать2Передел);
			ОбластьКомплект.Параметры.ОстатокКомплект=НайдСтроки[0].ДисковВсего;
			//Если НайдСтроки[0].Коэффициент<1 Тогда
			//	ОбластьКомплект.Область("R1C1:R1C2").ЦветТекста=ЦветаСтиля.ЦветОтрицательногоЧисла;
			//КонецЕсли;
		КонецЕсли;
		//СтрокаКомплект=ТаблицаКомплекты.Найти(ВыборкаКомплект.Комплект.Код,"Код");
		//Если СтрокаКомплект<>Неопределено И СтрокаКомплект.МожноСобратьКоличество>0 Тогда
		//	ОбластьКомплект.Параметры.КоличествоМожноСобрать=СтрокаКомплект.МожноСобратьКоличество ;
		//Иначе
		//	ОбластьКомплект.Параметры.КоличествоМожноСобрать=0;
		//КонецЕсли;	

		ТабДок.Вывести(ОбластьКомплект, ВыборкаКомплект.Уровень());

		ВыборкаКомплектующая = ВыборкаКомплект.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаКомплектующая.Следующий() Цикл
			ОбластьКомплектующая = Макет.ПолучитьОбласть("Комплектующая");
			ОбластьКомплектующая.Параметры.Заполнить(ВыборкаКомплектующая);
			ОбластьКомплектующая.Параметры.Код=ВыборкаКомплектующая.Комплектующая.Код;
			Строка1Передел=Таблица1Передел.Найти(ВыборкаКомплектующая.Комплектующая,"ДискНоменклатура");
			Если Строка1Передел<>Неопределено Тогда
               ОбластьКомплектующая.Параметры.ОстатокМатериал=Строка1Передел.ДисковМожноСобрать1Передел;
			   //ОбластьКомплектующая.Параметры.ОстатокКомплектующая=Строка1Передел.ДискОстатокСобр;
		   КонецЕсли;
		   
		   //Выводим количество крышек и дисков **
		   Если ЗначениеЗаполнено(ВыборкаКомплектующая.Комплектующая) И ВыборкаКомплектующая.Комплектующая.ВидТовара<>Перечисления.ВидыТоваров.Диски Тогда 
			         СтруктураПоиска=Новый Структура("Номенклатура,Комплектующая");
					 СтруктураПоиска.Номенклатура=ВыборкаКомплект.Комплект ;
					 СтруктураПоиска.Комплектующая=ВыборкаКомплектующая.Комплектующая;
					НайдСтроки = ТаблицаКрышки.НайтиСтроки(СтруктураПоиска) ;
					Если НайдСтроки.Количество()>0 Тогда
						ОбластьКомплектующая.Параметры.ОстатокКомплектующая=Цел(НайдСтроки[0].Коэффициент*НайдСтроки[0].КоличествоДисковОстаток);
					КонецЕсли;	
				ИначеЕсли ЗначениеЗаполнено(ВыборкаКомплектующая.Комплектующая) И ВыборкаКомплектующая.Комплектующая.ВидТовара=Перечисления.ВидыТоваров.Диски Тогда 		
					 СтруктураПоиска=Новый Структура("Номенклатура");
					 СтруктураПоиска.Номенклатура=ВыборкаКомплект.Комплект ;
					 //СтруктураПоиска.Комплектующая=ВыборкаКомплектующая.Комплектующая;
					НайдСтроки = ТаблицаКрышки.НайтиСтроки(СтруктураПоиска) ;
					Если НайдСтроки.Количество()>0 Тогда
						ОбластьКомплектующая.Параметры.ОстатокКомплектующая=Цел(НайдСтроки[0].КоличествоДисковОстаток);
					КонецЕсли;	
					 
		   КонецЕсли;	   
			   
			ТабДок.Вывести(ОбластьКомплектующая, ВыборкаКомплектующая.Уровень());
			ВыборкаДетали = ВыборкаКомплектующая.Выбрать();

			Пока ВыборкаДетали.Следующий() Цикл
				Если Строка(ВыборкаДетали.Материал)="" Тогда Продолжить КонецЕсли;
				ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
				ОбластьДетальныхЗаписей.Параметры.Код=ВыборкаДетали.Материал.Код;
				
				Строка1Передел=Таблица1Передел.Найти(ВыборкаКомплектующая.Комплектующая,"ДискНоменклатура");
				Если Строка1Передел<>Неопределено И Строка1Передел.ДисковМожноСобрать1Передел>0 Тогда
					Если ВыборкаДетали.Материал=Строка1Передел.Диск Тогда   // Это Диск
						 ОбластьДетальныхЗаписей.Параметры.ОстатокМатериал=Строка1Передел.ДискОстаток;
					 ИначеЕсли ВыборкаДетали.Материал=Строка1Передел.Болт Тогда // Это болт 
						 ОбластьДетальныхЗаписей.Параметры.ОстатокМатериал=Строка1Передел.КоличествоБолтовНаДиски;
						 ОбластьДетальныхЗаписей.Параметры.ОстатокМатериал=Строка1Передел.БолтовНа1Передел;
					КонецЕсли;	
				КонецЕсли;	

				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
				

				
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	
	Макет=ПолучитьМакет("Макет");
	
	// Вывод сводной таблицы Крышки
		
	// по пожеланию А. Серебренниковой дефицитные позиции сортируем по строке "Дефицит",
	// а профицитные по наименованию
	
	ТаблицаКрышкиПрофицит=ТаблицаКрышкиСводная.Скопировать();
	ТаблицаКрышкиПрофицит.Колонки.Добавить("Наименование");
	ТаблицаКрышкиПрофицит.Очистить();
	
	ОбластьШапка2=Макет.ПолучитьОбласть("ШапкаТаблицы2");
	ТабДок2.Вывести(ОбластьШапка2);
	Для каждого СтрокаКрышка ИЗ ТаблицаКрышкиСводная Цикл
		Если СтрокаКрышка.СвободныйОстаток<0 Тогда
		ОбластьДетали2=Макет.ПолучитьОбласть("Детали2");
		ОбластьДетали2.Параметры.Заполнить(СтрокаКрышка);
		ОбластьДетали2.Параметры.Код=?(ЗначениеЗаполнено(СтрокаКрышка.Комплектующая),СтрокаКрышка.Комплектующая.Код,"");
		ОбластьДетали2.Параметры.Потребность = Новый Структура("ПотребностьКрышки",СтрокаКрышка.Комплектующая);
		ТабДок2.Вывести(ОбластьДетали2);
		Иначе
		СтрокаКрышкаПрофицит=ТаблицаКрышкиПрофицит.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаКрышкаПрофицит,СтрокаКрышка);
		СтрокаКрышкаПрофицит.Наименование=СтрокаКрышка.Комплектующая.Наименование;
		КонецЕсли;
	КонецЦикла;	
	
	ТаблицаКрышкиПрофицит.Сортировать("Наименование");
	
	Для каждого СтрокаКрышка ИЗ ТаблицаКрышкиПрофицит Цикл
		ОбластьДетали2=Макет.ПолучитьОбласть("Детали2");
		ОбластьДетали2.Параметры.Заполнить(СтрокаКрышка);
		ОбластьДетали2.Параметры.Код=?(ЗначениеЗаполнено(СтрокаКрышка.Комплектующая),СтрокаКрышка.Комплектующая.Код,"");
		ОбластьДетали2.Параметры.Потребность = Новый Структура("ПотребностьКрышки",СтрокаКрышка.Комплектующая);
		ТабДок2.Вывести(ОбластьДетали2);
 	КонецЦикла;	
	

	
	// Вывод сводной таблицы Болты
	ОбластьШапка2=Макет.ПолучитьОбласть("ШапкаТаблицы2");
	ТабДок3.Вывести(ОбластьШапка2);
	Для каждого СтрокаБолт ИЗ ТаблицаБолтыСводная Цикл
		ОбластьДетали2=Макет.ПолучитьОбласть("Детали2");
		ОбластьДетали2.Параметры.Заполнить(СтрокаБолт);
		ОбластьДетали2.Параметры.Код=?(ЗначениеЗаполнено(СтрокаБолт.Комплектующая),СтрокаБолт.Комплектующая.Код,"");
		ОбластьДетали2.Параметры.Потребность = Новый Структура("ПотребностьБолты",СтрокаБолт.Комплектующая);
        ТабДок3.Вывести(ОбластьДетали2);
	КонецЦикла;	

// Вывод сводной таблицы Диски по недостающим дискам
	ОбластьШапка2=Макет.ПолучитьОбласть("ШапкаТаблицыДиски");
	ТабДок4.Вывести(ОбластьШапка2);
	Для каждого СтрокаДиск ИЗ Таблица2Передел Цикл
		// выводим только недостающие диски
		Если СтрокаДиск.КоличествоДисковОстаток>0 И СтрокаДиск.Коэффициент<1 Тогда 
		ОбластьДетали2=Макет.ПолучитьОбласть("Детали2");
		ОбластьДетали2.Параметры.Заполнить(СтрокаДиск);
		ОбластьДетали2.Параметры.Код = ?(ЗначениеЗаполнено(СтрокаДиск.Номенклатура),СтрокаДиск.Номенклатура.Код,"");
		ОбластьДетали2.Параметры.Комплектующая = СтрокаДиск.Номенклатура;
		ОбластьДетали2.Параметры.КоличествоКомплектующихОстаток =  СтрокаДиск.КоличествоДисковОстаток;
		ОбластьДетали2.Параметры.ИтогоКоличествоКомплектующихНаДиски = Цел(СтрокаДиск.ДисковМожноСобрать2Передел);
		ОбластьДетали2.Параметры.СвободныйОстаток = Цел(СтрокаДиск.ДисковМожноСобрать2Передел)-СтрокаДиск.КоличествоДисковОстаток;
		//ОбластьДетали2.Параметры.Потребность = Новый Структура("ПотребностьБолты",СтрокаБолт.Комплектующая);
        ТабДок4.Вывести(ОбластьДетали2);
		КонецЕсли;
	КонецЦикла;	

	
	Для каждого СтрокаДиск ИЗ Таблица1Передел Цикл
		// выводим только недостающие диски
		Если СтрокаДиск.ДисковМожноСобрать1Передел<СтрокаДиск.ДискОстаток Тогда 
		ОбластьДетали2=Макет.ПолучитьОбласть("Детали2");
		ОбластьДетали2.Параметры.Заполнить(СтрокаДиск);
		ОбластьДетали2.Параметры.Код = ?(ЗначениеЗаполнено(СтрокаДиск.ДискНоменклатура),СтрокаДиск.ДискНоменклатура.Код,"");
		ОбластьДетали2.Параметры.Комплектующая = СтрокаДиск.ДискНоменклатура;
		ОбластьДетали2.Параметры.КоличествоКомплектующихОстаток =  СтрокаДиск.ДискОстаток;
		ОбластьДетали2.Параметры.ИтогоКоличествоКомплектующихНаДиски = Цел(СтрокаДиск.ДисковМожноСобрать1Передел);
		ОбластьДетали2.Параметры.СвободныйОстаток = Цел(СтрокаДиск.ДисковМожноСобрать1Передел)-СтрокаДиск.ДискОстаток;
		//ОбластьДетали2.Параметры.Потребность = Новый Структура("ПотребностьБолты",СтрокаБолт.Комплектующая);
        ТабДок4.Вывести(ОбластьДетали2);
		КонецЕсли;
	КонецЦикла;	

	
	КонецПроцедуры

Процедура ПриОткрытии()
	КонДата=ТекущаяДата();
КонецПроцедуры

Процедура ПолеТабличногоДокумента2ОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ТабДок=Новый ТабличныйДокумент;
	
	Если ТипЗнч(Расшифровка)=Тип("Структура") Тогда
		Если  Расшифровка.Свойство("ПотребностьКрышки") Тогда
			СтандартнаяОбработка=Ложь;
			   СтруктураПоиска=Новый Структура("Комплектующая");
			   СтруктураПоиска.Комплектующая=Расшифровка.ПотребностьКрышки;
			   НайдСтроки=ТаблицаКрышкиРасшифровка.НайтиСтроки(СтруктураПоиска);
			     
			   Если НайдСтроки.Количество()>0 Тогда
				Макет=ПолучитьМакет("Макет");
			    ОбластьШапка=Макет.ПолучитьОбласть("ШапкаТаблицыРасшифровка");  
				ТабДок.Вывести(ОбластьШапка);
	
				Для каждого НайдСтрока ИЗ НайдСтроки Цикл
					ОбластьДетали=Макет.ПолучитьОбласть("ДеталиРасшифровка");  
					ОбластьДетали.Параметры.Заполнить(НайдСтрока);
					ТабДок.Вывести(ОбластьДетали);
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли Расшифровка.Свойство("ПотребностьБолты") Тогда
			 СтандартнаяОбработка=Ложь;
			   СтруктураПоиска=Новый Структура("Болт");
			   СтруктураПоиска.Болт=Расшифровка.ПотребностьБолты;
			   НайдСтроки=ТаблицаБолтыРасшифровка.НайтиСтроки(СтруктураПоиска);
			     
			   Если НайдСтроки.Количество()>0 Тогда
				Макет=ПолучитьМакет("Макет");
			    ОбластьШапка=Макет.ПолучитьОбласть("ШапкаТаблицыРасшифровкаБолты");  
				ТабДок.Вывести(ОбластьШапка);
	
				Для каждого НайдСтрока ИЗ НайдСтроки Цикл
					ОбластьДетали=Макет.ПолучитьОбласть("ДеталиРасшифровкаБолты");  
					ОбластьДетали.Параметры.Заполнить(НайдСтрока);
					ТабДок.Вывести(ОбластьДетали);
				КонецЦикла;
			КонецЕсли;

			
		КонецЕсли;	
	КонецЕсли;
	ТабДок.ТолькоПросмотр=Истина;
	ТабДок.Показать();
КонецПроцедуры

Процедура ДействияФормыВыгрузитьОстатки(Кнопка)
	Для сч=2 по 20 Цикл
		АдресЯчейкиЗначения="R"+Строка(сч)+"C6";
		ЗначениеТекст=ЭлементыФормы.ПолеТабличногоДокумента3.ПолучитьОбласть(АдресЯчейкиЗначения).ТекущаяОбласть.Текст;
		Если ЗначениеТекст<>"" И Число(ЗначениеТекст)>0 Тогда
			АдресЯчейкиКода="R"+Строка(сч)+"C2";
			ЗначениеКод=ЭлементыФормы.ПолеТабличногоДокумента3.ПолучитьОбласть(АдресЯчейкиКода).ТекущаяОбласть.Текст;
			Менеджер=РегистрыСведений.ПлановыеОстаткиТоваров.СоздатьМенеджерЗаписи();
			Менеджер.Номенклатура=Справочники.Номенклатура.НайтиПоКоду(ЗначениеКод);
			Менеджер.Период=ТекущаяДата();
			Менеджер.Количество=Число(ЗначениеТекст);
			Менеджер.Записать();
			
		КонецЕсли;
	КонецЦикла;
	Предупреждение("Остатки по крепежу выгружены. Теперь нужно сформировать отчет 171. Прайс-лист с остатками.");
КонецПроцедуры

Процедура ДействияФормыОтчетОстаткиДисковБезПривязки(Кнопка)
	ТабДок=Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ОстаткиБезПривязки");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура.Код,
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,(НЕ Номенклатура В
	|(ВЫБРАТЬ РАЗЛИЧНЫЕ Комплектующая
	|ИЗ  РегистрСведений.КомплектующиеНоменклатуры
	|ГДЕ Комплектующая.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|ОБЪЕДИНИТЬ
	|ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура  ИЗ  РегистрСведений.КомплектующиеНоменклатуры
	|ГДЕ Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|))
	|И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ТоварыНаСкладахОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура.Наименование";

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ТолькоПросмотр=Истина;
    ТабДок.Показать();
КонецПроцедуры


ТаблицаКрышкиРасшифровка = Новый ТаблицаЗначений;
ТаблицаБолтыРасшифровка = Новый ТаблицаЗначений;
