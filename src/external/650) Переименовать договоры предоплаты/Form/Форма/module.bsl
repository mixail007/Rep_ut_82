Перем  СхемаКомпоновкиДанных;
перем СписокВыбораУсловийОплат,СписокСпособаОтгрузки;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПриОткрытии()
	СхемаКомпоновкиДанных = ПолучитьМакет("Макет");
	
	URLСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных);
	
	КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	Пользователь.Очистить();
	Пользователь.Добавить(глТекущийПользователь);
	ОбновитьСписокКонтрагентвов();
	Если рольдоступна("ПравоЗавершенияРаботыПользователей") 
		или глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Серков") 
		или глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Марешева (Новый)") 
		или глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Бондаренко Е.Д. (снабжение)") тогда
		ЭлементыФормы.Пользователь.Доступность = истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПользовательПриИзменении(Элемент)
	ОбновитьСписокКонтрагентвов();
КонецПроцедуры


процедура ОбновитьСписокКонтрагентвов()
	//Запрос = новый Запрос;
	//Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	//			 |	А.Контрагент КАК Контрагент,
	//			 |	А.Контрагент.ОсновнойДоговорКонтрагента КАК ОсновнойДоговорКонтрагента,
	//			 |	А.Контрагент.ОсновнойДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицоОсновногоДоговора,
	//			 |	А.Контрагент.ОсновнойМенеджерКонтрагента КАК ОсновнойМенеджерКонтрагента,
	//			 |	А.Контрагент.УсловияОплаты КАК УсловияОплаты,
	//			 |	А.Контрагент.Безнал КАК БезНал,
	//			 |	А.Контрагент.Нал КАК Нал,
	//			 |	А.Контрагент.способОтгрузки КАК способОтгрузки,
	//			 |	А.Контрагент.ОсновнойДоговорКонтрагента.ТипДоговора КАК ТипДоговора,
	//			 |	А.Контрагент.ДопустимоеЧислоДнейЗадолженности КАК ДопустимоеЧислоДнейЗадолженности,
	//			 |	А.Контрагент.КатегорияПокупателя КАК ОсновноеНаправлениеПродаж
	//			 |ПОМЕСТИТЬ вт
	//			 |ИЗ
	//			 |	(ВЫБРАТЬ
	//			 |		Контрагенты.Ссылка КАК Контрагент
	//			 |	ИЗ
	//			 |		Справочник.Контрагенты КАК Контрагенты
	//			 |	ГДЕ
	//			 |		Контрагенты.ОсновнойМенеджерКонтрагента В(&Пользователь)
	//			 |	
	//			 |	ОБЪЕДИНИТЬ ВСЕ
	//			 |	
	//			 |	ВЫБРАТЬ
	//			 |		ДоговорыКонтрагентов.Владелец
	//			 |	ИЗ
	//			 |		Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	//			 |	ГДЕ
	//			 |		ДоговорыКонтрагентов.ОтветственноеЛицо В(&Пользователь)) КАК А
	//			 |;
	//			 |
	//			 |////////////////////////////////////////////////////////////////////////////////
	//			 |ВЫБРАТЬ
	//			 |	вт.Контрагент КАК Контрагент,
	//			 |	вт.ОсновнойДоговорКонтрагента,
	//			 |	вт.ОтветственноеЛицоОсновногоДоговора,
	//			 |	вт.ОсновнойМенеджерКонтрагента,
	//			 |	вт.УсловияОплаты,
	//			 |	вт.БезНал,
	//			 |	вт.Нал,
	//			 |	вт.ТипДоговора,
	//			 |	вт.ДопустимоеЧислоДнейЗадолженности,
	//			 |	вт.способОтгрузки.Наименование КАК способОтгрузки,
	//			 |	вт.ОсновноеНаправлениеПродаж,
	//			 |	ЕСТЬNULL(СвойствоВажность.Важность, 0) КАК Важность
	//			 |ПОМЕСТИТЬ вт2
	//			 |ИЗ
	//			 |	вт КАК вт
	//			 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	//			 |			ПродажиОбороты.ДоговорКонтрагента.Владелец КАК ДоговорКонтрагентаВладелец
	//			 |		ИЗ
	//			 |			РегистрНакопления.Продажи.Обороты(
	//			 |					&НачПериода,
	//			 |					,
	//			 |					,
	//			 |					ДоговорКонтрагента.Владелец В
	//			 |							(ВЫБРАТЬ
	//			 |								вт.Контрагент
	//			 |							ИЗ
	//			 |								вт)
	//			 |						И ДоговорКонтрагента.ОтветственноеЛицо В (&Пользователь)) КАК ПродажиОбороты) КАК взПродажи
	//			 |		ПО (взПродажи.ДоговорКонтрагентаВладелец = вт.Контрагент)
	//			 |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//			 |			ЗначенияСвойствОбъектов.Объект КАК Контрагент,
	//			 |			ЗначенияСвойствОбъектов.Значение КАК Важность
	//			 |		ИЗ
	//			 |			РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//			 |		ГДЕ
	//			 |			ЗначенияСвойствОбъектов.Свойство = &СвойствоВажность
	//			 |			И ЗначенияСвойствОбъектов.Объект В
	//			 |					(ВЫБРАТЬ
	//			 |						вт.Контрагент
	//			 |					ИЗ
	//			 |						вт)) КАК СвойствоВажность
	//			 |		ПО вт.Контрагент = СвойствоВажность.Контрагент
	//			 |;
	//			 |
	//			 |////////////////////////////////////////////////////////////////////////////////
	//			 |ВЫБРАТЬ
	//			 |	вт2.ОсновнойМенеджерКонтрагента КАК ОсновнойМенеджер,
	//			 |	вт2.Контрагент КАК Контрагент,
	//			 |	вт2.Важность,
	//			 |	вт2.ОсновноеНаправлениеПродаж,
	//			 |	вт2.ОсновнойДоговорКонтрагента КАК ОсновнойДоговор,
	//			 |	вт2.ОтветственноеЛицоОсновногоДоговора,
	//			 |	вт2.УсловияОплаты,
	//			 |	вт2.БезНал,
	//			 |	вт2.Нал,
	//			 |	вт2.ТипДоговора,
	//			 |	вт2.ДопустимоеЧислоДнейЗадолженности,
	//			 |	вт2.способОтгрузки,
	//			 |	ЕСТЬNULL(взЕстьНалБезнал.ЕстьНал, ЛОЖЬ) КАК ЕстьНал
	//			 |ИЗ
	//			 |	вт2 КАК вт2
	//			 |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//			 |			ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	//			 |			МАКСИМУМ(ВЫБОР
	//			 |					КОГДА ПродажиОбороты.ДоговорКонтрагента.Наименование ПОДОБНО ""%*%""
	//			 |						ТОГДА ИСТИНА
	//			 |					ИНАЧЕ ЛОЖЬ
	//			 |				КОНЕЦ) КАК ЕстьНал,
	//			 |			МАКСИМУМ(ВЫБОР
	//			 |					КОГДА ПродажиОбороты.ДоговорКонтрагента.Наименование ПОДОБНО ""%*%""
	//			 |						ТОГДА ЛОЖЬ
	//			 |					ИНАЧЕ ИСТИНА
	//			 |				КОНЕЦ) КАК ЕстьБН
	//			 |		ИЗ
	//			 |			РегистрНакопления.Продажи.Обороты(
	//			 |					&НачПериода,
	//			 |					,
	//			 |					,
	//			 |					ДоговорКонтрагента.Владелец В
	//			 |						(ВЫБРАТЬ
	//			 |							вт2.Контрагент
	//			 |						ИЗ
	//			 |							вт2)) КАК ПродажиОбороты
	//			 |		
	//			 |		СГРУППИРОВАТЬ ПО
	//			 |			ПродажиОбороты.ДоговорКонтрагента.Владелец) КАК взЕстьНалБезнал
	//			 |		ПО вт2.Контрагент = взЕстьНалБезнал.Контрагент
	//			 |
	//			 |УПОРЯДОЧИТЬ ПО
	//			 |	ОсновнойМенеджер,
	//			 |	Контрагент
	//			 |АВТОУПОРЯДОЧИВАНИЕ";
	
	Если флТолькоНовые тогда
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	А.Контрагент КАК Контрагент,
	             |	А.Контрагент.ОсновнойДоговорКонтрагента КАК ОсновнойДоговорКонтрагента,
	             |	А.Контрагент.ОсновнойДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицоОсновногоДоговора,
	             |	А.Контрагент.ОсновнойМенеджерКонтрагента КАК ОсновнойМенеджерКонтрагента,
	             |	А.Контрагент.УсловияОплаты КАК УсловияОплаты,
	             |	А.Контрагент.Безнал КАК БезНал,
	             |	А.Контрагент.Нал КАК Нал,
	             |	А.Контрагент.способОтгрузки КАК способОтгрузки,
	             |	А.Контрагент.ОсновнойДоговорКонтрагента.ТипДоговора КАК ТипДоговора,
	             |	А.Контрагент.ДопустимоеЧислоДнейЗадолженности КАК ДопустимоеЧислоДнейЗадолженности,
	             |	А.Контрагент.КатегорияПокупателя КАК ОсновноеНаправлениеПродаж
	             |ПОМЕСТИТЬ вт
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		Контрагенты.Ссылка КАК Контрагент
	             |	ИЗ
	             |		Справочник.Контрагенты КАК Контрагенты
	             |	ГДЕ
	             |		Контрагенты.ОсновнойМенеджерКонтрагента В(&Пользователь)) КАК А
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	вт.Контрагент КАК Контрагент,
	             |	вт.ОсновнойДоговорКонтрагента,
	             |	вт.ОтветственноеЛицоОсновногоДоговора,
	             |	вт.ОсновнойМенеджерКонтрагента,
	             |	вт.УсловияОплаты,
	             |	вт.БезНал,
	             |	вт.Нал,
	             |	вт.ТипДоговора,
	             |	вт.ДопустимоеЧислоДнейЗадолженности,
	             |	вт.способОтгрузки.Наименование КАК способОтгрузки,
	             |	вт.ОсновноеНаправлениеПродаж,
	             |	ЕСТЬNULL(СвойствоВажность.Важность, 0) КАК Важность
	             |ПОМЕСТИТЬ вт2
	             |ИЗ
	             |	вт КАК вт
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			ЗначенияСвойствОбъектов.Объект КАК Контрагент,
	             |			ЗначенияСвойствОбъектов.Значение КАК Важность
	             |		ИЗ
	             |			РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	             |		ГДЕ
	             |			ЗначенияСвойствОбъектов.Свойство = &СвойствоВажность
	             |			И ЗначенияСвойствОбъектов.Объект В
	             |					(ВЫБРАТЬ
	             |						вт.Контрагент
	             |					ИЗ
	             |						вт)) КАК СвойствоВажность
	             |		ПО вт.Контрагент = СвойствоВажность.Контрагент
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	вт2.ОсновнойМенеджерКонтрагента КАК ОсновнойМенеджер,
	             |	вт2.Контрагент КАК Контрагент,
	             |	вт2.Важность,
	             |	вт2.ОсновноеНаправлениеПродаж,
	             |	вт2.ОсновнойДоговорКонтрагента КАК ОсновнойДоговор,
	             |	вт2.ОтветственноеЛицоОсновногоДоговора,
	             |	вт2.УсловияОплаты,
	             |	вт2.БезНал,
	             |	вт2.Нал,
	             |	вт2.ТипДоговора,
	             |	вт2.ДопустимоеЧислоДнейЗадолженности,
	             |	вт2.способОтгрузки,
	             |	ЛОЖЬ КАК ЕстьНал,
	             |	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСоздания
	             |ИЗ
	             |	вт2 КАК вт2
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ОсновнойМенеджер,
	             |	Контрагент
	             |АВТОУПОРЯДОЧИВАНИЕ";
				 Запрос.УстановитьПараметр("Пользователь",Пользователь);
				 Запрос.УстановитьПараметр("СвойствоВажность",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90184"));
				 таб = Запрос.Выполнить().Выгрузить();
				 
				 Для каждого стр из таб цикл
					 стр.ДатаСоздания = ПолучитьМоментСозданияУникальногоИдентификатора("" + стр.Контрагент.УникальныйИдентификатор());
				 КонецЦикла;
				//таб.ВыбратьСтроку();
				 Запрос = новый Запрос;
				 Запрос.Текст="ВЫБРАТЬ
				              |	*
				              |ПОМЕСТИТЬ вт2
				              |ИЗ
				              |	&тз КАК тз
				              |ГДЕ
				              |	тз.ДатаСоздания >= &ДатаСоздания
				              |;
				              |
				              |////////////////////////////////////////////////////////////////////////////////
				              |ВЫБРАТЬ
				              |	*
				              |ИЗ
				              |	вт2 КАК вт2";
							  Запрос.УстановитьПараметр("тз",таб);
							  Запрос.УстановитьПараметр("ДатаСоздания",Дата(2017,09,1));
							  ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
				 //таб.ВыбратьСтроку();
	иначе
		СхемаКомпоновкиДанных = ПолучитьМакет("Макет");
		
		//Из схемы возьмем настройки по умолчанию
		Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
		
		//Помещаем в переменную данные о расшифровке данных
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Пользователь");
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = Пользователь;
		
		ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СвойствоВажность");
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90184");
		
		ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачПериода");
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = Дата(2016,10,1);
		
		//Передаем в макет компоновки схему, настройки и данные расшифровки
		
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
		КомпоновщикНастроек.Настройки, , ,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
		//МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
		//Настройки, ДанныеРасшифровки);
		
		//Выполним компоновку с помощью процессора компоновки
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,
		ДанныеРасшифровки);
		
		ТаблицаРезультат = Новый ТаблицаЗначений; 
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений; 
		
		ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат); 
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных); 
	КонецЕсли;
	
	
	Контрагенты = ТаблицаРезультат;
				 ЭлементыФормы.Контрагенты.СоздатьКолонки();
				 
				 ЭлементыФормы.Контрагенты.Колонки.Контрагент.ЭлементУправления.КнопкаОткрытия = истина;
				 ЭлементыФормы.Контрагенты.Колонки.Контрагент.ЭлементУправления.ВыбиратьТип = ложь;
				 ЭлементыФормы.Контрагенты.Колонки.Контрагент.ЭлементУправления.КнопкаОчистки = ложь;
				 ЭлементыФормы.Контрагенты.Колонки.Контрагент.ЭлементУправления.КнопкаВыбора  = ложь;
				 ЭлементыФормы.Контрагенты.Колонки.Контрагент.ЭлементУправления.РедактированиеТекста = ложь;
				 
				 //ЭлементыФормы.Контрагенты.Колонки.Контрагент.толькоПросмотр =истина;
				 
				 ЭлементыФормы.Контрагенты.Колонки.ОсновнойДоговор.толькоПросмотр =истина;
				 ЭлементыФормы.Контрагенты.Колонки.ОсновнойМенеджер.толькоПросмотр =истина;
				 ЭлементыФормы.Контрагенты.Колонки.ТипДоговора.толькоПросмотр =истина;
				 
				 //ЭлементыФормы.Контрагенты.Колонки.ЕстьНал.видимость = ложь;
				 
				 
				 
				 ЭлементыФормы.Контрагенты.Колонки.УсловияОплаты.ЭлементУправления.РежимВыбораИзСписка = истина;
				 ЭлементыФормы.Контрагенты.Колонки.УсловияОплаты.ЭлементУправления.СписокВыбора = СписокВыбораУсловийОплат;
				 
				 ЭлементыФормы.Контрагенты.Колонки.способОтгрузки.ЭлементУправления.РежимВыбораИзСписка = истина;
				 ЭлементыФормы.Контрагенты.Колонки.способОтгрузки.ЭлементУправления.ВыбиратьТип = ложь;
				 
				 ЭлементыФормы.Контрагенты.Колонки.способОтгрузки.ЭлементУправления.СписокВыбора = СписокСпособаОтгрузки;
				 
				 ЭлементыФормы.Контрагенты.Колонки.Безнал.ТекстШапки = "б/н";
				 ЭлементыФормы.Контрагенты.Колонки.Нал.ТекстШапки = "*";
				 
				 ЭлементыФормы.Контрагенты.Колонки.Безнал.Данные="";
				 ЭлементыФормы.Контрагенты.Колонки.Безнал.ДанныеФлажка="Безнал";
				 ЭлементыФормы.Контрагенты.Колонки.Безнал.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
				 
				 ЭлементыФормы.Контрагенты.Колонки.Нал.Данные="";
				 ЭлементыФормы.Контрагенты.Колонки.Нал.ДанныеФлажка="Нал";
				 ЭлементыФормы.Контрагенты.Колонки.Нал.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
				 				 
КонецПроцедуры

Процедура КонтрагентыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		Если Пользователь.НайтиПоЗначению(ДанныеСтроки.ОсновнойМенеджер)<>неопределено тогда
			Шрифт =  Новый Шрифт(ОформлениеСтроки.Шрифт, , , истина);
			Для каждого Ячейка Из ОформлениеСтроки.Ячейки Цикл
				Ячейка.Шрифт = Шрифт;    
			КонецЦикла;
		КонецЕсли;

КонецПроцедуры

Процедура КонтрагентыПриАктивизацииСтроки(Элемент)
	СписокТиповДоговоров = новый СписокЗначений;
	СписокТиповДоговоров.Добавить(Справочники.ТипыДоговоров.ПредоплатаПоСчетам);
	СписокТиповДоговоров.Добавить(Справочники.ТипыДоговоров.Факторинг);
	СписокТиповДоговоров.Добавить(Справочники.ТипыДоговоров.ФакторингПредоплата);
	СписокТиповДоговоров.Добавить(Справочники.ТипыДоговоров.НайтиПоКоду("00004")); //отсрочка
	СписокТиповДоговоров.Добавить(Справочники.ТипыДоговоров.НайтиПоКоду("00001")); //предоплата
	
	
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	А.МенятьНазвание,
	             |	А.Договор,
	             |	А.ТипДоговора,
	             |	А.ДопустимоеЧислоДнейЗадолженности
	             |ПОМЕСТИТЬ втДоговоры
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		ВЫБОР
	             |			КОГДА ДоговорыКонтрагентов.ТипДоговора = &Предоплата
	             |					И ДоговорыКонтрагентов.ДопустимоеЧислоДнейЗадолженности > 0
	             |					И НЕ ДоговорыКонтрагентов.Наименование ПОДОБНО ""%Отсрочка до 14 дней%""
	             |				ТОГДА ИСТИНА
	             |			ИНАЧЕ ЛОЖЬ
	             |		КОНЕЦ КАК МенятьНазвание,
	             |		ДоговорыКонтрагентов.Ссылка КАК Договор,
	             |		ДоговорыКонтрагентов.ТипДоговора КАК ТипДоговора,
	             |		ДоговорыКонтрагентов.ДопустимоеЧислоДнейЗадолженности КАК ДопустимоеЧислоДнейЗадолженности
	             |	ИЗ
	             |		РегистрНакопления.Продажи.Обороты(
	             |				&НачПериода,
	             |				,
	             |				,
	             |				ДоговорКонтрагента.Владелец = &Владелец
	             |					И ДоговорКонтрагента.ТипДоговора В (&СписокТиповДоговоров)) КАК ПродажиОбороты
	             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	             |			ПО ПродажиОбороты.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	             |	ГДЕ
	             |		ДоговорыКонтрагентов.Владелец = &Владелец
	             |		И ДоговорыКонтрагентов.ОтветственноеЛицо В (&ОтветственноеЛицо)
	             |		И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		ВЫБОР
	             |			КОГДА ДоговорыКонтрагентов.ТипДоговора = &Предоплата
	             |					И ДоговорыКонтрагентов.ДопустимоеЧислоДнейЗадолженности > 0
	             |					И НЕ ДоговорыКонтрагентов.Наименование ПОДОБНО ""%Отсрочка до 14 дней%""
	             |				ТОГДА ИСТИНА
	             |			ИНАЧЕ ЛОЖЬ
	             |		КОНЕЦ,
	             |		ДоговорыКонтрагентов.Ссылка,
	             |		ДоговорыКонтрагентов.ТипДоговора,
	             |		ДоговорыКонтрагентов.ДопустимоеЧислоДнейЗадолженности
	             |	ИЗ
	             |		Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	             |	ГДЕ
	             |		&флТолькоНовые
	             |		И ДоговорыКонтрагентов.Владелец = &Владелец
	             |		И ДоговорыКонтрагентов.ОтветственноеЛицо В (&ОтветственноеЛицо)) КАК А
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента,
	             |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаУпрКонечныйОстаток,
	             |	НАЧАЛОПЕРИОДА(ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Период, ДЕНЬ) КАК Период,
	             |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Регистратор,
	             |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Сделка
	             |ПОМЕСТИТЬ вт2
	             |ИЗ
	             |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(
	             |			,
	             |			,
	             |			Регистратор,
	             |			,
	             |			ДоговорКонтрагента.Владелец = &Владелец
	             |				И ДоговорКонтрагента В
	             |					(ВЫБРАТЬ
	             |						втДоговоры.Договор
	             |					ИЗ
	             |						втДоговоры)) КАК ВзаиморасчетыСКонтрагентамиОстаткиИОбороты
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	а.ДоговорКонтрагента,
	             |	МАКСИМУМ(ВЫБОР
	             |			КОГДА а.СуммаУпрКонечныйОстаток > 0
	             |				ТОГДА ИСТИНА
	             |			ИНАЧЕ ЛОЖЬ
	             |		КОНЕЦ) КАК БылиПросрочки
	             |ПОМЕСТИТЬ втПросрочки
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		вт2.ДоговорКонтрагента КАК ДоговорКонтрагента,
	             |		СУММА(вт2.СуммаУпрКонечныйОстаток) КАК СуммаУпрКонечныйОстаток,
	             |		вт2.Период КАК Период
	             |	ИЗ
	             |		вт2 КАК вт2
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		вт2.ДоговорКонтрагента,
	             |		вт2.Период) КАК а
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	а.ДоговорКонтрагента
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫБОР
	             |		КОГДА ЕСТЬNULL(втПросрочки.БылиПросрочки, ЛОЖЬ)
	             |				И втДоговоры.ТипДоговора = &Предоплата
	             |				И НЕ втПросрочки.ДоговорКонтрагента.Наименование ПОДОБНО ""%Отсрочка до 14 дней%""
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ втДоговоры.МенятьНазвание
	             |	КОНЕЦ КАК МенятьНазвание,
	             |	ЕСТЬNULL(втПросрочки.БылиПросрочки, ЛОЖЬ) КАК БылиПросрочки,
	             |	втДоговоры.Договор.Владелец КАК Контрагент,
	             |	втДоговоры.Договор,
	             |	втДоговоры.ТипДоговора,
	             |	втДоговоры.ДопустимоеЧислоДнейЗадолженности,
	             |	втДоговоры.Договор.Владелец.ОсновнойДоговорКонтрагента КАК ОсновнойДоговорКонтрагента,
	             |	втДоговоры.Договор.ОтветственноеЛицо КАК ОтветственноеЛицо
	             |ИЗ
	             |	втДоговоры КАК втДоговоры
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втПросрочки КАК втПросрочки
	             |		ПО втДоговоры.Договор = втПросрочки.ДоговорКонтрагента";
				 Запрос.УстановитьПараметр("флТолькоНовые",флТолькоНовые);
				 Запрос.УстановитьПараметр("Владелец",ЭлементыФормы.Контрагенты.ТекущаяСтрока.Контрагент);
				 Запрос.УстановитьПараметр("СписокТиповДоговоров",СписокТиповДоговоров);
				 Запрос.УстановитьПараметр("ОтветственноеЛицо",Пользователь);
				 Запрос.УстановитьПараметр("Предоплата",Справочники.ТипыДоговоров.НайтиПоКоду("00001"));
				 Запрос.УстановитьПараметр("НачПериода",Дата(2016,10,1));
				 
				 Рез =Запрос.Выполнить().Выгрузить();
				 
				 Договоры = Рез;
				 ЭлементыФормы.Договоры.СоздатьКолонки();
				 
				 ЭлементыФормы.Договоры.Колонки.Контрагент.ЭлементУправления.КнопкаОткрытия = истина;
				 ЭлементыФормы.Договоры.Колонки.Контрагент.ЭлементУправления.ВыбиратьТип = ложь;
				 ЭлементыФормы.Договоры.Колонки.Контрагент.ЭлементУправления.КнопкаОчистки = ложь;
				 ЭлементыФормы.Договоры.Колонки.Контрагент.ЭлементУправления.КнопкаВыбора  = ложь;
				 ЭлементыФормы.Договоры.Колонки.Контрагент.ЭлементУправления.РедактированиеТекста = ложь;
				 
				 ЭлементыФормы.Договоры.Колонки.БылиПросрочки.толькоПросмотр =истина;
				 
				 ЭлементыФормы.Договоры.Колонки.ОсновнойДоговорКонтрагента.видимость=ложь;
				 
				 
				 ЭлементыФормы.Договоры.Колонки.МенятьНазвание.Данные="";
				 ЭлементыФормы.Договоры.Колонки.МенятьНазвание.Ширина = 3;
				 ЭлементыФормы.Договоры.Колонки.МенятьНазвание.ДанныеФлажка="МенятьНазвание";
				 ЭлементыФормы.Договоры.Колонки.МенятьНазвание.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
				 
				 ЭлементыФормы.Договоры.Колонки.БылиПросрочки.Данные="";
				 ЭлементыФормы.Договоры.Колонки.БылиПросрочки.ДанныеФлажка="БылиПросрочки";
				 ЭлементыФормы.Договоры.Колонки.БылиПросрочки.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
				 ЭлементыФормы.Договоры.Колонки.БылиПросрочки.Ширина = 3;
				 ЭлементыФормы.Договоры.Колонки.Контрагент.Ширина = 10;
				 ЭлементыФормы.Договоры.Колонки.Договор.Ширина = 10;
				 ЭлементыФормы.Договоры.Колонки.ТипДоговора.Ширина = 5;
				 ЭлементыФормы.Договоры.Колонки.ДопустимоеЧислоДнейЗадолженности.Ширина = 5;
				 
КонецПроцедуры

Процедура КонтрагентыПередНачаломИзменения(Элемент, Отказ)
	Отказ = истина;
	
	ПользователюМожноРедактировать=ложь;
	
	Если Пользователь.Количество()=1 тогда
		Если Элемент.ТекущаяСтрока.ОсновнойМенеджер = Пользователь[0].Значение тогда
			ПользователюМожноРедактировать = истина;
		КонецЕсли
	иначе
		ПользователюМожноРедактировать = истина;
	КонецЕсли;
	
	Если не ПользователюМожноРедактировать или 
		колонкаНеРедактируется(Элемент.ТекущаяКолонка.Имя) тогда
		Отказ = истина;
	иначе
		Отказ = ложь;
	КонецЕсли;
	
	Если Элемент.ТекущаяКолонка.Имя = "Нал" и Элемент.ТекущаяСтрока.Естьнал=ложь тогда
		Предупреждение("У контрагента нет активных договоров *");
		отказ =истина;
	КонецЕсли;
	
КонецПроцедуры

функция колонкаНеРедактируется(ИмяКолонки)
	Если //ИмяКолонки="Контрагент" или
		 ИмяКолонки="ОсновнойДоговор"
		или ИмяКолонки="ОтветственноеЛицоОсновногоДоговора"
		или ИмяКолонки="ОсновнойМенеджер"
		или ИмяКолонки="ТипДоговора" 
		или ИмяКолонки="ОсновноеНаправлениеПродаж"
		или ИмяКолонки="Важность"
		или ИмяКолонки="Договор"  тогда
		
		возврат истина;
	иначе
		возврат ложь;
	КонецЕсли;
КонецФункции

Процедура ДоговорыПередНачаломИзменения(Элемент, Отказ)
	Отказ = ложь;
	Если КолонкаНеРедактируется(Элемент.ТекущаяКолонка.Имя) тогда
		Отказ = истина;
	КонецЕсли;
	
	Если не Элемент.ТекущиеДанные.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00001") и Элемент.ТекущаяКолонка.Имя = "МенятьНазвание" и Элемент.ТекущиеДанные.МенятьНазвание=ложь тогда
		Отказ = истина;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00001") или Элемент.ТекущаяКолонка.Имя="ДопустимоеЧислоДнейЗадолженности" тогда
		Отказ = ложь;
	КонецЕсли;
КонецПроцедуры

Процедура КонтрагентыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Элемент.ТекущаяКолонка.Имя = "Контрагент" или 
		Элемент.ТекущаяКолонка.Имя = "ОсновнойДоговор" или 
		Элемент.ТекущаяКолонка.Имя = "ОсновнойМенеджер" или
		Элемент.ТекущаяКолонка.Имя = "ТипДоговора" 
		тогда
		возврат;
	КонецЕсли;
	Если Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности>0 и Элемент.ТекущиеДанные.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00001") тогда //предоплата
		Элемент.ТекущиеДанные.УсловияОплаты = "Отсрочка до 14 дн.";
	ИначеЕсли Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности = 0 и Элемент.ТекущиеДанные.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00001") тогда  //предоплата
		Элемент.ТекущиеДанные.УсловияОплаты = "Предоплата";
	ИначеЕсли Элемент.ТекущиеДанные.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00004") тогда //отсрочка
		Элемент.ТекущиеДанные.УсловияОплаты = "Отсрочка";	
	КонецЕсли;	

	Если Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности>14 и Элемент.ТекущиеДанные.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00001") тогда//предоплата
		Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности = 14;
		Сообщить("Число дней задолженности по договору предоплаты не может быть больше 14");
	иначеЕсли Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности>180 и Элемент.ТекущиеДанные.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00004") тогда//отсрочка
		Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности = 180;
		Сообщить("Число дней задолженности по договору предоплаты не может быть больше 180");
    конецЕсли;

	
	Если Элемент.ТекущиеДанные.Контрагент.Нал <> Элемент.ТекущиеДанные.нал или
		Элемент.ТекущиеДанные.Контрагент.Безнал <> Элемент.ТекущиеДанные.Безнал или
		Элемент.ТекущиеДанные.Контрагент.ДопустимоеЧислоДнейЗадолженности <> Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности или
		Элемент.ТекущиеДанные.Контрагент.УсловияОплаты <> Элемент.ТекущиеДанные.УсловияОплаты  или 
		Элемент.ТекущиеДанные.Контрагент.СпособОтгрузки.Наименование <> Элемент.ТекущиеДанные.СпособОтгрузки тогда
		
		Контрагент = Элемент.ТекущиеДанные.Контрагент.ПолучитьОбъект();
		Контрагент.Нал = Элемент.ТекущиеДанные.нал;
		Контрагент.Безнал= Элемент.ТекущиеДанные.Безнал;
		Контрагент.ДопустимоеЧислоДнейЗадолженности = Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности;
		Контрагент.УсловияОплаты = Элемент.ТекущиеДанные.УсловияОплаты;
		
		НовыйСпособОтгрузки = Справочники.СпособыОтгрузкиТовара.НайтиПоНаименованию(Элемент.ТекущиеДанные.способОтгрузки);
		Если ЗначениеЗаполнено(НовыйСпособОтгрузки) тогда
			Контрагент.способОтгрузки = НовыйСпособОтгрузки;
		КонецЕсли;
		Если Контрагент.ОсновнойДоговорКонтрагента.ДопустимоеЧислоДнейЗадолженности<>Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности тогда
			ОсновнойДогОб = Контрагент.ОсновнойДоговорКонтрагента.ПолучитьОбъект();
			ОсновнойДогОб.ОбменДанными.Загрузка = истина;
			ОсновнойДогОб.КонтролироватьЧислоДнейЗадолженности = истина;
			ОсновнойДогОб.ДопустимоеЧислоДнейЗадолженности = Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности;
			ОсновнойДогОб.Записать();
		КонецЕсли;
		Контрагент.Записать();
		Если Элемент.ТекущаяКолонка.Имя="ДопустимоеЧислоДнейЗадолженности" тогда
			КонтрагентыПриАктивизацииСтроки(неопределено);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура кнПереименоватьНаПредоплатуНажатие(Элемент)
	для каждого стр из Договоры цикл
		если стр.МенятьНазвание или стр.Договор.ДопустимоеЧислоДнейЗадолженности <> стр.ДопустимоеЧислоДнейЗадолженности тогда
			ДогОб = стр.Договор.ПолучитьОбъект();
			ДогОб.ОбменДанными.Загрузка = истина;
			Если стр.МенятьНазвание и стр.ДопустимоеЧислоДнейЗадолженности<=14 тогда
				Если Найти(ДогОб.Наименование,"Отсрочка до 14 дней")>0 тогда
					;
				ИначеЕсли Найти(ДогОб.Наименование,"Договор предоплаты")>0 тогда
					ДогОб.Наименование = СтрЗаменить(ДогОб.Наименование,"Договор предоплаты","Отсрочка до 14 дней");
				ИначеЕсли Найти(ДогОб.Наименование,"Договор отсрочки")>0 тогда
					ДогОб.Наименование = СтрЗаменить(ДогОб.Наименование,"Договор отсрочки","Отсрочка до 14 дней");
				иначе
					ДогОб.Наименование = ДогОб.Наименование+" Отсрочка до 14 дней";
				КонецЕсли;
			ИначеЕсли стр.МенятьНазвание и стр.ДопустимоеЧислоДнейЗадолженности > 14 тогда	
				Сообщить("Число дней задолженности больше 14 дней, Название не поменяно.");
			КонецЕсли;
			ДогОб.КонтролироватьЧислоДнейЗадолженности = истина;
			ДогОб.ДопустимоеЧислоДнейЗадолженности = стр.ДопустимоеЧислоДнейЗадолженности;
			ДогОб.Записать();
			Сообщить(""+ДогОб+" успешно записан.");	
		конецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КонтрагентыВыборЗначения(Элемент, СтандартнаяОбработка, Значение)
	к=1;
КонецПроцедуры

Процедура ДоговорыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности>14 и Элемент.ТекущиеДанные.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00001") тогда//предоплата
		Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности = 14;
		Сообщить("Число дней задолженности по договору <Отсрочка до 14 дней> не может быть больше 14");
	иначеЕсли
		Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности>180 и Элемент.ТекущиеДанные.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00004") тогда//отсрочка
		Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности = 180;
		Сообщить("Число дней задолженности по договору предоплаты не может быть больше 180");
	КонецЕсли;
	Если Элемент.ТекущиеДанные.ДопустимоеЧислоДнейЗадолженности>0 и Элемент.ТекущаяКолонка.Имя<>"МенятьНазвание" тогда
		Элемент.ТекущиеДанные.МенятьНазвание=истина;
	КонецЕсли;
КонецПроцедуры

Процедура ДоговорыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Договор = ДанныеСтроки.ОсновнойДоговорКонтрагента тогда
		Шрифт =  Новый Шрифт(ОформлениеСтроки.Шрифт, , , истина);
		Для каждого Ячейка Из ОформлениеСтроки.Ячейки Цикл
			Ячейка.Шрифт = Шрифт;    
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	ОбновитьСписокКонтрагентвов();
КонецПроцедуры

Функция ПолучитьМоментСозданияУникальногоИдентификатора(УИ) 
	
	УИ = СокрЛП(ВРег(СтрЗаменить("" + УИ, "-", "")));
	Если Не Сред(УИ, 13, 1) = "1" Тогда
		Возврат Дата(2017,09,1);
	КонецЕсли;
	интервал16 = ВРег(Сред(УИ, 14, 3) + Сред(УИ, 9, 4) + Сред(УИ, 1, 8));
	интервал10 = HexToDec(интервал16);
	интервал10сек = интервал10 / 10000000;
	
	Результат = Дата(1582, 10, 15) + интервал10сек;
	
	Возврат Результат + 3 * 3600;   //часовой пояс Москвы!
	
КонецФункции

Функция HexToDec(знч16) Экспорт
	знч10 = 0;
	длн = СтрДлина(знч16);
	Для й = 1 По СтрДлина(знч16) Цикл
		знч10 = знч10 + Pow(16, длн - й) * ByteToDec(Сред(знч16, й, 1));
	КонецЦикла;
	Возврат знч10;
КонецФункции

Функция ByteToDec(знч16) Экспорт
	Если знч16 = "0" Тогда
		Возврат 0;
	ИначеЕсли знч16 = "1" Тогда
		Возврат 1;
	ИначеЕсли знч16 = "2" Тогда
		Возврат 2;
	ИначеЕсли знч16 = "3" Тогда
		Возврат 3;
	ИначеЕсли знч16 = "4" Тогда
		Возврат 4;
	ИначеЕсли знч16 = "5" Тогда
		Возврат 5;
	ИначеЕсли знч16 = "6" Тогда
		Возврат 6;
	ИначеЕсли знч16 = "7" Тогда
		Возврат 7;
	ИначеЕсли знч16 = "8" Тогда
		Возврат 8;
	ИначеЕсли знч16 = "9" Тогда
		Возврат 9;
	ИначеЕсли знч16 = "A" Тогда
		Возврат 10;
	ИначеЕсли знч16 = "B" Тогда
		Возврат 11;
	ИначеЕсли знч16 = "C" Тогда
		Возврат 12;
	ИначеЕсли знч16 = "D" Тогда
		Возврат 13;
	ИначеЕсли знч16 = "E" Тогда
		Возврат 14;
	ИначеЕсли знч16 = "F" Тогда
		Возврат 15;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Процедура флТолькоНовыеПриИзменении(Элемент)
	ОбновитьСписокКонтрагентвов();
КонецПроцедуры

СписокВыбораУсловийОплат = новый СписокЗначений;
СписокВыбораУсловийОплат.Добавить("Отсрочка"); 
СписокВыбораУсловийОплат.Добавить("Предоплата"); 
СписокВыбораУсловийОплат.Добавить("Предоплата по счетам"); 
СписокВыбораУсловийОплат.Добавить("Отсрочка до 14 дн."); 

СписокСпособаОтгрузки = новый СписокЗначений;
СписокСпособаОтгрузки.Добавить(Справочники.СпособыОтгрузкиТовара.НайтиПоКоду("6"));
СписокСпособаОтгрузки.Добавить(Справочники.СпособыОтгрузкиТовара.НайтиПоКоду("8"));
СписокСпособаОтгрузки.Добавить(Справочники.СпособыОтгрузкиТовара.НайтиПоКоду("10"));
СписокСпособаОтгрузки.Добавить(Справочники.СпособыОтгрузкиТовара.НайтиПоКоду("12"));


