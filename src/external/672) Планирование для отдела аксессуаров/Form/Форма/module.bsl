
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ДеревоПланированияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	Если ЗначениеЗаполнено(Родитель) Тогда
		Если Родитель.Уровень() = 0 Тогда
		Иначе
			Отказ=Истина;
			НовСтрока = Родитель.Родитель.Строки.Добавить();
			ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока = НовСтрока;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура МенюПланаДобавитьМенеджера(Кнопка)
	ТекущийЭлемент = ЭлементыФормы.ДеревоПланирования;
	НовСтрока = дДеревоПланирования.Строки.Добавить();
	ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока = НовСтрока;
КонецПроцедуры

Процедура ДеревоПланированияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ОформлениеСтроки.ДанныеСтроки.Родитель = неопределено Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет();
			
		Для Инд = 0 по ((ОформлениеСтроки.Ячейки.Количество()-2)/5)-1 Цикл
			Если Инд = 0 Тогда
				ОформлениеСтроки.Ячейки.МаксБонусСуммой.Видимость = Ложь;
				ОформлениеСтроки.Ячейки.Менеджер.ТолькоПросмотр = Истина;
				ОформлениеСтроки.Ячейки.ПроцентДляНачислений.Видимость = Ложь;
				ОформлениеСтроки.Ячейки.ПроцентМаксБонус.Видимость = Ложь;
				ОформлениеСтроки.Ячейки.СуммаПлан.Видимость = Ложь;
			Иначе
				ОформлениеСтроки.Ячейки["МаксБонусСуммой"+""+Инд+""].Видимость = Ложь;
				ОформлениеСтроки.Ячейки["ПроцентДляНачислений"+""+Инд+""].Видимость = Ложь;
				ОформлениеСтроки.Ячейки["ПроцентМаксБонус"+""+Инд+""].Видимость = Ложь;
				ОформлениеСтроки.Ячейки["СуммаПлан"+""+Инд+""].Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ОформлениеСтроки.ЦветФона = Новый Цвет(168, 255, 177);
		
		Для Инд = 0 по ((ОформлениеСтроки.Ячейки.Количество()-2)/5)-1 Цикл
			Если Инд = 0 Тогда
				ОформлениеСтроки.Ячейки.ПараметрЭффективности.Видимость = Ложь;
				ОформлениеСтроки.Ячейки.Иерархия.Видимость = Ложь;
			Иначе
				ОформлениеСтроки.Ячейки["ПараметрЭффективности"+""+Инд+""].Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
			
	КонецЕсли;
КонецПроцедуры

Процедура МенюПланаДобавитьНовыйПараметр(Кнопка)
	
	Для Счт = дДеревоПланирования.Колонки.Количество()-5 по дДеревоПланирования.Колонки.Количество()-1 Цикл
		
		НовыйНомерКолонки = НайтиЧислаВСтроке(дДеревоПланирования.Колонки[Счт].Имя);
		
		Если НовыйНомерКолонки <> "1" Тогда
			БазовоеИмя = СтрЗаменить(дДеревоПланирования.Колонки[Счт].Имя, Строка(Число(НовыйНомерКолонки)-1), "");
		Иначе
			БазовоеИмя = дДеревоПланирования.Колонки[Счт].Имя;
		КонецЕсли;
		
		НовКолонка = дДеревоПланирования.Колонки.Добавить(,дДеревоПланирования.Колонки[Счт].ТипЗначения);
		ЗаполнитьЗначенияСвойств(НовКолонка, дДеревоПланирования.Колонки[Счт],,"Имя"); 
		НовКолонка.Имя = БазовоеИмя+НовыйНомерКолонки; 
		
	КонецЦикла;	
	
	Для Счт = ЭлементыФормы.ДеревоПланирования.Колонки.Количество()-5 по ЭлементыФормы.ДеревоПланирования.Колонки.Количество()-1 Цикл
		
		НовыйНомерКолонки = НайтиЧислаВСтроке(ЭлементыФормы.ДеревоПланирования.Колонки[Счт].Имя);
		
		Если НовыйНомерКолонки <> "1" Тогда
			БазовоеИмя = СтрЗаменить(ЭлементыФормы.ДеревоПланирования.Колонки[Счт].Имя, Строка(Число(НовыйНомерКолонки)-1), "");
		Иначе
			БазовоеИмя = ЭлементыФормы.ДеревоПланирования.Колонки[Счт].Имя;
		КонецЕсли;
		
		НовКолонка = ЭлементыФормы.ДеревоПланирования.Колонки.Добавить();
		ЗаполнитьЗначенияСвойств(НовКолонка, ЭлементыФормы.ДеревоПланирования.Колонки[Счт],,"Имя"); 
		
		НовКолонка.Имя = БазовоеИмя+НовыйНомерКолонки;
				
		Если ЭлементыФормы.ДеревоПланирования.Колонки[Счт].Данные <> "" Тогда
			НовКолонка.Данные = БазовоеИмя+НовыйНомерКолонки;
		КонецЕсли;
		Если ЭлементыФормы.ДеревоПланирования.Колонки[Счт].ДанныеФлажка <> "" Тогда
			НовКолонка.ДанныеФлажка = БазовоеИмя+НовыйНомерКолонки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиЧислаВСтроке(ИмяКолонки) 
	
	СтрокаЧисел = "";
	
	Для Индекс = 1 По СтрДлина(ИмяКолонки) Цикл
		
		Символ = Сред(ИмяКолонки, Индекс, 1); // Перебираем все сиволы из нашей строки
		
		Если КодСимвола(ИмяКолонки) >= 48 И КодСимвола(Символ) <= 57 Тогда // Код нуля - 48, код 9-ки - 57
			СтрокаЧисел = СтрокаЧисел + Символ;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СтрокаЧисел <> "" Тогда 
		Возврат Строка(Число(СтрокаЧисел)+1);
	Иначе
		Возврат "1";
	КонецЕсли;
	
КонецФункции

Процедура НачалоПериодаПриИзменении(Элемент)
	Если ПолугодовоеПланирование Тогда
		Если Месяц(НачалоПериода)<>1 и  Месяц(НачалоПериода)<>7 Тогда
			Сообщить("Выберите начало полугодия!");
			НачалоПериода= Дата(1,1,1);
			КонецПериода= Дата(1,1,1);
		иначе
			НачалоПериода = НачалоМесяца(началоПериода);
			конецПериода = КонецМесяца(ДобавитьМесяц(НачалоПериода,6)-1);
		конецЕсли;
	Иначе
		НачалоПериода = НачалоМесяца(началоПериода);
		конецПериода = КонецМесяца(НачалоПериода);
	КонецЕсли;
КонецПроцедуры

Процедура МенюПланаУдалитьПараметр(Кнопка)
	Если ЭлементыФормы.ДеревоПланирования.Колонки.Количество() = 7 Тогда
	Иначе
		Для счт=1 по 5 Цикл
			дДеревоПланирования.Колонки.Удалить(ЭлементыФормы.ДеревоПланирования.Колонки.Количество()-1);
			ЭлементыФормы.ДеревоПланирования.Колонки.Удалить(ЭлементыФормы.ДеревоПланирования.Колонки.Количество()-1);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//Записывает план в регистр сведений
Процедура МенюПланаЗаписать(Кнопка)
	
	Если ПроверитьДату() Тогда
		Возврат;
	КонецЕсли;
	
	//Количество наборов колонок для записи в регистр
	КолНабор = (дДеревоПланирования.Колонки.Количество()-2)/5-1;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "Если план за период уже установлен, все менеджеры будут удалены и перезаписаны. Продолжить?";
	Ответ = Вопрос(Текст, Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	//Перед записью, удалим все старые значения
	
	НаборЗаписей = РегистрыСведений.ПланОтделаАксессуаров.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПериодПланирования.Установить(НачалоПериода);
	НаборЗаписей.Отбор.Полугодовой.Установить(ПолугодовоеПланирование);
	НаборЗаписей.Записать();
	
	Для каждого Уровень0 из дДеревоПланирования.Строки Цикл
		
		Для каждого Уровень1 из Уровень0.Строки Цикл
			
			Для инд1=0 По КолНабор Цикл
				инд = инд1;
				Если инд=0 Тогда
	            	инд = "";
				КонецЕсли;
				
				МенеджерЗаписи = РегистрыСведений.ПланОтделаАксессуаров.СоздатьМенеджерЗаписи();
				
				МенеджерЗаписи.Менеджер = Уровень1.Менеджер;
				МенеджерЗаписи.МаксБонусСуммой = Уровень1["МаксБонусСуммой"+""+Инд+""];
				МенеджерЗаписи.ПараметрЭффективности = Уровень0["ПараметрЭффективности"+""+Инд+""];
				МенеджерЗаписи.ПериодПланирования = НачалоПериода;
				МенеджерЗаписи.Полугодовой = ПолугодовоеПланирование;
				МенеджерЗаписи.ПроцентДляНачислений = Уровень1["ПроцентДляНачислений"+""+Инд+""];
				МенеджерЗаписи.ПроцентМаксБонус = Уровень1["ПроцентМаксБонус"+""+Инд+""];
				МенеджерЗаписи.СуммаПлан = Уровень1["СуммаПлан"+""+Инд+""];
				
				МенеджерЗаписи.НомерБлока = дДеревоПланирования.Строки.Индекс(Уровень0)+1;
				МенеджерЗаписи.НомерСтрокиВБлоке = Уровень0.Строки.Индекс(Уровень1)+1;
				Если ЗначениеЗаполнено(МенеджерЗаписи.ПараметрЭффективности) Тогда
					МенеджерЗаписи.НомерПараметра = инд1+1;
				Иначе
					Продолжить;
				КонецЕсли;
				
				//Если ЗначениеЗаполнено(МенеджерЗаписи.ПроцентМаксБонус) и ЗначениеЗаполнено(МенеджерЗаписи.ПроцентДляНачислений) и ЗначениеЗаполнено(МенеджерЗаписи.СуммаПлан) Тогда
				МенеджерЗаписи.Записать(Истина);
				//КонецЕсли;	
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПолугодовоеПланированиеПриИзменении(Элемент)
	НачалоПериодаПриИзменении(Элемент);
КонецПроцедуры

Функция ПроверитьДату(Ошибка = ложь)
	Если ЗначениеЗаполнено(НачалоПериода) Тогда
		Возврат Ошибка;
	Иначе
		Предупреждение("Нужно заполнить дату!");
		Ошибка = Истина;
		Возврат Ошибка;
	КонецЕсли;
КонецФункции

Процедура МенюПланаЗаполнить(Кнопка)
	Если ПроверитьДату() Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПлана = Новый Запрос;
	ЗапросПлана.Текст = 
	"ВЫБРАТЬ
	|	ПланОтделаАксессуаров.Менеджер КАК Менеджер,
	|	ПланОтделаАксессуаров.ПараметрЭффективности КАК ПараметрЭффективности,
	|	ПланОтделаАксессуаров.СуммаПлан,
	|	ПланОтделаАксессуаров.ПроцентДляНачислений,
	|	ПланОтделаАксессуаров.ПроцентМаксБонус,
	|	ПланОтделаАксессуаров.МаксБонусСуммой
	|ИЗ
	|	РегистрСведений.ПланОтделаАксессуаров КАК ПланОтделаАксессуаров
	|ГДЕ
	|	ПланОтделаАксессуаров.ПериодПланирования = &ПериодПланирования
	|	И ПланОтделаАксессуаров.Полугодовой = &Полугодовой
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланОтделаАксессуаров.НомерБлока,
	|	ПланОтделаАксессуаров.НомерСтрокиВБлоке,
	|	ПланОтделаАксессуаров.НомерПараметра
	|ИТОГИ
	|	МАКСИМУМ(Менеджер)
	|ПО
	|	ПланОтделаАксессуаров.НомерБлока,
	|	ПланОтделаАксессуаров.НомерСтрокиВБлоке";
	ЗапросПлана.УстановитьПараметр("ПериодПланирования", НачалоПериода);
	ЗапросПлана.УстановитьПараметр("Полугодовой", ПолугодовоеПланирование);
	
	РезультатЗапроса = ЗапросПлана.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Если РезультатЗапроса.Строки.Количество() > 0 Тогда
		//Очищаем дерево
		дДеревоПланирования.Строки.Очистить();
		Если ЭлементыФормы.ДеревоПланирования.Колонки.Количество() = 7 Тогда
		Иначе
			Для счт=1 по ЭлементыФормы.ДеревоПланирования.Колонки.Количество()-7 Цикл
				дДеревоПланирования.Колонки.Удалить(ЭлементыФормы.ДеревоПланирования.Колонки.Количество()-1);
				ЭлементыФормы.ДеревоПланирования.Колонки.Удалить(ЭлементыФормы.ДеревоПланирования.Колонки.Количество()-1);
			КонецЦикла;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Для каждого УровеньБлок из РезультатЗапроса.Строки Цикл
		
		НовБлок = дДеревоПланирования.Строки.Добавить();
		
		Для каждого УровеньСтрока из УровеньБлок.Строки Цикл
			
			НовСтрока = НовБлок.Строки.Добавить();
			НовСтрока.Менеджер = УровеньСтрока.Менеджер;
			
			счт = 0;
			Для каждого УровеньПараметр из УровеньСтрока.Строки Цикл
				
				инд = счт;
				Если инд = 0 Тогда
					инд = "";
				КонецЕсли;
				
				Если дДеревоПланирования.Колонки.Найти("ПараметрЭффективности"+""+Инд+"") <> неопределено Тогда
					НовБлок["ПараметрЭффективности"+""+Инд+""] = УровеньПараметр.ПараметрЭффективности;
					НовСтрока["МаксБонусСуммой"+""+Инд+""] = УровеньПараметр.МаксБонусСуммой;
					НовСтрока["ПроцентДляНачислений"+""+Инд+""] = УровеньПараметр.ПроцентДляНачислений;
					НовСтрока["ПроцентМаксБонус"+""+Инд+""] = УровеньПараметр.ПроцентМаксБонус;
					НовСтрока["СуммаПлан"+""+Инд+""] = УровеньПараметр.СуммаПлан;
				Иначе
					МенюПланаДобавитьНовыйПараметр(Кнопка);
					НовБлок["ПараметрЭффективности"+""+Инд+""] = УровеньПараметр.ПараметрЭффективности;
					НовСтрока["МаксБонусСуммой"+""+Инд+""] = УровеньПараметр.МаксБонусСуммой;
					НовСтрока["ПроцентДляНачислений"+""+Инд+""] = УровеньПараметр.ПроцентДляНачислений;
					НовСтрока["ПроцентМаксБонус"+""+Инд+""] = УровеньПараметр.ПроцентМаксБонус;
					НовСтрока["СуммаПлан"+""+Инд+""] = УровеньПараметр.СуммаПлан;
				КонецЕсли;
				
			счт = счт+1;	
			КонецЦикла;	
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого строка из ЭлементыФормы.ДеревоПланирования.Значение.Строки Цикл
		
		ЭлементыФормы.ДеревоПланирования.Развернуть(строка);
		
	КонецЦикла;
	
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДеревоПланирования;	
	ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока = НовСтрока;
КонецПроцедуры

Процедура ДеревоПланированияПередУдалением(Элемент, Отказ)
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "Удалить текущую строку?";
	Ответ = Вопрос(Текст, Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры
