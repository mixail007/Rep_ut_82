
Процедура Ммаршрут1ПриИзменении(Элемент)
	
	обновитьМ(Истина,Ложь);
		
КонецПроцедуры

Процедура Маршрут2ПриИзменении(Элемент)
	
	обновитьМ(Ложь,Истина);
	
КонецПроцедуры
	
Процедура ОбновитьМ(Обнов1 = истина,Обнов2 = Истина)
	
	если обнов1 тогда
		Маршруты1.Очистить();
		запрос = Новый Запрос;
		запрос.УстановитьПараметр("Маршрут",Маршрут1);
		запрос.УстановитьПараметр("ПустойМаршрут",Справочники.НовМаршруты.ПустаяСсылка());
		запрос.УстановитьПараметр("Подразделение",Справочники.Подразделения.НайтиПоКоду("00005"));
		запрос.Текст = "ВЫБРАТЬ
		               |	ЗаказыМаршруты.ЗаказПокупателя,
		               |	ЗаказыМаршруты.ЗаказПокупателя.АдресДоставки КАК АдресДоставки,
		               |	ЗаказыМаршруты.Дата КАК Дата,
		               |	ЗаказыПокупателейОстатки.КоличествоОстаток,
		               |	ЗаказыМаршруты.ЗаказПокупателя.Контрагент КАК Контрагент
		               |ИЗ
		               |	РегистрСведений.ЗаказыМаршруты КАК ЗаказыМаршруты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки КАК ЗаказыПокупателейОстатки
		               |		ПО ЗаказыМаршруты.ЗаказПокупателя = ЗаказыПокупателейОстатки.ЗаказПокупателя
		               |ГДЕ
		               |	ЗаказыМаршруты.Маршрут = &Маршрут
		               |	И ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 0
		               |	И ВЫБОР
		               |			КОГДА ЗаказыМаршруты.Маршрут = &ПустойМаршрут
		               |				ТОГДА ЗаказыМаршруты.ЗаказПокупателя.Подразделение = &Подразделение
		               |			ИНАЧЕ ЗаказыМаршруты.Маршрут.Подразделение = &Подразделение
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата";
		
		Рез = Запрос.Выполнить().Выгрузить();
		
		
		для каждого стр из Рез Цикл
			
			нов = Маршруты1.Добавить();
			
			ЗаполнитьЗначенияСвойств(Нов,стр);
			
			Если СокрЛП(стр.АдресДоставки)="" тогда
				отбор1 = новый Структура("Объект", стр.ЗаказПокупателя.Контрагент );
				отбор1.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
				
				отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Адрес доставки") );
				рс = РегистрыСведений.КонтактнаяИнформация.Получить(отбор1);
				если рс<>неопределено и СокрЛП(рс.Представление)<>"" тогда
					нов.АдресДоставки = "Д:"+рс.Представление+"~"+рс.Комментарий; //16.04.2016
				иначе
					отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
					рс = РегистрыСведений.КонтактнаяИнформация.Получить(отбор1);
					если рс<>неопределено и СокрЛП(рс.Представление)<>"" тогда
						Нов.АдресДоставки = "Ф:"+рс.Представление+"~"+рс.Комментарий; //16.04.2016
					иначе
						отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
						рс = РегистрыСведений.КонтактнаяИнформация.Получить(отбор1);
						если рс.Представление<>"" и СокрЛП(рс.Представление)<>"" тогда
							нов.АдресДоставки = "Ю:"+рс.Представление+"~"+рс.Комментарий; //16.04.2016
						иначе
							сообщить("В заказе №"+стр.ЗаказПокупателя.Номер+" от "+стр.ЗаказПокупателя.Дата+" у Контрагента: "+стр.ЗаказПокупателя.Контрагент+" - нет ни одного из адресов!", СтатусСообщения.Внимание); 
						конецЕсли;//Юр
					конецЕсли;//Факт
				конецЕсли;//Дост
				
			КонецЕсли;
			
			
			
		КонецЦикла;
		
	КонецЕсли;
	
	
	Если Обнов2 Тогда
		Маршруты2.Очистить();
		
		запрос = Новый Запрос;
		запрос.УстановитьПараметр("Маршрут",Маршрут2);
		запрос.УстановитьПараметр("ПустойМаршрут",Справочники.НовМаршруты.ПустаяСсылка());
		запрос.УстановитьПараметр("Подразделение",Справочники.Подразделения.НайтиПоКоду("00005"));
		запрос.Текст = "ВЫБРАТЬ
		               |	ЗаказыМаршруты.ЗаказПокупателя,
		               |	ЗаказыМаршруты.ЗаказПокупателя.АдресДоставки КАК АдресДоставки,
		               |	ЗаказыМаршруты.Дата КАК Дата,
		               |	ЗаказыПокупателейОстатки.КоличествоОстаток,
		               |	ЗаказыМаршруты.ЗаказПокупателя.Контрагент КАК Контрагент
		               |ИЗ
		               |	РегистрСведений.ЗаказыМаршруты КАК ЗаказыМаршруты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки КАК ЗаказыПокупателейОстатки
		               |		ПО ЗаказыМаршруты.ЗаказПокупателя = ЗаказыПокупателейОстатки.ЗаказПокупателя
		               |ГДЕ
		               |	ЗаказыМаршруты.Маршрут = &Маршрут
		               |	И ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 0
		               |	И ВЫБОР
		               |			КОГДА ЗаказыМаршруты.Маршрут = &ПустойМаршрут
		               |				ТОГДА ЗаказыМаршруты.ЗаказПокупателя.Подразделение = &Подразделение
		               |			ИНАЧЕ ЗаказыМаршруты.Маршрут.Подразделение = &Подразделение
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата";
		
		Рез = Запрос.Выполнить().Выгрузить();
			
		для каждого стр из Рез Цикл
				
				нов = Маршруты2.Добавить();
				
				ЗаполнитьЗначенияСвойств(Нов,стр);
				
				Если СокрЛП(стр.АдресДоставки)="" тогда
					отбор1 = новый Структура("Объект", стр.ЗаказПокупателя.Контрагент );
					отбор1.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
					
					отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Адрес доставки") );
					рс = РегистрыСведений.КонтактнаяИнформация.Получить(отбор1);
					если рс<>неопределено и СокрЛП(рс.Представление)<>"" тогда
						нов.АдресДоставки = "Д:"+рс.Представление+"~"+рс.Комментарий; //16.04.2016
					иначе
						отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
						рс = РегистрыСведений.КонтактнаяИнформация.Получить(отбор1);
						если рс<>неопределено и СокрЛП(рс.Представление)<>"" тогда
							Нов.АдресДоставки = "Ф:"+рс.Представление+"~"+рс.Комментарий; //16.04.2016
						иначе
							отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
							рс = РегистрыСведений.КонтактнаяИнформация.Получить(отбор1);
							если рс.Представление<>"" и СокрЛП(рс.Представление)<>"" тогда
								нов.АдресДоставки = "Ю:"+рс.Представление+"~"+рс.Комментарий; //16.04.2016
							иначе
								сообщить("В заказе №"+стр.ЗаказПокупателя.Номер+" от "+стр.ЗаказПокупателя.Дата+" у Контрагента: "+стр.ЗаказПокупателя.Контрагент+" - нет ни одного из адресов!", СтатусСообщения.Внимание); 
							конецЕсли;//Юр
						конецЕсли;//Факт
					конецЕсли;//Дост
					
				КонецЕсли;
				
			КонецЦикла;
			
			
		КонецЕсли;
КонецПроцедуры
		
Процедура к1Нажатие(Элемент)
	Заказ = ЭлементыФормы.Маршруты1.ТекущиеДанные.ЗаказПокупателя;
	
	набор = РегистрыСведений.ЗаказыМаршруты.СоздатьНаборЗаписей();
	набор.Отбор.ЗаказПокупателя.Установить(Заказ);
	набор.Прочитать();
	
	для каждого стр из набор Цикл
		
		стр.Маршрут = Маршрут2;
		стр.Дата = ЭлементыФормы.Маршруты1.ТекущиеДанные.Дата;
		
	КонецЦикла;
	
	набор.Записать();
	
	ОбновитьМ(истина,истина);
КонецПроцедуры

Процедура к2Нажатие(Элемент)
	Заказ = ЭлементыФормы.Маршруты2.ТекущиеДанные.ЗаказПокупателя;
	
	набор = РегистрыСведений.ЗаказыМаршруты.СоздатьНаборЗаписей();
	набор.Отбор.ЗаказПокупателя.Установить(Заказ);
	набор.Прочитать();
	
	для каждого стр из набор Цикл
		
		стр.Маршрут = Маршрут1;
		стр.Дата = ЭлементыФормы.Маршруты2.ТекущиеДанные.Дата;
		
	КонецЦикла;
	
	набор.Записать();
	
	ОбновитьМ(истина,истина);
КонецПроцедуры

Процедура Маршруты1ДатаПриИзменении(Элемент)
	Заказ = ЭлементыФормы.Маршруты1.ТекущиеДанные.ЗаказПокупателя;
	
	набор = РегистрыСведений.ЗаказыМаршруты.СоздатьНаборЗаписей();
	набор.Отбор.ЗаказПокупателя.Установить(Заказ);
	набор.Прочитать();
	
	для каждого стр из набор Цикл
		
		стр.Маршрут = Маршрут1;
		стр.Дата = ЭлементыФормы.Маршруты1.ТекущиеДанные.Дата;
		
	КонецЦикла;
	
	набор.Записать();
	
	ОбновитьМ(истина,Ложь);
КонецПроцедуры

Процедура Маршруты2ДатаПриИзменении(Элемент)
	Заказ = ЭлементыФормы.Маршруты2.ТекущиеДанные.ЗаказПокупателя;
	
	набор = РегистрыСведений.ЗаказыМаршруты.СоздатьНаборЗаписей();
	набор.Отбор.ЗаказПокупателя.Установить(Заказ);
	набор.Прочитать();
	
	для каждого стр из набор Цикл
		
		стр.Маршрут = Маршрут2;
		стр.Дата = ЭлементыФормы.Маршруты2.ТекущиеДанные.Дата;
		
	КонецЦикла;
	
	набор.Записать();
	
	ОбновитьМ(Ложь,Истина);
КонецПроцедуры
