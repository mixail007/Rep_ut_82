перем логин, пароль, ПланОбменаOIM;

Процедура ПолучитьСостоянияЗаказовДПД() Экспорт
	
	Логин="1007003275"; 
	Пароль = "6078E6EF054E13F442B4A46ADDE226628F946EDC";  
	xml=ЗаполнитьЗапросСостояния();
	
	#Если клиент тогда
		ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	#иначе
		ИмяФайла = "d:\1C\ДПД\ЯШТ\Запросы статусов\"+Логин+"_"+СтрЗаменить(СтрЗаменить(ТекущаяДата(),".","_"),":","_")+"_Ответ ДПД.xml";
	#КонецЕсли
	
	Ответдпд=ОтправитьЗапросWEBСервису(ИмяФайла,"http://ws.dpd.ru:80/services/tracing",xml);
	Если ответдпд="" тогда //ошибка
	иначе	
		попытка
			Рез=РазобратьОтветgetgetStatesByClient(ИмяФайла);
			Если ТипЗнч(Рез) <> Тип("Строка") тогда
				Успех = ОбновитьЗаказы(рез.Заказы);
				
				Если успех тогда
					//отправим ответ и получим следующую порцию и так пока не придет подтверждение об окончании
					Если ОтправитьПодтверждениеПолученияСтатусов(рез.docId)=ложь тогда //ответ не пришел выходим
					Иначе
						Если не Рез.ЭтоКонец тогда  //имеются еще неполученные ответы, получаем следующую партию
							ПолучитьСостоянияЗаказовДПД();
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				
			КонецЕсли;
		Исключение
			успех = ложь;
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		//Если не успех тогда 
		//	//к=1/0;
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполнитьЗапросСостояния()
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Envelope");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soap", "http://schemas.xmlsoap.org/soap/envelope/");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:nl","http://dpd.ru/ws/tracing/2011-11-18");
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Header"); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Body");
	ЗаписьXML.ЗаписатьНачалоЭлемента("nl:getStatesByClient");
	ЗаписьXML.ЗаписатьНачалоЭлемента("request");
	ЗаписьXML.ЗаписатьНачалоЭлемента("auth");
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientNumber");ЗаписьXML.ЗаписатьТекст(Логин);	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientKey");ЗаписьXML.ЗаписатьТекст(Пароль);ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();//auth
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();

	ТекстXML = ЗаписьXML.Закрыть();
	Возврат ТекстXML;
	
КонецФункции

Функция ОтправитьЗапросWEBСервису(ИмяФайла,URL,ТекстXML,Таймаут = 10000)
	Если ПустаяСтрока(ТекстXML) Тогда
		Возврат "";
	КонецЕсли;
	WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	WinHttp.SetTimeouts(Таймаут, Таймаут, Таймаут, Таймаут);
	WinHttp.Option(2,"utf-8");
	WinHttp.Open("POST",URL);
	WinHttp.setRequestHeader("Content-Type","text/xml; charset=utf-8");
	Попытка
		WinHttp.Send(ТекстXML);
		Если WinHttp.Status = 200 Тогда
			Ответ=WinHttp.ResponseStream;
			Текст = новый ТекстовыйДокумент;
			Текст.ДобавитьСтроку(WinHttp.ResponseText());
			Текст.Записать(ИмяФайла,"UTF-8 "); 
			Возврат(Ответ);
		Иначе
			#Если клиент тогда
				Сообщить("Ошибка сервера: " + WinHttp.Status + " " + WinHttp.ResponseText + " " + WinHttp.StatusText, СтатусСообщения.Важное);
			#КонецЕсли
			Возврат("");
		КонецЕсли;
	Исключение
		#Если клиент тогда
			Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
		#КонецЕсли
		Возврат("");
	КонецПопытки;
КонецФункции

Функция РазобратьОтветgetgetStatesByClient(файл)
	стрДляВозврата = новый Структура("ЭтоКонец,Заказы,docId");
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(Файл);
	
	ТабЗаказы = новый ТаблицаЗначений;
	ТабЗаказы.Колонки.Добавить("clientOrderNr", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(20)));//номер заказа который мы передаем при создании в дпд    //НомерЗаказа_КодГрузоотправителя
	ТабЗаказы.Колонки.Добавить("НашНомерЗаказа", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(20)));
	ТабЗаказы.Колонки.Добавить("dpdOrderNr", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(20))); //номер заказа в дпд
	ТабЗаказы.Колонки.Добавить("newState", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(20)));
	ТабЗаказы.Колонки.Добавить("transitionTime", Новый ОписаниеТипов("Дата"	, , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТабЗаказы.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("число"));
	ТабЗаказы.Колонки.Добавить("planDeliveryDate", Новый ОписаниеТипов("Дата"	, , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТабЗаказы.Колонки.Добавить("incidentCode", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(20)));
	
	РезультатРазборки = Новый Массив;
	
	ЗаказыXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	ЭтоКонец = ?(ЗаказыXDTO.Body.getStatesByClientResponse.return.resultComplete="false",ложь,истина);
	docId =  ЗаказыXDTO.Body.getStatesByClientResponse.return.docId;
	попытка
		Заказы = ЗаказыXDTO.Body.getStatesByClientResponse.return.states;
		Если ТипЗнч(Заказы)<>Тип("СписокXDTO") Тогда
			СписокXDTOЗаказы = Новый Массив;
			СписокXDTOЗаказы.Добавить(ЗаказыXDTO.return);
		Иначе
			СписокXDTOЗаказы = Заказы;
		КонецЕсли;
	Исключение
		СписокXDTOЗаказы = Новый Массив;
	КонецПопытки;
	
	НомерСтроки=0;	
	Для Каждого XDTOЗаказ из СписокXDTOЗаказы цикл
		НомерСтроки=НомерСтроки+1;
		
		нстр = ТабЗаказы.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,XDTOЗаказ);
		дат=XDTOЗаказ.transitionTime;
		дат=СтрЗаменить(дат,"-","");
		дат=СтрЗаменить(дат,":","");
		дат=СтрЗаменить(дат,"T","");
		нстр.transitionTime=Дата(дат);
		
		дат=XDTOЗаказ.planDeliveryDate;
		дат=СтрЗаменить(дат,"-","");
		дат=СтрЗаменить(дат,":","");
		дат=СтрЗаменить(дат,"T","");
		нстр.planDeliveryDate=Дата(дат);
		нстр.НомерСтроки=НомерСтроки;
		
		НомерВрем = XDTOЗаказ.clientOrderNr;
		позРазделителя = Найти(НомерВрем,"_");
		Если позРазделителя>0 тогда
			НомерВрем = лев(НомерВрем,позРазделителя-1);
		КонецЕсли;
		нстр.НашНомерЗаказа=НомерВрем;
	КонецЦикла;
	
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	тзЗаказы.НашНомерЗаказа,
	             |	тзЗаказы.transitionTime,
	             |	тзЗаказы.newState
	             |ПОМЕСТИТЬ втОтветДПД
	             |ИЗ
	             |	&тзЗаказы КАК тзЗаказы
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗаказПокупателя.Ссылка КАК ЗаказПокупателя,
	             |	втОтветДПД.transitionTime,
	             |	втОтветДПД.newState
	             |ПОМЕСТИТЬ втЗаказСтатус
	             |ИЗ
	             |	втОтветДПД КАК втОтветДПД
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
	             |		ПО втОтветДПД.НашНомерЗаказа = ЗаказПокупателя.Номер
	             |ГДЕ
	             |	ЗаказПокупателя.Дата >= &ДатаОтсечки
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втЗаказСтатус.ЗаказПокупателя,
	             |	втЗаказСтатус.transitionTime,
	             |	втЗаказСтатус.newState
	             |ИЗ
	             |	втЗаказСтатус КАК втЗаказСтатус
	             |ГДЕ
	             |	(втЗаказСтатус.transitionTime, втЗаказСтатус.ЗаказПокупателя) В
	             |			(ВЫБРАТЬ
	             |				СтатусыЗаказовТК.Период,
	             |				СтатусыЗаказовТК.Заказ
	             |			ИЗ
	             |				РегистрСведений.СтатусыЗаказовТК КАК СтатусыЗаказовТК)";
	Запрос.УстановитьПараметр("тзЗаказы",ТабЗаказы);
	Запрос.УстановитьПараметр("ДатаОтсечки",ДобавитьМесяц(ТекущаяДата(),-7));

	рез=Запрос.Выполнить();
	//рез.ВыбратьСтроку();
	стрДляВозврата.ЭтоКонец=ЭтоКонец;
	стрДляВозврата.Заказы=рез;
	стрДляВозврата.docId=docId;
	возврат стрДляВозврата;
КонецФункции

Функция ОбновитьЗаказы(Результат)
	Успех = истина;
	ВыборкаЗаказ=Результат.Выбрать();
	
	Пока ВыборкаЗаказ.Следующий() Цикл
		Попытка
			МенеджерЗаписи = РегистрыСведений.СтатусыЗаказовТК.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Активность=истина;
			МенеджерЗаписи.Период = ВыборкаЗаказ.transitionTime;
			МенеджерЗаписи.Заказ = ВыборкаЗаказ.ЗаказПокупателя;
			Попытка
				МенеджерЗаписи.Статус = Перечисления.СтатусыДоставкиDPD[СокрЛП(ВыборкаЗаказ.newState)];
			Исключение
				МенеджерЗаписи.Статус = Перечисления.СтатусыДоставкиDPD.НетСтатуса;
			КонецПопытки;
			МенеджерЗаписи.СтатусТекст = ВыборкаЗаказ.newState;
			МенеджерЗаписи.Записать();
			#Если Клиент Тогда 
				Сообщить(""+ВыборкаЗаказ.ЗаказПокупателя+" "+ВыборкаЗаказ.transitionTime+" "+ВыборкаЗаказ.newState);
			#КонецЕсли
			ПланыОбмена.ЗарегистрироватьИзменения(ПланОбменаOIM, ВыборкаЗаказ.ЗаказПокупателя);
		Исключение
			Успех  = ложь;
		КонецПопытки;
	КонецЦикла;
	Возврат успех;
КонецФункции

функция ОтправитьПодтверждениеПолученияСтатусов(id)
	ЗаписьXML = Новый ЗаписьXML;

	
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Envelope");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soap", "http://schemas.xmlsoap.org/soap/envelope/");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:nl","http://dpd.ru/ws/tracing/2011-11-18");
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Header"); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Body");
	ЗаписьXML.ЗаписатьНачалоЭлемента("nl:confirm");
	ЗаписьXML.ЗаписатьНачалоЭлемента("request");
	ЗаписьXML.ЗаписатьНачалоЭлемента("auth");
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientNumber");ЗаписьXML.ЗаписатьТекст(Логин);	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientKey");ЗаписьXML.ЗаписатьТекст(Пароль);ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();//auth
	ЗаписьXML.ЗаписатьНачалоЭлемента("docId");ЗаписьXML.ЗаписатьТекст(id);	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ТекстXML = ЗаписьXML.Закрыть();
	
	#Если клиент тогда
	#иначе
	 ИмяФайла = "d:\1C\ДПД\ЯШТ\Запросы статусов\"+Логин+"_"+СтрЗаменить(СтрЗаменить(ТекущаяДата(),".","_"),":","_")+"_Подтверждение.xml";
	 Файл = Новый ЗаписьТекста(ИмяФайла);
	 Файл.ЗаписатьСтроку(ТекстXML);
	 Файл.Закрыть();
	 //ЗаписьXML.ОткрытьФайл(ИмяФайла, "UTF-8");
	#КонецЕсли

	
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	рез=ОтправитьЗапросWEBСервису(ИмяФайла,"http://ws.dpd.ru:80/services/tracing",ТекстXML);
	Если рез ="" тогда //что то пошло не так
		Возврат ложь;
	иначе 
		возврат истина;
	КонецЕсли;
КонецФункции

ПланОбменаOIM = ПланыОбмена.ПланОбмена_ОИМ.НайтиПоКоду("sim");