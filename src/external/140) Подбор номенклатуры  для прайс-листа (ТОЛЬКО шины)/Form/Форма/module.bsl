
Перем СтрокаИспользуемыхБукв;
Перем ИмяВыделеннойЯчейки;
Перем ТабДок;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
	//массивСлов=СформироватьМассивСлов(НаименованиеТовара);
	//МаксЧислоСовпадающихСимволов=0;	
	//Запрос =Новый Запрос;
	//
	//Запрос.Текст="ВЫБРАТЬ
	// |	Ссылка Номенклатура,
	// |	Наименование Наименование
	// |ИЗ Справочник.Номенклатура
	// |ГДЕ 	ВидТовара = &ВидТовара
	// |	И не ЭтоГруппа  И (не &ПроизводительУказан ИЛИ Производитель=&Производитель)";
	// 
	//Запрос.УстановитьПараметр("ВидТовара", Перечисления.ВидыТоваров.Шины); 
	//Запрос.УстановитьПараметр("Производитель", Производитель); 
	//Запрос.УстановитьПараметр("ПроизводительУказан", не ЗначениеНеЗаполнено(Производитель)); 
	//
	//Выборка=Запрос.Выполнить().Выбрать();
	//
	//
	//ПодходящийТовар=Справочники.Номенклатура.ПустаяСсылка();
	//номПП=0;
	//Пока Выборка.Следующий() Цикл
	//	номПП=номПП+1;
	//	ЧислоСовпадающихСимволов=0;
	//	МассивСловаБД=СформироватьМассивСлов(Выборка.Наименование);
	//	
	//	Для i=0 по массивСлов.Количество()-1 Цикл
	//		Для j=0 по МассивСловаБД.Количество()-1 Цикл
	//			ЧислоСравниваемыхСимволов=Мин(СтрДлина(массивСлов[i]),СтрДлина(МассивСловаБД[j]));
	//			Если Лев(массивСлов[i],ЧислоСравниваемыхСимволов)=Лев(МассивСловаБД[j],ЧислоСравниваемыхСимволов) Тогда
	//				ЧислоСовпадающихСимволов=ЧислоСовпадающихСимволов+ЧислоСравниваемыхСимволов;	
	//			КонецЕсли;	
	//		КонецЦикла;
	//	КонецЦикла;	
	//	
	//	Если ЧислоСовпадающихСимволов>МаксЧислоСовпадающихСимволов Тогда
	//		ПодходящийТовар=Выборка.Номенклатура;
	//		МаксЧислоСовпадающихСимволов=ЧислоСовпадающихСимволов;
	//		ЭлементыФормы.МаксЧислоСовпадающихСимволов.Заголовок=МаксЧислоСовпадающихСимволов;
	//	КонецЕсли;	
	//КонецЦикла;	
	//
	//
	//
	//Возврат;
	
	
	
	//ХэшИсходногоСлова = Новый Соответствие;
	//ХэшСловаБД = Новый Соответствие;

	//ХэшИсходногоСлова=СформироватьХэш(НаименованиеТовара);
	//

	//МинимальноеРасстояние=100;
	//
	//Запрос =Новый Запрос;
	//
	//Запрос.Текст="ВЫБРАТЬ
	// |	Ссылка Номенклатура,
	// |	Наименование Наименование
	// |ИЗ Справочник.Номенклатура
	// |ГДЕ 	ВидТовара = &ВидТовара
	// |	И не ЭтоГруппа  И (не &ПроизводительУказан ИЛИ Производитель=&Производитель)";
	// 
	//Запрос.УстановитьПараметр("ВидТовара", Перечисления.ВидыТоваров.Шины); 
	//Запрос.УстановитьПараметр("Производитель", Производитель); 
	//Запрос.УстановитьПараметр("ПроизводительУказан", не ЗначениеНеЗаполнено(Производитель)); 
	//
	//Выборка=Запрос.Выполнить().Выбрать();
	//
	//
	//ПодходящийТовар=Справочники.Номенклатура.ПустаяСсылка();
	//номПП=0;
	//Пока Выборка.Следующий() Цикл
	//	номПП=номПП+1;
	//	ХэшСловаБД=СформироватьХэш(Выборка.Наименование);
	//	
	//	Расстояние=0;
	//	Для сч=1 По СтрДлина(СтрокаИспользуемыхБукв) Цикл
	//		БукваСлова=ВРЕГ(Сред(СтрокаИспользуемыхБукв,сч,1));
	//		
	//		НайдВес=ХэшИсходногоСлова.Получить(БукваСлова);
	//		НайдВесБД=ХэшСловаБД.Получить(БукваСлова);
	//		РазностьВесов=
	//		?(ЗначениеНеЗаполнено(НайдВес),0,НайдВес)-
	//		?(ЗначениеНеЗаполнено(НайдВесБД),0,НайдВесБД);
	//		РазностьВесов=?(РазностьВесов>0,РазностьВесов,-РазностьВесов);
	//		Расстояние=Расстояние+РазностьВесов;
	//		
	//		Если Расстояние>МинимальноеРасстояние Тогда
	//			Прервать;
	//		КонецЕсли;	
	//	КонецЦикла;	
	//	
	//	Если Расстояние<МинимальноеРасстояние Тогда
	//		ПодходящийТовар=Выборка.Номенклатура;
	//		МинимальноеРасстояние=Расстояние;
	//		ЭлементыФормы.МинимальноеРасстояние.Заголовок=МинимальноеРасстояние;
	//	КонецЕсли;	 
	//	
	//	
	//	
	// КонецЦикла;	

КонецПроцедуры


Функция СформироватьХэш(Слово)
	ХэшСловаБД= Новый Соответствие;
	Для сч=1 По СтрДлина(Слово) Цикл
		БукваСлова=ВРЕГ(Сред(Слово,сч,1));
		Если Найти(СтрокаИспользуемыхБукв,БукваСлова)>0 Тогда
			НайдВес=ХэшСловаБД.Получить(БукваСлова);
			Если НайдВес<>Неопределено Тогда
				ХэшСловаБД.Вставить(БукваСлова,НайдВес+1);
			Иначе
				ХэшСловаБД.Вставить(БукваСлова,1);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	Возврат  ХэшСловаБД;
	
КонецФункции

Функция СформироватьМассивСлов(ИсходноеСлово)
	
МассивСлов= Новый Массив();	
СтрокаРазделителиСлов=",_ "+Символы.Таб;

ТекущееСлово="";
Для сч=1 По СтрДлина(ИсходноеСлово) Цикл
		БукваСлова=ВРЕГ(Сред(ИсходноеСлово,сч,1));
		Если Найти(СтрокаИспользуемыхБукв,БукваСлова)>0 Тогда
			ТекущееСлово=ТекущееСлово+БукваСлова;
		ИначеЕсли Найти(СтрокаРазделителиСлов,БукваСлова)>0 Тогда // следующее слово
			Если СтрДлина(СокрЛП(ТекущееСлово))>0 Тогда
			МассивСлов.Добавить(ТекущееСлово);
			ТекущееСлово="";
			КонецЕсли;
		Иначе	// буква НЕ участвует в отборе
			
		КонецЕсли;	
КонецЦикла;	
Если СтрДлина(СокрЛП(ТекущееСлово))>0 Тогда
	МассивСлов.Добавить(ТекущееСлово);
КонецЕсли;	
 Возврат МассивСлов;
КонецФункции

Процедура ОсновныеДействияФормыПодобратьНоменклатуру(Кнопка)
	Запрос =Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	 |	Ссылка Номенклатура,
	 |	Наименование Наименование
	 |ИЗ Справочник.Номенклатура
	 |ГДЕ 	ВидТовара = &ВидТовара
	 |	И не ЭтоГруппа  И (не &ПроизводительУказан ИЛИ Производитель=&Производитель)";
	 
	Запрос.УстановитьПараметр("ВидТовара", Перечисления.ВидыТоваров.Шины); 
	Запрос.УстановитьПараметр("Производитель", Производитель); 
	Запрос.УстановитьПараметр("ПроизводительУказан", не ЗначениеНеЗаполнено(Производитель)); 
    Выборка=Запрос.Выполнить().Выбрать();
	
	
	
		номерПП=0;
	Для сч=3 по ТабДок.ВысотаТаблицы Цикл
			номерПП=номерПП+1;
		НаименованиеEXCEL=ТабДок.Область("R"+Строка(сч)+"C2").Текст+" "+ТабДок.Область("R"+Строка(сч)+"C3").Текст+" "+ТабДок.Область("R"+Строка(сч)+"C4").Текст+" "+ТабДок.Область("R"+Строка(сч)+"C5").Текст;
		Если ЗначениеНеЗаполнено(НаименованиеEXCEL)  Тогда
			Продолжить;
		КонецЕсли;	
		
		НайденнаяНоменклатура=ПодобратьНоменклатуру(НаименованиеEXCEL,Выборка);
		
				
		Если не ЗначениеНеЗаполнено(НайденнаяНоменклатура) Тогда
			
			// помечаем красным, если подстрока не встретилась
			Если Найти(НайденнаяНоменклатура.Наименование,ТабДок.Область("R"+Строка(сч)+"C2").Текст)=0 Тогда
				 ТабДок.Область("R"+Строка(сч)+"C2").ЦветФона = WebЦвета.Лосось;
			КонецЕсли;
			Если Найти(НайденнаяНоменклатура.Наименование,ТабДок.Область("R"+Строка(сч)+"C3").Текст)=0 Тогда
				 ТабДок.Область("R"+Строка(сч)+"C3").ЦветФона= WebЦвета.Лосось;
			КонецЕсли;	
				
		ТабДок.Область("R"+Строка(сч)+"C1").Текст=Строка(номерПП);	
		ТабДок.Область("R"+Строка(сч)+"C6").Текст=НайденнаяНоменклатура.Код;
		ТабДок.Область("R"+Строка(сч)+"C7").Текст=НайденнаяНоменклатура.Наименование;
		КонецЕсли;
	КонецЦикла;	
	 
КонецПроцедуры


Функция ПодобратьНоменклатуру(НаименованиеEXCEL,Выборка)
	МаксЧислоСовпадающихСимволов=0;
	массивСлов=СформироватьМассивСлов(НаименованиеEXCEL);
	Выборка.Сбросить();
	ПодходящийТовар=Справочники.Номенклатура.ПустаяСсылка();
	номПП=0;
	Пока Выборка.Следующий() Цикл
		номПП=номПП+1;
		ЧислоСовпадающихСимволов=0;
		МассивСловаБД=СформироватьМассивСлов(Выборка.Наименование);
		
		Для i=0 по массивСлов.Количество()-1 Цикл
			Для j=0 по МассивСловаБД.Количество()-1 Цикл
				ЧислоСравниваемыхСимволов=Мин(СтрДлина(массивСлов[i]),СтрДлина(МассивСловаБД[j]));
				Если Лев(массивСлов[i],ЧислоСравниваемыхСимволов)=Лев(МассивСловаБД[j],ЧислоСравниваемыхСимволов) Тогда
					ЧислоСовпадающихСимволов=ЧислоСовпадающихСимволов+ЧислоСравниваемыхСимволов;	
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;	
		
		Если ЧислоСовпадающихСимволов>МаксЧислоСовпадающихСимволов Тогда
			ПодходящийТовар=Выборка.Номенклатура;
			МаксЧислоСовпадающихСимволов=ЧислоСовпадающихСимволов;
			//ЭлементыФормы.МаксЧислоСовпадающихСимволов.Заголовок=МаксЧислоСовпадающихСимволов;
		КонецЕсли;	
	КонецЦикла;	
Возврат  ПодходящийТовар;
КонецФункции	


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
    Если Найти( ИмяВыделеннойЯчейки,"C6") Тогда
		ТабДок.Область(ИмяВыделеннойЯчейки).Текст=ЗначениеВыбора.Код;
		ИмяВыделеннойЯчейкиНаим=СтрЗаменить(ИмяВыделеннойЯчейки,"C6","C7");
		ТабДок.Область(ИмяВыделеннойЯчейкиНаим).Текст=ЗначениеВыбора.Наименование;
	КонецЕсли;	

КонецПроцедуры

Процедура ПолеТабличногоДокумента1Выбор(Элемент, Область, СтандартнаяОбработка)
	СтандартнаяОбработка=ЛОЖЬ;
	ИмяВыделеннойЯчейки=Элемент.ВыделенныеОбласти[0].Имя;
	Если Найти( ИмяВыделеннойЯчейки,"C6") Тогда
		 ФормаВыбора=Справочники.Номенклатура.ПолучитьФормуВыбора(,ЭтаФорма);
		 ФормаВыбора.СправочникСписок.Отбор["Производитель"].Использование = Истина;
		 ФормаВыбора.СправочникСписок.Отбор["Производитель"].ВидСравнения =  ВидСравнения.Равно;
		 ФормаВыбора.СправочникСписок.Отбор["Производитель"].Значение = Производитель;

		 Если не ФормаВыбора.Открыта() Тогда
			 ФормаВыбора.Открыть();
		КонецЕсли;		 
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыУстановитьЦены(Кнопка)
	
	ТипЦенЯкорная=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Якорная");
	ТипЦенКрупныйОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Крупный опт");
	ТипЦенСреднийОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Средний опт");
	ТипЦенМелкийОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Мелкий опт");
	
	ДокУЦН=Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	ДокУЦН.Дата=ТекущаяДата();
	
	
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенЯкорная;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенКрупныйОпт;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенСреднийОпт;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенМелкийОпт;
	//
	Для  сч=3 по ТабДок.ВысотаТаблицы Цикл
		КодНоменклатуры=ТабДок.Область("R"+Строка(сч)+"C6").Текст;
		Если ЗначениеНеЗаполнено(КодНоменклатуры) Тогда
			Продолжить;
		Иначе
			НайдЭлемент=Справочники.Номенклатура.НайтиПоКоду(КодНоменклатуры);
			Если ЗначениеНеЗаполнено(НайдЭлемент) Тогда 
				     Сообщить("Не найден элемент по коду "+КодНоменклатуры);
				 Иначе
				// для Якорной цены	 
				ЗначениеЦены=ТабДок.Область("R"+Строка(сч)+"C8").Текст;
				Если не ЗначениеНеЗаполнено(ЗначениеЦены) Тогда
					 строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=НайдЭлемент;
					 строкаТовары.Цена=Число(ЗначениеЦены);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенЯкорная;
				 КонецЕсли;	 
				 // для Крупного опта
				ЗначениеЦены=ТабДок.Область("R"+Строка(сч)+"C9").Текст;	 
				Если не ЗначениеНеЗаполнено(ЗначениеЦены) Тогда
					 строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=НайдЭлемент;
					 строкаТовары.Цена=Число(ЗначениеЦены);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенКрупныйОпт;
				 КонецЕсли;	 
				 
				 // для Среднего опта
                 ЗначениеЦены=ТабДок.Область("R"+Строка(сч)+"C10").Текст;	 
				Если не ЗначениеНеЗаполнено(ЗначениеЦены) Тогда
					 строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=НайдЭлемент;
					 строкаТовары.Цена=Число(ЗначениеЦены);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенСреднийОпт;
				 КонецЕсли;	 

				// для Мелкого опта
				 ЗначениеЦены=ТабДок.Область("R"+Строка(сч)+"C11").Текст;	 
				Если не ЗначениеНеЗаполнено(ЗначениеЦены) Тогда
					 строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=НайдЭлемент;
					 строкаТовары.Цена=Число(ЗначениеЦены);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенМелкийОпт;
				 КонецЕсли;	 

					 
			Конецесли;	
		КонецЕсли;	
	КонецЦикла;	
	ДокУЦН.ПолучитьФорму().Открыть();
КонецПроцедуры


ТабДок=ЭлементыФормы.ПолеТабличногоДокумента1;
СтрокаИспользуемыхБукв="0123456789ABCDEFHJKLMNOPQRSTUVWXYZАБВГДЕЖЗИКЛМНОПРСТУФХЧШЩИЪЫЬЭЮЯ";