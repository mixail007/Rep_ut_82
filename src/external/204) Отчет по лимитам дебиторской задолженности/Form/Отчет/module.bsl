
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.ОсновнойМенеджерКонтрагента КАК ОсновнойМенеджерКонтрагента,
	|	Контрагенты.ДопустимаяСуммаЗадолженности КАК ЛимитДебиторскойЗадолженности,
	|	Продажи.СтоимостьОборот КАК СуммаПродажЗаГод,
	|	ВзаиморасчетыСКонтрагентами.СуммаУпр КАК СуммаЗадолженности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Контрагенты.Ссылка КАК Ссылка,
	|		Контрагенты.ОсновнойМенеджерКонтрагента КАК ОсновнойМенеджерКонтрагента,
	|		Контрагенты.ДопустимаяСуммаЗадолженности КАК ДопустимаяСуммаЗадолженности
	|	ИЗ
	|		Справочник.Контрагенты КАК Контрагенты
	|	ГДЕ
	|		Контрагенты.Покупатель
	|		И (НЕ Контрагенты.ЗапретитьВводЗаказаПокупателя)) КАК Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	|			СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот
	|		ИЗ
	|			РегистрНакопления.Продажи.Обороты(ДОБАВИТЬКДАТЕ(&КонДата, ГОД, -1), &КонДата, , (НЕ Номенклатура.Услуга)) КАК ПродажиОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПродажиОбороты.ДоговорКонтрагента.Владелец) КАК Продажи
	|		ПО Контрагенты.Ссылка = Продажи.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	|			СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток) КАК СуммаУпр
	|		ИЗ
	|			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	|					&КонДата,
	|					ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|						И ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец) КАК ВзаиморасчетыСКонтрагентами
	|		ПО Контрагенты.Ссылка = ВзаиморасчетыСКонтрагентами.Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагенты.Ссылка.Наименование";

	Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ПриОткрытии()
	КонДата=ТекущаяДата();
КонецПроцедуры
