
Процедура ДействияФормыЗатратыОтКонтрагентовСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(ЗатратыОтКонтрагентов)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	ЗатратыОтКонтрагентов(ТабДок, ДатаКон, ДатаНач, Контрагент);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ЗатратыОтКонтрагентов(ТабДок, ДатаКон, ДатаНач, Контрагент) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(ЗатратыОтКонтрагентов)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	ФизЛица = Ложь;
	
	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("ЗатратыОтКонтрагентов");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА (ЕСТЬNULL(Затраты.Регистратор.Контрагент, 0) = 0)
	|				ИЛИ (Затраты.Регистратор.Контрагент = &Неопределено) 
	|		  ТОГДА ВЫБОР КОГДА (ЕСТЬNULL(Затраты.Регистратор.ФизЛицо, 0) = 0)
	|							ИЛИ (Затраты.Регистратор.ФизЛицо = &Неопределено) ТОГДА
	|					""Документы без контрагентов и физлиц""
	|			    ИНАЧЕ
	|					Затраты.Регистратор.ФизЛицо
	|				КОНЕЦ
	|		  ИНАЧЕ
	|			   Затраты.Регистратор.Контрагент 
	|	КОНЕЦ  КАК Контрагент,
	|	Затраты.Подразделение КАК Подразделение,
	|	Затраты.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Затраты.Регистратор КАК ДокументДвижения,
	|	Затраты.Сумма КАК Сумма
	|ИЗ
	|	РегистрНакопления.Затраты КАК Затраты
	|ГДЕ
	|	Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	|" + ?(ЗначениеНеЗаполнено(Контрагент), "", ?(ФизЛица, " И Затраты.Регистратор.ФизЛицо = &Контрагент" ," И Затраты.Регистратор.Контрагент = &Контрагент")) + "
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Подразделение
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент,
	|	Подразделение,
	|	СтатьяЗатрат";

	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Неопределено", Неопределено);
	
	Если НЕ ЗначениеНеЗаполнено(Контрагент) Тогда
	
		Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
			ФизЛица = Истина;
			
		КонецЕсли; 
	
	КонецЕсли; 

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьРегистраторКонтрагент = Макет.ПолучитьОбласть("РегистраторКонтрагент");
	ОбластьПодразделение = Макет.ПолучитьОбласть("Подразделение");
	ОбластьСтатьяЗатрат = Макет.ПолучитьОбласть("СтатьяЗатрат");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	

	ВыборкаРегистраторКонтрагент = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаРегистраторКонтрагент.Следующий() Цикл
		ОбластьРегистраторКонтрагент.Параметры.Заполнить(ВыборкаРегистраторКонтрагент);
		ТабДок.Вывести(ОбластьРегистраторКонтрагент, ВыборкаРегистраторКонтрагент.Уровень(),,Ложь);

		ВыборкаПодразделение = ВыборкаРегистраторКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаПодразделение.Следующий() Цикл
			ОбластьПодразделение.Параметры.Заполнить(ВыборкаПодразделение);
			ТабДок.Вывести(ОбластьПодразделение, ВыборкаПодразделение.Уровень(),,Ложь);

			ВыборкаСтатьяЗатрат = ВыборкаПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаСтатьяЗатрат.Следующий() Цикл
				ОбластьСтатьяЗатрат.Параметры.Заполнить(ВыборкаСтатьяЗатрат);
				ТабДок.Вывести(ОбластьСтатьяЗатрат, ВыборкаСтатьяЗатрат.Уровень(),,Ложь);

				ВыборкаДетали = ВыборкаСтатьяЗатрат.Выбрать();

				Пока ВыборкаДетали.Следующий() Цикл
					ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
					Попытка
					
						ОбластьДетальныхЗаписей.Параметры.Комментарий = ВыборкаДетали.ДокументДвижения.Комментарий;
					
					Исключение
						
						ОбластьДетальныхЗаписей.Параметры.Комментарий = "";
					
					КонецПопытки; 
					
					ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень(),,Ложь);
					
				КонецЦикла;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.Вывести(ОбластьОбщийИтог);
	
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры
