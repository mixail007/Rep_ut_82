Перем мДатаРасчета;
Перем мДнейВПериоде;
Перем мДнейРасчета;

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок, ДатаКон, ДатаНач,  Сценарий);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок, ДатаКон, ДатаНач,  Сценарий) Экспорт
	

	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Значение КАК Значение,
	|	ВложенныйЗапрос.КоличествоФакт КАК КоличествоФакт,
	|	ВложенныйЗапрос.СтоимостьФакт / 58 КАК СтоимостьФакт,
	|	ВложенныйЗапрос.ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|	ВложенныйЗапрос.КоличествоПлан КАК КоличествоПлан,
	|	ВложенныйЗапрос.СтоимостьПлан КАК СтоимостьПлан,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.КоличествоОборот КАК КоличествоОборот,
	|	ВложенныйЗапрос.СтоимостьОборот / 58 КАК СтоимостьОборот,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.КоличествоФакт / ВложенныйЗапрос.КоличествоПлан * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВложенныйЗапрос.Номенклатура, 0) = 0
	|					ТОГДА 100
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ПроцентВыполненияКоличество,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.СтоимостьПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.СтоимостьФакт / 58 / ВложенныйЗапрос.СтоимостьПлан * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВложенныйЗапрос.Номенклатура, 0) = 0
	|					ТОГДА 100
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ПроцентВыполненияСтоимость,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ((ВложенныйЗапрос.КоличествоФакт - ВложенныйЗапрос.КоличествоПлан / &ДнейВПериоде * &ДнейРасчета) / (ВложенныйЗапрос.КоличествоПлан / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоКоличеству,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.СтоимостьПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ((ВложенныйЗапрос.СтоимостьФакт / 58 - ВложенныйЗапрос.СтоимостьПлан / &ДнейВПериоде * &ДнейРасчета) / (ВложенныйЗапрос.СтоимостьПлан / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоСумме
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЗ.Значение КАК Значение,
	|		СУММА(ВЗ.КоличествоФакт) КАК КоличествоФакт,
	|		СУММА(ВЗ.СтоимостьФакт) КАК СтоимостьФакт,
	|		ВЗ.ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|		СУММА(ВЗ.КоличествоПлан) КАК КоличествоПлан,
	|		СУММА(ВЗ.СтоимостьПлан) КАК СтоимостьПлан,
	|		ВЗ.Номенклатура КАК Номенклатура,
	|		СУММА(ВЗ.КоличествоОборот) КАК КоличествоОборот,
	|		СУММА(ВЗ.СтоимостьОборот) КАК СтоимостьОборот
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК Значение,
	|			СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоФакт,
	|			СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьФакт,
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|			NULL КАК КоличествоПлан,
	|			NULL КАК СтоимостьПлан,
	|			NULL КАК Номенклатура,
	|			NULL КАК КоличествоОборот,
	|			NULL КАК СтоимостьОборот
	|		ИЗ
	|			РегистрНакопления.Продажи.Обороты(
	|					&ДатаНач,
	|					&ДатаКон,
	|					,
	|					НЕ Номенклатура.Услуга
	|						И Подразделение.ВЭД = &ВЭД) КАК ПродажиОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПланыПродажОбороты.Номенклатура,
	|			NULL,
	|			NULL,
	|			ПланыПродажОбороты.Менеджер,
	|			СУММА(ПланыПродажОбороты.КоличествоОборот),
	|			СУММА(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот),
	|			NULL,
	|			NULL,
	|			NULL
	|		ИЗ
	|			РегистрНакопления.ПланыПродаж.Обороты(
	|					&ДатаНач,
	|					&ДатаКон,
	|					,
	|					Сценарий = &Сценарий
	|						И Подразделение.ВЭД = &ВЭД) КАК ПланыПродажОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПланыПродажОбороты.Менеджер,
	|			ПланыПродажОбороты.Номенклатура
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	|			NULL,
	|			NULL,
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			NULL,
	|			NULL,
	|			ПродажиОбороты.Номенклатура,
	|			СУММА(ПродажиОбороты.КоличествоОборот),
	|			СУММА(ПродажиОбороты.СтоимостьОборот)
	|		ИЗ
	|			РегистрНакопления.Продажи.Обороты(
	|					&ДатаНач,
	|					&ДатаКон,
	|					,
	|					НЕ Номенклатура.Услуга
	|						И Подразделение.ВЭД = &ВЭД) КАК ПродажиОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			ПродажиОбороты.Номенклатура,
	|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа) КАК ВЗ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЗ.ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|		ВЗ.Значение,
	|		ВЗ.Номенклатура) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Значение,
	|	ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя
	|ИТОГИ
	|	СУММА(КоличествоФакт),
	|	СУММА(СтоимостьФакт),
	|	СУММА(КоличествоПлан),
	|	СУММА(СтоимостьПлан),
	|	СУММА(КоличествоОборот),
	|	СУММА(СтоимостьОборот),
	|	ВЫБОР
	|		КОГДА СУММА(КоличествоПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(КоличествоФакт) / СУММА(КоличествоПлан) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ПроцентВыполненияКоличество,
	|	ВЫБОР
	|		КОГДА СУММА(СтоимостьПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(СтоимостьФакт) / СУММА(СтоимостьПлан) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ПроцентВыполненияСтоимость,
	|	ВЫБОР
	|		КОГДА СУММА(КоличествоПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ((СУММА(КоличествоФакт) - СУММА(КоличествоПлан) / &ДнейВПериоде * &ДнейРасчета) / (СУММА(КоличествоПлан) / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоКоличеству,
	|	ВЫБОР
	|		КОГДА СУММА(СтоимостьПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ((СУММА(СтоимостьФакт) - СУММА(СтоимостьПлан) / &ДнейВПериоде * &ДнейРасчета) / (СУММА(СтоимостьПлан) / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоСумме
	|ПО
	|	ОБЩИЕ,
	|	Значение ИЕРАРХИЯ,
	|	ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("грузовыеотечка", Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0019"));
	Запрос.УстановитьПараметр("ВЭД", Истина);
	//Если РольДоступна("ДополнительныеПраваВЭД")тогда
	если ЗначениеЗаполнено(Подразделение)тогда
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"Подразделение.ВЭД = &ВЭД","Подразделение = &Подразделение");
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	конецЕсли;
	//иначе	
	//конецЕсли;
	
	ЗапросПоОстаткам = Новый Запрос;
		
	ЗапросПоОстаткам.Текст =
	"ВЫБРАТЬ
	|	ЗапросОстатковПартийПоСвойствам.Значение КАК Значение,
	|	ЕСТЬNULL(ЗапросОстатковПартийПоСвойствам.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ЗапросОстатковПартийПоСвойствам.СтоимостьОстаток, 0) / 58 КАК СтоимостьОстаток,
	|	ЕСТЬNULL(ЗапросПоЗакупкам.КоличествоОборот, 0) КАК ЗакупкиКоличествоФакт,
	|	ЕСТЬNULL(ЗапросПоЗакупкам.СтоимостьОборот, 0) / 58 КАК ЗакупкиСтоимостьФакт,
	|	ЕСТЬNULL(ПланыЗакупокОбороты.КоличествоОборот, 0) КАК ЗакупкиКоличествоПлан,
	|	ЕСТЬNULL(ПланыЗакупокОбороты.СтоимостьОборот + ПланыЗакупокОбороты.НДСОборот, 0) КАК ЗакупкиСтоимостьПлан
	|ИЗ
	|	РегистрНакопления.ПланыЗакупок.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Сценарий = &Сценарий
	|				И Подразделение.ВЭД = &ВЭД   ) КАК ПланыЗакупокОбороты
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Остатки.Номенклатура.НоменклатурнаяГруппа КАК Значение,
	|			СУММА(Остатки.КоличествоОстаток) КАК КоличествоОстаток,
	|			СУММА(Остатки.СтоимостьОстаток) КАК СтоимостьОстаток
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|				ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|				ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК СтоимостьОстаток
	|			ИЗ
	|				РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаКон, Склад В (&Склады)) КАК ТоварыНаСкладахОстатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаКон, Склад В (&Склады)) КАК ПартииТоваровНаСкладахОстатки
	|					ПО ТоварыНаСкладахОстатки.Номенклатура = ПартииТоваровНаСкладахОстатки.Номенклатура) КАК Остатки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Остатки.Номенклатура.НоменклатурнаяГруппа) КАК ЗапросОстатковПартийПоСвойствам
	|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СУММА(ЗакупкиОбороты.КоличествоОборот) КАК КоличествоОборот,
	|				СУММА(ЗакупкиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	|				ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппа КАК Значение
	|			ИЗ
	|				РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, , Подразделение = &ПодразделениеГНК) КАК ЗакупкиОбороты
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппа) КАК ЗапросПоЗакупкам
	|			ПО ЗапросОстатковПартийПоСвойствам.Значение = ЗапросПоЗакупкам.Значение
	|		ПО ПланыЗакупокОбороты.Номенклатура = ЗапросОстатковПартийПоСвойствам.Значение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Значение
	|АВТОУПОРЯДОЧИВАНИЕ";

	
	ЗапросПоОстаткам.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	ЗапросПоОстаткам.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	ЗапросПоОстаткам.УстановитьПараметр("Сценарий", Сценарий);
	ЗапросПоОстаткам.УстановитьПараметр("ВЭД", Истина);
	если ЗначениеЗаполнено(Подразделение)тогда
	ЗапросПоОстаткам.Текст = СтрЗаменить(ЗапросПоОстаткам.Текст,"Подразделение.ВЭД = &ВЭД","Подразделение = &Подразделение");
	ЗапросПоОстаткам.УстановитьПараметр("Подразделение", Подразделение);
	конецЕсли;
	ЗапросПоОстаткам.УстановитьПараметр("ПодразделениеГНК", Справочники.Подразделения.НайтиПоКоду("00166"));
	Если ЗначениеЗаполнено(Подразделение) и Подразделение=Справочники.Подразделения.НайтиПоКоду("00166") тогда 
	списокСкладов = Новый СписокЗначений;
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("02210"));
//	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("02142"));
	ЗапросПоОстаткам.УстановитьПараметр("Склады", СписокСкладов);
	ИначеЕсли ЗначениеЗаполнено(Подразделение) тогда 
	списокСкладов = Новый СписокЗначений;
	//СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("02210"));
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("02142"));
	ЗапросПоОстаткам.УстановитьПараметр("Склады", СписокСкладов);
	иначе	
	списокСкладов = Новый СписокЗначений;
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("02210"));
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("02142"));
	ЗапросПоОстаткам.УстановитьПараметр("Склады", СписокСкладов);
    конецЕсли;
	
	
	Если ЗначениеНеЗаполнено(мДнейВПериоде)
		ИЛИ ЗначениеНеЗаполнено(мДнейРасчета) Тогда
	
		Предупреждение("Необходимо установить период построения отчета!", 5);
		Возврат;
		
	Иначе
		
		Запрос.УстановитьПараметр("ДнейВПериоде", мДнейВПериоде);
	    Запрос.УстановитьПараметр("ДнейРасчета", мДнейРасчета);
		
	КонецЕсли; 
	ТаблицаОстатков = ЗапросПоОстаткам.Выполнить().Выгрузить();

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ВыводимыеЯчейки = Новый СписокЗначений;
	ВыводимыеЯчейки.Очистить();	
	
	Если ВыводитьДанныеПоКоличеству Тогда
		
		ВыводимыеЯчейки.Добавить("КоличествоОстаток", "КоличествоОстаток");
		ВыводимыеЯчейки.Добавить("ЗакупкиКоличествоПлан", "ЗакупкиКоличествоПлан");
		ВыводимыеЯчейки.Добавить("ЗакупкиКоличествоФакт", "ЗакупкиКоличествоФакт");
		ВыводимыеЯчейки.Добавить("ПродажаПланКоличество", "КоличествоПлан");
		ВыводимыеЯчейки.Добавить("ПродажаФактКоличество", "КоличествоФакт");
		ВыводимыеЯчейки.Добавить("ОстатокКонецМесяцаКоличество", "ОстатокКонецМесяцаКоличество");
		Если ВыводитьПроцентОтставания Тогда
			
			ВыводимыеЯчейки.Добавить("ПроцентОтстованияКоличество", "ОтстованиеПоКоличеству");
			
		КонецЕсли;
		ВыводимыеЯчейки.Добавить("СуммаОстаток", "СтоимостьОстаток");
		ВыводимыеЯчейки.Добавить("ЗакупкиСтоимостьПлан", "ЗакупкиСтоимостьПлан");
		ВыводимыеЯчейки.Добавить("ЗакупкиСтоимостьФакт", "ЗакупкиСтоимостьФакт");
		ВыводимыеЯчейки.Добавить("ПродажаПланСтоимость", "СтоимостьПлан");
		ВыводимыеЯчейки.Добавить("ПродажаФактСтоимость", "СтоимостьФакт");
		ВыводимыеЯчейки.Добавить("ОстатокКонецМесяцаСумма", "ОстатокКонецМесяцаСумма");
		Если ВыводитьПроцентОтставания Тогда
			
			ВыводимыеЯчейки.Добавить("ПроцентОтстованияСтоимость", "ОтстованиеПоСумме");
			
		КонецЕсли;
		
		//ВыводимыеЯчейки.Добавить("ДействиеПоКоличеству", "ДействиеПоКоличеству");
		
		Если ВыводитьПроцентВыполнения Тогда
			
			ВыводимыеЯчейки.Добавить("ПроцентВыполненияКоличество", "ПроцентВыполненияКоличество");
			
		КонецЕсли;
				
	КонецЕсли; 
	
	Если ВыводитьДанныеПоСуммам Тогда
		
		//ВыводимыеЯчейки.Добавить("ДействиеПоСтоимости", "ДействиеПоСтоимости");
		
		Если ВыводитьПроцентВыполнения Тогда
			
			ВыводимыеЯчейки.Добавить("ПроцентВыполненияСтоимость", "ПроцентВыполненияСтоимость");
			
		КонецЕсли;
		
	КонецЕсли;	
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы|ОсновнойСтолбец");
	
	//ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги|ОсновнойСтолбец");
	ОбластьЗначение = Макет.ПолучитьОбласть("Значение|ОсновнойСтолбец");
	ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя = Макет.ПолучитьОбласть("ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя|ОсновнойСтолбец");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура|ОсновнойСтолбец");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
		
		ОбластьВывода = Макет.ПолучитьОбласть("ШапкаТаблицы|" + СтрокаЯчеек.Значение);
		//ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаОбщийИтог[СтрокаЯчеек.Представление];
		ТабДок.Присоединить(ОбластьВывода);	
		
	КонецЦикла; 

	//ТабДок = Новый ТабличныйДокумент;
	ТабДок.ФиксацияСверху = ТабДок.ВысотаТаблицы;
	
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	
	ОбщийИтогКоличествоОстаток = 0;
	ОбщийИтогЗакупкиКоличествоПлан = 0;
	ОбщийИтогЗакупкиКоличествоФакт = 0;
	ОбщийИтогСтоимостьОстаток = 0;
	ОбщийИтогЗакупкиСтоимостьПлан = 0;
	ОбщийИтогЗакупкиСтоимостьФакт = 0;
	ОбщийИтогДействиеПоКоличеству = 0;
	ОбщийИтогДействиеПоСтоимости = 0;
	ОбщийИтогОстатокКонецМесяцаКоличество = 0;
	ОбщийИтогОстатокКонецМесяцаСумма = 0;

	ВыборкаЗначение = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Флаг = ложь;
	Пока ВыборкаЗначение.Следующий() Цикл
		
		ОбластьЗначение.Параметры.Заполнить(ВыборкаЗначение);
		Если ТипЗнч(ВыборкаЗначение.Значение)=Тип("СправочникСсылка.НоменклатурныеГруппы")		Тогда
			   МенеджерНаправления=ПолучитьМенеджераНаправления(ВыборкаЗначение.Значение);
			   Если не ЗначениеНеЗаполнено(МенеджерНаправления) Тогда
				   ОбластьЗначение.Параметры.Значение=Строка(ВыборкаЗначение.Значение)+" / "+СокрЛП(Строка(МенеджерНаправления));
			   КонецЕсли;	   
		КонецЕсли;	
		   
		Попытка
			Табдок.Закончитьгруппустрок();	
		Исключение;Конецпопытки;
		
		//---------------------------------------------------------------------------
		// Первый 
		ТабДок.Вывести(ОбластьЗначение, ВыборкаЗначение.Уровень());
		//Сообщить(ОбластьЗначение.Параметры.Значение);
		
		Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
			
			ОбластьВывода = Макет.ПолучитьОбласть("Значение|" + СтрокаЯчеек.Значение);
			
			Если СтрокаЯчеек.Представление = "СтоимостьОстаток" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогСтоимостьОстаток = ОбщийИтогСтоимостьОстаток + СтрокаОстатков.СтоимостьОстаток;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппе(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогСтоимостьОстаток = ОбщийИтогСтоимостьОстаток + СуммаХ;					
					КонецЕсли;
				КонецЕсли;
								
			ИначеЕсли СтрокаЯчеек.Представление = "КоличествоОстаток" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогКоличествоОстаток = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеКоличество(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогКоличествоОстаток = ОбщийИтогКоличествоОстаток + СуммаХ;									
					КонецЕсли
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоКоличеству" Тогда
				
				// Временная мера
				врДействиеПоКоличеству =  ?(ЗначениеНеЗаполнено(ВыборкаЗначение.КоличествоПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоКоличеству), 0,
																		Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0)); 
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоКоличеству;
				
				ОбщийИтогДействиеПоКоличеству = ОбщийИтогДействиеПоКоличеству + врДействиеПоКоличеству;
				
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0);
				
			ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоСтоимости" Тогда
				
				// Временная мера
				врДействиеПоСумме = ?(ЗначениеНеЗаполнено(ВыборкаЗначение.СтоимостьПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоСумме), 0,
																		Окр(ВыборкаЗначение.СтоимостьПлан * (ВыборкаЗначение.ОтстованиеПоСумме/100), 0));
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоСумме;
				ОбщийИтогДействиеПоСтоимости = ОбщийИтогДействиеПоСтоимости + врДействиеПоСумме;
				
				//ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
		
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоПлан" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоПлан;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогЗакупкиКоличествоПлан + СтрокаОстатков.ЗакупкиКоличествоПлан;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеЗакупкиКоличествоПлан(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогЗакупкиКоличествоПлан + СуммаХ;					
					КонецЕсли;					
					
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоФакт" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоФакт;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиКоличествоФакт = ОбщийИтогЗакупкиКоличествоФакт + СтрокаОстатков.ЗакупкиКоличествоФакт;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеЗакупкиКоличествоФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиКоличествоФакт = ОбщийИтогЗакупкиКоличествоФакт + СуммаХ;									
					КонецЕсли;
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьПлан" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьПлан;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиСтоимостьПлан = ОбщийИтогЗакупкиСтоимостьПлан + СтрокаОстатков.ЗакупкиСтоимостьПлан;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьПлан(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиСтоимостьПлан = ОбщийИтогЗакупкиСтоимостьПлан + СуммаХ;													
					КонецЕсли;
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьФакт" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьФакт;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
				    	ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СтрокаОстатков.ЗакупкиСтоимостьФакт;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СуммаХ;					
					КонецЕсли;
				КонецЕсли; 
	
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаКоличество" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток + СтрокаОстатков.ЗакупкиКоличествоПлан - ?(ВыборкаЗначение.КоличествоПлан=null,0,ВыборкаЗначение.КоличествоПлан);//СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
					Если ВыборкаЗначение.Уровень()=1 Тогда 
				    	ОбщийИтогОстатокКонецМесяцаКоличество = ОбщийИтогОстатокКонецМесяцаКоличество + СтрокаОстатков.КоличествоОстаток + СтрокаОстатков.ЗакупкиКоличествоПлан - ?(ВыборкаЗначение.КоличествоПлан=null,0,ВыборкаЗначение.КоличествоПлан); // + СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
					КонецЕсли;
				Иначе 
					//СуммаХ = РассчитатьПоГруппеКоличество(ТаблицаОстатков,ВыборкаЗначение.Значение) + РассчитатьПоГруппеЗакупкиКоличествоФакт(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт); 
					СуммаХ = РассчитатьПоГруппеКоличество(ТаблицаОстатков,ВыборкаЗначение.Значение) + РассчитатьПоГруппеЗакупкиКоличествоПлан(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.КоличествоПлан=null,0,ВыборкаЗначение.КоличествоПлан); 
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаКоличество = ОбщийИтогОстатокКонецМесяцаКоличество + СуммаХ;					
					КонецЕсли;
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаСумма" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток + СтрокаОстатков.ЗакупкиСтоимостьПлан - ?(ВыборкаЗначение.СтоимостьПлан=null,0,ВыборкаЗначение.СтоимостьПлан);//СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаСумма = ОбщийИтогОстатокКонецМесяцаСумма + СтрокаОстатков.СтоимостьОстаток + СтрокаОстатков.ЗакупкиСтоимостьПлан - ?(ВыборкаЗначение.СтоимостьПлан=null,0,ВыборкаЗначение.СтоимостьПлан);//СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппе(ТаблицаОстатков,ВыборкаЗначение.Значение) + РассчитатьПоГруппеЗакупкиСтоимостьПлан(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.СтоимостьПлан=null,0,ВыборкаЗначение.СтоимостьПлан); //РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаСумма = ОбщийИтогОстатокКонецМесяцаСумма + СуммаХ;					
					КонецЕсли;
				КонецЕсли; 
				
			Иначе
				
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаЗначение[СтрокаЯчеек.Представление];
			
			КонецЕсли; 
		
			ТабДок.Присоединить(ОбластьВывода);	
			
		КонецЦикла; 
		
		//---------------------------------------------------------------------------
		// Второй
		// Исключим Никитина, Кузьмичеву и некоторые их группы
		Если ((ТипЗнч(ВыборкаЗначение.Значение) = ТипЗнч(Справочники.НоменклатурныеГруппы.ПустаяСсылка()) и ((ВыборкаЗначение.Значение.Код="00062") или (ВыборкаЗначение.Значение.Код="00063")  или (ВыборкаЗначение.Значение.Код="00020") или (ВыборкаЗначение.Значение.Код="00031") или (ВыборкаЗначение.Значение.Код="00013") или (ВыборкаЗначение.Значение.Код="00036") или (ВыборкаЗначение.Значение.Код="00074") или (ВыборкаЗначение.Значение.Код="00041")))) или ((ТипЗнч(ВыборкаЗначение.Значение) = ТипЗнч(Справочники.НоменклатурныеГруппы.ПустаяСсылка())) и (не ВыборкаЗначение.Значение.Этогруппа) и (не(ВыборкаЗначение.Значение.Ответственный = Справочники.Пользователи.НайтиПоКоду("Кузьмичева                                        "))) и (не(ВыборкаЗначение.Значение.Ответственный = Справочники.Пользователи.НайтиПоКоду("Никитин                                           "))))  Тогда 
			ТабДок.Вывести(ОбластьЗначение, ВыборкаЗначение.Уровень()+1);
			Табдок.начатьгруппустрок();
			
			Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
				
				ОбластьВывода = Макет.ПолучитьОбласть("Значение|" + СтрокаЯчеек.Значение);
				
				Если СтрокаЯчеек.Представление = "СтоимостьОстаток" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток;
						//ОбщийИтогСтоимостьОстаток = ОбщийИтогСтоимостьОстаток + СтрокаОстатков.СтоимостьОстаток;
					Иначе 
						СуммаХ = РассчитатьПоГруппе(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
						//ОбщийИтогСтоимостьОстаток = ОбщийИтогСтоимостьОстаток + СуммаХ;					
					КонецЕсли;
					
					
				ИначеЕсли СтрокаЯчеек.Представление = "КоличествоОстаток" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток;
					//	ОбщийИтогКоличествоОстаток = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
					Иначе 
						СуммаХ = РассчитатьПоГруппеКоличество(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					//	ОбщийИтогКоличествоОстаток = ОбщийИтогКоличествоОстаток + СуммаХ;									
					КонецЕсли; 
					
				ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоКоличеству" Тогда
					
					// Временная мера
					врДействиеПоКоличеству =  ?(ЗначениеНеЗаполнено(ВыборкаЗначение.КоличествоПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоКоличеству), 0,
																			Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0)); 
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоКоличеству;
					
					ОбщийИтогДействиеПоКоличеству = ОбщийИтогДействиеПоКоличеству + врДействиеПоКоличеству;
					
					//ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0);
					
				ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоСтоимости" Тогда
					
					// Временная мера
					врДействиеПоСумме = ?(ЗначениеНеЗаполнено(ВыборкаЗначение.СтоимостьПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоСумме), 0,
																			Окр(ВыборкаЗначение.СтоимостьПлан * (ВыборкаЗначение.ОтстованиеПоСумме/100), 0));
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоСумме;
					ОбщийИтогДействиеПоСтоимости = ОбщийИтогДействиеПоСтоимости + врДействиеПоСумме;
					
					//ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
			
				ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоПлан" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоПлан;
						//ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогЗакупкиКоличествоПлан + СтрокаОстатков.ЗакупкиКоличествоПлан;
					Иначе 
						СуммаХ = РассчитатьПоГруппеЗакупкиКоличествоПлан(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
						//ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогЗакупкиКоличествоПлан + СуммаХ;					
					КонецЕсли; 
					
				ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоФакт" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоФакт;
						//ОбщийИтогЗакупкиКоличествоФакт = ОбщийИтогЗакупкиКоличествоФакт + СтрокаОстатков.ЗакупкиКоличествоФакт;
					Иначе 
						СуммаХ = РассчитатьПоГруппеЗакупкиКоличествоФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
						//ОбщийИтогЗакупкиКоличествоФакт = ОбщийИтогЗакупкиКоличествоФакт + СуммаХ;					
					КонецЕсли; 
					
				ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьПлан" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьПлан;
					//	ОбщийИтогЗакупкиСтоимостьПлан = ОбщийИтогЗакупкиСтоимостьПлан + СтрокаОстатков.ЗакупкиСтоимостьПлан;
					Иначе 
						СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьПлан(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
						//ОбщийИтогЗакупкиСтоимостьПлан = ОбщийИтогЗакупкиСтоимостьПлан + СуммаХ;					
					КонецЕсли; 
					
				ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьФакт" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьФакт;
					//    ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СтрокаОстатков.ЗакупкиСтоимостьФакт;
						
					Иначе 
						СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					//	ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СуммаХ;											
					КонецЕсли; 
					
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаКоличество" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток + СтрокаОстатков.ЗакупкиКоличествоПлан - ?(ВыборкаЗначение.КоличествоПлан=null,0,ВыборкаЗначение.КоличествоПлан);//СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
				  //  ОбщийИтогОстатокКонецМесяцаКоличество = ОбщийИтогОстатокКонецМесяцаКоличество + СтрокаОстатков.КоличествоОстаток + СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
				//Иначе 
				//	СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
				//	ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
				//	ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СуммаХ;					
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаСумма" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток + СтрокаОстатков.ЗакупкиСтоимостьПлан - ?(ВыборкаЗначение.СтоимостьПлан=null,0,ВыборкаЗначение.СтоимостьПлан);//СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
				//    ОбщийИтогОстатокКонецМесяцаСумма = ОбщийИтогОстатокКонецМесяцаСумма + СтрокаОстатков.СтоимостьОстаток + СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
				//Иначе 
				//	СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
				//	ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
				//	ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СуммаХ;					
				КонецЕсли; 
				
					
					
					
				Иначе
					
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаЗначение[СтрокаЯчеек.Представление];
				
				КонецЕсли; 
			
				ТабДок.Присоединить(ОбластьВывода);	
				
			КонецЦикла; 
		//-----------------------------------
		КонецЕсли;		

		ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя = ВыборкаЗначение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Следующий() Цикл
			ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Параметры.Заполнить(ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя);
			ТабДок.Вывести(ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя, ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Уровень());
			
			Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
				
				ОбластьВывода = Макет.ПолучитьОбласть("ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя|" + СтрокаЯчеек.Значение);
				
				Если (СтрокаЯчеек.Представление <> "СтоимостьОстаток") 
					 И (СтрокаЯчеек.Представление <> "КоличествоОстаток")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоПлан")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоФакт")
					 И (СтрокаЯчеек.Представление <> "ДействиеПоКоличеству")
					 И (СтрокаЯчеек.Представление <> "ДействиеПоСтоимости")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьПлан")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьФакт") 
					 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество") 
					 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма") Тогда
					 
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя[СтрокаЯчеек.Представление];
				
				КонецЕсли; 
				
				ТабДок.Присоединить(ОбластьВывода);	
				
			КонецЦикла; 

			
			ВыборкаНоменклатура = ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаНоменклатура.Следующий() Цикл
				
				ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
				
				Если НЕ ЗначениеНеЗаполнено(ВыборкаНоменклатура.Номенклатура) Тогда
					
					ТабДок.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());
					
					Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
						
						Если СтрокаЯчеек.Представление = "КоличествоФакт" Тогда
						
							Параметр = "КоличествоОборот";
							
						Иначе
							
							Параметр = СтрокаЯчеек.Представление;
						
						КонецЕсли; 
						
						Если СтрокаЯчеек.Представление = "СтоимостьФакт" Тогда
						
							Параметр = "СтоимостьОборот";
							
							
						КонецЕсли; 
				
						ОбластьВывода = Макет.ПолучитьОбласть("Номенклатура|" + СтрокаЯчеек.Значение);
						
						Если (Параметр <> "СтоимостьОстаток") 
							И (Параметр <> "КоличествоОстаток") 
							И (Параметр <> "ЗакупкиКоличествоПлан")
					 		И (Параметр <> "ЗакупкиКоличествоФакт")
					 		И (Параметр <> "ЗакупкиСтоимостьПлан")
							И (Параметр <> "ДействиеПоКоличеству")
							И (Параметр <> "ДействиеПоСтоимости")
					 		И (Параметр <> "ЗакупкиСтоимостьФакт") 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество") 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма") Тогда
							
							ОбластьВывода.Параметры[Параметр] = ВыборкаНоменклатура[Параметр];
							
						КонецЕсли;
						
						ТабДок.Присоединить(ОбластьВывода);	
						
					КонецЦикла; 
					
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

		Попытка 
			Табдок.Закончитьгруппустрок();	
		Исключение   
		Конецпопытки;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.Вывести(ОбластьОбщийИтог);
	
	Если Флаг Тогда 
		ТабДок.Вывести(ОбластьОбщийИтог);
	КонецЕсли;
	Флаг=ложь;	
	
	Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
		
		ОбластьВывода = Макет.ПолучитьОбласть("ОбщиеИтоги|" + СтрокаЯчеек.Значение);
		
		Если (СтрокаЯчеек.Представление <> "СтоимостьОстаток") 
			И (СтрокаЯчеек.Представление <> "КоличествоОстаток")
			И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоПлан")
			И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоФакт")
			И (СтрокаЯчеек.Представление <> "ДействиеПоКоличеству")
			И (СтрокаЯчеек.Представление <> "ДействиеПоСтоимости")
			И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьПлан")
			И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьФакт") 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество") 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма") Тогда
			
			ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаОбщийИтог[СтрокаЯчеек.Представление];
			
		Иначе
			
			ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = Вычислить("ОбщийИтог" + СтрокаЯчеек.Представление);
			
		КонецЕсли;
		
		ТабДок.Присоединить(ОбластьВывода);	
		
	КонецЦикла; 
     ТабДок.ФиксацияСлева =2;
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если НЕ ЗначениеНеЗаполнено(ДатаНач) И НЕ ЗначениеНеЗаполнено(ДатаКон) Тогда
		
		ВТекущемПериоде = Ложь;
		
		Если ДатаКон >= ТекущаяДата() Тогда
		
			ВТекущемПериоде = Истина;
		
		КонецЕсли;
		
		Если ВТекущемПериоде Тогда
		
			мДатаРасчета = Формат(ТекущаяДата(), "ДЛФ=Д");
			мДнейВПериоде = Окр((КонецДня(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			//мДнейРасчета =  ((НачалоДня(ТекущаяДата()) - НачалоДня(ДатаНач)) / 60 / 60 / 24);
			мДнейРасчета =  ((НачалоДня(ТекущаяДата()) - НачалоДня(ДатаНач)) / 60 / 60 / 24);
			мДнейРасчета =  ?(мДнейРасчета=0,1,мДнейРасчета);
			
		Иначе
			
			мДатаРасчета = Формат(ДатаКон, "ДЛФ=Д");
			мДнейВПериоде = Окр((КонецМесяца(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			мДнейРасчета =  Окр((КонецДня(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			//мДнейРасчета =  Окр((КонецМесяца(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			мДнейРасчета =  ?(мДнейРасчета=0,1,мДнейРасчета);
		КонецЕсли; 
		
		//мДнейРасчета = ?(мДнейРасчета=0,1,мДнейРасчета);
		ЭлементыФормы.ОписаниеПараметров.Заголовок = "Дата расчета: " + мДатаРасчета + ", дней в периоде: " + Строка(мДнейВПериоде) + ", дней расчета: " + Строка(мДнейРасчета) + ", тип периода: " + ?(ВТекущемПериоде, "текущий", "прошедший");
		
	КонецЕсли; 	
	
КонецПроцедуры

Процедура ДействияФормыНастройка(Кнопка)
	
	ФормаНастроек = ПолучитьФорму("Настройки");
	
	врВыводитьДанныеПоКоличеству = ВыводитьДанныеПоКоличеству;
	врВыводитьДанныеПоСуммам = ВыводитьДанныеПоСуммам;
	врВыводитьПроцентВыполнения = ВыводитьПроцентВыполнения;
	врВыводитьПроцентОтставания = ВыводитьПроцентОтставания;
	
	Если ФормаНастроек.ОткрытьМодально() <> "ОК" Тогда
		
		ВыводитьДанныеПоКоличеству 	= врВыводитьДанныеПоКоличеству;
		ВыводитьДанныеПоСуммам 		= врВыводитьДанныеПоСуммам;
		ВыводитьПроцентВыполнения 	= врВыводитьПроцентВыполнения;
		ВыводитьПроцентОтставания 	= врВыводитьПроцентОтставания;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМенеджераНаправления(НоменклатурнаяГруппа)
	Запрос = Новый Запрос;
	
	Запрос.Текст=" ВЫБРАТЬ  ПЕРВЫЕ 1
|	ЗначенияСвойствОбъектов.Значение  Менеджер
|ИЗ
|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
|ГДЕ
|	ЗначенияСвойствОбъектов.Объект = &Объект
|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";

Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Менеджер направления продаж"));
Запрос.УстановитьПараметр("Объект",НоменклатурнаяГруппа);

Выборка=Запрос.Выполнить().Выбрать();
Если Выборка.Следующий() Тогда
	Возврат  Выборка.Менеджер;
Иначе
    Возврат "";
КонецЕсли;

	
КонецФункции	

Процедура ПриОткрытии()
	Если РольДоступна("ДополнительныеПраваВЭД")тогда
	Элементыформы.НадписьПодразделение.Видимость = истина;
	Элементыформы.Подразделение.Видимость = Истина;
	конецесли;	
КонецПроцедуры

Функция РассчитатьПоГруппе(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.СтоимостьОстаток;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеКоличество(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.КоличествоОстаток;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиКоличествоПлан(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиКоличествоПлан;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиКоличествоФакт(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиКоличествоФакт;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиСтоимостьПлан(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиСтоимостьПлан;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиСтоимостьФакт;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиКоличествоКонецМесяца(ТаблицаОстатков,ВыборкаЗначение,Значение)
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиКоличествоФакт-?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;	
КонецФункции

Функция РассчитатьПоГруппеЗакупкиСтоимостьКонецМесяца(ТаблицаОстатков,ВыборкаЗначение,Значение)
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиСтоимостьФакт-?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;	
КонецФункции

Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Программа");
Сценарий = Справочники.СценарииПланирования.НайтиПоКоду("00002");
ДатаНач = НачалоМесяца(ТекущаяДата());
ДатаКон = КонецМесяца(ТекущаяДата());

ВыводитьДанныеПоКоличеству = Истина;
ВыводитьДанныеПоСуммам = Истина;
ВыводитьПроцентВыполнения = Истина;
ВыводитьПроцентОтставания = Истина;