перем Базовая, ОкрВниз;

процедура ЗаполнитьНачальныеДанные()
	
	НоменклатурнаяГруппа = справочники.НоменклатурныеГруппы.НайтиПоКоду("00016");
	флШип = Истина;
		
	Емкость = 2000;
	ЕмкостьV = Емкость * 0.080; //15"  
	
	Дата0 = '20170915';
	Дата01 = '20180915';
	Дата1= Дата01;
	
	масФилиалов = яштПоставщики.ПолучитьМассивФилиалов();
	Для i=0 по масФилиалов.Количество()-1 цикл
		ЭлементыФормы.Филиал.СписокВыбора.Добавить( масФилиалов[i] );
	КонецЦикла;
	
	ФлФилиал=Истина;
	ПроцентФ = 10;
	Филиал = масФилиалов[2]; // [0]=5;  106, 112, 133, 138, 172...
	ФлФилиалПриИзменении(неопределено);

	МинДоля = 0.5; // менее 0.1% уже количество меньше 4х!
	ФлТоварыИзПлана = ЛОЖЬ;
	
	КоэффициентРазличия = 3;
	Фл4=ЛОЖЬ;
	ПроцентРоста = 0; // !!!
	ФлАналоги=ЛОЖЬ;
	
	ПроцA = 45;
	ПроцB = 35;
	ПроцC = 20;
	
	ЦенаB2B = справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00032");
	ДокументПланаЗакупок = документы.ЗаказПоставщикуСезонный.НайтиПоНомеру("00000000", '20181003');
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ЗаполнитьНачальныеДанные();
КонецПроцедуры


//=====================================================================

//1) --------Анализ продаж прошлого года-----------
//Параметры:
//Дата0 - Дата анализа по ненулевым Базовым ценам!
//НомГруппа - только по 1 группе!
//ФлШип - только Шин / не Шип
//только по 1 Филиалу, Если он заполнен!
//
Процедура КоманднаяПанель0Сформировать(Кнопка)
	
	Если НоменклатурнаяГруппа.Пустая() тогда
		Предупреждение("Заполните Ном.группу!",30);
		Возврат;
	КонецЕсли;	
	
	Если Дата0='00010101' тогда
		Предупреждение("Не заполнена Дата Среза цен прошлого года!", 30);
		Возврат;
	КонецЕсли;	
	Если Дата0<'20030101' тогда
		Предупреждение("Дата Среза цен прошлого года должна быть больше 2003г.!", 30);
		Возврат;
	КонецЕсли;	
	Если Дата1='00010101' тогда
		Предупреждение("Не заполнена Дата Среза цен этого года!", 30);
		Возврат;
	КонецЕсли;	
	Если Дата1<'20150101' тогда
		Предупреждение("Дата Среза цен этого года должна быть больше 2015г.!", 30);
		Возврат;
	КонецЕсли;	
	
	запрос0 = ПолучитьЗапросПродаж(Дата0, Дата1);
	рез0 = запрос0.Выполнить();
	
	//================Обработка Дерева=======================
	Дерево0 = рез0.выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Состояние("Идёт обработка "+строка(Дерево0.строки.Количество())+" строк...");
	
	Если Дерево0.строки.Количество()=0 тогда
		сообщить("1) Анализ продаж прошлого года - НИЧЕГО НЕ НАЙДЕНО за период с "+формат(Дата1,"ДЛФ=D")+" до "+формат(Дата1,"ДЛФ=D"));	
		Состояние(" ");
	    Возврат;
	КонецЕсли;
	
	определитьABCпоДереву( Дерево0 );
	
	Дерево0.Строки.Сортировать("Доля УБЫВ");
	
//-----------если развернули - то переформирование - СВОРАЧИВАЕТ! ------------	
	ЭлементыФормы.КоманднаяПанель0.Кнопки.Свернуть.Пометка = Истина;
	КоманднаяПанель0Свернуть(неопределено);

	сообщить("1) Анализ продаж прошлого года - выполнен за период с "+формат(Дата1,"ДЛФ=D")+" до "+формат(Дата1,"ДЛФ=D"));	
	Состояние(" ");
КонецПроцедуры

функция ПолучитьЗапросПродаж(ДатаНач, ДатаКон)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПродажиОбороты.Номенклатура.Типоразмер КАК Типоразмер,
	               |	ПродажиОбороты.Номенклатура.Код КАК Код,
	               |	ПродажиОбороты.Номенклатура КАК Номенклатура,
	               |	ПродажиОбороты.Номенклатура.Производитель КАК Производитель,
				   
	               |	ЕСТЬNULL(ПродажиОбороты.КоличествоОборот,0)
				   |//ПроцентФ  * &КоэффициентФ
				   |КАК Количество,
				   
	               |	ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот,0) 
				   //--------в среднем----------------------
				   |//ПроцентФ  * &КоэффициентФ
				   |КАК Стоимость,
				   
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ПродажиОбороты.КоличествоОборот,0) <> 0
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот,0) / ЕСТЬNULL(ПродажиОбороты.КоличествоОборот,0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Цена,
				   |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ЦенаБазовая,
				   |	0.0 как Доля,
				   |	Значение(перечисление.ABCКлассификация.ПустаяСсылка) как КлассABC,
				   |	0 как КолA,
	               |	0 как КолB,
	               |	0 как КолC
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , 
				   |					Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	   			   |//ФлШип				И Номенклатура.Наименование ПОДОБНО ""%шип%""
				   |//Филиал			И Подразделение = &Филиал
					|) КАК ПродажиОбороты
					
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаНач, 
				   |					Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
				   |//ФлШип				И Номенклатура.Наименование ПОДОБНО ""%шип%""
				  //-----------ТОЛЬКО товары с ненулевой ценой по типу Базовая!--------------------- 
				   |					И ТипЦен = &Базовая
				   |	) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО ПродажиОбороты.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		           |ГДЕ
	               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) > 0
				  //---------меньше 0,5 не надо! 
	               |  И Выразить(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот,0)
				   |//ПроцентФ  * &КоэффициентФ 
				   |	как число(15,0)) > 0
				   
	               |УПОРЯДОЧИТЬ ПО
	               |	Цена УБЫВ
				   
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура),
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Производитель),
	               |	СУММА(Количество),
	               |	СУММА(Стоимость),
	                |	СРЕДНЕЕ(ЦенаБазовая),
	               |	СРЕДНЕЕ(Цена),
	               |	Максимум(Доля),
				   |	Максимум(КлассABC),
				   
			     |	Максимум(КолA),
	             |	Максимум(КолB),
	             |	Максимум(КолC)
	          
	               |ПО
	               |	Типоразмер
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
				   //|//ФлШип				И Номенклатура.Наименование ПОДОБНО ""%шип%""
				   //|//Филиал			И Подразделение = &Филиал
 	Состояние("Идёт поиск и анализ продаж с "+формат(ДатаНач,"ДЛФ=D")+" до "+формат(ДатаКон,"ДЛФ=D"));
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("Базовая", Базовая );
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	Если флШип тогда
		Запрос.текст = стрЗаменить(Запрос.текст, "//ФлШип","");
	КонецЕсли;	
	Если ФлФилиал тогда
		Запрос.текст = стрЗаменить(Запрос.текст, "//Филиал","");
		Запрос.УстановитьПараметр("Филиал", Филиал);
	иначе
		Запрос.текст = стрЗаменить(Запрос.текст, "//ПроцентФ","");
		Запрос.УстановитьПараметр("КоэффициентФ", ПроцентФ/100);
	КонецЕсли;	
	
	Возврат Запрос;
КонецФункции

процедура УменьшитьКоличествоПоДереву(процФ, ДеревоФ)
	
	Коэф = процФ / 100 * (1 + ПроцентРоста/100);
	
	для каждого стрФ из ДеревоФ.Строки цикл
		КоличествоФ = 0;
		стрФ.Стоимость = стрФ.Количество * стрФ.Цена;
		для каждого стрФФ из стрФ.Строки цикл
			стрФФ.Количество = Окр(стрФФ.Количество * Коэф, 0);
			стрФФ.Стоимость  = стрФФ.Количество * стрФФ.Цена;
			КоличествоФ = КоличествоФ + стрФФ.Количество;
		КонецЦикла;	
		стрФ.Количество = КоличествоФ;
		стрФ.Стоимость = стрФ.Количество * стрФ.Цена;
	КонецЦикла;	
	
КонецПроцедуры	

//25.10.2018
процедура ИзменитьКоличествоПоДереву(Дерево0, ДеревоЗак )
	для каждого стр1 из ДеревоЗак.строки цикл
		стр0 = Дерево0.строки.найти(стр1.Типоразмер, "Типоразмер");
		КоэфКол = 1; //19.11.2018
	
		Если стр0 = неопределено тогда // не было продаж такого типоразмера в прошлом году?!
			КоэфA = 0; КоэфB = 0; КоэфC = 0;
		иначе
			Если ФлФилиал тогда //+++ 19.11.2018 - итог.количество должно совпадать с прошлым годом
				КоэфКол = стр0.Количество/стр1.Количество; 	
				//Сообщить(строка(стр1.Типоразмер)+" Коэфф.кол-ва = "+формат(КоэфКол,"ЧДЦ=3"));
			КонецЕсли;	
			
			// ABC - распределение нужно из прошлого года!
			КоэфA = КоэфКол * ?(стр1.КолA=0, 0 , стр0.КолA / стр1.КолA);
			КоэфB = КоэфКол * ?(стр1.КолB=0, 0 , стр0.КолB / стр1.КолB);
			КоэфC = КоэфКол * ?(стр1.КолC=0, 0 , стр0.КолC / стр1.КолC);
			
		КонецЕсли;
		
		для каждого стр2 из стр1.строки цикл
		коэф = ?(стр2.КлассABC = перечисления.ABCКлассификация.AКласс, КоэфA,
						?(стр2.КлассABC = перечисления.ABCКлассификация.BКласс, КоэфB, КоэфC)); 
						
		стр2.Количество = ОКР( стр2.Количество * коэф * (1 + ПроцентРоста/100) );
		
		КонецЦикла;
	КонецЦикла;	
	
	ПересчетКоличестваЗакупокПоУровням();  //!!!
	
КонецПроцедуры	

//2) --------Загрузка плана закупок-----------
Процедура КоманднаяПанельЗакупкиЗагрузить(Кнопка)
	
	Если ДокументПланаЗакупок.Пустая() тогда //вар.1
		
		дерево00 = Дерево0.Скопировать();
		i=0; //-------обрезание по доле---------------------------
		пока i<дерево00.Строки.Количество() цикл
			Если дерево00.Строки[i].Доля < МинДоля тогда
				дерево00.Строки.Удалить(дерево00.Строки[i]);
			иначе
				i=i+1;
			КонецЕсли;
		КонецЦикла;

		дерево11 = ПолучитьДеревоПланаОтПредДерева(дерево00);
		определитьABCпоДереву( дерево11, ложь ); 
			
	иначе //вар.2 - есть ДокументПланаЗакупок! + остатки на ДатаОст
		
		ДеревоЗакупок = ПолучитьДеревоПланаПоДокументу(Истина); // только по документу!
		определитьABCпоДереву( ДеревоЗакупок, Истина ); //сразу с распределением по АBC !
			
		Если не ФлФилиал тогда //вар.2.1 -------процент от всего!-----------------
			
			УменьшитьКоличествоПоДереву(ПроцентФ, ДеревоЗакупок); // просто % от плана?!
			
		Иначе//вар.2.2 - ФлФилиал - по филиалу------------------------------------
			
			дерево00 = Дерево0.Скопировать();
			Если дерево00.Строки.Количество()=0 тогда 
				Предупреждение("Не заполнен 1) Анализ продаж прошлого года!", 30);
				возврат;
			КонецЕсли;
			
			ИзменитьКоличествоПоДереву(дерево00,  ДеревоЗакупок);  //22.10.2018
			
		КонецЕсли; // конец вар.2.2
		
		ДеревоЗакупок.строки.Сортировать("Количество убыв");
		
		возврат;
	КонецЕсли; // конец вар.2
	
	Если дерево11.строки.Количество()=0 тогда
		сообщить("2) План закупок - НЕТ товаров с ненулевой ценой и Ценой B2B на "+формат(Дата1,"ДЛФ=D"));	
		Состояние(" ");
	    Возврат;
	КонецЕсли;
	
	
//--------------Общее плановое количество------------------------------------------	
	КоличествоПлан = дерево00.Строки.Итог("Количество")*(1+ПроцентРоста/100); 
    сообщить("Общее число в план = "+строка(КоличествоПлан));
	ДеревоЗакупок.Строки.Очистить();
	Для каждого стр11 из дерево11.строки цикл // типоразмеры
		
		стр0 = Дерево00.Строки.Найти( стр11.Типоразмер, "Типоразмер"); //из 0 дерева!
		
		стр1 = ДеревоЗакупок.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(стр1, стр0); //доли из 0 дерева!
		стр1.Цена0 = стр0.Цена;
		стр1.Количество = стр0.Количество * (1+ПроцентРоста/100);// УВЕЛИЧЕННОЕ количество
				
	ПолучитьДолиКоличестваОтЦеныПоКлассам(стр11.строки);
	 	 
		//-----------------получаем количество и сумму каждого товара---------------------
		Для каждого стр2 из стр11.строки цикл 
			стр3 = стр1.строки.Добавить();
			ЗаполнитьЗначенияСвойств( стр3, стр2 );
			стр00 = стр0.Строки.Найти( стр2.Номенклатура, "Номенклатура"); //из 0 дерева!
			Если стр00<>неопределено тогда 
				стр3.Цена0 = стр00.Цена;
			КонецЕсли;	
			
			Если стр2.КлассABC = перечисления.ABCКлассификация.AКласс тогда //1 округление!
				 стр3.Количество = Окр(стр1.Количество * стр1.КолA/100 * стр3.КолA/100,0);
			ИначеЕсли стр2.КлассABC = перечисления.ABCКлассификация.BКласс	тогда
				 стр3.Количество = Окр(стр1.Количество * стр1.КолB/100 * стр3.КолB/100,0);
			ИначеЕсли стр2.КлассABC = перечисления.ABCКлассификация.CКласс	тогда
				 стр3.Количество = Окр(стр1.Количество * стр1.КолC/100 * стр3.КолC/100,0);
			 КонецЕсли;	
			 
		    стр3.Стоимость = стр3.Количество * стр3.Цена;
		КонецЦикла;
		
		СтоимостьИтог  = стр1.строки.итог("Стоимость"); //пересчет новой Доли!
		КоличествоИтог = стр1.строки.итог("Количество");
		стр1.Цена = ?(КоличествоИтог=0,0,Окр(СтоимостьИтог/КоличествоИтог,2));
		стр1.Стоимость  = СтоимостьИтог;
		стр1.Количество = КоличествоИтог;
		
		Для каждого стр3 из стр1.строки цикл 
		стр3.Доля = ?(СтоимостьИтог=0, 0, Окр(100*стр3.Стоимость / СтоимостьИтог,2));
		  колДоля = ?(КоличествоИтог=0,0, 100*стр3.Количество/КоличествоИтог);
		стр3.КолA = ?(стр3.КолA>0,колДоля,0);
		стр3.КолB = ?(стр3.КолB>0,колДоля,0);
		стр3.КолC = ?(стр3.КолC>0,колДоля,0);
		КонецЦикла;
	
	КонецЦикла;	 //стр11 по типоразмерам
	
	
	ДеревоЗакупок.Строки.Сортировать("Типоразмер");
	СтоимостьИтог  = ДеревоЗакупок.строки.итог("Стоимость"); //пересчет новой Доли!
	Для каждого стр1 из ДеревоЗакупок.Строки цикл
		стр1.Доля = Окр(100*стр1.Стоимость/СтоимостьИтог);
		стр1.Строки.Сортировать("КлассABC");
	КонецЦикла;	
	
//------РАЗВОРАЧИВАЕМ!-----------	
	ЭлементыФормы.КоманднаяПанельЗакупок.Кнопки.Свернуть.Пометка = ЛОЖЬ;
	КоманднаяПанельЗакупокСвернуть(неопределено);

сообщить("2) Загрузки плана закупок: План заполняется на основании Анализа продаж прошлого года!");
КонецПроцедуры

процедура ПолучитьДолиКоличестваОтЦеныПоКлассам(стр11строки)
	
	//-------------ВСПОМОГАТЕЛЬНАЯ ТАБЛИЦА-----------	
	таблЦен = новый ТаблицаЗначений;
	таблЦен.Колонки.Добавить("N");
	таблЦен.Колонки.Добавить("Цена");
	таблЦен.Колонки.Добавить("ЦенаMin");
	таблЦен.Колонки.Добавить("ЦенаMax");
	таблЦен.Колонки.Добавить("D");
	 // 0,1,2,3
	стрТЦ0=таблЦен.Добавить();
	стрТЦ1=таблЦен.Добавить();стрТЦ1.ЦенаMin = 100000; стрТЦ1.Цена=0; стрТЦ1.ЦенаMax=0;стрТЦ1.D=0;стрТЦ1.N=0;
	стрТЦ2=таблЦен.Добавить();стрТЦ2.ЦенаMin = 100000; стрТЦ2.Цена=0; стрТЦ2.ЦенаMax=0;стрТЦ2.D=0;стрТЦ2.N=0;
	стрТЦ3=таблЦен.Добавить();стрТЦ3.ЦенаMin = 100000; стрТЦ3.Цена=0; стрТЦ3.ЦенаMax=0;стрТЦ3.D=0;стрТЦ3.N=0;
 	// min - max
	Для каждого стр2 из стр11строки цикл
		Если стр2.КлассABC = перечисления.ABCКлассификация.AКласс тогда
			 таблЦен[1].Цена = таблЦен[1].Цена + стр2.Цена;
			 таблЦен[1].N = таблЦен[1].N + 1;
			  Если стр2.Цена<таблЦен[1].ЦенаMin тогда
				таблЦен[1].ЦенаMin = стр2.Цена;
			  КонецЕсли;	
			  Если стр2.Цена>таблЦен[1].ЦенаMax тогда
				таблЦен[1].ЦенаMax = стр2.Цена;
			  КонецЕсли;	
		ИначеЕсли стр2.КлассABC = перечисления.ABCКлассификация.BКласс	тогда
			 таблЦен[2].Цена = таблЦен[2].Цена + стр2.Цена;
			 таблЦен[2].N = таблЦен[2].N + 1;
			  Если стр2.Цена<таблЦен[2].ЦенаMin тогда
				таблЦен[2].ЦенаMin = стр2.Цена;
			  КонецЕсли;	
			  Если стр2.Цена>таблЦен[2].ЦенаMax тогда
				таблЦен[2].ЦенаMax = стр2.Цена;
			  КонецЕсли;	
		ИначеЕсли стр2.КлассABC = перечисления.ABCКлассификация.CКласс	тогда
			 таблЦен[3].Цена = таблЦен[3].Цена + стр2.Цена;
			 таблЦен[3].N = таблЦен[3].N + 1;
			  Если стр2.Цена<таблЦен[3].ЦенаMin тогда
				таблЦен[3].ЦенаMin = стр2.Цена;
			  КонецЕсли;	
			  Если стр2.Цена>таблЦен[3].ЦенаMax тогда
				таблЦен[3].ЦенаMax = стр2.Цена;
			  КонецЕсли;	
		 КонецЕсли;		
	 КонецЦикла;
	 для ii=1 по 3 цикл //диапазон и средняя цена = медиана
		 таблЦен[ii].D    = (таблЦен[ii].ЦенаMax - таблЦен[ii].ЦенаMin);
		 таблЦен[ii].Цена = ?(таблЦен[ii].N=0, 0, таблЦен[ii].Цена / таблЦен[ii].N); //ср.Цена
		 таблЦен[ii].N    = 0;
	 КонецЦикла;
	 
	 // распределение цен от 1 до КоэффициентРазличия
	 Для каждого стр2 из стр11строки цикл 
		Если стр2.КлассABC = перечисления.ABCКлассификация.AКласс тогда
			t = ?(таблЦен[1].D=0, 1, (стр2.Цена - таблЦен[1].ЦенаMin) /таблЦен[1].D);
			стр2.КолA = 1+(КоэффициентРазличия-1)*(1 - t);
			таблЦен[1].N = таблЦен[1].N + стр2.КолA;
		ИначеЕсли стр2.КлассABC = перечисления.ABCКлассификация.BКласс	тогда
			t = ?(таблЦен[2].D=0, 1, (стр2.Цена - таблЦен[2].ЦенаMin) /таблЦен[2].D);
			стр2.КолB = 1+ (КоэффициентРазличия-1)*(1 - t);
			таблЦен[2].N = таблЦен[2].N + стр2.КолB;
		ИначеЕсли стр2.КлассABC = перечисления.ABCКлассификация.CКласс	тогда
			t = ?(таблЦен[3].D=0, 1, (стр2.Цена - таблЦен[3].ЦенаMin) /таблЦен[3].D);
			стр2.КолC = 1+ (КоэффициентРазличия-1)*(1 - t);
			таблЦен[3].N = таблЦен[3].N + стр2.КолC;
   	    КонецЕсли;		
	КонецЦикла;
	
	 Для каждого стр2 из стр11строки цикл // перенормировка до 100%
		Если стр2.КлассABC = перечисления.ABCКлассификация.AКласс тогда
			стр2.КолA = ?(таблЦен[1].N=0,0,100*стр2.КолA / таблЦен[1].N);
		ИначеЕсли стр2.КлассABC = перечисления.ABCКлассификация.BКласс	тогда
			стр2.КолB = ?(таблЦен[2].N=0,0,100*стр2.КолB / таблЦен[2].N);
		ИначеЕсли стр2.КлассABC = перечисления.ABCКлассификация.CКласс	тогда
			стр2.КолC = ?(таблЦен[3].N=0,0,100*стр2.КолC / таблЦен[3].N);
   	    КонецЕсли;		
	КонецЦикла;
	
 КонецПроцедуры
 
функция ПолучитьДеревоПланаПоДокументу(ИспользоватьОстатокНаДату=Истина)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦеныНоменклатурыСрезПоследних.Типоразмер КАК Типоразмер,
	               |	ЦеныНоменклатурыСрезПоследних.Производитель КАК Производитель,
	               |	ЦеныНоменклатурыСрезПоследних.Код КАК Код,
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
				   
				   //====================== Цена B2B =================================		   
			   	   |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихB2B.Цена, 0) КАК Цена,
				   
			       |	0 как Цена0,
				   |	ЦеныНоменклатурыСрезПоследних.Количество * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихB2B.Цена, 0) как Стоимость,
				   |	0 как Доля,
				   
				   |	0 как КолA,
				   |	0 как КолB,
				   |	0 как КолC,
				   
		        //   |	ЦеныНоменклатурыСрезПоследних.Цена КАК ЦенаБазовая,
				   
	               |	ЦеныНоменклатурыСрезПоследних.Количество КАК Количество,
				   
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура.ЕдиницаХраненияОстатков.Объем КАК Объем1,
	               |	ЗНАЧЕНИЕ(перечисление.ABCКлассификация.ПустаяСсылка) КАК КлассABC
				   
	               |ИЗ
	            //+++( 19.11.2018 --- ГРУППИРОВКА плана и остатков БЕЗ дублей ---
				   |(ВЫБРАТЬ 
				   |	ПланИОстатки.Типоразмер КАК Типоразмер,
	               |	ПланИОстатки.Производитель КАК Производитель,
	               |	ПланИОстатки.Код КАК Код,
	               |	ПланИОстатки.Номенклатура КАК Номенклатура,
 				   |	Сумма(ПланИОстатки.Количество) как Количество
                   |ИЗ  
				   |	(ВЫБРАТЬ 
				   |	Док.Номенклатура.Типоразмер КАК Типоразмер,
	               |	Док.Номенклатура.Производитель КАК Производитель,
	               |	Док.Номенклатура.Код КАК Код,
	               |	Док.Номенклатура КАК Номенклатура,

				   |		Док.Количество 
				  // |		Док.Цена  
				   |	 ИЗ 
				   |		Документ.ЗаказПоставщикуСезонный.Товары как Док
				   |	 ГДЕ
				   |		Док.Ссылка = &Док
				   |				И Док.Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
				   |//флШип			И Док.Номенклатура.Наименование подобно(""%шип%"")
				   |
				   |//ДополнительныеОстатки
				   |	) как ПланИОстатки
				   |СГРУППИРОВАТЬ ПО
				   |Типоразмер,Производитель, Код, Номенклатура  
				//+++) 19.11.2018 ------- ГРУППИРОВКА! -----------
			 
				   |) КАК ЦеныНоменклатурыСрезПоследних
				   
//============================ЦЕНЫ B2B на Дата1 ====================================================================				   
			   	   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата1, 
				   |					Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
				   |//ФлШип				И Номенклатура.Наименование ПОДОБНО ""%шип%""
				  //-----------ТОЛЬКО товары с ненулевой ценой по типу Базовая!--------------------- 
				   |					И ТипЦен = &ТипЦенB2B
	                |	) КАК ЦеныНоменклатурыСрезПоследнихB2B
	               |		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ЦеныНоменклатурыСрезПоследнихB2B.Номенклатура

	               |ГДЕ
	               |	ЦеныНоменклатурыСрезПоследнихB2B.Цена > 0
	                |
	               |УПОРЯДОЧИТЬ ПО
	               |	Цена УБЫВ
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура),
	               |	СРЕДНЕЕ(Цена),
				   
				   //-------------для плана закупок-----------
				   |	МАКСИМУМ(Цена0),
	               |	МАКСИМУМ(Стоимость),
	               |	МАКСИМУМ(Доля),
				   |	МАКСИМУМ(КолA),
	               |	МАКСИМУМ(КолB),
	               |	МАКСИМУМ(КолC),

	              // |	СРЕДНЕЕ(ЦенаБазовая),
	               |	СУММА(Количество),
	               |	МАКСИМУМ(Объем1),
	               |	МАКСИМУМ(КлассABC)
	               |ПО
	               |	Типоразмер";
				   
Если ИспользоватьОстатокНаДату и ДатаОст>'00010101' тогда //+++ 25.10.2018 п.16,13
	Запрос.УстановитьПараметр("ДатаОст", ДатаОст);
	Запрос.текст = стрЗаменить(Запрос.текст,"//ДополнительныеОстатки"," ОБЪЕДИНИТЬ ВСЕ
	|
	|"+"ВЫБРАТЬ 
   |	Ост.Номенклатура.Типоразмер КАК Типоразмер,
   |	Ост.Номенклатура.Производитель КАК Производитель,
   |	Ост.Номенклатура.Код КАК Код,
   |	Ост.Номенклатура КАК Номенклатура,
   |
   |	Ост.КоличествоОстаток как Количество 
   |
   |	 ИЗ 
   |		регистрНакопления.ТоварыНаСкладах.Остатки(&ДатаОст, 
   |				Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
   |//флШип			И Номенклатура.Наименование подобно(""%шип%"")
   |				) как Ост
   |ГДЕ Ост.КоличествоОстаток > 0
   |");
   Запрос.УстановитьПараметр("Подразделение", Филиал);
КонецЕсли;					   

	Запрос.УстановитьПараметр("Док", ДокументПланаЗакупок);
	Дата1 = ДокументПланаЗакупок.Дата;
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("ТипЦенB2B", ЦенаB2B );
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа );
	Если флШип тогда
		Запрос.текст = стрЗаменить(Запрос.текст,"//ФлШип","");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	дерево11  = результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для каждого стр11 из дерево11.строки цикл // типоразмеры
		
		стр0 = Дерево0.Строки.Найти( стр11.Типоразмер, "Типоразмер");   
		Если стр0<>неопределено тогда// нашли такой типоразмер в пред.дереве - есть количество!
		//---------------- по товарам типоразмера------------------------
			для каждого стр22 из стр11.строки цикл
				стр00 = стр0.Строки.Найти( стр22.Номенклатура, "Номенклатура" );   
				Если стр00<>неопределено тогда
			 		стр22.Цена0 = стр00.Цена;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
		стр11.Количество = стр11.строки.Итог("Количество");
		стр11.Стоимость  = стр11.строки.Итог("Стоимость");
		
	КонецЦикла;
		
	Возврат дерево11;
КонецФункции


функция ПолучитьДеревоПланаОтПредДерева(Дерево00, флЦена0=ЛОЖЬ)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура.Типоразмер КАК Типоразмер,
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура.Производитель КАК Производитель,
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура.Код КАК Код,
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
				   
				   //====================== Цена B2B =================================		   
			   	   |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихB2B.Цена, 0) КАК Цена,
				   
			       |	0 как Цена0,
				   |	0 как Стоимость,
				   |	0 как Доля,
				   
				   |	0 как КолA,
				   |	0 как КолB,
				   |	0 как КолC,
				   
		           |	ЦеныНоменклатурыСрезПоследних.Цена КАК ЦенаБазовая,
				   
	               |	0 КАК Количество,
	               |	0 КАК КоличествоПлан,
	               |	0 КАК КоличествоМатрица,
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура.ЕдиницаХраненияОстатков.Объем КАК Объем1,
	               |	ЗНАЧЕНИЕ(перечисление.ABCКлассификация.ПустаяСсылка) КАК КлассABC
				   
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних( &Дата1, ТипЦен = &Базовая
	               |				И Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
				   |//флШип			И Номенклатура.Наименование подобно(""%шип%"")
				   
				   |				И Номенклатура.Типоразмер В (&СписТипоразмер)
				   
				   |) КАК ЦеныНоменклатурыСрезПоследних
				   
//============================ЦЕНЫ B2B на Дата1 ====================================================================				   
			   	   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата1, 
				   |					Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
				   |//ФлШип				И Номенклатура.Наименование ПОДОБНО ""%шип%""
				  //-----------ТОЛЬКО товары с ненулевой ценой по типу Базовая!--------------------- 
				   |					И ТипЦен = &ТипЦенB2B
	                |	) КАК ЦеныНоменклатурыСрезПоследнихB2B
	               |		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ЦеныНоменклатурыСрезПоследнихB2B.Номенклатура

	               |ГДЕ
	               |	ЦеныНоменклатурыСрезПоследних.Цена > 0
	               |	и ЦеныНоменклатурыСрезПоследнихB2B.Цена > 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Цена УБЫВ
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура),
	               |	СРЕДНЕЕ(Цена),
				   
				   //-------------для плана закупок-----------
				   |	МАКСИМУМ(Цена0),
	               |	МАКСИМУМ(Стоимость),
	               |	МАКСИМУМ(Доля),
				     |	МАКСИМУМ(КолA),
	               |	МАКСИМУМ(КолB),
	               |	МАКСИМУМ(КолC),

	               |	СРЕДНЕЕ(ЦенаБазовая),
	               |	СУММА(Количество),
	               |	СУММА(КоличествоПлан),
	               |	СУММА(КоличествоМатрица),
	               |	МАКСИМУМ(Объем1),
	               |	МАКСИМУМ(КлассABC)
	               |ПО
	               |	Типоразмер";
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Базовая", Базовая );
	Запрос.УстановитьПараметр("ТипЦенB2B", ЦенаB2B );
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа );
	Если флШип тогда
		Запрос.текст = стрЗаменить(Запрос.текст,"//ФлШип","");
	КонецЕсли;
	
	списТипоразмер = Дерево00.Строки.ВыгрузитьКолонку("Типоразмер");
	Запрос.УстановитьПараметр("СписТипоразмер",СписТипоразмер);
	
	Если ФлТоварыИзПлана тогда
		Запрос.текст = стрЗаменить(Запрос.текст, "//флТов","");
		списТовПлана = Новый СписокЗначений;
		Для каждого стр1 из ДеревоЗакупок.Строки цикл
			Для каждого стр2 из стр1.Строки цикл
				списТовПлана.Добавить( стр2.Номенклатура );
			КонецЦикла;
		КонецЦикла;	
		Запрос.УстановитьПараметр("списТовПлана",списТовПлана);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	дерево11  = результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для каждого стр11 из дерево11.строки цикл // типоразмеры
		
		стр0 = Дерево00.Строки.Найти( стр11.Типоразмер, "Типоразмер");   
		Если стр0<>неопределено тогда//нашли такой типоразмер в пред.дереве - есть количество!
			
		//---------------- по товарам типоразмера------------------------
			для каждого стр22 из стр11.строки цикл
				стр00 = стр0.Строки.Найти( стр22.Номенклатура, "Номенклатура");   
				Если стр00<>неопределено тогда
					//план всегда округляем до 4 шт!
					стр22.Количество = ?(стр00.Количество>0 и стр00.Количество<7, 4, Окр(стр00.Количество/4 - 0.5)*4 ); // 1,2 >> 4 << 5,6
			
					если флЦена0 тогда
						стр22.Цена0 = стр00.Цена;
						стр22.Стоимость = стр22.Количество * стр22.Цена; // по новой цене!
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
			
			стр11.Количество = стр11.строки.Итог("Количество");
			стр11.Стоимость  = стр11.строки.Итог("Стоимость");
			
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат дерево11;
КонецФункции


Процедура ДеревоЗакупокКолAПриИзменении(Элемент)
	стрЗак = ЭлементыФормы.ДеревоЗакупок.ТекущиеДанные;
	стрЗак.КолC = 100 - стрЗак.КолA - стрЗак.КолB;
КонецПроцедуры

Процедура ДеревоЗакупокКолAРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ДеревоЗакупокКолAПриИзменении(Элемент)
КонецПроцедуры

Процедура ПересчетКоличестваЗакупокПоУровням()
	мПоле = новый массив;
	мПоле.Добавить("Количество");
	мПоле.Добавить("Стоимость");
	мПоле.Добавить("Доля");
	
	мПоле.Добавить("КолA");
	мПоле.Добавить("КолB");
	мПоле.Добавить("КолC");
	
	N = мПоле.Количество();
	
	Для каждого стр1 из ДеревоЗакупок.Строки цикл
		Для i=0 по N-1 цикл стр1[мПоле[i]] = 0; КонецЦикла;	//обнуление
		Для каждого стр2 из стр1.Строки цикл
			
			стр2.Стоимость = стр2.Количество * стр2.Цена;	
			Для i=2 по N-1 цикл стр1[мПоле[i]] = 0; КонецЦикла;	//обнуление доля и кол%
			
			Для i=0 по N-1 цикл стр1[мПоле[i]] = стр1[мПоле[i]] + стр2[мПоле[i]]; КонецЦикла;	
		КонецЦикла;
	КонецЦикла;	
	
//--------------пересчет %Количества и %Доли---------------	
ИтогСумма = ДеревоЗакупок.Строки.Итог("Стоимость");
	Для каждого стр1 из ДеревоЗакупок.Строки цикл
		стр1.Доля = окр(100* стр1.Стоимость/ИтогСумма,2);
		
	КолА = 0; КолB = 0; КолC = 0;
	Если стр1.Количество>0 тогда
		для каждого стр2 из стр1.строки цикл
			стр2.Доля = окр(100*стр2.Стоимость/ИтогСумма,2);
			Если стр2.КлассABC = перечисления.ABCКлассификация.AКласс тогда
			КолА = КолА + стр2.Количество;
			стр2.КолA = окр(100*стр2.Количество/стр1.Количество,1);
			ИначеЕсли стр2.КлассABC = перечисления.ABCКлассификация.BКласс тогда
			КолB = КолB + стр2.Количество;
			стр2.КолB = окр(100*стр2.Количество/стр1.Количество,1);
			Иначе //Если стр2.КлассABC = перечисления.ABCКлассификация.BКласс тогда
			КолC = КолC + стр2.Количество;;
			стр2.КолC = окр(100*стр2.Количество/стр1.Количество,1);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	стр1.КолA = ?(стр1.Количество=0,0,окр(100*КолА/стр1.Количество,1));
	стр1.КолB = ?(стр1.Количество=0,0,окр(100*КолB/стр1.Количество,1));
	стр1.КолC = ?(стр1.Количество=0,0,окр(100*КолC/стр1.Количество,1));

	КонецЦикла;
	
КонецПроцедуры

Процедура ДеревоЗакупокПослеУдаления(Элемент)
	ПересчетКоличестваЗакупокПоУровням()
КонецПроцедуры

Процедура ДеревоЗакупокКоличествоПриИзменении(Элемент)
	ПересчетКоличестваЗакупокПоУровням()
КонецПроцедуры

Процедура ДеревоЗакупокКоличествоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ДеревоЗакупокКоличествоПриИзменении(Элемент)
КонецПроцедуры

Процедура КоманднаяПанельЗакупокСвернуть(Кнопка)
	ЭлементыФормы.КоманднаяПанельЗакупок.Кнопки.Свернуть.Пометка = не ЭлементыФормы.КоманднаяПанельЗакупок.Кнопки.Свернуть.Пометка;
	фл = ЭлементыФормы.КоманднаяПанельЗакупок.Кнопки.Свернуть.Пометка;
	
	ЭлементыФормы.КоманднаяПанельЗакупок.Кнопки.Свернуть.Текст = ?(фл,"Свернуть","Развернуть");

	Для каждого стр1 из ДеревоЗакупок.строки цикл
		Если фл тогда
		ЭлементыФормы.ДеревоЗакупок.Развернуть(стр1, ложь);
		иначе	
		ЭлементыФормы.ДеревоЗакупок.Свернуть(стр1);
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

//------------Анализ ABC------------------------------
// Сортированного дерева по цене убыв
процедура определитьABCпоДереву( дерево11 , флДоля=Истина, флКласс=Истина)
	
	точнКл = 2; //точность класса ABC
	
	Если флДоля тогда
		СуммаВсехПродаж =  дерево11.строки.Итог("Стоимость");
		если СуммаВсехПродаж=0 тогда 
			СуммаВсехПродаж = 1;
		КонецЕсли;	
	КонецЕсли;	
	Для каждого стр11 из дерево11.Строки цикл
		
		Если флДоля тогда
			стр11.Доля = Окр(100*стр11.Стоимость / СуммаВсехПродаж,2);
		КонецЕсли;
	
		ценаМакс = стр11.строки[0].Цена;
		ЦенаМин  = стр11.строки[стр11.строки.Количество()-1].Цена;
		ЦенаДиапазон =(ценаМакс - ЦенаМин); 
		
		ЦенаA = ценаМакс - Окр(ЦенаДиапазон*ПроцA/100,2);
		ЦенаC = ценаМакс - ЦенаДиапазон + Окр(ЦенаДиапазон*ПроцC/100,2);
		
		стр11Количество = стр11.Количество;  
		стр11Количество = ?(стр11Количество=0, 1, стр11Количество);
		КолA=0;КолB=0;КолC=0;
		Для каждого стр2 из стр11.Строки цикл
			Если флДоля тогда
				стр2.Доля = Окр(100*стр2.Стоимость / СуммаВсехПродаж,2);
			КонецЕсли;
	
			Если стр2.Цена>ЦенаA тогда
				стр2.КлассABC = перечисления.ABCКлассификация.AКласс;
				Если флКласс тогда 
					КолA=КолA + стр2.Количество;
					стр2.КолA=окр(100*стр2.Количество/стр11Количество,точнКл);
				КонецЕсли;
			ИначеЕсли 	стр2.Цена<ЦенаC тогда
				стр2.КлассABC = перечисления.ABCКлассификация.CКласс;
				Если флКласс тогда 
					КолC=КолC + стр2.Количество;
					стр2.КолC=окр(100*стр2.Количество/стр11Количество,точнКл);
				КонецЕсли;	
			Иначе // 1 товар = B
				стр2.КлассABC = перечисления.ABCКлассификация.BКласс;
				Если флКласс тогда 
					КолB=КолB + стр2.Количество;
					стр2.КолB=окр(100*стр2.Количество/стр11Количество,точнКл);
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
		Если флКласс тогда 
		стр11.КолA=окр(100*КолA/стр11Количество,точнКл);
		стр11.КолB=окр(100*КолB/стр11Количество,точнКл);
		стр11.КолC=окр(100*КолC/стр11Количество,точнКл);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

//3) --- по результатам 1 и 2 --- формируем на текущий момент 
//на Дата1 - срез цен!
Процедура КоманднаяПанель1Сформировать(Кнопка)
	
	Если НоменклатурнаяГруппа.Пустая() тогда
		Предупреждение("Заполните Ном.группу!",30);
		Возврат;
	КонецЕсли;	
	
	Если ПроцентРоста<-100 тогда
		Предупреждение("Процент Роста не может быть меньше -100%",30);
		Возврат;
	КонецЕсли;
	
	Если Дата1='00010101' тогда
		Предупреждение("Не заполнена Дата Среза цен этого года!", 30);
		Возврат;
	КонецЕсли;	
	Если Дата1<'20150101' тогда
		Предупреждение("Дата Среза цен этого года должна быть больше 2015г.!", 30);
		Возврат;
	КонецЕсли;
	
//============из 4 закладки=============================================	
Если НЕ ЗаказПлан.Пустая() или НЕ ЗаказМатрица.Пустая() тогда
		
		сообщить("План продаж заполняется по Документам Плана продаж на сезон и Матрицы мин.остатков...", СтатусСообщения.Внимание);
		
		дерево11 = ПолучитьПланПродажПоСезоннымЗаказам(); // 2 уровня
		определитьABCпоДереву( дерево11, ложь, ложь ); //доли и % классов нет
		
		Дерево1.Строки.Очистить();
	Для каждого стр11 из дерево11.строки цикл // типоразмеры
		
		стр1 = Дерево1.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(стр1, стр11);
		
		стр11.КоличествоПлан = стр11.Количество;
		стр11.КоличествоМатрица = стр11.КоличествоПлан;
		
		ТаблИтогиABC = ПолучитьИтогиПоКлассам(стр11);
		Для каждого стрИтогиABC из ТаблИтогиABC цикл
			стр2 = стр1.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(стр2, стрИтогиABC);
		КонецЦикла;
		
		//===================Распределение ABC по Количеству==============================
		Для каждого стр2 из стр1.Строки цикл
			Для каждого стр22 из стр11.Строки цикл
				Если стр2.КлассABC = стр22.КлассABC тогда   //товары по классам
					стр3 = стр2.Строки.Добавить();
					ЗаполнитьЗначенияСвойств(стр3, стр22);
				КонецЕсли;	
			КонецЦикла;	
		КонецЦикла;
		
	КонецЦикла;	
	ВОЗВРАТ;	
КонецЕсли;

//===========по Плану Закупок!=============================================	
Если ЗаказПлан.Пустая() или ЗаказМатрица.Пустая() тогда
 
	Если ДеревоЗакупок.Строки.Количество()=0 тогда
		Если Дерево0.Строки.Количество()=0 тогда
			Предупреждение("Для построения Плана продаж - прадварительно требуется заполнить План закупок!", 60);
			Возврат;
		Иначе	
			сообщить("План закупок - не заполнен! Данные будут сформированы из анализа прошлого года...", СтатусСообщения.Внимание);
			КоманднаяПанельЗакупкиЗагрузить(неопределено);
		КонецЕсли;
	КонецЕсли;	
	
	КоличествоПлан = ДеревоЗакупок.Строки.Итог("Количество"); 
	ПроцентМатрицы = ?(КоличествоПлан=0, 0, 100*Емкость/КоличествоПлан);
	
	Если ПроцентМатрицы>100 тогда ПроцентМатрицы=100 КонецЕсли;
	ЭлементыФормы.Надпись5.Заголовок = "("+формат(ПроцентМатрицы,"ЧДЦ=1")+"%) Ёмкость склада:";	
	
	//дерево11 = ПолучитьДеревоПланаОтПредДерева(ДеревоЗакупок, Истина);  //НОВЫЕ товары по Плану!
	//определитьABCпоДереву( дерево11, ложь ); //пересчет доли не нужен!
	
	дерево11 = ДеревоЗакупок.Скопировать(); //+++ 03.10.2018 - УЖЕ должен быть сформирован план закупок ТОЛЬКО для филиала!
	для каждого стр1 из дерево11.Строки цикл
		стр1.Строки.Сортировать("Цена");
	КонецЦикла;
		
	Дерево1.Строки.Очистить();
	
//25.10.2018 - 2 вар.сразу: 
	// НЕ ФлФилиал - %от количества из документа ПланЗакупок;
	// [v]ФлФилиал - %ABC от прошлого года - накладываем на остаток количества из документа ПланЗакупок;
	ФлБезПересчета = ( НЕ ДокументПланаЗакупок.Пустая() ); 
		
	Для каждого стр11 из дерево11.строки цикл // типоразмеры
		
		//стрПлан = ДеревоЗакупок.Строки.Найти( стр11.Типоразмер, "Типоразмер");   
		//стр0    = Дерево0.Строки.Найти( стр11.Типоразмер, "Типоразмер");   
		стр0    = стр11;
		стрПлан = стр11; 
		
		Если стр11.Количество = 0 тогда //20.11.2018 - пустых НЕ надо!
			продолжить;
		КонецЕсли;	
		
		//----------ТОЛЬКО по Плановой закупке!---------------
		КоличествоПлан = стрПлан.Количество;
		
		стр1 = Дерево1.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(стр1, стр11);
		стр1.Количество        = КоличествоПлан;
		стр1.КоличествоПлан    = стр1.Количество;
		стр1.КоличествоМатрица = ОКР(стр1.КоличествоПлан * ПроцентМатрицы/100,1);
		стр1.ОбъемМатрица = 0;
				
	//========== Новое распределение по товарам с ценой на Дата1 ========================
		стр2 = стр1.Строки.Добавить();
		стр2.Типоразмер = стр1.Типоразмер;
		стр2.КлассABC = перечисления.ABCКлассификация.AКласс;
//		стр2.Количество = стр1.Количество 				* стр0.КолA/100; 
		стр2.КоличествоПлан = стр1.КоличествоПлан 		* стрПлан.КолA/100; 
		стр2.КоличествоМатрица = стр1.КоличествоМатрица * стрПлан.КолA/100; 
		стр2.ОбъемМатрица = 0;
	
		стр2 = стр1.Строки.Добавить();
		стр2.Типоразмер = стр1.Типоразмер;
		стр2.КлассABC = перечисления.ABCКлассификация.BКласс;
//		стр2.Количество = стр1.Количество 				* стр0.КолB/100; 
		стр2.КоличествоПлан = стр1.КоличествоПлан 		* стрПлан.КолB/100; 
		стр2.КоличествоМатрица = стр1.КоличествоМатрица * стрПлан.КолB/100; 
		стр2.ОбъемМатрица = 0;
		
		стр2 = стр1.Строки.Добавить();
		стр2.Типоразмер = стр1.Типоразмер;
		стр2.КлассABC = перечисления.ABCКлассификация.CКласс;
//		стр2.Количество = стр1.Количество 				* стр0.КолC/100; 
		стр2.КоличествоПлан = стр1.КоличествоПлан 		* стрПлан.КолC/100; 
		стр2.КоличествоМатрица = стр1.КоличествоМатрица * стрПлан.КолC/100; 
		стр2.ОбъемМатрица = 0;
		
		Если Фл4 тогда
			Для каждого стр2 из стр1.Строки цикл
				   стр2.КоличествоПлан = окр(стр2.КоличествоПлан/4 + ОкрВниз,0)*4;
				стр2.КоличествоМатрица = окр(стр2.КоличествоМатрица/4 + ОкрВниз,0)*4;
			КонецЦикла;	
			стр1.КоличествоПлан    = стр1.Строки.Итог("КоличествоПлан");
			стр1.КоличествоМатрица = стр1.Строки.Итог("КоличествоМатрица");
		КонецЕсли;	
		
		//+++( 25.10.2018 - Задача № 42972 - п.16 -------------------------------------
		Если ФлБезПересчета тогда 	
			
			КолМин = 8 / (ПроцентМатрицы/100);  //+++ 17.12.2018 - чтобы на матрицу хватало!
			
			Для каждого стр2 из стр1.Строки цикл
				
				ИтогКол = стр11.Строки.Итог("Количество");
				Если ИтогКол=0 тогда
					продолжить;
				ИначеЕсли ИтогКол < КолМин тогда //20.11.2018 - // Задача № 59262 п.2  - "подрезать"
					Сообщить(строка(стр11.Типоразмер)+": "+строка(ИтогКол)+" < "+строка(КолМин), СтатусСообщения.Внимание);
					продолжить;
				КонецЕсли;	
								
				Для каждого стр22 из стр11.Строки цикл
					
					Если стр2.КлассABC = стр22.КлассABC и стр22.Количество>0 тогда//товары по классам
										
						стр3 = стр2.Строки.Добавить();
						ЗаполнитьЗначенияСвойств(стр3, стр22);
						
						стр3.КоличествоПлан    = стр3.Количество;
						стр3.КоличествоМатрица = стр3.КоличествоПлан*ПроцентМатрицы/100;
						Если Фл4 тогда //-------округляем до 4х------------     
							стр3.КоличествоПлан    = Окр(стр3.КоличествоПлан/4 + ОкрВниз)*4;
							Если стр3.КоличествоПлан>=4 тогда //22.11.2018 х ПроцентМатрицы
								стр3.КоличествоМатрица = Окр(стр3.КоличествоПлан* (ПроцентМатрицы/100)  /4 +ОкрВниз)*4;
								Если стр3.КоличествоМатрица=0 тогда //16.10.2018 - нужна!
									стр3.КоличествоМатрица=4;
								КонецЕсли;	
							Иначе	
								стр3.КоличествоМатрица = 0;
							КонецЕсли;	
						КонецЕсли;
	                    стр3.ОбъемМатрица = стр3.КоличествоМатрица*стр3.Объем1;
						
					КонецЕсли;
				
				КонецЦикла;
			КонецЦикла;
			Продолжить;  // НЕ пересчитываем далее
		КонецЕсли;	
		//+++)
		
	//===================Распределение ABC по Количеству==============================
		Для каждого стр2 из стр1.Строки цикл
			
			Для каждого стр22 из стр11.Строки цикл
				стр22.Строки.Сортировать("Цена"); //03.10.2018 распределение от меньшей цены к большей!!!
						
				Если стр2.КлассABC = стр22.КлассABC тогда   //товары по классам
					стр3 = стр2.Строки.Добавить();
					ЗаполнитьЗначенияСвойств(стр3, стр22);

					стр02 = стр0.Строки.Найти(стр22.Код,"Код");  //количество Прошлый год
					Если стр02 <> неопределено тогда 
						стр3.Количество = стр02.Количество;
					КонецЕсли;	
					
				КонецЕсли;	
			КонецЦикла;	
			
			ЦенаСумм = 0;  //------------средняя цена по Классу---------------
			Для каждого стр3 из стр2.Строки цикл
				ЦенаСумм = ЦенаСумм + стр3.Цена;
			КонецЦикла;
			стр2.Цена = ?(стр2.Строки.Количество()=0,0,ЦенаСумм/стр2.Строки.Количество());
			стр2.Код  = строка(стр2.Строки.Количество());
			
			//-----доля количества обратно-пропорц. цене-----------
			колОбр = 0; 
			Если стр2.Строки.Количество()>0 тогда
				
				стр2.Строки.Сортировать("Цена"); //03.10.2018 распределение от меньшей цены к большей!!!
			 
				Диапазон = стр2.Строки[стр2.Строки.Количество()-1].Цена - стр2.Строки[0].Цена;
				если Диапазон<0 тогда //наоборот!
					Диапазон = - Диапазон;
					ЦенаМин  = стр2.Строки[стр2.Строки.Количество()-1].Цена;
				иначе
					ЦенаМин  = стр2.Строки[0].Цена;
				КонецЕсли;
								
				Для каждого стр3 из стр2.Строки цикл
					стр3.Строки.Сортировать("Цена"); //03.10.2018 распределение от меньшей цены к большей!!!
					
				  //стр3.КоличествоПлан = стр2.Цена /стр3.Цена; //обратная к средней!
					   t = ?(Диапазон=0, 0, (стр3.Цена-ЦенаМин)/Диапазон); // от 0 до КоэффициентРазличия-1
					  стр3.КоличествоПлан = 1 + (КоэффициентРазличия-1)*(1-t); // от 1 до КоэффициентРазличия в обратном порядке!
				  
					колОбр = колОбр + стр3.КоличествоПлан;
				КонецЦикла;
				
			//-------перенормировка на 100% и расчет количества по товарам ------------------
			      КолПланКласса = стр2.КоличествоПлан;
			   КолМатрицаКласса = стр2.КоличествоМатрица;
				 i=0; N = стр2.Строки.Количество(); 
				 
				 Для каждого стр3 из стр2.Строки цикл
					 i=i+1;
					 
					 КоличествоПлан   = стр2.КоличествоПлан *  (стр3.КоличествоПлан / колОбр);
					КоличествоМатрица = стр2.КоличествоМатрица*(стр3.КоличествоПлан / колОбр);
					
					стр3.Объем1 = стр3.Номенклатура.ЕдиницаХраненияОстатков.Объем;
		
					Если Фл4 тогда //20.11.2018 -------округляем до 4х------------
						КоличествоПлан = Окр(КоличествоПлан/4 + ОкрВниз)*4;
						Если КоличествоПлан>=8 тогда //20.11.2018 
							КоличествоМатрица = Окр(КоличествоМатрица/4 +ОкрВниз)*4;
							Если КоличествоМатрица=0 тогда //16.10.2018 - нужна!
								КоличествоМатрица=4;
							КонецЕсли;	
						Иначе
							КоличествоПлан = 0;
							КоличествоМатрица = 0;
						КонецЕсли;	
					КонецЕсли;
					
					//--------- по фифо План-------------------------------------
					Если КолПланКласса <=0 тогда
						стр3.КоличествоПлан = 0;
					иначе
						Если КолПланКласса < КоличествоПлан тогда
						стр3.КоличествоПлан = КолПланКласса;
						КолПланКласса = 0;
						иначе
						стр3.КоличествоПлан = КоличествоПлан;
						КолПланКласса = КолПланКласса - КоличествоПлан;
						КонецЕсли;	
					КонецЕсли;	
					
					//--------- по фифо Матрица-------------------------------------
					Если КолМатрицаКласса <=0 тогда
						Если стр3.КоличествоПлан>0 тогда //16.10.2018
							стр3.КоличествоМатрица = 4;
						иначе	
							стр3.КоличествоМатрица = 0;
						КонецЕсли;	
					иначе
						Если КолМатрицаКласса<=КоличествоМатрица тогда
						стр3.КоличествоМатрица = КолМатрицаКласса;
						КолМатрицаКласса = 0;
						иначе
						стр3.КоличествоМатрица = КоличествоМатрица;
						КолМатрицаКласса = КолМатрицаКласса - КоличествоМатрица;
						КонецЕсли;	
					КонецЕсли;	
					
					//03.10.2018 - убрано лишнее...
					если стр3.КоличествоПлан=0 тогда
						КолМатрицаКласса = КолМатрицаКласса + стр3.КоличествоМатрица;
						стр3.КоличествоМатрица = 0;
					КонецЕсли;	

					стр3.ОбъемМатрица = стр3.КоличествоМатрица * стр3.Объем1; 
				КонецЦикла;
				
				//-----------остатки в строку c минимальной ценой!-----------------
				нМин = 0;  //0 или N-1
				Если КолПланКласса>0 тогда
				стр2.Строки[нМин].КоличествоПлан = стр2.Строки[нМин].КоличествоПлан  + КолПланКласса;
				стр2.Строки[нМин].КоличествоПлан = ?(Фл4, ОКР(стр2.Строки[нМин].КоличествоПлан/4+ОкрВниз)*4, стр2.Строки[нМин].КоличествоПлан);
				КонецЕсли;
				Если КолМатрицаКласса>0 тогда
				стр2.Строки[нМин].КоличествоМатрица = стр2.Строки[0].КоличествоМатрица + КолМатрицаКласса;
				стр2.Строки[нМин].КоличествоМатрица = ?(Фл4, ОКР(стр2.Строки[нМин].КоличествоМатрица/4+ОкрВниз)*4, стр2.Строки[нМин].КоличествоМатрица);
				КонецЕсли;				
				стр2.Строки[нМин].ОбъемМатрица = стр2.Строки[0].КоличествоМатрица * стр2.Строки[нМин].Объем1;
			КонецЕсли;//количество строк >0
				
	    КонецЦикла;//по классам
	    стр1.ОбъемМатрица = стр1.ОбъемМатрица + стр2.ОбъемМатрица;
    				
	КонецЦикла;	 // по типоразмерам

КонецЕсли;

	для каждого стр1 из Дерево1.Строки цикл
		для каждого стр2 из стр1.Строки цикл 
			стр2.Строки.Сортировать("Цена УБЫВ");
		КонецЦикла;	
	КонецЦикла;

	ПересчетКоличесва1ПоУровням();
	
	ЭлементыФормы.КоманднаяПанель1.Кнопки.НовыйПланНаСезон.Доступность = Истина;
	ЭлементыФормы.КоманднаяПанель1.Кнопки.НоваяМатрица.Доступность = Истина;
	
//----------РАЗВОРАЧИВАЕМ---------------
	ЭлементыФормы.КоманднаяПанель1.Кнопки.Свернуть.Пометка = Ложь;
	КоманднаяПанель1Свернуть(неопределено);
	
	сообщить("3) План. Продаж и Матрица мин.остатков - выполнен");	
	Состояние(" ");
	
	
КонецПроцедуры

функция ПолучитьИтогиПоКлассам(стр11)
	табл = новый ТаблицаЗначений;
	табл.Колонки.Добавить("Типоразмер");
	табл.Колонки.Добавить("КлассABC");
	табл.Колонки.Добавить("Количество"); 
	табл.Колонки.Добавить("КоличествоПлан"); 
	табл.Колонки.Добавить("КоличествоМатрица"); 
	Для каждого стр111 из стр11.строки цикл
		стрТабл = табл.Добавить();
		ЗаполнитьЗначенияСвойств(стрТабл, стр111);
	КонецЦикла;
	табл.Свернуть("Типоразмер, КлассABC","Количество,КоличествоПлан,КоличествоМатрица");
	табл.Сортировать("КлассABC");
	Возврат табл;
КонецФункции
	

функция ПолучитьПланПродажПоСезоннымЗаказам()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВсеЗаказы.Типоразмер КАК Типоразмер,
	               |	ВсеЗаказы.Производитель,
	               |	ВсеЗаказы.Код,
	               |	ВсеЗаказы.Номенклатура КАК Номенклатура,
	               |	ВсеЗаказы.Цена КАК Цена,
	               |	СУММА(ВсеЗаказы.Количество) КАК Количество,
	               |	СУММА(ВсеЗаказы.КоличествоПлан) КАК КоличествоПлан,
	               |	СУММА(ВсеЗаказы.КоличествоМатрица) КАК КоличествоМатрица,
	               |	МАКСИМУМ(ВсеЗаказы.Объем1) КАК Объем1,
	               |	ВсеЗаказы.КлассABC КАК КлассABC
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗаказПлан.Номенклатура.Типоразмер КАК Типоразмер,
	               |		ЗаказПлан.Номенклатура.Производитель КАК Производитель,
	               |		ЗаказПлан.Номенклатура.Код КАК Код,
	               |		ЗаказПлан.Номенклатура КАК Номенклатура,
	               |		ЗаказПлан.Цена КАК Цена,
	               |		ЗаказПлан.Количество КАК Количество,
	               |		ЗаказПлан.Количество КАК КоличествоПлан,
	               |		0 КАК КоличествоМатрица,
	               |		ЗаказПлан.Номенклатура.ЕдиницаХраненияОстатков.Объем КАК Объем1,
	               |		ЗНАЧЕНИЕ(перечисление.ABCКлассификация.ПустаяСсылка) КАК КлассABC
	               |	ИЗ
	               |		Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПлан
	               |	ГДЕ
	               |		ЗаказПлан.Ссылка = &ЗаказПлан
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗаказПлан.Номенклатура.Типоразмер,
	               |		ЗаказПлан.Номенклатура.Производитель,
	               |		ЗаказПлан.Номенклатура.Код,
	               |		ЗаказПлан.Номенклатура,
	               |		ЗаказПлан.Цена,
	               |		0,
	               |		0,
	               |		ЗаказПлан.Количество,
	               |		ЗаказПлан.Номенклатура.ЕдиницаХраненияОстатков.Объем,
	               |		ЗНАЧЕНИЕ(перечисление.ABCКлассификация.ПустаяСсылка)
	               |	ИЗ
	               |		Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПлан
	               |	ГДЕ
	               |		ЗаказПлан.Ссылка = &ЗаказМатрица) КАК ВсеЗаказы
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВсеЗаказы.Типоразмер,
	               |	ВсеЗаказы.Производитель,
	               |	ВсеЗаказы.Код,
	               |	ВсеЗаказы.Номенклатура,
	               |	ВсеЗаказы.Цена,
	               |	ВсеЗаказы.КлассABC
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВсеЗаказы.Цена УБЫВ
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура),
	               |	СРЕДНЕЕ(Цена),
	               |	СУММА(Количество),
	               |	СУММА(КоличествоПлан),
	               |	СУММА(КоличествоМатрица),
	               |	МАКСИМУМ(Объем1),
	               |	МАКСИМУМ(КлассABC)
	               |ПО
	               |	Типоразмер";
				   
	Запрос.УстановитьПараметр("ЗаказПлан", ЗаказПлан);
	Запрос.УстановитьПараметр("ЗаказМатрица", ЗаказМатрица);
		
	Результат = Запрос.Выполнить();
	дерево11  = результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Возврат дерево11;
	
КонецФункции

Процедура КоманднаяПанель1НовыйПланНаСезон(Кнопка)
	Зак = документы.ЗаказПокупателяСезонный.СоздатьДокумент();
	Зак.Комментарий = "# Формирование Плана на сезон (456 отчет): "+Строка(НоменклатурнаяГруппа)+?(флШип," [v] ШИП","");
 	Зак.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Зак.Контрагент    		= Филиал.Контрагент;
	Зак.ДоговорКонтрагента  = Зак.Контрагент.ОсновнойДоговорКонтрагента;
	
	СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); //28.12.2018
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );

	Для каждого стр1 из Дерево1.Строки цикл
		Для каждого стр2 из стр1.Строки цикл
			Для каждого стр3 из стр2.Строки цикл
				Если стр3.КоличествоПлан>0 тогда
					стрЗак = Зак.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(стрЗак, стр3);
					стрЗак.Количество = стр3.КоличествоПлан;
					стрЗак.ЕдиницаИзмерения = стрЗак.Номенклатура.ЕдиницаХраненияОстатков;
					стрЗак.Коэффициент = 1;
					стрЗак.Сумма = стрЗак.Количество * стрЗак.Цена;
					стрЗак.СтавкаНДС = СтавкаНДС_2019;
					стрЗак.СуммаНДС = стрЗак.Сумма*чНДС/(100+чНДС);
				КонецЕсли;	
		    КонецЦикла;
	    КонецЦикла;
    КонецЦикла;
	
	Форма1 = Зак.ПолучитьФорму("ФормаДокумента");
	Форма1.ЭлементыФормы.Автокомплектация.Доступность = ЛОЖЬ; //Задача № 59262 - п.4
	Форма1.Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанель1НоваяМатрица(Кнопка)
	Зак = документы.ЗаказПокупателяСезонный.СоздатьДокумент();
	Зак.Комментарий = "# Формирование МАТРИЦЫ мин.остатков (456 отчет): "+Строка(НоменклатурнаяГруппа)+?(флШип," [v] ШИП","");
 	Зак.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Зак.Контрагент    		= Филиал.Контрагент;
	Зак.ДоговорКонтрагента  = Зак.Контрагент.ОсновнойДоговорКонтрагента;
	
	Зак.Дата = ТекущаяДата(); //28.12.2018
	СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); 
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );

	Для каждого стр1 из Дерево1.Строки цикл
		Для каждого стр2 из стр1.Строки цикл
			Для каждого стр3 из стр2.Строки цикл
				Если стр3.КоличествоМатрица>0 тогда
					стрЗак = Зак.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(стрЗак, стр3);
					стрЗак.Количество = стр3.КоличествоМатрица;
					стрЗак.ЕдиницаИзмерения = стрЗак.Номенклатура.ЕдиницаХраненияОстатков;
					стрЗак.Коэффициент = 1;
					стрЗак.Сумма = стрЗак.Количество * стрЗак.Цена;
					стрЗак.СтавкаНДС =  СтавкаНДС_2019;   //28.12.2018
					стрЗак.СуммаНДС = стрЗак.Сумма*чНДС/(100+чНДС);
				КонецЕсли;	
		    КонецЦикла;
	    КонецЦикла;
    КонецЦикла;
	Форма1 = Зак.ПолучитьФорму("ФормаДокумента");
	Форма1.ЭлементыФормы.Автокомплектация.Доступность = ЛОЖЬ; //Задача № 59262 - п.4
	Форма1.Открыть();
КонецПроцедуры


//4) =========================================
Процедура КоманднаяПанель2Сформировать(Кнопка)
	
	Если Дерево1.Строки.Количество()=0 тогда
		сообщить("План продаж не заполнен, будет произведено автоматическое заполнение...");
		КоманднаяПанель1Сформировать(неопределено); // формирует по Заказам или по Плану закупок
	КонецЕсли;	
		
	//================================================================================================
		сообщить("4) Документы и Текущий анализ - заполняется по Плану продаж...");
		
		ДеревоПеремещений.Строки.Очистить();
		поле1 = "КоличествоМатрица";
		
		СписНом = новый СписокЗначений;
		Для каждого стр1 из Дерево1.строки цикл
			Если стр1[поле1]=0 тогда
				продолжить;
			КонецЕсли;	
			стр11 = ДеревоПеремещений.Строки.Добавить();
			ЗаполнитьЗначенияСвойств( стр11, стр1);
			стр11.КоличествоПотребность = стр11.КоличествоМатрица;
			Для каждого стр2 из стр1.строки цикл // по классам
				Если стр2[поле1]=0 тогда
					продолжить;
				КонецЕсли;	
				стр22 = стр11.Строки.Добавить();
				ЗаполнитьЗначенияСвойств( стр22, стр2);
				стр22.КоличествоПотребность = стр22.КоличествоМатрица;
				Для каждого стр3 из стр2.строки цикл // по товарам
					
					//-----------Все аналоги!----------------------
					Если НЕ ФлАналоги тогда
						Если стр3[поле1]=0 тогда //не добавляем строки с 0 матрицей
							продолжить;
						КонецЕсли;	
					КонецЕсли;	
					
					стр33 = стр22.Строки.Добавить();
					ЗаполнитьЗначенияСвойств( стр33, стр3);
					стр33.КоличествоПотребность = стр33.КоличествоМатрица;
					СписНом.Добавить( стр33.Номенклатура ); // Для запросов
				КонецЦикла;// по товарам	
			КонецЦикла;	// по классам
		КонецЦикла;	//по типоразмерам
		
		таблОст = ПолучитьТаблицуОстатковИПродажФилиала(СписНом);
		мПоле = новый массив;
		мПоле.Добавить("КоличествоФил");
		мПоле.Добавить("КоличествоЯр");
		
		мПоле.Добавить("Количество");
		мПоле.Добавить("КоличествоПлан");
		мПоле.Добавить("КоличествоМатрица");
		
		мПоле.Добавить("КоличествоПотребность");
		мПоле.Добавить("КоличествоЗак");
		
		N = мПоле.Количество();
	 	Для каждого стр1 из ДеревоПеремещений.строки цикл
			Для i=0 по N-1 цикл  
				стр1[мПоле[i]]=0;
			КонецЦикла;
			
			Для каждого стр2 из стр1.строки цикл // по классам
				Для i=0 по N-1 цикл  
					стр2[мПоле[i]]=0; 
				КонецЦикла;
				
				Для каждого стр3 из стр2.строки цикл // по товарам
					
					стрОст = таблОст.найти(стр3.Номенклатура, "Номенклатура");
					Если стрОст<>неопределено тогда
					стр3.КоличествоФил = стрОст.КоличествоФил;
					стр3.КоличествоЯр = стрОст.КоличествоЯр;
					
					стр3.КоличествоПотребность =?(стр3.КоличествоМатрица>стр3.КоличествоФил, стр3.КоличествоМатрица - стр3.КоличествоФил,0);
					стр3.КоличествоЗак = мин(стр3.КоличествоПотребность, стр3.КоличествоЯр);
					КонецЕсли;
					
					Для i=0 по N-1 цикл  
						стр2[мПоле[i]]=стр2[мПоле[i]] + стр3[мПоле[i]]; 
					КонецЦикла;
				КонецЦикла;	// по товарам
			
				Для i=0 по N-1 цикл  
					стр1[мПоле[i]]=стр1[мПоле[i]] + стр2[мПоле[i]]; 
				КонецЦикла;
			КонецЦикла;	// по классам
			
		КонецЦикла;//по типоразмерам	
		
//---------по нажатию/выключению-------------------		
	ЭлементыФормы.КоманднаяПанель2.Кнопки.Свернуть.Пометка = не ЭлементыФормы.КоманднаяПанель1.Кнопки.Свернуть.Пометка;
  	КоманднаяПанель2Свернуть(неопределено);
		
	ЭлементыФормы.КоманднаяПанель2.Кнопки.НовыйЗаказ.Доступность = Истина;
		
КонецПроцедуры

функция ПолучитьТаблицуОстатковИПродажФилиала(СписНом)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВсеТовары.Номенклатура,
	               |	СУММА(ВсеТовары.КоличествоФил) КАК КоличествоФил,
	               |	СУММА(ВсеТовары.КоличествоЯр) КАК КоличествоЯр
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоФил,
	               |		0 КАК КоличествоЯр
	               |	ИЗ
	               |		РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				,
	               |				Склад.Подразделение = &Подразделение
	               |					И Номенклатура В (&СписНом)) КАК ТоварыНаСкладахОстатки
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ТоварыНаСкладахЯр.Номенклатура,
	               |		0,
	               |		ТоварыНаСкладахЯр.КоличествоОстаток
	               |	ИЗ
	               |		РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				,
	               |				Склад.Транзитный = ЛОЖЬ
	               |					И Номенклатура В (&СписНом)) КАК ТоварыНаСкладахЯр) КАК ВсеТовары
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВсеТовары.Номенклатура";
	Запрос.УстановитьПараметр("Подразделение", Филиал );
	Запрос.УстановитьПараметр("СписНом", СписНом );
	
	Результат = Запрос.Выполнить();
	табл = результат.Выгрузить();
	
	Возврат табл;
КонецФункции

Процедура КоманднаяПанель2НовыйЗаказ(Кнопка)
	Зак = документы.ЗаказПокупателя.СоздатьДокумент();
	Зак.ВводитьТолькоПеремещение = Истина;
    Зак.Контрагент = филиал.Контрагент;
	Зак.ДоговорКонтрагента = Зак.Контрагент.ОсновнойДоговорКонтрагента;
	Зак.Комментарий = "# Пополнение МАТРИЦЫ (456 отчет): "+Строка(НоменклатурнаяГруппа)+?(флШип," [v] ШИП","");

	Зак.Дата = ТекущаяДата();
	СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); //28.12.2018
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );		
	
	Для каждого стр1 из ДеревоПеремещений.Строки цикл
		Для каждого стр2 из стр1.Строки цикл
			Для каждого стр3 из стр2.Строки цикл
				Если стр3.КоличествоЗак>0 тогда
					стрЗак = Зак.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(стрЗак, стр3);
					стрЗак.Количество = стр3.КоличествоЗак;
					стрЗак.ЕдиницаИзмерения = стрЗак.Номенклатура.ЕдиницаХраненияОстатков;
					стрЗак.Коэффициент = 1;
					стрЗак.Сумма = стрЗак.Количество * стрЗак.Цена;
					стрЗак.СтавкаНДС = СтавкаНДС_2019;   //28.12.2018
					стрЗак.СуммаНДС = стрЗак.Сумма*чНДС/(100+чНДС);
				КонецЕсли;	
		    КонецЦикла;
	    КонецЦикла;
    КонецЦикла;
	
	Зак.ПолучитьФорму("ФормаДокумента").Открыть();
КонецПроцедуры

//==============Всё сразу================================
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Продажи0;
	КоманднаяПанель0Сформировать(неопределено);
	
	ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Закупки;
	КоманднаяПанельЗакупкиЗагрузить(неопределено);
	
	ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Продажи1;
	КоманднаяПанель1Сформировать(неопределено);
	
//---------------------4 закладка по другому работает!-----------------------------	
	//ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Документы;
	//КоманднаяПанель2Сформировать(неопределено);
	
КонецПроцедуры

//=======Интерфейсные раскраски и пересчеты ======================
Процедура Дерево0ПриПолученииДанных(Элемент, ОформленияСтрок)
	
	таблНадо = новый ТаблицаЗначений;
	таблНадо.Колонки.Добавить("Типоразмер");
	таблНадо.Колонки.Добавить("КолНадо");
	
	Для каждого стр1 из ОформленияСтрок цикл
		
		Если стр1.ДанныеСтроки.Уровень()=0 тогда
			стр1.ЦветФона	= webЦвета.СветлоЖелтый;
		КонецЕсли;	
	
		Если Элемент.Имя = "Дерево1" или  Элемент.Имя = "ДеревоПеремещений" тогда
			Если стр1.ДанныеСтроки.Уровень()=1 тогда  //2 уровня раскраски
			стр1.ЦветФона	= webЦвета.СветлоЖелтый;
			КонецЕсли;	
		КонецЕсли;
		
		Если стр1.ДанныеСтроки.КлассABC=перечисления.ABCКлассификация.AКласс тогда
			стр1.ЦветТекста	= webЦвета.ТемноКрасный;
		ИначеЕсли стр1.ДанныеСтроки.КлассABC=перечисления.ABCКлассификация.BКласс тогда
			стр1.ЦветТекста	= webЦвета.ТемноСиний;
		//ИначеЕсли стр1.ДанныеСтроки.КлассABC=перечисления.ABCКлассификация.CКласс тогда
		//	стр1.ЦветТекста	= webЦвета.ТемноЗеленый;
		КонецЕсли;	
		
		//Если Элемент.Имя = "ДеревоЗакупок" тогда
		//	Если стр1.ДанныеСтроки.Цена<стр1.ДанныеСтроки.Цена0 тогда
		//		стр1.ЦветФона = webЦвета.СветлоРозовый;
		//	КонецЕсли;
		//КонецЕсли;	
		
	//---------------подсказка для выбора аналогов----------------------------------------	
		Если Элемент.Имя = "ДеревоПеремещений" тогда
			Если стр1.ДанныеСтроки.Уровень()=2 тогда //ВСЕ строки с остатками Ярославля!
				
				Если стр1.ДанныеСтроки.КоличествоФил>стр1.ДанныеСтроки.КоличествоПлан тогда// уже есть БОЛЬШЕ чем надо!
				стр1.ЦветФона = webЦвета.СветлоРозовый;
				//ИначеЕсли  услРекомендуем(стр1.ДанныеСтроки) тогда // Задача № 59262 - убрано п.6 
				//стр1.ЦветФона = webЦвета.БледноЗеленый;    //---------> рекомендуемое... 
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
	
//итоги двоятся по стандартной функции!!! считаем вручную тут..	
	Если Элемент.Имя="Дерево0" тогда
		ЭлементыФормы[Элемент.Имя].Колонки.Количество.ТекстПодвала = Дерево0.Строки.Итог("Количество");
		ЭлементыФормы[Элемент.Имя].Колонки.Стоимость.ТекстПодвала  = Дерево0.Строки.Итог("Стоимость");
		ЭлементыФормы[Элемент.Имя].Колонки.КолA.ТекстПодвала = Окр(Дерево0.Строки.Итог("КолA")/Дерево0.Строки.Количество(),1); //среднее?!
		ЭлементыФормы[Элемент.Имя].Колонки.КолB.ТекстПодвала = окр(Дерево0.Строки.Итог("КолB")/Дерево0.Строки.Количество(),1);
		ЭлементыФормы[Элемент.Имя].Колонки.КолC.ТекстПодвала = окр(Дерево0.Строки.Итог("КолC")/Дерево0.Строки.Количество(),1);
	
	ИначеЕсли Элемент.Имя="ДеревоЗакупок" тогда	
		ЭлементыФормы[Элемент.Имя].Колонки.Количество.ТекстПодвала = ДеревоЗакупок.Строки.Итог("Количество");
		ЭлементыФормы[Элемент.Имя].Колонки.Стоимость.ТекстПодвала  = ДеревоЗакупок.Строки.Итог("Стоимость");
		ЭлементыФормы[Элемент.Имя].Колонки.КолA.ТекстПодвала = Окр(ДеревоЗакупок.Строки.Итог("КолA")/ДеревоЗакупок.Строки.Количество(),1); //среднее?!
		ЭлементыФормы[Элемент.Имя].Колонки.КолB.ТекстПодвала = окр(ДеревоЗакупок.Строки.Итог("КолB")/ДеревоЗакупок.Строки.Количество(),1);
		ЭлементыФормы[Элемент.Имя].Колонки.КолC.ТекстПодвала = окр(ДеревоЗакупок.Строки.Итог("КолC")/ДеревоЗакупок.Строки.Количество(),1);
		
	ИначеЕсли Элемент.Имя="Дерево1" тогда
		ЭлементыФормы[Элемент.Имя].Колонки.Количество.ТекстПодвала = Дерево1.Строки.Итог("Количество");
		ЭлементыФормы[Элемент.Имя].Колонки.КоличествоПлан.ТекстПодвала = Дерево1.Строки.Итог("КоличествоПлан");
		ЭлементыФормы[Элемент.Имя].Колонки.КоличествоМатрица.ТекстПодвала = Дерево1.Строки.Итог("КоличествоМатрица");
		ЭлементыФормы[Элемент.Имя].Колонки.ОбъемМатрица.ТекстПодвала = Дерево1.Строки.Итог("ОбъемМатрица");
		
	ИначеЕсли Элемент.Имя="ДеревоПеремещений" тогда
		ЭлементыФормы[Элемент.Имя].Колонки.Количество.ТекстПодвала = ДеревоПеремещений.Строки.Итог("Количество");
		ЭлементыФормы[Элемент.Имя].Колонки.КоличествоПлан.ТекстПодвала = ДеревоПеремещений.Строки.Итог("КоличествоПлан");
		ЭлементыФормы[Элемент.Имя].Колонки.КоличествоМатрица.ТекстПодвала = ДеревоПеремещений.Строки.Итог("КоличествоМатрица");
		ЭлементыФормы[Элемент.Имя].Колонки.КоличествоПотребность.ТекстПодвала = ДеревоПеремещений.Строки.Итог("КоличествоПотребность");
		ЭлементыФормы[Элемент.Имя].Колонки.КоличествоЗак.ТекстПодвала = ДеревоПеремещений.Строки.Итог("КоличествоЗак");
		ЭлементыФормы[Элемент.Имя].Колонки.КоличествоФил.ТекстПодвала = ДеревоПеремещений.Строки.Итог("КоличествоФил");
		ЭлементыФормы[Элемент.Имя].Колонки.КоличествоЯр.ТекстПодвала = ДеревоПеремещений.Строки.Итог("КоличествоЯр");
	КонецЕсли;
	
КонецПроцедуры

функция услРекомендуем(стр1ДанныеСтроки)
рез = (стр1ДанныеСтроки.КоличествоЗак=0  // не заказывали такой товар
	и стр1ДанныеСтроки.КоличествоФил<стр1ДанныеСтроки.КоличествоПлан // не всё ещё привезли?!
	и стр1ДанныеСтроки.КоличествоЯр>=4);
возврат рез;
КонецФункции
					
Процедура ПроцAПриИзменении(Элемент)
	ПроцC = 100 - ПроцA - ПроцB;
КонецПроцедуры

Процедура ПроцAРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ПроцAПриИзменении(Элемент);	
КонецПроцедуры

Процедура ФлФилиалПриИзменении(Элемент)
	
	ЭлементыФормы.Филиал.Видимость = ФлФилиал;
	
	ЭлементыФормы.НадписьПроцентФ.Видимость = НЕ ФлФилиал;
	ЭлементыФормы.ПроцентФ.Видимость = НЕ ФлФилиал;
	
	ЭлементыФормы.НадписьПроцентФ1.Видимость = НЕ ФлФилиал;
	ЭлементыФормы.ПроцентФ1.Видимость = НЕ ФлФилиал;
	
	ПроцентРоста = ?(ФлФилиал,10,0); //16.10.2018 - п.13
	ЭлементыФормы.ПроцентРоста.Видимость = ФлФилиал;
	ЭлементыФормы.Надпись4.Видимость     = ФлФилиал;
		
	Если Дерево0.Строки.Количество()>0 тогда
		Если Вопрос("Требуется Перезаполнить все таблицы!
			|Выполнить автоматическое перезаполнение?", РежимДиалогаВопрос.ДаНет, 10)=КодВозвратаДиалога.Да тогда
		КнопкаВыполнитьНажатие(Неопределено);
		КонецЕсли;	
	КонецЕсли;	

КонецПроцедуры

Процедура Фл4ПриИзменении(Элемент)
	
	ЕмкостьV = Емкость * 0.080; //15"  
	
	Если Дерево1.Строки.Количество()>0 тогда
		Если Вопрос("Обновить данные таблицы?", РежимДиалогаВопрос.ДаНет, 10)=КодВозвратаДиалога.Да тогда
		КоманднаяПанель1Сформировать(Неопределено);
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура МинДоляРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = Элемент.Значение + 0.1 * Направление;
КонецПроцедуры

 Процедура КоманднаяПанель0Свернуть(Кнопка)
	ЭлементыФормы.КоманднаяПанель0.Кнопки.Свернуть.Пометка = не ЭлементыФормы.КоманднаяПанель0.Кнопки.Свернуть.Пометка;
	фл = ЭлементыФормы.КоманднаяПанель0.Кнопки.Свернуть.Пометка;
ЭлементыФормы.КоманднаяПанель0.Кнопки.Свернуть.Текст = ?(фл,"Свернуть","Развернуть");

	Для каждого стр1 из Дерево0.строки цикл
		Если фл тогда
		ЭлементыФормы.Дерево0.Развернуть(стр1, ложь);
		иначе	
		ЭлементыФормы.Дерево0.Свернуть(стр1);
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1Свернуть(Кнопка)
	ЭлементыФормы.КоманднаяПанель1.Кнопки.Свернуть.Пометка = не ЭлементыФормы.КоманднаяПанель1.Кнопки.Свернуть.Пометка;
	фл = ЭлементыФормы.КоманднаяПанель1.Кнопки.Свернуть.Пометка;
ЭлементыФормы.КоманднаяПанель1.Кнопки.Свернуть.Текст = ?(фл,"Свернуть","Развернуть");

	Для каждого стр1 из Дерево1.строки цикл
		Если фл тогда
		ЭлементыФормы.Дерево1.Развернуть(стр1, ложь);
		иначе	
		ЭлементыФормы.Дерево1.Свернуть(стр1);
		КонецЕсли;	
		
		Для каждого стр2 из стр1.строки цикл
			Если фл тогда
			ЭлементыФормы.Дерево1.Развернуть(стр2, истина);
			иначе	
			ЭлементыФормы.Дерево1.Свернуть(стр2);
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель2Свернуть(Кнопка)
	ЭлементыФормы.КоманднаяПанель2.Кнопки.Свернуть.Пометка = не ЭлементыФормы.КоманднаяПанель2.Кнопки.Свернуть.Пометка;
	фл = ЭлементыФормы.КоманднаяПанель2.Кнопки.Свернуть.Пометка;
ЭлементыФормы.КоманднаяПанель2.Кнопки.Свернуть.Текст = ?(фл,"Свернуть","Развернуть");

	Для каждого стр1 из ДеревоПеремещений.строки цикл
		Если фл тогда
		ЭлементыФормы.ДеревоПеремещений.Развернуть(стр1, ложь);
		иначе	
		ЭлементыФормы.ДеревоПеремещений.Свернуть(стр1);
		КонецЕсли;	
		
		Для каждого стр2 из стр1.строки цикл
			Если фл тогда
			ЭлементыФормы.ДеревоПеремещений.Развернуть(стр2, истина);
			иначе	
			ЭлементыФормы.ДеревоПеремещений.Свернуть(стр2);
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура КоэффициентРазличияПриИзменении(Элемент)
	Если КоэффициентРазличия<=0 тогда // аномальная!
		КоэффициентРазличия = 0.1;
	КонецЕсли;	
КонецПроцедуры

Процедура КоэффициентРазличияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = Элемент.Значение + Направление*0.1;	
	Если Элемент.Значение<=0 тогда
		Элемент.Значение = 0.1;
	КонецЕсли;	
	КоэффициентРазличияПриИзменении(Элемент)
КонецПроцедуры

//================================================================
процедура ПересчетКоличесва1ПоУровням()
	мПоле = новый массив;
	мПоле.Добавить("Количество");
	мПоле.Добавить("КоличествоПлан");
	мПоле.Добавить("КоличествоМатрица");
	мПоле.Добавить("ОбъемМатрица");
	N = мПоле.Количество();
	
	Для каждого стр1 из Дерево1.Строки цикл
		Для i=0 по N-1 цикл стр1[мПоле[i]] = 0; КонецЦикла;	
		
		Для каждого стр2 из стр1.Строки цикл
			Для i=0 по N-1 цикл стр2[мПоле[i]] = 0; КонецЦикла;	
			
			Для каждого стр3 из стр2.Строки цикл
				Для i=0 по N-1 цикл стр2[мПоле[i]] = стр2[мПоле[i]] + стр3[мПоле[i]]; КонецЦикла;	
			КонецЦикла;
			
		Для i=0 по N-1 цикл стр1[мПоле[i]] = стр1[мПоле[i]] + стр2[мПоле[i]]; КонецЦикла;	
		КонецЦикла;
	
	КонецЦикла;	
	
КонецПроцедуры	

Процедура Дерево1КоличествоПланПриИзменении(Элемент)
	стр = ЭлементыФормы.Дерево1.ТекущиеДанные;
	Если стр.Уровень()>0 тогда
		ПересчетКоличесва1ПоУровням();
	КонецЕсли;	
КонецПроцедуры

 Процедура Дерево1КоличествоПланРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Дерево1КоличествоПланПриИзменении(Элемент)
КонецПроцедуры

Процедура Дерево1КоличествоМатрицаПриИзменении(Элемент)
	стр = ЭлементыФормы.Дерево1.ТекущиеДанные;
	Если стр.Уровень()>0 тогда
		стр.ОбъемМатрица = стр.Объем1 * стр.КоличествоМатрица;
		ПересчетКоличесва1ПоУровням();
	КонецЕсли;	
КонецПроцедуры

Процедура Дерево1КоличествоМатрицаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Дерево1КоличествоМатрицаПриИзменении(Элемент)
КонецПроцедуры

Процедура Дерево1ПослеУдаления(Элемент)
	ПересчетКоличесва1ПоУровням();
КонецПроцедуры

//================================================================

процедура ПересчетКоличесваПеремещеийПоУровням()
	мПоле = новый массив;
	мПоле.Добавить("Количество");
	мПоле.Добавить("КоличествоПлан");
	мПоле.Добавить("КоличествоМатрица");
	мПоле.Добавить("КоличествоФил");
	мПоле.Добавить("КоличествоЯр");
	мПоле.Добавить("КоличествоПотребность");
	мПоле.Добавить("КоличествоЗак");
	N = мПоле.Количество();
	
	Для каждого стр1 из ДеревоПеремещений.Строки цикл
		Для i=0 по N-1 цикл стр1[мПоле[i]] = 0; КонецЦикла;	
		
		Для каждого стр2 из стр1.Строки цикл
			Для i=0 по N-1 цикл стр2[мПоле[i]] = 0; КонецЦикла;	
			
			Для каждого стр3 из стр2.Строки цикл
				Для i=0 по N-1 цикл стр2[мПоле[i]] = стр2[мПоле[i]] + стр3[мПоле[i]]; КонецЦикла;	
			КонецЦикла;
			
		Для i=0 по N-1 цикл стр1[мПоле[i]] = стр1[мПоле[i]] + стр2[мПоле[i]]; КонецЦикла;	
		КонецЦикла;
	
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ДеревоПеремещенийКоличествоПотребностьПриИзменении(Элемент)
	стр1 = ЭлементыФормы.ДеревоПеремещений.ТекущиеДанные;
	стр1.КоличествоЗак = мин(стр1.КоличествоПотребность, стр1.КоличествоЯр);
	ПересчетКоличесваПеремещеийПоУровням();
КонецПроцедуры

Процедура ДеревоПеремещенийКоличествоПотребностьРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ДеревоПеремещенийКоличествоПотребностьПриИзменении(Элемент)
КонецПроцедуры

Процедура ДеревоПеремещенийКоличествоЗакПриИзменении(Элемент)
	ПересчетКоличесваПеремещеийПоУровням();
КонецПроцедуры

Процедура ДеревоПеремещенийКоличествоЗакРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ДеревоПеремещенийКоличествоЗакПриИзменении(Элемент)
КонецПроцедуры

Процедура ДокументПланаЗакупокОчистка(Элемент, СтандартнаяОбработка)
	ДатаОст = '00010101';
	ДокументПланаЗакупокПриИзменении(Элемент)
КонецПроцедуры

Процедура ДокументПланаЗакупокПриИзменении(Элемент)
	
	фл = ДокументПланаЗакупок.Пустая();
	
	ЭлементыФормы.Надпись13.Видимость = фл;
	ЭлементыФормы.МинДоля.Видимость = фл;
	
	ЭлементыФормы.НадписьПроцентФ1.Видимость = не фл;
	ЭлементыФормы.ПроцентФ1.Видимость = не фл;
	
	ЭлементыФормы.Надпись16.Видимость = не фл;
	ЭлементыФормы.ДатаОст.Видимость   = не фл;
	
КонецПроцедуры

Базовая = справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008");  //
ОкрВниз = -0.5;//19-20.11.2018
