

Процедура ПолеВвода1ПриИзменении(Элемент)
	
	СписокКонтр.Очистить();
    Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДоговорыКонтрагентов.Владелец КАК Контр
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ОтветственноеЛицо = &ОтветственноеЛицо
	|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Владелец
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ОтветственноеЛицо", Менеджер);
	
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();	
	
	СписокКонтр.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Контр") );
	Предупреждение("Список содержит "+строка( списокКонтр.Количество() ) +" контрагентов",10);
	
КонецПроцедуры


Процедура КнопкаВыполнитьНажатие(Кнопка)

//	КолСдвига = ТабличноеПоле1.Количество();
	 спис = "";
	Для номКонтр = 0 по СписокКонтр.Количество()-1 цикл
		Контр = СписокКонтр[номКонтр].Значение;
		ОбработкаПрерыванияПользователя();
		попытка
			Если Флажок1 тогда
				регСв = РегистрыСведений.ПравилаЦенообразования.СоздатьНаборЗаписей();
				регСв.Отбор.Контрагент.ВидСравнения = ВидСравнения.Равно;
				регСв.Отбор.Контрагент.Значение = Контр;
				регСв.Отбор.Контрагент.Использование = истина;
				регСв.Записать();
			КонецЕсли;
			
			Для i=0 по ТабличноеПоле1.Количество()-1 цикл 
				стр1 = ТабличноеПоле1[i];
				регСв = РегистрыСведений.ПравилаЦенообразования.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(регСв, стр1);
				регСв.Контрагент = Контр;
				регСв.Приоритет  = КолСдвига + i;
				регСв.ID = ПолучитьНовыйID(стр1);
				регСв.Записать();
			КонецЦикла;
	    СписокКонтр[номКонтр].Пометка = истина;
		спис = спис + строка( Контр )+", ";
		состояние(строка(номКонтр)+" "+строка( Контр )+"...");
		исключение
		Сообщить("НЕ записаны правила для клиента "+строка(Контр)+" : "+ОписаниеОшибки(), СтатусСообщения.Внимание );
		КонецПопытки;
	КонецЦикла;
	
	Сообщить(строка(ТекущаяДата())+" Записаны правила "+строка(Менеджер)+" для списка клиентов ("+строка(СписокКонтр.Количество())+"): "+спис, СтатусСообщения.Информация );
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОчистить(Кнопка)
	
	максПравил = 5;
	если ВвестиЧисло(максПравил, "Сколько спец.правил удалить?") тогда
		если максПравил<=0 тогда
			возврат;
		КонецЕсли;	
	иначе
		возврат;
	КонецЕсли;	
	
	 спис = "";
	 
	Для номКонтр = 0 по СписокКонтр.Количество()-1 цикл
		Контр = СписокКонтр[номКонтр].Значение;
		
		 	для i= 1 по максПравил цикл 		 
			регСв = РегистрыСведений.ПравилаЦенообразования.СоздатьМенеджерЗаписи();
		 	регСв.Контрагент = Контр;
		 	 регСв.Приоритет = -i;
			 регСв.Прочитать();
				 попытка
					 регСв.Удалить();
				 исключение
					 сообщить("Ошибка удаления правил для клиента: "+строка(Контр)+" : "+ОписаниеОшибки(), СтатусСообщения.Важное);
				КонецПопытки; 
	 		КонецЦикла;
	 
		 СписокКонтр[номКонтр].Пометка = истина;
		 спис = спис + строка( Контр )+", ";
	КонецЦикла;
	
	Сообщить(строка(ТекущаяДата())+" Стёрты спец. правила "+строка(Менеджер)+" для списка клиентов ("+строка(СписокКонтр.Количество())+"): "+спис, СтатусСообщения.Информация );
	 	 
КонецПроцедуры

Процедура КоманднаяПанель2Заполнить(Кнопка)
	
	Если Вопрос("Только отрицательные правила?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да тогда
		ТолькоОтриц = Истина;
	иначе 	ТолькоОтриц = ложь;
	КонецЕсли;	
	
	// Вставить содержимое обработчика. 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПравилаЦенообразования.ВидТовара,
		|	ПравилаЦенообразования.Производитель,
		|	ПравилаЦенообразования.НоменклатурнаяГруппа,
		|	ПравилаЦенообразования.Номенклатура,
		|	ПравилаЦенообразования.ПодСтрока,
		|	ПравилаЦенообразования.ТипЦен,
		|	ПравилаЦенообразования.СкидкаНаценка,
		|	ПравилаЦенообразования.СкидкаПредоплаты
		|ИЗ
		|	РегистрСведений.ПравилаЦенообразования КАК ПравилаЦенообразования
		|ГДЕ
		|"+?(ТолькоОтриц,"	ПравилаЦенообразования.Приоритет < 0 И ","")+"
		|	ПравилаЦенообразования.Контрагент В(&СписокКонтр)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПравилаЦенообразования.Приоритет
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("СписокКонтр", СписокКонтр);
		
		Результат = Запрос.Выполнить();
		ТабличноеПоле1.Очистить();
		ТабличноеПоле1 = Результат.выгрузить();
		
		КолСдвига = ?(ТолькоОтриц, ТабличноеПоле1.Количество()+1, -1); 		
		
КонецПроцедуры

функция ПолучитьНовыйID(стр1)
	флВсеПоля=Истина;
	возврат строка(стр1.ВидТовара) // 0 перечисление
	
		+ ?(ЗначениеЗаполнено(стр1.ТипЦен), "."+строка(стр1.ТипЦен.Код),".0")    //1) 30.09.2016
		
		+ ?(ЗначениеЗаполнено(стр1.Производитель), "."+строка(стр1.Производитель.Код),".0")  //2
		+?(не флВсеПоля,"", 
		 ?(ЗначениеЗаполнено(стр1.НоменклатурнаяГруппа), "."+строка(стр1.НоменклатурнаяГруппа.Код),".0")
		 
		+ ".0"
		+ ?(ЗначениеЗаполнено(стр1.Номенклатура), "."+строка(стр1.Номенклатура.Код),".0")
		//строки
		+ ?(ЗначениеЗаполнено(стр1.ПодСтрока), "."+строка(стр1.ПодСтрока),".0")
		
		+ ?(ЗначениеЗаполнено(стр1.Диаметр), "."+строка(стр1.Диаметр),"")
		
		//+++ 07.04.2016 чтобы сохранить "совместимость" со старыми правилами ""
		//+ ?(ЗначениеЗаполнено(стр1.ВидДефектаДляУценки), "."+строка(стр1.ВидДефектаДляУценки.Код),"")
		
		//+++ для всех категорий - единый ID
		//+ ?(ЗначениеЗаполнено(стр1.Категория), ?(ЗначениеЗаполнено(стр1.ВидДефектаДляУценки),"", ".0")+"."+строка(стр1.Категория),"")

		+";" );
КонецФункции
Процедура Кнопка1Нажатие(Элемент)
	спис1 = спис;
	L=стрДлина(спис1);
	Если L=0 тогда возврат; КонецЕсли;
	
	Знак = ";"; N=0;
	ВвестиСтроку(Знак, "Разделительный символ");
	i=найти(спис1, Знак);
	СписокКонтр.Очистить();
	пока i>0 и  L>1 цикл
		стр = лев(спис1, i-1);
		спис1 = прав(спис1, L-i);
	контр = справочники.Контрагенты.НайтиПоКоду(стр);
	Если контр = справочники.Контрагенты.ПустаяСсылка() тогда
		сообщить("Не найден контрагент по коду: "+стр, СтатусСообщения.Внимание);
			контр = справочники.Контрагенты.НайтиПоНаименованию(стр);
			Если контр = справочники.Контрагенты.ПустаяСсылка() тогда
			сообщить("Не найден контрагент по названию: "+стр, СтатусСообщения.Внимание);
			Продолжить;
			КонецЕсли;
	КонецЕсли;	
	СписокКонтр.Добавить(контр, контр);
	N=N+1;
	L=стрДлина(спис1);
	i=найти(спис1, Знак);
	КонецЦикла;

	сообщить("Добавлено "+строка(N)+" контрагентов", СтатусСообщения.Информация);
	
КонецПроцедуры

Процедура КнопкаВсеНажатие(Элемент)
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ПравилаЦенообразования.Контрагент
	                |ИЗ
	                |	РегистрСведений.ПравилаЦенообразования КАК ПравилаЦенообразования
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	ПравилаЦенообразования.Контрагент.Код
	                |АВТОУПОРЯДОЧИВАНИЕ";
	 Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();
	
	 СписокКонтр.Очистить();
	 СписокКонтр.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Контрагент") );
	
КонецПроцедуры

Процедура КолСдвигаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если Элемент.Значение>0 тогда Предупреждение("Сдвиг должен быть отрицательным!",10);
	КонецЕсли;
КонецПроцедуры
