
Процедура ДействияФормыОтчетПоНовымКлиентамСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(ОтчетПоНовымКлиентам)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	ОтчетПоНовымКлиентам(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ОтчетПоНовымКлиентам(ТабДок) Экспорт
	

	Макет = ПолучитьМакет("ОтчетПоНовымКлиентам");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент
	|ПОМЕСТИТЬ ВТ_Продажи2ГодаПоКонтрагентам
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1),
	|			&НачДата,
	|			,
	|			ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)
	|				ИЛИ ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)) КАК ПродажиОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК КоличествоКлиентов,
	|	ПродажиОбороты.КоличествоОборот КАК КоличествоОборот,
	|	ПродажиОбороты.СтоимостьОборот КАК СтоимостьОборот
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			,
	|			ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)
	|				ИЛИ ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)) КАК ПродажиОбороты
	|ГДЕ
	|	НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В
	|				(ВЫБРАТЬ
	|					ВТ_Продажи2ГодаПоКонтрагентам.Контрагент
	|				ИЗ
	|					ВТ_Продажи2ГодаПоКонтрагентам)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.Наименование
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоКлиентов),
	|	СУММА(КоличествоОборот),
	|	СУММА(СтоимостьОборот)
	|ПО
	|	ОБЩИЕ,
	|	ОтветственноеЛицо,
	|	Контрагент";

	Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Запрос.УстановитьПараметр("НачДата", НачДата);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ПредставлениеПериода="Отчет по новым клиентам за "+ ПредставлениеПериода(НачДата,КонецДня(КонДата),"ФП=Истина");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьОтветственноеЛицо = Макет.ПолучитьОбласть("ОтветственноеЛицо");
	ОбластьКОнтрагент = Макет.ПолучитьОбласть("КОнтрагент");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());

	ВыборкаОтветственноеЛицо = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаОтветственноеЛицо.Следующий() Цикл
		ОбластьОтветственноеЛицо.Параметры.Заполнить(ВыборкаОтветственноеЛицо);
		ТабДок.Вывести(ОбластьОтветственноеЛицо, ВыборкаОтветственноеЛицо.Уровень());

		ВыборкаКОнтрагент = ВыборкаОтветственноеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаКОнтрагент.Следующий() Цикл
			ОбластьКОнтрагент.Параметры.Заполнить(ВыборкаКОнтрагент);
			ТабДок.Вывести(ОбластьКОнтрагент, ВыборкаКОнтрагент.Уровень());
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	// Отчет по потерянным клиентам
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК КоличествоКлиентов,
	|	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1),
	|			&НачДата,
	|			,
	|			(ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)
	|				ИЛИ ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером))
	|				И НЕ ДоговорКонтрагента.Владелец В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							РегистрНакопления.Продажи.ДоговорКонтрагента.Владелец
	|						ИЗ
	|							РегистрНакопления.Продажи
	|						ГДЕ
	|							РегистрНакопления.Продажи.Период >= &НачДата
	|							И РегистрНакопления.Продажи.Период < ДОБАВИТЬКДАТЕ(&НачДата, ГОД, 1))) КАК ПродажиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец,
	|	ПродажиОбороты.ДоговорКонтрагента,
	|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтветственноеЛицо,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец.Наименование
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоКлиентов),
	|	СУММА(КоличествоОборот),
	|	СУММА(СтоимостьОборот)
	|ПО
	|	ОБЩИЕ,
	|	ОтветственноеЛицо,
	|	Контрагент";

	Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Запрос.УстановитьПараметр("НачДата", НачДата);


Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ПредставлениеПериода="Отчет по утерянным клиентам за "+ ПредставлениеПериода(НачДата,КонецДня(КонДата),"ФП=Истина");

	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());

	ВыборкаОтветственноеЛицо = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаОтветственноеЛицо.Следующий() Цикл
		ОбластьОтветственноеЛицо.Параметры.Заполнить(ВыборкаОтветственноеЛицо);
		ТабДок.Вывести(ОбластьОтветственноеЛицо, ВыборкаОтветственноеЛицо.Уровень());

		ВыборкаКОнтрагент = ВыборкаОтветственноеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаКОнтрагент.Следующий() Цикл
			ОбластьКОнтрагент.Параметры.Заполнить(ВыборкаКОнтрагент);
			ТабДок.Вывести(ОбластьКОнтрагент, ВыборкаКОнтрагент.Уровень());
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры
