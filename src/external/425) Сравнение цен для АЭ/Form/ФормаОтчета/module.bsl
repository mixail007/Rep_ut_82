Перем Соединение;
Процедура КнопкаСформироватьНажатие(Кнопка)
	тз=ПолучитьПоказатели();
КонецПроцедуры

Функция ПолучитьПоказатели()
	ТаблицаЦен = Новый ТаблицаЗначений;
	ТаблицаЦен.Колонки.Добавить("НоменклатураКод", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(7)));
	ТаблицаЦен.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	ТаблицаЦен.Колонки.Добавить("ЦенаПоставщика", Новый ОписаниеТипов("Число"));
	
	//------------Соединение---------------------------------
	ИмяПользователя    = "Администратор";
	ПарольПользователя = "cegthuthjq";
	
	СтрокаСоединенияCOM=""; 
	
	Base = "Srvr=""sigma:2041"";Ref=""v82ib_fedunov_ut""";
	UsrPwd = "Usr="""+ИмяПользователя+""";Pwd="""+ПарольПользователя+"""";
	СтрокаСоединенияCOM = Base+";"+UsrPwd;
	Если Соединение = неопределено тогда
		Соединение = ПолучитьСоединение(СтрокаСоединенияCOM); 
		Если Соединение = неопределено тогда
			возврат ТаблицаЦен;
		КонецЕсли;
	КонецЕсли;
	
	//----------------------------------------свободные остатки----------------------------------------	
	#Если Клиент тогда
		Состояние(" Идет получение цен номенклатуры в базе АЭ");
	#КонецЕсли
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст="ВЫБРАТЬ
	|ТоварыНаСайте.Номенклатура.Код КАК НоменклатураКод,
	|ТоварыНаСайте.Цена,
	|ТоварыНаСайте.ЦенаПоставщика
	|ИЗ
	|РегистрСведений.ТоварыНаСайте КАК ТоварыНаСайте
	|ГДЕ
	|ТоварыНаСайте.Регион = &Регион";
	Запрос.УстановитьПараметр("Регион",Соединение.Справочники.Регионы.НайтиПоКоду("УТ0000062"));//Для рассчета цен
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		нстр=ТаблицаЦен.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,Рез);
	КонецЦикла;
//ТаблицаЦен.ВыбратьСтроку();	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	СУММА(А.остаток) КАК остаток,
	             |	СУММА(А.Заказано) КАК Заказано,
	             |	А.Номенклатура КАК Номенклатура,
	             |	СУММА(А.остаток) КАК СвободныйОстаток
	             |ПОМЕСТИТЬ втСвободныйОстаток
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		МАКСИМУМ(остатки.КоличествоОстаток) КАК остаток,
	             |		СУММА(ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) КАК Заказано,
	             |		остатки.Номенклатура КАК Номенклатура
	             |	ИЗ
	             |		(ВЫБРАТЬ
	             |			Остатки3.Номенклатура КАК Номенклатура,
	             |			СУММА(Остатки3.КоличествоОстаток) КАК КоличествоОстаток
	             |		ИЗ
	             |			(ВЫБРАТЬ
	             |				ТоварыВРезервеНаСкладахОстатки.Номенклатура КАК Номенклатура,
	             |				ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	             |			ИЗ
	             |				РегистрНакопления.ТоварыНаСкладах.Остатки(
	             |						,
	             |						НЕ Склад.Транзитный
	             |							И НЕ Склад.ЗапретитьИспользование) КАК ТоварыВРезервеНаСкладахОстатки
	             |			
	             |			ОБЪЕДИНИТЬ ВСЕ
	             |			
	             |			ВЫБРАТЬ
	             |				ТоварыНаОтветственномХраненииОстатки.Номенклатура,
	             |				ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток
	             |			ИЗ
	             |				РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	             |						,
	             |						НЕ Склад.Транзитный
	             |							И НЕ Склад.ЗапретитьИспользование
	             |							И Контрагент В (&СписокКонтрагентовОТХ)) КАК ТоварыНаОтветственномХраненииОстатки
	             |			
	             |			ОБЪЕДИНИТЬ ВСЕ
	             |			
	             |			ВЫБРАТЬ
	             |				РезервДляИМОстатки.Номенклатура,
	             |				РезервДляИМОстатки.КоличествоОстаток
	             |			ИЗ
	             |				РегистрНакопления.РезервДляИМ.Остатки(
	             |						,
	             |						Подразделение В (&СписокГоловное)
	             |							И КонтрагентДляРезерваИМ = &КонтрагентДляРезерва) КАК РезервДляИМОстатки) КАК Остатки3
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			Остатки3.Номенклатура) КАК остатки
	             |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	             |					,
	             |					НЕ ЗаказПокупателя.Транзит
	             |						И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателейОстатки
	             |			ПО остатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		остатки.Номенклатура
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		МАКСИМУМ(остаткиТр.КоличествоОстаток),
	             |		СУММА(ЕСТЬNULL(ЗаказыПокупателейОстаткиТр.КоличествоОстаток, 0)),
	             |		остаткиТр.Номенклатура
	             |	ИЗ
	             |		(ВЫБРАТЬ
	             |			ТоварыНаСкладахТр.Номенклатура КАК Номенклатура,
	             |			СУММА(ЕСТЬNULL(ТоварыНаСкладахТр.КоличествоОстаток, 0)) КАК КоличествоОстаток
	             |		ИЗ
	             |			(ВЫБРАТЬ
	             |				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	             |				ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	             |			ИЗ
	             |				РегистрНакопления.ТоварыНаСкладах.Остатки(
	             |						,
	             |						НЕ Склад.Подразделение = &ПодрЕКБ
	             |							И Склад.Транзитный
	             |							И НЕ Склад.ЗапретитьИспользование
	             |							И НЕ Склад.Подразделение = &ПустоеПодразделение
	             |							И НЕ Склад.Подразделение = &Ярославль) КАК ТоварыНаСкладахОстатки
	             |			
	             |			ОБЪЕДИНИТЬ ВСЕ
	             |			
	             |			ВЫБРАТЬ
	             |				ТоварыНаОтветственномХраненииОстатки.Номенклатура,
	             |				ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток
	             |			ИЗ
	             |				РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	             |						,
	             |						НЕ Склад.Подразделение = &ПодрЕКБ
	             |							И Склад.Транзитный
	             |							И НЕ Склад.ЗапретитьИспользование
	             |							И НЕ Склад.Подразделение = &ПустоеПодразделение
	             |							И НЕ Склад.Подразделение = &Ярославль
	             |							И Контрагент В (&СписокКонтрагентовОТХ)) КАК ТоварыНаОтветственномХраненииОстатки
	             |			
	             |			ОБЪЕДИНИТЬ ВСЕ
	             |			
	             |			ВЫБРАТЬ
	             |				РезервДляИМОстатки.Номенклатура,
	             |				РезервДляИМОстатки.КоличествоОстаток
	             |			ИЗ
	             |				РегистрНакопления.РезервДляИМ.Остатки(
	             |						,
	             |						НЕ Подразделение В (&СписокГоловное)
	             |							И КонтрагентДляРезерваИМ = &КонтрагентДляРезерва) КАК РезервДляИМОстатки) КАК ТоварыНаСкладахТр
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			ТоварыНаСкладахТр.Номенклатура) КАК остаткиТр
	             |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	             |					,
	             |					ЗаказПокупателя.Транзит
	             |						И ЗаказПокупателя.Проверен
	             |						И НЕ ЗаказПокупателя.Подразделение = &ПустоеПодразделение
	             |						И НЕ ЗаказПокупателя.Подразделение = &Ярославль) КАК ЗаказыПокупателейОстаткиТр
	             |			ПО остаткиТр.Номенклатура = ЗаказыПокупателейОстаткиТр.Номенклатура
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		остаткиТр.Номенклатура) КАК А
	             |ГДЕ
	             |	А.остаток >= &МинОстаток
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	А.Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	тзЦеныАЭ.НоменклатураКод,
	             |	тзЦеныАЭ.Цена,
	             |	тзЦеныАЭ.ЦенаПоставщика
	             |ПОМЕСТИТЬ втЦеныАЭ
	             |ИЗ
	             |	&тзЦеныАЭ КАК тзЦеныАЭ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	НоменклатураСпр.Ссылка КАК Номенклатура,
	             |	втЦеныАЭ.Цена КАК ЦенаАЭ,
	             |	втЦеныАЭ.ЦенаПоставщика
	             |ПОМЕСТИТЬ втАЭ
	             |ИЗ
	             |	втЦеныАЭ КАК втЦеныАЭ
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСвободныйОстаток КАК втСвободныйОстаток
	             |			ПО (втСвободныйОстаток.Номенклатура = НоменклатураСпр.Ссылка)
	             |		ПО втЦеныАЭ.НоменклатураКод = НоменклатураСпр.Код
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЕСТЬNULL(втАЭ.Номенклатура, втСвободныйОстаток.Номенклатура) КАК Номенклатура,
	             |	ЕСТЬNULL(втАЭ.ЦенаАЭ, 0) КАК ЦенаИМ,
	             |	ЕСТЬNULL(втАЭ.ЦенаПоставщика, 0) КАК ВходИМ,
	             |	ЕСТЬNULL(втСвободныйОстаток.СвободныйОстаток, 0) КАК СвободныйОстаток
	             |ПОМЕСТИТЬ втОстатокЦеныИМ
	             |ИЗ
	             |	втСвободныйОстаток КАК втСвободныйОстаток
	             |		ПОЛНОЕ СОЕДИНЕНИЕ втАЭ КАК втАЭ
	             |		ПО втСвободныйОстаток.Номенклатура = втАЭ.Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втСвободныйОстаток.Номенклатура,
	             |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ТипЦен, ""хх"") КАК ТипЦен,
	             |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
	             |ПОМЕСТИТЬ вт
	             |ИЗ
	             |	втСвободныйОстаток КАК втСвободныйОстаток
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен В (&СписокТипЦен)) КАК ЦеныНоменклатурыСрезПоследних
	             |		ПО втСвободныйОстаток.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	втАЭ.Номенклатура,
	             |	""2. Цена продажи ИМ"",
	             |	втАЭ.ЦенаАЭ
	             |ИЗ
	             |	втАЭ КАК втАЭ
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	втАЭ.Номенклатура,
	             |	""1. Вход ИМ"",
	             |	втАЭ.ЦенаПоставщика
	             |ИЗ
	             |	втАЭ КАК втАЭ
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	втСвободныйОстаток.Номенклатура,
	             |	""3. Свободный остаток"",
	             |	втСвободныйОстаток.СвободныйОстаток
	             |ИЗ
	             |	втСвободныйОстаток КАК втСвободныйОстаток
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	вт.Номенклатура,
	             |	вт.ТипЦен,
	             |	СУММА(вт.Цена) КАК Цена,
	             |	вт.Номенклатура.Код КАК Код,
	             |	вт.Номенклатура.Типоразмер КАК Типоразмер,
	             |	вт.Номенклатура.Родитель КАК ВидНоменклатуры,
	             |	вт.Номенклатура.Типоразмер.Диаметр КАК Диаметр,
	             |	вт.Номенклатура.Производитель КАК Производитель
	             |ИЗ
	             |	вт КАК вт
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	вт.Номенклатура,
	             |	вт.ТипЦен,
	             |	вт.Номенклатура.Код,
	             |	вт.Номенклатура.Типоразмер,
	             |	вт.Номенклатура.Родитель,
	             |	вт.Номенклатура.Типоразмер.Диаметр";
				 Запрос.УстановитьПараметр("тзЦеныАЭ",ТаблицаЦен);
				 СписокГоловное = новый СписокЗначений;
				   СписокГоловное.Добавить(справочники.Подразделения.ПустаяСсылка());
				   СписокГоловное.Добавить(справочники.Подразделения.НайтиПоКоду("00005"));
    Запрос.УстановитьПараметр("СписокГоловное",СписокГоловное);
	Запрос.УстановитьПараметр("ПустоеПодразделение",справочники.Подразделения.ПустаяСсылка());
	Запрос.УстановитьПараметр("Ярославль",справочники.Подразделения.НайтиПоКоду("00005") );
	Запрос.УстановитьПараметр("ПодрЕКБ",справочники.Подразделения.НайтиПоКоду("00122") );
	Запрос.УстановитьПараметр("МинОстаток", 1 ); // Остаток на складах от 0 и более	
	
	Запрос.УстановитьПараметр("КонтрагентДляРезерва", Справочники.Контрагенты.НайтиПоКоду("П004703") ); // 
	
	СписокКонтрагентовОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);  //+++ 01.10.2014
	Запрос.УстановитьПараметр("СписокКонтрагентовОТХ",СписокКонтрагентовОТХ);
	
	СписокТипЦен=новый списокЗначений;
	СписокТипЦен.Добавить(Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005")); //Крупный опт
	СписокТипЦен.Добавить(Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00004")); //Мелкий опт
    СписокТипЦен.Добавить(Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008")); //Базовая
	СписокТипЦен.Добавить(Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00002")); //Средний опт

		
	Запрос.УстановитьПараметр("СписокТипЦен",СписокТипЦен);
	
    Рез=Запрос.Выполнить().Выгрузить();
	Возврат Рез;
КонецФункции

Функция ПолучитьСоединение(СтрокаСоединенияCOM="", v8="V82")
	
	v8connect = Новый COMОбъект(v8+".ComConnector");
	Попытка
		Соединение = v8connect.Connect(СтрокаСоединенияCOM);
		#Если Клиент Тогда
			ТипБазы = "Ref=";  длТипаБазы=3;
			Если Найти(СтрокаСоединенияCOM,"File=")>0 Тогда		
				ТипБазы = "File="; длТипаБазы=4;
			КонецЕсли;	
			имяБД = Прав(СтрокаСоединенияCOM,стрДлина(СтрокаСоединенияCOM) - найти(СтрокаСоединенияCOM,ТипБазы)-длТипаБазы);
			имяБД = Лев(имяБД, найти(имяБД,";")-1);
			Сообщить("Успешно установлено соединение с "+?(ТипБазы = "Ref=","серверной", "файловой")+" базой: "+имяБД, СтатусСообщения.Информация);
		#КонецЕсли
	Исключение
		#Если Клиент Тогда
			Сообщить("Ошибка при соединении с "+?(ТипБазы = "Ref=","серверной", "файловой")+" базой: "+имяБД+"
			|Ошибка: "+ ОписаниеОшибки(), СтатусСообщения.Внимание);
		#КонецЕсли
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

Процедура ДействияФормыДействие6(Кнопка)
	тз=ПолучитьПоказатели();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("тз", тз);
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	Результат = ЭлементыФормы.Результат;
	Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

Соединение=неопределено;