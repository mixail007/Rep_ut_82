Функция СформироватьТекстЗапроса() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент.ОсновнойМенеджерКонтрагента, Взаиморасчеты.КонтрагентВзаиморасчеты.ОсновнойМенеджерКонтрагента) КАК Менеджер,
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент, Взаиморасчеты.КонтрагентВзаиморасчеты) КАК Контрагент,
	               |	МАКСИМУМ(ЕСТЬNULL(ПродажиОбороты.Контрагент.ДопустимаяСуммаЗадолженности, Взаиморасчеты.КонтрагентВзаиморасчеты.ДопустимаяСуммаЗадолженности)) КАК ЛимитДЗ,
	               |	СУММА(ПродажиОбороты.СтоимостьОборотШины1) КАК СтоимостьОборотШины1,
	               |	СУММА(ПродажиОбороты.СтоимостьОборотДиски1) КАК СтоимостьОборотДиски1,
	               |	СУММА(ПродажиОбороты.СтоимостьОборотШины2) КАК СтоимостьОборотШины2,
	               |	СУММА(ПродажиОбороты.СтоимостьОборотДиски2) КАК СтоимостьОборотДиски2,
	               |	СУММА(ПродажиОбороты.СтоимостьОборотШины3) КАК СтоимостьОборотШины3,
	               |	СУММА(ПродажиОбороты.СтоимостьОборотДиски3) КАК СтоимостьОборотДиски3,
	               |	МАКСИМУМ(ЕСТЬNULL(Взаиморасчеты.СуммаУпрОстаток,0)) КАК СуммаУпрОстаток,
	               |	МАКСИМУМ(ЕСТЬNULL(ПродажиОбороты.Контрагент.ДопустимаяСуммаЗадолженности, Взаиморасчеты.КонтрагентВзаиморасчеты.ДопустимаяСуммаЗадолженности) - ЕСТЬNULL(Взаиморасчеты.СуммаУпрОстаток,0)) КАК ОстатокЛимитаДЗ
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	               |		ВЫБОР
	               |			КОГДА ПродажиОбороты.Номенклатура.ВидТовара = &Шины
	               |				ТОГДА ПродажиОбороты.СтоимостьОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК СтоимостьОборотШины1,
	               |		ВЫБОР
	               |			КОГДА ПродажиОбороты.Номенклатура.ВидТовара = &Диски
	               |				ТОГДА ПродажиОбороты.СтоимостьОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК СтоимостьОборотДиски1,
	               |		0 КАК СтоимостьОборотШины2,
	               |		0 КАК СтоимостьОборотДиски2,
	               |		0 КАК СтоимостьОборотШины3,
	               |		0 КАК СтоимостьОборотДиски3
	               |	ИЗ
	               |		РегистрНакопления.Продажи.Обороты(&ДатаНач1, &ДатаКон1, , ) КАК ПродажиОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ПродажиОбороты.ДоговорКонтрагента.Владелец,
	               |		0,
	               |		0,
	               |		ВЫБОР
	               |			КОГДА ПродажиОбороты.Номенклатура.ВидТовара = &Шины
	               |				ТОГДА ПродажиОбороты.СтоимостьОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ПродажиОбороты.Номенклатура.ВидТовара = &Диски
	               |				ТОГДА ПродажиОбороты.СтоимостьОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		0,
	               |		0
	               |	ИЗ
	               |		РегистрНакопления.Продажи.Обороты(&ДатаНач2, &ДатаКон2, , ) КАК ПродажиОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ПродажиОбороты.ДоговорКонтрагента.Владелец,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		ВЫБОР
	               |			КОГДА ПродажиОбороты.Номенклатура.ВидТовара = &Шины
	               |				ТОГДА ПродажиОбороты.СтоимостьОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ПродажиОбороты.Номенклатура.ВидТовара = &Диски
	               |				ТОГДА ПродажиОбороты.СтоимостьОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ
	               |	ИЗ
	               |		РегистрНакопления.Продажи.Обороты(&ДатаНач3, &ДатаКон3, , ) КАК ПродажиОбороты) КАК ПродажиОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК КонтрагентВзаиморасчеты,
	               |			СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток) КАК СуммаУпрОстаток
	               |		ИЗ
	               |			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	               |					,
	               |					ДоговорКонтрагента.ВидДоговора = &СПокупателем
	               |						ИЛИ ДоговорКонтрагента.ВидДоговора = &Скомиссионером) КАК ВзаиморасчетыСКонтрагентамиОстатки
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец
	               |		
	               |		ИМЕЮЩИЕ
	               |			СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток) > 0) КАК Взаиморасчеты
	               |		ПО ПродажиОбороты.Контрагент = Взаиморасчеты.КонтрагентВзаиморасчеты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент.ОсновнойМенеджерКонтрагента, Взаиморасчеты.КонтрагентВзаиморасчеты.ОсновнойМенеджерКонтрагента),
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент, Взаиморасчеты.КонтрагентВзаиморасчеты)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Менеджер,
	               |	Контрагент
	               |ИТОГИ
	               |	СУММА(СтоимостьОборотШины1),
	               |	СУММА(СтоимостьОборотДиски1),
	               |	СУММА(СтоимостьОборотШины2),
	               |	СУММА(СтоимостьОборотДиски2),
	               |	СУММА(СтоимостьОборотШины3),
	               |	СУММА(СтоимостьОборотДиски3),
	               |	СУММА(СуммаУпрОстаток)
	               |ПО
	               |	ОБЩИЕ";
	
возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьОтчет(Таб) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = СформироватьТекстЗапроса();
	Запрос.УстановитьПараметр("Шины", Перечисления.ВидыТоваров.Шины);
	Запрос.УстановитьПараметр("Диски", Перечисления.ВидыТоваров.Диски);
	Запрос.УстановитьПараметр("ДатаНач1", НачалоДня(ДатаНач1));
	Запрос.УстановитьПараметр("ДатаКон1", КонецДня(ДатаКон1));
	Запрос.УстановитьПараметр("ДатаНач2", НачалоДня(ДатаНач2));
	Запрос.УстановитьПараметр("ДатаКон2", КонецДня(ДатаКон2));
	Запрос.УстановитьПараметр("ДатаНач3", НачалоДня(ДатаНач3));
	Запрос.УстановитьПараметр("ДатаКон3", КонецДня(ДатаКон3));
	Запрос.УстановитьПараметр("СПокупателем", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	Запрос.УстановитьПараметр("СКомиссионером", Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);

	
	Макет = ПолучитьМакет("Макет");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	
	ОбластьШапка.Параметры.ПечПериод1 = ПредставлениеПериода(НачалоДня(ДатаНач1), КонецДня(ДатаКон1),"ФП=Истина");
	ОбластьШапка.Параметры.ПечПериод2 = ПредставлениеПериода(НачалоДня(ДатаНач2), КонецДня(ДатаКон2),"ФП=Истина");
	ОбластьШапка.Параметры.ПечПериод3 = ПредставлениеПериода(НачалоДня(ДатаНач3), КонецДня(ДатаКон3),"ФП=Истина");
	ОбластьШапка.Параметры.ПечПериод = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	
	Таб.Вывести(ОбластьШапка);
	Таб.ФиксацияСверху = Таб.ВысотаТаблицы;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	НомПП = 0;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗаписи()=ТипЗаписиЗапроса.ОбщийИтог Тогда
			ОбластьИтог.Параметры.Заполнить(Выборка);
		Иначе	
			НомПП = НомПП+1;
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			ОбластьСтрока.Параметры.НомПП = НомПП;
			Таб.Вывести(ОбластьСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	Таб.Вывести(ОбластьИтог);
	
КонецПроцедуры	

