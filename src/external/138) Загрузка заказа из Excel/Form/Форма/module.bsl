Перем ВалютаРегламентированногоУчета;


Процедура ПриОткрытии()
	НомерКолонкиКод=1;
	НомерКолонкиКоличество=2;
	НомерКолонкиЦена=3;
	//Предупреждение("Пожалуйста проверяйте правильность подбираемых товаров в заказ!",,"ВНИМАНИЕ")
	
	//+++ 29.01.2018
	ЭлементыФормы.ПолеВвода1.СписокВыбора.Добавить("Код");
	ЭлементыФормы.ПолеВвода1.СписокВыбора.Добавить("Артикул");
	ЭлементыФормы.ПолеВвода1.СписокВыбора.Добавить("Штрихкод");
	ЭлементыФормы.ПолеВвода1.СписокВыбора.Добавить("Наименование");
	ЭлементыФормы.ПолеВвода1.Значение = "Код";
	
	Разделитель = ";";
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(СезонныйЗаказ) тогда
		Если флСезонныйЗаказПокупателя=0 тогда
			ФормаЗаказа = Документы.ЗаказПокупателя.ПолучитьФормуНовогоДокумента();
		ИначеЕсли флСезонныйЗаказПокупателя=1 тогда
			ФормаЗаказа = Документы.ЗаказПокупателяСезонный.ПолучитьФормуНовогоДокумента();
		ИначеЕсли флСезонныйЗаказПокупателя=2 тогда
			ФормаЗаказа = Документы.ЗаданиеНаЗаказПоставщику.ПолучитьФормуНовогоДокумента();
		ИначеЕсли флСезонныйЗаказПокупателя=3 тогда
			ФормаЗаказа = Документы.ЗаказПоставщику.ПолучитьФормуНовогоДокумента();
		ИначеЕсли флСезонныйЗаказПокупателя=4 тогда
			ФормаЗаказа = Документы.ПеремещениеТоваров.ПолучитьФормуНовогоДокумента();
		ИначеЕсли флСезонныйЗаказПокупателя=5 тогда
			ФормаЗаказа = Документы.ЗаданиеНаПроизводствоДисков.ПолучитьФормуНовогоДокумента();
		КонецЕсли;	
	ИначеЕсли ЗначениеЗаполнено(СезонныйЗаказ) тогда 
		ФормаЗаказа = СезонныйЗаказ.ПолучитьФорму();
	иначе // как было
		ФормаЗаказа = Документы.ЗаказПокупателя.ПолучитьФормуНовогоДокумента();
	КонецЕсли;	
	
	
	Если НЕ ЗначениеЗаполнено(СезонныйЗаказ) тогда
		ДокументОбъект=ФормаЗаказа.ДокументОбъект;
		Если флСезонныйЗаказПокупателя <> 4 и флСезонныйЗаказПокупателя <> 5 тогда
			Если флСезонныйЗаказПокупателя<>2 тогда
				ДокументОбъект.Контрагент= Контрагент;
				Если флСезонныйЗаказПокупателя=0 Тогда
					ДокументОбъект.СпособОтгрузки = Контрагент.способОтгрузки;
				КонецЕсли;
				ДокументОбъект.Грузополучатель= Контрагент.Грузополучатель;  //+++ Плотников
				
				ДокументОбъект.ДоговорКонтрагента= ДоговорКонтрагента;
				ДокументОбъект.УчитыватьНДС=Истина;
				ДокументОбъект.СуммаВключаетНДС=Истина;
				//+++ 14.01.2015
				ТипЦен = справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00006");//ручная
				ДокументОбъект.ТипЦен=ТипЦен;
				ФормаЗаказа.ПараметрОснование = ДоговорКонтрагента;
			КонецЕсли;
		КонецЕсли;
	иначе
		ДокументОбъект=ФормаЗаказа.ДокументОбъект;
	конецесли;
	
	Табл = Новый ТаблицаЗначений;
	Табл.Колонки.Добавить("Код");
	Табл.Колонки.Добавить("Наименование");
	Табл.Колонки.Добавить("Артикул");
	Табл.Колонки.Добавить("Количество");
	Табл.Колонки.Добавить("Цена");
	
	начВремя = ТекущаяДата(); счПуст=0;
	Для сч=1 по ЭлементыФормы.ПолеТабличногоДокумента.ВысотаТаблицы Цикл
		
		Проделился = Ложь;
		
		ТаблицаТоваров = Новый ТаблицаЗначений;
		ТаблицаТоваров.Колонки.Добавить("Номенклатура");
		ТаблицаТоваров.Колонки.Добавить("Количество");
		ТаблицаТоваров.Колонки.Добавить("Цена");
		ТаблицаТоваров.Колонки.Добавить("ШтрихКод");
		
		// Проверяем влючена ли проверка на многострочность в 1 ячейке 
		Если МногоСтрокВЯчейке Тогда
			
			Если ЗначениеЗаполнено(Разделитель) Тогда
				
				//Проверияем ячейку на наличие 2-х и более товаров в ячейке
				
				КоличествоОбщее = Число(ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиКоличество)).Текст);
				
				Если Найти(ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиКод)).Текст,Разделитель) Тогда
					
					ТоварСтрока = СтрЗаменить(СокрЛП(ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиКод)).Текст),Разделитель,Символы.ПС);
					
					Если СтрЧислоСтрок(ТоварСтрока) > 1 Тогда
						
						МассивШТК = Новый Массив;
						
						Для инт = 1 по СтрЧислоСтрок(ТоварСтрока) Цикл
							МассивШТК.Добавить(СокрЛП(СтрПолучитьСтроку(ТоварСтрока, инт)));			
						КонецЦикла;
						
						ЗапросШк = Новый Запрос;
						ЗапросШк.Текст = 
						"ВЫБРАТЬ
						|	Штрихкоды.Владелец КАК Номенклатура,
						|	Штрихкоды.Штрихкод
						|ИЗ
						|	РегистрСведений.Штрихкоды КАК Штрихкоды
						|ГДЕ
						|	Штрихкоды.Штрихкод В(&МассивШТК)";
						ЗапросШк.УстановитьПараметр("МассивШТК", МассивШТК);
						
						ШкВыбор = ЗапросШк.Выполнить().Выбрать();
						
						Пока ШкВыбор.Следующий() Цикл
							НоваяСтрока = ТаблицаТоваров.Добавить();
							НоваяСтрока.Номенклатура = ШкВыбор.Номенклатура;
							НоваяСтрока.ШтрихКод = ШкВыбор.Штрихкод;
							НоваяСтрока.Количество = 0;
							НоваяСтрока.Цена = 0;
						КонецЦикла;
						
						Если ТаблицаТоваров.Количество() = 0 Тогда
							Продолжить;
						КонецЕсли;
						
						//Распределяем цены и остатки 
						
						ЗапросОстаток = Новый Запрос;
						ЗапросОстаток.Текст = 
						"ВЫБРАТЬ
						|	А.Код,
						|	СУММА(А.ОстатокНаСкладахИОТХ - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) КАК СвободныйОстаток,
						|	А.Номенклатура
						|ИЗ
						|	(ВЫБРАТЬ
						|		ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура.Код, ТоварыНаОтветственномХраненииОстатки.Номенклатура.Код) КАК Код,
						|		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладахИОТХ,
						|		ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура, ТоварыНаОтветственномХраненииОстатки.Номенклатура) КАК Номенклатура
						|	ИЗ
						|		РегистрНакопления.ТоварыНаСкладах.Остатки(
						|				,
						|				НЕ Склад.ЗапретитьИспользование
						|					И НЕ Склад.Транзитный
						|					И Номенклатура В (&СписокЗаказа)) КАК ТоварыНаСкладахОстатки
						|			ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
						|					,
						|					НЕ Склад.ЗапретитьИспользование
						|						И НЕ Склад.Транзитный
						|						И Номенклатура В (&СписокЗаказа)
						|						И 99 = 99) КАК ТоварыНаОтветственномХраненииОстатки
						|			ПО ТоварыНаСкладахОстатки.Номенклатура = ТоварыНаОтветственномХраненииОстатки.Номенклатура) КАК А
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
						|				,
						|				ЗаказПокупателя.Проверен
						|					И НЕ ЗаказПокупателя.Транзит
						|					И Номенклатура В (&СписокЗаказа)) КАК ЗаказыПокупателейОстатки
						|		ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
						|ГДЕ
						|	А.ОстатокНаСкладахИОТХ - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 2
						|
						|СГРУППИРОВАТЬ ПО
						|	А.Код,
						|	А.Номенклатура";
						
						ЗапросОстаток.УстановитьПараметр("СписокЗаказа", ТаблицаТоваров.ВыгрузитьКолонку("Номенклатура"));
						
						СвободныйОстаток = ЗапросОстаток.Выполнить().Выгрузить();
						ОсталосьРаспределить = КоличествоОбщее;
						
						Пока ОсталосьРаспределить > 0 и СвободныйОстаток.Итог("СвободныйОстаток") > 0 Цикл
							
							Для каждого СтрокаТЧ из ТаблицаТоваров Цикл
								НоменклатураОстаток = СвободныйОстаток.Найти(СтрокаТЧ.Номенклатура,"Номенклатура");
								
								Если НоменклатураОстаток <> неопределено Тогда
									Если НоменклатураОстаток.СвободныйОстаток > 0 и СтрокаТЧ.Количество >= 3 и ОсталосьРаспределить > 0 Тогда
										СтрокаТЧ.Количество = СтрокаТЧ.Количество + 1;
										СтрокаТЧ.Цена = ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиЦена)).Текст;
										НоменклатураОстаток.СвободныйОстаток = НоменклатураОстаток.СвободныйОстаток - 1;
										ОсталосьРаспределить = ОсталосьРаспределить - 1;
									ИначеЕсли ОсталосьРаспределить >= 3 Тогда
										СтрокаТЧ.Количество = СтрокаТЧ.Количество + 3;
										СтрокаТЧ.Цена = ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиЦена)).Текст;
										НоменклатураОстаток.СвободныйОстаток = НоменклатураОстаток.СвободныйОстаток - 3;
										ОсталосьРаспределить = ОсталосьРаспределить - 3;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
							
						КонецЦикла;
						
						Если ОсталосьРаспределить > 0 Тогда
							Сообщить("Не хватило остатков по штрихкодам: "+ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиКод)).Текст+" В количестве: "+ОсталосьРаспределить);	
						КонецЕсли;
						
						Для каждого СтрокаТТ из ТаблицаТоваров Цикл
							
							Ст = Табл.Добавить();
							
							Ст.Код = СтрокаТТ.ШтрихКод;
							Ст.Наименование = СтрокаТТ.ШтрихКод;
							Ст.Артикул = СтрокаТТ.ШтрихКод;
							Ст.Количество = СтрокаТТ.Количество;
							Ст.Цена = Число(ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиЦена)).Текст);
							
						КонецЦикла;
						
						Проделился = Истина;
						
					Иначе
						ТоварСтрока = СтрЗаменить(ТоварСтрока,Разделитель,"");							
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
				
				Предупреждение("Не заполенен разделитель для группы товаров в одной ячейке");
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Проделился = Ложь Тогда
			
			Ст = Табл.Добавить();
			
			//18.12.2012 Формат(сч,"ЧГ=0")
			ЗначениеЯчейкиНоменклатура=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиКод));		
			ЗначениеЯчейкиКоличество  =ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиКоличество));
			Если НомерКолонкиЦена>0 и флСезонныйЗаказПокупателя <> 2 тогда //+++ 04.07.2012 цена не обязательна 
				ЗначениеЯчейкиЦена  =ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C"+Строка(НомерКолонкиЦена));		
			иначе
				ЗначениеЯчейкиЦена  = "";
			КонецЕсли;
			
			Если СокрЛП(ЗначениеЯчейкиНоменклатура.Текст)=""
				и СокрЛП(ЗначениеЯчейкиКоличество.Текст)="" тогда
				сообщить("- строка №"+строка(сч)+" - не заполнен код номенклатуры и поле количества! "+?(флПустыеСтроки, "Строка не добавлена!", "Добавлена пустая строка!") );
				Если флПустыеСтроки тогда
					счПуст=счПуст+1;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			//+++ 29.01.2018
			Ст.Код = стрЗаменить(СокрЛП(ЗначениеЯчейкиНоменклатура.Текст)," ","");
			Ст.Наименование = СокрЛП(ЗначениеЯчейкиНоменклатура.Текст);
			Ст.Артикул = СокрЛП(ЗначениеЯчейкиНоменклатура.Текст);
			
			Попытка //+++ 14.05.2012 отдельно!
				ЗначениеЯчейкиКоличествоТекст = "";
				ЗначениеЯчейкиКоличествоТекст = стрЗаменить(ЗначениеЯчейкиКоличество.Текст," ","");
				ЗначениеЯчейкиКоличествоТекст = стрЗаменить(ЗначениеЯчейкиКоличествоТекст,",",".");
				Ст.Количество = Число(ЗначениеЯчейкиКоличествоТекст);
			Исключение
				сообщить("  строка № "+строка(сч)+" - Ошибка в количестве : Значение '"+строка(ЗначениеЯчейкиКоличествоТекст)+"' - не является числом!", СтатусСообщения.Внимание);//+++
			КонецПопытки;
			
			попытка
				ЗначениеЯчейкиЦенаТекст = "";
				Если НомерКолонкиЦена>0 и флСезонныйЗаказПокупателя <> 2 тогда
					ЗначениеЯчейкиЦенаТекст = стрЗаменить(ЗначениеЯчейкиЦена.Текст," ","");
					ЗначениеЯчейкиЦенаТекст = стрЗаменить(ЗначениеЯчейкиЦенаТекст," ","");
					ЗначениеЯчейкиЦенаТекст = стрЗаменить(ЗначениеЯчейкиЦенаТекст,"р.","");
					ЗначениеЯчейкиЦенаТекст = стрЗаменить(ЗначениеЯчейкиЦенаТекст,"руб.","");
					ЗначениеЯчейкиЦенаТекст = стрЗаменить(ЗначениеЯчейкиЦенаТекст,"$","");
					ЗначениеЯчейкиЦенаТекст = стрЗаменить(ЗначениеЯчейкиЦенаТекст,",",".");
					Ст.Цена= ?(ЗначениеНеЗаполнено(ЗначениеЯчейкиЦенаТекст),0,Число(ЗначениеЯчейкиЦенаТекст));
				иначе
					Ст.Цена=0;
				КонецЕсли;
			Исключение
				сообщить("  строка № "+строка(сч)+" - Ошибка в цене : Значение '"+строка(ЗначениеЯчейкиЦенаТекст)+"' - не является числом!", СтатусСообщения.Внимание);//+++
				Продолжить;
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	Табл.Свернуть("Код,Наименование,Артикул, Цена","Количество");
	
	//Проверка на одинаковые строки после свертки +Лукьяненков 08.12.2017
	ОшибкаДублей = Ложь;
	
	Для каждого строкаТаб из Табл Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Артикул", строкаТаб.Артикул);
		НайденныеСтроки = Табл.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтроки.Количество() > 1 Тогда
			ОшибкаДублей = Истина;
			Сообщить("В документа 2 или более строк одной номенклатуры с разной ценой. Артикул(код): "+строкаТаб.Артикул);
		КонецЕсли;
	КонецЦикла;
	
	Если ОшибкаДублей Тогда
		Сообщить("Цена по 1 артикулу(коду) должна быть у всех строк одинаковая.");
		Возврат;
	КонецЕсли;
	//-Лукьяненков
	
	сч1 = 1;
	Для Каждого строкаТаблицы из Табл Цикл	
		строкаТовар=ДокументОбъект.Товары.Добавить();
		
		Попытка
			
			Если ПолеВвода1 = "Код"  тогда //+++ 29.01.2018
			строкаТовар.Номенклатура=Справочники.Номенклатура.НайтиПоКоду(строкаТаблицы.Код);
			ИначеЕсли ПолеВвода1 = "Наименование" тогда
				строкаТовар.Номенклатура=Справочники.Номенклатура.НайтиПоНаименованию(строкаТаблицы.Наименование,Истина);
			ИначеЕсли  ПолеВвода1 = "Штрихкод" тогда
				Если СтрДлина(""+строкаТаблицы.Код+"") = 13 Тогда
				ЗапросШк = Новый Запрос;
				ЗапросШк.Текст = 
				"ВЫБРАТЬ
				|	Штрихкоды.Владелец КАК Номенклатура
				|ИЗ
				|	РегистрСведений.Штрихкоды КАК Штрихкоды
				|ГДЕ
				|	Штрихкоды.Штрихкод = &Код";
				ЗапросШк.УстановитьПараметр("Код", строкаТаблицы.Код);
				
				ШкВыбор = ЗапросШк.Выполнить().Выбрать();
				
				Если ШкВыбор.Количество() > 0 Тогда
					ШкВыбор.Следующий();
					строкаТовар.Номенклатура = ШкВыбор.Номенклатура;
				КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ПолеВвода1 = "Артикул" тогда
			
			//Миронычев АЕ 05,04,17
			
			//+++ 21.05.2013 по Артикулу
			//	строкаТовар.Номенклатура=Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", ЗначениеЯчейкиНоменклатураНаименование);
			
			///+++Плотников 14.03.16
				Запрос =  Новый Запрос;
				Запрос.УстановитьПараметр("Артикул",строкаТаблицы.Наименование);
				Запрос.УстановитьПараметр("Период", ТекущаяДата());
				
				Запрос.Текст = "ВЫБРАТЬ
				|	ном.Ссылка КАК Номенклатура,
				|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК Остаток
				|ИЗ
				|	Справочник.Номенклатура КАК ном
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
				|				&Период,
				|				Склад.Транзитный = ЛОЖЬ
				|					И Склад.ЗапретитьИспользование = ЛОЖЬ) КАК ТоварыНаСкладахОстатки
				|		ПО (ТоварыНаСкладахОстатки.Номенклатура = ном.Ссылка)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
				|				&Период,
				|				ЗаказПокупателя.Транзит = ЛОЖЬ
				|					И ЗаказПокупателя.Проверен = ИСТИНА) КАК ЗаказыПокупателейОстатки
				|		ПО (ЗаказыПокупателейОстатки.Номенклатура = ном.Ссылка)
				|ГДЕ
				|	ном.Артикул ПОДОБНО &Артикул";
				Результат = Запрос.Выполнить().Выгрузить();
				Если Результат.Количество() > 0 Тогда
					Если Результат.Количество() > 1 Тогда
						Ном.Загрузить(Результат);
						строкаТовар.Номенклатура = ЭтотОбъект.ПолучитьФорму("ФормаВыбора").ОткрытьМодально();
					Иначе
						строкаТовар.Номенклатура = Результат[0].Номенклатура;
					КонецЕсли;
				иначе 
					Запрос.УстановитьПараметр("Артикул",  "%="+строкаТаблицы.Наименование+"=%");
					Результат = Запрос.Выполнить().Выгрузить();
					Если Результат.Количество() > 0 Тогда
						Если Результат.Количество() > 1 Тогда
							Ном.Загрузить(Результат);
							строкаТовар.Номенклатура = ЭтотОбъект.ПолучитьФорму("ФормаВыбора").ОткрытьМодально();
						Иначе
							строкаТовар.Номенклатура = Результат[0].Номенклатура;
						КонецЕсли;
						
					иначе 
						Запрос.УстановитьПараметр("Артикул", строкаТаблицы.Наименование+"=%");
						Результат = Запрос.Выполнить().Выгрузить();
						Если Результат.Количество() > 0 Тогда
							Если Результат.Количество() > 1 Тогда
								Ном.Загрузить(Результат);
								строкаТовар.Номенклатура = ЭтотОбъект.ПолучитьФорму("ФормаВыбора").ОткрытьМодально();
							Иначе
								строкаТовар.Номенклатура = Результат[0].Номенклатура;
							КонецЕсли;
						иначе
							Запрос.УстановитьПараметр("Артикул", "%="+строкаТаблицы.Наименование);
							Результат = Запрос.Выполнить().Выгрузить();
							Если Результат.Количество() > 0 Тогда
								Если Результат.Количество() > 1 Тогда
									Ном.Загрузить(Результат);
									строкаТовар.Номенклатура = ЭтотОбъект.ПолучитьФорму("ФормаВыбора").ОткрытьМодально();
								Иначе
									строкаТовар.Номенклатура = Результат[0].Номенклатура;
								КонецЕсли;
							иначе 
								Запрос.УстановитьПараметр("Артикул", строкаТаблицы.Наименование);
								Запрос.Текст = СтрЗаменить(Запрос.Текст, "Номенклатура.Артикул", "ПОДСТРОКА(Номенклатура.Артикул, 0, &Длина)");
								Запрос.УстановитьПараметр("Длина", СтрДлина(строкаТаблицы.Наименование));
								Результат = Запрос.Выполнить().Выгрузить();
								Если Результат.Количество() > 0 Тогда
									Если Результат.Количество() > 1 Тогда
										Ном.Загрузить(Результат);
										строкаТовар.Номенклатура = ЭтотОбъект.ПолучитьФорму("ФормаВыбора").ОткрытьМодально();
									Иначе
										строкаТовар.Номенклатура = Результат[0].Номенклатура;
									КонецЕсли;
								КонецЕсли;	
							КонецЕсли;
						КонецЕсли;	
					КонецЕсли;
				КонецЕсли;
			//КонецМиронычев АЕ
			
			КонецЕсли;
		
			Если ЗначениеЗаполнено(строкаТовар.Номенклатура) Тогда
				Если флСезонныйЗаказПокупателя<>2 и флСезонныйЗаказПокупателя<>5 тогда
					строкаТовар.ЕдиницаИзмерения = строкаТовар.Номенклатура.ЕдиницаХраненияОстатков;
					строкаТовар.Коэффициент      = строкаТовар.ЕдиницаИзмерения.Коэффициент;
					строкаТовар.Вес 			 = строкаТовар.ЕдиницаИзмерения.Вес; //+++
					Если флСезонныйЗаказПокупателя <> 4 и флСезонныйЗаказПокупателя<>5 тогда
						строкаТовар.СтавкаНДС=Перечисления.СтавкиНДС.НДС18;
					КонецЕсли;
					Если флСезонныйЗаказПокупателя = 4 и флСезонныйЗаказПокупателя<>5 тогда
						строкаТовар.Склад = Справочники.Склады.НайтиПоКоду("00278");
						строкаТовар.Качество = Справочники.Качество.Новый;
					КонецЕсли;
					ЗаполнитьЕдиницуЦенуПродажиТабЧасти(строкаТовар, ДокументОбъект, ВалютаРегламентированногоУчета); 
				КонецЕсли;
			Иначе
				сообщить("в строке № "+строка(сч1)+" - не найдена номенклатура по "+ПолеВвода1+": "+строкаТаблицы.Код, СтатусСообщения.Внимание);
							
			КонецЕсли;
			
			
		Исключение
			сообщить("в строке № "+строка(сч1)+" - Ошибка: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
			Продолжить;
		КонецПопытки;
		
		строкаТовар.Количество = строкаТаблицы.Количество;
		Если флСезонныйЗаказПокупателя <> 2 Тогда //В задании на заказ поставщику цены нет!
			строкаТовар.Цена = строкаТаблицы.Цена;
		КонецЕсли;
		
		Если флСезонныйЗаказПокупателя <> 4 и флСезонныйЗаказПокупателя <> 2 и флСезонныйЗаказПокупателя <> 5 тогда
			
			РассчитатьСуммуТабЧасти(строкаТовар, ДокументОбъект);
			РассчитатьСуммуНДСТабЧасти(строкаТовар, ДокументОбъект);
		КонецЕсли;
		
		сч1 = сч1+1;
	КонецЦикла;
	Если флСезонныйЗаказПокупателя=0 тогда 
	КонецЕсли;
	ВремяВыполнения = ТекущаяДата() - НачВремя;
	Если (ВремяВыполнения >= 1) тогда
		парамЗапроса = "Обработано "+строка(сч-счПуст)+"/"+строка(сч)+" стр. для нового "+?(флСезонныйЗаказПокупателя,"Сезонного ","")+" заказа покупателя"; 
		ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 138, ВремяВыполнения, "Кнопка [Выполнить] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
	КонецЕсли;
	
	ФормаЗаказа.Открыть();
	
КонецПроцедуры

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, ДоговорКонтрагента,
	Перечисления.ВидыДоговоровКонтрагентов.СПокупателем, СтандартнаяОбработка);
	ДоговорКонтрагентаПриИзменении(Неопределено);
КонецПроцедуры

Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ДоговорКонтрагента) тогда
		Контрагент = ДоговорКонтрагента.Владелец;
	КонецЕсли;	
КонецПроцедуры

Процедура ПриИзмененииНоменклатурыТоваров(СтрокаТабличнойЧасти,ДокументОбъект)
	ВалютаРегламентированногоУчета=Константы.ВалютаРегламентированногоУчета.Получить();
	// Заполняем реквизиты табличной части.
	
	ЗаполнитьСтавкуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект); 
	РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект);
	РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект);
	
КонецПроцедуры // ПриИзмененииНоменклатурыТоваров()

Процедура ЗаказПокупателяПриИзменении(Элемент)
	Если флСезонныйЗаказПокупателя=1 или флСезонныйЗаказПокупателя=2 Тогда
		элементыФормы.СезонныйЗаказ.Видимость = Истина;
		ЭлементыФормы.НадписьСезонныйЗаказ.Видимость = истина;
		
		МассивТипов = Новый Массив();
		Если флСезонныйЗаказПокупателя = 1 тогда
			МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателяСезонный"));
		иначеЕсли флСезонныйЗаказПокупателя = 2 тогда
			МассивТипов.Добавить(Тип("ДокументСсылка.ЗаданиеНаЗаказПоставщику"));
		КонецЕсли;
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		ЭлементыФормы.СезонныйЗаказ.ОграничениеТипа=ОписаниеТипов;
	иначе
		элементыФормы.СезонныйЗаказ.Видимость = Ложь;
		ЭлементыФормы.НадписьСезонныйЗаказ.Видимость = ложь;
		СезонныйЗаказ = "";
	конецЕсли;
КонецПроцедуры

Процедура СезонныйЗаказПриИзменении(Элемент)
	Если СезонныйЗаказ.Дата< НачалоДня(ТекущаяДата())-7*24*60*60 тогда
		Сообщить("Подгружать можно только в сезонные заказы, созданные в последние 2 недели");
		СезонныйЗаказ = "";
	конецесли;	
КонецПроцедуры

Процедура МногоСтрокВЯчейкеПриИзменении(Элемент)
	ЭлементыФормы.НадписьРазделитель.Видимость = МногоСтрокВЯчейке;
	ЭлементыФормы.Разделитель.Видимость = МногоСтрокВЯчейке;
КонецПроцедуры



ВалютаРегламентированногоУчета=Константы.ВалютаРегламентированногоУчета.Получить();