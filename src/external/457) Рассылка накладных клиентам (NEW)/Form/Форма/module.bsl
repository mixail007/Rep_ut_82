перем ТекстСообщения0;


//Проверка выпоняется по алгоритму описанному в печатной форме "ТОРГ-12 (Яршинторг)."
//Преверяется наличие документа в БП.Если документ не находим-менеджеры,бухгалтеры должны это исправить
Процедура ПроверитьПередВыгрузкой(СписокКОнтрагентов,Отказ)
	
	Отказ = Ложь;
	
	Для Каждого Контрагент из СписокКОнтрагентов Цикл 
		
		СтруктураОтбора  = Новый Структура("Контрагент",Контрагент.Значение);
		МассивРеализаций = Реализации.НайтиСтроки(СтруктураОтбора);
		
		Для Каждого Стр Из МассивРеализаций Цикл 
			ССылканаОбъект =  Стр.Реализация;
			Если ССылканаОбъект.Дата> Дата('20160504000000') 
				и Найти(СсылканаОбъект.договорКонтрагента.Наименование,"*")=0 
				и СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.ШинтрейдЯрославль 
				и СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.ФормулаАвтоПлюс 
				и СсылкаНаОбъект.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.НайтиПоКоду("Я0004") Тогда
				Если ССылканаОбъект.контрольСумма <> СсылкаНаОбъект.СуммаДокумента или  ССылканаОбъект.контрольКоличество <> СсылкаНаОбъект.Товары.Итог("Количество") Тогда
					Если ССылканаОбъект.контрольСумма <> СсылкаНаОбъект.СуммаДокумента или  ССылканаОбъект.контрольКоличество <> СсылкаНаОбъект.Товары.Итог("Количество") Тогда
						Сообщить("Документ: " + СсылкаНаОбъект + " Не совпадают с печатной формой сумма или количество документа. Обратитесь в бухгалтерию!");
						Отказ = Истина;
					КонецЕсли;   
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// сформироватьФайлы
	
	АдресаКонтрагентов.Очистить();
	Реализации.Очистить();
	//в бухгалтерии - нет ограничений по менеджерам
	//Если СписокМенеджеров.Количество()>0 тогда
	//	СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджера(СписокМенеджеров);
	//иначе				
	//	СписокКонтрагентовМенеджера = новый СписокЗначений;
	//КонецЕсли;	
	
	//Адиянов<<<
	ИсключаемыеКонтрагенты = Новый Массив;
	ИсключаемыеКонтрагенты.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001125"));  // ШинТрейд Ярославль (Контаер) 
	ИсключаемыеКонтрагенты.Добавить(Справочники.Контрагенты.НайтиПоКоду("92923"));    // ПромПроект
	ИсключаемыеКонтрагенты.Добавить(Справочники.Контрагенты.НайтиПоКоду("92633"));    // Шинный Союз
	
	ИсключаемыеТипыДоговоров = Новый Массив;
	ИсключаемыеТипыДоговоров.Добавить(Справочники.ТипыДоговоров.НайтиПоКоду("Я0004"));  // Формула Авто
	ИсключаемыеТипыДоговоров.Добавить(Справочники.ТипыДоговоров.НайтиПоКоду("Я0007"));  // Формула авто плюс 
	ИсключаемыеТипыДоговоров.Добавить(Справочники.ТипыДоговоров.НайтиПоКоду("Я0006"));  // Шинтрейд ярославль (экспорт)
	//Адиянов>>>
	
	ЗапросКонтрагенты=Новый Запрос;
	ЗапросКонтрагенты.Текст="ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК СТРОКА(1000))) = """"
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ТребуетсяОтправкаПоПочте,
	|	А.Контрагент КАК КОнтрагент,
	|	ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК ЭлектронныйАдрес
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РеализацияТоваровУслуг.Контрагент КАК Контрагент
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
	|"+?(СписокМенеджеров.Количество()>0, " И РеализацияТоваровУслуг.ДоговорКонтрагента.ОтветственноеЛицо в (&СписокМенеджеров) ","")+"
	|		И НЕ РеализацияТоваровУслуг.Номер ПОДОБНО &ПризнакПени
	|		И НЕ РеализацияТоваровУслуг.ДоговорКонтрагента.Наименование ПОДОБНО ""%*%""
	|		И РеализацияТоваровУслуг.Проведен
	|		И НЕ РеализацияТоваровУслуг.Комментарий ПОДОБНО ""%Излишки%""
//+++ 23.01.2018	|       И РеализацияТоваровУслуг.Контрагент.ОтсылатьНаПочтуДанныеПоОтгрузке = Ложь
	//Адиянов<<< Исключаем некторые типы договоров и контрагентов
	|   	И НЕ РеализацияТоваровУслуг.ДоговорКонтрагента.ТипДоговора В (&ИсключаемыеТипыДоговоров)
	|       И НЕ РеализацияТоваровУслуг.Контрагент В (&ИсключаемыеКонтрагенты)
	//Адиянов>>>     
	
//+++ 10.04.2018 ---- только тем, у кого нет галки! --------------------------	
	|       И РеализацияТоваровУслуг.Контрагент.ОтсылатьНаПочтуДанныеПоОтгрузке = ЛОЖЬ
	
    |		) КАК А
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КонтактнаяИнформация.Объект КАК Объект,
	|			КонтактнаяИнформация.Представление КАК Представление
	|		ИЗ
	|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ГДЕ
	|			КонтактнаяИнформация.Тип = &Тип
	|			И КонтактнаяИнформация.Вид = &Вид) КАК КонтактнаяИнформация
	|		ПО А.Контрагент = КонтактнаяИнформация.Объект
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТребуетсяОтправкаПоПочте УБЫВ,
	|	КОнтрагент
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Если Флажок1 Тогда
		ЗапросКонтрагенты.Текст = СтрЗаменить(ЗапросКонтрагенты.Текст,"И НЕ РеализацияТоваровУслуг.Номер ПОДОБНО &ПризнакПени","И РеализацияТоваровУслуг.Номер ПОДОБНО &ПризнакПени");
	КонецЕсли;
	ЗапросКонтрагенты.УстановитьПараметр("СписокМенеджеров",СписокМенеджеров);
	ЗапросКонтрагенты.УстановитьПараметр("НачДата",НачДата);
	ЗапросКонтрагенты.УстановитьПараметр("КонДата",КонецДня(КонДата));
	ЗапросКонтрагенты.УстановитьПараметр("Тип",Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	ЗапросКонтрагенты.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00013")); //+++ Адрес электронной почты для обмена документами
	ЗапросКонтрагенты.УстановитьПараметр("ПризнакПени","%ПЕ%"); 
	//Адиянов<<<
	ЗапросКонтрагенты.УстановитьПараметр("ИсключаемыеТипыДоговоров",ИсключаемыеТипыДоговоров); 
	ЗапросКонтрагенты.УстановитьПараметр("ИсключаемыеКонтрагенты",ИсключаемыеКонтрагенты); 
	//Адиянов>>>

	
	//+++ если несколько эл.адресов у 1 контрагента - то через запятую
	//Выборка=ЗапросКонтрагенты.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Пока Выборка.Следующий() Цикл
	//	СтрокаАдрес=АдресаКонтрагентов.Добавить();	
	//	СтрокаАдрес.Контрагент = Выборка.Контрагент;
	//	//ЗаполнитьЗначенияСвойств(СтрокаАдрес,Выборка);
	//	выборкаЭлАдресов = Выборка.Выбрать();
	//	стрЭлАресов = "";
	//	Пока выборкаЭлАдресов.Следующий() Цикл
	//		стрЭлАресов =стрЭлАресов +?(стрЭлАресов = "", "", ", ")+ выборкаЭлАдресов.ЭлектронныйАдрес;
	//	КонецЦикла;
	//	СтрокаАдрес.ЭлектронныйАдрес =  стрЭлАресов;
	//КонецЦикла;	
	АдресаКонтрагентов.Очистить();
	АдресаКонтрагентов.Загрузить( ЗапросКонтрагенты.Выполнить().Выгрузить() );
	
	
	//------------------------------------------------------------------------------	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Истина как Выбран,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	ЕСТЬNULL(СчетФактураВыданный.Ссылка, """") КАК ЗаказПокупателя
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		"+?(ВсеРеализации, "ЛЕВОЕ", "Правое")+" СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО (РеализацияТоваровУслуг.Ссылка = СчетФактураВыданный.ДокументОснование)
	|ГДЕ
	|	РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
	|		И НЕ РеализацияТоваровУслуг.Номер ПОДОБНО &ПризнакПени
	|		И НЕ РеализацияТоваровУслуг.ДоговорКонтрагента.Наименование ПОДОБНО ""%*%""
	|"+?(СписокМенеджеров.Количество()>0, " И РеализацияТоваровУслуг.ДоговорКонтрагента.ОтветственноеЛицо в (&СписокМенеджеров) ","")+"
	|	И РеализацияТоваровУслуг.Проведен
	|	И РеализацияТоваровУслуг.НеОтправлятьВБухгалтерию = ЛОЖЬ
	//Адиянов<<< Исключаем некторые типы договоров и контрагентов
	|   И НЕ РеализацияТоваровУслуг.ДоговорКонтрагента.ТипДоговора В (&ИсключаемыеТипыДоговоров)
	|   И НЕ РеализацияТоваровУслуг.Контрагент В (&ИсключаемыеКонтрагенты)
	//Адиянов>>>
	//|	И (НЕ СчетФактураВыданный.ПометкаУдаления)
	//|	И СчетФактураВыданный.Дата >= &НачДата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	РеализацияТоваровУслуг.Дата,
	|	РеализацияТоваровУслуг.Номер
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Если Флажок1 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И НЕ РеализацияТоваровУслуг.Номер ПОДОБНО &ПризнакПени","И РеализацияТоваровУслуг.Номер ПОДОБНО &ПризнакПени");
	КонецЕсли;
	Запрос.УстановитьПараметр("НачДата",НачДата);
	Запрос.УстановитьПараметр("КонДата",КонецДня(КонДата));   
	Запрос.УстановитьПараметр("СписокМенеджеров",СписокМенеджеров);
	Запрос.УстановитьПараметр("ПризнакПени","%ПЕ%"); 
	//Адиянов<<<
	Запрос.УстановитьПараметр("ИсключаемыеТипыДоговоров",ИсключаемыеТипыДоговоров);
	Запрос.УстановитьПараметр("ИсключаемыеКонтрагенты",ИсключаемыеКонтрагенты); 
	//Адиянов>>>
	
	Реализации.Очистить();
	Реализации = Запрос.Выполнить().Выгрузить(); // ТабЗнач
	
КонецПроцедуры


Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	КнопкаВыполнитьНажатие(Неопределено);
КонецПроцедуры


Процедура ОсновныеДействияФормыДействиеОтправить(Кнопка)
	Если НЕ ЭлементыФормы.Флажок1.Значение и НЕ ЭлементыФормы.Флажок2.Значение тогда
		сигнал();
		Предупреждение("Выберите что отправлять - Накладную и/или Счет", 30);
		возврат;
	КонецЕсли;	
	
	
	СписокКонтрагентов=Новый СписокЗначений;
	СписокФайловВложений=Новый СписокЗначений;
	Для каждого СТрокаКонтрагент ИЗ АдресаКонтрагентов Цикл
		Если СТрокаКонтрагент.ТребуетсяОтправкаПоПочте И СтрДлина(СокрЛП(СТрокаКонтрагент.ЭлектронныйАдрес))>0 Тогда
			СписокКонтрагентов.Добавить(СТрокаКонтрагент.Контрагент,СТрокаКонтрагент.ЭлектронныйАдрес);
		иначе
			СТрокаКонтрагент.ТребуетсяОтправкаПоПочте = ложь; //нельзя отправить на пустой адрес
		КОнецЕсли;	
	КонецЦикла;	
	
	Если СписокКОнтрагентов.Количество()>0 тогда
		Если Вопрос("Вы действительно хотите отправить электронные письма 
				    |для "+строка(СписокКОнтрагентов.Количество())+" выбранных Контрагентов?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Да) = КодВозвратаДиалога.Нет тогда
			Возврат;
		КонецЕсли;	
	иначе
		сигнал();
		Предупреждение("Выберите Контрагентов, у которых есть эл.адрес!
						|   Отправка писем отменена!", 30);
		возврат;
	КонецЕсли;
	
	//Адиянов<<<
	Отказ = Ложь;
	//+++ 10.04.2018 ПроверитьПередВыгрузкой(СписокКОнтрагентов,Отказ);
	Если Отказ Тогда 
		//Возврат;
	КонецЕсли;
	//Адиянов>>>
	
	
	//!!! Выборка = Реализации;
	  
//========================Проверим уч.запись======================
	  глТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	  //УЗ =  //УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяУчетнаяЗапись");
	  
  //УЗнаименование = "";
  
   		Если НЕ ЗначениеЗаполнено(УЗнаименование) тогда
			    УЗнаименование = "no-reply@yst76.ru";
		КонецЕсли;
		
		УЗ = справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию(УЗнаименование);//10.04.2018
        
		
	  //-----------------проверим папку временных файлов-----------------------
	  Состояние("Идет отправка писем...");  i=0;
	 
	  КаталогВременныхФайлов = КаталогВременныхФайлов();
	  	//КаталогВременныхФайлов =стрЗаменить(КаталогВременныхФайлов,"Local Settings\Temp\","Мои документы\");
       ВременнаяПапка = "\\sigma\Общая папка\Рассылка писем УПД\";//10.04.2018 
	  
	  файлПроверки = новый файл(ВременнаяПапка);
	  Если НЕ файлПроверки.Существует() тогда
			КаталогВременныхФайлов = КаталогВременныхФайлов();
			ВременнаяПапка = КаталогВременныхФайлов;   //"C:\"; // "D:\Рассылка\";
		КонецЕсли;	

	  
	  //===========================================================================
	  Сообщить(" ");  i=0; 	  
	  Сообщить(">>>>> "+Строка(ТекущаяДата())+" Начата отправка эл.писем для "+строка(СписокКОнтрагентов.Количество())+" контрагентов.");
	  Для каждого Контрагент ИЗ СписокКОнтрагентов Цикл
		  i=i+1; 	  
		  //Выборка.Сбросить();
		  СписокФайловВложений.Очистить();
		  j=0; состояние("Идет формирование "+строка(i)+"-го письма для "+Контрагент.Значение+"...");
		  
		  для i=0 по Реализации.Количество()-1 цикл
			  //Пока Выборка.Следующий() Цикл
			  Выборка = Реализации[i];  
			  Если НЕ выборка.выбран тогда 
				  продолжить;
			  КонецЕсли;
			  
			  Если Контрагент.Значение=Выборка.Контрагент Тогда
				  	вр0 = ТекущаяУниверсальнаяДатаВМиллисекундах();
			 	  ДокументОбъект=Выборка.Реализация.ПолучитьОбъект();
				  
					  ТабличныйДокументОбъект = неопределено;
				  
					  //----------------СчетФактуры в ТЧ называются ЗаказПокупателя!!!-----------------------------------
				  Если ЭлементыФормы.Флажок2.Значение тогда
					  
					  j=j+1;
					  ИмяФайлаСообщения="УПД_"+СокрЛП(ДокументОбъект.Номер)+".xls";
					  состояние("Идет формирование "+строка(j)+" файла для "+строка(Выборка.Контрагент)+": "+ИмяФайлаСообщения);
					  
					  
					  //+++( 11.01.2012 "СчетФактура ЯШТ"
					  //	ДокументОбъект.Печать("СчетФактура", 1, ложь, ложь, Истина, ТабличныйДокументОбъект); 
					  
					  //10.04.2018
					  Попытка
						файл1 =  Выборка.Реализация.УПД.Получить();
						файл1.Записать(КаталогВременныхФайлов+"УПД.mxl");

						ТабличныйДокументОбъект = новый ТабличныйДокумент;
						ТабличныйДокументОбъект.Прочитать(КаталогВременныхФайлов+"УПД.mxl");
 					  
					  //обр = Справочники.ДополнительныеПечатныеФормы.НайтиПоНаименованию("ТОРГ-12 (Яршинторг).");
					  //Если обр = неопределено тогда
					  //	сообщить("Не найдена дополнительная печатная форма ""ТОРГ-12 (Яршинторг).""!");
					  //иначе
					  //	ИмяФайла = временнаяПапка+"PrnFormSFyst.tmp";
					  //	ОбъектВнешнейФормы = обр.ПолучитьОбъект();
					  //	
					  //	ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
					  //	ДвоичныеДанные.Записать(ИмяФайла);
					  //Обработка = ВнешниеОбработки.Создать(ИмяФайла);
					  //Обработка.СсылкаНаОбъект = ДокументОбъект.ссылка; //Инициализировать(ДокументОбъект, "");
					  //ТабличныйДокументОбъект = Обработка.ЭтотОбъект.Печать();
							  
							  
							  сообщить(строка(ТекущаяДата())+" Идет Запись "+строка(j)+" файла для "+строка(Выборка.Контрагент)+": "+ИмяФайлаСообщения);
							  ТабличныйДокументОбъект.Записать(временнаяПапка+ИмяФайлаСообщения, ТипФайлаТабличногоДокумента.XLS);
							  СписокФайловВложений.Добавить(ВременнаяПапка+ИмяФайлаСообщения);
							  состояние(" ");
							  
//+++( 10.04.2018 ---------------------------------------------------------------------------------------------------------------------------		  
		  Тема = "Отправка груза от ЗАО ТК ""Яршинторг""";
						ТекстСообщения = "Добрый день,
										  |
										  |   Из компании ""Яршинторг"" к вам отправлен автомобиль с товаром,
										  |
										  |   " + СокрЛП(Строка(ДокументОбъект.МаркаАвтомобиля)) + ", гос. номер: " + Строка(ДокументОбъект.ГосНомерАвтомобиля) + ",
										  |
										  |   Водитель: " + ДокументОбъект.Водитель + ", " + ДокументОбъект.ВидПеревозки + "
										  |
										  |"+?(ДокументОбъект.СрокДоставки>'00010101',"Ориентировочная дата прибытия машины: " + Строка(Формат( ДокументОбъект.СрокДоставки ,"ДФ=dd.MM.yyyy")) +"
										  |", "")+" 
										  
	|Создавать новые заказы и следить за состоянием ваших заказов
	|	Вы можете на нашем сайте: http://terminal.yst.ru
	|
	|       	Это письмо создано автоматически.
	|      Отвечать и писать на этот адрес - НЕ НУЖНО!
	|
	|По всем текущим вопросам - обращайтесь к Вашему менеджеру нашей компании.
	|";
//+++)							  
						  Исключение
							  сообщить("Ошибка при формировании УПД или записи файла "+временнаяПапка+ИмяФайлаСообщения + ОписаниеОшибки());
						  конецпопытки;
			//	 КонецЕсли;
					  //+++) 11.01.2012
					  
					  // {{ Счет на оплату
					  Если Выборка.Контрагент.ПечатьСчетаИзРеализации тогда
						  ТабДокСчет = ДокументОбъект.ПечатьСчетаЗаказа("Счет");
						  СчетИмяФайла = "Счет_" + СокрЛП(ДокументОбъект.Номер)+".xls";
						  ТабДокСчет.Записать(ВременнаяПапка + СчетИмяФайла, ТипФайлаТабличногоДокумента.XLS);
						  СписокФайловВложений.Добавить(ВременнаяПапка + СчетИмяФайла);
					  КонецЕсли;
					  // }} Счет на оплату
					  
				  ИначеЕсли ЭлементыФормы.Флажок2.Значение и (не ЗначениеЗаполнено(Выборка.ЗаказПокупателя)) тогда
				  	состояние(" ");
				  	сообщить("х х х Для реализации № "+СокрЛП(Выборка.Реализация.Номер)+" - нет УПД!", СтатусСообщения.Внимание);
				 КонецЕсли;
				  
				  //+++ Плотников Торг 12
						  
			  КонецЕсли;
			  
		  КонецЦикла;	 
		  
		  состояние("Идет отправка "+строка(i)+"-го письма для "+Строка(Выборка.Контрагент) );
		  
		 // ПослатьЯШТ(Контрагент.Представление,СписокФайловВложений, УЗнаименование, УЗпароль);	  
		 яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(Контрагент.Представление,СписокФайловВложений, УЗ, ТекстСообщения, Тема);
//------------------------------------------------------------------------------------------------------------------------------------------

		  //  Сообщить(" >>> "+строка(i)+" эл.письмо отправлено контрагенту: "+Строка(Контрагент.Значение)+" на эл.адрес: "+Контрагент.Представление+" содержит "+строка(j)+" вложенных файлов...", СтатусСообщения.Информация);	
		  
	  КонецЦикла;	 
	  
		Сообщить(">>>>> "+Строка(ТекущаяДата())+" Завершена отправка "+строка(j)+" файлов с осн.учетной записи эл.почты: "+УЗНаименование);	
		Сообщить(" ");
	 	сообщить("Все выгруженные файлы находятся во временной папке:  "+временнаяПапка);
		Сообщить(" ");
	 	
	 	Сигнал();сигнал();
		Предупреждение("Отправка "+строка(j)+" файлов завершена!", 10);
		
		
КонецПроцедуры


Процедура ПриОткрытии()
	Если НачДата=Дата(1,1,1) тогда
		НачДата=ТекущаяДата();
	КонецЕсли;
	Если КонДата=Дата(1,1,1) тогда
		КонДата=КонецДня(ТекущаяДата());
	КонецЕсли;
	Если НЕ ЭлементыФормы.Флажок1.Значение и НЕ ЭлементыФормы.Флажок1.Значение тогда
		ЭлементыФормы.Флажок2.Значение = Истина;
		ЭлементыФормы.Флажок3.Значение = Истина;
	КонецЕсли;
	
	Если КаталогВременныхФайлов = "" тогда
		КаталогВременныхФайлов =КаталогВременныхФайлов();
		//КаталогВременныхФайлов =стрЗаменить(КаталогВременныхФайлов,"Local Settings\Temp\","Мои документы\");
	КонецЕсли;
	
	УЗнаименование = "1c@yst.ru";
	ЭлементыФормы.УЗнаименование.СписокВыбора.Добавить("1c@yst.ru");
	ЭлементыФормы.УЗнаименование.СписокВыбора.Добавить("no-reply@yst76.ru");
	
	//---------------------------------
	
	Если СокрЛП(ТекстСообщения) = "" тогда 
		ТекстСообщения = ТекстСообщения0;
		Если СписокМенеджеров.Количество()=1 тогда
			ТекстСообщения = стрЗаменить(ТекстСообщения, "С уважением,", "С уважением,
			|"+строка(СписокМенеджеров[0].Значение) );
		КонецЕсли;					 
	КонецЕсли;
	
	ВсеРеализации = Истина;
	

	
КонецПроцедуры


Процедура ПослатьЯШТ(АдресПолучателя,СписокФайловВложений, УЗимя, УЗпароль)
	   //ТекстПисьма = ЭтаФорма.ЭлементыФормы.ПолеHTMLДокумента.ПолучитьТекст();
	    	
	    ИПП=Новый ИнтернетПочтовыйПрофиль;
		ИПП.АдресСервераSMTP= ?(Найти(УЗимя, "@yst76.ru")>0, "mail.yst76.ru", "127.0.0.1" );
		ИПП.ПортSMTP=25; 
		//Если УЗ.ТребуетсяSMTPАутентификация Тогда
			ИПП.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
			ИПП.ПользовательSMTP   = СокрЛП(УЗимя); //?(Найти(УЗимя, "@yst76.ru")=0, СокрЛП(УЗимя),);
			ИПП.ПарольSMTP         = УЗпароль;
		//Иначе
		//	ИПП.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
		//	ИПП.ПарольSMTP         = "";
		//	ИПП.ПользовательSMTP   = "";
		//КонецЕсли;
		Письмо=Новый ИнтернетПочтовоеСообщение;
		Письмо.Отправитель=УЗимя;
	    //+++( 19.12.2011 - разбор адреса на несколько адресов
		i = Найти(АдресПолучателя,";"); j=Найти(АдресПолучателя, ",");
		k=?(i>0 и i>j,  i, ?(j>0 и j>i, j, 0) );
			
		Если i=0 и j=0 тогда
			Письмо.Получатели.Добавить(АдресПолучателя);
		иначе
			АдрОстаток = СокрЛП(АдресПолучателя);
			пока (k>0) цикл
				Адр1 = Лев(АдрОстаток, k-1);
				Если СокрЛП(Адр1)<>"" и Найти(Адр1,"@")>0 и Найти(Адр1,".")>0 тогда
					Письмо.Получатели.Добавить(СокрЛП(Адр1));
				КонецЕсли;
				АдрОстаток = Прав(АдрОстаток, стрДлина(АдрОстаток)-k);
				i = Найти(АдрОстаток,";"); j=Найти(АдрОстаток, ",");
				k=?(i>0 и i>j,  i, ?(j>0 и j>i, j, 0) );
			КонецЦикла;
			Если СокрЛП(АдрОстаток)<>"" и Найти(АдрОстаток,"@")>0 и Найти(АдрОстаток,".")>0 тогда
				Письмо.Получатели.Добавить(СокрЛП(АдрОстаток));
			КонецЕсли;

		КонецЕсли; //+++ )
        // Письмо.Получатели.Добавить("smirnov@yst.ru");
		Если ЗначениеЗаполнено(СписокФайловВложений) И СписокФайловВложений.Количество()>0 Тогда
			Для Каждого ТекАдр Из СписокФайловВложений Цикл
				Письмо.Вложения.Добавить(ТекАдр.Значение);
			КонецЦикла;
		КонецЕсли;
        Письмо.Тема="Документы от ЗАО ТК ""Яршинторг"" "+?(КонДата=НачДата, "за "+Формат(НачДата,"ДЛФ=D"), " c "+Формат(НачДата,"ДЛФ=D")+" по "+Формат(КонДата,"ДЛФ=D") );
		Письмо.ИмяОтправителя ="ЗАО ТК ""Яршинторг"", г.Ярославль";
	    Письмо.Организация ="ЗАО ТК ""Яршинторг"", г.Ярославль";
	    Письмо.Тексты.Добавить(СокрЛП(ЭлементыФормы.ТекстСообщения.Значение),ТипТекстаПочтовогоСообщения.простойТекст);
		
		Почта=Новый ИнтернетПочта;
		попытка
			Почта.Подключиться(ИПП);
	    	Почта.Послать(Письмо);
	    	Почта.Отключиться();
			сообщить(" >>>  Письмо отправлено на эл.адрес: "+АдресПолучателя+". "+строка(СписокФайловВложений.Количество())+" вложенных файлов...", СтатусСообщения.Информация);
		исключение
			сообщить("xxxxx Ошибка при отправке письма на эл.адрес: "+АдресПолучателя+" - "+ОписаниеОшибки(), СтатусСообщения.Внимание);
		конецПопытки;
КонецПроцедуры

Процедура НачДатаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если КонДата<НачДата тогда
		КонДата=НачДата;
	КонецЕсли;	
КонецПроцедуры

Процедура НачДатаПриИзменении(Элемент)
	Если КонДата<НачДата тогда
		КонДата=НачДата;
	КонецЕсли;
КонецПроцедуры

Процедура КонДатаПриИзменении(Элемент)
	Если КонДата<НачДата тогда
		НачДата=КонДата;
	КонецЕсли;
КонецПроцедуры


Процедура КонДатаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если КонДата<НачДата тогда
		НачДата=КонДата;
	КонецЕсли;
КонецПроцедуры


Процедура АдресаКонтрагентовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ТребуетсяОтправкаПоПочте тогда
		ОформлениеСтроки.цветФона = webЦвета.СветлоЖелтый;
		ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
	КонецЕсли;	
	
	 ОформлениеСтроки.Ячейки.ТребуетсяОтправкаПоПочте.ОтображатьТекст = ЛОЖЬ;
	 //ОформлениеСтроки.Ячейки.ТребуетсяОтправкаПоПочте.ОтображатьФлажок = Истина;
	 //ОформлениеСтроки.Ячейки.ТребуетсяОтправкаПоПочте.Флажок = ?(ДанныеСтроки.ТребуетсяОтправкаПоПочте=Истина, 1, 0);
КонецПроцедуры

//------------------------------------------------
Процедура КоманднаяПанель2ВыбратьВсе(Кнопка)
	Для i=0 по ЭлементыФормы.АдресаКонтрагентов.Значение.Количество()-1 цикл
		стр = ЭлементыФормы.АдресаКонтрагентов.Значение[i];
		стр.ТребуетсяОтправкаПоПочте = Истина;
	КонецЦикла;
	ЭлементыФормы.АдресаКонтрагентов.ОбновитьСтроки();
	
	Для i=0 по Реализации.Количество()-1 цикл
		стр = Реализации[i];
		стр.Выбран = Истина;
	КонецЦикла;
	ЭлементыФормы.Реализации.ОбновитьСтроки();

	
КонецПроцедуры


Процедура КоманднаяПанель2УбратьВсе(Кнопка)
	Для i=0 по ЭлементыФормы.АдресаКонтрагентов.Значение.Количество()-1 цикл
		стр = ЭлементыФормы.АдресаКонтрагентов.Значение[i];
		стр.ТребуетсяОтправкаПоПочте = ЛОЖЬ;
	КонецЦикла;	
	ЭлементыФормы.АдресаКонтрагентов.ОбновитьСтроки();
	
	Для i=0 по Реализации.Количество()-1 цикл
		стр = Реализации[i];
		стр.Выбран = ЛОЖЬ;
	КонецЦикла;
	ЭлементыФормы.Реализации.ОбновитьСтроки();
	
 КонецПроцедуры


 Процедура КоманднаяПанель2Инверсия(Кнопка)
	 Для i=0 по ЭлементыФормы.АдресаКонтрагентов.Значение.Количество()-1 цикл
		стр = ЭлементыФормы.АдресаКонтрагентов.Значение[i];
		стр.ТребуетсяОтправкаПоПочте = не стр.ТребуетсяОтправкаПоПочте;
	КонецЦикла;	
	ЭлементыФормы.АдресаКонтрагентов.ОбновитьСтроки();
	
	Для i=0 по Реализации.Количество()-1 цикл
		стр = Реализации[i];
		стр.Выбран = НЕ стр.Выбран;
	КонецЦикла;
	ЭлементыФормы.Реализации.ОбновитьСтроки();
 	
КонецПроцедуры




 Процедура АдресаКонтрагентовПриАктивизацииСтроки(Элемент)
	 //позиционируемся на реализации
	 попытка
		 стрКонтр = ЭлементыФормы.АдресаКонтрагентов.ТекущиеДанные;
	Если ЗначениеЗаполнено(стрКонтр) тогда	 
		
		 СтрокиРеализ = Реализации.НайтиСтроки(новый Структура("Контрагент", стрКонтр.Контрагент));
		 
		 Если СтрокиРеализ.Количество()>0 тогда
			ЭлементыФормы.Реализации.ТекущаяСтрока = СтрокиРеализ[0];
	 	КонецЕсли;	 
			
		для i=0 по СтрокиРеализ.Количество()-1 цикл
			стр = СтрокиРеализ[i];
			стр.Выбран = стрКонтр.ТребуетсяОтправкаПоПочте;
		КонецЦикла;
		
	 КонецЕсли;	 
		
	 исключение
	 конецПопытки;	
 КонецПроцедуры


 Процедура АдресаКонтрагентовТребуетсяОтправкаПоПочтеПриИзменении(Элемент)
	 //ОформлениеСтроки.Ячейки.ТребуетсяОтправкаПоПочте.ОтображатьФлажок = ЛОЖЬ;
КонецПроцедуры


Процедура АдресаКонтрагентовЭлектронныйАдресПриИзменении(Элемент)
	Сообщить("Для сохранения эл.адресов - откройте карточку Контрагента и на закладке Контакты - введите ""Адрес электронной почты для обмена документами"" ");
КонецПроцедуры


Процедура КаталогВременныхФайловНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
ДиалогОткрытияФайла.Каталог = КаталогВременныхФайлов;
ДиалогОткрытияФайла.Заголовок = "Выберите каталог временных файлов";
Если ДиалогОткрытияФайла.Выбрать() Тогда
КаталогВременныхФайлов = ДиалогОткрытияФайла.Каталог;
КонецЕсли;

КонецПроцедуры

Процедура КаталогВременныхФайловОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	КаталогВременныхФайлов = КаталогВременныхФайлов();
	//КаталогВременныхФайлов =стрЗаменить(КаталогВременныхФайлов,"Local Settings\Temp\","Мои документы\");
КонецПроцедуры

Процедура КаталогВременныхФайловОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Каталог = КаталогВременныхФайлов;
	Фильтр = "Excel-файлы (*.xls)|*.xls";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
 	ДиалогОткрытияФайла.Заголовок = "Просмотр каталога временных файлов";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Если КаталогВременныхФайлов <> ДиалогОткрытияФайла.Каталог тогда
			КаталогВременныхФайлов = ДиалогОткрытияФайла.Каталог;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВсеРеализацииПриИзменении(Элемент)
	Режим = РежимДиалогаВопрос.ДаНет;
Ответ = Вопрос("Обновить список Контрагентов и Реализаций?", Режим, 10);
Если Ответ = КодВозвратаДиалога.Да Тогда
    КнопкаВыполнитьНажатие(неопределено);
КонецЕсли;

КонецПроцедуры


//+++ при перевыборе Контрагента - изменяем адрес эл.почты
процедура перезаполнитьЭлПочтуТекСтроки()

	текСтрока = ЭлементыФормы.АдресаКонтрагентов.ТекущиеДанные;
	
	отбор1 = новый Структура("Объект", текСтрока.Контрагент);
	отбор1.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00013") );
	
	рс = регистрыСведений.КонтактнаяИнформация.Получить(отбор1);
	Если рс=Неопределено тогда
		текСтрока.ЭлектронныйАдрес = "";
		текСтрока.ТребуетсяОтправкаПоПочте = ложь;
	иначе
		текСтрока.ЭлектронныйАдрес = рс.Представление;
		текСтрока.ТребуетсяОтправкаПоПочте = истина;
	КонецЕсли;

КонецПроцедуры

Процедура АдресаКонтрагентовКонтрагентОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	текСтрока = ЭлементыФормы.АдресаКонтрагентов.ТекущиеДанные;
	фрм1 = текСтрока.Контрагент.получитьФорму("ФормаЭлемента");
	фрм1.ОткрытьМодально();
	перезаполнитьЭлПочтуТекСтроки();
КонецПроцедуры

Процедура АдресаКонтрагентовКонтрагентПриИзменении(Элемент)
		перезаполнитьЭлПочтуТекСтроки();
КонецПроцедуры

Процедура РеализацииПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	 //ОформлениеСтроки.Ячейки.Выбран.ОтображатьТекст  = ЛОЖЬ;
	 //ОформлениеСтроки.Ячейки.Выбран.ОтображатьФлажок = Истина;
	 //ОформлениеСтроки.Ячейки.Выбран.Флажок = ДанныеСтроки.выбран;
	 
КонецПроцедуры

Процедура АдресаКонтрагентовПриИзмененииФлажка(Элемент, Колонка)
	//позиционируемся на реализации
	 попытка
		 стрКонтр = ЭлементыФормы.АдресаКонтрагентов.ТекущиеДанные;
		 
	Если ЗначениеЗаполнено(стрКонтр) тогда	 
		
		 СтрокиРеализ = Реализации.НайтиСтроки(новый Структура("Контрагент", стрКонтр.Контрагент)); 
			
		для i=0 по СтрокиРеализ.Количество()-1 цикл
			стр = СтрокиРеализ[i];
			Если стр.Выбран <> стрКонтр.ТребуетсяОтправкаПоПочте тогда
				стр.Выбран = стрКонтр.ТребуетсяОтправкаПоПочте;
			КонецЕсли;	
		КонецЦикла;
		
	 КонецЕсли;	 
		
	 исключение
	 конецПопытки;	

КонецПроцедуры

Процедура флРоботПриИзменении(Элемент)
	если флРобот тогда
		Интервал = КонецДня(ТекущаяДата()) - ТекущаяДата() + 1 + (тРобот - началоДня(тРобот));
		ПодключитьОбработчикОжидания("Пуск2",Интервал);
	сообщить("Робот сработает через "+строка(Интервал)+" сек. ("+строка(ТекущаяДата() + Интервал)+")");	
	иначеесли НЕ флРобот тогда
    	ОтключитьОбработчикОжидания("Пуск2");
		сообщить("Робот отключён!");
		Интервал=0;
	КонецЕсли;	
КонецПроцедуры

процедура Пуск2()
	НачДата = НачалоДня( ТекущаяДата() ) - 86400; // пред.день!
	КонДата = НачДата;
	КнопкаВыполнитьНажатие(неопределено);
	ОсновныеДействияФормыДействиеОтправить(Неопределено);
	
	флРобот = ЛОЖЬ;
    флРоботПриИзменении(неопределено);
	
	//------------включает на сутки вперед!----------------------
	флРобот = Истина;
    флРоботПриИзменении(неопределено);
КонецПроцедуры
	
процедура Пуск() экспорт
	
	//cразу ничего делать НЕ надо !!!	
	флРобот = Истина;
	тРобот = КонецДня( ТекущаяДата() )+1 +60; // 00:01
//ТОЛЬКО подключить обработкик!	
	Интервал = КонецДня(ТекущаяДата()) - ТекущаяДата() + 1 + (тРобот - началоДня(тРобот));
	ПодключитьОбработчикОжидания("Пуск2",Интервал);
	сообщить("Робот сработает через "+строка(Интервал)+" сек. ("+строка(ТекущаяДата() + Интервал)+")");	
	
КонецПроцедуры	

         ТекстСообщения0 ="   Добрый день,
						 |
						 |Высылаем Вам копии документов.
						 |
						 |
						 |С уважением, 
						 |ЗАО Торговая Компания ""Яршинторг"", 
						 |юр./факт.адрес: 150044, Ярославская обл, Ярославль г, Базовая ул, дом № 3
						 |тел./факс: (4852) 200-200, 67-11-67
						 |Web-сайт : http://www.yst.ru
						 |"; 