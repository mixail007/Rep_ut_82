Перем ТекстЗапросаДЗ;
Перем ТекстЗапросаКЗ;
Перем ТекстЗапросаДС;
Перем ТекстЗапросаСК;
Перем ТекстЗапросаПО;
Перем ТекстЗапросаЗАПодразделение;
Перем ТекстЗапросаЗАСтатья;
Перем ТекстЗапросаИНВ;
Перем ТекстЗапросаКРЕД;
Перем ТекстЗапросаВП;
Перем ТекстЗапросаПУ;
Перем ТекстЗапросаПУРасш;
Перем ТекстЗапросаСПИС;
Перем ТекстЗапросаСПИСРасш;
Перем ТекстЗапросаВЗАИМ;
Перем ТекстЗапросаВЗАИМРасш;
Перем ТекстЗапросаДСПС;
Перем ТекстЗапросаДСПСРасш;
Перем ТекстЗапросаДЗБТ;
Перем ТекстЗапросаДЗБТРасш;
Перем ТекстЗапросаТрехсторонниеПП;
Перем ТекстЗапросаТрехсторонниеППРасш;
Перем ТекстЗапросаПереходящиеЗатраты;
Перем ТекстЗапросаПереходящиеЗатратыРасш;                         
Перем ТекстЗапросаНесовпадающиеСуммаВЗиСуммаУПР;
Перем ТекстЗапросаНесовпадающиеСуммаВЗиСуммаУПРРасш;
Перем ТекстЗапросаПустойСтатусПартии;
Перем ТекстЗапросаПустойСтатусПартииРасш;
Перем ТекстЗапросаВозвратыПокупателей;
Перем ТекстЗапросаВозвратыПоставщикам;
Перем ТекстЗапросаВозвратыПоставщикамРасш;
Перем ТекстЗапросаОХ;
Перем ТекстЗапросаОХОборот;
Перем ТекстЗапросаОС;
Перем ТекстЗапросаОСОборот;
Перем ТекстЗапросаОСОборотРасш;
Перем ТекстЗапросаЗаНЕЯШТ;

Перем ДатаИзменена;
Перем ДатаНачИзменена;
Перем ВыводитьЦены;

Процедура ЗаполнитьНачальныеНастройки()	
	
	ЗаполнитьНастройкиЗапросаДЗ();		// Дебиторская задолженность
	ЗаполнитьНастройкиЗапросаКЗ();  	// Кредиторская задолженность
	ЗаполнитьНастройкиЗапросаДС();  	// Денежные средства
	ЗаполнитьНастройкиЗапросаСК();      // Склад
	ЗаполнитьНастройкиЗапросаПО();   	
	ЗаполнитьНастройкиЗапросаЗА();   	
	ЗаполнитьНастройкиЗапросаИнвестиции(); 	
	ЗаполнитьНастройкиЗапросаКредит(); 
	ЗаполнитьНастройкиЗапросаВП(); 
	ЗаполнитьНастройкиЗапросаПУ();	
	ЗаполнитьНастройкиЗапросаСПИС();
	ЗаполнитьНастройкиЗапросаВЗАИМ();
	ЗаполнитьНастройкиЗапросаДСПС();
	ЗаполнитьНастройкиЗапросаДЗБТ();
	ЗаполнитьНастройкиЗапросаТрехсторонниеПП();
	ЗаполнитьНастройкиЗапросаПереходящиеЗатраты();
	ЗаполнитьНастройкиЗапросаНесовпадающиеСуммаВЗиСуммаУПР();
	ЗаполнитьНастройкиЗапросаПустойСтатусПартии();
	ЗаполнитьНастройкиЗапросаВозвратыПокупателей();
	ЗаполнитьНастройкиЗапросаВозвратыПоставщикам();
	ЗаполнитьНастройкиЗапросаОХ();
	ЗаполнитьНастройкиЗапросаОХОборот();
	ЗАполнитьТекстЗапросаОСоборот();
	ЗаполнитьТекстЗапросаОС();
	
КонецПроцедуры

Функция Максимум(Массив)
	Результат = 0;
	Для й = 0 по Массив.Вграница() цикл
		ЭлементМассива = Массив.Получить(й);
		Результат = ?(Результат<ЭлементМассива,ЭлементМассива,Результат);
	Конеццикла;
	Возврат Результат;
КонецФункции

Процедура ЗаполнитьНастройкиЗапросаДЗ() 
	
	Если Не ПоВсем Тогда 
		ТекстЗапросаДЗ = "
		|Выбрать Сумма(СуммаВзаиморасчетовОстаток) Как Сумма Из
		|(
		|	Выбрать ДоговорКонтрагента, СуммаВзаиморасчетовОстаток
		|	Из 
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон,ДоговорКонтрагента.ТипДоговора не в (&ИнвестицииИКредит) и ДоговорКонтрагента.Организация = &Организация)
		|	Где СуммаУпрОстаток>0 
		|) как ПЗ";
	Иначе 
		ТекстЗапросаДЗ = "
		|Выбрать Сумма(СуммаВзаиморасчетовОстаток) Как Сумма Из
		|(
		|	Выбрать ДоговорКонтрагента, СуммаВзаиморасчетовОстаток
		|	Из 
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон,ДоговорКонтрагента.ТипДоговора не в (&ИнвестицииИКредит))
		|	Где СуммаУпрОстаток>0 
		|) как ПЗ";		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиЗапросаКЗ() 
	
	Если Не ПоВсем Тогда 
		ТекстЗапросаКЗ = "
			|Выбрать -Сумма(СуммаВзаиморасчетовОстаток) Как Сумма Из
			|(
			|	Выбрать ДоговорКонтрагента, СуммаВзаиморасчетовОстаток
			|	Из 
			|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон,ДоговорКонтрагента.ТипДоговора не в (&ИнвестицииИКредит) и ДоговорКонтрагента.Организация = &Организация)
			|	Где СуммаВзаиморасчетовОстаток<0
			|) как ПЗ";
	Иначе 
		ТекстЗапросаКЗ = "
			|Выбрать -Сумма(СуммаВзаиморасчетовОстаток) Как Сумма Из
			|(
			|	Выбрать ДоговорКонтрагента, СуммаВзаиморасчетовОстаток
			|	Из 
			|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон,ДоговорКонтрагента.ТипДоговора не в (&ИнвестицииИКредит))
			|	Где СуммаВзаиморасчетовОстаток<0
			|) как ПЗ";			
	КонецЕсли;	
КонецПроцедуры

Процедура ЗаполнитьТекстЗапросаОС() 
	
	Если Не ПоВсем Тогда 
		ТекстЗапросаОС = 
		"ВЫБРАТЬ
		|	СУММА(ПЗ.Стоимость - ПЗ.Амортизация) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА ОС.ВидДвижения = &Приход
		|				ТОГДА ОС.Стоимость
		|			ИНАЧЕ -ОС.Стоимость
		|		КОНЕЦ КАК Стоимость,
		|		ВЫБОР
		|			КОГДА ОС.ВидДвижения = &Приход
		|				ТОГДА ОС.Амортизация
		|			ИНАЧЕ -ОС.Амортизация
		|		КОНЕЦ КАК Амортизация
		|	ИЗ
		|		РегистрНакопления.СтоимостьОС КАК ОС
		|	ГДЕ
		|		ОС.Период <= &ДатаКон
		|		И ОС.Регистратор.Организация = &Организация) КАК ПЗ";
	Иначе 
		ТекстЗапросаОС = 
		"ВЫБРАТЬ
		|	СУММА(ПЗ.Стоимость - ПЗ.Амортизация) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Выбор Когда ВидДВижения =&Приход тогда Стоимость иначе -Стоимость конец как Стоимость,
		|		Выбор Когда ВидДВижения =&Приход тогда Амортизация иначе -Амортизация конец как Амортизация
		|	ИЗ
		|		РегистрНакопления.СтоимостьОС КАК ОС
		|	ГДЕ
		|		Период <= &ДатаКон) КАК ПЗ";	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗАполнитьТекстЗапросаОСоборот() 
	// Оборот + амортизация
	Если Не ПоВсем Тогда 
		ТекстЗапросаОСОборот = 
		"ВЫБРАТЬ
		//|	П.Стоимость - П.Амортизация КАК Сумма
		|	П.Стоимость КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		СУММА(ПЗ.Стоимость) КАК Стоимость,
		|		СУММА(ПЗ.Амортизация) КАК Амортизация
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ВЫБОР
		|				КОГДА СтоимостьОС.ВидДвижения = &Приход
		|					ТОГДА СтоимостьОС.Стоимость
		|				ИНАЧЕ -СтоимостьОС.Стоимость
		|			КОНЕЦ КАК Стоимость,
		|			ВЫБОР
		|				КОГДА СтоимостьОС.ВидДвижения = &Приход
		|					ТОГДА СтоимостьОС.Амортизация
		|				ИНАЧЕ -СтоимостьОС.Амортизация
		|			КОНЕЦ КАК Амортизация
		|		ИЗ
		|			РегистрНакопления.СтоимостьОС КАК СтоимостьОС
		|		ГДЕ
		|			СтоимостьОС.Период МЕЖДУ &ДатаНач И &ДатаКон И СтоимостьОС.Регистратор.Организация = &Организация и Не(Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС)) КАК ПЗ) КАК П";
		
		ТекстЗапросаОСОборотРасш = 		"ВЫБРАТЬ
		|	П.Регистратор как Документ,	П.Регистратор.Контрагент как Контрагент, П.Стоимость - П.Амортизация КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Регистратор,
		|		СУММА(ПЗ.Стоимость) КАК Стоимость,
		|		СУММА(ПЗ.Амортизация) КАК Амортизация
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Регистратор,
		|			ВЫБОР
		|				КОГДА СтоимостьОС.ВидДвижения = &Приход
		|					ТОГДА СтоимостьОС.Стоимость
		|				ИНАЧЕ -СтоимостьОС.Стоимость
		|			КОНЕЦ КАК Стоимость,
		|			ВЫБОР
		|				КОГДА СтоимостьОС.ВидДвижения = &Приход
		|					ТОГДА СтоимостьОС.Амортизация
		|				ИНАЧЕ -СтоимостьОС.Амортизация
		|			КОНЕЦ КАК Амортизация
		|		ИЗ
		|			РегистрНакопления.СтоимостьОС КАК СтоимостьОС
		|		ГДЕ
		|			СтоимостьОС.Период МЕЖДУ &ДатаНач И &ДатаКон И СтоимостьОС.Регистратор.Организация = &Организация и Не(Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС)) КАК ПЗ сгруппировать по регистратор) КАК П";
	Иначе 
		ТекстЗапросаОСОборот = 
		"ВЫБРАТЬ
		//|	П.Стоимость - П.Амортизация КАК Сумма
		|	П.Стоимость КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		СУММА(ПЗ.Стоимость) КАК Стоимость,
		|		СУММА(ПЗ.Амортизация) КАК Амортизация
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ВЫБОР
		|				КОГДА СтоимостьОС.ВидДвижения = &Приход
		|					ТОГДА СтоимостьОС.Стоимость
		|				ИНАЧЕ -СтоимостьОС.Стоимость
		|			КОНЕЦ КАК Стоимость,
		|			ВЫБОР
		|				КОГДА СтоимостьОС.ВидДвижения = &Приход
		|					ТОГДА СтоимостьОС.Амортизация
		|				ИНАЧЕ -СтоимостьОС.Амортизация
		|			КОНЕЦ КАК Амортизация
		|		ИЗ
		|			РегистрНакопления.СтоимостьОС КАК СтоимостьОС
		|		ГДЕ
		|			СтоимостьОС.Период МЕЖДУ &ДатаНач И &ДатаКон и Не(Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС)) КАК ПЗ) КАК П";	
		
		ТекстЗапросаОСОборотрасш = 
		"ВЫБРАТЬ
		|	Регистратор как документ ,	П.Регистратор.Контрагент как Контрагент, 
		|	П.Стоимость - П.Амортизация КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Регистратор,
		|		СУММА(ПЗ.Стоимость) КАК Стоимость,
		|		СУММА(ПЗ.Амортизация) КАК Амортизация
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Регистратор,
		|			ВЫБОР
		|				КОГДА СтоимостьОС.ВидДвижения = &Приход
		|					ТОГДА СтоимостьОС.Стоимость
		|				ИНАЧЕ -СтоимостьОС.Стоимость
		|			КОНЕЦ КАК Стоимость,
		|			ВЫБОР
		|				КОГДА СтоимостьОС.ВидДвижения = &Приход
		|					ТОГДА СтоимостьОС.Амортизация
		|				ИНАЧЕ -СтоимостьОС.Амортизация
		|			КОНЕЦ КАК Амортизация
		|		ИЗ
		|			РегистрНакопления.СтоимостьОС КАК СтоимостьОС
		|		ГДЕ
		|			СтоимостьОС.Период МЕЖДУ &ДатаНач И &ДатаКон и Не(Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС)) КАК ПЗ сгруппировать по регистратор) КАК П";	
		
	КонецЕсли;	
Конецпроцедуры

Процедура ЗаполнитьНастройкиЗапросаИнвестиции() 
	
	Если Не ПоВсем Тогда 	
		ТекстЗапросаИНВ = "
		|Выбрать Сумма(СуммаВзаиморасчетовОстаток) Как Сумма Из
		|(
		|	Выбрать ДоговорКонтрагента, СуммаВзаиморасчетовОстаток 
		|	Из 
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон,ДоговорКонтрагента.ТипДоговора В (&Инвестиции) и ДоговорКонтрагента.Организация = &Организация)
		|) как ПЗ";
	Иначе 
		ТекстЗапросаИНВ = "
		|Выбрать Сумма(СуммаВзаиморасчетовОстаток) Как Сумма Из
		|(
		|	Выбрать ДоговорКонтрагента, СуммаВзаиморасчетовОстаток 
		|	Из 
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон,ДоговорКонтрагента.ТипДоговора В (&Инвестиции))
		|) как ПЗ";		
    КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНастройкиЗапросаКредит() 
	
	Если Не ПоВсем Тогда 		
		ТекстЗапросаКРЕД = "
		|Выбрать -Сумма(СуммаВзаиморасчетовОстаток) Как Сумма Из
		|(
		|	Выбрать ДоговорКонтрагента, СуммаВзаиморасчетовОстаток
		|	Из 
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон,ДоговорКонтрагента.ТипДоговора в (&Кредит) и ДоговорКонтрагента.Организация = &Организация)
		|) как ПЗ";
	Иначе
		ТекстЗапросаКРЕД = "
		|Выбрать -Сумма(СуммаВзаиморасчетовОстаток) Как Сумма Из
		|(
		|	Выбрать ДоговорКонтрагента, СуммаВзаиморасчетовОстаток
		|	Из 
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон,ДоговорКонтрагента.ТипДоговора в (&Кредит))
		|) как ПЗ";		
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНастройкиЗапросаДС()
	
Если Не ПоВсем Тогда 			
	ТекстЗапросаДС = 
	"ВЫБРАТЬ
	|	СУММА(П.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = &Приход
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	|	ГДЕ
	|		ДенежныеСредства.Период <= &ДатаКон
	|		И (ДенежныеСредства.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистровНакопления
	|				ИЛИ ДенежныеСредства.Регистратор.Организация = &Организация)) КАК П";
Иначе
	ТекстЗапросаДС = "
	|	Выбрать Сумма(Сумма) как Сумма Из (
	|	ВЫБРАТЬ	
	|	Остатки.СуммаОстаток как Сумма,
	|	Остатки.БанковскийСчетКасса как БСК,
	|	1 как видрегистра    
	|	ИЗ	РегистрНакопления.ДенежныеСредства.Остатки(&ДатаКон) КАК Остатки) КАК ПЗ";	
	//ТекстЗапросаДС = 
	//"ВЫБРАТЬ
	//|	СУММА(П.Сумма) КАК Сумма
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		ВЫБОР
	//|			КОГДА ДенежныеСредства.ВидДвижения = &Приход
	//|				ТОГДА ДенежныеСредства.Сумма
	//|			ИНАЧЕ -ДенежныеСредства.Сумма
	//|		КОНЕЦ КАК Сумма
	//|	ИЗ
	//|		РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	//|	ГДЕ
	//|		ДенежныеСредства.Период <= &ДатаКон
	//|		И (ДенежныеСредства.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистровНакопления
	//|				ИЛИ ДенежныеСредства.Регистратор.Организация в (&Организация))) КАК П";
КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНастройкиЗапросаСК()
	
	Если Не ПоВсем Тогда	
		ТекстЗапросаСК = 
		"ВЫБРАТЬ
		|	СУММА(П.Сумма) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПЗ.Регистратор КАК Регистратор,
		|		ПЗ.Регистратор.Организация КАК РегистраторОрганизация,
		|		СУММА(ПЗ.СтоимостьОстаток) КАК Сумма
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
		|			ВЫБОР
		|				КОГДА ПартииТоваровНаСкладах.ВидДвижения = &Приход
		|					ТОГДА ПартииТоваровНаСкладах.Стоимость
		|				ИНАЧЕ -ПартииТоваровНаСкладах.Стоимость
		|			КОНЕЦ КАК СтоимостьОстаток
		|		ИЗ
		|			РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|		ГДЕ
		|			ПартииТоваровНаСкладах.Период <= &ДатаНач
		|			И (ПартииТоваровНаСкладах.Регистратор.Организация = &Организация
		|					ИЛИ ПартииТоваровНаСкладах.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистровНакопления)
		|			И ПартииТоваровНаСкладах.СтатусПартии <> &ПустойСтатус) КАК ПЗ
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПЗ.Регистратор,
		|		ПЗ.Регистратор.Организация) КАК П";
	Иначе
		ТекстЗапросаСК = "
		|Выбрать Сумма(Сумма) как Сумма из (
		|ВЫБРАТЬ 
		|Склад как склад,
		|СУММА(СтоимостьОстаток) КАК Сумма
		|
		|ИЗ РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаНач) КАК ТаблицаРегистра
		|Где СтатусПартии<>&ПустойСтатус
		|сгруппировать по Склад
		|) Как ПЗ";
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНастройкиЗапросаОХ()
	
Если Не ПоВсем Тогда	
	ТекстЗапросаОХ = "ВЫБРАТЬ
	|	СУММА(П.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПЗ.Регистратор КАК Регистратор,
	|		ПЗ.Регистратор.Организация КАК РегистраторОрганизация,
	|		СУММА(ПЗ.СтоимостьОстаток) КАК Сумма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
	|			ВЫБОР
	|				КОГДА ПартииТоваровНаСкладах.ВидДвижения = &Приход
	|					ТОГДА ПартииТоваровНаСкладах.Стоимость
	|				ИНАЧЕ -ПартииТоваровНаСкладах.Стоимость
	|			КОНЕЦ КАК СтоимостьОстаток
	|		ИЗ
	|			РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|		ГДЕ
	|			ПартииТоваровНаСкладах.Период <= &ДатаНач
	|			И (ПартииТоваровНаСкладах.Регистратор.Организация = &Организация
	|					ИЛИ ПартииТоваровНаСкладах.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистровНакопления)
	|			И ПартииТоваровНаСкладах.СтатусПартии <> &ПустойСтатус
	|			И ПартииТоваровНаСкладах.Склад в (&СписокСкладов)) КАК ПЗ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПЗ.Регистратор,
	|		ПЗ.Регистратор.Организация) КАК П";
Иначе
	ТекстЗапросаОХ = "ВЫБРАТЬ
	|	СУММА(П.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПЗ.Регистратор КАК Регистратор,
	|		ПЗ.Регистратор.Организация КАК РегистраторОрганизация,
	|		СУММА(ПЗ.СтоимостьОстаток) КАК Сумма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
	|			ВЫБОР
	|				КОГДА ПартииТоваровНаСкладах.ВидДвижения = &Приход
	|					ТОГДА ПартииТоваровНаСкладах.Стоимость
	|				ИНАЧЕ -ПартииТоваровНаСкладах.Стоимость
	|			КОНЕЦ КАК СтоимостьОстаток
	|		ИЗ
	|			РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|		ГДЕ
	|			ПартииТоваровНаСкладах.Период <= &ДатаНач
	|			И ПартииТоваровНаСкладах.СтатусПартии <> &ПустойСтатус
	|			И ПартииТоваровНаСкладах.Склад в (&СписокСкладов)) КАК ПЗ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПЗ.Регистратор,
	|		ПЗ.Регистратор.Организация) КАК П";	
КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиЗапросаОХОборот()
	
	Если Не ПоВсем Тогда 
		ТекстЗапросаОХОборот = "ВЫБРАТЬ
		|	СУММА(ПЗП.СтоимостьОстаток) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
		|		ВЫБОР
		|			КОГДА ПартииТоваровНаСкладах.ВидДвижения = &Приход
		|				ТОГДА ПартииТоваровНаСкладах.Стоимость
		|			ИНАЧЕ -ПартииТоваровНаСкладах.Стоимость
		|		КОНЕЦ КАК СтоимостьОстаток
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|	ГДЕ
		|		ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон И Регистратор.Организация = &Организация
		|		И ПартииТоваровНаСкладах.СтатусПартии <> &ПустойСтатус
		//|		И ПартииТоваровНаСкладах.Склад.ЗапретитьИспользование = ИСТИНА) КАК ПЗП";
		|		И ПартииТоваровНаСкладах.Склад в (&СписокСкладов)) КАК ПЗП";
	Иначе 
		ТекстЗапросаОХОборот = "ВЫБРАТЬ
		|	СУММА(ПЗП.СтоимостьОстаток) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
		|		ВЫБОР
		|			КОГДА ПартииТоваровНаСкладах.ВидДвижения = &Приход
		|				ТОГДА ПартииТоваровНаСкладах.Стоимость
		|			ИНАЧЕ -ПартииТоваровНаСкладах.Стоимость
		|		КОНЕЦ КАК СтоимостьОстаток
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|	ГДЕ
		|		ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
		|		И ПартииТоваровНаСкладах.СтатусПартии <> &ПустойСтатус
		|		И ПартииТоваровНаСкладах.Склад в (&СписокСкладов)) КАК ПЗП";
		//|		И ПартииТоваровНаСкладах.Склад.ЗапретитьИспользование = ИСТИНА) КАК ПЗП";		
	КонецЕсли;
	
Конецпроцедуры
	
Процедура ЗаполнитьНастройкиЗапросаПО() 
	
	Если Не ПоВсем Тогда	
		ТекстЗапросаПО = "
			|Выбрать Сумма(Сум) как Сумма из (
			|Выбрать ФизЛицо, Сумма(СуммаВзаиморасчетовОстаток) как сум из 
			|(ВЫБРАТЬ 	
			|ФизЛицо КАК ФизЛицо,
			|Валюта КАК Валюта,
			|РасчетныйДокумент КАК РасчетныйДокумент,
			|СУММА(СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток
			|ИЗ РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Остатки(&ДатаКон, РасчетНыйдокумент.Организация=&Организация) КАК ТаблицаРегистра
			|Сгруппировать по 
			|ФизЛицо, Валюта, РасчетныйДокумент) как таблица сгруппировать по ФизЛицо) как ПЗ";
	иначе
		ТекстЗапросаПО = "
			|Выбрать Сумма(Сум) как Сумма из (
			|Выбрать ФизЛицо, Сумма(СуммаВзаиморасчетовОстаток) как сум из 
			|(ВЫБРАТЬ 	
			|ФизЛицо КАК ФизЛицо,
			|Валюта КАК Валюта,
			|РасчетныйДокумент КАК РасчетныйДокумент,
			|СУММА(СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток
			|ИЗ РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Остатки(&ДатаКон) КАК ТаблицаРегистра
			|Сгруппировать по 
			|ФизЛицо, Валюта, РасчетныйДокумент) как таблица сгруппировать по ФизЛицо) как ПЗ";				
	КонецЕсли;	
КонецПроцедуры

Процедура ЗаполнитьНастройкиЗапросаЗА() 
	//Если Не ПоВсем Тогда
	//	ТекстЗапросаЗАПодразделение = "
	//	|Выбрать Сумма(Сумма) как Сумма ИЗ (
	//	|	Выбрать 
	//	|		Сумма 
	//	|	Из РегистрНакопления.Затраты Где Период Между &ДатаНач и &ДатаКон и Регистратор.Организация=&Организация
	//	|) КАК ТаблицаРегистра";	
	//Иначе
		ТекстЗапросаЗАНеЯШТ = "
		|Выбрать Сумма(Сумма) как Сумма ИЗ (
		|	Выбрать 
		|		Сумма 
		|	Из РегистрНакопления.Затраты Где Период Между &ДатаНач и &ДатаКон и Регистратор.Организация=&Организация
		|) КАК ТаблицаРегистра";	
	
		ТекстЗапросаЗАПодразделение = "
		|Выбрать Сумма(Сумма) как Сумма ИЗ (
		|	Выбрать 
		|		Сумма 
		|	Из РегистрНакопления.Затраты Где Период Между &ДатаНач и &ДатаКон
		|) КАК ТаблицаРегистра";			
	//КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНастройкиЗапросаВП() 
	
Если Не ПоВсем Тогда
	ТекстЗапросаВП =
		"ВЫБРАТЬ
		|	СУММА(ПЗП.Стоимость) КАК Стоимость,
		|	СУММА(ПЗП.ВаловаяПрибыль) КАК ВП
		|ИЗ
		|	(ВЫБРАТЬ
		|		СУММА(ТаблицаРегистра.СтоимостьОборот) КАК Стоимость,
		|		СУММА(ВЫБОР
		|				КОГДА ТаблицаРегистра.СтоимостьОборот ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ ТаблицаРегистра.СтоимостьОборот
		|			КОНЕЦ) - СУММА(ВЫБОР
		|				КОГДА ТаблицаРегистраСебестоимость.СтоимостьОборот ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ ТаблицаРегистраСебестоимость.СтоимостьОборот
		|			КОНЕЦ) КАК ВаловаяПрибыль
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Продажи.Регистратор КАК Регистратор,
		|			СУММА(Продажи.Количество) КАК КоличествоОборот,
		|			СУММА(Продажи.Стоимость) КАК СтоимостьОборот
		|		ИЗ
		|			РегистрНакопления.Продажи КАК Продажи
		|		ГДЕ
		|			Продажи.Период МЕЖДУ &ДатаНач И &ДатаКон
		|			И Продажи.Регистратор.Организация = &Организация
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Продажи.Регистратор) КАК ТаблицаРегистра
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ПродажиСебестоимость.Регистратор КАК Регистратор,
		|				СУММА(ПродажиСебестоимость.Количество) КАК КоличествоОборот,
		|				СУММА(ПродажиСебестоимость.Стоимость) КАК СтоимостьОборот
		|			ИЗ
		|				РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
		|			ГДЕ
		|				ПродажиСебестоимость.Период МЕЖДУ &ДатаНач И &ДатаКон
		|				И ПродажиСебестоимость.Регистратор.Организация = &Организация
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПродажиСебестоимость.Регистратор) КАК ТаблицаРегистраСебестоимость
		|			ПО ТаблицаРегистра.Регистратор = ТаблицаРегистраСебестоимость.Регистратор) КАК ПЗП";	
Иначе
		ТекстЗапросаВП =
		"ВЫБРАТЬ
		|	СУММА(ПЗП.Стоимость) КАК Стоимость,
		|	СУММА(ПЗП.ВаловаяПрибыль) КАК ВП
		|ИЗ
		|	(ВЫБРАТЬ
		|		СУММА(ТаблицаРегистра.СтоимостьОборот) КАК Стоимость,
		|		СУММА(ВЫБОР
		|				КОГДА ТаблицаРегистра.СтоимостьОборот ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ ТаблицаРегистра.СтоимостьОборот
		|			КОНЕЦ) - СУММА(ВЫБОР
		|				КОГДА ТаблицаРегистраСебестоимость.СтоимостьОборот ЕСТЬ NULL 
		|					ТОГДА 0
		|				ИНАЧЕ ТаблицаРегистраСебестоимость.СтоимостьОборот
		|			КОНЕЦ) КАК ВаловаяПрибыль
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Продажи.Регистратор КАК Регистратор,
		|			СУММА(Продажи.Количество) КАК КоличествоОборот,
		|			СУММА(Продажи.Стоимость) КАК СтоимостьОборот
		|		ИЗ
		|			РегистрНакопления.Продажи КАК Продажи
		|		ГДЕ
		|			Продажи.Период МЕЖДУ &ДатаНач И &ДатаКон
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Продажи.Регистратор) КАК ТаблицаРегистра
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ПродажиСебестоимость.Регистратор КАК Регистратор,
		|				СУММА(ПродажиСебестоимость.Количество) КАК КоличествоОборот,
		|				СУММА(ПродажиСебестоимость.Стоимость) КАК СтоимостьОборот
		|			ИЗ
		|				РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
		|			ГДЕ
		|				ПродажиСебестоимость.Период МЕЖДУ &ДатаНач И &ДатаКон
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПродажиСебестоимость.Регистратор) КАК ТаблицаРегистраСебестоимость
		|			ПО ТаблицаРегистра.Регистратор = ТаблицаРегистраСебестоимость.Регистратор) КАК ПЗП";	

КонецЕсли;		

КонецПроцедуры 

Процедура ЗаполнитьНастройкиЗапросаПУ() 
	
Если Не ПоВсем Тогда
	
	ТекстЗапросаПУ = "
		|Выбрать Сумма(Сумма) как сумма
		|Из Документ.ПоступлениеТоваровУслуг.Услуги
		|Где Ссылка.Дата между (&ДатаНач) и (&ДатаКон) и Ссылка.Организация=&Организация
		|И 
		|(
		|	СтатьяЗатрат=&ПустаяСтатья
		|) и Ссылка.Проведен = Истина";
		
	ТекстЗапросаПУРасш = "
		|Выбрать Ссылка как Документ, Сумма как Сумма, Ссылка.Контрагент как Контрагент
		|Из Документ.ПоступлениеТоваровУслуг.Услуги
		|Где Ссылка.Дата между (&ДатаНач) и (&ДатаКон) и Ссылка.Организация=&Организация
		|И 
		|(
		|СтатьяЗатрат=&ПустаяСтатья
		|) и Ссылка.Проведен = Истина";
		
Иначе 
	
	ТекстЗапросаПУ = "
		|Выбрать Сумма(Сумма) как сумма
		|Из Документ.ПоступлениеТоваровУслуг.Услуги
		|Где Ссылка.Дата между (&ДатаНач) и (&ДатаКон)
		|И 
		|(
		|	СтатьяЗатрат=&ПустаяСтатья
		|) и Ссылка.Проведен = Истина";
		
	ТекстЗапросаПУРасш = "
		|Выбрать Ссылка как Документ, Сумма как Сумма, Ссылка.Контрагент как Контрагент
		|Из Документ.ПоступлениеТоваровУслуг.Услуги
		|Где Ссылка.Дата между (&ДатаНач) и (&ДатаКон)
		|И 
		|(
		|СтатьяЗатрат=&ПустаяСтатья
		|) и Ссылка.Проведен = Истина";
		
Конецесли;		
	
КонецПроцедуры 

Процедура ЗаполнитьНастройкиЗапросаСПИС() 
	
Если Не ПоВсем Тогда
	ТекстЗапросаСПИС = "
		|Выбрать Сумма(Выбор Когда (Регистратор Ссылка Документ.СписаниеТоваров) Тогда Стоимость Иначе -Стоимость Конец) как Сумма из РегистрНакопления.ПартииТоваровНаСкладах 
		|Где ((Регистратор Ссылка Документ.СписаниеТоваров) или (Регистратор Ссылка Документ.ОприходованиеТоваров))
		|и (Регистратор.Дата между (&ДатаНач) и (&ДатаКон)) и Регистратор.Организация = &Организация и Регистратор.Склад не в (&СписокСкладов)";	
		
	ТекстЗапросаСПИСРасш = "
		|Выбрать Регистратор как Документ, Сумма(Выбор Когда (Регистратор Ссылка Документ.СписаниеТоваров) Тогда Стоимость Иначе -Стоимость Конец) как Сумма, Регистратор.Контрагент как Контрагент из РегистрНакопления.ПартииТоваровНаСкладах
		|Где ((Регистратор Ссылка Документ.СписаниеТоваров) или (Регистратор Ссылка Документ.ОприходованиеТоваров))
		|и (Регистратор.Дата между (&ДатаНач) и (&ДатаКон) и Регистратор.Организация = &Организация  и Регистратор.Склад не в (&СписокСкладов)) сгруппировать по Регистратор, Регистратор.Контрагент";
Иначе
	ТекстЗапросаСПИС = "
		|Выбрать Сумма(Выбор Когда (Регистратор Ссылка Документ.СписаниеТоваров) Тогда Стоимость Иначе -Стоимость Конец) как Сумма из РегистрНакопления.ПартииТоваровНаСкладах 
		|Где ((Регистратор Ссылка Документ.СписаниеТоваров) или (Регистратор Ссылка Документ.ОприходованиеТоваров))
		|и (Регистратор.Дата между (&ДатаНач) и (&ДатаКон)) и Регистратор.Склад не в (&СписокСкладов)";	
		
	ТекстЗапросаСПИСРасш = "
		|Выбрать Регистратор как Документ, Сумма(Выбор Когда (Регистратор Ссылка Документ.СписаниеТоваров) Тогда Стоимость Иначе -Стоимость Конец) как Сумма, Регистратор.Контрагент как Контрагент из РегистрНакопления.ПартииТоваровНаСкладах
		|Где ((Регистратор Ссылка Документ.СписаниеТоваров) или (Регистратор Ссылка Документ.ОприходованиеТоваров))
		|и (Регистратор.Дата между (&ДатаНач) и (&ДатаКон)  и Регистратор.Склад не в (&СписокСкладов)) сгруппировать по Регистратор, Регистратор.Контрагент";
КонецЕсли;

КонецПроцедуры 

Процедура ЗаполнитьНастройкиЗапросаВЗАИМ() 
	
Если Не ПоВсем Тогда	
	ТекстЗапросаВЗАИМ = "
		|Выбрать Сумма(Сумма) как Сумма ИЗ
		|(
		|Выбрать 
		|Выбор
		|	Когда ВидДвижения = &Приход Тогда 
		|		-СуммаВзаиморасчетов 
		|	Иначе 
		|		СуммаВзаиморасчетов 
		|	Конец Как Сумма
		|из РегистрНакопления.ВзаиморасчетыСКонтрагентами
		|Где ((Регистратор Ссылка Документ.Взаимозачет) или (Регистратор Ссылка Документ.КорректировкаДолга))  и (Период между (&ДатаНач) и (&ДатаКон) и Регистратор.Организация = &Организация)
		|) Как ПЗПКонецПроцедуры"; 
		
	ТекстЗапросаВЗАИМРасш = "
		|Выбрать Документ, Контрагент, Сумма(Сумма) как Сумма из (
		|Выбрать Регистратор как Документ, Сумма, Выбор Когда Регистратор ССЫЛКА Документ.КорректировкаДолга Тогда Регистратор.Контрагент Иначе Регистратор.КонтрагентДебитор КОНЕЦ как Контрагент ИЗ
		|(
		|Выбрать 
		| 	Регистратор,
		|Выбор
		|	Когда ВидДвижения = &Приход Тогда 
		|		-СуммаВзаиморасчетов 
		|	Иначе 
		|		СуммаВзаиморасчетов 
		|	Конец Как Сумма
		|из РегистрНакопления.ВзаиморасчетыСКонтрагентами
		|Где ((Регистратор Ссылка Документ.Взаимозачет) или (Регистратор Ссылка Документ.КорректировкаДолга))  и (Период между (&ДатаНач) и (&ДатаКон)  и Регистратор.Организация = &Организация)
		|) КАК ПЗП123 ) Как ПЗПКонецПроцедуры сгруппировать по Документ, Контрагент"; 
	Иначе
		
	ТекстЗапросаВЗАИМ = "
		|Выбрать Сумма(Сумма) как Сумма ИЗ
		|(
		|Выбрать 
		|Выбор
		|	Когда ВидДвижения = &Приход Тогда 
		|		-СуммаВзаиморасчетов 
		|	Иначе 
		|		СуммаВзаиморасчетов 
		|	Конец Как Сумма
		|из РегистрНакопления.ВзаиморасчетыСКонтрагентами
		|Где ((Регистратор Ссылка Документ.Взаимозачет) или (Регистратор Ссылка Документ.КорректировкаДолга))  и (Период между (&ДатаНач) и (&ДатаКон))
		|) Как ПЗПКонецПроцедуры"; 
		
	ТекстЗапросаВЗАИМРасш = "
		|Выбрать Документ, Контрагент, Сумма(Сумма) как Сумма из (
		|Выбрать Регистратор как Документ, Сумма, Выбор Когда Регистратор ССЫЛКА Документ.КорректировкаДолга Тогда Регистратор.Контрагент Иначе Регистратор.КонтрагентДебитор КОНЕЦ как Контрагент ИЗ
		|(
		|Выбрать 
		| 	Регистратор,
		|Выбор
		|	Когда ВидДвижения = &Приход Тогда 
		|		-СуммаВзаиморасчетов 
		|	Иначе 
		|		СуммаВзаиморасчетов 
		|	Конец Как Сумма
		|из РегистрНакопления.ВзаиморасчетыСКонтрагентами
		|Где ((Регистратор Ссылка Документ.Взаимозачет) или (Регистратор Ссылка Документ.КорректировкаДолга))  и (Период между (&ДатаНач) и (&ДатаКон))
		|) КАК ПЗП123 ) Как ПЗПКонецПроцедуры сгруппировать по Документ, Контрагент"; 
		
	КонецЕсли;

Конецпроцедуры

Процедура ЗаполнитьНастройкиЗапросаДСПС()
	
Если Не ПоВсем Тогда	
	ТекстЗапросаДСПС = "
	|Выбрать 
	|Сумма(Сумма) сумма 
	|	ИЗ
	|(
	|Выбрать ДС.Регистратор, ЕстьNULL(ДС.Сумма,0) как Сумма, ЕстьNULL(Партии.Сумма,0) как ПартииСумма, ЕстьNULL(Контрагенты.Сумма,0) как КонтрагентыСумма, ЕстьNULL(подотчетники.Сумма,0) как ПодотчетникиСумма, ЕстьNULL(Затраты.Сумма,0) как ЗатратыСумма, ЕстьNULL(Продажи.Сумма,0) как ПродажиСумма
	|из
	|(
	|	Выбрать 
	|		Регистратор, 
	|		Сумма(Выбор Когда ВидДвижения = &Приход тогда Сумма Иначе -Сумма
	|		Конец) как Сумма
	|	Из РегистрНакопления.ДенежныеСредства
	|	Где Период Между (&ДатаНач) и (&ДатаКон) и регистратор.Организация=&Организация
	|	Сгруппировать по Регистратор
	|) как ДС
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Выбор Когда ВидДвижения = &Приход тогда Стоимость Иначе -Стоимость
	|	Конец) как Сумма
	|	Из РегистрНакопления.ПартииТоваровНаСкладах
	|	Где Период Между (&ДатаНач) и (&ДатаКон)  и регистратор.Организация=&Организация
	|	Сгруппировать по Регистратор
	|)как Партии
	|По ДС.Регистратор = Партии.Регистратор
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Выбор Когда ВидДвижения = &Приход тогда СуммаВзаиморасчетов Иначе -СуммаВзаиморасчетов
	|	Конец) как Сумма
	|	Из РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|	Где Период Между (&ДатаНач) и (&ДатаКон)   и регистратор.Организация=&Организация
	|	Сгруппировать по Регистратор
	|)как Контрагенты
	|По ДС.Регистратор = Контрагенты.Регистратор
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Выбор Когда ВидДвижения = &Приход тогда СуммаВзаиморасчетов Иначе -СуммаВзаиморасчетов
	|	Конец) как Сумма
	|	Из РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами
	|	Где Период Между (&ДатаНач) и (&ДатаКон)   и регистратор.Организация=&Организация
	|	Сгруппировать по Регистратор
	|)как Подотчетники
	|По ДС.Регистратор = Подотчетники.Регистратор
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Сумма) как Сумма
	|	Из РегистрНакопления.Затраты
	|	Где Период Между (&ДатаНач) и (&ДатаКон)   и регистратор.Организация=&Организация
	|	Сгруппировать по Регистратор
	|)как Затраты
	|По ДС.Регистратор = Затраты.Регистратор
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Стоимость) как Сумма
	|	Из РегистрНакопления.Продажи
	|	Где Период Между (&ДатаНач) и (&ДатаКон) и регистратор.Организация=&Организация
	|	Сгруппировать по Регистратор
	|)как Продажи
	|По ДС.Регистратор = Продажи.Регистратор
	|) как ПЗП
	|Где 
	|(Сумма<>-КонтрагентыСумма и -КонтрагентыСумма=0) и (Сумма<>-ПодотчетникиСумма и ПодотчетникиСумма=0) и (Сумма<>-ПартииСумма и ПартииСумма=0) и (Сумма<>-ЗатратыСумма и ЗатратыСумма=0) и (Сумма<>-ПродажиСумма и ПродажиСумма=0)";
	//И (ДС.Сумма<>(Контрагенты.Сумма+Подотчетники.Сумма)) и (ДС.Сумма<>(Контрагенты.Сумма+Партии.Сумма))

	ТекстЗапросаДСПСРасш = "
	|ВЫБРАТЬ
	|	Регистратор как Документ, СУММА(ПЗП.Сумма) КАК сумма, "" "" как Контрагент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДС.Регистратор КАК Регистратор,
	|		ЕСТЬNULL(ДС.Сумма, 0) КАК Сумма,
	|		ЕСТЬNULL(Партии.Сумма, 0) КАК ПартииСумма,
	|		ЕСТЬNULL(Контрагенты.Сумма, 0) КАК КонтрагентыСумма,
	|		ЕСТЬNULL(Подотчетники.Сумма, 0) КАК ПодотчетникиСумма,
	|		ЕСТЬNULL(Затраты.Сумма, 0) КАК ЗатратыСумма,
	|		ЕСТЬNULL(Продажи.Сумма, 0) КАК ПродажиСумма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ДенежныеСредства.Регистратор КАК Регистратор,
	|			СУММА(ВЫБОР
	|					КОГДА ДенежныеСредства.ВидДвижения = &Приход
	|						ТОГДА ДенежныеСредства.Сумма
	|					ИНАЧЕ -ДенежныеСредства.Сумма
	|				КОНЕЦ) КАК Сумма
	|		ИЗ
	|			РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	|		ГДЕ
	|			ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон и регистратор.Организация=&Организация
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДенежныеСредства.Регистратор) КАК ДС
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
	|				СУММА(ВЫБОР
	|						КОГДА ПартииТоваровНаСкладах.ВидДвижения = &Приход
	|							ТОГДА ПартииТоваровНаСкладах.Стоимость
	|						ИНАЧЕ -ПартииТоваровНаСкладах.Стоимость
	|					КОНЕЦ) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|			ГДЕ
	|				ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон и регистратор.Организация=&Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПартииТоваровНаСкладах.Регистратор) КАК Партии
	|			ПО ДС.Регистратор = Партии.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
	|				СУММА(ВЫБОР
	|						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Приход
	|							ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	|						ИНАЧЕ -ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	|					КОНЕЦ) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	|			ГДЕ
	|				ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон и регистратор.Организация=&Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ВзаиморасчетыСКонтрагентами.Регистратор) КАК Контрагенты
	|			ПО ДС.Регистратор = Контрагенты.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВзаиморасчетыСПодотчетнымиЛицами.Регистратор КАК Регистратор,
	|				СУММА(ВЫБОР
	|						КОГДА ВзаиморасчетыСПодотчетнымиЛицами.ВидДвижения = &Приход
	|							ТОГДА ВзаиморасчетыСПодотчетнымиЛицами.СуммаВзаиморасчетов
	|						ИНАЧЕ -ВзаиморасчетыСПодотчетнымиЛицами.СуммаВзаиморасчетов
	|					КОНЕЦ) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами КАК ВзаиморасчетыСПодотчетнымиЛицами
	|			ГДЕ
	|				ВзаиморасчетыСПодотчетнымиЛицами.Период МЕЖДУ &ДатаНач И &ДатаКон  и регистратор.Организация=&Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ВзаиморасчетыСПодотчетнымиЛицами.Регистратор) КАК Подотчетники
	|			ПО ДС.Регистратор = Подотчетники.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				Затраты.Регистратор КАК Регистратор,
	|				СУММА(Затраты.Сумма) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.Затраты КАК Затраты
	|			ГДЕ
	|				Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон  и регистратор.Организация=&Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Затраты.Регистратор) КАК Затраты
	|			ПО ДС.Регистратор = Затраты.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				Продажи.Регистратор КАК Регистратор,
	|				СУММА(Продажи.Стоимость) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.Продажи КАК Продажи
	|			ГДЕ
	|				Продажи.Период МЕЖДУ &ДатаНач И &ДатаКон  и регистратор.Организация=&Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Продажи.Регистратор) КАК Продажи
	|			ПО ДС.Регистратор = Продажи.Регистратор) КАК ПЗП
	|ГДЕ
	|	ПЗП.Сумма <> -ПЗП.КонтрагентыСумма
	|	И -ПЗП.КонтрагентыСумма = 0
	|	И ПЗП.Сумма <> -ПЗП.ПодотчетникиСумма
	|	И ПЗП.ПодотчетникиСумма = 0
	|	И ПЗП.Сумма <> -ПЗП.ПартииСумма
	|	И ПЗП.ПартииСумма = 0
	|	И ПЗП.Сумма <> -ПЗП.ЗатратыСумма
	|	И ПЗП.ЗатратыСумма = 0
	|	И ПЗП.Сумма <> -ПЗП.ПродажиСумма
	|	И ПЗП.ПродажиСумма = 0
	|Сгруппировать по Регистратор";
Иначе
	ТекстЗапросаДСПС = "
	|Выбрать 
	|Сумма(Сумма) сумма 
	|	ИЗ
	|(
	|Выбрать ДС.Регистратор, ЕстьNULL(ДС.Сумма,0) как Сумма, ЕстьNULL(Партии.Сумма,0) как ПартииСумма, ЕстьNULL(Контрагенты.Сумма,0) как КонтрагентыСумма, ЕстьNULL(подотчетники.Сумма,0) как ПодотчетникиСумма, ЕстьNULL(Затраты.Сумма,0) как ЗатратыСумма, ЕстьNULL(Продажи.Сумма,0) как ПродажиСумма
	|из
	|(
	|	Выбрать 
	|		Регистратор, 
	|		Сумма(Выбор Когда ВидДвижения = &Приход тогда Сумма Иначе -Сумма
	|		Конец) как Сумма
	|	Из РегистрНакопления.ДенежныеСредства
	|	Где Период Между (&ДатаНач) и (&ДатаКон)
	|	Сгруппировать по Регистратор
	|) как ДС
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Выбор Когда ВидДвижения = &Приход тогда Стоимость Иначе -Стоимость
	|	Конец) как Сумма
	|	Из РегистрНакопления.ПартииТоваровНаСкладах
	|	Где Период Между (&ДатаНач) и (&ДатаКон)
	|	Сгруппировать по Регистратор
	|)как Партии
	|По ДС.Регистратор = Партии.Регистратор
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Выбор Когда ВидДвижения = &Приход тогда СуммаВзаиморасчетов Иначе -СуммаВзаиморасчетов
	|	Конец) как Сумма
	|	Из РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|	Где Период Между (&ДатаНач) и (&ДатаКон)
	|	Сгруппировать по Регистратор
	|)как Контрагенты
	|По ДС.Регистратор = Контрагенты.Регистратор
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Выбор Когда ВидДвижения = &Приход тогда СуммаВзаиморасчетов Иначе -СуммаВзаиморасчетов
	|	Конец) как Сумма
	|	Из РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами
	|	Где Период Между (&ДатаНач) и (&ДатаКон)
	|	Сгруппировать по Регистратор
	|)как Подотчетники
	|По ДС.Регистратор = Подотчетники.Регистратор
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Сумма) как Сумма
	|	Из РегистрНакопления.Затраты
	|	Где Период Между (&ДатаНач) и (&ДатаКон)
	|	Сгруппировать по Регистратор
	|)как Затраты
	|По ДС.Регистратор = Затраты.Регистратор
	|Левое соединение
	|( Выбрать  
	|	Регистратор, 
	|	Сумма(Стоимость) как Сумма
	|	Из РегистрНакопления.Продажи
	|	Где Период Между (&ДатаНач) и (&ДатаКон)
	|	Сгруппировать по Регистратор
	|)как Продажи
	|По ДС.Регистратор = Продажи.Регистратор
	|) как ПЗП
	|Где 
	|(Сумма<>-КонтрагентыСумма и -КонтрагентыСумма=0) и (Сумма<>-ПодотчетникиСумма и ПодотчетникиСумма=0) и (Сумма<>-ПартииСумма и ПартииСумма=0) и (Сумма<>-ЗатратыСумма и ЗатратыСумма=0) и (Сумма<>-ПродажиСумма и ПродажиСумма=0)";
	//И (ДС.Сумма<>(Контрагенты.Сумма+Подотчетники.Сумма)) и (ДС.Сумма<>(Контрагенты.Сумма+Партии.Сумма))

	ТекстЗапросаДСПСРасш = "
	|ВЫБРАТЬ
	|	Регистратор как Документ, СУММА(ПЗП.Сумма) КАК сумма, "" "" как Контрагент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДС.Регистратор КАК Регистратор,
	|		ЕСТЬNULL(ДС.Сумма, 0) КАК Сумма,
	|		ЕСТЬNULL(Партии.Сумма, 0) КАК ПартииСумма,
	|		ЕСТЬNULL(Контрагенты.Сумма, 0) КАК КонтрагентыСумма,
	|		ЕСТЬNULL(Подотчетники.Сумма, 0) КАК ПодотчетникиСумма,
	|		ЕСТЬNULL(Затраты.Сумма, 0) КАК ЗатратыСумма,
	|		ЕСТЬNULL(Продажи.Сумма, 0) КАК ПродажиСумма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ДенежныеСредства.Регистратор КАК Регистратор,
	|			СУММА(ВЫБОР
	|					КОГДА ДенежныеСредства.ВидДвижения = &Приход
	|						ТОГДА ДенежныеСредства.Сумма
	|					ИНАЧЕ -ДенежныеСредства.Сумма
	|				КОНЕЦ) КАК Сумма
	|		ИЗ
	|			РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	|		ГДЕ
	|			ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДенежныеСредства.Регистратор) КАК ДС
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
	|				СУММА(ВЫБОР
	|						КОГДА ПартииТоваровНаСкладах.ВидДвижения = &Приход
	|							ТОГДА ПартииТоваровНаСкладах.Стоимость
	|						ИНАЧЕ -ПартииТоваровНаСкладах.Стоимость
	|					КОНЕЦ) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|			ГДЕ
	|				ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПартииТоваровНаСкладах.Регистратор) КАК Партии
	|			ПО ДС.Регистратор = Партии.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
	|				СУММА(ВЫБОР
	|						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Приход
	|							ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	|						ИНАЧЕ -ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	|					КОНЕЦ) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	|			ГДЕ
	|				ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ВзаиморасчетыСКонтрагентами.Регистратор) КАК Контрагенты
	|			ПО ДС.Регистратор = Контрагенты.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВзаиморасчетыСПодотчетнымиЛицами.Регистратор КАК Регистратор,
	|				СУММА(ВЫБОР
	|						КОГДА ВзаиморасчетыСПодотчетнымиЛицами.ВидДвижения = &Приход
	|							ТОГДА ВзаиморасчетыСПодотчетнымиЛицами.СуммаВзаиморасчетов
	|						ИНАЧЕ -ВзаиморасчетыСПодотчетнымиЛицами.СуммаВзаиморасчетов
	|					КОНЕЦ) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами КАК ВзаиморасчетыСПодотчетнымиЛицами
	|			ГДЕ
	|				ВзаиморасчетыСПодотчетнымиЛицами.Период МЕЖДУ &ДатаНач И &ДатаКон
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ВзаиморасчетыСПодотчетнымиЛицами.Регистратор) КАК Подотчетники
	|			ПО ДС.Регистратор = Подотчетники.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				Затраты.Регистратор КАК Регистратор,
	|				СУММА(Затраты.Сумма) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.Затраты КАК Затраты
	|			ГДЕ
	|				Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Затраты.Регистратор) КАК Затраты
	|			ПО ДС.Регистратор = Затраты.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				Продажи.Регистратор КАК Регистратор,
	|				СУММА(Продажи.Стоимость) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.Продажи КАК Продажи
	|			ГДЕ
	|				Продажи.Период МЕЖДУ &ДатаНач И &ДатаКон
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Продажи.Регистратор) КАК Продажи
	|			ПО ДС.Регистратор = Продажи.Регистратор) КАК ПЗП
	|ГДЕ
	|	ПЗП.Сумма <> -ПЗП.КонтрагентыСумма
	|	И -ПЗП.КонтрагентыСумма = 0
	|	И ПЗП.Сумма <> -ПЗП.ПодотчетникиСумма
	|	И ПЗП.ПодотчетникиСумма = 0
	|	И ПЗП.Сумма <> -ПЗП.ПартииСумма
	|	И ПЗП.ПартииСумма = 0
	|	И ПЗП.Сумма <> -ПЗП.ЗатратыСумма
	|	И ПЗП.ЗатратыСумма = 0
	|	И ПЗП.Сумма <> -ПЗП.ПродажиСумма
	|	И ПЗП.ПродажиСумма = 0
	|Сгруппировать по Регистратор";
КонецЕсли;

КонецПроцедуры 

Процедура ЗаполнитьНастройкиЗапросаДЗБТ()
	
	Если Не ПоВсем Тогда
		
		ТекстЗапросаДЗБТ = 
		"ВЫБРАТЬ
		|	СУММА(РРА.Сумма) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПЗПР.Ссылка КАК Ссылка,
		|		ПЗПР.Сумма КАК Сумма,
		|		ПЗПР.количество КАК количество
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Док.Ссылка КАК Ссылка,
		|			Док.Сумма КАК Сумма,
		|			ЕСТЬNULL(ТоварыПЗ.Количество, 0) КАК количество
		|		ИЗ
		|			Документ.ПоступлениеДопРасходов КАК Док
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ПЗП.Ссылка КАК Ссылка,
		|					ЕСТЬNULL(ПЗП.Количество, 0) КАК Количество
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ПоступлениеДопРасходовТовары.Ссылка КАК Ссылка,
		|						СУММА(ПоступлениеДопРасходовТовары.Количество) КАК Количество
		|					ИЗ
		|						Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
		|					 Где ПоступлениеДопРасходовТовары.Ссылка.Организация=&Организация
		|					СГРУППИРОВАТЬ ПО
		|						ПоступлениеДопРасходовТовары.Ссылка) КАК ПЗП) КАК ТоварыПЗ
		|				ПО Док.Ссылка = ТоварыПЗ.Ссылка) КАК ПЗПР
		|	ГДЕ
		|		ПЗПР.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон и Ссылка.Проведен=Истина и ПЗПР.Ссылка.Организация=&Организация
		|		И ПЗПР.количество = 0) КАК РРА";
		
		ТекстЗапросаДЗБТРасш = 	"ВЫБРАТЬ
		|	Ссылка как Документ, Сумма(Сумма) КАК Сумма, Ссылка.Контрагент как Контрагент
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПЗПР.Ссылка КАК Ссылка,
		|		ПЗПР.Сумма КАК Сумма,
		|		ПЗПР.количество КАК количество
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Док.Ссылка КАК Ссылка,
		|			Док.Сумма КАК Сумма,
		|			ЕСТЬNULL(ТоварыПЗ.Количество, 0) КАК количество
		|		ИЗ
		|			Документ.ПоступлениеДопРасходов КАК Док
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ПЗП.Ссылка КАК Ссылка,
		|					ЕСТЬNULL(ПЗП.Количество, 0) КАК Количество
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ПоступлениеДопРасходовТовары.Ссылка КАК Ссылка,
		|						СУММА(ПоступлениеДопРасходовТовары.Количество) КАК Количество
		|					ИЗ
		|						Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
		|					Где ПоступлениеДопРасходовТовары.Ссылка.Организация=&Организация
		|					СГРУППИРОВАТЬ ПО
		|						ПоступлениеДопРасходовТовары.Ссылка) КАК ПЗП) КАК ТоварыПЗ
		|				ПО Док.Ссылка = ТоварыПЗ.Ссылка) КАК ПЗПР
		|	ГДЕ
		|		ПЗПР.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон и Ссылка.Проведен=Истина и ПЗПР.Ссылка.Организация=&Организация
		|		И ПЗПР.количество = 0) КАК РРА Сгруппировать по ССылка, ССылка.Контрагент";
		
	Иначе
		
		ТекстЗапросаДЗБТ = 
		"ВЫБРАТЬ
		|	СУММА(РРА.Сумма) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПЗПР.Ссылка КАК Ссылка,
		|		ПЗПР.Сумма КАК Сумма,
		|		ПЗПР.количество КАК количество
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Док.Ссылка КАК Ссылка,
		|			Док.Сумма КАК Сумма,
		|			ЕСТЬNULL(ТоварыПЗ.Количество, 0) КАК количество
		|		ИЗ
		|			Документ.ПоступлениеДопРасходов КАК Док
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ПЗП.Ссылка КАК Ссылка,
		|					ЕСТЬNULL(ПЗП.Количество, 0) КАК Количество
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ПоступлениеДопРасходовТовары.Ссылка КАК Ссылка,
		|						СУММА(ПоступлениеДопРасходовТовары.Количество) КАК Количество
		|					ИЗ
		|						Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
		|
		|					СГРУППИРОВАТЬ ПО
		|						ПоступлениеДопРасходовТовары.Ссылка) КАК ПЗП) КАК ТоварыПЗ
		|				ПО Док.Ссылка = ТоварыПЗ.Ссылка) КАК ПЗПР
		|	ГДЕ
		|		ПЗПР.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон и Ссылка.Проведен=Истина
		|		И ПЗПР.количество = 0) КАК РРА";
		
		ТекстЗапросаДЗБТРасш = 	"ВЫБРАТЬ
		|	Ссылка как Документ, Сумма(Сумма) КАК Сумма, Ссылка.Контрагент как Контрагент
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПЗПР.Ссылка КАК Ссылка,
		|		ПЗПР.Сумма КАК Сумма,
		|		ПЗПР.количество КАК количество
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Док.Ссылка КАК Ссылка,
		|			Док.Сумма КАК Сумма,
		|			ЕСТЬNULL(ТоварыПЗ.Количество, 0) КАК количество
		|		ИЗ
		|			Документ.ПоступлениеДопРасходов КАК Док
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ПЗП.Ссылка КАК Ссылка,
		|					ЕСТЬNULL(ПЗП.Количество, 0) КАК Количество
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ПоступлениеДопРасходовТовары.Ссылка КАК Ссылка,
		|						СУММА(ПоступлениеДопРасходовТовары.Количество) КАК Количество
		|					ИЗ
		|						Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
		
		|					СГРУППИРОВАТЬ ПО
		|						ПоступлениеДопРасходовТовары.Ссылка) КАК ПЗП) КАК ТоварыПЗ
		|				ПО Док.Ссылка = ТоварыПЗ.Ссылка) КАК ПЗПР
		|	ГДЕ
		|		ПЗПР.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон и Ссылка.Проведен=Истина
		|		И ПЗПР.количество = 0) КАК РРА Сгруппировать по ССылка, ССылка.Контрагент";
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьНастройкиЗапросаТрехсторонниеПП()
	
Если Не ПоВсем Тогда

	ТекстЗапросаТрехсторонниеПП = 
	"Выбрать Сумма(Сумма) как Сумма из (
	 |ВЫБРАТЬ
	 |	ПЗП.Регистратор,
	 |	ПЗП.Сумма,
	 |	ПЗП.КонтрагентыСумма,
	 |	ПЗП.ЗатратыСумма
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		ДС.Регистратор КАК Регистратор,
	 |		ЕСТЬNULL(ДС.Сумма, 0) КАК Сумма,
	 |		ЕСТЬNULL(Контрагенты.Сумма, 0) КАК КонтрагентыСумма,
	 |		ЕСТЬNULL(Затраты.Сумма, 0) КАК ЗатратыСумма
	 |	ИЗ
	 |		(ВЫБРАТЬ
	 |			ДенежныеСредства.Регистратор КАК Регистратор,
	 |			СУММА(ВЫБОР
	 |					КОГДА ДенежныеСредства.ВидДвижения = &Приход
	 |						ТОГДА ДенежныеСредства.Сумма
	 |					ИНАЧЕ -ДенежныеСредства.Сумма
	 |				КОНЕЦ) КАК Сумма
	 |		ИЗ
	 |			РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	 |		ГДЕ
	 |			ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон и Регистратор.Организация=&Организация
	 |		
	 |		СГРУППИРОВАТЬ ПО
	 |			ДенежныеСредства.Регистратор) КАК ДС
	 |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |				ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
	 |				СУММА(ВЫБОР
	 |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Приход
	 |							ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	 |						ИНАЧЕ -ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	 |					КОНЕЦ) КАК Сумма
	 |			ИЗ
	 |				РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	 |			ГДЕ
	 |				ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон и Регистратор.Организация=&Организация
	 |			
	 |			СГРУППИРОВАТЬ ПО
	 |				ВзаиморасчетыСКонтрагентами.Регистратор) КАК Контрагенты
	 |			ПО ДС.Регистратор = Контрагенты.Регистратор
	 |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |				Затраты.Регистратор КАК Регистратор,
	 |				СУММА(Затраты.Сумма) КАК Сумма
	 |			ИЗ
	 |				РегистрНакопления.Затраты КАК Затраты
	 |			ГДЕ
	 |				Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон и Регистратор.Организация=&Организация
	 |			
	 |			СГРУППИРОВАТЬ ПО
	 |				Затраты.Регистратор) КАК Затраты
	 |			ПО ДС.Регистратор = Затраты.Регистратор) КАК ПЗП
	 |ГДЕ
	 |	ПЗП.Сумма = -ПЗП.КонтрагентыСумма
	 |	И ПЗП.Сумма = -ПЗП.ЗатратыСумма) ПРОЛ";
	 
	 ТекстЗапросаТрехсторонниеППРасш = 	"Выбрать Регистратор как Документ, Сумма(Сумма) как Сумма, Регистратор.Контрагент как Контрагент из (
	 |ВЫБРАТЬ
	 |	ПЗП.Регистратор,
	 |	ПЗП.Сумма,
	 |	ПЗП.КонтрагентыСумма,
	 |	ПЗП.ЗатратыСумма
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		ДС.Регистратор КАК Регистратор,
	 |		ЕСТЬNULL(ДС.Сумма, 0) КАК Сумма,
	 |		ЕСТЬNULL(Контрагенты.Сумма, 0) КАК КонтрагентыСумма,
	 |		ЕСТЬNULL(Затраты.Сумма, 0) КАК ЗатратыСумма
	 |	ИЗ
	 |		(ВЫБРАТЬ
	 |			ДенежныеСредства.Регистратор КАК Регистратор,
	 |			СУММА(ВЫБОР
	 |					КОГДА ДенежныеСредства.ВидДвижения = &Приход
	 |						ТОГДА ДенежныеСредства.Сумма
	 |					ИНАЧЕ -ДенежныеСредства.Сумма
	 |				КОНЕЦ) КАК Сумма
	 |		ИЗ
	 |			РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	 |		ГДЕ
	 |			ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон и Регистратор.Организация=&Организация
	 |		
	 |		СГРУППИРОВАТЬ ПО
	 |			ДенежныеСредства.Регистратор) КАК ДС
	 |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |				ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
	 |				СУММА(ВЫБОР
	 |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Приход
	 |							ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	 |						ИНАЧЕ -ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	 |					КОНЕЦ) КАК Сумма
	 |			ИЗ
	 |				РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	 |			ГДЕ
	 |				ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон и Регистратор.Организация=&Организация
	 |			
	 |			СГРУППИРОВАТЬ ПО
	 |				ВзаиморасчетыСКонтрагентами.Регистратор) КАК Контрагенты
	 |			ПО ДС.Регистратор = Контрагенты.Регистратор
	 |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |				Затраты.Регистратор КАК Регистратор,
	 |				СУММА(Затраты.Сумма) КАК Сумма
	 |			ИЗ
	 |				РегистрНакопления.Затраты КАК Затраты
	 |			ГДЕ
	 |				Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон и Регистратор.Организация=&Организация
	 |			
	 |			СГРУППИРОВАТЬ ПО
	 |				Затраты.Регистратор) КАК Затраты
	 |			ПО ДС.Регистратор = Затраты.Регистратор) КАК ПЗП
	 |ГДЕ
	 |	ПЗП.Сумма = -ПЗП.КонтрагентыСумма
	 |	И ПЗП.Сумма = -ПЗП.ЗатратыСумма) ПРОЛ Сгруппировать по Регистратор, Регистратор.Контрагент";
	 
Иначе
	ТекстЗапросаТрехсторонниеПП = 
	"Выбрать Сумма(Сумма) как Сумма из (
	 |ВЫБРАТЬ
	 |	ПЗП.Регистратор,
	 |	ПЗП.Сумма,
	 |	ПЗП.КонтрагентыСумма,
	 |	ПЗП.ЗатратыСумма
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		ДС.Регистратор КАК Регистратор,
	 |		ЕСТЬNULL(ДС.Сумма, 0) КАК Сумма,
	 |		ЕСТЬNULL(Контрагенты.Сумма, 0) КАК КонтрагентыСумма,
	 |		ЕСТЬNULL(Затраты.Сумма, 0) КАК ЗатратыСумма
	 |	ИЗ
	 |		(ВЫБРАТЬ
	 |			ДенежныеСредства.Регистратор КАК Регистратор,
	 |			СУММА(ВЫБОР
	 |					КОГДА ДенежныеСредства.ВидДвижения = &Приход
	 |						ТОГДА ДенежныеСредства.Сумма
	 |					ИНАЧЕ -ДенежныеСредства.Сумма
	 |				КОНЕЦ) КАК Сумма
	 |		ИЗ
	 |			РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	 |		ГДЕ
	 |			ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон
	 |		
	 |		СГРУППИРОВАТЬ ПО
	 |			ДенежныеСредства.Регистратор) КАК ДС
	 |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |				ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
	 |				СУММА(ВЫБОР
	 |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Приход
	 |							ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	 |						ИНАЧЕ -ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	 |					КОНЕЦ) КАК Сумма
	 |			ИЗ
	 |				РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	 |			ГДЕ
	 |				ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон
	 |			
	 |			СГРУППИРОВАТЬ ПО
	 |				ВзаиморасчетыСКонтрагентами.Регистратор) КАК Контрагенты
	 |			ПО ДС.Регистратор = Контрагенты.Регистратор
	 |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |				Затраты.Регистратор КАК Регистратор,
	 |				СУММА(Затраты.Сумма) КАК Сумма
	 |			ИЗ
	 |				РегистрНакопления.Затраты КАК Затраты
	 |			ГДЕ
	 |				Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	 |			
	 |			СГРУППИРОВАТЬ ПО
	 |				Затраты.Регистратор) КАК Затраты
	 |			ПО ДС.Регистратор = Затраты.Регистратор) КАК ПЗП
	 |ГДЕ
	 |	ПЗП.Сумма = -ПЗП.КонтрагентыСумма
	 |	И ПЗП.Сумма = -ПЗП.ЗатратыСумма) ПРОЛ";
	 
	 ТекстЗапросаТрехсторонниеППРасш = 	"Выбрать Регистратор как Документ, Сумма(Сумма) как Сумма, Регистратор.Контрагент как Контрагент из (
	 |ВЫБРАТЬ
	 |	ПЗП.Регистратор,
	 |	ПЗП.Сумма,
	 |	ПЗП.КонтрагентыСумма,
	 |	ПЗП.ЗатратыСумма
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		ДС.Регистратор КАК Регистратор,
	 |		ЕСТЬNULL(ДС.Сумма, 0) КАК Сумма,
	 |		ЕСТЬNULL(Контрагенты.Сумма, 0) КАК КонтрагентыСумма,
	 |		ЕСТЬNULL(Затраты.Сумма, 0) КАК ЗатратыСумма
	 |	ИЗ
	 |		(ВЫБРАТЬ
	 |			ДенежныеСредства.Регистратор КАК Регистратор,
	 |			СУММА(ВЫБОР
	 |					КОГДА ДенежныеСредства.ВидДвижения = &Приход
	 |						ТОГДА ДенежныеСредства.Сумма
	 |					ИНАЧЕ -ДенежныеСредства.Сумма
	 |				КОНЕЦ) КАК Сумма
	 |		ИЗ
	 |			РегистрНакопления.ДенежныеСредства КАК ДенежныеСредства
	 |		ГДЕ
	 |			ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон
	 |		
	 |		СГРУППИРОВАТЬ ПО
	 |			ДенежныеСредства.Регистратор) КАК ДС
	 |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |				ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
	 |				СУММА(ВЫБОР
	 |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Приход
	 |							ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	 |						ИНАЧЕ -ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	 |					КОНЕЦ) КАК Сумма
	 |			ИЗ
	 |				РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	 |			ГДЕ
	 |				ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон
	 |			
	 |			СГРУППИРОВАТЬ ПО
	 |				ВзаиморасчетыСКонтрагентами.Регистратор) КАК Контрагенты
	 |			ПО ДС.Регистратор = Контрагенты.Регистратор
	 |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |				Затраты.Регистратор КАК Регистратор,
	 |				СУММА(Затраты.Сумма) КАК Сумма
	 |			ИЗ
	 |				РегистрНакопления.Затраты КАК Затраты
	 |			ГДЕ
	 |				Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	 |			
	 |			СГРУППИРОВАТЬ ПО
	 |				Затраты.Регистратор) КАК Затраты
	 |			ПО ДС.Регистратор = Затраты.Регистратор) КАК ПЗП
	 |ГДЕ
	 |	ПЗП.Сумма = -ПЗП.КонтрагентыСумма
	 |	И ПЗП.Сумма = -ПЗП.ЗатратыСумма) ПРОЛ Сгруппировать по Регистратор, Регистратор.Контрагент";
	 
КонецЕсли;
 Конецпроцедуры
                                                                              
Процедура ЗаполнитьНастройкиЗапросаПереходящиеЗатраты()
	
Если Не ПоВсем Тогда
	ТекстЗапросаПереходящиеЗатраты = 
	"ВЫБРАТЬ
	|	СУММА(ПРОЛ.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		Затраты.Регистратор КАК Регистратор,
	|		СУММА(Затраты.Сумма) КАК Сумма
	|	ИЗ
	|		РегистрНакопления.Затраты КАК Затраты
	|	ГДЕ
	|		Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И (НЕ Затраты.Регистратор В
	|					(ВЫБРАТЬ
	|						РегистрНакопления.ДенежныеСредства.Регистратор
	|					ИЗ
	|						РегистрНакопления.ДенежныеСредства
	|					ГДЕ
	|						РегистрНакопления.ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|		И (НЕ Затраты.Регистратор В
	|					(ВЫБРАТЬ
	|						РегистрНакопления.ВзаиморасчетыСКонтрагентами.Регистратор
	|					ИЗ
	|						РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|					ГДЕ
	|						РегистрНакопления.ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|		И (НЕ Затраты.Регистратор В
	|					(ВЫБРАТЬ
	|						РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Регистратор
	|					ИЗ
	|						РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами
	|					ГДЕ
	|						РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|		И (НЕ Затраты.Регистратор В
	|					(ВЫБРАТЬ
	|						РегистрНакопления.ПартииТоваровНаСкладах.Регистратор
	|					ИЗ
	|						РегистрНакопления.ПартииТоваровНаСкладах
	|					ГДЕ
	|						РегистрНакопления.ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|		И (НЕ Затраты.Регистратор В
	|					(ВЫБРАТЬ
	|						РегистрНакопления.СтоимостьОС.Регистратор
	|					ИЗ
	|						РегистрНакопления.СтоимостьОС
	|					ГДЕ
	|						РегистрНакопления.СтоимостьОС.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|		И Затраты.Регистратор.Организация = &Организация
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Затраты.Регистратор) КАК ПРОЛ";
	
	ТекстЗапросаПереходящиеЗатратыРасш = "
	|Выбрать Регистратор как Документ, Сумма(Сумма) как Сумма, Регистратор.Контрагент как Контрагент из (
	|ВЫБРАТЬ
	|	Затраты.Регистратор,
	|	СУММА(Затраты.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.Затраты КАК Затраты
	|ГДЕ
	|	Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ДенежныеСредства.Регистратор
	|				ИЗ
	|					РегистрНакопления.ДенежныеСредства
	|				ГДЕ
	|					РегистрНакопления.ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Регистратор
	|				ИЗ
	|					РегистрНакопления.ПартииТоваровНаСкладах
	|				ГДЕ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон)) 
	|		И (НЕ Затраты.Регистратор В
	|					(ВЫБРАТЬ
	|						РегистрНакопления.СтоимостьОС.Регистратор
	|					ИЗ
	|						РегистрНакопления.СтоимостьОС
	|					ГДЕ
	|						РегистрНакопления.СтоимостьОС.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|		И Затраты.Регистратор.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	Затраты.Регистратор) как ПРОЛ Сгруппировать по Регистратор, Регистратор.Контрагент";
Иначе
	ТекстЗапросаПереходящиеЗатраты = 
	"Выбрать Сумма(Сумма) как Сумма из (
	|ВЫБРАТЬ
	|	Затраты.Регистратор,
	|	СУММА(Затраты.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.Затраты КАК Затраты
	|ГДЕ
	|	Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ДенежныеСредства.Регистратор
	|				ИЗ
	|					РегистрНакопления.ДенежныеСредства
	|				ГДЕ
	|					РегистрНакопления.ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Регистратор
	|				ИЗ
	|					РегистрНакопления.ПартииТоваровНаСкладах
	|				ГДЕ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|					(ВЫБРАТЬ
	|						РегистрНакопления.СтоимостьОС.Регистратор
	|					ИЗ
	|						РегистрНакопления.СтоимостьОС
	|					ГДЕ
	|						РегистрНакопления.СтоимостьОС.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|
	|СГРУППИРОВАТЬ ПО
	|	Затраты.Регистратор) как ПРОЛ";
	
	ТекстЗапросаПереходящиеЗатратыРасш = "
	|Выбрать Регистратор как Документ, Сумма(Сумма) как Сумма, Регистратор.Контрагент как контрагент из (
	|ВЫБРАТЬ
	|	Затраты.Регистратор,
	|	СУММА(Затраты.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.Затраты КАК Затраты
	|ГДЕ
	|	Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ДенежныеСредства.Регистратор
	|				ИЗ
	|					РегистрНакопления.ДенежныеСредства
	|				ГДЕ
	|					РегистрНакопления.ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Регистратор
	|				ИЗ
	|					РегистрНакопления.ПартииТоваровНаСкладах
	|				ГДЕ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|					(ВЫБРАТЬ
	|						РегистрНакопления.СтоимостьОС.Регистратор
	|					ИЗ
	|						РегистрНакопления.СтоимостьОС
	|					ГДЕ
	|						РегистрНакопления.СтоимостьОС.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|
	|СГРУППИРОВАТЬ ПО
	|	Затраты.Регистратор) как ПРОЛ Сгруппировать по Регистратор, Регистратор.Контрагент";
	
КонецЕсли;
	
Конецпроцедуры

Процедура ЗаполнитьНастройкиЗапросаНесовпадающиеДенежныеРегистры()
	
Если Не ПоВсем Тогда
	ТекстЗапросаПереходящиеЗатраты = 
	"Выбрать Сумма(Сумма) как Сумма из (
	|ВЫБРАТЬ
	|	Затраты.Регистратор,
	|	СУММА(Затраты.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.Затраты КАК Затраты
	|ГДЕ
	|	Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ДенежныеСредства.Регистратор
	|				ИЗ
	|					РегистрНакопления.ДенежныеСредства
	|				ГДЕ
	|					РегистрНакопления.ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Регистратор
	|				ИЗ
	|					РегистрНакопления.ПартииТоваровНаСкладах
	|				ГДЕ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон)) и Затраты.Регистратор.Организация=&Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	Затраты.Регистратор) как ПРОЛ";
Иначе
	ТекстЗапросаПереходящиеЗатраты = 
	"Выбрать Сумма(Сумма) как Сумма из (
	|ВЫБРАТЬ
	|	Затраты.Регистратор,
	|	СУММА(Затраты.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.Затраты КАК Затраты
	|ГДЕ
	|	Затраты.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ДенежныеСредства.Регистратор
	|				ИЗ
	|					РегистрНакопления.ДенежныеСредства
	|				ГДЕ
	|					РегистрНакопления.ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Регистратор
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами
	|				ГДЕ
	|					РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|	И (НЕ Затраты.Регистратор В
	|				(ВЫБРАТЬ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Регистратор
	|				ИЗ
	|					РегистрНакопления.ПартииТоваровНаСкладах
	|				ГДЕ
	|					РегистрНакопления.ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон))
	|
	|СГРУППИРОВАТЬ ПО
	|	Затраты.Регистратор) как ПРОЛ";
	
Конецесли;
	
Конецпроцедуры

Процедура ЗаполнитьНастройкиЗапросаНесовпадающиеСуммаВЗиСуммаУПР()
	
	Если Не ПоВсем Тогда
	ТекстЗапросаНесовпадающиеСуммаВЗиСуммаУПР = 
		"ВЫБРАТЬ
		|	СУММА(ВзаиморасчетыСКонтрагентами.СуммаУпр - ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов) КАК сумма
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
		|ГДЕ
		|	ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов <> ВзаиморасчетыСКонтрагентами.СуммаУпр
		|	И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон и ВзаиморасчетыСКонтрагентами.Регистратор.Организация=&Организация";	
		
	ТекстЗапросаНесовпадающиеСуммаВЗиСуммаУПРРасш = 
		"ВЫБРАТЬ
		|	Регистратор как Документ, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов Как Сумма, Регистратор.Контрагент как Контрагент
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
		|ГДЕ
		|	ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов <> ВзаиморасчетыСКонтрагентами.СуммаУпр
		|	И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон и ВзаиморасчетыСКонтрагентами.Регистратор.Организация=&Организация";	
	Иначе
	ТекстЗапросаНесовпадающиеСуммаВЗиСуммаУПР = 
		"ВЫБРАТЬ
		|	СУММА(ВзаиморасчетыСКонтрагентами.СуммаУпр - ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов) КАК сумма
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
		|ГДЕ
		|	ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов <> ВзаиморасчетыСКонтрагентами.СуммаУпр
		|	И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон";	
		
	ТекстЗапросаНесовпадающиеСуммаВЗиСуммаУПРРасш = 
		"ВЫБРАТЬ
		|	Регистратор как Документ, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов Как Сумма, Регистратор.Контрагент как Контрагент
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
		|ГДЕ
		|	ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов <> ВзаиморасчетыСКонтрагентами.СуммаУпр
		|	И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон";			
	КонецЕсли;
Конецпроцедуры	

Процедура ЗаполнитьНастройкиЗапросаПустойСтатусПартии()
	
	Если Не ПоВсем Тогда
		ТекстЗапросаПустойСтатусПартии = 
			"ВЫБРАТЬ
			|	-СУММА(ПЗП.Сумма) КАК Сумма
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПартиИТоваровНаСкладах.Регистратор КАК Регистратор,
			|		СУММА(ВЫБОР
			|				КОГДА ПартиИТоваровНаСкладах.ВидДвижения = &Приход
			|					ТОГДА ПартиИТоваровНаСкладах.Стоимость
			|				ИНАЧЕ -ПартиИТоваровНаСкладах.Стоимость
			|			КОНЕЦ) КАК Сумма
			|	ИЗ
			|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартиИТоваровНаСкладах
			|	ГДЕ
			|		ПартиИТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
			|		И ПартиИТоваровНаСкладах.СтатусПартии = &ПустойСтатус и ПартиИТоваровНаСкладах.Регистратор.Организация=&Организация
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ПартиИТоваровНаСкладах.Регистратор) КАК ПЗП";	
			
			ТекстЗапросаПустойСтатусПартииРасш = 		"
			|ВЫБРАТЬ Регистратор как Документ,Регистратор.Контрагент как Контрагент,
			|	-СУММА(ПЗП.Сумма) КАК Сумма
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПартиИТоваровНаСкладах.Регистратор КАК Регистратор,
			|		СУММА(ВЫБОР
			|				КОГДА ПартиИТоваровНаСкладах.ВидДвижения = &Приход
			|					ТОГДА ПартиИТоваровНаСкладах.Стоимость
			|				ИНАЧЕ -ПартиИТоваровНаСкладах.Стоимость
			|			КОНЕЦ) КАК Сумма
			|	ИЗ
			|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартиИТоваровНаСкладах
			|	ГДЕ
			|		ПартиИТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
			|		И ПартиИТоваровНаСкладах.СтатусПартии = &ПустойСтатус и ПартиИТоваровНаСкладах.Регистратор.Организация=&Организация
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ПартиИТоваровНаСкладах.Регистратор) КАК ПЗП Сгруппировать по Регистратор, Регистратор.Контрагент";	
	Иначе
		
		ТекстЗапросаПустойСтатусПартии = 
			"ВЫБРАТЬ
			|	-СУММА(ПЗП.Сумма) КАК Сумма
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПартиИТоваровНаСкладах.Регистратор КАК Регистратор,
			|		СУММА(ВЫБОР
			|				КОГДА ПартиИТоваровНаСкладах.ВидДвижения = &Приход
			|					ТОГДА ПартиИТоваровНаСкладах.Стоимость
			|				ИНАЧЕ -ПартиИТоваровНаСкладах.Стоимость
			|			КОНЕЦ) КАК Сумма
			|	ИЗ
			|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартиИТоваровНаСкладах
			|	ГДЕ
			|		ПартиИТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
			|		И ПартиИТоваровНаСкладах.СтатусПартии = &ПустойСтатус
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ПартиИТоваровНаСкладах.Регистратор) КАК ПЗП";	
			
			ТекстЗапросаПустойСтатусПартииРасш = 		"
			|ВЫБРАТЬ Регистратор как Документ,Регистратор.Контрагент как Контрагент,
			|	-СУММА(ПЗП.Сумма) КАК Сумма
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПартиИТоваровНаСкладах.Регистратор КАК Регистратор,
			|		СУММА(ВЫБОР
			|				КОГДА ПартиИТоваровНаСкладах.ВидДвижения = &Приход
			|					ТОГДА ПартиИТоваровНаСкладах.Стоимость
			|				ИНАЧЕ -ПартиИТоваровНаСкладах.Стоимость
			|			КОНЕЦ) КАК Сумма
			|	ИЗ
			|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартиИТоваровНаСкладах
			|	ГДЕ
			|		ПартиИТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
			|		И ПартиИТоваровНаСкладах.СтатусПартии = &ПустойСтатус
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ПартиИТоваровНаСкладах.Регистратор) КАК ПЗП Сгруппировать по Регистратор, Регистратор.Контрагент";	
		
	Конецесли;
	
Конецпроцедуры	

Процедура ЗаполнитьНастройкиЗапросаВозвратыПоставщикам()
	
	Если Не ПоВсем Тогда

	ТекстЗапросаВозвратыПоставщикам = 
		"ВЫБРАТЬ
		|	СУММА(ПЗ.Сумма + ПЗ1.Сумма) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
		|		СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Сумма
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|	ГДЕ
		|		ПартииТоваровНаСкладах.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|		И ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон и ПартиИТоваровНаСкладах.Регистратор.Организация=&Организация
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПартииТоваровНаСкладах.Регистратор) КАК ПЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
		|			СУММА(ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов) КАК Сумма
		|		ИЗ
		|			РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
		|		ГДЕ
		|			ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|			И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон и ВзаиморасчетыСКонтрагентами.Регистратор.Организация=&Организация
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВзаиморасчетыСКонтрагентами.Регистратор) КАК ПЗ1
		|		ПО ПЗ.Регистратор = ПЗ1.Регистратор
		|ГДЕ
		|	ПЗ.Сумма <> -ПЗ1.Сумма";	
		
		ТекстЗапросаВозвратыПоставщикамРасш = 		"ВЫБРАТЬ
		|	ПЗ.Регистратор как Документ, -ПЗ1.Сумма как Сумма, ПЗ.Регистратор.Контрагент как Контрагент
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
		|		СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Сумма
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|	ГДЕ
		|		ПартииТоваровНаСкладах.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|		И ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон и ПартиИТоваровНаСкладах.Регистратор.Организация=&Организация
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПартииТоваровНаСкладах.Регистратор) КАК ПЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
		|			СУММА(ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов) КАК Сумма
		|		ИЗ
		|			РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
		|		ГДЕ
		|			ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|			И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВзаиморасчетыСКонтрагентами.Регистратор) КАК ПЗ1
		|		ПО ПЗ.Регистратор = ПЗ1.Регистратор
		|ГДЕ
		|	ПЗ.Сумма <> -ПЗ1.Сумма";	
		
	Иначе 
	ТекстЗапросаВозвратыПоставщикам = 
		"ВЫБРАТЬ
		|	СУММА(ПЗ.Сумма + ПЗ1.Сумма) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
		|		СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Сумма
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|	ГДЕ
		|		ПартииТоваровНаСкладах.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|		И ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПартииТоваровНаСкладах.Регистратор) КАК ПЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
		|			СУММА(ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов) КАК Сумма
		|		ИЗ
		|			РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
		|		ГДЕ
		|			ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|			И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВзаиморасчетыСКонтрагентами.Регистратор) КАК ПЗ1
		|		ПО ПЗ.Регистратор = ПЗ1.Регистратор
		|ГДЕ
		|	ПЗ.Сумма <> -ПЗ1.Сумма";	
		
		ТекстЗапросаВозвратыПоставщикамРасш = 		"ВЫБРАТЬ
		|	ПЗ.Регистратор как Документ, -ПЗ1.Сумма как Сумма, ПЗ.Регистратор.Контрагент как Контрагент
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
		|		СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Сумма
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|	ГДЕ
		|		ПартииТоваровНаСкладах.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|		И ПартииТоваровНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПартииТоваровНаСкладах.Регистратор) КАК ПЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
		|			СУММА(ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов) КАК Сумма
		|		ИЗ
		|			РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
		|		ГДЕ
		|			ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|			И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &ДатаНач И &ДатаКон
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВзаиморасчетыСКонтрагентами.Регистратор) КАК ПЗ1
		|		ПО ПЗ.Регистратор = ПЗ1.Регистратор
		|ГДЕ
		|	ПЗ.Сумма <> -ПЗ1.Сумма";	
		
	КонецЕсли;
Конецпроцедуры	

Процедура ЗаполнитьНастройкиЗапросаВозвратыПокупателей()
	
	//ТекстЗапросаВозвратыПокупателей = 
	//	"ВЫБРАТЬ
	//	|	СУММА(ПартиИТоваровНаСкладах.Стоимость) КАК Сумма
	//	|ИЗ
	//	|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартиИТоваровНаСкладах
	//	|ГДЕ
	//	|	ПартиИТоваровНаСкладах.Период МЕЖДУ (&ДатаНач) И (&ДатаКон)
	//	|	И ПартиИТоваровНаСкладах.СтатусПартии = &ПустойСтатус";	
	
Конецпроцедуры	

Функция ВернутьмоментВремениВзаиморасчеты(ДатаВозврата)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",ДатаВозврата);
	Запрос.Текст = "
	|Выбрать Регистратор из РегистрНакопления.ВзаиморасчетыСКонтрагентами
	|Где Период = (&ДатаНач)
	|Упорядочить по Регистратор.Дата";
	Выб = Запрос.Выполнить().Выбрать();
	Если (Выб.Следующий()) Тогда 
		Возврат Новый МоментВремени(ДатаВозврата, Выб.Регистратор);
	Иначе 
		Возврат Новый МоментВремени(ДатаВозврата);
	КонецЕсли;
КонецФункции	

Функция ВернутьмоментВремениСклад(ДатаВозврата)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",ДатаВозврата);
	Запрос.Текст = "
	|Выбрать Регистратор из РегистрНакопления.ПартииТоваровНаСкладах
	|Где Период = (&ДатаНач)
	|Упорядочить по Регистратор.Дата";
	Выб = Запрос.Выполнить().Выбрать();
	Если (Выб.Следующий()) Тогда 
		Возврат Новый МоментВремени(ДатаВозврата, Выб.Регистратор);
	Иначе 
		Возврат Новый МоментВремени(ДатаВозврата);
	КонецЕсли;
КонецФункции	

Процедура КоманднаяПанельФормыОбновить(Кнопка)
	// Вставить содержимое обработчика.
    // Инициализация	
	//ДатаНач = НачалоДня(ДатаНач);	
	//ДатаКон = КонецДня(ДатаКон);	
	Если (Организация = Справочники.Организации.НайтиПоКоду("00001")) Тогда 
		ПоВсем=Истина;
	Иначе
		ПоВсем=Ложь;
	КонецЕсли;
	ЗаполнитьНачальныеНастройки();	
	Тип 			= Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Якорная");
	Себестоимость 	= 1;
	Цены = 0; 
	
	ИнвестицииИКредит = Новый СписокЗначений;
	ИнвестицииИКредит.Добавить(Справочники.ТипыДоговоров.Инвестиции);
	ИнвестицииИКредит.Добавить(Справочники.ТипыДоговоров.Кредит);
	ИнвестицииИКредит.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
	ИнвестицииИКредит.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);
	
	ВалютаУправленческогоУчета = справочники.Валюты.НайтиПоКоду("810");	
	
    ТорговаяКомпания = ?(ТорговаяКомпанияЭлемент=Справочники.Контрагенты.ПустаяСсылка(),Справочники.Контрагенты.НайтиПоКоду("00003"),ТорговаяКомпанияЭлемент);
	МассивКоличеств = новый массив;
	ТаблСебестоимость = новый ТаблицаЗначений;
	ТаблСебестоимостьСвернутая = новый ТаблицаЗначений;
	ТаблСебестоимостьСвернутая.Колонки.Добавить("Номенклатура");
	ТаблСебестоимостьСвернутая.Колонки.Добавить("Сумма");	
	
	СписокСкладов = новый СписокЗначений;
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("00270"));
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("00209"));
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("00269"));

	// Выводим отчет за период !!!!!!!!!	
    ЗапросКЗН 	= новый Запрос;
	ЗапросДЗН 	= новый Запрос;
	ЗапросДСН 	= новый Запрос;
	ЗапросСКН 	= новый Запрос;
	ЗапросКЗК 	= новый Запрос;
	ЗапросДЗК 	= новый Запрос;
	ЗапросДСК 	= новый Запрос;
	ЗапросСКК 	= новый Запрос;
	ЗапросПОН 	= новый Запрос;	
	ЗапросПОК 	= новый Запрос;		
	ЗапросЗА 	= новый Запрос;	
	ЗапросИнвН 	= новый Запрос;	
	ЗапросИнвК 	= новый Запрос;	
	ЗапросКредН = новый Запрос;	
	ЗапросКредК = новый Запрос;	
	ЗапросВП 	= новый Запрос;
	ЗапросПУ 	= новый Запрос;
	ЗапросСПИС 	= новый Запрос;
	ЗапросВЗАИМ = новый Запрос; 
	ЗапросДСПС 	= новый Запрос; 
	ЗапросДЗБТ 	= новый Запрос;
	ЗапросТрехсторонниеПП = новый Запрос; 
	ЗапросПереходящиеЗатраты = новый ЗАпрос;
	ЗапросНесовпадающиеСуммаВЗиСуммаУПР =новый ЗАпрос; 
	ЗапросПустойСтатусПартии = новый Запрос;
	ЗапросВозвратыПоставщикам = новый Запрос;
	ЗапросОХН	= новый Запрос;
	ЗапросОХК	= новый Запрос;
	ЗапросОХОборот = Новый ЗАпрос;
	ЗапросОСН	= новый Запрос;
	ЗапросОСК	= новый Запрос;
	ЗапросОСОборот = Новый ЗАпрос;


	ТабДок = ЭлементыФормы.РезультатыОтчета;
	ТабДок.Очистить();
	Макет = ЭтотОбъект.ПолучитьМакет("Свернутый");
	// Сформируем информационную строку. 
	СтрокаПериода = "Период: с " + Строка(НачалоДня(ДатаНач)) + " по " + Строка(КонецДня(ДатаКон));
	Область = Макет.ПолучитьОбласть("Период");
	СтрокаЗаголовка = "Управленческий баланс за период с " + Формат(ДатаНач,"ДЛФ=Д") + " по " + Формат(ДатаКон,"ДЛФ=Д"); 
	Область.Параметры.СтрокаЗаголовок = СтрокаЗаголовка;              
	Область.Параметры.СтрокаПериода = СтрокаПериода;              
	ТабДок.Вывести(Область);					
	СтрокаОтбора = "";
						
//	СтрокаОтбора = СтрокаОтбора + ?(ЭтаФорма.ЭлементыФормы.Себестоимость.Значение = 1, ". По себестоимости", ". По типу цен:" + Тип.Наименование);
	СтрокаОтбора = СтрокаОтбора + "По себестоимости.";
					
	Область = Макет.ПолучитьОбласть("Отбор");
	Область.Параметры.СтрокаОтбора = СтрокаОтбора;
	ТабДок.Вывести(Область);	
	
	Область = Макет.ПолучитьОбласть("ТочкаАктуальности");
	Область.Параметры.ТочкаАктуальности = Последовательности.ПартионныйУчет.ПолучитьГраницу().Дата;
	ТабДок.Вывести(Область);
	
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Шапка);	
	
	ЗапросКЗН.Текст = ТекстЗапросаКЗ;                                  
	ЗапросКЗН.УстановитьПараметр("ДатаКон",ВернутьмоментВремениВзаиморасчеты(ДатаНач));
	ЗапросКЗН.УстановитьПараметр("ВалютаУправленческогоУчета",ВалютаУправленческогоУчета);
	ЗапросКЗН.УстановитьПараметр("ИнвестицииИКредит",ИнвестицииИКредит);
	ЗапросКЗН.УстановитьПараметр("ТипДог",Справочники.ТипыДоговоров.НайтиПоНаименованию("Поставка"));
	ЗапросКЗН.УстановитьПараметр("Организация",Организация);
	РезультатКЗН = ЗапросКЗН.Выполнить();
	ВыборкаКЗН = РезультатКЗН.Выбрать();
					
	ЗапросКЗК.Текст = ТекстЗапросаКЗ;               
	ЗапросКЗК.УстановитьПараметр("ДатаКон",Новый Граница(ДатаКон+1, ВидГраницы.Включая));
	ЗапросКЗК.УстановитьПараметр("ВалютаУправленческогоУчета",ВалютаУправленческогоУчета);
	ЗапросКЗК.УстановитьПараметр("ИнвестицииИКредит",ИнвестицииИКредит);
	ЗапросКЗК.УстановитьПараметр("ТипДог",Справочники.ТипыДоговоров.НайтиПоНаименованию("Поставка"));
	ЗапросКЗК.УстановитьПараметр("Организация",Организация);
	РезультатКЗК = ЗапросКЗК.Выполнить();
	ВыборкаКЗК = РезультатКЗК.Выбрать();
				
	ЗапросДЗН.Текст = ТекстЗапросаДЗ;
	ЗапросДЗН.УстановитьПараметр("ДатаКон",ВернутьмоментВремениВзаиморасчеты(ДатаНач));
	ЗапросДЗН.УстановитьПараметр("ВалютаУправленческогоУчета",ВалютаУправленческогоУчета);
	ЗапросДЗН.УстановитьПараметр("ИнвестицииИКредит",ИнвестицииИКредит);
	ЗапросДЗН.УстановитьПараметр("Организация",Организация);
	РезультатДЗН = ЗапросДЗН.Выполнить();
	ВыборкаДЗН = РезультатДЗН.Выбрать();
					
	ЗапросДЗК.Текст = ТекстЗапросаДЗ;
	ЗапросДЗК.УстановитьПараметр("ДатаКон",Новый Граница(ДатаКон+1, ВидГраницы.Включая));
	ЗапросДЗК.УстановитьПараметр("ВалютаУправленческогоУчета",ВалютаУправленческогоУчета);
	ЗапросДЗК.УстановитьПараметр("ИнвестицииИКредит",ИнвестицииИКредит);
	ЗапросДЗК.УстановитьПараметр("Организация",Организация);
	РезультатДЗК = ЗапросДЗК.Выполнить();
	ВыборкаДЗК = РезультатДЗК.Выбрать();
	
	ЗапросОрганизации = новый Запрос("Выбрать Ссылка из Справочник.Организации");
	Список = ЗапросОрганизации.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ЗапросДСН.Текст = ТекстЗапросаДС;
	ЗапросДСН.УстановитьПараметр("ДатаКон",ДатаНач);
	//ЗапросДСН.УстановитьПараметр("Организация",Организация);
	Если (ПоВсем) Тогда
		ЗапросДСН.УстановитьПараметр("Организация",Список);
	Иначе 
		ЗапросДСН.УстановитьПараметр("Организация",Организация);
	КонецЕсли;
	ЗапросДСН.УстановитьПараметр("Приход",ВидДВиженияНакопления.Приход);
	РезультатДСН = ЗапросДСН.Выполнить();
	ВыборкаДСН = РезультатДСН.Выбрать();
											
	ЗапросДСК.Текст = ТекстЗапросаДС;
	ЗапросДСК.УстановитьПараметр("ДатаКон",ДатаКон+1);
	//ЗапросДСК.УстановитьПараметр("Организация",Организация);
	Если (ПоВсем) Тогда
		ЗапросДСК.УстановитьПараметр("Организация",Список);
	Иначе 
		ЗапросДСК.УстановитьПараметр("Организация",Организация);
	КонецЕсли;

	ЗапросДСК.УстановитьПараметр("Приход",ВидДВиженияНакопления.Приход);
	РезультатДСК = ЗапросДСК.Выполнить();
	ВыборкаДСК = РезультатДСК.Выбрать();
										
	ЗапросСКН.Текст = ТекстЗапросаСК;
//	ЗапросСКН.УстановитьПараметр("ДатаНач",ВернутьмоментВремениСклад(ДатаНач));						
	ЗапросСКН.УстановитьПараметр("ДатаНач",ДатаНач);						
	ЗапросСКН.УстановитьПараметр("Организация",Организация);
	ЗапросСКН.УстановитьПараметр("ПустойСтатус",Перечисления.СтатусыПартийТоваров.ПустаяСсылка());
	ЗапросСКН.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	Если (ВыводитьЦены) Тогда 
		ЗапросСКН.УстановитьПараметр("ТипЦены",Элементыформы.Тип.Значение);
		ЗапросСКН.УстановитьПараметр("ВалютаУпрУчета",ВалютаУправленческогоУчета);
	Иначе 
	КонецЕсли;	
	РезультатСКН = ЗапросСКН.Выполнить();
	ВыборкаСКН = РезультатСКН.Выбрать();
					
	ЗапросСКК.Текст = ТекстЗапросаСК;
	ЗапросСКК.УстановитьПараметр("ДатаНач",ДатаКон+1);
	ЗапросСКК.УстановитьПараметр("Организация",Организация);
	ЗапросСКК.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	ЗапросСКК.УстановитьПараметр("ПустойСтатус",Перечисления.СтатусыПартийТоваров.ПустаяСсылка());
	РезультатСКК = ЗапросСКК.Выполнить();
	ВыборкаСКК = РезультатСКК.Выбрать();				
					
	ЗапросПОН.Текст = ТекстЗапросаПО;
	ЗапросПОН.УстановитьПараметр("ДатаКон",ДатаНач);
	ЗапросПОН.УстановитьПараметр("Организация",Организация);
	РезультатПОН = ЗапросПОН.Выполнить();                                
	ВыборкаПОН = РезультатПОН.Выбрать();
					
	ЗапросПОК.Текст = ТекстЗапросаПО;
	ЗапросПОК.УстановитьПараметр("ДатаКон",ДатаКон+1);
	ЗапросПОК.УстановитьПараметр("Организация",Организация);
	РезультатПОК = ЗапросПОК.Выполнить();
	ВыборкаПОК = РезультатПОК.Выбрать();
	
	ЗапросИнвН.Текст = ТекстЗапросаИНВ;
	Инв = новый СписокЗначений;
	Инв.Добавить(Справочники.ТипыДоговоров.Инвестиции);
	Инв.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
	ЗапросИнвН.УстановитьПараметр("ДатаКон",Новый моментВремени(ДатаНач));
	ЗапросИнвН.УстановитьПараметр("Инвестиции",Инв);
	ЗапросИнвН.УстановитьПараметр("Организация",Организация);

	
	РезультатИнвН = ЗапросИнвН.Выполнить();
	ВыборкаИнвН = РезультатИнвН.Выбрать();
	
	ЗапросИнвК.Текст = ТекстЗапросаИНВ;
	ЗапросИнвК.УстановитьПараметр("ДатаКон",Новый Граница(ДатаКон+1, ВидГраницы.Включая));
	ЗапросИнвК.УстановитьПараметр("Инвестиции",Инв);
	ЗапросИнвК.УстановитьПараметр("Организация",Организация);
	РезультатИнвК = ЗапросИнвК.Выполнить();
	ВыборкаИнвК = РезультатИнвК.Выбрать();

	Кр = новый СписокЗначений;
	Кр.Добавить(Справочники.ТипыДоговоров.Кредит);
	Кр.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);

	ЗапросКредН.Текст = ТекстЗапросаКРЕД;
	ЗапросКредН.УстановитьПараметр("ДатаКон",Новый моментВремени(ДатаНач));
	//ЗапросКредН.УстановитьПараметр("Кредит",Справочники.ТипыДоговоров.НайтиПоКоду("00006"));
	ЗапросКредН.УстановитьПараметр("Кредит",Кр);
	ЗапросКредН.УстановитьПараметр("Организация",Организация);
	РезультатКредН = ЗапросКредН.Выполнить();
	ВыборкаКредН = РезультатКредН.Выбрать();
	
	ЗапросКредК.Текст = ТекстЗапросаКРЕД;
	ЗапросКредК.УстановитьПараметр("ДатаКон",Новый Граница(ДатаКон+1, ВидГраницы.Включая));
	//ЗапросКредК.УстановитьПараметр("Кредит",Справочники.ТипыДоговоров.НайтиПоКоду("00006"));
	ЗапросКредК.УстановитьПараметр("Кредит",Кр);
	ЗапросКредК.УстановитьПараметр("Организация",Организация);
	РезультатКредК = ЗапросКредК.Выполнить();
	ВыборкаКредК = РезультатКредК.Выбрать();
	
	Если (Организация = Справочники.Организации.НайтиПоКоду("00001") или ПоВсем) Тогда  
		ЗапросЗА.Текст = ТекстЗапросаЗАПодразделение;
	Иначе
		ЗапросЗА.Текст = ТекстЗапросаЗаНЕЯШТ;
	Конецесли;
	
	ЗапросЗА.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросЗА.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросЗА.УстановитьПараметр("Организация",Организация);
	РезультатЗА = ЗапросЗА.Выполнить();
	ВыборкаЗА = РезультатЗА.Выбрать();
	
	ЗапросОСН.Текст = ТекстЗапросаОС;
	ЗапросОСН.УстановитьПараметр("ДатаКон",ДатаНач);						
	ЗапросОСН.УстановитьПараметр("Организация",Организация);
	ЗапросОСН.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	РезультатОСН = ЗапросОСН.Выполнить();
	ВыборкаОСН = РезультатОСН.Выбрать();

	ЗапросОСК.Текст = ТекстЗапросаОС;
	ЗапросОСК.УстановитьПараметр("ДатаКон",ДатаКон);						
	ЗапросОСК.УстановитьПараметр("Организация",Организация);
	ЗапросОСК.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	РезультатОСК = ЗапросОСК.Выполнить();
	ВыборкаОСК = РезультатОСК.Выбрать();
	
	ЗапросОСОборот.Текст = ТекстЗапросаОСОборот;
	ЗапросОСОборот.УстановитьПараметр("ДатаНач",ДатаНач);	
	ЗапросОСОборот.УстановитьПараметр("ДатаКон",ДатаКон);	
	ЗапросОСОборот.УстановитьПараметр("Организация",Организация);
	ЗапросОСОборот.УстановитьПараметр("ПустойСтатус",Перечисления.СтатусыПартийТоваров.ПустаяСсылка());
	ЗапросОСОборот.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	РезультатОСОборот = ЗапросОСОборот.Выполнить();
	ВыборкаОСОборот = РезультатОСОборот.Выбрать();
		
	ЗапросВП.Текст = ТекстЗАпросаВП;
	ЗапросВП.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросВП.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросВП.УстановитьПараметр("Организация",Организация);
	РезультатВП = ЗапросВП.Выполнить();
	ВыборкаВП = РезультатВП.Выбрать();
	                                                                        
	ЗапросПУ.Текст = ТекстЗАпросаПУ;
	ЗапросПУ.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросПУ.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросПУ.УстановитьПараметр("ПустаяСтатья",Справочники.СтатьиЗатрат.ПустаяСсылка());
	ЗапросПУ.УстановитьПараметр("Организация",Организация);
	ЗапросПУ.УстановитьПараметр("ПустоеПодразделение",Справочники.Подразделения.ПустаяСсылка());
	РезультатПУ = ЗапросПУ.Выполнить();
	ВыборкаПУ = РезультатПУ.Выбрать();
	
	ЗапросСПИС.Текст = ТекстЗАпросаСПИС;
	ЗапросСПИС.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросСПИС.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросСПИС.УстановитьПараметр("Организация",Организация);
	ЗапросСПИС.УстановитьПараметр("СписокСкладов",СписокСкладов);
	РезультатСПИС = ЗапросСПИС.Выполнить();
	ВыборкаСПИС = РезультатСПИС.Выбрать();
	
	ЗапросВЗАИМ.Текст = ТекстЗАпросаВЗАИМ;
	ЗапросВЗАИМ.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросВЗАИМ.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросВЗАИМ.УстановитьПараметр("Организация",Организация);
	ЗапросВЗАИМ.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	РезультатВЗАИМ = ЗапросВЗАИМ.Выполнить();
	ВыборкаВЗАИМ = РезультатВЗАИМ.Выбрать();
	
	ЗапросДСПС.Текст = ТекстЗапросаДСПС;
	ЗапросДСПС.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросДСПС.УстановитьПараметр("Организация",Организация);
	ЗапросДСПС.УстановитьПараметр("ДатаКон",ДатаКон);
	СтатьиПКО = новый СписокЗначений;
	СтатьиПКО.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка());
	ЗапросДСПС.УстановитьПараметр("СтатьиПКО",СтатьиПКО);
	ЗапросДСПС.УстановитьПараметр("ПолучениеДСВбанке",Перечисления.ВидыОперацийПКО.ПолучениеНаличныхДенежныхСредствВБанке);
	//СтатьиРКО = новый СписокЗначений;
	//СтатьиРКО.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.ПрочиеРасходыДенежныхСредств);
	//ЗапросДСПС.УстановитьПараметр("СтатьиРКО",СтатьиРКО);
	ЗапросДСПС.УстановитьПараметр("ОперацияПрочийПриход",Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствПрочее);
	ЗапросДСПС.УстановитьПараметр("ОперацияПрочийРасход",Перечисления.ВидыОперацийРКО.РасходДенежныхСредствПрочее);
	ЗапросДСПС.УстановитьПараметр("ОперацияПрочийПриходПП",Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПрочееПоступлениеБезналичныхДенежныхСредств);
	ЗапросДСПС.УстановитьПараметр("ОперацияПрочийРасходПП",Перечисления.ВидыОперацийППИсходящее.ПрочееСписаниеБезналичныхДенежныхСредств);
	ЗапросДСПС.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	РезультатДСПС = ЗапросДСПС.Выполнить();
	ВыборкаДСПС = РезультатДСПС.Выбрать();
	
	ЗапросДЗБТ.Текст = ТекстЗапросаДЗБТ;
	ЗапросДЗБТ.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросДЗБТ.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросДЗБТ.УстановитьПараметр("Организация",Организация);
	ЗапросДЗБТ.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	РезультатДЗБТ = ЗапросДЗБТ.Выполнить();
	ВыборкаДЗБТ = РезультатДЗБТ.Выбрать();
	
	ЗапросТрехсторонниеПП.Текст = ТекстЗапросаТрехсторонниеПП;
	ЗапросТрехсторонниеПП.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросТрехсторонниеПП.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросТрехсторонниеПП.УстановитьПараметр("Организация",Организация);
	ЗапросТрехсторонниеПП.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	РезультатТрехсторонниеПП 	= ЗапросТрехсторонниеПП.Выполнить();
	ВыборкаТрехсторонниеПП 		= РезультатТрехсторонниеПП.Выбрать();
	
	ЗапросПереходящиеЗатраты.Текст = ТекстЗапросаПереходящиеЗатраты;
	ЗапросПереходящиеЗатраты.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросПереходящиеЗатраты.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросПереходящиеЗатраты.УстановитьПараметр("Организация",Организация);
	ЗапросПереходящиеЗатраты.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	РезультатПереходящиеЗатраты 	= ЗапросПереходящиеЗатраты.Выполнить();
	ВыборкаПереходящиеЗатраты 		= РезультатПереходящиеЗатраты.Выбрать();
	
	
	ЗапросНесовпадающиеСуммаВЗиСуммаУПР.Текст = ТекстЗапросаНесовпадающиеСуммаВЗиСуммаУПР;
	ЗапросНесовпадающиеСуммаВЗиСуммаУПР.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросНесовпадающиеСуммаВЗиСуммаУПР.УстановитьПараметр("Организация",Организация);
	ЗапросНесовпадающиеСуммаВЗиСуммаУПР.УстановитьПараметр("ДатаКон",ДатаКон);
	

	РезультатНесовпадающиеСуммаВЗиСуммаУПР 		= ЗапросНесовпадающиеСуммаВЗиСуммаУПР.Выполнить();
	ВыборкаНесовпадающиеСуммаВЗиСуммаУПР 		= РезультатНесовпадающиеСуммаВЗиСуммаУПР.Выбрать();
	
	ЗапросПустойСтатусПартии.Текст = ТекстЗапросаПустойСтатусПартии;
	ЗапросПустойСтатусПартии.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросПустойСтатусПартии.УстановитьПараметр("ПустойСтатус",Перечисления.СтатусыПартийТоваров.ПустаяСсылка());
	ЗапросПустойСтатусПартии.УстановитьПараметр("ДатаНач",ДатаНач);			
	ЗапросПустойСтатусПартии.УстановитьПараметр("Организация",Организация);
	ЗапросПустойСтатусПартии.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	
	
	РезультатПустойСтатусПартии = ЗапросПустойСтатусПартии.Выполнить();
	ВыборкаПустойСтатусПартии = РезультатПустойСтатусПартии.Выбрать();				
	
	ЗапросВозвратыПоставщикам.Текст = ТекстЗапросаВозвратыПоставщикам;
	ЗапросВозвратыПоставщикам.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросВозвратыПоставщикам.УстановитьПараметр("ДатаНач",ДатаНач);	
	ЗапросВозвратыПоставщикам.УстановитьПараметр("Организация",Организация);
	
	РезультатВозвратыПоставщикам = ЗапросВозвратыПоставщикам.Выполнить();
	ВыборкаВозвратыПоставщикам = РезультатВозвратыПоставщикам.Выбрать();				

	ЗапросОХН.Текст = ТекстЗапросаОХ;
	ЗапросОХН.УстановитьПараметр("ДатаНач",ДатаНач);						
	ЗапросОХН.УстановитьПараметр("Организация",Организация);
	ЗапросОХН.УстановитьПараметр("ПустойСтатус",Перечисления.СтатусыПартийТоваров.ПустаяСсылка());
	ЗапросОХН.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	ЗапросОХН.УстановитьПараметр("СписокСкладов",СписокСкладов);
	РезультатОХН = ЗапросОХН.Выполнить();
	ВыборкаОХН = РезультатОХН.Выбрать();

	ЗапросОХК.Текст = ТекстЗапросаОХ;
	ЗапросОХК.УстановитьПараметр("ДатаНач",ДатаКон);						
	ЗапросОХК.УстановитьПараметр("Организация",Организация);
	ЗапросОХК.УстановитьПараметр("ПустойСтатус",Перечисления.СтатусыПартийТоваров.ПустаяСсылка());
	ЗапросОХК.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	ЗапросОХк.УстановитьПараметр("СписокСкладов",СписокСкладов);

	РезультатОХК = ЗапросОХК.Выполнить();
	ВыборкаОХК = РезультатОХК.Выбрать();
	
	ЗапросОХОборот.Текст = ТекстЗапросаОХОборот;
	ЗапросОХОборот.УстановитьПараметр("ДатаНач",ДатаНач);	
	ЗапросОХОборот.УстановитьПараметр("ДатаКон",ДатаКон);	
	ЗапросОХОборот.УстановитьПараметр("Организация",Организация);
	ЗапросОХОборот.УстановитьПараметр("ПустойСтатус",Перечисления.СтатусыПартийТоваров.ПустаяСсылка());
	ЗапросОХОборот.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	ЗапросОХОборот.УстановитьПараметр("СписокСкладов",СписокСкладов);
	РезультатОХОборот = ЗапросОХОборот.Выполнить();
	ВыборкаОХОборот = РезультатОХОборот.Выбрать();

	
	СуммаДЗН 	= 	0;
	СуммаДЗК	=	0;
	СуммаКЗН 	=   0;
	СуммаКЗК 	= 	0;
	СуммаДСН	= 	0;
	СуммаДСК	= 	0;
	СуммаСКН	= 	0;
	СуммаСКК	= 	0;
	СуммаПОН	= 	0;
	СуммаПОК	= 	0;
	СуммаИнвН 	=	0;
	СуммаИНВК   =   0;
	СуммаКредН  =   0;
	СуммаКредК  =   0;
	СуммаДЗБТ	= 	0;
	СуммаТрехсторонниеПП = 0;
	СуммаПереходящиеЗатраты = 0;
	СуммаНесовпадающиеСуммаВЗиСуммаУПР = 0;
	СуммаПустойСтатусПартии = 0;
	СуммаВозвратыПоставщикам = 0;
	СуммаОХН = 0;
	СуммаОХК = 0;
	СуммаОХОборот = 0;
	
	Если (ВыборкаОСН.Следующий()) тогда 
		СуммаОСН = ВыборкаОСН.Сумма;
	КонецЕсли;
	
	Если (ВыборкаОСК.Следующий()) тогда 
		СуммаОСК = ВыборкаОСК.Сумма;
	КонецЕсли;

	Если (ВыборкаОСОборот.Следующий()) тогда 
		СуммаОСОборот = ВыборкаОСОборот.Сумма;
	КонецЕсли;
	
	Если (ВыборкаОХН.Следующий()) тогда 
		СуммаОХН = ВыборкаОХН.Сумма;
	КонецЕсли;
	
	Если (ВыборкаОХК.Следующий()) тогда 
		СуммаОХК = ВыборкаОХК.Сумма;
	КонецЕсли;

	Если (ВыборкаОХОборот.Следующий()) тогда 
		СуммаОХОборот = ВыборкаОХОборот.Сумма;
	КонецЕсли;
	
	Если (ВыборкаДЗН.Следующий()) тогда 
		СуммаДЗН = ВыборкаДЗН.Сумма;
	КонецЕсли;

	Если (ВыборкаДЗК.Следующий()) тогда 
		СуммаДЗК = ВыборкаДЗК.Сумма;
	КонецЕсли;
	
    //Область = Макет.ПолучитьОбласть("Дебиторская");
	Область = Макет.ПолучитьОбласть("Баланс");
	Область.Параметры.ДебиторскаяНач	= СуммаДЗН;
    Область.Параметры.ДебиторскаяКон	= СуммаДЗК;
	//ТабДок.Вывести(Область);
	
	Если (ВыборкаКЗН.Следующий()) тогда 
		СуммаКЗН = ВыборкаКЗН.Сумма;
	КонецЕсли;

	Если (ВыборкаКЗК.Следующий()) тогда 
		СуммаКЗК = ВыборкаКЗК.Сумма;
	КонецЕсли;
	
	//Область = Макет.ПолучитьОбласть("Кредиторская");
	
	Область.Параметры.КЗНач	= СуммаКЗН;
    Область.Параметры.КЗКОн	= СуммаКЗК;
	
	//ТабДок.Вывести(Область);
	
	Если (ВыборкаДСН.Следующий()) тогда 
		СуммаДСН = ВыборкаДСН.Сумма;
	КонецЕсли;

	Если (ВыборкаДСК.Следующий()) тогда 
		СуммаДСК = ВыборкаДСК.Сумма;
	КонецЕсли;
	
	//Область = Макет.ПолучитьОбласть("Денежные");
	
	Область.Параметры.ДСНач	= СуммаДСН;
    Область.Параметры.ДСКон	= СуммаДСК;
	
	//ТабДок.Вывести(Область);
	
	Если (ВыборкаСКН.Следующий()) тогда 
		СуммаСКН = ВыборкаСКН.Сумма;
	КонецЕсли;

	Если (ВыборкаСКК.Следующий()) тогда 
		СуммаСКК = ВыборкаСКК.Сумма;
	КонецЕсли;

	//Область = Макет.ПолучитьОбласть("Склад");
	Область.Параметры.СкладНач = СуммаСКН - ?(СуммаОХН=null,0,СуммаОХН);
    Область.Параметры.СкладКон	= СуммаСКК - ?(СуммаОХК=null,0,СуммаОХК);
	
	//ТабДок.Вывести(Область);
	
	Если (ВыборкаПОН.Следующий()) тогда 
		СуммаПОН = ВыборкаПОН.Сумма;
	КонецЕсли;

	Если (ВыборкаПОК.Следующий()) тогда 
		СуммаПОК = ВыборкаПОК.Сумма;
	КонецЕсли;
	
	//Область = Макет.ПолучитьОбласть("Подотчетники");
	Область.Параметры.ПодотчетникиНач 	= СуммаПОН;
    Область.Параметры.ПодотчетникиКон	= СуммаПОК;
	
	//ТабДок.Вывести(Область);

	Если (ВыборкаИнвН.Следующий()) тогда 
		СуммаИНВН = ?(ВыборкаИнвН.Сумма=неопределено,0,ВыборкаИнвН.Сумма);
	КонецЕсли;

	Если (ВыборкаИнвК.Следующий()) тогда 
		СуммаИНВК = ?(ВыборкаИнвК.Сумма=неопределено,0,ВыборкаИнвК.Сумма);
	КонецЕсли;
	
	//Область = Макет.ПолучитьОбласть("Инвестиции");
	Область.Параметры.ИнвестицииНач 	= СуммаИНВН;
    Область.Параметры.ИнвестицииКон		= СуммаИНВК;
	
	//ТабДок.Вывести(Область);
	
	Если (ВыборкаКредН.Следующий()) тогда 
		СуммаКредН = ?(ВыборкаКредН.Сумма=неопределено,0,ВыборкаКредН.Сумма);
	КонецЕсли;

	Если (ВыборкаКредК.Следующий()) тогда 
		СуммаКредК = ?(ВыборкаКредК.Сумма=неопределено,0,ВыборкаКредК.Сумма);
	КонецЕсли;
	
	//Область = Макет.ПолучитьОбласть("Кредиты");
	Область.Параметры.КредитыНач 	= СуммаКредН;
    Область.Параметры.КредитыКон	= СуммаКредК;
	//Область.Параметры.ОХНачало = СуммаОХН;
	//Область.Параметры.ОХКонец = СуммаОХК;
	Область.Параметры.ОСНач 	= ?(СуммаОСН=null,0,СуммаОСН);
    Область.Параметры.ОСКон		= ?(СуммаОСК=null,0,СуммаОСК);
	Область.Параметры.ДебиторскаяНачР = "ДЗН";
	Область.Параметры.ДебиторскаяКонР = "ДЗК";
	Область.Параметры.КредитыНачР = "КН";
	Область.Параметры.КредитыКонР = "КК";
	Область.Параметры.КЗНачР = "КЗН";
	Область.Параметры.КЗКонР = "КЗК";
	Область.Параметры.ИнвестицииНачР = "ИНВН";
	Область.Параметры.ИнвестицииКонР = "ИНВК";
	Область.Параметры.СкладНачР = "СКЛАДН";
	Область.Параметры.СкладКонР = "СКЛАДК";
	Область.Параметры.ПодотчетникиНачР = "ПОН";
	Область.Параметры.ПодотчетникиКонР = "ПОК";
	Область.Параметры.ДСНачР = "ДСН";
	Область.Параметры.ДСКонР = "ДСК";
	
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Итого");
	ИтогоНач1 = ?(СуммаДЗН=NULL,0,СуммаДЗН) - ?(СуммаКЗН=NULL,0,СуммаКЗН) + ?(СуммаДСН=NULL,0,СуммаДСН) + ?(СуммаСКН=NULL,0,СуммаСКН) + ?(СуммаПОН=NULL,0,СуммаПОН) + ?(СуммаИНВН=NULL,0,СуммаИНВН) - ?(СуммаКредН=NULL,0,СуммаКредН) + ?(СуммаОСН=null,0,СуммаОСН) - ?(СуммаОХН=null,0,СуммаОХН);
	ИтогоКон1 = ?(СуммаДЗК=NULL,0,СуммаДЗК) - ?(СуммаКЗК=NULL,0,СуммаКЗК) + ?(СуммаДСК=NULL,0,СуммаДСК) + ?(СуммаСКК=NULL,0,СуммаСКК) + ?(СуммаПОК=NULL,0,СуммаПОК) + ?(СуммаИНВК=NULL,0,СуммаИНВК) - ?(СуммаКредК=NULL,0,СуммаКредК) + ?(СуммаОСК=null,0,СуммаОСК) - ?(СуммаОХК=null,0,СуммаОХК);
	Область.Параметры.ИтогоНач 	= ИтогоНач1;
    Область.Параметры.ИтогоКон	= ИтогоКон1;
	
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ШапкаПоказатели");
	ТабДок.Вывести(Область);
	
	//Область = Макет.ПолучитьОбласть("Затраты");
	Область = Макет.ПолучитьОбласть("Оборот");
	Область.Параметры.ОборотР = "ВП";
	Область.Параметры.ЗатратыР = "ЗАТРАТЫ";
	
	Если (ВыборкаЗА.Следующий()) тогда 
		СуммаЗА = ВыборкаЗА.Сумма;
	КонецЕсли;

	//ТабДок.Вывести(Область);
	
	Если (ВыборкаВП.Следующий()) тогда 
		СуммаВП 	= ВыборкаВП.ВП;
		СуммаСТЬ 	= ВыборкаВП.Стоимость;
		СуммаПрибыли = СуммаВП;
	КонецЕсли;

	СуммаПУ 	= 0;
	Если (ВыборкаПУ.Следующий()) тогда 
		СуммаПУ 	= ВыборкаПУ.Сумма;
	КонецЕсли;

	СуммаСПИС 	= 0;
	Если (ВыборкаСПИС.Следующий()) тогда 
		СуммаСПИС 	= ВыборкаСПИС.Сумма;
	КонецЕсли;
	
	СуммаВзаим	= 0;
	Если (ВыборкаВЗАИМ.Следующий()) тогда 
		СуммаВЗАИМ 	= ВыборкаВЗАИМ.Сумма;
	КонецЕсли;
	
	СуммаДСПС = 0;
	Если (ВыборкаДСПС.Следующий()) тогда 
		СуммаДСПС 	= ВыборкаДСПС.Сумма;
	КонецЕсли;
	
	СуммаДЗБТ = 0;
	Если (ВыборкаДЗБТ.Следующий()) тогда 
		СуммаДЗБТ 	= ВыборкаДЗБТ.Сумма;
	КонецЕсли;
		
	СуммаТрехсторонниеПП = 0;
	Если (ВыборкаТрехсторонниеПП.Следующий()) тогда 
		СуммаТрехсторонниеПП 	= ВыборкаТрехсторонниеПП.Сумма;
	КонецЕсли;
	
	СуммаПереходящиеЗатраты = 0;
	Если (ВыборкаПереходящиеЗатраты.Следующий()) тогда 
		СуммаПереходящиеЗатраты 	= ВыборкаПереходящиеЗатраты.Сумма;
	КонецЕсли;

	СуммаНесовпадающиеСуммаВЗиСуммаУПР = 0;
	Если (ВыборкаНесовпадающиеСуммаВЗиСуммаУПР.Следующий()) тогда 
		СуммаНесовпадающиеСуммаВЗиСуммаУПР 	= ВыборкаНесовпадающиеСуммаВЗиСуммаУПР.Сумма;
	КонецЕсли;
	
	СуммаПустойСтатусПартии = 0;
	Если (ВыборкаПустойСтатусПартии.Следующий()) тогда 
		СуммаПустойСтатусПартии 	= ВыборкаПустойСтатусПартии.Сумма;
	КонецЕсли;	
	//Область = Макет.ПолучитьОбласть("Оборот");
	Область.Параметры.Оборот = СуммаСТЬ;
	//ТабДок.Вывести(Область);
	
	СуммаВозвратыПоставщикам = 0;
	Если (ВыборкаВозвратыПоставщикам.Следующий()) тогда 
		СуммаВозвратыПоставщикам = ВыборкаВозвратыПоставщикам.Сумма;
	КонецЕсли;	
	
	
	//Область = Макет.ПолучитьОбласть("ВаловаяНаценка");
	РасшПоступлениеСписаниеДС = 1;
	Область.Параметры.ВН = СуммаВП;
	Область.Параметры.Затраты 	= -?(СуммаЗА=null,0,СуммаЗА);
	Область.Параметры.ПоступлениеУслуг = -?(СуммаПУ=null,0,СуммаПУ);
	Область.Параметры.СписаниеТоваров = -?(СуммаСПИС=null,0,СуммаСПИС);
	Область.Параметры.Взаимозачеты	= -?(СуммаВзаим=null,0,СуммаВзаим);
	Область.Параметры.ПоступлениеСписаниеДС	= СуммаДСПС;
	Область.Параметры.ДопЗатраты	= -?(СуммаДЗБТ=null,0,СуммаДЗБТ);
	Область.Параметры.ТрехсторонниеПП	= -?(СуммаТрехсторонниеПП=null,0,СуммаТрехсторонниеПП);
	Область.Параметры.ПереходящиеЗатраты= СуммаПереходящиеЗатраты;
	Область.Параметры.НесовпадающиеСуммы= -?(СуммаНесовпадающиеСуммаВЗиСуммаУПР=null,0,СуммаНесовпадающиеСуммаВЗиСуммаУПР);
	Область.Параметры.ПартииСПустымСтатусом = СуммаПустойСтатусПартии;
	Область.Параметры.ВозвратыПОставщикам = -?(СуммаВозвратыПоставщикам=null,0,СуммаВозвратыПоставщикам);
	Область.Параметры.ОCОборот = ?(СуммаОСОборот=null,0,СуммаОСОборот);
	Область.Параметры.Расшифровка1 = "1";
	Область.Параметры.Расшифровка2 = "2";
	Область.Параметры.Расшифровка3 = "3";
	Область.Параметры.Расшифровка4 = "4";
	Область.Параметры.Расшифровка5 = "5";
	Область.Параметры.Расшифровка6 = "6";
	Область.Параметры.Расшифровка7 = "7";
	Область.Параметры.Расшифровка8 = "8";
	Область.Параметры.Расшифровка9 = "9";
	Область.Параметры.Расшифровка10 = "10";
	Область.Параметры.Расшифровка11 = "11";
	
	ТабДок.Вывести(Область);
		
	Область = Макет.ПолучитьОбласть("Прибыль");
	
	Прибыль = ?(СуммаПрибыли=Null,0,СуммаПрибыли) - ?(СуммаЗА=Null,0,СуммаЗА) - ?(СуммаПУ=Null,0,СуммаПУ) - ?(СуммаСПИС=Null,0,СуммаСПИС) - ?(СуммаВЗАИМ=Null,0,СуммаВЗАИМ) + ?(СуммаДСПС=Null,0,СуммаДСПС) - ?(СуммаДЗБТ=Null,0,СуммаДЗБТ) - ?(СуммаТрехсторонниеПП=Null,0,СуммаТрехсторонниеПП) + ?(СуммаПереходящиеЗатраты=Null,0,СуммаПереходящиеЗатраты) - ?(СуммаНесовпадающиеСуммаВЗиСуммаУПР=null,0,СуммаНесовпадающиеСуммаВЗиСуммаУПР) + ?(СуммаПустойСтатусПартии=null,0,СуммаПустойСтатусПартии) - ?(СуммаВозвратыПоставщикам=null,0,СуммаВозвратыПоставщикам) + ?(СуммаОСОборот=null,0,СуммаОСОборот);// - ?(СуммаОХОборот=null,0,СуммаОХОборот);
	Область.Параметры.Прибыль = Прибыль;
	
	ТабДок.Вывести(Область);
	
	РазницаОбласть = Макет.ПолучитьОбласть("Разница");
	РазницаОбласть.Параметры.Разница = ИтогоНач1 + Прибыль - ИтогоКон1;
	
	ТабДок.Вывести(РазницаОбласть);
	Примечание = Макет.ПолучитьОбласть("Примечание");
	ТабДок.Вывести(Примечание);
	ТабДок.Показать();
	
КонецПроцедуры
                                                                 
Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	ДатаИзменена = ложь;
	ДатаНачизменена = ложь;
	ВыводитьЦены = ложь;
	ЗаполнитьпоПризнаку = ложь;
//	ЭлементыФормы.Себестоимость.Значение = 1;
//	ЭлементыФормы.Подразделения.Значение = 1;
	попытка 
		ТорговаяКомпанияЭлемент = ВосстановитьЗначение("ТорговаяКомпанияДляОтчетаПоСредствам");
	исключение
		ТорговаяКомпанияЭлемент = справочники.контрагенты.ПустаяСсылка();
	конецпопытки;
	Организация = Справочники.Организации.НайтиПоКоду("00001");
КонецПроцедуры

Процедура СебестоимостьПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если Элемент.значение = 2 тогда 
		ЭлементыФормы.НадписьТип.Видимость = истина;
		Элементыформы.тип.Видимость = истина;
		ВыводитьЦены = Истина;
	Иначе
		ЭлементыФормы.НадписьТип.Видимость = ложь;
		Элементыформы.тип.Видимость = ложь;		
		ВыводитьЦены = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ДатаИзменена = истина;	
КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
	ДатаНачизменена = истина;
КонецПроцедуры

Процедура НачПериодаОчистка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ДатаНачИзменена = ложь;
КонецПроцедуры

Процедура КоманднаяПанель1Настройка(Кнопка)
	// Вставить содержимое обработчика.
	ФормаНастройки = ЭтотОбъект.ПолучитьФорму("ФормаНастройки");
	ФормаНастройки.ОткрытьМодально();	
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьЗначение("ТорговаяКомпанияДляОтчетаПоСредствам",ТорговаяКомпанияЭлемент);		
КонецПроцедуры

Процедура ВыбПериодНажатие1(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура РезультатыОтчетаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Тд = Новый ТабличныйДокумент;
	ТД.ТолькоПросмотр = Истина;
	СписокСкладов = новый СписокЗначений;
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("00270"));
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("00209"));
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("00269"));

	СтатьиПКО = новый СписокЗначений;
	СтатьиПКО.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка());	
	СтандартнаяОбработка = Ложь;
	ЗапросРасш = новый запрос;	
	ЗапросРасш.УстановитьПараметр("ДатаНач",ДатаНач);
	ЗапросРасш.УстановитьПараметр("ДатаКон",ДатаКон);
	ЗапросРасш.УстановитьПараметр("СтатьиПКО",СтатьиПКО);
	ЗапросРасш.УстановитьПараметр("ПолучениеДСВбанке",Перечисления.ВидыОперацийПКО.ПолучениеНаличныхДенежныхСредствВБанке);
	ЗапросРасш.УстановитьПараметр("ОперацияПрочийПриход",Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствПрочее);
	ЗапросРасш.УстановитьПараметр("ОперацияПрочийРасход",Перечисления.ВидыОперацийРКО.РасходДенежныхСредствПрочее);
	ЗапросРасш.УстановитьПараметр("ОперацияПрочийПриходПП",Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПрочееПоступлениеБезналичныхДенежныхСредств);
	ЗапросРасш.УстановитьПараметр("ОперацияПрочийРасходПП",Перечисления.ВидыОперацийППИсходящее.ПрочееСписаниеБезналичныхДенежныхСредств);
	ЗапросРасш.УстановитьПараметр("ПустойСтатус",Перечисления.СтатусыПартийТоваров.ПустаяСсылка());
	ЗапросРасш.УстановитьПараметр("ПустаяСтатья",Справочники.СтатьиЗатрат.ПустаяСсылка());
	ЗапросРасш.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	ЗапросРасш.УстановитьПараметр("Организация",Организация);
	ЗапросРасш.УстановитьПараметр("СписокСкладов",СписокСкладов);
	
	Если (Расшифровка = "1") Тогда 
		ЗапросРасш.Текст = ТекстЗапросаДСПСРасш;
	ИначеЕсли (Расшифровка = "2") Тогда 
		ЗапросРасш.Текст = ТекстЗапросаСПИСРасш;
	ИначеЕсли (Расшифровка = "3") Тогда 	
		ЗапросРасш.Текст = ТекстЗапросаВЗАИМРасш;
	ИначеЕсли (Расшифровка = "4") Тогда 
		ЗапросРасш.Текст = ТекстЗапросаОСОборотРасш; 
	ИначеЕсли (Расшифровка = "5") Тогда 
		ЗапросРасш.Текст = ТекстЗапросаПУРасш;
	ИначеЕсли (Расшифровка = "6") Тогда 	
		ЗапросРасш.Текст = ТекстЗапросаДЗБТРасш;
	ИначеЕсли (Расшифровка = "7") Тогда 
		ЗапросРасш.Текст = ТекстЗапросаТрехсторонниеППРасш;
	ИначеЕсли (Расшифровка = "8") Тогда 	
		ЗапросРасш.Текст = ТекстЗапросаПереходящиеЗатратыРасш;
	ИначеЕсли (Расшифровка = "9") Тогда 
		ЗапросРасш.Текст = ТекстЗапросаНесовпадающиеСуммаВЗиСуммаУПРРасш;
	ИначеЕсли (Расшифровка = "10") Тогда 	
		ЗапросРасш.Текст = ТекстЗапросаПустойСтатусПартииРасш;
	ИначеЕсли (Расшифровка = "11") Тогда 	
		ЗапросРасш.Текст = ТекстЗапросаВозвратыПоставщикамРасш;
	ИначеЕсли (Расшифровка = "ДЗН") Тогда 	
		// Отчет по ДЗН
		ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Задолженность по контрагентам");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаНач-1;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаНач-1;
		ОбработкаДЗ.ПереключательЗадолженность = 1;
		Для Каждого СтрОтб из ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СписокТипов = новый СписокЗначений;
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Инвестиции);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Кредит);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);
		СтрОтб = ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента.ТипДоговора");
		СтрОтб.ВидСравнения = ВидСравнения.НеВСписке;
		СтрОтб.Значение = СписокТипов;
		СтрОтб.Использование = Истина;	
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "ДЗК") Тогда 	
		// Отчет по ДЗК
		ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Задолженность по контрагентам");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		//Попытка
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаКон;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаКон;
		ОбработкаДЗ.ПереключательЗадолженность = 1;
		Для Каждого СтрОтб из ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СписокТипов = новый СписокЗначений;
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Инвестиции);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Кредит);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);
		СтрОтб = ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента.ТипДоговора");
		//СтрОтб.Имя = "ТипДоговора";
		//СтрОтб.ПутьКДанным = "ДоговорКонтрагента.ТипДоговора";
		СтрОтб.ВидСравнения = ВидСравнения.НеВСписке;
		СтрОтб.Значение = СписокТипов;
		СтрОтб.Использование = Истина;	
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "КЗН") Тогда 	
		// Отчет по ДЗН
		ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Задолженность по контрагентам");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		//Попытка
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаНач-1;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаНач-1;
		ОбработкаДЗ.ПереключательЗадолженность = 2;
		Для Каждого СтрОтб из ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СписокТипов = новый СписокЗначений;
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Инвестиции);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Кредит);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);
		СтрОтб = ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента.ТипДоговора");
		//СтрОтб.Имя = "ТипДоговора";
		//СтрОтб.ПутьКДанным = "ДоговорКонтрагента.ТипДоговора";
		СтрОтб.ВидСравнения = ВидСравнения.НеВСписке;
		СтрОтб.Значение = СписокТипов;
		СтрОтб.Использование = Истина;	
		
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "КЗК") Тогда 	
		// Отчет по ДЗК
		ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Задолженность по контрагентам");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		//Попытка
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаКон;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаКон;
		ОбработкаДЗ.ПереключательЗадолженность = 2;
		Для Каждого СтрОтб из ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СписокТипов = новый СписокЗначений;
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Инвестиции);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Кредит);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);
		СтрОтб = ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента.ТипДоговора");
		//СтрОтб.Имя = "ТипДоговора";
		//СтрОтб.ПутьКДанным = "ДоговорКонтрагента.ТипДоговора";
		СтрОтб.ВидСравнения = ВидСравнения.НеВСписке;
		СтрОтб.Значение = СписокТипов;
		СтрОтб.Использование = Истина;	
		
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "КН") Тогда 	
		// Отчет по ДЗН
		ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Задолженность по контрагентам");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		//Попытка
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаНач-1;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаНач-1;
		ОбработкаДЗ.ПереключательЗадолженность = 3;
		Для Каждого СтрОтб из ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СписокТипов = новый СписокЗначений;
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Кредит);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);
		СтрОтб = ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента.ТипДоговора");
		//СтрОтб.Имя = "ТипДоговора";
		//СтрОтб.ПутьКДанным = "ДоговорКонтрагента.ТипДоговора";
		СтрОтб.ВидСравнения = ВидСравнения.ВСписке;
		СтрОтб.Значение = СписокТипов;
		СтрОтб.Использование = Истина;	
		
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "КК") Тогда 	
		// Отчет по ДЗК
		ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Задолженность по контрагентам");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		//Попытка
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаКон;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаКон;
		ОбработкаДЗ.ПереключательЗадолженность = 3;
		Для Каждого СтрОтб из ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СписокТипов = новый СписокЗначений;
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Кредит);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);
		СтрОтб = ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента.ТипДоговора");
		//СтрОтб.Имя = "ТипДоговора";
		//СтрОтб.ПутьКДанным = "ДоговорКонтрагента.ТипДоговора";
		СтрОтб.ВидСравнения = ВидСравнения.ВСписке;
		СтрОтб.Значение = СписокТипов;
		СтрОтб.Использование = Истина;	
		
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "ИНВН") Тогда 	
		// Отчет по ДЗН
		ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Задолженность по контрагентам");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		//Попытка
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаНач-1;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаНач-1;
		ОбработкаДЗ.ПереключательЗадолженность = 3;
		Для Каждого СтрОтб из ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СписокТипов = новый СписокЗначений;
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Инвестиции);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
		СтрОтб = ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента.ТипДоговора");
		//СтрОтб.Имя = "ТипДоговора";
		//СтрОтб.ПутьКДанным = "ДоговорКонтрагента.ТипДоговора";
		СтрОтб.ВидСравнения = ВидСравнения.ВСписке;
		СтрОтб.Значение = СписокТипов;
		СтрОтб.Использование = Истина;	
		
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "ИНВК") Тогда 	
		// Отчет по ДЗК
		ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Задолженность по контрагентам");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		//Попытка
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаКон;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаКон;
		ОбработкаДЗ.ПереключательЗадолженность = 3;
		Для Каждого СтрОтб из ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СписокТипов = новый СписокЗначений;
		СписокТипов.Добавить(Справочники.ТипыДоговоров.Инвестиции);
		СписокТипов.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
		СтрОтб = ОбработкаДЗ.ОбщийОтчет.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента.ТипДоговора");
		//СтрОтб.Имя = "ТипДоговора";
		//СтрОтб.ПутьКДанным = "ДоговорКонтрагента.ТипДоговора";
		СтрОтб.ВидСравнения = ВидСравнения.ВСписке;
		СтрОтб.Значение = СписокТипов;
		СтрОтб.Использование = Истина;	
		
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "СКЛАДН") Тогда 	
		// Отчет по ДЗН
        ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Стоимостная оценка склада в ценах номенклатуры");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ФормаОбработки = ОбработкаДЗ.ПолучитьФорму("ГлавнаяФорма");
		ФормаОбработки.Открыть();
		ФормаОбработки.ОтчетОбъект.Режим = "неоперативный";
		ФормаОбработки.ОтчетОбъект.ЗаполнитьНачальныеНастройки();
		ФормаОбработки.ДатаОтчета = ДатаНач-1;
		// Удаляем лишние показатели
		Показатель1 = ФормаОбработки.Показатели.Найти("ТипЦенЦена","Имя");
		Если (Показатель1<>Неопределено) Тогда 
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель1));
		КонецЕсли;
		Показатель2 = ФормаОбработки.Показатели.Найти("ТипЦенЦена","Имя");
		Если (Показатель2<>Неопределено) Тогда 
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель2));
		КонецЕсли;
		Показатель3 = ФормаОбработки.Показатели.Найти("ТипЦенСтоимость","Имя");
		Если (Показатель3<>Неопределено) Тогда 
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель3));
		КонецЕсли;
		Показатель4 = ФормаОбработки.Показатели.Найти("ТипЦенНаценка","Имя");
		Если (Показатель4<>Неопределено) Тогда 	
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель4));
		КонецЕсли;	
		Показатель5 = ФормаОбработки.Показатели.Найти("ТипЦенРентабельность","Имя");	
		Если (Показатель5<>Неопределено) Тогда 	
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель5));
		КонецЕсли;	
		
		//ОбработкаДЗ = Отчеты.ВедомостьПартииТоваровНаСкладах.Создать();
		//ОбработкаДЗ.ОбщийОтчет.ИмяРегистра = "ПартииТоваровНаСкладах";
		//ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		//ФормаОбработки.ОбщийОтчет.ЗаполнитьНачальныеНастройки();
		//
		Для Каждого СтрОтб из ФормаОбработки.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("Склад");
		СтрОтб.ВидСравнения = ВидСравнения.НеВСписке;
		СтрОтб.Значение = СписокСкладов;
		СтрОтб.Использование = Истина;

		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "СКЛАДК") Тогда 	
		// Отчет по ДЗН
		// Отчет по ДЗН
        ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Стоимостная оценка склада в ценах номенклатуры");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ФормаОбработки = ОбработкаДЗ.ПолучитьФорму("ГлавнаяФорма");
		ФормаОбработки.Открыть();
		ФормаОбработки.ОтчетОбъект.Режим = "неоперативный";
		ФормаОбработки.ОтчетОбъект.ЗаполнитьНачальныеНастройки();
		ФормаОбработки.ДатаОтчета = ДатаКон;
		// Удаляем лишние показатели
		Показатель1 = ФормаОбработки.Показатели.Найти("ТипЦенЦена","Имя");
		Если (Показатель1<>Неопределено) Тогда 
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель1));
		КонецЕсли;
		Показатель2 = ФормаОбработки.Показатели.Найти("ТипЦенЦена","Имя");
		Если (Показатель2<>Неопределено) Тогда 
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель2));
		КонецЕсли;
		Показатель3 = ФормаОбработки.Показатели.Найти("ТипЦенСтоимость","Имя");
		Если (Показатель3<>Неопределено) Тогда 
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель3));
		КонецЕсли;
		Показатель4 = ФормаОбработки.Показатели.Найти("ТипЦенНаценка","Имя");
		Если (Показатель4<>Неопределено) Тогда 	
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель4));
		КонецЕсли;	
		Показатель5 = ФормаОбработки.Показатели.Найти("ТипЦенРентабельность","Имя");	
		Если (Показатель5<>Неопределено) Тогда 	
			ФормаОбработки.Показатели.Удалить(ФормаОбработки.Показатели.Индекс(Показатель5));
		КонецЕсли;	
		
		//ОбработкаДЗ = Отчеты.ВедомостьПартииТоваровНаСкладах.Создать();
		//ОбработкаДЗ.ОбщийОтчет.ИмяРегистра = "ПартииТоваровНаСкладах";
		//ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		//ФормаОбработки.ОбщийОтчет.ЗаполнитьНачальныеНастройки();
		//
		Для Каждого СтрОтб из ФормаОбработки.ПостроительОтчета.Отбор Цикл
			СтрОтб.Использование = Ложь;	
		КонецЦикла;
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("Склад");
		СтрОтб.ВидСравнения = ВидСравнения.НеВСписке;
		СтрОтб.Значение = СписокСкладов;
		СтрОтб.Использование = Истина;

		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "ПОН") Тогда 	
		// Отчет по ДЗН
		ОбработкаДЗ = Отчеты.ОтчетСписокКроссТаблица.Создать();
		ОбработкаДЗ.ИмяРегистра = "ВзаиморасчетыСПодотчетнымиЛицами";
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ДатаКон = ДатаНач-1;
		ОбработкаДЗ.ДатаНач = ДатаНач-1;
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Расшифровка = "ПОК") Тогда 	
		// Отчет по ДЗН
		ОбработкаДЗ = Отчеты.ОтчетСписокКроссТаблица.Создать();
		ОбработкаДЗ.ИмяРегистра = "ВзаиморасчетыСПодотчетнымиЛицами";
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ДатаКон = ДатаКон;
		ОбработкаДЗ.ДатаНач = ДатаКон;
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
		
	ИначеЕсли (Расшифровка = "ДСН") Тогда 	
		// Отчет по ДЗН
		ОбработкаДЗ = Отчеты.ОстаткиДенежныхСредств.Создать();
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаНач-1;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаНач-1;
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;
		
	ИначеЕсли (Расшифровка = "ДСК") Тогда 	
		// Отчет по ДЗН
		ОбработкаДЗ = Отчеты.ОстаткиДенежныхСредств.Создать();
		ОбработкаДЗ.ЗаполнитьНачальныеНастройки();
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = ДатаКон;
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаКон;
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;	
		
	ИначеЕсли (Расшифровка = "ВП") Тогда 	
		// Отчет по ДЗН
		ЭлементСправочника = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Валовая прибыль");
		ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ХранилищеВО.Записать(ИмяФайла);
		ОбработкаДЗ = ВнешниеОбработки.Создать(ИмяФайла);
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаНач;
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = КонецДня(ДатаКон);
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;	
	
	ИначеЕсли (Расшифровка = "ЗАТРАТЫ") Тогда 	
		// Отчет по ДЗН
		ОбработкаДЗ = Отчеты.Затраты.Создать();
		ФормаОбработки = ОбработкаДЗ.ПолучитьОсновнуюФорму();
		ФормаОбработки.Открыть();
		ОбработкаДЗ.ОбщийОтчет.ДатаНач = ДатаНач;
		ОбработкаДЗ.ОбщийОтчет.ДатаКон = КонецДня(ДатаКон);
		ФормаОбработки.ОбновитьОтчет();
		СтандартнаяОбработка = Ложь;
		Возврат;	
	
	Иначе 
		СтандартнаяОбработка = Истина;
		возврат;
	КонецЕсли;	
		
	Выб = ЗапросРасш.Выполнить().Выбрать();
	
	Если (Выб.Количество()=0) Тогда 
		возврат;
	КонецЕсли;		
	
	Макет = ПолучитьМакет("Расшифровка");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	Строка = Макет.ПолучитьОбласть("Строка");
	ТД.Вывести(Шапка);
	Пока Выб.Следующий() Цикл
		строка.Параметры.Документ = Выб.Документ;
		строка.Параметры.Контрагент = Выб.Контрагент;
		строка.Параметры.Сумма = Выб.Сумма;
		Если (Выб.Сумма <> 0 и Выб.Сумма <> null) Тогда 
			ТД.Вывести(Строка);
		КонецЕсли;
	КонецЦикла;
	
	ТД.Показать();
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Форма = ПолучитьФорму("Пароль");
	Рез = Форма.ОткрытьМодально();
	Если (Рез="ОК") Тогда
		возврат;
	Иначе
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры




