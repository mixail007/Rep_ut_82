Перем мДатаРасчета;
Перем мДнейВПериоде;
Перем мДнейРасчета;
Перем мДнейВПериодеМ;
Перем мДнейРасчетаМ;
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
 вр0 = ТекущаяУниверсальнаяДатаВМиллисекундах();
 
 	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок, ДатаКон, ДатаНач,  Сценарий);
	
 вр1 = ТекущаяУниверсальнаяДатаВМиллисекундах();
 
 Если РольДоступна("ПравоЗавершенияРаботыПользователей") тогда
 	сообщить("Время формирования План-фактного анализа закупок и продаж "+строка( (вр1-вр0)/1000)+" сек.");
 КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок, ДатаКон, ДатаНач,  Сценарий) Экспорт
	

	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Значение КАК Значение,
	|	ВложенныйЗапрос.КоличествоФакт КАК КоличествоФакт,
	|	ВложенныйЗапрос.СтоимостьФакт КАК СтоимостьФакт,
	|	ВложенныйЗапрос.ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|	ВложенныйЗапрос.КоличествоПлан КАК КоличествоПлан,
	|	ВложенныйЗапрос.СтоимостьПлан КАК СтоимостьПлан,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	//08.06.2018
	|	Представление( ВложенныйЗапрос.Номенклатура ) КАК НоменклатураПредставление,
	|	ВложенныйЗапрос.КоличествоОборот КАК КоличествоОборот,
	|	ВложенныйЗапрос.СтоимостьОборот КАК СтоимостьОборот,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.КоличествоФакт / ВложенныйЗапрос.КоличествоПлан * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВложенныйЗапрос.Номенклатура, 0) = 0
	|					ТОГДА 100
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ПроцентВыполненияКоличество,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.СтоимостьПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.СтоимостьФакт / ВложенныйЗапрос.СтоимостьПлан * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВложенныйЗапрос.Номенклатура, 0) = 0
	|					ТОГДА 100
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ПроцентВыполненияСтоимость,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ((ВложенныйЗапрос.КоличествоФакт - ВложенныйЗапрос.КоличествоПлан / &ДнейВПериоде * &ДнейРасчета) / (ВложенныйЗапрос.КоличествоПлан / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоКоличеству,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ((ВложенныйЗапрос.КоличествоФакт - ВложенныйЗапрос.КоличествоПлан / &ДнейВПериодеМ * &ДнейРасчетаМ) / (ВложенныйЗапрос.КоличествоПлан / &ДнейВПериодеМ * &ДнейРасчетаМ) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоКоличествуМ,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.СтоимостьПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ((ВложенныйЗапрос.СтоимостьФакт - ВложенныйЗапрос.СтоимостьПлан / &ДнейВПериоде * &ДнейРасчета) / (ВложенныйЗапрос.СтоимостьПлан / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоСумме,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.СтоимостьПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ((ВложенныйЗапрос.СтоимостьФакт - ВложенныйЗапрос.СтоимостьПлан / &ДнейВПериодеМ * &ДнейРасчетаМ) / (ВложенныйЗапрос.СтоимостьПлан / &ДнейВПериодеМ * &ДнейРасчетаМ) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоСуммеМ

	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЗ.Значение КАК Значение,
	|		СУММА(ВЗ.КоличествоФакт) КАК КоличествоФакт,
	|		СУММА(ВЗ.СтоимостьФакт) КАК СтоимостьФакт,
	|		ВЗ.ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|		СУММА(ВЗ.КоличествоПлан) КАК КоличествоПлан,
	|		СУММА(ВЗ.СтоимостьПлан) КАК СтоимостьПлан,
	|		ВЗ.Номенклатура КАК Номенклатура,
	|		СУММА(ВЗ.КоличествоОборот) КАК КоличествоОборот,
	|		СУММА(ВЗ.СтоимостьОборот) КАК СтоимостьОборот
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК Значение,
	|			СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоФакт,
	|			СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьФакт,
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|			NULL КАК КоличествоПлан,
	|			NULL КАК СтоимостьПлан,
	|			NULL КАК Номенклатура,
	|			NULL КАК КоличествоОборот,
	|			NULL КАК СтоимостьОборот
	|		ИЗ
	|			РегистрНакопления.Продажи.Обороты(
	|					&ДатаНач,
	|					&ДатаКон,
	|					,
	|					НЕ Номенклатура.Услуга
	|						И Подразделение.ВЭД = &ВЭД) КАК ПродажиОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПланыПродажОбороты.Номенклатура,
	|			NULL,
	|			NULL,
	|			ПланыПродажОбороты.Менеджер,
	|			СУММА(ПланыПродажОбороты.КоличествоОборот),
	|			СУММА(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот),
	|			NULL,
	|			NULL,
	|			NULL
	|		ИЗ
	|			РегистрНакопления.ПланыПродаж.Обороты(
	|					&ДатаНач,
	|					&ДатаКон,
	|					,
	|					Сценарий = &Сценарий
	|						И Подразделение.ВЭД = &ВЭД) КАК ПланыПродажОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПланыПродажОбороты.Менеджер,
	|			ПланыПродажОбороты.Номенклатура
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	|			NULL,
	|			NULL,
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			NULL,
	|			NULL,
	|			ПродажиОбороты.Номенклатура,
	|			СУММА(ПродажиОбороты.КоличествоОборот),
	|			СУММА(ПродажиОбороты.СтоимостьОборот)
	|		ИЗ
	|			РегистрНакопления.Продажи.Обороты(
	|					&ДатаНач,
	|					&ДатаКон,
	|					,
	|					НЕ Номенклатура.Услуга
	|						И Подразделение.ВЭД = &ВЭД) КАК ПродажиОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			ПродажиОбороты.Номенклатура,
	|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа) КАК ВЗ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЗ.ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|		ВЗ.Значение,
	|		ВЗ.Номенклатура) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Значение,
	|	ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя
	|ИТОГИ
	|	СУММА(КоличествоФакт),
	|	СУММА(СтоимостьФакт),
	|	СУММА(КоличествоПлан),
	|	СУММА(СтоимостьПлан),
	|	СУММА(КоличествоОборот),
	|	СУММА(СтоимостьОборот),
	|	ВЫБОР
	|		КОГДА СУММА(КоличествоПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(КоличествоФакт) / СУММА(КоличествоПлан) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ПроцентВыполненияКоличество,
	|	ВЫБОР
	|		КОГДА СУММА(СтоимостьПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(СтоимостьФакт) / СУММА(СтоимостьПлан) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ПроцентВыполненияСтоимость,
	|	ВЫБОР
	|		КОГДА СУММА(КоличествоПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ((СУММА(КоличествоФакт) - СУММА(КоличествоПлан) / &ДнейВПериоде * &ДнейРасчета) / (СУММА(КоличествоПлан) / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоКоличеству,
	|	ВЫБОР
	|		КОГДА СУММА(КоличествоПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ((СУММА(КоличествоФакт) - СУММА(КоличествоПлан) / &ДнейВПериодеМ * &ДнейРасчетаМ) / (СУММА(КоличествоПлан) / &ДнейВПериодеМ * &ДнейРасчетаМ) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоКоличествуМ,
	|	ВЫБОР
	|		КОГДА СУММА(СтоимостьПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ((СУММА(СтоимостьФакт) - СУММА(СтоимостьПлан) / &ДнейВПериоде * &ДнейРасчета) / (СУММА(СтоимостьПлан) / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоСумме,
		|	ВЫБОР
	|		КОГДА СУММА(СтоимостьПлан) <> 0
	|			ТОГДА ВЫРАЗИТЬ((СУММА(СтоимостьФакт) - СУММА(СтоимостьПлан) / &ДнейВПериодеМ * &ДнейРасчетаМ) / (СУММА(СтоимостьПлан) / &ДнейВПериодеМ * &ДнейРасчетаМ) * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК ОтстованиеПоСуммеМ

	|ПО
	|	ОБЩИЕ,
	|	Значение ИЕРАРХИЯ,
	|	ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("грузовыеотечка", Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0019"));
	Если РольДоступна("ДополнительныеПраваВЭД")тогда
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"Подразделение.ВЭД = &ВЭД","Подразделение = &Подразделение");
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	иначе	
	Запрос.УстановитьПараметр("ВЭД", Ложь);
	конецЕсли;
	
	ЗапросПоОстаткам = Новый Запрос;
		
	ЗапросПоОстаткам.Текст =
	"ВЫБРАТЬ
	|	ЗапросОстатковПартийПоСвойствам.Значение КАК Значение,
	|	ЕСТЬNULL(ЗапросОстатковПартийПоСвойствам.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ЗапросОстатковПартийПоСвойствам.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
	|	ЕСТЬNULL(ЗапросПоЗакупкам.КоличествоОборот, 0) КАК ЗакупкиКоличествоФакт,
	|	ЕСТЬNULL(ЗапросПоЗакупкам.СтоимостьОборот, 0) КАК ЗакупкиСтоимостьФакт,
	|	ЕСТЬNULL(ПланыЗакупокОбороты.КоличествоОборот, 0) КАК ЗакупкиКоличествоПлан,
	|	ЕСТЬNULL(ПланыЗакупокОбороты.СтоимостьОборот + ПланыЗакупокОбороты.НДСОборот, 0) КАК ЗакупкиСтоимостьПлан
	|ИЗ
	|		(ВЫБРАТЬ
	|			Остатки.НоменклатураНоменклатурнаяГруппа КАК Значение,
	|			СУММА(Остатки.КоличествоОстаток) КАК КоличествоОстаток,
	|			СУММА(Остатки.СтоимостьОстаток) КАК СтоимостьОстаток
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|				ТоварыНаСкладахОстатки.Номенклатура.НоменклатурнаяГруппа как НоменклатураНоменклатурнаяГруппа,
	|				ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|				ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК СтоимостьОстаток
	|			ИЗ
	//+++ 11.09.2018 Склад.ЗапретитьИспользование=ЛОЖЬ , &ДатаКон >> &ДатаНач
	|				РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаНач, ) КАК ТоварыНаСкладахОстатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаНач, ) КАК ПартииТоваровНаСкладахОстатки
	|					ПО ТоварыНаСкладахОстатки.Номенклатура = ПартииТоваровНаСкладахОстатки.Номенклатура
	|			) КАК Остатки
	
	|		СГРУППИРОВАТЬ ПО
	|			Остатки.НоменклатураНоменклатурнаяГруппа) КАК ЗапросОстатковПартийПоСвойствам
	
//11.09.2018 ---------сначала остатки, а к ним всё остальное! ПОЛНОЕ >> ЛЕВОЕ------------------------	
	|			ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрНакопления.ПланыЗакупок.Обороты(&ДатаНач, &ДатаКон, , Сценарий = &Сценарий) КАК ПланыЗакупокОбороты
	|		ПО ЗапросОстатковПартийПоСвойствам.Значение = выразить(ПланыЗакупокОбороты.Номенклатура как Справочник.НоменклатурныеГруппы).ссылка
	
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СУММА(ЗакупкиОбороты.КоличествоОборот) КАК КоличествоОборот,
	|				СУММА(ЗакупкиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	|				ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппа КАК Значение
	|			ИЗ
	|				РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, , Подразделение.ВЭД = ЛОЖЬ) КАК ЗакупкиОбороты
	|			СГРУППИРОВАТЬ ПО
	|				ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппа) КАК ЗапросПоЗакупкам
	|			ПО ЗапросОстатковПартийПоСвойствам.Значение = ЗапросПоЗакупкам.Значение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Значение
	|АВТОУПОРЯДОЧИВАНИЕ";

	
	ЗапросПоОстаткам.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	ЗапросПоОстаткам.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	ЗапросПоОстаткам.УстановитьПараметр("Сценарий", Сценарий);
	
	Если ЗначениеНеЗаполнено(мДнейВПериоде)
		ИЛИ ЗначениеНеЗаполнено(мДнейРасчета) Тогда
	
		Предупреждение("Необходимо установить период построения отчета!", 5);
		Возврат;
		
	Иначе
		
		Запрос.УстановитьПараметр("ДнейВПериоде", мДнейВПериоде);
	    Запрос.УстановитьПараметр("ДнейРасчета", мДнейРасчета);
		
		Запрос.УстановитьПараметр("ДнейВПериодеМ", мДнейВПериодеМ);
	    Запрос.УстановитьПараметр("ДнейРасчетаМ", мДнейРасчетаМ);
	КонецЕсли; 
	
Состояние("Идет получение остатков...");	
	ТаблицаОстатков = ЗапросПоОстаткам.Выполнить().Выгрузить();

Состояние("Идет получение данных запроса...");	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	 //08.06.2018
	ОбластьЗаголовок.Параметры.подробно = ЭлементыФормы.ОписаниеПараметров.Заголовок;
	
	ВыводимыеЯчейки = Новый СписокЗначений;
	ВыводимыеЯчейки.Очистить();	
	
//08.06.2018 ----- по списку помеченных полей в нужном порядке! ------------
для i=0 по СписокПолей.количество()-1 цикл //список всех полей!
	Если СписокПолей[i].Пометка тогда
		ВыводимыеЯчейки.Добавить(СписокПолей[i].Значение, СписокПолей[i].Значение);
	КонецЕсли;
КонецЦикла;	
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы|ОсновнойСтолбец");
	Если флМенеджеры   //08.06.2018
	тогда	ОбластьШапкаТаблицы.Параметры.менТов =  "/
		|Менеджер /
		|Номенклатура"; 
	иначе  ОбластьШапкаТаблицы.Параметры.менТов =  ""; 
	КонецЕсли;


	//ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги|ОсновнойСтолбец");
	ОбластьЗначение  = Макет.ПолучитьОбласть("Значение|ОсновнойСтолбец");
	ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя = Макет.ПолучитьОбласть("ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя|ОсновнойСтолбец");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура|ОсновнойСтолбец");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
		ОбластьВывода = Макет.ПолучитьОбласть("ШапкаТаблицы|" + СтрокаЯчеек.Значение);
		//ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаОбщийИтог[СтрокаЯчеек.Представление];
		ТабДок.Присоединить(ОбластьВывода);	
	КонецЦикла; 

	//ТабДок = Новый ТабличныйДокумент;
	ТабДок.ФиксацияСверху = ТабДок.ВысотаТаблицы;
	
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	
	ОбщийИтогКоличествоОстаток = 0;
	ОбщийИтогЗакупкиКоличествоПлан = 0;
	ОбщийИтогЗакупкиКоличествоФакт = 0;
	ОбщийИтогСтоимостьОстаток = 0;
	ОбщийИтогЗакупкиСтоимостьПлан = 0;
	ОбщийИтогЗакупкиСтоимостьФакт = 0;
	ОбщийИтогДействиеПоКоличеству = 0;
	ОбщийИтогДействиеПоСтоимости = 0;
	
	ОбщийИтогОстатокКонецМесяцаКоличество = 0;
	ОбщийИтогОстатокКонецМесяцаСумма = 0;

	ОбщийИтогОстатокКонецМесяцаКоличество1 = 0;
	ОбщийИтогОстатокКонецМесяцаСумма1 = 0;
    ОбщийИтогОстатокКонецМесяцаКоличество2 = 0;
	ОбщийИтогОстатокКонецМесяцаСумма2 = 0;


	ВыборкаЗначение = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
  	Флаг = ложь;
//=============================ОСНОВНОЙ ЦИКЛ ВЫВОДА===================================
N = ВыборкаЗначение.Количество(); нн = 0;

доляДоКонца =?(мДнейРасчета<=0, мДнейВПериоде, мДнейВПериоде / мДнейРасчета); //+++ 11.09.2018

Сообщить( "Кол-во и сумма (ФАКТ.) Расчетн. на конец месяца = Остаток на начало + (Закупки Факт. - Продажи Факт.)хКоэфф,  где Коэфф. = "+строка(мДнейВПериоде)+"/"+ строка(мДнейРасчета)+"дн. = "+формат(доляДоКонца,"ЧДЦ=3") );

	Пока ВыборкаЗначение.Следующий() Цикл
	нн=нн+1;	
	Состояние("Сформировано: "+формат(100*нн/N,"ЧДЦ=0")+"% Идет вывод "+строка(нн)+" группы: "+строка(ВыборкаЗначение.Значение));
	ОбработкаПрерыванияПользователя();	
		ОбластьЗначение.Параметры.Заполнить(ВыборкаЗначение);
		Если ТипЗнч(ВыборкаЗначение.Значение)=Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			   МенеджерНаправления=ПолучитьМенеджераНаправления(ВыборкаЗначение.Значение);
			   Если не ЗначениеНеЗаполнено(МенеджерНаправления) Тогда
				   ОбластьЗначение.Параметры.Значение=Строка(ВыборкаЗначение.Значение)+" / "+СокрЛП(Строка(МенеджерНаправления));
			   КонецЕсли;	   
		КонецЕсли;	
		   
		Попытка
			Табдок.Закончитьгруппустрок();	
		Исключение;Конецпопытки;
		
		//---------------------------------------------------------------------------
		// Первый 
			ТабДок.Вывести(ОбластьЗначение, ВыборкаЗначение.Уровень(),, флМенеджеры); //08.06.2018 развернута если надо по товарам
		//Сообщить(ОбластьЗначение.Параметры.Значение);
		
		
		Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
			
			ОбластьВывода = Макет.ПолучитьОбласть("Значение"+?(не флМенеджеры и ВыборкаЗначение.Уровень()>1,"1","")+"|" + СтрокаЯчеек.Значение);  //+++ белые строки
			
			Если СтрокаЯчеек.Представление = "СтоимостьОстаток" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогСтоимостьОстаток = ОбщийИтогСтоимостьОстаток + СтрокаОстатков.СтоимостьОстаток;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппе(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогСтоимостьОстаток = ОбщийИтогСтоимостьОстаток + СуммаХ;					
					КонецЕсли;
				КонецЕсли;
								
			ИначеЕсли СтрокаЯчеек.Представление = "КоличествоОстаток" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогКоличествоОстаток = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеКоличество(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогКоличествоОстаток = ОбщийИтогКоличествоОстаток + СуммаХ;									
					КонецЕсли
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоКоличеству" Тогда
				
				// Временная мера
				врДействиеПоКоличеству =  ?(ЗначениеНеЗаполнено(ВыборкаЗначение.КоличествоПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоКоличеству), 0,
																		Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0)); 
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоКоличеству;
				
				ОбщийИтогДействиеПоКоличеству = ОбщийИтогДействиеПоКоличеству + врДействиеПоКоличеству;
				
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0);
				
			ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоСтоимости" Тогда
				
				// Временная мера
				врДействиеПоСумме = ?(ЗначениеНеЗаполнено(ВыборкаЗначение.СтоимостьПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоСумме), 0,
																		Окр(ВыборкаЗначение.СтоимостьПлан * (ВыборкаЗначение.ОтстованиеПоСумме/100), 0));
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоСумме;
				ОбщийИтогДействиеПоСтоимости = ОбщийИтогДействиеПоСтоимости + врДействиеПоСумме;
				
				//ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
		
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоПлан" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоПлан;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогЗакупкиКоличествоПлан + СтрокаОстатков.ЗакупкиКоличествоПлан;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеЗакупкиКоличествоПлан(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогЗакупкиКоличествоПлан + СуммаХ;					
					КонецЕсли;					
					
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоФакт" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоФакт;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиКоличествоФакт = ОбщийИтогЗакупкиКоличествоФакт + СтрокаОстатков.ЗакупкиКоличествоФакт;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеЗакупкиКоличествоФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиКоличествоФакт = ОбщийИтогЗакупкиКоличествоФакт + СуммаХ;									
					КонецЕсли;
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьПлан" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьПлан;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиСтоимостьПлан = ОбщийИтогЗакупкиСтоимостьПлан + СтрокаОстатков.ЗакупкиСтоимостьПлан;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьПлан(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиСтоимостьПлан = ОбщийИтогЗакупкиСтоимостьПлан + СуммаХ;													
					КонецЕсли;
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьФакт" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьФакт;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
				    	ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СтрокаОстатков.ЗакупкиСтоимостьФакт;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СуммаХ;					
					КонецЕсли;
				КонецЕсли;
//+++++++++++++++++++++++ 26.09.2018 +++++++++++++++++++++++++++++++++++++++++++++++++++++++			
	   	ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаКоличество" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
						
				Если СтрокаОстатков <> Неопределено Тогда
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток + СтрокаОстатков.ЗакупкиКоличествоПлан - ?(ВыборкаЗначение.КоличествоПлан=null,0,ВыборкаЗначение.КоличествоПлан);//СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаКоличество = ОбщийИтогОстатокКонецМесяцаКоличество + СтрокаОстатков.КоличествоОстаток + СтрокаОстатков.ЗакупкиКоличествоПлан - ?(ВыборкаЗначение.КоличествоПлан=null,0,ВыборкаЗначение.КоличествоПлан); // + СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
					КонецЕсли;
				Иначе 
					//+++ 11.09.2018 -было:
					СуммаХ = РассчитатьПоГруппеКоличество(ТаблицаОстатков,ВыборкаЗначение.Значение) + РассчитатьПоГруппеЗакупкиКоличествоПлан(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.КоличествоПлан=null,0,ВыборкаЗначение.КоличествоПлан); 
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаКоличество = ОбщийИтогОстатокКонецМесяцаКоличество + СуммаХ;					
					КонецЕсли;
				КонецЕсли; 

		ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаКоличество1" Тогда
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда
					КолКонецПланОтФакта =  СтрокаОстатков.КоличествоОстаток + доляДоКонца*(СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт) );
					 ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = КолКонецПланОтФакта;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаКоличество1 = ОбщийИтогОстатокКонецМесяцаКоличество1+ КолКонецПланОтФакта;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеКоличество(ТаблицаОстатков,ВыборкаЗначение.Значение) + доляДоКонца*( РассчитатьПоГруппеЗакупкиКоличествоФакт(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт) ); 
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаКоличество1 = ОбщийИтогОстатокКонецМесяцаКоличество1 + СуммаХ;					
					КонецЕсли;
				КонецЕсли; 
				
		ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаКоличество2" Тогда  //28.09.2018 --- чистый факт -----------
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда
					КолКонецПланОтФакта =  СтрокаОстатков.КоличествоОстаток + (СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт) );
					 ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = КолКонецПланОтФакта;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаКоличество2 = ОбщийИтогОстатокКонецМесяцаКоличество2+ КолКонецПланОтФакта;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппеКоличество(ТаблицаОстатков,ВыборкаЗначение.Значение) + ( РассчитатьПоГруппеЗакупкиКоличествоФакт(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт) ); 
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаКоличество2 = ОбщийИтогОстатокКонецМесяцаКоличество2 + СуммаХ;					
					КонецЕсли;
				КонецЕсли; 
			
		ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаСумма" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
			
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток + СтрокаОстатков.ЗакупкиСтоимостьПлан - ?(ВыборкаЗначение.СтоимостьПлан=null,0,ВыборкаЗначение.СтоимостьПлан);//СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаСумма = ОбщийИтогОстатокКонецМесяцаСумма + СтрокаОстатков.СтоимостьОстаток + СтрокаОстатков.ЗакупкиСтоимостьПлан - ?(ВыборкаЗначение.СтоимостьПлан=null,0,ВыборкаЗначение.СтоимостьПлан);//СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппе(ТаблицаОстатков,ВыборкаЗначение.Значение) + РассчитатьПоГруппеЗакупкиСтоимостьПлан(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.СтоимостьПлан=null,0,ВыборкаЗначение.СтоимостьПлан); //РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаСумма = ОбщийИтогОстатокКонецМесяцаСумма + СуммаХ;					
					КонецЕсли;
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаСумма1" Тогда
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда				
					СумКонецПланОтФакта = СтрокаОстатков.СтоимостьОстаток + доляДоКонца*(СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт));
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СумКонецПланОтФакта;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаСумма1 = ОбщийИтогОстатокКонецМесяцаСумма1 + СумКонецПланОтФакта;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппе(ТаблицаОстатков,ВыборкаЗначение.Значение) +  доляДоКонца*(РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт) );
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаСумма1 = ОбщийИтогОстатокКонецМесяцаСумма1 + СуммаХ;					
					КонецЕсли;
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаСумма2" Тогда  //28.09.2018
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда				
					СумКонецПланОтФакта = СтрокаОстатков.СтоимостьОстаток + (СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт));
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СумКонецПланОтФакта;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаСумма2 = ОбщийИтогОстатокКонецМесяцаСумма2 + СумКонецПланОтФакта;
					КонецЕсли;
				Иначе 
					СуммаХ = РассчитатьПоГруппе(ТаблицаОстатков,ВыборкаЗначение.Значение) + (РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение) - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт) );
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					Если ВыборкаЗначение.Уровень()=1 Тогда 
						ОбщийИтогОстатокКонецМесяцаСумма2 = ОбщийИтогОстатокКонецМесяцаСумма2 + СуммаХ;					
					КонецЕсли;
				КонецЕсли; 
				
			Иначе
				
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаЗначение[СтрокаЯчеек.Представление];
			
			КонецЕсли; 
		
			ТабДок.Присоединить(ОбластьВывода);	
			
		КонецЦикла; 
		
//---------------------------------------------------------------------------
Если флМенеджеры тогда //+++ 08.06.2018
			// Второй
		// Исключим Никитина, Кузьмичеву и некоторые их группы
		Если ТипЗнч(ВыборкаЗначение.Значение) = тип("СправочникСсылка.НоменклатурныеГруппы") // = ТипЗнч(Справочники.НоменклатурныеГруппы.ПустаяСсылка()) 
		И (  //----------фикс ном.группы------------
			  ( 	ВыборкаЗначение.Значение.Код="00062" //LINGLONG легковые
				или ВыборкаЗначение.Значение.Код="00063" //LINGLONG легкогрузовые 
				
				или ВыборкаЗначение.Значение.Код="00020" //Камеры
				или ВыборкаЗначение.Значение.Код="00031" //Ободные ленты
				
				или ВыборкаЗначение.Значение.Код="00013" //Грузовые диски
				или ВыборкаЗначение.Значение.Код="00036" //ЦМК импорт
				или ВыборкаЗначение.Значение.Код="00074" //Спецшины Китай
				или ВыборкаЗначение.Значение.Код="00041" //Черный Киров легковые
			  ) 
		  ИЛИ 
		      (   ВыборкаЗначение.Значение.ЭтоГруппа = ЛОЖЬ
				и СокрЛП(ВыборкаЗначение.Значение.Ответственный.Код) <> "Кузьмичева"
		    	и СокрЛП(ВыборкаЗначение.Значение.Ответственный.Код) <> "Коширенков" //+++ 08.06.2018 "Коширенков" вместо "Никитин" с марта 2018г.
			  )
		  )	  Тогда 
			ТабДок.Вывести(ОбластьЗначение, ВыборкаЗначение.Уровень()+1);
			Табдок.начатьгруппустрок();
			
			Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
				
				ОбластьВывода = Макет.ПолучитьОбласть("Значение|" + СтрокаЯчеек.Значение);
				
				Если СтрокаЯчеек.Представление = "СтоимостьОстаток" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток;
						//ОбщийИтогСтоимостьОстаток = ОбщийИтогСтоимостьОстаток + СтрокаОстатков.СтоимостьОстаток;
					Иначе 
						СуммаХ = РассчитатьПоГруппе(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
						//ОбщийИтогСтоимостьОстаток = ОбщийИтогСтоимостьОстаток + СуммаХ;					
					КонецЕсли;
					
					
				ИначеЕсли СтрокаЯчеек.Представление = "КоличествоОстаток" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток;
					//	ОбщийИтогКоличествоОстаток = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
					Иначе 
						СуммаХ = РассчитатьПоГруппеКоличество(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					//	ОбщийИтогКоличествоОстаток = ОбщийИтогКоличествоОстаток + СуммаХ;									
					КонецЕсли; 
					
				ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоКоличеству" Тогда
					
					// Временная мера
					врДействиеПоКоличеству =  ?(ЗначениеНеЗаполнено(ВыборкаЗначение.КоличествоПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоКоличеству), 0,
																			Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0)); 
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоКоличеству;
					
					ОбщийИтогДействиеПоКоличеству = ОбщийИтогДействиеПоКоличеству + врДействиеПоКоличеству;
					
					//ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0);
					
				ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоСтоимости" Тогда
					
					// Временная мера
					врДействиеПоСумме = ?(ЗначениеНеЗаполнено(ВыборкаЗначение.СтоимостьПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоСумме), 0,
																			Окр(ВыборкаЗначение.СтоимостьПлан * (ВыборкаЗначение.ОтстованиеПоСумме/100), 0));
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоСумме;
					ОбщийИтогДействиеПоСтоимости = ОбщийИтогДействиеПоСтоимости + врДействиеПоСумме;
					
					//ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
			
				ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоПлан" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоПлан;
						//ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогЗакупкиКоличествоПлан + СтрокаОстатков.ЗакупкиКоличествоПлан;
					Иначе 
						СуммаХ = РассчитатьПоГруппеЗакупкиКоличествоПлан(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
						//ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогЗакупкиКоличествоПлан + СуммаХ;					
					КонецЕсли; 
					
				ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоФакт" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоФакт;
						//ОбщийИтогЗакупкиКоличествоФакт = ОбщийИтогЗакупкиКоличествоФакт + СтрокаОстатков.ЗакупкиКоличествоФакт;
					Иначе 
						СуммаХ = РассчитатьПоГруппеЗакупкиКоличествоФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
						//ОбщийИтогЗакупкиКоличествоФакт = ОбщийИтогЗакупкиКоличествоФакт + СуммаХ;					
					КонецЕсли; 
					
				ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьПлан" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьПлан;
					//	ОбщийИтогЗакупкиСтоимостьПлан = ОбщийИтогЗакупкиСтоимостьПлан + СтрокаОстатков.ЗакупкиСтоимостьПлан;
					Иначе 
						СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьПлан(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
						//ОбщийИтогЗакупкиСтоимостьПлан = ОбщийИтогЗакупкиСтоимостьПлан + СуммаХ;					
					КонецЕсли; 
					
				ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьФакт" Тогда
					
					СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
					
					Если СтрокаОстатков <> Неопределено Тогда
					
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьФакт;
					//    ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СтрокаОстатков.ЗакупкиСтоимостьФакт;
						
					Иначе 
						СуммаХ = РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,ВыборкаЗначение.Значение);
						ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СуммаХ;
					//	ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СуммаХ;											
					КонецЕсли; 
					
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаКоличество" Тогда
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток + СтрокаОстатков.ЗакупкиКоличествоПлан - ?(ВыборкаЗначение.КоличествоПлан=null,0,ВыборкаЗначение.КоличествоПлан);//СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаСумма" Тогда
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток + СтрокаОстатков.ЗакупкиСтоимостьПлан - ?(ВыборкаЗначение.СтоимостьПлан=null,0,ВыборкаЗначение.СтоимостьПлан);//СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
				КонецЕсли; 
//---------------------------------------------------------ФАКТ-----------------------------------------------				
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаКоличество2" Тогда
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток + СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаСумма2" Тогда
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток + СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
				КонецЕсли; 
//---------------------------------------------------------ФАКТ расчетный-----------------------------------------------				
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаКоличество1" Тогда
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток + доляДоКонца *( СтрокаОстатков.ЗакупкиКоличествоФакт - ?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт) );
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ОстатокКонецМесяцаСумма1" Тогда
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				Если СтрокаОстатков <> Неопределено Тогда				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток + доляДоКонца * (СтрокаОстатков.ЗакупкиСтоимостьФакт - ?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт) );
				КонецЕсли; 
				
					
			Иначе
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаЗначение[СтрокаЯчеек.Представление];
			КонецЕсли; 
			
				ТабДок.Присоединить(ОбластьВывода);	
				
			КонецЦикла; 
		//-----------------------------------
		КонецЕсли;		

		ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя = ВыборкаЗначение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Следующий() Цикл
			ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Параметры.Заполнить(ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя);
			ТабДок.Вывести(ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя, ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Уровень());
			
			Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
				
				ОбластьВывода = Макет.ПолучитьОбласть("ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя|" + СтрокаЯчеек.Значение);
				
				Если (СтрокаЯчеек.Представление <> "СтоимостьОстаток") 
					 И (СтрокаЯчеек.Представление <> "КоличествоОстаток")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоПлан")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоФакт")
					 И (СтрокаЯчеек.Представление <> "ДействиеПоКоличеству")
					 И (СтрокаЯчеек.Представление <> "ДействиеПоСтоимости")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьПлан")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьФакт") 
					 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество") 
					 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма") 
					 //-------------------------------------------------------------------------
					 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество1") 
					 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма1")
					 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество2") 
					 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма2")Тогда
					 
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя[СтрокаЯчеек.Представление];
				
				КонецЕсли; 
				
				ТабДок.Присоединить(ОбластьВывода);	
				
			КонецЦикла; 

			
			ВыборкаНоменклатура = ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			//08.06.2018 - ускорение вывода
			макетЯчейки = новый Соответствие;
			для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
				макетЯчейки.Вставить( СтрокаЯчеек.Значение, Макет.ПолучитьОбласть("Номенклатура|" + СтрокаЯчеек.Значение) );
			КонецЦикла;
			
			Пока ВыборкаНоменклатура.Следующий() Цикл
				
				ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
				
				Если ЗначениеЗаполнено(ВыборкаНоменклатура.Номенклатура) Тогда
					
					ТабДок.Вывести(ОбластьНоменклатура, 3); //08.06.2018 всегда  ВыборкаНоменклатура.Уровень() = 3
					
					Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
						
						Если СтрокаЯчеек.Представление = "КоличествоФакт" Тогда
						
							Параметр = "КоличествоОборот";
							
						Иначе
							
							Параметр = СтрокаЯчеек.Представление;
						
						КонецЕсли; 
						
						Если СтрокаЯчеек.Представление = "СтоимостьФакт" Тогда
						
							Параметр = "СтоимостьОборот";
							
							
						КонецЕсли; 
					//08.06.2018 --- самое длительное! 57 сек(38%) >> 1,5 сек (3,3%)
				    //	ОбластьВывода = Макет.ПолучитьОбласть("Номенклатура|" + СтрокаЯчеек.Значение);
						ОбластьВывода = макетЯчейки.Получить(СтрокаЯчеек.Значение);
						
						Если (Параметр <> "СтоимостьОстаток") 
							И (Параметр <> "КоличествоОстаток") 
							И (Параметр <> "ЗакупкиКоличествоПлан")
					 		И (Параметр <> "ЗакупкиКоличествоФакт")
					 		И (Параметр <> "ЗакупкиСтоимостьПлан")
							И (Параметр <> "ДействиеПоКоличеству")
							И (Параметр <> "ДействиеПоСтоимости")
					 		И (Параметр <> "ЗакупкиСтоимостьФакт") 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество") 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма") 
							//--------------------------------------------------------------------- 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество1") 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма1") 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество2") 
							 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма2") Тогда
							
							ОбластьВывода.Параметры[Параметр] = ВыборкаНоменклатура[Параметр];
							
						КонецЕсли;
						
						ТабДок.Присоединить(ОбластьВывода);	
						
					КонецЦикла; 
					
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
КонецЕсли;
	
	КонецЦикла; // конец основного цикла

		Попытка 
			Табдок.Закончитьгруппустрок();	
		Исключение   
		Конецпопытки;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.Вывести(ОбластьОбщийИтог);
	
	Если Флаг Тогда 
		ТабДок.Вывести(ОбластьОбщийИтог);
	КонецЕсли;
	Флаг=ложь;	
	
	Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
		
		ОбластьВывода = Макет.ПолучитьОбласть("ОбщиеИтоги|" + СтрокаЯчеек.Значение);
		
		Если (СтрокаЯчеек.Представление <> "СтоимостьОстаток") 
			И (СтрокаЯчеек.Представление <> "КоличествоОстаток")
			И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоПлан")
			И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоФакт")
			И (СтрокаЯчеек.Представление <> "ДействиеПоКоличеству")
			И (СтрокаЯчеек.Представление <> "ДействиеПоСтоимости")
			И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьПлан")
			И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьФакт") 
			//---------------------------------------------------------
			 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество") 
			 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма") 
			//---------------------------------------------------------
			 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество1") 
			 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма1") 
			 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаКоличество2") 
			 И (СтрокаЯчеек.Представление <> "ОстатокКонецМесяцаСумма2") Тогда
			
			ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаОбщийИтог[СтрокаЯчеек.Представление];
			
		Иначе
			
			ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = Вычислить("ОбщийИтог" + СтрокаЯчеек.Представление);
			
		КонецЕсли;
		
		ТабДок.Присоединить(ОбластьВывода);	
		
	КонецЦикла; 
     ТабДок.ФиксацияСлева =2;
Состояние(" ");	
	 
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если НЕ ЗначениеНеЗаполнено(ДатаНач) И НЕ ЗначениеНеЗаполнено(ДатаКон) Тогда
		
		ВТекущемПериоде = Ложь;
		
		Если ДатаКон >= ТекущаяДата() Тогда
		
			ВТекущемПериоде = Истина;
		
		КонецЕсли;
		
		Если ВТекущемПериоде Тогда
			мДатаРасчета = Формат(НачалоДня(ТекущаяДата())-1, "ДЛФ=DD");  //ПО (включительно) пред.день!
			мДнейВПериоде = Окр( (КонецДня(ДатаКон)+1 - НачалоДня(ДатаНач)) / 86400,0);
			мДнейРасчета =  Окр( (НачалоДня(ТекущаяДата()) - НачалоДня(ДатаНач)) / 86400,0)+1;  //06.06 - КонецДня !?
			мДнейРасчета =  ?(мДнейРасчета=0,1,мДнейРасчета);
		Иначе
			мДатаРасчета = Формат(ДатаКон, "ДЛФ=DD");
			мДнейВПериоде = Окр( (КонецМесяца(ДатаКон) - НачалоДня(ДатаНач)) / 86400,0);
			мДнейРасчета =  Окр( (КонецДня(ДатаКон)+1 - НачалоДня(ДатаНач)) / 86400, 0);
			//мДнейРасчета =  Окр((КонецМесяца(ДатаКон) - НачалоДня(ДатаНач)) / 86400, 0);
			мДнейРасчета =  ?(мДнейРасчета=0,1,мДнейРасчета);
		КонецЕсли; 
		
		 мДнейРасчетаМ = мДнейРасчета;		
		 мДнейВПериодеМ =мДнейВПериоде;
		 
		//+++ 06.06.2018 без учёта субб/вскр +++++++++++++++++++++по задаче №48419 +++++++++++++++++++++++++++
		N= мДнейВПериоде;  // 1-ое + 0...30-1 = 30
		для i=0 по N-1 цикл
			дд = ДатаНач + i*86400;
			Если ДеньНедели( дд )>5 тогда
			мДнейВПериоде = мДнейВПериоде - 1;
			КонецЕсли;	
		КонецЦикла;
		
		N= мДнейРасчета;
		Если мДнейРасчета>1 тогда
		для i=0 по N-1 цикл
			дд = ДатаНач + i*86400;
			Если ДеньНедели( дд )>5 тогда
			мДнейРасчета = мДнейРасчета - 1;
			КонецЕсли;	
		КонецЦикла;
		конецЕсли;
		//+++)
		
		ЭлементыФормы.ОписаниеПараметров.Заголовок = "Дата расчета по: " + мДатаРасчета +"(включительно)"
		+ ", раб.дней в периоде: " + Строка(мДнейВПериоде) 
		+ ", раб.дней расчета: " + Строка(мДнейРасчета) 
		+?(мДнейВПериоде>0 и мДнейРасчета<>мДнейВПериоде, " ("+формат(100*мДнейРасчета/мДнейВПериоде,"ЧДЦ=0")+"%)" ,"")  //* &ДнейРасчета / &ДнейВПериоде
 		+ ", тип периода: " + ?(ВТекущемПериоде, "Текущий", "Прошедший");
		
	КонецЕсли; 	
	
КонецПроцедуры

Процедура ДействияФормыНастройка(Кнопка)
	
	ФормаНастроек = ПолучитьФорму("Настройки");
	
	врВыводитьДанныеПоКоличеству = ВыводитьДанныеПоКоличеству;
	врВыводитьДанныеПоСуммам = ВыводитьДанныеПоСуммам;
	врВыводитьПроцентВыполнения = ВыводитьПроцентВыполнения;
	врВыводитьПроцентОтставания = ВыводитьПроцентОтставания;
	
	Если ФормаНастроек.ОткрытьМодально() <> "ОК" Тогда
		
		ВыводитьДанныеПоКоличеству 	= врВыводитьДанныеПоКоличеству;
		ВыводитьДанныеПоСуммам 		= врВыводитьДанныеПоСуммам;
		ВыводитьПроцентВыполнения 	= врВыводитьПроцентВыполнения;
		ВыводитьПроцентОтставания 	= врВыводитьПроцентОтставания;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМенеджераНаправления(НоменклатурнаяГруппа)
	Запрос = Новый Запрос;
	
	Запрос.Текст=" ВЫБРАТЬ  ПЕРВЫЕ 1
|	ЗначенияСвойствОбъектов.Значение  Менеджер
|ИЗ
|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
|ГДЕ
|	ЗначенияСвойствОбъектов.Объект = &Объект
|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";

Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Менеджер направления продаж"));
Запрос.УстановитьПараметр("Объект",НоменклатурнаяГруппа);

Выборка=Запрос.Выполнить().Выбрать();
Если Выборка.Следующий() Тогда
	Возврат  Выборка.Менеджер;
Иначе
    Возврат "";
КонецЕсли;

	
КонецФункции	

Процедура ПриОткрытии()
	Если РольДоступна("ДополнительныеПраваВЭД")тогда
	Элементыформы.НадписьПодразделение.Видимость = истина;
	Элементыформы.Подразделение.Видимость = Истина;
	конецесли;	
	флМенеджеры = ЛОЖЬ; //08.06.2018 
КонецПроцедуры

Функция РассчитатьПоГруппе(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.СтоимостьОстаток;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеКоличество(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.КоличествоОстаток;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиКоличествоПлан(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиКоличествоПлан;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиКоличествоФакт(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиКоличествоФакт;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиСтоимостьПлан(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиСтоимостьПлан;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиСтоимостьФакт(ТаблицаОстатков,Значение)
	
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиСтоимостьФакт;
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;
КонецФункции

Функция РассчитатьПоГруппеЗакупкиКоличествоКонецМесяца(ТаблицаОстатков,ВыборкаЗначение,Значение)
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиКоличествоФакт-?(ВыборкаЗначение.КоличествоФакт=null,0,ВыборкаЗначение.КоличествоФакт);
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;	
КонецФункции

Функция РассчитатьПоГруппеЗакупкиСтоимостьКонецМесяца(ТаблицаОстатков,ВыборкаЗначение,Значение)
	Сумма = 0;
	
	Для Каждого Стрх из ТаблицаОстатков Цикл
		Попытка 
			Если Стрх.Значение.ПринадлежитЭлементу(Значение) Тогда 
				Сумма = Сумма + Стрх.ЗакупкиСтоимостьФакт-?(ВыборкаЗначение.СтоимостьФакт=null,0,ВыборкаЗначение.СтоимостьФакт);
			КонецЕсли;
		Исключение
			;
		Конецпопытки;
	КонецЦИкла;
	
	Возврат Сумма;	
КонецФункции

Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Программа");
Сценарий = Справочники.СценарииПланирования.НайтиПоКоду("00002");
ДатаНач = НачалоМесяца(ТекущаяДата());
ДатаКон = КонецМесяца(ТекущаяДата());

ВыводитьДанныеПоКоличеству = Истина;
ВыводитьДанныеПоСуммам = Истина;
ВыводитьПроцентВыполнения = Истина;
ВыводитьПроцентОтставания = Истина;

флПоказыватьРасчет = ( ПараметрыСеанса.ТекущийПользователь = справочники.Пользователи.НайтиПоКоду("Доколин")
				   или ПараметрыСеанса.ТекущийПользователь = справочники.Пользователи.НайтиПоКоду("Горохов")
				   или ПараметрыСеанса.ТекущийПользователь = справочники.Пользователи.НайтиПоКоду("Огородников"));

СписокПолей.Добавить("КоличествоОстаток", "Остаток Склада, шт.", Истина);

СписокПолей.Добавить("ЗакупкиКоличествоПлан", "Закупки План, шт.", Истина);
СписокПолей.Добавить("ЗакупкиКоличествоФакт", "Закупки Факт, шт.", Истина);
СписокПолей.Добавить("ЗакупкиСтоимостьПлан", "Закупки План сумма", Истина);
СписокПолей.Добавить("ЗакупкиСтоимостьФакт", "Закупки Факт сумма", Истина);

СписокПолей.Добавить("СтоимостьОстаток", 			 "Остаток Склада на конец месяца, сумма", Истина);

СписокПолей.Добавить("КоличествоПлан", "Продажи План, шт.", Истина);
СписокПолей.Добавить("КоличествоФакт", "Продажи Факт, шт.", Истина);
	//		ВыводимыеЯчейки.Добавить("ПроцентОтстованияКоличество", "ОтстованиеПоКоличеству");
СписокПолей.Добавить("ОтстованиеПоКоличеству", "% Отставания/Опережения по кол-ву р.д.", Истина);
СписокПолей.Добавить("ОтстованиеПоКоличествуМ", "% Отставания/Опережения по кол-ву", Истина);

СписокПолей.Добавить("СтоимостьПлан", "Продажи План, сумма", Истина);
СписокПолей.Добавить("СтоимостьФакт", "Продажи Факт, сумма", Истина);
	//		ВыводимыеЯчейки.Добавить("ПроцентОтстованияСтоимость", "ОтстованиеПоСумме");
СписокПолей.Добавить("ОтстованиеПоСумме", "% Отставания/Опережения по сумме р.д.", Истина);
СписокПолей.Добавить("ОтстованиеПоСуммеМ", "% Отставания/Опережения по сумме", Истина);


СписокПолей.Добавить("ОстатокКонецМесяцаКоличество", "Остаток Склада ПЛАН, шт.", Истина);
СписокПолей.Добавить("ОстатокКонецМесяцаКоличество2","Остаток Склада ФАКТ, шт.", Истина);
СписокПолей.Добавить("ОстатокКонецМесяцаКоличество1","Остаток Склада ФАКТ.(Расчетн.) на конец месяца, шт.", флПоказыватьРасчет);

СписокПолей.Добавить("ОстатокКонецМесяцаСумма", "Остаток ПЛАН, сумма", Истина);
СписокПолей.Добавить("ОстатокКонецМесяцаСумма2","Остаток ФАКТ, сумма", Истина);
СписокПолей.Добавить("ОстатокКонецМесяцаСумма1","Остаток ФАКТ.(Расчетн.) на конец месяца, сумма", флПоказыватьРасчет);

СписокПолей.Добавить("ПроцентВыполненияКоличество", "% Выполнения по кол-ву", Истина);
СписокПолей.Добавить("ПроцентВыполненияСтоимость", "% Выполнения по сумме", Истина);
	