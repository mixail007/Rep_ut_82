
Перем ЦветБледноКрасный, ЦветБледноЗеленый;
Перем ВерхнийПорогИзмененияЦветаПоУмолчанию, НижнийПорогИзмененияЦветаПоУмолчанию;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.СтраницаАнализМодуля Тогда
		ТекстМодуля = ЭлементыФормы.ПолеТекстаМодуля.ПолучитьТекст();
		ВычислитьСложностьТекстаМодуля();
		ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.СтраницаРезультаты;
	ИначеЕсли ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.СтраницаАнализФайлов Тогда
		Если АнализироватьКаталог Тогда
			ВычислитьСложностьМодулейВКаталоге(Каталог, МаскаФайлов, ВключатьПодкаталоги);
			ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.СтраницаРезультаты;
		ИначеЕсли АнализироватьФайл Тогда
			//файл
			ВычислитьСложностьМодулейВКаталоге(Файл);
			ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.СтраницаРезультаты;
		КонецЕсли; 
		
	КонецЕсли; 
КонецПроцедуры

Процедура ДеревоРезультатовАнализаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ЦикломатическаяСложность >= ВерхнийПорогИзмененияЦвета Тогда
		ОформлениеСтроки.ЦветФона = ЦветВерхнийПорогСложности;
	ИначеЕсли ДанныеСтроки.ЦикломатическаяСложность = 0 Тогда
		ОформлениеСтроки.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
	ИначеЕсли ДанныеСтроки.ЦикломатическаяСложность <= НижнийПорогИзмененияЦвета Тогда
		ОформлениеСтроки.ЦветФона = ЦветНижнийПорогСложности;
	Иначе
		Коэффициент = (ДанныеСтроки.ЦикломатическаяСложность - НижнийПорогИзмененияЦвета) / (ВерхнийПорогИзмененияЦвета - НижнийПорогИзмененияЦвета);
		Цвет = Новый Цвет(ЦветНижнийПорогСложности.Красный + (ЦветВерхнийПорогСложности.Красный - ЦветНижнийПорогСложности.Красный) * Коэффициент,
						  ЦветНижнийПорогСложности.Зеленый + (ЦветВерхнийПорогСложности.Зеленый - ЦветНижнийПорогСложности.Зеленый) * Коэффициент,
						  ЦветНижнийПорогСложности.Синий   + (ЦветВерхнийПорогСложности.Синий   - ЦветНижнийПорогСложности.Синий  ) * Коэффициент);
		ОформлениеСтроки.ЦветФона = Цвет;
	КонецЕсли; 
КонецПроцедуры

Процедура ПриОткрытии()
	ЭлементыФормы.ДеревоРезультатовАнализа.СоздатьКолонки();
	
	ЭлементыФормы.ПолеТекстаМодуля.УстановитьТекст(ТекстМодуля);
	
	ЭлементыФормы.МаскаФайлов.СписокВыбора.Добавить("*.txt");
	ЭлементыФормы.МаскаФайлов.СписокВыбора.Добавить("*.*");
	
	Если НЕ ЗначениеЗаполнено(ВерхнийПорогИзмененияЦвета) ИЛИ НЕ ЗначениеЗаполнено(НижнийПорогИзмененияЦвета) Тогда
		ПрименитьСтандартныеНастройкиОформленияРезультатов();
	КонецЕсли; 
КонецПроцедуры

Процедура ПрименитьСтандартныеНастройкиОформленияРезультатов()
	НижнийПорогИзмененияЦвета = НижнийПорогИзмененияЦветаПоУмолчанию;
	ВерхнийПорогИзмененияЦвета = ВерхнийПорогИзмененияЦветаПоУмолчанию;
	ЦветВерхнийПорогСложности = ЦветБледноКрасный;
	ЦветНижнийПорогСложности = ЦветБледноЗеленый;
КонецПроцедуры

Процедура ПрименитьСтандартныеНастройки()
	ПрименитьСтандартныеНастройкиОформленияРезультатов();
	
	ОбрабатыватьУсловныйОператор = Ложь;
КонецПроцедуры

Процедура ОбновитьЦветаРезультатов()
	ЭлементыФормы.ДеревоРезультатовАнализа.ОбновитьСтроки();
КонецПроцедуры

Процедура ВключатьПодкаталогиПриИзменении(Элемент)
	АнализироватьКаталог = Истина;
	АнализироватьКаталогПриИзменении(Элемент);
КонецПроцедуры

Процедура МаскаФайловПриИзменении(Элемент)
	АнализироватьКаталог = Истина;
	АнализироватьКаталогПриИзменении(Элемент);
КонецПроцедуры

Процедура КаталогПриИзменении(Элемент)
	АнализироватьКаталог = Истина;
	АнализироватьКаталогПриИзменении(Элемент);
КонецПроцедуры

Процедура ФайлПриИзменении(Элемент)
	АнализироватьФайл = Истина;
	АнализироватьФайлПриИзменении(Элемент);
КонецПроцедуры

Процедура КаталогНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок = "Выберете каталог для анализа файлов из него...";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Каталог = ДиалогВыбораФайла.Каталог;
		КаталогПриИзменении(Неопределено);
	КонецЕсли;
КонецПроцедуры

Процедура ФайлНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберете файл для анализа...";
	ДиалогВыбораФайла.Фильтр = "Текстовые файлы (*.txt)|*.txt|Все файлы|*.*";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Файл = ДиалогВыбораФайла.ПолноеИмяФайла;
		ФайлПриИзменении(Неопределено);
	КонецЕсли; 
КонецПроцедуры

Процедура КаталогОткрытие(Элемент, СтандартнаяОбработка)
	ЗапуститьПриложение(Каталог);
КонецПроцедуры

Процедура ФайлОткрытие(Элемент, СтандартнаяОбработка)
	ЗапуститьПриложение(Файл);
КонецПроцедуры

Процедура АнализироватьКаталогПриИзменении(Элемент)
	Если АнализироватьКаталог Тогда
		АнализироватьФайл = Ложь;
	КонецЕсли; 
КонецПроцедуры

Процедура АнализироватьФайлПриИзменении(Элемент)
	Если АнализироватьФайл Тогда
		АнализироватьКаталог = Ложь;
	КонецЕсли; 
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	ТекстМодуля = ЭлементыФормы.ПолеТекстаМодуля.ПолучитьТекст();
КонецПроцедуры

// процедура упорядочивает результаты анализа
//
// Параметры
//  СтрокаСортировки  – Строка – указывает, как следует отсортировать результаты анализа
//
Процедура ОтсортироватьДеревоРезультатов(СтрокаСортировки)
	ДеревоРезультатовАнализа.Строки.Сортировать(СтрокаСортировки, Истина);
КонецПроцедуры

Процедура УпорядочитьПоВозрастаниюНажатие(Кнопка)
	ТекущаяКолонка = ЭлементыФормы.ДеревоРезультатовАнализа.ТекущаяКолонка;
	Если ТекущаяКолонка = Неопределено Тогда
		ТекущаяКолонка = "ЦикломатическаяСложность";
	Иначе
		ТекущаяКолонка = ТекущаяКолонка.Имя;
	КонецЕсли; 
	ОтсортироватьДеревоРезультатов("" + ТекущаяКолонка + " Возр");
КонецПроцедуры

Процедура УпорядочитьПоУбываниюНажатие(Кнопка)
	ТекущаяКолонка = ЭлементыФормы.ДеревоРезультатовАнализа.ТекущаяКолонка;
	Если ТекущаяКолонка = Неопределено Тогда
		ТекущаяКолонка = "ЦикломатическаяСложность";
	Иначе
		ТекущаяКолонка = ТекущаяКолонка.Имя;
	КонецЕсли; 
	ОтсортироватьДеревоРезультатов("" + ТекущаяКолонка + " Убыв");
КонецПроцедуры

Процедура КнопкаСтандартныеНастройкиНажатие(Элемент)
	ПрименитьСтандартныеНастройки();
КонецПроцедуры

Процедура НижнийПорогИзмененияЦветаПриИзменении(Элемент)
	ОбновитьЦветаРезультатов();
КонецПроцедуры

Процедура ВерхнийПорогИзмененияЦветаПриИзменении(Элемент)
	ОбновитьЦветаРезультатов();
КонецПроцедуры

Процедура ЦветНижнийПорогСложностиПриИзменении(Элемент)
	ОбновитьЦветаРезультатов();
КонецПроцедуры

Процедура ЦветВерхнийПорогСложностиПриИзменении(Элемент)
	ОбновитьЦветаРезультатов();
КонецПроцедуры

ЦветБледноКрасный = Новый Цвет(255, 150, 132);
ЦветБледноЗеленый = Новый Цвет(200, 253, 200);
ВерхнийПорогИзмененияЦветаПоУмолчанию = 15;
НижнийПорогИзмененияЦветаПоУмолчанию = 3;