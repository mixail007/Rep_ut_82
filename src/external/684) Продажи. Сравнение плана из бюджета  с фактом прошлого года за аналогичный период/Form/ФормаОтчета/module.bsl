
Процедура ПериодПланированияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПериодПланирования) Тогда
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачФ");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = ДобавитьМесяц( ПериодПланирования.ДатаНачала,-12);
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонФ");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонецДня(ДобавитьМесяц( ПериодПланирования.ДатаКонца,-12));  
   
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодПланирования");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  =  ПериодПланирования;
  КонецЕсли;


КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	//ЭлементРасшифровкиДанных = ДанныеРасшифровки.Элементы[Расшифровка];
	//ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
	//Если  ЭлементРасшифровкиДанныхПоля.Поле = "СуммаПрошлыйГод"  тогда
	//	СтандартнаяОбработка = Ложь;
	//	
	//	Попытка
	//		Аналитика1 =ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;  //ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0]
	//	исключение
	//		Аналитика1 = Неопределено;
	//	конецпопытки;
	//	
	//	
	//	Если ЭлементыФормы.ПоОтветственным.Заголовок =  "По ответственным" тогда
	//		
	//		
	//		если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Подразделения") тогда
	//			Подразделение = Аналитика1;
	//			СтатьяЗатрат =  ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0];
	//		конецЕсли;
	//		
	//		если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.СтатьиЗатрат") тогда
	//			СтатьяЗатрат = Аналитика1;
	//		конецЕсли;
	//		
	//		если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Пользователи") тогда
	//			Ответственный = Аналитика1;
	//		ИначеЕсли ЭлементыФормы.ПоОтветственным.Заголовок =  "Общим списком" тогда
	//			
	//			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Подразделения") тогда
	//				Подразделение = Аналитика1;
	//				СтатьяЗатрат =  ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0];
	//			конецЕсли;
	//			
	//			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.СтатьиЗатрат") тогда
	//				СтатьяЗатрат = Аналитика1;
	//			конецЕсли;
	//			
	//			
	//			
	//		ИначеЕсли ЭлементыФормы.ПоОтветственным.Заголовок =  "По подразделениям" тогда
	//			
	//			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.СтатьиЗатрат") тогда
	//				СтатьяЗатрат = Аналитика1;
	//				Подразделение =  ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0];
	//			конецЕсли;
	//			
	//			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Подразделения") тогда
	//				Подразделение = Аналитика1;
	//			конецЕсли;
	//			
	//			
	//		конецЕсли;	
	//	конецЕсли;
	//	
	//	//	Форма = ПолучитьФорму("ФормаОтчета1");
		//	Если статьяЗатрат <> неопределено тогда
		//	Форма.СтатьяЗатрат = СтатьяЗатрат;
		//	иначеЕсли (глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Межерицкая") и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Малышев")и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Алексеева А.Е.")и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Лапенков")) тогда
		//	Форма.СтатьяЗатрат = глТекущийПользователь;
		//	конецЕсли;
		////	Если МесяцЗатрат <> неопределено тогда
		//	Форма.МесяцЗатрат = МесяцЗатрат;
		//	форма.началоПериода = НачПериода;
		//	Форма.КонецПериода = КонПериода;
		////	конецЕсли;
		//	форма.Открыть();
		//
		
		
		//	конецЕсли;
		
		

КонецПроцедуры

Процедура ПоГруппамПоГруппам(Кнопка)
	Для каждого Настройка Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
Если Кнопка.Текст = Настройка.Представление тогда
   	КомпоновщикНастроек.ЗагрузитьНастройки(Настройка.Настройки);

   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачФ");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = ДобавитьМесяц( ПериодПланирования.ДатаНачала,-12);
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонФ");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонецДня(ДобавитьМесяц( ПериодПланирования.ДатаКонца,-12));  
   
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодПланирования");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  =  ПериодПланирования;
   
	ЭлементыФормы.ПоГруппам.Заголовок= Настройка.Представление;
Прервать;
КонецЕсли;
КонецЦикла;

КонецПроцедуры

Процедура ОбновлениеОтображения()
	//ЭлементыФормы.Результат.ФиксацияСлева = 5;
//	ЭлементыФормы.Результат.ФиксацияСверху = 26;
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
		СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
  	 
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	Параметр = СхемаКомпоновкиДанных.Параметры.НачФ;
        Параметр.Значение = ДобавитьМесяц( ПериодПланирования.ДатаНачала,-12);
		Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
		
		Параметр = СхемаКомпоновкиДанных.Параметры.КонФ;
        Параметр.Значение =  КонецДня(ДобавитьМесяц( ПериодПланирования.ДатаКонца,-12));
		Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных.Параметры.ПериодПланирования;
        Параметр.Значение = ПериодПланирования;
		Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	//ВнешнийНаборДанных = Новый Структура("ТаблН", ТаблН);	//Добавляем внешнюю таблицу
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	Результат = ЭлементыФормы.Результат;
	Результат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Результат.ФиксацияСлева = 2;

КонецПроцедуры
