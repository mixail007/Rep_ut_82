

Процедура Кнопка1Нажатие(Элемент)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Заголовок = "Прочитать табличный документ из файла";
	ДиалогВыбораФайла.Фильтр    = "Лист Excel (*.xls)|*.xls";
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		//		ТабличныйДокумент = ЭлементыФормы.ТабличныйДокумент;
		ФайлНаДиске = Новый Файл(ДиалогВыбораФайла.ПолноеИмяФайла);
		Если нРег(ФайлНаДиске.Расширение) = ".xls" Тогда
			мПрочитатьТабличныйДокументИзExcel(ДиалогВыбораФайла.ПолноеИмяФайла, НомерЛистаКниги);
		Иначе
			Предупреждение("Нужно выбирать файл Excel с типом XLS!", 10);
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры


Функция мПрочитатьТабличныйДокументИзExcel(ИмяФайла, НомерЛистаExcel = 1) Экспорт
	
	//СвойствоУкомплектованКрепежом = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90164");
	//СвойствоВидУпаковки           = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90165");
	//СвойствоЦвет                  = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166");
	//СвойствоКодСлика              = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90147");
	//СвойствоМаксимальнаяНагрузка  = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90157");
	//СвойствоТипШтрихкода          = ПланыВидовХарактеристик.ТипыШтрихкодов.НайтиПоКоду("00001");  
	
	//ТаблицаЦен=Новый ТаблицаЗначений;
	//ТаблицаЦен.Колонки.Добавить("Номенклатура");
	//ТаблицаЦен.Колонки.Добавить("Цена");
		
	xlLastCell = 11;
	
	ВыбФайл = Новый Файл(ИмяФайла);
	Если НЕ ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ИмяФайла);
		Состояние("Обработка файла Microsoft Excel...");
		ExcelЛист = Excel.Sheets(НомерЛистаКниги);
	Исключение
		Сообщить("Ошибка. Возможно неверно указан номер листа книги Excel.");
		Возврат ложь;
	КонецПопытки;	
	
	ActiveCell = Excel.ActiveCell.SpecialCells(xlLastCell);
	RowCount = ActiveCell.Row;
	Если ЭлементыФормы.ПерваяСтрока.Значение > RowCount Тогда
		ЭлементыФормы.ПерваяСтрока.Значение = RowCount;
	КонецЕсли;	
	
	
	ColumnCount = ActiveCell.Column;
	КоличествоСтрок = ?(КоличествоСтрок=0, RowCount, КоличествоСтрок);
	
	Если Вопрос("Найдено "+строка(RowCount)+" строк и "+строка(ColumnCount)+" столбцов. 
		        |Загрузить c "+строка(перваяСтрока)+" по "+строка(КоличествоСтрок)+" строку ?",
		              РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Да ) <> КодВозвратаДиалога.Да тогда
		Предупреждение("Отмена загрузки файла Excel.", 10);
		возврат ЛОЖЬ;
	КонецЕсли;	
		
	Если ЭлементыФормы.перваяСтрока.Значение = 0 тогда
		ЭлементыФормы.перваяСтрока.Значение = 2; 
	КонецЕсли;
	
	сообщить("Начало ----------"+строка(ТекущаяДата())+"---------" );
//		НачатьТранзакцию(); //=============================================================
	время0 = ТекущаяУниверсальнаяДатаВМиллисекундах();
	  Проц = мин( цел(КоличествоСтрок/100), 100);
	  
	Для Row = перваяСтрока По КоличествоСтрок Цикл
		
		//нельзя прерывать внутри транзакции!
		ОбработкаПрерыванияПользователя();
		Если Проц>0 Тогда
		Если Row%Проц=0 тогда
        время1 = ТекущаяУниверсальнаяДатаВМиллисекундах();
		время12 = (КоличествоСтрок-Row)*(время1-время0)/1000 /Row;
		Состояние("Идет загрузка из Excel: "+строка(Row)+" / "+строка(RowCount)+" ("+строка(окр(Row*100/RowCount,1))+"%)"
		         +" Примерно осталось "+?(время12>60, формат( время12/60,"ЧДЦ=0")+" мин.", формат(время12,"ЧДЦ=0")+" сек.") 
		          );
		КонецЕсли;
		КонецЕсли;	  
		
		КодСтр = СокрЛП(ExcelЛист.Cells(Row,Код1С).Value);
		Если КодСтр <> "" Тогда //код
			
			Если Флажок1 тогда //16.08.2017
				Код1 = формат( число(ExcelЛист.Cells(Row,Код1С).Value) , "ЧЦ=7; ЧВН=; ЧГ=0");
				Спр1 = Справочники.Номенклатура.НайтиПоКоду(Код1);
				Если спр1=неопределено или спр1 = Справочники.Номенклатура.ПустаяСсылка() тогда
					сообщить(строка(Row)+") Не найден товар по коду "+Код1, СтатусСообщения.Внимание);
					Продолжить;
				иначе
					сообщить(строка(Row)+") Меняется товар с кодом "+Код1, СтатусСообщения.Информация);
					СпрОбъект = спр1.ПолучитьОбъект();
				КонецЕсли;
			иначе
				//если уже заполнен код в файле Excel - пропускаем!
				сообщить( строка(Row)+") В файле Excel уже есть код: "+КодСтр+" - товар не будет создаваться еще раз!", СтатусСообщения.Внимание);
				Продолжить;
			КонецЕсли;
			
		Иначе
			Если НЕ Флажок1 тогда //16.08.2017
				СпрОбъект = Справочники.Номенклатура.СоздатьЭлемент();	
			иначе
				сообщить(строка(Row)+") НЕ создана новая номенклатура, так как установлен [v]Перезаписывать!", СтатусСообщения.Внимание);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		//если не заполнено наименование, пропускаем
		Если не Флажок1 и СокрЛП(ExcelЛист.Cells(Row,Наименование).Value) = "" Тогда 
			Сообщить(строка(Row)+") Нельзя создать товар с пустым названием!",СтатусСообщения.Внимание);
			Продолжить;
		КонецЕсли;
		
	
		попытка
		НачатьТранзакцию();  //--------по 1 товару---------------
		
		Если не Флажок1 тогда
			СпрОбъект.Наименование            = СокрЛП(ExcelЛист.Cells(Row,Наименование).Value);
			СпрОбъект.НаименованиеПолное      = СокрЛП(ExcelЛист.Cells(Row,Наименование).Value);
			Если Артикул>0 тогда //+++ 15.12.2017
			СпрОбъект.Артикул				  = СокрЛП(Строка(Формат(ExcelЛист.Cells(Row,Артикул).Value, "ЧГ=0")));
			КонецЕсли;
			СпрОбъект.ВидТовара               = ВидТовара; //06.06.2017
			СпрОбъект.Родитель            	  = Родитель;
			СпрОбъект.БазоваяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
			СпрОбъект.НоменклатурнаяГруппа    = НоменклатурнаяГруппа;
			СпрОбъект.Производитель           = Производитель;
			СпрОбъект.СтавкаНДС               = Перечисления.СтавкиНДС.НДС18;
			СпрОбъект.Комментарий			  = Комментарий;
			СпрОбъект.ОсновнойПоставщик		  = ОснованойПоставщик;
			СпрОбъект.КодТНВЭД 				  = Справочники.КлассификаторТНВЭД.НайтиПоКоду(СтрЗаменить(СокрЛП(ExcelЛист.Cells(Row,КодТНВЭД).Value), " ",""));
			СпрОбъект.Записать();
			Сообщить("Записан новый товар: "+СпрОбъект.Код+" - "+ СпрОбъект.Наименование, СтатусСообщения.Информация);
		КонецЕсли;
	
		если Флажок1 и Артикул>0 тогда
			СпрОбъект.Артикул				  = СокрЛП(Строка(Формат(ExcelЛист.Cells(Row,Артикул).Value, "ЧГ=0")));
			СпрОбъект.Записать();
			сообщить("		Артикул : "+строка(СпрОбъект.Артикул));
		КонецЕсли;
		
		
//		//####################################### ЕДИНИЦЫ ИЗМЕРЕНИЯ #######################################
		если не Флажок1 тогда
			СпрЕдИзм = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
			СпрЕдИзм.Владелец = СпрОбъект.Ссылка;
			СпрЕдИзм.ЕдиницаПоКлассификатору =  СпрОбъект.БазоваяЕдиницаИзмерения;
			СпрЕдИзм.Коэффициент= 1;
			СпрЕдИзм.Наименование = "шт";
			СпрЕдИзм.УстановитьНовыйКод(Константы.ПрефиксКодаЕдиниц.Получить());
			СпрЕдИзм.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
			СпрЕдИзм.Записать();
			СпрОбъект.БазоваяЕдиницаИзмерения = справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт");
			СпрОбъект.ЕдиницаХраненияОстатков = СпрЕдИзм.Ссылка;
			СпрОбъект.ЕдиницаДляОтчетов = СпрЕдИзм.Ссылка;
			СпрОбъект.Записать();
		Иначе
			СпрЕдИзм = СпрОбъект.ЕдиницаХраненияОстатков.ПолучитьОбъект();
		КонецЕсли;
		
		Если Вес>0 тогда
			СпрЕдИзм.Вес   = ?(Вес>0, СокрЛП(ExcelЛист.Cells(Row,Вес).Value), 0);
			//СпрЕдИзм.Записать();
			сообщить("		Вес : "+строка(СпрЕдИзм.Вес));
		КонецЕсли;
		Если Объем>0 тогда
			СпрЕдИзм.Объем = ?(Объем>0, СокрЛП(ExcelЛист.Cells(Row,Объем).Value), 0);
			//СпрЕдИзм.Записать();
			сообщить("		Объем : "+строка(СпрЕдИзм.Объем));
		КонецЕсли;
		
		Если мШирина>0 тогда
			СпрЕдИзм.Ширина = Число(?(мШирина>0, СокрЛП(ExcelЛист.Cells(Row,мШирина).Value), 0));
			//СпрЕдИзм.Записать();
			сообщить("		Ширина : "+строка(СпрЕдИзм.Ширина));
		КонецЕсли;
		Если мВысота>0 тогда
			СпрЕдИзм.Высота = Число(?(мВысота>0, СокрЛП(ExcelЛист.Cells(Row,мВысота).Value), 0));
			//СпрЕдИзм.Записать();
			сообщить("		Высота : "+строка(СпрЕдИзм.Высота));
		КонецЕсли;
		Если мДлина>0 тогда
			СпрЕдИзм.Длина = Число(?(мДлина>0, СокрЛП(ExcelЛист.Cells(Row,мДлина).Value), 0));
			//СпрЕдИзм.Записать();
			сообщить("		Длина : "+строка(СпрЕдИзм.Длина));
		КонецЕсли;

		Если Вес>0 или Объем>0 или мШирина>0 или мВысота>0 или мДлина>0 тогда
			 СпрЕдИзм.Записать();
		КонецЕсли;
		
//		
//		//####################################### ЦЕНЫ #######################################
//		//Попытка	
//		//	Цена=Число(ExcelЛист.Cells(Row,10).Value);
//		//	Если  Цена > 0 Тогда
//		//		
//		//		строкаЦена=ТаблицаЦен.Добавить();
//		//		строкаЦена.Номенклатура = СпрОбъект.Ссылка; 
//		//		строкаЦена.Цена = Цена; 
//		//	КонецЕсли;
//		//Исключение	
//		//КонецПопытки;
//		
//		//####################################### ЗНАЧЕНИЕ СВОЙСТВ ОБЪЕКТОВ #######################################

		Если ВидТовара = перечисления.ВидыТоваров.АКБ тогда // 06.06.2017
		сообщить("  -> Заполняются свойства товара "+код1);
			Если Емкость>0 тогда	
		    	Свойство1 = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00132");
				Знач1 = СокрЛП(ExcelЛист.Cells(Row,Емкость).Value);
				если Знач1="" тогда Знач1="0" КонецЕсли;
				Значение1 = Число( Знач1 );
				
				регСв = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
				регСв.Объект   = СпрОбъект.Ссылка;
				регСв.Свойство = Свойство1;
				регСв.Значение = Значение1;
				регСв.Записать();
				сообщить("		"+строка(Свойство1)+" : "+строка(Значение1));
			КонецЕсли;
			
			Если Полярность>0 тогда
				Свойство1 = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90201");
				Знач11     = ExcelЛист.Cells(Row,Полярность).Value;
				Знач1 = ?(Знач11=0 или Знач11=3, "Обратная", 
				                 ?(Знач11=1 или Знач11=4, "Прямая", "") );
				если знач1 = "Прямая" или знач1="Обратная" тогда
			    	Значение1 = справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(Знач1); //Прямая / Обратная
					регСв = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
					регСв.Объект   = СпрОбъект.Ссылка;
					регСв.Свойство = Свойство1;
					регСв.Значение = Значение1;
					регСв.Записать();
					сообщить("		"+строка(Свойство1)+" : "+строка(Значение1));
			иначе
					Сообщить("! "+строка(СпрОбъект.Код)+" - неверно указана 'Полярность' "+Знач1+" !", СтатусСообщения.Внимание);
				КонецЕсли;
			КонецЕсли;	
			
			Если ПусковойТок>0 тогда
				Свойство1 = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90167");
				Знач1     = СтрЗаменить(СокрЛП(ExcelЛист.Cells(Row,ПусковойТок).Value), " ", "");
				Значение1 = справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(Знач1); 
				если ЗначениеЗаполнено(Значение1) тогда
			   	 	регСв = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
					регСв.Объект   = СпрОбъект.Ссылка;
					регСв.Свойство = Свойство1;
					регСв.Значение = Значение1;
					регСв.Записать();
					сообщить("		"+строка(Свойство1)+" : "+строка(Значение1));
				иначе
					Сообщить("! "+строка(СпрОбъект.Код)+" - не найден 'Пусковой Ток' "+Знач1+" !", СтатусСообщения.Внимание);
				КонецЕсли;
			КонецЕсли;	
			
			Если Типоразмер>0 тогда
				Знач1     = СокрЛП( ExcelЛист.Cells(Row,Типоразмер).Value );
				Значение1 = справочники.Типоразмеры.НайтиПоНаименованию(Знач1);
				если ЗначениеЗаполнено(Значение1) тогда
			  		СпрОбъект.Типоразмер = Значение1;
					СпрОбъект.Записать();
					сообщить("		Типоразмер : "+строка(Значение1));
				иначе
					Знач1 = СтрЗаменить(Знач1, "х","x");
					Значение1 = справочники.Типоразмеры.НайтиПоНаименованию(Знач1);
					если ЗначениеЗаполнено(Значение1) тогда
			  			СпрОбъект.Типоразмер = Значение1;
						СпрОбъект.Записать();
             			сообщить("		Типоразмер : "+строка(Значение1));
			       Иначе
						Сообщить("! "+строка(СпрОбъект.Код)+" - не найден 'Типоразмер' "+Знач1+" !", СтатусСообщения.Внимание);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	

			Если ТипКлемм>0 тогда
				Свойство1 = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90156");
				Знач1     = СокрЛП( ExcelЛист.Cells(Row,ТипКлемм).Value );
				Значение1 = справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(Знач1); //Прямая / Обратная
				если ЗначениеЗаполнено(Значение1) тогда
			   		регСв = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
					регСв.Объект   = СпрОбъект.Ссылка;
					регСв.Свойство = Свойство1;
					регСв.Значение = Значение1;
					регСв.Записать();
					сообщить("		"+строка(Свойство1)+" : "+строка(Значение1));
				иначе
					Сообщить("! "+строка(СпрОбъект.Код)+" - не найден 'Тип Клемм' "+Знач1+" !", СтатусСообщения.Внимание);
				КонецЕсли;
			КонецЕсли;	
			
			Если ТипАКБ>0 тогда
				Свойство1 = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90225");
				Знач1     = СокрЛП( ExcelЛист.Cells(Row,ТипАКБ).Value );
				Значение1 = справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(Знач1); //Прямая / Обратная
				если ЗначениеЗаполнено(Значение1) тогда
			    	регСв = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
					регСв.Объект   = СпрОбъект.Ссылка;
					регСв.Свойство = Свойство1;
					регСв.Значение = Значение1;
					регСв.Записать();
					сообщить("		"+строка(Свойство1)+" : "+строка(Значение1));
				иначе
					Сообщить("! "+строка(СпрОбъект.Код)+" - не найден 'Тип АКБ' "+Знач1+" !", СтатусСообщения.Внимание);
				КонецЕсли;
			КонецЕсли;	
			
		КонецЕсли;//АКБ
	
//		//####################################### ШТРИХКОД #######################################
//		
		Если ШтрихКод1С > 0 Тогда
			ШтрихКод = Строка(Формат(ExcelЛист.Cells(Row,ШтрихКод1С).Value, "ЧГ=0"));
			
			Если СтрДлина(Строка(ШтрихКод)) = 13 Тогда
				МенеджерШтрихкод = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
					МенеджерШтрихкод.Владелец         = СпрОбъект.Ссылка;
					МенеджерШтрихкод.Код              = Число(СпрОбъект.Ссылка.Код);
					МенеджерШтрихкод.Штрихкод         = ШтрихКод;
					МенеджерШтрихкод.ТипШтрихкода     = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
					МенеджерШтрихкод.ЕдиницаИзмерения = СпрЕдИзм.Ссылка; 
					МенеджерШтрихкод.Качество         = Справочники.Качество.Новый;
					МенеджерШтрихкод.Записать(Истина); //перезаписать
					сообщить("		Штрих-Код : "+ШтрихКод);
			иначе
				Сообщить("! "+строка(СпрОбъект.Код)+" - неправильный 'Штрих-Код' "+ШтрихКод+" !", СтатусСообщения.Внимание);
			КонецЕсли;
		КонецЕсли;

		Если не Флажок1 тогда
			ExcelЛист.Cells(Row,Код1С).Value = СпрОбъект.Код;
		КонецЕсли;	
		
		ЗафиксироватьТранзакцию(); //--------по 1 товару---------------
		
	исключение
		ОтменитьТранзакцию(); //06.06.2017 при любой ошибке - товар не будет записан и не будет записаны его Ед,ШК, Св-ва!
		Сообщить(ОписаниеОшибки());
		Сообщить("ОШИБКА при записи товара "+СокрЛП(ExcelЛист.Cells(Row,Наименование).Value), СтатусСообщения.ОченьВажное);
	КонецПопытки;

	КонецЦикла;
//	
//	//####################################### УСТАНОВКА ЦЕН НОМЕНКЛАТУРЫ #######################################
//	//Если ТаблицаЦен.Количество()>0 Тогда
//	//	
//	//	ДокУЦН = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
//	//	ДокУЦН.Дата = ТекущаяДата();
//	//	
//	//	ТипЦенБазовая = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008");
//	//	
//	//	строкаТипыЦен = ДокУЦН.ТипыЦен.Добавить();
//	//	строкаТипыЦен.ТипЦен = ТипЦенБазовая;
//	//	
//	//	//
//	//	Для  счСтрок=0 по  ТаблицаЦен.Количество()-1 Цикл
//	//		строкаТовары                  = ДокУЦН.Товары.Добавить();
//	//		строкаТовары.Номенклатура     = ТаблицаЦен[счСтрок].Номенклатура;
//	//		строкаТовары.Цена             = ТаблицаЦен[счСтрок].Цена;
//	//		строкаТовары.Валюта           = Константы.ВалютаУправленческогоУчета.Получить();
//	//		строкаТовары.ЕдиницаИзмерения = строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
//	//		строкаТовары.ТипЦен           = ТипЦенБазовая;
//	//		
//	//	КонецЦикла; 
//	//	//	
//	//	ДокУЦН.ПолучитьФорму().Открыть();	
//	//	//	
//	//КонецЕсли;
	
	Excel.WorkBooks.Close();
	Excel = 0;
	сообщить("Конец--------"+строка(ТекущаяДата())+"-------" );	
	Возврат Истина;
	
КонецФункции // ()


Процедура ПриОткрытии()
	
	ПерваяСтрока = 2;
	Комментарий = "Загружен из Excel "+формат(ТекущаяДата(),"ДЛФ=D");
	
	ВидТовара = перечисления.ВидыТоваров.Аксессуары;
	Флажок1 = ЛОЖЬ; // только изменение реквизитов для существующих элементов!!!	
	
	НомерЛистаКниги = 1;
	Код = 1;
	
КонецПроцедуры

Процедура ВидТовараПриИзменении(Элемент)
	
	Если НЕ (ВидТовара = перечисления.ВидыТоваров.АКБ или ВидТовара = перечисления.ВидыТоваров.Аксессуары) тогда
		Предупреждение("Вид товара можно выбирать только АКБ или Аксессуары!",30);
		ВидТовара = перечисления.ВидыТоваров.Аксессуары;
	КонецЕсли;	
		
КонецПроцедуры

Процедура КодПриИзменении(Элемент)
	Жирный = новый Шрифт(Элемент.Шрифт,,,Истина);
	Обычный= новый Шрифт(Элемент.Шрифт,,,ЛОЖЬ);
	Элемент.Шрифт = ?(Элемент.Значение>0, Жирный, Обычный);
КонецПроцедуры

Процедура КодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если Элемент.Значение<0 тогда
		Элемент.Значение=0;
	КонецЕсли;	
	КодПриИзменении(Элемент);
КонецПроцедуры



