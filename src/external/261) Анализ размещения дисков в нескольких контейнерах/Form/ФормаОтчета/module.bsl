
Перем ПараметрДанныхНачалоПериода, ПараметрДанныхКонецПериода;

Процедура КнопкаВыбораПериодаНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНачала, ?(ДатаОкончания='0001-01-01', ДатаОкончания, КонецДня(ДатаОкончания)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНачала = НастройкаПериода.ПолучитьДатуНачала();
		ДатаОкончания = НастройкаПериода.ПолучитьДатуОкончания();
		ПараметрДанныхНачалоПериода.Значение = ДатаНачала;	
		ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаОкончания);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДатаНачалаПриИзменении(Элемент)
	
	ПараметрДанныхНачалоПериода.Значение = ДатаНачала;	
	
КонецПроцедуры

Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаОкончания);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);
	ДатаОкончания = ТекущаяДата();
	ЧислоПовторенийНоменклатурыВКонтейнерах = 3;
	УстановитьНастройки();
	КлючУникальности = 1;

КонецПроцедуры

Процедура УстановитьНастройки()
	
	ПараметрДанныхНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0];
	ПараметрДанныхНачалоПериода.Значение = ДатаНачала;
	ПараметрДанныхНачалоПериода.Использование = Истина;
	
	ПараметрДанныхКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1];
	ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаОкончания);
	ПараметрДанныхКонецПериода.Использование = Истина;
	
	Настройки = КомпоновщикНастроек.Настройки;
		
КонецПроцедуры

Процедура ЧислоПовторенийНоменклатурыВКонтейнерахПриИзменении(Элемент)
	
	КомпоновщикНастроек.Настройки.Структура[0].Отбор.Элементы[0].ПравоеЗначение = ЧислоПовторенийНоменклатурыВКонтейнерах;	
	
КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДатаОкончания));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПоставщикамОбороты.Номенклатура.Код КАК ШтрафнаяНоменклатураКод,
	               |	ЗаказыПоставщикамОбороты.Номенклатура КАК ШтрафнаяНоменклатура,
	               |	ЗаказыПоставщикамОбороты.ЗаказПоставщику КАК ШтрафнойЗаказПоставщику,
	               |	ЗаказыПоставщикамОбороты.ЗаказПоставщику.НомерКонтейнера КАК ШтрафнойНомерКонтейнера,
	               |	ЗаказыПоставщикамОбороты.ЗаказПоставщику.Контрагент КАК Поставщик
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			,
	               |			Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	               |				И Номенклатура.НоменклатурнаяГруппа.Код = ""00026""
	               |				И НЕ ЗаказПоставщику.НомерКонтейнера = """"
	               |				И НЕ Подразделение.ВЭД) КАК ЗаказыПоставщикамОбороты
	               |ГДЕ
	               |	ЗаказыПоставщикамОбороты.КоличествоПриход > 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЗаказыПоставщикамОбороты.Номенклатура,
	               |	ЗаказыПоставщикамОбороты.ЗаказПоставщику.Дата
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	ТЗРезультат = Запрос.Выполнить().Выгрузить();
	ТабНоменклатуры = ТЗРезультат.Скопировать();
	ТабНоменклатуры.Свернуть("ШтрафнаяНоменклатура");
	Для каждого СтрТЗ ИЗ ТабНоменклатуры Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("ШтрафнаяНоменклатура", СтрТЗ.ШтрафнаяНоменклатура);
		Строки = ТЗРезультат.НайтиСтроки(Отбор);
		Если Строки.Количество() > 0 Тогда
			i = 0;
			Для каждого СтрокаМассива ИЗ Строки Цикл
				i = i + 1;
				Если i < ЧислоПовторенийНоменклатурыВКонтейнерах Тогда
					ТЗРезультат.Удалить(СтрокаМассива);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
		
	Настройки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	ПараметрДанныхНачалоПериода = Настройки.ПараметрыДанных.Элементы[0];
	ПараметрДанныхНачалоПериода.Значение = ДатаНачала;
	ПараметрДанныхНачалоПериода.Использование = Истина;
	
	ПараметрДанныхНачалоПериода = Настройки.ПараметрыДанных.Элементы[1];
	ПараметрДанныхНачалоПериода.Значение = КонецДня(ДатаОкончания);
	ПараметрДанныхНачалоПериода.Использование = Истина;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ВнешнийНаборДанных = Новый Структура("ТаблицаШтрафныхЗаказовПоставщику", ТЗРезультат);
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки);	
	
	ЭлементыФормы.Результат.Очистить();
	ДокументРезультат = ЭлементыФормы.Результат;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
КонецПроцедуры
