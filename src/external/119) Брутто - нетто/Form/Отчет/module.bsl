Перем ОбщийИтогНетто;
Перем ОбщийИтогБрутто;
Перем ОбщийИтогКоличество;

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ОбщийИтогНетто = 0;
	ОбщийИтогБрутто = 0;
	ОбщийИтогКоличество = 0;

	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	ТабДок.Очистить();
	
	СписокОтчетов = Новый СписокЗначений;
	
	СписокОтчетов.Добавить("Документ.ПеремещениеТоваров", "Перемещения за период");
	СписокОтчетов.Добавить("Документ.ПоступлениеТоваровУслуг", "Поступление за период");
	СписокОтчетов.Добавить("Документ.РеализацияТоваровУслуг", "Реализация за период");
	СписокОтчетов.Добавить("Документ.Перекатка", "Перекатка за период");
	СписокОтчетов.Добавить("Документ.СписаниеТоваров", "Списания за период");
	СписокОтчетов.Добавить("Документ.ОприходованиеТоваров", "Оприходования за период");
	СписокОтчетов.Добавить("Документ.ВозвратТоваровОтПокупателя", "Возвраты от покупателей за период");
	СписокОтчетов.Добавить("Документ.ВозвратТоваровПоставщику", "Возвраты поставщикам за период");
    СписокОтчетов.Добавить("Документ.ВнутреннееПеремещениеТоваров", "Внутренние перемещения за период");
	
	
	Для каждого СтрокаСписка Из СписокОтчетов Цикл
	
		Отчет(ТабДок, КонецДня(ДатаКон), ДатаНач, Свойство, СтрокаСписка.Представление, СтрокаСписка.Значение);
	
	КонецЦикла; 	
	
	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	
	ОбластьИтоги.Параметры.ОбщийИтогНетто = ОбщийИтогНетто;
	ОбластьИтоги.Параметры.ОбщийИтогБрутто = ОбщийИтогБрутто;
	ОбластьИтоги.Параметры.ОбщийИтогКоличество = ОбщийИтогКоличество;
	
	ТабДок.Вывести(ОбластьИтоги);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок, ДатаКон, ДатаНач, Свойство, Заголовок = "Перемещения за период", ТаблицаТоваров = "Документ.ПеремещениеТоваров.Товары") Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение КАК Свойство,
	|	Товары.Ссылка КАК Документ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	СУММА(Товары.Вес) КАК РасчетныйВес,
	|	СУММА(НормыЗагрузки.Вес * Товары.Количество * 1 / НормыЗагрузки.КоэффициентКоличества) КАК ЧистыйВес,
	|	Товары.Количество КАК Количество,
	|	НормыЗагрузки.Вес * 1 / НормыЗагрузки.КоэффициентКоличества КАК ВесЕдиницы,
	|	ВЫБОР
	|		КОГДА Товары.Номенклатура.Импорт
	|			ТОГДА НормыЗагрузки.КоэффициентИмпорта
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК УвеличивающийКоэфПоИмпорту,
	|	НормыЗагрузки.КоэффициентКоличества
	|ИЗ
	| " + ТаблицаТоваров + ".Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыЗагрузки КАК НормыЗагрузки
	|		ПО Товары.Номенклатура.Типоразмер = НормыЗагрузки.Типоразмер
	|			И Товары.Номенклатура.ВидТовара = НормыЗагрузки.ВидПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО Товары.Номенклатура.Ссылка = ЗначенияСвойствОбъектов.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			(ВЫБРАТЬ
	|				Ссылка,
	|				СУММА(ЕСТЬNULL(Вес, 0)) КАК Вес
	|			 ИЗ " + ТаблицаТоваров + ".ДанныеПоПогрузке КАК ДанныеПоПогрузке
	|			 СГРУППИРОВАТЬ ПО
	|				Ссылка) КАК ДанныеОтгрузки
	|		ПО ДанныеОтгрузки.Ссылка = Товары.Ссылка
	|ГДЕ
	|	Товары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ЗначенияСвойствОбъектов.Свойство = &Свойство
	|   И ДанныеОтгрузки.Вес <> 0
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Ссылка,
	|	НормыЗагрузки.КоэффициентИмпорта,
	|	НормыЗагрузки.КоэффициентКоличества,
	|	ВЫБОР
	|		КОГДА Товары.Номенклатура.Импорт
	|			ТОГДА НормыЗагрузки.КоэффициентИмпорта
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	НормыЗагрузки.Вес,
	|	Товары.Количество,
	|	ЗначенияСвойствОбъектов.Значение
	|ИТОГИ
	|	СУММА(ЕСТЬNULL(РасчетныйВес,0)) КАК РасчетныйВес,
	|	СУММА(ЕСТЬNULL(ЧистыйВес,0)) КАК ЧистыйВес,
	|	СУММА(ЕСТЬNULL(Количество,0)) КАК Количество
	|ПО
	|	ОБЩИЕ, 
	|	Свойство КАК Свойство,
	|	Документ КАК Документ,
	|	Номенклатура
	|	";

	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("Свойство", Свойство);

	Результат = Запрос.Выполнить();
	

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьСвойство = Макет.ПолучитьОбласть("Свойство");
	ОбластьДокумент = Макет.ПолучитьОбласть("Документ");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	//ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.Заголовок = Заголовок;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ОбщиеИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбщиеИтоги.Следующий();
	ОбластьПодвалТаблицы.Параметры.Заполнить(ОбщиеИтоги);
	
	ОбщийИтогНетто = ОбщийИтогНетто + ?(ОбщиеИтоги.ЧистыйВес = Неопределено, 0, ОбщиеИтоги.ЧистыйВес);
	ОбщийИтогБрутто = ОбщийИтогБрутто + ?(ОбщиеИтоги.ЧистыйВес = Неопределено, 0, ОбщиеИтоги.РасчетныйВес);
	ОбщийИтогКоличество = ОбщийИтогКоличество + ?(ОбщиеИтоги.ЧистыйВес = Неопределено, 0, ОбщиеИтоги.Количество);
	
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаСвойство = ОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаСвойство.Следующий() Цикл
		ОбластьСвойство.Параметры.Заполнить(ВыборкаСвойство);
		ТабДок.Вывести(ОбластьСвойство, ВыборкаСвойство.Уровень(),, Ложь);

		ВыборкаДокумент = ВыборкаСвойство.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаДокумент.Следующий() Цикл
			ОбластьДокумент.Параметры.Заполнить(ВыборкаДокумент);
			ТабДок.Вывести(ОбластьДокумент, ВыборкаДокумент.Уровень(),, Ложь);

			ВыборкаНоменклатура = ВыборкаДокумент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаНоменклатура.Следующий() Цикл
				ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
				ТабДок.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень(),, Ложь);

				ВыборкаДетали = ВыборкаНоменклатура.Выбрать();

				Пока ВыборкаДетали.Следующий() Цикл
					ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
					ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень(),, Ложь);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	
	//ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Программа");