Перем ТЗЗаказа;

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Если ЗначениеНеЗаполнено(Подразделение) Тогда
		  Предупреждение("Выберите подразделение");
		  Возврат;
	КонецЕсли;	
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	ТЗЗаказа.Очистить();
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Остатки.Номенклатура,
	|	СУММА(Остатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиГоловное
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				НЕ Склад.ЗапретитьИспользование
	|					И НЕ Склад.Транзитный
	|					И (Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	|						ИЛИ Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски))) КАК ТоварыНаСкладахОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыНаОтветственномХраненииОстатки.Номенклатура,
	|		ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	|				,
	|				НЕ Склад.ЗапретитьИспользование
	|					И НЕ Склад.Транзитный
	|					И (Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	|						ИЛИ Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски))
	|					И Контрагент В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							РегистрСведений.СрокиДоставки.Поставщик
	|						ИЗ
	|							РегистрСведений.СрокиДоставки
	|						ГДЕ
	|							РегистрСведений.СрокиДоставки.ОТХ)) КАК ТоварыНаОтветственномХраненииОстатки) КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиГоловное.Номенклатура,
	|	ВТ_ОстаткиГоловное.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток
	|ПОМЕСТИТЬ ВТ_СвободныеОстаткиГоловное
	|ИЗ
	|	ВТ_ОстаткиГоловное КАК ВТ_ОстаткиГоловное
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	|				,
	|				НЕ ЗаказПокупателя.Транзит
	|					И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателейОстатки
	|		ПО ВТ_ОстаткиГоловное.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	|ГДЕ
	|	ВТ_ОстаткиГоловное.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Номенклатура,
	|	СУММА(Остатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиПодразделение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				НЕ Склад.ЗапретитьИспользование
	|					И Склад.Подразделение = &Подразделение
	|					И Склад.Транзитный
	|					И (Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	|						ИЛИ Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски))) КАК ТоварыНаСкладахОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыНаОтветственномХраненииОстатки.Номенклатура,
	|		ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	|				,
	|				НЕ Склад.ЗапретитьИспользование
	|					И Склад.Подразделение = &Подразделение
	|					И Склад.Транзитный
	|					И (Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	|						ИЛИ Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски))
	|					И Контрагент В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							РегистрСведений.СрокиДоставки.Поставщик
	|						ИЗ
	|							РегистрСведений.СрокиДоставки
	|						ГДЕ
	|							РегистрСведений.СрокиДоставки.ОТХ)) КАК ТоварыНаОтветственномХраненииОстатки) КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиПодразделение.Номенклатура,
	|	ВТ_ОстаткиПодразделение.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток
	|ПОМЕСТИТЬ ВТ_СвободныеОстаткиПодразделениеНекомплект
	|ИЗ
	|	ВТ_ОстаткиПодразделение КАК ВТ_ОстаткиПодразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	|				,
	|				ЗаказПокупателя.Транзит
	|					И ЗаказПокупателя.Проверен
	|					И ЗаказПокупателя.Подразделение = &Подразделение) КАК ЗаказыПокупателейОстатки
	|		ПО ВТ_ОстаткиПодразделение.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	|ГДЕ
	|	ВТ_ОстаткиПодразделение.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 0
	|	И ВТ_ОстаткиПодразделение.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) < 8
	|	И ВТ_ОстаткиПодразделение.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) <> 4
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.Номенклатура,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ДискиВПутиГоловное
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|			,
	|			ЗаказПоставщику.ДоговорКонтрагента.ВалютаВзаиморасчетов = &USD
	|				И НЕ ЗаказПоставщику.Транзит
	|				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПоставщикамОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СвободныеОстаткиПодразделениеНекомплект.Номенклатура.Код КАК Код,
	|	ВТ_СвободныеОстаткиПодразделениеНекомплект.Номенклатура,
	|	ВТ_ОстаткиПодразделение.КоличествоОстаток,
	|	ВТ_СвободныеОстаткиПодразделениеНекомплект.СвободныйОстаток,
	|	ВТ_СвободныеОстаткиГоловное.СвободныйОстаток КАК СвободныйОстатокГоловное,
	|	ВТ_ДискиВПутиГоловное.КоличествоОстаток КАК ДискиВПутиГоловное,
	|	ВЫБОР
	|		КОГДА ВТ_СвободныеОстаткиПодразделениеНекомплект.СвободныйОстаток < 4
	|				И ЕСТЬNULL(ВТ_СвободныеОстаткиГоловное.СвободныйОстаток, 0) + ВТ_СвободныеОстаткиПодразделениеНекомплект.СвободныйОстаток >= 4
	|			ТОГДА 4 - ВТ_СвободныеОстаткиПодразделениеНекомплект.СвободныйОстаток
	|		КОГДА ВТ_СвободныеОстаткиПодразделениеНекомплект.СвободныйОстаток < 8
	|				И ЕСТЬNULL(ВТ_СвободныеОстаткиГоловное.СвободныйОстаток, 0) + ВТ_СвободныеОстаткиПодразделениеНекомплект.СвободныйОстаток >= 8
	|			ТОГДА 8 - ВТ_СвободныеОстаткиПодразделениеНекомплект.СвободныйОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДляПеремещения
	|ИЗ
	|	ВТ_СвободныеОстаткиПодразделениеНекомплект КАК ВТ_СвободныеОстаткиПодразделениеНекомплект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СвободныеОстаткиГоловное КАК ВТ_СвободныеОстаткиГоловное
	|		ПО ВТ_СвободныеОстаткиПодразделениеНекомплект.Номенклатура = ВТ_СвободныеОстаткиГоловное.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОстаткиПодразделение КАК ВТ_ОстаткиПодразделение
	|		ПО (ВТ_ОстаткиПодразделение.Номенклатура = ВТ_СвободныеОстаткиГоловное.Номенклатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДискиВПутиГоловное КАК ВТ_ДискиВПутиГоловное
	|		ПО ВТ_СвободныеОстаткиПодразделениеНекомплект.Номенклатура = ВТ_ДискиВПутиГоловное.Номенклатура
	|       ГДЕ  (&ВидТовара=Значение(Перечисление.ВидыТоваров.ПустаяСсылка) ИЛИ ВТ_СвободныеОстаткиПодразделениеНекомплект.Номенклатура.ВидТовара=&ВидТовара) 
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_СвободныеОстаткиПодразделениеНекомплект.Номенклатура.ВидТовара,
	|	ВТ_СвободныеОстаткиПодразделениеНекомплект.Номенклатура.Производитель.Наименование,
	|	ВТ_СвободныеОстаткиПодразделениеНекомплект.Номенклатура.Наименование";

	Запрос.УстановитьПараметр("Подразделение",Подразделение);
	Запрос.УстановитьПараметр("USD",Справочники.Валюты.НайтиПоНаименованию("USD"));
	Запрос.УстановитьПараметр("ВидТовара",?(ВидТовара="Все", Перечисления.ВидыТоваров.ПустаяСсылка() ,ВидТовара));
	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		Если   ВыборкаДетальныеЗаписи.КоличествоДляПеремещения>0 ТОГДА
			      стрЗаказа=ТЗЗаказа.Добавить();
				  стрЗаказа.Номенклатура =  ВыборкаДетальныеЗаписи.Номенклатура;
				  стрЗаказа.Количество =  ВыборкаДетальныеЗаписи.КоличествоДляПеремещения;
		 КонецЕсли;		
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
     
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если( НЕ ЗначениеНеЗаполнено(глТекущийПользователь.ОсновноеПодразделение) И глТекущийПользователь.ОсновноеПодразделение.ОбособленноеПодразделение) Тогда
		ЭлементыФормы.Подразделение=глТекущийПользователь.ОсновноеПодразделение;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст=  " ВЫБРАТЬ Ссылка ИЗ Справочник.Подразделения ГДЕ ОбособленноеПодразделение";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭлементыФормы.Подразделение.СписокВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;	
	
	ЭлементыФормы.ВидТовара.СписокВыбора.Добавить("Все");
	ЭлементыФормы.ВидТовара.СписокВыбора.Добавить(Перечисления.ВидыТоваров.Шины);
	ЭлементыФормы.ВидТовара.СписокВыбора.Добавить(Перечисления.ВидыТоваров.Диски);
	
	ВидТовара="Все";
КонецПроцедуры

Процедура ДействияФормыСоздатьЗаказНаПеремещение(Кнопка)
// Иначе создаем заказ на перемещение для Филиала
    ЗаказНаПеремещение=Документы.ЗаказПокупателя.СоздатьДокумент();
	ЗаказНаПеремещение.Дата = ТекущаяДата();
	ЗаказНаПеремещение.Организация = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяОрганизация");
	ЗаказНаПеремещение.ВводитьТолькоПеремещение=Истина;
		
	
		
	ЗаказНаПеремещение.Контрагент = Подразделение.Контрагент;
	ЗаказНаПеремещение.ДоговорКонтрагента= Подразделение.Контрагент.ОсновнойДоговорКонтрагента;
	ЗаказНаПеремещение.Склад = справочники.Склады.НайтиПоНаименованию("1");	
	ЗаказНаПеремещение.ДатаОтгрузки = КонецДня(ТекущаяДата()) + 1;
	
	ЗаказНаПеремещение.ВалютаДокумента  = Константы.ВалютаУправленческогоУчета.Получить();
	ЗаказНаПеремещение.СуммаДокумента   = 0;
	ЗаказНаПеремещение.СуммаВключаетНДС = Истина;
	ЗаказНаПеремещение.УчитыватьНДС = Истина;
	
	ЗаказНаПеремещение.Транзит  = Ложь;
	ЗаказНаПеремещение.Подразделение    = Справочники.Подразделения.НайтиПоКоду("00005"); //Ярославль
	ЗаказНаПеремещение.Грузоотправитель = Справочники.Контрагенты.ПустаяСсылка(); // пустой!
	ЗаказНаПеремещение.ВводитьТолькоПеремещение = Истина;
	ЗаказНаПеремещение.Проверен = Истина; //сразу делим!
	ЗаказНаПеремещение.Номер=сокрЛП(ЗаказНаПеремещение.Номер);
	
	ЗаказНаПеремещение.Ответственный = глТекущийПользователь;//кто создаёт
	ЗаказНаПеремещение.КратностьВзаиморасчетов = 1;
	ЗаказНаПеремещение.КурсВзаиморасчетов = 1;
	ЗаказНаПеремещение.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005")	;
	ЗаказНаПеремещение.Комментарий = "доукомплектация";
	ЗаказНаПеремещение.УчитыватьНДС=Истина;
	ЗаказНаПеремещение.СуммаВключаетНДС=Истина;
	
	
	ЗаказНаПеремещение.Товары.Очистить();
	Для Каждого строкаТовары Из ТЗЗаказа Цикл
		строкаТоварыПеремещение = ЗаказНаПеремещение.Товары.Добавить();
		строкаТоварыПеремещение.Номенклатура=строкаТовары.Номенклатура;
		строкаТоварыПеремещение.Количество=строкаТовары.Количество;
		строкаТоварыПеремещение.СтавкаНДС=Перечисления.СтавкиНДС.НДС18;
		
           строкаТоварыПеремещение.Коэффициент=1;
				  строкаТоварыПеремещение.Вес =строкаТовары.Номенклатура.ЕдиницаХраненияОстатков.Вес;
				  ЗаполнитьЕдиницуЦенуПродажиТабЧасти(строкаТоварыПеремещение, ЗаказНаПеремещение, ЗаказНаПеремещение.ВалютаДокумента); 
	ЗаполнитьСтавкуНДСТабЧасти(строкаТоварыПеремещение, ЗаказНаПеремещение); 
   РассчитатьСуммуТабЧасти(строкаТоварыПеремещение, ЗаказНаПеремещение);
		РассчитатьСуммуНДСТабЧасти(строкаТоварыПеремещение, ЗаказНаПеремещение);
 	
	КонецЦикла;	
	
	ЗаказНаПеремещение.Заказы.Очистить();	
	Форма=ЗаказНаПеремещение.ПолучитьФорму();
	Форма.Открыть();
	
КонецПроцедуры

       ТЗЗаказа = Новый ТаблицаЗначений;
	   ТЗЗаказа.Колонки.Добавить("Номенклатура");
	   ТЗЗаказа.Колонки.Добавить("Количество");
	   
