
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	СписокГрупп13 = Новый СписокЗначений;
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00042"));  //01. Легковые летние КАМА
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00043"));  //02. Легковые зимние КАМА
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00050"));  //03. Легкогрузовые КАМА
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00014"));  //04. Грузовые шины КАМА
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00035"));  //05. С/х шины КАМА
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00019"));  //06. Легковые летние КАМА EURO
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00018"));  //07. Легковые зимние КАМА EURO
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Н0005"));  //08. Легкогрузовые летние Кама EURO
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00055"));  //09. Легкогрузовые зимние Кама EURO
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00053"));  //10. Легковые летние Viatti
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00054"));  //11. Легковые зимние Viatti
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Н0003"));  //12. Легкогрузовая летняя Viatti
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Н0004"));  //13. Легкогрузовая зимняя Viatti
	СписокГрупп13.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00038"));  //14. ЦМК шины КАМА
	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокНоменклатурныхГрупп")).Значение = СписокГрупп13;
	
	//СписокГрупп14 = Новый СписокЗначений;	
	//СписокГрупп14.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00038"));  //14. ЦМК шины КАМА
	//
	//КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокНоменклатурныхГрупп14")).Значение = СписокГрупп14;
	
	//КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Свойство")).Значение = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00119");
	
	КомпоновщикНастроек.Настройки.Структура[0].Колонки[0].Структура[0].Отбор.Элементы[1].ПравоеЗначение = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00038"); 
		
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//			   |	Номенклатура.Типоразмер
	//			   |ИЗ
	//			   |	Справочник.Номенклатура КАК Номенклатура
	//			   |ГДЕ
	//			   |	Номенклатура.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)";
	//Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокГрупп13);
	//ТЗТипоразмеров = Запрос.Выполнить().Выгрузить();
	//
	//СписокТипоразмеров = Новый СписокЗначений;
	//
	//Для Каждого СтрокаТипоразмера Из ТЗТипоразмеров Цикл
	//	СписокТипоразмеров.Добавить(СтрокаТипоразмера.Типоразмер);	
	//КонецЦикла;
	
	//КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокТипоразмеров")).Значение = СписокТипоразмеров;
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	Если НП.Редактировать() Тогда
		
		ДатаНачала = НП.ПолучитьДатуНачала();
		ДатаКонца = НП.ПолучитьДатуОкончания();
		
		ПараметрДатаНачала = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
		ПараметрДатаКонца = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
		ПараметрДатаНачала.Значение = НачалоДня(ДатаНачала);
		ПараметрДатаКонца.Значение = КонецДня(ДатаКонца);
		
	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ДатаНачалаПриИзменении(Элемент)
	
	НП.УстановитьПериод(НачалоДня(ДатаНачала), КонецДня(ДатаКонца));
	
	ПараметрДатаНачала = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	ПараметрДатаКонца = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	ПараметрДатаНачала.Значение = НачалоДня(ДатаНачала);
	ПараметрДатаКонца.Значение = КонецДня(ДатаКонца);
	
КонецПроцедуры

Процедура ДатаКонцаПриИзменении(Элемент)
	
	НП.УстановитьПериод(НачалоДня(ДатаНачала), КонецДня(ДатаКонца));
	
	ПараметрДатаНачала = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	ПараметрДатаКонца = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	ПараметрДатаНачала.Значение = НачалоДня(ДатаНачала);
	ПараметрДатаКонца.Значение = КонецДня(ДатаКонца);
	
КонецПроцедуры


Процедура СписокОтбораПриИзменении(Элемент)
	НастройкаОтбора(); 	
КонецПроцедуры

Процедура ИсключаяПриИзменении(Элемент)
	НастройкаОтбора();
КонецПроцедуры

Процедура НастройкаОтбора()
	
	Если СписокОтбораРегионов.Количество() > 0 Тогда
		КомпоновщикНастроек.Настройки.Структура[0].Строки[0].Отбор.Элементы[0].Использование = Истина;
		КомпоновщикНастроек.Настройки.Структура[0].Строки[0].Отбор.Элементы[0].ПравоеЗначение = СписокОтбораРегионов;
		Если Исключая Тогда
			КомпоновщикНастроек.Настройки.Структура[0].Строки[0].Отбор.Элементы[0].ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;	
		Иначе
			КомпоновщикНастроек.Настройки.Структура[0].Строки[0].Отбор.Элементы[0].ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		КонецЕсли;
	Иначе
		КомпоновщикНастроек.Настройки.Структура[0].Строки[0].Отбор.Элементы[0].Использование = Ложь;
		КомпоновщикНастроек.Настройки.Структура[0].Строки[0].Отбор.Элементы[0].ПравоеЗначение = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	;
КонецПроцедуры



