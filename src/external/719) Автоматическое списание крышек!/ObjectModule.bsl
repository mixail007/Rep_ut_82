Процедура ВыполнитьСписаниеКрышек() экспорт  
	
	склад = Справочники.Склады.НайтиПоКоду("00393");  // с ошиповки	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателяТовары.Номенклатура,
		|	СУММА(ЗаказПокупателяТовары.Количество) КАК Количество,
		|	ЗаказПокупателяТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент,
		|	ЗаказПокупателяТовары.Ссылка КАК ЗаказПокупателя
		|ПОМЕСТИТЬ НоменклатураВЗаказах
		|ИЗ
		|	Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК ЗаданиеНаОтгрузкуЗаказыПокупателей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|		ПО ЗаданиеНаОтгрузкуЗаказыПокупателей.ЗаказПокупателя = ЗаказПокупателяТовары.Ссылка
		|ГДЕ
		|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Проведен = ИСТИНА
		|	И ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Выполнено = ИСТИНА
		|	И ЗаказПокупателяТовары.Ссылка.Проведен = ИСТИНА
		|	И ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Номер ПОДОБНО ""ТК%""
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяТовары.Номенклатура,
		|	ЗаказПокупателяТовары.Ссылка,
		|	ЗаказПокупателяТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КомплектующиеНоменклатуры.Комплектующая,
		|	СУММА(НоменклатураВЗаказах.Количество * КомплектующиеНоменклатуры.Количество) КАК Количество,
		|	НоменклатураВЗаказах.ЗаказПокупателя
		|ПОМЕСТИТЬ втКомплектующие
		|ИЗ
		|	НоменклатураВЗаказах КАК НоменклатураВЗаказах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
		|		ПО (КомплектующиеНоменклатуры.Номенклатура = НоменклатураВЗаказах.Номенклатура)
		|ГДЕ
		|	КомплектующиеНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|	И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Крышки)
		|	И КомплектующиеНоменклатуры.Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
		|
		|СГРУППИРОВАТЬ ПО
		|	КомплектующиеНоменклатуры.Комплектующая,
		|	НоменклатураВЗаказах.ЗаказПокупателя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втКомплектующие.Комплектующая КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток < втКомплектующие.Количество
		|			ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
		|		ИНАЧЕ втКомплектующие.Количество
		|	КОНЕЦ КАК Количество,
		|	втКомплектующие.ЗаказПокупателя КАК ЗаказПокупателя,
		|	втКомплектующие.Комплектующая.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
		|	втКомплектующие.Комплектующая.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент
		|ИЗ
		|	втКомплектующие КАК втКомплектующие
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				Склад В (&Склады)
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							втКомплектующие.Комплектующая
		|						ИЗ
		|							втКомплектующие КАК втКомплектующие)) КАК ТоварыНаСкладахОстатки
		|		ПО втКомплектующие.Комплектующая = ТоварыНаСкладахОстатки.Номенклатура
		|ГДЕ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток > 0";

	Запрос.УстановитьПараметр("ДатаКон", ДатаПо);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026")); // литые
	Запрос.УстановитьПараметр("Крышки", Справочники.Номенклатура.НайтиПоКоду("0080004")); //крышки
	Запрос.УстановитьПараметр("Склады", склад); //Ошиповка (комплектующие материалы)

	Результат = Запрос.Выполнить();
	
	Если не Результат.Пустой() тогда
		
		ТЗ = Результат.Выгрузить();
		Заказы = ТЗ.Скопировать(,"ЗаказПокупателя");
		Заказы.Свернуть("ЗаказПокупателя");
		//ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		для каждого заказ из Заказы цикл
			
			докСписание = Документы.РасходныйОрдерНаТовары.СоздатьДокумент();
			
			докСписание.ВидОперации = Перечисления.ВидыОперацийРасходныйОрдер.РасходКрышек;
			докСписание.Ответственный = Справочники.Пользователи.НайтиПоКоду("Робот (центр - номенклатура)");
			//докСписание.ОтражатьВУправленческомУчете = Истина;		
			докСписание.Организация = Справочники.Организации.НайтиПоКоду("00001");
			докСписание.Склад = склад;
			докСписание.Комментарий = "#создан автоматически процедурой списания крышек в "+ТекущаяДата();  // с ошиповки	
			докСписание.ДокументПередачи = заказ.ЗаказПокупателя;
			докСписание.Дата = ТекущаяДата();
			докСписание.УстановитьНовыйНомер();
			
			Отбор = Новый Структура();
			Отбор.Вставить("ЗаказПокупателя",заказ.ЗаказПокупателя);
			Строки = ТЗ.НайтиСтроки(Отбор);
			
			
			для каждого стр из Строки Цикл
				
				НовСтр  = докСписание.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,стр);
				НовСтр.Качество = Справочники.Качество.Новый;
				//			НовСтр.Склад = склад;
				
			КонецЦикла;
			
			
			попытка 
				докСписание.Записать(РежимЗаписиДокумента.Проведение);			
			Исключение
				докСписание.Записать(РежимЗаписиДокумента.Запись);
				#Если Клиент Тогда
					Сообщить("Не удалось провести документ "+ докСписание );
				#КонецЕсли
			КонецПопытки;   		
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

ДатаНач = НачалоДня(ТекущаяДата()- 60*60*24);     //начало пред дня
ДатаПо = КонецДня(ТекущаяДата()- 60*60*24);      //конец пред дня
