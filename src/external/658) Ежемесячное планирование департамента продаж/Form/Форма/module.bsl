Перем ЭтоМенеджер,	ЭтоНО, ЭтоСерков, СпрПДЗ;
	
Перем к,СписокИсключаемыхКонтрагентов;
Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если НачалоПериода <> Дата(1,1,1) Тогда	
		Если ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.ПланированиеНО2 тогда	
			ЗаписатьПланыНО(ЭтоМенеджер);
		ИначеЕсли ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.ПланированиеСерков тогда	
			ЗаписатьПланыСерков(ложь);	
		ИначеЕсли ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.ПланПоНаправлениямВеса тогда
			ЗаписатьВеса();
		ИначеЕсли ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.ПланированиеМенеджера тогда	
			ЗаписатьПланыМенеджера();
		КонецЕсли;
	иначе
		Сообщить("Укажите период планирования!");
	конецЕсли;	
 КонецПроцедуры
 
 Процедура ЗаписатьВеса(ДатаУтверждения=неопределено)
	 НачатьТранзакцию();
	 //Сначала удаляем из РС те показатели, которых нет в дереве
	 Массив = новый Массив;
	 Массив.Очистить();
	 Массив.Добавить(Тип("СправочникСсылка.ТоварныеГруппыДляПланирования"));
	 Массив.Добавить(Тип("СправочникСсылка.ПоказателиЭффективности"));
	 ОписаниеТиповТоварнаяГруппа	= Новый ОписаниеТипов(Массив);
	 
	 Массив.Очистить();
	 Массив.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	 Массив.Добавить(Тип("СправочникСсылка.ПараметрыПоказателейЭффективности"));
	 ОписаниеТиповНоменклатурнаяГруппаПоказатели	= Новый ОписаниеТипов(Массив);
	 
	 тзАктуальныеЗаписи = новый таблицаЗначений;
	 тзАктуальныеЗаписи.Колонки.Добавить("ТоварнаяГруппа",ОписаниеТиповТоварнаяГруппа);
	 тзАктуальныеЗаписи.Колонки.Добавить("НоменклатурнаяГруппаПоказатели",ОписаниеТиповНоменклатурнаяГруппаПоказатели);
	 
	 ПолучитьАктуальныеЗаписи(тзАктуальныеЗаписи,ЭлементыФормы.ДеревоПланированияДопВеса.Значение);
	 //тзАктуальныеЗаписи.ВыбратьСтроку();
	 УдалитьНеактуальныеЗаписи(тзАктуальныеЗаписи,НачалоПериода);
	 
	 
	 ЗаписатьВРегистрСKPIВеса(ЭлементыФормы.ДеревоПланированияДопВеса.Значение, НачалоПериода,ДатаУтверждения);
	 ЗафиксироватьТранзакцию();
 КонецПроцедуры
 
 Процедура УдалитьНеактуальныеЗаписи(тзАктуальных, МесяцПланирования)
	 Запрос = новый Запрос;
	 Запрос.Текст="ВЫБРАТЬ
	              |	тз.НоменклатурнаяГруппаПоказатели,
	              |	тз.ТоварнаяГруппа
	              |ПОМЕСТИТЬ втАктуальные
	              |ИЗ
	              |	&тз КАК тз
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.Менеджер,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
	              |	МесячныйПланДепортаментаПродаж.Производитель
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.пользователи.ПустаяСсылка)
	              |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И НЕ (МесячныйПланДепортаментаПродаж.ТоварнаяГруппа, МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели) В
	              |				(ВЫБРАТЬ
	              |					втАктуальные.ТоварнаяГруппа,
	              |					втАктуальные.НоменклатурнаяГруппаПоказатели
	              |				ИЗ
	              |					втАктуальные КАК втАктуальные)";
				  Запрос.УстановитьПараметр("тз", тзАктуальных);
				  Запрос.УстановитьПараметр("МесяцПланирования", МесяцПланирования);
				  
				  Рез = Запрос.Выполнить();
				  //тз = Рез.Выгрузить();
				  //тз.ВыбратьСтроку();
				  Выборка = рез.Выбрать();
				  НаборЗаписей = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьНаборЗаписей();
				  Пока Выборка.Следующий() Цикл
					  //ЗаполнитьЗначенияСвойств(НаборЗаписей.Отбор,Выборка);
					  НаборЗаписей.Отбор.МесяцПланирования.Установить(Выборка.МесяцПланирования);
					  НаборЗаписей.Отбор.НаправлениеПродаж.Установить(Выборка.НаправлениеПродаж);
					  НаборЗаписей.Отбор.Менеджер.Установить(Выборка.Менеджер);
					  НаборЗаписей.Отбор.ТоварнаяГруппа.Установить(Выборка.ТоварнаяГруппа);
					  НаборЗаписей.Отбор.НоменклатурнаяГруппаПоказатели.Установить(Выборка.НоменклатурнаяГруппаПоказатели);
					  НаборЗаписей.Отбор.Производитель.Установить(Выборка.Производитель);
					  
					  НаборЗаписей.Записать();   
				  КонецЦикла;
				  
				  
КонецПроцедуры
 
 Процедура ПолучитьАктуальныеЗаписи(тзАктуальныеЗаписи,Строка)
	 Для каждого стр из Строка.Строки цикл
		 //Если ЗначениеЗаполнено(стр.ВесО) или ЗначениеЗаполнено(стр.Отслеживать) тогда
		//	 Если стр.ВесО>0 или стр.Отслеживать тогда
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			нстр = тзАктуальныеЗаписи.Добавить();
			нстр.ТоварнаяГруппа = ?(стр.ТоварнаяГруппа = неопределено, справочники.ТоварныеГруппыДляПланирования.ПустаяСсылка(),стр.ТоварнаяГруппа);
			нстр.НоменклатурнаяГруппаПоказатели = ?(стр.НоменклатурнаяГруппаПоказатели = неопределено,справочники.НоменклатурныеГруппы.ПустаяСсылка(),стр.НоменклатурнаяГруппаПоказатели);
		КонецЕсли;
		 //КонецЕсли;
		 ПолучитьАктуальныеЗаписи(тзАктуальныеЗаписи,Стр)
	 КонецЦикла;
КонецПроцедуры

Процедура ЗаписатьПланыМенеджера()
	//Если НО или РДП уже утвердил, то не записываем
	Запрос = новый запрос;
	 Запрос.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.Менеджер,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.Менеджер = &Менеджер
	              |	И (НЕ МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП = ДАТАВРЕМЯ(1, 1, 1)
	              |			ИЛИ НЕ МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО = ДАТАВРЕМЯ(1, 1, 1))";
	 Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	 Запрос.УстановитьПараметр("Менеджер",МенеджерП);
	 Рез = Запрос.Выполнить().Выбрать();
	 
	 Если Рез.Количество()>0 тогда
		 Предупреждение("Начальник отдела или руководитель департамента продаж уже утвердили планы."+Символы.ПС+"Запись невозможна!");
		 Возврат;
	 КонецЕсли;
	
	НачатьТранзакцию();
	 //
	 
	 //
	 //индивидуальные планы для менеджеров
	 //очиститм старое
	 Запрос = новый запрос;
	 Запрос.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.Менеджер,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.Менеджер = &Менеджер";
	 Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	 Запрос.УстановитьПараметр("Менеджер",МенеджерП);
	 
	 Рез = запрос.Выполнить().Выбрать();
	 
	 пока рез.Следующий() цикл
		 НаборЗаписей = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьНаборЗаписей();
		 НаборЗаписей.Отбор.месяцПланирования.Установить(рез.МесяцПланирования);	 
		 НаборЗаписей.Отбор.НаправлениеПродаж.Установить(рез.НаправлениеПродаж);	 
		 НаборЗаписей.Отбор.Менеджер.Установить(рез.Менеджер);
		 НаборЗаписей.Отбор.ТоварнаяГруппа.Установить(рез.ТоварнаяГруппа);
		 НаборЗаписей.Отбор.НоменклатурнаяГруппаПоказатели.Установить(рез.НоменклатурнаяГруппаПоказатели);
		 НаборЗаписей.Записать();
	 КонецЦикла;
	 
	 СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
	 ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеМенеджера);
	 
	 ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ПланированиеМенеджера; 
	 Если ЭлементыФормы.ПланированиеМенеджера.Значение.Строки.Количество()>0 тогда
		 ЭлементыФормы.ПланированиеМенеджера.Развернуть(ЭлементыФормы.ПланированиеМенеджера.Значение.Строки[0],истина);
	 КонецЕсли;
	 
	 ЗаписатьВРегистрМенеджеров(ПланыПоВсемМенеджерам, НачалоПериода, МенеджерП);
	 ЗафиксироватьТранзакцию();
	 кнЗаполнитьПланМенеджераНажатие(неопределено);
КонецПроцедуры

 Процедура ЗаписатьПланыНО(ЭтоМенеджер, Перезаполнять = истина)
	 НачатьТранзакцию();
	 ////общие планы
	 СписокНаправлений = новый СписокЗначений;
	 ДобавитьВСписокНаправлений(ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Значение,СписокНаправлений);
	 Если ЭтоМенеджер = ложь тогда		
		 ТолькоПоказателиНО = ложь;
		 
		 Запрос = новый Запрос;
		 Запрос.Текст = "ВЫБРАТЬ
		                |	МесячныйПланДепортаментаПродаж.МесяцПланирования
		                |ИЗ
		                |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		                |ГДЕ
		                |	НЕ МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП = ДАТАВРЕМЯ(1, 1, 1)
		                |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования";
						Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);Рез = Запрос.Выполнить().Выбрать();
						Если Рез.Количество()>0 тогда
							Предупреждение("Руководитель департамента продаж уже утвердил показатели,"+символы.ПС+"изменения запишутся только для менеджеров!");
							ТолькоПоказателиНО = истина;
						КонецЕсли;
		 
		 ЗаписатьВРегистрНО(ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Значение,ложь, НачалоПериода,,ТолькоПоказателиНО);
	 КонецЕсли;
	 
	 //индивидуальные планы для менеджеров
	 //очиститм старое
	 Запрос = новый запрос;
	 Запрос.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.Менеджер,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&СписокНаправлений)
	              |	И НЕ МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.пустаяссылка)
	              |	И 99 = 99";
	 Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	 Запрос.УстановитьПараметр("СписокНаправлений",СписокНаправлений);
	 Запрос.УстановитьПараметр("Менеджер",глТекущийПользователь);
	 Если ЭтоМенеджер тогда
		 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.Менеджер = &Менеджер");
	 КонецЕсли;
	 
	 Рез = запрос.Выполнить().Выбрать();
	 
	 пока рез.Следующий() цикл
		 НаборЗаписей = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьНаборЗаписей();
		 НаборЗаписей.Отбор.месяцПланирования.Установить(рез.МесяцПланирования);	 
		 НаборЗаписей.Отбор.НаправлениеПродаж.Установить(рез.НаправлениеПродаж);	 
		 НаборЗаписей.Отбор.Менеджер.Установить(рез.Менеджер);
		 НаборЗаписей.Отбор.ТоварнаяГруппа.Установить(рез.ТоварнаяГруппа);
		 НаборЗаписей.Отбор.НоменклатурнаяГруппаПоказатели.Установить(рез.НоменклатурнаяГруппаПоказатели);
		 НаборЗаписей.Записать();
	 КонецЦикла;
	 
	 СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
	 ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеНОПоМенеджерамНсколькоПодразделений2);
	 
	 ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2; 
	 Если ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Значение.Строки.Количество()>0 тогда
		 ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Развернуть(ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Значение.Строки[0],истина);
	 КонецЕсли;
	 
	 Если ЭтоМенеджер тогда
		 Менеджер = глТекущийПользователь;
	 Иначе
		 Менеджер = Справочники.Пользователи.ПустаяСсылка();
	 КонецЕсли;
	 ЗаписатьВРегистрМенеджеров(ПланыПоВсемМенеджерам, НачалоПериода, Менеджер);
	 ЗафиксироватьТранзакцию();
	 Если Перезаполнять тогда
	 	КоманднаяПанель8Заполнить2(неопределено);
	 КонецЕсли;
	 
 КонецПроцедуры
 
 Процедура ЗаписатьПланыСерков(ЭтоМенеджер)
	 НачатьТранзакцию();
	 ////общие планы
	 СписокНаправлений = новый СписокЗначений;
	 ДобавитьВСписокНаправлений(ЭлементыФормы.ПланированиеСерковПодразделения.Значение,СписокНаправлений);
	 Если ЭтоМенеджер = ложь тогда		
	 	ЗаписатьВРегистрНО(ЭлементыФормы.ПланированиеСерковПодразделения.Значение,ложь, НачалоПериода, ,ложь);
	 КонецЕсли;
	 
	 //индивидуальные планы для менеджеров
	 //очиститм старое
	 Запрос = новый запрос;
	 Запрос.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.Менеджер,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&СписокНаправлений)
	              |	И НЕ МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.пустаяссылка)
	              |	И 99 = 99";
	 Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	 Запрос.УстановитьПараметр("СписокНаправлений",СписокНаправлений);
	 Запрос.УстановитьПараметр("Менеджер",глТекущийПользователь);
	 Если ЭтоМенеджер тогда
		 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.Менеджер = &Менеджер");
	 КонецЕсли;
	 
	 Рез = запрос.Выполнить().Выбрать();
	 
	 пока рез.Следующий() цикл
		 НаборЗаписей = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьНаборЗаписей();
		 НаборЗаписей.Отбор.месяцПланирования.Установить(рез.МесяцПланирования);	 
		 НаборЗаписей.Отбор.НаправлениеПродаж.Установить(рез.НаправлениеПродаж);	 
		 НаборЗаписей.Отбор.Менеджер.Установить(рез.Менеджер);
		 НаборЗаписей.Отбор.ТоварнаяГруппа.Установить(рез.ТоварнаяГруппа);
		 НаборЗаписей.Отбор.НоменклатурнаяГруппаПоказатели.Установить(рез.НоменклатурнаяГруппаПоказатели);
		 НаборЗаписей.Записать();
	 КонецЦикла;
	 
	 СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
	 ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеСерковМенеджеры);
	 
	 ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ПланированиеСерковМенеджеры; 
	 Если ЭлементыФормы.ПланированиеСерковМенеджеры.Значение.Строки.Количество()>0 тогда
		 ЭлементыФормы.ПланированиеСерковМенеджеры.Развернуть(ЭлементыФормы.ПланированиеСерковМенеджеры.Значение.Строки[0],истина);
	 КонецЕсли;
	 
	 Если ЭтоМенеджер тогда
		 Менеджер = глТекущийПользователь;
	 Иначе
		 Менеджер = Справочники.Пользователи.ПустаяСсылка();
	 КонецЕсли;
	 ЗаписатьВРегистрМенеджеров(ПланыПоВсемМенеджерам, НачалоПериода, Менеджер);
	 ЗафиксироватьТранзакцию();
	 КоманднаяПанель10ЗаполнитьСерков(неопределено);
	 
 КонецПроцедуры
 
 процедура ЗаписатьВРегистрМенеджеров(строка, МесяцПланирования, Менеджер)
	 Для каждого стр из Строка.Строки Цикл
		 Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			 Если ЗначениеЗаполнено(Менеджер) и стр.Менеджер <> Менеджер тогда
				 продолжить;
			 КонецЕсли;	 
			 Запись = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
			 ЗаполнитьЗначенияСвойств(Запись,стр);
			 Запись.МесяцПланирования = МесяцПланирования;
			 
			 Если стр.НоменклатурнаяГруппаПоказатели = неопределено тогда
				 Запись.НоменклатурнаяГруппаПоказатели = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			 КонецЕсли;
			 Если стр.НоменклатурнаяГруппаПоказатели = неопределено тогда
				 стр.НоменклатурнаяГруппаПоказатели = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			 КонецЕсли;
			 
			 
			 Запись.Прочитать();
			 
			 Если Запись.МесяцПланирования = Дата(1,1,1) тогда //Записи небыло
				 ЗаполнитьЗначенияСвойств(Запись,стр);
				 Запись.МесяцПланирования = МесяцПланирования;
				 
				 
				 Если стр.НоменклатурнаяГруппаПоказатели = неопределено тогда
					 стр.НоменклатурнаяГруппаПоказатели = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
				 КонецЕсли;
			 КонецЕсли;
			 Запись.Записать();
		 КонецЕсли;
		 ЗаписатьВРегистрМенеджеров(стр, МесяцПланирования, Менеджер);	  	 
	 КонецЦикла;
 КонецПроцедуры
 
 Процедура ДобавитьВСписокНаправлений(Дерево,Список)
	 Для каждого стр из Дерево.Строки цикл
		 Если стр.Строки.Количество()=0 тогда
			 Если  ЗначениеЗаполнено(стр.НаправлениеПродаж) тогда
				 Если Список.НайтиПоЗначению(стр.НаправлениеПродаж)=неопределено тогда
					 Список.Добавить(стр.НаправлениеПродаж);
					// Сообщить(стр.НаправлениеПродаж);
				 КонецЕсли;
			 КонецЕсли;
		 иначе
			 ДобавитьВСписокНаправлений(стр,Список);
		 КонецЕсли;
	 КонецЦикла;
 КонецПроцедуры
 
 Процедура ЗаписатьВРегистрСKPI(Строка, МесяцПланирования)
	 Для каждого стр из Строка.Строки Цикл
			 Если стр.Строки.Количество()=0 тогда
				//1 Москва
				ЗаписатьПоНаправлению("Москва", Справочники.НаправленияПродаж.Москва, МесяцПланирования,стр);
				// 2. Подмосковье
				ЗаписатьПоНаправлению("Подмосковье", Справочники.НаправленияПродаж.Подмосковье, МесяцПланирования,стр);
				// 3. ЦФО
				ЗаписатьПоНаправлению("ЦФО", Справочники.НаправленияПродаж.ЦентрРоссии, МесяцПланирования,стр);
				// 4. Север
				ЗаписатьПоНаправлению("Север", Справочники.НаправленияПродаж.СеверЮг, МесяцПланирования,стр);
				//// 5. Юг
				//ЗаписатьПоНаправлению("Юг", Справочники.НаправленияПродаж.НайтиПоКоду("18"), МесяцПланирования,стр);
				// 6. ИнтернетМагазины
				ЗаписатьПоНаправлению("ИнтернетМагазины", Справочники.НаправленияПродаж.ИнтернетМагазины, МесяцПланирования,стр);
				// 7. Поволжье
				ЗаписатьПоНаправлению("Поволжье", Справочники.НаправленияПродаж.НижнийНовгород, МесяцПланирования,стр);
				// 8. Беларусь
				ЗаписатьПоНаправлению("Беларусь", Справочники.НаправленияПродаж.Беларусь, МесяцПланирования,стр);
				// 9. КлючевыеКлиенты
				ЗаписатьПоНаправлению("КлючевыеКлиенты", Справочники.НаправленияПродаж.НайтиПоКоду("8"), МесяцПланирования,стр);
				// 10. КорпКлиенты
				ЗаписатьПоНаправлению("КорпКлиенты", Справочники.НаправленияПродаж.Конечники, МесяцПланирования,стр);
				// 11. Тендеры
				ЗаписатьПоНаправлению("Тендеры", Справочники.НаправленияПродаж.Тендеры, МесяцПланирования,стр);
				// 12. Филиал РНД
				ЗаписатьПоНаправлению("ФилиалРнД", Справочники.НаправленияПродаж.ФилиалРнД, МесяцПланирования,стр);
				// 13. Филиал Спб
				ЗаписатьПоНаправлению("ФилиалСпб", Справочники.НаправленияПродаж.ФилиалСПб, МесяцПланирования,стр);
				// 14. Филиал Спб
				ЗаписатьПоНаправлению("ФилиалЕкат", Справочники.НаправленияПродаж.ФилиалЕкб, МесяцПланирования,стр);
				// 14. Филиал Спб
				ЗаписатьПоНаправлению("ФилиалТольятти", Справочники.НаправленияПродаж.ФилиалТл, МесяцПланирования,стр);

			 иначе
				ЗаписатьВРегистрСKPI(стр, МесяцПланирования);	  	 
			 Конецесли;	  
	 КонецЦикла;
 КонецПроцедуры
 
 Процедура ЗаписатьВРегистрСKPIВеса(Строка, МесяцПланирования,ДатаУтверждения=неопределено)
	 Для каждого стр из Строка.Строки Цикл
			 //Если стр.Строки.Количество()=0 тогда
				 //0 Общий
				ЗаписатьПоНаправлениюВеса("Общий", Справочники.НаправленияПродаж.ПустаяСсылка(), МесяцПланирования,стр, ДатаУтверждения);
				 //1 Москва
				ЗаписатьПоНаправлениюВеса("Москва", Справочники.НаправленияПродаж.Москва, МесяцПланирования,стр, ДатаУтверждения);
				// 2. Подмосковье
				ЗаписатьПоНаправлениюВеса("Подмосковье", Справочники.НаправленияПродаж.Подмосковье, МесяцПланирования,стр, ДатаУтверждения);
				// 3. ЦФО
				ЗаписатьПоНаправлениюВеса("ЦФО", Справочники.НаправленияПродаж.ЦентрРоссии, МесяцПланирования,стр,ДатаУтверждения);
				// 4. Север
				ЗаписатьПоНаправлениюВеса("Север", Справочники.НаправленияПродаж.СеверЮг, МесяцПланирования,стр, ДатаУтверждения);
				//// 5. Юг
				//ЗаписатьПоНаправлениюВеса("Юг", Справочники.НаправленияПродаж.НайтиПоКоду("18"), МесяцПланирования,стр);
				// 6. ИнтернетМагазины
				ЗаписатьПоНаправлениюВеса("ИнтернетМагазины", Справочники.НаправленияПродаж.ИнтернетМагазины, МесяцПланирования,стр, ДатаУтверждения);
				// 7. Поволжье
				ЗаписатьПоНаправлениюВеса("Поволжье", Справочники.НаправленияПродаж.НижнийНовгород, МесяцПланирования,стр, ДатаУтверждения);
				// 8. Беларусь
				ЗаписатьПоНаправлениюВеса("Беларусь", Справочники.НаправленияПродаж.Беларусь, МесяцПланирования,стр, ДатаУтверждения);
				// 9. КлючевыеКлиенты
				ЗаписатьПоНаправлениюВеса("Ключевые", Справочники.НаправленияПродаж.НайтиПоКоду("8"), МесяцПланирования,стр, ДатаУтверждения);
				// 10. КорпКлиенты
				ЗаписатьПоНаправлениюВеса("КорпКлиенты", Справочники.НаправленияПродаж.Конечники, МесяцПланирования,стр, ДатаУтверждения);
				// 11. Тендеры
				ЗаписатьПоНаправлениюВеса("Тендеры", Справочники.НаправленияПродаж.Тендеры, МесяцПланирования,стр, ДатаУтверждения);
				// 12. Филиал РНД
				ЗаписатьПоНаправлениюВеса("ФилиалРнД", Справочники.НаправленияПродаж.ФилиалРнД, МесяцПланирования,стр, ДатаУтверждения);
				// 13. Филиал Спб
				ЗаписатьПоНаправлениюВеса("ФилиалСпб", Справочники.НаправленияПродаж.ФилиалСПб, МесяцПланирования,стр, ДатаУтверждения);
				// 14. Филиал Спб
				ЗаписатьПоНаправлениюВеса("ФилиалЕкат", Справочники.НаправленияПродаж.ФилиалЕкб, МесяцПланирования,стр, ДатаУтверждения);
				// 14. Филиал Спб
				ЗаписатьПоНаправлениюВеса("ФилиалТольятти", Справочники.НаправленияПродаж.ФилиалТл, МесяцПланирования,стр, ДатаУтверждения);
			 //иначе
			  ЗаписатьВРегистрСKPIВеса(стр, МесяцПланирования, ДатаУтверждения);	  	 
			 //Конецесли;	  
	 КонецЦикла;
 КонецПроцедуры
 
 Процедура ЗаписатьПоНаправлению(Наименование, Направление,МесяцПланирования,стр)
	 Если стр["КоличествоПредварительный"+Наименование] <>0 или
					 стр["СуммаПредварительный"+Наименование] <>0 или
					 стр["КоличествоИтог"+Наименование] <>0 или
					 стр["СуммаИтог"+Наименование] <>0 или
					 стр["Вес"+Наименование] <>0 или
					 стр["KPI"+Наименование] <>0 тогда
					 
					 Запись = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
						Запись.МесяцПланирования = МесяцПланирования;
						Запись.НаправлениеПродаж = Направление;
						ЗаполнитьЗначенияСвойств(Запись,стр);
						Запись.КоличествоИтоговыйПлан = стр["КоличествоИтог"+Наименование];
						Запись.СуммаИтоговыйПлан = стр["СуммаИтог"+Наименование];
						Запись.КоличествоПлан = стр["КоличествоПредварительный"+Наименование];
						Запись.СуммаПлан = стр["СуммаПредварительный"+Наименование]; 
						Запись.Вес = стр["Вес"+Наименование];
						Запись.KPI =  стр["KPI"+Наименование];
						
						Запись.Записать();
				 КонецЕсли;
			 КонецПроцедуры
			 
Процедура ЗаписатьПоНаправлениюВеса(Наименование, Направление,МесяцПланирования,стр, ДатаУтверждения = неопределено)
				 //Если стр.Отслеживать=истина тогда //или ЗначениеЗаполнено(стр["Вес"+Наименование]) или (ЗначениеЗаполнено(стр.ВесКоличествоОбщий) и Направление=Справочники.НаправленияПродаж.ПустаяСсылка()) тогда
				 Если стр.Отслеживать=истина или ЗначениеЗаполнено(стр["Вес"+Наименование]) тогда	 
					 Запись = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
					 ЗаполнитьЗначенияСвойств(Запись,стр);
					 Запись.МесяцПланирования = МесяцПланирования;
					 Запись.НаправлениеПродаж = Направление;
					 
					 Если ЗначениеЗаполнено(ДатаУтверждения) тогда
						 Запись.ДатаУтвержденияВесов =  ДатаУтверждения;
					 КонецЕсли;
					 
					 Если стр.НоменклатурнаяГруппаПоказатели = неопределено тогда
						 Запись.НоменклатурнаяГруппаПоказатели = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
					 КонецЕсли;
					 Если стр.НоменклатурнаяГруппаПоказатели = неопределено тогда
						 стр.НоменклатурнаяГруппаПоказатели = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
					 КонецЕсли;
					 
					 //Если стр.Производитель = неопределено тогда
					 //	стр.Производитель = Справочники.Производители.ПустаяСсылка();
					 //КонецЕсли;
					 
					 Если Наименование="Общий" тогда
						 
						 Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
							 Если стр.ТоварнаяГруппа.СуммовоеПланирование тогда
								 Запись.Вес = стр.весОбщий;
								 Запись.ВесКоличество = 0;
							 Иначе
								 Запись.Вес = 0;
								 Запись.ВесКоличество = стр.весКоличествоОбщий;
							 КонецЕсли;
						 КонецЕсли;
						 
					 Иначе
						 Запись.Прочитать();
						 
						 Если Запись.МесяцПланирования = Дата(1,1,1) тогда //Записи небыло
							 ЗаполнитьЗначенияСвойств(Запись,стр);
							 Запись.МесяцПланирования = МесяцПланирования;
							 Запись.НаправлениеПродаж = Направление;
							 Если ЗначениеЗаполнено(ДатаУтверждения) тогда
								 Запись.ДатаУтвержденияВесов =  ДатаУтверждения;
					         КонецЕсли;
							 //ЗаполнитьЗначенияСвойств(Запись,стр);
							 
							 Если стр.НоменклатурнаяГруппаПоказатели = неопределено тогда
								 стр.НоменклатурнаяГруппаПоказатели = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
							 КонецЕсли;
							 //Если стр.Производитель = неопределено тогда
							 // 	стр.Производитель = Справочники.Производители.ПустаяСсылка();
							 //КонецЕсли;
						 КонецЕсли;
						 Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
							 
							 Если стр.ТоварнаяГруппа.СуммовоеПланирование тогда
								 //Если стр.ВесОбщий<>0 тогда
								 Запись.Вес = стр["Вес"+Наименование];
								 Запись.ВесКоличество = 0;
							 иначе
								 Запись.Вес = 0;
								 Запись.ВесКоличество = стр["Вес"+Наименование];
							 КонецЕсли;
						 КонецЕсли;
						 
						 //Запись.Отслеживать = Ложь;
						 Запись.Отслеживать = стр.Отслеживать;
					 КонецЕсли;
					 Запись.Записать();
				 КонецЕсли;
			 КонецПроцедуры

// процедура ЗаписатьВРегистр(строка,Утвердить, МесяцПланирования, НаправлениеПродаж = неопределено)
//	 Для каждого стр из Строка.Строки Цикл
//		  Если стр.Строки.Количество()=0 тогда
//			 //Если Стр.ТоварнаяГруппа.ЭтоГруппа =Ложь Тогда
//				 Запись = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
//				 Запись.МесяцПланирования = МесяцПланирования;
//				 ЗаполнитьЗначенияСвойств(Запись,стр);
//				 Если НаправлениеПродаж<>неопределено тогда
//					Запись.НаправлениеПродаж = НаправлениеПродаж; 
//				 КонецЕсли;
//				 Если Утвердить= Истина Тогда
//				 	Запись.Утвержден = Истина;
//					Запись.ДатаУтвержденияРДП = ТекущаяДата();
//				 конецЕсли;
//				 Запись.Записать(Истина);
//			 //конецЕсли;
//		 иначе
//		   ЗаписатьВРегистр(стр,утвердить, МесяцПланирования,НаправлениеПродаж);	  	 
//		 Конецесли;	  
//		//ЗаписатьВРегистр(стр,утвердить, МесяцПланирования);	  
//	конецЦикла;	 
//конецПроцедуры

процедура ЗаписатьВРегистрНО(строка,Утвердить, МесяцПланирования, НаправлениеПродаж = неопределено, ТолькоЦифрыНОИМенеджеров = истина)
	Для каждого стр из Строка.Строки Цикл
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			//Если Стр.ТоварнаяГруппа.ЭтоГруппа =Ложь Тогда
			Запись = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
			Запись.МесяцПланирования = МесяцПланирования;
			Если ТолькоЦифрыНОИМенеджеров тогда //планы НО и планы Серкова не трогаем
				ЗаполнитьЗначенияСвойств(Запись,стр);
				Запись.Прочитать();
				
				КоличествоИтоговыйПлан = Запись.КоличествоИтоговыйПлан;
				СуммаИтоговыйПлан      = Запись.СуммаИтоговыйПлан;
				КоличествоПланНО       = Запись.КоличествоПланНО;
				СуммаПланНО            = Запись.СуммаПланНО;
				
				ЗаполнитьЗначенияСвойств(Запись,стр);
				
				Запись.КоличествоИтоговыйПлан  = КоличествоИтоговыйПлан;
				Запись.СуммаИтоговыйПлан       = СуммаИтоговыйПлан;
				Запись.КоличествоПланНО        = КоличествоПланНО;
				Запись.СуммаПланНО             = СуммаПланНО;
				
			иначе //все просто перезапишем
				ЗаполнитьЗначенияСвойств(Запись,стр);
			КонецЕсли;
			
			Если НаправлениеПродаж<>неопределено тогда
				Запись.НаправлениеПродаж = НаправлениеПродаж; 
			КонецЕсли;
			Если Утвердить= Истина Тогда
				Запись.Утвержден = Истина;
				Запись.ДатаУтвержденияНО = ТекущаяДата();
			конецЕсли;
			Запись.Записать(Истина);
		конецЕсли;
		
		ЗаписатьВРегистрНО(стр,утвердить, МесяцПланирования,НаправлениеПродаж, ТолькоЦифрыНОИМенеджеров);	  	 
	конецЦикла;	 
конецПроцедуры	
 
процедура ЗаписатьВРегистрДиски(строка)
	Для каждого стр из Строка.Строки Цикл
		//создадим пустую запись с периодом и направлением продаж, что бы понимать что план утвержден
		
		Если стр.ТоварнаяГруппа <> Null и стр.направлениеПродаж <> Null и стр.номенклатурнаяГруппа <> null Тогда
			//Отбор = Новый Структура();
			//Отбор.Вставить("ПериодПланирования",стр.НоменклатурнаяГруппа);
			//Отбор.Вставить("ТоварнаяГруппа",стр.ТоварнаяГруппа);
			//Отбор.Вставить("направлениеПродаж",Справочники.НаправленияПродаж.Диски);
			//Отбор.Вставить("НоменклатурнаяГруппа",стр.ТоварнаяГруппа.Состав[0].НоменклатурнаяГруппа);
			//Отбор.Вставить("Менеджер",стр.НаправлениеПродаж);
			
			//Проверка = РегистрыСведений.МесячныйПланПродаж.Получить(Отбор);
			Запись = РегистрыСведений.МесячныйПланПродаж.СоздатьМенеджерЗаписи();
			Запись.ПериодПланирования=ДобавитьМесяц(стр.НоменклатурнаяГруппа,12);
			Запись.ТоварнаяГруппа=стр.ТоварнаяГруппа;
			Запись.направлениеПродаж=Справочники.НаправленияПродаж.Диски;
			Запись.НоменклатурнаяГруппа=стр.ТоварнаяГруппа.Состав[0].НоменклатурнаяГруппа;
			Запись.Менеджер=стр.НаправлениеПродаж;
			Запись.количествоплан = стр.Количествоплан;
			Запись.СуммаПлан = стр.Суммаплан;
			Запись.Записать();
		конецесли;	
		ЗаписатьВРегистрДиски(стр);
	конецЦикла;	
	
	
	
конецПроцедуры	

Процедура ПланированиеПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если ОформлениеСтроки.ДанныеСтроки.Утвержден = Истина Тогда
			Для каждого яч из ОформлениеСтроки.ячейки	Цикл
				Яч.ТолькоПросмотр = Истина;
				Яч.Шрифт =  Новый Шрифт(,,Истина,,);

			конецЦикла;
		конецЕсли;	
	ОформлениеСтроки.Ячейки.ФактПрошлогоГода.Видимость = ЛожЬ; 	
	ОформлениеСтроки.Ячейки.ФактПрошлогоМесяца.Видимость = ЛожЬ; 	
	ОформлениеСтроки.Ячейки.ПредварительныйЭтогоГода.Видимость = ЛожЬ;
	ОформлениеСтроки.Ячейки.ИтоговыйПлан.Видимость = ЛожЬ;
	ОформлениеСтроки.Ячейки.ПланНО.Видимость = ЛожЬ;

	конецЦикла;	
КонецПроцедуры

процедура РассчитатьКоличествоПлан(ТекСтрока,ПриростПродаж)
	
	Для каждого стр из  ТекСтрока.Строки Цикл
	стр.ПриростПродажПлан = приростПродаж;
	стр.КоличествоПлан = Окр(стр.количество*(1+приростПродаж/100),0);
    Если стр.СредняяЦенаПлан=0 Тогда
	стр.суммаПлан = Стр.Сумма*(1+приростПродаж/100);
    иначе
	стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
    конецЕсли;  
	если  Стр.Количествоплан =0 Тогда
	стр.СредняяЦенаПлан = 0;	
	иначе	
    стр.СредняяЦенаПлан = Стр.Суммаплан/Стр.Количествоплан;
	конецЕсли;
	Если стр.ПроцентНаценкиПлан<>0 Тогда
	стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
	стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
    конецЕсли;
    РассчитатьКоличествоПлан(стр,ПриростПродаж);
	пересчетИтогов(стр);

	конеццикла;	
	
конецПроцедуры	

Процедура ДеревоПланированияПриростСреднейЦеныПриИзменении(Элемент)
	стр = ЭлементыФормы.ДеревоПланирования.текущиеДанные;
	ПриростСреднейЦены = стр.ПриростСреднейЦены;
	стр.СредняяЦенаПлан = стр.СредняяЦена*(1+ПриростСреднейЦены/100);
	стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
	Если стр.ПроцентНаценкиПлан<>0 Тогда
		стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
		стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
	конецЕсли;
	
	РассчитатьСреднююЦенуПлан(стр,ПриростСреднейЦены);
	
	пересчетИтогов(стр);
КонецПроцедуры

процедура РассчитатьСреднююЦенуПлан(ТекСтрока,ПриростСреднейЦены)
	
	Для каждого стр из  ТекСтрока.Строки Цикл
		стр.ПриростСреднейЦены = ПриростСреднейЦены;	
		стр.СредняяЦенаПлан = стр.СредняяЦена*(1+ПриростСреднейЦены/100);
		стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
		Если стр.ПроцентНаценкиПлан<>0 Тогда
			стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
			стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
		конецЕсли;
		
		РассчитатьСреднююЦенуПлан(стр,ПриростСреднейЦены);
	конеццикла;	
	
конецПроцедуры	

Процедура КоманднаяПанель1ЗаполнитьИзПлана(Кнопка)
	ЗаполнялиДиски = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МесячныйПланДепортаментаПродаж.МесяцПланирования,
		|	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
		|	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
		|	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппа,
		|	МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан,
		|	МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан,
		|	МесячныйПланДепортаментаПродаж.КоличествоПлан,
		|	МесячныйПланДепортаментаПродаж.СуммаПлан,
		|	МесячныйПланДепортаментаПродаж.Утвержден,
		|	МесячныйПланДепортаментаПродаж.КоличествоПланНО,
		|	МесячныйПланДепортаментаПродаж.СуммаПланНО
		|ПОМЕСТИТЬ втПлан
		|ИЗ
		|	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		|ГДЕ
		|	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
		|	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
		|	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ТоварныеГруппыДляпланирования.ПустаяСсылка)
		|	И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		|	И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж КАК НаправлениеПродаж,
		|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
		|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот
		|ПОМЕСТИТЬ втПродажиПрошлогоМесяца
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			&НачПериодаПрошлогоМесяца,
		|			&КонПериодаПрошлогоМесяца,
		|			,
		|			ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В
		|					(ВЫБРАТЬ
		|						втПлан.НаправлениеПродаж
		|					ИЗ
		|						втПлан)
		|				И Номенклатура.НоменклатурнаяГруппа В
		|					(ВЫБРАТЬ
		|						втПлан.НоменклатурнаяГруппа
		|					ИЗ
		|						втПлан)
		|				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
		|				И Номенклатура.Услуга = ЛОЖЬ) КАК ПродажиОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
		|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж КАК НаправлениеПродаж,
		|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
		|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот
		|ПОМЕСТИТЬ втПродажиПрошлогоГода
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			&НачПрошлогоПериода,
		|			&КонПрошлогоПериода,
		|			,
		|			ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В
		|					(ВЫБРАТЬ
		|						втПлан.НаправлениеПродаж
		|					ИЗ
		|						втПлан)
		|				И Номенклатура.НоменклатурнаяГруппа В
		|					(ВЫБРАТЬ
		|						втПлан.НоменклатурнаяГруппа
		|					ИЗ
		|						втПлан)
		|				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
		|				И Номенклатура.Услуга = ЛОЖЬ) КАК ПродажиОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
		|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втПлан.МесяцПланирования,
		|	втПлан.ТоварнаяГруппа КАК ТоварнаяГруппа,
		|	втПлан.НаправлениеПродаж КАК НаправлениеПродаж,
		|	СУММА(втПлан.КоличествоИтоговыйПлан) КАК КоличествоИтоговыйПлан,
		|	СУММА(втПлан.СуммаИтоговыйПлан) КАК СуммаИтоговыйПлан,
		|	СУММА(втПлан.КоличествоПлан) КАК КоличествоПредварительныйПлан,
		|	СУММА(втПлан.СуммаПлан) КАК СуммаПредварительныйПлан,
		|	втПлан.Утвержден КАК Утвержден,
		|	СУММА(ЕСТЬNULL(втПродажиПрошлогоМесяца.КоличествоОборот, 0)) КАК КоличествоПрошлыйМесяц,
		|	СУММА(ЕСТЬNULL(втПродажиПрошлогоМесяца.СтоимостьОборот, 0)) КАК СуммаПрошлыйМесяц,
		|	втПлан.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПоказатели,
		|	СУММА(ЕСТЬNULL(втПродажиПрошлогоГода.КоличествоОборот, 0)) КАК КоличествоПрошлыйГод,
		|	СУММА(ЕСТЬNULL(втПродажиПрошлогоГода.СтоимостьОборот, 0)) КАК СуммаПрошлыйГод,
		|	СУММА(втПлан.КоличествоПланНО) КАК КоличествоПланНО,
		|	СУММА(втПлан.СуммаПланНО) КАК СуммаПланНО
		|ИЗ
		|	втПлан КАК втПлан
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПродажиПрошлогоМесяца КАК втПродажиПрошлогоМесяца
		|		ПО втПлан.НаправлениеПродаж = втПродажиПрошлогоМесяца.НаправлениеПродаж
		|			И втПлан.НоменклатурнаяГруппа = втПродажиПрошлогоМесяца.НоменклатурнаяГруппа
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПродажиПрошлогоГода КАК втПродажиПрошлогоГода
		|		ПО втПлан.НаправлениеПродаж = втПродажиПрошлогоГода.НаправлениеПродаж
		|			И втПлан.НоменклатурнаяГруппа = втПродажиПрошлогоГода.НоменклатурнаяГруппа
		|ГДЕ
		|	втПлан.МесяцПланирования = &МесяцПланирования
		|	И втПлан.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ТоварныеГруппыДляпланирования.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	втПлан.МесяцПланирования,
		|	втПлан.ТоварнаяГруппа,
		|	втПлан.НаправлениеПродаж,
		|	втПлан.Утвержден,
		|	втПлан.НоменклатурнаяГруппа
		|
		|УПОРЯДОЧИТЬ ПО
		|	втПлан.НаправлениеПродаж.Наименование,
		|	ТоварнаяГруппа.Наименование,
		|	НоменклатурнаяГруппаПоказатели
		|ИТОГИ
		|	СУММА(КоличествоИтоговыйПлан),
		|	СУММА(СуммаИтоговыйПлан),
		|	СУММА(КоличествоПредварительныйПлан),
		|	СУММА(СуммаПредварительныйПлан),
		|	СУММА(КоличествоПрошлыйМесяц),
		|	СУММА(СуммаПрошлыйМесяц),
		|	СУММА(КоличествоПрошлыйГод),
		|	СУММА(СуммаПрошлыйГод),
		|	СУММА(КоличествоПланНО),
		|	СУММА(СуммаПланНО)
		|ПО
		|	ОБЩИЕ,
		|	НаправлениеПродаж,
		|	ТоварнаяГруппа ИЕРАРХИЯ,
		|	НоменклатурнаяГруппаПоказатели
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("МесяцПланирования", НачалоПериода);
	Запрос.УстановитьПараметр("НачПериодаПрошлогоМесяца", ДобавитьМесяц(НачалоПериода,-1));
	Запрос.УстановитьПараметр("КонПериодаПрошлогоМесяца", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-1)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачПрошлогоПериода", ДобавитьМесяц(НачалоПериода,-12));
	Запрос.УстановитьПараметр("КонПрошлогоПериода", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-12)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);

	
	Если не РольДоступна("ПолныеПрава") или ЗначениеЗаполнено(НаправлениеПродаж) или 
		(Кнопка.Имя<>"ПосмотретьВсе" и не РольДоступна("ПравоЗавершенияРаботыПользователей") и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Серков"))  Тогда
		СписокНаправлениеПродаж = Новый СписокЗначений;
		Если ЗначениеЗаполнено(НаправлениеПродаж) Тогда
			СписокНаправлениеПродаж.Добавить(НаправлениеПродаж);
		иначе
			ЗапросНП = Новый Запрос;
			ЗапросНП.Текст = 
			"ВЫБРАТЬ
			|	НаправленияПродаж.Ссылка
			|ИЗ
			|	Справочник.НаправленияПродаж КАК НаправленияПродаж
			|ГДЕ
			|	НаправленияПродаж.ОтветственныйЗаПланирование = &ОтветственныйЗаПланирование";
			
			ЗапросНП.УстановитьПараметр("ОтветственныйЗаПланирование", глТекущийПользователь);
			
			РезультатНП = ЗапросНП.Выполнить().Выгрузить();
			
			СписокНаправлениеПродаж = РезультатНП.ВыгрузитьКолонку("Ссылка");
		конецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//по направлению","");
		Запрос.УстановитьПараметр("НаправлениеПродаж",СписокНаправлениеПродаж);
	конецЕсли;	
	
	
	Результат = Запрос.Выполнить();
	
	Элементыформы.ДеревоПланирования.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	

КонецПроцедуры

Процедура ДеревоПланированияПроцентНаценкиПланПриИзменении(Элемент)
	стр = ЭлементыФормы.ДеревоПланирования.текущиеДанные;
	ПроцентНаценкиПлан = стр.ПроцентНаценкиПлан;
	стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
	стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
	
	РассчитатьПроцентНаценкиПлан(стр,ПроцентНаценкиПлан);
    	пересчетИтогов(стр);

КонецПроцедуры

процедура РассчитатьПроцентНаценкиПлан(ТекСтрока,ПроцентНаценкиПлан)
	
	Для каждого стр из  ТекСтрока.Строки Цикл
	стр.ПроцентНаценкиПлан = ПроцентНаценкиПлан;
	стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
	стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
	
	РассчитатьПроцентНаценкиПлан(стр,ПроцентНаценкиПлан);
	конеццикла;	
	
конецПроцедуры	

процедура 	пересчетИтогов(стр);
	РодительскаяСтрока = Стр.Родитель;
	Если РодительскаяСтрока <> Неопределено Тогда
		приростПродажплан =0;
		Количествоплан =0;
		СуммаПлан =0;
		ПриростСреднейЦены=0;
		СредняяЦенаПлан =0;
		ПроцентНаценкиПлан =0;
		СуммаНаценкиПлан =0;
		ПриростНаценки =0;
		КоличествоСтрок =0;
		СебестоимостьПлан =0;
		Себестоимость = 0;
		Для каждого ст из РодительскаяСтрока.Строки  Цикл
			приростПродажплан =приростПродажплан+ст.приростПродажплан;
			Количествоплан =Количествоплан+ст.Количествоплан;
			СуммаПлан =СуммаПлан+ст.СуммаПлан;
			ПриростСреднейЦены=ПриростСреднейЦены+ст.ПриростСреднейЦены;
			СредняяЦенаПлан =СредняяЦенаПлан+ст.СредняяЦенаПлан;
			ПроцентНаценкиПлан =ПроцентНаценкиПлан+ст.ПроцентНаценкиПлан;
			СуммаНаценкиПлан =СуммаНаценкиПлан+ст.СуммаНаценкиПлан;
			ПриростНаценки =ПриростНаценки+ст.ПриростНаценки;
			СебестоимостьПлан = СебестоимостьПлан +ст.СуммаПлан/(100+ст.процентНаценкиПлан)*100;
			себестоимость = себестоимость+ст.себестоимость;
			КоличествоСтрок =КоличествоСтрок+1;
		конецЦикла; 
		если РодительскаяСтрока.Количество=0 Тогда
			РодительскаяСтрока.приростПродажплан =0;
		иначеесли  не ЗначениеЗаполнено(РодительскаяСтрока.ТоварнаяГруппа) и не ЗначениеЗаполнено(РодительскаяСтрока.ТоварнаяГруппа) тогда
			РодительскаяСтрока.приростПродажплан =Окр((СуммаПлан-РодительскаяСтрока.Сумма)/РодительскаяСтрока.Сумма*100,2);
		иначе
			РодительскаяСтрока.приростПродажплан =Окр((КоличествоПлан-РодительскаяСтрока.Количество)/РодительскаяСтрока.Количество*100,2);
		конецЕсли;
		РодительскаяСтрока.Количествоплан =Количествоплан;
		РодительскаяСтрока.СуммаПлан =СуммаПлан;
		РодительскаяСтрока.ПриростСреднейЦены=ПриростСреднейЦены/КоличествоСтрок;
		РодительскаяСтрока.СуммаНаценкиПлан =СуммаНаценкиПлан;
		РодительскаяСтрока.ПриростНаценки =ПриростНаценки;
		
		
		Если количествоПлан=0 Тогда
			РодительскаяСтрока.СредняяЦенаПлан = 0;	
		иначе	
			РодительскаяСтрока.СредняяЦенаПлан =СуммаПлан/КоличествоПлан;
		конецЕсли;
		Если СебестоимостьПлан=0 Тогда
			РодительскаяСтрока.ПроцентНаценкиПлан = 0;	
		иначе	
			РодительскаяСтрока.ПроцентНаценкиПлан =СуммаНаценкиПлан/СебестоимостьПлан*100;
		конецЕсли;
		пересчетИтогов(РодительскаяСтрока);	 
	конецЕсли;	 
конецПроцедуры

//Процедура КоманднаяПанель1СогласоватьСНО(Кнопка)
//	//очиститм старое
//	НачатьТранзакцию();
//	НаборЗаписей = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьНаборЗаписей();
//	НаборЗаписей.Отбор.месяцПланирования.Установить(НачалоПериода);
//	НаборЗаписей.Прочитать();
//	Для каждого Запись из НаборЗаписей цикл
//		Запись.ДатаУтвержденияРДП = ТекущаяДата();
//	КонецЦикла;
//	НаборЗаписей.Записать(истина);
//	ЗафиксироватьТранзакцию();
//	
//	Ответ = Вопрос("Создать задачи ответственным за планирование?",РежимДиалогаВопрос.ДаНет);
//	Если Ответ = КодВозвратаДиалога.Да тогда
//		Запрос = новый Запрос;
//		Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
//					 |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж.ОтветственныйЗаПланирование КАК ОтветственныйЗаПланирование,
//					 |	МесячныйПланДепортаментаПродаж.МесяцПланирования
//					 |ИЗ
//					 |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
//					 |ГДЕ
//					 |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
//					 |	И МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП <> ДАТАВРЕМЯ(1, 1, 1)
//					 |	И МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО = ДАТАВРЕМЯ(1, 1, 1)";
//					 Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
//					 рез = Запрос.Выполнить().Выбрать();
//					 
//					 Пока Рез.Следующий() Цикл
//						 СоздатьЗадачу(Рез.ОтветственныйЗаПланирование,рез.МесяцПланирования,"Записаны планы продаж за ");
//					 КонецЦикла;
//	КонецЕсли;
//КонецПроцедуры

Процедура СоздатьЗадачу(Ответственный, МесяцПланирования, стр)
	Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
	Задача.Дата = ТекущаяДата();
	Задача.Исполнитель = Ответственный;
	Задача.Инициатор = глТекущийПользователь;
	Задача.Описание = стр+ " "+Формат(МесяцПланирования, "ДФ='MMMM yyyy'");
	Задача.Наименование = Задача.Описание;
	Задача.Постановщик = глТекущийПользователь;
	Задача.Записать();
КонецПроцедуры

Процедура НачалоПериодаПриИзменении(Элемент)
			НачалоПериода = НачалоМесяца(началоПериода);
			конецПериода = КонецМесяца(началоПериода);
КонецПроцедуры

Процедура НаправлениеПродажНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если не рольДоступна("полныеПрава") Тогда
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.НаправленияПродаж.ПолучитьФормуВыбора(,Элемент,);
	ФормаВыбора.Отбор.ОтветственныйЗаПланирование.Значение      = глТекущийпользователь;
	ФормаВыбора.Отбор.ОтветственныйЗаПланирование.Использование = Истина;
	ФормаВыбора.Открыть();
	конецесли;	
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура НаправлениеПродажПриИзменении(Элемент)
			//Если заполнено направление продаж проверим, можно ли его редактировать
		//Если значениеЗаполнено(НаправлениеПродаж) и Тогда
		//	Отбор = Новый Структура();
		//	Отбор.Вставить("МесяцПланирования",НачалоПериода);
		//	Отбор.Вставить("ТоварнаяГруппа",Справочники.ТоварныеГруппыДляПланирования.ПустаяСсылка());
		//	Отбор.Вставить("НоменклатурнаяГруппаПоказатели",Справочники.НоменклатурныеГруппы.ПустаяСсылка());
		//	Отбор.Вставить("направлениеПродаж",НаправлениеПродаж);
		//	Проверка = РегистрыСведений.МесячныйПланДепортаментаПродаж.Получить(Отбор);
		//	Если Проверка.утвержден тогда
		//		//ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.доступность = Ложь;
		//		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.доступность = Ложь;
		//	иначе
		//		//ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.доступность = истина;
		//		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.доступность = Истина;
		//	конецЕсли;
		//конецЕсли;

КонецПроцедуры	
	
Процедура КоманднаяПанель1ПосмотретьВсе(Кнопка)
		Если  РольДоступна("ПравоЗавершенияРаботыПользователей") или глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Серков") Тогда
    	иначеЕсли РольДоступна("ПолныеПрава")тогда 
		ЭлементыФормы.ДеревоПланирования.ТолькоПросмотр = Истина;
	    конецЕсли;	
        КоманднаяПанель1ЗаполнитьИзПлана(Кнопка);


КонецПроцедуры

процедура установитьПНСвод(строка,ПроцентНаценкиПлан)
	Для каждого стр из строка.Строки Цикл
		Стр.ПроцентНаценкиПлан = ПроцентНаценкиПлан;
		установитьПНСвод(стр,ПроцентНаценкиПлан);
	 конеццикла;
конецПроцедуры	

Процедура ДеревоСводПриростСреднейЦеныПриИзменении(Элемент)
	//устанавливаем значение во всех строках с такойже товарной и номенклатурной группой
	ТекущаяСтрока = ЭлементыФормы.ДеревоСвод.текущиеДанные;
	ПриростСреднейЦены = ТекущаяСтрока.ПриростСреднейЦены;
	
	Для каждого стр из ЭлементыФормы.ДеревоПланирования.Значение.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
			стр.ПриростСреднейЦены = ПриростСреднейЦены;
			стр.СредняяЦенаПлан = стр.СредняяЦена*(1+ПриростСреднейЦены/100);
			стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
			Если стр.ПроцентНаценкиПлан<>0 Тогда
				стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
				стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
			конецЕсли;
			
			РассчитатьСреднююЦенуПлан(стр,ПриростСреднейЦены);
			
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиПриростСреднейЦены(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла;
	Для каждого стр из ТекущаяСтрока.Строки Цикл
		Стр.ПриростСреднейЦены = ПриростСреднейЦены;
		установитьПСЦСвод(стр,ПриростСреднейЦены);
		
	конеццикла;
КонецПроцедуры

процедура установитьПСЦСвод(строка,ПриростСреднейЦены)
	Для каждого стр из строка.Строки Цикл
		Стр.ПриростСреднейЦены = ПриростСреднейЦены;
		установитьПСЦСвод(стр,ПриростСреднейЦены);
	 конеццикла;
конецПроцедуры	

процедура проверитьВложенныеСтрокиПриростСреднейЦены(строка,текущаяСтрока)
	
	Для каждого стр из строка.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
			ПриростСреднейЦены = ТекущаяСтрока.ПриростСреднейЦены;
			стр.ПриростСреднейЦены = ПриростСреднейЦены;
			стр.СредняяЦенаПлан = стр.СредняяЦена*(1+ПриростСреднейЦены/100);
			стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
			Если стр.ПроцентНаценкиПлан<>0 Тогда
				стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
				стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
			конецЕсли;
			
			РассчитатьСреднююЦенуПлан(стр,ПриростСреднейЦены);
			
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиПриростСреднейЦены(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла
	
конецПроцедуры	

Процедура ДеревоСводСредняяЦенаПланПриИзменении(Элемент)
	ТекущаяСтрока = ЭлементыФормы.ДеревоСвод.текущиеДанные;
	СредняяЦенаПлан = ТекущаяСтрока.СредняяЦенаПлан;
	
	Для каждого стр из ЭлементыФормы.ДеревоПланирования.Значение.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
			стр.СредняяЦенаПлан = СредняяЦенаПлан;
			ЗаполнитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла;
	Для каждого стр из ТекущаяСтрока.Строки Цикл
		Стр.СредняяЦенаПлан = СредняяЦенаПлан;
		установитьСредняяЦенаПланСвод(стр,СредняяЦенаПлан);		
	конеццикла;

КонецПроцедуры

процедура проверитьВложенныеСтрокиСредняяЦенаПлан(строка,текущаяСтрока)
	
	Для каждого стр из строка.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
			СредняяЦенаПлан = ТекущаяСтрока.СредняяЦенаПлан;
			стр.СредняяЦенаПлан = СредняяЦенаПлан;
			ЗаполнитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла
	
конецПроцедуры

процедура ЗаполнитьВложенныеСтрокиСредняяЦенаПлан(строка,текущаяСтрока)
	
	Для каждого стр из строка.строки цикл
			СредняяЦенаПлан = ТекущаяСтрока.СредняяЦенаПлан;
			стр.СредняяЦенаПлан = СредняяЦенаПлан;
			ЗаполнитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
			пересчетИтогов(стр);
	конецЦикла;
	
конецПроцедуры	

процедура установитьСредняяЦенаПланСвод(строка,СредняяЦенаПлан)
	Для каждого стр из строка.Строки Цикл
		Стр.СредняяЦенаПлан = СредняяЦенаПлан;
		установитьСредняяЦенаПланСвод(стр,СредняяЦенаПлан);
	 конеццикла;
конецПроцедуры	

Процедура ДеревоПланированияКоличествоПланПриИзменении(Элемент)
		стр = ЭлементыФормы.ДеревоПланирования.текущиеДанные;
        Стр.суммаПлан = Стр.КоличествоПлан*Стр.СредняяЦенаПлан;
		стр.СуммаНаценкиПлан = стр.СуммаПлан/(100+стр.ПроцентНаценкиПлан)* стр.ПроцентНаценкиПлан;
		стр.ПриростНаценки = стр.СуммаНаценкиПлан-стр.СуммаНаценки;
		РассчитатьколичествоПланВСтроке(стр,стр.КоличествоПлан);

		пересчетИтогов(стр);	
КонецПроцедуры
	
процедура РассчитатьколичествоПланВСтроке(ТекСтрока,КоличествоПлан)
	
	Для каждого стр из  ТекСтрока.Строки Цикл
		стр.КоличествоПлан = КоличествоПлан;
		Стр.суммаПлан = Стр.КоличествоПлан*Стр.СредняяЦенаПлан;
		стр.СуммаНаценкиПлан = стр.СуммаПлан/(100+стр.ПроцентНаценкиПлан)* стр.ПроцентНаценкиПлан;
		стр.ПриростНаценки = стр.СуммаНаценкиПлан-стр.СуммаНаценки;
		РассчитатьКоличествоПланВСтроке(стр,КоличествоПлан);
		пересчетИтогов(стр);
	конеццикла;	
	
конецПроцедуры	

Процедура КоманднаяПанель1ЗаполнитьАксыИАКБ(Кнопка)
	ЗаполнялиДиски =Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		
				"ВЫБРАТЬ
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0) - ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Наценка,
				|	СУММА(ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Себестоимость,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
				|ПОМЕСТИТЬ ПродажиПрошлогоГода
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиСебестоимостьОбороты
				|		ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
				|			И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
				|			И ПродажиОбороты.Подразделение = ПродажиСебестоимостьОбороты.Подразделение
				|			И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппа,
				|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа,
				|	НаправленияПродаж.Ссылка КАК НаправлениеПродаж
				|ПОМЕСТИТЬ Основа
				|ИЗ
				|	Справочник.НаправленияПродаж КАК НаправленияПродаж,
				|	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
				|ГДЕ
				|	НаправленияПродаж.ЭтоГруппа = ЛОЖЬ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество
				|ПОМЕСТИТЬ ОбщаяСредняяЦена
				|ИЗ
				|	ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|ГДЕ
				|	ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж = &ДепартаментПродаж
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Основа.ТоварнаяГруппа КАК ТоварнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Сумма,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0) = 0
				|					ТОГДА ВЫБОР
				|							КОГДА ЕСТЬNULL(ОбщаяСредняяЦена.Количество, 0) = 0
				|								ТОГДА 0
				|							ИНАЧЕ ВЫРАЗИТЬ(ОбщаяСредняяЦена.Стоимость / ОбщаяСредняяЦена.Количество КАК ЧИСЛО(15, 2))
				|						КОНЕЦ
				|				ИНАЧЕ ВЫРАЗИТЬ(ПродажиПрошлогоГода.Стоимость / ПродажиПрошлогоГода.Количество КАК ЧИСЛО(15, 2))
				|			КОНЕЦ, 0)) КАК СредняяЦена,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Наценка, 0)) КАК СуммаНаценки,
				|	СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценки,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Себестоимость, 0)) КАК Себестоимость,
				|	ЛОЖЬ КАК Утвержден,
				|	0 КАК ПриростПродажПлан,
				|	0 КАК КоличествоПлан,
				|	0 КАК СуммаПлан,
				|	0 КАК ПриростСреднейЦены,
				|	0 КАК СредняяЦенаПлан,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценкиПлан,
				|	0 КАК СуммаНаценкиПлан,
				|	0 КАК ПриростНаценки,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж, Основа.НаправлениеПродаж) КАК НаправлениеПродаж,
				|	Основа.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Наименование, Основа.НаправлениеПродаж.Наименование) КАК ДляСортировки
				|ИЗ
				|	Основа КАК Основа
				|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|		ПО Основа.НаправлениеПродаж = ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж
				|			И Основа.НоменклатурнаяГруппа = ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщаяСредняяЦена КАК ОбщаяСредняяЦена
				|		ПО Основа.НоменклатурнаяГруппа = ОбщаяСредняяЦена.НоменклатурнаяГруппа
				|ГДЕ
				|	Основа.НаправлениеПродаж = &НаправлениеПродаж
				|
				|СГРУППИРОВАТЬ ПО
				|	Основа.ТоварнаяГруппа,
				|	Основа.НоменклатурнаяГруппа,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж, Основа.НаправлениеПродаж),
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Наименование, Основа.НаправлениеПродаж.Наименование)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ДляСортировки,
				|	Основа.ТоварнаяГруппа.Наименование
				|ИТОГИ
				|	СУММА(Количество),
				|	СУММА(Сумма),
				|	ВЫБОР
				|		КОГДА СУММА(Количество) = 0
				|			ТОГДА СРЕДНЕЕ(СредняяЦена)
				|		ИНАЧЕ СУММА(Сумма) / СУММА(Количество)
				|	КОНЕЦ КАК СредняяЦена,
				|	СУММА(СуммаНаценки),
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценки,
				|	СУММА(Себестоимость),
				|	МИНИМУМ(Утвержден),
				|	СУММА(ПриростПродажПлан),
				|	СУММА(КоличествоПлан),
				|	СУММА(СуммаПлан),
				|	СУММА(ПриростСреднейЦены),
				|	СУММА(СредняяЦенаПлан),
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценкиПлан,
				|	СУММА(СуммаНаценкиПлан),
				|	СУММА(ПриростНаценки)
				|ПО
				|	ОБЩИЕ,
				|	НаправлениеПродаж,
				|	ТоварнаяГруппа ИЕРАРХИЯ";

	Запрос.УстановитьПараметр("КонПериода",Новый Граница(КонецДня(ДобавитьМесяц(КонецПериода,-12)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	Запрос.УстановитьПараметр("НачПериода", ДобавитьМесяц(НачалоПериода,-12));
	Запрос.УстановитьПараметр("НаправлениеПродаж",Справочники.НаправленияПродаж.НайтиПоКоду("15"));
	
	
	
	Результат = Запрос.Выполнить();
	Элементыформы.ДеревоПланирования.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	

КонецПроцедуры

Процедура КоманднаяПанель2кнЗаполнитьПланНО(Кнопка)
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ТоварныегруппыДляПланирования.ПустаяСсылка)
	             |			ТОГДА ""9. Произвольные показатели""
	             |		ИНАЧЕ МесячныйПланДепортаментаПродаж.ТоварнаяГруппа
	             |	КОНЕЦ КАК ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан,
	             |	МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан,
	             |	МесячныйПланДепортаментаПродаж.КоличествоПлан,
	             |	МесячныйПланДепортаментаПродаж.СуммаПлан,
	             |	МесячныйПланДепортаментаПродаж.Утвержден,
	             |	МесячныйПланДепортаментаПродаж.Вес,
	             |	МесячныйПланДепортаментаПродаж.KPI
	             |ПОМЕСТИТЬ втПлан
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.Пустаяссылка)
	             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПродаж
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж КАК НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот
	             |ПОМЕСТИТЬ втПродажиПрошлогоМесяца
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПрошлогоМесяца,
	             |			&КонПериодаПрошлогоМесяца,
	             |			,
	             |			ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В
	             |					(ВЫБРАТЬ
	             |						втПлан.НаправлениеПродаж
	             |					ИЗ
	             |						втПлан)
	             |				И Номенклатура.НоменклатурнаяГруппа В
	             |					(ВЫБРАТЬ
	             |						втПлан.НоменклатурнаяГруппа
	             |					ИЗ
	             |						втПлан)
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)) КАК ПродажиОбороты
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж КАК НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот
	             |ПОМЕСТИТЬ втПродажиПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПрошлогоПериода,
	             |			&КонПрошлогоПериода,
	             |			,
	             |			ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В
	             |					(ВЫБРАТЬ
	             |						втПлан.НаправлениеПродаж
	             |					ИЗ
	             |						втПлан)
	             |				И Номенклатура.НоменклатурнаяГруппа В
	             |					(ВЫБРАТЬ
	             |						втПлан.НоменклатурнаяГруппа
	             |					ИЗ
	             |						втПлан)
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)) КАК ПродажиОбороты
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втПлан.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |	втПлан.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПоказатели,
	             |	СУММА(втПлан.КоличествоИтоговыйПлан) КАК КоличествоИтоговыйПлан,
	             |	СУММА(втПлан.СуммаИтоговыйПлан) КАК СуммаИтоговыйПлан,
	             |	СУММА(втПлан.КоличествоПлан) КАК КоличествоПлан,
	             |	СУММА(втПлан.СуммаПлан) КАК СуммаПлан,
	             |	СУММА(ЕСТЬNULL(втПродажиПрошлогоМесяца.КоличествоОборот, 0)) КАК КоличествоПрошлыйМесяц,
	             |	СУММА(ЕСТЬNULL(втПродажиПрошлогоМесяца.СтоимостьОборот, 0)) КАК СуммаПрошлыйМесяц,
	             |	СУММА(ЕСТЬNULL(втПродажиПрошлогоГода.КоличествоОборот, 0)) КАК КоличествоПрошлыйГод,
	             |	СУММА(ЕСТЬNULL(втПродажиПрошлогоГода.СтоимостьОборот, 0)) КАК СуммаПрошлыйГод,
	             |	СУММА(втПлан.Вес) КАК Вес,
	             |	СУММА(втПлан.KPI) КАК KPI
	             |ИЗ
	             |	втПлан КАК втПлан
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втПродажиПрошлогоМесяца КАК втПродажиПрошлогоМесяца
	             |		ПО втПлан.НаправлениеПродаж = втПродажиПрошлогоМесяца.НаправлениеПродаж
	             |			И втПлан.НоменклатурнаяГруппа = втПродажиПрошлогоМесяца.НоменклатурнаяГруппа
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втПродажиПрошлогоГода КАК втПродажиПрошлогоГода
	             |		ПО втПлан.НаправлениеПродаж = втПродажиПрошлогоГода.НаправлениеПродаж
	             |			И втПлан.НоменклатурнаяГруппа = втПродажиПрошлогоГода.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	втПлан.ТоварнаяГруппа,
	             |	втПлан.НоменклатурнаяГруппа
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ТоварнаяГруппа.Наименование,
	             |	НоменклатурнаяГруппаПоказатели
	             |ИТОГИ
	             |	СУММА(КоличествоИтоговыйПлан),
	             |	СУММА(СуммаИтоговыйПлан),
	             |	СУММА(КоличествоПлан),
	             |	СУММА(СуммаПлан),
	             |	СУММА(КоличествоПрошлыйМесяц),
	             |	СУММА(СуммаПрошлыйМесяц),
	             |	СУММА(КоличествоПрошлыйГод),
	             |	СУММА(СуммаПрошлыйГод),
	             |	СУММА(Вес),
	             |	СУММА(KPI)
	             |ПО
	             |	ОБЩИЕ,
	             |	ТоварнаяГруппа ИЕРАРХИЯ
	             |АВТОУПОРЯДОЧИВАНИЕ";
				 
				 Запрос.УстановитьПараметр("МесяцПланирования", НачалоПериода);
				 Запрос.УстановитьПараметр("НачПериодаПрошлогоМесяца", ДобавитьМесяц(НачалоПериода,-1));
				 Запрос.УстановитьПараметр("КонПериодаПрошлогоМесяца", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-1)), ВидГраницы.Включая));
				 Запрос.УстановитьПараметр("НачПрошлогоПериода", ДобавитьМесяц(НачалоПериода,-12));
				 Запрос.УстановитьПараметр("КонПрошлогоПериода", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-12)), ВидГраницы.Включая));
				 Запрос.УстановитьПараметр("НаправлениеПродаж",НаправлениеПродаж);
	             Запрос.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);
	
	Результат = Запрос.Выполнить();
	
	Элементыформы.ПланированиеНООТРДП.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	//по менеджерам
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ТоварныегруппыДляПланирования.ПустаяСсылка)
	             |			ТОГДА ""9. Произвольные показатели""
	             |		ИНАЧЕ МесячныйПланДепортаментаПродаж.ТоварнаяГруппа
	             |	КОНЕЦ КАК ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан,
	             |	МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан,
	             |	МесячныйПланДепортаментаПродаж.КоличествоПлан,
	             |	МесячныйПланДепортаментаПродаж.СуммаПлан,
	             |	МесячныйПланДепортаментаПродаж.Утвержден,
	             |	МесячныйПланДепортаментаПродаж.Вес,
	             |	МесячныйПланДепортаментаПродаж.Менеджер,
	             |	МесячныйПланДепортаментаПродаж.KPI
	             |ПОМЕСТИТЬ втПлан
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И НЕ МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.Пустаяссылка)
	             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПродаж
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж КАК НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |ПОМЕСТИТЬ втПродажиПрошлогоМесяца
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПрошлогоМесяца,
	             |			&КонПериодаПрошлогоМесяца,
	             |			,
	             |			ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В
	             |					(ВЫБРАТЬ
	             |						втПлан.НаправлениеПродаж
	             |					ИЗ
	             |						втПлан)
	             |				И Номенклатура.НоменклатурнаяГруппа В
	             |					(ВЫБРАТЬ
	             |						втПлан.НоменклатурнаяГруппа
	             |					ИЗ
	             |						втПлан)
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)) КАК ПродажиОбороты
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж КАК НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |ПОМЕСТИТЬ втПродажиПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПрошлогоПериода,
	             |			&КонПрошлогоПериода,
	             |			,
	             |			ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В
	             |					(ВЫБРАТЬ
	             |						втПлан.НаправлениеПродаж
	             |					ИЗ
	             |						втПлан)
	             |				И Номенклатура.НоменклатурнаяГруппа В
	             |					(ВЫБРАТЬ
	             |						втПлан.НоменклатурнаяГруппа
	             |					ИЗ
	             |						втПлан)
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)) КАК ПродажиОбороты
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втПлан.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |	втПлан.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПоказатели,
	             |	СУММА(втПлан.КоличествоИтоговыйПлан) КАК КоличествоИтоговыйПлан,
	             |	СУММА(втПлан.СуммаИтоговыйПлан) КАК СуммаИтоговыйПлан,
	             |	СУММА(втПлан.КоличествоПлан) КАК КоличествоПлан,
	             |	СУММА(втПлан.СуммаПлан) КАК СуммаПлан,
	             |	СУММА(ЕСТЬNULL(втПродажиПрошлогоМесяца.КоличествоОборот, 0)) КАК КоличествоПрошлыйМесяц,
	             |	СУММА(ЕСТЬNULL(втПродажиПрошлогоМесяца.СтоимостьОборот, 0)) КАК СуммаПрошлыйМесяц,
	             |	СУММА(ЕСТЬNULL(втПродажиПрошлогоГода.КоличествоОборот, 0)) КАК КоличествоПрошлыйГод,
	             |	СУММА(ЕСТЬNULL(втПродажиПрошлогоГода.СтоимостьОборот, 0)) КАК СуммаПрошлыйГод,
	             |	СУММА(втПлан.Вес) КАК Вес,
	             |	втПлан.Менеджер КАК Менеджер,
	             |	СУММА(втПлан.KPI) КАК KPI
	             |ИЗ
	             |	втПлан КАК втПлан
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втПродажиПрошлогоМесяца КАК втПродажиПрошлогоМесяца
	             |		ПО втПлан.НаправлениеПродаж = втПродажиПрошлогоМесяца.НаправлениеПродаж
	             |			И втПлан.НоменклатурнаяГруппа = втПродажиПрошлогоМесяца.НоменклатурнаяГруппа
	             |			И втПлан.Менеджер = втПродажиПрошлогоМесяца.ДоговорКонтрагентаОтветственноеЛицо
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втПродажиПрошлогоГода КАК втПродажиПрошлогоГода
	             |		ПО втПлан.НаправлениеПродаж = втПродажиПрошлогоГода.НаправлениеПродаж
	             |			И втПлан.НоменклатурнаяГруппа = втПродажиПрошлогоГода.НоменклатурнаяГруппа
	             |			И втПлан.Менеджер = втПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицо
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	втПлан.ТоварнаяГруппа,
	             |	втПлан.НоменклатурнаяГруппа,
	             |	втПлан.Менеджер
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Менеджер,
	             |	ТоварнаяГруппа.Наименование,
	             |	НоменклатурнаяГруппаПоказатели
	             |ИТОГИ
	             |	СУММА(КоличествоИтоговыйПлан),
	             |	СУММА(СуммаИтоговыйПлан),
	             |	СУММА(КоличествоПлан),
	             |	СУММА(СуммаПлан),
	             |	СУММА(КоличествоПрошлыйМесяц),
	             |	СУММА(СуммаПрошлыйМесяц),
	             |	СУММА(КоличествоПрошлыйГод),
	             |	СУММА(СуммаПрошлыйГод),
	             |	СУММА(Вес),
	             |	СУММА(KPI)
	             |ПО
	             |	ОБЩИЕ,
	             |	Менеджер,
	             |	ТоварнаяГруппа ИЕРАРХИЯ
	             |АВТОУПОРЯДОЧИВАНИЕ";
				 
				 Запрос.УстановитьПараметр("МесяцПланирования", НачалоПериода);
				 Запрос.УстановитьПараметр("НачПериодаПрошлогоМесяца", ДобавитьМесяц(НачалоПериода,-1));
				 Запрос.УстановитьПараметр("КонПериодаПрошлогоМесяца", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-1)), ВидГраницы.Включая));
				 Запрос.УстановитьПараметр("НачПрошлогоПериода", ДобавитьМесяц(НачалоПериода,-12));
				 Запрос.УстановитьПараметр("КонПрошлогоПериода", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-12)), ВидГраницы.Включая));
				 Запрос.УстановитьПараметр("НаправлениеПродаж",НаправлениеПродаж);
	             Запрос.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);
	
	Результат = Запрос.Выполнить();
	
	Элементыформы.ПланированиеНОПоМенеджерам.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);


КонецПроцедуры

Процедура ПланированиеНООТРДППриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
			
		ОформлениеСтроки.Ячейки.ФактПрошлогоГода.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ФактПрошлогоМесяца.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ПредварительныйПлан.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ИтоговыйПлан.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПриростКПлану.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПланНО.Видимость = ЛожЬ;
		//ОформлениеСтроки.Ячейки.ПриростПредварительного = ЛожЬ;
		
		Есть = ложь;
		Если значениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.Вес) тогда
			Есть = ОформлениеСтроки.ДанныеСтроки.Вес>0;
		КонецЕсли;
		Если не Есть тогда
			Есть = ВСтруктуреЕстьОтслеживаемые(ОформлениеСтроки.ДанныеСтроки);
		КонецЕсли;
		Если Есть тогда
			ОформлениеСтроки.Шрифт=Новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
		КонецЕсли;
		
	конецЦикла;	
КонецПроцедуры

Процедура кнЗаполнитьПланСKPIНажатие(Элемент)
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	             |	СУММА(МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан) КАК КоличествоИтогОбщий,
	             |	СУММА(МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан) КАК СуммаИтогОбщий,
	             |	СУММА(МесячныйПланДепортаментаПродаж.КоличествоПлан) КАК КоличествоПредварительныйОбщий,
	             |	СУММА(МесячныйПланДепортаментаПродаж.СуммаПлан) КАК СуммаПредварительныйОбщий,
	             |	СУММА(МесячныйПланДепортаментаПродаж.Вес) КАК ВесОбщий,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеМосква
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогМосква,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеМосква
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогМосква,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеМосква
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйМосква,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеМосква
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйМосква,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеМосква
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесМосква,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПодмосковье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогПодмосковье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПодмосковье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогПодмосковье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПодмосковье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйПодмосковье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПодмосковье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйПодмосковье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПодмосковье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесПодмосковье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеЦФО
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогЦФО,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеЦФО
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогЦФО,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеЦФО
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйЦФО,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеЦФО
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйЦФО,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеЦФО
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесЦФО,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеСевер
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогСевер,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеСевер
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогСевер,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеСевер
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйСевер,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеСевер
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйСевер,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеСевер
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесСевер,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеИнтернетМагазины
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогИнтернетМагазины,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеИнтернетМагазины
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогИнтернетМагазины,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеИнтернетМагазины
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйИнтернетМагазины,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеИнтернетМагазины
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйИнтернетМагазины,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеИнтернетМагазины
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесИнтернетМагазины,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПоволжье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогПоволжье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПоволжье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогПоволжье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПоволжье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйПоволжье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПоволжье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйПоволжье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПоволжье
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесПоволжье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКорпКлиенты
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогКорпКлиенты,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКорпКлиенты
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогКорпКлиенты,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКорпКлиенты
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйКорпКлиенты,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКорпКлиенты
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйКорпКлиенты,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКорпКлиенты
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесКорпКлиенты,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеТендеры
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогТендеры,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеТендеры
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогТендеры,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеТендеры
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйТендеры,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеТендеры
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйТендеры,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеТендеры
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесТендеры,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалРнД
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогФилиалРнД,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалРнД
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогФилиалРнД,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалРнД
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйФилиалРнД,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалРнД
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйФилиалРнД,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалРнД
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесФилиалРнД,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалСпб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогФилиалСпб,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалСпб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогФилиалСпб,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалСпб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйФилиалСпб,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалСпб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйФилиалСпб,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалСпб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесФилиалСпб,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалЕкб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогФилиалЕкат,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалЕкб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогФилиалЕкат,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалЕкб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйФилиалЕкат,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалЕкб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйФилиалЕкат,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалЕкб
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесФилиалЕкат,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалТольятти
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогФилиалТольятти,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалТольятти
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогФилиалТольятти,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалТольятти
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйФилиалТольятти,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалТольятти
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйФилиалТольятти,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалТольятти
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесФилиалТольятти,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеБеларусь
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогБеларусь,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеБеларусь
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогБеларусь,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеБеларусь
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйБеларусь,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеБеларусь
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйБеларусь,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеБеларусь
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесБеларусь,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКлючевые
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоИтогКлючевые,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКлючевые
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаИтогКлючевые,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКлючевые
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК КоличествоПредварительныйКлючевые,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКлючевые
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаПредварительныйКлючевые,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКлючевые
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесКлючевые
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ТоварнаяГруппа.Наименование,
	             |	НоменклатурнаяГруппаПоказатели
	             |ИТОГИ
	             |	СУММА(КоличествоИтогОбщий),
	             |	СУММА(СуммаИтогОбщий),
	             |	СУММА(КоличествоПредварительныйОбщий),
	             |	СУММА(СуммаПредварительныйОбщий),
	             |	СУММА(ВесОбщий),
	             |	СУММА(КоличествоИтогМосква),
	             |	СУММА(СуммаИтогМосква),
	             |	СУММА(КоличествоПредварительныйМосква),
	             |	СУММА(СуммаПредварительныйМосква),
	             |	СУММА(ВесМосква),
	             |	СУММА(КоличествоИтогПодмосковье),
	             |	СУММА(СуммаИтогПодмосковье),
	             |	СУММА(КоличествоПредварительныйПодмосковье),
	             |	СУММА(СуммаПредварительныйПодмосковье),
	             |	СУММА(ВесПодмосковье),
	             |	СУММА(КоличествоИтогЦФО),
	             |	СУММА(СуммаИтогЦФО),
	             |	СУММА(КоличествоПредварительныйЦФО),
	             |	СУММА(СуммаПредварительныйЦФО),
	             |	СУММА(ВесЦФО),
	             |	СУММА(КоличествоИтогСевер),
	             |	СУММА(СуммаИтогСевер),
	             |	СУММА(КоличествоПредварительныйСевер),
	             |	СУММА(СуммаПредварительныйСевер),
	             |	СУММА(ВесСевер),
	             |	СУММА(КоличествоИтогИнтернетМагазины),
	             |	СУММА(СуммаИтогИнтернетМагазины),
	             |	СУММА(КоличествоПредварительныйИнтернетМагазины),
	             |	СУММА(СуммаПредварительныйИнтернетМагазины),
	             |	СУММА(ВесИнтернетМагазины),
	             |	СУММА(КоличествоИтогПоволжье),
	             |	СУММА(СуммаИтогПоволжье),
	             |	СУММА(КоличествоПредварительныйПоволжье),
	             |	СУММА(СуммаПредварительныйПоволжье),
	             |	СУММА(ВесПоволжье),
	             |	СУММА(КоличествоИтогКорпКлиенты),
	             |	СУММА(СуммаИтогКорпКлиенты),
	             |	СУММА(КоличествоПредварительныйКорпКлиенты),
	             |	СУММА(СуммаПредварительныйКорпКлиенты),
	             |	СУММА(ВесКорпКлиенты),
	             |	СУММА(КоличествоИтогТендеры),
	             |	СУММА(СуммаИтогТендеры),
	             |	СУММА(КоличествоПредварительныйТендеры),
	             |	СУММА(СуммаПредварительныйТендеры),
	             |	СУММА(ВесТендеры),
	             |	СУММА(КоличествоИтогФилиалРнД),
	             |	СУММА(СуммаИтогФилиалРнД),
	             |	СУММА(КоличествоПредварительныйФилиалРнД),
	             |	СУММА(СуммаПредварительныйФилиалРнД),
	             |	СУММА(ВесФилиалРнД),
	             |	СУММА(КоличествоИтогФилиалСпб),
	             |	СУММА(СуммаИтогФилиалСпб),
	             |	СУММА(КоличествоПредварительныйФилиалСпб),
	             |	СУММА(СуммаПредварительныйФилиалСпб),
	             |	СУММА(ВесФилиалСпб),
	             |	СУММА(КоличествоИтогФилиалЕкат),
	             |	СУММА(СуммаИтогФилиалЕкат),
	             |	СУММА(КоличествоПредварительныйФилиалЕкат),
	             |	СУММА(СуммаПредварительныйФилиалЕкат),
	             |	СУММА(ВесФилиалЕкат),
	             |	СУММА(КоличествоИтогФилиалТольятти),
	             |	СУММА(СуммаИтогФилиалТольятти),
	             |	СУММА(КоличествоПредварительныйФилиалТольятти),
	             |	СУММА(СуммаПредварительныйФилиалТольятти)
	             |ПО
	             |	ОБЩИЕ,
	             |	ТоварнаяГруппа ИЕРАРХИЯ";
				 Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
				 Запрос.УстановитьПараметр("НаправлениеМосква",Справочники.НаправленияПродаж.Москва);
				 Запрос.УстановитьПараметр("НаправлениеПодмосковье",Справочники.НаправленияПродаж.Подмосковье);
				 Запрос.УстановитьПараметр("НаправлениеЦФО",Справочники.НаправленияПродаж.ЦентрРоссии);
                 Запрос.УстановитьПараметр("НаправлениеСевер",Справочники.НаправленияПродаж.СеверЮг);
				 Запрос.УстановитьПараметр("НаправлениеЮг",Справочники.НаправленияПродаж.НайтиПоКоду("18"));
				 Запрос.УстановитьПараметр("НаправлениеИнтернетМагазины",Справочники.НаправленияПродаж.ИнтернетМагазины);
                 Запрос.УстановитьПараметр("НаправлениеПоволжье",Справочники.НаправленияПродаж.НижнийНовгород);
                 Запрос.УстановитьПараметр("НаправлениеКорпКлиенты",Справочники.НаправленияПродаж.Конечники);
				 Запрос.УстановитьПараметр("НаправлениеТендеры",Справочники.НаправленияПродаж.Тендеры);
				 Запрос.УстановитьПараметр("НаправлениеФилиалРнД",Справочники.НаправленияПродаж.ФилиалРнД);
				 Запрос.УстановитьПараметр("НаправлениеФилиалСпб",Справочники.НаправленияПродаж.ФилиалСПб);
                 Запрос.УстановитьПараметр("НаправлениеФилиалЕкб",Справочники.НаправленияПродаж.ФилиалЕкб);
				 Запрос.УстановитьПараметр("НаправлениеТольятти",Справочники.НаправленияПродаж.ФилиалТл);

				 Запрос.УстановитьПараметр("НаправлениеБеларусь",Справочники.НаправленияПродаж.Беларусь);
				 Запрос.УстановитьПараметр("НаправлениеКлючевые",Справочники.НаправленияПродаж.НайтиПоКоду("8"));


				 Результат = Запрос.Выполнить();
	
	Элементыформы.ДеревоПланированияДоп.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//ЭлементыФормы.ДеревоПланированияДоп.ФиксацияСлева = 2;

КонецПроцедуры

Процедура ДеревоПланированияДопПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		
		ОформлениеСтроки.Ячейки.Общий.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ПредварительныйПланОбщий.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ИтоговыйОбщий.Видимость = ЛожЬ;
		
		ОформлениеСтроки.Ячейки.Москва.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйПланМосква.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйМосква.Видимость = ЛожЬ;
		
		ОформлениеСтроки.Ячейки.Подмосковье.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйПодмосковье.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйПодмосковье.Видимость = ЛожЬ;

		ОформлениеСтроки.Ячейки.ЦФО.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйЦФО.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйЦФО.Видимость = ЛожЬ;
		
		ОформлениеСтроки.Ячейки.Север.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйСевер.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйСевер.Видимость = ЛожЬ;
 
		//ОформлениеСтроки.Ячейки.Юг.Видимость = ЛожЬ; 
		//ОформлениеСтроки.Ячейки.ПредварительныйЮг.Видимость = ЛожЬ; 
		//ОформлениеСтроки.Ячейки.ИтоговыйЮг.Видимость = ЛожЬ;
		
		ОформлениеСтроки.Ячейки.ИнтернетМагазины.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйИнтернетМагазины.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйИнтернетМагазины.Видимость = ЛожЬ;
		
		ОформлениеСтроки.Ячейки.Поволжье.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйПоволжье.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйПоволжье.Видимость = ЛожЬ;
		
        ОформлениеСтроки.Ячейки.КорпКлиенты.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйКорпКлиенты.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйКорпКлиенты.Видимость = ЛожЬ;

		ОформлениеСтроки.Ячейки.Тендеры.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйТендеры.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйТендеры.Видимость = ЛожЬ;
		
		ОформлениеСтроки.Ячейки.ФилиалРнД.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйФилиалРнД.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйФилиалРнД.Видимость = ЛожЬ;
		
        ОформлениеСтроки.Ячейки.ФилиалСпб.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйФилиалСпб.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйФилиалСпб.Видимость = ЛожЬ;

		ОформлениеСтроки.Ячейки.ФилиалЕкат.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйФилиалЕкат.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйФилиалЕкат.Видимость = ЛожЬ;
		
		ОформлениеСтроки.Ячейки.ФилиалТольятти.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйФилиалТольятти.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйФилиалТольятти.Видимость = ЛожЬ;
		
		ОформлениеСтроки.Ячейки.Беларусь.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйБеларусь.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйБеларусь.Видимость = ЛожЬ;
		
		ОформлениеСтроки.Ячейки.Ключевые.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ПредварительныйКлючевые.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИтоговыйКлючевые.Видимость = ЛожЬ;
		

	конецЦикла;	
КонецПроцедуры

Процедура ОбновитьПараметрыВДеревеНО(Дерево, стр, ТолькоВес)
	Отбор = Новый Структура("НаправлениеПродаж, ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	ЗаполнитьЗначенияСвойств(Отбор,стр);
	НайденныеСтроки = Дерево.Строки.НайтиСтроки(Отбор,истина);
	
	Для каждого НайденнаяСтрока из НайденныеСтроки цикл
		Если толькоВес тогда
			НайденнаяСтрока.Вес = Стр.Вес;
			НайденнаяСтрока.ВесКоличество = Стр.ВесКоличество;
		иначе
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока,стр);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбновитьПараметрыВДеревеМенеджеров(Дерево, стр, ТолькоВес)
	Отбор = Новый Структура("Менеджер,НаправлениеПродаж, ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	ЗаполнитьЗначенияСвойств(Отбор,стр);
	НайденныеСтроки = Дерево.Строки.НайтиСтроки(Отбор,истина);
	
	Для каждого НайденнаяСтрока из НайденныеСтроки цикл
		Если толькоВес тогда
			НайденнаяСтрока.Вес = Стр.Вес;
			НайденнаяСтрока.ВесКоличество = Стр.ВесКоличество;
		иначе
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока,стр);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
	
Процедура ДобавитьСтрокуВНаправление(Строки, стр)
	Если ЗначениеЗаполнено(стр.НаправлениеПродаж) тогда
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) и ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) тогда
			ПараметрыОтбора = Новый Структура("НаправлениеПродаж,ТоварнаяГруппа");
			ПараметрыОтбора.НаправлениеПродаж = стр.НаправлениеПродаж;
			ПараметрыОтбора.ТоварнаяГруппа = стр.ТоварнаяГруппа;
			
			РезультатПоиска = Строки.НайтиСтроки(ПараметрыОтбора,ИСТИНА);
			Если РезультатПоиска.Количество() = 0 тогда //ничего не нашли, значит, ищем направление и в него добавляем ТГ
				ПараметрыОтбора = Новый Структура("НаправлениеПродаж");
				ПараметрыОтбора.НаправлениеПродаж = стр.НаправлениеПродаж;
				РезультатПоиска = Строки.НайтиСтроки(ПараметрыОтбора,ИСТИНА);
				Если РезультатПоиска.Количество()>0 тогда
					РодСтрока = РезультатПоиска[0].Строки;
					новаяСтрока = РодСтрока.Добавить();
					ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
				иначе //Добавляем в корень
					новаяСтрока = Строки.Добавить();
					ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			ПараметрыОтбора = Новый Структура("НаправлениеПродаж");
			ПараметрыОтбора.НаправлениеПродаж = стр.НаправлениеПродаж;
			РезультатПоиска = Строки.НайтиСтроки(ПараметрыОтбора,ИСТИНА);
			Если РезультатПоиска.Количество()>0 тогда
				РодСтрока = РезультатПоиска[0].Строки;
				новаяСтрока = РодСтрока.Добавить();
				ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
			иначе //Добавляем в корень
				новаяСтрока = Строки.Добавить();
				ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьСтрокуВМенеджеров(Строки, стр)
	Если ЗначениеЗаполнено(стр.Менеджер) тогда
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) и ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) тогда
			ПараметрыОтбора = Новый Структура("Менеджер,ТоварнаяГруппа");
			ПараметрыОтбора.Менеджер = стр.Менеджер;
			ПараметрыОтбора.ТоварнаяГруппа = стр.ТоварнаяГруппа;
			
			РезультатПоиска = Строки.НайтиСтроки(ПараметрыОтбора,ИСТИНА);
			Если РезультатПоиска.Количество() = 0 тогда //ничего не нашли, значит, ищем Менеджера и в него добавляем ТГ
				ПараметрыОтбора = Новый Структура("Менеджер");
				ПараметрыОтбора.Менеджер = стр.Менеджер;
				РезультатПоиска = Строки.НайтиСтроки(ПараметрыОтбора,ИСТИНА);
				Если РезультатПоиска.Количество()>0 тогда
					РодСтрока = РезультатПоиска[0].Строки;
					новаяСтрока = РодСтрока.Добавить();
					ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
					новаяСтрока.МесяцПланирования = НачалоПериода;
				иначе //Добавляем в корень
					новаяСтрока = Строки.Добавить();
					ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
					новаяСтрока.МесяцПланирования = НачалоПериода;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			ПараметрыОтбора = Новый Структура("Менеджер");
			ПараметрыОтбора.Менеджер = стр.Менеджер;
			РезультатПоиска = Строки.НайтиСтроки(ПараметрыОтбора,ИСТИНА);
			Если РезультатПоиска.Количество()>0 тогда
				РодСтрока = РезультатПоиска[0].Строки;
				новаяСтрока = РодСтрока.Добавить();
				ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
				новаяСтрока.МесяцПланирования = НачалоПериода;
			иначе //Добавляем в корень
				новаяСтрокаМ = Строки.Добавить();
				новаяСтрокаМ.НаправлениеПродаж = стр.НаправлениеПродаж;
				новаяСтрокаМ.Менеджер = стр.Менеджер;
				новаяСтрока = новаяСтрокаМ.строки.Добавить();
				ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
				новаяСтрока.МесяцПланирования = НачалоПериода;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьЗначениеПоказателя(Выборка,НачПер,КонПер, Подразделения = неопределено, ИсключатьШинтрейдКТ = ложь)
	ЗапросПоказатель = Новый Запрос;
	
	Условие = "";
	БылаЗамена = ложь;
	ТекстЗапросаПоказателя = Выборка.ТоварнаяГруппаТекстЗапроса;
	
	Если Подразделения<>неопределено тогда
		ТекстЗапросаПоказателя = СтрЗаменить(ТекстЗапросаПоказателя, "//отбор по менеджеру или направлению", "ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений) и"+ Символы.ПС+"//отбор по менеджеру или направлению");
		БылаЗамена = истина;
		ЗапросПоказатель.УстановитьПараметр("СписокНаправлений",Подразделения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.НаправлениеПродаж) тогда
		Условие = ДобавитьУсловие(Условие, " ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж ");
		ЗапросПоказатель.УстановитьПараметр("НаправлениеПродаж",Выборка.НаправлениеПродаж);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.НоменклатурнаяГруппаПоказатели) тогда
		Если ТипЗнч(Выборка.НоменклатурнаяГруппаПоказатели)= Тип("СправочникСсылка.НоменклатурныеГруппы") тогда
			Условие = ДобавитьУсловие(Условие, " Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа ");
			ЗапросПоказатель.УстановитьПараметр("НоменклатурнаяГруппа",Выборка.НоменклатурнаяГруппаПоказатели);
		ИначеЕсли ТипЗнч(Выборка.НоменклатурнаяГруппаПоказатели)= Тип("СправочникСсылка.ПараметрыПоказателейЭффективности") тогда
			п=0;
			Для Каждого стрПараметров из Выборка.НоменклатурнаяГруппаПоказатели.СписокПараметров цикл
				 Условие = ДобавитьУсловиеПараметраЭффективности(Условие,стрПараметров,"Параметр_"+п,ЗапросПоказатель);
				 п=п+1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.Менеджер) тогда
		 Условие = ДобавитьУсловие(Условие, " ДоговорКонтрагента.ОтветственноеЛицо = &Менеджер ");
			ЗапросПоказатель.УстановитьПараметр("Менеджер",Выборка.Менеджер);
	КонецЕсли;
	
	
	ЗапросПоказатель.Текст = СтрЗаменить(ТекстЗапросаПоказателя,"//отбор по менеджеру или направлению",?(Условие="",?(БылаЗамена,"истина","истина"),Условие));
	ЗапросПоказатель.УстановитьПараметр("НачДата",(НачПер));
	//ЗапросПоказатель.УстановитьПараметр("КонДата",Новый Граница(КонецМесяца(КонПер), ВидГраницы.Включая));
	ЗапросПоказатель.УстановитьПараметр("КонДата",КонецМесяца(КонПер));
	
	Если ИсключатьШинтрейдКТ тогда
		СписокПустой = Новый СписокЗначений;
		ЗапросПоказатель.УстановитьПараметр("ШинтрейдСПб",СписокПустой);
	Иначе
		ЗапросПоказатель.УстановитьПараметр("ШинтрейдСПб",СписокИсключаемыхКонтрагентов);
	КонецЕсли;
	
	Рез = ЗапросПоказатель.Выполнить().Выбрать();
	
	Пока Рез.Следующий() Цикл
		Возврат Рез.Значение;
	КонецЦикла;
	
	Возврат 0;
КонецФункции

Функция ДобавитьУсловие(ТекстУсловия,НовоеУсловие)
	Если ТекстУсловия = "" тогда
		 ТекстУсловия = НовоеУсловие;
	 иначе
		 ТекстУсловия = ТекстУсловия+ " и "+ НовоеУсловие;
	 КонецЕсли;
	 Возврат ТекстУсловия;
 КонецФункции
 
Функция ДобавитьУсловиеПараметраЭффективности(ТекстУсловия,стрПараметров,ИмяПараметра,Запрос)
	 НовоеУсловие = "";
	 Если стрПараметров.ТипПараметра = "Номенклатура" тогда
		 НовоеУсловие = "Номенклатура";
	 иначеЕсли стрПараметров.ТипПараметра = "Номенклатурные группы" тогда
		 НовоеУсловие = "Номенклатура.НоменклатурнаяГруппа";
	 иначеЕсли стрПараметров.ТипПараметра = "Производители" тогда
		 НовоеУсловие = "Номенклатура.Производитель";	 
	 иначеЕсли стрПараметров.ТипПараметра = "Модели товаров" тогда
		 НовоеУсловие = "Номенклатура.Модель";	 	 
	 иначеЕсли стрПараметров.ТипПараметра = "Типоразмеры" тогда
		 НовоеУсловие = "Номенклатура.Типоразмер";	 	 
	 иначеЕсли стрПараметров.ТипПараметра = "Виды товаров" тогда
		 НовоеУсловие = "Номенклатура.ВидТовара";	 	 	 
	 КонецЕсли;
	 
	 Если стрПараметров.ВидСравнения = "В группе" тогда
		 НовоеУсловие = НовоеУсловие + " в Иерархии(&"+ИмяПараметра+") ";
	 ИначеЕсли стрПараметров.ВидСравнения = "Не в группе" тогда
		 НовоеУсловие = НовоеУсловие + " не в Иерархии(&"+ИмяПараметра+") ";
	 ИначеЕсли стрПараметров.ВидСравнения = "Содержит" тогда
		 НовоеУсловие = НовоеУсловие + " Содержит %"+ИмяПараметра+"% ";
	 ИначеЕсли стрПараметров.ВидСравнения = "Равно" тогда  НовоеУсловие = НовоеУсловие+ " "+ "="+ "&"+ИмяПараметра+" ";
	 ИначеЕсли стрПараметров.ВидСравнения = "Не равно" тогда  НовоеУсловие = НовоеУсловие+ " "+ "<>"+ "&"+ИмяПараметра+" ";
	 КонецЕсли; 
	 Запрос.УстановитьПараметр(ИмяПараметра,стрПараметров.Параметр);
	 
	 Если ТекстУсловия = "" тогда
		 ТекстУсловия = НовоеУсловие;
	 иначе
		 ТекстУсловия = ТекстУсловия+ " и "+ НовоеУсловие;
	 КонецЕсли;
	 Возврат ТекстУсловия;
 КонецФункции

Процедура ОтобратьПоМенеджерам2(Направление,ДеревоМенеджеров)
	Отбор = Новый Структура("НаправлениеПродаж");
	Если ДеревоМенеджеров.Строки.Количество()>0 тогда //Сохраним что было. из тз ПланыПоВсемМенеджерам надо удалить все записи по подразделению и поместить вместо них новые
		Отбор.НаправлениеПродаж = СтароеНаправлениеПродаж;
		
		кол =  ПланыПоВсемМенеджерам.Строки.Количество();
		пока кол>0 цикл
			Если ПланыПоВсемМенеджерам.Строки[кол-1].НаправлениеПродаж = СтароеНаправлениеПродаж тогда
				ПланыПоВсемМенеджерам.Строки.Удалить(кол-1);
			КонецЕсли;	 
			кол = кол-1;
		КонецЦикла;
	КонецЕсли;	
	
	Если ДеревоМенеджеров.Строки.Количество()>0 тогда
		ДобавленнаяСтрока =  ПланыПоВсемМенеджерам;
		ЗаполнитьДерево2(ДобавленнаяСтрока, ДеревоМенеджеров.Строки,ПланыПоВсемМенеджерам);
	КонецЕсли;
	
	Отбор.НаправлениеПродаж = Направление;
	Если ПланыПоВсемМенеджерам.Строки.Количество()>0 тогда
		НайденныеСтроки = ПланыПоВсемМенеджерам.Строки.НайтиСтроки(Отбор,истина);
		ДеревоМенеджеров.Строки.Очистить();
		Для Каждого строка из НайденныеСтроки цикл
			Если строка.Родитель = Неопределено тогда
				Если строка.Строки.Количество()>0 тогда
					ДобавленнаяСтрока = ДобавитьСтрокуВДверево2(Неопределено, строка.Строки[0],ДеревоМенеджеров);
					ЗаполнитьДерево2(ДобавленнаяСтрока, строка.Строки,ДеревоМенеджеров);
				Иначе
					нстр = ДеревоМенеджеров.Строки.Добавить();
					ЗаполнитьЗначенияСвойств(нстр,строка);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьСтрокуВДерево(нстр,строка);
	
	//НоваяСтрока = Родитель.Строки.Добавить();
	//ЗаполнитьЗначенияСвойств(НоваяСтрока,Строки);
	//
	//Для Каждого тСтр Из Строки.Строки Цикл
	//	//Сообщить(тСтр.Колонка1+", "+тСтр.Колонка2);
	//	НоваяСтрока = НоваяСтрока.Строки.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока,тСтр);
	//	Если тСтр.Строки.Количество()>0 Тогда
	//		ДобавитьСтрокуВДерево(НоваяСтрока,тСтр);
	//	КонецЕсли;
	//КонецЦикла;
	
	
	
	Попытка
		если строка.Родитель = неопределено тогда
			НоваяСтрока = нстр;
		иначе
			НоваяСтрока = нстр.Строки.Добавить();
		КонецЕсли;
	Исключение
		НоваяСтрока = нстр.Строки.Добавить();
	КонецПопытки;

	ЗаполнитьЗначенияСвойств(НоваяСтрока,строка);
	
	Для каждого стр из строка цикл
		Если строка.Количество()>0 тогда
			ДобавитьСтрокуВДерево(НоваяСтрока,стр);
		Иначе
			к=1;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьДерево2(Родитель, Строки,Дерево2)
    Для Каждого ТекСтрока Из Строки Цикл
        ДобавленнаяСтрока = ДобавитьСтрокуВДверево2(Родитель, ТекСтрока,Дерево2);
        ЗаполнитьДерево2(ДобавленнаяСтрока, ТекСтрока.Строки,Дерево2);
    КонецЦикла;
КонецПроцедуры 

Функция ДобавитьСтрокуВДверево2(Родитель, СтрокаДляЗаполнения,Дерево2)

    Если Родитель = Неопределено Тогда
        НоваяСтрока = Дерево2.Строки.Добавить();
		НоваяСтрока.НаправлениеПродаж = СтрокаДляЗаполнения.НаправлениеПродаж;
    Иначе
        НоваяСтрока = Родитель.строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаДляЗаполнения);
    КонецЕсли;
	
	
    Возврат НоваяСтрока;

КонецФункции 

Процедура кнЗаполнитьПланПоНаправлениямВесаНажатие(Элемент)
Запрос = новый Запрос;
Запрос.Текст="ВЫБРАТЬ
             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесОбщий,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
             |				ТОГДА МесячныйПланДепортаментаПродаж.ВесКоличество
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесКоличествоОбщий,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеМосква
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесМосква,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПодмосковье
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесПодмосковье,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеЦФО
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесЦФО,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеСевер
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесСевер,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеИнтернетМагазины
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесИнтернетМагазины,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПоволжье
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесПоволжье,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКорпКлиенты
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесКорпКлиенты,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеТендеры
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесТендеры,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалРнД
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесФилиалРнД,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалСпб
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесФилиалСпб,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалЕкб
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесФилиалЕкат,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалТольятти
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесФилиалТольятти,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеБеларусь
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесБеларусь,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКлючевые
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесКлючевые,
             |	0 КАК Поле1,
             |	МАКСИМУМ(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
             |				ТОГДА МесячныйПланДепортаментаПродаж.Отслеживать
             |			ИНАЧЕ ЛОЖЬ
             |		КОНЕЦ) КАК Отслеживать,
             |	СУММА(ВЫБОР
             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
             |				ТОГДА ВЫБОР
             |						КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
             |					КОНЕЦ
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК ВесО
             |ПОМЕСТИТЬ вт
             |ИЗ
             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
             |ГДЕ
             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
             |	И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
             |	И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
             |
             |СГРУППИРОВАТЬ ПО
             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ
             |	вт.ТоварнаяГруппа КАК ТоварнаяГруппа,
             |	вт.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
             |	СУММА(вт.ВесОбщий) КАК ВесОбщий,
             |	СУММА(вт.ВесКоличествоОбщий) КАК ВесКоличествоОбщий,
             |	СУММА(вт.ВесМосква) КАК ВесМосква,
             |	СУММА(вт.ВесПодмосковье) КАК ВесПодмосковье,
             |	СУММА(вт.ВесЦФО) КАК ВесЦФО,
             |	СУММА(вт.ВесСевер) КАК ВесСевер,
             |	СУММА(вт.ВесИнтернетМагазины) КАК ВесИнтернетМагазины,
             |	СУММА(вт.ВесПоволжье) КАК ВесПоволжье,
             |	СУММА(вт.ВесКорпКлиенты) КАК ВесКорпКлиенты,
             |	СУММА(вт.ВесТендеры) КАК ВесТендеры,
             |	СУММА(вт.ВесФилиалРнД) КАК ВесФилиалРнД,
             |	СУММА(вт.ВесФилиалСпб) КАК ВесФилиалСпб,
             |	СУММА(вт.ВесФилиалЕкат) КАК ВесФилиалЕкат,
             |	СУММА(вт.ВесФилиалТольятти) КАК ВесФилиалТольятти,
             |	СУММА(вт.ВесБеларусь) КАК ВесБеларусь,
             |	СУММА(вт.ВесКлючевые) КАК ВесКлючевые,
             |	СУММА(вт.Поле1) КАК Поле1,
             |	МАКСИМУМ(вт.Отслеживать) КАК Отслеживать,
             |	МАКСИМУМ(""   "") КАК ТипВеса,
             |	СУММА(вт.ВесО) КАК ВесО
             |ИЗ
             |	вт КАК вт
             |
             |СГРУППИРОВАТЬ ПО
             |	вт.ТоварнаяГруппа,
             |	вт.НоменклатурнаяГруппаПоказатели
             |
             |УПОРЯДОЧИТЬ ПО
             |	вт.ТоварнаяГруппа.Наименование,
             |	ТоварнаяГруппа.Наименование,
             |	НоменклатурнаяГруппаПоказатели
             |ИТОГИ
             |	СУММА(Поле1)
             |ПО
             |	ОБЩИЕ,
             |	ТоварнаяГруппа ИЕРАРХИЯ
             |АВТОУПОРЯДОЧИВАНИЕ";
			 Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
				 Запрос.УстановитьПараметр("НаправлениеМосква",Справочники.НаправленияПродаж.Москва);
				 Запрос.УстановитьПараметр("НаправлениеПодмосковье",Справочники.НаправленияПродаж.Подмосковье);
				 Запрос.УстановитьПараметр("НаправлениеЦФО",Справочники.НаправленияПродаж.ЦентрРоссии);
                 Запрос.УстановитьПараметр("НаправлениеСевер",Справочники.НаправленияПродаж.СеверЮг);
				 Запрос.УстановитьПараметр("НаправлениеЮг",Справочники.НаправленияПродаж.НайтиПоКоду("18"));
				 Запрос.УстановитьПараметр("НаправлениеИнтернетМагазины",Справочники.НаправленияПродаж.ИнтернетМагазины);
                 Запрос.УстановитьПараметр("НаправлениеПоволжье",Справочники.НаправленияПродаж.НижнийНовгород);
                 Запрос.УстановитьПараметр("НаправлениеКорпКлиенты",Справочники.НаправленияПродаж.Конечники);
				 Запрос.УстановитьПараметр("НаправлениеТендеры",Справочники.НаправленияПродаж.Тендеры);
				 Запрос.УстановитьПараметр("НаправлениеФилиалРнД",Справочники.НаправленияПродаж.ФилиалРнД);
				 Запрос.УстановитьПараметр("НаправлениеФилиалСпб",Справочники.НаправленияПродаж.ФилиалСПб);
                 Запрос.УстановитьПараметр("НаправлениеФилиалЕкб",Справочники.НаправленияПродаж.ФилиалЕкб);
				 Запрос.УстановитьПараметр("НаправлениеБеларусь",Справочники.НаправленияПродаж.Беларусь);
				 Запрос.УстановитьПараметр("НаправлениеКлючевые",Справочники.НаправленияПродаж.НайтиПоКоду("8"));
				 Запрос.УстановитьПараметр("НаправлениеФилиалТольятти",Справочники.НаправленияПродаж.ФилиалТл);


				 Результат = Запрос.Выполнить();
				 //Если Результат.Выбрать().Количество()=0 тогда
				 //	Предупреждение("За период не выгружены данные из полугодового плана.");
				 //	Возврат;
				 //КонецЕсли;
	Элементыформы.ДеревоПланированияДопВеса.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	//
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесОбщий,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				ТОГДА МесячныйПланДепортаментаПродаж.ВесКоличество
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесКоличествоОбщий,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеМосква
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесМосква,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПодмосковье
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесПодмосковье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеЦФО
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесЦФО,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеСевер
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесСевер,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеИнтернетМагазины
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесИнтернетМагазины,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПоволжье
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесПоволжье,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКорпКлиенты
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесКорпКлиенты,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеТендеры
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесТендеры,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалРнД
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесФилиалРнД,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалСпб
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесФилиалСпб,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалЕкб
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесФилиалЕкат,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеФилиалТольятти
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесФилиалТольятти,
	             |	0 КАК Поле1,
	             |	МАКСИМУМ(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Отслеживать
	             |			ИНАЧЕ ЛОЖЬ
	             |		КОНЕЦ) КАК Отслеживать,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеБеларусь
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесБеларусь,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеКлючевые
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.Вес <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесКлючевые,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |							ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |					КОНЕЦ
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ВесО
	             |ПОМЕСТИТЬ вт
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	             |	И НЕ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	             |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	             |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	вт.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |	вт.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	             |	СУММА(вт.ВесОбщий) КАК ВесОбщий,
	             |	СУММА(вт.ВесКоличествоОбщий) КАК ВесКоличествоОбщий,
	             |	СУММА(вт.ВесМосква) КАК ВесМосква,
	             |	СУММА(вт.ВесПодмосковье) КАК ВесПодмосковье,
	             |	СУММА(вт.ВесЦФО) КАК ВесЦФО,
	             |	СУММА(вт.ВесСевер) КАК ВесСевер,
	             |	СУММА(вт.ВесИнтернетМагазины) КАК ВесИнтернетМагазины,
	             |	СУММА(вт.ВесПоволжье) КАК ВесПоволжье,
	             |	СУММА(вт.ВесКорпКлиенты) КАК ВесКорпКлиенты,
	             |	СУММА(вт.ВесТендеры) КАК ВесТендеры,
	             |	СУММА(вт.ВесФилиалРнД) КАК ВесФилиалРнД,
	             |	СУММА(вт.ВесФилиалСпб) КАК ВесФилиалСпб,
	             |	СУММА(вт.ВесФилиалЕкат) КАК ВесФилиалЕкат,
	             |	СУММА(вт.ВесФилиалТольятти) КАК ВесФилиалТольятти,
	             |	СУММА(вт.Поле1) КАК Поле1,
	             |	МАКСИМУМ(вт.Отслеживать) КАК Отслеживать,
	             |	СУММА(вт.ВесБеларусь) КАК ВесБеларусь,
	             |	СУММА(вт.ВесКлючевые) КАК ВесКлючевые,
	             |	СУММА(вт.ВесО) КАК ВесО
	             |ИЗ
	             |	вт КАК вт
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	вт.ТоварнаяГруппа,
	             |	вт.НоменклатурнаяГруппаПоказатели
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	ПоказателиЭффективности.Ссылка,
	             |	ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка),
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	NULL
	             |ИЗ
	             |	Справочник.ПоказателиЭффективности КАК ПоказателиЭффективности
	             |ГДЕ
	             |	ПоказателиЭффективности.Ссылка = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	ПоказателиЭффективности.Ссылка,
	             |	ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка),
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	0,
	             |	NULL
	             |ИЗ
	             |	Справочник.ПоказателиЭффективности КАК ПоказателиЭффективности
	             |ГДЕ
	             |	ПоказателиЭффективности.Код = ""000000030""
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ТоварнаяГруппа,
	             |	НоменклатурнаяГруппаПоказатели
	             |АВТОУПОРЯДОЧИВАНИЕ";
				 
				 ТЗРучныеПараметры = Запрос.Выполнить().Выгрузить();
				 
				 Для каждого стр из  ТЗРучныеПараметры цикл
					 нашли = ложь;
					 ПроставитьПараметрыВДерево(Элементыформы.ДеревоПланированияДопВеса.Значение, стр, нашли);
					 Если нашли = ложь тогда
						 строки = Элементыформы.ДеревоПланированияДопВеса.Значение.Строки;
						 Если Строки.Количество()=0 тогда
							 Строки.Добавить();
						 КонецЕсли;
						 новаяСтрока = строки[0].Строки.Добавить();
						ЗаполнитьЗначенияСвойств(новаяСтрока,стр); 
					 КонецЕсли;
				 КонецЦикла;
				 ДеревоПланированияДопВеса.Строки[0].Строки.Сортировать("ТоварнаяГруппа возр",ложь);
				 ПересчитатьПодвал();
				 
				 Элементыформы.ДеревоПланированияДопВеса.Колонки.ВесОбщий.Видимость = ложь;
				 Элементыформы.ДеревоПланированияДопВеса.Колонки.ВесКоличествоОбщий.Видимость = ложь;
				 Элементыформы.ДеревоПланированияДопВеса.Колонки.Общий.Видимость = ложь;
				 
				 Запрос.Текст = "ВЫБРАТЬ
				                |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП КАК ДатаУтвержденияРДП,
				                |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО КАК ДатаУтвержденияНО,
				                |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияМенеджером КАК ДатаУтвержденияМенеджером
				                |ИЗ
				                |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
				                |ГДЕ
				                |	(МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП <> ДАТАВРЕМЯ(1, 1, 1)
				                |			ИЛИ МесячныйПланДепортаментаПродаж.ДатаУтвержденияМенеджером <> ДАТАВРЕМЯ(1, 1, 1)
				                |			ИЛИ МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО <> ДАТАВРЕМЯ(1, 1, 1))
				                |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования";
								
								Рез = Запрос.Выполнить().Выбрать();
								
								Если Рез.Количество()>0 тогда
									ЭлементыФормы.кнУтвердитьВеса.Заголовок = "Утвердить(уже есть планы)";
								иначе
									ЭлементыФормы.кнУтвердитьВеса.Заголовок = "Утвердить";
								КонецЕсли;
КонецПроцедуры

Процедура ПолучитьЗначенияПоказателей()
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	             |	МесячныйПланДепортаментаПродаж.Менеджер,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ПоказателиЭффективности
	             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ПустаяСсылка)
	             |	И (ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса КАК СТРОКА(500))) <> """"";
КонецПроцедуры

Функция ВСтруктуреЕстьОтслеживаемые(Строки)
	Есть = ложь;
	Для каждого стр из Строки.Строки цикл
		Если стр.Строки.Количество()>0 тогда
			Есть = ВСтруктуреЕстьОтслеживаемые(стр);
			Если Есть тогда
				Возврат истина;
			КонецЕсли;
		КонецЕсли;
		Попытка
			Если ЗначениеЗаполнено(стр.Отслеживать) тогда
				Если стр.Отслеживать тогда
					Возврат истина;
				КонецЕсли;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
		Попытка
			Если ЗначениеЗаполнено(стр.Вес) тогда
				Если стр.вес>0 тогда
					Возврат истина;
				КонецЕсли;
			КонецЕсли;
		Исключение
		КонецПопытки;

		
	КонецЦикла;
	Возврат Есть;
КонецФункции

Функция ВСтруктуреЕстьВеса(Строки)
	Есть = ложь;
	Для каждого стр из Строки.Строки цикл
		Если стр.Строки.Количество()>0 тогда
			Есть = ВСтруктуреЕстьВеса(стр);
			Если Есть тогда
				Возврат истина;
			КонецЕсли;
		КонецЕсли;
		Попытка
			Если стр.Вес>0 или стр.ВесКоличество>0 тогда
				Возврат истина;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
	Возврат Есть;	
КонецФункции

Процедура ПроставитьПараметрыВДерево(строки, стр, нашли)
	Для каждого строка из строки.строки цикл
		
		Если строка.ТоварнаяГруппа = стр.ТоварнаяГруппа тогда //нашли тг
			Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) тогда
				новаяСтрока = Строка.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
			иначе
				ЗаполнитьЗначенияСвойств(строка,стр);
			КонецЕсли;
			Нашли =  истина;
			прервать;
		КонецЕсли;
		
		Если строка.Строки.Количество() = 0 тогда
		иначе
			ПроставитьПараметрыВДерево(строка, стр, нашли)
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроставитьПараметрыВДеревоНО(строки, стр, нашли,ТолькоВес)
	Для каждого строка из строки.строки цикл
		//ищем направление и в нем тг
		Если строка.ТоварнаяГруппа = стр.ТоварнаяГруппа и Строка.НаправлениеПродаж  = стр.НаправлениеПродаж тогда //нашли тг
			Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) и стр.НоменклатурнаяГруппаПоказатели<>Строка.НоменклатурнаяГруппаПоказатели тогда
				
				новаяСтрока = Строка.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
				//НоваяСтрока.Вес = стр.Вес;
				//НоваяСтрока.ВесКоличество = стр.ВесКоличество;
			иначе
				Если ТолькоВес тогда
					строка.Вес = стр.Вес;
					строка.ВесКоличество = стр.ВесКоличество;
				Иначе
					ЗаполнитьЗначенияСвойств(строка,стр);
				КонецЕсли;
			КонецЕсли;
			Нашли =  истина;
			прервать;
		КонецЕсли;
		
		Если строка.Строки.Количество() = 0 тогда
		иначе
			ПроставитьПараметрыВДеревоНО(строка, стр, нашли,ТолькоВес);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроставитьПараметрыВДеревоМенеджеров(строки, стр, нашли)
	Для каждого строка из строки.строки цикл
		//ищем Менеджера и в нем тг
		Если строка.ТоварнаяГруппа = стр.ТоварнаяГруппа и Строка.Менеджер  = стр.Менеджер тогда //нашли тг
			Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) тогда
				новаяСтрока = Строка.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(новаяСтрока,стр);
			иначе
				ЗаполнитьЗначенияСвойств(строка,стр);
			КонецЕсли;
			Нашли =  истина;
			прервать;
		КонецЕсли;
		
		Если строка.Строки.Количество() = 0 тогда
		иначе
			ПроставитьПараметрыВДеревоМенеджеров(строка, стр, нашли)
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДеревоПланированияДопВесаПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		
		ОформлениеСтроки.Ячейки.Общий.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.Москва.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.Подмосковье.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ЦФО.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.Север.Видимость = ЛожЬ; 
		//ОформлениеСтроки.Ячейки.Юг.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ИнтернетМагазины.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.Поволжье.Видимость = ЛожЬ; 
        ОформлениеСтроки.Ячейки.КорпКлиенты.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.Тендеры.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ФилиалРнД.Видимость = ЛожЬ; 
        ОформлениеСтроки.Ячейки.ФилиалСпб.Видимость = ЛожЬ; 
		ОформлениеСтроки.Ячейки.ФилиалЕкат.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ФилиалТольятти.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.Беларусь.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.КлючевыеКлиенты.Видимость = ЛожЬ;
		
		УбратьNullИзСтрок(ОформлениеСтроки.ДанныеСтроки);
		Есть = ложь;
		Если значениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.Отслеживать) тогда
			Есть = ОформлениеСтроки.ДанныеСтроки.Отслеживать;
		КонецЕсли;
		Если не Есть тогда
			Есть = ВСтруктуреЕстьОтслеживаемые(ОформлениеСтроки.ДанныеСтроки);
		КонецЕсли;
		Если Есть тогда
				ОформлениеСтроки.Шрифт=Новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
		КонецЕсли;
		//Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) тогда
		//	ОформлениеСтроки.ДанныеСтроки.ТипВеса = ?(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа.СуммовоеПланирование,"руб.","шт.");
		//КонецЕсли;
	конецЦикла;	
КонецПроцедуры

Процедура УбратьNullИзСтрок(строка)
	Если Строка.НоменклатурнаяГруппаПоказатели = null тогда
		Строка.НоменклатурнаяГруппаПоказатели = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	КонецЕсли;
	Если строка.Строки.Количество() = 0 тогда
	иначе
		Для каждого стр из строка.Строки цикл
			УбратьNullИзСтрок(стр);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ДеревоПланированияДопВесаВесКоличествоПриИзменении(Элемент)
	Если Элемент.Значение<>0 тогда
		ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесОбщий = 0;
	КонецЕсли;
	
	Если ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесКоличествоОбщий <> 0 или ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесОбщий <> 0 тогда
		ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.Отслеживать = истина;
	КонецЕсли;
КонецПроцедуры

Процедура ДеревоПланированияДопВесаВесОбщийПриИзменении(Элемент)
	Если Элемент.Значение<>0 тогда
		ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесКоличествоОбщий = 0;
	КонецЕсли;
	
	Если ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесКоличествоОбщий <> 0 или ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесОбщий <> 0 тогда
		ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.Отслеживать = истина;
	КонецЕсли;
	//ИзменитьСтроки(ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока,ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока);
КонецПроцедуры

Процедура  ИзменитьСтроки(строка,РодСтрока)
	Если строка.Строки.Количество() = 0 тогда
		строка.Отслеживать = РодСтрока.Отслеживать;
		строка.ВесОбщий = РодСтрока.ВесОбщий;
		строка.ВесКоличествоОбщий = РодСтрока.ВесКоличествоОбщий;
		строка.ВесМосква =  РодСтрока.ВесМосква;
		строка.ВесПодмосковье = РодСтрока.ВесПодмосковье;
		строка.ВесЦФО= РодСтрока.ВесЦФО;
		строка.ВесСевер= РодСтрока.ВесСевер;
		//строка.ВесЮг = РодСтрока.ВесЮг;
		строка.ВесИнтернетМагазины = РодСтрока.ВесИнтернетМагазины;
		строка.ВесПоволжье= РодСтрока.ВесПоволжье;
		строка.ВесКорпКлиенты= РодСтрока.ВесКорпКлиенты;
		строка.ВесТендеры = РодСтрока.ВесТендеры;
		строка.ВесФилиалРнД = РодСтрока.ВесФилиалРнД;
		строка.ВесФилиалСпб = РодСтрока.ВесФилиалСпб;
		строка.ВесФилиалЕкат= РодСтрока.ВесФилиалЕкат;
		строка.ВесФилиалТольятти= РодСтрока.ВесФилиалТольятти;
		строка.ВесБеларусь= РодСтрока.ВесБеларусь;
		строка.ВесКлючевые= РодСтрока.ВесКлючевые;
	иначе
		Для каждого стр из строка.Строки цикл
			Если стр.ТоварнаяГруппа = строка.ТоварнаяГруппа
				и стр.НоменклатурнаяГруппаПоказатели = строка.НоменклатурнаяГруппаПоказатели
				и стр.Производитель = строка.Производитель тогда
				стр.Отслеживать = строка.Отслеживать;
				стр.ВесОбщий = строка.ВесОбщий;
				стр.ВесКоличествоОбщий = строка.ВесКоличествоОбщий;
				стр.ВесМосква =  строка.ВесМосква;
				стр.ВесПодмосковье = строка.ВесПодмосковье;
				стр.ВесЦФО= строка.ВесЦФО;
				стр.ВесСевер= строка.ВесСевер;
				//стр.ВесЮг = строка.ВесЮг;
				стр.ВесИнтернетМагазины = строка.ВесИнтернетМагазины;
				стр.ВесПоволжье= строка.ВесПоволжье;
				стр.ВесКорпКлиенты= строка.ВесКорпКлиенты;
				стр.ВесТендеры = строка.ВесТендеры;
				стр.ВесФилиалРнД = строка.ВесФилиалРнД;
				стр.ВесФилиалСпб = строка.ВесФилиалСпб;
				стр.ВесФилиалЕкат= строка.ВесФилиалЕкат;
				стр.ВесФилиалТольятти= строка.ВесФилиалТольятти;
				стр.ВесБеларусь = строка.ВесБеларусь;
				стр.ВесКлючевые= строка.ВесКлючевые;
			КонецЕсли;
			изменитьСтроки(стр,Строка);
		КонецЦикла
	КонецЕсли;
КонецПроцедуры

Процедура кнПроставитьОдинаковыеВесаНажатие(Элемент)
	ПроставитьОдинаковыеВеса(ЭлементыФормы.ДеревоПланированияДопВеса.Значение);
  //  ИзменитьСтроки(ЭлементыФормы.ДеревоПланированияДопВеса.Значение,ЭлементыФормы.ДеревоПланированияДопВеса.Значение);
	ПересчитатьПодвал();
КонецПроцедуры

Процедура ПроставитьОдинаковыеВеса(строки)
	Для каждого стр из строки.Строки цикл
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа)  тогда
			Если стр.ВесОбщий<>0 и стр.ВесОбщий <> Null тогда
				вес = стр.ВесОбщий;
			иначе
				вес = стр.ВесКоличествоОбщий;
			КонецЕсли;
			Если вес = NULL тогда
				вес = 0;
			КонецЕсли;
			
			стр.ВесМосква           = вес;
			стр.ВесПодмосковье      = вес;
			стр.ВесЦФО              = вес;
			стр.ВесСевер            = вес;
			//стр.ВесЮг               = вес;
			стр.ВесИнтернетМагазины = вес;
			стр.ВесПоволжье         = вес;
			стр.ВесКорпКлиенты      = вес;
			стр.ВесТендеры          = вес;
			стр.ВесФилиалРнД        = вес;
			стр.ВесФилиалСпб        = вес;
			стр.ВесФилиалЕкат       = вес;
			стр.ВесФилиалТольятти   = вес;
			стр.ВесБеларусь         = вес;
			стр.ВесКлючевые         = вес;
		КонецЕсли;
		Если стр.Строки.Количество()=0 тогда
		иначе
			ПроставитьОдинаковыеВеса(стр);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДеревоПланированияДопВесаВесЦФОПриИзменении(Элемент)
	ПересчитатьПодвал();	
КонецПроцедуры

Процедура ПересчитатьПодвал()
	структураПодвал = новый структура("ВесОбщий,ВесКоличествоОбщий,ВесМосква,ВесПодмосковье,ВесЦФО,ВесСевер,ВесЮг,ВесИнтернетМагазины,ВесПоволжье,ВесКорпКлиенты,ВесТендеры,ВесФилиалРнД,ВесФилиалСпб,ВесФилиалЕкат,ВесБеларусь,ВесКлючевые, ВесФилиалТольятти",
	                                          0,                 0,        0,             0,     0,       0,    0,                  0,          0,             0,          0,          0,           0,            0,          0,         0,            0);
											  
	РассчитатьПодвал(ЭлементыФормы.ДеревоПланированияДопВеса.Значение,структураПодвал);
	
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.Общий.ТекстПодвала = структураПодвал.ВесОбщий+структураПодвал.ВесКоличествоОбщий;
	
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесИнтернетМагазины.ТекстПодвала = структураПодвал.ВесИнтернетМагазины;
	//ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесКоличествоОбщий.ТекстПодвала = структураПодвал.ВесКоличествоОбщий;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесКорпКлиенты.ТекстПодвала = структураПодвал.ВесКорпКлиенты;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесМосква.ТекстПодвала = структураПодвал.ВесМосква;
	//ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесОбщий.ТекстПодвала = структураПодвал.ВесОбщий;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесПоволжье.ТекстПодвала = структураПодвал.ВесПоволжье;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесПодмосковье.ТекстПодвала = структураПодвал.ВесПодмосковье;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесСевер.ТекстПодвала = структураПодвал.ВесСевер;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесТендеры.ТекстПодвала = структураПодвал.ВесТендеры;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесФилиалЕкат.ТекстПодвала = структураПодвал.ВесФилиалЕкат;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесФилиалТольятти.ТекстПодвала = структураПодвал.ВесФилиалТольятти;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесФилиалРнД.ТекстПодвала = структураПодвал.ВесФилиалРнД;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесФилиалСпб.ТекстПодвала = структураПодвал.ВесФилиалСпб;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесЦФО.ТекстПодвала = структураПодвал.ВесЦФО;
	//ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесЮг.ТекстПодвала = структураПодвал.ВесЮг;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесБеларусь.ТекстПодвала = структураПодвал.ВесБеларусь;
	ЭлементыФормы.ДеревоПланированияДопВеса.Колонки.ВесКлючевые.ТекстПодвала = структураПодвал.ВесКлючевые;
КонецПроцедуры

Процедура РассчитатьПодвал(Строка,структураП)
	Для каждого стр из строка.Строки цикл
		Если стр.Строки.Количество()=0 тогда
			структураП.ВесОбщий = структураП.ВесОбщий+?(стр.ВесОбщий=неопределено или стр.ВесОбщий=null,0,стр.ВесОбщий);
			структураП.ВесКоличествоОбщий = структураП.ВесКоличествоОбщий+?(стр.ВесКоличествоОбщий=неопределено или стр.ВесКоличествоОбщий=null,0,стр.ВесКоличествоОбщий);
			структураП.ВесМосква = структураП.ВесМосква+?(стр.ВесМосква=неопределено или стр.ВесМосква=null,0,стр.ВесМосква);
			структураП.ВесПодмосковье = структураП.ВесПодмосковье+?(стр.ВесПодмосковье=неопределено или стр.ВесПодмосковье=null,0,стр.ВесПодмосковье);
			структураП.ВесЦФО = структураП.ВесЦФО+?(стр.ВесЦФО=неопределено или стр.ВесЦФО=null,0,стр.ВесЦФО);
			структураП.ВесСевер = структураП.ВесСевер+?(стр.ВесСевер=неопределено или стр.ВесСевер=null,0,стр.ВесСевер);
			//структураП.ВесЮг = структураП.ВесЮг+?(стр.ВесЮг=неопределено или стр.ВесЮг=null,0,стр.ВесЮг);
			структураП.ВесИнтернетМагазины = структураП.ВесИнтернетМагазины+?(стр.ВесИнтернетМагазины=неопределено или стр.ВесИнтернетМагазины=null,0,стр.ВесИнтернетМагазины);
			структураП.ВесПоволжье = структураП.ВесПоволжье+?(стр.ВесПоволжье=неопределено или стр.ВесПоволжье=null,0,стр.ВесПоволжье);
			структураП.ВесКорпКлиенты = структураП.ВесКорпКлиенты+?(стр.ВесКорпКлиенты=неопределено или стр.ВесКорпКлиенты=null,0,стр.ВесКорпКлиенты);
			структураП.ВесТендеры = структураП.ВесТендеры+?(стр.ВесТендеры=неопределено или стр.ВесТендеры=null,0,стр.ВесТендеры);
			структураП.ВесФилиалРнД = структураП.ВесФилиалРнД+?(стр.ВесФилиалРнД=неопределено или стр.ВесФилиалРнД=null,0,стр.ВесФилиалРнД);
			структураП.ВесФилиалСпб = структураП.ВесФилиалСпб+?(стр.ВесФилиалСпб=неопределено или стр.ВесФилиалСпб=null,0,стр.ВесФилиалСпб);
			структураП.ВесФилиалЕкат = структураП.ВесФилиалЕкат+?(стр.ВесФилиалЕкат=неопределено или стр.ВесФилиалЕкат=null,0,стр.ВесФилиалЕкат);
			структураП.ВесФилиалТольятти = структураП.ВесФилиалТольятти+?(стр.ВесФилиалТольятти=неопределено или стр.ВесФилиалТольятти=null,0,стр.ВесФилиалТольятти);
			структураП.ВесБеларусь = структураП.ВесБеларусь+?(стр.ВесБеларусь=неопределено или стр.ВесБеларусь=null,0,стр.ВесБеларусь);
			структураП.ВесКлючевые = структураП.ВесКлючевые+?(стр.ВесКлючевые=неопределено или стр.ВесКлючевые=null,0,стр.ВесКлючевые);
		иначе
			структураП.ВесОбщий = структураП.ВесОбщий+?(стр.ВесОбщий=неопределено или стр.ВесОбщий=null,0,стр.ВесОбщий);
			структураП.ВесКоличествоОбщий = структураП.ВесКоличествоОбщий+?(стр.ВесКоличествоОбщий=неопределено или стр.ВесКоличествоОбщий=null,0,стр.ВесКоличествоОбщий);
			структураП.ВесМосква = структураП.ВесМосква+?(стр.ВесМосква=неопределено или стр.ВесМосква=null,0,стр.ВесМосква);
			структураП.ВесПодмосковье = структураП.ВесПодмосковье+?(стр.ВесПодмосковье=неопределено или стр.ВесПодмосковье=null,0,стр.ВесПодмосковье);
			структураП.ВесЦФО = структураП.ВесЦФО+?(стр.ВесЦФО=неопределено или стр.ВесЦФО=null,0,стр.ВесЦФО);
			структураП.ВесСевер = структураП.ВесСевер+?(стр.ВесСевер=неопределено или стр.ВесСевер=null,0,стр.ВесСевер);
			//структураП.ВесЮг = структураП.ВесЮг+?(стр.ВесЮг=неопределено или стр.ВесЮг=null,0,стр.ВесЮг);
			структураП.ВесИнтернетМагазины = структураП.ВесИнтернетМагазины+?(стр.ВесИнтернетМагазины=неопределено или стр.ВесИнтернетМагазины=null,0,стр.ВесИнтернетМагазины);
			структураП.ВесПоволжье = структураП.ВесПоволжье+?(стр.ВесПоволжье=неопределено или стр.ВесПоволжье=null,0,стр.ВесПоволжье);
			структураП.ВесКорпКлиенты = структураП.ВесКорпКлиенты+?(стр.ВесКорпКлиенты=неопределено или стр.ВесКорпКлиенты=null,0,стр.ВесКорпКлиенты);
			структураП.ВесТендеры = структураП.ВесТендеры+?(стр.ВесТендеры=неопределено или стр.ВесТендеры=null,0,стр.ВесТендеры);
			структураП.ВесФилиалРнД = структураП.ВесФилиалРнД+?(стр.ВесФилиалРнД=неопределено или стр.ВесФилиалРнД=null,0,стр.ВесФилиалРнД);
			структураП.ВесФилиалСпб = структураП.ВесФилиалСпб+?(стр.ВесФилиалСпб=неопределено или стр.ВесФилиалСпб=null,0,стр.ВесФилиалСпб);
			структураП.ВесФилиалЕкат = структураП.ВесФилиалЕкат+?(стр.ВесФилиалЕкат=неопределено или стр.ВесФилиалЕкат=null,0,стр.ВесФилиалЕкат);
			структураП.ВесФилиалТольятти = структураП.ВесФилиалТольятти+?(стр.ВесФилиалТольятти=неопределено или стр.ВесФилиалТольятти=null,0,стр.ВесФилиалТольятти);
			структураП.ВесБеларусь = структураП.ВесБеларусь+?(стр.ВесБеларусь=неопределено или стр.ВесБеларусь=null,0,стр.ВесБеларусь);
			структураП.ВесКлючевые = структураП.ВесКлючевые+?(стр.ВесКлючевые=неопределено или стр.ВесКлючевые=null,0,стр.ВесКлючевые);
			
			РассчитатьПодвал(стр,структураП);
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Процедура ДеревоПланированияДопВесаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если найти(Элемент.ТекущаяКолонка.Имя,"Вес")>0 тогда
			ПересчитатьПодвал();
		 //ИзменитьСтроки(ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока,ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделенийМенеджерНачалоВыбора(Элемент, СтандартнаяОбработка)
		СтандартнаяОбработка =  ложь;	
	Запрос = новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	Пользователи.Ссылка
	              |ИЗ
	              |	Справочник.Пользователи КАК Пользователи
	              |ГДЕ
	              |	Пользователи.НаправлениеПродаж = &НаправлениеПродаж
	              |	И Пользователи.ЭтоГруппа = ЛОЖЬ
	              |	И Пользователи.ПометкаУдаления = ЛОЖЬ
	              |	И Пользователи.Родитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
				  Запрос.УстановитьПараметр("НаправлениеПродаж",ТекущееНаправлениеПродаж);
				  Рез = Запрос.Выполнить().Выбрать();
				  СписокПользователей = Новый СписокЗначений;
				  Пока Рез.Следующий() Цикл
					  СписокПользователей.Добавить(Рез.Ссылка);
				  КонецЦикла;
	
	ФормаВыбора = Справочники.Пользователи.ПолучитьФормуВыбора(,Элемент,);
    
    ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Ссылка.Доступность = Ложь;
    ФормаВыбора.СправочникСписок.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
    ФормаВыбора.СправочникСписок.Отбор.Ссылка.Значение = СписокПользователей;
    ФормаВыбора.СправочникСписок.Отбор.Ссылка.Использование = Истина;
    
    //ФормаВыбора.ПараметрТекущаяСтрока = Фабрика;//текущее значение реквизита "Фабрика"
    
    //ФормаВыбора.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Ложь;
    
    ФормаВыбора.Открыть();// Вставить содержимое обработчика.

КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделенийПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	//Элемент.ТекущаяСтрока.НаправлениеПродаж = ТекущееНаправлениеПродаж;
	//Элемент.ТекущаяСтрока.МесяцПланирования = НачалоПериода;
КонецПроцедуры

Процедура КоманднаяПанель5кнУтвердитьНО(Кнопка)
	СписокНаправлений = новый СписокЗначений;
	ДобавитьВСписокНаправлений(ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений.Значение,СписокНаправлений);
	
	Для каждого Направление из СписокНаправлений Цикл
		
		НачатьТранзакцию();
		НаборЗаписей = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.месяцПланирования.Установить(НачалоПериода);
		НаборЗаписей.Отбор.НаправлениеПродаж.Установить(Направление.Значение);
		НаборЗаписей.Прочитать();
		Для каждого Запись из НаборЗаписей цикл
			Запись.ДатаУтвержденияНО = ТекущаяДата();
		КонецЦикла;
		НаборЗаписей.Записать(истина);
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1Утвердить(Кнопка)
	НачатьТранзакцию();
	НаборЗаписей = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.месяцПланирования.Установить(НачалоПериода);
	НаборЗаписей.Прочитать();
	Для каждого Запись из НаборЗаписей цикл
		Запись.Утвержден = Истина;
	КонецЦикла;
	НаборЗаписей.Записать(истина);
	ЗафиксироватьТранзакцию();	
КонецПроцедуры

Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма);
КонецПроцедуры

Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ПериодРегистрации = ДобавитьМесяц(ПериодРегистрации, Направление);
	Элемент.Значение = ДатаКакМесяцПредставление(ПериодРегистрации);
	
	НачалоПериода = НачалоМесяца(ПериодРегистрации);
	КонецПериода = КонецМесяца(ПериодРегистрации);

КонецПроцедуры

Процедура ПриОткрытии()
	//ПолучитьНастройки(НачалоМесяца(ТекущаяДата()));
	Если ПериодРегистрации = '00010101000000' Тогда
		//ПериодРегистрации = НачалоМесяца(КонецМесяца(ТекущаяДата())+1);
		ПериодРегистрации = НачалоМесяца(ТекущаяДата());

	КонецЕсли;
	// Заполним реквизит формы МесяцСтрока.
	МесяцСтрока = ДатаКакМесяцПредставление(ПериодРегистрации);
	
	НачалоПериода = НачалоМесяца(ПериодРегистрации);
	КонецПериода = КонецМесяца(ПериодРегистрации);
	
	ПериодПолугодовогоПланирования = ПолучитьПериодПолугодовогоПланирования(НачалоПериода);

	
	//ЭтоМенеджер = Истина;
	ЭтоМенеджер = истина;
	ЭтоНО = ложь;
	ЭтоСерков = ложь;

	МенеджерП = глТекущийПользователь;
	//ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТолькоПросмотр = истина;
	НаправлениеПродаж.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	НаправленияПродаж.Ссылка
	             |ИЗ
	             |	Справочник.НаправленияПродаж КАК НаправленияПродаж
	             |ГДЕ
	             |	НаправленияПродаж.ОтветственныйЗаПланирование = &ОтветственныйЗаПланирование";
				 Запрос.УстановитьПараметр("ОтветственныйЗаПланирование",глТекущийПользователь);
				 Рез = Запрос.Выполнить().Выбрать();
				 
				 Пока Рез.Следующий() Цикл
					 НаправлениеПродаж.Добавить(Рез.Ссылка);
				 КонецЦикла;
				 
				 Если  глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Марешева И.Г.") тогда
					 Если НаправлениеПродаж.НайтиПоЗначению(Справочники.НаправленияПродаж.НайтиПоКоду("4")) = неопределено тогда
						 НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду("4"));
					 КонецЕсли;
					 
					 Если НаправлениеПродаж.НайтиПоЗначению(Справочники.НаправленияПродаж.НайтиПоКоду("5")) = неопределено тогда
						 НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду("5"));
					 КонецЕсли;
					 
					 Если НаправлениеПродаж.НайтиПоЗначению(Справочники.НаправленияПродаж.НайтиПоКоду("6")) = неопределено тогда
						 НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду("6"));
					 КонецЕсли;
					 
					 Если НаправлениеПродаж.НайтиПоЗначению(Справочники.НаправленияПродаж.ФилиалТл) = неопределено тогда
						 НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.ФилиалТл);
					 КонецЕсли;
				 КонецЕсли;
				 
				 Если НаправлениеПродаж.Количество()>0 тогда
					ЭтоМенеджер = ложь;
					ЭтоНО = истина;
				КонецЕсли;
				Если РольДоступна("ПравоЗавершенияРаботыПользователей") или глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Серков") тогда
					ЭтоСерков = истина;
					ЭтоМенеджер = ложь;
					ЭтоНО = ложь;

				КонецЕсли;
				
				ЭлементыФормы.Панель.Страницы.ПланированиеМенеджера.Доступность = ЭтоМенеджер или ЭтоСерков или ЭтоНО;
				ЭлементыФормы.Панель.Страницы.ПланированиеНО2.Доступность = ЭтоНО или ЭтоСерков;
				ЭлементыФормы.Панель.Страницы.ПланированиеСерков.Доступность = ЭтоСерков;
				ЭлементыФормы.Панель.Страницы.ПланПоНаправлениямВеса.Доступность = ЭтоСерков;
				ЭлементыФормы.НаправлениеПродаж.Доступность = ЭтоСерков;
				ЭлементыФормы.МенеджерП.Доступность = ЭтоСерков;
				
				
				//видимость
				ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактДП6МесЭтогоГода.Видимость = ложь; 
				ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактДП6МесПрошлогоГода.Видимость = ложь; 
				ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактДППериодПланированияЭтогоГода.Видимость = ложь;
				ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактДППериодПланированияПрошлогоГода.Видимость = ложь;
				ЭлементыФормы.ПланОтделаРазвития.Колонки.ПоказательИтоговыйПланПредыдущие.Видимость = ложь;
				
				ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.Показатель6месЭтогоГода.Видимость = ложь; 
				ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.Показатель6месПрошлогоГода.Видимость = ложь; 
				ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПериодПланированияЭтогоГода.Видимость = ложь; 
				ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПериодПланированияПрошлогоГода.Видимость = ложь; 
				
				ЭлементыФормы.ПланированиеСерковМенеджеры.Колонки.Показатель6месЭтогоГода.Видимость = ложь; 
				ЭлементыФормы.ПланированиеСерковМенеджеры.Колонки.Показатель6месПрошлогоГода.Видимость = ложь; 
				ЭлементыФормы.ПланированиеСерковМенеджеры.Колонки.ПоказательПериодПланированияЭтогоГода.Видимость = ложь; 
				ЭлементыФормы.ПланированиеСерковМенеджеры.Колонки.ПоказательПериодПланированияПрошлогоГода.Видимость = ложь; 
	

КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделенийВесПриИзменении(Элемент)
	Если ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений.ТекущаяСтрока.ВесКоличество <> 0 или ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений.ТекущаяСтрока.Вес <> 0 тогда
		ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений.ТекущаяСтрока.Отслеживать = истина;
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделенийВесКоличествоПриИзменении(Элемент)
	Если ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений.ТекущаяСтрока.ВесКоличество <> 0 или ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений.ТекущаяСтрока.Вес <> 0 тогда
		ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений.ТекущаяСтрока.Отслеживать = истина;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПериодПолугодовогоПланирования(ДатаНач)
	    Запрос = новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	ПериодыПланирования.Ссылка
		             |ПОМЕСТИТЬ втПериоды
		             |ИЗ
		             |	Справочник.ПериодыПланирования КАК ПериодыПланирования
		             |ГДЕ
		             |	ПериодыПланирования.ДатаНачала <= &Дата
		             |	И ПериодыПланирования.ДатаКонца >= &Дата
		             |	И ПериодыПланирования.ПометкаУдаления = ЛОЖЬ
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ РАЗЛИЧНЫЕ
		             |	втПериоды.Ссылка
		             |ИЗ
		             |	РегистрСведений.ПолугодовойПланДепертаментаПродаж КАК ПолугодовойПланДепертаментаПродаж
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПериоды КАК втПериоды
		             |		ПО ПолугодовойПланДепертаментаПродаж.ПериодПланирования = втПериоды.Ссылка";
					 Запрос.УстановитьПараметр("Дата", ДатаНач);
					 Рез = Запрос.Выполнить().Выбрать();
					 Пока рез.Следующий() Цикл
						 Возврат Рез.Ссылка;
					 КонецЦикла;
					 Возврат Справочники.ПериодыПланирования.ПустаяСсылка();
КонецФункции

Процедура СкопироватьПоказателиМенеджерам2(строкаМенеджер,пНаправлениеПродаж)
	Отбор = новый Структура("НаправлениеПродаж");
	отбор.НаправлениеПродаж =  пНаправлениеПродаж;
	НайденныеСтрокиНаправления = ПланированиеНООТРДПНесколькоПодразделений2.Строки.НайтиСтроки(отбор,истина);
	
	Для каждого строка из НайденныеСтрокиНаправления цикл
		Если строка.Родитель  = неопределено тогда
			ЗаполнитьЗначенияСвойств(строкаМенеджер,строка);
			строкаМенеджер.МесяцПланирования = НачалоПериода;
			Для каждого стр из строка.Строки цикл
				ДобавитьПоказательДляМенеджера(строкаМенеджер,стр,пНаправлениеПродаж);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьПоказательДляМенеджера(строкаМенеджер2,стр2,пНаправлениеПродаж)
	нстр = строкаМенеджер2.Строки.Добавить();
	ЗаполнитьЗначенияСвойств(нстр,стр2);
	
	нстр.КоличествоПлан = 0;
	нстр.СуммаПлан = 0;
	нстр.КоличествоПланНО = 0;
	нстр.СуммаПланНО = 0;
//	нстр.КоличествоИтоговыйПлан = 0;
//	нстр.СуммаИтоговыйПлан = 0;
    нстр.КоличествоПланМенеджер = 0;
	нстр.СуммаПланМенеджер = 0;
	
	нстр.ПоказательПланМенеджер = 0;
	нстр.ПоказательПланНО = 0;
	нстр.ПоказательПлан = 0;

			
	нстр.МесяцПланирования = НачалоПериода;
	нстр.Менеджер = строкаМенеджер2.Менеджер;
	нстр.НаправлениеПродаж =пНаправлениеПродаж;
	Для каждого стр из стр2.Строки цикл
		ДобавитьПоказательДляМенеджера(нстр,стр,пНаправлениеПродаж);
	КонецЦикла;
КонецПроцедуры

Процедура ПланированиеНООТРДПНесколькоПодразделенийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ВесКоличество<>неопределено тогда
		Если ДанныеСтроки.ВесКоличество>0 тогда
			Если ДанныеСтроки.КоличествоПрошлыйГод<>неопределено тогда
				ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПланНО - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоИтоговыйПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			КонецЕсли;
		иначе
			Если ДанныеСтроки.СуммаПрошлыйГод<>неопределено тогда
				
				ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПланНО - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаИтоговыйПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			КонецЕсли;
		КонецЕсли;
		
		попытка
			Если ДанныеСтроки.Утвержден и ЗначениеЗаполнено(ДанныеСтроки.НаправлениеПродаж) тогда
				ОформлениеСтроки.ЦветФона=WebЦвета.БледноЗеленый;
				//Иначе
				//	Для каждого ячейка из ОформлениеСтроки.Ячейки Цикл
				//   	 Ячейка.Видимость = ложь;
				//	КонецЦикла;
			КонецЕсли;
		исключение
		КонецПопытки;
	КонецЕсли;
	
	Если  не ЗначениеЗаполнено(ДанныеСтроки.ТоварнаяГруппа) и не ЗначениеЗаполнено(ДанныеСтроки.НоменклатурнаяГруппаПоказатели) тогда
		 ДанныеСтроки.Вес = 0;
		 ДанныеСтроки.ВесКоличество = 0;
		 ДанныеСтроки.КоличествоПрошлыйГод = 0;
		 ДанныеСтроки.СуммаПрошлыйГод = 0;
		 ДанныеСтроки.КоличествоПрошлыйМесяц = 0;
		 ДанныеСтроки.СуммаПрошлыйМесяц = 0;
		 ДанныеСтроки.КоличествоПлан = 0;
		 ДанныеСтроки.СуммаПлан = 0;
		 ДанныеСтроки.ПриростПредварительного = 0;
		 ДанныеСтроки.КоличествоПланНО = 0;
		 ДанныеСтроки.СуммаПланНО = 0;
		 ДанныеСтроки.ПриростНО = 0;
		 ДанныеСтроки.КоличествоИтоговыйПлан = 0;
		 ДанныеСтроки.СуммаИтоговыйПлан = 0;
		 ДанныеСтроки.ПриростИтог = 0;
	 КонецЕсли;	
	 
	 Если (не ЗначениеЗаполнено(ДанныеСтроки.Вес) или не ЗначениеЗаполнено(ДанныеСтроки.ВесКоличество)) и ЗначениеЗаполнено(ДанныеСтроки.НаправлениеПродаж) и не ЗначениеЗаполнено(ДанныеСтроки.ТоварнаяГруппа) и не ЗначениеЗаполнено(ДанныеСтроки.НоменклатурнаяГруппаПоказатели) тогда
		 Веса = новый Структура("Вес, ВесКоличество");
		 Веса.Вес = 0;
		 Веса.ВесКоличество = 0;
		 ПолучитьВеса(Веса, ДанныеСтроки);
		 ДанныеСтроки.Вес = Веса.Вес;
		 ДанныеСтроки.ВесКоличество = Веса.ВесКоличество;
	 КонецЕсли;

КонецПроцедуры

Процедура ПолучитьВеса(Веса,Строка)
	Если Строка.Вес>0 тогда
		Веса.Вес = Веса.Вес + Строка.Вес;
	КонецЕсли;
	Если Строка.ВесКоличество>0 тогда
		Веса.ВесКоличество = Веса.ВесКоличество + Строка.ВесКоличество;
	КонецЕсли;
	
	Для каждого стр из Строка.Строки цикл
		ПолучитьВеса(Веса,Стр);
	КонецЦикла;
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделенийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ВесКоличество>0 тогда
			 ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			 ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПланНО - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			 ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоИтоговыйПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			 
		иначе
			 ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			 ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПланНО - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			 ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаИтоговыйПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
		 КонецЕсли;
		 
		// Если ДанныеСтроки.Утвержден тогда
		//	ОформлениеСтроки.ЦветФона=WebЦвета.БледноЗеленый;
		//КонецЕсли;
КонецПроцедуры

Процедура ДеревоПланированияДопВесаВесНовыйПриИзменении(Элемент)
	Если Элемент.Значение<>0 тогда
		Если ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ТипВеса = "шт." тогда
			 ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесКоличествоОбщий = Элемент.Значение;
			 ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесОбщий = 0;
		 Иначе
			 ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесОбщий = Элемент.Значение;
			 ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесКоличествоОбщий = 0;
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

Процедура ЗагрузитьПланы(ДеревоНаФормеНаправления,СчитатьДинамикуПоМенеджерам = истина)
	ЗапросРассчитываемыеНГ = Новый Запрос;
	ЗапросРассчитываемыеНГ.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	                             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	                             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	                             |ПОМЕСТИТЬ вт
	                             |ИЗ
	                             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	                             |ГДЕ
	                             |	(МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	                             |				И (МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	                             |					И МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	                             |					И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	                             |					И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы)
	                             |			ИЛИ (МесячныйПланДепортаментаПродаж.Вес > 0
	                             |				ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
	                             |				ИЛИ МесячныйПланДепортаментаПродаж.Отслеживать))
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	                             |ИЗ
	                             |	вт КАК вт
	                             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования КАК ТоварныеГруппыДляПланирования
	                             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	                             |			ПО ТоварныеГруппыДляПланирования.Ссылка = ТоварныеГруппыДляПланированияСостав.Ссылка
	                             |		ПО (вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Ссылка
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель.Родитель)
	                             |			И (вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Ссылка
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель.Родитель)
	                             |ГДЕ
	                             |	ТоварныеГруппыДляПланирования.ЭтоГруппа = ЛОЖЬ
	                             |	И вт.НоменклатурнаяГруппаПоказатели = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	                             |
	                             |ОБЪЕДИНИТЬ ВСЕ
	                             |
	                             |ВЫБРАТЬ
	                             |	вт.НоменклатурнаяГруппаПоказатели
	                             |ИЗ
	                             |	вт КАК вт
	                             |ГДЕ
	                             |	вт.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)";
	ЗапросРассчитываемыеНГ.УстановитьПараметр("МесяцПланирования", НачалоПериода);
	СписокРассчитываемыхНГ = ЗапросРассчитываемыеНГ.Выполнить().Выгрузить().ВыгрузитьКолонку("НоменклатурнаяГруппа");

	
	
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	             |	МесячныйПланДепортаментаПродаж.Вес,
	             |	МесячныйПланДепортаментаПродаж.Отслеживать,
	             |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |			ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |		ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |	КОНЕЦ КАК ВесО,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Наименование КАК ТоварнаяГруппаНаименование,
	             |	0 КАК КоличествоПрошлыйГод,
	             |	0 КАК СуммаПрошлыйГод,
	             |	0 КАК КоличествоПрошлыйМесяц,
	             |	0 КАК СуммаПрошлыйМесяц,
	             |	0 КАК ПоказательПрошлыйГод,
	             |	0 КАК ПоказательПрошлыйМесяц,
				 |	0 КАК Показатель6МесЭтогоГода,
				 |	0 КАК Показатель6МесПрошлогоГода,
				 |	0 КАК ДинамикаЗа6Месяцев,
				 |	0 КАК ПоказательПериодПланированияЭтогоГода,
				 |	0 КАК ПоказательПериодПланированияПрошлогоГода,
				 |	0 КАК ДинамикаЗаПериодПланирования,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |			ТОГДА ВЫБОР
	             |					КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |							И МесячныйПланДепортаментаПродаж.СуммаПлан = 0
	             |						ТОГДА 7
	             |					ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПлан
	             |				КОНЕЦ
	             |		ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0))
	             |	КОНЕЦ КАК ПоказательПлан,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |			ТОГДА ВЫБОР
	             |					КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |							И МесячныйПланДепортаментаПродаж.СуммаПланНО = 0
	             |						ТОГДА 7
	             |					ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |				КОНЕЦ
	             |		ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0))
	             |	КОНЕЦ КАК ПоказательПланНО,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |			ТОГДА ВЫБОР
	             |					КОГДА ВЫБОР
	             |							КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |									И МесячныйПланДепортаментаПродаж.СуммаПлан = 0
	             |								ТОГДА 7
	             |							ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |						КОНЕЦ <> 0
	             |						ТОГДА ВЫБОР
	             |								КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |										И МесячныйПланДепортаментаПродаж.СуммаПлан = 0
	             |									ТОГДА 7
	             |								ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |							КОНЕЦ
	             |					ИНАЧЕ ВЫБОР
	             |							КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |									И МесячныйПланДепортаментаПродаж.СуммаПланНО = 0
	             |								ТОГДА 7
	             |							ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |						КОНЕЦ
	             |				КОНЕЦ
	             |		ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	             |					КОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан <> 0
	             |						ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |					ИНАЧЕ МесячныйПланДепортаментаПродаж.КоличествоПланНО
	             |				КОНЕЦ КАК ЧИСЛО(15, 0))
	             |	КОНЕЦ КАК ПоказательИтоговыйПлан,
	             |	ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0)) КАК КоличествоПлан,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				И МесячныйПланДепортаментаПродаж.СуммаПлан = 0
	             |			ТОГДА 7
	             |		ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПлан
	             |	КОНЕЦ КАК СуммаПлан,
	             |	0 КАК ПриростПредварительного,
	             |	ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0)) КАК КоличествоПланНО,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				И МесячныйПланДепортаментаПродаж.СуммаПланНО = 0
	             |			ТОГДА 7
	             |		ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |	КОНЕЦ КАК СуммаПланНО,
	             |	0 КАК ПриростНО,
	             |	ВЫРАЗИТЬ(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП <> ДАТАВРЕМЯ(1, 1, 1)
	             |					ИЛИ МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан <> 0
	             |				ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |			ИНАЧЕ МесячныйПланДепортаментаПродаж.КоличествоПланНО
	             |		КОНЕЦ КАК ЧИСЛО(15, 0)) КАК КоличествоИтоговыйПлан,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП <> ДАТАВРЕМЯ(1, 1, 1)
	             |				ИЛИ МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан <> 0
	             |			ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |		ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |	КОНЕЦ КАК СуммаИтоговыйПлан,
	             |	0 КАК ПриростИтог,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |			ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланМенеджер
	             |		ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланМенеджер КАК ЧИСЛО(15, 0))
	             |	КОНЕЦ КАК ПоказательПланыМенеджеров,
	             |	0 КАК ПриростПланыМенеджеров,
	             |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП КАК ДатаУтвержденияРДП,
	             |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО КАК ДатаУтвержденияНО,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	             |			ТОГДА 1000
	             |		ИНАЧЕ ВЫБОР
	             |				КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |					ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |				ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |			КОНЕЦ
	             |	КОНЕЦ КАК Сортировка,
	             |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияМенеджером,
	             |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияВесов КАК ДатаУтвержденияВесов
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ПустаяСсылка)
	             |	И (МесячныйПланДепортаментаПродаж.Отслеживать
	             |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
	             |			ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)
	             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	             |	И 99 = 99
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	НаправлениеПродаж,
	            // |	Сортировка УБЫВ,
	             |	ТоварнаяГруппаНаименование,
	             |	НоменклатурнаяГруппаПоказатели
	             |ИТОГИ
	             |	СУММА(ВесО),
	             |	МАКСИМУМ(ДатаУтвержденияРДП),
	             |	МАКСИМУМ(ДатаУтвержденияНО),
	             |	МАКСИМУМ(ДатаУтвержденияВесов)
	             |ПО
	             |	НаправлениеПродаж
	             |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("МесяцПланирования", НачалоПериода);
	Запрос.УстановитьПараметр("НачПериодаПрошлогоМесяца", ДобавитьМесяц(НачалоПериода,-1));
	Запрос.УстановитьПараметр("КонПериодаПрошлогоМесяца", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-1)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачПрошлогоПериода", ДобавитьМесяц(НачалоПериода,-12));
	Запрос.УстановитьПараметр("КонПрошлогоПериода", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-12)), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НачПериода6МесЭтогоГода",ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонПериода6МесЭтогоГода", Новый Граница(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НачПериода6МесПрошлогоГода",ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонПериода6МесПрошлогоГода", Новый Граница(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НачПериодаПериодПланированияЭтогоГода",ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
	Запрос.УстановитьПараметр("КонПериодаПериодПланированияЭтогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияЭтогоГода(), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НачПериодаПериодПланированияПрошлогоГода",ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
	Запрос.УстановитьПараметр("КонПериодаПериодПланированияПрошлогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);
	Запрос.УстановитьПараметр("ПДЗ", СпрПДЗ);
	
	Запрос.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
	Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
	КонецЕсли;
	
	
	Результат = Запрос.Выполнить();
	ДеревоНаФормеНаправления = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//
	
	//тз = Результат.Выгрузить();
	//тз.ВыбратьСтроку();

	Если ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.ПланированиеНО2 тогда
		//Планы менеджеров
		Запрос.Текст="ВЫБРАТЬ
		             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
		             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
		             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
		             |	СУММА(ВЫБОР
		             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
		             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланМенеджер
		             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланМенеджер КАК ЧИСЛО(15, 0))
		             |		КОНЕЦ) КАК ПоказательПланыМенеджеров
		             |ИЗ
		             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		             |ГДЕ
		             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
		             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ПустаяСсылка)
		             |	И (МесячныйПланДепортаментаПродаж.Отслеживать
		             |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
		             |			ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)
		             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
		             |	И МесячныйПланДепортаментаПродаж.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		             |	И 99 = 99
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
		             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
		             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж
		             |
		             |УПОРЯДОЧИТЬ ПО
		             |	НаправлениеПродаж,
		             |	НоменклатурнаяГруппаПоказатели
		             |АВТОУПОРЯДОЧИВАНИЕ";
		Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
		КонецЕсли;
		Менеджеров = Запрос.Выполнить().Выгрузить();
		//пдз должно быть среднее
		Запрос.Текст="ВЫБРАТЬ
		             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
		             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
		             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
		             |	СРЕДНЕЕ(ВЫБОР
		             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
		             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланМенеджер
		             |			ИНАЧЕ МесячныйПланДепортаментаПродаж.КоличествоПланМенеджер
		             |		КОНЕЦ) КАК ПоказательПланыМенеджеров
		             |ИЗ
		             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		             |ГДЕ
		             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
		             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ПустаяСсылка)
		             |	И (МесячныйПланДепортаментаПродаж.Отслеживать
		             |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
		             |			ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)
		             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
		             |	И МесячныйПланДепортаментаПродаж.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		             |	И 99 = 99
		             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа = &ПДЗ
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
		             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
		             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж
		             |
		             |УПОРЯДОЧИТЬ ПО
		             |	НаправлениеПродаж,
		             |	НоменклатурнаяГруппаПоказатели
		             |АВТОУПОРЯДОЧИВАНИЕ";
					 
					 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
						 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
					 КонецЕсли;

        ПДЗ = Запрос.Выполнить().Выгрузить();
		
		отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
		Для каждого стр из ПДЗ цикл
			ЗаполнитьЗначенияСвойств(отбор, стр);
			НайденныеСтроки = Менеджеров.НайтиСтроки(отбор);
			Для каждого эл из НайденныеСтроки цикл
				эл.ПоказательПланыМенеджеров = стр.ПоказательПланыМенеджеров;
			КонецЦикла;
		КонецЦикла;
		//пдз
		
		Для каждого стр из Менеджеров Цикл
			отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
			отбор.НоменклатурнаяГруппаПоказатели = стр.НоменклатурнаяГруппаПоказатели;//Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
				отбор.ТоварнаяГруппа = стр.ТоварнаяГруппа;
			иначе
				//Продолжить;
				отбор.ТоварнаяГруппа = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВРублях;
			КонецЕсли;
			
			НайденныеСтроки = ДеревоНаФормеНаправления.Строки.НайтиСтроки(отбор,истина);
			Для каждого эл из НайденныеСтроки цикл
				эл.ПоказательПланыМенеджеров = стр.ПоказательПланыМенеджеров;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
				 
	//предварительные планы
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |	СУММА(ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0))) КАК КоличествоПлан,
	             |	СУММА(МесячныйПланДепортаментаПродаж.СуммаПлан) КАК СуммаПлан,
	             |	СУММА(ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0))) КАК КоличествоПланНО,
	             |	СУММА(МесячныйПланДепортаментаПродаж.СуммаПланНО) КАК СуммаПланНО,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ) КАК ПоказательПлан,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ) КАК ПоказательПланНО
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ТоварныеГруппыДляпланирования.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |	И 99 = 99
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа
	             |ИТОГИ
	             |	СУММА(КоличествоПлан),
	             |	СУММА(СуммаПлан),
	             |	СУММА(КоличествоПланНО),
	             |	СУММА(СуммаПланНО),
	             |	СУММА(ПоказательПлан),
	             |	СУММА(ПоказательПланНО)
	             |ПО
	             |	НаправлениеПродаж,
	             |	ТоварнаяГруппа ИЕРАРХИЯ";
				 
				 Запрос.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
				 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
					 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
				 КонецЕсли;
				 
	Предварительные = Запрос.Выполнить().Выгрузить();
	//пдз
	//Предварительные.ВыбратьСтроку();
	отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	Для каждого стр из Предварительные Цикл
		отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
		отбор.НоменклатурнаяГруппаПоказатели = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			отбор.ТоварнаяГруппа = стр.ТоварнаяГруппа;
		иначе
			//Продолжить;
			отбор.ТоварнаяГруппа = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВРублях;
		КонецЕсли;
		
		НайденныеСтроки = ДеревоНаФормеНаправления.Строки.НайтиСтроки(отбор,истина);
		Для каждого эл из НайденныеСтроки цикл
			Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
				Если стр.ТоварнаяГруппа.СуммовоеПланирование тогда
					Если не ЗначениеЗаполнено(эл.СуммаПлан) тогда
						эл.СуммаПлан = стр.СуммаПлан;
					КонецЕсли;
					Если не ЗначениеЗаполнено(эл.СуммаПланНО) тогда
						эл.СуммаПланНО = стр.СуммаПланНО;
					КонецЕсли;
					
					Если не ЗначениеЗаполнено(эл.СуммаИтоговыйПлан) тогда
						эл.СуммаИтоговыйПлан = стр.СуммаПланНО;
					КонецЕсли;

				Иначе
					Если не ЗначениеЗаполнено(эл.КоличествоПлан) тогда
						эл.КоличествоПлан = стр.КоличествоПлан;
					КонецЕсли;
					
					Если не ЗначениеЗаполнено(эл.КоличествоПланНО) тогда
						эл.КоличествоПланНО = стр.КоличествоПланНО;
					КонецЕсли;
					
					Если не ЗначениеЗаполнено(эл.КоличествоИтоговыйПлан) тогда
						эл.КоличествоИтоговыйПлан = стр.КоличествоПланНО;
					КонецЕсли;
					
				КонецЕсли;
				
				Если не ЗначениеЗаполнено(эл.ПоказательПланНО) тогда
					эл.ПоказательПланНО = стр.ПоказательПланНО;
				КонецЕсли;
				Если не ЗначениеЗаполнено(эл.ПоказательПлан) тогда
					эл.ПоказательПлан = стр.ПоказательПлан;
				КонецЕсли;
				
				Если не ЗначениеЗаполнено(эл.ПоказательИтоговыйПлан) тогда
					эл.ПоказательИтоговыйПлан = стр.ПоказательПланНО;
				КонецЕсли;

			Иначе
				Если не ЗначениеЗаполнено(эл.СуммаПлан) тогда
					эл.СуммаПлан = стр.СуммаПлан;
				КонецЕсли;
				Если не ЗначениеЗаполнено(эл.СуммаПланНО) тогда
					эл.СуммаПланНО = стр.СуммаПланНО;
				КонецЕсли;
				
				Если не ЗначениеЗаполнено(эл.СуммаИтоговыйПлан) тогда
					эл.СуммаИтоговыйПлан = стр.СуммаПланНО;
				КонецЕсли;

				Если не ЗначениеЗаполнено(эл.ПоказательПланНО) тогда
					эл.ПоказательПланНО = стр.СуммаПланНО;
				КонецЕсли;
				Если не ЗначениеЗаполнено(эл.ПоказательПлан) тогда
					эл.ПоказательПлан = стр.СуммаПлан;
				КонецЕсли;
				
				Если не ЗначениеЗаполнено(эл.ПоказательИтоговыйПлан) тогда
					эл.ПоказательИтоговыйПлан = стр.СуммаПланНО;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	//факт прошлых периодов
	Запрос.Текст="ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования
	             |ПОМЕСТИТЬ втПродажиПрошлыйГод
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПрошлогоПериода,
	             |			&КонПрошлогоПериода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования
	             |ПОМЕСТИТЬ втПродажиПрошлыйМесяц
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПрошлогоМесяца,
	             |			&КонПериодаПрошлогоМесяца,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования
	             |ПОМЕСТИТЬ втПродажи6МесЭтогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода6МесЭтогоГода,
	             |			&КонПериода6МесЭтогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования
	             |ПОМЕСТИТЬ втПродажи6МесПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода6МесПрошлогоГода,
	             |			&КонПериода6МесПрошлогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования
	             |ПОМЕСТИТЬ втПродажиПериодПланированияЭтогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПериодПланированияЭтогоГода,
	             |			&КонПериодаПериодПланированияЭтогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования
	             |ПОМЕСТИТЬ втПродажиПериодПланированияПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПериодПланированияПрошлогоГода,
	             |			&КонПериодаПериодПланированияПрошлогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И НЕ ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	А.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж КАК НаправлениеПродаж,
	             |	А.НоменклатураНоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	СУММА(А.КоличествоОборотПрошлыйГод) КАК КоличествоПрошлыйГод,
	             |	СУММА(А.СтоимостьОборотПрошлыйГод) КАК СуммаПрошлыйГод,
	             |	А.ТоварнаяГруппаПланирования,
	             |	СУММА(А.КоличествоОборотПрошлыйМесяц) КАК КоличествоПрошлыйМесяц,
	             |	СУММА(А.СтоимостьОборотПрошлыйМесяц) КАК СуммаПрошлыйМесяц,
	             |	А.ТоварнаяГруппаПланирования.Родитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПрошлыйГод
	             |			ИНАЧЕ А.КоличествоОборотПрошлыйГод
	             |		КОНЕЦ) КАК ПоказательПрошлыйГод,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПрошлыйМесяц
	             |			ИНАЧЕ А.КоличествоОборотПрошлыйМесяц
	             |		КОНЕЦ) КАК ПоказательПрошлыйМесяц,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборот6МесЭтогоГода
	             |			ИНАЧЕ А.КоличествоОборот6МесЭтогоГода
	             |		КОНЕЦ) КАК Показатель6МесЭтогоГода,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборот6МесПрошлогоГода
	             |			ИНАЧЕ А.КоличествоОборот6МесПрошлогоГода
	             |		КОНЕЦ) КАК Показатель6МесПрошлогоГода,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПериодПланированияЭтогоГода
	             |			ИНАЧЕ А.КоличествоОборотПериодПланированияЭтогоГода
	             |		КОНЕЦ) КАК ПоказательПериодПланированияЭтогоГода,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПериодПланированияПрошлогоГода
	             |			ИНАЧЕ А.КоличествоОборотПериодПланированияПрошлогоГода
	             |		КОНЕЦ) КАК ПоказательПериодПланированияПрошлогоГода
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		втПродажиПрошлыйГод.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж КАК ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж,
	             |		втПродажиПрошлыйГод.НоменклатураНоменклатурнаяГруппа КАК НоменклатураНоменклатурнаяГруппа,
	             |		втПродажиПрошлыйГод.КоличествоОборот КАК КоличествоОборотПрошлыйГод,
	             |		втПродажиПрошлыйГод.СтоимостьОборот КАК СтоимостьОборотПрошлыйГод,
	             |		втПродажиПрошлыйГод.ТоварнаяГруппаПланирования КАК ТоварнаяГруппаПланирования,
	             |		0 КАК КоличествоОборотПрошлыйМесяц,
	             |		0 КАК СтоимостьОборотПрошлыйМесяц,
	             |		0 КАК КоличествоОборот6МесЭтогоГода,
	             |		0 КАК СтоимостьОборот6МесЭтогоГода,
	             |		0 КАК КоличествоОборот6МесПрошлогоГода,
	             |		0 КАК СтоимостьОборот6МесПрошлогоГода,
	             |		0 КАК КоличествоОборотПериодПланированияЭтогоГода,
	             |		0 КАК СтоимостьОборотПериодПланированияЭтогоГода,
	             |		0 КАК КоличествоОборотПериодПланированияПрошлогоГода,
	             |		0 КАК СтоимостьОборотПериодПланированияПрошлогоГода
	             |	ИЗ
	             |		втПродажиПрошлыйГод КАК втПродажиПрошлыйГод
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПрошлыйМесяц.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж,
	             |		втПродажиПрошлыйМесяц.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПрошлыйМесяц.ТоварнаяГруппаПланирования,
	             |		втПродажиПрошлыйМесяц.КоличествоОборот,
	             |		втПродажиПрошлыйМесяц.СтоимостьОборот,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажиПрошлыйМесяц КАК втПродажиПрошлыйМесяц
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажи6МесЭтогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж,
	             |		втПродажи6МесЭтогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажи6МесЭтогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажи6МесЭтогоГода.КоличествоОборот,
	             |		втПродажи6МесЭтогоГода.СтоимостьОборот,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажи6МесЭтогоГода КАК втПродажи6МесЭтогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажи6МесПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж,
	             |		втПродажи6МесПрошлогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.КоличествоОборот,
	             |		втПродажи6МесПрошлогоГода.СтоимостьОборот,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажи6МесПрошлогоГода КАК втПродажи6МесПрошлогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПериодПланированияЭтогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж,
	             |		втПродажиПериодПланированияЭтогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.КоличествоОборот,
	             |		втПродажиПериодПланированияЭтогоГода.СтоимостьОборот,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажиПериодПланированияЭтогоГода КАК втПродажиПериодПланированияЭтогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПериодПланированияПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж,
	             |		втПродажиПериодПланированияПрошлогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.КоличествоОборот,
	             |		втПродажиПериодПланированияПрошлогоГода.СтоимостьОборот
	             |	ИЗ
	             |		втПродажиПериодПланированияПрошлогоГода КАК втПродажиПериодПланированияПрошлогоГода) КАК А
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	А.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж,
	             |	А.НоменклатураНоменклатурнаяГруппа,
	             |	А.ТоварнаяГруппаПланирования,
	             |	А.ТоварнаяГруппаПланирования.Родитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель";
				 Запрос.УстановитьПараметр("СписокРассчитываемыхНГ", СписокРассчитываемыхНГ);
				 Запрос.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
				 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
					 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В(&НаправлениеПродаж)");
					 //Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
				 КонецЕсли;
				 
	ФактПрошлыхПериодов = Запрос.Выполнить().Выгрузить();
	
	//отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	ПроставитьФактВДерево(ДеревоНаФормеНаправления,ФактПрошлыхПериодов);
	// ручные показатели
	//Заполним рассчитываемые показатели
	//прошлый год
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	             |	0 КАК КоличествоПрошлыйГод,
	             |	0 КАК СуммаПрошлыйГод,
	             |	0 КАК КоличествоПрошлыйМесяц,
	             |	0 КАК СуммаПрошлыйМесяц,
	             |	0 КАК ПоказательПрошлыйМесяц,
	             |	0 КАК ПоказательПрошлыйГод,
				 |  0 КАК Показатель6МесЭтогоГода,
				 |  0 КАК Показатель6МесПрошлогоГода,
				 |  0 КАК ПоказательПериодПланированияЭтогоГода,
				 |  0 КАК ПоказательПериодПланированияПрошлогоГода,
				 |  0 КАК ДинамикаЗа6Месяцев,
				 |  0 КАК ДинамикаЗаПериодПланирования,
	             |	МесячныйПланДепортаментаПродаж.Вес КАК вес,
	             |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса,
	             |	МесячныйПланДепортаментаПродаж.Менеджер,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.Пустаяссылка)
	             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.Пустаяссылка)
	             |	И НЕ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	             |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	             |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
	             |	И (ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса КАК СТРОКА(500))) <> """"
	             |	И 99 = 99";
				 
				 Запрос.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
				 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
					 //Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
					Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж  В(&НаправлениеПродаж)");
				 КонецЕсли;
	Факт = Запрос.Выполнить().Выгрузить();
	Для каждого стр из Факт Цикл
		Если стр.СуммовоеПланирование тогда
			стр.СуммаПрошлыйГод = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
			Стр.ПоказательПрошлыйГод = стр.СуммаПрошлыйГод;
			
			стр.СуммаПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
			Стр.ПоказательПрошлыйМесяц = стр.СуммаПрошлыйМесяц;

		иначе//Если стр.ВесКоличество>0 тогда
			стр.КоличествоПрошлыйГод = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
			Стр.ПоказательПрошлыйГод = стр.КоличествоПрошлыйГод;

			стр.КоличествоПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
			Стр.ПоказательПрошлыйМесяц = стр.КоличествоПрошлыйМесяц;

		КонецЕсли;
		
			стр.Показатель6МесЭтогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода));
			стр.Показатель6МесПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода));
			
			
			стр.ПоказательПериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),ПолучитьКонецПериодаПериодПланированияЭтогоГода());
			стр.ПоказательПериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),ПолучитьКонецПериодаПериодПланированияПрошлогоГода());
			
			//стр.ПоказательПериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-6),КонецДня(КонецПериода));
			//стр.ПоказательПериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-18),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
			
			стр.ДинамикаЗа6Месяцев = ?(стр.Показатель6МесПрошлогоГода = 0, 0, стр.Показатель6МесЭтогоГода/стр.Показатель6МесПрошлогоГода*100)-100;
			
			стр.ДинамикаЗаПериодПланирования = ?(стр.ПоказательПериодПланированияПрошлогоГода = 0, 0, стр.ПоказательПериодПланированияЭтогоГода/стр.ПоказательПериодПланированияПрошлогоГода*100)-100;
		
	КонецЦикла;
	//
	////прошлый месяц
	//Для каждого стр из Факт Цикл
	//	//Если стр.Вес>0 тогда
	//	Если стр.СуммовоеПланирование тогда
	//		стр.СуммаПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
	//		Стр.ПоказательПрошлыйМесяц = стр.СуммаПрошлыйМесяц;
	//	иначе//Если стр.ВесКоличество>0 тогда
	//		стр.КоличествоПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
	//		Стр.ПоказательПрошлыйМесяц = стр.КоличествоПрошлыйМесяц;
	//	КонецЕсли;
	//	стр.Показатель6МесЭтогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-6),КонецДня(КонецПериода));
	//КонецЦикла;
	
	отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	Для каждого стр из Факт Цикл
		ЗаполнитьЗначенияСвойств(отбор,стр);
		НайденныеСтроки = ДеревоНаФормеНаправления.Строки.НайтиСтроки(отбор,истина);
		Для каждого эл из НайденныеСтроки цикл
			эл.КоличествоПрошлыйГод = стр.КоличествоПрошлыйГод;
			эл.СуммаПрошлыйГод = стр.СуммаПрошлыйГод;
			эл.КоличествоПрошлыйМесяц = стр.КоличествоПрошлыйМесяц;
			эл.СуммаПрошлыйМесяц = стр.СуммаПрошлыйМесяц;
			эл.ПоказательПрошлыйМесяц = стр.ПоказательПрошлыйМесяц;
			эл.ПоказательПрошлыйГод = стр.ПоказательПрошлыйГод;
			эл.Показатель6МесЭтогоГода = стр.Показатель6МесЭтогоГода;
			эл.Показатель6МесПрошлогоГода = стр.Показатель6МесПрошлогоГода;
			
			эл.ПоказательПериодПланированияЭтогоГода = стр.ПоказательПериодПланированияЭтогоГода;
			эл.ПоказательПериодПланированияПрошлогоГода = стр.ПоказательПериодПланированияПрошлогоГода;
			
			эл.ДинамикаЗа6Месяцев = стр.ДинамикаЗа6Месяцев;
			эл.ДинамикаЗаПериодПланирования = стр.ДинамикаЗаПериодПланирования;
		КонецЦикла;
	КонецЦикла;
	
	///////
	///менеджеры
	ЗапросМ = новый Запрос;
	ЗапросМ.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.Производитель,
	              |	МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан,
	              |	МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан,
	              |	МесячныйПланДепортаментаПродаж.КоличествоПлан,
	              |	МесячныйПланДепортаментаПродаж.СуммаПлан,
	              |	МесячныйПланДепортаментаПродаж.Утвержден,
	              |	МесячныйПланДепортаментаПродаж.Вес КАК вес,
	              |	МесячныйПланДепортаментаПродаж.Менеджер,
	              |	МесячныйПланДепортаментаПродаж.КоличествоПланНО,
	              |	МесячныйПланДепортаментаПродаж.СуммаПланНО,
	              |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	              |	МесячныйПланДепортаментаПродаж.Отслеживать,
	              |	ВЫБОР
	              |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	              |			ТОГДА МесячныйПланДепортаментаПродаж.Вес
	              |		ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	              |	КОНЕЦ КАК ВесО,
	              |	МесячныйПланДепортаментаПродаж.КоличествоПланМенеджер,
	              |	МесячныйПланДепортаментаПродаж.СуммаПланМенеджер,
	              |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияМенеджером,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	              |ПОМЕСТИТЬ втПлан
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.Пустаяссылка)
	              |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.Пустаяссылка)
	              |	И 99 = 99
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	втПлан.НаправлениеПродаж КАК НаправлениеПродаж,
	              |	втПлан.Менеджер КАК Менеджер,
	              |	втПлан.ТоварнаяГруппа КАК ТоварнаяГруппа,
	              |	втПлан.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПоказатели,
	              |	СУММА(ВЫРАЗИТЬ(втПлан.КоличествоИтоговыйПлан КАК ЧИСЛО(15, 0))) КАК КоличествоИтоговыйПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаИтоговыйПлан = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаИтоговыйПлан
	              |		КОНЕЦ) КАК СуммаИтоговыйПлан,
	              |	СУММА(ВЫРАЗИТЬ(втПлан.КоличествоПлан КАК ЧИСЛО(15, 0))) КАК КоличествоПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаПлан = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаПлан
	              |		КОНЕЦ) КАК СуммаПлан,
	              |	СУММА(0) КАК КоличествоПрошлыйМесяц,
	              |	СУММА(0) КАК СуммаПрошлыйМесяц,
	              |	СУММА(0) КАК Показатель6МесЭтогоГода,
	              |	СУММА(0) КАК КоличествоПрошлыйГод,
	              |	СУММА(0) КАК СуммаПрошлыйГод,
	              |	СУММА(втПлан.вес) КАК Вес,
	              |	втПлан.МесяцПланирования КАК МесяцПланирования,
	              |	СУММА(ВЫРАЗИТЬ(втПлан.КоличествоПланНО КАК ЧИСЛО(15, 0))) КАК КоличествоПланНО,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаПланНО = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаПланНО
	              |		КОНЕЦ) КАК СуммаПланНО,
	              |	СУММА(втПлан.ВесКоличество) КАК ВесКоличество,
	              |	МАКСИМУМ(втПлан.Отслеживать) КАК Отслеживать,
	              |	МАКСИМУМ(втПлан.Утвержден) КАК Утвержден,
	              |	СУММА(втПлан.ВесО) КАК ВесО,
	              |	СУММА(ВЫРАЗИТЬ(втПлан.КоличествоПланМенеджер КАК ЧИСЛО(15, 0))) КАК КоличествоПланМенеджер,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаПланМенеджер = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаПланМенеджер
	              |		КОНЕЦ) КАК СуммаПланМенеджер,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаИтоговыйПлан = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаИтоговыйПлан
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫРАЗИТЬ(втПлан.КоличествоИтоговыйПлан КАК ЧИСЛО(15, 0))
	              |		КОНЕЦ) КАК ПоказательИтоговыйПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаПлан = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаПлан
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫРАЗИТЬ(втПлан.КоличествоПлан КАК ЧИСЛО(15, 0))
	              |		КОНЕЦ) КАК ПоказательПлан,
	              |	СУММА(0) КАК ПоказательПрошлыйМесяц,
	              |	СУММА(0) КАК ПоказательПрошлыйГод,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаПланНО = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаПланНО
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫРАЗИТЬ(втПлан.КоличествоПланНО КАК ЧИСЛО(15, 0))
	              |		КОНЕЦ) КАК ПоказательПланНО,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаПланМенеджер = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаПланМенеджер
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫРАЗИТЬ(втПлан.КоличествоПланМенеджер КАК ЧИСЛО(15, 0))
	              |		КОНЕЦ) КАК ПоказательПланМенеджер,
	              |	МАКСИМУМ(втПлан.ДатаУтвержденияМенеджером) КАК ДатаУтвержденияМенеджером,
	              |	втПлан.ТоварнаяГруппаСуммовоеПланирование,
	              |	ВЫБОР
	              |		КОГДА втПлан.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	              |			ТОГДА 1000
	              |		ИНАЧЕ втПлан.ВесО
	              |	КОНЕЦ КАК Сортировка,
	              |	СУММА(0) КАК Показатель6МесПрошлогоГода,
	              |	СУММА(0) КАК ПоказательПериодПланированияЭтогоГода,
	              |	СУММА(0) КАК ПоказательПериодПланированияПрошлогоГода,
	              |	СУММА(0) КАК ДинамикаЗа6Месяцев,
	              |	СУММА(0) КАК ДинамикаЗаПериодПланирования
	              |ИЗ
	              |	втПлан КАК втПлан
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	втПлан.ТоварнаяГруппа,
	              |	втПлан.НоменклатурнаяГруппа,
	              |	втПлан.НаправлениеПродаж,
	              |	втПлан.Менеджер,
	              |	втПлан.МесяцПланирования,
	              |	втПлан.ТоварнаяГруппаСуммовоеПланирование,
	              |	ВЫБОР
	              |		КОГДА втПлан.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	              |			ТОГДА 1000
	              |		ИНАЧЕ втПлан.ВесО
	              |	КОНЕЦ
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	НаправлениеПродаж,
	              |	втПлан.Менеджер.Наименование,
	             // |	Сортировка УБЫВ,
	              |	втПлан.ТоварнаяГруппа.Наименование,
	              |	НоменклатурнаяГруппаПоказатели
	              |ИТОГИ
	              |	СУММА(ВесО),
	              |	МАКСИМУМ(ДатаУтвержденияМенеджером)
	              |ПО
	              |	НаправлениеПродаж,
	              |	Менеджер
	              |АВТОУПОРЯДОЧИВАНИЕ";
				  
				  ЗапросМ.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
				 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
					 //Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
					ЗапросМ.Текст = СтрЗаменить(ЗапросМ.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
				 КонецЕсли;

	ЗапросМ.УстановитьПараметр("МесяцПланирования", НачалоПериода);
	ЗапросМ.УстановитьПараметр("НачПериодаПрошлогоМесяца", ДобавитьМесяц(НачалоПериода,-1));
	ЗапросМ.УстановитьПараметр("КонПериодаПрошлогоМесяца", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-1)), ВидГраницы.Включая));
	ЗапросМ.УстановитьПараметр("НачПрошлогоПериода", ДобавитьМесяц(НачалоПериода,-12));
	ЗапросМ.УстановитьПараметр("КонПрошлогоПериода", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-12)), ВидГраницы.Включая));
	ЗапросМ.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);
	ЗапросМ.УстановитьПараметр("Выключенные",Справочники.Пользователи.НайтиПоНаименованию("Выключенные"));
	
	ЗапросМ.УстановитьПараметр("НачПериода6МесЭтогоГода",ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода));
	ЗапросМ.УстановитьПараметр("КонПериода6МесЭтогоГода", Новый Граница(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода), ВидГраницы.Включая));
	ЗапросМ.УстановитьПараметр("НачПериода6МесПрошлогоГода",ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода));
	ЗапросМ.УстановитьПараметр("КонПериода6МесПрошлогоГода", Новый Граница(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода), ВидГраницы.Включая));
	
	ЗапросМ.УстановитьПараметр("НачПериодаПериодПланированияЭтогоГода",ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
	ЗапросМ.УстановитьПараметр("КонПериодаПериодПланированияЭтогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияЭтогоГода(), ВидГраницы.Включая));
	ЗапросМ.УстановитьПараметр("НачПериодаПериодПланированияПрошлогоГода",ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
	ЗапросМ.УстановитьПараметр("КонПериодаПериодПланированияПрошлогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(), ВидГраницы.Включая));
	
	Результат2 = ЗапросМ.Выполнить();
	
	
	ПланыПоВсемМенеджерам = Результат2.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//пдз
	//фактпрошлых периодов
	//факт прошлых периодов
	Запрос.Текст="ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажиПрошлыйГод
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПрошлогоПериода,
	             |			&КонПрошлогоПериода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажиПрошлыйМесяц
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПрошлогоМесяца,
	             |			&КонПериодаПрошлогоМесяца,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажи6МесЭтогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода6МесЭтогоГода,
	             |			&КонПериода6МесЭтогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажи6МесПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода6МесПрошлогоГода,
	             |			&КонПериода6МесПрошлогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажиПериодПланированияЭтогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПериодПланированияЭтогоГода,
	             |			&КонПериодаПериодПланированияЭтогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажиПериодПланированияПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПериодПланированияПрошлогоГода,
	             |			&КонПериодаПериодПланированияПрошлогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	А.НоменклатураНоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	СУММА(А.КоличествоОборотПрошлыйГод) КАК КоличествоПрошлыйГод,
	             |	СУММА(А.СтоимостьОборотПрошлыйГод) КАК СуммаПрошлыйГод,
	             |	А.ТоварнаяГруппаПланирования,
	             |	СУММА(А.КоличествоОборотПрошлыйМесяц) КАК КоличествоПрошлыйМесяц,
	             |	СУММА(А.СтоимостьОборотПрошлыйМесяц) КАК СуммаПрошлыйМесяц,
	             |	А.ТоварнаяГруппаПланирования.Родитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель,
	             |	А.Менеджер,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПрошлыйГод
	             |			ИНАЧЕ А.КоличествоОборотПрошлыйГод
	             |		КОНЕЦ) КАК ПоказательПрошлыйГод,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПрошлыйМесяц
	             |			ИНАЧЕ А.КоличествоОборотПрошлыйМесяц
	             |		КОНЕЦ) КАК ПоказательПрошлыйМесяц,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборот6МесЭтогоГода
	             |			ИНАЧЕ А.КоличествоОборот6МесЭтогоГода
	             |		КОНЕЦ) КАК Показатель6МесЭтогоГода,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборот6МесПрошлогоГода
	             |			ИНАЧЕ А.КоличествоОборот6МесПрошлогоГода
	             |		КОНЕЦ) КАК Показатель6МесПрошлогоГода,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПериодПланированияЭтогоГода
	             |			ИНАЧЕ А.КоличествоОборотПериодПланированияЭтогоГода
	             |		КОНЕЦ) КАК ПоказательПериодПланированияЭтогоГода,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПериодПланированияПрошлогоГода
	             |			ИНАЧЕ А.КоличествоОборотПериодПланированияПрошлогоГода
	             |		КОНЕЦ) КАК ПоказательПериодПланированияПрошлогоГода
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		втПродажиПрошлыйГод.НоменклатураНоменклатурнаяГруппа КАК НоменклатураНоменклатурнаяГруппа,
	             |		втПродажиПрошлыйГод.КоличествоОборот КАК КоличествоОборотПрошлыйГод,
	             |		втПродажиПрошлыйГод.СтоимостьОборот КАК СтоимостьОборотПрошлыйГод,
	             |		втПродажиПрошлыйГод.ТоварнаяГруппаПланирования КАК ТоварнаяГруппаПланирования,
	             |		0 КАК КоличествоОборотПрошлыйМесяц,
	             |		0 КАК СтоимостьОборотПрошлыйМесяц,
	             |		втПродажиПрошлыйГод.Менеджер КАК Менеджер,
	             |		0 КАК КоличествоОборот6МесЭтогоГода,
	             |		0 КАК СтоимостьОборот6МесЭтогоГода,
	             |		0 КАК КоличествоОборот6МесПрошлогоГода,
	             |		0 КАК СтоимостьОборот6МесПрошлогоГода,
	             |		0 КАК КоличествоОборотПериодПланированияЭтогоГода,
	             |		0 КАК СтоимостьОборотПериодПланированияЭтогоГода,
	             |		0 КАК КоличествоОборотПериодПланированияПрошлогоГода,
	             |		0 КАК СтоимостьОборотПериодПланированияПрошлогоГода
	             |	ИЗ
	             |		втПродажиПрошлыйГод КАК втПродажиПрошлыйГод
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПрошлыйМесяц.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПрошлыйМесяц.ТоварнаяГруппаПланирования,
	             |		втПродажиПрошлыйМесяц.КоличествоОборот,
	             |		втПродажиПрошлыйМесяц.СтоимостьОборот,
	             |		втПродажиПрошлыйМесяц.Менеджер,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажиПрошлыйМесяц КАК втПродажиПрошлыйМесяц
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажи6МесЭтогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажи6МесЭтогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажи6МесЭтогоГода.Менеджер,
	             |		втПродажи6МесЭтогоГода.КоличествоОборот,
	             |		втПродажи6МесЭтогоГода.СтоимостьОборот,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажи6МесЭтогоГода КАК втПродажи6МесЭтогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажи6МесПрошлогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.Менеджер,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.КоличествоОборот,
	             |		втПродажи6МесПрошлогоГода.СтоимостьОборот,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажи6МесПрошлогоГода КАК втПродажи6МесПрошлогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПериодПланированияЭтогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.Менеджер,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.КоличествоОборот,
	             |		втПродажиПериодПланированияЭтогоГода.СтоимостьОборот,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажиПериодПланированияЭтогоГода КАК втПродажиПериодПланированияЭтогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПериодПланированияПрошлогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.Менеджер,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.КоличествоОборот,
	             |		втПродажиПериодПланированияПрошлогоГода.СтоимостьОборот
	             |	ИЗ
	             |		втПродажиПериодПланированияПрошлогоГода КАК втПродажиПериодПланированияПрошлогоГода) КАК А
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	А.НоменклатураНоменклатурнаяГруппа,
	             |	А.ТоварнаяГруппаПланирования,
	             |	А.ТоварнаяГруппаПланирования.Родитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель,
	             |	А.Менеджер";
				 
				 Запрос.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
				 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
					 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В(&НаправлениеПродаж)");
					//Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПродаж");
				КонецЕсли;
				
	ФактПрошлыхПериодов = Запрос.Выполнить().Выгрузить();
	
	//отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	ПроставитьФактВДеревоМенеджеров(ПланыПоВсемМенеджерам,ФактПрошлыхПериодов);
	
	
	//ручные по менеджерам
	ЗапросМ.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования КАК МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	              |	МесячныйПланДепортаментаПродаж.Менеджер КАК Менеджер,
	              |	0 КАК КоличествоПрошлыйГод,
	              |	0 КАК СуммаПрошлыйГод,
	              |	0 КАК КоличествоПрошлыйМесяц,
	              |	0 КАК СуммаПрошлыйМесяц,
				  |	0 КАК Показатель6МесЭтогоГода,
				  |	0 КАК Показатель6МесПрошлогоГода,
				  |	0 КАК ПоказательПериодПланированияЭтогоГода,
				  |	0 КАК ПоказательПериодПланированияПрошлогоГода,
				  |	0 КАК ДинамикаЗа6Месяцев,
				  |	0 КАК ДинамикаЗаПериодПланирования,
	              |	МесячныйПланДепортаментаПродаж.Вес,
	              |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование,
	              |	0 КАК ПоказательПрошлыйГод,
	              |	0 КАК ПоказательПрошлыйМесяц
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.Пустаяссылка)
	              |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.Пустаяссылка)
	              |	И НЕ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	              |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	              |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
	              |	И (ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса КАК СТРОКА(500))) <> """"
	              |	И 99 = 99";
	             ЗапросМ.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
				 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
					 //ЗапросМ.Текст = СтрЗаменить(Запрос.ЗапросМ,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
					ЗапросМ.Текст = СтрЗаменить(ЗапросМ.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
				КонецЕсли;
	Рез = ЗапросМ.Выполнить().Выгрузить();
	Для каждого стр из Рез Цикл
		//Если стр.Вес>0 тогда
		Если СчитатьДинамикуПоМенеджерам тогда
			
			Если стр.СуммовоеПланирование тогда
				стр.СуммаПрошлыйГод = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
				стр.ПоказательПрошлыйГод = стр.СуммаПрошлыйГод;
				
				стр.СуммаПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
				стр.ПоказательПрошлыйМесяц = стр.СуммаПрошлыйМесяц;
				
			иначе//Если стр.ВесКоличество>0 тогда
				стр.КоличествоПрошлыйГод = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
				стр.ПоказательПрошлыйГод = стр.КоличествоПрошлыйГод;
				
				стр.КоличествоПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
				стр.ПоказательПрошлыйМесяц = стр.КоличествоПрошлыйМесяц;
				
			КонецЕсли;
			
			
			стр.Показатель6МесЭтогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода));
			стр.Показатель6МесПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода));
			
			стр.ПоказательПериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),ПолучитьКонецПериодаПериодПланированияЭтогоГода());
			стр.ПоказательПериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),ПолучитьКонецПериодаПериодПланированияПрошлогоГода());
			
			//стр.ПоказательПериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-6),КонецДня(КонецПериода));
			//стр.ПоказательПериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-18),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
			
			стр.ДинамикаЗа6Месяцев = ?(стр.Показатель6МесПрошлогоГода = 0, 0, стр.Показатель6МесЭтогоГода/стр.Показатель6МесПрошлогоГода*100)-100;
			стр.ДинамикаЗаПериодПланирования = ?(стр.ПоказательПериодПланированияПрошлогоГода = 0, 0, стр.ПоказательПериодПланированияЭтогоГода/стр.ПоказательПериодПланированияПрошлогоГода*100)-100;
		Иначе
			
			Если стр.СуммовоеПланирование тогда
				стр.СуммаПрошлыйГод = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
				стр.ПоказательПрошлыйГод = стр.СуммаПрошлыйГод;
				
				стр.СуммаПрошлыйМесяц = 0;
				стр.ПоказательПрошлыйМесяц = стр.СуммаПрошлыйМесяц;
				
			иначе//Если стр.ВесКоличество>0 тогда
				стр.КоличествоПрошлыйГод = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
				стр.ПоказательПрошлыйГод = стр.КоличествоПрошлыйГод;
				
				стр.КоличествоПрошлыйМесяц = 0;
				стр.ПоказательПрошлыйМесяц = стр.КоличествоПрошлыйМесяц;
				
			КонецЕсли;
			
			стр.Показатель6МесЭтогоГода = 0;
			стр.Показатель6МесПрошлогоГода = 0;
			
			стр.ПоказательПериодПланированияЭтогоГода = 0;
			стр.ПоказательПериодПланированияПрошлогоГода = 0;
			
			//стр.ПоказательПериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-6),КонецДня(КонецПериода));
			//стр.ПоказательПериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-18),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
			
			стр.ДинамикаЗа6Месяцев = 0;
			стр.ДинамикаЗаПериодПланирования = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	////прошлый месяц
	//Для каждого стр из Рез Цикл
	//	Если стр.СуммовоеПланирование тогда
	//		стр.СуммаПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
	//		стр.ПоказательПрошлыйМесяц = стр.СуммаПрошлыйМесяц;
	//	иначе//Если стр.ВесКоличество>0 тогда
	//		стр.КоличествоПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
	//		стр.ПоказательПрошлыйМесяц = стр.КоличествоПрошлыйМесяц;
	//	КонецЕсли;
	//КонецЦикла;
	//Рез.ВыбратьСтроку();
	Для каждого стр из  Рез цикл
		нашли = ложь;
		ОбновитьПараметрыВДеревеМенеджеров(ПланыПоВсемМенеджерам, стр,ложь);
	КонецЦикла;
	
	//переделаем группировку из дерева
	//СформироватьГруппировкуПоТоварнымГруппам(ПланыПоВсемМенеджерам,ПланированиеСерковТоварныеГруппы,1);
	//СформироватьГруппировкуПоТоварнымГруппам(ПланированиеСерковПодразделения,ПланированиеСерковТоварныеГруппы,1);

	//ЭлементыФормы.ПланированиеСерковТоварныеГруппы.;
КонецПроцедуры

 процедура СформироватьГруппировкуПоТоварнымГруппам(ПланыПоВсемМенеджерам,ПланированиеСерковТоварныеГруппы, Группировки=1)
	табВрем = новый ТаблицаЗначений;
	для каждого кол из ПланыПоВсемМенеджерам.Колонки цикл
		табВрем.Колонки.Добавить(кол.Имя, кол.ТипЗначения,кол.Заголовок, кол.Ширина);
	КонецЦикла;
	ПреобразоватьВТЗРекурсия(ПланыПоВсемМенеджерам, табВрем);
	//табВрем.ВыбратьСтроку();
	//сформируем дерево
	Запрос = новый Запрос;
	Запрос.УстановитьПараметр("тз", табВрем);
	Если Группировки = 1 тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	тз.Вес,
		               |	тз.ВесКоличество,
		               |	тз.ВесО,
		               |	тз.ДинамикаЗа6Месяцев,
		               |	тз.ДинамикаЗаПериодПланирования,
		               |	тз.КоличествоИтоговыйПлан,
		               |	тз.КоличествоПлан,
		               |	тз.КоличествоПланНО,
		               |	тз.КоличествоПрошлыйГод,
		               |	тз.КоличествоПрошлыйМесяц,
		               |	тз.НаправлениеПродаж,
		               |	тз.НоменклатурнаяГруппаПоказатели,
		               |	тз.Показатель6МесПрошлогоГода,
		               |	тз.Показатель6МесЭтогоГода,
		               |	тз.ПоказательИтоговыйПлан,
		               |	тз.ПоказательПериодПланированияПрошлогоГода,
		               |	тз.ПоказательПериодПланированияЭтогоГода,
		               |	тз.ПоказательПлан,
		               |	тз.ПоказательПланНО,
		               |	тз.ПоказательПланыМенеджеров,
		               |	тз.ПоказательПрошлыйГод,
		               |	тз.ПоказательПрошлыйМесяц,
		               |	тз.ПриростИтог,
		               |	тз.ПриростНО,
		               |	тз.ПриростПланыМенеджеров,
		               |	тз.ПриростПредварительного,
		               |	тз.СуммаИтоговыйПлан,
		               |	тз.СуммаПлан,
		               |	тз.СуммаПланНО,
		               |	тз.СуммаПрошлыйГод,
		               |	тз.СуммаПрошлыйМесяц,
		               |	тз.ТоварнаяГруппа,
		               |	тз.ТоварнаяГруппаНаименование,
		               |	тз.ТоварнаяГруппаСуммовоеПланирование,
		               |	тз.ДатаУтвержденияНО
		               |ПОМЕСТИТЬ вт
		               |ИЗ
		               |	&тз КАК тз
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(вт.Вес) КАК Вес,
		               |	СУММА(вт.ВесКоличество) КАК ВесКоличество,
		               |	СУММА(вт.ВесО) КАК ВесО,
		               |	СУММА(ВЫБОР
		               |			КОГДА вт.Показатель6МесПрошлогоГода <> 0
		               |				ТОГДА вт.Показатель6МесЭтогоГода / вт.Показатель6МесПрошлогоГода * 100 - 100
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК ДинамикаЗа6Месяцев,
		               |	СУММА(ВЫБОР
		               |			КОГДА вт.ПоказательПериодПланированияПрошлогоГода <> 0
		               |				ТОГДА вт.ПоказательПериодПланированияЭтогоГода / вт.ПоказательПериодПланированияПрошлогоГода * 100 - 100
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК ДинамикаЗаПериодПланирования,
		               |	СУММА(вт.КоличествоИтоговыйПлан) КАК КоличествоИтоговыйПлан,
		               |	СУММА(вт.КоличествоПлан) КАК КоличествоПлан,
		               |	СУММА(вт.КоличествоПланНО) КАК КоличествоПланНО,
		               |	СУММА(вт.КоличествоПрошлыйГод) КАК КоличествоПрошлыйГод,
		               |	СУММА(вт.КоличествоПрошлыйМесяц) КАК КоличествоПрошлыйМесяц,
		               |	вт.НаправлениеПродаж КАК НаправлениеПродаж,
		               |	вт.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
		               |	СУММА(вт.Показатель6МесПрошлогоГода) КАК Показатель6МесПрошлогоГода,
		               |	СУММА(вт.Показатель6МесЭтогоГода) КАК Показатель6МесЭтогоГода,
		               |	СУММА(вт.ПоказательИтоговыйПлан) КАК ПоказательИтоговыйПлан,
		               |	СУММА(вт.ПоказательПериодПланированияПрошлогоГода) КАК ПоказательПериодПланированияПрошлогоГода,
		               |	СУММА(вт.ПоказательПериодПланированияЭтогоГода) КАК ПоказательПериодПланированияЭтогоГода,
		               |	СУММА(вт.ПоказательПлан) КАК ПоказательПлан,
		               |	СУММА(вт.ПоказательПланНО) КАК ПоказательПланНО,
		               |	СУММА(вт.ПоказательПрошлыйГод) КАК ПоказательПрошлыйГод,
		               |	СУММА(вт.ПоказательПрошлыйМесяц) КАК ПоказательПрошлыйМесяц,
		               |	СУММА(вт.СуммаИтоговыйПлан) КАК СуммаИтоговыйПлан,
		               |	СУММА(вт.СуммаПлан) КАК СуммаПлан,
		               |	СУММА(вт.СуммаПланНО) КАК СуммаПланНО,
		               |	СУММА(вт.СуммаПрошлыйГод) КАК СуммаПрошлыйГод,
		               |	СУММА(вт.СуммаПрошлыйМесяц) КАК СуммаПрошлыйМесяц,
		               |	вт.ТоварнаяГруппа КАК ТоварнаяГруппа,
		               |	вт.ТоварнаяГруппаСуммовоеПланирование,
		               |	СУММА(ВЫБОР
		               |			КОГДА вт.ПоказательПрошлыйГод <> 0
		               |				ТОГДА (вт.ПоказательПлан - вт.ПоказательПрошлыйГод) / вт.ПоказательПрошлыйГод * 100
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК ПриростПредварительного,
		               |	СУММА(ВЫБОР
		               |			КОГДА вт.ПоказательПрошлыйГод <> 0
		               |				ТОГДА (вт.ПоказательПланНО - вт.ПоказательПрошлыйГод) / вт.ПоказательПрошлыйГод * 100
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК ПриростНО,
		               |	СУММА(ВЫБОР
		               |			КОГДА вт.ПоказательПрошлыйГод <> 0
		               |				ТОГДА (вт.ПоказательИтоговыйПлан - вт.ПоказательПрошлыйГод) / вт.ПоказательПрошлыйГод * 100
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК ПриростИтог,
		               |	МАКСИМУМ(вт.ДатаУтвержденияНО) КАК ДатаУтвержденияНО
		               |ИЗ
		               |	вт КАК вт
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	вт.ТоварнаяГруппа,
		               |	вт.ТоварнаяГруппаСуммовоеПланирование,
		               |	вт.НаправлениеПродаж,
		               |	вт.НоменклатурнаяГруппаПоказатели
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ТоварнаяГруппа.Наименование,
		               |	НоменклатурнаяГруппаПоказатели,
		               |	НаправлениеПродаж
		               |ИТОГИ
		               |	ВЫБОР
		               |		КОГДА СУММА(Показатель6МесПрошлогоГода) <> 0
		               |			ТОГДА СУММА(Показатель6МесЭтогоГода) / СУММА(Показатель6МесПрошлогоГода) * 100 - 100
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК ДинамикаЗа6Месяцев,
		               |	ВЫБОР
		               |		КОГДА СУММА(ПоказательПериодПланированияПрошлогоГода) <> 0
		               |			ТОГДА СУММА(ПоказательПериодПланированияЭтогоГода) / СУММА(ПоказательПериодПланированияПрошлогоГода) * 100 - 100
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК ДинамикаЗаПериодПланирования,
		               |	СУММА(КоличествоИтоговыйПлан),
		               |	СУММА(КоличествоПлан),
		               |	СУММА(КоличествоПланНО),
		               |	СУММА(КоличествоПрошлыйГод),
		               |	СУММА(КоличествоПрошлыйМесяц),
		               |	СУММА(Показатель6МесПрошлогоГода),
		               |	СУММА(Показатель6МесЭтогоГода),
		               |	СУММА(ПоказательИтоговыйПлан),
		               |	СУММА(ПоказательПериодПланированияПрошлогоГода),
		               |	СУММА(ПоказательПериодПланированияЭтогоГода),
		               |	СУММА(ПоказательПлан),
		               |	СУММА(ПоказательПланНО),
		               |	СУММА(ПоказательПрошлыйГод),
		               |	СУММА(ПоказательПрошлыйМесяц),
		               |	СУММА(СуммаИтоговыйПлан),
		               |	СУММА(СуммаПлан),
		               |	СУММА(СуммаПланНО),
		               |	СУММА(СуммаПрошлыйГод),
		               |	СУММА(СуммаПрошлыйМесяц),
		               |	ВЫБОР
		               |		КОГДА СУММА(ПоказательПрошлыйГод) <> 0
		               |			ТОГДА СУММА(ПоказательПлан - ПоказательПрошлыйГод) / СУММА(ПоказательПрошлыйГод) * 100
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК ПриростПредварительного,
		               |	ВЫБОР
		               |		КОГДА СУММА(ПоказательПрошлыйГод) <> 0
		               |			ТОГДА СУММА(ПоказательПланНО - ПоказательПрошлыйГод) / СУММА(ПоказательПрошлыйГод) * 100
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК ПриростНО,
		               |	ВЫБОР
		               |		КОГДА СУММА(ПоказательПрошлыйГод) <> 0
		               |			ТОГДА СУММА(ПоказательИтоговыйПлан - ПоказательПрошлыйГод) / СУММА(ПоказательПрошлыйГод) * 100
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК ПриростИтог
		               |ПО
		               |	ТоварнаяГруппа
		               |АВТОУПОРЯДОЧИВАНИЕ";
				   иначе
					   Запрос.Текст = "ВЫБРАТЬ
					                  |	тз.Вес,
					                  |	тз.ВесКоличество,
					                  |	тз.ВесО,
					                  |	тз.ДатаУтвержденияМенеджером,
					                  |	тз.ДатаУтвержденияНО,
					                  |	тз.ДатаУтвержденияРДП,
					                  |	тз.ДинамикаЗа6Месяцев,
					                  |	тз.ДинамикаЗаПериодПланирования,
					                  |	тз.КоличествоПлан,
					                  |	тз.КоличествоПланМенеджер,
					                  |	тз.КоличествоПланНО,
					                  |	тз.КоличествоПрошлыйГод,
					                  |	тз.КоличествоПрошлыйМесяц,
					                  |	тз.Менеджер,
					                  |	тз.МесяцПланирования,
					                  |	тз.НаправлениеПродаж,
					                  |	тз.НоменклатурнаяГруппаПоказатели,
					                  |	тз.Отслеживать,
					                  |	тз.ПланМенеджера,
					                  |	тз.ПланНО,
					                  |	тз.Показатель6МесПрошлогоГода,
					                  |	тз.Показатель6МесЭтогоГода,
					                  |	тз.ПоказательПериодПланированияПрошлогоГода,
					                  |	тз.ПоказательПериодПланированияЭтогоГода,
					                  |	тз.ПоказательПлан,
					                  |	тз.ПоказательПланМенеджер,
					                  |	тз.ПоказательПланНО,
					                  |	тз.ПоказательПрошлыйГод,
					                  |	тз.ПоказательПрошлыйМесяц,
					                  |	тз.ПредварительныйПлан,
					                  |	тз.ПриростКПлану,
					                  |	тз.ПриростКПлануКоличество,
					                  |	тз.ПриростКПлануСумма,
					                  |	тз.ПриростМенеджер,
					                  |	тз.ПриростНО,
					                  |	тз.ПриростПредварительного,
					                  |	тз.СуммаПлан,
					                  |	тз.СуммаПланМенеджер,
					                  |	тз.СуммаПланНО,
					                  |	тз.СуммаПрошлыйГод,
					                  |	тз.СуммаПрошлыйМесяц,
					                  |	тз.ТоварнаяГруппа,
					                  |	тз.ТоварнаяГруппаСуммовоеПланирование,
					                  |	тз.Утвержден,
					                  |	тз.ФактПрошлогоГода,
					                  |	тз.ФактПрошлогоМесяца
					                  |ПОМЕСТИТЬ вт
					                  |ИЗ
					                  |	&тз КАК тз
					                  |;
					                  |
					                  |////////////////////////////////////////////////////////////////////////////////
					                  |ВЫБРАТЬ
					                  |	СУММА(вт.Вес) КАК Вес,
					                  |	СУММА(вт.ВесКоличество) КАК ВесКоличество,
					                  |	СУММА(вт.ВесО) КАК ВесО,
					                  |	СУММА(ВЫБОР
					                  |			КОГДА вт.Показатель6МесПрошлогоГода <> 0
					                  |				ТОГДА вт.Показатель6МесЭтогоГода / вт.Показатель6МесПрошлогоГода * 100 - 100
					                  |			ИНАЧЕ 0
					                  |		КОНЕЦ) КАК ДинамикаЗа6Месяцев,
					                  |	СУММА(ВЫБОР
					                  |			КОГДА вт.ПоказательПериодПланированияПрошлогоГода <> 0
					                  |				ТОГДА вт.ПоказательПериодПланированияЭтогоГода / вт.ПоказательПериодПланированияПрошлогоГода * 100 - 100
					                  |			ИНАЧЕ 0
					                  |		КОНЕЦ) КАК ДинамикаЗаПериодПланирования,
					                  |	СУММА(вт.КоличествоПлан) КАК КоличествоПлан,
					                  |	СУММА(вт.КоличествоПланНО) КАК КоличествоПланНО,
					                  |	СУММА(вт.КоличествоПрошлыйГод) КАК КоличествоПрошлыйГод,
					                  |	СУММА(вт.КоличествоПрошлыйМесяц) КАК КоличествоПрошлыйМесяц,
					                  |	вт.НаправлениеПродаж КАК НаправлениеПродаж,
					                  |	вт.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
					                  |	СУММА(вт.Показатель6МесПрошлогоГода) КАК Показатель6МесПрошлогоГода,
					                  |	СУММА(вт.Показатель6МесЭтогоГода) КАК Показатель6МесЭтогоГода,
					                  |	СУММА(вт.ПоказательПериодПланированияПрошлогоГода) КАК ПоказательПериодПланированияПрошлогоГода,
					                  |	СУММА(вт.ПоказательПериодПланированияЭтогоГода) КАК ПоказательПериодПланированияЭтогоГода,
					                  |	СУММА(вт.ПоказательПлан) КАК ПоказательПлан,
					                  |	СУММА(вт.ПоказательПланНО) КАК ПоказательПланНО,
					                  |	СУММА(вт.ПоказательПрошлыйГод) КАК ПоказательПрошлыйГод,
					                  |	СУММА(вт.ПоказательПрошлыйМесяц) КАК ПоказательПрошлыйМесяц,
					                  |	СУММА(вт.СуммаПлан) КАК СуммаПлан,
					                  |	СУММА(вт.СуммаПланНО) КАК СуммаПланНО,
					                  |	СУММА(вт.СуммаПрошлыйГод) КАК СуммаПрошлыйГод,
					                  |	СУММА(вт.СуммаПрошлыйМесяц) КАК СуммаПрошлыйМесяц,
					                  |	вт.ТоварнаяГруппа КАК ТоварнаяГруппа,
					                  |	вт.ТоварнаяГруппаСуммовоеПланирование,
					                  |	СУММА(ВЫБОР
					                  |			КОГДА вт.ПоказательПрошлыйГод <> 0
					                  |				ТОГДА (вт.ПоказательПлан - вт.ПоказательПрошлыйГод) / вт.ПоказательПрошлыйГод * 100
					                  |			ИНАЧЕ 0
					                  |		КОНЕЦ) КАК ПриростПредварительного,
					                  |	СУММА(ВЫБОР
					                  |			КОГДА вт.ПоказательПрошлыйГод <> 0
					                  |				ТОГДА (вт.ПоказательПланНО - вт.ПоказательПрошлыйГод) / вт.ПоказательПрошлыйГод * 100
					                  |			ИНАЧЕ 0
					                  |		КОНЕЦ) КАК ПриростНО,
					                  |	вт.Менеджер,
					                  |	СУММА(вт.ПоказательПланМенеджер) КАК ПоказательПланМенеджер,
					                  |	СУММА(ВЫБОР
					                  |			КОГДА вт.ПоказательПрошлыйГод <> 0
					                  |				ТОГДА (вт.ПоказательПланМенеджер - вт.ПоказательПрошлыйГод) / вт.ПоказательПрошлыйГод * 100
					                  |			ИНАЧЕ 0
					                  |		КОНЕЦ) КАК ПриростМенеджер,
					                  |	МАКСИМУМ(вт.ДатаУтвержденияМенеджером) КАК ДатаУтвержденияМенеджером
					                  |ИЗ
					                  |	вт КАК вт
					                  |
					                  |СГРУППИРОВАТЬ ПО
					                  |	вт.ТоварнаяГруппа,
					                  |	вт.ТоварнаяГруппаСуммовоеПланирование,
					                  |	вт.НаправлениеПродаж,
					                  |	вт.НоменклатурнаяГруппаПоказатели,
					                  |	вт.Менеджер
					                  |
					                  |УПОРЯДОЧИТЬ ПО
					                  |	ТоварнаяГруппа.Наименование,
					                  |	НоменклатурнаяГруппаПоказатели,
					                  |	Менеджер
					                  |ИТОГИ
					                  |	ВЫБОР
					                  |		КОГДА СУММА(Показатель6МесПрошлогоГода) <> 0
					                  |			ТОГДА СУММА(Показатель6МесЭтогоГода) / СУММА(Показатель6МесПрошлогоГода) * 100 - 100
					                  |		ИНАЧЕ 0
					                  |	КОНЕЦ КАК ДинамикаЗа6Месяцев,
					                  |	ВЫБОР
					                  |		КОГДА СУММА(ПоказательПериодПланированияПрошлогоГода) <> 0
					                  |			ТОГДА СУММА(ПоказательПериодПланированияЭтогоГода) / СУММА(ПоказательПериодПланированияПрошлогоГода) * 100 - 100
					                  |		ИНАЧЕ 0
					                  |	КОНЕЦ КАК ДинамикаЗаПериодПланирования,
					                  |	СУММА(КоличествоПлан),
					                  |	СУММА(КоличествоПланНО),
					                  |	СУММА(КоличествоПрошлыйГод),
					                  |	СУММА(КоличествоПрошлыйМесяц),
					                  |	СУММА(Показатель6МесПрошлогоГода),
					                  |	СУММА(Показатель6МесЭтогоГода),
					                  |	СУММА(ПоказательПериодПланированияПрошлогоГода),
					                  |	СУММА(ПоказательПериодПланированияЭтогоГода),
					                  |	СУММА(ПоказательПлан),
					                  |	СУММА(ПоказательПланНО),
					                  |	СУММА(ПоказательПрошлыйГод),
					                  |	СУММА(ПоказательПрошлыйМесяц),
					                  |	СУММА(СуммаПлан),
					                  |	СУММА(СуммаПланНО),
					                  |	СУММА(СуммаПрошлыйГод),
					                  |	СУММА(СуммаПрошлыйМесяц),
					                  |	ВЫБОР
					                  |		КОГДА СУММА(ПоказательПрошлыйГод) <> 0
					                  |			ТОГДА СУММА(ПоказательПлан - ПоказательПрошлыйГод) / СУММА(ПоказательПрошлыйГод) * 100
					                  |		ИНАЧЕ 0
					                  |	КОНЕЦ КАК ПриростПредварительного,
					                  |	ВЫБОР
					                  |		КОГДА СУММА(ПоказательПрошлыйГод) <> 0
					                  |			ТОГДА СУММА(ПоказательПланНО - ПоказательПрошлыйГод) / СУММА(ПоказательПрошлыйГод) * 100
					                  |		ИНАЧЕ 0
					                  |	КОНЕЦ КАК ПриростНО,
					                  |	СУММА(ПоказательПланМенеджер),
					                  |	ВЫБОР
					                  |		КОГДА СУММА(ПоказательПрошлыйГод) <> 0
					                  |			ТОГДА СУММА(ПоказательПланМенеджер - ПоказательПрошлыйГод) / СУММА(ПоказательПрошлыйГод) * 100
					                  |		ИНАЧЕ 0
					                  |	КОНЕЦ КАК ПриростМенеджер
					                  |ПО
					                  |	ТоварнаяГруппа.Наименование
					                  |АВТОУПОРЯДОЧИВАНИЕ";

	КонецЕсли;
				  
				   Результат = Запрос.Выполнить();
				   ПланированиеСерковТоварныеГруппы = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
КонецПроцедуры
//процедура СформироватьГруппировкуПоТоварнымГруппам(ПланыПоВсемМенеджерам,ПланированиеСерковТоварныеГруппы, Группировки)
//	табВрем = новый ТаблицаЗначений;
//	для каждого кол из ПланыПоВсемМенеджерам.Колонки цикл
//		табВрем.Колонки.Добавить(кол.Имя, кол.ТипЗначения,кол.Заголовок, кол.Ширина);
//	КонецЦикла;
//	ПреобразоватьВТЗРекурсия(ПланыПоВсемМенеджерам, табВрем);
//	табВрем.ВыбратьСтроку();
//	//сформируем дерево
//	Запрос = новый Запрос;
//	Запрос.УстановитьПараметр("тз", табВрем);
//	Запрос.Текст = "ВЫБРАТЬ
//				   |	тз.Вес,
//				   |	тз.ВесКоличество,
//				   |	тз.ВесО,
//				   |	тз.ДинамикаЗа6Месяцев,
//				   |	тз.ДинамикаЗаПериодПланирования,
//				   |	тз.КоличествоИтоговыйПлан,
//				   |	тз.КоличествоПлан,
//				   |	тз.КоличествоПланНО,
//				   |	тз.КоличествоПрошлыйГод,
//				   |	тз.КоличествоПрошлыйМесяц,
//				   |	тз.НаправлениеПродаж,
//				   |	тз.НоменклатурнаяГруппаПоказатели,
//				   |	тз.Отслеживать,
//				   |	тз.Показатель6МесПрошлогоГода,
//				   |	тз.Показатель6МесЭтогоГода,
//				   |	тз.ПоказательИтоговыйПлан,
//				   |	тз.ПоказательПериодПланированияПрошлогоГода,
//				   |	тз.ПоказательПериодПланированияЭтогоГода,
//				   |	тз.ПоказательПлан,
//				   |	тз.ПоказательПланНО,
//				   |	тз.ПоказательПрошлыйГод,
//				   |	тз.ПоказательПрошлыйМесяц,
//				   |	тз.СуммаИтоговыйПлан,
//				   |	тз.СуммаПлан,
//				   |	тз.СуммаПланМенеджер,
//				   |	тз.СуммаПланНО,
//				   |	тз.СуммаПрошлыйГод,
//				   |	тз.СуммаПрошлыйМесяц,
//				   |	тз.ТоварнаяГруппа,
//				   |	тз.ТоварнаяГруппаСуммовоеПланирование
//				   |ПОМЕСТИТЬ вт
//				   |ИЗ
//				   |	&тз КАК тз
//				   |;
//				   |
//				   |////////////////////////////////////////////////////////////////////////////////
//				   |ВЫБРАТЬ
//				   |	СУММА(вт.Вес) КАК Вес,
//				   |	СУММА(вт.ВесКоличество) КАК ВесКоличество,
//				   |	СУММА(вт.ВесО) КАК ВесО,
//				   |	СУММА(вт.ДинамикаЗа6Месяцев) КАК ДинамикаЗа6Месяцев,
//				   |	СУММА(вт.ДинамикаЗаПериодПланирования) КАК ДинамикаЗаПериодПланирования,
//				   |	СУММА(вт.КоличествоИтоговыйПлан) КАК КоличествоИтоговыйПлан,
//				   |	СУММА(вт.КоличествоПлан) КАК КоличествоПлан,
//				   |	СУММА(вт.КоличествоПланНО) КАК КоличествоПланНО,
//				   |	СУММА(вт.КоличествоПрошлыйГод) КАК КоличествоПрошлыйГод,
//				   |	СУММА(вт.КоличествоПрошлыйМесяц) КАК КоличествоПрошлыйМесяц,
//				   |	вт.НаправлениеПродаж КАК НаправлениеПродаж,
//				   |	вт.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
//				   |	вт.Отслеживать,
//				   |	СУММА(вт.Показатель6МесПрошлогоГода) КАК Показатель6МесПрошлогоГода,
//				   |	СУММА(вт.Показатель6МесЭтогоГода) КАК Показатель6МесЭтогоГода,
//				   |	СУММА(вт.ПоказательИтоговыйПлан) КАК ПоказательИтоговыйПлан,
//				   |	СУММА(вт.ПоказательПериодПланированияПрошлогоГода) КАК ПоказательПериодПланированияПрошлогоГода,
//				   |	СУММА(вт.ПоказательПериодПланированияЭтогоГода) КАК ПоказательПериодПланированияЭтогоГода,
//				   |	СУММА(вт.ПоказательПлан) КАК ПоказательПлан,
//				   |	СУММА(вт.ПоказательПланНО) КАК ПоказательПланНО,
//				   |	СУММА(вт.ПоказательПрошлыйГод) КАК ПоказательПрошлыйГод,
//				   |	СУММА(вт.ПоказательПрошлыйМесяц) КАК ПоказательПрошлыйМесяц,
//				   |	СУММА(вт.СуммаИтоговыйПлан) КАК СуммаИтоговыйПлан,
//				   |	СУММА(вт.СуммаПлан) КАК СуммаПлан,
//				   |	СУММА(вт.СуммаПланМенеджер) КАК СуммаПланМенеджер,
//				   |	СУММА(вт.СуммаПланНО) КАК СуммаПланНО,
//				   |	СУММА(вт.СуммаПрошлыйГод) КАК СуммаПрошлыйГод,
//				   |	СУММА(вт.СуммаПрошлыйМесяц) КАК СуммаПрошлыйМесяц,
//				   |	вт.ТоварнаяГруппа КАК ТоварнаяГруппа,
//				   |	вт.ТоварнаяГруппаСуммовоеПланирование
//				   |ИЗ
//				   |	вт КАК вт
//				   |
//				   |СГРУППИРОВАТЬ ПО
//				   |	вт.ТоварнаяГруппа,
//				   |	вт.ТоварнаяГруппаСуммовоеПланирование,
//				   |	вт.НаправлениеПродаж,
//				   |	вт.НоменклатурнаяГруппаПоказатели,
//				   |	вт.Отслеживать
//				   |
//				   |УПОРЯДОЧИТЬ ПО
//				   |	ТоварнаяГруппа.Наименование,
//				   |	НоменклатурнаяГруппаПоказатели,
//				   |	НаправлениеПродаж
//				   |ИТОГИ
//				   |	СУММА(ДинамикаЗа6Месяцев),
//				   |	СУММА(ДинамикаЗаПериодПланирования),
//				   |	СУММА(КоличествоИтоговыйПлан),
//				   |	СУММА(КоличествоПлан),
//				   |	СУММА(КоличествоПланНО),
//				   |	СУММА(КоличествоПрошлыйГод),
//				   |	СУММА(КоличествоПрошлыйМесяц),
//				   |	СУММА(Показатель6МесПрошлогоГода),
//				   |	СУММА(Показатель6МесЭтогоГода),
//				   |	СУММА(ПоказательИтоговыйПлан),
//				   |	СУММА(ПоказательПериодПланированияПрошлогоГода),
//				   |	СУММА(ПоказательПериодПланированияЭтогоГода),
//				   |	СУММА(ПоказательПлан),
//				   |	СУММА(ПоказательПланНО),
//				   |	СУММА(ПоказательПрошлыйГод),
//				   |	СУММА(ПоказательПрошлыйМесяц),
//				   |	СУММА(СуммаИтоговыйПлан),
//				   |	СУММА(СуммаПлан),
//				   |	СУММА(СуммаПланМенеджер),
//				   |	СУММА(СуммаПланНО),
//				   |	СУММА(СуммаПрошлыйГод),
//				   |	СУММА(СуммаПрошлыйМесяц)
//				   |ПО
//				   |	ТоварнаяГруппа
//				   |АВТОУПОРЯДОЧИВАНИЕ";
//				  
//				   Результат = Запрос.Выполнить();
//				   ПланированиеСерковТоварныеГруппы = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
//КонецПроцедуры	

Процедура ПреобразоватьВТЗРекурсия(тДерево, тТаблица)
   Для Каждого тСтр Из тДерево.Строки Цикл
	   Если ЗначениеЗаполнено(тстр.ТоварнаяГруппа)тогда
		   нСтр = тТаблица.Добавить();
		   ЗаполнитьЗначенияСвойств(нстр, тСтр);
	   КонецЕсли;
 
      Если тСтр.Строки.Количество()>0 Тогда
         ПреобразоватьВТЗРекурсия(тСтр, тТаблица);
      КонецЕсли;
   КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель8Заполнить2(Кнопка)
	
	
	ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.Показатель6месЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.Показатель6месПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.ПоказательПериодПланированияЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияЭтогоГода(),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.ПоказательПериодПланированияПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(),"ДФ=dd.MM.yyyy") ;
	
	ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Колонки.Показатель6месЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Колонки.Показатель6месПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Колонки.ПоказательПериодПланированияЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияЭтогоГода(),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Колонки.ПоказательПериодПланированияПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(),"ДФ=dd.MM.yyyy") ;
	

	
	ЗагрузитьПланы(ПланированиеНООТРДПНесколькоПодразделений2);
	//если у менеджера стоит Предаврительный план = 0, то разобъем предварительный план на направление пропорционально менеджерам
	////
	распределитьПредварительныйПлан(ПланированиеНООТРДПНесколькоПодразделений2,ПланыПоВсемМенеджерам);
	
	
	ТекущееНаправлениеПродаж = неопределено;
	СтароеНаправлениеПродаж = неопределено;
	ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки.Очистить();
	ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Колонки.Вес.Видимость = ложь;
	ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Колонки.ВесКоличество.Видимость = ложь;
	
	
		ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.КоличествоПрошлыйГод.Видимость = ЛожЬ;
        ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.СуммаПрошлыйГод.Видимость = ЛожЬ;
		
		ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.КоличествоПрошлыйМесяц.Видимость = ЛожЬ;
		ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.СуммаПрошлыйМесяц.Видимость = ЛожЬ;
		
		ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.КоличествоПлан.Видимость = ЛожЬ;
		ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.СуммаПлан.Видимость = ЛожЬ;
		
		ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.КоличествоПланНО.Видимость = ЛожЬ;
		ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.СуммаПланНО.Видимость = ЛожЬ;
		
		ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.КоличествоИтоговыйПлан.Видимость = ЛожЬ;
		ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.СуммаИтоговыйПлан.Видимость = ЛожЬ;
		
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП
		               |ИЗ
		               |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		               |ГДЕ
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП <> ДАТАВРЕМЯ(1, 1, 1)
		               |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования";
		Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
		
		Рез = Запрос.Выполнить().Выбрать();
		
		Если Рез.Количество()>0 тогда
			ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.ПоказательИтоговыйПлан.Видимость = истина;
			ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.ПриростИтог.Видимость = истина;
		иначе
			ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.ПоказательИтоговыйПлан.Видимость = ложь;
			ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.Колонки.ПриростИтог.Видимость = ложь;
		КонецЕсли;

		Запрос.Текст = "ВЫБРАТЬ
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП КАК ДатаУтвержденияРДП,
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО КАК ДатаУтвержденияНО,
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияМенеджером КАК ДатаУтвержденияМенеджером
		               |ИЗ
		               |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		               |ГДЕ
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО <> ДАТАВРЕМЯ(1, 1, 1)
		               |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования";
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Количество()>0 тогда
		ЭлементыФормы.КоманднаяПанель8.Кнопки.кнУтвердитьНО2.Текст = "Утверждается";
	иначе
		ЭлементыФормы.КоманднаяПанель8.Кнопки.кнУтвердитьНО2.Текст = "На утверждение";
	КонецЕсли;

КонецПроцедуры

Процедура распределитьПредварительныйПлан(строка,ПланыМенеджеров)
	для каждого стр из строка.Строки цикл
		Если значениеЗаполнено(стр.ТоварнаяГруппа) тогда
			Если значениеЗаполнено(стр.КоличествоПлан) или
				значениеЗаполнено(стр.СуммаПлан) или
				значениеЗаполнено(стр.КоличествоПланНО) или
				значениеЗаполнено(стр.СуммаПланНО) тогда
				
				отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
				ЗаполнитьЗначенияСвойств(отбор,стр);
				//найденныеСтроки = ПланыПоВсемМенеджерам.Строки.НайтиСтроки(отбор, истина);
				найденныеСтроки = ПланыМенеджеров.Строки.НайтиСтроки(отбор, истина);
				
				Для каждого НайденнаяСтрока из найденныеСтроки цикл
					Если не ЗначениеЗаполнено(НайденнаяСтрока.КоличествоПлан) и (ЗначениеЗаполнено(НайденнаяСтрока.КоличествоПрошлыйГод)) тогда
						НайденнаяСтрока.КоличествоПлан = окр(?(стр.КоличествоПрошлыйГод>0,стр.КоличествоПлан*НайденнаяСтрока.КоличествоПрошлыйГод/стр.КоличествоПрошлыйГод,0));
					КонецЕсли;
					
					Если не ЗначениеЗаполнено(НайденнаяСтрока.СуммаПлан) и ЗначениеЗаполнено(НайденнаяСтрока.СуммаПрошлыйГод) тогда
						НайденнаяСтрока.СуммаПлан = ?(стр.СуммаПрошлыйГод>0,стр.СуммаПлан*НайденнаяСтрока.СуммаПрошлыйГод/стр.СуммаПрошлыйГод,0);
					КонецЕсли;
					
					Если не ЗначениеЗаполнено(НайденнаяСтрока.КоличествоПланНО) и ЗначениеЗаполнено(НайденнаяСтрока.КоличествоПрошлыйГод) тогда
						НайденнаяСтрока.КоличествоПланНО = окр(?(стр.КоличествоПрошлыйГод>0,стр.КоличествоПланНО*НайденнаяСтрока.КоличествоПрошлыйГод/стр.КоличествоПрошлыйГод,0));
					КонецЕсли;
					
					Если не ЗначениеЗаполнено(НайденнаяСтрока.КоличествоПланМенеджер) и ЗначениеЗаполнено(НайденнаяСтрока.КоличествоПрошлыйГод) тогда
						НайденнаяСтрока.КоличествоПланМенеджер = окр(?(стр.КоличествоПрошлыйГод>0,стр.КоличествоПланНО*НайденнаяСтрока.КоличествоПрошлыйГод/стр.КоличествоПрошлыйГод,0));
					КонецЕсли;
					
					Если не ЗначениеЗаполнено(НайденнаяСтрока.СуммаПланНО) и ЗначениеЗаполнено(НайденнаяСтрока.СуммаПрошлыйГод) тогда
						НайденнаяСтрока.СуммаПланНО = ?(стр.СуммаПрошлыйГод>0,стр.СуммаПланНО*НайденнаяСтрока.СуммаПрошлыйГод/стр.СуммаПрошлыйГод,0);
					КонецЕсли;

                    Если не ЗначениеЗаполнено(НайденнаяСтрока.СуммаПланМенеджер) и ЗначениеЗаполнено(НайденнаяСтрока.СуммаПрошлыйГод) тогда
						НайденнаяСтрока.СуммаПланМенеджер = ?(стр.СуммаПрошлыйГод>0,стр.СуммаПланНО*НайденнаяСтрока.СуммаПрошлыйГод/стр.СуммаПрошлыйГод,0);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		распределитьПредварительныйПлан(стр,ПланыМенеджеров);
	КонецЦикла;
КонецПроцедуры

Процедура ПроставитьФактВДерево(Дерево, Факт)
	Для каждого стр из Дерево.Строки цикл
		Если ЗначениеЗаполнено(стр.НаправлениеПродаж) и ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) и типЗнч(стр.НоменклатурнаяГруппаПоказатели)=Тип("СправочникСсылка.НоменклатурныеГруппы")  тогда
				отбор = новый Структура("НаправлениеПродаж,НоменклатурнаяГруппа");
				отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
				отбор.НоменклатурнаяГруппа = стр.НоменклатурнаяГруппаПоказатели;
				НайденныеСтроки = Факт.НайтиСтроки(отбор);
				Если НайденныеСтроки.Количество()>0 тогда
					стр.КоличествоПрошлыйГод = НайденныеСтроки[0].КоличествоПрошлыйГод;
					стр.СуммаПрошлыйГод = НайденныеСтроки[0].СуммаПрошлыйГод;
					
					стр.КоличествоПрошлыйМесяц = НайденныеСтроки[0].КоличествоПрошлыйМесяц;
					стр.СуммаПрошлыйМесяц = НайденныеСтроки[0].СуммаПрошлыйМесяц;
					
					стр.ПоказательПрошлыйМесяц = НайденныеСтроки[0].ПоказательПрошлыйМесяц;
					стр.ПоказательПрошлыйГод = НайденныеСтроки[0].ПоказательПрошлыйГод;
					
					стр.Показатель6МесЭтогоГода = НайденныеСтроки[0].Показатель6МесЭтогоГода;
					стр.Показатель6МесПрошлогоГода = НайденныеСтроки[0].Показатель6МесПрошлогоГода;
					
					стр.ПоказательПериодПланированияЭтогоГода = НайденныеСтроки[0].ПоказательПериодПланированияЭтогоГода;
					стр.ПоказательПериодПланированияПрошлогоГода = НайденныеСтроки[0].ПоказательПериодПланированияПрошлогоГода;

				КонецЕсли;
			Иначе//
				отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппаПланирования");
				отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
				отбор.ТоварнаяГруппаПланирования = стр.ТоварнаяГруппа;
				НайденныеСтроки = Факт.НайтиСтроки(отбор);
				Если НайденныеСтроки.Количество()>0 тогда
					КоличествоПрошлыйГод = 0;
					СуммаПрошлыйГод = 0;
					КоличествоПрошлыйМесяц = 0;
					СуммаПрошлыйМесяц = 0;
					ПоказательПрошлыйМесяц = 0;
					ПоказательПрошлыйГод = 0;
					Показатель6МесЭтогоГода = 0;
					Показатель6МесПрошлогоГода = 0;
					ПоказательПериодПланированияЭтогоГода = 0;
					ПоказательПериодПланированияПрошлогоГода = 0;
					
					Для каждого эл из НайденныеСтроки цикл
						КоличествоПрошлыйГод = КоличествоПрошлыйГод + эл.КоличествоПрошлыйГод;
						СуммаПрошлыйГод = СуммаПрошлыйГод + эл.СуммаПрошлыйГод;
						КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц + эл.КоличествоПрошлыйМесяц;
						СуммаПрошлыйМесяц = СуммаПрошлыйМесяц + эл.СуммаПрошлыйМесяц;
						ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц + эл.ПоказательПрошлыйМесяц;
						ПоказательПрошлыйГод = ПоказательПрошлыйГод + эл.ПоказательПрошлыйГод;
						
						Показатель6МесЭтогоГода = Показатель6МесЭтогоГода+эл.Показатель6МесЭтогоГода;
						Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода+эл.Показатель6МесПрошлогоГода;
						
						ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода+эл.ПоказательПериодПланированияЭтогоГода;
						ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода+эл.ПоказательПериодПланированияПрошлогоГода;

					КонецЦикла;
					
					стр.КоличествоПрошлыйГод = КоличествоПрошлыйГод;
					стр.СуммаПрошлыйГод = СуммаПрошлыйГод;
					
					стр.КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц;
					стр.СуммаПрошлыйМесяц = СуммаПрошлыйМесяц;
					
					стр.ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц;
					стр.ПоказательПрошлыйГод = ПоказательПрошлыйГод;
					
					стр.Показатель6МесЭтогоГода = Показатель6МесЭтогоГода;
					стр.Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода;
					
					стр.ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода;
					стр.ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода;

				иначе//Надо поискать в родителях
					отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппаПланированияРодитель");
					отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
					отбор.ТоварнаяГруппаПланированияРодитель = стр.ТоварнаяГруппа;
					НайденныеСтроки = Факт.НайтиСтроки(отбор);
					Если НайденныеСтроки.Количество()>0 тогда
						КоличествоПрошлыйГод = 0;
						СуммаПрошлыйГод = 0;
						КоличествоПрошлыйМесяц = 0;
						СуммаПрошлыйМесяц = 0;
						ПоказательПрошлыйМесяц = 0;
						ПоказательПрошлыйГод = 0;
						Показатель6МесЭтогоГода = 0;
						Показатель6МесПрошлогоГода = 0;
					    ПоказательПериодПланированияЭтогоГода = 0;
					    ПоказательПериодПланированияПрошлогоГода = 0;
						
						Для каждого эл из НайденныеСтроки цикл
							КоличествоПрошлыйГод = КоличествоПрошлыйГод + эл.КоличествоПрошлыйГод;
							СуммаПрошлыйГод = СуммаПрошлыйГод + эл.СуммаПрошлыйГод;
							КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц + эл.КоличествоПрошлыйМесяц;
							СуммаПрошлыйМесяц = СуммаПрошлыйМесяц + эл.СуммаПрошлыйМесяц;
							ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц + эл.ПоказательПрошлыйМесяц;
							ПоказательПрошлыйГод = ПоказательПрошлыйГод + эл.ПоказательПрошлыйГод;
							
							Показатель6МесЭтогоГода = Показатель6МесЭтогоГода+эл.Показатель6МесЭтогоГода;
							Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода+эл.Показатель6МесПрошлогоГода;
						
						    ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода+эл.ПоказательПериодПланированияЭтогоГода;
						    ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода+эл.ПоказательПериодПланированияПрошлогоГода;
						КонецЦикла;
						
						стр.КоличествоПрошлыйГод = КоличествоПрошлыйГод;
						стр.СуммаПрошлыйГод = СуммаПрошлыйГод;
						
						стр.КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц;
						стр.СуммаПрошлыйМесяц = СуммаПрошлыйМесяц;
						стр.ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц;
						стр.ПоказательПрошлыйГод = ПоказательПрошлыйГод;
						
						стр.Показатель6МесЭтогоГода = Показатель6МесЭтогоГода;
						стр.Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода;
					
					    стр.ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода;
					    стр.ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода;
						
					иначе//Надо поискать в родителяхРодителей
						отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппаПланированияРодительРодитель");
						отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
						отбор.ТоварнаяГруппаПланированияРодительРодитель = стр.ТоварнаяГруппа;
						НайденныеСтроки = Факт.НайтиСтроки(отбор);
						Если НайденныеСтроки.Количество()>0 тогда
							КоличествоПрошлыйГод = 0;
							СуммаПрошлыйГод = 0;
							КоличествоПрошлыйМесяц = 0;
							СуммаПрошлыйМесяц = 0;
							ПоказательПрошлыйМесяц = 0;
							ПоказательПрошлыйГод = 0;
							
							Показатель6МесЭтогоГода = 0;
							Показатель6МесПрошлогоГода = 0;
					        ПоказательПериодПланированияЭтогоГода = 0;
					        ПоказательПериодПланированияПрошлогоГода = 0;
						
							Для каждого эл из НайденныеСтроки цикл
								КоличествоПрошлыйГод = КоличествоПрошлыйГод + эл.КоличествоПрошлыйГод;
								СуммаПрошлыйГод = СуммаПрошлыйГод + эл.СуммаПрошлыйГод;
								КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц + эл.КоличествоПрошлыйМесяц;
								СуммаПрошлыйМесяц = СуммаПрошлыйМесяц + эл.СуммаПрошлыйМесяц;
								ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц + эл.ПоказательПрошлыйМесяц;
								ПоказательПрошлыйГод = ПоказательПрошлыйГод + эл.ПоказательПрошлыйГод;
								
								Показатель6МесЭтогоГода = Показатель6МесЭтогоГода+эл.Показатель6МесЭтогоГода;
                                Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода+эл.Показатель6МесПрошлогоГода;
						
						        ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода+эл.ПоказательПериодПланированияЭтогоГода;
						        ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода+эл.ПоказательПериодПланированияПрошлогоГода;
							КонецЦикла;
							
							стр.КоличествоПрошлыйГод = КоличествоПрошлыйГод;
							стр.СуммаПрошлыйГод = СуммаПрошлыйГод;
							
							стр.КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц;
							стр.СуммаПрошлыйМесяц = СуммаПрошлыйМесяц;
							
							стр.ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц;
							стр.ПоказательПрошлыйГод = ПоказательПрошлыйГод;
							
							стр.Показатель6МесЭтогоГода = Показатель6МесЭтогоГода;
                            стр.Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода;
					
					        стр.ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода;
					        стр.ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода;
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Стр.Строки.Количество()=0 тогда
			стр.ДинамикаЗа6Месяцев = ?(стр.Показатель6МесПрошлогоГода = 0, 0, стр.Показатель6МесЭтогоГода/стр.Показатель6МесПрошлогоГода*100)-100;
			стр.ДинамикаЗаПериодПланирования = ?(стр.ПоказательПериодПланированияПрошлогоГода = 0, 0, стр.ПоказательПериодПланированияЭтогоГода/стр.ПоказательПериодПланированияПрошлогоГода*100)-100;
		КонецЕсли;
		Если Стр.Строки.Количество()>0 тогда
			ПроставитьФактВДерево(стр, Факт);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ПроставитьФактВДеревоМенеджеров(Дерево, Факт)
	Для каждого стр из Дерево.Строки цикл
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) и ЗначениеЗаполнено(стр.Менеджер) тогда
			Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) и типЗнч(стр.НоменклатурнаяГруппаПоказатели)=Тип("СправочникСсылка.НоменклатурныеГруппы")  тогда
				отбор = новый Структура("Менеджер,НоменклатурнаяГруппа");
				отбор.Менеджер = стр.Менеджер;
				отбор.НоменклатурнаяГруппа = стр.НоменклатурнаяГруппаПоказатели;
				НайденныеСтроки = Факт.НайтиСтроки(отбор);
				Если НайденныеСтроки.Количество()>0 тогда
					стр.КоличествоПрошлыйГод = НайденныеСтроки[0].КоличествоПрошлыйГод;
					стр.СуммаПрошлыйГод = НайденныеСтроки[0].СуммаПрошлыйГод;
					
					стр.КоличествоПрошлыйМесяц = НайденныеСтроки[0].КоличествоПрошлыйМесяц;
					стр.СуммаПрошлыйМесяц = НайденныеСтроки[0].СуммаПрошлыйМесяц;
					стр.ПоказательПрошлыйМесяц = НайденныеСтроки[0].ПоказательПрошлыйМесяц;
					стр.ПоказательПрошлыйГод = НайденныеСтроки[0].ПоказательПрошлыйГод;
					
					стр.Показатель6МесЭтогоГода = НайденныеСтроки[0].Показатель6МесЭтогоГода;
					стр.Показатель6МесПрошлогоГода = НайденныеСтроки[0].Показатель6МесПрошлогоГода;
					
					стр.ПоказательПериодПланированияЭтогоГода = НайденныеСтроки[0].ПоказательПериодПланированияЭтогоГода;
					стр.ПоказательПериодПланированияПрошлогоГода = НайденныеСтроки[0].ПоказательПериодПланированияПрошлогоГода;

				КонецЕсли;
			Иначе//
				отбор = новый Структура("Менеджер,ТоварнаяГруппаПланирования");
				отбор.Менеджер = стр.Менеджер;
				отбор.ТоварнаяГруппаПланирования = стр.ТоварнаяГруппа;
				НайденныеСтроки = Факт.НайтиСтроки(отбор);
				Если НайденныеСтроки.Количество()>0 тогда
					КоличествоПрошлыйГод = 0;
					СуммаПрошлыйГод = 0;
					КоличествоПрошлыйМесяц = 0;
					СуммаПрошлыйМесяц = 0;
					ПоказательПрошлыйМесяц = 0;
					ПоказательПрошлыйГод = 0;
					
					Показатель6МесЭтогоГода = 0;
					Показатель6МесПрошлогоГода = 0;
					
					ПоказательПериодПланированияЭтогоГода = 0;
					ПоказательПериодПланированияПрошлогоГода = 0;
					
					Для каждого эл из НайденныеСтроки цикл
						КоличествоПрошлыйГод = КоличествоПрошлыйГод + эл.КоличествоПрошлыйГод;
						СуммаПрошлыйГод = СуммаПрошлыйГод + эл.СуммаПрошлыйГод;
						КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц + эл.КоличествоПрошлыйМесяц;
						СуммаПрошлыйМесяц = СуммаПрошлыйМесяц + эл.СуммаПрошлыйМесяц;
						
						ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц + эл.ПоказательПрошлыйМесяц;
						ПоказательПрошлыйГод = ПоказательПрошлыйГод + эл.ПоказательПрошлыйГод;
						
						Показатель6МесЭтогоГода = Показатель6МесЭтогоГода + эл.Показатель6МесЭтогоГода;
						Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода + эл.Показатель6МесПрошлогоГода;
						
						ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода + эл.ПоказательПериодПланированияЭтогоГода;
						ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода + эл.ПоказательПериодПланированияПрошлогоГода;
					КонецЦикла;
					
					стр.КоличествоПрошлыйГод = КоличествоПрошлыйГод;
					стр.СуммаПрошлыйГод = СуммаПрошлыйГод;
					
					стр.КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц;
					стр.СуммаПрошлыйМесяц = СуммаПрошлыйМесяц;
					
					стр.ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц;
					стр.ПоказательПрошлыйГод = ПоказательПрошлыйГод;
					
					стр.Показатель6МесЭтогоГода = Показатель6МесЭтогоГода;
					стр.Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода;
					
					стр.ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода;
					стр.ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода;

				иначе//Надо поискать в родителях
					отбор = новый Структура("Менеджер,ТоварнаяГруппаПланированияРодитель");
					отбор.Менеджер = стр.Менеджер;
					отбор.ТоварнаяГруппаПланированияРодитель = стр.ТоварнаяГруппа;
					НайденныеСтроки = Факт.НайтиСтроки(отбор);
					Если НайденныеСтроки.Количество()>0 тогда
						КоличествоПрошлыйГод = 0;
						СуммаПрошлыйГод = 0;
						КоличествоПрошлыйМесяц = 0;
						СуммаПрошлыйМесяц = 0;
						
						ПоказательПрошлыйМесяц = 0;
						ПоказательПрошлыйГод = 0;
						
						Показатель6МесЭтогоГода = 0;
						Показатель6МесПрошлогоГода = 0;
					
					    ПоказательПериодПланированияЭтогоГода = 0;
					    ПоказательПериодПланированияПрошлогоГода = 0;

						Для каждого эл из НайденныеСтроки цикл
							КоличествоПрошлыйГод = КоличествоПрошлыйГод + эл.КоличествоПрошлыйГод;
							СуммаПрошлыйГод = СуммаПрошлыйГод + эл.СуммаПрошлыйГод;
							КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц + эл.КоличествоПрошлыйМесяц;
							СуммаПрошлыйМесяц = СуммаПрошлыйМесяц + эл.СуммаПрошлыйМесяц;
							
							ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц + эл.ПоказательПрошлыйМесяц;
							ПоказательПрошлыйГод = ПоказательПрошлыйГод + эл.ПоказательПрошлыйГод;
							
							Показатель6МесЭтогоГода = Показатель6МесЭтогоГода + эл.Показатель6МесЭтогоГода;
							Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода + эл.Показатель6МесПрошлогоГода;
						
						    ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода + эл.ПоказательПериодПланированияЭтогоГода;
						    ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода + эл.ПоказательПериодПланированияПрошлогоГода;

						КонецЦикла;
						
						стр.КоличествоПрошлыйГод = КоличествоПрошлыйГод;
						стр.СуммаПрошлыйГод = СуммаПрошлыйГод;
						
						стр.КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц;
						стр.СуммаПрошлыйМесяц = СуммаПрошлыйМесяц;
						
						стр.ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц;
						стр.ПоказательПрошлыйГод = ПоказательПрошлыйГод;
						
						стр.Показатель6МесЭтогоГода = Показатель6МесЭтогоГода;
						стр.Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода;
					
					стр.ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода;
					стр.ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода;

						
					иначе//Надо поискать в родителяхРодителей
						отбор = новый Структура("Менеджер,ТоварнаяГруппаПланированияРодительРодитель");
						отбор.Менеджер = стр.Менеджер;
						отбор.ТоварнаяГруппаПланированияРодительРодитель = стр.ТоварнаяГруппа;
						НайденныеСтроки = Факт.НайтиСтроки(отбор);
						Если НайденныеСтроки.Количество()>0 тогда
							КоличествоПрошлыйГод = 0;
							СуммаПрошлыйГод = 0;
							КоличествоПрошлыйМесяц = 0;
							СуммаПрошлыйМесяц = 0;
							
							ПоказательПрошлыйМесяц = 0;
							ПоказательПрошлыйГод = 0;
							
							Показатель6МесЭтогоГода = 0;
							Показатель6МесПрошлогоГода = 0;
					
					    ПоказательПериодПланированияЭтогоГода = 0;
					    ПоказательПериодПланированияПрошлогоГода = 0;
						
							Для каждого эл из НайденныеСтроки цикл
								КоличествоПрошлыйГод = КоличествоПрошлыйГод + эл.КоличествоПрошлыйГод;
								СуммаПрошлыйГод = СуммаПрошлыйГод + эл.СуммаПрошлыйГод;
								КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц + эл.КоличествоПрошлыйМесяц;
								СуммаПрошлыйМесяц = СуммаПрошлыйМесяц + эл.СуммаПрошлыйМесяц;
								
								ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц + эл.ПоказательПрошлыйМесяц;
								ПоказательПрошлыйГод = ПоказательПрошлыйГод + эл.ПоказательПрошлыйГод;
								
								Показатель6МесЭтогоГода = Показатель6МесЭтогоГода + эл.Показатель6МесЭтогоГода;
								Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода + эл.Показатель6МесПрошлогоГода;
						
						    ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода + эл.ПоказательПериодПланированияЭтогоГода;
						    ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода + эл.ПоказательПериодПланированияПрошлогоГода;
							КонецЦикла;
							
							стр.КоличествоПрошлыйГод = КоличествоПрошлыйГод;
							стр.СуммаПрошлыйГод = СуммаПрошлыйГод;
							
							стр.КоличествоПрошлыйМесяц = КоличествоПрошлыйМесяц;
							стр.СуммаПрошлыйМесяц = СуммаПрошлыйМесяц;
							
							стр.ПоказательПрошлыйМесяц = ПоказательПрошлыйМесяц;
							стр.ПоказательПрошлыйГод = ПоказательПрошлыйГод;
							
							стр.Показатель6МесЭтогоГода = Показатель6МесЭтогоГода;
                            стр.Показатель6МесПрошлогоГода = Показатель6МесПрошлогоГода;
					
					стр.ПоказательПериодПланированияЭтогоГода = ПоказательПериодПланированияЭтогоГода;
					стр.ПоказательПериодПланированияПрошлогоГода = ПоказательПериодПланированияПрошлогоГода;
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Стр.Строки.Количество()=0 тогда
			стр.ДинамикаЗа6Месяцев = ?(стр.Показатель6МесПрошлогоГода = 0, 0, стр.Показатель6МесЭтогоГода/стр.Показатель6МесПрошлогоГода*100)-100;
			стр.ДинамикаЗаПериодПланирования = ?(стр.ПоказательПериодПланированияПрошлогоГода = 0, 0, стр.ПоказательПериодПланированияЭтогоГода/стр.ПоказательПериодПланированияПрошлогоГода*100)-100;
		КонецЕсли;
		Если Стр.Строки.Количество()>0 тогда
			ПроставитьФактВДеревоМенеджеров(стр, Факт);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ПланированиеНООТРДПНесколькоПодразделений2ПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.НаправлениеПродаж) и не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) тогда
			//ОформлениеСтроки.ДанныеСтроки.Утвержден = Истина Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗеленый;
			Для каждого яч из ОформлениеСтроки.ячейки	Цикл
				Яч.ТолькоПросмотр = Истина;
				Яч.Шрифт =  Новый Шрифт(,,Истина,,);
				
			конецЦикла;
		конецЕсли;	
		                       
		//Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.товарнаягруппа) тогда
		//	Если ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа.СуммовоеПланирование тогда
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательПрошлыйГод = ОформлениеСтроки.ДанныеСтроки.СуммаПрошлыйГод;
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательПрошлыйМесяц = ОформлениеСтроки.ДанныеСтроки.СуммаПрошлыйМесяц;
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательПлан = ОформлениеСтроки.ДанныеСтроки.СуммаПлан;
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательПланНО = ОформлениеСтроки.ДанныеСтроки.СуммаПланНО;
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательИтоговыйПлан = ОформлениеСтроки.ДанныеСтроки.СуммаИтоговыйПлан;
		//		
		//	иначе
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательПрошлыйГод = ОформлениеСтроки.ДанныеСтроки.КоличествоПрошлыйГод;
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательПрошлыйМесяц = ОформлениеСтроки.ДанныеСтроки.КоличествоПрошлыйМесяц;
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательПлан = ОформлениеСтроки.ДанныеСтроки.КоличествоПлан;
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательПланНО = ОформлениеСтроки.ДанныеСтроки.КоличествоПланНО;
		//		ОформлениеСтроки.ДанныеСтроки.ПоказательИтоговыйПлан = ОформлениеСтроки.ДанныеСтроки.КоличествоИтоговыйПлан;
		//		
		//	КонецЕсли;
		//КонецЕсли;
		
		Если ОформлениеСтроки.ДанныеСтроки.ПоказательПланНО<>ОформлениеСтроки.ДанныеСтроки.ПоказательИтоговыйПлан и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ПоказательИтоговыйПлан) и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ДатаУтвержденияРДП) тогда
			ОформлениеСтроки.ячейки.ПоказательИтоговыйПлан.ЦветФона = WebЦвета.Красный;
		КонецЕсли;
		
		Если ОформлениеСтроки.ДанныеСтроки.ПоказательПланНО<>ОформлениеСтроки.ДанныеСтроки.ПоказательПланыМенеджеров и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ПоказательИтоговыйПлан) тогда //и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ДатаУтвержденияНО) тогда
			ОформлениеСтроки.ячейки.ПоказательПланыМенеджеров.ЦветФона = WebЦвета.Красный;
		КонецЕсли;

		//Если не ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппаСуммовоеПланирование тогда
		//	ОформлениеСтроки.ДанныеСтроки.ПоказательПлан = Формат(ОформлениеСтроки.ДанныеСтроки.ПоказательПлан,"ЧДЦ=0");
		//	ОформлениеСтроки.ДанныеСтроки.ПоказательПланыМенеджеров = Формат(ОформлениеСтроки.ДанныеСтроки.ПоказательПланыМенеджеров,"ЧДЦ=0");
		//	ОформлениеСтроки.ДанныеСтроки.ПоказательПланНО = Формат(ОформлениеСтроки.ДанныеСтроки.ПоказательПланНО,"ЧДЦ=0");
		//КонецЕсли;
		
	конецЦикла;	
КонецПроцедуры

Процедура ПланированиеНООТРДПНесколькоПодразделений2ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ЗначениеЗаполнено(ДанныеСтроки.товарнаягруппа) тогда
		//		Если не ДанныеСтроки.товарнаягруппа.СуммовоеПланирование тогда
		Если не ДанныеСтроки.товарнаягруппаСуммовоеПланирование тогда
			Если ДанныеСтроки.ПоказательПрошлыйГод<>неопределено тогда
				//ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				//ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПлан - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
				////ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПланНО - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				//ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПланНО - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
				////ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоИтоговыйПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				//ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательИтоговыйПлан - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
			КонецЕсли;
			ДанныеСтроки.СуммаПрошлыйГод   = 0;
			ДанныеСтроки.СуммаПрошлыйМесяц = 0;
			//ДанныеСтроки.СуммаПлан         = 0;
			//ДанныеСтроки.СуммаПланНО       = 0;
			//ДанныеСтроки.СуммаИтоговыйПлан = 0;
		иначе
			//Если ДанныеСтроки.ПоказательПрошлыйГод<>неопределено тогда
			//	ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			//	ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПланНО - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			//	ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаИтоговыйПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			//КонецЕсли;
			ДанныеСтроки.КоличествоПрошлыйГод   = 0;
			ДанныеСтроки.КоличествоПрошлыйМесяц = 0;
			//ДанныеСтроки.КоличествоПлан         = 0;
			//ДанныеСтроки.КоличествоПланНО       = 0;
			//ДанныеСтроки.КоличествоИтоговыйПлан = 0;
		КонецЕсли;
		Если ДанныеСтроки.ТоварнаяГруппа<>СпрПДЗ тогда
			ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПлан - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
			ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПланНО - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
			ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательИтоговыйПлан - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
			ДанныеСтроки.ПриростПланыМенеджеров = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПланыМенеджеров - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
		Иначе
			ДанныеСтроки.ПоказательПланыМенеджеров = 7;
			ДанныеСтроки.ПоказательПланНО = 7;
			ДанныеСтроки.ПоказательИтоговыйПлан = 7;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеНООТРДПНесколькоПодразделений2ПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущиеДанные<>неопределено тогда
		Если ТекущееНаправлениеПродаж <> Элемент.ТекущиеДанные.НаправлениеПродаж тогда
			СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
			ТекущееНаправлениеПродаж = Элемент.ТекущиеДанные.НаправлениеПродаж;
			ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеНОПоМенеджерамНсколькоПодразделений2);
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Колонки.НаправлениеПродаж.Видимость = ложь;
			
			ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2; 
			Если ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Значение.Строки.Количество()>0 тогда
				ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Развернуть(ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Значение.Строки[0],истина);
			КонецЕсли;
			
			СформироватьГруппировкуПоТоварнымГруппам(ПланированиеНОПоМенеджерамНсколькоПодразделений2,ПланированиеНОПоМенеджерамТоварныеГруппы,2);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель9кнСкоприроватьВсемМенеджерамПоНаправлению2(Кнопка)
	Если ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки.Количество()>0 тогда
		ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки.Удалить(ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки[0]);
	КонецЕсли;
	ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки.Очистить();
	
	нстр = ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки.Добавить();
	нстр.НаправлениеПродаж = ТекущееНаправлениеПродаж;
	нстр.МесяцПланирования = НачалоПериода;
	
	//Получим всех менеджеров направления
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Пользователи.Ссылка КАК Менеджер
	             |ИЗ
	             |	Справочник.Пользователи КАК Пользователи
	             |ГДЕ
	             |	Пользователи.ПометкаУдаления = ЛОЖЬ
	             |	И Пользователи.НаправлениеПродаж = &НаправлениеПродаж
	             |	И Пользователи.Родитель <> &выключенные
	             |	И Пользователи.Заблокирован = ЛОЖЬ
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Пользователи.Наименование
	             |АВТОУПОРЯДОЧИВАНИЕ";
				 Запрос.УстановитьПараметр("НаправлениеПродаж",ТекущееНаправлениеПродаж);
				 Запрос.УстановитьПараметр("выключенные",Справочники.Пользователи.НайтиПоНаименованию("Выключенные"));
				 Рез = Запрос.Выполнить().Выбрать();
				 
				 Пока Рез.Следующий() цикл
					 строкаМенеджер = нстр.Строки.Добавить();
					 строкаМенеджер.Менеджер = рез.Менеджер;
					 СкопироватьПоказателиМенеджерам2(строкаМенеджер,ТекущееНаправлениеПродаж);
				 КонецЦикла;
				 
       //Записать и загрузить
	   ЗаписатьПланыНО(ЭтоМенеджер);
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ВесОПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.Отслеживать = истина;
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.Вес = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ВесО;
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ВесКоличество = 0;
		иначе	
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.Отслеживать = истина;
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ВесКоличество = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ВесО;
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.Вес = 0;
		КонецЕсли;
	КонецЕсли;
	
	Менеджер = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.Менеджер;
	
	ПересчитатьВесПоМенеджеру(Менеджер, ПланированиеНОПоМенеджерамНсколькоПодразделений2);
	
КонецПроцедуры

процедура ПересчитатьВесПоМенеджеру(Менеджер, Дерево)
	Отбор = новый Структура("Менеджер");
	Отбор.Менеджер = Менеджер;
	
	НайденныеСтроки = Дерево.Строки.НайтиСтроки(Отбор,истина);
	
	ВесПоМенеджеру = 0;
	
	Для каждого НайденнаяСтрока из НайденныеСтроки цикл
		Если ЗначениеЗаполнено(НайденнаяСтрока.ТоварнаяГруппа) тогда
			Если ЗначениеЗаполнено(НайденнаяСтрока.ВесО) тогда
				ВесПоМенеджеру = ВесПоМенеджеру+НайденнаяСтрока.ВесО;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого НайденнаяСтрока из НайденныеСтроки цикл
		Если не ЗначениеЗаполнено(НайденнаяСтрока.ТоварнаяГруппа) тогда
			НайденнаяСтрока.ВесО = ВесПоМенеджеру;
			прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ЗначениеЗаполнено(ДанныеСтроки.товарнаягруппа) тогда
		//Если не ДанныеСтроки.товарнаягруппа.СуммовоеПланирование тогда
		Если не ДанныеСтроки.товарнаягруппаСуммовоеПланирование тогда
			//Если ДанныеСтроки.КоличествоПрошлыйГод<>неопределено тогда
			//	ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			//	ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПланНО - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			//	ДанныеСтроки.ПриростМенеджер = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПланМенеджер - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			//	//ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоИтоговыйПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			//КонецЕсли;
			ДанныеСтроки.СуммаПрошлыйГод   = 0;
			ДанныеСтроки.СуммаПрошлыйМесяц = 0;
			ДанныеСтроки.СуммаПлан         = 0;
			ДанныеСтроки.СуммаПланНО       = 0;
			ДанныеСтроки.СуммаПланМенеджер = 0;
//			ДанныеСтроки.СуммаИтоговыйПлан = 0;

		иначе
			//Если ДанныеСтроки.СуммаПрошлыйГод<>неопределено тогда
			//	ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			//	ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПланНО - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			//	ДанныеСтроки.ПриростМенеджер = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПланМенеджер - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			//	//ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаИтоговыйПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			//КонецЕсли;
			ДанныеСтроки.КоличествоПрошлыйГод   = 0;
			ДанныеСтроки.КоличествоПрошлыйМесяц = 0;
			ДанныеСтроки.КоличествоПлан         = 0;
			ДанныеСтроки.КоличествоПланМенеджер = 0;
			ДанныеСтроки.КоличествоПланНО       = 0;
			//ДанныеСтроки.КоличествоИтоговыйПлан = 0;
		КонецЕсли;
		Если ДанныеСтроки.ТоварнаяГруппа<>СпрПДЗ тогда
			ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПлан - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
			ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПланНО - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
			ДанныеСтроки.ПриростМенеджер = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПланМенеджер - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
		Иначе
			ДанныеСтроки.ПоказательПланМенеджер  = 7;
			ДанныеСтроки.ПоказательПланНО  = 7;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.Менеджер) и не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) тогда
			//ОформлениеСтроки.ДанныеСтроки.Утвержден = Истина Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗеленый;
			Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.Менеджер) и не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) и не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ДатаУтвержденияМенеджером) тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.БледноСиреневый;
			КонецЕсли;	
			Для каждого яч из ОформлениеСтроки.ячейки	Цикл
				Яч.ТолькоПросмотр = Истина;
				Яч.Шрифт =  Новый Шрифт(,,Истина,,);
			конецЦикла;
		конецЕсли;	
		
		ОформлениеСтроки.Ячейки.ФактПрошлогоГода.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ФактПрошлогоМесяца.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ПредварительныйПлан.Видимость = ЛожЬ;
		//ОформлениеСтроки.Ячейки.ИтоговыйПлан.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПриростКПлану.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПланНО.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПланМенеджера.Видимость = ЛожЬ;
		//ОформлениеСтроки.Ячейки.ПриростПредварительного = ЛожЬ;
		
		конецЦикла;	

КонецПроцедуры

Процедура ДеревоПланированияДопВесаВесОПриИзменении(Элемент)
	Если Элемент.Значение<>0 тогда
		Если ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесКоличествоОбщий = 0;
			ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесОбщий = ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесО;
		Иначе
			ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесКоличествоОбщий = ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесО;
			ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесОбщий = 0;
		КонецЕсли;
	иначе
		ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесКоличествоОбщий = 0;
		ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесОбщий = 0;
	КонецЕсли;
	
	Если ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.ВесО <> 0 тогда
		ЭлементыФормы.ДеревоПланированияДопВеса.ТекущаяСтрока.Отслеживать = истина;
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ПослеУдаления(Элемент)
	Менеджер = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.Менеджер;
	ПересчитатьВесПоМенеджеру(Менеджер, ПланированиеНОПоМенеджерамНсколькоПодразделений2);
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	Если не Копирование тогда
		отказ = истина;
	КонецЕсли;	
	
	Если Копирование и не ЗначениеЗаполнено(Элемент.ТекущаяСтрока.ТоварнаяГруппа) тогда //пытаемся копировать всего менеджера, так не надо делать
		отказ = истина;
	КонецЕсли;
	
	Если Не отказ тогда
		к=0;
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ВыборЗначения(Элемент, СтандартнаяОбработка, Значение)
	Менеджер = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.Менеджер;
	ПересчитатьВесПоМенеджеру(Менеджер, ПланированиеНОПоМенеджерамНсколькоПодразделений2);
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Менеджер = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.Менеджер;
	ПересчитатьВесПоМенеджеру(Менеджер, ПланированиеНОПоМенеджерамНсколькоПодразделений2);
	СформироватьГруппировкуПоТоварнымГруппам(ПланированиеНОПоМенеджерамНсколькоПодразделений2,ПланированиеНОПоМенеджерамТоварныеГруппы,2);
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ПередНачаломИзменения(Элемент, Отказ)
	Если ЭтоМенеджер и глТекущийПользователь <> ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.Менеджер тогда
		Отказ = истина;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель10ЗаполнитьСерков(Кнопка)
	//заполним и рассчитаем общие показатели
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактДП6МесЭтогоГода.ТекстШапки = "Показатель ДП за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактДП6МесПрошлогоГода.ТекстШапки = "Показатель ДП за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактДППериодПланированияЭтогоГода.ТекстШапки = "Показатель ДП за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияЭтогоГода(),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактДППериодПланированияПрошлогоГода.ТекстШапки = "Показатель ДП за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(),"ДФ=dd.MM.yyyy") ;
	
	
	ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.Показатель6месЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.Показатель6месПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПериодПланированияЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияЭтогоГода(),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПериодПланированияПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(),"ДФ=dd.MM.yyyy") ;
	
	ЭлементыФормы.ПланированиеСерковМенеджеры.Колонки.Показатель6месЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеСерковМенеджеры.Колонки.Показатель6месПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеСерковМенеджеры.Колонки.ПоказательПериодПланированияЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияЭтогоГода(),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеСерковМенеджеры.Колонки.ПоказательПериодПланированияПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(),"ДФ=dd.MM.yyyy") ;
	
	

	
	ЗагрузитьОбщиеПланы(ПланОтделаРазвития);
	ЗагрузитьПланы(ПланированиеСерковПодразделения, ложь);
	СформироватьГруппировкуПоТоварнымГруппам(ПланированиеСерковПодразделения,ПланированиеСерковТоварныеГруппы,1);
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП КАК ДатаУтвержденияРДП,
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО КАК ДатаУтвержденияНО,
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияМенеджером КАК ДатаУтвержденияМенеджером
		               |ИЗ
		               |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		               |ГДЕ
		               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП <> ДАТАВРЕМЯ(1, 1, 1)
		               |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования";
	                   Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Количество()>0 тогда
		ЭлементыФормы.КоманднаяПанель10.Кнопки.кнУтвердитьСерков.Текст = "Утвердить(уже утверждал)";
	иначе
		ЭлементыФормы.КоманднаяПанель10.Кнопки.кнУтвердитьСерков.Текст = "Утвердить";
	КонецЕсли;

	//Создать Задачи НО
	
КонецПроцедуры

Процедура ЗагрузитьОбщиеПланы(тзРезультат)
	
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактЯШТ.ТекстШапки = "ЯШТ факт " + Символы.ПС + Строка(Формат(Год(ДобавитьМесяц(НачалоМесяца(НачалоПериода), -12)), "ЧГ=0")) + Символы.ПС + "(1)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ПланЯШТ.ТекстШапки = "ЯШТ план " + Символы.ПС +  Строка(Формат(Год(НачалоМесяца(НачалоПериода)), "ЧГ=0")) + Символы.ПС + "(2)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ДоляДПФакт.ТекстШапки = "Доля ДП," + Символы.ПС + " % факт " + Строка(Формат(Год(ДобавитьМесяц(НачалоМесяца(НачалоПериода), -12)), "ЧГ=0")) + Символы.ПС + "(4)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактДП.ТекстШапки = "ДП факт " + Символы.ПС + Строка(Формат(Год(ДобавитьМесяц(НачалоМесяца(НачалоПериода), -12)), "ЧГ=0")) + Символы.ПС + "(3)";
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НаправленияПродаж.Ссылка
	|ИЗ
	|	Справочник.НаправленияПродаж КАК НаправленияПродаж
	|ГДЕ
	|	(НаправленияПродаж.Согласование = &РукДепПродаж
	|			ИЛИ НаправленияПродаж.Руководитель = &РукНапрПродажФилиалов)
	|	И НаправленияПродаж.Код <> 27";
	ДепартаментПродаж = справочники.Подразделения.НайтиПоКоду("00104");
	Запрос.УстановитьПараметр("РукДепПродаж", ДепартаментПродаж.Руководитель );  
	Запрос.УстановитьПараметр("РукНапрПродажФилиалов", справочники.НаправленияПродаж.ФилиалРнД.Руководитель ); // по филиалам  - один человек
	Результат = Запрос.Выполнить();
	СписокНаправлений  = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");	 
	
	
	
	ЗапросРассчитываемыеНГ = Новый Запрос;
	ЗапросРассчитываемыеНГ.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	                             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	                             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	                             |ПОМЕСТИТЬ вт
	                             |ИЗ
	                             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	                             |ГДЕ
	                             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	                             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	                             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	                             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	                             |	И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	                             |ПОМЕСТИТЬ вт2
	                             |ИЗ
	                             |	вт КАК вт
	                             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования КАК ТоварныеГруппыДляПланирования
	                             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	                             |			ПО ТоварныеГруппыДляПланирования.Ссылка = ТоварныеГруппыДляПланированияСостав.Ссылка
	                             |		ПО (вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Ссылка
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель.Родитель)
	                             |			И (вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Ссылка
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель.Родитель)
	                             |ГДЕ
	                             |	ТоварныеГруппыДляПланирования.ЭтоГруппа = ЛОЖЬ
	                             |	И вт.НоменклатурнаяГруппаПоказатели = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	                             |
	                             |ОБЪЕДИНИТЬ ВСЕ
	                             |
	                             |ВЫБРАТЬ
	                             |	вт.НоменклатурнаяГруппаПоказатели
	                             |ИЗ
	                             |	вт КАК вт
	                             |ГДЕ
	                             |	вт.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                             |	вт2.НоменклатурнаяГруппа
	                             |ИЗ
	                             |	вт2 КАК вт2";
	ЗапросРассчитываемыеНГ.УстановитьПараметр("МесяцПланирования", НачалоПериода);
	СписокРассчитываемыхНГ = ЗапросРассчитываемыеНГ.Выполнить().Выгрузить().ВыгрузитьКолонку("НоменклатурнаяГруппа");
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МесяцПланирования", НачалоПериода);
	Запрос.УстановитьПараметр("НачПериодаПрошлогоМесяца", ДобавитьМесяц(НачалоПериода,-1));
	Запрос.УстановитьПараметр("КонПериодаПрошлогоМесяца", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-1)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачПрошлогоПериода", ДобавитьМесяц(НачалоПериода,-12));
	Запрос.УстановитьПараметр("КонПрошлогоПериода", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-12)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);
	Запрос.УстановитьПараметр("СписокРассчитываемыхНГ", СписокРассчитываемыхНГ);
	
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
	             |	0 КАК ФактЯШТ,
	             |	0 КАК ПланЯШТ,
	             |	0 КАК ФактДП,
	             |	0 КАК ФактДППрошлогоМесяца,
	             |	0 КАК ДоляДПФакт,
	             |	0 КАК ДоляДПФактПрошлогоМесяца,
	             |	0 КАК ПланПоМенеджерам,
	             |	0 КАК ИтоговыйПлан,
	             |	0 КАК ДоляИтоговогоКПлануЯШТ,
	             |	0 КАК ПредварительныйПлан,
	             |	0 КАК ПриростПредварительного,
	             |	0 КАК ПриростПоНаправлениям,
	             |	0 КАК ПриростИтогового,
	             |	0 КАК ПриростЯШТ,
	             |	0 КАК ФактДП6МесЭтогоГода,
	             |	0 КАК ФактДП6МесПрошлогоГода,
	             |	0 КАК ДинамикаЗа6Месяцев,
	             |	0 КАК ФактДППериодПланированияЭтогоГода,
	             |	0 КАК ФактДППериодПланированияПрошлогоГода,
	             |	0 КАК ДинамикаЗаПериодПланирования,
				 |  0 КАК ПоказательИтоговыйПланПредыдущие,
				 |  0 КАК ОпережениеОтставаниеПлана,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование,
	             |	0 КАК ПланЗаПериодПланирования
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.Отслеживать
	             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования";
	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	//Заполним рассчитываемые показатели
	//прошлый год
	Запрос.Текст="ВЫБРАТЬ 
	|	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	|	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	|	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	|	0 КАК КоличествоПрошлыйГод,
	|	0 КАК СуммаПрошлыйГод,
	|	0 КАК КоличествоПрошлыйМесяц,
	|	0 КАК СуммаПрошлыйМесяц,
	|	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса  КАК ТоварнаяГруппаТекстЗапроса,
	|	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование,
	|	0 КАК ФактЯШТ,
	|	0 КАК ФактДП,
	|	0 КАК ФактДППрошлогоМесяца,
	|	0 КАК ФактДП6МесЭтогоГода,
    |	0 КАК ФактДП6МесПрошлогоГода,
	|	0 КАК ДинамикаЗа6Месяцев,
	|	0 КАК ФактДППериодПланированияЭтогоГода,
    |	0 КАК ФактДППериодПланированияПрошлогоГода,
	|   0 КАК ДинамикаЗаПериодПланирования,
	|   0 КАК ОпережениеОтставаниеПлана,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка) КАК НаправлениеПродаж,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) КАК Менеджер
	|ИЗ
	|	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	|ГДЕ
	|	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	|	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.Пустаяссылка)
	|	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.Пустаяссылка)
	|	И НЕ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	|				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	|				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
	|	И (ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса КАК СТРОКА(500))) <> """"
	|	И 99 = 99
	|	И МесячныйПланДепортаментаПродаж.Отслеживать";
	
	
	
	тзРассчитываемые = Запрос.Выполнить().Выгрузить();
	Для каждого стр из тзРассчитываемые Цикл
		стр.ФактЯШТ = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)),,истина);
		стр.ФактДП = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)),СписокНаправлений);
		стр.ФактДППрошлогоМесяца = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)),СписокНаправлений);
		
		стр.ФактДП6МесЭтогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода),СписокНаправлений);
        стр.ФактДП6МесПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода),СписокНаправлений);
		
		
		стр.ФактДППериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),ПолучитьКонецПериодаПериодПланированияЭтогоГода(),СписокНаправлений);
		стр.ФактДППериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),ПолучитьКонецПериодаПериодПланированияПрошлогоГода(),СписокНаправлений);
		//стр.ФактДППериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-6),КонецДня(КонецПериода),СписокНаправлений);
		//стр.ФактДППериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-18),КонецДня(ДобавитьМесяц((КонецПериода),-12)),СписокНаправлений);
		
		стр.ДинамикаЗа6Месяцев = ?(стр.ФактДП6МесПрошлогоГода = 0, 0, стр.ФактДП6МесЭтогоГода/стр.ФактДП6МесПрошлогоГода*100)-100;
		стр.ДинамикаЗапериодПланирования = ?(стр.ФактДППериодПланированияПрошлогоГода = 0, 0, стр.ФактДППериодПланированияЭтогоГода/стр.ФактДППериодПланированияПрошлогоГода*100)-100;
	КонецЦикла;
	
	отбор = новый структура("ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	для каждого стр из тзРезультат цикл
		ЗаполнитьЗначенияСвойств(отбор,стр);
		НайденныеСтроки = тзРассчитываемые.НайтиСтроки(отбор);
		Для каждого НайденнаяСтрока из НайденныеСтроки цикл
			стр.ФактЯШТ = НайденнаяСтрока.ФактЯШТ;
			стр.ФактДП = НайденнаяСтрока.ФактДП;
			стр.ФактДППрошлогоМесяца = НайденнаяСтрока.ФактДППрошлогоМесяца;
			
			стр.ФактДП6МесЭтогоГода = НайденнаяСтрока.ФактДП6МесЭтогоГода;
			стр.ФактДП6МесПрошлогоГода = НайденнаяСтрока.ФактДП6МесПрошлогоГода;
			
			стр.ДинамикаЗа6Месяцев = ?(стр.ФактДП6МесПрошлогоГода = 0, 0, стр.ФактДП6МесЭтогоГода/стр.ФактДП6МесПрошлогоГода*100)-100;
			
			стр.ФактДППериодПланированияЭтогоГода = НайденнаяСтрока.ФактДППериодПланированияЭтогоГода;
			стр.ФактДППериодПланированияПрошлогоГода = НайденнаяСтрока.ФактДППериодПланированияПрошлогоГода;

			стр.ДинамикаЗаПериодПланирования = ?(стр.ФактДППериодПланированияПрошлогоГода = 0, 0, стр.ФактДППериодПланированияЭтогоГода/стр.ФактДППериодПланированияПрошлогоГода*100)-100;
		КонецЦикла;
	КонецЦикла;
	
	//факт прошлых периодов
	Запрос.Текст="ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.КоличествоОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактКоличествоДП,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.СтоимостьОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактСуммаДП
	             |ПОМЕСТИТЬ втПродажиПрошлыйМесяц
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПрошлогоМесяца,
	             |			&КонПериодаПрошлогоМесяца,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И 99 = 99
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.КоличествоОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактКоличествоДП,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.СтоимостьОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактСуммаДП
	             |ПОМЕСТИТЬ втПродажиПрошлыйГод
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПрошлогоПериода,
	             |			&КонПрошлогоПериода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И 99 = 99
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.КоличествоОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактКоличествоДП,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.СтоимостьОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактСуммаДП
	             |ПОМЕСТИТЬ втПродажи6МесЭтогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода6МесЭтогоГода,
	             |			&КонПериода6МесЭтогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И 99 = 99
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.КоличествоОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактКоличествоДП,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.СтоимостьОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактСуммаДП
	             |ПОМЕСТИТЬ втПродажи6МесПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода6МесПрошлогоГода,
	             |			&КонПериода6МесПрошлогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И 99 = 99
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.КоличествоОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактКоличествоДП,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.СтоимостьОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактСуммаДП
	             |ПОМЕСТИТЬ втПродажиПериодПланированияЭтогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПериодПланированияЭтогоГода,
	             |			&КонПериодаПериодПланированияЭтогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И 99 = 99
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.КоличествоОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактКоличествоДП,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
	             |					И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец В (&СписокИсключаемыхКонтрагентов)
	             |				ТОГДА ПродажиОбороты.СтоимостьОборот
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК ФактСуммаДП
	             |ПОМЕСТИТЬ втПродажиПериодПланированияПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПериодПланированияПрошлогоГода,
	             |			&КонПериодаПериодПланированияПрошлогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И 99 = 99
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	А.НоменклатураНоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	СУММА(А.КоличествоОборотПрошлыйГод) КАК КоличествоПрошлыйГод,
	             |	СУММА(А.СтоимостьОборотПрошлыйГод) КАК СуммаПрошлыйГод,
	             |	А.ТоварнаяГруппаПланирования КАК ТоварнаяГруппа,
	             |	А.ТоварнаяГруппаПланирования.Родитель КАК ТоварнаяГруппаРодитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель КАК ТоварнаяГруппаРодительРодитель,
	             |	СУММА(А.ФактКоличествоДП) КАК ФактКоличествоДП,
	             |	СУММА(А.ФактСуммаДП) КАК ФактСуммаДП,
	             |	СУММА(А.ФактСуммаДППрошлыйМесяц) КАК ФактСуммаДППрошлыйМесяц,
	             |	СУММА(А.ФактКоличествоДППрошлыйМесяц) КАК ФактКоличествоДППрошлыйМесяц,
	             |	СУММА(А.СтоимостьОборотПрошлыйМесяц) КАК СтоимостьОборотПрошлыйМесяц,
	             |	СУММА(А.КоличествоОборотПрошлыйМесяц) КАК КоличествоОборотПрошлыйМесяц,
	             |	СУММА(А.ФактКоличествоДП6МесЭтогоГода) КАК ФактКоличествоДП6МесЭтогоГода,
	             |	СУММА(А.ФактСуммаДП6МесЭтогоГода) КАК ФактСуммаДП6МесЭтогоГода,
	             |	СУММА(А.ФактКоличествоДП6МесПрошлогоГода) КАК ФактКоличествоДП6МесПрошлогоГода,
	             |	СУММА(А.ФактСуммаДП6МесПрошлогоГода) КАК ФактСуммаДП6МесПрошлогоГода,
	             |	СУММА(А.ФактКоличествоДППериодПланированияЭтогоГода) КАК ФактКоличествоДППериодПланированияЭтогоГода,
	             |	СУММА(А.ФактСуммаДППериодПланированияЭтогоГода) КАК ФактСуммаДППериодПланированияЭтогоГода,
	             |	СУММА(А.ФактКоличествоДППериодПланированияПрошлогоГода) КАК ФактКоличествоДППериодПланированияПрошлогоГода,
	             |	СУММА(А.ФактСуммаДППериодПланированияПрошлогоГода) КАК ФактСуммаДППериодПланированияПрошлогоГода
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		втПродажиПрошлыйГод.НоменклатураНоменклатурнаяГруппа КАК НоменклатураНоменклатурнаяГруппа,
	             |		втПродажиПрошлыйГод.КоличествоОборот КАК КоличествоОборотПрошлыйГод,
	             |		втПродажиПрошлыйГод.СтоимостьОборот КАК СтоимостьОборотПрошлыйГод,
	             |		втПродажиПрошлыйГод.ТоварнаяГруппаПланирования КАК ТоварнаяГруппаПланирования,
	             |		втПродажиПрошлыйГод.ФактКоличествоДП КАК ФактКоличествоДП,
	             |		втПродажиПрошлыйГод.ФактСуммаДП КАК ФактСуммаДП,
	             |		0 КАК КоличествоОборотПрошлыйМесяц,
	             |		0 КАК СтоимостьОборотПрошлыйМесяц,
	             |		0 КАК ФактКоличествоДППрошлыйМесяц,
	             |		0 КАК ФактСуммаДППрошлыйМесяц,
	             |		0 КАК ФактКоличествоДП6МесЭтогоГода,
	             |		0 КАК ФактСуммаДП6МесЭтогоГода,
	             |		0 КАК ФактКоличествоДП6МесПрошлогоГода,
	             |		0 КАК ФактСуммаДП6МесПрошлогоГода,
	             |		0 КАК ФактКоличествоДППериодПланированияЭтогоГода,
	             |		0 КАК ФактСуммаДППериодПланированияЭтогоГода,
	             |		0 КАК ФактКоличествоДППериодПланированияПрошлогоГода,
	             |		0 КАК ФактСуммаДППериодПланированияПрошлогоГода
	             |	ИЗ
	             |		втПродажиПрошлыйГод КАК втПродажиПрошлыйГод
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПрошлыйМесяц.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПрошлыйМесяц.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажиПрошлыйМесяц.КоличествоОборот,
	             |		втПродажиПрошлыйМесяц.СтоимостьОборот,
	             |		втПродажиПрошлыйМесяц.ФактКоличествоДП,
	             |		втПродажиПрошлыйМесяц.ФактСуммаДП,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажиПрошлыйМесяц КАК втПродажиПрошлыйМесяц
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажи6МесЭтогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажи6МесЭтогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажи6МесЭтогоГода.ФактКоличествоДП,
	             |		втПродажи6МесЭтогоГода.ФактСуммаДП,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажи6МесЭтогоГода КАК втПродажи6МесЭтогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажи6МесПрошлогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.ФактКоличествоДП,
	             |		втПродажи6МесПрошлогоГода.ФактСуммаДП,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажи6МесПрошлогоГода КАК втПродажи6МесПрошлогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПериодПланированияЭтогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.ФактКоличествоДП,
	             |		втПродажиПериодПланированияЭтогоГода.ФактСуммаДП,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажиПериодПланированияЭтогоГода КАК втПродажиПериодПланированияЭтогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПериодПланированияПрошлогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.ФактКоличествоДП,
	             |		втПродажиПериодПланированияПрошлогоГода.ФактСуммаДП
	             |	ИЗ
	             |		втПродажиПериодПланированияПрошлогоГода КАК втПродажиПериодПланированияПрошлогоГода) КАК А
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	А.НоменклатураНоменклатурнаяГруппа,
	             |	А.ТоварнаяГруппаПланирования,
	             |	А.ТоварнаяГруппаПланирования.Родитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель";
	
	Запрос.УстановитьПараметр("СписокНаправлений",СписокНаправлений);     
	Запрос.УстановитьПараметр("НачПериода6МесЭтогоГода",ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонПериода6МесЭтогоГода", Новый Граница(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачПериода6МесПрошлогоГода",ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонПериода6МесПрошлогоГода", Новый Граница(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода), ВидГраницы.Включая));
	
	//Запрос.УстановитьПараметр("НачПериодаПериодПланированияЭтогоГода",ДобавитьМесяц((НачалоПериода),-6));
	//Запрос.УстановитьПараметр("КонПериодаПериодПланированияЭтогоГода", КонецДня(КонецПериода));
	//Запрос.УстановитьПараметр("НачПериодаПериодПланированияПрошлогоГода",ДобавитьМесяц((НачалоПериода),-18));
	//Запрос.УстановитьПараметр("КонПериодаПериодПланированияПрошлогоГода", КонецДня(ДобавитьМесяц((КонецПериода),-12)));

	Запрос.УстановитьПараметр("НачПериодаПериодПланированияЭтогоГода",ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
	Запрос.УстановитьПараметр("КонПериодаПериодПланированияЭтогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияЭтогоГода(), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НачПериодаПериодПланированияПрошлогоГода",ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
	Запрос.УстановитьПараметр("КонПериодаПериодПланированияПрошлогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(), ВидГраницы.Включая));

	
	тзРассчитываемые = Запрос.Выполнить().Выгрузить();
	
	для каждого стр из тзРезультат цикл
		Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) тогда
			отбор = новый структура("ТоварнаяГруппа,НоменклатурнаяГруппа");
			отбор.НоменклатурнаяГруппа = стр.НоменклатурнаяГруппаПоказатели;
			отбор.ТоварнаяГруппа = стр.ТоварнаяГруппа;
		иначе
			отбор = новый структура("ТоварнаяГруппа");
			отбор.ТоварнаяГруппа = стр.ТоварнаяГруппа;
		КонецЕсли;
		//ЗаполнитьЗначенияСвойств(отбор,стр);

		НайденныеСтроки = тзРассчитываемые.НайтиСтроки(отбор);
		
		Если НайденныеСтроки.Количество()=0 тогда //поищем по родителю
			Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) тогда
				отбор = новый структура("ТоварнаяГруппаРодитель,НоменклатурнаяГруппа");
				отбор.НоменклатурнаяГруппа = стр.НоменклатурнаяГруппаПоказатели;
				отбор.ТоварнаяГруппаРодитель = стр.ТоварнаяГруппа;
			иначе
				отбор = новый структура("ТоварнаяГруппаРодитель");
				отбор.ТоварнаяГруппаРодитель = стр.ТоварнаяГруппа;
			КонецЕсли;
			
			//ЗаполнитьЗначенияСвойств(отбор,стр);
			//отбор.ТоварнаяГруппаРодитель = стр.ТоварнаяГруппа;

			НайденныеСтроки = тзРассчитываемые.НайтиСтроки(отбор);
			Если НайденныеСтроки.Количество() = 0 тогда
				Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) тогда
					отбор = новый структура("ТоварнаяГруппаРодительРодитель,НоменклатурнаяГруппа");
					отбор.НоменклатурнаяГруппа = стр.НоменклатурнаяГруппаПоказатели;
					отбор.ТоварнаяГруппаРодительРодитель = стр.ТоварнаяГруппа;
				иначе
					отбор = новый структура("ТоварнаяГруппаРодительРодитель");
					отбор.ТоварнаяГруппаРодительРодитель = стр.ТоварнаяГруппа;
				КонецЕсли;
				
				//ЗаполнитьЗначенияСвойств(отбор,стр);
				отбор.ТоварнаяГруппаРодительРодитель = стр.ТоварнаяГруппа;
				НайденныеСтроки = тзРассчитываемые.НайтиСтроки(отбор);
				Для каждого НайденнаяСтрока из НайденныеСтроки цикл
					Если стр.СуммовоеПланирование тогда
						стр.ФактЯШТ = стр.ФактЯШТ + НайденнаяСтрока.СуммаПрошлыйГод;
						стр.ФактДП = стр.ФактДП + НайденнаяСтрока.ФактСуммаДП;
						стр.ФактДППрошлогоМесяца = стр.ФактДППрошлогоМесяца + НайденнаяСтрока.ФактСуммаДППрошлыйМесяц;
						стр.ФактДП6МесЭтогоГода = стр.ФактДП6МесЭтогоГода + НайденнаяСтрока.ФактСуммаДП6МесЭтогоГода;
						стр.ФактДП6МесПрошлогоГода = стр.ФактДП6МесПрошлогоГода + НайденнаяСтрока.ФактСуммаДП6МесПрошлогоГода;
						
						стр.ФактДППериодПланированияЭтогоГода = стр.ФактДППериодПланированияЭтогоГода + НайденнаяСтрока.ФактСуммаДППериодПланированияЭтогоГода;
						стр.ФактДППериодПланированияПрошлогоГода = стр.ФактДППериодПланированияПрошлогоГода + НайденнаяСтрока.ФактСуммаДППериодПланированияПрошлогоГода;
					иначе
						стр.ФактЯШТ = стр.ФактЯШТ + НайденнаяСтрока.КоличествоПрошлыйГод;
						стр.ФактДП = стр.ФактДП + НайденнаяСтрока.ФактКоличествоДП;
						стр.ФактДППрошлогоМесяца = стр.ФактДППрошлогоМесяца + НайденнаяСтрока.ФактКоличествоДППрошлыйМесяц;
						стр.ФактДП6МесЭтогоГода = стр.ФактДП6МесЭтогоГода + НайденнаяСтрока.ФактКоличествоДП6МесЭтогоГода;
						стр.ФактДП6МесПрошлогоГода = стр.ФактДП6МесПрошлогоГода + НайденнаяСтрока.ФактКоличествоДП6МесПрошлогоГода;
						
						стр.ФактДППериодПланированияЭтогоГода = стр.ФактДППериодПланированияЭтогоГода + НайденнаяСтрока.ФактКоличествоДППериодПланированияЭтогоГода;
						стр.ФактДППериодПланированияПрошлогоГода = стр.ФактДППериодПланированияПрошлогоГода + НайденнаяСтрока.ФактКоличествоДППериодПланированияПрошлогоГода;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Для каждого НайденнаяСтрока из НайденныеСтроки цикл
					Если стр.СуммовоеПланирование тогда
						стр.ФактЯШТ = стр.ФактЯШТ + НайденнаяСтрока.СуммаПрошлыйГод;
						стр.ФактДП = стр.ФактДП + НайденнаяСтрока.ФактСуммаДП;
						стр.ФактДППрошлогоМесяца = стр.ФактДППрошлогоМесяца + НайденнаяСтрока.ФактСуммаДППрошлыйМесяц;
						стр.ФактДП6МесЭтогоГода = стр.ФактДП6МесЭтогоГода + НайденнаяСтрока.ФактСуммаДП6МесЭтогоГода;
						стр.ФактДП6МесПрошлогоГода = стр.ФактДП6МесПрошлогоГода + НайденнаяСтрока.ФактСуммаДП6МесПрошлогоГода;

						стр.ФактДППериодПланированияЭтогоГода = стр.ФактДППериодПланированияЭтогоГода + НайденнаяСтрока.ФактСуммаДППериодПланированияЭтогоГода;
						стр.ФактДППериодПланированияПрошлогоГода = стр.ФактДППериодПланированияПрошлогоГода + НайденнаяСтрока.ФактСуммаДППериодПланированияПрошлогоГода;
					иначе
						стр.ФактЯШТ = стр.ФактЯШТ + НайденнаяСтрока.КоличествоПрошлыйГод;
						стр.ФактДП = стр.ФактДП + НайденнаяСтрока.ФактКоличествоДП;
						стр.ФактДППрошлогоМесяца = стр.ФактДППрошлогоМесяца + НайденнаяСтрока.ФактКоличествоДППрошлыйМесяц;
						стр.ФактДП6МесЭтогоГода = стр.ФактДП6МесЭтогоГода + НайденнаяСтрока.ФактКоличествоДП6МесЭтогоГода;
						стр.ФактДП6МесПрошлогоГода = стр.ФактДП6МесПрошлогоГода + НайденнаяСтрока.ФактКоличествоДП6МесПрошлогоГода;
						
						стр.ФактДППериодПланированияЭтогоГода = стр.ФактДППериодПланированияЭтогоГода + НайденнаяСтрока.ФактКоличествоДППериодПланированияЭтогоГода;
						стр.ФактДППериодПланированияПрошлогоГода = стр.ФактДППериодПланированияПрошлогоГода + НайденнаяСтрока.ФактКоличествоДППериодПланированияПрошлогоГода;

					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		иначе	 
			Для каждого НайденнаяСтрока из НайденныеСтроки цикл
				Если стр.СуммовоеПланирование тогда
					стр.ФактЯШТ=стр.ФактЯШТ + НайденнаяСтрока.СуммаПрошлыйГод;
					стр.ФактДП = стр.ФактДП + НайденнаяСтрока.ФактСуммаДП;
					стр.ФактДППрошлогоМесяца = стр.ФактДППрошлогоМесяца + НайденнаяСтрока.ФактСуммаДППрошлыйМесяц;
					стр.ФактДП6МесЭтогоГода = стр.ФактДП6МесЭтогоГода + НайденнаяСтрока.ФактСуммаДП6МесЭтогоГода;
					стр.ФактДП6МесПрошлогоГода = стр.ФактДП6МесПрошлогоГода + НайденнаяСтрока.ФактСуммаДП6МесПрошлогоГода;
					
					стр.ФактДППериодПланированияЭтогоГода = стр.ФактДППериодПланированияЭтогоГода + НайденнаяСтрока.ФактСуммаДППериодПланированияЭтогоГода;
					стр.ФактДППериодПланированияПрошлогоГода = стр.ФактДППериодПланированияПрошлогоГода + НайденнаяСтрока.ФактСуммаДППериодПланированияПрошлогоГода;
				иначе
					стр.ФактЯШТ = стр.ФактЯШТ + НайденнаяСтрока.КоличествоПрошлыйГод;
					стр.ФактДП = стр.ФактДП + НайденнаяСтрока.ФактКоличествоДП;
					стр.ФактДППрошлогоМесяца = стр.ФактДППрошлогоМесяца + НайденнаяСтрока.ФактКоличествоДППрошлыйМесяц;
					стр.ФактДП6МесЭтогоГода = стр.ФактДП6МесЭтогоГода + НайденнаяСтрока.ФактКоличествоДП6МесЭтогоГода;
					стр.ФактДП6МесПрошлогоГода = стр.ФактДП6МесПрошлогоГода + НайденнаяСтрока.ФактКоличествоДП6МесПрошлогоГода;
					
					стр.ФактДППериодПланированияЭтогоГода = стр.ФактДППериодПланированияЭтогоГода + НайденнаяСтрока.ФактКоличествоДППериодПланированияЭтогоГода;
					стр.ФактДППериодПланированияПрошлогоГода = стр.ФактДППериодПланированияПрошлогоГода + НайденнаяСтрока.ФактКоличествоДППериодПланированияПрошлогоГода;
				КонецЕсли;
			КонецЦикла;	 
		КонецЕсли;
	стр.ДинамикаЗа6Месяцев = ?(стр.ФактДП6МесПрошлогоГода = 0, 0, стр.ФактДП6МесЭтогоГода/стр.ФактДП6МесПрошлогоГода*100)-100;
	стр.ДинамикаЗаПериодПланирования = ?(стр.ФактДППериодПланированияПрошлогоГода = 0, 0, стр.ФактДППериодПланированияЭтогоГода/стр.ФактДППериодПланированияПрошлогоГода*100)-100;
	КонецЦикла;
	
	
	Для каждого СтрТЧ из тзРезультат цикл
		////ЯШТ план 
		СтрТЧ.ПланЯШТ = 0; // Сакулина
		// Сакулина
		// Проверим в Параметре показателя есть ли Отбор по Номенклатуре и Номенклатурным группам, 
		// если есть еще и по другим видам,тогда план не заполняем
		
		
		
		НеНадоЗаполнятьПлан = Ложь;
		Если ТипЗнч(СтрТЧ.НоменклатурнаяГруппаПоказатели) = Тип("СправочникСсылка.ПараметрыПоказателейЭффективности") тогда
			ТЗ = Новый ТаблицаЗначений;
			ТЗ = СтрТЧ.НоменклатурнаяГруппаПоказатели.СписокПараметров.Выгрузить();		
			ТЗ.Свернуть("ВидСравнения,ТипПараметра");
			Для каждого СтрПараметр из ТЗ Цикл
				Если СтрПараметр.ТипПараметра <> "Номенклатура" и  СтрПараметр.ТипПараметра <> "Номенклатурные группы" Тогда
					НеНадоЗаполнятьПлан = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		иначе
			НеНадоЗаполнятьПлан = Истина;
		КонецЕсли;
		// Сакулина
		
		
		
		Если СтрТЧ.ТоварнаяГруппа = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВРублях
			И не ЗначениеЗаполнено(СтрТЧ.НоменклатурнаяГруппаПоказатели) Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачДата", НачалоМесяца(НачалоПериода));
			Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(НачалоПериода)));
			Запрос.Текст = "ВЫБРАТЬ
			|	ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот КАК ЗначениеПланОборот
			|ИЗ
			|	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, , ) КАК ПланыПродажОбороты";
			
			Результат = Запрос.Выполнить().Выбрать();
			СтрТЧ.ПланЯШТ = 0;
			Если Результат.Следующий() Тогда
				СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
			КонецЕсли;
			
		ИначеЕсли СтрТЧ.ТоварнаяГруппа = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВРублях
			И ТипЗнч(СтрТЧ.НоменклатурнаяГруппаПоказатели) = Тип("СправочникСсылка.ПараметрыПоказателейЭффективности")  
			и НЕ СтрТЧ.НоменклатурнаяГруппаПоказатели = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() и НеНадоЗаполнятьПлан = Ложь Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачДата", НачалоМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(ПериодРегистрации)));
			Запрос.УстановитьПараметр("СписокПараметров", СтрТЧ.НоменклатурнаяГруппаПоказатели.СписокПараметров.ВыгрузитьКолонку("Параметр"));
			Запрос.Текст = "ВЫБРАТЬ
			|	ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот КАК ЗначениеПланОборот
			|ИЗ
			|	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, ,Номенклатура В Иерархии (&СписокПараметров) ) КАК ПланыПродажОбороты";
			
			Результат = Запрос.Выполнить().Выбрать();
			СтрТЧ.ПланЯШТ = 0;
			Если Результат.Следующий() Тогда
				СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
			КонецЕсли;
			
		ИначеЕсли СтрТЧ.ТоварнаяГруппа = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВШтуках
			И ТипЗнч(СтрТЧ.НоменклатурнаяГруппаПоказатели) = Тип("СправочникСсылка.ПараметрыПоказателейЭффективности")
			и НЕ СтрТЧ.НоменклатурнаяГруппаПоказатели = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка()   и НеНадоЗаполнятьПлан = Ложь Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачДата", НачалоМесяца(НачалоПериода));
			Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(НачалоПериода)));
			Запрос.УстановитьПараметр("СписокПараметров", СтрТЧ.НоменклатурнаяГруппаПоказатели.СписокПараметров.ВыгрузитьКолонку("Параметр"));
			Запрос.Текст = "ВЫБРАТЬ
			|	ПланыПродажОбороты.КоличествоОборот КАК ЗначениеПланОборот
			|ИЗ
			|	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, , Номенклатура В Иерархии (&СписокПараметров)) КАК ПланыПродажОбороты";
			
			Результат = Запрос.Выполнить().Выбрать();
			СтрТЧ.ПланЯШТ = 0;
			Если Результат.Следующий() Тогда
				СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
			КонецЕсли;
		ИначеЕсли СтрТЧ.ТоварнаяГруппа = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВШтуках
			И СтрТЧ.НоменклатурнаяГруппаПоказатели = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачДата", НачалоМесяца(НачалоПериода));
			Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(НачалоПериода)));
			Запрос.Текст = "ВЫБРАТЬ
			|	ПланыПродажОбороты.КоличествоОборот КАК ЗначениеПланОборот
			|ИЗ
			|	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, ,) КАК ПланыПродажОбороты";
			
			Результат = Запрос.Выполнить().Выбрать();
			СтрТЧ.ПланЯШТ = 0;
			Если Результат.Следующий() Тогда
				СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
			КонецЕсли;
			
		ИначеЕсли типЗнч(СтрТЧ.ТоварнаяГруппа) = Тип("СправочникСсылка.ТоварныеГруппыДляПланирования") 
			И не ЗначениеЗаполнено(СтрТЧ.НоменклатурнаяГруппаПоказатели) Тогда	
			Запрос = Новый Запрос;
			Запрос.Текст ="ВЫБРАТЬ РАЗЛИЧНЫЕ
			              |	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
			              |ИЗ
			              |	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
			              |ГДЕ
			              |	ТоварныеГруппыДляПланированияСостав.Ссылка В ИЕРАРХИИ(&ТГ)";
						  Запрос.УстановитьПараметр("ТГ",СтрТЧ.ТоварнаяГруппа);
			              СписокПараметров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НоменклатурнаяГруппа");
			
			Запрос.УстановитьПараметр("НачДата", НачалоМесяца(НачалоПериода));
			Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(НачалоПериода)));
			Запрос.УстановитьПараметр("СписокПараметров", СписокПараметров);
			Если СтрТЧ.ТоварнаяГруппа.СуммовоеПланирование тогда
				Запрос.Текст = "ВЫБРАТЬ
				|	ПланыПродажОбороты.СтоимостьОборот КАК ЗначениеПланОборот
				|ИЗ
				|	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, ,Номенклатура В Иерархии (&СписокПараметров) ) КАК ПланыПродажОбороты";
			иначе
				Запрос.Текст = "ВЫБРАТЬ
				|	ПланыПродажОбороты.КоличествоОборот КАК ЗначениеПланОборот
				|ИЗ
				|	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, ,Номенклатура В Иерархии (&СписокПараметров)) КАК ПланыПродажОбороты";
			КонецЕсли;
			Результат = Запрос.Выполнить().Выбрать();
			СтрТЧ.ПланЯШТ = 0;
			Если Результат.Следующий() Тогда
				СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
			КонецЕсли;
		ИначеЕсли типЗнч(СтрТЧ.ТоварнаяГруппа) = Тип("СправочникСсылка.ТоварныеГруппыДляПланирования") 
			//И не ЗначениеЗаполнено(СтрТЧ.НоменклатурнаяГруппаПоказатели) Тогда	
			И ЗначениеЗаполнено(СтрТЧ.НоменклатурнаяГруппаПоказатели) Тогда	
			Если типЗнч(СтрТЧ.НоменклатурнаяГруппаПоказатели) = Тип("СправочникСсылка.НоменклатурныеГруппы") тогда
				//Запрос = Новый Запрос;
				//Запрос.Текст ="ВЫБРАТЬ РАЗЛИЧНЫЕ
				//|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
				//|ИЗ
				//|	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
				//|ГДЕ
				//|	ТоварныеГруппыДляПланированияСостав.Ссылка В ИЕРАРХИИ(&ТГ)";
				//Запрос.УстановитьПараметр("ТГ",СтрТЧ.ТоварнаяГруппа);
				//СписокПараметров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НоменклатурнаяГруппа");
				
				Запрос.УстановитьПараметр("НачДата", НачалоМесяца(НачалоПериода));
				Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(НачалоПериода)));
				Запрос.УстановитьПараметр("СписокПараметров", СтрТЧ.НоменклатурнаяГруппаПоказатели);
				Если СтрТЧ.ТоварнаяГруппа.СуммовоеПланирование тогда
					Запрос.Текст = "ВЫБРАТЬ
					|	ПланыПродажОбороты.СтоимостьОборот КАК ЗначениеПланОборот
					|ИЗ
					|	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, ,Номенклатура = (&СписокПараметров)) КАК ПланыПродажОбороты";
				иначе
					Запрос.Текст = "ВЫБРАТЬ
					               |	ПланыПродажОбороты.КоличествоОборот КАК ЗначениеПланОборот
					               |ИЗ
					               |	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, , Номенклатура = &СписокПараметров) КАК ПланыПродажОбороты";
				КонецЕсли;
				Результат = Запрос.Выполнить().Выбрать();
				СтрТЧ.ПланЯШТ = 0;
				Если Результат.Следующий() Тогда
					СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
	//ПланПоМенеджерам = План НО из Месячного планирования
	//ТГПДЗ = Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030");
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
	             |	СУММА(МесячныйПланДепортаментаПродаж.КоличествоПланНО) КАК КоличествоПланНО,
	             |	СУММА(МесячныйПланДепортаментаПродаж.СуммаПланНО) КАК СуммаПланНО,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ) КАК ПоказательИтоговыйПлан,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ) КАК ПоказательПланНО,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ) КАК ПоказательПланПредв
	             |ПОМЕСТИТЬ вт
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	НЕ МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	&МесяцПланирования,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
	             |	СУММА(МесячныйПланДепортаментаПродаж.КоличествоПланНО) КАК КоличествоПланНО,
	             |	СУММА(МесячныйПланДепортаментаПродаж.СуммаПланНО) КАК СуммаПланНО,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ) КАК ПоказательИтоговыйПлан,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ) КАК ПоказательПланНО,
	             |	СУММА(ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ) КАК ПоказательПланПредв
	             |ПОМЕСТИТЬ втПланПредыдущий
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	НЕ МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.МесяцПланирования МЕЖДУ &НачПериодаПериодПланированияЭтогоГода И &КонПериодаПериодПланированияЭтогоГода
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	вт.МесяцПланирования,
	             |	вт.ТоварнаяГруппа,
	             |	вт.НоменклатурнаяГруппаПоказатели,
	             |	вт.КоличествоПланНО,
	             |	вт.СуммаПланНО,
	             |	вт.СуммовоеПланирование,
	             |	вт.ПоказательИтоговыйПлан,
	             |	вт.ПоказательПланНО,
	             |	ЕСТЬNULL(втПланПредыдущий.ПоказательПланПредв, 0) КАК ПоказательИтоговыйПланПредыдущие
	             |ИЗ
	             |	вт КАК вт
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втПланПредыдущий КАК втПланПредыдущий
	             |		ПО вт.ТоварнаяГруппа = втПланПредыдущий.ТоварнаяГруппа
	             |			И вт.НоменклатурнаяГруппаПоказатели = втПланПредыдущий.НоменклатурнаяГруппаПоказатели";
				 Запрос.УстановитьПараметр("МесяцПланирования", НачалоПериода);
				 Запрос.УстановитьПараметр("ПДЗ", СпрПДЗ);
                 Запрос.УстановитьПараметр("НачПериодаПериодПланированияЭтогоГода",ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
				 Запрос.УстановитьПараметр("КонПериодаПериодПланированияЭтогоГода",ПолучитьКонецПериодаПериодПланированияЭтогоГода());
	
                 Рез = Запрос.Выполнить().Выгрузить();
				 отбор = новый структура("ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
				 Для каждого стр из тзРезультат цикл
					 ЗаполнитьЗначенияСвойств(отбор,стр);
					 НайденныеСтроки = Рез.НайтиСтроки(отбор);
					 
					 Для каждого найденнаяСтрока из НайденныеСтроки цикл
						 стр.ПланПоМенеджерам = найденнаяСтрока.ПоказательПланНО;
						 стр.ИтоговыйПлан = найденнаяСтрока.ПоказательИтоговыйПлан;
						 стр.ПоказательИтоговыйПланПредыдущие = найденнаяСтрока.ПоказательИтоговыйПланПредыдущие;
					 КонецЦикла;
					 //стр.ОпережениеОтставаниеПлана = стр.ФактДППериодПланированияЭтогоГода-стр.ПоказательИтоговыйПланПредыдущие;
				 КонецЦикла;
				 //пдз
				 Запрос.Текст="ВЫБРАТЬ
				              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
				              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
				              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
				              |	СРЕДНЕЕ(МесячныйПланДепортаментаПродаж.КоличествоПланНО) КАК КоличествоПланНО,
				              |	СРЕДНЕЕ(МесячныйПланДепортаментаПродаж.СуммаПланНО) КАК СуммаПланНО,
				              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование,
				              |	СРЕДНЕЕ(ВЫБОР
				              |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
				              |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
				              |			ИНАЧЕ МесячныйПланДепортаментаПродаж.КоличествоПлан
				              |		КОНЕЦ) КАК ПоказательИтоговыйПлан,
				              |	СРЕДНЕЕ(ВЫБОР
				              |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
				              |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланНО
				              |			ИНАЧЕ МесячныйПланДепортаментаПродаж.КоличествоПланНО
				              |		КОНЕЦ) КАК ПоказательПланНО
				              |ИЗ
				              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
				              |ГДЕ
				              |	НЕ МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
				              |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
				              |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
				              |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа = &ПДЗ
				              |
				              |СГРУППИРОВАТЬ ПО
				              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
				              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
				              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
				              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование";

                 ПДЗ = Запрос.Выполнить().Выгрузить();
				 отбор = новый структура("ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
				 Для каждого стр из ПДЗ цикл
					 
					 ЗаполнитьЗначенияСвойств(отбор,стр);
					 НайденныеСтроки = тзРезультат.НайтиСтроки(отбор);
					 
					 Для каждого найденнаяСтрока из НайденныеСтроки цикл
						 найденнаяСтрока.ПланПоМенеджерам = стр.ПоказательПланНО;
						 найденнаяСтрока.ИтоговыйПлан = стр.ПоказательИтоговыйПлан;
					 КонецЦикла;
				 КонецЦикла;

				 //пдз
				 
				 
				 //Предварительный
				 //предварительные планы
				 Запрос.Текст="ВЫБРАТЬ
				              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
				              |	СУММА(ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0))) КАК КоличествоПлан,
				              |	СУММА(МесячныйПланДепортаментаПродаж.СуммаПлан) КАК СуммаПлан,
				              |	СУММА(ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0))) КАК КоличествоПланНО,
				              |	СУММА(МесячныйПланДепортаментаПродаж.СуммаПланНО) КАК СуммаПланНО,
				              |	СУММА(ВЫБОР
				              |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
				              |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПлан
				              |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0))
				              |		КОНЕЦ) КАК ПоказательПлан,
				              |	СУММА(ВЫБОР
				              |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
				              |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланНО
				              |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0))
				              |		КОНЕЦ) КАК ПоказательПланНО,
				              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
				              |ИЗ
				              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
				              |ГДЕ
				              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
				              |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
				              |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ТоварныеГруппыДляпланирования.ПустаяСсылка)
				              |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
				              |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> &ПДЗ
				              |	И 99 = 99
				              |
				              |СГРУППИРОВАТЬ ПО
				              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
				              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели";
				 				 
				 Предварительные = Запрос.Выполнить().Выгрузить();
				 
				 отбор = новый структура("ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
				 Для каждого стр из тзРезультат цикл
					 ЗаполнитьЗначенияСвойств(отбор,стр);
					 НайденныеСтроки = Предварительные.НайтиСтроки(отбор);
					 
					 Для каждого найденнаяСтрока из НайденныеСтроки цикл
						 стр.ПредварительныйПлан = найденнаяСтрока.ПоказательПлан;
						 Если стр.ТоварнаяГруппа = СпрПДЗ тогда
							 стр.ПредварительныйПлан = 7;
						 КонецЕсли;
						 
						 стр.ОпережениеОтставаниеПлана = стр.ПоказательИтоговыйПланПредыдущие+стр.ПредварительныйПлан-стр.ФактДППериодПланированияЭтогоГода;
					 КонецЦикла;
				 КонецЦикла;
				 
				 Для каждого СтрТЧ из тзРезультат Цикл
					 //ОР доля факт
					 Если НЕ СтрТЧ.ФактЯШТ = 0 Тогда
						 СтрТЧ.ДоляДПФакт = СтрТЧ.ФактДП * 100 / СтрТЧ.ФактЯШТ;
						 СтрТЧ.ДоляДПФактПрошлогоМесяца = СтрТЧ.ФактДППрошлогоМесяца * 100 / СтрТЧ.ФактЯШТ;
					 КонецЕсли;
					 
					 Если НЕ СтрТЧ.ПланЯШТ = 0 Тогда
						 СтрТЧ.ДоляИтоговогоКПлануЯШТ = СтрТЧ.ИтоговыйПлан * 100 / СтрТЧ.ПланЯШТ;
					 КонецЕсли;
					 
					 Если НЕ СтрТЧ.ФактЯШТ = 0 Тогда
					 	СтрТЧ.ПриростЯШТ = (СтрТЧ.ПланЯШТ - СтрТЧ.ФактЯШТ) * 100 / СтрТЧ.ФактЯШТ;
                     КонецЕсли;
					 
					 Если НЕ СтрТЧ.ФактДП = 0 Тогда
						 СтрТЧ.ПриростПредварительного = (СтрТЧ.ПредварительныйПлан - СтрТЧ.ФактДП) * 100 / СтрТЧ.ФактДП;
						 СтрТЧ.ПриростПоНаправлениям = (СтрТЧ.ПланПоМенеджерам -  СтрТЧ.ФактДП) * 100 / СтрТЧ.ФактДП;
						 СтрТЧ.ПриростИтогового = (СтрТЧ.ИтоговыйПлан - СтрТЧ.ФактДП) * 100 / СтрТЧ.ФактДП;
					 КонецЕсли;
				 КонецЦикла;
	тзРезультат.Сортировать("ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
КонецПроцедуры

Процедура ПланированиеСерковПодразделенияПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущиеДанные<>неопределено тогда
		Если ТекущееНаправлениеПродаж <> Элемент.ТекущиеДанные.НаправлениеПродаж тогда
			СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
			ТекущееНаправлениеПродаж = Элемент.ТекущиеДанные.НаправлениеПродаж;
			ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеСерковМенеджеры);
			ЭлементыФормы.ПланированиеСерковМенеджеры.Колонки.НаправлениеПродаж.Видимость = ложь;
			//ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ПланированиеСерковМенеджеры; 
			//Если ЭлементыФормы.ПланированиеСерковМенеджеры.Значение.Строки.Количество()>0 тогда
			//	ЭлементыФормы.ПланированиеСерковМенеджеры.Развернуть(ЭлементыФормы.ПланированиеСерковМенеджеры.Значение.Строки[0],истина);
			//КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеСерковПодразделенияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ЗначениеЗаполнено(ДанныеСтроки.товарнаягруппа) тогда
		Если не ДанныеСтроки.товарнаягруппа.СуммовоеПланирование тогда
			Если ДанныеСтроки.КоличествоПрошлыйГод<>неопределено тогда
				ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПланНО - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоИтоговыйПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			КонецЕсли;
			ДанныеСтроки.СуммаПрошлыйГод   = 0;
			ДанныеСтроки.СуммаПрошлыйМесяц = 0;
		иначе
			Если ДанныеСтроки.СуммаПрошлыйГод<>неопределено тогда
				ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПланНО - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаИтоговыйПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			КонецЕсли;
			ДанныеСтроки.КоличествоПрошлыйГод   = 0;
			ДанныеСтроки.КоличествоПрошлыйМесяц = 0;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПланированиеСерковПодразделенияПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.НаправлениеПродаж) и не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) тогда
			//ОформлениеСтроки.ДанныеСтроки.Утвержден = Истина Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.БледноСиреневый;
			Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ДатаУтвержденияНО) тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗеленый;
			КонецЕсли;
			Для каждого яч из ОформлениеСтроки.ячейки	Цикл
				Яч.ТолькоПросмотр = Истина;
				Яч.Шрифт =  Новый Шрифт(,,Истина,,);
				
			конецЦикла;
		конецЕсли;	
		
		Если ОформлениеСтроки.ДанныеСтроки.КоличествоПланНО<>ОформлениеСтроки.ДанныеСтроки.КоличествоИтоговыйПлан и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.КоличествоИтоговыйПлан) тогда
			ОформлениеСтроки.ячейки.КоличествоПланНО.ЦветФона = WebЦвета.Красный;
		КонецЕсли;
		Если ОформлениеСтроки.ДанныеСтроки.СуммаПланНО<>ОформлениеСтроки.ДанныеСтроки.СуммаИтоговыйПлан и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.СуммаИтоговыйПлан) тогда
			ОформлениеСтроки.ячейки.СуммаПланНО.ЦветФона = WebЦвета.Красный;
		КонецЕсли;
		
		Если ОформлениеСтроки.ДанныеСтроки.ПоказательПланНО<>ОформлениеСтроки.ДанныеСтроки.ПоказательИтоговыйПлан и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ПоказательИтоговыйПлан) тогда
			ОформлениеСтроки.ячейки.ПоказательПланНО.ЦветФона = WebЦвета.Красный;
		КонецЕсли;

		
		ОформлениеСтроки.Ячейки.ФактПрошлогоГода.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ФактПрошлогоМесяца.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ПредварительныйПлан.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ИтоговыйПлан.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПриростКПлану.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПланНО.Видимость = ЛожЬ;
	конецЦикла;	

КонецПроцедуры

Процедура ПланированиеСерковМенеджерыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ЗначениеЗаполнено(ДанныеСтроки.товарнаягруппа) тогда
		Если не ДанныеСтроки.товарнаягруппа.СуммовоеПланирование тогда
			Если ДанныеСтроки.КоличествоПрошлыйГод<>неопределено тогда
				ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПланНО - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростМенеджер = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоПланМенеджер - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
				//ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.КоличествоПрошлыйГод>0,(ДанныеСтроки.КоличествоИтоговыйПлан - ДанныеСтроки.КоличествоПрошлыйГод)/ДанныеСтроки.КоличествоПрошлыйГод * 100,0);
			КонецЕсли;
			ДанныеСтроки.СуммаПрошлыйГод   = 0;
			ДанныеСтроки.СуммаПрошлыйМесяц = 0;
			ДанныеСтроки.СуммаПлан         = 0;
			ДанныеСтроки.СуммаПланНО       = 0;
			ДанныеСтроки.СуммаПланМенеджер = 0;
//			ДанныеСтроки.СуммаИтоговыйПлан = 0;

		иначе
			Если ДанныеСтроки.СуммаПрошлыйГод<>неопределено тогда
				ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПланНО - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
				ДанныеСтроки.ПриростМенеджер = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаПланМенеджер - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
				//ДанныеСтроки.ПриростИтог = ?(ДанныеСтроки.СуммаПрошлыйГод>0,(ДанныеСтроки.СуммаИтоговыйПлан - ДанныеСтроки.СуммаПрошлыйГод)/ДанныеСтроки.СуммаПрошлыйГод * 100,0);
			КонецЕсли;
			ДанныеСтроки.КоличествоПрошлыйГод   = 0;
			ДанныеСтроки.КоличествоПрошлыйМесяц = 0;
			ДанныеСтроки.КоличествоПлан         = 0;
			ДанныеСтроки.КоличествоПланМенеджер = 0;
			ДанныеСтроки.КоличествоПланНО       = 0;
			//ДанныеСтроки.КоличествоИтоговыйПлан = 0;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПланированиеСерковМенеджерыПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.Менеджер) и не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) тогда
			//ОформлениеСтроки.ДанныеСтроки.Утвержден = Истина Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗеленый;
			Для каждого яч из ОформлениеСтроки.ячейки	Цикл
				Яч.ТолькоПросмотр = Истина;
				Яч.Шрифт =  Новый Шрифт(,,Истина,,);
			конецЦикла;
		конецЕсли;	
		
		ОформлениеСтроки.Ячейки.ФактПрошлогоГода.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ФактПрошлогоМесяца.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ПредварительныйПлан.Видимость = ЛожЬ;
		//ОформлениеСтроки.Ячейки.ИтоговыйПлан.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПриростКПлану.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПланНО.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПланМенеджера.Видимость = ЛожЬ;
		//ОформлениеСтроки.Ячейки.ПриростПредварительного = ЛожЬ;
		
		конецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель9кнЗаполнитьПланНОПоДаннымМенеджеров(Кнопка)
	СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
	ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеНОПоМенеджерамНсколькоПодразделений2);
	
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2;
	Если ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Значение.Строки.Количество()>0 тогда
		ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Развернуть(ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Значение.Строки[0],истина);
	КонецЕсли;
	 
	 ЗаполнитьПланыНОПоДаннымМенеджеров(ПланированиеНООТРДПНесколькоПодразделений2.Строки);
	 
	 ОновитьПоказателиТбМенеджеров(ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки);
	 
КонецПроцедуры

Процедура ОновитьПоказателиТбМенеджеров(Строки)
	Для каждого стр из Строки цикл
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			стр.ПоказательПланНО = стр.ПоказательПланМенеджер;
			стр.КоличествоПланНО = стр.КоличествоПланМенеджер;
			стр.СуммаПланНО = стр.СуммаПланМенеджер;
		КонецЕсли;
		ОновитьПоказателиТбМенеджеров(стр.Строки);
	конецЦикла;
КонецПроцедуры

Процедура ЗаполнитьПланыНОПоДаннымМенеджеров(строки)
	отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	Для каждого стр из Строки цикл
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			ЗаполнитьЗначенияСвойств(отбор,стр);
			НайденныеСтроки = ПланыПоВсемМенеджерам.Строки.НайтиСтроки(отбор,истина);
			пСумма = 0;
			пКоличество = 0;
			пПоказатель = 0;
			
			Для каждого НайденнаяСтрока из НайденныеСтроки цикл
				пСумма = пСумма + НайденнаяСтрока.СуммаПланМенеджер;
				пКоличество = пКоличество + НайденнаяСтрока.КоличествоПланМенеджер;
				пПоказатель = пПоказатель + НайденнаяСтрока.ПоказательПланМенеджер;
				
				//
				//НайденнаяСтрока.ПоказательПланНО = НайденнаяСтрока.ПоказательПланМенеджер;
				//НайденнаяСтрока.КоличествоПланНО = НайденнаяСтрока.КоличествоПланМенеджер;
				//НайденнаяСтрока.СуммаПланНО = НайденнаяСтрока.СуммаПланМенеджер;
			КонецЦикла;
			
			Если стр.ТоварнаяГруппа = СпрПДЗ тогда 
				Коэфф = НайденныеСтроки.Количество();
			иначе
				Коэфф = 1;
			КонецЕсли;
			стр.КоличествоПланНО = пКоличество / Коэфф;
			стр.СуммаПланНО = пСумма / Коэфф;
			стр.ПоказательПланНО = пПоказатель / Коэфф;
		КонецЕсли;
		ЗаполнитьПланыНОПоДаннымМенеджеров(стр.строки);
	КонецЦикла;
КонецПроцедуры

Процедура ПланированиеНООТРДПНесколькоПодразделений2ПоказательПланНОПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			 ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.СуммаПланНО = ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.ПоказательПланНО;
		Иначе
			 ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.КоличествоПланНО = ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.ПоказательПланНО;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеНООТРДПНесколькоПодразделений2ПоказательИтоговыйПланПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			 ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.СуммаИтоговыйПлан = ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.ПоказательИтоговыйПлан;
		Иначе
			 ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.КоличествоИтоговыйПлан = ЭлементыФормы.ПланированиеНООТРДПНесколькоПодразделений2.ТекущаяСтрока.ПоказательИтоговыйПлан;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ПоказательПланНОПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.СуммаПланНО = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ПоказательПланНО;
		Иначе
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.КоличествоПланНО = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ПоказательПланНО;
		КонецЕсли;
		//Пересчитать общие планы НО
		ПересчитатьОбщиеПланыПоСтроке(ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока,ПланированиеНОПоМенеджерамНсколькоПодразделений2,ПланированиеНООТРДПНесколькоПодразделений2,"ПоказательПланНО","СуммаПланНО","КоличествоПланНО");
	КонецЕсли;
КонецПроцедуры

Процедура ПересчитатьОбщиеПланыПоСтроке(строка, ДеревоОткуда, ДеревоОбщее,ИмяПоказатель,ИмяСумма,ИмяКоличество)
	отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели",строка.НаправлениеПродаж, строка.ТоварнаяГруппа, строка.НоменклатурнаяГруппаПоказатели);
	отбор2 = новый Структура("ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели",строка.ТоварнаяГруппа, строка.НоменклатурнаяГруппаПоказатели);
	НайденныеСтроки = ДеревоОткуда.Строки.НайтиСтроки(отбор,истина);
	ПоказательИтог = 0;
	СуммаИтог      = 0;
	КоличествоИтог = 0;
	//ПДЗ = Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030");

	
	Для каждого стр из НайденныеСтроки цикл
		ПоказательИтог = ПоказательИтог + стр[ИмяПоказатель];
		СуммаИтог = СуммаИтог + стр[ИмяСумма];
		КоличествоИтог = КоличествоИтог + стр[ИмяКоличество];
	КонецЦикла;
	
	Если строка.ТоварнаяГруппа = СпрПДЗ тогда 
		Коэфф = НайденныеСтроки.Количество();
	иначе
		Коэфф = 1;
	КонецЕсли;
	
	Если ТипЗнч(ДеревоОбщее) = Тип("ДеревоЗначений") тогда
		НайденныеСтроки =  ДеревоОбщее.Строки.НайтиСтроки(отбор,истина);
		Для каждого стр из НайденныеСтроки цикл
			стр[ИмяПоказатель] = ПоказательИтог / Коэфф;
			стр[ИмяСумма] = СуммаИтог / Коэфф;
			стр[ИмяКоличество] = КоличествоИтог / Коэфф;
		КонецЦикла;
	Иначе
		НайденныеСтроки =  ДеревоОбщее.НайтиСтроки(отбор2);
		Для каждого стр из НайденныеСтроки цикл
			стр.ИтоговыйПлан = ПоказательИтог / Коэфф;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПересчитатьОбщиеПланыПоСтрокеСерков(строка, ДеревоОткуда, ДеревоОбщее)
	//ПДЗ = Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030");
	отбор2 = новый Структура("ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели",строка.ТоварнаяГруппа, строка.НоменклатурнаяГруппаПоказатели);
	НайденныеСтроки = ДеревоОткуда.Строки.НайтиСтроки(отбор2,истина);
	ПоказательИтог = 0;
	
	Для каждого стр из НайденныеСтроки цикл
		ПоказательИтог = ПоказательИтог + стр.ПоказательИтоговыйПлан;
	КонецЦикла;
	
	Если строка.ТоварнаяГруппа = СпрПДЗ тогда
		Коэфф = НайденныеСтроки.Количество();
	иначе
		Коэфф = 1;
	КонецЕсли;
	
	НайденныеСтроки =  ДеревоОбщее.НайтиСтроки(отбор2);
	Для каждого стр из НайденныеСтроки цикл
		стр.ИтоговыйПлан = ПоказательИтог / Коэфф;
	КонецЦикла;
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ПоказательПланМенеджерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.СуммаПланМенеджер = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ПоказательПланМенеджер;
		Иначе
			ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.КоличествоПланМенеджер = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.ТекущаяСтрока.ПоказательПланМенеджер;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура Панель1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Менеджеры и ЭлементыФормы.ПланированиеСерковМенеджеры.Значение.Строки.Количество()>0 тогда
		ЭлементыФормы.ПланированиеСерковМенеджеры.Развернуть(ЭлементыФормы.ПланированиеСерковМенеджеры.Значение.Строки[0],истина);
	КонецЕсли;
КонецПроцедуры

Процедура кнУтвердитьВесаНажатие(Элемент)
	
	ЗаписатьВеса(ТекущаяДата());
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
	             |	МесячныйПланДепортаментаПродаж.Производитель,
	             |	ВложенныйЗапросПользователи.Пользователь КАК менеджер,
	             |	МесячныйПланДепортаментаПродаж.Вес,
	             |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	             |	МесячныйПланДепортаментаПродаж.Отслеживать,
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж.ОтветственныйЗаПланирование КАК НаправлениеПродажРуководитель
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			Пользователи.Ссылка КАК Пользователь,
	             |			Пользователи.НаправлениеПродаж КАК НаправлениеПродаж
	             |		ИЗ
	             |			Справочник.Пользователи КАК Пользователи
	             |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	             |				ПО Пользователи.Ссылка = ЗначенияСвойствОбъектов.Объект
	             |		ГДЕ
	             |			Пользователи.ПометкаУдаления = ЛОЖЬ
	             |			И Пользователи.Заблокирован = ЛОЖЬ
	             |			И Пользователи.Родитель <> &выключенные
	             |			И ЗначенияСвойствОбъектов.Свойство = &СвойствоЭтоМенеджер
	             |			И ЗначенияСвойствОбъектов.Значение = ИСТИНА) КАК ВложенныйЗапросПользователи
	             |		ПО МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ВложенныйЗапросПользователи.НаправлениеПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |	И (МесячныйПланДепортаментаПродаж.Отслеживать
	             |			ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0
	             |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0)
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
				 Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
				 Запрос.УстановитьПараметр("выключенные",Справочники.Пользователи.НайтиПоНаименованию("Выключенные"));
				 Запрос.УстановитьПараметр("СвойствоЭтоМенеджер",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90333"));
				 
				 Результат = Запрос.Выполнить();
				 
				 ТабМенеджеров = Результат.Выгрузить();
				 ТабМенеджеров.Свернуть("менеджер,НаправлениеПродажРуководитель");
				 
				 Рез = Результат.Выбрать();
				 
				 Пока Рез.Следующий() Цикл //Подразделения
					 МенеджерЗаписи = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
					 ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Рез);
					 //МенеджерЗаписи.Прочитать();
					 МенеджерЗаписи.Записать();
				 КонецЦикла;
	КоманднаяПанель8Заполнить2(неопределено);
	ЗаписатьПланыНО(ложь, ложь);
	
	СоздатьЗадачиОбУтвержденииВесов(ТабМенеджеров);
КонецПроцедуры

Процедура СоздатьЗадачиОбУтвержденииВесов(ТабМенеджеров)
	Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
	Задача.Дата = ТекущаяДата();
	//Задача.Исполнитель
	Задача.Наименование = "Утверждены показатели плана на "+Формат(НачалоПериода,"ДФ='MMMM yyyy'");
	Задача.Описание = "Утверждены показатели плана на "+Формат(НачалоПериода,"ДФ='MMMM yyyy'");
	Задача.Оповещение = Истина;
	СрокИсполненияМ = ТекущаяДата();
	СрокИсполненияНО = ТекущаяДата();
	
	Для каждого стр из ТабМенеджеров цикл
		Задача2 = Задача.Скопировать();
		Задача2.Исполнитель = стр.Менеджер;
		Задача2.Дата = ТекущаяДата();
		
		СрокИсполнения = ТекущаяДата() + 3*60*60;
		Если Час(СрокИсполнения)>= 17 тогда
			СрокИсполнения = КонецДня(СрокИсполнения)+1+ (8+3)*60*60;
		КонецЕсли;
		Задача2.СрокИсполнения = СрокИсполнения;
		СрокИсполненияМ = СрокИсполнения;
		Задача2.СрокОповещения = ТекущаяДата();
		Задача2.Записать();
		Сообщить("Создана задача для пользователя: "+стр.Менеджер);
	КонецЦикла;
	
	табРуководителей = ТабМенеджеров.скопировать(,"НаправлениеПродажРуководитель");
	табРуководителей.свернуть("НаправлениеПродажРуководитель");
	Для каждого стр из табРуководителей цикл
		Задача2 = Задача.Скопировать();
		Задача2.Дата = ТекущаяДата() + 3*60*60;
		
		СрокИсполнения = СрокИсполненияМ + 3*60*60;
		Если Час(СрокИсполнения)>= 17 тогда
			СрокИсполнения = КонецДня(СрокИсполнения)+1+ (8+3)*60*60;
		КонецЕсли;
		Задача2.СрокИсполнения = СрокИсполнения;
		СрокИсполненияНО = СрокИсполнения;
		//Задача2.СрокИсполнения = ТекущаяДата() + 6*60*60;
		Задача2.СрокОповещения = СрокИсполнения - 3*60*60;

		Задача2.Исполнитель = стр.НаправлениеПродажРуководитель;
		Задача2.Записать();
		Сообщить("Создана задача для пользователя: "+стр.НаправлениеПродажРуководитель);
	КонецЦикла;
	
		Задача2 = Задача.Скопировать();
		Задача2.Дата = ТекущаяДата() + 6*60*60;
		
		СрокИсполнения = СрокИсполненияНО + 3*60*60;
		Если Час(СрокИсполнения)>= 17 тогда
			СрокИсполнения = КонецДня(СрокИсполнения)+1+ (8+3)*60*60;
		КонецЕсли;
		
		Задача2.СрокИсполнения = СрокИсполнения;
		Задача2.СрокОповещения = СрокИсполнения - 3*60*60;
        Задача2.Наименование = "Утверждены показатели плана на "+Формат(НачалоПериода,"ДФ='MMMM yyyy'");
		Задача2.Описание = "Утверждены показатели плана на "+Формат(НачалоПериода,"ДФ='MMMM yyyy'");
		Задача2.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Серков");
		Задача2.Записать();
		Сообщить("Создана задача для пользователя: "+Задача2.Исполнитель);

КонецПроцедуры

Процедура ПланированиеСерковПодразделенияПоказательПланНОПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			 ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.СуммаПланНО = ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.ПоказательПланНО;
		Иначе
			 ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.КоличествоПланНО = ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.ПоказательПланНО;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПланированиеСерковПодразделенияПоказательИтоговыйПланПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			 ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.СуммаИтоговыйПлан = ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.ПоказательИтоговыйПлан;
		Иначе
			 ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.КоличествоИтоговыйПлан = ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока.ПоказательИтоговыйПлан;
		КонецЕсли;
		//ПересчитатьОбщиеПланыПоСтроке(ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока,ПланированиеСерковПодразделения,ПланОтделаРазвития,"ПоказательИтоговыйПлан","СуммаИтоговыйПлан","КоличествоИтоговыйПлан"); 
		ПересчитатьОбщиеПланыПоСтрокеСерков(ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока,ПланированиеСерковПодразделения,ПланОтделаРазвития);
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеСерковМенеджерыПоказательПланМенеджерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.СуммаПланМенеджер = ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.ПоказательПланМенеджер;
		Иначе
			ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.КоличествоПланМенеджер = ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.ПоказательПланМенеджер;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеСерковМенеджерыПоказательПланНОПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.СуммаПланНО = ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.ПоказательПланНО;
		Иначе
			ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.КоличествоПланНО = ЭлементыФормы.ПланированиеСерковМенеджеры.ТекущаяСтрока.ПоказательПланНО;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура кнЗаполнитьПланМенеджераНажатие(Элемент)
	
	ЭлементыФормы.ПланированиеМенеджера.Колонки.Показатель6месЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеМенеджера.Колонки.Показатель6месПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеМенеджера.Колонки.ПоказательПериодПланированияЭтогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияЭтогоГода(),"ДФ=dd.MM.yyyy") ;
	ЭлементыФормы.ПланированиеМенеджера.Колонки.ПоказательПериодПланированияПрошлогоГода.ТекстШапки = "Показатель за " + Символы.ПС + Формат(ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),"ДФ=dd.MM.yyyy")+" - " +Формат(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(),"ДФ=dd.MM.yyyy") ;
	
	///////
	ПланированиеМенеджера.Строки.Очистить();
	///менеджеры
	ЗапросМ = новый Запрос;
	ЗапросМ.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.Производитель,
	              |	МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан,
	              |	МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан,
	              |	МесячныйПланДепортаментаПродаж.КоличествоПлан,
	              |	МесячныйПланДепортаментаПродаж.СуммаПлан,
	              |	МесячныйПланДепортаментаПродаж.Утвержден,
	              |	МесячныйПланДепортаментаПродаж.Вес КАК вес,
	              |	МесячныйПланДепортаментаПродаж.Менеджер,
	              |	МесячныйПланДепортаментаПродаж.КоличествоПланНО,
	              |	МесячныйПланДепортаментаПродаж.СуммаПланНО,
	              |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	              |	МесячныйПланДепортаментаПродаж.Отслеживать,
	              |	ВЫБОР
	              |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	              |			ТОГДА МесячныйПланДепортаментаПродаж.Вес
	              |		ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	              |	КОНЕЦ КАК ВесО,
	              |	МесячныйПланДепортаментаПродаж.КоличествоПланМенеджер,
	              |	МесячныйПланДепортаментаПродаж.СуммаПланМенеджер,
	              |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	              |ПОМЕСТИТЬ втПлан
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.Менеджер = &ВыбМенеджер
	              |	И 99 = 99
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	втПлан.НаправлениеПродаж КАК НаправлениеПродаж,
	              |	втПлан.Менеджер КАК Менеджер,
	              |	втПлан.ТоварнаяГруппа КАК ТоварнаяГруппа,
	              |	втПлан.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПоказатели,
	              |	СУММА(втПлан.КоличествоИтоговыйПлан) КАК КоличествоИтоговыйПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаИтоговыйПлан = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаИтоговыйПлан
	              |		КОНЕЦ) КАК СуммаИтоговыйПлан,
	              |	СУММА(втПлан.КоличествоПлан) КАК КоличествоПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаПлан = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаПлан
	              |		КОНЕЦ) КАК СуммаПлан,
	              |	СУММА(0) КАК КоличествоПрошлыйМесяц,
	              |	СУММА(0) КАК СуммаПрошлыйМесяц,
	              |	СУММА(0) КАК КоличествоПрошлыйГод,
	              |	СУММА(0) КАК СуммаПрошлыйГод,
	              |	СУММА(втПлан.вес) КАК Вес,
	              |	втПлан.МесяцПланирования КАК МесяцПланирования,
	              |	СУММА(втПлан.КоличествоПланНО) КАК КоличествоПланНО,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаПланНО = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаПланНО
	              |		КОНЕЦ) КАК СуммаПланНО,
	              |	СУММА(втПлан.ВесКоличество) КАК ВесКоличество,
	              |	МАКСИМУМ(втПлан.Отслеживать) КАК Отслеживать,
	              |	МАКСИМУМ(втПлан.Утвержден) КАК Утвержден,
	              |	СУММА(втПлан.ВесО) КАК ВесО,
	              |	СУММА(втПлан.КоличествоПланМенеджер) КАК КоличествоПланМенеджер,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаПланМенеджер = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаПланМенеджер
	              |		КОНЕЦ) КАК СуммаПланМенеджер,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаИтоговыйПлан = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаИтоговыйПлан
	              |					КОНЕЦ
	              |			ИНАЧЕ втПлан.КоличествоИтоговыйПлан
	              |		КОНЕЦ) КАК ПоказательИтоговыйПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаПлан = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаПлан
	              |					КОНЕЦ
	              |			ИНАЧЕ втПлан.КоличествоПлан
	              |		КОНЕЦ) КАК ПоказательПлан,
	              |	СУММА(0) КАК ПоказательПрошлыйМесяц,
	              |	СУММА(0) КАК ПоказательПрошлыйГод,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаПланНО = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаПланНО
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫБОР
	              |					КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |							И втПлан.КоличествоПланНО = 0
	              |						ТОГДА 7
	              |					ИНАЧЕ втПлан.КоличествоПланНО
	              |				КОНЕЦ
	              |		КОНЕЦ) КАК ПоказательПланНО,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаПланМенеджер = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаПланМенеджер
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫБОР
	              |					КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |							И втПлан.КоличествоПланМенеджер = 0
	              |						ТОГДА 7
	              |					ИНАЧЕ втПлан.КоличествоПланМенеджер
	              |				КОНЕЦ
	              |		КОНЕЦ) КАК ПоказательПланМенеджер,
	              |	МАКСИМУМ(втПлан.ДатаУтвержденияНО) КАК ДатаУтвержденияНО,
	              |	втПлан.ТоварнаяГруппаСуммовоеПланирование,
	              |	ВЫБОР
	              |		КОГДА втПлан.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	              |			ТОГДА 1000
	              |		ИНАЧЕ втПлан.ВесО
	              |	КОНЕЦ КАК Сортировка,
	              |	СУММА(0) КАК Показатель6МесЭтогоГода,
	              |	СУММА(0) КАК Показатель6МесПрошлогоГода,
	              |	СУММА(0) КАК ПоказательПериодПланированияЭтогоГода,
	              |	СУММА(0) КАК ПоказательПериодПланированияПрошлогоГода,
	              |	СУММА(0) КАК ДинамикаЗа6Месяцев,
	              |	СУММА(0) КАК ДинамикаЗаПериодПланирования
	              |ИЗ
	              |	втПлан КАК втПлан
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	втПлан.ТоварнаяГруппа,
	              |	втПлан.НоменклатурнаяГруппа,
	              |	втПлан.НаправлениеПродаж,
	              |	втПлан.Менеджер,
	              |	втПлан.МесяцПланирования,
	              |	втПлан.ТоварнаяГруппаСуммовоеПланирование,
	              |	ВЫБОР
	              |		КОГДА втПлан.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	              |			ТОГДА 1000
	              |		ИНАЧЕ втПлан.ВесО
	              |	КОНЕЦ
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	НаправлениеПродаж,
	              |	втПлан.Менеджер.Наименование,
	             // |	Сортировка УБЫВ,
	              |	втПлан.ТоварнаяГруппа.Наименование,
	              |	НоменклатурнаяГруппаПоказатели
	              |ИТОГИ
	              |	СУММА(ВесО),
	              |	МАКСИМУМ(ДатаУтвержденияНО)
	              |ПО
	              |	НаправлениеПродаж,
	              |	Менеджер
	              |АВТОУПОРЯДОЧИВАНИЕ";
				  
				  ЗапросМ.УстановитьПараметр("ВыбМенеджер", МенеджерП);
				
	ЗапросМ.УстановитьПараметр("МесяцПланирования", НачалоПериода);
	ЗапросМ.УстановитьПараметр("НачПериодаПрошлогоМесяца", ДобавитьМесяц(НачалоПериода,-1));
	ЗапросМ.УстановитьПараметр("КонПериодаПрошлогоМесяца", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-1)), ВидГраницы.Включая));
	ЗапросМ.УстановитьПараметр("НачПрошлогоПериода", ДобавитьМесяц(НачалоПериода,-12));
	ЗапросМ.УстановитьПараметр("КонПрошлогоПериода", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-12)), ВидГраницы.Включая));
	
	ЗапросМ.УстановитьПараметр("НачПериода6МесЭтогоГода",ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода));
	ЗапросМ.УстановитьПараметр("КонПериода6МесЭтогоГода", Новый Граница(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода), ВидГраницы.Включая));
	ЗапросМ.УстановитьПараметр("НачПериода6МесПрошлогоГода",ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода));
	ЗапросМ.УстановитьПараметр("КонПериода6МесПрошлогоГода", Новый Граница(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода), ВидГраницы.Включая));
	
	//ЗапросМ.УстановитьПараметр("НачПериодаПериодПланированияЭтогоГода",ДобавитьМесяц((НачалоПериода),-6));
	//ЗапросМ.УстановитьПараметр("КонПериодаПериодПланированияЭтогоГода", КонецДня(КонецПериода));
	//ЗапросМ.УстановитьПараметр("НачПериодаПериодПланированияПрошлогоГода",ДобавитьМесяц((НачалоПериода),-18));
	//ЗапросМ.УстановитьПараметр("КонПериодаПериодПланированияПрошлогоГода", КонецДня(ДобавитьМесяц((КонецПериода),-12)));
	
	ЗапросМ.УстановитьПараметр("НачПериодаПериодПланированияЭтогоГода",ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
	ЗапросМ.УстановитьПараметр("КонПериодаПериодПланированияЭтогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияЭтогоГода(), ВидГраницы.Включая));
	
	ЗапросМ.УстановитьПараметр("НачПериодаПериодПланированияПрошлогоГода",ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
	ЗапросМ.УстановитьПараметр("КонПериодаПериодПланированияПрошлогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(), ВидГраницы.Включая));

	
	ЗапросМ.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);
	ЗапросМ.УстановитьПараметр("Выключенные",Справочники.Пользователи.НайтиПоНаименованию("Выключенные"));
	
	Результат2 = ЗапросМ.Выполнить();
	
	
	ПланыПоВсемМенеджерам = Результат2.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	//фактпрошлых периодов
	//факт прошлых периодов
	ЗапросРассчитываемыеНГ = Новый Запрос;
	ЗапросРассчитываемыеНГ.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	|	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	|ГДЕ
	|	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	|	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	|	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	|	И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	|ИЗ
	|	вт КАК вт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования КАК ТоварныеГруппыДляПланирования
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	|			ПО ТоварныеГруппыДляПланирования.Ссылка = ТоварныеГруппыДляПланированияСостав.Ссылка
	|		ПО (вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Ссылка
	|				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель
	|				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель
	|				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель.Родитель)
	|			И (вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Ссылка
	|				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель
	|				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель
	|				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель.Родитель)
	|ГДЕ
	|	ТоварныеГруппыДляПланирования.ЭтоГруппа = ЛОЖЬ
	|	И вт.НоменклатурнаяГруппаПоказатели = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт.НоменклатурнаяГруппаПоказатели
	|ИЗ
	|	вт КАК вт
	|ГДЕ
	|	вт.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)";
	ЗапросРассчитываемыеНГ.УстановитьПараметр("МесяцПланирования", НачалоПериода);
	СписокРассчитываемыхНГ = ЗапросРассчитываемыеНГ.Выполнить().Выгрузить().ВыгрузитьКолонку("НоменклатурнаяГруппа");
	
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажиПрошлыйГод
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПрошлогоПериода,
	             |			&КонПрошлогоПериода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99
	             |				И ДоговорКонтрагента.ОтветственноеЛицо = &ВыбМенеджер) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажиПрошлыйМесяц
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПрошлогоМесяца,
	             |			&КонПериодаПрошлогоМесяца,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99
	             |				И ДоговорКонтрагента.ОтветственноеЛицо = &ВыбМенеджер) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажи6МесЭтогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода6МесЭтогоГода,
	             |			&КонПериода6МесЭтогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99
	             |				И ДоговорКонтрагента.ОтветственноеЛицо = &ВыбМенеджер) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажи6МесПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода6МесПрошлогоГода,
	             |			&КонПериода6МесПрошлогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99
	             |				И ДоговорКонтрагента.ОтветственноеЛицо = &ВыбМенеджер) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажиПериодПланированияЭтогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПериодПланированияЭтогоГода,
	             |			&КонПериодаПериодПланированияЭтогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99
	             |				И ДоговорКонтрагента.ОтветственноеЛицо = &ВыбМенеджер) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажиПериодПланированияПрошлогоГода
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериодаПериодПланированияПрошлогоГода,
	             |			&КонПериодаПериодПланированияПрошлогоГода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99
	             |				И ДоговорКонтрагента.ОтветственноеЛицо = &ВыбМенеджер) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	А.НоменклатураНоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	СУММА(А.КоличествоОборотПрошлыйГод) КАК КоличествоПрошлыйГод,
	             |	СУММА(А.СтоимостьОборотПрошлыйГод) КАК СуммаПрошлыйГод,
	             |	А.ТоварнаяГруппаПланирования,
	             |	СУММА(А.КоличествоОборотПрошлыйМесяц) КАК КоличествоПрошлыйМесяц,
	             |	СУММА(А.СтоимостьОборотПрошлыйМесяц) КАК СуммаПрошлыйМесяц,
	             |	А.ТоварнаяГруппаПланирования.Родитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель,
	             |	А.Менеджер,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПрошлыйГод
	             |			ИНАЧЕ А.КоличествоОборотПрошлыйГод
	             |		КОНЕЦ) КАК ПоказательПрошлыйГод,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПрошлыйМесяц
	             |			ИНАЧЕ А.КоличествоОборотПрошлыйМесяц
	             |		КОНЕЦ) КАК ПоказательПрошлыйМесяц,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборот6МесЭтогоГода
	             |			ИНАЧЕ А.КоличествоОборот6МесЭтогоГода
	             |		КОНЕЦ) КАК Показатель6МесЭтогоГода,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборот6МесПрошлогоГода
	             |			ИНАЧЕ А.КоличествоОборот6МесПрошлогоГода
	             |		КОНЕЦ) КАК Показатель6МесПрошлогоГода,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПериодПланированияЭтогоГода
	             |			ИНАЧЕ А.КоличествоОборотПериодПланированияЭтогоГода
	             |		КОНЕЦ) КАК ПоказательПериодПланированияЭтогоГода,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборотПериодПланированияПрошлогоГода
	             |			ИНАЧЕ А.КоличествоОборотПериодПланированияПрошлогоГода
	             |		КОНЕЦ) КАК ПоказательПериодПланированияПрошлогоГода
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		втПродажиПрошлыйГод.НоменклатураНоменклатурнаяГруппа КАК НоменклатураНоменклатурнаяГруппа,
	             |		втПродажиПрошлыйГод.КоличествоОборот КАК КоличествоОборотПрошлыйГод,
	             |		втПродажиПрошлыйГод.СтоимостьОборот КАК СтоимостьОборотПрошлыйГод,
	             |		втПродажиПрошлыйГод.ТоварнаяГруппаПланирования КАК ТоварнаяГруппаПланирования,
	             |		0 КАК КоличествоОборотПрошлыйМесяц,
	             |		0 КАК СтоимостьОборотПрошлыйМесяц,
	             |		втПродажиПрошлыйГод.Менеджер КАК Менеджер,
	             |		0 КАК КоличествоОборот6МесЭтогоГода,
	             |		0 КАК СтоимостьОборот6МесЭтогоГода,
	             |		0 КАК КоличествоОборот6МесПрошлогоГода,
	             |		0 КАК СтоимостьОборот6МесПрошлогоГода,
	             |		0 КАК КоличествоОборотПериодПланированияЭтогоГода,
	             |		0 КАК СтоимостьОборотПериодПланированияЭтогоГода,
	             |		0 КАК КоличествоОборотПериодПланированияПрошлогоГода,
	             |		0 КАК СтоимостьОборотПериодПланированияПрошлогоГода
	             |	ИЗ
	             |		втПродажиПрошлыйГод КАК втПродажиПрошлыйГод
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПрошлыйМесяц.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПрошлыйМесяц.ТоварнаяГруппаПланирования,
	             |		втПродажиПрошлыйМесяц.КоличествоОборот,
	             |		втПродажиПрошлыйМесяц.СтоимостьОборот,
	             |		втПродажиПрошлыйМесяц.Менеджер,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажиПрошлыйМесяц КАК втПродажиПрошлыйМесяц
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажи6МесЭтогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажи6МесЭтогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажи6МесЭтогоГода.Менеджер,
	             |		втПродажи6МесЭтогоГода.КоличествоОборот,
	             |		втПродажи6МесЭтогоГода.СтоимостьОборот,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажи6МесЭтогоГода КАК втПродажи6МесЭтогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажи6МесПрошлогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.Менеджер,
	             |		0,
	             |		0,
	             |		втПродажи6МесПрошлогоГода.КоличествоОборот,
	             |		втПродажи6МесПрошлогоГода.СтоимостьОборот,
	             |		0,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажи6МесПрошлогоГода КАК втПродажи6МесПрошлогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПериодПланированияЭтогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.Менеджер,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияЭтогоГода.КоличествоОборот,
	             |		втПродажиПериодПланированияЭтогоГода.СтоимостьОборот,
	             |		0,
	             |		0
	             |	ИЗ
	             |		втПродажиПериодПланированияЭтогоГода КАК втПродажиПериодПланированияЭтогоГода
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		втПродажиПериодПланированияПрошлогоГода.НоменклатураНоменклатурнаяГруппа,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.ТоварнаяГруппаПланирования,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.Менеджер,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		0,
	             |		втПродажиПериодПланированияПрошлогоГода.КоличествоОборот,
	             |		втПродажиПериодПланированияПрошлогоГода.СтоимостьОборот
	             |	ИЗ
	             |		втПродажиПериодПланированияПрошлогоГода КАК втПродажиПериодПланированияПрошлогоГода) КАК А
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	А.НоменклатураНоменклатурнаяГруппа,
	             |	А.ТоварнаяГруппаПланирования,
	             |	А.ТоварнаяГруппаПланирования.Родитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель,
	             |	А.Менеджер";
				 
				 Запрос.УстановитьПараметр("ВыбМенеджер", МенеджерП);
				 Запрос.УстановитьПараметр("МесяцПланирования", НачалоПериода);
				 Запрос.УстановитьПараметр("НачПериодаПрошлогоМесяца", ДобавитьМесяц(НачалоПериода,-1));
				 Запрос.УстановитьПараметр("КонПериодаПрошлогоМесяца", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-1)), ВидГраницы.Включая));
				 Запрос.УстановитьПараметр("НачПрошлогоПериода", ДобавитьМесяц(НачалоПериода,-12));
				 Запрос.УстановитьПараметр("КонПрошлогоПериода", Новый Граница(КонецМесяца(ДобавитьМесяц(НачалоПериода,-12)), ВидГраницы.Включая));
				 Запрос.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);
				 Запрос.УстановитьПараметр("СписокРассчитываемыхНГ", СписокРассчитываемыхНГ);
				 
				 Запрос.УстановитьПараметр("НачПериода6МесЭтогоГода",ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода));
				 Запрос.УстановитьПараметр("КонПериода6МесЭтогоГода", Новый Граница(ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода), ВидГраницы.Включая));
				 Запрос.УстановитьПараметр("НачПериода6МесПрошлогоГода",ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода));
				 Запрос.УстановитьПараметр("КонПериода6МесПрошлогоГода", Новый Граница(ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода), ВидГраницы.Включая));
				 
				 //Запрос.УстановитьПараметр("НачПериодаПериодПланированияЭтогоГода",ДобавитьМесяц((НачалоПериода),-6));
				 //Запрос.УстановитьПараметр("КонПериодаПериодПланированияЭтогоГода", КонецДня(КонецПериода));
				 //Запрос.УстановитьПараметр("НачПериодаПериодПланированияПрошлогоГода",ДобавитьМесяц((НачалоПериода),-18));
				 //Запрос.УстановитьПараметр("КонПериодаПериодПланированияПрошлогоГода", КонецДня(ДобавитьМесяц((КонецПериода),-12)));
				 Запрос.УстановитьПараметр("НачПериодаПериодПланированияЭтогоГода",ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
				 Запрос.УстановитьПараметр("КонПериодаПериодПланированияЭтогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияЭтогоГода(), ВидГраницы.Включая));
	
				 Запрос.УстановитьПараметр("НачПериодаПериодПланированияПрошлогоГода",ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала));
				 Запрос.УстановитьПараметр("КонПериодаПериодПланированияПрошлогоГода", Новый Граница(ПолучитьКонецПериодаПериодПланированияПрошлогоГода(), ВидГраницы.Включая));


				 				
	ФактПрошлыхПериодов = Запрос.Выполнить().Выгрузить();
	
	//отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	ПроставитьФактВДеревоМенеджеров(ПланыПоВсемМенеджерам,ФактПрошлыхПериодов);
	
	
	//ручные по менеджерам
	ЗапросМ.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования КАК МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	              |	МесячныйПланДепортаментаПродаж.Менеджер КАК Менеджер,
	              |	0 КАК КоличествоПрошлыйГод,
	              |	0 КАК СуммаПрошлыйГод,
	              |	0 КАК КоличествоПрошлыйМесяц,
	              |	0 КАК СуммаПрошлыйМесяц,
	              |	МесячныйПланДепортаментаПродаж.Вес,
	              |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование,
	              |	0 КАК ПоказательПрошлыйГод,
	              |	0 КАК ПоказательПрошлыйМесяц,
				  |	0 КАК Показатель6МесЭтогоГода,
				  |	0 КАК Показатель6МесПрошлогоГода,
				  |	0 КАК ПоказательПериодПланированияЭтогоГода,
				  |	0 КАК ПоказательПериодПланированияПрошлогоГода,
				  |	0 КАК ДинамикаЗа6Месяцев,
				  |	0 КАК ДинамикаЗаПериодПланирования,

	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.Менеджер = &ВыбМенеджер
	              |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.Пустаяссылка)
	              |	И НЕ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	              |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	              |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
	              |	И (ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса КАК СТРОКА(500))) <> """"
	              |	И 99 = 99";
	             ЗапросМ.УстановитьПараметр("ВыбМенеджер", МенеджерП);
				 Рез = ЗапросМ.Выполнить().Выгрузить();
	Для каждого стр из Рез Цикл
		//Если стр.Вес>0 тогда
		Если стр.СуммовоеПланирование тогда
			стр.СуммаПрошлыйГод = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
			стр.ПоказательПрошлыйГод = стр.СуммаПрошлыйГод;
			
			стр.СуммаПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
			стр.ПоказательПрошлыйМесяц = стр.СуммаПрошлыйМесяц;
			
		иначе//Если стр.ВесКоличество>0 тогда
			стр.КоличествоПрошлыйГод = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-12),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
			стр.ПоказательПрошлыйГод = стр.КоличествоПрошлыйГод;
			
			стр.КоличествоПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
			стр.ПоказательПрошлыйМесяц = стр.КоличествоПрошлыйМесяц;

		КонецЕсли;
		
		стр.Показатель6МесЭтогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериода6МесЭтогоГода(НачалоПериода),ПолучитьКонецПериода6МесЭтогоГода(НачалоПериода));
		стр.Показатель6МесПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериода6МесПрошлогоГода(НачалоПериода),ПолучитьКонецПериода6МесПрошлогоГода(НачалоПериода));
		
		стр.ПоказательПериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериодаПериодПланированияЭтогоГода(ПериодПолугодовогоПланирования.ДатаНачала),ПолучитьКонецПериодаПериодПланированияЭтогоГода());
	    стр.ПоказательПериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(ПериодПолугодовогоПланирования.ДатаНачала),ПолучитьКонецПериодаПериодПланированияПрошлогоГода());
	
		//стр.ПоказательПериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-6),КонецДня(КонецПериода));
		//стр.ПоказательПериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-18),КонецДня(ДобавитьМесяц((КонецПериода),-12)));
		
		стр.ДинамикаЗа6Месяцев = ?(стр.Показатель6МесПрошлогоГода = 0, 0, стр.Показатель6МесЭтогоГода/стр.Показатель6МесПрошлогоГода*100)-100;
		стр.ДинамикаЗаПериодПланирования = ?(стр.ПоказательПериодПланированияПрошлогоГода = 0, 0, стр.ПоказательПериодПланированияЭтогоГода/стр.ПоказательПериодПланированияПрошлогоГода*100)-100;

		//стр.ФактДП6МесПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-18),КонецДня(ДобавитьМесяц((КонецПериода),-12)),СписокНаправлений);
		//
		//стр.ФактДППериодПланированияЭтогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-6),КонецДня(КонецПериода),СписокНаправлений);
		//стр.ФактДППериодПланированияПрошлогоГода = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-18),КонецДня(ДобавитьМесяц((КонецПериода),-12)),СписокНаправлений);
	КонецЦикла;
	
	//прошлый месяц
	//Для каждого стр из Рез Цикл
	//	Если стр.СуммовоеПланирование тогда
	//		стр.СуммаПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
	//		стр.ПоказательПрошлыйМесяц = стр.СуммаПрошлыйМесяц;
	//	иначе//Если стр.ВесКоличество>0 тогда
	//		стр.КоличествоПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
	//		стр.ПоказательПрошлыйМесяц = стр.КоличествоПрошлыйМесяц;
	//	КонецЕсли;
	//КонецЦикла;
	//Рез.ВыбратьСтроку();
	Для каждого стр из  Рез цикл
		нашли = ложь;
		ОбновитьПараметрыВДеревеМенеджеров(ПланыПоВсемМенеджерам, стр,ложь);
	КонецЦикла;
	
	///СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
	ТекущееНаправлениеПродаж = МенеджерП.НаправлениеПродаж;
	ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеМенеджера);
	ЭлементыФормы.ПланированиеМенеджера.Колонки.НаправлениеПродаж.Видимость = ложь;
	
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ПланированиеМенеджера; 
	Если ЭлементыФормы.ПланированиеМенеджера.Значение.Строки.Количество()>0 тогда
		ЭлементыФормы.ПланированиеМенеджера.Развернуть(ЭлементыФормы.ПланированиеМенеджера.Значение.Строки[0],истина);
	КонецЕсли;
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО КАК ДатаУтвержденияНО
	               |ИЗ
	               |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	               |ГДЕ
	               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО <> ДАТАВРЕМЯ(1, 1, 1)
	               |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	               |	И МесячныйПланДепортаментаПродаж.Менеджер = &ВыбМенеджер";
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Количество()>0 тогда
		ЭлементыФормы.ПланированиеМенеджера.Колонки.ПоказательПланНО.Видимость = истина;
		ЭлементыФормы.ПланированиеМенеджера.Колонки.ПриростНО.Видимость = истина;
	иначе
		ЭлементыФормы.ПланированиеМенеджера.Колонки.ПоказательПланНО.Видимость = ложь;
		ЭлементыФормы.ПланированиеМенеджера.Колонки.ПриростНО.Видимость = ложь;
	КонецЕсли;

	
	Запрос.Текст = "ВЫБРАТЬ
	               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП КАК ДатаУтвержденияРДП,
	               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияНО КАК ДатаУтвержденияНО,
	               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияМенеджером КАК ДатаУтвержденияМенеджером
	               |ИЗ
	               |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	               |ГДЕ
	               |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияМенеджером <> ДАТАВРЕМЯ(1, 1, 1)
	               |	И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	               |	И МесячныйПланДепортаментаПродаж.Менеджер = &ВыбМенеджер";
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Количество()>0 тогда
		ЭлементыФормы.кнНаУтверждениеМенеджер.Заголовок = "На согласовании";
	иначе
		ЭлементыФормы.кнНаУтверждениеМенеджер.Заголовок = "На согласование";
	КонецЕсли;

КонецПроцедуры

Процедура ПланированиеМенеджераПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ЗначениеЗаполнено(ДанныеСтроки.товарнаягруппа) тогда
		//Если не ДанныеСтроки.товарнаягруппа.СуммовоеПланирование тогда
		Если не ДанныеСтроки.товарнаягруппаСуммовоеПланирование тогда
			ДанныеСтроки.СуммаПрошлыйГод   = 0;
			ДанныеСтроки.СуммаПрошлыйМесяц = 0;
			ДанныеСтроки.СуммаПлан         = 0;
			ДанныеСтроки.СуммаПланНО       = 0;
			ДанныеСтроки.СуммаПланМенеджер = 0;
		иначе
			ДанныеСтроки.КоличествоПрошлыйГод   = 0;
			ДанныеСтроки.КоличествоПрошлыйМесяц = 0;
			ДанныеСтроки.КоличествоПлан         = 0;
			ДанныеСтроки.КоличествоПланМенеджер = 0;
			ДанныеСтроки.КоличествоПланНО       = 0;
		КонецЕсли;
		
		Если ДанныеСтроки.ТоварнаяГруппа<>СпрПДЗ тогда
			ДанныеСтроки.ПриростПредварительного = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПлан - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
			ДанныеСтроки.ПриростНО = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПланНО - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
			ДанныеСтроки.ПриростМенеджер = ?(ДанныеСтроки.ПоказательПрошлыйГод>0,(ДанныеСтроки.ПоказательПланМенеджер - ДанныеСтроки.ПоказательПрошлыйГод)/ДанныеСтроки.ПоказательПрошлыйГод * 100,0);
		иначе	
			ДанныеСтроки.ПоказательПланМенеджер = 7;
			ДанныеСтроки.ПоказательПланНО = 7;
        КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПланированиеМенеджераПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.Менеджер) и не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) тогда
			//ОформлениеСтроки.ДанныеСтроки.Утвержден = Истина Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗеленый;
			Для каждого яч из ОформлениеСтроки.ячейки	Цикл
				Яч.ТолькоПросмотр = Истина;
				Яч.Шрифт =  Новый Шрифт(,,Истина,,);
			конецЦикла;
		конецЕсли;	
		
		Если ОформлениеСтроки.ДанныеСтроки.ПоказательПланНО<>ОформлениеСтроки.ДанныеСтроки.ПоказательПланМенеджер и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ПоказательПланНО) и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ДатаУтвержденияНО) тогда
			ОформлениеСтроки.ячейки.ПоказательПланМенеджер.ЦветФона = WebЦвета.Красный;
		КонецЕсли;

		//Если не ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппаСуммовоеПланирование тогда
		//	ОформлениеСтроки.ДанныеСтроки.ПоказательПлан = Формат(ОформлениеСтроки.ДанныеСтроки.ПоказательПлан,"ЧДЦ=0");
		//	ОформлениеСтроки.ДанныеСтроки.ПоказательПланМенеджер = Формат(ОформлениеСтроки.ДанныеСтроки.ПоказательПланМенеджер,"ЧДЦ=0");
		//КонецЕсли;
		
		ОформлениеСтроки.Ячейки.ФактПрошлогоГода.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ФактПрошлогоМесяца.Видимость = ЛожЬ; 	
		ОформлениеСтроки.Ячейки.ПредварительныйПлан.Видимость = ЛожЬ;
		//ОформлениеСтроки.Ячейки.ИтоговыйПлан.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПриростКПлану.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПланНО.Видимость = ЛожЬ;
		ОформлениеСтроки.Ячейки.ПланМенеджера.Видимость = ЛожЬ;
		//ОформлениеСтроки.Ячейки.ПриростПредварительного = ЛожЬ;
		
	конецЦикла;	
	
КонецПроцедуры

Процедура ПланированиеМенеджераПоказательПланМенеджерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеМенеджера.ТекущаяСтрока.ТоварнаяГруппа) тогда
		Если ЭлементыФормы.ПланированиеМенеджера.ТекущаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
			ЭлементыФормы.ПланированиеМенеджера.ТекущаяСтрока.СуммаПланМенеджер = ЭлементыФормы.ПланированиеМенеджера.ТекущаяСтрока.ПоказательПланМенеджер;
		Иначе
			ЭлементыФормы.ПланированиеМенеджера.ТекущаяСтрока.КоличествоПланМенеджер = ЭлементыФормы.ПланированиеМенеджера.ТекущаяСтрока.ПоказательПланМенеджер;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПланОтделаРазвитияПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если ОформлениеСтроки.ДанныеСтроки.ПланЯШТ<>0 тогда
			ОформлениеСтроки.ДанныеСтроки.ДоляИтоговогоКПлануЯШТ = ОформлениеСтроки.ДанныеСтроки.ИтоговыйПлан * 100 / ОформлениеСтроки.ДанныеСтроки.ПланЯШТ;
		КонецЕсли;
		Если окр(ОформлениеСтроки.ДанныеСтроки.ПланПоМенеджерам,2)<>Окр(ОформлениеСтроки.ДанныеСтроки.ИтоговыйПлан,2) и ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ИтоговыйПлан) тогда
			ОформлениеСтроки.ячейки.ИтоговыйПлан.ЦветФона = WebЦвета.Красный;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель8кнУтвердитьНО2(Кнопка)
	Ответ = Вопрос("Записать планирование?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да тогда
		ЗаписатьПланыНО(ЭтоМенеджер);
		
		
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	МесячныйПланДепортаментаПродаж.МесяцПланирования,
		|	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
		|	МесячныйПланДепортаментаПродаж.Менеджер,
		|	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
		|	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
		|	МесячныйПланДепортаментаПродаж.Производитель
		|ИЗ
		|	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		|ГДЕ
		|	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
		|	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправленияПродаж)
		|	И (МесячныйПланДепортаментаПродаж.Вес > 0
		|			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
		|			ИЛИ МесячныйПланДепортаментаПродаж.Отслеживать)";
		Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
		Запрос.УстановитьПараметр("НаправленияПродаж",НаправлениеПродаж);
		Рез = Запрос.Выполнить().Выбрать();
		Пока Рез.Следующий() Цикл
			МенеджерЗаписи = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Рез);
			МенеджерЗаписи.Прочитать();
			МенеджерЗаписи.ДатаУтвержденияНО = ТекущаяДата();
			МенеджерЗаписи.Записать();
		КонецЦикла;
		
		//Создать Задачи Менеджерам
		СоздатьЗадачиОбУтвержденииНО(НаправлениеПродаж);
	КонецЕсли;
КонецПроцедуры

Процедура СоздатьЗадачиОбУтвержденииНО(Направления)
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	Пользователи.Ссылка КАК Менеджер
	             |ИЗ
	             |	Справочник.Пользователи КАК Пользователи
	             |ГДЕ
	             |	Пользователи.НаправлениеПродаж В(&НаправленияПродаж)
	             |	И Пользователи.ПометкаУдаления = ЛОЖЬ
	             |	И Пользователи.Заблокирован = ЛОЖЬ";
				 Запрос.УстановитьПараметр("НаправленияПродаж",Направления);
	ТабМенеджеров = Запрос.Выполнить().Выгрузить();
	Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
	Задача.Дата = ТекущаяДата();
	//Задача.Исполнитель
	Задача.Наименование = "Утверждены планы начальником отдела";
	Задача.Описание = "Утверждены планы начальником отдела";
	Задача.Оповещение = Истина;
	
	Для каждого стр из ТабМенеджеров цикл
		Задача2 = Задача.Скопировать();
		Задача2.Исполнитель = стр.Менеджер;
		Задача2.Дата = ТекущаяДата();
		Задача2.Записать();
		Сообщить("Создана задача для пользователя: "+стр.Менеджер);
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель10кнУтвердитьСерков(Кнопка)
	Ответ = Вопрос("Записать планирование?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да тогда
		 //КоманднаяПанель10ЗаполнитьСерков(неопределено);
		 КнопкаВыполнитьНажатие(неопределено);
		
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	               |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	               |	МесячныйПланДепортаментаПродаж.Менеджер,
	               |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	               |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
	               |	МесячныйПланДепортаментаПродаж.Производитель
	               |ИЗ
	               |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	               |ГДЕ
	               |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	               |	И 99 = 99
	               |	И (МесячныйПланДепортаментаПродаж.Вес > 0
	               |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
	               |			ИЛИ МесячныйПланДепортаментаПродаж.Отслеживать)";
				   Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
				   Запрос.УстановитьПараметр("НаправленияПродаж",НаправлениеПродаж);
				   Если НаправлениеПродаж.Количество()>0 тогда
					   Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправленияПродаж)");
				   КонецЕсли;
				   
				   Рез = Запрос.Выполнить().Выбрать();
				   Пока Рез.Следующий() Цикл
					   МенеджерЗаписи = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
					   ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Рез);
					   МенеджерЗаписи.Прочитать();
					   МенеджерЗаписи.ДатаУтвержденияРДП = ТекущаяДата();
					   МенеджерЗаписи.Записать();
				   КонецЦикла;
// создать задачи НО
   СоздатьЗадачиНООбУтвержденииПланаСерковым();
   КонецЕсли;
КонецПроцедуры

Процедура СоздатьЗадачиНООбУтвержденииПланаСерковым()
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	А.Менеджер
	               |ИЗ
	               |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		МесячныйПланДепортаментаПродаж.НаправлениеПродаж.ОтветственныйЗаПланирование КАК Менеджер
	               |	ИЗ
	               |		РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	               |	ГДЕ
	               |		МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		МесячныйПланДепортаментаПродаж.НаправлениеПродаж.Руководитель
	               |	ИЗ
	               |		РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	               |	ГДЕ
	               |		МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования) КАК А";
				   Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	               ТабМенеджеров = Запрос.Выполнить().Выгрузить();
	Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
	Задача.Дата = ТекущаяДата();
	//Задача.Исполнитель
	Задача.Наименование = "Утверждены планы РДП";
	Задача.Описание = "Утверждены планы РДП";
	Задача.Оповещение = Истина;
	
	Для каждого стр из ТабМенеджеров цикл
		Задача2 = Задача.Скопировать();
		Задача2.Исполнитель = стр.Менеджер;
		Задача2.Дата = ТекущаяДата();
		Задача2.СрокИсполнения = ТекущаяДата()+120;
		Задача2.СрокОповещения = ТекущаяДата()+60;
		Задача2.Записать();
		Сообщить("Создана задача для пользователя: "+стр.Менеджер);
	КонецЦикла;
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПлан.Видимость = не ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПлан.Видимость;
	//ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПриростНО.Видимость = не ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПриростНО.Видимость;
	//ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПланНО.Видимость = не ЭлементыФормы.ПланированиеСерковПодразделения.ПоказательПланНО.ПоказательПлан.Видимость;
	ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПриростПредварительного.Видимость = не ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПриростПредварительного.Видимость;
	ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПрошлыйМесяц.Видимость = не ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПрошлыйМесяц.Видимость;
	ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПрошлыйГод.Видимость = не ЭлементыФормы.ПланированиеСерковПодразделения.Колонки.ПоказательПрошлыйГод.Видимость;
КонецПроцедуры

Процедура кнНаУтверждениеМенеджерНажатие(Элемент)
	Ответ = Вопрос("Записать планирование?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да тогда
		ЗаписатьПланыМенеджера();
		
		Если ЗначениеЗаполнено(МенеджерП) тогда
			Запрос = новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
			               |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
			               |	МесячныйПланДепортаментаПродаж.Менеджер,
			               |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
			               |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
			               |	МесячныйПланДепортаментаПродаж.Производитель
			               |ИЗ
			               |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
			               |ГДЕ
			               |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
			               |	И МесячныйПланДепортаментаПродаж.Менеджер = &Менеджер
			               |	И МесячныйПланДепортаментаПродаж.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
			Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
			Запрос.УстановитьПараметр("Менеджер",МенеджерП);
			
			Рез = Запрос.Выполнить().Выбрать();
			Пока Рез.Следующий() Цикл
				МенеджерЗаписи = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Рез);
				МенеджерЗаписи.Прочитать();
				МенеджерЗаписи.ДатаУтвержденияМенеджером = ТекущаяДата();
				МенеджерЗаписи.Записать();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура кнЗаполнитьПоДаннымНОНажатие(Элемент)
	//ПДЗ = Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030");
	Для каждого стр из ПланОтделаРазвития цикл
		отбор2 = новый Структура("ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели",стр.ТоварнаяГруппа, стр.НоменклатурнаяГруппаПоказатели);
		НайденныеСтроки = ПланированиеСерковПодразделения.Строки.НайтиСтроки(отбор2,истина);
		ПоказательИтог = 0;
		
		Для каждого стр2 из НайденныеСтроки цикл
			ПоказательИтог = ПоказательИтог + стр2.ПоказательПланНО;
		КонецЦикла;
		
		Если стр.ТоварнаяГруппа = СпрПДЗ тогда
			Коэфф = НайденныеСтроки.Количество();
		иначе
			Коэфф = 1;
		КонецЕсли;
			
		Если не стр.СуммовоеПланирование тогда
			стр.ИтоговыйПлан = окр(ПоказательИтог / Коэфф);
		иначе
			стр.ИтоговыйПлан = ПоказательИтог / Коэфф;
		КонецЕсли;
	КонецЦикла;
	
	 ОновитьПоказателиТбНОв(ПланированиеСерковПодразделения.Строки);
 КонецПроцедуры
 
 Процедура ОновитьПоказателиТбНОв(Строки)
	 Для каждого стр из Строки цикл
		 Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
			 Если не стр.ТоварнаяГруппаСуммовоеПланирование тогда
				 стр.ПоказательИтоговыйПлан = окр(стр.ПоказательПланНО);
				 стр.КоличествоИтоговыйПлан = Окр(стр.КоличествоПланНО);
				 стр.СуммаИтоговыйПлан = окр(стр.СуммаПланНО);
			 Иначе
				 стр.ПоказательИтоговыйПлан = (стр.ПоказательПланНО);
				 стр.КоличествоИтоговыйПлан = (стр.КоличествоПланНО);
				 стр.СуммаИтоговыйПлан = стр.СуммаПланНО;
			 КонецЕсли;
		 КонецЕсли;
		 ОновитьПоказателиТбНОв(стр.Строки);
	 конецЦикла;
 КонецПроцедуры

Процедура КоманднаяПанель8кнУтвердитьМенеджерам(Кнопка)
	Ответ = Вопрос("Записать планирование?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да тогда
		ЗаписатьПланыНО(ЭтоМенеджер);
	КонецЕсли;
	//Создадим задачи менеджерам 
	//СоздатьЗадачиОбУтвержденииНО(Направления)
КонецПроцедуры

Процедура КоманднаяПанель10кнУтвердитьНО(Кнопка)
	Ответ = Вопрос("Записать планирование?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да тогда
		 КоманднаяПанель10ЗаполнитьСерков(неопределено);
	 КонецЕсли;
	 // создать задачи НО
   //СоздатьЗадачиНООбУтвержденииПланаСерковым();
КонецПроцедуры

Процедура ПланОтделаРазвитияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ЗначениеЗаполнено(ДанныеСтроки.товарнаягруппа) тогда
		Если ДанныеСтроки.ТоварнаяГруппа<>СпрПДЗ тогда
			Если ДанныеСтроки.ФактДП<>0 тогда
				ДанныеСтроки.ПриростИтогового = (ДанныеСтроки.ИтоговыйПлан - ДанныеСтроки.ФактДП) * 100 / ДанныеСтроки.ФактДП;
			КонецЕсли;
		Иначе
			ДанныеСтроки.ПредварительныйПлан = 7;
			ДанныеСтроки.ПланПоМенеджерам = 7;
			ДанныеСтроки.ИтоговыйПлан = 7;
			ДанныеСтроки.ПриростПредварительного = 0;
			ДанныеСтроки.ПриростПоНаправлениям = 0;
			ДанныеСтроки.ПриростИтогового = 0;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеМенеджераТоварнаяГруппаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Если ЗначениеЗаполнено(Элемент.Значение) тогда
		Если ТипЗнч(Элемент.Значение) = тип("СправочникСсылка.ТоварныеГруппыДляПланирования") тогда
			Запрос = новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
			|ИЗ
			|	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
			|ГДЕ
			|	ТоварныеГруппыДляПланированияСостав.Ссылка В ИЕРАРХИИ(&СсылкаТГ)";
			Запрос.УстановитьПараметр("СсылкаТГ",Элемент.Значение);
			Рез = Запрос.Выполнить().Выбрать();
			
			СписНГ = новый СписокЗначений;
			
			Пока Рез.Следующий() Цикл
				СписНГ.Добавить(Рез.НоменклатурнаяГруппа);
			КонецЦикла;
			
			
			отчет = Отчеты.Продажи.Создать();
			отчет.ЗаполнитьНачальныеНастройки();
			отчет.ОбщийОтчет.ДатаНач  = ДобавитьМесяц(НачалоПериода,-12);
			отчет.ОбщийОтчет.ДатаКон  = ДобавитьМесяц(КонецПериода,-12);
			отчет.ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке  = Истина;
			построитель = отчет.ПолучитьПостроительОтчета();
			//ИзмеренияПостроителяОтчета
			
			Построитель.ИзмеренияСтроки.очистить();
			
			//Построитель.ИзмеренияСтроки.Добавить("Покупатель");
			//Построитель.ИзмеренияСтроки.Добавить("ЗаказПокупателя");
			
			Построитель.ВыбранныеПоля.Очистить();
			
			Построитель.ВыбранныеПоля.Добавить("Покупатель");
			Построитель.ВыбранныеПоля.Добавить("Статус");
			
			построитель.Отбор.Добавить("ДоговорКонтрагента.ОтветственноеЛицо");
			построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицо.ВидСравнения = ВидСравнения.Равно;
			построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицо.Значение = МенеджерП;
			построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицо.Использование = Истина;
			
			построитель.Отбор.Добавить("Номенклатура.НоменклатурнаяГруппа");
			построитель.Отбор.НоменклатураНоменклатурнаяГруппа.ВидСравнения = ВидСравнения.ВСписке;
			построитель.Отбор.НоменклатураНоменклатурнаяГруппа.Значение = СписНГ;
			построитель.Отбор.НоменклатураНоменклатурнаяГруппа.Использование = Истина;
			
			
			ф = отчет.ПолучитьОсновнуюФорму();
			ф.ОбновитьОтчет();
			ф.открыть();
			ф.ДатаНач = ДобавитьМесяц(НачалоПериода,-12);
			ф.ДатаКон  = ДобавитьМесяц(КонецПериода,-12);
			
		ИначеЕсли Элемент.Значение = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВРублях или Элемент.Значение = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВШтуках тогда 				 
			отчет = Отчеты.Продажи.Создать();
			отчет.ЗаполнитьНачальныеНастройки();
			отчет.ОбщийОтчет.ДатаНач  = ДобавитьМесяц(НачалоПериода,-12);
			отчет.ОбщийОтчет.ДатаКон  = ДобавитьМесяц(КонецПериода,-12);
			отчет.ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке  = Истина;
			построитель = отчет.ПолучитьПостроительОтчета();
			//ИзмеренияПостроителяОтчета
			
			Построитель.ИзмеренияСтроки.очистить();
			
			//Построитель.ИзмеренияСтроки.Добавить("Покупатель");

			//Построитель.ИзмеренияСтроки.Добавить("ЗаказПокупателя");
			
			Построитель.ВыбранныеПоля.Очистить();
			
			Построитель.ВыбранныеПоля.Добавить("Покупатель");
			Построитель.ВыбранныеПоля.Добавить("Статус");

			
			построитель.Отбор.Добавить("ДоговорКонтрагента.ОтветственноеЛицо");
			построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицо.ВидСравнения = ВидСравнения.Равно;
			построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицо.Значение = МенеджерП;
			построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицо.Использование = Истина;
			
			ф = отчет.ПолучитьОсновнуюФорму();
			ф.ОбновитьОтчет();
			ф.открыть();
			ф.ДатаНач = ДобавитьМесяц(НачалоПериода,-12);
			ф.ДатаКон  = ДобавитьМесяц(КонецПериода,-12);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПланированиеНООТРДПНесколькоПодразделений2ТоварнаяГруппаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Если ЗначениеЗаполнено(Элемент.Значение) тогда
		Если ТипЗнч(Элемент.Значение) = тип("СправочникСсылка.ТоварныеГруппыДляПланирования") тогда
			Запрос = новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
			|ИЗ
			|	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
			|ГДЕ
			|	ТоварныеГруппыДляПланированияСостав.Ссылка В ИЕРАРХИИ(&СсылкаТГ)";
			Запрос.УстановитьПараметр("СсылкаТГ",Элемент.Значение);
			Рез = Запрос.Выполнить().Выбрать();
			
			СписНГ = новый СписокЗначений;
			
			Пока Рез.Следующий() Цикл
				СписНГ.Добавить(Рез.НоменклатурнаяГруппа);
			КонецЦикла;
			
			
			отчет = Отчеты.Продажи.Создать();
			отчет.ЗаполнитьНачальныеНастройки();
			отчет.ОбщийОтчет.ДатаНач  = ДобавитьМесяц(НачалоПериода,-12);
			отчет.ОбщийОтчет.ДатаКон  = ДобавитьМесяц(КонецПериода,-12);
			отчет.ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке  = Истина;
			построитель = отчет.ПолучитьПостроительОтчета();
			//ИзмеренияПостроителяОтчета
			
			Построитель.ИзмеренияСтроки.очистить();
			
			Построитель.ИзмеренияСтроки.Добавить("ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж");
			Построитель.ИзмеренияСтроки.Добавить("ДоговорКонтрагента.ОтветственноеЛицо");

			//Построитель.ИзмеренияСтроки.Добавить("ЗаказПокупателя");
			
			Построитель.ВыбранныеПоля.Очистить();
			Построитель.ВыбранныеПоля.Добавить("Покупатель");
			Построитель.ВыбранныеПоля.Добавить("Статус");
			
			Если НаправлениеПродаж.Количество()>0 тогда
				построитель.Отбор.Добавить("ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж");
				//построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.ВидСравнения = ВидСравнения.ВСписке;
				//построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Значение = НаправлениеПродаж;
				//построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Использование = Истина;
				
				построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.ВидСравнения = ВидСравнения.Равно;
				построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Значение = ТекущееНаправлениеПродаж;
				построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Использование = Истина;
			КонецЕсли;
			
			построитель.Отбор.Добавить("Номенклатура.НоменклатурнаяГруппа");
			построитель.Отбор.НоменклатураНоменклатурнаяГруппа.ВидСравнения = ВидСравнения.ВСписке;
			построитель.Отбор.НоменклатураНоменклатурнаяГруппа.Значение = СписНГ;
			построитель.Отбор.НоменклатураНоменклатурнаяГруппа.Использование = Истина;
			
			
			ф = отчет.ПолучитьОсновнуюФорму();
			ф.ОбновитьОтчет();
			ф.открыть();
			ф.ДатаНач = ДобавитьМесяц(НачалоПериода,-12);
			ф.ДатаКон  = ДобавитьМесяц(КонецПериода,-12);

			
		ИначеЕсли Элемент.Значение = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВРублях или Элемент.Значение = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВШтуках тогда 				 
			отчет = Отчеты.Продажи.Создать();
			отчет.ЗаполнитьНачальныеНастройки();
			отчет.ОбщийОтчет.ДатаНач  = ДобавитьМесяц(НачалоПериода,-12);
			отчет.ОбщийОтчет.ДатаКон  = ДобавитьМесяц(КонецПериода,-12);
			отчет.ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке  = Истина;
			построитель = отчет.ПолучитьПостроительОтчета();
			//ИзмеренияПостроителяОтчета
			
			Построитель.ИзмеренияСтроки.очистить();
			
			Построитель.ИзмеренияСтроки.Добавить("ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж");
			Построитель.ИзмеренияСтроки.Добавить("ДоговорКонтрагента.ОтветственноеЛицо");
			//Построитель.ИзмеренияСтроки.Добавить("ЗаказПокупателя");
			
			Построитель.ВыбранныеПоля.Очистить();
			Построитель.ВыбранныеПоля.Добавить("Покупатель");
			Построитель.ВыбранныеПоля.Добавить("Статус");
			
			Если НаправлениеПродаж.Количество()>0 тогда
				построитель.Отбор.Добавить("ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж");
				//построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.ВидСравнения = ВидСравнения.ВСписке;
				//построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Значение = НаправлениеПродаж;
				//построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Использование = Истина;
				построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.ВидСравнения = ВидСравнения.Равно;
				построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Значение = ТекущееНаправлениеПродаж;
				построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Использование = Истина;

			КонецЕсли;
			
			ф = отчет.ПолучитьОсновнуюФорму();
			ф.ОбновитьОтчет();
			ф.открыть();
			ф.ДатаНач = ДобавитьМесяц(НачалоПериода,-12);
			ф.ДатаКон  = ДобавитьМесяц(КонецПериода,-12);

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамНсколькоПодразделений2ОбработкаЗаписиНовогоОбъекта(Элемент, Объект, СтандартнаяОбработка)
	к=1;
КонецПроцедуры

Процедура ПериодРегистрацииПриИзменении(Элемент)
	к=1;
КонецПроцедуры

Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	к=1;
КонецПроцедуры

Процедура ПериодРегистрацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	к=1;
КонецПроцедуры

Процедура КоманднаяПанель9РаспределитьПланСерковаПоМенеджерам(Кнопка)
	СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
	ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеНОПоМенеджерамНсколькоПодразделений2);
	
	РаспределитьПланСеркова(ПланированиеНООТРДПНесколькоПодразделений2.Строки);
	
	СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
	ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеНОПоМенеджерамНсколькоПодразделений2);
	
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2;
	Если ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Значение.Строки.Количество()>0 тогда
		ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Развернуть(ЭлементыФормы.ПланированиеНОПоМенеджерамНсколькоПодразделений2.Значение.Строки[0],истина);
	КонецЕсли;
	
КонецПроцедуры

процедура РаспределитьПланСеркова(строки)
	Для каждого стр из Строки цикл
		
		//стр.КоличествоПланМенеджер = стр.КоличествоИтоговыйПлан;
		//стр.СуммаПланМенеджер      = стр.СуммаИтоговыйПлан;
		Если стр.ТоварнаяГруппа <> СпрПДЗ тогда	
			РаспределитьПланСерковаПоМенеджерам(стр);
			
			стр.ПоказательПланыМенеджеров = стр.ПоказательИтоговыйПлан;
			
			СтароеНаправлениеПродаж = ТекущееНаправлениеПродаж;
			ТекущееНаправлениеПродаж = стр.НаправлениеПродаж;
			ОтобратьПоМенеджерам2(ТекущееНаправлениеПродаж,ПланированиеНОПоМенеджерамНсколькоПодразделений2);
			
			
			РаспределитьПланСеркова(стр.строки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура РаспределитьПланСерковаПоМенеджерам(строка)
	отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	
	Если ЗначениеЗаполнено(строка.ТоварнаяГруппа) тогда
            ЗаполнитьЗначенияСвойств(отбор,строка);
			
			НайденныеСтроки = ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки.НайтиСтроки(отбор,истина);
			//НайденныеСтроки = ПланыПоВсемМенеджерам.Строки.НайтиСтроки(отбор,истина);
			ПоказательПланНО = 0;
			Для каждого стр из НайденныеСтроки цикл
				ПоказательПланНО = ПоказательПланНО + стр.ПоказательПланНО;
			КонецЦикла;
			//Коэфф = ?(строка.ПоказательИтоговыйПлан = 0,1,строка.ПоказательПланНО/строка.ПоказательИтоговыйПлан);
			Коэфф = ?(строка.ПоказательИтоговыйПлан = 0,1,ПоказательПланНО/строка.ПоказательИтоговыйПлан);
            Коэфф = ?(Коэфф = 0, 1, Коэфф);
			
			Для каждого стр из НайденныеСтроки цикл
				//Коэфф = ?(строка.ПоказательИтоговыйПлан = 0,1,строка.ПоказательПланыМенеджеров/строка.ПоказательИтоговыйПлан);
				//Коэфф = ?(строка.ПоказательИтоговыйПлан = 0,1,строка.ПоказательПланНО/строка.ПоказательИтоговыйПлан);
				
				//Коэфф = ?(строка.КоличествоИтоговыйПлан = 0,1,строка.КоличествоПланыМенеджеров/строка.КоличествоИтоговыйПлан);
				//стр.КоличествоПланМенеджер = стр.КоличествоПланМенеджер/Коэфф;
				стр.КоличествоПланМенеджер = стр.КоличествоПланНО/Коэфф;
				
				//Коэфф = ?(строка.СуммаИтоговыйПлан = 0,1,строка.СуммаПланНО/строка.СуммаИтоговыйПлан);
				//Коэфф = ?(строка.СуммаИтоговыйПлан = 0,1,строка.СуммаПланыМенеджеров/строка.СуммаИтоговыйПлан);
				//стр.СуммаПланМенеджер = стр.СуммаПланМенеджер/Коэфф;
				стр.СуммаПланМенеджер = стр.СуммаПланНО/Коэфф;
				
				//Коэфф = ?(строка.ПоказательИтоговыйПлан = 0,1,строка.ПоказательПланыМенеджеров/строка.ПоказательИтоговыйПлан);
				//Коэфф = строка.ПоказательПланНО/строка.ПоказательИтоговыйПлан;
				//стр.ПоказательПланМенеджер = стр.ПоказательПланНО/Коэфф;
				//стр.ПоказательПланМенеджер = стр.ПоказательПланМенеджер/Коэфф;
				стр.ПоказательПланМенеджер = стр.ПоказательПланНО/Коэфф;
			КонецЦикла;
		КонецЕсли;
		//РаспределитьПланСерковаПоМенеджерам(стр.строки,ПланНО,ПланСеркова);
КонецПроцедуры

Процедура ПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.ПланированиеНО2  тогда
		ЭлементыФормы.Панель.Страницы.ПланированиеСерков.Доступность = ложь;
	ИначеЕсли ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.ПланированиеСерков тогда
		ЭлементыФормы.Панель.Страницы.ПланированиеНО2.Доступность = ложь;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьНачалоПериода6МесЭтогоГода(НП)
	Возврат ДобавитьМесяц(НП,-7);
КонецФункции
Функция ПолучитьКонецПериода6МесЭтогоГода(НП)
	Возврат КонецМесяца(ДобавитьМесяц(НП,-1));
КонецФункции

Функция ПолучитьНачалоПериода6МесПрошлогоГода(НП)
	Возврат ДобавитьМесяц(ПолучитьНачалоПериода6МесЭтогоГода(НП),-12);
КонецФункции
Функция ПолучитьКонецПериода6МесПрошлогоГода(НП)
	Возврат ДобавитьМесяц(ПолучитьКонецПериода6МесЭтогоГода(НП),-12);
КонецФункции

Функция ПолучитьНачалоПериодаПериодПланированияЭтогоГода(НП)
	Возврат НачалоМесяца(НП);
КонецФункции

Функция ПолучитьКонецПериодаПериодПланированияЭтогоГода()
	Возврат КонецМесяца(ДобавитьМесяц(НачалоПериода,-1));
КонецФункции

Функция ПолучитьНачалоПериодаПериодПланированияПрошлогоГода(НП)
	Возврат НачалоМесяца(ДобавитьМесяц(НП,-12));
КонецФункции

Функция ПолучитьКонецПериодаПериодПланированияПрошлогоГода()
	Возврат КонецМесяца(ДобавитьМесяц(ПолучитьКонецПериодаПериодПланированияЭтогоГода(),-12));
КонецФункции

Процедура ПланированиеСерковПодразделенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	СформироватьГруппировкуПоТоварнымГруппам(ПланированиеСерковПодразделения,ПланированиеСерковТоварныеГруппы,1);
КонецПроцедуры

Процедура ПланированиеСерковТоварныеГруппыПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.НаправлениеПродаж) и  ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) тогда
			//ОформлениеСтроки.ДанныеСтроки.Утвержден = Истина Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.БледноСиреневый;
			Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ДатаУтвержденияНО) тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗеленый;
			КонецЕсли;
			Для каждого яч из ОформлениеСтроки.ячейки	Цикл
				Яч.ТолькоПросмотр = Истина;
				Яч.Шрифт =  Новый Шрифт(,,Истина,,);
				
			конецЦикла;
		конецЕсли;	
	конецЦикла;
	
КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамТоварныеГруппыПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.Менеджер) и  ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) тогда
			//ОформлениеСтроки.ДанныеСтроки.Утвержден = Истина Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗеленый;
			Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.Менеджер) и не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ТоварнаяГруппа) и не ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ДатаУтвержденияМенеджером) тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.БледноСиреневый;
			КонецЕсли;	
			Для каждого яч из ОформлениеСтроки.ячейки	Цикл
				Яч.ТолькоПросмотр = Истина;
				Яч.Шрифт =  Новый Шрифт(,,Истина,,);
			конецЦикла;
		конецЕсли;	
	конецЦикла;
	
КонецПроцедуры

Процедура ПланированиеСерковТоварныеГруппыПоказательПланНОПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.НаправлениеПродаж) 
		и ЗначениеЗаполнено(ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ТоварнаяГруппа) тогда
		отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
		отбор.НаправлениеПродаж = ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.НаправлениеПродаж;
		отбор.ТоварнаяГруппа = ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ТоварнаяГруппа;
		отбор.НоменклатурнаяГруппаПоказатели = ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.НоменклатурнаяГруппаПоказатели;
		
		найденныеСтроки = ПланированиеСерковПодразделения.Строки.НайтиСтроки(отбор,истина);
		для каждого найденнаСтрока из найденныеСтроки цикл
			найденнаСтрока.ПоказательПланНО = Элемент.Значение;
			Если найденнаСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
				найденнаСтрока.СуммаПланНО = найденнаСтрока.ПоказательПланНО;
			Иначе
				найденнаСтрока.КоличествоПланНО = найденнаСтрока.ПоказательПланНО;
			КонецЕсли;
		КонецЦикла;
		
		ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПриростНО = ?(ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод>0,(ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПоказательПланНО - ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод)/ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод * 100,0);
	КонецЕсли;
	//ПланированиеСерковПодразделения
КонецПроцедуры


Процедура ПланированиеСерковТоварныеГруппыПоказательИтоговыйПланПриИзменении(Элемент)
	//ПоказательИтоговыйПлан
	
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.НаправлениеПродаж) 
		и ЗначениеЗаполнено(ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ТоварнаяГруппа) тогда
			отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
			отбор.НаправлениеПродаж = ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.НаправлениеПродаж;
			отбор.ТоварнаяГруппа = ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ТоварнаяГруппа;
			отбор.НоменклатурнаяГруппаПоказатели = ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.НоменклатурнаяГруппаПоказатели;
			
			найденныеСтроки = ПланированиеСерковПодразделения.Строки.НайтиСтроки(отбор,истина);
			для каждого найденнаяСтрока из найденныеСтроки цикл
				 найденнаяСтрока.ПоказательИтоговыйПлан = Элемент.Значение;
				 Если найденнаяСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
					 найденнаяСтрока.СуммаИтоговыйПлан = найденнаяСтрока.ПоказательИтоговыйПлан;
				 Иначе
					 найденнаяСтрока.КоличествоИтоговыйПлан = найденнаяСтрока.ПоказательИтоговыйПлан;
				 КонецЕсли;
				 //ПересчитатьОбщиеПланыПоСтроке(ЭлементыФормы.ПланированиеСерковПодразделения.ТекущаяСтрока,ПланированиеСерковПодразделения,ПланОтделаРазвития,"ПоказательИтоговыйПлан","СуммаИтоговыйПлан","КоличествоИтоговыйПлан"); 
				 ПересчитатьОбщиеПланыПоСтрокеСерков(найденнаяСтрока,ПланированиеСерковПодразделения,ПланОтделаРазвития);
			 КонецЦикла;
			 ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПриростИтог = ?(ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод>0,(ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПоказательИтоговыйПлан - ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод)/ЭлементыФормы.ПланированиеСерковТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод * 100,0);
	КонецЕсли;

КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамТоварныеГруппыПоказательПланНОПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.Менеджер) 
		и ЗначениеЗаполнено(ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ТоварнаяГруппа) тогда
		отбор = новый Структура("Менеджер,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
		отбор.Менеджер = ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.Менеджер;
		отбор.ТоварнаяГруппа = ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ТоварнаяГруппа;
		отбор.НоменклатурнаяГруппаПоказатели = ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.НоменклатурнаяГруппаПоказатели;
		
		найденныеСтроки = ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки.НайтиСтроки(отбор,истина);
		для каждого найденнаСтрока из найденныеСтроки цикл
			найденнаСтрока.ПоказательПланНО = Элемент.Значение;
			Если найденнаСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
				найденнаСтрока.СуммаПланНО = найденнаСтрока.ПоказательПланНО;
			Иначе
				найденнаСтрока.КоличествоПланНО = найденнаСтрока.ПоказательПланНО;
			КонецЕсли;
			
			ПересчитатьОбщиеПланыПоСтроке(найденнаСтрока,ПланированиеНОПоМенеджерамНсколькоПодразделений2,ПланированиеНООТРДПНесколькоПодразделений2,"ПоказательПланНО","СуммаПланНО","КоличествоПланНО");
		КонецЦикла;
		
		ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПриростНО = ?(ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод>0,(ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПоказательПланНО - ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод)/ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод * 100,0);
		
	КонецЕсли;

КонецПроцедуры

Процедура ПланированиеНОПоМенеджерамТоварныеГруппыПоказательПланМенеджерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.Менеджер) 
		и ЗначениеЗаполнено(ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ТоварнаяГруппа) тогда
		отбор = новый Структура("Менеджер,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
		отбор.Менеджер = ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.Менеджер;
		отбор.ТоварнаяГруппа = ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ТоварнаяГруппа;
		отбор.НоменклатурнаяГруппаПоказатели = ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.НоменклатурнаяГруппаПоказатели;
		
		найденныеСтроки = ПланированиеНОПоМенеджерамНсколькоПодразделений2.Строки.НайтиСтроки(отбор,истина);
		для каждого найденнаСтрока из найденныеСтроки цикл
			найденнаСтрока.ПоказательПланМенеджер = Элемент.Значение;
			Если найденнаСтрока.ТоварнаяГруппа.СуммовоеПланирование тогда
				найденнаСтрока.СуммаПланМенеджер = найденнаСтрока.ПоказательПланМенеджер;
			Иначе
				найденнаСтрока.КоличествоПланМенеджер = найденнаСтрока.ПоказательПланМенеджер;
			КонецЕсли;
			
			//ПересчитатьОбщиеПланыПоСтроке(найденнаСтрока,ПланированиеНОПоМенеджерамНсколькоПодразделений2,ПланированиеНООТРДПНесколькоПодразделений2,"ПоказательПланыМенеджеров","СуммаПланыМенеджеров","КоличествоПланыМенеджеров");
		КонецЦикла;
		
		ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПриростМенеджер = ?(ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод>0,(ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПоказательПланМенеджер - ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод)/ЭлементыФормы.ПланированиеНОПоМенеджерамТоварныеГруппы.ТекущиеДанные.ПоказательПрошлыйГод * 100,0);
		
	КонецЕсли;
КонецПроцедуры



СписокИсключаемыхКонтрагентов = новый СписокЗначений;
СписокИсключаемыхКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001549"));  //ШинТрейд (Питер)
СписокИсключаемыхКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000382"));
СписокИсключаемыхКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94247"));  //*** 2016.09 Розничный покупатель ДПД
СписокИсключаемыхКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94143"));  //*** 2016.09 Покупатель

СпрПДЗ = Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030");