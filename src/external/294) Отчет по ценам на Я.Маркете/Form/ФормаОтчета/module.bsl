Перем УдалятьВременныеФайлы;
Перем НастройкиПредложенияПоМоделям;
Процедура ПодготовитьЗаголовокHTTP(Заголовок)
	Заголовок.Вставить("Authorization", "OAuth oauth_token=9ba6c7880b69403e8d03560e2f36d5ac,oauth_login=kolesoyst,oauth_client_id=01462e5299a541b78d681cb7d8227e7b");
	Заголовок.Вставить("Content-Type", "application/xml");
	Заголовок.Вставить("Accept-Language", "ru");
	Заголовок.Вставить("Accept-Charset", "utf-8");
	Заголовок.Вставить("Content-Language", "ru");
	Заголовок.Вставить("Content-Charset", "utf-8");
КонецПроцедуры

Процедура кнОбновитьКампанииНажатие(Элемент)
	Сервер = "api.partner.market.yandex.ru";
	//Запрос кампаний
	Ресурс = "/v2/campaigns";
	HTTP =  Новый HTTPСоединение(Сервер,,,,,истина);
	ФайлРезультата = ПолучитьИмяВременногоФайла("xml");
	ЗаголовокHTTP = Новый Соответствие();
	ПодготовитьЗаголовокHTTP(ЗаголовокHTTP);
	
	ОтветHTTP=HTTP.Получить(Ресурс, ФайлРезультата, ЗаголовокHTTP);
	ЭтаФорма.Заголовок="Я.Маркет"+" (Лимит запросов: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Limit")+
			", остаток: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Remaining")+
			", обнуление лимита: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Until")+")";

	//структура http://api.yandex.ru/market/partner/doc/dg/reference/get-campaigns.xml
	СписокКампаний=новый СписокЗначений;
	тз=новый ТаблицаЗначений;
	тз.Колонки.Добавить("domain");
	тз.Колонки.Добавить("id");
	тз.Колонки.Добавить("state");
	
	ФайлXML = Новый ЧтениеXML;
	ФайлXML.ОткрытьФайл(ФайлРезультата);
	//ФайлXML.ОткрытьФайл("C:\1c\tt.xml");
	Запись=новый Структура("domain,id,state");
	
	Пока ФайлXML.Прочитать() Цикл
		Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ФайлXML.Имя="campaign" тогда
				Запись.domain="";
				Запись.id="";
				Запись.state="";
				Пока ФайлXML.ПрочитатьАтрибут() Цикл
					Если  ФайлXML.Имя="domain" тогда
						Запись.domain=ФайлXML.Значение;
					ИначеЕсли ФайлXML.Имя="id" тогда
						Запись.id=ФайлXML.Значение;
					ИначеЕсли ФайлXML.Имя="state" тогда
						Запись.state=ФайлXML.Значение;
					КонецЕсли
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;    
		
		Если ФайлXML.ТипУзла = ТипУзлаXML.КонецЭлемента и ФайлXML.Имя="campaign" Тогда
			стр=ТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(стр,Запись);
			СписокКампаний.Добавить(Запись.id,Запись.domain);
		КонецЕсли;    
	КонецЦикла;
	ФайлXML.Закрыть();
	
	Кампании=тз;
	ЭлементыФормы.Кампании.СоздатьКолонки();
	ЭлементыФормы.СписокКампаний.СписокВыбора=СписокКампаний;
	ЗаполнитьСписокРегионов();
	Если УдалятьВременныеФайлы тогда
		УдалитьФайлы(ФайлРезультата);
	КонецЕсли;	
КонецПроцедуры

Процедура кнПолучитьПредложенияНажатие(Элемент)
	ТоварныеПредложения.Очистить();
	Если СокрЛП(ЭлементыФормы.СписокКампаний.Значение)<>"" тогда
		Сервер = "api.partner.market.yandex.ru";
		//Запрос Товарные предложения кампании
		Ресурс = "/v2/campaigns/"+ЭлементыФормы.СписокКампаний.Значение+"/offers.xml?pageSize=1000";
		
		HTTP =  Новый HTTPСоединение(Сервер,,,,,истина);
		ФайлРезультата = ПолучитьИмяВременногоФайла("xml");
		ЗаголовокHTTP = Новый Соответствие();
		ПодготовитьЗаголовокHTTP(ЗаголовокHTTP);
		
		Попытка
			ОтветHTTP=HTTP.Получить(Ресурс, ФайлРезультата, ЗаголовокHTTP);
			
			тз=новый ТаблицаЗначений;
			тз.Колонки.Добавить("name",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(220)));
			тз.Колонки.Добавить("id",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(20)));
			тз.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
			тз.Колонки.Добавить("model_id",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(20)));
			тз.Колонки.Добавить("price",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(10,2)));
			тз.Колонки.Добавить("currency",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(5)));
			тз.Колонки.Добавить("bid",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(10,2)));
			тз.Колонки.Добавить("cbid",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(10,2)));
			тз.Очистить();
			
			ФайлXML = Новый ЧтениеXML;
			ФайлXML.ОткрытьФайл(ФайлРезультата);
			//ФайлXML.ОткрытьФайл("C:\1c\tt.xml");
			
			Запись=новый Структура("name,id,model_id,price,currency,bid,cbid");
			
			Пока ФайлXML.Прочитать() Цикл
				Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
					Если ФайлXML.Имя="pager" тогда
						ВсегоСтраниц=Число(ФайлXML.ПолучитьАтрибут("pages-count"));
					иначеЕсли ФайлXML.Имя="offer" тогда
						Запись.id=ФайлXML.ПолучитьАтрибут("id");
						Запись.model_id=ФайлXML.ПолучитьАтрибут("model-id");
						Запись.price=ФайлXML.ПолучитьАтрибут("price");
						Запись.currency=ФайлXML.ПолучитьАтрибут("currency");
						Запись.bid=ФайлXML.ПолучитьАтрибут("bid");
						Запись.cbid=ФайлXML.ПолучитьАтрибут("cbid");
					иначеЕсли ФайлXML.Имя="name"  тогда
						ФайлXML.Прочитать();
						Запись.name=ФайлXML.Значение;
					КонецЕсли;
				КонецЕсли;    
				
				Если ФайлXML.ТипУзла = ТипУзлаXML.КонецЭлемента и ФайлXML.Имя="offer" Тогда
					стр=ТЗ.Добавить();
					ЗаполнитьЗначенияСвойств(стр,Запись);
				КонецЕсли;    
			КонецЦикла;    
			ФайлXML.Закрыть();
			Для КолСтраниц=2 по ВсегоСтраниц цикл
				Ресурс = "/v2/campaigns/"+ЭлементыФормы.СписокКампаний.Значение+"/offers.xml?pageSize=1000&page="+КолСтраниц;
				HTTP =  Новый HTTPСоединение(Сервер,,,,,истина);
				ФайлРезультата = ПолучитьИмяВременногоФайла("xml");
				ЗаголовокHTTP = Новый Соответствие();
				ПодготовитьЗаголовокHTTP(ЗаголовокHTTP);
				Попытка
					ОтветHTTP=HTTP.Получить(Ресурс, ФайлРезультата, ЗаголовокHTTP);
					
					ФайлXML = Новый ЧтениеXML;
					ФайлXML.ОткрытьФайл(ФайлРезультата);
					Пока ФайлXML.Прочитать() Цикл
						Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
							Если ФайлXML.Имя="pager" тогда
								ВсегоСтраниц=Число(ФайлXML.ПолучитьАтрибут("pages-count"));
							иначеЕсли ФайлXML.Имя="offer" тогда
								Запись.id=ФайлXML.ПолучитьАтрибут("id");
								Запись.model_id=ФайлXML.ПолучитьАтрибут("model-id");
								Запись.price=ФайлXML.ПолучитьАтрибут("price");
								Запись.currency=ФайлXML.ПолучитьАтрибут("currency");
								Запись.bid=ФайлXML.ПолучитьАтрибут("bid");
								Запись.cbid=ФайлXML.ПолучитьАтрибут("cbid");
							иначеЕсли ФайлXML.Имя="name"  тогда
								ФайлXML.Прочитать();
								Запись.name=ФайлXML.Значение;
							КонецЕсли;
						КонецЕсли;    
						
						Если ФайлXML.ТипУзла = ТипУзлаXML.КонецЭлемента и ФайлXML.Имя="offer" Тогда
							стр=ТЗ.Добавить();
							ЗаполнитьЗначенияСвойств(стр,Запись);
						КонецЕсли;    
					КонецЦикла;    
					ФайлXML.Закрыть();
					Если УдалятьВременныеФайлы тогда
						УдалитьФайлы(ФайлРезультата);
					КонецЕсли;
				Исключение
					Текст=Новый текстовыйДокумент;
					Текст.Прочитать(ФайлРезультата);
					Сообщить("Произошла ошибка.");
					Сообщить(Текст.ПолучитьТекст());
				КонецПопытки;
				
			КонецЦикла;
			Запрос=новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	вт.name,
			|	вт.id,
			|	вт.Номенклатура,
			|	вт.model_id,
			|	вт.price,
			|	вт.currency,
			|	вт.bid,
			|	вт.cbid
			|ПОМЕСТИТЬ втТаблица
			|ИЗ
			|	&вт КАК вт
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СпрНоменклатура.Ссылка КАК Номенклатура,
			|	втТаблица.name,
			|	втТаблица.id,
			|	втТаблица.model_id,
			|	втТаблица.price,
			|	втТаблица.currency,
			|	втТаблица.bid,
			|	втТаблица.cbid
			|ИЗ
			|	втТаблица КАК втТаблица
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
			|		ПО втТаблица.id = СпрНоменклатура.Код";
			Запрос.УстановитьПараметр("вт",тз);
			тз=Запрос.Выполнить().Выгрузить();
			ТоварныеПредложения=тз;
			ЭлементыФормы.ТоварныеПредложения.СоздатьКолонки();
			ЭлементыФормы.ТоварныеПредложения.Колонки.name.Ширина=50;
			ЭтаФорма.Заголовок="Я.Маркет"+" (Лимит запросов: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Limit")+
			", остаток: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Remaining")+
			", обнуление лимита: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Until")+")";

		Исключение
			Текст=Новый текстовыйДокумент;
			Текст.Прочитать(ФайлРезультата);
			Сообщить("Произошла ошибка.");
			Сообщить(Текст.ПолучитьТекст());
		КонецПопытки;
		
	Иначе
		Предупреждение("Не выбран магазин.");
	КонецЕсли;
	
КонецПроцедуры

Процедура кнОбновитьРекомендованныеНажатие(Элемент)
	Если ТоварныеПредложения.Количество()=0 тогда
		//Для проверки
		//тз=новый ТаблицаЗначений;
		//тз.Колонки.Добавить("флаг");
		//тз.Колонки.Добавить("name");
		//тз.Колонки.Добавить("ТекущаяПозиция");
		//тз.Колонки.Добавить("Ставка1");
		//тз.Колонки.Добавить("Ставка2");
		//тз.Колонки.Добавить("Ставка3");
		//тз.Колонки.Добавить("Ставка4");
		//тз.Колонки.Добавить("Ставка5");
		//
		//РазобратьСтавки("c:\1c\отчетыОбработки\Яндекс.Маркет\ВозвратРекСтавок2.xml",тз);
		//РекомендованныеСтавки=тз;
		//РекомендованныеСтавки.Колонки.Вставить(2,"НоваяПозиция",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(1,0)));
		//ЭлементыФормы.РекомендованныеСтавки.СоздатьКолонки();
		//ЭлементыФормы.РекомендованныеСтавки.Колонки.НоваяПозиция.Ширина=10;
		//ЭлементыФормы.РекомендованныеСтавки.Колонки.флаг.Ширина=3;

		//ЭлементыФормы.РекомендованныеСтавки.Колонки.флаг.ДанныеФлажка="флаг";
		//ЭлементыФормы.РекомендованныеСтавки.Колонки.флаг.РежимРедактирования=РежимРедактированияКолонки.Непосредственно;
		//ЭлементыФормы.Панель2.ТекущаяСтраница=ЭлементыФормы.Панель2.Страницы.Ставки;

				//

	иначе
		тз=новый ТаблицаЗначений;
		тз.Колонки.Добавить("флаг");
		тз.Колонки.Добавить("name");
		//тз.Колонки.Добавить("Статус");
		тз.Колонки.Добавить("ТекущаяПозиция");
		тз.Колонки.Добавить("НоваяПозиция",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(1,0)));
		тз.Колонки.Добавить("Ставка1");
		тз.Колонки.Добавить("Ставка2");
		тз.Колонки.Добавить("Ставка3");
		тз.Колонки.Добавить("Ставка4");
		тз.Колонки.Добавить("Ставка5");
		
		//
		//отберем нужные нам позиции
		//выгрузим в таблицу
		ВнешниеНаборыДанных = Новый Структура;
		ВнешниеНаборыДанных.Вставить("тз", ТоварныеПредложения);
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
		Настройки = КомпоновщикНастроек.Настройки;				
		МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных,Настройки,,,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")
		);
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		
		ДанныеТЗ = Новый ТаблицаЗначений;
		ПроцессорВывода.УстановитьОбъект(ДанныеТЗ);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных); 	
		
		
		максВЗапросе=500;
		
		ЗаписьXML = Новый ЗаписьXML;
		
		ВремФайл = ПолучитьИмяВременногоФайла("xml");
		ЗаписьXML.ОткрытьФайл(ВремФайл);
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		ЗаписьXML.ЗаписатьНачалоЭлемента("offers");
		
		к=0;
		Для каждого стр из ДанныеТЗ цикл
			Если к<максВЗапросе Тогда //добавим в xml
				ЗаписьXML.ЗаписатьНачалоЭлемента("offer");
				
				ЗаписьXML.ЗаписатьАтрибут("name",стр.name);
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
			Иначе   //отправим запрос
				к=0;
				ЗаписьXML.ЗаписатьКонецЭлемента();
				ЗаписьXML.Закрыть();
				//
				//отправим Запрос и получим ответ
				Сервер = "api.partner.market.yandex.ru";
				//рекомендуемая ставка
				Ресурс = "/v2/campaigns/"+ЭлементыФормы.СписокКампаний.Значение+"/bids/recommended.xml?target=model-card";
				//Ресурс = "/v2/campaigns/"+ЭлементыФормы.СписокКампаний.Значение+"/bids/recommended.xml?target=search&positions=5";
				HTTP =  Новый HTTPСоединение(Сервер,,,,,истина);
				ФайлРезультата = ПолучитьИмяВременногоФайла("xml");
				ЗаголовокHTTP = Новый Соответствие();
				ПодготовитьЗаголовокHTTP(ЗаголовокHTTP);
				ОтветHTTP=HTTP.ОтправитьДляОбработки(ВремФайл, Ресурс, ФайлРезультата, ЗаголовокHTTP);
				
				РазобратьСтавки(ФайлРезультата,тз);
				Если УдалятьВременныеФайлы тогда
					УдалитьФайлы(ФайлРезультата);
					УдалитьФайлы(ВремФайл);
				КонецЕсли;	
				//
				
				ЗаписьXML = Новый ЗаписьXML;
				ВремФайл = ПолучитьИмяВременногоФайла("xml");
				ЗаписьXML.ОткрытьФайл(ВремФайл);
				ЗаписьXML.ЗаписатьОбъявлениеXML();
				ЗаписьXML.ЗаписатьНачалоЭлемента("offers");
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.Закрыть();
		//
		//отправим Запрос и получим ответ
		//
		Сервер = "api.partner.market.yandex.ru";
		//рекомендуемая ставка
		Ресурс = "/v2/campaigns/"+ЭлементыФормы.СписокКампаний.Значение+"/bids/recommended.xml?target=model-card";
		//Ресурс = "/v2/campaigns/"+ЭлементыФормы.СписокКампаний.Значение+"/bids/recommended.xml?target=search&positions=5";
		HTTP =  Новый HTTPСоединение(Сервер,,,,,истина);
		ФайлРезультата = ПолучитьИмяВременногоФайла("xml");
		ЗаголовокHTTP = Новый Соответствие();
		ПодготовитьЗаголовокHTTP(ЗаголовокHTTP);
		ОтветHTTP=HTTP.ОтправитьДляОбработки(ВремФайл, Ресурс, ФайлРезультата, ЗаголовокHTTP);
		
		ЭтаФорма.Заголовок="Я.Маркет"+" (Лимит запросов: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Limit")+
			", остаток: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Remaining")+
			", обнуление лимита: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Until")+")";

			
			РазобратьСтавки(ФайлРезультата,тз);
		Если УдалятьВременныеФайлы тогда
			УдалитьФайлы(ФайлРезультата);
			УдалитьФайлы(ВремФайл);
		КонецЕсли;	
		РекомендованныеСтавки=тз;
		ЭлементыФормы.РекомендованныеСтавки.СоздатьКолонки();
		ЭлементыФормы.РекомендованныеСтавки.Колонки.флаг.ДанныеФлажка="флаг";
		ЭлементыФормы.РекомендованныеСтавки.Колонки.флаг.РежимРедактирования=РежимРедактированияКолонки.Непосредственно;
		ЭлементыФормы.РекомендованныеСтавки.Колонки.флаг.Ширина=5;
		ЭлементыФормы.РекомендованныеСтавки.Колонки.name.Ширина=50;
		ЭлементыФормы.РекомендованныеСтавки.Колонки.ТекущаяПозиция.Ширина=5;
		ЭлементыФормы.РекомендованныеСтавки.Колонки.НоваяПозиция.Ширина=5;

		ЭлементыФормы.Панель2.ТекущаяСтраница=ЭлементыФормы.Панель2.Страницы.Ставки;
		
	КонецЕсли;
КонецПроцедуры

Процедура РазобратьСтавки(ФайлОтвета,тз)
	ФайлXML = Новый ЧтениеXML;
	ФайлXML.ОткрытьФайл(ФайлОтвета);
	Запись=новый Структура("name,ТекущаяПозиция,Позиция1,Ставка1,Позиция2,Ставка2,Позиция3,Ставка3,Позиция4,Ставка4,Позиция5,Ставка5");
	Пока ФайлXML.Прочитать() Цикл
		Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ФайлXML.Имя="offer" тогда
				КодОшибки=ФайлXML.ПолучитьАтрибут("error");
				
			иначеЕсли ФайлXML.Имя="name" тогда
				ФайлXML.Прочитать();
				Запись.name=ФайлXML.Значение;
			ИначеЕсли ФайлXML.Имя="model-card" тогда
				Запись.ТекущаяПозиция=ФайлXML.ПолучитьАтрибут("offer-position");
				НомерПоз=1;
				ФайлXML.Прочитать();
				Пока ФайлXML.Имя="position" цикл
					Если  ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента тогда
						//Запись.Вставить("Позиция"+НомерПоз,ФайлXML.ПолучитьАтрибут("pos"));
						Запись.Вставить("Ставка"+НомерПоз,ФайлXML.ПолучитьАтрибут("cbid"));
						НомерПоз=НомерПоз+1;
					КонецЕсли;
					ФайлXML.Прочитать();
				КонецЦикла;
			КонецЕсли;
		иначеЕсли ФайлXML.ТипУзла = ТипУзлаXML.КонецЭлемента и ФайлXML.Имя="offer"  тогда
			стр=ТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(стр,Запись);
			Запись.name="";
			//Запись.Статус="";
			Запись.ТекущаяПозиция="";
			Запись.Позиция1="";;
			Запись.Ставка1="";;
			Запись.Позиция2="";;
			Запись.Ставка2="";;
			Запись.Позиция3="";;
			Запись.Ставка3="";;
			Запись.Позиция4="";;
			Запись.Ставка4="";;
			Запись.Позиция5="";;
			Запись.Ставка5="";;
		КонецЕсли;    
		
		
	КонецЦикла;    
	ФайлXML.Закрыть();
	
КонецПроцедуры	

Процедура РазобратьПредложенияПоМоделям(ФайлОтвета,тз)
	ФайлXML = Новый ЧтениеXML;
	ФайлXML.ОткрытьФайл(ФайлОтвета);
	Запись=новый Структура("model_id,name,shop_name,pos,price,region_id,shipping_cost,in_stock,shop_rating");
	Пока ФайлXML.Прочитать() Цикл
		Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ФайлXML.Имя="model" тогда
				Запись.model_id=ФайлXML.ПолучитьАтрибут("id");
			ИначеЕсли ФайлXML.Имя="offers" тогда
				ФайлXML.Прочитать();
				Пока ФайлXML.Имя="offer" цикл
					Если  ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента тогда
						Запись.name=ФайлXML.ПолучитьАтрибут("name");
						Запись.shop_name=ФайлXML.ПолучитьАтрибут("shop-name");
						Запись.pos=ФайлXML.ПолучитьАтрибут("pos");
						Запись.price=ФайлXML.ПолучитьАтрибут("price");
						Запись.region_id=ФайлXML.ПолучитьАтрибут("region-id");
						Запись.shipping_cost=ФайлXML.ПолучитьАтрибут("shipping-cost");
						Запись.in_stock=ФайлXML.ПолучитьАтрибут("in-stock");
						Запись.shop_rating=ФайлXML.ПолучитьАтрибут("shop-rating");
						стр=ТЗ.Добавить();
						ЗаполнитьЗначенияСвойств(стр,Запись);
						
						Запись.name="";
						Запись.shop_name="";
						Запись.pos="";
						Запись.price="";
						Запись.region_id="";
						Запись.shipping_cost="";
						Запись.in_stock="";
						Запись.shop_rating="";
					КонецЕсли;
					ФайлXML.Прочитать();
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;    
	КонецЦикла;    
	ФайлXML.Закрыть();
КонецПроцедуры	

Процедура кнОбновитьПредложенияПоМоделямНажатие(Элемент)
	Если ТоварныеПредложения.Количество()=0 
		или ЭлементыФормы.СписокРегионов.Значение="" 
		или ЭлементыФормы.СписокРегионов.Значение=0 
		или ЭлементыФормы.СписокРегионов.Значение=неопределено тогда
		Предупреждение("Не выбран регион или нет наших товарных предложений.");
	Иначе	
		тз=новый ТаблицаЗначений;
		тз.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		тз.Колонки.Добавить("model_id",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(50)));
		тз.Колонки.Добавить("name",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(220)));
		тз.Колонки.Добавить("shop_name",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(220)));
		тз.Колонки.Добавить("pos",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(2,0)));
		тз.Колонки.Добавить("price",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(10,2)));
		тз.Колонки.Добавить("region_id",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(10,0)));
		тз.Колонки.Добавить("shipping_cost",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(10,2)));
		тз.Колонки.Добавить("in_stock",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(10,0)));
		тз.Колонки.Добавить("shop_rating",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(2,0)));
		
		
		//
		//отберем нужные нам позиции
		//выгрузим в таблицу
		ВнешниеНаборыДанных = Новый Структура;
		ВнешниеНаборыДанных.Вставить("тз", ТоварныеПредложения);
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
		Настройки = КомпоновщикНастроек.Настройки;				
		МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных,Настройки,,,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")
		);
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		
		ДанныеТЗ = Новый ТаблицаЗначений;
		ПроцессорВывода.УстановитьОбъект(ДанныеТЗ);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных); 	
		
		//
		
		
		//сначала получим region-id выбранного магазина
		//Region_ID=ПолучитьРегион(ЭлементыФормы.СписокКампаний.Значение).IDRegion;
		Region_ID=ЭлементыФормы.СписокРегионов.Значение;
		//
		
		максВЗапросе=100;
		
		ЗаписьXML = Новый ЗаписьXML;
		
		ВремФайл = ПолучитьИмяВременногоФайла("xml");
		ЗаписьXML.ОткрытьФайл(ВремФайл);
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		ЗаписьXML.ЗаписатьНачалоЭлемента("models");
		
		к=0;
		Для каждого стр из ДанныеТЗ цикл
			Если СокрЛП(стр.model_id)<>"" и стр.model_id<>0 и стр.model_id<>"0" Тогда
				Если к<максВЗапросе Тогда //добавим в xml
					ЗаписьXML.ЗаписатьНачалоЭлемента("id");
					
					ЗаписьXML.ЗаписатьТекст(стр.model_id);
					ЗаписьXML.ЗаписатьКонецЭлемента();
					
				Иначе   //отправим запрос
					ЗаписьXML.ЗаписатьКонецЭлемента();
					ЗаписьXML.Закрыть();
					//
					//отправим Запрос и получим ответ
					Сервер = "api.partner.market.yandex.ru";
					//предложения по моделям
					Ресурс = "v2/models/offers.xml?regionId="+Region_ID;
					
					HTTP =  Новый HTTPСоединение(Сервер,,,,,истина);
					ФайлРезультата = ПолучитьИмяВременногоФайла("xml");
					ЗаголовокHTTP = Новый Соответствие();
					ПодготовитьЗаголовокHTTP(ЗаголовокHTTP);
					Если к>0 тогда
						HTTP.ОтправитьДляОбработки(ВремФайл, Ресурс, ФайлРезультата, ЗаголовокHTTP);
						
						РазобратьПредложенияПоМоделям(ФайлРезультата,тз);
						Если УдалятьВременныеФайлы тогда
							УдалитьФайлы(ФайлРезультата);
							УдалитьФайлы(ВремФайл);
						КонецЕсли;	
						//
					конецесли;
					к=0;

					ЗаписьXML = Новый ЗаписьXML;
					ВремФайл = ПолучитьИмяВременногоФайла("xml");
					ЗаписьXML.ОткрытьФайл(ВремФайл);
					ЗаписьXML.ЗаписатьОбъявлениеXML();
					ЗаписьXML.ЗаписатьНачалоЭлемента("models");
					ЗаписьXML.ЗаписатьНачалоЭлемента("id");
					
					ЗаписьXML.ЗаписатьТекст(стр.model_id);
					ЗаписьXML.ЗаписатьКонецЭлемента();

				КонецЕсли;
				к=к+1;
			КонецЕсли;
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.Закрыть();
		//
		//отправим Запрос и получим ответ
		//
		Сервер = "api.partner.market.yandex.ru";
		//предложения по моделям
		Ресурс = "v2/models/offers.xml?regionId="+Region_ID;
		
		HTTP =  Новый HTTPСоединение(Сервер,,,,,истина);
		ФайлРезультата = ПолучитьИмяВременногоФайла("xml");
		ЗаголовокHTTP = Новый Соответствие();
		ПодготовитьЗаголовокHTTP(ЗаголовокHTTP);

		//ЗаголовокHTTP.Вставить("Authorization", "OAuth oauth_token=dc254190a8de411189f560e4b7c9e6fa,oauth_login=kolesoyst,oauth_client_id=765167d35d0f4975b6302380460186b1");
		//ЗаголовокHTTP.Вставить("Content-Type", "application/xml");
		//ЗаголовокHTTP.Вставить("Accept-Language", "ru");
		//ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
		//ЗаголовокHTTP.Вставить("Content-Language", "ru");
		//ЗаголовокHTTP.Вставить("Content-Charset", "utf-8");
		Если к>0 тогда
		ОтветHTTP=HTTP.ОтправитьДляОбработки(ВремФайл, Ресурс, ФайлРезультата, ЗаголовокHTTP);
		РазобратьПредложенияПоМоделям(ФайлРезультата,тз);
				ЭтаФорма.Заголовок="Я.Маркет"+" (Лимит запросов: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Limit")+
			", остаток: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Remaining")+
			", обнуление лимита: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Until")+")";


		Если УдалятьВременныеФайлы тогда
			УдалитьФайлы(ФайлРезультата);
			УдалитьФайлы(ВремФайл);
		КонецЕсли;
		КонецЕсли;

		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	ПредложенияПоМоделям.model_id,
		             |	ПредложенияПоМоделям.name,
		             |	ПредложенияПоМоделям.shop_name,
		             |	ПредложенияПоМоделям.pos,
		             |	ПредложенияПоМоделям.price,
		             |	ПредложенияПоМоделям.region_id,
		             |	ПредложенияПоМоделям.shipping_cost,
		             |	ПредложенияПоМоделям.in_stock,
		             |	ПредложенияПоМоделям.shop_rating
		             |ПОМЕСТИТЬ втПредложенияПоМоделям
		             |ИЗ
		             |	&ПредложенияПоМоделям КАК ПредложенияПоМоделям
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	МодельНоменклатура.model_id КАК model_id,
		             |	МодельНоменклатура.Номенклатура КАК Номенклатура
		             |ПОМЕСТИТЬ втМодельНоменклатура
		             |ИЗ
		             |	&МодельНоменклатура КАК МодельНоменклатура
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	втМодельНоменклатура.model_id,
		             |	МАКСИМУМ(втМодельНоменклатура.Номенклатура) КАК Номенклатура
		             |ПОМЕСТИТЬ втМодельНоменклатура2
		             |ИЗ
		             |	втМодельНоменклатура КАК втМодельНоменклатура
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	втМодельНоменклатура.model_id
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	втПредложенияПоМоделям.model_id,
		             |	втМодельНоменклатура.Номенклатура,
		             |	втПредложенияПоМоделям.name,
		             |	втПредложенияПоМоделям.shop_name,
		             |	втПредложенияПоМоделям.pos,
		             |	втПредложенияПоМоделям.price,
		             |	втПредложенияПоМоделям.region_id,
		             |	втПредложенияПоМоделям.shipping_cost,
		             |	втПредложенияПоМоделям.in_stock,
		             |	втПредложенияПоМоделям.shop_rating
		             |ИЗ
		             |	втПредложенияПоМоделям КАК втПредложенияПоМоделям
		             |		ЛЕВОЕ СОЕДИНЕНИЕ втМодельНоменклатура КАК втМодельНоменклатура
		             |		ПО втПредложенияПоМоделям.model_id = втМодельНоменклатура.model_id";
					 Запрос.УстановитьПараметр("ПредложенияПоМоделям",тз);
					 Запрос.УстановитьПараметр("МодельНоменклатура",ТоварныеПредложения);
					 Рез=Запрос.Выполнить().Выгрузить();
		ПредложенияПоМоделям=Рез;
		ЭлементыФормы.ПредложенияПоМоделям.СоздатьКолонки();
		ЭлементыФормы.ПредложенияПоМоделям.Колонки.shop_name.ширина=50;
		ЭлементыФормы.ПредложенияПоМоделям.Колонки.name.ширина=50;
		ЭлементыФормы.Панель3.ТекущаяСтраница=ЭлементыФормы.Панель3.Страницы.Предложения;
		НастройкиПредложенияПоМоделям = КомпоновщикНастроек.Настройки;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьРегион(CampaignID)
	Сервер = "api.partner.market.yandex.ru";
	//Запрос кампаний
	Ресурс = "/v2/campaigns/"+CampaignID+"/region.xml";
	HTTP =  Новый HTTPСоединение(Сервер,,,,,истина);
	ФайлРезультата = ПолучитьИмяВременногоФайла("xml");
	ЗаголовокHTTP = Новый Соответствие();
	ПодготовитьЗаголовокHTTP(ЗаголовокHTTP);
	//ЗаголовокHTTP.Вставить("Authorization", "OAuth oauth_token=dc254190a8de411189f560e4b7c9e6fa,oauth_login=kolesoyst,oauth_client_id=765167d35d0f4975b6302380460186b1");
	//ЗаголовокHTTP.Вставить("Content-Type", "application/xml");
	//ЗаголовокHTTP.Вставить("Accept-Language", "ru");
	//ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
	//ЗаголовокHTTP.Вставить("Content-Language", "ru");
	//ЗаголовокHTTP.Вставить("Content-Charset", "utf-8");
	
	HTTP.Получить(Ресурс, ФайлРезультата, ЗаголовокHTTP);
	
	//структура http://api.yandex.ru/market/partner/doc/dg/reference/get-campaigns-id-region.xml#output
	
	
	ФайлXML = Новый ЧтениеXML;
	ФайлXML.ОткрытьФайл(ФайлРезультата);
	
	Регион=Новый Структура("IDRegion,НазваниеРегиона");
	
	Пока ФайлXML.Прочитать() Цикл
		Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ФайлXML.Имя="region" тогда
				Регион.IDRegion=ФайлXML.ПолучитьАтрибут("id");
				Регион.НазваниеРегиона=ФайлXML.ПолучитьАтрибут("name");
			КонецЕсли;
		КонецЕсли;    
	КонецЦикла;    
	ФайлXML.Закрыть();
	возврат Регион; 
КонецФункции	

Процедура Кнопка1Нажатие(Элемент)
	Если ПредложенияПоМоделям.Количество()=0 тогда
	Иначе
		Запрос=новый Запрос;
		Если НашаЦена=Справочники.ТипыЦенНоменклатуры.ПустаяСсылка() тогда

			Запрос.Текст="ВЫБРАТЬ
			             |	тз.model_id,
			             |	тз.name,
			             |	тз.shop_name,
			             |	тз.pos,
			             |	тз.price,
			             |	тз.region_id,
			             |	тз.shipping_cost,
			             |	тз.in_stock,
			             |	тз.shop_rating,
			             |	тз.Номенклатура
			             |ПОМЕСТИТЬ вт
			             |ИЗ
			             |	&тз КАК тз
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	вт.model_id КАК model_id,
			             |	вт.Номенклатура КАК Номенклатура,
			             |	вт.shop_name КАК shop_name,
			             |	вт.pos КАК pos,
			             |	вт.price КАК price,
			             |	вт.region_id КАК region_id,
			             |	вт.shipping_cost КАК shipping_cost,
			             |	вт.in_stock КАК in_stock,
			             |	вт.shop_rating КАК shop_rating,
			             |	ВЫБОР
			             |		КОГДА вт.shop_name = &НашМагазин
			             |			ТОГДА вт.price
			             |		ИНАЧЕ 0
			             |	КОНЕЦ КАК НашаЦена
			             |ПОМЕСТИТЬ втОснова
			             |ИЗ
			             |	вт КАК вт
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	ЕСТЬNULL(А.model_id, Б.model_id) КАК model_id,
			             |	СУММА(ЕСТЬNULL(А.ЦенаКонкурентов, 0)) КАК ЦенаКонкурентов,
			             |	СУММА(ЕСТЬNULL(Б.НашаЦена, 0)) КАК НашаЦена
			             |ПОМЕСТИТЬ втСредниеЦеныНаМодель
			             |ИЗ
			             |	(ВЫБРАТЬ
			             |		втОснова.model_id КАК model_id,
			             |		СРЕДНЕЕ(втОснова.price) КАК ЦенаКонкурентов
			             |	ИЗ
			             |		втОснова КАК втОснова
			             |	ГДЕ
			             |		втОснова.shop_name <> &НашМагазин
			             |	
			             |	СГРУППИРОВАТЬ ПО
			             |		втОснова.model_id) КАК А
			             |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			             |			втОснова.model_id КАК model_id,
			             |			МАКСИМУМ(втОснова.НашаЦена) КАК НашаЦена
			             |		ИЗ
			             |			втОснова КАК втОснова
			             |		ГДЕ
			             |			втОснова.НашаЦена <> 0
			             |		
			             |		СГРУППИРОВАТЬ ПО
			             |			втОснова.model_id) КАК Б
			             |		ПО А.model_id = Б.model_id
			             |
			             |СГРУППИРОВАТЬ ПО
			             |	ЕСТЬNULL(А.model_id, Б.model_id)
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	втОснова.model_id,
			             |	втОснова.shop_name,
			             |	втОснова.pos,
			             |	втОснова.price,
			             |	втОснова.region_id,
			             |	втОснова.shipping_cost,
			             |	втОснова.in_stock,
			             |	втОснова.shop_rating,
			             |	втСредниеЦеныНаМодель.НашаЦена,
			             |	втСредниеЦеныНаМодель.ЦенаКонкурентов КАК СредняяЦенаКонкурентов,
			             |	втОснова.Номенклатура
			             |ИЗ
			             |	втОснова КАК втОснова
			             |		ЛЕВОЕ СОЕДИНЕНИЕ втСредниеЦеныНаМодель КАК втСредниеЦеныНаМодель
			             |		ПО втОснова.model_id = втСредниеЦеныНаМодель.model_id";
		Иначе
			Запрос.Текст="ВЫБРАТЬ
			             |	тз.model_id,
			             |	тз.name,
			             |	тз.shop_name,
			             |	тз.pos,
			             |	тз.price,
			             |	тз.region_id,
			             |	тз.shipping_cost,
			             |	тз.in_stock,
			             |	тз.shop_rating,
			             |	тз.Номенклатура
			             |ПОМЕСТИТЬ вт
			             |ИЗ
			             |	&тз КАК тз
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ РАЗЛИЧНЫЕ
			             |	вт.Номенклатура
			             |ПОМЕСТИТЬ втНоменклатура
			             |ИЗ
			             |	вт КАК вт
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ РАЗЛИЧНЫЕ
			             |	ЦеныНоменклатурыСрезПоследних.Номенклатура,
			             |	ЦеныНоменклатурыСрезПоследних.Цена
			             |ПОМЕСТИТЬ втЦенаПоТипу
			             |ИЗ
			             |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			             |			,
			             |			Номенклатура В
			             |					(ВЫБРАТЬ
			             |						втНоменклатура.Номенклатура
			             |					ИЗ
			             |						втНоменклатура КАК втНоменклатура)
			             |				И ТипЦен = &НашаЦена) КАК ЦеныНоменклатурыСрезПоследних
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	вт.model_id КАК model_id,
			             |	вт.Номенклатура КАК Номенклатура,
			             |	вт.shop_name КАК shop_name,
			             |	вт.pos КАК pos,
			             |	вт.price КАК price,
			             |	вт.region_id КАК region_id,
			             |	вт.shipping_cost КАК shipping_cost,
			             |	вт.in_stock КАК in_stock,
			             |	вт.shop_rating КАК shop_rating,
			             |	ЕСТЬNULL(втЦенаПоТипу.Цена, 0) КАК НашаЦена
			             |ПОМЕСТИТЬ втОснова
			             |ИЗ
			             |	вт КАК вт
			             |		ЛЕВОЕ СОЕДИНЕНИЕ втЦенаПоТипу КАК втЦенаПоТипу
			             |		ПО вт.Номенклатура = втЦенаПоТипу.Номенклатура
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	А.model_id,
			             |	А.ЦенаКонкурентов,
			             |	втОснова.НашаЦена
			             |ПОМЕСТИТЬ втСредниеЦеныНаМодель
			             |ИЗ
			             |	(ВЫБРАТЬ
			             |		втОснова.model_id КАК model_id,
			             |		СРЕДНЕЕ(втОснова.price + втОснова.shipping_cost) КАК ЦенаКонкурентов
			             |	ИЗ
			             |		втОснова КАК втОснова
			             |	ГДЕ
			             |		втОснова.shop_name <> &НашМагазин
			             |	
			             |	СГРУППИРОВАТЬ ПО
			             |		втОснова.model_id) КАК А
			             |		ЛЕВОЕ СОЕДИНЕНИЕ втОснова КАК втОснова
			             |		ПО А.model_id = втОснова.model_id
			             |ГДЕ
			             |	втОснова.НашаЦена <> 0
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	втОснова.model_id,
			             |	втОснова.shop_name,
			             |	втОснова.pos,
			             |	втОснова.price,
			             |	втОснова.region_id,
			             |	втОснова.shipping_cost,
			             |	втОснова.in_stock,
			             |	втОснова.shop_rating,
			             |	втСредниеЦеныНаМодель.НашаЦена,
			             |	втСредниеЦеныНаМодель.ЦенаКонкурентов КАК СредняяЦенаКонкурентов,
			             |	втОснова.Номенклатура
			             |ИЗ
			             |	втОснова КАК втОснова
			             |		ЛЕВОЕ СОЕДИНЕНИЕ втСредниеЦеныНаМодель КАК втСредниеЦеныНаМодель
			             |		ПО втОснова.model_id = втСредниеЦеныНаМодель.model_id"; 
		КонецЕсли;
		Запрос.УстановитьПараметр("тз",ПредложенияПоМоделям);
		Запрос.УстановитьПараметр("НашаЦена",НашаЦена);

		Если ЭлементыФормы.СписокКампаний.Значение="1042970" тогда
			Запрос.УстановитьПараметр("НашМагазин","Колесо76");
		иначеЕсли ЭлементыФормы.СписокКампаний.Значение="21100418" или ЭлементыФормы.СписокКампаний.Значение="21089677" тогда
		    Запрос.УстановитьПараметр("НашМагазин","Колесатут");
		Иначе	
			Запрос.УстановитьПараметр("НашМагазин","Колесатут");
		КонецЕсли;	
		
		РезТЗ=Запрос.Выполнить().Выгрузить();
		Форма=ПолучитьФорму("ФормаОтчетаСравнениеЦен");
		Форма.ТаблицаЦен=резТЗ;
		Форма.Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура Панель3ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элемент.ТекущаяСтраница=ЭлементыФормы.Панель3.Страницы.Отбор тогда
		СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КонецЕсли;	
КонецПроцедуры

Процедура Панель2ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элемент.ТекущаяСтраница=ЭлементыФормы.Панель2.Страницы.Отбор тогда
		СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
		
		//ВнешниеНаборыДанных = Новый Структура;
		//ВнешниеНаборыДанных.Вставить("тз",резТЗ);
	КонецЕсли;
КонецПроцедуры

Процедура РекомендованныеСтавкиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки["флаг"].ОтображатьФлажок = Истина;
	ОформлениеСтроки.Ячейки["флаг"].ОтображатьТекст  = Ложь;
КонецПроцедуры

Процедура кнУстановитьВсемСтавкуНажатие(Элемент)
	Для каждого стр из РекомендованныеСтавки цикл
		стр.НоваяПозиция=НоваяПозиция;
	КонецЦикла;	
КонецПроцедуры

Процедура кнСнятьФлажкиНажатие(Элемент)
	Для каждого стр из РекомендованныеСтавки цикл
		стр.флаг=ложь;
	КонецЦикла;
КонецПроцедуры

Процедура кнУстановитьФлажкиНажатие(Элемент)
	Для каждого стр из РекомендованныеСтавки цикл
		стр.флаг=истина;
	КонецЦикла;
КонецПроцедуры

Процедура кнУстановитьРекомендованныеНажатие(Элемент)
	Если Вопрос("Установить ставки?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да тогда
		УстановитьСтавку(1);
		УстановитьСтавку(2);
		УстановитьСтавку(3);
		УстановитьСтавку(4);
		УстановитьСтавку(5);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьСтавку(Позиция)
	Отбор=новый Структура("флаг,НоваяПозиция");
	Отбор.Флаг=истина;
	Отбор.НоваяПозиция=Позиция;
	Строки=РекомендованныеСтавки.НайтиСтроки(отбор);
	Если Строки.Количество()>0 тогда
		Сервер = "api.partner.market.yandex.ru";
		Ресурс = "/v2/campaigns/"+ЭлементыФормы.СписокКампаний.Значение+"/bids/recommended.xml?target=model-card&position="+Позиция+"&maxBid="+СтрЗаменить(Строка(МаксСтавка),",",".");
		HTTP =  Новый HTTPСоединение(Сервер,,,,,истина);
		
		ЗаголовокHTTP = Новый Соответствие();
		ПодготовитьЗаголовокHTTP(ЗаголовокHTTP);
		//ЗаголовокHTTP.Вставить("Authorization", "OAuth oauth_token=dc254190a8de411189f560e4b7c9e6fa,oauth_login=kolesoyst,oauth_client_id=765167d35d0f4975b6302380460186b1");
		//ЗаголовокHTTP.Вставить("Content-Type", "application/xml");
		//ЗаголовокHTTP.Вставить("Accept-Language", "ru");
		//ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
		//ЗаголовокHTTP.Вставить("Content-Language", "ru");
		//ЗаголовокHTTP.Вставить("Content-Charset", "utf-8");
		
		максВЗапросе=100;
		
		ЗаписьXML = Новый ЗаписьXML;
		
		ФайлЗапроса = ПолучитьИмяВременногоФайла("xml");
		ЗаписьXML.ОткрытьФайл(ФайлЗапроса);
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		ЗаписьXML.ЗаписатьНачалоЭлемента("offers");
		
		к=0;
		Для каждого стр из Строки цикл
			Если к<максВЗапросе Тогда //добавим в xml
				ЗаписьXML.ЗаписатьНачалоЭлемента("offer");
				
				ЗаписьXML.ЗаписатьАтрибут("name",СокрЛП(стр.name));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				к=к+1;
			Иначе   //отправим запрос
				к=0;
				ЗаписьXML.ЗаписатьКонецЭлемента();
				ЗаписьXML.Закрыть();
				ОтветHTTP=HTTP.Записать(ФайлЗапроса, Ресурс, ЗаголовокHTTP);
				Если УдалятьВременныеФайлы тогда
					УдалитьФайлы(ФайлЗапроса);
				КонецЕсли;
				ФайлЗапроса = ПолучитьИмяВременногоФайла("xml");
				ЗаписьXML.ОткрытьФайл(ФайлЗапроса);
				ЗаписьXML.ЗаписатьОбъявлениеXML();
				ЗаписьXML.ЗаписатьНачалоЭлемента("offers");
			КонецЕсли;	
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.Закрыть();
		ОтветHTTP=HTTP.Записать(ФайлЗапроса, Ресурс, ЗаголовокHTTP);
		
		ЭтаФорма.Заголовок="Я.Маркет"+" (Лимит запросов: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Limit")+
			", остаток: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Remaining")+
			", обнуление лимита: "+ОтветHTTP.Заголовки.Получить("X-RateLimit-Resource-Until")+")";

		Если УдалятьВременныеФайлы тогда
			УдалитьФайлы(ФайлЗапроса);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры	

Процедура ЗаполнитьСписокРегионов()
	СписокРегионов.Очистить();
	Для каждого ЭлементСписокКампаний из СписокКампаний цикл
		Регион=ПолучитьРегион(ЭлементСписокКампаний.Значение);
		Region_ID=Регион.IDRegion;
		Представление=Регион.НазваниеРегиона;
		Если СписокРегионов.НайтиПоЗначению(Region_ID)=неопределено тогда
			СписокРегионов.Добавить(Region_ID,Представление);
		КонецЕсли;
	КонецЦикла;
	//регионы с кодами яндекса
	//http://hmxblog.ya.ru/replies.xml?item_no=2780
	Если СписокРегионов.НайтиПоЗначению("213")=неопределено тогда
		СписокРегионов.Добавить("213","Москва");
	КонецЕсли;
	Если СписокРегионов.НайтиПоЗначению("2")=неопределено тогда
		СписокРегионов.Добавить("2","С. Петербург");
	КонецЕсли;
	Если СписокРегионов.НайтиПоЗначению("43")=неопределено тогда
		СписокРегионов.Добавить("43","Казань");
	КонецЕсли;
	Если СписокРегионов.НайтиПоЗначению("54")=неопределено тогда
		СписокРегионов.Добавить("54","Екатеринбург");
	КонецЕсли;
	Если СписокРегионов.НайтиПоЗначению("54")=неопределено тогда
		СписокРегионов.Добавить("54","Екатеринбург");
	КонецЕсли;
	Если СписокРегионов.НайтиПоЗначению("65")=неопределено тогда
		СписокРегионов.Добавить("65","Новосибирск");
	КонецЕсли;
    Если СписокРегионов.НайтиПоЗначению("16")=неопределено тогда
		СписокРегионов.Добавить("16","Ярославль");
	КонецЕсли;

	СписокРегионов.СортироватьПоПредставлению();
	ЭлементыФормы.СписокРегионов.СписокВыбора=СписокРегионов;
	
КонецПроцедуры	


Процедура ПриОткрытии()
	МаксСтавка=0.8;
КонецПроцедуры


Процедура КампанииПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Красный = Новый Цвет( 255, 0, 0 );
	Зеленый = Новый Цвет( 0, 255, 0 );
	Желтый  = Новый Цвет( 255, 255, 0 );
	Если ДанныеСтроки.state="1" или ДанныеСтроки.state="Включен" Тогда
		ОформлениеСтроки.ЦветФона = Зеленый;
		ДанныеСтроки.state="Включен"
	ИначеЕсли 	ДанныеСтроки.state="2" или ДанныеСтроки.state="Выключен" Тогда
		ОформлениеСтроки.ЦветФона = Красный;
		ДанныеСтроки.state="Выключен"
	ИначеЕсли 	ДанныеСтроки.state="3" или ДанныеСтроки.state="Включается" Тогда
		ОформлениеСтроки.ЦветФона = Желтый;
		ДанныеСтроки.state="Включается"
	КонецЕсли; 
КонецПроцедуры
УдалятьВременныеФайлы=ложь;