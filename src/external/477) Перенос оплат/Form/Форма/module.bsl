
Процедура КнопкаВыполнитьНажатие(Кнопка)
	Документ=Документы.Взаимозачет.СоздатьДокумент();
	Документ.Дата = ТекущаяДата();
	Документ.Организация = Заказы[0].ДоговорКт.Организация;
	Документ.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ПроведениеВзаимозачета;
	Документ.КонтрагентДебитор = Контрагент;
	Документ.КонтрагентКредитор = Контрагент;
	Документ.Ответственный = глТекущийПользователь;
	Документ.ОтражатьВБухгалтерскомУчете = Истина;
	Документ.ОтражатьВНалоговомУчете = Истина;
	Документ.ОтражатьВУправленческомУчете = Истина;
	Документ.ВалютаДокумента = Заказы[0].ДоговорКт.ВалютаВзаиморасчетов;
	Документ.СуммаДокумента = Заказы.Итог("Сумма");
	Для каждого стр из Заказы Цикл
		НовСтр=Документ.СуммыДолга.Добавить();
	    НовСтр.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская;
		новСтр.ДоговорКонтрагента = Стр.ДоговорДт;
		НовСтр.Сделка = Стр.ЗаказДт;
		НовСтр.Сумма = Стр.Сумма;
		НовСтр.Валюта = Стр.ДоговорДт.ВалютаВзаиморасчетов;
		НовСтр.КурсВзаиморасчетов = Окр(стр.СуммаОстаткаДт/Стр.СуммаОстаткаВалДт,4);
		НовСтр.СуммаУпр = стр.СуммаУпр;

		НовСтр=Документ.СуммыДолга.Добавить();
	    НовСтр.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская;
		новСтр.ДоговорКонтрагента = Стр.ДоговорКт;
		НовСтр.Сделка = Стр.ЗаказКт;
		НовСтр.Сумма = Стр.Сумма;
		НовСтр.Валюта = Стр.ДоговорКт.ВалютаВзаиморасчетов;
		НовСтр.КурсВзаиморасчетов = Окр(стр.СуммаОстаткаДт/Стр.СуммаОстаткаВалДт,4);
		НовСтр.СуммаУпр = стр.СуммаУпр; 
        Документ.Комментарий = стр.Комментарий;
	конецЦикла;
	//Документ.Записать(РежимЗаписиДокумента.Проведение);
	Документ.ПолучитьФорму("ФормаДокумента").Открыть();
КонецПроцедуры

Процедура ЗаказыДоговорДтПриИзменении(Элемент)
ТекСтрока = ЭлементыФормы.Заказы.ТекущиеДанные;
Если ЗначениеЗаполнено(ТекСтрока.ЗаказДТ)Тогда
	ТекСтрока.ДоговорДт= ТекСтрока.ЗаказДт.ДоговорКонтрагента;
	возврат;
иначе
	РассчитатьСуммуДт();	
конецЕсли;	
КонецПроцедуры

Процедура ЗаказыЗаказДтПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.Заказы.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.заказКт) и ТекСтрока.ЗаказДт.ДоговорКонтрагента.ВалютаВзаиморасчетов <>  ТекСтрока.ЗаказКт.ДоговорКонтрагента.ВалютаВзаиморасчетов   Тогда
		Сообщить("Нельзя провести взаимозачет между договорами с разными валютами!");
		ТекСтрока.ЗаказКт= "";
	иначе
		
		ТекЗаказ = ТекСтрока.ЗаказДт;
		Если Контрагент<> ТекЗаказ.контрагент Тогда
			Сообщить("Выбранный заказ принадлежит другому контрагенту!");
			ТекСтрока.ЗаказДт= "";
		Конецесли;
		Если ЗначениеЗаполнено(Договор) и Договор <> ТекЗаказ.ДоговорКонтрагента Тогда
			Сообщить("Выбранный заказ был оформлен по другому договору!");
			ТекСтрока.ЗаказДт= "";
		конецЕсли;
		Если ЗначениеЗаполнено(ТекСтрока.ЗаказДт) Тогда
			ТекСтрока.ДоговорДт	= ТекСтрока.ЗаказДт.договорКонтрагента;
			РассчитатьСуммуДт();
		конецЕсли;
	конецЕсли;
КонецПроцедуры

Процедура ЗаказыЗаказДтНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = ЭлементыФормы.Заказы.ТекущиеДанные;
		Если ЗначениеЗаполнено(Договор) Тогда
		ФормаВыб=Документы.ЗаказПоставщику.ПолучитьФормуВыбора();
		формаВыб.РежимВыбора = Истина;
		ФормаВыб.Отбор.ДоговорКонтрагента.Установить(Договор);
		ФормаВыб.Отбор.ДоговорКонтрагента.использование = истина;
		ВыбЗначение=ФормаВыб.ОткрытьМодально();
		Если ВыбЗначение <> неопределено   Тогда
			Если	ЗначениеЗаполнено(ТекСтрока.заказКт) и ТекСтрока.ЗаказДт.ДоговорКонтрагента.ВалютаВзаиморасчетов <>  ТекСтрока.ЗаказКт.ДоговорКонтрагента.ВалютаВзаиморасчетов  Тогда
			Сообщить("Нельзя провести взаимозачет между договорами с разными валютами!");
			ТекСтрока.ЗаказДт= "";
		иначе		
		ТекСтрока.ЗаказДт= ВыбЗначение;
		ТекСтрока.ДоговорДт= ТекСтрока.ЗаказДт.ДоговорКонтрагента;
		конецЕсли;
		конецЕсли;
	иначеЕсли ЗначениеЗаполнено(Контрагент) Тогда
		ФормаВыб=Документы.ЗаказПоставщику.ПолучитьФормуВыбора();
		формаВыб.РежимВыбора = Истина;
		ФормаВыб.Отбор.Контрагент.Установить(Контрагент);
		ФормаВыб.Отбор.Контрагент.использование = истина;
		ВыбЗначение=ФормаВыб.ОткрытьМодально();
		Если ВыбЗначение <> неопределено Тогда
			ТекСтрока.ЗаказДт= ВыбЗначение;
			ТекСтрока.ДоговорДт= ТекСтрока.ЗаказДт.ДоговорКонтрагента;
		конецЕсли;
	Иначе
		Сообщить("Укажите Контрагента и договор!");
		возврат;
	конецЕсли;

	РассчитатьСуммуДт();
КонецПроцедуры

Процедура РассчитатьСуммуДт()
	ТекСтрока = ЭлементыФормы.Заказы.ТекущиеДанные;
	ИтогоПоЗаказу= Заказы.Выгрузить().Скопировать(Новый Структура("ЗаказДт",ТекСтрока.ЗаказДт));
    УжеРазнесли = ИтогоПоЗаказу.Итог("Сумма");
	УжеРазнеслиУпр = ИтогоПоЗаказу.Итог("СуммаУпр");

	Если ЗначениеЗаполнено(ТекСтрока.ДоговорДт) тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВал,
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаРуб
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
		|			,
		|			Сделка = &Заказ
		|				И ДоговорКонтрагента = &Договор) КАК ВзаиморасчетыСКонтрагентамиОстатки";
		
		Если ТекСтрока.ЗаказДт = Документы.ЗаказПоставщику.ПустаяСсылка()Тогда
		Запрос.УстановитьПараметр("Заказ",Неопределено);
		иначе
		Запрос.УстановитьПараметр("Заказ",ТекСтрока.ЗаказДт);
	    конецесли;
	    		Запрос.УстановитьПараметр("Договор",ТекСтрока.ДоговорДт);

		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда	
			Если Выборка.суммаВал>0 Тогда
				ТекСтрока.Сумма= Выборка.СуммаВал-УжеРазнесли;
				ТекСтрока.СуммаУпр= Выборка.СуммаРуб-УжеРазнеслиУпр;
				ТекСтрока.СуммаОстаткаВалДт = Выборка.СуммаВал;
				ТекСтрока.СуммаОстаткаДт = Выборка.СуммаРуб;
			иначе
				сообщить("Переплаты по выбранному заказу кредиторская задолженность!");
				ТекСтрока.ЗаказДт= "";
				ТекСтрока.ДоговорДт= "";
				ТекСтрока.Сумма= 0;
				ТекСтрока.СуммаУпр= 0;
				ТекСтрока.СуммаОстаткаВалДт = 0;
				ТекСтрока.СуммаОстаткаДт = 0;
			конецЕсли;		
		иначе
			сообщить("Переплаты по выбранному заказу не обнаружено!");
			ТекСтрока.ЗаказДт= "";
			ТекСтрока.ДоговорДт= "";
			ТекСтрока.Сумма= 0;
			ТекСтрока.СуммаУпр= 0;
			ТекСтрока.СуммаОстаткаВалДт = 0;
			ТекСтрока.СуммаОстаткаДт = 0;
		конецЕсли;
		
	конецЕсли;	

конецпроцедуры

Процедура ЗаказыЗаказКтНачалоВыбора(Элемент, СтандартнаяОбработка)
		СтандартнаяОбработка = Ложь;
	ТекСтрока = ЭлементыФормы.Заказы.ТекущиеДанные;
	Если ЗначениеЗаполнено(Договор) Тогда
		ФормаВыб=Документы.ЗаказПоставщику.ПолучитьФормуВыбора();
		формаВыб.РежимВыбора = Истина;
		ФормаВыб.Отбор.ДоговорКонтрагента.Установить(Договор);
		ФормаВыб.Отбор.ДоговорКонтрагента.использование = истина;
		ВыбЗначение=ФормаВыб.ОткрытьМодально();
		Если ВыбЗначение <> неопределено Тогда
			Если	ЗначениеЗаполнено(ТекСтрока.заказДт) и ТекСтрока.ЗаказДт.ДоговорКонтрагента.ВалютаВзаиморасчетов <>  ТекСтрока.ЗаказКт.ДоговорКонтрагента.ВалютаВзаиморасчетов  Тогда
				Сообщить("Нельзя провести взаимозачет между договорами с разными валютами!");
				ТекСтрока.ЗаказКт= "";
			иначе		
				ТекСтрока.ЗаказКт= ВыбЗначение;
				ТекСтрока.ДоговорКт= ТекСтрока.ЗаказКт.ДоговорКонтрагента;
			конецЕсли;
        конецЕсли;
	иначеЕсли ЗначениеЗаполнено(Контрагент) Тогда
		ФормаВыб=Документы.ЗаказПоставщику.ПолучитьФормуВыбора();
		формаВыб.РежимВыбора = Истина;
		ФормаВыб.Отбор.Контрагент.Установить(Контрагент);
		ФормаВыб.Отбор.Контрагент.использование = истина;
		ВыбЗначение=ФормаВыб.ОткрытьМодально();
		Если ВыбЗначение <> неопределено Тогда
		ТекСтрока.ЗаказКт= ВыбЗначение;
		ТекСтрока.ДоговорКт= ТекСтрока.ЗаказКт.ДоговорКонтрагента;
        конецЕсли;
	Иначе
		Сообщить("Укажите Контрагента и договор!");
	конецЕсли;	

КонецПроцедуры

Процедура ЗаказыСуммаПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.Заказы.ТекущиеДанные;
	ТекЗаказ = ТекСтрока.ЗаказДт;
    ИтогоПоЗаказу= Заказы.Выгрузить().Скопировать(Новый Структура("ЗаказДт",ТекЗаказ));
	Если ИтогоПоЗаказу.Итог("Сумма") > ТекСтрока.СуммаОстаткаВалДт Тогда
		Сообщить("Вы пытаетесь разнести по текущему заказу, сумму большую сумме переплаты");
		ТекСтрока.Сумма=ТекСтрока.Сумма-(ИтогоПоЗаказу.Итог("Сумма") - ТекСтрока.СуммаОстаткаВалДт);	
	конецЕсли;	
	Если   ИтогоПоЗаказу.Итог("Сумма") = ТекСтрока.СуммаОстаткаВалДт Тогда
		ТекСтрока.суммаУпр = ТекСтрока.СуммаОстаткаДт-ИтогоПоЗаказу.Итог("СуммаУпр");
	иначе
		ТекСтрока.СуммаУпр = ТекСтрока.Сумма*Окр(ТекСтрока.СуммаОстаткаДт/ТекСтрока.СуммаОстаткаВалДт,4);
	конецЕсли;

	КонецПроцедуры

Процедура ЗаказыЗаказКтПриИзменении(Элемент)
		ТекСтрока = ЭлементыФормы.Заказы.ТекущиеДанные;
		
		Если ЗначениеЗаполнено(ТекСтрока.заказДт) и ТекСтрока.ЗаказДт.ДоговорКонтрагента.ВалютаВзаиморасчетов <>  ТекСтрока.ЗаказКт.ДоговорКонтрагента.ВалютаВзаиморасчетов   Тогда
			Сообщить("Нельзя провести взаимозачет между договорами с разными валютами!");
			ТекСтрока.ЗаказКт= "";
		иначе
			
			ТекЗаказ = ТекСтрока.ЗаказКт;
			Если Контрагент<> ТекЗаказ.контрагент Тогда
				Сообщить("Выбранный заказ принадлежит другому контрагенту!");
				ТекСтрока.ЗаказКт= "";
			Конецесли;
			Если ЗначениеЗаполнено(Договор) и Договор <> ТекЗаказ.ДоговорКонтрагента Тогда
				Сообщить("Выбранный заказ был оформлен по другому контрагенту!");
				ТекСтрока.ЗаказКт= "";
			конецЕсли;
			Если ЗначениеЗаполнено(ТекСтрока.ЗаказКт) Тогда
				ТекСтрока.ДоговорКт	= ТекСтрока.ЗаказКт.договорКонтрагента;
			конецЕсли;
		конецЕсли;
	КонецПроцедуры
	
Процедура ЗаказыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
		Если Копирование Тогда	
			ТекСтрока = ЭлементыФормы.Заказы.ТекущиеДанные;
			ТекСтрока.Сумма=0;
			ТекСтрока.СуммаУпр=0;
			ИтогоПоЗаказу= Заказы.Выгрузить().Скопировать(Новый Структура("ЗаказДт",ТекСтрока.ЗаказДт));
			ТекСтрока.Сумма=ТекСтрока.СуммаОстаткаВалДт-ИтогоПоЗаказу.Итог("Сумма");
			ТекСтрока.СуммаУпр = ТекСтрока.СуммаОстаткаДт-ИтогоПоЗаказу.Итог("СуммаУпр");
		конецЕсли;	

	КонецПроцедуры

Процедура ПоЗаказам(Кнопка)
		Если не ЗначениеЗаполнено(Контрагент) Тогда
			Сообщить("Не заполнен контрагент");
			возврат;
		конецЕсли;	
		заказы.Очистить();
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток,
		|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
		|			&Дата,
		|			ДоговорКонтрагента.Владелец = &Контрагент
		|				И 99 = 99
		|				И Сделка = НЕОПРЕДЕЛЕНО) КАК ВзаиморасчетыСКонтрагентамиОстатки";
		
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.УстановитьПараметр("Контрагент", Контрагент );
		Если ЗначениеЗаполнено(Договор) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента = &Договор");	
			Запрос.УстановитьПараметр("Договор", Договор);
		Конецесли;	
			Результат = Запрос.Выполнить();
			
			ВыборкаДоговора = Результат.Выбрать();
			
			Пока  ВыборкаДоговора.Следующий() Цикл
				нераспределеннаяСумма = ВыборкаДоговора.СуммаВзаиморасчетовОстаток;
				НераспределеннаясуммаУпр = ВыборкаДоговора.СуммаУпрОстаток; 
				курс = Окр(НераспределеннаясуммаУпр/?(Нераспределеннаясумма=0,1,Нераспределеннаясумма),4);
				
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ВЫРАЗИТЬ(ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Документ.ЗаказПоставщику) КАК Сделка,
				|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
				|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
				|ПОМЕСТИТЬ Расчеты
				|ИЗ
				|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
				|			&Дата,
				|			ДоговорКонтрагента = &Договор
				|				И Сделка.ВидЗаказа = 0) КАК ВзаиморасчетыСКонтрагентамиОстатки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
				|	ЗаказыПоставщикамОстатки.СуммаВзаиморасчетовОстаток,
				|	ЗаказыПоставщикамОстатки.СуммаУпрОстаток,
				|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СуммаДокумента
				|ПОМЕСТИТЬ Заказы
				|ИЗ
				|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
				|			&Дата,
				|			ДоговорКонтрагента = &Договор
				|				И ЗаказПоставщику <> НЕОПРЕДЕЛЕНО) КАК ЗаказыПоставщикамОстатки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЕСТЬNULL(Заказы.ЗаказПоставщику, Расчеты.Сделка) КАК ЗаказПоставщику,
				|	ЕСТЬNULL(Заказы.СуммаВзаиморасчетовОстаток, 0) - ЕСТЬNULL(Расчеты.СуммаВзаиморасчетовОстаток, 0) КАК СуммаДолга,
				|	Заказы.ЗаказПоставщику.Дата КАК ЗаказПоставщикуДата
				|ИЗ
				|	Заказы КАК Заказы
				|		ПОЛНОЕ СОЕДИНЕНИЕ Расчеты КАК Расчеты
				|		ПО Заказы.ЗаказПоставщику = Расчеты.Сделка
				|ГДЕ
				|	ЕСТЬNULL(Заказы.СуммаВзаиморасчетовОстаток, 0) - ЕСТЬNULL(Расчеты.СуммаВзаиморасчетовОстаток, 0) > 0
				|
				|УПОРЯДОЧИТЬ ПО
				|	ЗаказПоставщикуДата";
				
				Запрос.УстановитьПараметр("Дата", ТекущаяДата());
				Запрос.УстановитьПараметр("Договор", ВыборкаДоговора.ДоговорКонтрагента);
				Результат = Запрос.Выполнить();
				
				Выборка = Результат.Выбрать();
				
				Пока Выборка.Следующий() и нераспределеннаяСумма>0 Цикл
					строка = Заказы.Добавить();
					Строка.ДоговорДт = ВыборкаДоговора.ДоговорКонтрагента;
					Строка.ДоговорКт = ВыборкаДоговора.ДоговорКонтрагента;
					строка.ЗаказКт = Выборка.заказпоставщику;
					Если нераспределеннаяСумма<= Выборка.СуммаДолга	тогда //весь остаток долга перекидываем на текущую сделку
						строка.Сумма=нераспределеннаяСумма;
						Строка.СуммаУпр = нераспределеннаяСуммаУпр;
					иначе
						строка.Сумма=Выборка.СуммаДолга;
						Строка.СуммаУпр = Выборка.СуммаДолга*Курс;
					конецЕсли;
					строка.СуммаОстаткаДт =  НераспределеннаясуммаУпр;
					Строка.СуммаОстаткаВалДт = нераспределеннаяСумма;
					
					нераспределеннаяСумма = нераспределеннаяСумма-строка.Сумма;
					НераспределеннаясуммаУпр = НераспределеннаясуммаУпр-Строка.СуммаУпр; 
				КонецЦикла;
				
			КонецЦикла;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Доступность=истина;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСоздатьКорректировку.Доступность=ложь;

	КонецПроцедуры

Процедура ПоСезоннымЗаказам(Кнопка)
		Если не ЗначениеЗаполнено(Контрагент) Тогда
			Сообщить("Не заполнен контрагент");
			возврат;
		конецЕсли;	
		заказы.Очистить();
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток,
		|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
		|			&Дата,
		|			ДоговорКонтрагента.Владелец = &Контрагент
		|				И 99 = 99
		|				И Сделка = НЕОПРЕДЕЛЕНО) КАК ВзаиморасчетыСКонтрагентамиОстатки";
		
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.УстановитьПараметр("Контрагент", Контрагент );
		Если ЗначениеЗаполнено(Договор) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента = &Договор");	
			Запрос.УстановитьПараметр("Договор", Договор);
		Конецесли;	
		Результат = Запрос.Выполнить();
		
		ВыборкаДоговора = Результат.Выбрать();
		
		Пока  ВыборкаДоговора.Следующий() Цикл
			нераспределеннаяСумма = ВыборкаДоговора.СуммаВзаиморасчетовОстаток;
			НераспределеннаясуммаУпр = ВыборкаДоговора.СуммаУпрОстаток; 
			курс = Окр(НераспределеннаясуммаУпр/?(Нераспределеннаясумма=0,1,Нераспределеннаясумма),4);
			
			
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫРАЗИТЬ(ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Документ.ЗаказПоставщику) КАК Сделка,
			|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
			|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
			|ПОМЕСТИТЬ Расчеты
			|ИЗ
			|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
			|			&Дата,
			|			ДоговорКонтрагента = &Договор
			|				И Сделка.ВидЗаказа = 1) КАК ВзаиморасчетыСКонтрагентамиОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ЗаказДубль КАК ЗаказПоставщику,
			|	СУММА(ЗаказПоставщикуСезонныйТовары.Цена * ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток) КАК СуммаОстатка
			|ПОМЕСТИТЬ Заказы
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(, ЗаказПоставщикуСезонный.ДоговорКонтрагента = &Договор) КАК ЗаказыПоставщикамСезонныеОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщикуСезонный.Товары КАК ЗаказПоставщикуСезонныйТовары
			|		ПО ЗаказыПоставщикамСезонныеОстатки.Номенклатура = ЗаказПоставщикуСезонныйТовары.Номенклатура
			|			И ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный = ЗаказПоставщикуСезонныйТовары.Ссылка
			|ГДЕ
			|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо > &Дата
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ЗаказДубль
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Заказы.ЗаказПоставщику,
			|	ЕСТЬNULL(Заказы.СуммаОстатка * 0.2, 0) - ЕСТЬNULL(Расчеты.СуммаВзаиморасчетовОстаток, 0) КАК СуммаДолга
			|ИЗ
			|	Заказы КАК Заказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ Расчеты КАК Расчеты
			|		ПО Заказы.ЗаказПоставщику = Расчеты.Сделка
			|ГДЕ
			|	ЕСТЬNULL(Заказы.СуммаОстатка * 0.2, 0) - ЕСТЬNULL(Расчеты.СуммаВзаиморасчетовОстаток, 0) > 0";
			
			Запрос.УстановитьПараметр("Дата", ТекущаяДата());
			Запрос.УстановитьПараметр("Договор", ВыборкаДоговора.ДоговорКонтрагента);
			Результат = Запрос.Выполнить();
			
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() и нераспределеннаяСумма>0 Цикл
				строка = Заказы.Добавить();
				Строка.ДоговорДт = ВыборкаДоговора.ДоговорКонтрагента;
				Строка.ДоговорКт = ВыборкаДоговора.ДоговорКонтрагента;
				строка.ЗаказКт = Выборка.заказпоставщику;
				Если нераспределеннаяСумма<= Выборка.СуммаДолга	тогда //весь остаток долга перекидываем на текущую сделку
					строка.Сумма=нераспределеннаяСумма;
					Строка.СуммаУпр = нераспределеннаяСуммаУпр;
				иначе
					строка.Сумма=Выборка.СуммаДолга;
					Строка.СуммаУпр = Выборка.СуммаДолга*Курс;
				конецЕсли;
				строка.СуммаОстаткаДт =  НераспределеннаясуммаУпр;
				Строка.СуммаОстаткаВалДт = нераспределеннаяСумма;
				нераспределеннаяСумма = нераспределеннаяСумма-строка.Сумма;
				НераспределеннаясуммаУпр = НераспределеннаясуммаУпр-Строка.СуммаУпр; 
				
			КонецЦикла;
			
		конецЦикла;	
		
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Доступность=истина;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСоздатьКорректировку.Доступность=ложь;
	
	КонецПроцедуры

Процедура КоманднаяПанель1Очистить(Кнопка)
		Заказы.Очистить();
	КонецПроцедуры

Процедура КоманднаяПанель1ССезонныхЗаказов(Кнопка)
		Если не ЗначениеЗаполнено(Контрагент) Тогда
			Сообщить("Не заполнен контрагент");
			возврат;
		конецЕсли;	
		заказы.Очистить();
		
		
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
		|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
		|			&Дата,
		|			ДоговорКонтрагента.Владелец = &Контрагент
		|				И 99 = 99
		|				И Сделка.ВидЗаказа = 1) КАК ВзаиморасчетыСКонтрагентамиОстатки";
		
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		Если ЗначениеЗаполнено(Договор) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента = &Договор");	
			Запрос.УстановитьПараметр("Договор", Договор);
		Конецесли;	
		
		Результат = Запрос.Выполнить();
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
				строка = Заказы.Добавить();
				Строка.ДоговорДт = Выборка.ДоговорКонтрагента;
				Строка.ДоговорКт = Выборка.ДоговорКонтрагента;
				строка.ЗаказДт = Выборка.сделка;
				строка.Сумма= Выборка.СуммаВзаиморасчетовОстаток;
				Строка.СуммаУпр = Выборка.СуммаУпрОстаток;
				строка.СуммаОстаткаДт =  Выборка.СуммаУпрОстаток;
				Строка.СуммаОстаткаВалДт = Выборка.СуммаВзаиморасчетовОстаток;
			КонецЦикла;
		
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Доступность=истина;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСоздатьКорректировку.Доступность=ложь;
	
	КонецПроцедуры

Процедура КоманднаяПанель1кнНаПустуюСделку(Кнопка)
		заказы.Очистить();
		ЗаказыДляВзаимозачета =  ПолучитьЗаказыДляВзаимозачета(Контрагент,Договор);
		Для каждого стр из ЗаказыДляВзаимозачета цикл
			Если стр.ВидДокумента = "Сезонные заказы / Season orders" тогда
				СуммаДляВзаимозачета = стр.СуммаВзаиморасчетовОстаток-стр.СуммаОстаткаНевыполненного*0.2;
			ИначеЕсли стр.ВидДокумента = "Заказы поставщику/Orders" тогда
				СуммаДляВзаимозачета = стр.СуммаВзаиморасчетовОстаток-стр.СуммаОстаткаНевыполненного;
			Иначе
				СуммаДляВзаимозачета = 0;
			КонецЕсли;
			Если СуммаДляВзаимозачета>0 тогда
				Курс = ПолучитьКурсПоПриходу(стр.Сделка);
				
				нстр = Заказы.Добавить();
				нстр.ДоговорДт = стр.ДоговорКонтрагента;
				нстр.ДоговорКт = стр.ДоговорКонтрагента;
				нстр.ЗаказДт = стр.Сделка;
				нстр.Сумма = СуммаДляВзаимозачета;
				нстр.СуммаОстаткаВалДт = СуммаДляВзаимозачета;
				нстр.СуммаОстаткаДт = СуммаДляВзаимозачета*курс;
				нстр.СуммаУпр =  СуммаДляВзаимозачета*курс;
				нстр.Комментарий = "Автовзаимозачет на пустую сделку";
			КонецЕсли;
		КонецЦикла;
		
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Доступность=истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСоздатьКорректировку.Доступность=ложь;
	КонецПроцедуры

Функция ПолучитьЗаказыДляВзаимозачета(Контрагент,Договор)
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыПоставщикамСезонныеОстатки.Номенклатура) КАК Номенклатура,
		               |	СУММА(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток * ЗаказПоставщикуСезонныйТовары.Цена) КАК СуммаОстатка,
		               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ЗаказДубль КАК ЗаказПоставщику
		               |ПОМЕСТИТЬ ОстаткиНевыполненные
		               |ИЗ
		               |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки КАК ЗаказыПоставщикамСезонныеОстатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщикуСезонный.Товары КАК ЗаказПоставщикуСезонныйТовары
		               |		ПО ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный = ЗаказПоставщикуСезонныйТовары.Ссылка
		               |			И ЗаказыПоставщикамСезонныеОстатки.Номенклатура = ЗаказПоставщикуСезонныйТовары.Номенклатура
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ЗаказДубль
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	NULL,
		               |	ЗаказыПоставщикамОстатки.СуммаВзаиморасчетовОстаток,
		               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику
		               |ИЗ
		               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ) КАК ЗаказыПоставщикамОстатки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
		               |	ЗаказыПоставщикамОстатки.ДоговорКонтрагента,
		               |	ЗаказыПоставщикамОстатки.ДоговорКонтрагента.Владелец КАК Контрагент
		               |ПОМЕСТИТЬ Заказы
		               |ИЗ
		               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ДоговорКонтрагента.ВалютаВзаиморасчетов <> &Рубли) КАК ЗаказыПоставщикамОстатки
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ЗаказДубль,
		               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДоговорКонтрагента,
		               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДоговорКонтрагента.Владелец
		               |ИЗ
		               |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки КАК ЗаказыПоставщикамСезонныеОстатки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(Заказы.ДоговорКонтрагента, ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента) КАК ДоговорКонтрагента,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(Заказы.ДоговорКонтрагента.Наименование, ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Наименование) ПОДОБНО ""%*%""
		               |			ТОГДА ЕСТЬNULL(Заказы.ДоговорКонтрагента.Наименование, ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Наименование)
		               |		ИНАЧЕ ЕСТЬNULL(Заказы.ЗаказПоставщику, ВзаиморасчетыСКонтрагентамиОстатки.Сделка)
		               |	КОНЕЦ КАК Сделка,
		               |	Заказы.ЗаказПоставщику.СуммаДокумента КАК СделкаСуммаДокумента,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(Заказы.ЗаказПоставщику.ВидЗаказа, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ВидЗаказа) = 1
		               |			ТОГДА Заказы.ЗаказПоставщику.СезонныйЗаказДляСинхронизации.ДатаДействияПо
		               |		КОГДА ЕСТЬNULL(Заказы.ЗаказПоставщику.ВидЗаказа, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ВидЗаказа) = 2
		               |			ТОГДА NULL
		               |		КОГДА ЕСТЬNULL(Заказы.ЗаказПоставщику.ВидЗаказа, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ВидЗаказа) = 0
		               |			ТОГДА ДОБАВИТЬКДАТЕ(ЕСТЬNULL(Заказы.ЗаказПоставщику.Дата, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата), МЕСЯЦ, 3)
		               |		ИНАЧЕ ЕСТЬNULL(Заказы.ЗаказПоставщику.Дата, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата)
		               |	КОНЕЦ КАК КонтрольнаяДата,
		               |	ОстаткиНевыполненные.СуммаОстатка КАК СуммаОстаткаНевыполненного,
		               |	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
		               |	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток,
		               |	ВЫБОР
		               |		КОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток > 0
		               |			ТОГДА "" Дебеторская ""
		               |		ИНАЧЕ "" Кредиторская ""
		               |	КОНЕЦ КАК ВидЗадолженности,
		               |	ЕСТЬNULL(Заказы.Контрагент, ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец) КАК Контрагент,
		               |	ВЫБОР
		               |		КОГДА ОстаткиНевыполненные.СуммаОстатка = 0
		               |			ТОГДА 100
		               |		КОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток < 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток / ОстаткиНевыполненные.СуммаОстатка * 100
		               |	КОНЕЦ КАК процент,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(Заказы.ДоговорКонтрагента.Наименование, ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Наименование) ПОДОБНО ""%*%""
		               |			ТОГДА ""Наличные""
		               |		КОГДА ЕСТЬNULL(Заказы.ЗаказПоставщику.ВидЗаказа, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ВидЗаказа) = 1
		               |			ТОГДА ""Сезонные заказы / Season orders""
		               |		КОГДА ЕСТЬNULL(Заказы.ЗаказПоставщику.ВидЗаказа, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ВидЗаказа) = 2
		               |			ТОГДА ""Заказы на пресформы/ Mold orders""
		               |		КОГДА ЕСТЬNULL(Заказы.ЗаказПоставщику.ВидЗаказа, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ВидЗаказа) = 0
		               |			ТОГДА ""Заказы поставщику/Orders""
		               |		ИНАЧЕ ""Прочее/ Other""
		               |	КОНЕЦ КАК ВидДокумента,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(Заказы.ЗаказПоставщику.ВидЗаказа, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ВидЗаказа) = 0
		               |			ТОГДА ВЫБОР
		               |					КОГДА ЕСТЬNULL(Заказы.ЗаказПоставщику.Контрагент, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Контрагент) = &Фримен
		               |						ТОГДА ДОБАВИТЬКДАТЕ(ЕСТЬNULL(Заказы.ЗаказПоставщику.Дата, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата), ДЕНЬ, 7)
		               |					ИНАЧЕ ДОБАВИТЬКДАТЕ(ЕСТЬNULL(Заказы.ЗаказПоставщику.Дата, ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата), ДЕНЬ, 30)
		               |				КОНЕЦ
		               |	КОНЕЦ КАК СрокОплаты
		               |ПОМЕСТИТЬ втОснова
		               |ИЗ
		               |	Заказы КАК Заказы
		               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
		               |				,
		               |				ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
		               |					И ДоговорКонтрагента.ВалютаВзаиморасчетов <> &Рубли) КАК ВзаиморасчетыСКонтрагентамиОстатки
		               |		ПО Заказы.ЗаказПоставщику = ВзаиморасчетыСКонтрагентамиОстатки.Сделка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНевыполненные КАК ОстаткиНевыполненные
		               |		ПО Заказы.ЗаказПоставщику = ОстаткиНевыполненные.ЗаказПоставщику
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	втОснова.ДоговорКонтрагента,
		               |	втОснова.Сделка,
		               |	втОснова.СделкаСуммаДокумента,
		               |	втОснова.КонтрольнаяДата,
		               |	втОснова.СуммаОстаткаНевыполненного,
		               |	втОснова.СуммаВзаиморасчетовОстаток,
		               |	втОснова.СуммаУпрОстаток,
		               |	втОснова.ВидЗадолженности,
		               |	втОснова.Контрагент,
		               |	втОснова.процент,
		               |	втОснова.ВидДокумента,
		               |	втОснова.СрокОплаты
		               |ИЗ
		               |	втОснова КАК втОснова
		               |ГДЕ
		               |	(втОснова.процент > 20
		               |				И втОснова.ВидДокумента = ""Сезонные заказы / Season orders""
		               |			ИЛИ втОснова.процент > 100
		               |				И втОснова.ВидДокумента = ""Заказы поставщику/Orders"")
		               |	И 99 = 99
		               |	И втОснова.Контрагент = &Контрагент";
					   
					   Если ЗначениеЗаполнено(Договор) Тогда
						   Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","втОснова.ДоговорКонтрагента = &Договор");	
						   Запрос.УстановитьПараметр("Договор", Договор);
					   Конецесли;
					   Запрос.УстановитьПараметр("Фримен",Контрагент);
					   Запрос.УстановитьПараметр("Контрагент",Контрагент);
					   Запрос.УстановитьПараметр("Договор",Договор);
					   Запрос.УстановитьПараметр("Рубли",Справочники.Валюты.НайтиПоКоду("643"));

					   Рез = Запрос.Выполнить().Выгрузить();
					   Возврат Рез;
				   КонецФункции
				   
функция ПолучитьКурсПоПриходу(Заказ)
					   Запрос = новый Запрос;
					   Запрос.Текст="ВЫБРАТЬ
					                |	ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход,
					                |	ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход,
					                |	ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход / ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход КАК Курс
					                |ИЗ
					                |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(, , , Сделка = &Заказ) КАК ВзаиморасчетыСКонтрагентамиОбороты";
									Запрос.УстановитьПараметр("Заказ",Заказ);
									Рез = Запрос.Выполнить().Выбрать();
									пока Рез.Следующий() цикл
										возврат рез.Курс;
									КонецЦикла;
									Возврат 1;
				   КонецФункции

Процедура КоманднаяПанель1кнПереносПерегрузовНедогрузов(Кнопка)
	Заказы.Очистить();
	Запрос = новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
               |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
               |	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
               |	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
               |ПОМЕСТИТЬ втОстаткиВзаиморасчетов
               |ИЗ
               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
               |			,
               |			ДоговорКонтрагента.Владелец = &Контрагент
               |				И 99 = 99) КАК ВзаиморасчетыСКонтрагентамиОстатки
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ЗаказыПоставщикамОбороты.ЗаказПоставщику,
               |	ЗаказыПоставщикамОбороты.Номенклатура,
               |	СУММА(ЗаказыПоставщикамОбороты.КоличествоПриход) КАК КоличествоПриход,
               |	СУММА(ЗаказыПоставщикамОбороты.СуммаВзаиморасчетовПриход) КАК СуммаВзаиморасчетовПриход
               |ПОМЕСТИТЬ втЗаказПоставщику
               |ИЗ
               |	РегистрНакопления.ЗаказыПоставщикам.Обороты(
               |			,
               |			,
               |			Регистратор,
               |			ДоговорКонтрагента.Владелец = &Контрагент
               |				И ВЭД = ЛОЖЬ) КАК ЗаказыПоставщикамОбороты
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиВзаиморасчетов КАК втОстаткиВзаиморасчетов
               |		ПО ЗаказыПоставщикамОбороты.ЗаказПоставщику = втОстаткиВзаиморасчетов.Сделка
               |ГДЕ
               |	ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
               |
               |СГРУППИРОВАТЬ ПО
               |	ЗаказыПоставщикамОбороты.ЗаказПоставщику,
               |	ЗаказыПоставщикамОбороты.Номенклатура
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ЗаказыПоставщикамОбороты.ЗаказПоставщику,
               |	ЗаказыПоставщикамОбороты.Номенклатура,
               |	СУММА(ЗаказыПоставщикамОбороты.КоличествоРасход) КАК КоличествоРасход,
               |	СУММА(ЗаказыПоставщикамОбороты.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
               |ПОМЕСТИТЬ втПоступления
               |ИЗ
               |	РегистрНакопления.ЗаказыПоставщикам.Обороты(
               |			,
               |			,
               |			Регистратор,
               |			ДоговорКонтрагента.Владелец = &Контрагент
               |				И ВЭД = ЛОЖЬ) КАК ЗаказыПоставщикамОбороты
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиВзаиморасчетов КАК втОстаткиВзаиморасчетов
               |		ПО ЗаказыПоставщикамОбороты.ЗаказПоставщику = втОстаткиВзаиморасчетов.Сделка
               |ГДЕ
               |	ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
               |
               |СГРУППИРОВАТЬ ПО
               |	ЗаказыПоставщикамОбороты.Номенклатура,
               |	ЗаказыПоставщикамОбороты.ЗаказПоставщику
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	А.ЗаказПоставщику,
               |	СУММА(А.КоличествоЗаказано) КАК КоличествоЗаказано,
               |	СУММА(А.СуммаВзаиморасчетовЗаказано) КАК СуммаВзаиморасчетовЗаказано,
               |	СУММА(А.КоличествоРасход) КАК КоличествоРасход,
               |	СУММА(А.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
               |ПОМЕСТИТЬ вт
               |ИЗ
               |	(ВЫБРАТЬ
               |		втЗаказПоставщику.ЗаказПоставщику КАК ЗаказПоставщику,
               |		втЗаказПоставщику.КоличествоПриход КАК КоличествоЗаказано,
               |		втЗаказПоставщику.СуммаВзаиморасчетовПриход КАК СуммаВзаиморасчетовЗаказано,
               |		втЗаказПоставщику.Номенклатура КАК Номенклатура,
               |		0 КАК КоличествоРасход,
               |		0 КАК СуммаВзаиморасчетовРасход
               |	ИЗ
               |		втЗаказПоставщику КАК втЗаказПоставщику
               |	ГДЕ
               |		втЗаказПоставщику.ЗаказПоставщику В
               |				(ВЫБРАТЬ
               |					втПоступления.ЗаказПоставщику
               |				ИЗ
               |					втПоступления)
               |	
               |	ОБЪЕДИНИТЬ ВСЕ
               |	
               |	ВЫБРАТЬ
               |		втПоступления.ЗаказПоставщику,
               |		0,
               |		0,
               |		втПоступления.Номенклатура,
               |		втПоступления.КоличествоРасход,
               |		втПоступления.СуммаВзаиморасчетовРасход
               |	ИЗ
               |		втПоступления КАК втПоступления) КАК А
               |
               |СГРУППИРОВАТЬ ПО
               |	А.ЗаказПоставщику
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	вт.ЗаказПоставщику КАК ЗаказПоставщику,
               |	вт.КоличествоЗаказано КАК КоличествоЗаказано,
               |	вт.КоличествоРасход КАК КоличествоПоступления,
               |	вт.СуммаВзаиморасчетовЗаказано КАК СуммаВзаиморасчетовЗаказано,
               |	вт.СуммаВзаиморасчетовРасход КАК СуммаВзаиморасчетовПоступления,
               |	вт.СуммаВзаиморасчетовЗаказано - вт.СуммаВзаиморасчетовРасход КАК РазницаЗаказаноПоступило,
               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток,
               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовРасход,
               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаУпрКонечныйОстаток
               |ПОМЕСТИТЬ вт2
               |ИЗ
               |	вт КАК вт
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(, , , , ) КАК ВзаиморасчетыСКонтрагентамиОстаткиИОбороты
               |		ПО вт.ЗаказПоставщику = ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Сделка
               |ГДЕ
               |	(вт.КоличествоЗаказано <> вт.КоличествоРасход
               |			ИЛИ вт.СуммаВзаиморасчетовЗаказано <> вт.СуммаВзаиморасчетовРасход)
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	вт2.ЗаказПоставщику.Контрагент КАК Контрагент,
               |	вт2.ЗаказПоставщику.ДоговорКонтрагента КАК ДоговорКонтрагента,
               |	вт2.ЗаказПоставщику КАК ЗаказПоставщику,
               |	вт2.КоличествоЗаказано КАК КоличествоЗаказано,
               |	вт2.КоличествоПоступления КАК КоличествоПоступления,
               |	вт2.СуммаВзаиморасчетовЗаказано КАК СуммаВзаиморасчетовЗаказано,
               |	вт2.СуммаВзаиморасчетовПоступления КАК СуммаВзаиморасчетовПоступления,
               |	вт2.РазницаЗаказаноПоступило КАК РазницаЗаказаноПоступило,
               |	вт2.СуммаВзаиморасчетовКонечныйОстаток КАК СуммаВзаиморасчетовКонечныйОстаток,
               |	вт2.СуммаВзаиморасчетовРасход КАК СуммаВзаиморасчетовРасход,
               |	вт2.СуммаУпрКонечныйОстаток
               |ИЗ
               |	вт2 КАК вт2
               |ГДЕ
               |	вт2.СуммаВзаиморасчетовКонечныйОстаток <> 0
               |	И вт2.СуммаВзаиморасчетовРасход > 0
               |
               |УПОРЯДОЧИТЬ ПО
               |	ЗаказПоставщику";
			   
			   Запрос.УстановитьПараметр("Контрагент", Контрагент );
			   Если ЗначениеЗаполнено(Договор) Тогда
				   Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента = &Договор");	
				   Запрос.УстановитьПараметр("Договор", Договор);
			   Конецесли;
			   рез = Запрос.Выполнить().Выбрать();
			   
			   ДоговорПерегруз = НайтиДоговорПоНаименованию(Контрагент,"%перегруз%");
			   ДоговорНедогруз = НайтиДоговорПоНаименованию(Контрагент,"%недогруз%");
			   
			   Пока Рез.Следующий() Цикл
				   //Курс = ПолучитьКурсПоПриходу(Рез.ЗаказПоставщику);
				   
				   курс = Окр(рез.СуммаУпрКонечныйОстаток/?(рез.СуммаВзаиморасчетовКонечныйОстаток=0,1,рез.СуммаВзаиморасчетовКонечныйОстаток),4);
				   
				   Если (рез.СуммаВзаиморасчетовКонечныйОстаток>0 и рез.РазницаЗаказаноПоступило<0)
					   или (рез.СуммаВзаиморасчетовКонечныйОстаток<0 и рез.РазницаЗаказаноПоступило>0)
					   Тогда	//такого не должно быть	 
					   продолжить;
				   ИначеЕсли рез.СуммаВзаиморасчетовКонечныйОстаток<0 и рез.РазницаЗаказаноПоступило<0 тогда //на перегруз 
					   нстр = Заказы.Добавить();
					   
					   Долг = -  рез.СуммаВзаиморасчетовКонечныйОстаток;
					   Разница = - рез.РазницаЗаказаноПоступило;
					   СуммаКПереносу = ?(Долг<Разница,Долг,Разница);
					   
					   нстр.ДоговорДт = Рез.ДоговорКонтрагента;
					   нстр.ДоговорКт = ДоговорПерегруз;
				   ИначеЕсли рез.СуммаВзаиморасчетовКонечныйОстаток>0 и рез.РазницаЗаказаноПоступило>0 тогда //на недогруз
					   нстр = Заказы.Добавить();
					   
					   Долг = рез.СуммаВзаиморасчетовКонечныйОстаток;
					   Разница = рез.РазницаЗаказаноПоступило;
					   СуммаКПереносу = ?(Долг<Разница,Долг,Разница);
					   
					   нстр.ДоговорДт = ДоговорНедогруз;
					   нстр.ДоговорКт = Рез.ДоговорКонтрагента;
				   КонецЕсли;
				   
				   нстр.ЗаказДт = Рез.ЗаказПоставщику;
				   нстр.Сумма = СуммаКПереносу;
				   нстр.СуммаОстаткаВалДт = СуммаКПереносу;
				   нстр.СуммаОстаткаДт = СуммаКПереносу*курс;
				   нстр.СуммаУпр =  СуммаКПереносу*курс;
				   нстр.Комментарий = "Корректировка долга на недогруз/перегруз";
				   
			   КонецЦикла;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Доступность=ложь;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСоздатьКорректировку.Доступность=истина;
КонецПроцедуры

Функция НайтиДоговорПоНаименованию(Контрагент, подстрока)
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ДоговорыКонтрагентов.Ссылка
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Владелец = &Контрагент
	               |	И ДоговорыКонтрагентов.Наименование ПОДОБНО &Наименование";
				   Запрос.УстановитьПараметр("Контрагент",Контрагент);
				   Запрос.УстановитьПараметр("Наименование",подстрока);
				   Рез = Запрос.Выполнить().Выбрать();
				   Пока рез.Следующий() Цикл
					   Возврат рез.Ссылка;
				   КонецЦикла;
				   Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
КонецФункции

 Процедура ОсновныеДействияФормыкнСоздатьКорректировку(Кнопка)
	 ДокКорректировка = Документы.КорректировкаДолга.СоздатьДокумент();
	 ДокКорректировка.Контрагент = Контрагент;
	 ДокКорректировка.Организация = Справочники.Организации.НайтиПоКоду("00001");
     ДокКорректировка.ОтражатьВУправленческомУчете = истина;
	 ДокКорректировка.Комментарий =  "Перегрузы/недогрузы";
	 Для каждого Заказ из Заказы Цикл
		 
		 Если Найти(нрег(Заказ.ДоговорКт.Наименование),"перегруз")>0 тогда
			 нстр = ДокКорректировка.СуммыДолга.Добавить();
			 нстр.ДоговорКонтрагента = Заказ.ДоговорДт;
			 нстр.КратностьВзаиморасчетов=1;
			 нстр.КурсВзаиморасчетов = Заказ.СуммаУпр/Заказ.Сумма;
			 нстр.Сделка = Заказ.ЗаказДт;
			 нстр.УвеличениеДолгаКонтрагента = Заказ.Сумма;
			 нстр.УвеличениеДолгаКонтрагентаУпр = Заказ.СуммаУпр;
			 
			 нстр = ДокКорректировка.СуммыДолга.Добавить();
			 нстр.ДоговорКонтрагента = Заказ.ДоговорКт;
			 нстр.КратностьВзаиморасчетов=1;
			 нстр.КурсВзаиморасчетов = Заказ.СуммаУпр/Заказ.Сумма;
			 нстр.УменьшениеДолгаКонтрагента = Заказ.Сумма;
			 нстр.УменьшениеДолгаКонтрагентаУпр = Заказ.СуммаУпр;
		 ИначеЕсли Найти(нрег(Заказ.ДоговорДт.Наименование),"недогруз")>0 тогда
			 нстр = ДокКорректировка.СуммыДолга.Добавить();
			 нстр.ДоговорКонтрагента = Заказ.ДоговорДт;
			 нстр.КратностьВзаиморасчетов=1;
			 нстр.КурсВзаиморасчетов = Заказ.СуммаУпр/Заказ.Сумма;
			 нстр.УвеличениеДолгаКонтрагента = Заказ.Сумма;
			 нстр.УвеличениеДолгаКонтрагентаУпр = Заказ.СуммаУпр;
			 
			 нстр = ДокКорректировка.СуммыДолга.Добавить();
			 нстр.ДоговорКонтрагента = Заказ.ДоговорКт;
			 нстр.КратностьВзаиморасчетов=1;
			  нстр.Сделка = Заказ.ЗаказДт;

			 нстр.КурсВзаиморасчетов = Заказ.СуммаУпр/Заказ.Сумма;
			 нстр.УменьшениеДолгаКонтрагента = Заказ.Сумма;
			 нстр.УменьшениеДолгаКонтрагентаУпр = Заказ.СуммаУпр;
		 КонецЕсли;
	 КонецЦикла;
	ДокКорректировка.ПолучитьФорму("ФормаДокумента").Открыть();
	 
КонецПроцедуры
