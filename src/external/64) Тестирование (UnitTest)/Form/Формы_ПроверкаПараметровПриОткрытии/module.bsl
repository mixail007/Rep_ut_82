
Функция СоздатьСтруктуру()
	Тест = Новый Структура;
	Тест.Вставить("Описание", ЭлементыФормы.Описание.ПолучитьТекст());
	Тест.Вставить("ПередОткрытием", ЭлементыФормы.ПТДПередОткрытием.ПолучитьТекст());
	Тест.Вставить("ПослеОткрытия", ЭлементыФормы.ПТДПослеОткрытия.ПолучитьТекст());
	Тест.Вставить("ПередЗакрытием", ЭлементыФормы.ПТДПередЗакрытием.ПолучитьТекст());
	Тест.Вставить("ПослеЗакрытия", ЭлементыФормы.ПТДПослеЗакрытия.ПолучитьТекст());
	Тест.Вставить("Реквизиты", РеквизитыФормы);
	Тест.Вставить("Форма", ТестоваяФорма);
	Тест.Вставить("Параметры", Параметры);
	Тест.Вставить("ОшибкаЕслиОткрыта", ОшибкаЕслиОткрыта);
	Тест.Вставить("ОшибкаЕслиЗакрыта", ОшибкаЕслиЗакрыта);
	Тест.Вставить("ОшибкаПриСовпадении", ОшибкаПриСовпадении);
	Тест.Вставить("ФормаРедактирования", "Формы_ПроверкаПараметровПриОткрытии");
	Возврат Тест;
КонецФункции

Процедура ЗаполнитьИзСтруктуры(Тест) Экспорт 
	Если Тест.Свойство("Описание") Тогда
		ЭлементыФормы.Описание.УстановитьТекст(Тест.Описание);
	КонецЕсли;
	
	Если Тест.Свойство("Форма") Тогда
		ТестоваяФорма = Тест.Форма;
	КонецЕсли;
	
	Если Тест.Свойство("Реквизиты") Тогда
		РеквизитыФормы = Тест.Реквизиты;
	КонецЕсли;
	
	
	Если Тест.Свойство("Параметры") Тогда
		Параметры = Тест.Параметры;
	КонецЕсли;
	
	Если Тест.Свойство("ПередОткрытием") Тогда
		ЭлементыФормы.ПТДПередОткрытием.УстановитьТекст(Тест.ПередОткрытием);
	КонецЕсли;
	
	Если Тест.Свойство("ПослеОткрытия") Тогда
		ЭлементыФормы.ПТДПослеОткрытия.УстановитьТекст(Тест.ПослеОткрытия);
	КонецЕсли;
	
	Если Тест.Свойство("ПередЗакрытием") Тогда
		ЭлементыФормы.ПТДПередЗакрытием.УстановитьТекст(Тест.ПередЗакрытием);
	КонецЕсли;
	
	Если Тест.Свойство("ПослеЗакрытия") Тогда
		ЭлементыФормы.ПТДПослеЗакрытия.УстановитьТекст(Тест.ПослеЗакрытия);
	КонецЕсли;

	Если Тест.Свойство("ОшибкаЕслиОткрыта") Тогда
		ОшибкаЕслиОткрыта = Тест.ОшибкаЕслиОткрыта;
	КонецЕсли;
	
	Если Тест.Свойство("ОшибкаЕслиЗакрыта") Тогда
		ОшибкаЕслиЗакрыта = Тест.ОшибкаЕслиЗакрыта;
	КонецЕсли;
	
	Если Тест.Свойство("ОшибкаПриСовпадении") Тогда
		ОшибкаПриСовпадении = Тест.ОшибкаПриСовпадении;
	КонецЕсли;
КонецПроцедуры

Функция СоздатьСтруктуруФ(Тип=Неопределено, Объект=Неопределено, Форма=Неопределено)
	Структура = Новый Структура("Тип, Объект, ИмяОбъекта, Форма, ИмяФормы");
	Структура.Тип = Тип;
	Структура.Объект = Объект;
	Если Объект <> Неопределено Тогда 
		Структура.ИмяОбъекта = ?(ПустаяСтрока(Объект.Синоним), Объект.Имя, Объект.Синоним);
	КонецЕсли;
	Если Тип("Строка") = ТипЗнч(Форма) Тогда
		Структура.Форма = Форма;
		Структура.ИмяФормы = Форма;
	Иначе
		Структура.Форма = Форма.ПолноеИмя();
		Структура.ИмяФормы = Форма;
	КонецЕсли;
	
	Возврат Структура;
КонецФункции

Процедура ИнициализацияСпискаФорм(Формы="Общие формы")
	СписокФорм.Очистить();
	Если Формы = "Общие формы" Тогда
		Для Каждого Форма Из Метаданные.ОбщиеФормы Цикл
			Структура = СоздатьСтруктуруФ("Общие формы",,Форма);
			СписокФорм.Добавить(Структура,Структура.ИмяФормы, Ложь);
		КонецЦикла;
	КонецЕсли;
	Если Формы = "Справочники" Тогда
		Для Каждого Справочник Из Метаданные.Справочники Цикл
			
			
			Структура = СоздатьСтруктуруФ("Справочники",Справочник,Справочник.ПолноеИмя() + ".ФормаОбъекта");  
			СписокФорм.Добавить(Структура,Структура.ИмяОбъекта + " форма объекта ", Ложь);

			Структура = СоздатьСтруктуруФ("Справочники",Справочник,Справочник.ПолноеИмя() + ".ФормаГруппы");  
			СписокФорм.Добавить(Структура,Структура.ИмяОбъекта + " форма группы", Ложь);

			Структура = СоздатьСтруктуруФ("Справочники",Справочник,Справочник.ПолноеИмя() + ".ФормаСписка");  
			СписокФорм.Добавить(Структура,Структура.ИмяОбъекта + " форма списка", Ложь);

			Структура = СоздатьСтруктуруФ("Справочники",Справочник,Справочник.ПолноеИмя() + ".ФормаВыбора");  
			СписокФорм.Добавить(Структура,Структура.ИмяОбъекта + " форма выбора", Ложь);

			Структура = СоздатьСтруктуруФ("Справочники",Справочник,Справочник.ПолноеИмя() + ".ФормаВыбораГруппы");  
			СписокФорм.Добавить(Структура,Структура.ИмяОбъекта + " форма выбора группы", Ложь);
			
			Для Каждого Форма Из Справочник.Формы Цикл
				Структура = СоздатьСтруктуруФ("Справочники",Справочник, Форма.ПолноеИмя());  
				СписокФорм.Добавить(Структура,Структура.ИмяОбъекта + " форма " + Структура.ИмяФормы, Ложь);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если Формы = "Документы" Тогда
		Для Каждого Документ Из Метаданные.Документы Цикл
			Для Каждого Форма Из Документ.Формы Цикл
				Структура = Новый Структура("Тип, Объект, ИмяОбъекта, Форма, ИмяФормы");
				Структура.Тип = "Документы";
				Структура.Объект = Документ.Имя;
				Структура.ИмяОбъекта = ?(ПустаяСтрока(Документ.Синоним), Документ.Имя, Документ.Синоним);
				Структура.Форма = Форма.ПолноеИмя();
				Структура.ИмяФормы = ?(ПустаяСтрока(Форма.Синоним),Форма.Имя,Форма.Синоним);
				СписокФорм.Добавить(Структура,Структура.ИмяОбъекта + " форма " + Структура.ИмяФормы, Ложь);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	СтандартныеРеквизитыФормы = Новый Массив;
	Структура = Новый Структура("Имя, Тип, Проверять, Значение");
	Структура.Имя = "АвтоЗаголовок";
	Структура.Проверять = Ложь;
	Структура.Тип = Новый ОписаниеТипов("Булево");
	Структура.Значение = Ложь;
	СтандартныеРеквизитыФормы.Добавить(Структура);
	Структура = Новый Структура("Имя, Тип, Проверять, Значение");
	Структура.Имя = "Высота";
	Структура.Проверять = Ложь;
	Структура.Тип = Тип("Число");
	Структура.Значение = 0;
	СтандартныеРеквизитыФормы.Добавить(Структура);
	Структура = Новый Структура("Имя, Тип, Проверять, Значение");
	Структура.Имя = "Заголовок";
	Структура.Проверять = Ложь;
	Структура.Тип = Новый ОписаниеТипов("Строка");
	Структура.Значение = "";
	СтандартныеРеквизитыФормы.Добавить(Структура);
	Структура = Новый Структура("Имя, Тип, Проверять, Значение");
	Структура.Имя = "ЗакрыватьПриВыборе";
	Структура.Проверять = Ложь;
	Структура.Тип = Новый ОписаниеТипов("Булево");
	Структура.Значение = Ложь;
	СтандартныеРеквизитыФормы.Добавить(Структура);
	Структура = Новый Структура("Имя, Тип, Проверять, Значение");
	Структура.Имя = "ЗакрыватьПриЗакрытииВладельца";
	Структура.Проверять = Ложь;
	Структура.Тип = Новый ОписаниеТипов("Булево");
	Структура.Значение = Ложь;
	СтандартныеРеквизитыФормы.Добавить(Структура);
	Структура = Новый Структура("Имя, Тип, Проверять, Значение");
	Структура.Имя = "ИзменениеРазмера";
	Структура.Проверять = Ложь;
	Структура.Тип = Новый ОписаниеТипов("Булево");
	Структура.Значение = Ложь;
	СтандартныеРеквизитыФормы.Добавить(Структура);
	Структура = Новый Структура("Имя, Тип, Проверять, Значение");
	Структура.Имя = "МножественныйВыбор";
	Структура.Проверять = Ложь;
	Структура.Тип = Новый ОписаниеТипов("Булево");
	Структура.Значение = Ложь;
	СтандартныеРеквизитыФормы.Добавить(Структура);
	Структура = Новый Структура("Имя, Тип, Проверять, Значение");
	Структура.Имя = "Модифицированность";
	Структура.Проверять = Ложь;
	Структура.Тип = Новый ОписаниеТипов("Булево");
	Структура.Значение = Ложь;
	СтандартныеРеквизитыФормы.Добавить(Структура);
	Структура = Новый Структура("Имя, Тип, Проверять, Значение");
	Структура.Имя = "Ширина";
	Структура.Проверять = Ложь;
	Структура.Тип = Новый ОписаниеТипов("Число");
	Структура.Значение = 0;
	СтандартныеРеквизитыФормы.Добавить(Структура);
КонецПроцедуры

Процедура ФормаНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Список = Новый СписокЗначений;
	Список.Добавить("Общие формы");
	Список.Добавить("Справочники");
	Список.Добавить("Документы");
	Результат = Список.ВыбратьЭлемент();
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИнициализацияСпискаФорм(Результат.Значение);
	Результат = СписокФорм.ВыбратьЭлемент();
	Если Результат <> Неопределено Тогда
		Структура = Результат.Значение;
		ТестоваяФорма = Структура.Форма;
		РеквизитыФормы.Очистить();
		Для Каждого ЭлементМассива Из СтандартныеРеквизитыФормы Цикл
			СтрокаРеквезит = РеквизитыФормы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРеквезит, ЭлементМассива);
		КонецЦикла;
		
		Форма = ПолучитьФорму(Структура.Форма);
		
		Для Каждого ЭлементФормы Из Форма.ЭлементыФормы Цикл
			ЭлементМассива = Новый Структура("Имя, Тип, Проверять, Значение, Элемент");
			ЭлементМассива.Имя = ЭлементФормы.Имя;
			ЭлементМассива.Проверять = Ложь;
			ЭлементМассива.Тип = ЭлементФормы.ТипЗначения;
			ЭлементМассива.Элемент = Истина;
			Попытка
				ЭлементМассива.Значение = ЭлементФормы.Значение;
			Исключение
				Продолжить;
			КонецПопытки;
			СтрокаРеквезит = РеквизитыФормы.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаРеквезит, ЭлементМассива);
		КонецЦикла;
		
		
	КонецЕсли;
КонецПроцедуры

Процедура РеквизитыФормыВычислятьПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.РеквизитыФормы.ТекущиеДанные;
	Если Элемент.Значение Тогда
		ТекСтрока.Значение = "";
	Иначе
		ТекСтрока.Значение = ТекСтрока.Тип.ПривестиЗначение();
	КонецЕсли;

КонецПроцедуры

Процедура ОсновныеДействияФормыСохранитьИЗакрыть(Кнопка)
	// Вставить содержимое обработчика.
	СтруктураТеста = СоздатьСтруктуру();
	Если МодальныйРежим Тогда 
		Закрыть(СтруктураТеста);
	Иначе
		СтрокаТеста.Описание = СтруктураТеста.Описание;
		СтрокаТеста.Тест = ЗначениеВСтрокуВнутр(СтруктураТеста);
		Закрыть(СтруктураТеста);
	КонецЕсли;
КонецПроцедуры

Процедура ПараметрыТипПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.Параметры.ТекущиеДанные;
	ТекСтрока.Значение = Элемент.Значение.ПривестиЗначение(ТекСтрока.Значение);
КонецПроцедуры


