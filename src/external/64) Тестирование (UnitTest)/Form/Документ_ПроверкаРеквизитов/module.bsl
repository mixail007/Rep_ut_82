Перем ТекущиеДанные, ВсеРеквизиты, ВсеТЧ;

Функция СоздатьСтруктуру()
	Тест = Новый Структура;
	Тест.Вставить("Описание", ЭлементыФормы.ОписаниеТеста.ПолучитьТекст());
	Тест.Вставить("ПередЗаполнением", ЭлементыФормы.ПТДПередЗаполнением.ПолучитьТекст());
	Тест.Вставить("Объект", Документ);
	Тест.Вставить("Реквизиты", Реквизиты);
	Тест.Вставить("ТабличныеЧасти", ТабличныеЧасти);
	Тест.Вставить("ОшибкаЕслиСовпадает", ОшибкаЕслиСовпадает);
	Тест.Вставить("Параметры", Параметры);
	Тест.Вставить("ФормаРедактирования", "Документ_ПроверкаРеквизитов");
	Возврат Тест;
КонецФункции

Процедура ЗаполнитьИзСтруктуры(Тест) Экспорт 
	Если Тест.Свойство("Описание") Тогда
		ЭлементыФормы.ОписаниеТеста.УстановитьТекст(Тест.Описание);
	КонецЕсли;
	
	Если Тест.Свойство("Объект") Тогда
		Документ = Тест.Объект;
		ДокументПриИзменении(ЭлементыФормы.Документ);
	КонецЕсли;
	
	Если Тест.Свойство("Реквизиты") Тогда
		Реквизиты = Тест.Реквизиты;
	КонецЕсли;
	
	Если Тест.Свойство("ТабличныеЧасти") Тогда
		ТабличныеЧасти = Тест.ТабличныеЧасти;
	КонецЕсли;
	
	Если Тест.Свойство("Параметры") Тогда
		Параметры = Тест.Параметры;
	КонецЕсли;
	
	Если Тест.Свойство("ПередЗаполнением") Тогда
		ЭлементыФормы.ПТДПередЗаполнением.УстановитьТекст(Тест.ПередЗаполнением);
	КонецЕсли;
	
	
	Если Тест.Свойство("ОшибкаЕслиСовпадает") Тогда
		ОшибкаЕслиСовпадает = Тест.ОшибкаЕслиСовпадает;
	КонецЕсли;
КонецПроцедуры
	
Процедура СохранитьТест(ЗапрашиватьИмяФайла=Ложь)
	Если ЗапрашиватьИмяФайла  ИЛИ ПустаяСтрока(ФайлТест) Тогда
	    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	    Диалог.ПолноеИмяФайла = ФайлТест;
	    Диалог.Каталог = Каталог;
	    Диалог.Заголовок = "Укажите файл для теста";
	    Диалог.Фильтр = "Файлы тестов (*.test)|*.test|Все файлы (*.*)|*.*";
	    Диалог.Расширение = "test";
	    Если Диалог.Выбрать() Тогда
	        ФайлТест = Диалог.ПолноеИмяФайла;
	        Каталог = Диалог.Каталог;
	    Иначе
	        Возврат;
	    КонецЕсли;
	КонецЕсли;
	ИмяФайла = ФайлТест;
	
	ЗначениеВФайл(ИмяФайла, СоздатьСтруктуру());
КонецПроцедуры

Процедура ОткрытьТест()
	Попытка
		Тест = ЗначениеИзФайла(ФайлТест);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;	
	
	ЗаполнитьИзСтруктуры(Тест);
КонецПроцедуры

Процедура ДокументНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	СписокЗначений = Новый СписокЗначений;
	Для Каждого МДокумент Из Метаданные.Документы Цикл
		СписокЗначений.Добавить(МДокумент.Имя, МДокумент.Синоним);
	КонецЦикла;
	ВыбЭлемент =  СписокЗначений.ВыбратьЭлемент();
	Если ВыбЭлемент <> Неопределено Тогда
		Массив = Новый Массив;
		Массив.Добавить(Тип("ДокументСсылка." + ВыбЭлемент.Значение));
		Документ = Новый ОписаниеТипов(Массив);
		ДокументПриИзменении(Элемент);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Реквизиты.Очистить();
	МД = Документ.ПривестиЗначение().Метаданные();
	Для Каждого Реквизит Из МД.СтандартныеРеквизиты Цикл
		Строка = Реквизиты.Добавить();
		Строка.Имя = Реквизит.Имя;
		Строка.Синоним = ?(ПустаяСтрока(Реквизит.Синоним),Реквизит.Имя,Реквизит.Синоним);
		Строка.Тип = Реквизит.Тип;
		Строка.Вычислять = Ложь;
		Строка.Значение = Реквизит.Тип.ПривестиЗначение();
	КонецЦикла;
	
	Для Каждого Реквизит Из МД.Реквизиты Цикл
		Строка = Реквизиты.Добавить();
		Строка.Имя = Реквизит.Имя;
		Строка.Синоним = ?(ПустаяСтрока(Реквизит.Синоним),Реквизит.Имя,Реквизит.Синоним);
		Строка.Тип = Реквизит.Тип;
		Строка.Вычислять = Ложь;
		Строка.Значение = Реквизит.Тип.ПривестиЗначение();
	КонецЦикла;
	
	
	Для Каждого ТЧ Из МД.ТабличныеЧасти Цикл
		СтрокаТЧ = ТабличныеЧасти.Строки.Добавить();
		СтрокаТЧ.Имя = ТЧ.Имя;
		СтрокаТЧ.Синоним = ?(ПустаяСтрока(ТЧ.Синоним),ТЧ.Имя,ТЧ.Синоним);

		//Строка.Тип = Реквизит.Тип;
		СтрокаТЧ.Вычислять = Ложь;
		//Строка.Значение = Реквизит.Тип.ПривестиЗначение();
		Для Каждого Реквизит Из ТЧ.Реквизиты Цикл
			Строка = СтрокаТЧ.Строки.Добавить();
			Строка.Имя = Реквизит.Имя;
			Строка.Синоним = ?(ПустаяСтрока(Реквизит.Синоним),Реквизит.Имя,Реквизит.Синоним);
			Строка.Тип = Реквизит.Тип;
			Строка.Вычислять = Ложь;
			Строка.Значение = Реквизит.Тип.ПривестиЗначение();
		КонецЦикла;
		СоздатьТаблицуДляЗаполнения(СтрокаТЧ);
	КонецЦикла;
КонецПроцедуры

Процедура ФормаДляЗаполненияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Элемент.СписокВыбора.Очистить();
	МД = Документ.ПривестиЗначение().Метаданные();
	Для Каждого МФорма ИЗ МД.Формы Цикл
		Элемент.СписокВыбора.Добавить(МФорма.Имя, МФорма.Синоним);
	КонецЦикла;
КонецПроцедуры

Процедура ТабличныеЧастиПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> ТекСтрока Тогда 
		Если ТекущиеДанные <> Неопределено Тогда
			Если ТекущиеДанные.Родитель = Неопределено Тогда
				Если ТекущиеДанные.Вычислять Тогда
					ТекущиеДанные.Значение = ЭлементыФормы.Запрос.ПолучитьТекст();
				Иначе
					ТекущиеДанные.Значение = ЗначениеВСтрокуВнутр(Таблица);
				КонецЕсли;
			Иначе 
				Если ТекущиеДанные.Родитель.Вычислять Тогда
					ТекущиеДанные.Родитель.Значение = ЭлементыФормы.Запрос.ПолучитьТекст();
				Иначе
					ТекущиеДанные.Родитель.Значение = ЗначениеВСтрокуВнутр(Таблица);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ТекущиеДанные = ТекСтрока;
		
		Если ТекущиеДанные <> Неопределено Тогда
			Если ТекущиеДанные.Родитель = Неопределено Тогда
				Если ТекущиеДанные.Вычислять Тогда
					ЭлементыФормы.Запрос.УстановитьТекст(ТекущиеДанные.Значение);
				Иначе
					Таблица = ЗначениеИзСтрокиВнутр(ТекущиеДанные.Значение);
					ЭлементыФормы.Таблица.СоздатьКолонки();
				КонецЕсли;
			Иначе 
				Если ТекущиеДанные.Родитель.Вычислять Тогда
					ЭлементыФормы.Запрос.УстановитьТекст(ТекущиеДанные.Родитель.Значение);
				Иначе
					Таблица = ЗначениеИзСтрокиВнутр(ТекущиеДанные.Родитель.Значение);
					ЭлементыФормы.Таблица.СоздатьКолонки();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ЭлементыФормы.Таблица.Видимость = Не ТекСтрока.Вычислять;
	ЭлементыФормы.КоманднаяПанель3.Видимость = Не ТекСтрока.Вычислять;
	ЭлементыФормы.Запрос.Видимость = ТекСтрока.Вычислять;
	ЭлементыФормы.КоманднаяПанельЗапрос.Видимость = ТекСтрока.Вычислять;
	
	
КонецПроцедуры

Процедура КоманднаяПанельЗапросКонструкторЗапроса(Кнопка)
	// Вставить содержимое обработчика.
	КонструкторЗапроса = Новый КонструкторЗапроса;
	КонструкторЗапроса.Текст = ЭлементыФормы.Запрос.ВыделенныйТекст;
	Если КонструкторЗапроса.ОткрытьМодально() Тогда
		ЭлементыФормы.Запрос.ВыделенныйТекст = КонструкторЗапроса.Текст;
	КонецЕсли;
КонецПроцедуры

Процедура СоздатьТаблицуДляЗаполнения(ТекСтрока)
	Если ТекСтрока.Родитель = Неопределено Тогда
		Если Не ТекСтрока.Вычислять Тогда
			Таблица.Очистить();
			Таблица.Колонки.Очистить();
		КонецЕсли;
		Для Каждого Строка Из ТекСтрока.Строки Цикл 
			Строка.Вычислять = ТекСтрока.Вычислять;
			Если Не ТекСтрока.Вычислять Тогда
				Таблица.Колонки.Добавить(Строка.Имя, Строка.Тип, Строка.Синоним);
			КонецЕсли;
		КонецЦикла;
		Если Не ТекСтрока.Вычислять Тогда
			ТекСтрока.Значение = ЗначениеВСтрокуВнутр(Таблица);
			ЭлементыФормы.Таблица.СоздатьКолонки();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ТабличныеЧастиВыражениеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.ТабличныеЧасти.ТекущиеДанные;
	СоздатьТаблицуДляЗаполнения(ТекСтрока);
	ТабличныеЧастиПриАктивизацииСтроки(ЭлементыФормы.ТабличныеЧасти)
КонецПроцедуры

Процедура РеквизитыЗначениеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.Реквизиты.ТекущиеДанные;
	Если ТекСтрока.Имя = "ЭтоГруппа" Тогда
		Если ТекСтрока.Значение Тогда
			УстановитьОтбор(Истина);
		Иначе
			УстановитьОтбор(Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОтбор(ДляГруппы)
	Если ВсеРеквизиты = Неопределено Тогда
		ВсеРеквизиты = Реквизиты.Скопировать();
	КонецЕсли;
	Если ВсеТЧ = Неопределено Тогда
		ВсеТЧ = ТабличныеЧасти.Скопировать();
	КонецЕсли;

	Строка = ВсеРеквизиты.Найти("ЭтоГруппа", "Имя");
	Если Строка <> Неопределено Тогда 
		Строка.Значение = ДляГруппы;
	КонецЕсли;
	
	
	Отбор = Новый Структура("Использование", "ДляГруппыИЭлемента");
	Реквизиты = ВсеРеквизиты.Скопировать(Отбор);
	Отбор.Использование = ?(ДляГруппы,"ДляГруппы","ДляЭлемента");
	ИРеквизиты = ВсеРеквизиты.Скопировать(Отбор);
	Для Каждого Р ИЗ ИРеквизиты Цикл
		Строка = Реквизиты.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Р);
	КонецЦикла;
	ТабличныеЧасти.Строки.Очистить();
	//*/Wont fix
	Для Каждого СтрокаДерева Из ВсеТЧ.Строки Цикл
		Если (СтрокаДерева.Использование = "ДляЭлемента" И Не ДляГруппы)
			ИЛИ (СтрокаДерева.Использование = "ДляГруппы" И ДляГруппы)
			Тогда
			Строка = ТабличныеЧасти.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, СтрокаДерева);
			Для Каждого Подстрока ИЗ СтрокаДерева.Строки Цикл 
				А = Строка.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(А, Подстрока);
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ПараметрыТипПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.Параметры.ТекущиеДанные;
	ТекСтрока.Значение = Элемент.Значение.ПривестиЗначение(ТекСтрока.Значение);
КонецПроцедуры

Процедура РеквизитыВыражениеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.Реквизиты.ТекущиеДанные;
	Если Элемент.Значение Тогда
		ТекСтрока.Значение = "";
	Иначе
		ТекСтрока.Значение = ТекСтрока.Тип.ПривестиЗначение();
	КонецЕсли;
КонецПроцедуры

Процедура РеквизитыЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.Реквизиты.ТекущиеДанные;
	Если ТекСтрока.Вычислять Тогда
		СтандартнаяОбработка = Ложь;
		Форма = ПолучитьФорму("Другое_ФормаВвода");
		Форма.Параметры = Параметры;
		Форма.ПараметрыТестов = ПараметрыТестов;
		Если Форма.Открыта() Тогда
			Форма.Закрыть();
		КонецЕсли;
		Описание = ПолучитьМакет("Макет_ВырожениеЗначения").ПолучитьТекст();
		Форма.ЭлементыФормы.Описание.УстановитьТекст(Описание);
		Форма.ЭлементыФормы.Код.УстановитьТекст(Элемент.Значение);
		Результат = Форма.ОткрытьМодально();
		Если Результат <> Неопределено Тогда
			Элемент.Значение = Результат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	Если Не ПустаяСтрока(ФайлТест) Тогда
		ОткрытьТест();
	КонецЕсли;
	
КонецПроцедуры


Процедура ОсновныеДействияФормыОткрыть(Кнопка)
	// Вставить содержимое обработчика.
    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    Диалог.ПолноеИмяФайла = ФайлТест;
    Диалог.Каталог = Каталог;
    Диалог.Заголовок = "Укажите файл для теста";
    Диалог.Фильтр = "Файлы тестов (*.test)|*.test|Все файлы (*.*)|*.*";
    Диалог.Расширение = "test";
    Если Диалог.Выбрать() Тогда
        ФайлТест = Диалог.ПолноеИмяФайла;
        Каталог = Диалог.Каталог;
    Иначе
        Возврат;
	КонецЕсли;
	ОткрытьТест();
КонецПроцедуры


Процедура ОсновныеДействияФормыСохранить(Кнопка)
	// Вставить содержимое обработчика.
	СохранитьТест();
КонецПроцедуры


Процедура ОсновныеДействияФормыСохранитьКак(Кнопка)
	// Вставить содержимое обработчика.
	СохранитьТест(Истина);
КонецПроцедуры


Процедура ОсновныеДействияФормыСохранитьИЗакрыть(Кнопка)
	// Вставить содержимое обработчика.
	СтруктураТеста = СоздатьСтруктуру();
	Если МодальныйРежим Тогда 
		Закрыть(СтруктураТеста);
	Иначе
		СтрокаТеста.Описание = СтруктураТеста.Описание;
		СтрокаТеста.Тест = ЗначениеВСтрокуВнутр(СтруктураТеста);
		Закрыть(СтруктураТеста);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель7ДобавитьВГлобальныеПараметры(Кнопка)
	// Вставить содержимое обработчика.
	Имя = "<Введите имя>";
	ВвестиСтроку(Имя);
	ЭлементыФормы.ПТДПослеЗаписи.ВыделенныйТекст = "ГлобальныеПараметры.Вставить(""" + Имя +""", Объект.Ссылка);";
	ЭлементыФормы.ОписаниеТеста.ДобавитьСтроку("После записи объект будет доступен как:");
	ЭлементыФормы.ОписаниеТеста.ДобавитьСтроку(Символы.Таб + "ГлобальныеПараметры." + Имя);
КонецПроцедуры


Процедура КоманднаяПанель5НайтиПоНомеру(Кнопка)
	ЭлементыФормы.ПТДПередЗаполнением.ВыделенныйТекст = "Ссылка = Документы." + Документ.ПривестиЗначение().Метаданные().Имя + ".НайтиПоНомеру(<НомерДокумента>, <ДатаИнтервала>);"
КонецПроцедуры


Процедура КоманднаяПанель5НайтипоРеквизиту(Кнопка)
	ЭлементыФормы.ПТДПередЗаполнением.ВыделенныйТекст = "Ссылка = Документы." + Документ.ПривестиЗначение().Метаданные().Имя + ".НайтиПоРеквизиту(<ИмяРеквизита>, <ЗначениеРеквизита>);"
КонецПроцедуры

