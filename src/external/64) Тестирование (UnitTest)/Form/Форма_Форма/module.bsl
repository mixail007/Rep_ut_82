Функция СоздатьСтруктуру()
	Тест = Новый Структура;
	Тест.Вставить("Описание", ЭлементыФормы.Описание.ПолучитьТекст());
	Тест.Вставить("Проверка", ЭлементыФормы.Проверка.ПолучитьТекст());
	Если Форма <> Неопределено
		И ТекущаяФорма <> Неопределено Тогда
		Если Вид <> Неопределено Тогда
			Тест.Вставить("Вид", Вид.ПолноеИмя());
		КонецЕсли;
		Если ТипЗнч(Форма) = Тип("Строка") Тогда
			Тест.Вставить("Форма", Форма);
		Иначе
			Тест.Вставить("Форма", Форма.ПолноеИмя());
		КонецЕсли;
	КонецЕсли;

	Тест.Вставить("ФормаРедактирования", "Форма_Форма");
	Возврат Тест;
КонецФункции

Процедура ЗаполнитьИзСтруктуры(Тест) Экспорт 
	Если Тест.Свойство("Описание") Тогда
		ЭлементыФормы.Описание.УстановитьТекст(Тест.Описание);
	КонецЕсли;
	Если Тест.Свойство("Проверка") Тогда
		ЭлементыФормы.Проверка.УстановитьТекст(Тест.Проверка);
	КонецЕсли;
	Если Тест.Свойство("Форма") Тогда
		ТекущаяФорма = ПолучитьФорму(Тест.Форма);
		Если Тест.Свойство("Вид") Тогда
			ВидСтр = Тест.Вид;
		Иначе
			ВидСтр = Неопределено;
		КонецЕсли;
	
		Если ВидСтр = Неопределено Тогда
			Тип = Метаданные.ОбщиеФормы;
		Иначе
			ПозТочки = Найти(ВидСтр, ".");
			Тип = Метаданные[ИменаМД[Лев(ВидСтр, ПозТочки - 1)]];
			ТипПриИзменении(ЭлементыФормы.Тип);
			Если Тест.Свойство("Вид") Тогда
				Вид = Метаданные.НайтиПоПолномуИмени(ВидСтр);
				ВидПриИзменении(ЭлементыФормы.Вид);
			КонецЕсли;
		КонецЕсли;
		Форма = Тест.Форма;
		ФормаПриИзменении(ЭлементыФормы.Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
	СтруктураТеста = СоздатьСтруктуру();
	Если МодальныйРежим Тогда 
		Закрыть(СтруктураТеста);
	Иначе
		СтрокаТеста.Описание = СтруктураТеста.Описание;
		СтрокаТеста.Тест = ЗначениеВСтрокуВнутр(СтруктураТеста);
		Закрыть(СтруктураТеста);
	КонецЕсли;
КонецПроцедуры

Процедура ТипПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Форма = Неопределено;
	Вид = Неопределено;
	ЭлементыФормы.Вид.СписокВыбора.Очистить();
	ЭлементыФормы.Форма.СписокВыбора.Очистить();
	Элементы.Строки.Очистить();
	Если Тип <> Неопределено Тогда
		Эл = ЭлементыФормы.Тип.СписокВыбора.НайтиПоЗначению(Тип);
		Если Эл <> Неопределено Тогда
			ЭлементыФормы.Тип.Картинка = Эл.Картинка;
		Конецесли;
		
		Попытка 
			Формы = Тип[0].Формы; 
			ВидимостьВид = Истина;
			СписокВыбора = ЭлементыФормы.Вид.СписокВыбора;
		Исключение
			ВидимостьВид = Ложь;
			СписокВыбора = ЭлементыФормы.Форма.СписокВыбора;
		КонецПопытки;
		ЭлементыФормы.Вид.Видимость = ВидимостьВид; 
		ЭлементыФормы.Надпись2.Видимость = ВидимостьВид;	
		Для Каждого Ф Из Тип Цикл
			СписокВыбора.Добавить(Ф,,,ЭлементыФормы.Тип.Картинка);
		КонецЦикла;
	Иначе
		ЭлементыФормы.Вид.Видимость = Ложь; 
		ЭлементыФормы.Надпись2.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ФормаНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если Тип <> Неопределено Тогда
		СписокВыбора = ЭлементыФормы.Форма.СписокВыбора;
		Результат = СписокВыбора.ВыбратьЭлемент("Форма", Форма);
		Если Результат <> Неопределено Тогда 
			Форма = Результат.Значение;
			ЭлементыФормы.Форма.Картинка = Результат.Картинка;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьКнопки(Кнопки, Строки)
	Для Каждого Кнопка Из Кнопки Цикл
		НоваяСтрокаКнопка = Строки.Добавить();
		НоваяСтрокаКнопка.Имя = Кнопка.Имя;
		НоваяСтрокаКнопка.Значение = Кнопка.Текст;
		Если НоваяСтрокаКнопка.Значение <> Неопределено Тогда
			НоваяСтрокаКнопка.Значение = НоваяСтрокаКнопка.Значение + "(" + Строка(Кнопка.Действие) + ")";
		КонецЕсли;
		
		Если Кнопка.Кнопки <> Неопределено Тогда
			ЗаполнитьКнопки(Кнопка.Кнопки, НоваяСтрокаКнопка.Строки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ФормаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если Форма <> Неопределено Тогда 
		Попытка
			Если ТипЗнч(Форма) = Тип("Строка") Тогда 
				ТекущаяФорма = ПолучитьФорму(Форма);
			Иначе
				ТекущаяФорма = ПолучитьФорму(Форма.ПолноеИмя());
			КонецЕсли;
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
		Для Каждого Строка Из ТекущаяФорма.ЭлементыФормы Цикл
			НоваяСтрока = Элементы.Строки.Добавить();
			НоваяСтрока.Имя = Строка.Имя;
			НоваяСтрока.Тип = Строка.ТипЗначения;
			Попытка
				НоваяСтрока.Значение = Строка.Значение;
			Исключение
				НоваяСтрока.Значение = Строка;
			КонецПопытки;
			Если ТипЗнч(Строка) = Тип("КоманднаяПанель") Тогда
				ЗаполнитьКнопки(Строка.Кнопки, НоваяСтрока.Строки)
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		Элементы.Строки.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура ВидПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Форма = Неопределено;
	СписокВыбора = ЭлементыФормы.Форма.СписокВыбора;
	СписокВыбора.Очистить();
	Если Вид <> Неопределено Тогда
		лФормы = СтандартныеФормы[Вид];
		Для Каждого Ф Из лФормы Цикл
			СписокВыбора.Добавить(Ф,,,БиблиотекаКартинок.Форма);
		КонецЦикла;
	КонецЕсли;
	Элементы.Строки.Очистить();
КонецПроцедуры

Процедура ВидНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если Тип <> Неопределено Тогда
		СписокВыбора = ЭлементыФормы.Вид.СписокВыбора;
		Результат = СписокВыбора.ВыбратьЭлемент("Форма", Форма);
		Если Результат <> Неопределено Тогда 
			Вид = Результат.Значение;
			ЭлементыФормы.Вид.Картинка = Результат.Картинка;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
КонецПроцедуры

ИменаМД = Новый Соответствие();
ИменаМД.Вставить("Справочник","Справочники");
ИменаМД.Вставить("Документ","Документы");
ИменаМД.Вставить("ЖурналДокументов","ЖурналыДокументов");
ИменаМД.Вставить("Перечисление","Перечисления");
ИменаМД.Вставить("Отчет","Отчеты");
ИменаМД.Вставить("Обработка","Обработки");
ИменаМД.Вставить("ПланВидовХарактеристик","ПланыВидовХарактеристик");
ИменаМД.Вставить("ПланСчетов","ПланыСчетов");
ИменаМД.Вставить("ПланВидовРасчета","ПланыВидовРасчета");
ИменаМД.Вставить("РегистрСведений","РегистрыСведений");
ИменаМД.Вставить("РегистрНакопления","РегистрыНакопления");
ИменаМД.Вставить("РегистрБухгалтерии","РегистрыБухгалтерии");
ИменаМД.Вставить("РегистрРасчета","РегистрыРасчета");
ИменаМД.Вставить("БизнесПроцесс","БизнесПроцессы");
ИменаМД.Вставить("Задача","Задачи");

СписокВыбора = ЭлементыФормы.Тип.СписокВыбора;

СписокВыбора.Добавить(Метаданные.ОбщиеФормы, "Общие формы", , БиблиотекаКартинок.Форма);
СписокВыбора.Добавить(Метаданные.Справочники, "Справочники", , БиблиотекаКартинок.СправочникОбъект);
СписокВыбора.Добавить(Метаданные.Документы, "Документы", , БиблиотекаКартинок.ДокументОбъект);
СписокВыбора.Добавить(Метаданные.ЖурналыДокументов, "Журналы документов", , БиблиотекаКартинок.ЖурналДокументов);
СписокВыбора.Добавить(Метаданные.Перечисления, "Перечисления", , БиблиотекаКартинок.Перечисление);
СписокВыбора.Добавить(Метаданные.Отчеты, "Отчеты", , БиблиотекаКартинок.Отчет);
СписокВыбора.Добавить(Метаданные.Обработки, "Обработки", , БиблиотекаКартинок.Обработка);
СписокВыбора.Добавить(Метаданные.ПланыВидовХарактеристик, "Планы видов характеристик", , БиблиотекаКартинок.ПланВидовХарактеристик);
СписокВыбора.Добавить(Метаданные.ПланыСчетов, "Планы счетов", , БиблиотекаКартинок.ПланСчетов);
СписокВыбора.Добавить(Метаданные.ПланыВидовРасчета, "Планы видов расчета", , БиблиотекаКартинок.ПланВидовРасчетаОбъект);
СписокВыбора.Добавить(Метаданные.РегистрыСведений, "Регистры сведений", , БиблиотекаКартинок.РегистрСведений);
СписокВыбора.Добавить(Метаданные.РегистрыНакопления, "Регистры накопления", , БиблиотекаКартинок.РегистрНакопления);
СписокВыбора.Добавить(Метаданные.РегистрыБухгалтерии, "Регистры бухгалтерии", , БиблиотекаКартинок.РегистрБухгалтерии);
СписокВыбора.Добавить(Метаданные.РегистрыРасчета, "Регистры расчета", , БиблиотекаКартинок.РегистрРасчета);
СписокВыбора.Добавить(Метаданные.БизнесПроцессы, "Бизнес процессы", , БиблиотекаКартинок.БизнесПроцесс);
СписокВыбора.Добавить(Метаданные.Задачи, "Задачи", , БиблиотекаКартинок.Задача);


СтандартныеФормы = Новый Соответствие;

СтандартныеФормы.Вставить(Метаданные.ОбщиеФормы, Неопределено);

Для Каждого Спр ИЗ Метаданные.Справочники Цикл
	Массив = Новый Массив;
	Массив.Добавить(Спр.ПолноеИмя() + ".ФормаОбъекта");
	Массив.Добавить(Спр.ПолноеИмя() + ".ФормаСписка");
	Массив.Добавить(Спр.ПолноеИмя() + ".ФормаВыбора");
	Если Спр.Иерархический Тогда
		Массив.Добавить(Спр.ПолноеИмя() + ".ФормаГруппы");
		Массив.Добавить(Спр.ПолноеИмя() + ".ФормаВыбораГруппы");
	КонецЕсли;
	Для Каждого Ф Из Спр.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Спр, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.Документы Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаОбъекта");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСписка");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаВыбора");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.ЖурналыДокументов Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаОбъекта");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.Перечисления Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаОбъекта");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.Отчеты Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".Форма");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаНастроек");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаВарианта");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаЗагрузкиПользовательскихНастроекОтчетов");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСохраненияПользовательскихНастроекОтчетов");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаЗагрузкиВариантовОтчетов");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСохраненияВариантовОтчетов");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.Обработки Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".Форма");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Спр ИЗ Метаданные.ПланыВидовХарактеристик Цикл
	Массив = Новый Массив;
	Массив.Добавить(Спр.ПолноеИмя() + ".ФормаОбъекта");
	Массив.Добавить(Спр.ПолноеИмя() + ".ФормаСписка");
	Массив.Добавить(Спр.ПолноеИмя() + ".ФормаВыбора");
	Если Спр.Иерархический Тогда
		Массив.Добавить(Спр.ПолноеИмя() + ".ФормаГруппы");
		Массив.Добавить(Спр.ПолноеИмя() + ".ФормаВыбораГруппы");
	КонецЕсли;
	Для Каждого Ф Из Спр.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Спр, Массив); 
КонецЦикла;

Для Каждого Спр ИЗ Метаданные.ПланыВидовРасчета Цикл
	Массив = Новый Массив;
	Массив.Добавить(Спр.ПолноеИмя() + ".ФормаОбъекта");
	Массив.Добавить(Спр.ПолноеИмя() + ".ФормаСписка");
	Массив.Добавить(Спр.ПолноеИмя() + ".ФормаВыбора");
	Для Каждого Ф Из Спр.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Спр, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.ПланыСчетов Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаОбъекта");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСписка");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаВыбора");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.РегистрыСведений Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаЗаписи");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСписка");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.РегистрыНакопления Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаЗаписи");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСписка");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.РегистрыРасчета Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаЗаписи");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСписка");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.РегистрыБухгалтерии Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаЗаписи");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСписка");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.БизнесПроцессы Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаОбъекта");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСписка");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаВыбора");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;

Для Каждого Док ИЗ Метаданные.Задачи Цикл
	Массив = Новый Массив;
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаОбъекта");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаСписка");
	Массив.Добавить(Док.ПолноеИмя() + ".ФормаВыбора");
	Для Каждого Ф Из Док.Формы Цикл
		Массив.Добавить(Ф);
	КонецЦикла;
	
	СтандартныеФормы.Вставить(Док, Массив); 
КонецЦикла;
