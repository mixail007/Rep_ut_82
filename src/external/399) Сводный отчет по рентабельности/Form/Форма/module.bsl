
Перем ТабТранспорт;
Перем ТабИМ;
Перем ТабФормула;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ТабличноеПоле1 = Новый ТаблицаЗначений();
	ТекCOMПодключение = Новый COMОбъект("V83.COMConnector");
	СтрокаПодключения = "Srvr = ""server:3041""; Ref = ""v83ib_zemvorob_bp"";Usr = ""Робот"";Pwd = ""09876""";
	ТекCOMОбъект = ТекCOMПодключение.Connect(СтрокаПодключения);
	
	Если ТекCOMОбъект<>неопределено тогда
		ТабличноеПоле2 = ТекCOMОбъект.NewObject("ТаблицаЗначений");
		ТабличноеПоле2 = ТекCOMОбъект.ОбщегоНазначения.ПолучитьИтогиТранспортПЛ(НачПериода,КонПериода);
		
		ТабличноеПоле1.Колонки.Очистить();
		для кол = 0 по ТабличноеПоле2.колонки.Количество()-1 цикл
			ТабличноеПоле1.Колонки.Добавить(ТабличноеПоле2.колонки.Получить(кол).Имя);
		КонецЦикла;
		
		для номСтр = 0 по ТабличноеПоле2.Количество()-1 цикл
			стр1 = ТабличноеПоле1.Добавить();
			ЗаполнитьЗначенияСвойств( стр1, ТабличноеПоле2.получить(номСтр) );
		КонецЦикла;
		// ТабличноеПоле1.ВыбратьСтроку();
		КС = Новый КвалификаторыСтроки(100);
		ТабТранспорт = Новый ТаблицаЗначений();
		ТабТранспорт.Колонки.Добавить("Производитель",Новый ОписаниеТипов("Строка",,КС));
		ТабТранспорт.Колонки.Добавить("Авто",Новый ОписаниеТипов("Строка",,КС));
		ТабТранспорт.Колонки.Добавить("Прибыль",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("Затраты",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("ФинРезультат",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("КоличествоПоездок",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("Пробег",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("ПрибыльНаКм",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("ЗатратыНаКм",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("ФинРезультатНаКМ",Новый ОписаниеТипов("Число"));
		
		для номСтр = 0 по ТабличноеПоле2.Количество()-1 цикл
			стр1 = ТабТранспорт.Добавить();
			ЗаполнитьЗначенияСвойств( стр1, ТабличноеПоле2.получить(номСтр) );
		КонецЦикла;
		//     ТабТранспорт.ВыбратьСтроку();
		
		ТабДок = ЭлементыФормы.ТабДок;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Таблица",ТабТранспорт);
		Запрос.Текст =
		"ВЫБРАТЬ
		| //Производитель, Авто, Прибыль,Затраты,ФинРезультат, КоличествоПоездок,Пробег, ПрибыльНаКМ, ЗатратыНаКМ,ФинРезультатНаКМ
		| Таблица.*
		|ПОМЕСТИТЬ Таблица
		|ИЗ
		| &Таблица КАК Таблица
		| ;
		|  ВЫБРАТЬ Производитель, Авто, Прибыль,Затраты,ФинРезультат, КоличествоПоездок,Пробег, ПрибыльНаКМ, ЗатратыНаКМ,ФинРезультатНаКМ ИЗ Таблица
		| ИТОГИ СУММА(Прибыль), СУММА(Затраты), СУММА(ФинРезультат),     СУММА(КоличествоПоездок),СУММА(Пробег), 
		| ВЫБОР КОГДА СУММА (Пробег)>0 ТОГДА СУММА(Прибыль)/ СУММА (Пробег) ИНАЧЕ 0 КОНЕЦ ПрибыльНаКМ, 
		|  ВЫБОР КОГДА СУММА (Пробег)>0 ТОГДА СУММА(Затраты)/ СУММА (Пробег) ИНАЧЕ 0 КОНЕЦ ЗатратыНаКМ, 
		| ВЫБОР КОГДА СУММА (Пробег)>0 ТОГДА СУММА(ФинРезультат)/ СУММА (Пробег) ИНАЧЕ 0 КОНЕЦ ФинРезультатНаКМ
		| ПО  ОБЩИЕ, Производитель";
		
		Макет = ПолучитьМакет("Отчет");
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщийИтогТранспорт");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыТранспорт");
		
		ОбластьЗаголовок.Параметры.ТипОтчета = " по транспорту за " + ПредставлениеПериода(Начпериода, КонецДня(КонПериода));
		
		ТабДок.Очистить();
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		Результат = Запрос.Выполнить();
		ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаОбщийИтог.Следующий();		// Общий итог
		
		ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
		ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень(),,Ложь);
		
		
		ВыборкаПроизводитель=ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПроизводитель.Следующий() Цикл
			ОбластьПроизводительТранспорт = Макет.ПолучитьОбласть("ПроизводительТранспорт");
			ОбластьПроизводительТранспорт.Параметры.Заполнить(ВыборкаПроизводитель);
			ТабДок.Вывести(ОбластьПроизводительТранспорт, ВыборкаПроизводитель.Уровень());
			
			ВыборкаАвто = ВыборкаПроизводитель.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока ВыборкаАвто.Следующий() Цикл
				ОбластьДеталиТранспорт = Макет.ПолучитьОбласть("ДеталиТранспорт");
				ОбластьДеталиТранспорт.Параметры.Заполнить(ВыборкаАвто);
				ТабДок.Вывести(ОбластьДеталиТранспорт,ВыборкаАвто.Уровень());
				
			КонецЦикла;
		КонецЦикла;  
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		ТабДок.ПоказатьУровеньГруппировокСтрок(1);
	КонецЕсли;
	
	
	// Интернет магазин
	
	//	 ТабличноеПоле1 = Новый ТаблицаЗначений();
	//ТекCOMПодключение = Новый COMОбъект("V82.COMConnector");
	//СтрокаПодключения = "Srvr = ""sigma:2041""; Ref = ""v82ib_fedunov_ut"";Usr = ""Лапенков"";Pwd = ""wd89Soil""";
	//ТекCOMОбъект = ТекCOMПодключение.Connect(СтрокаПодключения);
	
	//Если ТекCOMОбъект<>неопределено тогда
	// ТабличноеПоле2 = ТекCOMОбъект.NewObject("ТаблицаЗначений");
	// ТабличноеПоле2 = ТекCOMОбъект.ИнтернетМагазин.ПолучитьИтогиАЭ(НачПериода,КонПериода);
	// 
	// ТабличноеПоле1.Колонки.Очистить();
	// для кол = 0 по ТабличноеПоле2.колонки.Количество()-1 цикл
	//	ТабличноеПоле1.Колонки.Добавить(ТабличноеПоле2.колонки.Получить(кол).Имя);
	//	КонецЦикла;
	// 
	// для номСтр = 0 по ТабличноеПоле2.Количество()-1 цикл
	// стр1 = ТабличноеПоле1.Добавить();
	// ЗаполнитьЗначенияСвойств( стр1, ТабличноеПоле2.получить(номСтр) );
	// КонецЦикла;
	//		//   ТабличноеПоле1.ВыбратьСтроку();
	//		
	//	КонецЕсли;	
	//	
	//	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//	ОбластьЗаголовок.Параметры.ТипОтчета = " по интернет-магазину за " + ПредставлениеПериода(Начпериода, КонецДня(КонПериода));
	//	 ТабДок.Вывести(ОбластьЗаголовок);
	
	//	   ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыИМ");
	//  ТабДок.Вывести(ОбластьШапкаТаблицы);
	//  
	//  ОбластьДетали = Макет.ПолучитьОбласть("ДеталиИМ");
	//  
	//  Для каждого строка Из ТабличноеПоле1 Цикл
	//	  ОбластьДетали.Параметры[строка.Показатель]=строка.Значение;
	//  КонецЦикла;	  
	//  Если НЕ ЗначениеНеЗаполнено(ОбластьДетали.Параметры.Посещения) И Число(ОбластьДетали.Параметры.Посещения)>0 Тогда
	//			Посещения=Число(ОбластьДетали.Параметры.Посещения);
	//  Конецесли;
	//		
	//  ОбластьДетали.Параметры.К1 = Число( ОбластьДетали.Параметры.заказы_всего_колво)*100	/Посещения;
	//  ОбластьДетали.Параметры.К2 =	Число( ОбластьДетали.Параметры.заказы_отгруженные_колво)*100/ Посещения ;
	//  ОбластьДетали.Параметры.К3 =	Число( ОбластьДетали.Параметры.заказы_выполненные_колво)*100/ Посещения ;
	//  ОбластьДетали.Параметры.ФинРезультат = 0;
	//	 ТабДок.Вывести(ОбластьДетали);
	
	
	//Формула
	
	ТабличноеПоле1 = Новый ТаблицаЗначений();
	ТекCOMПодключение = Новый COMОбъект("V82.COMConnector");
	СтрокаПодключения = "Srvr = ""sigma:2041""; Ref = ""v82ib_formula_ut"";Usr = ""Лапенков"";Pwd = ""wd89Soil""";
	ТекCOMОбъект = ТекCOMПодключение.Connect(СтрокаПодключения);
	
	Если ТекCOMОбъект <> неопределено тогда
		ТабличноеПоле2 = ТекCOMОбъект.NewObject("ТаблицаЗначений");
		ТабличноеПоле2 = ТекCOMОбъект.ПолучитьИтогиФормула(НачПериода,КонПериода);
		
		ТабличноеПоле1.Колонки.Очистить();
		для кол = 0 по ТабличноеПоле2.колонки.Количество()-1 цикл
			ТабличноеПоле1.Колонки.Добавить(ТабличноеПоле2.колонки.Получить(кол).Имя);
		КонецЦикла;
		
		для номСтр = 0 по ТабличноеПоле2.Количество()-1 цикл
			стр1 = ТабличноеПоле1.Добавить();
			ЗаполнитьЗначенияСвойств( стр1, ТабличноеПоле2.получить(номСтр) );
		КонецЦикла;
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.ТипОтчета = " по сервису Формула за " + ПредставлениеПериода(Начпериода, КонецДня(КонПериода));
		ТабДок.Вывести(ОбластьЗаголовок);
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыФормула");
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		
		Для каждого строкаТЗ ИЗ ТабличноеПоле1 ЦИкл
			ОбластьДетали = Макет.ПолучитьОбласть("ДеталиФормула");
			
			ОбластьДетали.Параметры.Заполнить(строкаТЗ);
			ОбластьДетали.Параметры.ОборотИтого = строкаТЗ.ОборотТовары+ строкаТЗ.ОборотУслугиСТОШиномонтаж;
			ОбластьДетали.Параметры.ВаловаяНаценкаИтого = строкаТЗ.ВаловаяНаценкаНаТовары+ строкаТЗ.ОборотУслугиСТОШиномонтаж;
			
			Если (строкаТЗ.КоличествоПостов>0) Тогда
				ОбластьДетали.Параметры.ПодразделениеНаименование=ОбластьДетали.Параметры.ПодразделениеНаименование+ "( постов "+Строка(строкаТЗ.КоличествоПостов) +")";
				ОбластьДетали.Параметры.ВалЗапчасти1Пост=строкаТЗ.ВаловаяНаценкаНаТовары/строкаТЗ.КоличествоПостов/строкаТЗ.ЧислоДнейВПериоде;
				ОбластьДетали.Параметры.ВалУслуги1Пост=строкаТЗ.ОборотУслугиСТОШиномонтаж/строкаТЗ.КоличествоПостов/строкаТЗ.ЧислоДнейВПериоде;
				ОбластьДетали.Параметры.ВалИтого1Пост=(строкаТЗ.ВаловаяНаценкаНаТовары+строкаТЗ.ОборотУслугиСТОШиномонтаж)/строкаТЗ.КоличествоПостов/строкаТЗ.ЧислоДнейВПериоде;
			КонецЕсли;
			
			// ОбластьДетали.Параметры.Затраты = строкаТЗ.ЗатратыФОТ+ строкаТЗ.ПрочиеЗатраты;
			//  ОбластьДетали.Параметры.ФинРезультат =строкаТЗ.ВаловаяНаценкаНаЗапчасти+строкаТЗ.ОборотУслугиСТОШиномонтаж-строкаТЗ.ЗатратыФОТ- строкаТЗ.ПрочиеЗатраты;
			ТабДок.Вывести(ОбластьДетали);
		КонецЦикла; 
		
		//графики по валовой прибыли на 1 пост
		
		ТабличноеПоле3 = ТекCOMОбъект.NewObject("ТаблицаЗначений");
		ТабличноеПоле3 = ТекCOMОбъект.ПолучитьДанныеДляГрафиковФормула(НачПериода,КонПериода);
		ТабЗнач = Новый ТаблицаЗначений;
		
		//из таблицы сом-объекта в привычную таблицу значений
		Для кол = 0 по ТабличноеПоле3.Колонки.Количество()-1 Цикл
			ТабЗнач.Колонки.Добавить(ТабличноеПоле3.Колонки.Получить(кол).Имя);
		КонецЦикла;
		для номСтр = 0 по ТабличноеПоле3.Количество()-1 Цикл
			стр1 = ТабЗнач.Добавить();
			ЗаполнитьЗначенияСвойств(стр1, ТабличноеПоле3.получить(номСтр));
		КонецЦикла;
		
		ТабДанных = Новый ТаблицаЗначений;
		ТабДанных.Колонки.Добавить("Период");
		ТабДанных.Колонки.Добавить("ВыработкаНаПост");
		ТабДанных.Колонки.Добавить("ПредВыработкаНаПост");
		ТабДанных.Колонки.Добавить("ПредПредВыработкаНаПост");
		
		//Выводится Итого по всем подразделениям
		Отбор = Новый Структура();
		Отбор.Вставить("Подразделение", NULL);
		МассивСтрокИтого = ТабЗнач.НайтиСтроки(Отбор);
		
		Если МассивСтрокИтого.Количество() > 0 Тогда
			Для каждого СтрТЗ ИЗ МассивСтрокИтого Цикл
				НоваяСтрока = ТабДанных.Добавить();
				Если СтрТЗ.ТипПериода = 1 Тогда // Текущий период
					НоваяСтрока.Период		      = СтрТЗ.Период;
					НоваяСтрока.ВыработкаНаПост	  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				ИначеЕсли СтрТЗ.ТипПериода = 2 Тогда // Предыдущий период -1 год
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,12);
					НоваяСтрока.ПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				ИначеЕсли СтрТЗ.ТипПериода = 3 Тогда // -2 года
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,24);
					НоваяСтрока.ПредПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				КонецЕсли;
			КонецЦикла;
			ТабДанных.Свернуть("Период", "ВыработкаНаПост,ПредВыработкаНаПост,ПредПредВыработкаНаПост");
			ТабДанных.Сортировать("Период");
			
			
			Секция = Макет.ПолучитьОбласть("ПродажиИПоступления");
			Секция.Параметры.Заголовок = "Валовая прибыль на один пост Итого";
			Диаграмма = Секция.Рисунки.ГрафикМесяц.Объект;
			Диаграмма.Очистить();
			
			НомерТочки = 0;
			
			СтрокаТекущийПериод  =ПредставлениеПериода(НачалоГода(НачПериода),КонецГода(КонПериода),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаТекущийПериод);
			СтрокаПредПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -12), ДобавитьМесяц(КонецГода(КонПериода), -12),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаПредПериод);
			СтрокаАналогПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -24), ДобавитьМесяц(КонецГода(КонПериода), -24),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаАналогПериод);
			
			НомСтроки = 0;
			Для Каждого СтрокаТЗ Из ТабДанных Цикл
				Если НЕ СтрокаТЗ.ВыработкаНаПост = 0 Тогда
					ТекущееЗначение = СтрокаТЗ.ВыработкаНаПост;
				КонецЕсли;
				Диаграмма.Точки.Добавить(Формат(СтрокаТЗ.Период, "ДФ=ММММ"));
				НомСерии = 0;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, ?(СтрокаТЗ.ВыработкаНаПост = 0, ТекущееЗначение, СтрокаТЗ.ВыработкаНаПост));    //кривая застывает на текущем уровне до конца года
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредВыработкаНаПост);
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредПредВыработкаНаПост);
				НомСтроки = НомСтроки + 1;
			КонецЦикла;
			ТабДок.Вывести(Секция);
			
		КонецЕсли;
			
		//СТО ГАЗ
		Отбор = Новый Структура();
		Отбор.Вставить("Подразделение", "СТО ГАЗ");
		МассивСтрокИтого = ТабЗнач.НайтиСтроки(Отбор);
		
		ТабДанных.Очистить();
		
		Если МассивСтрокИтого.Количество() > 0 Тогда
			Для каждого СтрТЗ ИЗ МассивСтрокИтого Цикл
				НоваяСтрока = ТабДанных.Добавить();
				Если СтрТЗ.ТипПериода = 1 Тогда // Текущий период
					НоваяСтрока.Период		      = СтрТЗ.Период;
					НоваяСтрока.ВыработкаНаПост	  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				ИначеЕсли СтрТЗ.ТипПериода = 2 Тогда // Предыдущий период -1 год
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,12);
					НоваяСтрока.ПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				ИначеЕсли СтрТЗ.ТипПериода = 3 Тогда // -2 года
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,24);
					НоваяСтрока.ПредПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				КонецЕсли;
			КонецЦикла;
			ТабДанных.Свернуть("Период", "ВыработкаНаПост,ПредВыработкаНаПост,ПредПредВыработкаНаПост");
			ТабДанных.Сортировать("Период");
			
			
			Секция = Макет.ПолучитьОбласть("ПродажиИПоступления");
			Секция.Параметры.Заголовок = "СТО ГАЗ: Валовая прибыль на один пост";
			Диаграмма = Секция.Рисунки.ГрафикМесяц.Объект;
			Диаграмма.Очистить();
			
			НомерТочки = 0;
			
			СтрокаТекущийПериод  =ПредставлениеПериода(НачалоГода(НачПериода),КонецГода(КонПериода),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаТекущийПериод);
			СтрокаПредПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -12), ДобавитьМесяц(КонецГода(КонПериода), -12),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаПредПериод);
			СтрокаАналогПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -24), ДобавитьМесяц(КонецГода(КонПериода), -24),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаАналогПериод);
			
			НомСтроки = 0;
			Для Каждого СтрокаТЗ Из ТабДанных Цикл
				Если НЕ СтрокаТЗ.ВыработкаНаПост = 0 Тогда
					ТекущееЗначение = СтрокаТЗ.ВыработкаНаПост;
				КонецЕсли;
				Диаграмма.Точки.Добавить(Формат(СтрокаТЗ.Период, "ДФ=ММММ"));
				НомСерии = 0;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, ?(СтрокаТЗ.ВыработкаНаПост = 0, ТекущееЗначение, СтрокаТЗ.ВыработкаНаПост));    //кривая застывает на текущем уровне до конца года
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредВыработкаНаПост);
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредПредВыработкаНаПост);
				НомСтроки = НомСтроки + 1;
			КонецЦикла;
			ТабДок.Вывести(Секция);
			
		КонецЕсли;
		
		//СТО-2
		Отбор = Новый Структура();
		Отбор.Вставить("Подразделение", "СТО-2");
		МассивСтрокИтого = ТабЗнач.НайтиСтроки(Отбор);
		
		ТабДанных.Очистить();
		
		Если МассивСтрокИтого.Количество() > 0 Тогда
			Для каждого СтрТЗ ИЗ МассивСтрокИтого Цикл
				НоваяСтрока = ТабДанных.Добавить();
				Если СтрТЗ.ТипПериода = 1 Тогда // Текущий период
					НоваяСтрока.Период		      = СтрТЗ.Период;
					НоваяСтрока.ВыработкаНаПост	  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				ИначеЕсли СтрТЗ.ТипПериода = 2 Тогда // Предыдущий период -1 год
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,12);
					НоваяСтрока.ПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				ИначеЕсли СтрТЗ.ТипПериода = 3 Тогда // -2 года
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,24);
					НоваяСтрока.ПредПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				КонецЕсли;
			КонецЦикла;
			ТабДанных.Свернуть("Период", "ВыработкаНаПост,ПредВыработкаНаПост,ПредПредВыработкаНаПост");
			ТабДанных.Сортировать("Период");
			
			
			Секция = Макет.ПолучитьОбласть("ПродажиИПоступления");
			Секция.Параметры.Заголовок = "СТО-2: Валовая прибыль на один пост";
			Диаграмма = Секция.Рисунки.ГрафикМесяц.Объект;
			Диаграмма.Очистить();
			
			НомерТочки = 0;
			
			СтрокаТекущийПериод  =ПредставлениеПериода(НачалоГода(НачПериода),КонецГода(КонПериода),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаТекущийПериод);
			СтрокаПредПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -12), ДобавитьМесяц(КонецГода(КонПериода), -12),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаПредПериод);
			СтрокаАналогПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -24), ДобавитьМесяц(КонецГода(КонПериода), -24),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаАналогПериод);
			
			НомСтроки = 0;
			Для Каждого СтрокаТЗ Из ТабДанных Цикл
				Если НЕ СтрокаТЗ.ВыработкаНаПост = 0 Тогда
					ТекущееЗначение = СтрокаТЗ.ВыработкаНаПост;
				КонецЕсли;
				Диаграмма.Точки.Добавить(Формат(СтрокаТЗ.Период, "ДФ=ММММ"));
				НомСерии = 0;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, ?(СтрокаТЗ.ВыработкаНаПост = 0, ТекущееЗначение, СтрокаТЗ.ВыработкаНаПост));    //кривая застывает на текущем уровне до конца года
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредВыработкаНаПост);
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредПредВыработкаНаПост);
				НомСтроки = НомСтроки + 1;
			КонецЦикла;
			ТабДок.Вывести(Секция);
			
		КонецЕсли;

		//СТО-3
		Отбор = Новый Структура();
		Отбор.Вставить("Подразделение", "СТО-3");
		МассивСтрокИтого = ТабЗнач.НайтиСтроки(Отбор);
		
		ТабДанных.Очистить();
		
		Если МассивСтрокИтого.Количество() > 0 Тогда
			Для каждого СтрТЗ ИЗ МассивСтрокИтого Цикл
				НоваяСтрока = ТабДанных.Добавить();
				Если СтрТЗ.ТипПериода = 1 Тогда // Текущий период
					НоваяСтрока.Период		      = СтрТЗ.Период;
					НоваяСтрока.ВыработкаНаПост	  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				ИначеЕсли СтрТЗ.ТипПериода = 2 Тогда // Предыдущий период -1 год
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,12);
					НоваяСтрока.ПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				ИначеЕсли СтрТЗ.ТипПериода = 3 Тогда // -2 года
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,24);
					НоваяСтрока.ПредПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
				КонецЕсли;
			КонецЦикла;
			ТабДанных.Свернуть("Период", "ВыработкаНаПост,ПредВыработкаНаПост,ПредПредВыработкаНаПост");
			ТабДанных.Сортировать("Период");
			
			
			Секция = Макет.ПолучитьОбласть("ПродажиИПоступления");
			Секция.Параметры.Заголовок = "СТО-3: Валовая прибыль на один пост";
			Диаграмма = Секция.Рисунки.ГрафикМесяц.Объект;
			Диаграмма.Очистить();
			
			НомерТочки = 0;
			
			СтрокаТекущийПериод  =ПредставлениеПериода(НачалоГода(НачПериода),КонецГода(КонПериода),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаТекущийПериод);
			СтрокаПредПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -12), ДобавитьМесяц(КонецГода(КонПериода), -12),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаПредПериод);
			СтрокаАналогПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -24), ДобавитьМесяц(КонецГода(КонПериода), -24),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаАналогПериод);
			
			НомСтроки = 0;
			Для Каждого СтрокаТЗ Из ТабДанных Цикл
				Если НЕ СтрокаТЗ.ВыработкаНаПост = 0 Тогда
					ТекущееЗначение = СтрокаТЗ.ВыработкаНаПост;
				КонецЕсли;
				Диаграмма.Точки.Добавить(Формат(СтрокаТЗ.Период, "ДФ=ММММ"));
				НомСерии = 0;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, ?(СтрокаТЗ.ВыработкаНаПост = 0, ТекущееЗначение, СтрокаТЗ.ВыработкаНаПост));    //кривая застывает на текущем уровне до конца года
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредВыработкаНаПост);
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредПредВыработкаНаПост);
				НомСтроки = НомСтроки + 1;
			КонецЦикла;
			ТабДок.Вывести(Секция);
			
		КонецЕсли;
		
		//СТО-4
		Отбор = Новый Структура();
		Отбор.Вставить("Подразделение", "СТО-4");
		МассивСтрокИтого = ТабЗнач.НайтиСтроки(Отбор);
		
		ТабДанных.Очистить();
		
		Если МассивСтрокИтого.Количество() > 0 Тогда
			Для каждого СтрТЗ ИЗ МассивСтрокИтого Цикл
				НоваяСтрока = ТабДанных.Добавить();
				Если СтрТЗ.ТипПериода = 1 Тогда // Текущий период
					НоваяСтрока.Период		      = СтрТЗ.Период;
					Если СтрТЗ.КоличествоПостов = 0 или День(КонецМесяца(СтрТЗ.Период))=0 тогда 
						НоваяСтрока.ВыработкаНаПост=0 ;
					иначе
						НоваяСтрока.ВыработкаНаПост	  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
					КонецЕсли;
				ИначеЕсли СтрТЗ.ТипПериода = 2 Тогда // Предыдущий период -1 год
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,12);
					Если СтрТЗ.КоличествоПостов = 0 или День(КонецМесяца(СтрТЗ.Период))=0 тогда 
						НоваяСтрока.ВыработкаНаПост=0 ;
					иначе	
						НоваяСтрока.ПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
					КонецЕсли;
				ИначеЕсли СтрТЗ.ТипПериода = 3 Тогда // -2 года
					НоваяСтрока.Период  		     = ДобавитьМесяц(СтрТЗ.Период,24);
					
					Если СтрТЗ.КоличествоПостов = 0 или День(КонецМесяца(СтрТЗ.Период))=0 тогда 
						НоваяСтрока.ВыработкаНаПост=0 ;
					иначе	
						НоваяСтрока.ПредПредВыработкаНаПост  = Окр(СтрТЗ.ВаловаяНаценка / СтрТЗ.КоличествоПостов / День(КонецМесяца(СтрТЗ.Период)));
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ТабДанных.Свернуть("Период", "ВыработкаНаПост,ПредВыработкаНаПост,ПредПредВыработкаНаПост");
			ТабДанных.Сортировать("Период");
			
			
			Секция = Макет.ПолучитьОбласть("ПродажиИПоступления");
			Секция.Параметры.Заголовок = "СТО-4: Валовая прибыль на один пост";
			Диаграмма = Секция.Рисунки.ГрафикМесяц.Объект;
			Диаграмма.Очистить();
			
			НомерТочки = 0;
			
			СтрокаТекущийПериод  =ПредставлениеПериода(НачалоГода(НачПериода),КонецГода(КонПериода),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаТекущийПериод);
			СтрокаПредПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -12), ДобавитьМесяц(КонецГода(КонПериода), -12),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаПредПериод);
			СтрокаАналогПериод = ПредставлениеПериода(ДобавитьМесяц(НачалоГода(НачПериода), -24), ДобавитьМесяц(КонецГода(КонПериода), -24),"ФП=Истина");
			Диаграмма.Серии.Добавить(СтрокаАналогПериод);
			
			НомСтроки = 0;
			Для Каждого СтрокаТЗ Из ТабДанных Цикл
				Если НЕ СтрокаТЗ.ВыработкаНаПост = 0 Тогда
					ТекущееЗначение = СтрокаТЗ.ВыработкаНаПост;
				КонецЕсли;
				Диаграмма.Точки.Добавить(Формат(СтрокаТЗ.Период, "ДФ=ММММ"));
				НомСерии = 0;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, ?(СтрокаТЗ.ВыработкаНаПост = 0, ТекущееЗначение, СтрокаТЗ.ВыработкаНаПост));    //кривая застывает на текущем уровне до конца года
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредВыработкаНаПост);
				НомСерии = НомСерии + 1;
				Диаграмма.УстановитьЗначение(НомСтроки, НомСерии, СтрокаТЗ.ПредПредВыработкаНаПост);
				НомСтроки = НомСтроки + 1;
			КонецЦикла;
			ТабДок.Вывести(Секция);
			
		КонецЕсли;

	КонецЕсли;	
	
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	
	ЭлементыФормы.ПолеHTMLДокумента1.Перейти("www.ya.ru");
КонецПроцедуры

// Транспорт
Процедура ОсновныеДействияФормыДействие(Кнопка)
	
	ТабличноеПоле1 = Новый ТаблицаЗначений();
	ТекCOMПодключение = Новый COMОбъект("V83.COMConnector");
	СтрокаПодключения = "Srvr = ""server:3041""; Ref = ""v83ib_zemvorob_bp"";Usr = ""Робот"";Pwd = ""09876""";
	ТекCOMОбъект = ТекCOMПодключение.Connect(СтрокаПодключения);
	
	Если ТекCOMОбъект<>неопределено тогда
		ТабличноеПоле2 = ТекCOMОбъект.NewObject("ТаблицаЗначений");
		ТабличноеПоле2 = ТекCOMОбъект.ОбщегоНазначения.ПолучитьИтогиТранспорт(НачПериода,КонПериода);
		
		ТабличноеПоле1.Колонки.Очистить();
		для кол = 0 по ТабличноеПоле2.колонки.Количество()-1 цикл
			ТабличноеПоле1.Колонки.Добавить(ТабличноеПоле2.колонки.Получить(кол).Имя);
		КонецЦикла;
		
		для номСтр = 0 по ТабличноеПоле2.Количество()-1 цикл
			стр1 = ТабличноеПоле1.Добавить();
			ЗаполнитьЗначенияСвойств( стр1, ТабличноеПоле2.получить(номСтр) );
		КонецЦикла;
		// ТабличноеПоле1.ВыбратьСтроку();
		КС = Новый КвалификаторыСтроки(100);
		ТабТранспорт = Новый ТаблицаЗначений();
		ТабТранспорт.Колонки.Добавить("Производитель",Новый ОписаниеТипов("Строка",,КС));
		ТабТранспорт.Колонки.Добавить("Авто",Новый ОписаниеТипов("Строка",,КС));
		ТабТранспорт.Колонки.Добавить("Прибыль",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("Затраты",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("ФинРезультат",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("КоличествоПоездок",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("Пробег",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("ПрибыльНаКм",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("ЗатратыНаКм",Новый ОписаниеТипов("Число"));
		ТабТранспорт.Колонки.Добавить("ФинРезультатНаКМ",Новый ОписаниеТипов("Число"));
		
		для номСтр = 0 по ТабличноеПоле2.Количество()-1 цикл
			стр1 = ТабТранспорт.Добавить();
			ЗаполнитьЗначенияСвойств( стр1, ТабличноеПоле2.получить(номСтр) );
		КонецЦикла;
		//     ТабТранспорт.ВыбратьСтроку();
		
		ТабДок = ЭлементыФормы.ТабДок;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Таблица",ТабТранспорт);
		Запрос.Текст =
		"ВЫБРАТЬ
		| //Производитель, Авто, Прибыль,Затраты,ФинРезультат, КоличествоПоездок,Пробег, ПрибыльНаКМ, ЗатратыНаКМ,ФинРезультатНаКМ
		| Таблица.*
		|ПОМЕСТИТЬ Таблица
		|ИЗ
		| &Таблица КАК Таблица
		| ;
		|  ВЫБРАТЬ Производитель, Авто, Прибыль,Затраты,ФинРезультат, КоличествоПоездок,Пробег, ПрибыльНаКМ, ЗатратыНаКМ,ФинРезультатНаКМ ИЗ Таблица
		| ИТОГИ СУММА(Прибыль), СУММА(Затраты), СУММА(ФинРезультат),     СУММА(КоличествоПоездок),СУММА(Пробег), СУММА(ПрибыльНаКМ), СУММА(ЗатратыНаКМ),СУММА(ФинРезультатНаКМ)
		| ПО  ОБЩИЕ, Производитель";
	
		Макет = ПолучитьМакет("Отчет");
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщийИтогТранспорт");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыТранспорт");
		
		ОбластьЗаголовок.Параметры.ТипОтчета = " по транспорту за " + ПредставлениеПериода(Начпериода, КонецДня(КонПериода));
		
		ТабДок.Очистить();
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		Результат = Запрос.Выполнить();
		ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаОбщийИтог.Следующий();		// Общий итог
		
		ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
		ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
		
		
		//ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
		//ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
		
		ВыборкаПроизводитель=ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПроизводитель.Следующий() Цикл
			ОбластьПроизводительТранспорт = Макет.ПолучитьОбласть("ПроизводительТранспорт");
			ОбластьПроизводительТранспорт.Параметры.Заполнить(ВыборкаПроизводитель);
			ТабДок.Вывести(ОбластьПроизводительТранспорт, ВыборкаПроизводитель.Уровень());
			
			ВыборкаАвто = ВыборкаПроизводитель.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока ВыборкаАвто.Следующий() Цикл
				ОбластьДеталиТранспорт = Макет.ПолучитьОбласть("ДеталиТранспорт");
				ОбластьДеталиТранспорт.Параметры.Заполнить(ВыборкаАвто);
				ТабДок.Вывести(ОбластьДеталиТранспорт,ВыборкаАвто.Уровень());
				
			КонецЦикла;
		КонецЦикла;  
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

// ИМ

Процедура ОсновныеДействияФормыДействие1(Кнопка)
	 ТабличноеПоле1 = Новый ТаблицаЗначений();
ТекCOMПодключение = Новый COMОбъект("V82.COMConnector");
СтрокаПодключения = "Srvr = ""sigma:2041""; Ref = ""v82ib_fedunov_ut"";Usr = ""Лапенков"";Pwd = ""wd89Soil""";
ТекCOMОбъект = ТекCOMПодключение.Connect(СтрокаПодключения);

Если ТекCOMОбъект<>неопределено тогда
 ТабличноеПоле2 = ТекCOMОбъект.NewObject("ТаблицаЗначений");
 ТабличноеПоле2 = ТекCOMОбъект.ИнтернетМагазин.ПолучитьИтогиАЭ(НачПериода,КонПериода);
 
 ТабличноеПоле1.Колонки.Очистить();
 для кол = 0 по ТабличноеПоле2.колонки.Количество()-1 цикл
    ТабличноеПоле1.Колонки.Добавить(ТабличноеПоле2.колонки.Получить(кол).Имя);
    КонецЦикла;
 
 для номСтр = 0 по ТабличноеПоле2.Количество()-1 цикл
 стр1 = ТабличноеПоле1.Добавить();
 ЗаполнитьЗначенияСвойств( стр1, ТабличноеПоле2.получить(номСтр) );
 КонецЦикла;
           ТабличноеПоле1.ВыбратьСтроку();
КонецЕсли;	

Для каждого строка ИЗ ТабличноеПоле1 Цикл
	
КонецЦикла;	


	
КонецПроцедуры

// ФОрмула
          
Процедура ОсновныеДействияФормыДействие2(Кнопка)
	     	 ТабличноеПоле1 = Новый ТаблицаЗначений();
ТекCOMПодключение = Новый COMОбъект("V82.COMConnector");
СтрокаПодключения = "Srvr = ""sigma:2041""; Ref = ""v82ib_formula_ut"";Usr = ""Лапенков"";Pwd = ""wd89Soil""";
ТекCOMОбъект = ТекCOMПодключение.Connect(СтрокаПодключения);

Если ТекCOMОбъект<>неопределено тогда
 ТабличноеПоле2 = ТекCOMОбъект.NewObject("ТаблицаЗначений");
 ТабличноеПоле2 = ТекCOMОбъект.ПолучитьИтогиФормула(НачПериода,КонПериода);
 
 ТабличноеПоле1.Колонки.Очистить();
 для кол = 0 по ТабличноеПоле2.колонки.Количество()-1 цикл
    ТабличноеПоле1.Колонки.Добавить(ТабличноеПоле2.колонки.Получить(кол).Имя);
    КонецЦикла;
 
 для номСтр = 0 по ТабличноеПоле2.Количество()-1 цикл
 стр1 = ТабличноеПоле1.Добавить();
 ЗаполнитьЗначенияСвойств( стр1, ТабличноеПоле2.получить(номСтр) );
 КонецЦикла;
           ТабличноеПоле1.ВыбратьСтроку();
КонецЕсли;	

	
КонецПроцедуры



//Процедура ОсновныеДействияФормыДействие3(Кнопка)
//	 ТабличноеПоле1 = Новый ТаблицаЗначений();

//	 ТабличноеПоле2 = ПолучитьИтогиФормула(НачПериода,КонПериода);
// 
// ТабличноеПоле1.Колонки.Очистить();
// для кол = 0 по ТабличноеПоле2.колонки.Количество()-1 цикл
//	ТабличноеПоле1.Колонки.Добавить(ТабличноеПоле2.колонки.Получить(кол).Имя);
//	КонецЦикла;
// 
// для номСтр = 0 по ТабличноеПоле2.Количество()-1 цикл
// стр1 = ТабличноеПоле1.Добавить();
// ЗаполнитьЗначенияСвойств( стр1, ТабличноеПоле2.получить(номСтр) );
// КонецЦикла;
//		   ТабличноеПоле1.ВыбратьСтроку();

//	
//КонецПроцедуры
