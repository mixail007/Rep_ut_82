//Перем ПараметрДанныхНачалоПериода, ПараметрДанныхКонецПериода;

Процедура НачалоПериодаПриИзменении(Элемент)
	
	//ПараметрДанныхНачалоПериода.Значение = НачалоПериода;	
	
КонецПроцедуры

Процедура КонецПериодаПриИзменении(Элемент)
	
	//ПараметрДанныхКонецПериода.Значение = КонецДня(КонецПериода);
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
		//ПараметрДанныхНачалоПериода.Значение = НачалоПериода;	
		//ПараметрДанныхКонецПериода.Значение = КонецДня(КонецПериода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьНастройки();
	
КонецПроцедуры

Процедура УстановитьНастройки()
	
	//ПараметрДанныхКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0];
	//ПараметрДанныхКонецПериода.Значение = КонецДня(КонецПериода);
	//ПараметрДанныхКонецПериода.Использование = Истина;
	//
	//ПараметрДанныхНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1];   //при выборе этого варианта все равно запрос по продажам выполняется,т.о. сокращается скорость
	//ПараметрДанныхНачалоПериода.Значение = НачалоПериода;
	//ПараметрДанныхНачалоПериода.Использование = Истина;
	
	Настройки = КомпоновщикНастроек.Настройки;
	
КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	//склад 12117 = Ангар-Ковка
	//склад 02332 - Ангар-ремонт ТЕСТ
	Запрос.Текст = "ВЫБРАТЬ
	               |	СозданиеПрограммПоКованымДискамТовары.Ссылка,
	               |	СозданиеПрограммПоКованымДискамТовары.Номенклатура.Код КАК Код,
	               |	СозданиеПрограммПоКованымДискамТовары.Номенклатура,
	               |	НАЧАЛОПЕРИОДА(СозданиеПрограммПоКованымДискамТовары.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
	               |	0 КАК ПорядковыйНомерЗаписи,
	               |	""Программирование"" КАК ВидНачисления,
	               |	NULL КАК КоличествоПеремещено,
	               |	NULL КАК СтоимостьЕдиницы,
	               |	NULL КАК КоличествоШтраф,
	               |	СозданиеПрограммПоКованымДискамТовары.Ссылка.Дата КАК ДатаДокумента
	               |ИЗ
	               |	Документ.СозданиеПрограммПоКованымДискам.Товары КАК СозданиеПрограммПоКованымДискамТовары
	               |ГДЕ
	               |	СозданиеПрограммПоКованымДискамТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И НЕ СозданиеПрограммПоКованымДискамТовары.Ссылка.ПометкаУдаления
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ОтчетПроизводстваЗаСменуГотоваяПродукция.Ссылка,
	               |	ОтчетПроизводстваЗаСменуГотоваяПродукция.Номенклатура.Код,
	               |	ОтчетПроизводстваЗаСменуГотоваяПродукция.Номенклатура,
	               |	НАЧАЛОПЕРИОДА(ОтчетПроизводстваЗаСменуГотоваяПродукция.Ссылка.Дата, МЕСЯЦ),
	               |	0,
	               |	""Производство"",
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	ОтчетПроизводстваЗаСменуГотоваяПродукция.Ссылка.Дата
	               |ИЗ
	               |	Документ.ОтчетПроизводстваЗаСмену.ГотоваяПродукция КАК ОтчетПроизводстваЗаСменуГотоваяПродукция
	               |ГДЕ
	               |	ОтчетПроизводстваЗаСменуГотоваяПродукция.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И ОтчетПроизводстваЗаСменуГотоваяПродукция.Ссылка.Проведен
	               |	И ОтчетПроизводстваЗаСменуГотоваяПродукция.Ссылка.СкладГотовойПродукции.Код = ""12117""
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПеремещениеТоваровТовары.Ссылка,
	               |	ПеремещениеТоваровТовары.Номенклатура.Код,
	               |	ПеремещениеТоваровТовары.Номенклатура,
	               |	НАЧАЛОПЕРИОДА(ПеремещениеТоваровТовары.Ссылка.Дата, МЕСЯЦ),
	               |	NULL,
	               |	""Штраф за испорченную заготовку"",
	               |	ПеремещениеТоваровТовары.Количество,
	               |	ПартииТоваровНаСкладахОбороты.СтоимостьРасход / ПеремещениеТоваровТовары.Количество,
	               |	ПеремещениеТоваровТовары.Количество,
	               |	ПеремещениеТоваровТовары.Ссылка.Дата
	               |ИЗ
	               |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ) КАК ПартииТоваровНаСкладахОбороты
	               |		ПО ПеремещениеТоваровТовары.Номенклатура = ПартииТоваровНаСкладахОбороты.Номенклатура
	               |			И ПеремещениеТоваровТовары.Ссылка = ПартииТоваровНаСкладахОбороты.Регистратор
	               |ГДЕ
	               |	ПеремещениеТоваровТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И ПеремещениеТоваровТовары.Ссылка.Проведен
	               |	И ПеремещениеТоваровТовары.Ссылка.СкладОтправитель.Код = ""12117""
	               |	И ПеремещениеТоваровТовары.Склад.Код = ""02332""
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВидНачисления,
	               |	Месяц,
	               |	ДатаДокумента
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	ТЗРезультат = Запрос.Выполнить().Выгрузить();
	ТЗМесяцы = ТЗРезультат.Скопировать();
	ТЗМесяцы.Свернуть("Месяц, ВидНачисления");
	
	Для каждого СтрМесяц ИЗ ТЗМесяцы Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Месяц", СтрМесяц.Месяц);
		Отбор.Вставить("ВидНачисления", СтрМесяц.ВидНачисления);
		СтрокиТЗ = ТЗРезультат.НайтиСтроки(Отбор);
		
		Если СтрМесяц.ВидНачисления = "Программирование" ИЛИ СтрМесяц.ВидНачисления = "Производство" Тогда
			НомерПП = 0;
			Для каждого СтрТЗ ИЗ СтрокиТЗ Цикл
				НомерПП = НомерПП + 1;
				СтрТЗ.ПорядковыйНомерЗаписи = НомерПП;
			КонецЦикла;
		КонецЕсли;
		
		ДопустимыйБрак = 1;
		Если СтрМесяц.ВидНачисления = "Штраф за испорченную заготовку" Тогда
			Для каждого СтрТЗ ИЗ СтрокиТЗ Цикл
				Если ДопустимыйБрак > 0 Тогда
					СтрТЗ.КоличествоШтраф = СтрТЗ.КоличествоШтраф - ДопустимыйБрак;
					ДопустимыйБрак = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Настройки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//ПараметрДанныхНачалоПериода = Настройки.ПараметрыДанных.Элементы[1];
	//ПараметрДанныхНачалоПериода.Значение = НачалоПериода;
	//ПараметрДанныхНачалоПериода.Использование = Истина;
	//
	//ПараметрДанныхНачалоПериода = Настройки.ПараметрыДанных.Элементы[0];
	//ПараметрДанныхНачалоПериода.Значение = КонецДня(КонецПериода);
	//ПараметрДанныхНачалоПериода.Использование = Истина;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ВнешнийНаборДанных = Новый Структура("ПроизводствоКованыхДисков", ТЗРезультат);
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки);	
	
	ЭлементыФормы.Результат.Очистить();
	ДокументРезультат = ЭлементыФормы.Результат;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
	
КонецПроцедуры
