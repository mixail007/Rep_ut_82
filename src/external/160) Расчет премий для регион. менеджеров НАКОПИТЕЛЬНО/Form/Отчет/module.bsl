
Перем ТЗПоОтветственным; 
Перем ТЗKPI;

Процедура ДействияФормыОтчетСформировать(Кнопка)

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);


КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	
	//ЗаполнитьKPI();
	
	ТЗПоОтветственным.Очистить();
	ТабДок.Очистить();

	
	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Б.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	Б.Контрагент КАК Контрагент,
	|	Б.ДоговорКонтрагента,
	|	Б.Сделка,
	|	Б.СуммаОплаты КАК СуммаОплаты,
	|	Б.СуммаПродажи КАК СуммаПродажи,
	|   Б.КоэффициентОплаты,
	| //  Б.РазницаКоэффициентов,
	|	ВЫБОР КОГДА Б.Контрагент.ВходитВХолдинг ИЛИ Б.Контрагент =&Старк ТОГДА 0 ИНАЧЕ
	|   Б.ПремияЗаНаценку * Б.КоэффициентОплаты КОНЕЦ КАК БонусЗаНаценку,
	|	ВЫБОР КОГДА Б.Контрагент.ВходитВХолдинг ИЛИ Б.Контрагент =&Старк ТОГДА
	|	Б.СуммаОплаты * &КоэффициентЗаПродажиФФ 
	|   ИНАЧЕ
	|   Б.СуммаОплаты * &КоэффициентЗаПродажи 
	|   КОНЕЦ
	|	КАК ПремияЗаПродажи,
	|	0 КАК ПремияИтого
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОплатыОтПокупателей.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|		ОплатыОтПокупателей.Контрагент КАК Контрагент,
	|		ОплатыОтПокупателей.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ОплатыОтПокупателей.Сделка КАК Сделка,
	|		ОплатыОтПокупателей.СуммаОплаты КАК СуммаОплаты,
	|		ЕСТЬNULL(ПродажиПоЗаказам.СуммаПродажи, 0) КАК СуммаПродажи,
	|		ЕСТЬNULL(ПродажиПоЗаказам.ПремияЗаНаценку, 0) КАК ПремияЗаНаценку,
	|		//ЕСТЬNULL(ПродажиПоЗаказам.РазницаКоэффициентов, 0) КАК РазницаКоэффициентов,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПродажиПоЗаказам.СуммаПродажи, 0) > 0
	|				ТОГДА ОплатыОтПокупателей.СуммаОплаты / ЕСТЬNULL(ПродажиПоЗаказам.СуммаПродажи, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КоэффициентОплаты
	|	ИЗ
	|		(ВЫБРАТЬ
	|			А.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|			А.Контрагент КАК Контрагент,
	|			А.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|			А.Сделка КАК Сделка,
	|			СУММА(А.СуммаОплаты) КАК СуммаОплаты
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|				ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	|				ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|				ВзаиморасчетыСКонтрагентамиОбороты.Сделка КАК Сделка,
	|				ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход КАК СуммаОплаты
	|			ИЗ
	|				РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(&НачДата, &КонДата, Регистратор, ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам) КАК ВзаиморасчетыСКонтрагентамиОбороты
	|			ГДЕ
	|				(ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
	|							И ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.ВидОперации = &ОплатаОтПокупателяБезНал
	|						ИЛИ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|							И ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.ВидОперации = &ОплатаОтПокупателяНал)) КАК А
	|		
	|		СГРУППИРОВАТЬ ПО
	|			А.ОтветственноеЛицо,
	|			А.Контрагент,
	|			А.ДоговорКонтрагента,
	|			А.Сделка
	|		
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ
	|			Взаимозачеты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			Взаимозачеты.ДоговорКонтрагента.Владелец,
	|			Взаимозачеты.ДоговорКонтрагента,
	|			Взаимозачеты.Сделка,
	|			СУММА(Взаимозачеты.Сумма)
	|		ИЗ
	|			Документ.Взаимозачет.СуммыДолга КАК Взаимозачеты
	|		ГДЕ
	|			Взаимозачеты.Ссылка.Проведен
	|			И Взаимозачеты.Ссылка.УчитыватьДляРасчетаПремии
	|			И Взаимозачеты.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|//			И Взаимозачеты.Ссылка.ВидОперации = &ОперацияПроведениеВзаимозачета
	|			И Взаимозачеты.ВидЗадолженности = &Дебиторская
	|			И Взаимозачеты.ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Взаимозачеты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			Взаимозачеты.ДоговорКонтрагента,
	|			Взаимозачеты.Сделка,
	|			Взаимозачеты.ДоговорКонтрагента.Владелец) КАК ОплатыОтПокупателей
|
|  ///////////////////////////// связываем с продажами
|
|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ  Б.ДоговорКонтрагента, Б.Сделка, СУММА(СуммаПродажи) СуммаПродажи, СУММА(Б.ПремияЗаНаценку) ПремияЗаНаценку
|ИЗ
| (ВЫБРАТЬ ДоговорКонтрагента, Сделка, Номенклатура, СуммаПродажи, Себестоимость, Наценка, 
|  ВЫБОР КОГДА Номенклатура.ВидТовара<>Значение(Перечисление.ВидыТоваров.Диски) И Наценка >0 И (СуммаПродажи>Себестоимость*(1+&КоэффициентОтсечения))  ТОГДА 
|    (СуммаПродажи-Себестоимость*(1+&КоэффициентОтсечения))
| * &КоэффициентЗаНаценку 
|	КОГДА  Номенклатура.ВидТовара=Значение(Перечисление.ВидыТоваров.Диски) И Наценка >0 И (СуммаПродажи>Себестоимость*(1+&КоэффициентОтсечения))  ТОГДА 
|    (СуммаПродажи-Себестоимость*(1+&КоэффициентОтсечения))
| * &КоэффициентЗаНаценкуДиски // Для дисков другой коэффициент
|  ИНАЧЕ 0 КОНЕЦ ПремияЗаНаценку
|   ИЗ
|(ВЫБРАТЬ
|	ПродажиОбороты.ЗаказПокупателя.ДоговорКонтрагента КАК ДоговорКонтрагента,
|	ПродажиОбороты.ЗаказПокупателя КАК Сделка,
|	ПродажиОбороты.Номенклатура,
|	ПродажиОбороты.СтоимостьОборот КАК СуммаПродажи,
|	ПродажиСебестоимостьОбороты.СтоимостьОборот КАК Себестоимость,
|	ПродажиОбороты.СтоимостьОборот -ЕстьNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот,0 ) Наценка
|	
|//	ВЫБОР КОГДА ЕстьNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот,0 )>0 ТОГДА
|//	 (ПродажиОбороты.СтоимостьОборот -ЕстьNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот,0 ))/
|//	ЕстьNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот,0 )
|//	ИНАЧЕ 0
|//	КОНЕЦ КоэффициентНаценки
|	ИЗ
|	РегистрНакопления.Продажи.Обороты(&НачалоПериода, , , ) КАК ПродажиОбороты
|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&НачалоПериода, , , ) КАК ПродажиСебестоимостьОбороты
|	ПО ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
|	И  ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
|	ГДЕ
|	ПродажиОбороты.ЗаказПокупателя ССЫЛКА Документ.ЗаказПокупателя  ) А ) Б
|	
|СГРУППИРОВАТЬ ПО Б.ДоговорКонтрагента, Б.Сделка	) КАК ПродажиПоЗаказам
|			ПО ОплатыОтПокупателей.Сделка = ПродажиПоЗаказам.Сделка
|			И ОплатыОтПокупателей.ДоговорКонтрагента = ПродажиПоЗаказам.ДоговорКонтрагента) КАК Б
|	Упорядочить По  ОтветственноеЛицо.Наименование, Контрагент.Наименование
|ИТОГИ
|	СУММА(СуммаОплаты),
|	СУММА(СуммаПродажи),
|   СУММА(БонусЗаНаценку),
|   СУММА(ПремияЗаПродажи), 
|   СУММА(БонусЗаНаценку)+ СУММА(ПремияЗаПродажи) ПремияИтого
|ПО
|	ОБЩИЕ,
|	ОтветственноеЛицо,
|	Контрагент";



	Запрос.УстановитьПараметр("НачалоПериода", Дата('20070101'));
	
	
	Запрос.УстановитьПараметр("ОплатаОтПокупателяБезнал", Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ОплатаПокупателя);
	Запрос.УстановитьПараметр("ОплатаОтПокупателяНал", Перечисления.ВидыОперацийПКО.ОплатаПокупателя);
	Запрос.УстановитьПараметр("ПоЗаказам", Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам);
	Запрос.УстановитьПараметр("ОперацияПроведениеВзаимозачета", Перечисления.ВидыОперацийКорректировкаДолга.ПроведениеВзаимозачета);
	Запрос.УстановитьПараметр("Дебиторская", Перечисления.ВидыЗадолженности.Дебиторская);
	Запрос.УстановитьПараметр("Старк", Справочники.Контрагенты.НайтиПоКоду("00004"));
	// проценты и коэффициенты
	Запрос.УстановитьПараметр("КоэффициентЗаПродажи", ПроцентЗаПродажи/100);
	Запрос.УстановитьПараметр("КоэффициентЗаПродажиФФ", ПроцентЗаПродажиФФ/100);
	Запрос.УстановитьПараметр("КоэффициентЗаНаценку", ПроцентЗаНаценку/100);
	Запрос.УстановитьПараметр("КоэффициентЗаНаценкуДиски", ПроцентЗаНаценкуДиски/100);
	Запрос.УстановитьПараметр("КоэффициентОтсечения", ПроцентОтсечения/100);

	
	врНачДата=НачДата;
	врКонДата=КонецМесяца(врНачДата);
	
	ПремияИтогоНакопительно=0;
	
	Для сч=Месяц(НачДата) по  Месяц(КонДата) Цикл
				
		
	Запрос.УстановитьПараметр("НачДата", врНачДата);
	Запрос.УстановитьПараметр("КонДата", врКонДата);

	

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ПредставлениеПериода= ПредставлениеПериода(врНачДата,КонецДня(врКонДата),"ФП=Истина");
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьОтветственноеЛицо = Макет.ПолучитьОбласть("ОтветственноеЛицо");
	ОбластьКонтрагент = Макет.ПолучитьОбласть("Контрагент");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	//ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ВыборкаОтветственноеЛицо = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	БонусЗаНаценкуИтог=0;
	Пока ВыборкаОтветственноеЛицо.Следующий() Цикл
		СформироватьЗапись(ВыборкаОтветственноеЛицо);
		ОбластьОтветственноеЛицо.Параметры.Заполнить(ВыборкаОтветственноеЛицо);
		БонусЗаНаценкуИтог=БонусЗаНаценкуИтог+ВыборкаОтветственноеЛицо.БонусЗаНаценку;
		
		Отбор = Новый Структура();
		Отбор.Вставить("ОтветственноеЛицо", ВыборкаОтветственноеЛицо.ОтветственноеЛицо);
		Отбор.Вставить("Период", сч);
		Строки = ТЗKPI.НайтиСтроки(Отбор);
		Если Строки.Количество() > 0 Тогда
			ОбластьОтветственноеЛицо.Параметры.KPI = Строки[0].КоэффициентЭффективности;
		Иначе
			ОбластьОтветственноеЛицо.Параметры.KPI = 0;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьОтветственноеЛицо, ВыборкаОтветственноеЛицо.Уровень());

		ВыборкаКонтрагент = ВыборкаОтветственноеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаКонтрагент.Следующий() Цикл
			//ОбластьКонтрагент.Параметры.Заполнить(ВыборкаКонтрагент);
			//ТабДок.Вывести(ОбластьКонтрагент, ВыборкаКонтрагент.Уровень());

			ВыборкаДетали = ВыборкаКонтрагент.Выбрать();

			Пока ВыборкаДетали.Следующий() Цикл
				//ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
				//ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	//ОбластьОбщийИтог.Параметры.БонусЗаНаценку=БонусЗаНаценкуИтог;
	//ОбластьОбщийИтог.Параметры.ПремияИтого= ВыборкаОбщийИтог.ПремияЗаПродажи+БонусЗаНаценкуИтог;
	ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
	//Сообщить(БонусЗаНаценкуИтог);
	
	//ЭлементыФормы.ПолеТабличногоДокумента.Область("R5C11").Текст=БонусЗаНаценкуИтог;
	//ЭлементыФормы.ПолеТабличногоДокумента.Область("R5C13").Текст=ВыборкаОбщийИтог.ПремияЗаПродажи+БонусЗаНаценкуИтог;
	//
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	врНачДата=ДобавитьМесяц(врНачДата,1);	
	врКонДата=КонецМесяца(врНачДата);
	//сч=сч+1;
	//ТЗПоОтветственным.ВыбратьСтроку();
	КонецЦикла;	
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ПредставлениеПериода="ИТОГИ";
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	
	ТабДок.Вывести(ОбластьЗаголовок); ТабДок.Вывести(ОбластьШапкаТаблицы);

	Для каждого строкаОтветственный Из ТЗПоОтветственным Цикл
		 ОбластьОтветственноеЛицо = Макет.ПолучитьОбласть("ОтветственноеЛицо");
		 ОбластьОтветственноеЛицо.Параметры.Заполнить(строкаОтветственный);
		 ТабДок.Вывести(ОбластьОтветственноеЛицо);
	 КонецЦикла;	
	 
	 ОбластьОбщийИтог.Параметры.СуммаОплаты=ТЗПоОтветственным.Итог("СуммаОплаты");
	 ОбластьОбщийИтог.Параметры.ПремияЗаПродажи=ТЗПоОтветственным.Итог("ПремияЗаПродажи");
	 ОбластьОбщийИтог.Параметры.БонусЗаНаценку=ТЗПоОтветственным.Итог("БонусЗаНаценку");
	 ОбластьОбщийИтог.Параметры.ПремияИтого=ТЗПоОтветственным.Итог("ПремияИтого");
	 
    ТабДок.Вывести(ОбластьОбщийИтог);
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура СформироватьЗапись(Выборка)
	
	СтрокаОтветственный=ТЗПоОтветственным.Найти(Выборка.ОтветственноеЛицо,"ОтветственноеЛицо");
	Если  СтрокаОтветственный=Неопределено Тогда // не найден, добавляем
		СтрокаОтветственный=ТЗПоОтветственным.Добавить();	
		СтрокаОтветственный.ОтветственноеЛицо=Выборка.ОтветственноеЛицо;
		СтрокаОтветственный.СуммаОплаты=Выборка.СуммаОплаты;
		СтрокаОтветственный.ПремияЗаПродажи=Выборка.ПремияЗаПродажи;
		СтрокаОтветственный.БонусЗаНаценку=Выборка.БонусЗаНаценку;
		СтрокаОтветственный.ПремияИтого=Выборка.ПремияИтого;


	Иначе
		СтрокаОтветственный.СуммаОплаты=СтрокаОтветственный.СуммаОплаты+Выборка.СуммаОплаты;
		СтрокаОтветственный.ПремияЗаПродажи=СтрокаОтветственный.ПремияЗаПродажи+Выборка.ПремияЗаПродажи;
		СтрокаОтветственный.БонусЗаНаценку=СтрокаОтветственный.БонусЗаНаценку+Выборка.БонусЗаНаценку;
		СтрокаОтветственный.ПремияИтого=СтрокаОтветственный.ПремияИтого+Выборка.ПремияИтого;
	КОнецЕсли;	
	
КонецПроцедуры	

Процедура ЗаполнитьKPI()
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("НачДата", НачДата);
	//Запрос.УстановитьПараметр("КонДата", КонДата);
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	ЗначенияПоказателейЭффективности.ОтветственноеЛицо,
	//			   |	СУММА(ЗначенияПоказателейЭффективности.КоэффициентЭффективности) КАК КоэффициентЭффективности,
	//			   |	МЕСЯЦ(ЗначенияПоказателейЭффективности.Период) КАК Период
	//			   |ИЗ
	//			   |	РегистрСведений.ЗначенияПоказателейЭффективности КАК ЗначенияПоказателейЭффективности
	//			   |ГДЕ
	//			   |	ЗначенияПоказателейЭффективности.Период МЕЖДУ &НачДата И &КонДата
	//			   |
	//			   |СГРУППИРОВАТЬ ПО
	//			   |	ЗначенияПоказателейЭффективности.ОтветственноеЛицо,
	//			   |	МЕСЯЦ(ЗначенияПоказателейЭффективности.Период)";
	//			   
	//Выборка = Запрос.Выполнить().Выбрать();		
	//   
	//Пока Выборка.Следующий() Цикл
	//	СтрокаОтветственный = ТЗKPI.Найти(Выборка.ОтветственноеЛицо,"ОтветственноеЛицо");
	//	СтрокаОтветственный = ТЗKPI.Добавить();	
	//	ЗаполнитьЗначенияСвойств(СтрокаОтветственный,Выборка);
	//КонецЦикла;	
	   
КонецПроцедуры

ТЗПоОтветственным=Новый ТаблицаЗначений;
ТЗПоОтветственным.Колонки.Добавить("ОтветственноеЛицо");
ТЗПоОтветственным.Колонки.Добавить("СуммаОплаты");
ТЗПоОтветственным.Колонки.Добавить("ПремияЗаПродажи");
ТЗПоОтветственным.Колонки.Добавить("БонусЗаНаценку");
ТЗПоОтветственным.Колонки.Добавить("ПремияИтого");

ТЗKPI = Новый ТаблицаЗначений;
ТЗKPI.Колонки.Добавить("ОтветственноеЛицо");
ТЗKPI.Колонки.Добавить("КоэффициентЭффективности");
ТЗKPI.Колонки.Добавить("Период");

