Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	Текст ="ВЫБРАТЬ
			|	ИнформацияПоПроезду.Заказ,
			|	СУММА(ИнформацияПоПроезду.ДоставкаВЦене) КАК ДоставкаВЦене,
			|	ИнформацияПоПроезду.Номенклатура,
			|	ИнформацияПоПроезду.Реализация,
			|	ИнформацияПоПроезду.Задание
			|ПОМЕСТИТЬ Транспорт
			|ИЗ
			|	РегистрСведений.ИнформацияПоПроезду КАК ИнформацияПоПроезду
			|ГДЕ
			|	ИнформацияПоПроезду.Реализация <> НЕОПРЕДЕЛЕНО
			|	И ИнформацияПоПроезду.Реализация.Дата МЕЖДУ &ДатаНач И &ДатаКон
			|
			|СГРУППИРОВАТЬ ПО
			|	ИнформацияПоПроезду.Заказ,
			|	ИнформацияПоПроезду.Номенклатура,
			|	ИнформацияПоПроезду.Реализация,
			|	ИнформацияПоПроезду.Задание
			|;
			|
			|///////////////////////по реализациям/////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БонусыПоставщиков.Документ КАК ДокументРеализации,
			|	БонусыПоставщиков.Номенклатура,
			|	БонусыПоставщиков.БонусОборот КАК Бонус
			|ПОМЕСТИТЬ втБонусыПоНоменклатуре
			|ИЗ
			|	РегистрНакопления.БонусыПоставщиков.Обороты(&ДатаНач, &ДатаКон, , ) КАК БонусыПоставщиков
			|ГДЕ
			|	БонусыПоставщиков.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
			|;
			|/////////////////по поступлениям - без начала, но до Конечной Даты!////////////////////////////////////////
			|	ВЫБРАТЬ
			|		БонусыПоставщиков.Документ КАК ДокументПоступления,
			|			БонусыПоставщиков.Номенклатура,
			|		БонусыПоставщиков.БонусОборот КАК Бонус
			|	ПОМЕСТИТЬ втБонусыПоНоменклатуре2
			|	ИЗ
			|		РегистрНакопления.БонусыПоставщиков.Обороты(, &ДатаКон, , ) КАК БонусыПоставщиков
			|	ГДЕ
			|		БонусыПоставщиков.Документ ССЫЛКА Документ.ПоступлениеТоваровУслуг
			|	;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ТаблицаРегистра.КоличествоОборот) КАК Количество,
			|	СУММА(ТаблицаРегистра.СтоимостьОборот) КАК Стоимость,
			|	СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) КАК Себестоимость,
			|	ВЫБОР
			|		КОГДА СУММА(ТаблицаРегистра.СтоимостьОборот) ЕСТЬ NULL 
			|			ТОГДА 0
			|		ИНАЧЕ СУММА(ТаблицаРегистра.СтоимостьОборот)
			|	КОНЕЦ - ВЫБОР
			|		КОГДА СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) ЕСТЬ NULL 
			|			ТОГДА 0
			|		ИНАЧЕ СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот)
			|	КОНЕЦ КАК ВаловаяПрибыль,
			
			|	СУММА(ТаблицаРегистра.СтоимостьОборот) - СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот)*&КоэфНДС как ВаловаяПрибыльНДС,

			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) <> 0
			|				ТОГДА 100 * (СУММА(ТаблицаРегистра.СтоимостьОборот)/СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) - 1 )
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПроцентНаценки,
			|	ТаблицаРегистра.ДоговорКонтрагента.Владелец КАК Покупатель,
			|	ТаблицаРегистра.Номенклатура КАК Номенклатура,
			|	ТаблицаРегистра.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		
			|	СУММА(ЕСТЬNULL(Транспорт.ДоставкаВЦене, 0)) КАК ДоставкаВЦене,
			
		//+++ 20.12.2018 - уже без НДС!
			//|	СУММА(ЕСТЬNULL(ТаблицаРегистраСебестоимость.СтоимостьОборот, 0) *&КоэфБезНДС * ЕСТЬNULL(втБонусыПоНоменклатуре.Бонус, 0) / 100) КАК СуммаБонуса,
			|	СУММА( ЕСТЬNULL(ТаблицаРегистраСебестоимость.БонусПоставщика, 0) + ЕстьNull(втБонусыПоНоменклатуре.бонус,0)*ЕстьNull(ТаблицаРегистра.КоличествоОборот,0) ) КАК СуммаБонуса,
			
		//+++ 20.12.2018 - уже без НДС!
		|	СУММА( ЕСТЬNULL(ТаблицаРегистра.СтоимостьОборот, 0)*&КоэфБезНДС - ЕСТЬNULL(ТаблицаРегистраСебестоимость.СтоимостьОборот, 0)*&КоэфБезНДС - ЕСТЬNULL(Транспорт.ДоставкаВЦене, 0) 
			|	+ ЕСТЬNULL(ТаблицаРегистраСебестоимость.БонусПоставщика, 0) + ЕстьNull(втБонусыПоНоменклатуре.бонус,0)* ЕстьNull(ТаблицаРегистра.КоличествоОборот,0) ) КАК ВаловаяПрибыльСУчетомДоставкиИБонуса,
			
		//+++ 20.12.2018 - уже без НДС!
			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот*&КоэфБезНДС + ЕСТЬNULL(Транспорт.ДоставкаВЦене, 0) 
			|	- ЕСТЬNULL(ТаблицаРегистраСебестоимость.БонусПоставщика, 0) - ЕстьNull(втБонусыПоНоменклатуре.бонус,0)* ЕстьNull(ТаблицаРегистра.КоличествоОборот,0) ) <> 0
			|				ТОГДА 100 * ( СУММА(ТаблицаРегистра.СтоимостьОборот)*&КоэфБезНДС / 
			|							  СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот*&КоэфБезНДС  + ЕСТЬNULL(Транспорт.ДоставкаВЦене, 0) 
			// - бонус подставщика - бонус поставщика от продаж
			|				- ЕСТЬNULL(ТаблицаРегистраСебестоимость.БонусПоставщика, 0) - ЕстьNull(втБонусыПоНоменклатуре.бонус,0)* ЕстьNull(ТаблицаРегистра.КоличествоОборот,0) ) 
			|						  -1 )
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПроцентНаценкиСУчетомТранспортаИБонуса
			
			|	//СВОЙСТВА
		
		 	|{ВЫБРАТЬ
			|	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
			|	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
			|	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
		 	//+++ 03.10.2018 ----------------------------------------------	
			|	Транспорт.Задание.* КАК ЗаданиеНаОтгрузку,
	   		|	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
			|	НоменклатурнаяГруппа.*,
			|	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
			|	ТаблицаРегистра.Подразделение.* КАК Подразделение,
			|	ТаблицаРегистра.Период,
			|	ТаблицаРегистра.Регистратор.* КАК Регистратор,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ДЕНЬ)) КАК ПериодДень,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, МЕСЯЦ)) КАК ПериодМесяц,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, КВАРТАЛ)) КАК ПериодКвартал,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ГОД)) КАК ПериодГод
			|	//СВОЙСТВА
			|}
			|ИЗ
			|	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК ТаблицаРегистра
			//+++ 20.12.2018 - уже без НДС!
			//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК ТаблицаРегистраСебестоимость
			|		ЛЕВОЕ СОЕДИНЕНИЕ (выбрать 
			|		СебестоимостьОбороты.Номенклатура,
			|			СебестоимостьОбороты.ХарактеристикаНоменклатуры,
			|			СебестоимостьОбороты.ЗаказПокупателя,
			|			СебестоимостьОбороты.Подразделение,
			|			СебестоимостьОбороты.Регистратор,
			|		Сумма(СебестоимостьОбороты.КоличествоОборот) КАК КоличествоОборот,
			|		Сумма(СебестоимостьОбороты.СтоимостьОборот) КАК  СтоимостьОборот,
			|		Сумма(ЕстьNull(втБонусыПоНоменклатуре2.Бонус,0)*ЕстьNull(СебестоимостьОбороты.КоличествоОборот,0) ) КАК БонусПоставщика
			
			|	из РегистрНакопления.ПродажиСебестоимость.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК СебестоимостьОбороты
			|		ЛЕВОЕ СОЕДИНЕНИЕ втБонусыПоНоменклатуре2 КАК втБонусыПоНоменклатуре2
			|		ПО  СебестоимостьОбороты.ДокументОприходования = втБонусыПоНоменклатуре2.ДокументПоступления
			|			И СебестоимостьОбороты.Номенклатура = втБонусыПоНоменклатуре2.Номенклатура
			|СГРУППИРОВАТЬ ПО 
			|		СебестоимостьОбороты.Номенклатура,
			|			СебестоимостьОбороты.ХарактеристикаНоменклатуры,
			|			СебестоимостьОбороты.ЗаказПокупателя,
			|			СебестоимостьОбороты.Подразделение,
			|			СебестоимостьОбороты.Регистратор
			|) КАК ТаблицаРегистраСебестоимость
			//+++)
			|		ПО ТаблицаРегистра.Номенклатура = ТаблицаРегистраСебестоимость.Номенклатура
			|			И ТаблицаРегистра.ХарактеристикаНоменклатуры = ТаблицаРегистраСебестоимость.ХарактеристикаНоменклатуры
			|			И ТаблицаРегистра.ЗаказПокупателя = ТаблицаРегистраСебестоимость.ЗаказПокупателя
			|			И ТаблицаРегистра.Подразделение = ТаблицаРегистраСебестоимость.Подразделение
			|			И ТаблицаРегистра.Регистратор = ТаблицаРегистраСебестоимость.Регистратор
			
			|		ЛЕВОЕ СОЕДИНЕНИЕ Транспорт КАК Транспорт
			|		ПО ТаблицаРегистра.ЗаказПокупателя = Транспорт.Заказ
			|			И ТаблицаРегистра.Номенклатура = Транспорт.Номенклатура
			|			И ТаблицаРегистра.Регистратор = Транспорт.Реализация
			
			|		ЛЕВОЕ СОЕДИНЕНИЕ втБонусыПоНоменклатуре КАК втБонусыПоНоменклатуре
			//|		ПО ТаблицаРегистра.Период = втБонусыПоНоменклатуре.ПериодРеализации
			|		ПО  ТаблицаРегистра.ДокументПродажи = втБонусыПоНоменклатуре.ДокументРеализации
			|			И ТаблицаРегистра.Номенклатура = втБонусыПоНоменклатуре.Номенклатура
			|//СОЕДИНЕНИЯ
				
			|{ГДЕ
			|	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
			|	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
			|	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
			//+++ 03.10.2018	
	   		|	Транспорт.Задание.* как ЗаданиеНаОтгрузку,
			|	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
			|	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
			|	ТаблицаРегистра.Подразделение.* КАК Подразделение,
			|	ТаблицаРегистра.Период,
			|	ТаблицаРегистра.Регистратор.* КАК Регистратор,
			|	(СУММА(ТаблицаРегистра.КоличествоОборот)) КАК Количество,
			|	(СУММА(ТаблицаРегистра.СтоимостьОборот)) КАК Стоимость,
			|	(СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот)) КАК Себестоимость,
			|	(ВЫБОР
			|			КОГДА СУММА(ТаблицаРегистра.СтоимостьОборот) ЕСТЬ NULL 
			|				ТОГДА 0
			|			ИНАЧЕ СУММА(ТаблицаРегистра.СтоимостьОборот)
			|		КОНЕЦ - ВЫБОР
			|			КОГДА СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) ЕСТЬ NULL 
			|				ТОГДА 0
			|			ИНАЧЕ СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот)
			|		КОНЕЦ) КАК ВаловаяПрибыль,
		
			//+++ 04.10.2018 - вместо Рентабельности - ВаловаяПрибыльНДС
			|	( СУММА(ТаблицаРегистра.СтоимостьОборот) - СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) )*&КоэфНДС как ВаловаяПрибыльНДС,
			
			|	(ВЫРАЗИТЬ(ВЫБОР
			|				КОГДА СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) <> 0
			|					ТОГДА 100 * (СУММА(ТаблицаРегистра.СтоимостьОборот)/СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) -1 )
			|				ИНАЧЕ 0
			|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК ПроцентНаценки,
				|	(ЕСТЬNULL(Транспорт.ДоставкаВЦене, 0)) КАК ДоставкаВЦене
			|//СВОЙСТВА
			|}
			|
						
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаРегистра.ДоговорКонтрагента.ОтветственноеЛицо,
 			|	ТаблицаРегистра.ДоговорКонтрагента.Владелец,
			|	Транспорт.Задание,
			|	ТаблицаРегистра.Номенклатура,
			
			|	ТаблицаРегистра.Номенклатура.НоменклатурнаяГруппа
			
			//+++ 09.10-21.12.2018 +++ 	
			|,	ТаблицаРегистраСебестоимость.СтоимостьОборот,
			|	ТаблицаРегистра.КоличествоОборот,
			|	втБонусыПоНоменклатуре.Бонус
			|//СГРУППИРОВАТЬПО

	//========================================================================		
			|//МинПроцНаценки
			
			|		
			|{УПОРЯДОЧИТЬ ПО
			|	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
			|	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
			|	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
			|	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
			|	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
			|	ТаблицаРегистра.Подразделение.* КАК Подразделение,
			|	ТаблицаРегистра.Период,
			|	ТаблицаРегистра.Регистратор.* КАК Регистратор,
			|	(СУММА(ТаблицаРегистра.КоличествоОборот)) КАК Количество,
			|	(СУММА(ТаблицаРегистра.СтоимостьОборот)) КАК Стоимость,
			|	(СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот)) КАК Себестоимость,
			|	(ВЫБОР
			|			КОГДА СУММА(ТаблицаРегистра.СтоимостьОборот) ЕСТЬ NULL 
			|				ТОГДА 0
			|			ИНАЧЕ СУММА(ТаблицаРегистра.СтоимостьОборот)
			|		КОНЕЦ - ВЫБОР
			|			КОГДА СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) ЕСТЬ NULL 
			|				ТОГДА 0
			|			ИНАЧЕ СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот)
			|		КОНЕЦ) КАК ВаловаяПрибыль,
		//04.10.2018	
			|	(ВЫБОР
			|			КОГДА СУММА(ТаблицаРегистра.СтоимостьОборот) ЕСТЬ NULL 
			|				ТОГДА 0
			|			ИНАЧЕ СУММА(ТаблицаРегистра.СтоимостьОборот)
			|		КОНЕЦ - ВЫБОР
			|			КОГДА СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) ЕСТЬ NULL 
			|				ТОГДА 0
			|			ИНАЧЕ СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот)
			|		КОНЕЦ)*&КоэфНДС КАК ВаловаяПрибыльНДС,
			
			|	(ВЫРАЗИТЬ(ВЫБОР
			|				КОГДА СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) <> 0
			|					ТОГДА 100 * (СУММА(ТаблицаРегистра.СтоимостьОборот)/СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) -1 )
			|				ИНАЧЕ 0
			|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК ПроцентНаценки,
			
			|	ДоставкаВЦене
			|//ОБЩИЕ_СВОЙСТВА
			|}
			
			
			|ИТОГИ
			|	СУММА(Количество),
			|	СУММА(Стоимость),
			|	СУММА(Себестоимость),
			|	СУММА(ВаловаяПрибыль),
			|	СУММА(ВаловаяПрибыль)*&КоэфНДС как ВаловаяПрибыльНДС,
			
			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА СУММА(Себестоимость) <> 0
			|				ТОГДА 100 * (СУММА(Стоимость) - СУММА(Себестоимость)) / СУММА(Себестоимость)
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПроцентНаценки,
			|	СУММА(ДоставкаВЦене),
			|	СУММА(СуммаБонуса),
			//04.10.2018
			|	СУММА(ВаловаяПрибыль)*&КоэфБезНДС - СУММА(ДоставкаВЦене) + СУММА(СуммаБонуса) КАК ВаловаяПрибыльСУчетомДоставкиИБонуса,
			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА СУММА(Себестоимость) <> 0
			|				ТОГДА 100 * ( СУММА(ВаловаяПрибыль)*&КоэфБезНДС - СУММА(ДоставкаВЦене) + СУММА(СуммаБонуса)) / СУММА(Себестоимость)
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПроцентНаценкиСУчетомТранспортаИБонуса
			
						
            |ПО   
			|	ОБЩИЕ
           
			|{ИТОГИ ПО
			|	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
			|	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
			|	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
			//03.10.2018
			|	Транспорт.Задание.* как ЗаданиеНаОтгрузку,
			|	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
			|	НоменклатурнаяГруппа.*,
			|	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
			|	ТаблицаРегистра.Подразделение.* КАК Подразделение,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ДЕНЬ)) КАК ПериодДень,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, МЕСЯЦ)) КАК ПериодМесяц,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, КВАРТАЛ)) КАК ПериодКвартал,
			|	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ГОД)) КАК ПериодГод
			|//ОБЩИЕ_СВОЙСТВА
			|}
			|АВТОУПОРЯДОЧИВАНИЕ";
	//04.10.2018 от 10 000 000 000,00 -> 12 цифр надо
	СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); //28.12.2018
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );
	КоэфНДС = чНДС/(100+чНДС);
	КоэфБезНДС = 1/(1+чНДС/100);
	текст = стрЗаменить(текст,"&КоэфНДС",   формат(КоэфНДС,"ЧРД=.; ЧГ=0") );   //  0.15254237 28813559 32203389 83050847
	текст = стрЗаменить(текст,"*&КоэфБезНДС", формат(КоэфБезНДС,"ЧРД=.; ЧГ=0") );   //  0.84745762 71186440 67796610 16949153	
	
	СтруктураПредставлениеПолей = Новый Структура("
	|Количество,
	|Стоимость,
	|Себестоимость,
	|ВаловаяПрибыль,
	|ВаловаяПрибыльНДС,
	|ПроцентНаценки,
	|ДоставкаВЦене,
	|ВаловаяПрибыльСУчетомДоставкиИБонуса,	
	|СуммаБонуса,	
	|ПроцентНаценкиСУчетомТранспортаИБонуса,	
	|Покупатель,
	|ДоговорКонтрагента,
	|ЗаказПокупателя,
	//03.10.2018
	|ЗаданиеНаОтгрузку,
	|Подразделение,
	|ПериодДень,
	|ПериодНеделя,
	|ПериодМесяц,
	|ПериодКвартал,
	|ПериодГод", 
	"Количество товара, шт.",
	"Продажная стоимость",
	"Себестоимость",
	"Валовая прибыль",
	"НДС(валовой прибыли)",
	"Процент наценки",
	"Транспорт",
	"Валовая прибыль (с учетом НДС, Транспорта и Бонуса)",	
	"Бонус",	
	"Процент наценки* (с учетом НДС, Транспорта и Бонуса)",
	"Покупатель",
	"Договор контрагента",
	"Заказ покупателя",
	//03.10.2018
	"Задание на отгрузку",
	"Подразделение",
	"По дням",
	"По неделям",
	"По месяцам",
	"По кварталам",
	"По годам");
	
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда
	
		ТекстПоляСвойств= "";
		ТекстПоляКатегорий = "";

		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить(); //+++ 11.09.2013
		СтрокаТаблицы.ПутьКДанным = "ДоговорКонтрагента.Владелец";
		СтрокаТаблицы.Представление = "Покупатель";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты;
				
		ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, Текст, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,,,,,,ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);
				
		ДобавитьВТекстСвойстваОбщие(Текст, ТекстПоляСвойств, "//ОБЩИЕ_СВОЙСТВА");
	  // для избежания двойственности поля Номенклатура в запросе
		Текст=СтрЗаменить(Текст,"ИНАЧЕ Номенклатура","ИНАЧЕ ТаблицаРегистраСебестоимость.Номенклатура");
		Текст=СтрЗаменить(Текст,"= Номенклатура","= ТаблицаРегистра.Номенклатура");		
				
	УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, ОбщийОтчет.мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;
	
	ПостроительОтчета.Текст = Текст;
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Покупатель");
	МассивОтбора.Добавить("Номенклатура");
	МассивОтбора.Добавить("Подразделение");
	
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Истина;
	
	ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество, шт.", Ложь, "ЧЦ=15; ЧДЦ=3");
	ОбщийОтчет.ЗаполнитьПоказатели("Стоимость", "Продажная стоимость, руб.", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("Себестоимость", "Себестоимость, руб.", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ПроцентНаценки", "Процент наценки", Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("ВаловаяПрибыль", "Валовая прибыль, руб.", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ВаловаяПрибыльНДС", "НДС(валовой прибыли), руб.", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ДоставкаВЦене", "Транспорт, руб.", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаБонуса", "Бонус, руб.", Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("ВаловаяПрибыльСУчетомДоставкиИБонуса", "Валовая прибыль (с учетом НДС, Транспорта и Бонуса)", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ПроцентНаценкиСУчетомТранспортаИБонуса", "Процент наценки* (с учетом НДС, Транспорта и Бонуса)", Истина, "ЧЦ=15; ЧДЦ=2");
	
	
	ОбщийОтчет.мНазваниеОтчета = "Отчет по валовой прибыли с учетом НДС, Транспорта и Бонуса";
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	ОбщийОтчет.РаскрашиватьИзмерения = истина;//+++ 09.10.2018
	
	// Установим дату начала отчета
	Если ЗначениеНеЗаполнено(ОбщийОтчет.ДатаНач) Тогда
		Если Не ЗначениеНеЗаполнено(ПараметрыСеанса.ТекущийПользователь) Тогда
			ОбщийОтчет.ДатаНач = ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

процедура ПолучитьПоляИИзмерения(Поля, Измерения)
	колПолей = Общийотчет.ПостроительОтчета.ВыбранныеПоля.Количество();
	для i=0 по колПолей-1 цикл
		Поля.Добавить( Общийотчет.ПостроительОтчета.ВыбранныеПоля[i].ПутьКДанным, Общийотчет.ПостроительОтчета.ВыбранныеПоля[i].Имя );
	КонецЦикла;
	
	колИзм   = Общийотчет.ПостроительОтчета.ИзмеренияСтроки.Количество();
	для i=0 по колИзм-1 цикл
		Измерения.Добавить( Общийотчет.ПостроительОтчета.ИзмеренияСтроки[i].ПутьКДанным, Общийотчет.ПостроительОтчета.ИзмеренияСтроки[i].Имя );
	КонецЦикла;
КонецПроцедуры

процедура УстановитьПоляИИзмерения(Поля, Измерения)
	колПолей = Поля.Количество();
	колПолей2 = Общийотчет.ПостроительОтчета.ВыбранныеПоля.Количество();
	Если колПолей <> колПолей2 тогда
		Общийотчет.ПостроительОтчета.ВыбранныеПоля.Очистить();
		для i=0 по колПолей-1 цикл
		ОбщийОтчет.ПостроительОтчета.ВыбранныеПоля.Добавить( Поля[i].Значение, Поля[i].Представление );
		КонецЦикла;
	КонецЕсли;
	
	колИзм   = Измерения.Количество();
	колИзм2   = Общийотчет.ПостроительОтчета.ИзмеренияСтроки.Количество();
	Если колИзм <> колИзм2 тогда
		Общийотчет.ПостроительОтчета.ИзмеренияСтроки.Очистить();
		для i=0 по колИзм-1 цикл
		ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить( Измерения[i].Значение, Измерения[i].Представление );
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//ПроцентНаценкиСУчетомТранспортаИБонуса < Проц
//
//ПроцентНаценкиСУчетомТранспортаИБонуса = ( СУММА(ВаловаяПрибыль)*&КоэфБезНДС - СУММА(ДоставкаВЦене) + СУММА(СуммаБонуса) ) / СУММА(Себестоимость)
//
//ВЫБОР КОГДА себест = 0 ТОГДА 999 
 //	ИНАЧЕ выбор когда ПроцентНаценкиСУчетомТранспортаИБонуса<0 
 //			тогда -ПроцентНаценкиСУчетомТранспортаИБонуса
 //			иначе +ПроцентНаценкиСУчетомТранспортаИБонуса 
 //КОНЕЦ Конец
// 
Функция ПолучитьТекстПроцентНаценкиСУчетомТранспортаИБонуса()
	СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); //28.12.2018
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );
    //КоэфБезНДС = "/1.18"; 
	  КоэфБезНДС = "/"+формат( (1+чНДС/100),"ЧРД=.; ЧГ=0");
	текст = "ИМЕЮЩИЕ 
			|ВЫБОР КОГДА Сумма(ЕстьNull(ТаблицаРегистраСебестоимость.СтоимостьОборот,0))=0 
			|	ТОГДА 9999 
			|	ИНАЧЕ Выбор 
			|		когда ( ( Сумма(ЕстьNull(ТаблицаРегистра.СтоимостьОборот,0)) - Сумма(ЕстьNull(ТаблицаРегистраСебестоимость.СтоимостьОборот,0)) 
			|				)"+КоэфБезНДС+" - Сумма(ЕСТЬNULL(Транспорт.ДоставкаВЦене,0))
			|				+ Сумма(ЕСТЬNULL(ТаблицаРегистраСебестоимость.БонусПоставщика,0)) + Сумма(ЕСТЬNULL(втБонусыПоНоменклатуре.Бонус,0)*ЕСТЬNULL(ТаблицаРегистра.КоличествоОборот,0)) 
			|			  )*Сумма(ЕстьNull(ТаблицаРегистраСебестоимость.СтоимостьОборот,0)) < 0 
			|	  Тогда - ( ( Сумма(ЕстьNull(ТаблицаРегистра.СтоимостьОборот,0)) - Сумма(ЕстьNull(ТаблицаРегистраСебестоимость.СтоимостьОборот,0)) 
			|				)"+КоэфБезНДС+" - Сумма(ЕСТЬNULL(Транспорт.ДоставкаВЦене,0))
			|				+ Сумма(ЕСТЬNULL(ТаблицаРегистраСебестоимость.БонусПоставщика,0)) + Сумма(ЕСТЬNULL(втБонусыПоНоменклатуре.Бонус,0)*ЕСТЬNULL(ТаблицаРегистра.КоличествоОборот,0)) 
			|			   )/Сумма(ЕстьNull(ТаблицаРегистраСебестоимость.СтоимостьОборот,0))
			|	  Иначе ( ( Сумма(ЕстьNull(ТаблицаРегистра.СтоимостьОборот,0)) - Сумма(ЕстьNull(ТаблицаРегистраСебестоимость.СтоимостьОборот,0)) 
			|				)"+КоэфБезНДС+" - Сумма(ЕСТЬNULL(Транспорт.ДоставкаВЦене,0))
			|				+ Сумма(ЕСТЬNULL(ТаблицаРегистраСебестоимость.БонусПоставщика,0)) + Сумма(ЕСТЬNULL(втБонусыПоНоменклатуре.Бонус,0)*ЕСТЬNULL(ТаблицаРегистра.КоличествоОборот,0)) 
			|			   )/Сумма(ЕстьNull(ТаблицаРегистраСебестоимость.СтоимостьОборот,0))
			|КОНЕЦ Конец < ";
	возврат текст;		
КонецФункции			

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, ПроцентНаценкиМин=неопределено ) Экспорт
	
	Поля 	  = новый СписокЗначений;
	Измерения = новый СписокЗначений;
	ПолучитьПоляИИзмерения(Поля, Измерения); //21.12.2018
	ТекстНаценки = ПолучитьТекстПроцентНаценкиСУчетомТранспортаИБонуса();
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		
		//+++ 26.06.2013 - ограничение по подразделению
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
           СообщитьОбОшибке("У вас недостаточно прав для просмотра данного отчета!");
		   Возврат;
	    КонецЕсли;
		
	 	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") тогда 
			СписокМенеджеров = ПолучитьСписокПользователейСвоейГруппы();
			Если ОбщийОтчет.ПостроительОтчета.Отбор.Найти("ДоговорКонтрагента") = неопределено тогда
				ОбщийОтчет.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента");
			КонецЕсли;
			
			СписокДоговоровМенеджера = ПолучитьСписокДоговоровМенеджера(СписокМенеджеров);
			ОбщийОтчет.ПостроительОтчета.Отбор.ДоговорКонтрагента.Использование = Истина;
			ОбщийОтчет.ПостроительОтчета.Отбор.ДоговорКонтрагента.ВидСравнения = ВидСравнения.ВСписке;
			ОбщийОтчет.ПостроительОтчета.Отбор.ДоговорКонтрагента.Значение = СписокДоговоровМенеджера;
          Иначе
			ДоступноеПодразделение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
	    	ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.Значение = ДоступноеПодразделение;
			ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.Использование = Истина;
			ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
		КонецЕсли;	
	КонецЕсли;
	
	//09.10.2018 --- заменяет, но только 1 раз!
	Если ПроцентНаценкиМин<>неопределено и ПроцентНаценкиМин>0 тогда
		
		Если найти(ОбщийОтчет.ПостроительОтчета.Текст, "ИМЕЮЩИЕ")>0 тогда  
	   		ОбщийОтчет.ПостроительОтчета.Текст = стрЗаменить(ОбщийОтчет.ПостроительОтчета.Текст, ТекстНаценки,"//МинПроцНаценки");
   		КонецЕсли;		
   
		//установим новый отбор!		
		ОбщийОтчет.ПостроительОтчета.Текст = стрЗаменить(ОбщийОтчет.ПостроительОтчета.Текст, "//МинПроцНаценки",ТекстНаценки
														+ формат(ПроцентНаценкиМин/100,"ЧДЦ=3; ЧРД=.; ЧН=0")+"//" ); //старый % через //
			
	ИначеЕсли найти(ОбщийОтчет.ПостроительОтчета.Текст, "ИМЕЮЩИЕ")>0 тогда
		ОбщийОтчет.ПостроительОтчета.Текст = стрЗаменить(ОбщийОтчет.ПостроительОтчета.Текст, ТекстНаценки, "//МинПроцНаценки");
	КонецЕсли;

	// ФИКС.набор группировок! при открытии!	
	Если ПроцентНаценкиМин = неопределено тогда
		Общийотчет.ПостроительОтчета.ВыбранныеПоля.Очистить();
		Общийотчет.ПостроительОтчета.ИзмеренияСтроки.Очистить();
		ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить("ДоговорКонтрагента.ОтветственноеЛицо");
		ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить("Покупатель");
		//ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить("ЗаданиеНаОтгрузку");
		//ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить("Номенклатура");
    иначе
		УстановитьПоляИИзмерения(Поля, Измерения); //21.12.2018
	КонецЕсли;
		
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПРоцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Истина;//+++ 11.09.2013
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "Продажи";