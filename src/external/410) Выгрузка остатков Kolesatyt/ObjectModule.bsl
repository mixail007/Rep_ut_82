
//вынесен в отдельную функцию, выделены ВТ:  ВТ_Остатки  и ВТ_ОстаткиТр
//время выполнения сокращено с 130-150 сек до 28-30 сек (4-5х)
Функция получитьТекстЗапроса()
	текстЗапроса ="ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Объект КАК Номенклатура
	               |ПОМЕСТИТЬ втТоварыВПалетах
	               |ИЗ
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство = &СвойствоВидУпаковки
	               |	И ЗначенияСвойствОбъектов.Значение = &ЗначениеПалеты
	               |;
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Номенклатура,
	                |	Номенклатура.Код КАК НоменклатураКод,
	               |	Номенклатура.ВидТовара КАК НоменклатураВидТовара
	               |ПОМЕСТИТЬ втНоменклатура
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ   
				   |	(		    Номенклатура.Родитель В ИЕРАРХИИ (&РодительАКБ)
				   |			ИЛИ Номенклатура.Родитель В ИЕРАРХИИ (&РодительАКсы)
				   |			ИЛИ Номенклатура.Родитель В ИЕРАРХИИ (&РодительДиски)
				   |			ИЛИ Номенклатура.Родитель В ИЕРАРХИИ (&РодительШины)
				   |	) 
				   //02.04.2019 пустых типов не нужно!
				   | И Номенклатура.ВидТовара<>значение(Перечисление.ВидыТоваров.ПустаяСсылка)

				   | И НЕ Номенклатура.Ссылка В (ВЫБРАТЬ втТоварыВПалетах.Номенклатура
	               |				ИЗ втТоварыВПалетах)
				   // - тормозит до 70 сек ! 
				   //|индексировать по Номенклатура
				   |;
//02.04.2019 --------вынесен в ВТ_Остатки ---------------------------				   
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
	               |				Остатки3.Номенклатура.Код КАК НоменклатураКод,
				   |				Остатки3.Номенклатура.ВидТовара КАК НоменклатураВидТовара,
				  
	               |				Остатки3.Номенклатура КАК Номенклатура,
	               |				СУММА(Остатки3.КоличествоОстаток) КАК КоличествоОстаток,
	               |				Остатки3.СторПоставщикКод КАК СторПоставщикКод,
	               |				СУММА(Остатки3.ИндивидуальныйРезерв) КАК ИндивидуальныйРезерв,
	               |				СУММА(Остатки3.КоличествоВПути) КАК КоличествоВПути,
	               |				МИНИМУМ(Остатки3.ДатаПоступления) КАК ДатаПоступления
	               |Поместить ВТ_Остатки
	               |ИЗ
				   | (ВЫБРАТЬ
	               |					ТоварыВРезервеНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |					ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |					0 КАК СторПоставщикКод,
	               |					0 КАК ИндивидуальныйРезерв,
	               |					0 КАК КоличествоВПути,
	               |					ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
				    |				ИЗ
	               |					РегистрНакопления.ТоварыНаСкладах.Остатки( ,
	               |							Номенклатура В (ВЫБРАТЬ втНоменклатура.Номенклатура
	               |									ИЗ	втНоменклатура)
				   |							И Склад.Транзитный=ЛОЖЬ
	               |							И Склад.ЗапретитьИспользование=ЛОЖЬ
				   //+++ 04.02.2019 условие или
				   |			И ( (Склад.Подразделение = &ПодразделениеМСК И Склад = &СкладМоскваИМ)
				   |				или (Склад.Подразделение <> &ПодразделениеМСК) )
				   //|							И ВЫБОР КОГДА Склад.Подразделение = &ПодразделениеМСК
				   //|										ТОГДА Склад = &СкладМоскваИМ
				   //|									ИНАЧЕ ИСТИНА
				   //|								КОНЕЦ
	               |							И Склад <> &АнгарРемонт
	               |							И Склад <> &ЯрОшиповка) КАК ТоварыВРезервеНаСкладахОстатки
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					ТоварыНаОтветственномХраненииОстатки.Номенклатура,
	               |					ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток,
	               |					0,
	               |					0,
	               |					0,
	               |					ДАТАВРЕМЯ(1, 1, 1)
	               |				ИЗ
	               |					РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( 	,
	               |							 Номенклатура В (ВЫБРАТЬ втНоменклатура.Номенклатура
	               |									ИЗ втНоменклатура)
	               |							И Контрагент В (&СписокКонтрагентовОТХ)
				   |							И Склад.Транзитный=ЛОЖЬ
	               |							И Склад.ЗапретитьИспользование=ЛОЖЬ
	               |							И Склад <> &АнгарРемонт
	               |							И Склад <> &ЯрОшиповка) КАК ТоварыНаОтветственномХраненииОстатки
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					РезервДляИМОстатки.Номенклатура,
	               |					РезервДляИМОстатки.КоличествоОстаток,
	               |					0,
	               |					РезервДляИМОстатки.КоличествоОстаток,
	               |					0,
	               |					ДАТАВРЕМЯ(1, 1, 1)
	               |				ИЗ
	               |					РегистрНакопления.РезервДляИМ.Остатки( ,
	               |							Подразделение В (&СписокГоловное)
	               |								И КонтрагентДляРезерваИМ = &КонтрагентДляРезерва) КАК РезервДляИМОстатки
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					ЗаказыПоставщикамОстатки.Номенклатура,
	               |					0,
	               |					0,
	               |					0,
	               |					СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток),
	               |					МИНИМУМ(ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления)
	               |				ИЗ
	               |					РегистрНакопления.ЗаказыПоставщикам.Остатки( ,
	               |							Подразделение В (&СписокГоловное)
	               |								И ЗаказПоставщику.ДатаПоступления > &ТекущаяДата) КАК ЗаказыПоставщикамОстатки
	               |				ГДЕ
	               |					ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
	               |				
	               |				СГРУППИРОВАТЬ ПО
	               |					ЗаказыПоставщикамОстатки.Номенклатура
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					Номенклатура.Ссылка,
	               |					16,
	               |					0,
	               |					0,
	               |					0,
	               |					&Дата2Недели
	               |				ИЗ
	               |					Справочник.Номенклатура КАК Номенклатура
	               |				ГДЕ
	               |					Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппаКованые
	               |					И Номенклатура.Производитель 	  = &ПроизводительVISSOL
	               |					И Номенклатура.ПометкаУдаления = ЛОЖЬ) КАК Остатки3
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				Остатки3.Номенклатура,
	               |				Остатки3.СторПоставщикКод
				   |;
	//02.04.2019 --------вынесен в ВТ_ОстаткиТр ---------------------------				   
			   |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |				ТоварыНаСкладахТр.Подразделение.Код КАК ПодразделениеКод,
	               |				ТоварыНаСкладахТр.Номенклатура.Код КАК НоменклатураКод,
				   |				ТоварыНаСкладахТр.Номенклатура.ВидТовара как  НоменклатураВидТовара,
				   
				   |				ТоварыНаСкладахТр.Подразделение КАК Подразделение,
	               |				ТоварыНаСкладахТр.Номенклатура КАК Номенклатура,
	               |				СУММА(ЕСТЬNULL(ТоварыНаСкладахТр.КоличествоОстаток, 0)) КАК КоличествоОстаток,
	               |				МИНИМУМ(ТоварыНаСкладахТр.СторПоставщикКод) КАК СторПоставщикКод,
	               |				СУММА(ТоварыНаСкладахТр.ФактКоличество) КАК ФактКоличество,
	               |				СУММА(ТоварыНаСкладахТр.ИндивидуальныйРезерв) КАК ИндивидуальныйРезерв
				   |Поместить ВТ_ОстаткиТр
	               |			ИЗ
	               |				(ВЫБРАТЬ
	               |					ТоварыНаСкладахОстатки.Склад.Подразделение КАК Подразделение,
	               |					ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |					ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |					0 КАК СторПоставщикКод,
	               |					ТоварыНаСкладахОстатки.КоличествоОстаток КАК ФактКоличество,
	               |					0 КАК ИндивидуальныйРезерв
	               |				ИЗ
	               |					РегистрНакопления.ТоварыНаСкладах.Остатки(	,
	               |								Номенклатура В (ВЫБРАТЬ втНоменклатура.Номенклатура
	               |									ИЗ втНоменклатура)
 				    |								И Склад.Транзитный
	               |								И Склад.ЗапретитьИспользование = ЛОЖЬ
				   						 //+++ 04.02.2019 1 условие вместо 4х
				   |								И Склад.Подразделение В (&СписокФилиаловБезЕКБ)
				   //|								И Склад.Подразделение В (&СписокДоступныхПодразделений)
				   // |							    И Склад.Подразделение <> &ПодрЕКБ
				   //|								И Склад.Подразделение <> &ПустоеПодразделение
				   //|								И Склад.Подразделение <> &Ярославль
				     //+++ 04.02.2019 условие или
				   |			И ( (Склад.Подразделение = &ПодразделениеМСК и Склад = &СкладМоскваИМ)
				   |				или (Склад.Подразделение <> &ПодразделениеМСК) )
//				   |								И ВЫБОР КОГДА Склад.Подразделение = &ПодразделениеМСК
//				   |										ТОГДА Склад = &СкладМоскваИМ
//				   |									ИНАЧЕ ИСТИНА
//				   |								КОНЕЦ
				   |							) КАК ТоварыНаСкладахОстатки
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					ТоварыНаОтветственномХраненииОстатки.Склад.Подразделение,
	               |					ТоварыНаОтветственномХраненииОстатки.Номенклатура,
	               |					ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток,
	               |					0,
	               |					ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток,
	               |					0
	               |				ИЗ
	               |					РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( ,
	               |								Номенклатура В(ВЫБРАТЬ втНоменклатура.Номенклатура
	               |									ИЗ втНоменклатура)
	               |							И Склад.Транзитный
	               |							И Склад.ЗапретитьИспользование=ЛОЖЬ
				  						  //+++ 04.02.2019  1 условие вместо 4х
				   |							И Склад.Подразделение В (&СписокФилиаловБезЕКБ)
				   //|								И Склад.Подразделение В (&СписокДоступныхПодразделений)
				   // |							    И Склад.Подразделение <> &ПодрЕКБ
				   //|								И Склад.Подразделение <> &ПустоеПодразделение
				   //|								И Склад.Подразделение <> &Ярославль
	               |								И Контрагент В (&СписокКонтрагентовОТХ)
	               |								) КАК ТоварыНаОтветственномХраненииОстатки
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					РезервДляИМОстатки.Подразделение,
	               |					РезервДляИМОстатки.Номенклатура,
	               |					РезервДляИМОстатки.КоличествоОстаток,
	               |					0,
	               |					0,
	               |					РезервДляИМОстатки.КоличествоОстаток
	               |				ИЗ
	               |					РегистрНакопления.РезервДляИМ.Остатки( ,
	                |								КонтрагентДляРезерваИМ = &КонтрагентДляРезерва
	               |								И Подразделение В (&СписокФилиаловБезЕКБ) ) КАК РезервДляИМОстатки) КАК ТоварыНаСкладахТр
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ТоварыНаСкладахТр.Подразделение,
	               |				ТоварыНаСкладахТр.Номенклатура
				   |;
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА Табл1.ПодразделениеКод = ""00005"" ТОГДА ""000092773""
	               |			КОГДА Табл1.ПодразделениеКод = ""00106"" ТОГДА ""Ф00000010""
	               |			КОГДА Табл1.ПодразделениеКод = ""00112"" ТОГДА ""П000835""
	               |			КОГДА Табл1.ПодразделениеКод = ""00133"" ТОГДА ""УТИМ31438""
	               |			КОГДА Табл1.ПодразделениеКод = ""00138"" ТОГДА ""УТ0000494""
	               |			КОГДА Табл1.ПодразделениеКод = ""00172"" ТОГДА ""00172""
	               |		КОНЕЦ, ""000092773"") КАК Контрагент,
	               |	втНоменклатура.НоменклатураКод КАК НоменклатураКод,
	               |	втНоменклатура.НоменклатураВидТовара КАК НоменклатураВидТовара,
	               |	втНоменклатура.Номенклатура КАК Номенклатура,
	               |	Табл1.КоличествоВПути,
	               |	Табл1.ДатаПоступления,
	               |	ЕСТЬNULL(Табл1.СвободныйОстаток, 0) КАК Остаток,
	               |	ЕСТЬNULL(Табл1.Заказано, 0) КАК ВРезерве,
	               |	ЕСТЬNULL(Табл1.ФактКоличество, 0) КАК ФактКоличество,
	               |	ЕСТЬNULL(Табл1.ИндивидуальныйРезерв, 0) КАК ИндивидуальныйРезерв
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		А.ПодразделениеКод КАК ПодразделениеКод,
	               |		А.НоменклатураКод КАК НоменклатураКод,
	               |		А.остаток КАК остаток,
	               |		А.Заказано КАК Заказано,
	               |		А.НоменклатураВидТовара КАК НоменклатураВидТовара,
	               |		А.Номенклатура КАК Номенклатура,
	               |		А.остаток - А.Заказано КАК СвободныйОстаток,
	               |		А.ФактКоличество КАК ФактКоличество,
	               |		А.ИндивидуальныйРезерв КАК ИндивидуальныйРезерв,
	               |		А.КоличествоВПути КАК КоличествоВПути,
	               |		А.ДатаПоступления КАК ДатаПоступления
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			""00005"" КАК ПодразделениеКод,
	               |			остатки.НоменклатураКод КАК НоменклатураКод,
	               |			МАКСИМУМ(остатки.КоличествоОстаток) КАК остаток,
	               |			СУММА(ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) КАК Заказано,
	               |			остатки.НоменклатураВидТовара КАК НоменклатураВидТовара,
	               |			остатки.Номенклатура КАК Номенклатура,
	               |			СУММА(остатки.КоличествоОстаток) КАК ФактКоличество,
	               |			СУММА(остатки.ИндивидуальныйРезерв) КАК ИндивидуальныйРезерв,
	               |			СУММА(остатки.КоличествоВПути) КАК КоличествоВПути,
	               |			МИНИМУМ(остатки.ДатаПоступления) КАК ДатаПоступления
	               |		ИЗ
	               |			ВТ_Остатки КАК остатки
				   
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки( ,
	               |						ЗаказПокупателя.Транзит=ЛОЖЬ  
				   |							И ЗаказПокупателя.Подразделение=&Ярославль
	               |							И ЗаказПокупателя.Проверен
	               |							И Номенклатура В (ВЫБРАТЬ втНоменклатура.Номенклатура
	               |								ИЗ втНоменклатура) ) КАК ЗаказыПокупателейОстатки
	               |				ПО остатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			остатки.НоменклатураКод,
	               |			остатки.НоменклатураВидТовара,
	               |			остатки.Номенклатура
	               |
				   //=========================ТРанзитные остатки (филиалов)======================================
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			остаткиТр.ПодразделениеКод,
	               |			остаткиТр.НоменклатураКод,
	               |			МАКСИМУМ(остаткиТр.КоличествоОстаток),
	               |			СУММА(ЕСТЬNULL(ЗапросЗаказы.КоличествоОстаток, 0)),
	               |			остаткиТр.НоменклатураВидТовара,
	               |			остаткиТр.Номенклатура,
	               |			СУММА(остаткиТр.ФактКоличество),
	               |			СУММА(остаткиТр.ИндивидуальныйРезерв),
	               |			СУММА(0),
	               |			МИНИМУМ(ДАТАВРЕМЯ(1, 1, 1))
	               |		ИЗ
	               |			ВТ_ОстаткиТР КАК остаткиТр
				   
	               |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |					ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение КАК Подразделение,
	               |					ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	               |					СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |				ИЗ
	               |					РегистрНакопления.ЗаказыПокупателей.Остатки( ,
	               |							 Номенклатура В(ВЫБРАТЬ втНоменклатура.Номенклатура
	               |									ИЗ втНоменклатура)
	               |							И ЗаказПокупателя.Транзит
	               |							И ЗаказПокупателя.Проверен
				   |							И ЗаказПокупателя.Подразделение В (&СписокФилиаловБезЕКБ)
				   //|								И ЗаказПокупателя.Подразделение <> &ПустоеПодразделение
				   //|								И ЗаказПокупателя.Подразделение <> &Ярославль
				   |							) КАК ЗаказыПокупателейОстатки
	               |				
	               |				СГРУППИРОВАТЬ ПО
	               |					ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение,
	               |					ЗаказыПокупателейОстатки.Номенклатура) КАК ЗапросЗаказы
	               |				ПО остаткиТр.Номенклатура = ЗапросЗаказы.Номенклатура
	               |					И остаткиТр.Подразделение = ЗапросЗаказы.Подразделение
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			остаткиТр.ПодразделениеКод,
	               |			остаткиТр.НоменклатураКод,
	               |			остаткиТр.НоменклатураВидТовара,
	               |			остаткиТр.Номенклатура) КАК А
	               |	ГДЕ
	               |		(А.остаток - А.Заказано >= &МинОстаток
	               |				ИЛИ А.КоличествоВПути > 0) ) КАК Табл1
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНоменклатура КАК втНоменклатура
	               |		ПО Табл1.Номенклатура = втНоменклатура.Номенклатура
	               |
				   |УПОРЯДОЧИТЬ ПО
				   |	НоменклатураКод,
				   |	Контрагент
				   |ИТОГИ ПО
				   |	НоменклатураВидТовара,
				   |	Номенклатура
				   |АВТОУПОРЯДОЧИВАНИЕ
				   |; 
				   |////////////////////////////////////////////////////////////////
				   |Уничтожить втТоварыВПалетах; 
				   |Уничтожить ВТНоменклатура;
				   |Уничтожить ВТ_Остатки;
				   |Уничтожить ВТ_ОстаткиТр;
				   |";
	возврат текстЗапроса;
КонецФункции

//19.09.16 Смирнов
//выгружаем все остатки, а не только те которые на сайте
//сделано так из-за того, что во время выгрузки товаров на сайт все остатки обнуляются
//СписокНоменклатуры=ПолучитьСписокНомАЭ();
//
функция АЭ_ВыгрузитьОстаткиТоваров() Экспорт 
	
дНачала0 = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ФайлОстатков=ПолучитьИмяВременногоФайла("xml");
	
	Запрос = новый Запрос;   	   
	Запрос.Текст = получитьТекстЗапроса();//см. выше
			   
	Запрос.УстановитьПараметр("СвойствоВидУпаковки",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90165"));
	Запрос.УстановитьПараметр("ЗначениеПалеты", Справочники.ЗначенияСвойствОбъектов.НайтиПоКоду("01593"));

	Запрос.УстановитьПараметр("АнгарРемонт",Справочники.Склады.НайтиПоКоду("02316"));
	Запрос.УстановитьПараметр("ЯрОшиповка", Справочники.Склады.НайтиПоКоду("00010"));

	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());

	Запрос.УстановитьПараметр("МинОстаток", 1 ); // -2001  >> +1 Остаток на складах от 0 и более	
		   
	Запрос.УстановитьПараметр("РодительАКБ",  справочники.Номенклатура.НайтиПоКоду("0080021"));
	Запрос.УстановитьПараметр("РодительАКсы", справочники.Номенклатура.НайтиПоКоду("0000001"));
	Запрос.УстановитьПараметр("РодительДиски",справочники.Номенклатура.НайтиПоКоду("0001752"));
	Запрос.УстановитьПараметр("РодительШины", справочники.Номенклатура.НайтиПоКоду("0001746"));

	Запрос.УстановитьПараметр("ПроизводительVISSOL",Справочники.Производители.НайтиПоКоду("3657"));
	Запрос.УстановитьПараметр("НоменклатурнаяГруппаКованые",Справочники.НоменклатурныеГруппы.НайтиПоКоду("00022"));
	Запрос.УстановитьПараметр("Дата2Недели", ТекущаяДата() + 14*86400 );

	//+++ 04.02.2019 все филиалы, отсортированы по Коду:  0-Яр; 1-РнД, 2-СПб, 3-Мск, 4-Ект, 5-Тл
	СписокФилиаловБезЕКБ = новый СписокЗначений;
	СписокФилиаловБезЕКБ.ЗагрузитьЗначения( яштПоставщики.ПолучитьМассивФилиалов() ); //все действующие филиалы!
	Запрос.УстановитьПараметр("Ярославль",		 СписокФилиаловБезЕКБ[0].Значение ); //Яр.
	Запрос.УстановитьПараметр("ПодрЕКБ",  		 СписокФилиаловБезЕКБ[4].Значение ); //ЕКБ !
	Запрос.УстановитьПараметр("ПодразделениеМСК",СписокФилиаловБезЕКБ[3].Значение ); //Мск !
	Запрос.УстановитьПараметр("СкладМоскваИМ", СписокФилиаловБезЕКБ[3].Значение.СкладСборкиИМ); //  "02136" - Москва Интернет-Магазин

	подразделениеПустое = справочники.Подразделения.ПустаяСсылка();
	Запрос.УстановитьПараметр("ПустоеПодразделение",подразделениеПустое);

	СписокГоловное = новый СписокЗначений;
	СписокГоловное.Добавить(подразделениеПустое);
	СписокГоловное.Добавить(СписокФилиаловБезЕКБ[0].Значение); //Яр.
	Запрос.УстановитьПараметр("СписокГоловное",СписокГоловное);
		
	СписокФилиаловБезЕКБ.Удалить(4);//ЕКБ
	 СписокФилиаловБезЕКБ.Удалить(0);//Ярославль
	 Запрос.УстановитьПараметр("СписокФилиаловБезЕКБ",СписокФилиаловБезЕКБ);

	Запрос.УстановитьПараметр("КонтрагентДляРезерва", Справочники.Контрагенты.НайтиПоКоду("П004703") ); //РезервДляИМ 

	СписокКонтрагентовОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);  //+++ 01.10.2014
	Запрос.УстановитьПараметр("СписокКонтрагентовОТХ",СписокКонтрагентовОТХ);

	дНачала=ТекущаяУниверсальнаяДатаВМиллисекундах();
	
		РезультатЗапроса = Запрос.Выполнить(); //Основной запрос
		ВыборкаВидНоменклатуры   = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
	сек=строка( (ТекущаяУниверсальнаяДатаВМиллисекундах()-дНачала)/1000 );
	#Если Клиент тогда
		Сообщить("Выполнение запроса: "+сек+" сек.");
	#КонецЕсли

//-------------------------------Выгрузка в Файл------------------------------	
	дНачала =ТекущаяУниверсальнаяДатаВМиллисекундах(); 
	ЗаписьXML=Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ФайлОстатков);
	
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("Остатки");
	ЗаписьXML.ЗаписатьАтрибут("Дата",""+ТекущаяДата());
	
	Пока ВыборкаВидНоменклатуры.Следующий()Цикл
		ВыборкаНоменклатура=ВыборкаВидНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока  ВыборкаНоменклатура.Следующий() цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("Номенклатура");
				ЗаписьXML.ЗаписатьАтрибут("Код",СокрЛП(ВыборкаНоменклатура.НоменклатураКод));
				//ЗаписьXML.ЗаписатьАтрибут("УИД",""+ВыборкаНоменклатура.Номенклатура.УникальныйИдентификатор());
				ЗаписьXML.ЗаписатьАтрибут("Вид",СокрЛП(ВыборкаВидНоменклатуры.НоменклатураВидТовара));
			ВыборкаСклад=ВыборкаНоменклатура.Выбрать();
			Пока  ВыборкаСклад.Следующий() цикл
				ЗаписьXML.ЗаписатьНачалоЭлемента("Склад");
					ЗаписьXML.ЗаписатьАтрибут("Код",""+СокрЛП(ВыборкаСклад.Контрагент));
					Количество = ?(ВыборкаСклад.Остаток>ВыборкаСклад.ФактКоличество,ВыборкаСклад.ФактКоличество,ВыборкаСклад.Остаток);
					ЗаписьXML.ЗаписатьАтрибут("Количество",""+Формат(?(Количество<0,0,Количество),"ЧН=; ЧГ=0"));
					ЗаписьXML.ЗаписатьАтрибут("КоличествоРезерв",""+Формат(ВыборкаСклад.ВРезерве,"ЧН=; ЧГ=0"));
					ЗаписьXML.ЗаписатьАтрибут("ВТЧИндивидуальныйРезерв",""+Формат(ВыборкаСклад.ИндивидуальныйРезерв,"ЧН=; ЧГ=0"));
					
					Если ЗначениеЗаполнено(ВыборкаСклад.ДатаПоступления) тогда
						ЗаписьXML.ЗаписатьАтрибут("КоличествоВПути",""+Формат(ВыборкаСклад.КоличествоВПути,"ЧН=; ЧГ=0"));
						ЗаписьXML.ЗаписатьАтрибут("ДатаПоступления",""+Формат(ВыборкаСклад.ДатаПоступления,"ЧН=; ЧГ=0; ДФ=dd.MM.yyyy"));
					КонецЕсли;
				ЗаписьXML.ЗаписатьКонецЭлемента();//Склад
			КонецЦикла;
			ЗаписьXML.ЗаписатьКонецЭлемента();//Номенклатура
		КонецЦикла;
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.Закрыть();
	
	сек=строка( (ТекущаяУниверсальнаяДатаВМиллисекундах()-дНачала)/1000);
	#Если Клиент тогда
		Сообщить("Генерация файла XML: "+сек+" сек.");
		Сообщить(ФайлОстатков);
	#КонецЕсли
	
//------------------------------Выгрузка на FTP------------------------------	
	дНачала =ТекущаяУниверсальнаяДатаВМиллисекундах(); 
	//Попытка
		//ИмяФайлаСообщения="test_rest_1c.xml";	
		//FTPсервер = "kolesatyt.ru"; 		//FTPсервер = "95.213.228.43";		//FTPсервер = "95.213.228.42";
		//FTPсервер = "31.186.103.151";
		//врФТП = Новый FTPСоединение(FTPсервер,,"bitrix", "eequajaiz4uNaku",, Истина );                                  
		//ПутьКфайлуFTP = "www/_common/upload/";
		//врФТП = Новый FTPСоединение(FTPсервер,,"1cuser", "Sith4Hio",, Истина );                                  
		
		ИмяФайлаСообщения="rest_1c.xml";
		FTPсервер = "188.93.20.230";
		врФТП = Новый FTPСоединение(FTPсервер,,"user1c", "oebohaCh5ohyaiko6Aer",, Истина ); 
		ПутьКфайлуFTP = "/upload/1c/";
		врФТП.Записать(ФайлОстатков , ПутьКфайлуFTP+ИмяФайлаСообщения);
		
		сек=строка( (ТекущаяУниверсальнаяДатаВМиллисекундах()-дНачала)/1000);
		#Если Клиент тогда
		Сообщить("отправка файла Колесатут: "+сек+" сек.");
		#КонецЕсли
		
//25.01.17 Смирнов------------для шинтрейда те же остатки---------------------------------
	дНачала =ТекущаяУниверсальнаяДатаВМиллисекундах(); 
		врФТП = Новый FTPСоединение("yst.ru",,"dc140403_shinnik", "4r8m2mbE",, Истина, 30);
		ПутьКфайлуFTP = "goods/";
		врФТП.Записать(ФайлОстатков , ПутьКфайлуFTP+ИмяФайлаСообщения);
		
		//запускаем скрипт
		Соединение = Неопределено;
		
		сек=строка( (ТекущаяУниверсальнаяДатаВМиллисекундах()-дНачала)/1000);
		#Если Клиент тогда
		Сообщить("отправка файла Шинтрейд: "+сек+" сек.");
		#КонецЕсли
		
//скрипты не запускаем, задача 29845 -------------------------------------------------
	дНачала =ТекущаяУниверсальнаяДатаВМиллисекундах(); 
		СтруктураПараметровСайта = Новый Структура;
		//СтруктураПараметровСайта.Вставить("ИмяПользователя", "1cvigr");         
		//СтруктураПараметровСайта.Вставить("Пароль"		   , "$Tiptronic!13");
		СтруктураПараметровСайта.Вставить("ИмяПользователя", "1cuser");         
		СтруктураПараметровСайта.Вставить("Пароль"		   , "Sith4Hio");

		//СтруктураПараметровСайта.Вставить("Сервер"		, "95.213.228.43");
		СтруктураПараметровСайта.Вставить("Сервер"		, "31.186.103.151");
		СтруктураПараметровСайта.Вставить("Порт"		, неопределено);
		СтруктураПараметровСайта.Вставить("ПроксиИспользование"  , Ложь);
		СтруктураПараметровСайта.Вставить("ЗащищенноеСоединение",  ЛОЖЬ);
		СтруктураПараметровСайта.Вставить("ПроксиСервер"		 , "");
		СтруктураПараметровСайта.Вставить("ПроксиПорт"		     , 0);
		СтруктураПараметровСайта.Вставить("ПроксиИмяПользователя", "");
		СтруктураПараметровСайта.Вставить("ПроксиПароль"		 , "");
		
		СтруктураПараметровСайта.Вставить("АдресСкрипта", "/local/scripts/1c/1c_rest.php");
		//ЗапуститьСкрипт(СтруктураПараметровСайта);
		//Исключение
		//	ТекстОшибки=ОписаниеОшибки();
		//	Сообщить(ТекстОшибки);
		//КонецПопытки;
		//сек=строка( (ТекущаяУниверсальнаяДатаВМиллисекундах()-дНачала)/1000);
		//#Если Клиент тогда
		//	Сообщить("Работа скрипта: "+сек+" сек.");
		//#КонецЕсли
				
 	сек=строка( (ТекущаяУниверсальнаяДатаВМиллисекундах()-дНачала0)/1000);
  #Если Клиент тогда
	Сообщить("=== Итого время выполнения: "+сек+" сек. === ");
	#КонецЕсли

КонецФункции //АЭ_ВыгрузитьОстаткиТоваров()

процедура ЗапуститьСкрипт(СтруктураПараметровСайта)

	Соединение = HTTPУстановитьСоединение(СтруктураПараметровСайта);
	Если Соединение = Неопределено Тогда
		#Если Клиент тогда
			сообщить("Соединение с сайтом - НЕ установлено!", СтатусСообщения.Внимание);
		#КонецЕсли
	Иначе
		#Если Клиент тогда
			сообщить("Соединение с сайтом - УСПЕШНО установлено!", СтатусСообщения.Информация);
		#КонецЕсли
	КонецЕсли;
	
	Заголовки="";
	СтрокаСообщенияПользователю = "";
	
	ответСервера = HTTPПолучитьДанныеССервера(Соединение, СтруктураПараметровСайта.АдресСкрипта, Заголовки, СтрокаСообщенияПользователю );
	СтрокаСообщенияПользователю = СокрЛП(СтрокаСообщенияПользователю);
	#Если Клиент тогда
		Если Не ПустаяСтрока(СтрокаСообщенияПользователю) Тогда
			Сообщить(СтрокаСообщенияПользователю, СтатусСообщения.Информация);
		Иначе
			Сообщить("Ответ с сервера - пустая строка!", СтатусСообщения.Внимание);
		КонецЕсли;
	#КонецЕсли
	
	Если ответСервера=неопределено Тогда
		#Если Клиент тогда
			сообщить(строка(ТекущаяДата())+" - Скрипт "+СтруктураПараметровСайта.АдресСкрипта+" выполнен УСПЕШНО!", СтатусСообщения.Информация);
		#КонецЕсли
	Иначе
		ответСервера = СокрЛП( стрЗаменить(ответСервера, "<br>", "
		|") );
		#Если Клиент тогда
			сообщить("При выполнении скрипта: "+СтруктураПараметровСайта.АдресСкрипта+" получен ответ сервера: 
			|"+ответСервера);
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

Функция HTTPУстановитьСоединение(СтруктураПараметровСайта) Экспорт
	
	Соединение = НеОпределено;
	
	ИнтернетПрокси = НеОпределено;
	
	Если СтруктураПараметровСайта.ПроксиИспользование Тогда
		
		ИнтернетПрокси = Новый ИнтернетПрокси;
		ИнтернетПрокси.Пользователь = СтруктураПараметровСайта.ПроксиИмяПользователя;
		ИнтернетПрокси.Пароль		= СтруктураПараметровСайта.ПроксиПароль;
		
		ПротоколПрокси = ?(СтруктураПараметровСайта.ЗащищенноеСоединение, "HTTPS", "HTTP");
		
		Если СтруктураПараметровСайта.ПроксиПорт = 0 Тогда
			ИнтернетПрокси.Установить(ПротоколПрокси, СтруктураПараметровСайта.ПроксиСервер);
		Иначе
			ИнтернетПрокси.Установить(ПротоколПрокси, СтруктураПараметровСайта.ПроксиСервер, СтруктураПараметровСайта.ПроксиПорт);
		КонецЕсли;
		
	КонецЕсли;
	
	Порт = ?(ЗначениеЗаполнено(СтруктураПараметровСайта.Порт), СтруктураПараметровСайта.Порт, 80); //+++ 14.02.2013 ?(СтруктураПараметровСайта.ЗащищенноеСоединение, 443,80)
	
	Попытка
		
		Соединение = Новый HTTPСоединение(СтруктураПараметровСайта.Сервер, Порт, СтруктураПараметровСайта.ИмяПользователя, СтруктураПараметровСайта.Пароль, ИнтернетПрокси, СтруктураПараметровСайта.ЗащищенноеСоединение);
		
	Исключение
		
		ТексОшибки = "Не удалось установить соединение с сервером " + СтруктураПараметровСайта.Сервер + ":" + Строка(СтруктураПараметровСайта.Порт) + ".
		|Проверьте правильность адреса сервера, порт, имя пользователя и пароль.";
		
		Соединение = Неопределено;
		
	Конецпопытки;
	
	Возврат Соединение;
	
КонецФункции

Функция HTTPПолучитьДанныеССервера(Соединение, ПараметрыЗапроса="", Заголовки="", СтрокаСообщенияПользователю = "") Экспорт
	
	ОтветСервера   = Неопределено; 
	
	ИмяФайлаОтвета = ПолучитьИмяВременногоФайла();
	
	Попытка
		Соединение.Получить(СокрЛП(ПараметрыЗапроса), ИмяФайлаОтвета, СокрЛП(Заголовки));
	Исключение
		СтрокаСообщенияПользователю = "Не удалось получить данные с сервера. Проверьте правильность адреса сервера, порт, имя пользователя и пароль,"
		+ Символы.ПС + "а также настройки подключения к Интернет." + Символы.ПС + ОписаниеОшибки();
	КонецПопытки;	
	
	ФайлОтвета = Новый Файл(ИмяФайлаОтвета);
	
	Если ФайлОтвета.Существует() Тогда
		
		ТекстОтвета = Новый ТекстовыйДокумент();
		ТекстОтвета.Прочитать(ИмяФайлаОтвета);
		Если ТекстОтвета.КоличествоСтрок()>0 Тогда
			ОтветСервера = ТекстОтвета.ПолучитьТекст();
		Иначе
			СтрокаСообщенияПользователю = СтрокаСообщенияПользователю + Символы.ПС + "Получение данных с сервера: Получен пустой ответ сервера."; 	
		КонецЕсли;
		
	Иначе	
		СтрокаСообщенияПользователю = СтрокаСообщенияПользователю + Символы.ПС + "Получение данных с сервера: Ответ сервера не получен."; 
	КонецЕсли;
	
	Попытка
		УдалитьФайлы(КаталогВременныхФайлов(), ИмяФайлаОтвета);
	Исключение
	КонецПопытки;
	
	Возврат ОтветСервера;
	
КонецФункции

функция ПолучитьСписокНомАЭ()
	//соединение
	Списокном = новый СписокЗначений;
	Base="Srvr=""sigma:2041"";Ref=""v82ib_fedunov_ut""";
	UsrPwd = "Usr=Администратор;Pwd=cegthuthjq";
	СтрокаСоединенияCOM = Base+";"+UsrPwd;
	
	Соединение = ПолучитьСоединение(СтрокаСоединенияCOM); 
	Если Соединение = неопределено тогда
		возврат ЛОЖЬ;
	КонецЕсли;
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст=Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|ТоварыНаСайте.Номенклатура.Код
	|ИЗ
	|	РегистрСведений.ТоварыНаСайте КАК ТоварыНаСайте";
	;
    рез = Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		Списокном.Добавить(Рез.НоменклатураКод);	
	КонецЦикла;
	Возврат Списокном;
КонецФункции

функция ПолучитьСоединение(СтрокаСоединенияCOM="", v8="V82") Экспорт
	
	v8connect = Новый COMОбъект(v8+".ComConnector");
	Попытка
	Соединение = v8connect.Connect(СтрокаСоединенияCOM);
	#Если Клиент Тогда
	ТипБазы = "Ref=";  длТипаБазы=3;
	Если Найти(СтрокаСоединенияCOM,"File=")>0 тогда		
		ТипБазы = "File="; длТипаБазы=4;
	КонецЕсли;	
	имяБД = Прав(СтрокаСоединенияCOM,стрДлина(СтрокаСоединенияCOM) - найти(СтрокаСоединенияCOM,ТипБазы)-длТипаБазы);
	имяБД = Лев(имяБД, найти(имяБД,";")-1);
	Сообщить("Соединение с базой: "+имяБД+" - успешно установлено.", СтатусСообщения.Информация);
	#КонецЕсли
	Исключение
	#Если Клиент Тогда
		Сообщить("Ошибка соединения с базой: " + ОписаниеОшибки(), СтатусСообщения.Внимание);
	#КонецЕсли
		Возврат неопределено;
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

