Перем ТЗзаказ Экспорт;

Процедура НайтиФайлыПоМаске(ТекИмяКаталога,Маска, ТЗфайлов)
	
	НайденныеФайлы = НайтиФайлы(ТекИмяКаталога,Маска, Истина);

	Для Каждого ТекФайл Из НайденныеФайлы Цикл
		НовСтр = ТЗфайлов.Добавить();
		НовСтр.ИмяФайла = ТекФайл.ИмяБезРасширения;
		НовСтр.ИмяФайлаПолное = ТекФайл.Имя;
		НовСтр.Путь = ТекФайл.Путь;
	КонецЦикла;
	
КонецПроцедуры	

Процедура СформироватьОтчет(Таб) Экспорт
		
	//это таблица, из которой будут браться данные для печатной формы
	ТЗзаказ = Новый ТаблицаЗначений;
	ТЗзаказ.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	ТЗзаказ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТЗзаказ.Колонки.Добавить("КолОст", Новый ОписаниеТипов("Число"));
	ТЗзаказ.Колонки.Добавить("НадоПечатать", Новый ОписаниеТипов("Булево"));
	
	//соберем в ТЗ наименования файлов, существующих в указаном каталоге
	ТЗфайлов = Новый ТаблицаЗначений();
	ТЗфайлов.Колонки.Добавить("ИмяФайла", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(150)));
	ТЗфайлов.Колонки.Добавить("ИмяФайлаПолное", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(150)));
	ТЗфайлов.Колонки.Добавить("Путь", Новый ОписаниеТипов("Строка"));

	ПечКаталогДляПоиска = "";
	Для Каждого Стр из КаталогДляПоиска Цикл
		ТекПуть = СокрЛП(Стр.ИмяКаталога);
		Если ТекПуть <> "" Тогда
			ПечКаталогДляПоиска = ПечКаталогДляПоиска+ТекПуть+Символы.ПС; 
			НайтиФайлыПоМаске(ТекПуть,"*.png", ТЗфайлов);
			НайтиФайлыПоМаске(ТекПуть,"*.jpg", ТЗфайлов);
		КонецЕсли;
	КонецЦикла;
	
	ТЗфайловДляПоиска = ТЗфайлов.Скопировать();
	ТЗфайловДляПоиска.Свернуть("ИмяФайла",);
	
	//ТЗфайлов.ВыбратьСтроку();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КолОст,
	|	ЗначенияСвойствОбъектов.Значение КАК Цвет,
	|	ТоварыНаСкладахОстатки.Номенклатура.Модель.Наименование КАК Модель,
	|	ТоварыНаСкладахОстатки.Номенклатура.Производитель КАК Производитель,
	|	ТоварыНаСкладахОстатки.Номенклатура.Типоразмер.Диаметр КАК Размер
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Склад В ИЕРАРХИИ (&СписокСкладов)
	|				И Номенклатура.Производитель В ИЕРАРХИИ (&Производитель)) КАК ТоварыНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = &Цвет)";

	
	
	Запрос.УстановитьПараметр("Цвет", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Цвет"));
	Запрос.УстановитьПараметр("СписокСкладов", Склад);
	Запрос.УстановитьПараметр("Производитель", Производитель);
	
	ТЗост = Запрос.Выполнить().Выгрузить();
	ТЗост.Колонки.Добавить("НаимФайлаДляПоиска", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(150)));
	Для Каждого Стр из ТЗост Цикл
		Если СокрЛП(Стр.Цвет)="" Тогда
			//цвет в свойствах не указан, берем цвет из наименования
			НомПозПробела = 0;
			ТекНаим = СокрЛП(Стр.Номенклатура.Наименование);
			Для к = 1 по СтрДлина(ТекНаим) Цикл
				Если Сред(ТекНаим, к, 1)=" " Тогда
					НомПозПробела = к;
				КонецЕсли;	
			КонецЦикла;
			Если НомПозПробела <> 0 Тогда
				ТекЦвет = Сред(ТекНаим, НомПозПробела+1);
				Стр.НаимФайлаДляПоиска = СокрЛП(Стр.Модель)+"_"+СокрЛП(ТекЦвет);
				Стр.Цвет = СокрЛП(ТекЦвет);
			КонецЕсли;	
		Иначе	
			Стр.НаимФайлаДляПоиска = СокрЛП(Стр.Модель)+"_"+СокрЛП(Стр.Цвет);
		КонецЕсли;
		//у производителя NZ есть модели с наименованием 1021 (только числа), например
		//а к фотографиям впереди присоединен префикс NZ
		Если СокрЛП(Стр.Номенклатура.Производитель.Наименование)="NZ" Тогда
			Попытка
				МодельИзСтрокиВЧисло = (СтрЗаменить(Число(СокрЛП(Стр.Модель)),Символы.НПП,""));
				Если МодельИзСтрокиВЧисло = СокрЛП(Стр.Модель) Тогда
					Стр.НаимФайлаДляПоиска = "NZ"+Стр.НаимФайлаДляПоиска;
				КонецЕсли;	
			Исключение
			КонецПопытки;
		КонецЕсли;	
	КонецЦикла;	
	//ТЗост.ВыбратьСтроку();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗост.Номенклатура,
	|	ТЗост.Модель,
	|	ТЗост.Цвет,
	|	ТЗост.НаимФайлаДляПоиска,
	|	ТЗост.КолОст,
	|	ТЗост.Размер
	|ПОМЕСТИТЬ ТЗост
	|ИЗ
	|	&парТЗост КАК ТЗост
	|ГДЕ
	|	ТЗост.КолОст >= 4
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗфайлов.ИмяФайла
	|ПОМЕСТИТЬ ТЗфайлов
	|ИЗ
	|	&парТЗфайлов КАК ТЗфайлов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗост.Номенклатура,
	|	ТЗост.Модель,
	|	ТЗост.Цвет,
	|	ТЗост.КолОст,
	|	ТЗост.Размер,
	|	ТЗост.НаимФайлаДляПоиска,
	|	ТЗфайлов.ИмяФайла
	|ПОМЕСТИТЬ ТЗполная
	|ИЗ
	|	ТЗост КАК ТЗост
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТЗфайлов КАК ТЗфайлов
	|		ПО ТЗост.НаимФайлаДляПоиска = ТЗфайлов.ИмяФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗполная.Номенклатура КАК Номенклатура,
	|	ТЗполная.Номенклатура.Код КАК Код,
	|	ТЗполная.Модель КАК Модель,
	|	ТЗполная.Цвет КАК Цвет,
	|	ТЗполная.Размер КАК Размер,
	|	ТЗполная.КолОст КАК КолОст,
	|	ТЗполная.ИмяФайла,
	|	ТЗполная.НаимФайлаДляПоиска КАК НаимФайлаДляПоиска
	|ИЗ
	|	ТЗполная КАК ТЗполная
	|ГДЕ
	|	ТЗполная.ИмяФайла ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Модель,
	|	Цвет,
	|	Размер УБЫВ,
	|	КолОст УБЫВ
	|ИТОГИ ПО
	|	НаимФайлаДляПоиска";
	
	
	Запрос.УстановитьПараметр("парТЗост", ТЗост);
	Запрос.УстановитьПараметр("парТЗфайлов", ТЗфайловДляПоиска);
	
	Макет = ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
	
	ОбластьЗаголовок.Параметры.ПечЗаголовок = "Отсутствие изображений";
	ОбластьЗаголовок.Параметры.ПечПутьПоиска = ПечКаталогДляПоиска;
	ОбластьЗаголовок.Параметры.ПечПроизводитель = "Производитель: "+?(ЗначениеЗаполнено(Производитель),Производитель, "все производители");
	ПечСклад = "";
	Для Каждого Стр Из Склад Цикл
		ПечСклад = ПечСклад+Стр.Значение+"; ";
	КонецЦикла;	
	ОбластьЗаголовок.Параметры.ПечСклад = ?(ПечСклад="","По всем складам","По складам: "+ПечСклад);
	Таб.Вывести(ОбластьЗаголовок);

	Таб.Вывести(ОбластьШапка);
	Таб.ФиксацияСверху = Таб.ВысотаТаблицы;
	ДатаНачалаЗакупок = ДобавитьМесяц(ТекущаяДата(),-12);	
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомПП = 0;
	Пока Выборка.Следующий() Цикл
		НазваниеИзображения = Выборка.НаимФайлаДляПоиска;
		ВыборкаНом = Выборка.Выбрать();
		Пока ВыборкаНом.Следующий() Цикл
			НомПП = НомПП+1;
			ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНом);
			ОбластьНоменклатура.Параметры.НазваниеИзображения = НазваниеИзображения;
			ОбластьНоменклатура.Параметры.НомПП = НомПП;
			РасшифровкаДляПечати = Новый Структура;
			РасшифровкаДляПечати.Вставить("ПризнакПечати", Истина);
			РасшифровкаДляПечати.Вставить("НомПП", НомПП);
			ОбластьНоменклатура.Параметры.РасшифровкаДляПечати = РасшифровкаДляПечати;
			ОбластьНоменклатура.Параметры.НадоПечатать = "V";
			//поиск последнего поступления
			Рег = РегистрыНакопления.Закупки.Выбрать(ДатаНачалаЗакупок,,Новый Структура("Номенклатура",ВыборкаНом.Номенклатура),"УБЫВ");
			ПечПоставщик = "";
			Пока Рег.Следующий() Цикл
				Если Рег.Количество > 0 И Рег.Стоимость > 0 И Рег.Активность Тогда
					ПечПоставщик = СокрЛП(Рег.ДоговорКонтрагента.Владелец.Наименование);
					прервать;
				КонецЕсли;
			КонецЦикла;
			Если ПечПоставщик <> "" Тогда
				НомПозПробела = Найти (ПечПоставщик, " ");
				Если НомПозПробела > 0 Тогда
					ПечПоставщик = Лев(ПечПоставщик, НомПозПробела);
				КонецЕсли;	
				
			КонецЕсли;
			ОбластьНоменклатура.Параметры.Поставщик = ПечПоставщик;
			Таб.Вывести(ОбластьНоменклатура);
			НовСтр = ТЗзаказ.Добавить();
			НовСтр.Номенклатура = ВыборкаНом.Номенклатура;
			НовСтр.КолОст = ВыборкаНом.КолОст;
			НовСтр.НомерСтроки = НомПП;
			НовСтр.НадоПечатать = Истина;
			прервать;
		КонецЦикла;	
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ПечатьЗаданияНаОтгрузку() Экспорт
	
	НайденныеСтроки = ТЗзаказ.НайтиСтроки(Новый Структура("НадоПечатать", Истина));
	ТЗдляПечати = ТЗзаказ.Скопировать(НайденныеСтроки);
	ТЗдляПечати.Свернуть("Номенклатура", "КолОст");
	
	ЗапросМХ = Новый Запрос;
	ЗапросМХ.Текст = "ВЫБРАТЬ
	                 |	ТЗ.Номенклатура,
	                 |	ТЗ.КолОст КАК КолЗаказано
	                 |ПОМЕСТИТЬ ТЗзаказ
	                 |ИЗ
	                 |	&парТЗзаказ КАК ТЗ
	                 |;
	                 |
	                 |////////////////////////////////////////////////////////////////////////////////
	                 |ВЫБРАТЬ
	                 |	ТЗзаказ.Номенклатура КАК Номенклатура,
	                 |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	                 |	ЕСТЬNULL(ТоварыАдресноеХранениеОстатки.АдресХранения, """") КАК АдресХранения,
	                 |	МАКСИМУМ(ТЗзаказ.КолЗаказано) КАК КолЗаказано,
	                 |	МАКСИМУМ(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)) КАК КоличествоОстатокСклад,
	                 |	СУММА(ЕСТЬNULL(ТоварыАдресноеХранениеОстатки.КоличествоОстаток, 0)) КАК КоличествоОстатокПоАдресу,
	                 |	СУММА(ЕСТЬNULL(РезервНаСкладахОстатки.КоличествоОстаток, 0)) КАК КоличествоРезерв,
	                 |	СУММА(ЕСТЬNULL(РезервНаСкладахОстаткиПоАдресам.КоличествоОстаток, 0)) КАК КоличествоРезервПоАдресу,
	                 |	СУММА(ЕСТЬNULL(ТоварыАдресноеХранениеОстаткиВсего.КоличествоОстаток, 0)) КАК КоличествоОстатокПоАдресуВсего
	                 |ИЗ
	                 |	ТЗзаказ КАК ТЗзаказ
	                 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	                 |				,
	                 |				Номенклатура В (&СписокНом)
	                 |					И Склад В ИЕРАРХИИ (&СписокСкладов)) КАК ТоварыНаСкладахОстатки
	                 |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыАдресноеХранение.Остатки(
	                 |					,
	                 |					Номенклатура В (&СписокНом)
	                 |						И Склад В ИЕРАРХИИ (&СписокСкладов)) КАК ТоварыАдресноеХранениеОстатки
	                 |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервНаСкладах.Остатки(
	                 |						,
	                 |						Номенклатура В (&СписокНом)
	                 |							И Склад В ИЕРАРХИИ (&СписокСкладов)) КАК РезервНаСкладахОстаткиПоАдресам
	                 |				ПО ТоварыАдресноеХранениеОстатки.Номенклатура = РезервНаСкладахОстаткиПоАдресам.Номенклатура
	                 |					И ТоварыАдресноеХранениеОстатки.Склад = РезервНаСкладахОстаткиПоАдресам.Склад
	                 |					И ТоварыАдресноеХранениеОстатки.АдресХранения = РезервНаСкладахОстаткиПоАдресам.АдресХранения
	                 |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыАдресноеХранение.Остатки(
	                 |						,
	                 |						Номенклатура В (&СписокНом)
	                 |							И Склад В ИЕРАРХИИ (&СписокСкладов)) КАК ТоварыАдресноеХранениеОстаткиВсего
	                 |				ПО ТоварыАдресноеХранениеОстатки.Склад = ТоварыАдресноеХранениеОстаткиВсего.Склад
	                 |					И ТоварыАдресноеХранениеОстатки.АдресХранения = ТоварыАдресноеХранениеОстаткиВсего.АдресХранения
	                 |			ПО ТоварыНаСкладахОстатки.Номенклатура = ТоварыАдресноеХранениеОстатки.Номенклатура
	                 |				И ТоварыНаСкладахОстатки.Склад = ТоварыАдресноеХранениеОстатки.Склад
	                 |				И (ТоварыНаСкладахОстатки.Склад.АдресноеХранение)
	                 |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервНаСкладах.Остатки(
	                 |					,
	                 |					Номенклатура В (&СписокНом)
	                 |						И Склад В ИЕРАРХИИ (&СписокСкладов)) КАК РезервНаСкладахОстатки
	                 |			ПО ТоварыНаСкладахОстатки.Номенклатура = РезервНаСкладахОстатки.Номенклатура
	                 |				И ТоварыНаСкладахОстатки.Склад = РезервНаСкладахОстатки.Склад
	                 |				И (НЕ ТоварыНаСкладахОстатки.Склад.АдресноеХранение)
	                 |		ПО ТЗзаказ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	                 |
	                 |СГРУППИРОВАТЬ ПО
	                 |	ТЗзаказ.Номенклатура,
	                 |	ТоварыНаСкладахОстатки.Склад,
	                 |	ТоварыАдресноеХранениеОстатки.АдресХранения
	                 |
	                 |УПОРЯДОЧИТЬ ПО
	                 |	Номенклатура,
	                 |	Склад,
	                 |	АдресХранения";
	
	
	ЗапросМХ.УстановитьПараметр("СписокСкладов", Склад); 
	ЗапросМХ.УстановитьПараметр("СписокНом", ТЗдляПечати.ВыгрузитьКолонку("Номенклатура"));
	ЗапросМХ.УстановитьПараметр("парТЗзаказ", ТЗдляПечати);
	
	Табзаказ = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ЗаявкаНаОтгрузку");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ОбластьЗаголовок.Параметры.ПечЗаголовок = "Заявка на отгрузку (для фотографий) от "+Формат(ТекущаяДата(),"ДФ='dd MMMM yyyy'");
	Табзаказ.Вывести(ОбластьЗаголовок);

	Табзаказ.Вывести(ОбластьШапка);
	Табзаказ.ФиксацияСверху = Табзаказ.ВысотаТаблицы;
	
	//ТЗ1 = ЗапросМХ.Выполнить().Выгрузить();
	//ТЗ1.ВыбратьСтроку();
	//возврат;
	
	Выборка = ЗапросМХ.Выполнить().Выбрать();
	НомПП = 0;
	КодНом = "";
	Пока Выборка.Следующий() Цикл
		НомПП = НомПП+1;
		ОбластьСтрока.Параметры.НомПП = НомПП;
		ОбластьСтрока.Параметры.Номенклатура = Выборка.Номенклатура;
		
		Если КодНом <> СокрЛП(Выборка.Номенклатура.Код) Тогда
			ОбластьСтрока.Параметры.Код = Выборка.Номенклатура.Код;
			КодНом = СокрЛП(ОбластьСтрока.Параметры.Код);
		Иначе
			ОбластьСтрока.Параметры.Код = "";
		КонецЕсли;

		
		Если Выборка.АдресХранения <> "" Тогда
			ОбластьСтрока.Параметры.Склад = СокрЛП(Выборка.Склад.Наименование)+":"+СокрЛП(Выборка.АдресХранения.Наименование);
			ОбластьСтрока.Параметры.ОстатокНаСкладе = СокрЛП(Выборка.КоличествоОстатокСклад)+" / "+СокрЛП(Выборка.КоличествоОстатокПоАдресу);
			Если Выборка.КоличествоРезервПоАдресу > 0 Тогда
				ОбластьСтрока.Параметры.ОстатокНаСкладе = ОбластьСтрока.Параметры.ОстатокНаСкладе+" (-"+СокрЛП(Выборка.КоличествоРезервПоАдресу)+" резерв)";
			КонецЕсли;
			Разница = Выборка.КоличествоОстатокПоАдресуВсего - Выборка.КоличествоОстатокПоАдресу;
			Если Разница > 0 Тогда
				ОбластьСтрока.Параметры.ОстатокНаСкладе = "*"+ОбластьСтрока.Параметры.ОстатокНаСкладе+" (+"+СокрЛП(Разница)+")";
			КонецЕсли;	
		Иначе
			ОбластьСтрока.Параметры.Склад = СокрЛП(Выборка.Склад.Наименование);
			ОбластьСтрока.Параметры.ОстатокНаСкладе = СокрЛП(Выборка.КоличествоОстатокСклад);
			Если Выборка.КоличествоРезерв > 0 Тогда
				ОбластьСтрока.Параметры.ОстатокНаСкладе = ОбластьСтрока.Параметры.ОстатокНаСкладе+" (-"+СокрЛП(Выборка.КоличествоРезерв)+" резерв)";
			КонецЕсли;	
		КонецЕсли;
		Табзаказ.Вывести(ОбластьСтрока);		
	КонецЦикла;
	
	ТабЗаказ.АвтоМасштаб=Истина;
	Табзаказ.Показать("Заказ на отгрузку");
	
КонецПроцедуры	