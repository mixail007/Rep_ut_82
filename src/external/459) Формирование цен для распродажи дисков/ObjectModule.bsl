
функция ПолучитьТекстЗапросаДатыПрихода()
	Текст1="ВЫБРАТЬ
	|	Таб.Номенклатура,
	|	Таб.КоличествоОстаток КАК Коэфф
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОбороты.Номенклатура,
	|	МИНИМУМ(ТоварыНаСкладахОбороты.Регистратор.Дата) КАК Дата
	|ПОМЕСТИТЬ ПервыйПриход
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					ВТ.Номенклатура
	|				ИЗ
	|					ВТ КАК ВТ)) КАК ТоварыНаСкладахОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Номенклатура,
	|	ВТ.Коэфф,
	|	ПервыйПриход.Дата КАК ДатаПервогоПрихода
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервыйПриход КАК ПервыйПриход
	|		ПО ВТ.Номенклатура = ПервыйПриход.Номенклатура
	|ГДЕ
	|	ПервыйПриход.Дата < &ДатаПервогоПрихода";
	возврат Текст1;
КонецФункции

функция ПолучитьТекстЗапросаОстальныеПараметры()
	Текст1 = "ВЫБРАТЬ
	|	Таб.Номенклатура,
	|	Таб.Коэфф,
	|	Таб.ДатаПервогоПрихода
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК Остаток
	|ПОМЕСТИТЬ СвободныеОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			&ТекДата,
	|			Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.Видытоваров.Диски)
	|				И Склад.ЗапретитьИспользование = ЛОЖЬ) КАК ТоварыНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	|				&ТекДата,
	|				Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.Видытоваров.Диски)
	|					И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателейОстатки
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвободныеОстатки.Номенклатура,
	|	СвободныеОстатки.Остаток,
	|	NULL КАК Коэфф,
	|	NULL КАК ДатаПервогоПрихода
	|ПОМЕСТИТЬ ТекТаб
	|ИЗ
	|	СвободныеОстатки КАК СвободныеОстатки
	|ГДЕ
	|	НЕ СвободныеОстатки.Номенклатура В
	|				(ВЫБРАТЬ
	|					ВТ.Номенклатура
	|				ИЗ
	|					ВТ КАК ВТ)
	|	И СвободныеОстатки.Номенклатура.НоменклатурнаяГруппа = &Литые
	|	И СвободныеОстатки.Остаток > 140000   //было 140
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ.Номенклатура,
	|	СвободныеОстатки.Остаток,
	|	ВТ.Коэфф,
	|	ВТ.ДатаПервогоПрихода
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвободныеОстатки КАК СвободныеОстатки
	|		ПО ВТ.Номенклатура = СвободныеОстатки.Номенклатура
	|ГДЕ
	|	СвободныеОстатки.Остаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗакупкиОбороты.Период,
	|	ЗакупкиОбороты.Номенклатура,
	|	ВЫРАЗИТЬ(ЗакупкиОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг) КАК Регистратор,
	|	ЗакупкиОбороты.КоличествоОборот,
	|	ЗакупкиОбороты.СтоимостьОборот
	|ПОМЕСТИТЬ ДатыЗакупок
	|ИЗ
	|	РегистрНакопления.Закупки.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			ДоговорКонтрагента.ВалютаВзаиморасчетов <> &Рубли
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ТекТаб.Номенклатура
	|					ИЗ
	|						ТекТаб КАК ТекТаб)
	|				И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ) КАК ЗакупкиОбороты
	|ГДЕ
	|	ЗакупкиОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ДатыЗакупок.Период) КАК Период,
	|	ДатыЗакупок.Номенклатура
	|ПОМЕСТИТЬ ПоследняяДатаЗакупки
	|ИЗ
	|	ДатыЗакупок КАК ДатыЗакупок
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыЗакупок.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследняяДатаЗакупки.Период КАК ДатаПоследнегоПрихода,
	|	ПоследняяДатаЗакупки.Номенклатура,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПоследняяДатаЗакупки.Номенклатура.Типоразмер.Диаметр <= 18
	|				ТОГДА ВЫРАЗИТЬ(ДатыЗакупок.СтоимостьОборот / ДатыЗакупок.КоличествоОборот / ДатыЗакупок.Регистратор.КурсВзаиморасчетов КАК ЧИСЛО(15, 2))
	|			ИНАЧЕ ВЫРАЗИТЬ(ДатыЗакупок.СтоимостьОборот / ДатыЗакупок.КоличествоОборот / ДатыЗакупок.Регистратор.КурсВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК ЦенаПрихода
	|ПОМЕСТИТЬ ВалютныеЦены
	|ИЗ
	|	ПоследняяДатаЗакупки КАК ПоследняяДатаЗакупки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыЗакупок КАК ДатыЗакупок
	|		ПО ПоследняяДатаЗакупки.Номенклатура = ДатыЗакупок.Номенклатура
	|			И ПоследняяДатаЗакупки.Период = ДатыЗакупок.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследняяДатаЗакупки.Период,
	|	ПоследняяДатаЗакупки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладахОстатки.Номенклатура,
	|	ПартииТоваровНаСкладахОстатки.КоличествоОстаток,
	|	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток
	|ПОМЕСТИТЬ СебестоимостьОстатки
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|			&ТекДата,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					ТекТаб.Номенклатура
	|				ИЗ
	|					ТекТаб КАК ТекТаб)) КАК ПартииТоваровНаСкладахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект,
	|	ЗначенияСвойствОбъектов.Значение
	|ПОМЕСТИТЬ СвойствоЦвет
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Свойство = &Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА СебестоимостьОстатки.КоличествоОстаток = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(СебестоимостьОстатки.СтоимостьОстаток / СебестоимостьОстатки.КоличествоОстаток КАК ЧИСЛО(15, 2))
	|		КОНЕЦ, 0) КАК Себестоимость,
	|	ТекТаб.Номенклатура КАК Номенклатура,
	//+++ 07.03.2019 +++
	|	ТекТаб.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	ТекТаб.Номенклатура.Код КАК НоменклатураКод,
    |	ТекТаб.Номенклатура.Модель.Наименование как МодельНаименование,
	
	|	ТекТаб.Остаток,
	|	ТекТаб.Коэфф,
	|	ТекТаб.ДатаПервогоПрихода,
	|	ВалютныеЦены.ДатаПоследнегоПрихода,
	|	ЕСТЬNULL(ВалютныеЦены.ЦенаПрихода, 0) КАК ЦенаПрихода,
	|	ТекТаб.Номенклатура.Типоразмер.Диаметр КАК Диаметр,
	|	ТекТаб.Номенклатура.Типоразмер.Ширина КАК Ширина,
	|	ТекТаб.Номенклатура.Типоразмер.Высота КАК Высота,
	|	ТекТаб.Номенклатура.Типоразмер.КоличествоОтверстий КАК КолвоОтверстий,
	|	ТекТаб.Номенклатура.Типоразмер.PCD КАК PCD,
	|	ТекТаб.Номенклатура.Типоразмер.Вылет КАК Вылет,
	|	ТекТаб.Номенклатура.Типоразмер.ДиаметрСтупицы КАК ДиаметрСтупицы,
	|	СвойствоЦвет.Значение КАК Цвет
	|ИЗ
	|	ТекТаб КАК ТекТаб
	|		ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьОстатки КАК СебестоимостьОстатки
	|		ПО ТекТаб.Номенклатура = СебестоимостьОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВалютныеЦены КАК ВалютныеЦены
	|		ПО ТекТаб.Номенклатура = ВалютныеЦены.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследняяДатаЗакупки КАК ПоследняяДатаЗакупки
	|		ПО ТекТаб.Номенклатура = ПоследняяДатаЗакупки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвойствоЦвет КАК СвойствоЦвет
	|		ПО ТекТаб.Номенклатура = СвойствоЦвет.Объект
	|ГДЕ
	|	ПоследняяДатаЗакупки.Период < ДОБАВИТЬКДАТЕ(&ТекДата, МЕСЯЦ, -2)
	|	И ТекТаб.Номенклатура.НоменклатурнаяГруппа = &Литые
	|	И НЕ ТекТаб.Номенклатура.Производитель В (&СписокПроизводителей)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|Автоупорядочивание";
	возврат Текст1;
КонецФункции

Процедура СформироватьРаспродажу(ТабОтчета,ТабОтчетаМенеджер) Экспорт
	
	//получим средний остаток
	ТабНомН = Новый ТаблицаЗначений;
	текСхема = ПолучитьМакет("Макет");
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(текСхема,текСхема.НастройкиПоУмолчанию, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТабНомН);// выгружать в таблицу значений
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Ложь);
	
	// получим коэф. оборачиваемости
	
	//передадим таблицу в другую схему	
	ТабНомНН = Новый ТаблицаЗначений;
	СхемаКомпоновкиДанных = ПолучитьМакет("макеткоф");
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,СхемаКомпоновкиДанных.НастройкиПоУмолчанию, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ВнешнийНаборДанных = Новый Структура("ТабНомН", ТабНомН);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, ВнешнийНаборДанных, ,истина);
	ПроцессорВывода.УстановитьОбъект(ТабНомНН);// выгружать в таблицу значений
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Ложь);
	
	Таб_0 = ТабНомНН.Скопировать();
	
	//-----------------Проверим на дату 1 прихода------------------------
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДатыПрихода();
	Запрос.УстановитьПараметр("ДатаПервогоПрихода", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-6));
	Запрос.УстановитьПараметр("Таб", Таб_0);
	Таб_1 = Запрос.Выполнить().Выгрузить();
	
	//--------- рассчитаем все остальные параметры по данным таб_1------------------
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаОстальныеПараметры();
	Запрос.УстановитьПараметр("Таб", Таб_1);
	
	СписокПроизводителей = Новый списокЗначений;
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3654")); //HARP
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3656")); //BUFFALO
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3657")); //VISSOL
	Запрос.УстановитьПараметр("СписокПроизводителей", СписокПроизводителей);
	
	Запрос.УстановитьПараметр("Литые", Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026"));
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Рубли", константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Свойство",планыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166"));
	
	ТабНомН = Запрос.Выполнить().Выгрузить();
	табномН.Колонки.Добавить("ЦенаПауэра");
	табномН.Колонки.Добавить("ЦенаРаспродажи");
	табномН.Колонки.Добавить("ЦенаРаспродажиВал");
//================================================================================

	Пауэр  = Справочники.Контрагенты.НайтиПоКоду("00128");
	масТов = ТабномН.ВыгрузитьКолонку("Номенклатура");
	ТабЦен = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Пауэр, масТов);//ЦеныПауэра
	
	Для каждого стр из ТабЦен Цикл
		строка = ТабНомН.Найти(стр.Номенклатура,"Номенклатура"); 
		// Добавим цену Пауэра +5%
		строка.ценаПауэра = стр.минимальнаяЦена*1.05;	
		Если строка.ценаПауэра< строка.себестоимость*1.1 и строка.ценаПауэра>0 тогда
			строка.ЦенаРаспродажи = окр(строка.ценаПауэра,2);  
		иначе	  
			строка.ЦенаРаспродажи = Окр(строка.себестоимость*1.1,2);  
		конецЕсли;	  
	конецЦикла;
	//ТабНомН.Сортировать("Номенклатура"); // уже отсортирована в запросе?!
	
	Диаметры = ТабНомН.Скопировать();
	Диаметры.Свернуть("Диаметр");
	Для каждого стр из Диаметры Цикл
		Строки = ТабНомН.НайтиСтроки(Новый структура("Диаметр",стр.Диаметр)); 
		Кол=0;
		себес = 0;
		для каждого ст из Строки Цикл
			кол=кол+1;
			себес = Себес+ст.ЦенаПрихода;
		конецЦикла;
		мин = ?(кол=0, 0, Окр(себес/кол,2)); //делить на 0 нельзя
		
		для каждого ст из Строки Цикл
			Если Число(стр.Диаметр)< 14 или Число(стр.Диаметр)> 18 тогда
				ст.ЦенаРаспродажиВал = мин+3.5;
				Если Число(стр.Диаметр) = 21 Тогда
					ст.ЦенаРаспродажиВал = 80.5;   
				конецЕсли;	   
			иначеЕсли Число(стр.Диаметр)= 14  тогда	 
				ст.ЦенаРаспродажиВал  = мин+2.5;
			иначе	   
				ст.ЦенаРаспродажиВал  = мин+1.5;
			конецесли;
			ст.ЦенаРаспродажиВал = ст.ЦенаРаспродажиВал + 0.5;  //***2018.06.25 Задача № 48988
		конецЦикла;
	конецЦикла; //Диаметры
	
	//ТабОтчета = Новый ТабличныйДокумент;
	Макет = получитьМакет("МакетОтчета");
	ОбластьШапка= Макет.ПолучитьОбласть("Шапка");
	ТабОтчета.Вывести(ОбластьШапка);
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	Для каждого стр из ТабНомН Цикл
		ОбластьСтрока.Параметры.Заполнить(стр);
		ОбластьСтрока.Параметры.код = стр.НоменклатураКод;//+++ есть в запросе!
		ОбластьСтрока.Параметры.фото = "http://photo.yst.ru/allwheels/"+СокрЛП(нрег(стр.МодельНаименование))+"_"+СокрЛП(нрег(стр.цвет))+".png";
		ТабОтчета.Вывести(Областьстрока);
	конецЦикла;
	#Если Клиент тогда
	ТабОтчета.Показать();
	#КонецЕсли	
	
	Макет = получитьМакет("МакетОтчетаМенеджер");
	ОбластьШапка= Макет.ПолучитьОбласть("Шапка");
	ТабОтчетаМенеджер.Вывести(ОбластьШапка);
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	Для каждого стр из ТабНомН Цикл
		ОбластьСтрока.Параметры.Заполнить(стр);
		ОбластьСтрока.Параметры.код = стр.НоменклатураКод; //+++ есть в запросе!
		ОбластьСтрока.Параметры.фото = "http://photo.yst.ru/allwheels/"+СокрЛП(нрег(стр.МодельНаименование))+"_"+СокрЛП(нрег(стр.цвет))+".png";
		Если стр.Остаток>100 тогда
			ОбластьСтрока.Параметры.остаток = ">100";
		конецЕсли;
		ТабОтчетаМенеджер.Вывести(Областьстрока);
	конецЦикла;
	
	#Если Клиент тогда
		ТабОтчетаМенеджер.Показать(); // ???  на сервере некому показывать
	#КонецЕсли	
	
	Если СоздаватьДокументы Тогда
	 Попытка //транзакция всегда должна быть в попытке
		НачатьТранзакцию();
		Док = Документы.УстановкаЦенДляРаспродажи.СоздатьДокумент();
		Док.Дата = НачалоДня(ТекущаяДата());
		Док.Комментарий = "Создан автоматически(Р)";
		ДокВ = Документы.УстановкаЦенДляРаспродажи.СоздатьДокумент();
		ДокВ.Дата = НачалоДня(ТекущаяДата());
		ДокВ.Комментарий = "Создан автоматически($)";
		
		рубли = Константы.ВалютаРегламентированногоУчета.Получить();
		Доллары = справочники.Валюты.НайтиПоКоду("840");
		Для каждого стр из ТабНомН Цикл
			Если стр.ЦенаРаспродажи <> неопределено Тогда
				новСтр = Док.Товары.Добавить();
				НовСтр.Номенклатура     = Стр.Номенклатура;
				НовСтр.ЕдиницаИзмерения = Стр.ЕдиницаИзмерения;
				НовСтр.Цена 		    = Стр.ЦенаРаспродажи;
				НовСтр.Валюта = рубли;
				
				новСтрВ = ДокВ.Товары.Добавить();
				НовСтрВ.Номенклатура     = Стр.Номенклатура;
				НовСтрВ.ЕдиницаИзмерения = Стр.ЕдиницаИзмерения; 
				НовСтрВ.Цена 		     = Стр.ЦенаРаспродажиВал;
				НовСтрВ.Валюта = Доллары;
			КонецЕсли;
		КонецЦикла;
		Док.Записать(РежимЗаписиДокумента.Проведение);
		ДокВ.Записать(РежимЗаписиДокумента.Проведение);
		зафиксироватьТранзакцию(); //все Ок
	  Исключение	
			ОтменитьТранзакцию();
			#Если Клиент тогда
				сообщить("ОШИБКА при записи документов! "+ОписаниеОшибки(), СтатусСообщения.Важное);
			#КонецЕсли	
	  КонецПопытки;		
	конецЕсли;
	
	//+++ 07.03.2019 - перенесено в общий модуль
	яштРезервыПоТоварам.УстановитьАссортиментРаспродажиДляТерминала(ТабНомН, ВыгружатьВтерминал);
		
Конецпроцедуры	