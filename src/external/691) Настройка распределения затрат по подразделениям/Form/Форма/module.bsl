 Перем ТабНастройки, ТабПодразделения,ТабИсключения, Отказ;
Процедура КнопкаВыполнитьНажатие(Кнопка)
  ТабНастройки = Новый таблицаЗначений;
  ТабНастройки.Колонки.Добавить("СтатьяЗатрат");
  ТабНастройки.Колонки.Добавить("Подразделение");
  ТабНастройки.Колонки.Добавить("ПоЧему");
  ТабНастройки.Колонки.Добавить("ПоКому");
  
  ТабПодразделения = Новый таблицаЗначений;
  ТабПодразделения.Колонки.Добавить("СтатьяЗатрат");
  ТабПодразделения.Колонки.Добавить("ПодразделениеИсточник");
  ТабПодразделения.Колонки.Добавить("ПодразделениеПриемник");
  ТабПодразделения.Колонки.Добавить("ДоляПодразделения");

  ТабИсключения = Новый таблицаЗначений;
  ТабИсключения.Колонки.Добавить("СтатьяЗатрат");
  ТабИсключения.Колонки.Добавить("ПодразделениеИсточник");
  ТабИсключения.Колонки.Добавить("ПодразделениеПриемник");

  
  
  Отказ = ложь;
  ПодготовитьКЗаписи(Дерево);
  Если не Отказ Тогда
	  Записать();
  конецЕсли;	  
	
КонецПроцедуры

Процедура ПодготовитьКЗаписи(ТекСтр)

	Для каждого стр из ТекСтр.Строки цикл	
		Если стр.строки.количество()=0 тогда
			//конечная запись
			//проверки
			строки = ПодразделенияДляРаспределения.НайтиСтроки( новый Структура("idсроки",стр.idсроки));
			строкиИскл = ПодразделенияДляИсключения.НайтиСтроки( новый Структура("idсроки",стр.idсроки));
			//1. если по долям, то обязательно по подразделениям
			Если стр.ПоЧему = "по долям" и стр.ПоКому <> "по выбранным подразделениям" тогда
				Отказ = Истина;
				Сообщить("Для статьи "+стр.СтатьяЗатрат+" и подразделения "+стр.Подразделение+" не корректно заданы способ и участники распределения",СтатусСообщения.Важное);
			конецЕсли;	
			
			//2. Если по подразделениям, то дожно быть хоть 1 подразделение
			
			Если  стр.ПоКому = "по выбранным подразделениям" тогда
				
			//	строки = ПодразделенияДляРаспределения.НайтиСтроки( новый Структура("idсроки",стр.idсроки));
				Если строки.Количество()=0 тогда
					Отказ = Истина;
					Сообщить("Для статьи "+стр.СтатьяЗатрат+" и подразделения "+стр.Подразделение+" не задано ни одного подразделения для распределения",СтатусСообщения.Важное);
				конецесли;	
			конецЕсли;	
			
			
			
			//3. Если по долям, то доли по подразделениям в сумме должны давать 1
			
			Если стр.ПоЧему = "по долям" тогда
				итого =0 ;
				для каждого стр1 из строки цикл
					итого =итого+стр1.ДоляПодразделения;	
				конецЦикла;	
				Если Итого <>1 тогда
					Отказ = Истина;
					Сообщить("Для статьи "+стр.СтатьяЗатрат+" и подразделения "+стр.Подразделение+" сумма долей по подразделениям не равна 1",СтатусСообщения.Важное);
				конецесли;	
				
			конецЕсли;	
			//4. посмотрим, нет ли еще такой же строки	  
			 отбор = новый структура;
			 Отбор.вставить("СтатьяЗатрат",стр.СтатьяЗатрат);
			 Отбор.вставить("Подразделение", стр.Подразделение);
			строки1 = ТабНастройки.найтиСтроки(Отбор);
			Если строки1.Количество()>0 тогда
				Отказ = Истина;
				Сообщить("Для статьи "+стр.СтатьяЗатрат+" и подразделения "+стр.Подразделение+" задано больше 1 правила.",СтатусСообщения.Важное);
			конецесли;	
			
			//запишем в таблицу
			новНастройка = ТабНастройки.Добавить();
			НовНастройка.СтатьяЗатрат = стр.СтатьяЗатрат;
			НовНастройка.Подразделение = стр.Подразделение;
			НовНастройка.ПоЧему = стр.ПоЧему;
			НовНастройка.ПоКому = стр.ПоКому;
			

			для каждого стр1 из строки цикл
				новПодр = ТабПодразделения.Добавить();
				НовПодр.СтатьяЗатрат = стр.СтатьяЗатрат;
				НовПодр.ПодразделениеИсточник = стр.Подразделение;
				НовПодр.ПодразделениеПриемник = стр1.Подразделение;
				НовПодр.ДоляПодразделения = стр1.ДоляПодразделения;
			конецЦикла;	

			для каждого стр2 из строкиИскл цикл
				новИскл = ТабИсключения.Добавить();
				НовИскл.СтатьяЗатрат = стр.СтатьяЗатрат;
				НовИскл.ПодразделениеИсточник = стр.Подразделение;
				НовИскл.ПодразделениеПриемник = стр2.Подразделение;
			конецЦикла;	
			
			
			
			
			
		иначе
			ПодготовитьКЗаписи(стр);
		конецЕсли;
	конецЦикла;	
	
	
конецПроцедуры

процедура Записать()
	НаборЗаписей = РегистрыСведений.НастройкиРаспределенияПоПодразделениям.СоздатьНаборЗаписей();
	наборЗаписей.Очистить();
	наборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.РаспределениеСтатейПоПодразделениям.СоздатьНаборЗаписей();
	наборЗаписей.Очистить();
	наборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.ИсключенияИзРаспределенияСтатейПоПодразделениям.СоздатьНаборЗаписей();
	наборЗаписей.Очистить();
	наборЗаписей.Записать();
	
	
	для каждого стр из ТабНастройки цикл
	если ЗначениеЗаполнено(стр.ПоЧему) и ЗначениеЗаполнено(стр.ПоКому) тогда	
	запись = регистрысведений.НастройкиРаспределенияПоПодразделениям.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(запись,стр);
	Запись.Записать(Истина);
	конецЕсли;
	конецЦикла;
	
	для каждого стр из ТабПодразделения цикл
	запись = регистрысведений.РаспределениеСтатейПоПодразделениям.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(запись,стр);
	Запись.Записать(Истина);	
    конецЦикла;

    для каждого стр из ТабИсключения цикл
	запись = регистрысведений.ИсключенияИзРаспределенияСтатейПоПодразделениям.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(запись,стр);
	Запись.Записать(Истина);	
	конецЦикла;

	Сообщить("Настройки успешно записаны.");
конецПроцедуры	

Процедура ДеревоПоЧемуНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	список= Новый СписокЗначений;
	список.Добавить("по объему");
	список.Добавить("по количеству");
	список.Добавить("по наценке");
	список.Добавить("по долям");
	список.Добавить("по долям");	
	список.Добавить("по ДТГ");
	Элемент.СписокВыбора = Список;
КонецПроцедуры

Процедура ДеревоПоКомуНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	список= Новый СписокЗначений;
	список.Добавить("по всем пропорционально");
	список.Добавить("по выбранным подразделениям");
	Элемент.СписокВыбора = Список;
КонецПроцедуры




Процедура ЗаполнитьНачальнуюРасстановкуНажатие(Элемент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиЗатрат.Ссылка КАК СтатьяЗатрат,
		|	НастройкиРаспределенияПоПодразделениям.Подразделение,
		|	НастройкиРаспределенияПоПодразделениям.ПоЧему,
		|	НастройкиРаспределенияПоПодразделениям.ПоКому,
		|	СтатьиЗатрат.Родитель КАК ГруппаСтатьи,
		|	ВЫРАЗИТЬ(СтатьиЗатрат.Код + ""_"" + ЕСТЬNULL(НастройкиРаспределенияПоПодразделениям.Подразделение.Код, ""__"") КАК СТРОКА(30)) КАК idсроки
		|ИЗ
		|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиРаспределенияПоПодразделениям КАК НастройкиРаспределенияПоПодразделениям
		|		ПО (НастройкиРаспределенияПоПодразделениям.СтатьяЗатрат = СтатьиЗатрат.Ссылка)
		|ГДЕ
		|	СтатьиЗатрат.ПланируетОтветственный = ИСТИНА
		|ИТОГИ ПО
		|	ГруппаСтатьи,
		|	СтатьяЗатрат";


	Результат = Запрос.Выполнить();

	Дерево = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаспределениеСтатейПоПодразделениям.ПодразделениеПриемник КАК Подразделение,
		|	РаспределениеСтатейПоПодразделениям.ДоляПодразделения,
		|	ВЫРАЗИТЬ(РаспределениеСтатейПоПодразделениям.СтатьяЗатрат.Код + ""_"" + ЕСТЬNULL(РаспределениеСтатейПоПодразделениям.ПодразделениеИсточник.Код, ""__"") КАК СТРОКА(30)) КАК idсроки
		|ИЗ
		|	РегистрСведений.РаспределениеСтатейПоПодразделениям КАК РаспределениеСтатейПоПодразделениям";

	Результат = Запрос.Выполнить();

	ПодразделенияДляРаспределения.Загрузить( Результат.Выгрузить());
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсключенияИзРаспределенияСтатейПоПодразделениям.ПодразделениеПриемник КАК Подразделение,
		|	ВЫРАЗИТЬ(ИсключенияИзРаспределенияСтатейПоПодразделениям.СтатьяЗатрат.Код + ""_"" + ЕСТЬNULL(ИсключенияИзРаспределенияСтатейПоПодразделениям.ПодразделениеИсточник.Код, ""__"") КАК СТРОКА(30)) КАК idсроки
		|ИЗ
		|	РегистрСведений.ИсключенияИзРаспределенияСтатейПоПодразделениям КАК ИсключенияИзРаспределенияСтатейПоПодразделениям";

	Результат = Запрос.Выполнить();

	ПодразделенияДляИсключения.Загрузить( Результат.Выгрузить());

КонецПроцедуры

Процедура ПодразделенияДляРаспределенияВыборЗначения(Элемент, СтандартнаяОбработка, Значение)
	ТекСтрока = ЭлементыФормы.Дерево.ТекущаяСтрока;
	ЭлементыФормы.ПодразделенияДляРаспределения.ОтборСтрок.idсроки.Установить(ТекСтрока.idсроки); 

// ПодразделенияДляРаспределения.Отбор.idсроки.Значение = ТекСтрока.idсроки;
//ПодразделенияДляРаспределения.Отбор.idсроки.ВидСравнения = ВидСравнения.Равно; 
//ПодразделенияДляРаспределения.Отбор.idсроки.Использование = Истина; 
КонецПроцедуры

Процедура КоманднаяПанель2Добавить(Кнопка)
	ТекСтрока = ЭлементыФормы.Дерево.ТекущаяСтрока;
	Если Текстрока.Строки.Количество()>0 тогда
		новСтр = ТекСтрока.Строки.добавить();
		новСтр.ГруппаСтатьи = Текстрока.ГруппаСтатьи;
		новСтр.СтатьяЗатрат = Текстрока.СтатьяЗатрат;
		новСтр.idсроки =Текстрока.СтатьяЗатрат.Код+Строка(ТекущаяДата()); 
	Иначе
		Новстр = Текстрока.Родитель.Строки.Добавить();
		новСтр.ГруппаСтатьи = Текстрока.ГруппаСтатьи;
		новСтр.СтатьяЗатрат = Текстрока.СтатьяЗатрат;
		новСтр.idсроки =Текстрока.СтатьяЗатрат.Код+Строка(ТекущаяДата()); 

	конецЕсли;	
КонецПроцедуры

Процедура КоманднаяПанель2Удалить(Кнопка)
	ТекСтрока = ЭлементыФормы.Дерево.ТекущаяСтрока;
	Если Текстрока.Строки.Количество()>0 тогда
       сообщить("Нельзя удалять группу");
   иначе
	   ТекСтрока.родитель.Строки.Удалить(ТекСтрока);
	конецЕсли;   
КонецПроцедуры

Процедура ДеревоПриАктивизацииСтроки(Элемент)
	ТекСтрока = ЭлементыФормы.Дерево.ТекущаяСтрока;
	Элементыформы.КоманднаяПанель2.Доступность = ЗначениеЗаполнено(ТекСтрока.статьяЗатрат);
	ЭлементыФормы.ПодразделенияДляРаспределения.ОтборСтрок.idсроки.Установить(ТекСтрока.idсроки); 
	ЭлементыФормы.ПодразделенияДляИсключения.ОтборСтрок.idсроки.Установить(ТекСтрока.idсроки); 
КонецПроцедуры

Процедура ДеревоПриПолученииДанных(Элемент, ОформленияСтрок)
		Для каждого ОформлениеСтроки из Оформлениястрок Цикл
			Если ОформлениеСтроки.ДанныеСтроки.Строки.Количество()>0 Тогда
				ОформлениеСтроки.ячейки.Подразделение.ТолькоПросмотр = Истина;
				ОформлениеСтроки.ЦветФона = webЦвета.Бежевый;
			//Для каждого яч из ОформлениеСтроки.ячейки	Цикл
			//	Яч.ТолькоПросмотр = Истина;
			//	Яч.Шрифт =  Новый Шрифт(,,Истина,,);

			//конецЦикла;
		конецЕсли;	
	//ОформлениеСтроки.Ячейки.ПрошлыйГод.Видимость = ЛожЬ; 	
	//ОформлениеСтроки.Ячейки.ТекущийГод.Видимость = ЛожЬ; 	
	конецЦикла;	

КонецПроцедуры

Процедура ДеревоПодразделениеПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.Дерево.ТекущаяСтрока;
	нашли = ложь;
	для каждого стр из ТекСтрока.Родитель.Строки Цикл
		Если Не ЗначениеЗаполнено(стр.Подразделение) тогда
			нашли = истина;
			прервать;
		конецЕсли;	
	конецЦикла;
	Если нашли = ложь тогда
		текСтрока.Подразделение = Справочники.Подразделения.ПустаяСсылка();
		Предупреждение("Обязательно должно быть общее правило распределения для статьи.
		              |  Добавьте новую строку для выбранного подразделения!");
	конецЕсли;	
КонецПроцедуры

Процедура ДеревоПоЧемуПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.Дерево.ТекущаяСтрока;
	Если ТекСтрока.ПоЧему = "по долям" тогда
		ТекСтрока.ПоКому = "по выбранным подразделениям";
	конецЕсли;	
	Если текСтрока.строки.Количество()>0 тогда
		ЗаполнитьДляВсехподчиненных(ТекСтрока,"ПоЧему",ТекСтрока.ПоЧему);
	конецЕсли;	
КонецПроцедуры

Процедура ДеревоПоКомуПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.Дерево.ТекущаяСтрока;
	Если текСтрока.строки.Количество()>0 тогда
		ЗаполнитьДляВсехподчиненных(ТекСтрока,"ПоКому",ТекСтрока.ПоКому);
	конецЕсли;	
КонецПроцедуры


процедура ЗаполнитьДляВсехподчиненных(ТекСтрока,Реквизит,Значение)
	Для каждого стр из текСтрока.Строки цикл
		Если стр.Строки.Количество()=0 тогда
			стр[Реквизит]=Значение;
			Если стр.ПоЧему = "по долям" тогда
				стр.ПоКому = "по выбранным подразделениям";
			конецЕсли;	
		иначе
			ЗаполнитьДляВсехподчиненных(стр,Реквизит,Значение);
		конецЕсли;
	конецЦикла;
конецПроцедуры	


Процедура ПодразделенияДляРаспределенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока тогда
		ТекСтрокаД = ЭлементыФормы.Дерево.ТекущаяСтрока;
		ТекСтрока = ЭлементыФормы.ПодразделенияДляРаспределения.ТекущаяСтрока;
		ТекСтрока.idсроки = ТекСтрокаД.idсроки;
	конецЕсли;	
		
КонецПроцедуры


Процедура ПодразделенияДляРаспределенияПередНачаломДобавления(Элемент, Отказ, Копирование)
		ТекСтрокаД = ЭлементыФормы.Дерево.ТекущаяСтрока;
		Если ТекСтрокаД.строки.Количество()>0  или ТекСтрокаД.ПоКому<>"по выбранным подразделениям"  тогда
			Отказ = Истина;
		конецЕсли;	
КонецПроцедуры


Процедура ПодразделенияДляРаспределенияПодразделениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка =Ложь;
		ФормаВыбора = Справочники.Подразделения.ПолучитьФормуВыбора(,Элемент,);
		ФормаВыбора.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;

		// уберем из выбора неавтоматизированные торговые точки
		ФормаВыбора.СправочникСписок.Отбор.ИспользоватьВБюджете.Значение                            = Истина;
		ФормаВыбора.СправочникСписок.Отбор.ИспользоватьВБюджете.Использование                       = Истина;
		ФормаВыбора.СправочникСписок.Отбор.ИспользоватьВБюджете.ВидСравнения                        = ВидСравнения.Равно;
	//	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ИспользоватьВБюджете.Доступность = Ложь;
        формаВыбора.Открыть();
КонецПроцедуры


Процедура ПодразделенияДляИсключенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
		Если НоваяСтрока тогда
		ТекСтрокаД = ЭлементыФормы.Дерево.ТекущаяСтрока;
		ТекСтрока = ЭлементыФормы.ПодразделенияДляИсключения.ТекущаяСтрока;
		ТекСтрока.idсроки = ТекСтрокаД.idсроки;
	конецЕсли;	

КонецПроцедуры


Процедура ПодразделенияДляИсключенияПередНачаломДобавления(Элемент, Отказ, Копирование)
			ТекСтрокаД = ЭлементыФормы.Дерево.ТекущаяСтрока;
		Если ТекСтрокаД.строки.Количество()>0  тогда
			Отказ = Истина;
		конецЕсли;	

КонецПроцедуры

