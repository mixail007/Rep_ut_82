
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Если ЗначениеНеЗаполнено(ПользовательОтправитель)
		ИЛИ ЗначениеНеЗаполнено(ПользовательПриемник) Тогда
		СообщитьОбОшибке("Необходимо обязательно указать пользователя отправителя и получателя настроек.");
		Возврат;
	КонецЕсли;	
	
	Запрос= Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	             |	НастройкиПользователей.Настройка КАК Настройка,
	             |	НастройкиПользователей.Значение
	             |ИЗ
	             |	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	             |ГДЕ
	             |	НастройкиПользователей.Пользователь = &Пользователь
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Настройка
	             |АВТОУПОРЯДОЧИВАНИЕ" ;
	
	Запрос.УстановитьПараметр("Пользователь",ПользовательОтправитель);
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	сообщить("------------Копирование настроек пользователей---------------------");	
	Если СУдалениемНастроекПолучателя Тогда	
		НаборЗП =РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
		НаборЗП.Отбор.Пользователь.Установить(ПользовательПриемник);
		НаборЗП.Прочитать();
		НаборЗП.Очистить();
		НаборЗП.Записать(Истина);
		сообщить("Удалены все настройки пользователя: "+строка(ПользовательПриемник));
		
	  //-------------------удаление разрешений---------------------
	  Если Флажок2 тогда
		 Запрос1 = Новый Запрос;
		 Запрос1.Текст = "ВЫБРАТЬ
		 |	ВнешниеОбработкиРазрешения.Ссылка
		 |ИЗ
		 |	Справочник.ВнешниеОбработки.Разрешения КАК ВнешниеОбработкиРазрешения
		 |ГДЕ
		 |	ВнешниеОбработкиРазрешения.Пользователь = &Пользователь";
		 
		 Запрос1.УстановитьПараметр("Пользователь", ПользовательПриемник);
		 
		 Результат1 = Запрос1.Выполнить();
		 Выборка1 = Результат1.Выбрать();
		 
		 Пока Выборка1.Следующий() Цикл
			 обОбработка1 = выборка1.Ссылка.ПолучитьОбъект();
			 стр1 = обОбработка1.разрешения.найти(ПользовательПриемник, "Пользователь");
			 обОбработка1.разрешения.удалить(стр1);
			 Попытка
				 обОбработка1.Записать();
				 сообщить("Из обработки № "+строка(выборка1.Ссылка.Код)+" "+строка(выборка1.Ссылка)+" -> удален: "+строка(ПользовательПриемник));
			 Исключение
				 сообщить("Невозможно записать обработку № "+строка(выборка1.Ссылка.Код)+" "+строка(выборка1.Ссылка), СтатусСообщения.Внимание);
			 КонецПопытки;
		 КонецЦикла;
	 	КонецЕсли;
	 
	КонецЕсли;

	стрНП=РегистрыСведений.НастройкиПользователей.СоздатьМенеджерЗаписи();
	стрНП.Пользователь = ПользовательПриемник;
	стрНП.Прочитать();

	
	Пока  Выборка.Следующий() Цикл
		стрНП.Пользователь = ПользовательПриемник;
		стрНП.Настройка = Выборка.Настройка;
		стрНП.Прочитать();
		Если  стрНП.Выбран() Тогда
			Если стрНП.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойОтветственный тогда
			  стрНП.Значение=ПользовательПриемник;
		    иначе
			  стрНП.Значение=Выборка.Значение;
			КонецЕсли;
			стрНП.Записать();	
		Иначе // не нашел таких настроек, создаем новые
			стрНП.Пользователь = ПользовательПриемник;
			стрНП.Настройка = Выборка.Настройка;
			Если стрНП.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойОтветственный тогда
			  стрНП.Значение=ПользовательПриемник;
		    иначе
			  стрНП.Значение=Выборка.Значение;
			КонецЕсли;
			стрНП.Записать();	
		КОнецЕсли;
		Если ЗначениеЗаполнено(стрНП.Значение) тогда     // или стрНП.Значение=истина
			Если (типЗнч(стрНП.Значение)=Тип("Булево") и стрНП.Значение) тогда
 	    	 сообщить("[v] "+строка(стрНП.Настройка)+" = "+строка(стрНП.Значение), СтатусСообщения.Информация);
			иначеЕсли типЗнч(стрНП.Значение)<>Тип("Булево") тогда
 	    	 сообщить("    "+строка(стрНП.Настройка)+" -> "+строка(стрНП.Значение),СтатусСообщения.Информация);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	ОбъектПриемник=ПользовательПриемник.ПолучитьОбъект();
	ОбъектПриемник.ОсновноеПодразделение=ПользовательОтправитель.ОсновноеПодразделение;
	//ОбъектПриемник.ФизЛицо=ПользовательОтправитель.ФизЛицо;
	// +АЧ. Копирование направления продаж. 
 	Если ПользовательОтправитель.НаправлениеПродаж <> ПользовательПриемник.НаправлениеПродаж Тогда 
		 ОбъектПриемник.НаправлениеПродаж = ПользовательОтправитель.НаправлениеПродаж;
 	КонецЕсли;		
	
	ОбъектПриемник.Записать();
	
//НаборЗаписей = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
//НаборЗаписей.Отбор.Пользователь.Значение = ПользовательПриемник;
//НаборЗаписей.Отбор.Пользователь.Использование = Истина;
////НаборЗаписей.Прочитать();
//НаборЗаписей.Удалить();

Если Флажок2 тогда
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	ВнешниеОбработкиРазрешения.Ссылка
	 |ИЗ
	 |	Справочник.ВнешниеОбработки.Разрешения КАК ВнешниеОбработкиРазрешения
	 |ГДЕ
	 |	ВнешниеОбработкиРазрешения.Пользователь = &Пользователь";
	 
	 Запрос.УстановитьПараметр("Пользователь", ПользовательОтправитель);
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
		 если выборка.Ссылка.разрешения.найти(ПользовательПриемник, "Пользователь")=неопределено тогда
	     	обОбработка = выборка.Ссылка.ПолучитьОбъект();
		 	стр1 = обОбработка.разрешения.Добавить();
	 	 	стр1.Пользователь = ПользовательПриемник; 
			 Попытка
				 обОбработка.Записать();
				 сообщить("В обработку № "+строка(выборка.Ссылка.Код)+" "+строка(выборка.Ссылка)+" -> добавлен: "+строка(ПользовательПриемник), СтатусСообщения.Информация);
			 Исключение
				 сообщить("Невозможно записать обработку № "+строка(выборка.Ссылка.Код)+" "+строка(выборка.Ссылка), СтатусСообщения.Внимание);
			 КонецПопытки;
		 иначе
		 	сообщить("В обработке № "+строка(выборка.Ссылка.Код)+" "+строка(выборка.Ссылка)+" -> уже есть: "+строка(ПользовательПриемник));
		 КонецЕсли;	

	 КонецЦикла;
 КонецЕсли;
 	
  сообщить("-------------------------------------------------------------------------------------------------");
  сообщить(" ");

КонецПроцедуры

Процедура ПользовательОтправительПриИзменении(Элемент)
	ЭлементыФормы.ПолеКартинки2.Доступность = ЗначениеЗаполнено(ПользовательОтправитель);
	ЭлементыФормы.ПолеКартинки2.Подсказка   = "Пользователь, с кого скопировать "+СокрЛП(ПользовательОтправитель);
	
	Если ЗначениеЗаполнено(ПользовательОтправитель) и ЗначениеЗаполнено(ПользовательПриемник) тогда
	ЭлементыФормы.Надпись1.Доступность = истина;
	ЭлементыФормы.Надпись1.Значение = "==>";
	иначе
	ЭлементыФормы.Надпись1.Доступность = ложь;
	ЭлементыФормы.Надпись1.Значение = "--->";
	КонецЕсли;

КонецПроцедуры

Процедура ПользовательПриемникПриИзменении(Элемент)
	ЭлементыФормы.ПолеКартинки1.Доступность = ЗначениеЗаполнено(ПользовательПриемник);
	ЭлементыФормы.ПолеКартинки1.Подсказка   = "Пользователь, кому копировать "+СокрЛП(ПользовательПриемник);
	
	Если ЗначениеЗаполнено(ПользовательОтправитель) и ЗначениеЗаполнено(ПользовательПриемник) тогда
	ЭлементыФормы.Надпись1.Доступность = истина;
	ЭлементыФормы.Надпись1.Значение = "==>";
	иначе
	ЭлементыФормы.Надпись1.Доступность = ложь;
	ЭлементыФормы.Надпись1.Значение = "--->";
	КонецЕсли;

КонецПроцедуры









