
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	КолМес = 12;

	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокМенеджеровТендеры"));
	
	СписокМенеджеровТендеры = новый СписокЗначений;
	СписокМенеджеровТендеры.Добавить( справочники.Пользователи.НайтиПоКоду("Курапова Е.А.") );
	СписокМенеджеровТендеры.Добавить( справочники.Пользователи.НайтиПоКоду("Балагаева Инесса") );

    Параметр.Значение = СписокМенеджеровТендеры;
	
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОбеспечениеКонтракта"));
    Параметр.Значение = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90246");   //Сумма обеспечения контракта ФА+
	
	ДатаНач = НачалоМесяца( НачалоМесяца(ТекущаяДата())-1 );
	ДатаКон = КонецДня(ТекущаяДата());
	
	Параметр0 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНач"));
	Параметр0.Значение = ДатаНач;	
	Параметр2 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНач1"));
	Параметр2.Значение = ДобавитьМесяц(ДатаНач, -КолМес) ;	
	
	Параметр1 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаКон"));
	Параметр1.Значение = КонецДня(ДатаКон);	
 	Параметр3 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаКон1"));  //24.04.2018
	Параметр3.Значение = макс(КонецДня(ТекущаяДата()), ДобавитьМесяц(КонецДня(ДатаКон), КолМес) );	


	флТолькоОплаченные = Истина;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
		
	Параметр0 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНач"));
	Параметр0.Значение = ДатаНач;	
	Параметр1 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаКон"));
	Параметр1.Значение = КонецДня(ДатаКон);	
	
	Параметр2 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНач1"));
	Параметр2.Значение = ДобавитьМесяц(ДатаНач, -КолМес) ;	
	Параметр3 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаКон1")); //24.04.2018
	Параметр3.Значение = макс(КонецДня(ТекущаяДата()), ДобавитьМесяц(КонецДня(ДатаКон), КолМес) );	

	КонецЕсли;
КонецПроцедуры

Процедура ДатаНачПриИзменении(Элемент)
	Параметр0 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНач"));
	Параметр0.Значение = ДатаНач;	
	Параметр2 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНач1"));//24.04.2018
	Параметр2.Значение = ДобавитьМесяц(ДатаНач, -КолМес) ;	
КонецПроцедуры

Процедура ДатаКонПриИзменении(Элемент)
	Параметр1 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаКон"));
	Параметр1.Значение = КонецДня(ДатаКон);	
	Параметр3 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаКон1"));  //24.04.2018
	Параметр3.Значение = макс(КонецДня(ТекущаяДата()), ДобавитьМесяц(КонецДня(ДатаКон), КолМес) );	
КонецПроцедуры

Процедура Флажок1ПриИзменении(Элемент)
	
	НовыйОтбор = КомпоновщикНастроек.Настройки.Отбор.Элементы[0];
	Если НовыйОтбор.ЛевоеЗначение  = новый ПолеКомпоновкиДанных("ПроцентОплаты") тогда
		
		НовыйОтбор.Использование  = флТолькоОплаченные;
		
	//	Если флТолькоОплаченные тогда // =100%
	////	 НовыйОтбор.ВидСравнения   = ВидСравнения.БольшеИлиРавно;
	//	//Иначе                        // <100%
	//	// НовыйОтбор.ВидСравнения   = ВидСравнения.Меньше;
	//	// НовыйОтбор.ПравоеЗначение  = 100;
	// 	КонецЕсли;
	 
	Иначе 
		Предупреждение("Первое поле в Отборе должно быть СуммаОплаты!",10);
	КонецЕсли;

КонецПроцедуры


//+++ 23.04.2018
Процедура КолМесПриИзменении(Элемент)
	Параметр2 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНач1"));//24.04.2018
	Параметр2.Значение = ДобавитьМесяц(ДатаНач, -КолМес) ;	
	Параметр3 = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаКон1"));  //24.04.2018
	Параметр3.Значение = макс(КонецДня(ТекущаяДата()), ДобавитьМесяц(КонецДня(ДатаКон), КолМес) );	
КонецПроцедуры


Процедура КолМесРегулирование(Элемент, Направление, СтандартнаяОбработка)
СтандартнаяОбработка = ложь;	
Элемент.Значение = 	Элемент.Значение  + Направление;
ДатаНачПриИзменении(неопределено);
КонецПроцедуры


//+++++++++ расчет бонусов в другой функции ++++++++++++++++
Процедура ДействияФормыВыполнить(Кнопка)
	
	СКДНастроек = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	ТекстЗапроса = СКДНастроек.НаборыДанных.НаборДанных1.Запрос;
	
	СписНом = неопределено;
	таблБонусов = ПолучитьБонусы(ложь); //, ДатаНач, ДатаКон, СписНом);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(2017, 1, 1) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	0 КАК Бонус
	|ПОМЕСТИТЬ втБонусы", таблБонусов.ТекстЗапросаБонусы);
	
	ЭлементыФормы.Результат.Очистить();
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	ЭтотОбъект.СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос = ТекстЗапроса;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных,   ЭтотОбъект.КомпоновщикНастроек.Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ЭлементыФормы.Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);

КонецПроцедуры

