
Процедура КнопкаВыполнитьНажатие(Кнопка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура.Код КАК Код,
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
	               |	ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0) КАК Продано,
	               |	ЦеныНоменклатурыСрезПоследних.Цена КАК ЦенаБазовая,
	               |	0 КАК ЦенаМРИЦ,
	               |	0 КАК ЦенаМРЦ,
	          	   |	ВЫРАЗИТЬ(ЕСТЬNULL(ВложенныйЗапрос.Стоимость, 0) / ЕСТЬNULL(ВложенныйЗапрос.Количество, 1) КАК ЧИСЛО(15, 2)) КАК Себестоимость,
	               |	ТоварыНаСкладахОстатки.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдИзм,
	               |	ТоварыНаСкладахОстатки.Номенклатура.Производитель КАК Производитель,
	               |	ЕСТЬNULL(ЗакупкиОбороты.КоличествоОборот, 0) КАК КоличествоКуплено
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки( &ДатаКон,
	               |			Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
			   //+++ 10.11.2017
				   |		И НЕ Номенклатура в (ВЫБРАТЬ НоменклатураИмпорт.Номенклатура
		           |							ИЗ	РегистрСведений.НоменклатураИмпорт КАК НоменклатураИмпорт)
				   
	               |				И Склад.Транзитный = ЛОЖЬ
	               |				И Склад.ЗапретитьИспользование = ЛОЖЬ) КАК ТоварыНаСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , ) КАК ПродажиОбороты
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ПродажиОбороты.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&ДатаКон,
	               |				Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	               |					И ТипЦен = &Базовая) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ПартииТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |			СУММА(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток) КАК Стоимость,
	               |			СУММА(ПартииТоваровНаСкладахОстатки.КоличествоОстаток) КАК Количество
	               |		ИЗ
	               |			РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	               |					&ДатаКон,
	               |					Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	               |						И Склад.ЗапретитьИспользование = ЛОЖЬ
	               |						И Склад.Транзитный = ЛОЖЬ) КАК ПартииТоваровНаСкладахОстатки
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ПартииТоваровНаСкладахОстатки.Номенклатура) КАК ВложенныйЗапрос
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ВложенныйЗапрос.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки.Обороты(&Дата3,&ДатаКон, ,
	               |				Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	               |					И ЗаказПоставщику.Транзит = ЛОЖЬ) КАК ЗакупкиОбороты
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗакупкиОбороты.Номенклатура
	               |ГДЕ
	               |	ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0) = 0
	               |	И ТоварыНаСкладахОстатки.КоличествоОстаток > &КолМин
	               |	И ЕСТЬNULL(ЗакупкиОбороты.КоличествоОборот, 0) = 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Производитель,
	               |	Номенклатура
	               |АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("КолМин", КолМин);
	Запрос.УстановитьПараметр("Дата3", ДобавитьМесяц( НачалоДня(КонПериода), -ЧислоМес) );
	Запрос.УстановитьПараметр("ДатаНач", НачПериода);
	Запрос.УстановитьПараметр("ДатаКон", КонПериода);
	Запрос.УстановитьПараметр("Базовая", справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008") );
	
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();
	
	списТов = табл.ВыгрузитьКолонку("Номенклатура");
	КонтрМРИЦ = справочники.Контрагенты.НайтиПоКоду("94291"); //для ценообразования KOLESATYT
	//КонтрМРИЦ = справочники.Контрагенты.НайтиПоКоду("11011"); //МРИЦ
	табЗнач1 = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(КонтрМРИЦ, списТов);
	для каждого стр1 из табл цикл
	СтрЦены = табЗнач1.Найти(стр1.Номенклатура, "Номенклатура");
	Если СтрЦены = неопределено тогда
		сообщить(стр1.Код+" - нет цены МРИЦ!", СтатусСообщения.Внимание);
		продолжить;
	КонецЕсли;	
	стр1.ЦенаМРИЦ = стрЦены.МинимальнаяЦена;	
	КонецЦикла;

	//+++ 21.12.2017
	КонтрМРЦ = справочники.Контрагенты.НайтиПоКоду("11011"); //Мин.рек.РОЗН.цена
	табЗнач1 = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(КонтрМРЦ, списТов);
	для каждого стр1 из табл цикл
	СтрЦены = табЗнач1.Найти(стр1.Номенклатура, "Номенклатура");
	Если СтрЦены = неопределено тогда
		сообщить(стр1.Код+" - нет цены МРЦ!", СтатусСообщения.Внимание);
		продолжить;
	КонецЕсли;	
	стр1.ЦенаМРЦ = стрЦены.МинимальнаяЦена;	
	КонецЦикла;


КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
	НачПериода = ДобавитьМесяц(КонПериода, -12);
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	КонПериода = ТекущаяДата();
	НачПериода = ДобавитьМесяц(КонПериода, -12);
    ЧислоМес = 3;
	КолМин   = 20;
КонецПроцедуры


Процедура ОсновныеДействияФормыУстановитьФиксЦены(Кнопка)
	
	Наценка = 5;
	Контр = справочники.Контрагенты.НайтиПоКоду("94291"); //для ценообразования KOLESATYT
	ДатаУст = НачалоДня( КонПериода );
	Коммент = "# 501 обработка #";
	Если ВвестиЧисло(Наценка, "Введите %наценки от Себестоимости на "+строка(ДатаУст) ) тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЦеныКлиента.Период,
		|	ЦеныКлиента.Контрагент,
		|	ЦеныКлиента.Номенклатура,
		|	ЦеныКлиента.Цена,
		|	ЦеныКлиента.Комментарий
		|ИЗ
		|	РегистрСведений.ЦеныКлиента КАК ЦеныКлиента
		|ГДЕ
		|	ЦеныКлиента.Контрагент = &Контр
		|	И ЦеныКлиента.Комментарий = &Комментарий";
		Запрос.УстановитьПараметр("Контр", Контр);
		Запрос.УстановитьПараметр("Комментарий", Коммент);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Сообщить("Удаляются "+строка(выборка.Количество())+" старых фикс.цен по контрагенту "+строка(Контр));
		Пока Выборка.Следующий() Цикл
			регСв = РегистрыСведений.ЦеныКлиента.СоздатьМенеджерЗаписи();   
			ЗаполнитьЗначенияСвойств(регСв, выборка);
			регСв.Удалить();
		КонецЦикла;
		
	
		коэф = (1 + Наценка/100);
		для каждого стр1 из Табл цикл   
		регСв = РегистрыСведений.ЦеныКлиента.СоздатьМенеджерЗаписи();   
		   регСв.Период = ДатаУст;
		   регСв.Контрагент = Контр;
		   регСв.Номенклатура = стр1.Номенклатура;
		   регСв.Цена = стр1.Себестоимость * коэф;
		   регСв.Комментарий = Коммент;
		  регСв.Записать(); 
		КонецЦикла;   
		Сообщить("Установлено "+строка(Табл.Количество())+" новых фикс.цен по контрагенту "+строка(Контр)+" на дату "+формат(ДатаУст,"ДЛФ=D"));
	КонецЕсли;
	   
КонецПроцедуры

Процедура ОсновныеДействияФормыУстановитьРезервИМ(Кнопка)
	
	ДатаКон  = КонПериода;
	РезервИМ = справочники.Контрагенты.НайтиПоКоду("П004703");
	КонтрагентЦен = справочники.Контрагенты.НайтиПоКоду("94291");
	Коммент  = "#сформирован из обработки №501 (по ценам '"+строка(КонтрагентЦен)+"')#";
	Ярославль = справочники.Подразделения.НайтиПоКоду("00005");
	
	Если Табл.Количество()>1000 тогда
		Если Вопрос("Количество товаров слишком большое!
			|Вы уверены, что хотите сделать резерв на "+строка(Табл.Количество())+" товаров?",РежимДиалогаВопрос.ДаНет,0)<>КодВозвратаДиалога.Да тогда
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	
//Закрыть старый резерв...	
Запрос = новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	ЗаказыПокупателейОстатки.ЗаказПокупателя как Док
               |ИЗ
               |	РегистрНакопления.ЗаказыПокупателей.Остатки( &ДатаКон,
               |			ДоговорКонтрагента.Владелец = &РерезвИМ
               |				И ЗаказПокупателя.Комментарий Подобно (&Коммент)
               |				И ЗаказПокупателя.Подразделение = &Ярославль) КАК ЗаказыПокупателейОстатки
               |ГДЕ
               |	ЗаказыПокупателейОстатки.КоличествоОстаток > 0";
Запрос.УстановитьПараметр("ДатаКон",  ДатаКон);
Запрос.УстановитьПараметр("Коммент", Коммент);
Запрос.УстановитьПараметр("РерезвИМ",  РезервИМ);
Запрос.УстановитьПараметр("Ярославль",  Ярославль);
выборка = Запрос.Выполнить().Выбрать();	

Если выборка.Следующий() тогда
	ДокЗакрытия = документы.ЗакрытиеОдногоЗаказаПокупателя.СоздатьДокумент();
	ДокЗакрытия.Дата = ДатаКон;
	ДокЗакрытия.ЗаказПокупателя = выборка.Док;
	ДокЗакрытия.Ответственный = глТекущийПользователь;
	попытка
		ДокЗакрытия.Записать(РежимЗаписиДокумента.Проведение);
		Сообщить("Сформирован документ "+строка(ДокЗакрытия)+" по резервному заказу "+Строка(выборка.Док), СтатусСообщения.Информация);
	исключение
		Сообщить("ОШИБКА при формировании документа закрытия по резервному заказу "+Строка(выборка.Док)+" : "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;	
Иначе
	Сообщить("Не найден предыдущий документ установки резерва на "+формат(КонПериода,"ДЛФ=D")+"!",СтатусСообщения.Внимание);
КонецЕсли;

	Док = документы.ЗаказПокупателя.СоздатьДокумент();
	//Шапка
	Док.Дата = ДатаКон + ( ТекущаяДата() - НачалоДня(ТекущаяДата()) ) ;
	
	Док.Подразделение = Ярославль;
	Док.Контрагент  = РезервИМ; //Резерв для ИМ
	Док.Комментарий = Коммент;
	Док.ДоговорКонтрагента = Док.Контрагент.ОсновнойДоговорКонтрагента;
	Док.Организация = Док.ДоговорКонтрагента.Организация;
	Док.ВалютаДокумента = Док.ДоговорКонтрагента.ВалютаВзаиморасчетов; // руб
	Док.КратностьВзаиморасчетов = 1;
	Док.ТипЦен = справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008");
	
	Док.УчитыватьНДС = истина;
	Док.СуммаВключаетНДС = истина;
	Док.Проверен = истина;
	Док.Ответственный = глТекущийПользователь;
	
	//Цены товаров
	Состояние("Идет расчет цен товаров...");
	СписокНом = новый СписокЗначений;
	СписокНом.ЗагрузитьЗначения( Табл.ВыгрузитьКолонку("Номенклатура") );
	табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(КонтрагентЦен, СписокНом, , , ДатаКон); // цены по срезу на ДатаКон
	
	СтавкаНДС_2019 = СтавкаНДСнаДату( Док.Дата ); //28.12.2018
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );
	
	//Товары
	Состояние("Идет формирвоание нового резервного Заказа покупателя...");
	для каждого стр1 из Табл цикл
	стрЗак = док.Товары.Добавить();
	стрЗак.Номенклатура = стр1.Номенклатура;
	стрЗак.Количество   = стр1.Остаток;
	стрЗак.ЕдиницаИзмерения = стр1.ЕдИзм;
	
	стрЗак.Коэффициент = 1;
	стрЗак.СтавкаНДС = СтавкаНДС_2019;
	
	СтрЦены = табЗнач1.Найти(стр1.Номенклатура, "Номенклатура");
	Если СтрЦены = неопределено тогда
		сообщить(строка(стрЗак.НомерСтроки)+" стр. "+стр1.Код+" - нет цены клиента!", СтатусСообщения.Внимание);
		продолжить;
	КонецЕсли;	
	Если СтрЦены.МинимальнаяЦена = 0 тогда
		сообщить(строка(стрЗак.НомерСтроки)+" стр. "+стр1.Код+" цена клиента = 0", СтатусСообщения.Внимание);
		продолжить;
	КонецЕсли;	
	
	стрЗак.Цена = СтрЦены.МинимальнаяЦена;
	стрЗак.Сумма = стрЗак.Цена*стрЗак.Количество;
	стрЗак.СуммаНДС = стрЗак.Сумма*чНДС/(100+чНДС);//28.12.2018
	КонецЦикла;
    Состояние("Идет открытие документа резерва");
	Попытка
		Док.Записать( РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный );
		Сообщить("Проведен документ резерва "+строка(Док), СтатусСообщения.Информация);
		ЭлементыФормы.Надпись3.Заголовок = "Резервный "+строка(Док);
	Исключение	
		Сообщить("ОШИБКА при проведении документа резерва! "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
	Док.ПолучитьФорму("ФормаДокумента").Открыть();
	Состояние(" ");
КонецПроцедуры

Процедура ТаблНоменклатураПриИзменении(Элемент)
	текСтр = ЭлементыФормы.Табл.ТекущиеДанные;
	текСтр.ЕдИзм = текСтр.Номенклатура.ЕдиницаХраненияОстатков;
КонецПроцедуры

Процедура Надпись3Нажатие(Элемент)
	РезервИМ = справочники.Контрагенты.НайтиПоКоду("П004703");
	КонтрагентЦен = справочники.Контрагенты.НайтиПоКоду("94291");
	Коммент  = "#сформирован из обработки №501 (по ценам '"+строка(КонтрагентЦен)+"')#";
	Ярославль = справочники.Подразделения.НайтиПоКоду("00005");
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПокупателейОстатки.ЗаказПокупателя как Док
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателей.Остатки( &ДатаКон,
	               |			ДоговорКонтрагента.Владелец = &РерезвИМ
	               |				И ЗаказПокупателя.Комментарий Подобно (&Коммент)
	               |				И ЗаказПокупателя.Подразделение = &Ярославль) КАК ЗаказыПокупателейОстатки
	               |ГДЕ
	               |	ЗаказыПокупателейОстатки.КоличествоОстаток > 0";
	Запрос.УстановитьПараметр("ДатаКон",  КонПериода+86400); //на 1 день больше!
	Запрос.УстановитьПараметр("Коммент", Коммент);
	Запрос.УстановитьПараметр("РерезвИМ",  РезервИМ);
	Запрос.УстановитьПараметр("Ярославль",  Ярославль);
	выборка = Запрос.Выполнить().Выбрать();	

	Если выборка.Следующий() тогда
		выборка.Док.получитьФорму("ФормаДокумента").Открыть();
	Иначе
		Предупреждение("Не найден резервный заказ по клиенту "+строка(РезервИМ),30);
	КонецЕсли;

КонецПроцедуры

Процедура ЧислоМесПриИзменении(Элемент)
	Предупреждение("Не будут учитываться товары, которые были куплены за последние "+строка( ЧислоМес )+" мес.
	|с "+строка( ДобавитьМесяц( НачалоДня(КонПериода), -ЧислоМес) ) +" по "+ строка(КонПериода), 30);
КонецПроцедуры

Процедура ЧислоМесРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	ЧислоМес = ЧислоМес + Направление;
	ЧислоМесПриИзменении(Элемент);
КонецПроцедуры

Процедура КоманднаяПанель1Удалить(Кнопка)
	произв = справочники.Производители.ПустаяСсылка();
	Если ВвестиЗначение(произв, "Выберите производителя") тогда
		мас = табл.НайтиСтроки( новый Структура("Производитель", произв) );
		Если мас.Количество()=0 тогда
			Предупреждение("Нет товаров с производителем "+строка(произв), 30);
			Возврат;
		КонецЕсли;	
		
		для i=0 по мас.Количество()-1 цикл
			табл.Удалить( мас[i] );
		КонецЦикла;
		Предупреждение("Удалено "+строка(мас.Количество())+" строк с производителем "+строка(произв), 30);
	КонецЕсли;	
КонецПроцедуры

Процедура ТаблПриПолученииДанных(Элемент, ОформленияСтрок)
		ЭлементыФормы.Табл.Колонки.Номенклатура.ТекстПодвала = строка( Табл.Количество() );
КонецПроцедуры

