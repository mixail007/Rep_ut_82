
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьСкладНаНачалоПериодаНажатие(Элемент)
	// Вставить содержимое обработчика.
	
	Менеджер = СсылкаНаОбъект.Ответственный;
	Если Не ЗначениеЗаполнено(Менеджер) Тогда 
		менеджер = глТекущийПользователь;	
	КонецЕсли;
	
	КучаМенеджеров = ложь;
	Если глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Чарчан                                            ") Тогда 
		КучаМенеджеров = истина;		
	КонецЕсли;	
	
	Если (СсылкаНаОбъект.Полугодие = 1) Тогда 
		НачПериода = НачалоГода(СсылкаНаОбъект.Дата); 
		КонПериода = Дата(Формат(Год(СсылкаНаОбъект.Дата),"ЧГ=0")+"0630235959");
	Иначе 
		НачПериода = Дата(Формат(Год(СсылкаНаОбъект.Дата),"ЧГ=0")+"0701000000"); 
		КонПериода = КонецГода(СсылкаНаОбъект.Дата); 			
	КонецЕсли;
		
	// Найдем данные по заполнению бюджета на данное полугодие.
	// Если менеджер = Кузьмичева или Никитин, то меняем их НГ
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Менеджер,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез1,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез1Справочно,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез2,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез2Справочно,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез3,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез3Справочно
	                      |ИЗ"+
	                      ?(КучаМенеджеров," РегистрСведений.ДанныеПоБюджетуДоходов.СрезПоследних(&Дата) КАК ДанныеПоБюджетуДоходовСрезПоследних","	РегистрСведений.ДанныеПоБюджетуДоходов.СрезПоследних(&Дата,Менеджер = &Менеджер) КАК ДанныеПоБюджетуДоходовСрезПоследних"));
						  
	Запрос.УстановитьПараметр("Дата",КонПериода);
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	
	ТаблицаМенеджеровИРазрезов = Запрос.Выполнить().Выгрузить();
	
	// Формируем запрос по складу. 
	
	//1.Остатки по товарам или партиям ? 
	ОстаткиПоТоварам = Истина;
	
	//2.Формируем запросы по складу. Количество.
	
	ШаблонТекстаТовары = "ВЫБРАТЬ
	               |	&Менеджер,
	               |	&Разрез1 КАК Категория,
	               |	&Разрез2 КАК Программа,
	               |	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОбщ
	               |ИЗ 
	               |" + ?(ОстаткипоТоварам,"РегистрНакопления.ТоварыНаСкладах.Остатки(", "РегистрНакопления.ПартииТоваровНаСкладах.Остатки(") + "
	               |			&Дата,
	               |			Номенклатура.Производитель в иерархии(&Разрез2) И Номенклатура.НоменклатурнаяГруппа в иерархии (&Разрез1)) КАК ТоварыНаСкладахОстатки";
				   
	ЗапросТовары = Новый Запрос(ШаблонТекстаТовары);
	
	ШаблонТекстаСтоимость = "ВЫБРАТЬ
	                        |	&Менеджер,
	                        |	&Разрез1 КАК Категория,
	                        |	&Разрез2 КАК Программа,
	                        |	СУММА(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток) КАК СтоимостьОбщ
	                        |ИЗ
	                        |	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	                        |			&Дата,
	                        |			Номенклатура.Производитель в иерархии(&Разрез2) И Номенклатура.НоменклатурнаяГруппа в иерархии(&Разрез1)) КАК ПартииТоваровНаСкладахОстатки";
				   
	ЗапросТовары 	= Новый Запрос(ШаблонТекстаТовары);
	
	ЗапросСтоимость = Новый Запрос(ШаблонТекстаСтоимость);
	
	ЗапросТовары.УстановитьПараметр("Дата",НачПериода);
	ЗапросСтоимость.УстановитьПараметр("Дата",НачПериода);
	
	ТаблицаСклада = Новый ТаблицаЗначений;
	
	ТаблицаСклада.Колонки.Добавить("Менеджер");
	ТаблицаСклада.Колонки.Добавить("Разрез1");
	ТаблицаСклада.Колонки.Добавить("Разрез2");
	ТаблицаСклада.Колонки.Добавить("ИтогоНачалоПериода");
	ТаблицаСклада.Колонки.Добавить("СебестоимостьНаНачалоПериода");
	ТаблицаСклада.Колонки.Добавить("СредняяЦена");
	
	Для Каждого СтрХ из ТаблицаМенеджеровИРазрезов Цикл
		
		ЗапросТовары.УстановитьПараметр("Менеджер",СтрХ.Менеджер);
		ЗапросТовары.УстановитьПараметр("Разрез1",СтрХ.Разрез1);
		ЗапросТовары.УстановитьПараметр("Разрез2",СтрХ.Разрез2);
		
		// По Никитину - виртуальная группа Ling long (грузовые и спец), если стоит группа 
		Если (СтрХ.Разрез1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00036")) Тогда 
			МассивНГ = новый массив;
			МассивНГ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00036"));
			МассивНГ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00074"));
			ЗапросТовары.УстановитьПараметр("Разрез1",МассивНГ);
		КонецЕсли;
		
        ЗапросТовары.Текст = ШаблонТекстаТовары;
		ЗапросСтоимость.Текст = ШаблонТекстаСтоимость;
		
		Если (СтрХ.Разрез1Справочно) Тогда 
			ЗапросТовары.Текст = СтрЗаменить(ЗапросТовары.Текст,"Номенклатура.Производитель в иерархии(&Разрез2) И Номенклатура.НоменклатурнаяГруппа в иерархии (&Разрез1)","Номенклатура.Производитель в иерархии (&Разрез2)");
			ЗапросСтоимость.Текст = СтрЗаменить(ЗапросСтоимость.Текст,"Номенклатура.Производитель в иерархии(&Разрез2) И Номенклатура.НоменклатурнаяГруппа в иерархии(&Разрез1)","Номенклатура.Производитель в иерархии(&Разрез2)");
		КонецЕсли;
		
		Если (СтрХ.Разрез2Справочно) Тогда 
			ЗапросТовары.Текст = СтрЗаменить(ЗапросТовары.Текст,"Номенклатура.Производитель в иерархии(&Разрез2) И Номенклатура.НоменклатурнаяГруппа в иерархии (&Разрез1)","Номенклатура.Номенклатурнаягруппа в иерархии(&Разрез1)");
			ЗапросСтоимость.Текст = СтрЗаменить(ЗапросСтоимость.Текст,"Номенклатура.Производитель в иерархии(&Разрез2) И Номенклатура.НоменклатурнаяГруппа в иерархии(&Разрез1)","Номенклатура.Номенклатурнаягруппа в иерархии(&Разрез1)");
		КонецЕсли;
		
		Если (СтрХ.Разрез1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00036")) Тогда 
			ЗапросТовары.Текст = СтрЗаменить(ЗапросТовары.Текст,"&Разрез1 КАК Категория","&Разрез11 КАК Категория");
			ЗапросТовары.УстановитьПараметр("Разрез11","LingLong (Грузовые и спец)");
		КонецЕсли;
	
		ВыбТовары = ЗапросТовары.Выполнить().Выбрать();
		
		ЗапросСтоимость.УстановитьПараметр("Менеджер",СтрХ.Менеджер);
		ЗапросСтоимость.УстановитьПараметр("Разрез1",СтрХ.Разрез1);
		ЗапросСтоимость.УстановитьПараметр("Разрез2",СтрХ.Разрез2);
		ВыбСтоимость = ЗапросСтоимость.Выполнить().Выбрать();		
		
		КоличествоОбщ = 0;
		СтоимостьОбщ = 0;
		
		Если ВыбТовары.Следующий() Тогда 
			КоличествоОбщ = ?(ВыбТовары.КоличествоОбщ=null,0,ВыбТовары.КоличествоОбщ);
		КонецЕсли; 
		
		Если ВыбСтоимость.Следующий() Тогда 
			СтоимостьОбщ = ?(ВыбСтоимость.Стоимостьобщ=null,0,ВыбСтоимость.Стоимостьобщ);
		КонецЕсли; 				
		
		СтрУ = ТаблицаСклада.Добавить();
		СтрУ.Менеджер 				= СтрХ.Менеджер;
		СтрУ.Разрез1 				= СтрХ.Разрез1;
		СтрУ.Разрез2 				= СтрХ.Разрез2;
		СтрУ.ИтогоНачалоПериода		= КоличествоОбщ;
		СтрУ.СебестоимостьНаНачалоПериода	 		= СтоимостьОбщ;
		СтрУ.СредняяЦена 			= ?(КоличествоОбщ=0,0,СтоимостьОбщ/КоличествоОбщ);
		
	КонецЦИкла;
	
	Объект = СсылкаНаОбъект.ПолучитьОбъект();
	Для каждого СтрХ из ТаблицаСклада Цикл
		ЗаполнитьСтрокуДокументаБюджетаСклад(Объект,СтрХ);
	КонеЦЦикла;
	
	// Заполняем состав НГ в других вкладках. 
	КоманднаяПанель1ЗаполнитьПоПервойВкладке(Объект);
	
	Объект.Записать();
	Оповестить("ОбновлениеИзОбработкиЗаполнения",,Этаформа);
	
КонецПроцедуры

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(СсылкаНаОбъект.Ссылка) Тогда 
		Если (СсылкаНаОбъект.Полугодие = 1) Тогда 
			НачПериода = НачалоГода(СсылкаНаОбъект.Дата); 
			КонПериода = Дата(Формат(Год(СсылкаНаОбъект.Дата),"ЧГ=0")+"0630235959");
		Иначе 
			НачПериода = Дата(Формат(Год(СсылкаНаОбъект.Дата),"ЧГ=0")+"0701000000"); 
			КонПериода = КонецГода(СсылкаНаОбъект.Дата); 			
		КонецЕсли;
	Иначе 
		Предупреждение("Документ не записан, для заполнения сначала запишите его !!!");
	КонецЕсли;
		
	Если (СсылкаНаОбъект.Полугодие = 1) Тогда 
		НачПериодаПГ = НачалоГода(СсылкаНаОбъект.Дата-31449600); 
		КонПериодаПГ = Дата(Формат(Год(СсылкаНаОбъект.Дата-31449600),"ЧГ=0")+"0630235959");
	Иначе 
		НачПериодаПГ = Дата(Формат(Год(СсылкаНаОбъект.Дата-31449600),"ЧГ=0")+"0701000000"); 
		КонПериодаПГ = КонецГода(СсылкаНаОбъект.Дата-31449600); 			
	КонецЕсли;
	
	ЗаполнитьЗаголовкиКолонок();
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуДокументаБюджетаСклад(Объект,СтрХ)
	
	//1. Склад
	Отбор = Новый Структура;
	Отбор.Вставить("Менеджер",СтрХ.Менеджер);
	Отбор.Вставить("Разрез1",СтрХ.Разрез1);
	Отбор.Вставить("Разрез2",СтрХ.Разрез2);
	
	МассивСтрН = Объект.Склад.НайтиСтроки(Отбор);
	
	Если (МассивСтрН.Количество()=0) Тогда 
		СтрН = Объект.Склад.Добавить();		
	Иначе 
		СтрН = МассивСтрН[0];
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрН,СтрХ);
	
КонецПроцедуры

Процедура ПерерасчитатьЗависимости(стрХ = неопределено)
	
	// Зависимости следующие: 
	
КонецПроцедуры

Процедура ЗаполнитьЗаголовкиКолонок()
	
	Продажи.Колонки[0].Заголовок = "Номенклатурная группа";
	Продажи.Колонки[1].Заголовок = "Производитель";
		
	Для й=4 по Продажи.Колонки.Количество()-1 Цикл
		//Продажи.Колонки[й].Заголовок = НайтиТекстМесяца(Продажи.Колонки[й].Имя);
		ЭлементыФормы.ТабличноеПоле2.Колонки[й].ТекстШапки = НайтиТекстМесяца(Продажи.Колонки[й].Имя);
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиТекстМесяца(ИмяКолонки)
	
	Если (Найти(ИмяКолонки,"Месяц1")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Январь","Июль");
	КонецЕсли;
	
	Если (Найти(ИмяКолонки,"Месяц2")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Февраль","Август");
	КонецЕсли;

	Если (Найти(ИмяКолонки,"Месяц3")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Март","Сентябрь");
	КонецЕсли;
	
	Если (Найти(ИмяКолонки,"Месяц4")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Апрель","Октябрь");
	КонецЕсли;
	
	Если (Найти(ИмяКолонки,"Месяц5")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Май","Ноябрь");
	КонецЕсли;
	
	Если (Найти(ИмяКолонки,"Месяц6")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Июнь","Декабрь");
	КонецЕсли;
	
	ОбщийТекст = "";
	
	Если не ЗначениеЗаполнено(ТекстМесяца) Тогда 
		Возврат "";
	КонецЕсли;	
		
	ОбщийТекст = ТекстМесяца;			
	
	Возврат ОбщийТекст; 
	
КонецФункции

Процедура КоманднаяПанель2Заполнить(Кнопка)
	// Вставить содержимое обработчика.
	// продажи
	Продажи.Очистить();	
	Для каждого Стрх из СсылкаНаОбъект.Склад Цикл
		СтрУ1 = Продажи.Добавить();		
		ЗаполнитьЗначенияСвойств(СтрУ1,стрх);
	КонеЦЦикла;		
КонецПроцедуры

Процедура КоманднаяПанель2ПеренестиВДокумент(Кнопка)
	// Вставить содержимое обработчика.
	Объект = СсылкаНаОбъект.ПолучитьОбъект();
	Для каждого СтрХ из Продажи Цикл
		ЗаполнитьСтрокуДокументаБюджетаПродажи(Объект,СтрХ);
	КонеЦЦикла;
	
	Объект.Записать();
	Оповестить("ОбновлениеИзОбработкиЗаполнения",,Этаформа);
		
КонецПроцедуры

Процедура КоманднаяПанель3ПеренестиВДокумент(Кнопка)
	// Вставить содержимое обработчика.
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуДокументаБюджетаПродажи(Объект,СтрХ)
	
	ЗапросОборотыПродаж = новый Запрос("ВЫБРАТЬ
	                            |	&Менеджер,
	                            |	&Разрез1 КАК Категория,
	                            |	&Разрез2 КАК Программа,
	                            |	СУММА(ТоварыНаСкладахОстатки.КоличествоОборот) КАК КоличествоОбщ
	                            |ИЗ
	                            |	РегистрНакопления.Продажи.Обороты(&Дата1, &Дата2, , ) КАК ТоварыНаСкладахОстатки
	                            |ГДЕ
	                            |	Номенклатура.Производитель = &Разрез2 И Номенклатура.НоменклатурнаяГруппа = &Разрез1");
								
								
	Если (Разрез1Справочно(НачПериода,СсылкаНаОбъект.Ответственный,СтрХ.Разрез1,Стрх.Разрез2)) Тогда 
		ЗапросОборотыПродаж.Текст = СтрЗаменить(ЗапросОборотыПродаж.Текст,"Номенклатура.Производитель = &Разрез2 И Номенклатура.НоменклатурнаяГруппа = &Разрез1","Номенклатура.Производитель = &Разрез2");
	КонецЕсли;
	
	Если (Разрез2Справочно(НачПериода,СсылкаНаОбъект.Ответственный,СтрХ.Разрез1,Стрх.Разрез2)) Тогда 
		ЗапросОборотыПродаж.Текст = СтрЗаменить(ЗапросОборотыПродаж.Текст,"Номенклатура.Производитель = &Разрез2 И Номенклатура.НоменклатурнаяГруппа = &Разрез1","Номенклатура.Номенклатурнаягруппа = &Разрез1");
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Менеджер",СсылкаНаОбъект.Ответственный);
	Отбор.Вставить("Разрез1",СтрХ.Разрез1);
	Отбор.Вставить("Разрез2",СтрХ.Разрез2);
	
	МассивСтрН = Объект.ПланПродаж.НайтиСтроки(Отбор);
	
	Если (МассивСтрН.Количество()=0) Тогда 
		СтрН = Объект.ПланПродаж.Добавить();		
	Иначе 
		СтрН = МассивСтрН[0];
	КонецЕсли;
	
	// Нашли строку
	СтрН.Менеджер = СсылкаНаОбъект.Ответственный;
	СтрН.Разрез1 = СтрХ.Разрез1;
	СтрН.Разрез2 = СтрХ.Разрез2;
	СтрН.Наценка = СтрХ.Наценка;
	
	//Распределение делаем
	Если СтрХ.ПроцентОтПрошлогоПериода<>0 Тогда 
		
		ЗапросОборотыПродаж.УстановитьПараметр("Дата1",Дата(Формат(Год(НачПериода)-1,"ЧГ=0") + Формат(Месяц(НачПериода),"ЧЦ=2; ЧВН=") + Формат(День(НачПериода),"ЧЦ=2; ЧВН=")+"000000"));
		ЗапросОборотыПродаж.УстановитьПараметр("Дата2",Дата(Формат(Год(КонПериода)-1,"ЧГ=0") + Формат(Месяц(КонПериода),"ЧЦ=2; ЧВН=") + Формат(День(КонПериода),"ЧЦ=2; ЧВН=")+"235959"));
		ЗапросОборотыПродаж.УстановитьПараметр("Разрез2",СтрХ.Разрез2);
		ЗапросОборотыПродаж.УстановитьПараметр("Разрез1",СтрХ.Разрез1);
		ЗапросОборотыПродаж.УстановитьПараметр("Менеджер",СсылкаНаОбъект.Ответственный);
		
		Выб = ЗапросОборотыПродаж.Выполнить().Выбрать();
		
		Если Выб.Следующий() Тогда 
			
			// Попробуем распределить
			Кол = Цел(Выб.КоличествоОбщ * СтрХ.ПроцентОтПрошлогоПериода/100);
			
			// раскидываем по месяцам
			СтрН.Месяц1Количество = Кол * СтрХ.Месяц1/100;
			СтрН.Месяц2Количество = Кол * СтрХ.Месяц2/100;
			СтрН.Месяц3Количество = Кол * СтрХ.Месяц3/100;
			СтрН.Месяц4Количество = Кол * СтрХ.Месяц4/100;
			СтрН.Месяц5Количество = Кол * СтрХ.Месяц5/100;
			СтрН.Месяц6Количество = Кол * СтрХ.Месяц6/100;
			
		КонеЦесли;		
		
	КонецЕсли;
	
КонецПроцедуры

Функция Разрез1Справочно(НачПериода,Менеджер,Разрез1,Разрез2)
	
	Запрос = Новый Запрос("Выбрать Менеджер из РегистрСведений.ДанныеПоБюджетуДоходов.СрезПервых(&Дата,Менеджер=&Менеджер и Разрез1=&Разрез1 и Разрез2=&Разрез2) Где Разрез1Справочно");
	
	Запрос.УстановитьПараметр("Дата",НачПериода);
	Запрос.УстановитьПараметр("Разрез1",Разрез1);
	Запрос.УстановитьПараметр("Разрез2",Разрез2);
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если выб.Следующий() тогда возврат истина; Конецесли;
	
	возврат ложь;
КонецФункции

Функция Разрез2Справочно(НачПериода,Менеджер,Разрез1,Разрез2)
	
	Запрос = Новый Запрос("Выбрать Менеджер из РегистрСведений.ДанныеПоБюджетуДоходов.СрезПервых(&Дата,Менеджер=&Менеджер и Разрез1=&Разрез1 и Разрез2=&Разрез2) Где Разрез2Справочно");
	
	Запрос.УстановитьПараметр("Дата",НачПериода);
	Запрос.УстановитьПараметр("Разрез1",Разрез1);
	Запрос.УстановитьПараметр("Разрез2",Разрез2);
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если выб.Следующий() тогда возврат истина; Конецесли;
	
	возврат ложь;
	
КонецФункции

Процедура КоманднаяПанель1ЗаполнитьПоПервойВкладке(Объект)
	// Вставить содержимое обработчика.
	й = 0;
	Объект.Поступления.Очистить();
	Объект.ПланПродаж.Очистить();
	Объект.ОплатаПоставщикам.Очистить();
	Объект.ПриходДенег.Очистить();
	Объект.СкладФормулы.Очистить();
	
	Для каждого Стрх из Объект.Склад Цикл
		Стр1 = Объект.Поступления.Добавить();
		Стр1.менеджер = СтрХ.Менеджер;
		Стр1.Разрез1 = СтрХ.разрез1;
		Стр1.Разрез2 = стрХ.Разрез2;
		
		Стр1 = Объект.ПланПродаж.Добавить();
		Стр1.менеджер = СтрХ.Менеджер;
		Стр1.Разрез1 = СтрХ.разрез1;
		Стр1.Разрез2 = стрХ.Разрез2;
		
		Стр1 = Объект.ОплатаПоставщикам.Добавить();
		Стр1.менеджер = СтрХ.Менеджер;
		Стр1.Разрез1 = СтрХ.разрез1;
		Стр1.Разрез2 = стрХ.Разрез2;
		
		Стр1 = Объект.ПриходДенег.Добавить();
		Стр1.менеджер = СтрХ.Менеджер;
		Стр1.Разрез1 = СтрХ.разрез1;
		Стр1.Разрез2 = стрХ.Разрез2;
		
	КонеЦЦикла;
КонецПроцедуры

Процедура ЗаполнитьОкончательноНажатие(Элемент)
	// Вставить содержимое обработчика.
	
	// Заполняем склад исходя из продаж и поступлений
	Объект = СсылкаНаОбъект.ПолучитьОбъект();
	
	Отбор = Новый Структура;
	
	// Склад количество
	Для каждого Стрх из Объект.Склад Цикл
		
		Отбор.Вставить("Разрез1",стрХ.Разрез1);
		Отбор.Вставить("Разрез2",стрХ.Разрез2);
		
		МассивПостСтр = Объект.Поступления.НайтиСтроки(Отбор);
		Если (МассивПостСтр.Количество()=0) Тогда 
			Сообщить("Не найдена строка поступлений по разрезам: " + Строка(Стрх.Разрез1) + "  " + Строка(стрХ.Разрез2));
			продолжить;
		КонецЕсли;
		
		СтрПост = МассивПостСтр[0];
		
		МассивПродСтр = Объект.ПланПродаж.НайтиСтроки(Отбор);
		Если (МассивПродСтр.Количество()=0) Тогда 
			Сообщить("Не найдена строка поступлений по разрезам: " + Строка(Стрх.Разрез1) + "  " + Строка(стрХ.Разрез2));
			продолжить;
		КонецЕсли;
		
		СтрПрод = МассивПродСтр[0];
		
		// ФОРМУЛЫ !!!!! Заполняем склад. ШТУКИ !!!
		// ------------------------------------------------------------------------- 
		// СКЛАД КОЛИЧЕСТВО
		СтрХ.Месяц1Количество = СтрХ.ИтогоНачалоПериода + СтрПост.Месяц1Количество - СтрПрод.Месяц1Количество;
		СтрХ.Месяц2Количество = СтрХ.Месяц1Количество + СтрПост.Месяц2Количество - СтрПрод.Месяц2Количество;
		СтрХ.Месяц3Количество = СтрХ.Месяц2Количество + СтрПост.Месяц3Количество - СтрПрод.Месяц3Количество;
		СтрХ.Месяц4Количество = СтрХ.Месяц3Количество + СтрПост.Месяц4Количество - СтрПрод.Месяц4Количество;
		СтрХ.Месяц5Количество = СтрХ.Месяц4Количество + СтрПост.Месяц5Количество - СтрПрод.Месяц5Количество;
		СтрХ.Месяц6Количество = СтрХ.Месяц5Количество + СтрПост.Месяц6Количество - СтрПрод.Месяц6Количество;		
		// СКЛАД СУММА
		СтрХ.Месяц1Сумма = СтрХ.СебестоимостьНаНачалоПериода + СтрПост.Месяц1Сумма - СтрПрод.Месяц1Сумма/(1+СтрПрод.наценка/100) ;
		СтрХ.Месяц2Сумма = СтрХ.Месяц1Сумма + СтрПост.Месяц2Сумма - СтрПрод.Месяц2Сумма/(1+СтрПрод.наценка/100) ;
		СтрХ.Месяц3Сумма = СтрХ.Месяц2Сумма + СтрПост.Месяц3Сумма - СтрПрод.Месяц3Сумма/(1+СтрПрод.наценка/100) ;
		СтрХ.Месяц4Сумма = СтрХ.Месяц3Сумма + СтрПост.Месяц4Сумма - СтрПрод.Месяц4Сумма/(1+СтрПрод.наценка/100) ;
		СтрХ.Месяц5Сумма = СтрХ.Месяц4Сумма + СтрПост.Месяц5Сумма - СтрПрод.Месяц5Сумма/(1+СтрПрод.наценка/100) ;
		СтрХ.Месяц6Сумма = СтрХ.Месяц5Сумма + СтрПост.Месяц6Сумма - СтрПрод.Месяц6Сумма/(1+СтрПрод.наценка/100) ;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	КонецЦикла;
	
	Для каждого Стрх из Объект.Поступления Цикл
		
		// ФОРМУЛЫ !!!!! Заполняем поступления. Суммы!!!. 
		// ------------------------------------------------------------------------- 
		// СУММА
		СтрХ.Месяц1Сумма = СтрХ.Месяц1Количество*Стрх.ВходнаяЦена;
		СтрХ.Месяц2Сумма = СтрХ.Месяц2Количество*Стрх.ВходнаяЦена;
		СтрХ.Месяц3Сумма = СтрХ.Месяц3Количество*Стрх.ВходнаяЦена;
		СтрХ.Месяц4Сумма = СтрХ.Месяц4Количество*Стрх.ВходнаяЦена;
		СтрХ.Месяц5Сумма = СтрХ.Месяц5Количество*Стрх.ВходнаяЦена;
		СтрХ.Месяц6Сумма = СтрХ.Месяц6Количество*Стрх.ВходнаяЦена;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	КонецЦикла;
	
	Для каждого Стрх из Объект.ПланПродаж Цикл
		
		Отбор.Вставить("Разрез1",стрХ.Разрез1);
		Отбор.Вставить("Разрез2",стрХ.Разрез2);
		
		МассивПостСтр = Объект.Поступления.НайтиСтроки(Отбор);
		Если (МассивПостСтр.Количество()=0) Тогда 
			Сообщить("Не найдена строка поступлений по разрезам: " + Строка(Стрх.Разрез1) + "  " + Строка(стрХ.Разрез2));
			продолжить;
		КонецЕсли;
		
		СтрПост = МассивПостСтр[0];
				
		// ФОРМУЛЫ !!!!! Заполняем продажи. Суммы!!!. 
		// ------------------------------------------------------------------------- 
		// СУММА
		СтрХ.Месяц1Сумма = СтрХ.Месяц1Количество*СтрПост.ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц2Сумма = СтрХ.Месяц2Количество*СтрПост.ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц3Сумма = СтрХ.Месяц3Количество*СтрПост.ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц4Сумма = СтрХ.Месяц4Количество*СтрПост.ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц5Сумма = СтрХ.Месяц5Количество*СтрПост.ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц6Сумма = СтрХ.Месяц6Количество*СтрПост.ВходнаяЦена*(1+СтрХ.Наценка/100);
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	КонецЦикла;
	
	Для каждого Стрх из Объект.ОплатаПоставщикам Цикл
		
		Отбор.Вставить("Разрез1",стрХ.Разрез1);
		Отбор.Вставить("Разрез2",стрХ.Разрез2);
		
		МассивПостСтр = Объект.Поступления.НайтиСтроки(Отбор);
		Если (МассивПостСтр.Количество()=0) Тогда 
			Сообщить("Не найдена строка поступлений по разрезам: " + Строка(Стрх.Разрез1) + "  " + Строка(стрХ.Разрез2));
			продолжить;
		КонецЕсли;
		
		СтрПост = МассивПостСтр[0];
				
		// ФОРМУЛЫ !!!!! Заполняем продажи. Суммы!!!. 
		// ------------------------------------------------------------------------- 
		// СУММА
		СтрХ.Месяц1Сумма = СтрПост.Месяц1Сумма;
		СтрХ.Месяц2Сумма = СтрПост.Месяц2Сумма;
		СтрХ.Месяц3Сумма = СтрПост.Месяц3Сумма;
		СтрХ.Месяц4Сумма = СтрПост.Месяц4Сумма;
		СтрХ.Месяц5Сумма = СтрПост.Месяц5Сумма;
		СтрХ.Месяц6Сумма = СтрПост.Месяц6Сумма;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	КонецЦикла;
	
	ТаблицаПроцентовПриходаДенег = Новый Массив;
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
		
	Для каждого Стрх из Объект.ПриходДенег Цикл
		
		Отбор.Вставить("Разрез1",стрХ.Разрез1);
		Отбор.Вставить("Разрез2",стрХ.Разрез2);
		ТаблицаПроцентовПриходаДенег[0] = 100;
		ТаблицаПроцентовПриходаДенег[1] = 100;
		ТаблицаПроцентовПриходаДенег[2] = 100;
		ТаблицаПроцентовПриходаДенег[3] = 100;
		ТаблицаПроцентовПриходаДенег[4] = 100;
		ТаблицаПроцентовПриходаДенег[5] = 100;
		
		Если ЗаполнятьОплатыОтПродажПоПрошломуГоду Тогда 
			ТаблицаПроцентовПриходаДенег = ПолучитьПроцентовкуЗаПрошлыйГод(Стрх.Разрез1,Стрх.Разрез2);
		иначе 
			;
		конецЕсли;

		
		МассивПродСтр = Объект.ПланПродаж.НайтиСтроки(Отбор);
		Если (МассивПродСтр.Количество()=0) Тогда 
			Сообщить("Не найдена строка поступлений по разрезам: " + Строка(Стрх.Разрез1) + "  " + Строка(стрХ.Разрез2));
			продолжить;
		КонецЕсли;
		
		СтрПрод = МассивПродСтр[0];
				
		// ФОРМУЛЫ !!!!! Заполняем продажи. Суммы!!!. 
		// ------------------------------------------------------------------------- 
		// СУММА
		СтрХ.Месяц1Сумма = СтрПрод.Месяц1Сумма*ТаблицаПроцентовПриходаДенег[0]/100;
		СтрХ.Месяц2Сумма = СтрПрод.Месяц2Сумма*ТаблицаПроцентовПриходаДенег[1]/100;
		СтрХ.Месяц3Сумма = СтрПрод.Месяц3Сумма*ТаблицаПроцентовПриходаДенег[2]/100;
		СтрХ.Месяц4Сумма = СтрПрод.Месяц4Сумма*ТаблицаПроцентовПриходаДенег[3]/100;
		СтрХ.Месяц5Сумма = СтрПрод.Месяц5Сумма*ТаблицаПроцентовПриходаДенег[4]/100;
		СтрХ.Месяц6Сумма = СтрПрод.Месяц6Сумма*ТаблицаПроцентовПриходаДенег[5]/100;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	КонецЦикла;
	
	// Заполняем ДДС по менеджерам
	
	// Оплата от покупателей
	СтрОплатаОтПокупателей = Объект.ДДС.Найти("Оплата от покупателей","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаОтПокупателей) Тогда
		СтрОплатаОтПокупателей = объект.ДДС.Добавить();
		СтрОплатаОтПокупателей.Статья = "Оплата от покупателей";
	Конецесли;
	

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовПриходДенег.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовПриходДенег.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовПриходДенег.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовПриходДенег.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовПриходДенег.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовПриходДенег.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ПриходДенег КАК БюджетДоходовПриходДенег
	                      |ГДЕ
	                      |	БюджетДоходовПриходДенег.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовПриходДенег.Ссылка.Проведен");
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаОтПокупателей.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаОтПокупателей.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаОтПокупателей.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаОтПокупателей.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаОтПокупателей.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаОтПокупателей.Месяц6Сумма = Выб.Месяц6Сумма;			
	Иначе 
		;
	КонецЕсли;
	
	// Оплата поставщикам - итого
	СтрОплатаПоставщикам = Объект.ДДС.Найти("Оплата поставщикам итого","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикам) Тогда
		СтрОплатаПоставщикам= объект.ДДС.Добавить();
		СтрОплатаПоставщикам.Статья = "Оплата поставщикам итого";
	Конецесли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ОплатаПоставщикам КАК БюджетДоходовОплатаПоставщикам
	                      |ГДЕ
	                      |	БюджетДоходовОплатаПоставщикам.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовОплатаПоставщикам.Ссылка.Проведен");
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаПоставщикам.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаПоставщикам.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаПоставщикам.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаПоставщикам.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаПоставщикам.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаПоставщикам.Месяц6Сумма = Выб.Месяц6Сумма;
	Иначе 
		;
	КонецЕсли;
		
	//Импорт (ЦМК импорт) 
	СтрОплатаПоставщикамИМПОРТЦМК = Объект.ДДС.Найти("Оплата поставщикам импорт ЦМК","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикамИМПОРТЦМК) Тогда
		СтрОплатаПоставщикамИМПОРТЦМК= объект.ДДС.Добавить();
		СтрОплатаПоставщикамИМПОРТЦМК.Статья = "Оплата поставщикам импорт ЦМК";
	Конецесли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ОплатаПоставщикам КАК БюджетДоходовОплатаПоставщикам
	                      |ГДЕ
	                      |	БюджетДоходовОплатаПоставщикам.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовОплатаПоставщикам.Ссылка.Проведен
	                      |	И БюджетДоходовОплатаПоставщикам.Разрез1 = &ЦМКИмпорт");
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	Запрос.УстановитьПараметр("ЦМКИмпорт",Справочники.НоменклатурныеГруппы.НайтиПоКоду("00036"));
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаПоставщикамИМПОРТЦМК.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаПоставщикамИМПОРТЦМК.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаПоставщикамИМПОРТЦМК.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаПоставщикамИМПОРТЦМК.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаПоставщикамИМПОРТЦМК.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаПоставщикамИМПОРТЦМК.Месяц6Сумма = Выб.Месяц6Сумма;
	Иначе 
		;
	КонецЕсли;
	
	//Импорт (Диски) 
	СтрОплатаПоставщикамДиски = Объект.ДДС.Найти("Оплата поставщикам диски","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикамДиски) Тогда
		СтрОплатаПоставщикамДиски= объект.ДДС.Добавить();
		СтрОплатаПоставщикамДиски.Статья = "Оплата поставщикам диски";
	Конецесли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ОплатаПоставщикам КАК БюджетДоходовОплатаПоставщикам
	                      |ГДЕ
	                      |	БюджетДоходовОплатаПоставщикам.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовОплатаПоставщикам.Ссылка.Проведен
	                      |	И БюджетДоходовОплатаПоставщикам.Разрез1 в (&Диски)");
						  
	Диски = новый Массив;
	Диски.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026"));
	Диски.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049"));
	Диски.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00022"));
	Диски.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00013"));
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	Запрос.УстановитьПараметр("Диски",Диски);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаПоставщикамДиски.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаПоставщикамДиски.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаПоставщикамДиски.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаПоставщикамДиски.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаПоставщикамДиски.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаПоставщикамДиски.Месяц6Сумма = Выб.Месяц6Сумма;
	Иначе 
		;
	КонецЕсли;
	
	// Сумма диски + ЦМК
	СтрОплатаПоставщикамИмпорт = Объект.ДДС.Найти("Оплата поставщикам импорт","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикамИмпорт) Тогда
		СтрОплатаПоставщикамИмпорт= объект.ДДС.Добавить();
		СтрОплатаПоставщикамИмпорт.Статья = "Оплата поставщикам импорт";
	Конецесли;	
	
	СтрОплатаПоставщикамИмпорт.Месяц1Сумма = СтрОплатаПоставщикамДиски.Месяц1Сумма + СтрОплатаПоставщикамИМПОРТЦМК.Месяц1Сумма;
	СтрОплатаПоставщикамИмпорт.Месяц2Сумма = СтрОплатаПоставщикамДиски.Месяц2Сумма + СтрОплатаПоставщикамИМПОРТЦМК.Месяц2Сумма;
	СтрОплатаПоставщикамИмпорт.Месяц3Сумма = СтрОплатаПоставщикамДиски.Месяц3Сумма + СтрОплатаПоставщикамИМПОРТЦМК.Месяц3Сумма;
	СтрОплатаПоставщикамИмпорт.Месяц4Сумма = СтрОплатаПоставщикамДиски.Месяц4Сумма + СтрОплатаПоставщикамИМПОРТЦМК.Месяц4Сумма;
	СтрОплатаПоставщикамИмпорт.Месяц5Сумма = СтрОплатаПоставщикамДиски.Месяц5Сумма + СтрОплатаПоставщикамИМПОРТЦМК.Месяц5Сумма;
	СтрОплатаПоставщикамИмпорт.Месяц6Сумма = СтрОплатаПоставщикамДиски.Месяц6Сумма + СтрОплатаПоставщикамИМПОРТЦМК.Месяц6Сумма;
	
	//Шины импорт зима
	СтрОплатаПоставщикамШИЗ = Объект.ДДС.Найти("Шины импорт (зима)","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикамШИЗ) Тогда
		СтрОплатаПоставщикамШИЗ= объект.ДДС.Добавить();
		СтрОплатаПоставщикамШИЗ.Статья = "Шины импорт (зима)";
	Конецесли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ОплатаПоставщикам КАК БюджетДоходовОплатаПоставщикам
	                      |ГДЕ
	                      |	БюджетДоходовОплатаПоставщикам.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовОплатаПоставщикам.Ссылка.Проведен
	                      |	И БюджетДоходовОплатаПоставщикам.Разрез1 в (&ШИЗ)");
						  
	ШИЗ = новый Массив;
	ШИЗ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00016"));
	ШИЗ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00065"));
	ШИЗ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00071"));
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	Запрос.УстановитьПараметр("ШИЗ",ШИЗ);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаПоставщикамШИЗ.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаПоставщикамШИЗ.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаПоставщикамШИЗ.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаПоставщикамШИЗ.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаПоставщикамШИЗ.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаПоставщикамШИЗ.Месяц6Сумма = Выб.Месяц6Сумма;
	Иначе 
		;
	КонецЕсли;
		
	//Шины импорт лето
	СтрОплатаПоставщикамШИЛ = Объект.ДДС.Найти("Шины импорт (лето)","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикамШИЛ) Тогда
		СтрОплатаПоставщикамШИЛ= объект.ДДС.Добавить();
		СтрОплатаПоставщикамШИЛ.Статья = "Шины импорт (лето)";
	Конецесли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ОплатаПоставщикам КАК БюджетДоходовОплатаПоставщикам
	                      |ГДЕ
	                      |	БюджетДоходовОплатаПоставщикам.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовОплатаПоставщикам.Ссылка.Проведен
	                      |	И БюджетДоходовОплатаПоставщикам.Разрез1 в (&ШИЛ)");
						  
	ШИЛ = новый Массив;
	ШИЛ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00017"));
	ШИЛ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00064"));
	ШИЛ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00062"));
	ШИЛ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00063"));
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	Запрос.УстановитьПараметр("ШИЛ",ШИЛ);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаПоставщикамШИЛ.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаПоставщикамШИЛ.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаПоставщикамШИЛ.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаПоставщикамШИЛ.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаПоставщикамШИЛ.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаПоставщикамШИЛ.Месяц6Сумма = Выб.Месяц6Сумма;
	Иначе 
		;
	КонецЕсли;
	
	//Шины отечественные
	СтрОплатаПоставщикамШО = Объект.ДДС.Найти("Шины отечественные","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикамШО) Тогда
		СтрОплатаПоставщикамШО= объект.ДДС.Добавить();
		СтрОплатаПоставщикамШО.Статья = "Шины отечественные";
	Конецесли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ОплатаПоставщикам КАК БюджетДоходовОплатаПоставщикам
	                      |ГДЕ
	                      |	БюджетДоходовОплатаПоставщикам.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовОплатаПоставщикам.Ссылка.Проведен
	                      |	И БюджетДоходовОплатаПоставщикам.Разрез1 в (&ШО)");
						  
	ШО = новый Массив;
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0009"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0010"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0012"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0014"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0015"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0016"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0017"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00039"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00003"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00004"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00014"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00015"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00034"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00035"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00037"));
	ШО.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00038"));
	
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	Запрос.УстановитьПараметр("ШО",ШО);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаПоставщикамШО.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаПоставщикамШО.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаПоставщикамШО.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаПоставщикамШО.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаПоставщикамШО.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаПоставщикамШО.Месяц6Сумма = Выб.Месяц6Сумма;
	Иначе 
		;
	КонецЕсли;
	
	//Остальные шины
	СтрОплатаПоставщикамСХШИ = Объект.ДДС.Найти("С/х шины импорт","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикамСХШИ) Тогда
		СтрОплатаПоставщикамСХШИ= объект.ДДС.Добавить();
		СтрОплатаПоставщикамСХШИ.Статья = "С/х шины импорт";
	Конецесли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ОплатаПоставщикам КАК БюджетДоходовОплатаПоставщикам
	                      |ГДЕ
	                      |	БюджетДоходовОплатаПоставщикам.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовОплатаПоставщикам.Ссылка.Проведен
	                      |	И БюджетДоходовОплатаПоставщикам.Разрез1 в (&СХШИ)");
						  
	СХШИ = новый Массив;
	СХШИ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00033"));
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	Запрос.УстановитьПараметр("СХШИ",СХШИ);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаПоставщикамШО.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаПоставщикамШО.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаПоставщикамШО.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаПоставщикамШО.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаПоставщикамШО.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаПоставщикамШО.Месяц6Сумма = Выб.Месяц6Сумма;
	Иначе 
		;
	КонецЕсли;
	
	//АКБ
	СтрОплатаПоставщикамАКБ = Объект.ДДС.Найти("АКБ","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикамАКБ) Тогда
		СтрОплатаПоставщикамАКБ= объект.ДДС.Добавить();
		СтрОплатаПоставщикамАКБ.Статья = "АКБ";
	Конецесли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ОплатаПоставщикам КАК БюджетДоходовОплатаПоставщикам
	                      |ГДЕ
	                      |	БюджетДоходовОплатаПоставщикам.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовОплатаПоставщикам.Ссылка.Проведен
	                      |	И БюджетДоходовОплатаПоставщикам.Разрез1 в (&АКБ)");
						  
	АКБ = новый Массив;
	АКБ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00060"));
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	Запрос.УстановитьПараметр("АКБ",АКБ);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаПоставщикамАКБ.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаПоставщикамАКБ.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаПоставщикамАКБ.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаПоставщикамАКБ.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаПоставщикамАКБ.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаПоставщикамАКБ.Месяц6Сумма = Выб.Месяц6Сумма;
	Иначе 
		;
	КонецЕсли;
	
	//Аксессуары
	СтрОплатаПоставщикамАксессуары = Объект.ДДС.Найти("Аксессуары","Статья");
	
	Если не ЗначениеЗаполнено(СтрОплатаПоставщикамАксессуары) Тогда
		СтрОплатаПоставщикамАксессуары= объект.ДДС.Добавить();
		СтрОплатаПоставщикамАксессуары.Статья = "Аксессуары";
	Конецесли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц1Сумма) КАК Месяц1Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц2Сумма) КАК Месяц2Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц3Сумма) КАК Месяц3Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц4Сумма) КАК Месяц4Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц5Сумма) КАК Месяц5Сумма,
	                      |	СУММА(БюджетДоходовОплатаПоставщикам.Месяц6Сумма) КАК Месяц6Сумма
	                      |ИЗ
	                      |	Документ.БюджетДоходов.ОплатаПоставщикам КАК БюджетДоходовОплатаПоставщикам
	                      |ГДЕ
	                      |	БюджетДоходовОплатаПоставщикам.Ссылка.Дата МЕЖДУ &дата1 И &Дата2
	                      |	И БюджетДоходовОплатаПоставщикам.Ссылка.Проведен
	                      |	И БюджетДоходовОплатаПоставщикам.Разрез1 в (&Аксессуары)");
						  
	Аксессуары = новый Массив;
	Аксессуары.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00073"));
						  
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	Запрос.УстановитьПараметр("Аксессуары",Аксессуары);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда 
		СтрОплатаПоставщикамАксессуары.Месяц1Сумма = Выб.Месяц1Сумма;
		СтрОплатаПоставщикамАксессуары.Месяц2Сумма = Выб.Месяц2Сумма;
		СтрОплатаПоставщикамАксессуары.Месяц3Сумма = Выб.Месяц3Сумма;
		СтрОплатаПоставщикамАксессуары.Месяц4Сумма = Выб.Месяц4Сумма;
		СтрОплатаПоставщикамАксессуары.Месяц5Сумма = Выб.Месяц5Сумма;
		СтрОплатаПоставщикамАксессуары.Месяц6Сумма = Выб.Месяц6Сумма;
	Иначе 
		;
	КонецЕсли;
	
	////////////////////////////////////
	
	Объект.Записать();

КонецПроцедуры

функция ПолучитьПроцентовкуЗаПрошлыйГод(Разрез1,Разрез2)
	                                            
	//НачПериода = '2015-07-01';
	//Конпериода = '20151231235959';
	//НачПериодаПГ = '2014-07-01';
	//КонПериодаПГ = '20141231235959';
	ТаблицаПроцентовПриходаДенег = Новый Массив;
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	
    	
	Если ЗначениеЗаполнено(Разрез2) Тогда 
		ЗапросПродажиНГ = Новый Запрос("ВЫБРАТЬ
		                               |	СтоимостьОборот
		                               |ИЗ
		                               |	РегистрНакопления.Продажи.Обороты(&Дата1, &дата2, , Номенклатура.НоменклатурнаяГруппа=&НГ и Номенклатура.Производитель=&Производитель) КАК ПродажиОбороты");
	Иначе 
		ЗапросПродажиНГ = Новый Запрос("ВЫБРАТЬ
		                               |	СтоимостьОборот
		                               |ИЗ
		                               |	РегистрНакопления.Продажи.Обороты(&Дата1, &дата2, , Номенклатура.НоменклатурнаяГруппа=&НГ) КАК ПродажиОбороты");		
	КонецЕсли;								   
								   
	ЗапросПродажиНГ.УстановитьПараметр("НГ",Разрез1);
	ЗапросПродажиНГ.УстановитьПараметр("Производитель",Разрез2);
	
	//ВыбПродажи = ЗапросПродажиНГ.Выполнить().Выбрать();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(ПЗ1.Сумма * ЕстьNULL(ПЗ2.соотношение,1)) КАК Сумма
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		ЗаказПокупателяТовары.Ссылка КАК Ссылка,
	                      |		ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	                      |		ЗаказПокупателяТовары.Сумма КАК Сумма
	                      |	ИЗ
	                      |		Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	                      |	ГДЕ
	                      |		ЗаказПокупателяТовары.Ссылка.Дата МЕЖДУ &дата11 И &дата22) КАК ПЗ1
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			ПЗ.Сделка КАК Сделка,
	                      |			ПЗ.Сумма / ПЗ.СуммаДокумента КАК соотношение
	                      |		ИЗ
	                      |			(ВЫБРАТЬ
	                      |				ПЗ.Сделка КАК Сделка,
	                      |				ПЗ.Сделка.СуммаДокумента КАК СуммаДокумента,
	                      |				СУММА(ПЗ.Сумма) КАК Сумма
	                      |			ИЗ
	                      |				(ВЫБРАТЬ
	                      |					""Не факторинг"" КАК ТипДоговора,
	                      |					ПЗ.Сделка КАК Сделка,
	                      |					ПЗ.СуммаВзаиморасчетов КАК Сумма
	                      |				ИЗ
	                      |					(ВЫБРАТЬ
	                      |						ВзаиморасчетыСКонтрагентами.Сделка КАК Сделка,
	                      |						ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов
	                      |					ИЗ
	                      |						РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	                      |					ГДЕ
	                      |						ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	                      |						И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &Дата1 И &Дата2
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ТипДоговора <> &Факторинг
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗАказам
	                      |						И ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
	                      |						И ВзаиморасчетыСКонтрагентами.Сделка В
	                      |								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |									РегистрНакопления.Продажи.Обороты.ЗаказПокупателя
	                      |								ИЗ
	                      |									РегистрНакопления.Продажи.Обороты(&Дата11, &дата22, , Номенклатура.НоменклатурнаяГруппа = &НГ
	                      |										И Номенклатура.Производитель = &Производитель))
	                      |					
	                      |					ОБЪЕДИНИТЬ ВСЕ
	                      |					
	                      |					ВЫБРАТЬ
	                      |						ВзаиморасчетыСКонтрагентами.Сделка,
	                      |						ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	                      |					ИЗ
	                      |						РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	                      |					ГДЕ
	                      |						ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	                      |						И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &Дата1 И &Дата2
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗАказам
	                      |						И ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ТипДоговора <> &Факторинг
	                      |						И ВзаиморасчетыСКонтрагентами.Сделка В
	                      |								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |									РегистрНакопления.Продажи.Обороты.ЗаказПокупателя
	                      |								ИЗ
	                      |									РегистрНакопления.Продажи.Обороты(&Дата11, &дата22, , Номенклатура.НоменклатурнаяГруппа = &НГ
	                      |										И Номенклатура.Производитель = &Производитель))
	                      |					
	                      |					ОБЪЕДИНИТЬ ВСЕ
	                      |					
	                      |					ВЫБРАТЬ
	                      |						ВзаиморасчетыСКонтрагентами.Сделка,
	                      |						ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	                      |					ИЗ
	                      |						РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	                      |					ГДЕ
	                      |						ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	                      |						И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &Дата1 И &Дата2
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗАказам
	                      |						И ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.Взаимозачет
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ТипДоговора <> &Факторинг
	                      |						И ВзаиморасчетыСКонтрагентами.Регистратор.УчитыватьДляРасчетаПремии = ИСТИНА
	                      |						И ВзаиморасчетыСКонтрагентами.Сделка В
	                      |								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |									РегистрНакопления.Продажи.Обороты.ЗаказПокупателя
	                      |								ИЗ
	                      |									РегистрНакопления.Продажи.Обороты(&Дата11, &дата22, , Номенклатура.НоменклатурнаяГруппа = &НГ
	                      |										И Номенклатура.Производитель = &Производитель))) КАК ПЗ
	                      |				
	                      |				ОБЪЕДИНИТЬ ВСЕ
	                      |				
	                      |				ВЫБРАТЬ
	                      |					""Факторинг"",
	                      |					ПЗ.Сделка,
	                      |					ПЗ.СуммаВзаиморасчетов
	                      |				ИЗ
	                      |					(ВЫБРАТЬ
	                      |						ВзаиморасчетыСКонтрагентами.Сделка КАК Сделка,
	                      |						ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов
	                      |					ИЗ
	                      |						РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	                      |					ГДЕ
	                      |						ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	                      |						И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &Дата1 И &Дата2
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ТипДоговора = &Факторинг
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗАказам
	                      |						И ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
	                      |						И ВзаиморасчетыСКонтрагентами.Сделка В
	                      |								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |									РегистрНакопления.Продажи.Обороты.ЗаказПокупателя
	                      |								ИЗ
	                      |									РегистрНакопления.Продажи.Обороты(&Дата11, &дата22, , Номенклатура.НоменклатурнаяГруппа = &НГ
	                      |										И Номенклатура.Производитель = &Производитель))
	                      |					
	                      |					ОБЪЕДИНИТЬ ВСЕ
	                      |					
	                      |					ВЫБРАТЬ
	                      |						ВзаиморасчетыСКонтрагентами.Сделка,
	                      |						ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	                      |					ИЗ
	                      |						РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	                      |					ГДЕ
	                      |						ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	                      |						И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &Дата1 И &Дата2
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗАказам
	                      |						И ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ТипДоговора = &Факторинг
	                      |						И ВзаиморасчетыСКонтрагентами.Сделка В
	                      |								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |									РегистрНакопления.Продажи.Обороты.ЗаказПокупателя
	                      |								ИЗ
	                      |									РегистрНакопления.Продажи.Обороты(&Дата11, &дата22, , Номенклатура.НоменклатурнаяГруппа = &НГ
	                      |										И Номенклатура.Производитель = &Производитель))
	                      |					
	                      |					ОБЪЕДИНИТЬ ВСЕ
	                      |					
	                      |					ВЫБРАТЬ
	                      |						ВзаиморасчетыСКонтрагентами.Сделка,
	                      |						ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	                      |					ИЗ
	                      |						РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	                      |					ГДЕ
	                      |						ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	                      |						И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &Дата1 И &Дата2
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗАказам
	                      |						И ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.Взаимозачет
	                      |						И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ТипДоговора = &Факторинг
	                      |						И ВзаиморасчетыСКонтрагентами.Регистратор.УчитыватьДляРасчетаПремии = ИСТИНА
	                      |						И ВзаиморасчетыСКонтрагентами.Сделка В
	                      |								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |									РегистрНакопления.Продажи.Обороты.ЗаказПокупателя
	                      |								ИЗ
	                      |									РегистрНакопления.Продажи.Обороты(&Дата11, &дата22, , Номенклатура.НоменклатурнаяГруппа = &НГ
	                      |										И Номенклатура.Производитель = &Производитель))) КАК ПЗ) КАК ПЗ
	                      |			
	                      |			СГРУППИРОВАТЬ ПО
	                      |				ПЗ.Сделка,
	                      |				ПЗ.Сделка.СуммаДокумента) КАК ПЗ) КАК ПЗ2
	                      |		ПО ПЗ1.Ссылка = ПЗ2.Сделка
	                      |ГДЕ
	                      |	ПЗ1.Номенклатура.НоменклатурнаяГруппа = &НГ
	                      |	И ПЗ1.Номенклатура.Производитель = &Производитель");
						  
						  
	Если не ЗначениеЗаполнено(Разрез2) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Номенклатура.Производитель = &Производитель","");						 
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И ПЗ1.Номенклатура.Производитель = &Производитель","");						 
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПоЗАказам",Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам);
	Запрос.УстановитьПараметр("Факторинг",Справочники.ТипыДоговоров.Факторинг);
	Запрос.УстановитьПараметр("Расход",ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("НГ",Разрез1);
	Запрос.УстановитьПараметр("Производитель",Разрез2);
	
	// Теперь делаем помесячно. 
	
	Для й=0 по 5 Цикл
		ТекМесяц = ДобавитьМесяц(НачПериодаПГ,й);	
		ЗапросПродажиНГ.УстановитьПараметр("Дата1",НачалоМесяца(ТекМесяц));
		ЗапросПродажиНГ.УстановитьПараметр("Дата2",КонецМесяца(ТекМесяц));
        Запрос.УстановитьПараметр("Дата1",НачалоМесяца(ТекМесяц));
		Запрос.УстановитьПараметр("Дата2",КонецМесяца(ТекМесяц));
        Запрос.УстановитьПараметр("Дата11",НачалоМесяца(ДобавитьМесяц(НачалоМесяца(ТекМесяц),-12)));
		Запрос.УстановитьПараметр("Дата22",КонецМесяца(ДобавитьМесяц(КонецМесяца(ТекМесяц),1)));

		ВыбПродажи = ЗапросПродажиНГ.Выполнить().Выгрузить();
		ВыбОплаты = Запрос.Выполнить().Выгрузить();
		
		Попытка 
			Если (ВыбПродажи.Количество()=0 или ВыбОплаты.Количество()=0) Тогда 
				ТаблицаПроцентовПриходаДенег[й] = 100;	
			иначе 
				ТаблицаПроцентовПриходаДенег[й] = ВыбОплаты[0].Сумма/ВыбПродажи[0].СтоимостьОборот*100;	
			КонецЕсли;
		Исключение
			ТаблицаПроцентовПриходаДенег[й] = 0;		
		КонецПопытки;
	КонецЦикла;
	
	Возврат ТаблицаПроцентовПриходаДенег;
КонецФункции

Процедура ВыбПериодНажатие1(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериодаПГ, ?(КонПериодаПГ='0001-01-01', КонПериодаПГ, КонецДня(КонПериодаПГ)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериодаПГ = НастройкаПериода.ПолучитьДатуНачала();
		КонПериодаПГ = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры


