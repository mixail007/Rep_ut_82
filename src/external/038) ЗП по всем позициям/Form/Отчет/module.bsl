
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Для каждого Стр Из Параметры Цикл
	
		Рекв = ЭтотОбъект.Метаданные().Реквизиты[Стр.Показатель];
		//Рекв = Стр.Значение;
		ЭтотОбъект[Рекв.Имя] = Стр.Значение;
		
	КонецЦикла;

	Отчет(ТабДок, X, Y, ВыбМенеджер, ВыбТип, КонПериода, НачПериода);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок, X, Y, ВыбМенеджер, ВыбТип, КонПериода, НачПериода) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПродажиОбороты.ЗаказПокупателя КАК Заказ,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК ДоговорКонтрагентаВладелец,
	|	ПродажиОбороты.Номенклатура,
	|	ПродажиОбороты.Номенклатура.Код КАК Код,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерПокупателя КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|	ПродажиОбороты.КоличествоОборот,
	|	ПродажиОбороты.СтоимостьОборот КАК ЦенаФакт,
	|	ПродажиОбороты.ДоговорКонтрагента,
	|	ПродажиОбороты.Период КАК Д,
	|
	|	ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ПродажиОбороты.КоличествоОборот КАК ЧИСЛО(15, 2)) КАК ЦенаБазовая,
	|
	|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Цена * ПродажиОбороты.КоличествоОборот < ПродажиОбороты.СтоимостьОборот ТОГДА
	|
	|		ВЫРАЗИТЬ((ЦеныНоменклатурыСрезПоследних.Цена * ПродажиОбороты.КоличествоОборот * &X + (ПродажиОбороты.СтоимостьОборот - ЦеныНоменклатурыСрезПоследних.Цена * ПродажиОбороты.КоличествоОборот) * &Y) * &Z КАК ЧИСЛО(15, 2)) 
	|
	|	ИНАЧЕ
	|
	|		ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ПродажиОбороты.КоличествоОборот * &X * &Z КАК ЧИСЛО(15, 2))
	|
	|	КОНЕЦ КАК Поле1,
	|	
	|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Цена * ПродажиОбороты.КоличествоОборот < ПродажиОбороты.СтоимостьОборот ТОГДА
	|
	|		""Тип А"" 
	|
	|	ИНАЧЕ
	|
	|		""Тип Б""
	|
	|	КОНЕЦ КАК ТипРасчета
	|		
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			(
	|			ВЫБРАТЬ 
	|				ПЗ1.ТипЦен, 
	|				ПЗ1.Номенклатура, 
	|				ПЗ1.Период, 
	|				ПЗ1.Регистратор, 
	|				ПЗ2.Цена 
	|			ИЗ
	|			// Соединяем регистр цен и регистр продаж
	|			// и вычленяем из них Несколько записей с максимальным периодом среди всех
	|			// записей, меньших по периоду чем период регистратора
	|			(
	|				ВЫБРАТЬ
	|					ТипЦен, 
	|					Рег1.Номенклатура, 
	|					ПЗП1.Регистратор, 
	|					Максимум(Рег1.Период) КАК Период
	|				ИЗ 
	|					РегистрСведений.ЦеныНоменклатуры КАК Рег1
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ 			
	|					(
	|					ВЫБРАТЬ
	|						Период, 
	|						Регистратор, 
	|						Номенклатура
	|					ИЗ 
	|						РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, Регистратор, )) Как ПЗП1
	|					ПО
	|						(Рег1.Номенклатура = ПЗП1.Номенклатура)
	|					ГДЕ 
	|						Рег1.Период <= ПЗП1.Период
	|					СГРУППИРОВАТЬ ПО 
	|						ТипЦен, Рег1.Номенклатура, ПЗП1.Регистратор
	|					) КАК ПЗ1
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|					(
	|					ВЫБРАТЬ
	|						ТипЦен, 
	|						Цена, 
	|						Рег1.Номенклатура, 
	|						ПЗП1.Регистратор, 
	|						Цена, 
	|						Рег1.Период КАК период
	|					ИЗ 
	|						РегистрСведений.ЦеныНоменклатуры КАК Рег1
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ 			
	|							(
	|							ВЫБРАТЬ
	|								Период, 
	|								Регистратор, 
	|								Номенклатура
	|							ИЗ 
	|								РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, Регистратор, )
	|							) Как ПЗП1
	|						ПО
	|							(Рег1.Номенклатура = ПЗП1.Номенклатура)
	|						ГДЕ 
	|							Рег1.Период <= ПЗП1.Период
	|					)   КАК ПЗ2
	|					ПО
	|						(ПЗ1.ТипЦен = ПЗ2.ТипЦен) И (ПЗ1.Номенклатура = ПЗ2.Номенклатура) и (ПЗ1.Период = ПЗ2.Период) и (ПЗ1.Регистратор = ПЗ2.Регистратор)
	|			
	|					ГДЕ ПЗ2.ТипЦен = &ТипЦен
	|			) КАК ЦеныНоменклатурыСрезПоследних
	|		
	|		ПО 
	|		ПродажиОбороты.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|		И
	|		ПродажиОбороты.Регистратор = ЦеныНоменклатурыСрезПоследних.Регистратор
	|
	|" +		
	?(НЕ ЗначениеНеЗаполнено(ВыбМенеджер), "ГДЕ ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерПокупателя = &ВыбМенеджер", "") +
	"
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДоговорКонтрагентаВладелец,
	|	ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя
	|
	|ИТОГИ
	|
	|	СУММА(Поле1),
	|	СУММА(ЦенаФакт),
	|	СУММА(ЦенаБазовая)
	|ПО
	|	Общие,
	|	ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя
	|";	
	
	
	Запрос.УстановитьПараметр("X", X);
	Запрос.УстановитьПараметр("Y", Y);
	Запрос.УстановитьПараметр("Z", Z);
	Запрос.УстановитьПараметр("ВыбМенеджер", ВыбМенеджер);
	Запрос.УстановитьПараметр("ТипЦен", ВыбТип);
	Запрос.УстановитьПараметр("КонПериода", КонПериода);
	Запрос.УстановитьПараметр("НачПериода", НачПериода);

	Результат = Запрос.Выполнить();
	
	Если СообщатьОПустыхЦенах Тогда
		
		ТЗ = Результат.Выгрузить();
		ТЗ.Свернуть("Номенклатура, Д, ЦенаБазовая");
		ТЗ.Сортировать("Номенклатура, ЦенаБазовая ВОЗР");
		ТЗ.Колонки.Добавить("Дата");
		
		
		
		ф = Ложь;
		
		Пока НЕ ф Цикл
			
			ф = Истина;
			
			Для каждого СтрТЗ Из ТЗ Цикл
				
				Если (ЗначениеНеЗаполнено(СтрТЗ.Номенклатура)) ИЛИ 
					(НЕ СтрТЗ.ЦенаБазовая = 0) ИЛИ
					(ТипЗнч(СтрТЗ.Номенклатура) = Null) ИЛИ
					(ТипЗнч(СтрТЗ.Д) = Null) Тогда
					
					Н = СтрТЗ.Номенклатура;
					Ц = СтрТЗ.ЦенаБазовая;
					ТЗ.Удалить(СтрТЗ);	
					ф = Ложь;
					Прервать;
					
				Иначе
					
					СтрТЗ.Дата = Формат(СтрТЗ.Д, "ДЛФ=Д");
					
				КонецЕсли; 	
				
			КонецЦикла; 
			
		КонецЦикла;
		
		ТЗ.Свернуть("Номенклатура, Дата, ЦенаБазовая");
		ТЗ.Сортировать("Номенклатура, Дата ВОЗР");
		
	КонецЕсли; 
	
	//ТЗ.ВыбратьСтроку();
	
	Если (СообщатьОПустыхЦенах)
		И (ТЗ.Количество() > 0) Тогда
		
		Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("МакетОшибок");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("Шапка");
		ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		
		ОбластьЗаголовок.Параметры.НачПериода = Формат(НачПериода, "ДЛФ=Д");
		ОбластьЗаголовок.Параметры.КонПериода = Формат(КонПериода, "ДЛФ=Д");
		ОбластьЗаголовок.Параметры.ТипЦен = ВыбТип;
		
		ТабДок.Очистить();
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		СНом = "";
		
		Для каждого СтрТЗ Из ТЗ Цикл
		
			Если СНом = "" Тогда
			
				СНом = СтрТЗ.Номенклатура;
				
				ОбластьНоменклатура.Параметры.Номенклатура = СНом;
				ОбластьНоменклатура.Параметры.Код = СНом.Код;
				ТабДок.Вывести(ОбластьНоменклатура, 1);
				ОбластьДетальныхЗаписей.Параметры.Дата = СтрТЗ.Дата;
				ТабДок.Вывести(ОбластьДетальныхЗаписей, 2,,Ложь);
				
			Иначе
				
				Если СтрТЗ.Номенклатура <> СНом Тогда
					
					СНом = СтрТЗ.Номенклатура;
					ОбластьНоменклатура.Параметры.Номенклатура = СНом;
					ОбластьНоменклатура.Параметры.Код = СНом.Код;
					ТабДок.Вывести(ОбластьНоменклатура, 1);
					ОбластьДетальныхЗаписей.Параметры.Дата = СтрТЗ.Дата;
					ТабДок.Вывести(ОбластьДетальныхЗаписей, 2,,Ложь);

				
				Иначе
					
					ОбластьДетальныхЗаписей.Параметры.Дата = СтрТЗ.Дата;
					ТабДок.Вывести(ОбластьДетальныхЗаписей, 2);
				
				КонецЕсли; 
			
				
			КонецЕсли; 
			
		
		КонецЦикла; 

		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		
	Иначе
		
		Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");

		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя = Макет.ПолучитьОбласть("ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя");
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		//ТабДок = Новый ТабличныйДокумент;
		ТабДок.Очистить();
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.ФиксацияСверху = ТабДок.ВысотаТаблицы;
		
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		ОбщиеИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ОбщиеИтоги.Следующий();
		
		ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя = ОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Следующий() Цикл
			ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Параметры.Заполнить(ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя);
			ТабДок.Вывести(ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя, ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Уровень());
			
			ВыборкаДетали = ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Выбрать();
			
			Пока ВыборкаДетали.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень(), , Ложь);
			КонецЦикла;
		КонецЦикла;
		
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		
		ОбластьИтоги.Параметры.Заполнить(ОбщиеИтоги);
		ТабДок.Вывести(ОбластьИтоги);
		
	КонецЕсли; 
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьПоказатели()
	
	МД =  ЭтотОбъект.Метаданные();
	
	Для каждого Рекв Из МД.Реквизиты Цикл
	
		Стр = Параметры.Добавить();
		Стр.Показатель = Рекв;
		Стр.Значение = ЭтотОбъект[Рекв.Имя];
	
	КонецЦикла; 	

КонецПроцедуры
 
Процедура ПриОткрытии()
	ЗаполнитьПоказатели();
КонецПроцедуры

Процедура ПараметрыПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура ВывестиОтчетПоЦенам(Номенклатура)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("МакетДинамикиЦен");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатуры.Период,
	|	ЦеныНоменклатуры.Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|ГДЕ
	|	ЦеныНоменклатуры.Период МЕЖДУ &НачПериода И &КонПериода
	|	И ЦеныНоменклатуры.ТипЦен = &ТипЦены
	|	И ЦеныНоменклатуры.Номенклатура = &Номенклатура";

	Запрос.УстановитьПараметр("КонПериода", КонПериода);
	Запрос.УстановитьПараметр("НачПериода", НачПериода);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТипЦены", ВыбТип);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("Шапка");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	//ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.НачПериода = Формат(НачПериода, "ДЛФ = Д");
	ОбластьЗаголовок.Параметры.КонПериода = Формат(КонПериода, "ДЛФ = Д");
	ОбластьЗаголовок.Параметры.Номенклатура = Номенклатура;
	ОбластьЗаголовок.Параметры.ТипЦены = ВыбТип;
	
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей);
	КонецЦикла;


    ТабДок.Показать();
	
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)		
	
	
	
	Если ТипЗнч(Расшифровка) = Тип("Строка") Тогда
		
		СтандартнаяОбработка = Ложь;
		ВывестиОтчетПоЦенам(Справочники.Номенклатура.НайтиПоКоду(Расшифровка));	
		
	КонецЕсли; 
	
	
КонецПроцедуры

x = 0.0001;
y = 0.0001;
z = 1;

НачПериода = ДобавитьМесяц(НачалоМесяца(ТекущаяДата()), -1);
КонПериода = КонецМесяца(НачПериода);

ВыбТип = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Крупный опт");
