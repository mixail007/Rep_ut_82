Перем ТЗДляЗаказа,ТЗНенулевая,НеНулевая,СписокТоваровТочноЗаказывать,СписокЗаказовТочноЗаказывать;

Процедура КоманднаяПанель1Выполнить(Кнопка)
	Запрос=новый Запрос;
	Если 1=1 тогда
	Запрос.Текст="ВЫБРАТЬ
	             |	АктуальныеТовары.Номенклатура КАК Номенклатура
	             |ПОМЕСТИТЬ втАктуальныетовары
	             |ИЗ
	             |	РегистрСведений.АктуальныеТовары КАК АктуальныеТовары
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	             |	СУММА(ВЫБОР
	             |			КОГДА ЕСТЬNULL(ВложенныйЗапрос.ТранзитВПутиВПроизводстве, 0) < 0
	             |				ТОГДА 0
	             |			ИНАЧЕ ЕСТЬNULL(ВложенныйЗапрос.ТранзитВПутиВПроизводстве, 0)
	             |		КОНЕЦ) КАК ВПутиВПроизводстве
	             |ПОМЕСТИТЬ втТранзит
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	             |		ВЫБОР
	             |			КОГДА ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) < 0
	             |				ТОГДА 0
	             |			ИНАЧЕ ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0)
	             |		КОНЕЦ КАК ТранзитВПутиВПроизводстве
	             |	ИЗ
	             |		РегистрНакопления.ЗаказыПоставщикам.Остатки(&ТекДата, ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ) КАК ЗаказыПоставщикамОстатки
	             |	ГДЕ
	             |		ЗаказыПоставщикамОстатки.ЗаказПоставщику.Транзит = ИСТИНА
	             |		И ЗаказыПоставщикамОстатки.ЗаказПоставщику.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		ВЫБОР
	             |			КОГДА ЕСТЬNULL(ЗаказыПоставщикамСезонныеОстатки.Номенклатура, 0) < 0
	             |				ТОГДА 0
	             |			ИНАЧЕ ЕСТЬNULL(ЗаказыПоставщикамСезонныеОстатки.Номенклатура, 0)
	             |		КОНЕЦ,
	             |		ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
	             |	ИЗ
	             |		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(&ТекДата, ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ) КАК ЗаказыПоставщикамСезонныеОстатки
	             |	ГДЕ
	             |		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.Дата <= &ТекДата
	             |		И (ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата
	             |				ИЛИ ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо = &ПустаяДата)
	             |		И ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.Транзит = ИСТИНА
	             |		И ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК ВложенныйЗапрос
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВложенныйЗапрос.Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗаказПокупателяСезонныйТовары.Номенклатура,
	             |	СУММА(ЗаказПокупателяСезонныйТовары.Количество) КАК Количество,
	             |	ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент,
	             |	МИНИМУМ(ЗаказПокупателяСезонныйТовары.Ссылка.Дата) КАК Дата
	             |ПОМЕСТИТЬ ЗаказыСезонные
	             |ИЗ
	             |	Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПокупателяСезонныйТовары
	             |ГДЕ
	             |	ЗаказПокупателяСезонныйТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	             |	И НЕ ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.Пустаяссылка)
	             |	И КОНЕЦПЕРИОДА(ЗаказПокупателяСезонныйТовары.Ссылка.ДатаДействияПо, ДЕНЬ) >= &ДатаКон
	             |	И НЕ ЗаказПокупателяСезонныйТовары.Ссылка.ДатаДействияПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	             |	И ЕСТЬNULL(ЗаказПокупателяСезонныйТовары.Ссылка.Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ЗаказПокупателяСезонныйТовары.Номенклатура,
	             |	ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЕСТЬNULL(А.Номенклатура, НевыполненныйСезонныйПокупателя.Номенклатура) КАК Номенклатура,
	             |	ЕСТЬNULL(А.КоличествоОстаток, 0) КАК КоличествоОстаток,
	             |	ЕСТЬNULL(А.Заказано, 0) КАК Заказано,
	             |	ЕСТЬNULL(А.ВПути, 0) КАК ВПути,
	             |	ЕСТЬNULL(А.ВПроизводстве, 0) КАК ВПроизводстве,
	             |	ЕСТЬNULL(НевыполненныйСезонныйПокупателя.НевыполненыйСезонныйКоличество, 0) КАК НевыполненоСЗПокупателя,
	             |	ЕСТЬNULL(А.Номенклатура.Типоразмер.Диаметр, НевыполненныйСезонныйПокупателя.Номенклатура.Типоразмер.Диаметр) КАК Диаметр,
	             |	ЕСТЬNULL(НевыполненныйСезонныйПокупателя.НевыполненыйСезонныйКоличество, 0) - (ЕСТЬNULL(А.КоличествоОстаток, 0) - ЕСТЬNULL(А.Заказано, 0)) - ЕСТЬNULL(А.ВПути, 0) - ЕСТЬNULL(А.ВПроизводстве, 0) КАК Заказать,
	             |	ЕСТЬNULL(А.СвободныйОстаток, 0) КАК СвободныйОстаток
	             |ПОМЕСТИТЬ втОснова
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		Б.Номенклатура КАК Номенклатура,
	             |		СУММА(ВЫБОР
	             |				КОГДА Б.СезонныйКоличество - Б.Продажи < 0
	             |					ТОГДА 0
	             |				ИНАЧЕ Б.СезонныйКоличество - Б.Продажи
	             |			КОНЕЦ) КАК НевыполненыйСезонныйКоличество
	             |	ИЗ
	             |		(ВЫБРАТЬ
	             |			ЕСТЬNULL(ПродажиОбороты.Номенклатура, ЗаказыСезонные.Номенклатура) КАК Номенклатура,
	             |			СУММА(ЗаказыСезонные.Количество - ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК НевыполненыйСезонныйКоличество,
	             |			ЗаказыСезонные.Контрагент КАК Контрагент,
	             |			МАКСИМУМ(ЗаказыСезонные.Количество) КАК СезонныйКоличество,
	             |			СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК Продажи
	             |		ИЗ
	             |			ЗаказыСезонные КАК ЗаказыСезонные
	             |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(, &ДатаКон, , ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ) КАК ПродажиОбороты
	             |				ПО (ПродажиОбороты.ДоговорКонтрагента.Владелец = ЗаказыСезонные.Контрагент)
	             |					И (ПродажиОбороты.Номенклатура = ЗаказыСезонные.Номенклатура)
	             |					И ЗаказыСезонные.Дата <= ПродажиОбороты.ДокументПродажи.Дата
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			ЕСТЬNULL(ПродажиОбороты.Номенклатура, ЗаказыСезонные.Номенклатура),
	             |			ЗаказыСезонные.Контрагент) КАК Б
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		Б.Номенклатура) КАК НевыполненныйСезонныйПокупателя
	             |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			Б.Номенклатура КАК Номенклатура,
	             |			СУММА(Б.КоличествоОстаток) КАК КоличествоОстаток,
	             |			СУММА(Б.Заказано) КАК Заказано,
	             |			СУММА(Б.ВПути) КАК ВПути,
	             |			СУММА(Б.ВПроизводстве) КАК ВПроизводстве,
	             |			СУММА(Б.КоличествоОстаток - Б.Заказано) КАК СвободныйОстаток
	             |		ИЗ
	             |			(ВЫБРАТЬ
	             |				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	             |				ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	             |				0 КАК Заказано,
	             |				0 КАК ВПути,
	             |				0 КАК ВПроизводстве
	             |			ИЗ
	             |				РегистрНакопления.ТоварыНаСкладах.Остатки(
	             |						,
	             |						(Склад.Подразделение = &ГоловноеПодразделение
	             |							ИЛИ Склад.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяССылка))
	             |							И НЕ Склад.Транзитный
	             |							И НЕ Склад.ЗапретитьИспользование
	             |							И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.видыТоваров.Диски)) КАК ТоварыНаСкладахОстатки
	             |			
	             |			ОБЪЕДИНИТЬ ВСЕ
	             |			
	             |			ВЫБРАТЬ
	             |				ЗаказыПокупателей.Номенклатура,
	             |				0,
	             |				ЗаказыПокупателей.Заказано,
	             |				0,
	             |				0
	             |			ИЗ
	             |				(ВЫБРАТЬ
	             |					ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	             |					СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК Заказано
	             |				ИЗ
	             |					РегистрНакопления.ЗаказыПокупателей.Остатки(
	             |							,
	             |							(ЗаказПокупателя.Подразделение = &ГоловноеПодразделение
	             |								ИЛИ ЗаказПокупателя.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяССылка))
	             |								И НЕ ЗаказПокупателя.Транзит
	             |								И ЗаказПокупателя.Проверен
	             |								И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПокупателейОстатки
	             |				
	             |				СГРУППИРОВАТЬ ПО
	             |					ЗаказыПокупателейОстатки.Номенклатура) КАК ЗаказыПокупателей
	             |			
	             |			ОБЪЕДИНИТЬ ВСЕ
	             |			
	             |			ВЫБРАТЬ
	             |				ТоварыВПути.Номенклатура,
	             |				0,
	             |				0,
	             |				ТоварыВПути.ВПути,
	             |				0
	             |			ИЗ
	             |				(ВЫБРАТЬ
	             |					ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	             |					СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК ВПути
	             |				ИЗ
	             |					РегистрНакопления.ЗаказыПоставщикам.Остатки(
	             |							,
	             |							НЕ ЗаказПоставщику.Транзит
	             |								И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
	             |								И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	             |								И (ЗаказПоставщику.Подразделение = &ГоловноеПодразделение
	             |									ИЛИ ЗаказПоставщику.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяССылка))
	             |								И (ЗаказПоставщику.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
	             |									ИЛИ ЗаказПоставщику.ДатаПоступления >= &ТекДата)) КАК ЗаказыПоставщикамОстатки
	             |				
	             |				СГРУППИРОВАТЬ ПО
	             |					ЗаказыПоставщикамОстатки.Номенклатура) КАК ТоварыВПути
	             |			
	             |			ОБЪЕДИНИТЬ ВСЕ
	             |			
	             |			ВЫБРАТЬ
	             |				ТоварыВПроизводстве.Номенклатура,
	             |				0,
	             |				0,
	             |				0,
	             |				ТоварыВПроизводстве.ВПроизводстве
	             |			ИЗ
	             |				(ВЫБРАТЬ
	             |					ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
	             |					СУММА(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток) КАК ВПроизводстве
	             |				ИЗ
	             |					РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
	             |							,
	             |							Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	             |								И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
	             |								И НЕ ЗаказПоставщикуСезонный.Транзит
	             |								И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) >= &ТекДата
	             |								И (ЗаказПоставщикуСезонный.Подразделение = &ГоловноеПодразделение
	             |									ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяССылка))) КАК ЗаказыПоставщикамСезонныеОстатки
	             |				
	             |				СГРУППИРОВАТЬ ПО
	             |					ЗаказыПоставщикамСезонныеОстатки.Номенклатура) КАК ТоварыВПроизводстве) КАК Б
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			Б.Номенклатура) КАК А
	             |		ПО НевыполненныйСезонныйПокупателя.Номенклатура = А.Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЕСТЬNULL(НевыполненныйСезонныйПокупателя.Номенклатура, А.Номенклатура) КАК Номенклатура,
	             |	СУММА(ЕСТЬNULL(А.Заказано, 0)) КАК ЗаказаноИзСезона
	             |ПОМЕСТИТЬ втОснова1
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		Б.Номенклатура КАК Номенклатура,
	             |		СУММА(ВЫБОР
	             |				КОГДА Б.СезонныйКоличество - Б.Продажи < 0
	             |					ТОГДА 0
	             |				ИНАЧЕ Б.СезонныйКоличество - Б.Продажи
	             |			КОНЕЦ) КАК НевыполненыйСезонныйКоличество,
	             |		Б.Контрагент КАК Контрагент
	             |	ИЗ
	             |		(ВЫБРАТЬ
	             |			ЕСТЬNULL(ПродажиОбороты.Номенклатура, ЗаказыСезонные.Номенклатура) КАК Номенклатура,
	             |			СУММА(ЗаказыСезонные.Количество - ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК НевыполненыйСезонныйКоличество,
	             |			ЗаказыСезонные.Контрагент КАК Контрагент,
	             |			МАКСИМУМ(ЗаказыСезонные.Количество) КАК СезонныйКоличество,
	             |			СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК Продажи
	             |		ИЗ
	             |			ЗаказыСезонные КАК ЗаказыСезонные
	             |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(, &ДатаКон, , ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ) КАК ПродажиОбороты
	             |				ПО (ПродажиОбороты.ДоговорКонтрагента.Владелец = ЗаказыСезонные.Контрагент)
	             |					И (ПродажиОбороты.Номенклатура = ЗаказыСезонные.Номенклатура)
	             |					И ЗаказыСезонные.Дата <= ПродажиОбороты.ДокументПродажи.Дата
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			ЕСТЬNULL(ПродажиОбороты.Номенклатура, ЗаказыСезонные.Номенклатура),
	             |			ЗаказыСезонные.Контрагент) КАК Б
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		Б.Номенклатура,
	             |		Б.Контрагент) КАК НевыполненныйСезонныйПокупателя
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			Б.Номенклатура КАК Номенклатура,
	             |			СУММА(Б.Заказано) КАК Заказано,
	             |			Б.Контрагент КАК Контрагент
	             |		ИЗ
	             |			(ВЫБРАТЬ
	             |				ЗаказыПокупателей.Номенклатура КАК Номенклатура,
	             |				СУММА(ЗаказыПокупателей.Заказано) КАК Заказано,
	             |				ЗаказыПокупателей.ДоговорКонтрагентаВладелец КАК Контрагент
	             |			ИЗ
	             |				(ВЫБРАТЬ
	             |					ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	             |					СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК Заказано,
	             |					ЗаказыПокупателейОстатки.ДоговорКонтрагента.Владелец КАК ДоговорКонтрагентаВладелец
	             |				ИЗ
	             |					РегистрНакопления.ЗаказыПокупателей.Остатки(
	             |							,
	             |							(ЗаказПокупателя.Подразделение = &ГоловноеПодразделение
	             |								ИЛИ ЗаказПокупателя.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяССылка))
	             |								И НЕ ЗаказПокупателя.Транзит
	             |								И ЗаказПокупателя.Проверен
	             |								И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПокупателейОстатки
	             |				
	             |				СГРУППИРОВАТЬ ПО
	             |					ЗаказыПокупателейОстатки.Номенклатура,
	             |					ЗаказыПокупателейОстатки.ДоговорКонтрагента.Владелец) КАК ЗаказыПокупателей
	             |			
	             |			СГРУППИРОВАТЬ ПО
	             |				ЗаказыПокупателей.Номенклатура,
	             |				ЗаказыПокупателей.ДоговорКонтрагентаВладелец) КАК Б
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			Б.Номенклатура,
	             |			Б.Контрагент) КАК А
	             |		ПО НевыполненныйСезонныйПокупателя.Номенклатура = А.Номенклатура
	             |			И НевыполненныйСезонныйПокупателя.Контрагент = А.Контрагент
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ЕСТЬNULL(НевыполненныйСезонныйПокупателя.Номенклатура, А.Номенклатура)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЕСТЬNULL(втОснова.Номенклатура, втАктуальныетовары.Номенклатура) КАК Номенклатура,
	             |	ЕСТЬNULL(втОснова.КоличествоОстаток, 0) КАК Остаток,
	             |	ЕСТЬNULL(втОснова.Заказано, 0) КАК Заказано,
	             |	ЕСТЬNULL(втОснова1.ЗаказаноИзСезона, 0) КАК ЗаказанноИзНСЗ,
	             |	ЕСТЬNULL(втОснова.ВПути, 0) КАК ВПути,
	             |	ЕСТЬNULL(втОснова.ВПроизводстве, 0) КАК ВПроизводстве,
	             |	ЕСТЬNULL(втОснова.НевыполненоСЗПокупателя, 0) КАК НевыполненСЗПокупателя,
	             |	ЕСТЬNULL(втОснова.Диаметр, втАктуальныетовары.Номенклатура.Типоразмер.Диаметр) КАК Диаметр,
	             |	ЕСТЬNULL(втОснова.Заказать, 0) КАК Заказать,
	             |	ЕСТЬNULL(втОснова.СвободныйОстаток, 0) КАК СвободныйОстаток,
	             |	ИСТИНА КАК Актуальная
	             |ПОМЕСТИТЬ втОснова2
	             |ИЗ
	             |	втАктуальныетовары КАК втАктуальныетовары
	             |		ПОЛНОЕ СОЕДИНЕНИЕ втОснова КАК втОснова
	             |			ЛЕВОЕ СОЕДИНЕНИЕ втОснова1 КАК втОснова1
	             |			ПО втОснова.Номенклатура = втОснова1.Номенклатура
	             |		ПО втАктуальныетовары.Номенклатура = втОснова.Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗакупкиОбороты.Номенклатура,
	             |	МАКСИМУМ(ЗакупкиОбороты.ПериодМинута) КАК ПериодМинута
	             |ПОМЕСТИТЬ ДатапоследнегоПрихода
	             |ИЗ
	             |	РегистрНакопления.Закупки.Обороты(
	             |			,
	             |			,
	             |			Авто,
	             |			Номенклатура В
	             |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |						втОснова2.Номенклатура
	             |					ИЗ
	             |						втОснова2 КАК втОснова2)
	             |				И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
	             |				И ДоговорКонтрагента.ВалютаВзаиморасчетов <> &Валюта
	             |				И ДоговорКонтрагента.ВЛаделец <> &РИО) КАК ЗакупкиОбороты
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ЗакупкиОбороты.Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ДатапоследнегоПрихода.Номенклатура,
	             |	ЗакупкиОбороты.ДоговорКонтрагента.Владелец
	             |ПОМЕСТИТЬ последнийПоставщик
	             |ИЗ
	             |	ДатапоследнегоПрихода КАК ДатапоследнегоПрихода
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки.Обороты(
	             |				,
	             |				,
	             |				Авто,
	             |				Номенклатура В
	             |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |							втОснова2.Номенклатура
	             |						ИЗ
	             |							втОснова2 КАК втОснова2)
	             |					И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
	             |					И ДоговорКонтрагента.ВалютаВзаиморасчетов <> &Валюта
	             |					И ДоговорКонтрагента.ВЛаделец <> &РИО) КАК ЗакупкиОбороты
	             |		ПО ДатапоследнегоПрихода.Номенклатура = ЗакупкиОбороты.Номенклатура
	             |			И ДатапоследнегоПрихода.ПериодМинута = ЗакупкиОбороты.ПериодМинута
	             |ГДЕ
	             |	ЗакупкиОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗначенияСвойствОбъектов.Объект,
	             |	ЗначенияСвойствОбъектов.Значение
	             |ПОМЕСТИТЬ Заводы
	             |ИЗ
	             |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	             |ГДЕ
	             |	ЗначенияСвойствОбъектов.Свойство = &Свойство
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗначенияСвойствОбъектов.Объект,
	             |	ЗначенияСвойствОбъектов.Значение
	             |ПОМЕСТИТЬ ПодЗаводы
	             |ИЗ
	             |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	             |ГДЕ
	             |	ЗначенияСвойствОбъектов.Свойство = &ПодЗавод
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втОснова2.Номенклатура.Код КАК Код,
	             |	втОснова2.Номенклатура КАК Номенклатура,
	             |	втОснова2.СвободныйОстаток + втОснова2.ЗаказанноИзНСЗ КАК СвободныйОстаток,
	             |	втОснова2.Остаток КАК Остаток,
	             |	втОснова2.Заказано КАК Заказано,
	             |	втОснова2.ЗаказанноИзНСЗ КАК ЗаказаноИзНСЗ,
	             |	втОснова2.ВПути КАК ВПути,
	             |	втОснова2.ВПроизводстве КАК ВПроизводстве,
	             |	ЕСТЬNULL(втТранзит.ВПутиВПроизводстве, 0) КАК ТранзитВПутиВПроизводстве,
	             |	втОснова2.НевыполненСЗПокупателя КАК НевыполненСЗПокупателя,
	             |	втОснова2.Диаметр,
	             |	втОснова2.Заказать КАК Заказать,
	             |	ВЫБОР
	             |		КОГДА Заводы.Значение ЕСТЬ NULL 
	             |			ТОГДА ""Неопределен""
	             |		ИНАЧЕ Заводы.Значение
	             |	КОНЕЦ КАК Поставщик,
	             |	втОснова2.Актуальная,
	             |	ПодЗаводы.Значение КАК ПодЗавод
	             |ИЗ
	             |	втОснова2 КАК втОснова2
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втТранзит КАК втТранзит
	             |		ПО втОснова2.Номенклатура = втТранзит.Номенклатура
	             |		ЛЕВОЕ СОЕДИНЕНИЕ последнийПоставщик КАК последнийПоставщик
	             |		ПО втОснова2.Номенклатура = последнийПоставщик.Номенклатура
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СезонныйАссортимент КАК СезонныйАссортимент
	             |		ПО втОснова2.Номенклатура = СезонныйАссортимент.Номенклатура
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Заводы КАК Заводы
	             |		ПО втОснова2.Номенклатура = Заводы.Объект
	             |		ЛЕВОЕ СОЕДИНЕНИЕ ПодЗаводы КАК ПодЗаводы
	             |		ПО втОснова2.Номенклатура = ПодЗаводы.Объект
	             |ГДЕ
	             |	втОснова2.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	втОснова2.Номенклатура.Наименование
	             |ИТОГИ
	             |	СУММА(СвободныйОстаток),
	             |	СУММА(Остаток),
	             |	СУММА(Заказано),
	             |	СУММА(ВПути),
	             |	СУММА(ВПроизводстве),
	             |	СУММА(НевыполненСЗПокупателя),
	             |	СУММА(Заказать)
	             |ПО
	             |	Поставщик
	             |АВТОУПОРЯДОЧИВАНИЕ";
			 КонецЕсли;
			 
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход );
	Запрос.УстановитьПараметр("Диски",Справочники.Номенклатура.НайтиПоКоду("0001752"));
	Запрос.УстановитьПараметр("ГоловноеПодразделение",Справочники.Подразделения.НайтиПоКоду("00005"));
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	//Запрос.УстановитьПараметр("ТекДата",?(не ЗначениеЗаполнено(ДатаТек),ТекущаяДата(),КонецДня(ДатаТЕк)));
	Запрос.УстановитьПараметр("ПустаяДата", '00010101' );
	Запрос.УстановитьПараметр("ДатаКон",ДатаНевыполненныхСЗ);
	Запрос.УстановитьПараметр("Валюта",Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Завод для Терминала"));
	Запрос.УстановитьПараметр("ПодЗавод",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90249"));
	Запрос.УстановитьПараметр("Рио", Справочники.Контрагенты.НайтиПоКоду("93397") );
	Запрос.УстановитьПараметр("Freeman", Справочники.Контрагенты.НайтиПоКоду("91735") );
	Запрос.УстановитьПараметр("Zhungzou", Справочники.Контрагенты.НайтиПоКоду("93694") );
	Запрос.УстановитьПараметр("Код", Справочники.Контрагенты.НайтиПоКоду("9112914") );
	Рез=Запрос.Выполнить();
	тз=Рез.Выгрузить();
	тз.Очистить();
	ТЗДляЗаказа=тз.СкопироватьКолонки();//чтобы не описывать колонки тз
	
	
	ПоПоставщикам=Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЭлементыФормы.ПанельЗаводы.Страницы.Очистить();
	
	///////////////////////////////////// Транзитные контрагенты
	
	ЗапросТранзитные = Новый Запрос(						
										             "ВЫБРАТЬ
										             |	ВложенныйЗапрос.ЗаказПоставщикуГрузополучатель КАК Контрагент,
										             |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
										             |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ТранзитВПути, 0)) КАК ТранзитВПути,
										             |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ТранзитЗаказано, 0)) КАК ТранзитЗаказано,
										             |	МИНИМУМ(ВложенныйЗапрос.ДатаПервогоЗаказа) КАК ДатаПервогоЗаказа
										             |ИЗ
										             |	(ВЫБРАТЬ
										             |		ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
										             |		ВЫБОР
										             |			КОГДА ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) < 0
										             |				ТОГДА 0
										             |			ИНАЧЕ ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0)
										             |		КОНЕЦ КАК ТранзитВПути,
										             |		ЗаказыПоставщикамОстатки.ЗаказПоставщику.Грузополучатель КАК ЗаказПоставщикуГрузополучатель,
										             |		NULL КАК ТранзитЗаказано,
										             |		NULL КАК ДатаПервогоЗаказа
										             |	ИЗ
										             |		РегистрНакопления.ЗаказыПоставщикам.Остатки(&ТекДата, естьNull(Подразделение.ВЭД,ложь)=ложь) КАК ЗаказыПоставщикамОстатки
										             |	ГДЕ
										             |		ЗаказыПоставщикамОстатки.ЗаказПоставщику.Транзит = ИСТИНА
										             |		И ЗаказыПоставщикамОстатки.ЗаказПоставщику.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
										             |	
										             |	ОБЪЕДИНИТЬ ВСЕ
										             |	
										             |	ВЫБРАТЬ
										             |		ЗаказыПоставщикамСезонныеОбороты.Номенклатура,
										             |		NULL,
										             |		ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Грузополучатель,
										             |		ВЫБОР
										             |			КОГДА ЕСТЬNULL(ЗаказыПоставщикамСезонныеОбороты.КоличествоПриход, 0) < 0
										             |				ТОГДА 0
										             |			ИНАЧЕ ЕСТЬNULL(ЗаказыПоставщикамСезонныеОбороты.КоличествоПриход, 0)
										             |		КОНЕЦ,
										             |		ВложенныйЗапрос.ЗаказПоставщикуСезонныйДата
										             |	ИЗ
										             |		РегистрНакопления.ЗаказыПоставщикамСезонные.Обороты(, , , естьNull(Подразделение.ВЭД,ложь)=ложь) КАК ЗаказыПоставщикамСезонныеОбороты
										             |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
										             |				МИНИМУМ(ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Дата) КАК ЗаказПоставщикуСезонныйДата,
										             |				ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Грузополучатель КАК ЗаказПоставщикуСезонныйГрузополучатель
										             |			ИЗ
										             |				РегистрНакопления.ЗаказыПоставщикамСезонные.Обороты КАК ЗаказыПоставщикамСезонныеОбороты
										             |			ГДЕ
										             |				(ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата
										             |						ИЛИ ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.ДатаДействияПо = &ПустаяДата)
										             |				И ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Дата <= &ТекДата
										             |				И ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
										             |				И ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Транзит = ИСТИНА
										             |			
										             |			СГРУППИРОВАТЬ ПО
										             |				ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Грузополучатель) КАК ВложенныйЗапрос
										             |			ПО ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Грузополучатель = ВложенныйЗапрос.ЗаказПоставщикуСезонныйГрузополучатель
										             |	ГДЕ
										             |		ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Дата <= &ТекДата
										             |		И (ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата
										             |				ИЛИ ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.ДатаДействияПо = &ПустаяДата)
										             |		И ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Транзит = ИСТИНА
										             |		И ЗаказыПоставщикамСезонныеОбороты.ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК ВложенныйЗапрос
										             |ГДЕ
										             |	ВложенныйЗапрос.ДатаПервогоЗаказа <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
										             |
										             |СГРУППИРОВАТЬ ПО
										             |	ВложенныйЗапрос.Номенклатура,
										             |	ВложенныйЗапрос.ЗаказПоставщикуГрузополучатель
										             |
										             |УПОРЯДОЧИТЬ ПО
										             |	ДатаПервогоЗаказа,
										             |	Контрагент" );

									
	ЗапросТранзитные.УстановитьПараметр("ТекДата",ТекущаяДата());
	ЗапросТранзитные.УстановитьПараметр("ПустаяДата", '00010101' );
	//ЗапросТранзитные.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Завод"));
	ТаблицаТранзитных = ЗапросТранзитные.Выполнить().Выгрузить();
	
	КолонокСоздано=0;
	
	Пока ПоПоставщикам.Следующий() Цикл
		
		тз.Очистить();
		//ДобавимСтаницу
		ПоставщикБезСпецСимволов= УбратьСпецСимволы(Строка(Попоставщикам.Поставщик));
		НоваяСтраница=ЭлементыФормы.ПанельЗаводы.Страницы.Добавить("_"+ПоставщикБезСпецСимволов,ПоПоставщикам.поставщик,"_"+ПоставщикБезСпецСимволов);
		ЭлементыФормы.ПанельЗаводы.ТекущаяСтраница= НоваяСтраница;
		
		ТаблицаТаб=ЭлементыФормы.Добавить(тип("ТабличноеПоле"),"ТабПолеЗавод_"+ПоставщикБезСпецСимволов,истина,ЭлементыФормы.ПанельЗаводы);
		ТаблицаТаб.ТипЗначения=Новый ОписаниеТипов("ТаблицаЗначений");
		
		
		ТаблицаТаб.Верх = 30;
		ТаблицаТаб.Лево = 6;
		ТаблицаТаб.Ширина = ЭлементыФормы.ПанельЗаводы.Ширина - 14;
		ТаблицаТаб.Высота = ЭлементыФормы.ПанельЗаводы.Высота - 86;
		ТаблицаТаб.ТолькоПросмотр = Ложь;
		ТаблицаТаб.ИзменятьПорядокСтрок = Истина;
		ТаблицаТаб.ИзменятьСоставСтрок = Истина;
		ТаблицаТаб.Подвал=истина;
		ТаблицаТаб.УстановитьПривязку(ГраницаЭлементаУправления.Верх, ЭлементыФормы.КоманднаяПанель1, ГраницаЭлементаУправления.Верх);
		ТаблицаТаб.УстановитьПривязку(ГраницаЭлементаУправления.Низ, ЭлементыФормы.КоманднаяПанель1, ГраницаЭлементаУправления.Низ);
		ТаблицаТаб.УстановитьПривязку(ГраницаЭлементаУправления.Лево, ЭлементыФормы.КоманднаяПанель1, ГраницаЭлементаУправления.Лево);
		ТаблицаТаб.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭлементыФормы.КоманднаяПанель1, ГраницаЭлементаУправления.Право);
		
		ТаблицаТаб.УстановитьДействие("Выбор",Новый Действие("ОбработкаВыбораТЗ"));
		
		Детально=ПоПоставщикам.Выбрать();
		
		МассивКолонокДляОбхода = новый Массив;
		Пока Детально.Следующий() Цикл
			нстр=тз.Добавить();
			ЗаполнитьЗначенияСвойств(нстр,Детально);
			РассчитатьЗаказ(нстр);
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",Детально.Номенклатура);
			МассивТранзитов = ТаблицаТранзитных.НайтиСтроки(Отбор);	
			ДобавитьНесуществующиеКолонки(ТЗДляЗаказа,МассивТранзитов,МассивКолонокДляОбхода);
			ДобавитьНесуществующиеКолонки(тз,МассивТранзитов,МассивКолонокДляОбхода);
			ЗаполнитьКоличествоВКолонках(нстр,МассивТранзитов);
		КонецЦикла;
		
		ТаблицаТаб.Значение = ТЗ.Скопировать();
		ТаблицаТаб.СоздатьКолонки();
		
//		ТаблицаТаб.Колонки.Завод.Видимость=ложь;
		ТаблицаТаб.Колонки.Диаметр.Видимость=ложь;
		ТаблицаТаб.Колонки.Поставщик.Видимость=ложь;
		ТаблицаТаб.Колонки.Актуальная.Видимость=ложь;
				
		ТаблицаТаб.Колонки.Номенклатура.Ширина=70;
		ТаблицаТаб.Колонки.Код.Ширина=10;

		ТаблицаТаб.Колонки.СвободныйОстаток.Ширина=10;
		ТаблицаТаб.Колонки.СвободныйОстаток.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.СвободныйОстаток.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		
		ТаблицаТаб.Колонки.Остаток.Ширина=10;
		ТаблицаТаб.Колонки.Остаток.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.Остаток.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		
		ТаблицаТаб.Колонки.Заказано.Ширина=10;
		ТаблицаТаб.Колонки.Заказано.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.Заказано.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		
		ТаблицаТаб.Колонки.ЗаказаноИзНСЗ.Ширина=14;
		ТаблицаТаб.Колонки.ЗаказаноИзНСЗ.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.ЗаказаноИзНСЗ.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		
		
		ТаблицаТаб.Колонки.ВПути.Ширина=10;
		ТаблицаТаб.Колонки.ВПути.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.ВПути.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		ТаблицаТаб.Колонки.ВПути.ТолькоПросмотр=истина;
		
		ТаблицаТаб.Колонки.ВПроизводстве.Ширина=10;
		ТаблицаТаб.Колонки.ВПроизводстве.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.ВПроизводстве.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		ТаблицаТаб.Колонки.ВПроизводстве.ТолькоПросмотр=истина;
		
		ТаблицаТаб.Колонки.НевыполненСЗПокупателя.Ширина=10;
		ТаблицаТаб.Колонки.НевыполненСЗПокупателя.ТолькоПросмотр=истина;
		
		ТаблицаТаб.Колонки.ТранзитВПутиВПроизводстве.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.ТранзитВПутиВПроизводстве.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		ТаблицаТаб.Колонки.ТранзитВПутиВПроизводстве.Ширина=10;
		ТаблицаТаб.Колонки.ТранзитВПутиВПроизводстве.ТолькоПросмотр=истина;


		ТаблицаТаб.Колонки.НевыполненСЗПокупателя.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.НевыполненСЗПокупателя.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		ТаблицаТаб.Колонки.Заказать.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.Заказать.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		
		Для каждого Колонка из ТаблицаТаб.Колонки Цикл 
			Если Найти(Колонка.имя,"Контрагент") <>0  Тогда  
				Колонка.ОтображатьИтогиВПодвале=истина;
				Колонка.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
				Колонка.ОтображатьИтогиВПодвале=истина;
				Колонка.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
				Колонка.ТекстШапки = ВернутьЗаголовок(Колонка.Имя);
			//	Колонка.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	ЭлементыФормы.ПанельЗаводы.Страницы.Удалить(0);
    ЭлементыФормы.КоманднаяПанель1.Кнопки.кнАнализ.Доступность=истина;
	ЭлементыФормы.КоманднаяПанель1.Кнопки.кнСформироватьЗаказы.Доступность=истина;
КонецПроцедуры

Процедура КоманднаяПанель1Анализ(Кнопка)
	ТЗДляЗаказа.Очистить();
	Для каждого страница из ЭлементыФормы.ПанельЗаводы.Страницы Цикл
		Источник=ЭлементыФормы["ТабПолеЗавод"+страница.Имя].Значение;
		ЗагрузитьВТаблицуЗначений(источник,ТЗДляЗаказа);
	КонецЦикла;
	
	ФормаО=ПолучитьФорму("ФормаОтчета");
	ФормаО.ТЗ=ТЗДляЗаказа;
	ФормаО.Открыть();
КонецПроцедуры

Процедура ПриОткрытии()
		ДатаНевыполненныхСЗ=ТекущаяДата();
		ЭлементыФормы.ПанельЗаводы.Страницы.Удалить(0);
		ЭлементыФормы.КоманднаяПанель1.Кнопки.кнАнализ.Доступность=ложь;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.кнСформироватьЗаказы.Доступность=ложь;
		МинЗаказ1315=80;
		МинЗаказ1622=60;
		флПоЗаводам=истина;
		НеНулевая=ложь;
		ДатаТЕк = ТекущаяДата();
КонецПроцедуры
	
процедура ОбработкаВыбораТЗ(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка) экспорт
	
	Если Колонка=Элемент.Колонки.НевыполненСЗПокупателя тогда
		
		Запрос = новый Запрос;
		
		Макет = ПолучитьМакет("Макет");
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателяСезонныйТовары.Номенклатура,
		|	СУММА(ЗаказПокупателяСезонныйТовары.Количество) КАК Количество,
		|	ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент,
		|	ЗаказПокупателяСезонныйТовары.Ссылка.Дата КАК Дата,
		|	ЗаказПокупателяСезонныйТовары.Ссылка
		|ПОМЕСТИТЬ ЗаказыСезонные
		|ИЗ
		|	Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПокупателяСезонныйТовары
		|ГДЕ
		|	ЗаказПокупателяСезонныйТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И НЕ ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.Пустаяссылка)
		|	И КОНЕЦПЕРИОДА(ЗаказПокупателяСезонныйТовары.Ссылка.ДатаДействияПо, ДЕНЬ) >= &ДатаКон
		|	И НЕ ЗаказПокупателяСезонныйТовары.Ссылка.ДатаДействияПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|   И естьNull(ЗаказПокупателяСезонныйТовары.Ссылка.Подразделение.ВЭД,ЛОЖЬ)=ЛОЖЬ
		|	И ЗаказПокупателяСезонныйТовары.Номенклатура = &Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяСезонныйТовары.Номенклатура,
		|	ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент,
		|	ЗаказПокупателяСезонныйТовары.Ссылка,
		|	ЗаказПокупателяСезонныйТовары.Ссылка.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыСезонные.Номенклатура,
		|	СУММА(ЗаказыСезонные.Количество) КАК Количество,
		|	ЗаказыСезонные.Контрагент,
		|	МИНИМУМ(ЗаказыСезонные.Дата) КАК Дата
		|ПОМЕСТИТЬ втЗаказыСезонные2
		|ИЗ
		|	ЗаказыСезонные КАК ЗаказыСезонные
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыСезонные.Номенклатура,
		|	ЗаказыСезонные.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ПродажиОбороты.ДоговорКонтрагента.Владелец, втЗаказыСезонные2.Контрагент) КАК Контрагент,
		|	ЕСТЬNULL(ПродажиОбороты.Номенклатура, втЗаказыСезонные2.Номенклатура) КАК Номенклатура,
		|	СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК ПродажиКоличество,
		|	МАКСИМУМ(втЗаказыСезонные2.Количество) КАК ЗаказыКоличество,
		|	втЗаказыСезонные2.Контрагент.ОсновнойМенеджерКонтрагента КАК Менеджер
		|ПОМЕСТИТЬ втОснова
		|ИЗ
		|	втЗаказыСезонные2 КАК втЗаказыСезонные2
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(, &ДатаКон, , Номенклатура = &Номенклатура и естьNull(Подразделение.ВЭД,Ложь) = Ложь) КАК ПродажиОбороты
		|		ПО (ПродажиОбороты.ДоговорКонтрагента.Владелец = втЗаказыСезонные2.Контрагент)
		|			И (ПродажиОбороты.Номенклатура = втЗаказыСезонные2.Номенклатура)
		|			И втЗаказыСезонные2.Дата <= ПродажиОбороты.ДокументПродажи.Дата
		|
		|СГРУППИРОВАТЬ ПО
		|	втЗаказыСезонные2.Контрагент.ОсновнойМенеджерКонтрагента,
		|	ЕСТЬNULL(ПродажиОбороты.ДоговорКонтрагента.Владелец, втЗаказыСезонные2.Контрагент),
		|	ЕСТЬNULL(ПродажиОбороты.Номенклатура, втЗаказыСезонные2.Номенклатура)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОснова.Контрагент КАК Контрагент,
		|	втОснова.Номенклатура,
		|	МАКСИМУМ(втОснова.ПродажиКоличество) КАК ПродажиКоличество,
		|	МАКСИМУМ(ЗаказыСезонные.Количество) КАК ЗаказыКоличество,
		|	втОснова.Менеджер,
		|	ЗаказыСезонные.Ссылка КАК ЗаказСезонный
		|ИЗ
		|	втОснова КАК втОснова
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказыСезонные КАК ЗаказыСезонные
		|		ПО втОснова.Контрагент = ЗаказыСезонные.Контрагент
		|			И втОснова.Номенклатура = ЗаказыСезонные.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	втОснова.Номенклатура,
		|	втОснова.Контрагент,
		|	втОснова.Менеджер,
		|	ЗаказыСезонные.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Контрагент
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("ДатаКон", ДатаНевыполненныхСЗ);
		Запрос.УстановитьПараметр("Номенклатура", ВыбраннаяСтрока.Номенклатура);
		
		Результат = Запрос.Выполнить();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		ТабДок=новый табличныйДокумент;
		ТабДок.Очистить();
		ОбластьЗаголовок.Параметры.Номенклатура=ВыбраннаяСтрока.Номенклатура;
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ОбластьДетальныхЗаписей.Параметры.НевыбраноКоличество=ВыборкаДетальныеЗаписи.ЗаказыКоличество-ВыборкаДетальныеЗаписи.ПродажиКоличество;
			Если ВыборкаДетальныеЗаписи.ЗаказыКоличество-ВыборкаДетальныеЗаписи.ПродажиКоличество<>0 тогда
				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
			КонецЕсли;
		КонецЦикла;
		
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		ТабДок.Вывести(ОбластьПодвалТаблицы);
		ТабДок.Вывести(ОбластьПодвал);
		ТабДок.ТолькоПросмотр=Истина;
		ТабДок.Показать();
	ИначеЕсли Колонка=Элемент.Колонки.ТранзитВПутиВПроизводстве тогда
		
		Макет = ПолучитьМакет("МакетТранзит");
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамСезонные.ЗаказПоставщикуСезонный.Грузополучатель КАК Контрагент,
		|	ЗаказыПоставщикамСезонные.Номенклатура КАК Номенклатура,
		|	ЗаказыПоставщикамСезонные.ЗаказПоставщикуСезонный.Грузополучатель.ОсновнойМенеджерКонтрагента КАК ОтветственноеЛицо,
		|	ЗаказыПоставщикамСезонные.ЗаказПоставщикуСезонный,
		|	ВЫБОР
		|		КОГДА ЗаказыПоставщикамСезонные.ВидДвижения = &Приход
		|			ТОГДА ЗаказыПоставщикамСезонные.Количество
		|		ИНАЧЕ -ЗаказыПоставщикамСезонные.Количество
		|	КОНЕЦ КАК ВПроизводстве,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0)
		|	КОНЕЦ КАК ВПути,
		|	ВЫБОР
		|		КОГДА ЗаказыПоставщикамСезонные.ВидДвижения = &Приход
		|			ТОГДА ЗаказыПоставщикамСезонные.Количество
		|		ИНАЧЕ -ЗаказыПоставщикамСезонные.Количество
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0)
		|	КОНЕЦ КАК ВПутиВПроизводстве
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикамСезонные КАК ЗаказыПоставщикамСезонные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(, естьNull(Подразделение.ВЭД,ЛОЖЬ)=ЛОЖЬ) КАК ЗаказыПоставщикамОстатки
		|		ПО ЗаказыПоставщикамСезонные.Регистратор = ЗаказыПоставщикамОстатки.ЗаказПоставщику
		|			И ЗаказыПоставщикамСезонные.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
		|ГДЕ
		|	ЗаказыПоставщикамСезонные.ЗаказПоставщикуСезонный.Дата <= &ТекДата
		|	И (ЗаказыПоставщикамСезонные.ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата
		|			ИЛИ ЗаказыПоставщикамСезонные.ЗаказПоставщикуСезонный.ДатаДействияПо = &ПустаяДата)
		|	И ЗаказыПоставщикамСезонные.ЗаказПоставщикуСезонный.Транзит = ИСТИНА
		|   И естьNull(ЗаказыПоставщикамСезонные.ЗаказПоставщикуСезонный.Подразделение.ВЭД,ЛОЖЬ)=ЛОЖЬ
		|	И ЗаказыПоставщикамСезонные.ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|	И ЗаказыПоставщикамСезонные.Номенклатура = &Номенклатура";
		
		Запрос.УстановитьПараметр("Номенклатура", ВыбраннаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход );
		Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
		Запрос.УстановитьПараметр("ПустаяДата", '00010101' );
		
		
		Результат = Запрос.Выполнить();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		ТабДок=Новый табличныйДокумент;
		ТабДок.Очистить();
		ОбластьЗаголовок.Параметры.Номенклатура=ВыбраннаяСтрока.Номенклатура;
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		КонецЦикла;
		
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		ТабДок.Вывести(ОбластьПодвалТаблицы);
		ТабДок.Вывести(ОбластьПодвал);
		ТабДок.ТолькоПросмотр=Истина;
		ТабДок.Показать();
	ИначеЕсли Колонка=Элемент.Колонки.ВПути тогда
		Макет = ПолучитьМакет("МакетВПути");
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступления,
		|	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		|	СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК ВПути
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|			,
		|			НЕ ЗаказПоставщику.Транзит
		|               И естьNull(Подразделение.ВЭД,ЛОЖЬ)=ЛОЖЬ
		|				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		|				И (ЗаказПоставщику.Подразделение = &ГоловноеПодразделение
		|					ИЛИ ЗаказПоставщику.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяССылка))
		|				И (ЗаказПоставщику.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
		|					ИЛИ ЗаказПоставщику.ДатаПоступления >= &ТекДата)
		|				И Номенклатура = &Номенклатура) КАК ЗаказыПоставщикамОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамОстатки.Номенклатура,
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления";
		Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
		Запрос.УстановитьПараметр("ГоловноеПодразделение",Справочники.Подразделения.НайтиПоКоду("00005"));
		Запрос.УстановитьПараметр("Номенклатура",ВыбраннаяСтрока.Номенклатура);
		
		Результат = Запрос.Выполнить();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		ТабДок=Новый табличныйДокумент;
		ТабДок.Очистить();
		ОбластьЗаголовок.Параметры.Номенклатура=ВыбраннаяСтрока.Номенклатура;
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		КонецЦикла;
		
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		ТабДок.Вывести(ОбластьПодвалТаблицы);
		ТабДок.Вывести(ОбластьПодвал);
		ТабДок.ТолькоПросмотр=Истина;
		ТабДок.Показать();
	ИначеЕсли Колонка=Элемент.Колонки.ВПроизводстве тогда
		Макет = ПолучитьМакет("МакетВПроизводстве");
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
		             |	СУММА(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток) КАК ВПроизводстве,
		             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный,
		             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо КАК ДатаДействияПо
		             |ИЗ
		             |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
		             |			,
		             |			Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
					 |              И естьNull(Подразделение.ВЭД,ЛОЖЬ)=ЛОЖЬ
		             |				И НЕ ЗаказПоставщикуСезонный.Транзит
		             |				И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата
		             |				И (ЗаказПоставщикуСезонный.Подразделение = &ГоловноеПодразделение
		             |					ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяССылка))
		             |				И Номенклатура = &Номенклатура) КАК ЗаказыПоставщикамСезонныеОстатки
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
		             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный,
		             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо";
		Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
		Запрос.УстановитьПараметр("ГоловноеПодразделение",Справочники.Подразделения.НайтиПоКоду("00005"));
		Запрос.УстановитьПараметр("Номенклатура",ВыбраннаяСтрока.Номенклатура);
		
		Результат = Запрос.Выполнить();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		ТабДок=Новый табличныйДокумент;
		ТабДок.Очистить();
		ОбластьЗаголовок.Параметры.Номенклатура=ВыбраннаяСтрока.Номенклатура;
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		КонецЦикла;
		
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		ТабДок.Вывести(ОбластьПодвалТаблицы);
		ТабДок.Вывести(ОбластьПодвал);
		ТабДок.ТолькоПросмотр=Истина;
		ТабДок.Показать();
	
	КонецЕсли;
КонецПроцедуры

Процедура РассчитатьЗаказ(нстр)
	ПроизводителиИсключение = Новый СписокЗначений();
	ПроизводителиИсключение.Добавить(Справочники.Производители.НайтиПоКоду("3657"));//VISSOL
	ПроизводителиИсключение.Добавить(Справочники.Производители.НайтиПоКоду("3654"));//HARP
	ПроизводителиИсключение.Добавить(Справочники.Производители.НайтиПоКоду("3656"));//BUFFALO
	
	//Если нстр.Номенклатура.Код = "9099805" Тогда
	//К=1;	
	//	
	//конецЕсли;	
	ДляЗаказа=нстр.НевыполненСЗПокупателя- нстр.СвободныйОстаток-нстр.ВПути-нстр.ВПроизводстве-нстр.ТранзитВПутиВПроизводстве;
	ЗаказыватьТочно = Ложь;
	НоменклатураН = нстр.Номенклатура;
	Попытка 
		СтрокаН = СписокТоваровТочноЗаказывать.Найти(НоменклатураН,"Номенклатура");
	Исключение
		СтрокаН = неопределено;
	КонецПопытки;
	
	Если ЗначениеЗаполнено(СтрокаН) Тогда 
		ЗаказыватьТочно = Истина;
	Иначе 
		ЗаказыватьТочно = Ложь;
	КонецЕсли;
	
	если ДляЗаказа>0 и ЗаказыватьТочно тогда
		//Для литья кратно 20, для штамповки кратно 100  , для исключений как есть
		Если ПроизводителиИсключение.НайтиПоЗначению(Нстр.Номенклатура.Производитель)<> Неопределено Тогда
		    нстр.Заказать = ДляЗаказа;
		ИначеЕсли Нстр.номенклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026") Тогда //литые
			К = ?( Цел(ДляЗаказа/20)=(ДляЗаказа/20),0,1);
			нстр.Заказать= (Цел(ДляЗаказа/20)+К)*20;	
			Если нстр.Заказать <МинЗаказЛитье Тогда
			нстр.Заказать = МинЗаказЛитье;
			конецЕсли;
		ИначеЕсли Нстр.номенклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049") Тогда // штамповка 	
			К = ?( Цел(ДляЗаказа/100)=(ДляЗаказа/100),0,1);
			нстр.Заказать= (Цел(ДляЗаказа/100)+К)*100;
			Если нстр.Заказать <МинЗаказШтамп Тогда
			нстр.Заказать = МинЗаказШтамп;
			конецЕсли;
		иначе
			нстр.Заказать= ДляЗаказа;
		конецЕсли;
		
		//Попытка 
		//	Диаметр=Число(нстр.Диаметр);
		//Исключение
		//	Диаметр=0;
		//Конецпопытки;
		//Если Диаметр>=13 и Диаметр <=15 тогда
		//	Если нстр.Заказать<МинЗаказ1315 тогда
		//		нстр.Заказать= МинЗаказ1315;
		//	КонецЕсли;
		//ИначеЕсли Диаметр>=16 и Диаметр <=22 тогда
		//	Если нстр.Заказать<МинЗаказ1622 тогда
		//		нстр.Заказать= МинЗаказ1622;
		//	КонецЕсли;
		//КонецЕсли;
		
	Иначе
		нстр.Заказать=0;
	КонецЕсли;
	
	Если (не ЗаказыватьТочно) и ДляЗаказа>0 Тогда
		
		
		//Для литья кратно 20, для штамповки кратно 100, для исключения как есть
		Если ПроизводителиИсключение.НайтиПоЗначению(Нстр.Номенклатура.Производитель)<> Неопределено Тогда
		    нстр.Заказать = ДляЗаказа;
		ИначеЕсли Нстр.номенклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026") Тогда //литые
			К = ?( Цел(ДляЗаказа/20)=(ДляЗаказа/20),0,1);
			нстр.Заказать= (Цел(ДляЗаказа/20)+К)*20;	
			Если нстр.Заказать <МинЗаказЛитье Тогда
			нстр.Заказать = МинЗаказЛитье;
			конецЕсли;
		ИначеЕсли Нстр.номенклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049") Тогда // штамповка 	
			К = ?( Цел(ДляЗаказа/100)=(ДляЗаказа/100),0,1);
			нстр.Заказать= (Цел(ДляЗаказа/100)+К)*100;
			Если нстр.Заказать <МинЗаказШтамп Тогда
			нстр.Заказать = МинЗаказШтамп;
			конецЕсли;
		иначе
			нстр.Заказать= ДляЗаказа;
		конецЕсли;
		 Если нстр.Заказать-ДляЗаказа > МаксСвобОст Тогда
		   //нстр.Заказать= 0;
		   	Если ПроизводителиИсключение.НайтиПоЗначению(Нстр.Номенклатура.Производитель)<> Неопределено Тогда
		    нстр.Заказать = ДляЗаказа;

		   	ИначеЕсли Нстр.номенклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026") Тогда //литые
			нстр.Заказать= нстр.Заказать-20;	
			Если нстр.Заказать <МинЗаказЛитье Тогда
			нстр.Заказать = 0;
			конецЕсли;
		    ИначеЕсли Нстр.номенклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049") Тогда // штамповка 	
			нстр.Заказать= нстр.Заказать-100;
			Если нстр.Заказать <МинЗаказШтамп Тогда
			нстр.Заказать = 0;
			конецЕсли;
           КонецЕсли;
		   
		   
		   
		 конецЕсли;
		//Если нстр.Актуальная и МаксСвобОст>0 тогда
		//	Диаметр=Число(нстр.Диаметр);
		//	МинЗаказ= 0;
		//	
		//	//Если Диаметр>=13 и Диаметр <=15 тогда
		//	//	МинЗаказ= МинЗаказ1315;
		//	//КонецЕсли;
		//	//
		//	//Если Диаметр>=16 и Диаметр <=22 тогда
		//	//	МинЗаказ= МинЗаказ1622;
		//	//КонецЕсли;
		//	
		//	Если (нстр.Заказать=МинЗаказ и минзаказ<>0) Тогда 
		//		// Заказано по минимуму, тут проверяем 
		//		Если (Минзаказ + нстр.СвободныйОстаток+нстр.ВПути+нстр.ВПроизводстве+нстр.ТранзитВПутиВПроизводстве-нстр.НевыполненСЗПокупателя)>МаксСвобОст Тогда 
		//			нстр.заказать=0;					
		//		КонецЕсли;
		//	КонецЕсли;
		//	//Если Диаметр>=13 и Диаметр <=15 тогда
		//	//	Если ДляЗаказа<МинЗаказ1315 тогда
		//	//		нстр.Заказать= МинЗаказ1315;
		//	//	КонецЕсли;
		//	//ИначеЕсли Диаметр>=16 и Диаметр <=22 тогда
		//	//	Если ДляЗаказа<МинЗаказ1622 тогда
		//	//		нстр.Заказать= МинЗаказ1622;
		//	//	КонецЕсли;
		//	//КонецЕсли;
		//КонецЕсли;
	КонецЕсли;	
	
	//Последняя процедура 
	//Если (ЗаказыватьТочно) и (нстр.СвободныйОстаток>нстр.Заказано) Тогда 
	//	нстр.заказать=0;
	//КонецЕсли;
КонецПроцедуры

Процедура МинЗаказ1315ПриИзменении(Элемент)
	ПересчитатьДляЗаказа();
КонецПроцедуры

Процедура ПересчитатьДляЗаказа()
	Если ЭлементыФормы.ПанельЗаводы.Страницы[0].Имя<>"" тогда
		Для каждого страница из ЭлементыФормы.ПанельЗаводы.Страницы Цикл
			тз=ЭлементыФормы["ТабПолеЗавод"+страница.Имя].Значение;
			МассивНулевых = новый массив;
			Для Каждого стр из тз цикл
				РассчитатьЗаказ(стр);
				Если УбратьНулевые И стр.заказать=0 Тогда 
					МассивНулевых.Добавить(стр);
				Конецесли;
			КонецЦикла;
			Для каждого эл из МассивНулевых Цикл
				тз.удалить(эл);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура МинЗаказ1622ПриИзменении(Элемент)
	ПересчитатьДляЗаказа();
КонецПроцедуры

Процедура МинСвобОстПриИзменении(Элемент)
	СформироватьСтраницы();
	Если  (МаксСвобОст<>0) тогда
		ПересчитатьДляЗаказа();
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1кнСформироватьЗаказы(Кнопка)
	Ответ= Вопрос("Сформировать заказы поставщикам сезонные?",РежимДиалогаВопрос.ДаНет);
	Если Ответ=КодВозвратаДиалога.Да тогда
		ТекстПисьма="";
		ТЗДляЗаказа.Очистить();
		Для каждого страница из ЭлементыФормы.ПанельЗаводы.Страницы Цикл
			Источник=ЭлементыФормы["ТабПолеЗавод"+страница.Имя].Значение;
			ЗагрузитьВТаблицуЗначений(источник,ТЗДляЗаказа);
		КонецЦикла;
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	Общая.Номенклатура,
		|	Общая.Поставщик,
		|	Общая.Заказать
		|ПОМЕСТИТЬ втОбщая
		|ИЗ
		|	&Общая КАК Общая
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбщая.Номенклатура,
		|	втОбщая.Поставщик КАК Поставщик,
		|	втОбщая.Заказать
		|ИЗ
		|	втОбщая КАК втОбщая
		|ИТОГИ ПО
		|	Поставщик";
		Запрос.УстановитьПараметр("Общая",ТЗДляЗаказа);				 
		ПоПоставщикам=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ПоПоставщикам.Следующий() Цикл
			ДокСезонныйЗаказ=Документы.ЗаказПоставщикуСезонный.СоздатьДокумент();
			ДокСезонныйЗаказ.Дата=ТекущаяДата();
			ДокСезонныйЗаказ.Комментарий="Сформирован обработкой";
			ДокСезонныйЗаказ.Организация=Справочники.Организации.НайтиПоКоду("00001");
			ДокСезонныйЗаказ.Контрагент=ПоПоставщикам.Поставщик;
			Товары=ДокСезонныйЗаказ.Товары;
			Детали=ПоПоставщикам.Выбрать();
			Пока Детали.Следующий() Цикл
				Если Детали.Заказать>0 тогда
					нстр=Товары.Добавить();
					нстр.Номенклатура=Детали.Номенклатура;
					нстр.Количество=Детали.Заказать;
					ПриИзмененииНоменклатурыТабЧасти(нстр, ДокСезонныйЗаказ);
					
					нстр.ЕдиницаИзмерения = нстр.Номенклатура.ЕдиницаХраненияОстатков;
					нстр.Коэффициент      = нстр.ЕдиницаИзмерения.Коэффициент;
					нстр.Цена = 0;
					нстр.СтавкаНДС=перечисления.СтавкиНДС.БезНДС;
				КонецЕсли;
			КонецЦикла;
			ДокСезонныйЗаказ.Записать();
			ТекстПисьма=ТекстПисьма+"
			|"+ДокСезонныйЗаказ;
		КонецЦикла;		
		СоздатьСообщениеДляВЭД(ТекстПисьма);
		Сообщить("Заказы сформированы.");
	КонецЕсли;
КонецПроцедуры

процедура СоздатьСообщениеДляВЭД(ТекстПисьма)
	//
	ДокСобытие=Документы.Событие.СоздатьДокумент();
		ДокСобытие.ТипСобытия=Перечисления.ВходящееИсходящееСобытие.Входящее;
		ДокСобытие.ВидСобытия=Перечисления.ВидыСобытий.Прочее;
		ДокСобытие.ВидОбъекта=Перечисления.ВидыОбъектовСобытия.Контрагент;
		ДокСобытие.ВидОбъекта=Перечисления.ВидыОбъектовСобытия.ПрочиеКонтактныеЛица;
		//ДокСобытие.Контрагент=ДокументПоступления.Грузополучатель;
		//ДокСобытие.Основание=ДокументПоступления;
		ДокСобытие.Важность=Перечисления.Важность.Высокая;
		ДокСобытие.СостояниеСобытия=Перечисления.СостоянияСобытий.Запланировано;
		ДокСобытие.НапомнитьОСобытии=Истина;
		ДокСобытие.ВремяНапоминания=НачалоДня(ТекущаяДата())+28830;//8 утра
		ДокСобытие.Дата=ТекущаяДата();
		ДокСобытие.НачалоСобытия=НачалоДня(ТекущаяДата())+28800;//8 утра
		//ДокСобытие.ОкончаниеСобытия=КонецДня(ТекущаяДата())+5*24*60*60;//
		ДокСобытие.ОписаниеСобытия="Созданы заказы поставщикам сезонные.";
		ДокСобытие.СодержаниеСобытия=ТекстПисьма;
		ДокСобытие.Ответственный=Справочники.Пользователи.НайтиПоНаименованию("Серебренникова Анна Александровна");
		ДокСобытие.Записать(РежимЗаписиДокумента.Проведение);

	//
	
	
        Профиль = Новый ИнтернетПочтовыйПрофиль;
		Профиль.АдресСервераSMTP   = "mail.yst76.ru";
		Профиль.ПортSMTP		   = 25;
		Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
		Профиль.ПарольSMTP         = "";
		Профиль.ПользовательSMTP   = "";
		Письмо = Новый ИнтернетПочтовоеСообщение;
		Письмо.Отправитель = "no-reply@yst76.ru";
		
		Письмо.Получатели.Добавить("smirnov@yst.ru");
		Письмо.Получатели.Добавить("serebrennikovaa@mail.ru");
		
		Письмо.Тема = "Созданы заказы поставщикам сезонные.";
		Письмо.Тексты.Добавить(ТекстПисьма,ТипТекстаПочтовогоСообщения.ПростойТекст);
		Почта = Новый ИнтернетПочта;
		
		Попытка
			Почта.Подключиться(Профиль);
			Почта.Послать(Письмо);
			Почта.Отключиться();
		Исключение
			Попытка
				Пауза(20);
				Почта.Подключиться(Профиль);
				Почта.Послать(Письмо);
				Почта.Отключиться();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
		КонецПопытки;

	конецПроцедуры
	
Процедура Пауза(Сек)
	Попытка
		scr = Новый COMОбъект("WScript.Shell");
		scr.Run("sleep "+СокрЛП(Число(Сек)),0,1);
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура флПоЗаводамПриИзменении(Элемент)
	СформироватьСтраницы();
КонецПроцедуры

Процедура СформироватьСтраницы()
	попытка 
		ТЗДляЗаказа.Очистить();
	Исключение
		;
	Конецпопытки;
	
	Если (ТЗНенулевая<>Неопределено) Тогда 
		ТЗДляЗаказа = ТЗНенулевая.Скопировать();
	Иначе 
		Попытка 
			Для каждого страница из ЭлементыФормы.ПанельЗаводы.Страницы Цикл
				Источник=ЭлементыФормы["ТабПолеЗавод"+страница.Имя].Значение;
				ЗагрузитьВТаблицуЗначений(источник,ТЗДляЗаказа);
				
			КонецЦикла;
		Исключение
			возврат;
		КонецПопытки;
	КонецЕсли;	
	
	Если Ненулевая=ложь Тогда 
		ТЗНенулевая=ТЗДляЗаказа.Скопировать();
	КонецЕсли;	
	
	Если УбратьНулевые Тогда 
		НеНулевая=истина;
	Иначе 
		НеНулевая=ложь;
	КонецЕсли;
	
	Запрос=новый Запрос;
	Если Заводы=1 тогда
	//Запрос.Текст="ВЫБРАТЬ
	//			 //|	ТЗ.Завод,
	//			 |	ТЗ.Код,
	//			 |	ТЗ.Номенклатура,
	//			 |	ТЗ.СвободныйОстаток,
	//			 |	ТЗ.Остаток,
	//			 |	ТЗ.Заказано,
	//			 |	ТЗ.ВПути,
	//			 |	ТЗ.ВПроизводстве,
	//			 |	ТЗ.ТранзитВПутиВПроизводстве,
	//			 |	ТЗ.НевыполненСЗПокупателя,
	//			 |	ТЗ.Диаметр,
	//			 |	ТЗ.Заказать,
	//			 |	ТЗ.Поставщик,
	//			 |	ТЗ.Актуальная
	//			 |ПОМЕСТИТЬ втБезИтогов
	//			 |ИЗ
	//			 |	&тз КАК ТЗ
	//			 |;
	//			 |
	//			 |////////////////////////////////////////////////////////////////////////////////
	//			 |ВЫБРАТЬ
	//			 //|	втБезИтогов.Завод КАК Завод,
	//			 |	втБезИтогов.Код,
	//			 |	втБезИтогов.Номенклатура,
	//			 |	втБезИтогов.СвободныйОстаток,
	//			 |	втБезИтогов.Остаток,
	//			 |	втБезИтогов.Заказано,
	//			 |	втБезИтогов.ВПути,
	//			 |	втБезИтогов.ВПроизводстве,
	//			 |	втБезИтогов.ТранзитВПутиВПроизводстве,
	//			 |	втБезИтогов.НевыполненСЗПокупателя,
	//			 |	втБезИтогов.Диаметр,
	//			 |	втБезИтогов.Заказать,
	//			 |	втБезИтогов.Поставщик,
	//			 |	втБезИтогов.Актуальная
	//			 |ИЗ
	//			 |	втБезИтогов КАК втБезИтогов
	//			 |ИТОГИ ПО
	//			 |	Завод";
			 //иначеЕсли Заводы=0 Тогда 
		 	 Запрос.Текст="ВЫБРАТЬ
		 	              |	ТЗ.Код,
		 	              |	ТЗ.Номенклатура,
		 	              |	ТЗ.СвободныйОстаток,
		 	              |	ТЗ.Остаток,
		 	              |	ТЗ.Заказано,
		 	              |	ТЗ.ВПути,
		 	              |	ТЗ.ВПроизводстве,
		 	              |	ТЗ.ТранзитВПутиВПроизводстве,
		 	              |	ТЗ.НевыполненСЗПокупателя,
		 	              |	ТЗ.Диаметр,
		 	              |	ТЗ.Заказать,
		 	              |	ТЗ.Поставщик,
		 	              |	ТЗ.Актуальная
		 	              |ПОМЕСТИТЬ втБезИтогов
		 	              |ИЗ
		 	              |	&тз КАК ТЗ
		 	              |;
		 	              |
		 	              |////////////////////////////////////////////////////////////////////////////////
		 	              |ВЫБРАТЬ
		 	              |	""Общий"" КАК ИтоговоеПоле,
		 	              |	втБезИтогов.Код,
		 	              |	втБезИтогов.Номенклатура,
		 	              |	втБезИтогов.СвободныйОстаток,
		 	              |	втБезИтогов.Остаток,
		 	              |	втБезИтогов.Заказано,
		 	              |	втБезИтогов.ВПути,
		 	              |	втБезИтогов.ВПроизводстве,
		 	              |	втБезИтогов.ТранзитВПутиВПроизводстве,
		 	              |	втБезИтогов.НевыполненСЗПокупателя,
		 	              |	втБезИтогов.Диаметр,
		 	              |	втБезИтогов.Заказать,
		 	              |	втБезИтогов.Поставщик,
		 	              |	втБезИтогов.Актуальная
		 	              |ИЗ
		 	              |	втБезИтогов КАК втБезИтогов
		 	              |
		 	              |УПОРЯДОЧИТЬ ПО
		 	              |	втБезИтогов.Номенклатура
		 	              |ИТОГИ ПО
		 	              |	ИтоговоеПоле";
			 	Иначе 
				  Запрос.Текст="ВЫБРАТЬ
				               |	ТЗ.Код,
				               |	ТЗ.Номенклатура,
				               |	ТЗ.СвободныйОстаток,
				               |	ТЗ.Остаток,
				               |	ТЗ.Заказано,
				               |	ТЗ.ВПути,
				               |	ТЗ.ВПроизводстве,
				               |	ТЗ.ТранзитВПутиВПроизводстве,
				               |	ТЗ.НевыполненСЗПокупателя,
				               |	ТЗ.Диаметр,
				               |	ТЗ.Заказать,
				               |	ТЗ.Поставщик,
				               |	ТЗ.Актуальная
				               |ПОМЕСТИТЬ втБезИтогов
				               |ИЗ
				               |	&тз КАК ТЗ
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ВЫБОР
				               |		КОГДА втБезИтогов.Поставщик = &Пустой
				               |			ТОГДА ""Неопределен""
				               |		ИНАЧЕ втБезИтогов.Поставщик
				               |	КОНЕЦ КАК ИтоговоеПоле,
				               |	втБезИтогов.Код,
				               |	втБезИтогов.Номенклатура КАК Номенклатура,
				               |	втБезИтогов.СвободныйОстаток,
				               |	втБезИтогов.Остаток,
				               |	втБезИтогов.Заказано,
				               |	втБезИтогов.ВПути,
				               |	втБезИтогов.ВПроизводстве,
				               |	втБезИтогов.ТранзитВПутиВПроизводстве,
				               |	втБезИтогов.НевыполненСЗПокупателя,
				               |	втБезИтогов.Диаметр,
				               |	втБезИтогов.Заказать,
				               |	втБезИтогов.Поставщик,
				               |	втБезИтогов.Актуальная
				               |ИЗ
				               |	втБезИтогов КАК втБезИтогов
				               |
				               |УПОРЯДОЧИТЬ ПО
				               |	втБезИтогов.Номенклатура
				               |ИТОГИ ПО
				               |	ИтоговоеПоле";				 
				 КонецЕсли;
    Запрос.УстановитьПараметр("тз",ТЗДляЗаказа);
	Запрос.УстановитьПараметр("Пустой",Справочники.Контрагенты.ПустаяСсылка());
	
	Рез=Запрос.Выполнить();
	тз=ТЗДляЗаказа.Скопировать();
	тз.Очистить();
	тз=Рез.Выгрузить();
	тз.Очистить();
	ПоЗаводам=Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЭлементыФормы.ПанельЗаводы.Страницы.Очистить();
	Пока ПоЗаводам.Следующий() Цикл
		
		тз.Очистить();
		//ДобавимСтаницу
		//Если Заводы = 0 Тогда 
			ЗаводБезСпецСимволов= УбратьСпецСимволы(Строка(ПоЗаводам.Итоговоеполе));
		//иначе 
		//	ЗаводБезСпецСимволов= УбратьСпецСимволы(Строка(ПоЗаводам.Завод));
		//КонецЕсли;
		//Если Заводы=0 Тогда 
			НоваяСтраница=ЭлементыФормы.ПанельЗаводы.Страницы.Добавить("_"+ЗаводБезСпецСимволов,ПоЗаводам.Итоговоеполе,"_"+ЗаводБезСпецСимволов);
		//Иначе 
		//	НоваяСтраница=ЭлементыФормы.ПанельЗаводы.Страницы.Добавить("_"+ЗаводБезСпецСимволов,ПоЗаводам.Завод,"_"+ЗаводБезСпецСимволов);
		//КонецЕсли;
		ЭлементыФормы.ПанельЗаводы.ТекущаяСтраница= НоваяСтраница;
		
		ТаблицаТаб=ЭлементыФормы.Добавить(тип("ТабличноеПоле"),"ТабПолеЗавод_"+ЗаводБезСпецСимволов,истина,ЭлементыФормы.ПанельЗаводы);
		ТаблицаТаб.ТипЗначения=Новый ОписаниеТипов("ТаблицаЗначений");
		
		
		ТаблицаТаб.Верх = 30;
		ТаблицаТаб.Лево = 6;
		ТаблицаТаб.Ширина = ЭлементыФормы.ПанельЗаводы.Ширина - 14;
		ТаблицаТаб.Высота = ЭлементыФормы.ПанельЗаводы.Высота - 86;
		ТаблицаТаб.ТолькоПросмотр = Ложь;
		ТаблицаТаб.ИзменятьПорядокСтрок = Истина;
		ТаблицаТаб.ИзменятьСоставСтрок = Истина;
		ТаблицаТаб.Подвал=истина;
		ТаблицаТаб.УстановитьПривязку(ГраницаЭлементаУправления.Верх, ЭлементыФормы.КоманднаяПанель1, ГраницаЭлементаУправления.Верх);
		ТаблицаТаб.УстановитьПривязку(ГраницаЭлементаУправления.Низ, ЭлементыФормы.КоманднаяПанель1, ГраницаЭлементаУправления.Низ);
		ТаблицаТаб.УстановитьПривязку(ГраницаЭлементаУправления.Лево, ЭлементыФормы.КоманднаяПанель1, ГраницаЭлементаУправления.Лево);
		ТаблицаТаб.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭлементыФормы.КоманднаяПанель1, ГраницаЭлементаУправления.Право);
		
		ТаблицаТаб.УстановитьДействие("Выбор",Новый Действие("ОбработкаВыбораТЗ"));
		
		Детально=ПоЗаводам.Выбрать();
		
		Пока Детально.Следующий() Цикл
			Если (УбратьНулевые) и (Детально.Заказать=0) Тогда 
				Продолжить;
			КонецЕсли;	
			нстр=тз.Добавить();
			ЗаполнитьЗначенияСвойств(нстр,Детально);
			СтрокиК = ТЗДляЗаказа.найтиСтроки(Новый Структура("Номенклатура",Детально.номенклатура));
			ТекСтрока= СтрокиК[0];
			для каждого Колонка из  ТЗДляЗаказа.Колонки Цикл
				Если Найти(Колонка.Имя,"Контрагент")<> 0 Тогда
					Если ТЗ.Колонки.Найти(Колонка.Имя)= Неопределено Тогда
						Тз.Колонки.Добавить(Колонка.Имя);
					конецЕсли;	
					Если ТекСтрока[Колонка.Имя]<> Неопределено Тогда
					нстр[Колонка.Имя]=ТекСтрока[Колонка.Имя];
					конецЕсли;
				конецЕсли;	
			конецЦикла;
			//РассчитатьЗаказ(нстр);
		КонецЦикла;
		ТаблицаТаб.Значение = ТЗ.Скопировать();
		ТаблицаТаб.СоздатьКолонки();
		ТаблицаТаб.Значение.Сортировать("Номенклатура");

		Если Заводы<>0 тогда
			ТаблицаТаб.Колонки.ИтоговоеПоле.Видимость=ложь;
		КонецЕсли;
		
		//ТаблицаТаб.Колонки.Завод.Видимость=ложь;
		ТаблицаТаб.Колонки.Диаметр.Видимость=ложь;
		ТаблицаТаб.Колонки.Поставщик.Видимость=ложь;
		ТаблицаТаб.Колонки.Актуальная.Видимость=ложь;
				
		ТаблицаТаб.Колонки.Номенклатура.Ширина=70;
		ТаблицаТаб.Колонки.Код.Ширина=10;

		ТаблицаТаб.Колонки.СвободныйОстаток.Ширина=10;
		ТаблицаТаб.Колонки.СвободныйОстаток.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.СвободныйОстаток.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		
		ТаблицаТаб.Колонки.Остаток.Ширина=10;
		ТаблицаТаб.Колонки.Остаток.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.Остаток.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		
		ТаблицаТаб.Колонки.Заказано.Ширина=10;
		ТаблицаТаб.Колонки.Заказано.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.Заказано.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		
		ТаблицаТаб.Колонки.ВПути.Ширина=10;
		ТаблицаТаб.Колонки.ВПути.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.ВПути.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		ТаблицаТаб.Колонки.ВПути.ТолькоПросмотр=истина;
		
		ТаблицаТаб.Колонки.ВПроизводстве.Ширина=10;
		ТаблицаТаб.Колонки.ВПроизводстве.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.ВПроизводстве.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		ТаблицаТаб.Колонки.ВПроизводстве.ТолькоПросмотр=истина;
		
		ТаблицаТаб.Колонки.НевыполненСЗПокупателя.Ширина=10;
		ТаблицаТаб.Колонки.НевыполненСЗПокупателя.ТолькоПросмотр=истина;
		
		ТаблицаТаб.Колонки.ТранзитВПутиВПроизводстве.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.ТранзитВПутиВПроизводстве.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		ТаблицаТаб.Колонки.ТранзитВПутиВПроизводстве.Ширина=10;
		ТаблицаТаб.Колонки.ТранзитВПутиВПроизводстве.ТолькоПросмотр=истина;
		
		
		ТаблицаТаб.Колонки.НевыполненСЗПокупателя.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.НевыполненСЗПокупателя.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		ТаблицаТаб.Колонки.Заказать.ОтображатьИтогиВПодвале=истина;
		ТаблицаТаб.Колонки.Заказать.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
		
		Для каждого Колонка из ТаблицаТаб.Колонки Цикл 
			Если Найти(Колонка.имя,"Контрагент") <>0  Тогда  
				Колонка.ОтображатьИтогиВПодвале=истина;
				Колонка.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
				Колонка.ОтображатьИтогиВПодвале=истина;
				Колонка.ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
				Колонка.ТекстШапки = ВернутьЗаголовок(Колонка.Имя);
				//	Колонка.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;

		
	КонецЦикла;
	ЭлементыФормы.ПанельЗаводы.Страницы.Удалить(0);
    ЭлементыФормы.КоманднаяПанель1.Кнопки.кнАнализ.Доступность=истина;
	ЭлементыФормы.КоманднаяПанель1.Кнопки.кнСформироватьЗаказы.Доступность=истина;
КонецПроцедуры

Функция УбратьСпецСимволы(Стр)
	стр=СтрЗаменить(стр," ","");
	стр=СтрЗаменить(стр,".","");
	стр=СтрЗаменить(стр,",","");
	стр=СтрЗаменить(стр,"(","");
	стр=СтрЗаменить(стр,")","");
	стр=СтрЗаменить(стр,"№","");
	стр=СтрЗаменить(стр,"#","");
	стр=СтрЗаменить(стр,"&","");
	стр=СтрЗаменить(стр,"+","");
	стр=СтрЗаменить(стр,"-","");
	стр=СтрЗаменить(стр,"/","_");

	возврат стр;
КонецФункции

Процедура ЗаводыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	СформироватьСтраницы();
	Если  (МаксСвобОст<>0) тогда
		ПересчитатьДляЗаказа();
	КонецЕсли;
КонецПроцедуры

Процедура УбратьНулевыеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	СформироватьСтраницы();	
	Если (МаксСвобОст<>0) тогда
		ПересчитатьДляЗаказа();
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыВыгрузитьВЭксель(Кнопка)
	// Вставить содержимое обработчика.
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	Диалог = Новый ДиалогВыбораФайла(Режим);
	Диалог.ПолноеИмяФайла = "";
	Фильтр = "Файл данных (*.xls)|*.xls";
	Диалог.Фильтр = Фильтр;
	Диалог.Заголовок = "Выберите Каталог";
	Диалог.Выбрать();
	
	ПутьКФайлу=Диалог.ПолноеИмяФайла+".xls";
	
	Попытка
		Эксель = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщить(ОписаниеОшибки() + " Программа Exсel не установлена на данном компьютере!");
		Возврат;
	КонецПопытки; 
	
	Книга = Эксель.WorkBooks.Add();
	
//	ТЗДляЗаказа.Очистить();
	Для каждого страница из ЭлементыФормы.ПанельЗаводы.Страницы Цикл
		Если (страница.Имя="") Тогда 
			Продолжить;
		КонецЕсли;
		Лист = Книга.Sheets.Add();
		Если (Лев(СтрЗаменить(Страница.Имя,"_",""),31)="") Тогда 
			Лист.name="ЛистХ";
		Иначе 
			Лист.name=Лев(СтрЗаменить(Страница.Имя,"_",""),31);
		КонецЕсли;
		Источник=ЭлементыФормы["ТабПолеЗавод"+страница.Имя].Значение;
		
		НомерСтроки = 1;	
		Лист.Cells(НомерСтроки, 1).Value = "№п/п";
		Лист.Cells(НомерСтроки, 2).Value = "Код";
		Лист.Cells(НомерСтроки, 3).Value = "Наименование";
		Лист.Cells(НомерСтроки, 4).Value = "Свободный остаток";
		//Лист.Cells(НомерСтроки, 5).Value = "Остаток";
		//Лист.Cells(НомерСтроки, 6).Value = "Заказано";
		Лист.Cells(НомерСтроки, 5).Value = "В пути";
		Лист.Cells(НомерСтроки, 6).Value = "В производстве";
		Лист.Cells(НомерСтроки, 7).Value = "Транзит в пути и в производстве";
		Лист.Cells(НомерСтроки, 8).Value = "Невыполнен сз покупателя";
		Лист.Cells(НомерСтроки, 9).Value = "Заказать";
		
		Если (Источник.Колонки.Количество()>15) Тогда 
			Для й=16 по Источник.Колонки.Количество() Цикл
				Лист.Cells(НомерСтроки, й-6).Value = Строка(Справочники.Контрагенты.НайтиПоКоду(СтрЗаменить(Источник.Колонки.получить(й-1).Имя,"Контрагент","")));			
			КонецЦикла;
		КонецЕсли;
		
		Для каждого Строка из Источник Цикл
			НомерСтроки = НомерСтроки + 1;	
			Лист.Cells(НомерСтроки, 1).Value = НомерСтроки;
       		Лист.Cells(НомерСтроки, 2).Value = Строка.Код;
        	Лист.Cells(НомерСтроки, 3).Value= Строка.Номенклатура.наименование;
        	Лист.Cells(НомерСтроки, 4).Value = Строка.СвободныйОстаток;
			//Лист.Cells(НомерСтроки, 5).Value = Строка.Остаток;
			//Лист.Cells(НомерСтроки, 6).Value = Строка.Заказано;
        	Лист.Cells(НомерСтроки, 5).Value = Строка.ВПути;
       		Лист.Cells(НомерСтроки, 6).Value = Строка.Впроизводстве;
        	Лист.Cells(НомерСтроки, 7).Value = Строка.ТранзитВПутиВпроизводстве;
        	Лист.Cells(НомерСтроки, 8).Value = Строка.НевыполненСЗпокупателя;
			Лист.Cells(НомерСтроки, 9).Value = Строка.Заказать;
			
			Если (Источник.Колонки.Количество()>15) Тогда 
				Для й=16 по Источник.Колонки.Количество() Цикл
					Лист.Cells(НомерСтроки, й-6).Value = Строка(Строка[й-1]);			
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		
		//ЗагрузитьВТаблицуЗначений(источник,ТЗДляЗаказа);
	КонецЦикла;		
	
	Попытка
        Книга.SaveAs(ПутьКФайлу);
    Исключение
        Сообщить(ОписаниеОшибки()+" Файл не сохранен!");
    КонецПопытки;
    
    Эксель.Application.Quit();
	
КонецПроцедуры

Функция КоличествоКонтрагентов(МассивТранзитов)
	Количество=0;
	ТекКонтр=неопределено;
	Для каждого Эл из МассивТранзитов Цикл
		Если Эл.Контрагент<>Текконтр Тогда 
			Количество=Количество+1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Количество;
КонецФункции

Процедура ДобавитьНесуществующиеКолонки(тз,МассивТранзитов,МассивКолонокДляОбхода)
	
	МассивКонтрагентов = новый Массив;
	ТекущийКонтрагент=неопределено;
	Для каждого Эл из МассивТранзитов Цикл
		Если МассивКонтрагентов.Найти(Эл.Контрагент)<>Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		Если текущийконтрагент<>Эл.Контрагент Тогда 
			МассивКонтрагентов.Добавить(Эл.Контрагент);
			текущийконтрагент = Эл.Контрагент;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Эл из МассивКонтрагентов Цикл
		Если не НайтиКолонку(Эл.Код,тз) Тогда 
			попытка 
				тз.Колонки.Добавить("Контрагент"+СокрЛП(Эл.Код));
				МассивКолонокДляОбхода.Добавить("Контрагент"+СокрЛП(Эл.Код));
			Исключение
				;
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиКолонку(Код,тз)
	
	Для каждого Кол из ТЗ.колонки Цикл
		Если (Кол=код) Тогда 
			Возврат истина;
		КонецЕсли;
	КонеЦЦикла;
	
	Возврат ложь;
КонецФункции

Функция ЗаполнитьКоличествоВКолонках(нстр,МассивТранзитов)
	Если  нстр.Заказать>0 Тогда
		Заказано = нстр.Заказать;
		Для каждого Стрх из МассивТранзитов Цикл
			Если СтрХ.ТранзитЗаказано-СтрХ.ТранзитВПути>0 тогда
				Если Заказано>(СтрХ.ТранзитЗаказано-СтрХ.ТранзитВПути)Тогда
					нстр["Контрагент"+СокрЛП(Стрх.Контрагент.Код)] = СтрХ.ТранзитЗаказано-СтрХ.ТранзитВПути;
					Заказано = Заказано-(СтрХ.ТранзитЗаказано-СтрХ.ТранзитВПути);
				иначе
					нстр["Контрагент"+СокрЛП(Стрх.Контрагент.Код)] = Заказано;
					Заказано = 0;
				конецЕсли;	
			иначе
				нстр["Контрагент"+СокрЛП(Стрх.Контрагент.Код)] = 0;
			конецЕсли;
		КонецЦикла;
	конецЕсли;
КонецФункции

Функция ВернутьЗаголовок(Имя)
	Код = СтрЗаменить(Имя,"Контрагент","");
	Контрагент = Справочники.Контрагенты.НайтиПоКоду(Код);
	Если не ЗначениеЗаполнено(Контрагент) Тогда 
		Контрагент = Справочники.Контрагенты.НайтиПоКоду(Код+" ");
		Если не ЗначениеЗаполнено(Контрагент) Тогда 
			Контрагент = Справочники.Контрагенты.НайтиПоКоду(Код+"  ");
		Конецесли
	Конецесли;
	
	Если не ЗначениеЗаполнено(Контрагент) Тогда 
		Возврат "Неизвестный контрагент";
	Иначе 
		Возврат Контрагент.Наименование;
	КонецЕсли;
КонецФункции

Процедура ВыборЗаказовНажатие(Элемент)
	// Вставить содержимое обработчика.
	Форма = ПолучитьФорму("ФормаМультиВыбораСезонногоЗаказаПокупателя");
	Если ЗначениеЗаполнено(СписокЗаказовТочноЗаказывать) Тогда 
		Форма.СписокЗаказов = СписокЗаказовТочноЗаказывать;
	КонецЕсли;
	СписокЗаказовТочноЗаказывать = Форма.ОткрытьМодально();
	Если ЗначениеЗаполнено(СписокЗаказовТочноЗаказывать) Тогда 
		Если СписокЗаказовТочноЗаказывать.Количество()>0 Тогда 
			Для каждого СтрХ из СписокЗаказовТочноЗаказывать Цикл
				Для каждого СтрХХ из СтрХ.Ссылка.товары Цикл
					СтрУ = СписокТоваровТочноЗаказывать.добавить();
					СтрУ.Номенклатура = СтрХХ.Номенклатура;
				КонеЦЦикла;
			КонецЦикла;
		Иначе 
			СписокТоваровТочноЗаказывать.Очистить();			
		КонецЕсли;
	Иначе 
		СписокТоваровТочноЗаказывать.Очистить();		
	КонецЕсли;
	СформироватьСтраницы();	
	//Если (МинСвобОст<>0) или (МаксСвобОст<>0) тогда
	ПересчитатьДляЗаказа();
	//КонецЕсли;
КонецПроцедуры

СписокТоваровТочноЗаказывать = новый ТаблицаЗначений;
СписокТоваровТочноЗаказывать.Колонки.Добавить("Номенклатура");