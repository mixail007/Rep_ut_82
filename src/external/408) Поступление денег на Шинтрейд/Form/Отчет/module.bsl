
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	
	ТекCOMПодключение = Новый COMОбъект("V83.COMConnector");
СтрокаПодключения = "Srvr = ""server:3041""; Ref = ""v83ib_shintradeyar_bp"";Usr = ""Лапенков"";Pwd = ""153456""";
ТекCOMОбъект = ТекCOMПодключение.Connect(СтрокаПодключения);


	Макет = ПолучитьМакет("Отчет");
	Запрос =  ТекCOMОбъект.NewObject("Запрос");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	А.Период,
	|	А.Контрагент.Наименование Контрагент,
	|	А.СуммаОборот,
	|	А.ВалютнаяСуммаОборотКт
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.Период КАК Период,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Контрагент,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	|		ХозрасчетныйОборотыДтКт.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачДата, &КонДата, ДЕНЬ, СчетДт В ИЕРАРХИИ (&Счет51), , СчетКт В ИЕРАРХИИ (&Счет62), , ) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.Период,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ХозрасчетныйОборотыДтКт.ВалютнаяСуммаОборотКт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачДата, &КонДата, ДЕНЬ, СчетДт В ИЕРАРХИИ (&Счет52), , СчетКт В ИЕРАРХИИ (&Счет62), , ) КАК ХозрасчетныйОборотыДтКт) КАК А
	|
	|УПОРЯДОЧИТЬ ПО
	|	А.Период";

	Запрос.УстановитьПараметр("КонДата", КонДата);
	Запрос.УстановитьПараметр("НачДата", НачДата);
	Запрос.УстановитьПараметр("Счет51", ТекCOMОбъект.ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	Запрос.УстановитьПараметр("Счет52", ТекCOMОбъект.ПланыСчетов.Хозрасчетный.ВалютныеСчета);
	Запрос.УстановитьПараметр("Счет62", ТекCOMОбъект.ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры
