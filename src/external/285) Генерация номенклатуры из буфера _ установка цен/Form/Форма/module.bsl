
Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если Генерация.Количество() = 0 Тогда
		Сообщить("Введите коды генерируемой номенклатуры!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	СвойствоУкомплектованКрепежом = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90164");
	СвойствоВидУпаковки           = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90165");
	СвойствоЦвет                  = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166");
	СвойствоКодСлика              = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90147");
	СвойствоМаксимальнаяНагрузка  = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90157");
	СвойствоТипШтрихкода          = ПланыВидовХарактеристик.ТипыШтрихкодов.НайтиПоКоду("00001");
	
	ТаблицаЦен=Новый ТаблицаЗначений;
	ТаблицаЦен.Колонки.Добавить("Номенклатура");
	ТаблицаЦен.Колонки.Добавить("Цена");
	
	НачатьТранзакцию();
	
	МассивКодов = Генерация.ВыгрузитьКолонку("КодВБуфере");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БуферНоменклатуры.НаименованиеНоменклатуры,
	               |	БуферНоменклатуры.НаименованиеМодели,
	               |	БуферНоменклатуры.НаименованиеТипоразмера,
	               |	БуферНоменклатуры.Цена,
	               |	БуферНоменклатуры.Ширина,
	               |	БуферНоменклатуры.Диаметр,
	               |	БуферНоменклатуры.КоличествоОтверстий,
	               |	БуферНоменклатуры.PCD,
	               |	БуферНоменклатуры.Вылет,
	               |	БуферНоменклатуры.ДиаметрСтупицы,
	               |	БуферНоменклатуры.Цвет,
	               |	БуферНоменклатуры.Код
	               |ИЗ
	               |	РегистрСведений.БуферНоменклатуры КАК БуферНоменклатуры
	               |ГДЕ
	               |	БуферНоменклатуры.Код В(&МассивКодов)";
				   
	Запрос.УстановитьПараметр("МассивКодов", МассивКодов);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		ОбработкаПрерыванияПользователя();
		
		//####################################### ТИПОРАЗМЕР #######################################
		
		СпрТипоразмер=Справочники.Типоразмеры.НайтиПоНаименованию(Результат.НаименованиеТипоразмера);
		
		Если СпрТипоразмер=Справочники.Типоразмеры.ПустаяСсылка() Тогда
			Сообщить("+++ НОВЫЙ типоразмер: "+Результат.НаименованиеТипоразмера, СтатусСообщения.Информация);
			СпрТипоразмерОб = Справочники.Типоразмеры.СоздатьЭлемент();
			СпрТипоразмерОб.Наименование = Результат.НаименованиеТипоразмера;
			СпрТипоразмерОб.Родитель = Справочники.Типоразмеры.НайтиПоКоду("232");//диски
			СпрТипоразмерОб.Ширина              = Результат.Ширина;
			СпрТипоразмерОб.КоличествоОтверстий = Результат.КоличествоОтверстий;
			СпрТипоразмерОб.Диаметр             = Результат.Диаметр;
			СпрТипоразмерОб.PCD                 = Результат.PCD;
			СпрТипоразмерОб.Вылет               = Результат.Вылет;
			СпрТипоразмерОб.ДиаметрСтупицы      = Результат.ДиаметрСтупицы;
			СпрТипоразмерОб.Записать();
			СпрТипоразмер = СпрТипоразмерОб.Ссылка;
		КонецЕсли;	
		
		//####################################### МОДЕЛЬ #######################################
		
		СпрМодель=Справочники.МоделиТоваров.НайтиПоНаименованию(Результат.НаименованиеМодели);
		
		Если СпрМодель = Справочники.МоделиТоваров.ПустаяСсылка() Тогда
			Сообщить("+++ НОВАЯ модель: "+Результат.НаименованиеМодели, СтатусСообщения.Информация);
			ОбМодель = Справочники.МоделиТоваров.СоздатьЭлемент();
			ОбМодель.Наименование       = Результат.НаименованиеМодели;
			ОбМодель.ПолноеНаименование = Результат.НаименованиеМодели;
			ОбМодель.Родитель           = Справочники.МоделиТоваров.НайтиПоКоду("00002");
			ОбМодель.Производитель      = Справочники.Производители.НайтиПоКоду("3290"); // yokatta
			ОбМодель.Записать();
			СпрМодель = ОбМодель.Ссылка;
		КонецЕсли;
		
		//####################################### НОМЕНКЛАТУРА #######################################
		
		СтрокаНаименованиеПолное="Диск "+ Результат.НаименованиеНоменклатуры;
		
		//+++ а вдруг такая уже есть с new
		спрНом =  Справочники.Номенклатура.НайтиПоНаименованию(Результат.НаименованиеНоменклатуры);
		
		Если спрНом <> Справочники.Номенклатура.ПустаяСсылка() тогда
			СпрОбъект = спрНом.ПолучитьОбъект();
			Сообщить("Уже есть такое наименование "+СпрОбъект.Наименование);
			Продолжить;
		Иначе
			СпрОбъект=Справочники.Номенклатура.СоздатьЭлемент();	
			СпрОбъект.Наименование            = Результат.НаименованиеНоменклатуры;
			СпрОбъект.НаименованиеПолное      = СтрокаНаименованиеПолное;
			СпрОбъект.ВидТовара               = Перечисления.ВидыТоваров.Диски;
			СпрОбъект.Родитель                = Справочники.Номенклатура.НайтиПоКоду("0080062"); //Диски - кованные
			СпрОбъект.БазоваяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
			СпрОбъект.НоменклатурнаяГруппа    = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00022"); //кованные
			СпрОбъект.Производитель           = Справочники.Производители.НайтиПоКоду("3290");
			СпрОбъект.Типоразмер              = СпрТипоразмер;
			СпрОбъект.СтавкаНДС               = Перечисления.СтавкиНДС.НДС18;
			СпрОбъект.Модель                  = СпрМодель;
			СпрОбъект.Код                     = Результат.Код;
			СпрОбъект.Артикул                 = Результат.Код;
			СпрОбъект.Импорт                  = Истина;
			СпрОбъект.Записать();
			Сообщить("("+СпрОбъект.Код+") "+Результат.НаименованиеНоменклатуры);
		КонецЕсли;
		
		//####################################### ЕДИНИЦЫ ИЗМЕРЕНИЯ #######################################
		
		СпрЕдИзм = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
		СпрЕдИзм.Владелец = СпрОбъект.Ссылка;
		СпрЕдИзм.ЕдиницаПоКлассификатору =  СпрОбъект.БазоваяЕдиницаИзмерения;
		СпрЕдИзм.Коэффициент= 1;
		СпрЕдИзм.Наименование = "шт";
		СпрЕдИзм.УстановитьНовыйКод(Константы.ПрефиксКодаЕдиниц.Получить());
		СпрЕдИзм.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
		Если  Результат.Диаметр = "13" Тогда
			СпрЕдИзм.Вес= 5;
		ИначеЕсли	Результат.Диаметр = "14" Тогда
			СпрЕдИзм.Вес= 6;
		ИначеЕсли	Результат.Диаметр = "15" Тогда
			СпрЕдИзм.Вес=6.9 ;
		ИначеЕсли	Результат.Диаметр = "16" Тогда
			СпрЕдИзм.Вес= 8;
		ИначеЕсли	Результат.Диаметр = "17" Тогда
			СпрЕдИзм.Вес= 9.8;
		ИначеЕсли	Результат.Диаметр = "18" Тогда
			СпрЕдИзм.Вес= 11.8;
		ИначеЕсли	Результат.Диаметр = "19" Тогда
			СпрЕдИзм.Вес= 11.4;
		ИначеЕсли	Результат.Диаметр = "20" Тогда
			СпрЕдИзм.Вес= 13;
		ИначеЕсли	Результат.Диаметр = "21" Тогда
			СпрЕдИзм.Вес= 14.5;
		ИначеЕсли	Результат.Диаметр = "22" Тогда
			СпрЕдИзм.Вес= 16;
		Иначе // <= 13	
			СпрЕдИзм.Вес= 5;
		КонецЕсли;
		СпрЕдИзм.Записать();
		
		СпрОбъект.ЕдиницаХраненияОстатков = СпрЕдИзм.Ссылка;
		СпрОбъект.ЕдиницаДляОтчетов = СпрЕдИзм.Ссылка;
		
		СпрОбъект.Записать();
		
		//####################################### ЦЕНЫ #######################################
		
		строкаЦена=ТаблицаЦен.Добавить();
		строкаЦена.Номенклатура = СпрОбъект.Ссылка; 
		строкаЦена.Цена = Результат.Цена; 
		
		//####################################### ЗНАЧЕНИЕ СВОЙСТВ ОБЪЕКТОВ #######################################
		//Вид упаковки
		МенеджерЗначенияСвойств = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
		
		МенеджерЗначенияСвойств.Объект   = СпрОбъект.Ссылка;
		МенеджерЗначенияСвойств.Свойство = СвойствоВидУпаковки;
		МенеджерЗначенияСвойств.Прочитать();	
		
		ВидУпаковкиКоробка=Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию("коробка");
		
		Если не МенеджерЗначенияСвойств.Выбран() Тогда
			МенеджерЗначенияСвойств.Объект   = СпрОбъект.Ссылка;
			МенеджерЗначенияСвойств.Свойство = СвойствоВидУпаковки;
			МенеджерЗначенияСвойств.Значение = ВидУпаковкиКоробка;
			МенеджерЗначенияСвойств.Записать();
		КонецЕсли;
		// Цвет
		МенеджерЗначенияСвойств = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
		
		МенеджерЗначенияСвойств.Объект   = СпрОбъект.Ссылка;
		МенеджерЗначенияСвойств.Свойство = СвойствоЦвет;
		МенеджерЗначенияСвойств.Прочитать();	
		
		
		Если не МенеджерЗначенияСвойств.Выбран() Тогда
			МенеджерЗначенияСвойств.Объект   = СпрОбъект.Ссылка;
			МенеджерЗначенияСвойств.Свойство = СвойствоЦвет;
			МенеджерЗначенияСвойств.Значение = Результат.Цвет;
			МенеджерЗначенияСвойств.Записать();
		КонецЕсли;
		
		//####################################### ШТРИХКОД #######################################
		
		ШтрихКод = "05000"+ Результат.Код;
		ШтрихКод = ШтрихКод + КонтрольныйСимволEAN(ШтрихКод, 13);
		
		МенеджерШтрихкод = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
		
		МенеджерШтрихкод.Владелец         = СпрОбъект.Ссылка;
		МенеджерШтрихкод.Штрихкод         = ШтрихКод;
		МенеджерШтрихкод.ТипШтрихкода     = СвойствоТипШтрихкода;
		МенеджерШтрихкод.ЕдиницаИзмерения = СпрЕдИзм.Ссылка; 
		МенеджерШтрихкод.Качество         = Справочники.Качество.Новый;
		МенеджерШтрихкод.Прочитать();	
		
		Если не МенеджерШтрихкод.Выбран() Тогда
			МенеджерШтрихкод.Владелец         = СпрОбъект.Ссылка;
			МенеджерШтрихкод.Код              = Число(СпрОбъект.Ссылка.Код);
			МенеджерШтрихкод.Штрихкод         = ШтрихКод;
			МенеджерШтрихкод.ТипШтрихкода     = СвойствоТипШтрихкода;
			МенеджерШтрихкод.ЕдиницаИзмерения = СпрЕдИзм.Ссылка; 
			МенеджерШтрихкод.Качество         = Справочники.Качество.Новый;
			МенеджерШтрихкод.Записать();
		КонецЕсли;
		
	КонецЦикла; //Пока Результат.Следующий() Цикл
	
	//####################################### УСТАНОВКА ЦЕН НОМЕНКЛАТУРЫ #######################################
	
	Если ТаблицаЦен.Количество()>0 Тогда
		
		ДокУЦН = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
		ДокУЦН.Дата = ТекущаяДата();
		
		ТипЦенБазовая = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008");
		
		строкаТипыЦен = ДокУЦН.ТипыЦен.Добавить();
		строкаТипыЦен.ТипЦен = ТипЦенБазовая;
		
		//
		Для  счСтрок=0 по  ТаблицаЦен.Количество()-1 Цикл
			строкаТовары                  = ДокУЦН.Товары.Добавить();
			строкаТовары.Номенклатура     = ТаблицаЦен[счСтрок].Номенклатура;
			строкаТовары.Цена             = ТаблицаЦен[счСтрок].Цена;
			строкаТовары.Валюта           = Константы.ВалютаУправленческогоУчета.Получить();
			строкаТовары.ЕдиницаИзмерения = строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
			строкаТовары.ТипЦен           = ТипЦенБазовая;
			
		КонецЦикла; 
		//	
		ДокУЦН.ПолучитьФорму().Открыть();	
		//	
	КонецЕсли;
	
	//####################################### ФИКСАЦИЯ #######################################
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Зафиксировать?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗафиксироватьТранзакцию();
		Сообщить("ИЗМЕНЕНИЯ ЗАПИСАНЫ");
		
		Для Каждого Строка Из ЭтотОбъект.Генерация Цикл
			
			Строка.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.КодВБуфере);
			
		КонецЦикла;	
	Иначе
		Сообщить("ИЗМЕНЕНИЯ ОТКЛОНЕНЫ");
	КонецЕсли;
	
КонецПроцедуры

Процедура ГенерацияКодВБуфереПриИзменении(Элемент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БуферНоменклатуры.НаименованиеНоменклатуры
	               |ИЗ
	               |	РегистрСведений.БуферНоменклатуры КАК БуферНоменклатуры
	               |ГДЕ
	               |	БуферНоменклатуры.Код = &Код";
	Запрос.УстановитьПараметр("Код", Элемент.Значение);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Количество() = 0 Тогда
		Сообщить("В буфере нет номенклатуры с кодом "+Элемент.Значение);
		Элемент.Значение = "";
		Возврат;
	КонецЕсли;
	
	ЭлемНоменклатура = Справочники.Номенклатура.НайтиПоКоду(Элемент.Значение);
	
	Если ЗначениеЗаполнено(ЭлемНоменклатура) Тогда
		Сообщить("Номенклатура с кодом "+Элемент.Значение+" уже заведена: "+ЭлемНоменклатура.Наименование);
		Элемент.Значение = "";
		Возврат;		
	КонецЕсли;
	
КонецПроцедуры


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	//+++ 05.10.2018 - ограничение загрузки в сезон!
	ТекДата = ОценкаПроизводительностиВызовСервераПолныеПрава.ДатаИВремяНаСервере();
	время1 = (ТекДата - НачалоДня(ТекДата)); 
	Если  время1 > 8*3600 и время1 < 17*3600 тогда
	   Предупреждение("Загрузка новой номенклатуры ЗАПРЕЩЕНА в рабочее время!
	   				  |   Загружайте номенклатуру ТОЛЬКО после 17-00!");
	   Отказ = Истина;
	КонецЕсли;   

КонецПроцедуры

