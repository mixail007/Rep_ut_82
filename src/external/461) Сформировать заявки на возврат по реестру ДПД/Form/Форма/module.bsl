Перем СоответствиеПоставщиковАЭПодразделениям, СоответствиеПоставщиковАЭПодразделениямПослеПереходаВЯШТ;
перем RegExp, тз;

Процедура РазобратьФайл()
	тз=Новый ТаблицаЗначений;
	тз.Колонки.Добавить("НомерДПД", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100)));
	тз.Колонки.Добавить("НомерИМ", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100)));
	тз.Колонки.Добавить("Отправитель", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(150)));
	тз.Колонки.Добавить("НомерЗаказаИМ", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100)));
	тз.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.Подразделения"));
	тз.Колонки.Добавить("Содержание", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(500)));
	тз.Колонки.Добавить("Товар", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(500)));
	тз.Колонки.Добавить("Колво", Новый ОписаниеТипов("Число"	, , Новый КвалификаторыЧисла(10,0)));
	тз.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));

		
	Номерстроки = 0;
	Пока Номерстроки<=ЭлементыФормы.Сроки.ВысотаТаблицы цикл
		НомерДПД=СокрЛП(ЭлементыФормы.Сроки.Область(Номерстроки,КолонкаНомерДПД,Номерстроки,КолонкаНомерДПД).Текст);
		НомерИМ=СокрЛП(ЭлементыФормы.Сроки.Область(Номерстроки,КолонкаНомерИМ,Номерстроки,КолонкаНомерИМ).Текст);
		Отправитель=СокрЛП(ЭлементыФормы.Сроки.Область(Номерстроки,КолонкаОтправитель,Номерстроки,КолонкаОтправитель).Текст);
		Содержание=СокрЛП(ЭлементыФормы.Сроки.Область(Номерстроки,КолонкаСодержание,Номерстроки,КолонкаСодержание).Текст);
		//Сообщить(Содержание+":::"+найти(Содержание," "));
		
		Если НомерДПД<>"" и НомерДПД<>"Номер отправки DPD" и НомерИМ<>"" и Содержание<>"" тогда
			
			//ИМ00152537_000092773
			ПозицияРазделителя = Найти(НомерИМ,"_");
			НомерЗаказаИМ = СокрЛП(лев(НомерИМ,ПозицияРазделителя-1));
			Подразделение = СокрЛП(сред(НомерИМ,ПозицияРазделителя+1));
			
			табТоваров = РазобратьСодержание(Содержание);
			Для каждого стр из табТоваров цикл
				нстр=тз.Добавить();
				
				нстр.НомерДПД=НомерДПД;
				нстр.НомерЗаказаИМ=НомерЗаказаИМ;
				нстр.НомерИМ=НомерИМ;
				нстр.Отправитель=Отправитель;
				
				нстр.подразделение = СоответствиеПоставщиковАЭПодразделениям.Получить(Подразделение);
				Если не ЗначениеЗаполнено(нстр.подразделение) тогда
					нстр.подразделение = СоответствиеПоставщиковАЭПодразделениямПослеПереходаВЯШТ.Получить(Подразделение);
				КонецЕсли;
				нстр.Содержание=Содержание;
				нстр.товар = стр.НоменклатураНаименование;
				нстр.Колво = стр.Колво;
				нстр.Номенклатура = стр.Номенклатура;
			КонецЦикла;
			//табТоваров = РазобратьСодержание(Содержание);
		КонецЕсли;
		
		Номерстроки=Номерстроки+1;
	КонецЦикла;
	сообщить(тз.Количество());
	
	Запрос = новый Запрос;
	//Запрос.Текст="ВЫБРАТЬ
	//			 |	тзТаблицаИзРеестра.НомерДПД,
	//			 |	тзТаблицаИзРеестра.НомерИМ,
	//			 |	тзТаблицаИзРеестра.НомерЗаказаИМ,
	//			 |	тзТаблицаИзРеестра.Подразделение,
	//			 |	тзТаблицаИзРеестра.Содержание,
	//			 |	тзТаблицаИзРеестра.Товар,
	//			 |	тзТаблицаИзРеестра.Колво,
	//			 |	тзТаблицаИзРеестра.Номенклатура
	//			 |ПОМЕСТИТЬ втТаблицаИзРеестра
	//			 |ИЗ
	//			 |	&тзТаблицаИзРеестра КАК тзТаблицаИзРеестра
	//			 |;
	//			 |
	//			 |////////////////////////////////////////////////////////////////////////////////
	//			 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//			 |	ЗаказыИзРеестра.НомерЗаказаИМ КАК НомерЗаказаИМ,
	//			 |	ЗаказПокупателяТовары.Ссылка КАК Ссылка,
	//			 |	ЗаказыИзРеестра.Подразделение,
	//			 |	ЗаказыИзРеестра.Товар,
	//			 |	ЗаказыИзРеестра.Номенклатура КАК Номенклатура
	//			 |ИЗ
	//			 |	(ВЫБРАТЬ
	//			 |		втТаблицаИзРеестра.НомерЗаказаИМ КАК НомерЗаказаИМ,
	//			 |		втТаблицаИзРеестра.Подразделение КАК Подразделение,
	//			 |		втТаблицаИзРеестра.Номенклатура КАК Номенклатура,
	//			 |		втТаблицаИзРеестра.Товар КАК Товар
	//			 |	ИЗ
	//			 |		втТаблицаИзРеестра КАК втТаблицаИзРеестра
	//			 |	
	//			 |	СГРУППИРОВАТЬ ПО
	//			 |		втТаблицаИзРеестра.Номенклатура,
	//			 |		втТаблицаИзРеестра.НомерЗаказаИМ,
	//			 |		втТаблицаИзРеестра.Подразделение,
	//			 |		втТаблицаИзРеестра.Товар) КАК ЗаказыИзРеестра
	//			 |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	//			 |		ПО ЗаказыИзРеестра.НомерЗаказаИМ = ЗаказПокупателяТовары.Ссылка.НомерВходящегоДокумента
	//			 |			И ЗаказыИзРеестра.Подразделение = ЗаказПокупателяТовары.Ссылка.Подразделение
	//			 |			И ЗаказыИзРеестра.Номенклатура = ЗаказПокупателяТовары.Номенклатура
	//			 |
	//			 |УПОРЯДОЧИТЬ ПО
	//			 |	Ссылка,
	//			 |	НомерЗаказаИМ,
	//			 |	Номенклатура
	//			 |ИТОГИ ПО
	//			 |	НомерЗаказаИМ,
	//			 |	Ссылка
	//			 |АВТОУПОРЯДОЧИВАНИЕ";
	
		//Запрос.Текст="ВЫБРАТЬ
		//			 |	тзТаблицаИзРеестра.НомерДПД,
		//			 |	тзТаблицаИзРеестра.НомерИМ,
		//			 |	тзТаблицаИзРеестра.НомерЗаказаИМ,
		//			 |	тзТаблицаИзРеестра.Подразделение,
		//			 |	тзТаблицаИзРеестра.Содержание,
		//			 |	тзТаблицаИзРеестра.Товар,
		//			 |	тзТаблицаИзРеестра.Колво,
		//			 |	тзТаблицаИзРеестра.Номенклатура
		//			 |ПОМЕСТИТЬ втТаблицаИзРеестра
		//			 |ИЗ
		//			 |	&тзТаблицаИзРеестра КАК тзТаблицаИзРеестра
		//			 |;
		//			 |
		//			 |////////////////////////////////////////////////////////////////////////////////
		//			 |ВЫБРАТЬ РАЗЛИЧНЫЕ
		//			 |	ЗаказыИзРеестра.НомерЗаказаИМ КАК НомерЗаказаИМ,
		//			 |	ЗаказыИзРеестра.Подразделение КАК Подразделение,
		//			 |	ЗаказыИзРеестра.Номенклатура КАК Номенклатура,
		//			 |	ЗаказыИзРеестра.Товар
		//			 |ИЗ
		//			 |	(ВЫБРАТЬ
		//			 |		втТаблицаИзРеестра.НомерЗаказаИМ КАК НомерЗаказаИМ,
		//			 |		втТаблицаИзРеестра.Подразделение КАК Подразделение,
		//			 |		втТаблицаИзРеестра.Номенклатура КАК Номенклатура,
		//			 |		втТаблицаИзРеестра.Товар КАК Товар
		//			 |	ИЗ
		//			 |		втТаблицаИзРеестра КАК втТаблицаИзРеестра
		//			 |	
		//			 |	СГРУППИРОВАТЬ ПО
		//			 |		втТаблицаИзРеестра.Номенклатура,
		//			 |		втТаблицаИзРеестра.НомерЗаказаИМ,
		//			 |		втТаблицаИзРеестра.Подразделение,
		//			 |		втТаблицаИзРеестра.Товар) КАК ЗаказыИзРеестра
		//			 |
		//			 |УПОРЯДОЧИТЬ ПО
		//			 |	НомерЗаказаИМ,
		//			 |	Подразделение,
		//			 |	Номенклатура
		//			 |АВТОУПОРЯДОЧИВАНИЕ";

				 //Запрос.УстановитьПараметр("тзТаблицаИзРеестра",тз);
				 //Рез = Запрос.Выполнить();
				 //тзЗаказы = Рез.Выгрузить();
	//тз.ВыбратьСтроку();
	тз.Сортировать("НомерЗаказаИМ,Подразделение,Номенклатура");
	ТабРезультатРазбора=тз;
	ЭлементыФормы.ТабРезультатРазбора.СоздатьКолонки();
	
КонецПроцедуры

Функция РазобратьСодержание(Содержание)
	таб  = Новый ТаблицаЗначений;
	таб.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	таб.Колонки.Добавить("НоменклатураКод", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(10)));
	таб.Колонки.Добавить("НоменклатураНаименование", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(150)));
	таб.Колонки.Добавить("Колво", Новый ОписаниеТипов("Число"	, , Новый КвалификаторыЧисла(10,0)));
	//в строке Содержание перечисляются товары с количеством, которыые пришли в заказе
	//сначала мы отправляли товар без кода, формат был следующий: наименование1 - количество1#
	//															  наименование2 - количество2#	
	//LegeArtis Replica NS67 7x17/5x114.3 ET45 D66.1 S - 4# Вентиль TR-414 C (хромированный) - 4#	
	
	
	//потом добавили код товара, формат изменился на: (код1) наименование1 - количество1#
	//												  (код2) наименование2 - количество2#
	//первый вариант должен со временем уйти
	//(9144000) CATWILD CW-01 6.5x16/5x112 ET50 D57.1 BKF - 4# (9177633) Вентиль TR-414 C (хромированный) - 4# (9095787) Болт 14*1.5 (55/28/17),  хром, конус 966 - 20#	
	
	//вариант 1
    МассивТоваров = разложитьстрокувмассивПодстрок(Содержание,"# ");
	для каждого эл из МассивТоваров цикл
		//если насколько товаров, то в конце будет #, ее удаляем
		подстрока = сокрЛП(эл);
		Если прав(подстрока,1)="#" тогда
			подстрока=лев(подстрока,стрДлина(подстрока)-1);
		КонецЕсли;
		//ищем количество
		RegExp.Pattern = "\s-\s[0-9]{1,3}$"; //пробел,-,пробел 1,2 или 3 цифры, конец строки
		RegExp.Global = истина; //поиск по всей строке
		ИсходнаяСтрока = СокрЛП(подстрока);
		Matches = RegExp.Execute(ИсходнаяСтрока);
        Если Matches.Count>0 тогда
			Для Счетчик = 0 По Matches.Count - 1 Цикл 
				Match = Matches.Item(Счетчик);
				Колво = Match.Value;
				НаименованиеСКодом = лев(ИсходнаяСтрока,Найти(ИсходнаяСтрока,Колво)-1);
				КолВо = (стрЗаменить(колво,"-",""));
				Колво = число(сокрЛП(Колво));
				//Сообщить(ИсходнаяСтрока+":::"+НаименованиеСКодом+":::"+Колво);
			КонецЦикла;
		иначе
			Сообщить(ИсходнаяСтрока+"::: НЕСРАБОТАЛО" );
		КонецЕсли;
		
		RegExp.Pattern = "\([0-9]{7}\s{0,4}\)"; //может встречаться код, в начале передавал код длинной 11 симв, потом исправил
		RegExp.Global = истина; //поиск по всей строке
		ИсходнаяСтрока = СокрЛП(НаименованиеСКодом);
		Matches = RegExp.Execute(ИсходнаяСтрока);
        Если Matches.Count>0 тогда
			Для Счетчик = 0 По Matches.Count - 1 Цикл 
				Match = Matches.Item(Счетчик);
				Код = Match.Value;
				НаименованиеБезКода = СокрЛП(СтрЗаменить(НаименованиеСКодом,Код,""));
				Код = СтрЗаменить(Код,"(","");
				Код = СтрЗаменить(Код,")","");
			КонецЦикла;
		иначе
			НаименованиеБезКода = НаименованиеСКодом;
		КонецЕсли;
		//Сообщить(ИсходнаяСтрока+":::"+Код+":::"+НаименованиеБезКода+":::"+Колво);
		нстр = таб.Добавить();
		нстр.НоменклатураКод = код;
		нстр.НоменклатураНаименование = НаименованиеБезКода;
		нстр.Колво = Колво;
		Если СокрЛП(код)<>"" тогда
			нстр.Номенклатура = справочники.Номенклатура.НайтиПоКоду(сокрЛП(код));
		иначе
			нстр.Номенклатура = справочники.Номенклатура.НайтиПоНаименованию(сокрЛП(НаименованиеБезКода),истина);
		КонецЕсли;
		//сообщить(Подстрока);
	конеццикла;
	возврат таб;
	
КонецФункции

Процедура ТабРезультатРазбораПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если не значениеЗаполнено(ДанныеСтроки.номенклатура) тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.БледноКрасноФиолетовый;
	КонецЕсли;
КонецПроцедуры

Процедура НайтиРеализацииНажатие(Элемент)
	Запрос = новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	тзТаблицаИзРеестра.НомерДПД,
		             |	тзТаблицаИзРеестра.НомерИМ,
		             |	тзТаблицаИзРеестра.НомерЗаказаИМ,
		             |	тзТаблицаИзРеестра.Подразделение,
		             |	тзТаблицаИзРеестра.Содержание,
		             |	тзТаблицаИзРеестра.Товар,
		             |	тзТаблицаИзРеестра.Колво,
		             |	тзТаблицаИзРеестра.Номенклатура,
		             |	тзТаблицаИзРеестра.Отправитель
		             |ПОМЕСТИТЬ втТаблицаИзРеестра
		             |ИЗ
		             |	&тзТаблицаИзРеестра КАК тзТаблицаИзРеестра
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ РАЗЛИЧНЫЕ
		             |	ЗаказыИзРеестра.НомерЗаказаИМ КАК НомерЗаказаИМ,
		             |	ЗаказПокупателяТовары.Ссылка КАК ЗаказПокупателяИсходный,
		             |	ЗаказыИзРеестра.Подразделение,
		             |	ЗаказыИзРеестра.Товар,
		             |	ЗаказыИзРеестра.Номенклатура КАК Номенклатура,
		             |	ЗаказыИзРеестра.Колво,
		             |	ЗаказыИзРеестра.НомерДПД,
		             |	ЗаказыИзРеестра.Отправитель
		             |ПОМЕСТИТЬ втРеестрСИсходнымиЗаказами
		             |ИЗ
		             |	(ВЫБРАТЬ
		             |		втТаблицаИзРеестра.НомерЗаказаИМ КАК НомерЗаказаИМ,
		             |		втТаблицаИзРеестра.Подразделение КАК Подразделение,
		             |		втТаблицаИзРеестра.Номенклатура КАК Номенклатура,
		             |		втТаблицаИзРеестра.Товар КАК Товар,
		             |		СУММА(втТаблицаИзРеестра.Колво) КАК Колво,
		             |		втТаблицаИзРеестра.НомерДПД КАК НомерДПД,
		             |		втТаблицаИзРеестра.Отправитель КАК Отправитель
		             |	ИЗ
		             |		втТаблицаИзРеестра КАК втТаблицаИзРеестра
		             |	ГДЕ
		             |		НЕ втТаблицаИзРеестра.Номенклатура = ЗНАЧЕНИЕ(справочник.Номенклатура.пустаяСсылка)
		             |	
		             |	СГРУППИРОВАТЬ ПО
		             |		втТаблицаИзРеестра.Номенклатура,
		             |		втТаблицаИзРеестра.НомерЗаказаИМ,
		             |		втТаблицаИзРеестра.Подразделение,
		             |		втТаблицаИзРеестра.Товар,
		             |		втТаблицаИзРеестра.НомерДПД,
		             |		втТаблицаИзРеестра.Отправитель) КАК ЗаказыИзРеестра
		             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		             |		ПО ЗаказыИзРеестра.НомерЗаказаИМ = ЗаказПокупателяТовары.Ссылка.НомерВходящегоДокумента
		             |			И ЗаказыИзРеестра.Подразделение = ЗаказПокупателяТовары.Ссылка.Подразделение
		             |			И ЗаказыИзРеестра.Номенклатура = ЗаказПокупателяТовары.Номенклатура
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	втРеестрСИсходнымиЗаказами.НомерЗаказаИМ КАК НомерЗаказаИМ,
		             |	втРеестрСИсходнымиЗаказами.ЗаказПокупателяИсходный КАК ЗаказПокупателяИсходный,
		             |	ЕСТЬNULL(ЗаказыОбъединенные.Ссылка, втРеестрСИсходнымиЗаказами.ЗаказПокупателяИсходный) КАК ЗаказОбъединенный,
		             |	втРеестрСИсходнымиЗаказами.Подразделение,
		             |	втРеестрСИсходнымиЗаказами.Товар,
		             |	втРеестрСИсходнымиЗаказами.Номенклатура,
		             |	втРеестрСИсходнымиЗаказами.Колво,
		             |	втРеестрСИсходнымиЗаказами.НомерДПД,
		             |	втРеестрСИсходнымиЗаказами.Отправитель
		             |ПОМЕСТИТЬ втРеестрСОбъединеннымиЗаказами
		             |ИЗ
		             |	втРеестрСИсходнымиЗаказами КАК втРеестрСИсходнымиЗаказами
		             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		             |			ЗаказПокупателяЗаказы.Ссылка КАК Ссылка,
		             |			ЗаказПокупателяЗаказы.ЗаказПокупателя КАК ЗаказПокупателя
		             |		ИЗ
		             |			Документ.ЗаказПокупателя.Заказы КАК ЗаказПокупателяЗаказы
		             |		ГДЕ
		             |			ЗаказПокупателяЗаказы.Ссылка.Проведен
		             |			И ЗаказПокупателяЗаказы.ЗаказПокупателя В
		             |					(ВЫБРАТЬ
		             |						втРеестрСИсходнымиЗаказами.ЗаказПокупателяИсходный
		             |					ИЗ
		             |						втРеестрСИсходнымиЗаказами КАК втРеестрСИсходнымиЗаказами)) КАК ЗаказыОбъединенные
		             |		ПО втРеестрСИсходнымиЗаказами.ЗаказПокупателяИсходный = ЗаказыОбъединенные.ЗаказПокупателя
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	втРеестрСОбъединеннымиЗаказами.ЗаказОбъединенный.Контрагент КАК Контрагент,
		             |	втРеестрСОбъединеннымиЗаказами.Отправитель,
		             |	втРеестрСОбъединеннымиЗаказами.НомерДПД,
		             |	втРеестрСОбъединеннымиЗаказами.НомерЗаказаИМ КАК НомерЗаказаИМ,
		             |	втРеестрСОбъединеннымиЗаказами.ЗаказПокупателяИсходный КАК ЗаказПокупателяИсходный,
		             |	втРеестрСОбъединеннымиЗаказами.ЗаказОбъединенный КАК ЗаказОбъединенный,
		             |	втРеестрСОбъединеннымиЗаказами.Подразделение КАК Подразделение,
		             |	втРеестрСОбъединеннымиЗаказами.Товар,
		             |	втРеестрСОбъединеннымиЗаказами.Номенклатура КАК Номенклатура,
		             |	втРеестрСОбъединеннымиЗаказами.Колво,
		             |	ПродажиОбороты.Регистратор КАК Реализация,
		             |	ПродажиОбороты.СтоимостьОборот / ПродажиОбороты.КоличествоОборот КАК Цена,
		             |	ЕСТЬNULL(взОплаченныеИМ.Оплачен, ЛОЖЬ) КАК Оплачен
		             |ИЗ
		             |	втРеестрСОбъединеннымиЗаказами КАК втРеестрСОбъединеннымиЗаказами
		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(
		             |				,
		             |				,
		             |				Регистратор,
		             |				ЗаказПокупателя В
		             |					(ВЫБРАТЬ
		             |						втРеестрСОбъединеннымиЗаказами.ЗаказОбъединенный
		             |					ИЗ
		             |						втРеестрСОбъединеннымиЗаказами КАК втРеестрСОбъединеннымиЗаказами)) КАК ПродажиОбороты
		             |		ПО втРеестрСОбъединеннымиЗаказами.ЗаказОбъединенный = ПродажиОбороты.ЗаказПокупателя
		             |			И втРеестрСОбъединеннымиЗаказами.Номенклатура = ПродажиОбороты.Номенклатура
		             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		             |			СостояниеЗаказовИМ.ЗаказПервичный КАК ЗаказПервичный,
		             |			СостояниеЗаказовИМ.НомерИМ КАК НомерИМ,
		             |			МАКСИМУМ(СостояниеЗаказовИМ.Оплачен) КАК Оплачен
		             |		ИЗ
		             |			РегистрСведений.СостояниеЗаказовИМ КАК СостояниеЗаказовИМ
		             |		ГДЕ
		             |			СостояниеЗаказовИМ.Оплачен
		             |			И СостояниеЗаказовИМ.ЗаказПервичный В
		             |					(ВЫБРАТЬ
		             |						втРеестрСИсходнымиЗаказами.ЗаказПокупателяИсходный
		             |					ИЗ
		             |						втРеестрСИсходнымиЗаказами)
		             |		
		             |		СГРУППИРОВАТЬ ПО
		             |			СостояниеЗаказовИМ.ЗаказПервичный,
		             |			СостояниеЗаказовИМ.НомерИМ) КАК взОплаченныеИМ
		             |		ПО втРеестрСОбъединеннымиЗаказами.ЗаказПокупателяИсходный = взОплаченныеИМ.ЗаказПервичный
		             |
		             |УПОРЯДОЧИТЬ ПО
		             |	НомерЗаказаИМ,
		             |	ЗаказПокупателяИсходный,
		             |	ЗаказОбъединенный,
		             |	Подразделение,
		             |	Номенклатура
		             |АВТОУПОРЯДОЧИВАНИЕ";
				 
				 Запрос.УстановитьПараметр("тзТаблицаИзРеестра",тз);
				 //тз.выбратьСтроку();
                 Рез = Запрос.Выполнить();
				 тзЗаказыСРеализациями = Рез.Выгрузить(); 
				 ТабСРеализациями=тзЗаказыСРеализациями;
	ЭлементыФормы.ТабСРеализациями.СоздатьКолонки();
    ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Страница3;
	
	Для каждого стр из  тзЗаказыСРеализациями цикл
		Если стр.Оплачен тогда
			Сообщить("По заказу: "+стр.НомерЗаказаИМ+" - "+стр.ЗаказПокупателяИсходный+" уже была оплата!",СтатусСообщения.Важное);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ТабСРеализациямиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если  (ДанныеСтроки.ЗаказПокупателяИсходный = ДанныеСтроки.ЗаказОбъединенный) тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.БледноКрасноФиолетовый;
	КонецЕсли;
	Если  (ДанныеСтроки.Оплачен) тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.БледноСиреневый;
	КонецЕсли;
КонецПроцедуры

Процедура кнПеренестиВЗаявкуНажатие(Элемент)
	Контрагенты = ТабСРеализациями.Скопировать(,"Контрагент");
	Контрагенты.Свернуть("Контрагент");
	
	отбор = новый структура("Контрагент,Оплачен");
	Для каждого контрагент из контрагенты цикл
		отбор.Контрагент = контрагент.Контрагент;
		Отбор.Оплачен=ложь;
		найденныеСтроки = ТабСРеализациями.НайтиСтроки(отбор);
		Если найденныеСтроки.Количество()>0 тогда
			ДокЗаявка = Документы.ЗаявкаНаВозвратТоваров.СоздатьДокумент();
			ДокЗаявка.Контрагент = контрагент.Контрагент;
			//ДокЗаявка.Контрагент = Контрагент;
			Товары = ДокЗаявка.Товары;
			Для каждого стр из найденныеСтроки цикл
				Если не стр.Оплачен тогда
					нстр = товары.Добавить();
					нстр.Номенклатура = стр.номенклатура;
					нстр.Количество = стр.колво;
					нстр.Реализация = стр.Реализация;
					нстр.ЦенаРеализации = стр.цена;
					нстр.Сумма = нстр.Количество*нстр.ЦенаРеализации;
					нстр.НомерЗаказаИМ = стр.НомерЗаказаИМ;
					нстр.НомерЗаказаТК = стр.НомерДПД;
					нстр.Отправитель = стр.Отправитель;
					ДокЗаявка.ПроверитьНоменклатуруВРеализации(нстр);
				КонецЕсли;
			КонецЦикла;
			ДокЗаявка.ПолучитьФорму("ФормаДокумента").Открыть();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура кнРазобратьФайлНажатие(Элемент)
	РазобратьФайл();
	ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Страница2;
КонецПроцедуры

Процедура ПриОткрытии()
	КолонкаНомерДПД=1;
	КолонкаНомерИМ = 12;
	КолонкаОтправитель = 31;
	КолонкаСодержание = 29;
КонецПроцедуры

RegExp = Новый COMОбъект("VBScript.RegExp");   //для определения индексов


СоответствиеПоставщиковАЭПодразделениям = новый Соответствие();
СоответствиеПоставщиковАЭПодразделениям.Вставить("000092773",Справочники.Подразделения.НайтиПоКоду("00005"));
СоответствиеПоставщиковАЭПодразделениям.Вставить("УТ0000494",Справочники.Подразделения.НайтиПоКоду("00138"));//екат
СоответствиеПоставщиковАЭПодразделениям.Вставить("Ф00000010",Справочники.Подразделения.НайтиПоКоду("00106"));//Подразделение Ростов на Дону
СоответствиеПоставщиковАЭПодразделениям.Вставить("П000835",Справочники.Подразделения.НайтиПоКоду("00112"));//Подразделение Санкт-Петербург


СоответствиеПоставщиковАЭПодразделениямПослеПереходаВЯШТ = новый Соответствие();
СоответствиеПоставщиковАЭПодразделениямПослеПереходаВЯШТ.Вставить("00001",Справочники.Подразделения.НайтиПоКоду("00005"));
СоответствиеПоставщиковАЭПодразделениямПослеПереходаВЯШТ.Вставить("93801",Справочники.Подразделения.НайтиПоКоду("00138"));//екат
СоответствиеПоставщиковАЭПодразделениямПослеПереходаВЯШТ.Вставить("94036",Справочники.Подразделения.НайтиПоКоду("00138"));//еще какой то екат
СоответствиеПоставщиковАЭПодразделениямПослеПереходаВЯШТ.Вставить("93187",Справочники.Подразделения.НайтиПоКоду("00106"));//Подразделение Ростов на Дону
СоответствиеПоставщиковАЭПодразделениямПослеПереходаВЯШТ.Вставить("П000835",Справочники.Подразделения.НайтиПоКоду("00112"));//Подразделение Санкт-Петербург