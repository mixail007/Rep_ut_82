
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//Получить ТЗ для запроса из БП Землянский
	
	ВнешниеДанные = Новый ТаблицаЗначений;
	ВнешниеДанные.Колонки.Добавить("Наименование");
	
	
	UsrPwd = "Usr=""Робот"";Pwd=""09876""";
	Base   =  "Srvr=""server:3041"";Ref=""v83ib_zemvorob_bp""";
	v8connect = Новый COMОбъект("V83.ComConnector");
	
	СтрокаСоединенияCOM = Base+";"+UsrPwd;
	Попытка
		Соединение = v8connect.Connect(СтрокаСоединенияCOM);
		#Если Клиент Тогда
			//Сообщить(строка(ТекущаяДата())+" Успешно Установлено подключение к базе 1С V8:"+base, СтатусСообщения.Информация);
		#КонецЕсли
	Исключение
		#Если Клиент Тогда
			Сообщить("НЕТ подключения к базе 1С V8:"+base+" ! ", СтатусСообщения.Внимание);
		#КонецЕсли
		Возврат;
	КонецПопытки;
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаданиеНаПеревозкуГрузовПрямой.Тариф,
	|	ЗаданиеНаПеревозкуГрузовПрямой.ДокПоступления,
	|	ЗаданиеНаПеревозкуГрузовПрямой.Ссылка.СторПеревозчик.Наименование,
	|	ЗаданиеНаПеревозкуГрузовПрямой.Ссылка.Автомобиль
	|ПОМЕСТИТЬ Задание
	|ИЗ
	|	Документ.ЗаданиеНаПеревозкуГрузов.Прямой КАК ЗаданиеНаПеревозкуГрузовПрямой
	|ГДЕ
	|	ЗаданиеНаПеревозкуГрузовПрямой.Ссылка.НаемныйТранспорт = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаданиеНаПеревозкуГрузовОбратный.Тариф,
	|	ЗаданиеНаПеревозкуГрузовОбратный.ДокПоступления,
	|	ЗаданиеНаПеревозкуГрузовОбратный.Ссылка.СторПеревозчик.Наименование,
	|	ЗаданиеНаПеревозкуГрузовОбратный.Ссылка.Автомобиль
	|ИЗ
	|	Документ.ЗаданиеНаПеревозкуГрузов.Обратный КАК ЗаданиеНаПеревозкуГрузовОбратный
	|ГДЕ
	|	ЗаданиеНаПеревозкуГрузовОбратный.Ссылка.НаемныйТранспорт = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(Задание.Тариф, 0) - ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаПрибыль
	|ПОМЕСТИТЬ СуммаПрибыли
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИздержкиОбращения),
	|			,
	|			Субконто1 = &СтатьяНаемный
	|				И Субконто2 = &НомГруппаНаемный,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Задание КАК Задание
	|		ПО ХозрасчетныйОбороты.КорСубконто3 = Задание.ДокПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборот, 0) + ЕСТЬNULL(ХозрасчетныйОбороты1.СуммаОборот, 0)) КАК СуммаОборот
	|ПОМЕСТИТЬ АдмОбщий
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИздержкиОбращения),
	|			,
	|			Субконто1 = &СтатьяЗП
	|				И Субконто2 = &НомГруппаНаемный,
	|			,
	|			) КАК ХозрасчетныйОбороты,
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет = &Я10, , Субконто1 = &НомГруппаНаемный, , ) КАК ХозрасчетныйОбороты1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задание.СторПеревозчикНаименование КАК Перевозчик,
	|	СУММА(ЕСТЬNULL(Задание.Тариф, 0) - ХозрасчетныйОбороты.СуммаОборотДт) КАК Прибыль,
	|	СУММА(ЕСТЬNULL(Задание.Тариф, 0)) КАК Общий,
	|	СУММА(ЕСТЬNULL(Задание.Тариф, 0) * 0.06) КАК Налог,
	|	СУММА(ЕСТЬNULL(Задание.Тариф, 0) - ХозрасчетныйОбороты.СуммаОборотДт - ЕСТЬNULL(Задание.Тариф, 0) * 0.06 - (ВЫРАЗИТЬ(АдмОбщий.СуммаОборот / СуммаПрибыли.СуммаПрибыль * (Задание.Тариф - ХозрасчетныйОбороты.СуммаОборотДт) КАК ЧИСЛО(15, 2)))) КАК ФинРезультат,
	|	Задание.Автомобиль,
	|	СУММА(ВЫРАЗИТЬ(АдмОбщий.СуммаОборот / СуммаПрибыли.СуммаПрибыль * (Задание.Тариф - ХозрасчетныйОбороты.СуммаОборотДт) КАК ЧИСЛО(15, 2))) КАК Адм,
	|	АдмОбщий.СуммаОборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИздержкиОбращения),
	|			,
	|			Субконто1 = &СтатьяНаемный
	|				И Субконто2 = &НомГруппаНаемный,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Задание КАК Задание
	|		ПО ХозрасчетныйОбороты.КорСубконто3 = Задание.ДокПоступления,
	|	СуммаПрибыли КАК СуммаПрибыли,
	|	АдмОбщий КАК АдмОбщий
	|
	|СГРУППИРОВАТЬ ПО
	|	Задание.СторПеревозчикНаименование,
	|	Задание.Автомобиль,
	|	АдмОбщий.СуммаОборот";
	
	Я10 = Соединение.ПланыСчетов.Хозрасчетный.НайтиПоКоду("Я10");
	СтатьяНаемный = Соединение.Справочники.СтатьиЗатрат.НайтиПоКоду("Т0042");
	СтатьяЗП = Соединение.Справочники.СтатьиЗатрат.НайтиПоКоду("Т0008");
	НомГруппаНаемн = Соединение.Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000043");
	
	Запрос.УстановитьПараметр("НачПериода", ДатаНач);
	Запрос.УстановитьПараметр("КонПериода", ДатаКон);
	Запрос.УстановитьПараметр("СтатьяНаемный", СтатьяНаемный);
	Запрос.УстановитьПараметр("СтатьяЗП", СтатьяЗП);
	Запрос.УстановитьПараметр("НомГруппаНаемный", НомГруппаНаемн);
	Запрос.УстановитьПараметр("Я10", Я10);
	
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	
	
	// Получаем таблицу значений из COM-объекта
    // COMОбъект в -> строку
    // Запишем COMОбъект в строку на стороне базы-источника 
    стр_ТЗ = Соединение.ЗначениеВСтрокуВнутр(Результат);

    // получим таблицу значений из строки
    ТЗ = ЗначениеИзСтрокиВнутр(стр_ТЗ);	
	
	//Пока Результат.Следующий() Цикл
	//	НовСтр=ВнешниеДанные.Добавить();
	//	ВнешниеДанныеЗаполнитьЗначенияСвойств(НовСтр,Результат);
	//КонецЦикла;
	
	//Связь между таблицей значений и именами в СКД 
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	//Компоновка данных 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	//Вывод результата ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
