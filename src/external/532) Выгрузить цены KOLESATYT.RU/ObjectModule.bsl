                        
Функция ВыгрузитьЦены(ВыгружатьНаСайт=истина) экспорт
	
	НоменклатураНаОстатках = НоменклатураНаОстатках();
	//1. для дисков получаем цены контрагента (11011) "мин.рек.РОЗН.цены" и цены контрагента (94291)"для ценообразования KOLESATYT"
	// цены "для ценообразования KOLESATYT" имеют больший приоритет, чем "мин.рек.РОЗН.цены"
	КонтрагентРРЦ = Справочники.Контрагенты.НайтиПоКоду("11011");
	КонтрагентДляЦенообразованияKOLESATYT = Справочники.Контрагенты.НайтиПоКоду("94291");
	КонтрагентДляЦенообразованияKOLESATYT_АКЦИИ = Справочники.Контрагенты.НайтиПоКоду("95572");

	
	отбор = новый структура("ВидТовара");
	отбор.ВидТовара = Перечисления.ВидыТоваров.Диски;
	НайденныеСтроки = НоменклатураНаОстатках.НайтиСтроки(отбор);
	ДискиНаОстатках = новый СписокЗначений;
	для каждого стр из НайденныеСтроки цикл
		ДискиНаОстатках.Добавить(стр.Номенклатура);
	КонецЦикла;
	списНаОстатках = новый СписокЗначений;
	списНаОстатках.ЗагрузитьЗначения( НоменклатураНаОстатках.ВыгрузитьКолонку("Номенклатура") );
	
	
	РРЦДиски = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(КонтрагентРРЦ, ДискиНаОстатках);
	//ценыДляЦенообразования = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(КонтрагентДляЦенообразованияKOLESATYT, списНаОстатках);
	
	Если ПолучитьДокПолитикиЦенообразования(КонтрагентДляЦенообразованияKOLESATYT)= неопределено тогда
		//+++ 28.05.2015
		флЭкспорт =  КонтрагентДляЦенообразованияKOLESATYT.Экспорт И КонтрагентДляЦенообразованияKOLESATYT.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов.Код<>"643";
		Если флЭкспорт тогда
			ТабЗнач = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСвЭкспорт(КонтрагентДляЦенообразованияKOLESATYT, списНаОстатках);
		иначе
			ТабЗнач = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(КонтрагентДляЦенообразованияKOLESATYT, списНаОстатках);//+++ 23.10.2014 ДатаСреза !
		КонецЕсли;
	Иначе  //-----------------------------расчет по политике ценообразования----------------------------------------
		ценыДляЦенообразования = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(КонтрагентДляЦенообразованияKOLESATYT, списНаОстатках); 
	КонецЕсли;
	
	Если ПолучитьДокПолитикиЦенообразования(КонтрагентДляЦенообразованияKOLESATYT_АКЦИИ)= неопределено тогда
		//+++ 28.05.2015
		//флЭкспорт =  КонтрагентДляЦенообразованияKOLESATYT_АКЦИИ.Экспорт И КонтрагентДляЦенообразованияKOLESATYT_АКЦИИ.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов.Код<>"643";
		//Если флЭкспорт тогда
		//	ТабЗнач_Акции = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСвЭкспорт(КонтрагентДляЦенообразованияKOLESATYT_АКЦИИ, списНаОстатках);
		//иначе
		//	ТабЗнач_Акции = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(КонтрагентДляЦенообразованияKOLESATYT_АКЦИИ, списНаОстатках);//+++ 23.10.2014 ДатаСреза !
		//КонецЕсли;
	Иначе  //-----------------------------расчет по политике ценообразования----------------------------------------
		ценыДляЦенообразования_Акции = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(КонтрагентДляЦенообразованияKOLESATYT_АКЦИИ, списНаОстатках); 
	КонецЕсли;
	
	Если ценыДляЦенообразования_Акции = неопределено тогда
		ценыДляЦенообразования_Акции = ценыДляЦенообразования.скопировать();
		ценыДляЦенообразования_Акции.Очистить();
	КонецЕсли;
	
	ценыДляЦенообразования.Сортировать("Приоритет");
	//ценыДляЦенообразования.выбратьСтроку();
	//ТексЗапросаБонусы =  ПолучитьБонусы(ложь).ТекстЗапросаБонусы;

	МВТ = новый МенеджерВременныхТаблиц;
	Запрос = новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	тзЦеныДляЦенообразования.Приоритет,
	               |	тзЦеныДляЦенообразования.Номенклатура,
	               |	тзЦеныДляЦенообразования.Код,
	               |	тзЦеныДляЦенообразования.ЦенаПоТипуЦен,
	               |	тзЦеныДляЦенообразования.МинимальнаяЦена,
	               |	тзЦеныДляЦенообразования.СкидкаПредоплаты,
	               |	тзЦеныДляЦенообразования.ЦенаСоСкидкойПредоплаты,
	               |	""Для ценообразования"" КАК Вид
	               |ПОМЕСТИТЬ втОснова
	               |ИЗ
	               |	&тзЦеныДляЦенообразования КАК тзЦеныДляЦенообразования
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	тзЦеныДляЦенообразования_Акции.Приоритет,
	               |	тзЦеныДляЦенообразования_Акции.Номенклатура,
	               |	тзЦеныДляЦенообразования_Акции.Код,
	               |	тзЦеныДляЦенообразования_Акции.ЦенаСоСкидкойПредоплаты,
	               |	""Акции"" КАК Вид
	               |ПОМЕСТИТЬ втАкции
	               |ИЗ
	               |	&тзЦеныДляЦенообразования_Акции КАК тзЦеныДляЦенообразования_Акции
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	тзЦеныРРЦ.Приоритет,
	               |	тзЦеныРРЦ.Номенклатура,
	               |	тзЦеныРРЦ.Код,
	               |	тзЦеныРРЦ.ЦенаСоСкидкойПредоплаты,
	               |	""РРЦ"" КАК Вид
	               |ПОМЕСТИТЬ втРРЦ
	               |ИЗ
	               |	&тзЦеныРРЦ КАК тзЦеныРРЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПартииТоваровНаСкладахОстатки.Номенклатура,
	               |	СУММА(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток) КАК СтоимостьОстаток,
	               |	СУММА(ПартииТоваровНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ втОстатки
	               |ИЗ
	               |	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(, Склад.ЗапретитьИспользование = ЛОЖЬ) КАК ПартииТоваровНаСкладахОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПартииТоваровНаСкладахОстатки.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	втОснова.Номенклатура,
	               |	&ТекДата КАК Период
	               |ПОМЕСТИТЬ втПродажи
	               |ИЗ
	               |	втОснова КАК втОснова
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втПродажи.Период,
	               |	втПродажи.Номенклатура,
	               |	НоменклатураСпр.НоменклатурнаяГруппа,
	               |	НоменклатураСпр.Производитель,
	               |	НоменклатураСпр.Модель,
	               |	Типоразмеры.Диаметр
	               |ПОМЕСТИТЬ втНом
	               |ИЗ
	               |	втПродажи КАК втПродажи
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Типоразмеры КАК Типоразмеры
	               |			ПО НоменклатураСпр.Типоразмер = Типоразмеры.Ссылка
	               |		ПО втПродажи.Номенклатура = НоменклатураСпр.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втНом.Период,
	               |	БонусыПоставщиковИнтернетМагазина.Приоритет,
	               |	втНом.Номенклатура,
	               |	БонусыПоставщиковИнтернетМагазина.Бонус,
	               |	БонусыПоставщиковИнтернетМагазина.Период КАК ПериодБонуса
	               |ПОМЕСТИТЬ вт2
	               |ИЗ
	               |	втНом КАК втНом
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БонусыПоставщиковИнтернетМагазина КАК БонусыПоставщиковИнтернетМагазина
	               |		ПО (ВЫБОР
	               |				КОГДА БонусыПоставщиковИнтернетМагазина.НоменклатурнаяГруппа <> ЗНАЧЕНИЕ(справочник.НоменклатурныеГруппы.Пустаяссылка)
	               |					ТОГДА втНом.НоменклатурнаяГруппа = БонусыПоставщиковИнтернетМагазина.НоменклатурнаяГруппа
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ)
	               |			И (ВЫБОР
	               |				КОГДА БонусыПоставщиковИнтернетМагазина.Производитель <> ЗНАЧЕНИЕ(справочник.производители.Пустаяссылка)
	               |					ТОГДА втНом.Производитель = БонусыПоставщиковИнтернетМагазина.Производитель
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ)
	               |			И (ВЫБОР
	               |				КОГДА БонусыПоставщиковИнтернетМагазина.Модель <> ЗНАЧЕНИЕ(справочник.МоделиТоваров.Пустаяссылка)
	               |					ТОГДА втНом.Модель = БонусыПоставщиковИнтернетМагазина.Модель
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ)
	               |			И (ВЫБОР
	               |				КОГДА БонусыПоставщиковИнтернетМагазина.Диаметр <> """"
	               |					ТОГДА втНом.Диаметр = БонусыПоставщиковИнтернетМагазина.Диаметр
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ)
	               |			И втНом.Период >= БонусыПоставщиковИнтернетМагазина.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВсеБонусы.Период,
	               |	ВсеБонусы.Ссылка,
	               |	ВсеБонусы.Бонус
	               |ПОМЕСТИТЬ втБонусыПоставщиков
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		вт2.Период КАК Период,
	               |		вт2.Номенклатура КАК Ссылка,
	               |		МАКСИМУМ(вт2.Бонус) КАК Бонус
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			вт2.Период КАК Период,
	               |			вт2.Номенклатура КАК Номенклатура,
	               |			МАКСИМУМ(вт2.ПериодБонуса) КАК ПериодБонуса
	               |		ИЗ
	               |			вт2 КАК вт2
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			вт2.Период,
	               |			вт2.Номенклатура) КАК А
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт2 КАК вт2
	               |			ПО А.Период = вт2.Период
	               |				И А.Номенклатура = вт2.Номенклатура
	               |				И А.ПериодБонуса = вт2.ПериодБонуса
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		вт2.Период,
	               |		вт2.Номенклатура) КАК ВсеБонусы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втОснова.Номенклатура,
	               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ЦенаМРИЦ
	               |ПОМЕСТИТЬ втЦеныМРИЦ
	               |ИЗ
	               |	втОснова КАК втОснова
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &ТипМРИЦ) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО втОснова.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втОстатки.Номенклатура,
	               |	МАКСИМУМ(ВЫРАЗИТЬ(втОстатки.СтоимостьОстаток / втОстатки.КоличествоОстаток КАК ЧИСЛО(15, 0))) КАК Себестоимость,
	               |	МАКСИМУМ(ВЫРАЗИТЬ(втОстатки.СтоимостьОстаток / втОстатки.КоличествоОстаток - втОстатки.СтоимостьОстаток / втОстатки.КоличествоОстаток / 1.18 * ЕСТЬNULL(втБонусыПоставщиков.Бонус, 0) / 100 КАК ЧИСЛО(15, 0))) КАК СебестоимостьСУчетомБонуса,
	               |	МИНИМУМ(ЕСТЬNULL(втБонусыПоставщиков.Бонус, 0)) КАК Бонус
	               |ПОМЕСТИТЬ втСебестоимость
	               |ИЗ
	               |	втОстатки КАК втОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втБонусыПоставщиков КАК втБонусыПоставщиков
	               |		ПО втОстатки.Номенклатура = втБонусыПоставщиков.Ссылка
	               |			И (&ТекДата = втБонусыПоставщиков.Период)
	               |ГДЕ
	               |	втОстатки.СтоимостьОстаток > 0
	               |	И втОстатки.КоличествоОстаток > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втОстатки.Номенклатура";
				 Запрос.Текст=Запрос.Текст+"
				|;
				|
				|выбрать различные * ,
				|  втОснова.Номенклатура.ВидТовара как ВидТовара,
				|	ЕстьNULL(втСебестоимость.Себестоимость,0) как Себестоимость,
				|	ЕстьNULL(втСебестоимость.СебестоимостьСУчетомБонуса,0) как СебестоимостьСУчетомБонуса,
				|	ЕстьNULL(втРРЦ.ЦенаСоСкидкойПредоплаты,0) как ЦенаРРЦ,
				|	ЕстьNULL(втЦеныМРИЦ.ЦенаМРИЦ,0) как ЦенаМРИЦ,
				|	ЕстьNULL(втАкции.ЦенаСоСкидкойПредоплаты,0) как ЦенаАкционная
			 	|из втОснова
			 	|ЛЕВОЕ СОЕДИНЕНИЕ втСебестоимость КАК втСебестоимость
			 	|ПО втОснова.Номенклатура = втСебестоимость.Номенклатура
				|ЛЕВОЕ СОЕДИНЕНИЕ втРРЦ КАК втРРЦ
			 	|ПО втОснова.Номенклатура = втРРЦ.Номенклатура
				|ЛЕВОЕ СОЕДИНЕНИЕ втЦеныМРИЦ КАК втЦеныМРИЦ
			 	|ПО втОснова.Номенклатура = втЦеныМРИЦ.Номенклатура
				|ЛЕВОЕ СОЕДИНЕНИЕ втАкции КАК втАкции
			 	|ПО втОснова.Номенклатура = втАкции.Номенклатура
                |где втОснова.ЦенаСоСкидкойПредоплаты>0
			 	|Упорядочить по 
			 	|	втОснова.Номенклатура.ВидТовара убыв,
			 	|	втОснова.Номенклатура убыв
			 	|	АВТОУПОРЯДОЧИВАНИЕ";

	
				 Запрос.УстановитьПараметр("ВидТовараДиски",Перечисления.ВидыТоваров.Диски);
				 Запрос.УстановитьПараметр("ТекДата",НачалоДня(ТекущаяДата()));

				 Запрос.УстановитьПараметр("КонтрагентДляЦенообразованияКолесаТут",КонтрагентДляЦенообразованияKOLESATYT);
				 Запрос.УстановитьПараметр("тзЦеныРРЦ",РРЦДиски);
				 Запрос.УстановитьПараметр("ТипМРИЦ",Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00025"));
				 Запрос.УстановитьПараметр("тзЦеныДляЦенообразования_Акции",ценыДляЦенообразования_Акции);
				 Запрос.УстановитьПараметр("тзЦеныДляЦенообразования",ценыДляЦенообразования);
				 Рез = Запрос.Выполнить().выгрузить();
				 Сообщить("Всего кол: "+Рез.Количество());
				 темп = Рез.Скопировать();
				 Темп.Свернуть("Номенклатура");
				 Сообщить("уникально кол: "+темп.Количество());
				 //Рез.ВыбратьСтроку();
				 
				 //Запрос2= новый Запрос;
				 //Запрос2.МенеджерВременныхТаблиц = мвт;
				 //Запрос2.Текст="выбрать * из втБонусыПоставщиков";
				 //Запрос2.Выполнить().Выгрузить().ВыбратьСтроку();
				 
				ЗаписьXML = Новый ЗаписьXML;
				ИмяФайлаЦен = ПолучитьИмяВременногоФайла("xml");
				ЗаписьXML.ОткрытьФайл(ИмяФайлаЦен);
				ЗаписьXML.ЗаписатьОбъявлениеXML();
				
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("Цены");
				
				 макет = ПолучитьМакет("Макет");
				 ТабДок = новый ТабличныйДокумент;
				 ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				 ТабДок.Вывести(ОбластьШапка);
				 ТабДок.ФиксацияСверху=ТабДок.ВысотаТаблицы;
				 ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				 
				 Для каждого стр из Рез цикл
					ОбластьСтрока.Параметры.Заполнить(стр);
					ОбластьСтрока.Параметры.НаценкаПроц = ?(стр.Себестоимость<>0,(стр.ЦенаСоСкидкойПредоплаты-стр.Себестоимость)/стр.Себестоимость*100,"!!!");
					ТабДок.Вывести(ОбластьСтрока);
					ЗаписьXML.ЗаписатьНачалоЭлемента("Товар");
					ЗаписьXML.ЗаписатьАтрибут("Код",СокрЛП(стр.Код));
					ЗаписьXML.ЗаписатьАтрибут("Цена",Формат(стр.ЦенаСоСкидкойПредоплаты,"ЧДЦ=0; ЧГ=0"));
					ЗаписьXML.ЗаписатьАтрибут("Себестоимость",Формат(стр.Себестоимость,"ЧДЦ=0; ЧГ=0"));
					ЗаписьXML.ЗаписатьАтрибут("СебестоимостьСУчетомБонуса",Формат(стр.СебестоимостьСУчетомБонуса,"ЧДЦ=0; ЧГ=0"));
					ЗаписьXML.ЗаписатьАтрибут("ЦенаМРЦ",Формат(стр.ЦенаРРЦ,"ЧДЦ=0; ЧГ=0"));
					ЗаписьXML.ЗаписатьАтрибут("ЦенаМРИЦ",Формат(стр.ЦенаМРИЦ,"ЧДЦ=0; ЧГ=0"));

					
					Если стр.ЦенаАкционная > 0 тогда
						ЗаписьXML.ЗаписатьАтрибут("ЦенаПоАкции",Формат(стр.ЦенаАкционная,"ЧДЦ=0; ЧГ=0"));
					КонецЕсли;
					
					ЗаписьXML.ЗаписатьКонецЭлемента();
				КонецЦикла;
				
				ЗаписьXML.ЗаписатьКонецЭлемента();
				ЗаписьXML.Закрыть();
				#Если  клиент тогда
					Сообщить(ИмяФайлаЦен);
				#КонецЕсли
				//ТабДок.Показать("Цены KOLESATYT.RU");
                Попытка
					ЗаписатьЦеныВРСЦеныНоменклатуры(Рез);
				Исключение
				КонецПопытки;
				
				Если ВыгружатьНаСайт тогда
					Попытка
						//ИмяФайлаСообщения="test_rest_1c.xml";	
						ИмяФайлаСообщения="price_1c.xml";
						//FTPсервер = "kolesatyt.ru";
						FTPсервер = "188.93.20.230";
                        //FTPсервер = "31.186.103.151";
						//врФТП = Новый FTPСоединение(FTPсервер,,"bitrix", "eequajaiz4uNaku",, Истина );                                  
						врФТП = Новый FTPСоединение(FTPсервер,,"user1c", "oebohaCh5ohyaiko6Aer",, Истина );
						//ПутьКфайлуFTP = "www/_common/upload/new_1c/";
						ПутьКфайлуFTP = "/upload/1c/";
						врФТП.Записать(ИмяФайлаЦен , ПутьКфайлуFTP+ИмяФайлаСообщения);
						/// Для франчайзи
						врФТП = Новый FTPСоединение(FTPсервер,,"1cuser", "5kmeoGdva",, Истина );
						//ПутьКфайлуFTP = "www/_common/upload/new_1c/";
						ПутьКфайлуFTP = "/price/";
						врФТП.Записать(ИмяФайлаЦен , ПутьКфайлуFTP+ИмяФайлаСообщения);

						
						//запускаем скрипт
						//Соединение = Неопределено;
						//
						//СтруктураПараметровСайта = Новый Структура;
						//СтруктураПараметровСайта.Вставить("ИмяПользователя", "1cvigr");         
						//СтруктураПараметровСайта.Вставить("Пароль"		   , "$Tiptronic!13");
						//СтруктураПараметровСайта.Вставить("Сервер"		, "kolesatyt.ru");
						//СтруктураПараметровСайта.Вставить("Порт"		, неопределено);
						//СтруктураПараметровСайта.Вставить("ПроксиИспользование"  , Ложь);
						//СтруктураПараметровСайта.Вставить("ЗащищенноеСоединение",  ЛОЖЬ);
						//СтруктураПараметровСайта.Вставить("ПроксиСервер"		 , "");
						//СтруктураПараметровСайта.Вставить("ПроксиПорт"		     , 0);
						//СтруктураПараметровСайта.Вставить("ПроксиИмяПользователя", "");
						//СтруктураПараметровСайта.Вставить("ПроксиПароль"		 , "");
						
						//СтруктураПараметровСайта.Вставить("АдресСкрипта", "/local/scripts/1c/1c_rest.php");
						//ЗапуститьСкрипт(СтруктураПараметровСайта);
					Исключение
						ТекстОшибки=ОписаниеОшибки();
						Сообщить(ТекстОшибки);
					КонецПопытки;
				КонецЕсли;
				Возврат ТабДок;
КонецФункции

функция ПолучитьДокПолитикиЦенообразования(Контрагент)
	Если Контрагент.Пустая() тогда
		возврат Неопределено;
	КонецЕсли;	
	
	ЗапросПоискПолитики=Новый Запрос;	
	
	ЗапросПоискПолитики.Текст ="ВЫБРАТЬ ПЕРВЫЕ 1
	                           |	ПолитикаЦенообразования.Ссылка
	                           |ИЗ
	                           |	Документ.ПолитикаЦенообразования КАК ПолитикаЦенообразования
	                           |ГДЕ
	                           |	ПолитикаЦенообразования.Контрагент = &Контрагент
	                           |	И ПолитикаЦенообразования.Ссылка.Проведен
	                           |
	                           |УПОРЯДОЧИТЬ ПО
	                           |	ПолитикаЦенообразования.Дата УБЫВ";
	
	ЗапросПоискПолитики.УстановитьПараметр("Контрагент",Контрагент);
	
	РезультатПолитика= ЗапросПоискПолитики.Выполнить();
	
	Если РезультатПолитика.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		ВыборкаПолитика=РезультатПолитика.Выбрать();
		ВыборкаПолитика.Следующий();
		ТекущаяПолитика=ВыборкаПолитика.Ссылка;
		возврат ТекущаяПолитика;
	КонецЕсли;	     // для контрагента нет политики ценообразования
	
	
КонецФункции

Функция НоменклатураНаОстатках()
	запросПоОстаткам = новый Запрос;
	запросПоОстаткам.Текст ="ВЫБРАТЬ
	                        |	Запрос1.Номенклатура КАК Номенклатура,
	                        |	СУММА(Запрос1.КоличествоОстаток) КАК КоличествоОстаток,
	                        |	Запрос1.Номенклатура.ВидТовара КАК ВидТовара
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	                        |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
	                        |	ИЗ
	                        |		РегистрНакопления.ТоварыНаСкладах.Остатки(, НЕ Склад.ЗапретитьИспользование) КАК ТоварыНаСкладахОстатки
	                        |	
	                        |	ОБЪЕДИНИТЬ ВСЕ
	                        |	
	                        |	ВЫБРАТЬ
	                        |		ТоварыОТХ.Номенклатура,
	                        |		ЕСТЬNULL(ТоварыОТХ.КоличествоОстаток, 0)
	                        |	ИЗ
	                        |		РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	                        |				,
	                        |				Контрагент В (&СписокКонтрОТХ)
	                        |					И НЕ Склад.Транзитный
	                        |					И НЕ Склад.ЗапретитьИспользование) КАК ТоварыОТХ
	                        |	
	                        |	ОБЪЕДИНИТЬ ВСЕ
	                        |	
	                        |	ВЫБРАТЬ
	                        |		ОстаткиНоменклатурыКонтрагентов.Номенклатура,
	                        |		СУММА(ОстаткиНоменклатурыКонтрагентов.Остаток)
	                        |	ИЗ
	                        |		РегистрСведений.ОстаткиНоменклатурыКонтрагентов КАК ОстаткиНоменклатурыКонтрагентов
	                        |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СрокиДоставки КАК СрокиДоставки
	                        |			ПО ОстаткиНоменклатурыКонтрагентов.Контрагент = СрокиДоставки.Поставщик
	                        |	ГДЕ
	                        |		СрокиДоставки.ОТХ = ЛОЖЬ
	                        |		И СрокиДоставки.Включен
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		ОстаткиНоменклатурыКонтрагентов.Номенклатура
	                        |	
	                        |	ОБЪЕДИНИТЬ ВСЕ
	                        |	
	                        |	ВЫБРАТЬ
	                        |		ЗаказыПоставщикамОстатки.Номенклатура,
	                        |		СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток)
	                        |	ИЗ
	                        |		РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		ЗаказыПоставщикамОстатки.Номенклатура
	                        |	
	                        |	ОБЪЕДИНИТЬ ВСЕ
	                        |	
	                        |	ВЫБРАТЬ
	                        |		Номенклатура.Ссылка,
	                        |		16
	                        |	ИЗ
	                        |		Справочник.Номенклатура КАК Номенклатура
	                        |	ГДЕ
	                        |		Номенклатура.ПометкаУдаления = ЛОЖЬ
	                        |		И Номенклатура.Производитель = &ПроизводительVISSOL
	                        |		И Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппаКованые) КАК Запрос1
	                        |
	                        |СГРУППИРОВАТЬ ПО
	                        |	Запрос1.Номенклатура,
	                        |	Запрос1.Номенклатура.ВидТовара";
	СписокКонтрОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);
	запросПоОстаткам.Параметры.Вставить("СписокКонтрОТХ",СписокКонтрОТХ);
	
	запросПоОстаткам.Параметры.Вставить("Подразделение",справочники.Подразделения.ПустаяСсылка() );  //ЯШТ
	
	запросПоОстаткам.УстановитьПараметр("ПроизводительVISSOL",Справочники.Производители.НайтиПоКоду("3657"));
	запросПоОстаткам.УстановитьПараметр("НоменклатурнаяГруппаКованые",Справочники.НоменклатурныеГруппы.НайтиПоКоду("00022"));

	табЗнач = запросПоОстаткам.Выполнить().Выгрузить();
	возврат табЗнач;
	//списНом = новый СписокЗначений;
	//списНом.ЗагрузитьЗначения( табЗнач.ВыгрузитьКолонку("Номенклатура") );
КонецФункции

Процедура ЗаписатьЦеныВРСЦеныНоменклатуры(тз)
	типЦенКТ = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00012");
	ВалютаРуб = Справочники.Валюты.НайтиПоКоду("643");
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	тзЦены.Номенклатура,
	             |	тзЦены.ЦенаСоСкидкойПредоплаты
	             |ПОМЕСТИТЬ втЦены
	             |ИЗ
	             |	&тзЦены КАК тзЦены
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	             |	ЦеныНоменклатурыСрезПоследних.Цена
	             |ПОМЕСТИТЬ втЦенаПоТипу
	             |ИЗ
	             |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &ТипКолесаТУТ) КАК ЦеныНоменклатурыСрезПоследних
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втЦены.Номенклатура,
	             |	втЦены.ЦенаСоСкидкойПредоплаты,
	             |	НоменклатураСпр.ЕдиницаХраненияОстатков
	             |ИЗ
	             |	втЦены КАК втЦены
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	             |		ПО втЦены.Номенклатура = НоменклатураСпр.Ссылка
	             |ГДЕ
	             |	НЕ (втЦены.Номенклатура, втЦены.ЦенаСоСкидкойПредоплаты) В
	             |				(ВЫБРАТЬ
	             |					втЦенаПоТипу.Номенклатура,
	             |					втЦенаПоТипу.Цена
	             |				ИЗ
	             |					втЦенаПоТипу)";
				 Запрос.УстановитьПараметр("тзЦены",тз);
				 Запрос.УстановитьПараметр("ТипКолесаТУТ",типЦенКТ);
				 Рез = Запрос.Выполнить().Выбрать();
				 
				 Если Рез.Количество()>0 тогда
					 ДокУстановкаЦен = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
					 ДокУстановкаЦен.Дата = ТекущаяДата();
					 ДокУстановкаЦен.Комментарий = "Цена сайта kolesatyt";
					 
					 табЦены = ДокУстановкаЦен.ТипыЦен;
					 нстр = табЦены.Добавить();
					 нстр.ТипЦен = типЦенКТ;
					 
					 табТовары = ДокУстановкаЦен.Товары;
					 
					 Пока Рез.Следующий() Цикл
						 нстр = табТовары.Добавить();
						 нстр.Номенклатура = рез.Номенклатура;
						 нстр.Цена = Рез.ЦенаСоСкидкойПредоплаты;
						 нстр.ЕдиницаИзмерения = рез.ЕдиницаХраненияОстатков;
						 нстр.ТипЦен = типЦенКТ;
						 нстр.Валюта = ВалютаРуб;
					 КонецЦикла;
					 ДокУстановкаЦен.Записать(РежимЗаписиДокумента.Проведение);
				 КонецЕсли;
КонецПроцедуры