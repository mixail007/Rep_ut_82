

Процедура УтвердитьНажатие(Элемент)
	УтвердитьПострочно(Дерево);
КонецПроцедуры

процедура Утвердитьпострочно(Элемент);
	Для Каждого стр из Элемент.строки Цикл
		Если Стр.Строки.Количество()>0 тогда
			Утвердитьпострочно(стр);
		иначе	
			Если стр.Пометка тогда 
				Отбор = Новый Структура();
				Отбор.Вставить("МесяцПланирования",ПериодПланирования);
				Отбор.Вставить("ПриходРасход",Перечисления.ВидыДвиженийПриходРасход.Приход);
				Отбор.Вставить("Подразделение",стр.Подразделение);
				Отбор.Вставить("Статья",стр.Статья);
				Отбор.Вставить("Контрагент",стр.Контрагент);
				Отбор.Вставить("ОтветственноеЛицо",стр.Ответственный);
				Отбор.Вставить("АктивностьЗаписи",Истина);
				Отбор.Вставить("Валюта",стр.Валюта);
				ЗаписьРегистра = РегистрыСведений.ПланДвиженийДенежныхСредств.Получить(Отбор);
				Запись = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(Запись,ЗаписьРегистра);
				ЗаполнитьЗначенияСвойств(Запись,Отбор);
				Запись.Записать(Истина);
				Запись.ОтветственноеЛицо = глТекущийпользователь;
				Запись.Согласован = Истина;
				Если Не значениеЗаполнено(Запись.контрагент) тогда
				Запись.Контрагент = Запись.Исполнитель;	
				конецЕсли;	
				Запись.Записать(Истина);
				стр.Ответственный = глТекущийпользователь;
			конецЕсли;
		конецЕсли;	
	конецЦикла;
конецпроцедуры

Процедура ЗаполнитьНажатие(Элемент)
	Если ПланФакт Тогда
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(-ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрОборот) КАК СуммаУпрОборот,
		|	ВЫБОР
		|		КОГДА ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
		|			ТОГДА ВЫБОР
		|					КОГДА ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение = &КТ
		|						ТОГДА &Головное
		|					ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
		|	КОНЕЦ КАК ОтветственноеЛицо,
		|	ВЫБОР
		|		КОГДА ВзаиморасчетыСКонтрагентамиОбороты.Сделка.Дата >= &НачМесяца
		|				ИЛИ ВзаиморасчетыСКонтрагентамиОбороты.Сделка = НЕОПРЕДЕЛЕНО
		|			ТОГДА ВЫБОР
		|					КОГДА ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение = &Кт
		|						ТОГДА &Федунов
		|					ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
		|				КОНЕЦ
		|		ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.Владелец
		|	КОНЕЦ КАК Контрагент
		|ПОМЕСТИТЬ Факт
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(&НачМесяца, &КонМесяца, Регистратор, ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениевзаиморасчетовПоДоговорам.ПоЗаказам)) КАК ВзаиморасчетыСКонтрагентамиОбороты
		|ГДЕ
		|	(ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ИЛИ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
		|			ИЛИ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ОплатаОтПокупателяПлатежнойКартой
		|			ИЛИ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.Взаимозачет
		|				И ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.УчитыватьДляРасчетаПремии = ИСТИНА)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)
		|			ТОГДА ВЫБОР
		|					КОГДА ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение = &КТ
		|						ТОГДА &Головное
		|					ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВзаиморасчетыСКонтрагентамиОбороты.Сделка.Дата >= &НачМесяца
		|				ИЛИ ВзаиморасчетыСКонтрагентамиОбороты.Сделка = НЕОПРЕДЕЛЕНО
		|			ТОГДА ВЫБОР
		|					КОГДА ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение = &Кт
		|						ТОГДА &Федунов
		|					ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
		|				КОНЕЦ
		|		ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.Владелец
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛОЖЬ КАК Пометка,
		|	ПланДвиженийДенежныхСредств.Исполнитель.НаправлениеПродаж КАК НаправлениеПродаж,
		|	ПланДвиженийДенежныхСредств.ОтветственноеЛицо КАК Ответственный,
		|	ПланДвиженийДенежныхСредств.Исполнитель КАК Исполнитель,
		|	ПланДвиженийДенежныхСредств.Контрагент КАК Контрагент,
		|	ПланДвиженийДенежныхСредств.Неделя1 + ПланДвиженийДенежныхСредств.Неделя2 + ПланДвиженийДенежныхСредств.Неделя3 + ПланДвиженийДенежныхСредств.Неделя4 + ПланДвиженийДенежныхСредств.Неделя5 КАК СуммаПлан,
		|	ПланДвиженийДенежныхСредств.Дебиторка КАК Дебиторка,
		|	ПланДвиженийДенежныхСредств.Неделя1 + ПланДвиженийДенежныхСредств.Неделя2 + ПланДвиженийДенежныхСредств.Неделя3 + ПланДвиженийДенежныхСредств.Неделя4 + ПланДвиженийДенежныхСредств.Неделя5 - ПланДвиженийДенежныхСредств.Дебиторка КАК Разница,
		|	ПланДвиженийДенежныхСредств.Подразделение КАК Подразделение,
		|	ПланДвиженийДенежныхСредств.Статья,
		|	ПланДвиженийДенежныхСредств.Согласован,
		|	Факт.СуммаУпрОборот КАК СуммаФакт,
		|	ЕСТЬNULL(ПланДвиженийДенежныхСредств.Неделя1, 0) + ЕСТЬNULL(ПланДвиженийДенежныхСредств.Неделя2, 0) + ЕСТЬNULL(ПланДвиженийДенежныхСредств.Неделя3, 0) + ЕСТЬNULL(ПланДвиженийДенежныхСредств.Неделя4, 0) + ЕСТЬNULL(ПланДвиженийДенежныхСредств.Неделя5, 0) - ЕСТЬNULL(Факт.СуммаУпрОборот, 0) КАК РазницаПланФакт,
		|	ПланДвиженийДенежныхСредств.Комментарий
		|ИЗ
		|	РегистрСведений.ПланДвиженийДенежныхСредств КАК ПланДвиженийДенежныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ Факт КАК Факт
		|		ПО ПланДвиженийДенежныхСредств.Контрагент = Факт.Контрагент
		|			И (ВЫБОР
		|				КОГДА ПланДвиженийДенежныхСредств.Исполнитель.НаправлениеПродаж В (&СписокНаправлений)
		|					ТОГДА ПланДвиженийДенежныхСредств.Подразделение = Факт.ОтветственноеЛицо
		|				ИНАЧЕ ПланДвиженийДенежныхСредств.Исполнитель = Факт.ОтветственноеЛицо
		|			КОНЕЦ)
		|ГДЕ
		|	ПланДвиженийДенежныхСредств.МесяцПланирования = &МесяцПланирования
		|	И ПланДвиженийДенежныхСредств.ПриходРасход = &ПриходРасход
		|	И ПланДвиженийДенежныхСредств.АктивностьЗаписи = ИСТИНА
		|	И 99 = 99
		|	И ПланДвиженийДенежныхСредств.Исполнитель.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПланДвиженийДенежныхСредств.Подразделение.Наименование,
		|	ПланДвиженийДенежныхСредств.Исполнитель.НаправлениеПродаж.Наименование,
		|	ПланДвиженийДенежныхСредств.Контрагент.Наименование
		|ИТОГИ
		|	СУММА(СуммаПлан),
		|	СУММА(Дебиторка),
		|	СУММА(Разница),
		|	СУММА(СуммаФакт),
		|	СУММА(РазницаПланФакт)
		|ПО
		|	ОБЩИЕ,
		|	Подразделение,
		|	НаправлениеПродаж,
		|	Ответственный,
		|	Исполнитель";

	Запрос.УстановитьПараметр("МесяцПланирования", ПериодПланирования);
	Запрос.УстановитьПараметр("ПриходРасход", Перечисления.ВидыДвиженийПриходРасход.Приход);
	Запрос.УстановитьПараметр("НачМесяца",НачалоМесяца(ПериодПланирования));
	Запрос.УстановитьПараметр("КонМесяца",КонецМесяца(ПериодПланирования));
	Запрос.УстановитьПараметр("КТ",Справочники.Подразделения.НайтиПоКоду("00139"));
	Запрос.УстановитьПараметр("Головное",Справочники.Подразделения.НайтиПоКоду("00005"));
	Запрос.УстановитьПараметр("Федунов",Справочники.Пользователи.НайтиПоКоду("Федунов"));

	
	СписокНаправлений = Новый СписокЗначений;
	СписокНаправлений.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду("16"));
	СписокНаправлений.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду("4"));
	СписокНаправлений.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду("5"));
	СписокНаправлений.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду("6"));
	Запрос.УстановитьПараметр("СписокНаправлений",СписокНаправлений);
	Если не РольДоступна("ПолныеПрава") или ЗначениеЗаполнено(НаправлениеПродаж)  Тогда
		Если ЗначениеЗаполнено(НаправлениеПродаж) Тогда
			СписокНаправлениеПродаж = Новый СписокЗначений;
			СписокНаправлениеПродаж.Добавить(НаправлениеПродаж);
		иначе
			ЗапросНП = Новый Запрос;
			ЗапросНП.Текст = 
			"ВЫБРАТЬ
			|	НаправленияПродаж.Ссылка
			|ИЗ
			|	Справочник.НаправленияПродаж КАК НаправленияПродаж
			|ГДЕ
			|	НаправленияПродаж.ОтветственныйЗаПланирование = &ОтветственныйЗаПланирование";
			
			ЗапросНП.УстановитьПараметр("ОтветственныйЗаПланирование", глТекущийПользователь);
			
			РезультатНП = ЗапросНП.Выполнить().Выгрузить();
			
			СписокНаправлениеПродаж = РезультатНП.ВыгрузитьКолонку("Ссылка");
		конецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "99 = 99","ПланДвиженийДенежныхСредств.Исполнитель.НаправлениеПродаж В(&НаправленияПродаж)");
		Запрос.УстановитьПараметр("НаправленияПродаж",СписокНаправлениеПродаж);
	конецЕсли;	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если СписокНаправлениеПродаж = Неопределено Тогда
	Дерево.строки.Удалить(4);
    Дерево.строки.Удалить(3);
    Дерево.строки.Удалить(2);
    Дерево.строки.Удалить(1);
    иначе
    Дерево.строки.Удалить(1);
	конецЕсли;	
		
		
	иначе
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛОЖЬ КАК Пометка,
		|	ПланДвиженийДенежныхСредств.Исполнитель.НаправлениеПродаж КАК НаправлениеПродаж,
		|	ПланДвиженийДенежныхСредств.ОтветственноеЛицо КАК Ответственный,
		|	ПланДвиженийДенежныхСредств.Исполнитель КАК Исполнитель,
		|	ПланДвиженийДенежныхСредств.Контрагент,
		|	ПланДвиженийДенежныхСредств.Неделя1 + ПланДвиженийДенежныхСредств.Неделя2 + ПланДвиженийДенежныхСредств.Неделя3 + ПланДвиженийДенежныхСредств.Неделя4 + ПланДвиженийДенежныхСредств.Неделя5 КАК СуммаПлан,
		|	ПланДвиженийДенежныхСредств.Дебиторка КАК Дебиторка,
		|	ПланДвиженийДенежныхСредств.Неделя1 + ПланДвиженийДенежныхСредств.Неделя2 + ПланДвиженийДенежныхСредств.Неделя3 + ПланДвиженийДенежныхСредств.Неделя4 + ПланДвиженийДенежныхСредств.Неделя5 - ПланДвиженийДенежныхСредств.Дебиторка КАК Разница,
		|	ПланДвиженийДенежныхСредств.Подразделение,
		|	ПланДвиженийДенежныхСредств.Статья,
		|	ПланДвиженийДенежныхСредств.Согласован,
		|	ПланДвиженийДенежныхСредств.Комментарий,
		|	ПланДвиженийДенежныхСредств.Валюта КАК Валюта
		|ИЗ
		|	РегистрСведений.ПланДвиженийДенежныхСредств КАК ПланДвиженийДенежныхСредств
		|ГДЕ
		|	ПланДвиженийДенежныхСредств.МесяцПланирования = &МесяцПланирования
		|	И ПланДвиженийДенежныхСредств.ПриходРасход = &ПриходРасход
		|	И ПланДвиженийДенежныхСредств.АктивностьЗаписи = ИСТИНА
		|	И 99 = 99
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПланДвиженийДенежныхСредств.Исполнитель.НаправлениеПродаж.Наименование
		|ИТОГИ
		|	СУММА(СуммаПлан),
		|	СУММА(Дебиторка),
		|	СУММА(Разница)
		|ПО
		|	Валюта,
		|	НаправлениеПродаж,
		|	Ответственный,
		|	Исполнитель";

	Запрос.УстановитьПараметр("МесяцПланирования", ПериодПланирования);
	Запрос.УстановитьПараметр("ПриходРасход", Перечисления.ВидыДвиженийПриходРасход.Приход);

	Если не РольДоступна("ПолныеПрава") или ЗначениеЗаполнено(НаправлениеПродаж)  Тогда
		Если ЗначениеЗаполнено(НаправлениеПродаж) Тогда
			СписокНаправлениеПродаж = Новый СписокЗначений;
			СписокНаправлениеПродаж.Добавить(НаправлениеПродаж);
		иначе
			ЗапросНП = Новый Запрос;
			ЗапросНП.Текст = 
			"ВЫБРАТЬ
			|	НаправленияПродаж.Ссылка
			|ИЗ
			|	Справочник.НаправленияПродаж КАК НаправленияПродаж
			|ГДЕ
			|	НаправленияПродаж.ОтветственныйЗаПланирование = &ОтветственныйЗаПланирование";
			
			ЗапросНП.УстановитьПараметр("ОтветственныйЗаПланирование", глТекущийПользователь);
			
			РезультатНП = ЗапросНП.Выполнить().Выгрузить();
			
			СписокНаправлениеПродаж = РезультатНП.ВыгрузитьКолонку("Ссылка");
		конецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "99 = 99","ПланДвиженийДенежныхСредств.Исполнитель.НаправлениеПродаж В(&НаправленияПродаж)");
		Запрос.УстановитьПараметр("НаправленияПродаж",СписокНаправлениеПродаж);
	конецЕсли;	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	конецесли;
	
	
	
КонецПроцедуры

Процедура ПериодПланированияПриИзменении(Элемент)
	ПериодПланирования = НачалоМесяца(ПериодПланирования);
КонецПроцедуры

Процедура УстановитьНажатие(Элемент)
	УстановитьПометку(Дерево,Истина);
КонецПроцедуры


Процедура СнятьНажатие(Элемент)
	УстановитьПометку(Дерево,Ложь);
КонецПроцедуры


процедура Установитьпометку(Элемент,Пометка)
	Для каждого стр из Элемент.строки Цикл
		стр.пометка = Пометка;
		Установитьпометку(стр,пометка);
	конецЦикла;
	
конецпроцедуры	

Процедура НаправлениеПродажНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если не рольДоступна("полныеПрава") Тогда
		СтандартнаяОбработка = Ложь;
		ФормаВыбора = Справочники.НаправленияПродаж.ПолучитьФормуВыбора(,Элемент,);
		ФормаВыбора.Отбор.ОтветственныйЗаПланирование.Значение      = глТекущийпользователь;
		ФормаВыбора.Отбор.ОтветственныйЗаПланирование.Использование = Истина;
		ФормаВыбора.Открыть();
	конецесли;	
КонецПроцедуры


Процедура ДеревоПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если ОформлениеСтроки.ДанныеСтроки.Согласован = Истина Тогда
			ОформлениеСтроки.ЦветФона = webЦвета.СветлоЖелтый;
			ОформлениеСтроки.ячейки.Ответственный.Шрифт =  Новый Шрифт(,,Истина,,);
		конецЕсли;	
	конецЦикла;	
КонецПроцедуры


Процедура ДеревоПриИзмененииФлажка(Элемент, Колонка)
	УстановитьПометку(ЭлементыФормы.Дерево.ТекущиеДанные,ЭлементыФормы.Дерево.ТекущиеДанные.Пометка);
КонецПроцедуры


Процедура ПланФактПриИзменении(Элемент)
	Ответ = Вопрос("Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Дерево.Строки.Очистить();
	иначе
		ПланФакт   = НЕ ПланФакт;
	КонецЕсли;
	ЭлементыФормы.Утвердить.Доступность = НЕ ПланФакт;
КонецПроцедуры
 	