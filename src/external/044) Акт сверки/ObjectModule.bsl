Функция ПолучитьАкт(Контрагент, Организация, НачПериода, КонПериода, Флажок1, флПоДоговорам, ТаблицаДоговоров) экспорт
	
	//+++( 14.09.2012
	//Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
	//	СписокКонтрагентов = ПолучитьКонтрагентовПользователейПодразделения();
	//	Если СписокКонтрагентов.найтиПоЗначению(Контрагент)=неопределено тогда
	//		Сообщить("Вам не разрешено использовать контрагента: "+строка(Контрагент)+"
	//						|Нет ни одного договора по вашему подразделению!");
	//		возврат ложь;				
	//	КонецЕсли;					
	//КонецЕсли;//+++)
	
	НачДата = ?(ЗначениеНеЗаполнено(НачПериода),'20000101',НачалоДня(НачПериода));
	КонДата = ?(ЗначениеНеЗаполнено(КонПериода),КонецДня(ТекущаяДата()),КонецДня(КонПериода));
	
	ПредставлениеСписка="";
	//СписокДоговоров=Новый СписокЗначений;
	//Для каждого элемент из ДоговораКонтрагента Цикл
	//	Если элемент.Пометка Тогда
	//		СписокДоговоров.Добавить(элемент.ДоговорКонтрагента);
	//		Если ПредставлениеСписка="" Тогда
	//			ПредставлениеСписка=СокрЛП(Строка(элемент.ДоговорКонтрагента));
	//		Иначе
	//			ПредставлениеСписка=ПредставлениеСписка+","+СокрЛП(Строка(элемент.ДоговорКонтрагента));
	//		КонецЕсли;	
	//	КонецЕсли;	
	//КонецЦикла;	
	
	
	//Если СписокДоговоров.Количество()=0 Тогда
	//Сообщить("Не выбрано ни одного договора для взаиморасчетов");	
	//Возврат;
	//КонецЕсли;	
	
	ТабДок = Новый ТабличныйДокумент;
	Макет  = ПолучитьМакет("АктСверки");
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ОбластьЗаголовок   			 = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы			 = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьНачОстатки  			 = Макет.ПолучитьОбласть("НачОстатки");
	ОбластьОбороты     			 = Макет.ПолучитьОбласть("Обороты");
	ОбластьОборотыИтог 			 = Макет.ПолучитьОбласть("ОборотыИтог");
	ОбластьКонОстатки  			 = Макет.ПолучитьОбласть("КонОстатки");
	ОбластьПодвал      			 = Макет.ПолучитьОбласть("Подвал");
	ОбластьОбороты1    			 = Макет.ПолучитьОбласть("Обороты1");//+++ 20.10.2011
	ОбластьДоговорКонтрагента	 = Макет.ПолучитьОбласть("ДоговорКонтрагента");
	ОбластьПодписи				 = Макет.ПолучитьОбласть("Подписи");
	
	НазваниеОрганизации = Организация.НаименованиеПолное;
	Если ПустаяСтрока(НазваниеОрганизации) Тогда
		НазваниеОрганизации = Организация;
	КонецЕсли;
	
	НаименованиеКонтрагента = Контрагент.НаименованиеПолное;
	Если ПустаяСтрока(НаименованиеКонтрагента) Тогда
		НаименованиеКонтрагента = Контрагент;
	КонецЕсли;
	
	ОписаниеПериода = "Период: " + ПредставлениеПериода(НачДата, КонДата, "ФП = Истина");
	//ИмяПредставителяОрганизации = ПредставительОрганизации;
	//ИмяПредсатвителяКонтрагента = ПредставительКонтрагента;
	
	ТекстЗаголовка = "взаимных расчетов по состоянию на " + Формат(КонДата, "ДФ=dd.MM.yyyy") + Символы.ПС
	+ "между " + НазваниеОрганизации + Символы.ПС + "и " + НаименованиеКонтрагента;
	
	ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + ?(ТаблицаДоговоров.Количество()=1,"по договору "+СокрЛП(ТаблицаДоговоров[0].ДоговорКонтрагента),"по договорам из списка ");//+ПредставлениеСписка);
	
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = ТекстЗаголовка;
	
	//ДанныеПредставителяОрганизации = ДанныеФизЛица(Организация, ПредставительОрганизации, ДатаОкончания);
	//ФИОПредставителя = ?(ЗначениеНеЗаполнено(ДанныеПредставителяОрганизации.Фамилия),"",ДанныеПредставителяОрганизации.Фамилия
	//				+ ?(ЗначениеНеЗаполнено(ДанныеПредставителяОрганизации.Имя),""," "+ДанныеПредставителяОрганизации.Имя)
	//				+ ?(ЗначениеНеЗаполнено(ДанныеПредставителяОрганизации.Отчество),""," "+ДанныеПредставителяОрганизации.Отчество));
	//
	//СтрЗаголовокТаблица = "Мы, нижеподписавшиеся, " + ?(ЗначениеНеЗаполнено(ДанныеПредставителяОрганизации.Должность),"________________",ДанныеПредставителяОрганизации.Должность) + " " + НазваниеОрганизации 
	//			+ " " + ?(ФИОПредставителя<>"",ФИОПредставителя,"_______________________") + ", с одной стороны, "
	//			+ "и " + ?(ЗначениеНеЗаполнено(ПредставительКонтрагента.Должность),"________________",ПредставительКонтрагента.Должность) + " " + НаименованиеКонтрагента + " " 
	//			+ ?(ЗначениеНеЗаполнено(ПредставительКонтрагента),"_______________________",ПредставительКонтрагента) + ", с другой стороны, "
	//			+ "составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:";
	//
	ОбластьЗаголовок.Параметры.СтрЗаголовокТаблица = "";//СтрЗаголовокТаблица;
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТЗВалюты = ТаблицаДоговоров.Скопировать();
	ТЗВалюты.Свернуть("ВалютаВзаиморасчетов");
	
	Для каждого СтрТЗ ИЗ ТЗВалюты Цикл
		
		Отбор = Новый Структура();
		Отбор.Вставить("ВалютаВзаиморасчетов", СтрТЗ.ВалютаВзаиморасчетов);
		МассивСтрок = ТаблицаДоговоров.НайтиСтроки(Отбор);
		ПредставлениеСписка = "";
		СписокДоговоров = Новый СписокЗначений;
		
		Для каждого СтрМассива ИЗ МассивСтрок Цикл
			СписокДоговоров.Добавить(СтрМассива.ДоговорКонтрагента);
			Если ПредставлениеСписка = "" Тогда
				ПредставлениеСписка = СокрЛП(Строка(СтрМассива.ДоговорКонтрагента));
			Иначе                       
				ПредставлениеСписка = ПредставлениеСписка+","+СокрЛП(Строка(СтрМассива.ДоговорКонтрагента));
			КонецЕсли;
		КонецЦикла;
		
		ОбластьШапкаТаблицы.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		ОбластьШапкаТаблицы.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
		ОбластьШапкаТаблицы.Параметры.ВалютаДокумента =  СтрТЗ.ВалютаВзаиморасчетов;
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		
		ЗапросОстатки = Новый Запрос;
		ЗапросОстатки.Текст = "ВЫБРАТЬ
		|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ЕСТЬNULL(СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток), 0) КАК СуммаВзаиморасчетов
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата, ) КАК ВзаиморасчетыСКонтрагентамиОстатки
		|ГДЕ
		|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента В(&СписокДоговоров)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента
		|ИТОГИ
		|	СУММА(СуммаВзаиморасчетов)
		|ПО
		|	ОБЩИЕ,
		|	ДоговорКонтрагента";
		ЗапросОстатки.УстановитьПараметр("СписокДоговоров",СписокДоговоров);
		ЗапросОстатки.УстановитьПараметр("Дата",НачДата);
		
		РезЗапросНОстатки=ЗапросОстатки.Выполнить().Выбрать();
		Если РезЗапросНОстатки.Количество()>0 Тогда
			РезЗапросНОстатки.Следующий();
			ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт=?(РезЗапросНОстатки.СуммаВзаиморасчетов>0,РезЗапросНОстатки.СуммаВзаиморасчетов,0);
			ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт=?(РезЗапросНОстатки.СуммаВзаиморасчетов<0,-РезЗапросНОстатки.СуммаВзаиморасчетов,0);
		Иначе	
			ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт=0;
			ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт=0;
		КонецЕсли;	
		ТабДок.Вывести(ОбластьНачОстатки,0);
		
		ЗапросОстатки.УстановитьПараметр("СписокДоговоров",СписокДоговоров);
		ЗапросОстатки.УстановитьПараметр("Дата",Новый Граница(КонДата,ВидГраницы.Включая));
		РезЗапросКОстатки=ЗапросОстатки.Выполнить().Выбрать();
		
		
		Запрос= Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор,
		|	СУММА(ВЫБОР
		|			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Приход
		|				ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаДт,
		|	СУММА(ВЫБОР
		|			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
		|				ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаКт,
		|	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ втОбороты
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
		|ГДЕ
		|	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента В(&СписокДоговоров)
		|	И ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &НачДата И &КонДата
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзаиморасчетыСКонтрагентами.Регистратор,
		|	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента
		|ПОМЕСТИТЬ втНОстаток
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&НачДата, ДоговорКонтрагента В (&СписокДоговоров)) КАК ВзаиморасчетыСКонтрагентамиОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбороты.Регистратор КАК Регистратор,
		|	ЕСТЬNULL(втОбороты.СуммаДт, 0) КАК СуммаДт,
		|	ЕСТЬNULL(втОбороты.СуммаКт, 0) КАК СуммаКт,
		|	ЕСТЬNULL(втОбороты.ДоговорКонтрагента, втНОстаток.ДоговорКонтрагента) КАК ДоговорКонтрагента
		|ИЗ
		|	втОбороты КАК втОбороты
		|		ПОЛНОЕ СОЕДИНЕНИЕ втНОстаток КАК втНОстаток
		|		ПО втОбороты.ДоговорКонтрагента = втНОстаток.ДоговорКонтрагента
		|
		|УПОРЯДОЧИТЬ ПО
		//+++ 16.06.2015
		|"+?(флПоДоговорам,"	ДоговорКонтрагента,","")+"
		|	Регистратор.Дата
		|ИТОГИ
		|	СУММА(СуммаДт),
		|	СУММА(СуммаКт)
		|ПО
		|	ДоговорКонтрагента
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("СписокДоговоров",СписокДоговоров);
		Запрос.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
		Запрос.УстановитьПараметр("Расход",ВидДвиженияНакопления.Расход);
		Запрос.УстановитьПараметр("НачДата",НачДата);
		Запрос.УстановитьПараметр("КонДата",КонДата);
		
		СуммаОборотИтогоДт=0;
		СуммаОборотИтогоКт=0;
		СуммаОборотДоговорДт=0;
		СуммаОборотДоговорКт=0;
		
		
		ВыборкаДоговор=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Отбор=новый Структура("ДоговорКонтрагента");
		Пока ВыборкаДоговор.Следующий() Цикл
			ОбластьДоговорКонтрагента.Параметры.ДоговорКонтрагента=ВыборкаДоговор.ДоговорКонтрагента;
			//ТабДок.Вывести(ОбластьДоговорКонтрагента);
			
			СуммаОборотДоговорДт=0;
			СуммаОборотДоговорКт=0;
			//
			//нач.остатки по договору
			РезЗапросНОстатки.Сбросить();
			Отбор.ДоговорКонтрагента=ВыборкаДоговор.ДоговорКонтрагента;
			ЕстьНОПоДоговору=РезЗапросНОстатки.НайтиСледующий(Отбор);
			Если ЕстьНОПоДоговору тогда
				ОбластьДоговорКонтрагента.Параметры.СуммаНачальныйОстаток=РезЗапросНОстатки.СуммаВзаиморасчетов;
			Иначе	
				ОбластьДоговорКонтрагента.Параметры.СуммаНачальныйОстаток=0;
			КонецЕсли;
			
			//кон.остатки по договору
			РезЗапросКОстатки.Сбросить();
			Отбор.ДоговорКонтрагента=ВыборкаДоговор.ДоговорКонтрагента;
			ЕстьКОПоДоговору=РезЗапросКОстатки.НайтиСледующий(Отбор);
			Если ЕстьКОПоДоговору тогда
				ОбластьДоговорКонтрагента.Параметры.СуммаКонечныйОстаток=РезЗапросКОстатки.СуммаВзаиморасчетов;
			Иначе	
				ОбластьДоговорКонтрагента.Параметры.СуммаКонечныйОстаток=0;
			КонецЕсли;
			
			Если флПоДоговорам тогда
				ТабДок.Вывести(ОбластьДоговорКонтрагента,1);
				ОбластьДтПоДоговору=ТабДок.Область(ТабДок.ВысотаТаблицы,5,ТабДок.ВысотаТаблицы,5);
				ОбластьКтПоДоговору=ТабДок.Область(ТабДок.ВысотаТаблицы,6,ТабДок.ВысотаТаблицы,6);
			КонецЕсли;
			
			//
			
			ВыборкаДетали=ВыборкаДоговор.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл
				//ОбработкаПрерыванияПользователя();//+++
				
				Если ВыборкаДетали.Регистратор<>null тогда
					ОбластьОбороты.Параметры.Регистратор=ВыборкаДетали.Регистратор;
					ОбластьОбороты.Параметры.РегистраторПредставление=ПолучитьПредставлениеДокумента(ВыборкаДетали.Регистратор);
					ОбластьОбороты.Параметры.ДатаДокумента=  Формат(ВыборкаДетали.Регистратор.Дата,"ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");
					ОбластьОбороты.Параметры.СуммаОборотДт = ВыборкаДетали.СуммаДт;
					ОбластьОбороты.Параметры.СуммаОборотКт = ВыборкаДетали.СуммаКт;
					СуммаОборотИтогоДт=СуммаОборотИтогоДт+ВыборкаДетали.СуммаДт;
					СуммаОборотИтогоКт=СуммаОборотИтогоКт+ВыборкаДетали.СуммаКт;
					СуммаОборотДоговорКт=СуммаОборотДоговорКт+ВыборкаДетали.СуммаКт;
					СуммаОборотДоговорДт=СуммаОборотДоговорДт+ВыборкаДетали.СуммаДт;
					
					//+++( 20.10.2011
					Если Флажок1 тогда 
						Если ТипЗнч(ВыборкаДетали.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") и СокрЛП(ВыборкаДетали.Регистратор.Комментарий)<>"" тогда
							ОбластьОбороты.Параметры.РегистраторПредставление=ОбластьОбороты.Параметры.РегистраторПредставление;
							//+" Комментарий:"+СокрЛП(ВыборкаДетали.Регистратор.Комментарий);
							ОбластьОбороты.Параметры.Комментарий = СокрЛП(ВыборкаДетали.Регистратор.Комментарий);//+++ 09.04.2014
						КонецЕсли;
					КонецЕсли;	//+++)
					
					// 		ТабДок.Вывести(ОбластьОбороты,2);
					
					
					//+++( 20.10.2011
					Если Флажок1 тогда 
						
						Если ТипЗнч(ВыборкаДетали.Регистратор) = Тип("ДокументСсылка.ПоступлениеДопРасходов") тогда
							Для каждого стр из ВыборкаДетали.Регистратор.Товары цикл
								Если ЗначениеЗаполнено(Стр.ДокументПартии) тогда
									РегистраторОснование = стр.ДокументПартии;
									прервать;
								КонецЕсли;
							КонецЦикла;
							
							ОбластьОбороты.Параметры.Комментарий = СокрЛП(РегистраторОснование.Сделка.НомерКонтейнера);//+++ 09.04.2014
							ТабДок.Вывести(ОбластьОбороты,2);
							
							ОбластьОбороты1.Параметры.ДатаДокумента =  Формат(РегистраторОснование.Дата,"ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");
							ОбластьОбороты1.Параметры.РегистраторОснование = ПолучитьПредставлениеДокумента(РегистраторОснование);
							//	+" Комментарий:"+СокрЛП(РегистраторОснование.Комментарий);
							ОбластьОбороты1.Параметры.Комментарий = СокрЛП(РегистраторОснование.Комментарий);//+++ 09.04.2014
							
							ТабДок.Вывести(ОбластьОбороты1);
						КонецЕсли;
						
					ИНАЧЕ
						
						Если ТипЗнч(ВыборкаДетали.Регистратор) = Тип("ДокументСсылка.ПоступлениеДопРасходов") тогда //+++ 22.10.2014
							
							Для каждого стр из ВыборкаДетали.Регистратор.Товары цикл
								Если ЗначениеЗаполнено(Стр.ДокументПартии) тогда
									РегистраторОснование = стр.ДокументПартии;
									прервать;
								КонецЕсли;
							КонецЦикла;
							Если ЗначениеЗаполнено(РегистраторОснование) тогда //ошибка на неинициализированную переменную  +++ Шарафутдинов
								Если НЕ РегистраторОснование.Метаданные().Реквизиты.Найти("Сделка") = Неопределено Тогда   //***2014.12.02 
									ОбластьОбороты.Параметры.Комментарий = СокрЛП(РегистраторОснование.Сделка.НомерКонтейнера);//+++ 09.04.2014
									ОбластьОбороты.Параметры.Комментарий1 = СокрЛП(РегистраторОснование.НомерСБИС);//+++ 09.04.2014
								КонецЕсли;
							КонецЕсли;
							ТабДок.Вывести(ОбластьОбороты,2);
						ИНАЧЕ
							// { +++ 18.09.2016 Лапенков (для поступлений сверяемся по номерам контейнеров для Е. Малышева)
							Если ТипЗнч(ВыборкаДетали.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И ЗначениеЗаполнено(ВыборкаДетали.Регистратор.Сделка) И ТипЗнч(ВыборкаДетали.Регистратор.Сделка)= Тип("ДокументСсылка.ЗаказПоставщику") Тогда 
								ОбластьОбороты.Параметры.Комментарий = СокрЛП(ВыборкаДетали.Регистратор.Сделка.НомерКонтейнера);//+++ 18.09.2016 Лапенков
							Иначе
								ОбластьОбороты.Параметры.Комментарий = "";
							КонецЕсли;	
							// }
							
							ТабДок.Вывести(ОбластьОбороты,2);
						КонецЕсли;
						
					КонецЕсли;
					//+++)
					
				КонецЕсли;
			КонецЦикла;	
			
			//ТабДок.Вывести(ОбластьОборотыИтог);
			Если флПоДоговорам тогда
				ТабДок.Область(ОбластьДтПоДоговору.Имя).Текст=СуммаОборотДоговорДт;
				ТабДок.Область(ОбластьКтПоДоговору.Имя).Текст=СуммаОборотДоговорКт;
			КонецЕсли;
		КонецЦикла;	
		
		ОбластьОборотыИтог.Параметры.СуммаОборотДт=СуммаОборотИтогоДт;
		ОбластьОборотыИтог.Параметры.СуммаОборотКт=СуммаОборотИтогоКт;
		
		ТабДок.Вывести(ОбластьОборотыИтог,0);
		ОстатокНаКонец=0;
		
		РезЗапросКОстатки=ЗапросОстатки.Выполнить().Выбрать();
		Если РезЗапросКОстатки.Количество()>0 Тогда
			РезЗапросКОстатки.Следующий();
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт=?(РезЗапросКОстатки.СуммаВзаиморасчетов>0,РезЗапросКОстатки.СуммаВзаиморасчетов,0);
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт=?(РезЗапросКОстатки.СуммаВзаиморасчетов<0,-РезЗапросКОстатки.СуммаВзаиморасчетов,0);
			ОстатокНаКонец=РезЗапросКОстатки.СуммаВзаиморасчетов;
		Иначе	
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт=0;
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт=0;
			ОстатокНаКонец=0;
			
		КонецЕсли;
		ТабДок.Вывести(ОбластьКонОстатки,0);
		
		РезультатыСверки = "на " + Формат(КонДата, "ДФ=dd.MM.yyyy") + " задолженность ";
		ВалютаДокумента = СтрТЗ.ВалютаВзаиморасчетов;	
		Если ОстатокНаКонец > 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НазваниеОрганизации) + " " + Формат(ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + строка(ВалютаДокумента);
			
		ИначеЕсли ОстатокНаКонец < 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НаименованиеКонтрагента) + " " + Формат(-ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + строка(ВалютаДокумента);
			
		Иначе
			РезультатыСверки = РезультатыСверки + "отсутствует.";
		КонецЕсли;
		ОбластьПодвал.Параметры.РезультатыСверки = РезультатыСверки;
		ОбластьПодвал.Параметры.РезультатыСверки = РезультатыСверки;
		
		ТабДок.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	
	ОбластьПодписи.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьПодписи.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
	ТабДок.Вывести(ОбластьПодписи);
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();	
	
	//НапечататьДокумент(ТабДок);
	
	Возврат ТабДок;
	
КонецФункции

Функция ПолучитьПредставлениеДокумента(ДокСсылка) экспорт
	СтрокаВидаДокумента="";
	Если ЗначениеНеЗаполнено(ДокСсылка) Тогда Возврат ""; КонецЕсли;
	Если ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.КорректировкаДолга") Тогда СтрокаВидаДокумента= "Ввод остатков"; 
	ИначеЕсли	ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда СтрокаВидаДокумента= "Приход товаров/услуг."; 
	ИначеЕсли	ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда СтрокаВидаДокумента= "Продажа товаров/услуг."; 	
	ИначеЕсли	ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.ПлатежноеПоручениеВходящее") Тогда СтрокаВидаДокумента= "Платежное поручение вх."; 
	ИначеЕсли	ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") Тогда СтрокаВидаДокумента= "Платежное поручение исх."; 	
	ИначеЕсли	ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда СтрокаВидаДокумента= "Расходный кассовый ордер"; 	
	ИначеЕсли	ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда СтрокаВидаДокумента= "Приходный кассовый ордер"; 		
	ИначеЕсли	ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда СтрокаВидаДокумента= "Возврат товаров от покупателя"; 			
	ИначеЕсли	ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда СтрокаВидаДокумента= "Возврат товаров поставщику"; 				
	ИначеЕсли 		ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.ПоступлениеДопРасходов") Тогда СтрокаВидаДокумента= "Приход доп. расходов";	
		//ИначеЕсли 		ТипЗнч(ДокСсылка)=Тип("ДокументСсылка.НачислениеПоКредитам") Тогда СтрокаВидаДокумента= "Начисление %";		
	КонецЕсли;
	СтрокаВидаДокумента=СтрокаВидаДокумента+" №"+Строка(ДокСсылка.Номер);
	Возврат СтрокаВидаДокумента;
КонецФункции

функция ПолучитьКонтрагентовПользователейПодразделения() экспорт
	//по подразделению
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Пользователи.Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ОсновноеПодразделение = &ОсновноеПодразделение
	|	И (НЕ Пользователи.ПометкаУдаления)
	|	И (НЕ Пользователи.Заблокирован)";
	
	Запрос.УстановитьПараметр("ОсновноеПодразделение", параметрыСеанса.ТекущийПользователь.ОсновноеПодразделение);
	
	Результат = Запрос.Выполнить();
	ВыборкаТЗ = Результат.Выгрузить();
	
	СписокПользователей = ВыборкаТЗ.ВыгрузитьКолонку("Ссылка");
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоРегиону")  Тогда
		СписокКонтрагентов  = ПолучитьСписокКонтрагентовМенеджераПоРегиону(СписокПользователей);
	иначе
		СписокКонтрагентов  = ПолучитьСписокКонтрагентовМенеджера(СписокПользователей);
	КонецЕсли;
	
	возврат СписокКонтрагентов;
КонецФункции
