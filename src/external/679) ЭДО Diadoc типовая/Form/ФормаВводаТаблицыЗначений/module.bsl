Процедура ПересчитатьНумерациюСтрокТаблицы()
	
	Для НомерСтроки = 1 По ТабКлючиЗначения.Количество() Цикл
		СтрокаТаблицы=	ТабКлючиЗначения.Получить(НомерСтроки - 1);
		СтрокаТаблицы.НомерСтроки=	НомерСтроки;
	КонецЦикла;
	
КонецПроцедуры

Функция ВыделитьСлово(ИсходнаяСтрока, Разделитель = " ")
	
	Буфер = СокрЛ(ИсходнаяСтрока);
	ПозицияПослПробела = Найти(Буфер, Разделитель);
	
	Если ПозицияПослПробела = 0 Тогда
		ИсходнаяСтрока = "";
		Возврат Буфер;
	КонецЕсли;
	
	ВыделенноеСлово = СокрЛП(Лев(Буфер, ПозицияПослПробела));
	ИсходнаяСтрока = Сред(Буфер, ПозицияПослПробела + 1);
	
	Возврат ВыделенноеСлово;
	
КонецФункции

Процедура ЗагрузитьСтрокуКлючЗначение(Знач ОригинальнаяСтрока)
	
	ТабКлючиЗначения.Очистить();
	
	Пока НЕ ОригинальнаяСтрока = "" Цикл
		
		КлючИЗначение=	ВыделитьСлово(ОригинальнаяСтрока, ";");
		
		СтрокаТаблицы=				ТабКлючиЗначения.Добавить();
		СтрокаТаблицы.Ключ=			СтрЗаменить(ВыделитьСлово(КлючИЗначение, "="), "=", "");
		СтрокаТаблицы.Значение=		СтрЗаменить(ВыделитьСлово(КлючИЗначение, ";"), ";", "");
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ДобавитьКолонкуЗначения();
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
		
	Если ЗначениеЗаполнено(ШаблонКлючей)=Ложь Тогда
		ЭлементыФормы.КоманднаяПанель1.Кнопки.ВосстановитьШаблон.Доступность = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.ВосстановитьШаблон.Текст = "";
	Иначе
		ЭлементыФормы.КоманднаяПанель1.Кнопки.ВосстановитьШаблон.Доступность = Истина;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.ВосстановитьШаблон.Текст = "Восстановить шаблон полей";
	КонецЕсли;
		
	ЗагрузитьСтрокуКлючЗначение(СтрокаКлючЗначение);
	
	ПересчитатьНумерациюСтрокТаблицы();
	
КонецПроцедуры

Процедура СохранитьСтрокуКлючЗначение(Организация, DocumentType, СтрокаКлючЗначение)
	
	ТаблицаКлючейЗначений=	ВосстановитьЗначение("Диадок_ТаблицаОбязательныхЗначенийКлючей");
	Если ТаблицаКлючейЗначений <> Неопределено Тогда
		
		ОтборСтрок=			Новый Структура("Организация, DocumentType", Организация, DocumentType);
		НайденныеСтроки=	ТаблицаКлючейЗначений.НайтиСтроки(ОтборСтрок);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].СтрокаКлючЗначение=	СтрокаКлючЗначение;
		Иначе
			СтрокаТаблицы=	ТаблицаКлючейЗначений.Добавить();
			СтрокаТаблицы.Организация=			Организация;
			СтрокаТаблицы.DocumentType=			DocumentType;
			СтрокаТаблицы.СтрокаКлючЗначение=	СтрокаКлючЗначение;
		КонецЕсли;
		
	Иначе
		
		ТаблицаКлючейЗначений=	Новый ТаблицаЗначений;
		ТаблицаКлючейЗначений.Колонки.Добавить("Организация");
		ТаблицаКлючейЗначений.Колонки.Добавить("DocumentType");
		ТаблицаКлючейЗначений.Колонки.Добавить("СтрокаКлючЗначение");
		
		СтрокаТаблицы=	ТаблицаКлючейЗначений.Добавить();
		СтрокаТаблицы.Организация=			Организация;
		СтрокаТаблицы.DocumentType=			DocumentType;
		СтрокаТаблицы.СтрокаКлючЗначение=	СтрокаКлючЗначение;
		
	КонецЕсли;
	
	СохранитьЗначение("Диадок_ТаблицаОбязательныхЗначенийКлючей", ТаблицаКлючейЗначений);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОк(Кнопка)
	
	Если ТабКлючиЗначения.Количество() > 20 Тогда
		Предупреждение("Количество дополнительных свойств не может быть более 20",,НаименованиеСистемы);
		Возврат;
	КонецЕсли;
		
	СтрокаКлючЗначение=	"";
	Для каждого СтрокаТаблицы Из ТабКлючиЗначения Цикл
		СтрокаКлючЗначение=	СтрокаКлючЗначение + СтрокаТаблицы.Ключ + "=" + СтрокаТаблицы.Значение + ";";
	КонецЦикла;
	
	Если СтрокаКлючЗначениеПревышаетДопустимуюДлину(СтрокаКлючЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьСтрокуКлючЗначение(Организация, DocumentType, СтрокаКлючЗначение);
	
	Закрыть(СтрокаКлючЗначение);
	
КонецПроцедуры

Процедура КоманднаяПанель1ВосстановитьШаблон(Кнопка)
	
	ЗагрузитьСтрокуКлючЗначение(ШаблонКлючей);
	ПересчитатьНумерациюСтрокТаблицы();
	
КонецПроцедуры

Процедура ТабКлючиЗначенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПересчитатьНумерациюСтрокТаблицы();
	
КонецПроцедуры

Процедура ТабКлючиЗначенияПослеУдаления(Элемент)
	
	ПересчитатьНумерациюСтрокТаблицы();
	
КонецПроцедуры

Процедура ДобавитьКолонкуЗначения()
	
	Если 	DocumentType = "Invoice"
		ИЛИ DocumentType = "InvoiceRevision"
		ИЛИ DocumentType = "InvoiceCorrection"
		ИЛИ DocumentType = "InvoiceCorrectionRevision"
	Тогда
		МаксимальнаяДлинаЗначения= 200;
	Иначе
		МаксимальнаяДлинаЗначения= 1997;
	КонецЕсли;
	
	КолонкаЗначение= ТабКлючиЗначения.Колонки.Найти("Значение");
	Если КолонкаЗначение <> Неопределено И ТабКлючиЗначения.Колонки.Найти("Значение").ТипЗначения.КвалификаторыСтроки.Длина <> МаксимальнаяДлинаЗначения Тогда
		ТабКлючиЗначения.Колонки.Удалить(КолонкаЗначение);
		КолонкаЗначение= Неопределено;
	КонецЕсли;
	
	Если КолонкаЗначение = Неопределено Тогда
		ТабКлючиЗначения.Колонки.Добавить("Значение", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(МаксимальнаяДлинаЗначения, ДопустимаяДлина.Переменная)), "Значение");
		ЭлементыФормы.ТабКлючиЗначения.СоздатьКолонки();
	КонецЕсли;
	
КонецПроцедуры

Функция СтрокаКлючЗначениеПревышаетДопустимуюДлину(СтрокаКлючЗначение)
	
	Если  СтрДлина(СтрокаКлючЗначение) > 2000
		И DocumentType <> "Invoice"
		И DocumentType <> "InvoiceRevision"
		И DocumentType <> "InvoiceCorrection"
		И DocumentType <> "InvoiceCorrectionRevision"
	Тогда
		Предупреждение("Общая длина всех ключей и значений превышает 2000 символов!",,НаименованиеСистемы);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

