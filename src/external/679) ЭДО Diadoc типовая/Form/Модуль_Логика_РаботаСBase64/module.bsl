Перем КонвертацияBase64;

Функция КонвертироватьГуидВЧисло64(GUID) Экспорт 
	
	СтрокаHex= Convert_GUID_to_Hex(GUID);
	
	СтрокаBase64= Convert_Hex_to_Base64(СтрокаHex);
	
	Если СтрокаBase64 = Неопределено Тогда
		ВызватьИсключение "Не удалось конвертировать идентификатор """ + GUID + """ в строку Base64";
	Иначе
		Возврат Прав(СтрокаBase64, Окр(СтрДлина(СтрокаHex) / 1.5));
	КонецЕсли;
	
КонецФункции	

Функция КонвертироватьЧисло64вГуид(СтрокаBase64) Экспорт 
	
	СтрокаHex= Прав(Convert_Binary_to_Hex(Convert_Base64_to_Binary(СтрокаBase64)), 64);
	
	Возврат Convert_Hex_to_GUID(СтрокаHex);
	
КонецФункции


Функция КонвертацияBase64() 
	
	Если КонвертацияBase64 = Неопределено Тогда
		
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(ПолучитьМакет("КонвертацияBase64").ПолучитьТекст());
		КонвертацияBase64 = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
		
	КонецЕсли;
	
	Возврат КонвертацияBase64;
	
КонецФункции

Функция ДобавитьЛидирующиеНули(ИсходнаяСтрока, КоличествоНулей)
	
	Если КоличествоНулей > 0 Тогда
		Возврат Формат(0, "ЧЦ="+КоличествоНулей+"; ЧН=; ЧВН=; ЧГ=") + ИсходнаяСтрока;
	Иначе
		Возврат ИсходнаяСтрока;
	КонецЕсли;
	
КонецФункции

Функция Convert_Hex_to_Base64(Знач СтрокаHex)
	
	Результат= "";
	
	СтрокаHex= ДобавитьЛидирующиеНули(СтрокаHex, (3-СтрДлина(СтрокаHex)%3)%3);
	ДлинаСтроки= СтрДлина(СтрокаHex);
	
	Позиция= 1;
	Пока Позиция < ДлинаСтроки Цикл
		
		СтрокаBase64= КонвертацияBase64().Convert_Hex_to_Base64[Сред(СтрокаHex, Позиция, 3)];
		
		Если СтрокаBase64 <> Неопределено Тогда
			Результат= Результат + СтрокаBase64;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
		Позиция= Позиция + 3;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция Convert_Binary_to_Hex(Знач СтрокаBinary)
	
	Результат= "";
	
	СтрокаBinary= ДобавитьЛидирующиеНули(СтрокаBinary, (4-СтрДлина(СтрокаBinary)%4)%4);
	ДлинаСтроки= СтрДлина(СтрокаBinary);
	
	Позиция= 1;
	Пока Позиция < ДлинаСтроки Цикл 
		
		СтрокаHex= КонвертацияBase64().Convert_Binary_to_Hex[Сред(СтрокаBinary, Позиция, 4)];
		
		Если СтрокаHex <> Неопределено Тогда
			Результат= Результат + СтрокаHex;
		Иначе
			ВызватьИсключение "Ошибка конвертации двоичных данных в шестнадцатиричные!";
		КонецЕсли;
		
		Позиция= Позиция + 4;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция Convert_Base64_to_Binary(СтрокаBase64)
	
	Результат= "";
	
	ДлинаСтроки= СтрДлина(СтрокаBase64);
	
	Позиция= 1;
	Пока Позиция <= ДлинаСтроки Цикл
		
		СтрокаBinary= КонвертацияBase64().Convert_Base64_to_Binary[Сред(СтрокаBase64, Позиция, 1)];
		
		Если СтрокаBinary <> Неопределено Тогда
			Результат= Результат + СтрокаBinary;
		Иначе
			ВызватьИсключение "Ошибка конвертации Base64 строки """ + СтрокаBase64 + """ в двоичные данные!";
		КонецЕсли;
		
		Позиция= Позиция + 1;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция Convert_Hex_to_GUID(СтрокаHex)
	
	Возврат Сред(СтрокаHex, 1, 8)+"-"+Сред(СтрокаHex, 9, 4)+"-"+Сред(СтрокаHex, 13, 4)+"-"+Сред(СтрокаHex, 17, 4)+"-"+Сред(СтрокаHex, 21, 20)+"-"+Сред(СтрокаHex, 41, 4)+"-"+Сред(СтрокаHex, 45, 4)+"-"+Сред(СтрокаHex, 49, 4)+"-"+Сред(СтрокаHex, 53, 12);
	
КонецФункции

Функция Convert_GUID_to_Hex(GUID)
	
	Возврат СтрЗаменить(GUID, "-", "");
	
КонецФункции
