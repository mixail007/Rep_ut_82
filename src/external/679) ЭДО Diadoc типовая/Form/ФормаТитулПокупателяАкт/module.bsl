Перем СтандартнаяВысотаЭлементов, СтруктураДоверенности;

Процедура СформироватьСтруктуруПодписи()
	
	СтруктураПодписи= Новый Структура;
	
	СтруктураПодписи.Вставить("ПараметрыПодписания",   ПараметрыПодписания);
	СтруктураПодписи.Вставить("ИНН", 				   ИНН);
	СтруктураПодписи.Вставить("ДатаПодписания", 	   ДатаПодписания);	
	СтруктураПодписи.Вставить("ПоДоверенности", 	   ПоДоверенности);
	СтруктураПодписи.Вставить("СтруктураДоверенности", СтруктураДоверенности);
	
КонецПроцедуры

Процедура ЗапомнитьНастройкиПодписания()
	
	ОдинСАдаптер_НастройкиТекущегоПользователя_УстановитьНастройку("ДиадокПоДоверенности", ПоДоверенности);
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	// Вставить содержимое обработчика.
	СписокНезаполненныхПолей = "";
	Если ЗначениеЗаполнено(Должность)=Ложь Тогда 
		СписокНезаполненныхПолей  = ?(СписокНезаполненныхПолей ="", "", СписокНезаполненныхПолей+", ") +"должность";
	КонецЕсли;
	
	Если ПоДоверенности Тогда
		
		Если НЕ ЗначениеЗаполнено(СтруктураДоверенности.Номер) Тогда
			СписокНезаполненныхПолей=	?(СписокНезаполненныхПолей ="", "", СписокНезаполненныхПолей+", ") + "номер доверенности";
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтруктураДоверенности.Дата) Тогда
			СписокНезаполненныхПолей=	?(СписокНезаполненныхПолей ="", "", СписокНезаполненныхПолей+", ") + "дата доверенности";
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтруктураДоверенности.ФамилияДоверенностьВыдал) Тогда
			СписокНезаполненныхПолей=	?(СписокНезаполненныхПолей ="", "", СписокНезаполненныхПолей+", ") + "фамилия выдавшего доверенность";
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтруктураДоверенности.ИмяДоверенностьВыдал) Тогда
			СписокНезаполненныхПолей=	?(СписокНезаполненныхПолей ="", "", СписокНезаполненныхПолей+", ") + "имя выдавшего доверенность";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СписокНезаполненныхПолей) Тогда 
		предупреждение(
		?(Найти(СписокНезаполненныхПолей, ",")=0, "Не заполнено обязательное поле:", "Не заполнены обязательные поля:")+"
		|"+СписокНезаполненныхПолей, , НаименованиеСистемы);
		
		Возврат;
		
	КонецЕсли;	
	
	Если Должность<>ПараметрыПодписания.ДолжностьПодписанта Тогда 
		ПараметрыПодписания.ДолжностьПодписанта = Должность;
		ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыПодписанияТ12вДиадок(Организация, ПараметрыПодписания);
	КонецЕсли;	
	
	ЗапомнитьНастройкиПодписания();
	
	СформироватьСтруктуруПодписи();
	
	Закрыть(Истина);
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруДоверенностиПоУмолчанию()
	
	СтруктураДоверенности= ПолучитьФорму("Форма_Основная_Логика").ПолучитьДанныеДоверенности();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	
	ПараметрыПодписания 		= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьПараметрыПодписанияТ12вДиадок(Организация);
	Должность 					= ПараметрыПодписания.ДолжностьПодписанта;
	ДатаПодписания 				= НачалоДня(ТекущаяДата());
	ДолжностьПодписантаСвойство = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьСвойствоДолжностьПодписанта();
	
	Если ЗначениеЗаполнено(ДолжностьПодписантаСвойство) 
		И (СокрЛП(ДолжностьПодписантаСвойство) <> СокрЛП(Должность)) Тогда
		Предупреждение("Должность пользователя больше не настраивается в 1С, теперь должность задается в свойствах пользователя в Диадоке", 120, "Диадок");
		ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").СброситьСвойствоДолжностьПодписанта();
	КонецЕсли;
	
	ПоДоверенности= ОдинСАдаптер_НастройкиТекущегоПользователя_ПолучитьНастройку("ДиадокПоДоверенности");
	
	ЗаполнитьСтруктуруДоверенностиПоУмолчанию();
	
	УправлениеФормой();
	ЗаполнитьПодписи();
	
КонецПроцедуры

Процедура УправлениеФормой()
	
	СвернутьРазвернутьПанели();
	ЗаполнитьПредставлениеДоверенности();
	
КонецПроцедуры

Функция НоваяВысотаФормы()
	
	НоваяВысотаФормы= СтандартнаяВысотаЭлементов.ЭтаФорма;
	
	Если КоличествоДокументовНаПодпись = 1 Тогда
		НоваяВысотаФормы= НоваяВысотаФормы - СтандартнаяВысотаЭлементов.ПанельДополнительныеДокументыНаПодпись;
	ИначеЕсли КоличествоДокументовНаПодпись > 1 Тогда
		НоваяВысотаФормы= НоваяВысотаФормы - (СтандартнаяВысотаЭлементов.ПанельДополнительныеДокументыНаПодпись-33);
	КонецЕсли;
	
	Возврат НоваяВысотаФормы;
	
КонецФункции

Процедура СвернутьРазвернутьПанели()
	
	НоваяВысотаФормы= НоваяВысотаФормы();
	
	Если НоваяВысотаФормы > ЭтаФорма.Высота Тогда
		ЭтаФорма.Высота= НоваяВысотаФормы;
	КонецЕсли;
	
	Если КоличествоДокументовНаПодпись = 1 Тогда
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельДополнительныеДокументыНаПодпись, РежимСверткиЭлементаУправления.Верх);
	ИначеЕсли КоличествоДокументовНаПодпись > 1 Тогда
		Если ЭлементыФормы.НадписьДополнительныеДокументыНаПодпись.Высота <> 28 Тогда
			ЭлементыФормы.НадписьДополнительныеДокументыНаПодпись.Высота= 28;
		КонецЕсли;
		Если ЭлементыФормы.ПанельДополнительныеДокументыНаПодпись.Высота <> 33 Тогда
			ЭлементыФормы.ПанельДополнительныеДокументыНаПодпись.Высота= 33;
		КонецЕсли;
	КонецЕсли;
	
	Если НоваяВысотаФормы < ЭтаФорма.Высота Тогда
		ЭтаФорма.Высота= НоваяВысотаФормы;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТекстКнопкиВыполнить()
	
	Если КоличествоДокументовНаПодпись > 1 Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаВыполнить.Текст= "Подписать " + СтрокаКоличествоДокументов(КоличествоДокументовНаПодпись);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗаголовокНадписиДополнительныеДокументыНаПодпись()
	
	Если КоличествоДокументовНаПодпись = 0 Тогда
		ЭлементыФормы.НадписьДополнительныеДокументыНаПодпись.Заголовок= 
		"Среди выбранных могут быть документы из пакетов, по которым отправитель запретил обработку по отдельности. Такие пакеты будут подписаны целиком.";
	ИначеЕсли КоличествоДокументовНаПодпись > 1 Тогда
		ЭлементыФормы.НадписьДополнительныеДокументыНаПодпись.Заголовок= 
		"В месте с выбранным документом будет "+РезультатСклоненияСловаПодписано(КоличествоДокументовНаПодпись-1)+" еще " + СтрокаКоличествоДокументов(КоличествоДокументовНаПодпись-1) + " из пакета, по которому отправитель запретил обработку по отдельности.";
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПредставлениеДоверенности()
	
	Если ПоДоверенности Тогда
		ПредставлениеДоверенности= ПолучитьФорму("Форма_Основная_Логика").ПолучитьПредставлениеДоверенности();
	Иначе
		ПредставлениеДоверенности= "";
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПодписи()
	
	ЗаполнитьЗаголовокНадписиДополнительныеДокументыНаПодпись();
	ЗаполнитьТекстКнопкиВыполнить();
	
КонецПроцедуры

Процедура КнопкаЗаполнитьДоверенностьНажатие(Элемент)
	
	ФормаДоверенности=	ПолучитьФорму("ФормаДоверенности", ЭтаФорма);
	ЗаполнитьЗначенияСвойств(ФормаДоверенности, СтруктураДоверенности);
	
	Если ФормаДоверенности.ОткрытьМодально() = Истина Тогда
		ПоДоверенности=	Истина;
		ЗаполнитьЗначенияСвойств(СтруктураДоверенности, ФормаДоверенности);
		УправлениеФормой();
	КонецЕсли;
	
КонецПроцедуры

Процедура ФлажокПоДоверенностиПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

Функция РезультатСклоненияСловаПодписано(Знач Числительное)
	
	Числительное= Число(Прав(Формат(Числительное, "ЧГ="), 2));
	
	Если Числительное > 19 Тогда
		Числительное= Число(Прав(Формат(Числительное, "ЧГ="), 1));
	КонецЕсли;
	
	Если Числительное = 1 Тогда
		Возврат "подписан";
	Иначе
		Возврат "подписано";
	КонецЕсли;	
	
КонецФункции

СтандартнаяВысотаЭлементов= Новый Структура("ЭтаФорма, ПанельДополнительныеДокументыНаПодпись", 
							ЭтаФорма.Высота, ЭлементыФормы.ПанельДополнительныеДокументыНаПодпись.Высота);