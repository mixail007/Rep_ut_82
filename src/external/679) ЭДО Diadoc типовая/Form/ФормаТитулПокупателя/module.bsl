Перем СтандартнаяВысотаЭлементов, СтруктураДоверенности;

//{ НАЧАЛО РАБОТЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НеПоказыватьФормуТитула Тогда 
		
		ДатаПолученияГруза= ТекущаяДата();
		
		ПараметрыПодписания= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьПараметрыПодписанияТ12вДиадок(Организация);
		
		Если НЕ ЗначениеЗаполнено(Должность) Тогда
			Должность = ПараметрыПодписания.ДолжностьПодписанта;
		Иначе 
			ПараметрыПодписания.ФИОПодписанта = ФИО;
		КонецЕсли;
		
		ГрузПолучил = Истина;
		
		СформироватьСтруктуруПодписи();
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	
	ДатаПолученияГруза = ТекущаяДата();
	ПереключательДатаПодписи =	ОдинСАдаптер_НастройкиТекущегоПользователя_ПолучитьНастройку("ДиадокПереключательДатаПодписи");
	
	ГрузПолучил = ВосстановитьЗначение("ДиадокГрузПолучил");
	ГрузПринял 	= ВосстановитьЗначение("ДиадокГрузПринял");
	
	УстановитьСовпадаетСПолучателем();
	ЗаполнитьПодписи();
	УправлениеФормой();
	
КонецПроцедуры

Процедура УправлениеФормой()
	
	СвернутьРазвернутьПанели();
	ЗаполнитьПредставлениеДоверенности();
	ЗаполнитьСтруктуруДоверенностиПоУмолчанию();
	ПанельГрузПринялУстановитьДоступность();
	ДатаПолученияГрузаУстановитьДоступность();
	КнопкаВыполнитьУстановитьДоступность();
	
КонецПроцедуры

Функция НоваяВысотаФормы()
	
	НоваяВысотаФормы= СтандартнаяВысотаЭлементов.ЭтаФорма;
	
	Если НЕ ГрузПолучил Тогда
		НоваяВысотаФормы= НоваяВысотаФормы - СтандартнаяВысотаЭлементов.ПанельГрузПолучил;
	КонецЕсли;
	Если НЕ ГрузПринял Тогда
		НоваяВысотаФормы= НоваяВысотаФормы - СтандартнаяВысотаЭлементов.ПанельГрузПринял;
	КонецЕсли;
	
	Если КоличествоДокументовНаПодпись = 1 Тогда
		НоваяВысотаФормы= НоваяВысотаФормы - СтандартнаяВысотаЭлементов.ПанельДополнительныеДокументыНаПодпись;
	ИначеЕсли КоличествоДокументовНаПодпись > 1 Тогда
		НоваяВысотаФормы= НоваяВысотаФормы - (СтандартнаяВысотаЭлементов.ПанельДополнительныеДокументыНаПодпись-33);
	КонецЕсли;
	
	Возврат НоваяВысотаФормы;
	
КонецФункции

Процедура СвернутьРазвернутьПанели()
	
	НоваяВысотаФормы= НоваяВысотаФормы();
	
	Если НоваяВысотаФормы > ЭтаФорма.Высота Тогда
		ЭтаФорма.Высота= НоваяВысотаФормы;
	КонецЕсли;
	
	Если КоличествоДокументовНаПодпись = 1 Тогда
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельДополнительныеДокументыНаПодпись, РежимСверткиЭлементаУправления.Верх);
	ИначеЕсли КоличествоДокументовНаПодпись > 1 Тогда
		Если ЭлементыФормы.НадписьДополнительныеДокументыНаПодпись.Высота <> 28 Тогда
			ЭлементыФормы.НадписьДополнительныеДокументыНаПодпись.Высота= 28;
		КонецЕсли;
		Если ЭлементыФормы.ПанельДополнительныеДокументыНаПодпись.Высота <> 33 Тогда
			ЭлементыФормы.ПанельДополнительныеДокументыНаПодпись.Высота= 33;
		КонецЕсли;
	КонецЕсли;
	
	Если ГрузПолучил Тогда
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельГрузПолучил, РежимСверткиЭлементаУправления.Нет);
		ЭлементыФормы.КнопкаЗаполнитьГрузПолучил.Заголовок= "Отменить заполнение";
	Иначе
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельГрузПолучил, РежимСверткиЭлементаУправления.Верх);
		ЭлементыФормы.КнопкаЗаполнитьГрузПолучил.Заголовок= "Заполнить";
	КонецЕсли;
	
	Если ГрузПринял Тогда
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельГрузПринял, РежимСверткиЭлементаУправления.Нет);
		ЭлементыФормы.КнопкаЗаполнитьГрузПринял.Заголовок= "Отменить заполнение";
	Иначе
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельГрузПринял, РежимСверткиЭлементаУправления.Верх);
		ЭлементыФормы.КнопкаЗаполнитьГрузПринял.Заголовок= "Заполнить";
	КонецЕсли;
	
	Если НоваяВысотаФормы < ЭтаФорма.Высота Тогда
		ЭтаФорма.Высота= НоваяВысотаФормы;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПанельГрузПринялУстановитьДоступность()
	
	Доступность = Истина;
	
	Если ГрузПолучил = Ложь Тогда
		ЭлементыФормы.ФамилияГрузПринял.Доступность				= Ложь;
		ЭлементыФормы.ИмяГрузПринял.Доступность					= Ложь;
		ЭлементыФормы.ОтчествоГрузПринял.Доступность			= Ложь;
		ЭлементыФормы.ДолжностьГрузПринял.Доступность			= Ложь;
		ЭлементыФормы.ФлажокСовпадаетСПолучателем.Доступность 	= Ложь;
		
		Доступность = Ложь;
	Иначе
		ЭлементыФормы.ФамилияГрузПринял.Доступность				= Истина;
		ЭлементыФормы.ИмяГрузПринял.Доступность					= Истина;
		ЭлементыФормы.ОтчествоГрузПринял.Доступность			= Истина;
		ЭлементыФормы.ДолжностьГрузПринял.Доступность			= Истина;
		ЭлементыФормы.ФлажокСовпадаетСПолучателем.Доступность 	= Истина;
	КонецЕсли;
	
	Если Доступность = Истина Тогда
		Если СовпадаетСПолучателем Тогда
			ЭлементыФормы.ФамилияГрузПринял.Доступность		= Ложь;
			ЭлементыФормы.ИмяГрузПринял.Доступность			= Ложь;
			ЭлементыФормы.ОтчествоГрузПринял.Доступность	= Ложь;
			ЭлементыФормы.ДолжностьГрузПринял.Доступность	= Ложь;
		Иначе
			ЭлементыФормы.ФамилияГрузПринял.Доступность		= Истина;
			ЭлементыФормы.ИмяГрузПринял.Доступность			= Истина;
			ЭлементыФормы.ОтчествоГрузПринял.Доступность	= Истина;
			ЭлементыФормы.ДолжностьГрузПринял.Доступность	= Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПредставлениеДоверенности()
	
	Если ПоДоверенности Тогда
		ПредставлениеДоверенности=	ПолучитьФорму("Форма_Основная_Логика").ПолучитьПредставлениеДоверенности();
	Иначе
		ПредставлениеДоверенности=	"";
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДатаПолученияГрузаУстановитьДоступность()
	
	Если ПереключательДатаПодписи = 0 Тогда
		ЭлементыФормы.ДатаПолученияГруза.Доступность=	Истина;
	Иначе
		ЭлементыФормы.ДатаПолученияГруза.Доступность=	Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Процедура КнопкаВыполнитьУстановитьДоступность()
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаВыполнить.Доступность= ГрузПолучил ИЛИ ГрузПринял;
	
КонецПроцедуры

//} НАЧАЛО РАБОТЫ

//{ ДЕЙСТВИЯ ФОРМЫ

Процедура ЗаполнитьГрузПолучилНажатие(Элемент)
	
	ГрузПолучил = Не ГрузПолучил;
	
	ЗаполнитьПодписи();
	УправлениеФормой();
	
КонецПроцедуры

Процедура КнопкаЗаполнитьГрузПринялНажатие(Элемент)
	
	ГрузПринял=	НЕ ГрузПринял;
	ЗаполнитьПодписи();
	
	Если ГрузПринял Тогда
		
		ПоДоверенности = ОдинСАдаптер_НастройкиТекущегоПользователя_ПолучитьНастройку("ДиадокПоДоверенности");
		
		УстановитьСовпадаетСПолучателем();
		ЗаполнитьСтруктуруДоверенностиПоУмолчанию();
		
	Иначе
		ПоДоверенности=	Ложь;
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

Процедура КнопкаЗаполнитьДоверенностьНажатие(Элемент)
	
	ФормаДоверенности= ПолучитьФорму("ФормаДоверенности", ЭтаФорма);
	ЗаполнитьЗначенияСвойств(ФормаДоверенности, СтруктураДоверенности);
	
	Если ФормаДоверенности.ОткрытьМодально() = Истина Тогда
		ПоДоверенности=	Истина;
		ЗаполнитьЗначенияСвойств(СтруктураДоверенности, ФормаДоверенности);
		УправлениеФормой();
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Отказ = Ложь;
	
	ФамилияГрузПринял=	 СокрЛП(ФамилияГрузПринял);
	ИмяГрузПринял=		 СокрЛП(ИмяГрузПринял);
	ОтчествоГрузПринял=	 СокрЛП(ОтчествоГрузПринял);
	ДолжностьГрузПринял= СокрЛП(ДолжностьГрузПринял);
	
	ПроверитьЗаполнениеПолей(Отказ);
	
	Если НЕ Отказ Тогда
		
		ЗапомнитьНастройкиПодписания();
		
		СформироватьСтруктуруПодписи();
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

//} ДЕЙСТВИЯ ФОРМЫ

//{ ОБРАБОТЧИКИ СОБЫТИЙ	

Процедура ПереключательДатаДокументаПриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры

Процедура ПереключательДатаПолученияПриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры

Процедура ФлажокСовпадаетСПолучателемПриИзменении(Элемент)
	
	Если СовпадаетСПолучателем Тогда
		
		СтруктураФИО= СтруктураФИО(ФИО);
		ФамилияГрузПринял= 	СтруктураФИО.Фамилия;
		ИмяГрузПринял= 		СтруктураФИО.Имя;
		ОтчествоГрузПринял= СтруктураФИО.Отчество;
		
		ДолжностьГрузПринял= Должность;
		
	КонецЕсли;
	
	УправлениеФормой();
	ЗаполнитьПредставлениеПодписи();
	
КонецПроцедуры

Процедура ФлажокПоДоверенностиПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

Процедура ДолжностьГрузПринялПриИзменении(Элемент)
	ЗаполнитьПредставлениеПодписи();
КонецПроцедуры

Процедура ФамилияГрузПринялПриИзменении(Элемент)
	ЗаполнитьПредставлениеПодписи();
КонецПроцедуры

Процедура ИмяГрузПринялПриИзменении(Элемент)
	ЗаполнитьПредставлениеПодписи();
КонецПроцедуры

Процедура ОтчествоГрузПринялПриИзменении(Элемент)
	ЗаполнитьПредставлениеПодписи();
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СохранитьЗначение("ДиадокГрузПолучил", ГрузПолучил);
	СохранитьЗначение("ДиадокГрузПринял", 	ГрузПринял);
КонецПроцедуры

//} ОБРАБОТЧИКИ СОБЫТИЙ	

//{ ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьПодписи()
	
	Если ГрузПолучил Тогда
		ЗаполнитьГрузПолучил();
	Иначе
		ОчиститьГрузПолучил();
	КонецЕсли;
	
	Если ГрузПринял Тогда
		ЗаполнитьГрузПринял();
	Иначе
		ОчиститьГрузПринял();
	КонецЕсли;
	
	ЗаполнитьПредставлениеПодписи();
	ЗаполнитьЗаголовокНадписиДополнительныеДокументыНаПодпись();
	ЗаполнитьТекстКнопкиВыполнить();
	
КонецПроцедуры

Процедура ЗаполнитьПредставлениеПодписи()
	
	Если ГрузПолучил Тогда
		ПредставлениеГрузПолучил = "Груз получил: " + ФИО + " (" + Должность + ")" + Символы.ПС;
	Иначе
		ПредставлениеГрузПолучил = "";
	КонецЕсли;
	
	Если ГрузПринял Тогда
		ПредставлениеГрузПринял = "Груз принял: " + ФамилияГрузПринял + " " + ИмяГрузПринял + " " + ОтчествоГрузПринял + ?(ЗначениеЗаполнено(ДолжностьГрузПринял)," (" + ДолжностьГрузПринял + ")", "") + Символы.ПС;
	Иначе
		ПредставлениеГрузПринял = "";
	КонецЕсли;
	
	ПредставлениеПодписи = "" + ОрганизацияЭДО + Символы.ПС + ПредставлениеГрузПолучил + ПредставлениеГрузПринял;
	
КонецПроцедуры

Процедура ЗаполнитьТекстКнопкиВыполнить()
	
	Если КоличествоДокументовНаПодпись > 1 Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаВыполнить.Текст= "Подписать " + СтрокаКоличествоДокументов(КоличествоДокументовНаПодпись);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗаголовокНадписиДополнительныеДокументыНаПодпись()
	
	Если КоличествоДокументовНаПодпись = 0 Тогда
		ЭлементыФормы.НадписьДополнительныеДокументыНаПодпись.Заголовок= 
		"Среди выбранных могут быть документы из пакетов, по которым отправитель запретил обработку по отдельности. Такие пакеты будут подписаны целиком.";
	ИначеЕсли КоличествоДокументовНаПодпись > 1 Тогда
		ЭлементыФормы.НадписьДополнительныеДокументыНаПодпись.Заголовок= 
		"В месте с выбранным документом будет "+РезультатСклоненияСловаПодписано(КоличествоДокументовНаПодпись-1)+" еще " + СтрокаКоличествоДокументов(КоличествоДокументовНаПодпись-1) + " из пакета, по которому отправитель запретил обработку по отдельности.";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПолей(Отказ)
	
	Если ПереключательДатаПодписи = 0 И (ДатаПолученияГруза < '18000101' ИЛИ ДатаПолученияГруза > '20991231') Тогда 
		Сообщить("Дата получения груза должна находиться в интервале 01.01.1800 - 31.12.2099!", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если ПереключательДатаПодписи = 0 И НЕ ЗначениеЗаполнено(ДатаПолученияГруза) Тогда
		Сообщить("Не заполнена дата получения груза!", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если ГрузПолучил И НЕ ЗначениеЗаполнено(Должность) Тогда 
		Сообщить("Не заполнена должность получившего груз!", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если ГрузПолучил И НЕ ЗначениеЗаполнено(ФИО) Тогда 
		Сообщить("Не заполнено ФИО получившего груз!", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если ГрузПринял И НЕ ЗначениеЗаполнено(ФамилияГрузПринял) Тогда 
		Сообщить("Не заполнена фамилия принявшего груз!", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если ГрузПринял И НЕ ЗначениеЗаполнено(ИмяГрузПринял) Тогда 
		Сообщить("Не заполнено имя принявшего груз!", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если ГрузПринял И ПоДоверенности
		И  (НЕ ЗначениеЗаполнено(СтруктураДоверенности.Номер)
		ИЛИ НЕ ЗначениеЗаполнено(СтруктураДоверенности.Дата)
		ИЛИ НЕ ЗначениеЗаполнено(СтруктураДоверенности.ФамилияДоверенностьВыдал)
		ИЛИ НЕ ЗначениеЗаполнено(СтруктураДоверенности.ИмяДоверенностьВыдал))
	Тогда
		Сообщить("Не заполнены данные доверенности!", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьСтруктуруПодписи()
	
	СтруктураПодписи= Новый Структура;
	
	СтруктураПодписи.Вставить("ДатаПолученияГруза", 	ДатаПолученияГруза);
	СтруктураПодписи.Вставить("ТипДатыПолучения", 		?(ПереключательДатаПодписи = 0, "ДатаПолученияГруза", "ДатаДокумента"));
	СтруктураПодписи.Вставить("ПараметрыПодписания", 	ПараметрыПодписания);
	СтруктураПодписи.Вставить("ИНН", 					ИНН);
	
	СтруктураПодписи.Вставить("ГрузПринял",				ГрузПринял);
	СтруктураПодписи.Вставить("ГрузПолучил",			ГрузПолучил);
	СтруктураПодписи.Вставить("ФамилияГрузПринял", 		СокрЛП(ФамилияГрузПринял));
	СтруктураПодписи.Вставить("ИмяГрузПринял", 			СокрЛП(ИмяГрузПринял));
	СтруктураПодписи.Вставить("ОтчествоГрузПринял", 	СокрЛП(ОтчествоГрузПринял));
	СтруктураПодписи.Вставить("ДолжностьГрузПринял",	СокрЛП(ДолжностьГрузПринял));
	
	СтруктураПодписи.Вставить("ПоДоверенности", 		ПоДоверенности);
	СтруктураПодписи.Вставить("СтруктураДоверенности", 	СтруктураДоверенности);
	
КонецПроцедуры

Процедура ЗапомнитьНастройкиПодписания()
	
	ОдинСАдаптер_НастройкиТекущегоПользователя_УстановитьНастройку("ДиадокСовпадаетСПолучателем", 	СовпадаетСПолучателем);
	ОдинСАдаптер_НастройкиТекущегоПользователя_УстановитьНастройку("ДиадокФамилияГрузПринял", 		ФамилияГрузПринял);
	ОдинСАдаптер_НастройкиТекущегоПользователя_УстановитьНастройку("ДиадокИмяГрузПринял", 			ИмяГрузПринял);
	ОдинСАдаптер_НастройкиТекущегоПользователя_УстановитьНастройку("ДиадокОтчествоГрузПринял", 		ОтчествоГрузПринял);
	ОдинСАдаптер_НастройкиТекущегоПользователя_УстановитьНастройку("ДиадокДолжностьГрузПринял", 	ДолжностьГрузПринял);
	ОдинСАдаптер_НастройкиТекущегоПользователя_УстановитьНастройку("ДиадокПереключательДатаПодписи",ПереключательДатаПодписи);
	ОдинСАдаптер_НастройкиТекущегоПользователя_УстановитьНастройку("ДиадокПоДоверенности", 			ПоДоверенности);
	
КонецПроцедуры

Процедура УстановитьСовпадаетСПолучателем()
	Если ГрузПолучил Тогда
		СовпадаетСПолучателем=	ОдинСАдаптер_НастройкиТекущегоПользователя_ПолучитьНастройку("ДиадокСовпадаетСПолучателем");
	Иначе
		СовпадаетСПолучателем = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьГрузПолучил()
	
	ПараметрыПодписания = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьПараметрыПодписанияТ12вДиадок(Организация);
	Должность = ПараметрыПодписания.ДолжностьПодписанта;
	ФИО = ПараметрыПодписания.ФИОПодписанта;
	
	ДолжностьПодписантаСвойство = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьСвойствоДолжностьПодписанта();
	Если ЗначениеЗаполнено(ДолжностьПодписантаСвойство) 
		И (СокрЛП(ДолжностьПодписантаСвойство) <> СокрЛП(Должность)) Тогда
		Предупреждение("Должность пользователя больше не настраивается в 1С, теперь должность задается в свойствах пользователя в Диадоке", 120, "Диадок");
		ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").СброситьСвойствоДолжностьПодписанта();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьГрузПринял()
	Если ГрузПолучил Тогда
		Если СовпадаетСПолучателем Тогда
			ЗаполнитьГрузПринялПоГрузПолучил();
		Иначе
			ЗаполнитьГрузПринялПоНастройкамПользователя();
		КонецЕсли;
	Иначе
		ЗаполнитьГрузПринялПоСертификату();
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьГрузПринялПоГрузПолучил()
	
	СтруктураФИО= СтруктураФИО(ФИО);
	ФамилияГрузПринял= 	СтруктураФИО.Фамилия;
	ИмяГрузПринял= 		СтруктураФИО.Имя;
	ОтчествоГрузПринял= СтруктураФИО.Отчество;
	
	ДолжностьГрузПринял= Должность;
	
КонецПроцедуры

Процедура ЗаполнитьГрузПринялПоНастройкамПользователя()
	ФамилияГрузПринял	= ОдинСАдаптер_НастройкиТекущегоПользователя_ПолучитьНастройку("ДиадокФамилияГрузПринял");
	ИмяГрузПринял		= ОдинСАдаптер_НастройкиТекущегоПользователя_ПолучитьНастройку("ДиадокИмяГрузПринял");
	ОтчествоГрузПринял	= ОдинСАдаптер_НастройкиТекущегоПользователя_ПолучитьНастройку("ДиадокОтчествоГрузПринял");
	ДолжностьГрузПринял	= ОдинСАдаптер_НастройкиТекущегоПользователя_ПолучитьНастройку("ДиадокДолжностьГрузПринял");
КонецПроцедуры

Процедура ЗаполнитьГрузПринялПоСертификату()
	
	ПараметрыПодписания= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьПараметрыПодписанияТ12вДиадок(Организация);
	
	ДолжностьГрузПринял= ПараметрыПодписания.ДолжностьПодписанта;
	
	ФамилияГрузПринял=	"";
	ИмяГрузПринял=		"";
	ОтчествоГрузПринял= "";	
	
	МассивФИО= ПреобразоватьСтрокуВМассивПодстрок(ПараметрыПодписания.ФИОПодписанта, " ");
	МассивФИОКоличество= МассивФИО.Количество();
	
	Если МассивФИОКоличество > 0 Тогда
		ФамилияГрузПринял= МассивФИО[0];
	КонецЕсли;
	
	Если МассивФИОКоличество > 1 Тогда
		ИмяГрузПринял= МассивФИО[1];
	КонецЕсли;
	
	Если МассивФИОКоличество > 2 Тогда
		ОтчествоГрузПринял= МассивФИО[2];
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьГрузПолучил()
	Должность 	= "";
	ФИО 		= "";	
КонецПроцедуры

Процедура ОчиститьГрузПринял()
	ДолжностьГрузПринял = "";
	ФамилияГрузПринял = "";
	ИмяГрузПринял = "";
	ОтчествоГрузПринял = "";
КонецПроцедуры

Процедура ЗаполнитьСтруктуруДоверенностиПоУмолчанию()
	
	СтруктураДоверенности= ПолучитьФорму("Форма_Основная_Логика").ПолучитьДанныеДоверенности();
	
КонецПроцедуры

Функция РезультатСклоненияСловаПодписано(Знач Числительное)
	
	Числительное= Число(Прав(Формат(Числительное, "ЧГ="), 2));
	
	Если Числительное > 19 Тогда
		Числительное= Число(Прав(Формат(Числительное, "ЧГ="), 1));
	КонецЕсли;
	
	Если Числительное = 1 Тогда
		Возврат "подписан";
	Иначе
		Возврат "подписано";
	КонецЕсли;	
	
КонецФункции

//} ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

СтандартнаяВысотаЭлементов= Новый Структура("ЭтаФорма, ПанельГрузПолучил, ПанельГрузПринял, ПанельДополнительныеДокументыНаПодпись",
							ЭтаФорма.Высота, ЭлементыФормы.ПанельГрузПолучил.Высота, ЭлементыФормы.ПанельГрузПринял.Высота, ЭлементыФормы.ПанельДополнительныеДокументыНаПодпись.Высота);