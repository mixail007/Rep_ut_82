
//{ Экспортные процедуры и функции

Функция ВыбратьПодразделениеКонтрагентаДиадок(IdОрганизации, IdКонтрагента, idПодразделенияКонтрагента = "") Экспорт
	
	СписокОрганизаций.Строки.Очистить();
	
	Организация	= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").BoxID_2_Организация(IdОрганизации);
	Ящик		= Модуль_РаботаССерверомДиадок.ПолучитьЯщикДиадокДляОрганизации(Организация);
	Countragent = Ящик.GetCounteragentById(IdКонтрагента);
	
	СтрокаДерева = СписокОрганизаций.Строки.Добавить();
	СтрокаДерева.Представление	= Countragent.name;
	СтрокаДерева.Ссылка			= Countragent;
	СтрокаДерева.OrganizationID	= Countragent.ID;
	СтрокаДерева.Адрес			= ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").СформироватьПредставлениеАдресаПоContent(Countragent.Address);
	СтрокаДерева.КПП			= Countragent.Kpp;
	
	СтрокаДляПозиционирования = СформироватьСписокПодчиненныхПодразделений(строкаДерева, Countragent.Departments, idПодразделенияКонтрагента);
	Элементыформы.СписокОрганизаций.Развернуть(СтрокаДерева, Истина);
	
	Если СтрокаДляПозиционирования <> Неопределено Тогда 
		Элементыформы.СписокОрганизаций.ТекущаяСтрока = СтрокаДляПозиционирования;
	КонецЕсли;
	
	ВключатьПодчиненныеПодазделения = Истина;
	ПоказыватьГалочку = Ложь;
	
	Возврат ОткрытьМодально();
	
КонецФункции

Функция ВыбратьПодразделениеОрганизацииДиадок(IdОрганизации, Department = Неопределено) Экспорт
	
	СписокОрганизаций.Строки.Очистить();
	DepartmentKpp = ПолучитьКПППодразделения(Department);
	Организация = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").BoxID_2_Организация(IdОрганизации, DepartmentKpp);
	
	ТекущаяСтрока = Неопределено;
	тз = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьТаблицуЯщиковДиадокОрганизации(Организация);
	
	СписокОрганизаций.Строки.Очистить();
	Для Каждого стрИсх Из тз Цикл
		
		СтрокаДляПозиционирования = ДобавитьОрганизациюСПодразделениями(стрИсх, IdОрганизации, ?(Department = Неопределено, "", Department.Id));
		Если СтрокаДляПозиционирования <> Неопределено Тогда 
			ТекущаяСтрока = СтрокаДляПозиционирования;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТекущаяСтрока <> Неопределено Тогда 
		Элементыформы.СписокОрганизаций.ТекущаяСтрока = ТекущаяСтрока;
	КонецЕсли;	
	
	ВключатьПодчиненныеПодазделения = Истина; 
	ПоказыватьГалочку = Ложь;
	
	Возврат ОткрытьМодально();
	
КонецФункции

Функция ВыбратьОрганизациюИПодразделениеДиадок(idТекущейОрганизации = "", idТекущегоПодразделения = "", тмпПоказыватьГалочку = Ложь) Экспорт
	
	СписокОрганизаций.Строки.Очистить();
	
	ТекущаяСтрока = Неопределено;
	тз = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьТаблицуЯщиковДиадокОрганизации(Неопределено);
	
	СписокОрганизаций.Строки.Очистить();	
	Для Каждого стрИсх Из тз Цикл
		
		СтрокаДляПозиционирования = ДобавитьОрганизациюСПодразделениями(стрИсх, idТекущейОрганизации, idТекущегоПодразделения);
		Если СтрокаДляПозиционирования <> Неопределено Тогда 
			ТекущаяСтрока = СтрокаДляПозиционирования;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТекущаяСтрока <> Неопределено Тогда 
		Элементыформы.СписокОрганизаций.ТекущаяСтрока = ТекущаяСтрока;
	КонецЕсли;	
	
	ВключатьПодчиненныеПодазделения = Истина; 
	Показыватьгалочку = тмпПоказыватьГалочку;
	
	Возврат ОткрытьМодально();
	
КонецФункции

//} Экспортные процедуры и функции


//{ Обработчики событий формы

Процедура ПриОткрытии()
	
	Элементыформы.ВключатьПодчиненныеПодазделения.Видимость = Показыватьгалочку;
	КартинкаЗаголовка = ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	
КонецПроцедуры

//} Обработчики событий формы


//{ Обработчики событий элементов формы

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ЗавершитьВыбор();
	
КонецПроцедуры

Процедура СписокОрганизацийПриАктивизацииСтроки(Элемент)
	
	ВключатьПодчиненныеПодазделения = Не Элементыформы.СписокОрганизаций.ТекущаяСтрока.БезПодчиненных;
	Элементыформы.ВключатьПодчиненныеПодазделения.Доступность = ВключатьПодчиненныеПодазделения;
	
КонецПроцедуры

Процедура СписокОрганизацийПередНачаломИзменения(Элемент, Отказ)
	
	ЗавершитьВыбор();
	
КонецПроцедуры

Процедура СписокОрганизацийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура СписокОрганизацийПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ШрифтЖирный = Новый Шрифт(,,  Истина);
	Для Каждого стр из ОформленияСтрок Цикл 
		Если ЗначениеЗаполнено(стр.ДанныеСтроки.Ссылка) Тогда 
			стр.Шрифт = ШрифтЖирный;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//} Обработчики событий элементов формы


//{ Вспомогательные процедуры и функции

Функция DepartmentВходитВDepartments(departmentИскомый, departments, СопоставленныеDepartmentId = Неопределено)
	
	Для ц = 0 по departments.Count - 1 Цикл 
		
		Department = departments.getItem(ц);
		Если СопоставленныеDepartmentId <> Неопределено Тогда
			Если СопоставленныеDepartmentId.Найти(department.Id) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если department.Id = departmentИскомый.Id Тогда
			Возврат Истина;
		КонецЕсли;
		
		Если DepartmentВходитВDepartments(departmentИскомый, department.SubDepartments) Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция DepartmentВходитВТекущееДеревоПодразделений(department, ДанныеСопоставленнойОрганизации)
	
	Organization = Модуль_РаботаССерверомДиадок.ПолучитьЯщикДиадокДляОрганизации(ДанныеСопоставленнойОрганизации.Объект);
	Если НЕ ПустаяСтрока(ДанныеСопоставленнойОрганизации.КПППодразделения) Тогда
		
		rootDepartment = РаботаССерверомДиадок_ПолучитьDepartment(Organization, ДанныеСопоставленнойОрганизации.КПППодразделения);
		departments = rootDepartment.SubDepartments;
		Если rootDepartment.Id = department.Id Тогда
			Возврат Истина;
		КонецЕсли;
		СопоставленныеDepartmentId = Неопределено;
		
	Иначе
		departments = Organization.Departments;
		СопоставленныеDepartmentId = ПолучитьСопоставленныеФилиаламDepartmentId();
	КонецЕсли;
	
	Возврат DepartmentВходитВDepartments(department, departments, СопоставленныеDepartmentId);
	
КонецФункции

Функция ДобавитьОрганизациюСПодразделениями(стрИсх, ТекущееOraganizationID, DepartmentId)
	
	СтрокаДерева = СписокОрганизаций.Строки.Добавить();
	СтрокаДерева.Представление 		= стрИсх.Представление;
	СтрокаДерева.OrganizationName 	= СтрокаДерева.Представление;
	СтрокаДерева.Ссылка 	  		= стрИсх.Объект;
	СтрокаДерева.OrganizationID 	= стрИсх.Значение;
	
	СтрокаДляПозиционирования = Неопределено;
	
	Ящик = Модуль_РаботаССерверомДиадок.ПолучитьЯщикДиадокДляОрганизации(стрИсх.Объект);
	UserPermissions = Ящик.GetUserPermissions();
	
	Если (UserPermissions.DocumentsAccessLevel = "AllDocuments" ) 
		ИЛИ (UserPermissions.DocumentsAccessLevel = "DepartmentAndSubdepartments" И UserPermissions.UserDepartment = Неопределено) Тогда 
		
		СтрокаДляПозиционирования = ДобавитьТекущееДеревоПодразделений(СтрокаДерева, стрИсх, DepartmentId);
		Элементыформы.СписокОрганизаций.Развернуть(СтрокаДерева, Истина);
		
	ИначеЕсли UserPermissions.DocumentsAccessLevel = "DepartmentOnly" Тогда
		
		Если UserPermissions.UserDepartment <> Неопределено Тогда 
			
			Если DepartmentВходитВТекущееДеревоПодразделений(UserPermissions.UserDepartment, стрИсх) Тогда
				
				СтрокаДерева.DepartmentID			= UserPermissions.UserDepartment.id;
				СтрокаДерева.DepartmentName			= UserPermissions.UserDepartment.Name;
				СтрокаДерева.Представление			= СтрокаДерева.Представление + " (только " + UserPermissions.UserDepartment.Name + ")";
				СтрокаДерева.БезПодчиненных			= Истина;
				СтрокаДерева.Адрес					= ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").СформироватьПредставлениеАдресаПоContent(UserPermissions.UserDepartment.Address);
				СтрокаДерева.КПП					= UserPermissions.UserDepartment.Kpp;
				СтрокаДерева.КраткоеНаименование	= UserPermissions.UserDepartment.Abbreviation;
				
			КонецЕсли;
			
		Иначе	
			СтрокаДерева.Представление	= СтрокаДерева.Представление + " (только головное подразделение)";
			СтрокаДерева.БезПодчиненных	= Истина;
		КонецЕсли;
		СтрокаДляПозиционирования = СтрокаДерева;
		
	Иначе 
		
		Если НЕ UserPermissions.UserDepartment = Неопределено
			И DepartmentВходитВТекущееДеревоПодразделений(UserPermissions.UserDepartment, стрИсх) Тогда
			
			СтрокаДерева.DepartmentID			= UserPermissions.UserDepartment.id;
			СтрокаДерева.DepartmentName			= UserPermissions.UserDepartment.Name;
			СтрокаДерева.Представление			= СтрокаДерева.Представление + " (" + UserPermissions.UserDepartment.Name + ")";			
			СтрокаДерева.Адрес					= ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").СформироватьПредставлениеАдресаПоContent(UserPermissions.UserDepartment.Address);
			СтрокаДерева.КПП					= UserPermissions.UserDepartment.Kpp;
			СтрокаДерева.КраткоеНаименование	= UserPermissions.UserDepartment.Abbreviation;
			СтрокаДляПозиционирования = СформироватьСписокПодчиненныхПодразделений(СтрокаДерева, UserPermissions.UserDepartment.SubDepartments, DepartmentId); 
			
		Иначе
			СтрокаДляПозиционирования = ДобавитьТекущееДеревоПодразделений(строкаДерева, стрИсх, DepartmentId);
		КонецЕсли;
		
		Элементыформы.СписокОрганизаций.Развернуть(строкаДерева, Истина);
		
	КонецЕсли;	
	
	Если ТекущееOraganizationID = СтрокаДерева.OrganizationID И DepartmentId = СтрокаДерева.DepartmentID Тогда 
		СтрокаДляПозиционирования = СтрокаДерева;
	КонецЕсли;
	
	Возврат СтрокаДляПозиционирования;
	
КонецФункции

Функция ДобавитьТекущееДеревоПодразделений(СтрокаДереваПриемник, ДанныеСопоставленнойОрганизации, idТекущегоПодразделения)
	
	Organization = Модуль_РаботаССерверомДиадок.ПолучитьЯщикДиадокДляОрганизации(ДанныеСопоставленнойОрганизации.Объект);
	Если ПустаяСтрока(ДанныеСопоставленнойОрганизации.КПППодразделения) = Ложь Тогда
		
		rootDepartment = РаботаССерверомДиадок_ПолучитьDepartment(Organization, ДанныеСопоставленнойОрганизации.КПППодразделения);
		departments = rootDepartment.SubDepartments;
		СтрокаДереваПриемник.DepartmentID = rootDepartment.Id;
		СопоставленныеDepartmentId = Неопределено;
		
	Иначе
		departments = Organization.Departments;
		СопоставленныеDepartmentId = ПолучитьСопоставленныеФилиаламDepartmentId();
	КонецЕсли;
	
	Возврат СформироватьСписокПодчиненныхПодразделений(СтрокаДереваПриемник, departments, idТекущегоПодразделения, СопоставленныеDepartmentId);
	
КонецФункции

Процедура ЗавершитьВыбор()
	
	текДанные = ЭлементыФормы.СписокОрганизаций.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Предупреждение("Выберите организацию.",, НаименованиеСистемы);
		Возврат;
	КонецЕсли;
	
	текущаяСтрока = ЭлементыФормы.СписокОрганизаций.ТекущаяСтрока;
	Если ЗначениеЗаполнено(текущаяСтрока.DepartmentID) = Ложь Тогда 
		
		//это ссылка на органищацию 
		Закрыть(Новый Структура("ID, Наименование, ОрганизацияСсылка, DepartmentID, ПредставлениеПодразделения, ВключатьПодчиненныеПодазделения",
								текущаяСтрока.OrganizationID,
								текущаяСтрока.OrganizationName,
								текущаяСтрока.Ссылка,
								"",
								"",
								ВключатьПодчиненныеПодазделения));
	Иначе 
		
		//это ссылка на подразделение организации
		ПредставлениеПодразделения = текущаястрока.DepartmentName;
		строкаОрганизации = текущаяСтрока;
		Пока ЗначениеЗаполнено(строкаОрганизации.Родитель) Цикл  
			СтрокаОрганизации = СтрокаОрганизации.Родитель;
		КонецЦикла;	
		Закрыть(Новый Структура("ID, Наименование, ОрганизацияСсылка, DepartmentID, ПредставлениеПодразделения, ВключатьПодчиненныеПодазделения",
								СтрокаОрганизации.OrganizationID,
								СтрокаОрганизации.OrganizationName,
								СтрокаОрганизации.Ссылка,
								текущаяСтрока.DepartmentID,
								ПредставлениеПодразделения,
								ВключатьПодчиненныеПодазделения));
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКПППодразделения(Department)
	
	DepartmentKpp = "";
	Если Department <> Неопределено Тогда
		
		тз = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьТаблицуЯщиковДиадокОрганизации();
		Для Каждого стр Из тз Цикл
			Если DepartmentВходитВТекущееДеревоПодразделений(Department, стр) Тогда
				DepartmentKpp = стр.КПППодразделения;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат DepartmentKpp;
	
КонецФункции

Функция ПолучитьСопоставленныеФилиаламDepartmentId()
	
	СопоставленныеDepartmentId = Новый Массив;
	ДанныеСопоставленныхОрганизаций = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьТаблицуЯщиковДиадокОрганизации();
	Для Каждого данныеСопоставления Из ДанныеСопоставленныхОрганизаций Цикл
		
		Organization = Модуль_РаботаССерверомДиадок.ПолучитьЯщикДиадокДляОрганизации(данныеСопоставления.Объект);
		Если Не ПустаяСтрока(данныеСопоставления.КПППодразделения) Тогда
			СопоставленныеDepartmentId.Добавить(РаботаССерверомДиадок_ПолучитьDepartment(Organization, данныеСопоставления.КПППодразделения).Id);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СопоставленныеDepartmentId;
	
КонецФункции

Функция СформироватьСписокПодчиненныхПодразделений(строкаДерева, Departments, idТекущегоПодразделения = "", СопоставленныеDepartmentId = Неопределено)
	
	Результат = Неопределено;
	Для ц = 0 По departments.count - 1 Цикл 
		
		department = departments.getItem(ц);
		Если СопоставленныеDepartmentId <> Неопределено И СопоставленныеDepartmentId.Найти(department.Id) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаПодразделения = строкаДерева.Строки.Добавить();
		СтрокаПодразделения.Представление		= department.Name;
		СтрокаПодразделения.DepartmentID		= department.ID;
		СтрокаПодразделения.DepartmentName		= department.Name;
		СтрокаПодразделения.Адрес				= ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").СформироватьПредставлениеАдресаПоContent(department.Address);
		СтрокаПодразделения.КПП					= department.Kpp;
		СтрокаПодразделения.КраткоеНаименование	= department.Abbreviation;
		
		СтрокаДляПозиционирования = СформироватьСписокПодчиненныхПодразделений(СтрокаПодразделения, department.SubDepartments, idТекущегоПодразделения);
		Если СтрокаПодразделения.DepartmentID = idТекущегоПодразделения Тогда 
			Результат = СтрокаПодразделения;
		ИначеЕсли СтрокаДляПозиционирования <> Неопределено Тогда 
			Результат = СтрокаДляПозиционирования;
		КонецЕсли;
		
	Конеццикла;	
	
	Возврат Результат;
	
КонецФункции

//} Вспомогательные процедуры и функции
