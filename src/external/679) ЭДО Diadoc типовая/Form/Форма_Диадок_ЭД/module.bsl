
Функция ПолучитьСтруктуруСодержанияДокумента(Document, DocumentContent) Экспорт
	
	//	TO-DO: В связи с тем что у функции появлися входящий параметр DocumentContent,
	//		   нужно SaveSenderContent() переписать на DocumentContent по аналогии с тем как это сделано с XmlTorg12Content. 
	
	Если DocumentContent.Type = "XmlTorg12Content" Тогда
		
		стДокумент= Новый Структура("Document, Type, Items", Document, "XmlTorg12");
				
		тзТабличнаяЧасть = Новый ТаблицаЗначений();
		тзТабличнаяЧасть.Колонки.Добавить("Name");
		тзТабличнаяЧасть.Колонки.Добавить("Code");
		тзТабличнаяЧасть.Колонки.Добавить("NomenclatureArticle");
		тзТабличнаяЧасть.Колонки.Добавить("Quantity");
		тзТабличнаяЧасть.Колонки.Добавить("UnitCode");
		тзТабличнаяЧасть.Колонки.Добавить("UnitName");
		тзТабличнаяЧасть.Колонки.Добавить("Price");
		тзТабличнаяЧасть.Колонки.Добавить("SubtotalWithVatExcluded");
		тзТабличнаяЧасть.Колонки.Добавить("Vat");
		тзТабличнаяЧасть.Колонки.Добавить("Subtotal");
		тзТабличнаяЧасть.Колонки.Добавить("TaxRate");
				
		Items= DocumentContent.Items;
		Для Ц=0 по Items.Count()-1 Цикл
			
			Item= Items.GetItem(Ц);
								
			НоваяСтрока= тзТабличнаяЧасть.Добавить();
			
			НоваяСтрока.Name= 		СокрЛП(Item.Product);
			НоваяСтрока.Code= 		СокрЛП(Item.ProductCode);
			НоваяСтрока.NomenclatureArticle= ?(ЗначениеЗаполнено(Item.Article), Item.Article, Неопределено);
			НоваяСтрока.UnitCode= 	Item.UnitCode; 
			НоваяСтрока.UnitName= 	Item.UnitName; 
			НоваяСтрока.Quantity= 	Item.Quantity;
			НоваяСтрока.Price= 		Item.Price;
			НоваяСтрока.SubtotalWithVatExcluded= Item.TotalWithVatExcluded;
			НоваяСтрока.Vat= 		Item.vat;
			НоваяСтрока.Subtotal= 	Item.Total;
			НоваяСтрока.TaxRate= 	?(Item.TaxRate=Неопределено, "", Item.TaxRate);
						
		КонецЦикла;
		
		Если НЕ (ЗначениеЗаполнено(DocumentContent.GroundDate) ИЛИ ЗначениеЗаполнено(DocumentContent.GroundNumber) ИЛИ ЗначениеЗаполнено(DocumentContent.GroundName)) Тогда
			стДокумент.Вставить("ДатаДоговора", 		"");
			стДокумент.Вставить("НомерДоговора", 		"");
			стДокумент.Вставить("НаименованиеДоговора", "");
		Иначе
			стДокумент.Вставить("ДатаДоговора", 		DocumentContent.GroundDate);
			стДокумент.Вставить("НомерДоговора",		DocumentContent.GroundNumber);
			стДокумент.Вставить("НаименованиеДоговора", DocumentContent.GroundName);
		КонецЕсли;
		
		стДокумент.Вставить("Shipper",		DocumentContent.Shipper); 	//грузоотправитель
		стДокумент.Вставить("Consignee",	DocumentContent.Consignee);	//грузополучатель
				
		стДокумент.Items = тзТабличнаяЧасть;
		стДокумент.Вставить("total", Document.Total);
		стДокумент.Вставить("vat", Document.Vat);
		
		Возврат стДокумент;
		
	ИначеЕсли DocumentContent.Type = "XmlAcceptanceCertificateContent" Тогда
		
		стДокумент = Новый Структура("Document, Type, Items", Document, "XmlAcceptanceCertificate");
		
		тзТабличнаяЧасть = Новый ТаблицаЗначений();
		тзТабличнаяЧасть.Колонки.Добавить("Name");
		тзТабличнаяЧасть.Колонки.Добавить("Code");
		тзТабличнаяЧасть.Колонки.Добавить("NomenclatureArticle");
		тзТабличнаяЧасть.Колонки.Добавить("Quantity");
		тзТабличнаяЧасть.Колонки.Добавить("UnitCode");
		тзТабличнаяЧасть.Колонки.Добавить("UnitName");
		тзТабличнаяЧасть.Колонки.Добавить("Price");
		тзТабличнаяЧасть.Колонки.Добавить("SubtotalWithVatExcluded");
		тзТабличнаяЧасть.Колонки.Добавить("Vat");
		тзТабличнаяЧасть.Колонки.Добавить("Subtotal");
		тзТабличнаяЧасть.Колонки.Добавить("TaxRate");
		
		
		имяФайла_ТитулОтправителя = ПолучитьИмяВременногоФайла("xml");
		//имяФайла_ТитулПолучателя = ПолучитьИмяВременногоФайла("xml");
		Document.SaveSenderContent(имяФайла_ТитулОтправителя);
		//Document.SaveRecipientContent(имяФайла_ТитулПолучателя);

		
		
		выборка = Новый ЧтениеXML;
		выборка.ОткрытьФайл(имяФайла_ТитулОтправителя);
		
		стр = Неопределено;
		пока выборка.Прочитать() цикл 
			Если (выборка.ТипУзла =   ТипУзлаXML.НачалоЭлемента) и   (врег(выборка.имя) = врег("Работа")) Тогда 
				//пришли на строку 
				стр = тзТабличнаяЧасть.Добавить();
				
				стр.Name = выборка.ЗначениеАтрибута("НаимРабот");
				стр.Code = "";
				
				стр.UnitCode = выборка.ЗначениеАтрибута("ОКЕИ");
				стр.UnitName = выборка.ЗначениеАтрибута("НаимЕдИзм");
				стр.Quantity = ЧислоИзXML(выборка.ЗначениеАтрибута("Количество"));
				стр.Price = ЧислоИзXML(выборка.ЗначениеАтрибута("Цена"));
				стр.SubtotalWithVatExcluded = ЧислоИзXML(выборка.ЗначениеАтрибута("СумБезНДС"));
				стр.Vat = ЧислоИзXML(выборка.ЗначениеАтрибута("СумНДС"));
				стр.Subtotal = ЧислоИзXML(выборка.ЗначениеАтрибута("СумУчНДС"));
				стр.TaxRate = ОпределитьСтавкуНДСПоУслуге(ЧислоИзXML(стр.SubtotalWithVatExcluded), ЧислоИзXML(?(ЗначениеЗаполнено(стр.Vat), стр.Vat, 0)));
				
				Если стр.TaxRate = "0" Тогда
					стр.TaxRate = ""; //для того, чтобы выводилась ставка "Без НДС"
				КонецЕсли;
				
			ИначеЕсли  (выборка.ТипУзла =   ТипУзлаXML.НачалоЭлемента) и (врег(выборка.имя) = врег("Описание")) Тогда 
				выборка.Прочитать();
				Если (выборка.ТипУзла =  ТипУзлаXML.Текст) Тогда 
					Если ПустаяСтрока(стр.Name) Тогда
						стр.Name = выборка.Значение;
						стр.Code = "";
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли (выборка.ТипУзла =   ТипУзлаXML.КонецЭлемента) и (врег(выборка.имя) = врег("Работа")) Тогда
				стр = Неопределено;
			КонецЕсли;
		КонецЦикла;	
		
		стДокумент.Вставить("ДатаДоговора","");
		стДокумент.Вставить("НомерДоговора","");
		стДокумент.Вставить("НаименованиеДоговора","");
		
		стДокумент.Items = тзТабличнаяЧасть;
		стДокумент.Вставить("total", Document.total);
		стДокумент.Вставить("vat", Document.vat);
		
		Возврат стДокумент;
		
	ИначеЕсли Лев(DocumentContent.Type, 7) = "Invoice" Тогда
		
		стДокумент = Новый Структура("Document, Type, Items", Document, "Invoice");
		
		тзТабличнаяЧасть = Новый ТаблицаЗначений();
		тзТабличнаяЧасть.Колонки.Добавить("LineNumber");
		тзТабличнаяЧасть.Колонки.Добавить("Name");
		тзТабличнаяЧасть.Колонки.Добавить("Code");
		тзТабличнаяЧасть.Колонки.Добавить("NomenclatureArticle");
		тзТабличнаяЧасть.Колонки.Добавить("Quantity");
		тзТабличнаяЧасть.Колонки.Добавить("UnitCode");
		тзТабличнаяЧасть.Колонки.Добавить("UnitName");
		тзТабличнаяЧасть.Колонки.Добавить("Price");
		тзТабличнаяЧасть.Колонки.Добавить("SubtotalWithVatExcluded");
		тзТабличнаяЧасть.Колонки.Добавить("Vat");
		тзТабличнаяЧасть.Колонки.Добавить("Subtotal");
		тзТабличнаяЧасть.Колонки.Добавить("TaxRate");
		тзТабличнаяЧасть.Колонки.Добавить("CountryCode");
		тзТабличнаяЧасть.Колонки.Добавить("TDNumber");
		
		имяФайла_ТитулОтправителя = ПолучитьИмяВременногоФайла("xml");
		Document.SaveSenderContent(имяФайла_ТитулОтправителя);
		выборка = Новый ЧтениеXML;
		выборка.ОткрытьФайл(имяФайла_ТитулОтправителя);
		
		пока выборка.Прочитать() цикл 
			Если (выборка.ТипУзла =   ТипУзлаXML.НачалоЭлемента) и   (врег(выборка.имя) = врег("СведТов")) Тогда 
				//пришли на строку 
				стр = тзТабличнаяЧасть.Добавить();
				
				стр.LineNumber = выборка.ЗначениеАтрибута("НомСтр");
				стр.Name = выборка.ЗначениеАтрибута("НаимТов");
				стр.Code = выборка.ЗначениеАтрибута("КодТов");
				стр.NomenclatureArticle = выборка.ЗначениеАтрибута("АртикулТов");
				стр.UnitCode = выборка.ЗначениеАтрибута("ОКЕИ_Тов");
				стр.UnitName = выборка.ЗначениеАтрибута("НаимЕдИзм");
				стр.Quantity = ЧислоИзXML(СокрЛП(выборка.ЗначениеАтрибута("КолТов")));
				стр.Price = ЧислоИзXML(выборка.ЗначениеАтрибута("ЦенаТов"));
				стр.SubtotalWithVatExcluded = ЧислоИзXML(выборка.ЗначениеАтрибута("СтТовБезНДС"));
				стр.Subtotal = ЧислоИзXML(выборка.ЗначениеАтрибута("СтТовУчНал"));
				стр.Vat = ЧислоИзXML(Выборка.ЗначениеАтрибута("СумНДС"));
				стр.TaxRate = выборка.ЗначениеАтрибута("НалСт");
			КонецЕсли;
			Если (выборка.ТипУзла =   ТипУзлаXML.НачалоЭлемента) и   (врег(выборка.имя) = врег("НалСт")) Тогда 
				Выб = Выборка;
				Выб.Прочитать();
				стр.TaxRate = выборка.ЗначениеАтрибута("НалСтВел");
			КонецЕсли;
			Если (выборка.ТипУзла =   ТипУзлаXML.НачалоЭлемента) и   (врег(выборка.имя) = врег("СумНал")) Тогда
				Выб = Выборка;
				Выб.Прочитать();
				стр.Vat = ЧислоИзXML(Выборка.ЗначениеАтрибута("СумНДС"));
			КонецЕсли;
			Если (Выборка.ТипУзла = ТипУзлаXML.НачалоЭлемента) И (Врег(Выборка.Имя) = Врег("СвТД")) Тогда 
				Стр.TDNumber 	= Выборка.ЗначениеАтрибута("НомерТД");
				Стр.CountryCode = Выборка.ЗначениеАтрибута("КодПроисх");
			КонецЕсли;
			Если (Выборка.ТипУзла = ТипУзлаXML.НачалоЭлемента) И (Врег(Выборка.Имя) = Врег("ДопСведТов")) Тогда 
				стр.UnitName = выборка.ЗначениеАтрибута("НаимЕдИзм");
				стр.Code = выборка.ЗначениеАтрибута("КодТов");
			КонецЕсли;
		КонецЦикла;	
		
		стДокумент.Вставить("ДатаДоговора","");
		стДокумент.Вставить("НомерДоговора","");
		стДокумент.Вставить("НаименованиеДоговора","");	
		
		стДокумент.Items = тзТабличнаяЧасть;
		
		Возврат стДокумент;
		
	ИначеЕсли DocumentContent.Type = "UniversalTransferDocument" Тогда
		
		стДокумент = Новый Структура("Document, Type, Items", Document, "UniversalTransferDocument");
		
		тзТабличнаяЧасть = Новый ТаблицаЗначений();
		тзТабличнаяЧасть.Колонки.Добавить("LineNumber");
		тзТабличнаяЧасть.Колонки.Добавить("Name");
		тзТабличнаяЧасть.Колонки.Добавить("Code");
		тзТабличнаяЧасть.Колонки.Добавить("NomenclatureArticle");
		тзТабличнаяЧасть.Колонки.Добавить("Quantity");
		тзТабличнаяЧасть.Колонки.Добавить("UnitCode");
		тзТабличнаяЧасть.Колонки.Добавить("UnitName");
		тзТабличнаяЧасть.Колонки.Добавить("Price");
		тзТабличнаяЧасть.Колонки.Добавить("SubtotalWithVatExcluded");
		тзТабличнаяЧасть.Колонки.Добавить("Vat");
		тзТабличнаяЧасть.Колонки.Добавить("Subtotal");
		тзТабличнаяЧасть.Колонки.Добавить("TaxRate");
		тзТабличнаяЧасть.Колонки.Добавить("CountryCode");
		тзТабличнаяЧасть.Колонки.Добавить("TDNumber");
		
		имяФайла_ТитулОтправителя = ПолучитьИмяВременногоФайла("xml");
		Document.SaveSenderContent(имяФайла_ТитулОтправителя);
		выборка = Новый ЧтениеXML;
		выборка.ОткрытьФайл(имяФайла_ТитулОтправителя);
		
		пока выборка.Прочитать() цикл 
			Если (выборка.ТипУзла =   ТипУзлаXML.НачалоЭлемента) и   (врег(выборка.имя) = врег("СведТов")) Тогда 
				//пришли на строку 
				стр = тзТабличнаяЧасть.Добавить();
				
				стр.LineNumber = выборка.ЗначениеАтрибута("НомСтр");
				стр.Name = выборка.ЗначениеАтрибута("НаимТов");
				стр.Code = выборка.ЗначениеАтрибута("КодТов");
				стр.NomenclatureArticle = выборка.ЗначениеАтрибута("АртикулТов");
				стр.UnitCode = выборка.ЗначениеАтрибута("ОКЕИ_Тов");
				стр.UnitName = выборка.ЗначениеАтрибута("НаимЕдИзм");
				стр.Quantity = ЧислоИзXML(СокрЛП(выборка.ЗначениеАтрибута("КолТов")));
				стр.Price = ЧислоИзXML(выборка.ЗначениеАтрибута("ЦенаТов"));
				стр.SubtotalWithVatExcluded = ЧислоИзXML(выборка.ЗначениеАтрибута("СтТовБезНДС"));
				стр.Subtotal = ЧислоИзXML(выборка.ЗначениеАтрибута("СтТовУчНал"));
				стр.Vat = ЧислоИзXML(Выборка.ЗначениеАтрибута("СумНДС"));
				стр.TaxRate = выборка.ЗначениеАтрибута("НалСт");
			КонецЕсли;
			Если (выборка.ТипУзла =   ТипУзлаXML.НачалоЭлемента) и   (врег(выборка.имя) = врег("НалСт")) Тогда 
				Выб = Выборка;
				Выб.Прочитать();
				стр.TaxRate = выборка.ЗначениеАтрибута("НалСтВел");
			КонецЕсли;
			Если (выборка.ТипУзла =   ТипУзлаXML.НачалоЭлемента) и   (врег(выборка.имя) = врег("СумНал")) Тогда
				Выб = Выборка;
				Выб.Прочитать();
				Выб.Прочитать();
				Если Выб.ИмеетЗначение Тогда
					стр.Vat= ЧислоИзXML(Выб.Значение);
				КонецЕсли;
			КонецЕсли;
			Если (Выборка.ТипУзла = ТипУзлаXML.НачалоЭлемента) И (Врег(Выборка.Имя) = Врег("СвТД")) Тогда 
				
				Если ЗначениеЗаполнено(Стр.TDNumber) Тогда
					
					// Коллекция различных номеров ГТД в одной товарной строке не поддерживается в типовыми конфигурациями 1С.
					Если Стр.TDNumber <> Выборка.ЗначениеАтрибута("НомерТД") Тогда
						Стр.TDNumber= 	 Неопределено;
						Стр.CountryCode= Неопределено;
					КонецЕсли;
					
				Иначе
					Стр.TDNumber= 	 Выборка.ЗначениеАтрибута("НомерТД");
					Стр.CountryCode= Выборка.ЗначениеАтрибута("КодПроисх");
				КонецЕсли;
				
			КонецЕсли;
			Если (Выборка.ТипУзла = ТипУзлаXML.НачалоЭлемента) И (Врег(Выборка.Имя) = Врег("ДопСведТов")) Тогда 
				стр.UnitName = выборка.ЗначениеАтрибута("НаимЕдИзм");
				стр.Code = выборка.ЗначениеАтрибута("КодТов");
			КонецЕсли;
		КонецЦикла;	
		
		стДокумент.Вставить("ДатаДоговора","");
		стДокумент.Вставить("НомерДоговора","");
		стДокумент.Вставить("НаименованиеДоговора","");	
		
		стДокумент.Вставить("total", Document.total);
		стДокумент.Вставить("vat"  , Document.vat);
		
		стДокумент.Items = тзТабличнаяЧасть;
		
		Возврат стДокумент;
		
	ИначеЕсли DocumentContent.Type = "UniversalCorrectionDocument" Тогда
		ВызватьИсключение "Создание УКД не предусмотрено!";
	Иначе
		ВызватьИсключение "Неизвестный Type объекта Document: """ + DocumentContent.Type + """";
	КонецЕсли;
	
КонецФункции

Функция ДляDocumentЕстьГТД(Document) Экспорт
		
	Если Document.Type = "UniversalTransferDocument" И ТипДокументаУПД(Document.Function) = ТипДокументаУПД("СЧФДОП") Тогда
		
		СтруктураInvoice = ПолучитьСтруктуруСодержанияДокумента(Document, Document.GetContent());
		Для Каждого Item Из СтруктураInvoice.Items Цикл
			Если ЗначениеЗаполнено(Item.TDNumber) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
			
		Invoice = Модуль_РаботаССерверомДиадок.ПолучитьСвязанныйInvoice(Document);
		
		Если Invoice = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		СтруктураInvoice = ПолучитьСтруктуруСодержанияДокумента(Invoice, Invoice.GetContent());
		Для Каждого Item Из СтруктураInvoice.Items Цикл
			Если ЗначениеЗаполнено(Item.TDNumber) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьСоответствиеСтрокСГТД(СтруктураDocument) Экспорт
	
	Invoice = Модуль_РаботаССерверомДиадок.ПолучитьСвязанныйInvoice(СтруктураDocument.Document);
	
	Если Invoice = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураInvoice = ПолучитьСтруктуруСодержанияДокумента(Invoice, Invoice.GetContent());
	
	СоответствиеГТД = Новый Соответствие;
	ПустаяТЗInvoiceItem = СтруктураInvoice.Items.Скопировать();
	ПустаяТЗInvoiceItem.Очистить();
	Для каждого СтрокаDocument Из СтруктураDocument.Items Цикл
		СоответствиеГТД[СтрокаDocument] = ПустаяТЗInvoiceItem.Скопировать();
	КонецЦикла;
	
	ОставшиесяДляОбработкиInvoiceItems = СтруктураInvoice.Items.Скопировать();
	Для Каждого СтрокаDocument Из СтруктураDocument.Items Цикл
		Если ОставшиесяДляОбработкиInvoiceItems.Количество() = 0 Тогда
			Прервать;
		КонецЕсли;
		
		ОтделенныеInvoiceItems = ОтделитьСтрокиВInvoiceДляNameИQuantity(ОставшиесяДляОбработкиInvoiceItems, СтрокаDocument.Name, СтрокаDocument.Quantity);
		Если ОтделенныеInvoiceItems.Итог("Quantity") = СтрокаDocument.Quantity Тогда
			СоответствиеГТД[СтрокаDocument] = ОтделенныеInvoiceItems;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СоответствиеГТД;
	
КонецФункции

Функция ОтделитьСтрокиВInvoiceДляNameИQuantity(InvoiceItems, documentName, documentQuantity)
	отделенныеСтроки = InvoiceItems.Скопировать();
	отделенныеСтроки.Очистить();
	строкиДляУдаленияИзИсходнойInvoiceItems = Новый Массив;
	
	Для каждого строкаInvoice Из InvoiceItems Цикл
		Если отделенныеСтроки.Итог("Quantity") >= documentQuantity Тогда
			Прервать;
		КонецЕсли;
		Если НЕ СтрокиПодобны(строкаInvoice.Name, documentName) Тогда
			Прервать;
		КонецЕсли;
		
		отделеннаяСтрока = отделенныеСтроки.Добавить();
		ЗаполнитьЗначенияСвойств(отделеннаяСтрока, строкаInvoice);
		строкиДляУдаленияИзИсходнойInvoiceItems.Добавить(строкаInvoice);
	КонецЦикла;
	УдалитьСтрокиИзТаблицыЗначений(InvoiceItems, строкиДляУдаленияИзИсходнойInvoiceItems);
	
	Возврат отделенныеСтроки;
КонецФункции



Процедура УдалитьСтрокиИзТаблицыЗначений(ТЗ, массивСтрок)
	Для каждого строка Из массивСтрок Цикл
		ТЗ.Удалить(строка);
	КонецЦикла;
КонецПроцедуры

Функция ЧислоИзXML(Значение)
	Если ПустаяСтрока(Значение) Тогда
		Возврат 0;
	ИначеЕсли Значение = "без НДС" Тогда
		Возврат 0
	иначе	
		Возврат Число(Значение);
	КонецЕсли;
КонецФункции

Функция СтрокиПодобны(Строка1, Строка2)
	минДлина = Мин(СтрДлина(Строка1), СтрДлина(Строка2));
	Если минДлина = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат НРег(Лев(Строка1, минДлина)) = НРег(Лев(Строка2, минДлина));
КонецФункции

Функция МассивыРавны(Массив1, Массив2)
	Если Массив1.Количество() <> Массив2.Количество() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Инд = 1 По Массив1.Количество() Цикл
		Если Массив1[Инд - 1] <> Массив2[Инд - 1] Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

Функция ОпределитьСтавкуНДСПоУслуге(СуммаБезНДС, СуммаНДС)
	Если СуммаБезНДС = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	расчетнаяСтавка = 100 * СуммаНДС / СуммаБезНДС;
	Если расчетнаяСтавка < 5 Тогда
		Возврат "0";
	ИначеЕсли расчетнаяСтавка < 14 Тогда
		Возврат "10";
	Иначе
		Возврат "18";
	КонецЕсли;
КонецФункции

