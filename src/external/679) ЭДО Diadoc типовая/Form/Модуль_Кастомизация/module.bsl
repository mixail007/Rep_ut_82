Перем ВалютаРегламентированногоУчета;

//{ ТЕЛО МОДУЛЯ
	
	Функция ПолучитьПредставлениеСтавкиНДС(СтавкаНДС, дляСФ=Истина) Экспорт 
		Если СтавкаНДС = перечисления.СтавкиНДС.НДС0 Тогда 
			Возврат "0"
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС10 Тогда 
			Возврат "10"
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС18 Тогда 
			Возврат "18"
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС20 Тогда 
			Возврат "20"
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС10_110 Тогда 
			Возврат ?(ДляСФ, "10/110","##");
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС18_118 Тогда 
			Возврат ?(ДляСФ, "18/118", "##");
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.БезНДС Тогда 
			Возврат ?(ДляСФ, "без НДС", "");
		ИначеЕсли ЗначениеЗаполнено(СтавкаНДС)=Ложь Тогда 
			Возврат "";
		Иначе 
			Возврат "##"
		КонецЕсли;
	КонецФункции 
	
	Функция ПолучитьНомерНаПечатьДиадок(ДокументСсылка) Экспорт
		//Возврат ОбщегоНазначения.ПолучитьНомерНаПечать(ДокументСсылка);
	КонецФункции

	Функция ЭтоСчетФактуранаАванс(СФ) Экспорт
		Возврат  типЗнч(СФ) = тип("ДокументСсылка.СчетФактураВыданный") и метаданные.Перечисления.найти("ВидСчетаФактурыВыставленного")<>Неопределено и СФ.видСчетаФактуры =  перечисления.ВидСчетаФактурыВыставленного.НаАванс
	КонецФункции	
	
	Функция ТребуетсяПерезаполнитьСуммыПоУЕвРублях(ДокументРеализации, СчетФактура=Неопределено, ФормированиеСФ=Ложь) Экспорт 
		УчетнаяПолитика =  ПараметрыУчетнойПолитики(ДокументРеализации);
		Возврат не(УчетнаяПолитика = Неопределено) И 	 
		(ДокументРеализации.ВалютаДокумента <> константы.ВалютаРегламентированногоУчета.Получить()) и 
		//торг-12 формируем в рублях всегда, сф - по уе 
		( ДокументРеализации.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах или не ФормированиеСФ)  и 
		//счета-фактуры на аванс заполняются в рублях, их пересчитывать не надо 
		не(ЭтоСчетФактуранаАванс(СчетФактура) )
		
	КонецФункции
	
	Функция ПараметрыУчетнойПолитики(ДокСсылка) 
		//Возврат ОбщегоНазначения.ПараметрыУчетнойПолитики(ДокССылка.Дата, Неопределено, ДокССылка.Организация);
	КонецФункции
		
	Функция ОснованиеОтчетКомитентаОПродажах_ОтчетОЗакупках(ДокументСсылка, СчетФактура)
		
		Если СчетФактура = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ТипЗнч(ДокументСсылка) <> Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ДокументСсылка.Метаданные().Реквизиты.Найти("ВидОперации") = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ДокументСсылка.ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках
			И ЗначениеЗаполнено(СчетФактура.Продавец)
			И СчетФактура.Контрагент <> СчетФактура.Продавец Тогда
			Возврат Истина;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции
	
	Функция ПолучитьПредставлениеХарактеристикиИСерии(выборка) Экспорт 
		Возврат "";
	КонецФункции
	
//} ТЕЛО МОДУЛЯ

//{ ПОЛУЧЕНИЕ ДАННЫХ
	
	//{ Получить...
		
		Функция ПолучитьНаименованиеКолонкиКодаТовара() Экспорт
			КолонкаКодаТовара = "Код";
			
			Попытка
				Если Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить() = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
					КолонкаКодаТовара = "Артикул";
				КонецЕсли;
			Исключение
			КонецПопытки;
			
			Возврат КолонкаКодаТовара;
			
		КонецФункции
		
		Функция ПолучитьДатуНомерДокументовОплаты(СчетФактура) Экспорт
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
				|	СчетФактураВыданныйДатаНомерДокументовОплаты.ДатаПлатежноРасчетногоДокумента,
				|	СчетФактураВыданныйДатаНомерДокументовОплаты.НомерПлатежноРасчетногоДокумента
				|ИЗ
				|	Документ.СчетФактураВыданный.ДатаНомерДокументовОплаты КАК СчетФактураВыданныйДатаНомерДокументовОплаты
				|ГДЕ
				|	СчетФактураВыданныйДатаНомерДокументовОплаты.Ссылка = &Ссылка
				|	И СчетФактураВыданныйДатаНомерДокументовОплаты.НомерПлатежноРасчетногоДокумента <> """"
			|	И СчетФактураВыданныйДатаНомерДокументовОплаты.ДатаПлатежноРасчетногоДокумента <> ДАТАВРЕМЯ(1, 1, 1)";
			Запрос.УстановитьПараметр("Ссылка", СчетФактура);
			
			Возврат Запрос.Выполнить().Выгрузить();
			
		КонецФункции
		
	//} Получить...
	
	//{ ТЧПолучитьТекстЗапроса...
		
		Функция ТЧПолучитьТекстЗапросаРеализацияТоваровУслуг(ФормированиеСФ)
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	Подзапрос.НомерСтроки КАК НомерСтроки,
			|	Подзапрос.Номенклатура,
			|	Подзапрос.НоменклатураСсылка,
			|   Подзапрос.КодНоменклатуры, 
			|	Подзапрос.Количество,
			|	Подзапрос.Цена,
			|	Подзапрос.Сумма,
			|	Подзапрос.СтавкаНДС,
			|	Подзапрос.СуммаНДС,
			|	Подзапрос.НомерГТД,
			|	Подзапрос.СтранаПроисхождения,
			|	Подзапрос.СуммаВключаетНДС,
			|	Подзапрос.УчитыватьНДС,
			|	Подзапрос.ЕдиницаИзмерения,
			|	Подзапрос.КодЕдиницыИзмерения,
			|	Подзапрос.ВидУпаковки,
			|	Подзапрос.КоличествоВОдномМесте,
			|	Подзапрос.КоличествоМест,
			|	Подзапрос.ЭтоУслуга,
			|	Подзапрос.порядок КАК порядок
			|ИЗ
			|	(ВЫБРАТЬ
			|		РеализацияТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|				Тогда РеализацияТоваровУслугТовары.Номенклатура.Наименование
			|			ИНАЧЕ РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное
			|		КОНЕЦ КАК Номенклатура,
			|		РеализацияТоваровУслугТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|   	РеализацияТоваровУслугТовары.Номенклатура.Код КАК КодНоменклатуры,
			|		РеализацияТоваровУслугТовары.Количество КАК Количество,
			|		РеализацияТоваровУслугТовары.Цена КАК Цена,
			|		РеализацияТоваровУслугТовары.Сумма КАК Сумма,
			|		РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
			|		РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
			|		РеализацияТоваровУслугТовары.НомерГТД КАК НомерГТД,
			|		РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения,
			|		РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|		РеализацияТоваровУслугТовары.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|		РеализацияТоваровУслугТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		РеализацияТоваровУслугТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|		РеализацияТоваровУслугТовары.ЕдиницаИзмерения КАК ВидУпаковки,
			|		РеализацияТоваровУслугТовары.Коэффициент КАК КоличествоВОдномМесте,
			|		РеализацияТоваровУслугТовары.КоличествоМест,
			|		Ложь КАК ЭтоУслуга,
			|		1 КАК порядок
			|	ИЗ
			|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|	ГДЕ
			|		РеализацияТоваровУслугТовары.Ссылка = &Ссылка
			|	
			|		  " + ?(ФормированиеСФ, "", " ОБЪЕДИНИТЬ ВСЕ
			|  " + ТЧПолучитьТекстЗапросаТара()) + "
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|	  
			|	ВЫБРАТЬ
			|		РеализацияТоваровУслугУслуги.НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(РеализацияТоваровУслугУслуги.Содержание, 1, 10) = """"
			|				Тогда РеализацияТоваровУслугУслуги.Номенклатура.Наименование
			|			ИНАЧЕ РеализацияТоваровУслугУслуги.Содержание
			|		КОНЕЦ,
			|   	РеализацияТоваровУслугУслуги.Номенклатура.Ссылка,
			|   	РеализацияТоваровУслугУслуги.Номенклатура.Код,
			|		РеализацияТоваровУслугУслуги.Количество,
			|		РеализацияТоваровУслугУслуги.Цена,
			|		РеализацияТоваровУслугУслуги.Сумма,
			|		РеализацияТоваровУслугУслуги.СтавкаНДС,
			|		РеализацияТоваровУслугУслуги.СуммаНДС,
			|		"""",
			|		"""",
			|		РеализацияТоваровУслугУслуги.Ссылка.СуммаВключаетНДС,
			|		РеализацияТоваровУслугУслуги.Ссылка.УчитыватьНДС,
			|		РеализацияТоваровУслугУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		РеализацияТоваровУслугУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|		"""" КАК ВидУпаковки,
			|		0 КАК КоличествоВОдномМесте,
			|		0,
			|		Истина,
			|		3
			|	ИЗ
			|		Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
			|	ГДЕ
			|		РеализацияТоваровУслугУслуги.Ссылка = &Ссылка
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		РеализацияТоваровУслугАгентскиеУслуги.НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(РеализацияТоваровУслугАгентскиеУслуги.Содержание, 1, 10) = """"
			|				Тогда РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.Наименование
			|			ИНАЧЕ РеализацияТоваровУслугАгентскиеУслуги.Содержание
			|		КОНЕЦ,
			|		РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.Ссылка,
			|   	РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.Код,
			|		РеализацияТоваровУслугАгентскиеУслуги.Количество,
			|		РеализацияТоваровУслугАгентскиеУслуги.Цена,
			|		РеализацияТоваровУслугАгентскиеУслуги.Сумма,
			|		РеализацияТоваровУслугАгентскиеУслуги.СтавкаНДС,
			|		РеализацияТоваровУслугАгентскиеУслуги.СуммаНДС,
			|		"""",
			|		"""",
			|		РеализацияТоваровУслугАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
			|		РеализацияТоваровУслугАгентскиеУслуги.Ссылка.УчитыватьНДС,
			|		РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|		"""" КАК ВидУпаковки,
			|		0 КАК КоличествоВОдномМесте,
			|		0,
			|		Истина,
			|		4
			|	ИЗ
			|		Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК РеализацияТоваровУслугАгентскиеУслуги
			|	ГДЕ
			|		РеализацияТоваровУслугАгентскиеУслуги.Ссылка = &Ссылка) КАК Подзапрос
			|
			|УПОРЯДОЧИТЬ ПО
			|	порядок,
			|	НомерСтроки";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаСчетФактураВыданный()
			
			ТекстЗапроса=
			"ВЫБРАТЬ
			|	СчетФактураВыданныйАвансы.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(СчетФактураВыданныйАвансы.Содержание, 1, 10) <> """" Тогда СчетФактураВыданныйАвансы.Содержание
			|		КОГДА СчетФактураВыданныйАвансы.Номенклатура <> Значение(Справочник.Номенклатура.ПустаяСсылка) и 
			|           ПОДСТРОКА(СчетФактураВыданныйАвансы.Номенклатура.НаименованиеПолное, 1, 10) <> """"
			|			Тогда СчетФактураВыданныйАвансы.Номенклатура.НаименованиеПолное
			|		КОГДА СчетФактураВыданныйАвансы.Номенклатура <> Значение(Справочник.Номенклатура.ПустаяСсылка)  
			|			Тогда СчетФактураВыданныйАвансы.Номенклатура.Наименование
			|	Иначе ""Предварительная оплата""
			|	КОНЕЦ КАК Номенклатура,
			|	СчетФактураВыданныйАвансы.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|	СчетФактураВыданныйАвансы.Номенклатура.Код КАК КодНоменклатуры,
			|	0 как Количество,
			|	0 как Цена,
			|	СчетФактураВыданныйАвансы.Сумма,
			|	СчетФактураВыданныйАвансы.СтавкаНДС,
			|	СчетФактураВыданныйАвансы.СуммаНДС,
			|	"""" КАК НомерГТД,
			|	"""" КАК СтранаПроисхождения,
			|	Истина КАК СуммаВключаетНДС,
			|	Истина КАК УчитыватьНДС,
			|	""""  КАК ЕдиницаИзмерения,
			|	""""  КАК КодЕдиницыИзмерения,
			|	"""" КАК ВидУпаковки,
			|	0 КАК КоличествоВОдномМесте,
			|	0  как КоличествоМест,
			|	Истина КАК ЭтоУслуга
			|ИЗ
			|	Документ.СчетФактураВыданный.Авансы КАК СчетФактураВыданныйАвансы
			|ГДЕ
			|	СчетФактураВыданныйАвансы.Ссылка = &СчетФактура
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";		  
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаСчетНаоплатуПокупателю()
			
			ТекстЗапроса=
			"ВЫБРАТЬ
			|	Подзапрос.НомерСтроки КАК НомерСтроки,
			|	Подзапрос.Номенклатура,
			|	Подзапрос.НоменклатураСсылка,
			|  	Подзапрос.КодНоменклатуры, 
			|	Подзапрос.Количество,
			|	Подзапрос.Цена,
			|	Подзапрос.Сумма,
			|	Подзапрос.СтавкаНДС,
			|	Подзапрос.СуммаНДС,
			|	Подзапрос.НомерГТД,
			|	Подзапрос.СтранаПроисхождения,
			|	Подзапрос.СуммаВключаетНДС,
			|	Подзапрос.УчитыватьНДС,
			|	Подзапрос.ЕдиницаИзмерения,
			|	Подзапрос.КодЕдиницыИзмерения,
			|	Подзапрос.ВидУпаковки,
			|	Подзапрос.КоличествоВОдномМесте,
			|	Подзапрос.КоличествоМест,
			|	Подзапрос.ЭтоУслуга,
			|	Подзапрос.порядок КАК порядок
			|ИЗ
			|	(ВЫБРАТЬ
			|		"""" КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(СчетНаОплатуТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|				Тогда СчетНаОплатуТовары.Номенклатура.Наименование
			|			ИНАЧЕ СчетНаОплатуТовары.Номенклатура.НаименованиеПолное
			|		КОНЕЦ КАК Номенклатура,
			|		СчетНаОплатуТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|   	СчетНаОплатуТовары.Номенклатура.Код КАК КодНоменклатуры,
			|		СчетНаОплатуТовары.Количество КАК Количество,
			|		СчетНаОплатуТовары.Цена КАК Цена,
			|		СчетНаОплатуТовары.Сумма КАК Сумма,
			|		СчетНаОплатуТовары.СтавкаНДС КАК СтавкаНДС,
			|		СчетНаОплатуТовары.СуммаНДС КАК СуммаНДС,
			|      """" КАК НомерГТД,
			|      """" КАК СтранаПроисхождения,
			|		СчетНаОплатуТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|		СчетНаОплатуТовары.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|		СчетНаОплатуТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		СчетНаОплатуТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|      """" КАК ВидУпаковки,
			|      """" КАК КоличествоВОдномМесте,
			|      """" КАК КоличествоМест, 
			|		Ложь КАК ЭтоУслуга,
			|		1 КАК порядок
			|	ИЗ
			|		Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуТовары
			|	ГДЕ
			|		СчетНаОплатуТовары.Ссылка = &Ссылка
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		"""" КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(СчетНаОплатуУслуги.Содержание, 1, 10) = """"
			|				Тогда СчетНаОплатуУслуги.Номенклатура.Наименование
			|			ИНАЧЕ СчетНаОплатуУслуги.Содержание
			|		КОНЕЦ,
			|		СчетНаОплатуУслуги.Номенклатура.Ссылка,
			|   	СчетНаОплатуУслуги.Номенклатура.Код,
			|		СчетНаОплатуУслуги.Количество,
			|		СчетНаОплатуУслуги.Цена,
			|		СчетНаОплатуУслуги.Сумма,
			|		СчетНаОплатуУслуги.СтавкаНДС,
			|		СчетНаОплатуУслуги.СуммаНДС,
			|      """" КАК НомерГТД,
			|      """" КАК СтранаПроисхождения,
			|		СчетНаОплатуУслуги.Ссылка.СуммаВключаетНДС,
			|		СчетНаОплатуУслуги.Ссылка.УчитыватьНДС,
			|		СчетНаОплатуУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		СчетНаОплатуУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|      """" КАК ВидУпаковки,
			|      """" КАК КоличествоВОдномМесте,
			|      """" КАК КоличествоМест, 
			|		Истина,
			|		2
			|	ИЗ
			|		Документ.СчетНаОплатуПокупателю.Услуги КАК СчетНаОплатуУслуги
			|	ГДЕ
			|		СчетНаОплатуУслуги.Ссылка = &Ссылка) КАК Подзапрос
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок";		  
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаКорректировкаРеализации()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	Подзапрос.НомерСтроки КАК НомерСтроки,
			|	Подзапрос.Номенклатура,
			|	Подзапрос.НоменклатураСсылка,
			|   Подзапрос.КодНоменклатуры,
			|	Подзапрос.Количество,
			|	Подзапрос.Цена,
			|	Подзапрос.Сумма,
			|	Подзапрос.СтавкаНДС,
			|	Подзапрос.СуммаНДС,
			|	Подзапрос.НомерГТД,
			|	Подзапрос.СтранаПроисхождения,
			|	Подзапрос.СуммаВключаетНДС,
			|	Подзапрос.УчитыватьНДС,
			|	Подзапрос.ЕдиницаИзмерения,
			|	КодЕдиницыИзмерения как КодЕдиницыИзмерения,
			|	"""" как ВидУпаковки,
			|	0 как КоличествоВОдномМесте,
			|	0 как КоличествоМест,
			|	Подзапрос.ЭтоУслуга,
			|	Подзапрос.порядок КАК порядок
			|ИЗ
			|	(ВЫБРАТЬ
			|		КорректировкаРеализацииТовары.НомерСтроки КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|				Тогда КорректировкаРеализацииТовары.Номенклатура.Наименование
			|			ИНАЧЕ КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное
			|		КОНЕЦ КАК Номенклатура,
			|		КорректировкаРеализацииТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|   	КорректировкаРеализацииТовары.Номенклатура.Код КАК КодНоменклатуры,
			|		КорректировкаРеализацииТовары.Количество КАК Количество,
			|		КорректировкаРеализацииТовары.Цена КАК Цена,
			|		КорректировкаРеализацииТовары.Сумма КАК Сумма,
			|		КорректировкаРеализацииТовары.СтавкаНДС КАК СтавкаНДС,
			|		КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
			|		КорректировкаРеализацииТовары.НомерГТД КАК НомерГТД,
			|		КорректировкаРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхождения,
			|		КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|		КорректировкаРеализацииТовары.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|		Ложь КАК ЭтоУслуга,
			|		1 КАК порядок
			|	ИЗ
			|		Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
			|	ГДЕ
			|		КорректировкаРеализацииТовары.Ссылка = &Ссылка
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		КорректировкаРеализацииУслуги.НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(КорректировкаРеализацииУслуги.Содержание, 1, 10) = """"
			|				Тогда КорректировкаРеализацииУслуги.Номенклатура.Наименование
			|			ИНАЧЕ КорректировкаРеализацииУслуги.Содержание
			|		КОНЕЦ,
			|		КорректировкаРеализацииУслуги.Номенклатура.Ссылка,
			|   	КорректировкаРеализацииУслуги.Номенклатура.Код,
			|		КорректировкаРеализацииУслуги.Количество,
			|		КорректировкаРеализацииУслуги.Цена,
			|		КорректировкаРеализацииУслуги.Сумма,
			|		КорректировкаРеализацииУслуги.СтавкаНДС,
			|		КорректировкаРеализацииУслуги.СуммаНДС,
			|		"""",
			|		"""",
			|		КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС,
			|		КорректировкаРеализацииУслуги.Ссылка.УчитыватьНДС,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		Истина,
			|		2
			|	ИЗ
			|		Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
			|	ГДЕ
			|		КорректировкаРеализацииУслуги.Ссылка = &Ссылка
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		КорректировкаРеализацииАгентскиеУслуги.НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(КорректировкаРеализацииАгентскиеУслуги.Содержание, 1, 10) = """"
			|				Тогда КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Наименование
			|			ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Содержание
			|		КОНЕЦ,
			|   	КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Ссылка,
			|   	КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Код,
			|		КорректировкаРеализацииАгентскиеУслуги.Количество,
			|		КорректировкаРеализацииАгентскиеУслуги.Цена,
			|		КорректировкаРеализацииАгентскиеУслуги.Сумма,
			|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС,
			|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДС,
			|		"""",
			|		"""",
			|		КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
			|		КорректировкаРеализацииАгентскиеУслуги.Ссылка.УчитыватьНДС,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		Истина,
			|		3
			|	ИЗ
			|		Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
			|	ГДЕ
			|		КорректировкаРеализацииАгентскиеУслуги.Ссылка = &Ссылка) КАК Подзапрос
			|
			|УПОРЯДОЧИТЬ ПО
			|	порядок,
			|	НомерСтроки";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаИКСФ()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	Подзапрос.НомерСтроки КАК НомерСтроки,
			|	Подзапрос.Номенклатура,
			|	Подзапрос.НоменклатураСсылка,
			|	"""" КАК КодНоменклатуры,
			|	Подзапрос.Количество,
			|	Подзапрос.Цена,
			|	Подзапрос.Сумма,
			|	Подзапрос.СтавкаНДС,
			|	Подзапрос.СуммаНДС,
			|	Подзапрос.НомерГТД,
			|	Подзапрос.СтранаПроисхождения,
			|	Подзапрос.СуммаВключаетНДС,
			|	Подзапрос.УчитыватьНДС,
			|	Подзапрос.ЕдиницаИзмерения,
			|	Подзапрос.КодЕдиницыИзмерения,
			|	"""" КАК ВидУпаковки,
			|	0 КАК КоличествоВОдномМесте,
			|	0 КАК КоличествоМест,
			|	Подзапрос.ЭтоУслуга,
			|	Подзапрос.порядок КАК порядок,
			|	Подзапрос.КоличествоДоИзменения,
			|	Подзапрос.ЦенаДоИзменения,
			|	Подзапрос.СуммаДоИзменения,
			|	Подзапрос.СтавкаНДСДоИзменения,
			|	Подзапрос.СуммаНДСДоИзменения,
			|	Подзапрос.НомерГТДДоИзменения,
			|	Подзапрос.СтранаПроисхожденияДоИзменения,
			|	Подзапрос.ЕдиницаИзмеренияДоИзменения,
			|	Подзапрос.КодЕдиницыИзмеренияДоИзменения
			|ИЗ
			|	(ВЫБРАТЬ
			|		КорректировкаРеализацииТовары.НомерСтроки КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|				Тогда КорректировкаРеализацииТовары.Номенклатура.Наименование
			|			ИНАЧЕ КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное
			|		КОНЕЦ КАК Номенклатура,
			|		КорректировкаРеализацииТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|		КорректировкаРеализацииТовары.Количество КАК Количество,
			|		КорректировкаРеализацииТовары.Цена КАК Цена,
			|		КорректировкаРеализацииТовары.Сумма КАК Сумма,
			|		КорректировкаРеализацииТовары.СтавкаНДС КАК СтавкаНДС,
			|		КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
			|		КорректировкаРеализацииТовары.НомерГТД КАК НомерГТД,
			|		КорректировкаРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхождения,
			|		КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|		КорректировкаРеализацииТовары.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмеренияДоИзменения,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияДоИзменения,
			|		Ложь КАК ЭтоУслуга,
			|		1 КАК порядок,
			|		КорректировкаРеализацииТовары.КоличествоДоКорректировки КАК КоличествоДоИзменения,
			|		КорректировкаРеализацииТовары.ЦенаДоКорректировки КАК ЦенаДоИзменения,
			|		КорректировкаРеализацииТовары.СуммаДоКорректировки КАК СуммаДоИзменения,
			|		КорректировкаРеализацииТовары.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
			|		КорректировкаРеализацииТовары.СуммаНДСДоКорректировки КАК СуммаНДСДоИзменения,
			|		КорректировкаРеализацииТовары.СтранаПроисхожденияДоИзменения КАК СтранаПроисхожденияДоИзменения,
			|		КорректировкаРеализацииТовары.НомерГТДДоИзменения КАК НомерГТДДоИзменения
			|	ИЗ
			|		Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
			|	ГДЕ
			|		КорректировкаРеализацииТовары.Ссылка = &Ссылка
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		КорректировкаРеализацииУслуги.НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(КорректировкаРеализацииУслуги.Содержание, 1, 10) = """"
			|				Тогда КорректировкаРеализацииУслуги.Номенклатура.Наименование
			|			ИНАЧЕ КорректировкаРеализацииУслуги.Содержание
			|		КОНЕЦ,
			|		КорректировкаРеализацииУслуги.Номенклатура.Ссылка,
			|		КорректировкаРеализацииУслуги.Количество,
			|		КорректировкаРеализацииУслуги.Цена,
			|		КорректировкаРеализацииУслуги.Сумма,
			|		КорректировкаРеализацииУслуги.СтавкаНДС,
			|		КорректировкаРеализацииУслуги.СуммаНДС,
			|		"""",
			|		"""",
			|		КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС,
			|		КорректировкаРеализацииУслуги.Ссылка.УчитыватьНДС,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		Истина,
			|		2,
			|		КорректировкаРеализацииУслуги.КоличествоДоКорректировки,
			|		КорректировкаРеализацииУслуги.ЦенаДоКорректировки,
			|		КорректировкаРеализацииУслуги.СуммаДоКорректировки,
			|		КорректировкаРеализацииУслуги.СтавкаНДСДоИзменения,
			|		КорректировкаРеализацииУслуги.СуммаНДСДоКорректировки,
			|		NULL,
			|		NULL
			|	ИЗ
			|		Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
			|	ГДЕ
			|		КорректировкаРеализацииУслуги.Ссылка = &Ссылка
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		КорректировкаРеализацииАгентскиеУслуги.НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(КорректировкаРеализацииАгентскиеУслуги.Содержание, 1, 10) = """"
			|				Тогда КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Наименование
			|			ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Содержание
			|		КОНЕЦ,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Ссылка,
			|		КорректировкаРеализацииАгентскиеУслуги.Количество,
			|		КорректировкаРеализацииАгентскиеУслуги.Цена,
			|		КорректировкаРеализацииАгентскиеУслуги.Сумма,
			|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС,
			|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДС,
			|		"""",
			|		"""",
			|		КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
			|		КорректировкаРеализацииАгентскиеУслуги.Ссылка.УчитыватьНДС,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		Истина,
			|		3,
			|		КорректировкаРеализацииАгентскиеУслуги.КоличествоДоКорректировки,
			|		КорректировкаРеализацииАгентскиеУслуги.ЦенаДоКорректировки,
			|		КорректировкаРеализацииАгентскиеУслуги.СуммаДоКорректировки,
			|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДСДоИзменения,
			|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоКорректировки,
			|		NULL,
			|		NULL
			|	ИЗ
			|		Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
			|	ГДЕ
			|		КорректировкаРеализацииАгентскиеУслуги.Ссылка = &Ссылка) КАК Подзапрос
			|
			|УПОРЯДОЧИТЬ ПО
			|	порядок,
			|	НомерСтроки";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаКСФ()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	Подзапрос.НомерСтроки КАК НомерСтроки,
			|	Подзапрос.Номенклатура,
			|	Подзапрос.НоменклатураСсылка,
			|	Подзапрос.Количество,
			|	Подзапрос.Цена,
			|	Подзапрос.Сумма,
			|	Подзапрос.СтавкаНДС,
			|	Подзапрос.СуммаНДС,
			|	Подзапрос.НомерГТД,
			|	Подзапрос.СтранаПроисхождения,
			|	Подзапрос.СуммаВключаетНДС,
			|	Подзапрос.УчитыватьНДС,
			|	Подзапрос.ЕдиницаИзмерения,
			|	Подзапрос.КодЕдиницыИзмерения,
			|	"""" как ВидУпаковки,
			|	0 как КоличествоВОдномМесте,
			|	0 как КоличествоМест,
			|	Подзапрос.ЭтоУслуга,
			|	Подзапрос.порядок КАК порядок,
			|	Подзапрос.КоличествоДоИзменения,
			|	Подзапрос.ЦенаДоИзменения,
			|	Подзапрос.СуммаДоИзменения,
			|	Подзапрос.СтавкаНДСДоИзменения,
			|	Подзапрос.СуммаНДСДоИзменения,
			|	Подзапрос.НомерГТДДоИзменения,
			|	Подзапрос.СтранаПроисхожденияДоИзменения,
			|	Подзапрос.ЕдиницаИзмеренияДоИзменения,
			|	Подзапрос.КодЕдиницыИзмеренияДоИзменения
			|ИЗ
			|	(ВЫБРАТЬ
			|		КорректировкаРеализацииТовары.НомерСтроки КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|				Тогда КорректировкаРеализацииТовары.Номенклатура.Наименование
			|			ИНАЧЕ КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное
			|		КОНЕЦ КАК Номенклатура,
			|		КорректировкаРеализацииТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|		КорректировкаРеализацииТовары.Количество КАК Количество,
			|		КорректировкаРеализацииТовары.Цена КАК Цена,
			|		КорректировкаРеализацииТовары.Сумма КАК Сумма,
			|		КорректировкаРеализацииТовары.СтавкаНДС КАК СтавкаНДС,
			|		КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
			|		КорректировкаРеализацииТовары.НомерГТД КАК НомерГТД,
			|		КорректировкаРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхождения,
			|		КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|		КорректировкаРеализацииТовары.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмеренияДоИзменения,
			|		КорректировкаРеализацииТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияДоИзменения,
			|		Ложь КАК ЭтоУслуга,
			|		1 КАК порядок,
			|		КорректировкаРеализацииТовары.КоличествоДоИзменения КАК КоличествоДоИзменения,
			|		КорректировкаРеализацииТовары.ЦенаДоИзменения КАК ЦенаДоИзменения,
			|		КорректировкаРеализацииТовары.СуммаДоИзменения КАК СуммаДоИзменения,
			|		КорректировкаРеализацииТовары.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
			|		КорректировкаРеализацииТовары.СуммаНДСДоИзменения КАК СуммаНДСДоИзменения,
			|		КорректировкаРеализацииТовары.СтранаПроисхожденияДоИзменения КАК СтранаПроисхожденияДоИзменения,
			|		КорректировкаРеализацииТовары.НомерГТДДоИзменения КАК НомерГТДДоИзменения
			|	ИЗ
			|		Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
			|	ГДЕ
			|		КорректировкаРеализацииТовары.Ссылка = &Ссылка
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		КорректировкаРеализацииУслуги.НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(КорректировкаРеализацииУслуги.Содержание, 1, 10) = """"
			|				Тогда КорректировкаРеализацииУслуги.Номенклатура.Наименование
			|			ИНАЧЕ КорректировкаРеализацииУслуги.Содержание
			|		КОНЕЦ,
			|		КорректировкаРеализацииУслуги.Номенклатура.Ссылка,
			|		КорректировкаРеализацииУслуги.Количество,
			|		КорректировкаРеализацииУслуги.Цена,
			|		КорректировкаРеализацииУслуги.Сумма,
			|		КорректировкаРеализацииУслуги.СтавкаНДС,
			|		КорректировкаРеализацииУслуги.СуммаНДС,
			|		"""",
			|		"""",
			|		КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС,
			|		КорректировкаРеализацииУслуги.Ссылка.УчитыватьНДС,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		Истина,
			|		2,
			|		КорректировкаРеализацииУслуги.КоличествоДоИзменения,
			|		КорректировкаРеализацииУслуги.ЦенаДоИзменения,
			|		КорректировкаРеализацииУслуги.СуммаДоИзменения,
			|		КорректировкаРеализацииУслуги.СтавкаНДСДоИзменения,
			|		КорректировкаРеализацииУслуги.СуммаНДСДоИзменения,
			|		NULL,
			|		NULL
			|	ИЗ
			|		Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
			|	ГДЕ
			|		КорректировкаРеализацииУслуги.Ссылка = &Ссылка
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		КорректировкаРеализацииАгентскиеУслуги.НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(КорректировкаРеализацииАгентскиеУслуги.Содержание, 1, 10) = """"
			|				Тогда КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Наименование
			|			ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Содержание
			|		КОНЕЦ,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Ссылка,
			|		КорректировкаРеализацииАгентскиеУслуги.Количество,
			|		КорректировкаРеализацииАгентскиеУслуги.Цена,
			|		КорректировкаРеализацииАгентскиеУслуги.Сумма,
			|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС,
			|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДС,
			|		"""",
			|		"""",
			|		КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
			|		КорректировкаРеализацииАгентскиеУслуги.Ссылка.УчитыватьНДС,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|		Истина,
			|		3,
			|		КорректировкаРеализацииАгентскиеУслуги.КоличествоДоИзменения,
			|		КорректировкаРеализацииАгентскиеУслуги.ЦенаДоИзменения,
			|		КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения,
			|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДСДоИзменения,
			|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения,
			|		NULL,
			|		NULL
			|	ИЗ
			|		Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
			|	ГДЕ
			|		КорректировкаРеализацииАгентскиеУслуги.Ссылка = &Ссылка) КАК Подзапрос
			|
			|УПОРЯДОЧИТЬ ПО
			|	порядок,
			|	НомерСтроки";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаОказаниеУслуг()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|			Тогда ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.Наименование
			|		ИНАЧЕ ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.НаименованиеПолное
			|	КОНЕЦ КАК Номенклатура,
			|	ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|   ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.Код КАК КодНоменклатуры,
			|	ОказаниеУслугКонтрагенты.Количество КАК Количество,
			|	ОказаниеУслугКонтрагенты.Цена КАК Цена,
			|	ОказаниеУслугКонтрагенты.Сумма КАК Сумма,
			|	ОказаниеУслугКонтрагенты.Ссылка.СтавкаНДС КАК СтавкаНДС,
			|	"""" КАК НомерГТД,
			|	"""" КАК СтранаПроисхождения,
			|	ОказаниеУслугКонтрагенты.Ссылка.СуммаВключаетНДС КАК суммаВключаетНДС,
			|	ОказаниеУслугКонтрагенты.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|	ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ОказаниеУслугКонтрагенты.ссылка.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|	"""" КАК ВидУпаковки,
			|	0 КАК КоличествоВОдномМесте,
			|	0  как КоличествоМест,
			|	Истина КАК ЭтоУслуга,
			|	ОказаниеУслугКонтрагенты.СуммаНДС
			|ИЗ
			|	Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслугКонтрагенты
			|ГДЕ
			|	ОказаниеУслугКонтрагенты.Ссылка = &Ссылка
			|	И ОказаниеУслугКонтрагенты.СчетФактура = &СчетФактура";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаАктОбОказанииПроизводственныхУслуг()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	АктОбОказанииПроизводственныхУслугУслуги.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|			Тогда АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.Наименование
			|		ИНАЧЕ АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.НаименованиеПолное
			|	КОНЕЦ КАК Номенклатура,
			|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.Код КАК КодНоменклатуры,
			|	АктОбОказанииПроизводственныхУслугУслуги.Количество,
			|	АктОбОказанииПроизводственныхУслугУслуги.Цена,
			|	АктОбОказанииПроизводственныхУслугУслуги.Сумма,
			|	АктОбОказанииПроизводственныхУслугУслуги.СтавкаНДС,
			|	АктОбОказанииПроизводственныхУслугУслуги.СуммаНДС,
			|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.СуммаВключаетНДС,
			|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.УчитыватьНДС,
			|	"""" КАК НомерГТД,
			|	"""" КАК СтранаПроисхождения,
			|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|	"""" КАК ВидУпаковки,
			|	0 КАК КоличествоВОдномМесте,
			|	0  как КоличествоМест,
			|	Истина КАК ЭтоУслуга
			|ИЗ
			|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
			|ГДЕ
			|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаОтчетКомиссионераОПродажах()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	ВложенныйЗапрос.НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура,
			|	ВложенныйЗапрос.НоменклатураСсылка,
			|	ВложенныйЗапрос.КодНоменклатуры,
			|	ВложенныйЗапрос.Количество,
			|	ВложенныйЗапрос.Цена,
			|	ВложенныйЗапрос.Сумма,
			|	ВложенныйЗапрос.СтавкаНДС,
			|	ВложенныйЗапрос.НомерГТД,
			|	ВложенныйЗапрос.СтранаПроисхождения,
			|	ВложенныйЗапрос.СуммаВключаетНДС,
			|	ВложенныйЗапрос.УчитыватьНДС,
			|	ВложенныйЗапрос.ЕдиницаИзмерения,
			|	ВложенныйЗапрос.КодЕдиницыИзмерения,
			|	ВложенныйЗапрос.ВидУпаковки,
			|	ВложенныйЗапрос.КоличествоВОдномМесте,
			|	ВложенныйЗапрос.КоличествоМест,
			|	ВложенныйЗапрос.ЭтоУслуга,
			|	ВложенныйЗапрос.Порядок,
			|	ВложенныйЗапрос.СуммаНДС
			|ИЗ
			|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ОтчетКомиссионераОПродажахТовары.НомерСтроки КАК НомерСтроки,
			|			ВЫБОР
			|				КОГДА ПОДСТРОКА(ОтчетКомиссионераОПродажахТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|					Тогда ОтчетКомиссионераОПродажахТовары.Номенклатура.Наименование
			|				ИНАЧЕ ОтчетКомиссионераОПродажахТовары.Номенклатура.НаименованиеПолное
			|			КОНЕЦ КАК Номенклатура,
			|			ОтчетКомиссионераОПродажахТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|			ОтчетКомиссионераОПродажахТовары.Номенклатура.Код КАК КодНоменклатуры,
			|			ОтчетКомиссионераОПродажахТовары.Количество КАК Количество,
			|			ОтчетКомиссионераОПродажахТовары.Цена КАК Цена,
			|			ОтчетКомиссионераОПродажахТовары.Сумма КАК Сумма,
			|			ОтчетКомиссионераОПродажахТовары.СтавкаНДС КАК СтавкаНДС,
			|			ОтчетКомиссионераОПродажахТовары.НомерГТД КАК НомерГТД,
			|			ОтчетКомиссионераОПродажахТовары.СтранаПроисхождения КАК СтранаПроисхождения,
			|			ОтчетКомиссионераОПродажахТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|			ОтчетКомиссионераОПродажахТовары.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|			ОтчетКомиссионераОПродажахТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|			ОтчетКомиссионераОПродажахТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|			ОтчетКомиссионераОПродажахТовары.ЕдиницаИзмерения КАК ВидУпаковки,
			|			ОтчетКомиссионераОПродажахТовары.Коэффициент КАК КоличествоВОдномМесте,
			|			ОтчетКомиссионераОПродажахТовары.КоличествоМест КАК КоличествоМест,
			|			Ложь КАК ЭтоУслуга,
			|			1 КАК Порядок,
			|			ОтчетКомиссионераОПродажахТовары.СуммаНДС КАК СуммаНДС,
			|			ОтчетКомиссионераОПродажахТовары.КлючСтроки КАК КлючСтроки
			|		ИЗ
			|			Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
			|		ГДЕ
			|			ОтчетКомиссионераОПродажахТовары.Ссылка = &Ссылка
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ОтчетКомиссионераОПродажахУслуги.НомерСтроки,
			|			ВЫБОР
			|				КОГДА ПОДСТРОКА(ОтчетКомиссионераОПродажахУслуги.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|					Тогда ОтчетКомиссионераОПродажахУслуги.Номенклатура.Наименование
			|				ИНАЧЕ ОтчетКомиссионераОПродажахУслуги.Номенклатура.НаименованиеПолное
			|			КОНЕЦ,
			|			ОтчетКомиссионераОПродажахУслуги.Номенклатура.Ссылка,
			|			ОтчетКомиссионераОПродажахУслуги.Номенклатура.Код,
			|			ОтчетКомиссионераОПродажахУслуги.Количество,
			|			ОтчетКомиссионераОПродажахУслуги.Цена,
			|			ОтчетКомиссионераОПродажахУслуги.Сумма,
			|			ОтчетКомиссионераОПродажахУслуги.СтавкаНДС,
			|			"""",
			|			"""",
			|			ОтчетКомиссионераОПродажахУслуги.Ссылка.СуммаВключаетНДС,
			|			ОтчетКомиссионераОПродажахУслуги.Ссылка.УчитыватьНДС,
			|			ОтчетКомиссионераОПродажахУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
			|			ОтчетКомиссионераОПродажахУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
			|			"""",
			|			0,
			|			0,
			|			Истина,
			|			2,
			|			ОтчетКомиссионераОПродажахУслуги.СуммаНДС,
			|			ОтчетКомиссионераОПродажахУслуги.КлючСтроки
			|		ИЗ
			|			Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераОПродажахУслуги
			|		ГДЕ
			|			ОтчетКомиссионераОПродажахУслуги.Ссылка = &Ссылка) КАК ВложенныйЗапрос
			|		ПО ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ВложенныйЗапрос.КлючСтроки
			|ГДЕ
			|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура = &СчетФактура";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаОтчетОЗакупках()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	ОтчетКомитентуОПродажахТовары.Количество,
			|	ОтчетКомитентуОПродажахТовары.ЕдиницаИзмерения,
			|	ОтчетКомитентуОПродажахТовары.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
			|	ОтчетКомитентуОПродажахТовары.Номенклатура.НомерГТД КАК НомерГТД,
			|	ОтчетКомитентуОПродажахТовары.СтавкаНДС,
			|	ОтчетКомитентуОПродажахТовары.СуммаНДС,
			|	ОтчетКомитентуОПродажахТовары.Ссылка.СуммаВключаетНДС,
			|	ОтчетКомитентуОПродажахТовары.Номенклатура.Услуга КАК ЭтоУслуга,
			|	ОтчетКомитентуОПродажахТовары.Номенклатура.Код КАК КодНоменклатуры,
			|	ОтчетКомитентуОПродажахТовары.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|	"""" КАК ВидУпаковки,
			|	"""" КАК КоличествоВОдномМесте,
			|	"""" КАК КоличествоМест,
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(ОтчетКомитентуОПродажахТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|			Тогда ОтчетКомитентуОПродажахТовары.Номенклатура.Наименование
			|		ИНАЧЕ ОтчетКомитентуОПродажахТовары.Номенклатура.НаименованиеПолное
			|	КОНЕЦ КАК Номенклатура,
			|	ОтчетКомитентуОПродажахТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|	ОтчетКомитентуОПродажахТовары.Цена КАК Цена,
			|	ОтчетКомитентуОПродажахТовары.Сумма КАК Сумма
			|ИЗ
			|	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах.Поставщики КАК ОтчетКомитентуОПродажахПоставщики
			|		ПО ОтчетКомитентуОПродажахТовары.КлючСтроки = ОтчетКомитентуОПродажахПоставщики.КлючСтроки
			|ГДЕ
			|	ОтчетКомитентуОПродажахТовары.Ссылка = &Ссылка
			|	И ОтчетКомитентуОПродажахПоставщики.СчетФактура = &СчетФактура";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаОтчетКомитентуОПродажах()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	Подзапрос.Сумма,
			|	Подзапрос.СуммаНДС,
			|	Подзапрос.Количество,
			|	Подзапрос.Цена,
			|	Подзапрос.НомерГТД,
			|	Подзапрос.СтранаПроисхождения,
			|	Подзапрос.СуммаВключаетНДС,
			|	Подзапрос.ЕдиницаИзмерения,
			|	"""" КАК КодЕдиницыИзмерения,
			|	"""" КАК ВидУпаковки,
			|	0 КАК КоличествоВОдномМесте,
			|	0  как КоличествоМест,
			|	Подзапрос.ЭтоУслуга,
			|	ВЫБОР
			|		КОГДА Подзапрос.Номенклатура = ЗНАЧЕНИЕ(Справочник.номенклатура.ПустаяСсылка)
			|			Тогда ""Комиссионное вознаграждение""
			|		КОГДА ПОДСТРОКА(Подзапрос.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|			Тогда Подзапрос.Номенклатура.Наименование
			|		ИНАЧЕ Подзапрос.Номенклатура.НаименованиеПолное
			|	КОНЕЦ КАК Номенклатура,
			|	Подзапрос.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|	ВЫБОР
			|		КОГДА Подзапрос.Номенклатура = ЗНАЧЕНИЕ(Справочник.номенклатура.ПустаяСсылка)
			|			Тогда """"
			|		КОГДА ПОДСТРОКА(Подзапрос.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|			Тогда Подзапрос.Номенклатура.Наименование
			|		ИНАЧЕ Подзапрос.Номенклатура.Код 
			|	КОНЕЦ КАК КодНоменклатуры,
			|	Подзапрос.Ссылка.СтавкаНДСВознаграждения КАК СтавкаНДС
			|ИЗ
			|	(ВЫБРАТЬ
			|		СУММА(ОтчетКомитентуОПродажахТовары.СуммаВознаграждения) КАК Сумма,
			|		СУММА(ОтчетКомитентуОПродажахТовары.СуммаНДСВознаграждения) КАК СуммаНДС,
			|		ОтчетКомитентуОПродажахТовары.Ссылка.УслугаПоВознаграждению КАК Номенклатура,
			|		ОтчетКомитентуОПродажахТовары.Ссылка КАК Ссылка,
			|		0 КАК Количество,
			|		"""" КАК Цена,
			|		"""" КАК НомерГТД,
			|		"""" КАК СтранаПроисхождения,
			|		ОтчетКомитентуОПродажахТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|		"""" КАК ЕдиницаИзмерения,
			|		Истина КАК ЭтоУслуга
			|	ИЗ
			|		Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
			|	ГДЕ
			|		ОтчетКомитентуОПродажахТовары.Ссылка = &Ссылка
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ОтчетКомитентуОПродажахТовары.Ссылка,
			|		ОтчетКомитентуОПродажахТовары.Ссылка.УслугаПоВознаграждению,
			|		ОтчетКомитентуОПродажахТовары.Ссылка.СуммаВключаетНДС) КАК Подзапрос";				
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаВозвратТоваровПоставщику()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	ВозвратТоваровПоставщикуТовары.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(ВозвратТоваровПоставщикуТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|			Тогда ВозвратТоваровПоставщикуТовары.Номенклатура.Наименование
			|		ИНАЧЕ ВозвратТоваровПоставщикуТовары.Номенклатура.НаименованиеПолное
			|	КОНЕЦ КАК Номенклатура,
			|	ВозвратТоваровПоставщикуТовары.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|	ВозвратТоваровПоставщикуТовары.Номенклатура.Код КАК КодНоменклатуры,
			|	ВозвратТоваровПоставщикуТовары.Количество,
			|	ВозвратТоваровПоставщикуТовары.Цена,
			|	ВозвратТоваровПоставщикуТовары.Сумма,
			|	ВозвратТоваровПоставщикуТовары.СтавкаНДС,
			|	ВозвратТоваровПоставщикуТовары.НомерГТД,
			|	ВозвратТоваровПоставщикуТовары.СтранаПроисхождения,
			|	ВозвратТоваровПоставщикуТовары.СуммаНДС,
			|	ВозвратТоваровПоставщикуТовары.ЕдиницаИзмерения,
			|	ВозвратТоваровПоставщикуТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|	ВозвратТоваровПоставщикуТовары.ЕдиницаИзмерения КАК ВидУпаковки,
			|	ВозвратТоваровПоставщикуТовары.Коэффициент КАК КоличествоВОдномМесте,
			|	ВозвратТоваровПоставщикуТовары.КоличествоМест,
			|	ВозвратТоваровПоставщикуТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|	ВозвратТоваровПоставщикуТовары.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|	Ложь КАК ЭтоУслуга
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
			|ГДЕ
			|	ВозвратТоваровПоставщикуТовары.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";				
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаОтражениеНачисленияНДС()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	ОтражениеНачисленияНДС.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|	Когда ОтражениеНачисленияНДС.Номенклатура ссылка справочник.ОбъектыСтроительства
			|	Тогда ОтражениеНачисленияНДС.Номенклатура.наименование
			|		КОГДА ПОДСТРОКА(ОтражениеНачисленияНДС.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|			Тогда ОтражениеНачисленияНДС.Номенклатура.Наименование
			|		ИНАЧЕ ОтражениеНачисленияНДС.Номенклатура.НаименованиеПолное
			|	КОНЕЦ КАК Номенклатура,
			|	ОтражениеНачисленияНДС.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|	ОтражениеНачисленияНДС.Номенклатура.Код КАК КодНоменклатуры,
			|	ОтражениеНачисленияНДС.Количество,
			|	ОтражениеНачисленияНДС.Цена,
			|	ОтражениеНачисленияНДС.Сумма,
			|	ОтражениеНачисленияНДС.СтавкаНДС,
			|	ОтражениеНачисленияНДС.НомерГТД,
			|	ОтражениеНачисленияНДС.СтранаПроисхождения,
			|	ОтражениеНачисленияНДС.СуммаНДС,
			|	ОтражениеНачисленияНДС.Номенклатура.БазоваяЕдиницаИзмерения как ЕдиницаИзмерения,
			|	ОтражениеНачисленияНДС.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|	"""" КАК ВидУпаковки,
			|	"""" КАК КоличествоВОдномМесте,
			|	"""" как КоличествоМест,
			|	ОтражениеНачисленияНДС.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|	Истина КАК УчитыватьНДС,
			|	ОтражениеНачисленияНДС.Номенклатура.Услуга КАК ЭтоУслуга
			|ИЗ
			|	Документ.ОтражениеНачисленияНДС.ТоварыИУслуги КАК ОтражениеНачисленияНДС
			|ГДЕ
			|	ОтражениеНачисленияНДС.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";				
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаРеализацияУслугПопереработке()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	РеализацияУслугПоПереработкеУслуги.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(РеализацияУслугПоПереработкеУслуги.Содержание, 1, 10) = """"
			|			Тогда РеализацияУслугПоПереработкеУслуги.Номенклатура.Наименование
			|		ИНАЧЕ РеализацияУслугПоПереработкеУслуги.Содержание
			|	КОНЕЦ КАК Номенклатура,
			|	РеализацияУслугПоПереработкеУслуги.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|	РеализацияУслугПоПереработкеУслуги.Номенклатура.Код КАК КодНоменклатуры,
			|	РеализацияУслугПоПереработкеУслуги.Количество,
			|	РеализацияУслугПоПереработкеУслуги.Цена,
			|	РеализацияУслугПоПереработкеУслуги.Сумма,
			|	РеализацияУслугПоПереработкеУслуги.СтавкаНДС,
			|	РеализацияУслугПоПереработкеУслуги.СуммаНДС,
			|	"""" КАК НомерГТД,
			|	"""" КАК СтранаПроисхождения,
			|	РеализацияУслугПоПереработкеУслуги.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|	РеализацияУслугПоПереработкеУслуги.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|	РеализацияУслугПоПереработкеУслуги.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	РеализацияУслугПоПереработкеУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|	"""" КАК ВидУпаковки,
			|	0 КАК КоличествоВОдномМесте,
			|	0  как КоличествоМест,
			|	Истина КАК ЭтоУслуга
			|ИЗ
			|	Документ.РеализацияУслугПоПереработке.Услуги КАК РеализацияУслугПоПереработкеУслуги
			|ГДЕ
			|	РеализацияУслугПоПереработкеУслуги.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";				
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаПередачаОС()
			
			ТекстЗапроса=	
			"ВЫБРАТЬ
			|	ПередачаОС.НомерСтроки КАК НомерСтроки,
			|	ПередачаОС.ОсновноеСредство.Наименование КАК Номенклатура,
			|	ПередачаОС.ОсновноеСредство.Ссылка КАК НоменклатураСсылка,
			|	ПередачаОС.ОсновноеСредство.Код КАК КодНоменклатуры,
			|	ПередачаОС.Количество,
			|	ПередачаОС.Цена,
			|	ПередачаОС.Сумма,
			|	ПередачаОС.СтавкаНДС,
			|	ПередачаОС.СуммаНДС,
			|	"""" КАК НомерГТД,
			|	"""" КАК СтранаПроисхождения,
			|	ПередачаОС.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|	ПередачаОС.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|	ПередачаОС.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ПередачаОС.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|	"""" КАК ВидУпаковки,
			|	0 КАК КоличествоВОдномМесте,
			|	0 КАК КоличествоМест,
			|	Ложь КАК ЭтоУслуга
			|ИЗ
			|	Документ.ПередачаОС.ОС КАК ПередачаОС
			|ГДЕ
			|	ПередачаОС.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";				
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ТЧПолучитьТекстЗапросаТара()
			
			Возврат "ВЫБРАТЬ
			|		РеализацияТоваровУслугВозвратнаяТараы.НомерСтроки КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА ПОДСТРОКА(РеализацияТоваровУслугВозвратнаяТараы.Номенклатура.НаименованиеПолное, 1, 10) = """"
			|				Тогда РеализацияТоваровУслугВозвратнаяТараы.Номенклатура.Наименование
			|			ИНАЧЕ РеализацияТоваровУслугВозвратнаяТараы.Номенклатура.НаименованиеПолное
			|		КОНЕЦ КАК Номенклатура,
			|		РеализацияТоваровУслугВозвратнаяТараы.Номенклатура.Ссылка КАК НоменклатураСсылка,
			|   	РеализацияТоваровУслугВозвратнаяТараы.Номенклатура.Код КАК КодНоменклатуры,
			|		РеализацияТоваровУслугВозвратнаяТараы.Количество КАК Количество,
			|		РеализацияТоваровУслугВозвратнаяТараы.Цена КАК Цена,
			|		РеализацияТоваровУслугВозвратнаяТараы.Сумма КАК Сумма,
			|		значение(Перечисление.СтавкиНДС.БезНДС) КАК СтавкаНДС,
			|		0 КАК СуммаНДС,
			|		"""" КАК НомерГТД,
			|		"""" КАК СтранаПроисхождения,
			|		РеализацияТоваровУслугВозвратнаяТараы.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|		РеализацияТоваровУслугВозвратнаяТараы.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
			|		РеализацияТоваровУслугВозвратнаяТараы.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		РеализацияТоваровУслугВозвратнаяТараы.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
			|		"""" КАК ВидУпаковки,
			|		"""" КАК КоличествоВОдномМесте,
			|		"""",
			|		Ложь КАК ЭтоУслуга,
			|		2 КАК порядок
			|	ИЗ
			|		Документ.РеализацияТоваровУслуг.ВозвратнаяТара КАК РеализацияТоваровУслугВозвратнаяТараы
			|	ГДЕ
			|		РеализацияТоваровУслугВозвратнаяТараы.Ссылка = &Ссылка
			|"    ;
			
		КонецФункции 
		
		Функция ТЧПолучитьТекстЗапроса(Документ, СчетФактура, ЭтоКСФ)
			
			ТекстЗапроса=	"";
			
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				
				Возврат ТЧПолучитьТекстЗапросаРеализацияТоваровУслуг(НЕ СчетФактура = Неопределено);
				
			ИначеЕсли ЭтоКСФ = Ложь И Метаданные.Документы.Найти("КорректировкаРеализации") <> Неопределено И ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
				
				Возврат	ТЧПолучитьТекстЗапросаКорректировкаРеализации();
				
			ИначеЕсли ЭтоКСФ = Истина И Метаданные.Документы.Найти("КорректировкаРеализации") <> Неопределено И ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
				
				Если Строка(Документ.ВидОперации) = "Исправление в первичных документах" Тогда
					Возврат	ТЧПолучитьТекстЗапросаИКСФ();
				ИначеЕсли Строка(Документ.ВидОперации) = "Корректировка по согласованию сторон" Тогда
					Возврат	ТЧПолучитьТекстЗапросаКСФ();
				КонецЕсли;
				
			ИначеЕсли Метаданные.Документы.Найти("ОказаниеУслуг") <> Неопределено И ТипЗнч(Документ) = Тип("ДокументСсылка.ОказаниеУслуг") Тогда
				
				Возврат	ТЧПолучитьТекстЗапросаОказаниеУслуг();
				
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
				
				Возврат ТЧПолучитьТекстЗапросаАктОбОказанииПроизводственныхУслуг();
				
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
				
				Возврат ТЧПолучитьТекстЗапросаОтчетКомиссионераОПродажах();
				
			ИначеЕсли ТипЗнч(Документ)= Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда 
				
				Если Документ.Метаданные().Реквизиты.Найти("ВидОперации") <> Неопределено 
					И Документ.ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках 
					И СчетФактура <> Неопределено 
					И ЗначениеЗаполнено(СчетФактура.Продавец)
					И СчетФактура.Контрагент <> СчетФактура.Продавец Тогда
					Возврат ТЧПолучитьТекстЗапросаОтчетОЗакупках();
				Иначе
					Возврат ТЧПолучитьТекстЗапросаОтчетКомитентуОПродажах();
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				
				Возврат	ТЧПолучитьТекстЗапросаВозвратТоваровПоставщику();
				
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ОтражениеНачисленияНДС") Тогда
				
				Возврат	ТЧПолучитьТекстЗапросаОтражениеНачисленияНДС();
				
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияУслугПопереработке") Тогда 
				
				Возврат	ТЧПолучитьТекстЗапросаРеализацияУслугПопереработке();
				
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ПередачаОС") Тогда 
				
				Возврат	ТЧПолучитьТекстЗапросаПередачаОС();
				
			ИначеЕсли ЭтоСчетФактуранаАванс(СчетФактура) Тогда
				
				Возврат	ТЧПолучитьТекстЗапросаСчетФактураВыданный();
				
			ИначеЕсли ТипЗнч(Документ) = тип("ДокументСсылка.СчетНаоплатуПокупателю") Тогда
				
				Возврат 	ТЧПолучитьТекстЗапросаСчетНаоплатуПокупателю();
				
			КонецЕсли;
			
			Возврат ТекстЗапроса;
			
			ВызватьИсключение "Не удалось сформировать текст запроса к табличной части документа " + Документ;
			
		КонецФункции
		
		Функция ПолучитьРезультатЗапросаТЧ(ДокументСсылка, СчетФактура, ЭтоКСФ) Экспорт
			
			ЗапросТЧ = Новый Запрос;
			ЗапросТЧ.Текст=	ТЧПолучитьТекстЗапроса(ДокументСсылка, СчетФактура, ЭтоКСФ);
			ЗапросТЧ.УстановитьПараметр("СчетФактура", СчетФактура);
			ЗапросТЧ.УстановитьПараметр("Ссылка", ДокументСсылка);
			Возврат ЗапросТЧ.Выполнить();
			
		КонецФункции
		
		Функция ПолучитьКодНоменклатурыДляТорг12(ТекущийКод, НоменклатураСсылка) Экспорт 
			КолонкаКодаТовара=	ПолучитьНаименованиеКолонкиКодаТовара();
			Если ЗначениеЗаполнено(НоменклатураСсылка) И КолонкаКодаТовара <> "Код" Тогда
				Возврат НоменклатураСсылка[КолонкаКодаТовара];
			Иначе 
				Возврат ТекущийКод;
			КонецЕсли;
			
		КонецФункции
		
	//} ТЧПолучитьТекстЗапроса...
	
	//{ ПолучитьДанныеШапки...
		
		Функция ШапкаПолучитьТекстЗапросаОсновной()
			
			ТекстЗапроса=
			"ВЫБРАТЬ
			|	РеализацияТоваровУслуг.Организация КАК Организация,
			|	ВЫБОР
			|		КОГДА РеализацияТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|			Тогда ""он же""
			|		ИНАЧЕ РеализацияТоваровУслуг.Грузоотправитель
			|	КОНЕЦ КАК Грузоотправитель,
			|	РеализацияТоваровУслуг.Контрагент,
			|	ВЫБОР
			|		КОГДА РеализацияТоваровУслуг.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
			|			Тогда РеализацияТоваровУслуг.Контрагент
			|		ИНАЧЕ РеализацияТоваровУслуг.Грузополучатель
			|	КОНЕЦ КАК Грузополучатель,
			|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
			|	РеализацияТоваровУслуг.ВалютаДокумента КАК ВалютаДокумента,
			|	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|	РеализацияТоваровУслуг.УчитыватьНДС КАК УчитыватьНДС
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			|ГДЕ
			|	РеализацияТоваровУслуг.Ссылка = &ДокументСсылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВозвратТоваровПоставщику.Организация,
			|	ВЫБОР
			|		КОГДА ВозвратТоваровПоставщику.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|			Тогда ""он же""
			|		ИНАЧЕ ВозвратТоваровПоставщику.Грузоотправитель
			|	КОНЕЦ,
			|	ВозвратТоваровПоставщику.Контрагент,
			|	ВЫБОР
			|		КОГДА ВозвратТоваровПоставщику.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
			|			Тогда ВозвратТоваровПоставщику.Контрагент
			|		ИНАЧЕ ВозвратТоваровПоставщику.Грузополучатель
			|	КОНЕЦ,
			|	NULL,
			|	ВозвратТоваровПоставщику.ВалютаДокумента,
			|	ВозвратТоваровПоставщику.СуммаВключаетНДС,
			|	ВозвратТоваровПоставщику.УчитыватьНДС
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
			|ГДЕ
			|	ВозвратТоваровПоставщику.Ссылка = &ДокументСсылка
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОтражениеНачисленияНДС.Организация,
			|	ВЫБОР
			|		КОГДА ОтражениеНачисленияНДС.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|			Тогда ""он же""
			|		ИНАЧЕ ОтражениеНачисленияНДС.Грузоотправитель
			|	КОНЕЦ,
			|	ОтражениеНачисленияНДС.Контрагент,
			|	ВЫБОР
			|		КОГДА ОтражениеНачисленияНДС.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
			|			Тогда ОтражениеНачисленияНДС.Контрагент
			|		ИНАЧЕ ОтражениеНачисленияНДС.Грузополучатель
			|	КОНЕЦ,
			|	NULL,
			|	ОтражениеНачисленияНДС.ВалютаДокумента,
			|	ОтражениеНачисленияНДС.СуммаВключаетНДС,
			|	Истина
			|ИЗ
			|	Документ.ОтражениеНачисленияНДС КАК ОтражениеНачисленияНДС
			|ГДЕ
			|	ОтражениеНачисленияНДС.Ссылка = &ДокументСсылка
			| 
			| Объединить все
			|ВЫБРАТЬ
			|	ПередачаОС.Организация КАК Организация,
			|	ВЫБОР
			|		КОГДА ПередачаОС.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|			Тогда ""он же""
			|		ИНАЧЕ ПередачаОС.Грузоотправитель
			|	КОНЕЦ КАК Грузоотправитель,
			|	ПередачаОС.Контрагент,
			|	ВЫБОР
			|		КОГДА ПередачаОС.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
			|			Тогда ПередачаОС.Контрагент
			|		ИНАЧЕ ПередачаОС.Грузополучатель
			|	КОНЕЦ КАК Грузополучатель,
			|	"""" КАК АдресДоставки,
			|	ПередачаОС.ВалютаДокумента КАК ВалютаДокумента,
			|	ПередачаОС.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|	ПередачаОС.УчитыватьНДС КАК УчитыватьНДС
			|ИЗ
			|	Документ.ПередачаОС КАК ПередачаОС
			|ГДЕ
			|	ПередачаОС.Ссылка = &ДокументСсылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	АктОбОказанииПроизводственныхУслуг.Организация,
			|	"""",
			|	АктОбОказанииПроизводственныхУслуг.Контрагент,
			|	"""",
			|	"""",
			|	АктОбОказанииПроизводственныхУслуг.ВалютаДокумента,
			|	АктОбОказанииПроизводственныхУслуг.СуммаВключаетНДС,
			|	АктОбОказанииПроизводственныхУслуг.УчитыватьНДС
			|ИЗ
			|	Документ.АктОбОказанииПроизводственныхУслуг КАК АктОбОказанииПроизводственныхУслуг
			|ГДЕ
			|	АктОбОказанииПроизводственныхУслуг.Ссылка = &ДокументСсылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОтчетКомиссионераОПродажах.Организация,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажах.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|			Тогда ""он же""
			|		ИНАЧЕ ОтчетКомиссионераОПродажах.Грузоотправитель
			|	КОНЕЦ,
			|	ВложенныйЗапрос.Ссылка.Контрагент,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажах.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
			|			Тогда ВЫБОР
			|					КОГДА ВложенныйЗапрос.Ссылка.Контрагент = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
			|						Тогда ОтчетКомиссионераОПродажах.Контрагент
			|					ИНАЧЕ ВложенныйЗапрос.Ссылка.Контрагент
			|				КОНЕЦ
			|		ИНАЧЕ ОтчетКомиссионераОПродажах.Грузополучатель
			|	КОНЕЦ,
			|	"""",
			|	ОтчетКомиссионераОПродажах.ВалютаДокумента,
			|	ОтчетКомиссионераОПродажах.СуммаВключаетНДС,
			|	ОтчетКомиссионераОПродажах.УчитыватьНДС
			|ИЗ
			|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах,
			|	(ВЫБРАТЬ
			|		СчетФактураВыданныйДокументыОснования.Ссылка КАК Ссылка,
			|		СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ДокументОснование
			|	ИЗ
			|		Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
			|	ГДЕ
			|	СчетФактураВыданныйДокументыОснования.Ссылка = &СчетФактура) КАК ВложенныйЗапрос
			|ГДЕ
			|	ОтчетКомиссионераОПродажах.Ссылка = &ДокументСсылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОтчетКомитентуОПродажах.Организация,
			|	"""",
			|	ОтчетКомитентуОПродажах.Контрагент,
			|	"""",
			|	"""",
			|	ОтчетКомитентуОПродажах.ВалютаДокумента,
			|	ОтчетКомитентуОПродажах.СуммаВключаетНДС,
			|	ОтчетКомитентуОПродажах.УчитыватьНДС
			|ИЗ
			|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
			|ГДЕ
			|	ОтчетКомитентуОПродажах.Ссылка = &ДокументСсылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РеализацияУслугПоПереработке.Организация,
			|	"""",
			|	РеализацияУслугПоПереработке.Контрагент,
			|	"""",
			|	"""",
			|	РеализацияУслугПоПереработке.ВалютаДокумента,
			|	РеализацияУслугПоПереработке.СуммаВключаетНДС,
			|	РеализацияУслугПоПереработке.УчитыватьНДС
			|ИЗ
			|	Документ.РеализацияУслугПоПереработке КАК РеализацияУслугПоПереработке
			|ГДЕ
			|	РеализацияУслугПоПереработке.Ссылка = &ДокументСсылка";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ШапкаПолучитьТекстЗапросаСФ()
			
			ТекстЗапроса=
			"ВЫБРАТЬ
			|	СчетФактураВыданный.Организация,
			|	"""" как Грузоотправитель,
			|	СчетФактураВыданный.Контрагент,
			|	"""" КАК Грузополучатель,
			|	"""" как АдресДоставки,
			|	СчетФактураВыданный.ВалютаДокумента,
			|	Истина как СуммаВключаетНДС,
			|	Истина КАК УчитыватьНДС
			|ИЗ
			|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
			|ГДЕ
			|	СчетФактураВыданный.Ссылка = &СчетФактура";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ШапкаПолучитьТекстЗапросаОтчетКомитенту()
			
			ТекстЗапроса=
			"ВЫБРАТЬ
			|	ОтчетКомитентуОПродажахПоставщики.Поставщик КАК Организация,
			|	ВЫБОР
			|		КОГДА ОтчетКомитентуОПродажахПоставщики.Партия.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|			Тогда ОтчетКомитентуОПродажахПоставщики.Поставщик
			|		ИНАЧЕ ОтчетКомитентуОПродажахПоставщики.Партия.Грузоотправитель
			|	КОНЕЦ КАК Грузоотправитель,
			|	ОтчетКомитентуОПродажахПоставщики.Ссылка.Контрагент как Контрагент,
			|	ОтчетКомитентуОПродажахПоставщики.Ссылка.ВалютаДокумента как ВалютаДокумента,
			|	выбор когда ОтчетКомитентуОПродажахПоставщики.Партия.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|  Тогда ОтчетКомитентуОПродажахПоставщики.Ссылка.Организация иначе ОтчетКомитентуОПродажахПоставщики.Партия.Грузополучатель конец  КАК Грузополучатель  ,
			| """" как АдресДоставки    ,
			|   истина как СуммаВключаетНДС,
			| истина как УчитыватьНДС
			|ИЗ
			|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ОтчетКомитентуОПродажахПоставщики
			|ГДЕ
			|	ОтчетКомитентуОПродажахПоставщики.Ссылка = &ДокументСсылка
			|	И ОтчетКомитентуОПродажахПоставщики.СчетФактура = &СчетФактура";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ШапкаПолучитьТекстЗапросаОказаниеУслуг()
			
			ТекстЗапроса=
			"
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОказаниеУслугКонтрагенты.Ссылка.Организация,
			|	"""",
			|	ОказаниеУслугКонтрагенты.Контрагент,
			|	"""",
			|	"""",
			|	ОказаниеУслугКонтрагенты.Ссылка.ВалютаДокумента,
			|	ОказаниеУслугКонтрагенты.Ссылка.СуммаВключаетНДС,
			|	ОказаниеУслугКонтрагенты.Ссылка.УчитыватьНДС
			|ИЗ
			|	Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслугКонтрагенты
			|ГДЕ
			|	ОказаниеУслугКонтрагенты.Ссылка = &ДокументСсылка
			|	И ОказаниеУслугКонтрагенты.СчетФактура = &СчетФактура";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ШапкаПолучитьТекстЗапросаКорректировкаРеализации()
			
			ТекстЗапроса=
			"
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КорректировкаРеализации.Организация КАК Организация,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализации.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|			Тогда ""он же""
			|		ИНАЧЕ КорректировкаРеализации.Грузоотправитель
			|	КОНЕЦ КАК Грузоотправитель,
			|	КорректировкаРеализации.Контрагент,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализации.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
			|			Тогда КорректировкаРеализации.Контрагент
			|		ИНАЧЕ КорректировкаРеализации.Грузополучатель
			|	КОНЕЦ КАК Грузополучатель,
			|	КорректировкаРеализации.АдресДоставки КАК АдресДоставки,
			|	КорректировкаРеализации.ВалютаДокумента КАК ВалютаДокумента,
			|	КорректировкаРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|	КорректировкаРеализации.УчитыватьНДС КАК УчитыватьНДС
			|ИЗ
			|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
			|ГДЕ
			|	КорректировкаРеализации.Ссылка = &ДокументСсылка";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ШапкаПолучитьТекстЗапросаСчетНаОплатуПокупателю()
			
			ТекстЗапроса=
			"
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СчетНаОплату.Организация,
			|	"""",
			|	СчетНаОплату.Контрагент,
			|	"""",
			|	"""",
			|	СчетНаОплату.ВалютаДокумента,
			|	СчетНаОплату.СуммаВключаетНДС,
			|	СчетНаОплату.УчитыватьНДС
			|ИЗ
			|	Документ.СчетНаОплатуПокупателю КАК СчетНаОплату
			|ГДЕ
			|	СчетНаОплату.Ссылка = &ДокументСсылка";
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ШапкаПолучитьТекстЗапроса(ДокументСсылка, СчетФактура)
			
			Если ЭтоСчетФактуранаАванс(СчетФактура) = Истина Тогда
				
				ТекстЗапроса=	ШапкаПолучитьТекстЗапросаСФ();
				
			ИначеЕсли ОснованиеОтчетКомитентаОПродажах_ОтчетОЗакупках(ДокументСсылка, СчетФактура) = Истина Тогда
				
				ТекстЗапроса=	ШапкаПолучитьТекстЗапросаОтчетКомитенту();
				
			Иначе 	
				
				ТекстЗапроса=	ШапкаПолучитьТекстЗапросаОсновной();
				
				Если Метаданные.Документы.Найти("ОказаниеУслуг") <> Неопределено Тогда
					ТекстЗапроса=	ТекстЗапроса + ШапкаПолучитьТекстЗапросаОказаниеУслуг();
				КонецЕсли;
				
				Если Метаданные.Документы.Найти("КорректировкаРеализации") <> Неопределено Тогда 
					ТекстЗапроса=	ТекстЗапроса + ШапкаПолучитьТекстЗапросаКорректировкаРеализации();
				КонецЕсли;
				
				Если Метаданные.Документы.Найти("СчетНаОплатуПокупателю") <> Неопределено Тогда
					ТекстЗапроса=	ТекстЗапроса + ШапкаПолучитьТекстЗапросаСчетНаОплатуПокупателю();
				КонецЕсли;
				
			КонецЕсли;	
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Функция ШапкаПолучитьРезультатЗапроса(ДокументСсылка, СчетФактура = Неопределено) 
			
			Запрос= Новый Запрос;
			Запрос.Текст=	ШапкаПолучитьТекстЗапроса(ДокументСсылка, СчетФактура);
			Запрос.УстановитьПараметр("СчетФактура", СчетФактура);
			Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
			
			РезультатЗапроса=	Запрос.Выполнить();
			
			Возврат РезультатЗапроса;
			
		КонецФункции
		
		Функция ПолучитьВалютуДокумента(ВалютаДокумента, СчетФактура)
			
			Валюта = ВалютаДокумента; 
			РасчетыВУЕ = Ложь;
			ВалютаРегламентированногоУчета=	Константы.ВалютаРегламентированногоУчета.Получить();
			УчетнаяПолитика=				ПараметрыУчетнойПолитики(СчетФактура);
			Если НЕ УчетнаяПолитика = Неопределено 
				И СчетФактура.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах = Истина И
				ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
				РасчетыВУЕ = Истина;
			КонецЕсли;
			
			Если РасчетыВУЕ = Истина ИЛИ ЭтоСчетФактуранаАванс(СчетФактура) Тогда
				Валюта = ВалютаРегламентированногоУчета;
			КонецЕсли;		
			
			Возврат Валюта; 
			
		КонецФункции 
		
		Функция ПолучитьСтруктуруШапки(ДокументСсылка, СчетФактура = Неопределено)   Экспорт 
			
			РезультатЗапроса=	ШапкаПолучитьРезультатЗапроса(ДокументСсылка, СчетФактура);
			Если РезультатЗапроса.Пустой() Тогда
				ВызватьИсключение "Ошибка получения данных шапки, ДокументСсылка - " + ДокументСсылка + ", СчетФактура - " + СчетФактура;
			КонецЕсли;
			
			ТаблицаДанныхШапки= РезультатЗапроса.Выгрузить();
			ДанныеШапки=		ТаблицаДанныхШапки[0];
			
			СтруктураШапки=	Новый Структура();
			
			СтруктураШапки.Вставить("Организация", 		ДанныеШапки.Организация);
			СтруктураШапки.Вставить("Грузоотправитель", ДанныеШапки.Грузоотправитель);
			СтруктураШапки.Вставить("Контрагент", 		ДанныеШапки.Контрагент);
			СтруктураШапки.Вставить("Грузополучатель", 	ДанныеШапки.Грузополучатель);
			СтруктураШапки.Вставить("АдресДоставки", 	ДанныеШапки.АдресДоставки);
			СтруктураШапки.Вставить("ВалютаДокумента", 	ДанныеШапки.ВалютаДокумента);
			СтруктураШапки.Вставить("СуммаВключаетНДС", ДанныеШапки.СуммаВключаетНДС);
			СтруктураШапки.Вставить("УчитыватьНДС", 	ДанныеШапки.УчитыватьНДС);
			СтруктураШапки.Вставить("ДопИнфо", 			Новый Массив);
						
			Если СчетФактура = Неопределено Тогда 
				СтруктураШапки.Вставить("Дата", ДокументСсылка.Дата);
				СтруктураШапки.Вставить("Номер", ДокументСсылка.Номер);
			Иначе 
				СтруктураШапки.Вставить("Дата", СчетФактура.Дата);
				СтруктураШапки.Вставить("Номер", СчетФактура.Номер);
				СтруктураШапки.ВалютаДокумента  =  ПолучитьВалютуДокумента(СтруктураШапки.ВалютаДокумента, СчетФактура);
			КонецЕсли;	
			
			Возврат СтруктураШапки;
			
		КонецФункции
		
	//} ПолучитьДанныеШапки...
	
	//{ ПолучитьДанныеСФ...
		
	Функция ПолучитьНомераДляКСФ(ДокСсылка) Экспорт
		
			ДанныеДляПечати = Новый Структура;
			Если (ДокСсылка.Метаданные().Реквизиты.Найти("Исправление")<>Неопределено) и (ДокСсылка.Исправление) Тогда 
				//это ксф с исправлением
				ДанныеДляПечати.вставить("НомерКСФ", ДокСсылка.НомерИсправляемогоКорректировочногоДокумента);
				ДанныеДляПечати.вставить("ДатаКСФ",  ДокСсылка.ДатаИсправляемогоКорректировочногоДокумента);
				ДанныеДляПечати.вставить("ЭтоИКСФ", Истина);
				
				ДанныеДляПечати.вставить("НомерИКСФ", формат(ДокСсылка.НомерИсправления, "ЧДЦ=0; ЧГ=0"));
				ДанныеДляПечати.вставить("ДатаИКСФ",  ДокСсылка.Дата);
			Иначе 
				//это ксф без исправлений
				ДанныеДляПечати.вставить("НомерКСФ", ПолучитьНомерНаПечатьДиадок(ДокСсылка));
				ДанныеДляПечати.вставить("ДатаКСФ",  ДокСсылка.Дата);
				ДанныеДляПечати.вставить("ЭтоИКСФ", Ложь);
			КонецЕсли;
			
			Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
				ИсправляемыйДокументРеализации = Модуль_Интеграция.ПолучитьИсправляемыйДокументРеализации(ДокСсылка, Истина);
				ДатаИсходногоДокумента 	= ИсправляемыйДокументРеализации.Дата;
				НомерИсходногоДокумента = Модуль_Интеграция.ПолучитьНомерНаПечатьДиадок(ИсправляемыйДокументРеализации);
				УчитыватьИсправлениеИсходногоДокумента 	= Ложь;
				НомерИсправленияИсходногоДокумента 		=  "";
				ДатаИсправленияИсходногоДокумента 		= Дата(1,1,1);
			Иначе
				Если ДокСсылка.Метаданные().Реквизиты.Найти("УчитыватьИсправлениеИсходногоДокумента")<>Неопределено Тогда  
					ДатаИсходногоДокумента =  ДокСсылка.ДатаИсходногоДокумента;
					НомерИсходногоДокумента = ДокСсылка.НомерИсходногоДокумента;
					УчитыватьИсправлениеИсходногоДокумента = ДокСсылка.УчитыватьИсправлениеИсходногоДокумента;
					НомерИсправленияИсходногоДокумента =  ДокСсылка.НомерИсправленияИсходногоДокумента;
					ДатаИсправленияИсходногоДокумента = ДокСсылка.ДатаИсправленияИсходногоДокумента;
				Иначе 
					//начиная с бух 2.0.48 часть реквизитов хранится в другом месте 
					ДатаИсходногоДокумента =  ДокСсылка.ДокументыОснования[0].ДатаИсходногоДокумента;
					НомерИсходногоДокумента = ДокСсылка.ДокументыОснования[0].НомерИсходногоДокумента;
					УчитыватьИсправлениеИсходногоДокумента = ДокСсылка.ДокументыОснования[0].УчитыватьИсправлениеИсходногоДокумента;
					НомерИсправленияИсходногоДокумента =  ДокСсылка.ДокументыОснования[0].НомерИсправленияИсходногоДокумента;
					ДатаИсправленияИсходногоДокумента = ДокСсылка.ДокументыОснования[0].ДатаИсправленияИсходногоДокумента;
				КонецЕсли;
			КонецЕсли;
			
			ДанныеДляПечати.вставить("ДатаИсходногоДокумента",				  	ДатаИсходногоДокумента);
			ДанныеДляПечати.вставить("НомерИсходногоДокумента", 				НомерИсходногоДокумента);
			ДанныеДляПечати.вставить("УчитыватьИсправлениеИсходногоДокумента",  УчитыватьИсправлениеИсходногоДокумента);
			ДанныеДляПечати.вставить("НомерИсправленияИсходногоДокумента",  	НомерИсправленияИсходногоДокумента);
			ДанныеДляПечати.вставить("ДатаИсправленияИсходногоДокумента",  		ДатаИсправленияИсходногоДокумента);
			
			Возврат ДанныеДляПечати;
			
		КонецФункции
		
		Функция ПолучитьНомераДляСФ(СсылкаНаОбъект)  Экспорт 
			ДанныеДляПечати = Новый Структура;
			Если СсылкаНаОбъект.метаданные().реквизиты.найти("Исправление")<>Неопределено и СсылкаНаОбъект.исправление Тогда
				ДанныеДляПечати.вставить("НомерДокумента", СсылкаНаОбъект.НомерИсходногоДокумента);
				ДанныеДляПечати.Вставить("ДатаДокумента", СсылкаНаОбъект.ДатаИсходногоДокумента);
				ДанныеДляПечати.Вставить("ЭтоИСФ", Истина);
				ДанныеДляПечати.Вставить("НомерИсправления", строка(СсылкаНаОбъект.НомерИсправления));
				ДанныеДляПечати.Вставить("ДатаИсправления",  СсылкаНаОбъект.Дата);
			Иначе 
				ДанныеДляПечати.вставить("НомерДокумента", ПолучитьНомерНаПечатьДиадок(СсылкаНаОбъект));
				ДанныеДляПечати.Вставить("ДатаДокумента",  СсылкаНаОбъект.Дата);
				ДанныеДляПечати.Вставить("ЭтоИСФ", Ложь);
			КонецЕсли;	
			Возврат ДанныеДляПечати;
			
		КонецФункции
		
		Функция ПолучитьКПППокупателя(СсылкаНаОбъект) Экспорт 
			Если НЕ СсылкаНаОбъект.Метаданные().Реквизиты.Найти("КППКонтрагента") = Неопределено Тогда
				Если ЗначениеЗаполнено(СсылкаНаОбъект.КППКонтрагента) Тогда
					Возврат СсылкаНаОбъект.КППКонтрагента
				КонецЕсли
			КонецЕсли;	
			
			Возврат ""
		КонецФункции
		
	//} ПолучитьДанныеСФ...
	
//} ПОЛУЧЕНИЕ ДАННЫХ
	
//{ ФОРМИРОВАНИЕ СПИСКА ВЫГРУЗКИ
	
	Функция ОчиститьГрузополучателя(СтрокаТаблицы) Экспорт
		
		Возврат ЗначениеЗаполнено(СтрокаТаблицы.Грузополучатель) И СтрокаТаблицы.Грузополучатель.ИНН <> СтрокаТаблицы.Покупатель.ИНН;
		
	КонецФункции
	
	Функция ПроверитьТипДокумента(ДокСсылка, НаименованиеТипа)
		Возврат (метаданные.документы.найти(НаименованиеТипа)<>Неопределено) и (ТипЗнч(ДокСсылка)=тип("ДокументСсылка."+НаименованиеТипа))
	КонецФункции	
	
	Функция ПолучитьТипДокумента(Док, ТаблицаНастроекПечати, ЭтоСчет, ФункцияУПД) Экспорт
		
		Если ЭтоСчет ИЛИ ТипЗнч(Док)=Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
			Возврат "Счет на оплату";		
		ИначеЕсли ТипЗнч(Док)=тип("ДокументСсылка.СчетФактураВыданный") Тогда 
			ЭтоКСФ = ( строка(Док.ВидСчетаФактуры) = "Корректировочный"); 
			Если ЭтоКСФ Тогда 
				Возврат ?(Док.Исправление, "Исправление КСФ", "Корректировочный СФ");
			Иначе 	
				Возврат  ?( Док.метаданные().реквизиты.найти("Исправление")<>Неопределено и Док.исправление, "Исправление СФ", "Счет-фактура");
			КонецЕсли;	
		ИначеЕсли ТипЗнч(Док)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда 
			СтрокиНастрек = ТаблицаНастроекПечати.найтистроки(Новый Структура("Организация", Док.Организация));
			Возврат ?(  СтрокиНастрек.количество()=0,  "Торг-12", ?(СтрокиНастрек[0].ПечатнаяФормаДляТоваров="", "Торг-12"	, СтрокиНастрек[0].ПечатнаяФормаДляТоваров  ) ); 
		ИначеЕсли (ТипЗнч(Док)=Тип("ДокументСсылка.РеализацияТоваровУслуг")) или (ТипЗнч(Док)=Тип("ДокументСсылка.РеализацияОтгруженныхТоваров")) или ПроверитьТипДокумента(Док, "КорректировкаРеализации") Тогда 
			//Настройка = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьНастройкиПечатныхФормДляОрганизацииДиадок(Док.Организация);
			РНК = ?(   ТипЗнч(Док)=Тип("ДокументСсылка.РеализацияОтгруженныхТоваров") , Док.ДокументОтгрузки, Док);
			СтрокиНастрек = ТаблицаНастроекПечати.найтистроки(Новый Структура("Организация", РНК.Организация));
			Если СтрокиНастрек.количество()=0 Тогда 
				ФормаДляУслуг = "Акт";
				ФормаДляТоваров = "Торг-12";
			иначе 
				ФормаДляТоваров =  ?(СтрокиНастрек[0].ПечатнаяФормаДляТоваров="", "Торг-12" , СтрокиНастрек[0].ПечатнаяФормаДляТоваров);
				ФормаДляУслуг  =   ?(СтрокиНастрек[0].ПечатнаяФормаДляУслуг  ="", "Акт"		, СтрокиНастрек[0].ПечатнаяФормаДляУслуг  );
			КонецЕсли;	
			Возврат ?(РНК.товары.количество()=0 и ( (РНК.Услуги.Количество()>0) или (РНК.АгентскиеУслуги.Количество()>0) ),  ФормаДляУслуг, ФормаДляТоваров);
		ИначеЕсли  (ТипЗнч(Док)=Тип("ДокументСсылка.ОтчетКомитентуОПродажах"))	Тогда
			Возврат ("Акт");
		ИначеЕсли  (ТипЗнч(Док)=Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг")) или   (ТипЗнч(Док)=Тип("ДокументСсылка.РеализацияУслугПоПереработке"))  Тогда 
			СтрокиНастрек = ТаблицаНастроекПечати.найтистроки(Новый Структура("Организация", Док.Организация));
			Возврат ?(  СтрокиНастрек.количество()=0,  "Акт", ?(СтрокиНастрек[0].ПечатнаяФормаДляУслуг  ="", "Акт"	, СтрокиНастрек[0].ПечатнаяФормаДляУслуг  ) ); 
		ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") Тогда 
			Возврат "Акт сверки"
		Иначе 
			Возврат "";
		КонецЕсли;	
		
	КонецФункции
	
	//{ Подготовка временных таблиц для списка отправки документов...
	
		Функция ПодготовитьВТ_СпискаОтправкиДокументов(ТипыДокументов, Запрос) Экспорт
			
			МассивВременныхТаблиц= Новый Массив;
			
			Если ТипыДокументов = 0 ИЛИ ТипыДокументов = 1 ИЛИ ТипыДокументов = 2 ИЛИ ТипыДокументов = 5 ИЛИ ТипыДокументов = 6 Тогда
				ПодготовитьВТ_СЧФ_Основная(Запрос, МассивВременныхТаблиц);
				ПодготовитьВТ_УПД_СЧФДОП(Запрос, МассивВременныхТаблиц, ТипыДокументов);
				ПодготовитьВТ_УКД_КСЧФДИС(Запрос, МассивВременныхТаблиц, ТипыДокументов);
			КонецЕсли;
			
			Если ТипыДокументов = 0 ИЛИ ТипыДокументов = 1 Тогда
				ПодготовитьВТ_Накладные(Запрос, МассивВременныхТаблиц, ТипыДокументов);
			КонецЕсли;
			
			Если ТипыДокументов = 0 ИЛИ ТипыДокументов = 2 Тогда
				ПодготовитьВТ_СчетаФактуры(Запрос, МассивВременныхТаблиц, ТипыДокументов);
			КонецЕсли;
			
			Если ТипыДокументов = 0 ИЛИ ТипыДокументов = 3 Тогда
				ПодготовитьВТ_СчетаНаОплату(Запрос, МассивВременныхТаблиц);
			КонецЕсли;
			
			Если ТипыДокументов = 0 ИЛИ ТипыДокументов = 4 Тогда
				ПодготовитьВТ_АктыСверки(Запрос, МассивВременныхТаблиц);
			КонецЕсли;
			
			Возврат МассивВременныхТаблиц;
			
		КонецФункции
		
		
		Процедура ПодготовитьВТ_СЧФ_Основная(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_СЧФ_Основная(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_УПД_СЧФДОП(Запрос, МассивВременныхТаблиц, ТипыДокументов)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_УПД_СЧФДОП(Запрос, МассивВременныхТаблиц, ТипыДокументов);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_УКД_КСЧФДИС(Запрос, МассивВременныхТаблиц, ТипыДокументов)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_УКД_КСЧФДИС(Запрос, МассивВременныхТаблиц, ТипыДокументов);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_СчетаФактуры(Запрос, МассивВременныхТаблиц, ТипыДокументов)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_СчетаФактуры(Запрос, МассивВременныхТаблиц, ТипыДокументов);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_АктыСверки(Запрос, МассивВременныхТаблиц) Экспорт
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_АктыСверки(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		
		Процедура ПодготовитьВТ_Накладные(Запрос, МассивВременныхТаблиц, ТипыДокументов)
			
			ПодготовитьВТ_Накладные_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_ВозвратТоваровПоставщику(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_РеализацияОтгруженныхТоваров(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_АктОбОказанииПроизводственныхУслуг(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_РеализацияУслугПоПереработке(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_ОтчетКомитентуОПродажах(Запрос, МассивВременныхТаблиц);
			
			Если Метаданные.Документы.Найти("КорректировкаРеализации") <> Неопределено Тогда
				ПодготовитьВТ_Накладные_КорректировкаРеализации(Запрос, МассивВременныхТаблиц);
			КонецЕсли;
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_Накладные_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_КорректировкаРеализации(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_Накладные_КорректировкаРеализации(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_ВозвратТоваровПоставщику(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_Накладные_ВозвратТоваровПоставщику(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_РеализацияОтгруженныхТоваров(Запрос, МассивВременныхТаблиц) Экспорт
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_Накладные_РеализацияОтгруженныхТоваров(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_АктОбОказанииПроизводственныхУслуг(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_Накладные_АктОбОказанииПроизводственныхУслуг(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_РеализацияУслугПоПереработке(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_Накладные_РеализацияУслугПоПереработке(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_ОтчетКомитентуОПродажах(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_Накладные_ОтчетКомитентуОПродажах(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		
		Процедура ПодготовитьВТ_СчетаНаОплату(Запрос, МассивВременныхТаблиц)
			
			ПодготовитьВТ_СчетаНаОплату_СчетНаОплатуПокупателю(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_СчетаНаОплату_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_СчетаНаОплату_ЗаказПокупателя(Запрос, МассивВременныхТаблиц);
			
			Если Метаданные.Документы.Найти("КорректировкаРеализации") <> Неопределено Тогда
				ПодготовитьВТ_СчетаНаОплату_КорректировкаРеализации(Запрос, МассивВременныхТаблиц);
			КонецЕсли;
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_СчетаНаОплату_СчетНаОплатуПокупателю(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_СчетаНаОплату_СчетНаОплатуПокупателю(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_СчетаНаОплату_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_СчетаНаОплату_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_СчетаНаОплату_КорректировкаРеализации(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_СчетаНаОплату_КорректировкаРеализации(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_СчетаНаОплату_ЗаказПокупателя(Запрос, МассивВременныхТаблиц)
			
			ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ПодготовитьВТ_СчетаНаОплату_ЗаказПокупателя(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
	//} Подготовка временных таблиц для списка отправки документов...
	
	//{ Заполнение шаблона доп подей данными
	
		Процедура ЗаполнитьШаблонДопПолейДанными(ИдКонтрагента, ТипДокумента, ДокументСсылка, СтрокаДопСведения) Экспорт
			
			Если ИдКонтрагента = "ed60fb4bcc2a46c49452ea21582f59ad@diadoc.ru" //Тестовое юрлицо 2 -> заполнение доп. полей для S7
				ИЛИ ИдКонтрагента = "bd79cbf7708f45e1891fb398affa6fc6@diadoc.ru" //ПАО "Авиакомпания Сибирь"
				ИЛИ ИдКонтрагента = "c9768a6086f64e1690d4bc81f09ca86a@diadoc.ru" Тогда // ООО Глобус 
				
				Если ТипДокумента = "Invoice" Тогда
					
					СтруктураДанныеДоговора = Модуль_ИнтеграцияОбщий.ПолучитьДатуНомерДоговора(ДокументСсылка);
					
					СтрокаЗамены 	= "";
					МассивДопПолей 	= ПреобразоватьСтрокуВМассивПодстрок(СтрокаДопСведения, ";", Истина);
					
					Для каждого СтрокаДопПоле из МассивДопПолей Цикл
						
						Если СтрокаДопПоле = "ДоговорНомер=" Тогда
							СтрокаДопПоле = СтрокаДопПоле + СтруктураДанныеДоговора.ДоговорНомер;
						ИначеЕсли СтрокаДопПоле = "ДоговорДата=" Тогда
							СтрокаДопПоле = СтрокаДопПоле + Формат(СтруктураДанныеДоговора.ДоговорДата, "ДФ=dd.MM.yyyy");
						КонецЕсли;
						
						СтрокаЗамены = СтрокаЗамены + СтрокаДопПоле + ";";
						
					КонецЦикла;
					
					Если ЗначениеЗаполнено(СтрокаЗамены) = Истина Тогда
						СтрокаДопСведения = СтрокаЗамены;	
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецПроцедуры
	
	//} Заполнение шаблона доп подей данными
	
	
//} ФОРМИРОВАНИЕ СПИСКА ВЫГРУЗКИ

//{ ГЕНЕРАЦИЯ СТРУКТУРЫ ДЛЯ СФ	
	
	Функция ПолучитьДатуНомерСвидетельстваОГосРегистрацииИП(Организация) Экспорт 
	  Если ЗначениеЗаполнено(Организация.СвидетельствоСерияНомер) и ЗначениеЗаполнено(Организация.СвидетельствоДатавыдачи) Тогда 
			Возврат  Организация.СвидетельствоСерияНомер+" от "+Формат(Организация.СвидетельствоДатавыдачи, "ДФ=dd.MM.yyyy")
		Иначе 
			Возврат "";
	  КонецЕсли;
		
	КонецФункции

	Функция ПолучитьМассивСсылокРНКПоСчетуФактуреВыданному(СсылкаНаОбъект) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СФ.ДокументОснование СФССылка
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СФ
	|ГДЕ
	|	СФ.Ссылка = &Док";
	
	Запрос.УстановитьПараметр("Док", СсылкаНаОбъект);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СФССылка");
КонецФункции

//} ГЕНЕРАЦИЯ СТРУКТУРЫ ДЛЯ СФ

//{ ГЕНЕРАЦИЯ СТРУКТУРЫ ДЛЯ ТОРГ-12 ИЛИ АКТА ВЫПОЛНЕННЫХ РАБОТ	
	
	Функция ПолучитьСсылкуСчетаФактурыВыданногоПоДокументуОснованию(СсылкаНаОбъект) Экспорт
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	СФВыданный.Ссылка СФСсылка
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования СФВыданный
		|ГДЕ
		|	СФВыданный.ДокументОснование = &Док";
		Запрос.УстановитьПараметр("Док", СсылкаНаОбъект);
		Рез = Запрос.Выполнить().Выгрузить();
		
		Возврат ?(Рез.Количество() = 0, Неопределено, Рез[0].СФСсылка);
	КонецФункции

	Функция ПолучитьВидЮрАдресаКонтрагента() Экспорт 
		 Возврат Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
	КонецФункции
	
	Процедура ЗаполнитьСтруктуруАдреса(AddressInfo, ЮрФизЛицо, ИспользоватьЮрАдрес = Ложь, АдресСтрокой = "") Экспорт
		
		ПолучитьМодульПрог("Модуль_ИнтеграцияУниверсальнаяЛогика").ЗаполнитьСтруктуруАдреса(AddressInfo, ЮрФизЛицо, ИспользоватьЮрАдрес, АдресСтрокой);
		
	КонецПроцедуры
	
	Процедура ЗаполнитьСтруктурируЮрФизЛица(OrganizationInfo, ЮрФизЛицо, ДатаДокумента, БанковскийСчетОрганизации=Неопределено,  ЮрАдрес, АдресДляСФ = Ложь, АдресСтрокой = "")  Экспорт 

		ГоловноеЮрЛицо = "";
		 
		Если АдресДляСФ = Истина Тогда
			Если ТипЗнч(ЮрФизЛицо) = Тип("СправочникСсылка.Контрагенты") Тогда
				ГоловноеЮрЛицо = ЮрФизЛицо.ГоловнойКонтрагент;	
			ИначеЕсли ТипЗнч(ЮрФизЛицо) = Тип("СправочникСсылка.Организации") Тогда
				ГоловноеЮрЛицо = ЮрФизЛицо.ГоловнаяОрганизация;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ГоловноеЮрЛицо) Тогда
				СведенияОПодразделении 	= СведенияОбОрганизации(ЮрФизЛицо, ДатаДокумента,  БанковскийСчетОрганизации);
				СведенияОбОрганизации	= СведенияОбОрганизации(ГоловноеЮрЛицо, ДатаДокумента,  БанковскийСчетОрганизации);
				
				СведенияОбОрганизации.КПП = СведенияОПодразделении.КПП;
			Иначе
				СведенияОбОрганизации = СведенияОбОрганизации(ЮрФизЛицо, ДатаДокумента,  БанковскийСчетОрганизации);
			КонецЕсли;	
		Иначе
			СведенияОбОрганизации = СведенияОбОрганизации(ЮрФизЛицо, ДатаДокумента,  БанковскийСчетОрганизации);
		КонецЕсли;
		
		Если стрДлина(СведенияОбОрганизации.ИНН)<>12 Тогда 
			НаименованиеОрганизации = СведенияОбОрганизации.НаименованиеДляПечатныхФорм;
			ЭтоИП = Ложь;
		Иначе 
			Если типЗнч(юрФизЛицо) = тип("СправочникСсылка.Организации") Тогда 
			  //для нашей организации - данные берем из нормализованного представления физлица
			  НаименованиеОрганизации  = юрФизЛицо.ИндивидуальныйПредприниматель.Наименование;
			Иначе 
			  НаименованиеОрганизации  = СведенияОбОрганизации.наименованиеДляпечатныхФорм 
			КонецЕсли;	  
			ЭтоИП = Истина;
		КонецЕсли;
		
		OrganizationInfo.Name = НаименованиеОрганизации;
		OrganizationInfo.Inn  = СведенияОбОрганизации.ИНН;
		
		Если ЗначениеЗаполнено(ЮрФизЛицо.ЮрФизЛицо) Тогда
			OrganizationInfo.Kpp  = СведенияОбОрганизации.КПП;
		Иначе
			OrganizationInfo.Kpp  = ЮрФизЛицо.КПП;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ГоловноеЮрЛицо) Тогда
			ЗаполнитьСтруктуруАдреса(OrganizationInfo.Address, ГоловноеЮрЛицо, ЮрАдрес, АдресСтрокой);	
		Иначе
			ЗаполнитьСтруктуруАдреса(OrganizationInfo.Address, ЮрФизЛицо, ЮрАдрес, АдресСтрокой);
		КонецЕсли;
		
		OrganizationInfo.IsSoleProprietor  =  ЭтоИП;
		
		Если АдресДляСФ=Ложь Тогда
			OrganizationInfo.Okpo  = СведенияОбОрганизации.КодПоОкпо;
			
			Если найти(СведенияОбОрганизации.Телефоны, "факс:")>0 Тогда 
				телефон = СокрЛП(лев(СведенияОбОрганизации.Телефоны, найти(СведенияОбОрганизации.Телефоны, "факс:")-1));
				Если прав(телефон,1) = ","  Тогда
					телефон = лев(телефон, стрДлина(телефон)-1);
				КонецЕсли;
				факс = СокрЛП(прав(СведенияОбОрганизации.Телефоны, СтрДлина(СведенияОбОрганизации.Телефоны) - найти(СведенияОбОрганизации.Телефоны, "факс:")- 5));
			Иначе 
				Телефон =СведенияОбОрганизации.Телефоны;
				Факс = "";
			КонецЕсли;	
			OrganizationInfo.Phone = Модуль_ЗаполнениеКонтента.СократитьПредставлениеТелефона(Телефон);
			OrganizationInfo.Fax   = Модуль_ЗаполнениеКонтента.СократитьПредставлениеТелефона(Факс) ;
			OrganizationInfo.BankAccountNumber = ?(ЗначениеЗаполнено(СведенияОбОрганизации.НомерСчета),  СведенияОбОрганизации.НомерСчета, "") ;
			OrganizationInfo.BankName  =   ?(ЗначениеЗаполнено(СведенияОбОрганизации.Банк), СведенияОбОрганизации.Банк.наименование, "");
			OrganizationInfo.BankId =  ?(ЗначениеЗаполнено(СведенияОбОрганизации.БИК),  СокрЛП(СведенияОбОрганизации.БИК), "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ГоловноеЮрЛицо) Тогда
			OrganizationInfo.вставить("Ссылка",ГоловноеЮрЛицо);
		Иначе
			OrganizationInfo.вставить("Ссылка",ЮрФизЛицо);
		КонецЕсли;
	//	OrganizationInfo.Department  =  "";
	КонецПроцедуры	

	Функция ПолучитьСтруктуруОснования(ДокСсылка, ЭтоАкт = Ложь, ЭтоУПД = Ложь)  Экспорт
		
		ДоговорКонтрагента = ДокСсылка.ДоговорКонтрагента;
		
		Ground = Новый Структура;
		Ground.Вставить("GroundName", 	"");
		Ground.Вставить("GroundNumber", "");
		Ground.Вставить("GroundDate", 	"");
		Ground.Вставить("Основание", 	"");
		
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			
			Если ЭтоУПД Тогда
				ПредставлениеДоговора= "Договор";
			Иначе
				ПредставлениеДоговора= ДоговорКонтрагента.Наименование;
			КонецЕсли;
			
			Ground.Вставить("GroundName", 	ПредставлениеДоговора);
			Ground.Вставить("GroundNumber", ДоговорКонтрагента.Номер);
			Ground.Вставить("GroundDate", 	ДоговорКонтрагента.Дата);
			Ground.Вставить("Основание", 	ДоговорКонтрагента);
			
		КонецЕсли;	 
		 
		Возврат Ground;
		
	КонецФункции	

	Функция ПолучитьБанковскийСчетПоДокументу(ДокТоварный) Экспорт 
		БанковскийСчетОрганизации = ?(ДокТоварный.Метаданные().Реквизиты.найти("БанковскийСчетОрганизации")=Неопределено, Неопределено, ДокТоварный.БанковскийСчетОрганизации);
		Если (ДокТоварный.Метаданные().Реквизиты.найти("СтруктурнаяЕдиница")<>Неопределено) и (ТипЗнч(ДокТоварный.СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета")) Тогда 
			 БанковскийСчетОрганизации = ДокТоварный.СтруктурнаяЕдиница;
		ИначеЕсли (ДокТоварный.Метаданные().Реквизиты.найти("Банковскийсчет")<>Неопределено) и (ТипЗнч(ДокТоварный.Банковскийсчет) = Тип("СправочникСсылка.БанковскиеСчета")) Тогда 
			 БанковскийСчетОрганизации = ДокТоварный.Банковскийсчет;
		КонецЕсли;	 
		Если (ЗначениеЗаполнено(БанковскийСчетОрганизации) = Ложь) и ЗначениеЗаполнено(ДокТоварный.Организация.ОсновнойБанковскийСчет) Тогда 
			 БанковскийСчетОрганизации = ДокТоварный.Организация.ОсновнойБанковскийСчет
		 КонецЕсли;	
		 Возврат БанковскийСчетОрганизации;
	КонецФункции

	Функция СведенияОбОрганизации(Организация, Дата, Банковскийсчет=Неопределено) 
		 //Возврат УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,, Банковскийсчет);
	КонецФункции	

	Функция ПолучитьПодразделениеИзДокумента(ДокССылка) Экспорт 
	Возврат ""
КонецФункции

//} ГЕНЕРАЦИЯ СТРУКТУРЫ ДЛЯ ТОРГ-12 ИЛИ АКТА ВЫПОЛНЕННЫХ РАБОТ 

//{ ПОЛУЧЕНИЕ ДАННЫХ ДЛЯ ТОРГ-12, АКТОВ, СФ

	Функция ДобавитьРазделитель(Стр, Префикс = "") 
		Возврат ?(ЗначениеЗаполнено(стр), Префикс+сокрЛП(Стр)+", ", "");
	КонецФункции
	
	Функция ОтрезатьПравуюЗапятую(стр)
		результат = сокрЛП(стр);
		пока прав(результат, 1)="," цикл 
			Результат = лев(результат, стрДлина(результат)-1);
		КонецЦикла;	
		
		Возврат результат;
	КонецФункции
	
	Функция ПолучитьПредставлениеКонтрагентаДляАкта(Контрагент, ДатаОперации)   Экспорт 
		СведенияОбОрганизации = СведенияОбОрганизации(Контрагент, ДатаОперации);
		Возврат ОтрезатьПравуюЗапятую(ДобавитьРазделитель(СведенияОбОрганизации.ПолноеНаименование)+ДобавитьРазделитель(СведенияОбОрганизации.ИНН, "ИНН: ")+ДобавитьРазделитель(СведенияОбОрганизации.КПП, "КПП: "));
	КонецФункции

//} ПОЛУЧЕНИЕ ДАННЫХ ДЛЯ ТОРГ-12, АКТОВ, СФ

//{ ФОРМИРОВАНИЕ СФ НА ОСНОВАНИИ ТРУ
	
	Функция ТексЗапросаДляФормированияСФНаОснованииРТУ() Экспорт
		
		ТекстЗапроса=  	
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Документ,
		|	РеализацияТоваровУслуг.Организация КАК Продавец,
		|	РеализацияТоваровУслуг.Контрагент КАК Покупатель,
		|	РеализацияТоваровУслуг.Грузополучатель,
		|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокументаЗначение,
		|	ЕСТЬNULL(СУММА(ТоварныеСтроки.СуммаНДС), 0) + ЕСТЬNULL(СУММА(ТоварныеСтроки.СумаНДСУслуги), 0) КАК СуммаНДСЗначение,
		|	РеализацияТоваровУслуг.ВалютаДокумента КАК Валюта,
		|	МАКСИМУМ(ЗначенияСвойствОбъектов.Значение) КАК ID_,
		|	ЛОЖЬ КАК ЭтоСчет,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	РеализацияТоваровУслуг.Контрагент КАК ДокОснованиеКонтрагент,
		|	""СчетФактураВыданный"" КАК Тип
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО РеализацияТоваровУслуг.Ссылка = ЗначенияСвойствОбъектов.Объект
		|			И (ЗначенияСвойствОбъектов.Свойство = &ИдентификаторДокументаВДиадокСф)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТоварыТЧ.Ссылка КАК Ссылка,
		|			ТоварыТЧ.СуммаНДС КАК СуммаНДС,
		|			0 КАК СумаНДСУслуги
		|		ИЗ
		|			Документ.РеализацияТоваровУслуг.Товары КАК ТоварыТЧ
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			УслугиТЧ.Ссылка,
		|			0,
		|			УслугиТЧ.СуммаНДС
		|		ИЗ
		|			Документ.РеализацияТоваровУслуг.Услуги КАК УслугиТЧ
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			АгентскиеУслугиТЧ.Ссылка,
		|			0,
		|			АгентскиеУслугиТЧ.СуммаНДС
		|		ИЗ
		|			Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК АгентскиеУслугиТЧ) КАК ТоварныеСтроки
		|		ПО (ТоварныеСтроки.Ссылка = РеализацияТоваровУслуг.Ссылка)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ фильтрПоОрганизациям КАК фильтрПоОрганизациям
		|		ПО РеализацияТоваровУслуг.Организация = фильтрПоОрганизациям.Организация
		|ГДЕ
		|	(фильтрПоОрганизациям.ОтпрНеПроведенные
		|				И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
		|			ИЛИ НЕ фильтрПоОрганизациям.ОтпрНеПроведенные
		|				И РеализацияТоваровУслуг.Проведен)
		|	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &Датаокончания
		|	И (РеализацияТоваровУслуг.Контрагент В (&Контрагент)
		|			ИЛИ РеализацияТоваровУслуг.Контрагент.ИНН = РеализацияТоваровУслуг.Грузополучатель.ИНН
		|				И РеализацияТоваровУслуг.Грузополучатель В (&Контрагент))
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслуг.Ссылка,
		|	РеализацияТоваровУслуг.Организация,
		|	РеализацияТоваровУслуг.Контрагент,
		|	РеализацияТоваровУслуг.СуммаДокумента,
		|	РеализацияТоваровУслуг.ВалютаДокумента,
		|	РеализацияТоваровУслуг.Грузополучатель";
		
		Возврат ТекстЗапроса;
		
	КонецФункции
	
	Процедура ВизуализироватьСФНаОснованииРТУ(ТекДанные, MyBoxId, DiadocConnection) Экспорт
		
		ДокСсылка = ТекДанные.Документ;
		ТипДокумента = ТекДанные.ТипДокумента;
		
		ФормаСФ = этотОбъект.ПолучитьФорму("ФормаПоказаСФ", Этаформа, ДокСсылка);
		
		ФормаСФ.MyBoxId 						= MyBoxId;
		ФормаСФ.ToDepartmentID 					= ТекДанные.ToDepartmentID;
		ФормаСФ.Получатель						= ?(ЗначениеЗаполнено(ТекДанные.Грузополучатель), ТекДанные.Грузополучатель, ТекДанные.Покупатель);
		ФормаСФ.ПодразделениеКонтрагента 		= ТекДанные.ВПодразделение;
		ФормаСФ.ЗакрыватьПриЗакрытииВладельца 	= Истина;
		ФормаСФ.СсылкаНаОбъект 					= ДокСсылка;
		ФормаСФ.ТребуетсяНомерЗаказа 			= ТекДанные.ТребуетсяНомерЗаказа;
		ФормаСФ.НомерЗаказа 					= ТекДанные.НомерЗаказа;
		ФормаСФ.ДопСведения 					= ТекДанные.ДопСведения;
		ФормаСФ.ОтправкаНевозможна 				= (НЕ ТекДанные.ЭтоТестовыйДокумент) И (DiadocConnection.AuthenticateType = "Login");
		ФормаСФ.ТипДокумента 					= ТекДанные.ТипДокумента;
		
		ФормаСФ.ОткрытьМодально();
		
	КонецПроцедуры
	
	Функция СформироватьДанныеДляФормированияСчетФактурыПоРТУ(Реализация, ЭтоКСФ) Экспорт
		
		ДанныеСФ = ПолучитьСтруктуруШапки(Реализация);
		
		ДанныеСФ.Вставить("НомераДляСФ",						ПолучитьНомераДляСФ(Реализация));
		ДанныеСФ.Вставить("СФНаАванс", 							Ложь);
		ДанныеСФ.Вставить("ДатаНомерСвидетельстваОРегистрации", ПолучитьДатуНомерСвидетельстваОГосРегистрацииИП(Реализация.Организация));
		ДанныеСФ.Вставить("ДатаНомерДокументовОплаты", 			ПолучитьДатуНомерДокументовОплаты(Реализация));
        ДанныеСФ.Вставить("КПППокупателя",  					ПолучитьКПППокупателя(Реализация));
		
		ДанныеСФ.Вставить("ТабличнаяЧасть", ПолучитьТабЧастьСФПоРТУ(Реализация));
		
		Возврат ДанныеСФ;
	КонецФункции 
	
	Функция ПолучитьТабЧастьСФПоРТУ(Реализация)  
		
		ТабличнаяЧасть	= ИнициализацияТаблицыСФ();
		ДанныеТЧ 		= ПолучитьРезультатЗапросаТЧ(Реализация, Ложь, Ложь).Выгрузить();
		
		Для каждого Строка Из ДанныеТЧ Цикл
			СтрокаСФ=	ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСФ, Строка);
			
			СтрокаСФ.СтавкаНДС = ПолучитьПредставлениеСтавкиНДС(Строка.СтавкаНДС, Истина);
		КонецЦикла;
		
		Возврат  ТабличнаяЧасть;
		
	КонецФункции
	
	Функция ИнициализацияТаблицыСФ()
		
		ТаблицаСФ = Новый ТаблицаЗначений();
		
		ТаблицаСФ.Колонки.Добавить("Номенклатура");
		ТаблицаСФ.Колонки.Добавить("НоменклатураСсылка");
		ТаблицаСФ.Колонки.Добавить("СтранаПроисхождения");
		ТаблицаСФ.Колонки.Добавить("НомерГТД");
		ТаблицаСФ.Колонки.Добавить("Количество");
		ТаблицаСФ.Колонки.Добавить("ЕдиницаИзмерения");
		ТаблицаСФ.Колонки.Добавить("Цена");
		ТаблицаСФ.Колонки.Добавить("СтавкаНДС");
		ТаблицаСФ.Колонки.Добавить("СуммаНДС");
		ТаблицаСФ.Колонки.Добавить("Сумма");
		ТаблицаСФ.Колонки.Добавить("СуммаВключаетНДС");
		ТаблицаСФ.Колонки.Добавить("ЭтоУслуга", Новый ОписаниеТипов("Булево"));
		ТаблицаСФ.Колонки.Добавить("ДопИнфо");
		
		Возврат ТаблицаСФ;
		
	КонецФункции
	
//} ФОРМИРОВАНИЕ СФ НА ОСНОВАНИИ РТУ 

//мВалютаРегламентированногоУчета = константы.ВалютаРегламентированногоУчета.Получить();