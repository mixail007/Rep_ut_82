
Процедура ПеревыставлениеДокументовКомплекта(DocumentПар) Экспорт
	
	Document 	= DocumentПар;
	BoxId 		= Document.OrganizationId;
	DocumentId 	= Document.DocumentId;
	Направление = Document.Direction;
	
	ИнициализироватьФорму();
	
	Открыть();
	
КонецПроцедуры

Функция ИнициализироватьФорму()
	
	ДеревоДокументов.Очистить();
	Document = Document.Organization.GetDocumentByID(DocumentID);
	Модуль_РаботаССерверомДиадок.ПолучитьДеревоСвязейДокументов(Document, ДеревоДокументов, Истина);
	
	Если ДеревоДокументов.Количество() > 0 Тогда
		Продавец = Модуль_РаботаССерверомДиадок.ПредставлениеПродавца(ДеревоДокументов[0].ЭДОбъект);
		Покупатель = Модуль_РаботаССерверомДиадок.ПредставлениеПокупателя(ДеревоДокументов[0].ЭДОбъект);
		
		ПерваяСтрока = ДеревоДокументов[0];
		ОформлениеСтроки = ЭлементыФормы.ДеревоДокументов.ОформлениеСтроки(ПерваяСтрока);
		ПолучитьМодульПрог("Модуль_Логика_СверкаДанных").ОформитьСтрокуДанныхЭД(ОформлениеСтроки, Document);
		РасшифровкаОшибок = ПерваяСтрока.ТекстОшибки;
	Иначе
		РасшифровкаОшибок = "";
	КонецЕсли;
	
КонецФункции

Процедура ПриОткрытии()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	ЭтаФорма.Заголовок = "Перевыставление документов в "+НаименованиеСистемы;
	
КонецПроцедуры


//ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ДеревоДокументовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		РасшифровкаОшибок = Элемент.ТекущиеДанные.ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДеревоДокументовПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура ДеревоДокументовПередНачаломИзменения(Элемент, Отказ)
	
	КоманднаяПанель1ОткрытьДокумент1С("");
    Отказ = Истина;
	
КонецПроцедуры

Процедура ДеревоДокументовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура ДеревоДокументовПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПолучитьМодульПрог("Модуль_Логика_СверкаДанных").ОформитьСписокЭД(ОформленияСтрок);
	Для Каждого стр Из ОформленияСтрок Цикл
		текДанные = стр.ДанныеСтроки;
		Если текДанные.DocumentId = DocumentId Тогда
			стр.Шрифт = Новый Шрифт(стр.Шрифт,,, Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1Перевыставить(Кнопка)
	
	Если Элементыформы.ДеревоДокументов.ТекущиеДанные = Неопределено Тогда 
		Предупреждение("Выберите документ.",, НаименованиеСистемы);
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.ПервичныйДокумент) Тогда
		Предупреждение("Для перевыставления следует создать документ в 1С.",,НаименованиеСистемы);
		Возврат;
	КонецЕсли;
	
	ДокСсылка 				 = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.ПервичныйДокумент;
	ТипДокумента 			 = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.ТипДокумента;
	ПеревыставляемыйDocument = ЭлементыФормы.ДеревоДокументов.ТекущиеДанные.ЭДОбъект;
	
	Организация 			 = ДокСсылка.Организация;
	Контрагент				 = ДокСсылка.Контрагент;
	
	MyBoxId = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Организация_2_BoxID(Организация);
	
	Грузополучатель = Модуль_ИнтеграцияОбщий.ПолучитьГрузополучателяПоДокументу(ДокСсылка);
	Если ЗначениеЗаполнено(Грузополучатель) 
		И Грузополучатель.ИНН = Контрагент.ИНН
		И ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Контрагент_2_CounteragentBoxID(Грузополучатель, MyBoxId) <> Неопределено Тогда
		Получатель = Грузополучатель;
	Иначе
		Получатель = Контрагент;
	КонецЕсли;
	
	МассивДокументовПакета = Новый Массив;
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляОтправкиПакета();
							
	СтруктураПараметров.Вкл						= Истина;
	СтруктураПараметров.DocumentType 			= ПеревыставляемыйDocument.Type;
	СтруктураПараметров.ToDepartmentId 			= "";
	СтруктураПараметров.ВыгружатьExel 			= Ложь;
	СтруктураПараметров.CustomDocumentId		= "";
	
	СтруктураПараметров.Документ 				= ДокСсылка;
	СтруктураПараметров.ТипДокумента			= ТипДокумента;
	СтруктураПараметров.ЭтоТестовыйДокумент 	= Найти(ТипДокумента, "тест")>0;
	СтруктураПараметров.ТребуетсяНомерЗаказа	= Ложь;
	СтруктураПараметров.НомерЗаказа 			= "";
	СтруктураПараметров.ДопСведения 			= "";
	СтруктураПараметров.ВнешняяПечатнаяФорма	= Неопределено;
	
	Если ПеревыставляемыйDocument.Type = "UniversalTransferDocument" Тогда
		СтруктураПараметров.ФункцияУПД = ФункцияУПД(ТипДокументаУПД(ПеревыставляемыйDocument.Function));
	ИначеЕсли ПолучитьБазовыйТипAttachmentVersion(ПеревыставляемыйDocument.AttachmentVersion) = "UniversalTransferDocument" Тогда
		СтруктураПараметров.ФункцияУПД = ФункцияУПД(ТипДокументаУПД(ПеревыставляемыйDocument.GetContent().Function));
	КонецЕсли;
	
	СтруктураПараметров.Отправитель = Организация;
	СтруктураПараметров.Получатель  = Получатель;
	
	МассивДокументовПакета.Добавить(СтруктураПараметров);
	
	НоваяФорма = ПолучитьФорму("формаПечатногоДокумента", Этаформа, ДокСсылка);
	НоваяФорма.ЗакрыватьПриЗакрытииВладельца = Истина;
	НоваяФорма.СформироватьИПоказатьПечатнуюФорму(МассивДокументовПакета, MyBoxId, ПеревыставляемыйDocument);
				
КонецПроцедуры

Процедура КоманднаяПанель1ОткрытьДокумент1С(Кнопка)
	
	Если Элементыформы.ДеревоДокументов.ТекущиеДанные = Неопределено Тогда
		Предупреждение("Выберите документ.",, НаименованиеСистемы);
	Иначе 
		Если Элементыформы.ДеревоДокументов.текущиеданные.ПервичныйДокумент = Неопределено Тогда
			Предупреждение("Для перевыставления нужно создать документ в 1С.",, НаименованиеСистемы);
		Иначе
			Элементыформы.ДеревоДокументов.ТекущиеДанные.ПервичныйДокумент.Получитьформу().Открыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1Обновить(Кнопка)
	
	ДеревоДокументов.Очистить();
	ИнициализироватьФорму();
	
КонецПроцедуры


//ОБРАБОТКА ОПОВЕЩЕНИЯ

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если    ИмяСобытия = "ОбновитьСтроку" 
		ИЛИ ИмяСобытия = "ИзменениеДокумента1С" Тогда 
		
		// Параметр - ЭДОбъект
		МассивОформленийСтрок = Новый Массив();
		//подменим объект ЭД
		ОбновитьОбъектЭДО(ДеревоДокументов, МассивОформленийСтрок, Параметр);
		ДеревоДокументовПриПолученииДанных("", МассивОформленийСтрок);
		Если ЗначениеЗаполнено(Элементыформы.ДеревоДокументов.ТекущиеДанные) Тогда 
			РасшифровкаОшибок = Элементыформы.ДеревоДокументов.ТекущиеДанные.ТекстОшибки;
		КонецЕсли;	
		
	ИначеЕсли ИмяСобытия = "УдалениеДокументов" Тогда
		
		Если ЭтаФорма.Открыта() Тогда
			ЭтаФорма.Закрыть();
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ПеревыставлениеДокумента" Тогда
		
		//Параметр - Соответствие
		//в которой:	Ключ 	 - Ссылка на документ 1С
		//				Значение - Идентификатор документа в ДД
		Для Каждого ЭлементСоответствия из Параметр Цикл
			ОбновитьДанныеДокументаВДереве(ДеревоДокументов, ЭлементСоответствия.Ключ, ЭлементСоответствия.Значение);
		КонецЦикла;
				
		ДеревоДокументов.Очистить();
		ИнициализироватьФорму();
		
	КонецЕсли;
	
КонецПроцедуры


//ДОПОЛНИТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ОбновитьОбъектЭДО(КоллекцияСтрок,МассивОформленийСтрок, ЭДОбъект)
	
	Для каждого строка из КоллекцияСтрок Цикл 
		Если строка.BoxID = ЭДОБъект.OrganizationId И строка.DocumentID = ЭДОБъект.DocumentID Тогда
			строка.ЭДОбъект = ЭДОбъект;
			МассивОформленийСтрок.Добавить(Элементыформы.ДеревоДокументов.ОформлениеСтроки(строка));
			Модуль_РаботаССерверомДиадок.ЗаполнитьПараметрыДокументаВДереве(строка,ЭДОБъект);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура  ОбновитьДанныеДокументаВДереве(ДеревоДоков, ССылкаНаДокумент, ИдентификаторДокумента)
	
	//при перевыставлении документа меняется его ИД, нужно отразить это в метаданных
	Для каждого стр из ДеревоДоков Цикл 
		Если стр.ПервичныйДокумент = ССылкаНаДокумент Тогда 
			//Если документ "корневой" - то меняем ИД для него в корне 
			Если DocumentId = стр.DocumentId  Тогда 
				DocumentId = ИдентификаторДокумента;
			КонецЕсли;	
			стр.DocumentId = ИдентификаторДокумента;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
