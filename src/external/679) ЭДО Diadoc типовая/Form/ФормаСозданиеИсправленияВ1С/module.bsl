Перем ОснованиеКорректировкиПоступления, КорректировкаПоступления, ИсправленныйСчетФактура;


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ВСистемеРеализованыКорректировки() Тогда
		Предупреждение("В данной конфигурации нет возможности работать с корректировочными документами.
		|Выполнение данной операции невозможно.",,НаименованиеСистемы);
		Отказ= Истина;
	ИначеЕсли НЕ ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ВСистемеРеализованыКорректировкиПоступления() Тогда
		Предупреждение("В данной конфигурации нет возможности работы с входящими корректировочными документами.
		|Выполнение данной операции невозможно.",,НаименованиеСистемы);
		Отказ= Истина;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		НайтиОснованиеКорректировкиПоступления(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЗаполнитьНачальноеПредставлениеФормы();
	
	ОбновитьСсылки();
	
	УправлениеФормой();

КонецПроцедуры


Процедура ЗаполнитьНачальноеПредставлениеФормы()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	
	Если ЭДОбъект.Type = "InvoiceRevision" Тогда
		
		Заголовок = "Создание исправления счета-фактуры";
		Элементыформы.СопоставленныйДокумент.Заголовок	= "1. Корректировка поступления в 1С (Исправление):";
		Элементыформы.СопоставленныйДокумент1.Заголовок = "2. Исправление счета-фактуры в 1С:";
		
	ИначеЕсли ЭДОбъект.Type = "InvoiceCorrectionRevision" Тогда
		
		Заголовок = "Создание исправления корректировочного счета-фактуры";
		Элементыформы.СопоставленныйДокумент.Заголовок = "1. Корректировка поступления в 1С (Исправление):";
		Элементыформы.СопоставленныйДокумент1.Заголовок = "2. Исправление счета-фактуры в 1С:";
		
	ИначеЕсли ЭДОбъект.Type = "InvoiceCorrection" Тогда
		
		Заголовок = "Создание корректировочного счета-фактры";
		Элементыформы.СопоставленныйДокумент.Заголовок = "1. Корректировка поступления в 1С (Корректировка):";
		Элементыформы.СопоставленныйДокумент1.Заголовок = "2. Корректировочный счета-фактура в 1С:";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеФормой()
	
	Если НЕ ЗначениеЗаполнено(КорректировкаПоступления) Тогда
		
		ЭлементыФормы.КорректировкаПоступления.Заголовок= "Создать...";
		ЭлементыФормы.ИсправленныйСчетФактура.Заголовок=  "Создать...";
		
		ЭлементыФормы.КорректировкаПоступления.Доступность= Истина;
		ЭлементыФормы.ИсправленныйСчетФактура.Доступность=  Ложь;
		
		ЭлементыФормы.ИсправленныйСчетФактура.ЦветТекста=  WEBЦвета.Серый;
		ЭлементыФормы.ИсправленныйСчетФактура.Гиперссылка= Ложь;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(ИсправленныйСчетФактура) Тогда
		
		ЭлементыФормы.КорректировкаПоступления.Заголовок= КорректировкаПоступления;
		ЭлементыФормы.ИсправленныйСчетФактура.Заголовок=  "Создать...";
		
		ЭлементыФормы.КорректировкаПоступления.Доступность= Истина;
		ЭлементыФормы.ИсправленныйСчетФактура.Доступность=  Истина;
		
		ЭлементыФормы.ИсправленныйСчетФактура.ЦветТекста=  WEBЦвета.Синий;
		ЭлементыФормы.ИсправленныйСчетФактура.Гиперссылка= Истина;
		
	Иначе
		
		ЭлементыФормы.КорректировкаПоступления.Заголовок= КорректировкаПоступления;
		ЭлементыФормы.ИсправленныйСчетФактура.Заголовок=  ИсправленныйСчетФактура;
		
		ЭлементыФормы.КорректировкаПоступления.Доступность= Истина;
		ЭлементыФормы.ИсправленныйСчетФактура.Доступность=	Истина;
		
		ЭлементыФормы.ИсправленныйСчетФактура.ЦветТекста=  WEBЦвета.Синий;
		ЭлементыФормы.ИсправленныйСчетФактура.Гиперссылка= Истина;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбновитьСсылки()
	
	КорректировкаПоступления= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").DocumentID_2_ДопДокумент(ЭДОбъект.DocumentId, ЭДОбъект.OrganizationId);
	ИсправленныйСчетФактура=  ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").DocumentID_2_Документ(ЭДОбъект.DocumentId, ЭДОбъект.OrganizationId, ЭДОбъект);
	
КонецПроцедуры

Процедура ЗакрытьНажатие(Элемент)
	
	Закрыть();
	
КонецПроцедуры

Процедура ОткрытьКорректировкуПоступления(Элемент)
	
	Если ЗначениеЗаполнено(КорректировкаПоступления) Тогда
		КорректировкаПоступления.ПолучитьОбъект().ПолучитьФорму().Открыть();
		ОбновитьСсылки();
	Иначе
		
		ПоследняяКорректировка= ОснованиеКорректировкиПоступления;
		
		Если ЗначениеЗаполнено(ПоследняяКорректировка) Тогда
			
			Если ЭДОбъект.Type = "InvoiceRevision" ИЛИ ЭДОбъект.Type = "InvoiceCorrectionRevision" Тогда
				ПоследняяКорректировка=	Модуль_ИнтеграцияОбщий.ПолучитьПоследнююКорректировкуПоступления(ПоследняяКорректировка);  
			КонецЕсли;
			
		Иначе 
			ПоследняяКорректировка= Модуль_ИнтеграцияОбщий.получитьДокументОснованиеДляКорректировкиПоступления(ЭДОбъект);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПоследняяКорректировка) Тогда
			
			ИмяТипа= ПоследняяКорректировка.Метаданные().Имя;
			
			Если 	ИмяТипа = "ПоступлениеАвтомобилей"
				ИЛИ ИмяТипа = "КорректировкаПоступленияАвтомобилей" Тогда
				ВидКорректировки= "КорректировкаПоступленияАвтомобилей";
			Иначе
				ВидКорректировки= "КорректировкаПоступления";
			КонецЕсли;
			
		Иначе
			
			Предупреждение("Не найдено документа-основания для "+?(ЭДОбъект.Type = "InvoiceRevision", "исправления", "корректировки")+".
			|Необходимо указать его вручную",,НаименованиеСистемы);
			
			Если Метаданные.Документы.Найти("КорректировкаПоступленияАвтомобилей") <> Неопределено Тогда
				
				СписокВыбора= Новый СписокЗначений;
				СписокВыбора.Добавить(Метаданные.Документы.КорректировкаПоступления,,,БиблиотекаКартинок.Документ);
				СписокВыбора.Добавить(Метаданные.Документы.КорректировкаПоступленияАвтомобилей,,,БиблиотекаКартинок.Документ);
				
				РезультатВыбора= ВыбратьИзМеню(СписокВыбора, ЭлементыФормы.КорректировкаПоступления);
				
				Если РезультатВыбора = Неопределено Тогда
					Возврат;
				КонецЕсли;
				
				ВидКорректировки = РезультатВыбора.Значение.Имя;
				
			Иначе
				ВидКорректировки = "КорректировкаПоступления";
			КонецЕсли;
			
		КонецЕсли;
		
		КорректировкаОбъект = Документы[ВидКорректировки].СоздатьДокумент();
		
		Если КорректировкаОбъект.Метаданные().Реквизиты.Найти("ВидОперации") <> Неопределено Тогда
			
			Если ЭДОбъект.Type = "InvoiceRevision" ИЛИ ЭДОбъект.Type = "InvoiceCorrectionRevision" Тогда
				КорректировкаОбъект.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки;
			Иначе
				КорректировкаОбъект.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение;
			КонецЕсли;
			
		ИначеЕсли КорректировкаОбъект.Метаданные().Реквизиты.Найти("ХозОперация") <> Неопределено Тогда
			
			Если ЭДОбъект.Type = "InvoiceRevision" ИЛИ ЭДОбъект.Type = "InvoiceCorrectionRevision" Тогда
				
				Если ВидКорректировки = "КорректировкаПоступленияАвтомобилей" Тогда
					КорректировкаОбъект.ХозОперация = Справочники.ХозОперации.КорректировкаПоступленияАвтомобилейИсправлениеВПервичныхДокументах;
				Иначе
					КорректировкаОбъект.ХозОперация = Справочники.ХозОперации.КорректировкаПоступленияИсправлениеВПервичныхДокументах;
				КонецЕсли;
				
			Иначе
				
				Если ВидКорректировки = "КорректировкаПоступленияАвтомобилей" Тогда
					КорректировкаОбъект.ХозОперация = Справочники.ХозОперации.КорректировкаПоступленияАвтомобилейКорректировкаПоСогласованиюСторон;
				Иначе
					КорректировкаОбъект.ХозОперация = Справочники.ХозОперации.КорректировкаПоступленияКорректировкаПоСогласованиюСторон;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПоследняяКорректировка) Тогда
			КорректировкаОбъект.Заполнить(ПоследняяКорректировка);
		КонецЕсли;
		
		ФормаНовогоДокумента= КорректировкаОбъект.ПолучитьФорму();
		
		Если ЗначениеЗаполнено(ПоследняяКорректировка) Тогда
			ФормаНовогоДокумента.ПараметрОснование= ПоследняяКорректировка; 
		КонецЕсли;
		
		ФормаНовогоДокумента.ОткрытьМодально();
		
		Если НЕ КорректировкаОбъект.ЭтоНовый() Тогда
			
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_DocumentID_Для_ДопДокумент(КорректировкаОбъект.Ссылка, ЭДОбъект.DocumentId, ЭДОбъект.OrganizationId);
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Ссылка
			|ИЗ
			|	Документ.СчетФактураПолученный
			|ГДЕ
			|	ДокументОснование = &ДокументОснование");
			
			Запрос.УстановитьПараметр("ДокументОснование", КорректировкаОбъект.Ссылка);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_DocumentID_Для_Документ(Выборка.Ссылка, ЭДОбъект.DocumentId, ЭДОбъект.OrganizationId);
			КонецЕсли;
			
		КонецЕсли;
		
		ОбновитьСсылки();
		УправлениеФормой();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьСчетФактуру(Элемент)
	
	Если ЗначениеЗаполнено(ИсправленныйСчетФактура) Тогда
		ИсправленныйСчетФактура.ПолучитьОбъект().ПолучитьФорму(, ЭтаФорма).Открыть();
	Иначе
		
		СчетФактураОбъект= СоздатьСчетФактуру();
		
		ЗаполнитьЗначенияСвойств(СчетФактураОбъект, ДанныеШапкиНовогоСчетаФактуры());
		
		МетаданныеСчетаФактуры= СчетФактураОбъект.Метаданные();
		
		Если МетаданныеСчетаФактуры.Реквизиты.Найти("КодВидаОперации") <> Неопределено Тогда
			СчетФактураОбъект.КодВидаОперации = "01"
		КонецЕсли;
		
		Если МетаданныеСчетаФактуры.Реквизиты.Найти("КодСпособаПолучения") <> Неопределено Тогда
			СчетФактураОбъект.КодСпособаПолучения = 2
		КонецЕсли;
		
		Если ЭДОбъект.Type = "InvoiceRevision" Тогда
			
			Если МетаданныеСчетаФактуры.Реквизиты.Найти("УчитыватьИсправлениеИсходногоДокумента") <> Неопределено Тогда
				СчетФактураОбъект.НомерИсходногоДокумента= ЭДОбъект.OriginalDocumentNumber;
				СчетФактураОбъект.ДатаИсходногоДокумента=  ЭДОбъект.OriginalDocumentDate;
			Иначе 
				Если СчетФактураОбъект.ДокументыОснования.Количество() > 0 Тогда
					СчетФактураОбъект.ДокументыОснования[0].НомерИсходногоДокумента= ЭДОбъект.OriginalDocumentNumber;
					СчетФактураОбъект.ДокументыОснования[0].ДатаИсходногоДокумента=	 ЭДОбъект.OriginalDocumentDate;
				КонецЕсли;
			КонецЕсли;

		ИначеЕсли ЭДОбъект.Type = "InvoiceCorrectionRevision" Тогда
			
			Если МетаданныеСчетаФактуры.Реквизиты.Найти("УчитыватьИсправлениеИсходногоДокумента")<>Неопределено Тогда
				
				СчетФактураОбъект.УчитыватьИсправлениеИсходногоДокумента=	Истина;
				СчетФактураОбъект.НомерИсправленияИсходногоДокумента=		ЭДОбъект.OriginalInvoiceRevisionNumber;
				СчетФактураОбъект.ДатаИсправленияИсходногоДокумента=		ЭДОбъект.OriginalInvoiceRevisionDate;
				СчетФактураОбъект.НомерИсходногоДокумента=					ЭДОбъект.OriginalDocumentNumber;
				СчетФактураОбъект.ДатаИсходногоДокумента=					ЭДОбъект.OriginalDocumentDate;
				
			ИначеЕсли СчетФактураОбъект.ДокументыОснования.Количество() > 0 Тогда 
				
				СчетФактураОбъект.ДокументыОснования[0].УчитыватьИсправлениеИсходногоДокумента=	Истина;
				СчетФактураОбъект.ДокументыОснования[0].НомерИсправленияИсходногоДокумента=		ЭДОбъект.OriginalInvoiceRevisionNumber;
				СчетФактураОбъект.ДокументыОснования[0].ДатаИсправленияИсходногоДокумента=		ЭДОбъект.OriginalInvoiceRevisionDate;
				СчетФактураОбъект.ДокументыОснования[0].НомерИсходногоДокумента=				ЭДОбъект.OriginalDocumentNumber;
				СчетФактураОбъект.ДокументыОснования[0].ДатаИсходногоДокумента=					ЭДОбъект.OriginalDocumentDate;
				
			КонецЕсли;
			
		КонецЕсли;
			
		ФормаСФ= СчетФактураОбъект.ПолучитьФорму();
		Если ИмяФормыПрикладногорешенияДляИнтеграцииДиадок() = "Модуль_ИнтеграцияАльфаАвто41" Тогда
			ФормаСФ.ПараметрОснование= КорректировкаПоступления;
		КонецЕсли;
		
		ФормаСФ.ОткрытьМодально();
		
		Если НЕ СчетФактураОбъект.ЭтоНовый() Тогда
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_DocumentID_Для_Документ(СчетФактураОбъект.Ссылка, ЭДОбъект.DocumentId, ЭДОбъект.OrganizationID);
		КонецЕсли;
		
		ОбновитьСсылки();
		УправлениеФормой();
		
	КонецЕсли;
	
КонецПроцедуры


Функция СоздатьСчетФактуру()
	
	Перем СчетФактураОбъект;
	
	Если ИмяФормыПрикладногорешенияДляИнтеграцииДиадок() = "Модуль_ИнтеграцияАльфаАвто41" Тогда
		
		МассивВидов=		Новый Массив(1);
		МассивВидов[0]=		"СчетФактураПолученный";
		МассивПодчиненных=	Вычислить("дкПолучитьМассивПодчиненных(КорректировкаПоступления, МассивВидов, Истина)");
		Если МассивПодчиненных <> Неопределено И МассивПодчиненных.Количество() > 0 Тогда
			СчетФактураОбъект= МассивПодчиненных[0].Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
	КонецЕсли;
	
	Если СчетФактураОбъект = Неопределено Тогда
		СчетФактураОбъект= Документы.СчетФактураПолученный.СоздатьДокумент();
		СчетФактураОбъект.Заполнить(КорректировкаПоступления);
	КонецЕсли;
	
	Возврат СчетФактураОбъект;
	
КонецФункции

Процедура НайтиОснованиеКорректировкиПоступления(Отказ)
	
	Если ЭДОбъект.Type = "InvoiceCorrection" Тогда
		
		ЭДОбъект_OriginalInvoices= Новый ТаблицаЗначений;
		ЭДОбъект_OriginalInvoices.Колонки.Добавить("Date");
		ЭДОбъект_OriginalInvoices.Колонки.Добавить("Number");
		
		ВГраница= DocumentContent.OriginalInvoices.Count-1;
		Для ИндексЦикла=0 ПО ВГраница Цикл
			ЗаполнитьЗначенияСвойств(ЭДОбъект_OriginalInvoices.Добавить(), DocumentContent.OriginalInvoices.GetItem(ИндексЦикла));
		КонецЦикла;
		
		ЭДОбъект_OriginalInvoices.Индексы.Добавить("Date, Number");

	КонецЕсли;
	
	СоответствиеДокументов=	Новый Соответствие;
	
	ВГраница= ЭДОбъект.InitialDocumentIds.Count-1;
	Для ИндексЦикла= 0 ПО ВГраница Цикл 
		
		DocumentОснование= Модуль_РаботаССерверомДиадок.ПолучитьОбъектДиадок(ЭДОбъект.InitialDocumentIds.GetItem(ИндексЦикла), ЭДОбъект.Organization, СоответствиеДокументов);
		
		Если DocumentОснование = Неопределено Тогда
			
			Предупреждение("Документ-основание не найден." + Символы.ПС + Модуль_РаботаССерверомДиадок.ПредставлениеЭД(ЭДОбъект));
			
			Отказ= Истина;
			
		ИначеЕсли ЛЕВ(DocumentОснование.Type, 7) = "Invoice" Тогда
			
			// В коллекции InitialDocumentIds могут находится счета-фактуры, которые не являются основанием корректировки.
			// Так происходит если корректировка была передана в составе пакета, с очередной порцией счетов-фактур и накладных.
			Если  ЭДОбъект_OriginalInvoices <> Неопределено
				И ЭДОбъект_OriginalInvoices.НайтиСтроки(Новый Структура("Date, Number", DocumentОснование.DocumentDate, DocumentОснование.DocumentNumber)).Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СчетФактураОснование= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").DocumentID_2_Документ(DocumentОснование.DocumentId, DocumentОснование.OrganizationId, DocumentОснование);
			
			Если НЕ ЗначениеЗаполнено(СчетФактураОснование) Тогда
				Предупреждение("Перед этим действием создайте документ в 1С." + Символы.ПС + Модуль_РаботаССерверомДиадок.ПредставлениеЭД(DocumentОснование));
				Отказ= Истина;
			Иначе
				ОснованиеКорректировкиПоступления = СчетФактураОснование.ДокументОснование;
			КонецЕсли;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеШапкиНовогоСчетаФактуры()
	
	ДанныеШапки= Новый Структура;
	
	Если ЭДОбъект.Type = "InvoiceRevision" Тогда
		
		ДанныеШапки.Вставить("ДатаВходящегоДокумента" , ЭДОбъект.OriginalDocumentDate);
		ДанныеШапки.Вставить("НомерВходящегоДокумента", ЭДОбъект.OriginalDocumentNumber);
		ДанныеШапки.Вставить("ВхДокДата"			  , ДанныеШапки.ДатаВходящегоДокумента);
		ДанныеШапки.Вставить("ВхДокНомер"			  , ДанныеШапки.НомерВходящегоДокумента);
		
		ДанныеШапки.Вставить("ДатаИсправления" 		  , ЭДОбъект.DocumentDate);
		ДанныеШапки.Вставить("НомерИсправления"		  , ЭДОбъект.DocumentNumber);
		
		ДанныеШапки.Вставить("Исправление"			  , Истина);
		
	ИначеЕсли ЭДОбъект.Type = "InvoiceCorrection" Тогда
		
		ДанныеШапки.Вставить("ДатаВходящегоДокумента" , ЭДОбъект.DocumentDate);
		ДанныеШапки.Вставить("НомерВходящегоДокумента", ЭДОбъект.DocumentNumber);
		ДанныеШапки.Вставить("ВхДокДата"			  , ДанныеШапки.ДатаВходящегоДокумента);
		ДанныеШапки.Вставить("ВхДокНомер"			  , ДанныеШапки.НомерВходящегоДокумента);
		
	ИначеЕсли ЭДОбъект.Type = "InvoiceCorrectionRevision" Тогда
		
		ДанныеШапки.Вставить("ДатаВходящегоДокумента" , ЭДОбъект.OriginalInvoiceCorrectionDate);
		ДанныеШапки.Вставить("НомерВходящегоДокумента", ЭДОбъект.OriginalInvoiceCorrectionNumber);
		ДанныеШапки.Вставить("ВхДокДата"			  , ДанныеШапки.ДатаВходящегоДокумента);
		ДанныеШапки.Вставить("ВхДокНомер"			  , ДанныеШапки.НомерВходящегоДокумента);
		
		ДанныеШапки.Вставить("ДатаИсправления" 		  , ЭДОбъект.DocumentDate);
		ДанныеШапки.Вставить("НомерИсправления"		  , ЭДОбъект.DocumentNumber);
		
		ДанныеШапки.Вставить("ДатаИсправляемогоКорректировочногоДокумента" , ЭДОбъект.OriginalInvoiceCorrectionDate);
		ДанныеШапки.Вставить("НомерИсправляемогоКорректировочногоДокумента", ЭДОбъект.OriginalInvoiceCorrectionNumber);
		
		ДанныеШапки.Вставить("Исправление"			  , Истина);
		
	КонецЕсли;
	
	Возврат ДанныеШапки;
		
КонецФункции


Процедура ЗаполнитьТекстПроСчетФактуру() Экспорт
	
	// Заглушка для УТ
	
КонецПроцедуры
