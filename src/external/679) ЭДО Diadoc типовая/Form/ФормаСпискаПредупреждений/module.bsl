Перем СхемаКомпоновкиДанных, ДанныеРасшифровки, ЭДОбъекты;

Процедура ПриОткрытии()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("СКД_Отчет_МассоваяОбработкаДокументов_СписокПредупреждений");

	Для Каждого ВариантНастройки ИЗ СхемаКомпоновкиДанных.ВариантыНастроек Цикл
		
		ЭлементыФормы.ВариантНастройки.СписокВыбора.Добавить(ВариантНастройки.Имя, ВариантНастройки.Представление);
		
	КонецЦикла;
	
	ВариантНастройки= СхемаКомпоновкиДанных.ВариантыНастроек[0].Имя;
	
	ИнициализироватьЭДОбъекты();
	
	ЗаполнитьТабличныйДокумент();
	
КонецПроцедуры


Процедура ЗаполнитьТабличныйДокумент() Экспорт
	
	ЭлементыФормы.ТабличныйДокумент.Очистить();
	
	КомпоновщикМакета= Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, СхемаКомпоновкиДанных.ВариантыНастроек[ВариантНастройки].Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных= Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, Новый Структура("ТаблицаПредупреждений", ТаблицаПредупреждений), ДанныеРасшифровки, Истина);
	
	ПроцессорВывода= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент ;
	ПроцессорВывода.УстановитьДокумент(ЭлементыФормы.ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
	
	Открыть();
		
КонецПроцедуры

Процедура ИнициализироватьЭДОбъекты()
	
	ЭДОбъекты= Новый Соответствие;
	
	Для Каждого СтрокаТаблицы ИЗ ТаблицаПредупреждений Цикл
		Если СтрокаТаблицы.ЭДОбъект <> Неопределено Тогда
			ЭДОбъекты.Вставить(СтрокаТаблицы.BoxIDDocumentId, СтрокаТаблицы.ЭДОбъект);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка= Ложь;
	
	СписокПолей= Новый Структура;
	
	ПолучитьЗначениеПоля (СписокПолей, ДанныеРасшифровки.Элементы[Расшифровка]);
	ПолучитьЗначенияПолей(СписокПолей, ДанныеРасшифровки.Элементы, Расшифровка);
	
	ПоказатьКонтекстноеМеню(СписокПолей, Элемент);
	
КонецПроцедуры

Процедура ПоказатьКонтекстноеМеню(СписокПолей, Элемент)
	
	СписокВыбора= Новый СписокЗначений;
	
	Если  СписокПолей.Свойство("BoxIDDocumentId") И ЗначениеЗаполнено(СписокПолей.BoxIDDocumentId)
		И СписокПолей.Свойство("ТипДокумента") 	  И ЗначениеЗаполнено(СписокПолей.ТипДокумента)
		И СписокПолей.Свойство("Дата") 			  И ЗначениеЗаполнено(СписокПолей.Дата)
		И СписокПолей.Свойство("Номер") 		  И ЗначениеЗаполнено(СписокПолей.Номер)
	Тогда
		СписокВыбора.Добавить(Новый Структура("Действие, BoxIDDocumentId", "ОткрытьКарточкуДокумента", СписокПолей.BoxIDDocumentId), "Карточка """ + СписокПолей.ТипДокумента + " №" + СписокПолей.Номер + " от " + Формат(СписокПолей.Дата, "ДФ=dd.MM.yyyy") + """",,БиблиотекаКартинок.Лупа);
	КонецЕсли;
	
	Если  СписокПолей.Свойство("КлючОшибки") 	  И СписокПолей.КлючОшибки = "НеСопоставленКонтрагент"
		И СписокПолей.Свойство("BoxIDDocumentId") И ЗначениеЗаполнено(СписокПолей.BoxIDDocumentId)
		И СписокПолей.Свойство("Продавец") 	  	  И ЗначениеЗаполнено(СписокПолей.Продавец)
		И СписокПолей.Свойство("Организация") 	  И ЗначениеЗаполнено(СписокПолей.Организация)
	Тогда
		СписокВыбора.Добавить(Новый Структура("Действие, BoxIDDocumentId, Организация", "ОткрытьКарточкуКонтрагента", СписокПолей.BoxIDDocumentId, СписокПолей.Организация), "Карточка """ + СписокПолей.Продавец + """",,БиблиотекаКартинок.Лупа);
	КонецЕсли;
	
	Если СписокПолей.Свойство("ПервичныйДокумент") И ЗначениеЗаполнено(СписокПолей.ПервичныйДокумент) Тогда
		СписокВыбора.Добавить(Новый Структура("Действие, ПервичныйДокумент", "ОткрытьДокумент1С", СписокПолей.ПервичныйДокумент), СписокПолей.ПервичныйДокумент,,БиблиотекаКартинок.Документ);
	КонецЕсли;
	
	РезультатВыбора= ВыбратьИзМеню(СписокВыбора, Элемент);
	
	Если РезультатВыбора <> Неопределено Тогда
		ВыполнитьДействие(РезультатВыбора.Значение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьДействие(СтруктураДействия)
	
	Если СтруктураДействия.Действие = "ОткрытьКарточкуДокумента" Тогда
		
		ЭДОбъект= ЭДОбъекты[СтруктураДействия.BoxIDDocumentId];
		
		Если ЭДОбъект <> Неопределено Тогда
			ПолучитьФорму("Модуль_Логика_ПоведениеФорм").ОткрытьКарточкуДокументаДД(ЭДОбъект, ЭтаФорма);
		КонецЕсли;
		
	ИначеЕсли СтруктураДействия.Действие = "ОткрытьДокумент1С" Тогда
		
		СтруктураДействия.ПервичныйДокумент.ПолучитьФорму().Открыть();
		
	ИначеЕсли СтруктураДействия.Действие = "ОткрытьКарточкуКонтрагента" Тогда
		
		ЭДОбъект= ЭДОбъекты[СтруктураДействия.BoxIDDocumentId];
		
		Если ЭДОбъект <> Неопределено Тогда
			
			Organization= Модуль_РаботаССерверомДиадок.ПолучитьЯщикДиадокДляОрганизации(СтруктураДействия.Организация);
			
			ПолучитьФорму("ФормаКарточкаКонтрагента", ЭтаФорма, Organization.Id + ЭДОбъект.Counteragent.Id).ОткрытьКарточку(Organization.GetCounteragentById(ЭДОбъект.Counteragent.Id), СтруктураДействия.Организация);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры



// Получает значения всех вышестоящих группировок
//
// Параметры:
//		СписокПолей - Структура - Ключ имя поля, значение - значение группировочного поля отчета - параметр в который будет помещен список найденных значений
//		КоллекцияЭлементов - ЭлементыРасшифровкиКомпоновкиДанных - коллекция элементов расшифровки отчета (ДанныеРасшифровки.Элементы)
//		Идентификатор - ИдентификаторРасшифровкиКомпоновкиДанных - идентификатор расшифровываемого поля
//
Процедура ПолучитьЗначенияПолей(СписокПолей, КоллекцияЭлементов, Идентификатор)
	
	Для Каждого Родитель Из  КоллекцияЭлементов[Идентификатор].ПолучитьРодителей() Цикл
		ПолучитьЗначенияПолей(СписокПолей, КоллекцияЭлементов, Родитель.Идентификатор);
		ПолучитьЗначениеПоля(СписокПолей, Родитель);
	КонецЦикла;
	
КонецПроцедуры

// Получает значения полей текущего элемента расшифровки
//
// Параметры:
//		СписокПолей - Структура - Ключ имя поля, значение - значение группировочного поля отчета - параметр в который будет помещен список найденных значений
//		ВыбранноеПоле - ЭлементРасшифровкиКомпоновкиДанныхПоля - элемент расшифровки поля которого необходимо получить
//
Процедура ПолучитьЗначениеПоля(СписокПолей, ВыбранноеПоле)
	
	Если ТипЗнч(ВыбранноеПоле) <> Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") тогда
		Для Каждого Поле из ВыбранноеПоле.ПолучитьПоля() Цикл
			Если ТипЗнч(Поле) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") Тогда
				СписокПолей.Вставить(СтрЗаменить(Поле.Поле,".",""), Поле.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВариантНастройкиПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ВариантНастройки) Тогда
		ВариантНастройки= Элемент.СписокВыбора[0].Значение;
	КонецЕсли;
	
	ЗаполнитьТабличныйДокумент();
	
КонецПроцедуры

