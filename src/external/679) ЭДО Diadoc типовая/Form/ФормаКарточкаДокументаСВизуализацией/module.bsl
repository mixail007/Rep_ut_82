Перем ВерсияДанныхСсылкаНаОбъект, ФормаОткрытогоДокумента1С;

//{ СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

	Процедура ОбновитьДействияПоДокументу()
		ЭтаФорма.Заголовок = Модуль_РаботаССерверомДиадок.ПредставлениеЭД(ЭДОбъект);
		ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").НастроитьКоманднуюПанельКарточкиДокумента(ЭДОбъект, ЭтаФорма);
	КонецПроцедуры
	
	Процедура ОбновитьВизуализациюДокумента()
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Модуль_РаботаССерверомДиадок.ПолучитьСтруктуруПредставленияЭД(ЭДОбъект));
		
		Если ЛЕВ(ЭДОбъект.Type, 7) = "Invoice" Тогда
			Заголовок = Заголовок + " (дата выставления " + Формат(ЭДОбъект.ConfirmationDate, "ДФ=dd.MM.yyyy") + ")";
		КонецЕсли;
		
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельПредупрежденияОСтаромФормате,
		?(ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ПредупреждатьОСтаромФормате(ЭДОбъект, DocumentContent), РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Право));
		
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельДокументЗашифрован,
		?(ЭДОбъект.IsEncryptedContent, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Лево));
		
		ЗаполнитьПолеВыводаНакладной();
		
	КонецПроцедуры
	
	Процедура ЗаполнитьПолеВыводаНакладной()
		
		Таб = СформироватьПечатнуюФормуПоДокументуДиадока();
		
		Элементыформы.ПолеВыводаНакладной.Очистить();
		
		Если Таб <> Неопределено Тогда
			
			ЗаполнитьЗначенияСвойств(Элементыформы.ПолеВыводаНакладной, Таб, "КлючПараметровПечати, ОриентацияСтраницы, АвтоМасштаб, МасштабПечати, ПолеСверху, ПолеСлева, ПолеСнизу, ПолеСправа, РазмерКолонтитулаСверху, РазмерКолонтитулаСнизу");
			
			Элементыформы.ПолеВыводаНакладной.Вывести(Таб);
			
		КонецЕсли;
		
	КонецПроцедуры
	
	Функция	СформироватьПечатнуюФормуПоДокументуДиадока()
		
		Модуль_Диадок_РаботаСКонтентом = ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом");
		
		ПараметрыПФ = Новый Структура;
		ПараметрыПФ.Вставить("ТипДокумента", ЭДОбъект.Type);
		ПараметрыПФ.Вставить("ТипКонтента" , ПолучитьТипКонтента(ЭДОбъект.AttachmentVersion, ЭДОбъект.Type));
		ПараметрыПФ.Вставить("ПоказатьДопСведения", Модуль_Диадок_РаботаСКонтентом.ВизуализироватьДопПоля(ЭДОбъект));
		
		Если ПараметрыПФ.ТипКонтента = "UtdSellerContent" Тогда
			
			ПараметрыПФ.Вставить("Content", Модуль_Диадок_РаботаСКонтентом.Новый_UtdSellerContent());
			
		ИначеЕсли ПараметрыПФ.ТипКонтента = "UcdSellerContent" Тогда
			
			ПараметрыПФ.Вставить("Content", Модуль_Диадок_РаботаСКонтентом.Новый_UcdSellerContent());
			
		ИначеЕсли ПараметрыПФ.ТипКонтента = "Torg12SellerContent" Тогда
			
			ПараметрыПФ.Вставить("Content", Модуль_Диадок_РаботаСКонтентом.Новый_Torg12SellerContent());
			
		ИначеЕсли ПараметрыПФ.ТипКонтента = "AcceptanceCertificateSellerContent" Тогда
			
			ПараметрыПФ.Вставить("Content", Модуль_Диадок_РаботаСКонтентом.Новый_AcceptanceCertificateSellerContent());
			
		ИначеЕсли ПараметрыПФ.ТипКонтента = "InvoiceContent" Тогда
			
			ПараметрыПФ.Вставить("Content", Модуль_Диадок_РаботаСКонтентом.Новый_InvoiceContent());
			
		ИначеЕсли ПараметрыПФ.ТипКонтента = "InvoiceCorrectionContent" Тогда
			
			ПараметрыПФ.Вставить("Content", Модуль_Диадок_РаботаСКонтентом.Новый_InvoiceCorrectionContent());
			
		КонецЕсли;
		
		Если НЕ ПараметрыПФ.Свойство("Content") Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Content = ЭДОбъект.GetContent();
		Модуль_Диадок_РаботаСКонтентом.ЗаполнитьСтруктуруПоКонтенту(Content, ПараметрыПФ.Content);
		
		Если ПараметрыПФ.ТипДокумента = "UniversalTransferDocument" Тогда
			
			ПараметрыПФ.Вставить("BuyerContent", Модуль_Диадок_РаботаСКонтентом.Новый_UtdBuyerContent());
			
		ИначеЕсли ПараметрыПФ.ТипДокумента = "UniversalCorrectionDocument" Тогда
			
			ПараметрыПФ.Вставить("BuyerContent", Модуль_Диадок_РаботаСКонтентом.Новый_UcdBuyerContent());
			
		ИначеЕсли ПараметрыПФ.ТипДокумента = "XmlTorg12" Тогда
			
			Если ПараметрыПФ.ТипКонтента = "UtdSellerContent" Тогда
				ПараметрыПФ.Вставить("BuyerContent", Модуль_Диадок_РаботаСКонтентом.Новый_UtdBuyerContent());
			Иначе
				ПараметрыПФ.Вставить("BuyerContent", Модуль_Диадок_РаботаСКонтентом.Новый_Torg12BuyerContent());
			КонецЕсли;
			
		ИначеЕсли ПараметрыПФ.ТипДокумента = "XmlAcceptanceCertificate" Тогда
			
			Если ПараметрыПФ.ТипКонтента = "UtdSellerContent" Тогда
				ПараметрыПФ.Вставить("BuyerContent", Модуль_Диадок_РаботаСКонтентом.Новый_UtdBuyerContent());
			Иначе
				ПараметрыПФ.Вставить("BuyerContent", Модуль_Диадок_РаботаСКонтентом.Новый_AcceptanceCertificateBuyerContent());
			КонецЕсли;
			
		КонецЕсли;
		
		Если ПараметрыПФ.Свойство("BuyerContent") Тогда
			
			BuyerContent = ЭДОбъект.GetBuyerContent();
			
			Если BuyerContent <> Неопределено Тогда
				Модуль_Диадок_РаботаСКонтентом.ЗаполнитьСтруктуруПоКонтенту(BuyerContent, ПараметрыПФ.BuyerContent);
			КонецЕсли;
			
		КонецЕсли;
		
		ПараметрыПФ.Вставить("ДанныеШтампа", Модуль_Диадок_РаботаСКонтентом.СформироватьДанныеОПодписях(ЭДОбъект, ПараметрыПФ));
		
		Возврат Модуль_РаботаСКонтентом.СформироватьПечатнуюФорму(ПараметрыПФ);
		
	КонецФункции
	
	
	Процедура ОбновитьЭДОбъект()
		
		ЭДОбъект = Модуль_РаботаССерверомДиадок.ОбновитьЭДоОбъектДиадока(ЭДОбъект, ЭтаФорма);
		
	КонецПроцедуры
	
	Процедура ОбновитьСопоставленныйДокумент(ОбновитьДействия=Истина)
		
		ТекущийТекстОшибки =  ТекстОшибки;
		
		РезультатПредставления 			= ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ПолучитьПредставлениеСсылкиНаДокумент(СсылкаНаОбъект, ЭДОбъект);
		СсылкаНаДокументПредставление 	= РезультатПредставления.СсылкаНаДокументПредставление;
		ДокументОснованиеДляСозданияСФ 	= РезультатПредставления.ДокументОснованиеДляСозданияСФ;
		СпособСоздания 					= РезультатПредставления.СпособСоздания;
		
		МассивОшибок= 	ПолучитьМодульПрог("Модуль_Логика_СверкаДанных").ПолучитьМассивОшибокУчета(ЭДОбъект, СсылкаНаОбъект);
		ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").НастроитьПанельТекстОшибок(массивОшибок, ЭтаФорма); 
		
		Если ОбновитьДействия = Истина Тогда
			ОбновитьДействияПоДокументу();
		КонецЕсли;	
		
		Если НЕ ТекстОшибки = ТекущийТекстОшибки Тогда
			Оповестить("ИзменениеДокумента1С", ЭДОбъект, ЭтаФорма);
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура ПриОткрытии()
		
		СсылкаНаОбъект  =  ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").DocumentID_2_Документ(ЭДОбъект.DocumentId, ЭДОбъект.Organizationid, ЭДОбъект);
		
		КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Диадок.Текст = НаименованиеСистемы;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Диадок.Картинка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Диадок.Отображение = ?(ИспользоватьИконкуСистемы, ОтображениеКнопкиКоманднойПанели.НадписьКартинка, ОтображениеКнопкиКоманднойПанели.Надпись);
		ЭлементыФормы.КоманднаяПанель.Кнопки.Диадок.кнопки.перейтиВДиадок.текст = "Перейти в "+НаименованиеСистемы;
		
		
		ЭлементыФормы.СсылкаНаДокументПредставление.Видимость=
		ЭДОбъект.Type <> "UniversalCorrectionDocument"
		И (ЗначениеЗаполнено(СсылкаНаОбъект)
		ИЛИ ЭДОбъект.Type <> "UniversalTransferDocument"
		ИЛИ ЭДОбъект.Direction = "Inbound");
		
		ЭлементыФормы.НадписьСсылкаНаДокументПредставление.Видимость= ЭлементыФормы.СсылкаНаДокументПредставление.Видимость;
		
		ОбновитьЭДОбъект();
		ОбновитьДействияПоДокументу();
		ОбновитьВизуализациюДокумента();
		ОбновитьСопоставленныйДокумент(Ложь);
		
		ОбработкаСобытияПодключаемогоМодуля("ПриОткрытииФормы", Новый Структура("Форма, ИмяФормы", ЭтаФорма, "ФормаКарточкаДокументаСВизуализацией"));
		
	КонецПроцедуры
	
	Процедура ОбработчикАвтообновления()
		
		Если ВерсияДанныхСсылкаНаОбъект <> ФормаОткрытогоДокумента1С.ВерсияДанных Тогда
			ОбновитьСопоставленныйДокумент();
			Оповестить("ОбновитьСтроку", ЭДОбъект, ЭтаФорма);
			ВерсияДанныхСсылкаНаОбъект = ФормаОткрытогоДокумента1С.ВерсияДанных;
		КонецЕсли;
		Если Не ФормаОткрытогоДокумента1С.Открыта() Тогда
			ОтключитьОбработчикОжидания("ОбработчикАвтообновления");
			ФормаОткрытогоДокумента1С = Неопределено;
		КонецЕсли;
		
	КонецПроцедуры
	
//} СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//{ ДЕЙСТВИЯ ФОРМЫ
	
	Процедура ВыполнитьДействиеНадДокументом(ИдентификаторДействия, СписокОперацийПослеОбработки)
		
		Попытка 
			Если ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ВыполнитьДействиеНадДокументом(ЭДОбъект, ИдентификаторДействия, ЭтаФорма.Заголовок) = Истина Тогда 
				Если СписокОперацийПослеОбработки.Свойство("ОбновитьЭДОбъект") = Истина Тогда  
					ОбновитьЭДОбъект();
				КонецЕсли;	
				Если СписокОперацийПослеОбработки.Свойство("ОбновитьДействияПоДокументу") = Истина Тогда  
					ОбновитьДействияПоДокументу();
				КонецЕсли;	
				Если СписокОперацийПослеОбработки.Свойство("ОбновитьВизуализациюДокумента") = Истина Тогда  
					ОбновитьВизуализациюДокумента();
				КонецЕсли;
				Если СписокОперацийПослеОбработки.Свойство("ОбновитьСопоставленныйДокумент") = Истина Тогда  
					ОбновитьСопоставленныйДокумент();
					Оповестить("ОбновитьСтроку", ЭДОбъект, ЭтаФорма);
				КонецЕсли;
			КонецЕсли
		Исключение 
			ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").СообщениеОбОшибкеДиадок(ОписаниеОшибки(), ИдентификаторДействия);
		КонецПопытки;
		
	КонецПроцедуры	
	
	Процедура АннулироватьДокумент()
		ВыполнитьДействиеНадДокументом("АннулироватьДокумент", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу", Истина, Истина));
	КонецПроцедуры
	
	Процедура ОтказатьВАннулировании()
		ВыполнитьДействиеНадДокументом("ОтказатьВАннулировании", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу", Истина, Истина));
	КонецПроцедуры
	
	Процедура ОтправитьЗапросНаАннулирование()
		ВыполнитьДействиеНадДокументом("ОтправитьЗапросНаАннулирование", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу", Истина, Истина));
	КонецПроцедуры
	
	Процедура ПодписатьДокумент()
		ВыполнитьДействиеНадДокументом("ПодписатьДокумент", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу, ОбновитьВизуализациюДокумента", Истина, Истина, Истина));
	КонецПроцедуры
	
	Процедура ПодписатьЗапрошенныйДокумент()		
		ВыполнитьДействиеНадДокументом("ПодписатьЗапрошенныйДокумент", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу, ОбновитьВизуализациюДокумента", Истина, Истина, Истина));		
	КонецПроцедуры
	
	Процедура ОтказатьВПодписи()
		ВыполнитьДействиеНадДокументом("ОтказатьВПодписи", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу, ОбновитьВизуализациюДокумента", Истина, Истина, Истина));
	КонецПроцедуры 
	
	Процедура СогласоватьДокумент()
		ВыполнитьДействиеНадДокументом("СогласоватьДокумент", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу", Истина, Истина));
	КонецПроцедуры
	
	Процедура ОтказатьВСогласовании()
		ВыполнитьДействиеНадДокументом("ОтказатьВСогласовании", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу", Истина, Истина));
	КонецПроцедуры	
	
	Процедура ИзменитьПодразделениеНажатие(Элемент)
		ВыполнитьДействиеНадДокументом("ИзменитьПодразделение", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу", Истина, Истина));
	КонецПроцедуры
	
	Процедура КоманднаяПанельЗапроситьУточнение(Кнопка)
		ВыполнитьДействиеНадДокументом("ЗапроситьУточнение", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу", Истина, Истина));
	КонецПроцедуры
	
	Процедура КоманднаяПанельОтправитьИсправление(Кнопка)
		ВыполнитьДействиеНадДокументом("ОтправитьИсправление", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу", Истина, Истина));
	КонецПроцедуры
	
	Процедура КоманднаяПанельОтправитьКорректировку(Кнопка)
		ВыполнитьДействиеНадДокументом("ОтправитьКорректировку", Новый Структура("ОбновитьЭДОбъект, ОбновитьДействияПоДокументу", Истина, Истина));
	КонецПроцедуры
	
	
	Процедура ПередатьНаСогласование()
		
		Если ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ДействиеСЗалоченнымПакетомЗапрещено(ЭДОбъект,  "ПередатьНаСогласование") Тогда
			Возврат;
		КонецЕсли;
		
		Если Модуль_РаботаССерверомДиадок.ОтправитьЭДОбъектНаСогласование(Организация, ЭДОбъект, "ApprovementRequest", "ПередачаНаОбработку") Тогда
			
			ОбновитьЭДОбъект();
			
			ОбновитьДействияПоДокументу();
			
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура ПередатьНаПодпись()
		
		Если ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ДействиеСЗалоченнымПакетомЗапрещено(ЭДОбъект,  "ПередатьНаПодпись") Тогда
			Возврат;
		КонецЕсли;
		
		Если Модуль_РаботаССерверомДиадок.ОтправитьЭДОбъектНаСогласование(Организация, ЭДОбъект, "SignatureRequest", "ПередачаНаОбработку") Тогда
			ОбновитьЭДОбъект();
			ОбновитьДействияПоДокументу();
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура КоманднаяПанельПерейтиВДиадок(Кнопка)
		Модуль_РаботаССерверомДиадок.ПоказатьДокументВДиадоке(ЭДОбъект)
	КонецПроцедуры
	
	Процедура КоманднаяПанельСтруктураПодчиненности(Кнопка)
		ПолучитьФорму("ФормаСвязейДокументов", ЭтаФорма).ПоказСтруктурыПодчиненности(ЭДОбъект);
	КонецПроцедуры
	
	Процедура КоманднаяПанельУдалитьДокумент(Кнопка)
		
		Если ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ДействиеСЗалоченнымПакетомЗапрещено(ЭДОбъект,  "УдалитьДокумент") Тогда
			Возврат;
		КонецЕсли;
		
		ПолучитьФорму("ФормаУдаленияДокументов", ЭтаФорма).УдалениеДокументовКомплекта(ЭДОбъект);
		
	КонецПроцедуры
	
	Процедура КоманднаяПанельПеревыставитьДокумент(Кнопка)
		
		Если ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ДействиеСЗалоченнымПакетомЗапрещено(ЭДОбъект,  "ПеревыставитьДокумент") Тогда
			Возврат;
		КонецЕсли;
		
		ПолучитьФорму("ФормаПеревыставленияДокументов", ЭтаФорма).ПеревыставлениеДокументовКомплекта(ЭДОбъект);	
		
	КонецПроцедуры
	
	Процедура КоманднаяПанельОтправитьФайл(Кнопка)
		ПолучитьФорму("ФормаВыгрузки", ЭтаФорма).ПрикрепитьФайлы(ЭДОбъект);
	КонецПроцедуры
	
	Процедура КоманднаяПанельОтменитьСопоставлениеДокумент(Кнопка)
		Если ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").КоманднаяПанельОтменитьСопоставлениеДокумент(СсылкаНаОбъект, ЭДОбъект) = Истина Тогда 
			СсылкаНаОбъект = Неопределено;
			Оповестить("ИзменениеСвязиДД1С", Новый Структура("ТипСущности, Ссылка1С, СсылкаДД", "Документ", СсылкаНаОбъект, ЭДОбъект));
		КонецЕсли;	
	КонецПроцедуры
	
	Процедура СогласованиеПодробноНажатие(Элемент)
		ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").СогласованиеПодробноНажатие(ЭДОбъект,Организация )
	КонецПроцедуры
	
	Процедура ОшибкиПодробноНажатие(Элемент)
		ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ОшибкиПодробноНажатие(ЭДОбъект,Организация, МассивОшибок );
	КонецПроцедуры
	
	Процедура ЗапросНаУточнениеПодробноНажатие(Элемент)
		ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ПоказатьЗапросНаУточнениеПодробно(ЭДОбъект, Организация)	
	КонецПроцедуры
	
	Процедура ПодключаемаяКоманда(Кнопка)
			
		ОбработкаСобытияПодключаемогоМодуля("ПодключаемаяКоманда", Новый Структура("Форма, ИмяФормы, Кнопка", ЭтаФорма, "ФормаКарточкаДокументаСВизуализацией", Кнопка));
		
	КонецПроцедуры
		
//} ДЕЙСТВИЯ ФОРМЫ

//{ СОЗДАНИЕ ДОКУМЕНТА 1С
	
	Процедура СсылкаНаДокументПредставлениеНажатие(Элемент)
	
		ФормаОткрытогоДокумента1С = ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ОбработатьДействиеСозданиеДокумента(ЭДОбъект, DocumentContent, СсылкаНаОбъект, СпособСоздания, ДокументОснованиеДляСозданияСФ);
		Если ФормаОткрытогоДокумента1С <> Неопределено Тогда
			ВерсияДанныхСсылкаНаОбъект = ФормаОткрытогоДокумента1С.ВерсияДанных;
			ПодключитьОбработчикОжидания("ОбработчикАвтообновления", 1);
		КонецЕсли;
		
	КонецПроцедуры
	
//} СОЗДАНИЕ ДОКУМЕНТА 1С

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если НЕ ЭтаФорма.Открыта() Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ИмяСобытия = "ИзменениеСвязиДД1С" Тогда
		
		Если ЭДОбъект<> Неопределено Тогда
			Если Параметр.ТипСущности = "Документ" И Параметр.СсылкаДД.OrganizationId = ЭДОбъект.OrganizationId И Параметр.СсылкаДД.DocumentId = ЭДОбъект.DocumentId Тогда
				СсылкаНаОбъект = Параметр.Ссылка1С;
				ОбновитьСопоставленныйДокумент();
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ИзменениеСертификата"  Тогда 
		
		ЭтаФорма.Закрыть();
		
	ИначеЕсли ИмяСобытия = "УдалениеДокументов" Тогда
		
		Если Параметр.Количество() <> 0 Тогда
			Для Каждого Элем из Параметр Цикл
				Если ЭДОбъект.DocumentId = Элем.DocumentId Тогда
					ЭтаФорма.Закрыть();
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ПеревыставлениеДокумента" Тогда
		
		//параметр - Соответствие
		//где: 		
		//	Ключ - ссылка на документ в 1С
		//	Значение - идентификатор документа в Диадок
		
		Для Каждого ЭлементСоответствия Из Параметр Цикл
			
			ДокументСсылка 	= ЭлементСоответствия.Ключ;
			DocumentId 		= ЭлементСоответствия.Значение;
		
			Если ДокументСсылка = СсылканаОбъект Тогда
				
				DocumentИзОповещения = ЭДОбъект.Organization.GetDocumentByID(DocumentId);
				Если ЛЕВ(DocumentИзОповещения.Type, 7) = "Invoice" 
					ИЛИ  DocumentИзОповещения.Type = "XmlTorg12" 
					ИЛИ  DocumentИзОповещения.Type = "XmlAcceptanceCertificate" 
					ИЛИ (DocumentИзОповещения.Type = "UniversalTransferDocument" И ТипДокументаУПД(DocumentИзОповещения.Function) = ТипДокументаУПД("СЧФ")) Тогда
					
					ЭДОбъект 		= DocumentИзОповещения;
					СсылкаНаОбъект 	= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").DocumentID_2_Документ(ЭДОбъект.DocumentId, ЭДОбъект.Organizationid, ЭДОбъект);
					
					ОбновитьЭДОбъект();
					ОбновитьДействияПоДокументу();
					ОбновитьВизуализациюДокумента();
					ОбновитьСопоставленныйДокумент();
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
						
	ИначеЕсли ИмяСобытия = "ИзменениеРежимаСозданияСопоставленияСФ" Тогда
		
		ОбновитьСопоставленныйДокумент();
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ПодробностиПроНовыйФорматНажатие(Элемент)
	
	ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ПоказатьИнформациюОНовыхФорматах(ЭДОбъект.ConfirmationDate);
	
КонецПроцедуры


