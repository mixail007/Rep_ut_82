
Процедура ДействияФормыСформирвоать(Кнопка)
	
	ТабДок = ПолучитьФорму().ЭлементыФормы.ПолеТабличногоДокумента1;
	Макет = ПолучитьМакет("Отчет");
	ОбластьЗаголовок				 			   = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы					           = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаГруппировки	 			  	   = Макет.ПолучитьОбласть("СтрокаГруппировки");
	ОбластьСтрока							 	   = Макет.ПолучитьОбласть("Строка");
	
	ТабДок.Очистить();
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ОбластьЗаголовок.Параметры.Заголовок = "Анализ запасов по крышкам на " + Строка(Лев(ТекущаяДата(),10));
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	СписокПроизводителей = Новый СписокЗначений;
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("65")); //REPLICA
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3333")); //REPLICA TD
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокПроизводителей", СписокПроизводителей);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Крышки", Справочники.Номенклатура.НайтиПоКоду("0080004"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(Д.Крышка, ""Диски без привязки к крышкам"") КАК Крышка,
	               |	Д.Номенклатура,
	               |	ЕСТЬNULL(Д.КоличествоНаСкладе, 0) КАК КоличествоНаСкладе,
	               |	ЕСТЬNULL(Д.КоличествоВПроизводстве, 0) КАК КоличествоВПроизводстве,
	               |	ЕСТЬNULL(Д.КоличествоВПути, 0) КАК КоличествоВПути,
	               |	ЕСТЬNULL(Д.КоличествоНаСкладе, 0) + ЕСТЬNULL(Д.КоличествоВПроизводстве, 0) + ЕСТЬNULL(Д.КоличествоВПути, 0) КАК ВсегоДисков,
	               |	ЕСТЬNULL(Д.КоличествоКрышек, 0) КАК КоличествоКрышек,
	               |	Д.Номенклатура.Код,
	               |	Д.Крышка.КодСБИС КАК КрышкаКод,
	               |	ЕСТЬNULL(ЗаказыПоставщикамКрышкиОстатки.КоличествоОстаток, 0) КАК ЗаказаноКрышек
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		КомплектующиеНоменклатуры.Комплектующая.Код КАК КодКрышки,
	               |		КомплектующиеНоменклатуры.Комплектующая КАК Крышка,
	               |		Б.Код КАК КодНоменклатуры,
	               |		Б.Номенклатура КАК Номенклатура,
	               |		Б.КоличествоНаСкладе КАК КоличествоНаСкладе,
	               |		Б.КоличествоВПроизводстве КАК КоличествоВПроизводстве,
	               |		Б.КоличествоВПути КАК КоличествоВПути,
	               |		NULL КАК КоличествоКрышек
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			ЕСТЬNULL(А.Код, ЗаказыПоставщикамОстатки.Номенклатура.Код) КАК Код,
	               |			ЕСТЬNULL(А.Номенклатура, ЗаказыПоставщикамОстатки.Номенклатура) КАК Номенклатура,
	               |			А.КоличествоНаСкладе КАК КоличествоНаСкладе,
	               |			А.КоличествоВПроизводстве КАК КоличествоВПроизводстве,
	               |			ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) КАК КоличествоВПути
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура.Код, ЗаказыПоставщикамСезонныеОстатки.Номенклатура.Код) КАК Код,
	               |				ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура, ЗаказыПоставщикамСезонныеОстатки.Номенклатура) КАК Номенклатура,
	               |				ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоНаСкладе,
	               |				ЕСТЬNULL(ВЫБОР
	               |						КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
	               |							ТОГДА 0
	               |						ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
	               |					КОНЕЦ, 0) КАК КоличествоВПроизводстве
	               |			ИЗ
	               |				РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |						,
	               |						Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	               |							И Номенклатура.Производитель В (&СписокПроизводителей)
	               |							И НЕ Склад.ЗапретитьИспользование
	               |							И НЕ Склад.Транзитный) КАК ТоварыНаСкладахОстатки
	               |					ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
	               |							,
	               |							ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата
	               |								И Номенклатура.Производитель В (&СписокПроизводителей)) КАК ЗаказыПоставщикамСезонныеОстатки
	               |					ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПоставщикамСезонныеОстатки.Номенклатура) КАК А
	               |				ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(
	               |						,
	               |						ЗаказПоставщику.НомерКонтейнера <> """"
	               |							И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	               |							И Номенклатура.Производитель В (&СписокПроизводителей)) КАК ЗаказыПоставщикамОстатки
	               |				ПО А.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура) КАК Б
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	               |			ПО Б.Номенклатура = КомплектующиеНоменклатуры.Номенклатура
	               |				И (КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ (&Крышки))
	               |				И (НЕ КомплектующиеНоменклатуры.Комплектующая ЕСТЬ NULL )
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		NULL,
	               |		ТоварыНаСкладахОстатки.Номенклатура,
	               |		NULL,
	               |		NULL,
	               |		NULL,
	               |		NULL,
	               |		NULL,
	               |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
	               |	ИЗ
	               |		РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				,
	               |				Номенклатура В ИЕРАРХИИ (&Крышки)
	               |					И НЕ Склад.Транзитный
	               |					И НЕ Склад.ЗапретитьИспользование) КАК ТоварыНаСкладахОстатки) КАК Д
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамКрышки.Остатки(&ТекДата, ) КАК ЗаказыПоставщикамКрышкиОстатки
	               |		ПО Д.Крышка = ЗаказыПоставщикамКрышкиОстатки.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КрышкаКод
	               |ИТОГИ
	               |	СУММА(КоличествоНаСкладе),
	               |	СУММА(КоличествоВПроизводстве),
	               |	СУММА(КоличествоВПути),
	               |	СУММА(ВсегоДисков),
	               |	СУММА(КоличествоКрышек),
	               |	СРЕДНЕЕ(ЗаказаноКрышек)
	               |ПО
	               |	Крышка";
				   
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Результат.Следующий() Цикл
		
		ОбластьСтрокаГруппировки.Параметры.Заполнить(Результат);
		Если НЕ Результат.Крышка = "Диски без привязки к крышкам" Тогда
			ОбластьСтрокаГруппировки.Параметры.КрышкаКод = Результат.Крышка.КодСБИС;
		КонецЕсли;
		
		Разница = 0;
		НеобходимыйЗапасКрышек = 0;
		ОбластьСтрокаГруппировки.Параметры.ВЗаказ = 0;
		
		Если НЕ Результат.ВсегоДисков = 0 Тогда
			НеобходимыйЗапасКрышек = Результат.ВсегоДисков  -?(Результат.ЗаказаноКрышек=Null,0,Результат.ЗаказаноКрышек); 
			Разница = Окр(НеобходимыйЗапасКрышек - Результат.КоличествоКрышек);
			Если Разница > 0 Тогда
				ОбластьСтрокаГруппировки.Параметры.ВЗаказ = Разница*1.1; 
			КонецЕсли;
		КонецЕсли;
		
		Если ВыводитьТолькоДефицитПоКрышкам Тогда
			
			Если ОбластьСтрокаГруппировки.Параметры.ВЗаказ > 0 Тогда
				ТабДок.Вывести(ОбластьСтрокаГруппировки,1,,Ложь);
				
				Выборка = Результат.Выбрать();
				Пока Выборка.Следующий() Цикл
					ОбластьСтрока.Параметры.Заполнить(Выборка);
					ТабДок.Вывести(ОбластьСтрока,2,,Ложь);
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			ТабДок.Вывести(ОбластьСтрокаГруппировки,1,,Ложь);
			
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				ОбластьСтрока.Параметры.Заполнить(Выборка);
				ТабДок.Вывести(ОбластьСтрока,2,,Ложь);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабДок.ФиксацияСверху = 6;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
	ВыполнитьАнализ(Истина);
КонецПроцедуры
