перем ДанныеРасшифровки1;

Процедура ПриОткрытии()
	
	КомпоновщикМакета1 = Новый КомпоновщикМакетаКомпоновкиДанных;
	ПроцессорКомпоновкиДанных1 = Новый ПроцессорКомпоновкиДанных;
	СхемаКомпоновкиДанных1 = ЭтотОбъект.ПолучитьМакет("РасшифровкаЗатрат");
	ПараметрСКД = СхемаКомпоновкиДанных1.Параметры.НачалоПериода;
	ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	ПараметрСКД.Значение  = НачалоМесяца(НачалоПериода);                                
	
	ПараметрСКД = СхемаКомпоновкиДанных1.Параметры.КонецПериода;
	ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	ПараметрСКД.Значение  = КонецМесяца(Конецпериода);                                
	
	ПараметрСКД = СхемаКомпоновкиДанных1.Параметры.НоменклатурнаяГруппа;
	ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	ПараметрСКД.Значение  = НоменклатурнаяГруппа;                                
	
	
	
	
	Если ТипЗНч(статьяЗатрат) = тип("СправочникСсылка.СтатьиЗатрат") тогда
		ПараметрСКД = СхемаКомпоновкиДанных1.Параметры.СтатьяЗатрат;
		ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
		ПараметрСКД.Значение  = СтатьяЗатрат;
	конецЕсли;
	Список = Новый СписокЗначений;
	если ТипЗНч(Подразделение) = тип("СправочникСсылка.Подразделения") тогда
		список.Добавить(Подразделение);
	ПараметрСКД = СхемаКомпоновкиДанных1.Параметры.Подразделение;
	ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	ПараметрСКД.Значение  = Список;  
	конецЕсли;   
	ДанныеРасшифровки1 = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета1 = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки1 = КомпоновщикМакета1.Выполнить(СхемаКомпоновкиДанных1, СхемаКомпоновкиДанных1.НастройкиПоУмолчанию, ДанныеРасшифровки1);
	
	ПроцессорКомпоновкиДанных1 = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных1.Инициализировать(МакетКомпоновки1, , ДанныеРасшифровки1,истина);
	ПроцессорВывода1 = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода1.УстановитьДокумент(ЭлементыФормы.Результат);
	ПроцессорВывода1.Вывести(ПроцессорКомпоновкиДанных1);

КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
			перем  ВыполненноеДействие;

	СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанных1 = ПолучитьМакет("РасшифровкаЗатрат");
   //Создадим и инициализируем обработчик расшифровки                    
    ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки1, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных1));
                                                                         
    ДоступныеДействия = Новый Массив();
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
    
     Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия,);

КонецПроцедуры
