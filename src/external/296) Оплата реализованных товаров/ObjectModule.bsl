//ГЛАВНАЯ ФУНКЦИЯ - Запрос
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	//ЗаполнитьНачальныеНастройкиПоМакету(ПолучитьМакет("ПараметрыОтчетовПродажиКомпании"), СтруктураПредставлениеПолей, МассивОтбора, ОбщийОтчет, "СписокКроссТаблица");
	Текст = "ВЫБРАТЬ
	        |	РасчетыСКонтрагентамиОбороты.ДоговорКонтрагента,
	        |	РасчетыСКонтрагентамиОбороты.Сделка,
			// в рублях!
	        |	СУММА(РасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход) КАК СуммаОплаты
	        |ПОМЕСТИТЬ втОплата
	        |ИЗ
	        |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
	        |			&ДатаНач,
	        |			&ДатаКон,
	        |			Регистратор,
	   |			Сделка ССЫЛКА Документ.ЗаказПокупателя И
	        |				ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
			|			или ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)) КАК РасчетыСКонтрагентамиОбороты
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	РасчетыСКонтрагентамиОбороты.Сделка,
	        |	РасчетыСКонтрагентамиОбороты.ДоговорКонтрагента
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ПродажиОбороты.ДоговорКонтрагента,
	        |	ПродажиОбороты.ЗаказПокупателя,
	        |	ПродажиОбороты.Номенклатура,
	        |	ПродажиОбороты.КоличествоОборот КАК Количество,
	        |	ПродажиОбороты.СтоимостьОборот КАК Сумма
	        |ПОМЕСТИТЬ втРеализации
	        |ИЗ
	        |	РегистрНакопления.Продажи.Обороты(
	        |			&ДатаНач,
	        |			&ДатаКон,
	        |			,
	        |			(ЗаказПокупателя, ДоговорКонтрагента) В
	        |				(ВЫБРАТЬ
	        |					втОплата.Сделка,
	        |					втОплата.ДоговорКонтрагента
	        |				ИЗ
	        |					втОплата КАК втОплата)) КАК ПродажиОбороты
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	втОплата.ДоговорКонтрагента КАК ДоговорКонтрагента,
	        |	втОплата.Сделка КАК Сделка,
	        |	втРеализации.Номенклатура КАК Номенклатура,
	        |	ЕСТЬNULL(втРеализации.Количество, 0) КАК РеализацияКоличество,
	        |	ЕСТЬNULL(втРеализации.Сумма, 0) КАК РеализацияСумма,
	        |	ЕСТЬNULL(ВложенныйЗапрос.Сумма, 0) КАК СуммаРеализацийПоЗаказу,
	        |	втОплата.СуммаОплаты КАК ОплатаСумма,
	        |	втОплата.СуммаОплаты * ВЫБОР
	        |		КОГДА ЕСТЬNULL(ВложенныйЗапрос.Сумма, 0) <> 0
	        |			ТОГДА ЕСТЬNULL(втРеализации.Сумма, 0) / ЕСТЬNULL(ВложенныйЗапрос.Сумма, 0)
	        |		ИНАЧЕ 1
	        |	КОНЕЦ КАК СуммаОплатыПоНоменклатуре,
	        |	ЕСТЬNULL(втРеализации.Сумма, 0) - втОплата.СуммаОплаты * ВЫБОР
	        |		КОГДА ЕСТЬNULL(ВложенныйЗапрос.Сумма, 0) <> 0
	        |			ТОГДА ЕСТЬNULL(втРеализации.Сумма, 0) / ЕСТЬNULL(ВложенныйЗапрос.Сумма, 0)
	        |		ИНАЧЕ 1
	        |	КОНЕЦ КАК Остаток
	        |{ВЫБРАТЬ
	        |	ДоговорКонтрагента.*,
	        |	Сделка.*,
	        |	Номенклатура.*,
	        |	РеализацияКоличество,
	        |	РеализацияСумма,
	        |	СуммаОплатыПоНоменклатуре,
	        |	втОплата.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	втРеализации.Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа,
	        |	Остаток}
	        |ИЗ
	        |	втОплата КАК втОплата
	        |		ЛЕВОЕ СОЕДИНЕНИЕ втРеализации КАК втРеализации
	        |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |				втРеализации.ЗаказПокупателя КАК ЗаказПокупателя,
	        |				СУММА(втРеализации.Сумма) КАК Сумма
	        |			ИЗ
	        |				втРеализации КАК втРеализации
	        |			
	        |			СГРУППИРОВАТЬ ПО
	        |				втРеализации.ЗаказПокупателя) КАК ВложенныйЗапрос
	        |			ПО втРеализации.ЗаказПокупателя = ВложенныйЗапрос.ЗаказПокупателя
	        |		ПО втОплата.ДоговорКонтрагента = втРеализации.ДоговорКонтрагента
	        |			И втОплата.Сделка = втРеализации.ЗаказПокупателя
	        |{ГДЕ
	        |	втОплата.ДоговорКонтрагента.*,
	        |	втОплата.Сделка.*,
	        |	втРеализации.Номенклатура.*,
	        |	втОплата.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	втРеализации.Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа}
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	ДоговорКонтрагента,
	        |	Сделка,
	        |	Номенклатура
	        |{УПОРЯДОЧИТЬ ПО
	        |	ДоговорКонтрагента.*,
	        |	Сделка.*,
	        |	Номенклатура.*}
	        |ИТОГИ
	        |	СУММА(РеализацияКоличество),
	        |	СУММА(РеализацияСумма),
	        |	СУММА(СуммаОплатыПоНоменклатуре),
	        |	СУММА(Остаток)
	        |ПО
	        |	ОБЩИЕ,
	        |	ДоговорКонтрагента,
	        |	Сделка,
	        |	Номенклатура
	        |{ИТОГИ ПО
	        |	ДоговорКонтрагента.*,
	        |	Сделка.*,
	        |	Номенклатура.*}";
	СтруктураПредставлениеПолей = Новый Структура("
	|РеализацияКоличество,
	|РеализацияСумма,
	|СуммаОплатыПоНоменклатуре,
	|Остаток,
	|ДоговорКонтрагента,
	|Сделка,
	|Номенклатура,
	|НоменклатурнаяГруппа,
	|Покупатель", 
	"Количество реализованного товара",
	"Сумма реализованного товара",
	"Сумма оплаченого товара",
	"Остаток",
	"Договор контрагента",
	"Заказ покупателя",
	"Номенклатура",
	"Номенклатураная группа",
	"Покупатель");
	
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда
	
	    ТекстПоляСвойств= "";
		ТекстПоляКатегорий = "";

		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
		#Если Клиент тогда
		ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, Текст, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,,,,,,ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);
		ДобавитьВТекстСвойстваОбщие(Текст, ТекстПоляСвойств, "//ОБЩИЕ_СВОЙСТВА");
		#КонецЕсли
	КонецЕсли;
	
	ПостроительОтчета.Текст = Текст;
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Покупатель");
	МассивОтбора.Добавить("НоменклатурнаяГруппа");
	
	#Если Клиент тогда
 	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	#КонецЕсли
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Истина;
	
	ОбщийОтчет.ЗаполнитьПоказатели("РеализацияКоличество", "Количество реализованного товара", Истина, "ЧЦ=15; ЧДЦ=3");
	//ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество в базовых единицах", Истина, "ЧЦ=15; ЧДЦ=3");
	ОбщийОтчет.ЗаполнитьПоказатели("РеализацияСумма", "Сумма реализованного товара", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаОплатыПоНоменклатуре", "Сумма оплаченого товара", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("Остаток", "Остаток", Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.мНазваниеОтчета = "Отчет по оплате реализованного товара";
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Установим дату начала отчета
	Если ЗначениеНеЗаполнено(ОбщийОтчет.ДатаНач) Тогда
		Если Не ЗначениеНеЗаполнено(ПараметрыСеанса.ТекущийПользователь) Тогда
			ОбщийОтчет.ДатаНач = ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПРоцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "Продажи";