
Процедура ВыполнитьАнализ(ОтправитьНаПочту) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Отчет");
	ОбластьЗаголовок				 			   = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы					           = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаГруппировки	 			  	   = Макет.ПолучитьОбласть("СтрокаГруппировки");
	ОбластьСтрока							 	   = Макет.ПолучитьОбласть("Строка");
	
	ТабДок.Очистить();
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ОбластьЗаголовок.Параметры.Заголовок = "Анализ запасов по крышкам на " + Строка(Лев(ТекущаяДата(),10));
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	СписокПроизводителей = Новый СписокЗначений;
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("65")); //REPLICA
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3333")); //REPLICA TD
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	//Запрос.УстановитьПараметр("Папка1", Справочники.Номенклатура.НайтиПоКоду("9106690"));
	Запрос.УстановитьПараметр("Папка2", Справочники.Номенклатура.НайтиПоКоду("9112946"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Комплектующие КАК Крышка,
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоНаСкладе,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
	               |		КОНЕЦ, 0) КАК КоличествоВПроизводстве,
	               |	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) КАК КоличествоВПути,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
	               |		КОНЕЦ, 0) КАК ВсегоДисков,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки1.КоличествоОстаток, 0) КАК КоличествоКрышек,
	               |	ВложенныйЗапрос.Номенклатура.Код КАК НоменклатураКод,
	               |	ВложенныйЗапрос.Комплектующие.Код КАК КрышкаКод,
	               |	ЕСТЬNULL(ЗаказыПоставщикамКрышкиОстатки.КоличествоОстаток, 0) КАК ЗаказаноКрышек
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		Аналоги.Заменяемое КАК Номенклатура,
	               |		Аналоги.Заменитель КАК Комплектующие,
	               |		Аналоги.Производитель КАК Производитель
	               |	ИЗ
	               |		РегистрСведений.Аналоги КАК Аналоги
	               |	ГДЕ
	               |		Аналоги.Заменитель В ИЕРАРХИИ(&Папка2)
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		КомплектующиеНоменклатуры.Номенклатура,
	               |		КомплектующиеНоменклатуры.Комплектующая,
	               |		NULL
	               |	ИЗ
	               |		РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	               |	ГДЕ
	               |		КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Папка1)) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(, ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки
	               |		ПО ВложенныйЗапрос.Номенклатура = ЗаказыПоставщикамСезонныеОстатки.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(
	               |				,
	               |				ЗаказПоставщику.НомерКонтейнера <> """"
	               |					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПоставщикамОстатки
	               |		ПО ВложенныйЗапрос.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамКрышки.Остатки(&ТекДата, ) КАК ЗаказыПоставщикамКрышкиОстатки
	               |		ПО ВложенныйЗапрос.Комплектующие = ЗаказыПоставщикамКрышкиОстатки.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				,
	               |				Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	               |					И НЕ Склад.ЗапретитьИспользование
	               |					И НЕ Склад.Транзитный) КАК ТоварыНаСкладахОстатки
	               |		ПО ВложенныйЗапрос.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки1
	               |		ПО ВложенныйЗапрос.Комплектующие = ТоварыНаСкладахОстатки1.Номенклатура
	               |ГДЕ
	               |	(ВЫБОР
	               |				КОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ВЫБОР
	               |								КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
	               |									ТОГДА 0
	               |								ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
	               |							КОНЕЦ, 0) > 0
	               |						И ЕСТЬNULL(ВложенныйЗапрос.Производитель, 0) = 0
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ
	               |			ИЛИ ВЫБОР
	               |				КОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки1.КоличествоОстаток, 0) > 0
	               |						ИЛИ ЕСТЬNULL(ЗаказыПоставщикамКрышкиОстатки.КоличествоОстаток, 0) <> 0
	               |							И ЕСТЬNULL(ВложенныйЗапрос.Производитель, 0) <> 0
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Комплектующие,
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0),
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
	               |		КОНЕЦ, 0),
	               |	ВложенныйЗапрос.Номенклатура.Код,
	               |	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0),
	               |	ВложенныйЗапрос.Комплектующие.Код,
	               |	ЕСТЬNULL(ЗаказыПоставщикамКрышкиОстатки.КоличествоОстаток, 0),
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
	               |		КОНЕЦ, 0),
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки1.КоличествоОстаток, 0)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КрышкаКод
	               |ИТОГИ
	               |	СУММА(КоличествоНаСкладе),
	               |	СУММА(КоличествоВПроизводстве),
	               |	СУММА(КоличествоВПути),
	               |	СУММА(ВсегоДисков),
	               |	СУММА(КоличествоКрышек),
	               |	СРЕДНЕЕ(ЗаказаноКрышек)
	               |ПО
	               |	Крышка";
				   
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Результат.Следующий() Цикл
		
		ОбластьСтрокаГруппировки.Параметры.Заполнить(Результат);
		Если НЕ Результат.Крышка = "Диски без привязки к крышкам" Тогда
			ОбластьСтрокаГруппировки.Параметры.КрышкаКод = Результат.Крышка.КодСБИС;
		КонецЕсли;
		
		Разница = 0;
		НеобходимыйЗапасКрышек = 0;
		ОбластьСтрокаГруппировки.Параметры.ВЗаказ = 0;
		
		Если НЕ Результат.ВсегоДисков = 0 Тогда
			НеобходимыйЗапасКрышек = Результат.ВсегоДисков + Результат.ВсегоДисков * 0.1-?(Результат.ЗаказаноКрышек=Null,0,Результат.ЗаказаноКрышек); 
			Разница = Окр(НеобходимыйЗапасКрышек - Результат.КоличествоКрышек);
			Если Разница > 0 Тогда
				ОбластьСтрокаГруппировки.Параметры.ВЗаказ = Разница; 
			КонецЕсли;
		КонецЕсли;
		
		Если ВыводитьТолькоДефицитПоКрышкам Тогда
			
			Если ОбластьСтрокаГруппировки.Параметры.ВЗаказ > 0 Тогда
				ТабДок.Вывести(ОбластьСтрокаГруппировки,1,,Ложь);
				
				Выборка = Результат.Выбрать();
				Пока Выборка.Следующий() Цикл
					ОбластьСтрока.Параметры.Заполнить(Выборка);
					ТабДок.Вывести(ОбластьСтрока,2,,Ложь);
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			ТабДок.Вывести(ОбластьСтрокаГруппировки,1,,Ложь);
			
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				ОбластьСтрока.Параметры.Заполнить(Выборка);
				ТабДок.Вывести(ОбластьСтрока,2,,Ложь);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабДок.ФиксацияСверху = 6;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	Если ОтправитьНаПочту Тогда
		
		Вложение1 = ПолучитьИмяВременногоФайла("xls");
		ТабДок.Записать(Вложение1, ТипФайлаТабличногоДокумента.XLS);
		
		Профиль = Новый ИнтернетПочтовыйПрофиль;
		Профиль.АдресСервераSMTP   = "mail.yst76.ru";
		Профиль.ПортSMTP		   = 25;
		Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
		Профиль.ПарольSMTP         = "";
		Профиль.ПользовательSMTP   = "";
		Письмо = Новый ИнтернетПочтовоеСообщение;
		Письмо.Отправитель = "no-reply@yst76.ru";
		Письмо.Получатели.Добавить("alekseeva_ae@yst.ru");
		Письмо.Получатели.Добавить("malyshev@yst-group.com");
		Письмо.Получатели.Добавить("goritsky@yst.ru");
		Письмо.Получатели.Добавить("baldina@yst.ru");
		Письмо.Тема = "Анализ запасов по крышкам";
		Письмо.Вложения.Добавить(Вложение1,"Вложение 1");
		
		Почта = Новый ИнтернетПочта;
		
		Попытка
			Почта.Подключиться(Профиль);
			Почта.Послать(Письмо);
			Почта.Отключиться();
			сообщить("письмо отправлено");
		Исключение
			Пауза(20);
			Почта.Подключиться(Профиль);
			Почта.Послать(Письмо);
			Почта.Отключиться();
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Пауза(Сек)
	Попытка
		scr = Новый COMОбъект("WScript.Shell");
		scr.Run("sleep "+СокрЛП(Число(Сек)),0,1);
	Исключение
	КонецПопытки;
КонецПроцедуры
