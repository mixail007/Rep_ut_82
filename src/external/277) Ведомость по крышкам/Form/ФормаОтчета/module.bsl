Перем ТекстЗапроса, ТекстСписание;
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СписокДействий= новый СписокЗначений;
	СписокДействий.Добавить("СоздатьНаборку","Сформировать наборку");
	СписокДействий.Добавить("СоздатьСписание","Сформировать списание");
	СписокДействий.Добавить("УдалитьНаборку","Удалить наборку");
	СписокДействий.Добавить("Открыть","Открыть заказ");
	
	
	
	Если ТипЗнч(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение)=Тип("ДокументСсылка.ЗаказПокупателя") тогда
		СтандартнаяОбработка=ложь;
		ВыбДействие=СписокДействий.ВыбратьЭлемент("Действие");
		Если ВыбДействие=СписокДействий.НайтиПоЗначению("СоздатьНаборку") тогда
			Запрос=новый Запрос;
			Запрос.Текст=ТекстЗапроса;
			ВыбЗаказ=ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
			Запрос.УстановитьПараметр("ЗаказПокупателя",ВыбЗаказ);
			Запрос.УстановитьПараметр("Комплектующая",Справочники.Номенклатура.НайтиПоКоду("0080004"));
			Рез=Запрос.Выполнить().Выгрузить();
			Если Рез.Количество()>0 тогда
				ДокНаборка=Документы.НаборкаКрышек.СоздатьДокумент();
				ДокНаборка.Дата=ТекущаяДата();
				ДокНаборка.ДокументОснование=ВыбЗаказ;
				Крышки=ДокНаборка.Крышки;
				Для Каждого стр из Рез Цикл
					Если стр.НеобходимоКрышек-стр.Набрано>0 тогда
						нСтр=Крышки.Добавить();
						нСтр.Номенклатура=стр.Крышка;
						нСтр.Количество=стр.НеобходимоКрышек-стр.Набрано;
					КонецЕсли;
				КонецЦикла;
				Если Крышки.Количество()>0 тогда
					ДокНаборка.ПолучитьФорму().Открыть();
				КонецЕсли;
			КонецЕсли;	
		ИначеЕсли 	ВыбДействие=СписокДействий.НайтиПоЗначению("СоздатьСписание") тогда
			Запрос=новый Запрос;
			Запрос.Текст=ТекстЗапроса;
			ВыбЗаказ=ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
			Запрос.УстановитьПараметр("ЗаказПокупателя",ВыбЗаказ);
			Запрос.УстановитьПараметр("Комплектующая",Справочники.Номенклатура.НайтиПоКоду("0080004"));
			Рез=Запрос.Выполнить().Выгрузить();
			
			Если Рез.Количество()>0 тогда
				
				ДокРасхОрдер=Документы.РасходныйОрдерНаТовары.СоздатьДокумент();
				ДокРасхОрдер.Дата=ТекущаяДата();
				ДокРасхОрдер.Организация=ТекущаяДата();
				ДокРасхОрдер.Склад=Справочники.Склады.НайтиПоКоду("00393"); //Ошиповка (комплектующие материалы)
				ДокРасхОрдер.ВидОперации=Перечисления.ВидыОперацийРасходныйОрдер.РасходКрышек;
				ДокРасхОрдер.ДокументПередачи=ВыбЗаказ;
				Товары=ДокРасхОрдер.Товары;
				Для Каждого стр из Рез Цикл
					Если стр.Набрано-стр.Списано>0 тогда
						нСтр=Товары.Добавить();
						ЗаполнитьЗначенияСвойств(нСтр,стр);
						нСтр.Номенклатура=стр.Крышка;
						нСтр.Количество=стр.Набрано-стр.Списано;
						нСтр.Качество=Справочники.Качество.Новый;
					КонецЕсли;
				КонецЦикла;
				Если Товары.Количество()>0 тогда
					ДокРасхОрдер.ПолучитьФорму().Открыть();
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли 	ВыбДействие=СписокДействий.НайтиПоЗначению("Открыть") тогда
			ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение.ПолучитьФорму().Открыть();
		ИначеЕсли 	ВыбДействие=СписокДействий.НайтиПоЗначению("УдалитьНаборку") тогда
			Если Вопрос("Вы действительно хотите удалить наборки?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да тогда
				Запрос=новый Запрос;
				Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	НаборкаКрышек.Ссылка
				|ИЗ
				|	Документ.НаборкаКрышек КАК НаборкаКрышек
				|ГДЕ
				|	НаборкаКрышек.ДокументОснование = &ДокументОснование
				|	И НаборкаКрышек.Проведен = ИСТИНА";
				Запрос.УстановитьПараметр("ДокументОснование",ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение);
				Выборка=Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					ДокНаборка=Выборка.Ссылка.ПолучитьОбъект();
					ДокНаборка.ПометкаУдаления=Истина;
					ДокНаборка.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					Сообщить(""+ДокНаборка+" помечен на удаление.");
				КонецЦикла;	
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура ДействияФормымСформировать(Кнопка)
	
	
	//Получаем схему из макета
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Из схемы возьмем настройки по умолчанию
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	Настройки.ПараметрыДанных.Элементы.Найти("НачПериода").Значение=НачалоДня(НачПериода);
	Настройки.ПараметрыДанных.Элементы.Найти("КонПериода").Значение=КонецДня(КонПериода);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	//Очищаем поле табличного документа
	Результат = ЭлементыФормы.Результат;
	Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	Результат.ПоказатьУровеньГруппировокСтрок(0);
КонецПроцедуры

Процедура ПриОткрытии()
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	Настройки.ПараметрыДанных.Элементы.Найти("Комплектующая").Значение=Справочники.Номенклатура.НайтиПоКоду("0080004");
	Настройки.ПараметрыДанных.Элементы.Найти("НачПериода").Значение=НачалоДня(ТекущаяДата());
	Настройки.ПараметрыДанных.Элементы.Найти("КонПериода").Значение=КонецДня(ТекущаяДата());
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	НачПериода=НачалоДня(ТекущаяДата());
	КонПериода=КонецДня(ТекущаяДата());
	ДействияФормымСформировать(неопределено);
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

ТекстЗапроса="ВЫБРАТЬ
             |	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка,
             |	ЗаданиеНаОтгрузкуЗаказыПокупателей.ЗаказПокупателя,
             |	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.КудаНестиКрышки,
             |	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.КрышкиTopDriver КАК КрышкиTopDriver
             |ПОМЕСТИТЬ втЗадания
             |ИЗ
             |	Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК ЗаданиеНаОтгрузкуЗаказыПокупателей
             |ГДЕ
             |	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Проведен = ИСТИНА
             |	И ЗаданиеНаОтгрузкуЗаказыПокупателей.ЗаказПокупателя = &ЗаказПокупателя
             |
             |СГРУППИРОВАТЬ ПО
             |	ЗаданиеНаОтгрузкуЗаказыПокупателей.ЗаказПокупателя,
             |	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка,
             |	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.КудаНестиКрышки,
             |	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.КрышкиTopDriver
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ
             |	а.Ссылка КАК ЗаказПокупателя,
             |	МАКСИМУМ(а.ДатаНаборки) КАК ДатаНаборки,
             |	МАКСИМУМ(а.КудаНестиКрышки) КАК КудаНестиКрышки,
             |	МАКСИМУМ(а.КрышкиTopDriver) КАК КрышкиTopDriver
             |ПОМЕСТИТЬ втЗаказы2
             |ИЗ
             |	(ВЫБРАТЬ
             |		ЗаказПокупателя.Ссылка КАК Ссылка,
             |		ЗаказПокупателя.ДатаГотовностиНаборки КАК ДатаНаборки,
             |		ЗаказПокупателя.КудаНестиКрышки КАК КудаНестиКрышки,
             |		ЛОЖЬ КАК КрышкиTopDriver
             |	ИЗ
             |		Документ.ЗаказПокупателя КАК ЗаказПокупателя
             |	ГДЕ
             |		ЗаказПокупателя.ТребуютсяКрышки = ИСТИНА
             |		И ЗаказПокупателя.Проведен = ИСТИНА
             |		И ЗаказПокупателя.Ссылка = &ЗаказПокупателя
             |	
             |	ОБЪЕДИНИТЬ ВСЕ
             |	
             |	ВЫБРАТЬ
             |		ЗаказПокупателя.Ссылка,
             |		ЗаказПокупателя.Дата,
             |		ЗаказПокупателя.КудаНестиКрышки,
             |		ЛОЖЬ
             |	ИЗ
             |		Документ.ЗаказПокупателя КАК ЗаказПокупателя
             |	ГДЕ
             |		ЗаказПокупателя.ТребуютсяКрышки = ИСТИНА
             |		И ЗаказПокупателя.Проведен = ИСТИНА
             |		И ЗаказПокупателя.ДатаГотовностиНаборки = ДАТАВРЕМЯ(1, 1, 1)
             |		И ЗаказПокупателя.Ссылка = &ЗаказПокупателя
             |	
             |	ОБЪЕДИНИТЬ ВСЕ
             |	
             |	ВЫБРАТЬ
             |		втЗадания.ЗаказПокупателя,
             |		ВЫБОР
             |			КОГДА ВложенныйЗапрос.ДатаГотовностиНаборки = ДАТАВРЕМЯ(1, 1, 1)
             |				ТОГДА втЗадания.Ссылка.Дата
             |			ИНАЧЕ ВложенныйЗапрос.ДатаГотовностиНаборки
             |		КОНЕЦ,
             |		МАКСИМУМ(втЗадания.КудаНестиКрышки),
             |		втЗадания.КрышкиTopDriver
             |	ИЗ
             |		втЗадания КАК втЗадания
             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
             |				ЗаказПокупателяТовары.Ссылка КАК Ссылка,
             |				ЗаказПокупателяТовары.Ссылка.ДатаГотовностиНаборки КАК ДатаГотовностиНаборки,
             |				ЗаказПокупателяТовары.Ссылка.КудаНестиКрышки КАК КудаНестиКрышки
             |			ИЗ
             |				Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
             |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
             |					ПО ЗаказПокупателяТовары.Номенклатура = КомплектующиеНоменклатуры.Номенклатура
             |			ГДЕ
             |				ЗаказПокупателяТовары.Ссылка.Проведен = ИСТИНА
             |				И ЗаказПокупателяТовары.Ссылка В
             |						(ВЫБРАТЬ
             |							втЗадания.ЗаказПокупателя
             |						ИЗ
             |							втЗадания КАК втЗадания)
             |				И ЗаказПокупателяТовары.Ссылка = &ЗаказПокупателя
             |			
             |			СГРУППИРОВАТЬ ПО
             |				ЗаказПокупателяТовары.Ссылка,
             |				ЗаказПокупателяТовары.Ссылка.ДатаГотовностиНаборки,
             |				ЗаказПокупателяТовары.Ссылка.КудаНестиКрышки) КАК ВложенныйЗапрос
             |			ПО (ВложенныйЗапрос.Ссылка = втЗадания.ЗаказПокупателя)
             |	ГДЕ
             |		втЗадания.Ссылка.Проведен = ИСТИНА
             |	
             |	СГРУППИРОВАТЬ ПО
             |		втЗадания.ЗаказПокупателя,
             |		втЗадания.КрышкиTopDriver,
             |		ВЫБОР
             |			КОГДА ВложенныйЗапрос.ДатаГотовностиНаборки = ДАТАВРЕМЯ(1, 1, 1)
             |				ТОГДА втЗадания.Ссылка.Дата
             |			ИНАЧЕ ВложенныйЗапрос.ДатаГотовностиНаборки
             |		КОНЕЦ) КАК а
             |
             |СГРУППИРОВАТЬ ПО
             |	а.Ссылка
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ
             |	ЗаказыПокупателейОстаткиИОбороты.ЗаказПокупателя,
             |	ЗаказыПокупателейОстаткиИОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
             |	ЗаказыПокупателейОстаткиИОбороты.Номенклатура,
             |	КомплектующиеНоменклатуры.Комплектующая КАК Крышка,
             |	СУММА(ЗаказыПокупателейОстаткиИОбороты.КоличествоПриход) КАК КоличествоСборныхДисков,
             |	СУММА(ЗаказыПокупателейОстаткиИОбороты.КоличествоРасход) КАК КоличествоПроданоПеремещено,
             |	втЗаказы2.ДатаНаборки,
             |	втЗаказы2.КудаНестиКрышки,
             |	ЛОЖЬ КАК КрышкиTopDriver
             |ПОМЕСТИТЬ втЗаказы
             |ИЗ
             |	РегистрНакопления.ЗаказыПокупателей.ОстаткиИОбороты(
             |			,
             |			,
             |			,
             |			ДвиженияИГраницыПериода,
             |			ЗаказПокупателя = &ЗаказПокупателя
             |				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.Видытоваров.Диски)) КАК ЗаказыПокупателейОстаткиИОбороты
             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
             |		ПО ЗаказыПокупателейОстаткиИОбороты.Номенклатура = КомплектующиеНоменклатуры.Номенклатура
             |		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказы2 КАК втЗаказы2
             |		ПО ЗаказыПокупателейОстаткиИОбороты.ЗаказПокупателя = втЗаказы2.ЗаказПокупателя
             |ГДЕ
             |	КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Комплектующая)
             |
             |СГРУППИРОВАТЬ ПО
             |	КомплектующиеНоменклатуры.Комплектующая,
             |	ЗаказыПокупателейОстаткиИОбороты.Номенклатура,
             |	ЗаказыПокупателейОстаткиИОбороты.ЗаказПокупателя,
             |	ЗаказыПокупателейОстаткиИОбороты.ДоговорКонтрагента.Владелец,
             |	втЗаказы2.ДатаНаборки,
             |	втЗаказы2.КудаНестиКрышки
             |
             |ОБЪЕДИНИТЬ ВСЕ
             |
             |ВЫБРАТЬ
             |	ЗаказПокупателяТовары.Ссылка,
             |	ЗаказПокупателяТовары.Ссылка.Контрагент,
             |	ЗаказПокупателяТовары.Номенклатура,
             |	КомплектующиеНоменклатуры.Комплектующая,
             |	ЗаказПокупателяТовары.Количество,
             |	0,
             |	ЗаказПокупателяТовары.Ссылка.ДатаГотовностиНаборки,
             |	ЗаказПокупателяТовары.Ссылка.КудаНестиКрышки,
             |	ЛОЖЬ
             |ИЗ
             |	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
             |		ПО ЗаказПокупателяТовары.Номенклатура = КомплектующиеНоменклатуры.Номенклатура
             |ГДЕ
             |	ЗаказПокупателяТовары.Ссылка.ПометкаУдаления = ИСТИНА
             |	И ЗаказПокупателяТовары.Ссылка = &ЗаказПокупателя
             |	И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Комплектующая)
             |	И ЗаказПокупателяТовары.Номенклатура = ЗНАЧЕНИЕ(Перечисление.Видытоваров.Диски)
             |
             |ОБЪЕДИНИТЬ ВСЕ
             |
             |ВЫБРАТЬ
             |	ЗаказыTopDriver.ЗаказПокупателя,
             |	ЗаказыTopDriver.ДоговорКонтрагентаВладелец,
             |	ЗаказыTopDriver.Номенклатура,
             |	ЗаказыTopDriver.Заменитель,
             |	ЗаказыTopDriver.КоличествоПриход,
             |	ЗаказыTopDriver.КоличествоРасход,
             |	ЗаказыTopDriver.ДатаНаборки,
             |	ЗаказыTopDriver.КудаНестиКрышки,
             |	ЗаказыTopDriver.КрышкиTopDriver
             |ИЗ
             |	(ВЫБРАТЬ
             |		ЗаказыПокупателейОстаткиИОбороты.ЗаказПокупателя КАК ЗаказПокупателя,
             |		ЗаказыПокупателейОстаткиИОбороты.ДоговорКонтрагента.Владелец КАК ДоговорКонтрагентаВладелец,
             |		ЗаказыПокупателейОстаткиИОбороты.Номенклатура КАК Номенклатура,
             |		Аналоги.Заменитель КАК Заменитель,
             |		СУММА(ЗаказыПокупателейОстаткиИОбороты.КоличествоПриход) КАК КоличествоПриход,
             |		СУММА(ЗаказыПокупателейОстаткиИОбороты.КоличествоРасход) КАК КоличествоРасход,
             |		втЗаказы2.ДатаНаборки КАК ДатаНаборки,
             |		втЗаказы2.КудаНестиКрышки КАК КудаНестиКрышки,
             |		втЗаказы2.КрышкиTopDriver КАК КрышкиTopDriver
             |	ИЗ
             |		РегистрНакопления.ЗаказыПокупателей.ОстаткиИОбороты(
             |				,
             |				,
             |				,
             |				ДвиженияИГраницыПериода,
             |				ЗаказПокупателя = &ЗаказПокупателя
             |					И Номенклатура.Наименование ПОДОБНО ""%LegeArtis%"") КАК ЗаказыПокупателейОстаткиИОбороты
             |			ЛЕВОЕ СОЕДИНЕНИЕ втЗаказы2 КАК втЗаказы2
             |			ПО ЗаказыПокупателейОстаткиИОбороты.ЗаказПокупателя = втЗаказы2.ЗаказПокупателя
             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Аналоги КАК Аналоги
             |			ПО ЗаказыПокупателейОстаткиИОбороты.Номенклатура = Аналоги.Заменяемое
             |	
             |	СГРУППИРОВАТЬ ПО
             |		ЗаказыПокупателейОстаткиИОбороты.Номенклатура,
             |		ЗаказыПокупателейОстаткиИОбороты.ЗаказПокупателя,
             |		ЗаказыПокупателейОстаткиИОбороты.ДоговорКонтрагента.Владелец,
             |		втЗаказы2.ДатаНаборки,
             |		втЗаказы2.КудаНестиКрышки,
             |		Аналоги.Заменитель,
             |		втЗаказы2.КрышкиTopDriver) КАК ЗаказыTopDriver
             |ГДЕ
             |	ЗаказыTopDriver.КрышкиTopDriver = ИСТИНА
             |
             |ОБЪЕДИНИТЬ ВСЕ
             |
             |ВЫБРАТЬ
             |	ЗаказПокупателяКрышки.Ссылка,
             |	ЗаказПокупателяКрышки.Ссылка.Контрагент,
             |	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
             |	ЗаказПокупателяКрышки.Крышка,
             |	ЗаказПокупателяКрышки.Количество,
             |	ЗаказПокупателяКрышки.Количество,
             |	ЗаказПокупателяКрышки.Ссылка.ДатаГотовностиНаборки,
             |	ЗаказПокупателяКрышки.Ссылка.КудаНестиКрышки,
             |	ЛОЖЬ
             |ИЗ
             |	Документ.ЗаказПокупателя.Крышки КАК ЗаказПокупателяКрышки
             |ГДЕ
             |	ЗаказПокупателяКрышки.Ссылка = &ЗаказПокупателя
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ
             |	НаборкаКрышекКрышки.Ссылка.ДокументОснование КАК ЗаказПокупателя,
             |	НаборкаКрышекКрышки.Номенклатура КАК Крышка,
             |	СУММА(ВЫБОР
             |			КОГДА НаборкаКрышекКрышки.Ссылка.Проведен
             |				ТОГДА НаборкаКрышекКрышки.Количество
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК Количество
             |ПОМЕСТИТЬ втНаборкиПоЗаказам
             |ИЗ
             |	Документ.НаборкаКрышек.Крышки КАК НаборкаКрышекКрышки
             |ГДЕ
             |	НаборкаКрышекКрышки.Ссылка.ДокументОснование В
             |			(ВЫБРАТЬ
             |				втЗаказы.ЗаказПокупателя КАК втЗаказы
             |			ИЗ
             |				втЗаказы)
             |
             |СГРУППИРОВАТЬ ПО
             |	НаборкаКрышекКрышки.Номенклатура,
             |	НаборкаКрышекКрышки.Ссылка.ДокументОснование
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ
             |	РасходныйОрдерНаТоварыТовары.Номенклатура,
             |	СУММА(ВЫБОР
             |			КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Проведен
             |				ТОГДА РасходныйОрдерНаТоварыТовары.Количество
             |			ИНАЧЕ 0
             |		КОНЕЦ) КАК Количество,
             |	РасходныйОрдерНаТоварыТовары.Ссылка.ДокументПередачи КАК ЗаказПокупателя
             |ПОМЕСТИТЬ втСписаноПоЗаказам
             |ИЗ
             |	Документ.РасходныйОрдерНаТовары.Товары КАК РасходныйОрдерНаТоварыТовары
             |ГДЕ
             |	РасходныйОрдерНаТоварыТовары.Ссылка.ДокументПередачи В
             |			(ВЫБРАТЬ
             |				втЗаказы.ЗаказПокупателя КАК втЗаказы
             |			ИЗ
             |				втЗаказы)
             |
             |СГРУППИРОВАТЬ ПО
             |	РасходныйОрдерНаТоварыТовары.Номенклатура,
             |	РасходныйОрдерНаТоварыТовары.Ссылка.ДокументПередачи
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ
             |	А.Крышка,
             |	СУММА(А.Набрано) КАК Набрано,
             |	СУММА(А.Списано) КАК Списано,
             |	СУММА(А.НеобходимоКрышек) КАК НеобходимоКрышек,
             |	А.ЕдиницаИзмерения,
             |	А.Коэффициент
             |ИЗ
             |	(ВЫБРАТЬ
             |		втЗаказы.Крышка КАК Крышка,
             |		втЗаказы.КоличествоСборныхДисков * ЕСТЬNULL(втНаборкиПоЗаказам.Количество, 0) / ВЫБОР
             |			КОГДА ВсегоДисковПоКрышкам.КоличествоСборныхДисков = 0
             |				ТОГДА 1
             |			ИНАЧЕ ВсегоДисковПоКрышкам.КоличествоСборныхДисков
             |		КОНЕЦ КАК Набрано,
             |		втЗаказы.КоличествоСборныхДисков * ЕСТЬNULL(втСписаноПоЗаказам.Количество, 0) / ВЫБОР
             |			КОГДА ВсегоДисковПоКрышкам.КоличествоСборныхДисков = 0
             |				ТОГДА 1
             |			ИНАЧЕ ВсегоДисковПоКрышкам.КоличествоСборныхДисков
             |		КОНЕЦ КАК Списано,
             |		втЗаказы.КоличествоСборныхДисков КАК НеобходимоКрышек,
             |		втЗаказы.Крышка.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
             |		втЗаказы.Крышка.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент
             |	ИЗ
             |		втЗаказы КАК втЗаказы
             |			ЛЕВОЕ СОЕДИНЕНИЕ втСписаноПоЗаказам КАК втСписаноПоЗаказам
             |			ПО втЗаказы.ЗаказПокупателя = втСписаноПоЗаказам.ЗаказПокупателя
             |				И втЗаказы.Крышка = втСписаноПоЗаказам.Номенклатура
             |			ЛЕВОЕ СОЕДИНЕНИЕ втНаборкиПоЗаказам КАК втНаборкиПоЗаказам
             |			ПО втЗаказы.ЗаказПокупателя = втНаборкиПоЗаказам.ЗаказПокупателя
             |				И втЗаказы.Крышка = втНаборкиПоЗаказам.Крышка
             |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
             |				втЗаказы.Крышка КАК Крышка,
             |				СУММА(втЗаказы.КоличествоСборныхДисков) КАК КоличествоСборныхДисков,
             |				втЗаказы.ЗаказПокупателя КАК ЗаказПокупателя
             |			ИЗ
             |				втЗаказы КАК втЗаказы
             |			
             |			СГРУППИРОВАТЬ ПО
             |				втЗаказы.Крышка,
             |				втЗаказы.ЗаказПокупателя) КАК ВсегоДисковПоКрышкам
             |			ПО втЗаказы.Крышка = ВсегоДисковПоКрышкам.Крышка
             |				И втЗаказы.ЗаказПокупателя = ВсегоДисковПоКрышкам.ЗаказПокупателя) КАК А
             |
             |СГРУППИРОВАТЬ ПО
             |	А.Крышка,
             |	А.ЕдиницаИзмерения,
             |	А.Коэффициент";

