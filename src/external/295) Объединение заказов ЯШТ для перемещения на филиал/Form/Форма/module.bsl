Перем мЖирныйШрифт, мКурсивШрифт, мЖирныйКурсивШрифт;
перем КодКлиента;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	для каждого стр1 из ТабличноеПоле1 цикл //24.03.2017
		Если стр1.Флаг и стр1.ЗаказПокупателя.Услуги.Количество()>0 тогда
			стр1.флаг = ложь;
			Предупреждение("Выключен из объединения Заказ с услугами "+строка(стр1.ЗаказПокупателя.Номер), 60);
		КонецЕсли;
	КонецЦикла;	
	
		ТекстВДоговоре = "Перемещение на Филиал";
		ОбъединитьЗаказыПокупателя(ДатаОтгрузки,ТекстВДоговоре);  	//ВЫПОЛНЕНИЕ
	
КонецПроцедуры


 //+++ 23.01.2015 -----------------------------------------------
Процедура ДобавитьЗаказВТЧЗаказы(Зак1, ЗакОб)
	
	Если Зак1.Заказы.Количество()>0 тогда  
		для каждого стр1 из Зак1.Заказы цикл
			ДобавитьЗаказВТЧЗаказы(стр1.ЗаказПокупателя, ЗакОб)
		КонецЦикла;
	ИНАЧЕ // это тот заказ что нам нужен...
	   стрЗак = ЗакОб.Заказы.Добавить();
	   стрЗак.ЗаказПокупателя = Зак1;
    КонецЕсли;
   
КонецПроцедуры


//процедуру надо перенести в общий модуль ИнтернетМагазин
//
Процедура ОбъединитьЗаказыПокупателя(ДатаОтгрузки='00010101', ТекстВДоговоре="", ТолькоЧтениеЗаказов=ЛОЖЬ, Транзит=ЛОЖЬ) 
	Если НЕ ЗначениеЗаполнено(Филиал) или НЕ ЗначениеЗаполнено(ДоговорКлиента) тогда    //или ДатаОтгрузки='00010101' 
		Предупреждение("Не заполнено обязательное поле отбора!", 30);
		возврат;
	КонецЕсли;	
	
	Если (ДатаОтгрузки='00010101' и ДатаОтгрузки1<>'00010101')
		или (ДатаОтгрузки<>'00010101' и ДатаОтгрузки1='00010101') тогда
		Предупреждение("Будут найдены все документы БЕЗ даты отгрузки!", 10);
		ДатаОтгрузки='00010101'; ДатаОтгрузки1='00010101';
	КонецЕсли;	
		
//1.находим заказы по Контрагенту и Подразделению
// из регистра ЗаказыПокупателей - на случай Корректировок, изменений в проведении и проверки
 Запрос = новый Запрос;
 СписокЗаказов = новый СписокЗначений;					

 Если  ТабличноеПоле1.Количество()=0 или ТолькоЧтениеЗаказов тогда
 
	ТабличноеПоле1.Очистить();
	ДанныеДляТабПоля = ПолучитьДанныеДляТабличногоПоля(Запрос);
	ТабличноеПоле1 = запрос.Выполнить().Выгрузить();					

	//+++( 24.10.2018 -----предварительный подсчет-------------
		колСтопЛистРазрешен=0; колСтопЛистНеРазрешен=0;
		для каждого стр1 из ТабличноеПоле1 цикл
			Если стр1.Флаг и ЕстьТоварыСтопЛиста(стр1.ЗаказПокупателя) тогда
				если стр1.ЗаказПокупателя.РазрешитьГрузитьТоварыИзСтопЛиста тогда
					колСтопЛистРазрешен = колСтопЛистРазрешен + 1;
		        иначе
					колСтопЛистНеРазрешен = колСтопЛистНеРазрешен + 1;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;	
	// --- Задача № 57245 --- контроль стоп-листа п.1 ( нельзя Разрешенные с НеРазрешенными! )--------------------------------
		Если (колСтопЛистРазрешен*колСтопЛистНеРазрешен <> 0) тогда
			Для каждого стр1 из ТабличноеПоле1 цикл
				Если стр1.Флаг и НельзяОбъединятьНеПодтвержденныйЗаказВКоторомЕстьТоварыСтопЛиста(стр1.ЗаказПокупателя) тогда // НЕЛЬЗЯ ОБЪЕДИНЯТЬ!
					сообщить("Нельзя объединять "+строка(стр1.ЗаказПокупателя)+", который содержит диски стоп-листа и ещё не разрешен к отгрузке!", СтатусСообщения.Внимание);
					стр1.Флаг = ЛОЖЬ;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
     //+++)

	
Предупреждение("Получено "+строка(ТабличноеПоле1.Количество())+" заказов.",30);
   Возврат; //+++ выход!
   
Иначе //Если не ТолькоЧтениеЗаказов тогда
	
	//+++( 24.10.2018 -----предварительный подсчет-------------
		колСтопЛистРазрешен=0; колСтопЛистНеРазрешен=0;
	для каждого стр1 из ТабличноеПоле1 цикл
		Если стр1.флаг тогда
			
			Если стр1.ЗаказПокупателя.Услуги.Количество()>0 тогда //07.03.2017
				Сообщить("ВНИМАНИЕ! "+строка(стр1.ЗаказПокупателя)+" - содержит услуги и он не будет объединяться для перемещения!", СтатусСообщения.Внимание);
				стр1.флаг = ложь;
				продолжить;
		//+++ 24.10.2018 ---------------------------------------------------------------------------------------------
			ИначеЕсли ЕстьТоварыСтопЛиста( стр1.ЗаказПокупателя ) тогда
				если стр1.ЗаказПокупателя.РазрешитьГрузитьТоварыИзСтопЛиста тогда
					колСтопЛистРазрешен = колСтопЛистРазрешен + 1;
		        иначе
					колСтопЛистНеРазрешен = колСтопЛистНеРазрешен + 1;
				КонецЕсли;
			КонецЕсли;	
			
		КонецЕсли;
	КонецЦикла;
	
	// --- Задача № 57245 --- контроль стоп-листа п.1 ( нельзя Разрешенные с НеРазрешенными! )--------------------------------
	Если (колСтопЛистРазрешен*колСтопЛистНеРазрешен <> 0) тогда
		Для каждого стр1 из ТабличноеПоле1 цикл
			Если стр1.Флаг и НельзяОбъединятьНеПодтвержденныйЗаказВКоторомЕстьТоварыСтопЛиста(стр1.ЗаказПокупателя) тогда // НЕЛЬЗЯ ОБЪЕДИНЯТЬ!
				Сообщить("ВНИМАНИЕ! "+строка(стр1.ЗаказПокупателя)+" - содержит диски стоп-листа без разрешения к отгрузке!", СтатусСообщения.Внимание);
				стр1.флаг = ложь;
				продолжить;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	 
//+++ после проверки стоп-листов - определяем список заказов +++		
	Для каждого стр1 из ТабличноеПоле1 цикл
		Если стр1.Флаг тогда
		СписокЗаказов.Добавить(стр1.ЗаказПокупателя );
		КонецЕсли;
	КонецЦикла;		

КонецЕсли;
//====================================================================================
Если СписокЗаказов.Количество()=0 тогда 
		Предупреждение("Нет"+?(транзит," транзитных","")+" заказов покупателя 
		|для объединения по договорам, в которых есть: "+строка(ТекстВДоговоре)+"
		|с датой отгрузки: "+строка(ДатаОтгрузки));
	возврат;
иначе
	Сообщить("Выбрано: "+строка(СписокЗаказов.Количество())+?(транзит," транзитных","")+" заказов покупателя для перемещения с датой отгрузки с: "+Формат(ДатаОтгрузки,"ДФ=dd.MM.yyyy")+" по "+Формат(ДатаОтгрузки1,"ДФ=dd.MM.yyyy"), СтатусСообщения.Информация);
КонецЕсли;	


//---------------Заказанные и неотгруженные Товары по этим заказам--------------------------------------- 
 запрос.УстановитьПараметр("СписокЗаказов", СписокЗаказов);
 
 списПодр7 = новый СписокЗначений; //список подразделенией 7 дней держится "статус" согласования цен
 списПодр7.Добавить( справочники.Подразделения.НайтиПоКоду("00005")); //Яр
 списПодр7.Добавить( справочники.Подразделения.НайтиПоКоду("00112")); //СПб
 списПодр7.Добавить( справочники.Подразделения.НайтиПоКоду("00133")); //Мск 
 запрос.УстановитьПараметр("списПодр7", списПодр7 );
 запрос.УстановитьПараметр("ТекДата", ТекущаяДата() );
 
 Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
                |	ЗаказыПокупателя.Номенклатура КАК Номенклатура,
                |	ЗаказыПокупателя.КоличествоОстаток КАК Количество,
                |	ЗаказыПокупателя.СуммаУпрОстаток КАК Сумма,
                |	ЗаказыПокупателя.ЗаказПокупателя
				//+++( 28.08.2018 
                |	, ЗаказПокупателяТовары.Статус КАК Статус,
                |	ЗаказПокупателяТовары.Статус КАК СтатусКол,
                |	ЗаказПокупателяТовары.Цена КАК Цена,
                |	РАЗНОСТЬДАТ(ЗаказыПокупателя.ЗаказПокупателя.Дата, &ТекДата, ДЕНЬ) КАК ЧислоДнейЗаказа,
                |	ВЫБОР
                |		КОГДА ЗаказыПокупателя.ЗаказПокупателя.Подразделение В (&списПодр7)
                |			ТОГДА ИСТИНА
                |		ИНАЧЕ ЛОЖЬ
                |	КОНЕЦ КАК Подразделение7
                |ИЗ
                |	РегистрНакопления.ЗаказыПокупателей.Остатки(
                |			,
                |			ЗаказПокупателя В (&СписокЗаказов)
                |				И (ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.ПустаяСсылка)
                |					ИЛИ ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.Получен))
                |				И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателя
              	//+++( 28.08.2018 
               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                |			ЗакТовары.Статус КАК Статус,
                |			ЗакТовары.Номенклатура КАК Номенклатура,
                |			ЗакТовары.Ссылка КАК Заказ,
                |			ЗакТовары.Цена КАК Цена
                |		ИЗ
                |			Документ.ЗаказПокупателя.Товары КАК ЗакТовары
                |		ГДЕ
                |			ЗакТовары.Ссылка В(&СписокЗаказов)) КАК ЗаказПокупателяТовары
                |		ПО ЗаказыПокупателя.ЗаказПокупателя = ЗаказПокупателяТовары.Заказ
                |			И ЗаказыПокупателя.Номенклатура = ЗаказПокупателяТовары.Номенклатура
                |ГДЕ
                |	ЕСТЬNULL(ЗаказыПокупателя.КоличествоОстаток, 0) > 0
                |
                |УПОРЯДОЧИТЬ ПО
                |	ЗаказыПокупателя.Номенклатура.Производитель,
                |	Номенклатура
                |ИТОГИ
                |	СУММА(Количество),
                |	СУММА(Сумма)
               	//+++( 28.08.2018 
             	|	,МАКСИМУМ(Статус),
                |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусКол),
                |	МАКСИМУМ(Цена),
                |	МАКСИМУМ(ЧислоДнейЗаказа),
                |	МАКСИМУМ(Подразделение7)
                |ПО
                |	Номенклатура
                |АВТОУПОРЯДОЧИВАНИЕ"; 
	ОбщийЗаказТовары = запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);


	Если ОбщийЗаказТовары.Количество()=0 тогда 
	//	#Если НаКлиенте тогда
			Сообщить("--- Нет заказанных товаров для объединения! ---", СтатусСообщения.Внимание);
	//	#КонецЕсли	
		возврат;
	иначе
	//	#Если НаКлиенте тогда
		КолТов = ОбщийЗаказТовары.Количество();
		Сообщить("Заказано "+ строка(КолТов)+" товаров для объединения.", СтатусСообщения.Информация);
	//	#КонецЕсли	
	КонецЕсли;	


	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Вы уверены, что действительно хотите создать 
				   |Один общий заказ для перемещения на "+строка(Филиал)+" 
				   |для "+строка(СписокЗаказов.Количество())+" заказов?", Режим, 0, КодВозвратаДиалога.Нет, "Предупреждение!");
	Если Ответ = КодВозвратаДиалога.Нет Тогда
	    Возврат;
	КонецЕсли;


 //2.создаем общий суммарный заказ
докОбщийЗаказ = документы.ЗаказПокупателя.СоздатьДокумент();
ЗаполнитьЗначенияСвойств(докОбщийЗаказ, СписокЗаказов[0].Значение); // по 1-му заполняем основные реквизиты Общего документа

//+++ 03.04.2014
докОбщийЗаказ.ДоговорКонтрагента = ДоговорКлиента;
докОбщийЗаказ.Ответственный	= докОбщийЗаказ.ДоговорКонтрагента.ОтветственноеЛицо;
докОбщийЗаказ.Контрагент 	= ДоговорКлиента.Владелец;
докОбщийЗаказ.Дата          = ТекущаяДата(); 
докОбщийЗаказ.Проверен 			 = Истина;
докОбщийЗаказ.АвтоРезервирование = Истина;
докОбщийЗаказ.ВводитьТолькоПеремещение = Истина;
докОбщийЗаказ.Номер = ""; // автоопределение номера при записи!
докОбщийЗаказ.Подразделение = справочники.Подразделения.НайтиПоКоду("00005"); // +++ 31.07.2014 - Принудительно Яршинторг!

УстановитьНомерДокумента(докОбщийЗаказ); //сразу определим номер общего документа!

докОбщийЗаказ.НомерТорговойТочкиКонтрагента = 0;   //11.02.2016

//23.09.2016 - уже не с подразделения склада!
// далее объединяется через 246 обработку
докОбщийЗаказ.ОтгрузкаСПодразделенияСклада = ЛОЖЬ; 
докОбщийЗаказ.АдресДоставки = "";
докОбщийЗаказ.ДатаОтгрузки = макс( НачалоДня(ТекущаяДата()), ДатаОтгрузки );

 СписокЗак = новый СписокЗначений;
  
докОбщийЗаказ.Товары.Очистить();
если докОбщийЗаказ.ВалютаДокумента.Код="643" //+++ 28.08.2018
	тогда руб = "р."; 
	иначе руб = докОбщийЗаказ.ВалютаДокумента.Наименование;
КонецЕсли;

СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); //28.12.2018
чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );
	
пока ОбщийЗаказТовары.Следующий() цикл
	стр1 = докОбщийЗаказ.Товары.Добавить();
	
	стр1.Номенклатура = ОбщийЗаказТовары.Номенклатура;
	стр1.Количество   = ОбщийЗаказТовары.Количество;
	стр1.Сумма   	  = ОбщийЗаказТовары.Сумма;
	
	//+++( 28.08.2018 --- статус сохраняется если только одинаковый статус 1 товара в разных заказах! и не более 7 дней для Яр,Спб,Мск, иначе не более 14 дней----
	Если ОбщийЗаказТовары.СтатусКол=1 
		и ( (ОбщийЗаказТовары.Подразделение7 и ОбщийЗаказТовары.ЧислоДнейЗаказа<=7)
		или (не ОбщийЗаказТовары.Подразделение7 и ОбщийЗаказТовары.ЧислоДнейЗаказа<=14)
		  ) тогда 
		стр1.Статус = ОбщийЗаказТовары.Статус;
		стр1.Цена   = ОбщийЗаказТовары.Цена;
		сообщить(строка(стр1.НомерСтроки)+") Статус: "+	строка(стр1.Статус)+" для Цены: "+строка(стр1.Цена)+руб
							+" по товару: "+строка(стр1.Номенклатура.Код)+" "+строка(стр1.Номенклатура), СтатусСообщения.Информация);
	иначе	
		стр1.Цена = ?(стр1.Количество=0, 0, Окр(стр1.Сумма / стр1.Количество, 2) );
		
		сообщить(строка(стр1.НомерСтроки)+") "+?(ОбщийЗаказТовары.СтатусКол>1,"разные статусы","")
		+" по товару: "+строка(стр1.Номенклатура.Код)+" "+строка(стр1.Номенклатура)
		+" Цена средняя: "+строка(стр1.Цена)+руб+?(стр1.Цена = ОбщийЗаказТовары.Цена, " НЕ","")+" отличается от Макс.Цены: "+строка(ОбщийЗаказТовары.Цена)+руб, СтатусСообщения.Внимание);
	КонецЕсли;	
	//+++)
	
	стр1.СтавкаНДС = СтавкаНДС_2019;   //28.12.2018
	стр1.СуммаНДС = Окр( стр1.Сумма * чНДС/(100+чНДС), 2);
	
	стр1.ЕдиницаИзмерения = стр1.Номенклатура.ЕдиницаХраненияОстатков;
	стр1.Коэффициент = 1;
	стр1.КоличествоМест = стр1.Количество;
	выбЗак = ОбщийЗаказТовары.Выбрать();
	пока выбЗак.Следующий() цикл
		Если СписокЗак.Количество()>0 тогда
			Если СписокЗак.НайтиПоЗначению(выбЗак.ЗаказПокупателя)=неопределено тогда
				СписокЗак.Добавить(выбЗак.ЗаказПокупателя);
			КонецЕсли;
		иначе
			СписокЗак.Добавить(выбЗак.ЗаказПокупателя);
		КонецЕсли;	
	КонецЦикла;	
КонецЦикла;

докОбщийЗаказ.Заказы.Очистить(); //все заказы записываем в ТЧ как они есть
докОбщийЗаказ.Заказы.ЗагрузитьКолонку(СписокЗак.ВыгрузитьЗначения(),"ЗаказПокупателя"); 

//(+++ 13.10.2017 --------по задаче № 34553-------------------------------------------------------------
таб = новый ТаблицаЗначений;
таб.Колонки.Добавить("Крышка");
таб.Колонки.Добавить("Количество");
для каждого стрТаб1 из ТабличноеПоле1 цикл
	Если не стрТаб1.Флаг тогда
		продолжить;
	КонецЕсли;	
	таб1 = стрТаб1.ЗаказПокупателя.Крышки.Выгрузить();
	//СклеитьТаблицы
	для каждого стр1 из таб1 цикл
		стр0 = таб.добавить();
		ЗаполнитьЗначенияСвойств(стр0, стр1);
	КонецЦикла;	
КонецЦикла;	
//-------------устраненеие дублей товаров!---------------------------------
таб.Свернуть("Крышка", "Количество");
докОбщийЗаказ.Крышки.очистить();
докОбщийЗаказ.Крышки.Загрузить( таб );
//+++) 

//3.отменяем проведение и ставим X на старых заказах и проводим новый общий заказ в Одной Транзакции!
коммент = "";
 
попытка		
 //ЗДЕСЬ!
	 НачатьТранзакцию(); //+++ 26.12.2014   РежимУправленияБлокировкойДанных.Управляемый
	//+++ 11.10.2013
	Если СписокЗак.Количество()<СписокЗаказов.Количество() тогда
		Сообщить("-----Не Все заказы из избраннных попали в объединение!-----");
		для i=0 по СписокЗаказов.Количество()-1 цикл
			Если СписокЗак.НайтиПоЗначению(СписокЗаказов[i].Значение)=неопределено тогда
				Сообщить(строка(СписокЗаказов[i].Значение)+" - не будет объединен, так как по нему нет заказанных товаров!", СтатусСообщения.Внимание);
        	КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	Сообщить(строка(СписокЗак.Количество())+"--------------------------------------------------");
	
	  СуммаПоДокументам = 0;
	  Контр  = "";   
	  Контр1 = неопределено;
	  списПодозреваемых = "";	
	  
 Статус1 = неопределено;//24.03.2017
Поставщик1 = справочники.Контрагенты.ПустаяСсылка();	

	для i=0 по СписокЗак.Количество()-1 цикл
		 докОб = СписокЗак[i].Значение.ПолучитьОбъект();
		 
		 Если Контр1=неопределено тогда  //+++ 06.04.2015
			 Контр1 = докОб.Контрагент;
			 Контр = строка(Контр1);
		 ИначеЕсли Контр1 <> докОб.Контрагент тогда
			 Контр= "";
		 КонецЕсли;
			 
		 докОб.Транзит = Истина;
		 докОб.Проверен = ЛОЖЬ; //17.03.2016
		 
		 номерДок = докОб.Номер;
		 докОб.Подразделение = Филиал; // после изменения филиала - номер документа меняется!
		 Если Филиал.ОбособленноеПодразделение тогда //+++ 26.12.2017
		 докОб.Грузоотправитель = Филиал.Контрагент;
		 КонецЕсли;
		 УстановитьНомерДокумента(ДокОб);//+++ номер должен стать СП, РД, ЕК или МС
		 
		 //20.01.2017
		 Если ЗначениеЗаполнено(ДокОб.статус) тогда  //24.03.2017
			 списПодозреваемых = списПодозреваемых+ докОб.Номер+", ";
			 Если Статус1 <> перечисления.СтатусыЗаказов.ПолученЧастично тогда 
			 Статус1    = ДокОб.статус;
			 Поставщик1 = ДокОб.Поставщик;
			 КонецЕсли;
		 КонецЕсли;	

	 
		 докОб.Комментарий = "Номер изменен с "+номерДок+" на "+докОб.Номер+". Перемещение из Ярославля >>"+строка(докОбщийЗаказ.Номер)+"#
		 |"+докОб.Комментарий;
		 
		 //--------------для разрешения отмены проведения!-------------------------
		 услОтмены = (докОб.Контрагент.ОсновнойМенеджерКонтрагента = ПараметрыСеанса.ТекущийПользователь 
			ИЛИ докОб.ДоговорКонтрагента.ОтветственноеЛицо = ПараметрыСеанса.ТекущийПользователь )
			ИЛИ  РольДоступна("ПолныеПрава");
			
		//+++ 22.10.2014 
		старыйДоговор = докОб.ДоговорКонтрагента;
		Если МенятьДоговор тогда
			Если старыйДоговор.ОтветственноеЛицо.ОсновноеПодразделение <> докОб.Подразделение тогда
			докОб.ДоговорКонтрагента = ОбменСУТИнтернетМагазин.найтиДоговорФакторингаПоОтветственному( докОб ); // по Филиалу!
			КонецЕсли;
		КонецЕсли;
		новыйДоговор  = докОб.ДоговорКонтрагента;
		Если новыйДоговор <> старыйДоговор тогда
			сообщить("Договор по менеджеру: "+строка(старыйДоговор.ОтветственноеЛицо)+" -> заменен на договор "+строка(новыйДоговор.ОтветственноеЛицо), СтатусСообщения.Информация);
			докОб.Ответственный = новыйДоговор.ОтветственноеЛицо; //18.04.2018
		КонецЕсли;	

//23.09.2016 - не надо так менять!
		 докОб.ОбменДанными.Загрузка = Истина;   //ничего не проверять!
		// докОб.Записать(РежимЗаписиДокумента.Проведение);
		 докОб.Записать(РежимЗаписиДокумента.Запись);
		 докОб.ОбменДанными.Загрузка = ЛОЖЬ;
		//  регистрация при записи
		
		Сообщить("   Изменен документ: "+строка(докОб) , СтатусСообщения.Информация);
		Сообщить("   "+?(старыйДоговор=докОб.ДоговорКонтрагента, 
					 "Договор остался прежним: "+строка(старыйДоговор.Код)+") "+строка(старыйДоговор)+" ("+строка(старыйДоговор.ОтветственноеЛицо)+")", 
					 
					" Изменен договор: "+строка(старыйДоговор.Код)+") "+строка(старыйДоговор)+" ("+строка(старыйДоговор.ОтветственноеЛицо)
					+") >> "+строка(новыйДоговор.Код)+") "+строка(новыйДоговор)+" ("+строка(новыйДоговор.ОтветственноеЛицо)+")"   ), ?(старыйДоговор=докОб.ДоговорКонтрагента, СтатусСообщения.Внимание, СтатусСообщения.Информация) );
		 
		 СуммаПоДокументам =  СуммаПоДокументам + докОб.суммаДокумента;
		 коммент = коммент + докОб.Номер+"("+номерДок+"); ";
		 
		//+++ 23.01.2015 - циклическая....	 
	//14.11.2014 --- ХИТРЕЕ чем при Объединении... 
	//если это уже заказ для перемещения для Подразделения... и его еще раз перемещают на Москву
	ДобавитьЗаказВТЧЗаказы(докОб.ссылка, докОбщийЗаказ);// добавляем его содержимое...
	КонецЦикла;	
	докОбщийЗаказ.Комментарий = "# общ.заказ "+?(Контр="", ": "," "+Контр+" : ")+ коммент;
	
	//+++ 19.01.2015 регистрация для обмена с МИМ
	докОбщийЗаказ.ТипЗаказа = 7;
	
	докОбщийЗаказ.ДокументОснование = Документы.ЗаказПокупателяСезонный.ПустаяСсылка();
	
	Если Статус1 = неопределено тогда   
		докОбщийЗаказ.Статус     = перечисления.СтатусыЗаказов.ПустаяСсылка();
		докОбщийЗаказ.Поставщик  = справочники.Контрагенты.ПустаяСсылка();
	Иначе
		докОбщийЗаказ.Статус 	 = Статус1;   // если уже все пришло...
		докОбщийЗаказ.Поставщик  = Поставщик1;
	КонецЕсли;	
	
	докОбщийЗаказ.Записать(РежимЗаписиДокумента.Проведение); 
	
	 //27.02.2017 - непроделен или ушел на поставщика?!
		Если не докОбщийЗаказ.проверен 
			 или не( докОбщийЗаказ.статус.Пустая() 
			         или докОбщийЗаказ.статус = перечисления.СтатусыЗаказов.Получен    //27.03.2017
					) 
			 // или не докОбщийЗаказ.Поставщик.пустая() 
			 тогда 
			 
			 ОтменитьТранзакцию();
			 Сообщить("--- В Одном из заказов: "+списПодозреваемых+" - товары не полностью пришли от Поставщика или пришли на склад Брака!
			 		  |Необходимо Перепровести проблемные заказы и, при отсутствие товаров - Разделить заказы по наличию
					  |Только после этого можно будет Объединенить заказы в общий!", СтатусСообщения.Внимание);
		     возврат;
			 
		 КонецЕсли; 
	
	ЗафиксироватьТранзакцию();
//	#Если НаКлиенте тогда
		Сообщить("+++ Успешно создан один общий заказ: "+строка(докОбщийЗаказ.Ссылка)+" и изменено "+строка(СписокЗаказов.Количество())+" заказов: "+коммент, СтатусСообщения.Информация);
//	#КонецЕсли	

	Если докОбщийЗаказ.СуммаДокумента<>СуммаПоДокументам тогда
		Сообщить("Сумма по товарам "+строка(СписокЗак.Количество())+" документов отличается от суммы общего заказа: "+строка(СуммаПоДокументам)+" - "+строка(докОбщийЗаказ.СуммаДокумента)+" = "+строка(СуммаПоДокументам -докОбщийЗаказ.СуммаДокумента)+"р.", СтатусСообщения.Внимание);
	//иначе
		//Сообщить("Сумма по "+строка(КолТов)+" товарам из "+строка(СписокЗак.Количество())+" заказов с суммой общего заказа.", СтатусСообщения.Информация);
	КонецЕсли;
	
	ПолеВвода1 = докОбщийЗаказ.Ссылка;  //сразу для открытия
	сигнал();	
Исключение
	ОтменитьТранзакцию();
	 докОб.ОбменДанными.Загрузка = ЛОЖЬ;
	Сообщить("--- "+строка(докОб)+" --- не удалось создать общий заказ: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	Предупреждение(" Ошибка при создании Общего заказа!", 30);
	сигнал();сигнал();сигнал();
КонецПопытки;
	 
КонецПроцедуры

Процедура ПолучитьЗаказыНажатие(Элемент)
	ТабличноеПоле1.Очистить();
	ТолькоПрочитать = Истина;
	ТекстВДоговоре = "Перемещение на Филиал";
	ОбъединитьЗаказыПокупателя(ДатаОтгрузки,ТекстВДоговоре,ТолькоПрочитать);  	//ВЫПОЛНЕНИЕ
	ВесОбъемОбновитьИтоги();
КонецПроцедуры


Процедура ПриОткрытии()
	
	Флажок1 = ЛОЖЬ;
	ДатаОтгрузки =  НачалоДня( ТекущаяДата() )+ 86400;  //завтра
	ДатаОтгрузки1 = ДатаОтгрузки ; // целый день
	
	Филиал = справочники.Подразделения.НайтиПоКоду("00106"); //РнД
	ПолучитьСписокМен();

	Контрагент = Филиал.Контрагент; //справочники.Контрагенты.НайтиПоКоду("93187");
	ДоговорКлиента = Контрагент.ОсновнойДоговорКонтрагента;
	ЭлементыФормы.МенОбщДоговора.Заголовок = Строка(ДоговорКлиента.ОтветственноеЛицо);

	МенятьДоговор = Истина;
	
	//02.12.2016
	Если РольДоступна("ПравоЗавершенияРаботыПользователей") тогда
		ЭлементыФормы.ПолеВвода1.ТолькоПросмотр = ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Отменить.Доступность = Истина;
	КонецЕсли;	
	
КонецПроцедуры


Процедура УдалитьКорректировкиПоДокументу(ЗакПокСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	КорректировкаЗаказаПокупателя.Ссылка,
	               |	КорректировкаЗаказаПокупателя.ЗаказПокупателя
	               |ИЗ
	               |	Документ.КорректировкаЗаказаПокупателя КАК КорректировкаЗаказаПокупателя
	               |ГДЕ
	               |	КорректировкаЗаказаПокупателя.ЗаказПокупателя = &ЗаказПокупателя";
	
	Запрос.УстановитьПараметр("ЗаказПокупателя", ЗакПокСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		докКорр = выборка.Ссылка.ПолучитьОбъект();	
		докКорр.ПометкаУдаления = Истина;
		докКорр.Комментарий = "Удален автоматически "+Строка(ТекущаяДата())+" # "+докКорр.Комментарий;
		попытка
			докКорр.Записать(РежимЗаписиДокумента.ОтменаПроведения);
    		ОбменСУТИнтернетМагазин.ВключитьРегистрациюОбъектаОИМ(выборка.ЗаказПокупателя);//+++ 02.11.2016 регистрация Заказа! для обмена с МИМ
	
			сообщить(" Удален документ: "+строка(докКорр)+" на сумму: "+ докКорр.СуммаДокумента);
					 
		исключение
			сообщить(" Не удалось удалить док: "+строка(докКорр) , СтатусСообщения.Внимание);
		конецПопытки;	
	КонецЦикла;
	
КонецПроцедуры

Процедура ДоговорКлиентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Клиент = справочники.Контрагенты.НайтиПоКоду(КодКлиента); 
	
		формаКонтр = справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора();
		формаКонтр.СправочникСписок.Отбор.Владелец.ВидСравнения = видСравнения.Равно;
		формаКонтр.СправочникСписок.Отбор.Владелец.Значение = Клиент;
		формаКонтр.СправочникСписок.Отбор.Владелец.Использование = Истина;
		формаКонтр.ЭлементыФормы.СправочникСписок.НастройкаОтбора["Владелец"].Доступность = Ложь;
		
		формаКонтр.СправочникСписок.Отбор.ВидДоговора.ВидСравнения = видСравнения.Равно;
		формаКонтр.СправочникСписок.Отбор.ВидДоговора.Значение = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
		формаКонтр.СправочникСписок.Отбор.ВидДоговора.Использование = Истина;
		формаКонтр.ЭлементыФормы.СправочникСписок.НастройкаОтбора["ВидДоговора"].Доступность = Ложь;
		
		ДоговорКлиента = формаКонтр.ОткрытьМодально();
		
		ЭлементыФормы.МенОбщДоговора.Заголовок = Строка(ДоговорКлиента.ОтветственноеЛицо);
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаОтгрузки, ?(ДатаОтгрузки1='0001-01-01', ДатаОтгрузки1, КонецДня(ДатаОтгрузки1)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаОтгрузки  = НастройкаПериода.ПолучитьДатуНачала();
		ДатаОтгрузки1 = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ФилиалПриИзменении(Элемент)
	
	Если Филиал.ОбособленноеПодразделение тогда
		КодКлиента = сокрЛП(филиал.Контрагент.Код);
	//Если Филиал = справочники.Подразделения.НайтиПоКоду("00106") тогда         //РнД
	//	КодКлиента = "93187";
	//ИначеЕсли Филиал = справочники.Подразделения.НайтиПоКоду("00112") тогда    //СПб
	//	КодКлиента = "П000835";
	//ИначеЕсли Филиал = справочники.Подразделения.НайтиПоКоду("00122") тогда    //Екат
	//	КодКлиента = "93801";
	Иначе
		 КодКлиента = "ф1ф2ф3";
		 Предупреждение("Можно выбирать только Филиал!
		 |Подразделение "+строка(Филиал)+"
		 |не является обособленным подразделением!", 30);
		 СписокМенеджеровПодразделения.Очистить();
		 Возврат;
 	КонецЕсли;	 
	
	Контрагент = справочники.Контрагенты.НайтиПоКоду(КодКлиента);
	ДоговорКлиента = Контрагент.ОсновнойДоговорКонтрагента;
	ЭлементыФормы.МенОбщДоговора.Заголовок = Строка(ДоговорКлиента.ОтветственноеЛицо);
	
	Контрагент = справочники.Контрагенты.НайтиПоКоду(КодКлиента);
	ПолучитьСписокМен();
	
КонецПроцедуры


процедура ПолучитьСписокМен()
	
СписокМенеджеровПодразделения.Очистить();
Если Флажок1 тогда
	СписокМенеджеровПодразделения.Добавить(ПараметрыСеанса.ТекущийПользователь);
иначе
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	 |	Пользователи.Ссылка
	 |ИЗ
	 |	Справочник.Пользователи КАК Пользователи
	 |ГДЕ
	 |	НЕ Пользователи.ПометкаУдаления
	 |	И НЕ Пользователи.Заблокирован
	 |	И Пользователи.ОсновноеПодразделение = &ОсновноеПодразделение";
	 
	 Запрос.УстановитьПараметр("ОсновноеПодразделение", Филиал);
	 
	 Результат = Запрос.Выполнить();
	 ТабЗнач = Результат.Выгрузить();	 
	
	СписокМенеджеровПодразделения.ЗагрузитьЗначения(ТабЗнач.ВыгрузитьКолонку("Ссылка"));
	
	//+++ 06.10.2015 - добавляем Бондаренко и Емельянова в Ект
	Если Филиал.Код = "00138" тогда
		СписокМенеджеровПодразделения.Вставить(0, справочники.Пользователи.НайтиПоКоду("Бондаренко") );
//17.02.2016		СписокМенеджеровПодразделения.Вставить(0, справочники.Пользователи.НайтиПоКоду("Емельянов Р.Е.") );
	КонецЕсли;
	
	//НЕ свои заказы...
	эл = СписокМенеджеровПодразделения.НайтиПоЗначению(глТекущийПользователь);
	Если эл <> неопределено тогда
		СписокМенеджеровПодразделения.Удалить(эл);
	КонецЕсли;
	
КонецЕсли;

КонецПроцедуры

Процедура Флажок1ПриИзменении(Элемент)
	ФилиалПриИзменении(неопределено);
КонецПроцедуры

Процедура КоманднаяПанель2ВыделитьВсе(Кнопка)
	всеФлаги(1);
	ВесОбъемОбновитьИтоги();
КонецПроцедуры

Процедура КоманднаяПанель2ОтменитьВсе(Кнопка)
	всеФлаги(0);
	ЭлементыФормы.ТабличноеПоле1.Колонки.Вес.ТекстПодвала   = "0";
	ЭлементыФормы.ТабличноеПоле1.Колонки.Объем.ТекстПодвала = "0";
КонецПроцедуры

Процедура КоманднаяПанель2Инвертировать(Кнопка)
	всеФлаги(-1);
	ВесОбъемОбновитьИтоги();
КонецПроцедуры

Процедура всеФлаги(вариант=0)
	для каждого стр1 из ТабличноеПоле1 цикл
		Если вариант=1 тогда
			стр1.Флаг = Истина;
		иначеЕсли вариант=0 тогда
			стр1.Флаг = ЛОЖЬ;
		иначе	
			стр1.Флаг = не стр1.Флаг;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ТабличноеПоле1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ЗаказПокупателя.Проверен тогда
		Если ДанныеСтроки.ЗаказПокупателя.Резерв тогда
 			ОформлениеСтроки.Шрифт = мЖирныйКурсивШрифт;
		Иначе
 			ОформлениеСтроки.Шрифт = мЖирныйШрифт;
		КонецЕсли;	
	ИначеЕсли ДанныеСтроки.ЗаказПокупателя.Резерв тогда
			ОформлениеСтроки.Шрифт = мКурсивШрифт;
	КонецЕсли;	
КонецПроцедуры

//02.12.2016 - обратное действие...
Процедура ОсновныеДействияФормыОтменить(Кнопка)
	// "# общ.заказ : СП067614(ТК273480); СП067615(ТК273820); СП067616(ТК268035); СП067617(ТК274338); СП067618(ТК273520); СП067619(ТК272324); СП067620(ТК272841); СП067621(ТК273741); СП067622(ТК273993); СП067623(ТК273739); СП067624(ТК273679); СП067625(ТК273168); СП067626(ТК273603); СП067627(ТК274324); СП067628(ТК274012); СП067629(ТК273949); СП067630(ТК273160); СП067631(ТК272901); СП067632(ТК274230); СП067633(ТК273441); СП067634(ТК273715); СП067635(ТК273888); СП067636(ТК274457); СП067637(ТК271306); СП067638(ТК273425)"
	списЗакТекст = ПолеВвода1.Комментарий;
	L = стрДлина(списЗакТекст);
	если найти(списЗакТекст, "# общ.заказ : ")<>1 тогда
		Предупреждение("Комментарий общего заказа - неправильный!", 10);
		возврат;
	иначе 
		списЗакТекст = прав(списЗакТекст, L-14);
	КонецЕсли;
	дата1 = ПолеВвода1.Дата;
//---------------------------------------------------
	списЗак  = ПолеВвода1.Заказы.Выгрузить();
	списЗак.Колонки.Добавить("НомерСтарый");
	
	Если списЗак.Количество()=0 тогда
		Предупреждение("Нет заказов, которые надо восстанавливать!");
		возврат;
	КонецЕсли;
	
Режим = РежимДиалогаВопрос.ДаНет;
Ответ = Вопрос("Вы действительно хотите отменить общий заказ и изменить все заказы филиала "+строка(Филиал)+" на Ярославские?", Режим, 0);
Если Ответ = КодВозвратаДиалога.Нет Тогда
    Возврат;
КонецЕсли;

	i=0;
	пока i<=списЗак.Количество()-1 цикл
		стр1 = списЗак[i];
		Если стр1.ЗаказПокупателя.ПометкаУдаления
			или стр1.ЗаказПокупателя.Подразделение <> Филиал тогда
			списЗак.Удалить( стр1 );
		иначе
			комм = стр1.ЗаказПокупателя.Комментарий; //Номер изменен с ТК274548 на СП067697. Перемещение из Ярославля >>ТК274683#
			началоКом = "Номер изменен с ";
			jj= найти(комм,началоКом);
			если jj=0 тогда
				комм = "";
			иначе
				комм = прав(комм, стрДлина(комм) - (jj-1) - стрДлина(началоКом));
				комм = лев(комм, найти(комм," на ")-1);
			КонецЕсли;	
			стр1.НомерСтарый = комм;
			i=i+1;
		КонецЕсли;
	КонецЦикла;	
	
	если списЗак.Количество()=0 тогда
		Предупреждение("Не выбраны заказы для восстановления!
		|Проверьте Филиал = подразделение в заказах...");
		возврат;
	КонецЕсли;	
//----начинаем транзакцию------------------------------------------------------	
	Подразделение0 = ПолеВвода1.Подразделение;
		закОбщ = ПолеВвода1.ПолучитьОбъект();
		закОбщ.Записать( РежимЗаписиДокумента.ОтменаПроведения );
		
		для каждого стр1 из  списЗак цикл
			зак1 = стр1.ЗаказПокупателя.ПолучитьОбъект();
			зак1.ПометкаУдаления = ложь;
			зак1.Подразделение = Подразделение0;
			
			номерНовый = зак1.Номер;
			зак1.Номер = стр1.НомерСтарый; // - не всегда работает!
			
			//убираем комментарий:
			//Номер изменен с ТК274548 на СП067697. Перемещение из Ярославля >>ТК274683#
			//Восстановлен номер ТК274548 из СП067697. Перемещение из Ярославля >>ТК274683#
			
			зак1.Комментарий = "Восстановлен номер "+стр1.НомерСтарый +" из "+номерНовый+"#"
				+прав(зак1.Комментарий, стрДлина(зак1.Комментарий) - найти(зак1.Комментарий, "#") );
			
			 зак1.Транзит  = ЛОЖЬ;
		 	 зак1.Проверен = Истина; //проделиваем обратно

	попытка
		 зак1.Записать(РежимЗаписиДокумента.Проведение);
		 Сообщить( строка(зак1)+" --- восстановлен "+номерНовый+">>"+стр1.НомерСтарый);
	исключение
		Сообщить(строка(зак1)+" - Ошибка : "+ОписаниеОшибки() );
	КонецПопытки;
			 
		КонецЦикла;
	Сообщить("--------------- обратное действие завершено -----------");
	
КонецПроцедуры

функция ПолучитьМаршрут(ЗакСсылка)
	рез = "";
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыМаршруты.Маршрут.Наименование как МаршрутНаименование
	               |ИЗ
	               |	РегистрСведений.ЗаказыМаршруты КАК ЗаказыМаршруты
	               |ГДЕ
	               |	ЗаказыМаршруты.ЗаказПокупателя = &ЗакСсылка";
	запрос.УстановитьПараметр("ЗакСсылка",ЗакСсылка);
    выборка = запрос.Выполнить().Выбрать();
	если выборка.Следующий() тогда
		рез = выборка.МаршрутНаименование;
	КонецЕсли;
	возврат рез;
КонецФункции

Процедура ТабличноеПоле1ПриПолученииДанных(Элемент, ОформленияСтрок)
	для каждого ОформлениеСтроки из ОформленияСтрок цикл
		Если ЗначениеЗаполнено(ОформлениеСтроки.Ячейки.Статус.Значение)
			или ОформлениеСтроки.Ячейки.ЗаказПокупателя.Значение.ВМаршрут тогда //+++ 27.07.2018 установлен маршрут!
			ОформлениеСтроки.ЦветФона = webЦвета.Желтый;
			
			Если ОформлениеСтроки.Ячейки.ЗаказПокупателя.Значение.ВМаршрут тогда //+++ 27.07.2018
				СсылкаЗаказ = ОформлениеСтроки.Ячейки.ЗаказПокупателя.Значение;
				резМаршрут = ПолучитьМаршрут(СсылкаЗаказ); 
 				Если резМаршрут<>"" тогда
					ОформлениеСтроки.ячейки.Статус.Текст = резМаршрут;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;	
		Если ОформлениеСтроки.Ячейки.ЗаказПокупателя.Значение.Услуги.Количество()>0 тогда
			ОформлениеСтроки.ЦветФона = webЦвета.Розовый;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьТекстЗапросаДляТабличногоПоляСтарый()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказыПокупателя.ЗаказПокупателя.Проверен и НЕ ЗаказыПокупателя.ЗаказПокупателя.Резерв КАК Флаг,
	|	ЗаказыПокупателя.ЗаказПокупателя.ДатаОтгрузки как ДатаОтгрузки,
	//24.03.2017
	|	ЗаказыПокупателя.ЗаказПокупателя.Статус как Статус,
	
	|	ЗаказыПокупателя.ЗаказПокупателя.Контрагент как Контрагент,
	|	ЗаказыПокупателя.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказыПокупателя.ЗаказПокупателя.ДоговорКонтрагента КАК Договор,
	|	ЗаказыПокупателя.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо.Наименование КАК Менеджер,
	|	ЗаказыПокупателя.ЗаказПокупателя.СуммаДокумента КАК Сумма,
	|	ЗаказыПокупателя.ЗаказПокупателя.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ЗаказыПокупателя.ЗаказПокупателя.Комментарий КАК Комментарий
	|ИЗ
	| РегистрНакопления.ЗаказыПокупателей.Остатки(&ТекДата,
	|				(ЗаказПокупателя.ДатаОтгрузки >= &ДатаОтгрузки И ЗаказПокупателя.ДатаОтгрузки <= &ДатаОтгрузки1 и ЗаказПокупателя.ТипЗаказа <> 13)
	|И ДоговорКонтрагента.ОтветственноеЛицо В (&СписокМенеджеровПодразделения)
	
	//+++ 01.12.2016	
	|	И ( ЗаказПокупателя.Статус=Значение(Перечисление.СтатусыЗаказов.ПустаяСсылка)
	|   или ЗаказПокупателя.Статус=Значение(Перечисление.СтатусыЗаказов.Получен) )
	
	
	//================ищем заказы с Ярославля, но по менеджерам подразделения===============================================
	|//ссайта			И ЗаказПокупателя.ссайта
	|					И ЗаказПокупателя.Проверен
	|					И НЕ ЗаказПокупателя.Транзит
	|) КАК ЗаказыПокупателя
	|ГДЕ
	| ЕСТЬNULL(ЗаказыПокупателя.КоличествоОстаток, 0) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Менеджер
	|АВТОУПОРЯДОЧИВАНИЕ"; 
	
	Возврат ТекстЗапроса;
	
КонецФункции  // ПолучитьТекстЗапросаДляТабличногоПоляСтарый()

Функция ПолучитьТекстЗапросаДляТабличногоПоля()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	зтЗаказы.ЗаказПокупателя.Проверен
	|		И НЕ зтЗаказы.ЗаказПокупателя.Резерв КАК Флаг,
	|	зтЗаказы.ЗаказПокупателя.ДатаОтгрузки КАК ДатаОтгрузки,
	|	зтЗаказы.ЗаказПокупателя.Статус КАК Статус,
	|	зтЗаказы.ЗаказПокупателя.Контрагент КАК Контрагент,
	|	зтЗаказы.ЗаказПокупателя,
	|	зтЗаказы.Договор,
	|	зтЗаказы.Договор.ОтветственноеЛицо.Наименование КАК Менеджер,
	|	зтЗаказы.ЗаказПокупателя.СуммаДокумента КАК Сумма,
	|	зтЗаказы.ЗаказПокупателя.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	зтЗаказы.ЗаказПокупателя.Комментарий КАК Комментарий,
	|	зтЗаказы.Вес,
	|	зтЗаказы.Объем
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыПокупателя.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗаказыПокупателя.ЗаказПокупателя.ДоговорКонтрагента КАК Договор,
	|		СУММА(ЗаказыПокупателя.ЕдиницаИзмерения.Вес * ЗаказыПокупателя.КоличествоОстаток) КАК Вес,
	|		СУММА(ВЫБОР
	|				КОГДА ЗаказыПокупателя.Номенклатура.Родитель В (&масГруз2)
	|					ТОГДА ЗаказыПокупателя.ЕдиницаИзмерения.Объем * ЗаказыПокупателя.КоличествоОстаток * 1.3
	|				ИНАЧЕ ЗаказыПокупателя.ЕдиницаИзмерения.Объем * ЗаказыПокупателя.КоличествоОстаток
	|			КОНЕЦ) КАК Объем
	|	ИЗ
	|		РегистрНакопления.ЗаказыПокупателей.Остатки(
	|				&ТекДата,
	|				ЗаказПокупателя.ДатаОтгрузки >= &ДатаОтгрузки
	|					И ЗаказПокупателя.ДатаОтгрузки <= &ДатаОтгрузки1
	|					И ЗаказПокупателя.ТипЗаказа <> 13
	|					И НЕ ДоговорКонтрагента.Владелец В (&СписокКонтрФилиалов)
	|					И ДоговорКонтрагента.ОтветственноеЛицо В (&СписокМенеджеровПодразделения)
	|					И (ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.ПустаяСсылка)
	|						ИЛИ ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.Получен))
	|					И ЗаказПокупателя.Проверен
	|					И ЗаказПокупателя.Транзит = ЛОЖЬ) КАК ЗаказыПокупателя
	|	ГДЕ
	|		ЕСТЬNULL(ЗаказыПокупателя.КоличествоОстаток, 0) > 0
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаказыПокупателя.ЗаказПокупателя,
	|		ЗаказыПокупателя.ЗаказПокупателя.ДоговорКонтрагента) КАК зтЗаказы";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаДляТабличногоПоля()

//21.11.2017
функция ПолучитьСписокКонтрФилиалов()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Подразделения.Контрагент
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	Подразделения.ОбособленноеПодразделение";
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();
	
	спис = новый СписокЗначений;
	спис.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Контрагент") );
	
	возврат Спис;
КонецФункции	

Функция ПолучитьДанныеДляТабличногоПоля(Запрос)
	
	запрос.УстановитьПараметр("ТекДата", КонецДня(ТекущаяДата()) );
	запрос.УстановитьПараметр("ДатаОтгрузки", НачалоДня(ДатаОтгрузки) );
	запрос.УстановитьПараметр("ДатаОтгрузки1",КонецДня(ДатаОтгрузки1) );
	запрос.УстановитьПараметр("СписокМенеджеровПодразделения", СписокМенеджеровПодразделения); //Инфинити Таерс
	
	СписокКонтрФилиалов = ПолучитьСписокКонтрФилиалов(); //21.11.2017
	запрос.УстановитьПараметр("СписокКонтрФилиалов",СписокКонтрФилиалов);
	
	//Запрос.Текст = ПолучитьТекстЗапросаДляТабличногоПоляСтарый();
	Запрос.Текст = ПолучитьТекстЗапросаДляТабличногоПоля();
	
//+++( 08.12.2017  по задаче № 37329
	масГруз = новый массив;
	масГруз.Добавить( справочники.Номенклатура.НайтиПоКоду("0001748"));
	масГруз.Добавить( справочники.Номенклатура.НайтиПоКоду("0001750"));
	масГруз.Добавить( справочники.Номенклатура.НайтиПоКоду("0080631"));
	Запрос2 = Новый Запрос;
	Запрос2.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ЭтоГруппа
	|	И Номенклатура.Ссылка В ИЕРАРХИИ(&масГруз)";
	Запрос2.УстановитьПараметр("масГруз", масГруз);
	Результат2 = Запрос2.Выполнить();
	табл2 = Результат2.Выгрузить();
	
	масГруз2 = табл2.ВыгрузитьКолонку("Ссылка");
	запрос.УстановитьПараметр("масГруз2", масГруз2);
//+++)
	
	Если ССайта тогда
		Запрос.Текст = стрЗаменить(Запрос.Текст ,"//ссайта", "");
	КонецЕсли;	
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции // ПолучитьДанныеДляТабличногоПоля()

Процедура ТабличноеПоле1ПослеУдаления(Элемент)
	
	ВесОбъемОбновитьИтоги();
	
КонецПроцедуры

Процедура ТабличноеПоле1ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ЭлементыФормы.ТабличноеПоле1.ТекущаяКолонка.Имя = "Флаг" Тогда
		ВесОбъемОбновитьИтоги();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВесОбъемОбновитьИтоги()
	
	ВесЛок   = 0;
	ОбъемЛок = 0;
	
	СтруктОтбора = Новый Структура("Флаг", Истина);
	МасСтр = ТабличноеПоле1.НайтиСтроки(СтруктОтбора);
	
	Для Каждого ТекСтр Из МасСтр Цикл
		ВесЛок   = ВесЛок   + ТекСтр.Вес;
		ОбъемЛок = ОбъемЛок + ТекСтр.Объем;
	КонецЦикла;
	
	ЭлементыФормы.ТабличноеПоле1.Колонки.Вес.ТекстПодвала   = "" + ВесЛок;
	ЭлементыФормы.ТабличноеПоле1.Колонки.Объем.ТекстПодвала = "" + ОбъемЛок;
	
КонецПроцедуры // ВесОбъемОбновитьИтоги()


 КодКлиента = "93187";  //РнД
 мЖирныйШрифт = Новый Шрифт(,, Истина);
 мКурсивШрифт = Новый Шрифт(,,, Истина);
 мЖирныйКурсивШрифт = Новый Шрифт(,,Истина , Истина);
