
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);
    ТабДок.ФиксацияСверху =4;
	ТабДок.ФиксацияСлева =4;
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	
	// формирование таблицы кредиторской задолженности
 
	ТЗДолги= Новый ТаблицаЗначений;	
	ТЗДолги.Колонки.Добавить("Контрагент");
	ТЗДолги.Колонки.Добавить("ДоговорКонтрагента");
	ТЗДолги.Колонки.Добавить("Сделка");
	ТЗДолги.Колонки.Добавить("ДатаОплаты");
	ТЗДолги.Колонки.Добавить("ОстатокДолга");

	Запрос=Новый Запрос;
    Запрос.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата())+1);
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачДата));
	Запрос.УстановитьПараметр("Кредиторская", Перечисления.ВидыЗадолженности.Кредиторская);

	
Если УчитыватьВзаимныеОбязательства Тогда
Запрос.Текст ="ВЫБРАТЬ
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение КАК Подразделение,
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер,
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты КАК ДатаОплаты,
|	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток, 0) + ЕСТЬNULL(ЗачетВзаимныхОбязательств.СуммаУпрЗачетов, 0) КАК СуммаУпр
|ИЗ
|	(ВЫБРАТЬ
|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение КАК Подразделение,
|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер,
|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
|		ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
|		ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты КАК ДатаОплаты,
|		ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаУпрОстаток
|	ИЗ
|		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон, ) КАК ВзаиморасчетыСКонтрагентамиОстатки
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|				ВзаиморасчетовОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
|				СУММА(ВзаиморасчетовОстатки.СуммаУпрОстаток) КАК СуммаУпрОстаток
|			ИЗ
|				РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон, ) КАК ВзаиморасчетовОстатки
|			
|			СГРУППИРОВАТЬ ПО
|				ВзаиморасчетовОстатки.ДоговорКонтрагента) КАК ВзаиморасчетыСКонтрагентамиОстаткиНужногоТипа
|			ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = ВзаиморасчетыСКонтрагентамиОстаткиНужногоТипа.ДоговорКонтрагента
|				И (ВзаиморасчетыСКонтрагентамиОстаткиНужногоТипа.СуммаУпрОстаток < 0)) КАК ВзаиморасчетыСКонтрагентамиОстатки
|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.ДоговорКонтрагента КАК ДоговорКонтрагента,
|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сделка КАК Сделка,
|			СУММА(УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сумма) КАК СуммаУпрЗачетов
|		ИЗ
|			Документ.УправленческийЗачетВзаимныхОбязательств.СуммыДолга КАК УправленческийЗачетВзаимныхОбязательствСуммыДолга
|		ГДЕ
|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Ссылка.Проведен
|			И УправленческийЗачетВзаимныхОбязательствСуммыДолга.ВидЗадолженности = &Кредиторская
|			И УправленческийЗачетВзаимныхОбязательствСуммыДолга.Ссылка.Дата <= &ДатаКон
|		
|		СГРУППИРОВАТЬ ПО
|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.ДоговорКонтрагента,
|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сделка) КАК ЗачетВзаимныхОбязательств
|		ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = ЗачетВзаимныхОбязательств.ДоговорКонтрагента
|			И ВзаиморасчетыСКонтрагентамиОстатки.Сделка = ЗачетВзаимныхОбязательств.Сделка
|ГДЕ
|	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток, 0) + ЕСТЬNULL(ЗачетВзаимныхОбязательств.СуммаУпрЗачетов, 0) <> 0";
Иначе
Запрос.Текст="ВЫБРАТЬ 
	|ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение Подразделение,
	| ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо Менеджер,
	|ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец Контрагент,
	|ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	|ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
	|ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты ДатаОплаты,
	|ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток  СуммаУпр
	|ИЗ
	| РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон ) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВзаиморасчетовОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|				СУММА(ВзаиморасчетовОстатки.СуммаУпрОстаток) КАК СуммаУпрОстаток
	|			ИЗ
	|				РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон) КАК ВзаиморасчетовОстатки
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ВзаиморасчетовОстатки.ДоговорКонтрагента) КАК ВзаиморасчетыСКонтрагентамиОстаткиНужногоТипа
	|			ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = ВзаиморасчетыСКонтрагентамиОстаткиНужногоТипа.ДоговорКонтрагента
	|				И ВзаиморасчетыСКонтрагентамиОстаткиНужногоТипа.СуммаУпрОстаток <0"   ;
КонецЕсли;


	
	ТЗКредиторскаяЗадолженность=Запрос.Выполнить().Выгрузить();
	

	ЗапросПоЗаказамСГрафикамиОплат=Новый Запрос;
	ЗапросПоЗаказамСГрафикамиОплат.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон	, 	ДоговорКонтрагента.ВидДоговора = &СПоставщиком
	|			И ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ГрафикОплаты КАК ПоступлениеТоваровУслугГрафикОплаты
	|		ПО ВзаиморасчетыСКонтрагентамиОстатки.Сделка = ПоступлениеТоваровУслугГрафикОплаты.Ссылка.Сделка
	|		ГДЕ не ПоступлениеТоваровУслугГрафикОплаты.Ссылка Есть NULL
	|		УПОРЯДОЧИТЬ ПО Сделка.Дата";
	
	ЗапросПоЗаказамСГрафикамиОплат.УстановитьПараметр("ДатаКон",КонецДня(ТекущаяДата())+1);
	ЗапросПоЗаказамСГрафикамиОплат.УстановитьПараметр("ПоЗаказам",Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам);
	ЗапросПоЗаказамСГрафикамиОплат.УстановитьПараметр("СПоставщиком",Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);

	СписокЗаказовСГрафикамиОплат= Новый СписокЗначений;
	СписокЗаказовСГрафикамиОплат.ЗагрузитьЗначения(ЗапросПоЗаказамСГрафикамиОплат.Выполнить().Выгрузить().ВыгрузитьКолонку("Сделка"));
	
				
	сч=0;
	Пока сч < ТЗКредиторскаяЗадолженность.Количество()  Цикл
		Если ТипЗнч(ТЗКредиторскаяЗадолженность[сч].Сделка)=Тип("ДокументСсылка.ЗаказПоставщику")
			И СписокЗаказовСГрафикамиОплат.НайтиПоЗначению(ТЗКредиторскаяЗадолженность[сч].Сделка)<>Неопределено 
			 И ТЗКредиторскаяЗадолженность[сч].СуммаУпр<0 Тогда
			  ПолучитьДолгиПоставщикуПоСделке(ТЗКредиторскаяЗадолженность[сч].Сделка,-ТЗКредиторскаяЗадолженность[сч].СуммаУпр,ТЗДолги);
			  ТЗКредиторскаяЗадолженность.Удалить(сч);
		  Иначе
			  сч=сч+1;
		КонецЕсли;	
	КонецЦикла;	




Для каждого строкаТЗДолги ИЗ ТЗДолги Цикл
строкаКредиторскаяЗадолженность=ТЗКредиторскаяЗадолженность.Добавить();
строкаКредиторскаяЗадолженность.Подразделение=строкаТЗДолги.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение;
строкаКредиторскаяЗадолженность.Менеджер=строкаТЗДолги.ДоговорКонтрагента.ОтветственноеЛицо;
строкаКредиторскаяЗадолженность.Контрагент=строкаТЗДолги.Контрагент;
строкаКредиторскаяЗадолженность.ДоговорКонтрагента=строкаТЗДолги.ДоговорКонтрагента;
строкаКредиторскаяЗадолженность.Сделка=строкаТЗДолги.Сделка;
строкаКредиторскаяЗадолженность.ДатаОплаты=строкаТЗДолги.ДатаОплаты;
строкаКредиторскаяЗадолженность.СуммаУпр=-строкаТЗДолги.ОстатокДолга;
КонецЦикла;

ТЗКредиторскаяЗадолженность.Колонки.Добавить("СуммаПросрочки");
ТЗКредиторскаяЗадолженность.ЗаполнитьЗначения(0,"СуммаПросрочки");



// Сосчитаем просрочку
Для каждого строкаКредиторскаяЗадолженность ИЗ ТЗКредиторскаяЗадолженность Цикл
	Если не ЗначениеНеЗаполнено(строкаКредиторскаяЗадолженность.ДатаОплаты)  Тогда
		Если  НачалоДня(КонецДня(ТекущаяДата())+1)- строкаКредиторскаяЗадолженность.ДатаОплаты >0 Тогда
			строкаКредиторскаяЗадолженность.СуммаПросрочки=строкаКредиторскаяЗадолженность.СуммаУпр;
		КонецЕсли;	
	КонецЕсли;	
КонецЦикла;	

 ТЗКредиторскаяЗадолженностьПоКонтрагентам= ТЗКредиторскаяЗадолженность.Скопировать();
  ТЗКредиторскаяЗадолженностьПоКонтрагентам.Свернуть("Менеджер,Контрагент","СуммаУпр,СуммаПросрочки") ;
ТЗКредиторскаяЗадолженностьПоДоговорам= ТЗКредиторскаяЗадолженность.Скопировать();
  ТЗКредиторскаяЗадолженностьПоДоговорам.Свернуть("Менеджер,ДоговорКонтрагента","СуммаУпр,СуммаПросрочки") ;
 
	
	// формирование самого отчета
	
	
	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Б.ОтветственноеЛицо.ОсновноеПодразделение КАК Отдел,
	|	Б.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	Б.Контрагент КАК Контрагент,
	|	Б.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Б.Сделка,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 1
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода1,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 1
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа1,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 2
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода2,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 2
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа2,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 3
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода3,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 3
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа3,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 4
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода4,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 4
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа4,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 5
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода5,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 5
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа5,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 6
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода6,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 6
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа6,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 7
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода7,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 7
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа7,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 8
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода8,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 8
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа8,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 9
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода9,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 9
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа9,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 10
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода10,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 10
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа10,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 11
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода11,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 11
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа11,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 12
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода12,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 12
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа12,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 13
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода13,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 13
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа13,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 14
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода14,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 14
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа14,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 15
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода15,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 15
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа15,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 16
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода16,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 16
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа16,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 17
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода17,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 17
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа17,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 18
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода18,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 18
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа18,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 19
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода19,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 19
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа19,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 20
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода20,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 20
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа20,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 21
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода21,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 21
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа21,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 22
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода22,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 22
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа22,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 23
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода23,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 23
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа23,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 24
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода24,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 24
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа24,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 25
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода25,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 25
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа25,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 26
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода26,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 26
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа26,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 27
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода27,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 27
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа27,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 28
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода28,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 28
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа28,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 29
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода29,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 29
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа29,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 30
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода30,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 30
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа30,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 31
	|			ТОГДА Б.СуммаРасхода
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасхода31,
	|	ВЫБОР
	|		КОГДА ДЕНЬ(Б.ДатаРасхода) = 31
	|			ТОГДА Б.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПлатежа31,
	|	Б.СуммаРасхода КАК СуммаРасхода,
	|	Б.СуммаПлатежа КАК СуммаПлатежа
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(А.ДоговорКонтрагента, &ПустаяСсылка) = &ПустаяСсылка
	|				ТОГДА А.Контрагент.ОсновнойМенеджерКонтрагента
	|			ИНАЧЕ А.ДоговорКонтрагента.ОтветственноеЛицо
	|		КОНЕЦ КАК ОтветственноеЛицо,
	|		А.Контрагент КАК Контрагент,
	|		А.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		А.Сделка КАК Сделка,
	|		А.ДатаРасхода КАК ДатаРасхода,
	|		А.СуммаРасхода КАК СуммаРасхода,
	|		А.СуммаПлатежа КАК СуммаПлатежа
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЕСТЬNULL(ЗаявкиНаРасходованиеСредств.Контрагент, ПлатежныеПорученияИсходящие.Контрагент) КАК Контрагент,
	|			ЕСТЬNULL(ЗаявкиНаРасходованиеСредств.ДоговорКонтрагента, ПлатежныеПорученияИсходящие.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|			ЕСТЬNULL(ЗаявкиНаРасходованиеСредств.Сделка, ПлатежныеПорученияИсходящие.Сделка) КАК Сделка,
	|			ЕСТЬNULL(ЗаявкиНаРасходованиеСредств.ДатаРасхода, ПлатежныеПорученияИсходящие.ДатаОплаты) КАК ДатаРасхода,
	|			ЕСТЬNULL(ЗаявкиНаРасходованиеСредств.Сумма, 0) КАК СуммаРасхода,
	|			ЕСТЬNULL(ПлатежныеПорученияИсходящие.СуммаПлатежа, 0) КАК СуммаПлатежа
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ЗаявкиНаРасходованиеСредств.ДатаРасхода КАК ДатаРасхода,
	|				ЗаявкиНаРасходованиеСредств.Регистратор.Ссылка.Контрагент КАК Контрагент,
	|				ЗаявкиНаРасходованиеСредств.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|				ЗаявкиНаРасходованиеСредств.Сделка КАК Сделка,
	|				СУММА(ЗаявкиНаРасходованиеСредств.Сумма) КАК Сумма
	|			ИЗ
	|				РегистрНакопления.ЗаявкиНаРасходованиеСредств КАК ЗаявкиНаРасходованиеСредств
	|			ГДЕ
	//28.05.14 Смирнов Было |				ЗаявкиНаРасходованиеСредств.ПериодПланирования МЕЖДУ &ДатаНач И &ДатаКон
	|				ЗаявкиНаРасходованиеСредств.ДатаРасхода МЕЖДУ &ДатаНач И &ДатаКон
	|				И ЗаявкиНаРасходованиеСредств.Активность
	|				И ЗаявкиНаРасходованиеСредств.ВидДвижения = &ВидДвиженияПриход
	|			    И НЕ ЗаявкиНаРасходованиеСредств.Регистратор.Ссылка.ПометкаУдаления
	|				И (ЗаявкиНаРасходованиеСредств.Регистратор.Состояние <> &СостояниеЗаявки ) 
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ЗаявкиНаРасходованиеСредств.ДатаРасхода,
	|				ЗаявкиНаРасходованиеСредств.Регистратор.Ссылка.Контрагент,
	|				ЗаявкиНаРасходованиеСредств.ДоговорКонтрагента,
	|				ЗаявкиНаРасходованиеСредств.Сделка) КАК ЗаявкиНаРасходованиеСредств
	|				ПОЛНОЕ СОЕДИНЕНИЕ (
	|					ВЫБРАТЬ ДатаОплаты,Контрагент, ДоговорКонтрагента, Сделка, СУММА(СуммаПлатежа) СуммаПлатежа ИЗ
|(ВЫБРАТЬ
|						ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ДатаОплаты КАК ДатаОплаты,
|						ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.Контрагент КАК Контрагент,
|						ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагента,
|						ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Сделка КАК Сделка,
|						ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.СуммаПлатежа СуммаПлатежа
|					ИЗ
|						Документ.ПлатежноеПоручениеИсходящее.РасшифровкаПлатежа КАК ПлатежноеПоручениеИсходящееРасшифровкаПлатежа
|					ГДЕ
|						ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.Проведен
|						И ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ДатаОплаты МЕЖДУ &ДатаНач И &ДатаКон
|						И ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ВидОперации <> &ПеречислениеМеждуСчетами
|						
|						
|ОБЪЕДИНИТЬ ВСЕ
|	ВЫБРАТЬ			РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.Дата КАК ДатаОплаты,
|						РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.Контрагент КАК Контрагент,
|						РасходныйКассовыйОрдерРасшифровкаПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагента,
|						РасходныйКассовыйОрдерРасшифровкаПлатежа.Сделка КАК Сделка,
|						РасходныйКассовыйОрдерРасшифровкаПлатежа.СуммаПлатежа КАК СуммаПлатежа
|					ИЗ
|						Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасходныйКассовыйОрдерРасшифровкаПлатежа
|					ГДЕ
|						РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.Проведен
|						И РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
|						И (РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.ВидОперации = &РасчетыПоКредитамИЗаймам
|						ИЛИ РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.ВидОперации = &ОплатаПоставщику
|						ИЛИ РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.ВидОперации = &ПрочиеРасчетыСКонтрагентами
|						ИЛИ РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.ВидОперации = &ВозвратПокупателю)	
|		) ДокументыОплаты
|						
|						СГРУППИРОВАТЬ ПО
|						ДатаОплаты,
|						Контрагент,
|						ДоговорКонтрагента,
|						Сделка
	|					) КАК ПлатежныеПорученияИсходящие
	|				ПО ЗаявкиНаРасходованиеСредств.ДатаРасхода = ПлатежныеПорученияИсходящие.ДатаОплаты
	|					И ЗаявкиНаРасходованиеСредств.Контрагент = ПлатежныеПорученияИсходящие.Контрагент
	|					И ЗаявкиНаРасходованиеСредств.ДоговорКонтрагента = ПлатежныеПорученияИсходящие.ДоговорКонтрагента
	|					И ЗаявкиНаРасходованиеСредств.Сделка = ПлатежныеПорученияИсходящие.Сделка) КАК А) КАК Б
	|ИТОГИ
	|	СУММА(СуммаРасхода1),
	|	СУММА(СуммаПлатежа1),
	|	СУММА(СуммаРасхода2),
	|	СУММА(СуммаПлатежа2),
	|	СУММА(СуммаРасхода3),
	|	СУММА(СуммаПлатежа3),
	|	СУММА(СуммаРасхода4),
	|	СУММА(СуммаПлатежа4),
	|	СУММА(СуммаРасхода5),
	|	СУММА(СуммаПлатежа5),
	|	СУММА(СуммаРасхода6),
	|	СУММА(СуммаПлатежа6),
	|	СУММА(СуммаРасхода7),
	|	СУММА(СуммаПлатежа7),
	|	СУММА(СуммаРасхода8),
	|	СУММА(СуммаПлатежа8),
	|	СУММА(СуммаРасхода9),
	|	СУММА(СуммаПлатежа9),
	|	СУММА(СуммаРасхода10),
	|	СУММА(СуммаПлатежа10),
	|	СУММА(СуммаРасхода11),
	|	СУММА(СуммаПлатежа11),
	|	СУММА(СуммаРасхода12),
	|	СУММА(СуммаПлатежа12),
	|	СУММА(СуммаРасхода13),
	|	СУММА(СуммаПлатежа13),
	|	СУММА(СуммаРасхода14),
	|	СУММА(СуммаПлатежа14),
	|	СУММА(СуммаРасхода15),
	|	СУММА(СуммаПлатежа15),
	|	СУММА(СуммаРасхода16),
	|	СУММА(СуммаПлатежа16),
	|	СУММА(СуммаРасхода17),
	|	СУММА(СуммаПлатежа17),
	|	СУММА(СуммаРасхода18),
	|	СУММА(СуммаПлатежа18),
	|	СУММА(СуммаРасхода19),
	|	СУММА(СуммаПлатежа19),
	|	СУММА(СуммаРасхода20),
	|	СУММА(СуммаПлатежа20),
	|	СУММА(СуммаРасхода21),
	|	СУММА(СуммаПлатежа21),
	|	СУММА(СуммаРасхода22),
	|	СУММА(СуммаПлатежа22),
	|	СУММА(СуммаРасхода23),
	|	СУММА(СуммаПлатежа23),
	|	СУММА(СуммаРасхода24),
	|	СУММА(СуммаПлатежа24),
	|	СУММА(СуммаРасхода25),
	|	СУММА(СуммаПлатежа25),
	|	СУММА(СуммаРасхода26),
	|	СУММА(СуммаПлатежа26),
	|	СУММА(СуммаРасхода27),
	|	СУММА(СуммаПлатежа27),
	|	СУММА(СуммаРасхода28),
	|	СУММА(СуммаПлатежа28),
	|	СУММА(СуммаРасхода29),
	|	СУММА(СуммаПлатежа29),
	|	СУММА(СуммаРасхода30),
	|	СУММА(СуммаПлатежа30),
	|	СУММА(СуммаРасхода31),
	|	СУММА(СуммаПлатежа31),
	|	СУММА(СуммаРасхода),
	|	СУММА(СуммаПлатежа)
	|ПО
	|	ОБЩИЕ,
	|	Отдел,
	|	ОтветственноеЛицо,
	|	Контрагент,
	|	ДоговорКонтрагента";

	Запрос.УстановитьПараметр("ВидДвиженияПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонДата));
	Запрос.УстановитьПараметр("ДатаНач", НачДата);
	Запрос.УстановитьПараметр("ПеречислениеМеждуСчетами", Перечисления.ВидыОперацийППИсходящее.ПереводНаДругойСчет);
	Запрос.УстановитьПараметр("РасчетыПоКредитамИЗаймам", Перечисления.ВидыОперацийРКО.РасчетыПоКредитамИЗаймамСКонтрагентами);
	Запрос.УстановитьПараметр("ОплатаПоставщику", Перечисления.ВидыОперацийРКО.ОплатаПоставщику);
	Запрос.УстановитьПараметр("ПрочиеРасчетыСКонтрагентами", Перечисления.ВидыОперацийРКО.ПрочиеРасчетыСКонтрагентами);
	Запрос.УстановитьПараметр("ВозвратПокупателю", Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю);
	Запрос.УстановитьПараметр("ПустаяСсылка",ПустоеЗначениеТипа(Тип("СправочникСсылка.ДоговорыКонтрагентов")) );
	
	//Запрос.УстановитьПараметр("ВсеЗаявки",Ложь);
	Запрос.УстановитьПараметр("СостояниеЗаявки",Перечисления.СостоянияОбъектов.Отклонен);
	
	//Если СтатусЗаявки="Утвержденные" Тогда
	//	Запрос.УстановитьПараметр("СостояниеЗаявки",Перечисления.СостоянияОбъектов.Утвержден);
	//ИначеЕсли СтатусЗаявки="Подготовленные" Тогда
	//	Запрос.УстановитьПараметр("СостояниеЗаявки",Перечисления.СостоянияОбъектов.Подготовлен);
	//ИначеЕсли СтатусЗаявки="Не отколненные" Тогда
	//	
	//Иначе	
	//	// все
	//	Запрос.УстановитьПараметр("ВсеЗаявки",Истина);
	//КонецЕсли;	
    



	
	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок|ОсновнаяКолонка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал|ОсновнаяКолонка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы|ОсновнаяКолонка");
	ОбластьШапкаТаблицыДата = Макет.ПолучитьОбласть("ШапкаТаблицы|Дата");
	ОбластьШапкаТаблицыКредиторка = Макет.ПолучитьОбласть("ШапкаТаблицы|Кредиторка");
	
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги|ОсновнаяКолонка");
	ОбластьОбщийИтогДата = Макет.ПолучитьОбласть("ОбщиеИтоги|Дата");
	ОбластьОтдел = Макет.ПолучитьОбласть("Отдел|ОсновнаяКолонка");
	ОбластьОтветственноеЛицо = Макет.ПолучитьОбласть("ОтветственноеЛицо|ОсновнаяКолонка");
	ОбластьКонтрагент = Макет.ПолучитьОбласть("Контрагент|ОсновнаяКолонка");
	ОбластьДоговорКонтрагента = Макет.ПолучитьОбласть("ДоговорКонтрагента|ОсновнаяКолонка");
//	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали|ОсновнаяКолонка");

	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ПредставлениеПериода=ПредставлениеПериода(НачДата,КонецДня(КонДата));
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	СписокДат=Новый СписокЗначений;
	
	Для сч=1 по 31 Цикл  // в список дат добавляются даты , имеющие ненулевые значения
		Если ВыборкаОбщийИтог.Получить(4+(сч-1)*2+1)<>0  
			или ВыборкаОбщийИтог.Получить(4+(сч-1)*2+2)<>0  Тогда
			 СписокДат.Добавить(сч);
		КонецЕсли;	
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ТабДок.Присоединить(ОбластьШапкаТаблицыКредиторка);
	
	ОбластьШапкаТаблицыДата = Макет.ПолучитьОбласть("ШапкаТаблицы|Дата");
	ОбластьШапкаТаблицыДата.Параметры.Дата="К оплате/ реально оплачено"; 
	ТабДок.Присоединить(ОбластьШапкаТаблицыДата);
	
		
	Для сч=1 по 31 Цикл
		ОбластьШапкаТаблицыДата = Макет.ПолучитьОбласть("ШапкаТаблицы|Дата");
		Если  СписокДат.НайтиПоЗначению(сч) <> Неопределено Тогда
		
		  ДеньНедели=ДеньНедели(НачДата-1 + сч*86400);
		  ПредставлениеДняНедели="";
		  Если ДеньНедели=1 Тогда
			  ПредставлениеДняНедели="пн.";
		  ИначеЕсли ДеньНедели=2 Тогда
			  ПредставлениеДняНедели="вт.";
		  ИначеЕсли ДеньНедели=3 Тогда	  
			  ПредставлениеДняНедели="ср.";
		  ИначеЕсли ДеньНедели=4 Тогда	  	  
			  ПредставлениеДняНедели="чт.";
		ИначеЕсли ДеньНедели=5 Тогда	  	  
			ПредставлениеДняНедели="пт.";
		ИначеЕсли ДеньНедели=6 Тогда	  	  	
			ПредставлениеДняНедели="сб.";
		Иначе
			ПредставлениеДняНедели="вс.";
		КонецЕсли;	
		ОбластьШапкаТаблицыДата.Параметры.Дата= Строка(сч)+", "+ПредставлениеДняНедели; 
		ТабДок.Присоединить(ОбластьШапкаТаблицыДата);
		КонецЕсли;
	КонецЦикла;
	
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
	
	ОбластьОбщийИтогКредиторка = Макет.ПолучитьОбласть("ОбщиеИтоги|Кредиторка");
	ТабДок.Присоединить(ОбластьОбщийИтогКредиторка,ВыборкаОбщийИтог.Уровень());
	
		ОбластьОбщийИтогДата = Макет.ПолучитьОбласть("ОбщиеИтоги|Дата");
		ОбластьОбщийИтогДата.Параметры.СуммаРасхода=ВыборкаОбщийИтог.Получить(4+(32-1)*2+1);
		ОбластьОбщийИтогДата.Параметры.СуммаПлатежа=ВыборкаОбщийИтог.Получить(4+(32-1)*2+2);
		ТабДок.Присоединить(ОбластьОбщийИтогДата, ВыборкаОбщийИтог.Уровень());
		
	
	Для сч=1 по 31 Цикл
		ОбластьОбщийИтогДата = Макет.ПолучитьОбласть("ОбщиеИтоги|Дата");
		Если  СписокДат.НайтиПоЗначению(сч) <> Неопределено Тогда
			ОбластьОбщийИтогДата.Параметры.СуммаРасхода=ВыборкаОбщийИтог.Получить(4+(сч-1)*2+1);
			ОбластьОбщийИтогДата.Параметры.СуммаПлатежа=ВыборкаОбщийИтог.Получить(4+(сч-1)*2+2);
			ТабДок.Присоединить(ОбластьОбщийИтогДата, ВыборкаОбщийИтог.Уровень());
		КОнецЕсли;	
		
	КонецЦикла;	
	
	ВыборкаОтдел = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаОтдел.Следующий() Цикл
		ОбластьОтдел.Параметры.Заполнить(ВыборкаОтдел);
		ТабДок.Вывести(ОбластьОтдел, ВыборкаОтдел.Уровень());
		
		ОбластьОтделКредиторка = Макет.ПолучитьОбласть("Отдел|Кредиторка");
		ТабДок.Присоединить(ОбластьОтделКредиторка,ВыборкаОтдел.Уровень());
		
		ОбластьОтделДата = Макет.ПолучитьОбласть("Отдел|Дата");
		ОбластьОтделДата.Параметры.СуммаРасхода=ВыборкаОтдел.Получить(4+(32-1)*2+1);
		ОбластьОтделДата.Параметры.СуммаПлатежа=ВыборкаОтдел.Получить(4+(32-1)*2+2);
		ТабДок.Присоединить(ОбластьОтделДата, ВыборкаОтдел.Уровень());
		
		Для сч=1 по 31 Цикл
			ОбластьОтделДата = Макет.ПолучитьОбласть("Отдел|Дата");
			Если  СписокДат.НайтиПоЗначению(сч) <> Неопределено Тогда
				ОбластьОтделДата.Параметры.СуммаРасхода=ВыборкаОтдел.Получить(4+(сч-1)*2+1);
				ОбластьОтделДата.Параметры.СуммаПлатежа=ВыборкаОтдел.Получить(4+(сч-1)*2+2);
				ТабДок.Присоединить(ОбластьОтделДата, ВыборкаОтдел.Уровень());
			КонецЕсли;	
		КонецЦикла;	


		ВыборкаОтветственноеЛицо = ВыборкаОтдел.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаОтветственноеЛицо.Следующий() Цикл
			ОбластьОтветственноеЛицо.Параметры.Заполнить(ВыборкаОтветственноеЛицо);
			ТабДок.Вывести(ОбластьОтветственноеЛицо, ВыборкаОтветственноеЛицо.Уровень());
			
		ОбластьОтветственноеЛицоКредиторка = Макет.ПолучитьОбласть("ОтветственноеЛицо|Кредиторка");
		ТабДок.Присоединить(ОбластьОтветственноеЛицоКредиторка,ВыборкаОтветственноеЛицо.Уровень());	
			
		ОбластьОтветственноеЛицоДата = Макет.ПолучитьОбласть("ОтветственноеЛицо|Дата");
		ОбластьОтветственноеЛицоДата.Параметры.СуммаРасхода=ВыборкаОтветственноеЛицо.Получить(4+(32-1)*2+1);
		ОбластьОтветственноеЛицоДата.Параметры.СуммаПлатежа=ВыборкаОтветственноеЛицо.Получить(4+(32-1)*2+2);
		ТабДок.Присоединить(ОбластьОтветственноеЛицоДата, ВыборкаОтветственноеЛицо.Уровень());


		Для сч=1 по 31 Цикл
			ОбластьОтветственноеЛицоДата = Макет.ПолучитьОбласть("ОтветственноеЛицо|Дата");
			Если  СписокДат.НайтиПоЗначению(сч) <> Неопределено Тогда
				ОбластьОтветственноеЛицоДата.Параметры.СуммаРасхода=ВыборкаОтветственноеЛицо.Получить(4+(сч-1)*2+1);
				ОбластьОтветственноеЛицоДата.Параметры.СуммаПлатежа=ВыборкаОтветственноеЛицо.Получить(4+(сч-1)*2+2);
				ТабДок.Присоединить(ОбластьОтветственноеЛицоДата, ВыборкаОтветственноеЛицо.Уровень());
			КонецЕсли;	
		КонецЦикла;	

			
			ВыборкаКонтрагент = ВыборкаОтветственноеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаКонтрагент.Следующий() Цикл
				ОбластьКонтрагент.Параметры.Заполнить(ВыборкаКонтрагент);
				ТабДок.Вывести(ОбластьКонтрагент, ВыборкаКонтрагент.Уровень());

				ОбластьКонтрагентКредиторка = Макет.ПолучитьОбласть("Контрагент|Кредиторка");
				СтруктураПоискаМенеджерКонтрагент=Новый Структура ("Менеджер,Контрагент",ВыборкаОтветственноеЛицо.ОтветственноеЛицо,ВыборкаКонтрагент.Контрагент);
				НайдСтроки=ТЗКредиторскаяЗадолженностьПоКонтрагентам.НайтиСтроки(СтруктураПоискаМенеджерКонтрагент);
				Если не ЗначениеНеЗаполнено(НайдСтроки) и НайдСтроки.Количество()>0 Тогда
					ОбластьКонтрагентКредиторка.Параметры.СуммаУпр = НайдСтроки[0].СуммаУпр;
					ОбластьКонтрагентКредиторка.Параметры.СуммаПросрочки = НайдСтроки[0].СуммаПросрочки;
				Иначе
					ОбластьКонтрагентКредиторка.Параметры.СуммаУпр = 0;
					ОбластьКонтрагентКредиторка.Параметры.СуммаПросрочки = 0;
				КонецЕсли;	
				
				
				ТабДок.Присоединить(ОбластьКонтрагентКредиторка,ВыборкаКонтрагент.Уровень());
		
				ОбластьКонтрагентДата = Макет.ПолучитьОбласть("Контрагент|Дата");
				ОбластьКонтрагентДата.Параметры.СуммаРасхода=ВыборкаКонтрагент.Получить(4+(32-1)*2+1);
				ОбластьКонтрагентДата.Параметры.СуммаПлатежа=ВыборкаКонтрагент.Получить(4+(32-1)*2+2);
				ТабДок.Присоединить(ОбластьКонтрагентДата, ВыборкаКонтрагент.Уровень());
				
				Для сч=1 по 31 Цикл
					ОбластьКонтрагентДата = Макет.ПолучитьОбласть("Контрагент|Дата");
					Если  СписокДат.НайтиПоЗначению(сч) <> Неопределено Тогда
						ОбластьКонтрагентДата.Параметры.СуммаРасхода=ВыборкаКонтрагент.Получить(4+(сч-1)*2+1);
						ОбластьКонтрагентДата.Параметры.СуммаПлатежа=ВыборкаКонтрагент.Получить(4+(сч-1)*2+2);
						ТабДок.Присоединить(ОбластьКонтрагентДата, ВыборкаКонтрагент.Уровень());
					КонецЕсли;	
				КонецЦикла;	

				
				ВыборкаДоговорКонтрагента = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				Пока ВыборкаДоговорКонтрагента.Следующий() Цикл
					ОбластьДоговорКонтрагента.Параметры.Заполнить(ВыборкаДоговорКонтрагента);
					ТабДок.Вывести(ОбластьДоговорКонтрагента, ВыборкаДоговорКонтрагента.Уровень());
					
				ОбластьДоговорКонтрагентаКредиторка = Макет.ПолучитьОбласть("ДоговорКонтрагента|Кредиторка");
				
				СтруктураПоискаМенеджерДоговорКонтрагента=Новый Структура ("Менеджер,ДоговорКонтрагента",ВыборкаОтветственноеЛицо.ОтветственноеЛицо,ВыборкаДоговорКонтрагента.ДоговорКонтрагента);
				НайдСтроки=ТЗКредиторскаяЗадолженностьПоДоговорам.НайтиСтроки(СтруктураПоискаМенеджерДоговорКонтрагента);
				Если не ЗначениеНеЗаполнено(НайдСтроки) И НайдСтроки.Количество()>0 Тогда
					ОбластьДоговорКонтрагентаКредиторка.Параметры.СуммаУпр = НайдСтроки[0].СуммаУпр;
					ОбластьДоговорКонтрагентаКредиторка.Параметры.СуммаПросрочки = НайдСтроки[0].СуммаПросрочки;
				Иначе
					ОбластьДоговорКонтрагентаКредиторка.Параметры.СуммаУпр = 0;
					ОбластьДоговорКонтрагентаКредиторка.Параметры.СуммаПросрочки = 0;
				КонецЕсли;	

				ТабДок.Присоединить(ОбластьДоговорКонтрагентаКредиторка,ВыборкаДоговорКонтрагента.Уровень());	

				ОбластьДоговорКонтрагентаДата = Макет.ПолучитьОбласть("ДоговорКонтрагента|Дата");
				ОбластьДоговорКонтрагентаДата.Параметры.СуммаРасхода=ВыборкаДоговорКонтрагента.Получить(4+(32-1)*2+1);
				ОбластьДоговорКонтрагентаДата.Параметры.СуммаПлатежа=ВыборкаДоговорКонтрагента.Получить(4+(32-1)*2+2);
				ТабДок.Присоединить(ОбластьДоговорКонтрагентаДата, ВыборкаДоговорКонтрагента.Уровень());

					Для сч=1 по 31 Цикл
						ОбластьДоговорКонтрагентаДата = Макет.ПолучитьОбласть("ДоговорКонтрагента|Дата");
						Если  СписокДат.НайтиПоЗначению(сч) <> Неопределено Тогда
							ОбластьДоговорКонтрагентаДата.Параметры.СуммаРасхода=ВыборкаДоговорКонтрагента.Получить(4+(сч-1)*2+1);
							ОбластьДоговорКонтрагентаДата.Параметры.СуммаПлатежа=ВыборкаДоговорКонтрагента.Получить(4+(сч-1)*2+2);
							ТабДок.Присоединить(ОбластьДоговорКонтрагентаДата, ВыборкаДоговорКонтрагента.Уровень());
						КонецЕсли;	
					КонецЦикла;	

				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

		//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры


Процедура ВывестиЗаявкиНаРасходованиеПоКонтрагенту(Ссылка, ПустаяСделка = Ложь)
	
	
	Отчет = Отчеты.ЗаявкиНаРасходованиеЯШТ.Создать();
	
	Отчет.ЗаполнитьНачальныеНастройки();
	
	ФормаОбработки = Отчет.ПолучитьОсновнуюФорму();
	
	ФормаОбработки.Открыть();
	
	Отчет.ОбщийОтчет.ДатаКон = КонецДня(КонДата);
	Отчет.ОбщийОтчет.ДатаНач = НачДата;
	
	Для Каждого СтрОтб из ФормаОбработки.ПостроительОтчета.Отбор Цикл
		
		СтрОтб.Использование = Ложь;	
		
	КонецЦикла;
	
	///
	Если ФормаОбработки.ПостроительОтчета.Отбор.Найти("ЗаявкаНаРасходование.Контрагент") = Неопределено Тогда
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("ЗаявкаНаРасходование.Контрагент");
	Иначе
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Найти("ЗаявкаНаРасходование.Контрагент");
	КонецЕсли; 
	
	СтрОтб.ВидСравнения = ВидСравнения.Равно;
	СтрОтб.Значение = Ссылка;
	СтрОтб.Использование = Истина;

	
	ФормаОбработки.ПостроительОтчета.ИзмеренияСтроки.Очистить();
	ФормаОбработки.ПостроительОтчета.ИзмеренияСтроки.Добавить("Контрагент");
	ФормаОбработки.ПостроительОтчета.ИзмеренияСтроки.Добавить("ЗаявкаНаРасходование");
	
	ФормаОбработки.ПостроительОтчета.ИзмеренияКолонки.Очистить();
	ФормаОбработки.ПостроительОтчета.ИзмеренияКолонки.Добавить("ДатаРасхода");
	
	
	ФормаОбработки.ПостроительОтчета.ВыбранныеПоля.Очистить();
	
	//ФормаОбработки.ПостроительОтчета.ВыбранныеПоля.Добавить(ФормаОбработки.ПостроительОтчета.ДоступныеПоля.Период.ПутьКДанным, ФормаОбработки.ПостроительОтчета.ДоступныеПоля.Период.Имя);
	//ФормаОбработки.ПостроительОтчета.ВыбранныеПоля.Добавить(ФормаОбработки.ПостроительОтчета.ДоступныеПоля.Регистратор.ПутьКДанным, ФормаОбработки.ПостроительОтчета.ДоступныеПоля.Регистратор.Имя);
	
	ФормаОбработки.ОбновитьОтчет();
	
	Возврат;


КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
		
	Если ТипЗнч(Расшифровка) = Тип("СправочникСсылка.Контрагенты")  Тогда

    	СЗ = Новый СписокЗначений;
		СЗ.Добавить("Открыть", "Открыть карточку контрагента...",);
		СЗ.Добавить("ОткрытьЗаявки", "Открыть заявки на оплату по контрагенту...",,БиблиотекаКартинок.Отчет);
		СЗ.Добавить("ОткрытьПлатежи", "Открыть документы оплаты по контрагенту...",,БиблиотекаКартинок.Отчет);
		
		Выбор = ВыбратьИзМеню(СЗ, Элемент);
		
		Если Выбор = Неопределено Тогда
		
			СтандартнаяОбработка = Ложь;
			Возврат;
			
		Иначе
			
			Если Выбор.Значение = "Открыть" Тогда
				  Возврат;
			ИначеЕсли Выбор.Значение = "ОткрытьЗаявки" Тогда
					
					СтандартнаяОбработка = Ложь;
					//ВывестиВзаиморасчетыПоДокументу(Расшифровка);
					ВывестиЗаявкиНаРасходованиеПоКонтрагенту(Расшифровка, Истина);	
			ИначеЕсли Выбор.Значение = "ОткрытьПлатежи" Тогда
					
					СтандартнаяОбработка = Ложь;
				  //  ПоказатьСтруктуруПодчиненностиДокумента(Расшифровка);
					
			КонецЕсли; 
				
		 
		
		КонецЕсли;
	
		
//		ИЛИ ТипЗнч(Расшифровка) = Тип("СправочникСсылка.ДоговорыКонтрагентов")		
		
		
  КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	//ЭлементыФормы.СтатусЗаявки.СписокВыбора.Добавить("Все");
	//ЭлементыФормы.СтатусЗаявки.СписокВыбора.Добавить("Утвержденные");
	//ЭлементыФормы.СтатусЗаявки.СписокВыбора.Добавить("Подготовленные");
	//ЭлементыФормы.СтатусЗаявки.СписокВыбора.Добавить("Не отклоненные");
	
	ЭлементыФормы.ДействияФормы.Кнопки.Утвердить.Доступность=ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "РазрешитьУтверждатьЗаявки")
КонецПроцедуры

Процедура ДействияФормыУтвердить(Кнопка)
	
	
Режим = РежимДиалогаВопрос.ДаНет;
Ответ = Вопрос("Желаете утвердить бюджет расходов на "+ ПредставлениеПериода(НачалоМесяца(НачДата),КонецМесяца(НачДата))+"?", Режим, 0);
Если Ответ = КодВозвратаДиалога.Нет Тогда
    Возврат;
КонецЕсли;

	
	Запрос=Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ЗаявкаНаРасходованиеСредств.Ссылка КАК ДокументСсылка
	             |ИЗ
	             |	Документ.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств
	             |ГДЕ
	             |	ЗаявкаНаРасходованиеСредств.Проведен
	             |	И ЗаявкаНаРасходованиеСредств.Состояние = &Состояние
	             |	И ЗаявкаНаРасходованиеСредств.ПериодПланирования = &ПериодПланирования
	             |
	             |ДЛЯ ИЗМЕНЕНИЯ";

Запрос.УстановитьПараметр("Состояние",Перечисления.СостоянияОбъектов.Подготовлен);
Запрос.УстановитьПараметр("ПериодПланирования",НачалоМесяца(НачДата));

Выборка=Запрос.Выполнить().Выбрать();

НачатьТранзакцию();
Пока Выборка.Следующий() Цикл
ЗаявкаОбъект=Выборка.ДокументСсылка.ПолучитьОбъект();
ЗаявкаОбъект.Состояние=Перечисления.СостоянияОбъектов.Утвержден;
ЗаявкаОбъект.Записать();
КонецЦикла;	
ЗафиксироватьТранзакцию();
Предупреждение("Бюджет расходов на "+ ПредставлениеПериода(НачалоМесяца(НачДата),КонецМесяца(НачДата))+ " утвержден!");
КонецПроцедуры


