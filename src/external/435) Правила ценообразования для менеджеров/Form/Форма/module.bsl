Перем тзОригинал;

Перем ТипЦенБазовая,ТипЦенКрупныйОпт;
//Перем ТипЦенЯкорь,	ТипЦенРеккомендРозн;
Перем СписокПроизводителиШин, СписокПроизводителиДисков;
Перем СписокПапкиШин, СписокПапкиДисков;
Перем ОтборДляПроверкиДублей;

Процедура ПриОткрытии()
	ЭтаФорма.Заголовок ="Общие правила ценообразования ОБЩИЕ для всех клиентов";
		
	ОтборДляПроверкиДублей=новый структура("ВидТовара,Производитель,НоменклатурнаяГруппа,ВходитВПапку,Диаметр,Номенклатура,Подстрока");
	
	ЗаполнитьДанныеТаблицы();
	ЗаполнитьСпискиПроизводителей();
	
	ЭлементыФормы.ТабличнаяЧастьПравила.РежимВводаСтрок = РежимВводаСтрокТабличногоПоля.ПередТекущейСтрокой;
	//ЗаполнитьПапки();
	
	КрасныйПорог = 1.0; //при превышении макс.процента на 3% - ярко-красные!
	Флажок2 = истина;
	
	ЭлементыФормы.ПолеВыбора.СписокВыбора.Добавить("СкидкаНаценка2",   "Скидка новая");
	ЭлементыФормы.ПолеВыбора.СписокВыбора.Добавить("СкидкаПредоплаты2","Предоплата новая");
	ЭлементыФормы.ПолеВыбора.СписокВыбора.Добавить("Бонус2", "Бонус новый");
	ЭлементыФормы.ПолеВыбора.СписокВыбора.Добавить("ТипЦен2","Тип цен новый");
	ЭлементыФормы.ПолеВыбора.СписокВыбора.Добавить("НоменклатурнаяГруппа2", "Ном.Группа новая");
	
	ЭлементыФормы.ПолеВыбора.СписокВыбора.Добавить("Номенклатура2", "Номенклатура новая");
	ЭлементыФормы.ПолеВыбора.СписокВыбора.Добавить("ПодСтрока2",    "ПодСтрока новая");
	ЭлементыФормы.ПолеВыбора.СписокВыбора.Добавить("ВходитВПапку2", "ВходитВПапку новая");
	Менеджер = глТекущийПользователь;
КонецПроцедуры

Процедура  ЗаполнитьДанныеТаблицы()
	ТабличнаяЧастьПравила.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	*,
	              |	Правила.НоменклатурнаяГруппа.Ответственный КАК Менеджер,
	              |	ВЫБОР
	              |		КОГДА Правила.Приоритет < 0
	              |			ТОГДА ИСТИНА
	              |		ИНАЧЕ ЛОЖЬ
	              |	КОНЕЦ КАК Исключительное
	              |ИЗ
	              |	РегистрСведений.ПравилаЦенообразованияОбщие КАК Правила
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	Правила.Приоритет";
	
	тзОригинал=Запрос.Выполнить().Выгрузить();
	Для каждого стрТЗ из тзОригинал Цикл
		ФлагЕстьЗаписи = Истина;
		НоваяСтрока=ТабличнаяЧастьПравила.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, стрТЗ);
		
		Сортировка=0;  //+++ 27.01.2014  Сортировка "-1" действительно "-" приоритет!
		Если ЗначениеЗаполнено(НоваяСтрока["Номенклатура"]) или ЗначениеЗаполнено(НоваяСтрока["ПодСтрока"]) тогда
			Сортировка=-1;
		ИначеЕсли
			ЗначениеЗаполнено(НоваяСтрока["ВидТовара"])и
			не ЗначениеЗаполнено(НоваяСтрока["Производитель"])и
			не ЗначениеЗаполнено(НоваяСтрока["НоменклатурнаяГруппа"])и
			не ЗначениеЗаполнено(НоваяСтрока["ВходитВПапку"])и
			не ЗначениеЗаполнено(НоваяСтрока["Диаметр"])и
			не ЗначениеЗаполнено(НоваяСтрока["ПодСтрока"])тогда
			Сортировка=1;
		КонецЕсли;
		НоваяСтрока.Сортировка=Сортировка;
	КонецЦикла;
	ТабличнаяЧастьПравила.Сортировать("Сортировка Возр, Приоритет Возр");
	
	Если Флажок1 тогда//+++ 26.08.2015
		ЭлементыФормы.ТабличнаяЧастьПравила.ОтборСтрок.Менеджер.Использование = Истина;
		ЭлементыФормы.ТабличнаяЧастьПравила.ОтборСтрок.Менеджер.ВидСравнения = ВидСравнения.Равно;
		ЭлементыФормы.ТабличнаяЧастьПравила.ОтборСтрок.Менеджер.значение = глТекущийПользователь;
	Иначе
		ЭлементыФормы.ТабличнаяЧастьПравила.ОтборСтрок.Менеджер.Использование = ЛОЖЬ;
    КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьСпискиПроизводителей()
	Запрос =Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ  РАЗЛИЧНЫЕ
	|	Номенклатура.Производитель Производитель,
	|	Номенклатура.ВидТовара ВидТовара
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(	,
	|			Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	|				ИЛИ Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|				И Номенклатура.Производитель<>Значение(Справочник.Производители.ПустаяСсылка)	) 
	|УПОРЯДОЧИТЬ ПО Номенклатура.ВидТовара, Номенклатура.Производитель.Наименование	";
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	СписокПроизводителиШин.Очистить();
	СписокПроизводителиДисков.Очистить();

	Пока Выборка.Следующий() Цикл
		Если Выборка.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
			СписокПроизводителиШин.Добавить(Выборка.Производитель);	
		ИначеЕсли Выборка.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
			СписокПроизводителиДисков.Добавить(Выборка.Производитель);	
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ТабличнаяЧастьПравилаПроизводительНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ТекДанные =ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	//СтандартнаяОбработка = Ложь;
	Если ТекДанные.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
		Элемент.СписокВыбора.Очистить();	
		Для сч=0 по СписокПроизводителиДисков.Количество()-1 Цикл
			Элемент.СписокВыбора.Добавить(СписокПроизводителиДисков[сч].Значение);
		КонецЦикла;	
		
	ИначеЕсли ТекДанные.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
		Элемент.СписокВыбора.Очистить();	
		Для сч=0 по СписокПроизводителиШин.Количество()-1 Цикл
			Элемент.СписокВыбора.Добавить(СписокПроизводителиШин[сч].Значение);
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

Процедура ТабличнаяЧастьПравилаВидТовараПриИзменении(Элемент)
		ТекДанные =ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
		//Если ТекДанные.ВидТовара= Перечисления.ВидыТоваров.Диски Тогда
			ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные.ТипЦен = ТипЦенБазовая;
		//ИначеЕсли  ТекДанные.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
		//	ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные.ТипЦен = ТипЦенБазовая;
		//КонецЕсли;	

КонецПроцедуры

Процедура ТабличнаяЧастьПравилаТипЦенНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ТекДанные =ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	Если ТекДанные.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
		Элемент.СписокВыбора.Очистить();
		Элемент.СписокВыбора.Добавить(ТипЦенБазовая);
	ИначеЕсли 	ТекДанные.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
		Элемент.СписокВыбора.Очистить();
		Элемент.СписокВыбора.Добавить(ТипЦенБазовая); 
		//Элемент.СписокВыбора.Добавить(ТипЦенКрупныйОпт); 
		//Элемент.СписокВыбора.Добавить(ТипЦенЯкорь);
		//Элемент.СписокВыбора.Добавить(ТипЦенРеккомендРозн);
	КонецЕсли;	

КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	
	//ПроверитьТаблицу
	
	ФлагОтказ = Ложь;
	Для  сч=0 по ТабличнаяЧастьПравила.Количество()-1 Цикл
		СтрокаЧастьПравила=ТабличнаяЧастьПравила[сч];
	
		Если ЗначениеНеЗаполнено(СтрокаЧастьПравила.ВидТовара) Тогда
			СообщитьОбОшибке("В строке № "+Строка(СтрокаЧастьПравила.НомерСтроки) + "не заполнен вид товара");
			
			ФлагОтказ = Истина;
			
	//	ИначеЕсли СтрокаЧастьПравила.ВидТовара= Перечисления.ВидыТоваров.Шины И ЗначениеНеЗаполнено(СтрокаЧастьПравила.Производитель) Тогда
			//СообщитьОбОшибке("В строке № "+Строка(СтрокаЧастьПравила.НомерСтроки) + "не заполнен производитель");
			//
			//ФлагОтказ = Истина;
			
		КонецЕсли;	
		
		Если ЗначениеНеЗаполнено(СтрокаЧастьПравила.ТипЦен) Тогда
			СообщитьОбОшибке("В строке № "+Строка(СтрокаЧастьПравила.НомерСтроки) + "не заполнен тип цен");
			ФлагОтказ = Истина;
		КонецЕсли;	
		
		ЗаполнитьЗначенияСвойств(ОтборДляПроверкиДублей,СтрокаЧастьПравила);
		Если ТабличнаяЧастьПравила.НайтиСтроки(ОтборДляПроверкиДублей).Количество()>1 тогда
			СообщитьОбОшибке("Строка № "+СтрокаЧастьПравила.НомерСтроки+". Такая запись уже есть.");
			ФлагОтказ = Истина;
		КонецЕсли;	
	КонецЦикла;		
	
	Если ФлагОтказ Тогда
		Возврат;
	КонецЕсли;	
			
	НаборЗаписей0 = РегистрыСведений.ПравилаЦенообразованияОбщие.СоздатьНаборЗаписей();
	НаборЗаписей0.Прочитать();
	таблНаборЗаписей0 = НаборЗаписей0.Выгрузить();
	НаборЗаписей = РегистрыСведений.ПравилаЦенообразованияОбщие.СоздатьНаборЗаписей();
		
	Для  сч=0 по ТабличнаяЧастьПравила.Количество()-1 Цикл
		СтрокаТабЧасти=ТабличнаяЧастьПравила[сч];
	
		НоваяЗапись=НаборЗаписей.Добавить();
	// 	Если СтрокаТабЧасти.Изменен тогда
			ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТабЧасти);
		//иначе
		//	строки1 = таблНаборЗаписей0.НайтиСтроки(новый Структура("Приоритет", СтрокаТабЧасти.Приоритет);
		//	ЗаполнитьЗначенияСвойств(НоваяЗапись, строки1[0]);
		//КонецЕсли;
		
//+++ 27.01.2014 ------отрицательный приоритет (<-1000) - это спецУсловие, перекрывающее все частные правила!----------------------------		
//28.09.2015 - НЕ сдвигаем на 1000, чтобы можно было у клиента назначать правило!
Если (СтрокаТабЧасти.Исключительное) тогда //ЦМК Импорт + Производитель!
	НоваяЗапись.Приоритет = СтрокаТабЧасти.НомерСтроки - 2000; // частные правила сдвигаем ВЫШЕ ВСЕХ!
Иначе
	НоваяЗапись.Приоритет = СтрокаТабЧасти.НомерСтроки;
КонецЕсли;
   СтрокаТабЧасти.Приоритет = НоваяЗапись.Приоритет;
   
	НоваяЗапись.ID = строка(НоваяЗапись.ВидТовара); //0
	
		//5 кодов   .Код=  
		НоваяЗапись.ID = НоваяЗапись.ID 
		+ ?(ЗначениеЗаполнено(НоваяЗапись.ТипЦен), "."+строка(НоваяЗапись.ТипЦен.Код),".0")
		+ ?(ЗначениеЗаполнено(НоваяЗапись.Производитель), "."+строка(НоваяЗапись.Производитель.Код),".0")
		+ ?(ЗначениеЗаполнено(НоваяЗапись.НоменклатурнаяГруппа), "."+строка(НоваяЗапись.НоменклатурнаяГруппа.Код),".0")
		+ ?(ЗначениеЗаполнено(НоваяЗапись.ВходитВПапку), "."+строка(НоваяЗапись.ВходитВПапку.Код),".0")
		+ ?(ЗначениеЗаполнено(НоваяЗапись.Номенклатура), "."+строка(НоваяЗапись.Номенклатура.Код),".0")
		//строки
		+ ?(ЗначениеЗаполнено(НоваяЗапись.Диаметр), "."+строка(НоваяЗапись.Диаметр),".0")
		+ ?(ЗначениеЗаполнено(НоваяЗапись.ПодСтрока), "."+строка(НоваяЗапись.ПодСтрока),".0")
		+";";

//------------------проверка на изменение другим менеджером----------------		
	 	Если НЕ СтрокаТабЧасти.Изменен тогда
			строки1 = таблНаборЗаписей0.НайтиСтроки(новый Структура("ID", НоваяЗапись.ID));
			если строки1.Количество()>0 тогда
			ЗаполнитьЗначенияСвойств(НоваяЗапись, строки1[0]);
			НоваяЗапись.Приоритет = СтрокаТабЧасти.Приоритет;
			КонецЕсли;
 		КонецЕсли;
	
	КонецЦикла;
	НаборЗаписей.Записать();
	ЭтаФорма.Модифицированность = ложь;	
	//Закрыть();
	Предупреждение("Данные записаны!", 10);
КонецПроцедуры

Процедура ТабличнаяЧастьПравилаНоменклатурнаяГруппаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.Очистить();
	ТекДанные =ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	Если Не ЗначениеНеЗаполнено(ТекДанные.Производитель) Тогда
		Запрос =Новый Запрос;
		Запрос.Текст = "   ВЫБРАТЬ РАЗЛИЧНЫЕ
		|НоменклатурнаяГруппа ИЗ
		|Справочник.Номенклатура ГДЕ Производитель = &Производитель
		| И НоменклатурнаяГруппа<>Значение(Справочник.НоменклатурныеГруппы.ПустаяСсылка)" ;
		
		Запрос.УстановитьПараметр("Производитель",ТекДанные.Производитель);
		
		Выборка=Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Элемент.СписокВыбора.Добавить(Выборка.НоменклатурнаяГруппа);
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

Процедура ТабличнаяЧастьПравилаВходитВПапкуНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	 ТекДанные =ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	//СтандартнаяОбработка = Ложь;
	Если ТекДанные.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
		Элемент.СписокВыбора.Очистить();	
		Для сч=0 по СписокПапкиДисков.Количество()-1 Цикл
			Элемент.СписокВыбора.Добавить(СписокПапкиДисков[сч].Значение);
		КонецЦикла;	
		
	ИначеЕсли ТекДанные.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
		Элемент.СписокВыбора.Очистить();	
		Для сч=0 по СписокПапкиШин.Количество()-1 Цикл
			Элемент.СписокВыбора.Добавить(СписокПапкиШин[сч].Значение);
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Модифицированность тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Сохранить изменения Правил?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			КнопкаВыполнитьНажатие(неопределено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельПравилаПроверить(Кнопка)
	
	t = ТекущаяДата();
	попытка
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ Номенклатура
		|ИЗ РегистрНакопления.ТоварыНаСкладах.Остатки(,(НЕ Склад.Транзитный) И (НЕ Склад.ЗапретитьИспользование)) КАК ТоварыНаСкладахОстатки
		|ГДЕ ТоварыНаСкладахОстатки.КоличествоОстаток >= 4";
		Результат = Запрос.Выполнить();
		таблЗнач1 = Результат.Выгрузить();
		СписТов = новый СписокЗначений;
		СписТов.ЗагрузитьЗначения(таблЗнач1.ВыгрузитьКолонку("Номенклатура"));
		
		ТаблПравил = ТабличнаяЧастьПравила.Выгрузить();
		рез = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, СписТов, ЛОЖЬ, ТаблПравил);
			
		t = ТекущаяДата() - t;
		Предупреждение("Правила для "+строка(СписТов.Количество())+" товаров формируются "+строка(t)+" сек.");
		
	исключение
		Предупреждение("Ошибка: "+ОписаниеОшибки());
	КонецПопытки;

	
КонецПроцедуры

Процедура ТабличнаяЧастьПравилаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
//	проверка на дубли
	ЗаполнитьЗначенияСвойств(ОтборДляПроверкиДублей,Элемент.ТекущаяСтрока);
	Если ТабличнаяЧастьПравила.НайтиСтроки(ОтборДляПроверкиДублей).Количество()>1 тогда
		Предупреждение("Такая запись уже есть!",10,"Внимание.");
	//	Отказ = истина;
		возврат;
	КонецЕсли;		
стр1 = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
стр1.изменен = истина;

	//ЭтаФорма.Модифицированность = истина;
	//Сортировка=0;
	//Если ЗначениеЗаполнено(Элемент.ТекущаяСтрока["Номенклатура"]) или ЗначениеЗаполнено(Элемент.ТекущаяСтрока["ПодСтрока"]) тогда
	//	Сортировка=-1;
	//ИначеЕсли
	//	ЗначениеЗаполнено(Элемент.ТекущаяСтрока["ВидТовара"])и
	//	не ЗначениеЗаполнено(Элемент.ТекущаяСтрока["Производитель"])и
	//	не ЗначениеЗаполнено(Элемент.ТекущаяСтрока["НоменклатурнаяГруппа"])и
	//	не ЗначениеЗаполнено(Элемент.ТекущаяСтрока["ВходитВПапку"])и
	//	не ЗначениеЗаполнено(Элемент.ТекущаяСтрока["Диаметр"])и
	//	не ЗначениеЗаполнено(Элемент.ТекущаяСтрока["ПодСтрока"])тогда
	//	Сортировка=1;
	//КонецЕсли;	
	//Элемент.ТекущаяСтрока.Сортировка = Сортировка;
	//ТабличнаяЧастьПравила.Сортировать("Сортировка, Приоритет");
КонецПроцедуры

Процедура ТабличнаяЧастьПравилаПередУдалением(Элемент, Отказ)
	текСтр = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	Если НЕ текСтр.НоменклатурнаяГруппа.Пустая() тогда
		Если текСтр.НоменклатурнаяГруппа.Ответственный <> ПараметрыСеанса.ТекущийПользователь 
			и НЕ РольДоступна("ПравоЗавершенияРаботыПользователей") тогда  //для админов - можно
			Предупреждение("Вы не имеете права удалять правило
							|для номенклатурной группы: "+строка(текСтр.НоменклатурнаяГруппа)+"
							|Это может делать только Ответственный за эту группу",30);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;	
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Вы уверены в необходимости удаления этого правила?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
		    Отказ = Истина;
		КонецЕсли;
	
КонецПроцедуры

Процедура ТабличнаяЧастьПравилаДиаметрНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	текСтр = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	формаД = ЭтотОбъект.ПолучитьФорму("ФормаДиаметра");
	формаД.Диаметр = текСтр.Диаметр;
	рез = формаД.ОткрытьМодально();
	Если рез<>неопределено тогда
		текСтр.Диаметр = рез;
	КонецЕсли;	

КонецПроцедуры

Процедура ТабличнаяЧастьПравилаНоменклатураПриИзменении(Элемент)
	Если НЕ ЗначениеНеЗаполнено(Элемент.Значение) Тогда
	 ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные.ВидТовара = Элемент.Значение.ВидТовара;
	 ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные.НоменклатурнаяГруппа = Элемент.Значение.НоменклатурнаяГруппа;
	 ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные.Производитель = Элемент.Значение.Производитель;
	 ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные.ТипЦен =  ТипЦенБазовая;
	 
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельПравилаДействие9(Кнопка)
//ЭлементыФормы.ТабличнаяЧастьПравила.ОтборСтрок.	
ЭлементыФормы.ТабличнаяЧастьПравила.ОтборСтрок.ВидТовара.Значение=Перечисления.ВидыТоваров.Диски;
ЭлементыФормы.ТабличнаяЧастьПравила.ОтборСтрок.ВидТовара.Использование = Истина;

КонецПроцедуры

//================================================================
Процедура КоманднаяПанель1ОбновитьСписок(Кнопка)
	
	ТаблицаКлиентов.Очистить();
	ЭтаФорма.Обновить();
	ЭлементыФормы.КоманднаяПанель2.Кнопки.СоздатьОповещение.доступность = ЛОЖЬ; // после изменения - можно создать оповещение

	стр1 = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	Если стр1=неопределено тогда
		Предупреждение("Выберите строку Общих правил!");
		возврат;
	КонецЕсли;
	
	Если стр1.Приоритет<= -1000 тогда // выделенное правило - вперед всех!
		ЭлементыФормы.НадписьСообщение.Заголовок = "Выбранное правило № "+строка(стр1.НомерСтроки)+" - имеет Приоритет ВЫШЕ всех клиентских!";
//		возврат;
	КонецЕсли;	
	

	Состояние("Идет поиск всех правил клиентов по выбранному Общему правилу...");
 
	Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ЛОЖЬ КАК Флаг,
	                |	ПравилаЦенообразования.Выключено,
	                |	ПравилаЦенообразования.Контрагент,
	                |	ПравилаЦенообразования.Контрагент.ОсновнойДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер,
	                |	ПравилаЦенообразования.Контрагент.ОсновнойДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение КАК Подразделение,
	                |	ПравилаЦенообразования.Приоритет,
	                |	ПравилаЦенообразования.СкидкаНаценка,
	                |	ПравилаЦенообразования.СкидкаНаценка КАК СкидкаНаценка2,
	                |	ПравилаЦенообразования.СкидкаПредоплаты,
	                |	ПравилаЦенообразования.Бонус,
	                |	ПравилаЦенообразования.СкидкаПредоплаты КАК СкидкаПредоплаты2,
	                |	ПравилаЦенообразования.Бонус КАК Бонус2,
	                |	ПравилаЦенообразования.ТипЦен,
	                |	ПравилаЦенообразования.ТипЦен КАК ТипЦен2,
	                |	ПравилаЦенообразования.Производитель,
	                |	ПравилаЦенообразования.Производитель КАК Производитель2,
	                |	ПравилаЦенообразования.НоменклатурнаяГруппа,
	                |	ПравилаЦенообразования.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа2,
	                |	ПравилаЦенообразования.Номенклатура,
	                |	ПравилаЦенообразования.Номенклатура КАК Номенклатура2,
	                |	ПравилаЦенообразования.ПодСтрока,
	                |	ПравилаЦенообразования.ПодСтрока КАК ПодСтрока2,
	                |	ПравилаЦенообразования.ВходитВПапку,
	                |	ПравилаЦенообразования.ВходитВПапку КАК ВходитВПапку2
	                |ИЗ
	                |	РегистрСведений.ПравилаЦенообразования КАК ПравилаЦенообразования
	                |ГДЕ
	                |	ПравилаЦенообразования.ВидТовара = &ВидТовара
	                |	И ВЫБОР
	                |			КОГДА ПравилаЦенообразования.Производитель = ЗНАЧЕНИЕ(справочник.Производители.ПустаяСсылка)
	                |				ТОГДА ИСТИНА
	                |			ИНАЧЕ ПравилаЦенообразования.Производитель = &Производитель
	                |		КОНЕЦ
	                |	И ВЫБОР
	                |			КОГДА ПравилаЦенообразования.НоменклатурнаяГруппа = &ПустаяНомГруппа
	                |				ТОГДА ИСТИНА
	                |			ИНАЧЕ ПравилаЦенообразования.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	                |		КОНЕЦ
	                |	И ВЫБОР
	                |			КОГДА ПравилаЦенообразования.ВходитВПапку = &ПустаяНом
	                |				ТОГДА ИСТИНА
	                |			ИНАЧЕ ПравилаЦенообразования.ВходитВПапку = &ВходитВПапку
	                |		КОНЕЦ
	                |	И ВЫБОР
	                |			КОГДА ПравилаЦенообразования.Номенклатура = &ПустаяНом
	                |				ТОГДА ИСТИНА
	                |			ИНАЧЕ ПравилаЦенообразования.Номенклатура = &Номенклатура
	                |		КОНЕЦ
	                |	И ВЫБОР
	                |			КОГДА ПравилаЦенообразования.ПодСтрока = &ПустаяСтр
	                |				ТОГДА ИСТИНА
	                |			ИНАЧЕ ПравилаЦенообразования.ПодСтрока = &ПодСтрока
	                |		КОНЕЦ
	                |	И ПравилаЦенообразования.Контрагент.ОсновнойМенеджерКонтрагента = &Менеджер";
	 Запрос.УстановитьПараметр("Менеджер",     Менеджер );
	 Запрос.УстановитьПараметр("ВидТовара",     стр1.ВидТовара );
	 Запрос.УстановитьПараметр("ТипЦен", 	    стр1.ТипЦен );     // должен быть "Базовая" (код = "00008")! 
	 Запрос.УстановитьПараметр("Производитель", стр1.Производитель );
	 
	 Запрос.УстановитьПараметр("НоменклатурнаяГруппа", стр1.НоменклатурнаяГруппа );
	 
	 Запрос.УстановитьПараметр("Номенклатура", стр1.Номенклатура );
	 Запрос.УстановитьПараметр("ПодСтрока",    стр1.ПодСтрока );
	 Запрос.УстановитьПараметр("ВходитВПапку", стр1.ВходитВПапку );
	 
	 
	 Запрос.УстановитьПараметр("ПустаяНомГруппа", Null); //справочники.НоменклатурныеГруппы.ПустаяСсылка() );
	 Запрос.УстановитьПараметр("ПустаяНом",		  Null); //справочники.Номенклатура.ПустаяСсылка() );
	 Запрос.УстановитьПараметр("ПустаяСтр", Null); //"");
	
	 Результат = Запрос.Выполнить();
	 Если не результат.Пустой() тогда
	 	ТаблицаКлиентов = Результат.Выгрузить();
	 	ТаблицаКлиентов.Сортировать("СкидкаНаценка2, Менеджер, Контрагент");
	 КонецЕсли;
	 
	//+++ 08.12.2015 - пересчет СкидкаНаценкаКрОпт
	колПересчет = 0;
	скидкаПересчета = ?(стр1.СкидкаНаценкаКрОпт=0, 0, стр1.СкидкаНаценкаКрОпт);
	// Если скидкаПересчета<>0 тогда	
	очиститьсообщения();
	   Для каждого стр2 из ТаблицаКлиентов цикл	
		   если стр2.ТипЦен<>стр1.ТипЦен тогда
			   Если скидкаПересчета=0 тогда	
					сообщить("По правилу № "+строка(стр2.Приоритет)+" у Клиента: "+строка(стр2.Контрагент)+" - Тип цен '"+строка(стр2.ТипЦен2)+"'отличается от типа цен Общих правил! Пересчет невозможен!", СтатусСообщения.Внимание);
				    продолжить;
			   КонецЕсли;
				
				если стр1.ТипЦен<>справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005")   //из Базовой в Кр.Опт
					и стр2.ТипЦен=справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005") тогда
				стр2.СкидкаНаценка2   =-(1 - (1+стр2.СкидкаНаценка/100)*(1+скидкаПересчета/100))*100; 
				стр2.ТипЦен2 =стр1.ТипЦен;
				стр2.Флаг = истина;
				сообщить("=> Тип цен по правилу № "+строка(стр2.Приоритет)+" у Клиента: "+строка(стр2.Контрагент)+" автоматически изменен на "+строка(стр2.ТипЦен)+" Скидка: "+строка(стр2.СкидкаНаценка2)+" пересчитана по скидке: "+строка(скидкаПересчета), СтатусСообщения.Информация);
				колПересчет = колПересчет +1;
				иначеЕсли стр2.ТипЦен<>справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005")
						и стр1.ТипЦен=справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005") тогда
				стр2.СкидкаНаценка2   = стр2.СкидкаНаценка - скидкаПересчета;
				стр2.ТипЦен2 =стр1.ТипЦен;
				стр2.Флаг = истина;
				сообщить("=> Тип цен по правилу № "+строка(стр2.Приоритет)+" у Клиента: "+строка(стр2.Контрагент)+" автоматически изменен на "+строка(стр2.ТипЦен)+" Скидка: "+строка(стр2.СкидкаНаценка2)+" пересчитана по скидке: "+строка(скидкаПересчета), СтатусСообщения.Информация);
				колПересчет = колПересчет +1;
				Иначе
					сообщить("По правилу № "+строка(стр2.Приоритет)+" у Клиента: "+строка(стр2.Контрагент)+" - Тип цен '"+строка(стр2.ТипЦен2)+"'отличается от типа цен Общих правил!", СтатусСообщения.Внимание);
			    конецЕсли;
			КонецЕсли;
		КонецЦикла;
	//КонецЕсли;	
	//+++)
 
	 ЭлементыФормы.НадписьСообщение.Заголовок = "Для правила № "+строка(стр1.НомерСтроки)+" - найдено "+строка(ТаблицаКлиентов.Количество())+" зависимых правил клиентов. "
	 +?(колПересчет>0," Автоматически пересчитано "+строка(колПересчет)+" правил по проценту пересчета: "+строка(скидкаПересчета), "");
	 
	 
	 Состояние("Найдено "+строка(ТаблицаКлиентов.Количество())+" правил клиентов.");

КонецПроцедуры

//================================================================
Процедура КоманднаяПанель1ПересчитатьСкидкуКлиентов(Кнопка)
	
	// после пересчета, но еще не записали ничего... нельзя создать оповещение
	ЭлементыФормы.КоманднаяПанель2.Кнопки.СоздатьОповещение.доступность = истина; 

	стр1 = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	Если стр1=неопределено тогда
		Предупреждение("Выберите строку Общих правил!");
		возврат;
	КонецЕсли;	
	
	стр0СкидкаНаценкаОбщие = получитьОбщееПравило(стр1.Приоритет);
	Если стр0СкидкаНаценкаОбщие=неопределено тогда
		Предупреждение("Не найдено Общее правило №"+строка(стр1.Приоритет));
		возврат;
	КонецЕсли;	
	
	Коэфф = 1;
	максСкидки     =стр1.МаксСкидкаНаценка;					   
    максПредоплаты =стр1.МаксСкидкаПредоплаты;					   
 //--------------------------Ручное изменение--------------------------	
	Проц=-1;
	Если коэфф=1 тогда
		 Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Изменить Новую "+?(Переключатель1=0,"скидку","предоплату")+" на фикс.процент (Да)
						|или на относительный процент (нет)?", Режим, 30);
		Если Ответ = КодВозвратаДиалога.да Тогда
			ВвестиЧисло(Проц,"Введите фикс. процент");
		Иначе
			Если ВвестиЧисло(Проц,"Введите относительный процент") тогда
			Коэфф =  (1+Проц/100);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого стр2 из ТаблицаКлиентов цикл
		Если НЕ стр2.Флаг тогда	продолжить; 
		КонецЕсли;
			
		Если (Переключатель1=0 и стр2.СкидкаНаценка2 + стр2.Бонус2 + ?(Коэфф=1, проц, Окр( стр2.СкидкаНаценка2 * (Коэфф - 1) , 2) ) >= максСкидки) или (Переключатель1=0 и ?(Коэфф=1, проц, Окр( стр2.СкидкаНаценка2 * (Коэфф - 1) , 2) ) > 0) тогда		  
			   стр2.СкидкаНаценка2 = стр2.СкидкаНаценка2 + ?(Коэфф=1, проц, Окр( стр2.СкидкаНаценка2 * (Коэфф - 1) , 2) );
		ИначеЕсли (Переключатель1=1 и стр2.СкидкаПредоплаты2 + ?(Коэфф=1, проц, Окр( стр2.СкидкаПредоплаты2 * (Коэфф - 1) , 2) ) >= максПредоплаты) или (Переключатель1=1 и ?(Коэфф=1, проц, Окр( стр2.СкидкаПредоплаты2 * (Коэфф - 1) , 2) ) > 0) тогда //Предоплата
			   стр2.СкидкаПредоплаты2 = стр2.СкидкаПредоплаты2 + ?(Коэфф=1, проц, Окр( стр2.СкидкаПредоплаты2 * (Коэфф - 1) , 2) );
			   Если  стр2.СкидкаПредоплаты2>0 тогда //+++ 04.02.2016 - Скидка предоплаты всегда "-"!
				    стр2.СкидкаПредоплаты2 = 0;
				КонецЕсли;	
		КонецЕсли;		 
	
	КонецЦикла;
	
	ТаблицаКлиентов.Сортировать("СкидкаНаценка, СкидкаНаценка2");
	
КонецПроцедуры


Процедура КоманднаяПанель2Действие(Кнопка)
	
	текСтр = ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные;
	i=0;
Если Переключатель1 < 2 тогда	
	если текСтр<>неопределено тогда
		ФиксЗнач = ?(Переключатель1 = 0,  текСтр.СкидкаНаценка2, текСтр.СкидкаПредоплаты2);
	КонецЕсли;
	
	Если не ВвестиЧисло(ФиксЗнач, "Введите фикс.% скидки") тогда
		Предупреждение("Изменение отменено!", 10);
		возврат;
	КонецЕсли;
	
	для каждого стр1 из ТаблицаКлиентов цикл
		Если НЕ стр1.Флаг тогда	продолжить; 
		КонецЕсли;
		Если Переключатель1=0 тогда	
			стр1.СкидкаНаценка2 = ФиксЗнач; 
		иначе
			стр1.СкидкаПредоплаты2 = ФиксЗнач; 
		КонецЕсли;
		i=i+1;
	КонецЦикла;
	
//============================Любое значение======================	
Иначе
	
	если текСтр=неопределено тогда
		Предупреждение("Нажмите в ячейку того значения, которое хотите изменить...",10);
		возврат;
	КонецЕсли;	
	
	если ПолеВыбора="" тогда	
		 ПолеВыбора = ЭлементыФормы.ТаблицаКлиентов.ТекущаяКолонка.Имя;
 	КонецЕсли;
 
	 назв = ПолеВыбора;
	 
	  Если прав( назв, 1)="2" тогда  
		  назв = лев( назв, стрДлина( назв )-1 );
	  КонецЕсли;			  
		НовЗнач  = текСтр[назв+"2"];
		
	Если не ВвестиЗначение(НовЗнач, "Фикс. значение "+назв) тогда
		возврат;
	КонецЕсли;		

	для каждого стр1 из ТаблицаКлиентов цикл
		Если НЕ стр1.Флаг тогда	продолжить; 
		КонецЕсли;
		
		стр1[назв+"2"] = НовЗнач;
		
		i=i+1;
	КонецЦикла;
		
КонецЕсли;

	Если i=0 тогда
		Предупреждение("     Нет выбранных правил для изменения!
						|Выберите правила для установки фикс.процента!", 30);
	иначе					
		Предупреждение("Изменено "+строка(i)+" выбранных правил!", 10);
	КонецЕсли;

КонецПроцедуры


функция получитьОбщееПравило(Приоритет)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПравилаЦенообразованияОбщие.СкидкаНаценка,
	|	ПравилаЦенообразованияОбщие.СкидкаНаценкаКрОпт,
	|	ПравилаЦенообразованияОбщие.МаксСкидкаНаценка
	|ИЗ
	|	РегистрСведений.ПравилаЦенообразованияОбщие КАК ПравилаЦенообразованияОбщие
	|ГДЕ
	|	ПравилаЦенообразованияОбщие.Приоритет = &Приоритет";
	
	Запрос.УстановитьПараметр("Приоритет", Приоритет);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() тогда
		возврат выборка;
	иначе
		возврат неопределено;
	КонецЕсли;
КонецФункции


функция ПравилаЦенообразованияПолучить(Контрагент, Приоритет=1)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ первые 1
	               |	ПравилаЦенообразования.Контрагент,
	               |	ПравилаЦенообразования.Приоритет,
	               |	ПравилаЦенообразования.ВидТовара,
	               |	ПравилаЦенообразования.Производитель,
	               |	ПравилаЦенообразования.НоменклатурнаяГруппа,
	               |	ПравилаЦенообразования.ВходитВПапку,
	               |	ПравилаЦенообразования.Диаметр,
	               |	ПравилаЦенообразования.Номенклатура,
	               |	ПравилаЦенообразования.ТипЦен,
	               |	ПравилаЦенообразования.ПодСтрока,
	               |	ПравилаЦенообразования.СкидкаНаценка,
	               |	ПравилаЦенообразования.ID,
	               |	ПравилаЦенообразования.Выключено,
	               |	ПравилаЦенообразования.Бонус,
	               |	ПравилаЦенообразования.СкидкаПредоплаты
	               |ИЗ
	               |	РегистрСведений.ПравилаЦенообразования КАК ПравилаЦенообразования
	               |ГДЕ
	               |	ПравилаЦенообразования.Контрагент = &Контрагент
	               |	И ПравилаЦенообразования.Приоритет = &Приоритет";
	
	Запрос.УстановитьПараметр("Приоритет", Приоритет);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Результат = Запрос.Выполнить();
	ТабЗнач = Результат.Выгрузить();
	
	Если ТабЗнач.Количество()>0 тогда
		возврат ТабЗнач[0];
	иначе
		возврат неопределено;
	КонецЕсли;

КонецФункции

Процедура КоманднаяПанель1ЗаписатьПравилаКлиентов(Кнопка)
	
	ЭлементыФормы.КоманднаяПанель2.Кнопки.СоздатьОповещение.доступность = истина; // после изменения - можно создать оповещение
	
	текСтрОбщ  = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;	
	максСкидка = текСтрОбщ.МаксСкидкаНаценка;

	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Вы действительно хотите записать правила клиентов?", Режим, 30,  КодВозвратаДиалога.Нет, "Изменение правил клиентов");
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Предупреждение("Изменение правил отменено.",10);
		возврат;
	КонецЕсли;


	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Записать ВСЕ измененные правила клиентов (Да)?
					|   Или Только ВЫБРАННЫЕ правила (Нет)?", Режим, 30);
	флФлаг = истина;//только выбранные			
	Если Ответ = КодВозвратаДиалога.Да Тогда
		флФлаг = ложь;			
	КонецЕсли;

	КолИзм = 0;
	для каждого стр2 из ТаблицаКлиентов цикл
		если флФлаг тогда
			Если не стр2.флаг тогда продолжить;
			КонецЕсли;
		КонецЕсли;	
		
	регСв1  = РегистрыСведений.ПравилаЦенообразования.СоздатьМенеджерЗаписи();
	регСв2  = ПравилаЦенообразованияПолучить(стр2.Контрагент, стр2.Приоритет);
	
	//в Журнал - то, что было >> стало
		если регСв2 = неопределено тогда
			 Сообщить(" ошибка при записи правила № "+строка(стр2.Приоритет)+" по контрагенту: "+строка(стр2.Контрагент)+" :  Не найдено правило!");
		иначе	 
			ЗаполнитьЗначенияСвойств( регСв1, регСв2 );
			
			естьИзм = (регСв2.СкидкаНаценка<>стр2.СкидкаНаценка2 
					  или регСв2.СкидкаПредоплаты<>стр2.СкидкаПредоплаты2
					  или регСв2.Бонус <> стр2.Бонус2
					  
					  //+++ 08.12.2015
			          или регСв2.ТипЦен<>стр2.ТипЦен2
					  или регСв2.НоменклатурнаяГруппа<>стр2.НоменклатурнаяГруппа2
					  или регСв2.Номенклатура<>стр2.Номенклатура2
					  или регСв2.ПодСтрока<>стр2.ПодСтрока2
					  или регСв2.ВходитВПапку<>стр2.ВходитВПапку2
					  
					  или регСв2.Выключено<>стр2.Выключено);	
					  
			стр2.флаг = ЛОЖЬ; // автовыключение флага!
			
			если естьИзм тогда //ТОЛЬКО ИЗМЕНЕНИЯ скидки или вкл/выкл!
				стр2.Флаг = Истина;  // ФЛАГАМИ все  ИЗМЕНЕННЫЕ ЭЛЕМЕНТЫ
			попытка
				
		    текстСообщ = ?(стр2.Выключено,"ВЫКЛЮЧЕНО", "Записано ")+" правило № "+строка(стр2.Приоритет)+" по контрагенту: "+строка(стр2.Контрагент)+"
			|"
			+?(регСв1.СкидкаНаценка<>стр2.СкидкаНаценка2, "НаценкаСкидка: "+строка(регСв1.СкидкаНаценка)+">>"+строка(стр2.СкидкаНаценка2)+"; ","")
			+?(регСв1.СкидкаПредоплаты<>стр2.СкидкаПредоплаты2, "Предоплата:"+строка(регСв1.СкидкаПредоплаты)+">>"+строка(стр2.СкидкаПредоплаты2)+"; ", "")
			+?(регСв1.Бонус<>стр2.Бонус2, "Бонус="+строка(регСв1.Бонус)+">>"+строка(стр2.Бонус2),"")
			  //+++ 08.12.2015
			+?(регСв1.ТипЦен<>стр2.ТипЦен2, "ТипЦен="+строка(регСв1.ТипЦен)+">>"+строка(стр2.ТипЦен2),"")
			+?(регСв1.НоменклатурнаяГруппа<>стр2.НоменклатурнаяГруппа2, "НоменклатурнаяГруппа="+строка(регСв1.НоменклатурнаяГруппа)+">>"+строка(стр2.НоменклатурнаяГруппа2),"")
			+?(регСв1.Номенклатура<>стр2.Номенклатура2, "Номенклатура="+строка(регСв1.Номенклатура)+">>"+строка(стр2.Номенклатура2),"")
			+?(регСв1.ПодСтрока<>стр2.ПодСтрока2, "ПодСтрока="+строка(регСв1.ПодСтрока)+">>"+строка(стр2.ПодСтрока2),"")
			+?(регСв1.ВходитВПапку<>стр2.ВходитВПапку2, "ВходитВПапку="+строка(регСв1.ВходитВПапку)+">>"+строка(стр2.ВходитВПапку2),"")
			;

			регСв1.Выключено	 = стр2.Выключено;
			
			регСв1.СкидкаНаценка    = стр2.СкидкаНаценка2;
			регСв1.СкидкаПредоплаты = стр2.СкидкаПредоплаты2;
			регСв1.Бонус	        = стр2.Бонус2;
			//+++ 08.12.2015
			регСв1.ТипЦен=стр2.ТипЦен2;
			регСв1.НоменклатурнаяГруппа=стр2.НоменклатурнаяГруппа2;
			регСв1.Номенклатура=стр2.Номенклатура2;
			регСв1.ПодСтрока=стр2.ПодСтрока2;
			регСв1.ВходитВПапку=стр2.ВходитВПапку2;
			
			регСв1.Записать(Истина);
			Сообщить(текстСообщ);
			
		//----------------------Журнал изменений------------------------------	
		 записьЖурнала = РегистрыСведений.ЖурналИзменений.СоздатьМенеджерЗаписи();
		 записьЖурнала.НомерЗаписи = стр2.Приоритет;
		 записьЖурнала.Пользователь= ПараметрыСеанса.ТекущийПользователь;
		 записьЖурнала.Компьютер   = ИмяКомпьютера();
		 записьЖурнала.Объект	   = стр2.Контрагент;
		 записьЖурнала.Период	   = ТекущаяДата();
		 записьЖурнала.Событие	   = "Установка персональных скидок";
		 записьЖурнала.Комментарий = текстСообщ;
		 записьЖурнала.Записать(истина); //перезапись
			исключение
			Сообщить("Ошибка при записи правила № "+строка(стр2.Приоритет)+" по контрагенту: "+строка(стр2.Контрагент)+" : "+ОписаниеОшибки(), СтатусСообщения.Внимание);
			КонецПопытки;
		    КолИзм = КолИзм +1;
			КонецЕсли;
		
		КонецЕсли;
	КонецЦикла;

	//Режим = РежимДиалогаВопрос.ДаНет;
	//Если Вопрос("Отправить уведомления менеджерам
	//			|об изменениях правил Клиентов?", Режим, 30, 
	//		   КодВозвратаДиалога.Да, "Уведомления", КодВозвратаДиалога.Да) = КодВозвратаДиалога.Да Тогда
	//	КоманднаяПанель1СоздатьОповещение(неопределено);
	//КонецЕсли;


КонецПроцедуры




Процедура КолВШапке()
	табл123 = ТаблицаКлиентов.Скопировать();
	табл123.Свернуть("Контрагент");
	нРазличных = табл123.Количество();
	ЭлементыФормы.ТаблицаКлиентов.Колонки.Контрагент.ТекстШапки = ?(нРазличных=0,"Контрагент", "Контрагент("+строка(нРазличных)+")");
	
	табл123 = ТаблицаКлиентов.Скопировать();
	табл123.Свернуть("Менеджер");
	нРазличных = табл123.Количество();
	ЭлементыФормы.ТаблицаКлиентов.Колонки.Менеджер.ТекстШапки = ?(нРазличных=0,"Менеджер", "Менеджер("+строка(нРазличных)+")");

	табл123 = ТаблицаКлиентов.Скопировать();
	табл123.Свернуть("ТипЦен");
	нРазличных = табл123.Количество();
	ЭлементыФормы.ТаблицаКлиентов.Колонки.ТипЦен.ТекстШапки = ?(нРазличных=0,"ТипЦен", "ТипЦен("+строка(нРазличных)+")");


	нВыкл=0; нФлаг=0;
	для каждого стр1 из ТаблицаКлиентов цикл
		если стр1.Выключено тогда нВыкл=нВыкл+1; КонецЕсли;
		если стр1.Флаг тогда нФлаг=нФлаг+1; КонецЕсли;
	КонецЦикла;	
	ЭлементыФормы.ТаблицаКлиентов.Колонки.Выключено.ТекстШапки = ?(нВыкл=0,"Выкл.", "Выкл.("+строка(нВыкл)+")");
	ЭлементыФормы.ТаблицаКлиентов.Колонки.Флаг.ТекстШапки = ?(нФлаг=0,"Флаг", "Флаг("+строка(нФлаг)+")");
КонецПроцедуры
	
Процедура ТабличнаяЧастьПравилаПриАктивизацииСтроки(Элемент)
	
	ТаблицаКлиентов.Очистить();
	КолВШапке();	
	
	Если Флажок2 тогда
		КоманднаяПанель1ОбновитьСписок(неопределено);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаКлиентовПриПолученииДанных(Элемент, ОформленияСтрок)
	
	стр0 = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	максСкидка = ?(стр0=неопределено, 200, стр0.МаксСкидкаНаценка);
	максПредоплата = стр0.МаксСкидкаПредоплаты; //+++ 22.12.2014
	
	для каждого стр1 из ОформленияСтрок цикл
		
	//цвет текста
	Если Переключатель1=0 тогда
		
		Если стр1.ДанныеСтроки.СкидкаНаценка2+стр1.ДанныеСтроки.Бонус2 < максСкидка тогда
			стр1.ЦветТекста = WebЦвета.ТемноБордовый;
			Если (КрасныйПорог>=0 
				 и (максСкидка - стр1.ДанныеСтроки.СкидкаНаценка2-стр1.ДанныеСтроки.Бонус2)<=КрасныйПорог 
				 и (максСкидка - стр1.ДанныеСтроки.СкидкаНаценка2-стр1.ДанныеСтроки.Бонус2)>=0
				 )
				 или (КрасныйПорог<0 
				     и  (максСкидка - стр1.ДанныеСтроки.СкидкаНаценка2-стр1.ДанныеСтроки.Бонус2)>=КрасныйПорог 
				     и (максСкидка - стр1.ДанныеСтроки.СкидкаНаценка2-стр1.ДанныеСтроки.Бонус2)<=0
				     ) тогда
				стр1.ЦветТекста = WebЦвета.Красный;
			КонецЕсли;	
			
		ИначеЕсли стр1.ДанныеСтроки.СкидкаНаценка2>200 тогда
			стр1.ЦветТекста = WebЦвета.ТемноСиний;
		КонецЕсли;	
		
		//+++ 22.12.2014	
		Если стр1.ДанныеСтроки.СкидкаПредоплаты2 < максПредоплата тогда
			стр1.ЦветФона = WebЦвета.Желтый;
			Если (КрасныйПорог>=0 
				 и  (максПредоплата - стр1.ДанныеСтроки.СкидкаПредоплаты2)<=КрасныйПорог
				 и (максПредоплата - стр1.ДанныеСтроки.СкидкаПредоплаты2)>=0
				  ) 
				 или 
				 (КрасныйПорог<0 
				 и (максПредоплата - стр1.ДанныеСтроки.СкидкаПредоплаты2)>=КрасныйПорог
				 и (максПредоплата - стр1.ДанныеСтроки.СкидкаПредоплаты2)<=0
				 )  тогда
				стр1.ЦветФона = WebЦвета.СветлоЖелтый;
			КонецЕсли;	
		КонецЕсли;
		
	Иначе  // цвет текста по Предоплате
		
		Если стр1.ДанныеСтроки.СкидкаПредоплаты2 < максПредоплата тогда
			стр1.ЦветТекста = WebЦвета.ТемноБордовый;
			Если (КрасныйПорог>=0
				и (максПредоплата - стр1.ДанныеСтроки.СкидкаПредоплаты2)<=КрасныйПорог
				и (максПредоплата - стр1.ДанныеСтроки.СкидкаПредоплаты2)>0
				) или 
				(КрасныйПорог<0
				и (максПредоплата - стр1.ДанныеСтроки.СкидкаПредоплаты2)<=КрасныйПорог
				и (максПредоплата - стр1.ДанныеСтроки.СкидкаПредоплаты2)>0
				) тогда
			стр1.ЦветТекста = WebЦвета.Красный;
			КонецЕсли;	
		КонецЕсли;

	КонецЕсли;
	
	//выкл.
	Если стр1.ДанныеСтроки.Выключено тогда
		стр1.ЦветФона = webЦвета.СветлоСерый;//курсив
	//выбран
		Если стр1.ДанныеСтроки.Флаг тогда
		стр1.Шрифт = новый Шрифт(стр1.Шрифт,,,Истина, Истина);//жирный курсиы
		КонецЕсли;
	
 	ИначеЕсли стр1.ДанныеСтроки.Флаг тогда
		стр1.Шрифт = новый Шрифт(стр1.Шрифт,,,Истина);//жирный 
	КонецЕсли;

	КонецЦикла;	

КолВШапке();	

КонецПроцедуры

Процедура КоманднаяПанель1СоздатьОповещение(Кнопка)

//====================Оповещение менеджерам=======================
ТаблицаКлиентов.Сортировать("Менеджер, Контрагент, Приоритет"); 
мен = неопределено; Контр = неопределено;
текстОповещения = ""; 
 зад1 = неопределено;
   КолОповещ = 0;
	для каждого стр2 из ТаблицаКлиентов цикл
	Если не стр2.флаг тогда продолжить;
	КонецЕсли;	
	
	Если НЕ ( стр2.СкидкаНаценка<>стр2.СкидкаНаценка2 
			или стр2.СкидкаПредоплаты<>стр2.СкидкаПредоплаты2 
			или стр2.Бонус<>стр2.Бонус2 
			или стр2.выключено) тогда
		Продолжить; // нет изменений!
	КонецЕсли;	
	
	Если мен=стр2.Менеджер тогда
		Если контр<>стр2.Контрагент тогда
			зад1.Контрагент = справочники.Контрагенты.ПустаяСсылка(); // несколько клиентов!
			текстОповещения = текстОповещения+"
			|Контрагент: "+строка(стр2.Контрагент)+" : ";
			контр=стр2.Контрагент;
 		КонецЕсли;
	Иначе//		мен<>стр2.Менеджер
		Если текстОповещения<>"" тогда   //запись предыдущей задачи
			зад1.СодержаниеСобытия = текстОповещения;
			зад1.Записать(РежимЗаписиДокумента.Проведение);
			КолОповещ = КолОповещ + 1;
			сообщить(строка(КолОповещ)+" Создано уведомление по ""Событию"" для "+строка(зад1.Ответственный), СтатусСообщения.Информация);
		КонецЕсли;
		зад1 = СоздатьСобытиеПользователя(стр2);// создание новой!
	        мен  =стр2.Менеджер;
			контр=стр2.Контрагент;
			текстОповещения = "Контрагент: "+строка(стр2.Контрагент)+" : ";
 	 КонецЕсли;	//мен
	 
	 	текстОповещения = текстОповещения+ "Правило № "+строка(стр2.приоритет)+" - "
					+?(стр2.выключено,"ВЫКЛЮЧЕНО!","Изменено!")
					+?(стр2.СкидкаНаценка<>стр2.СкидкаНаценка2," Скидка: "+строка(стр2.СкидкаНаценка)+" >> "+строка(стр2.СкидкаНаценка2)+" ","")
					+?(стр2.СкидкаПредоплаты<>стр2.СкидкаПредоплаты2, " Предоплата: "+строка(стр2.СкидкаПредоплаты)+" >> "+строка(стр2.СкидкаПредоплаты2)+" ", "")
					+?(стр2.Бонус<>стр2.Бонус2, " Бонус: "+строка(стр2.Бонус)+" >> "+строка(стр2.Бонус2)+" ", "")
					+"
					|";
		
  КонецЦикла;	
  
//-------------последнее----------------------------  
Если текстОповещения <>"" тогда
  зад1.СодержаниеСобытия = текстОповещения;
  зад1.Записать(РежимЗаписиДокумента.Проведение);
  КолОповещ = КолОповещ + 1;
  сообщить(строка(КолОповещ)+" Создано уведомление по ""Событию"" для "+строка(стр2.Менеджер), СтатусСообщения.Информация);
КонецЕсли;

  Предупреждение("Сформировано "+строка(КолОповещ)+" документов ""Событие""
  				 | с включенным оповещение для Менеджеров.",60);
  
КонецПроцедуры




функция СоздатьСобытиеПользователя(стр2)
	
	зад1 = документы.Событие.СоздатьДокумент();  //задачи.ЗадачиПользователя.СоздатьЗадачу();
	
	зад1.ОписаниеСобытия = "Проверьте изменение Правил по клиентам!";
	
	зад1.ВидОбъекта = Перечисления.ВидыОбъектовСобытия.Контрагент;
	зад1.Контрагент = стр2.Контрагент;
	
	зад1.Ответственный  = стр2.менеджер;
	 зад1.Комментарий    = "Изменены или Выключены правила Менеджером тов.группы: "+глТекущийПользователь;
	 
	зад1.Дата = ТекущаяДата();
	зад1.НачалоСобытия 	  = ТекущаяДата();
	зад1.ОкончаниеСобытия = КонецДня(ТекущаяДата());
	
	зад1.НапомнитьОСобытии = истина;
	зад1.ВремяНапоминания  = ТекущаяДата();
	
	зад1.ВидСобытия		  = Перечисления.ВидыСобытий.Прочее;
	
	зад1.ТипСобытия		  = Перечисления.ВходящееИсходящееСобытие.Входящее;
	
	зад1.Важность		  = Перечисления.Важность.Высокая;
	зад1.СостояниеСобытия = Перечисления.СостоянияСобытий.Запланировано; //  да/нет
	
	возврат зад1;
	
КонецФункции

Процедура КоманднаяПанель1УтвердитьЭтиСкидки(Кнопка)
	выкл = ложь;
	// после пересчета, но еще не записали ничего... нельзя создать оповещение
	ЭлементыФормы.КоманднаяПанель2.Кнопки.СоздатьОповещение.доступность = ЛОЖЬ; 
	выкл = ЭлементыФормы.КоманднаяПанель2.Кнопки.УтвердитьВсеСкидки.Пометка;	
	
	i=0;
	для каждого стр1 из ТаблицаКлиентов цикл
		Если не стр1.флаг тогда продолжить; КонецЕсли;
		выкл = НЕ стр1.Выключено; // первая попавшаяся... 
		i=1;
	    прервать;
	КонецЦикла;
	
	если i=0 тогда 
		если Вопрос("Изменить все "+?(выкл, "ВЫКЛ.", "ВКЛ.")+" правила?", РежимДиалогаВопрос.ДаНет, 30) = КодВозвратаДиалога.Да тогда
			для каждого стр1 из ТаблицаКлиентов цикл
				Если стр1.Выключено = выкл тогда 
					стр1.Выключено = не выкл;
					стр1.Флаг=Истина;
					i=1;
				иначе стр1.Флаг=ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		ЭлементыФормы.КоманднаяПанель2.Кнопки.УтвердитьВсеСкидки.Пометка = не выкл;
	Иначе	
		для каждого стр1 из ТаблицаКлиентов цикл
			Если не стр1.флаг тогда продолжить; КонецЕсли;
			стр1.Выключено = выкл;
		КонецЦикла;	
		ЭлементыФормы.КоманднаяПанель2.Кнопки.УтвердитьВсеСкидки.Пометка = выкл;
    КонецЕсли;
	
	Если ЭлементыФормы.КоманднаяПанель2.Кнопки.УтвердитьВсеСкидки.Пометка тогда
		ЭлементыФормы.КоманднаяПанель2.Кнопки.УтвердитьВсеСкидки.Текст = "Вкл";
	Иначе
		ЭлементыФормы.КоманднаяПанель2.Кнопки.УтвердитьВсеСкидки.Текст ="Выкл";
	КонецЕсли;

КонецПроцедуры

Процедура ТаблицаКлиентовСкидкаНаценка2Регулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = Элемент.Значение + Направление * 0.01;
КонецПроцедуры

Процедура ТаблицаКлиентовПриоритетОткрытие(Элемент, СтандартнаяОбработка)
	 СтандартнаяОбработка = ложь;
	 стр1 = ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные;
	 
    ФормаПравила=Обработки.ПравилаЦенообразования.ПолучитьФорму("Форма");
	ФормаПравила.Контрагент = стр1.Контрагент;
	ФормаПравила.Открыть();	
	
КонецПроцедуры

Процедура КрасныйПорогРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = Элемент.Значение + Направление * 0.1;
	ЭлементыФормы.ТаблицаКлиентов.ОбновитьСтроки();
КонецПроцедуры

Процедура КоманднаяПанельПравилаОбновить(Кнопка)
	Если ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные=неопределено тогда
		текСтр=1
	Иначе текСтр=ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные.НомерСтроки;
	КонецЕсли;	
	//проверим изменился ли регистр
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ *,
	              |	Правила.НоменклатурнаяГруппа.Ответственный КАК Менеджер,
	              |	ВЫБОР
	              |		КОГДА Правила.Приоритет < 0
	              |			ТОГДА ИСТИНА
	              |		ИНАЧЕ ЛОЖЬ
	              |	КОНЕЦ КАК Исключительное
	              |ИЗ
	              |	РегистрСведений.ПравилаЦенообразованияОбщие КАК Правила
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	Правила.Приоритет";
	тзтекСостояниеРегистра=Запрос.Выполнить().Выгрузить();
	//РегИзменился=не СравнитьТаблицыНаборовЗаписей(тзОригинал, тзтекСостояниеРегистра);
	//   	
	//Если РегИзменился тогда
	//	Предупреждение("Регистр изменился, таблица будет перезаполнена!",10);
		ЗаполнитьДанныеТаблицы();
	//Иначе
	//	Предупреждение("Регистр НЕ изменился!", 30);
	//КонецЕсли;	
   ЭлементыФормы.ТабличнаяЧастьПравила.ТекущаяСтрока = ТабличнаяЧастьПравила[текСтр-1];
   
   КоманднаяПанель1ОбновитьСписок(неопределено); // при обновлении правил - по текущему - найдём клиентов
   
КонецПроцедуры

Процедура ТабличнаяЧастьПравилаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Изменен тогда
		ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
	КонецЕсли;
	
	Если ДанныеСтроки.Исключительное тогда
		ОформлениеСтроки.ЦветТекста = webЦвета.ТемноЗеленый;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1Заменить(Кнопка)
	
	текСтр = ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные;
Если Переключатель1 <2 тогда	
	если текСтр<>неопределено тогда
		СтарЗнач = ?(Переключатель1 = 0,  текСтр.СкидкаНаценка2, текСтр.СкидкаПредоплаты2);
	иначе
		СтарЗнач = 0;
	КонецЕсли;
	
	Если не ВвестиЧисло(СтарЗнач, "Введите искомое значение "+?(Переключатель1 = 0, "Скидки", "Предоплаты")) тогда
		Предупреждение("Изменение - отменено!", 10);
		возврат;
	КонецЕсли;	
		
	НовЗнач = СтарЗнач;
	Если не ВвестиЧисло(НовЗнач, "Введите новое значение "+?(Переключатель1 = 0, "Скидки", "Предоплаты")) тогда
		Предупреждение("Изменение - отменено!", 10);
		возврат;
	КонецЕсли;
	
		Для каждого стр2 из ТаблицаКлиентов цикл
			стр2.Флаг = ЛОЖЬ;
			Если Переключатель1 = 0 и стр2.СкидкаНаценка2 = СтарЗнач тогда
				стр2.СкидкаНаценка2 = НовЗнач;
				стр2.Флаг = Истина;
			ИначеЕсли Переключатель1 = 1 и стр2.СкидкаПредоплаты2 = СтарЗнач тогда
				стр2.СкидкаПредоплаты2= НовЗнач;
				стр2.Флаг = Истина;
			КонецЕсли;
			
	    КонецЦикла;
		
//======================================================================================
Иначе
	если текСтр=неопределено тогда
		Предупреждение("Нажмите в ячейку того значения, которое хотите изменить...",10);
		возврат;
	КонецЕсли;	
	
	если ПолеВыбора="" тогда	
		 ПолеВыбора = ЭлементыФормы.ТаблицаКлиентов.ТекущаяКолонка.Имя;
 	КонецЕсли;
 
	 назв = ПолеВыбора;
	 
	  Если прав( назв, 1)="2" тогда  
		  назв = лев( назв, стрДлина( назв )-1 );
	  КонецЕсли;			  
		СтарЗнач = текСтр[назв];
		НовЗнач  = текСтр[назв+"2"];
	
	Если не ВвестиЗначение(СтарЗнач, "Старое значение "+назв) тогда
		Предупреждение("Изменение - отменено!", 10);
		возврат;
	КонецЕсли;		
	
	Если не ВвестиЗначение(НовЗнач, "Новое значение "+назв) тогда
		Предупреждение("Изменение - отменено!", 10);
		возврат;
	КонецЕсли;		
	
	Для каждого стр2 из ТаблицаКлиентов цикл
			стр2.Флаг = ЛОЖЬ;
			Если стр2[назв] = СтарЗнач тогда
				стр2[назв+"2"] = НовЗнач;
				стр2.Флаг = Истина;
			КонецЕсли;
    КонецЦикла;
КонецЕсли;

КонецПроцедуры


Процедура КоманднаяПанель2ТипЦен(Кнопка)
		
КонецПроцедуры


Процедура КоманднаяПанель1Флаг0(Кнопка)
	установитьФлаги(0);
КонецПроцедуры

Процедура КоманднаяПанель1Флаг1(Кнопка)
	
	//установитьФлаги(1);
	стр0 = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
	
	максСкидка     = ?(стр0=неопределено, 200, стр0.МаксСкидкаНаценка);
	максПредоплата = ?(стр0=неопределено, 0, стр0.МаксСкидкаПредоплаты);
	
	Фл = Истина;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	
	Ответ = Вопрос("Выделить ВСЕ строки?", Режим, 60);
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда// не все...
	Режим = РежимДиалогаВопрос.ДаНетОтмена;
	
	
	Ответ = Вопрос("Выбрать только Большие скидки "+?(Переключатель1=1,"Предоплаты ","")+"(Тёмно-красные) - [Да] 
					|только Небольшие скидки "+?(Переключатель1=1,"Предоплаты ","")+"(Ярко-красные)  - [Нет]
					|Иначе остальные (Чёрные) - [Отмена]?", Режим, 60, КодВозвратаДиалога.Да );
		Если Ответ = КодВозвратаДиалога.Да Тогда
			вар = 12;
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			вар = 11;
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			вар = 13;
		КонецЕсли;
	 Иначе
		 вар = 0; //ВСЕ
	 КонецЕсли;
	 
	Для каждого стр1 из ТаблицаКлиентов цикл
		
		Если Вар=0 Тогда //все выкл!
			стр1.флаг = Фл;
			продолжить;
		КонецЕсли;
		
//выключать НЕ НАДО!		стр1.флаг = ЛОЖЬ;
	Если Переключатель1=0 тогда // по Скидке
		Если стр1.СкидкаНаценка2<200 тогда
				
			Если вар=11 Тогда
				если  -(стр1.СкидкаНаценка - максСкидка)<=КрасныйПорог 
					и -(стр1.СкидкаНаценка - максСкидка)>0 тогда
					стр1.флаг = Фл;
				КонецЕсли;	
				
			ИначеЕсли Вар=12 Тогда 
				если максСкидка - стр1.СкидкаНаценка > КрасныйПорог тогда
				стр1.флаг  = Фл;
				КонецЕсли;	
				
			ИначеЕсли Вар=13 тогда
				Если -(стр1.СкидкаНаценка - максСкидка)<=0 тогда
					стр1.флаг = Фл;
				КонецЕсли;	
				
			КонецЕсли;
			
		ИначеЕсли Вар=20 тогда //Синие
				стр1.флаг = Фл;
		КонецЕсли;
	Иначе
		Если вар=11 Тогда
		если  -(стр1.СкидкаПредоплаты - максПредоплата)<=КрасныйПорог 
			и -(стр1.СкидкаПредоплаты - максПредоплата)>0 тогда
			стр1.флаг = Фл;
		КонецЕсли;	
		
		ИначеЕсли Вар=12 Тогда 
		если -(стр1.СкидкаПредоплаты - максПредоплата) > КрасныйПорог тогда
		стр1.флаг  = Фл;
		КонецЕсли;	
				
		ИначеЕсли Вар=13 тогда
			Если-(стр1.СкидкаПредоплаты - максПредоплата)<=0 тогда
				стр1.флаг = Фл;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;

	КонецЦикла;	

КонецПроцедуры

Процедура КоманднаяПанель1Флаг2(Кнопка)
	установитьФлаги(2);
КонецПроцедуры

процедура установитьФлаги(ном=0)
	для каждого стр1 из ТаблицаКлиентов цикл
		стр1.Флаг = ?(ном=1, Истина, 
						?(ном=2, НЕ стр1.Флаг, ЛОЖЬ));
	КонецЦикла;	
КонецПроцедуры	

Процедура Переключатель1ПриИзменении(Элемент)
	
	ЭлементыФормы.Переключатель1.Шрифт = новый Шрифт(ЭлементыФормы.Переключатель1.Шрифт,,, Переключатель1=0);
	ЭлементыФормы.Переключатель2.Шрифт = новый Шрифт(ЭлементыФормы.Переключатель1.Шрифт,,, Переключатель1=1);
	ЭлементыФормы.Переключатель3.Шрифт = новый Шрифт(ЭлементыФормы.Переключатель1.Шрифт,,, Переключатель1=2);
	
	ЭлементыФормы.ПолеВыбора.доступность = (Переключатель1=2);
	//ЭлементыФормы.КоманднаяПанель2.Кнопки.ТипЦен.доступность = (Переключатель1=2);
	//ЭлементыФормы.КоманднаяПанель2.Кнопки.ЗаменитьСкидку.доступность = (Переключатель1<>2);
	//ЭлементыФормы.КоманднаяПанель2.Кнопки.Действие.доступность 		 = (Переключатель1<>2);
	
КонецПроцедуры

Процедура ТаблицаКлиентовПриАктивизацииЯчейки(Элемент)
	
	Если Переключатель1=2 тогда
		текСтр = ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные;
		если текСтр=неопределено тогда
			возврат;
		КонецЕсли;	
	ПолеВыбора = ЭлементыФормы.ТаблицаКлиентов.ТекущаяКолонка.Имя;
		если прав(ПолеВыбора,1)<>"2" тогда // только новые значения редактируются!
			ПолеВыбора = ПолеВыбора+"2";
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

Процедура ТаблицаКлиентовПередУдалением(Элемент, Отказ)
	
	Стр2 = ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные;
	
	Если Вопрос(" Вы действительно хотите УДАЛИТЬ Правило № "+строка(стр2.Приоритет)+"
			    |клиента: "+строка(Стр2.Контрагент)+" из его Персональных правил?", РежимДиалогаВопрос.ДаНет, 0, 
		     КодВозвратаДиалога.Нет, "Удалить" )<> КодВозвратаДиалога.Да Тогда
    	Отказ = ЛОЖЬ;
	КонецЕсли;
	
	Если Вопрос("  УДАЛЕНИЕ персональных правил Клиента опасная операция!
			    |Вы действительно хотите выполнить именно УДАЛЕНИЕ правил?", РежимДиалогаВопрос.ДаНет, 10, 
		     КодВозвратаДиалога.Нет, "Удалить" )<> КодВозвратаДиалога.Да Тогда
    	Отказ = ЛОЖЬ;
	КонецЕсли;

	Если не Отказ тогда
		регСв = РегистрыСведений.ПравилаЦенообразования.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств( регСв, стр2);
		
		попытка
			регСв.Удалить();
			сообщить("Удалено правило №"+строка(стр2.Приоритет)+" клиента: "+строка(стр2.Контрагент),СтатусСообщения.Информация); 
			
		//----------------------Журнал изменений------------------------------	
			текстСообщ = "УДАЛЕНО правило № "+строка(стр2.Приоритет)+" по контрагенту: "+строка(стр2.Контрагент)+"
			|НаценкаСкидка: "+строка(стр2.СкидкаНаценка)
			+"; Предоплата:"+строка(стр2.СкидкаПредоплаты)
			+"; Бонус="+строка(стр2.Бонус)
			+"; ТипЦен="+строка(стр2.ТипЦен)
			+"; НоменклатурнаяГруппа="+строка(стр2.НоменклатурнаяГруппа)
			+"; Номенклатура="+строка(стр2.Номенклатура)
			+"; ПодСтрока="+строка(стр2.ПодСтрока)
			+"; ВходитВПапку="+строка(стр2.ВходитВПапку);
			
		 записьЖурнала = РегистрыСведений.ЖурналИзменений.СоздатьМенеджерЗаписи();
		 записьЖурнала.НомерЗаписи = стр2.Приоритет;
		 записьЖурнала.Пользователь= ПараметрыСеанса.ТекущийПользователь;
		 записьЖурнала.Компьютер   = ИмяКомпьютера();
		 записьЖурнала.Объект	   = стр2.Контрагент;
		 записьЖурнала.Период	   = ТекущаяДата();
		 записьЖурнала.Событие	   = "Установка персональных скидок";
		 записьЖурнала.Комментарий = текстСообщ;
		 записьЖурнала.Записать(истина); //перезапись

		исключение	
			сообщить("Ошибка при удалении правила №"+строка(стр2.Приоритет)+" клиента: "+строка(стр2.Контрагент)+":"+ОписаниеОшибки(),СтатусСообщения.Внимание); 
		КонецПопытки;
	КонецЕсли;	
	
КонецПроцедуры

Процедура КоманднаяПанель2Удалить(Кнопка)
	Если Вопрос("     Вы действительно хотите УДАЛИТЬ ВСЕ 
				|выбранные Правила клиентов из их Персональных правил?", РежимДиалогаВопрос.ДаНет, 0, 
		     КодВозвратаДиалога.Нет, "Удалить" ) <> КодВозвратаДиалога.Да Тогда
    	ВОЗВРАТ;
	КонецЕсли;
	Если Вопрос("  УДАЛЕНИЕ персональных правил Клиентов опасная операция!
				|Вы действительно хотите выполнить именно УДАЛЕНИЕ правил?", РежимДиалогаВопрос.ДаНет, 10, 
		     КодВозвратаДиалога.Нет, "Удалить" )<> КодВозвратаДиалога.Да Тогда
    	ВОЗВРАТ;
	КонецЕсли;

сообщить(строка(ТекущаяДата())+" ------ начало удаления выбранных правил Клиентов ----");
N=0;
	для каждого стр2 из ТаблицаКлиентов цикл
		Если не стр2.Флаг тогда
			продолжить;
		КонецЕсли;	
		
		регСв = РегистрыСведений.ПравилаЦенообразования.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств( регСв, стр2);
		
		попытка
			регСв.Удалить();
			сообщить("Удалено правило №"+строка(стр2.Приоритет)+" клиента: "+строка(стр2.Контрагент),СтатусСообщения.Информация); 
			N=N+1;
		//----------------------Журнал изменений------------------------------	
			текстСообщ = "УДАЛЕНО правило № "+строка(стр2.Приоритет)+" по контрагенту: "+строка(стр2.Контрагент)+"
			|НаценкаСкидка: "+строка(стр2.СкидкаНаценка)
			+"; Предоплата:"+строка(стр2.СкидкаПредоплаты)
			+"; Бонус="+строка(стр2.Бонус)
			+"; ТипЦен="+строка(стр2.ТипЦен)
			+"; НоменклатурнаяГруппа="+строка(стр2.НоменклатурнаяГруппа)
			+"; Номенклатура="+строка(стр2.Номенклатура)
			+"; ПодСтрока="+строка(стр2.ПодСтрока)
			+"; ВходитВПапку="+строка(стр2.ВходитВПапку);
			
		 записьЖурнала = РегистрыСведений.ЖурналИзменений.СоздатьМенеджерЗаписи();
		 записьЖурнала.НомерЗаписи = стр2.Приоритет;
		 записьЖурнала.Пользователь= ПараметрыСеанса.ТекущийПользователь;
		 записьЖурнала.Компьютер   = ИмяКомпьютера();
		 записьЖурнала.Объект	   = стр2.Контрагент;
		 записьЖурнала.Период	   = ТекущаяДата();
		 записьЖурнала.Событие	   = "Установка персональных скидок";
		 записьЖурнала.Комментарий = текстСообщ;
		 записьЖурнала.Записать(истина); //перезапись

		исключение	
			сообщить("Ошибка при удалении правила №"+строка(стр2.Приоритет)+" клиента: "+строка(стр2.Контрагент)+":"+ОписаниеОшибки(),СтатусСообщения.Внимание); 
		КонецПопытки;

	КонецЦикла;	
сообщить("------ Удалено "+строка(N)+" выбранных правил Клиентов ----");

	Предупреждение("Удалено "+строка(N)+" правил клиентов!");
КонецПроцедуры

Процедура ТаблицаКлиентовСкидкаНаценка2ПриИзменении(Элемент)
	стр1 = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
    максСкидки     =стр1.МаксСкидкаНаценка;					   
    максПредоплаты =стр1.МаксСкидкаПредоплаты;
	
	Если Элемент.Значение + ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные.Бонус2 < максСкидки  и ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные.СкидкаНаценка > Элемент.Значение Тогда
	    Элемент.Значение = ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные.СкидкаНаценка;
	КонецЕсли;
КонецПроцедуры

Процедура ТаблицаКлиентовСкидкаПредоплаты2ПриИзменении(Элемент)
	стр1 = ЭлементыФормы.ТабличнаяЧастьПравила.ТекущиеДанные;
    максСкидки     =стр1.МаксСкидкаНаценка;					   
    максПредоплаты =стр1.МаксСкидкаПредоплаты;
	
	Если Элемент.Значение  < максПредоплаты  и ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные.СкидкаПредоплаты > Элемент.Значение Тогда
	    Элемент.Значение = ЭлементыФормы.ТаблицаКлиентов.ТекущиеДанные.СкидкаПредоплаты;
	КонецЕсли;
КонецПроцедуры

Процедура ТаблицаКлиентовПередНачаломДобавления(Элемент, Отказ, Копирование)
			Отказ = истина;
КонецПроцедуры




СписокПроизводителиШин =Новый СписокЗначений;
СписокПроизводителиДисков =Новый СписокЗначений;

СписокПапкиШин =Новый СписокЗначений;
СписокПапкиДисков =Новый СписокЗначений;

	ТипЦенБазовая 	 	= Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008");
	ТипЦенКрупныйОпт 	= Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005");
	//ТипЦенЯкорь 	 	= Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00003");
	//ТипЦенРеккомендРозн = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00011");
