Перем Эксель, Книга, ЛистСезон,Лист, КоличествоСтрок;

Процедура Пауза(Сек)
	scr = Новый COMОбъект("WScript.Shell");
	scr.Run("sleep "+СокрЛП(Число(Сек)),0,1);
КонецПроцедуры


Процедура КнопкаВыполнитьНажатие(Кнопка)
     //загрузим курсы
	 Попытка
		 ЗагрузитьКурсы();
	 исключение
		 Сообщить("Загрузка курсов: "+ОписаниеОшибки());
	 КонецПопытки;
	 
	 //
	СписокКонтрагентов=Новый СписокЗначений;
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("91735")); //FREEMAN RACING WHEELS INC
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93695")); //NINGBO PARTNER INTERNATIONAL TRADE CO., LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("91535")); //JIANGSU SAINTY MACHINERY I&E CORP. LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000715")); //Zhejiang Jingu Company Ltd
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93777")); //Steel Strips Wheels Limited
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93694")); //Zhangzhou Shuangsheng WHeels Co., ltd
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("91834")); //NINGBO LONGTIME MACHINE CO.,LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001626")); //XIAMEN YONGXINGXUN INDUSTRY AND TRADE CO., LTD
	
	МассивФайлов=новый Массив;
	
	Запрос=новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка,
	|	ЗаказПоставщику.НомерКонтейнера
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	//УсловиеСтраховка
	|	 ЗаказПоставщику.Контрагент В(&СписокКонтрагентов)
	|	И ЗаказПоставщику.Дата МЕЖДУ &ДатаН И &ДатаК
	|	И ЗаказПоставщику.Проведен = ИСТИНА";
	Если флБезСтраховки тогда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"//УсловиеСтраховка","ЗаказПоставщику.СтраховкаСформирована = ЛОЖЬ И");
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаН",НачПериода);
	Запрос.УстановитьПараметр("ДатаК",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("СписокКонтрагентов",СписокКонтрагентов);
	Рез=Запрос.Выполнить().Выбрать();
	Если Рез.Количество()>0 тогда
		Пока Рез.Следующий() Цикл
			Попытка
				ДокОб=Рез.Ссылка.ПолучитьОбъект();
				ПроставитьПорты(ДокОб,МассивФайлов);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивФайлов.Количество()>0 и
		Вопрос("Отправить пользователю?",РежимДиалогаВопрос.ДаНет,20,КодВозвратаДиалога.Нет)=КодВозвратаДиалога.Да  Тогда
		
		Почта=Новый ИнтернетПочта;
		УЗ = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("no-reply@yst76.ru");
		ИПП=Новый ИнтернетПочтовыйПрофиль;
		ИПП.АдресСервераSMTP=УЗ.SMTPСервер;
		ИПП.ПортSMTP=УЗ.ПортSMTP;
		Если УЗ.ТребуетсяSMTPАутентификация Тогда
			ИПП.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
			ИПП.ПарольSMTP         = УЗ.ПарольSMTP;
			ИПП.ПользовательSMTP   = УЗ.ЛогинSMTP;
		Иначе
			ИПП.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
			ИПП.ПарольSMTP         = "";
			ИПП.ПользовательSMTP   = "";
		КонецЕсли;
		
		Письмо=Новый ИнтернетПочтовоеСообщение;
		Письмо.Отправитель=УЗ.АдресЭлектроннойПочты;
		Письмо.Получатели.Добавить("medvedev@yst76.ru");
		Письмо.Получатели.Добавить("smirnov@yst.ru");
		//Письмо.Получатели.Добавить("serebrennikovaa@mail.ru");

		Письмо.Тема="Страховка ЖАСО!";
		Письмо.ИмяОтправителя =""+глТекущийПользователь;
		Письмо.Организация ="ТК ""Яршинторг""";
		
		Вложение1ZIP=КаталогВременныхФайлов()+"\Вложение.zip";
		Архив = Новый ЗаписьZIPФайла(Вложение1ZIP,,,
		МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Максимальный, МетодШифрованияZIP.Zip20);
		Для каждого эл из МассивФайлов цикл
			Архив.Добавить(эл, РежимСохраненияПутейZIP.НеСохранятьПути);
		КонецЦикла;
		Архив.Записать();
        Письмо.Вложения.Добавить(Вложение1ZIP);
		
		Письмо.Тексты.Добавить("Страховые заявления.",ТипТекстаПочтовогоСообщения.ПростойТекст);
		Письмо.ОбработатьТексты();
		
		попытка
			Почта.Подключиться(ИПП);
			Почта.Послать(Письмо);
			Почта.Отключиться();
			#Если Клиент Тогда
				сообщить(" >>>  Письмо отправлено.", СтатусСообщения.Информация);
			#КонецЕсли
		исключение
			попытка
				Пауза(2);
				Почта.Подключиться(ИПП);
				Почта.Послать(Письмо);
				Почта.Отключиться();
				#Если Клиент Тогда
					сообщить(" >>>  Письмо отправлено со второй попытки", СтатусСообщения.Информация);
				#КонецЕсли
			исключение
				#Если Клиент Тогда
					сообщить("xxxxx Ошибка при отправке письма - "+ОписаниеОшибки(), СтатусСообщения.Внимание);
				#КонецЕсли
			конецПопытки;
		конецПопытки;	
	КонецЕсли;
	
	Для каждого эл из МассивФайлов Цикл
		Попытка
			УдалитьФайлы(эл);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ПроставитьПорты(ДокОб,МассивФайлов)
	Сформировали=ложь;
	Если ЛистСезон<>неопределено тогда
		КолонкаПортВыгрузки = "K";
		КолонкаПортПрихода  = "N";
		КолонкаКонтейнер    = "I";
		КолонкаЛиния        = "M";
		КолонкаСудна        = "R";
		КолонкаПорты        = "S";
		КолонкаКоносамент   = "E";
		
		КонтейнерИзДока=СокрЛП(ДокОб.НомерКонтейнера);
		Если КонтейнерИзДока<>"" тогда
			//Сформировали=истина;
			//ДокОб.СуднаПортыПерегруза.Очистить();
			НСтр = Лист.Columns(КолонкаКонтейнер).Find(КонтейнерИзДока);
			Если НСтр<>Неопределено тогда
				СтрокаExcel=НСтр.Row;
				
				Коносамент = СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаКоносамент).Value);

				
				Линия =  СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаЛиния).Value);
				Судна =  Лист.Cells(СтрокаExcel,  КолонкаСудна).Value;
				Порты =  Лист.Cells(СтрокаExcel,  КолонкаПорты).Value;
				ПортВыгрузки =  Лист.Cells(СтрокаExcel,  КолонкаПортВыгрузки).Value;
				ПортПрихода =  Лист.Cells(СтрокаExcel,  КолонкаПортПрихода).Value;
				ПортыМасс=РазложитьСтрокуВМассивПодстрок(Порты, "/");
				СуднаМасс=РазложитьСтрокуВМассивПодстрок(Судна, "/");
				к=0;
				ЭлЛиния=Справочники.ЛинииПеревозки.НайтиПоНаименованию(Линия);
				Если не ЗначениеЗаполнено(ЭлЛиния) тогда
					ЭлЛиния=Справочники.ЛинииПеревозки.СоздатьЭлемент();
					ЭлЛиния.Наименование=Линия;
					ЭлЛиния.Записать();
				КонецЕсли;
				Если СокрЛП(Судна)<>"" тогда //в файле есть судна
					Сформировали=истина;
					ДокОб.СуднаПортыПерегруза.Очистить();
					Для каждого элСудно из СуднаМасс Цикл
						ПортИзФайла=СокрЛП(?(к=0,ПортВыгрузки,ПортыМасс[к-1]));
						ЭлПорт=Справочники.Порты.НайтиПоНаименованию(ПортИзФайла);
						Если не значениеЗаполнено(ЭлПорт) тогда
							ЭлПорт=Справочники.Порты.СоздатьЭлемент();
							ЭлПорт.Наименование=ПортИзФайла;
							ЭлПорт.Записать();
						КонецЕсли;
						стр=ДокОб.СуднаПортыПерегруза.Добавить();
						стр.ЛинияПеревозки=ЭлЛиния.Ссылка;
						стр.Судно=элСудно;
						стр.ПортПерегруза=ЭлПорт.Ссылка;
						
						к=к+1;
					КонецЦикла;
					Если врег(ПортПрихода)="УСТЬ" тогда
						ПортПрихода="СПБ УСТЬ-ЛУГА (Россия)";
						Перевозчик=Справочники.Контрагенты.НайтиПоКоду("93345");
					ИначеЕсли  врег(ПортПрихода)="СПБ" тогда
						ПортПрихода="СПБ (Россия)";
						Перевозчик=Справочники.Контрагенты.НайтиПоКоду("93345");
					ИначеЕсли врег(ПортПрихода)="НОВ" тогда
						ПортПрихода="Новороссийск (Россия)";
						Перевозчик=Справочники.Контрагенты.НайтиПоКоду("93405");
					ИначеЕсли врег(ПортПрихода)="ВЛАД" тогда
						ПортПрихода="Владивосток (Россия)";
						Перевозчик=Справочники.Контрагенты.НайтиПоКоду("93763");	
					КонецЕсли;	
					ЭлПорт=Справочники.Порты.НайтиПоНаименованию(ПортПрихода);
					Если не значениеЗаполнено(ЭлПорт) тогда
						ЭлПорт=Справочники.Порты.СоздатьЭлемент();
						ЭлПорт.Наименование=ПортПрихода;
						ЭлПорт.Записать();
					КонецЕсли;
					стр=ДокОб.СуднаПортыПерегруза.Добавить();
					//стр.ЛинияПеревозки=ЭлЛиния.Ссылка;
					стр.Судно=Перевозчик;
					стр.ПортПерегруза=ЭлПорт.Ссылка;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если Сформировали тогда
			ДокОб.СтраховкаСформирована=истина;
			ДокОб.Записать();
			Сообщить(""+ДокОб+" порты и суда заполнены");
			НапечататьСтраховку(ДокОб,МассивФайлов,Коносамент);
		Иначе
			Сообщить("В файле не найден контейнер с номером: '"+СокрЛП(ДокОб.НомерКонтейнера)+"' или в нем не заполнено судно!");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	флБезСтраховки=истина;
	Эксель = Новый COMОбъект("Excel.Application");
	ПутьКФайлу="\\Novikova\Таблица11\таблица 11.xls";
	Файл = Новый Файл(ПутьКФайлу);
	Если Не Файл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат;
	КонецЕсли; 
	Книга   = Эксель.Workbooks.Open(ПутьКФайлу);
	КоличествоЛистов = Книга.Sheets.Count;
	НомерЛиста=1;
	СписокЛистов=новый СписокЗначений;
	Пока НомерЛиста <= КоличествоЛистов Цикл
		СписокЛистов.Добавить(Книга.Sheets(НомерЛиста).Name);
		НомерЛиста=НомерЛиста+1;
	КонецЦикла;
	ЛистСезон=СписокЛистов.ВыбратьЭлемент("Укажите сезон");
	Лист                = Книга.Worksheets(ЛистСезон.Значение);
	КоличествоСтрок     = Лист.Cells(1,1).SpecialCells(11).Row;
КонецПроцедуры

Процедура ПриЗакрытии()
	Если Эксель<>неопределено тогда
		Эксель.DisplayAlerts = 0; 
		Эксель.Quit();
		//Эксель.DisplayAlerts = 1; 
	КонецЕсли;
КонецПроцедуры

Функция НапечататьСтраховку(Док,МассивФайлов,КоносаментИзФайла)
	
	//Объект = Док.ПолучитьОбъект();
	Каталог=КаталогВременныхФайлов();
	ЭлементСправочника = Справочники.ДополнительныеПечатныеФормы.НайтиПоНаименованию("Страховка ЖАСО");  //не по коду!
	ХранилищеВО = ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
	ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
	ХранилищеВО.Записать(ИмяФайла);
	ОбработкаПечати = ВнешниеОбработки.Создать(ИмяФайла);
	ОбработкаПечати.СсылкаНаОбъект = Док.Ссылка;
	ОбработкаПечати.НеОтправлятьНаПочту=истина;
	ОбработкаПечати.КоносаментИзФайла=КоносаментИзФайла;
	ТабДокумент = ОбработкаПечати.Печать();
	
	ИмяФайлаПоУмолчанию = Каталог + "\"+"Заказ " + СокрЛП(Док.Номер) + " контейнер "+СокрЛП(Док.НомерКонтейнера)+" от " + Формат(Док.Дата, "ДЛФ=D") + ".xls";	
	ТабДокумент.Записать(ИмяФайлаПоУмолчанию, ТипФайлаТабличногоДокумента.XLS);
	МассивФайлов.Добавить(ИмяФайлаПоУмолчанию);
	//Сообщить(Ссылка);
	Если Показывать тогда
		ТабДокумент.Показать();	
	КонецЕсли;
	
КонецФункции

Процедура ЗагрузитьКурсы()
	Валюты=Новый СписокЗначений;
	Валюты.Добавить(Справочники.Валюты.НайтиПоКоду("840"));
	Валюты.Добавить(Справочники.Валюты.НайтиПоКоду("978"));
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	МИНИМУМ(КурсыВалютСрезПоследних.Период) КАК Период
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта В (&Валюты)) КАК КурсыВалютСрезПоследних";
	Запрос.УстановитьПараметр("Валюты",Валюты);				 
	Рез=Запрос.Выполнить().Выбрать();	
	ПоследняяДатаВалют=НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1));
	Пока Рез.Следующий() Цикл
		ПоследняяДатаВалют=НачалоДня(Рез.Период);
	КонецЦикла;	
	
	Обр=Обработки.КурсыВалютРБК.Создать();
	Обр.НачДата=ПоследняяДатаВалют;
	Обр.КонДата=ТекущаяДата();
	
	Для Каждого эл из Валюты Цикл
		Нстр=Обр.СписокВалют.Добавить();
		нстр.Валюта= эл.Значение;
	КонецЦикла;
	
	Обр.ЗагрузитьКурсыСРБК(0,"");
КонецПроцедуры
