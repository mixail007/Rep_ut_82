Перем мЖирныйШрифт, мКурсивШрифт, мЖирныйКурсивШрифт;
перем СвойствоНаправлениеОтгрузки;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	//+++ С.Селин
	ВремяНачала = ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(Справочники.КлючевыеОперации.ОбъединениеЗаказовОдногоКлиента);
	Список = новый СписокЗначений;
	
	//Миронычев Вынес Список за условие Чтоб повторно не собирать перед проверкой  типов заказов
	//Список.ЗагрузитьЗначения(ТабличноеПоле1.ВыгрузитьКолонку("ЗаказПокупателя"));
	Для каждого стр1 из ТабличноеПоле1 цикл
		Если стр1.Флаг тогда  //+++ 20.07.2016
			Список.Добавить( стр1.ЗаказПокупателя );
		КонецЕсли;	
	КонецЦикла;	

	Если Флажок1 тогда
		
	началоВр = ТекущаяДата();
	
	// Контроль по валютам. +++  
	ЗапросПр = Новый Запрос("Выбрать Количество(различные ВалютаДокумента) как Х из Документ.ЗаказПокупателя где Ссылка в (&Список)");
		ЗапросПр.УстановитьПараметр("Список", Список);
	
	Выб = ЗапросПр.Выполнить().Выбрать();
	Если (Выб.Следующий()) Тогда 
		Если выб.Х>1 Тогда 
			Предупреждение("Нельзя объединять заказы покупателей по разным валютам в один общий заказ!", 30);
			Возврат;
		КонецЕсли;
	Иначе 
		//Сообщить("Нет заказов в табличной части");
	КонецЕсли;	
	
	стоп = ложь;
	
	//++++ доп.контроль - автовыключение заказов из объединения
	мен = неопределено;
	дог = неопределено;
 	БлокироватьСамовывоз = Истина;
	
	колСтопЛистНеРазрешен = 0;
	колСтопЛистРазрешен = 0;
	
	Для каждого стр1 из ТабличноеПоле1 цикл
		Если стр1.флаг тогда 
			Если мен=неопределено тогда 
				мен = стр1.Менеджер;
			иначе
				если мен <> стр1.Менеджер тогда
					стр1.флаг = ложь; 
					сообщить("Нельзя объединять заказы РАЗНЫХ менеджеров!", СтатусСообщения.Внимание);
					стоп = истина;
				КонецЕсли;
			КонецЕсли;
						
			Если дог=неопределено тогда 
				дог = стр1.Договор;
			иначе
				если дог <> стр1.Договор тогда
					стр1.флаг = ложь; 
					сообщить("Нельзя объединять заказы ПО РАЗНЫМ договорам!", СтатусСообщения.Внимание);
					стоп = истина;
				КонецЕсли;
			КонецЕсли;
			
			//+++ 24.10.2018 +++ тупой подсчет!
			Если ЕстьТоварыСтопЛиста(стр1.ЗаказПокупателя) тогда
				если стр1.ЗаказПокупателя.РазрешитьГрузитьТоварыИзСтопЛиста тогда
					колСтопЛистРазрешен = колСтопЛистРазрешен + 1;
		        иначе
					колСтопЛистНеРазрешен = колСтопЛистНеРазрешен + 1;
				КонецЕсли;
			КонецЕсли;	
				
		КонецЕсли;
	КонецЦикла; //===================================================================
	
	
	//24.10.2018  -   один или оба = 0  ->  это 3 варианта нормальные и только если <>0 !
	Если (колСтопЛистРазрешен*колСтопЛистНеРазрешен<>0) тогда 
		
		Для каждого стр1 из ТабличноеПоле1 цикл
			Если стр1.флаг 
			   //выключает неподтвержденные!
               и НельзяОбъединятьНеПодтвержденныйЗаказВКоторомЕстьТоварыСтопЛиста(стр1.ЗаказПокупателя) тогда 
	 			стр1.флаг = ложь; 
				сообщить("Нельзя объединять "+строка(стр1.ЗаказПокупателя)+" - с дисками стоп-листа без разрешения к отгрузке!", СтатусСообщения.Внимание);
				стоп = истина;
			КонецЕсли;
		КонецЦикла;	
		
	КонецЕсли;
	//++++++++++++++++++++++++++++ 10 тип с НЕ 10-ым СТОП+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    //Миронычев
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказПокупателя.ТипЗаказа
		|ИЗ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ ЗаказПокупателя.Ссылка В (&Ссылка)
		|	СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателя.ТипЗаказа";
	Запрос.УстановитьПараметр("Ссылка", Список);

	Результат = Запрос.Выполнить();
	табл  = Результат.Выгрузить();
	Отбор = Новый Структура("ТипЗаказа",10);
	Если табл.Количество()>1 Тогда //разные типы
		Если табл.НайтиСтроки(Отбор).Количество() > 0 Тогда 
			Сообщить("Нельзя объединять Заказ Интернет-магазина и Заказы терминала в один заказ!", СтатусСообщения.Внимание);
			стоп = Истина;
		КонецЕсли;
	КонецЕсли;
	//КонецМиронычев

	Если стоп тогда
		Возврат;
	КонецЕсли;	

	ОбъединитьЗаказыПокупателя(Контрагент1, Ложь, Подразделение); 
	
	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
 	парамЗапроса = "";
		Если ВремяВыполнения>0 тогда
		//общий модуль:  яштПрочее.ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки(
		КолЗаказов = 0;
		Для каждого стр1 из ТабличноеПоле1 цикл
			если стр1.флаг тогда КолЗаказов = КолЗаказов +1; КонецЕсли;
		КонецЦикла;

		ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 246, ВремяВыполнения, "Объединение "+строка(КолЗаказов)+" заказов по 1 клиенту: "+строка(Контрагент1)+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
		КонецЕсли;	
	КонецЕсли;
		
	//+++ С.Селин
	ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(Справочники.КлючевыеОперации.ОбъединениеЗаказовОдногоКлиента,ВремяНачала);
	
КонецПроцедуры


//процедуру надо перенести в общий модуль ИнтернетМагазин
//
Процедура ОбъединитьЗаказыПокупателя( Контрагент, ТолькоЧтениеЗаказов=ЛОЖЬ, Подразделение=неопределено, Предупреждения=Истина) ЭКСПОРТ
	
	Подразделение = ?(Подразделение=неопределено, справочники.Подразделения.НайтиПоКоду("00005"), Подразделение);
	Транзит = ?( Подразделение=справочники.Подразделения.НайтиПоКоду("00005"), ЛОЖЬ, Истина);
	
	Если ЗначениеНеЗаполнено(Контрагент1) тогда
		Если (Предупреждения) Тогда 
			Предупреждение("Не заполнен Контрагент!",10);
		Иначе 
			Сообщить("Не заполнен Контрагент!");
		КонецЕсли;
		возврат;
	КонецЕсли;		
	
	//1.находим заказы по Контрагенту и Подразделению
	// из регистра ЗаказыПокупателей - на случай Корректировок, изменений в проведении и проверки
	
	Если  ТабличноеПоле1.Количество()=0 или ТолькоЧтениеЗаказов тогда
		
		ТабличноеПоле1.Очистить();
		ДанныеДляТабПоля = ПолучитьДанныеДляТабличногоПоля(Контрагент, Транзит);  //13.10.2017 сразу в ТабПоле1
		ТабличноеПоле1 = ДанныеДляТабПоля.Выгрузить();
		
		СписокЗаказов = новый СписокЗначений;					
		СписокЗаказов.ЗагрузитьЗначения( ТабличноеПоле1.ВыгрузитьКолонку("ЗаказПокупателя") );
		
		таблМарш = получитьЗаказыВМаршрутах(СписокЗаказов);//04.12.2017
		//========СРАЗУ ПРОВЕРЯЕМ всю таблицу =======================
		i=0; N=ТабличноеПоле1.Количество();
		НомерТочки = -1; НомерСезонногоЗаказа=неопределено;
		колСтопЛистРазрешен = 0; колСтопЛистНеРазрешен=0;
		Пока i<N цикл
			стр1 = ТабличноеПоле1[i];
			
			Если стр1.Флаг тогда 	
				//--------10.02.2016 - контроль по точкам------------------
				стр1ЗаказПокупателяНомер     = получитьПолеЗаказа(стр1.ЗаказПокупателя, "Номер");
				стр1ЗаказПокупателяСамовывоз = получитьПолеЗаказа(стр1.ЗаказПокупателя, "Самовывоз");
				стр1ЗаказПокупателяТипЗаказа = получитьПолеЗаказа(стр1.ЗаказПокупателя, "ТипЗаказа");
				//24.10.2018
				РазрешитьГрузитьТоварыИзСтопЛиста=получитьПолеЗаказа(стр1.ЗаказПокупателя, "РазрешитьГрузитьТоварыИзСтопЛиста");
				
				если НомерТочки = -1 тогда
					НомерТочки = стр1.НомерТочки;
				иначеЕсли НомерТочки <>	стр1.НомерТочки тогда
					сообщить("Нельзя объединять заказы точки № "+строка(НомерТочки)+" с заказами другой точки № " +строка(стр1.НомерТочки) , СтатусСообщения.Внимание);
					стр1.Флаг = ЛОЖЬ;
				КонецЕсли;	
			
		//+++( 04.12.2017 - по задаче № 36453
				Если стр1.СпособОтгрузки.Код = 10 или стр1ЗаказПокупателяСамовывоз тогда //самовывоз  - силами покупателя за счет покупателя
					стр1.Флаг = ЛОЖЬ;
					сообщить("Нельзя объединять заказ № "+стр1ЗаказПокупателяНомер+" с самовывозом!", СтатусСообщения.Внимание);
				КонецЕсли;	
				
				Если стр1ЗаказПокупателяТипЗаказа = 10 тогда //IM-Service
					стр1.Флаг = ЛОЖЬ;
					сообщить("Нельзя объединять заказ № "+стр1ЗаказПокупателяНомер+" с типом 10!", СтатусСообщения.Внимание);
				КонецЕсли;	
				
				стр2 = таблМарш.Найти(стр1.ЗаказПокупателя, "ЗаказПокупателя");
				Если стр2<>Неопределено тогда
					стр1.Флаг = ЛОЖЬ;
					сообщить("Нельзя объединять заказ № "+стр1ЗаказПокупателяНомер+", который уже находится в маршруте № "+стр2.НомерМаршрута, СтатусСообщения.Внимание);
				КонецЕсли;	
				
			//+++ 24.10.2018 +++ тупой подсчет!
				Если ЕстьТоварыСтопЛиста(стр1.ЗаказПокупателя) тогда
					если РазрешитьГрузитьТоварыИзСтопЛиста тогда
						колСтопЛистРазрешен = колСтопЛистРазрешен + 1;
			        иначе
						колСтопЛистНеРазрешен = колСтопЛистНеРазрешен + 1;
					КонецЕсли;
				КонецЕсли;
				
 			КонецЕсли;
			
			i=i+1;	
		КонецЦикла;
		
		//+++ 24.10.2018 --- Задача № 57245 --- контроль стоп-листа п.1 ( нельзя Разрешенные с НеРазрешенными! )--------------------------------
		Если (колСтопЛистРазрешен*колСтопЛистНеРазрешен <> 0) тогда
			Для каждого стр1 из ТабличноеПоле1 цикл
				Если стр1.Флаг и НельзяОбъединятьНеПодтвержденныйЗаказВКоторомЕстьТоварыСтопЛиста(стр1.ЗаказПокупателя) тогда // НЕЛЬЗЯ ОБЪЕДИНЯТЬ!
					стр1.Флаг = ЛОЖЬ;
					сообщить("Нельзя объединять заказ № "+Строка(стр1.ЗаказПокупателя.Номер)+", который содержит диски стоп-листа и ещё не разрешен к отгрузке!", СтатусСообщения.Внимание);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		
		
		#Если НаКлиенте тогда
			Если Предупреждения Тогда 
				Предупреждение("Найдено "+строка(СписокЗаказов.Количество())+" заказов
				|   c указанной датой отгрузки!", 10);
			Иначе 
				Сообщить("Найдено "+строка(СписокЗаказов.Количество())+" заказов
				|   c указанной датой отгрузки!");			   
			КонецЕсли;			   
		#КонецЕсли	
		
		Возврат; //+++ выход!
		
	Иначе //----------------------------Если не ТолькоЧтениеЗаказов тогда ------------------------------------------
		СписокЗаказов = новый СписокЗначений;
		
	//+++( 24.10.2018 -----предварительный подсчет-------------
		колСтопЛистРазрешен=0; колСтопЛистНеРазрешен=0;
		для каждого стр1 из ТабличноеПоле1 цикл
			Если стр1.Флаг и ЕстьТоварыСтопЛиста(стр1.ЗаказПокупателя) тогда
				если стр1.ЗаказПокупателя.РазрешитьГрузитьТоварыИзСтопЛиста тогда
					колСтопЛистРазрешен = колСтопЛистРазрешен + 1;
		        иначе
					колСтопЛистНеРазрешен = колСтопЛистНеРазрешен + 1;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;	
	// --- Задача № 57245 --- контроль стоп-листа п.1 ( нельзя Разрешенные с НеРазрешенными! )--------------------------------
		Если (колСтопЛистРазрешен*колСтопЛистНеРазрешен <> 0) тогда
			Для каждого стр1 из ТабличноеПоле1 цикл
				Если стр1.Флаг и НельзяОбъединятьНеПодтвержденныйЗаказВКоторомЕстьТоварыСтопЛиста(стр1.ЗаказПокупателя) тогда // НЕЛЬЗЯ ОБЪЕДИНЯТЬ!
					сообщить("Нельзя объединять "+строка(стр1.ЗаказПокупателя)+", который содержит диски стоп-листа и ещё не разрешен к отгрузке!", СтатусСообщения.Внимание);
					стр1.Флаг = ЛОЖЬ;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
     //+++)
	 
		табЗнач = ТабличноеПоле1.Скопировать();
		табЗнач.Свернуть("Флаг, Договор, Менеджер, БонусПрименен", "Количество");   //24.07.2018
		
		i=0; N = табЗнач.Количество();
		пока i<N цикл //удалим выключенные
			если НЕ табЗнач[i].Флаг тогда
				табЗнач.Удалить(i); N=N-1;
			иначе i=i+1;
			КонецЕсли;	
		КонецЦикла;	
		
		Если ТабЗнач.Количество()>1 тогда // есть дубли!
			#Если НаКлиенте тогда
				Если Предупреждения Тогда 		
					Предупреждение("Нельзя объединять заказы покупателей 
					|по "+строка(табЗнач.Количество())+" разным Договорам/Менеджерам/Бонусам - в один общий заказ!", 10);
				Иначе 
					Сообщить("Нельзя объединять заказы покупателей 
					|по "+строка(табЗнач.Количество())+" разным Договорам/Менеджерам/Бонусам - в один общий заказ!");				   
				КонецЕсли;
			#КонецЕсли
			Возврат;
		КонецЕсли;	
		
		//10.02.2016 --------------------Контроль точек и Сезонников!-----------------
		i=0; N=ТабличноеПоле1.Количество();
		НомерТочки = -1; НомерСезонногоЗаказа = неопределено;
		Пока i<N цикл
			Если ТабличноеПоле1[i].Флаг тогда 	
				//--------10.02.2016 - контроль по точкам------------------
				если НомерТочки = -1 тогда
					НомерТочки = ТабличноеПоле1[i].НомерТочки;
				иначеЕсли НомерТочки <>	ТабличноеПоле1[i].НомерТочки тогда
					#Если Клиент тогда
						Если Предупреждения Тогда 		
							Предупреждение("Нельзя объединять заказы точки "+строка(НомерТочки)+" с заказами другой точки "
							+строка(ТабличноеПоле1[i].НомерТочки) , 10);
						Иначе
							сообщить("Нельзя объединять заказы точки "+строка(НомерТочки)+" с заказами другой точки "
							+строка(ТабличноеПоле1[i].НомерТочки) , СтатусСообщения.Внимание);
						КонецЕсли;
					#КонецЕсли
					ТабличноеПоле1[i].Флаг =ложь;
				КонецЕсли;	
			КонецЕсли;//ТабличноеПоле1[i].Флаг
			
			i=i+1;	
		КонецЦикла;
		//-----------------------------------------------------------
		для каждого стр1 из ТабличноеПоле1 цикл
			если стр1.флаг тогда
				СписокЗаказов.Добавить(стр1.ЗаказПокупателя );
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//====================================================================================
	
	Если СписокЗаказов.Количество()=0 тогда 
		#Если НаКлиенте тогда
			Если (Предупреждения) Тогда 
				Предупреждение("Нет"+?(транзит," транзитных","")+" заказов покупателя 
				|для объединения по Контрагенту: "+строка(Контрагент)+"
				|с датой отгрузки с "+Формат(ДатаОтгрузки0,"ДФ=dd.MM.yyyy")+" по "+Формат(ДатаОтгрузки1,"ДФ=dd.MM.yyyy"),10);
			Иначе 
				Сообщить("Нет"+?(транзит," транзитных","")+" заказов покупателя 
				|для объединения по Контрагенту: "+строка(Контрагент)+"
				|с датой отгрузки с "+Формат(ДатаОтгрузки0,"ДФ=dd.MM.yyyy")+" по "+Формат(ДатаОтгрузки1,"ДФ=dd.MM.yyyy"));
			КонецЕсли;
		#КонецЕсли	
		возврат;
	иначеЕсли СписокЗаказов.Количество()=1 тогда 
		#Если НаКлиенте тогда
			Если (Предупреждения) Тогда
				Предупреждение("Только один "+?(транзит," транзитный","")+" заказ покупателя:
				|"+строка(СписокЗаказов[0].Значение)+"
				|Объединение - не требуется!",10);
			Иначе 
				Сообщить("Только один "+?(транзит," транзитный","")+" заказ покупателя:
				|"+строка(СписокЗаказов[0].Значение)+"
				|Объединение - не требуется!");						   	
			КонецЕсли;				   
		#КонецЕсли	
		возврат;
	иначе
		#Если НаКлиенте тогда
			Сообщить("Выбрано: "+строка(СписокЗаказов.Количество())+?(транзит," транзитных","")+" заказов покупателя для объединения по Контрагенту: "+строка(Контрагент)+" с датой отгрузки с "+Формат(ДатаОтгрузки0,"ДФ=dd.MM.yyyy")+" по "+Формат(ДатаОтгрузки1,"ДФ=dd.MM.yyyy")+" и подразделению: "+строка(Подразделение), СтатусСообщения.Информация);
		#КонецЕсли
	КонецЕсли;	
	
	
	//---------------Заказанные и неотгруженные Товары по этим заказам--------------------------------------- 
	Запрос = Новый Запрос;
	запрос.УстановитьПараметр("СписокЗаказов", СписокЗаказов);
	запрос.УстановитьПараметр("Дата", Конецдня(ТекущаяДата()) );  // в пределах дня!
	
 списПодр7 = новый СписокЗначений; //список подразделенией 7 дней держится "статус" согласования цен
 списПодр7.Добавить( справочники.Подразделения.НайтиПоКоду("00005")); //Яр
 списПодр7.Добавить( справочники.Подразделения.НайтиПоКоду("00112")); //СПб
 списПодр7.Добавить( справочники.Подразделения.НайтиПоКоду("00133")); //Мск 
 запрос.УстановитьПараметр("списПодр7", списПодр7 );
 запрос.УстановитьПараметр("ТекДата", ТекущаяДата() );
 	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЗаказыПокупателя.Номенклатура КАК Номенклатура,
	               |	ЗаказыПокупателя.КоличествоОстаток КАК Количество,
	               |	ЗаказыПокупателя.СуммаВзаиморасчетовОстаток КАК Сумма,
	               |	ЗаказыПокупателя.ЗаказПокупателя
	               	//+++( 28.08.2018 
                |	, ЗаказПокупателяТовары.Статус КАК Статус,
                |	ЗаказПокупателяТовары.Статус КАК СтатусКол,
                |	ЗаказПокупателяТовары.Цена КАК Цена,
                |	РАЗНОСТЬДАТ(ЗаказыПокупателя.ЗаказПокупателя.Дата, &ТекДата, ДЕНЬ) КАК ЧислоДнейЗаказа,
                |	ВЫБОР
                |		КОГДА ЗаказыПокупателя.ЗаказПокупателя.Подразделение В (&списПодр7)
                |			ТОГДА ИСТИНА
                |		ИНАЧЕ ЛОЖЬ
                |	КОНЕЦ КАК Подразделение7

	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателей.Остатки(
	               |			&Дата,
	               |			ЗаказПокупателя В (&СписокЗаказов)
	               |				И (ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.ПустаяСсылка)
	               |					ИЛИ ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.Получен))) КАК ЗаказыПокупателя
					//+++( 28.08.2018 
               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                |			ЗакТовары.Статус КАК Статус,
                |			ЗакТовары.Номенклатура КАК Номенклатура,
                |			ЗакТовары.Ссылка КАК Заказ,
                |			ЗакТовары.Цена КАК Цена
                |		ИЗ
                |			Документ.ЗаказПокупателя.Товары КАК ЗакТовары
                |		ГДЕ
                |			ЗакТовары.Ссылка В(&СписокЗаказов)) КАК ЗаказПокупателяТовары
                |		ПО ЗаказыПокупателя.ЗаказПокупателя = ЗаказПокупателяТовары.Заказ
                |			И ЗаказыПокупателя.Номенклатура = ЗаказПокупателяТовары.Номенклатура

	               |ГДЕ
	               |	ЕСТЬNULL(ЗаказыПокупателя.КоличествоОстаток, 0) > 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЗаказыПокупателя.Номенклатура.Производитель,
	               |	Номенклатура
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(Сумма)
	          	//+++( 28.08.2018 
             	|	,МАКСИМУМ(Статус),
                |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусКол),
                |	МАКСИМУМ(Цена),
                |	МАКСИМУМ(ЧислоДнейЗаказа),
                |	МАКСИМУМ(Подразделение7)

	               |ПО
	               |	Номенклатура
	               |АВТОУПОРЯДОЧИВАНИЕ"; 
	ОбщийЗаказТовары = запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	запрос.УстановитьПараметр("СписокЗаказов", СписокЗаказов);
	запрос.УстановитьПараметр("Дата", Конецдня(ТекущаяДата()) );  // в пределах дня!
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПокупателяУслуги.Номенклатура,
	|	ЗаказПокупателяУслуги.Содержание,
	|	ЗаказПокупателяУслуги.Количество,
	|	ЗаказПокупателяУслуги.Сумма
	|ИЗ
	|	Документ.ЗаказПокупателя.Услуги КАК ЗаказПокупателяУслуги
	|ГДЕ
	|	ЗаказПокупателяУслуги.Ссылка В(&СписокЗаказов)
	|АВТОУПОРЯДОЧИВАНИЕ"; 
	
	ОбщийЗаказУслуги = запрос.Выполнить().Выбрать();
	
	//06.08.18 Смирнов
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЗаказПокупателяБонусы.Номенклатура,
	               |	СУММА(ЗаказПокупателяБонусы.Количество) КАК Количество
	               |ИЗ
	               |	Документ.ЗаказПокупателя.Бонусы КАК ЗаказПокупателяБонусы
	               |ГДЕ
	               |	ЗаказПокупателяБонусы.Ссылка В(&СписокЗаказов)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказПокупателяБонусы.Номенклатура
	               |АВТОУПОРЯДОЧИВАНИЕ"; 
	ТабБонусыИсходныхЗаказов = запрос.Выполнить().Выгрузить();
	//--Смирнов

	
	Если ОбщийЗаказТовары.Количество()=0 тогда 
		//	#Если НаКлиенте тогда
		Сообщить("--- Нет заказанных товаров для объединения! ---", СтатусСообщения.Внимание);
		//	#КонецЕсли	
		возврат;
	иначе
		//	#Если НаКлиенте тогда
		КолТов = ОбщийЗаказТовары.Количество();
		Сообщить("Заказано "+ строка(КолТов)+" товаров для объединения.", СтатусСообщения.Информация);
		//	#КонецЕсли	
	КонецЕсли;	
	
	
	#Если НаКлиенте тогда
		Если Предупреждения Тогда 	
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("  Отменить Объединение будет уже невозможно!
			|Вы уверены, что действительно хотите объединить
			|"+строка(СписокЗаказов.Количество())+" заказов 
			|c датой отгрузки "+?(ДатаОтгрузки0=НачалоДня(ДатаОтгрузки1)," = "+Формат(ДатаОтгрузки0,"ДЛФ=DD"),
			"с "+Формат(ДатаОтгрузки0,"ДЛФ=DD")+" по "+Формат(ДатаОтгрузки1,"ДЛФ=DD") ) +"
			|в один Общий заказ покупателя?", Режим, 30, КодВозвратаДиалога.Да, "Предупреждение!");
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли	
	
	
	//2.создаем общий суммарный заказ
//19.04.2018 - ниже...	НачатьТранзакцию();
	
	докОбщийЗаказ = документы.ЗаказПокупателя.СоздатьДокумент();
	ЗаполнитьЗначенияСвойств(докОбщийЗаказ, СписокЗаказов[0].Значение); // по 1-му заполняем основные реквизиты Общего документа
	
	
	//12.09.14 Смирнов, если есть договор факторинга, то ставим его, автоматически меняется на другой договор!
	догФакторинг = ОбменСУТИнтернетМагазин.найтиДоговорФакторингаПоОтветственному(СписокЗаказов[0].Значение);
	
	//02.10.2015 - только если это дог.факторинга 
	Если догФакторинг.типДоговора = справочники.ТипыДоговоров.Факторинг 
		или (Подразделение<>неопределено и Подразделение<>СписокЗаказов[0].Значение.Подразделение) тогда
		докОбщийЗаказ.ДоговорКонтрагента = догФакторинг;
	КонецЕсли;
	
	//Смирнов
	Подразделение = ?(Подразделение=неопределено, справочники.Подразделения.НайтиПоКоду("00005"), Подразделение);
	докОбщийЗаказ.Подразделение = Подразделение;
	
	//+++ 18.10.2017 - для филиалов - заполняем свойство
	Если Подразделение.ОбособленноеПодразделение тогда
		свНаправлениеОтгрузки1 = ПолучитьНаправлениеОтгрузки(СписокЗаказов[0].Значение);
	КонецЕсли;

	ДокОбщийЗаказ.ДокументОснование ="";
	//+++ 28.10.2014 Огородников
	докОбщийЗаказ.ТипЗаказа = 6; // объединенный заказ имеет отдельный тип
	Преф = ?(Подразделение.Код="00005", "ТК", СокрЛП(Подразделение.ПрефиксИБ) );
	докОбщийЗаказ.НомерВходящегоДокумента="";
	докОбщийЗаказ.ДатаВходящегоДокумента ='00010101';
	докОбщийЗаказ.ССайта = ложь;
	
	докОбщийЗаказ.Поставщик  = справочники.Контрагенты.ПустаяСсылка();
	докОбщийЗаказ.Статус     = перечисления.СтатусыЗаказов.ПустаяСсылка();
	докОбщийЗаказ.Согласован = ложь;
	//+++)
	
	докОбщийЗаказ.Дата         = ТекущаяДата(); //мин(ТекущаяДата(), ДатаОтгрузки+8*3661);   // 08:08:08
	ДатаОтгр = макс( НачалоДня(ТекущаяДата()), НачалоДня(ДатаОтгрузки1) );
	докОбщийЗаказ.ДатаОтгрузки = ДатаОтгр;
	Если ДатаОтгр > НачалоДня(ТекущаяДата()) тогда
		#Если Клиент тогда	
			сообщить("Дата отгрузки больше текущей даты!");
		#КонецЕсли	
	КонецЕсли;	
	
	докОбщийЗаказ.УстановитьНовыйНомер(Преф); // всегда ТК!
	
	докОбщийЗаказ.Проверен = истина;
	докОбщийЗаказ.АвтоРезервирование = истина;
	
	СписокЗак = новый СписокЗначений;//------------------------------------
если докОбщийЗаказ.ВалютаДокумента.Код="643" 
	тогда руб = "р."; 
	иначе руб = докОбщийЗаказ.ВалютаДокумента.Наименование;
КонецЕсли;
	СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); //28.12.2018
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );
	
	докОбщийЗаказ.Товары.Очистить();
	пока ОбщийЗаказТовары.Следующий() цикл
		Если НЕ(ОбщийЗаказТовары.Номенклатура.Услуга) Тогда
			//06.08.18 Смирнов
			//Проверим, может это бонусы и их не надо добавлять (они тоже попадают в РН ЗаказыПокупателей)
			стрБонусов = ТабБонусыИсходныхЗаказов.Найти(ОбщийЗаказТовары.Номенклатура,"Номенклатура");
			КоличествоТовара = 0;
			Если стрБонусов<>Неопределено тогда
				КоличествоТовара = ОбщийЗаказТовары.Количество - стрБонусов.Количество; 
			КонецЕсли;
			Если КоличествоТовара>0 или стрБонусов = неопределено тогда
				
				стр1 = докОбщийЗаказ.Товары.Добавить();
				
				стр1.Номенклатура = ОбщийЗаказТовары.Номенклатура;
				стр1.Количество   = ОбщийЗаказТовары.Количество;
				стр1.Сумма   	  = ОбщийЗаказТовары.Сумма;
				
				//+++( 28.08.2018 --- статус сохраняется если только одинаковый статус 1 товара в разных заказах! и не более 7 дней для Яр,Спб,Мск, иначе не более 14 дней----
				Если ОбщийЗаказТовары.СтатусКол=1 
				и ( (ОбщийЗаказТовары.Подразделение7 и ОбщийЗаказТовары.ЧислоДнейЗаказа<=7)
				или (не ОбщийЗаказТовары.Подразделение7 и ОбщийЗаказТовары.ЧислоДнейЗаказа<=14)
				  ) 
				 тогда 
					стр1.Статус = ОбщийЗаказТовары.Статус;
					стр1.Цена   = ОбщийЗаказТовары.Цена;   //максимальная!
					
					Если не стр1.Статус.Пустая() тогда
					сообщить(строка(стр1.НомерСтроки)+") Статус: '"+	строка(стр1.Статус)+"' для Цены: "+строка(стр1.Цена)+руб
					+" по товару: "+строка(стр1.Номенклатура.Код)+" "+строка(стр1.Номенклатура), СтатусСообщения.Информация);
					КонецЕсли;
				
				Иначе	
					стр1.Цена = ?(стр1.Количество=0, 0, Окр(стр1.Сумма / стр1.Количество, 2) );//средняя

					Если стр1.Цена <> ОбщийЗаказТовары.Цена тогда
					сообщить(строка(стр1.НомерСтроки)+")"+?(ОбщийЗаказТовары.СтатусКол>1," разные статусы","")
					+" по товару: "+строка(стр1.Номенклатура.Код)+" "+строка(стр1.Номенклатура)
					+" РАЗНЫЕ Цены на товар! Цена средняя: "+строка(стр1.Цена)+руб, СтатусСообщения.Внимание);
					КонецЕсли;
				КонецЕсли;	
				//+++)
				
				стр1.СтавкаНДС = СтавкаНДС_2019;   //28.12.2018
				стр1.СуммаНДС = Окр( стр1.Сумма * чНДС/(100+чНДС), 2);
				
				стр1.ЕдиницаИзмерения = стр1.Номенклатура.ЕдиницаХраненияОстатков;
				стр1.Коэффициент = 1;
				стр1.КоличествоМест = стр1.Количество;
				
			КонецЕсли;
		КонецЕсли;
		
		выбЗак = ОбщийЗаказТовары.Выбрать(); //из списка заказов не всё попало?!
		пока выбЗак.Следующий() цикл 
			Если СписокЗак.Количество()>0 тогда
				Если СписокЗак.НайтиПоЗначению(выбЗак.ЗаказПокупателя)=неопределено тогда
					СписокЗак.Добавить(выбЗак.ЗаказПокупателя);
				КонецЕсли;
			иначе
				СписокЗак.Добавить(выбЗак.ЗаказПокупателя);
			КонецЕсли;	
		КонецЦикла;
		
	КонецЦикла;
	
   //+++( 19.04.2018 запрос Миронычева для первичных заказов-------------------------------------
   ////		Анализ Типа первичных заказов - НЕЛЬЗЯ объединять 10 тип с другими!
		Запрос10 = Новый Запрос;
		Запрос10.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗаказПокупателя.ТипЗаказа
			|ИЗ Документ.ЗаказПокупателя КАК ЗаказПокупателя
			|ГДЕ ЗаказПокупателя.Ссылка В (&СписокЗак)
			|	СГРУППИРОВАТЬ ПО
			|	ЗаказПокупателя.ТипЗаказа";
		Запрос10.УстановитьПараметр("СписокЗак", СписокЗак);
		Результат10 = Запрос10.Выполнить();
		табл10  = Результат10.Выгрузить();
		Отбор10 = Новый Структура("ТипЗаказа",10);
		Если табл10.Количество()>1 Тогда //разные типы
			Если табл10.НайтиСтроки(Отбор10).Количество() > 0 Тогда 
				Сообщить("Нельзя объединять первичные Заказы IM Service (10 типа) c Заказами других типов!", СтатусСообщения.Внимание);
			ВОЗВРАТ;
			КонецЕсли;
		КонецЕсли;
	//+++ ) 

	
	СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); //28.12.2018
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );
		
	//+++ 15.06.2016 +++++++++ удаление дублей! ++++++++
	таблБезДублей = докОбщийЗаказ.Товары.Выгрузить();
	таблБезДублей.Свернуть("Номенклатура", "Количество, Сумма, КоличествоМест, СуммаНДС");
	
	Если таблБезДублей.Количество()< докОбщийЗаказ.Товары.Количество() тогда
		сообщить("Дубли строк c одинаковым товаром в общем заказе - будут объединены в 1 строку автоматически!", СтатусСообщения.Информация);
		докОбщийЗаказ.Товары.Очистить();
		для каждого стр1 из таблБезДублей цикл
			стр2 = докОбщийЗаказ.Товары.Добавить();
			
			ЗаполнитьЗначенияСвойств(стр2, стр1);
			
			стр2.Цена     = ?(стр2.Количество=0, 0, Окр(стр2.Сумма / стр1.Количество, 2) ); // СРЕДНЯЯ цена!
			стр2.Сумма    = стр2.Цена * стр2.Количество;  // обратно!
			стр2.СтавкаНДС = СтавкаНДС_2019;   //28.12.2018
			стр2.СуммаНДС  = Окр( стр2.Сумма * чНДС/(100+чНДС), 2);
			
			Если стр2.Сумма <> стр1.Сумма тогда
				Сообщить("По товару "+строка(стр2.Номенклатура.Код)+" Сумма исходных строк: "+строка(стр1.Сумма)
				+"	<> "+строка(стр2.Цена)+"р. x "+строка(стр2.Количество)+" шт.! ", СтатусСообщения.Внимание );
			КонецЕсли;		 
			
			Если стр2.СуммаНДС <> стр1.СуммаНДС  тогда 
				Сообщить("По товару "+строка(стр2.Номенклатура.Код)+" Сумма НДС исходных строк: "+строка(стр1.СуммаНДС)
				+"	<> "+строка(стр2.Сумма)+"р. x "+строка(чНДС)+"/"+строка(100+чНДС)+" !", СтатусСообщения.Внимание );
			КонецЕсли;		 
			
			стр2.ЕдиницаИзмерения = стр2.Номенклатура.ЕдиницаХраненияОстатков;
			стр2.Коэффициент = 1;
			
		КонецЦикла;	
	КонецЕсли;
	//+++)		
	
	
	Пока ОбщийЗаказУслуги.Следующий() Цикл
		стр1 = докОбщийЗаказ.Услуги.Добавить();
		
		стр1.Номенклатура = ОбщийЗаказУслуги.Номенклатура;
		стр1.Содержание   = ОбщийЗаказУслуги.Содержание;
		стр1.Количество   = ОбщийЗаказУслуги.Количество;
		стр1.Сумма   	  = ОбщийЗаказУслуги.Сумма;
		
		стр1.Цена = ?(стр1.Количество=0, 0, Окр(стр1.Сумма / стр1.Количество, 2) );
		
		стр1.СтавкаНДС = СтавкаНДС_2019;
		стр1.СуммаНДС = Окр( стр1.Сумма * чНДС/(100+чНДС), 2);
	КонецЦикла;
	
	//17.08.17 Смирнов, объединяем ТЧ Крышки
	//ТЧ Крышки
	ЗапросКрышки = новый Запрос;
	запросКРышки.УстановитьПараметр("СписокЗаказов", СписокЗаказов);
	ЗапросКрышки.Текст = "ВЫБРАТЬ
     |	ЗаказПокупателяКрышки.Крышка,
     |	СУММА(ЗаказПокупателяКрышки.Количество) КАК Количество
     |ИЗ
     |	Документ.ЗаказПокупателя.Крышки КАК ЗаказПокупателяКрышки
     |ГДЕ
     |	ЗаказПокупателяКрышки.Ссылка В(&СписокЗаказов)
     |
     |СГРУППИРОВАТЬ ПО
     |	ЗаказПокупателяКрышки.Крышка";
	 РезКрышки = ЗапросКрышки.Выполнить().Выбрать();
	 
	 Пока РезКрышки.Следующий() Цикл
		стрК = докОбщийЗаказ.Крышки.Добавить();
        ЗаполнитьЗначенияСвойств(стрК,РезКрышки);
	 КонецЦикла;
						
	//3.отменяем проведение и ставим X на старых заказах и проводим новый общий заказ в Одной Транзакции!
	коммент = "";
	
	попытка	
		//19.04.2018 ----------------- ТРАНЗАКЦИЯ только здесь начинается!!!--------------------------------
 	НачатьТранзакцию();
		
		Если СписокЗак.Количество()<СписокЗаказов.Количество() тогда
			Сообщить("-----Не Все заказы из избраннных попали в объединение!-----");
			для i=0 по СписокЗаказов.Количество()-1 цикл
				Если СписокЗак.НайтиПоЗначению(СписокЗаказов[i].Значение)=неопределено тогда
					Сообщить(строка(СписокЗаказов[i].Значение)+" - не будет объединен, так как по нему нет заказанных товаров!", СтатусСообщения.Внимание);
				КонецЕсли;
			КонецЦикла;
			Сообщить("------------------------------------------------------------");
		КонецЕсли;	
		СуммаПоДокументам = 0;
		
		СписокПредыдущихЗаказов = Новый СписокЗначений;//Плотников
		для i=0 по СписокЗак.Количество()-1 цикл
			докОб = СписокЗак[i].Значение.ПолучитьОбъект();
			докОб.ПометкаУдаления = истина;
			докОб.Комментарий = "# данные перенесены >> "+строка(докОбщийЗаказ.Номер)+" # "+докОб.Комментарий;
			
			докОб.мПроведениеИзФормы = ЛОЖЬ;
			докОб.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			
			ОбменСУТИнтернетМагазин.ВключитьРегистрациюОбъектаОИМ(докОб.ссылка);//+++ 19.01.2015 - 02.11.2016 регистрация для обмена с МИМ
			
			УдалитьКорректировкиПоДокументу(докОб.ссылка);
			СуммаПоДокументам = СуммаПоДокументам + докОб.суммаДокумента;
			СписокПредыдущихЗаказов.Добавить(докОб.Ссылка);//Плотников
			ДобавитьЗаказВТЧОбщегоЗаказа(СписокЗак[i].Значение, докОбщийЗаказ);	//+++ рекурентная функция
			
		//+++( 13.10.2017 --- по задаче № 34504 -------- комментарии и адреса--------
		Если докОбщийЗаказ.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = справочники.НаправленияПродаж.НайтиПоКоду(16) тогда
			коммент = коммент + докОб.Номер+"; ";
		Иначе
			коммент = коммент + строка(докОб.Номер)+"; "; //"+СокрЛП(докОб.Комментарий)+";
			//|";
			Если докОбщийЗаказ.АдресДоставки ="" тогда
				докОбщийЗаказ.АдресДоставки = докОб.АдресДоставки;
				сообщить("Адрес доставки общего заказа заполнен по Заказу № "+строка( докОб.Номер ), СтатусСообщения.Информация); 
			ИначеЕсли докОб.АдресДоставки<>"" тогда
				Если докОбщийЗаказ.АдресДоставки <> докОб.АдресДоставки тогда
					сообщить(строка( докОб.Ссылка ) +" - Адрес доставки отличается от адреса доставки общего заказа!", СтатусСообщения.Внимание); 
				КонецЕсли;	
			КонецЕсли;
			Если докОбщийЗаказ.АдресДляТТН ="" тогда
				Если Найти(докОбщийЗаказ.АдресДоставки, докОб.АдресДляТТН)>0 тогда //если адрес ттн совпадает с адресом доставки
					докОбщийЗаказ.АдресДляТТН = докОб.АдресДляТТН;
				сообщить("Адрес ТТН общего заказа заполнен по Заказу № "+строка( докОб.Номер ), СтатусСообщения.Информация); 
				КонецЕсли;	
			ИначеЕсли докОб.АдресДляТТН<>"" тогда
				Если докОбщийЗаказ.АдресДляТТН <> докОб.АдресДляТТН тогда
					сообщить(строка( докОб.Ссылка ) +" - Адрес ТТН отличается от адреса ТТН общего заказа! Адрес заказа: "+строка(докОб.АдресДляТТН), СтатусСообщения.Внимание); 
				КонецЕсли;	
			КонецЕсли;
			
			Если докОбщийЗаказ.ВидАдреса.Пустая() тогда
				 докОбщийЗаказ.ВидАдреса = докОб.ВидАдреса;
				Если докОбщийЗаказ.КоординатыДоставки="" тогда //по адресу
				 докОбщийЗаказ.КоординатыДоставки = докОб.КоординатыДоставки;
				сообщить("Координаты Доставки общего заказа заполнены по Заказу № "+строка( докОб.Номер ), СтатусСообщения.Информация); 
				КонецЕсли;
			ИначеЕсли не докОб.ВидАдреса.пустая() тогда
				Если докОбщийЗаказ.ВидАдреса <> докОб.ВидАдреса тогда
					сообщить(строка( докОб.Ссылка ) +" - Адрес адреса отличается от Вида адреса общего заказа! Вид адреса заказа: "+строка(докОб.ВидАдреса), СтатусСообщения.Внимание); 
				КонецЕсли;	
			КонецЕсли;
			
			Если докОбщийЗаказ.НомерТорговойТочкиКонтрагента = 0 тогда
				докОбщийЗаказ.НомерТорговойТочкиКонтрагента = докОб.НомерТорговойТочкиКонтрагента;
				сообщить("Номер Торговой Точки общего заказа заполнены по Заказу № "+строка( докОб.Номер ), СтатусСообщения.Информация); 
			ИначеЕсли не докОб.НомерТорговойТочкиКонтрагента<>0 тогда
				Если докОбщийЗаказ.НомерТорговойТочкиКонтрагента <> докОб.НомерТорговойТочкиКонтрагента тогда
					сообщить(строка( докОб.Ссылка ) +" - Номер точки отличается от номера точки общего заказа! Точка заказа № "+строка(докОб.НомерТорговойТочкиКонтрагента), СтатусСообщения.Внимание); 
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		//+++)
			
		КонецЦикла;	
		
		Если докОбщийЗаказ.Товары.Итог("Сумма")<>СуммаПоДокументам тогда
			//	ОтменитьТранзакцию();
			Сообщить("Сумма по товарам "+строка(СписокЗак.Количество())+" документов отличается от суммы общего заказа: "+строка(СуммаПоДокументам)+" - "+строка( докОбщийЗаказ.Товары.Итог("Сумма") )+" = "+строка(СуммаПоДокументам -  докОбщийЗаказ.Товары.Итог("Сумма"))+"р.", СтатусСообщения.Внимание);
			//	Сообщить(" ОБЪЕДИНЕНИЕ ОТМЕНЕНО !!!", СтатусСообщения.ОченьВажное );   //+++ 05.06.2014
		КонецЕсли;
		
	//+++( 28.08.2018
		КомментПервичныхЗаказов = ""; 
		Если докОбщийЗаказ.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> справочники.НаправленияПродаж.НайтиПоКоду(16) тогда
			стрПеренос = "# данные перенесены >> "; // что ищем 
			для каждого стрЗак1 из докОбщийЗаказ.Заказы цикл
			ком1 = сокрЛП(стрЗак1.ЗаказПокупателя.Комментарий)+"; ";
			ii = найти(ком1, стрПеренос);	jj = найти(ком1, " #");
			пока ii>0 и jj>ii цикл //удаляем все переносы!
				ком1 = лев(ком1,ii-1) + прав(ком1, стрДлина(ком1)- jj-1);
				ii = найти(ком1, стрПеренос); jj = найти(ком1, " #");
			КонецЦикла;
			КомментПервичныхЗаказов = КомментПервичныхЗаказов + стрЗак1.ЗаказПокупателя.Номер+":"+ком1+";";
			КонецЦикла;	
			
		КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,"
		|","");
		текстАвтоКомплект = "#АвтоКомплектация по Cезонному заказу покупателя №"; // только 1 раз в начале!
		Nсез = СтрЧислоВхождений(КомментПервичныхЗаказов, текстАвтоКомплект);
		Если Nсез>1 и Nсез=докОбщийЗаказ.Заказы.Количество() тогда // все заказы - по 1 автокомплектации
			ii= Найти(КомментПервичныхЗаказов,текстАвтоКомплект);
			КомментПервичных = прав(КомментПервичныхЗаказов, стрДлина(КомментПервичныхЗаказов)-ii-стрДлина(текстАвтоКомплект));
			КомментПервичных = лев(КомментПервичных, Найти(КомментПервичных," #")-1);
			КомментПервичных = текстАвтоКомплект +КомментПервичных+" #";  
		КомментПервичныхЗаказов =КомментПервичных+"
		|"+стрЗаменить(КомментПервичныхЗаказов, КомментПервичных,""); // в начале - инфа про Автокомплектацию, а потом уже по первичным заказам!
		КонецЕсли;
	
	    //29.08.2018 убираем повторы символов
	    КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,"# общ.заказ: ",";");
		КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,"# общий заказ: ",";");
		масСимв = новый массив; 
		масСимв.Добавить(":");масСимв.Добавить(";");масСимв.Добавить("#");масСимв.Добавить("Terminal;");
		для i=0 по масСимв.Количество()-1 цикл 
			КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,масСимв[i]+масСимв[i], масСимв[i]);
			КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,масСимв[i]+" "+масСимв[i], масСимв[i]);
			КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,":"+масСимв[i], масСимв[i]);
			КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,": "+масСимв[i], масСимв[i]);
		КонецЦикла;	
		КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,"Terminal:Terminal","Terminal");  
		КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,"Terminal: Terminal","Terminal");  
		КомментПервичныхЗаказов =стрЗаменить(КомментПервичныхЗаказов,"  "," ");	
		КонецЕсли;
		докОбщийЗаказ.Комментарий ="# Общий заказ: "+коммент +?(КомментПервичныхЗаказов="",""," 
		|"+КомментПервичныхЗаказов); //комментарий первичных заказов!
	//+++)
	
		//Плотников - запоминаем все мартёшки ?!
		КомментВодителю = "";
		Для Каждого стр из СписокПредыдущихЗаказов Цикл  
			Нов = докОбщийЗаказ.СписокПредыдущихЗаказов.Добавить();
			Нов.Заказ = стр.Значение;
			//+++( 15.01.2019 --- Задача № 61873  - коммент ТОЛЬКО по заказам из которых идёт объединение - через ; _ТК....
			КомментВодителю1 = яштПоставщики.ПолучитьКомментарийВодителю(стр.Значение);
			КомментВодителю =КомментВодителю+?(КомментВодителю1="", "", "_"+стр.Значение.Номер+":"+КомментВодителю1+"; "); 
			//+++)
		КонецЦикла;//Плотников
		
		//+++( 15.01.2019 --- Задача № 61873 --- Комментиарии по первичным заказам - каждый на новой строке! Номер ---
		Для каждого стр1 из докОбщийЗаказ.Заказы цикл
			КомментВодителю1 = яштПоставщики.ПолучитьКомментарийВодителю(стр1.ЗаказПокупателя);
			//только если нет уже коммента по этому первичному заказу (без Повторов!)
			Если КомментВодителю1<>"" и Найти(КомментВодителю1, стр1.ЗаказПокупателя.Номер+":")=0 тогда 
				КомментВодителю = КомментВодителю+"
				|"+стр1.ЗаказПокупателя.Номер+":"+КомментВодителю1; 
			КонецЕсли;
		КонецЦикла;
		//+++)

		докОбщийЗаказ.ВМаршрут = Ложь;
		
		докОбщийЗаказ.мПроведениеИзФормы = ЛОЖЬ;
		докОбщийЗаказ.Записать(РежимЗаписиДокумента.Проведение);
		
		яштПоставщики.ЗаписатьКомментВодителю(докОбщийЗаказ.Ссылка, КомментВодителю);//+++15.01.2019 - Задача № 61873 
		
		ЗафиксироватьТранзакцию();
		
		Сообщить("+++ Успешно создан один общий заказ для "+строка(СписокЗак.Количество())+" из "+строка(СписокЗаказов.Количество())+" выбранных заказов. "+коммент, СтатусСообщения.Информация);
		Сообщить("Сумма по "+строка(КолТов)+" товарам из "+строка(СписокЗак.Количество())+" объединенных документов полностью совпадает с суммой общего заказа: "+строка(СуммаПоДокументам)+"р.", СтатусСообщения.Информация);
		
		ПолеВвода1 = докОбщийЗаказ.Ссылка;  //сразу для открытия
		//КонецЕсли;
		
		//+++ 18.10.2017 - для филиалов - заполняем свойство
		Если Подразделение.ОбособленноеПодразделение и НЕ свНаправлениеОтгрузки1.Пустая() тогда
			УстановитьНаправлениеОтгрузки(докОбщийЗаказ.Ссылка, свНаправлениеОтгрузки1);
		КонецЕсли;

		Если СписокЗак.Количество()<>СписокЗаказов.Количество() тогда
			Если Предупреждения Тогда 
				Предупреждение("Нельзя объединить в общий заказ "+строка(СписокЗаказов.Количество() - СписокЗак.Количество())+" выбранных заказов.", 30);
			Иначе
				Сообщить("Нельзя объединить в общий заказ "+строка(СписокЗаказов.Количество() - СписокЗак.Количество())+" выбранных заказов.");
			КонецЕсли;
		КонецЕсли;
		
	Исключение
		ОтменитьТранзакцию();
		//	#Если НаКлиенте тогда
		Сообщить("--- не удалось создать общий заказ: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
		//	#КонецЕсли	
	КонецПопытки;
	
	
	
КонецПроцедуры

//23.10.2018
функция получитьПолеЗаказа(Зак1, НазвПоля="")
	                                     
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Зак."+НазвПоля+" КАК ЗначПоля
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК Зак
	               |ГДЕ
	               |	Зак.Ссылка = &Зак";
	Запрос.УстановитьПараметр("Зак", Зак1);				
	результат = Запрос.Выполнить();
	
	выборка = результат.Выбрать();
	выборка.Следующий();
	
	возврат выборка.ЗначПоля;
	
КонецФункции
	

функция получитьЗаказыВМаршрутах(СписЗак)
Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказыМаршруты.ЗаказПокупателя,
	|	ЗаказыМаршруты.Маршрут.Код как НомерМаршрута
	|ИЗ
	|	РегистрСведений.ЗаказыМаршруты КАК ЗаказыМаршруты
	|ГДЕ
	|	ЗаказыМаршруты.ЗаказПокупателя В(&СписЗак)";
	
	Запрос.УстановитьПараметр("СписЗак", СписЗак);
	
	Результат = Запрос.Выполнить();
	табл = результат.Выгрузить();
возврат табл;		
КонецФункции	

функция ПолучитьНаправлениеОтгрузки(зак1)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &Объект
	|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
	
	Запрос.УстановитьПараметр("Объект", зак1 );
	Запрос.УстановитьПараметр("Свойство", СвойствоНаправлениеОтгрузки );
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() тогда
		рез = выборка.Значение;
	Иначе 
		рез = справочники.ЗначенияСвойствОбъектов.ПустаяСсылка();
	КонецЕсли;
	
	возврат рез;
		
КонецФункции

Процедура УстановитьНаправлениеОтгрузки(зак0, свво)
	 регСв = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	 регСв.Объект   = зак0;
	 регСв.Свойство = СвойствоНаправлениеОтгрузки;
	 регСв.Значение = свво;
	 регСв.Записать();
	 Сообщить("Для общего документа установлено 'Направление отгрузки' = "+строка(свво), СтатусСообщения.Внимание);
КонецПроцедуры

//+++ 28.10.2014 - рекурентная функция
Процедура ДобавитьЗаказВТЧОбщегоЗаказа(Зак1, ЗакОб)
	
		Если Зак1.Заказы.Количество()=0 тогда
		   стрЗак = ЗакОб.Заказы.Добавить();
		   стрЗак.ЗаказПокупателя = Зак1;
	    Иначе
			для каждого стр1 из Зак1.Заказы цикл
				ДобавитьЗаказВТЧОбщегоЗаказа(стр1.ЗаказПокупателя, ЗакОб);
			КонецЦикла;
		КонецЕсли;
		
КонецПроцедуры
	
	
	   
Процедура ПолучитьЗаказыНажатие(Элемент)
	ТабличноеПоле1.Очистить();
	ТолькоПрочитать = истина;
	ОбъединитьЗаказыПокупателя(Контрагент1, ТолькоПрочитать, Подразделение);  	//Автоэкперт
	ВесОбъемОбновитьИтоги();
КонецПроцедуры

Процедура Контрагент1НачалоВыбора(Элемент, СтандартнаяОбработка)
	
		СтандартнаяОбработка = ложь;
		СписокКонтр = ПолучитьСписокКонтрагентов();
		Если СписокКонтр.Количество()=0 тогда
			Предупреждение("У вас нет доступных контрагентов, для объединения заказов!",10);
			возврат;
		КонецЕсли;
		формаКонтр = справочники.контрагенты.ПолучитьФормуВыбора();
		формаКонтр.СправочникСписок.Отбор.ссылка.ВидСравнения = видСравнения.ВСписке;
		формаКонтр.СправочникСписок.Отбор.ссылка.Значение = СписокКонтр;
		формаКонтр.СправочникСписок.Отбор.ссылка.Использование = Истина;
	    Контрагент1 = формаКонтр.ОткрытьМодально();
		
КонецПроцедуры


//-----для МИМ - берем только контрагентов с ПриниматьЗаказыЧерезСайт -------------------
//----------- и ОсновнойДоговорКонтрагента.ОтветственноеЛицо = текПользователь-----------
функция ПолучитьСписокКонтрагентов()
	Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ЖурналыОтборПоРегиону")  Тогда
		
		возврат ПолучитьСписокКонтрагентовМенеджераПоРегиону(глТекущийПользователь);	
		
	иначе	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоговорыКонтрагентов.Владелец КАК Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	НЕ ДоговорыКонтрагентов.ПометкаУдаления
		|	И НЕ ДоговорыКонтрагентов.Владелец.ПометкаУдаления
		|";
		
		//Если Флажок2 тогда
		//Запрос.Текст = Запрос.Текст  + "	И ДоговорыКонтрагентов.Владелец.ПриниматьЗаказыЧерезСайт
		//|";
		//КонецЕсли;
		
		//отбор контрагентов только по себе
		Если НЕ РольДоступна("ПолныеПрава") тогда
			
			Запрос.Текст = Запрос.Текст + "	И (ДоговорыКонтрагентов.ОтветственноеЛицо = &ОтветственноеЛицо
			|ИЛИ ДоговорыКонтрагентов.Владелец.ОсновнойМенеджерКонтрагента = &ОтветственноеЛицо)";
			Запрос.УстановитьПараметр("ОтветственноеЛицо", глТекущийПользователь);
			
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выгрузить();
		рез = новый СписокЗначений;
		Если Выборка.Количество()>0 тогда
			рез.ЗагрузитьЗначения( Выборка.ВыгрузитьКолонку("Ссылка") );
		КонецЕсли;
		
		Возврат  рез;	
	КонецЕсли;
	 
КонецФункции


Процедура ПриОткрытии()
	Флажок1   = истина;
	МаксОбъем = 10;
	ДатаОтгрузки =  НачалоДня( ТекущаяДата() ); // Сегодня
	
	ДатаОтгрузки0 =  ДатаОтгрузки;
	ДатаОтгрузки1 =  КонецДня ( ДатаОтгрузки );  
	
	
	//+++07.11.2014 - массив всех филиалов + 0-ой элемент - это Головное подразделение
	ЭлементыФормы.Подразделение.СписокВыбора.Добавить(справочники.Подразделения.НайтиПоКоду("00005"),"Ярославль"); //Ярославль
	Филиал = яштПоставщики.ПолучитьМассивФилиалов();
	для i=1 по Филиал.Количество()-1 цикл
		назв = Филиал[i].Наименование;
		назв = стрЗаменить(назв, "Подразделение ", "");
		ЭлементыФормы.Подразделение.СписокВыбора.Добавить(Филиал[i], назв);
	КонецЦикла;

	//+++ 22.04.2014 специально для Федунова
	Если ПараметрыСеанса.ТекущийПользователь = справочники.Пользователи.НайтиПоКоду("Федунов") тогда
		Контрагент1 = справочники.Контрагенты.НайтиПоКоду("П000382");
		ЭлементыФормы.Контрагент1.Доступность = ложь;
		
		ЭлементыФормы.КомментарийЗаказа.Видимость = истина;
		ЭлементыФормы.Комментарий.Видимость = истина;
	КонецЕсли;
	
	
КонецПроцедуры


Процедура УдалитьКорректировкиПоДокументу(ЗакПокСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаЗаказаПокупателя.Ссылка
	|ИЗ
	|	Документ.КорректировкаЗаказаПокупателя КАК КорректировкаЗаказаПокупателя
	|ГДЕ
	|	КорректировкаЗаказаПокупателя.ЗаказПокупателя = &ЗаказПокупателя";
	
	Запрос.УстановитьПараметр("ЗаказПокупателя", ЗакПокСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		докКорр = выборка.Ссылка.ПолучитьОбъект();	
		докКорр.ПометкаУдаления = истина;
		докКорр.Комментарий = "Удален автоматически "+Строка(ТекущаяДата())+" # "+докКорр.Комментарий;
		попытка
		//	ОбменСУТИнтернетМагазин.ВключитьРегистрациюОбъектаОИМ(докКорр);//+++ 19.01.2015 регистрация для обмена с МИМ
			докКорр.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			сообщить(" Удален документ: "+строка(докКорр)+" на сумму: "+ докКорр.СуммаДокумента);
		исключение
			сообщить(" Не удалось удалить док: "+строка(докКорр) , СтатусСообщения.Внимание);
		конецПопытки;	
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаОтгрузки0, ?(ДатаОтгрузки1='0001-01-01', ДатаОтгрузки1, КонецДня(ДатаОтгрузки1)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаОтгрузки0 = НастройкаПериода.ПолучитьДатуНачала();
		ДатаОтгрузки1 = КонецДня(НастройкаПериода.ПолучитьДатуОкончания());
	КонецЕсли;
КонецПроцедуры

Процедура ПолеВвода2Регулирование(Элемент, Направление, СтандартнаяОбработка)
	Если ДатаОтгрузки0>ДатаОтгрузки1 тогда
		ДатаОтгрузки1=КонецДня(ДатаОтгрузки0);
	КонецЕсли;
КонецПроцедуры

Процедура ДатаОтгрузки1Регулирование(Элемент, Направление, СтандартнаяОбработка)
	Если ДатаОтгрузки1<ДатаОтгрузки0 тогда
		ДатаОтгрузки0=НачалоДня(ДатаОтгрузки1);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель2ВыбратьВсе(Кнопка)
	Отметки(1);
	ВесОбъемОбновитьИтоги();
КонецПроцедуры

Процедура КоманднаяПанель2ОтменитьВсе(Кнопка)
	Отметки(0);
	ЭлементыФормы.ТабличноеПоле1.Колонки.Вес.ТекстПодвала   = "0";
	ЭлементыФормы.ТабличноеПоле1.Колонки.Объем.ТекстПодвала = "0";
КонецПроцедуры

Процедура КоманднаяПанель2ИзменитьВсе(Кнопка)
	Отметки(2);
	ВесОбъемОбновитьИтоги();
КонецПроцедуры

Процедура ТабличноеПоле1ПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ=Истина;
	Предупреждение("Прямое добавление заказов - запрещено!
				   |Выберите контрагента и период!",10);
				   
КонецПроцедуры

Процедура ТабличноеПоле1ПередУдалением(Элемент, Отказ)
	Отказ=Истина;
	Предупреждение("Прямое удаление заказов - запрещено!
				   |Выключите флажок слева от заказа!",10);

КонецПроцедуры

Процедура Отметки(число1)
	Для каждого стр1 из ТабличноеПоле1 Цикл
		 стр1.Флаг = ?(число1=1, TRUE, ?(число1=0, FALSE, НЕ стр1.Флаг) );
		 Если стр1.Флаг и НЕ стр1.ЗаказПокупателя.Проверен тогда  //отмечен непроделенный заказ!
			Сообщить("Нельзя отмечать непроделенный заказ! "+строка(стр1.ЗаказПокупателя)+" - выключен!", СтатусСообщения.Внимание);
			стр1.Флаг = ЛОЖЬ;
		 КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

Процедура ТабличноеПоле1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	//Если данныеСтроки.Процент>0 и данныеСтроки.Процент<100 тогда
	Если данныеСтроки.СуммаЗаказа <> данныеСтроки.СуммаОсталосьОтгрузить тогда
		ОформлениеСтроки.цветТекста = webЦвета.Синий;
	КонецЕсли;
	
	Если данныеСтроки.КоличествоОтгружается>0 тогда
		Если данныеСтроки.КоличествоОтгружается=данныеСтроки.Количество тогда
			ОформлениеСтроки.цветФона = webЦвета.НейтральноЗеленый;
		Иначе
			ОформлениеСтроки.цветФона = webЦвета.светлоРозовый;
        КонецЕсли;
	КонецЕсли;

	Если ДанныеСтроки.ЗаказПокупателя.Проверен тогда
		Если ДанныеСтроки.ЗаказПокупателя.Резерв тогда
 			ОформлениеСтроки.Шрифт = мЖирныйКурсивШрифт;  //зачем Резервные объединять?!
		Иначе
 			ОформлениеСтроки.Шрифт = мЖирныйШрифт;
		КонецЕсли;	
	ИначеЕсли ДанныеСтроки.ЗаказПокупателя.Резерв тогда
			ОформлениеСтроки.Шрифт = мКурсивШрифт;
	КонецЕсли;	

	
   //+++ 31.03.2015 ++++++++++ подготовка полей для определения Условия для расскраски заказов по статусам +++++++++
	Если условиеПоискаПоСхеме тогда //гибридная схема расскраски
		   зак = ДанныеСтроки.ЗаказПокупателя;
		ДанныеСтрокиТранзит = зак.Транзит;
		ДанныеСтрокиПометкаУдаления = зак.ПометкаУдаления;
		статус = ОбменСУТИнтернетМагазин.ПолучитьСтатусЗаказаПоСхеме(зак, ДанныеСтрокиТранзит, ДанныеСтрокиПометкаУдаления);
				
		//Если СокрЛП(статус)<>"" тогда
			кодСтатуса = число(лев(статус,2));
	   	//сообщить(ДанныеСтроки.Номер + " - "+статус);
			Если ЭлементыФормы.ТабличноеПоле1.Колонки.Найти("СтатусЗаказа").Видимость тогда
				ОформлениеСтроки.Ячейки.СтатусЗаказа.ОтображатьТекст = Истина;
				ОформлениеСтроки.Ячейки.СтатусЗаказа.текст = прав(статус, стрДлина(статус)-?(кодСтатуса<10, 2, 3) );// до 99. статуса!
			КонецЕсли;
		
			//Если кодСтатуса = 1 тогда //заказан у поставщика - своя цветовая гамма
			//   ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый;
			   
		   //Если кодСтатуса = 2 тогда // подтвержден (проделен), но объединен в общий заказ... изменять уже нельзя, цвет остаётся серый
			//   ОформлениеСтроки.ЦветФона = WebЦвета.Белый;
			
		   Если кодСтатуса = 3 тогда // Удален или Закрыт
			   ОформлениеСтроки.ЦветФона = WebЦвета.СветлоСерый;
			   
		   ИначеЕсли кодСтатуса = 4 тогда  //отгружен полностью
			   ОформлениеСтроки.ЦветФона = WebЦвета.СветлоСерый;
		   	 	ОформлениеСтроки.ЦветТекста = WebЦвета.Синий;
			ИначеЕсли кодСтатуса = 5 тогда //частично отгружен
		   	   ОформлениеСтроки.ЦветФона = WebЦвета.Белый;
			   ОформлениеСтроки.ЦветТекста = WebЦвета.Синий;
				
		    ИначеЕсли кодСтатуса = 6 тогда //Доставлен на склад - светло Голубой 
			   ОформлениеСтроки.ЦветФона = WebЦвета.СветлоНебесноГолубой;
			ИначеЕсли кодСтатуса = 7 тогда //В Пути             - ярко синий цвет       
		  		ОформлениеСтроки.ЦветФона = WebЦвета.СветлоНебесноГолубой;
		
			ИначеЕсли кодСтатуса = 8 тогда  //на отгрузке полностью
			   ОформлениеСтроки.ЦветФона = WebЦвета.НейтральноЗеленый;
			ИначеЕсли кодСтатуса = 9 тогда  //на отгрузке частично
			   ОформлениеСтроки.ЦветФона = WebЦвета.светлоРозовый; // недогруз! 
		  	ИначеЕсли кодСтатуса =10 тогда //на отгрузке подготовка или подготовка к реализации
			   ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый; // уже начата отгрузка! 
			   
		   	ИначеЕсли кодСтатуса =11 тогда  //на перемещении полностью  ЯРКО-ЗЕЛЕНЫЙ
			   ОформлениеСтроки.ЦветФона = WebЦвета.ВесеннеЗеленый;
			ИначеЕсли кодСтатуса =12 тогда  //на перемещении частично    ЯРКО-ОРАНЖЕВЫЙ
			   ОформлениеСтроки.ЦветФона = WebЦвета.ТемноОранжевый; // недогруз! 
		  	ИначеЕсли кодСтатуса =13 тогда //на перемещении подготовка или подготовка к реализации
			   ОформлениеСтроки.ЦветФона = WebЦвета.Желтый; //  ЯРКО-ЖЕЛТЫЙ
			   
		   ИначеЕсли кодСтатуса =14 тогда //Перемещение выполнено - ничего больше не надо делать!
				ОформлениеСтроки.ЦветФона = WebЦвета.СветлоНебесноГолубой; // светло-синий
			   
		   	КонецЕсли; 

		//КонецЕсли;//статус<>""	
		
	КонецЕсли;//условие раскраски заказов	по статусам
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


		
КонецПроцедуры

Процедура Контрагент1ПриИзменении(Элемент)
	
	Если СокрЛП(Контрагент1.Код) = "93273" //Евротранс 
		или СокрЛП(Контрагент1.Код) = "П000382"//+++ 07.11.2014 Федунов
		тогда
		ЭлементыФормы.КомментарийЗаказа.Видимость = истина;
		ЭлементыФормы.Комментарий.Видимость = истина;
	Иначе
		Комментарий = "";
	КонецЕсли;	
	
	Если Контрагент1.ЗапретитьВводЗаказаПокупателя тогда
		Предупреждение("Покупателю "+строка(Контрагент1.НаименованиеПолное)+" - Запрещен ввод заказов!
					   |Объединение заказов в Новый заказ - невозможно!", 30);
		Контрагент1 = справочники.Контрагенты.ПустаяСсылка();
	ИначеЕсли контрагент1.ЗапретОтгрузки тогда
		Предупреждение("Покупателю "+строка(Контрагент1.НаименованиеПолное)+" - Запрещены отгрузки!
						|Отгрузить Объединенный заказ будет - невозможно!", 30);
	КонецЕсли;	
КонецПроцедуры

Процедура КнопкаОчисткиНажатие(Элемент)
	ДатаОтгрузки0='00010101';
	ДатаОтгрузки1='00010101';
КонецПроцедуры

Процедура условиеПоискаПоСхемеПриИзменении(Элемент)
	ЭлементыФормы.ТабличноеПоле1.Колонки.Найти("СтатусЗаказа").Видимость = условиеПоискаПоСхеме;
КонецПроцедуры

Процедура КоманднаяПанель1отборПоExcel(Кнопка)
	
	Форма=ПолучитьФорму("ФормыЗагрузкиИзЕкселя");
	
	СписокЗнач=Форма.ОткрытьМодально();
	Попытка
		Для Каждого стр из СписокЗнач цикл
		ДокЗаказ = Документы.ЗаказПокупателя.НайтиПоНомеру(СокрЛП(стр.Значение), НачалоГода(ДатаОтгрузки1));
		Если ЗначениеНеЗаполнено(ДокЗаказ) тогда
			Запрос =  Новый Запрос;
			Запрос.УстановитьПараметр("Номердок", СокрЛП(стр.Значение));
			Запрос.УстановитьПараметр("Контрагент", Контрагент1);
			Запрос.УстановитьПараметр("Датанач", ДатаОтгрузки0);
			Запрос.УстановитьПараметр("датакон", КонецДня(ДатаОтгрузки1));
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЗаказПокупателя.Ссылка
			               |ИЗ
			               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
			               |ГДЕ
			               |	ЗаказПокупателя.Номер ПОДОБНО &Номердок
			               |	И ЗаказПокупателя.Контрагент = &Контрагент
			               |	И ЗаказПокупателя.Дата МЕЖДУ &Датанач И &датакон";
			Результат = Запрос.Выполнить().Выгрузить();
			
			Если Результат.Количество() > 0 Тогда
				ДокЗаказ = Результат[0].Ссылка;
			Иначе
				Запрос.УстановитьПараметр("Номердок", "%"+Сред(СокрЛП(стр.Значение),3));
				Результат = Запрос.Выполнить().Выгрузить();
				Если Результат.Количество() > 0 Тогда
					ДокЗаказ = Результат[0].Ссылка;
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ЗаказПокупателя", ДокЗаказ);
		Заказ = ТабличноеПоле1.НайтиСтроки(ПараметрыОтбора);
		Попытка
			Ст = заказ.Получить(0);
			Ст.Флаг = истина;
			Ст.НомерТочки = 0;
			ЭлементыФормы.ТабличноеПоле1.ОбновитьСтроки();
		Исключение
			Сообщить("Заказ № "+стр+" отсутствует в данном отборе");
		КонецПопытки;
	КонецЦикла;
	Исключение
	КонецПопытки;
КонецПроцедуры

Функция ПолучитьТекстЗапросаДляТабличногоПоля(Транзит)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказыПокупателя.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказыПокупателя.ЗаказПокупателя.ДоговорКонтрагента КАК Договор,
	|	ЗаказыПокупателя.ЗаказПокупателя.СпособОтгрузки как СпособОтгрузки,
	|	ЗаказыПокупателя.КоличествоОстаток КАК Количество,
	|	ЕСТЬNULL(РезервНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОтгружается,
	|	ЗаказыПокупателя.СуммаУпрОстаток
	//24.07.2018
	|	, ЗаказыПокупателя.ЗаказПокупателя.БонусПрименен как БонусПрименен
	
	|ПОМЕСТИТЬ втЗаказыПокупателей
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(
	|			,
	|			ЗаказПокупателя.ДатаОтгрузки >= &ДатаОтгрузки0
	|				И ЗаказПокупателя.ДатаОтгрузки <= &ДатаОтгрузки1
	|				И ЗаказПокупателя.Контрагент = &Контрагент
	|				И ЗаказПокупателя.Проверен
	|				И ЗаказПокупателя.Транзит"+?(Транзит," И ЗаказПокупателя.Подразделение = &Подразделение","=ЛОЖЬ")+"
	|				И ЗаказПокупателя.ТипЗаказа <> 13
	|				И (ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.ПустаяСсылка)
	|					ИЛИ ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.Получен))
	|				//Комментарий И ЗаказПокупателя.Комментарий ПОДОБНО (&Комментарий)
	|				"+?(Флажок2, " И ЗаказПокупателя.ССайта", "")+"
	|																) КАК ЗаказыПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервНаСкладах.Остатки(
	|				,
	|				ЗаказПокупателя.ДатаОтгрузки >= &ДатаОтгрузки0
	|					И ЗаказПокупателя.ДатаОтгрузки <= &ДатаОтгрузки1
	|					И ЗаказПокупателя.Контрагент = &Контрагент
	|					И (ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.ПустаяСсылка)
	|						ИЛИ ЗаказПокупателя.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.Получен))
	|					И ЗаказПокупателя.Проверен
	|					И ЗаказПокупателя.Транзит"+?(Транзит," И ЗаказПокупателя.Подразделение = &Подразделение","=ЛОЖЬ")+") КАК РезервНаСкладахОстатки
	|		ПО ЗаказыПокупателя.ЗаказПокупателя = РезервНаСкладахОстатки.ЗаказПокупателя
	|ГДЕ
	|	ЕСТЬNULL(ЗаказыПокупателя.КоличествоОстаток, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаказПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаказыПокупателей.ЗаказПокупателя,
	|	зтВесОбъемСумма.Вес КАК Вес,
	|	зтВесОбъемСумма.Объем КАК Объем,
	|	втЗаказыПокупателей.Договор,
	//04.12.2017
	|	втЗаказыПокупателей.СпособОтгрузки,
	|	ВЫБОР
	|		КОГДА втЗаказыПокупателей.КоличествоОтгружается = 0
	|				И втЗаказыПокупателей.ЗаказПокупателя.Проверен
	|				И НЕ втЗаказыПокупателей.ЗаказПокупателя.Резерв
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Флаг,
	|	втЗаказыПокупателей.ЗаказПокупателя.НомерТорговойТочкиКонтрагента КАК НомерТочки,
	|	втЗаказыПокупателей.ЗаказПокупателя.ДатаОтгрузки КАК ДатаОтгрузки,
	|	втЗаказыПокупателей.ЗаказПокупателя.ТипЗаказа КАК ТипЗаказа,
	//+++ 13.11.2017
	|	втЗаказыПокупателей.ЗаказПокупателя.АдресДоставки как АдресДоставки,
	
	|	втЗаказыПокупателей.Договор.ОтветственноеЛицо.Наименование КАК Менеджер,
	
	|	втЗаказыПокупателей.Количество,
	|	ВЫБОР
	|		КОГДА втЗаказыПокупателей.ЗаказПокупателя.СуммаДокумента = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(100 * втЗаказыПокупателей.СуммаУпрОстаток / втЗаказыПокупателей.ЗаказПокупателя.СуммаДокумента КАК ЧИСЛО(10, 0))
	|	КОНЕЦ КАК Процент,
	|	втЗаказыПокупателей.ЗаказПокупателя.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	втЗаказыПокупателей.ЗаказПокупателя.Комментарий КАК Комментарий,
	|	втЗаказыПокупателей.КоличествоОтгружается,
	|	втЗаказыПокупателей.ЗаказПокупателя.ДокументОснование КАК СезонныйЗаказ,
	|	втЗаказыПокупателей.ЗаказПокупателя.СуммаДокумента КАК СуммаЗаказа,
	|	зтВесОбъемСумма.СуммаВзаиморасчетовОстаток КАК СуммаОсталосьОтгрузить
	//24.07.2018
	|	,втЗаказыПокупателей.БонусПрименен как БонусПрименен
	|ИЗ
	|	втЗаказыПокупателей КАК втЗаказыПокупателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|(ВЫБРАТЬ
	|			ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|			СУММА(ЗаказыПокупателейОстатки.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	|			СУММА(ЗаказыПокупателейОстатки.ЕдиницаИзмерения.Вес * ЗаказыПокупателейОстатки.КоличествоОстаток) КАК Вес,
	|			СУММА(ВЫБОР
	|				КОГДА 
	//08.12.2017
	|					ЗаказыПокупателейОстатки.Номенклатура в (&масГруз) 
	|					ТОГДА ЗаказыПокупателейОстатки.ЕдиницаИзмерения.Объем * ЗаказыПокупателейОстатки.КоличествоОстаток * 1.3
	|				ИНАЧЕ ЗаказыПокупателейОстатки.ЕдиницаИзмерения.Объем * ЗаказыПокупателейОстатки.КоличествоОстаток
	|				КОНЕЦ) КАК Объем
	|		ИЗ
	|			РегистрНакопления.ЗаказыПокупателей.Остатки(
	|					,
	|					ЗаказПокупателя В
	|						(ВЫБРАТЬ
	|							втЗаказыПокупателей.ЗаказПокупателя
	|						ИЗ
	|							втЗаказыПокупателей КАК втЗаказыПокупателей)) КАК ЗаказыПокупателейОстатки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказыПокупателейОстатки.ЗаказПокупателя) КАК зтВесОбъемСумма
	|		ПО втЗаказыПокупателей.ЗаказПокупателя = зтВесОбъемСумма.ЗаказПокупателя	
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОтгрузки,
	|	НомерВходящегоДокумента
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаДляТабличногоПоля()

Функция ПолучитьТекстЗапросаДляТабличногоПоляСтарый(Транзит, Запрос)  // Запрос работал до 18.05.2017
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РезервНаСкладахОстатки.КоличествоОстаток, 0) = 0 
	|		и ЗаказыПокупателя.ЗаказПокупателя.Проверен и НЕ ЗаказыПокупателя.ЗаказПокупателя.Резерв
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Флаг,
	//--------------------------------------------------------
	|	ЗаказыПокупателя.ЗаказПокупателя.НомерТорговойТочкиКонтрагента как НомерТочки,
	
	|	ЗаказыПокупателя.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказыПокупателя.ЗаказПокупателя.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ЗаказыПокупателя.ЗаказПокупателя.ДоговорКонтрагента КАК Договор,
	|	ЗаказыПокупателя.ЗаказПокупателя.ТипЗаказа КАК ТипЗаказа,
	|	ЗаказыПокупателя.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо.Наименование КАК Менеджер,
	|	ЗаказыПокупателя.КоличествоОстаток КАК Количество,
	|	выбор когда ЗаказыПокупателя.ЗаказПокупателя.СуммаДокумента=0 тогда 0
	|	иначе ВЫРАЗИТЬ(100 * ЗаказыПокупателя.СуммаУпрОстаток / ЗаказыПокупателя.ЗаказПокупателя.СуммаДокумента КАК ЧИСЛО(10, 0)) 
	|	конец КАК Процент,
	|	ЗаказыПокупателя.ЗаказПокупателя.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ЗаказыПокупателя.ЗаказПокупателя.Комментарий КАК Комментарий,
	|	ЕСТЬNULL(РезервНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОтгружается
	//19.04.2016
	|	, ЗаказыПокупателя.ЗаказПокупателя.ДокументОснование как СезонныйЗаказ
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(, 
	//+++ 17.10.2014
	|//Комментарий  ЗаказПокупателя.Комментарий ПОДОБНО (&Комментарий) И
	
	|			ЗаказПокупателя.ДатаОтгрузки >= &ДатаОтгрузки0
	|				И ЗаказПокупателя.ДатаОтгрузки <= &ДатаОтгрузки1
	|				И ЗаказПокупателя.Контрагент = &Контрагент
	|				И ЗаказПокупателя.Проверен
	|				И ЗаказПокупателя.Транзит"+?(Транзит," И ЗаказПокупателя.Подразделение = &Подразделение","=ЛОЖЬ")+"
	
	
	//+++ 01.12.2016	
	|	И ЗаказПокупателя.ТипЗаказа <> 13 
	|	И ( ЗаказПокупателя.Статус=Значение(Перечисление.СтатусыЗаказов.ПустаяСсылка)
	|   или ЗаказПокупателя.Статус=Значение(Перечисление.СтатусыЗаказов.Получен) )
	
	//+++ 02.02.2015
	|"+?(Флажок2, " И ЗаказПокупателя.ССайта", "")+"
	|
	
	|) КАК ЗаказыПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервНаСкладах.Остатки(
	|				,
	|				ЗаказПокупателя.ДатаОтгрузки >= &ДатаОтгрузки0
	|					И ЗаказПокупателя.ДатаОтгрузки <= &ДатаОтгрузки1
	|					И ЗаказПокупателя.Контрагент = &Контрагент
	
	//+++ 01.12.2016	
	|	И ( ЗаказПокупателя.Статус=Значение(Перечисление.СтатусыЗаказов.ПустаяСсылка)
	|   или ЗаказПокупателя.Статус=Значение(Перечисление.СтатусыЗаказов.Получен) )
	
	
	|				И ЗаказПокупателя.Проверен
	|				И ЗаказПокупателя.Транзит"+?(Транзит," И ЗаказПокупателя.Подразделение = &Подразделение","=ЛОЖЬ")+"
	
	
	|					                                        ) КАК РезервНаСкладахОстатки
	//	|							И ЗаказПокупателя.Подразделение = &Подразделение) КАК РезервНаСкладахОстатки
	
	|		ПО ЗаказыПокупателя.ЗаказПокупателя = РезервНаСкладахОстатки.ЗаказПокупателя
	|ГДЕ
	|	ЕСТЬNULL(ЗаказыПокупателя.КоличествоОстаток, 0) > 0
	//	|	и ЗаказыПокупателя.ЗаказПокупателя.ТипЗаказа <> 13
	
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОтгрузки,
	|	НомерВходящегоДокумента
	|АВТОУПОРЯДОЧИВАНИЕ"; 
	
	Если НЕ РольДоступна("ПолныеПрава") тогда
		ТекстЗапроса = стрЗаменить( ТекстЗапроса,"//ОтборПоМенедеру", 
		?(Флажок2, "И ДоговорКонтрагента.Владелец.ОсновнойДоговорКонтрагента.ОтветственноеЛицо = &ОтветственноеЛицо",
		"И (ДоговорКонтрагента.ОтветственноеЛицо = &ОтветственноеЛицо
		|   ИЛИ ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента = &ОтветственноеЛицо)")
		);
		Запрос.УстановитьПараметр("ОтветственноеЛицо", глТекущийПользователь);
	КонецЕсли;
	
	Возврат ТекстЗапроса;	
		
КонецФункции // ПолучитьТекстЗапросаДляТабличногоПоляСтарый()

Функция ПолучитьДанныеДляТабличногоПоля(Контрагент, Транзит)
	
	Запрос = новый Запрос;
	//запрос.УстановитьПараметр("ДатаОтгрузки", НачалоДня(ДатаОтгрузки) );
	запрос.УстановитьПараметр("ДатаОтгрузки0", ДатаОтгрузки0 );
	запрос.УстановитьПараметр("ДатаОтгрузки1", ДатаОтгрузки1 );
	
	запрос.УстановитьПараметр("Контрагент", Контрагент);
	запрос.УстановитьПараметр("Подразделение",  Подразделение );
	
	//+++ 08.12.2017  по задаче № 37329
	масГруз = новый массив;
	масГруз.Добавить( справочники.Номенклатура.НайтиПоКоду("0001748"));
	масГруз.Добавить( справочники.Номенклатура.НайтиПоКоду("0001750"));
	масГруз.Добавить( справочники.Номенклатура.НайтиПоКоду("0080631"));
	запрос.УстановитьПараметр("масГруз", масГруз);
	
	ТекстЗапроса = ПолучитьТекстЗапросаДляТабличногоПоля(Транзит);
	
	Запрос.Текст = ТекстЗапроса;
	
	//+++ 17.10.2014
	Если СокрЛП(Комментарий)<>"" тогда
		Запрос.Текст = стрЗаменить( Запрос.Текст,"//Комментарий", "");
		Запрос.УстановитьПараметр("Комментарий", "%"+Комментарий+"%");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
		
КонецФункции // ПолучитьДанныеДляТабличногоПоля()

Процедура ВесОбъемОбновитьИтоги()
	
	ВесЛок   = 0;
	ОбъемЛок = 0;
	СуммаЛок = 0; //31.01.2018
	СуммаОстЛок = 0; //31.01.2018
	
	СтруктОтбора = Новый Структура("Флаг", Истина);
	МасСтр = ТабличноеПоле1.НайтиСтроки(СтруктОтбора);
	
	Для Каждого ТекСтр Из МасСтр Цикл
		ВесЛок   = ВесЛок   + ТекСтр.Вес;
		ОбъемЛок = ОбъемЛок + ТекСтр.Объем;
		СуммаЛок = СуммаЛок + ТекСтр.СуммаЗаказа;  //31.01.2018
		СуммаОстЛок = СуммаОстЛок + ТекСтр.СуммаОсталосьОтгрузить;
	КонецЦикла;
	
	ЭлементыФормы.ТабличноеПоле1.Колонки.Вес.ТекстПодвала   = "" + ВесЛок;
	ЭлементыФормы.ТабличноеПоле1.Колонки.Объем.ТекстПодвала = "" + ОбъемЛок;
	ЭлементыФормы.ТабличноеПоле1.Колонки.СуммаЗаказа.ТекстПодвала = "" + СуммаЛок; //31.01.2018
	ЭлементыФормы.ТабличноеПоле1.Колонки.СуммаОсталосьОтгрузить.ТекстПодвала = "" + СуммаОстЛок; 
	
	Если ОбъемЛок>=МаксОбъем+0.001 тогда //30.11.2017
		Предупреждение("Превышен макс.объём "+строка(МаксОбъем)+" м3!
					   |Объем по заказам: "+формат(ОбъемЛок,"ЧДЦ=3")+" м3", 10);
	КонецЕсли;	
	
КонецПроцедуры // ВесОбъемОбновитьИтоги()

Процедура ТабличноеПоле1ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ЭлементыФормы.ТабличноеПоле1.ТекущаяКолонка.Имя = "Флаг" Тогда
		ВесОбъемОбновитьИтоги();
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПоле1ПослеУдаления(Элемент)
	
	ВесОбъемОбновитьИтоги();
	
КонецПроцедуры

Процедура МаксОбъемПриИзменении(Элемент)
	ВесОбъемОбновитьИтоги()
КонецПроцедуры

Процедура МаксОбъемРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	Элемент.Значение = Элемент.Значение  + Направление; // +- 1
	МаксОбъемПриИзменении(Элемент)
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение = справочники.Подразделения.НайтиПоКоду("00139") тогда //06.11.2018
	    Отказ = истина;
		Предупреждение("Вам запрещено использовать эту обработку!", 30);
	КонецЕсли; 
КонецПроцедуры


мЖирныйШрифт = Новый Шрифт(,, Истина);
мКурсивШрифт = Новый Шрифт(,,, Истина);
мЖирныйКурсивШрифт = Новый Шрифт(,,Истина , Истина);
списокдоков  = Неопределено;
СвойствоНаправлениеОтгрузки = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90175");