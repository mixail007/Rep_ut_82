
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	
	для i=1 по 4 цикл
		УстановитьФлаги(i);
		ТабДок = ЭлементыФормы["ПолеТабличногоДокумента"+строка(i)];
		Отчет(ТабДок, КонецДня(Дата), ЭлементыФормы.Панель1.Страницы[i-1].Заголовок);
    КонецЦикла;
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура УстановитьФлаги(номерФл=1)
	
	ЭлементыФормы.Флажок1.Значение = Ложь;
	ЭлементыФормы.Флажок2.Значение = Ложь;
	ЭлементыФормы.Флажок3.Значение = Ложь;
	ЭлементыФормы.Флажок4.Значение = Ложь;
		
	Если номерФл=1 тогда
		ЭлементыФормы.Флажок1.Значение = Истина;
	иначеЕсли номерФл=2 тогда
		ЭлементыФормы.Флажок2.Значение = Истина;
	иначеЕсли номерФл=3 тогда
		ЭлементыФормы.Флажок3.Значение = Истина;
	иначеЕсли номерФл=4 тогда
		ЭлементыФормы.Флажок4.Значение = Истина;
	КонецЕсли;	
	
КонецПроцедуры	

Процедура Отчет(ТабДок, Дата, ТипОтчета) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗапросПоПустым.Склад КАК Склад,
	|	ЗапросПоПустым.Номенклатура.Код КАК Код,
	|	ЗапросПоПустым.Номенклатура КАК Номенклатура,
	|	ЗапросПоПустым.ДокументОприходования КАК ДокументОприходования,
	|	ЕСТЬNULL(ЗапросПоПустым.СтоимостьОстаток,0) КАК СтоимостьОстаток,
	|	ЕСТЬNULL(ЗапросПоПустым.КоличествоОстатокПартии,0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоСклад,
	|	"+?(ЭлементыФормы.Флажок4.Значение=ЛОЖЬ,"0","ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗапросПоПустым.КоличествоОстатокПартии,0)")+" КАК Разность
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииТоваровНаСкладахОстатки.Склад КАК Склад,
	|		ПартииТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура,
	//|		ПартииТоваровНаСкладахОстатки.ХарактеристикаНоменклатуры,
	//|		ПартииТоваровНаСкладахОстатки.СерияНоменклатуры,
	//|		ПартииТоваровНаСкладахОстатки.Качество,
	|		ПартииТоваровНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстатокПартии,
	|		ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК СтоимостьОстаток,
	|		"+?(ЭлементыФормы.Флажок4.Значение=Истина,"NULL","ПартииТоваровНаСкладахОстатки.ДокументОприходования")+" КАК ДокументОприходования
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&Дата,) КАК ПартииТоваровНаСкладахОстатки
	|
	|";
	//+++ анализ флажков
	
		
	условия = "";
	Если ЭлементыФормы.Флажок1.Значение тогда
		условия =условия +"ГДЕ (ПартииТоваровНаСкладахОстатки.КоличествоОстаток = 0 и ПартииТоваровНаСкладахОстатки.СтоимостьОстаток <> 0)
		|";
	КонецЕсли;
	Если ЭлементыФормы.Флажок2.Значение тогда
		условия =условия +?(условия<>""," ИЛИ ","ГДЕ ")+"(ПартииТоваровНаСкладахОстатки.КоличествоОстаток <> 0 и ПартииТоваровНаСкладахОстатки.СтоимостьОстаток = 0)
		|";
	КонецЕсли;
	Если ЭлементыФормы.Флажок3.Значение тогда
		условия =условия +?(условия<>""," ИЛИ ","ГДЕ ")+"(ПартииТоваровНаСкладахОстатки.КоличествоОстаток < 0 или ПартииТоваровНаСкладахОстатки.СтоимостьОстаток < 0)
		|";
	КонецЕсли;
	
	Если условия ="" и НЕ ЭлементыФормы.Флажок4.Значение тогда
		ЭлементыФормы.Флажок1.Значение = Истина;
		условия =условия +"ГДЕ (ПартииТоваровНаСкладахОстатки.КоличествоОстаток = 0 и ПартииТоваровНаСкладахОстатки.СтоимостьОстаток<>0)";
	КонецЕсли;
		
	Запрос.Текст =Запрос.Текст + условия;
	Запрос.Текст =Запрос.Текст +") КАК ЗапросПоПустым
	|
	|		"+?(ЭлементыФормы.Флажок4.Значение=Истина,"ПОЛНОЕ","ЛЕВОЕ")+" СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
	|		ПО ЗапросПоПустым.Склад = ТоварыНаСкладахОстатки.Склад
	|			И ЗапросПоПустым.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	//|			И ЗапросПоПустым.ХарактеристикаНоменклатуры = ТоварыНаСкладахОстатки.ХарактеристикаНоменклатуры
	//|			И ЗапросПоПустым.СерияНоменклатуры = ТоварыНаСкладахОстатки.СерияНоменклатуры
	//|			И ЗапросПоПустым.Качество = ТоварыНаСкладахОстатки.Качество
	
	//+++++++++++++++++++++
//	|"+?(ЭлементыФормы.Флажок4.Значение=Истина," И (ЗапросПоПустым.КоличествоОстатокПартии <> ТоварыНаСкладахОстатки.КоличествоОстаток)","")+"
	//+++++++++++++++++++++
	
	|
	//|СГРУППИРОВАТЬ ПО
	//|	ЗапросПоПустым.Склад,
	//|	ЗапросПоПустым.Номенклатура,
	//|	ЗапросПоПустым.ДокументОприходования
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	Номенклатура,
	|	ДокументОприходования
	|ИТОГИ
	|	СУММА(СтоимостьОстаток),
	|	СУММА(КоличествоОстаток),
	|	СУММА(КоличествоСклад),
	|	СУММА(Разность)
	|ПО
	|	ОБЩИЕ,
	|	Склад,
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";

		
	// +?(ЭлементыФормы.Флажок4.Значение=Истина,"ПОЛНОЕ","ЛЕВОЕ")+
	Запрос.УстановитьПараметр("Дата", Новый Граница(НачалоДня(Дата), ВидГраницы.Исключая) ); // фактически все по 23:59:59 включительно

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("ИТОГ");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСклад = Макет.ПолучитьОбласть("Склад");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	
	ОбластьЗаголовок.Параметры.ДатаОтч = Формат(Дата, "ДЛФ=DD");
	
	ОбластьЗаголовок.Параметры.КраткоеНазвание = ТипОтчета;
	
	условия = стрЗаменить(условия, "ПартииТоваровНаСкладахОстатки.КоличествоОстаток" ,"Количество");
	условия = стрЗаменить(условия, "ПартииТоваровНаСкладахОстатки.СтоимостьОстаток" ,"Стоимость");
	Если ЭлементыФормы.Флажок4.Значение тогда
		условия = условия+?(условия<>""," И ","")+ "(Количество по Складу <> Количество по Партиям)";
	КонецЕсли;
	ОбластьЗаголовок.Параметры.Условия = условия;
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаИТОГ = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    ВыборкаИТОГ.Следующий();
    ОбластьПодвал.Параметры.Заполнить(ВыборкаИТОГ);
	
	
	ВыборкаСклад = ВыборкаИТОГ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	минДата = КонецДня(ТекущаяДата());//+++
	
	ИтогоКол = 0; ИтогоСум=0; ИтогоРазность = 0; ИтогоКолСклад = 0;
	
	//======================Основной цикл================================================
	
	Пока ВыборкаСклад.Следующий() Цикл
		ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
		ОбластьСклад.Параметры.Разность = ВыборкаСклад.КоличествоСклад - ВыборкаСклад.КоличествоОстаток;  //+++

		Если ЭлементыФормы.Флажок4.Значение тогда
			Если ( ОбластьСклад.Параметры.Разность = 0 ) 
				или ВыборкаСклад.Склад = Справочники.Склады.ПустаяСсылка() 
				или ВыборкаСклад.Склад=Null тогда
				продолжить;
			КонецЕсли;
		    ОбластьСклад.Параметры.СтоимостьОстаток = 0; // из-за неправильного суммирования сумма по складу в запросе >> реальной
		    ОбластьСклад.Параметры.КоличествоОстаток = 0; 
			ОбластьСклад.Параметры.КоличествоСклад = 0;
		    ОбластьСклад.Параметры.Разность = 0;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьСклад, ВыборкаСклад.Уровень());

		ВыборкаНоменклатура = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаНоменклатура.Следующий() Цикл
			ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
			
		ОбластьНоменклатура.Параметры.Разность = ВыборкаНоменклатура.КоличествоСклад - ВыборкаНоменклатура.КоличествоОстаток; //+++

		//в сумме = нулю!
		Если ВыборкаНоменклатура.СтоимостьОстаток=0 и ВыборкаНоменклатура.КоличествоОстаток=0 и ВыборкаНоменклатура.КоличествоСклад=0 тогда
			продолжить;
		КонецЕсли;	
		
		Если ЭлементыФормы.Флажок4.Значение и ( ОбластьНоменклатура.Параметры.Разность = 0 ) тогда
			продолжить;
		КонецЕсли;
			ТабДок.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());

			Если ЭлементыФормы.Флажок4.Значение тогда  // без детализации
				ИтогоКол = ИтогоКол + ВыборкаНоменклатура.КоличествоОстаток; 
				ИтогоКолСклад = ИтогоКолСклад + ВыборкаНоменклатура.КоличествоСклад; 
				ИтогоСум = ИтогоСум + ВыборкаНоменклатура.СтоимостьОстаток;
				ИтогоРазность = ИтогоРазность + ВыборкаНоменклатура.КоличествоСклад - ВыборкаНоменклатура.КоличествоОстаток;
			продолжить;
			КонецЕсли;

			ВыборкаДетали = ВыборкаНоменклатура.Выбрать();

			Пока ВыборкаДетали.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
					ОбластьДетальныхЗаписей.Параметры.Разность = ВыборкаДетали.КоличествоСклад - ВыборкаДетали.КоличествоОстаток; //+++
				Если ЭлементыФормы.Флажок4.Значение и ( ОбластьДетальныхЗаписей.Параметры.Разность = 0 ) тогда
					продолжить;
				КонецЕсли;
 				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
				ИтогоКол = ИтогоКол + ВыборкаДетали.КоличествоОстаток; 
				ИтогоСум = ИтогоСум + ВыборкаДетали.СтоимостьОстаток;
				ИтогоКолСклад = ИтогоКолСклад + ВыборкаДетали.КоличествоСклад; 
				ИтогоРазность = ИтогоРазность + ВыборкаДетали.КоличествоСклад - ВыборкаДетали.КоличествоОстаток;
	
				Если значениеЗаполнено(ВыборкаДетали.ДокументОприходования) тогда  //+++
					Если минДата>ВыборкаДетали.ДокументОприходования.Дата тогда
						минДата=ВыборкаДетали.ДокументОприходования.Дата;
					КонецЕсли;
				КонецЕсли;
					
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если минДата <> КонецДня(ТекущаяДата()) тогда //+++
		ЭлементыФормы.Надпись1.Заголовок = "мин.дата = "+Формат(минДата,"ДЛФ=D");
	иначе
		ЭлементыФормы.Надпись1.Заголовок = " ";
    КонецЕсли;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ОбластьПодвал.Параметры.КоличествоОстаток = ИтогоКол;
	ОбластьПодвал.Параметры.КоличествоСклад =ИтогоКолСклад;
	ОбластьПодвал.Параметры.СтоимостьОстаток = ИтогоСум;
	ОбластьПодвал.Параметры.Разность = ?(ЭлементыФормы.Флажок4.Значение, ИтогоРазность,0);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ПриОткрытии()
	Если Дата = Дата(1,1,1) тогда
		Дата = КонецДня(ТекущаяДата());
	КонецЕсли;	
КонецПроцедуры
