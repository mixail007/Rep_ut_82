
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ОтчетИнициализация();

КонецПроцедуры

Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОтчетыОтчетПоДоговорамКлиентовОтчет_46ad9175-7357-490e-8e16-5865bb44f3bb", ПостроительОтчетаОтчет.ПолучитьНастройки());

КонецПроцедуры

Процедура ДействияФормыОтчетНастройка(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Форма = ВнешнийОтчетОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Форма.ОткрытьМодально() = Истина Тогда
		ОтчетВывести();
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ОтчетВывести();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ОтчетВывести()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ПостроительОтчетаОтчет.Параметры.Вставить("НачДата", ДобавитьМесяц(ТекущаяДата(), -24) );
	ПостроительОтчетаОтчет.Параметры.Вставить("КонДата", ТекущаяДата());
	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();

	ПостроительОтчетаОтчет.Выполнить();
	ПостроительОтчетаОтчет.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Классика);
	ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ
КонецПроцедуры

Процедура ОтчетИнициализация()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	
	
	ПостроительОтчетаОтчет.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Владелец,
	|	ПродажиОбороты.ДоговорКонтрагента.Дата КАК Дата,
	|	ПродажиОбороты.ДоговорКонтрагента.Номер КАК Номер,
	|	БумажныеДоговоры.Состояние КАК СостояниеДоговора,
	|	БумажныеДоговоры.ЕстьДоговорПоручительства КАК ЕстьДоговорПоручительства,
	|	БумажныеДоговоры.ЕстьКопииПравоустанавливающихДокументов КАК ЕстьКопииПравоустанавливающихДокументов,
	|	БумажныеДоговоры.ДатаОкончанияДействия КАК ДатаОкончанияДействия
	|ПОМЕСТИТЬ ВТ_Обороты
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&НачДата, &КонДата, , ) КАК ПродажиОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БумажныеДоговоры КАК БумажныеДоговоры
	|		ПО ПродажиОбороты.ДоговорКонтрагента.Владелец = БумажныеДоговоры.Контрагент
	|			И ПродажиОбороты.ДоговорКонтрагента.Дата = БумажныеДоговоры.Период
	|			И ПродажиОбороты.ДоговорКонтрагента.Номер = БумажныеДоговоры.Номер
	|ГДЕ
	|	НЕ ПродажиОбороты.ДоговорКонтрагента.ПометкаУдаления
	|	И НЕ ПродажиОбороты.ДоговорКонтрагента.Владелец.ПометкаУдаления
	|	И ПродажиОбороты.ДоговорКонтрагента.Владелец.Покупатель
	|	И ПродажиОбороты.ДоговорКонтрагента.Номер <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Владелец.Код КАК Код,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.Владелец.ИНН КАК ИНН,
	|	ДоговорыКонтрагентов.Номер,
	|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Дата КАК ДАТА) КАК Дата,
	|	ДоговорыКонтрагентов.ЕстьДоговорПоручительства КАК ЕстьДогорПоручительства,
	|	ДоговорыКонтрагентов.ЕстьКопииПравоустанавливающихДокументов КАК ЕстьКопииПравоустанавливающихДокументов,
	|	ДоговорыКонтрагентов.СостояниеДоговора КАК СостояниеДоговора
	|ИЗ
	|	ВТ_Обороты КАК ДоговорыКонтрагентов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент
	|ИТОГИ
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(ЕстьДогорПоручительства),
	|	МАКСИМУМ(ЕстьКопииПравоустанавливающихДокументов),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СостояниеДоговора)
	|ПО
	|	Контрагент
	|АВТОУПОРЯДОЧИВАНИЕ";
	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет";
	Настройка = ВосстановитьЗначение("НастройкаВнешниеОтчетыОтчетПоДоговорамКлиентовОтчет_46ad9175-7357-490e-8e16-5865bb44f3bb");
	Если Настройка <> Неопределено Тогда
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ
КонецПроцедуры




