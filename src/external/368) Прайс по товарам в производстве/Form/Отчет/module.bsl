
Процедура ОтчетСформировать(Кнопка) Экспорт
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт

    //--------------анализ по остаткам на складах БЕЗ учета ОТХ?!--------------------------
	
	//Если ЗначениеНеЗаполнено(СезонныйЗаказ) Тогда
	//	Сообщить("Необходимо выбрать сезонный заказ для анализа!");
	//	Возврат;
	//КонецЕсли;	
	
	Макет = ЭтотОбъект.ПолучитьМакет("Макет");

	Запрос = Новый Запрос;
	
	Запрос.Текст ="ВЫБРАТЬ
	              |	СУММА(а.КоличествоВпроизводстве) КАК КоличествоВПроизводстве,
	              |	а.Номенклатура,
	              |	МАКСИМУМ(а.Цена + а.Цена / 100 * &ПроцентИзмЦены) КАК Цена
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоВпроизводстве,
	              |		ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
	              |		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный,
	              |		ЗаказПоставщикуСезонныйТовары.Цена КАК Цена
	              |	ИЗ
	              |		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
	              |				,
	              |				НЕ ЗаказПоставщикуСезонный.Транзит
	              |					И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки
	              |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщикуСезонный.Товары КАК ЗаказПоставщикуСезонныйТовары
	              |			ПО ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный = ЗаказПоставщикуСезонныйТовары.Ссылка
	              |				И ЗаказыПоставщикамСезонныеОстатки.Номенклатура = ЗаказПоставщикуСезонныйТовары.Номенклатура 
				 | ГДЕ
					|ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток > 0) КАК а
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	а.Номенклатура
					|УПОРЯДОЧИТЬ ПО
					|	а.Номенклатура.Производитель,
					|а.Номенклатура.Модель,
					|	а.Номенклатура.Типоразмер.Диаметр
					|АВТОУПОРЯДОЧИВАНИЕ				  
					//|;
				  //|
				  //|////////////////////////////////////////////////////////////////////////////////
				  //|ВЫБРАТЬ
				  //|	СУММА(ВЫБОР
				  //|			КОГДА б.КоличествоВпроизводстве < 0
				  //|				ТОГДА 0
				  //|			ИНАЧЕ б.КоличествоВпроизводстве
				  //|		КОНЕЦ) КАК КоличествоВпроизводстве,
				  //|	б.Номенклатура
				  //|ИЗ
				  //|	(ВЫБРАТЬ
				  //|		ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоВпроизводстве,
				  //|		ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
				  //|		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный
				  //|	ИЗ
				  //|		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
				  //|				,
				  //|				ЗаказПоставщикуСезонный.Транзит
				  //|					И (ЗаказПоставщикуСезонный.Подразделение = &Подразделение
				  //|						ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
				  //|					И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки) КАК б
				  //|
				  //|СГРУППИРОВАТЬ ПО
				  //|	б.Номенклатура
				  |";
				  
	//НачДата = ?(НачДата='00010101', НачалоДня(СезонныйЗаказ.Дата), НачДата);
	//КонДата = ?(КонДата='00010101', 
	//				?(ЗначениеНеЗаполнено(СезонныйЗаказ.ДатаДействияПо), КонецГода(СезонныйЗаказ.Дата), КонецДня(СезонныйЗаказ.ДатаДействияПо)) 
	//				, КонецДня(КонДата) );

//+++ 17.03.2014
	//Запрос.УстановитьПараметр("ДатаНач", НачДата);
	//Запрос.УстановитьПараметр("ДатаКон", КонДата);
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );//+++ 02.04.2014 - товары в производстве по действующим заказам поставщикам сезонным
	Запрос.УстановитьПараметр("ПроцентИзмЦены", КоэффициентПересчетаЦены);
//	Если ВидСклада=0 тогда
//		Подразделение=Справочники.Подразделения.ПустаяСсылка();
//	ИначеЕсли ВидСклада=1 тогда
//		Подразделение=Справочники.Подразделения.НайтиПоКоду("00106");
//	ИначеЕсли ВидСклада=2 тогда
//		Подразделение=Справочники.Подразделения.НайтиПоКоду("00112");	
//	ИначеЕсли ВидСклада=3 Тогда
////		Подразделение=Справочники.Подразделения.НайтиПоКоду("00122");	
//		Подразделение=Справочники.Подразделения.НайтиПоКоду("00138");	
//	КонецЕсли;
//	
//	Запрос.УстановитьПараметр("Подразделение", Подразделение);
//	Запрос.УстановитьПараметр("Транзит", ? (ВидСклада = 0, Ложь, Истина));
	

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	
	//ОбластьЗаголовок.Параметры.ПредставлениеЗаказа =  Строка (СезонныйЗаказ.Ссылка) +" от "+ СезонныйЗаказ.Ссылка.Контрагент.Наименование;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	i = 1;
	Пока ВыборкаДетали.Следующий() Цикл
		РегСвва=РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
		РегСвва.Отбор.Объект.Установить(ВыборкаДетали.Номенклатура);
		РегСвва.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Цвет"));
		РегСвва.Прочитать();
		Если РегСвва.Количество()>0 Тогда
			Цвет = СокрЛП(РегСвва.Получить(0).Значение);
		Иначе
			Цвет="";
		КонецЕсли;
		ОбластьДетальныхЗаписей.Параметры.НомерСтроки 				 = i;
		ОбластьДетальныхЗаписей.Параметры.Номенклатура 				 = ВыборкаДетали.Номенклатура;
		ОбластьДетальныхЗаписей.Параметры.Код			  			 = ВыборкаДетали.Номенклатура.Код;
		ОбластьДетальныхЗаписей.Параметры.Производитель				 = ВыборкаДетали.Номенклатура.Производитель;
		ОбластьДетальныхЗаписей.Параметры.Модель					 = СтрЗаменить(ВыборкаДетали.Номенклатура.Модель.Наименование, "_", "");
		ОбластьДетальныхЗаписей.Параметры.Диаметр					 = ВыборкаДетали.Номенклатура.Типоразмер.Диаметр;
		ОбластьДетальныхЗаписей.Параметры.Ширина			 		 = ВыборкаДетали.Номенклатура.Типоразмер.Ширина;
		ОбластьДетальныхЗаписей.Параметры.КоличествоОтверстий		 = ВыборкаДетали.Номенклатура.Типоразмер.КоличествоОтверстий;
		ОбластьДетальныхЗаписей.Параметры.РасстояниеМеждуОтверстиями = ВыборкаДетали.Номенклатура.Типоразмер.PCD;
		ОбластьДетальныхЗаписей.Параметры.Вылет						 = ВыборкаДетали.Номенклатура.Типоразмер.Вылет;
		ОбластьДетальныхЗаписей.Параметры.Ступица					 = ВыборкаДетали.Номенклатура.Типоразмер.ДиаметрСтупицы;
		ОбластьДетальныхЗаписей.Параметры.Цвет						 = Цвет;
		ОбластьДетальныхЗаписей.Параметры.Цена						 = ВыборкаДетали.Цена;
		ОбластьДетальныхЗаписей.Параметры.СсылкаНаФото				 = "http://yst.ru/photos/main_disk_photo/"+СокрЛП(ВРЕГ(ВыборкаДетали.Номенклатура.Модель.Наименование+"_"+Цвет))+".jpg";
		//ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей);
		i = i + 1;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

//Процедура ВыбПериодНажатие(Элемент)
//	НастройкаПериода = Новый НастройкаПериода;
//	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
//	НастройкаПериода.РедактироватьКакИнтервал = Истина;
//	НастройкаПериода.РедактироватьКакПериод = Истина;
//	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
//	Если НастройкаПериода.Редактировать() Тогда
//		НачДата = НастройкаПериода.ПолучитьДатуНачала();
//		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
//	КонецЕсли;
//КонецПроцедуры


Процедура ПолеТабличногоДокументаВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если Найти(Область.Имя, "C15") > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ЗапуститьПриложение(Область.Текст);
	КонецЕсли;
	
КонецПроцедуры
