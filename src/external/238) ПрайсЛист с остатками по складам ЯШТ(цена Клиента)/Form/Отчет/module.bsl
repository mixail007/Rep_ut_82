Перем ВидОтчета;
Перем ТолькоДиски;
Перем СтрокаВид;

Процедура ДействияФормыОтчетСформировать(Кнопка)
	ТолькоДиски=Ложь;
	СтрокаВид="Шины";
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);
//	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
КонецПроцедуры

Процедура ДействияФормыСформироватьТолькоДиски(Кнопка)
	СтрокаВид="Диски";
	ТолькоДиски=Истина;
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	//Отчет(ТабДок);
	//+++  18.05.2012
	началоВр =ТекущаяДата();
	Отчет(ТабДок);
	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
	парамЗапроса = "Диски"; 
	Если ВремяВыполнения>0 тогда
		//общий модуль:  яштПрочее.ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки(
		ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 171, ВремяВыполнения, "Кнопка [Сформировать] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
	КонецЕсли;	
	//+++)   18.05.2012
	
	//+++ 20.09.2013 - ограничение для Филиалов	
	Если не ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") тогда
	//	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	КонецЕсли;
	
КонецПроцедуры

//ГЛАВНАЯ ПРОЦЕДУРА
Процедура Отчет(ТабДок) Экспорт
	
	//Смирнов 24.03.14
	СписокФайловФТП=ПолучитьФайлыФТП();
	//Смирнов 24.03.14

	
	Если ВыводитьПрименяемость Тогда
		Макет=ПолучитьМакет("ОтчетДискиПрименяемость");		
	Иначе
		Макет=ПолучитьМакет("ОтчетДиски");	
	КонецЕсли;
	
	//АКБ=Справочники.Номенклатура.НайтиПоКоду("0080021");
	Диски=Справочники.Номенклатура.НайтиПоКоду("0001752");
	Камеры=Справочники.Номенклатура.НайтиПоКоду("0001127");
	Кольца=Справочники.Номенклатура.НайтиПоКоду("4104444");
	ОбодныеЛенты=Справочники.Номенклатура.НайтиПоКоду("0060110");
	Шины=Справочники.Номенклатура.НайтиПоКоду("0001746");
	Шипы=Справочники.Номенклатура.НайтиПоКоду("0060001");
	Крышки=Справочники.Номенклатура.НайтиПоКоду("0080004");
	
	Если ВыводитьПрименяемость Тогда
		ПостроительОтчетаОтчет.Текст = "ВЫБРАТЬ
		                               |	ДискиСКрышками.Номенклатура.Код,
		                               |	ДискиСКрышками.Номенклатура,
		                               |	ДискиСКрышками.Комплектующая,
		                               |	ДискиСКрышками.КоличествоДисковОстаток,
		                               |	ДискиСКрышками.КОличествоДисковЗаказано,
		                               |	ДискиСКрышками.СвободныйОстатокДисков,
		                               |	ЕСТЬNULL(КрышкиНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоКрышекОстаток
		                               |ПОМЕСТИТЬ ВТ_ДетальнаяТаблица
		                               |ИЗ
		                               |	(ВЫБРАТЬ
		                               |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		                               |		Крышки.Комплектующая КАК Комплектующая,
		                               |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоДисковОстаток,
		                               |		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоДисковЗаказано,
		                               |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстатокДисков
		                               |	ИЗ
		                               |		РегистрНакопления.ТоварыНаСкладах.Остатки(
		                               |				,
		                               |				Номенклатура В ИЕРАРХИИ (&Диски)
		                               |					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		                               |					И Номенклатура В
		                               |						(ВЫБРАТЬ
		                               |							РегистрСведений.КомплектующиеНоменклатуры.Номенклатура
		                               |						ИЗ
		                               |							РегистрСведений.КомплектующиеНоменклатуры)
		                               |					И (НЕ Склад.ЗапретитьИспользование)
		                               |					И (НЕ Склад.Транзитный) {(Номенклатура).*}) КАК ТоварыНаСкладахОстатки
		                               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
		                               |					,
		                               |					Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		                               |						И Номенклатура В
		                               |							(ВЫБРАТЬ
		                               |								РегистрСведений.КомплектующиеНоменклатуры.Номенклатура
		                               |							ИЗ
		                               |								РегистрСведений.КомплектующиеНоменклатуры)
		                               |						И (НЕ ЗаказПокупателя.Транзит)
		                               |						И ЗаказПокупателя.Проверен {(Номенклатура).*}) КАК ЗаказыПокупателейОстатки
		                               |			ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
		                               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                               |				КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
		                               |				КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая
		                               |			ИЗ
		                               |				РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
		                               |			ГДЕ
		                               |				КомплектующиеНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		                               |				И КомплектующиеНоменклатуры.Комплектующая.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		                               |				И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Крышки)) КАК Крышки
		                               |			ПО ТоварыНаСкладахОстатки.Номенклатура = Крышки.Номенклатура) КАК ДискиСКрышками
		                               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		                               |				,
		                               |				Номенклатура В ИЕРАРХИИ (&Крышки)
		                               |					И Номенклатура В
		                               |						(ВЫБРАТЬ
		                               |							РегистрСведений.КомплектующиеНоменклатуры.Комплектующая
		                               |						ИЗ
		                               |							РегистрСведений.КомплектующиеНоменклатуры)
		                               |					И (НЕ Склад.ЗапретитьИспользование)
		                               |					И (НЕ Склад.Транзитный)) КАК КрышкиНаСкладахОстатки
		                               |		ПО ДискиСКрышками.Комплектующая = КрышкиНаСкладахОстатки.Номенклатура
		                               |;
		                               |
		                               |////////////////////////////////////////////////////////////////////////////////
		                               |ВЫБРАТЬ
		                               |	ВТ_ДетальнаяТаблица.Комплектующая.Код,
		                               |	ВТ_ДетальнаяТаблица.Комплектующая,
		                               |	СУММА(ВТ_ДетальнаяТаблица.КоличествоДисковОстаток) КАК КоличествоДисковОстаток,
		                               |	СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано) КАК КоличествоДисковЗаказано,
		                               |	СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) КАК КоличествоКрышекОстаток,
		                               |	ВЫБОР
		                               |		КОГДА СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано) >= СУММА(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков)
		                               |			ТОГДА 1
		                               |		КОГДА СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано) > 0
		                               |			ТОГДА (СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано)) / СУММА(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков)
		                               |		ИНАЧЕ 0
		                               |	КОНЕЦ КАК Коэффициент
		                               |ПОМЕСТИТЬ ВТ_КрышкиКоэффициенты
		                               |ИЗ
		                               |	ВТ_ДетальнаяТаблица КАК ВТ_ДетальнаяТаблица
		                               |
		                               |СГРУППИРОВАТЬ ПО
		                               |	ВТ_ДетальнаяТаблица.Комплектующая,
		                               |	ВТ_ДетальнаяТаблица.Комплектующая.Код
		                               |;
		                               |
		                               |////////////////////////////////////////////////////////////////////////////////
		                               |ВЫБРАТЬ
		                               |	ВТ_ДетальнаяТаблица.Номенклатура КАК Номенклатура,
		                               |	ЕСТЬNULL(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков * ВТ_КрышкиКоэффициенты.Коэффициент, 0) КАК СвободныйОстатокПоказать
		                               |ПОМЕСТИТЬ ВТ_СвободныеОстаткиПоСборнымДискам
		                               |ИЗ
		                               |	ВТ_ДетальнаяТаблица КАК ВТ_ДетальнаяТаблица
		                               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КрышкиКоэффициенты КАК ВТ_КрышкиКоэффициенты
		                               |		ПО ВТ_ДетальнаяТаблица.Комплектующая = ВТ_КрышкиКоэффициенты.Комплектующая
		                               |;
		                               |
		                               |////////////////////////////////////////////////////////////////////////////////
		                               |ВЫБРАТЬ
		                               |	Б.Номенклатура,
		                               |	Б.Номенклатура.Родитель КАК Родитель,
		                               |	Б.Номенклатура.Код КАК Код,
		                               |	Б.Типоразмер.Ширина КАК Ширина,
		                               |	Б.Типоразмер.Высота КАК Высота,
		                               |	Б.Типоразмер.Диаметр КАК Диаметр,
		                               |	Б.Типоразмер.КоличествоОтверстий КАК КоличествоОтверстий,
		                               |	Б.Типоразмер.PCD КАК PCD,
		                               |	Б.Типоразмер.Вылет КАК Вылет,
		                               |	Б.Типоразмер.ДиаметрСтупицы КАК ДиаметрСтупицы,
		                               |	Б.Номенклатура.Модель КАК Модель,
		                               |	Б.Номенклатура.Артикул КАК Артикул,
		                               |	Б.Номенклатура.Производитель КАК Производитель,
		                               |	Б.ОстатокДляКлиента,
		                               |	Б.КоличествоВПути,
		                               |	Б.КоличествоПриход2Недели,
		                               |	Б.КоличествоПриход2Месяца,
		                               |	Б.КоличествоВПроизводстве,
		                               |	Б.СвободныйОстатокДляКлиента,
		                               |	Б.КОличествоВРезерве,
		                               |	Б.Цвет КАК Цвет,
		                               |	Б.ЦенаБазовая КАК ЦенаБазовая,
		                               |	Б.Автомобили
		                               |ИЗ
		                               |	(ВЫБРАТЬ
		                               |		А.Номенклатура КАК Номенклатура,
		                               |		А.Номенклатура.Родитель КАК Родитель,
		                               |		А.Номенклатура.Код КАК Код,
		                               |		А.Номенклатура.Типоразмер КАК Типоразмер,
		                               |		А.Номенклатура.Производитель КАК Производитель,
		                               |		А.Остаток КАК Остаток,
		                               |		А.КоличествоВПути КАК КоличествоВПути,
		                               |		А.КоличествоПриход2Недели КАК КоличествоПриход2Недели,
		                               |		А.КоличествоПриход2Месяца КАК КоличествоПриход2Месяца,
		                               |		ВЫБОР
		                               |			КОГДА А.Остаток > 50
		                               |					И &РежимФормирования
		                               |				ТОГДА 51
		                               |			ИНАЧЕ А.Остаток
		                               |		КОНЕЦ КАК ОстатокДляКлиента,
		                               |		ВЫБОР
		                               |			КОГДА ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать ЕСТЬ NULL 
		                               |				ТОГДА ВЫБОР
		                               |						КОГДА А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
		                               |								И &РежимФормирования
		                               |							ТОГДА 51
		                               |						ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
		                               |					КОНЕЦ
		                               |			ИНАЧЕ ВЫБОР
		                               |					КОГДА ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать > 50
		                               |							И &РежимФормирования
		                               |						ТОГДА 51
		                               |					ИНАЧЕ ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать
		                               |				КОНЕЦ
		                               |		КОНЕЦ КАК СвободныйОстатокДляКлиента,
		                               |		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
		                               |		ЕСТЬNULL(ЦеныБазовая.Цена, 0) КАК ЦенаБазовая,
		                               |		ЗначенияСвойствобъектов.Цвет КАК Цвет,
		                               |		А.КоличествоВПроизводстве КАК КоличествоВПроизводстве,
		                               |		ЕСТЬNULL(СоответствиеТипоразмеровАвтомобилям.Автомобили, """") КАК Автомобили
		                               |	ИЗ
		                               |		(ВЫБРАТЬ
		                               |			А.Номенклатура КАК Номенклатура,
		                               |			СУММА(А.Остаток) КАК Остаток,
		                               |			СУММА(А.КоличествоВПути) КАК КоличествоВПути,
		                               |			СУММА(А.КоличествоПриход2Недели) КАК КоличествоПриход2Недели,
		                               |			СУММА(А.КоличествоПриход2Месяца) КАК КоличествоПриход2Месяца,
		                               |			СУММА(А.КоличествоВПроизводстве) КАК КоличествоВПроизводстве
		                               |		ИЗ
		                               |			(ВЫБРАТЬ
		                               |				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		                               |				ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
		                               |				0 КАК КоличествоВПути,
		                               |				0 КАК КоличествоПриход2Недели,
		                               |				0 КАК КоличествоПриход2Месяца,
		                               |				0 КАК КоличествоВПроизводстве
		                               |			ИЗ
		                               |				РегистрНакопления.ТоварыНаСкладах.Остатки(
		                               |						,
		                               |						Номенклатура В ИЕРАРХИИ (&Диски)
		                               |							И (НЕ Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски))
		                               |							И (НЕ Склад.ЗапретитьИспользование)
		                               |							И (НЕ Склад.Транзитный) {(Номенклатура).*, (Номенклатура).*}) КАК ТоварыНаСкладахОстатки
		                               |			
		                               |			ОБЪЕДИНИТЬ ВСЕ
		                               |			
		                               |			ВЫБРАТЬ
		                               |				А.Номенклатура,
		                               |				0,
		                               |				СУММА(А.КоличествоОстаток),
		                               |				СУММА(А.КоличествоПриход2Недели),
		                               |				СУММА(А.КоличествоПриход2Месяца),
		                               |				0
		                               |			ИЗ
		                               |				(ВЫБРАТЬ
		                               |					ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступленияВПорт,
		                               |					ВЫБОР
		                               |						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		                               |							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
		                               |						ИНАЧЕ 0
		                               |					КОНЕЦ КАК КоличествоПриход2Недели,
		                               |					ВЫБОР
		                               |						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
		                               |							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
		                               |						ИНАЧЕ 0
		                               |					КОНЕЦ КАК КоличествоПриход2Месяца,
		                               |					ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
		                               |					ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		                               |					ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
		                               |				ИЗ
		                               |					РегистрНакопления.ЗаказыПоставщикам.Остатки(
		                               |							,
		                               |							Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		                               |								И (НЕ ЗаказПоставщику.Транзит) {(Номенклатура).*}) КАК ЗаказыПоставщикамОстатки) КАК А
		                               |			
		                               |			СГРУППИРОВАТЬ ПО
		                               |				А.Номенклатура
		                               |			
		                               |			ОБЪЕДИНИТЬ ВСЕ
		                               |			
		                               |			ВЫБРАТЬ
		                               |				ОстаткиОТХ.Номенклатура,
		                               |				СУММА(ОстаткиОТХ.КоличествоОстаток),
		                               |				СУММА(0),
		                               |				СУММА(0),
		                               |				СУММА(0),
		                               |				СУММА(0)
		                               |			ИЗ
		                               |				(ВЫБРАТЬ
		                               |					отх.Номенклатура КАК Номенклатура,
		                               |					отх.КоличествоОстаток КАК КоличествоОстаток
		                               |				ИЗ
		                               |					РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
		                               |							,
		                               |							(НЕ Склад.Транзитный)
		                               |								И (НЕ Склад.ЗапретитьИспользование)
		                               |								И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		                               |								И Контрагент В (&СписокПоставщиковОТХ) {(Номенклатура).*}) КАК отх
		                               |				ГДЕ
		                               |					отх.КоличествоОстаток > 0) КАК ОстаткиОТХ
		                               |			
		                               |			СГРУППИРОВАТЬ ПО
		                               |				ОстаткиОТХ.Номенклатура) КАК А
		                               |		
		                               |		СГРУППИРОВАТЬ ПО
		                               |			А.Номенклатура) КАК А
		                               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
		                               |					,
		                               |					(НЕ ЗаказПокупателя.Транзит)
		                               |						И ЗаказПокупателя.Проверен {(Номенклатура).*}) КАК ЗаказыПокупателейОстатки
		                               |			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
		                               |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СвободныеОстаткиПоСборнымДискам КАК ВТ_СвободныеОстаткиПоСборнымДискам
		                               |			ПО А.Номенклатура = ВТ_СвободныеОстаткиПоСборнымДискам.Номенклатура
		                               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                               |				ЗначенияСвойствобъектов.Объект КАК Объект,
		                               |				ЗначенияСвойствобъектов.Значение КАК Цвет
		                               |			ИЗ
		                               |				РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствобъектов
		                               |			ГДЕ
		                               |				ЗначенияСвойствобъектов.Свойство = &СвойствоЦвет) КАК ЗначенияСвойствобъектов
		                               |			ПО А.Номенклатура = ЗначенияСвойствобъектов.Объект
		                               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &ТипЦенБазовая {(Номенклатура).*}) КАК ЦеныБазовая
		                               |			ПО А.Номенклатура = ЦеныБазовая.Номенклатура
		                               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТипоразмеровАвтомобилям КАК СоответствиеТипоразмеровАвтомобилям
		                               |			ПО А.Номенклатура.Типоразмер = СоответствиеТипоразмеровАвтомобилям.Типоразмер) КАК Б
		                               |ГДЕ
		                               |	(НЕ Б.Номенклатура В ИЕРАРХИИ (&Крышки))
		                               |	И (Б.ОстатокДляКлиента > 0
		                               |			ИЛИ Б.КоличествоВПути > 0)
		                               |
		                               |УПОРЯДОЧИТЬ ПО
		                               |	Родитель,
		                               |	Б.Номенклатура.Производитель.Наименование,
		                               |	Б.Номенклатура.Модель.Наименование,
		                               |	Б.Номенклатура.Типоразмер.Наименование,
		                               |	Б.Номенклатура.Наименование";	
	Иначе
		ПостроительОтчетаОтчет.Текст="ВЫБРАТЬ
	                             |	ДискиСКрышками.Номенклатура.Код,
	                             |	ДискиСКрышками.Номенклатура,
	                             |	ДискиСКрышками.Комплектующая,
	                             |	ДискиСКрышками.КоличествоДисковОстаток,
	                             |	ДискиСКрышками.КОличествоДисковЗаказано,
	                             |	ДискиСКрышками.СвободныйОстатокДисков,
	                             |	ЕСТЬNULL(КрышкиНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоКрышекОстаток
	                             |ПОМЕСТИТЬ ВТ_ДетальнаяТаблица
	                             |ИЗ
	                             |	(ВЫБРАТЬ
	                             |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	                             |		Крышки.Комплектующая КАК Комплектующая,
	                             |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоДисковОстаток,
	                             |		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоДисковЗаказано,
	                             |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстатокДисков
	                             |	ИЗ
	                             |		РегистрНакопления.ТоварыНаСкладах.Остатки( ,{Номенклатура.*} Номенклатура В ИЕРАРХИИ (&Диски)
	                             |					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	                             |					И Номенклатура В
	                             |						(ВЫБРАТЬ
	                             |							РегистрСведений.КомплектующиеНоменклатуры.Номенклатура
	                             |						ИЗ
	                             |							РегистрСведений.КомплектующиеНоменклатуры)
	                             |					И (НЕ Склад.ЗапретитьИспользование)
	                             |					И (НЕ Склад.Транзитный)) КАК ТоварыНаСкладахОстатки
	                             |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(,{Номенклатура.*}
	                             |					Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	                             |						И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ
	                             |										  РегистрСведений.КомплектующиеНоменклатуры)
	                             |						И (НЕ ЗаказПокупателя.Транзит)
	                             |						И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателейОстатки
	                             |			ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	                             |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                             |				КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	                             |				КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая
	                             |			ИЗ
	                             |				РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	                             |			ГДЕ
	                             |				КомплектующиеНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	                             |				И КомплектующиеНоменклатуры.Комплектующая.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	                             |				И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Крышки)) КАК Крышки
	                             |			ПО ТоварыНаСкладахОстатки.Номенклатура = Крышки.Номенклатура) КАК ДискиСКрышками
	                             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура В ИЕРАРХИИ (&Крышки)
	                             |					И Номенклатура В (ВЫБРАТЬ Комплектующая
	                             |						ИЗ РегистрСведений.КомплектующиеНоменклатуры)
	                             |					И (НЕ Склад.ЗапретитьИспользование)
	                             |					И (НЕ Склад.Транзитный)) КАК КрышкиНаСкладахОстатки
	                             |		ПО ДискиСКрышками.Комплектующая = КрышкиНаСкладахОстатки.Номенклатура
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	ВТ_ДетальнаяТаблица.Комплектующая.Код,
	                             |	ВТ_ДетальнаяТаблица.Комплектующая,
	                             |	СУММА(ВТ_ДетальнаяТаблица.КоличествоДисковОстаток) КАК КоличествоДисковОстаток,
	                             |	СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано) КАК КоличествоДисковЗаказано,
	                             |	СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) КАК КоличествоКрышекОстаток,
	                             |	ВЫБОР
	                             |		КОГДА СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано) >= СУММА(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков)
	                             |			ТОГДА 1
	                             |		КОГДА СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано) > 0
	                             |			ТОГДА (СРЕДНЕЕ(ВТ_ДетальнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_ДетальнаяТаблица.КОличествоДисковЗаказано)) / СУММА(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков)
	                             |		ИНАЧЕ 0
	                             |	КОНЕЦ КАК Коэффициент
	                             |ПОМЕСТИТЬ ВТ_КрышкиКоэффициенты
	                             |ИЗ
	                             |	ВТ_ДетальнаяТаблица КАК ВТ_ДетальнаяТаблица
	                             |
	                             |СГРУППИРОВАТЬ ПО
	                             |	ВТ_ДетальнаяТаблица.Комплектующая,
	                             |	ВТ_ДетальнаяТаблица.Комплектующая.Код
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	ВТ_ДетальнаяТаблица.Номенклатура КАК Номенклатура,
	                             |	ЕСТЬNULL(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков * ВТ_КрышкиКоэффициенты.Коэффициент, 0) КАК СвободныйОстатокПоказать
	                             |ПОМЕСТИТЬ ВТ_СвободныеОстаткиПоСборнымДискам
	                             |ИЗ
	                             |	ВТ_ДетальнаяТаблица КАК ВТ_ДетальнаяТаблица
	                             |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КрышкиКоэффициенты КАК ВТ_КрышкиКоэффициенты
	                             |		ПО ВТ_ДетальнаяТаблица.Комплектующая = ВТ_КрышкиКоэффициенты.Комплектующая
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	Б.Номенклатура,
	                             |	Б.Номенклатура.Родитель КАК Родитель,
	                             |	Б.Номенклатура.Код КАК Код,
	                             |	Б.Типоразмер.Ширина КАК Ширина,
	                             |	Б.Типоразмер.Высота КАК Высота,
	                             |	Б.Типоразмер.Диаметр КАК Диаметр,
	                             |	Б.Типоразмер.КоличествоОтверстий КАК КоличествоОтверстий,
	                             |	Б.Типоразмер.PCD КАК PCD,
	                             |	Б.Типоразмер.Вылет КАК Вылет,
	                             |	Б.Типоразмер.ДиаметрСтупицы КАК ДиаметрСтупицы,
	                             |	Б.Номенклатура.Модель КАК Модель,
	                             |	Б.Номенклатура.Артикул КАК Артикул,
	                             |	Б.Номенклатура.Производитель КАК Производитель,
	                             |	Б.ОстатокДляКлиента,
	                             |	Б.КоличествоВПути,
	                             |	Б.КоличествоПриход2Недели,
	                             |	Б.КоличествоПриход2Месяца,
	                             |	Б.КоличествоВПроизводстве,
	                             |	Б.СвободныйОстатокДляКлиента,
	                             |	Б.КОличествоВРезерве,
	                             |	Б.Цвет КАК Цвет,
	                             |	Б.ЦенаБазовая КАК ЦенаБазовая
	                             |ИЗ
	                             |	(ВЫБРАТЬ
	                             |		А.Номенклатура КАК Номенклатура,
	                             |		А.Номенклатура.Родитель КАК Родитель,
	                             |		А.Номенклатура.Код КАК Код,
	                             |		А.Номенклатура.Типоразмер КАК Типоразмер,
	                             |		А.Номенклатура.Производитель КАК Производитель,
	                             |		А.Остаток КАК Остаток,
	                             |		А.КоличествоВПути КАК КоличествоВПути,
	                             |		А.КоличествоПриход2Недели КАК КоличествоПриход2Недели,
	                             |		А.КоличествоПриход2Месяца КАК КоличествоПриход2Месяца,
	                             |		ВЫБОР
	                             |			КОГДА А.Остаток > 50
	                             |					И &РежимФормирования
	                             |				ТОГДА 51
	                             |			ИНАЧЕ А.Остаток
	                             |		КОНЕЦ КАК ОстатокДляКлиента,
	                             |		ВЫБОР
	                             |			КОГДА ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать ЕСТЬ NULL 
	                             |				ТОГДА ВЫБОР
	                             |						КОГДА А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
	                             |								И &РежимФормирования
	                             |							ТОГДА 51
	                             |						ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
	                             |					КОНЕЦ
	                             |			ИНАЧЕ ВЫБОР
	                             |					КОГДА ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать > 50
	                             |							И &РежимФормирования
	                             |						ТОГДА 51
	                             |					ИНАЧЕ ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать
	                             |				КОНЕЦ
	                             |		КОНЕЦ КАК СвободныйОстатокДляКлиента,
	                             |		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
	                             |		ЕСТЬNULL(ЦеныБазовая.Цена, 0) КАК ЦенаБазовая,
	                             |		ЗначенияСвойствобъектов.Цвет КАК Цвет,
	                             |		А.КоличествоВПроизводстве КАК КоличествоВПроизводстве
	                             |	ИЗ
	                             |		(ВЫБРАТЬ
	                             |			А.Номенклатура КАК Номенклатура,
	                             |			СУММА(А.Остаток) КАК Остаток,
	                             |			СУММА(А.КоличествоВПути) КАК КоличествоВПути,
	                             |			СУММА(А.КоличествоПриход2Недели) КАК КоличествоПриход2Недели,
	                             |			СУММА(А.КоличествоПриход2Месяца) КАК КоличествоПриход2Месяца,
	                             |			СУММА(А.КоличествоВПроизводстве) КАК КоличествоВПроизводстве
	                             |		ИЗ
	                             |			(ВЫБРАТЬ
	                             |				ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	                             |				ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
	                             |				0 КАК КоличествоВПути,
	                             |				0 КАК КоличествоПриход2Недели,
	                             |				0 КАК КоличествоПриход2Месяца,
	                             |				0 КАК КоличествоВПроизводстве
	                             |			ИЗ
	                             |				РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.*} Номенклатура В ИЕРАРХИИ (&Диски)
	                             |							И (НЕ Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски))
	                             |							И (НЕ Склад.ЗапретитьИспользование)
	                             |							И (НЕ Склад.Транзитный) {Номенклатура.*}) КАК ТоварыНаСкладахОстатки
	                             |
								 |			ОБЪЕДИНИТЬ ВСЕ
	                             |			
	                             |			ВЫБРАТЬ
	                             |				А.Номенклатура,
	                             |				0,
	                             |				СУММА(А.КоличествоОстаток),
	                             |				СУММА(А.КоличествоПриход2Недели),
	                             |				СУММА(А.КоличествоПриход2Месяца),
	                             |				0
	                             |			ИЗ
	                             |				(ВЫБРАТЬ
	                          	 |						ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступленияВПорт,
	                             |					ВЫБОР
	                             |						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
	                             |							ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
	                             |						ИНАЧЕ 0
	                             |					КОНЕЦ КАК КоличествоПриход2Недели,
	                             |					ВЫБОР
	                             |						КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14 - 5)
	                            // |						И ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 61 - 5)
	                             |					ТОГДА ЗаказыПоставщикамОстатки.КоличествоОстаток
	                             |						ИНАЧЕ 0
	                             |					КОНЕЦ КАК КоличествоПриход2Месяца,
	                             |					ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	                             |					ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	                             |					ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	                             |				ИЗ
	                             |					РегистрНакопления.ЗаказыПоставщикам.Остатки(, {Номенклатура.*} Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	                             |								И (НЕ ЗаказПоставщику.Транзит)) КАК ЗаказыПоставщикамОстатки
								 
								 ////+++ 16.12.2013 	
								 ////Замена: ЗначенияСвойствОбъектов.ДатаПоступленияВПорт  >>>  ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления
								 //
								 //|						ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
								 //|							ЗначенияСвойствОбъектов.Объект КАК ЗаказПоставщику,
								 //|							ЗначенияСвойствОбъектов.Значение КАК ДатаПоступленияВПорт
								 //|						ИЗ
								 //|							РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
								 //|						ГДЕ
								 //|							ЗначенияСвойствОбъектов.Свойство = &СвойствоДатаПоступленияВПорт) КАК ЗначенияСвойствОбъектов
								 //|						ПО ЗаказыПоставщикамОстатки.ЗаказПоставщику = ЗначенияСвойствОбъектов.ЗаказПоставщику
								 //|				ГДЕ
								 //|					(НЕ ЗначенияСвойствОбъектов.ДатаПоступленияВПорт ЕСТЬ NULL )
								 
								 |) КАК А
	                             |			
	                             |			СГРУППИРОВАТЬ ПО
	                             |				А.Номенклатура
	                             |			
								 //==========================Товары в производстве только для менеджеров!============================
	                             |//ТоварыВПроизводстве
								 
								 //+++ 16.12.2013=================ОТХ увеличивает остаток Дисков на складах===========================
								 |			ОБЪЕДИНИТЬ ВСЕ 
								 |			Выбрать 
								 |			ОстаткиОТХ.Номенклатура,
								 |			Сумма(ОстаткиОТХ.КоличествоОстаток),
								 |			Сумма(0),
								 |			Сумма(0),
								 |			Сумма(0),
								 |			Сумма(0)
								 |			из (выбрать отх.Номенклатура, отх.КоличествоОстаток 
								 |				из РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( ,{Номенклатура.*} (НЕ Склад.Транзитный) И (НЕ Склад.ЗапретитьИспользование)
								 |											И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
								 |											И Контрагент В(&СписокПоставщиковОТХ) ) как отх
								 |				где отх.КоличествоОстаток>0
								 |				)как ОстаткиОТХ
								 |			СГРУППИРОВАТЬ ПО
								 |			ОстаткиОТХ.Номенклатура
	                             
								 |) КАК А
	                             |		
	                             |		СГРУППИРОВАТЬ ПО
	                             |			А.Номенклатура) КАК А
	                             |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(, {Номенклатура.*}
	                             |					(НЕ ЗаказПокупателя.Транзит) И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателейОстатки
	                             |			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	                             |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СвободныеОстаткиПоСборнымДискам КАК ВТ_СвободныеОстаткиПоСборнымДискам
	                             |			ПО А.Номенклатура = ВТ_СвободныеОстаткиПоСборнымДискам.Номенклатура
	                             |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                             |				ЗначенияСвойствобъектов.Объект КАК Объект,
	                             |				ЗначенияСвойствобъектов.Значение КАК Цвет
	                             |			ИЗ
	                             |				РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствобъектов
	                             |			ГДЕ
	                             |				ЗначенияСвойствобъектов.Свойство = &СвойствоЦвет) КАК ЗначенияСвойствобъектов
	                             |			ПО А.Номенклатура = ЗначенияСвойствобъектов.Объект
	                             |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, {Номенклатура.*} ТипЦен = &ТипЦенБазовая) КАК ЦеныБазовая
	                             |			ПО А.Номенклатура = ЦеныБазовая.Номенклатура) КАК Б
	                             |ГДЕ
	                             |	(НЕ Б.Номенклатура В ИЕРАРХИИ (&Крышки))
	                             |	И (Б.ОстатокДляКлиента > 0
	                             |			ИЛИ Б.КоличествоВПути > 0)
	                             |
	                             |УПОРЯДОЧИТЬ ПО
	                             |	Родитель,
	                             |	Б.Номенклатура.Производитель.Наименование,
	                             |	Б.Номенклатура.Модель.Наименование,
	                             |	Б.Номенклатура.Типоразмер.Наименование,
	                             |	Б.Номенклатура.Наименование";	
	КонецЕсли;
								 
		Если ВидОтчета=1 тогда //только для менеджеров!
			ПостроительОтчетаОтчет.Текст = стрЗаменить(ПостроительОтчетаОтчет.Текст,"//ТоварыВПроизводстве",
								 "ОБЪЕДИНИТЬ ВСЕ
	                             |			
	                             |			ВЫБРАТЬ
	                             |				ВложенныйЗапрос.Номенклатура,
	                             |				СУММА(0),
	                             |				СУММА(0),
	                             |				СУММА(0),
	                             |				СУММА(0),
	                             |				СУММА(ВложенныйЗапрос.КоличествоОстаток)
	                             |			ИЗ
	                             |				(ВЫБРАТЬ
	                             |					ЗаказыПоставщикуСезонныеОстатки.Номенклатура КАК Номенклатура,
	                             |					ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток КАК КоличествоОстаток
	                             |				ИЗ
	                             |					РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(,{Номенклатура.*} (НЕ ЗаказПоставщикуСезонный.Транзит)
								 //+++ 14.03.2014
								 |								И (ЗаказПоставщикуСезонный.ДатаДействияПо>=&ТекущаяДата)
	                             |								И Номенклатура В ИЕРАРХИИ (&Диски) И (НЕ Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски))) КАК ЗаказыПоставщикуСезонныеОстатки
	                             |				ГДЕ ЗаказыПоставщикуСезонныеОстатки.КоличествоОстаток > 0) КАК ВложенныйЗапрос
	                             |			
	                             |			СГРУППИРОВАТЬ ПО
	                             |				ВложенныйЗапрос.Номенклатура
								 |");
		КонецЕсли;	
							 
	ПостроительОтчетаОтчет.Параметры.Вставить("Диски", Диски);
	ПостроительОтчетаОтчет.Параметры.Вставить("Шины", Шины);
	ПостроительОтчетаОтчет.Параметры.Вставить("Крышки", Крышки);
	ПостроительОтчетаОтчет.Параметры.Вставить("ВидДиски", Перечисления.ВидыТоваров.Диски);                                                                        
	ПостроительОтчетаОтчет.Параметры.Вставить("РежимФормирования", ?(ВидОтчета=0,Истина,Ложь ));
	ПостроительОтчетаОтчет.Параметры.Вставить("ГрузовыеДиски", Справочники.Номенклатура.НайтиПоКоду("9004163")); // грузовыедиски
	
	//+++ 16.12.2013 //ДатаПоступления прямо из документа!
	//ПостроительОтчетаОтчет.Параметры.Вставить("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
	
	//ПостроительОтчетаОтчет.Параметры.Вставить("ПоставщикОТХ"
	СписокПоставщиковОТХ = новый СписокЗначений;
	СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("91640") );//Автошина (Никитин И.)	
//+++ 18.03.2014 	СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("00405") ); //+++ 24.12.2013  Формула ООО
	ПостроительОтчетаОтчет.Параметры.Вставить("СписокПоставщиковОТХ", СписокПоставщиковОТХ); //+++ 24.12.2013  аналогично как в шинах!
	
	ПостроительОтчетаОтчет.Параметры.Вставить("ТекущаяДата", ТекущаяДата());
	ПостроительОтчетаОтчет.Параметры.Вставить("СвойствоЦвет", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166"));	
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
	
	tt=текущаяДата();
	состояние("Идет формирование запроса по выбранным условиям...");	
	
	Результат = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить();
	
	ttt = текущаяДата() - tt;
	состояние("Данные получены. Время выполнения запроса "+строка(ttt)+" сек.");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование=Организация.НаименованиеПолное;
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ТекущаяДата=Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	//ОбластьСтрокаСкладов.Параметры.СтрокаСкладов=СтрокаСкладов;
	//ОбластьСтрокаСкладов.Параметры.СтрокаНоменклатуры=СтрокаНоменклатуры;
	
	//+++ 24.06.2014 - пока только диски с ценами Клиента!
	ОбластьЗаголовок.Параметры.ИнфоКлиента = ?(Контрагент.пустая(), "", "Цена указана для покупателя: "+Контрагент.НаименованиеПолное );
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	i=0; N=ВыборкаДетали.Количество(); проц = макс( 10, мин(1000, окр(N/100,0) ) );
	
	
	
	
	
	//+++(24.06.2014   ЦенаБазовая >> Цена Клиента
	Если не Контрагент.Пустая() тогда
		состояние("Идет получение списка товаров...");
		табЗнач = Результат.Выгрузить();
		//07.10.14 Смирнов нужен список значений
		списНом1 = табЗнач.ВыгрузитьКолонку("Номенклатура");
		списНом=новый списокЗначений;
		списНом.ЗагрузитьЗначения(списНом1);

		дата1   = ТекущаяДата();
		состояние("Идет получение цен Покупателя для "+строка(списНом.Количество())+" товаров...");
		
		//сначала по политике
		табЦенКлиента = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(Контрагент, списНом, дата1);
		Если ТипЗнч(табЦенКлиента)=тип("Строка") тогда
			табЦенКлиента = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, списНом);
		КонецЕсли;
	
 	КонецЕсли;	
	//+++)
	
	
	
	
//===================================================================================	
	Пока ВыборкаДетали.Следующий() Цикл
		//Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
		//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");	
		//ИначеЕсли 	ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
		//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		//Иначе Продолжить;
		//КонецЕсли;
		i=i+1;
		Если i%проц=0 тогда
			состояние("Сформировано "+строка(i)+" из "+строка(N)+" строк ( "+формат(i*100/N,"ЧДЦ=0")+" %)...");
			ОбработкаПрерыванияПользователя();
		КонецЕсли;
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		
		//+++( 24.06.2014
		Если не Контрагент.Пустая() тогда
			стр1 = табЦенКлиента.найти( ВыборкаДетали.Номенклатура, "Номенклатура" );
			Если стр1=неопределено тогда
			ОбластьДетальныхЗаписей.Параметры.ЦенаБазовая = 0;
			Иначе
			ОбластьДетальныхЗаписей.Параметры.ЦенаБазовая = стр1.МинимальнаяЦена;
			КонецЕсли;
		КонецЕсли;
		//+++)
		
		ОбластьДетальныхЗаписей.Параметры.Артикул=?(ЗначениеЗаполнено(ВыборкаДетали.Артикул),ВыборкаДетали.Артикул,ВыборкаДетали.Код);
		//ОбластьДетальныхЗаписей.Параметры.НомерСтроки = i;
		
		Если ВидОтчета =0 Тогда // для клиентов
			Если ВыборкаДетали.ОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.ОстатокДляКлиента = ">50" ;
			КонецЕсли;	
			
			Если ВыборкаДетали.СвободныйОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = ">50";
			ИначеЕсли ВыборкаДетали.СвободныйОстатокДляКлиента<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = "";
			КонецЕсли;	
			
			Если ВыборкаДетали.КоличествоПриход2Недели>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоПриход2Недели = ">50";
			ИначеЕсли ВыборкаДетали.КоличествоПриход2Недели<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоПриход2Недели = "";
			КонецЕсли;
			
			Если ВыборкаДетали.КоличествоПриход2Месяца>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоПриход2Месяца = ">50";
			ИначеЕсли ВыборкаДетали.КоличествоПриход2Месяца<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоПриход2Месяца = "";
			КонецЕсли;
			
		КонецЕсли;	
		
		Если ВыборкаДетали.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
			//Смирнов 24.03.14
			//ОбластьДетальныхЗаписей.Параметры.ПутьКФОто = "http://yarshintorg.ru/upload/photos/model/"+ВыборкаДетали.Номенклатура.Модель.Код+".jpg";
			
			ФайлКартинки=Врег(""+СокрЛП(ВыборкаДетали.Модель)+"_"+СокрЛП(ВыборкаДетали.Цвет))+".jpg";
			ФайлЗаглушки=ВРЕГ(""+СокрЛП(ВыборкаДетали.Модель))+"_ZZZ.jpg";
			
			Если СписокФайловФТП.НайтиПоЗначению(ФайлКартинки)<>Неопределено тогда
     			ОбластьДетальныхЗаписей.Параметры.ПутьКФОто = "http://yarshintorg.ru/upload/photos/main_disk_photo/"+ФайлКартинки;
			ИначеЕсли СписокФайловФТП.НайтиПоЗначению(ФайлЗаглушки)<>Неопределено тогда
				ОбластьДетальныхЗаписей.Параметры.ПутьКФОто = "http://yarshintorg.ru/upload/photos/main_disk_photo/"+ФайлЗаглушки;
			Иначе
				Если ЗначениеЗаполнено(ВыборкаДетали.Номенклатура.Модель) тогда
				ОбластьДетальныхЗаписей.Параметры.ПутьКФОто = "http://yarshintorg.ru/upload/photos/model/"+ВыборкаДетали.Номенклатура.Модель.Код+".jpg";
				иначе
				ОбластьДетальныхЗаписей.Параметры.ПутьКФОто = "http://yarshintorg.ru/upload/photos/nopic_tyre_s.jpg";
				КонецЕсли;
			КонецЕсли;
			//Смирнов
			
			НоменклатураНаименование=СокрЛП(ВыборкаДетали.Номенклатура.Наименование); 
			масНом=МассивИзСтроки (НоменклатураНаименование," ");
			Если масНом.Количество()>0 Тогда
				СловоЦвет=масНом[масНом.Количество()-1]; // берем последнее слово
				ОбластьДетальныхЗаписей.Параметры.Цвет =СловоЦвет;
			КонецЕсли;
		КонецЕсли;
		
		//	ОбластьДетальныхЗаписей.Параметры.Производитель=ВыборкаДетали.Производитель;
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
	состояние("Группировка строк...");
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.Область("C14").Видимость=ОтображатьКодПроизводителя;
	
	Если ВидОтчета=0 тогда //для клиентов
		//ТабДок. Область("C19").Видимость=ложь;
		Область = ТабДок.Область("C19");
		ТабДок.УдалитьОбласть(Область, ТипСмещенияТабличногоДокумента.ПоВертикали);
	КонецЕсли;
	состояние(" ");
КонецПроцедуры

Процедура ДействияФормыСохранитьНаСайте(Кнопка)
	ТабДокумент=ЭлементыФормы.ПолеТабличногоДокумента;
	Если СтрокаВид="Диски" Тогда
		ИмяФайлаСообщения ="diski.xls";
	ИначеЕсли СтрокаВид="Шины" Тогда
//+++ не надо еще раз формировать!
//	ТабДокумент=СформироватьПрайсЛистШиныДляВыгрузкиНаСайт();
		ИмяФайлаСообщения ="tyres.xls";
	ИначеЕсли СтрокаВид="АКБ"  Тогда
		ИмяФайлаСообщения ="akb.xls";
	Иначе
		ИмяФайлаСообщения ="accessores.xls";
	КонецЕсли;
	путь = КаталогВременныхФайлов(); //"c:\"; //+++06.06.2013
	ТабДокумент.Записать(путь+ИмяФайлаСообщения,ТипФайлаТабличногоДокумента.XLS);
	//+++ 28.02.2013 измененио
	//старое	врФТП = Новый FTPСоединение("83.102.251.100",,"yst76", "yst76admin",, Истина );
	врФТП = Новый FTPСоединение("yst.ru",,"dc140403_yst", "scdi7kRU",, Истина );
	
	Если врФТП = Неопределено Тогда
		Сообщить( "Во время обмена данными произошла ошибка при подключении	к FTP. " + ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецЕсли;
	
	//  врФТП.Записать("c:\"+ИмяФайлаСообщения , "data/"+ИмяФайлаСообщения);
	врФТП.Записать(путь+ИмяФайлаСообщения , "public_html/data/"+ИмяФайлаСообщения);
	
	//  Сообщить(строка(ТекущаяДата())+" - Файл: "+ИмяФайлаСообщения+" - успешно выгружен на сайт ftp://yst76.ru/data/"+ИмяФайлаСообщения, СтатусСообщения.Информация)
	Сообщить(строка(ТекущаяДата())+" - Файл: "+ИмяФайлаСообщения+" - успешно выгружен на сайт ftp://yst.ru/public_html/data/"+ИмяФайлаСообщения, СтатусСообщения.Информация);
	
	Сообщить("
	|Прямая cсылка для скачивания:   http://www.yst.ru/data/"+ИмяФайлаСообщения+"
	|", СтатусСообщения.Информация);
	
	
КонецПроцедуры

Процедура ДействияФормыУстановитьЦены(Кнопка)
	
	Если ЭлементыФормы.ПолеТабличногоДокумента.ВыделенныеОбласти.Количество()=0 Тогда
		Предупреждение("Выделите фрагмент с номенклатурой");
		Возврат;
	КонецЕсли;	
	
	ДокУЦН=Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	ДокУЦН.Дата=ТекущаяДата();
	
	ТипЦенЯкорная=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Якорная");
	ТипЦенКрупныйОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Крупный опт");
	ТипЦенСреднийОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Средний опт");
	ТипЦенМелкийОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Мелкий опт");
	
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенЯкорная;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенКрупныйОпт;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенСреднийОпт;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенМелкийОпт;
	
	
	Для каждого ВыделеннаяОбласть ИЗ ЭлементыФормы.ПолеТабличногоДокумента.ВыделенныеОбласти Цикл
		ИмяОбласти=ВыделеннаяОбласть.Имя;		
		
		индДвоеточия=Найти(ИмяОбласти,":");
		
		Если индДвоеточия>0 Тогда // несколько ячеек
			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			НачальныйНомер=Число(Сред(ИмяОбласти,индR1+1,индC1-индR1-1));
			ОстСтрока=Сред(ИмяОбласти,индДвоеточия);
			
			индR2=Найти(ОстСтрока,"R");
			индC2=Найти(ОстСтрока,"C");
			КонечныйНомер=Число(Сред(ОстСтрока,индR2+1,индC2-индR2-1));
			Для сч=НачальныйНомер по КонечныйНомер Цикл
				мКодНоменклатуры=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C6").Текст;
				СсылкаНоменклатура=Справочники.Номенклатура.НайтиПоКоду(мКодНоменклатуры);
				Если ЗначениеЗаполнено(СсылкаНоменклатура) Тогда
					строкаТовары=ДокУЦН.Товары.Добавить();
					строкаТовары.Номенклатура=СсылкаНоменклатура;
					строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенЯкорная);
					строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					строкаТовары.ТипЦен=ТипЦенЯкорная;
					
					строкаТовары=ДокУЦН.Товары.Добавить();
					строкаТовары.Номенклатура=СсылкаНоменклатура;
					строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенКрупныйОпт);
					строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					строкаТовары.ТипЦен=ТипЦенКрупныйОпт;
					
					строкаТовары=ДокУЦН.Товары.Добавить();
					строкаТовары.Номенклатура=СсылкаНоменклатура;
					строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенСреднийОпт);
					строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					строкаТовары.ТипЦен=ТипЦенСреднийОпт;
					
					строкаТовары=ДокУЦН.Товары.Добавить();
					строкаТовары.Номенклатура=СсылкаНоменклатура;
					строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенМелкийОпт);
					строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					строкаТовары.ТипЦен=ТипЦенМелкийОпт;
					
					
				КонецЕсли;
				//Если не ЗначениеНеЗаполнено(мСсылкаНаДокумент) Тогда 
				//	ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C1:R"+Строка(сч)+"C4").ЦветФона=WebЦвета.Лосось;
				//	Если мСписокДокументовДляРегистрации.НайтиПоЗначению(мСсылкаНаДокумент)=Неопределено Тогда
				//		мСписокДокументовДляРегистрации.Добавить(мСсылкаНаДокумент);
				//		//Сообщить(мСсылкаНаДокумент);
				//	КонецЕсли;	
				//КонецЕсли;
			КонецЦикла;	
			
		Иначе // одна ячейка
			
			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			сч=Сред(ИмяОбласти,индR1+1,индC1-индR1-1);
			
			мКодНоменклатуры=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+сч+"C6").Текст;
			СсылкаНоменклатура=Справочники.Номенклатура.НайтиПоКоду(мКодНоменклатуры);
			Если ЗначениеЗаполнено(СсылкаНоменклатура) Тогда
				строкаТовары=ДокУЦН.Товары.Добавить();
				строкаТовары.Номенклатура=СсылкаНоменклатура;
				строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенЯкорная);
				строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
				строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
				строкаТовары.ТипЦен=ТипЦенЯкорная;
				
				строкаТовары=ДокУЦН.Товары.Добавить();
				строкаТовары.Номенклатура=СсылкаНоменклатура;
				строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенКрупныйОпт);
				строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
				строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
				строкаТовары.ТипЦен=ТипЦенКрупныйОпт;
				
				строкаТовары=ДокУЦН.Товары.Добавить();
				строкаТовары.Номенклатура=СсылкаНоменклатура;
				строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенСреднийОпт);
				строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
				строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
				строкаТовары.ТипЦен=ТипЦенСреднийОпт;
				
				строкаТовары=ДокУЦН.Товары.Добавить();
				строкаТовары.Номенклатура=СсылкаНоменклатура;
				строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенМелкийОпт);
				строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
				строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
				строкаТовары.ТипЦен=ТипЦенМелкийОпт;
				
			КонецЕсли;
			//Если не ЗначениеНеЗаполнено(мСсылкаНаДокумент) Тогда 
			//	ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C1:R"+Строка(сч)+"C4").ЦветФона=WebЦвета.Лосось;
			//		Если мСписокДокументовДляРегистрации.НайтиПоЗначению(мСсылкаНаДокумент)=Неопределено Тогда
			//			мСписокДокументовДляРегистрации.Добавить(мСсылкаНаДокумент);
			//			//Сообщить(мСсылкаНаДокумент);
			//		КонецЕсли;	
			//КонецЕсли;
			
			
		КонецЕсли;	
		
		
		
	КонецЦикла;	
	
	ДокУЦН.ПолучитьФорму().Открыть();
	
	
КонецПроцедуры


Функция ПолучитьЦену(Номенклатура,ТипЦен)
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			,
	|			Номенклатура = &Номенклатура
	|				И ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("ТипЦен",ТипЦен);				 
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Выборка=Запрос.Выполнить().Выбрать();
	Если   Выборка.Следующий() Тогда
		Возврат Выборка.Цена;
	КонецЕсли;	
	Возврат 0;
КонецФункции // ПерезаполнитьСтроку()

Процедура ПриОткрытии()
	//ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=Ложь;
	СтрокаВид="Шины";
	
	//+++ 20.09.2013 - ограничение для Филиалов	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") тогда
	//	ЭлементыФормы.ДействияФормы.Кнопки.УстановитьЦены.Доступность = ЛОЖЬ;
		ЭлементыФормы.КоманднаяПанельОтбор.Доступность = ложь;
		ЭлементыФормы.КоманднаяПанельОтбор.Видимость = ложь;
		ЭлементыФормы.Отбор.Доступность = ложь;
		ЭлементыФормы.Отбор.Видимость = ложь;
	КонецЕсли;
	
	//+++ только если разрешена установка цен!
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьЦенообразование") тогда
	//	ЭлементыФормы.ДействияФормы.Кнопки.УстановитьЦены.Доступность = Истина;
	КонецЕсли;
	
	Если РольДоступна("Партнер") Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.СформироватьТолькоАКБ1.Доступность = Ложь;	
		ЭлементыФормы.ДействияФормы.Кнопки.СформироватьТолькоШины.Доступность = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.СформироватьТолькоАксессуары.Доступность = Ложь;
		Переключатель1=0;
		ЭлементыФормы.Переключатель1.Доступность=Ложь;
		ЭлементыФормы.Переключатель2.Доступность=Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыСформироватьТолькоШины(Кнопка)
	
	
	началоВр =ТекущаяДата();
	СтрокаВид="Шины";	
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
//	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
	//АКБ=Справочники.Номенклатура.НайтиПоКоду("0080021");
	Диски=Справочники.Номенклатура.НайтиПоКоду("0001752");
	Камеры=Справочники.Номенклатура.НайтиПоКоду("0001127");
	Кольца=Справочники.Номенклатура.НайтиПоКоду("4104444");
	ОбодныеЛенты=Справочники.Номенклатура.НайтиПоКоду("0060110");
	Шины=Справочники.Номенклатура.НайтиПоКоду("0001746");
	Шипы=Справочники.Номенклатура.НайтиПоКоду("0060001");
	Крышки=Справочники.Номенклатура.НайтиПоКоду("0080004");
	
	Макет = ПолучитьМакет("ОтчетШины");
	Запрос = Новый Запрос;
	
	ПостроительОтчетаОтчет.Текст= "	
	|	ВЫБРАТЬ    А.Номенклатура Номенклатура, А.Номенклатура.Наименование НоменклатураНаименование, А.Остаток Остаток 
	| ПОМЕСТИТЬ ВТ_Остатки
	| ИЗ
	| (
	| ВЫБРАТЬ Номенклатура, СУММА(КоличествоОстаток) Остаток  ИЗ
	|(ВЫБРАТЬ Номенклатура, КоличествоОстаток ИЗ
	|РегистрНакопления.ТоварыНаСкладах.Остатки ( , {Номенклатура.*} ( Номенклатура В ИЕРАРХИИ (&Шины) ИЛИ Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски) )
	| И  НЕ Склад.ЗапретитьИспользование И НЕ Склад.Транзитный) ТоварыНаСкладахОстатки
	| ОБЪЕДИНИТЬ  ВСЕ
	|	ВЫБРАТЬ
	|		ТоварыНаОтветственномХранении.Номенклатура КАК Номенклатура,
	|		ТоварыНаОтветственномХранении.КоличествоОстаток КАК Остаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( , {Номенклатура.*} 
	//|(Контрагент=&БелШина ИЛИ Контрагент=&АвтоШина ИЛИ Контрагент=&ВолгаТрейд ИЛИ Контрагент=&ТДКама ИЛИ Контрагент=&Дальнобой ИЛИ Контрагент=&Кордиант) 
	
//+++ 15.01.2014 для Формулы - только зимние шины
//было: |( Контрагент В (&СписокПоставщиковОТХ) )
| ( Контрагент В (&СписокПоставщиковОТХ) 
//+++ 18.03.2014 |	или ( Контрагент.Код=""00405"" и Номенклатура.Модель.Сезон=Значение(Перечисление.ТипыСезонности.зима) )
|	)
	//+++ 10.09.2013
	|И (НЕ Склад.Транзитный) и (НЕ Склад.ЗапретитьИспользование)
	|И ( Номенклатура В ИЕРАРХИИ (&Шины) ИЛИ Номенклатура В ИЕРАРХИИ (&ГрузовыеДиски))  ) КАК ТоварыНаОтветственномХранении 
	| ОБЪЕДИНИТЬ ВСЕ 
	| ВЫБРАТЬ ТоварыНаСкладахПартнеров.Номенклатура,
	|		  ТоварыНаСкладахПартнеров.Остаток ИЗ
	|  (ВЫБРАТЬ Номенклатура, СУММА(Остаток) Остаток ИЗ РегистрСведений.ОстаткиНоменклатурыКонтрагентов 
	//12.08.14 Смирнов
	| ГДЕ Номенклатура В ИЕРАРХИИ(&Шины)
	//12.08.14 Смирнов
	|   {ГДЕ Номенклатура.*}
	|	СГРУППИРОВАТЬ ПО Номенклатура ИМЕЮЩИЕ Сумма(Остаток)>0)  ТоварыНаСкладахПартнеров
	| )ВсеОстатки   
	|	СГРУППИРОВАТЬ ПО Номенклатура 
	|) А // Все остатки сгруппированные
	|ГДЕ Остаток>0
	|ИНДЕКСИРОВАТЬ ПО Номенклатура
	|;
	
	
	|ВЫБРАТЬ Номенклатура, максимум(ЦенаКрупныйОпт) ЦенаКрупныйОпт 
	|, максимум(ЦенаСреднийОпт) ЦенаСреднийОпт, максимум(ЦенаМелкийОпт) ЦенаМелкийОпт, 
	|	максимум(ЦенаБазовая) ЦенаБазовая
	|ПОМЕСТИТЬ ВТ_Цены
	|ИЗ
	|(
	|ВЫБРАТЬ Номенклатура, 
	|ВЫБОР КОГДА ТипЦен=&ТипЦенКрупныйОпт ТОГДА
	|ЕстьNULL(Цена,0) 
	|ИНАЧЕ 0
	|КОНЕЦ ЦенаКрупныйОпт,
	
	|ВЫБОР КОГДА ТипЦен=&ТипЦенСреднийОпт ТОГДА
	|ЕстьNULL(Цена,0) 
	|ИНАЧЕ 0
	|КОНЕЦ ЦенаСреднийОпт,
	
	//04.12.2013 ТипЦен = &Базовая
	|ВЫБОР КОГДА ТипЦен=&ТипЦенБазовая ТОГДА
	|ЕстьNULL(Цена,0) 
	|ИНАЧЕ 0
	|КОНЕЦ ЦенаБазовая,

	|ВЫБОР КОГДА ТипЦен=&ТипЦенМелкийОпт ТОГДА
	|ЕстьNULL(Цена,0) 
	|ИНАЧЕ 0
	|КОНЕЦ ЦенаМелкийОпт
	
	|ИЗ
	|РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, {Номенклатура.*} 
	|  Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ВТ_Остатки)
	//04.12.2013 ТипЦен = &Базовая
	|	И (ТипЦен = &ТипЦенМелкийОпт или ТипЦен = &ТипЦенБазовая
	|   ИЛИ ТипЦен= &ТипЦенСреднийОпт ИЛИ ТипЦен= &ТипЦенКрупныйОпт ))
	|   ) А 
	|СГРУППИРОВАТЬ ПО Номенклатура   
	|;
	
	|ВЫБРАТЬ ВТ_Остатки.Номенклатура Номенклатура, ВТ_Остатки.Номенклатура.Код Код, ВТ_Остатки.Номенклатура.Артикул Артикул,
	| ВТ_Остатки.Номенклатура.Родитель Родитель,  ВТ_Остатки.Номенклатура.ТипоРазмер Размер, ВТ_Остатки.Номенклатура.Производитель Производитель, 
	| ВЫБОР КОГДА ВТ_Остатки.Остаток> 50 И   &РежимФормирования ТОГДА
	| 51
	| ИНАЧЕ
	| ВТ_Остатки.Остаток 
	| КОНЕЦ ОстатокДляКлиента,
	|ЗаказыПокупателейОстатки.КоличествоОстаток КоличествоВРезерве,
	|ВЫБОР
	|		КОГДА Остаток-ЕстьNULL(ЗаказыПокупателейОстатки.КоличествоОстаток,0) > 50 И &РежимФормирования ТОГДА
	|		51
	|		ИНАЧЕ 
	|		Остаток-ЕстьNULL(ЗаказыПокупателейОстатки.КоличествоОстаток,0)
	|		КОНЕЦ КАК СвободныйОстатокДляКлиента,
	|		ВТ_Цены.ЦенаКрупныйОпт,
	|		ВТ_Цены.ЦенаСреднийОпт,
	|		ВТ_Цены.ЦенаМелкийОпт,
	//04.12.2013 ТипЦен = &Базовая
	|		ВТ_Цены.ЦенаБазовая
	|ИЗ   
	|( ВЫБРАТЬ Номенклатура, НоменклатураНаименование, Остаток ИЗ ВТ_Остатки
	| )  ВТ_Остатки
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|РегистрНакопления.ЗаказыПокупателей.Остатки(, {Номенклатура.*} Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ВТ_Остатки) 
	|И НЕ ЗаказПокупателя.Транзит И ЗаказПокупателя.Проверен) ЗаказыПокупателейОстатки				
	|ПО ВТ_Остатки.Номенклатура=ЗаказыПокупателейОстатки.Номенклатура
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены
	|ПО ВТ_Остатки.Номенклатура=ВТ_Цены.Номенклатура
	|УПОРЯДОЧИТЬ ПО  ВТ_Остатки.Номенклатура.Наименование
	| ИТОГИ СУММА(ОстатокДляКлиента), СУММА (СвободныйОстатокДляКлиента), СУММА (КоличествоВРезерве),
	|СРЕДНЕЕ (ЦенаКрупныйОпт),СРЕДНЕЕ (ЦенаСреднийОпт),СРЕДНЕЕ (ЦенаМелкийОпт),СРЕДНЕЕ (ЦенаБазовая)
	|ПО  Номенклатура ИЕРАРХИЯ";
	
		
	
	ПостроительОтчетаОтчет.Параметры.Вставить("Шины", Шины);
	ПостроительОтчетаОтчет.Параметры.Вставить("Шипы", Шипы);
	
	//+++ 10.09.2013 - условие ИЛИ заменено на список
	//ПостроительОтчетаОтчет.Параметры.Вставить("БелШина", Справочники.Контрагенты.НайтиПоКоду("91529"));
	//ПостроительОтчетаОтчет.Параметры.Вставить("Дальнобой", Справочники.Контрагенты.НайтиПоКоду("92777")); // Джи Ти
	//ПостроительОтчетаОтчет.Параметры.Вставить("АвтоШина", Справочники.Контрагенты.НайтиПоКоду("91640"));                                                                        
	//ПостроительОтчетаОтчет.Параметры.Вставить("ВолгаТрейд", Справочники.Контрагенты.НайтиПоКоду("92098"));                                                                        
	//ПостроительОтчетаОтчет.Параметры.Вставить("ТДКама", Справочники.Контрагенты.НайтиПоКоду("00334"));                                                                        
	//ПостроительОтчетаОтчет.Параметры.Вставить("Кордиант", Справочники.Контрагенты.НайтиПоКоду("00007"));
	
	СписокПоставщиковОТХ = новый СписокЗначений;
	СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("91529") ); //БелШина
	СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("92777") ); //Дальнобой
	СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("91640") ); //АвтоШина
	СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("92098") ); //ВолгаТрейд
	СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("00334") ); //ТДКама
	СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("00007") ); //Кордиант
	//+++ 15.01.2014 только шины - зима
	//СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("00405") ); //+++ 24.12.2013 Формула ООО
	
	СписокПоставщиковОТХ.Добавить( Справочники.Контрагенты.НайтиПоКоду("93556") ); //АШК - новый с 11.09.2013
	
	ПостроительОтчетаОтчет.Параметры.Вставить("СписокПоставщиковОТХ",СписокПоставщиковОТХ);
	//+++)
	
	
	//ПостроительОтчетаОтчет.Параметры.Вставить("Формула", Справочники.Контрагенты.НайтиПоКоду("00405"));                                                                        
	ПостроительОтчетаОтчет.Параметры.Вставить("ГрузовыеДиски", Справочники.Номенклатура.НайтиПоКоду("9004163"));                                                                        
	
	ПостроительОтчетаОтчет.Параметры.Вставить("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));                                                                        
	
	
	
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенСреднийОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00002"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенМелкийОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00004"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
	
	Результат = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование=Организация.НаименованиеПолное;
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ТекущаяДата=Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	//ОбластьСтрокаСкладов.Параметры.СтрокаСкладов=СтрокаСкладов;
	//ОбластьСтрокаСкладов.Параметры.СтрокаНоменклатуры=СтрокаНоменклатуры;
	
	ОбластьЗаголовок.Параметры.ИнфоКлиента =?(Контрагент.Пустая(), "", "Цены указаны для покупателя: "+Контрагент.НаименованиеПолное); //+++ 24.06.2014
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	
	//***12.08.2014     цены клиента по шинам
	Если не Контрагент.Пустая() тогда
		состояние("Идет получение списка товаров...");
		табЗнач = Результат.Выгрузить();
		//07.10.14 Смирнов нужен список значений
		списНом1 = табЗнач.ВыгрузитьКолонку("Номенклатура");
		списНом=новый списокЗначений;
		списНом.ЗагрузитьЗначения(списНом1);

		дата1   = ТекущаяДата();
		состояние("Идет получение цен Покупателя для "+строка(списНом.Количество())+" товаров...");
		
		//сначала по политике
		табЦенКлиента = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(Контрагент, списНом, дата1);
		Если ТипЗнч(табЦенКлиента)=тип("Строка") тогда
			табЦенКлиента = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, списНом);
		КонецЕсли;
	
 	КонецЕсли;	
	//***
	
	Пока ВыборкаДетали.Следующий() Цикл
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");	
		ИначеЕсли 	ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		Иначе Продолжить;
		КонецЕсли;	
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		
		//*** 12.08.2014
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда 
			Если не Контрагент.Пустая() тогда
				стр1 = табЦенКлиента.найти( ВыборкаДетали.Номенклатура, "Номенклатура" );
				Если стр1=неопределено тогда
					ОбластьДетальныхЗаписей.Параметры.ЦенаКрупныйОпт = 0;
				Иначе
					ОбластьДетальныхЗаписей.Параметры.ЦенаКрупныйОпт = стр1.МинимальнаяЦена;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//***
		
		Если ВидОтчета =0 И ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда // для клиентов
			Если ВыборкаДетали.ОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.ОстатокДляКлиента = ">50" ;
			КонецЕсли;	
			
			Если ВыборкаДетали.СвободныйОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = ">50";
			ИначеЕсли ВыборкаДетали.СвободныйОстатокДляКлиента<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = "";
			КонецЕсли;	
			
		КонецЕсли;	
		
		//	ОбластьДетальныхЗаписей.Параметры.Производитель=ВыборкаДетали.Производитель;
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
	парамЗапроса = "Шины"; 
	Если ВремяВыполнения>0 тогда
		//общий модуль:  яштПрочее.ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки(
		ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 171, ВремяВыполнения, "Кнопка [Сформировать] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
	КонецЕсли;	
	//+++)   18.05.2012
	
КонецПроцедуры

Процедура ДействияФормыСформироватьТолькоАКБ(Кнопка)
	СтрокаВид="АКБ";		
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
//	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
	АКБ=Справочники.Номенклатура.НайтиПоКоду("0080021");
	
	
	Макет = ПолучитьМакет("ОтчетАКБ");
	Запрос = Новый Запрос;
	
	
	Запрос.Текст= "ВЫБРАТЬ
	              |	Б.Номенклатура,
	              |	Б.Номенклатура.Артикул КАК Модель,
	              |	Б.Номенклатура.Код КАК Код,
	              |	Б.Номенклатура.Типоразмер КАК Типоразмер,
	              |	Б.Номенклатура.Производитель КАК Производитель,
	              |	Б.Емкость,
	              |	Б.Номенклатура.КодСБИС КАК Полярность,
	              |	Б.ПусковойТок,
	              |	Б.ОстатокДляКлиента,
	              |	Б.СвободныйОстатокДляКлиента,
	              |	Б.КОличествоВРезерве,
	              |	Б.ЦенаДилерская,
	              |	Б.ЦенаКрупныйОпт КАК ЦенаКрупныйОпт,
	              |	Б.ЦенаСпец КАК ЦенаСпец
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		А.Номенклатура КАК Номенклатура,
	              |		А.Емкость КАК Емкость,
	              |		А.ПусковойТок КАК ПусковойТок,
	              |		А.Остаток КАК Остаток,
	              |		ВЫБОР
	              |			КОГДА А.Остаток > 50
	              |					И &РежимФормирования
	              |				ТОГДА "">50""
	              |			ИНАЧЕ А.Остаток
	              |		КОНЕЦ КАК ОстатокДляКлиента,
	              |		ВЫБОР
	              |			КОГДА А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
	              |					И &РежимФормирования
	              |				ТОГДА "">50""
	              |			ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
	              |		КОНЕЦ КАК СвободныйОстатокДляКлиента,
	              |		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
	              |		ЕСТЬNULL(ЦеныКрупныйОпт.Цена, 0) КАК ЦенаКрупныйОпт,
	              |		ЕСТЬNULL(ЦеныСпец.Цена, 0) КАК ЦенаСпец,
	              |		ЕСТЬNULL(ЦеныДилерская.Цена, 0) КАК ЦенаДилерская
	              |	ИЗ
	              |		(ВЫБРАТЬ
	              |			ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	              |			ЗнСвОб1.Емкость КАК Емкость,
	              |			ЗнСвОб2.ПусковойТок КАК ПусковойТок,
	              |			ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток
	              |		ИЗ
	              |			РегистрНакопления.ТоварыНаСкладах.Остатки(
	              |					,
	              |					НЕ Склад.ЗапретитьИспользование
	              |						И НЕ Склад.Транзитный
	              |						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ТоварыНаСкладахОстатки
	              |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	              |					ЗначенияСвойствОбъектов.Объект КАК Номенклатура,
	              |					ЗначенияСвойствОбъектов.Значение КАК Емкость
	              |				ИЗ
	              |					РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	              |				ГДЕ
	              |					ЗначенияСвойствОбъектов.Свойство = &Емкость) КАК ЗнСвОб1
	              |				ПО ТоварыНаСкладахОстатки.Номенклатура = ЗнСвОб1.Номенклатура
	              |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	              |					ЗначенияСвойствОбъектов.Объект КАК Номенклатура,
	              |					ЗначенияСвойствОбъектов.Значение КАК ПусковойТок
	              |				ИЗ
	              |					РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	              |				ГДЕ
	              |					ЗначенияСвойствОбъектов.Свойство = &ПусковойТок) КАК ЗнСвОб2
	              |				ПО ТоварыНаСкладахОстатки.Номенклатура = ЗнСвОб2.Номенклатура) КАК А
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	              |					,
	              |					НЕ ЗаказПокупателя.Транзит
	              |						И ЗаказПокупателя.Проверен
	              |						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ЗаказыПокупателейОстатки
	              |			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	              |					,
	              |					ТипЦен = &ТипЦенКрупныйОпт
	              |						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ЦеныКрупныйОпт
	              |			ПО А.Номенклатура = ЦеныКрупныйОпт.Номенклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	              |					,
	              |					ТипЦен = &ТипЦенСпецЦена
	              |						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ЦеныСпец
	              |			ПО А.Номенклатура = ЦеныСпец.Номенклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	              |					,
	              |					ТипЦен = &ТипЦенДилерская
	              |						И Номенклатура В ИЕРАРХИИ (&АКБ)) КАК ЦеныДилерская
	              |			ПО А.Номенклатура = ЦеныДилерская.Номенклатура) КАК Б
	              |ГДЕ
	              |	Б.ОстатокДляКлиента > 0
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	Б.Номенклатура.Наименование
	              |АВТОУПОРЯДОЧИВАНИЕ";
	
	СкладАКБ2013 = Справочники.Склады.НайтиПоКоду("00762");		  
	
	Запрос.УстановитьПараметр("АКБ", АКБ);
	Запрос.УстановитьПараметр("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));                                                                        
	Запрос.УстановитьПараметр("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	Запрос.УстановитьПараметр("ТипЦенСпецЦена", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00013"));  
	Запрос.УстановитьПараметр("ТипЦенДилерская", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00009"));
	Запрос.УстановитьПараметр("Емкость", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00132"));
	Запрос.УстановитьПараметр("ПусковойТок", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90167"));
	
	
	
	Результат = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование=Организация.НаименованиеПолное;
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ТекущаяДата=Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.ИнфоКлиента =""; //+++
	//ОбластьСтрокаСкладов.Параметры.СтрокаСкладов=СтрокаСкладов;
	//ОбластьСтрокаСкладов.Параметры.СтрокаНоменклатуры=СтрокаНоменклатуры;
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	
	Пока ВыборкаДетали.Следующий() Цикл
		//Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
		//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");	
		//ИначеЕсли 	ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		//Иначе Продолжить;
		//КонецЕсли;	
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);	
			
		//	ОбластьДетальныхЗаписей.Параметры.Производитель=ВыборкаДетали.Производитель;
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
КонецПроцедуры

//Орлов++
Процедура ДействияФормыСформироватьТолькоАксессуары(Кнопка)
	
	СтрокаВид="Аксессуары";
	
	началоВр =ТекущаяДата();	
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
//	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
	Аксессуары = Справочники.Номенклатура.НайтиПоКоду("0000001");
	
	Макет = ПолучитьМакет("ОтчетАксессуары");
	Запрос = Новый Запрос;
		
	ПостроительОтчетаОтчет.Текст= "ВЫБРАТЬ
	                              |	А.Номенклатура КАК Номенклатура,
	                              |	А.Номенклатура.Наименование КАК НоменклатураНаименование,
	                              |	А.Остаток КАК Остаток
	                              |ПОМЕСТИТЬ ВТ_Остатки
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ВсеОстатки.Номенклатура КАК Номенклатура,
	                              |		СУММА(ВсеОстатки.КоличествоОстаток) КАК Остаток
	                              |	ИЗ
	                              |		(ВЫБРАТЬ
	                              |			ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	                              |			ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	                              |		ИЗ
	                              |			РегистрНакопления.ТоварыНаСкладах.Остатки(
	                              |					,
	                              |					Номенклатура В ИЕРАРХИИ (&Аксессуары)
	                              |						И (НЕ Склад.ЗапретитьИспользование)
	                              |						И (НЕ Склад.Транзитный) {(Номенклатура).*}) КАК ТоварыНаСкладахОстатки) КАК ВсеОстатки
	                              |	
	                              |	СГРУППИРОВАТЬ ПО
	                              |		ВсеОстатки.Номенклатура) КАК А
	                              |ГДЕ
	                              |	А.Остаток > 0
	                              |
	                              |ИНДЕКСИРОВАТЬ ПО
	                              |	Номенклатура
	                              |;
	                              |
	                              |////////////////////////////////////////////////////////////////////////////////
	                              |ВЫБРАТЬ
	                              |	А.Номенклатура,
	                              |	А.ЦенаБазовая
	                              |ПОМЕСТИТЬ ВТ_Цены
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	                              |		ВЫБОР
	                              |			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенБазовая
	                              |				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	                              |			ИНАЧЕ 0
	                              |		КОНЕЦ КАК ЦенаБазовая
	                              |	ИЗ
	                              |		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	                              |				,
	                              |				Номенклатура В
	                              |						(ВЫБРАТЬ
	                              |							ВТ_Остатки.Номенклатура
	                              |						ИЗ
	                              |							ВТ_Остатки)
	                              |					И ТипЦен = &ТипЦенБазовая {(Номенклатура).*}) КАК ЦеныНоменклатурыСрезПоследних) КАК А
	                              |
	                              |СГРУППИРОВАТЬ ПО
	                              |	А.Номенклатура,
	                              |	А.ЦенаБазовая
	                              |;
	                              |
	                              |////////////////////////////////////////////////////////////////////////////////
	                              |ВЫБРАТЬ
	                              |	А.Номенклатура,
	                              |	А.ЦенаКрупныйОпт
	                              |ПОМЕСТИТЬ ВТ_Цены_КрупныйОпт
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	                              |		ВЫБОР
	                              |			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенКрупныйОпт
	                              |				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	                              |			ИНАЧЕ 0
	                              |		КОНЕЦ КАК ЦенаКрупныйОпт
	                              |	ИЗ
	                              |		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	                              |				,
	                              |				Номенклатура В
	                              |						(ВЫБРАТЬ
	                              |							ВТ_Остатки.Номенклатура
	                              |						ИЗ
	                              |							ВТ_Остатки)
	                              |					И ТипЦен = &ТипЦенКрупныйОпт {(Номенклатура).*}) КАК ЦеныНоменклатурыСрезПоследних) КАК А
	                              |
	                              |СГРУППИРОВАТЬ ПО
	                              |	А.Номенклатура,
	                              |	А.ЦенаКрупныйОпт
	                              |;
	                              |
	                              |////////////////////////////////////////////////////////////////////////////////
	                              |ВЫБРАТЬ
	                              |	ВТ_Остатки.Номенклатура КАК Номенклатура,
	                              |	ВТ_Остатки.Номенклатура.Код КАК Код,
	                              |	ВТ_Остатки.Номенклатура.Артикул КАК Артикул,
	                              |	ВТ_Остатки.Номенклатура.Родитель КАК Родитель,
	                              |	ВЫБОР
	                              |		КОГДА ВТ_Остатки.Остаток > 50
	                              |				И &РежимФормирования
	                              |			ТОГДА 51
	                              |		ИНАЧЕ ВТ_Остатки.Остаток
	                              |	КОНЕЦ КАК ОстатокДляКлиента,
	                              |	ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоВРезерве,
	                              |	ВЫБОР
	                              |		КОГДА ВТ_Остатки.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
	                              |				И &РежимФормирования
	                              |			ТОГДА 51
	                              |		ИНАЧЕ ВТ_Остатки.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
	                              |	КОНЕЦ КАК СвободныйОстатокДляКлиента,
	                              |	ВТ_Цены.ЦенаБазовая,
	                              |	ЕСТЬNULL(ВТ_Остатки.Номенклатура.Комментарий, """") КАК Комментарий,
	                              |	ВТ_Цены_КрупныйОпт.ЦенаКрупныйОпт
	                              |ИЗ
	                              |	(ВЫБРАТЬ
	                              |		ВТ_Остатки.Номенклатура КАК Номенклатура,
	                              |		ВТ_Остатки.НоменклатураНаименование КАК НоменклатураНаименование,
	                              |		ВТ_Остатки.Остаток КАК Остаток
	                              |	ИЗ
	                              |		ВТ_Остатки КАК ВТ_Остатки) КАК ВТ_Остатки
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	                              |				,
	                              |				Номенклатура В
	                              |						(ВЫБРАТЬ
	                              |							ВТ_Остатки.Номенклатура
	                              |						ИЗ
	                              |							ВТ_Остатки)
	                              |					И (НЕ ЗаказПокупателя.Транзит)
	                              |					И ЗаказПокупателя.Проверен {(Номенклатура).*}) КАК ЗаказыПокупателейОстатки
	                              |		ПО ВТ_Остатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	                              |		ПО ВТ_Остатки.Номенклатура = ВТ_Цены.Номенклатура
	                              |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены_КрупныйОпт КАК ВТ_Цены_КрупныйОпт
	                              |		ПО ВТ_Остатки.Номенклатура = ВТ_Цены_КрупныйОпт.Номенклатура
	                              |
	                              |УПОРЯДОЧИТЬ ПО
	                              |	ВТ_Остатки.Номенклатура.Наименование
	                              |ИТОГИ
	                              |	СУММА(ОстатокДляКлиента),
	                              |	СУММА(КоличествоВРезерве),
	                              |	СУММА(СвободныйОстатокДляКлиента)
	                              |ПО
	                              |	Номенклатура ИЕРАРХИЯ";
	
		
	ПостроительОтчетаОтчет.Параметры.Вставить("Аксессуары", Аксессуары);
	ПостроительОтчетаОтчет.Параметры.Вставить("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));                                                                        
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	
	Результат = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	ОбластьЗаголовок.Параметры.ИнфоКлиента =""; //+++
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	
	ТабДок.Очистить();
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	
	путьККартинкамАксессуаров = "http://yarshintorg.ru/upload/photos/accessories/";
	
	Пока ВыборкаДетали.Следующий() Цикл
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");	
		ИначеЕсли 	ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		Иначе Продолжить;
		КонецЕсли;	
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		Если ВидОтчета =0 И ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда // для клиентов
			Если ВыборкаДетали.ОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.ОстатокДляКлиента = ">50" ;
			КонецЕсли;	
			
			Если ВыборкаДетали.СвободныйОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = ">50";
			ИначеЕсли ВыборкаДетали.СвободныйОстатокДляКлиента<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = "";
			КонецЕсли;	
			
			//+++ 28.01.2014	
			Если СокрЛП(ВыборкаДетали.Код)<>"" тогда
			//05.06.14 Смирнов	
			//ОбластьДетальныхЗаписей.Параметры.ПутьКФото = путьККартинкамАксессуаров+СокрЛП(ВыборкаДетали.Код)+"    "+".jpg";
			ОбластьДетальныхЗаписей.Параметры.ПутьКФото = путьККартинкамАксессуаров+СокрЛП(ВыборкаДетали.Код)+".jpg";
			иначе
			ОбластьДетальныхЗаписей.Параметры.ПутьКФото ="Нет фото";
		    КонецЕсли;
		ОбластьДетальныхЗаписей.Параметры.Производитель = ВыборкаДетали.Номенклатура.Производитель;
			
		КонецЕсли;	
		
	
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
		
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
	парамЗапроса = "Аксессуары"; 
	Если ВремяВыполнения>0 тогда
		ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 171, ВремяВыполнения, "Кнопка [Сформировать] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
	КонецЕсли;	
	
КонецПроцедуры
//Орлов--

Функция ОтделитьРазделителем(Стр, Знач Разделитель, Режим=0)
	
	ПраваяЧасть         = "";
	ПозРазделителя      = Найти(Стр, Разделитель);
	ДлинаРазделителя    = СтрДлина(Разделитель);
	Если ПозРазделителя > 0 Тогда
		ПраваяЧасть	 = Сред(Стр, ПозРазделителя + ?(Режим=2, 0, ДлинаРазделителя));
		Стр          = СокрЛП(Лев(Стр, ПозРазделителя - ?(Режим=1, -ДлинаРазделителя + 1, 1)));
	КонецЕсли;
	
	Возврат(ПраваяЧасть);
	
КонецФункции // ОтделитьРазделителем()

// Преобразует значения из строки в массив, используя указанный разделитель
//
// Параметры:
//  Стр            - Разбираемая строка
//  Разделитель    - подстрока разделитель
//
// Возвращаемое значение:
//  Массив значений
// 
Функция МассивИзСтроки(Знач Стр, Разделитель=",")
	
	Массив      = Новый Массив;
	ПраваяЧасть = ОтделитьРазделителем(Стр, Разделитель);
	
	Пока Не ПустаяСтрока(Стр) Цикл
		Массив.Добавить(СокрЛП(Стр));
		Стр         = ПраваяЧасть;
		ПраваяЧасть = ОтделитьРазделителем(Стр, Разделитель);
	КонецЦикла; 
	
	Возврат(Массив);
	
КонецФункции // МассивИзСтроки() 




//=====================================================================
Процедура ДействияФормыНастройка(Кнопка)
	
	Форма = ВнешняяОбработкаОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	
	
	//текущие настройки, возможно уже измененные ранее в этой же Настройке
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Настройка <> Неопределено Тогда
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;
	
	
	
	Если Форма.ОткрытьМодально() = Истина Тогда
		
		//сразу если надо формировать - то формируем Шины
		ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
		ТолькоДиски=Ложь;
		ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
//		ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
		
		//Формируем отчет по этим настройкам
		// Отчет(ТабДок);
		
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;
	
	
	
КонецПроцедуры

функция  ТекстНачальногоЗапроса();
	
	Текст= "
	|ВЫБРАТЬ Номенклатура
	|ИЗ 	РегистрНакопления.ЗаказыПокупателей.Остатки(, {Номенклатура.*} 
	| Не ЗаказПокупателя.Транзит И ЗаказПокупателя.Проверен) ЗаказыПокупателейОстатки";				
	
	Возврат Текст;
	
КонецФункции


//+++ настройка Построителя
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ПостроительОтчетаОтчет.Текст = ТекстНачальногоЗапроса();
	
	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	//ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	//ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет";
	//Настройка = ВосстановитьЗначение("НастройкаВнешниеОбработкиПрайсЛистСОстаткамиДляКлиентовОтчет_3e223a19-3506-4b69-bfbf-8d521b1048fd");
	//Если Настройка <> Неопределено Тогда
	//	ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	//КонецЕсли;
	
КонецПроцедуры


Процедура ПриЗакрытии()
	//СохранитьЗначение("НастройкаВнешниеОбработкиПрайсЛистСОстаткамиДляКлиентовОтчет_3e223a19-3506-4b69-bfbf-8d521b1048fd", ПостроительОтчетаОтчет.ПолучитьНастройки());
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если Найти(Элемент.ТекущаяОбласть.Имя, ?(ВидОтчета=1,"C22","C21") )>0 тогда //картинка
		
		ПутьДоКартинки = Элемент.ТекущаяОбласть.текст;
		
		Если СокрЛП(ПутьДоКартинки)<>"" тогда
		СтандартнаяОбработка=ложь;
		форма1 = ЭтотОбъект.ПолучитьФорму("ФормаФото");
		форма1.ЭлементыФормы.ПолеHTMLДокумента.УстановитьТекст("<img  src=""" +ПутьДоКартинки+""" > </img>");
		форма1.ЭлементыФормы.Надпись1.значение = СокрЛП(ПутьДоКартинки);
		форма1.Заголовок = Расшифровка.Код+" ) "+Расшифровка.НаименованиеПолное;
		форма1.Открыть();
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры
 
Процедура ОтображатьКодПроизводителяПриИзменении(Элемент)
	ТабДок =ЭлементыФормы.ПолеТабличногоДокумента;
	
	ТабДок.Область("C14").Видимость=ОтображатьКодПроизводителя;
	
	
КонецПроцедуры

Функция ПолучитьФайлыФТП()
	СписокФайлов=новый СписокЗначений;
	Попытка
		врФТП = Новый FTPСоединение("188.225.16.30",,"dc140403_market", "RYHvZBTTZm",, Истина );
		Масс= врФТП.НайтиФайлы("kostroma.kolesatyt.ru/public_html/upload/photos/main_disk_photo","*.jpg",ложь);
		для каждого элМасс из Масс Цикл
			СписокФайлов.Добавить(элМасс.Имя);
		КонецЦикла;	
		возврат СписокФайлов;
	исключение
	КонецПопытки;
	возврат СписокФайлов;
КонецФункции;	
	