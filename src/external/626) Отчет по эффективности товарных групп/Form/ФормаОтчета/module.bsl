
Перем ТекстЗапросаНаДату;

Процедура КнопкаСформироватьНажатие(Кнопка)
		
	Если не ЗначениеЗаполнено(ОтборВидТовараНГ) тогда
		Предупреждение("Не установлен отбор!")	;
		Возврат;
	КонецЕсли;
	
	тзПериодов = СформироватьПериоды(НачПериода,КонПериода);
	//тзПериодов.выбратьСтроку();
	ЭлементыФормы.Индикатор1.МаксимальноеЗначение = тзПериодов.Количество();
	ЭлементыФормы.Индикатор1.Значение=0;

	
	КЧ = Новый КвалификаторыЧисла(12,2);
    КС = Новый КвалификаторыСтроки(100);
	КД = Новый КвалификаторыДаты();
    Массив = Новый Массив;
    Массив.Добавить(Тип("Строка"));
    ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
    Массив.Очистить();
    Массив.Добавить(Тип("Число"));
    ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	Массив.Очистить();
    Массив.Добавить(Тип("Дата"));
    ОписаниеТиповД = Новый ОписаниеТипов(Массив, , ,КД);

	
	Таб = новый ТаблицаЗначений;
	Таб.Колонки.Добавить("Год",ОписаниеТиповС);
	Таб.Колонки.Добавить("Сумма",ОписаниеТиповЧ);
	Таб.Колонки.Добавить("Месяц",ОписаниеТиповД);
	Таб.Колонки.Добавить("ВидТовара");
	Таб.Колонки.Добавить("НоменклатурнаяГруппа");
	
	Для каждого стр из тзПериодов цикл
		ДобавитьВТаблицу(таб,стр, ОтборВидТовараНГ);
	КонецЦикла;
	//Таб.ВыбратьСтроку();
	ТабВаловая = ЗаполнитьТабВаловая();
	
	ТабФот = ЗаполнитьтабФот(НачПериода,КонПериода,ОтборВидТовараНГ);
	
	ТабФотОбщ = ТабФот.Скопировать();
	
	ТабФотСотр = ТабФот.Скопировать();

	ТабФотСотр.Свернуть("Сотрудник,Год","Сумма");
	
	ТабФотОбщ.Свернуть("Месяц,Год","Сумма");
	
	ТабДТГ = таб.Скопировать();
	ТабДТГ.Свернуть("Месяц,Год","Сумма");
	
	ТабВал = ТабВаловая.Скопировать();
	
	ТаблФОТ = ТабФотОбщ.Скопировать();
	
	ВывестиЭффективность(ТабДТГ,ТабВал,ТаблФОТ);
	
	ВыводРезультата(таб,ТабВаловая,ТабФотОбщ,ТабФотСотр);
КонецПроцедуры

Процедура ВывестиЭффективность(ТабДТГ,ТабВал,ТаблФОТ)
	
	запрос = Новый Запрос;
	запрос.УстановитьПараметр("ТабДТГ",ТабДТГ);
	запрос.УстановитьПараметр("ТабВал",ТабВал);
	запрос.УстановитьПараметр("ТаблФОТ",ТаблФОТ);
	запрос.УстановитьПараметр("Коэф",Коэффициент/1200);
	запрос.Текст = "ВЫБРАТЬ
	               |	ТабДТГ.Месяц,
	               |	ТабДТГ.Сумма,
	               |	ТабДТГ.Год
	               |ПОМЕСТИТЬ ТаблДТГ
	               |ИЗ
	               |	&ТабДТГ КАК ТабДТГ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабВал.МесяцВаловая,
	               |	ТабВал.ГодВаловая,
	               |	ТабВал.СуммаВаловая
	               |ПОМЕСТИТЬ ТаблВал
	               |ИЗ
	               |	&ТабВал КАК ТабВал
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблФОТ.Сумма,
	               |	ТаблФОТ.Месяц,
	               |	ТаблФОТ.Год
	               |ПОМЕСТИТЬ ТаблФот
	               |ИЗ
	               |	&ТаблФОТ КАК ТаблФОТ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ТаблВал.ГодВаловая, ЕСТЬNULL(ТаблДТГ.Год, ТаблФот.Год)) КАК Год,
	               |	ЕСТЬNULL(ТаблВал.МесяцВаловая, ЕСТЬNULL(ТаблДТГ.Месяц, ТаблФот.Месяц)) КАК Месяц,
	               |	ЕСТЬNULL(ТаблВал.СуммаВаловая, 0) - ЕСТЬNULL(ТаблФот.Сумма, 0) - ЕСТЬNULL(ТаблДТГ.Сумма, 0) * &Коэф КАК Сумма
	               |ИЗ
	               |	ТаблДТГ КАК ТаблДТГ
	               |		ПОЛНОЕ СОЕДИНЕНИЕ ТаблВал КАК ТаблВал
	               |			ПОЛНОЕ СОЕДИНЕНИЕ ТаблФот КАК ТаблФот
	               |			ПО ТаблВал.МесяцВаловая = ТаблФот.Месяц
	               |				И ТаблВал.ГодВаловая = ТаблФот.Год
	               |		ПО ТаблДТГ.Месяц = ТаблВал.МесяцВаловая
	               |			И ТаблДТГ.Год = ТаблВал.ГодВаловая";
				   
	Рез = Запрос.Выполнить().Выгрузить();
	
	///Эффективность
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("Эффективность");
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТабЭффективность",Рез);

	
	Настройки = КомпоновщикНастроек.Настройки;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	Настройки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных);
	
	//Результат = ЭлементыФормы.Результат;
	Результат = ЭлементыФормы.ПолеТабличногоДокумента1;//Новый ТабличныйДокумент;

	Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

	//Результат.Показать();
	//Результат.ОтображатьСетку=Ложь;
КонецПроцедуры


Функция ЗаполнитьТабВаловая()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода",НачПериода);
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("отбор",ОтборВидТовараНГ);
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	А.МесяцВаловая,
	               |	СУММА(А.СуммаВаловая) КАК СуммаВаловая,
	               |	А.ГодВаловая
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, МЕСЯЦ) КАК МесяцВаловая,
	               |		ПродажиОбороты.СтоимостьОборот - ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0) КАК СуммаВаловая,
	               |		""Этот год"" КАК ГодВаловая
	               |	ИЗ
	               |		РегистрНакопления.Продажи.Обороты(
	               |				&НачПериода,
	               |				&КонПериода,
	               |				Регистратор,
	               |				Номенклатура.Услуга = ЛОЖЬ
	               |					И Подразделение.ВЭД = ЛОЖЬ
				   |                    //Отбор
				   |) КАК ПродажиОбороты
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиСебестоимостьОбороты
	               |			ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
	               |				И ПродажиОбороты.ХарактеристикаНоменклатуры = ПродажиСебестоимостьОбороты.ХарактеристикаНоменклатуры
	               |				И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
	               |				И ПродажиОбороты.Подразделение = ПродажиСебестоимостьОбороты.Подразделение
	               |				И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, МЕСЯЦ), ГОД, 1),
	               |		ПродажиОбороты.СтоимостьОборот - ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0),
	               |		""Прошлый год""
	               |	ИЗ
	               |		РегистрНакопления.Продажи.Обороты(
	               |				ДОБАВИТЬКДАТЕ(&НачПериода, ГОД, -1),
	               |				ДОБАВИТЬКДАТЕ(&КонПериода, ГОД, -1),
	               |				Регистратор,
	               |				Номенклатура.Услуга = ЛОЖЬ
	               |					И Подразделение.ВЭД = ЛОЖЬ
				   |                    //Отбор
				   |) КАК ПродажиОбороты
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(ДОБАВИТЬКДАТЕ(&НачПериода, ГОД, -1), ДОБАВИТЬКДАТЕ(&КонПериода, ГОД, -1), Регистратор, ) КАК ПродажиСебестоимостьОбороты
	               |			ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
	               |				И ПродажиОбороты.ХарактеристикаНоменклатуры = ПродажиСебестоимостьОбороты.ХарактеристикаНоменклатуры
	               |				И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
	               |				И ПродажиОбороты.Подразделение = ПродажиСебестоимостьОбороты.Подразделение
	               |				И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор) КАК А
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	А.МесяцВаловая,
	               |	А.ГодВаловая";
				   
				   Если ТипЗнч(ОтборВидТовараНГ)= Тип("СправочникСсылка.НоменклатурныеГруппы") тогда
					   Запрос.Текст=СтрЗаменить(Запрос.Текст,"//Отбор"," И Номенклатура.НоменклатурнаяГруппа  = &отбор");
				   иначе
					   Запрос.Текст=СтрЗаменить(Запрос.Текст,"//Отбор"," И Номенклатура.ВидТовара  = &отбор");
				   КонецЕсли;
				   
				   Рез = Запрос.Выполнить().Выгрузить();
				  // Рез.ВыбратьСтроку();
				   Возврат Рез;
			   КонецФункции
			   
Процедура ВыводРезультата(таб,ТабВаловая,табФОТ,ТабФотСотр)
	
	Макет = ПолучитьМакет("Макет");
	ОбластьОтборы = макет.ПолучитьОбласть("Отборы");
	ОбластьШапка = макет.ПолучитьОбласть("Шапка");
	
	
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТабДеньгиВТоварныхГруппах",таб);
	ВнешниеНаборыДанных.Вставить("ТабВаловаяПрибыль",ТабВаловая);

	
	Настройки = КомпоновщикНастроек.Настройки;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	Настройки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных);
	
	//Результат = ЭлементыФормы.Результат;
	Результат = ЭлементыФормы.ПолеТабличногоДокумента1;//Новый ТабличныйДокумент;
	//Результат.Очистить();

	ОбластьШапка.Параметры.Период = "Период: "+Формат(НачПериода,"ДФ=dd.MM.yyyy")+" - "+Формат(КонПериода,"ДФ=dd.MM.yyyy");
	Результат.Вывести(ОбластьШапка);

	ОбластьОтборы.Параметры.Отборы = "Отбор: "+?(ТипЗнч(ОтборВидТовараНГ)= Тип("СправочникСсылка.НоменклатурныеГруппы")," Номенклатурная группа = "," Вид товара = ") + ОтборВидТовараНГ;
	Результат.Вывести(ОбластьОтборы);
	//Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	
	///валовая
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("Макет1");
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТабВаловаяПрибыль",ТабВаловая);

	
	Настройки = КомпоновщикНастроек.Настройки;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	Настройки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных);
	
	//Результат = ЭлементыФормы.Результат;
	Результат = ЭлементыФормы.ПолеТабличногоДокумента1;//Новый ТабличныйДокумент;

		//Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
		
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	
	///ФОТ
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ФОТ");
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТабФот",табФОТ);

	
	Настройки = КомпоновщикНастроек.Настройки;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	Настройки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных);
	
	//Результат = ЭлементыФормы.Результат;
	Результат = ЭлементыФормы.ПолеТабличногоДокумента1;//Новый ТабличныйДокумент;

		//Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	///ТаблицаСотрудников
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("Сотрудники");
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТабСотрудники",ТабФотСотр);

	
	Настройки = КомпоновщикНастроек.Настройки;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	Настройки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных);
	
	//Результат = ЭлементыФормы.Результат;
	//Результат = ЭлементыФормы.ПолеТабличногоДокумента1;//Новый ТабличныйДокумент;
    ТД = Новый ТабличныйДокумент;
	ТД.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТД);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Если Найти(ПользователиИнформационнойБазы.ТекущийПользователь().Имя,"Малышев") > 0 Тогда
		Результат.Вывести(ТД);
	КонецЕсли;
	
	Результат.Показать();
	Результат.ОтображатьСетку=Ложь;
	
	//Результат.ФиксацияСлева = 100500;	
	//Результат.ФиксацияСверху = 100500;		
КонецПроцедуры

Процедура ДобавитьВТаблицу(таб,стр,отб)
	Запрос = новый Запрос;
	Запрос.Текст = ТекстЗапросаНаДату;
	Запрос.УстановитьПараметр("КонДата",стр.ДатаОтчета);
	Запрос.УстановитьПараметр("отбор",отб);
	Если ТипЗнч(отб)= Тип("СправочникСсылка.НоменклатурныеГруппы") тогда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"//Отбор","где Б.НоменклатурнаяГруппа = &отбор");
	иначе
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"//Отбор","где Б.ВидТовара = &отбор")
	КонецЕсли;
	
	Рез =Запрос.Выполнить().Выбрать();
	состояние("Рассчет на "+ стр.ДатаОтчета);
	Пока Рез.Следующий() Цикл
		нстр = таб.Добавить();
		нстр.Месяц = стр.ПредставлениеДаты; 
		ЗаполнитьЗначенияСвойств(нстр,рез);
		Если стр.ЭтотГод тогда
			нстр.Год = "Этот год";
		иначе
			нстр.Год = "Прошлый год";

		КонецЕсли;
	КонецЦикла;
	ЭлементыФормы.Индикатор1.Значение=ЭлементыФормы.Индикатор1.Значение+1;
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Функция СформироватьПериоды(ДатаНач,ДатаКон)
	Таб = Новый ТаблицаЗначений;
	Таб.Колонки.Добавить("ДатаОтчета");
	Таб.Колонки.Добавить("ПредставлениеДаты");
	Таб.Колонки.Добавить("ЭтотГод");
	
	
	НачПериод=НачалоМесяца(ДатаНач);
	Конпериод=НачалоМесяца(ДатаКон);
	пПериод=НачПериод;
	
	Пока пПериод<=Конпериод цикл
		нстр = Таб.Добавить();
		//нстр.ДатаОтчета = пПериод;
		нстр.ДатаОтчета = КонецМесяца(пПериод);
		//НачалоДня(КонецДня(ОбщийОтчет.ДатаКон)+1))
		нстр.ПредставлениеДаты= пПериод;
		нстр.ЭтотГод = истина;
		пПериод=ДобавитьМесяц(пПериод,1);
	КонецЦикла;	
	//добавим прошлый год
	
	НачПериод=ДобавитьМесяц(НачалоМесяца(ДатаНач),-12);
	Конпериод=ДобавитьМесяц(НачалоМесяца(ДатаКон),-12);
	пПериод=НачПериод;
	
	Пока пПериод<=Конпериод цикл
		нстр = Таб.Добавить();
		//нстр.ДатаОтчета = пПериод;
		нстр.ДатаОтчета = КонецМесяца(пПериод);
		нстр.ПредставлениеДаты= добавитьМесяц(пПериод,12); //что б в графике наложить прошлый год, на текущий
		нстр.ЭтотГод = ложь;
		
		пПериод=ДобавитьМесяц(пПериод,1);
	КонецЦикла;
	
	
	//Таб.ВыбратьСтроку();
	
	Возврат таб;
КонецФункции

Процедура ПриОткрытии()
	Коэффициент = 12;
КонецПроцедуры


ТекстЗапросаНаДату="ВЫБРАТЬ
                   |	СУММА(Б.Сумма) КАК Сумма,
                   |	Б.ВидТовара КАК ВидТовара,
                   |	Б.НоменклатурнаяГруппа
                   |ИЗ
                   |	(ВЫБРАТЬ
                   |		ДТГ.Вид КАК Вид,
                   |		ДТГ.Номенклатура.ВидТовара КАК ВидТовара,
                   |		ДТГ.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
                   |		ДТГ.Номенклатура.Производитель КАК Производитель,
                   |		ДТГ.Контрагент КАК Контрагент,
                   |		ДТГ.ДоговорКонтрагента КАК ДоговорКонтрагента,
                   |		ДТГ.Сделка КАК Сделка,
                   |		СУММА(ДТГ.Сумма) КАК Сумма
                   |	ИЗ
                   |		(ВЫБРАТЬ
                   |			ВЫБОР
                   |				КОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток > 0
                   |					ТОГДА ""Дебиторка""
                   |				ИНАЧЕ ""Кредиторка""
                   |			КОНЕЦ КАК Вид,
                   |			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
                   |			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
                   |			ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
                   |			Заказы.Номенклатура КАК Номенклатура,
                   |			ВЫБОР
                   |				КОГДА ЕСТЬNULL(Заказы.СуммаДокумента, 0) = 0
                   |					ТОГДА 0
                   |				ИНАЧЕ ВЫБОР
                   |						КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.СуммаВключаетНДС
                   |							ТОГДА ВЫРАЗИТЬ(Заказы.Сумма / Заказы.Сделка.СуммаДокумента * ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК ЧИСЛО(15, 2))
                   |						ИНАЧЕ ВЫРАЗИТЬ((Заказы.Сумма + Заказы.СуммаНДС) / Заказы.Сделка.СуммаДокумента * ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК ЧИСЛО(15, 2))
                   |					КОНЕЦ
                   |			КОНЕЦ КАК Сумма
                   |		ИЗ
                   |			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&КонДата, ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)) КАК ВзаиморасчетыСКонтрагентамиОстатки
                   |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                   |					А.ДоговорКонтрагента КАК ДоговорКонтрагента,
                   |					А.Сделка КАК Сделка,
                   |					А.Номенклатура КАК Номенклатура,
                   |					СУММА(А.Сумма) КАК Сумма,
                   |					СУММА(А.СуммаНДС) КАК СуммаНДС,
                   |					СУММА(А.СуммаДокумента) КАК СуммаДокумента
                   |				ИЗ
                   |					(ВЫБРАТЬ
                   |						ЗаказПокупателяТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
                   |						ЗаказПокупателяТовары.Ссылка КАК Сделка,
                   |						ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
                   |						ЗаказПокупателяТовары.Сумма КАК Сумма,
                   |						ЗаказПокупателяТовары.СуммаНДС КАК СуммаНДС,
                   |						ЗаказПокупателяТовары.Ссылка.СуммаДокумента КАК СуммаДокумента
                   |					ИЗ
                   |						Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
                   |					
                   |					ОБЪЕДИНИТЬ ВСЕ
                   |					
                   |					ВЫБРАТЬ
                   |						ЗаказПоставщикуТовары.Ссылка.ДоговорКонтрагента,
                   |						ЗаказПоставщикуТовары.Ссылка,
                   |						ЗаказПоставщикуТовары.Номенклатура,
                   |						ЗаказПоставщикуТовары.Сумма,
                   |						ЗаказПоставщикуТовары.СуммаНДС,
                   |						ЗаказПоставщикуТовары.Ссылка.СуммаДокумента
                   |					ИЗ
                   |						Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары) КАК А
                   |				
                   |				СГРУППИРОВАТЬ ПО
                   |					А.ДоговорКонтрагента,
                   |					А.Сделка,
                   |					А.Номенклатура) КАК Заказы
                   |				ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = Заказы.ДоговорКонтрагента
                   |					И ВзаиморасчетыСКонтрагентамиОстатки.Сделка = Заказы.Сделка
                   |		
                   |		ОБЪЕДИНИТЬ
                   |		
                   |		ВЫБРАТЬ
                   |			""Склад"",
                   |			"""",
                   |			"""",
                   |			"""",
                   |			ПартииТоваровНаСкладахОстатки.Номенклатура,
                   |			ПартииТоваровНаСкладахОстатки.СтоимостьОстаток
                   |		ИЗ
                   |			РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&КонДата, ) КАК ПартииТоваровНаСкладахОстатки) КАК ДТГ
                   |	
                   |	СГРУППИРОВАТЬ ПО
                   |		ДТГ.Вид,
                   |		ДТГ.Номенклатура.ВидТовара,
                   |		ДТГ.Номенклатура.НоменклатурнаяГруппа,
                   |		ДТГ.Номенклатура.Производитель,
                   |		ДТГ.Контрагент,
                   |		ДТГ.ДоговорКонтрагента,
                   |		ДТГ.Сделка
                   |	
                   |	ОБЪЕДИНИТЬ
                   |	
                   |	ВЫБРАТЬ
                   |		ВЫБОР
                   |			КОГДА ВзаиморасчетыУслуги.Сумма > 0
                   |				ТОГДА ""Дебиторка""
                   |			ИНАЧЕ ""Кредиторка""
                   |		КОНЕЦ,
                   |		ВзаиморасчетыУслуги.ВидТовара,
                   |		ВзаиморасчетыУслуги.НоменклатурнаяГруппа,
                   |		ВзаиморасчетыУслуги.Производитель,
                   |		ВзаиморасчетыУслуги.Контрагент,
                   |		ВзаиморасчетыУслуги.ДоговорКонтрагента,
                   |		ВзаиморасчетыУслуги.Сделка,
                   |		ВзаиморасчетыУслуги.Сумма
                   |	ИЗ
                   |		(ВЫБРАТЬ
                   |			"""" КАК ВидТовара,
                   |			ВзаиморасчетыУслуги.ДоговорКонтрагента.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
                   |			"""" КАК Производитель,
                   |			ВзаиморасчетыУслуги.ДоговорКонтрагента.Владелец КАК Контрагент,
                   |			ВзаиморасчетыУслуги.ДоговорКонтрагента КАК ДоговорКонтрагента,
                   |			"""" КАК Сделка,
                   |			СУММА(ВзаиморасчетыУслуги.СуммаУпрОстаток) КАК Сумма
                   |		ИЗ
                   |			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
                   |					&КонДата,
                   |					ДоговорКонтрагента.ВедениеВзаиморасчетов <> ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)
                   |						И ДоговорКонтрагента.НоменклатурнаяГруппа <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)) КАК ВзаиморасчетыУслуги
                   |		
                   |		СГРУППИРОВАТЬ ПО
                   |			ВзаиморасчетыУслуги.ДоговорКонтрагента.НоменклатурнаяГруппа,
                   |			ВзаиморасчетыУслуги.ДоговорКонтрагента.Владелец,
                   |			ВзаиморасчетыУслуги.ДоговорКонтрагента) КАК ВзаиморасчетыУслуги) КАК Б
                   |	//ГДЕ
                   |	//Отбор
                   |
                   |СГРУППИРОВАТЬ ПО
                   |	Б.ВидТовара,
                   |	Б.НоменклатурнаяГруппа";