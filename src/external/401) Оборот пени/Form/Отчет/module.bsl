
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ОтчетИнициализация();

КонецПроцедуры

Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОтчетыОборотыПениОтчет_cd2a7449-3ddf-48eb-bd25-57fff4f10072", ПостроительОтчетаОтчет.ПолучитьНастройки());

КонецПроцедуры

Процедура ДействияФормыОтчетНастройка(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Форма = ВнешнийОтчетОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Форма.ОткрытьМодально() = Истина Тогда
		ОтчетВывести();
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ОтчетВывести();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ОтчетВывести()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();
	
	СтрокаЗаголовка = "Оборот пени с " + Формат(ДатаНач,"ДЛФ=Д") + " по " + Формат(ДатаКон,"ДЛФ=Д"); 
	              

	ПостроительОтчетаОтчет.Параметры.Вставить("ДатаКон", КонецДня(ДатаКон));
	ПостроительОтчетаОтчет.Параметры.Вставить("ДатаНач", ДатаНач);
	ПостроительОтчетаОтчет.Параметры.Вставить("Пени", Справочники.ТипыДоговоров.Пени);

	ПостроительОтчетаОтчет.Выполнить();
	ПостроительОтчетаОтчет.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Классика);
	ПостроительОтчетаОтчет.Макет = ВнешнийОтчетОбъект.ПолучитьМакет("Отчет");
	ПостроительОтчетаОтчет.ОформитьМакет();
	ПостроительОтчетаОтчет.Макет.Область("R2C2").Текст = СтрокаЗаголовка;
	ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ
КонецПроцедуры

Процедура ОтчетИнициализация()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ПостроительОтчетаОтчет.Текст =
	"ВЫБРАТЬ
	|	НачисленныеПениОбороты.ДоговорЗадолженности.ОтветственноеЛицо.ОсновноеПодразделение КАК Подразделение,
	|	НачисленныеПениОбороты.ДоговорЗадолженности.ОтветственноеЛицо КАК Менеджер,
	|	НачисленныеПениОбороты.Контрагент КАК Контрагент,
	|	НачисленныеПениОбороты.ПениПриход КАК НачисленоПени,
	|	ВЫБОР
	|		КОГДА НачисленныеПениОбороты.Регистратор ССЫЛКА Документ.ЗакрытиеНачислений
	|			ТОГДА НачисленныеПениОбороты.ПениРасход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗакрытоПени,
	|	ВЫБОР
	|		КОГДА НачисленныеПениОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА НачисленныеПениОбороты.ПениРасход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыставленоПени,
	|	NULL КАК СуммаУпрРасход
	|ИЗ
	|	РегистрНакопления.НачисленныеПени.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК НачисленныеПениОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение,
	|	ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|	ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.Владелец,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрРасход
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(&ДатаНач, &ДатаКон, , ДоговорКонтрагента.ТипДоговора = &Пени) КАК ВзаиморасчетыСКонтрагентамиОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Подразделение,
	|	Менеджер,
	|	Контрагент
	|ИТОГИ
	|	СУММА(НачисленоПени),
	|	СУММА(ЗакрытоПени),
	|	СУММА(ВыставленоПени),
	|	СУММА(СуммаУпрРасход)
	|ПО
	|	ОБЩИЕ,
	|	Подразделение,
	|	Менеджер,
	|	Контрагент
	|АВТОУПОРЯДОЧИВАНИЕ";
	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет";
	Настройка = ВосстановитьЗначение("НастройкаВнешниеОтчетыОборотыПениОтчет_cd2a7449-3ddf-48eb-bd25-57fff4f10072");
	Если Настройка <> Неопределено Тогда
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ
КонецПроцедуры

Процедура КнопкаВыбораПериодаНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
КонецПроцедуры








