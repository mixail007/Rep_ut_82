Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт
    ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("НачДата", НачалоДня(ОбщийОтчет.ДатаНач));
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("КонДата", КонецДня(ОбщийОтчет.ДатаКон));
	//ОбщийОтчет.мРежимВводаПериода = 0;
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПроцедуры

//=======================ГЛАВНАЯ=============================
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	Текст= "ВЫБРАТЬ
	       |	ДТГ.Вид КАК Вид,
	       |	ДТГ.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер,
	       |	ДТГ.Контрагент КАК Контрагент,
	       |	ДТГ.ДоговорКонтрагента КАК ДоговорКонтрагента,
	       |	ДТГ.Сделка КАК Сделка,
	       |	ДТГ.Номенклатура КАК Номенклатура,
	       |	ДТГ.СуммаВЗаказе КАК СуммаВЗаказе,
	       |	ДТГ.Регистратор КАК Регистратор,
	       |	ДТГ.Сумма КАК Сумма
	       |{ВЫБРАТЬ
	       |	Номенклатура.*,
	       |	Менеджер.*,
	       |	Контрагент.*,
	       |	ДоговорКонтрагента.*,
	       |	Сделка.*,
	       |	Регистратор.*}
	       |ИЗ
	       |	(ВЫБРАТЬ
	       |		ВЫБОР
	       |			КОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОборот < 0
	       |				ТОГДА ""Дебиторка""
	       |			ИНАЧЕ ""Оплата""
	       |		КОНЕЦ КАК Вид,
	       |		Заказы.Номенклатура КАК Номенклатура,
	       |		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	       |		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	       |		ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
	       |		ВзаиморасчетыСКонтрагентамиОстатки.Регистратор КАК Регистратор,
	       |		ВЫБОР
	       |			КОГДА ЕСТЬNULL(Заказы.СуммаДокумента, 0) = 0
	       |				ТОГДА 0
	       |			ИНАЧЕ ВЫБОР
	       |					КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.СуммаВключаетНДС
	       |						ТОГДА ВЫРАЗИТЬ(Заказы.Сумма / Заказы.СуммаДокумента * ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОборот КАК ЧИСЛО(15, 2))
	       |					ИНАЧЕ ВЫРАЗИТЬ((Заказы.Сумма + Заказы.СуммаНДС) / Заказы.СуммаДокумента * ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОборот КАК ЧИСЛО(15, 2))
	       |				КОНЕЦ
	       |		КОНЕЦ КАК Сумма,
	       |		ВЫБОР
	       |			КОГДА НЕ ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОборот > 0
	       |				ТОГДА -Заказы.Сумма
	       |			ИНАЧЕ Заказы.Сумма
	       |		КОНЕЦ КАК СуммаВЗаказе
	       |	{ВЫБРАТЬ
	       |		Номенклатура.*,
	       |		Контрагент.*,
	       |		ДоговорКонтрагента.*,
	       |		Сделка.*,
	       |		Регистратор.*}
	       |	ИЗ
	       |		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
	       |				&НачДата,
	       |				&КонДата,
	       |				Регистратор,
	       |				ДоговорКонтрагента.Владелец.Поставщик = ИСТИНА
	       |					И ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам) КАК ВзаиморасчетыСКонтрагентамиОстатки
	       |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	       |				ЗаказПоставщикуТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	       |				ЗаказПоставщикуТовары.Ссылка КАК Сделка,
	       |				ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	       |				ЗаказПоставщикуТовары.Сумма КАК Сумма,
	       |				ЗаказПоставщикуТовары.СуммаНДС КАК СуммаНДС,
	       |				ЗаказПоставщикуТовары.Ссылка.СуммаДокумента КАК СуммаДокумента
	       |			ИЗ
	       |				Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	       |			ГДЕ
	       |				НЕ ЗаказПоставщикуТовары.Ссылка.ПометкаУдаления
	       |				И ЗаказПоставщикуТовары.Ссылка.Проведен
	       |				И ЗаказПоставщикуТовары.Ссылка.Дата >= &ДатаЗак) КАК Заказы
	       |			ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = Заказы.ДоговорКонтрагента
	       |				И ВзаиморасчетыСКонтрагентамиОстатки.Сделка = Заказы.Сделка
	       |	ГДЕ
	       |		Заказы.СуммаДокумента > 0
	       |	{ГДЕ
	       |		(ВЫБОР
	       |				КОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОборот > 0
	       |					ТОГДА ""Дебиторка""
	       |				ИНАЧЕ ""Кредиторка""
	       |			КОНЕЦ) КАК Вид,
	       |		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец.* КАК Контрагент,
	       |		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.*,
	       |		ВзаиморасчетыСКонтрагентамиОстатки.Сделка.*,
	       |		Заказы.Номенклатура.*,
	       |		(ВЫБОР
	       |				КОГДА ЕСТЬNULL(Заказы.СуммаДокумента, 0) = 0
	       |					ТОГДА 0
	       |				ИНАЧЕ ВЫБОР
	       |						КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.СуммаВключаетНДС
	       |							ТОГДА ВЫРАЗИТЬ(Заказы.Сумма / Заказы.СуммаДокумента * ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОборот КАК ЧИСЛО(15, 2))
	       |						ИНАЧЕ ВЫРАЗИТЬ((Заказы.Сумма + Заказы.СуммаНДС) / Заказы.СуммаДокумента * ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОборот КАК ЧИСЛО(15, 2))
	       |					КОНЕЦ
	       |			КОНЕЦ) КАК Сумма,
	       |		ВзаиморасчетыСКонтрагентамиОстатки.Регистратор.*,
	       |		(ВЫБОР
	       |				КОГДА НЕ ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОборот > 0
	       |					ТОГДА -Заказы.Сумма
	       |				ИНАЧЕ Заказы.Сумма
	       |			КОНЕЦ) КАК СуммаВЗаказе}) КАК ДТГ
	       |{ГДЕ
	       |	ДТГ.Вид,
	       |	ДТГ.ДоговорКонтрагента.ОтветственноеЛицо.* КАК Менеджер,
	       |	ДТГ.Контрагент.*,
	       |	ДТГ.ДоговорКонтрагента.*,
	       |	ДТГ.Номенклатура.*,
	       |	ДТГ.Сделка.*,
	       |	ДТГ.Регистратор.*}
	       |ИТОГИ
	       |	СУММА(СуммаВЗаказе),
	       |	СУММА(Сумма)
	       |ПО
	       |	ОБЩИЕ,
	       |	Номенклатура,
	       |	Сделка,
	       |	Менеджер,
	       |	Контрагент,
	       |	ДоговорКонтрагента,
	       |	Регистратор,
	       |	Вид
	       |{ИТОГИ ПО
	       |	Менеджер.*,
	       |	Контрагент.*,
	       |	ДоговорКонтрагента.*,
	       |	Вид,
	       |	Номенклатура.*,
	       |	Сделка.*,
	       |	Регистратор.*,
	       |	СуммаВЗаказе,
	       |	Сумма}
	       |АВТОУПОРЯДОЧИВАНИЕ";

		   Текст ="ВЫБРАТЬ
		          |	ПоступлениеДопРасходовТовары.Ссылка,
		          |	СУММА(ПоступлениеДопРасходовТовары.СуммаТовара) КАК СуммаТовара
		          |ПОМЕСТИТЬ СуммаВТабЧастиДоппоступления
		          |ИЗ
		          |	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
		          |
		          |СГРУППИРОВАТЬ ПО
		          |	ПоступлениеДопРасходовТовары.Ссылка
		          |;
		          |
		          |////////////////////////////////////////////////////////////////////////////////
		          |ВЫБРАТЬ
		          |	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор,
		          |	ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента,
		          |	ВзаиморасчетыСКонтрагентамиОбороты.Сделка,
		          |	ВЫРАЗИТЬ(ЕСТЬNULL(ЕСТЬNULL(ЗаказПоставщикуТовары.Номенклатура, ПоступлениеДопРасходовТовары.Номенклатура), &НоменклатураНеИспользовать) КАК Справочник.Номенклатура) КАК Номенклатура,
		          |	ВЫБОР
		          |		КОГДА ВзаиморасчетыСКонтрагентамиОбороты.Сделка ССЫЛКА Документ.ЗаказПоставщику
		          |			ТОГДА ВЫБОР
		          |					КОГДА ЗаказПоставщикуТовары.Ссылка.СуммаДокумента = 0
		          |						ТОГДА ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход
		          |					ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход * ЗаказПоставщикуТовары.Сумма / ЗаказПоставщикуТовары.Ссылка.СуммаДокумента, 0) КАК ЧИСЛО(15, 2))
		          |				КОНЕЦ
		          |		КОГДА ВзаиморасчетыСКонтрагентамиОбороты.Сделка ССЫЛКА Документ.ПоступлениеДопРасходов
		          |			ТОГДА ВЫРАЗИТЬ(ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход / ПоступлениеДопРасходовТовары.Ссылка.Сумма * (ПоступлениеДопРасходовТовары.Ссылка.Сумма * (ПоступлениеДопРасходовТовары.СуммаТовара / СуммаВТабЧастиДоппоступления.СуммаТовара)) КАК ЧИСЛО(15, 2))
		          |		ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход
		          |	КОНЕЦ КАК СуммаОплаты
		          |{ВЫБРАТЬ
		          |	(НАЧАЛОПЕРИОДА(ВзаиморасчетыСКонтрагентамиОбороты.Период, МЕСЯЦ)) КАК ПериодМесяц,
		          |	ДоговорКонтрагента.*,
		          |	Сделка.*,
		          |	Регистратор.*,
		          |	Номенклатура.*}
		          |ИЗ
		          |	(ВЫБРАТЬ
		          |		ТИПЗНАЧЕНИЯ(ВзаиморасчетыСКонтрагентамиОбороты.Регистратор) КАК Вид,
		          |		ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.Номер КАК РегистраторНомер,
		          |		ВзаиморасчетыСКонтрагентамиОбороты.Регистратор КАК Регистратор,
		          |		ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		          |		ВзаиморасчетыСКонтрагентамиОбороты.Сделка КАК Сделка,
		          |		ВзаиморасчетыСКонтрагентамиОбороты.Период КАК Период,
		          |		СУММА(ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход) КАК СуммаУпрПриход
		          |	ИЗ
		          |		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
		          |				&НачДата,
		          |				КОНЕЦПЕРИОДА(&КонДата, ДЕНЬ),
		          |				Запись,
		          |				ДоговорКонтрагента.Владелец.Поставщик
		          |						И ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам
		          |					ИЛИ ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоРасчетнымДокументам)) КАК ВзаиморасчетыСКонтрагентамиОбороты
		          |	ГДЕ
		          |		(ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
		          |				ИЛИ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
		          |				ИЛИ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.Взаимозачет
		          |					И ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.УчитыватьДляРасчетаПремии)
		          |		И ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход <> 0
		          |	
		          |	СГРУППИРОВАТЬ ПО
		          |		ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента,
		          |		ВзаиморасчетыСКонтрагентамиОбороты.Регистратор,
		          |		ВзаиморасчетыСКонтрагентамиОбороты.Период,
		          |		ВзаиморасчетыСКонтрагентамиОбороты.Сделка,
		          |		ТИПЗНАЧЕНИЯ(ВзаиморасчетыСКонтрагентамиОбороты.Регистратор),
		          |		ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.Номер) КАК ВзаиморасчетыСКонтрагентамиОбороты
		          |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		          |		ПО ВзаиморасчетыСКонтрагентамиОбороты.Сделка = ЗаказПоставщикуТовары.Ссылка
		          |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
		          |		ПО ВзаиморасчетыСКонтрагентамиОбороты.Сделка = ПоступлениеДопРасходовТовары.Ссылка
		          |		ЛЕВОЕ СОЕДИНЕНИЕ СуммаВТабЧастиДоппоступления КАК СуммаВТабЧастиДоппоступления
		          |		ПО ВзаиморасчетыСКонтрагентамиОбороты.Сделка = СуммаВТабЧастиДоппоступления.Ссылка
		          |{ГДЕ
		          |	ВзаиморасчетыСКонтрагентамиОбороты.Период,
		          |	ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.* КАК Менеджер,
		          |	ЗаказПоставщикуТовары.Номенклатура.*,
		          |	ВзаиморасчетыСКонтрагентамиОбороты.Сделка.*,
		          |	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.*}
		          |{УПОРЯДОЧИТЬ ПО
		          |	ДоговорКонтрагента.*,
		          |	Номенклатура.*,
		          |	Сделка.*,
		          |	Регистратор.*}
		          |ИТОГИ
		          |	СУММА(СуммаОплаты)
		          |ПО
		          |	ОБЩИЕ
		          |{ИТОГИ ПО
		          |	ВзаиморасчетыСКонтрагентамиОбороты.Период КАК ПериодМесяц,
		          |	ДоговорКонтрагента.*,
		          |	Номенклатура.*,
		          |	Сделка.*,
		          |	Регистратор.*}
		          |АВТОУПОРЯДОЧИВАНИЕ";   	

//ПостроительОтчета.Параметры.Вставить("ДатаЗак", '20130101');// не ранее 01.01.2013г.
ПостроительОтчета.Параметры.Вставить("ПоЗаказам", Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам);
ПостроительОтчета.Параметры.Вставить("НоменклатураНеИспользовать", Справочники.Номенклатура.НайтиПоКоду("9265070"));
	СтруктураПредставлениеПолей = Новый Структура("
	|ДоговорКонтрагента,
	|Сделка,
	|Номенклатура,
	|СуммаОплаты,
	|ПериодМесяц,
	|Регистратор", 
	
	"Договор контрагента",
	"Сделка",
	"Номенклатура",
	"Сумма оплаты",
	"По месяцам",
	"Регистратор");

	
		
	ПостроительОтчета.Текст = Текст;
	МассивОтбора = Новый Массив;
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаОплаты", "Сумма оплаты", Истина, "ЧЦ=15; ЧДЦ=2");
//	ОбщийОтчет.ЗаполнитьПоказатели("Сумма", "Сумма заказа", Ложь, "ЧЦ=15; ЧДЦ=2");
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	  
	
	ОбщийОтчет.мНазваниеОтчета = "Оплаты поставщикам по товарным группам";

КонецПроцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "ВзаиморасчетыСКонтрагентами";
ОбщийОтчет.мНазваниеОтчета = "Оплаты по товарным группам";
ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
ОбщийОтчет.мВыбиратьИспользованиеСвойств=Ложь;
ОбщийОтчет.мРежимВводаПериода = 0;
ОбщийОтчет.ВыводитьПоказателиВСтроку=Истина;