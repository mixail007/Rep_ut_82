
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
		
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = НачПериода;
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонПериода;

КонецПроцедуры

Процедура ПриОткрытии()
	подразделение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя")Тогда
	ЭлементыФормы.Подразделение.Доступность = Ложь;
    конецЕсли;	
    НачПериода = НачалоГода(ТекущаяДата());
	КонПериода = КонецМесяца(ТекущаяДата());
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = НачалоГода(ТекущаяДата());
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонецМесяца(ТекущаяДата());
   
   	ОшибкиСклада = Новый СписокЗначений;
	ОшибкиСклада.Добавить(Перечисления.ПричиныНедогруза.Пересорт);
	ОшибкиСклада.Добавить(Перечисления.ПричиныНедогруза.неНашли);
	ОшибкиСклада.Добавить(Перечисления.ПричиныНедогруза.Недостача);
	
	ПарамОшибкиСклада = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ОшибкиСклада");
	ПарамОшибкиСклада.Использование = Истина;
	ПарамОшибкиСклада.Значение  = ОшибкиСклада;

	ПарамПодразделение = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Подразделение");
	ПарамПодразделение.Использование = Истина;
	Списокподразделений = Новый списокЗначений;
	Если подразделение = Справочники.Подразделения.НайтиПоКоду("00005") Тогда// Головное
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00005"));
	СписокПодразделений.Добавить(Справочники.Подразделения.ПустаяСсылка());
	ИначеЕсли подразделение = Справочники.Подразделения.НайтиПоКоду("00106") Тогда// Ростов
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00106"));
	ИначеЕсли подразделение = Справочники.Подразделения.НайтиПоКоду("00112") Тогда// Питер
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00112"));
    ИначеЕсли подразделение = Справочники.Подразделения.НайтиПоКоду("00133") Тогда// Москва
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00133"));
    ИначеЕсли подразделение = Справочники.Подразделения.НайтиПоКоду("00122") Тогда// Екатеринбург
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00122"));
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00138"));
    КонецЕсли;
    ПарамПодразделение.Значение = СписокПодразделений;
КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = НачПериода;
КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонПериода;
КонецПроцедуры

Процедура ПодразделениеПриИзменении(Элемент)
	ПарамПодразделение = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Подразделение");
	ПарамПодразделение.Использование = Истина;
	Списокподразделений = Новый списокЗначений;
	Если подразделение = Справочники.Подразделения.НайтиПоКоду("00005") Тогда// Головное
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00005"));
	СписокПодразделений.Добавить(Справочники.Подразделения.ПустаяСсылка());
	ИначеЕсли подразделение = Справочники.Подразделения.НайтиПоКоду("00106") Тогда// Ростов
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00106"));
	ИначеЕсли подразделение = Справочники.Подразделения.НайтиПоКоду("00112") Тогда// Питер
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00112"));
    ИначеЕсли подразделение = Справочники.Подразделения.НайтиПоКоду("00133") Тогда// Москва
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00133"));
    ИначеЕсли подразделение = Справочники.Подразделения.НайтиПоКоду("00122") Тогда// Екатеринбург
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00122"));
	СписокПодразделений.Добавить( Справочники.Подразделения.НайтиПоКоду("00138"));
    КонецЕсли;
    ПарамПодразделение.Значение = СписокПодразделений;
КонецПроцедуры
