
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
		|	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	СУММА(1) КАК Счетчик,
		|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(&ДатаСреза, ) КАК ЗаказыПоставщикамСезонныеОстатки
		|ГДЕ
		|	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
		|	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток,
		|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный
		|ИТОГИ
		|	СУММА(КоличествоОстаток),
		|	СУММА(Счетчик)
		|ПО
		|	ОБЩИЕ";

	Запрос.УстановитьПараметр("ДатаСреза", ЭтаФорма.ДатаСреза);

	Результат = Запрос.Выполнить();
	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий();		// Общий итог

    ЭлементыФормы.СезонЗаказы.Заголовок = "По регистру сезонных заказов поставщикам " + формат(ВыборкаОбщийИтог.Счетчик,"ЧН=нет") + " отрицательных остатков.";
    Если ВыборкаОбщийИтог.Счетчик=0 тогда
		ЭлементыФормы.СезонЗаказы.ЦветТекста = webЦвета.ТемноЗеленый;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	               |	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	1 КАК Счетчик,
	               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДатаСреза, ) КАК ЗаказыПоставщикамОстатки
	               |ГДЕ
	               |	ЗаказыПоставщикамОстатки.КоличествоОстаток < 0
	               |ИТОГИ
	               |	СУММА(КоличествоОстаток),
	               |	СУММА(Счетчик)
	               |ПО
	               |	ОБЩИЕ";
 	Запрос.УстановитьПараметр("ДатаСреза", ЭтаФорма.ДатаСреза);

	Результат = Запрос.Выполнить();
	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий();		

    ЭлементыФормы.ЗаказыПоставщикам.Заголовок = "По регистру заказов поставщикам " + формат(ВыборкаОбщийИтог.Счетчик,"ЧН=нет")  + " отрицательных остатков.";
    Если ВыборкаОбщийИтог.Счетчик=0 тогда
		ЭлементыФормы.ЗаказыПоставщикам.ЦветТекста = webЦвета.ТемноЗеленый;
	КонецЕсли;


	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	               |	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	               |	ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	1 КАК Счетчик
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателей.Остатки(&ДатаСреза, ) КАК ЗаказыПокупателейОстатки
	               |ГДЕ
	               |	ЗаказыПокупателейОстатки.КоличествоОстаток < 0
	               |ИТОГИ
	               |	СУММА(Счетчик)
	               |ПО
	               |	ОБЩИЕ"; 
				   
 	Запрос.УстановитьПараметр("ДатаСреза", ЭтаФорма.ДатаСреза);

	Результат = Запрос.Выполнить();
	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий();		

    ЭлементыФормы.ЗаказыПокупателей.Заголовок = "По регистру заказов покупателей " + формат(ВыборкаОбщийИтог.Счетчик,"ЧН=нет")  + " отрицательных остатков.";				   
 	Если ВыборкаОбщийИтог.Счетчик=0 тогда
		ЭлементыФормы.ЗаказыПокупателей.ЦветТекста = webЦвета.ТемноЗеленый;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РезервДляИМОстатки.Подразделение КАК Подразделение,
	               |	РезервДляИМОстатки.КонтрагентДляРезерваИМ КАК КонтрагентДляРезерваИМ,
	               |	РезервДляИМОстатки.Номенклатура КАК Номенклатура,
	               |	РезервДляИМОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	1 КАК Счетчик
	               |ИЗ
	               |	РегистрНакопления.РезервДляИМ.Остатки(&ДатаСреза, ) КАК РезервДляИМОстатки
	               |ГДЕ
	               |	РезервДляИМОстатки.КоличествоОстаток < 0
	               |ИТОГИ
	               |	СУММА(КоличествоОстаток),
	               |	СУММА(Счетчик)
	               |ПО
	               |	ОБЩИЕ";
			 
	Запрос.УстановитьПараметр("ДатаСреза", ЭтаФорма.ДатаСреза);

	Результат = Запрос.Выполнить();
	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаОбщийИтог.Следующий() Тогда
		Счетчик = ВыборкаОбщийИтог.Счетчик;
	Иначе
		Счетчик = 0;
	КонецЕсли;	

    ЭлементыФормы.РезервДляИМ.Заголовок = "По регистру резервов для ИМ " + формат(Счетчик,"ЧН=нет")  + " отрицательных остатков.";				    			 
	Если Счетчик=0 тогда
		ЭлементыФормы.РезервДляИМ.ЦветТекста = webЦвета.ТемноЗеленый;
	КонецЕсли;
			 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(АдресноеХранение.Номенклатура.Код, ВложенныйЗапрос.Номенклатура.Код) КАК Код,
	               |	ЕСТЬNULL(АдресноеХранение.Номенклатура, ВложенныйЗапрос.Номенклатура) КАК Номенклатура,
	               |	ЕСТЬNULL(АдресноеХранение.Склад, ВложенныйЗапрос.Склад) КАК Склад,
	               |	ВложенныйЗапрос.КоличествоОстаток КАК ОстатокНаХранении,
	               |	АдресноеХранение.КоличествоОстаток КАК ОстатокНаАдресномСкладе,
	               |	ЕСТЬNULL(АдресноеХранение.КоличествоОстаток, 0) - ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0) КАК Разница,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(АдресноеХранение.КоличествоОстаток, 0) - ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0) <> 0
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Счетчик
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТоварыАдресноеХранениеОстатки.Номенклатура КАК Номенклатура,
	               |		ТоварыАдресноеХранениеОстатки.Склад КАК Склад,
	               |		СУММА(ТоварыАдресноеХранениеОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |	ИЗ
	               |		РегистрНакопления.ТоварыАдресноеХранение.Остатки(&ДатаСреза, Склад.АдресноеХранение) КАК ТоварыАдресноеХранениеОстатки
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ТоварыАдресноеХранениеОстатки.Номенклатура,
	               |		ТоварыАдресноеХранениеОстатки.Склад) КАК АдресноеХранение
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ТоварыНаОтветственномХраненииОстатки.Номенклатура КАК Номенклатура,
	               |			ТоварыНаОтветственномХраненииОстатки.Склад КАК Склад,
	               |			СУММА(ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |		ИЗ
	               |			РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(&ДатаСреза, Склад.АдресноеХранение) КАК ТоварыНаОтветственномХраненииОстатки
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ТоварыНаОтветственномХраненииОстатки.Номенклатура,
	               |			ТоварыНаОтветственномХраненииОстатки.Склад
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ТоварыНаСкладахОстатки.Номенклатура,
	               |			ТоварыНаСкладахОстатки.Склад,
	               |			СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток)
	               |		ИЗ
	               |			РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаСреза, Склад.АдресноеХранение) КАК ТоварыНаСкладахОстатки
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ТоварыНаСкладахОстатки.Номенклатура,
	               |			ТоварыНаСкладахОстатки.Склад) КАК ВложенныйЗапрос
	               |		ПО АдресноеХранение.Номенклатура = ВложенныйЗапрос.Номенклатура
	               |			И АдресноеХранение.Склад = ВложенныйЗапрос.Склад
	               |ГДЕ
	               |	ЕСТЬNULL(АдресноеХранение.КоличествоОстаток, 0) - ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0) <> 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Код
	               |ИТОГИ
	               |	СУММА(ОстатокНаХранении),
	               |	СУММА(ОстатокНаАдресномСкладе),
	               |	СУММА(Счетчик)
	               |ПО
	               |	ОБЩИЕ";
		 
	Запрос.УстановитьПараметр("ДатаСреза", ЭтаФорма.ДатаСреза);

	Результат = Запрос.Выполнить();
	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий();		

    ЭлементыФормы.ТоварыНаскладахИАдр.Заголовок = "По регистрам товары на складах и адресное хранение " + формат(ВыборкаОбщийИтог.Счетчик,"ЧН=нет") + " отличий.";				    			 		 
	Если ВыборкаОбщийИтог.Счетчик=0 тогда
		ЭлементыФормы.ТоварыНаскладахИАдр.ЦветТекста = webЦвета.ТемноЗеленый;
	КонецЕсли;
		 
			 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	1 КАК Счетчик
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаСреза, ) КАК ТоварыНаСкладахОстатки
	               |ГДЕ
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток < 0
	               |ИТОГИ
	               |	СУММА(КоличествоОстаток),
	               |	СУММА(Счетчик)
	               |ПО
	               |	ОБЩИЕ";
	Запрос.УстановитьПараметр("ДатаСреза", ЭтаФорма.ДатаСреза);

	Результат = Запрос.Выполнить();
	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий();		

    ЭлементыФормы.ТоварыНаСкладах.Заголовок = "По остаткам на складах " + формат(ВыборкаОбщийИтог.Счетчик,"ЧН=нет")  + " отрицательных остатков.";				    			 		  
	Если ВыборкаОбщийИтог.Счетчик=0 тогда
		ЭлементыФормы.ТоварыНаСкладах.ЦветТекста = webЦвета.ТемноЗеленый;
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	ЭтаФорма.ДатаСреза = ТекущаяДата();
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
    
	Макет = ПолучитьМакет("СезонныеЗаказы");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура.Код КАК Код,
		|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
		|	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК Остаток,
		|	1 КАК Счетчик,
		|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК Документ
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(&ДатаСреза, ) КАК ЗаказыПоставщикамСезонныеОстатки
		|ГДЕ
		|	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Документ
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок = Новый ТабличныйДокумент;
	ОбластьЗаголовок.Параметры.РегистрВШапке = "Сезонные заказы поставщикам";
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьГруппуСтрок();

    ОстатокИтого = 0; 
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбластьДетальныхЗаписей.Параметры.ДокументСсылка = ВыборкаДетальныеЗаписи.Документ;
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		ОстатокИтого = ОстатокИтого + ВыборкаДетальныеЗаписи.Остаток;
	КонецЦикла;

	ТабДок.ЗакончитьГруппуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	
	ОбластьПодвал.Параметры.Остаток = ОстатокИтого;
	
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ТолькоПросмотр = Истина;
    ТабДок.Показать();

КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	
	Макет = ПолучитьМакет("СезонныеЗаказы");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамОстатки.Номенклатура.Код КАК Код,
		|	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК Остаток,
		|	1 КАК Счетчик,
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК Документ
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДатаСреза, ) КАК ЗаказыПоставщикамОстатки
		|ГДЕ
		|	ЗаказыПоставщикамОстатки.КоличествоОстаток < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Документ
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок = Новый ТабличныйДокумент;
	ОбластьЗаголовок.Параметры.РегистрВШапке = "Заказы поставщикам";
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьГруппуСтрок();


    ОстатокИтого = 0;
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбластьДетальныхЗаписей.Параметры.ДокументСсылка = ВыборкаДетальныеЗаписи.Документ;
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		ОстатокИтого = ОстатокИтого + ВыборкаДетальныеЗаписи.Остаток;
	КонецЦикла;

	ТабДок.ЗакончитьГруппуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ОбластьПодвал.Параметры.Остаток = ОстатокИтого;
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ТолькоПросмотр = Истина;
    ТабДок.Показать();
	
КонецПроцедуры

Процедура Кнопка6Нажатие(Элемент)
	
	Макет = ПолучитьМакет("СезонныеЗаказы");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПокупателейОстатки.Номенклатура.Код КАК Код,
		|	ЗаказыПокупателейОстатки.ЗаказПокупателя КАК Документ,
		|	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
		|	ЗаказыПокупателейОстатки.КоличествоОстаток КАК Остаток,
		|	1 КАК Счетчик
		|ИЗ
		|	РегистрНакопления.ЗаказыПокупателей.Остатки(&ДатаСреза, ) КАК ЗаказыПокупателейОстатки
		|ГДЕ
		|	ЗаказыПокупателейОстатки.КоличествоОстаток < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Документ
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок = Новый ТабличныйДокумент;
	ОбластьЗаголовок.Параметры.РегистрВШапке = "Заказы покупателей";
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьГруппуСтрок();


    ОстатокИтого = 0;
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбластьДетальныхЗаписей.Параметры.ДокументСсылка = ВыборкаДетальныеЗаписи.Документ;
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		ОстатокИтого = ОстатокИтого + ВыборкаДетальныеЗаписи.Остаток;
	КонецЦикла;

	ТабДок.ЗакончитьГруппуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ОбластьПодвал.Параметры.Остаток = ОстатокИтого;
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ТолькоПросмотр = Истина;
    ТабДок.Показать();

КонецПроцедуры

Процедура Кнопка3Нажатие(Элемент)
	
	Макет = ПолучитьМакет("СезонныеЗаказы");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РезервДляИМОстатки.Номенклатура.Код КАК Код,
		|	РезервДляИМОстатки.КонтрагентДляРезерваИМ КАК Документ,
		|	РезервДляИМОстатки.Номенклатура КАК Номенклатура,
		|	РезервДляИМОстатки.КоличествоОстаток КАК Остаток,
		|	1 КАК Счетчик
		|ИЗ
		|	РегистрНакопления.РезервДляИМ.Остатки(&ДатаСреза, ) КАК РезервДляИМОстатки
		|ГДЕ
		|	РезервДляИМОстатки.КоличествоОстаток < 0";

	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок = Новый ТабличныйДокумент;
	ОбластьЗаголовок.Параметры.РегистрВШапке = "Резерв для ИМ";
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьГруппуСтрок();

   ОстатокИтого = 0;
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		ОстатокИтого = ОстатокИтого + ВыборкаДетальныеЗаписи.Остаток;
	КонецЦикла;

	ТабДок.ЗакончитьГруппуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ОбластьПодвал.Параметры.Остаток = ОстатокИтого;
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ТолькоПросмотр = Истина;
    ТабДок.Показать();
	
КонецПроцедуры

Процедура Кнопка5Нажатие(Элемент)
	
	Макет = ПолучитьМакет("СезонныеЗаказы");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура.Код КАК Код,
		|	ТоварыНаСкладахОстатки.Склад КАК Документ,
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
		|	1 КАК Счетчик
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаСреза, ) КАК ТоварыНаСкладахОстатки
		|ГДЕ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Документ
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок = Новый ТабличныйДокумент;
	ОбластьЗаголовок.Параметры.РегистрВШапке = "Товары на складах";
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьГруппуСтрок(); //НачатьАвтогруппировкуСтрок


	ОстатокИтого = 0;
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		ОстатокИтого = ОстатокИтого + ВыборкаДетальныеЗаписи.Остаток;
	КонецЦикла;

	ТабДок.ЗакончитьГруппуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ОбластьПодвал.Параметры.Остаток = ОстатокИтого;
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ТолькоПросмотр = Истина;
    ТабДок.Показать();
	
КонецПроцедуры

Процедура Кнопка4Нажатие(Элемент)

	Макет = ПолучитьМакет("Различия");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(АдресноеХранение.Номенклатура.Код, ВложенныйЗапрос.Номенклатура.Код) КАК Код,
		|	ЕСТЬNULL(АдресноеХранение.Номенклатура, ВложенныйЗапрос.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(АдресноеХранение.Склад, ВложенныйЗапрос.Склад) КАК Склад,
		|	ВложенныйЗапрос.КоличествоОстаток КАК ОстатокНаХранении,
		|	АдресноеХранение.КоличествоОстаток КАК ОстатокНаАдресномСкладе,
		|	ЕСТЬNULL(АдресноеХранение.КоличествоОстаток, 0) - ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0) КАК Разница,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(АдресноеХранение.КоличествоОстаток, 0) - ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0) <> 0
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Счетчик
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыАдресноеХранениеОстатки.Номенклатура КАК Номенклатура,
		|		ТоварыАдресноеХранениеОстатки.Склад КАК Склад,
		|		СУММА(ТоварыАдресноеХранениеОстатки.КоличествоОстаток) КАК КоличествоОстаток
		|	ИЗ
		|		РегистрНакопления.ТоварыАдресноеХранение.Остатки(&ДатаСреза, Склад.АдресноеХранение) КАК ТоварыАдресноеХранениеОстатки
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТоварыАдресноеХранениеОстатки.Номенклатура,
		|		ТоварыАдресноеХранениеОстатки.Склад) КАК АдресноеХранение
		|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТоварыНаОтветственномХраненииОстатки.Номенклатура КАК Номенклатура,
		|			ТоварыНаОтветственномХраненииОстатки.Склад КАК Склад,
		|			СУММА(ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток) КАК КоличествоОстаток
		|		ИЗ
		|			РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(&ДатаСреза, Склад.АдресноеХранение) КАК ТоварыНаОтветственномХраненииОстатки
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТоварыНаОтветственномХраненииОстатки.Номенклатура,
		|			ТоварыНаОтветственномХраненииОстатки.Склад
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ТоварыНаСкладахОстатки.Номенклатура,
		|			ТоварыНаСкладахОстатки.Склад,
		|			СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток)
		|		ИЗ
		|			РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаСреза, Склад.АдресноеХранение) КАК ТоварыНаСкладахОстатки
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТоварыНаСкладахОстатки.Номенклатура,
		|			ТоварыНаСкладахОстатки.Склад) КАК ВложенныйЗапрос
		|		ПО АдресноеХранение.Номенклатура = ВложенныйЗапрос.Номенклатура
		|			И АдресноеХранение.Склад = ВложенныйЗапрос.Склад
		|ГДЕ
		|	ЕСТЬNULL(АдресноеХранение.КоличествоОстаток, 0) - ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код
		|ИТОГИ
		|	СУММА(ОстатокНаХранении),
		|	СУММА(ОстатокНаАдресномСкладе),
		|	СУММА(Разница),
		|	СУММА(Счетчик)
		|ПО
		|	ОБЩИЕ
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	
	ВыборкаДетальныеЗаписи = ВыборкаОбщийИтог.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;

//		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
//		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());	
	ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
    ТабДок.Показать();
	
КонецПроцедуры
