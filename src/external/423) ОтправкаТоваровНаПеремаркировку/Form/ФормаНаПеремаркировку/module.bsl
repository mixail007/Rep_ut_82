перем СкладБрак, КонтрагентДляПеремаркировки, КатегорияМаркировка;	

Процедура ПриОткрытии()
	НачПериода = НачалоНедели( ТекущаяДата() );
	КонПериода = ТекущаяДата();
КонецПроцедуры

Процедура КоманднаяПанель1Заполнить(Кнопка)
	Контрагент = справочники.Контрагенты.НайтиПоКоду("95728"); // LLC Custom-Service
	Если НЕ ВвестиЗначение(Контрагент,"Выберите поставщика") тогда
		возврат;
	КонецЕсли;	
	 ЭтаФорма.Заголовок = "Обработка  Отправка товаров на перемаркировку (от поставщика "+СокрЛП(Контрагент)+")";
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	 |	ПоступлениеТоваровУслуг.Ссылка как Поступление
	 |ИЗ
	 |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	 |ГДЕ
	 |	ПоступлениеТоваровУслуг.Проведен
	 |	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
	 |	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода";
	 Запрос.УстановитьПараметр("Контрагент", Контрагент);
	 Запрос.УстановитьПараметр("НачПериода", НачПериода);
	 Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода) );
	 Результат = Запрос.Выполнить();
	 Если Результат.Пустой() тогда
		 Предупреждение("За период с "+формат(НачПериода,"ДЛФ=DD")+" по "+формат(КонПериода,"ДЛФ=DD")+"
		 |Нет поступлений от "+строка(Контрагент),30);
		 возврат;
	 КонецЕсли;
	 
 	таблПоступлений.Очистить();
 	таблТовары.Очистить();

	 Выборка = Результат.Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
	    стр1 = таблПоступлений.Добавить();
		стр1.Поступление = Выборка.Поступление;
	 КонецЦикла;
	
	ЗаполнитьТовары(); //все товары!
	
	табл1 = таблТовары.Выгрузить();
	табл1.Свернуть("НомерКонтейнера, Поступление,ЗаказПокупателя", "Количество, КоличествоЗак");
	таблПоступлений = табл1.Скопировать(); 
	
	ЗаданиеНаПеремещение = НайтиЗаданиеНаПеремещение(табл1);
	
КонецПроцедуры

функция НайтиЗаданиеНаПеремещение(табл1)
	зад1 = документы.ЗаданиеНаПеремещение.ПустаяСсылка();
	списокЗаказов = новый СписокЗначений;
	для каждого стр1 из табл1 цикл
		если ЗначениеЗаполнено(стр1.ЗаказПокупателя) тогда
			списокЗаказов.Добавить(стр1.ЗаказПокупателя);
		КонецЕсли;	
	КонецЦикла;	
	Если списокЗаказов.Количество()>0 тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка
		               |ИЗ
		               |	Документ.ЗаданиеНаПеремещение.ЗаказыПокупателей КАК ЗаданиеНаПеремещениеЗаказыПокупателей
		               |ГДЕ
		               |	ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя В (&списокЗаказов)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка.Дата УБЫВ
		               |АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("списокЗаказов", списокЗаказов);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() тогда
		зад1 = выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;	
	возврат зад1;
КонецФункции

функция ПолучитьТекстЗапросаВсеПоступления()
	текст = "ВЫБРАТЬ
	        |	ПоступлениеТоваровУслугТовары.Ссылка.Сделка.НомерКонтейнера КАК НомерКонтейнера,
	        |	ПоступлениеТоваровУслугТовары.Склад,
			|	ЛОЖЬ КАК Выбран,
	        |	ПоступлениеТоваровУслугТовары.Ссылка КАК Поступление,
	         |	ПоступлениеТоваровУслугТовары.Номенклатура.Код как Код,
			 |	ПоступлениеТоваровУслугТовары.Номенклатура,
	        |	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	        |	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК Остаток,
	        |	МАКСИМУМ(ЕстьNull(ВложенныйЗапрос.ЗаказПокупателя, Значение(Документ.ЗаказПокупателя.ПустаяСсылка)) ) КАК ЗаказПокупателя,
	        |	МАКСИМУМ(ВложенныйЗапрос.Количество) КАК КоличествоЗак
	        |ИЗ
	        |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	        |		ПО ПоступлениеТоваровУслугТовары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	        |			И ПоступлениеТоваровУслугТовары.Склад = ТоварыНаСкладахОстатки.Склад
	        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |			ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	        |			ЗаказПокупателяТовары.Количество КАК Количество,
	        |			ЗаказПокупателяТовары.Размещение КАК Размещение,
	        |			ЗаказПокупателяТовары.Ссылка КАК ЗаказПокупателя
	        |		ИЗ
	        |			Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	        |		ГДЕ
	        |			ЗаказПокупателяТовары.Ссылка.Дата МЕЖДУ &НачПериода И &КонПериода
	        |			И ЗаказПокупателяТовары.Ссылка.Контрагент = &Контрагент
	        |			И ЗаказПокупателяТовары.Ссылка.Проведен
	        |			И ЗаказПокупателяТовары.Размещение <> НЕОПРЕДЕЛЕНО) КАК ВложенныйЗапрос
	        |		ПО ПоступлениеТоваровУслугТовары.Номенклатура = ВложенныйЗапрос.Номенклатура
	        |			И ПоступлениеТоваровУслугТовары.Ссылка = ВложенныйЗапрос.Размещение
	        |ГДЕ
	        |	ПоступлениеТоваровУслугТовары.Склад <> &СкладБрак
	        |	И ПоступлениеТоваровУслугТовары.Ссылка В(&СписокПоступлений)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ПоступлениеТоваровУслугТовары.Ссылка,
	        |	ПоступлениеТоваровУслугТовары.Номенклатура,
	        |	ВложенныйЗапрос.Количество,
	        |	ВложенныйЗапрос.ЗаказПокупателя,
	        |	ПоступлениеТоваровУслугТовары.Склад,
	        |	ПоступлениеТоваровУслугТовары.Ссылка.Сделка.НомерКонтейнера";
возврат текст;
КонецФункции

процедура ЗаполнитьТовары(Стр1=неопределено)
	
	 Если Стр1=неопределено тогда
		таблТовары.Очистить();
	 КонецЕсли;

	 Запрос = Новый Запрос;
	 Запрос.Текст = ПолучитьТекстЗапросаВсеПоступления();					
	 Запрос.УстановитьПараметр("Контрагент", КонтрагентДляПеремаркировки );
	 Запрос.УстановитьПараметр("СкладБрак", СкладБрак );
	 Запрос.УстановитьПараметр("НачПериода", НачПериода);
	 Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода) );
	 
	 Если Стр1=неопределено или таблПоступлений.Количество()=1 тогда
	 	Запрос.УстановитьПараметр("СписокПоступлений", таблПоступлений.ВыгрузитьКолонку("Поступление") );
	 иначе
		 Запрос.Текст =  "ВЫБРАТЬ 
		|таблТовары.НомерКонтейнера, таблТовары.Склад, таблТовары.Выбран, таблТовары.Поступление, 
		|таблТовары.Код, таблТовары.Номенклатура, таблТовары.Количество, таблТовары.Остаток, 
		|таблТовары.ЗаказПокупателя, таблТовары.КоличествоЗак
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ &таблТовары как таблТовары;
		|////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ * ИЗ ВТ_Товары как Товары
		|	ОБЪЕДИНИТЬ ВСЕ
		|"+Запрос.Текст;
	 	Запрос.УстановитьПараметр("таблТовары", таблТовары );
	 	СписокПоступлений = новый СписокЗначений;
		СписокПоступлений.Добавить(стр1.Поступление);
	 	Запрос.УстановитьПараметр("СписокПоступлений", СписокПоступлений );
	 КонецЕсли;	
	 Результат = Запрос.Выполнить();
	 таблТовары.Загрузить( Результат.Выгрузить() );
	
КонецПроцедуры

//====================флажки==============================
процедура ОтметитьФлажки(тип=0)
	текСтр1 = ЭлементыФормы.таблПоступлений.ТекущиеДанные;
	колЗак = 0;  Кол=0;
	для каждого стр1 из таблТовары цикл
		Если текСтр1.Поступление = стр1.Поступление и текСтр1.ЗаказПокупателя = стр1.ЗаказПокупателя тогда
			Если тип>=0 тогда
			стр1.Выбран = ?( тип=2, не стр1.Выбран, (тип=1) );     
			КонецЕсли;
			Кол = Кол + стр1.Количество;
			
			Если стр1.Выбран тогда
				Если не стр1.ЗаказПокупателя.Пустая() тогда
				сообщить("Уже есть Заказ покупателя № "+ стр1.ЗаказПокупателя.Номер +" по поступлению № "+стр1.Поступление.Номер, СтатусСообщения.Внимание);
				стр1.Выбран = ЛОЖЬ;
				КонецЕсли;
			КонецЕсли;

			Если стр1.Выбран тогда
				стр1.КоличествоЗак = мин(стр1.Количество, стр1.Остаток);
			иначе
				стр1.КоличествоЗак = 0;
			КонецЕсли;	
			колЗак = колЗак + стр1.КоличествоЗак;
		КонецЕсли;	
	КонецЦикла;	
	
	Если текСтр1.ЗаказПокупателя.Пустая() тогда
		текСтр1.КоличествоЗак = колЗак;
	КонецЕсли;
	
	текСтр1.Количество = Кол;

КонецПроцедуры
//----------------------------------------
Процедура КоманднаяПанель3ВыбратьНом(Кнопка)
	ОтметитьФлажки(1);
КонецПроцедуры
Процедура КоманднаяПанель3СнятьНом(Кнопка)
	ОтметитьФлажки(0);
КонецПроцедуры
Процедура КоманднаяПанель3ПереключитьНом(Кнопка)
	ОтметитьФлажки(2);
КонецПроцедуры

Процедура таблПоступленийПриАктивизацииСтроки(Элемент)
	стр1 = ЭлементыФормы.таблПоступлений.ТекущиеДанные;
	Если стр1 = неопределено тогда 
		возврат 
	КонецЕсли;
	
	Если не стр1.Поступление.Пустая() тогда
		ЭлементыФормы.таблТовары.ОтборСтрок.Поступление.Установить(стр1.Поступление);
	 	Если не стр1.ЗаказПокупателя.Пустая() тогда
		ЭлементыФормы.таблТовары.ОтборСтрок.ЗаказПокупателя.Установить(стр1.ЗаказПокупателя);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура таблПоступленийНомерКонтейнераПриИзменении(Элемент)
	
	стр1 = ЭлементыФормы.таблПоступлений.ТекущиеДанные;
	если стр1 = Неопределено тогда 
		возврат 
	КонецЕсли;
	
	стр1.Поступление = НайтиПоступлениеПоНомеруКонтейнера(стр1.НомерКонтейнера);
	таблПоступленийПоступлениеПриИзменении(неопределено);
КонецПроцедуры

Процедура таблПоступленийПоступлениеПриИзменении(Элемент)
		стр1 = ЭлементыФормы.таблПоступлений.ТекущиеДанные;
	если стр1 = неопределено тогда 
		возврат 
	КонецЕсли;
	ЗаполнитьСтрокуПоПоступлению(стр1);
	таблПоступленийПриАктивизацииСтроки(неопределено);
КонецПроцедуры

функция НайтиПоступлениеПоНомеруКонтейнера(НомерКонтейнера="")
рез = документы.ПоступлениеТоваровУслуг.ПустаяСсылка();
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ПоступлениеТоваровУслуг.Ссылка
|ИЗ
|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
|ГДЕ
|	ПоступлениеТоваровУслуг.Сделка.НомерКонтейнера = &НомерКонтейнера";
Запрос.УстановитьПараметр("НомерКонтейнера", НомерКонтейнера);
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();

Если Выборка.Следующий() тогда
	рез = выборка.Ссылка;
иначе
	Предупреждение("Не найдено поступления по номеру контейнера: "+НомерКонтейнера, 30);
КонецЕсли;
	
	возврат рез;	
КонецФункции	

процедура ЗаполнитьСтрокуПоПоступлению(строка)
	Если строка.Поступление.Пустая() тогда
		возврат;
	КонецЕсли;
	
	если таблТовары.Найти(строка.Поступление, "Поступление")=неопределено тогда
		 ЗаполнитьТовары(строка);
	КонецЕсли;
КонецПроцедуры	

Процедура таблПоступленийПослеУдаления(Элемент)
	Если таблТовары.Количество()=0 тогда
		возврат;
	КонецЕсли;	
	если таблПоступлений.Количество()=0 тогда
		таблТовары.Очистить();
		возврат;
	КонецЕсли;	
	
 Запрос	= новый Запрос;
 Запрос.Текст =  "ВЫБРАТЬ 
		|таблТовары.НомерКонтейнера, таблТовары.Выбран, таблТовары.Поступление, таблТовары.Код, таблТовары.Номенклатура,таблТовары.Количество, таблТовары.Остаток, таблТовары.ЗаказПокупателя, таблТовары.КоличествоЗак
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ &таблТовары как таблТовары;
|выбрать * из ВТ_Товары  как товары
|ГДЕ товары.Поступление в (&СписокПоступлений)";
Запрос.УстановитьПараметр("таблТовары", таблТовары );
Запрос.УстановитьПараметр("СписокПоступлений", таблПоступлений.ВыгрузитьКолонку("Поступление") );
Результат = Запрос.Выполнить();
табл1 = Результат.Выгрузить();
таблТовары.Загрузить( табл1 );
КонецПроцедуры

Процедура таблТоварыПриПолученииДанных(Элемент, ОформленияСтрок)
	для каждого стр1 из ОформленияСтрок цикл
		если стр1.ДанныеСтроки.Выбран тогда
			стр1.ЦветФона = webЦвета.СветлоЖелтый;
		КонецЕсли;
	КонецЦикла;	
	ОтметитьФлажки(-1);//пересчет
КонецПроцедуры

Процедура таблПоступленийПриПолученииДанных(Элемент, ОформленияСтрок)
	для каждого стр1 из ОформленияСтрок цикл
		если стр1.ДанныеСтроки.КоличествоЗак>0 тогда
			стр1.ЦветФона = webЦвета.СветлоЖелтый;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры


//==============================ГЛАВНАЯ ПРОЦЕДУРА ВЫПОЛНЕНИЯ===================================
Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если не ЗаданиеНаПеремещение.Пустая() тогда
		Предупреждение("Уже создано Задание на перемещение № "+ЗаданиеНаПеремещение.Номер, 30);
		возврат;
	КонецЕсли;	
	если таблПоступлений.Количество()=0 тогда
		Предупреждение("Нет поступлений для создания Задание на перемещение!", 30);
		возврат;
	КонецЕсли;	
	
	кол1=0; поз=0;
	для каждого стр1 из таблТовары цикл
		Если не стр1.Выбран тогда
			Продолжить;
		КонецЕсли;	
		кол1= кол1+стр1.КоличествоЗак;
		поз = поз+1;
	КонецЦикла;
	
	Если кол1=0 тогда
		Предупреждение("Не выбраны Товары для создания Задание на перемещение!", 30);
		возврат;
	иначе
		Предупреждение("Выбрано "+строка(поз)+" Товаров ("+строка(кол1)+"шт.) для создания Задание на перемещение.", 30);
	КонецЕсли;	
	
	СоздатьЗаказыПокупателей();   //таблПоступлений - заполняется
		
	СоздатьЗаданиеНаПеремещение();
	
КонецПроцедуры

процедура СоздатьЗаказыПокупателей()
	для каждого стр1 из таблПоступлений цикл
		Если стр1.КоличествоЗак = 0 тогда
			продолжить;
		КонецЕсли;	
		Если стр1.Поступление.Пустая() тогда
			сообщить("В строке № "+строка(стр1.НомерСтроки)+" НЕ заполнено Поступление!", СтатусСообщения.Внимание);
			Продолжить;
		КонецЕсли;	
		Если не стр1.ЗаказПокупателя.Пустая() тогда
			сообщить("Уже есть Заказ покупателя № "+ стр1.ЗаказПокупателя.Номер +" по поступлению № "+стр1.Поступление.Номер, СтатусСообщения.Внимание);
			Продолжить;
		КонецЕсли;
		
		ЗакОб = документы.ЗаказПокупателя.СоздатьДокумент();
		ЗакОб.Дата = ТекущаяДата();
		ЗакОб.Контрагент = КонтрагентДляПеремаркировки;
		ЗакОб.Проверен   = ЛОЖЬ; // обязательно выключен!
		ЗакОб.Подразделение = справочники.Подразделения.НайтиПоКоду("00005");
		ЗакОб.ВводитьТолькоПеремещение = Истина;
		ЗакОб.Склад = ЗакОб.Подразделение.Склад;
		
		ЗаполнитьШапкуДокумента(ЗакОб, глТекущийПользователь);
		
		ЗакОб.УчитыватьНДС    = Истина;
		ЗакОб.СуммаВключаетНДС= Истина;
		ЗакОб.РазрешитьГрузитьДиски 			= Истина;
		ЗакОб.РазрешитьГрузитьТоварыИзСтопЛиста = Истина;
		ЗакОб.Комментарий ="#Для перемаркировки по Поступлению № "+стр1.Поступление.Номер;
		
		товары1 = таблТовары.НайтиСтроки(новый Структура("Поступление, Выбран", стр1.Поступление, Истина ) );
		ЗаполнитьТоварыДокумента(ЗакОб.Товары, товары1, );
		
		Попытка
			ЗакОб.Записать(РежимЗаписиДокумента.Проведение);
			стр1.ЗаказПокупателя = ЗакОб.Ссылка; // в таблПоступлений
			для каждого стр2 из ТаблТовары цикл  // в ТаблТовары
				Если стр2.Поступление = стр1.Поступление 
					и стр2.Выбран тогда
					стр2.ЗаказПокупателя = стр1.ЗаказПокупателя;
				КонецЕсли;
			КонецЦикла;	
			Сообщить("Успешно проведен Заказ покупателя № "+ЗакОб.Номер, СтатусСообщения.Информация);
			
			регСв = РегистрыСведений.КатегорииОбъектов.СоздатьМенеджерЗаписи();
			регСв.Категория = КатегорияМаркировка;
			регСв.Объект = ЗакОб.Ссылка;
			регСв.Активность = истина;
			регСв.Записать();
			
			ЗакОб.ВМаршрут = истина;
			ЗакОб.Проверен = истина;
			ЗакОб.Записать(РежимЗаписиДокумента.Запись);
			Сообщить(" --> Установлен признак [v]'Маркировка' для Заказа покупателя № "+ЗакОб.Номер, СтатусСообщения.Информация);
			
		Исключение
			Сообщить("ОШИБКА при записи Заказа покупателя! "+ОписаниеОшибки(), СтатусСообщения.Внимание );
		КонецПопытки;	
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьТоварыДокумента(закОбТовары, массивСтрок, поступление1)
	для i=0 по массивСтрок.Количество()-1 цикл
		текСтр = закОбТовары.найти(массивСтрок[i].Номенклатура, "Номенклатура");
		Если текСтр=неопределено тогда
			текСтр = закОбТовары.Добавить();
		КонецЕсли;
		
		текСтр.Номенклатура= массивСтрок[i].Номенклатура;
		текСтр.ЕдиницаИзмерения = текСтр.Номенклатура.ЕдиницаХраненияОстатков;
		текСтр.Коэффициент =1;
		
		текСтр.Количество  = текСтр.Количество + массивСтрок[i].КоличествоЗак;
		текСтр.Цена  = 1000; // любая цена!
		текСтр.Сумма = текСтр.Количество * текСтр.Цена;
		текСтр.СтавкаНДС = СтавкаНДСнаДату( ТекущаяДата() );
		текСтр.СуммаНДС  = РассчитатьСуммуНДС(текСтр.Сумма, Истина, Истина, ПолучитьСтавкуНДС(текСтр.СтавкаНДС) ); 
		
		текСтр.Вес = ПолучитьВесНетто( текСтр.Номенклатура ) * текСтр.Количество;
		
		текСтр.Размещение  = поступление1;
		
	КонецЦикла;	
КонецПроцедуры

процедура СоздатьЗаданиеНаПеремещение()
	Задание1 = документы.ЗаданиеНаПеремещение.СоздатьДокумент();
	Задание1.Дата = ТекущаяДата();
	Задание1.ВидОперации = Перечисления.ВидыДвиженийПриходРасход.Расход;
	Задание1.Контрагент  = КонтрагентДляПеремаркировки;
	Задание1.Комментарий = "# для перемаркировки";
	
	ЗаполнитьШапкуДокумента(Задание1, глТекущийПользователь);
	для каждого стр1 из таблПоступлений цикл
		Если стр1.КоличествоЗак = 0 тогда
			продолжить;
		КонецЕсли;	
		Если стр1.ЗаказПокупателя.Пустая() тогда
			Продолжить;
		КонецЕсли;
		
		стр2 = Задание1.ЗаказыПокупателей.Добавить();
		стр2.ЗаказПокупателя = стр1.ЗаказПокупателя;
		стр2.КоличествоПозиций = стр1.ЗаказПокупателя.Товары.Количество();
		стр2.КоличествоШтук = стр1.КоличествоЗак;
		стр2.НомерОчереди  = 1;
	КонецЦикла;	
	
//--------заполнить группы складов---------------
 	табл1 = ПолучитьГруппыСкладов( стр1.ЗаказПокупателя ); 
	Задание1.ГруппыСкладов.Загрузить( табл1 );
//--------заполнить Товары---------------
    табл2 = ПолучитьТоварыСкладыЯчейки( стр1.ЗаказПокупателя ); 
	Задание1.Товары.Загрузить( табл2 );
	
//--------Провести-----------------
    попытка
		Задание1.Записать();
		сообщить("Успешно создан документ "+строка(Задание1), СтатусСообщения.Информация);
		ЗаданиеНаПеремещение = Задание1.Ссылка;
	исключение	
		сообщить("ОШИБКА при создании Задания на перемещение: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
	
КонецПроцедуры

Функция ПолучитьГруппыСкладов( Зак1 )
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	табл.Склад,
	                |	табл.КоличествоЗак КАК КоличествоЗаказано,
	                |	табл.Остаток КАК КоличествоСвободно
	                |ПОМЕСТИТЬ ВТ_Товары
	                |ИЗ
	                |	&ТаблТовары КАК табл
	                |ГДЕ
	                |	табл.ЗаказПокупателя = &Зак1
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ вт.Склад) КАК Склад,
	                |	СУММА(вт.КоличествоЗаказано) КАК КоличествоЗаказано,
	                |	СУММА(вт.КоличествоСвободно) КАК КоличествоСвободно,
	                |	Склады.ГруппаСкладов,
	                |	1 КАК Приоритет,
	                |	ИСТИНА КАК Флаг
	                |ИЗ
	                |	ВТ_Товары КАК вт
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	                |		ПО вт.Склад = Склады.Ссылка
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	Склады.ГруппаСкладов
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	КоличествоЗаказано УБЫВ
	                |АВТОУПОРЯДОЧИВАНИЕ";
	 Запрос.УстановитьПараметр("ТаблТовары",  ТаблТовары);
	 Запрос.УстановитьПараметр("Зак1", Зак1);
	 Результат = Запрос.Выполнить();
	табл1 = Результат.Выгрузить();
	
	ном1=1;
	для каждого стр1 из табл1 цикл
		стр1.Приоритет = ном1;
		ном1=ном1+1;
	КонецЦикла;	
	
	возврат табл1;
КонецФункции	

Функция ПолучитьТоварыСкладыЯчейки( Зак1 )
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	табл.Номенклатура,
	                |	табл.Склад,
	                |	табл.КоличествоЗак КАК КоличествоЗаказано,
	                |	табл.Остаток КАК КоличествоСвободно
	                |ПОМЕСТИТЬ ВТ_Товары
	                |ИЗ
	                |	&ТаблТовары КАК табл
	                |ГДЕ
	                |	табл.ЗаказПокупателя = &Зак1
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	вт.Номенклатура,
	                |	вт.Склад,
	                |	вт.КоличествоЗаказано,
	                |	вт.КоличествоСвободно,
					|	0 как Количество,
	                |	Склады.ГруппаСкладов КАК ГруппаСкладов,
	                |	ЕСТЬNULL(Адреса.АдресХранения, ЗНАЧЕНИЕ(Справочник.АдресаХранения.ПустаяСсылка)) КАК АдресХранения,
	                |	ЕСТЬNULL(Адреса.Количество, 0) КАК КоличествоВАдресе
	                |ИЗ
	                |	ВТ_Товары КАК вт
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	                |		ПО вт.Склад = Склады.Ссылка
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ТоварыАдресноеХранение КАК Адреса
	                |		ПО вт.Склад = Адреса.Склад
	                |			И вт.Номенклатура = Адреса.Номенклатура";
	 Запрос.УстановитьПараметр("ТаблТовары",  ТаблТовары);
	 Запрос.УстановитьПараметр("Зак1", Зак1);
	 Результат = Запрос.Выполнить();
	табл2 = Результат.Выгрузить();
	
	для каждого стр2 из табл2 цикл
		если стр2.КоличествоВАдресе>0 тогда // как в поступлении
			стр2.КоличествоЗаказано = стр2.КоличествоВАдресе;
			стр2.КоличествоСвободно = стр2.КоличествоВАдресе;
		КонецЕсли;	
	КонецЦикла;	
		
	возврат табл2;
КонецФункции	


СкладБрак = справочники.Склады.НайтиПоКоду("02333"); //8000(Тест)
КонтрагентДляПеремаркировки = справочники.Контрагенты.НайтиПоКоду("92621"); //Мамниашвили Л.З.
КатегорияМаркировка = Справочники.КатегорииОбъектов.НайтиПоКоду("00054"); //Маркировка