Перем СтруктураПоиска;
перем ДанныеРасшифровки_1;
перем НомерФайла;

//26.04.2017
процедура ОбрезатьНомер(тел2)
	тел2 = стрЗаменить(тел2,"-","");
	тел2 = стрЗаменить(тел2,"(","");
	тел2 = стрЗаменить(тел2,")","");
	тел2 = стрЗаменить(тел2," ","");
	тел2 = прав(тел2, 6); // 6 последних цифр!
КонецПроцедуры

Процедура КнопкаСформироватьНажатие(Кнопка)
	Начало=ТекущаяДата();
	
	ТЗИтог = Новый ТаблицаЗначений;
	
	ТЗИтог.Колонки.Добавить("Дата");
	ТЗИтог.Колонки.Добавить("Абонент");
	ТЗИтог.Колонки.Добавить("Продолжительность");
	ТЗИтог.Колонки.Добавить("Тип");
	ТЗИтог.Колонки.Добавить("Телефон");
	
	Состояние("Идёт поиск всех телефонов сотрудников и клиентов...");	
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(КонтактнаяИнформация.Объект) = ТИП(Справочник.КонтактныеЛица)
	               |				И ТИПЗНАЧЕНИЯ(КонтактнаяИнформация.Объект.ОбъектВладелец) = ТИП(Справочник.Контрагенты)
	               |			ТОГДА КонтактнаяИнформация.Объект.ОбъектВладелец
	               |		ИНАЧЕ КонтактнаяИнформация.Объект
	               |	КОНЕЦ КАК Объект,
	               |	ЕстьNull(КонтактнаяИнформация.Представление,"""") как Представление
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Тип = Значение(Перечисление.ТипыКонтактнойИнформации.Телефон)
				   |	И ЕстьNull(КонтактнаяИнформация.Представление,"""") ПОДОБНО (""%___"") ";
	Обработать = Запрос.Выполнить().Выгрузить();
	
	Телефоны = новый ТаблицаЗначений;
	для каждого кол1 из Обработать.Колонки цикл
		Телефоны.Колонки.Добавить( кол1.Имя, кол1.ТипЗначения, кол1.Заголовок, кол1.Ширина);
	КонецЦикла;
	
	КС = Новый КвалификаторыСтроки(6);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Телефоны.Колонки.Добавить("Поиск",ОписаниеТиповС);
	
	//Телефоны.Очистить();
	Состояние("Идёт обработка "+строка(Обработать.Количество())+" телефонов сотрудников и клиентов...");	
	Для каждого стр из Обработать Цикл
		ОбработкаПрерыванияПользователя();
		Строка = Стр.Представление;
		Строка = СтрЗаменить(Строка,"(","");
		Строка = СтрЗаменить(Строка,")","");
		Строка = СтрЗаменить(Строка,"-","");
		Строка = СтрЗаменить(Строка," ","");
		Строка = СтрЗаменить(Строка,":","");
		
		Строка = СтрЗаменить(Строка,"+7","8"); //27.04.2017
		Строка = СтрЗаменить(Строка,"доб.",",#");     //+7 (495) 775-91-75 доб. 1-16-24, +7 (985) 234-20-52
		Строка = СтрЗаменить(Строка,"вн.",",#");     // 8 (727) 311-12-24 (вн.7103)
		
		Строка = СтрЗаменить(Строка,"и",",");
		Строка = СтрЗаменить(Строка,".",",");
		Строка = СтрЗаменить(Строка,";",",");
		
		ТекущаяСтрока = СтрЗаменить(Строка, ",", Символы.ПС);
		Для Счетчик = 1 По СтрЧислоСтрок(ТекущаяСтрока) Цикл
			стр1 = СокрЛП(СтрПолучитьСтроку(ТекущаяСтрока, Счетчик));
			Если СтрДлина(стр1)> 2 и найти(стр1,"#")=0 Тогда //от 3х символов и без внутренних!
				
				Если типЗнч(стр.Объект)=тип("СправочникСсылка.Контрагенты") и СтрДлина(стр1)<5 тогда
					продолжить; // вн.номера сотрудников контрагентов 
				КонецЕсли;
				
				Нов = Телефоны.Добавить();
				Нов.Объект = стр.Объект;
				Нов.Поиск = Прав(стр1,6);
			КонецЕсли;
		КонецЦикла;
		//стр.Поиск = Строка;
	КонецЦикла;
	
	
	Тип = 0;
	
	Если Исходящие Тогда
		Тип = 1;
	ИначеЕсли Входящие тогда
		тип = 2;
	КонецЕсли;
	
	
	ЗапросМобильные = Новый Запрос;
	//ЗапросМобильные.УстановитьПараметр("Клиент",Клиент);
	ЗапросМобильные.УстановитьПараметр("Телефоны",Телефоны);
	ЗапросМобильные.УстановитьПараметр("ДатаН",НачалоДня(НачПериода));
	ЗапросМобильные.УстановитьПараметр("ДатаК",КонецДня(КонПериода));
	ЗапросМобильные.УстановитьПараметр("Тип",Тип);
	ЗапросМобильные.УстановитьПараметр("ТолькоВнешние",ТолькоВнешние);
	ЗапросМобильные.УстановитьПараметр("ТолькоКлиенты",ТолькоКлиенты);
	ЗапросМобильные.УстановитьПараметр("ФактАдрес",Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	ЗапросМобильные.УстановитьПараметр("КодВажность","90184"); 
	
	ЗапросМобильные.Текст = "
	|ВЫБРАТЬ
	|КонтактнаяИнформация.Объект,
	|КонтактнаяИнформация.Поле2
	|ПОМЕСТИТЬ Регионы
	|ИЗ
	|РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|ТИПЗНАЧЕНИЯ(КонтактнаяИнформация.Объект) = ТИП(Справочник.Контрагенты)
	|И КонтактнаяИнформация.Вид = &ФактАдрес
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Журнал.Дата, ДЕНЬ) КАК День,
	|	Журнал.ПоискСотрудник КАК НомерСотрудника,
	|	Журнал.ПоискАбонент КАК НомерАбонента,
	|	Журнал.ДлительностьЗвонка,
	|	Журнал.Исход_Вход,
	|	Журнал.НомерАбонента КАК НомерАбонента1,
	|	Журнал.Дата КАК ДеньВремя,
	|	Журнал.Ссылка
	|ПОМЕСТИТЬ Журнал
	|ИЗ
	|	РегистрСведений.ЖурналЗвонков КАК Журнал
	|ГДЕ
	|	Журнал.Дата МЕЖДУ &ДатаН И &ДатаК
	
	//20.04.2017	
	|//ТолькоСвой   И ( Журнал.ПоискСотрудник В (&СвоиТелефоны)  )
	//ИЛИ Журнал.НомерАбонента В (&СвоиТелефоны) 
	|				  
	|	и Журнал.НомерСотрудника <> ""117""
	|   И Журнал.НомерАбонента <> ""117""
	
	|	и Журнал.НомерСотрудника <> ""220""
	|   И Журнал.НомерАбонента <> ""220""
	
	|   И Журнал.ПоискСотрудник <> ""009797""
	|   И Журнал.ПоискАбонент <> ""009797""
	
	|   И ВЫБОР
	|       КОГДА &толькоВнешние = ИСТИНА или &ТолькоКлиенты
	|	    ТОГДА Журнал.НомерАбонента ПОДОБНО ""%_____""
	|       ИНАЧЕ ИСТИНА
	|   КОНЕЦ
	
	//26.04.2017 - для ускорения вывода только по себе... эти условия НЕ нужны!
	
	|//НеТолькоСвой
	//|И (Журнал.НомерСотрудника ПОДОБНО ""___"" 
	//|		или Журнал.НомерСотрудника ПОДОБНО ""10__"" 
	//|		или Журнал.НомерСотрудника ПОДОБНО ""11__"" 
	//|		или Журнал.НомерСотрудника ПОДОБНО ""12__"" 
	//|		или Журнал.НомерСотрудника ПОДОБНО ""9_________"")
	//
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""3__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""4__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""5__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""8__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""7__""
	////|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""9__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""0__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""10_""
	//
	
	|
	//+++ 26.04.2017
	|ИНДЕКСИРОВАТЬ ПО 
	|	НомерСотрудника, НомерАбонента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Телефоны.Объект,
	|	Телефоны.Поиск КАК Представление
	|ПОМЕСТИТЬ Телефоны
	|ИЗ
	|	&Телефоны КАК Телефоны
	|ГДЕ 
	|   Телефоны.Поиск<>""""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Представление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Журнал.НомерСотрудника КАК Абонент,
	|	МАКСИМУМ(Журнал.НомерАбонента1) КАК Номер,
	|	Журнал.ДлительностьЗвонка КАК BillSec,
	|	ВЫБОР
	|		КОГДА Журнал.Исход_Вход = ""Исходящий""
	|			ТОГДА ""Исходящий >>""
	|		ИНАЧЕ ""<< Входящий""
	|	КОНЕЦ КАК Входящий,
	|	МАКСИМУМ(Телефоны.Объект) КАК АбонентФизЛицо,
	|	ВЫБОР
	|		КОГДА Журнал.ДлительностьЗвонка < 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Пропущен,
	|	Журнал.День,
	|	Журнал.ДеньВремя,
	|	//РР Журнал.Ссылка,
	//21.03.2017
	|	Пользователи.НаправлениеПродаж,
	|	МАКСИМУМ(Телефоны1.Объект) КАК Объект
	|ПОМЕСТИТЬ БезГрупп
	|ИЗ
	|	Журнал КАК Журнал
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ (выбрать * из Телефоны как ТелФизЛиц
	|							ГДЕ ТелФизЛиц.Объект ссылка справочник.ФизическиеЛица ) КАК Телефоны 
	|		ПО Журнал.НомерСотрудника = Телефоны.Представление
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Телефоны КАК Телефоны1
	|		ПО Журнал.НомерАбонента = Телефоны1.Представление
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ (выбрать различные п.ФизЛицо, п.НаправлениеПродаж
	|		из справочник.Пользователи как п) как Пользователи
	|		ПО (Телефоны.Объект = Пользователи.ФизЛицо )
	
	|ГДЕ
	|       ВЫБОР
	|		     КОГДА Журнал.НомерСотрудника ПОДОБНО ""______""
	|			     ТОГДА НЕ Телефоны.Объект ЕСТЬ NULL 
	|		     ИНАЧЕ ИСТИНА
	|	    КОНЕЦ
	|     и ВЫБОР
	|            КОГДА &Тип = 1
	|	            ТОГДА Журнал.Исход_Вход = ""Исходящий""
	|            КОГДА &Тип = 2
	|	            ТОГДА Журнал.Исход_Вход = ""Входящий""
	|            ИНАЧЕ ИСТИНА
	|        КОНЕЦ
	|     и  ВЫБОР
	//+++  &НеЗаполнен 
	|			КОГДА &НеЗаполнен 	   
	|	           ТОГДА ( Телефоны1.Объект есть Null ) 
	|					или (&ТолькоКлиенты и выразить(Телефоны1.Объект как Справочник.Контрагенты) = Значение(Справочник.Контрагенты.ПустаяСсылка))
	|					или (&ТолькоКлиенты=ЛОЖЬ И выразить(Телефоны1.Объект как Справочник.Контрагенты) = Значение(Справочник.ФизическиеЛица.ПустаяСсылка))
	
	//+++  Заполнен и Только Клиенты 
	|            КОГДА &ТолькоКлиенты = ИСТИНА и &НеЗаполнен = ЛОЖЬ
	|	           ТОГДА ТИПЗНАЧЕНИЯ(Телефоны1.Объект) = ТИП(Справочник.Контрагенты)
	
	|            ИНАЧЕ ИСТИНА
	|        КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	//21.03.2017
	|	Пользователи.НаправлениеПродаж,
	|	Журнал.НомерСотрудника,
	|	Журнал.ДлительностьЗвонка,
	|	Журнал.День,
	|	Журнал.ДеньВремя,
	|	ВЫБОР
	|		КОГДА Журнал.Исход_Вход = ""Исходящий""
	|			ТОГДА ""Исходящий >>""
	|		ИНАЧЕ ""<< Входящий""
	|	КОНЕЦ
	|   //AA, Журнал.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	БезГрупп.АбонентФизЛицо как Абонент,
	|	СУММА(БезГрупп.BillSec) КАК BillSec
	|ПОМЕСТИТЬ Групп
	|ИЗ
	|	БезГрупп КАК БезГрупп
	|
	|СГРУППИРОВАТЬ ПО
	|	БезГрупп.АбонентФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Телефоны.Объект,
	|	МАКСИМУМ(Телефоны.Представление) КАК Представление
	|ПОМЕСТИТЬ ТолькоВнутренние
	|ИЗ
	|	Телефоны КАК Телефоны
	|ГДЕ
	|	Телефоны.Представление ПОДОБНО ""___""
	|
	|СГРУППИРОВАТЬ ПО
	|	Телефоны.Объект
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА БезГрупп.Абонент ПОДОБНО ""%_____""
	|			ТОГДА ЕСТЬNULL(ТолькоВнутренние.Представление, БезГрупп.Абонент)
	|       КОГДА БезГрупп.Абонент = ""999""
	|			ТОГДА ""Яршинторг""
	|		ИНАЧЕ БезГрупп.Абонент
	|	КОНЕЦ КАК Абонент,
	|	БезГрупп.Номер,
	|	БезГрупп.BillSec,
	|	БезГрупп.Входящий,
	|	БезГрупп.АбонентФизЛицо,
	|	БезГрупп.Пропущен,
	|	БезГрупп.День,
	|	БезГрупп.ДеньВремя,
	|	ВЫБОР
	|       КОГДА БезГрупп.Абонент = ""999""
	|			ТОГДА ""Пропущенные""
	|		ИНАЧЕ БезГрупп.НаправлениеПродаж
	|	КОНЕЦ КАК НаправлениеПродаж,
	//|	БезГрупп.НаправлениеПродаж,
	|	БезГрупп.Объект,
	|   //AA БезГрупп.Ссылка,
	|	Групп.BillSec КАК ОбщТрафик,
	|    ВЫБОР
	|		КОГДА БезГрупп.Абонент ПОДОБНО ""%_____""
	|			ТОГДА ""Сот.*""+БезГрупп.Абонент
	|		ИНАЧЕ     ""Вн.""+БезГрупп.Абонент
	|	КОНЕЦ КАК ТипТелефона,
	|	Регионы.Поле2 КАК Регион,
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(БезГрупп.Объект) = ТИП(Справочник.Контрагенты) 
	|		ТОГДА  БезГрупп.Объект.КатегорияПокупателя
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОсновноеНаправлениеПродаж,
	|	ЕстьNULL(ЗначенияСвойствОбъектов.Значение,0) как Важность,
	|	""Скачать"" КАК Скачать
	|ИЗ
	|	БезГрупп КАК БезГрупп
	|		ЛЕВОЕ СОЕДИНЕНИЕ Групп КАК Групп
	|		ПО БезГрупп.АбонентФизЛицо = Групп.Абонент
	
	|        ЛЕВОЕ СОЕДИНЕНИЕ ТолькоВнутренние КАК ТолькоВнутренние
	|		ПО БезГрупп.АбонентФизЛицо = ТолькоВнутренние.Объект
	|ЛЕВОЕ СОЕДИНЕНИЕ Регионы КАК Регионы
	|		ПО БезГрупп.Объект = Регионы.Объект 	
	//+++ Шарафутдинов 	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО БезГрупп.Объект = ЗначенияСвойствОбъектов.Объект	И ЗначенияСвойствОбъектов.Свойство.Код = &КодВажность	
	//--- Шарафутдинов 	
	|";

	//+++ 20.04.2017 Только свой телефон
	ЗапросМобильные.УстановитьПараметр("НеЗаполнен",НеЗаполнен);
	
услИсключенение = ( СокрЛП(глТекущийПользователь.Код) = "Лапенков" 
				или СокрЛП(глТекущийПользователь.Код) = "Малышев"
				или СокрЛП(глТекущийПользователь.Код) = "Серков" 
				или СокрЛП(глТекущийПользователь.Код) = "Аверкина" 
				или СокрЛП(глТекущийПользователь.Код) = "Голубева В.С."
				или СокрЛП(глТекущийПользователь.Код) = "Филатова С.В."
				
				или СокрЛП(глТекущийПользователь.Код) = "Бондаренко Е.Д. (снабжение)" 
				
				или СокрЛП(глТекущийПользователь.ФизЛицо.Код) =  "С2305" // Марешева  - несколько пользователей на 1 физ.лице	
				или СокрЛП(глТекущийПользователь.Код) = "Лигута А.С."                    // есть ограничение в доп. отборе
				или СокрЛП(глТекущийПользователь.Код) = "Лигута А.С.(руководитель)"      // есть ограничение в доп. отборе
				или СокрЛП(глТекущийПользователь.Код) = "Красюк Н.В."                    // есть ограничение в доп. отборе
				или СокрЛП(глТекущийПользователь.Код) = "Красюк Н.В.(руководитель)"      // есть ограничение в доп. отборе
			
				или РольДоступна("ПравоЗавершенияРаботыПользователей") // IT-отдел !  с 26.04.2017
				  );
				  
	Если ЗначениеЗаполнено(глТекущийПользователь.направлениеПродаж) 
		И НЕ ( услИсключенение ) тогда
		СвойТелефон = "";
		СвоиТелефоны = новый СписокЗначений;
		
		Если ЗначениеЗаполнено(глТекущийПользователь.ФизЛицо) тогда
			СвойТелефон = получитьВнутреннийТелефон281(глТекущийПользователь.ФизЛицо);
			СвойТелефон = сокрЛП(СвойТелефон);
			СвойТелефон = стрЗаменить(СвойТелефон,"-","");  //10-08
			Если СвойТелефон<>"" тогда
				СвоиТелефоны.Добавить(СвойТелефон);
			КонецЕсли;
			
			СвойТелефон2 = получитьВнутреннийТелефон281(глТекущийПользователь.ФизЛицо,"00022"); //Сотовый
			Если СвойТелефон2<>"" тогда
				ОбрезатьНомер(СвойТелефон2);
				СвоиТелефоны.Добавить(СвойТелефон2);
			КонецЕсли;
			
			СвойТелефон2 = получитьВнутреннийТелефон281(глТекущийПользователь.ФизЛицо,"00024"); //Сотовый 2
			Если СвойТелефон2<>"" тогда
				ОбрезатьНомер(СвойТелефон2);
				СвоиТелефоны.Добавить(СвойТелефон2);
			КонецЕсли;
		Иначе
			СвойТелефон2 = получитьВнутреннийТелефон281(глТекущийПользователь, "38841"); // телефон сотрудника!
			Если СвойТелефон2<>"" тогда
				ОбрезатьНомер(СвойТелефон2);
				СвоиТелефоны.Добавить(СвойТелефон2);
			КонецЕсли;
		КонецЕсли;
		
		Если СвоиТелефоны.Количество()=0 тогда
			Если ЗначениеЗаполнено(глТекущийПользователь.ФизЛицо) тогда 
			Предупреждение("У Вас - Не задан ""Внутренний телефон"" в настройках Физ.лица!
		   |Формирование отчета - не возможно!", 60);
		   Иначе   
			Предупреждение("У Вас - Не задан ""Телефон сотрудника"" в настройках Пользователя
						   |       И нет привязки пользователя к физ.лицу!
						   |        Формирование отчета - не возможно!", 60);
			КонецЕсли;
			Возврат;
		КонецЕсли;			   
			
		ЗапросМобильные.УстановитьПараметр("СвоиТелефоны",СвоиТелефоны);
		ЗапросМобильные.Текст = стрЗаменить(ЗапросМобильные.Текст ,"//ТолькоСвой","");
		
//------------------------прослушка---------------------------------
		ЗапросМобильные.Текст = СтрЗаменить(ЗапросМобильные.Текст,"//РР","");
		ЗапросМобильные.Текст = СтрЗаменить(ЗапросМобильные.Текст,"//AA","");
	ИНАЧЕ
		
	//ЗапросМобильные.Текст = стрЗаменить(ЗапросМобильные.Текст ,"//НеТолькоСвой",
	//"И (Журнал.НомерСотрудника ПОДОБНО ""___"" 
	//|		или Журнал.НомерСотрудника ПОДОБНО ""10__"" 
	//|		или Журнал.НомерСотрудника ПОДОБНО ""11__"" 
	//|		или Журнал.НомерСотрудника ПОДОБНО ""12__"" 
	//|		или Журнал.НомерСотрудника ПОДОБНО ""9_________"")
	//
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""3__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""4__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""5__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""8__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""7__""
	////|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""9__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""0__""
	//|	И НЕ Журнал.НомерСотрудника ПОДОБНО ""10_""  ");
	

	КонецЕсли;//Только свой телефон

//------------------------прослушка всех---------------------------------
	если услИсключенение тогда
		ЗапросМобильные.Текст = СтрЗаменить(ЗапросМобильные.Текст,"//РР","");
		ЗапросМобильные.Текст = СтрЗаменить(ЗапросМобильные.Текст,"//AA","");
	Иначе
		ЗапросМобильные.Текст = СтрЗаменить(ЗапросМобильные.Текст,"//РР Журнал.Ссылка","""1"" КАК Ссылка");
		ЗапросМобильные.Текст = СтрЗаменить(ЗапросМобильные.Текст,"//AA","");
	КонецЕсли;
	
	//Сообщить(ЗапросМобильные.Текст);
	
	Состояние("Идёт обработка звонков по условиям. Пожалуйста подождите...");	
	Рез1 = ЗапросМобильные.Выполнить();
	Состояние("Идёт вывод звонков по условиям...");	
	Рез = Рез1.Выгрузить();
	
	ВыполнитьДополнительныйОтборПоМенеджерам(Рез);
	
	//Рез.ВыбратьСтроку();
	//
	//Связь между таблицей значений и именами в СКД ВнешниеНаборыДанных = Новый Структура;
	Состояние("Идёт обработка условий отбора по "+строка(Рез.Количество())+" звонкам...");	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("тз", Рез);
	
	//Если Не РольДоступна("ПолныеПрава") Тогда
	//НовыйЭлементОтбора = ЭтотОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Абонент")).Поле;
	//Набор = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
	//Набор.Отбор.объект.Установить(глТекущийПользователь.ФизЛицо);
	//Набор.Отбор.Вид.Установить(Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38840"));
	//набор.Прочитать();
	//если Набор.Количество() > 0 Тогда
	//	Тел = Набор[0].Представление;
	//иначе
	//	Тел = "";
	//КонецЕсли;
	//НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	//Список = Новый СписокЗначений;
	//Группа = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов");
	//Если ЗначениеЗаполнено(Группа) Тогда
	//	Для Каждого стр из Группа.ПользователиГруппы Цикл
	//   	  Набор = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
	//		 Набор.Отбор.объект.Установить(стр.Пользователь.ФизЛицо);
	//		 Набор.Отбор.Вид.Установить(Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38840"));
	//		 набор.Прочитать();
	//		 если Набор.Количество() > 0 Тогда
	//			 список.Добавить(Набор[0].Представление);
	//	 	  КонецЕсли;
	//	 КонецЦикла;
	//	 список.Добавить(Тел);
	//КонецЕсли;
	//НовыйЭлементОтбора.ПравоеЗначение = список;
	//КонецЕсли;
	
	//НовыйЭлементОтбора = ЭтотОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Абонент")).Поле;
	
	
	ДанныеРасшифровки_ = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	если СокрЛП(глТекущийПользователь.Код) = "Лапенков" 
		или СокрЛП(глТекущийПользователь.Код) = "Малышев"
		или СокрЛП(глТекущийПользователь.Код) = "Плотников"
		или СокрЛП(глТекущийПользователь.Код) = "Аверкина"
		или СокрЛП(глТекущийПользователь.Код) = "Серков" тогда
		МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки_);
	иначе
		//МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.ПолучитьМакет("Макет2"), ЭтотОбъект.ПолучитьМакет("Макет2").НастройкиПоУмолчанию, ДанныеРасшифровки_);
		МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.ПолучитьМакет("Макет2"), ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки_);
	КонецЕсли;
	
	
	
	
	
	//Компоновка данных 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки_);
	
	//Вывод результата 
	ДокументРезультат=ЭлементыФормы.ПолеТабличногоДокумента1;
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	//ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Состояние("Идёт вывод информации по звонкам...");	
	ПроцессорВывода.НачатьВывод();
	
	ДанныеРасшифровки_1 = ДанныеРасшифровки_;
	
	ТаблицаЗафиксирована = Ложь;
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();
		Если ЭлементРезультата= Неопределено Тогда
			Прервать;
		Иначе
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
			Если Не ТаблицаЗафиксирована
				И ЭлементРезультата.ЗначенияПараметров.Количество() >  0 Тогда
				
				ТаблицаЗафиксирована = Истина;
				ДокументРезультат.ФиксацияСверху = ДокументРезультат.ВысотаТаблицы - 1;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ПроцессорВывода.ЗакончитьВывод();
	
	Состояние("Идёт группировка...");	
	ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(3);
	ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(2);
	//ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(1);
	//ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(0);
	Состояние(" ");	
	
	//
	//Сообщить("Время выполнения: "+(ТекущаяДата()-Начало));
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура _СменаВариантаНастройки (Элемент) 
	
если СокрЛП(глТекущийПользователь.Код) = "Лапенков" 
	или СокрЛП(глТекущийПользователь.Код) = "Малышев"
	или СокрЛП(глТекущийПользователь.Код) = "Плотников"
	или СокрЛП(глТекущийПользователь.Код) = "Серков"
	или СокрЛП(глТекущийПользователь.Код) = "Аверкина" тогда
	СхемаКомпоновкиДанных1 = СхемаКомпоновкиДанных;
иначе
	СхемаКомпоновкиДанных1 = ЭтотОбъект.ПолучитьМакет("Макет2");
КонецЕсли;
	
Для каждого Настройка Из СхемаКомпоновкиДанных1.ВариантыНастроек Цикл 
если Элемент.Текст = Настройка.Представление тогда 
КомпоновщикНастроек.ЗагрузитьНастройки(Настройка.Настройки); 
//УстановитьВидимостьОтбора(); 
//ОбновитьЗаголовок(); 
//ОбновитьСтрокуПериода(); 
//ОбновитьКнопкиИстории(); 
//УстановитьВидимостьЗаголовка(); 
//УстановитьВидимостьПараметров(); 
прервать; 
конецЕсли; 
КонецЦикла;

КонецПроцедуры 

Процедура УстановитьВариантыНастроек()
если СокрЛП(глТекущийПользователь.Код) = "Лапенков" 
	или СокрЛП(глТекущийПользователь.Код) = "Малышев"
	или СокрЛП(глТекущийПользователь.Код) = "Плотников"
	или СокрЛП(глТекущийПользователь.Код) = "Аверкина"
	или СокрЛП(глТекущийПользователь.Код) = "Серков" тогда
	СхемаКомпоновкиДанных1 = СхемаКомпоновкиДанных;
иначе
	СхемаКомпоновкиДанных1 = ЭтотОбъект.ПолучитьМакет("Макет2");
КонецЕсли;

КП = ЭлементыФормы.ДействияФормы; 
НоваяКнопка = КП.Кнопки.Вставить(1,"_ВариантыОтчетов", ТипКнопкиКоманднойПанели.Подменю, "Варианты отчетов", ); 
НовоеДействие = Новый Действие("_СменаВариантаНастройки"); 
ч = 1; 
Для каждого Настройка Из СхемаКомпоновкиДанных1.ВариантыНастроек Цикл 
НоваяКнопка = КП.Кнопки._ВариантыОтчетов.Кнопки.Добавить("Вариант"+Строка(ч), ТипКнопкиКоманднойПанели.Действие, 
Настройка.Представление, 
НовоеДействие); 

ч = ч + 1; 
КонецЦикла; 
КонецПроцедуры

Процедура ПриОткрытии()
	УстановитьВариантыНастроек();
	НомерФайла = 0;
	
	Запрос = Новый Запрос;
	запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЖурналЗвонков.Дата КАК Дата,
	               |	ЖурналЗвонков.НомерСотрудника,
	               |	ЖурналЗвонков.НомерАбонента,
	               |	ЖурналЗвонков.ПоискСотрудник,
	               |	ЖурналЗвонков.ПоискАбонент,
	               |	ЖурналЗвонков.Сотудник,
	               |	ЖурналЗвонков.Контрагент,
	               |	ЖурналЗвонков.ДлительностьЗвонка,
	               |	ЖурналЗвонков.Исход_Вход,
	               |	ЖурналЗвонков.Ссылка
	               |ИЗ
	               |	РегистрСведений.ЖурналЗвонков КАК ЖурналЗвонков
	               |ГДЕ
	               |	ЖурналЗвонков.ПоискСотрудник ПОДОБНО ""%_____""
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата УБЫВ";
	Рез = Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		
		ЭлементыФормы.Надпись3.Значение = "Последняя загрузка мобильных звонков: " + Строка(Рез[0].Дата);
		
	Иначе
		
		ЭлементыФормы.Надпись3.Значение = "Последняя загрузка мобильных звонков не производилась!!!";
		
	КонецЕсли;
	
	НачПериода = НачалоНедели( ТекущаяДата() ) - 7*86400; //начало прошлой недели!
    КонПериода = ТекущаяДата();
КонецПроцедуры

Процедура ПолеТабличногоДокумента1ОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
    // Вставить содержимое обработчика.
    Перем ВыполненноеДействие;
    СтандартнаяОбработка = Ложь;
    СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

    //Создадим и инициализируем обработчик расшифровки                    
    ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки_1, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
   																	  
    //ДоступныеДействия = Новый Массив();
    //ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
    //ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
    //////ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
    ////ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
    ////ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
    //////ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
    //
    ////Добавляем собственные действия 
    //Нов = Новый СписокЗначений;
    //Нов.Добавить("Воспроизвести");

    
   //Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия,ноВ);
    
    //Обрабатываем собственные действия 
   //Если ВыполненноеДействие = "Воспроизвести" Тогда
   ЭлементРасшифровкиДанных = ДанныеРасшифровки_1.Элементы[Расшифровка];
   ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
   СсылкаНаЗапись = ЭлементРасшифровкиДанныхПоля.Значение;
   если найти(СсылкаНаЗапись,".wav")>0 Тогда
	   СсылкаНаЗапись = СтрЗаменить(СсылкаНаЗапись,"\/","/");
	   HTTP = Новый HTTPСоединение("192.168.254.211");       
	   НомерФайла = НомерФайла+1;
	   HTTP.Получить( Новый HTTPЗапрос("/download.php?url=" + СсылкаНаЗапись), КаталогВременныхФайлов()+"phone"+Строка(НомерФайла)+".wav");	
	   
	   ЗапуститьПриложение(КаталогВременныхФайлов()+"phone"+Строка(НомерФайла)+".wav");
	   
   иначеЕсли найти(СсылкаНаЗапись,"Скачать")>0 Тогда   
	   //сохранение
	   Режим = РежимДиалогаВыбораФайла.Сохранение; 
	   ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(Режим); 
	   ДиалогСохраненияФайла.ПолноеИмяФайла = "phone"+Строка(НомерФайла)+".wav"; 
	   Фильтр = "Звуковой файл(*.wav)|*.wav";                 
	   ДиалогСохраненияФайла.Фильтр = Фильтр; 
	   ДиалогСохраненияФайла.МножественныйВыбор = Ложь; 
	   ДиалогСохраненияФайла.Заголовок = "Сохраните файл"; 
	   Если ДиалогСохраненияФайла.Выбрать() Тогда 
		   ПутьКФайлу = ДиалогСохраненияФайла.ПолноеИмяФайла; 
		   // выбрали файл, сохраняем в него данные
		   // код... 
		   ЭлементРасшифровкиДанных = ДанныеРасшифровки_1.Элементы[Расшифровка-1];
		   ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
		   СсылкаНаЗапись = ЭлементРасшифровкиДанныхПоля.Значение;    
		   
		   Если СсылкаНаЗапись = "1" тогда
			   Сообщить("Вам не требуется прослушивание звонков" );
			   Возврат;
		   КонецЕсли;
		   
		   СсылкаНаЗапись = СтрЗаменить(СсылкаНаЗапись,"\/","/");
		   HTTP = Новый HTTPСоединение("192.168.254.211");       
		   НомерФайла = НомерФайла+1;
		   HTTP.Получить( Новый HTTPЗапрос("/download.php?url=" + СсылкаНаЗапись), ПутьКФайлу);	
		   
		   //ЗапуститьПриложение(КаталогВременныхФайлов()+"phone"+Строка(НомерФайла)+".wav");   
		   
	   КонецЕсли;   
	   
   иначе
	   
	    ОбработкаРасшифровки.ОткрытьЗначение(ЭлементРасшифровкиДанных.Идентификатор, новый ПолеКомпоновкиДанных(ЭлементРасшифровкиДанныхПоля.Поле));
	   
   КонецЕсли;
   //КонецЕсли;

	
КонецПроцедуры

Процедура ИсходящиеПриИзменении(Элемент)
	Если Исходящие Тогда
		Входящие = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ВходящиеПриИзменении(Элемент)
	Если Входящие Тогда
		Исходящие = Ложь;
	КонецЕсли;
КонецПроцедуры






Процедура ВыполнитьДополнительныйОтборПоМенеджерам(Рез)
	
	МасГрпНаправлПродаж = Новый Массив();
	глТекущийПользовательКод = СокрЛП(глТекущийПользователь.Код);
 //ИЛИ глТекущийПользовательКод = "Королев С." 	
	Если глТекущийПользовательКод = "Бондаренко Е.Д. (снабжение)"Тогда
		МасГрпНаправлПродаж.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(21));  //  3, Отдел развития
		МасГрпНаправлПродаж.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(19));  //  1, Отдел продаж по Московскому региону
	ИначеЕсли глТекущийПользовательКод = "Филатова С.В." Тогда
		МасГрпНаправлПродаж.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(20));  //  2. Отдел региональных продаж
	ИначеЕсли
		глТекущийПользовательКод = "Марешева И.Г."
		или глТекущийПользовательКод = "Марешева (Москва)"
		или глТекущийПользовательКод = "Марешева (Новый)"
		или глТекущийПользовательКод = "Марешева И.Г. (снабжение)" Тогда
		МасГрпНаправлПродаж.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(22));  //  4. Отдел по работе с филиалами
	ИначеЕсли глТекущийПользовательКод = "Лигута А.С." ИЛИ глТекущийПользовательКод = "Лигута А.С.(руководитель)"
			ИЛИ глТекущийПользовательКод = "Красюк Н.В." ИЛИ глТекущийПользовательКод = "Красюк Н.В.(руководитель)" Тогда
		МасГрпНаправлПродаж.Добавить(глТекущийПользователь.НаправлениеПродаж);  // 
	КонецЕсли;
	
	Если МасГрпНаправлПродаж.Количество() > 0 Тогда
		НаложитьОтборПоМенеджерам(Рез, МасГрпНаправлПродаж);
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьДополнительныйОтборПоМенеджерам()

Функция НаложитьОтборПоМенеджерам(Рез, МасГрпНаправлПродаж)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ * 
	|	ПОМЕСТИТЬ втРез
	|	из &тзРез КАК тзРез
	|;	
	|ВЫБРАТЬ * 
	|Из втРез КАК втРез
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|ВЫБРАТЬ * 
	|
	|ИЗ
	|	Справочник.НаправленияПродаж КАК НаправленияПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО НаправленияПродаж.Ссылка = Пользователи.НаправлениеПродаж
	|ГДЕ
	|	НаправленияПродаж.Ссылка В ИЕРАРХИИ(&ПапкаРуководителя)) КАК зтМенеджеры
	|ПО 	
	|	втРез.АбонентФизЛицо = зтМенеджеры.ФизЛицо";
	
	Запрос.УстановитьПараметр("ПапкаРуководителя", МасГрпНаправлПродаж);
	Запрос.УстановитьПараметр("тзРез"            , Рез);
	
	Результат = Запрос.Выполнить();
	Рез       = Результат.Выгрузить();
	
КонецФункции // НаложитьОтборПоМенеджерам()


 //20.04.2017
функция получитьВнутреннийТелефон281(Объект1, КодВида="38840")
	пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Объект", Объект1 );
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Телефон );
	Запрос.УстановитьПараметр("Вид", справочники.ВидыКонтактнойИнформации.НайтиПоКоду(КодВида) ); // Внутренний телефон
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() тогда
		рез = СокрЛП(выборка.Представление);
	иначе рез = "";
	КонецЕсли;

	возврат рез;
КонецФункции	 