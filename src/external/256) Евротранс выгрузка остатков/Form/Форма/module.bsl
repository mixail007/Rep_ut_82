
Функция ПолучитьРазмерыШины(Типоразмер)
	
	СтруктураРазмеров = Новый Структура("Ширина,Высота,Диаметр");
	Если Сред(Типоразмер,4,1)<>"/" или Сред(Типоразмер,7,1)<>"R" Тогда
		//грузовые
		Сообщить(Типоразмер);
		НачалоДиаметра 			= Найти(Типоразмер,"R");
		СтруктураРазмеров.Диаметр = Сред(Типоразмер,НачалоДиаметра+1);
		СтруктураРазмеров.Ширина = Лев(Типоразмер,3);
		СтруктураРазмеров.Высота = "";//Сред(Типоразмер,5,2);
	Иначе
		СтруктураРазмеров.Диаметр = Сред(Типоразмер,8);
		СтруктураРазмеров.Ширина = Лев(Типоразмер,3);
		СтруктураРазмеров.Высота = Сред(Типоразмер,5,2);
	КонецЕсли;
	Возврат СтруктураРазмеров;
	
КонецФункции

Функция ПолучитьРазмерыДиска(Типоразмер)
	
	//Разбор диска на размеры 
	//R15 6.0/5*112 ET37 d57.1
	//6x15/5x112 ET37 D57.1
	
	СтруктураРазмеров = Новый Структура("Ширина,Диаметр,Сверловка,ET_Вылет,Ступица,ДиаметрОтверстия");
	
	НачалоДиаметра 			= Найти(Типоразмер,"x");
	НачалоШирины 			= 1;
	НачалоСверловки			= Найти(Типоразмер,"/");
	НачалоДиаметраОтверстия = Найти(Сред(Типоразмер, НачалоСверловки, СтрДлина(Типоразмер)-НачалоСверловки), "x")+НачалоСверловки-1;
	НачалоВылета 			= Найти(Типоразмер,"ET");
	НачалоСтупицы 			= Найти(Типоразмер,"D");
	
	СтруктураРазмеров.Диаметр = Сред(Типоразмер,НачалоДиаметра+1,НачалоСверловки-НачалоДиаметра-1);
	СтруктураРазмеров.Ширина = Сред(Типоразмер, НачалоШирины,НачалоДиаметра-НачалоШирины);
	СтруктураРазмеров.Сверловка = Сред(Типоразмер,НачалоСверловки+1,1);
	СтруктураРазмеров.ДиаметрОтверстия = Сред(Типоразмер,НачалоДиаметраОтверстия+1,НачалоВылета-НачалоДиаметраОтверстия-2);
	СтруктураРазмеров.ET_Вылет = Сред(Типоразмер,НачалоВылета+2,НачалоСтупицы-НачалоВылета-3);
	СтруктураРазмеров.Ступица = Сред(Типоразмер,НачалоСтупицы+1);
	
	Возврат СтруктураРазмеров;
	
КонецФункции


Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	МинДиски = Константы.МинимальнаяЦенаДиска.Получить();
	//МинШины = Константы.МинимальнаяЦенаШины.Получить();
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ЭтотОбъект.ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(ОбластьЗаголовок);
	ОбластьДанные = Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	Запрос = Новый Запрос;
	СписокПодразделений = Новый СписокЗначений;
	Если ЭлементыФормы.Переключатель1.Значение = 1 Тогда
		Запрос.УстановитьПараметр("Подразделение", Справочники.Подразделения.НайтиПоКоду("00005"));
		СписокПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("00005"));
		СписокПодразделений.Добавить(Справочники.Подразделения.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("Подразделение", Справочники.Подразделения.НайтиПоКоду("00112"));
		СписокПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("00112"));
	КонецЕсли;
	Запрос.УстановитьПараметр("СписокПодразделений", СписокПодразделений);
	
	Запрос.УстановитьПараметр("ЛегковыеЛетние", Справочники.Номенклатура.НайтиПоКоду("0060101"));
	Запрос.УстановитьПараметр("ЛегковыеЗимние", Справочники.Номенклатура.НайтиПоКоду("0060103"));
	Запрос.УстановитьПараметр("ЛегкогрузовыеЛетние", Справочники.Номенклатура.НайтиПоКоду("0060106"));
	Запрос.УстановитьПараметр("ЛегкогрузовыеЗимние", Справочники.Номенклатура.НайтиПоКоду("0081439"));
	Запрос.УстановитьПараметр("ДискиГрузовые", Справочники.Номенклатура.НайтиПоКоду("9004163"));
	Запрос.УстановитьПараметр("ДискиЛегковые", Справочники.Номенклатура.НайтиПоКоду("0001752"));
	Запрос.УстановитьПараметр("ШиныГрузовые", Справочники.Номенклатура.НайтиПоКоду("0001748"));
	Запрос.УстановитьПараметр("СХ", Справочники.Номенклатура.НайтиПоКоду("0001750"));
	
	ПроизводителиКАМА = Новый СписокЗначений;
	ПроизводителиКАМА.Добавить(Справочники.Производители.НайтиПоКоду("39")); //НкШЗ
	ПроизводителиКАМА.Добавить(Справочники.Производители.НайтиПоКоду("3193")); //Viatti
	Запрос.УстановитьПараметр("НкШЗ", ПроизводителиКАМА);
	Запрос.УстановитьПараметр("Крепеж", Справочники.Номенклатура.НайтиПоКоду("0000701"));
	Запрос.УстановитьПараметр("Диски", Справочники.Номенклатура.НайтиПоКоду("0001752"));
	Запрос.УстановитьПараметр("Шины", Справочники.Номенклатура.НайтиПоКоду("0001746"));
	Запрос.УстановитьПараметр("АКБ", Справочники.Номенклатура.НайтиПоКоду("0080021"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
	               |			ТОГДА 50
	               |		ИНАЧЕ ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
	               |	КОНЕЦ КАК СвободныйОстаток,
	               |	ВЫБОР
	               |		КОГДА ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&ЛегковыеЛетние)
	               |				ИЛИ ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&ЛегкогрузовыеЛетние)
	               |			ТОГДА 90
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&ЛегковыеЗимние)
	               |						ИЛИ ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&ЛегкогрузовыеЗимние)
	               |					ТОГДА 91
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&ДискиГрузовые)
	               |							ТОГДА 95
	               |						ИНАЧЕ ВЫБОР
	               |								КОГДА ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&ДискиЛегковые)
	               |									ТОГДА 94
	               |								ИНАЧЕ ВЫБОР
	               |										КОГДА ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&ШиныГрузовые)
	               |											ТОГДА 93
	               |										ИНАЧЕ ВЫБОР
	               |												КОГДА ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&СХ)
	               |													ТОГДА 96
	               |												ИНАЧЕ 30
	               |											КОНЕЦ
	               |									КОНЕЦ
	               |							КОНЕЦ
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Группа
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			,
	               |			(НЕ Склад.ЗапретитьИспользование)
	               |				И " + ?(ЭлементыФормы.Переключатель1.Значение=1, "НЕ", "") + " Склад.Транзитный
	               |				И Склад.Подразделение В(&СписокПодразделений)
	               |				И (НЕ Номенклатура.Производитель В(&НкШЗ))
				   |				И ((Номенклатура В ИЕРАРХИИ (&Диски))
				   |				ИЛИ (Номенклатура В ИЕРАРХИИ (&Шины)))
				//   |				ИЛИ (Номенклатура В ИЕРАРХИИ (&АКБ)))
				   |				И (НЕ Номенклатура В ИЕРАРХИИ (&Крепеж))
				   |) КАК ТоварыНаСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	               |				,
	               |				ЗаказПокупателя.Проверен
	               |					И " + ?(ЭлементыФормы.Переключатель1.Значение=1, "НЕ", "") + " ЗаказПокупателя.Транзит
	               |					И ЗаказПокупателя.Подразделение = &Подразделение
				   //|					И (НЕ Номенклатура.Производитель = &НкШЗ)
				   //|					И (Номенклатура В ИЕРАРХИИ (&Диски))
				   //|					И (Номенклатура В ИЕРАРХИИ (&Шины))
				   //|					И (Номенклатура В ИЕРАРХИИ (&АКБ))
				   //|					И НЕ (Номенклатура В ИЕРАРХИИ (&Крепеж))
				   |) КАК ЗаказыПокупателейОстатки
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура";
				   
	Результат = Запрос.Выполнить().Выгрузить();
	ТаблицаНоменклатуры = Результат.ВыгрузитьКолонку("Номенклатура");
	ТаблицаЦен = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(Справочники.Контрагенты.НайтиПоКоду("93273"), ТаблицаНоменклатуры);
	Если ТипЗнч(ТаблицаЦен) = Тип("Строка") тогда // нет политики ценообразования!
		ТаблицаЦен  = Новый ТаблицаЗначений;
		ТаблицаЦен  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Справочники.Контрагенты.НайтиПоКоду("93273"), ТаблицаНоменклатуры); 
		Если ТипЗнч(ТаблицаЦен) = Тип("Строка") тогда // нет политики ценообразования!
			//Предупреждение(табЗнач1);
			Сообщить("Ошибка при пересчете по регистрам правил ценообразования: "+ТаблицаЦен, СтатусСообщения.Внимание); 
			Возврат;
		Иначе
			Сообщить("---- Цены пересчитаны по регистрам: ""Правила ценообразования"" и ""Правила Ценообразования Общие"" ----");
		КонецЕсли;
	КонецЕсли;	
	
	Для каждого СтрРезультат ИЗ Результат Цикл
		Если СтрРезультат.СвободныйОстаток > 0 Тогда
						
			Цена = 0;
			СтрЦен = ТаблицаЦен.Найти(СтрРезультат.Номенклатура, "Номенклатура");
			Если НЕ СтрЦен = Неопределено Тогда
				Цена = СтрЦен.МинимальнаяЦена;
			КонецЕсли;
			
			Если СтрРезультат.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
				Если Цена = 0 Тогда
					Сообщить("Для номенклатуры не назначена цена: " + СтрРезультат.Номенклатура.Код + " " + СтрРезультат.Номенклатура.Наименование);
					Продолжить;
				КонецЕсли;
			ИначеЕсли СтрРезультат.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
				Если Цена < МинДиски Тогда
					Если Цена = 0 Тогда
						Продолжить;
					Иначе
						Цена = МинДиски;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ОбластьДанные.Параметры.Код					 = СтрРезультат.Номенклатура.Код;
			ОбластьДанные.Параметры.Наименование		 = СтрРезультат.Номенклатура;
			ОбластьДанные.Параметры.Цена				 = Цена;
			ОбластьДанные.Параметры.Количество 			 = СтрРезультат.СвободныйОстаток;
			ОбластьДанные.Параметры.Группа	 			 = СтрРезультат.Группа;
			Если СтрРезультат.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
				//Если СтрРезультат.Номенклатура.Модель.Сезон = Перечисления.ТипыСезонности.Грузовые ИЛИ СтрРезультат.Номенклатура.Модель = Справочники.Модели.ПустаяСсылка() Тогда
				//	СтруктураРазмеров = Неопределено;
				//	СтруктураРазмеров = ПолучитьРазмерыШины(СтрРезультат.Номенклатура.Типоразмер);
				//	Если НЕ СтруктураРазмеров = Неопределено Тогда
				//		ОбластьДанные.Параметры.Диаметр 		 = СтруктураРазмеров.Диаметр;
				//		ОбластьДанные.Параметры.Ширина	 		 = СтруктураРазмеров.Ширина;
				//		ОбластьДанные.Параметры.Высота	 		 = "";
				//	Иначе
				//		ОбластьДанные.Параметры.Диаметр 		 = "";
				//		ОбластьДанные.Параметры.Ширина	 		 = "";
				//		ОбластьДанные.Параметры.Высота	 		 = "";
				//	КонецЕсли;
				//Иначе
					ОбластьДанные.Параметры.Диаметр 		 = ?(СтрРезультат.Номенклатура.Типоразмер.Диаметр = "", "", "R" + СтрРезультат.Номенклатура.Типоразмер.Диаметр);
					ОбластьДанные.Параметры.Ширина	 		 = ?(СтрРезультат.Номенклатура.Типоразмер.ШиринаВДюймах = "", СтрРезультат.Номенклатура.Типоразмер.Ширина, СтрРезультат.Номенклатура.Типоразмер.ШиринаВДюймах);
					ОбластьДанные.Параметры.Высота	 		 = СтрРезультат.Номенклатура.Типоразмер.Высота;
				//КонецЕсли;
				ОбластьДанные.Параметры.Вылет	 		 = "";
				ОбластьДанные.Параметры.Ступица	 		 = "";
				ОбластьДанные.Параметры.Сверловка 		 = "";
			ИначеЕсли СтрРезультат.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
				ОбластьДанные.Параметры.Диаметр 		 = СтрРезультат.Номенклатура.Типоразмер.Диаметр;
				ОбластьДанные.Параметры.Ширина	 		 = СтрРезультат.Номенклатура.Типоразмер.Ширина;
				ОбластьДанные.Параметры.Высота	 		 = "";
				ОбластьДанные.Параметры.Вылет	 		 = СтрРезультат.Номенклатура.Типоразмер.Вылет;
				ОбластьДанные.Параметры.Ступица	 		 = СтрРезультат.Номенклатура.Типоразмер.ДиаметрСтупицы;
				ОбластьДанные.Параметры.Сверловка 		 = ?(СтрРезультат.Номенклатура.Типоразмер.КоличествоОтверстий = "", "", СтрРезультат.Номенклатура.Типоразмер.КоличествоОтверстий+"x"+СтрРезультат.Номенклатура.Типоразмер.PCD);
			Иначе
				ОбластьДанные.Параметры.Диаметр 		 = "";
				ОбластьДанные.Параметры.Ширина	 		 = "";
				ОбластьДанные.Параметры.Высота	 		 = "";
				ОбластьДанные.Параметры.Вылет	 		 = "";
				ОбластьДанные.Параметры.Ступица	 		 = "";
				ОбластьДанные.Параметры.Сверловка 		 = "";
			КонецЕсли;
			ОбластьДанные.Параметры.Производитель		 = СтрРезультат.Номенклатура.Производитель;
			ТабДок.Вывести(ОбластьДанные);
			
		КонецЕсли;
	КонецЦикла;
	
	ТабДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLS);
	ТабДок.Показать();
	Сообщить("Файл сформирован");
	
КонецПроцедуры

Процедура ИмяФайлаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДиалогФыбораФайла								=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);		
	ДиалогФыбораФайла.Фильтр						=	"Файл Excel (*.xls)|*.xls";
	ДиалогФыбораФайла.Расширение					=	"xls";
	ДиалогФыбораФайла.Заголовок						=	"Выберите файл";
	ДиалогФыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогФыбораФайла.ИндексФильтра					=	0;
	ДиалогФыбораФайла.ПолноеИмяФайла				=	Элемент.Значение;
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла	=	Ложь;
	
	Если ДиалогФыбораФайла.Выбрать() Тогда
		Элемент.Значение = ДиалогФыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры
