// alo <<
Процедура ЗаписатьИзмененияПоДокументам1С(МассивДокументов, Ини, КаталогНастроек) Экспорт
	// проставляет статусы по идентификаторам пакетов при получении списка изменений
	КэшПоКонтрагентам = Новый Структура;
	Для Каждого СоставПакета Из МассивДокументов Цикл
		// Т.к. при отправке проставили на каждом документе 1С Ид пакета и вложения, ищем все документы, у которых идентификатор начинается на Ид пакета
		Если СоставПакета.Свойство("Идентификатор") и СоставПакета.Свойство("Состояние") Тогда
			Если СоставПакета.Свойство("Редакция") и СоставПакета.Редакция[0].Актуален = "Нет" Тогда  // на документах 1С проставляем статусы только для актуальных редакций
				Продолжить;
			КонецЕсли;
			ТаблицаДокументов1С =ДокументыПоИдПакета(СоставПакета.Идентификатор); 
			Для Каждого Строка Из ТаблицаДокументов1С Цикл
				ДобавитьСвойствоОбъекта("ДокументСБИС_Статус", СоставПакета.Состояние.Название, Строка, КаталогНастроек);
				ИзменитьРеквизитыДокумента1С(Строка, СоставПакета,Ини);
			КонецЦикла;
		КонецЕсли;
		ЗаполнитьСпособОбменаКонтрагента(СоставПакета,Ини,КэшПоКонтрагентам);
	КонецЦикла
КонецПроцедуры
функция ДокументыПоИдПакета(Ид) экспорт
	ИмяРегистраСвойствОбъектов = ИмяРегистраСвойствОбъектов();
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
			|	ЗначенияСвойствОбъектов.Объект КАК Ссылка
			|ИЗ
			|		РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
			|		ГДЕ ЗначенияСвойствОбъектов.Значение = &Идентификатор
			|			И (ЗначенияСвойствОбъектов.Свойство.Наименование = ""ДокументСБИС_Ид"")";
			
	запрос.УстановитьПараметр("Идентификатор", Ид);
	ТЗ=Запрос.Выполнить().Выгрузить();
	возврат ТЗ.ВыгрузитьКолонку("Ссылка");
конецфункции
Процедура ИзменитьРеквизитыДокумента1С(ДокСсылка,СоставПакета,Ини) экспорт
	ИмяДокумента = ДокСсылка.Метаданные().Имя;
	// в фактуре проставляем дату и способ выставления
	Если Ини.Свойство(ИмяДокумента) и Ини[ИмяДокумента].Свойство("мФайл") Тогда
					Попытка
						Если СоставПакета.Свойство("Событие") и СоставПакета.Событие[0].Название = "Подтверждение даты получения" Тогда
							Событие=СоставПакета.Событие[0];
							Для Каждого Элемент Из Ини[ИмяДокумента].мФайл Цикл
								Если Элемент.Значение.Свойство("ЗаполнятьДатуСпособВыставления") и Элемент.Значение.ЗаполнятьДатуСпособВыставления.Значение ="'Истина'" Тогда
									ИмяРеквизитаДатыВыставления = Сред(Элемент.Значение.ДатаВыставления.Значение, Найти(Элемент.Значение.ДатаВыставления.Значение, ".")+1);
									ИмяРеквизитаСпособаВыставления = Сред(Элемент.Значение.СпособВыставления.Значение, Найти(Элемент.Значение.СпособВыставления.Значение, ".")+1);
									ЗначениеСпособаВыставления = Элемент.Значение.СпособВыставления.Вычислить;
						ДокОбъект = ДокСсылка.ПолучитьОбъект();
						ДокОбъект.ДополнительныеСвойства.Вставить("ЕстьСоглашение", Истина); // обязательно требуется для состоянияЭД
						ДокОбъект[ИмяРеквизитаДатыВыставления] = Событие.ДатаВремяДокумента;
						ДокОбъект[ИмяРеквизитаСпособаВыставления] = ЗначениеСпособаВыставления;
						ДокОбъект.Записать();
					КонецЕсли;
					Прервать;
				КонецЦикла;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры
процедура ЗаполнитьСпособОбменаКонтрагента(СоставПакета,Ини,КэшПоКонтрагентам) экспорт
	Если Ини.Конфигурация.Свойство("ЗаполнятьСпособОбменаКонтрагента") и Ини.Конфигурация.ЗаполнятьСпособОбменаКонтрагента.Значение = "'Истина'" и
			СоставПакета.Свойство("Событие") и СоставПакета.Событие[0].Свойство("Название") и СоставПакета.Событие[0].Название = "Извещение о получении" Тогда
		ИННКПП = ?(СоставПакета.Контрагент.Свойство("СвЮЛ"),СоставПакета.Контрагент.СвЮЛ.ИНН+"_"+СоставПакета.Контрагент.СвЮЛ.КПП, СоставПакета.Контрагент.СвФЛ.ИНН);
		Если не КэшПоКонтрагентам.Свойство("к"+ИННКПП) Тогда
			КэшПоКонтрагентам.Вставить("к"+ИННКПП);
			Контрагент = НайтиКонтрагентаИзДокументаСБИС(Ини.Конфигурация, СоставПакета.Контрагент);
			Если Контрагент<>Ложь Тогда
				сбисЗаполнитьСпособДоставкиКонтрагента(Контрагент);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
// alo >>
//&НаСервереБезКонтекста
Функция ЗаписатьПараметрыДокументовСБИС(ДанныеПоСтатусам,Ини,КаталогНастроек) Экспорт
	// добавляет свойства для документа 1С (при сопоставлении и загрузке документов)	
	Для Каждого Элемент Из ДанныеПоСтатусам Цикл
		ЗаписатьПараметрыДокументаСБИС(Элемент.СтруктураСвойств,Элемент.Документ1С,Ини,КаталогНастроек);
	КонецЦикла;
КонецФункции
//&НаСервереБезКонтекста
Функция ЗаписатьПараметрыДокументаСБИС(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек) Экспорт
	// добавляет свойства для документа 1С (при сопоставлении и загрузке документов)	
	Для Каждого Свойство Из СтруктураПараметровДокументаСБИС Цикл
		ДобавитьСвойствоОбъекта(Свойство.Ключ,Свойство.Значение,ДокументСсылка,КаталогНастроек,Истина);
	КонецЦикла;
КонецФункции

Функция ДобавитьСвойствоОбъекта(ИмяСвойства,ЗначениеСвойства,ДокументСсылка,КаталогНастроек,НоваяРедакция=Ложь) Экспорт
	// устанавливает значение параметра в регистре сведений	
	ОбновлятьЗначение = Истина;
	ИмяРегистраСвойствОбъектов = ИмяРегистраСвойствОбъектов();
	НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик[ИмяПланаВидовХарактеристикСвойствОбъектов()].НайтиПоНаименованию(ИмяСвойства).Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество()=0 Тогда
		НоваяЗаписьНабора = НаборЗаписей.Добавить();
		НоваяЗаписьНабора.Объект = ДокументСсылка;
		НоваяЗаписьНабора.Свойство = ПланыВидовХарактеристик[ИмяПланаВидовХарактеристикСвойствОбъектов()].НайтиПоНаименованию(ИмяСвойства).Ссылка;
	Иначе
		НоваяЗаписьНабора = НаборЗаписей.Получить(0);	
		Если ИмяСвойства="ДокументСБИС_Статус" Тогда
			СтароеЗначениеСвойства = НоваяЗаписьНабора.Значение;
			ОбновлятьЗначение = (сбисПриоритетСтатуса(ЗначениеСвойства) > сбисПриоритетСтатуса(СтароеЗначениеСвойства)) Или НоваяРедакция;
		КонецЕсли;
	КонецЕсли;
	Если ОбновлятьЗначение Тогда
		Попытка
			НоваяЗаписьНабора.Значение = ЗначениеСвойства;
			НаборЗаписей.Записать();
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;
	возврат ОбновлятьЗначение; // alo
КонецФункции
Функция УдалитьПараметрыДокументаСБИС(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек) Экспорт
	// удаляет свойства для документа 1С (при удалении сопоставления)	
	Для Каждого Свойство Из СтруктураПараметровДокументаСБИС Цикл
		УдалитьСвойствоОбъекта(Свойство.Ключ,ДокументСсылка,КаталогНастроек);
	КонецЦикла;
КонецФункции
Функция УдалитьСвойствоОбъекта(ИмяСвойства,ДокументСсылка,КаталогНастроек) Экспорт
	// удаляет значение параметра из регистра сведений	
	ИмяРегистраСвойствОбъектов = ИмяРегистраСвойствОбъектов();
	НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик[ИмяПланаВидовХарактеристикСвойствОбъектов()].НайтиПоНаименованию(ИмяСвойства).Ссылка);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество()>0 Тогда	
		НоваяЗаписьНабора = НаборЗаписей.Получить(0);
		Попытка
			НоваяЗаписьНабора.Значение = "";
			НаборЗаписей.Записать();
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		
	КонецЕсли;
КонецФункции
Функция НайтиДокументы1СПоИдВложенияСБИС(Ид, ИдВложения,Ини,КаталогНастроек) Экспорт
	// Ищет документы 1С По идентификаторам пакета и вложения	
	Документы1С = Новый СписокЗначений;
	ЕстьПроведенный = Ложь;
	ИмяРегистраСвойствОбъектов = ИмяРегистраСвойствОбъектов();
	
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект КАК Объект
	|ПОМЕСТИТЬ ВТДокументыПакета
	|ИЗ
	|	РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|ГДЕ (ЗначенияСвойствОбъектов.Свойство.Наименование = ""ДокументСБИС_Ид"") И ЗначенияСвойствОбъектов.Значение = &Ид;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыПакета.Объект,
	|	ЗначенияСвойствОбъектов.Объект КАК Ссылка
	|ИЗ
	|	ВТДокументыПакета КАК ВТДокументыПакета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|		ПО ВТДокументыПакета.Объект = ЗначенияСвойствОбъектов.Объект
	|			И ЗначенияСвойствОбъектов.Значение = &ИдВложения
	|			И (ЗначенияСвойствОбъектов.Свойство.Наименование = ""ДокументСБИС_ИдВложения"")";
	
	запрос.УстановитьПараметр("Ид", Ид);
	запрос.УстановитьПараметр("ИдВложения", ИдВложения);
	Выборка = Запрос.Выполнить().выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	Пока Выборка.Следующий() Цикл
		Документы1С.Добавить(Выборка.Ссылка);
		Попытка   // попытка на случай отправки справочника, а не документа
			Если Выборка.Ссылка.Проведен Тогда
				ЕстьПроведенный = Истина;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	Возврат Новый Структура("Ссылки, Проведен",Документы1С, ЕстьПроведенный);
КонецФункции
Функция ПрочитатьПараметрыДокументаСБИС(ДокументСсылка, КаталогНастроек,ИмяСвойства,Ини) Экспорт
	// возвращает свойство (статус, идентификатор пакета, идентификатор вложения) документа 1С	
	ИмяРегистраСвойствОбъектов = ИмяРегистраСвойствОбъектов();
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение КАК Значение
	|ИЗ
	|		РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|		ГДЕ ЗначенияСвойствОбъектов.Объект = &Документ1С
	|			И (ЗначенияСвойствОбъектов.Свойство.Наименование = """+ИмяСвойства+""")";
	
	запрос.УстановитьПараметр("Документ1С", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Значение;
	КонецЦикла;
	
КонецФункции
Процедура ПолучитьТаблицуДокументов1СПоИдПакетаСБИС(МассивДокументов, Ини, КаталогНастроек) Экспорт	
	// Для массива документов СБИС ищет по идентификаторам пакетов документы 1С	
	ВремТабл = МассивСтруктурВТаблицуЗначений(МассивДокументов);	
	КолонкаИдСБИС = ВремТабл.ВыгрузитьКолонку("ИдСБИС");
	ВремТабл.Колонки.Удалить("ИдСБИС");
	ВремТабл.Колонки.Добавить("ИдСБИС", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ВремТабл.ЗагрузитьКолонку(КолонкаИдСБИС, "ИдСБИС");
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ТЗ.ИдСБИС
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.ИдСБИС,
	|	ЗначенияСвойствОбъектов.Объект КАК ссылка
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений."+ИмяРегистраСвойствОбъектов()+" КАК ЗначенияСвойствОбъектов
	|		ПО ВТ.ИдСБИС = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство.Наименование = ""ДокументСБИС_Ид"")";
	
	запрос.УстановитьПараметр("ТЗ", ВремТабл);
	ТаблицаДокументов1С = Запрос.Выполнить().выгрузить();
	//====================================================================================
	Для каждого стр из МассивДокументов цикл 
		массивДоков =  ТаблицаДокументов1С.найтиСтроки(Новый Структура("ИдСБИС", стр.ИдСБИС) ) ;
		Если массивДоков.количество()>0 тогда 
			Документы1С = Новый СписокЗначений;
			Для Каждого Элемент Из массивДоков Цикл
				Документы1С.Добавить(Элемент.Ссылка);
			КонецЦикла;
			стр.Вставить("Документы1С", Документы1С);
			Попытка
				стр.Вставить("СуммаДокумента1С", массивДоков[0].Ссылка.СуммаДокумента);
				Дельта = Число(стр.Сумма) - стр.СуммаДокумента1С;
				Дельта = ?(Дельта<0,-Дельта,Дельта);
				стр.Вставить("Дельта", Дельта);
			Исключение
				стр.Вставить("СуммаДокумента1С", 0);
				стр.Вставить("Дельта", 0);
			КонецПопытки;
			стр.Вставить("Проведен", сбисИндексКартинкиПоДокументу1С(массивДоков[0].Ссылка));
		Иначе
			стр.Вставить("Документы1С",Новый СписокЗначений);
			стр.Вставить("СуммаДокумента1С", 0);
			стр.Вставить("Проведен", -1);
			стр.Вставить("Дельта", 0);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры
Процедура ПолучитьТаблицуДокументов1СПоИдВложенияСБИС(МассивДокументов, МассивИдентификаторов, Ини, КаталогНастроек) Экспорт	
	// Для массива документов СБИС ищет по идентификаторам пакетов и вложений документы 1С	
	ИмяРегистраСвойствОбъектов = ИмяРегистраСвойствОбъектов();
	ВремТабл = МассивСтруктурВТаблицуЗначений(МассивИдентификаторов);	
	КолонкаИд = ВремТабл.ВыгрузитьКолонку("Ид");
	ВремТабл.Колонки.Удалить("Ид");
	ВремТабл.Колонки.Добавить("Ид", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ВремТабл.ЗагрузитьКолонку(КолонкаИд, "Ид");
	КолонкаИдВложения = ВремТабл.ВыгрузитьКолонку("ИдВложения");
	ВремТабл.Колонки.Удалить("ИдВложения");
	ВремТабл.Колонки.Добавить("ИдВложения", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ВремТабл.ЗагрузитьКолонку(КолонкаИдВложения, "ИдВложения");
	
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ТЗ.Ид,
	|	ТЗ.ИдВложения
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Ид,
	|	ВТ.ИдВложения,
	|	ЗначенияСвойствОбъектов.Объект КАК Объект
	|ПОМЕСТИТЬ ВТДокументыПакета
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|		ПО ВТ.Ид = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство.Наименование = ""ДокументСБИС_Ид"");
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыПакета.Ид,
	|	ВТДокументыПакета.ИдВложения,
	|	ВТДокументыПакета.Объект,
	|	ЗначенияСвойствОбъектов.Объект КАК Ссылка
	|ИЗ
	|	ВТДокументыПакета КАК ВТДокументыПакета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|		ПО ВТДокументыПакета.Объект = ЗначенияСвойствОбъектов.Объект
	|			И ВТДокументыПакета.ИдВложения = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство.Наименование = ""ДокументСБИС_ИдВложения"")";
	
	запрос.УстановитьПараметр("ТЗ", ВремТабл);
	ТаблицаДокументов1С = Запрос.Выполнить().выгрузить();
	//====================================================================================
	Для каждого стр из МассивДокументов цикл 
		Если стр.СоставПакета[0].Значение.Свойство("Вложение") Тогда
			ДокументПроведен=-1;
			Для Каждого Вложение Из стр.СоставПакета[0].Значение.Вложение Цикл
				Если Не Вложение.Свойство("Служебный") или Вложение.Служебный = "Нет" Тогда
					
					массивДоков =  ТаблицаДокументов1С.найтиСтроки(Новый Структура("Ид, ИдВложения", стр.ИдСБИС, Вложение.Идентификатор) ) ;
					Если массивДоков.количество()>0 тогда 
						Документы1С = Новый СписокЗначений;
						Для Каждого Элемент Из массивДоков Цикл
							Документы1С.Добавить(Элемент.Ссылка);
						КонецЦикла;
						Вложение.Вставить("Документы1С", Документы1С);
						стр.Документы1С.Добавить(массивДоков[0].Ссылка);
						стр.Вставить("СуммаДокумента1С", 0);
						стр.Вставить("Дельта", 0);
						ДокументПроведен = ?(ДокументПроведен=-1,сбисИндексКартинкиПоДокументу1С(массивДоков[0].Ссылка), ДокументПроведен);
						стр.Вставить("Проведен", ДокументПроведен);
					Иначе
						Вложение.Вставить("Документы1С",Новый СписокЗначений);
						стр.Вставить("СуммаДокумента1С", 0);
						Если Не стр.Свойство("Проведен") Тогда
							стр.Вставить("Проведен", -1);
						КонецЕсли;
						стр.Вставить("Дельта", 0);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры
Функция ИмяРегистраСвойствОбъектов() Экспорт
	// возвращает имя регистра, где хранятся статусы и идентификаторы СБИС	
	Если Метаданные.РегистрыСведений.Найти("ДополнительныеСведения")<>Неопределено Тогда
		Возврат "ДополнительныеСведения";
	ИначеЕсли Метаданные.РегистрыСведений.Найти("ЗначенияСвойствОбъектов")<>Неопределено Тогда
		Возврат "ЗначенияСвойствОбъектов";
	Иначе
		// ??? где храним статусы
	КонецЕсли
КонецФункции
Функция ИмяПланаВидовХарактеристикСвойствОбъектов()
	// возвращает имя плана видов характеристик, где хранятся названия дополнительных свойств	
	Если Метаданные.ПланыВидовХарактеристик.Найти("ДополнительныеРеквизитыИСведения")<>Неопределено Тогда
		Возврат "ДополнительныеРеквизитыИСведения";
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Найти("СвойстваОбъектов")<>Неопределено Тогда
		Возврат "СвойстваОбъектов";
	Иначе
		// ??? где храним статусы
	КонецЕсли
КонецФункции
Функция МассивСтруктурВТаблицуЗначений(МассивСтруктур)
	// преобразует массив структур в таблицу значений	
	Результат = Новый ТаблицаЗначений;
	Если МассивСтруктур = Неопределено Или МассивСтруктур.Количество() = 0 Тогда
		Возврат Результат;
	Иначе 
		Образец = МассивСтруктур[0];
		Для Каждого  Стр из Образец Цикл
			Результат.Колонки.Добавить(Стр.Ключ );
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Стр Из МассивСтруктур Цикл
		СтрТ = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТ, Стр);		
	КонецЦикла;
	Возврат Результат;
КонецФункции
//&НаСервереБезКонтекста
Функция сбисИндексКартинкиПоДокументу1С(Документ1С) Экспорт
	// Функция возвращает индекс картинки по статусу документа 1С	
	Попытка
		Если Документ1С.Проведен Тогда 
			Возврат 0;
		ИначеЕсли Документ1С.ПометкаУдаления Тогда 
			Возврат 2;
		Иначе
			Возврат 1;
		КонецЕсли;
	Исключение
		Возврат 0;
	КонецПопытки;
КонецФункции
функция сбисПриоритетСтатуса(СтатусЭД)
	// Функция возвращает индекс картинки по статусу электронного документа	
	Если Найти(нрег(СтатусЭД), "выгружен")=1 или Найти(нрег(СтатусЭД), "загружен на сервер")=1 или Найти(нрег(СтатусЭД), "документ редактируется")=1 или Найти(нрег(СтатусЭД), "есть документ")=1 Тогда     // Выгружен или загружен на сервер
		Возврат 0;
	ИначеЕсли Найти(нрег(СтатусЭД), "отослано приглашение")=1 Тогда      // Отправлено приглашение
		Возврат 1;
	ИначеЕсли Найти(нрег(СтатусЭД), "отправлен")=1 Тогда     // Отправлен
		Возврат 2;
	ИначеЕсли Найти(нрег(СтатусЭД), "ошибка")>0 или Найти(нрег(СтатусЭД), "проблемы при доставке")>0 Тогда     // Ошибки при отправке или при доставке
		Возврат 3;
	ИначеЕсли Найти(нрег(СтатусЭД),"на утверждении")=1 или Найти(нрег(СтатусЭД),"доставлен")=1 Тогда                        // Доставлен
		Возврат 4;
	ИначеЕсли Найти(нрег(СтатусЭД), "выполнение завершено с проблемами")=1 Тогда                        // Отклонен
		Возврат 5;
	ИначеЕсли Найти(нрег(СтатусЭД), "выполнение завершено успешно")=1 Тогда                        // Утвержден
		Возврат 6;
	ИначеЕсли Найти(нрег(СтатусЭД), "удален")=1 или Найти(нрег(СтатусЭД), "аннулирован")=1 Тогда                        // Удален контрагентом
		Возврат 7;
	ИначеЕсли Найти(нрег(СтатусЭД), "отозван мной")=1 Тогда                        // Удален мной
		Возврат 7;
	Иначе
		Возврат -1;
	КонецЕсли;
КонецФункции
Функция НайтиУчастникаВСправочнике(оУчастник, ТекстЗапроса, ТолькоПоИНН = Ложь) Экспорт
	// Функция ищет организацию или контрагента в базе 1С по ИНН/КПП
	ЮлОрг   = оУчастник.Свойство("СвЮЛ");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИНН", ?(ЮлОрг, оУчастник.СвЮЛ.ИНН, оУчастник.СвФЛ.ИНН));
	
	Если ЮлОрг и НЕ ТолькоПоИНН Тогда
		Запрос.УстановитьПараметр("КПП",оУчастник.СвЮЛ.КПП);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И Участник.КПП=&КПП","");
	КонецЕсли;
	
	Если оУчастник.Свойство("Подразделение") и оУчастник.Подразделение.Свойство("Идентификатор") Тогда
		Запрос.УстановитьПараметр("КодФилиала",оУчастник.Подразделение.Идентификатор);
	Иначе
		Запрос.УстановитьПараметр("КодФилиала","");
	КонецЕсли;
	
	Если оУчастник.Свойство("GLN") Тогда
		Запрос.УстановитьПараметр("GLN",оУчастник.GLN);
	Иначе
		Запрос.УстановитьПараметр("GLN","");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Возврат РезультатЗапроса.Ссылка;
	КонецЦикла;
	Возврат Ложь;
	
КонецФункции	
Функция НайтиКонтрагентаИзДокументаСБИС(Ини, оУчастник) Экспорт
	// Функция ищет контрагента в базе 1С по данным участника в универсальном формате
	Если Ини.Свойство("ЗапросКонтрагента") Тогда
		ТекстЗапроса = СтрЗаменить(Ини.ЗапросКонтрагента.Значение,"'","");
	Иначе
		ТекстЗапроса="ВЫБРАТЬ
		|Участник.Ссылка
		|ИЗ
		|"+СтрЗаменить(Ини.Контрагенты.Значение,"'","")+" КАК Участник
		|ГДЕ НЕ Участник.ПометкаУдаления И Участник."+сбисСообщитьИмяРеквизита(СтрЗаменить(Ини.Контрагенты_ИНН.Значение,"'",""))+" =&ИНН
		|И Участник."+сбисСообщитьИмяРеквизита(СтрЗаменить(Ини.Контрагенты_КПП.Значение,"'","")) +"=&КПП";
	КонецЕсли;

	Возврат НайтиУчастникаВСправочнике(оУчастник, ТекстЗапроса);
КонецФункции
Функция сбисСообщитьИмяРеквизита(ЗначениеРеквизита)Экспорт
	// Функция возвращает название реквизита для значений из файлов настроек (например, для [Документ].Контрагент)	
	Возврат Сред(ЗначениеРеквизита,Найти(ЗначениеРеквизита,".")+1);	
КонецФункции
Функция сбисЗаполнитьСпособДоставкиКонтрагента(Контрагент) Экспорт
	// устанавливает значение параметра в регистре сведений	
	ИмяРегистраСвойствОбъектов = ИмяРегистраСвойствОбъектов();
	НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Контрагент);
	Свойство = ПланыВидовХарактеристик[ИмяПланаВидовХарактеристикСвойствОбъектов()].НайтиПоНаименованию("СБИС_СпособДоставки").Ссылка;
	НаборЗаписей.Отбор.Свойство.Установить(Свойство);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество()=0 Тогда
		НоваяЗаписьНабора = НаборЗаписей.Добавить();
		НоваяЗаписьНабора.Объект = Контрагент;
		НоваяЗаписьНабора.Свойство = Свойство;
		Выборка = Справочники.ЗначенияСвойствОбъектов.Выбрать(,Свойство,Новый Структура("Наименование", "Бумага, хочет ЭДО"));
		Если Выборка.Следующий() Тогда
			Попытка
				НоваяЗаписьНабора.Значение = Выборка.Ссылка;
				НаборЗаписей.Записать();
			Исключение
				Ошибка = ОписаниеОшибки();
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
КонецФункции