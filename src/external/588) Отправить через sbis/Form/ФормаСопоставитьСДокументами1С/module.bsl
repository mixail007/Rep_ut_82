&НаКлиенте
Перем МестныйКэш Экспорт;

// функции для совместимости кода 
&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Попытка
			ЭтотОбъект="";
		Исключение
		КонецПопытки;
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы);
КонецФункции
&НаКлиенте
Функция сбисЭлементФормы(Форма,ИмяЭлемента)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Форма.Элементы[ИмяЭлемента];
	КонецЕсли;
	Возврат Форма.ЭлементыФормы[ИмяЭлемента];
КонецФункции
&НаКлиенте
Функция сбисПолучитьСтраницу(Элемент, ИмяСтраницы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Элемент.ПодчиненныеЭлементы[ИмяСтраницы];
	КонецЕсли;
	Возврат Элемент.Страницы[ИмяСтраницы];
КонецФункции
&НаКлиенте
Процедура сбисПоказатьСостояние(ТекстСостояния, Форма = Неопределено, Индикатор = Неопределено)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Состояние(ТекстСостояния,Индикатор);
	Иначе
		Форма.ЭлементыФормы.ПанельОжидания.Видимость = Истина;
		Форма.НадписьОжидания = ТекстСостояния;
	КонецЕсли;	
КонецПроцедуры
&НаКлиенте
Процедура сбисСпрятатьСостояние(Форма = Неопределено)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
	Иначе
		Форма.ЭлементыФормы.ПанельОжидания.Видимость = Ложь;
	КонецЕсли;	
КонецПроцедуры
//------------------------------------------------------

&НаКлиенте
Процедура СопоставитьДокумент(оДокумент)
// Процедура открывает форму сопоставления одного документа	
	фрм=сбисПолучитьФорму("ФормаСвязатьСДокументом1С");// Вставить содержимое обработчика.
	фрм.ОткрытьМодально();    
КонецПроцедуры
&НаКлиенте
Процедура ПересчетКонтрольныхСумм()
// Процедура рассчитывает суммы документов сбис и 1С и дельту	
	СуммаДокументовСБИС = 0;
	СуммаДокументов1С   = 0;
	Дельта				= 0;
	МассивОтмеченных = ТаблицаСопоставленияДокументов.НайтиСтроки(Новый Структура("Отмечен", Истина));
	Если МассивОтмеченных.Количество() = 0 Тогда
		Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
			ТаблицаСопоставленияДокументовБезДублей = ТаблицаСопоставленияДокументов.Выгрузить(Новый Структура("Дубль", Ложь));  //d.ch	
		Иначе	
			ТаблицаСопоставленияДокументовБезДублей = ТаблицаСопоставленияДокументов.Скопировать(Новый Структура("Дубль", Ложь));  //d.ch
		КонецЕсли;
		СуммаДокументовСБИС = ТаблицаСопоставленияДокументовБезДублей.Итог("Сумма");
		СуммаДокументов1С = ТаблицаСопоставленияДокументовБезДублей.Итог("СуммаДокумента1С");
	Иначе
		Для Каждого ДокументСтрока из ТаблицаСопоставленияДокументов Цикл
			Если ДокументСтрока.Отмечен Тогда
				СуммаДокументовСБИС = СуммаДокументовСБИС + ДокументСтрока.Сумма;
				СуммаДокументов1С   = СуммаДокументов1С   + ДокументСтрока.СуммаДокумента1С;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Дельта = СуммаДокументовСБИС - СуммаДокументов1С;
	Дельта = ?(Дельта<0,-Дельта,Дельта);
КонецПроцедуры
&НаКлиенте
Процедура СохранитьНажатие(Элемент)
// Процедура сохраняет установленные сопоставления	
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	Для Каждого Строка из ТаблицаСопоставленияДокументов Цикл
		Если Строка.Документ1С<>Неопределено и Не Строка.Документ1С.Пустая() Тогда
			СтруктураСвойств = Новый Структура("ДокументСБИС_Ид,ДокументСБИС_ИдВложения,ДокументСБИС_Статус", Строка.ИдСБИС,Строка.ИдВложения,Строка.Состояние);
			фрм = ГлавноеОкно.сбисНайтиФормуФункции("ЗаписатьПараметрыДокументаСБИС",МестныйКэш.ФормаРаботыСоСтатусами,"",МестныйКэш);
			фрм.ЗаписатьПараметрыДокументаСБИС(СтруктураСвойств, Строка.Документ1С, МестныйКэш.Ини.Конфигурация, ГлавноеОкно.КаталогНастроек);
			Если ЗначениеЗаполнено(Строка.РанееСопоставленныеДокументы1С) Тогда
				Для Каждого РанееСопоставленныйДокумент1С Из Строка.РанееСопоставленныеДокументы1С Цикл
					ПредыдущийДокумент1С = РанееСопоставленныйДокумент1С.Значение;
					Если ПредыдущийДокумент1С<>Строка.Документ1С Тогда // если раньше было сопоставление с другим документом, удаляем его
						СтруктураСвойств = Новый Структура("ДокументСБИС_Ид,ДокументСБИС_ИдВложения,ДокументСБИС_Статус");
						фрм = ГлавноеОкно.сбисНайтиФормуФункции("УдалитьПараметрыДокументаСБИС",МестныйКэш.ФормаРаботыСоСтатусами,"",МестныйКэш);
						фрм.УдалитьПараметрыДокументаСБИС(СтруктураСвойств, ПредыдущийДокумент1С, МестныйКэш.Ини, ГлавноеОкно.КаталогНастроек);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			//Строка.ДокументСБИС[0].Значение.Документ1С = Строка.Документ1С;
		КонецЕсли;
	КонецЦикла;
	сбисПолучитьФорму("ФормаГлавноеОкно").ОбновитьКонтент();
	ЭтаФорма.Закрыть();
КонецПроцедуры
&НаКлиенте
Процедура УстановитьОграничениеТипа(Элемент)
// Процедура устанавливает ограничения типов документов 1С, которые можно выбрать для сопоставления	
	МассивТипов = Новый Массив;
	Если сбисЭлементФормы(ЭтаФорма,"ТаблицаСопоставленияДокументов").ТекущиеДанные<>Неопределено Тогда
		Для Каждого Тип1С Из сбисЭлементФормы(ЭтаФорма,"ТаблицаСопоставленияДокументов").ТекущиеДанные.Типы1С Цикл
			Если Тип1С.Значение<>"''" Тогда
				МассивТипов.Добавить(Тип("ДокументСсылка."+Тип1С.Значение));
			КонецЕсли;
		КонецЦикла;
		Элемент.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ОтметитьВсеПриИзменении(Элемент)
// Процедура отмечает/снимает отметку со списка документов	
	Для Каждого ДокументСтрока из ТаблицаСопоставленияДокументов Цикл
		ДокументСтрока.Отмечен = ?(ДокументСтрока.Дубль,ДокументСтрока.Отмечен,ОтметитьВсе);
	КонецЦикла;	
	ПересчетКонтрольныхСумм();
КонецПроцедуры
&НаКлиенте
Функция ОпределитьТипВложения(Вложение)
// Функция возвращает тип и версию вложения	
	Возврат Вложение.Тип + "_3_01";
	//Если Лев(нрег(Вложение.Название),9)="накладная" Тогда
	//	Возврат "ЭДОНакл_3_01";
	//ИначеЕсли Лев(нрег(Вложение.Название),7)="фактура" Тогда
	//	Возврат "СчФктр_3_01";
	//ИначеЕсли Лев(нрег(Вложение.Название),5)="акт №" Тогда
	//	Возврат "АктВр_3_01";
	//ИначеЕсли (Лев(нрег(Вложение.Название),7)="счет на") или (Лев(нрег(Вложение.Название),5)="заказ") Тогда
	//	Возврат "Заказ_3_01";	
	//КонецЕсли;
	//Возврат "";
КонецФункции
&НаКлиенте
Функция ПодготовитьСписокДокументовКСопоставлению(Кэш, СписокОтмеченныхДокументов) Экспорт
// Функция формирует массив документов с данными, необходимыми для сопоставления	
	МестныйКэш = Кэш;
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	фрмСтатусы = ГлавноеОкно.сбисНайтиФормуФункции("НайтиДокументы1СПоИдВложенияСБИС",Кэш.ФормаРаботыСоСтатусами,"",Кэш);
	СписокДокументовДляСопоставления = Новый Массив(); //документ1С,guidсбис,дата,номер,сумма,тип1С,Контрагент,Огранизация,Сумма1С,название документа СБИС
	Всего = СписокОтмеченныхДокументов.Количество();
	сч = 0;
	Для Каждого Строка из СписокОтмеченныхДокументов Цикл
		сч = сч + 1;
		сбисПоказатьСостояние("Формируем список документов для сопоставления",ГлавноеОкно,Мин(100,Окр(сч*100/Всего)));
		Если Строка.Значение.СоставПакета[0].Значение.Свойство("Вложение") Тогда
			Для Каждого Вложение Из Строка.Значение.СоставПакета[0].Значение.Вложение Цикл
				РеквизитыДляПоиска = Новый Структура();
				ТипВерсияВложения = ОпределитьТипВложения(Вложение);//временно пока нет типа , возвращает тип версию вложения ЭдоНакл_3_02 
				Если ЗначениеЗаполнено(ТипВерсияВложения) Тогда
					Ини = Кэш.ОбщиеФункции.сбисОпределитьИниДляЗагрузки(Кэш, Вложение, ТипВерсияВложения);
					Если Ини <> Неопределено Тогда
						Если Не Вложение.Свойство("Документы1С") Тогда // реестры документов отдельных типов (например, акт сверки)
							ДанныеДокумента1С = фрмСтатусы.НайтиДокументы1СПоИдВложенияСБИС(Строка.Значение.СоставПакета[0].Значение.Идентификатор, Вложение.Идентификатор, Кэш.Ини, ГлавноеОкно.КаталогНастроек);
							Вложение.Вставить("Документы1С", Новый СписокЗначений);
							Если ЗначениеЗаполнено(ДанныеДокумента1С) Тогда
								Вложение.Документы1С=ДанныеДокумента1С.Ссылки;
							КонецЕсли;
						КонецЕсли;
						фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПолучитьРеквизитыДокумента","Файл_"+ТипВерсияВложения,"Файл_Шаблон",Кэш);
						фрм.ПолучитьРеквизитыДокумента(Кэш,Ини,РеквизитыДляПоиска,Вложение,Строка.Значение);
					КонецЕсли;
				КонецЕсли;
				Если РеквизитыДляПоиска.Количество() Тогда
					РеквизитыДляПоиска.Вставить("ТипВерсияВложения", ТипВерсияВложения);
					РеквизитыДляПоиска.Вставить("Ини", Ини);
					СписокДокументовДляСопоставления.Добавить(РеквизитыДляПоиска);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
	сбисСпрятатьСостояние(ГлавноеОкно);
	Возврат	 СписокДокументовДляСопоставления;
КонецФункции
&НаКлиенте
Функция Показать(Кэш, СписокОтмеченныхДокументов) Экспорт
// Функция открывает окно сопоставления документов и заполняет все реквизиты на форме	
	МестныйКэш = Кэш;
	ОтметитьВсе = Ложь;
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	СопоставлениеПоСумме = ГлавноеОкно.СопоставлениеПоСумме;
	СуммаДельта = 0;
	СуммаДокументовСБИС=0;
	СписокДокументовДляСопоставления = ПодготовитьСписокДокументовКСопоставлению(Кэш, СписокОтмеченныхДокументов);
	Всего = СписокДокументовДляСопоставления.Количество();
	сч = 0;
	ОднозначноСопоставлено = 0;
	НеоднозначноСопоставлено = 0;
	НеНайденоПодходящих = 0;
	ТаблицаСопоставленияДокументов.Очистить();
	Для Каждого Строка из СписокДокументовДляСопоставления Цикл
		сч = сч + 1;
		сбисПоказатьСостояние("Ищем подходящие документы",ГлавноеОкно,Мин(100,Окр(сч*100/Всего)));
		Документ1С = Неопределено;
		ЭтоДубль = сбисЭтоДубльВложения(ТаблицаСопоставленияДокументов,Строка); //d.ch
		Если ЭтоДубль Тогда   // для дублей не ищем подходящие документы
			СписокПодходящихДокументов = Новый СписокЗначений;
		Иначе
			СписокПодходящихДокументов=Кэш.ОбщиеФункции.НайтиПодходящиеДокументы(Кэш.Ини,Кэш.Парам, Строка);
		КонецЕсли;
		//если уже есть документ 1С то его добавляем в строку, иначе ищем подходящие
		Если Строка.Документы1С <>Неопределено и ЗначениеЗаполнено(Строка.Документы1С) Тогда
			Документ1С = Строка.Документы1С[0].Значение;
			КолВоДокументов = 1;
		Иначе	
			КолВоДокументов = СписокПодходящихДокументов.Количество();
			
			Если КолВоДокументов=1 Тогда
				Документ1С = СписокПодходящихДокументов[0].Значение;
				//ИначеЕсли Кэш.СБИС.ини[Строка.Значение.СоставПакета[0].Значение.Тип].Количество()=1 Тогда
				//НоваяСтрока.Документ1С = УстановитьПустуюСсылку(Кэш.СБИС.ини[Строка.Значение.СоставПакета[0].Значение.Тип][0]);
			КонецЕсли;
		КонецЕсли;
		
		Если КолВоДокументов=1 Тогда
			ОднозначноСопоставлено = ОднозначноСопоставлено + 1;	
		ИначеЕсли КолВоДокументов=0 Тогда
			НеНайденоПодходящих = НеНайденоПодходящих + 1;
		Иначе
			НеоднозначноСопоставлено = НеоднозначноСопоставлено + 1;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаСопоставленияДокументов.Добавить();
		НоваяСтрока.СписокПодходящихДокументов = СписокПодходящихДокументов;
		Если Документ1С<>Неопределено Тогда 
			//Если ТипЗнч(Документ1С) = Тип("СписокЗначений") и Документ1С.Количество() = 1 Тогда
			//	НоваяСтрока.Документ1С = Документ1С[0].Значение;
			//	НоваяСтрока.ДатаДокумента            = Строка.Номер;
			//КонецЕсли;	
			НоваяСтрока.Документ1С = Документ1С;
		КонецЕсли;
		НоваяСтрока.РанееСопоставленныеДокументы1С = Строка.РанееСопоставленныеДокументы1С;
		НоваяСтрока.СоставПакета     = Новый СписокЗначений;
		НоваяСтрока.Организация      = Строка.СоставПакета.НашаОрганизация.Название;
		НоваяСтрока.Контрагент       = Строка.СоставПакета.Контрагент.Название;
		НоваяСтрока.Сумма            = Строка.Сумма;
		НоваяСтрока.Номер            = Строка.Номер;
		НоваяСтрока.ДатаДокумента    = Строка.Дата;
		//НоваяСтрока.ДатаУчета        = Строка.Значение.СоставПакета[0].Значение.Дата;
		//НоваяСтрока.ТипДокумента     = Строка.Значение.СоставПакета[0].Значение.Тип;
		НоваяСтрока.Статус           = Строка.Статус; 		 
		НоваяСтрока.Найдено          = КолВоДокументов;
		НоваяСтрока.НайденоКартинка  = ?(КолВоДокументов>1, 2, КолВоДокументов);
		НоваяСтрока.СоставПакета.Добавить(Строка.СоставПакета);
		НоваяСтрока.ДокументСБИСНазвание = Строка.НазваниеСБИС;
		НоваяСтрока.Типы1С = Строка.Типы1С;
		НоваяСтрока.ТипСБИС = Строка.ТипСБИС;
		НоваяСтрока.ИдСБИС = Строка.СоставПакета.Идентификатор;
		НоваяСтрока.ИдВложения = Строка.ИдВложения;
		НоваяСтрока.Состояние = Строка.СоставПакета.Состояние.Название;
 		
		НоваяСтрока.ТипВерсияВложения   = Строка.ТипВерсияВложения; //d.ch
		НоваяСтрока.ОрганизацияИНН = ?(Строка.НашаОрганизация.Свойство("СвЮЛ"),Строка.НашаОрганизация.СвЮЛ.ИНН,?(Строка.НашаОрганизация.Свойство("СвФЛ"),Строка.НашаОрганизация.СвФЛ.ИНН,""));
		НоваяСтрока.ОрганизацияКПП = ?(Строка.НашаОрганизация.Свойство("СвЮЛ"),Строка.НашаОрганизация.СвЮЛ.КПП,"");
		НоваяСтрока.КонтрагентИНН = ?(Строка.Контрагент.Свойство("СвЮЛ"),Строка.Контрагент.СвЮЛ.ИНН,?(Строка.Контрагент.Свойство("СвФЛ"),Строка.Контрагент.СвФЛ.ИНН,"")) ;
		НоваяСтрока.КонтрагентКПП = ?(Строка.Контрагент.Свойство("СвЮЛ"),Строка.Контрагент.СвЮЛ.КПП,"");
		НоваяСтрока.Дубль = ЭтоДубль;

		РассчитатьДельтуИСуммуДокумента1С(НоваяСтрока);
		
	КонецЦикла;
	ВсегоДокументов = сч;
	НадписьВсегоДокументов = ОпределитьОкончание(ВсегоДокументов, "документ", "у", "ам", "ам")+", из них:";
	НадписьОднозначноСопоставлено = ОпределитьОкончание(ОднозначноСопоставлено, "документ", "ом", "ами", "ами")+" 1С";
	НадписьНеоднозначноСопоставлено = ОпределитьОкончание(НеоднозначноСопоставлено, "документ", "ом", "ами", "ами")+" 1С";
	НадписьНеНайденоПодходящих = ОпределитьОкончание(НеНайденоПодходящих, "документ", "", "а", "ов");
	
	ОтметитьСопоставленныеНажатие("");
	
	сбисСпрятатьСостояние(ГлавноеОкно);
	ПересчетКонтрольныхСумм();
	Если ТаблицаСопоставленияДокументов.Количество()>0 Тогда
		ЭтаФорма.Открыть();
	Иначе
		Предупреждение("Среди отмеченных документов нет подходящих для сопоставления.");
	КонецЕсли;
	//Возврат Сохранить;
КонецФункции
&НаКлиенте
Функция ОпределитьОкончание(Значение, Корень, Окончание1, Окончание2, Окончание3)
// Функция определяет окончание в нужном падеже для надписей с количеством документов	
	Если Число(Прав(Значение,2))>=10 и Число(Прав(Значение,2))<20 Тогда
		Возврат Корень+Окончание3;		
	ИначеЕсли Прав(Значение, 1)="1" Тогда 
		Возврат Корень+Окончание1;	
	ИначеЕсли Прав(Значение, 1)="2" или Прав(Значение, 1)="3" или Прав(Значение, 1)="4" Тогда 
		Возврат Корень+Окончание2;	
	Иначе
		Возврат Корень+Окончание3;	
	КонецЕсли;
КонецФункции
&НаКлиенте
Функция сбисЭтоДубльВложения(ТаблицаСопоставленияДокументов,СтрокаДокумента)
	Если ТаблицаСопоставленияДокументов.Количество()=0 Тогда
		Возврат Ложь;
	КонецЕсли;
	ОтборДляПоискаДублей = Новый Структура;
	ОтборДляПоискаДублей.Вставить("Номер",СтрокаДокумента.Номер);
	ОтборДляПоискаДублей.Вставить("ДатаДокумента",СтрокаДокумента.Дата);
	ОтборДляПоискаДублей.Вставить("ТипВерсияВложения",СтрокаДокумента.ТипВерсияВложения);
	ОтборДляПоискаДублей.Вставить("ОрганизацияИНН",?(СтрокаДокумента.НашаОрганизация.Свойство("СвЮЛ"),СтрокаДокумента.НашаОрганизация.СвЮЛ.ИНН,?(СтрокаДокумента.НашаОрганизация.Свойство("СвФЛ"),СтрокаДокумента.НашаОрганизация.СвФЛ.ИНН,"")));
	ОтборДляПоискаДублей.Вставить("ОрганизацияКПП",?(СтрокаДокумента.НашаОрганизация.Свойство("СвЮЛ"),СтрокаДокумента.НашаОрганизация.СвЮЛ.КПП,""));
	ОтборДляПоискаДублей.Вставить("КонтрагентИНН",?(СтрокаДокумента.Контрагент.Свойство("СвЮЛ"),СтрокаДокумента.Контрагент.СвЮЛ.ИНН,?(СтрокаДокумента.Контрагент.Свойство("СвФЛ"),СтрокаДокумента.Контрагент.СвФЛ.ИНН,"")));
	ОтборДляПоискаДублей.Вставить("КонтрагентКПП",?(СтрокаДокумента.Контрагент.Свойство("СвЮЛ"),СтрокаДокумента.Контрагент.СвЮЛ.КПП,""));
	
	НайденныеСтроки  =  ТаблицаСопоставленияДокументов.НайтиСтроки(ОтборДляПоискаДублей);
	Возврат ?(НайденныеСтроки.Количество()>0,Истина,Ложь);
КонецФункции
&НаКлиенте
Процедура УтвердитьНажатие(Элемент)
	// Утверждает отмеченные
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");	
	фрм = ГлавноеОкно.сбисНайтиФормуФункции("сбисВыполнитьКоманду",МестныйКэш.ИнтеграцияИмя,"",МестныйКэш);
	СписокПакетов = ПолучитьПакетыДляУтверждения();
	СписокУтвержденных = Новый СписокЗначений;
	Для Каждого СоставПакета из СписокПакетов Цикл
		КомандаВыполнена = фрм.сбисВыполнитьКоманду(МестныйКэш, СоставПакета.Значение.Идентификатор,"Утвердить", "");	
		Если КомандаВыполнена = Истина Тогда
			СписокУтвержденных.Добавить(СоставПакета.Значение.Идентификатор);
		КонецЕсли;
	КонецЦикла;
	// обновим статусы в таблице
	Для Каждого ДокументСтрока из ТаблицаСопоставленияДокументов Цикл
		Если ДокументСтрока.Отмечен = Истина и СписокУтвержденных.НайтиПоЗначению(ДокументСтрока.ИдСБИС)<>Неопределено Тогда
			ДокументСтрока.Статус = 6;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
//////////////////////////////////////////////////////////////////////////////////

////////////////////// Обычное приложение/////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
Процедура ТаблицаСопоставленияДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
// Оформление таблицы сопоставляемых документов	
	//ОформлениеСтроки.Ячейки.Найдено.ОтображатьТекст = Ложь;
	
	ОформлениеСтроки.Ячейки.Найдено.ОтображатьКартинку = Истина;
	Если Число(ДанныеСтроки.Найдено)>1 Тогда
		ОформлениеСтроки.Ячейки.Найдено.ИндексКартинки = 2;
	Иначе	
		ОформлениеСтроки.Ячейки.Найдено.ИндексКартинки = Число(ДанныеСтроки.Найдено);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеСтроки.Документ1С) Тогда
		ОформлениеСтроки.Ячейки.Документ1С.Текст = МестныйКэш.ОбщиеФункции.СформироватьНазваниеВходящегоДокумента1С(ДанныеСтроки.Документ1С);
	КонецЕсли;
	Если ДанныеСтроки.Дубль Тогда
		ЦветДубля = Новый Цвет (255,110,110);
		ОформлениеСтроки.ЦветФона = ЦветДубля;
	КонецЕсли;	
	//ОформлениеСтроки.Ячейки.ДокументСБИС.Текст = ДанныеСтроки.ДокументСБИС[0].Представление;
	фрм = ЭтотОбъект.ПолучитьФорму("Таблица_РеестрДокументов");
	фрм.ТаблДокПриВыводеСтроки(МестныйКэш, Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры
Процедура РассчитатьДельтуИСуммуДокумента1С(СтрокаТаблицыДокументов)
// Процедура рассчитывает сумму и дельту документов сбис и 1С в строке таблицы	
    Если ЗначениеЗаполнено(СтрокаТаблицыДокументов.Документ1С) Тогда
		ИниЗагрузки = МестныйКэш.ОбщиеФункции.сбисИниЗагрузкиПоДокументу1С(МестныйКэш, СтрокаТаблицыДокументов.Документ1С);
		ИмяРеквизитаСуммы = МестныйКэш.ОбщиеФункции.сбисИмяРеквизитаСуммыДокумента1С(ИниЗагрузки);
		Попытка
			СуммаДокумента1С = СтрокаТаблицыДокументов.Документ1С[ИмяРеквизитаСуммы];
		Исключение
			СуммаДокумента1С = 0;
		КонецПопытки;
	Иначе
		СуммаДокумента1С = 0;
	КонецЕсли;
	ДельтаСтроки = Число(СтрокаТаблицыДокументов.Сумма) - СуммаДокумента1С;
	ДельтаСтроки = ?(ДельтаСтроки<0,-ДельтаСтроки,ДельтаСтроки);
	СтрокаТаблицыДокументов.СуммаДокумента1С = СуммаДокумента1С; 
	СтрокаТаблицыДокументов.Дельта = ДельтаСтроки;//?(НЕ СтрокаТаблицыДокументов.Документ1С.Пустая(),ДельтаСтроки,0);
КонецПроцедуры		
Процедура ТаблицаСопоставленияДокументовПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
// Процедура пересчитывает суммы после изменения сопоставления или при отметке строки	
	Если Элемент.ТекущаяКолонка.Имя = "Документ1С" Тогда
		РассчитатьДельтуИСуммуДокумента1С(Элемент.ТекущаяСтрока);
		ПересчетКонтрольныхСумм();
	ИначеЕсли Элемент.ТекущаяКолонка.Имя = "Отмечен" Тогда
		ПересчетКонтрольныхСумм();
	КонецЕсли;	
КонецПроцедуры
Процедура ТаблицаСопоставленияДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
// При щелчке по документу сбис открывается документ на онлайне, по другим колонкам - форма сопоставления одного документа	
	Если Колонка.Имя = "ДокументСБИС" Тогда
		сбисПолучитьФорму("ФормаГлавноеОкно").ОткрытьДокументОнлайнПоПакету(Элемент.ТекущиеДанные.СоставПакета[0].Значение, МестныйКэш);
	ИначеЕсли Колонка.Имя<>"Отмечен" Тогда
		фрм = сбисПолучитьФорму("ФормаСопоставитьСДокументом1С");
		Результат = фрм.Показать(МестныйКэш,Элемент.ТекущиеДанные,Ложь);
		Если Результат<>Ложь Тогда
			Элемент.ТекущиеДанные.Документ1С = Результат;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
Процедура ТаблицаСопоставленияДокументовДокумент1СНачалоВыбора(Элемент, СтандартнаяОбработка)
// Процедура открывает реестр документов 1С для ручного сопоставления	
	УстановитьОграничениеТипа(Элемент);
	Попытка
		СтандартнаяОбработка = Ложь;
		формаВыбора = Документы[Элемент.Значение.Метаданные().Имя].ПолучитьФормуВыбора(,ЭтаФорма);
		ОтборКонтрагент = МестныйКэш.ОбщиеФункции.НайтиКонтрагентаИзДокументаСБИС(МестныйКэш.Ини.Конфигурация,ЭлементыФормы.ТаблицаСопоставленияДокументов.ТекущаяСтрока.СоставПакета[0].Значение.Контрагент);
		
		Если ОтборКонтрагент<>Ложь Тогда
			формаВыбора.ДокументСписок.Отбор.Контрагент.Значение = ОтборКонтрагент.Ссылка;
			формаВыбора.ДокументСписок.Отбор.Контрагент.Использование = Истина;
		КонецЕсли;
		ВыбранноеЗначение = формаВыбора.ОткрытьМодально();
		Если ВыбранноеЗначение<>Неопределено Тогда		
			Элемент.Значение = формаВыбора.ТекущийЭлемент.ТекущаяСтрока;
		КонецЕсли;
	Исключение
		Ошибка = ОписаниеОшибки();
		СтандартнаяОбработка = Истина;
	КонецПопытки
КонецПроцедуры
//Процедура ТаблицаСопоставленияДокументовДокумент1СОчистка(Элемент, СтандартнаяОбработка)
//	УстановитьОграничениеТипа(Элемент, ЭлементыФормы.ТаблицаСопоставленияДокументов.ТекущаяСтрока.ДокументСБИС[0].Значение.СоставПакета[0].Значение);
//КонецПроцедуры

Процедура ТаблицаСопоставленияДокументовДокумент1СПриИзменении(Элемент)
// Процедура пересчитывает суммы документов при ручном сопоставлении документа 1С	
	ПересчетКонтрольныхСумм();
КонецПроцедуры

Процедура ОтметитьВсеНажатие(Элемент)
	ОтметитьВсе = НЕ ОтметитьВсе;
	ОтметитьВсеПриИзменении(Элемент);
КонецПроцедуры

Процедура ОтметитьСопоставленныеНажатие(Элемент)
	// Вставить содержимое обработчика.
	Для Каждого ДокументСтрока из ТаблицаСопоставленияДокументов Цикл
		Если ДокументСтрока.Найдено = 1 и ДокументСтрока.Дельта = 0 Тогда
			ДокументСтрока.Отмечен = Истина;
		Иначе
			ДокументСтрока.Отмечен = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
Функция ПолучитьПакетыДляУтверждения()
	// Утверждает отмеченные
	СписокПакетов = Новый СписокЗначений;
	Копия = ТаблицаСопоставленияДокументов.Скопировать();
	Дубли = Копия.НайтиСтроки(Новый Структура("Дубль", Истина));
	Для Каждого Строка Из Дубли Цикл
		Копия.Удалить(Строка);	
	КонецЦикла;
	Копия.Свернуть("ИдСБИС,Отмечен");    // сворачиваем, чтобы определить, что все вложения из одного пакета отмечены
	Для Каждого ДокументСтрока из ТаблицаСопоставленияДокументов Цикл
		Если ДокументСтрока.Отмечен = Истина Тогда
			Строки = Копия.НайтиСтроки(Новый Структура("ИдСБИС",ДокументСтрока.ИдСБИС));
			Если Строки.Количество() = 1 Тогда   // все вложения из пакета отмечены
				Если СписокПакетов.НайтиПоЗначению(ДокументСтрока.СоставПакета[0].Значение) = Неопределено Тогда
					СписокПакетов.Добавить(ДокументСтрока.СоставПакета[0].Значение);
				КонецЕсли;
			Иначе
				Сообщить("Документ "+ДокументСтрока.ДокументСБИСНазвание+" не утвержден. Не все вложения из пакета сопоставлены.");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат СписокПакетов;
КонецФункции