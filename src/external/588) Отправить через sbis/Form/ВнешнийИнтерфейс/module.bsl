&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Попытка
			ЭтотОбъект="";
		Исключение
		КонецПопытки;
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы);
КонецФункции

&НаКлиенте
Функция сбисАвторизация(Кэш, ПараметрыАвторизации) Экспорт
// Функция выполняет авторизацию на онлайне по сертификату или по логину/паролю	
	ТекстОшибки = "";
	СессияДействительна = Ложь;
	Если ПараметрыАвторизации.Свойство("ИдентификаторСессии") и ЗначениеЗаполнено(ПараметрыАвторизации.ИдентификаторСессии) Тогда
		Кэш.Интеграция.СформироватьНастройкиПодключения(Кэш, ПараметрыАвторизации.ИдентификаторСессии);
		Кэш.Парам.ИдентификаторСессии = ПараметрыАвторизации.ИдентификаторСессии;
		СессияДействительна = Кэш.Интеграция.сбисСессияДействительна(Кэш) = 1;
		Если СессияДействительна Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	Если НЕ СессияДействительна Тогда
		Если ПараметрыАвторизации.ВходПоСертификату Тогда
			Результат = Кэш.Интеграция.АвторизоватьсяПоСертификату(Кэш,ПараметрыАвторизации.Сертификат,ТекстОшибки);		
		иначе
			Результат = Кэш.Интеграция.АвторизоватьсяПоЛогинуПаролю(Кэш,ПараметрыАвторизации.Логин,ПараметрыАвторизации.Пароль,ТекстОшибки);
		КонецЕсли;	
		Если Результат=Ложь Тогда
			Кэш.Парам.ИдентификаторСессии = "";
			Возврат ТекстОшибки;
		КонецЕсли;
		Кэш.Парам.ИдентификаторСессии = Результат;
	КонецЕсли;
	Возврат Истина;
КонецФункции
&НаКлиенте
Функция сбисПодготовитьКэш(ДополнительныеПараметры=Неопределено) Экспорт	
	// подготовка кэша, SDK, авторизация
	// дополнительныеПараметры - структура, может содержать поля, аналогичные Кэш.Парам. При наличии заменяет одноименные поля в кэш.парам,
	// например, можно указать способ обмена (sdk, апи, каталог)
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	ГлавноеОкно.сбисВосстановитьЗначения();
	Кэш = ГлавноеОкно.ПослеОткрытияЗаполнитьКэш();
	Кэш.Вставить("ТихийРежим", Истина);
	Кэш.Вставить("ГлавноеОкно", ГлавноеОкно);
	Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		Для Каждого Парам Из ДополнительныеПараметры Цикл
			Кэш.парам.Вставить(Парам.Ключ, Парам.Значение);
		КонецЦикла;
	КонецЕсли;
	ОбменВключен = Кэш.Интеграция.Включить(Кэш);
	Если ОбменВключен<>Истина Тогда   // если не удалось включить SDK или Плагин
		Возврат ОбменВключен;
	КонецЕсли;
	
	Возврат Кэш;
КонецФункции
&НаКлиенте
Функция сбисПрочитатьНастройки(Кэш, ДополнительныеПараметры=Неопределено) Экспорт	
	// подготовка кэша, SDK, авторизация
	// дополнительныеПараметры - структура, может содержать поля, аналогичные Кэш.Парам. При наличии заменяет одноименные поля в кэш.парам,
	// например, можно указать способ обмена (sdk, апи, каталог)
	Кэш.ГлавноеОкно.КаталогНастроекПриИзмененииОбщее(Кэш, Ложь);
	Кэш.ГлавноеОкно.СоставНастроекПриИзмененииОбщее(Кэш);
КонецФункции
&НаКлиенте
Функция сбисОтправка(Кэш, МассивСтрок, ДополнительныеПараметры = Неопределено) Экспорт	
	// отправка документов
	фрм = сбисПолучитьФорму("Документ_Шаблон");
	Кэш.Текущий.Вставить("Форма",сбисПолучитьФорму("Раздел_Продажа_Шаблон"));
	фрм.ОтправитьДокументы(Кэш,МассивСтрок);
	Возврат Кэш.РезультатОтправки;
КонецФункции
&НаКлиенте
Функция сбисСопоставление(Кэш, Фильтр, ДополнительныеПараметры = Неопределено) Экспорт	
	// сопоставление документов
	// Фильтр - структура. Может содержать поля, одноименные полям фильтра на главном окне. По заданному фильтру будут отбираться документы для сопоставления.
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	Кэш.Текущий.Раздел = "1";
	Результат = Новый Структура("СопоставленныеДокументы", Новый массив);
	СтруктураНастроек = Кэш.ОбщиеФункции.ПолучитьПараметрыСБИС(Кэш.Парам.КаталогНастроек);
	Если СтруктураНастроек.Свойство("ДатаПоследнегоСопоставленияДокументов") Тогда
		ГлавноеОкно.ФильтрДатаНач = СтруктураНастроек.ДатаПоследнегоСопоставленияДокументов;
	Иначе
		ГлавноеОкно.ФильтрДатаНач = НачалоДня(ТекущаяДата());
	КонецЕсли;
	ГлавноеОкно.ФильтрДатаКнц = ТекущаяДата();
	ГлавноеОкно.ЗаписейНаСтранице = 100;
	ГлавноеОкно.ФильтрЕстьЕще = Истина;
	
	// если передали фильтры извне, то берем переданные значения
	Для Каждого Элемент Из Фильтр Цикл
		ГлавноеОкно[Элемент.Ключ] = Элемент.Значения
	КонецЦикла;
	
	сч = 0;
	фрмСопост = сбисПолучитьФорму("ФормаСопоставитьСДокументами1С");
	фрмСтатусы = ГлавноеОкно.сбисНайтиФормуФункции("ЗаписатьПараметрыДокументаСБИС",Кэш.ФормаРаботыСоСтатусами,"",Кэш);
	СписокСопоставленныхДокументов1С = Новый СписокЗначений;
	
	Пока ГлавноеОкно.ФильтрЕстьЕще Цикл
		сч = сч+1;
		ГлавноеОкно.ФильтрСтраница = сч;
		filter = Кэш.Интеграция.ПолучитьФильтр(ГлавноеОкно, Новый Структура("ТипРеестра", "Входящие"));
		СтруктураДляОбновленияФормы = Кэш.ВИ.ПолучитьСписокСобытийПоФильтру(Кэш, filter, ГлавноеОкно);
		Если СтруктураДляОбновленияФормы.Количество()=0 Тогда
			Возврат "Ошибка при получении списка документов с online.sbis.ru";
		КонецЕсли;
		СписокСтрок = Новый СписокЗначений;
		СписокСтрок.ЗагрузитьЗначения(СтруктураДляОбновленияФормы.Таблица_РеестрСобытий);
		СписокДокументовДляСопоставления = фрмСопост.ПодготовитьСписокДокументовКСопоставлению(Кэш, СписокСтрок);
		Для Каждого Строка из СписокДокументовДляСопоставления Цикл
			Если Строка.Документы1С.Количество() = 0 Тогда // Документ еще не сопоставлен
				СписокПодходящихДокументов=Кэш.ОбщиеФункции.НайтиПодходящиеДокументы(Кэш.Ини,Кэш.Парам, Строка);
				Если СписокПодходящихДокументов.Количество()=1 Тогда
					Документ1С = СписокПодходящихДокументов[0].Значение;
					Если СписокСопоставленныхДокументов1С.НайтиПоЗначению(Документ1С) = Неопределено Тогда
						СписокСопоставленныхДокументов1С.Добавить(Документ1С);
					Иначе   // документ 1С уже сопоставлен с более поздним документом СБИС
						Продолжить;
					КонецЕсли;
					//Попытка
					//	СуммаДокумента1С = Документ1С.СуммаДокумента;
					//Исключение
					//	СуммаДокумента1С = 0;
					//КонецПопытки;
					//Если Число(СуммаДокумента1С) = Число(Строка.Сумма) Тогда
						СтруктураСвойств = Новый Структура("ДокументСБИС_Ид,ДокументСБИС_ИдВложения,ДокументСБИС_Статус", Строка.СоставПакета.Идентификатор,Строка.ИдВложения,Строка.СоставПакета.Состояние.Название);
						фрмСтатусы.ЗаписатьПараметрыДокументаСБИС(СтруктураСвойств, Документ1С, Кэш.Ини, Кэш.Парам.КаталогНастроек);
						СтруктураСвойств.Вставить("Документ1С", Документ1С);
						Результат.СопоставленныеДокументы.Добавить(СтруктураСвойств);
						//сбисЗаписатьСтрокуВЛог("Сопоставлен документ "+строка(Документ1С), ГлавноеОкно.Кэш.Парам.КаталогЛогов);
						//Если ТипЗнч(Документ1С) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда   // если сопоставили накладную, утверждаем пакет
						//	фрм = ГлавноеОкно.сбисНайтиФормуФункции("сбисВыполнитьКоманду",Кэш.ИнтеграцияИмя,"",Кэш);
						//	Кэш.Вставить("ДатаУтверждения", ТекущаяДата());
						//	Если фрм.сбисВыполнитьКоманду(Кэш, Строка.СоставПакета,"Утвердить", Строка.СоставПакета.Название)=Истина Тогда
						//		сбисЗаписатьСтрокуВЛог("Утвержден документ "+Строка.СоставПакета.Название, ГлавноеОкно.Кэш.Парам.КаталогЛогов);	
						//	КонецЕсли;
						//КонецЕсли;
					//КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	СтруктураНастроек = Новый Структура("ДатаПоследнегоСопоставленияДокументов", Формат(ГлавноеОкно.ФильтрДатаКнц, "ДФ=""дд.ММ.гггг ЧЧ.мм.сс"""));
	Кэш.ОбщиеФункции.СохранитьПараметрыСБИС(СтруктураНастроек, Кэш.Парам.КаталогНастроек);

	Возврат Результат;
КонецФункции
&НаКлиенте
Функция сбисВыполнитьКоманду(Кэш, МассивИд, ИмяКоманды, ДополнительныеПараметры = Неопределено) Экспорт	
	// Применяет указанную команду к пакетам, идентификаторы которых содержатся в МассивИд
	// Нельзя выполнять команды, требующие ввода комментария
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	фрм = ГлавноеОкно.сбисНайтиФормуФункции("сбисВыполнитьКоманду",Кэш.ИнтеграцияИмя,"",Кэш);
	Результат = Новый Структура("РезультатВыполнения", Новый массив);
	
	Для Каждого Идентификатор Из МассивИд Цикл
		КомандаВыполнена = фрм.сбисВыполнитьКоманду(Кэш, Идентификатор,ИмяКоманды, "");
		Результат.РезультатВыполнения.Добавить(Новый Структура("Ид, КомандаВыполнена", Идентификатор, КомандаВыполнена));
	КонецЦикла;
	Возврат Результат;
КонецФункции
&НаКлиенте
Функция сбисОбработкаСлужебныхДокументов(Кэш, ДополнительныеПараметры = Неопределено) Экспорт	
	// Обработка служебных документов
	Кэш.Интеграция.ОбработкаСлужебныхДокументов(Кэш);
КонецФункции
&НаКлиенте
Функция сбисОбновлениеСтатусов(Кэш, ДополнительныеПараметры = Неопределено) Экспорт	
	// обновление статусов документов
	Кэш.Интеграция.ПолучитьСписокИзменений(Кэш);
КонецФункции
