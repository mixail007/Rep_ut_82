&НаКлиенте
Функция ПолучитьДанныеИзДокумента1С(Кэш,Контекст) Экспорт
	// Функция формирует структуру выгружаемого файла и добавляет его в состав пакета
	Попытка	
		Контекст.Вставить("ТаблДок",Новый Структура());
		Контекст.ТаблДок.Вставить("ИтогТабл",Новый Массив);
		Контекст.ТаблДок.Вставить("СтрТабл",Новый Массив);
		Контекст.Вставить("ИтогСумма",0);
		Контекст.Вставить("ИтогСуммаБезНалога",0);
		Контекст.Вставить("ИтогСуммаНДС",0);
		Контекст.Вставить("ИтогКоличество",0);
		Контекст.Вставить("ИтогБрутто",0);
		Контекст.Вставить("ИтогНетто",0);
		Контекст.Вставить("ИтогКолМест",0);
		
		Контекст.Вставить("ПредИтогСумма",0);
		Контекст.Вставить("ПредИтогСуммаБезНалога",0);
		Контекст.Вставить("ПредИтогСуммаНДС",0);
		НоменклатураКодКонтрагента = Кэш.ОбщиеФункции.РассчитатьЗначение("НоменклатураКодКонтрагента", Контекст.ФайлДанные,Кэш);  // надо сопоставить номенклатуру перед отправкой
		Если ЗначениеЗаполнено(НоменклатураКодКонтрагента) Тогда
			Контекст.Вставить("НоменклатураКодКонтрагента",НоменклатураКодКонтрагента);	
		КонецЕсли;
		
		ПолучитьТабличнуюЧастьДокумента1С(Кэш,Контекст);
		Если Контекст.ТаблДок.СтрТабл.Количество() = 0 Тогда//нет такого документа
			Возврат Истина;
		КонецЕсли;
		
		ИтогТабл=Новый Структура;
		ИтогТабл.Вставить("Кол_во", Формат(Контекст.ИтогКоличество, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000"));
		ИтогТабл.Вставить("Сумма", Формат(Контекст.ИтогСумма, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
		ИтогТабл.Вставить("СуммаБезНал", Формат(Контекст.ИтогСуммаБезНалога, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
		ИтогТабл.Вставить("НДС",Новый Структура);
		ИтогТабл.НДС.Вставить("Сумма",Формат(Контекст.ИтогСуммаНДС, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
		Если Контекст.ИтогКолМест>0 Тогда
			ИтогТабл.Вставить("Упаковка",Новый Структура);
			ИтогТабл.Упаковка.Вставить("КолМест",Формат(Контекст.ИтогКолМест, "ЧЦ=17; ЧДЦ=0; ЧРД=.; ЧГ=0; ЧН=0"));	
		КонецЕсли;
		
		Если Контекст.ФайлДанные.Свойство("ЕдиницаИзмеренияВеса") Тогда
			ЕдиницаИзмеренияВеса = Контекст.ФайлДанные.ЕдиницаИзмеренияВеса;
			Если Контекст.ИтогБрутто > 0 Тогда
				ИтогТаблБрутто = Новый Структура;
				ИтогТаблБрутто.Вставить("Кол_во", Формат(Контекст.ИтогБрутто, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.00"));
				Если Контекст.ФайлДанные.Свойство("МассаИтогПрописью") Тогда
					Контекст.ФайлДанные.Вставить("МассаИтог", Контекст.ИтогБрутто);
					ИтогТаблБрутто.Вставить("Прописью", Кэш.ОбщиеФункции.РассчитатьЗначение("МассаИтогПрописью", Контекст.ФайлДанные,Кэш));
				Иначе	
					ИтогТаблБрутто.Вставить("Прописью", ЧислоПрописью(Контекст.ИтогБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".");
				КонецЕсли;	
				ИтогТабл.Вставить("Брутто", ИтогТаблБрутто);
			КонецЕсли;
			
			Если Контекст.ИтогНетто > 0 Тогда
				ИтогТаблНетто = Новый Структура;
				ИтогТаблНетто.Вставить("Кол_во", Формат(Контекст.ИтогНетто, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.00"));
				Если Контекст.ФайлДанные.Свойство("МассаИтогПрописью") Тогда
					Контекст.ФайлДанные.Вставить("МассаИтог", Контекст.ИтогНетто);
					ИтогТаблНетто.Вставить("Прописью", Кэш.ОбщиеФункции.РассчитатьЗначение("МассаИтогПрописью", Контекст.ФайлДанные,Кэш));
				Иначе	
					ИтогТаблНетто.Вставить("Прописью", ЧислоПрописью(Контекст.ИтогНетто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".");
				КонецЕсли;	
				ИтогТабл.Вставить("Нетто", ИтогТаблНетто);
			КонецЕсли;
		КонецЕсли;
		
		Если Контекст.Свойство("ЕстьПредыдущиеДанные") Тогда
			ПредИтогТабл=Новый Структура;
			ПредИтогТабл.Вставить("Сумма", Формат(Контекст.ПредИтогСумма, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
			ПредИтогТабл.Вставить("СуммаБезНал", Формат(Контекст.ПредИтогСуммаБезНалога, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
			ПредИтогТабл.Вставить("НДС",Новый Структура);
			ПредИтогТабл.НДС.Вставить("Сумма",Формат(Контекст.ПредИтогСуммаНДС, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
			ИтогТабл.Вставить("ПредИтогТабл",ПредИтогТабл);
		КонецЕсли;
		
		//Контекст.ТаблДок.Вставить("ИтогТабл",Новый Массив);
		Контекст.ТаблДок.ИтогТабл.Добавить(ИтогТабл);
		
		
		Док  = Новый Структура;
		Док.Вставить("Файл",Новый Структура);
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Файл",Контекст.ФайлДанные,Док.Файл);
		Док.Файл.Вставить("Документ",Новый Структура);
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Документ",Контекст.ФайлДанные,Док.Файл.Документ);
		Док.Файл.Документ.Вставить("Основание",Новый Массив);
		
		Валюта =  Кэш.ОбщиеФункции.РассчитатьЗначение("Валюта_КодОКВ", Контекст.ФайлДанные, Кэш);
		Если ЗначениеЗаполнено(Валюта) Тогда
			Док.Файл.Документ.Вставить("Валюта",Новый Структура);
			Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Валюта",Контекст.ФайлДанные,Док.Файл.Документ.Валюта);
		КонецЕсли;
		
		Отправитель = "";
		Получатель = "";
		ОтправительРоль=Кэш.ОбщиеФункции.РассчитатьЗначение("Отправитель_Роль", Контекст.ФайлДанные, Кэш);
		ПолучательРоль=Кэш.ОбщиеФункции.РассчитатьЗначение("Получатель_Роль", Контекст.ФайлДанные, Кэш);
		Если Не ЗначениеЗаполнено(ОтправительРоль) Тогда
			ОтправительРоль = "Отправитель";
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПолучательРоль) Тогда
			ПолучательРоль = "Получатель";
		КонецЕсли;
		Если Контекст.ФайлДанные.Свойство("мСторона") Тогда
			Для Каждого Параметр Из Контекст.ФайлДанные.мСторона Цикл
				Если Параметр.Значение.Свойство("Роль") Тогда
					Роль = Кэш.ОбщиеФункции.РассчитатьЗначение("Роль",Параметр.Значение,Кэш);
				Иначе
					Роль = Кэш.ОбщиеФункции.РассчитатьЗначение("Сторона_Роль",Параметр.Значение,Кэш);
				КонецЕсли;
				Если Роль = ОтправительРоль Тогда
					Сертификат = Кэш.ОбщиеФункции.РассчитатьЗначение("Сертификат",Параметр.Значение,Кэш);
				КонецЕсли;
				Сторона = Кэш.ОбщиеФункции.ПолучитьСторону(Кэш,Параметр.Значение);     //?????
				Если Сторона<>Неопределено Тогда
					Док.Файл.Документ.Вставить(Роль,Сторона);
				КонецЕсли;
			КонецЦикла;
			Если Не Док.Файл.Документ.Свойство(ПолучательРоль) Тогда
				Сообщить("Не удалось определить ИНН получателя документа "+строка(Контекст.Документ));
				Возврат Ложь;
			КонецЕсли;
			Если Не Док.Файл.Документ.Свойство(ОтправительРоль) Тогда
				Сообщить("Не удалось определить ИНН отправителя документа "+строка(Контекст.Документ));
				Возврат Ложь;
			КонецЕсли;
			// Если Грузоотправитель и грузополучатель нужны, но они не попали в файл, то берем их с отправителя и получателя
			Если Контекст.ФайлДанные.мСторона.Свойство("Грузоотправитель") и Не Док.Файл.Документ.Свойство("Грузоотправитель") и Док.Файл.Документ.Свойство(ОтправительРоль) Тогда
				Док.Файл.Документ.Вставить("Грузоотправитель",Новый Структура);		
				Кэш.ОбщиеФункции.сбисСкопироватьСтруктуру(Док.Файл.Документ.Грузоотправитель,Док.Файл.Документ[ОтправительРоль]);
			КонецЕсли;
			Если Контекст.ФайлДанные.мСторона.Свойство("Грузополучатель") и Не Док.Файл.Документ.Свойство("Грузополучатель") и Док.Файл.Документ.Свойство(ПолучательРоль) Тогда
				Док.Файл.Документ.Вставить("Грузополучатель",Новый Структура);		
				Кэш.ОбщиеФункции.сбисСкопироватьСтруктуру(Док.Файл.Документ.Грузополучатель,Док.Файл.Документ[ПолучательРоль]);
			КонецЕсли;
			Отправитель = Док.Файл.Документ[ОтправительРоль]; 
			Получатель = Док.Файл.Документ[ПолучательРоль];
		КонецЕсли;
		Если Док.Файл.Свойство("Имя") Тогда
			Если Контекст.ФайлДанные.Свойство("мСторона") и Док.Файл.Документ[ПолучательРоль].Свойство("Идентификатор") и Док.Файл.Документ[ОтправительРоль].Свойство("Идентификатор") Тогда
				Док.Файл.Имя = Док.Файл.Имя + Док.Файл.Документ[ПолучательРоль].Идентификатор+"_"+Док.Файл.Документ[ОтправительРоль].Идентификатор;
			КонецЕсли;
			Док.Файл.Имя = Док.Файл.Имя+"_"+Формат(ТекущаяДата(),"ДФ=ггггММдд")+"_"+строка(Новый УникальныйИдентификатор());
		КонецЕсли;
		
		
		Если Контекст.ФайлДанные.Свойство("мОснование") Тогда
			Для Каждого Параметр Из Контекст.ФайлДанные.мОснование Цикл
				Если ТипЗнч(Параметр.Значение) = Тип("Массив") Тогда
					Для Каждого Элемент Из Параметр.Значение Цикл
						Кэш.ОбщиеФункции.сбисСкопироватьСтруктуру(Контекст.ФайлДанные,Элемент);
						Основание = Новый Структура();
						Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Основание",Элемент,Основание);
						Док.Файл.Документ.Основание.Добавить(Основание);	
					КонецЦикла;
				Иначе
					Кэш.ОбщиеФункции.сбисСкопироватьСтруктуру(Контекст.ФайлДанные,Параметр.Значение);
					Основание = Новый Структура();
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Основание",Контекст.ФайлДанные,Основание);
					Док.Файл.Документ.Основание.Добавить(Основание);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если Контекст.ФайлДанные.Свойство("мПараметр") Тогда
			Док.Файл.Документ.Вставить("Параметр",Новый Массив);
			Для Каждого Элемент Из Контекст.ФайлДанные.мПараметр Цикл
				Кэш.ОбщиеФункции.сбисСкопироватьСтруктуру(Контекст.ФайлДанные,Элемент.Значение);
				Параметр = Новый Структура();
				Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Параметр",Контекст.ФайлДанные,Параметр);
				Док.Файл.Документ.Параметр.Добавить(Параметр);
			КонецЦикла;
		КонецЕсли;
		
		ОтветственныйСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруОтветственного(Кэш,Контекст);
		ПодразделениеСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруПодразделения(Кэш,Контекст);
		РегламентСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруРегламента(Кэш,Контекст);
		ОснованияМассив = Кэш.ОбщиеФункции.ПолучитьМассивОснований(Кэш,Контекст);
		ДатаВложения = ?(Док.Файл.Документ.Свойство("Дата"), Док.Файл.Документ.Дата, "");
		НомерВложения = ?(Док.Файл.Документ.Свойство("Номер"), Док.Файл.Документ.Номер, "");
		СуммаВложения = Формат(Контекст.ИтогСумма, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
		НазваниеВложения = ?(Док.Файл.Документ.Свойство("Название"), Док.Файл.Документ.Название+" № "+НомерВложения+" от "+ДатаВложения+" на сумму "+СуммаВложения, "");
		Тип = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_Тип", Контекст.ФайлДанные,Кэш);
		ПодТип = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодТип", Контекст.ФайлДанные,Кэш);
		ВерсияФормата = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ВерсияФормата", Контекст.ФайлДанные,Кэш);
		ПодВерсияФормата = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодВерсияФормата", Контекст.ФайлДанные,Кэш);
		Примечание = Кэш.ОбщиеФункции.РассчитатьЗначение("Примечание", Контекст.ФайлДанные,Кэш);
		
		Док.Файл.Документ.Вставить("ТаблДок", Контекст.ТаблДок);
		Вложение = Новый Структура("СтруктураДокумента,Отправитель,Получатель,Ответственный,Подразделение,Регламент,ДокументОснование, Документ1С, Название, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,Дата,Номер,Сумма", Док,Отправитель,Получатель,ОтветственныйСтруктура,ПодразделениеСтруктура,РегламентСтруктура,ОснованияМассив, Контекст.Документ, НазваниеВложения, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,ДатаВложения,НомерВложения,СуммаВложения);
		Если ЗначениеЗаполнено(НоменклатураКодКонтрагента) Тогда
			Вложение.Вставить("НоменклатураКодКонтрагента",НоменклатураКодКонтрагента);	
		КонецЕсли;
		Если ЗначениеЗаполнено(Примечание) Тогда
			Вложение.Вставить("Примечание",Примечание);	
		КонецЕсли;
		Если ЗначениеЗаполнено(Сертификат) Тогда
			Вложение.Вставить("Сертификат",Сертификат);	
		КонецЕсли;
		Контекст.СоставПакета.Вложение.Добавить(Вложение);
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеФормированияДокумента","Файл_"+Контекст.ФайлДанные.Файл_Формат+"_"+СтрЗаменить(СтрЗаменить(Контекст.ФайлДанные.Файл_ВерсияФормата, ".", "_"), " ", ""),"Файл_Шаблон", Кэш);
		Если фрм<>Ложь Тогда
			фрм.сбисПослеФормированияДокумента(Док, Кэш, Контекст);	
			Вложение.СтруктураДокумента = Док; // на случай, если Док поменялся в функции сбисПослеФормированияДокумента
		КонецЕсли;
		Возврат Истина;
		
	Исключение
		Если Кэш.Свойство("РезультатОтправки") Тогда
			Кэш.РезультатОтправки.НеСформировано = Кэш.РезультатОтправки.НеСформировано+1;
		КонецЕсли;
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
КонецФункции
&НаКлиенте
Функция ПолучитьТабличнуюЧастьДокумента1С(Кэш,Контекст) Экспорт
	// Функция формирует структуру табличной части файла	
	СуммаВключаетНДС=Кэш.ОбщиеФункции.РассчитатьЗначение("СуммаВключаетНДС", Контекст.ФайлДанные,Кэш);
	// проверяем надо ли пересчитывать суммы в валюту учета
	Валюта = Кэш.ОбщиеФункции.РассчитатьЗначение("Валюта", Контекст.ФайлДанные,Кэш);
	ВалютаУчета = Кэш.ОбщиеФункции.РассчитатьЗначение("ВалютаУчета", Контекст.ФайлДанные,Кэш);
	Если ЗначениеЗаполнено(Валюта) и ЗначениеЗаполнено(ВалютаУчета) и Валюта<>ВалютаУчета Тогда
		ПересчитатьВВалютеУчета = Кэш.ОбщиеФункции.РассчитатьЗначение("ПересчитатьВВалютеУчета", Контекст.ФайлДанные,Кэш);
	Иначе
		ПересчитатьВВалютеУчета = Ложь;
	КонецЕсли;
	Если ПересчитатьВВалютеУчета=Истина Тогда
		ИтогСумма = Кэш.ОбщиеФункции.РассчитатьЗначение("ИтогСумма", Контекст.ФайлДанные,Кэш);
		СуммаДляПересчетаВключаетНДС = Кэш.ОбщиеФункции.РассчитатьЗначение("СуммаДляПересчетаВключаетНДС", Контекст.ФайлДанные,Кэш);	
		Если Не ЗначениеЗаполнено(СуммаДляПересчетаВключаетНДС) Тогда
			СуммаДляПересчетаВключаетНДС = СуммаВключаетНДС;
		КонецЕсли;
		КурсВзаиморасчетов = Кэш.ОбщиеФункции.РассчитатьЗначение("КурсВзаиморасчетов", Контекст.ФайлДанные,Кэш);
		КратностьВзаиморасчетов = Кэш.ОбщиеФункции.РассчитатьЗначение("КратностьВзаиморасчетов", Контекст.ФайлДанные,Кэш);
		Если Контекст.ФайлДанные.Свойство("Валюта_КодОКВ") и Контекст.ФайлДанные.Свойство("ВалютаУчета_КодОКВ") Тогда
			Контекст.ФайлДанные.Валюта_КодОКВ = Контекст.ФайлДанные.ВалютаУчета_КодОКВ;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Параметр Из Контекст.ФайлДанные.мТаблДок Цикл
		// Чтобы одна и та же табличная часть не попадала 2 раза в документ (в СФ, если по документу-основанию формируются дополнительные файлы)
		Если Контекст.Свойство("СписокТЧ") Тогда  
			Если Контекст.СписокТЧ.НайтиПоЗначению(Параметр.Ключ)<>Неопределено Тогда
				Продолжить;
			Иначе
				Контекст.СписокТЧ.Добавить(Параметр.Ключ);
			КонецЕсли;
		КонецЕсли;		
		
		Если ТипЗнч(Параметр.Значение) = Тип("Массив") Тогда    // стандартная табличная часть
			ТабЧастьДокумента = Параметр.Значение;
		ИначеЕсли ТипЗнч(Параметр.Значение) = Тип("Структура") и Лев(Параметр.Значение.ТаблДок,1)<>"{" Тогда  // табличная часть из одной строки, которая заполняется прямо из реквизитов документа
			ТабЧастьДокумента = Новый Массив;
			ТабЧастьДокумента.Добавить(Параметр.Значение);
		Иначе   // табличная часть вычисляется с помощью функции
			Кэш.ОбщиеФункции.сбисСкопироватьСтруктуру(Контекст.ФайлДанные, Параметр.Значение);
			ТабЧастьДокумента = Кэш.ОбщиеФункции.РассчитатьЗначение("ТаблДок", Контекст.ФайлДанные, Кэш);
		КонецЕсли;
		
		Если ТипЗнч(ТабЧастьДокумента) = Тип("Массив") Тогда
			сч=0;
			Для Каждого Стр Из ТабЧастьДокумента Цикл
				Если Кэш.Парам.ОтправлятьНоменклатуруСДокументами = Истина и Кэш.Ини.Свойство("Номенклатура") Тогда
					Номенклатура = Кэш.ОбщиеФункции.РассчитатьЗначение("Номенклатура", Стр, Кэш);
					Если Кэш.СписокНоменклатуры.НайтиПоЗначению(Номенклатура) = Неопределено Тогда
						Кэш.СписокНоменклатуры.Добавить(Номенклатура);
					КонецЕсли;
				КонецЕсли;
				ДобавлятьСтроку = Истина;
				сч=сч+1;
				Стр.Вставить("РеквизитСопоставленияНоменклатуры", Кэш.КэшЗначенийИни.РеквизитСопоставленияНоменклатуры);
				Стр.Вставить("СуммаВключаетНДС",СуммаВключаетНДС);
				НоваяСтрока = Новый Структура;
				Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"ТаблДок",Стр,НоваяСтрока);
				НоваяСтрока.Вставить("ПорНомер",Формат(сч, "ЧГ=0")); 
				СуммаНДС = Кэш.ОбщиеФункции.РассчитатьЗначение("СуммаНДС", Стр, Кэш);
				Попытка
					СуммаНДС = Число(СуммаНДС);
				Исключение
					СуммаНДС = 0;
				КонецПопытки;
				Попытка
					НоваяСтрока.Сумма = Число(НоваяСтрока.Сумма);
				Исключение
					НоваяСтрока.Сумма = 0;
				КонецПопытки;
				НоваяСтрока.Вставить("СуммаБезНал",формат(НоваяСтрока.Сумма - ?(СуммаВключаетНДС, СуммаНДС, 0), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
				НоваяСтрока.Сумма = формат(Число(НоваяСтрока.Сумма) + ?(СуммаВключаетНДС, 0, СуммаНДС), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				Если Стр.Свойство("СуммаАкциз") и ЗначениеЗаполнено(Стр.СуммаАкциз) Тогда
					НоваяСтрока.Вставить("Акциз",Новый Структура);
					НоваяСтрока.Акциз.Вставить( "Сумма", Стр.СуммаАкциз);	
				КонецЕсли;
				НоваяСтрока.Вставить("НДС",Новый Структура);
				фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("ЗначениеИТипСтавки","РаботаСДокументами1С","",Кэш);
				СтрСтавка = фрм.ЗначениеИТипСтавки(Стр.СтавкаНДС);
				НоваяСтрока.НДС.Вставить( "Сумма", формат(СуммаНДС, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
				НоваяСтрока.НДС.Вставить( "Ставка", СтрСтавка.Ставка);	
				НоваяСтрока.НДС.Вставить( "ТипСтавки", СтрСтавка.ТипСтавки);	
				
				Если Стр.Свойство("мПараметр") Тогда
					НоваяСтрока.Вставить("Параметр", Новый Массив);
					Для Каждого Элемент Из Стр.мПараметр Цикл
						Кэш.ОбщиеФункции.сбисСкопироватьСтруктуру(Стр,Элемент.Значение);
						Параметр = Новый Структура();
						Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Параметр",Стр,Параметр);
						НоваяСтрока.Параметр.Добавить(Параметр);
					КонецЦикла;
				КонецЕсли;
				
				Если Стр.Свойство("ПредСтрТабл") Тогда
					Если сч = 1 Тогда  
						Контекст.Вставить("ЕстьПредыдущиеДанные", Истина);
					КонецЕсли;
					ПредыдущиеДанные = Новый Структура;
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"ПредСтрТабл",Стр,ПредыдущиеДанные);
					СуммаНДСДо = Кэш.ОбщиеФункции.РассчитатьЗначение("СуммаНДСДо", Стр, Кэш);
					СуммаНДСДо = Число(СуммаНДСДо);
					ПредыдущиеДанные.Вставить("СуммаБезНал",формат(ПредыдущиеДанные.Сумма - ?(СуммаВключаетНДС, СуммаНДСДо, 0), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
					ПредыдущиеДанные.Сумма = формат(Число(ПредыдущиеДанные.Сумма) + ?(СуммаВключаетНДС, 0, СуммаНДСДо), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
					ПредыдущиеДанные.Вставить("Акциз",Новый Структура);
					ПредыдущиеДанные.Акциз.Вставить( "Сумма", Стр.СуммаАкцизДо);	
					ПредыдущиеДанные.Вставить("НДС",Новый Структура);
					фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("ЗначениеИТипСтавки","РаботаСДокументами1С","", Кэш);
					СтрСтавка = фрм.ЗначениеИТипСтавки(Стр.СтавкаНДСДо);
					ПредыдущиеДанные.НДС.Вставить( "Сумма", формат(СуммаНДСДо, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
					ПредыдущиеДанные.НДС.Вставить( "Ставка", СтрСтавка.Ставка);	
					ПредыдущиеДанные.НДС.Вставить( "ТипСтавки", СтрСтавка.ТипСтавки);
					НоваяСтрока.Вставить("ПредСтрТабл",ПредыдущиеДанные);
					Контекст.ПредИтогСумма       	= Контекст.ПредИтогСумма + ПредыдущиеДанные.Сумма;
					Контекст.ПредИтогСуммаБезНалога = Контекст.ПредИтогСуммаБезНалога + ПредыдущиеДанные.СуммаБезНал;
					Контекст.ПредИтогСуммаНДС    	= Контекст.ПредИтогСуммаНДС + СуммаНДСДо;
				КонецЕсли;
				
				
				// при необходимости пересчитываем в валюту учета
				Если ПересчитатьВВалютеУчета=Истина Тогда
					Если НЕ ЗначениеЗаполнено(ИтогСумма) Тогда   // есть готовые суммы по каждой строке и не надо распределять общую сумму по строкам
						CуммаДляПересчета = Кэш.ОбщиеФункции.РассчитатьЗначение("CуммаДляПересчета", Стр, Кэш); 
						CуммаНДСДляПересчета = Кэш.ОбщиеФункции.РассчитатьЗначение("CуммаНДСДляПересчета", Стр, Кэш); 
						Попытка
							СуммаВВалютеУчета = CуммаДляПересчета*КурсВзаиморасчетов/?(КратностьВзаиморасчетов=0,1,КратностьВзаиморасчетов);
							СуммаНДСВВалютеУчета = CуммаНДСДляПересчета*КурсВзаиморасчетов/?(КратностьВзаиморасчетов=0,1,КратностьВзаиморасчетов);
							СуммаНДС = СуммаНДСВВалютеУчета;
							НоваяСтрока.СуммаБезНал = формат(СуммаВВалютеУчета - ?(СуммаДляПересчетаВключаетНДС, СуммаНДСВВалютеУчета, 0), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
							НоваяСтрока.Сумма = формат(Число(СуммаВВалютеУчета) + ?(СуммаДляПересчетаВключаетНДС, 0, СуммаНДСВВалютеУчета), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
							НоваяСтрока.НДС.Сумма = формат(СуммаНДСВВалютеУчета, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
							НоваяСтрока.Вставить("Цена", формат(Число(НоваяСтрока.СуммаБезНал)/?(Число(НоваяСтрока.Кол_во)=0,1,Число(НоваяСтрока.Кол_во)), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
						Исключение
						КонецПопытки;
					КонецЕсли;
				КонецЕсли;
				
				СтруктураУпаковка = Новый Структура;
				Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Упаковка",Стр,СтруктураУпаковка);
				Если СтруктураУпаковка.Количество()>0 Тогда
					НоваяСтрока.Вставить("Упаковка",СтруктураУпаковка);
				КонецЕсли;
				
				СтруктураБрутто = Новый Структура;
				Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Брутто",Стр,СтруктураБрутто);
				Если СтруктураБрутто.Количество()>0 Тогда
					НоваяСтрока.Вставить("Брутто",СтруктураБрутто);
				КонецЕсли;
				
				СтруктураНетто = Новый Структура;
				Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Нетто",Стр,СтруктураНетто);
				Если СтруктураНетто.Количество()>0 Тогда
					НоваяСтрока.Вставить("Нетто",СтруктураНетто);
				КонецЕсли;
				
				СтруктураХарактеристика = Новый Структура;
				Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Характеристика",Стр,СтруктураХарактеристика);
				Если СтруктураХарактеристика.Количество()>0 Тогда
					НоваяСтрока.Вставить("Характеристика",СтруктураХарактеристика);
				КонецЕсли;
				
				фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеФормированияСтроки","Файл_"+Контекст.ФайлДанные.Файл_Формат+"_"+СтрЗаменить(СтрЗаменить(Контекст.ФайлДанные.Файл_ВерсияФормата, ".", "_"), " ", ""),"Файл_Шаблон", Кэш);
				Если фрм<>Ложь Тогда
					ДобавлятьСтроку = фрм.сбисПослеФормированияСтроки(НоваяСтрока, Кэш, Контекст, Стр);	
				КонецЕсли;
				Если ДобавлятьСтроку<>Ложь Тогда      // <>Ложь написано для совместимости со старыми функциями сбисПослеФормированияСтроки, которые могли ничего не возвращать
					
					Попытка
						Контекст.ИтогКоличество     = Контекст.ИтогКоличество + НоваяСтрока.Кол_во;
					Исключение
					КонецПопытки;
					Контекст.ИтогСумма       	= Контекст.ИтогСумма + НоваяСтрока.Сумма;
					Контекст.ИтогСуммаБезНалога = Контекст.ИтогСуммаБезНалога + НоваяСтрока.СуммаБезНал;
					Контекст.ИтогСуммаНДС    	= Контекст.ИтогСуммаНДС + СуммаНДС;
					Попытка
						Контекст.ИтогБрутто         = Контекст.ИтогБрутто + ?(НоваяСтрока.Брутто.Свойство("Кол_во"),НоваяСтрока.Брутто.Кол_во, 0);
					Исключение
					КонецПопытки;
					Попытка
						Контекст.ИтогНетто         = Контекст.ИтогНетто + ?(НоваяСтрока.Нетто.Свойство("Кол_во"),НоваяСтрока.Нетто.Кол_во, 0);
					Исключение
					КонецПопытки;
					Попытка
						Контекст.ИтогКолМест 	    = Контекст.ИтогКолМест + ?(НоваяСтрока.Упаковка.Свойство("КолМест"),НоваяСтрока.Упаковка.КолМест, 0);
					Исключение
					КонецПопытки;
					
					Контекст.ТаблДок.СтрТабл.Добавить(НоваяСтрока);
				КонецЕсли;
				
				// При необходимости проверяем, вся ли номенклатура сопоставлена
				Если Контекст.Свойство("НоменклатураКодКонтрагента") и (Не НоваяСтрока.Свойство(Контекст.НоменклатураКодКонтрагента) или Не ЗначениеЗаполнено(НоваяСтрока[Контекст.НоменклатураКодКонтрагента]))  Тогда
					Контекст.СоставПакета.Вставить("Ошибка","Не вся номенклатура сопоставлена");	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	// при необходимости пересчитываем в валюту учета
	Если ПересчитатьВВалютеУчета=Истина Тогда
		Если ЗначениеЗаполнено(ИтогСумма) Тогда
			ПересчитатьТабличнуюЧастьВВалютеУчетаПоИтоговойСумме(Кэш, Контекст, ИтогСумма)
		КонецЕсли;
	КонецЕсли;

	
КонецФункции	
&НаКлиенте
Процедура ПересчитатьТабличнуюЧастьВВалютеУчетаПоИтоговойСумме(Кэш, Контекст, ИтогСумма)
	Попытка
		Контекст.ИтогСумма = ИтогСумма;
		МассивРаспределения = Новый Массив;
		Для Каждого СтрокаДокумента Из Контекст.ТаблДок.СтрТабл Цикл
			МассивРаспределения.Добавить(СтрокаДокумента.Сумма);				
		КонецЦикла;
		Кэш.ОбщиеФункции.сбисРаспределитьСуммуПоСтолбцу(МассивРаспределения, Контекст.ИтогСумма, Контекст.ТаблДок.СтрТабл);
		
		РасчетСуммыНДСПоСтавке = Кэш.ОбщиеФункции.РассчитатьЗначение("РасчетСуммыНДСПоСтавке", Контекст.ФайлДанные,Кэш);
		ИтогСуммаБезНалога = 0;
		ИтогСуммаНДС = 0;
		Для Каждого СтрокаДокумента Из Контекст.ТаблДок.СтрТабл Цикл
			Если РасчетСуммыНДСПоСтавке = Истина Тогда
				//Выделение суммы НДС, Расчет суммы без НДС
				ЗначениеСтавкиНДС = Кэш.ОбщиеФункции.сбисПолучитьСтавкуНДСЧисло(СтрокаДокумента.НДС.Ставка);
				
				СтрокаДокумента.НДС.Сумма = Формат(?(ЗначениеСтавкиНДС = 0, 0, Окр(СтрокаДокумента.Сумма * ЗначениеСтавкиНДС/(100+ЗначениеСтавкиНДС),2)), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				СтрокаДокумента.СуммаБезНал = Формат(Число(СтрокаДокумента.Сумма) - Число(СтрокаДокумента.НДС.Сумма), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				СтрокаДокумента.Цена = формат(Число(СтрокаДокумента.СуммаБезНал)/?(Число(СтрокаДокумента.Кол_во)=0,1,Число(СтрокаДокумента.Кол_во)), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
			Иначе
				МассивРаспределения.Очистить();
				МассивРаспределения.Добавить(СтрокаДокумента.СуммаБезНал);
				МассивРаспределения.Добавить(СтрокаДокумента.НДС.Сумма);
				МассивРаспределенныхСумм = Кэш.ОбщиеФункции.сбисРаспределитьПропорционально(Число(СтрокаДокумента.Сумма), МассивРаспределения);
				Если МассивРаспределенныхСумм <> Неопределено Тогда
					СтрокаДокумента.СуммаБезНал = Формат(МассивРаспределенныхСумм[0], "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
					СтрокаДокумента.НДС.Сумма = Формат(МассивРаспределенныхСумм[1], "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
					СтрокаДокумента.Цена = формат(Число(СтрокаДокумента.СуммаБезНал)/?(Число(СтрокаДокумента.Кол_во)=0,1,Число(СтрокаДокумента.Кол_во)), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				КонецЕсли;
			КонецЕсли;
			ИтогСуммаБезНалога = ИтогСуммаБезНалога + Число(СтрокаДокумента.СуммаБезНал);
			ИтогСуммаНДС = ИтогСуммаНДС + Число(СтрокаДокумента.НДС.Сумма);
		КонецЦикла;	
		
		Контекст.ИтогСуммаБезНалога = ИтогСуммаБезНалога;
		Контекст.ИтогСуммаНДС = ИтогСуммаНДС;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьРеквизитыДокумента(Кэш, Ини,РеквизитыДляПоиска,Вложение,Строка) Экспорт
	// Процедура получает реквизиты документа, необходимые для сопоставления
	//Если ((Кэш.Парам.РежимСопоставления = 1) и (Вложение.Тип = "АктВР" или Вложение.Тип = "ЭДОНакл")) или ((Кэш.Парам.РежимСопоставления = 2) и (Вложение.Тип = "СчФктр")) Тогда // сопоставляем накладные и акты
	//тип1С = Кэш.ОбщиеФункции.РассчитатьЗначение("Реестр1С_Имя",Ини,Кэш);
	типы1С = Новый СписокЗначений;
	Если Ини.Свойство("мДокумент") Тогда
		Для Каждого РазделДокумента Из Ини.мДокумент Цикл
			Если РазделДокумента.Значение.Свойство("Документ") Тогда
				типы1С.Добавить(Сред(РазделДокумента.Значение.Документ.Значение, Найти(РазделДокумента.Значение.Документ.Значение,".")+1));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//Номер = Сред(Вложение.Название, Найти(Вложение.Название, "№ ")+2);//парсим название.
	//Номер = Лев(Номер, Найти(Номер, " от ")-1);
	//Дата = Сред(Вложение.Название, Найти(Вложение.Название, " от ")+4, 10);
	//Если Найти(Дата, " ") Тогда
	//	Дата = Лев(Дата, Найти(Дата, " ")-1);
	//	Если СтрДлина(Дата) = 8 Тогда
	//		Дата = Лев(Дата, 6)+"20"+Прав(Дата, 2);
	//КонецЕсли;
	//КонецЕсли;
	//Дата = Дата(Сред(Дата,7,4), Сред(Дата,4,2), Лев(Дата, 2));
	
	
	Сумма = Сред(Вложение.Название, Найти(Вложение.Название, "на сумму ")+9);
	Если Найти(Сумма, "р.")>0 Тогда
		Сумма = Лев(Сумма, Найти(Сумма, "р.")-1);
	ИначеЕсли Найти(Сумма, ",")>0 Тогда // если валюта не рубль
		Сумма = Лев(Сумма, Найти(Сумма, ",")-1);	
	КонецЕсли;
	Попытка 
		Сумма = Число(СтрЗаменить(Сумма," ",""));
	Исключение
		Сумма = 0;
	КонецПопытки;
	Если РеквизитыДляПоиска.Свойство("Сумма") Тогда
		РеквизитыДляПоиска.Сумма = РеквизитыДляПоиска.Сумма + Сумма;
	иначе
			//Сумма1С = 0;
			//Если ЗначениеЗаполнено(Вложение.Документы1С) Тогда
			//	Попытка
			//		Сумма1С = Вложение.Документы1С[0].Значение.СуммаДокумента;
			//	Исключение
			//	КонецПопытки;
			//КонецЕсли;
		РеквизитыДляПоиска.Вставить("Статус", Строка.Статус);
		РеквизитыДляПоиска.Вставить("Дата", Вложение.Дата);
		РеквизитыДляПоиска.Вставить("Номер", Вложение.Номер);
		РеквизитыДляПоиска.Вставить("Сумма", Сумма);
		РеквизитыДляПоиска.Вставить("типы1С", типы1С);
		РеквизитыДляПоиска.Вставить("ТипСБИС", Строка.СоставПакета[0].Значение.Тип);
		РеквизитыДляПоиска.Вставить("Документы1С", Вложение.Документы1С);
		РеквизитыДляПоиска.Вставить("РанееСопоставленныеДокументы1С", Вложение.Документы1С);   // Нужен, чтобы в случае выбора другого документа, для предыдущего удалить идентификатор и статус
			//РеквизитыДляПоиска.Вставить("Сумма1С", Сумма1С);
		РеквизитыДляПоиска.Вставить("НазваниеСБИС", Вложение.Название);
		РеквизитыДляПоиска.Вставить("СоставПакета", Строка.СоставПакета[0].Значение);
		РеквизитыДляПоиска.Вставить("Контрагент", Строка.СоставПакета[0].Значение.Контрагент);
		РеквизитыДляПоиска.Вставить("НашаОрганизация", Строка.СоставПакета[0].Значение.НашаОрганизация);
		РеквизитыДляПоиска.Вставить("ИдВложения", Вложение.Идентификатор);
	КонецЕсли;
КонецПроцедуры	
&НаКлиенте
Функция СформироватьРасхождение(СтруктураФайлаКонтрагента, СтруктураФайлаНаша, Кэш) Экспорт
	Док = СформироватьРасхождениеНаСервере(СтруктураФайлаКонтрагента, СтруктураФайлаНаша);
	ШаблонXML = Кэш.ОбщиеФункции.ПолучитьXMLДокумента1С(Док);
	ТекстHTML = Кэш.Интеграция.ПолучитьHTMLПоXML(Кэш, ШаблонXML);
	Вложение = Новый Структура("СтруктураФайла,XMLДокумента,Название,ТекстHTML", Док, ШаблонXML, СтруктураФайлаНаша.Файл.Документ.Название,ТекстHTML);
	Возврат Вложение;
КонецФункции
Функция СформироватьРасхождениеНаСервере(СтруктураФайлаКонтрагента, СтруктураФайлаНаша) Экспорт
	Док  = Новый Структура;
	Док.Вставить("Файл",Новый Структура);
	Док.Файл.Вставить("Формат",СтруктураФайлаНаша.Файл.Формат);
	Док.Файл.Вставить("ВерсияФормата",СтруктураФайлаНаша.Файл.ВерсияФормата);
	Док.Файл.Вставить("Имя",СтруктураФайлаНаша.Файл.Имя);
	Док.Файл.Вставить("Документ",Новый Структура);
	Для Каждого Элемент Из СтруктураФайлаНаша.Файл.Документ Цикл
		Если ТипЗнч(Элемент.Значение)<>Тип("Структура") и ТипЗнч(Элемент.Значение)<>Тип("Массив") Тогда
			Док.Файл.Документ.Вставить(Элемент.Ключ, Элемент.Значение);	
		КонецЕсли;
	КонецЦикла;                                       
	
	Док.Файл.Документ.Вставить("Основание",Новый Массив);
	Док.Файл.Документ.Основание.Добавить(Новый Структура("Дата,Номер",СтруктураФайлаКонтрагента.Файл.Документ.Дата,СтруктураФайлаКонтрагента.Файл.Документ.Номер));
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Отправитель") Тогда
		Док.Файл.Документ.Вставить("Отправитель",СтруктураФайлаКонтрагента.Файл.Документ.Отправитель);
		ПреобразоватьПараметрыВМассив(Док.Файл.Документ.Отправитель);
	КонецЕсли;
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Получатель") Тогда
		Док.Файл.Документ.Вставить("Получатель",СтруктураФайлаКонтрагента.Файл.Документ.Получатель);
		ПреобразоватьПараметрыВМассив(Док.Файл.Документ.Получатель);
	КонецЕсли;
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Грузоотправитель") Тогда
		Док.Файл.Документ.Вставить("Грузоотправитель",СтруктураФайлаКонтрагента.Файл.Документ.Грузоотправитель);
		ПреобразоватьПараметрыВМассив(Док.Файл.Документ.Грузоотправитель);
	КонецЕсли;
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Грузополучатель") Тогда
		Док.Файл.Документ.Вставить("Грузополучатель",СтруктураФайлаКонтрагента.Файл.Документ.Грузополучатель);
		ПреобразоватьПараметрыВМассив(Док.Файл.Документ.Грузополучатель);
	КонецЕсли;
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Поставщик") Тогда
		Док.Файл.Документ.Вставить("Поставщик",СтруктураФайлаКонтрагента.Файл.Документ.Поставщик);
		ПреобразоватьПараметрыВМассив(Док.Файл.Документ.Поставщик);
	КонецЕсли;
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Покупатель") Тогда
		Док.Файл.Документ.Вставить("Покупатель",СтруктураФайлаКонтрагента.Файл.Документ.Покупатель);
		ПреобразоватьПараметрыВМассив(Док.Файл.Документ.Покупатель);
	КонецЕсли;
	
	Если СтруктураФайлаНаша.Файл.Документ.Свойство("Параметр") Тогда
	    Док.Файл.Документ.Вставить("Параметр", СтруктураФайлаНаша.Файл.Документ.Параметр); 
	 КонецЕсли;
	
	ТабЧастьНаша = МассивСтруктурВТаблицуЗначений(СтруктураФайлаНаша.Файл.Документ.ТаблДок.СтрТабл);
	ТабЧастьНаша.Колонки.Добавить("ЕстьВФайлеКонтрагента", Новый ОписаниеТипов("Булево"));
	
	ТабЧастьКонтрагента = Новый Соответствие;   // сворачиваем табличную часть по идентификатору строки
	Для Каждого СтрТабл Из СтруктураФайлаКонтрагента.Файл.Документ.ТаблДок.СтрТабл Цикл
		Если СтрТабл.Свойство("Идентификатор") и ЗначениеЗаполнено(СтрТабл.Идентификатор)  Тогда
			СтрокаСоответствия = ТабЧастьКонтрагента.Получить(СтрТабл.Идентификатор);
			Если СтрокаСоответствия = Неопределено Тогда
				ТабЧастьКонтрагента.Вставить(СтрТабл.Идентификатор, СтрТабл);	
			Иначе
				Если СтрТабл.Свойство("Кол_во") и СтрокаСоответствия.Свойство("Кол_во") Тогда
					СтрокаСоответствия.Кол_во = Формат(Число(СтрокаСоответствия.Кол_во)+Число(СтрТабл.Кол_во),"ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000");
				КонецЕсли;
				Если СтрТабл.Свойство("СуммаБезНал") и СтрокаСоответствия.Свойство("СуммаБезНал") Тогда
					СтрокаСоответствия.СуммаБезНал = Формат(Число(СтрокаСоответствия.СуммаБезНал)+Число(СтрТабл.СуммаБезНал),"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				КонецЕсли;
				Если СтрТабл.Свойство("Сумма") и СтрокаСоответствия.Свойство("Сумма") Тогда
					СтрокаСоответствия.Сумма = Формат(Число(СтрокаСоответствия.Сумма)+Число(СтрТабл.Сумма),"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				КонецЕсли;
				Если СтрТабл.Свойство("НДС") и СтрТабл.НДС.Свойство("Сумма") и СтрокаСоответствия.Свойство("НДС") и СтрокаСоответствия.НДС.Свойство("Сумма") Тогда
					СтрокаСоответствия.НДС.Сумма = Формат(Число(СтрокаСоответствия.НДС.Сумма)+Число(СтрТабл.НДС.Сумма),"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			ТабЧастьКонтрагента.Вставить(Новый УникальныйИдентификатор, СтрТабл);	
		КонецЕсли;
	КонецЦикла;
	
	ИтогСумма = 0;
	ИтогКоличество = 0;
	СтрОтклонения = Новый Массив;
	Для Каждого СтрокаСоответствия Из ТабЧастьКонтрагента Цикл
		СтрТабл = СтрокаСоответствия.Значение;
		НоваяСтрока = Новый Структура();
		Если СтрТабл.Свойство("КодПокупателя") Тогда
			НоваяСтрока.Вставить("КодПокупателя", СтрТабл.КодПокупателя);
		КонецЕсли;
		Если СтрТабл.Свойство("КодПоставщика") Тогда
			НоваяСтрока.Вставить("КодПоставщика", СтрТабл.КодПоставщика);
		КонецЕсли;
		Номенклатура = Неопределено;
		ОКЕИ = Неопределено;
		ХарактеристикаНоменклатуры = Неопределено;
		СтрТабл.Свойство("Номенклатура", Номенклатура);
		СтрТабл.Свойство("ОКЕИ", ОКЕИ);
		СтрТабл.Свойство("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
		Отбор = Новый Структура("Номенклатура, ОКЕИ", Номенклатура, ОКЕИ);
		Если ТабЧастьНаша.Колонки.Найти("ХарактеристикаНоменклатуры")<>Неопределено Тогда
			Если ЗначениеЗаполнено(ХарактеристикаНоменклатуры) Тогда
				Отбор.Вставить("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
			Иначе
				Отбор.Вставить("ХарактеристикаНоменклатуры", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			КонецЕсли;
		КонецЕсли;
		НайденныеСтроки = ТабЧастьНаша.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество()>0 Тогда
			НайденнаяСтрока = НайденныеСтроки[0];
			НайденнаяСтрока.ЕстьВФайлеКонтрагента = Истина;
			Для Каждого Поле Из СтруктураФайлаНаша.Файл.Документ.ТаблДок.СтрТабл[0] Цикл
				Если Поле.Ключ<>"Номенклатура" и Поле.Ключ<>"ХарактеристикаНоменклатуры" Тогда
					НоваяСтрока.Вставить(Поле.Ключ, НайденнаяСтрока[Поле.Ключ]);
				КонецЕсли;
			КонецЦикла;
			Попытка
				ИтогСумма = ИтогСумма+НайденнаяСтрока.Сумма;
				ИтогКоличество = ИтогКоличество+НайденнаяСтрока.Кол_во;
			Исключение
			КонецПопытки;
		Иначе     // если удалили строки в загруженном документе
			НоваяСтрока.Вставить("Название", ?(СтрТабл.Свойство("Название"),СтрТабл.Название,""));
			НоваяСтрока.Вставить("Кол_во", "0");
			НоваяСтрока.Вставить("Цена", "0");
			НоваяСтрока.Вставить("СуммаБезНал", "0");
			НоваяСтрока.Вставить("Сумма", "0");
		КонецЕсли;
		ПредСтрТабл = Новый Структура;
		Для Каждого Поле Из СтрТабл Цикл
			Если Поле.Ключ<>"Номенклатура" и Поле.Ключ<>"ХарактеристикаНоменклатуры" Тогда
				ПредСтрТабл.Вставить(Поле.Ключ, Поле.Значение);
			КонецЕсли;
		КонецЦикла;
		НоваяСтрока.Вставить("ПредСтрТабл", ПредСтрТабл);
		СтрОтклонения.Добавить(НоваяСтрока);
	КонецЦикла;
	// Если добавились строки, которых не было в файле контрагента
	НашиСтроки = ТабЧастьНаша.НайтиСтроки(Новый Структура("ЕстьВФайлеКонтрагента", Ложь)); 
	Для Каждого СтрТабл Из НашиСтроки Цикл
		НоваяСтрока = Новый Структура();
		Для Каждого Поле Из СтруктураФайлаНаша.Файл.Документ.ТаблДок.СтрТабл[0] Цикл
			Если Поле.Ключ<>"Номенклатура" и Поле.Ключ<>"ХарактеристикаНоменклатуры" Тогда
				НоваяСтрока.Вставить(Поле.Ключ, СтрТабл[Поле.Ключ]);
			КонецЕсли;
		КонецЦикла;
		СтрОтклонения.Добавить(НоваяСтрока);
		Попытка
			ИтогСумма = ИтогСумма+СтрТабл.Сумма;
			ИтогКоличество = ИтогКоличество+СтрТабл.Кол_во;
		Исключение
		КонецПопытки;
	КонецЦикла;
	Док.Файл.Документ.Вставить("ТаблДок", Новый Структура);
	Док.Файл.Документ.ТаблДок.Вставить("ИтогТабл",Новый Массив);
	ИтогТабл = Новый Структура("Сумма,Кол_во",ИтогСумма,ИтогКоличество);
	Если СтруктураФайлаКонтрагента.Файл.Документ.ТаблДок.Свойство("ИтогТабл") Тогда
		ИтогТабл.Вставить("ПредИтогТабл", СтруктураФайлаКонтрагента.Файл.Документ.ТаблДок.ИтогТабл);
	КонецЕсли;
	Док.Файл.Документ.ТаблДок.ИтогТабл.Добавить(ИтогТабл);
	Док.Файл.Документ.ТаблДок.Вставить("СтрТабл", СтрОтклонения);
	Возврат Док;
КонецФункции
Функция МассивСтруктурВТаблицуЗначений(МассивСтруктур)
	// преобразует массив структур в таблицу значений	
	Результат = Новый ТаблицаЗначений;
	Если МассивСтруктур = Неопределено Или МассивСтруктур.Количество() = 0 Тогда
		Возврат Результат;
	Иначе 
		Образец = МассивСтруктур[0];
		Для Каждого  Стр из Образец Цикл
			Результат.Колонки.Добавить(Стр.Ключ );
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Стр Из МассивСтруктур Цикл
		СтрТ = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТ, Стр);
		Попытка
			СтрТ.ОКЕИ = СокрЛП(СтрТ.ОКЕИ);	
		Исключение
		КонецПопытки;
	КонецЦикла;
	Возврат Результат;
КонецФункции
Функция ПреобразоватьПараметрыВМассив(СтруктураУчастника)
	Если СтруктураУчастника.Свойство("Параметр") и ТипЗнч(СтруктураУчастника.Параметр) = Тип("Структура") Тогда
		МассивПараметров = Новый Массив;
		Для Каждого Элемент Из СтруктураУчастника.Параметр Цикл
			СтруктураПараметра = Новый Структура("Имя, Значение", Элемент.Ключ, Элемент.Значение);
			Массивпараметров.Добавить(СтруктураПараметра);
		КонецЦикла;
		СтруктураУчастника.Вставить("Параметр", Массивпараметров);
	КонецЕсли;
КонецФункции