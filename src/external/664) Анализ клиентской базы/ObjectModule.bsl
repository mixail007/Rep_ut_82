Перем СписокДоступныхТиповГруппировки;

Функция ПолучитьТипДетализацииПоУмолчанию(ТипЗначения) Экспорт
	
	Для каждого Тип Из ТипЗначения.Типы() Цикл
		ОбъектМетаданных = Метаданные.НайтиПоТипу(Тип);
		Если ОбъектМетаданных = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
			Если ОбъектМетаданных.Иерархический Тогда
				//Возврат УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ТипДетализацииСтандартныхОтчетов");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТипИзмеренияПостроителяОтчета.Элементы;
	
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	КомпоновщикНастроек.Настройки.Структура.Очистить();
	ЭлементСтруктуры = КомпоновщикНастроек.Настройки;       
		
	Для Каждого Группировка Из Группировки Цикл
		
		Если Группировка.Использование Тогда
			
			ЭлементСтруктуры = ЭлементСтруктуры.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			ЭлементГруппировки = ЭлементСтруктуры.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ЭлементГруппировки.Использование = Истина;
			ЭлементГруппировки.Поле =  Новый ПолеКомпоновкиДанных(Группировка.Поле);                                                  
			
			Если СписокДоступныхТиповГруппировки.НайтиПоЗначению(Группировка.ТипГруппировки)=Неопределено Тогда
				ЭлементГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
			Иначе
				ЭлементГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных[Группировка.ТипГруппировки];
			КонецЕсли;                                                                                                                  
			
			ПолеСортировки = ЭлементСтруктуры.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
			ПолеСортировки.Использование = Истина;
			
			ВыбранноеПоле = ЭлементСтруктуры.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Использование = Истина;
			
		КонецЕсли;
		
	КонецЦикла;

	//+деталтные записи
	ЭлементСтруктуры = ЭлементСтруктуры.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	
	ПолеСортировки = ЭлементСтруктуры.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
	ПолеСортировки.Использование = Истина;
	
	ВыбранноеПоле = ЭлементСтруктуры.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;
	
	ЭлементОформления = ЭлементСтруктуры.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	мПоля = ЭлементОформления.Поля;
	Для Каждого мПоле ИЗ мПоля.ДоступныеПоляОформляемыхПолей.Элементы Цикл
		Если мПоле.Заголовок = "Количество клиентов" Тогда
			мПолеДоб = мПоля.Элементы.Добавить();
			мПолеДоб.Поле = мПоле.Поле;
		КонецЕсли;
	КонецЦикла;
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", "");	
	
КонецПроцедуры

СписокДоступныхТиповГруппировки = Новый СписокЗначений;
СписокДоступныхТиповГруппировки.Добавить("Иерархия");
СписокДоступныхТиповГруппировки.Добавить("Элементы");