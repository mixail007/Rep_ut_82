
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ВидОтчета = 0 тогда
		СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	ИначеЕсли ВидОтчета = 1 тогда
		СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных1");
	ИначеЕсли ВидОтчета = 2 тогда
		СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных2");
	КонецЕсли;
	
    Настройки = КомпоновщикНастроек.Настройки;
	
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.
                                 Элементы.Найти("НачалоПериода");
    ПараметрСКД.Использование = Истина;
    ПараметрСКД.Значение  = НачПериода;
	
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.
                                 Элементы.Найти("КонецПериода");
    ПараметрСКД.Использование = Истина;
    ПараметрСКД.Значение  = КонецДня(КонПериода);
	
	//Если ВидОтчета = 1 тогда
	//	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.
	//	Элементы.Найти("ГоловноеПодразделение");
	//	ПараметрСКД.Использование = Истина;
	//	ПараметрСКД.Значение  = Справочники.Подразделения.НайтиПоКоду("00005");	
	//КонецЕсли;

	
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетОформления = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки);
    
    ДокументРезультат.Очистить();
    
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    ТаблицаРезультат = Новый ТаблицаЗначений;
    ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных); 
	
	Рез = ПроставитьКлассы(ТаблицаРезультат);
	
	
	Макет = ПолучитьМакет("Макет2");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	тзИтог.Группировка,
		|	тзИтог.Класс,
		|	тзИтог.Показатель,
		|	тзИтог.Ресурс,
		|	тзИтог.Ресурс2
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	&тзИтог КАК тзИтог
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Группировка КАК Группировка,
		|	вт.Класс КАК Класс,
		|	вт.Показатель КАК Показатель,
		|	СУММА(вт.Ресурс) КАК Ресурс,
		|	СУММА(вт.Ресурс2) КАК Ресурс2
		|ИЗ
		|	вт КАК вт
		|
		|СГРУППИРОВАТЬ ПО
		|	вт.Группировка,
		|	вт.Класс,
		|	вт.Показатель
		|
		|УПОРЯДОЧИТЬ ПО
		|	Группировка,
		|	Класс,
		|	Ресурс УБЫВ,
		|	Показатель
		|ИТОГИ
		|	СУММА(Ресурс),
		|	СУММА(Ресурс2)
		|ПО
		|	ОБЩИЕ,
		|	Группировка,
		|	Класс,
		|	Показатель
		|АВТОУПОРЯДОЧИВАНИЕ";
    Запрос.УстановитьПараметр("тзИтог",Рез);

	Результат = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьГруппировка = Макет.ПолучитьОбласть("Группировка");
	ОбластьКласс = Макет.ПолучитьОбласть("Класс");
	ОбластьПоказатель = Макет.ПолучитьОбласть("Показатель");
	
	ТабДок = новый ТабличныйДокумент;
	
	ТабДок.Очистить();
		
	Если ВидОтчета = 0 тогда
		ОбластьЗаголовок.Параметры.Заголовок = "ABC классификация контрагентов по суммам продажи в разрезе подразделений";
		ОбластьШапкаТаблицы.Параметры.НазваниеГруппировки = "Направление / Группа / Контрагент"	;
		ОбластьШапкаТаблицы.Параметры.НазваниеРесурса = "Сумма отгрузки"	;
		ОбластьШапкаТаблицы.Параметры.Названиересурса3 = "Количество отгружено"	;

	ИначеЕсли ВидОтчета = 1 тогда
		ОбластьЗаголовок.Параметры.Заголовок = "ABC классификация контрагентов по количеству НГ в разрезе подразделений";
		ОбластьШапкаТаблицы.Параметры.НазваниеГруппировки = "Направление / Группа / Контрагент"	;
		ОбластьШапкаТаблицы.Параметры.НазваниеРесурса = "Количество НГ"	;
		ОбластьШапкаТаблицы.Параметры.Названиересурса3 = "Сумма отгружено"	;
	ИначеЕсли ВидОтчета = 2 тогда
		ОбластьЗаголовок.Параметры.Заголовок = "ABC классификация контрагентов по суммам продажи в разрезе менеджеров";
		ОбластьШапкаТаблицы.Параметры.НазваниеГруппировки = "Менеджер / Группа / Контрагент"	;
		ОбластьШапкаТаблицы.Параметры.НазваниеРесурса = "Сумма отгрузки"	;
		ОбластьШапкаТаблицы.Параметры.Названиересурса3 = "Количество отгружено"	;
	КонецЕсли;
	ТабДок.Вывести(ОбластьЗаголовок);

	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	
	ВыборкаГруппировка = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаГруппировка.Следующий() Цикл
		ОбластьГруппировка.Параметры.Заполнить(ВыборкаГруппировка);
		ТабДок.Вывести(ОбластьГруппировка, ВыборкаГруппировка.Уровень());

		ВыборкаКласс = ВыборкаГруппировка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаКласс.Следующий() Цикл
			ОбластьКласс.Параметры.Заполнить(ВыборкаКласс);
			ТабДок.Вывести(ОбластьКласс, ВыборкаКласс.Уровень());

			ВыборкаПоказатель = ВыборкаКласс.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоказатель.Следующий() Цикл
				ОбластьПоказатель.Параметры.Заполнить(ВыборкаПоказатель);
				ТабДок.Вывести(ОбластьПоказатель, ВыборкаПоказатель.Уровень());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
    
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьОбщийИтог);
	ТабДок.Показать();

				 
КонецПроцедуры

Функция ПроставитьКлассы(тз)
	тзврем = тз.Скопировать();
	тзврем2 = тз.Скопировать();
	тзврем2.Очистить();
	тзврем3 = тз.Скопировать();
	тзврем3.Очистить();
	тзГруппировки = тз.Скопировать();
	тзГруппировки.свернуть("Группировка");
	
	тзврем2.Колонки.Удалить("Ресурс");
	тзврем2.Колонки.Добавить("Ресурс",, Новый ОписаниеТипов("Число"));

	тзИтог = новый ТаблицаЗначений;
	
	МассивГ = Новый Массив;
	МассивГ.Добавить(Тип("СправочникСсылка.НаправленияПродаж"));
	МассивГ.Добавить(Тип("СправочникСсылка.Пользователи"));
	ОписаниеТиповГруппировка			 = Новый ОписаниеТипов(МассивГ);
	
	МассивП = Новый Массив;
	МассивП.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ОписаниеТиповПоказатель			 = Новый ОписаниеТипов(МассивП);
	
	тзИтог.Колонки.Добавить("Группировка", ОписаниеТиповГруппировка);
	тзИтог.Колонки.Добавить("Показатель",ОписаниеТиповПоказатель);
	тзИтог.Колонки.Добавить("Класс", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(1, ДопустимаяДлина.Переменная)));
	тзИтог.Колонки.Добавить("Ресурс", Новый ОписаниеТипов("Число"	, Новый КвалификаторыЧисла(18, 2)));
	тзИтог.Колонки.Добавить("Ресурс2", Новый ОписаниеТипов("Число"	, Новый КвалификаторыЧисла(18, 2)));
	
	Отбор = новый Структура("Группировка");
	Для каждого Группировка из тзГруппировки цикл
		
		Если Группировка.Группировка<>неопределено тогда
			
			тзврем.Очистить();
			Отбор.Группировка = Группировка.Группировка;
			НайденныеСтроки = тз.НайтиСтроки(Отбор);
			Для каждого строка из НайденныеСтроки цикл
				нстр = тзврем.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,строка);
			КонецЦикла;
			
			тзврем.Сортировать("Ресурс убыв");
			ИтогРесурса = тзврем.Итог("Ресурс");
			ИтогРесурса3 = тзврем.Итог("Ресурс3");
			
			Если ВидОтчета = 1 тогда //количество НГ
				тзВрем3 = тзврем.Скопировать();
				тзВрем3.Свернуть("Группировка,Ресурс,Ресурс2,Ресурс3");
				
				тзВрем.Свернуть("Группировка,Показатель","Ресурс2,Ресурс3");
				тзврем.Сортировать("Ресурс2 убыв");
				тзВрем.Колонки.Добавить("Ресурс",, Новый ОписаниеТипов("Число"));
				тзВрем.Колонки.Добавить("Класс", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(1, ДопустимаяДлина.Фиксированная)));
				ИтогРесурса = тзВрем3.Итог("Ресурс2");
				ИтогРесурса3 = тзВрем3.Итог("Ресурс3");
			КонецЕсли;	
						
			СуммаA = Окр(ИтогРесурса*A/100);
			СуммаB = Окр(ИтогРесурса*(100-B)/100);
			СуммаИ = 0;
						
			ПредКласс = "";
			ИтогКлассРесурс3 = 0;
			Для каждого строка из тзврем цикл
				строка.Ресурс = Строка.Ресурс2;
				
				Если СуммаИ<=СуммаA тогда
					строка.Класс = "A";
				ИначеЕсли	СуммаИ<=СуммаB тогда
					строка.Класс = "B";
				Иначе
					строка.Класс = "C";
				КонецЕсли;
				
				нстр = тзврем2.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,строка);
				
				СуммаИ = СуммаИ + строка.Ресурс;
				ИтогКлассРесурс3 = ИтогКлассРесурс3+строка.Ресурс3;
				Если ПредКласс<>строка.Класс тогда
					ПредКласс = строка.Класс;
					Если строка.Класс = "A" тогда
						ИтогКласса =  СуммаA;
						Проц = A;
					ИначеЕсли строка.Класс = "B" тогда
						ИтогКласса =  СуммаB;
						Проц = B;
					Иначе
						ИтогКласса = 0;
						Проц = C;
					КонецЕсли;
					ИтогКлассРесурс3 = 0;
				КонецЕсли;
				
				нстрИтог = тзИтог.Добавить();
				нстрИтог.Группировка = Группировка.Группировка;
				нстрИтог.Показатель = строка.Показатель;
				нстрИтог.Класс = строка.Класс;
				нстрИтог.Ресурс = строка.Ресурс;
                нстрИтог.Ресурс2 = строка.Ресурс3;
				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Возврат тзИтог;
КонецФункции
