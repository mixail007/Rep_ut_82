
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	СписокПроизводителей=новый списокзначений;
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("65"));
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3333"));
	
	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура.Код КАК Код,
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.Склад КАК Склад,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	КомплектующиеНоменклатуры0.Комплектующая,
	|	ВЫБОР
	|		КОГДА КрышкиПроверены.Объект ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК КрышкиПроверены
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Номенклатура.Производитель В (&СписокПроизводителей)
	|				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|				И НЕ Номенклатура.Наименование ПОДОБНО ""%укомпл%""
	|				И НЕ Склад.Наименование ПОДОБНО ""%брак%"") КАК ТоварыНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	|			КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая
	|		ИЗ
	|			РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	|		ГДЕ
	|			КомплектующиеНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|			И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Крышки)) КАК КомплектующиеНоменклатуры0
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = КомплектующиеНоменклатуры0.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	|			КОЛИЧЕСТВО(*) КАК Количество
	|		ИЗ
	|			РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	|		ГДЕ
	|			КомплектующиеНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|			И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Крышки)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КомплектующиеНоменклатуры.Номенклатура
	|		
	|		ИМЕЮЩИЕ
	|			КОЛИЧЕСТВО(*) > 1) КАК КомплектующиеНоменклатуры2
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = КомплектующиеНоменклатуры2.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗначенияСвойствОбъектов.Объект КАК Объект
	|		ИЗ
	|			РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ГДЕ
	|			ЗначенияСвойствОбъектов.Свойство.Код = ""90170""
	|			И ЗначенияСвойствОбъектов.Значение = ИСТИНА) КАК КрышкиПроверены
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = КрышкиПроверены.Объект
	|ГДЕ
	|	(КомплектующиеНоменклатуры0.Комплектующая ЕСТЬ NULL 
	|			ИЛИ ЕСТЬNULL(КомплектующиеНоменклатуры2.Количество, 0) > 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура.Наименование";

	Запрос.УстановитьПараметр("Крышки", Справочники.Номенклатура.НайтиПоКоду("0080004"));
	Запрос.УстановитьПараметр("СписокПроизводителей", СписокПроизводителей);


	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ОбластьДетальныхЗаписей.Параметры.номенклатураНаименование=""+?(не ВыборкаДетали.КрышкиПроверены," *","")+ВыборкаДетали.Номенклатура;
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры
