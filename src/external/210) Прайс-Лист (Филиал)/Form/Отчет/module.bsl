Перем ВидОтчета;
Перем ТолькоДиски;
Перем СтрокаВид;
//Перем СписокФайловФТПдиски;
перем врФТП, ТабДок;

Процедура ДействияФормыОтчетСформировать(Кнопка)
	ТолькоДиски=Ложь;
	СтрокаВид="Шины";
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);
	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	

КонецПроцедуры

функция АдресПодразделения(Подразделение)
		 Если Подразделение = Справочники.Подразделения.НайтиПоКоду("00106") тогда
		АдресСклада = "г. Ростов-на-Дону,  ул. Доватора, д. 154/5 Тел: (863) 2209208, 2209241, 2209242";
	 ИначеЕсли Подразделение = Справочники.Подразделения.НайтиПоКоду("00112") тогда
		АдресСклада = "192288, г. Санкт-Петербург, Грузовой пр-д, д. 14, корп. 2, лит. А Тел: (812) 333-22-55";
	 ИначеЕсли Подразделение = Справочники.Подразделения.НайтиПоКоду("00122") тогда
		АдресСклада = "620142, г.Екатеринбург, ул. Цвиллинга, д. 7, лит. Э. Тел: (343) 253-99-33";
	 ИначеЕсли Подразделение = Справочники.Подразделения.НайтиПоКоду("00138") тогда
		АдресСклада = "620142, г.Екатеринбург, пл. Жуковского, д. 1, лит. Я.";
//13.08.2018 --- давно уже другой адрес в Москве!		
	//ИначеЕсли Подразделение = Справочники.Подразделения.НайтиПоКоду("00133") тогда
	 //   АдресСклада = "127247, г.Москва, Дмитровское шоссе, д. 100, стр. 2, подъезд №6";
	 ИначеЕсли Подразделение = Справочники.Подразделения.НайтиПоКоду("00133") тогда
		АдресСклада = "127247, г.Москва, ул.Южнопортовая, д.7, корп.1";
	 ИначеЕсли Подразделение = Справочники.Подразделения.НайтиПоКоду("00172") тогда
		АдресСклада = "445000, г.Тольятти, ул.Северная, д.18Б";
	 Иначе	
		АдресСклада = "__________________________________________";
	КонецЕсли;	
возврат АдресСклада;
КонецФункции

Процедура Отчет(ТабДок) Экспорт   // диски
	
	Шины=Справочники.Номенклатура.НайтиПоКоду("0001746");
	Шипы=Справочники.Номенклатура.НайтиПоКоду("0060001");
	
	Диски=Справочники.Номенклатура.НайтиПоКоду("0001752");
	Крышки=Справочники.Номенклатура.НайтиПоКоду("0080004");
	
	Камеры=Справочники.Номенклатура.НайтиПоКоду("0001127");
	
	Кольца=Справочники.Номенклатура.НайтиПоКоду("4104444");
	ОбодныеЛенты=Справочники.Номенклатура.НайтиПоКоду("0060110");
		
	Макет = ПолучитьМакет("ОтчетДиски");
	Запрос = Новый Запрос;

Запрос.Текст= "ВЫБРАТЬ 
              |	Б.Номенклатура КАК Номенклатура,
			  //+++ 14.12.2018   .Наименование
              |	Б.Номенклатура.Наименование КАК НоменклатураНаименование,
              |	Б.Номенклатура.Родитель КАК Родитель,
              |	Б.Номенклатура.Код КАК Код,
              |	Б.Номенклатура.Артикул КАК Артикул,
			  | ЗначенияСвойствобъектов.Цвет Цвет,
			  |Типоразмер.Ширина Ширина, Типоразмер.Высота Высота, Типоразмер.Диаметр Диаметр, 
			  |Типоразмер.КоличествоОтверстий КоличествоОтверстий, Типоразмер.PCD PCD, Типоразмер.Вылет Вылет, 
			  |Типоразмер.ДиаметрСтупицы ДиаметрСтупицы,
              |	Б.Производитель.Наименование КАК Производитель,
			  |	Б.Номенклатура.Модель.Наименование КАК Модель,
			  
              |	Б.ОстатокДляКлиента КАК ОстатокДляКлиента,
              |	Б.СвободныйОстатокДляКлиента КАК СвободныйОстатокДляКлиента,
			  | Б.СвободныйОстатокЯШТ как СвободныйОстатокЯШТ,
			  |	Б.КоличествоВПути КАК КоличествоВПути,
			  |	Б.КоличествоВПроизводстве как КоличествоВПроизводстве,
              |	Б.КоличествоВПутиИзЯрославля как КоличествоВПутиИзЯрославля,
			  
              |	ЕСТЬNULL(Б.ЦенаБазовая, 0) КАК ЦенаБазовая 
			  |##ДополнительнаяСтрока1##
              |ИЗ
              |	(ВЫБРАТЬ
              |		А.Номенклатура КАК Номенклатура,
              |		А.Номенклатура.Родитель КАК Родитель,
              |		А.Номенклатура.Код КАК Код,
              |		А.Номенклатура.Типоразмер КАК Типоразмер,
              |		А.Номенклатура.Производитель КАК Производитель,
              |		ЕСТЬNULL(А.Остаток,0) КАК Остаток,
              |		ВЫБОР
              |			КОГДА ЕСТЬNULL(А.Остаток,0)> 50 И &РежимФормирования
              |				ТОГДА "">50""
              |			ИНАЧЕ ЕСТЬNULL(А.Остаток,0) 
              |		КОНЕЦ КАК ОстатокДляКлиента,
              |		ВЫБОР
              |			КОГДА ЕСТЬNULL(А.Остаток,0)  - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
              |					И &РежимФормирования
              |				ТОГДА "">50""
			  |			ИНАЧЕ ЕСТЬNULL(А.Остаток,0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
              |		КОНЕЦ КАК СвободныйОстатокДляКлиента,
			  
			//+++ 04.09.2014
			  |		Выбор Когда А.СвободныйОстатокЯШТ>50  И &РежимФормирования
 			  |				ТОГДА "">50""
  			 |			ИНАЧЕ А.СвободныйОстатокЯШТ Конец КАК СвободныйОстатокЯШТ,
			  
			  //+++ 17.12.2013
			//|		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
			  |		0 КАК КоличествоВПути,
			  |		0 как КоличествоВПроизводстве,
			  |		0 как КоличествоВПутиИзЯрославля,
			  
              |		ЕСТЬNULL(ЦеныБазовая.Цена, 0) КАК ЦенаБазовая ##ДополнительнаяСтрока2##
              |	ИЗ
              |		(выбрать аб.Номенклатура1 как Номенклатура, 
			  |				Сумма(аб.Остаток1) как Остаток, 
			  |	   		    Сумма(аб.СвободныйОстатокЯШТ1) как СвободныйОстатокЯШТ ##ДополнительнаяСтрока3##
			  |		из 
			  |		(ВЫБРАТЬ
			  |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура1,
			  |		ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток1,
			  |		0 как СвободныйОстатокЯШТ1 ##ДополнительнаяСтрока4##
			  |		ИЗ
			  |		РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.*} Номенклатура В ИЕРАРХИИ(&Диски)
			  |				И Склад.Подразделение = &ПодразделениеСпутник
			  |				И Склад.Транзитный И (НЕ Склад.ЗапретитьИспользование)
			  |												) КАК ТоварыНаСкладахОстатки
			  |
			  |ОБЪЕДИНИТЬ ВСЕ
			  |
			  |ВЫБРАТЬ
			  |	ТоварыНаОтветственномХраненииОстатки.Номенклатура,
			  |	ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток,
			  |	0 ##ДополнительнаяСтрока5##
			  |ИЗ
			  |	РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(,{Номенклатура.*} Номенклатура В ИЕРАРХИИ (&Диски)
			  |				И Склад.Подразделение = &ПодразделениеСпутник
			  |				И Склад.Транзитный   И (НЕ Склад.ЗапретитьИспользование)
			  |															) КАК ТоварыНаОтветственномХраненииОстатки
			  //+++ 04.09.2014
			  | //ТоварыЯШТ
			  
			  |##ДополнительнаяСтрока7## 
			  |) как аб
			  |СГРУППИРОВАТЬ по Номенклатура1
			  |	     ) КАК А
//============================================================================================
			  |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(,{Номенклатура.*} ЗаказПокупателя.Проверен
			  //+++ только транзитные заказы вычитаются!
			  |					И ЗаказПокупателя.Транзит и Номенклатура В ИЕРАРХИИ (&Диски)
			  |	И (ЗаказПокупателя.Подразделение = &ПодразделениеСпутник ИЛИ ЗаказПокупателя.Склад.Подразделение = &ПодразделениеСпутник)
			  |		) КАК ЗаказыПокупателейОстатки
			  |		ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
			  |
			  | 
			  |//ТоварыВПутиИзЯрославля
              |
			  |//ТоварыВПутиИзКитая
              |
			  |//ТоварыВПроизводстве
		      |
			  |
              |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, {Номенклатура.*} Номенклатура В ИЕРАРХИИ (&Диски)
			  |																		И ТипЦен = &ТипЦенБазовая) КАК ЦеныБазовая
              |		ПО А.Номенклатура = ЦеныБазовая.Номенклатура
			  |
			  |) КАК Б
			  |
			  | ЛЕВОЕ СОЕДИНЕНИЕ
			  | (ВЫБРАТЬ Объект, Значение Цвет Из РегистрСведений.ЗначенияСвойствобъектов ГДЕ Свойство=&СвойствоЦвет) ЗначенияСвойствобъектов
			  | ПО Б.Номенклатура = ЗначенияСвойствобъектов.Объект
              |
              |ГДЕ
              |	(НЕ Б.Номенклатура В ИЕРАРХИИ (&Крышки))
	//Плотников 26.05.17 запрет на отгрузку моделей временный------------------
			|и НЕ Номенклатура В  ( ВЫБРАТЬ НоменклатураИмпорт.Номенклатура
			|ИЗ	РегистрСведений.НоменклатураИмпорт КАК НоменклатураИмпорт)
			
 			  |//СПб - без Cross Street
              |	И (Б.ОстатокДляКлиента > 0 
			  //+++ 04.09.2014
			  |		или Б.СвободныйОстатокЯШТ>0
			  |	 ##ДополнительнаяСтрока8## )
              |	УПОРЯДОЧИТЬ ПО Б.Номенклатура.Родитель, Б.Номенклатура.Производитель.Наименование,  Б.Номенклатура.Модель.Наименование, Б.Номенклатура.ТипоРазмер.Наименование, Б.Номенклатура.Наименование";
			  
Если СокрЛП(Подразделение.Код)="00112" тогда
		 Запрос.Текст=стрЗаменить(Запрос.Текст, "//СПб - без Cross Street",
		 "И (НЕ Б.Номенклатура.Производитель = &CrossStreet)");
		Запрос.УстановитьПараметр("CrossStreet", справочники.Производители.НайтиПоКоду(3291));
		сообщить("Диски без CrossStreet...");
КонецЕсли;				 
	//кол-во в пути из Ярославля (Запретить + Транзит + отбор по подразделению + тип склада = товары в пути)
	Запрос.Текст=стрЗаменить(Запрос.Текст, "//ТоварыВПутиИзЯрославля"," ЛЕВОЕ СОЕДИНЕНИЕ
	|(Выбрать
	|	тов.Номенклатура, 
	|		ВЫБОР
  |			КОГДА ЕстьNull(тов.КоличествоОстаток,0) > 50 И &РежимФормирования
  |				ТОГДА "">50""
  |			ИНАЧЕ ЕстьNull(тов.КоличествоОстаток,0)
  |		КОНЕЦ КАК КоличествоОстаток
	|		  
	|	ИЗ РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.*} Номенклатура В ИЕРАРХИИ (&Диски)
	|				И Склад.Подразделение = &ПодразделениеСпутник И Склад.Транзитный 
	|		И Склад.ЗапретитьИспользование и Склад.ТипСклада = Значение(Перечисление.ТипыСкладов.ВПути)	) как тов 
	| )  как ТоварыВПутиИзЯрославля
	|ПО А.Номенклатура = ТоварыВПутиИзЯрославля.Номенклатура
	|");
	Запрос.Текст=стрЗаменить(Запрос.Текст, "0 как КоличествоВПутиИзЯрославля", 
			"ЕСТЬNULL(ТоварыВПутиИзЯрославля.КоличествоОстаток,0) как КоличествоВПутиИзЯрославля");
			
	Если ВидОтчета=1 тогда  //только для менеджеров!
		
		Запрос.Текст=стрЗаменить(Запрос.Текст, "//ТоварыВПутиИзКитая", "	ЛЕВОЕ СОЕДИНЕНИЕ 
			  | РегистрНакопления.ЗаказыПоставщикам.Остатки(,{Номенклатура.*} Номенклатура В ИЕРАРХИИ (&Диски)
			  //+++ 09.11.2017
			  | И ВЭД = ЛОЖЬ
			  //+++ 16.11.2017 по задаче № 36166 - исключаем руб. договора (по дискам)
			  | И ДоговорКонтрагента.ВалютаВзаиморасчетов.Код <> ""643""
			  
			  |					И ЗаказПоставщику.Транзит И ЗаказПоставщику.Подразделение = &ПодразделениеСпутник
			  |		) КАК ЗаказыПоставщикамОстатки
			  |		ПО А.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура			
			  |");
		Запрос.Текст=стрЗаменить(Запрос.Текст, "0 как КоличествоВПути", 
			"ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) как КоличествоВПути");
		  
		 //- товары в Производстве приклеиваем к основной таблице 
		 Запрос.Текст=стрЗаменить(Запрос.Текст, "//ТоварыВПроизводстве", "ЛЕВОЕ СОЕДИНЕНИЕ
		   |(ВЫБРАТЬ
		   |	ЕстьNull(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток,0)как КоличествоВПроизводстве,
		   |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура
		   |ИЗ
		   |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(,{Номенклатура.*} ЗаказПоставщикуСезонный.Транзит 
			|	И ЗаказПоставщикуСезонный.Подразделение = &ПодразделениеСпутник 
  		//+++ 09.11.2017
		   | 	И ВЭД = ЛОЖЬ
	   //+++ 16.11.2017 по задаче № 36166 - исключаем руб. договора (по дискам)
		   |    И ДоговорКонтрагента.ВалютаВзаиморасчетов.Код <> ""643""
		//+++ 07.12.2016
		   |	И ЗаказПоставщикуСезонный.ДатаДействияПо>=&ТекущаяДатаСезЗак
		   |	И Номенклатура В ИЕРАРХИИ (&Диски) 
		   |) как ЗаказыПоставщикамСезонныеОстатки
		   |ГДЕ ЕстьNull(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток,0)>0
		   | ) как ЗаказыПоставщикамСезонныеОстатки
		   |ПО А.Номенклатура = ЗаказыПоставщикамСезонныеОстатки.Номенклатура
		   |");
		Запрос.Текст=стрЗаменить(Запрос.Текст, "0 как КоличествоВПроизводстве", 
		"ЕСТЬNULL(ЗаказыПоставщикамСезонныеОстатки.КоличествоВПроизводстве,0) как КоличествоВПроизводстве");
КонецЕсли;			  
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++			
   Запрос.УстановитьПараметр("ТекущаяДата",НачалоДня(ТекущаяДата()));
   Запрос.УстановитьПараметр("ТекущаяДатаСезЗак", ДобавитьМесяц(ТекущаяДата(),-1) ); //07.12.2016
	Запрос.УстановитьПараметр("Диски", Диски);
	
//14.12.2018 ------------снято!---------------------
	//	 СписокПроизводителей  = Новый СписокЗначений;
	//	 СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3291"));  //Плотников 26.05.17 запрет на отгрузку моделей временный
	//	 СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3485"));
	//	 СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3658"));
	//	 
	 //списокМоделей  = Новый СписокЗначений;
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04911"));   //Плотников 26.05.17 запрет на отгрузку моделей временный
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04913"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04914"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("04915"));
	 //
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05667"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05668"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05669"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05670"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("05671"));
	 //
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("20987"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("20965"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31134"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31135"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31136"));
	 //списокМоделей.Добавить(Справочники.МоделиТоваров.НайтиПоКоду("31137"));
	 //Запрос.УстановитьПараметр("списокПроизводителей", СписокПроизводителей);      //Плотников 26.05.17 запрет на отгрузку моделей временный
	 //Запрос.УстановитьПараметр("списокМоделей", списокМоделей);      //Плотников 26.05.17 запрет на отгрузку моделей временный
	 
	 Запрос.УстановитьПараметр("алкаста", Справочники.Производители.НайтиПоКоду("100")); // 27.06.2016     //Плотников 26.05.17 запрет на отгрузку моделей временный
	
	Запрос.УстановитьПараметр("Камеры", Камеры);
	Запрос.УстановитьПараметр("Кольца", Кольца);
	Запрос.УстановитьПараметр("ОбодныеЛенты", ОбодныеЛенты);
	Запрос.УстановитьПараметр("Шины", Шины);
	Запрос.УстановитьПараметр("СвойствоЦвет", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166"));	
	
	Запрос.УстановитьПараметр("ПодразделениеСпутник", Подразделение);  //подразделение Спутника (Ростов на Дону, Москва Виктория)
	Запрос.УстановитьПараметр("Крышки", Крышки);
	Запрос.УстановитьПараметр("ВидДиски", Перечисления.ВидыТоваров.Диски);                                                                        
	Запрос.УстановитьПараметр("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));                                                                        
	
	//10.02.2017 - Ярославский !
	ТипЦенКрупныйОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005");
	ТипЦенСреднийОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00002");
	
	Запрос.УстановитьПараметр("ТипЦенКрупныйОпт", ТипЦенКрупныйОпт);
	Запрос.УстановитьПараметр("ТипЦенСреднийОпт", ТипЦенСреднийОпт);
	//Запрос.УстановитьПараметр("ТипЦенМелкийОпт", ТипЦенМелкийОпт);
	
	Запрос.УстановитьПараметр("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008")); //Базовая у всех своя...
	
Состояние("Идет формирование данных по выбранным условиям...");

//+++( 04.09.2014 --- остатки ЯШТ по дискам ------------------
Если Флажок1 тогда
запрос.Текст = стрЗаменить(запрос.Текст,"//ТоварыЯШТ", " ОБЪЕДИНИТЬ ВСЕ
|"+  //------------------------------Запрос по остаткам ЯШТ-----------------------------------------
"ВЫБРАТЬ
|	СвободныеОстаткиЯШТ.Номенклатура,
|	0 ,
|	ЕСТЬNULL(СвободныеОстаткиЯШТ.СвободныйОстаток, 0) ##ДополнительнаяСтрока6## 
|ИЗ
|	(ВЫБРАТЬ
|		остаткиЯШТ.Номенклатура КАК Номенклатура,
|		остаткиЯШТ.КоличествоОстаток - ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0) КАК СвободныйОстаток
|	ИЗ
|		РегистрНакопления.ТоварыНаСкладах.Остатки(, {(Номенклатура).*}
|				НЕ Склад.Транзитный
|					И НЕ Склад.ЗапретитьИспользование
|					И Номенклатура В ИЕРАРХИИ (&Диски)  ) КАК остаткиЯШТ
|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|				ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
|				ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоОстаток
|			ИЗ
|				РегистрНакопления.ЗаказыПокупателей.Остатки( , {(Номенклатура).*}
|						НЕ ЗаказПокупателя.Транзит
|							И ЗаказПокупателя.Проверен
|							И Номенклатура В ИЕРАРХИИ (&Диски)  ) КАК ЗаказыПокупателейОстатки
|			ГДЕ
|				ЗаказыПокупателейОстатки.КоличествоОстаток > 0) КАК ВложенныйЗапрос
|			ПО остаткиЯШТ.Номенклатура = ВложенныйЗапрос.Номенклатура) КАК СвободныеОстаткиЯШТ" );
КонецЕсли;
//Адиянов<<<
Если ВидОтчета=0 тогда
	ТекстНоменклатураПодЗаказ =  "ОБЪЕДИНИТЬ ВСЕ
									|ВЫБРАТЬ
									|	НоменклатураПодЗаказ.Номенклатура,
									|	0,
									|	0,
									|	1
									|ИЗ
									|	РегистрСведений.НоменклатураПодЗаказ КАК НоменклатураПодЗаказ";
	
	ТекстЗаменыЗапроса = "ВЫБОР
							|КОГДА Б.КоличествоВПути = 0
							|		И Б.ЭтоНоменклатураПодЗаказ > 0
							|	ТОГДА ""Под заказ. Срок доставки 60 дней.""
							|ИНАЧЕ 0
							|КОНЕЦ КАК КоличествоВПути";
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока1##",", Б.ЭтоНоменклатураПодЗаказ");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока2##",", А.ЭтоНоменклатураПодЗаказ КАК ЭтоНоменклатураПодЗаказ");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока3##",", СУММА(аб.ЭтоНоменклатураПодЗаказ) КАК ЭтоНоменклатураПодЗаказ");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока4##",", 0 КАК ЭтоНоменклатураПодЗаказ");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока5##",",0");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока6##",",0");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока7##",ТекстНоменклатураПодЗаказ);
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока8##","ИЛИ Б.ЭтоНоменклатураПодЗаказ > 0");
	запрос.Текст = стрЗаменить(запрос.Текст,"Б.КоличествоВПути КАК КоличествоВПути",ТекстЗаменыЗапроса);
Иначе
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока1##","");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока2##","");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока3##","");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока4##","");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока5##","");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока6##","");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока7##","");
	запрос.Текст = стрЗаменить(запрос.Текст,"##ДополнительнаяСтрока8##","");
КонецЕсли;
//Адиянов>>>

//НачалоКомментария
Результат = Запрос.Выполнить();
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
//	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование=Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование="Филиала "+Организация.Наименование;

	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.АдресСклада = АдресПодразделения(Подразделение);

	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");

	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ТекущаяДата = Формат(ТекущаяДата(), "ДЛФ=DD");

	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	
Состояние("Идет получение файлов ФОТО дисков...");
ПутьКДискам = "http://photo.yst.ru/allwheels/";

Состояние("Идет получение данных...");
ВыборкаДетали = Результат.Выбрать();

//+++( 28.03.2018 - ЦенаМРИЦ
 вр0 = ТекущаяУниверсальнаяДатаВМиллисекундах();
 контрМРЦ = справочники.Контрагенты.НайтиПоКоду("11011");
 списТов = новый СписокЗначений;
  состояние("Идёт заполнение цен МРЦ...");
 Пока ВыборкаДетали.Следующий() Цикл
 	списТов.Добавить( ВыборкаДетали.Номенклатура );
 КонецЦикла;
 ЦеныМРЦ = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(контрМРЦ, списТов);
 ВыборкаДетали.Сбросить();
 
 ЦеныМРЦсоотв = ЗаполнитьСоответствиеПоТаблице(ЦеныМРЦ, "Номенклатура", "МинимальнаяЦена");
  вр1 = ТекущаяУниверсальнаяДатаВМиллисекундах();
 Сообщить("Получено "+строка(ЦеныМРЦ.Количество())+" цен МРЦ по списку "+строка(списТов.Количество())+" товаров за "+строка((вр1-вр0)/1000)+" сек.");
 вр0 = вр1; 
 
i=0; N=ВыборкаДетали.Количество(); проц = макс(10, мин(100, цел(N/100)));
	Пока ВыборкаДетали.Следующий() Цикл
		
	i=i+1; 
	Если i%проц=0 тогда
	ОбработкаПрерыванияПользователя();
	Состояние("Выведено "+строка(i)+" из "+строка(N)+" строк ("+формат(i*100/N,"ЧДЦ=0")+"%)...");
	КонецЕсли;
	
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		
	Если ЗначениеЗаполнено(ВыборкаДетали.Номенклатура) Тогда
		//+++( 14.12.2018 =============================
		ЦенаМРЦ = ЦеныМРЦсоотв.Получить( ВыборкаДетали.Номенклатура );
		Если ЦенаМРЦ = неопределено тогда ЦенаМРЦ=0; КонецЕсли;
		//стрМРЦ = ЦеныМРЦ.Найти( ВыборкаДетали.Номенклатура, "Номенклатура");
		//Если стрМРЦ = неопределено 
		//	Тогда ЦенаМРЦ = 0;
		//	Иначе ЦенаМРЦ = стрМРЦ.МинимальнаяЦена;
		//КонецЕсли;	
		ОбластьДетальныхЗаписей.Параметры.ЦенаМРЦ = ЦенаМРЦ;
		//+++)
		
		путьККартинкамТов = ПутьКДискам ; 
		
		СловоЦвет = СокрЛП(ВыборкаДетали.Цвет); 
		ФайлКартинки=нрег(СокрЛП(ВыборкаДетали.Модель)+"_"+СловоЦвет)+".png";
		ОбластьДетальныхЗаписей.Параметры.ПутьКФОто = путьККартинкамТов + ФайлКартинки;
		//НоменклатураНаименование=СокрЛП(строка(ВыборкаДетали.Номенклатура)); 
		//масНом=МассивИзСтроки(НоменклатураНаименование," ");
		//Если масНом.Количество()>0 Тогда
		//	СловоЦвет=масНом[масНом.Количество()-1]; // берем последнее слово
		//	ОбластьДетальныхЗаписей.Параметры.Цвет =СловоЦвет;
		//КонецЕсли;
			ОбластьДетальныхЗаписей.Параметры.Цвет = СловоЦвет;
		КонецЕсли;

		ТабДок.Вывести(ОбластьДетальныхЗаписей); // , ВыборкаДетали.Уровень());
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
    ТабДок.Область("C14").Видимость=ОтображатьКодПроизводителя;	

	Если ВидОтчета=0 тогда // для клиентов - убираем!
 		Область = ТабДок.Область("C19");
		ТабДок.УдалитьОбласть(Область, ТипСмещенияТабличногоДокумента.ПоВертикали);//в Производстве
	КонецЕсли;
	
 	вр1 = ТекущаяУниверсальнаяДатаВМиллисекундах();
 	сообщить("Вывод "+строка(ВыборкаДетали.Количество())+" строк за "+формат((вр1-вр0)/1000,"ЧДЦ=3")+" сек.");
	Состояние(" ");
КонецПроцедуры

функция ЗаполнитьСоответствиеПоТаблице(табл1, ПолеПоиска, ПолеЗначения)
	Соотв = новый Соответствие;
	для каждого стр1 из табл1 цикл
		Соотв.Вставить( стр1[ПолеПоиска], стр1[ПолеЗначения] );
	КонецЦикла;	
	возврат Соотв;
КонецФункции


Процедура ДействияФормыСохранитьНаСайте(стр1, назвПодр="")
	
	СтрокаВид = стр1.Вид;
	допНазв   = стр1.ВидАнгл;
	ИмяФайлаСообщения =назвПодр+допНазв+".xls";
			
	Если не НеВыгружатьНаFTP тогда
		врФТПвыгр = Новый FTPСоединение("ftp.yst.ru",, "dc140403_yst", "scdi7kRU",, Истина );  //другой логин - сразу в папку сайта: yst.ru
			
		Если врФТПвыгр = Неопределено Тогда
			Предупреждение( "Во время обмена данными в "+строка(ТекущаяДата())+" 
						    |произошла ошибка подключения к FTP: 
							|" + ОписаниеОшибки(), 10);
			Сообщить( "Во время обмена данными в "+строка(ТекущаяДата())+" произошла ошибка подключения	к FTP: " + ОписаниеОшибки(), СтатусСообщения.Внимание);
			возврат;
		КонецЕсли;
		
		путь = КаталогВременныхФайлов(); //"c:\"; //+++06.06.2013
		ЭлементыФормы.ПолеТабличногоДокумента.Записать(путь+ИмяФайлаСообщения, ТипФайлаТабличногоДокумента.XLS); 
		
		врФТПвыгр.Записать(путь+ИмяФайлаСообщения , "public_html/data/"+ИмяФайлаСообщения);
	    Сообщить(строка(ТекущаяДата())+" - Файл: "+ИмяФайлаСообщения+" - успешно выгружен на сайт www.yst.ru/data/"+ИмяФайлаСообщения, СтатусСообщения.Информация);
	КонецЕсли;	

КонецПроцедуры



Функция ПолучитьЦену(Номенклатура,ТипЦен)
    Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	             |	ЦеныНоменклатурыСрезПоследних.Цена
	             |ИЗ
	             |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,Номенклатура = &Номенклатура
	             |				И ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних";
				 
	Запрос.УстановитьПараметр("ТипЦен",ТипЦен);				 
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);

	Выборка=Запрос.Выполнить().Выбрать();
	Если   Выборка.Следующий() Тогда
		Возврат Выборка.Цена;
	КонецЕсли;	
	    Возврат 0;
	КонецФункции // ПерезаполнитьСтроку()

Процедура ПриОткрытии()
	
	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=Ложь;	
	ЭлементыФормы.ДействияФормы.Кнопки.ДействиеУстановитьЦены.Доступность=РольДоступна("ПолныеПрава");	
	СтрокаВид="Шины";	
	
	Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") тогда
			Подразделение =глТекущийПользователь.ОсновноеПодразделение;
			ЭлементыФормы.Подразделение.Доступность = ложь;
	КонецЕсли;	
		
	Флажок1 = истина;
	
	ЭлементыФормы.Подразделение.СписокВыбора.ЗагрузитьЗначения( яштПоставщики.ПолучитьМассивФилиалов() );
	ЭлементыФормы.Подразделение.СписокВыбора.Удалить(0); // без Ярославля!
	
	Если РольДоступна("ПолныеПрава") Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.ВыгрузитьВExcel.Доступность = Истина;
		ЭлементыФормы.Флажок2.Доступность = истина;
	КонецЕсли;
	
КонецПроцедуры


Процедура ДействияФормыСформироватьТолькоДиски(Кнопка)
	СтрокаВид="Диски";
	ТолькоДиски=Истина;
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;
	
	Если НЕ ЗначениеЗаполнено(Подразделение) тогда
		СообщитьОбОшибке("Не заполнено обязательное поле 'Подразделение'");
		Возврат;
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
//+++   18.05.2012
	началоВр = ТекущаяДата();
	
	Отчет(ТабДок);

	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
 парамЗапроса = "Прайс "+?(ВидОтчета=0,"для Клиентов ","для Менеджеров ")+ строка(Подразделение)+" - Диски"; 
	Если ВремяВыполнения>0 тогда
		сообщить(парамЗапроса+" (всего: "+строка(ВремяВыполнения)+" Сек.)");
	КонецЕсли;	

	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);

КонецПроцедуры

Процедура ДействияФормыСформироватьТолькоШины(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(Подразделение) тогда
		СообщитьОбОшибке("Не заполнено обязательное поле 'Подразделение'");
		Возврат;
	КонецЕсли;
	
	СтрокаВид = "Шины";
	Nmax 	  = 50;
	
	ВидОтчета = ЭлементыФормы.Переключатель1.Значение;	
	ТабДок    = ЭлементыФормы.ПолеТабличногоДокумента;

	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
//АКБ=Справочники.Номенклатура.НайтиПоКоду("0080021");
	Диски =Справочники.Номенклатура.НайтиПоКоду("0001752");
	Камеры=Справочники.Номенклатура.НайтиПоКоду("0001127");
	Кольца=Справочники.Номенклатура.НайтиПоКоду("4104444");
	ОбодныеЛенты=Справочники.Номенклатура.НайтиПоКоду("0060110");
	Шины  =Справочники.Номенклатура.НайтиПоКоду("0001746");
	Шипы  =Справочники.Номенклатура.НайтиПоКоду("0060001");
	Крышки=Справочники.Номенклатура.НайтиПоКоду("0080004");
	
	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;

   Запрос.Текст="
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Номенклатура, ЦеныНоменклатурыСрезПоследних1.Номенклатура) КАК Номенклатура,
|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК РРЦ,
|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних1.Цена, 0) КАК МРИЦ
|ПОМЕСТИТЬ ЦеныНаШины
|ИЗ
|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
|			,
|			ТипЦен = &РРЦШины
|				И Номенклатура.ВидТовара = &типШины) КАК ЦеныНоменклатурыСрезПоследних
|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
|				,
|				ТипЦен = &МРИЦШины
|					И Номенклатура.ВидТовара = &типШины) КАК ЦеныНоменклатурыСрезПоследних1
|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ЦеныНоменклатурыСрезПоследних1.Номенклатура
|;
|
|////////////////////////////////////////////////////////////////////////////////
|
|ВЫБРАТЬ Б.Номенклатура,
//14.12.2018 .Наименование
|Б.Номенклатура.Наименование  как НоменклатураНаименование,
|Б.Номенклатура.Родитель.Наименование как Родитель, 
|Б.Номенклатура.Код Код, 
|Б.Номенклатура.ТипоРазмер.Наименование как Размер, 
|Б.Номенклатура.Производитель.Наименование как Производитель, 

| Б.ОстатокДляКлиента,
| Б.СвободныйОстатокДляКлиента, 
| Б.СвободныйОстатокЯШТ как СвободныйОстатокЯШТ,
| Б.КоличествоВПутиИзЯрославля,

| Б.ЦенаКрупныйОпт ЦенаКрупныйОпт,	
| Б.ЦенаСреднийОпт ЦенаСреднийОпт,	
| Б.ЦенаБазовая ЦенаБазовая,

| ЦеныНаШины.РРЦ,
| ЦеныНаШины.МРИЦ
| ИЗ (	
|	ВЫБРАТЬ    А.Номенклатура, А.Номенклатура.Родитель Родитель,
|	А.Номенклатура.Код Код, А.Номенклатура.Размер Размер, А.Номенклатура.Производитель
| Производитель, А.Остаток Остаток,  
|		ВЫБОР
|		КОГДА Остаток>&Nmax И &РежимФормирования
|				ТОГДА &Nmax + 1
|			ИНАЧЕ Остаток
|		КОНЕЦ КАК ОстатокДляКлиента,
|		ВЫБОР
|		КОГДА Остаток-ЕстьNULL(ЗаказыПокупателейОстатки.КоличествоОстаток,0)>&Nmax И &РежимФормирования
|				ТОГДА &Nmax + 1
|			ИНАЧЕ Остаток-ЕстьNULL(ЗаказыПокупателейОстатки.КоличествоОстаток,0)
|		КОНЕЦ КАК СвободныйОстатокДляКлиента,

//+++ 04.09.2014
|		выбор КОГДА А.СвободныйОстатокЯШТ>&Nmax И &РежимФормирования
|				ТОГДА &Nmax + 1
|			ИНАЧЕ А.СвободныйОстатокЯШТ
|		КОНЕЦ КАК СвободныйОстатокЯШТ,

//+++( 17.12.2013
//|	ЕстьNULL(ЗаказыПокупателейОстатки.КоличествоОстаток,0) КОличествоВРезерве,
  |0 как КоличествоВПутиИзЯрославля,
|       ЦеныТоваров.ЦенаКрупныйОпт,
|		ЦеныТоваров.ЦенаСреднийОпт,
//|		ЦеныТоваров.ЦенаМелкийОпт,
|		ЦеныТоваров.ЦенаБазовая
//+++)
|ИЗ
|
//----------------------А-------------------------------------------
|(ВЫБРАТЬ 
|	аб.Номенклатура1 как Номенклатура, 
|	Сумма(аб.Остаток1) как Остаток, 
|	Сумма(аб.СвободныйОстатокЯШТ1) как СвободныйОстатокЯШТ

//-------------------------аб------------------------------------------------------------
|	из( выбрать
|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура1,
|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток1, 
|	0 как СвободныйОстатокЯШТ1
|ИЗ
|	РегистрНакопления.ТоварыНаСкладах.Остатки(,{Номенклатура.*}
|			Номенклатура В ИЕРАРХИИ (&Шины) 
//+++ 21.05.2015 - ТУТ МОЖНО!!!  И НЕ Номенклатура.Производитель В (&ПроизводителиНеИспользовать)  
|				И Склад.Подразделение = &ПодразделениеСпутник
|				И Склад.Транзитный И (НЕ Склад.ЗапретитьИспользование)) КАК ТоварыНаСкладахОстатки
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	ТоварыНаОтветственномХраненииОстатки.Номенклатура,
|	ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток,
|	0
|ИЗ
|	РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( ,{Номенклатура.*}
|			Номенклатура В ИЕРАРХИИ (&Шины)
//+++ 21.05.2015 - ТУТ ТОЖЕ МОЖНО!!!  И НЕ Номенклатура.Производитель В (&ПроизводителиНеИспользовать)
|				И Склад.Подразделение = &ПодразделениеСпутник
|				И Склад.Транзитный И (НЕ Склад.ЗапретитьИспользование)
|) КАК ТоварыНаОтветственномХраненииОстатки
|
//+++ 24.11.2014 - остатки Сторонних поставиков - в колонку Склад2
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	ТоварыСтороннихПоставщиков.Номенклатура,
|	0,
|	ТоварыСтороннихПоставщиков.Остаток
|ИЗ
|	РегистрСведений.ОстаткиНоменклатурыКонтрагентов  КАК ТоварыСтороннихПоставщиков
|ГДЕ	 Номенклатура В ИЕРАРХИИ (&Шины) 
|	И Подразделение = &ПодразделениеСпутник
|   И Контрагент В (выбрать сроки.Поставщик из РегистрСведений.СрокиДоставки как сроки 
|					где НЕ сроки.ОТХ )
|

//+++ 04.09.2014
|//ТоварыЯШТ

|	) как аб
//-------------------------аб------------------------------------------------------------
|
|СГРУППИРОВАТЬ ПО Номенклатура1
|) А
//-------------------------А------------------------------------------------------------
|
| ЛЕВОЕ СОЕДИНЕНИЕ
|РегистрНакопления.ЗаказыПокупателей.Остатки(, {Номенклатура.*} 
|	ЗаказПокупателя.Транзит И ЗаказПокупателя.Проверен 
|	И Номенклатура В ИЕРАРХИИ (&Шины) И НЕ Номенклатура.Производитель В (&ПроизводителиНеИспользовать)
|   И (ЗаказПокупателя.Подразделение = &ПодразделениеСпутник ИЛИ ЗаказПокупателя.Склад.Подразделение = &ПодразделениеСпутник)) ЗаказыПокупателейОстатки				
|ПО  А.Номенклатура=ЗаказыПокупателейОстатки.Номенклатура
|
|//ТоварыВПутиИзЯрославля
|
|ЛЕВОЕ СОЕДИНЕНИЕ
//+++ не надо 4 раза соединять один и тот же регистр!
|	(ВЫБРАТЬ Номенклатура,
|	максимум(Выбор когда ТипЦен = &ТипЦенКрупныйОпт тогда ЕстьNull(Цена,0) иначе 0 конец) как ЦенаКрупныйОпт,
|	максимум(Выбор когда ТипЦен = &ТипЦенСреднийОпт тогда ЕстьNull(Цена,0) иначе 0 конец) как ЦенаСреднийОпт,
//|	максимум(Выбор когда ТипЦен = &ТипЦенМелкийОпт  тогда ЕстьNull(Цена,0) иначе 0 конец) как ЦенаМелкийОпт,
|	максимум(Выбор когда ТипЦен = &ТипЦенБазовая    тогда ЕстьNull(Цена,0) иначе 0 конец) как ЦенаБазовая
|ИЗ	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, {Номенклатура.*} 
|		Номенклатура В ИЕРАРХИИ (&Шины)
|		И (ТипЦен = &ТипЦенКрупныйОпт или ТипЦен = &ТипЦенСреднийОпт или ТипЦен = &ТипЦенБазовая) ) как РегСвЦены
|	СГРУППИРОВАТЬ ПО регСвЦены.Номенклатура
|	) КАК ЦеныТоваров			
|   ПО А.Номенклатура=ЦеныТоваров.Номенклатура

|) Б
|    ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНаШины КАК ЦеныНаШины
|	 ПО Б.Номенклатура = ЦеныНаШины.Номенклатура
|
|   ГДЕ Б.ОстатокДляКлиента>0 
//+++ 04.09.2014
|		или Б.СвободныйОстатокЯШТ>0
//+++ 24.06.2015 - добавлена сортировка по родителю!
|	УПОРЯДОЧИТЬ ПО Б.Номенклатура.Родитель.Наименование, Б.Номенклатура.Наименование
|	ИТОГИ 
|	СУММА(ОстатокДляКлиента), 
|	СУММА (СвободныйОстатокДляКлиента), 
//+++ 04.09.2014
|	СУММА(СвободныйОстатокЯШТ),
//|	СУММА (КоличествоВРезерве), 
|	СУММА (КоличествоВПутиИзЯрославля),
|   СРЕДНЕЕ (ЦенаКрупныйОпт), СРЕДНЕЕ (ЦенаСреднийОпт),
//СРЕДНЕЕ (ЦенаМелкийОпт),
|СРЕДНЕЕ(ЦенаБазовая), СРЕДНЕЕ (РРЦ), СРЕДНЕЕ (МРИЦ) ПО Б.Номенклатура 
//+++ 24.06.2015 - убрана! ИЕРАРХИЯ
|";
    Запрос.УстановитьПараметр("РРЦШины", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00011"));
	Запрос.УстановитьПараметр("МРИЦШины", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00025"));
	Запрос.УстановитьПараметр("типШины", Перечисления.ВидыТоваров.Шины);
	Запрос.УстановитьПараметр("Nmax", Nmax); //+++
	Запрос.УстановитьПараметр("Шины", Шины);
	Запрос.УстановитьПараметр("Шипы", Шипы);
	Запрос.УстановитьПараметр("ПодразделениеСпутник", Подразделение);
	Запрос.УстановитьПараметр("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));                                                                        
	
//+++ 17.12.2013 - показываем только Менеджерам?
//Если ВидОтчета=1 тогда	

	//кол-во в пути из Ярославля (Запретить + Транзит + отбор по подразделению + тип склада = товары в пути)
	Запрос.Текст=стрЗаменить(Запрос.Текст, "//ТоварыВПутиИзЯрославля"," ЛЕВОЕ СОЕДИНЕНИЕ 
	|("+"Выбрать
	|	тов.Номенклатура, 
	|		ВЫБОР
  |			КОГДА ЕстьNull(тов.КоличествоОстаток,0) > &Nmax И &РежимФормирования
  |				ТОГДА &Nmax + 1
  |			ИНАЧЕ ЕстьNull(тов.КоличествоОстаток,0)
  |		КОНЕЦ КАК КоличествоОстаток
	|		  
	|	ИЗ РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.*} 
	|		Склад.ЗапретитьИспользование И Склад.ТипСклада = Значение(Перечисление.ТипыСкладов.ВПути)
	|		И Номенклатура В ИЕРАРХИИ (&Шины) И НЕ Номенклатура.Производитель В (&ПроизводителиНеИспользовать)
	|		И Склад.Подразделение = &ПодразделениеСпутник И Склад.Транзитный 
	|				) КАК тов 
	| "+")  как ТоварыВПутиИзЯрославля 
	|ПО А.Номенклатура = ТоварыВПутиИзЯрославля.Номенклатура
	|");
	Запрос.Текст=стрЗаменить(Запрос.Текст, "0 как КоличествоВПутиИзЯрославля", 
			"ЕстьNull(ТоварыВПутиИзЯрославля.КоличествоОстаток,0) как КоличествоВПутиИзЯрославля");
//КонецЕсли;

//+++04.09.2014 -------------------Свободные остатки по шинам-----------------------------------------
Если Флажок1 тогда
запрос.Текст = стрЗаменить(запрос.Текст,"//ТоварыЯШТ", " ОБЪЕДИНИТЬ ВСЕ
|"+  
"ВЫБРАТЬ
|	СвободныеОстаткиЯШТ.Номенклатура,
|	0 ,
|	ЕСТЬNULL(СвободныеОстаткиЯШТ.СвободныйОстаток, 0)
|ИЗ
|	(ВЫБРАТЬ
|		остаткиЯШТ.Номенклатура КАК Номенклатура,
|		остаткиЯШТ.КоличествоОстаток - ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0) КАК СвободныйОстаток
|	ИЗ
|		РегистрНакопления.ТоварыНаСкладах.Остатки(, {(Номенклатура).*}
|				НЕ Склад.Транзитный
|					И НЕ Склад.ЗапретитьИспользование
|					И Номенклатура В ИЕРАРХИИ (&Шины) 
|				И НЕ Номенклатура.Производитель В (&ПроизводителиНеИспользовать)  ) КАК остаткиЯШТ
|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|				ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
|				ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоОстаток
|			ИЗ
|				РегистрНакопления.ЗаказыПокупателей.Остатки( , {(Номенклатура).*}
|						НЕ ЗаказПокупателя.Транзит
|							И ЗаказПокупателя.Проверен
|							И Номенклатура В ИЕРАРХИИ (&Шины) 
|				И НЕ Номенклатура.Производитель В (&ПроизводителиНеИспользовать)  ) КАК ЗаказыПокупателейОстатки
|			ГДЕ
|				ЗаказыПокупателейОстатки.КоличествоОстаток > 0) КАК ВложенныйЗапрос
|			ПО остаткиЯШТ.Номенклатура = ВложенныйЗапрос.Номенклатура) КАК СвободныеОстаткиЯШТ" );
КонецЕсли;
//+++)
	


	СписокПроизводителиНеИспользовать = Новый СписокЗначений;
	
	ТипЦенКрупныйОпт = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"); 
	ТипЦенСреднийОпт = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00002")	;
 	Если Подразделение.Код = "00112" 
		или Подразделение.Код = "00122" 
		или Подразделение.Код = "00138" Тогда	//+++ 09.09.2014 Для ЕКТ  свои Типы цен Кр, Ср и Мелкий опт (ЕКТ)
		СписокПроизводителиНеИспользовать.Добавить(Справочники.Производители.НайтиПоКоду(39)); //Нкшз
	КонецЕсли;	
	
	//+++ 12.07.2016 - Кр.Опт ДЛЯ ВСЕХ подразделений (вместо их "филиальных")!
	ТипЦенКрупныйОпт = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"); 
//	ТипЦенМелкийОпт	 = ТипЦенКрупныйОпт;
	
	
	Запрос.УстановитьПараметр("ПроизводителиНеИспользовать",СписокПроизводителиНеИспользовать);                                                                        
	
	Запрос.УстановитьПараметр("ТипЦенКрупныйОпт", ТипЦенКрупныйОпт);
	Запрос.УстановитьПараметр("ТипЦенСреднийОпт", ТипЦенСреднийОпт);
	//Запрос.УстановитьПараметр("ТипЦенМелкийОпт", ТипЦенМелкийОпт);
	Запрос.УстановитьПараметр("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование="Филиала "+Организация.Наименование;
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.АдресСклада = АдресПодразделения(Подразделение);
    
	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ТекущаяДата = Формат(ТекущаяДата(), "ДЛФ=DD");
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();
 	NmaxS = ">"+строка(Nmax); //14.12.2018
 вр0 = ТекущаяУниверсальнаяДатаВМиллисекундах();
 	Пока ВыборкаДетали.Следующий() Цикл
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");	
		ИначеЕсли 	ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		Иначе Продолжить;
		КонецЕсли;	
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		
//+++ 17.12.2013 вывод ">50"		
	Если ВидОтчета=0 и ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке тогда  //+++ вывод >50
		
		Если ВыборкаДетали.ОстатокДляКлиента>Nmax 
			тогда ОбластьДетальныхЗаписей.Параметры.ОстатокДляКлиента = NmaxS;
		иначеЕсли ВыборкаДетали.СвободныйОстатокДляКлиента<0 
			тогда ОбластьДетальныхЗаписей.Параметры.ОстатокДляКлиента = 0;
		КонецЕсли;
		
		Если ВыборкаДетали.СвободныйОстатокДляКлиента>Nmax тогда
			ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = NmaxS;
		иначеЕсли ВыборкаДетали.СвободныйОстатокДляКлиента<0 тогда
			ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = 0;
		КонецЕсли;	
		//+++ 04.09.2014
		Если ВыборкаДетали.СвободныйОстатокЯШТ>Nmax тогда
			ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокЯШТ = NmaxS;
		иначеЕсли ВыборкаДетали.СвободныйОстатокЯШТ<0 тогда
			ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокЯШТ = 0;
		КонецЕсли;	
		
		Если ВыборкаДетали.КоличествоВПутиИзЯрославля>Nmax тогда
			ОбластьДетальныхЗаписей.Параметры.КоличествоВПутиИзЯрославля = NmaxS;
		иначеЕсли ВыборкаДетали.КоличествоВПутиИзЯрославля<0 тогда
			ОбластьДетальныхЗаписей.Параметры.КоличествоВПутиИзЯрославля = 0;
		КонецЕсли;	

	КонецЕсли;
	
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
 вр1 = ТекущаяУниверсальнаяДатаВМиллисекундах();
 сообщить("Вывод "+строка(ВыборкаДетали.Количество())+" строк за "+формат((вр1-вр0)/1000,"ЧДЦ=3")+" сек.");
 
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
КонецПроцедуры
	
Процедура ДействияФормыСформироватьТолькоАксессуары(Кнопка)
	СтрокаВид="Аксессуары";		
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;

	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
    Аксессуары=Справочники.Номенклатура.НайтиПоКоду("0000001");
	
	Макет = ПолучитьМакет("ОтчетАксессуары");
	
	началоВр = ТекущаяДата();
	
	Запрос = Новый Запрос;
 	Запрос.Текст= "ВЫБРАТЬ
                      |	А.Номенклатура КАК Номенклатура,
                      |	А.Номенклатура.Наименование КАК НоменклатураНаименование,
                      |	А.Остаток КАК Остаток,
					  |	А.ОстатокЯШТ как ОстатокЯШТ
					  
                      |ПОМЕСТИТЬ ВТ_Остатки
                      |ИЗ
                      |	(ВЫБРАТЬ
                      |		ВсеОстатки.Номенклатура КАК Номенклатура,
                      |		СУММА(ВсеОстатки.КоличествоОстаток) КАК Остаток,
					  |		Сумма(ВсеОстатки.ОстатокЯШТ) как ОстатокЯШТ
                      |	ИЗ
                      |		(ВЫБРАТЬ
                      |			ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
                      |			ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
					  |			0 как ОстатокЯШТ
                      |		ИЗ
                      |			РегистрНакопления.ТоварыНаСкладах.Остатки(
                      |					,
                      |					Номенклатура В ИЕРАРХИИ (&Аксессуары)
                      |						И (НЕ Склад.ЗапретитьИспользование)
                      |						И (Склад.Транзитный и Склад.Подразделение = &Подразделение) ) КАК ТоварыНаСкладахОстатки
					  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					  |//ТоварыЯШТ
					  |
					  |) КАК ВсеОстатки
                      |	
                      |	СГРУППИРОВАТЬ ПО
                      |		ВсеОстатки.Номенклатура) КАК А
                      |ГДЕ
                      |	А.Остаток > 0 или А.ОстатокЯШТ >0
                   	  //+++ 14.11.2014
                      |	И  НЕ (А.Номенклатура В Иерархии (&СписокУдаленныхПапок) )

					  //|ИНДЕКСИРОВАТЬ ПО
					  //|	Номенклатура
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |ВЫБРАТЬ
                      |	А.Номенклатура,
                      |	МАКСИМУМ(А.ЦенаБазовая) как ЦенаБазовая,
					  |МАКСИМУМ(А.ЦенаКрупныйОпт) как ЦенаКрупныйОпт
					  |
                      |ПОМЕСТИТЬ ВТ_Цены
                      |ИЗ
                      |	(ВЫБРАТЬ
                      |		ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
                      |		ВЫБОР
                      |			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенБазовая
                      |				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
                      |			ИНАЧЕ 0
                      |		КОНЕЦ КАК ЦенаБазовая,
				 	  |		ВЫБОР
                      |			КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦенКрупныйОпт
                      |				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
                      |			ИНАЧЕ 0
                      |		КОНЕЦ КАК ЦенаКрупныйОпт

                      |	ИЗ
                      |		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,	Номенклатура В
                      |						(ВЫБРАТЬ ВТ_Остатки.Номенклатура
                      |						ИЗ ВТ_Остатки)
                      |					И (ТипЦен = &ТипЦенБазовая или ТипЦен = &ТипЦенКрупныйОпт) ) КАК ЦеныНоменклатурыСрезПоследних) КАК А
                      |
                      |СГРУППИРОВАТЬ ПО
                      |	А.Номенклатура
					  |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |ВЫБРАТЬ
                      |	ВТ_Остатки.Номенклатура КАК Номенклатура,
                      |	ВТ_Остатки.Номенклатура.Код КАК Код,
                      |	ВТ_Остатки.Номенклатура.Артикул КАК Артикул,
                      |	ВТ_Остатки.Номенклатура.Родитель КАК Родитель,
                      |	ВЫБОР
                      |		КОГДА ВТ_Остатки.Остаток > 50
                      |				И &РежимФормирования
                      |			ТОГДА 51
                      |		ИНАЧЕ ВТ_Остатки.Остаток
                      |	КОНЕЦ КАК ОстатокДляКлиента,
                      |	ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоВРезерве,
                      |	ВЫБОР
                      |		КОГДА ВТ_Остатки.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
                      |				И &РежимФормирования
                      |			ТОГДА 51
                      |		ИНАЧЕ ВТ_Остатки.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
                      |	КОНЕЦ КАК СвободныйОстатокДляКлиента,
					  //+++ 04.09.2014
					  |	ВЫБОР
                      |		КОГДА ВТ_Остатки.ОстатокЯШТ>50 
					  |				И &РежимФормирования
                      |			ТОГДА 51
                      |		ИНАЧЕ ВТ_Остатки.ОстатокЯШТ 
					  |Конец как СвободныйОстатокЯШТ,
					  |
                      |	ВТ_Цены.ЦенаБазовая,
                      |	ВТ_Цены.ЦенаКрупныйОпт,
                      |	ЕСТЬNULL(ВТ_Остатки.Номенклатура.Комментарий, """") КАК Комментарий
					  |
                      |ИЗ
                      |	(ВЫБРАТЬ * ИЗ ВТ_Остатки КАК ВТ_Остатки) КАК ВТ_Остатки
                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(,
                      |				Номенклатура В (ВЫБРАТЬ ВТ_Остатки.Номенклатура
                      |								ИЗ  ВТ_Остатки)
                      |				И ЗаказПокупателя.Транзит 
					  |				И ЗаказПокупателя.Проверен 
					  |		И (ЗаказПокупателя.Подразделение = &Подразделение 
					  |			ИЛИ ЗаказПокупателя.Склад.Подразделение = &Подразделение
					  |		  )		) КАК ЗаказыПокупателейОстатки
                      |		ПО ВТ_Остатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
                      |		ПО ВТ_Остатки.Номенклатура = ВТ_Цены.Номенклатура
                      |
                      |УПОРЯДОЧИТЬ ПО
					  //+++  24.06.2015 - сортировка по родителю
					  |	ВТ_Остатки.Номенклатура.Родитель.Наименование,
                      |	ВТ_Остатки.Номенклатура.Наименование
                      |ИТОГИ
                      |	СУММА(ОстатокДляКлиента),
                      |	СУММА(КоличествоВРезерве),
                      |	СУММА(СвободныйОстатокДляКлиента),
					  |	СУММА(СвободныйОстатокЯШТ)
                      |ПО
                      |	Номенклатура
					  //+++  24.06.2015 ИЕРАРХИЯ
					  |";
					  
	СписокУдаленныхПапок = получитьСписокУдаленныхПапок();
	Запрос.Параметры.Вставить("СписокУдаленныхПапок", СписокУдаленныхПапок);
					  
	Запрос.Параметры.Вставить("Аксессуары", Аксессуары);
	Запрос.Параметры.Вставить("Подразделение", Подразделение);
	
	Запрос.Параметры.Вставить("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));                                                                        
	Запрос.Параметры.Вставить("ТипЦенБазовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
	Запрос.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	
	//+++( 04.09.2014 --- остатки ЯШТ по дискам ------------------
Если Флажок1 тогда
запрос.Текст = стрЗаменить(запрос.Текст,"//ТоварыЯШТ", " ОБЪЕДИНИТЬ ВСЕ
|"+  //------------------------------Запрос по остаткам ЯШТ-----------------------------------------
"ВЫБРАТЬ
|	СвободныеОстаткиЯШТ.Номенклатура,
|	0 ,
|	ЕСТЬNULL(СвободныеОстаткиЯШТ.СвободныйОстаток, 0)
|ИЗ
|	(ВЫБРАТЬ
|		остаткиЯШТ.Номенклатура КАК Номенклатура,
|		остаткиЯШТ.КоличествоОстаток - ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0) КАК СвободныйОстаток
|	ИЗ
|		РегистрНакопления.ТоварыНаСкладах.Остатки(, НЕ Склад.Транзитный
|					И НЕ Склад.ЗапретитьИспользование
|					И Номенклатура В ИЕРАРХИИ (&Аксессуары)  ) КАК остаткиЯШТ
|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|				ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
|				ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоОстаток
|			ИЗ
|				РегистрНакопления.ЗаказыПокупателей.Остатки( , НЕ ЗаказПокупателя.Транзит
|							И ЗаказПокупателя.Проверен
|							И Номенклатура В ИЕРАРХИИ (&Аксессуары)  ) КАК ЗаказыПокупателейОстатки
|			ГДЕ
|				ЗаказыПокупателейОстатки.КоличествоОстаток > 0) КАК ВложенныйЗапрос
|			ПО остаткиЯШТ.Номенклатура = ВложенныйЗапрос.Номенклатура) КАК СвободныеОстаткиЯШТ" );
КонецЕсли;
//+++)

	
	//+++( 04.09.2014 --- остатки ЯШТ
	ОбъдинениеЯШТ = "";
	запрос.Текст = запрос.Текст + ОбъдинениеЯШТ;
	//+++)
	Результат = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	
		
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование="Филиала "+Организация.Наименование;
	ОбластьЗаголовок.Параметры.ТекущаяДата = Формат(ТекущаяДата(), "ДЛФ=DD");
	
	ОбластьЗаголовок.Параметры.АдресСклада = АдресПодразделения(Подразделение);

	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	
	Категория ="";	
	
	Папки = справочники.Номенклатура.НайтиПоКоду("9165781");
	NovLine = справочники.Номенклатура.НайтиПоКоду("9145226"); //яНОМЕНКЛАТУРА NOVLINE
	Родитель = "";
	
	Состояние("Идет получение файлов ФОТО аксессуаров...");
	путьККартинкамАксессуаров = "http://photo.yst.ru/accessories/";
	//СписокФайловФТП=ПолучитьФайлыФТП(путьККартинкамАксессуаров);

	Пока ВыборкаДетали.Следующий() Цикл
		если ВыборкаДетали.Номенклатура = Аксессуары  //+++ 22.10.2014 - лишние группировки убираем
			или ВыборкаДетали.Номенклатура = Папки 
			или ВыборкаДетали.Номенклатура = NovLine тогда Продолжить; // главную папку не надо!
		КонецЕсли;	
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");
			Категория = ВыборкаДетали.Номенклатура;
		ИначеЕсли 	ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
			Категория = ВыборкаДетали.Родитель;
		Иначе Продолжить;
		КонецЕсли;	
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ОбластьДетальныхЗаписей.Параметры.Категория = Категория;   //+++ 14.11.2014
		
		Если ВидОтчета =0 И ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда // для клиентов
			Если ВыборкаДетали.ОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.ОстатокДляКлиента = ">50" ;
			КонецЕсли;	
			
			Если ВыборкаДетали.СвободныйОстатокДляКлиента>50 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = ">50";
			ИначеЕсли ВыборкаДетали.СвободныйОстатокДляКлиента<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокДляКлиента = "";
			КонецЕсли;	
			
			Если ВыборкаДетали.СвободныйОстатокЯШТ>50 Тогда//+++
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокЯШТ = ">50";
			ИначеЕсли ВыборкаДетали.СвободныйОстатокЯШТ<0 Тогда
				ОбластьДетальныхЗаписей.Параметры.СвободныйОстатокЯШТ = "";
			КонецЕсли;	
	 	КонецЕсли;	
		
	//+++ фото аксов!	
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		ФайлКартинки = СокрЛП(ВыборкаДетали.Код)+".png";
		ОбластьДетальныхЗаписей.Параметры.ПутьКФото = путьККартинкамАксессуаров + ФайлКартинки;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
	парамЗапроса = "Прайс "+?(ВидОтчета=0,"для Клиентов ","для Менеджеров ")+ строка(Подразделение)+" - Аксессуары"; 
	Если ВремяВыполнения>0 тогда
		//ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 210, ВремяВыполнения, "Кнопка [Сформировать] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
		сообщить(парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)");
	КонецЕсли;	


КонецПроцедуры

Процедура ДействияФормыСформироватьТолькоАКБ(Кнопка)
	СтрокаВид="АКБ";		
	ВидОтчета= ЭлементыФормы.Переключатель1.Значение;	
	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	ЭлементыФормы.ДействияФормы.Кнопки.СохранитьНаСайте.Доступность=?(ВидОтчета=0,Истина,Ложь);
	
	АКБ=Справочники.Номенклатура.НайтиПоКоду("0080021");
	
	
	Макет = ПолучитьМакет("ОтчетАКБ");
	
	Запрос = Новый Запрос;
 	Запрос.Текст = "ВЫБРАТЬ
	              |	Б.Номенклатура,
	              |	Б.Номенклатура.Артикул КАК Модель,
	              |	Б.Номенклатура.Код КАК Код,
	              |	Б.Номенклатура.Типоразмер КАК Типоразмер,
	              |	Б.Номенклатура.Производитель КАК Производитель,
	              |	Б.Емкость,
	              |	Б.Номенклатура.КодСБИС КАК Полярность,
	              |	Б.ПусковойТок,
	              |	Б.ОстатокДляКлиента,
	              |	Б.СвободныйОстатокДляКлиента,
				  |	Б.КОличествоВРезерве,
				  
	              |	Б.СвободныйОстатокЯШТ,
				  
	              |	Б.ЦенаДилерская,
	              |	Б.ЦенаКрупныйОпт КАК ЦенаКрупныйОпт,
	              |	Б.ЦенаСпец КАК ЦенаСпец
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		А.Номенклатура КАК Номенклатура,
	              |		А.Емкость КАК Емкость,
	              |		А.ПусковойТок КАК ПусковойТок,
	              |		А.Остаток КАК Остаток,
	              |		ВЫБОР
	              |			КОГДА А.Остаток > 50
	              |					И &РежимФормирования
	              |				ТОГДА "">50""
	              |			ИНАЧЕ А.Остаток
	              |		КОНЕЦ КАК ОстатокДляКлиента,
	              |		ВЫБОР
	              |			КОГДА А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 50
	              |					И &РежимФормирования
	              |				ТОГДА "">50""
	              |			ИНАЧЕ А.Остаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
	              |		КОНЕЦ КАК СвободныйОстатокДляКлиента,
	              |		ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КОличествоВРезерве,
				  |		А.СвободныйОстатокЯШТ,
	              |		ЕСТЬNULL(ЦеныКрупныйОпт.Цена, 0) КАК ЦенаКрупныйОпт,
	              |		ЕСТЬNULL(ЦеныСпец.Цена, 0) КАК ЦенаСпец,
	              |		ЕСТЬNULL(ЦеныДилерская.Цена, 0) КАК ЦенаДилерская
	              |	ИЗ
	              |		(ВЫБРАТЬ
	              |			ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	              |			ЗнСвОб1.Емкость КАК Емкость,
	              |			ЗнСвОб2.ПусковойТок КАК ПусковойТок,
	              |			ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
				  |			ТоварыНаСкладахОстатки.СвободныйОстатокЯШТ как СвободныйОстатокЯШТ
	              |		ИЗ
	              |			(выбрать 
				  |			ТоварыНаСкладах.Номенклатура, 
				  |			ТоварыНаСкладах.КоличествоОстаток,
				  |			ТоварыНаСкладах.СвободныйОстатокЯШТ
				  |			из (выбрать ТоварыФилиала.Номенклатура, 
				  |						ТоварыФилиала.КоличествоОстаток, 
				  | 					0 КАК СвободныйОстатокЯШТ
				  |			    ИЗ РегистрНакопления.ТоварыНаСкладах.Остатки(,  {Номенклатура.*} 
	              |					НЕ Склад.ЗапретитьИспользование
				  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              |						И Склад.Транзитный И Склад.Подразделение = &Подразделение
				  
	              |						И Номенклатура В ИЕРАРХИИ (&АКБ)     )как ТоварыФилиала
				  
				  |				//ОстаткиЯрославль
				  
				  |				) КАК ТоварыНаСкладах
				  |			) как ТоварыНаСкладахОстатки

	              |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	              |					ЗначенияСвойствОбъектов.Объект КАК Номенклатура,
	              |					ЗначенияСвойствОбъектов.Значение КАК Емкость
	              |				ИЗ
	              |					РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	              |				ГДЕ
	              |					ЗначенияСвойствОбъектов.Свойство = &Емкость) КАК ЗнСвОб1
	              |				ПО ТоварыНаСкладахОстатки.Номенклатура = ЗнСвОб1.Номенклатура
				  
	              |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	              |					ЗначенияСвойствОбъектов.Объект КАК Номенклатура,
	              |					ЗначенияСвойствОбъектов.Значение КАК ПусковойТок
	              |				ИЗ
	              |					РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	              |				ГДЕ
	              |					ЗначенияСвойствОбъектов.Свойство = &ПусковойТок) КАК ЗнСвОб2
	              |				ПО ТоварыНаСкладахОстатки.Номенклатура = ЗнСвОб2.Номенклатура) КАК А
				  |
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(,  {Номенклатура.*} 
	           //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              |					ЗаказПокупателя.Транзит И ЗаказПокупателя.Подразделение = &Подразделение 
	              |						И ЗаказПокупателя.Проверен
	              |						И Номенклатура В ИЕРАРХИИ (&АКБ) ) КАК ЗаказыПокупателейОстатки
	              |			ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
				  
	           //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, {Номенклатура.*} 
	              |					Номенклатура В ИЕРАРХИИ (&АКБ) И ТипЦен = &ТипЦенКрупныйОпт
	              |						) КАК ЦеныКрупныйОпт
	              |			ПО А.Номенклатура = ЦеныКрупныйОпт.Номенклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,  {Номенклатура.*} 
	              |					Номенклатура В ИЕРАРХИИ (&АКБ) И ТипЦен = &ТипЦенСпецЦена
	              |						 ) КАК ЦеныСпец
	              |			ПО А.Номенклатура = ЦеныСпец.Номенклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних( , {Номенклатура.*} 
	              |					Номенклатура В ИЕРАРХИИ (&АКБ) И ТипЦен = &ТипЦенДилерская
	              |						 ) КАК ЦеныДилерская
	              |			ПО А.Номенклатура = ЦеныДилерская.Номенклатура) КАК Б
	              |ГДЕ
	              |	Б.ОстатокДляКлиента > 0 
				  //+++
				  |	или Б.СвободныйОстатокЯШТ > 0  
		             |{ГДЕ 
				  |   Б.Номенклатура.*}
	              |УПОРЯДОЧИТЬ ПО
	              |	Б.Номенклатура.Наименование
	              |АВТОУПОРЯДОЧИВАНИЕ";
				  
	запрос.Параметры.Вставить("Подразделение",	Подразделение);  
		
	запрос.Параметры.Вставить("АКБ", АКБ);
	Запрос.Параметры.Вставить("РежимФормирования",?(ВидОтчета=0,Истина,Ложь ));
	
	//разделение Крупного опта по подразделениям
	Если Подразделение.Пустая() или Подразделение.Код = "00005" тогда
		запрос.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	ИначеЕсли Подразделение.Пустая() или Подразделение.Код = "00106" тогда//РнД
    	запрос.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00015"));
	ИначеЕсли Подразделение.Пустая() или Подразделение.Код = "00112" тогда//СПб
    	запрос.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00018"));
	ИначеЕсли Подразделение.Пустая() или Подразделение.Код = "00122" тогда//Ект
		запрос.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00024"));
	ИначеЕсли Подразделение.Пустая() или Подразделение.Код = "00138" тогда//Ект
    	запрос.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00024"));
	Иначе																  //как в Ярославле
		Запрос.Параметры.Вставить("ТипЦенКрупныйОпт", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	КонецЕсли;
	
	Если Флажок1 тогда
	Запрос.Текст = стрЗаменить(Запрос.Текст, "//ОстаткиЯрославль", "ОБЪЕДИНИТЬ ВСЕ
				  |"+"ВЫБРАТЬ
				     |	ТоварыЯШТ.Номенклатура,
				     |	0,
				     |	ТоварыЯШТ.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
				     |ИЗ
				     |	РегистрНакопления.ТоварыНаСкладах.Остатки(
				     |			,
				     |			Номенклатура В ИЕРАРХИИ (&АКБ)
				     |				И НЕ Склад.ЗапретитьИспользование
				     |				И НЕ Склад.Транзитный {(Номенклатура).*}) КАК ТоварыЯШТ
				     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(, НЕ ЗаказПокупателя.Транзит) КАК ЗаказыПокупателейОстатки
				     |		ПО ТоварыЯШТ.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура");
	КонецЕсли;				  
	
	запрос.Параметры.Вставить("ТипЦенСпецЦена", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00013"));  
	запрос.Параметры.Вставить("ТипЦенДилерская", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00009"));
	
	Запрос.Параметры.Вставить("Емкость", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00132"));
	Запрос.Параметры.Вставить("ПусковойТок", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90167"));
	
	Результат = Запрос.Выполнить(); //ИЕРАРХИЯ
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Организация=Справочники.Организации.НайтиПоКоду("00001");
	ОбластьЗаголовок.Параметры.ОрганизацияПолноеНаименование=Организация.НаименованиеПолное;
	СведенияОбОрганизации      	  = СведенияОЮрФизЛице(Организация,ТекущаяДата());
	ОбластьЗаголовок.Параметры.ОписаниеОрганизации=ОписаниеОрганизации(СведенияОбОрганизации,"ИНН,ОГРН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	ОбластьЗаголовок.Параметры.АдресСклада = АдресПодразделения(Подразделение);

	ОбластьЗаголовок.Параметры.timestamp="время форм.: "+ТекущаяДата();
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.ТекущаяДата=Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	//ОбластьСтрокаСкладов.Параметры.СтрокаСкладов=СтрокаСкладов;
	//ОбластьСтрокаСкладов.Параметры.СтрокаНоменклатуры=СтрокаНоменклатуры;
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	
	Пока ВыборкаДетали.Следующий() Цикл
		Если ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии 
			или ВыборкаДетали.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Иерархия");	
		Иначе
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		КонецЕсли;	
		
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);	
			
		//	ОбластьДетальныхЗаписей.Параметры.Производитель=ВыборкаДетали.Производитель;
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
КонецПроцедуры

//+++ 22.10.2014
функция получитьСписокУдаленныхПапок()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ различные
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ПометкаУдаления
	|	И Номенклатура.Ссылка В ИЕРАРХИИ (&Аксессуары)
	|	И Номенклатура.ЭтоГруппа";
	
	Запрос.УстановитьПараметр("Аксессуары", справочники.Номенклатура.НайтиПоКоду("0000001") );
	
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();
	СписокУдПапок = новый СписокЗначений;
	если табл.Количество()>0 тогда
	СписокУдПапок.ЗагрузитьЗначения(табл.ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;
	возврат СписокУдПапок;
КонецФункции

	
Функция ОтделитьРазделителем(Стр, Знач Разделитель, Режим=0)

	ПраваяЧасть         = "";
	ПозРазделителя      = Найти(Стр, Разделитель);
	ДлинаРазделителя    = СтрДлина(Разделитель);
	Если ПозРазделителя > 0 Тогда
		ПраваяЧасть	 = Сред(Стр, ПозРазделителя + ?(Режим=2, 0, ДлинаРазделителя));
		Стр          = СокрЛП(Лев(Стр, ПозРазделителя - ?(Режим=1, -ДлинаРазделителя + 1, 1)));
	КонецЕсли;

	Возврат(ПраваяЧасть);

КонецФункции // ОтделитьРазделителем()

// Преобразует значения из строки в массив, используя указанный разделитель
//
// Параметры:
//  Стр            - Разбираемая строка
//  Разделитель    - подстрока разделитель
//
// Возвращаемое значение:
//  Массив значений
// 
Функция МассивИзСтроки(Знач Стр, Разделитель=",")

	Массив      = Новый Массив;
	ПраваяЧасть = ОтделитьРазделителем(Стр, Разделитель);
	
	Пока Не ПустаяСтрока(Стр) Цикл
		Массив.Добавить(СокрЛП(Стр));
		Стр         = ПраваяЧасть;
		ПраваяЧасть = ОтделитьРазделителем(Стр, Разделитель);
	КонецЦикла; 

	Возврат(Массив);
	
КонецФункции // МассивИзСтроки() 

Процедура ДействияФормыДействиеУстановитьЦены(Кнопка)
Если ЭлементыФормы.ПолеТабличногоДокумента.ВыделенныеОбласти.Количество()=0 Тогда
		Предупреждение("Выделите фрагмент с номенклатурой", 10);
		Возврат;
	КонецЕсли;	
	
	ДокУЦН=Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	ДокУЦН.Дата=ТекущаяДата();
	
	 ТипЦенЯкорная=Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Якорная");
	
	ТипЦенКрупныйОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005");
	ТипЦенСреднийОпт=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00002");
		
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенЯкорная;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенКрупныйОпт;
	строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	строкаТипыЦен.ТипЦен=ТипЦенСреднийОпт;
	//строкаТипыЦен=ДокУЦН.ТипыЦен.Добавить();
	//строкаТипыЦен.ТипЦен=ТипЦенМелкийОпт;

	
	Для каждого ВыделеннаяОбласть ИЗ ЭлементыФормы.ПолеТабличногоДокумента.ВыделенныеОбласти Цикл
		ИмяОбласти=ВыделеннаяОбласть.Имя;		
		
		индДвоеточия=Найти(ИмяОбласти,":");
		
		Если индДвоеточия>0 Тогда // несколько ячеек
			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			НачальныйНомер=Число(Сред(ИмяОбласти,индR1+1,индC1-индR1-1));
			ОстСтрока=Сред(ИмяОбласти,индДвоеточия);
			
			индR2=Найти(ОстСтрока,"R");
			индC2=Найти(ОстСтрока,"C");
			КонечныйНомер=Число(Сред(ОстСтрока,индR2+1,индC2-индR2-1));
			   Для сч=НачальныйНомер по КонечныйНомер Цикл
				мКодНоменклатуры=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Формат(сч,"ЧГ=0")+"C6").Текст;
				СсылкаНоменклатура=Справочники.Номенклатура.НайтиПоКоду(мКодНоменклатуры);
				Если ЗначениеЗаполнено(СсылкаНоменклатура) Тогда
					 строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=СсылкаНоменклатура;
					 строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенЯкорная);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенЯкорная;

					 строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=СсылкаНоменклатура;
					 строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенКрупныйОпт);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенКрупныйОпт;
					 
					 строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=СсылкаНоменклатура;
					 строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенСреднийОпт);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенСреднийОпт;

					 //строкаТовары=ДокУЦН.Товары.Добавить();
					 //строкаТовары.Номенклатура=СсылкаНоменклатура;
					 //строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенМелкийОпт);
					 //строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 //строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 //строкаТовары.ТипЦен=ТипЦенМелкийОпт;

					
				КонецЕсли;
			КонецЦикла;	
			
		Иначе // одна ячейка

			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			сч=Сред(ИмяОбласти,индR1+1,индC1-индR1-1);
			
			мКодНоменклатуры=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+сч+"C6").Текст;
			СсылкаНоменклатура=Справочники.Номенклатура.НайтиПоКоду(мКодНоменклатуры);
				Если ЗначениеЗаполнено(СсылкаНоменклатура) Тогда
					строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=СсылкаНоменклатура;
					 строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенЯкорная);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенЯкорная;

					 строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=СсылкаНоменклатура;
					 строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенКрупныйОпт);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенКрупныйОпт;
					 
					 строкаТовары=ДокУЦН.Товары.Добавить();
					 строкаТовары.Номенклатура=СсылкаНоменклатура;
					 строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенСреднийОпт);
					 строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 строкаТовары.ТипЦен=ТипЦенСреднийОпт;

					 //09.02.2017
					 //строкаТовары=ДокУЦН.Товары.Добавить();
					 //строкаТовары.Номенклатура=СсылкаНоменклатура;
					 //строкаТовары.Цена=ПолучитьЦену(СсылкаНоменклатура,ТипЦенМелкийОпт);
					 //строкаТовары.Валюта=Константы.ВалютаУправленческогоУчета.Получить();
					 //строкаТовары.ЕдиницаИзмерения=строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
					 //строкаТовары.ТипЦен=ТипЦенМелкийОпт;

				КонецЕсли;
		

		КонецЕсли;	
	
	
				
КонецЦикла;	

ДокУЦН.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ОтображатьКодПроизводителяПриИзменении(Элемент)
	
	ТабДок =ЭлементыФормы.ПолеТабличногоДокумента;
	 
	ТабДок.Область("C14").Видимость=ОтображатьКодПроизводителя;

КонецПроцедуры

Функция ПолучитьФайлыФТП(Путь="http://photo.yst.ru/", СписокФайлов=неопределено)
	
	ПутьFTP = стрЗаменить(Путь, "http://photo.yst.ru/", "photo.yst.ru/public_html/");
	
	Если СписокФайлов=неопределено тогда
		СписокФайлов=новый СписокЗначений;
	КонецЕсли;
	
	Попытка
		Если врФТП = неопределено тогда // разрыв соединения
			   
				//"dc140403", "dp9YsYyCp7t8" 
 		врФТП = Новый FTPСоединение("photo.yst.ru", "dc140403_yst", "scdi7kRU", ,, Истина ); //188.225.16.133 >> photo.yst.ru
		КонецЕсли;
		
			Масс= врФТП.НайтиФайлы(ПутьFTP,"*.png",истина);
			для каждого элМасс из Масс Цикл
				СписокФайлов.Добавить(элМасс.Имя);
			КонецЦикла;	
			сообщить("Найдено "+строка(Масс.Количество())+" файлов в папке "+ПутьFTP);
			возврат СписокФайлов;
	исключение
		сообщить("Ошибка соединения с FTP: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
	возврат СписокФайлов;
КонецФункции	




функция ВыгрузитьДанные(Excel, номСтр=1, НазвСтр="Ярославль")
		
	ExcelЛист = Excel.WorkSheets(номСтр);
	ExcelЛист.Activate();
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	N = ТабДок.ВысотаТаблицы-2;
	M = ТабДок.ШиринаТаблицы;
	k = 0;
	
	ExcelЛист.cells(2,2).value = "ПРАЙС-ЛИСТ ("+НазвСтр+") Филиала ЗАО ТК ""Яршинторг"" на "+формат(ТекущаяДата(),"ДЛФ=DD");
	ExcelЛист.cells(6,2).value = ТабДок.Область(6,2,6,2).Текст; // Адрес склада
	ExcelЛист.cells(7,2).value = "Время формирования: "+строка(ТекущаяДата());
	
состояние("Идет вывод данных "+строка(N)+" строк в Закладку №"+строка(номСтр)+" '"+назвСтр+"' в Excel-файл...");
	
//+++ 17.03.2015 - через буфер
//WSH = Новый COMОбъект("WScript.Shell"); 

ТабДок.Защита = Ложь; 
ТабДок.Вывод  = ИспользованиеВывода.Разрешить; 
ЭтаФорма.ТекущийЭлемент = ТабДок; 
ТабДок.Показать();

состояние("Идет сохранение во временный файл: "+КаталогВременныхФайлов()+"111.txt");
 ТабДок.ПолучитьОбласть(11,1,N,M).Записать(КаталогВременныхФайлов()+"111.txt", ТипФайлаТабличногоДокумента.TXT);  
 
 текст1 = новый ТекстовыйДокумент;
 текст1.Прочитать(КаталогВременныхФайлов()+"111.txt");
 
ЭлементыФормы.Добавить(Тип("ПолеHTMLДокумента"), "Поле_HTML_Документа_acb123", Ложь); 
	 Окно = ЭлементыФормы.Поле_HTML_Документа_acb123.Документ.ParentWindow; 
 состояние("Идет сохранение в буфер обмена текста из временного файла: "+КаталогВременныхФайлов()+"111.txt");
	 Окно.ClipboardData.SetData("text", текст1.ПолучитьТекст() );  // только 1 ячейка?!
ЭлементыФормы.Удалить(ЭлементыФормы.Индекс(ЭлементыФормы.Найти("Поле_HTML_Документа_acb123"))); 

//WSH.SendKeys("^{c}");  //в англ.

		попытка
			Excel.Application.Visible = 1;
			NNN = Excel.Application.WorkBooks.Count();
			Excel.Windows(NNN).Visible = 1;	
			ExcelЛист.Range( ExcelЛист.cells(11,1), ExcelЛист.cells(11,1) ).Select();
   //			ExcelЛист.Range( Excel.Application.Selection, ExcelЛист.cells(N-k,M) ).Select();
			ExcelЛист.Paste();
	//WSH.SendKeys("^v");  WSH.SendKeys("^м");

		Исключение
			сообщить("Ошибка вставки данных в Excel : "+ОписаниеОшибки(), СтатусСообщения.Внимание );
		КонецПопытки;
   
   попытка
   состояние("Идет оформление "+строка(N)+" строк");
	   ExcelЛист.Range( ExcelЛист.cells(11,1), ExcelЛист.cells(11,1) ).Select();
	   ExcelЛист.Range( Excel.Application.Selection, ExcelЛист.cells(N-k,M) ).Select();
	 
	Excel.Application.Selection.Borders(5).LineStyle = -4142;
	Excel.Application.Selection.Borders(6).LineStyle = -4142;
	для i=7 по 12 цикл
		Excel.Application.Selection.Borders(i).LineStyle = 1;
	КонецЦикла;
	
ExcelЛист.Rows("11:"+формат(N,"ЧГ=0")).Select();
Excel.Application.Selection.EntireRow.AutoFit(); // автовысота строк

ExcelЛист.Range( ExcelЛист.cells(11,1), ExcelЛист.cells(11,1) ).Select();//снимаем выделение строк

	исключение
    Сообщить("Не удалось сделать обрамление таблицы "+назвСтр, СтатусСообщения.Внимание);
    КонецПопытки;

//+++ 14.02.2018 --- фиксация заголовка (верхние 10 строк)-----------
	Попытка
	ExcelЛист.Rows("11:11").Select();
   	NNN = Excel.Application.WorkBooks.Count();
	Excel.Windows(NNN).FreezePanes = True;   //16.02.2018
	ExcelЛист.Range( ExcelЛист.cells(11,1), ExcelЛист.cells(11,1) ).Select();//снимаем выделение строк
	исключение
		Сообщить("Не удалось сделать фиксацию шапки таблицы "+назвСтр, СтатусСообщения.Внимание);
	КонецПопытки;

	попытка
    состояние("Скопирована таблица из "+строка(N)+" строк "+?(k>0,"(удалено "+строка(k)+" пустых строк)","")
	            +" в Закладку №"+строка(номСтр)+" '"+назвСтр+"', идет перезапись Excel-файла...");
	Excel.Save(); //перезапись
		Сообщить(строка(ТекущаяДата())+" >> Данные записаны в закладку №"+строка(номСтр)+" '"+назвСтр+"' в файл Excel...", СтатусСообщения.Информация);
		
		//NNN = Excel.Application.WorkBooks.Count();
		//Excel.Windows(NNN).Visible = 0;	
		Excel.Application.Visible = 0;
		
    состояние("Скопирована таблица из "+строка(N)+" строк "+?(k>0,"(удалено "+строка(k)+" пустых строк)","")
	            +" в Закладку №"+строка(номСтр)+" '"+назвСтр+"', перезапись Excel-файла завершена.");
		возврат 0;
	исключение
		Сообщить("Ошибка записи файла Excel : "+ОписаниеОшибки(), СтатусСообщения.Важное);
		//---------Закрываем----------------------
	 	Excel.WorkBooks.Close();
		Excel = 0;
		ВОЗВРАТ -1;
	КонецПопытки;
	
КонецФункции


Процедура ДействияФормыВыгрузитьВExcel(Кнопка, путь0=неопределено, МинНомФил=неопределено)  Экспорт
	
Переключатель1 = 0;// для клиентов
путь0 = ?(Флажок2, КаталогВременныхФайлов(), ?(путь0=неопределено,"\\terminal\обмен\Гостева Алёна\",путь0) );
МинНомФил=?(МинНомФил=неопределено,1,МинНомФил);

//-------------------------------таблица по филиалам----------------------------------------
таблФилиалов = новый ТаблицаЗначений;
таблФилиалов.Колонки.Добавить("Регион");
таблФилиалов.Колонки.Добавить("НазвАнгл");
таблФилиалов.Колонки.Добавить("Подразделение");
таблФилиалов.Колонки.Добавить("Номер");
Если МинНомФил=1 тогда
стр1= таблФилиалов.Добавить();
стр1.Номер = 1; 	стр1.Регион ="Ростов";		стр1.НазвАнгл = "rostov";
стр1.Подразделение = справочники.Подразделения.НайтиПоКоду("00106"); 
КонецЕсли;
Если МинНомФил<=2 тогда
стр1= таблФилиалов.Добавить();
стр1.Номер = 2;		стр1.Регион ="Питер";		стр1.НазвАнгл = "spb";
стр1.Подразделение = справочники.Подразделения.НайтиПоКоду("00112");     
КонецЕсли;
Если МинНомФил<=3 тогда
стр1= таблФилиалов.Добавить();
стр1.Номер = 3;		стр1.Регион ="Екатеринбург"; стр1.НазвАнгл = "ekaterinburg";
стр1.Подразделение = справочники.Подразделения.НайтиПоКоду("00138");   
КонецЕсли;
Если МинНомФил<=4 тогда
стр1= таблФилиалов.Добавить();
стр1.Номер = 4;		стр1.Регион ="Москва";		стр1.НазвАнгл = "moskow";
стр1.Подразделение = справочники.Подразделения.НайтиПоКоду("00133");    
КонецЕсли;
Если МинНомФил<=5 тогда
стр1= таблФилиалов.Добавить();//13.08.2018
стр1.Номер = 5;		стр1.Регион ="Тольятти";    стр1.НазвАнгл = "tolyatti";
стр1.Подразделение = справочники.Подразделения.НайтиПоКоду("00172");    
КонецЕсли;

Флажок1 = Истина; //всегда с остатками ЯШТ!

таблВидов = новый ТаблицаЗначений;
таблВидов.Колонки.Добавить("Вид");	 таблВидов.Колонки.Добавить("ВидАнгл");  
таблВидов.Колонки.Добавить("КолНач");таблВидов.Колонки.Добавить("КолКон");
таблВидов.Колонки.Добавить("Номер");

стр1 = таблВидов.Добавить();
стр1.вид =  "Шины";  стр1.КолНач = 6;  стр1.КолКон = 9;  стр1.видАнгл = "_tyres"; стр1.Номер = 1;
стр1 = таблВидов.Добавить();
стр1.вид =  "Диски"; стр1.КолНач = 13; стр1.КолКон = 18; стр1.видАнгл = "_disks"; стр1.Номер = 2;
стр1 = таблВидов.Добавить();
стр1.вид =  "АКБ";   стр1.КолНач = 9; стр1.КолКон = 11;  стр1.видАнгл = "_akb";   стр1.Номер = 3;
стр1 = таблВидов.Добавить();
стр1.вид =  "Аксессуары"; стр1.КолНач = 6; стр1.КолКон = 8;стр1.видАнгл =  "_access"; стр1.Номер = 4;

Для каждого Филиал из таблФилиалов цикл   //+++ 27.08.2018 сначала по Филиалу, а потом по Переключателю = 1, а потом =0 и из файла!
	Подразделение = Филиал.Подразделение;
	
для нПерек =0 по 1 цикл
	ОбработкаПрерыванияПользователя();
	
	Переключатель1=1-нПерек; //27.08.2018 - наоборот!  сначала для менеджеров, потом для клиентов! >50
	
	путь = путь0 + формат(Год(ТекущаяДата()),"ЧГ=0")+"\"+формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+формат(ТекущаяДата(),"ДФ=MMMM")+"\";
	Если Переключатель1=0 
		тогда ИмяФайла = формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+ формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=") +" "+Филиал.Регион+".xls";
		иначе ИмяФайла = "Остатки "+формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+ формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=") +".xls";
	КонецЕсли;	
Сообщить(строка(ТекущаяДата())+" === выгрузки данных "+Филиал.Регион+" ("+?(Переключатель1=0,"для клиентов","для менеджеров")+") в файл: "+ИмяФайла+" ===");
	
	Если Переключатель1=0 тогда
		попытка
			АктивныйДокумент = ПолучитьМакет("МакетExcel");
			Excel = АктивныйДокумент.Получить();
			Excel.Application.DisplayAlerts = 0;
			Excel.SaveAs(путь+ИмяФайла,1); //чистый c закладками
		исключение
			Сообщить("Ошибка записи файла "+путь+ИмяФайла+" : "+ОписаниеОшибки(), СтатусСообщения.Важное);
		//---------Закрываем----------------------
		 	Excel.Application.WorkBooks.Close();
			Excel = 0;
			ВОЗВРАТ;
		КонецПопытки;
	Иначе        // общие остатки для менеджеров
		попытка
		Excel1 = новый COMОбъект("Excel.Application");
		Excel1.WorkBooks.Open(путь+ИмяФайла);
		Excel = Excel1.WorkBooks(Excel1.WorkBooks.Count());
		
		Excel.Application.DisplayAlerts = 0;
		Excel.SaveAs(путь+ИмяФайла); //еще раз!
		
		исключение
			Сообщить("Ошибка при открытии файла "+путь+ИмяФайла+" : "+ОписаниеОшибки(), СтатусСообщения.Важное);
		//---------Закрываем----------------------
		 	Excel.Application.WorkBooks.Close();
			Excel = 0;
			ВОЗВРАТ;
		КонецПопытки;
	КонецЕсли;		
	
//============Единый цикл!====================================================		
Для каждого стрВид из таблВидов цикл
    СтрокаВид =стрВид.Вид;
	
	Если Переключатель1=1 тогда
		ДействияФормыСформироватьТолькоПоВиду(СтрокаВид);
		Если СтрокаВид="Диски" тогда		//----------сдвиг колонок влево---------------
			для номСтр=11 по ТабДок.ВысотаТаблицы цикл
				для номКол=20 по 23 цикл
				ТабДок.Область(номСтр, номКол-1,номСтр, номКол-1).Текст = ТабДок.Область(номСтр, номКол,номСтр, номКол).Текст;
				КонецЦикла;
				ТабДок.Область(номСтр, 23,номСтр, 23).Текст = "";
			КонецЦикла;
		КонецЕсли;							//--------------------------------------
		ТабДок.Записать(путь+СтрокаВид+".mxl",ТипФайлаТабличногоДокумента.MXL);
		Сообщить(строка(ТекущаяДата())+" --- Сохранен файл "+путь+СтрокаВид+".mxl для региона: "+Филиал.Регион+" ---");
	Иначе //просто читает, заменяет >50 
		убратьКолБольше50( путь, стрВид.Вид, стрВид.КолНач, стрВид.КолКон);
		
		ДействияФормыСохранитьНаСайте(стрВид, Филиал.НазвАнгл);
		
	КонецЕсли;
	НомерЗакладки = стрВид.Номер + Переключатель1*( 1 + Филиал.Номер * 4 );
	
	Если ВыгрузитьДанные(Excel, НомерЗакладки , СтрокаВид)<0 тогда
		возврат; 
	КонецЕсли;
	
КонецЦикла;	
//=======================================================================================		
	//---------Сохраняем и Закрываем----------------------
	Попытка
		Excel.SaveAs(путь+ИмяФайла); //еще раз!
		Excel.Application.WorkBooks.Close(); //все листы!
		Excel=0;
		Сообщить(строка(ТекущаяДата())+" ---Все данные сохранены в файл: "+путь+ИмяФайла, СтатусСообщения.Информация);
	Исключение
		Excel.Application.WorkBooks.Close();
		Excel = 0;
		Сообщить(строка(ТекущаяДата())+" --- ошибка сохранения файла "+ИмяФайла+" : "+ ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;

  КонецЦикла; //по филиалам
КонецЦикла; //по Переключателю Клиенты/Менеджеры

сигнал(); 
Предупреждение("Обработка формирования прайсов по филиалам 
			   |Успешно Завершена "+строка(ТекущаяДата()), 10 );// 10 сек!
КонецПроцедуры

процедура ДействияФормыСформироватьТолькоПоВиду(Вид1)
	Если Вид1="Шины" тогда
		ДействияФормыСформироватьТолькоШины(неопределено);
	иначеЕсли Вид1="Диски" тогда
		ДействияФормыСформироватьТолькоДиски(неопределено);
	иначеЕсли Вид1="АКБ" тогда
		ДействияФормыСформироватьТолькоАКБ(неопределено);
	иначеЕсли Вид1="Аксессуары" тогда
		ДействияФормыСформироватьТолькоАксессуары(неопределено);
	КонецЕсли;
КонецПроцедуры

Процедура убратьКолБольше50( путь, СтрокаВид, КолНач, КолКон )
	
	Сообщить(строка(ТекущаяДата())+" >---> Обработка файла "+СтрокаВид+".mxl >--->");
	ТабДок = новый ТабличныйДокумент; //в невидимый табДок
	ТабДок.Прочитать(путь+СтрокаВид+".mxl");
		N = ТабДок.ВысотаТаблицы;
		для номСтр = 11 по N цикл
			ОбработкаПрерыванияПользователя();
			для номКол=КолНач по КолКон цикл
				числоТ = ТабДок.Область(номСтр, номКол,номСтр, номКол).Текст;
				Если числоТ<>"" тогда
					попытка
						число1 = число(числоТ);
						Если число1>50 тогда	
						ТабДок.Область(номСтр, номКол,номСтр, номКол).Текст = ">50";
						КонецЕсли;
					исключение
					КонецПопытки;	
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;	
	ТабДок.Записать(путь+СтрокаВид+".mxl",ТипФайлаТабличногоДокумента.MXL);
	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();
	ЭлементыФормы.ПолеТабличногоДокумента.Прочитать(путь+СтрокаВид+".mxl");
	Сообщить(строка(ТекущаяДата())+" <---< Прочитан измененный файл "+СтрокаВид+".mxl <---<");
	
КонецПроцедуры

//СписокФайловФТПдиски = неопределено;
врФТП = неопределено;
путь0 = "";