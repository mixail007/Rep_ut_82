
Процедура ДействияФормыДействие(Кнопка)
	
//Цены РРЦ для не шин...
запрос1 = новый Запрос;	
запрос1.текст = "Выбрать ПродажиОбороты.Номенклатура 
		|ИЗ
	    |РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, , Номенклатура.ВидТовара <> Значение(Перечисление.ВидыТоваров.Шины)
		| и ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &ИМ) КАК ПродажиОбороты";
запрос1.УстановитьПараметр("НачПериода", НачПериода);
запрос1.УстановитьПараметр("КонПериода", КонПериода);
запрос1.УстановитьПараметр("ИМ", справочники.НаправленияПродаж.НайтиПоКоду(16) );  //фикс.параметр!

состояние("Идет поиск товаров по продажам за выбранный период...");
табл1 = запрос1.Выполнить().Выгрузить();	

контрРРЦ = справочники.Контрагенты.НайтиПоКоду("11011");
СписТов  = табл1.ВыгрузитьКолонку("Номенклатура");
состояние("Идет поиск цен "+строка(контрРРЦ)+" для "+строка( СписТов.Количество() )+" товаров...");
ТабЦен = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(контрРРЦ, СписТов);

//=================Основной Запрос!========================
запрос = новый Запрос;
запрос.УстановитьПараметр("ТипЦенРРЦ", справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00025")); //МРИЦ
запрос.УстановитьПараметр("ИМ", справочники.НаправленияПродаж.НайтиПоКоду(16)); //КолесаТУТ

запрос.УстановитьПараметр("НачалоПериода",НачПериода);
запрос.УстановитьПараметр("КонецПериода", КонПериода);

запрос.УстановитьПараметр("ТабЦен", ТабЦен); // пред.цены!

запрос.Текст = "ВЫБРАТЬ
               |	ррц.Номенклатура,
               |	ррц.МинимальнаяЦена как Цена
               |ПОМЕСТИТЬ ВТ_РРЦ
               |ИЗ
               |	&ТабЦен КАК ррц
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ПродажиОбороты.Подразделение,
               |	ПродажиОбороты.ЗаказПокупателя,
               |	ПродажиОбороты.Номенклатура,
               |	ПродажиОбороты.КоличествоОборот КАК Количество,
               |	ПродажиОбороты.СтоимостьОборот КАК Сумма,
               |	ВЫБОР
               |		КОГДА ПродажиОбороты.КоличествоОборот = 0
               |			ТОГДА ПродажиОбороты.СтоимостьОборот
               |		ИНАЧЕ ВЫРАЗИТЬ(ПродажиОбороты.СтоимостьОборот / ПродажиОбороты.КоличествоОборот КАК ЧИСЛО(15, 2))
               |	КОНЕЦ КАК Цена,
               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ЦенаМРИЦ,
               |	ВЫБОР
               |		КОГДА ЕСТЬNULL(ПродажиСебестоимость.Количество, 0) = 0
               |			ТОГДА ЕСТЬNULL(ПродажиСебестоимость.Стоимость, 0)
               |		ИНАЧЕ ВЫРАЗИТЬ(ПродажиСебестоимость.Стоимость / ПродажиСебестоимость.Количество КАК ЧИСЛО(15, 2))
               |	КОНЕЦ КАК ЦенаСебестоимость,
               |	ВЫБОР
               |		КОГДА ПродажиОбороты.КоличествоОборот = 0
               |			ТОГДА ПродажиОбороты.СтоимостьОборот
               |		ИНАЧЕ ВЫРАЗИТЬ(ПродажиОбороты.СтоимостьОборот / ПродажиОбороты.КоличествоОборот КАК ЧИСЛО(15, 2))
               |	КОНЕЦ - ВЫБОР
               |		КОГДА ЕСТЬNULL(ПродажиСебестоимость.Количество, 0) = 0
               |			ТОГДА ЕСТЬNULL(ПродажиСебестоимость.Стоимость, 0)
               |		ИНАЧЕ ВЫРАЗИТЬ(ПродажиСебестоимость.Стоимость / ПродажиСебестоимость.Количество КАК ЧИСЛО(15, 2))
               |	КОНЕЦ КАК РазностьЦенаСебест,
               |	ВЫБОР
               |		КОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) = 0
               |			ТОГДА 0
               |		ИНАЧЕ ВЫБОР
               |				КОГДА ПродажиСебестоимость.Количество = 0
               |					ТОГДА ПродажиСебестоимость.Стоимость
               |				ИНАЧЕ ВЫРАЗИТЬ(ПродажиСебестоимость.Стоимость / ПродажиСебестоимость.Количество КАК ЧИСЛО(15, 2))
               |			КОНЕЦ - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
               |	КОНЕЦ КАК РазностьСебестМРИЦ
               |ИЗ
               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, , ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &ИМ) КАК ПродажиОбороты
               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
               |			ЦеныТов.Номенклатура КАК Номенклатура,
               |			ЦеныТов.Цена КАК Цена
               |		ИЗ
               |			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
               |					&КонецПериода,
               |					Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.Шины)
               |						И ТипЦен = &ТипЦенРРЦ) КАК ЦеныТов
               |		
               |		ОБЪЕДИНИТЬ ВСЕ
               |		
               |		ВЫБРАТЬ
               |			втРРЦ.Номенклатура,
               |			втРРЦ.Цена
               |		ИЗ
               |			ВТ_РРЦ КАК втРРЦ) КАК ЦеныНоменклатурыСрезПоследних
               |		ПО ПродажиОбороты.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
               |		ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимость.Номенклатура
               |			И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимость.ЗаказПокупателя
               |			И ПродажиОбороты.Подразделение = ПродажиСебестоимость.Подразделение";
ТабРРЦ = запрос.Выполнить().Выгрузить();

ВнешниеНаборыДанных = Новый Структура;
ВнешниеНаборыДанных.Вставить("ТабРРЦ",ТабРРЦ);

//====================изменение запроса================================================ 
состояние("Идет формирование запроса с учетом отборов для "+строка( ТабРРЦ.Количество() )+" товаров...");
 	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных"), ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//Вывод результата 
	ДокументРезультат=ЭлементыФормы.Результат;
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	//ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Состояние("Идёт вывод информации...");	
	ПроцессорВывода.НачатьВывод();
	
	ДанныеРасшифровки_1 = ДанныеРасшифровки;
	
	ТаблицаЗафиксирована = Ложь;
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();
		Если ЭлементРезультата= Неопределено Тогда
			Прервать;
		Иначе
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
			Если Не ТаблицаЗафиксирована
				И ЭлементРезультата.ЗначенияПараметров.Количество() >  0 Тогда
				
				ТаблицаЗафиксирована = Истина;
				ДокументРезультат.ФиксацияСверху = ДокументРезультат.ВысотаТаблицы - 1;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ПроцессорВывода.ЗакончитьВывод();
	
	Состояние("Идёт группировка...");	
	ЭлементыФормы.Результат.ПоказатьУровеньГруппировокСтрок(4);
	ЭлементыФормы.Результат.ПоказатьУровеньГруппировокСтрок(3);
	ЭлементыФормы.Результат.ПоказатьУровеньГруппировокСтрок(2);
	//ЭлементыФормы.Результат.ПоказатьУровеньГруппировокСтрок(1);
	//ЭлементыФормы.Результат.ПоказатьУровеньГруппировокСтрок(0);
	Состояние(" ");	
	

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	НачПериода = НачалоМесяца( ТекущаяДата() );
	КонПериода = КонецДня( ТекущаяДата() );
    
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
				
	КонецЕсли;
КонецПроцедуры

 