
Процедура КнопкаВыполнитьНажатие(Кнопка)
	ТабЗачет = Новый ТаблицаЗначений;
	Табзачет.Колонки.Добавить("Контрагент");
	ТабЗачет.Колонки.Добавить("Договор");
	ТабЗачет.Колонки.Добавить("Заказ");
	ТабЗачет.Колонки.Добавить("СуммаЗачета");
	ТабЗачет.Колонки.Добавить("СуммаЗатрат");
	
	
	Для каждого строкаКонтрагент из Дерево.Строки Цикл
		Если СтрокаКонтрагент.Суммазачета >0 Тогда
			Для каждого строкаЗаказ из СтрокаКонтрагент.Строки Цикл
				Если СтрокаЗаказ.СуммаЗачета > 0 Тогда
					Для каждого строкаРеализация из СтрокаЗаказ.Строки Цикл
						Если СтрокаРеализация.СуммаЗачета >0 тогда
							стр = ТабЗачет.Добавить();
						    стр.Контрагент = СтрокаКонтрагент.контрагент;
							Стр.Договор = СтрокаКонтрагент.договор;
							Стр.Заказ = СтрокаЗаказ.Заказ;
							//Если СтрокаРеализация.СуммаЗачета < СтрокаРеализация.СуммаОсн Тогда
								Стр.СуммаЗачета = СтрокаРеализация.СуммаЗачета;
							//Иначе
							//	Стр.СуммаЗачета = СтрокаРеализация.СуммаОсн;
							//конецЕсли;	
							Если СтрокаРеализация.СуммаДок=СтрокаРеализация.СуммаДолга Тогда  //берем все затраты полностью в первый зачет денег,даже. если оплата не полностью
							Стр.СуммаЗатрат = строкаРеализация.СуммаДоп;
							ИначеЕсли СтрокаРеализация.СуммаДок-строкаРеализация.СуммаДоп<СтрокаРеализация.СуммаДолга Тогда  // денег пришло в прошлый раз меньше чем затрат
							Стр.СуммаЗатрат = СтрокаРеализация.СуммаДолга-СтрокаРеализация.СуммаДок+строкаРеализация.СуммаДоп;
							иначе
							Стр.СуммаЗатрат = 0;
							Конецесли;
						конецЕсли;
					КонецЦикла;
				Конецесли;
			конеццикла;
		конецЕсли;
	КонецЦикла;
	ТабЗачет.Свернуть("Контрагент,Договор,Заказ","СуммаЗачета,СуммаЗатрат");
	предыдущийконтрагент="";
	
	Для каждого Стр Из ТабЗачет Цикл
		Если стр.контрагент <> предыдущийконтрагент Тогда
			Док = Документы.Взаимозачет.СоздатьДокумент();
			Док.Организация = Справочники.Организации.НайтиПоКоду("00001");
			Док.Дата = ТекущаяДата();
			Если   ЭлементыФормы.Организация.Значение = 0 Тогда // формула Авто
			Док.КонтрагентКредитор = справочники.Контрагенты.НайтиПоКоду("92705");
	    	иначеесли ЭлементыФормы.Организация.Значение = 1 Тогда //формула Авто плюс
			Док.КонтрагентКредитор = справочники.Контрагенты.НайтиПоКоду("92797");
		    иначеесли ЭлементыФормы.Организация.Значение = 2 Тогда  // шинтрейд
			Док.КонтрагентКредитор = справочники.Контрагенты.НайтиПоКоду("П001125");

	        иначе	
        		Сообщить("Не выбрана организация");
	    	возврат;   
	        конецЕсли;	
			Док.КонтрагентДебитор = стр.контрагент;
			Док.ОтражатьВУправленческомУчете = истина;
			Док.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ПроведениеВзаимозачета;
			Док.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
			Док.КурсДокумента = 1;
			Док.КратностьДокумента = 1;
		конецЕсли;	
			строкаДок = Док.СуммыДолга.Добавить();
			//долг контрагента
			СтрокаДок.ДоговорКонтрагента =  Стр.договор;
			СтрокаДок.Сделка = стр.заказ;
			СтрокаДок.Сумма = Стр.СуммаЗачета;
			СтрокаДок.СуммаУпр = СтрокаДок.Сумма;
			строкаДок.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская;
			//Долг организации
		//	строкаДок = Док.СуммыДолга.Добавить();
			//нераспределенные деньги
			строкаДок = Док.СуммыДолга.Добавить();
			Если   ЭлементыФормы.Организация.Значение = 0 Тогда // формула Авто
				СтрокаДок.ДоговорКонтрагента =  Справочники.ДоговорыКонтрагентов.НайтиПоКоду("F5492");
			иначеесли ЭлементыФормы.Организация.Значение = 1 Тогда //формула Авто плюс
				СтрокаДок.ДоговорКонтрагента =  Справочники.ДоговорыКонтрагентов.НайтиПоКоду("F5946");
			иначеесли ЭлементыФормы.Организация.Значение = 2 Тогда  // шинтрейд
				СтрокаДок.ДоговорКонтрагента =  Справочники.ДоговорыКонтрагентов.НайтиПоКоду("В0891");
			конецЕсли;	
			СтрокаДок.Сумма = Стр.СуммаЗачета-Стр.СуммаЗатрат;
			СтрокаДок.СуммаУпр = СтрокаДок.Сумма;
			строкаДок.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская;
			// на затраты
			Если  стр.СуммаЗатрат <> 0 тогда
			строкаДок = Док.СуммыДолга.Добавить();
			Если   ЭлементыФормы.Организация.Значение = 0 Тогда // формула Авто
				СтрокаДок.ДоговорКонтрагента =  Справочники.ДоговорыКонтрагентов.НайтиПоКоду("Б5893");
			иначеесли ЭлементыФормы.Организация.Значение = 1 Тогда //формула Авто плюс
				СтрокаДок.ДоговорКонтрагента =  Справочники.ДоговорыКонтрагентов.НайтиПоКоду("В3299");
			иначеесли ЭлементыФормы.Организация.Значение = 2 Тогда  // шинтрейд
				СтрокаДок.ДоговорКонтрагента =  Справочники.ДоговорыКонтрагентов.НайтиПоКоду("В1077");
			конецЕсли;	
			Если Стр.СуммаЗачета < Стр.СуммаЗатрат Тогда
			СтрокаДок.Сумма = Стр.СуммаЗачета;
			СтрокаДок.СуммаУпр = СтрокаДок.Сумма;
			иначе	
			СтрокаДок.Сумма = Стр.СуммаЗатрат;
			СтрокаДок.СуммаУпр = СтрокаДок.Сумма;
			конецЕсли;
			строкаДок.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская;
			конецЕсли;
			Док.записать();

			предыдущийконтрагент=стр.Контрагент;

	конецЦикла;	
	
	
	
конецПроцедуры	
Процедура ПриОткрытии()
	ЭлементыФормы.Организация.СписокВыбора.Очистить();
	ЭлементыФормы.Организация.СписокВыбора.Добавить(0,"ФормулаАвто");
	ЭлементыФормы.Организация.СписокВыбора.Добавить(1,"ФормулаАвтоПлюс");
	ЭлементыФормы.Организация.СписокВыбора.Добавить(2,"Шинтрейд Ярославль");
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры



Процедура ПодключитьсяНажатие(Элемент)
	UsrPwd = "Usr=""Робот (центр - номенклатура)"";Pwd=""09876""";
	Если   ЭлементыФормы.Организация.Значение = 0 Тогда
		Base  = "Srvr=""server:3041"";Ref=""v83ib_formulaAvto_bp""";
		v8connect = Новый COMОбъект("V83.ComConnector");
	иначеесли ЭлементыФормы.Организация.Значение = 1 Тогда
		Base  = "Srvr=""server:3041"";Ref=""v83ib_formulaavtoplus_bp""";
		v8connect = Новый COMОбъект("V83.ComConnector");
	иначеесли ЭлементыФормы.Организация.Значение = 2 Тогда
		Base  = "Srvr=""server:3041"";Ref=""v83ib_shintradeyar_bp""";
		v8connect = Новый COMОбъект("V83.ComConnector");
	иначе	
		Сообщить("Не выбрана организация");
		возврат;
	конецЕсли;	
	
	СтрокаСоединенияCOM = Base+";"+UsrPwd;
	Попытка
		Соединение = v8connect.Connect(СтрокаСоединенияCOM);
		#Если Клиент Тогда
			Сообщить(строка(ТекущаяДата())+" Успешно Установлено подключение к базе 1С V8:"+base, СтатусСообщения.Информация);
		#КонецЕсли
	Исключение
		#Если Клиент Тогда
			Сообщить("НЕТ подключения к базе 1С V8:"+base+" ! ", СтатусСообщения.Внимание);
		#КонецЕсли
		Возврат;
	КонецПопытки;
	
	списокОплат.Очистить();
	
	Запрос = Соединение.NewObject("Запрос");
	
	Запрос.Текст =  "      ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1.Наименование КАК Контрагент,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт2.Наименование КАК Договор,
	|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК Сумма,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ИНН КАК ИНН
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Запись, СчетДт = &сч51, , СчетКт.Родитель = &Сч62, , ) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
	//|	И ХозрасчетныйОборотыДтКт.СубконтоКт2 = ХозрасчетныйОборотыДтКт.СубконтоКт1.ОсновнойДоговорКонтрагента
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОборотыДтКт.СубконтоКт2.Наименование,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1.Наименование,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ИНН ";
	
	Запрос.УстановитьПараметр("НачПериода",НачПериода);	
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода)+1);	
	Запрос.УстановитьПараметр("сч51",соединение.планыСчетов.Хозрасчетный.РасчетныеСчета);	
	Запрос.УстановитьПараметр("сч62",соединение.ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	пока Выборка.следующий() Цикл
		стр = СписокОплат.Добавить();
		Стр.КонтрагентБУ = Выборка.Контрагент;
		стр.ДоговорБУ = Выборка.Договор;
		стр.ИННБУ = Выборка.Инн;
		Стр.СуммаПоступления = Выборка.Сумма;
		Стр.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН",Выборка.Инн);
		Если Стр.Контрагент <> Справочники.Контрагенты.ПустаяСсылка() Тогда
			Если   ЭлементыФормы.Организация.Значение = 0 Тогда  //формула авто
				стр.договор = Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("ТипДоговора",справочники.ТипыДоговоров.НайтиПоКоду("Я0004"),,стр.Контрагент);
			иначеЕсли ЭлементыФормы.Организация.Значение = 1 Тогда // формула авто плюс
				стр.договор = Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("ТипДоговора",справочники.ТипыДоговоров.ФормулаАвтоПлюс,,стр.Контрагент);
			иначе //шинтрейд
				стр.договор = Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("ТипДоговора",справочники.ТипыДоговоров.ШинтрейдЯрославль,,стр.Контрагент);
			конецЕсли;	
		КонецЕсли; 
	конецЦикла;	
КонецПроцедуры


Процедура РаспределитьНажатие(Элемент)
	списокДог = Новый СписокЗначений();
	
	Для каждого стр из СписокОплат Цикл
		Если стр.Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
			Сообщить("В строке № "+стр.НомерСтроки+" Контрагент не заполнен. Сумма не будет распределена");
		Иначе
			СписокДог.Добавить(стр.договор);
		конецЕсли;
	КонецЦикла;	
	Дерево.Строки.Очистить();
	Запрос = Новый Запрос;
Если ЭлементыФормы.Организация.Значение = 2 Тогда	
	Запрос.Текст = "ВЫБРАТЬ
|	ИнформацияПоПроезду.Задание,
|	СУММА(ИнформацияПоПроезду.ДоставкаНал + ИнформацияПоПроезду.ДоставкаВЦене + ИнформацияПоПроезду.ДоставкаБНал) КАК Транспортные,
|	ИнформацияПоПроезду.Заказ
|ПОМЕСТИТЬ ТранспортныеПоОстаткам
|ИЗ
|	РегистрСведений.ИнформацияПоПроезду КАК ИнформацияПоПроезду
|ГДЕ
|	ИнформацияПоПроезду.Заказ В
|			(ВЫБРАТЬ
|				ВзаиморасчетыСКонтрагентамиОстатки.Сделка
|			ИЗ
|				РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Период, ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОстатки)
|
|СГРУППИРОВАТЬ ПО
|	ИнформацияПоПроезду.Заказ,
|	ИнформацияПоПроезду.Задание
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация,
|	ТранспортныеПоЗаказамИЗаданиям.Заказ,
|	ТранспортныеПоЗаказамИЗаданиям.Транспортные
|ПОМЕСТИТЬ ТранспортныеПоРеализациям
|ИЗ
|	ТранспортныеПоОстаткам КАК ТранспортныеПоЗаказамИЗаданиям
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК ЗаданиеНаОтгрузкуЗаказыПокупателей
|		ПО ТранспортныеПоЗаказамИЗаданиям.Задание = ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка
|			И ТранспортныеПоЗаказамИЗаданиям.Заказ = ЗаданиеНаОтгрузкуЗаказыПокупателей.ЗаказПокупателя
|
|СГРУППИРОВАТЬ ПО
|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация,
|	ТранспортныеПоЗаказамИЗаданиям.Заказ,
|	ТранспортныеПоЗаказамИЗаданиям.Транспортные
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	СУММА(ВЫБОР
|			КОГДА ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.КорректировкаРеализации
|				ТОГДА ВЫРАЗИТЬ((КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения) * &kN КАК ЧИСЛО(15, 0))
|			КОГДА ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
|				ТОГДА ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.Сумма * &kN КАК ЧИСЛО(15, 0))
|			ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Цена * &сНДС * &kN * (1 - (ЕСТЬNULL(ТранспортныеПоРеализациям.Транспортные, 0) + РеализацияТоваровУслугТовары.Ссылка.Сделка.СуммаДопРасходовЭкспорт) / РеализацияТоваровУслугТовары.Ссылка.СуммаДокумента) КАК ЧИСЛО(15, 0))) * РеализацияТоваровУслугТовары.Количество / &сНДС КАК ЧИСЛО(15, 0))
|		КОНЕЦ) КАК СуммаПослеПерерасчета,
|	ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход,
|	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор,
|	ВзаиморасчетыСКонтрагентамиОбороты.Сделка,
|	ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента
|ПОМЕСТИТЬ ПоРеализациям
|ИЗ
|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
|			,
|			,
|			Регистратор,
|			Сделка В
|					(ВЫБРАТЬ
|						ВзаиморасчетыСКонтрагентамиОстатки.Сделка
|					ИЗ
|						РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Период, ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОстатки)
|				И ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОбороты
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
|		ПО ВзаиморасчетыСКонтрагентамиОбороты.Регистратор = РеализацияТоваровУслугТовары.Ссылка
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
|		ПО ВзаиморасчетыСКонтрагентамиОбороты.Регистратор = КорректировкаРеализацииТовары.Ссылка
|		ЛЕВОЕ СОЕДИНЕНИЕ ТранспортныеПоРеализациям КАК ТранспортныеПоРеализациям
|		ПО ВзаиморасчетыСКонтрагентамиОбороты.Регистратор = ТранспортныеПоРеализациям.Реализация
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
|		ПО ВзаиморасчетыСКонтрагентамиОбороты.Регистратор = ВозвратТоваровОтПокупателяТовары.Ссылка
|
|СГРУППИРОВАТЬ ПО
|	ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход,
|	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор,
|	ВзаиморасчетыСКонтрагентамиОбороты.Сделка,
|	ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
|	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток) КАК СуммаУпрОстаток
|ПОМЕСТИТЬ ОстаткиПоКонтрагентам
|ИЗ
|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&период, ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОстатки
|
|СГРУППИРОВАТЬ ПО
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПоРеализациям.Регистратор КАК реализация,
|	ПоРеализациям.Сделка КАК заказ,
|	ПоРеализациям.СуммаУпрПриход КАК СуммаДок,
|	ПоРеализациям.СуммаПослеПерерасчета КАК СуммаОсн,
|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаДолга,
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК Договор,
|	ПоРеализациям.СуммаУпрПриход - ПоРеализациям.СуммаПослеПерерасчета КАК СуммаДоп,
|	ОстаткиПоКонтрагентам.СуммаУпрОстаток КАК СуммаДолгаКонтрагент
|ИЗ
|	ПоРеализациям КАК ПоРеализациям
|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоКонтрагентам КАК ОстаткиПоКонтрагентам
|		ПО ПоРеализациям.ДоговорКонтрагента = ОстаткиПоКонтрагентам.ДоговорКонтрагента
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&период, ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОстатки
|		ПО ПоРеализациям.Сделка = ВзаиморасчетыСКонтрагентамиОстатки.Сделка
|
|УПОРЯДОЧИТЬ ПО
|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты,
|	ПоРеализациям.Регистратор.Дата
|ИТОГИ
|	СУММА(СуммаДок),
|	СУММА(СуммаОсн),
|	СРЕДНЕЕ(СуммаДолга),
|	СУММА(СуммаДоп),
|	СРЕДНЕЕ(СуммаДолгаКонтрагент)
|ПО
|	Договор,
|	заказ";
иначе
Запрос.Текст = 
"ВЫБРАТЬ
|	ИнформацияПоПроезду.Задание,
|	СУММА(ИнформацияПоПроезду.ДоставкаНал + ИнформацияПоПроезду.ДоставкаВЦене + ИнформацияПоПроезду.ДоставкаБНал) КАК Транспортные,
|	ИнформацияПоПроезду.Заказ
|ПОМЕСТИТЬ ТранспортныеПоОстаткам
|ИЗ
|	РегистрСведений.ИнформацияПоПроезду КАК ИнформацияПоПроезду
|ГДЕ
|	ИнформацияПоПроезду.Заказ В
|			(ВЫБРАТЬ
|				ВзаиморасчетыСКонтрагентамиОстатки.Сделка
|			ИЗ
|				РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Период, ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОстатки)
|
|СГРУППИРОВАТЬ ПО
|	ИнформацияПоПроезду.Заказ,
|	ИнформацияПоПроезду.Задание
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация,
|	ТранспортныеПоЗаказамИЗаданиям.Заказ,
|	ТранспортныеПоЗаказамИЗаданиям.Транспортные
|ПОМЕСТИТЬ ТранспортныеПоРеализациям
|ИЗ
|	ТранспортныеПоОстаткам КАК ТранспортныеПоЗаказамИЗаданиям
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК ЗаданиеНаОтгрузкуЗаказыПокупателей
|		ПО ТранспортныеПоЗаказамИЗаданиям.Задание = ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка
|			И ТранспортныеПоЗаказамИЗаданиям.Заказ = ЗаданиеНаОтгрузкуЗаказыПокупателей.ЗаказПокупателя
|
|СГРУППИРОВАТЬ ПО
|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация,
|	ТранспортныеПоЗаказамИЗаданиям.Заказ,
|	ТранспортныеПоЗаказамИЗаданиям.Транспортные
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	СУММА(ВЫБОР
|			КОГДА ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.КорректировкаРеализации
|				ТОГДА ВЫРАЗИТЬ((КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения) * &kN КАК ЧИСЛО(15, 0))
|			КОГДА ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
|				ТОГДА ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.Сумма * &kN КАК ЧИСЛО(15, 0))
|			ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Цена * &kN КАК ЧИСЛО(15, 0))) * РеализацияТоваровУслугТовары.Количество * (1 - ЕСТЬNULL(ТранспортныеПоРеализациям.Транспортные, 0) / (ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Ссылка.СуммаДокумента КАК ЧИСЛО(15, 0)))) КАК ЧИСЛО(15, 0))
|		КОНЕЦ) КАК СуммаПослеПерерасчета,
|	ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход,
|	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор,
|	ВзаиморасчетыСКонтрагентамиОбороты.Сделка,
|	ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента
|ПОМЕСТИТЬ ПоРеализациям
|ИЗ
|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
|			,
|			,
|			Регистратор,
|			Сделка В
|					(ВЫБРАТЬ
|						ВзаиморасчетыСКонтрагентамиОстатки.Сделка
|					ИЗ
|						РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Период, ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОстатки)
|				И ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОбороты
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
|		ПО ВзаиморасчетыСКонтрагентамиОбороты.Регистратор = РеализацияТоваровУслугТовары.Ссылка
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
|		ПО ВзаиморасчетыСКонтрагентамиОбороты.Регистратор = КорректировкаРеализацииТовары.Ссылка
|		ЛЕВОЕ СОЕДИНЕНИЕ ТранспортныеПоРеализациям КАК ТранспортныеПоРеализациям
|		ПО ВзаиморасчетыСКонтрагентамиОбороты.Регистратор = ТранспортныеПоРеализациям.Реализация
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
|		ПО ВзаиморасчетыСКонтрагентамиОбороты.Регистратор = ВозвратТоваровОтПокупателяТовары.Ссылка
|
|СГРУППИРОВАТЬ ПО
|	ВзаиморасчетыСКонтрагентамиОбороты.СуммаУпрПриход,
|	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор,
|	ВзаиморасчетыСКонтрагентамиОбороты.Сделка,
|	ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
|	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток) КАК СуммаУпрОстаток
|ПОМЕСТИТЬ ОстаткиПоКонтрагентам
|ИЗ
|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&период, ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОстатки
|
|СГРУППИРОВАТЬ ПО
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПоРеализациям.Регистратор КАК реализация,
|	ПоРеализациям.Сделка КАК заказ,
|	ПоРеализациям.СуммаУпрПриход КАК СуммаДок,
|	ПоРеализациям.СуммаПослеПерерасчета КАК СуммаОсн,
|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаДолга,
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК Договор,
|	ПоРеализациям.СуммаУпрПриход - ПоРеализациям.СуммаПослеПерерасчета КАК СуммаДоп,
|	ОстаткиПоКонтрагентам.СуммаУпрОстаток КАК СуммаДолгаКонтрагент
|ИЗ
|	ПоРеализациям КАК ПоРеализациям
|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоКонтрагентам КАК ОстаткиПоКонтрагентам
|		ПО ПоРеализациям.ДоговорКонтрагента = ОстаткиПоКонтрагентам.ДоговорКонтрагента
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&период, ДоговорКонтрагента В (&Договор)) КАК ВзаиморасчетыСКонтрагентамиОстатки
|		ПО ПоРеализациям.Сделка = ВзаиморасчетыСКонтрагентамиОстатки.Сделка
|
|УПОРЯДОЧИТЬ ПО
|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты,
|	ПоРеализациям.Регистратор.Дата
|ИТОГИ
|	СУММА(СуммаДок),
|	СУММА(СуммаОсн),
|	СРЕДНЕЕ(СуммаДолга),
|	СУММА(СуммаДоп),
|	СРЕДНЕЕ(СуммаДолгаКонтрагент)
|ПО
|	Договор,
|	заказ";
конецЕсли;	
	
	Запрос.УстановитьПараметр("Договор", СписокДог);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	N = 0.5; // 0,5% ???
	Запрос.УстановитьПараметр("kN", (1 - N/100) ); // сразу считаем, а не в запросе!
	
	СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); //28.12.2018
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );	
	сНДС = 1 + чНДС/100;
    Запрос.УстановитьПараметр("сНДС", сНДС);
	   
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДоговорКонтрагента = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДоговорКонтрагента.Следующий() Цикл
		Если   ВыборкаДоговорКонтрагента.СуммаДолгаКонтрагент < 0 Тогда
			КонтрагентСтр = Дерево.Строки.Добавить();
			КонтрагентСтр.Контрагент = ВыборкаДоговорКонтрагента.Договор.Владелец;
			КонтрагентСтр.Договор = ВыборкаДоговорКонтрагента.Договор;
			КонтрагентСтр.СуммаДок = ВыборкаДоговорКонтрагента.СуммаДок;
			КонтрагентСтр.СуммаОсн = ВыборкаДоговорКонтрагента.СуммаОсн;
			КонтрагентСтр.СуммаДоп = ВыборкаДоговорКонтрагента.СуммаДоп;
			КонтрагентСтр.СуммаДолга = ВыборкаДоговорКонтрагента.СуммаДолгаКонтрагент;
			Продолжить;
		иначе	
			КонтрагентСтр = Дерево.Строки.Добавить();
			КонтрагентСтр.Контрагент = ВыборкаДоговорКонтрагента.Договор.Владелец;
			КонтрагентСтр.Договор = ВыборкаДоговорКонтрагента.Договор;
			КонтрагентСтр.СуммаДок = ВыборкаДоговорКонтрагента.СуммаДок;
			КонтрагентСтр.СуммаОсн = ВыборкаДоговорКонтрагента.СуммаОсн;
			КонтрагентСтр.СуммаДоп = ВыборкаДоговорКонтрагента.СуммаДоп;
			КонтрагентСтр.СуммаДолга = ВыборкаДоговорКонтрагента.СуммаДолгаКонтрагент;
			// найдем сумму оплаты по этому контрагенту и договору
			Отбор = Новый структура;
			Отбор.Вставить("Контрагент",ВыборкаДоговорКонтрагента.Договор.Владелец);
			Отбор.Вставить("Договор",ВыборкаДоговорКонтрагента.Договор);
			нашли = СписокОплат.НайтиСтроки(Отбор);
			СуммаПоступилоВсего = Нашли[0].СуммаПоступления; 
			КонтрагентСтр.СуммаЗачета =СуммаПоступилоВсего;
			
			
			ВыборкаЗаказ = ВыборкаДоговорКонтрагента.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаЗаказ.Следующий() Цикл
				ЗаказСтр = КонтрагентСтр.Строки.Добавить();
				ЗаказСтр.Заказ = ВыборкаЗаказ.Заказ;
				ЗаказСтр.СуммаДок = ВыборкаЗаказ.СуммаДок;
				ЗаказСтр.СуммаОсн = ВыборкаЗаказ.СуммаОсн;
				ЗаказСтр.СуммаДоп = ВыборкаЗаказ.СуммаДоп;
				ЗаказСтр.СуммаДолга = ВыборкаЗаказ.СуммаДолга;
				
				Если СуммаПоступилоВсего<= ВыборкаЗаказ.СуммаДолга тогда
					//вся оплата пойдет на этот заказ
					СуммаНаЗаказ = СуммаПоступилоВсего;
					СуммаПоступилоВсего = 0;
				Иначе
					//останется на следующий заказ
					СуммаНаЗаказ = ВыборкаЗаказ.СуммаДолга;
					СуммаПоступилоВсего = СуммаПоступилоВсего-ВыборкаЗаказ.СуммаДолга;
				конецЕсли;
				ЗаказСтр.СуммаЗачета = СуммаНаЗаказ;
				
				ТекСуммаЗаказа = ВыборкаЗаказ.СуммаДок;
				ТекСуммаДолга=ВыборкаЗаказ.СуммаДолга;
				СуммаОплачено = ТекСуммаЗаказа- ТекСуммаДолга;
				// считаем, что реализации закрываются по датам.
				ВыборкаДетальныеЗаписи = ВыборкаЗаказ.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					РеализацияСтр = ЗаказСтр.Строки.Добавить();
					РеализацияСтр.Реализация = ВыборкаДетальныеЗаписи.реализация;
					РеализацияСтр.СуммаДок = ВыборкаДетальныеЗаписи.СуммаДок;
					РеализацияСтр.СуммаОсн = ВыборкаДетальныеЗаписи.СуммаОсн;
					РеализацияСтр.СуммаДоп = ВыборкаДетальныеЗаписи.СуммаДоп;
					Если  ВыборкаДетальныеЗаписи.СуммаДок < СуммаОплачено тогда
						//полностью оплачено
						РеализацияСтр.цвет = "синий";
						СуммаОплачено=СуммаОплачено-ВыборкаДетальныеЗаписи.СуммаДок;
					иначеесли СуммаОплачено > 0 тогда
						//частично оплаченно
						РеализацияСтр.цвет = "коричневый";
						//при частичной оплате сумму по договору затрат проводим полностью при первом взаимозачете
						РеализацияСтр.СуммаДолга = ВыборкаДетальныеЗаписи.СуммаДок-СуммаОплачено;
						СуммаОплачено=0;
						Если СуммаНаЗаказ<=РеализацияСтр.СуммаДолга  тогда
							//все на этот документ
							РеализацияСтр.СуммаЗачета = СуммаНаЗаказ;
							СуммаНаЗаказ=0;
						иначе
							//хватит на следующий документ
							РеализацияСтр.СуммаЗачета = РеализацияСтр.СуммаДолга;
							СуммаНаЗаказ=СуммаНаЗаказ-РеализацияСтр.СуммаДолга;
						конецЕсли;
						
					иначе
						// вообще не оплачено
						РеализацияСтр.цвет = "красный";
						РеализацияСтр.СуммаДолга = ВыборкаДетальныеЗаписи.СуммаДок;
						
						Если СуммаНаЗаказ<=ВыборкаДетальныеЗаписи.СуммаДок тогда
							//все на этот документ
							РеализацияСтр.СуммаЗачета = СуммаНаЗаказ;
							СуммаНаЗаказ=0;
						иначе
							//хватит на следующий документ
							РеализацияСтр.СуммаЗачета = ВыборкаДетальныеЗаписи.СуммаДок;
							СуммаНаЗаказ=СуммаНаЗаказ-ВыборкаДетальныеЗаписи.СуммаДок;
						конецЕсли;
						
					конецЕсли;
					
					
				КонецЦикла;
			КонецЦикла;
		кОнецЕсли;	
		
	КонецЦикла;
	
	
	
КонецПроцедуры


Процедура ДеревоПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Цвет = "красный"   тогда
		ОформлениеСтроки.ЦветТекста = webцвета.Красный;
	иначеЕсли ДанныеСтроки.Цвет = "синий"   тогда
		ОформлениеСтроки.ЦветТекста = webцвета.Синий;
	иначеЕсли ДанныеСтроки.Цвет = "коричневый"   тогда
		ОформлениеСтроки.ЦветТекста = webцвета.Зеленый;
    конецЕсли;
	КонецПроцедуры

