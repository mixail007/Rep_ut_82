Перем мДатаРасчета;
Перем мДнейВПериоде;
Перем мДнейРасчета;

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок, ДатаКон, ДатаНач, Свойство, Сценарий);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок, ДатаКон, ДатаНач, Свойство, Сценарий) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Значение КАК Значение,
	|	ВложенныйЗапрос.КоличествоФакт КАК КоличествоФакт,
	|	ВложенныйЗапрос.СтоимостьФакт КАК СтоимостьФакт,
	|	ВложенныйЗапрос.ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|	ВложенныйЗапрос.КоличествоПлан КАК КоличествоПлан,
	|	ВложенныйЗапрос.СтоимостьПлан КАК СтоимостьПлан,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.КоличествоОборот КАК КоличествоОборот,
	|	ВложенныйЗапрос.СтоимостьОборот КАК СтоимостьОборот,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.КоличествоФакт / ВложенныйЗапрос.КоличествоПлан * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВложенныйЗапрос.Номенклатура, 0) = 0
	|					ТОГДА 100
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ПроцентВыполненияКоличество,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.СтоимостьПлан <> 0
	|			ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.СтоимостьФакт / ВложенныйЗапрос.СтоимостьПлан * 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВложенныйЗапрос.Номенклатура, 0) = 0
	|					ТОГДА 100
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ПроцентВыполненияСтоимость,
	|	ВЫРАЗИТЬ((ВложенныйЗапрос.КоличествоФакт - ВложенныйЗапрос.КоличествоПлан / &ДнейВПериоде * &ДнейРасчета) / (ВложенныйЗапрос.КоличествоПлан / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2)) КАК ОтстованиеПоКоличеству,
	|	ВЫРАЗИТЬ((ВложенныйЗапрос.СтоимостьФакт - ВложенныйЗапрос.СтоимостьПлан / &ДнейВПериоде * &ДнейРасчета) / (ВложенныйЗапрос.СтоимостьПлан / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2)) КАК ОтстованиеПоСумме
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЗ.Значение КАК Значение,
	|		СУММА(ВЗ.КоличествоФакт) КАК КоличествоФакт,
	|		СУММА(ВЗ.СтоимостьФакт) КАК СтоимостьФакт,
	|		ВЗ.ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|		СУММА(ВЗ.КоличествоПлан) КАК КоличествоПлан,
	|		СУММА(ВЗ.СтоимостьПлан) КАК СтоимостьПлан,
	|		ВЗ.Номенклатура КАК Номенклатура,
	|		СУММА(ВЗ.КоличествоОборот) КАК КоличествоОборот,
	|		СУММА(ВЗ.СтоимостьОборот) КАК СтоимостьОборот
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЗначенияСвойствОбъектов.Значение КАК Значение,
	|			СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоФакт,
	|			СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьФакт,
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|			NULL КАК КоличествоПлан,
	|			NULL КАК СтоимостьПлан,
	|			NULL КАК Номенклатура,
	|			NULL КАК КоличествоОборот,
	|			NULL КАК СтоимостьОборот
	|		ИЗ
	|			РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , ) КАК ПродажиОбороты
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|				ПО ПродажиОбороты.Номенклатура = ЗначенияСвойствОбъектов.Объект
	|		ГДЕ
	|			ЗначенияСвойствОбъектов.Свойство = &Свойство
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗначенияСвойствОбъектов.Значение,
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПланыПродажОбороты.ЗначениеСвойства,
	|			NULL,
	|			NULL,
	|			ПланыПродажОбороты.Менеджер,
	|			СУММА(ПланыПродажОбороты.КоличествоОборот),
	|			СУММА(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот),
	|			NULL,
	|			NULL,
	|			NULL
	|		ИЗ
	|			РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач, &ДатаКон, , ) КАК ПланыПродажОбороты
	|		ГДЕ
	|			ПланыПродажОбороты.Номенклатура = &Свойство
	|			И ПланыПродажОбороты.Сценарий = &Сценарий
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПланыПродажОбороты.Менеджер,
	|			ПланыПродажОбороты.ЗначениеСвойства
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ЗначенияСвойствОбъектов.Значение,
	|			NULL,
	|			NULL,
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			NULL,
	|			NULL,
	|			ПродажиОбороты.Номенклатура,
	|			СУММА(ПродажиОбороты.КоличествоОборот),
	|			СУММА(ПродажиОбороты.СтоимостьОборот)
	|		ИЗ
	|			РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , ) КАК ПродажиОбороты
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|				ПО ПродажиОбороты.Номенклатура = ЗначенияСвойствОбъектов.Объект
	|		ГДЕ
	|			ЗначенияСвойствОбъектов.Свойство = &Свойство
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗначенияСвойствОбъектов.Значение,
	|			ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|			ПродажиОбороты.Номенклатура) КАК ВЗ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЗ.ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|		ВЗ.Значение,
	|		ВЗ.Номенклатура) КАК ВложенныйЗапрос
	|ИТОГИ
	|	СУММА(КоличествоФакт),
	|	СУММА(СтоимостьФакт),
	|	СУММА(КоличествоПлан),
	|	СУММА(СтоимостьПлан),
	|	СУММА(КоличествоОборот),
	|	СУММА(СтоимостьОборот),
	|	ВЫРАЗИТЬ(СУММА(КоличествоФакт) / СУММА(КоличествоПлан) * 100 КАК ЧИСЛО(15, 2)) КАК ПроцентВыполненияКоличество,
	|	ВЫРАЗИТЬ(СУММА(СтоимостьФакт) / СУММА(СтоимостьПлан) * 100 КАК ЧИСЛО(15, 2)) КАК ПроцентВыполненияСтоимость,
	|	ВЫРАЗИТЬ((СУММА(КоличествоФакт) - СУММА(КоличествоПлан) / &ДнейВПериоде * &ДнейРасчета) / (СУММА(КоличествоПлан) / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2)) КАК ОтстованиеПоКоличеству,
	|	ВЫРАЗИТЬ((СУММА(СтоимостьФакт) - СУММА(СтоимостьПлан) / &ДнейВПериоде * &ДнейРасчета) / (СУММА(СтоимостьПлан) / &ДнейВПериоде * &ДнейРасчета) * 100 КАК ЧИСЛО(15, 2)) КАК ОтстованиеПоСумме
	|ПО
	|	ОБЩИЕ,
	|	Значение,
	|	ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя,
	|	Номенклатура";

	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("Свойство", Свойство);
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	
	ЗапросПоОстаткам = Новый Запрос;
	ЗапросПоОстаткам.Текст =
	"ВЫБРАТЬ
	|	ЗапросОстатковПартийПоСвойствам.Значение,
	|	ЕСТЬNULL(ЗапросОстатковПартийПоСвойствам.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ЗапросОстатковПартийПоСвойствам.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
	|	ЕСТЬNULL(ЗапросПоЗакупкам.КоличествоОборот, 0) КАК ЗакупкиКоличествоФакт,
	|	ЕСТЬNULL(ЗапросПоЗакупкам.СтоимостьОборот, 0) КАК ЗакупкиСтоимостьФакт,
	|	ЕСТЬNULL(ПланыЗакупокОбороты.КоличествоОборот, 0) КАК ЗакупкиКоличествоПлан,
	|	ЕСТЬNULL(ПланыЗакупокОбороты.СтоимостьОборот + ПланыЗакупокОбороты.НДСОборот, 0) КАК ЗакупкиСтоимостьПлан
	|ИЗ
	|	РегистрНакопления.ПланыЗакупок.Обороты(&ДатаНач, &ДатаКон, , Сценарий = &Сценарий) КАК ПланыЗакупокОбороты
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ЗначенияСвойствОбъектов.Значение,
	|	СУММА(Остатки.КоличествоОстаток) КоличествоОстаток,
	|	СУММА(Остатки.СтоимостьОстаток) СтоимостьОстаток ИЗ
	|	(ВЫБРАТЬ ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток,
	|	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток
	|	ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаКон,НЕ Склад.ЗапретитьИспользование ) КАК ТоварыНаСкладахОстатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаКон,НЕ Склад.ЗапретитьИспользование ) КАК ПартииТоваровНаСкладахОстатки
	|	ПО ТоварыНаСкладахОстатки.Номенклатура=ПартииТоваровНаСкладахОстатки.Номенклатура) Остатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ Объект,Значение ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов 
	|	ГДЕ Свойство=&Свойство) КАК ЗначенияСвойствОбъектов
	|	ПО  Остатки.Номенклатура=ЗначенияСвойствОбъектов.Объект
	|	СГРУППИРОВАТЬ ПО ЗначенияСвойствОбъектов.Значение
	|) КАК ЗапросОстатковПартийПоСвойствам
	|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СУММА(ЗакупкиОбороты.КоличествоОборот) КАК КоличествоОборот,
	|				СУММА(ЗакупкиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	|				ЗначенияСвойствОбъектов.Значение КАК Значение
	|			ИЗ
	|				РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, , ) КАК ЗакупкиОбороты
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|					ПО ЗакупкиОбороты.Номенклатура = ЗначенияСвойствОбъектов.Объект
	|			ГДЕ
	|				ЗначенияСвойствОбъектов.Свойство = &Свойство
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ЗначенияСвойствОбъектов.Значение) КАК ЗапросПоЗакупкам
	|			ПО ЗапросОстатковПартийПоСвойствам.Значение = ЗапросПоЗакупкам.Значение
	|		ПО ПланыЗакупокОбороты.ЗначениеСвойства = ЗапросОстатковПартийПоСвойствам.Значение";
	
	ЗапросПоОстаткам.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	ЗапросПоОстаткам.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	ЗапросПоОстаткам.УстановитьПараметр("Свойство", Свойство);
	ЗапросПоОстаткам.УстановитьПараметр("Сценарий", Сценарий);
	
	Если ЗначениеНеЗаполнено(мДнейВПериоде)
		ИЛИ ЗначениеНеЗаполнено(мДнейРасчета) Тогда
	
		Предупреждение("Необходимо установить период постраения отчета!", 5);
		Возврат;
		
	Иначе
		
		Запрос.УстановитьПараметр("ДнейВПериоде", мДнейВПериоде);
	    Запрос.УстановитьПараметр("ДнейРасчета", мДнейРасчета);
		
	КонецЕсли; 
	
	ТаблицаОстатков = ЗапросПоОстаткам.Выполнить().Выгрузить();

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ВыводимыеЯчейки = Новый СписокЗначений;
	ВыводимыеЯчейки.Очистить();	
	
	Если ВыводитьДанныеПоКоличеству Тогда
		
		ВыводимыеЯчейки.Добавить("КоличествоОстаток", "КоличествоОстаток");
		ВыводимыеЯчейки.Добавить("ЗакупкиКоличествоПлан", "ЗакупкиКоличествоПлан");
		ВыводимыеЯчейки.Добавить("ПродажаПланКоличество", "КоличествоПлан");
		ВыводимыеЯчейки.Добавить("ПродажаФактКоличество", "КоличествоФакт");
		
		Если ВыводитьПроцентОтставания Тогда
			
			ВыводимыеЯчейки.Добавить("ПроцентОтстованияКоличество", "ОтстованиеПоКоличеству");
			
		КонецЕсли;

		ВыводимыеЯчейки.Добавить("ЗакупкиКоличествоФакт", "ЗакупкиКоличествоФакт");
		
		ВыводимыеЯчейки.Добавить("ДействиеПоКоличеству", "ДействиеПоКоличеству");
		
		Если ВыводитьПроцентВыполнения Тогда
			
			ВыводимыеЯчейки.Добавить("ПроцентВыполненияКоличество", "ПроцентВыполненияКоличество");
			
		КонецЕсли;
				
	КонецЕсли; 
	
	Если ВыводитьДанныеПоСуммам Тогда
		
		ВыводимыеЯчейки.Добавить("СуммаОстаток", "СтоимостьОстаток");
        ВыводимыеЯчейки.Добавить("ЗакупкиСтоимостьПлан", "ЗакупкиСтоимостьПлан");
		ВыводимыеЯчейки.Добавить("ПродажаПланСтоимость", "СтоимостьПлан");
		ВыводимыеЯчейки.Добавить("ПродажаФактСтоимость", "СтоимостьФакт");
		
		Если ВыводитьПроцентОтставания Тогда
			
			ВыводимыеЯчейки.Добавить("ПроцентОтстованияСтоимость", "ОтстованиеПоСумме");
			
		КонецЕсли;
		
		ВыводимыеЯчейки.Добавить("ЗакупкиСтоимостьФакт", "ЗакупкиСтоимостьФакт");
		
		ВыводимыеЯчейки.Добавить("ДействиеПоСтоимости", "ДействиеПоСтоимости");
		
		Если ВыводитьПроцентВыполнения Тогда
			
			ВыводимыеЯчейки.Добавить("ПроцентВыполненияСтоимость", "ПроцентВыполненияСтоимость");
			
		КонецЕсли;
		
	КонецЕсли;	
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы|ОсновнойСтолбец");
	
	
	//ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги|ОсновнойСтолбец");
	ОбластьЗначение = Макет.ПолучитьОбласть("Значение|ОсновнойСтолбец");
	ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя = Макет.ПолучитьОбласть("ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя|ОсновнойСтолбец");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура|ОсновнойСтолбец");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
		
		ОбластьВывода = Макет.ПолучитьОбласть("ШапкаТаблицы|" + СтрокаЯчеек.Значение);
		//ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаОбщийИтог[СтрокаЯчеек.Представление];
		ТабДок.Присоединить(ОбластьВывода);	
		
	КонецЦикла; 

	//ТабДок = Новый ТабличныйДокумент;
	ТабДок.ФиксацияСверху = ТабДок.ВысотаТаблицы;
	
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	
	ОбщийИтогКоличествоОстаток = 0;
	ОбщийИтогЗакупкиКоличествоПлан = 0;
	ОбщийИтогЗакупкиКоличествоФакт = 0;
	ОбщийИтогСтоимостьОстаток = 0;
	ОбщийИтогЗакупкиСтоимостьПлан = 0;
	ОбщийИтогЗакупкиСтоимостьФакт = 0;
	ОбщийИтогДействиеПоКоличеству = 0;
	ОбщийИтогДействиеПоСтоимости = 0;

	ВыборкаЗначение = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаЗначение.Следующий() Цикл
		
		ОбластьЗначение.Параметры.Заполнить(ВыборкаЗначение);
		Если ТипЗнч(ВыборкаЗначение.Значение)=Тип("СправочникСсылка.ЗначенияСвойствОбъектов")		Тогда
			   МенеджерНаправления=ПолучитьМенеджераНаправления(ВыборкаЗначение.Значение);
			   Если не ЗначениеНеЗаполнено(МенеджерНаправления) Тогда
				   ОбластьЗначение.Параметры.Значение=Строка(ВыборкаЗначение.Значение)+" / "+СокрЛП(Строка(МенеджерНаправления));
			   КонецЕсли;	   
		КонецЕсли;	
		ТабДок.Вывести(ОбластьЗначение, ВыборкаЗначение.Уровень());
		
		Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
			
			ОбластьВывода = Макет.ПолучитьОбласть("Значение|" + СтрокаЯчеек.Значение);
			
			Если СтрокаЯчеек.Представление = "СтоимостьОстаток" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.СтоимостьОстаток;
					ОбщийИтогСтоимостьОстаток = ОбщийИтогСтоимостьОстаток + СтрокаОстатков.СтоимостьОстаток;
				
				КонецЕсли;
				
				
			ИначеЕсли СтрокаЯчеек.Представление = "КоличествоОстаток" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.КоличествоОстаток;
					ОбщийИтогКоличествоОстаток = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
				
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоКоличеству" Тогда
				
				// Временная мера
				врДействиеПоКоличеству =  ?(ЗначениеНеЗаполнено(ВыборкаЗначение.КоличествоПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоКоличеству), 0,
																		Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0)); 
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоКоличеству;
				
				ОбщийИтогДействиеПоКоличеству = ОбщийИтогДействиеПоКоличеству + врДействиеПоКоличеству;
				
				//ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = Окр(ВыборкаЗначение.КоличествоПлан * (ВыборкаЗначение.ОтстованиеПоКоличеству/100), 0);
				
			ИначеЕсли СтрокаЯчеек.Представление = "ДействиеПоСтоимости" Тогда
				
				// Временная мера
				врДействиеПоСумме = ?(ЗначениеНеЗаполнено(ВыборкаЗначение.СтоимостьПлан) ИЛИ ЗначениеНеЗаполнено(ВыборкаЗначение.ОтстованиеПоСумме), 0,
																		Окр(ВыборкаЗначение.СтоимостьПлан * (ВыборкаЗначение.ОтстованиеПоСумме/100), 0));
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = врДействиеПоСумме;
				ОбщийИтогДействиеПоСтоимости = ОбщийИтогДействиеПоСтоимости + врДействиеПоСумме;
				
				//ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогКоличествоОстаток + СтрокаОстатков.КоличествоОстаток;
		
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоПлан" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоПлан;
					ОбщийИтогЗакупкиКоличествоПлан = ОбщийИтогЗакупкиКоличествоПлан + СтрокаОстатков.ЗакупкиКоличествоПлан;
				
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиКоличествоФакт" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиКоличествоФакт;
					ОбщийИтогЗакупкиКоличествоФакт = ОбщийИтогЗакупкиКоличествоФакт + СтрокаОстатков.ЗакупкиКоличествоФакт;
				
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьПлан" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьПлан;
					ОбщийИтогЗакупкиСтоимостьПлан = ОбщийИтогЗакупкиСтоимостьПлан + СтрокаОстатков.ЗакупкиСтоимостьПлан;
				
				КонецЕсли; 
				
			ИначеЕсли СтрокаЯчеек.Представление = "ЗакупкиСтоимостьФакт" Тогда
				
				СтрокаОстатков = ТаблицаОстатков.Найти(ВыборкаЗначение.Значение, "Значение");
				
				Если СтрокаОстатков <> Неопределено Тогда
				
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = СтрокаОстатков.ЗакупкиСтоимостьФакт;
				    ОбщийИтогЗакупкиСтоимостьФакт = ОбщийИтогЗакупкиСтоимостьФакт + СтрокаОстатков.ЗакупкиСтоимостьФакт;
					
				КонецЕсли; 
	
				
			Иначе
				
				ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаЗначение[СтрокаЯчеек.Представление];
			
			КонецЕсли; 
		
			ТабДок.Присоединить(ОбластьВывода);	
			
		КонецЦикла; 
		

		ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя = ВыборкаЗначение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Следующий() Цикл
			ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Параметры.Заполнить(ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя);
			ТабДок.Вывести(ОбластьДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя, ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Уровень());
			
			Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
				
				ОбластьВывода = Макет.ПолучитьОбласть("ДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя|" + СтрокаЯчеек.Значение);
				
				Если (СтрокаЯчеек.Представление <> "СтоимостьОстаток") 
					 И (СтрокаЯчеек.Представление <> "КоличествоОстаток")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоПлан")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоФакт")
					 И (СтрокаЯчеек.Представление <> "ДействиеПоКоличеству")
					 И (СтрокаЯчеек.Представление <> "ДействиеПоСтоимости")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьПлан")
					 И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьФакт") Тогда
					 
					ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя[СтрокаЯчеек.Представление];
				
				КонецЕсли; 
				
				ТабДок.Присоединить(ОбластьВывода);	
				
			КонецЦикла; 

			
			ВыборкаНоменклатура = ВыборкаДоговорКонтрагентаВладелецОсновнойМенеджерПокупателя.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаНоменклатура.Следующий() Цикл
				
				ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
				
				Если НЕ ЗначениеНеЗаполнено(ВыборкаНоменклатура.Номенклатура) Тогда
					
					ТабДок.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень());
					
					Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
						
						Если СтрокаЯчеек.Представление = "КоличествоФакт" Тогда
						
							Параметр = "КоличествоОборот";
							
						Иначе
							
							Параметр = СтрокаЯчеек.Представление;
						
						КонецЕсли; 
						
						Если СтрокаЯчеек.Представление = "СтоимостьФакт" Тогда
						
							Параметр = "СтоимостьОборот";
							
							
						КонецЕсли; 
				
						ОбластьВывода = Макет.ПолучитьОбласть("Номенклатура|" + СтрокаЯчеек.Значение);
						
						Если (Параметр <> "СтоимостьОстаток") 
							И (Параметр <> "КоличествоОстаток") 
							И (Параметр <> "ЗакупкиКоличествоПлан")
					 		И (Параметр <> "ЗакупкиКоличествоФакт")
					 		И (Параметр <> "ЗакупкиСтоимостьПлан")
							И (Параметр <> "ДействиеПоКоличеству")
							И (Параметр <> "ДействиеПоСтоимости")
					 		И (Параметр <> "ЗакупкиСтоимостьФакт") Тогда
							
							ОбластьВывода.Параметры[Параметр] = ВыборкаНоменклатура[Параметр];
							
						КонецЕсли;
						
						ТабДок.Присоединить(ОбластьВывода);	
						
					КонецЦикла; 
					
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.Вывести(ОбластьОбщийИтог);
	
	Для каждого СтрокаЯчеек Из ВыводимыеЯчейки Цикл
		
		ОбластьВывода = Макет.ПолучитьОбласть("ОбщиеИтоги|" + СтрокаЯчеек.Значение);
		
		Если (СтрокаЯчеек.Представление <> "СтоимостьОстаток") 
			И (СтрокаЯчеек.Представление <> "КоличествоОстаток")
			И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоПлан")
			И (СтрокаЯчеек.Представление <> "ЗакупкиКоличествоФакт")
			И (СтрокаЯчеек.Представление <> "ДействиеПоКоличеству")
			И (СтрокаЯчеек.Представление <> "ДействиеПоСтоимости")
			И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьПлан")
			И (СтрокаЯчеек.Представление <> "ЗакупкиСтоимостьФакт") Тогда
			
			ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = ВыборкаОбщийИтог[СтрокаЯчеек.Представление];
			
		Иначе
			
			ОбластьВывода.Параметры[СтрокаЯчеек.Представление] = Вычислить("ОбщийИтог" + СтрокаЯчеек.Представление);
			
		КонецЕсли;
		
		ТабДок.Присоединить(ОбластьВывода);	
	
	КонецЦикла; 

	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если НЕ ЗначениеНеЗаполнено(ДатаНач) И НЕ ЗначениеНеЗаполнено(ДатаКон) Тогда
		
		ВТекущемПериоде = Ложь;
		
		Если ДатаКон >= ТекущаяДата() Тогда
		
			ВТекущемПериоде = Истина;
		
		КонецЕсли;
		
		Если ВТекущемПериоде Тогда
		
			мДатаРасчета = Формат(ТекущаяДата(), "ДЛФ=Д");
			мДнейВПериоде = Окр((КонецДня(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			мДнейРасчета =  ((НачалоДня(ТекущаяДата()) - НачалоДня(ДатаНач)) / 60 / 60 / 24);
			
		Иначе
			
			мДатаРасчета = Формат(ДатаКон, "ДЛФ=Д");
			мДнейВПериоде = Окр((КонецМесяца(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			мДнейРасчета =  Окр((КонецДня(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			
		КонецЕсли; 
		
		ЭлементыФормы.ОписаниеПараметров.Заголовок = "Дата расчета: " + мДатаРасчета + ", дней в периоде: " + Строка(мДнейВПериоде) + ", дней расчета: " + Строка(мДнейРасчета) + ", тип периода: " + ?(ВТекущемПериоде, "текущий", "прошедший");
		
	КонецЕсли; 	
	
КонецПроцедуры

Процедура ДействияФормыНастройка(Кнопка)
	
	ФормаНастроек = ПолучитьФорму("Настройки");
	
	врВыводитьДанныеПоКоличеству = ВыводитьДанныеПоКоличеству;
	врВыводитьДанныеПоСуммам = ВыводитьДанныеПоСуммам;
	врВыводитьПроцентВыполнения = ВыводитьПроцентВыполнения;
	врВыводитьПроцентОтставания = ВыводитьПроцентОтставания;
	
	Если ФормаНастроек.ОткрытьМодально() <> "ОК" Тогда
		
		ВыводитьДанныеПоКоличеству 	= врВыводитьДанныеПоКоличеству;
		ВыводитьДанныеПоСуммам 		= врВыводитьДанныеПоСуммам;
		ВыводитьПроцентВыполнения 	= врВыводитьПроцентВыполнения;
		ВыводитьПроцентОтставания 	= врВыводитьПроцентОтставания;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМенеджераНаправления(Программа)
	Запрос = Новый Запрос;
	
	Запрос.Текст=" ВЫБРАТЬ  ПЕРВЫЕ 1
|	ЗначенияСвойствОбъектов.Значение  Менеджер
|ИЗ
|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
|ГДЕ
|	ЗначенияСвойствОбъектов.Объект = &Объект
|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Менеджер направления продаж"));
Запрос.УстановитьПараметр("Объект",Программа);

Выборка=Запрос.Выполнить().Выбрать();
Если Выборка.Следующий() Тогда
	Возврат  Выборка.Менеджер;
Иначе
    Возврат "";
КонецЕсли;

	
КонецФункции	

Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Программа");
Сценарий = Справочники.СценарииПланирования.НайтиПоКоду("00001");
ДатаНач = НачалоМесяца(ТекущаяДата());
ДатаКон = КонецМесяца(ТекущаяДата());

ВыводитьДанныеПоКоличеству = Истина;
ВыводитьДанныеПоСуммам = Истина;
ВыводитьПроцентВыполнения = Истина;
ВыводитьПроцентОтставания = Истина;