
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
    НачДата = НачалоМесяца(ТекущаяДата());
	КонДата = КонецДня(ТекущаяДата());
	ЭлементыФормы.ТипДиаграммы1.Значение = ТипДиаграммы.ГистограммаОбъемная;
	ОтчетИнициализация();

КонецПроцедуры

Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОтчетыВнешнийОтчет1Отчет_04bff138-5f15-413b-8d0c-13af15a27f2a", ПостроительОтчетаОтчет.ПолучитьНастройки());

КонецПроцедуры

Процедура ДействияФормыОтчетНастройка(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Форма = ВнешнийОтчетОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Форма.ОткрытьМодально() = Истина Тогда
		ОтчетВывести();
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ОтчетВывести();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = КонецДня(НастройкаПериода.ПолучитьДатуОкончания());
	КонецЕсли;
КонецПроцедуры

Процедура ТипДиаграммы1ПриИзменении(Элемент)
	
	ЭлементыФормы.Диаграмма.ТипДиаграммы = ТипДиаграммы1;
	попытка
		ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.Диаграмма, ?(Переключатель=1,"Количество", ?(Переключатель=2,"Сумма","ЗаказПокупателя")) );
	исключение
		Предупреждение("Ошибка при выводе.
		|Нажмите кнопку [Сформировать] 
		|предварительно выбрав в настроках - нужное поле",30);
	КонецПопытки;	
КонецПроцедуры


Процедура ОтчетВывести()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();
	ЭлементыФормы.Диаграмма.Очистить();

	ПостроительОтчетаОтчет.Параметры.Вставить("НачДата", НачалоДня(НачДата) );
	ПостроительОтчетаОтчет.Параметры.Вставить("КонДата", КонецДня(КонДата)  );

	ПостроительОтчетаОтчет.Выполнить();
	ПостроительОтчетаОтчет.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВСтроках  = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Классика);
	ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);

	ЭлементыФормы.Диаграмма.ТипДиаграммы  = ТипДиаграммы1;
	ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.Диаграмма, ?(Переключатель=1,"Количество", ?(Переключатель=2,"Сумма","ЗаказПокупателя")) );

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ
КонецПроцедуры

Процедура ОтчетИнициализация()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ПостроительОтчетаОтчет.Текст =
	"ВЫБРАТЬ
	|	ЗаказПокупателя.Ссылка.Контрагент КАК Контрагент,
	|	ЗаказПокупателя.Ссылка.Подразделение КАК Подразделение,
	|	ЗаказПокупателя.Ссылка.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 0
	|			ТОГДА ""0.Вручную""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 1
	|			ТОГДА ""1.Автокомплектация""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 2
	|			ТОГДА ""2.Коннект24""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 3
	|			ТОГДА ""3.Store""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 4
	|			ТОГДА ""4.FTP""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 5
	|			ТОГДА ""5.Автоэксперт""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 6
	|			ТОГДА ""6.Общ.заказ""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 7
	|			ТОГДА ""7.Общ.перемещения""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 8
	|			ТОГДА ""8.Терминалы""
	|		ИНАЧЕ ""9.Другое""
	|	КОНЕЦ КАК ТипЗаказа,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	|			ТОГДА ""1.Шины""
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|			ТОГДА ""2.Диски""
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.АКБ)
	|			ТОГДА ""3.АКБ""
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Аксессуары)
	|			ТОГДА ""4.Аксессуары""
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
	|			ТОГДА ""5.Прочее""
	|		ИНАЧЕ ""6.Неопределено""
	|	КОНЕЦ КАК ВидТовара,
	|	ЗаказПокупателя.Номенклатура.НоменклатурнаяГруппа КАК ТоварнаяГруппа,
	|	ЗаказПокупателя.Ссылка КАК ЗаказПокупателя,
	|	СУММА(ЗаказПокупателя.Количество) КАК Количество,
	|	СУММА(ЗаказПокупателя.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И ВЫБОР
	|			КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 6
	|					ИЛИ ЗаказПокупателя.Ссылка.ТипЗаказа = 7
	|				ТОГДА НЕ ЗаказПокупателя.Ссылка.ПометкаУдаления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ЗаказПокупателя.Ссылка.Подразделение <> ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ЗаказПокупателя.Ссылка.Проверен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателя.Ссылка.Контрагент,
	|	ЗаказПокупателя.Ссылка.Подразделение,
	|	ЗаказПокупателя.Ссылка.ДоговорКонтрагента.ОтветственноеЛицо,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 0
	|			ТОГДА ""0.Вручную""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 1
	|			ТОГДА ""1.Автокомплектация""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 2
	|			ТОГДА ""2.Коннект24""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 3
	|			ТОГДА ""3.Store""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 4
	|			ТОГДА ""4.FTP""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 5
	|			ТОГДА ""5.Автоэксперт""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 6
	|			ТОГДА ""6.Общ.заказ""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 7
	|			ТОГДА ""7.Общ.перемещения""
	|		КОГДА ЗаказПокупателя.Ссылка.ТипЗаказа = 8
	|			ТОГДА ""8.Терминалы""
	|		ИНАЧЕ ""9.Другое""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	|			ТОГДА ""1.Шины""
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|			ТОГДА ""2.Диски""
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.АКБ)
	|			ТОГДА ""3.АКБ""
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Аксессуары)
	|			ТОГДА ""4.Аксессуары""
	|		КОГДА ЗаказПокупателя.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
	|			ТОГДА ""5.Прочее""
	|		ИНАЧЕ ""6.Неопределено""
	|	КОНЕЦ,
	|	ЗаказПокупателя.Номенклатура.НоменклатурнаяГруппа,
	|	ЗаказПокупателя.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипЗаказа,
	|	ВидТовара,
	|	Подразделение,
	|	Контрагент,
	|	Менеджер,
	|	ТоварнаяГруппа
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказПокупателя),
	|	СУММА(Количество),
	|	СУММА(Сумма)
	|ПО
	|	Подразделение,
	|	Менеджер,
	|	Контрагент,
	|	ТипЗаказа,
	|	ВидТовара,
	|	ТоварнаяГруппа";
	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет";
	
//	Настройка = неопределено;
	Настройка = ВосстановитьЗначение("НастройкаВнешниеОтчетыВнешнийОтчет1Отчет_04bff138-5f15-413b-8d0c-13af15a27f2a");
	Если Настройка <> Неопределено Тогда
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ
КонецПроцедуры

