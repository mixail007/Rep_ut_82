Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	//ЗаполнитьНачальныеНастройкиПоМакету(ПолучитьМакет("ПараметрыОтчетовПродажиКомпании"), СтруктураПредставлениеПолей, МассивОтбора, ОбщийОтчет, "СписокКроссТаблица");
	Текст = "
|	ВЫБРАТЬ МАКСИМУМ(ВЫБОР
|			КОГДА НормыЗагрузки.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
|					ИЛИ НормыЗагрузки.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
|				ТОГДА НормыЗагрузки.НормаЗагрузки
|			ИНАЧЕ 0.00001
|		КОНЕЦ) КАК НормаЗагрузки,
|	НормыЗагрузки.Типоразмер,
|	НормыЗагрузки.ВидПродукции
|ПОМЕСТИТЬ втНормыЗагрузки
|ИЗ
|	Справочник.НормыЗагрузки КАК НормыЗагрузки
|ГДЕ
|	НормыЗагрузки.НормаЗагрузки <> 0
|	И НормыЗагрузки.ПометкаУдаления = ЛОЖЬ
|
|СГРУППИРОВАТЬ ПО
|	НормыЗагрузки.ВидПродукции,
|	НормыЗагрузки.Типоразмер
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	вложенный.Реализация,
|	вложенный.Количество * ЕСТЬNULL(втНормыЗагрузки.НормаЗагрузки, 0.00001) КАК Количество,
|	вложенный.Номенклатура
|ПОМЕСТИТЬ втРеализацииСКубатурой
|ИЗ
|	(ВЫБРАТЬ
|		РеализацияТоваровУслугТовары.Ссылка КАК Реализация,
|		СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
|		РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
|		РеализацияТоваровУслугТовары.Номенклатура.ВидТовара КАК НоменклатураВидТовара,
|		РеализацияТоваровУслугТовары.Номенклатура.Типоразмер КАК НоменклатураТипоразмер
|	ИЗ
|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
|	ГДЕ
|		РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
|	
|	СГРУППИРОВАТЬ ПО
|		РеализацияТоваровУслугТовары.Ссылка,
|		РеализацияТоваровУслугТовары.Номенклатура,
|		РеализацияТоваровУслугТовары.Номенклатура.ВидТовара,
|		РеализацияТоваровУслугТовары.Номенклатура.Типоразмер) КАК вложенный
|		ЛЕВОЕ СОЕДИНЕНИЕ втНормыЗагрузки КАК втНормыЗагрузки
|		ПО вложенный.НоменклатураВидТовара = втНормыЗагрузки.ВидПродукции
|			И вложенный.НоменклатураТипоразмер = втНормыЗагрузки.Типоразмер
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ТранспортныеЗатратыПоРеализациям.Поступление,
|	ТранспортныеЗатратыПоРеализациям.Поступление.СуммаДокумента КАК Сумма
|ПОМЕСТИТЬ втПоступленияУслугПоРеализациям
|ИЗ
|	РегистрСведений.ТранспортныеЗатратыПоРеализациям КАК ТранспортныеЗатратыПоРеализациям
|ГДЕ
|	ТранспортныеЗатратыПоРеализациям.Реализация В
|			(ВЫБРАТЬ
|				втРеализацииСКубатурой.Реализация
|			ИЗ
|				втРеализацииСКубатурой КАК втРеализацииСКубатурой)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втПоступленияУслугПоРеализациям.Поступление,
|	втПоступленияУслугПоРеализациям.Сумма КАК Сумма,
|	ВложенныйЗапрос.Реализация
|ПОМЕСТИТЬ втРеализацииПоПоступлениям
|ИЗ
|	втПоступленияУслугПоРеализациям КАК втПоступленияУслугПоРеализациям
|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
|			ТранспортныеЗатратыПоРеализациям.Поступление КАК Поступление,
|			ТранспортныеЗатратыПоРеализациям.Реализация КАК Реализация
|		ИЗ
|			РегистрСведений.ТранспортныеЗатратыПоРеализациям КАК ТранспортныеЗатратыПоРеализациям) КАК ВложенныйЗапрос
|		ПО втПоступленияУслугПоРеализациям.Поступление = ВложенныйЗапрос.Поступление
|
|СГРУППИРОВАТЬ ПО
|	втПоступленияУслугПоРеализациям.Поступление,
|	ВложенныйЗапрос.Реализация,
|	втПоступленияУслугПоРеализациям.Сумма
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	а.Поступление,
|	а.КоличествоВДокументах,
|	а.Реализация,
|	а.Сумма,
|	ЕСТЬNULL(ВложенныйЗапрос.Сумма, 0) КАК СуммаВозмещения
|ПОМЕСТИТЬ вт
|ИЗ
|	(ВЫБРАТЬ
|		вложенный.Поступление КАК Поступление,
|		СУММА(вложенный.КоличествоВДокументах * ЕСТЬNULL(втНормыЗагрузки.НормаЗагрузки, 0.00001)) КАК КоличествоВДокументах,
|		вложенный.Реализация КАК Реализация,
|		МАКСИМУМ(вложенный.Сумма) КАК Сумма
|	ИЗ
|		(ВЫБРАТЬ
|			втРеализацииПоПоступлениям.Поступление КАК Поступление,
|			СУММА(ЕСТЬNULL(ПеремещениеТоваровТовары.Количество, РеализацияТоваровУслугТовары.Количество)) КАК КоличествоВДокументах,
|			втРеализацииПоПоступлениям.Реализация КАК Реализация,
|			ЕСТЬNULL(ПеремещениеТоваровТовары.Номенклатура.ВидТовара, РеализацияТоваровУслугТовары.Номенклатура.ВидТовара) КАК ВидТовара,
|			ЕСТЬNULL(ПеремещениеТоваровТовары.Номенклатура.Типоразмер, РеализацияТоваровУслугТовары.Номенклатура.Типоразмер) КАК Типоразмер,
|			МАКСИМУМ(втРеализацииПоПоступлениям.Сумма) КАК Сумма
|		ИЗ
|			втРеализацииПоПоступлениям КАК втРеализацииПоПоступлениям
|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
|				ПО втРеализацииПоПоступлениям.Реализация = РеализацияТоваровУслугТовары.Ссылка
|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
|				ПО втРеализацииПоПоступлениям.Реализация = ПеремещениеТоваровТовары.Ссылка
|		
|		СГРУППИРОВАТЬ ПО
|			втРеализацииПоПоступлениям.Поступление,
|			втРеализацииПоПоступлениям.Реализация,
|			ЕСТЬNULL(ПеремещениеТоваровТовары.Номенклатура.Типоразмер, РеализацияТоваровУслугТовары.Номенклатура.Типоразмер),
|			ЕСТЬNULL(ПеремещениеТоваровТовары.Номенклатура.ВидТовара, РеализацияТоваровУслугТовары.Номенклатура.ВидТовара)) КАК вложенный
|			ЛЕВОЕ СОЕДИНЕНИЕ втНормыЗагрузки КАК втНормыЗагрузки
|			ПО вложенный.ВидТовара = втНормыЗагрузки.ВидПродукции
|				И вложенный.Типоразмер = втНормыЗагрузки.Типоразмер
|	
|	СГРУППИРОВАТЬ ПО
|		вложенный.Поступление,
|		вложенный.Реализация) КАК а
|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|			ТранспортныеЗатратыПоРеализациям.Поступление КАК Поступление,
|			ТранспортныеЗатратыПоРеализациям.Реализация КАК Реализация,
|			ТранспортныеЗатратыПоРеализациям.Сумма КАК Сумма
|		ИЗ
|			РегистрСведений.ТранспортныеЗатратыПоРеализациям КАК ТранспортныеЗатратыПоРеализациям
|		ГДЕ
|			ТранспортныеЗатратыПоРеализациям.Возмещение = ИСТИНА) КАК ВложенныйЗапрос
|		ПО а.Поступление = ВложенныйЗапрос.Поступление
|			И а.Реализация = ВложенныйЗапрос.Реализация
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	вт.Реализация,
|	ВЫБОР
|		КОГДА ЕСТЬNULL(ВложенныйЗапрос.КоличествоВДокументах, 0) <> 0
|			ТОГДА вт.КоличествоВДокументах * вт.Сумма / ЕСТЬNULL(ВложенныйЗапрос.КоличествоВДокументах, 0) - вт.СуммаВозмещения
|		ИНАЧЕ 0
|	КОНЕЦ КАК ТранспортаяУслуга,
|	вт.КоличествоВДокументах
|ПОМЕСТИТЬ втРеализацииСТранспортнойУслугой
|ИЗ
|	вт КАК вт
|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|			вт.Поступление КАК Поступление,
|			СУММА(вт.КоличествоВДокументах) КАК КоличествоВДокументах,
|			МАКСИМУМ(вт.Сумма) КАК Сумма
|		ИЗ
|			вт КАК вт
|		
|		СГРУППИРОВАТЬ ПО
|			вт.Поступление) КАК ВложенныйЗапрос
|		ПО вт.Поступление = ВложенныйЗапрос.Поступление
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втРеализацииСКубатурой.Реализация КАК Ссылка,
|	СУММА(ВЫБОР
|			КОГДА ЕСТЬNULL(втРеализацииСТранспортнойУслугой.КоличествоВДокументах, 0) <> 0
|				ТОГДА втРеализацииСКубатурой.Количество * ЕСТЬNULL(втРеализацииСТранспортнойУслугой.ТранспортаяУслуга, 0) / ЕСТЬNULL(втРеализацииСТранспортнойУслугой.КоличествоВДокументах, 0)
|			ИНАЧЕ 0
|		КОНЕЦ) КАК ТранспортнаяУслуга,
|	втРеализацииСКубатурой.Номенклатура
|ПОМЕСТИТЬ втТранспортнаяУслугаПоРеализациямНоменклатуре
|ИЗ
|	втРеализацииСКубатурой КАК втРеализацииСКубатурой
|		ЛЕВОЕ СОЕДИНЕНИЕ втРеализацииСТранспортнойУслугой КАК втРеализацииСТранспортнойУслугой
|		ПО втРеализацииСКубатурой.Реализация = втРеализацииСТранспортнойУслугой.Реализация
|
|СГРУППИРОВАТЬ ПО
|	втРеализацииСКубатурой.Номенклатура,
|	втРеализацииСКубатурой.Реализация
	        |;
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	СУММА(ТаблицаРегистра.КоличествоОборот) КАК Количество,
	        |	СУММА(ТаблицаРегистра.КоличествоОборот * ТаблицаРегистра.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоБазовыхЕд,
	        |	СУММА(ТаблицаРегистра.СтоимостьОборот) КАК Стоимость,
	        |	СУММА(ТаблицаРегистраСебестоимость.СтоимостьОборот) КАК Себестоимость,
	        |	СУММА(ВЫБОР
	        |			КОГДА ТаблицаРегистра.СтоимостьОборот ЕСТЬ NULL 
	        |				ТОГДА 0
	        |			ИНАЧЕ ТаблицаРегистра.СтоимостьОборот
	        |		КОНЕЦ) - СУММА(ВЫБОР
	        |			КОГДА ТаблицаРегистраСебестоимость.СтоимостьОборот ЕСТЬ NULL 
	        |				ТОГДА 0
	        |			ИНАЧЕ ТаблицаРегистраСебестоимость.СтоимостьОборот
	        |		КОНЕЦ) КАК ВаловаяПрибыль,
	        |	СУММА(ВЫРАЗИТЬ(ВЫБОР
	        |				КОГДА ТаблицаРегистра.СтоимостьОборот <> 0
	        |					ТОГДА 100 * (ТаблицаРегистра.СтоимостьОборот - ТаблицаРегистраСебестоимость.СтоимостьОборот) / ТаблицаРегистра.СтоимостьОборот
	        |				ИНАЧЕ 0
	        |			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК РентабельностьПродаж,
	        |	СУММА(ВЫРАЗИТЬ(ВЫБОР
	        |				КОГДА ТаблицаРегистраСебестоимость.СтоимостьОборот <> 0
	        |					ТОГДА 100 * (ТаблицаРегистра.СтоимостьОборот - ТаблицаРегистраСебестоимость.СтоимостьОборот) / ТаблицаРегистраСебестоимость.СтоимостьОборот
	        |				ИНАЧЕ 0
	        |			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК ПроцентНаценки,
	        |	СУММА(ЕСТЬNULL(ТаблицаРегистраСебестоимость.СтоимостьОборот, 0) + ЕСТЬNULL(втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга, 0)) КАК СебестоимостьСТранспортом,
	        |	СУММА(ВЫБОР
	        |			КОГДА ТаблицаРегистра.СтоимостьОборот ЕСТЬ NULL 
	        |				ТОГДА 0
	        |			ИНАЧЕ ТаблицаРегистра.СтоимостьОборот
	        |		КОНЕЦ) - СУММА(ВЫБОР
	        |			КОГДА ТаблицаРегистраСебестоимость.СтоимостьОборот ЕСТЬ NULL 
	        |				ТОГДА 0
	        |			ИНАЧЕ ТаблицаРегистраСебестоимость.СтоимостьОборот
	        |		КОНЕЦ) - СУММА(ВЫБОР
	        |			КОГДА втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга ЕСТЬ NULL 
	        |				ТОГДА 0
	        |			ИНАЧЕ втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга
	        |		КОНЕЦ) КАК ВаловаяПрибыльСТранспортом,
	        |	СУММА(ЕСТЬNULL(втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга, 0)) КАК Транспорт,
			//|	СУММА(ВЫРАЗИТЬ(ВЫБОР
			//|				КОГДА ТаблицаРегистра.СтоимостьОборот <> 0
			//|					ТОГДА 100 * (ТаблицаРегистра.СтоимостьОборот - ТаблицаРегистраСебестоимость.СтоимостьОборот - ЕСТЬNULL(втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга, 0)) / ТаблицаРегистра.СтоимостьОборот
			//|				ИНАЧЕ 0
			//|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК РентабельностьПродажСТранспортом,
	        |	СУММА(ВЫРАЗИТЬ(ВЫБОР
	        |				КОГДА ЕСТЬNULL(ТаблицаРегистраСебестоимость.СтоимостьОборот, 0) + ЕСТЬNULL(втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга, 0) <> 0
	        |					ТОГДА 100 * (ТаблицаРегистра.СтоимостьОборот - (ЕСТЬNULL(ТаблицаРегистраСебестоимость.СтоимостьОборот, 0) + ЕСТЬNULL(втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга, 0))) / (ЕСТЬNULL(ТаблицаРегистраСебестоимость.СтоимостьОборот, 0) + ЕСТЬNULL(втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга, 0))
	        |				ИНАЧЕ 0
	        |			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК ПроцентНаценкиСТранспортом
			|	//ТаблицаРегистра.ДоговорКонтрагента.Владелец КАК Покупатель,
	        |	//ТаблицаРегистра.Номенклатура КАК Номенклатура,
	        |	//ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения КАК НоменклатураБазоваяЕдиницаИзмерения

	        |{ВЫБРАТЬ
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	ТаблицаРегистра.Период,
	        |	ТаблицаРегистра.Регистратор.* КАК Регистратор,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ДЕНЬ)) КАК ПериодДень,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, МЕСЯЦ)) КАК ПериодМесяц,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, КВАРТАЛ)) КАК ПериодКвартал,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ГОД)) КАК ПериодГод}
	        |ИЗ
	        |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК ТаблицаРегистра
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК ТаблицаРегистраСебестоимость
	        |		ПО ТаблицаРегистра.Номенклатура = ТаблицаРегистраСебестоимость.Номенклатура
	        |			И ТаблицаРегистра.ХарактеристикаНоменклатуры = ТаблицаРегистраСебестоимость.ХарактеристикаНоменклатуры
	        |			И ТаблицаРегистра.ЗаказПокупателя = ТаблицаРегистраСебестоимость.ЗаказПокупателя
	        |			И ТаблицаРегистра.Подразделение = ТаблицаРегистраСебестоимость.Подразделение
	        |			И ТаблицаРегистра.Регистратор = ТаблицаРегистраСебестоимость.Регистратор
	        |		ЛЕВОЕ СОЕДИНЕНИЕ втТранспортнаяУслугаПоРеализациямНоменклатуре КАК втТранспортнаяУслугаПоРеализациямНоменклатуре
	        |		ПО ТаблицаРегистра.Регистратор = втТранспортнаяУслугаПоРеализациямНоменклатуре.Ссылка
	        |			И ТаблицаРегистра.Номенклатура = втТранспортнаяУслугаПоРеализациямНоменклатуре.Номенклатура
	        |{ГДЕ
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	ТаблицаРегистра.Период,
	        |	ТаблицаРегистра.Регистратор.* КАК Регистратор,
			|(ВЫРАЗИТЬ(ВЫБОР
			|	КОГДА ЕСТЬNULL(ТаблицаРегистраСебестоимость.СтоимостьОборот, 0) + ЕСТЬNULL(втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга, 0) <> 0
			|		ТОГДА 100 * (ТаблицаРегистра.СтоимостьОборот - (ЕСТЬNULL(ТаблицаРегистраСебестоимость.СтоимостьОборот, 0) + ЕСТЬNULL(втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга, 0))) / (ЕСТЬNULL(ТаблицаРегистраСебестоимость.СтоимостьОборот, 0) + ЕСТЬNULL(втТранспортнаяУслугаПоРеализациямНоменклатуре.ТранспортнаяУслуга, 0))
			|	ИНАЧЕ 0
			|КОНЕЦ КАК ЧИСЛО(15, 2))) КАК ПроцентНаценкиСТранспортом}
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец,
	        |	ТаблицаРегистра.Номенклатура
	        |{УПОРЯДОЧИТЬ ПО
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	ТаблицаРегистра.Период,
	        |	ТаблицаРегистра.Регистратор.* КАК Регистратор}
	        |ИТОГИ
	        |	СУММА(Количество),
	        |	СУММА(КоличествоБазовыхЕд),
	        |	СУММА(Стоимость),
	        |	СУММА(Себестоимость),
	        |	СУММА(ВаловаяПрибыль),
	        |	ВЫБОР
	        |		КОГДА СУММА(Стоимость) > 0
	        |			ТОГДА СУММА(ВаловаяПрибыль) / СУММА(Стоимость) * 100
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК РентабельностьПродаж,
	        |	ВЫБОР
	        |		КОГДА СУММА(Себестоимость) > 0
	        |			ТОГДА СУММА(ВаловаяПрибыль) / СУММА(Себестоимость) * 100
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК ПроцентНаценки,
	      //  |	СУММА(СебестоимостьСТранспортом),
	        |	СУММА(ВаловаяПрибыльСТранспортом),
	        |	СУММА(Транспорт),
			//|	ВЫБОР
			//|		КОГДА СУММА(Стоимость) > 0
			//|			ТОГДА СУММА(ВаловаяПрибыльСТранспортом) / СУММА(Стоимость) * 100
			//|		ИНАЧЕ 0
			//|	КОНЕЦ КАК РентабельностьПродажСТранспортом,
	        |	ВЫБОР
	        |		КОГДА СУММА(СебестоимостьСТранспортом) > 0
	        |			ТОГДА СУММА(ВаловаяПрибыльСТранспортом) / СУММА(СебестоимостьСТранспортом) * 100
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК ПроцентНаценкиСТранспортом
	        |ПО
	        |	ОБЩИЕ
	        |{ИТОГИ ПО
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ДЕНЬ)) КАК ПериодДень,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, МЕСЯЦ)) КАК ПериодМесяц,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, КВАРТАЛ)) КАК ПериодКвартал,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ГОД)) КАК ПериодГод}
	        |АВТОУПОРЯДОЧИВАНИЕ";
	СтруктураПредставлениеПолей = Новый Структура("
	|Количество,
	|КоличествоБазовыхЕд,
	|Стоимость,
	|Себестоимость,
	|СебестоимостьСТранспортом,
	|ВаловаяПрибыль,
	|ВаловаяПрибыльСТранспортом,
	|Транспорт,
	|РентабельностьПродаж,
	|РентабельностьПродажСТранспортом,
	|ПроцентНаценки,
	|ПроцентНаценкиСТранспортом,
	|Покупатель,
	|ДоговорКонтрагента,
	|ЗаказПокупателя,
	|НоменклатураБазоваяЕдиницаИзмерения,
	|ХарактеристикаНоменклатуры,
	|Подразделение,
	|ПериодДень,
	|ПериодНеделя,
	|ПериодМесяц,
	|ПериодКвартал,
	|ПериодГод", 
	"Количество товара в единицах хранения остатков",
	"Количество товара в базовых единицах",
	"Продажная стоимость",
	"Себестоимость",
	"Себестоимость с транспортом",
	"Валовая прибыль",
	"Валовая прибыль с транспортом",
	"Транспорт",
	"Рентабельность продаж, %",
	"Рентабельность продаж с транспортом, %",
	"Процент наценки",
	"Процент наценки с транспортом",
	"Покупатель",
	"Договор контрагента",
	"Заказ покупателя",
	"Базовая единица измерения",
	"Характеристика номенклатуры",
	"Подразделение",
	"По дням",
	"По неделям",
	"По месяцам",
	"По кварталам",
	"По годам");
	
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда
	
	    ТекстПоляСвойств= "";
		ТекстПоляКатегорий = "";

		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
		
		ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, Текст, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,,,,,,ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);
				
		ДобавитьВТекстСвойстваОбщие(Текст, ТекстПоляСвойств, "//ОБЩИЕ_СВОЙСТВА");
      // для избежания двойственности поля Номенклатура в запросе
	    Текст=СтрЗаменить(Текст,"ИНАЧЕ Номенклатура","ИНАЧЕ ТаблицаРегистраСебестоимость.Номенклатура");
		//УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, ОбщийОтчет.мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;
	
	ПостроительОтчета.Текст = Текст;
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Покупатель");
	МассивОтбора.Добавить("Номенклатура");
	МассивОтбора.Добавить("Подразделение");
	
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Истина;
	
	ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество в единицах хранения", Истина, "ЧЦ=15; ЧДЦ=3");
	//ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество в базовых единицах", Истина, "ЧЦ=15; ЧДЦ=3");
	ОбщийОтчет.ЗаполнитьПоказатели("Стоимость", "Продажная стоимость в валюте упр. учета", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("Себестоимость", "Себестоимость в валюте упр. учета", Истина, "ЧЦ=15; ЧДЦ=2");
	//ОбщийОтчет.ЗаполнитьПоказатели("СебестоимостьСТранспортом", "Себестоимость с транспортом в валюте упр. учета", Ложь, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ВаловаяПрибыль", "Валовая прибыть в валюте упр. учета", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ВаловаяПрибыльСТранспортом", "Валовая прибыть с транспортом в валюте упр. учета", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("РентабельностьПродаж", "Рентабельность продаж, %", Истина, "ЧЦ=15; ЧДЦ=2");
	//ОбщийОтчет.ЗаполнитьПоказатели("РентабельностьПродажСТранспортом", "Рентабельность продаж с транспортом, %", Ложь, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ПроцентНаценки", "Процент наценки", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ПроцентНаценкиСТранспортом", "Процент наценки с транспортом", Истина, "ЧЦ=15; ЧДЦ=2");

    ОбщийОтчет.ЗаполнитьПоказатели("Транспорт", "Транспорт", Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.мНазваниеОтчета = "Отчет по валовой прибыли";
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Установим дату начала отчета
	Если ЗначениеНеЗаполнено(ОбщийОтчет.ДатаНач) Тогда
		Если Не ЗначениеНеЗаполнено(глТекущийПользователь) Тогда
			ОбщийОтчет.ДатаНач = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		
		//+++ 26.06.2013 - ограничение по подразделению
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
           СообщитьОбОшибке("У вас недостаточно прав для просмотра данного отчета!");
		   Возврат;
	    КонецЕсли;
	   
		ДоступноеПодразделение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
    	ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.Значение = ДоступноеПодразделение;
		ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.Использование = Истина;
		ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
	КонецЕсли;

	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("РентабельностьПродаж", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ПроцентНаценки", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПРоцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "Продажи";