перем соответствиеПодразделений;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	НомерЛистаExcel  = 1;
	начСтр = 8;
	СтолбНомер = 6;   // H
	СтолбСумма = 32;  // G
	
	МинДата = ДобавитьМесяц( НачалоМесяца(ТекущаяДата()) , -1); // пред.месяц
	
КонецПроцедуры

//===============Интерфейсные функции=====================

Процедура КоманднаяПанель2НайтиЗаказы(Кнопка)
	Если ТабличноеПоле1.Количество()=0 тогда
		Предупреждение("Не заполнена таблица номеров и сумм!", 10);
		возврат;
	КонецЕсли;
	
	НайтиЗаказы();
	
КонецПроцедуры

Процедура Панель1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	если ТекущаяСтраница = 1 тогда  // 0, 1
		получитьОбщиеЗаказы();
	КонецЕсли;	
КонецПроцедуры

Процедура КоманднаяПанель2Действие9(Кнопка)
	если Платежка.Пустая() тогда
		Предупреждение("Выберите сначала Плажку!", 10);
		возврат;
	КонецЕсли;
	
	получитьОбщиеЗаказы();
	
	если ТабличноеПоле1.Количество()=0 
		или ТабличноеПоле2.Количество()=0 тогда
		Предупреждение("Выберите сначала файл реестра оплат!", 10);
		возврат;
	КонецЕсли;
	
	Заполнена = заполнитьПлатежку();
	Если Заполнена тогда
		Для Каждого стр из ТабличноеПоле1 цикл
			Если Стр.Флаг тогда
				ЗаписатьРегистрСтатусов(Стр.ЗаказПокупателя, Стр.ЗаказПокупателяОбщий, , Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ЗапуститьПриложение(ИмяФайла);
КонецПроцедуры

функция получитьКаталог(знач имя)
	
	рез = имя;
	
	i = найти(рез,"\");
	рез1 = "";
	пока i>0 Цикл
		рез1 = рез1+лев(рез, i);
		рез = прав(рез, стрДлина(рез)-i);
		i = найти(рез,"\");
	КонецЦикла;
	
	возврат рез1;
	
КонецФункции	

Процедура ИмяФайлаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	диалог.ПолноеИмяФайла = ИмяФайла;
	диалог.Каталог = получитьКаталог(ИмяФайла);
	Текст = "ru = ""Excel""; en = ""Excel""";
	Фильтр = НСтр(Текст)+"(*.xls)|*.xls";
	диалог.Фильтр = Фильтр;
	
	если диалог.Выбрать() тогда
		ИмяФайла = диалог.ПолноеИмяФайла;
		Если Вопрос("Выполнить разбор Excel-файла?", РежимДиалогаВопрос.ДаНет, 0) = КодВозвратаДиалога.Да Тогда
			ВыполнитьРазборФайла();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель2РазборФайла(Кнопка)
	ВыполнитьРазборФайла();
	
	табл = ТабличноеПоле1.Скопировать();
	табл.Свернуть("Флаг, Номер, Подразделение","Сумма"); // 1 сумма на 1 заказ!
	
	ТабличноеПоле1.Очистить(); // обратное заполнение
	для i=0 по табл.Количество()-1 цикл
		стр2 = ТабличноеПоле1.Добавить();
		ЗаполнитьЗначенияСвойств( стр2, табл[i]);
	КонецЦикла;
	
КонецПроцедуры


//---------флажки ---------------------------------
процедура УстановитьФлаг(вкл=1)
	Для каждого стр111 из ТабличноеПоле1 Цикл
		стр111.флаг = ?(вкл=1, Истина, 
		?(вкл=0, ЛОЖЬ, НЕ стр111.флаг) 
		);
	КонецЦикла;	
КонецПроцедуры	

Процедура КоманднаяПанель2ВыбратьВсе(Кнопка)
	УстановитьФлаг(1);   
КонецПроцедуры


Процедура КоманднаяПанель2ОтменитьВсе(Кнопка)
	УстановитьФлаг(0);
КонецПроцедуры

Процедура КоманднаяПанель2ПереключитьВсе(Кнопка)
	УстановитьФлаг(2);
КонецПроцедуры



Процедура ОсновныеДействияФормыВыполнить(Кнопка)
	//сразу всё
	ВыполнитьРазборФайла();
	НайтиЗаказы();
	получитьОбщиеЗаказы();
	
	Заполнена = заполнитьПлатежку();
	
	Заполнена = заполнитьПлатежку();
	Если Заполнена тогда
		Для Каждого стр из ТабличноеПоле1 цикл
			Если Стр.Флаг тогда
				ЗаписатьРегистрСтатусов(Стр.ЗаказПокупателя, Стр.ЗаказПокупателяОбщий, , Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


//================4 ГЛАВНЫЕ ФУНКЦИИ============================

//1. разбор Excel-файла
процедура ВыполнитьРазборФайла()
	Если ИмяФайла = "" тогда
		Предупреждение("Выберите Excel-файл!", 10);
		ИмяФайлаНачалоВыбора(неопределено, ложь);
	КонецЕсли;	
	
	xlLastCell = 11;
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ИмяФайла);
		Состояние("Обработка файла Microsoft Excel...");
		ExcelЛист = Excel.Sheets(НомерЛистаExcel);
	Исключение
		Предупреждение("Ошибка при открытии файла Excel.", 10);
		Возврат;
	КонецПопытки;
	
	ТабличноеПоле1.Очистить();
	
	ActiveCell  = Excel.ActiveCell.SpecialCells(xlLastCell);
	RowCount    = ActiveCell.Row;
	ColumnCount = ActiveCell.Column;
	
	колПуст = 0;	
	
	Для Row = начСтр По RowCount Цикл // по строкам с 8-ой
		Если ExcelЛист.Cells(Row,СтолбНомер).text="" тогда
			колПуст = колПуст+1;
			продолжить;
		КонецЕсли;	
		
		стр1Номер = ExcelЛист.Cells(Row, СтолбНомер).Value;
		Если  сокрЛП(строка(стр1Номер))="" тогда
			сообщить("Стр."+строка(Row)+" - номер не заполнен. Строка не добавлена!", СтатусСообщения.Внимание);
			продолжить;
		КонецЕсли;
		
		стр1 = ТабличноеПоле1.Добавить();
		стр1.Номер = стр1Номер;
		i=найти(стр1.Номер,"_");
		если i>0 тогда
			стр1.Номер = лев(стр1.Номер, i-1);
			стр1.Подразделение = соответствиеПодразделений.Получить(сред(стр1Номер, i+1));
		Иначе
			стр1.Подразделение = Справочники.Подразделения.НайтиПоКоду("00005");
		КонецЕсли;	
		стр1.Сумма = ExcelЛист.Cells(Row, СтолбСумма).Value;
		стр1.Флаг  = (стр1.Сумма>0); // сразу включаем
		Если не стр1.Флаг тогда
			сообщить("Стр."+строка(Row)+" - Cумма <=0 Строка - выключена из поиска заказов.", СтатусСообщения.Информация);
		КонецЕсли;	
		колПуст = 0;
	КонецЦикла;
	Excel.WorkBooks.Close();
	Excel = 0;
	Предупреждение("Обработано "+строка(RowCount-начСтр)+" строк документа Excel", 10);
КонецПроцедуры

//2. поиск первичных заказов и их Общих 
процедура НайтиЗаказы()
	
	// в одном запросе - поиск по реквизиту в цикле... долго на большой выборке
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	вт.Номер,
	               |	вт.Сумма,
	               |	вт.Подразделение
	               |ПОМЕСТИТЬ ВТ_Номера
	               |ИЗ
	               |	&Табл КАК вт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ЗаказПокупателя.Ссылка = NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК Флаг,
	               |	НомераЗаказов.Номер,
	               |	НомераЗаказов.Сумма,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ЗаказПокупателя.Сумма, 0) > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ЕСТЬNULL(ЗаказПокупателя.Сумма, 0) > НомераЗаказов.Сумма
	               |						ТОГДА НомераЗаказов.Сумма
	               |					ИНАЧЕ ЕСТЬNULL(ЗаказПокупателя.Сумма, 0)
	               |				КОНЕЦ
	               |		ИНАЧЕ НомераЗаказов.Сумма
	               |	КОНЕЦ КАК СуммаЗаказа,
	               |	ЕСТЬNULL(ЗаказПокупателя.Ссылка, ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК ЗаказПокупателя,
	               |	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателяОбщий,
	               |	ЗаказПокупателя.Подразделение
	               |ИЗ
	               |	ВТ_Номера КАК НомераЗаказов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			Зак.Ссылка КАК Ссылка,
	               |			Зак.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	               |			Зак.СуммаДокумента КАК Сумма,
	               |			Зак.Подразделение КАК Подразделение
	               |		ИЗ
	               |			Документ.ЗаказПокупателя КАК Зак
	               |		ГДЕ
	               |			Зак.Дата > &начДата
	               |			И Зак.НомерВходящегоДокумента <> """") КАК ЗаказПокупателя
	               |		ПО НомераЗаказов.Номер = ЗаказПокупателя.НомерВходящегоДокумента
	               |			И НомераЗаказов.Подразделение = ЗаказПокупателя.Подразделение";
	
	//===========================================================================================				   
	табл = ТабличноеПоле1.Скопировать(, "Флаг, Номер, Подразделение, Сумма, СуммаЗаказа");
	табл.Свернуть("Флаг, Номер, Подразделение","Сумма, СуммаЗаказа");
	i=0;
	Пока i<табл.Количество() цикл
		если не табл[i].Флаг или СокрЛП(табл[i].Номер)="" тогда
			табл.Удалить(i);
		Иначе i=i+1;
		КонецЕсли;	
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("Табл", табл);
	
	//<<<Начало Измененно 14.06.2016 *установлен параметр начДата в начало текущего года
	
	//Запрос.УстановитьПараметр("начДата", ДобавитьМесяц( началоДня(ТекущаяДата()),-3)   ); // номера могут повторяться 
	Запрос.УстановитьПараметр("начДата", МинДата); // номера могут повторяться 
	
	//>>>Конец Измененно 14.06.2016
	состояние("Идет поиск общих заказов по "+ строка(табл.Количество())+" первичным заказам...");
	Результат = Запрос.Выполнить();
	ТабличноеПоле1 = Результат.Выгрузить();
	сообщить("По "+строка(табл.Количество())+" выбранным номерам - найдено "+строка(ТабличноеПоле1.Количество())+" первичных заказов...");
	для каждого стр1 из ТабличноеПоле1 цикл
		ОбработкаПрерыванияПользователя();
		
		если стр1.флаг тогда
			если стр1.ЗаказПокупателя.пустая() тогда
				стр1.флаг = ложь;
			иначе	
				закОбщ = ОбменСУТИнтернетМагазин.ПолучитьОбщийЗаказ(стр1.ЗаказПокупателя);
				Если закОбщ.Пустая() тогда
					стр1.ЗаказПокупателяОбщий = стр1.ЗаказПокупателя; // сам себе общий
				иначе	
					стр1.ЗаказПокупателяОбщий = закОбщ;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//3. Группировка по общ.заказам
процедура получитьОбщиеЗаказы()
	табл = ТабличноеПоле1.Скопировать(,"Флаг, ЗаказПокупателяОбщий, Сумма, СуммаЗаказа");
	табл.Свернуть("Флаг,ЗаказПокупателяОбщий", "Сумма, СуммаЗаказа");
	
	ТабличноеПоле2.Очистить();
	ТабличноеПоле2 = табл.Скопировать();
КонецПроцедуры

//4. Заполнение расшифровки платежки по Табл2
Функция  заполнитьПлатежку()
	
	ПлатежкаОб = Платежка.ПолучитьОбъект();
    Сумма0 = ПлатежкаОб.СуммаДокумента;//12.04.2018 - доп.контроль общей суммы
	 
	//31.10.2016
	Если ПлатежкаОб.РасшифровкаПлатежа.Количество()>0 тогда
		статьяДДС = ПлатежкаОб.РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств;
	Иначе
		статьяДДС = ПлатежкаОб.СтатьяДвиженияДенежныхСредств;
	КонецЕсли;
	
	СтавкаНДС_2019 = СтавкаНДСнаДату( ТекущаяДата() ); //28.12.2018
	чНДС = ПолучитьСтавкуНДС( СтавкаНДС_2019 );

	ПлатежкаОб.РасшифровкаПлатежа.Очистить();
	Для каждого стр1 из ТабличноеПоле2 Цикл
		Если стр1.флаг тогда
			стр2 = ПлатежкаОб.РасшифровкаПлатежа.Добавить();  
			стр2.Сделка = стр1.ЗаказПокупателяОбщий;
			стр2.ДоговорКонтрагента = стр1.ЗаказПокупателяОбщий.ДоговорКонтрагента;
			стр2.СуммаПлатежа = стр1.СуммаЗаказа;
			
		//31.10.2016
		стр2.СтатьяДвиженияДенежныхСредств = статьяДДС;
			
			стр2.КурсВзаиморасчетов      = 1;
			стр2.КратностьВзаиморасчетов = 1;
			стр2.СуммаВзаиморасчетов = стр2.СуммаПлатежа;
			стр2.СтавкаНДС = СтавкаНДС_2019;
			стр2.СуммаНДС  = окр(стр2.СуммаПлатежа * чНДС/(100+чНДС), 2);
		КонецЕсли;
	КонецЦикла;
	
	//+++( 12.04.2018 - доп.контроль общей суммы
	Сумма1 = ПлатежкаОб.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	Если Сумма1<Сумма0 тогда
		сообщить("Разность "+строка(Сумма1-Сумма0)+"р. добавлена в таблицу БЕЗ сделки!");
			стр2 = ПлатежкаОб.РасшифровкаПлатежа.Добавить();  
			//стр2.Сделка = стр1.ЗаказПокупателяОбщий;
			стр2.ДоговорКонтрагента = ПлатежкаОб.ДоговорКонтрагента;
			стр2.СуммаПлатежа = Сумма1-Сумма0;
		//31.10.2016
		стр2.СтатьяДвиженияДенежныхСредств = статьяДДС;
			
			стр2.КурсВзаиморасчетов = 1;
			стр2.КратностьВзаиморасчетов = 1;
			стр2.СуммаВзаиморасчетов = стр2.СуммаПлатежа;
			стр2.СтавкаНДС = СтавкаНДС_2019;
			стр2.СуммаНДС  = окр(стр2.СуммаПлатежа * чНДС/(100+чНДС), 2);
	КонецЕсли;
	//+++)
	
	Попытка
		ПлатежкаОб.Записать();
		Сообщить("Все данные по выбранным документам на сумму "+строка(Сумма1)
		+"р. в платёжке на сумму "+строка(Сумма0)+"р.("+формат(Сумма1/Сумма0*100,"ЧДЦ=1")
		+"%) успешно записаны в платежку!", СтатусСообщения.Информация);
		Возврат истина;

	Исключение	
		Сообщить("Ошибка при записи платежки: "+ОписаниеОшибки(), СтатусСообщения.Информация);
		Возврат ложь;
	КонецПопытки;	
	
КонецФункции

	соответствиеПодразделений=новый Соответствие;
	соответствиеПодразделений.Вставить("00001"  , Справочники.Подразделения.НайтиПоКоду("00005"));//Яршинторг - Ярославль
	соответствиеПодразделений.Вставить("94036"  , Справочники.Подразделения.НайтиПоКоду("00138"));//Яршинторг Екб- Екб
	соответствиеПодразделений.Вставить("93187"  , Справочники.Подразделения.НайтиПоКоду("00106"));//Яршинторг Рнд- Рнд
	соответствиеПодразделений.Вставить("П000835", Справочники.Подразделения.НайтиПоКоду("00112"));//Яршинторг Спб- Спб
	соответствиеПодразделений.Вставить("93870"  , Справочники.Подразделения.НайтиПоКоду("00133"));//Яршинторг Мск- Мск
