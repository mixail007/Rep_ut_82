Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт
	ОбщийОтчет.ДатаНач = ?(ЗначениеЗаполнено(ОбщийОтчет.ДатаНач),ОбщийОтчет.ДатаНач,Дата(2000,1,1))	;
	ОбщийОтчет.ДатаКон = ?(ЗначениеЗаполнено(ОбщийОтчет.ДатаКон),КонецДня(ОбщийОтчет.ДатаКон),КонецДня(ТекущаяДата()))	;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням=Истина;
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);
КонецПроцедуры

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	
	Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	ЗаказПокупателяРеквизитыЗаказаТК_Регион.Ссылка КАК ЗаказПокупателя,
	        |	ВЫБОР
	        |		КОГДА ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение ПОДОБНО ""%обл%""
	        |				И НЕ ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение ПОДОБНО ""%область%""
	        |			ТОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) + ""асть""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Татарстан республика""
	        |			ТОГДА ""респ Татарстан""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Башкортостан республика""
	        |			ТОГДА ""респ Башкортостан""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Дагестан республика""
	        |			ТОГДА ""респ Дагестан""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Коми республика""
	        |			ТОГДА ""респ Коми""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Карелия республика""
	        |			ТОГДА ""респ Карелия""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Саха /Якутия/ республика""
	        |			ТОГДА ""респ Саха /Якутия/""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Северная Осетия - Алания республика""
	        |			ТОГДА ""респ Северная Осетия - Алания""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Крым республика""
	        |			ТОГДА ""респ Крым""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""г.Москва""
	        |			ТОГДА ""г Москва""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Кабардино-Балкарская республика""
	        |			ТОГДА ""Кабардино-Балкарская Респ""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Ингушетия республика""
	        |			ТОГДА ""Респ Ингушетия""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Марий Эл республика""
	        |			ТОГДА ""респ Марий Эл""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Хакасия республика""
	        |			ТОГДА ""Респ Хакасия""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Мордовия республика""
	        |			ТОГДА ""респ Мордовия""
	        |		КОГДА (ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))) = ""Московская""
	        |			ТОГДА ""Московская область""
	        |		ИНАЧЕ ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Регион.Значение КАК СТРОКА(250))
	        |	КОНЕЦ КАК Регион,
	        |	ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК_Город.Значение КАК СТРОКА(250)) КАК Город
	        |ПОМЕСТИТЬ втЗаказы
	        |ИЗ
	        |	Документ.ЗаказПокупателя.РеквизитыЗаказаТК КАК ЗаказПокупателяРеквизитыЗаказаТК_Регион
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.РеквизитыЗаказаТК КАК ЗаказПокупателяРеквизитыЗаказаТК_Город
	        |		ПО ЗаказПокупателяРеквизитыЗаказаТК_Регион.Ссылка = ЗаказПокупателяРеквизитыЗаказаТК_Город.Ссылка
	        |ГДЕ
	        |	ЗаказПокупателяРеквизитыЗаказаТК_Регион.Ссылка.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродажКолесаТУТ
	        |	И ЗаказПокупателяРеквизитыЗаказаТК_Регион.Поле = ""Region""
	        |	И ЗаказПокупателяРеквизитыЗаказаТК_Город.Поле = ""City""
	        |	И ЗаказПокупателяРеквизитыЗаказаТК_Город.Ссылка.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродажКолесаТУТ
	        |	И ЗаказПокупателяРеквизитыЗаказаТК_Город.Ссылка.ИМСклиентомСогласовано
	        |	И ЗаказПокупателяРеквизитыЗаказаТК_Регион.Ссылка.ИМСклиентомСогласовано
	        |	И ЗаказПокупателяРеквизитыЗаказаТК_Город.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	        |	И ЗаказПокупателяРеквизитыЗаказаТК_Регион.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	втЗаказы.ЗаказПокупателя КАК ЗаказПокупателя,
	        |	втЗаказы.Регион КАК Регион,
	        |	втЗаказы.Город КАК Город,
	        |	ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	        |	ЗаказПокупателяТовары.Количество КАК Количество,
	        |	ЗаказПокупателяТовары.Цена,
	        |	ЗаказПокупателяТовары.Сумма
	        |ПОМЕСТИТЬ втЗаказыАдреса
	        |ИЗ
	        |	втЗаказы КАК втЗаказы
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	        |		ПО втЗаказы.ЗаказПокупателя = ЗаказПокупателяТовары.Ссылка
	        |{ГДЕ
	        |	втЗаказы.Регион,
	        |	втЗаказы.Город,
	        |	ЗаказПокупателяТовары.Номенклатура.*,
	        |	втЗаказы.ЗаказПокупателя.*}
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	втЗаказы.ЗаказПокупателя,
	        |	втЗаказы.Регион,
	        |	втЗаказы.Город,
	        |	ЗаказПокупателяУслуги.Номенклатура,
	        |	ЗаказПокупателяУслуги.Количество,
	        |	ЗаказПокупателяУслуги.Цена,
	        |	ЗаказПокупателяУслуги.Сумма
	        |ИЗ
	        |	втЗаказы КАК втЗаказы
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Услуги КАК ЗаказПокупателяУслуги
	        |		ПО втЗаказы.ЗаказПокупателя = ЗаказПокупателяУслуги.Ссылка
	        |{ГДЕ
	        |	втЗаказы.Регион,
	        |	втЗаказы.Город,
	        |	ЗаказПокупателяУслуги.Номенклатура.*,
	        |	втЗаказы.ЗаказПокупателя.*}
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	втЗаказыАдреса.ЗаказПокупателя КАК ЗаказПокупателя,
	        |	втЗаказыАдреса.Регион КАК Регион,
	        |	втЗаказыАдреса.Город КАК Город,
	        |	СРЕДНЕЕ(втЗаказыАдреса.Цена) КАК Цена,
	        |	СУММА(втЗаказыАдреса.Сумма) КАК Сумма,
	        |	втЗаказыАдреса.Номенклатура,
	        |	СУММА(втЗаказыАдреса.Количество) КАК Количество
	        |{ВЫБРАТЬ
	        |	ЗаказПокупателя.*,
	        |	Регион,
	        |	Город,
	        |	Номенклатура.*,
	        |	Количество,
	        |	Сумма,
	        |	Цена}
	        |ИЗ
	        |	втЗаказыАдреса КАК втЗаказыАдреса
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	втЗаказыАдреса.Регион,
	        |	втЗаказыАдреса.Номенклатура,
	        |	втЗаказыАдреса.Город,
	        |	втЗаказыАдреса.ЗаказПокупателя
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Регион,
	        |	Город
	        |{УПОРЯДОЧИТЬ ПО
	        |	ЗаказПокупателя.*,
	        |	Регион,
	        |	Город,
	        |	Номенклатура.*}
	        |ИТОГИ ПО
	        |	Регион,
	        |	Город,
	        |	ЗаказПокупателя
	        |{ИТОГИ ПО
	        |	ЗаказПокупателя.*,
	        |	Регион,
	        |	Город,
	        |	Номенклатура.*}";
	
	//ПостроительОтчета.Параметры.Вставить("ДатаОтгрузки",НачалоДня(ТекущаяДата()));
	
	СтруктураПредставлениеПолей = Новый Структура(
	"ЗаказПокупателя,
	|Номенклатура,
	|Регион,
	|Город",
	"Заказ покупателя",
	"Номенклатура",
	"Регион",
	"Город");
	
			
	ПостроительОтчета.Текст = Текст;
	ПостроительОтчета.Параметры.Вставить("НаправлениеПродажКолесаТУТ", Справочники.НаправленияПродаж.НайтиПоКоду("16"))	;
	ПостроительОтчета.Параметры.Вставить("ДатаНач", ?(ЗначениеЗаполнено(ОбщийОтчет.ДатаНач),ОбщийОтчет.ДатаНач,Дата(2000,1,1)))	;
	ПостроительОтчета.Параметры.Вставить("ДатаКон", ?(ЗначениеЗаполнено(ОбщийОтчет.ДатаКон),КонецДня(ОбщийОтчет.ДатаКон),КонецДня(ТекущаяДата())))	;
	
	МассивОтбора.Добавить("Регион");
	МассивОтбора.Добавить("Город");
	МассивОтбора.Добавить("Номенклатура");
	МассивОтбора.Добавить("ЗаказПокупателя");
	
	Если ОбщийОтчет.Показатели.Найти("Количество", "Имя") = Неопределено Тогда
		ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество в единицах хранения остатков", Истина, "ЧЦ=15; ЧДЦ=3");
	КонецЕсли;
	Если ОбщийОтчет.Показатели.Найти("Сумма", "Имя") = Неопределено Тогда
		ОбщийОтчет.ЗаполнитьПоказатели("Сумма", "Сумма", Истина, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	Если ОбщийОтчет.Показатели.Найти("Цена", "Имя") = Неопределено Тогда
		ОбщийОтчет.ЗаполнитьПоказатели("Цена", "Цена", Истина, "ЧЦ=15; ЧДЦ=2");
		
	КонецЕсли;

	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
		
	//ПостроительОтчета.ИзмеренияКолонки.Добавить("Склад", "Склад", ТипИзмеренияПостроителяОтчета.Элементы);
	
	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений = Новый Структура("Количество, КоличествоБазовыхЕд", Новый Структура("НоменклатураЕдиницаХраненияОстатков, Номенклатура"), Новый Структура("НоменклатураБазоваяЕдиницаИзмерения, Номенклатура"), Новый Структура);
	
КонецПроцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
		
КонецПроцедуры


ОбщийОтчет.мНазваниеОтчета = "Заказы по регионам ИМ";
ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
ОбщийОтчет.мРежимВводаПериода = 0;