
Процедура ОтчетСформировать(Кнопка) Экспорт
	
		
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт

    //--------------анализ по остаткам на складах БЕЗ учета ОТХ?!--------------------------
	
	Если СезонныйЗаказ.Пустая() тогда
		Предупреждение("Выберите Сезонный заказ покупателя!",10);
		возврат;
	КонецЕсли;	

	
Если ФлагНенулевые тогда
	Макет = ПолучитьМакет("НеПриедет");
Иначе		
	Если ВидСклада = 0 тогда // отчет по филиалам
		Макет = ПолучитьМакет("Отчет");
	Иначе	
		Макет = ПолучитьМакет("Отчет1"); //+++ 13.10.2014   10я столбец
	КонецЕсли;
КонецЕсли;

	Запрос = Новый Запрос;
	
	Запрос.Текст ="ВЫБРАТЬ
	              |	СУММА(ВЫБОР
	              |			КОГДА а.КоличествоВпроизводстве < 0
	              |				ТОГДА 0
	              |			ИНАЧЕ а.КоличествоВпроизводстве
	              |		КОНЕЦ) КАК КоличествоВПроизводстве,
	              |	а.Номенклатура
	              |ПОМЕСТИТЬ ВТ_ТоварыВПроизводстве
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоВпроизводстве,
	              |		ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
	              |		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный
	              |	ИЗ
	              |		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
	              |				,
	              |				НЕ ЗаказПоставщикуСезонный.Транзит
	              |					И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки) КАК а
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	а.Номенклатура
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	СУММА(ВЫБОР
	              |			КОГДА б.КоличествоВпроизводстве < 0
	              |				ТОГДА 0
	              |			ИНАЧЕ б.КоличествоВпроизводстве
	              |		КОНЕЦ) КАК КоличествоВпроизводстве,
	              |	б.Номенклатура
	              |ПОМЕСТИТЬ ВТ_ТоварыВПроизводствеТ
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоВпроизводстве,
	              |		ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
	              |		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный
	              |	ИЗ
	              |		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
	              |				,
	              |				ЗаказПоставщикуСезонный.Транзит
	              |					И (ЗаказПоставщикуСезонный.Подразделение = &Подразделение
	              |						ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	              |					И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки) КАК б
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	б.Номенклатура
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ЗаказыПокупателейСезонныйТовары.НомерСтроки КАК НомерСтроки,
	              |	ЗаказыПокупателейСезонныйТовары.Номенклатура КАК Номенклатура,
	              |	ЗаказыПокупателейСезонныйТовары.Номенклатура.Код КАК Код,
	              |	ЗаказыПокупателейСезонныйТовары.Количество КАК Запланировано,
	              |	ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0) КАК Отгружено,
	              |	ЕСТЬNULL(ЗаказыКонтрагента.КоличествоОстаток, 0)
				  	//+++ 30.07.2014 "поправка" по заказам на перемещение в филиал
				  |//филиал_перемещение        + ЕСТЬNULL(ЗаказыПокупателейНаПеремещение.Количество,0)
				  |КАК ЗаказаноКонтрагентом,
				  
	              |	ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) КАК Заказано,
	              |	ЗаказыПокупателейСезонныйТовары.Количество - ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0) - ЕСТЬNULL(ЗаказыКонтрагента.КоличествоОстаток, 0) 	 
				  //+++ 30.07.2014 "поправка" по заказам на перемещение в филиал
				  |//филиал_перемещение        - ЕСТЬNULL(ЗаказыПокупателейНаПеремещение.Количество,0)
				  |КАК ОсталосьЗаказать,
				  
	              |	ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0) КАК ОстатокНаСкладах,
				  //+++ 13.10.2014
				  |//_ОстаткиФилЯр ЕСТЬNULL(ОстаткиТоваров.КоличествоОстатокЯШТ,0) как СвободныйОстатокЯШТ,
	              |	ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) КАК СвободныйОстаток,
				  
				  |	ЕСТЬNULL(ТоварыВПути.КоличествоОстаток, 0) + ЕстьNULL(ВЫБОР
	              |		КОГДА ВТ_ТоварыВПроизводстве.КоличествоВпроизводстве <= 0
	              |			ТОГДА 0
	              |		ИНАЧЕ ВТ_ТоварыВПроизводстве.КоличествоВпроизводстве
	              |	КОНЕЦ,0) КАК КоличествоЗаказаноУПоставщика,
				  
				  |	ЕСТЬNULL(ТоварыВПутиТ.КоличествоОстаток, 0) + ЕстьNULL(ВЫБОР
	              |		КОГДА ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве <= 0
	              |			ТОГДА 0
	              |		ИНАЧЕ ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве
	              |	КОНЕЦ,0) КАК КоличествоЗаказаноУПоставщика2,
				  
//------------------Не приедет-----------------------------------------------------------------------				  
				 |	ЗаказыПокупателейСезонныйТовары.Количество 
				  |-"+?(ВидОстатков=0, "ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0)",
				          "ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0)
						|//_ОстаткиФилЯр  - ЕСТЬNULL(ОстаткиТоваров.КоличествоОстатокЯШТ,0)
					|+ ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) ")+"
				 
				  |"+?(флажок1,"","- ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)")+"
				  |"+?(флажок2,"","- ЕСТЬNULL(ЗаказыКонтрагента.КоличествоОстаток, 0)")+"
				  //+++ 30.07.2014 "поправка" по заказам на перемещение в филиал
				  |//филиал_перемещение        - ЕСТЬNULL(ЗаказыПокупателейНаПеремещение.Количество,0)
				  
                  |"+?(флажок3,""," - ( ЕСТЬNULL(ТоварыВПути.КоличествоОстаток, 0) + ЕстьNULL(ВЫБОР
	              |		КОГДА ВТ_ТоварыВПроизводстве.КоличествоВпроизводстве <= 0
	              |			ТОГДА 0
	              |		ИНАЧЕ ВТ_ТоварыВПроизводстве.КоличествоВпроизводстве
	              |	КОНЕЦ,0) )")+"
				  
				  |"+?(флажок4,""," - ( ЕСТЬNULL(ТоварыВПутиТ.КоличествоОстаток, 0) + ЕстьNULL(ВЫБОР
	              |		КОГДА ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве <= 0
	              |			ТОГДА 0
	              |		ИНАЧЕ ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве
	              |	КОНЕЦ,0) )")+" как КоличествоНеПриедет 
				  
				  |ИЗ
	              |	(ВЫБРАТЬ
	              |		ЗаказПокупателяСезонныйТовары.НомерСтроки КАК НомерСтроки,
	              |		ЗаказПокупателяСезонныйТовары.Номенклатура КАК Номенклатура,
	              |		ЗаказПокупателяСезонныйТовары.Количество КАК Количество,
	              |		ЗаказПокупателяСезонныйТовары.Ссылка КАК Ссылка
	              |	ИЗ
	              |		Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПокупателяСезонныйТовары
	              |	ГДЕ
	              |		ЗаказПокупателяСезонныйТовары.Ссылка = &Ссылка
	              |		И ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент = &Контрагент) КАК ЗаказыПокупателейСезонныйТовары
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя.Проверен
	          	  //+++ 30.07.2014 чтобы не дублились заказы  Контрагента
				  |//филиал_перемещение  И НЕ (ЗаказПокупателя.ВводитьТолькоПеремещение И НЕ ЗаказПокупателя.транзит)
				  
				  //+++ 08.05.2015
				  |//ОтборПоОдномуДоговору И ДоговорКонтрагента = &ДоговорКонтрагента
				  
				  |					И ДоговорКонтрагента.Владелец = &Контрагент) КАК ЗаказыКонтрагента
				  
	              |		ПО ЗаказыПокупателейСезонныйТовары.Номенклатура = ЗаказыКонтрагента.Номенклатура
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя.Проверен
				  //+++ 03.07.2015 - ограничение только по реализациям за период!?
				 // |И ЗаказПокупателя.дата>=&ДатаНач
	              |					И (&Транзит
	              |							И ЗаказПокупателя.Транзит
	              |							И ЗаказПокупателя.Подразделение = &Подразделение
	              |						ИЛИ НЕ &Транзит
	              |							И НЕ ЗаказПокупателя.Транзит)) КАК ЗаказыПокупателей
	              |		ПО ЗаказыПокупателейСезонныйТовары.Номенклатура = ЗаказыПокупателей.Номенклатура
	              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	              |			ПродажиОбороты.Номенклатура КАК Номенклатура,
	              |			ПродажиОбороты.КоличествоОборот КАК КоличествоОборот
	              |		ИЗ
	              |			РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , ДоговорКонтрагента.Владелец = &Контрагент
				  //+++ 08.05.2015
				  |//ОтборПоОдномуДоговору И ДоговорКонтрагента = &ДоговорКонтрагента
				  
				  |                         					) КАК ПродажиОбороты) КАК ПродажиОбороты
	              |		ПО ЗаказыПокупателейСезонныйТовары.Номенклатура = ПродажиОбороты.Номенклатура
//+++ 13.10.2014 - учет остатков и филиалиала и ярославлся в разных колонках-----------------------------------------------------------------------				  
			      |//ОстаткиФилЯр
				  |//яр_		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, НЕ Склад.ЗапретитьИспользование
				  |//яр_		И НЕ Склад.Транзитный) КАК ОстаткиТоваров
//---------------------------------------------------------------------------------------------------------------------------------				  
	              |		ПО ЗаказыПокупателейСезонныйТовары.Номенклатура = ОстаткиТоваров.Номенклатура
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыВПроизводствеТ КАК ВТ_ТоварыВПроизводствеТ
	              |		ПО ЗаказыПокупателейСезонныйТовары.Номенклатура = ВТ_ТоварыВПроизводствеТ.Номенклатура
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыВПроизводстве КАК ВТ_ТоварыВПроизводстве
	              |		ПО ЗаказыПокупателейСезонныйТовары.Номенклатура = ВТ_ТоварыВПроизводстве.Номенклатура
	              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	              |			ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	              |			СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоОстаток
	              |		ИЗ
	              |			РегистрНакопления.ЗаказыПоставщикам.Остатки( ,
	              |					НЕ ЗаказПоставщику.Транзит
	              |						И Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
				  //27.10.14 Смирнов для новых поступлений не всегда извесна дата поступления и поэтому она какое то время пустая. Их тоже надо учитывать (Егор)
				  |						И ((ЗаказПоставщику.ДатаПоступления >= &ДатаНач и ЗаказПоставщику.ДатаПоступления <= &ДатаКон)) или ЗаказПоставщику.ДатаПоступления=ДатаВремя(1,1,1)) КАК ЗаказыПоставщикамОстатки
	              |		
	              |		СГРУППИРОВАТЬ ПО
	              |			ЗаказыПоставщикамОстатки.Номенклатура) КАК ТоварыВПути
	              |		ПО ЗаказыПокупателейСезонныйТовары.Номенклатура = ТоварыВПути.Номенклатура
	              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	              |			ЗаказыПоставщикамОстаткиТ.Номенклатура КАК Номенклатура,
	              |			СУММА(ЗаказыПоставщикамОстаткиТ.КоличествоОстаток) КАК КоличествоОстаток
	              |		ИЗ
	              |			РегистрНакопления.ЗаказыПоставщикам.Остатки(
	              |					,
	              |					ЗаказПоставщику.Транзит
	              |						И ЗаказПоставщику.Подразделение = &Подразделение
	              |						И Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
				  //27.10.14 Смирнов для новых поступлений не всегда извесна дата поступления и поэтому она какое то время пустая. Их тоже надо учитывать (Егор)
	         		|							И (ЗаказПоставщику.ДатаПоступления >= &ДатаНач) или ЗаказПоставщику.ДатаПоступления=ДатаВремя(1,1,1)) КАК ЗаказыПоставщикамОстаткиТ
	              |		
	              |		СГРУППИРОВАТЬ ПО
	              |			ЗаказыПоставщикамОстаткиТ.Номенклатура) КАК ТоварыВПутиТ
	              |		ПО ЗаказыПокупателейСезонныйТовары.Номенклатура = ТоварыВПутиТ.Номенклатура
	              |
				  |//ФИЛИАЛ_ВЫБОРКА
				  |
				  |"+?(ФлагНенулевые,"ГДЕ
				  |	ЗаказыПокупателейСезонныйТовары.Количество 
				  |-"+?(ВидОстатков=0, "ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0)",
				          "ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0)
						|//_ОстаткиФилЯр  - ЕСТЬNULL(ОстаткиТоваров.КоличествоОстатокЯШТ,0)
					|+ ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) ")+"


				  |"+?(флажок1,"","- ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)")+"
				  |"+?(флажок2,"","- ЕСТЬNULL(ЗаказыКонтрагента.КоличествоОстаток, 0)")+"
				  //+++ 30.07.2014 "поправка" по заказам на перемещение в филиал
				  |//филиал_перемещение        - ЕСТЬNULL(ЗаказыПокупателейНаПеремещение.Количество,0)
				  
                  |"+?(флажок3,""," - ( ЕСТЬNULL(ТоварыВПути.КоличествоОстаток, 0) + ЕстьNULL(ВЫБОР
	              |		КОГДА ВТ_ТоварыВПроизводстве.КоличествоВпроизводстве <= 0
	              |			ТОГДА 0
	              |		ИНАЧЕ ВТ_ТоварыВПроизводстве.КоличествоВпроизводстве
	              |	КОНЕЦ,0) )")+"
				  
				  |"+?(флажок4,""," - ( ЕСТЬNULL(ТоварыВПутиТ.КоличествоОстаток, 0) + ЕстьNULL(ВЫБОР
	              |		КОГДА ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве <= 0
	              |			ТОГДА 0
	              |		ИНАЧЕ ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве
	              |	КОНЕЦ,0) )")+"
				  |>0","")+"
				  |
	              |УПОРЯДОЧИТЬ ПО
	              |	НомерСтроки";
				  
	НачДата = ?(НачДата='00010101', НачалоДня(СезонныйЗаказ.Дата), НачДата);
	КонДата = ?(КонДата='00010101', 
					?(ЗначениеНеЗаполнено(СезонныйЗаказ.ДатаДействияПо), КонецГода(СезонныйЗаказ.Дата), КонецДня(СезонныйЗаказ.ДатаДействияПо)) 
					, КонецДня(КонДата) );

//+++ 17.03.2014
	Запрос.УстановитьПараметр("ДатаНач", НачДата);
	Запрос.УстановитьПараметр("ДатаКон", КонДата);
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );//+++ 02.04.2014 - товары в производстве по действующим заказам поставщикам сезонным
	
	Запрос.УстановитьПараметр("Контрагент", СезонныйЗаказ.Контрагент);
	
//+++ 08.05.2015 - продажи только по 1 договору!
Если НЕ СезонныйЗаказ.Ссылка.ДоговорКонтрагента.Пустая() тогда
	
	Предупреждение("Анализ будет произведен ТОЛЬКО по одному договору, 
				   |указанному в Сезонном заказе покупателя!", 5);
				   
	Запрос.Текст = стрЗаменить(Запрос.Текст, "//ОтборПоОдномуДоговору","");
	Запрос.УстановитьПараметр("ДоговорКонтрагента", СезонныйЗаказ.Ссылка.ДоговорКонтрагента);
КонецЕсли;

	//+++ 14.10.2014
	Филиал = яштПоставщики.ПолучитьМассивФилиалов();
	//Если ВидСклада<Филиал.Количество() тогда
	//	Подразделение=Филиал[ВидСклада];
	//КонецЕсли;	
	Если ВидСклада=0 тогда
		Подразделение=Справочники.Подразделения.ПустаяСсылка();
	ИначеЕсли ВидСклада=1 тогда
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00106");
	ИначеЕсли ВидСклада=2 тогда
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00112");	
	ИначеЕсли ВидСклада=3 Тогда
		//Подразделение=Справочники.Подразделения.НайтиПоКоду("00122");	
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00138");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Транзит", ? (ВидСклада = 0, Ложь, Истина));
	
//+++ 13.10.2014 - для филиалов - еще 1 столбец "Св.Остатки в Ярославле"
	Если ВидСклада = 0 тогда // отчет по филиалам
	Запрос.текст = стрЗаменить(Запрос.текст ,	"//яр_", "");	
Иначе
	Запрос.текст = стрЗаменить(Запрос.текст ,	"//_ОстаткиФилЯр","");

	Запрос.текст = стрЗаменить(Запрос.текст ,	"//ОстаткиФилЯр",
"ЛЕВОЕ СОЕДИНЕНИЕ (
|"+
"ВЫБРАТЬ
|	Ост.Номенклатура,
|	МАКСИМУМ(Ост.КоличествоОстаток) КАК КоличествоОстаток,
|	МАКСИМУМ(Ост.КоличествоОстатокЯШТ) КАК КоличествоОстатокЯШТ
|ИЗ
|	(ВЫБРАТЬ
|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
|		0 КАК КоличествоОстатокЯШТ
|	ИЗ
|		РегистрНакопления.ТоварыНаСкладах.Остатки(
|				,
|				НЕ Склад.ЗапретитьИспользование
|					И (Склад.Транзитный
|						И Склад.Подразделение = &Подразделение)) КАК ТоварыНаСкладахОстатки
|	ГДЕ
|		ТоварыНаСкладахОстатки.КоличествоОстаток > 0
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		ТоварыНаСкладахОстатки.Номенклатура,
|		0,
|		ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
|	ИЗ
|		РегистрНакопления.ТоварыНаСкладах.Остатки(
|				,
|				НЕ Склад.ЗапретитьИспользование
|					И НЕ Склад.Транзитный) КАК ТоварыНаСкладахОстатки
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(, НЕ ЗаказПокупателя.Транзит
|						И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателейОстатки
|			ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
|	ГДЕ
|		ТоварыНаСкладахОстатки.КоличествоОстаток > 0) КАК Ост
|
|СГРУППИРОВАТЬ ПО
|	Ост.Номенклатура"+") КАК ОстаткиТоваров");		
	КонецЕсли;	
		
	//+++ 30.07.2014 
		//для Транзитных Сезонных заказов - делаем заказ для перемещение - ТОЛЬКО для Контрагента = филиал !!!
		// и в "свободных" остатках - вычитаем ВСЕ заказы на перемещение, которые Проделены !
		
	Если СезонныйЗаказ.Транзит тогда // транзитный и автокомплектация >> для перемещения в филиал
		// сразу делается заказ для перемещения на Склад или в Подразделение!
		Если СокрЛП(СезонныйЗаказ.Контрагент.Код) = "93187" 
			или СокрЛП(СезонныйЗаказ.Контрагент.Код) = "П000835"
			или СокрЛП(СезонныйЗаказ.Контрагент.Код) ="94036" // "93801"
			//или Основание.Склад.Транзитный 
			тогда
					
		Запрос.текст = стрЗаменить(запрос.Текст, "//филиал_перемещение", "");
		
//смотрим все проведенные, проделенные заказы на перемещение с ЯШТ 
// на филиал или в транзитный склад!
		Запрос.текст = стрЗаменить(запрос.Текст, "//ФИЛИАЛ_ВЫБОРКА", "ЛЕВОЕ СОЕДИНЕНИЕ 
		|(ВЫБРАТЬ
		|	ЗакПокТов.Номенклатура,
		|	СУММА(ЗакПокТов.Количество) КАК Количество
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗакПокТов
		|ГДЕ
		|	ЗакПокТов.Ссылка.Дата >= &ДатаНач
		|	И ЗакПокТов.Ссылка.Контрагент = &Контрагент
		|	И НЕ ЗакПокТов.Ссылка.ПометкаУдаления
		|	И НЕ ЗакПокТов.Ссылка.транзит
		|	И ЗакПокТов.Ссылка.ВводитьТолькоПеремещение
		|	И ЗакПокТов.Ссылка.Проведен
		|	И ЗакПокТов.Ссылка.Проверен
		|	И ЗакПокТов.Ссылка.Подразделение = &Подразделение
		|//отборПоТранзитномуСкладу И ЗакПокТов.Ссылка.Склад = &Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакПокТов.Номенклатура
		|) как ЗаказыПокупателейНаПеремещение
		|		ПО ЗаказыПокупателейНаПеремещение.Номенклатура = ОстаткиТоваров.Номенклатура");
		
		//Если Основание.Склад.Транзитный 
		//  и не (СокрЛП(Основание.Контрагент.Код) = "93187" 
		//	или СокрЛП(Основание.Контрагент.Код) = "П000835"
		//	или СокрЛП(Основание.Контрагент.Код) = "94036" ) тогда
		//Запрос.текст = стрЗаменить(запрос.Текст, "//отборПоТранзитномуСкладу", "");
		//КонецЕсли;
		
		КонецЕсли;
	КонецЕсли;
	//+++)
	
	Запрос.УстановитьПараметр("Ссылка", СезонныйЗаказ.Ссылка);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
    ОбластьДетальныхЗаписей1= Макет.ПолучитьОбласть("Детали1");

	ТабДок.Очистить();
	
	ОбластьЗаголовок.Параметры.ПредставлениеЗаказа =  Строка (СезонныйЗаказ.Ссылка) +" от "+ СезонныйЗаказ.Ссылка.Контрагент.Наименование;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОстатокНаСкладах = ?(ВидОстатков =0, ВыборкаДетали.ОстатокНаСкладах, ВыборкаДетали.СвободныйОстаток) 
							+ ?(ВидСклада>0, ВыборкаДетали.СвободныйОстатокЯШТ, 0);   //+++ 13.10.2014
		если НЕ ФлагНенулевые и ВыборкаДетали.КоличествоНеПриедет>0 тогда 
			ОбластьДетальныхЗаписей2 = Макет.ПолучитьОбласть("Детали2"); // жирный
			ОбластьДетальныхЗаписей2.Параметры.Заполнить(ВыборкаДетали);
			ОбластьДетальныхЗаписей2.Параметры.КоличествоМожноОтгрузить = Макс(Мин (ВыборкаДетали.ОсталосьЗаказать, ОстатокНаСкладах) ,0)  ;
		Иначе
			ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
			если НЕ ФлагНенулевые тогда
				ОбластьДетальныхЗаписей.Параметры.КоличествоМожноОтгрузить = Макс(Мин (ВыборкаДетали.ОсталосьЗаказать, ОстатокНаСкладах) ,0)  ;
			КонецЕсли;	
		КонецЕсли;	
		
		если НЕ ФлагНенулевые и ВыборкаДетали.КоличествоНеПриедет>0 тогда 
			ТабДок.Вывести(ОбластьДетальныхЗаписей2, ВыборкаДетали.Уровень());
		иначе
			ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
		КонецЕсли;
		
//-------------------Анализ остатков товаров по типоразмеру-------------------		
		Если ВыборкаДетали.КоличествоНеПриедет>0 тогда
		ТабДок.НачатьГруппуСтрок();
 			ВыборкаПоТР = получитьВыборкуПоТР(ВыборкаДетали.Номенклатура, Флажок5);
			kk=0;
			пока ВыборкаПоТР.Следующий() цикл
				ОбластьДетальныхЗаписей1.Параметры.Заполнить(ВыборкаПоТР);
				kk=kk+1;
				ОбластьДетальныхЗаписей1.Параметры.НомерСтроки2 = kk;
			ТабДок.Вывести(ОбластьДетальныхЗаписей1);
			КонецЦикла;
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли;
		//	КонецЕсли;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры


функция получитьВыборкуПоТР(тов1, фл1)
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ  Номенклатура, Код, ОстатокНаСкладах, ОстатокНаСкладах - УжеЗаказано как СвободныйОстаток
	 |ИЗ
	 |(ВЫБРАТЬ
	 |	ТоварыНаСкладахОстатки.Номенклатура,
	 |	ТоварыНаСкладахОстатки.Номенклатура.Код как Код,
	 |	СУММА(ЕстьNull(ТоварыНаСкладахОстатки.КоличествоОстаток,0) ) КАК ОстатокНаСкладах,
	 |	Сумма( ЕстьNull(ЗаказыПок.КоличествоОстаток,0) ) КАК УжеЗаказано
	 |ИЗ
	 |	(выбрать Номенклатура, КоличествоОстаток из РегистрНакопления.ТоварыНаСкладах.Остатки(, НЕ Склад.ЗапретитьИспользование
	 |И "+?(ВидСклада=0,"	НЕ Склад.Транзитный",
	                        "Склад.Транзитный И Склад.Подразделение = &Подразделение")+"
	 
	 |				И Номенклатура <> &тов1
	 |				И Номенклатура.ссылка <> Значение(Справочник.Номенклатура.ПустаяСсылка)
	 |				И Номенклатура.Типоразмер В (&Типоразмеры)
	 |				И Номенклатура.НоменклатурнаяГруппа = &НомГруппа
	 |"+?(фл1,"	И Номенклатура.Производитель = &Производитель","")+") как РегТоварыНаСкладах
	 
	// ----------------------ОТХ по дискам - только для грузовых!---------------------------------
	 |ОБЪЕДИНИТЬ ВСЕ
	 |выбрать Номенклатура, КоличествоОстаток из РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(, НЕ Склад.ЗапретитьИспользование
	 |И Контрагент В (&СписокКонтрОТХ) 
	 |И "+?(ВидСклада=0,"	НЕ Склад.Транзитный",
	 					   "Склад.Транзитный И Склад.Подразделение = &Подразделение")+"
	 
	 |				И Номенклатура <> &тов1
	 |				И Номенклатура.ссылка <> Значение(Справочник.Номенклатура.ПустаяСсылка)
	 |				И Номенклатура.Типоразмер В (&Типоразмеры)
	 |				И Номенклатура.НоменклатурнаяГруппа = &НомГруппа
	 |"+?(фл1,"	И Номенклатура.Производитель = &Производитель","")+") как РегТоварыНаОТХ

	 |) КАК ТоварыНаСкладахОстатки
	 
	   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя.Проверен
	//   |и ЗаказПокупателя.Дата>=&ДатаНач 
	  |И "+?(ВидСклада=0,"НЕ ЗаказПокупателя.Транзит",
	                        "ЗаказПокупателя.Транзит И ЗаказПокупателя.Подразделение = &Подразделение")+"
  
	 |				И Номенклатура <> &тов1
	 |				И Номенклатура.ссылка <> Значение(Справочник.Номенклатура.ПустаяСсылка)
	 |				И Номенклатура.Типоразмер В (&Типоразмеры)
	 |				И Номенклатура.НоменклатурнаяГруппа = &НомГруппа
	 |"+?(фл1,"	И Номенклатура.Производитель = &Производитель","")+"
	          	  //+++ 30.07.2014 чтобы не дублились заказы  Контрагента
				  |//филиал_перемещение  И НЕ (ЗаказПокупателя.ВводитьТолькоПеремещение И НЕ ЗаказПокупателя.транзит)
				  
				  //+++ 08.05.2015
				  |//ОтборПоОдномуДоговору И ДоговорКонтрагента = &ДоговорКонтрагента
				  
				  |					И ДоговорКонтрагента.Владелец = &Контрагент) КАК ЗаказыПок
				  
	              |		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПок.Номенклатура
				  
	 |СГРУППИРОВАТЬ ПО
	 |	ТоварыНаСкладахОстатки.Номенклатура
	 |
	|) как ВыборкаТов
	 //если по остаткам (по умолчанию, то ВСЕ возможные замены!	 
	 |"+?(ВидОстатков=0,"","
	 |ГДЕ (ВыборкаТов.ОстатокНаСкладах - ВыборкаТов.УжеЗаказано) > 0")+"
	// |ГДЕ ТоварыНаСкладахОстатки.КоличествоОстаток - ЗаказыПок.КоличествоОстаток>0")+"
	 |
 	 |Упорядочить по 
	 |ВыборкаТов.Номенклатура.Производитель,
	 |ВыборкаТов.Номенклатура.Типоразмер.Ширина,
	 |ВыборкаТов.Номенклатура.Наименование
	 |";
	 СписокКонтрагентовОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);  //+++ 01.10.2014
	 Запрос.УстановитьПараметр("СписокКонтрОТХ",СписокКонтрагентовОТХ );
	 
	 Запрос.УстановитьПараметр("датаНач", НачДата);
	 Запрос.УстановитьПараметр("датаКон", КонДата);
	 
	 Запрос.УстановитьПараметр("тов1", тов1);
	 
 	 СписокТипоразмеров = новый СписокЗначений;
	 Если тов1.ВидТовара <> перечисления.ВидыТоваров.Диски тогда
		 СписокТипоразмеров.Добавить(тов1.Типоразмер);
	 Иначе
	 //СписокТипоразмеров c учетом +- Ширина 0.5
	 Запрос2 = Новый Запрос;
	 Запрос2.Текст = "ВЫБРАТЬ
	 |	Типоразмеры.Ссылка
	 |ИЗ
	 |	Справочник.Типоразмеры КАК Типоразмеры
	 |ГДЕ
	 |	НЕ Типоразмеры.ПометкаУдаления
	 |	И НЕ Типоразмеры.ЭтоГруппа
	 |	И Типоразмеры.Ширина В (&СписокШирин)
	 |	И Типоразмеры.Высота  = &Высота
	 |	И Типоразмеры.Диаметр = &Диаметр
	 |	И Типоразмеры.КоличествоОтверстий = &КоличествоОтверстий
	 |	И Типоразмеры.PCD   = &PCD
	 |	И Типоразмеры.Вылет = &Вылет
	 |	И Типоразмеры.ДиаметрСтупицы = &ДиаметрСтупицы
	 //--------только по типоразмерам дисков -----------------
	  |	И Типоразмеры.Родитель = &Родитель
	 |";
	 
	 СписокШирин =  новый СписокЗначений;
	 СписокШирин.Добавить( тов1.Типоразмер.Ширина );
	 если сокрЛП(тов1.Типоразмер.Ширина)<>"" тогда
	 	попытка
	 	ш1 = формат( число(тов1.Типоразмер.Ширина)+0.5, "ЧРД=.; ЧН=0; ЧГ=0" );
	 	ш2 = формат( число(тов1.Типоразмер.Ширина)-0.5, "ЧРД=.; ЧН=0; ЧГ=0" );
	 	СписокШирин.Добавить( ш1 );
	 	СписокШирин.Добавить( ш2 );
	    исключение
	    КонецПопытки;
	 КонецЕсли;
	 Запрос2.УстановитьПараметр("СписокШирин",СписокШирин);
	 
	 Запрос2.УстановитьПараметр("Высота",  тов1.Типоразмер.Высота);
	 Запрос2.УстановитьПараметр("Диаметр", тов1.Типоразмер.Диаметр);
	 Запрос2.УстановитьПараметр("КоличествоОтверстий", тов1.Типоразмер.КоличествоОтверстий);
	 Запрос2.УстановитьПараметр("PCD", тов1.Типоразмер.PCD);
	 Запрос2.УстановитьПараметр("Вылет", тов1.Типоразмер.Вылет);
	 Запрос2.УстановитьПараметр("ДиаметрСтупицы", тов1.Типоразмер.ДиаметрСтупицы);
	 Запрос2.УстановитьПараметр("Родитель", тов1.Типоразмер.Родитель);
	 
	 Результат2 = Запрос2.Выполнить();
	 табл = Результат2.Выгрузить();
	 СписокТипоразмеров.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Ссылка") );
	 КонецЕсли;
	 Запрос.УстановитьПараметр("Типоразмеры", СписокТипоразмеров);
		 
	 Запрос.УстановитьПараметр("НомГруппа", тов1.НоменклатурнаяГруппа);  // литые/штамп
	 
	 Запрос.УстановитьПараметр("Производитель", тов1.Производитель);
	 Запрос.УстановитьПараметр("Контрагент", СезонныйЗаказ.Контрагент);
	 
	Подразделение=Справочники.Подразделения.ПустаяСсылка();
	Если ВидСклада=1 тогда
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00106");
	ИначеЕсли ВидСклада=2 тогда
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00112");	
	ИначеЕсли ВидСклада=3 Тогда
		//Подразделение=Справочники.Подразделения.НайтиПоКоду("00122");	
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00138");	
	КонецЕсли;
    Запрос.УстановитьПараметр("Подразделение", Подразделение);
 
	 Если ЗначениеЗаполнено(СезонныйЗаказ.ДоговорКонтрагента) тогда
	 Запрос.Текст = стрЗаменить( Запрос.Текст, "//ОтборПоОдномуДоговору", "");
	 Запрос.УстановитьПараметр("ДоговорКонтрагента",СезонныйЗаказ.ДоговорКонтрагента);
	 КонецЕсли;
  	Если СезонныйЗаказ.Транзит и СокрЛП(СезонныйЗаказ.Контрагент.Код) = "93187" 
			или СокрЛП(СезонныйЗаказ.Контрагент.Код) = "П000835"
			или СокрЛП(СезонныйЗаказ.Контрагент.Код) = "94036" //"93801"
			//или Основание.Склад.Транзитный 
			тогда
		Запрос.текст = стрЗаменить(запрос.Текст, "//филиал_перемещение", "");
	КонецЕсли;
	
	 Результат = Запрос.Выполнить();
	 Выборка1 = Результат.Выбрать();
	 
	возврат Выборка1;
	 
КонецФункции	



Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	// не даем выбирать другие сезонные заказы
	//Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
	//	ЭлементыФормы.СезонныйЗаказ.Доступность = Ложь;
	//КонецЕсли;	
	
	ФлагНенулевые = Истина;
	
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если Найти (Элемент.ТекущаяОбласть.Имя, "C13") > 0 Тогда   // Колонка "Товары в пути"
		СтандартнаяОбработка=Ложь;
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	вложенный.ДатаПоступления КАК ДатаПоступления,
		             |	вложенный.ЗаказПоставщику,
		             |	вложенный.ОтветственноеЛицо,
		             |	вложенный.Номенклатура КАК Номенклатура,
		             |	СУММА(вложенный.КоличествоОстаток) КАК КоличествоОстаток
		             |ИЗ
		             |	(ВЫБРАТЬ
		             |		ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступления,
		             |		ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
		             |		ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
		             |		ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		             |		ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
		             |	ИЗ
		             |		РегистрНакопления.ЗаказыПоставщикам.Остатки(
		             |				,
		             |				Номенклатура = &Номенклатура
		             |					И НЕ ЗаказПоставщику.Транзит
		             |					И ((ЗаказПоставщику.ДатаПоступления <= &ДатаКон И ЗаказПоставщику.ДатаПоступления >= &ДатаНач) или ЗаказПоставщику.ДатаПоступления=ДатаВремя(1,1,1)) ) КАК ЗаказыПоставщикамОстатки
		             |	
		             |	ОБЪЕДИНИТЬ ВСЕ
		             |	
		             |	ВЫБРАТЬ
		             |		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо,
		             |		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный,
		             |		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДоговорКонтрагента.ОтветственноеЛицо,
		             |		ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
		             |		ВЫБОР
		             |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток <= 0
		             |				ТОГДА 0
		             |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		             |		КОНЕЦ
		             |	ИЗ
		             |		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
		             |				,
		             |				Номенклатура = &Номенклатура
		             |					И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата 
		             |					И НЕ ЗаказПоставщикуСезонный.Транзит) КАК ЗаказыПоставщикамСезонныеОстатки) КАК вложенный
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	вложенный.ОтветственноеЛицо,
		             |	вложенный.ЗаказПоставщику,
		             |	вложенный.Номенклатура,
		             |	вложенный.ДатаПоступления
		             |
		             |УПОРЯДОЧИТЬ ПО
		             |	вложенный.ДатаПоступления
		             |ИТОГИ
		             |	МАКСИМУМ(ДатаПоступления),
		             |	СУММА(КоличествоОстаток)
		             |ПО
		             |	Номенклатура";
		
		//Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
		Запрос.УстановитьПараметр("ПустаяДата", '00010101');
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачДата) );
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонДата));
		Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );
		
		Запрос.УстановитьПараметр("Номенклатура", Расшифровка); 		
		
		
			
		//ТаблицаТоварыВПути=Запрос.Выполнить().Выгрузить();
		//ТаблицаТоварыВПути.ВыбратьСтроку();
		ТабДок = Новый ТабличныйДокумент;
		
		ВыборкаИтого=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Макет=ПолучитьМакет("ТоварыВПути");	
		ОбластьИтого=Макет.ПолучитьОбласть("Итого");
		
	Если ВыборкаИтого.Количество()>0 Тогда
			ВыборкаИтого.Следующий(); // итоги есть!
			ОбластьИтого.Параметры.ДатаПоступления = ВыборкаИтого.ДатаПоступления;
			ОбластьИтого.Параметры.КоличествоОстаток = ВыборкаИтого.КоличествоОстаток;
			ОбластьИтого.Параметры.Комментарий =ВыборкаИтого.Номенклатура.Код;
			ОбластьИтого.Параметры.ЗаказПоставщику = ВыборкаИтого.Номенклатура;
		
		Выборка	= ВыборкаИтого.Выбрать();
		
		Если Выборка.Количество()>0 Тогда
			ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
			ТабДок.Вывести(ОбластьШапка);
			Пока Выборка.Следующий() Цикл
				ОбластьДетали=Макет.ПолучитьОбласть("Детали");
				ОбластьДетали.Параметры.Заполнить(Выборка);
				ОбластьДетали.Параметры.Комментарий=Выборка.ЗаказПоставщику.Комментарий;
				ТабДок.Вывести(ОбластьДетали);
			КонецЦикла;	
		КонецЕсли; //Выборка
		
	ТабДок.Вывести(ОбластьИтого);
	КонецЕсли; //ВыборкаИтого
		
		ТабДок.ТолькоПросмотр=Истина;		
		ТабДок.Показать();
		
	КонецЕсли;	
	
	Если Найти (Элемент.ТекущаяОбласть.Имя, "C14") > 0 Тогда   // Колонка "Товары в пути ТРАНЗИТ"
		СтандартнаяОбработка=Ложь;
		Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступления,
			             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
			             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
			             |	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
			             |	СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоОстаток
			             |ИЗ
			             |	РегистрНакопления.ЗаказыПоставщикам.Остатки(
			             |			,
			             |			Номенклатура = &Номенклатура
			             |				И ЗаказПоставщику.Транзит
			             |				И ЗаказПоставщику.ДатаПоступления <= &ДатаКон
			             |				И (ЗаказПоставщику.Подразделение = &Подразделение
			             |					ИЛИ ЗаказПоставщику.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))) КАК ЗаказыПоставщикамОстатки
			             |
			             |СГРУППИРОВАТЬ ПО
			             |	ЗаказыПоставщикамОстатки.Номенклатура,
			             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
			             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления,
			             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо
			             |
			             |ОБЪЕДИНИТЬ ВСЕ
			             |
			             |ВЫБРАТЬ
			             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо,
			             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный,
			             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДоговорКонтрагента.ОтветственноеЛицо,
			             |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
			             |	СУММА(ВЫБОР
			             |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток <= 0
			             |				ТОГДА 0
			             |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
			             |		КОНЕЦ)
			             |ИЗ
			             |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
			             |			,
			             |			ЗаказПоставщикуСезонный.Транзит
			             |				И Номенклатура = &Номенклатура
			             |				И ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата
			             |				И (ЗаказПоставщикуСезонный.Подразделение = &Подразделение
			             |					ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))) КАК ЗаказыПоставщикамСезонныеОстатки
			             |
			             |СГРУППИРОВАТЬ ПО
			             |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
			             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный,
			             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо,
			             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДоговорКонтрагента.ОтветственноеЛицо
			             |
			             |УПОРЯДОЧИТЬ ПО
			             |	ДатаПоступления
			             |ИТОГИ
			             |	МАКСИМУМ(ДатаПоступления),
			             |	СУММА(КоличествоОстаток)
			             |ПО
			             |	Номенклатура";
		
	//	Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачДата) );
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонДата));
		Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );//+++ 02.04.2014
		
	//+++ 14.10.2014
	Филиал = яштПоставщики.ПолучитьМассивФилиалов();
	Если ВидСклада<Филиал.Количество() тогда
		Подразделение=Филиал[ВидСклада];
	КонецЕсли;	
	//Если ВидСклада=0 тогда
	//		Подразделение=Справочники.Подразделения.ПустаяСсылка();
	//	ИначеЕсли ВидСклада=1 тогда
	//		Подразделение=Справочники.Подразделения.НайтиПоКоду("00106");
	//	ИначеЕсли ВидСклада=2 тогда
	//		Подразделение=Справочники.Подразделения.НайтиПоКоду("00112");	
	//	ИначеЕсли ВидСклада=3 Тогда
	//		Подразделение=Справочники.Подразделения.НайтиПоКоду("00122");	
	//	КонецЕсли;
		Запрос.УстановитьПараметр("Подразделение", Подразделение);

		Запрос.УстановитьПараметр("Номенклатура", Расшифровка); 
		
			
		//ТаблицаТоварыВПути=Запрос.Выполнить().Выгрузить();
		//ТаблицаТоварыВПути.ВыбратьСтроку();
		ТабДок = Новый ТабличныйДокумент;
		
		ВыборкаИтого=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Макет=ПолучитьМакет("ТоварыВПути");	
		ОбластьИтого=Макет.ПолучитьОбласть("Итого");
		
	Если ВыборкаИтого.Количество()>0 Тогда
			ВыборкаИтого.Следующий(); // итоги есть!
			ОбластьИтого.Параметры.ДатаПоступления = ВыборкаИтого.ДатаПоступления;
			ОбластьИтого.Параметры.КоличествоОстаток = ВыборкаИтого.КоличествоОстаток;
			ОбластьИтого.Параметры.Комментарий =ВыборкаИтого.Номенклатура.Код;
			ОбластьИтого.Параметры.ЗаказПоставщику = ВыборкаИтого.Номенклатура;

		
		Выборка	= ВыборкаИтого.Выбрать();
		
		Если Выборка.Количество()>0 Тогда
			ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
			ТабДок.Вывести(ОбластьШапка);
			Пока Выборка.Следующий() Цикл
				ОбластьДетали=Макет.ПолучитьОбласть("Детали");
				ОбластьДетали.Параметры.Заполнить(Выборка);
				ОбластьДетали.Параметры.Комментарий=Выборка.ЗаказПоставщику.Комментарий;
				ТабДок.Вывести(ОбластьДетали);
			КонецЦикла;	
		КонецЕсли; //Выборка
		
		ТабДок.Вывести(ОбластьИтого);
		
	КонецЕсли; //ВыборкаИтого
		
		ТабДок.ТолькоПросмотр=Истина;		
		ТабДок.Показать();
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура СезонныйЗаказПриИзменении(Элемент)
	НачДата = СезонныйЗаказ.Дата;
	КонДата = СезонныйЗаказ.ДатаДействияПо;
	Если КонДата='00010101' тогда
		КонДата=ТекущаяДата();
	КонецЕсли;	
КонецПроцедуры

Процедура СезонныйЗаказНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") 
		и не ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") 
	Тогда
	СтандартнаяОбработка = ложь;
	форма = документы.ЗаказПокупателяСезонный.ПолучитьФормуВыбора();
	форма.ДокументСписок.Отбор.Подразделение.Использование = Истина;
	форма.ДокументСписок.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
	форма.ДокументСписок.Отбор.Подразделение.Значение =ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
	
	форма.ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = ЛОЖЬ;
	СезонныйЗаказ = форма.ОткрытьМодально();
	КонецЕсли;	

КонецПроцедуры
