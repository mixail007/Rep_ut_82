Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	//ЗаполнитьНачальныеНастройкиПоМакету(ПолучитьМакет("ПараметрыОтчетовПродажиКомпании"), СтруктураПредставлениеПолей, МассивОтбора, ОбщийОтчет, "СписокКроссТаблица");
	Текст = "ВЫБРАТЬ
	        |	СУММА(ТаблицаРегистра.КоличествоОборот) КАК Количество,
	        |	СУММА(ТаблицаРегистра.КоличествоОборот * ТаблицаРегистра.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоБазовыхЕд,
	        |	СУММА(ТаблицаРегистра.СтоимостьОборот) КАК Стоимость,
	        |	СУММА(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаРегистра.КоличествоОборот * ТаблицаРегистра.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК Себестоимость,
	        |	ВЫБОР
	        |		КОГДА ЦеныНоменклатурыСрезПоследних.Цена ЕСТЬ NULL 
	        |			ТОГДА 0
	        |		ИНАЧЕ СУММА(ВЫБОР
	        |					КОГДА ТаблицаРегистра.СтоимостьОборот ЕСТЬ NULL 
	        |						ТОГДА 0
	        |					ИНАЧЕ ТаблицаРегистра.СтоимостьОборот
	        |				КОНЕЦ) - ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаРегистра.КоличествоОборот
	        |	КОНЕЦ КАК ВаловаяПрибыль,
	        |	СУММА(ВЫБОР
	        |			КОГДА ЦеныНоменклатурыСрезПоследних.Цена ЕСТЬ NULL 
	        |				ТОГДА 0
	        |			ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	        |						КОГДА ТаблицаРегистра.СтоимостьОборот <> 0
	        |							ТОГДА 100 * (ТаблицаРегистра.СтоимостьОборот - ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаРегистра.КоличествоОборот * ТаблицаРегистра.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) / ТаблицаРегистра.СтоимостьОборот
	        |						ИНАЧЕ 0
	        |					КОНЕЦ КАК ЧИСЛО(15, 2))
	        |		КОНЕЦ) КАК РентабельностьПродаж,
	        |	СУММА(ВЫБОР
	        |			КОГДА ЦеныНоменклатурыСрезПоследних.Цена ЕСТЬ NULL 
	        |				ТОГДА 0
	        |			ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	        |						КОГДА ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаРегистра.КоличествоОборот * ТаблицаРегистра.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент <> 0
	        |							ТОГДА 100 * (ТаблицаРегистра.СтоимостьОборот - ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаРегистра.КоличествоОборот * ТаблицаРегистра.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) / (ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаРегистра.КоличествоОборот * ТаблицаРегистра.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент)
	        |						ИНАЧЕ 0
	        |					КОНЕЦ КАК ЧИСЛО(15, 2))
	        |		КОНЕЦ) КАК ПроцентНаценки,
	        |	ЦеныНоменклатурыСрезПоследних.Цена
	        |{ВЫБРАТЬ
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	ТаблицаРегистра.Период,
	        |	ТаблицаРегистра.Регистратор.* КАК Регистратор,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ДЕНЬ)) КАК ПериодДень,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, МЕСЯЦ)) КАК ПериодМесяц,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, КВАРТАЛ)) КАК ПериодКвартал,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ГОД)) КАК ПериодГод}
	        |ИЗ
	        |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК ТаблицаРегистра
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаКон, ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
	        |		ПО ТаблицаРегистра.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	        |{ГДЕ
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	ТаблицаРегистра.Период,
	        |	ТаблицаРегистра.Регистратор.* КАК Регистратор}
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец,
	        |	ТаблицаРегистра.Номенклатура,
	        |	ЦеныНоменклатурыСрезПоследних.Цена,
	        |	ТаблицаРегистра.КоличествоОборот
	        |{УПОРЯДОЧИТЬ ПО
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	ТаблицаРегистра.Период,
	        |	ТаблицаРегистра.Регистратор.* КАК Регистратор}
	        |ИТОГИ
	        |	СУММА(Количество),
	        |	СУММА(КоличествоБазовыхЕд),
	        |	СУММА(Стоимость),
	        |	СУММА(Себестоимость),
	        |	СУММА(ВаловаяПрибыль),
	        |	ВЫБОР
	        |		КОГДА СУММА(Стоимость) > 0
	        |			ТОГДА СУММА(ВаловаяПрибыль) / СУММА(Стоимость) * 100
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК РентабельностьПродаж,
	        |	ВЫБОР
	        |		КОГДА СУММА(Себестоимость) > 0
	        |			ТОГДА СУММА(ВаловаяПрибыль) / СУММА(Себестоимость) * 100
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК ПроцентНаценки
	        |ПО
	        |	ОБЩИЕ
	        |{ИТОГИ ПО
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ДЕНЬ)) КАК ПериодДень,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, МЕСЯЦ)) КАК ПериодМесяц,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, КВАРТАЛ)) КАК ПериодКвартал,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ГОД)) КАК ПериодГод}
	        |АВТОУПОРЯДОЧИВАНИЕ";
	СтруктураПредставлениеПолей = Новый Структура("
	|Количество,
	|КоличествоБазовыхЕд,
	|Стоимость,
	|Себестоимость,
	|ВаловаяПрибыль,
	|РентабельностьПродаж,
	|ПроцентНаценки,
	|Покупатель,
	|ДоговорКонтрагента,
	|ЗаказПокупателя,
	|НоменклатураБазоваяЕдиницаИзмерения,
	|ХарактеристикаНоменклатуры,
	|Подразделение,
	|ПериодДень,
	|ПериодНеделя,
	|ПериодМесяц,
	|ПериодКвартал,
	|ПериодГод", 
	"Количество товара в единицах хранения остатков",
	"Количество товара в базовых единицах",
	"Продажная стоимость",
	"Себестоимость",
	"Валовая прибыль",
	"Рентабельность продаж, %",
	"Процент наценки",
	"Покупатель",
	"Договор контрагента",
	"Заказ покупателя",
	"Базовая единица измерения",
	"Характеристика номенклатуры",
	"Подразделение",
	"По дням",
	"По неделям",
	"По месяцам",
	"По кварталам",
	"По годам");
	
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда
	
	    ТекстПоляСвойств= "";
		ТекстПоляКатегорий = "";

		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
		
		ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, Текст, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,,,,,,ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);
				
		ДобавитьВТекстСвойстваОбщие(Текст, ТекстПоляСвойств, "//ОБЩИЕ_СВОЙСТВА");
      // для избежания двойственности поля Номенклатура в запросе
	    Текст=СтрЗаменить(Текст,"ИНАЧЕ Номенклатура","ИНАЧЕ ТаблицаРегистраСебестоимость.Номенклатура");
	//	УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, ОбщийОтчет.мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;
	
	ПостроительОтчета.Текст = Текст;
	ПостроительОтчета.Параметры.Вставить("ТипЦен", ТипЦен);
 	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Покупатель");
	МассивОтбора.Добавить("Номенклатура");
	МассивОтбора.Добавить("Подразделение");
	
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Истина;
	
	ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество в единицах хранения", Истина, "ЧЦ=15; ЧДЦ=3");
	//ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество в базовых единицах", Истина, "ЧЦ=15; ЧДЦ=3");
	ОбщийОтчет.ЗаполнитьПоказатели("Стоимость", "Продажная стоимость в валюте упр. учета", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("Себестоимость", "Себестоимость в валюте упр. учета", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ВаловаяПрибыль", "Валовая прибыть в валюте упр. учета", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("РентабельностьПродаж", "Рентабельность продаж, %", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ПроцентНаценки", "Процент наценки", Истина, "ЧЦ=15; ЧДЦ=2");

	ОбщийОтчет.мНазваниеОтчета = "Отчет по валовой прибыли";
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Установим дату начала отчета
	Если ЗначениеНеЗаполнено(ОбщийОтчет.ДатаНач) Тогда
		Если Не ЗначениеНеЗаполнено(глТекущийПользователь) Тогда
			ОбщийОтчет.ДатаНач = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		
		//+++ 26.06.2013 - ограничение по подразделению
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
           СообщитьОбОшибке("У вас недостаточно прав для просмотра данного отчета!");
		   Возврат;
	    КонецЕсли;
	   
		ДоступноеПодразделение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
    	ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.Значение = ДоступноеПодразделение;
		ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.Использование = Истина;
		ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
	КонецЕсли;
	
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ТипЦен", ТипЦен);

	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("РентабельностьПродаж", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ПроцентНаценки", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПРоцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "Продажи";