перем Command;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Выгрузить();
КонецПроцедуры

Процедура Выгрузить()
	пСеанс = ВнешниеИсточникиДанных.ВнешнийИсточникДанныхЗвонки.ПолучитьОбщиеПараметрыСоединения();
	
	Если НЕ пСеанс.СУБД = "MSSQLServer" Тогда
		Возврат;
	КонецЕсли;
	
	Connection  = Новый COMОбъект("ADODB.Connection");
	Command  = Новый COMОбъект("ADODB.Command");
	RecordSet  = Новый COMОбъект("ADODB.RecordSet");
    Connection.Open(СокрЛП(пСеанс.СтрокаСоединения));
	Command.ActiveConnection   = Connection;
	
	
	Сервер="192.168.254.211";
	//Сервер="83.102.251.110";
	БД="asteriskcdrdb";
	Пользователь="yarshintorg";
	Пароль="asteriskcdr";
	Соединение = Новый COMОбъект("ADODB.Connection");
	Соединение_param = "DRIVER={MySQL ODBC 3.51 Driver};OPTION=3;DATABASE="+БД+";PWD="+Пароль+";PORT=3306;SERVER="+Сервер+";UID="+Пользователь+";CHARSET=UTF8;";
	Попытка
		Соединение.Open(Соединение_param);
		//Сообщить("Соединение осуществлено в "+ТекущаяДата());
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Предупреждение("Невозможно установить соединение."+Символы.ПС+ОписаниеОшибки);  
		Возврат;
	КонецПопытки;

	
	Если ЗначениеЗаполнено(ДатаВремяПоследнихЗаписей) тогда
		ДатаВремя= ДатаВремяПоследнихЗаписей;
	Иначе
		ПоследняяЗаписьВСКЛ=ПолучитьПоследнююЗаписьВСКЛ();
		ДатаВремя=ПоследняяЗаписьВСКЛ-20*60;//допустим человек разговаривал 5 минут и положил трубку, 
										 //в calldade запишется текущее время - продолжительность разговора, 
										 //т.е. это будет не последний звонок
	КонецЕсли;
	
	ТекстЗапроса = "select
	|		calldate,
	|		src,
	|		dst,
	|		billsec,
	|       lastapp,
	|		disposition,
	|		uniqueid
	|	from cdr
	//|  where (src='"+Номер+"' or dst='"+Номер+"') and calldate BETWEEN STR_TO_DATE('"+НачПериода+"', '%d.%m.%Y %H:%i:%s')
	|  where calldate >= STR_TO_DATE('"+ДатаВремя+"', '%d.%m.%Y %H:%i:%s')
	| ORDER BY calldate;";
	НаборЗаписей = Новый COMОбъект("ADODB.RecordSet"); 
	НаборЗаписей.ActiveConnection = Соединение;
	НаборЗаписей.Open(ТекстЗапроса);
	Начало=ТекущаяДата();
	Запись=новый Структура("calldate,src,dst,billsec,lastapp,disposition,uniqueid");
	тзПоследниеЗаписи=новый таблицаЗначений;
	тзПоследниеЗаписи.Колонки.Добавить("calldate",Новый ОписаниеТипов("Дата"));
	тзПоследниеЗаписи.Колонки.Добавить("src",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(80)));
	тзПоследниеЗаписи.Колонки.Добавить("dst",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(80)));
	тзПоследниеЗаписи.Колонки.Добавить("billsec",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(6,0)));
	тзПоследниеЗаписи.Колонки.Добавить("lastapp",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(80)));
	тзПоследниеЗаписи.Колонки.Добавить("disposition",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(45)));
    тзПоследниеЗаписи.Колонки.Добавить("uniqueid",Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(80)));

	Пока не НаборЗаписей.Eof() Цикл
		Запись.calldate=НаборЗаписей.Fields("calldate").Value;
		Запись.src=НаборЗаписей.Fields("src").Value;
        Запись.dst=НаборЗаписей.Fields("dst").Value;
        Запись.billsec=НаборЗаписей.Fields("billsec").Value;
		Запись.lastapp=НаборЗаписей.Fields("lastapp").Value;
		Запись.disposition=НаборЗаписей.Fields("disposition").Value;
		Запись.uniqueid=НаборЗаписей.Fields("uniqueid").Value;
		
		нстр=тзПоследниеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,Запись);
		НаборЗаписей.MoveNext();

	КонецЦикла;
	//тзПоследниеЗаписи.ВыбратьСтроку();
	тзНовыеЗаписи=НайтиНовыеЗаписи(тзПоследниеЗаписи,ДатаВремя);
	//тзНовыеЗаписи.ВыбратьСтроку();

	ЗаписатьЗаписи(тзНовыеЗаписи);
	//НайтиЗаписьВЖурнале(Запись);
	НаборЗаписей.Close();
	Соединение.Close();
    Connection.Close();
	ДатаВремяПоследнихЗаписей=Дата(1,1,1);
КонецПроцедуры	

Функция ЗаписатьЗаписи(НовыеЗаписи)
	к=0;
	Для каждого стр из НовыеЗаписи Цикл
		
		ЗапросSQL=ПолучитьЗапросДобавления(стр);
		
		Попытка
			Command.CommandText = ЗапросSQL;
			RecordSet = Command.Execute();
			к=к+1;
		Исключение
			Ошибка=ОписаниеОшибки();
			Сообщить(Ошибка);
			прервать;
		КонецПопытки;
	КонецЦикла;
	Сообщить("Записано "+к+" записей.");
	
	Для Каждого стр из НовыеЗаписи Цикл
		Если ПроверитьНаличиеАнглийскихБукв(стр.dst) = Ложь и ПроверитьНаличиеАнглийскихБукв(стр.src) = Ложь ТОгда
		запись = РегистрыСведений.ЖурналЗвонков.СоздатьМенеджерЗаписи();
		запись.Дата = стр.calldate;
		запись.НомерСотрудника = ?(СтрДлина(стр.src) > 3,стр.dst,стр.src);
		запись.НомерАбонента = ?(СтрДлина(стр.src) > 3,стр.src,стр.dst);
		запись.ПоискАбонент = прав(запись.НомерАбонента,6);
		запись.ПоискСотрудник = прав(запись.НомерСотрудника,6);
		запись.ДлительностьЗвонка = стр.billsec;
	    //запись.Сотудник = стр.Сотрудник;
	    //запись.Контрагент = стр.Контрагент;
		запись.Исход_Вход = ?(СтрДлина(стр.src) > 3,"Входящий","Исходящий");
		запись.Записать();
		КонецЕсли;
	КонецЦикла;

КонецФункции	

Функция ПолучитьЗапросДобавления(Запись)
 
 мДанные = Запись;
 тз=Запись.Владелец();
 СтрокаПоля = "";
 СтрокаДанные = "";
 
 Для Каждого Колонка Из тз.Колонки Цикл
	 СтрокаПоля = СтрокаПоля + ?(ПустаяСтрока(СтрокаПоля), " (", ", ") + Колонка.Имя;
	 Значение=мДанные[Колонка.Имя];
	 Если Колонка.Имя="billsec" тогда
		 Значение=СтрЗаменить(Значение," ","");
	 КонецЕсли;	  
	 СтрокаДанные = СтрокаДанные + ?(ПустаяСтрока(СтрокаДанные), " VALUES (", ", ") + "'" + Значение + "'";
 КонецЦикла;
 
 СтрокаПоля = СтрокаПоля + ")";
 СтрокаДанные = СтрокаДанные + ")";
 ЗапросSQL = "INSERT INTO " + " dbo.ЖурналЗвонков " + СтрокаПоля + СтрокаДанные;
 //ЭтаФорма.ТекстЗапроса=ЗапросSQL; 
 Возврат ЗапросSQL; 
 
КонецФункции


Функция НайтиНовыеЗаписи(ПоследниеЗаписи,ДатаВремя)
	Запрос=новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	dbo_ЖурналЗвонков.calldate,
	|	dbo_ЖурналЗвонков.src,
	|	dbo_ЖурналЗвонков.dst,
	|	dbo_ЖурналЗвонков.uniqueid,
	|	dbo_ЖурналЗвонков.disposition,
	|	dbo_ЖурналЗвонков.lastapp,
	|	dbo_ЖурналЗвонков.billsec,
	|	dbo_ЖурналЗвонков.note
	|ИЗ
	|	ВнешнийИсточникДанных.ВнешнийИсточникДанныхЗвонки.Таблица.dbo_ЖурналЗвонков КАК dbo_ЖурналЗвонков
	|ГДЕ
	|	dbo_ЖурналЗвонков.calldate >= &ДатаВремя";
	Запрос.УстановитьПараметр("ДатаВремя",ДатаВремя);
	Записи=Запрос.Выполнить().Выгрузить();
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	Записи.calldate,
	|	Записи.src,
	|	Записи.dst,
	|	Записи.uniqueid,
	|	Записи.disposition,
	|	Записи.lastapp,
	|	Записи.billsec
	|ПОМЕСТИТЬ втЗаписи
	|ИЗ
	|	&Записи КАК Записи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследниеЗаписи.calldate,
	|	ПоследниеЗаписи.src,
	|	ПоследниеЗаписи.dst,
	|	ПоследниеЗаписи.uniqueid,
	|	ПоследниеЗаписи.disposition,
	|	ПоследниеЗаписи.lastapp,
	|	ПоследниеЗаписи.billsec
	|ПОМЕСТИТЬ втПоследниеЗаписи
	|ИЗ
	|	&ПоследниеЗаписи КАК ПоследниеЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПоследниеЗаписи.calldate,
	|	втПоследниеЗаписи.src,
	|	втПоследниеЗаписи.dst,
	|	втПоследниеЗаписи.uniqueid,
	|	втПоследниеЗаписи.disposition,
	|	втПоследниеЗаписи.lastapp,
	|	втПоследниеЗаписи.billsec
	|ИЗ
	|	втПоследниеЗаписи КАК втПоследниеЗаписи
	|ГДЕ
	|	НЕ (втПоследниеЗаписи.calldate, втПоследниеЗаписи.src, втПоследниеЗаписи.dst, втПоследниеЗаписи.uniqueid, втПоследниеЗаписи.disposition, втПоследниеЗаписи.lastapp, втПоследниеЗаписи.billsec) В
	|				(ВЫБРАТЬ
	|					втЗаписи.calldate,
	|					втЗаписи.src,
	|					втЗаписи.dst,
	|					втЗаписи.uniqueid,
	|					втЗаписи.disposition,
	|					втЗаписи.lastapp,
	|					втЗаписи.billsec
	|				ИЗ
	|					втЗаписи КАК втЗаписи)";
	Запрос.УстановитьПараметр("Записи",Записи);
	Запрос.УстановитьПараметр("ПоследниеЗаписи",ПоследниеЗаписи);
	НовыеЗаписи=Запрос.Выполнить().Выгрузить();
	Возврат НовыеЗаписи;
КонецФункции	

Функция ПолучитьПоследнююЗаписьВСКЛ()
	Запрос=новый Запрос;
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	|	dbo_ЖурналЗвонков.calldate КАК calldate
	|ИЗ
	|	ВнешнийИсточникДанных.ВнешнийИсточникДанныхЗвонки.Таблица.dbo_ЖурналЗвонков КАК dbo_ЖурналЗвонков
	|
	|УПОРЯДОЧИТЬ ПО
	|	calldate УБЫВ";
	Рез=Запрос.Выполнить().Выгрузить();
	Если Рез.Количество()>0 тогда
		ДатаВремя=Рез[0].calldate;
	Иначе
		ДатаВремя=Дата('20000101000000');
	КонецЕсли;
	Возврат ДатаВремя;
КонецФункции	

Функция НайтиЗаписьВЖурнале(запись)
	ЕстьЗапись =ложь;
	Запрос=новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	1 КАК Поле1
	|ИЗ
	|	ВнешнийИсточникДанных.ВнешнийИсточникДанныхЗвонки.Таблица.dbo_ЖурналЗвонков КАК dbo_ЖурналЗвонков
	|ГДЕ
	|	dbo_ЖурналЗвонков.calldate = &calldate
	|	И dbo_ЖурналЗвонков.src = &src
	|	И dbo_ЖурналЗвонков.dst = &dst
	|	И dbo_ЖурналЗвонков.uniqueid = &uniqueid
	|	И dbo_ЖурналЗвонков.disposition = &disposition
	|	И dbo_ЖурналЗвонков.lastapp = &lastapp
	|	И dbo_ЖурналЗвонков.billsec = &billsec";
	Парам=Запрос.НайтиПараметры();
	Для Каждого Пар из Парам Цикл
		Запрос.УстановитьПараметр(Пар.Имя,Запись[Пар.Имя]);
	КонецЦикла;	
	Рез=Запрос.Выполнить().Выбрать();
	Если Рез.Количество()>0 Тогда
		ЕстьЗапись=истина;
	КонецЕсли;	 
	Возврат ЕстьЗапись;
КонецФункции	

Функция ПолучитьЗапросSELECT(Запись)
 
 мДанные = Запись;

 СтрокаПоля = "";
 СтрокаДанные = "";
 СтрокаОтбора="";
 
 Для Каждого мПоле Из мДанные Цикл
	 //Если Объект[мПоле.Имя] = ДанныеОбъект[мПоле.Имя] Тогда
	 // Продолжить;
	 //КонецЕсли;
	 Если мПоле.Ключ<>"note" тогда
		 СтрокаОтбора = СтрокаОтбора + ?(ПустаяСтрока(СтрокаДанные), " WHERE ", " AND ") + мПоле.Ключ + "= '" + мПоле.Значение + "'";
	 КонецЕсли;
	 //СтрокаДанные = СтрокаДанные + ?(ПустаяСтрока(СтрокаДанные), "", ", ") + мПоле.Ключ + "= '" + мПоле.Значение + "'";
	 СтрокаДанные = СтрокаДанные + ?(ПустаяСтрока(СтрокаДанные), "", ", ") + мПоле.Ключ;
 КонецЦикла;
 
 ЗапросSQL = "SELECT "+ СтрокаДанные+ " FROM dbo.ЖурналЗвонков " + СтрокаОтбора;
 Возврат ЗапросSQL; 
 
КонецФункции

Процедура ПриОткрытии()
	//это надо выполнить 1 раз
	Параметры = ВнешниеИсточникиДанных.ВнешнийИсточникДанныхЗвонки.ПолучитьОбщиеПараметрыСоединения();
	Параметры.АутентификацияСтандартная = Истина;
	Параметры.СтрокаСоединения = "DRIVER={SQL Server};SERVER=sigma;UID=CallLogUser;PWD=asteriskcdr;DATABASE=CallLog;LANGUAGE=русский";
	Параметры.СУБД = "MSSQLServer";
	
	ВнешниеИсточникиДанных.ВнешнийИсточникДанныхЗвонки.УстановитьОбщиеПараметрыСоединения(Параметры);
	ВнешниеИсточникиДанных.ВнешнийИсточникДанныхЗвонки.УстановитьПараметрыСоединенияПользователя(ИмяПользователя(), Параметры);
	ВнешниеИсточникиДанных.ВнешнийИсточникДанныхЗвонки.УстановитьПараметрыСоединенияСеанса(Параметры);
	
	ВнешниеИсточникиДанных.ВнешнийИсточникДанныхЗвонки.УстановитьСоединение();
	//
	
	ПериодичностьВыгрузки=7200;
	ПодключитьОбработчикОжидания("Выгрузить",ПериодичностьВыгрузки);
КонецПроцедуры

функция ПроверитьНаличиеАнглийскихБукв(Строка) Экспорт
            ДлинаНаименования = СтрДлина(Строка);
			ц=0;
			пока Ц < ДлинаНаименования Цикл
				ц = ц+1;
				Если Найти("zxcvbnmasdfghjklqwertyuiopZXCVBNMLKJHGFDSAQWERTYUIOP",Сред(Строка,ц,1)) > 0 Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
			Возврат Ложь;	
КонецФункции

