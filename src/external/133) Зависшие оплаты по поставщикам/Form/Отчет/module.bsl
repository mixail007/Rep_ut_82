
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
КонецПроцедуры

Процедура ПриЗакрытии()
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок, Неопределено, Неопределено);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок, ПоЗаказам, СПоставщиком) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Б.ДоговорКонтрагента.Владелец,
	|	Б.ДоговорКонтрагента,
	|	Б.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицоВДоговоре,
	|	СУММА(Б.Приход) КАК ДолгНам,
	|	СУММА(Б.Расход) КАК ДолгНаш
	|ИЗ
	|	(ВЫБРАТЬ
	|		А.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		А.Сделка КАК Сделка,
	|		ВЫБОР
	|			КОГДА А.Сумма > 0
	|				ТОГДА А.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Приход,
	|		ВЫБОР
	|			КОГДА А.Сумма < 0
	|				ТОГДА -А.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Расход
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|			ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
	|			СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток) КАК Сумма
	|		ИЗ
	|			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки КАК ВзаиморасчетыСКонтрагентамиОстатки
	|		ГДЕ
	|			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам
	|			И ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВидДоговора = &СПоставщиком
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	|			ВзаиморасчетыСКонтрагентамиОстатки.Сделка) КАК А) КАК Б
	|
	|СГРУППИРОВАТЬ ПО
	|	Б.ДоговорКонтрагента,
	|	Б.ДоговорКонтрагента.Владелец,
	|	Б.ДоговорКонтрагента.ОтветственноеЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(Б.Приход) > 0 И
	|	СУММА(Б.Расход) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Б.ДоговорКонтрагента.Владелец.Наименование";

	Запрос.УстановитьПараметр("ПоЗаказам", Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам);
	Запрос.УстановитьПараметр("СПоставщиком", Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры




