///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик обновления данных формы
//
Процедура ОбновлениеОтображения()

КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ЭлементыФормы.Режимы.СписокВыбора = мРежимы;
	ЭлементыФормы.Режимы.Значение = Режим;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик нажатия кнопки ОК.
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	Закрыть(Истина);
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "Режимы"
//
Процедура РежимыПриИзменении(Элемент)

	Режим = ЭлементыФормы.Режимы.Значение;
	// Запоминаем текущую настройку
	Настройки = ПостроительОтчета.ПолучитьНастройки();
	
	ЗаполнитьНачальныеНастройки();

	Для Каждого Элемент Из мСтруктураСвязиЭлементовСДанными Цикл

		ВладелецФормы.ЭлементыФормы[Элемент.Ключ].Данные = Элемент.Значение;

	КонецЦикла;

	// Восстанавливаем запомненную настройку
	ПостроительОтчета.УстановитьНастройки(Настройки);
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "УстановитьВсе" командной панели списка показателей
//
Процедура КоманднаяПанельПоказателиУстановитьВсе(Кнопка)

	Для Каждого Строка Из  Показатели Цикл
		Строка.Использование = Истина;
	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки "СнятьВсе" командной панели списка показателей
//
Процедура КоманднаяПанельПоказателиСнятьВсе(Кнопка)

	Для Каждого Строка Из  Показатели Цикл
		Строка.Использование = Ложь;
	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "ИспользоватьСвойстваИКатегории"
//
Процедура ИспользоватьСвойстваИКатегорииПриИзменении(Элемент)

	// Запоминаем текущую настройку
	Настройки = ПостроительОтчета.ПолучитьНастройки();
	ТабПоказатели = Показатели.Выгрузить();

	// Перезаполнение объекта (с новым текстом запроса)
	ЗаполнитьНачальныеНастройки();

	// Восстанавливаем запомненную настройку
	ПостроительОтчета.УстановитьНастройки(Настройки);

	Для Каждого Показатель Из Показатели Цикл
		НайдСтр = ТабПоказатели.Найти(Показатель.Имя, "Имя");
		Если НайдСтр<>Неопределено Тогда
			Показатель.Использование = НайдСтр.Использование;
		КонецЕсли;
	КонецЦикла;

	Для Каждого Элемент Из мСтруктураСвязиЭлементовСДанными Цикл

		ВладелецФормы.ЭлементыФормы[Элемент.Ключ].Данные = Элемент.Значение;

	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля "Значение" табличной части "Отбор"
//
Процедура ОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	// Отборы по свойствам и категориям должны быть обработаны специальным образом
	// Они определяются по представлению 
	Если Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "категории") Тогда

		// Ограничение списка категорий
		Назначение = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборКатегории(Элемент, Назначение, ЭтаФорма, СтандартнаяОбработка);

	ИначеЕсли Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "св-во") Тогда

		Свойство = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборСвойства(Элемент, Свойство, ЭтаФорма, СтандартнаяОбработка);

	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "Обработка выбора" колонки "Имя" грида "Отбор"
//не дает удалять отборы, связанные с реквизитами основной формы отчета
Процедура ОтборПередУдалением(Элемент, Отказ)

	Отказ = ОтборСвязанСДанными(ЭлементыФормы.Отбор.ТекущиеДанные.Имя, мСтруктураСвязиЭлементовСДанными);

КонецПроцедуры

// Процедура - обработчик события "Обработка выбора" колонки "Имя" грида "Отбор"
//не дает выбирать другие отборы вместо тех, которые уже связаны с реквизитами основной формы отчета
//
// событие НачалоВыбора почему-то не перехватывается //ЫЫЫ
Процедура ОтборИмяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = НЕ ОтборСвязанСДанными(ЭлементыФормы.Отбор.ТекущиеДанные.Имя, мСтруктураСвязиЭлементовСДанными);

КонецПроцедуры

// Процедура - обработчик события "Очистка" колонки "Имя" грида "Отбор"
//не дает очищать имена отборов, связанных с реквизитами основной формы отчета
Процедура ОтборИмяОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = НЕ ОтборСвязанСДанными(ЭлементыФормы.Отбор.ТекущиеДанные.Имя, мСтруктураСвязиЭлементовСДанными);

КонецПроцедуры

