перем ТекстСообщения0, КаталогВременныхФайлов0;
перем СписокМенеджеров;
перем СписокВыбораТемПисьма;

Функция ПолучитьСтрокуЗамены()
	Текст = "";
	Если ПолеВидаСравненияНоменклатура = ВидСравнения.Равно Тогда
		Текст = "=";
	ИначеЕсли ПолеВидаСравненияНоменклатура = ВидСравнения.НеРавно Тогда
		Текст = "<>";
	ИначеЕсли ПолеВидаСравненияНоменклатура = ВидСравнения.ВСписке Тогда
		Текст = "В";
	ИначеЕсли ПолеВидаСравненияНоменклатура = ВидСравнения.НеВСписке Тогда
		Текст = "НЕ В";
	//ИначеЕсли ПолеВидаСравненияНоменклатура = ВидСравнения.ВИерархии 
	//	ИЛИ ПолеВидаСравненияНоменклатура = ВидСравнения.ВСпискеПоИерархии Тогда
	//	Текст = "В ИЕРАРХИИ";
	//ИначеЕсли ПолеВидаСравненияНоменклатура = ВидСравнения.НеВИерархии 
	//	ИЛИ ПолеВидаСравненияНоменклатура = ВидСравнения.НеВСпискеПоИерархии Тогда
	//	Текст = "НЕ В ИЕРАРХИИ";
	КонецЕсли;
	
	Возврат Текст;
КонецФункции	

Функция ОбработатьЭлектронныеАдреса(АдресПолучателя)
	
	Соответствие = Новый Соответствие;
	АдресПолучателя = СтрЗаменить(АдресПолучателя," ","");
	
	i = Найти(АдресПолучателя,";"); j=Найти(АдресПолучателя, ",");
	k=?(i>0 и i>j,  i, ?(j>0 и j>i, j, 0) );
	
	
	Если i=0 и j=0 тогда
		Соответствие.Вставить(АдресПолучателя);
	иначе
		АдрОстаток = СокрЛП(АдресПолучателя);
		пока (k>0) цикл
			Адр1 = Лев(АдрОстаток, k-1);
			Если СокрЛП(Адр1)<>"" и Найти(Адр1,"@")>0 и Найти(Адр1,".")>0 тогда
				Соответствие.Вставить(СокрЛП(Адр1));
			КонецЕсли;
			АдрОстаток = Прав(АдрОстаток, стрДлина(АдрОстаток)-k);
			i = Найти(АдрОстаток,";"); j=Найти(АдрОстаток, ",");
			k=?(i>0 и i>j,  i, ?(j>0 и j>i, j, 0) );
		КонецЦикла;
		Если СокрЛП(АдрОстаток)<>"" и Найти(АдрОстаток,"@")>0 и Найти(АдрОстаток,".")>0 тогда
			Соответствие.Вставить(СокрЛП(АдрОстаток));
		КонецЕсли;
	КонецЕсли; //+++ )
	ИтоговаяСтрокаАдресов = "";
	Для Каждого Стр Из Соответствие Цикл 
		ИтоговаяСтрокаАдресов = ИтоговаяСтрокаАдресов + ?(ИтоговаяСтрокаАдресов="","",";")+ Стр.Ключ;
	КонецЦикла;
	Возврат ИтоговаяСтрокаАдресов;
	
КонецФункции

Функция ПодготовитьТаблицуАдресов(ТЗАдреса)
	
	ТЗСвернутая = ТЗАдреса.Скопироватьколонки();
	Контрагенты = ТЗАдреса.ВыгрузитьКолонку("Контрагент");
	МассивКонтрагентов = Новый Массив; Соответствие = Новый Соответствие;
	
	Для каждого ЭлементМассива Из Контрагенты Цикл
		Соответствие.Вставить(ЭлементМассива);
	КонецЦикла;
	
	Для каждого КлючИЗначение Из Соответствие Цикл
		МассивКонтрагентов.Добавить(КлючИЗначение.Ключ);
	КонецЦикла;
	
	
	Для Каждого Контрагент Из МассивКонтрагентов Цикл 
		
		СтруктураОтбора = Новый Структура("Контрагент",Контрагент);
		
		НайденныеКонтрагенты = ТЗАдреса.НайтиСтроки(СтруктураОтбора);
		НовСтрТЗСвернутая = ТЗСвернутая.Добавить();
		НовСтрТЗСвернутая.Контрагент = Контрагент;
		
		ВсеЭлектронныеАдреса = "";
		
		Для Каждого Стр из НайденныеКонтрагенты Цикл
			ВсеЭлектронныеАдреса = Строка(ВсеЭлектронныеАдреса) +?(ЗначениеЗаполнено(ВсеЭлектронныеАдреса),";","")+ Стр.ЭлектронныйАдрес;
		КонецЦикла;
		
		НовСтрТЗСвернутая.ЭлектронныйАдрес = ОбработатьЭлектронныеАдреса(ВсеЭлектронныеАдреса);
		НовСтрТЗСвернутая.ТребуетсяОтправкаПоПочте = ЗначениеЗаполнено(НовСтрТЗСвернутая.ЭлектронныйАдрес);
		
	КонецЦикла;
	
	ТЗСвернутая.Сортировать("ТребуетсяОтправкаПоПочте Убыв,Контрагент Возр");
	
	Возврат ТЗСвернутая;
	
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	//Если не ГрузовыеДиски И
	//	Не ГрузовыеШины Тогда 
	//	Предупреждение("Выберите что отправлять - Шины и/или Диски", 30);
	//	Возврат	
	//КонецЕсли;
	
	АдресаКонтрагентов.Очистить();
	Реализации.Очистить();
	
	Если СписокМенеджеров.Количество()>0 тогда
		СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджера(СписокМенеджеров);
	иначе				
		СписокКонтрагентовМенеджера = новый СписокЗначений;
	КонецЕсли;	
	
	ЗапросКонтрагенты=Новый Запрос;
	ЗапросКонтрагенты.Текст="ВЫБРАТЬ
	                        |	Номенклатура.Ссылка КАК Номенклатура
	                        |ПОМЕСТИТЬ ВТ_НоменклатураГруппы
	                        |ИЗ
	                        |	Справочник.Номенклатура КАК Номенклатура
	                        |ГДЕ
							|	Номенклатура.НоменклатурнаяГруппа #Условие# (&НоменклатурнаяГруппа)
	                        |	И НЕ Номенклатура.ЭтоГруппа
	                        |
	                        |ИНДЕКСИРОВАТЬ ПО
	                        |	Номенклатура
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ВЫБОР
	                        |		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК СТРОКА(1000))) = """"
	                        |			ТОГДА ЛОЖЬ
	                        |		ИНАЧЕ ИСТИНА
	                        |	КОНЕЦ КАК ТребуетсяОтправкаПоПочте,
	                        |	А.Контрагент КАК Контрагент,
	                        |	ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК ЭлектронныйАдрес,
	                        |	А.Ссылка КАК Реализация
	                        |ПОМЕСТИТЬ ВТКонтрагентыДокументы
	                        |ИЗ
	                        |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                        |		РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
	                        |		РеализацияТоваровУслугТовары.Ссылка КАК Ссылка
	                        |	ИЗ
	                        |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	                        |	ГДЕ
	                        |		РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	                        |		И РеализацияТоваровУслугТовары.Ссылка.Проведен
	                        |		И РеализацияТоваровУслугТовары.Номенклатура В
	                        |				(ВЫБРАТЬ
	                        |					ВТ_НоменклатураГруппы.Номенклатура
	                        |				ИЗ
	                        |					ВТ_НоменклатураГруппы КАК ВТ_НоменклатураГруппы)) КАК А
	                        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                        |			КонтактнаяИнформация.Объект КАК Объект,
	                        |			КонтактнаяИнформация.Представление КАК Представление
	                        |		ИЗ
	                        |			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                        |		ГДЕ
	                        |			КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	                       // |			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыДляОбменаДокументами)) КАК КонтактнаяИнформация
						    //		И КонтактнаяИнформация.Вид = &Вид
							|) КАК КонтактнаяИнформация
	                        |		ПО А.Контрагент = КонтактнаяИнформация.Объект
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ВТКонтрагентыДокументы.ТребуетсяОтправкаПоПочте КАК ТребуетсяОтправкаПоПочте,
	                        |	ВТКонтрагентыДокументы.Контрагент КАК Контрагент,
	                        |	ВТКонтрагентыДокументы.ЭлектронныйАдрес
	                        |ИЗ
	                        |	ВТКонтрагентыДокументы КАК ВТКонтрагентыДокументы
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	ТребуетсяОтправкаПоПочте УБЫВ,
	                        |	ВТКонтрагентыДокументы.Контрагент.Наименование
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ВТКонтрагентыДокументы.Реализация КАК Реализация,
	                        |	ВТКонтрагентыДокументы.Контрагент КАК Контрагент
	                        |ИЗ
	                        |	ВТКонтрагентыДокументы КАК ВТКонтрагентыДокументы
	                        |
	                        |СГРУППИРОВАТЬ ПО
	                        |	ВТКонтрагентыДокументы.Реализация,
	                        |	ВТКонтрагентыДокументы.Контрагент
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	ВТКонтрагентыДокументы.Контрагент.Наименование,
	                        |	ВТКонтрагентыДокументы.Реализация.МоментВремени";
	
	ЗапросКонтрагенты.Текст = СтрЗаменить(ЗапросКонтрагенты.Текст,"#Условие#",ПолучитьСтрокуЗамены());
	
	ЗапросКонтрагенты.УстановитьПараметр("НачДата",НачДата);
	ЗапросКонтрагенты.УстановитьПараметр("КонДата",КонецДня(КонДата));
	ЗапросКонтрагенты.УстановитьПараметр("НоменклатурнаяГруппа",ЭлементыФормы.НоменклатурнаяГруппа.Значение);
	
	МассивРезультатов =  ЗапросКонтрагенты.ВыполнитьПакет();
	ТЗАдреса     = МассивРезультатов[2].Выгрузить();
	ТЗРеализации = МассивРезультатов[3].Выгрузить();
	ТЗАдреса.Свернуть("Контрагент,ЭлектронныйАдрес,ТребуетсяОтправкаПоПочте");
	ТаблицаАдресовКонтрагентов = ПодготовитьТаблицуАдресов(ТЗАдреса);
	АдресаКонтрагентов.Загрузить(ТаблицаАдресовКонтрагентов);
	Реализации = ТЗРеализации;
	
КонецПроцедуры


Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	//КнопкаВыполнитьНажатие(Неопределено);
КонецПроцедуры

Функция АдресЭлектроннойПочтыВалиден(АдресЭП)
	
	// Проверим наличие в адресе @
	ПозицияСобаки = Найти(АдресЭП, "@");
	
	Если Не ПозицияСобаки = 0 Тогда
		// и наличие точки после собаки
		Если Найти(Сред(АдресЭП, ПозицияСобаки + 1), ".") = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	// Проверим адрес на допустимые символы
	ДопустимыеСимволы = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЪЭЮЯ
	|ABCDEFGHIJKLMNOPQRSTUVWXYZ
	|0123456789
	|._-@";
	
	Позиция = 1;
	
	Пока Позиция <= СтрДлина(АдресЭП) Цикл
		
		ТекущийСимвол = ВРег(Сред(АдресЭП, Позиция, 1));
		
		Если Найти(ДопустимыеСимволы, ТекущийСимвол) = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Позиция = Позиция + 1;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ВыполнитьПроверкуДополнительныхАдресовКонтрагентов()
	
	ОшибокНет = Истина;
	
	Для Каждого Стр ИЗ ДополнительныеАдресаКонтрагентов Цикл
		Если Не АдресЭлектроннойПочтыВалиден(Стр.ЭлектронныйАдрес) Тогда 
			Сообщить("Не корректный дополнительный адрес: " + Стр.ЭлектронныйАдрес);
			ОшибокНет = Ложь;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат ОшибокНет;
	
КонецФункции

Процедура ОсновныеДействияФормыДействиеОтправить(Кнопка)
	
	
	ПроверкаДополнительныхадресовПройдена = ВыполнитьПроверкуДополнительныхАдресовКонтрагентов();
	
	Если Не ПроверкаДополнительныхадресовПройдена Тогда 
		Возврат;
	КонецЕсли;	
	
	СписокКонтрагентов=Новый СписокЗначений;
	СписокФайловВложений=Новый СписокЗначений;
	СписокФайловВложений.ЗагрузитьЗначения( ТаблВложений.ВыгрузитьКолонку("ИмяФайла") );   //29.12.2017
	
	Для каждого СТрокаКонтрагент ИЗ АдресаКонтрагентов Цикл
		Если СТрокаКонтрагент.ТребуетсяОтправкаПоПочте И СтрДлина(СокрЛП(СТрокаКонтрагент.ЭлектронныйАдрес))>0 Тогда
			СписокКонтрагентов.Добавить(СТрокаКонтрагент.Контрагент,СТрокаКонтрагент.ЭлектронныйАдрес);
		иначе
			СТрокаКонтрагент.ТребуетсяОтправкаПоПочте = ложь; //нельзя отправить на пустой адрес
		КОнецЕсли;	
	КонецЦикла;	
	
	Если СписокКОнтрагентов.Количество()>0 
		Или  ДополнительныеАдресаКонтрагентов.Количество() > 0 тогда
		Если Вопрос("Вы действительно хотите отправить электронные письма 
			|для "+строка(СписокКОнтрагентов.Количество() + ДополнительныеАдресаКонтрагентов.Количество())+ " выбранных Контрагентов?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Нет тогда
			Возврат;
		КонецЕсли;	
	иначе
		сигнал();
		Предупреждение("Выберите Контрагентов, у которых есть эл.адрес!
		|   Отправка писем отменена!", 30);
		возврат;
	КонецЕсли;
	
	Если УЗ.Пустая() тогда   //+++
		сигнал();
		Предупреждение("Не выбран ""Адрес отправителя ""!
		|Для отправки обязательно требуется обратный эл.адрес!",30);
		возврат;
	КонецЕсли;
	
	
	//-----------------проверим папку временных файлов-----------------------
	Состояние("Идет отправка писем...");  i=0;
	
	//===========================================================================
	Сообщить(" ");  i=0; 	  
	Сообщить(">>>>> "+Строка(ТекущаяДата())+" Начата отправка эл.писем для "+строка(ДополнительныеАдресаКонтрагентов.Количество())+" доп.адресов.");
	
	//Отправка дополнительным адресам писем
	Для каждого Контрагент ИЗ ДополнительныеАдресаКонтрагентов Цикл
		ОбработкаПрерыванияПользователя();
		i=i+1; 	  
		состояние("Идет формирование "+строка(i)+"-го письма для "+Контрагент+"...");
		Состояние("Идет отправка "+строка(i)+"-го письма для "+Строка(Контрагент) );
		Послать(Контрагент.ЭлектронныйАдрес,СписокФайловВложений, УЗ);	  
	КонецЦикла;	
	
	
	Сообщить(">>>>> "+Строка(ТекущаяДата())+" Начата отправка эл.писем для "+строка(СписокКОнтрагентов.Количество())+" контрагентов.");
	Для каждого Контрагент ИЗ СписокКОнтрагентов Цикл
		ОбработкаПрерыванияПользователя();
		i=i+1;
		//СписокФайловВложений.Очистить();
		
		состояние("Идет формирование "+строка(i)+"-го письма для "+Контрагент.Значение+"...");
		Состояние("Идет отправка "+строка(i)+"-го письма для "+Строка(Контрагент) );
		Послать(Контрагент.Представление,СписокФайловВложений, УЗ);	  
		
	КонецЦикла;	

	
	Сообщить(">>>>> "+Строка(ТекущаяДата())+" Завершена отправка "+строка(i)+" эл.писем с осн.учетной записи эл.почты: "+УЗ.Наименование);	
	Сообщить(" "); Сообщить(" ");
	
	Сигнал();сигнал();
	Предупреждение("Отправка "+строка(i)+" писем завершена в "+строка(ТекущаяДата())+"!");
	
КонецПроцедуры


Процедура ПриОткрытии()
	Если СокрЛП(ТекстСообщения) = "" тогда 
		ТекстСообщения = ТекстСообщения0;
	КонецЕсли;					 
	ТекстСообщения = стрЗаменить(ТекстСообщения, "С уважением,", "С уважением,
	|"+строка(глТекущийПользователь));
КонецПроцедуры


Процедура Послать(АдресПолучателя,СписокФайловВложений, УЗ)
	//ТекстПисьма = ЭтаФорма.ЭлементыФормы.ПолеHTMLДокумента.ПолучитьТекст();
	
	ИПП=Новый ИнтернетПочтовыйПрофиль;
	ИПП.АдресСервераSMTP=УЗ.SMTPСервер;
	ИПП.ПортSMTP=УЗ.ПортSMTP;
	Если УЗ.ТребуетсяSMTPАутентификация Тогда
		ИПП.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
		ИПП.ПарольSMTP         = УЗ.ПарольSMTP;
		ИПП.ПользовательSMTP   = УЗ.ЛогинSMTP;
	Иначе
		ИПП.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
		ИПП.ПарольSMTP         = "";
		ИПП.ПользовательSMTP   = "";
	КонецЕсли;
	Письмо=Новый ИнтернетПочтовоеСообщение;
	Письмо.Отправитель=УЗ.АдресЭлектроннойПочты;
	//+++( 19.12.2011 - разбор адреса на несколько адресов
	i = Найти(АдресПолучателя,";"); j=Найти(АдресПолучателя, ",");
	k=?(i>0 и i>j,  i, ?(j>0 и j>i, j, 0) );
	
	Если i=0 и j=0 тогда
		Письмо.Получатели.Добавить(АдресПолучателя);
	иначе
		АдрОстаток = СокрЛП(АдресПолучателя);
		пока (k>0) цикл
			Адр1 = Лев(АдрОстаток, k-1);
			Если СокрЛП(Адр1)<>"" и Найти(Адр1,"@")>0 и Найти(Адр1,".")>0 тогда
				Письмо.Получатели.Добавить(Адр1);
			КонецЕсли;
			АдрОстаток = Прав(АдрОстаток, стрДлина(АдрОстаток)-k);
			i = Найти(АдрОстаток,";"); j=Найти(АдрОстаток, ",");
			k=?(i>0 и i>j,  i, ?(j>0 и j>i, j, 0) );
		КонецЦикла;
		Если СокрЛП(АдрОстаток)<>"" и Найти(АдрОстаток,"@")>0 и Найти(АдрОстаток,".")>0 тогда
			Письмо.Получатели.Добавить(АдрОстаток);
		КонецЕсли;
		
	КонецЕсли; //+++ )
	
	Если ЗначениеЗаполнено(СписокФайловВложений) И СписокФайловВложений.Количество()>0 Тогда
		Для Каждого ТекАдр Из СписокФайловВложений Цикл
			Письмо.Вложения.Добавить(ТекАдр.Значение);
		КонецЦикла;
	КонецЕсли;
	Письмо.Тема = ТемаПисьма;
	Письмо.ИмяОтправителя ="ЗАО ТК ""Яршинторг"", г.Ярославль";
	Письмо.Организация ="ЗАО ТК ""Яршинторг"", г.Ярославль";
	Письмо.Тексты.Добавить(СокрЛП(ЭлементыФормы.ТекстСообщения.Значение),ТипТекстаПочтовогоСообщения.простойТекст);
	
	Почта=Новый ИнтернетПочта;
	попытка
		Почта.Подключиться(ИПП);
		ОбработкаПрерыванияПользователя(); // при зависании подключения - можно остановить Ctrl+Brk
		Почта.Послать(Письмо);
		Почта.Отключиться();
		сообщить(" >>>  Письмо отправлено на эл.адрес: "+АдресПолучателя+". "+строка(СписокФайловВложений.Количество())+" вложенных файлов...", СтатусСообщения.Информация);
	исключение
		сообщить("xxxxx Ошибка при отправке письма на эл.адрес: "+АдресПолучателя+" - "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	конецПопытки;
КонецПроцедуры

Процедура НачДатаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если КонДата<НачДата тогда
		КонДата=НачДата;
	КонецЕсли;	
КонецПроцедуры

Процедура НачДатаПриИзменении(Элемент)
	Если КонДата<НачДата тогда
		КонДата=НачДата;
	КонецЕсли;
КонецПроцедуры

Процедура КонДатаПриИзменении(Элемент)
	Если КонДата<НачДата тогда
		НачДата=КонДата;
	КонецЕсли;
КонецПроцедуры


Процедура КонДатаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если КонДата<НачДата тогда
		НачДата=КонДата;
	КонецЕсли;
КонецПроцедуры


Процедура АдресаКонтрагентовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ТребуетсяОтправкаПоПочте тогда
		ОформлениеСтроки.цветФона = webЦвета.СветлоЖелтый;
		ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
	КонецЕсли;	
	ОформлениеСтроки.Ячейки.ТребуетсяОтправкаПоПочте.ОтображатьТекст = ЛОЖЬ;
	//ОформлениеСтроки.Ячейки.ТребуетсяОтправкаПоПочте.ОтображатьФлажок = Истина;
	//ОформлениеСтроки.Ячейки.ТребуетсяОтправкаПоПочте.Флажок = ?(ДанныеСтроки.ТребуетсяОтправкаПоПочте=Истина, 1, 0);
КонецПроцедуры

//------------------------------------------------
Процедура КоманднаяПанель2ВыбратьВсе(Кнопка)
	Для i=0 по ЭлементыФормы.АдресаКонтрагентов.Значение.Количество()-1 цикл
		стр = ЭлементыФормы.АдресаКонтрагентов.Значение[i];
		стр.ТребуетсяОтправкаПоПочте = Истина;
	КонецЦикла;
	ЭлементыФормы.АдресаКонтрагентов.ОбновитьСтроки();
КонецПроцедуры


Процедура КоманднаяПанель2УбратьВсе(Кнопка)
	Для i=0 по ЭлементыФормы.АдресаКонтрагентов.Значение.Количество()-1 цикл
		стр = ЭлементыФормы.АдресаКонтрагентов.Значение[i];
		стр.ТребуетсяОтправкаПоПочте = ЛОЖЬ;
	КонецЦикла;	
	ЭлементыФормы.АдресаКонтрагентов.ОбновитьСтроки();
КонецПроцедуры


Процедура КоманднаяПанель2Инверсия(Кнопка)
	Для i=0 по ЭлементыФормы.АдресаКонтрагентов.Значение.Количество()-1 цикл
		стр = ЭлементыФормы.АдресаКонтрагентов.Значение[i];
		стр.ТребуетсяОтправкаПоПочте = не стр.ТребуетсяОтправкаПоПочте;
	КонецЦикла;	
	ЭлементыФормы.АдресаКонтрагентов.ОбновитьСтроки();
КонецПроцедуры


Процедура АдресаКонтрагентовПриАктивизацииСтроки(Элемент)
	//позиционируемся на реализации
	попытка
		Если ЗначениеЗаполнено(ЭлементыФормы.АдресаКонтрагентов.ТекущиеДанные) тогда	 
			Стр = Реализации.Найти(ЭлементыФормы.АдресаКонтрагентов.ТекущиеДанные.Контрагент, "Контрагент");
			Если ЗначениеЗаполнено(стр) тогда
				ЭлементыФормы.Реализации.ТекущаяСтрока = стр;
			КонецЕсли;	 
		КонецЕсли;	 
	исключение
	конецПопытки;	
КонецПроцедуры


Процедура АдресаКонтрагентовТребуетсяОтправкаПоПочтеПриИзменении(Элемент)
	//ОформлениеСтроки.Ячейки.ТребуетсяОтправкаПоПочте.ОтображатьФлажок = ЛОЖЬ;
КонецПроцедуры


Процедура АдресаКонтрагентовЭлектронныйАдресПриИзменении(Элемент)
	Сообщить("Для сохранения эл.адресов - откройте карточку Контрагента и на закладке Контакты - введите ""Адрес электронной почты для обмена документами"" ");
КонецПроцедуры

Процедура ТекстСообщенияНачалоВыбора(Элемент, СтандартнаяОбработка)
	ТекстСообщения = ТекстСообщения0;
					 
	ТекстСообщения = стрЗаменить(ТекстСообщения, "С уважением,", "С уважением,
		|"+строка(глТекущийПользователь) );
КонецПроцедуры

Процедура КаталогВременныхФайловНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	//ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	//ДиалогОткрытияФайла.Каталог = КаталогВременныхФайлов;
	//ДиалогОткрытияФайла.Заголовок = "Выберите каталог временных файлов";
	//Если ДиалогОткрытияФайла.Выбрать() Тогда
	//КаталогВременныхФайлов = ДиалогОткрытияФайла.Каталог;
	//КонецЕсли;
	
КонецПроцедуры

Процедура КаталогВременныхФайловОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	КаталогВременныхФайлов = КаталогВременныхФайлов0; //КаталогВременныхФайлов();
	//КаталогВременныхФайлов =стрЗаменить(КаталогВременныхФайлов,"Local Settings\Temp\","Мои документы\");
КонецПроцедуры

Процедура КаталогВременныхФайловОткрытие(Элемент, СтандартнаяОбработка)
	//СтандартнаяОбработка = ложь;
	//ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	//ДиалогОткрытияФайла.Каталог = КаталогВременныхФайлов;
	//Фильтр = "Excel-файлы (*.xls)|*.xls";
	//ДиалогОткрытияФайла.Фильтр = Фильтр;
	// ДиалогОткрытияФайла.Заголовок = "Просмотр каталога временных файлов";
	//Если ДиалогОткрытияФайла.Выбрать() Тогда
	//	Если КаталогВременныхФайлов <> ДиалогОткрытияФайла.Каталог тогда
	//		КаталогВременныхФайлов = ДиалогОткрытияФайла.Каталог;
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ВсеРеализацииПриИзменении(Элемент)
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Обновить список контрагентов и реализаций?", Режим, 10);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КнопкаВыполнитьНажатие(неопределено);
	КонецЕсли;
	
КонецПроцедуры

//+++ при перевыборе Контрагента - изменяем адрес эл.почты
процедура перезаполнитьЭлПочтуТекСтроки()
	
	текСтрока = ЭлементыФормы.АдресаКонтрагентов.ТекущиеДанные;
	
	отбор1 = новый Структура("Объект", текСтрока.Контрагент);
	отбор1.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыДляОбменаДокументами );
	отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38823") );
	
	
	рс = регистрыСведений.КонтактнаяИнформация.Получить(отбор1);
	Если рс=Неопределено тогда
		текСтрока.ЭлектронныйАдрес = "";
		текСтрока.ТребуетсяОтправкаПоПочте = ложь;
	иначе
		текСтрока.ЭлектронныйАдрес = рс.Представление;
		текСтрока.ТребуетсяОтправкаПоПочте = истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура АдресаКонтрагентовКонтрагентПриИзменении(Элемент)
	перезаполнитьЭлПочтуТекСтроки();
КонецПроцедуры

Процедура АдресаКонтрагентовКонтрагентОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	текСтрока = ЭлементыФормы.АдресаКонтрагентов.ТекущиеДанные;
	фрм1 = текСтрока.Контрагент.получитьФорму("ФормаЭлемента");
	фрм1.ОткрытьМодально();
	перезаполнитьЭлПочтуТекСтроки();
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	СписокВыбора  = Новый СписокЗначений;
	СписокВыбора.Добавить(ВидСравнения.Равно);
	СписокВыбора.Добавить(ВидСравнения.НеРавно);
	СписокВыбора.Добавить(ВидСравнения.ВСписке);
	СписокВыбора.Добавить(ВидСравнения.НеВСписке);
	//СписокВыбора.Добавить(ВидСравнения.ВИерархии);
	//СписокВыбора.Добавить(ВидСравнения.НеВИерархии);
	//СписокВыбора.Добавить(ВидСравнения.ВСпискеПоИерархии);
	//СписокВыбора.Добавить(ВидСравнения.НеВСпискеПоИерархии);
	
	ЭлементыФормы.ПолеВидаСравненияНоменклатура.СписокВыбора = СписокВыбора;
	ЭлементыФормы.НоменклатурнаяГруппа.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы");
	ЭлементыФормы.ПолеВидаСравненияНоменклатура.Значение     = ВидСравнения.Равно;
	ПолеВидаСравненияНоменклатураПриИзменении(ЭлементыФормы.ПолеВидаСравненияНоменклатура);
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "ПолеВидаСравненияНоменклатура".
//
Процедура ПолеВидаСравненияНоменклатураПриИзменении(Элемент)

	Если Элемент.Значение = ВидСравнения.ВСписке
	 ИЛИ Элемент.Значение = ВидСравнения.НеВСписке Тогда
	 //ИЛИ Элемент.Значение = ВидСравнения.ВСпискеПоИерархии 
	 //ИЛИ Элемент.Значение = ВидСравнения.НеВСпискеПоИерархии Тогда
		Значение = Неопределено;
		Если ЭлементыФормы.НоменклатурнаяГруппа.ТипЗначения <> Новый ОписаниеТипов("СписокЗначений")Тогда
			Значение = ЭлементыФормы.НоменклатурнаяГруппа.Значение;
			ЭлементыФормы.НоменклатурнаяГруппа.ТипЗначения = Новый ОписаниеТипов("СписокЗначений");
			ЭлементыФормы.НоменклатурнаяГруппа.ТипЗначенияСписка = Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы");
		КонецЕсли;

		Если Не ЗначениеНеЗаполнено(Значение) Тогда
			ЭлементыФормы.НоменклатурнаяГруппа.Значение.Добавить(Значение);
		КонецЕсли;

	ИначеЕсли Элемент.Значение = ВидСравнения.Равно
	     // ИЛИ Элемент.Значение = ВидСравнения.ВИерархии
	      ИЛИ Элемент.Значение = ВидСравнения.НеРавно
	   //   ИЛИ Элемент.Значение = ВидСравнения.НеВИерархии
		  Тогда
		Значение = Неопределено;
		Если ЭлементыФормы.НоменклатурнаяГруппа.ТипЗначения = Новый ОписаниеТипов("СписокЗначений")Тогда
			Если ЭлементыФормы.НоменклатурнаяГруппа.Значение.Количество()>0 Тогда
				Значение = ЭлементыФормы.НоменклатурнаяГруппа.Значение[0].Значение;
				ЭлементыФормы.НоменклатурнаяГруппа.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы");
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеНеЗаполнено(Значение) Тогда
			ЭлементыФормы.НоменклатурнаяГруппа.Значение = Значение;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ШаблонНажатие(Элемент)
	ВыбЭлемент = СписокВыбораТемПисьма.ВыбратьЭлемент("Выберите шаблон темы письма.");
	Если ВыбЭлемент <> Неопределено Тогда 
		ТемаПисьма = ВыбЭлемент.Значение;
	КонецЕсли; 
КонецПроцедуры

Процедура ОбновлениеОтображения()
	ЭлементыФормы.ОсновнаяПанель.Страницы.Страница2.Заголовок = "Дополнитльные адреса (" + ДополнительныеАдресаКонтрагентов.Количество() + ")";
КонецПроцедуры

Процедура ДополнительныеАдресаКонтрагентовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.НомерСтроки.Текст = ЭлементыФормы.ДополнительныеАдресаКонтрагентов.Значение.индекс(данныеСтроки)+1;
КонецПроцедуры



СписокМенеджеров = Новый Массив;
ТекстСообщения0 ="   Добрый день,
|
|
|
|С уважением, 
|ЗАО Торговая Компания ""Яршинторг"", 
|юр./факт.адрес: 150044, Ярославская обл, Ярославль г, Базовая ул, дом № 3, стр.2
|тел./факс: (4852) 200-200, 67-11-67
|Web-сайт : http://www.yst76.ru
|"; 

СписокВыбораТемПисьма = Новый СписокЗначений;
СписокВыбораТемПисьма.Добавить("Прайс-лист");
СписокВыбораТемПисьма.Добавить("Остатки склада");