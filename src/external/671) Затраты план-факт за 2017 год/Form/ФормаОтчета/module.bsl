
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = НачПериода;
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = КонецДня(КонПериода);

	
КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = НачПериода;
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = КонецДня(КонПериода);
КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = НачПериода;
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = КонецДня(КонПериода);
КонецПроцедуры

Процедура ПриОткрытии()
	
	начПериода = Дата(2017,01,01);
	конПериода = Дата(2017,12,31);
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = НачПериода;
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = КонецДня(КонПериода);

	список = Новый   списокЗначений;
	Список.Добавить(Справочники.ПериодыПланирования.НайтиПоКоду("000000010"));
	Список.Добавить(Справочники.ПериодыПланирования.НайтиПоКоду("000000003"));
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодПланирования");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = Список;

//	Если не рольДоступна("ПравоЗавершенияРаботыПользователей") или (глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Межерицкая") и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Малышев")) тогда
	Если (глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Межерицкая") и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Малышев")и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Алексеева А.Е.")и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Лапенков")) тогда
		
НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
ПолеОтбора = Новый ПолеКомпоновкиДанных("Менеджер");
НовыйЭлементОтбора.ЛевоеЗначение = ПолеОтбора;
НовыйЭлементОтбора.Использование = Истина;
НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
НовыйЭлементОтбора.ПравоеЗначение = глТекущийПользователь;
Элементыформы.ДействияФормы.Кнопки.Действие1.Доступность = Ложь;				
Элементыформы.ДействияФормы.Кнопки.Действие2.Доступность = Ложь;				
  конецЕсли;
   	
	
КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	ЭлементРасшифровкиДанных = ДанныеРасшифровки.Элементы[Расшифровка];
	ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
	Если  ЭлементРасшифровкиДанныхПоля.Поле = "СуммаФакт"  тогда
		СтандартнаяОбработка = Ложь;
		Попытка
		СтатьяЗатрат =ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	    исключение
		статьяЗатрат= Неопределено;
	    конецпопытки;
		
		попытка
		МесяцЗатрат =ЭлементРасшифровкиДанных.ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	    исключение
		МесяцЗатрат = Неопределено;
	    конецпопытки;
		
		
			Форма = ПолучитьФорму("ФормаОтчета1");
			Если статьяЗатрат <> неопределено тогда
            Форма.СтатьяЗатрат = СтатьяЗатрат;
			иначеЕсли (глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Межерицкая") и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Малышев")и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Алексеева А.Е.")и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Лапенков")) тогда
            Форма.СтатьяЗатрат = глТекущийПользователь;
		    конецЕсли;
		//	Если МесяцЗатрат <> неопределено тогда
			Форма.МесяцЗатрат = МесяцЗатрат;
			форма.началоПериода = НачПериода;
			Форма.КонецПериода = КонПериода;
		//	конецЕсли;
		    форма.Открыть();
		
		
		
	конецЕсли;
	
	
	
	
	
	
	
	
	
	
	
	
  //  
  //  
  //  СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
  // //Создадим и инициализируем обработчик расшифровки                    
  //  ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки1, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
  //																	   
  //  ДоступныеДействия = Новый Массив();
  //  ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
  //  ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
  //  //ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
  //  ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
  //  ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
  //  //ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
  //  
  // // Добавляем собственные действия 
  //  Нов = Новый СписокЗначений;
  //  	   ЭлементРасшифровкиДанных = ДанныеРасшифровки1.Элементы[Расшифровка];
  //	  ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
  //  	Если  ЭлементРасшифровкиДанныхПоля.Поле = "Контрагент"  тогда
  //  		СпрКонтрагент = ЭлементРасшифровкиДанныхПоля.Значение;
  //  		Нов.Добавить("Занести план");

  //	  конецЕсли;

  ////  
  //  
  //Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия,Нов);
  //
  //Если ВыполненноеДействие = "Занести план" Тогда
  //	Форма = получитьформу("Форма");
  //	Форма.Контрагент = СпрКонтрагент;
  //	форма.Открыть();
  //конецЕсли;

КонецПроцедуры
