Процедура ПолучитьСудебныеДела() Экспорт
	КнопкаВыполнитьНажатие();
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие()
	// Вставить содержимое обработчика.
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ 
	                      |	реализациятоваровуслуг.Контрагент.ИНН как ИНН
	                      |ИЗ
	                      |	Документ.РеализацияТоваровУслуг КАК реализациятоваровуслуг
	                      |ГДЕ
	                      |	реализациятоваровуслуг.Дата МЕЖДУ &Дата1 И &Дата2
	                      |	И реализациятоваровуслуг.Проведен
	                      |	И реализациятоваровуслуг.Контрагент.ИНН <> &Пусто");	
						  
						  
						  
	Запрос.УстановитьПараметр("Дата1",ДобавитьМесяц(ТекущаяДата(),-36));
	Запрос.УстановитьПараметр("Дата2",ТекущаяДата());
	
	ДатаНач = ТекущаяДата()-2419200;
	ДатаКон = ТекущаяДата();
	
	Запрос.УстановитьПараметр("Пусто","");
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Пока выб.Следующий() Цикл
		//Сообщить(Выб.Инн);
		ПолучитьДанные(ДатаНач,ДатаКон,Выб.ИНН);
	КонецЦикла;	
			
КонецПроцедуры

Процедура ПолучитьДанные(ДатаНач,ДатаКон,ИНН)
	
	// Вставить содержимое обработчика.
	// Параметры
	//// Запрос к сайту
	
	Страница = 0;
	
	Пока Истина Цикл 
		Страница = Страница + 1;
		Ошибка = Ложь;
				
		Попытка
			WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
			WinHttp.Option(2,"utf-8");
			WinHttp.Open("POST","http://kad.arbitr.ru/Kad/SearchInstances",0);
			WinHttp.SetRequestHeader("x-date-format", "iso");
			WinHttp.setRequestHeader("Content-type", "application/json");
			WinHttp.setRequestHeader("X-Requested-With", "XMLHttpRequest");
			WinHttp.setRequestHeader("Accept", "application/json, text/javascript, */*");
			WinHttp.setRequestHeader("Referer", "http://kad.arbitr.ru/");
			WinHttp.setRequestHeader("Accept-Language", "ru-RU");
			WinHttp.setRequestHeader("Accept-Encoding", "gzip, deflate");
			WinHttp.setRequestHeader("Connection", "Keep-Alive");
			WinHttp.setRequestHeader("Content-Length", "169");
			WinHttp.setRequestHeader("DNT", "1");
			WinHttp.setRequestHeader("Host", "kad.arbitr.ru");
			WinHttp.setRequestHeader("Pragma", "no-cache");
			
			ПараметрыПОСТ = "{""Page"":" + Страница + ",""Count"":25,""Courts"":[],""DateFrom"":""" + ПривестиКНачДатеJSON(ДатаНач) + """,""DateTo"":""" + ПривестиККонДатеJSON(ДатаКон) + """,""Sides"":[{""Name"":""" + ИНН + """,""Type"":-1,""ExactMatch"":false}],""Judges"":[],""CaseNumbers"":[],""WithVKSInstances"":false}";
			WinHttp.Send(ПараметрыПОСТ);
			ТекстОтветаСырой = WinHttp.ResponseText();
		Исключение
			Ошибка = истина;
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
		Если Ошибка Тогда 
			Возврат;
		КонецЕсли;
		///////////////////////////////////
		//Текст = Новый ТекстовыйДокумент;
		//Текст.УстановитьТекст(ТекстОтвета);
		//Текст.Записать("c:\2222");
		//ТекстОтвета = Текст.ПолучитьТекст();
		ТекстОтвета = ТекстОтветаСырой;
		ТекстОтвета = СтрЗаменить(ТекстОтвета,"null","""null""");		
		ТекстОтвета = СтрЗаменить(ТекстОтвета,"\""","""");
		ТекстОтвета = СтрЗаменить(ТекстОтвета,"\u0026","&");
		ТекстОтвета = СтрЗаменить(ТекстОтвета,"\u003c","<");
		ТекстОтвета = СтрЗаменить(ТекстОтвета,"\u003e",">");
		ТекстОтвета = СтрЗаменить(ТекстОтвета,"\u0027","'");
		
		ТаблицаДел = новый ТаблицаЗначений;
		ТаблицаДел.Колонки.Добавить("CaseId");
		ТаблицаДел.Колонки.Добавить("CaseNumber");
		ТаблицаДел.Колонки.Добавить("CaseType");
		ТаблицаДел.Колонки.Добавить("CourtInn");
		ТаблицаДел.Колонки.Добавить("Date");
		ТаблицаДел.Колонки.Добавить("IsSimpleJustice");
		ТаблицаДел.Колонки.Добавить("Judge");	
		ТаблицаДел.Колонки.Добавить("PlaintiffInn");	
		ТаблицаДел.Колонки.Добавить("PlaintiffName");	
		ТаблицаДел.Колонки.Добавить("PlaintiffAddress");	
		ТаблицаДел.Колонки.Добавить("RespondentInn");	
		ТаблицаДел.Колонки.Добавить("RespondentName");	
		ТаблицаДел.Колонки.Добавить("RespondentAddress");	
		
		//Текст = Новый ТекстовыйДокумент;
		//Текст.Прочитать("c:\1111");
		//ТекстОтвета = Текст.ПолучитьТекст();
		//ТекстОтвета = СтрЗаменить(ТекстОтвета,"null","""null""");
		
		
		ПозНачалоItems = Найти(ТекстОтвета,"Items") + 7;
		ПозКонецItems = Найти(ТекстОтвета,"Message") - 4;
		
		Если (ПозКонецItems<(ПозНачалоItems+10)) Тогда
			//Сообщить("Неверный или пустой JSON");
			Прервать;
		КонецЕсли; 
		
		Дела = Сред(ТекстОтвета,ПозНачалоItems,ПозКонецItems-ПозНачалоItems+1);
		
		// Парсинг	
		ТекущаяСтрока = Дела;
		
		// Создадим отдельные блоки из дел
		МассивНачальныхПозицийБлоков = МассивНачалБлоков(ТекущаяСтрока,"CaseId");
		
		МассивБлоков = новый массив;
		
		Для й=0 по МассивНачальныхПозицийБлоков.Количество()-1 Цикл
			
			Если (й<(МассивНачальныхПозицийБлоков.Количество()-1)) Тогда 
				МассивБлоков.Добавить(Сред(ТекущаяСтрока,МассивНачальныхПозицийБлоков[й],МассивНачальныхПозицийБлоков[й+1]-МассивНачальныхПозицийБлоков[й]));
			Иначе 
				МассивБлоков.Добавить(Сред(ТекущаяСтрока,МассивНачальныхПозицийБлоков[й],СтрДлина(ТекущаяСтрока) - МассивНачальныхПозицийБлоков[й]));
			КонецЕсли;
			
		КонецЦикла;
		
		// Парсим блок ! 
		// Сначала простые теги
		//CaseId
		//CaseNumber
		//CaseType
		//CourtInn
		//Date
		//IsSimpleJustice
		//Judge
		//Потом сложные теги: 
		// Истец
		//  
		// Ответчик
		// 
		
		//ОбщееКоличество = МассивБлоков.Количество();
		//ЭлементыФормы.Индикатор1.МинимальноеЗначение = 1;
		//ЭлементыФормы.Индикатор1.МаксимальноеЗначение =ОбщееКоличество;
		//
		//Бегунок = 0;
		
		Для каждого эл из МассивБлоков Цикл
			
	//		Бегунок = Бегунок + 1;
	//		ЭлементыФормы.Индикатор1.Значение = Бегунок;
			
			СтрокаБлока = Эл;
			//CaseId
			КонецЗаголовкаCaseId = НайтиСПозиции(СтрокаБлока,""":""");
			КонецТегаCaseId = НайтиСПозиции(СтрокаБлока,"CaseNumber");
			CaseId = Сред(СтрокаБлока,КонецЗаголовкаCaseId+4,КонецТегаCaseId - КонецЗаголовкаCaseId-6);		
			//CaseNumber
			КонецЗаголовкаCaseNumber = НайтиСПозиции(СтрокаБлока,""":""",КонецТегаCaseId);
			КонецТегаCaseNumber = НайтиСПозиции(СтрокаБлока,"CaseType");
			CaseNumber = Сред(СтрокаБлока,КонецЗаголовкаCaseNumber+3,КонецТегаCaseNumber - КонецЗаголовкаCaseNumber-5);		
			//CaseType
			КонецЗаголовкаCaseType = НайтиСПозиции(СтрокаБлока,""":""",КонецТегаCaseNumber);
			КонецТегаCaseType = НайтиСПозиции(СтрокаБлока,"CourtName");
			CaseType = Сред(СтрокаБлока,КонецЗаголовкаCaseType+3,КонецТегаCaseType - КонецЗаголовкаCaseType-5);		
			
			//CourtInn
			КонецЗаголовкаCourtInn = НайтиСПозиции(СтрокаБлока,""":""",КонецТегаCaseType);
			КонецТегаCourtInn = НайтиСПозиции(СтрокаБлока,"Date");
			CourtInn = Сред(СтрокаБлока,КонецЗаголовкаCourtInn+3,КонецТегаCourtInn - КонецЗаголовкаCourtInn-5);		
			
			//Date
			КонецЗаголовкаDate = НайтиСПозиции(СтрокаБлока,""":""",КонецТегаCourtInn);
			КонецТегаDate = НайтиСПозиции(СтрокаБлока,"Plaintiffs");
			Date = Сред(СтрокаБлока,КонецЗаголовкаDate+3,КонецТегаDate - КонецЗаголовкаDate-5);		
			
			//IsSimpleJustice
			КонецЗаголовкаIsSimpleJustice = НайтиСПозиции(СтрокаБлока,"IsSimpleJustice",КонецТегаDate);
			КонецТегаIsSimpleJustice = НайтиСПозиции(СтрокаБлока,"Judge");
			IsSimpleJustice = Сред(СтрокаБлока,КонецЗаголовкаIsSimpleJustice+17,КонецТегаIsSimpleJustice - КонецЗаголовкаIsSimpleJustice-18);		
			
			//Judge
			КонецЗаголовкаJudge = НайтиСПозиции(СтрокаБлока,""":""",КонецТегаIsSimpleJustice);
			КонецТегаJudge = НайтиСПозиции(СтрокаБлока,"""}");
			Judge = Сред(СтрокаБлока,КонецЗаголовкаJudge+3,КонецТегаJudge - КонецЗаголовкаJudge-2);		
			
			// PlainTiff
			НачалоБлокаPlainTiff = НайтиСПозиции(СтрокаБлока,"""Plaintiffs"":");
			КонецБлокаPlainTiff = НайтиСПозиции(СтрокаБлока,"""Respondents"":");
		    БлокPlainTiff = Сред(СтрокаБлока,НачалоБлокаPlainTiff,КонецБлокаPlainTiff-НачалоБлокаPlainTiff);
			
			// Вытаскиваем теги: 
			// Name
			НачалоЗаголовкаName = НайтиСПозиции(БлокPlainTiff,"""Name""");
			КонецТегаName = НайтиСПозиции(БлокPlainTiff,"""Inn""");
			Если (КонецТегаName=0 или НачалоЗаголовкаName=0) Тогда 
				PlaintiffName = "";
			Иначе 
				PlaintiffName = Сред(БлокPlainTiff,НачалоЗаголовкаName+9,КонецТегаName - НачалоЗаголовкаName - 10);		
			КонецЕсли;

			// Inn
			НачалоЗаголовкаInn = НайтиСПозиции(БлокPlainTiff,"""Inn""");
			КонецТегаInn = НайтиСПозиции(БлокPlainTiff,"""Address""");
			Если (КонецТегаInn=0 или НачалоЗаголовкаInn=0) Тогда 
				PlaintiffInn = "";
			Иначе 
				PlaintiffInn = Сред(БлокPlainTiff,НачалоЗаголовкаInn+8,КонецТегаInn - НачалоЗаголовкаInn-9);		
			Конецесли;
			
			// Address
			НачалоЗаголовкаAddress = НайтиСПозиции(БлокPlainTiff,"""Address""");
			КонецТегаAddress = НайтиСПозиции(БлокPlainTiff,"""OrganizationForm""");
			PlaintiffAddress = Сред(БлокPlainTiff,НачалоЗаголовкаAddress+12,КонецТегаAddress - НачалоЗаголовкаAddress-13);		
			
			
			// Respondent
			НачалоБлокаRespondent 	= НайтиСПозиции(СтрокаБлока,"""Respondents"":");
			КонецБлокаRespondent	= НайтиСПозиции(СтрокаБлока,"""IsSimpleJustice"":");
		    БлокRespondent 		= Сред(СтрокаБлока,НачалоБлокаRespondent,КонецБлокаRespondent-НачалоБлокаRespondent);
			
			// Вытаскиваем теги: 
			// Name
			НачалоЗаголовкаName = НайтиСПозиции(БлокRespondent,"""Name""");
			КонецТегаName = НайтиСПозиции(БлокRespondent,"""Inn""");
			Если (КонецТегаName=0 или НачалоЗаголовкаName=0) Тогда 
				RespondentName = "";
			иНАЧЕ 
				RespondentName = Сред(БлокRespondent,НачалоЗаголовкаName+9,КонецТегаName - НачалоЗаголовкаName - 10);		
			КонецЕсли;

			// Inn
			НачалоЗаголовкаInn = НайтиСПозиции(БлокRespondent,"""Inn""");
			КонецТегаInn = НайтиСПозиции(БлокRespondent,"""Address""");
			Если (КонецТегаInn=0 или НачалоЗаголовкаInn=0) Тогда 
				RespondentInn = "";
			Иначе 
				RespondentInn = Сред(БлокRespondent,НачалоЗаголовкаInn+8,КонецТегаInn - НачалоЗаголовкаInn-9);		
			КонецЕсли;
			
			// Address
			НачалоЗаголовкаAddress = НайтиСПозиции(БлокRespondent,"""Address""");
			КонецТегаAddress = НайтиСПозиции(БлокRespondent,"""OrganizationForm""");
			Если (НачалоЗаголовкаAddress=0 или КонецТегаAddress=0) Тогда 
				RespondentAddress = "";
			Иначе
				RespondentAddress = Сред(БлокRespondent,НачалоЗаголовкаAddress+12,КонецТегаAddress - НачалоЗаголовкаAddress-13);		
			КонецЕсли;
			
			СтрУ 					= ТаблицаДел.Добавить();
			СтрУ.CaseId 			= CaseId;
			СтрУ.CaseNumber 		= CaseNumber;
			СтрУ.CaseType 			= CaseType;
			СтрУ.CourtInn 			= CourtInn;
			СтрУ.Date 				= Date;
			СтрУ.IsSimpleJustice 	= IsSimpleJustice;
			СтрУ.PlaintiffInn		= PlaintiffInn;
			СтрУ.PlaintiffName		= PlaintiffName;
			СтрУ.PlaintiffAddress	= PlaintiffAddress;
			СтрУ.RespondentInn		= RespondentInn;
			СтрУ.RespondentName		= RespondentName;
			СтрУ.RespondentAddress	= RespondentAddress;
			
		КонеЦЦикла;
		
		// Запись в регистр. 
		Для каждого стрх из ТаблицаДел Цикл
			НаборЗаписей = РегистрыСведений.ДанныеПоСудебнымДелам.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.GuidДела.Установить(СтрХ.CaseID);
			НаборЗаписей.Отбор.НомерДела.Установить(СтрХ.CaseNumber);
			НаборЗаписей.Отбор.ИННИстца.Установить(СтрХ.PlaintiffInn);
			НаборЗаписей.Отбор.ИННОтветчика.Установить(СтрХ.RespondentInn);
			НаборЗаписей.Отбор.НаименованиеИстца.Установить(СтрХ.PlaintiffName);
			НаборЗаписей.Отбор.НаименованиеОтветчика.Установить(СтрХ.RespondentName);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество()>0 Тогда 
				Продолжить;
			Конецесли;
			
			МенеджерРегистра = РегистрыСведений.ДанныеПоСудебнымДелам.СоздатьМенеджерЗаписи();
			МенеджерРегистра.Период = ТекущаяДата(); 
			МенеджерРегистра.GuidДела = СтрХ.CaseId; 
			МенеджерРегистра.НомерДела = СтрХ.CaseNumber; 
			МенеджерРегистра.ИннИстца = СтрХ.PlaintiffInn; 
			МенеджерРегистра.НаименованиеИстца = СтрХ.PlaintiffName; 
			МенеджерРегистра.ИННОтветчика = СтрХ.RespondentInn; 		
			МенеджерРегистра.НаименованиеОтветчика = СтрХ.RespondentName; 		
			МенеджерРегистра.СудебныйОрган = СтрХ.CourtInn; 		
			МенеджерРегистра.ТипДела = СтрХ.CaseType; 		
			МенеджерРегистра.Дата = ПривестиКДате(СтрХ.Date); 		
			МенеджерРегистра.IsSimpleJustice = ?(НРег(СтрХ.IsSimpleJustice)="true",Истина,Ложь); 		
			МенеджерРегистра.АдресИстца = СтрХ.PlaintiffAddress; 		
			МенеджерРегистра.АдресОтветчика = СтрХ.RespondentAddress; 		
			МенеджерРегистра.Записать();
			
		КонецЦикла;	
		
 КонецЦикла;
	
КонецПроцедуры	

Функция МассивНачалБлоков(ТекущаяСтрока,Тег)
	
	МассивВозврата = новый массив;
	
	ВремСтрока = ТекущаяСтрока;
	ДлинаТега = СтрДлина(Тег);
	
	Бегунок = 0;
	Пока истина Цикл
		Позиция = Найти(ВремСтрока,Тег);			
		
		Если (Позиция=0) Тогда 
			Прервать;
		КонецЕсли;
		
		МассивВозврата.Добавить(Позиция+Бегунок);
		Времстрока = Сред(Времстрока,Позиция+ДлинаТега);
		Бегунок = Бегунок + Позиция + ДлинаТега - 1;		
		
	КонеЦЦикла;
	
	Возврат МассивВозврата;
КонецФункции

Функция НайтиСПозиции(Строка,Подстрокапоиска,Позиция=0)
	
	СтрокаДляпоиска = Сред(Строка,позиция);
	Позицияпоиска = Найти(СтрокаДляпоиска,Подстрокапоиска);
	
	Если Позицияпоиска<>0 Тогда 
		Возврат Позицияпоиска + позиция -1;
	КонецЕсли;
	
	Возврат 0;
	
конецФункции

Функция ПривестиКДате(Дата)
	
	Попытка 
		Год = Лев(Дата,4);
		Месяц = Сред(Дата,6,2);
		День = Сред(Дата,9,2);
		ДатаВозвр = Дата(Год+Месяц+День);
	Исключение
		Возврат '0001-01-01'; 
	КонецПопытки;
	
	Возврат ДатаВозвр;
КонецФункции

Функция ПривестиККонДатеJSON(Дата)
	Возврат Формат(Дата,"ДФ=yyyy-MM-dd")+"T23:59:59";	
КонецФункции

Функция ПривестиКНачДатеJSON(Дата)
	Возврат Формат(Дата,"ДФ=yyyy-MM-dd")+"T00:00:00";		
КонецФункции

Процедура ОчиститьРегистрНажатие(Элемент)
	// Вставить содержимое обработчика.
	
	МенеджерЗаписи = РегистрыСведений.ДанныеПоСудебнымДелам.СоздатьМенеджерЗаписи();
  	Выборка = РегистрыСведений.ДанныеПоСудебнымДелам.Выбрать();
	Бегунок = 0;
	Пока Выборка.Следующий() Цикл
		Бегунок = Бегунок + 1;
    	МенеджерЗаписи = Выборка.ПолучитьМенеджерЗаписи();      
    	МенеджерЗаписи.Прочитать();
    	МенеджерЗаписи.Удалить();
		Сообщить(Бегунок);
  	Конеццикла;  
КонецПроцедуры
