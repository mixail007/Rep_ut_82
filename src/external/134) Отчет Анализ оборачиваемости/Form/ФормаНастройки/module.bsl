///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик нажатия кнопки ОК.
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	Закрыть(Истина);
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "КнопкаНастройкаПериода"
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНачала, ДатаКонца);
	Если НП.Редактировать() Тогда
		ДатаНачала = НП.ПолучитьДатуНачала();
		ДатаКонца  = НП.ПолучитьДатуОкончания();
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки "УстановитьВсе" командной панели списка показателей
//
Процедура КоманднаяПанельПоказателиУстановитьВсе(Кнопка)

	Для Каждого Строка Из  Показатели Цикл
		Строка.Использование = Истина;
	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки "СнятьВсе" командной панели списка показателей
//
Процедура КоманднаяПанельПоказателиСнятьВсе(Кнопка)

	Для Каждого Строка Из  Показатели Цикл
		Строка.Использование = Ложь;
	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "ИспользоватьСвойстваИКатегории".
//
Процедура ИспользоватьСвойстваИКатегорииПриИзменении(Элемент)

	// Запоминаем текущую настройку
	Настройки = ПостроительОтчета.ПолучитьНастройки();
	ТабПоказатели = Показатели.Выгрузить();

	// Перезаполнение объекта (с новым текстом запроса)
	ЗаполнитьНачальныеНастройки();

	// Восстанавливаем запомненную настройку
	ПостроительОтчета.УстановитьНастройки(Настройки);

	Для Каждого Показатель Из Показатели Цикл
		НайдСтр = ТабПоказатели.Найти(Показатель.Имя, "Имя");
		Если НайдСтр<>Неопределено Тогда
			Показатель.Использование = НайдСтр.Использование;
		КонецЕсли;
	КонецЦикла;
	
	Оповестить("ИзмененТекстЗапроса", , ЭтаФорма);

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля "Значение" табличной части "Отбор".
//
Процедура ОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	// Отборы по свойствам и категориям должны быть обработаны специальным образом
	// Они определяются по представлению 
	Если Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "категории") Тогда

		// Ограничение списка категорий списокЗначений
		Назначение = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборКатегории(Элемент, Назначение, ЭтаФорма, СтандартнаяОбработка);

	ИначеЕсли Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "св-во") Тогда

		Свойство = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборСвойства(Элемент, Свойство, ЭтаФорма, СтандартнаяОбработка);

	КонецЕсли;

КонецПроцедуры

