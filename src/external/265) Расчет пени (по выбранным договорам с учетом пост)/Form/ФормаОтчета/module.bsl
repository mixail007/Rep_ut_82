
Перем Настройки;
Перем ПараметрДанныхНачалоПериода, ПараметрДанныхКонецПериода, ПараметрДанныхСписокПоступлений, ИменованныйОтбор, УсловноеОформление;
Перем ТаблицаРезультат;

Процедура КнопкаВыбораПериодаНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
		ПараметрДанныхНачалоПериода.Значение = ДатаНач;	
		ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаКон);
	КонецЕсли;
	
КонецПроцедуры

Процедура НачалоПериодаПриИзменении(Элемент)
	
	ПараметрДанныхНачалоПериода.Значение = ДатаНач;	
	
КонецПроцедуры

Процедура КонецПериодаПриИзменении(Элемент)
	
	ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаКон);
	
	//ПараметрДанныхДатаКон = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[3];
	//ПараметрДанныхДатаКон.Значение = КонецДня(ДатаКон)+1;
	//ПараметрДанныхДатаКон.Использование = Истина;
	//
	//ПараметрДанныхПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[2];
	//ПараметрДанныхПериод.Значение = КонецДня(ДатаКон)+1;
	//ПараметрДанныхПериод.Использование = Истина;
	
КонецПроцедуры

Процедура ОтборДоговорыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[7];
	ПараметрДанныхСписокПоступлений.Значение = ОтборДоговоры;
	ПараметрДанныхСписокПоступлений.Использование = Истина;
	
КонецПроцедуры

Процедура ОтборПоступленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[5];
	ПараметрДанныхСписокПоступлений.Значение = ОтборПоступления;
	ПараметрДанныхСписокПоступлений.Использование = Истина;
	
КонецПроцедуры

Процедура СтавкаПроцентовГодовыхПриИзменении(Элемент)
	
	ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[4];
	ПараметрДанныхСписокПоступлений.Значение = СтавкаПроцентовГодовых;
	ПараметрДанныхСписокПоступлений.Использование = Истина;
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	ОтборДоговоры.Очистить();
	
	ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[6];
	ПараметрДанныхСписокПоступлений.Значение = Контрагент;
	ПараметрДанныхСписокПоступлений.Использование = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорыКонтрагентов.Ссылка
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Владелец = &Контрагент";
	Результат = Запрос.Выполнить().Выгрузить();
	СЗ = Новый СписокЗначений;
	СЗ.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Ссылка"));	
	Для каждого ЭлементСЗ из СЗ Цикл
		ОтборДоговоры.Добавить(ЭлементСЗ.Значение, ЭлементСЗ.Значение.ОтветственноеЛицо.Наименование, Ложь);
	КонецЦикла;
	
	//ОтборДоговоры = СЗ;
	
	ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[7];
	ПараметрДанныхСписокПоступлений.Значение = ОтборДоговоры;
	ПараметрДанныхСписокПоступлений.Использование = Истина;
	
КонецПроцедуры

Процедура КоманднаяПанель1ПодборПоступлений(Кнопка)
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		ФормаВыбора = Документы.ПоступлениеТоваровУслуг.ПолучитьФормуВыбора(,ЭтаФорма,);
		// Отфильруем список документов по контрагенту
		ФормаВыбора.Отбор.ДокументыПоКонтрагенту.Значение      = Контрагент;
		ФормаВыбора.Отбор.ДокументыПоКонтрагенту.Использование = Истина;
		ФормаВыбора.Отбор.ДокументыПоКонтрагенту.ВидСравнения  = ВидСравнения.Равно;
		
		//ФормаВыбора.РежимВыбора = Истина;
		ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
		
		ФормаВыбора.Открыть();
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда 
		Если ОтборПоступления.НайтиПоЗначению(ЗначениеВыбора) = Неопределено Тогда 
			НовПоступл = ОтборПоступления.Добавить(); 
			НовПоступл.Значение = ЗначениеВыбора; 
			НовПоступл.Представление = Формат(Значениевыбора.СуммаДокумента, "ЧДЦ=2");
		КонецЕсли; 
	КонецЕсли;
		
КонецПроцедуры

Процедура ОтборДоговорыЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СписокВидовДоговоров = Новый СписокЗначений;
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);

	НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, Элемент.Значение,
	                                        СписокВидовДоговоров , СтандартнаяОбработка, Неопределено);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	УстановитьНастройки();
	
КонецПроцедуры

Процедура УстановитьНастройки()
	
	//НачалоПериода = НачалоМесяца(ТекущаяДата());
	//КонецПериода = КонецМесяца(ТекущаяДата());
	
	ПараметрДанныхНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0];
	ПараметрДанныхНачалоПериода.Значение = ДатаНач;
	ПараметрДанныхНачалоПериода.Использование = Истина;
	
	ПараметрДанныхКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1];
	ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаКон);
	ПараметрДанныхКонецПериода.Использование = Истина;
	
	ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[5];
	ПараметрДанныхСписокПоступлений.Значение = ОтборПоступления;
	ПараметрДанныхСписокПоступлений.Использование = Истина;
	
	ПараметрыВывода = КомпоновщикНастроек.Настройки.ПараметрыВывода;
	ПараметрВыводПараметров = ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьПараметрыДанных"));
	ПараметрВыводПараметров.Использование = Истина;
	ПараметрВыводПараметров.Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
	
	Настройки = КомпоновщикНастроек.Настройки;
	
КонецПроцедуры

Процедура КоманднаяПанель2УстановитьВсе(Кнопка)
	Для Каждого Договор Из ОтборДоговоры Цикл
		Договор.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель2Действие5(Кнопка)
	Для Каждого Договор Из ОтборДоговоры Цикл
		Договор.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

Процедура ДействияФормыНачислениеПени(Кнопка)	
	
	ИмяКаталога = ПолучитьИмяКаталога(глТекущийПользователь);
	
	НаименованиеКонтрагента = Контрагент.Наименование;
	НаименованиеКонтрагента = СтрЗаменить(НаименованиеКонтрагента, "/", "_");
	НаименованиеКонтрагента = СтрЗаменить(НаименованиеКонтрагента, "\", "_");
	
	ЭлементыФормы.Результат.Записать(ИмяКаталога + "\Пени по " + НаименованиеКонтрагента + " за период с " +Лев(ДатаНач, 10)+ " по "+Лев(ДатаКон,10)+".xls", ТипФайлаТабличногоДокумента.XLS);	
	
	ДокПени = Документы.НачислениеПени.СоздатьДокумент();
	ДокПени.Дата = ТекущаяДата(); 
	ДокПени.УстановитьНовыйНомер("Ф");
	ДокПени.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
	ДокПени.РасчетСуммыПениВФайле = Истина;
	ДокПени.Организация = Справочники.Организации.НайтиПоКоду("00001");
	ДокПени.Контрагент = Контрагент;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Пени", Справочники.ТипыДоговоров.Пени);
	Запрос.УстановитьПараметр("ОтветственноеЛицо", глТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ
				   |	ДоговорыКонтрагентов.Ссылка
				   |ИЗ
				   |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
				   |ГДЕ
				   |	ДоговорыКонтрагентов.Владелец = &Контрагент
				   |	И ДоговорыКонтрагентов.ТипДоговора = &Пени
				   |	И ДоговорыКонтрагентов.ОтветственноеЛицо = &ОтветственноеЛицо";
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	ДокПени.ДоговорКонтрагента = Результат.Ссылка;
	ДокПени.ДатаНачисления = ТекущаяДата();
	ДокПени.НачалоПериодаРасчетаСуммыДолга = ДатаНач;
	ДокПени.КонецПериодаРасчетаСуммыДолга = ДатаКон;
	ДокПени.СуммаДокумента = СуммаПени;
	ДокПени.Записать();
	
	Попытка
		ЛокХранилище = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИмяКаталога + "\Пени по " + НаименованиеКонтрагента + " за период с " +Лев(ДатаНач, 10)+ " по "+Лев(ДатаКон,10)+".xls"));
	Исключение
	КонецПопытки;
	СправочникХЗН = Справочники.ХранилищеДополнительнойИнформации.СоздатьЭлемент();
	СправочникХЗН.Наименование = "Начисление пени №"+ДокПени.Номер+" от " + ДокПени.Дата;
	СправочникХЗН.Хранилище = ЛокХранилище;
	СправочникХЗН.ВидДанных = Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл;
	СправочникХЗН.Объект = ДокПени.Ссылка;
	СправочникХЗН.ИмяФайла = "Пени по " +Контрагент+ " за период с " +Лев(ДатаНач, 10)+ " по "+Лев(ДатаКон,10)+".xls";
	Попытка
		СправочникХЗН.Записать();
	Исключение
	КонецПопытки;	
	
	Если НЕ ТаблицаРезультат.Количество() = 0 Тогда
		Для каждого СтрТЗ ИЗ ТаблицаРезультат Цикл
			Если НЕ СтрТЗ.Сделка = Неопределено Тогда
				СтрокаПени = ДокПени.Пени.Добавить();
				СтрокаПени.Сделка = СтрТЗ.Сделка;
				СтрокаПени.Пени = СтрТЗ.Пени;
				СтрокаПени.ДатаОплаты = СтрТЗ.Сделка.ДатаОплаты;
				СтрокаПени.ДоговорЗадолженности = СтрТЗ.Сделка.ДоговорКонтрагента;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ДокПени.ПолучитьФорму("ФормаДокументаРасчетВФайле").Открыть();
	
КонецПроцедуры

Процедура СформироватьОтчет(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(СтавкаПроцентовГодовых) Тогда
		ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[4];
		ПараметрДанныхСписокПоступлений.Значение = 0;
		ПараметрДанныхСписокПоступлений.Использование = Истина;
	КонецЕсли;
	
	Договоры = Новый СписокЗначений;
	Для Каждого Договор Из ОтборДоговоры Цикл
		Если Договор.Пометка Тогда
			Договоры.Добавить(Договор.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[7];
	ПараметрДанныхСписокПоступлений.Значение = Договоры;
	ПараметрДанныхСписокПоступлений.Использование = Истина;
	
	Настройки = КомпоновщикНастроек.Настройки;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//вывод результата в таблицу значений
	ТаблицаРезультат.Очистить();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ,ДанныеРасшифровки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Если НЕ ТаблицаРезультат.Количество() = 0 Тогда
		Для каждого СтрТЗ ИЗ ТаблицаРезультат Цикл
			Если НЕ СтрТЗ.Сделка = Неопределено Тогда
				СтрТЗ.Пени = СтрТЗ.СуммаПросрочки/100/365*СтавкаПроцентовГодовых;
			КонецЕсли;
		КонецЦикла;
		ТаблицаРезультат.Свернуть("Сделка", "Пени");
	КонецЕсли;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ,ДанныеРасшифровки);
		
	ЭлементыФормы.Результат.Очистить();
	ДокументРезультат = ЭлементыФормы.Результат;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ЭлементыФормы.Результат.ПоказатьУровеньГруппировокСтрок(0);
	ЭлементыФормы.Результат.ФиксацияСверху = 3;
	
	Обл = ДокументРезультат.НайтиТекст("Пени",,,Ложь);
	Если Обл <> Неопределено Тогда
		CтрокаЧтения1 = Обл.Низ;
		СтрокаЧтения2 = Обл.Право;
		СуммаПени = 0;
		а = 0;
		Пока а <= ДокументРезультат.ВысотаТаблицы Цикл
			а = а + 1;
			r = "R"+формат(CтрокаЧтения1+а,"ЧГ=");
			c = "C"+формат(СтрокаЧтения2,"ЧГ=");
			СуммаПени = СуммаПени + ?(ДокументРезультат.Область(r+c).Текст = "", 0, Число(ДокументРезультат.Область(r+c).Текст)); 
		КонецЦикла;
	КонецЕсли;	
	
	
	Обл = ДокументРезультат.НайтиТекст("Итого",,,,Истина);
	Если Обл <> Неопределено Тогда
		CтрокаЧтения1 = Обл.Низ;
		СтрокаЧтения2 = Обл.Право;
		r = "R"+формат(CтрокаЧтения1,"ЧГ=");
		c = "C"+формат(СтрокаЧтения2+7,"ЧГ=");
		ДокументРезультат.Область(r+c).Текст = Формат(СуммаПени,"ЧДЦ=2"); 
	КонецЕсли;	
		
КонецПроцедуры;


ТаблицаРезультат = Новый ТаблицаЗначений;









