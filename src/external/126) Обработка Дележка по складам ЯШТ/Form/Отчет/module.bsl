перем ТекстЗапросаСКрышками;


Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	
	ТекущаяДата = ТекущаяДата();
	//ЭлементыФормы.ДействияФормы.Кнопки.КОтгрузке.Доступность = РольДоступна("ПолныеПрава")
	//ИЛИ ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОтображатьТолькоСобственныеЗаказы");
	//
	УчетКрышек = ЛОЖЬ;
    ФлажокПроизводство = Истина;
		ЭлементыФормы.ТаблицаЗаказыПокупателей.КонтекстноеМеню = ЭлементыФормы.КоманднаяПанель1;

КонецПроцедуры             

Процедура ДействияФормыКОтгрузке(Кнопка)
			// Вставить содержимое обработчика.
	
	Сообщить("Начало дележки:"+СТрока(ТекущаяДата()));
	
	//Сообщить("Всего документов к дележке: "+Строка(ЗаказыПокупателей.Количество()));
	
	НомПП=0;
	
	Для каждого СтрокаДокумента Из  ТаблицаЗаказыПокупателей Цикл
		Если СтрокаДокумента.Делить Тогда
			
			НомПП=НомПП+1;
			ДокументСсылка= СтрокаДокумента.ЗаказПокупателя;
			Сообщить(Строка(НомПП)+ ". "+ Строка(ДокументСсылка)+" обрабатывается, начало обработки: "+ТекущаяДата());
			ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
						
			
			ДокументОбъект.Проверен = Истина;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЦикла;
	
	Сообщить("Конец дележки:"+СТрока(ТекущаяДата()));

КонецПроцедуры

Функция ПолучитьСуммуПредоплаты(Ссылка)
	
	Возврат 0;
	
КонецФункции

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	//// Вставить содержимое обработчика.
	//Пароль = ПолучитьФорму("Пароль");
	//Резалт = Пароль.ОткрытьМодально();
	//Если (Резалт<>1) Тогда
	//	Отказ = Истина;
	//КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
     ДляОсвобождения.Очистить();
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
//	Отчет(ТабДок);
//+++   18.05.2012

	началоВр = ТекущаяДата();
	
	Отчет(ТабДок);

	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
 	парамЗапроса = ?(ПоказыватьТолькоНепроделенные,"Непроделенные,","")	+?(ФлажокПоМинусам,"По минусам,","")+?(УчетКрышек,"Крышки,","")
	+?(ДатаДискиВПути='00010101',"","По "+строка(ДатаДискиВПути)+",")+?(ФлажокПроизводство,"плюс в производстве ","")+строка(ОтборЗаказПокупателя);
	Если ВремяВыполнения>0 тогда
		//общий модуль:  яштПрочее.ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки(
		ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 126, ВремяВыполнения, "Кнопка [Сформировать] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
	КонецЕсли;	
	//+++)   18.05.2012

	ТабДок.ОтображатьЗаголовки = Ложь;


КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт

	СписокЗаказовПокупателей=Новый СписокЗначений;
	
    Макет = ПолучитьМакет("Отчет");
    Запрос = Новый Запрос;
	
Если УчетКрышек тогда // как было 
	Запрос.Текст = ТекстЗапросаСКрышками;
иначе
//=============================изначальный запрос в процедуре Отчет() ==============================
Запрос.Текст ="
|ВЫБРАТЬ Номенклатура.Код Код, Номенклатура, Цена, ОтветственноеЛицо, Контрагент, 
|ЗаказПокупателя, ЗаказПокупателя.Номер ЗаказПокупателяНомер, ЗаказПокупателя.Дата ЗаказПокупателяДата,
|КоличествоЗаказано, КоличествоПроделено, КоличествоОстатокНаСкладах,  СуммаЗаказа, СуммаОплаты,
|	ЕстьNULL(КоэффициентКомплектацииДиски,-1) КоэффициентКомплектацииДиски,
|	ЕстьNULL(СвободныйОстатокПоказать,-1) СвободныйОстатокПоказать,
| КоличествоОстатокНаСкладах-КоличествоПроделено-КоличествоЗаказано СвободныйОстаток,
//| КоличествоОстатокНаСкладах-КоличествоПроделено СвободныйОстаток,
//| КоличествоОстатокНаСкладах-КоличествоПроделено ОстатокМинусПроделено,
| КоличествоЗаказаноУПоставщика как КоличествоЗаказаноУПоставщика,
| КоличествоЗаказаноУПоставщикаПр как КоличествоЗаказаноУПоставщикаПр,
| КоличествоЗаказаноУПоставщика2 как КоличествоЗаказаноУПоставщика2,
| КоличествоЗаказаноУПоставщикаПр2 как КоличествоЗаказаноУПоставщикаПр2
|
| ИЗ
| 
| ( ВЫБРАТЬ
|		ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
|		ЗаказыПокупателейОстатки.Цена КАК Цена,
|		ЗаказыПокупателейОстатки.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
|		ЗаказыПокупателейОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
|		ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
|		ЗаказыПокупателейОстатки.ЗаказПокупателя.СуммаДокумента СуммаЗаказа,
|		ЕстьNULL(ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход,0) СуммаОплаты,
|		ВЫБОР КОГДА НЕ ЗаказыПокупателейОстатки.ЗаказПокупателя.Проверен ТОГДА 
|		ЗаказыПокупателейОстатки.КоличествоОстаток
|		ИНАЧЕ
|		0
|		КОНЕЦ КоличествоЗаказано,
|		ВЫБОР КОГДА  ЗаказыПокупателейОстатки.ЗаказПокупателя.Проверен ТОГДА 
|		ЗаказыПокупателейОстатки.КоличествоОстаток
|		ИНАЧЕ
|		0
|  	КОНЕЦ КоличествоПроделено,
|	ЕстьNull(ЗаказыПоставщикамОстатки.КоличествоОстаток,0) как КоличествоЗаказаноУПоставщика,
//21.11.2013-----------------------------------------------------------------
|0 //Вставка1
//-----------------------------------------------------------------
| как КоличествоЗаказаноУПоставщикаПр,

|ЕстьNull(ЗаказыПоставщикамОстаткиТ.КоличествоОстаток,0) как КоличествоЗаказаноУПоставщика2,
//21.11.2013-----------------------------------------------------------------
|0 //ВставкаТ1
//-----------------------------------------------------------------
|	как КоличествоЗаказаноУПоставщикаПр2,
|		ЕстьNULL(ТоварыНаСкладахОстатки.КоличествоОстаток,0) КАК КоличествоОстатокНаСкладах,		
|       -1   СвободныйОстатокПоказать,
|       1  КоэффициентКомплектацииДиски
|	ИЗ
|		РегистрНакопления.ЗаказыПокупателей.Остатки(, (Не ЗаказПокупателя.Транзит)
//|	И ЗаказПокупателя.Проверен = Истина 
|И (Номенклатура В ИЕРАРХИИ (&Диски) ИЛИ Номенклатура В ИЕРАРХИИ (&Шины) ИЛИ Номенклатура В ИЕРАРХИИ (&АКБ) ИЛИ Номенклатура В ИЕРАРХИИ (&Аксессуары)) //ОТБОРНОМЕНКЛАТУРА_И
|) КАК ЗаказыПокупателейОстатки
|
|	ЛЕВОЕ СОЕДИНЕНИЕ 
|	( Выбрать Сделка, СуммаВзаиморасчетовРасход
|	ИЗ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(&НачалоПериодаКонтроляОплат,,,ДоговорКонтрагента.ВедениеВзаиморасчетов =Значение(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)))
|	ВзаиморасчетыСКонтрагентамиОбороты
|	ПО ЗаказыПокупателейОстатки.ЗаказПокупателя=ВзаиморасчетыСКонтрагентамиОбороты.Сделка
|			ЛЕВОЕ СОЕДИНЕНИЕ
|( ВЫБРАТЬ А.Номенклатура, СУММА(А.КоличествоОстаток) КоличествоОстаток  		
|   ИЗ 		 
|	(
|ВЫБРАТЬ  Номенклатура, 
|		КоличествоОстаток ИЗ 
|	РегистрНакопления.ТоварыНаСкладах.Остатки ( , (НЕ Склад.Транзитный) И (НЕ Склад.ЗапретитьИспользование)
//|	И Номенклатура.ВидТовара <> Значение(Перечисление.ВидыТоваров.Прочее) 
|И (Номенклатура В ИЕРАРХИИ (&Диски) ИЛИ Номенклатура В ИЕРАРХИИ (&Шины) ИЛИ Номенклатура В ИЕРАРХИИ (&АКБ) ИЛИ Номенклатура В ИЕРАРХИИ (&Аксессуары))
|//ОТБОРНОМЕНКЛАТУРА_И
|	) ТоварыНаСкладахОстатки ) А 
|СГРУППИРОВАТЬ ПО А.Номенклатура
|)  ТоварыНаСкладахОстатки
|  
|ПО ЗаказыПокупателейОстатки.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
//============================================================================================
|	ЛЕВОЕ СОЕДИНЕНИЕ 
|(ВЫБРАТЬ
|Номенклатура,
|СУММА(КоличествоОстаток) КоличествоОстаток ИЗ
|(ВЫБРАТЬ 
//|ЗначенияСвойствОбъектов.ДатаПоступленияВПорт,
|ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA как ДатаПоступленияВПорт,
|ЗаказыПоставщикамОстатки.ЗаказПоставщику,
|	ЗаказыПоставщикамОстатки.Номенклатура,
|	ЕстьNull(ЗаказыПоставщикамОстатки.КоличествоОстаток,0) как КоличествоОстаток
|ИЗ
|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, (НЕ ЗаказПоставщику.Транзит)
|	И (ЗаказПоставщику.Подразделение=&ЯШТ или ЗаказПоставщику.Подразделение=Значение(Справочник.Подразделения.ПустаяСсылка)) 
//|	И Номенклатура.ВидТовара <> Значение(Перечисление.ВидыТоваров.Прочее) 
| И (Номенклатура В ИЕРАРХИИ (&Диски) ИЛИ Номенклатура В ИЕРАРХИИ (&Шины) ИЛИ Номенклатура В ИЕРАРХИИ (&АКБ) ИЛИ Номенклатура В ИЕРАРХИИ (&Аксессуары))
|	И ( (ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA >= &МинДатаВПути и ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДатаДискиВПути) ИЛИ &ФлагНеУчитывать_ДатаДискиВПути )
|//ОТБОРНОМЕНКЛАТУРА_И
|) КАК ЗаказыПоставщикамОстатки
|
|) А
|СГРУППИРОВАТЬ ПО Номенклатура 
|) КАК ЗаказыПоставщикамОстатки
|    		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура

//21.11.2013-----------------------------------------------------------------
|//Вставка2

//=====================ТРАНЗИТ не филиалы!===================================================
|	ЛЕВОЕ СОЕДИНЕНИЕ 
|(ВЫБРАТЬ
|Номенклатура,
|СУММА(КоличествоОстаток) КоличествоОстаток ИЗ
|(ВЫБРАТЬ 
//|ЗначенияСвойствОбъектов.ДатаПоступленияВПорт,
|ЗаказыПоставщикамОстаткиТ.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA как ДатаПоступленияВПорт,
|ЗаказыПоставщикамОстаткиТ.ЗаказПоставщику,
|ЗаказыПоставщикамОстаткиТ.Номенклатура,
|ЗаказыПоставщикамОстаткиТ.КоличествоОстаток
|ИЗ
|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ЗаказПоставщику.Транзит
|						И (ЗаказПоставщику.Подразделение=&ЯШТ или ЗаказПоставщику.Подразделение=Значение(Справочник.Подразделения.ПустаяСсылка)) 
//|	И ДоговорКонтрагента.ОтветственноеЛицо = &СеребрА
|	И Номенклатура.ВидТовара <> Значение(Перечисление.ВидыТоваров.Прочее) 
//| И (Номенклатура В ИЕРАРХИИ (&Диски) ИЛИ Номенклатура В ИЕРАРХИИ (&Шины) ИЛИ Номенклатура В ИЕРАРХИИ (&АКБ))
|	И ( (ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA >= &МинДатаВПути и ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДатаДискиВПути) ИЛИ &ФлагНеУчитывать_ДатаДискиВПути )
|//ОТБОРНОМЕНКЛАТУРА_И
|) КАК ЗаказыПоставщикамОстаткиТ
|
|) А
|СГРУППИРОВАТЬ ПО Номенклатура 
|) КАК ЗаказыПоставщикамОстаткиТ
|    		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказыПоставщикамОстаткиТ.Номенклатура
//21.11.2013-----------------------------------------------------------------
|//ВставкаТ2
//================================================================================================
|			) А
| //ОТБОРНОМЕНКЛАТУРА 
| 		УПОРЯДОЧИТЬ ПО  Номенклатура.ВидТовара, Номенклатура.Наименование
|	ИТОГИ
|		СУММА(КоличествоЗаказано),
|		СУММА(КоличествоПроделено),
//|		СРЕДНЕЕ(ОстатокМинусПроделено),
|		СРЕДНЕЕ(КоличествоОстатокНаСкладах),
|		СРЕДНЕЕ (КоэффициентКомплектацииДиски), 
//|		ВЫБОР КОГДА СРЕДНЕЕ (СвободныйОстатокПоказать)= -1 ТОГДА
|       СРЕДНЕЕ(КоличествоОстатокНаСкладах) - СУММА(КоличествоЗаказано)- СУММА(КоличествоПроделено)  
//|		ИНАЧЕ
//|       	СРЕДНЕЕ (СвободныйОстатокПоказать)
//|		КОНЕЦ
|		КАК СвободныйОстаток,
|		МИНИМУМ(КоличествоЗаказаноУПоставщика),
|		максимум(КоличествоЗаказаноУПоставщикаПр),
|		МИНИМУМ(КоличествоЗаказаноУПоставщика2),
|		максимум(КоличествоЗаказаноУПоставщикаПр2)
|	ПО
|		Номенклатура,
|		ОтветственноеЛицо";
КонецЕсли;




если ФлажокПроизводство тогда //21.11.2013
ВТ1 = "ВЫБРАТЬ
      |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
      |	СУММА(ЕСТЬNULL(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток, 0)) КАК КоличествоВпроизводстве
      |ПОМЕСТИТЬ ВТ_ТоварыВПроизводстве
      |ИЗ
      |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(,НЕ ЗаказПоставщикуСезонный.Транзит
	  |  и ЕстьNull(ВЭД,ложь)=ложь
      |			//ОТБОРНОМЕНКЛАТУРА_И
      |				И (Номенклатура В ИЕРАРХИИ (&Диски)
      |					ИЛИ Номенклатура В ИЕРАРХИИ (&Шины)
      |					ИЛИ Номенклатура В ИЕРАРХИИ (&АКБ)
      |					ИЛИ Номенклатура В ИЕРАРХИИ (&Аксессуары))
	  	  |				И ДобавитьКДате(ЗаказПоставщикуСезонный.ДатаДействияПо,День,30) >= &текДата
      |				И (ЗаказПоставщикуСезонный.Подразделение = &ЯШТ
      |					ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	  |) КАК ЗаказыПоставщикамСезонныеОстатки
      |ГДЕ
      |	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток > 0
      |
      |СГРУППИРОВАТЬ ПО
      |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура;
	  |////////////////////////////////////////////////////
	  |";

ВТ2 = "ВЫБРАТЬ
|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
|	СУММА(ЕстьNull(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток,0)) как КоличествоВпроизводстве
|
|	ПОМЕСТИТЬ ВТ_ТоварыВПроизводствеТ
|ИЗ
|	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(, (ЗаказПоставщикуСезонный.Транзит)
|  и ЕстьNull(ВЭД,ложь)=ложь
| И (Номенклатура В ИЕРАРХИИ (&Диски) ИЛИ Номенклатура В ИЕРАРХИИ (&Шины) ИЛИ Номенклатура В ИЕРАРХИИ (&АКБ) ИЛИ Номенклатура В ИЕРАРХИИ (&Аксессуары))
|			//ОТБОРНОМЕНКЛАТУРА_И
|			И (ЗаказПоставщикуСезонный.Подразделение=&ЯШТ или ЗаказПоставщикуСезонный.Подразделение=Значение(Справочник.Подразделения.ПустаяСсылка) ) 
|			И ДобавитьКДате(ЗаказПоставщикуСезонный.ДатаДействияПо,День,30) >= &текДата
|			) КАК ЗаказыПоставщикамСезонныеОстатки
|ГДЕ
|	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток > 0
|СГРУППИРОВАТЬ ПО
|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура;
|////////////////////////////////////////////////////////////
|";

запрос.текст = ВТ1 + ВТ2 + запрос.текст;

Запрос.Текст=СтрЗаменить(Запрос.Текст,"//Вставка1", " + ВЫБОР 
|	КОГДА ЕстьNull(ОстатокТоваровВПроизводстве.КоличествоВпроизводстве,0)<=0 ТОГДА 0
|	ИНАЧЕ ЕстьNull(ОстатокТоваровВПроизводстве.КоличествоВпроизводстве,0)
|	КОНЕЦ
|");

Запрос.Текст=СтрЗаменить(Запрос.Текст,"//Вставка2", "
|ЛЕВОЕ СОЕДИНЕНИЕ
|(ВЫБРАТЬ Номенклатура, КоличествоВпроизводстве
|ИЗ ВТ_ТоварыВПроизводстве) как ОстатокТоваровВПроизводстве
|ПО ЗаказыПокупателейОстатки.Номенклатура = ОстатокТоваровВПроизводстве.Номенклатура
|");

//=====================Транзит не филиалы=============================================================

Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ВставкаТ1", " + ВЫБОР
|	КОГДА ЕстьNull(ОстатокТоваровВПроизводствеТ.КоличествоВпроизводстве,0)<=0	ТОГДА 0
|  	ИНАЧЕ ЕстьNull(ОстатокТоваровВПроизводствеТ.КоличествоВпроизводстве,0)
|  	КОНЕЦ
|");

Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ВставкаТ2", "
|ЛЕВОЕ СОЕДИНЕНИЕ
|(ВЫБРАТЬ Номенклатура, КоличествоВпроизводстве
|ИЗ ВТ_ТоварыВПроизводствеТ) как ОстатокТоваровВПроизводствеТ
|ПО ЗаказыПокупателейОстатки.Номенклатура = ОстатокТоваровВПроизводствеТ.Номенклатура
|");
КонецЕсли;
//-----------------------------------------------------------------


Запрос.УстановитьПараметр("ЯШТ", справочники.Подразделения.НайтиПоКоду("00005") );
//Запрос.УстановитьПараметр("НачПредСезона", ДобавитьМесяц( НачалоМесяца(ТекущаяДата()),-8) );
Запрос.УстановитьПараметр( "текДата",НачалоДня( ТекущаяДата() )  );
Запрос.УстановитьПараметр( "ПустаяДата", '00010101' );


	
Если Не ЗначениеНеЗаполнено(ОтборЗаказПокупателя) Тогда
	ЗапросЗаказПокупателя=Новый Запрос;
	ЗапросЗаказПокупателя.Текст="ВЫБРАТЬ Различные Номенклатура ИЗ РегистрНакопления.ЗаказыПокупателей.Остатки(,НЕ ЗаказПокупателя.Транзит И ЗаказПокупателя=&ЗаказПокупателя)";
	ЗапросЗаказПокупателя.УстановитьПараметр("ЗаказПокупателя",ОтборЗаказПокупателя);
	мНоменклатура=ЗапросЗаказПокупателя.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура");
	Если ТипЗнч(мНоменклатура)=Тип("Массив") И мНоменклатура.Количество()>0 Тогда
		ОтборНоменклатура=Новый СписокЗначений;
		ОтборНоменклатура.ЗагрузитьЗначения(мНоменклатура);
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ОТБОРНОМЕНКЛАТУРА_И2","И ЗаказПоставщикуСезонныйТовары.Номенклатура В (&ОтборНоменклатура)");  
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ОТБОРНОМЕНКЛАТУРА_И","И Номенклатура В (&ОтборНоменклатура)");  
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ОТБОРНОМЕНКЛАТУРА","ГДЕ Номенклатура В (&ОтборНоменклатура)"); 
		
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ОТБОРссылка_И","и ссылка В (&ОтборНоменклатура)");
		
		
		Запрос.УстановитьПараметр("ОтборНоменклатура",ОтборНоменклатура);
	КонецЕсли;
КонецЕсли;	
    Шины=Справочники.Номенклатура.НайтиПоКоду("0001746");
	Диски=Справочники.Номенклатура.НайтиПоКоду("0001752");
	АКБ=Справочники.Номенклатура.НайтиПоКоду("0080021");
	Аксессуары=Справочники.Номенклатура.НайтиПоКоду("0000001");
	
	Крышки=Справочники.Номенклатура.НайтиПоКоду("0080004");
	Запрос.УстановитьПараметр("НачалоПериодаКонтроляОплат", ДобавитьМесяц(НачалоМесяца(ТекущаяДата()),-6));
	Запрос.УстановитьПараметр("Шины", Шины);
	Запрос.УстановитьПараметр("Диски",Диски);
	Запрос.УстановитьПараметр("АКБ", АКБ);
    Запрос.УстановитьПараметр("Аксессуары", Аксессуары);
    
	Запрос.УстановитьПараметр("Крышки",Крышки);
	Запрос.УстановитьПараметр("ПустаяНоменклатура", справочники.Номенклатура.ПустаяСсылка());//+++
	Запрос.УстановитьПараметр("БелШина", Справочники.Контрагенты.НайтиПоКоду("91529"));
	Запрос.УстановитьПараметр("Дальнобой", Справочники.Контрагенты.НайтиПоКоду("92319"));
    Запрос.УстановитьПараметр("АвтоШина", Справочники.Контрагенты.НайтиПоКоду("91640"));                                                                        
	Запрос.УстановитьПараметр("ВолгаТрейд", Справочники.Контрагенты.НайтиПоКоду("92098"));                                                                        
	Запрос.УстановитьПараметр("ТДКама", Справочники.Контрагенты.НайтиПоКоду("00334")); 
	//Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
	
	Запрос.УстановитьПараметр("МинДатаВПути", НачалоДня(ТекущаяДата()) - 14*86400 ); // просроченные заказы поставщиков более 14 дней - НЕ показываем как в пути!
	Запрос.УстановитьПараметр("ДатаДискиВПути", ДатаДискиВПути); 
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата() ); 
	Запрос.УстановитьПараметр("ФлагНеУчитывать_ДатаДискиВПути", ЗначениеНеЗаполнено(ДатаДискиВПути)); 
		
  	Результат = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
	ОбластьОтветственноеЛицо = Макет.ПолучитьОбласть("ОтветственноеЛицо");
	//ОбластьКонтрагент = Макет.ПолучитьОбласть("Контрагент");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	
	ОбластьЗаголовок.Параметры.ТекущаяДата=Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	ТабДок.Вывести(ОбластьЗаголовок);
	
	//ОбластьШапкаТаблицы.Параметры.впроизводстве = ?(ФлажокПроизводство,"и в производстве","");//+++21.11.2013 - 28.02.2014
	ТабДок.Вывести(ОбластьШапкаТаблицы);

	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    ЖирныйШрифт = Новый Шрифт ("Arial",,Истина); 
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ПоказыватьТолькоНепроделенные И ВыборкаНоменклатура.КоличествоЗаказано=0 Тогда Продолжить; КОнецЕсли;
		
		Если ФлажокПоМинусам И ВыборкаНоменклатура.КоличествоПроделено-ВыборкаНоменклатура.КоличествоОстатокНаСкладах<=0 Тогда Продолжить; КОнецЕсли;
		
		Если  ВыборкаНоменклатура.КоэффициентКомплектацииДиски>= 0 И ВыборкаНоменклатура.КоэффициентКомплектацииДиски< 1 Тогда
			ОбластьНоменклатура = Макет.ПолучитьОбласть("НоменклатураДефицитКрышек");
		Иначе
			ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
		КонецЕсли;	
		
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		ОбластьНоменклатура.Параметры.НоменклатураРасшифровка=ВыборкаНоменклатура.Номенклатура;
		//Если мНоменклатурыРезервы.Найти(ВыборкаНоменклатура.Номенклатура) <> Неопределено Тогда
		//	
		//ОбластьНоменклатура.Область("R1C1:R1C10").Шрифт = ЖирныйШрифт;
		//
		//КонецЕсли;
		
		ТабДок.Вывести(ОбластьНоменклатура,1);
		
		

		ВыборкаОтветственноеЛицо = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаОтветственноеЛицо.Следующий() Цикл
			ОбластьОтветственноеЛицо.Параметры.Заполнить(ВыборкаОтветственноеЛицо);
			ТабДок.Вывести(ОбластьОтветственноеЛицо,2);

				ВыборкаДетали = ВыборкаОтветственноеЛицо.Выбрать();

				Пока ВыборкаДетали.Следующий() Цикл
					
			Если Просрочка тогда//26.11.2013
				Если не ВыборкаДетали.ЗаказПокупателя.Проверен Тогда
					Если СписокЗаказовПокупателей.НайтиПоЗначению(ВыборкаДетали.ЗаказПокупателя) = Неопределено Тогда
						СписокЗаказовПокупателей.Добавить(ВыборкаДетали.ЗаказПокупателя);
					КонецЕсли;	
				 КонецЕсли;	
			КонецЕсли;
			 
				 Если ВыборкаДетали.СуммаОплаты>= ВыборкаДетали.СуммаЗаказа Тогда
					 ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("ДеталиОплачено");	 
				 Иначе	 
					 ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
				 КОнецЕсли;

				 
				 
					ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
					ОбластьДетальныхЗаписей.Параметры.ЗаказПокупателяСтрока= "№ "+Строка(ВыборкаДетали.ЗаказПокупателяНомер)+" от "+Формат(ВыборкаДетали.ЗаказПокупателяДата,"ДФ=dd.MM.yy")+"  СУММА="+Строка(ВыборкаДетали.СуммаЗаказа)
					+ ?(ВыборкаДетали.СуммаОплаты>0,". ОПЛАЧЕНО="+Строка(ВыборкаДетали.СуммаОплаты),"");
					
				//Если ВыборкаДетали.ЗаказПокупателя.АвтоРезервирование Тогда
				//	 ОбластьДетальныхЗаписей.Область("R1C1:R1C10").Шрифт = ЖирныйШрифт;
				// КонецЕсли;	
					//ОбластьДетальныхЗаписей.ПолучитьОбласть().ЦветФонаГруппировки=WebЦвета.Золотистый;
					ТабДок.Вывести(ОбластьДетальныхЗаписей,3);
				КонецЦикла;
			//КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();

	ТабДок.ПоказатьУровеньГруппировокСтрок(0);
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	ТабДок.ФиксацияСверху=4;
	ТабДок.ФиксацияСлева=4;
	
	//ЗаказыПокупателей.Очистить();
	//ЗаказыПокупателей.ЗагрузитьЗначения(СписокЗаказовПокупателей.ВыгрузитьЗначения());
	
	
Если Просрочка тогда
	ТаблицаЗаказыПокупателей.Очистить();
	ТаблицаЗаказыПокупателей.Колонки.Очистить();
	ТаблицаЗаказыПокупателей.Колонки.Добавить("Контрагент");
	ТаблицаЗаказыПокупателей.Колонки.Добавить("ЗаказПокупателя",, "Заказ покупателя");
	ТаблицаЗаказыПокупателей.Колонки.Добавить("ПросроченнаяЗадолженность",, "Просроченная задолженность");
	ТаблицаЗаказыПокупателей.Колонки.Вставить(0,"Делить",,,10);
	Для каждого строкаЗаказ ИЗ СписокЗаказовПокупателей Цикл
		ЗаказПокупателя=строкаЗаказ.Значение;
		строкаЗаказа=ТаблицаЗаказыПокупателей.Добавить();
		строкаЗаказа.Контрагент=ЗаказПокупателя.Контрагент;
		строкаЗаказа.ЗаказПокупателя=ЗаказПокупателя;
		строкаЗаказа.ПросроченнаяЗадолженность=ПолучитьПросроченнуюЗадолженностьПоДоговорамПродаж(ЗаказПокупателя.Контрагент,ЗаказПокупателя.Дата);
	КонецЦикла;	
	ТаблицаЗаказыПокупателей.ЗаполнитьЗначения(Истина,"Делить");
	ЭлементыФормы.ТаблицаЗаказыПокупателей.СоздатьКолонки();
	ЭлементыФормы.ТаблицаЗаказыПокупателей.ОбновитьСтроки();
	ЭлементыФормы.ТаблицаЗаказыПокупателей.Колонки.Делить.ДанныеФлажка = "Делить";
КонецЕсли;
	//ТаблицаЗаказыПокупателей=ТабЗаказы.Скопировать();
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ТаблицаЗаказыПокупателейПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.Делить.ОтображатьФлажок = Истина;
	ОформлениеСтроки.Ячейки.Делить.ОтображатьТекст = Ложь;

КонецПроцедуры

Процедура ЗаказПокупателяНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ЛОЖЬ;
	ФормаВыбора=Документы.ЗаказПокупателя.ПолучитьФормуСписка(,ЭтаФорма);
	ФормаВыбора.РежимВыбора=Истина;
	ФормаВыбора.Открыть();
	
КонецПроцедуры


Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если Найти (Элемент.ТекущаяОбласть.Имя, "C10") > 0 или Найти (Элемент.ТекущаяОбласть.Имя, "C11") > 0 Тогда   // Колонка "Товары в пути"
		флВПути = (Найти(Элемент.ТекущаяОбласть.Имя, "C10") > 0);
	
		СтандартнаяОбработка=Ложь;
		Запрос=Новый Запрос;
		Запрос.Текст=?(флВПути, "ВЫБРАТЬ
		       		 |ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA как ДатаПоступления,
 	     			 |	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
		             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
		             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент КАК Контрагент,
		             |	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		             |	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
					 //+++ 15.09.
			         |	, ЗаказыПоставщикамОстатки.ЗаказПоставщику.Грузополучатель как Грузополучатель
		             |ИЗ
		             |	РегистрНакопления.ЗаказыПоставщикам.Остатки(,
		             |			Номенклатура = &Номенклатура И (НЕ ЗаказПоставщику.Транзит)
					 |	И (ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДатаДискиВПути ИЛИ &ФлагНеУчитывать_ДатаДискиВПути)
					 |) КАК ЗаказыПоставщикамОстатки
					 |",
		             //|ОБЪЕДИНИТЬ ВСЕ
		             "
		             |ВЫБРАТЬ
		             |	ОстаткиТоваровВПроизводстве.ДатаДействияПо как ДатаПоступления,
		             |	ОстаткиТоваровВПроизводстве.Ссылка КАК ЗаказПоставщику,
		             |	ОстаткиТоваровВПроизводстве.Ссылка.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
		             |	ОстаткиТоваровВПроизводстве.Ссылка.Контрагент КАК Контрагент,
		             |	ОстаткиТоваровВПроизводстве.Номенклатура КАК Номенклатура,
		             |	ВЫБОР КОГДА ОстаткиТоваровВПроизводстве.Количество - ОстаткиТоваровВПроизводстве.КоличествоУжеЕдет<=0 тогда 0
					 |	ИНАЧЕ  ОстаткиТоваровВПроизводстве.Количество - ОстаткиТоваровВПроизводстве.КоличествоУжеЕдет КОНЕЦ КАК КоличествоОстаток
						 //+++ 15.09.
			      	 |	, ОстаткиТоваровВПроизводстве.Ссылка.Грузополучатель как Грузополучатель
		  
					 |ИЗ
		             |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
					//  |		ЗаказПоставщикуСезонныйТовары.Ссылка.ДатаДействияПо как ДатаДействияПо,
		              |		ВЫБОР КОГДА ЗаказПоставщикуСезонныйТовары.ДатаПроизводства=&ПустаяДата
					  |		ТОГДА ЗаказПоставщикуСезонныйТовары.Ссылка.ДатаДействияПо 
					  |		Иначе ДОБАВИТЬКДАТЕ(ЕстьNull(ЗаказПоставщикуСезонныйТовары.ДатаПроизводства,&ПустаяДата), Месяц, 2) 
					  |		Конец как ДатаДействияПо,
		             |		ЗаказПоставщикуСезонныйТовары.Номенклатура КАК Номенклатура,
		             |		ЗаказПоставщикуСезонныйТовары.Ссылка КАК Ссылка,
					 //!!! сумма
		             |		ЗаказПоставщикуСезонныйТовары.Количество КАК Количество,
		             |		ЕСТЬNULL(ЗаказПоставщикуТовары.Количество, 0) КАК КоличествоУжеЕдет
		             |	ИЗ
		             |		Документ.ЗаказПоставщикуСезонный.Товары КАК ЗаказПоставщикуСезонныйТовары
		             |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		             |	Выбор Когда ЕСТЬNULL(ЗакПостТовары.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)
					 |	тогда ЕСТЬNULL(ЗакПостТовары.Ссылка.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)) 
					 |	иначе ЕСТЬNULL(ЗакПостТовары.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка))
					 |	Конец КАК Основание,
		             |				ЕСТЬNULL(ЗакПостТовары.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
		             |				СУММА(ЕСТЬNULL(ЗакПостТовары.Количество, 0)) КАК Количество
		             |			ИЗ
		             |				Документ.ЗаказПоставщику.Товары КАК ЗакПостТовары
		             |			ГДЕ
		             |				ЗакПостТовары.Номенклатура = &Номенклатура
		             |				И (ЗакПостТовары.Ссылка.Проведен)
//-------------------------------------------------------------------------------------------------------					 
		             |				И (НЕ ЗакПостТовары.Ссылка.Транзит)
		             |			
		             |			СГРУППИРОВАТЬ ПО
		             |				ЗакПостТовары.Номенклатура,
		             |	Выбор Когда ЕСТЬNULL(ЗакПостТовары.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)
					 |	тогда ЕСТЬNULL(ЗакПостТовары.Ссылка.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)) 
					 |	иначе ЕСТЬNULL(ЗакПостТовары.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка))
					 |	Конец) КАК ЗаказПоставщикуТовары
		             |			ПО ЗаказПоставщикуСезонныйТовары.Ссылка = ЗаказПоставщикуТовары.Основание
		             |				И ЗаказПоставщикуСезонныйТовары.Номенклатура = ЗаказПоставщикуТовары.Номенклатура
		             |	ГДЕ
		             |		ЗаказПоставщикуСезонныйТовары.Номенклатура = &Номенклатура
//-------------------------------------------------------------------------------------------------------					 
					 |		И (НЕ ЗаказПоставщикуСезонныйТовары.Ссылка.Транзит)
					 
					 |		И (ЗаказПоставщикуСезонныйТовары.Ссылка.ДатаДействияПо>=&ТекДата)
					 |		И (ЗаказПоставщикуСезонныйТовары.Ссылка.ДатаДействияПо <= &ДатаДискиВПути
					 |			или ДОБАВИТЬКДАТЕ(ЕстьNull(ЗаказПоставщикуСезонныйТовары.ДатаПроизводства,&ПустаяДата), Месяц, 2) <= &ДатаДискиВПути
		             |				ИЛИ &ФлагНеУчитывать_ДатаДискиВПути)
		             |	
					 |) КАК ОстаткиТоваровВПроизводстве
		             |") // конец флВПути
					 +"
		             |УПОРЯДОЧИТЬ ПО
		             |	ДатаПоступления
		             |ИТОГИ
		             |	МАКСИМУМ(ДатаПоступления),
		             |	СУММА(КоличествоОстаток)
		             |ПО
		             |	Номенклатура";
		
		//Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
		Запрос.УстановитьПараметр("ПустаяДата", '00010101');
		Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );
		Запрос.УстановитьПараметр("ДатаДискиВПути", ДатаДискиВПути);
		
		Запрос.УстановитьПараметр("ФлагНеУчитывать_ДатаДискиВПути", ЗначениеНеЗаполнено(ДатаДискиВПути)); 		
		Запрос.УстановитьПараметр("Номенклатура", Расшифровка); 		
		
		
			
		//ТаблицаТоварыВПути=Запрос.Выполнить().Выгрузить();
		//ТаблицаТоварыВПути.ВыбратьСтроку();
		ТабДок = Новый ТабличныйДокумент;
		
		ВыборкаИтого=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Макет=ПолучитьМакет("ТоварыВПути");	
		ОбластьИтого=Макет.ПолучитьОбласть("Итого");
		
	Если ВыборкаИтого.Количество()>0 Тогда
			ВыборкаИтого.Следующий(); // итоги есть!
			//ОбластьИтого.Параметры.ДатаПоступления = ВыборкаИтого.ДатаПоступления;
			//ОбластьИтого.Параметры.КоличествоОстаток = ВыборкаИтого.КоличествоОстаток;
			ОбластьИтого.Параметры.Заполнить(ВыборкаИтого);
			ОбластьИтого.Параметры.Комментарий =ВыборкаИтого.Номенклатура.Код;
			ОбластьИтого.Параметры.ЗаказПоставщику = ВыборкаИтого.Номенклатура;
		Выборка	= ВыборкаИтого.Выбрать();
		
		Если Выборка.Количество()>0 Тогда
			ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
			ТабДок.Вывести(ОбластьШапка);
			Пока Выборка.Следующий() Цикл
				ОбластьДетали=Макет.ПолучитьОбласть("Детали");
				ОбластьДетали.Параметры.Заполнить(Выборка);
				ОбластьДетали.Параметры.Комментарий=Выборка.ЗаказПоставщику.Комментарий;
				ТабДок.Вывести(ОбластьДетали);
			КонецЦикла;	
		КонецЕсли; //Выборка
		
	ТабДок.Вывести(ОбластьИтого);
	КонецЕсли; //ВыборкаИтого
		
		ТабДок.ТолькоПросмотр=Истина;		
		ТабДок.Показать();
		
	КонецЕсли;	
	
	Если Найти (Элемент.ТекущаяОбласть.Имя, "C12") > 0 или Найти (Элемент.ТекущаяОбласть.Имя, "C13") > 0 Тогда   // Колонка "Товары в пути ТРАНЗИТ"
		флВПути = ( Найти(Элемент.ТекущаяОбласть.Имя, "C12") > 0 );
		СтандартнаяОбработка=Ложь;
		Запрос=Новый Запрос;
			Запрос.Текст=?(флВПути, "ВЫБРАТЬ
		      ////из свойства    |	ЗначенияСвойствОбъектов.ДатаПоступленияВПорт КАК ДатаПоступления,
			  		 |ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA как ДатаПоступления,
 	     			 |	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
		             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
		             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент КАК Контрагент,
		             |	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		             |	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
				 	 //+++ 15.09.2014
			         |	, ЗаказыПоставщикамОстатки.ЗаказПоставщику.Грузополучатель КАК Грузополучатель
				  
		             |ИЗ
		             |	РегистрНакопления.ЗаказыПоставщикам.Остатки(,
		             |			Номенклатура = &Номенклатура И (ЗаказПоставщику.Транзит)
					 |	И (ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДатаДискиВПути ИЛИ &ФлагНеУчитывать_ДатаДискиВПути)
					 |) КАК ЗаказыПоставщикамОстатки
					 |",
		             //|ОБЪЕДИНИТЬ ВСЕ
		             "
		             |ВЫБРАТЬ
		             |	ОстаткиТоваровВПроизводстве.ДатаДействияПо как ДатаПоступления,
		             |	ОстаткиТоваровВПроизводстве.Ссылка КАК ЗаказПоставщику,
		             |	ОстаткиТоваровВПроизводстве.Ссылка.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
		             |	ОстаткиТоваровВПроизводстве.Ссылка.Контрагент КАК Контрагент,
		             |	ОстаткиТоваровВПроизводстве.Номенклатура КАК Номенклатура,
		             |	ВЫБОР КОГДА ОстаткиТоваровВПроизводстве.Количество - ОстаткиТоваровВПроизводстве.КоличествоУжеЕдет<=0 тогда 0
					 |	ИНАЧЕ  ОстаткиТоваровВПроизводстве.Количество - ОстаткиТоваровВПроизводстве.КоличествоУжеЕдет КОНЕЦ КАК КоличествоОстаток
					 //+++ 15.09.2014
			     	 |	, ОстаткиТоваровВПроизводстве.Ссылка.Грузополучатель КАК Грузополучатель
		          
					 |ИЗ
		             |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
					//  |		ЗаказПоставщикуСезонныйТовары.Ссылка.ДатаДействияПо как ДатаДействияПо,
		              |		ВЫБОР КОГДА ЗаказПоставщикуСезонныйТовары.ДатаПроизводства=&ПустаяДата
					  |		ТОГДА ЗаказПоставщикуСезонныйТовары.Ссылка.ДатаДействияПо 
					  |		Иначе ДОБАВИТЬКДАТЕ(ЕстьNull(ЗаказПоставщикуСезонныйТовары.ДатаПроизводства,&ПустаяДата), Месяц, 2)
					  |		Конец как ДатаДействияПо,
		             |		ЗаказПоставщикуСезонныйТовары.Номенклатура КАК Номенклатура,
		             |		ЗаказПоставщикуСезонныйТовары.Ссылка КАК Ссылка,
					 			 //!!! сумма
		             |		ЗаказПоставщикуСезонныйТовары.Количество КАК Количество,
		             |		ЕСТЬNULL(ЗаказПоставщикуТовары.Количество, 0) КАК КоличествоУжеЕдет
		             |	ИЗ
		             |		Документ.ЗаказПоставщикуСезонный.Товары КАК ЗаказПоставщикуСезонныйТовары
		             |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		             |	Выбор Когда ЕСТЬNULL(ЗакПостТовары.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)
					 |	тогда ЕСТЬNULL(ЗакПостТовары.Ссылка.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)) 
					 |	иначе ЕСТЬNULL(ЗакПостТовары.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка))
					 |	Конец КАК Основание,
		             |				ЕСТЬNULL(ЗакПостТовары.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
		             |				СУММА(ЕСТЬNULL(ЗакПостТовары.Количество, 0)) КАК Количество
		             |			ИЗ
		             |				Документ.ЗаказПоставщику.Товары КАК ЗакПостТовары
		             |			ГДЕ
		             |				ЗакПостТовары.Номенклатура = &Номенклатура
		             |				И (ЗакПостТовары.Ссылка.Проведен)
//-------------------------------------------------------------------------------------------------------					 
					 |				И (ЗакПостТовары.Ссылка.Транзит)
		             |				И (ЗакПостТовары.Ссылка.Подразделение=Значение(Справочник.Подразделения.ПустаяСсылка)
					 |					ИЛИ ЗакПостТовары.Ссылка.Подразделение=&ЯШТ)
//-------------------------------------------------------------------------------------------------------					 
		             |			
		             |			СГРУППИРОВАТЬ ПО
		             |				ЗакПостТовары.Номенклатура,
		             |	Выбор Когда ЕСТЬNULL(ЗакПостТовары.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)
					 |	тогда ЕСТЬNULL(ЗакПостТовары.Ссылка.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка)) 
					 |	иначе ЕСТЬNULL(ЗакПостТовары.Основание, ЗНАЧЕНИЕ(Документ.ЗаказПоставщикуСезонный.ПустаяСсылка))
					 |	Конец) КАК ЗаказПоставщикуТовары
		             |			ПО ЗаказПоставщикуСезонныйТовары.Ссылка = ЗаказПоставщикуТовары.Основание
		             |			 И ЗаказПоставщикуСезонныйТовары.Номенклатура = ЗаказПоставщикуТовары.Номенклатура
		             |	ГДЕ
		             |		ЗаказПоставщикуСезонныйТовары.Номенклатура = &Номенклатура
					 
	//-------------------------------------------------------------------------------------------------------					 
					 |				И (ЗаказПоставщикуСезонныйТовары.Ссылка.Транзит)
		             |				И (ЗаказПоставщикуСезонныйТовары.Ссылка.Подразделение=Значение(Справочник.Подразделения.ПустаяСсылка)
					 |					ИЛИ ЗаказПоставщикуСезонныйТовары.Ссылка.Подразделение=&ЯШТ)
	//-------------------------------------------------------------------------------------------------------					 
			 
					 |		И (ЗаказПоставщикуСезонныйТовары.Ссылка.ДатаДействияПо>=&ТекДата)
		             |		И (ЗаказПоставщикуСезонныйТовары.Ссылка.ДатаДействияПо <= &ДатаДискиВПути
					 |			или ДОБАВИТЬКДАТЕ(ЕстьNull(ЗаказПоставщикуСезонныйТовары.ДатаПроизводства,&ПустаяДата), Месяц, 2) <= &ДатаДискиВПути
		             |				ИЛИ &ФлагНеУчитывать_ДатаДискиВПути)
		             |	
					 //|	СГРУППИРОВАТЬ ПО
					 //|		ЗаказПоставщикуСезонныйТовары.Номенклатура,
					 //|		ЗаказПоставщикуСезонныйТовары.Ссылка
					 |) КАК ОстаткиТоваровВПроизводстве
		             |")// конец флВПути
					 +"
		             |УПОРЯДОЧИТЬ ПО
		             |	ДатаПоступления
		             |ИТОГИ
		             |	МАКСИМУМ(ДатаПоступления),
		             |	СУММА(КоличествоОстаток)
		             |ПО
		             |	Номенклатура";
		
	//	Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
		Запрос.УстановитьПараметр("ДатаДискиВПути", ДатаДискиВПути); 
		Запрос.УстановитьПараметр("ПустаяДата", '00010101'); 
		Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );
		
		Запрос.УстановитьПараметр("ФлагНеУчитывать_ДатаДискиВПути", ЗначениеНеЗаполнено(ДатаДискиВПути)); 		
		Запрос.УстановитьПараметр("Номенклатура", Расшифровка); 		
		Запрос.УстановитьПараметр("ЯШТ",Справочники.Подразделения.НайтиПоКоду("00005") );
		
			
		//ТаблицаТоварыВПути=Запрос.Выполнить().Выгрузить();
		//ТаблицаТоварыВПути.ВыбратьСтроку();
		ТабДок = Новый ТабличныйДокумент;
		
		ВыборкаИтого=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Макет=ПолучитьМакет("ТоварыВПути");	
		ОбластьИтого=Макет.ПолучитьОбласть("Итого");
		
	Если ВыборкаИтого.Количество()>0 Тогда
			ВыборкаИтого.Следующий(); // итоги есть!
			ОбластьИтого.Параметры.ДатаПоступления = ВыборкаИтого.ДатаПоступления;
			ОбластьИтого.Параметры.КоличествоОстаток = ВыборкаИтого.КоличествоОстаток;
			ОбластьИтого.Параметры.Комментарий =ВыборкаИтого.Номенклатура.Код;
			ОбластьИтого.Параметры.ЗаказПоставщику = ВыборкаИтого.Номенклатура;

		
		Выборка	= ВыборкаИтого.Выбрать();
		
		Если Выборка.Количество()>0 Тогда
			ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
			ТабДок.Вывести(ОбластьШапка);
			Пока Выборка.Следующий() Цикл
				ОбластьДетали=Макет.ПолучитьОбласть("Детали");
				ОбластьДетали.Параметры.Заполнить(Выборка);
				ОбластьДетали.Параметры.Комментарий=Выборка.ЗаказПоставщику.Комментарий;
				ТабДок.Вывести(ОбластьДетали);
			КонецЦикла;	
		КонецЕсли; //Выборка
		
		ТабДок.Вывести(ОбластьИтого);
		
	КонецЕсли; //ВыборкаИтого
		
		ТабДок.ТолькоПросмотр=Истина;		
		ТабДок.Показать();
		
	КонецЕсли;	
	
	
	
КонецПроцедуры


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	ОтборЗаказПокупателя= ЗначениеВыбора;
	
КонецПроцедуры

Процедура ПросрочкаПриИзменении(Элемент)
	ЭлементыФормы.Панель1.Страницы.СтраницаЗаказыПокупателей.Видимость = Просрочка;
	ТаблицаЗаказыПокупателей.Очистить();
КонецПроцедуры

Процедура Освободить(Кнопка)
номенклатура = ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть.Расшифровка;
Если ТипЗнч(номенклатура) = Тип("СправочникСсылка.Номенклатура") тогда
ИмяОбласти = ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть.Имя;
НомерСтроки = Лев(ИмяОбласти,Найти(ИмяОбласти,"C")-1);
количество =  Число(ЭлементыФормы.ПолеТабличногоДокумента.Область(номерСтроки+"C7").Текст);
ввестиЧисло(Количество,"Уточните количество"); 
 новСтр = ДляОсвобождения.Добавить();
 новСтр.Номенклатура = Номенклатура;
новСтр.количество = количество;
иначе 
Предупреждение ("Нужно выбрать номенклатуру!");
конецесли;
КонецПроцедуры

Процедура ДействияФормыОсвободитьИМ(Кнопка)
	Док = Документы.ОсвобождениеРезерваДляИМ.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Подразделение = Справочники.Подразделения.НайтиПоКоду("00005");
	Док.Товары.Загрузить(ДляОсвобождения.Выгрузить());
	Док.Записать();
	Док.ПолучитьФорму().Открыть();
	ДляОсвобождения.Очистить();
КонецПроцедуры


//=============================изначальный запрос в процедуре Отчет() ==============================
ТекстЗапросаСКрышками="ВЫБРАТЬ 
|ДискиСКрышками.Номенклатура.Код,
|ДискиСКрышками.Номенклатура,
|ДискиСКрышками.Комплектующая,
|ДискиСКрышками.КоличествоДисковОстаток,
|ДискиСКрышками.КОличествоДисковЗаказано,
|ДискиСКрышками.СвободныйОстатокДисков,
|ЕстьNULL(КрышкиНаСкладахОстатки.КоличествоОстаток,0) КоличествоКрышекОстаток
|ПОМЕСТИТЬ ВТ_ДетальнаяТаблица
|ИЗ
|(ВЫБРАТЬ
|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
|		Крышки.Комплектующая Комплектующая,
|		ЕстьNULL(ТоварыНаСкладахОстатки.КоличествоОстаток ,0)КоличествоДисковОстаток,
|		ЕстьNULL(ЗаказыПокупателейОстатки.КоличествоОстаток,0) КОличествоДисковЗаказано,
|		ЕстьNULL(ТоварыНаСкладахОстатки.КоличествоОстаток ,0)-ЕстьNULL(ЗаказыПокупателейОстатки.КоличествоОстаток,0) СвободныйОстатокДисков
|		
|	ИЗ
|	РегистрНакопления.ТоварыНаСкладах.Остатки ( , 	Номенклатура В ИЕРАРХИИ (&Диски) И Номенклатура.ВидТовара=Значение(Перечисление.ВидыТоваров.Диски)
|	//ОТБОРНОМЕНКЛАТУРА_И
|	И (Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ РегистрСведений.КомплектующиеНоменклатуры))
|	И НЕ Склад.ЗапретитьИспользование И НЕ Склад.Транзитный) ТоварыНаСкладахОстатки
|ЛЕВОЕ СОЕДИНЕНИЕ
|РегистрНакопления.ЗаказыПокупателей.Остатки(, Номенклатура.ВидТовара=Значение(Перечисление.ВидыТоваров.Диски) 
|	//ОТБОРНОМЕНКЛАТУРА_И
| И (Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ РегистрСведений.КомплектующиеНоменклатуры))
| И Не ЗаказПокупателя.Транзит) ЗаказыПокупателейОстатки				
|ПО  ТоварыНаСкладахОстатки.Номенклатура=ЗаказыПокупателейОстатки.Номенклатура
|ЛЕВОЕ СОЕДИНЕНИЕ
| (ВЫБРАТЬ Номенклатура, Комплектующая ИЗ РегистрСведений.КомплектующиеНоменклатуры 
|	ГДЕ 
|	Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски) И
|	Комплектующая.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски) И
|	Комплектующая В Иерархии (&Крышки)) Крышки
|ПО  ТоварыНаСкладахОстатки.Номенклатура=Крышки.Номенклатура ) ДискиСКрышками
|ЛЕВОЕ СОЕДИНЕНИЕ
|РегистрНакопления.ТоварыНаСкладах.Остатки ( , 
|	Номенклатура В ИЕРАРХИИ (&Крышки)  
|	И (Номенклатура В (ВЫБРАТЬ Комплектующая ИЗ РегистрСведений.КомплектующиеНоменклатуры))
|	И НЕ Склад.ЗапретитьИспользование И НЕ Склад.Транзитный) КрышкиНаСкладахОстатки
|	ПО  ДискиСКрышками.Комплектующая=КрышкиНаСкладахОстатки.Номенклатура
|//ГДЕ	ДискиСКрышками.Комплектующая=&Комплектующая
|//УПОРЯДОЧИТЬ ПО ДискиСКрышками.Номенклатура.Код
|
|;
|
|ВЫБРАТЬ Комплектующая.Код,Комплектующая, СУММА (КоличествоДисковОстаток) КоличествоДисковОстаток, 
|СУММА(КоличествоДисковЗаказано) КоличествоДисковЗаказано, 
|СРЕДНЕЕ(КоличествоКрышекОстаток) КоличествоКрышекОстаток,
|ВЫБОР КОГДА СРЕДНЕЕ(КоличествоКрышекОстаток) - СУММА(КоличествоДисковЗаказано) >=  СУММА (СвободныйОстатокДисков) ТОГДА
|	 1
|КОГДА СРЕДНЕЕ(КоличествоКрышекОстаток) - СУММА(КоличествоДисковЗаказано) >  0 ТОГДА
|	 (СРЕДНЕЕ(КоличествоКрышекОстаток) - СУММА(КоличествоДисковЗаказано))/ СУММА (СвободныйОстатокДисков) 
|ИНАЧЕ
|	 0
|КОНЕЦ  Коэффициент
|ПОМЕСТИТЬ ВТ_КрышкиКоэффициенты
|ИЗ ВТ_ДетальнаяТаблица
|СГРУППИРОВАТЬ ПО Комплектующая
|
|;
|
|ВЫБРАТЬ  ВТ_ДетальнаяТаблица.Номенклатура Номенклатура,
| ЕстьNULL(ВТ_ДетальнаяТаблица.СвободныйОстатокДисков*ВТ_КрышкиКоэффициенты.Коэффициент,0) СвободныйОстатокПоказать,
|Коэффициент	
| ПОМЕСТИТЬ ВТ_СвободныеОстаткиПоСборнымДискам
| ИЗ ВТ_ДетальнаяТаблица
| ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КрышкиКоэффициенты
| ПО ВТ_ДетальнаяТаблица.Комплектующая=ВТ_КрышкиКоэффициенты.Комплектующая
|
|;
|
//=====================================================================================
|ВЫБРАТЬ Номенклатура.Код Код, Номенклатура, Цена, ОтветственноеЛицо, Контрагент,
|	ЗаказПокупателя, ЗаказПокупателя.Номер ЗаказПокупателяНомер, ЗаказПокупателя.Дата ЗаказПокупателяДата, КоличествоЗаказано,
|   КоличествоПроделено, КоличествоОстатокНаСкладах,  СуммаЗаказа, СуммаОплаты,
|	ЕстьNULL(КоэффициентКомплектацииДиски,-1) КоэффициентКомплектацииДиски,
|	ЕстьNULL(СвободныйОстатокПоказать,-1) СвободныйОстатокПоказать,
| КоличествоОстатокНаСкладах-КоличествоПроделено-КоличествоЗаказано СвободныйОстаток,
| КоличествоОстатокНаСкладах-КоличествоПроделено ОстатокМинусПроделено,
| КоличествоЗаказаноУПоставщика,
| КоличествоЗаказаноУПоставщикаПр,
| КоличествоЗаказаноУПоставщика2,
| КоличествоЗаказаноУПоставщикаПр2
|
| ИЗ
| 
| ( ВЫБРАТЬ
|		ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
|		ЗаказыПокупателейОстатки.Цена КАК Цена,
|		ЗаказыПокупателейОстатки.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
|		ЗаказыПокупателейОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
|		ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
|		ЗаказыПокупателейОстатки.ЗаказПокупателя.СуммаДокумента СуммаЗаказа,
|		ЕстьNULL(ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход,0) СуммаОплаты,
|		ВЫБОР КОГДА НЕ ЗаказыПокупателейОстатки.ЗаказПокупателя.Проверен ТОГДА 
|		ЗаказыПокупателейОстатки.КоличествоОстаток
|		ИНАЧЕ
|		0
|		КОНЕЦ КоличествоЗаказано,
|		ВЫБОР КОГДА  ЗаказыПокупателейОстатки.ЗаказПокупателя.Проверен ТОГДА 
|		ЗаказыПокупателейОстатки.КоличествоОстаток
|		ИНАЧЕ
|		0
|  	КОНЕЦ КоличествоПроделено,
|ЕстьNull(ЗаказыПоставщикамОстатки.КоличествоОстаток,0) как КоличествоЗаказаноУПоставщика,
//21.11.2013-----------------------------------------------------------------
|0 //Вставка1
//-----------------------------------------------------------------
| как КоличествоЗаказаноУПоставщикаПр,
|ЕстьNull(ЗаказыПоставщикамОстаткиТ.КоличествоОстаток,0) как КоличествоЗаказаноУПоставщика2,
//21.11.2013-----------------------------------------------------------------
|0 //ВставкаТ1
//-----------------------------------------------------------------
|	как КоличествоЗаказаноУПоставщикаПр2,
|		ЕстьNULL(ТоварыНаСкладахОстатки.КоличествоОстаток,0) КАК КоличествоОстатокНаСкладах,		
|       ВТ_СвободныеОстаткиПоСборнымДискам.СвободныйОстатокПоказать СвободныйОстатокПоказать,
|       ВТ_СвободныеОстаткиПоСборнымДискам.Коэффициент  КоэффициентКомплектацииДиски
|	ИЗ
|		РегистрНакопления.ЗаказыПокупателей.Остатки( , (НЕ ЗаказПокупателя.Транзит)
//|				И Номенклатура.ВидТовара <> Значение(Перечисление.ВидыТоваров.Прочее) 
|				И Номенклатура НЕ В ИЕРАРХИИ (&Крышки) 
|			//ОТБОРНОМЕНКЛАТУРА_И
|			) КАК ЗаказыПокупателейОстатки

|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СвободныеОстаткиПоСборнымДискам
|   ПО  ЗаказыПокупателейОстатки.Номенклатура=ВТ_СвободныеОстаткиПоСборнымДискам.Номенклатура

|	ЛЕВОЕ СОЕДИНЕНИЕ 
|	( Выбрать Сделка, СуммаВзаиморасчетовРасход
|	ИЗ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(&НачалоПериодаКонтроляОплат,,,ДоговорКонтрагента.ВедениеВзаиморасчетов =Значение(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)))
|	ВзаиморасчетыСКонтрагентамиОбороты
|	ПО ЗаказыПокупателейОстатки.ЗаказПокупателя=ВзаиморасчетыСКонтрагентамиОбороты.Сделка
|			ЛЕВОЕ СОЕДИНЕНИЕ
|( ВЫБРАТЬ А.Номенклатура, СУММА(А.КоличествоОстаток) КоличествоОстаток  		
|   ИЗ 		 
|	(
|ВЫБРАТЬ  Номенклатура, 
|		КоличествоОстаток ИЗ 
|	РегистрНакопления.ТоварыНаСкладах.Остатки ( , (НЕ Склад.Транзитный) И (НЕ Склад.ЗапретитьИспользование)
|	И (Номенклатура В ИЕРАРХИИ (&Диски)	ИЛИ Номенклатура В ИЕРАРХИИ (&Шины) ИЛИ Номенклатура В ИЕРАРХИИ (&АКБ) ИЛИ Номенклатура В ИЕРАРХИИ (&Аксессуары))
|//ОТБОРНОМЕНКЛАТУРА_И
|	) ТоварыНаСкладахОстатки ) А 
|СГРУППИРОВАТЬ ПО А.Номенклатура
|)  ТоварыНаСкладахОстатки
|  
|ПО ЗаказыПокупателейОстатки.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
//============================================================================================
|	ЛЕВОЕ СОЕДИНЕНИЕ 
|(ВЫБРАТЬ
|Номенклатура,
|СУММА(КоличествоОстаток) КоличествоОстаток ИЗ
|(ВЫБРАТЬ 
//|ЗначенияСвойствОбъектов.ДатаПоступленияВПорт,
|ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA как ДатаПоступленияВПорт,
|ЗаказыПоставщикамОстатки.ЗаказПоставщику,
|	ЗаказыПоставщикамОстатки.Номенклатура,
|	ЗаказыПоставщикамОстатки.КоличествоОстаток
|ИЗ
|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, (НЕ ЗаказПоставщику.Транзит)
|	И Номенклатура.ВидТовара <> Значение(Перечисление.ВидыТоваров.Прочее) 
|	И ( (ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA >= &МинДатаВПути и ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДатаДискиВПути) ИЛИ &ФлагНеУчитывать_ДатаДискиВПути )
|//ОТБОРНОМЕНКЛАТУРА_И
|) КАК ЗаказыПоставщикамОстатки
|
|) А
|СГРУППИРОВАТЬ ПО Номенклатура 
|) КАК ЗаказыПоставщикамОстатки
|    		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
//21.11.2013-----------------------------------------------------------------
|//Вставка2

//=====================ТРАНЗИТ не филиалы!===================================================
|	ЛЕВОЕ СОЕДИНЕНИЕ 
|(ВЫБРАТЬ
|Номенклатура,
|СУММА(КоличествоОстаток) КоличествоОстаток ИЗ
|(ВЫБРАТЬ 
//|ЗначенияСвойствОбъектов.ДатаПоступленияВПорт,
|ЗаказыПоставщикамОстаткиТ.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA как ДатаПоступленияВПорт,
|ЗаказыПоставщикамОстаткиТ.ЗаказПоставщику,
|ЗаказыПоставщикамОстаткиТ.Номенклатура,
|ЗаказыПоставщикамОстаткиТ.КоличествоОстаток
|ИЗ
|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, (ЗаказПоставщику.Транзит
|						И (ЗаказПоставщику.Подразделение=&ЯШТ или ЗаказПоставщику.Подразделение=Значение(Справочник.Подразделения.ПустаяСсылка)) )
//|	И ДоговорКонтрагента.ОтветственноеЛицо = &СеребрА
	
|	И Номенклатура.ВидТовара <> Значение(Перечисление.ВидыТоваров.Прочее) 
|	И ((ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA >= &МинДатаВПути и ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДатаДискиВПути) ИЛИ &ФлагНеУчитывать_ДатаДискиВПути )
|//ОТБОРНОМЕНКЛАТУРА_И
|) КАК ЗаказыПоставщикамОстаткиТ
|
|) А
|СГРУППИРОВАТЬ ПО Номенклатура 
|) КАК ЗаказыПоставщикамОстаткиТ
|    		ПО ЗаказыПокупателейОстатки.Номенклатура = ЗаказыПоставщикамОстаткиТ.Номенклатура
//21.11.2013-----------------------------------------------------------------
|//ВставкаТ2
//================================================================================================
|			) А
| //ОТБОРНОМЕНКЛАТУРА 
| 		УПОРЯДОЧИТЬ ПО  Номенклатура.ВидТовара, Номенклатура.Наименование
|	ИТОГИ
|		СУММА(КоличествоЗаказано),
|		СУММА(КоличествоПроделено),
|		СРЕДНЕЕ(ОстатокМинусПроделено),
|		СРЕДНЕЕ(КоличествоОстатокНаСкладах),
|		СРЕДНЕЕ (КоэффициентКомплектацииДиски), 
|		ВЫБОР КОГДА СРЕДНЕЕ (СвободныйОстатокПоказать)= -1 ТОГДА
|       СРЕДНЕЕ(КоличествоОстатокНаСкладах) - СУММА(КоличествоЗаказано)- СУММА(КоличествоПроделено)  
|		ИНАЧЕ
|       СРЕДНЕЕ (СвободныйОстатокПоказать)
|		КОНЕЦ
|		КАК СвободныйОстаток,
|		МИНИМУМ(КоличествоЗаказаноУПоставщика),
|		МИНИМУМ(КоличествоЗаказаноУПоставщикаПр),
|		МИНИМУМ(КоличествоЗаказаноУПоставщика2),
|		МИНИМУМ(КоличествоЗаказаноУПоставщикаПр2)
|	ПО
|		Номенклатура,
|		ОтветственноеЛицо";


