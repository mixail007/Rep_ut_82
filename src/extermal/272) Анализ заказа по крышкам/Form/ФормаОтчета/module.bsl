
Перем Настройки;
Перем ПараметрДанныхСписокПроизводителей, ПараметрДанныхСписокПоступлений, ИменованныйОтбор, УсловноеОформление;

Процедура УстановитьСписокБрендов()
	
	СписокПроизводителей.Очистить();
	Если Аналоги = 1 Тогда
		СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("100"),,Истина); //ALCASTA
		СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("517"),,Истина); //NZ
		СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3290"),,Истина); //YOKATTA
		СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3291"),,Истина); //CROSSTREET
		СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3293"),,Истина); //YST
	ИначеЕсли Аналоги = 2 Тогда
		СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("65"),,Истина); //REPLICA
	КонецЕсли;
	
КонецПроцедуры

Процедура АналогиПриИзменении(Элемент)
	
	УстановитьСписокБрендов();
	
КонецПроцедуры

Процедура КомплектующиеПриИзменении(Элемент)
	
	УстановитьСписокБрендов();
	
КонецПроцедуры

Процедура ОтборБрендыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПараметрДанныхСписокПроизводителей = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1];
	ПараметрДанныхСписокПроизводителей.Значение = СписокПроизводителей;
	ПараметрДанныхСписокПроизводителей.Использование = Истина;
	
КонецПроцедуры

Процедура ОтборПоступленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0];
	ПараметрДанныхСписокПоступлений.Значение = ОтборПоступления;
	ПараметрДанныхСписокПоступлений.Использование = Истина;
	
КонецПроцедуры

Процедура КоманднаяПанель1ПодборПоступлений(Кнопка)
	
	ФормаВыбора = Документы.ЗаказПоставщикуСезонный.ПолучитьФормуВыбора(,ЭтаФорма,);
	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
	ФормаВыбора.Открыть();
		
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("ДокументСсылка.ЗаказПоставщикуСезонный") Тогда 
		Если ОтборПоступления.НайтиПоЗначению(ЗначениеВыбора) = Неопределено Тогда 
			НовПоступл = ОтборПоступления.Добавить(); 
			НовПоступл.Значение = ЗначениеВыбора; 
		КонецЕсли; 
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриОткрытии()
	
	//СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("Аналоги");
	//Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	УстановитьНастройки();
	
КонецПроцедуры

Процедура УстановитьНастройки()
		
	УстановитьСписокБрендов();
	
	ПараметрыВывода = КомпоновщикНастроек.Настройки.ПараметрыВывода;
	ПараметрВыводПараметров = ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьПараметрыДанных"));
	ПараметрВыводПараметров.Использование = Истина;
	ПараметрВыводПараметров.Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
	
	Настройки = КомпоновщикНастроек.Настройки;
	
КонецПроцедуры

Процедура КоманднаяПанель2УстановитьВсе(Кнопка)
	Для Каждого Производитель Из СписокПроизводителей Цикл
		Производитель.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель2Действие5(Кнопка)
	Для Каждого Производитель Из СписокПроизводителей Цикл
		Производитель.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьОтчет(Кнопка)
	
	Если Аналоги = 1 Тогда
		СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("Аналоги");
	Иначеесли Аналоги = 2 Тогда
		СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("Комплектующие");
	КонецЕсли;
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	//УстановитьНастройки();

	Производители = Новый СписокЗначений;
	Для Каждого Производитель Из СписокПроизводителей Цикл
		Если Производитель.Пометка Тогда
			Производители.Добавить(Производитель.Значение);
		КонецЕсли;
	КонецЦикла;
	
 	ПараметрДанныхСписокПроизводителей = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1];
	ПараметрДанныхСписокПроизводителей.Значение = Производители;
	ПараметрДанныхСписокПроизводителей.Использование = Истина;
	
	Поступления = Новый СписокЗначений;
	Для Каждого Поступление Из ОтборПоступления Цикл
		Поступления.Добавить(Поступление.Значение);
	КонецЦикла;
	
	ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0];
	ПараметрДанныхСписокПоступлений.Значение = Поступления;
	ПараметрДанныхСписокПоступлений.Использование = Истина;
	
	Если Аналоги = 1 Тогда
		ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[3];
		ПараметрДанныхСписокПоступлений.Значение = ТекущаяДата();
		ПараметрДанныхСписокПоступлений.Использование = Истина;
	Иначеесли Аналоги = 2 Тогда
		ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[3];
		ПараметрДанныхСписокПоступлений.Значение = Справочники.Номенклатура.НайтиПоКоду("9106690"); //Крышки LA OEM
		ПараметрДанныхСписокПоступлений.Использование = Истина;
		
		ПараметрДанныхСписокПоступлений = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[4];
		ПараметрДанныхСписокПоступлений.Значение = Справочники.Номенклатура.ПустаяСсылка();
		ПараметрДанныхСписокПоступлений.Использование = Истина;
	КонецЕсли;
	
	Настройки = КомпоновщикНастроек.Настройки;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ,ДанныеРасшифровки);
	
	ЭлементыФормы.Результат.Очистить();
	ДокументРезультат = ЭлементыФормы.Результат;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ЭлементыФормы.Результат.ПоказатьУровеньГруппировокСтрок(1);
	ЭлементыФормы.Результат.ФиксацияСверху = 3;
	
	Обл = ДокументРезультат.НайтиТекст("В Заказ",,,Ложь);
	Если Обл <> Неопределено Тогда
		CтрокаЧтения1 = Обл.Низ;
		СтрокаЧтения2 = Обл.Право;
		СуммаВЗаказ = 0;
		а = 0;
		Пока а <= ДокументРезультат.ВысотаТаблицы Цикл
			а = а + 1;
			r = "R"+формат(CтрокаЧтения1+а,"ЧГ=");
			c = "C"+формат(СтрокаЧтения2,"ЧГ=");
			СуммаВЗаказ = СуммаВЗаказ + ?(ДокументРезультат.Область(r+c).Текст = "", 0, Число(ДокументРезультат.Область(r+c).Текст)); 
		КонецЦикла;
	КонецЕсли;	
	
	Обл = ДокументРезультат.НайтиТекст("Итого",,,,Истина);
	Если Обл <> Неопределено Тогда
		CтрокаЧтения1 = Обл.Низ;
		СтрокаЧтения2 = Обл.Право;
		r = "R"+формат(CтрокаЧтения1,"ЧГ=");
		c = "C"+формат(СтрокаЧтения2+4,"ЧГ=");
		ДокументРезультат.Область(r+c).Текст = Формат(СуммаВЗаказ,"ЧДЦ=0"); 
		ДокументРезультат.Область(r+c).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
	КонецЕсли;	
	
КонецПроцедуры;














