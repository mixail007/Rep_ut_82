перем ДанныеРасшифровки_1;
перем ДанныеРасшифровки_2;
перем ДанныеРасшифровки_3;

Процедура ДействияФормыДействие(Кнопка)
     ВывестиОтчет("Реализация", Элементыформы.РезультатРеализация); 
     ВывестиОтчет("Касса", Элементыформы.РезультатКасса); 
     ВывестиОтчет("Расчеты", Элементыформы.РезультатРасчеты); 
КонецПроцедуры

Процедура ПереформироватьОтчет(Схема,Настройки, ДокРезультат)
    //Получаем схему из макета
        СхемаКомпоновкиДанных = ПолучитьМакет(Схема);

        //Из схемы возьмем настройки по умолчанию
   //     Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
   // 	
   //ПараметрСКД = Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
   //ПараметрСКД.Использование = Истина;
   //ПараметрСКД.Значение  = НачПериода;
   //ПараметрСКД = Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
   //ПараметрСКД.Использование = Истина;
   //ПараметрСКД.Значение  = КонецДня(КонПериода);
   //ПараметрСКД = Настройки.ПараметрыДанных.Элементы.Найти("Подразделение");
   //ПараметрСКД.Использование = Истина;
   //ПараметрСКД.Значение  = Справочники.Подразделения.НайтиПоКоду("00106");
		
		
		
		
        //Помещаем в переменную данные о расшифровке данных
        ДанныеРасшифровки_ = Новый ДанныеРасшифровкиКомпоновкиДанных;

        //Формируем макет, с помощью компоновщика макета
        КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

        //Передаем в макет компоновки схему, настройки и данные расшифровки
        МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки_);

        //Выполним компоновку с помощью процессора компоновки
        ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		
		
		
		
        ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки_);
		
	//	 ДанныеРасшифровки=ДанныеРасшифровки_;
		 
        //Очищаем поле табличного документа
        ДокРезультат.Очистить();
          
//        //Выводим результат в табличный документ
        ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
        ПроцессорВывода.УстановитьДокумент(ДокРезультат);
        ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

		Если Схема = "Реализация" Тогда
		ДанныеРасшифровки_1 = ДанныеРасшифровки_;
		иначеЕсли  Схема = "Касса" Тогда
		ДанныеРасшифровки_2 = ДанныеРасшифровки_;
	    иначе 
		ДанныеРасшифровки_3 = ДанныеРасшифровки_;
		КонецЕсли;

		
		
	КонецПроцедуры
	
	
	
	Процедура ВывестиОтчет(Схема, ДокРезультат)
    //Получаем схему из макета
        СхемаКомпоновкиДанных = ПолучитьМакет(Схема);

        //Из схемы возьмем настройки по умолчанию
        Настройки_ = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
		
   ПараметрСКД = Настройки_.ПараметрыДанных.Элементы.Найти("НачалоПериода");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = НачПериода;
   ПараметрСКД = Настройки_.ПараметрыДанных.Элементы.Найти("КонецПериода");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонецДня(КонПериода);
   ПараметрСКД = Настройки_.ПараметрыДанных.Элементы.Найти("Подразделение");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = Справочники.Подразделения.НайтиПоКоду("00106");
		
		
		
		
        //Помещаем в переменную данные о расшифровке данных
        ДанныеРасшифровки_ = Новый ДанныеРасшифровкиКомпоновкиДанных;

        //Формируем макет, с помощью компоновщика макета
        КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

        //Передаем в макет компоновки схему, настройки и данные расшифровки
        МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки_, ДанныеРасшифровки_);

        //Выполним компоновку с помощью процессора компоновки
        ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		
		
		
		
        ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки_);
		
	//	 ДанныеРасшифровки=ДанныеРасшифровки_;
		 
        //Очищаем поле табличного документа
        ДокРезультат.Очистить();
          
//        //Выводим результат в табличный документ
        ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
        ПроцессорВывода.УстановитьДокумент(ДокРезультат);
		
		
        ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		Если Схема = "Реализация" Тогда
		ДанныеРасшифровки_1 = ДанныеРасшифровки_;
		иначеЕсли  Схема = "Касса" Тогда
		ДанныеРасшифровки_2 = ДанныеРасшифровки_;
	    иначе 
		ДанныеРасшифровки_3 = ДанныеРасшифровки_;
		КонецЕсли;
		
	КонецПроцедуры


	Процедура ВыбПериодНажатие(Элемент)
		НастройкаПериода = Новый НастройкаПериода;
		НастройкаПериода.РедактироватьКакИнтервал = Истина;
		НастройкаПериода.РедактироватьКакПериод = Истина;
		НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
		НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
		Если НастройкаПериода.Редактировать() Тогда
			НачПериода = НастройкаПериода.ПолучитьДатуНачала();
			КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
		КонецЕсли;
	КонецПроцедуры

	Процедура РезультатКассаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;
    СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанных = ПолучитьМакет("Реализация");

   //Создадим и инициализируем обработчик расшифровки                    
    ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки_1, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
                                                                         
    ДоступныеДействия = Новый Массив();
	//ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	//ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	//ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
    
   // Добавляем собственные действия 
    Нов = Новый СписокЗначений;
    Нов.Добавить("Открыть");

    
    Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия,Нов);
    
   // Обрабатываем собственные действия 
   Если ВыполненноеДействие = "Открыть" Тогда
	    ЭлементРасшифровкиДанных = ДанныеРасшифровки_1.Элементы[Расшифровка];
        ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
        ОбработкаРасшифровки.ОткрытьЗначение(ЭлементРасшифровкиДанных.Идентификатор, новый ПолеКомпоновкиДанных(ЭлементРасшифровкиДанныхПоля.Поле));
    КонецЕсли;
    
	Если Настройки <> Неопределено Тогда
	//   //пользователь выбрал действие, для которого нужно менять настройки 
	//    Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить Тогда
	        КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	        ПереформироватьОтчет("Реализация",Настройки,ЭлементыФормы.РезультатРеализация);
	//        
	//    Иначе
	//        
	//       //при других действиях создадим новый отчет, откроем форму, сформируем отчет в ней 
	//        ЭтаФорма.Открыть();
	//        КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	//        СформироватьОтчет();
	//   КонецЕсли;
	КонецЕсли;
	КонецПроцедуры

	Процедура РезультатКасса1ОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;
    СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанных = ПолучитьМакет("Касса");

   //Создадим и инициализируем обработчик расшифровки                    
    ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки_2, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
                                                                         
    ДоступныеДействия = Новый Массив();
	//ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	//ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	//ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
    
   // Добавляем собственные действия 
    Нов = Новый СписокЗначений;
    Нов.Добавить("Открыть");

    
    Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия,Нов);
    
   // Обрабатываем собственные действия 
   Если ВыполненноеДействие = "Открыть" Тогда
	    ЭлементРасшифровкиДанных = ДанныеРасшифровки_2.Элементы[Расшифровка];
        ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
        ОбработкаРасшифровки.ОткрытьЗначение(ЭлементРасшифровкиДанных.Идентификатор, новый ПолеКомпоновкиДанных(ЭлементРасшифровкиДанныхПоля.Поле));
    КонецЕсли;
    
	Если Настройки <> Неопределено Тогда
	//   //пользователь выбрал действие, для которого нужно менять настройки 
	//    Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить Тогда
	        КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	        ПереформироватьОтчет("Касса",Настройки,ЭлементыФормы.РезультатКасса);
	//        
	//    Иначе
	//        
	//       //при других действиях создадим новый отчет, откроем форму, сформируем отчет в ней 
	//        ЭтаФорма.Открыть();
	//        КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	//        СформироватьОтчет();
 //  КонецЕсли;
	КонецЕсли;

	КонецПроцедуры

	Процедура РезультатРасчетыОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;
    СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанных = ПолучитьМакет("Расчеты");

   //Создадим и инициализируем обработчик расшифровки                    
    ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки_3, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
                                                                         
    ДоступныеДействия = Новый Массив();
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
    
   // Добавляем собственные действия 
    Нов = Новый СписокЗначений;
	//Нов.Добавить("Открыть");

    
    Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия);
    
    
	Если Настройки <> Неопределено Тогда
	//   //пользователь выбрал действие, для которого нужно менять настройки 
	//    Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить Тогда
	        КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	        ПереформироватьОтчет("Расчеты",Настройки,ЭлементыФормы.РезультатРасчеты);
	//        
	//    Иначе
	//        
	//       //при других действиях создадим новый отчет, откроем форму, сформируем отчет в ней 
	//        ЭтаФорма.Открыть();
	//        КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	//        СформироватьОтчет();
 //  КонецЕсли;
	КонецЕсли;
	КонецПроцедуры


	Процедура ДействияФормыОбновить(Кнопка)
		Если Элементыформы.Панель1.ТекущаяСтраница.Имя = "Реализации" тогда
     ВывестиОтчет("Реализация", Элементыформы.РезультатРеализация); 
		ИначеЕсли Элементыформы.Панель1.ТекущаяСтраница.Имя = "Касса" тогда
     ВывестиОтчет("Касса", Элементыформы.РезультатКасса); 
		иначе
     ВывестиОтчет("Расчеты", Элементыформы.РезультатРасчеты); 
		конецесли;	
	КонецПроцедуры
