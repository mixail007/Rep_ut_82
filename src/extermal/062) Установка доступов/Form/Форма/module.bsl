
Процедура ЗаполнитьТекущиеРазрешения()
	
	
	Если ТабличноеПоле1.Отбор.Найти("ДатаОкончанияРазрешения") = Неопределено Тогда 
		ТабличноеПоле1.Отбор.Добавить("ДатаОкончанияРазрешения");
	КонецЕсли;
	//
	ТабличноеПоле1.Отбор["ДатаОкончанияРазрешения"].Использование = Истина;
	ТабличноеПоле1.Отбор["ДатаОкончанияРазрешения"].Значение = ТекущаяДата();
	ТабличноеПоле1.Отбор["ДатаОкончанияРазрешения"].ВидСравнения = ВидСравнения.БольшеИлиРавно; 
	
	Если ТабличноеПоле1.Отбор.Найти("Утвержден") = Неопределено Тогда 
		ТабличноеПоле1.Отбор.Добавить("Утвержден");
	КонецЕсли;
	//
	ТабличноеПоле1.Отбор["Утвержден"].Использование = Истина;
	ТабличноеПоле1.Отбор["Утвержден"].Значение = Истина;
	ТабличноеПоле1.Отбор["Утвержден"].ВидСравнения = ВидСравнения.Равно; 


КонецПроцедуры
 

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	НаборЗаписей = РегистрыСведений.НастройкаПравДоступа.СоздатьНаборЗаписей();
	
	Для каждого СтрокаТаблицы  Из ТаблицаДоступов Цикл
	
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ВидДокументов = ?(ТипЗнч(СтрокаТаблицы.Документ) = Тип("Строка"), Истина, Ложь);
		НоваяЗапись.ВыбранныйДокументВид = СтрокаТаблицы.Документ;
		НоваяЗапись.Утвержден = Истина;
		НоваяЗапись.Активность = Истина;
		
		Если ТипЗнч(СтрокаТаблицы.Документ) = Тип("Строка") Тогда
		
			НоваяЗапись.ДатаНачалаОбъектов = СтрокаТаблицы.ДатаНачала;
			НоваяЗапись.ДатаКонцаОбъектов = СтрокаТаблицы.ДатаОкончания;
		
		КонецЕсли; 
		
		Если ЗначениеНеЗаполнено(СтрокаТаблицы.РольПользователя) Тогда
		
			НоваяЗапись.ПользовательРоль = СтрокаТаблицы.Пользователь;
			
		Иначе
			
			НоваяЗапись.ПользовательРоль = СтрокаТаблицы.РольПользователя;
			
		КонецЕсли; 
		
		НоваяЗапись.ДатаОкончанияРазрешения = ТекущаяДата() + СтрокаТаблицы.ВремяОткрытия*3600;
	
	КонецЦикла; 
	
	НаборЗаписей.Записать(Ложь);
	
	ТаблицаДоступов.Очистить();
	
	
КонецПроцедуры

Процедура ТабличноеПоле2ПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		
	    Предупреждение("Данная функция пока не реализована!", 3);
		Возврат;
	
	КонецЕсли; 
	
	ФормаДобавления = ПолучитьФорму("ДобавлениеСтроки");
	
	Если ЭлементыФормы.Пользователи1.Значение = 1 Тогда
	
		ФормаДобавления.ВыборРолей = Истина;	
		
	Иначе
		
		ФормаДобавления.ВыборРолей = Ложь;	
	
	КонецЕсли; 
	
	Если ЭлементыФормы.Документы.Значение = 0 Тогда
	
		ФормаДобавления.ВыборДокумента = Истина;	
		
	Иначе
		
		ФормаДобавления.ВыборДокумента = Ложь;	
	
	КонецЕсли; 

	
	
	Если ФормаДобавления.ОткрытьМодально() <> Неопределено Тогда
	
		Если (ЭлементыФормы.Документы.Значение = 0) И (ЭлементыФормы.Пользователи1.Значение = 0) Тогда
		
			СтрокаТаблицы = ТаблицаДоступов.Добавить();
			СтрокаТаблицы.Документ = ФормаДобавления.Документ;
			СтрокаТаблицы.Пользователь = ФормаДобавления.Пользователь;
			СтрокаТаблицы.ВремяОткрытия = ФормаДобавления.Срок;
		
		КонецЕсли;
		
		
		Если (ЭлементыФормы.Документы.Значение = 0) И (ЭлементыФормы.Пользователи1.Значение = 1) Тогда
			
			Для каждого СтрокаРолей Из ФормаДобавления.РолиПользователя Цикл
				
				Если СтрокаРолей.Пометка Тогда
					
					СтрокаТаблицы = ТаблицаДоступов.Добавить();
					СтрокаТаблицы.Документ = ФормаДобавления.Документ;
					СтрокаТаблицы.РольПользователя = СтрокаРолей.Значение;
					СтрокаТаблицы.ДатаНачала = ФормаДобавления.НачПериода;
					СтрокаТаблицы.ДатаОкончания = ФормаДобавления.КонПериода;
					СтрокаТаблицы.ВремяОткрытия = ФормаДобавления.Срок;
					
				КонецЕсли; 
				
			КонецЦикла; 
			
		КонецЕсли; 

		
		Если (ЭлементыФормы.Документы.Значение = 1) И (ЭлементыФормы.Пользователи1.Значение = 1) Тогда
			
			Для каждого СтрокаВидов Из ФормаДобавления.ВидыДокументов Цикл
				
				Если СтрокаВидов.Пометка Тогда
					
					Для каждого СтрокаРолей Из ФормаДобавления.РолиПользователя Цикл
						
						Если СтрокаРолей.Пометка Тогда
							
							СтрокаТаблицы = ТаблицаДоступов.Добавить();
							СтрокаТаблицы.Документ = СтрокаВидов.Значение;
							СтрокаТаблицы.РольПользователя = СтрокаРолей.Значение;
							СтрокаТаблицы.ДатаНачала = ФормаДобавления.НачПериода;
							СтрокаТаблицы.ДатаОкончания = ФормаДобавления.КонПериода;
							СтрокаТаблицы.ВремяОткрытия = ФормаДобавления.Срок;
							
						КонецЕсли; 
						
					КонецЦикла; 
					
				КонецЕсли; 
				
			КонецЦикла; 
			
		КонецЕсли; 

		Если (ЭлементыФормы.Документы.Значение = 1) И (ЭлементыФормы.Пользователи1.Значение = 0) Тогда
			
			Для каждого СтрокаВидов Из ФормаДобавления.ВидыДокументов Цикл
				
				Если СтрокаВидов.Пометка Тогда
					
					СтрокаТаблицы = ТаблицаДоступов.Добавить();
					СтрокаТаблицы.Документ = СтрокаВидов.Значение;
					СтрокаТаблицы.Пользователь = ФормаДобавления.Пользователь;
					СтрокаТаблицы.ДатаНачала = ФормаДобавления.НачПериода;
					СтрокаТаблицы.ДатаОкончания = ФормаДобавления.КонПериода;
					СтрокаТаблицы.ВремяОткрытия = ФормаДобавления.Срок;
					
					
				КонецЕсли; 
				
			КонецЦикла; 
			
		КонецЕсли; 
		
		//Отказ = Ложь;
	
	КонецЕсли; 
	

	
КонецПроцедуры

Процедура ОсновныеДействияФормыДалее(Кнопка)
	
	Если ЭлементыФормы.Панель1.Страницы.Количество() - 1 > ЭлементыФормы.Панель1.Страницы.Индекс(ЭлементыФормы.Панель1.ТекущаяСтраница) Тогда
	
		ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы[ЭлементыФормы.Панель1.Страницы.Индекс(ЭлементыФормы.Панель1.ТекущаяСтраница) + 1];
	
	КонецЕсли; 	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПредыдущая(Кнопка)
	
	Если ЭлементыФормы.Панель1.Страницы.Индекс(ЭлементыФормы.Панель1.ТекущаяСтраница) > 0 Тогда
	
		ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы[ЭлементыФормы.Панель1.Страницы.Индекс(ЭлементыФормы.Панель1.ТекущаяСтраница) - 1];
	
	КонецЕсли;
		
КонецПроцедуры

Процедура ТаблицаДоступовПередНачаломИзменения(Элемент, Отказ)
	Предупреждение("Данная функция пока не реализована!", 3);
	Отказ = Истина;
КонецПроцедуры

Функция ВходитВГруппу(Пользователь, Группа)

	Если ТипЗнч(Пользователь) = Тип("Строка") Тогда
	
		Пользователь = Справочники.Пользователи.НайтиПоКоду(Пользователь);
	
	КонецЕсли; 
	
	Если ТипЗнч(Группа) = Тип("Строка") Тогда
	
		Группа = Справочники.ГруппыПользователей.НайтиПоНаименованию(Группа);
	
	КонецЕсли;
	
	Если Группа = Справочники.ГруппыПользователей.ПустаяСсылка() 
		 ИЛИ Пользователь = Справочники.Пользователи.ПустаяСсылка() Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	ГруппыПользователей.ПользователиГруппы.(
	 |		Пользователь,
	 |		Ссылка
	 |	)
	 |ИЗ
	 |	Справочник.ГруппыПользователей КАК ГруппыПользователей
	 |ГДЕ
	 |	ГруппыПользователей.ПользователиГруппы.Пользователь = &Пользователь
	 |	И ГруппыПользователей.ПользователиГруппы.Ссылка = &Ссылка";
	 
	 Запрос.УстановитьПараметр("Пользователь", Пользователь);
	 Запрос.УстановитьПараметр("Ссылка", Группа);
	 
	 Если НЕ Запрос.Выполнить().Пустой() Тогда
	 
	 	Возврат Истина;
	 
	 КонецЕсли; 
		
     Возврат Ложь;

КонецФункции // ВходитВГруппу()
 
Процедура ПриОткрытии()
	
	
	ЗаполнитьТекущиеРазрешения();	
	
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ЗаполнитьТекущиеРазрешения();
	
КонецПроцедуры

Процедура ОтменитьРазрешениеНажатие(Элемент)
	
	Менеджер = РегистрыСведений.НастройкаПравДоступа.СоздатьМенеджерЗаписи();
	Менеджер.ВидДокументов = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.ВидДокументов;
	Менеджер.ВыбранныйДокументВид = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.ВыбранныйДокументВид;
	Менеджер.ДатаКонцаОбъектов = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.ДатаКонцаОбъектов;
	Менеджер.ДатаНачалаОбъектов = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.ДатаНачалаОбъектов;
	Менеджер.ДатаОкончанияРазрешения = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.ДатаОкончанияРазрешения;
	Менеджер.ДатаУстановки = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.ДатаУстановки;
	Менеджер.Ответственный = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.Ответственный;
	Менеджер.ПользовательРоль = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.ПользовательРоль;
	Менеджер.Утвержден = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.Утвержден;
	Менеджер.Прочитать();
	
	Если Менеджер.Выбран() Тогда
	
		Менеджер.Утвержден = Ложь;
		Менеджер.Записать(Истина);
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	//Отказ = Истина;
	//
	//ИнСтр = "";
	//
	//ЧислоПопыток = 1;
	//ВсегоПопыток = 3;
	//
	//Пока ЧислоПопыток <= ВсегоПопыток Цикл
	//
	//Если ВвестиСтроку(ИнСтр, "Введите пароль") Тогда
	//
	//	Если ИнСтр = "159" Тогда
	//		
	//		Отказ = Ложь;
	//		Прервать;
	//		
	//	Иначе
	//		
	//		Если ЧислоПопыток < ВсегоПопыток Тогда
	//			
	//			Предупреждение("Введен неправильный пароль!", 2);
	//			ИнСтр = "";
	//			
	//			
	//		КонецЕсли; 
	//		
	//	КонецЕсли; 
	//	
	//Иначе
	//	
	//	Прервать;
	//	
	//КонецЕсли;
	//
	//ЧислоПопыток = ЧислоПопыток + 1;
	//
	//КонецЦикла; 
	//
	//Если Отказ Тогда
	//
	//	Предупреждение("Вы не можете использовать данный инструмент!");
	//
	//КонецЕсли; 
	//
	
	//Попытка
	//	
	//	Если НЕ ВходитВГруппу(глТекущийПользователь, Справочники.ГруппыПользователей.ГраницыДоступов) Тогда
	//		
	//		Отказ = Истина;
	//		Предупреждение("Вы не можете использовать данный инструмент!"); 
	//		
	//	КонецЕсли; 
	//	
	//	
	//Исключение
	//	
	//	Отказ = Истина;
	//	Предупреждение("Вы не можете использовать данный инструмент!"); 
	//	
	//КонецПопытки; 
	
	
КонецПроцедуры
