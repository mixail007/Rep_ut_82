
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
Время0 = ТекущаяДата();
дата0 = формат(Год(ТекущаяДата()),"ЧГ=0")+"\"+формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+формат(ТекущаяДата(),"ДФ=MMMM")+"\";
врФТП = неопределено;

путь1 = путь0+дата0;  // где формировать
//путь2 = "\\terminal\обмен\Остатки\"+дата0;        // куда переносить

//"26-05"
дата1 = формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+ формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=");
//"26.05.2015"
ИмяОбщАрхива= формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+ формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+формат(Год(ТекущаяДата()),"ЧГ=0")+".zip";

//+++ 21.08.2015
ИмяФайлаUSD     = " Yaroslavl.xls"; 
ИмяАрхиваUSD = дата1+" Yaroslavl.zip";

ИмяФайлаЯШТ     = " Ярославль.xls";
ИмяФайлаЯШТБрак = " Ярославль(Диски-брак).xls";

ИмяФайла1   = " Ростов.xls";
ИмяФайла2   = " Питер.xls";
ИмяФайла3   = " Москва.xls";
ИмяФайла4   = " Екатеринбург.xls";
ИмяФайла5   = " Тольятти.xls";

ИмяФайлаОст = "Остатки "+дата1+".xls"; 

ИмяФайлаТочек = "points.xml";
	
если не Флажок1 тогда	
лВыгрузитьПрайсЯрославль();	//USD и руб.	
Флажок1 = истина;
ПолеВвода1 = ТекущаяДата();

//--------------------------------------------------------------------------------
zipФайл = Новый ЗаписьZipФайла(путь1+ИмяАрхиваUSD,,,МетодСжатияzip.Сжатие,
				УровеньСжатияzip.Оптимальный,
				//МетодШифрованияzip.Zip20
				);
zipФайл.Добавить(путь1+дата1+ИмяФайлаUSD, РежимСохраненияПутейZIP.НеСохранятьПути);
zipФайл.Записать();
сообщить("Создан архив "+путь1+ИмяАрхиваUSD);


//--------------------------------------------------------------------------------
zipФайл = Новый ЗаписьZipФайла(путь1+дата1+" Ярославль.zip",,,МетодСжатияzip.Сжатие,
				УровеньСжатияzip.Оптимальный,
				//МетодШифрованияzip.Zip20
				);
zipФайл.Добавить(путь1+дата1+ИмяФайлаЯШТ, РежимСохраненияПутейZIP.НеСохранятьПути);
zipФайл.Записать();
сообщить("Создан архив "+путь1+дата1+" Ярославль.zip");

//--------------------------------------------------------------------------------
//Оставляем тут ВСЕГДА для полного архива!
	попытка
	КопироватьФайл(путь1+дата1+ИмяФайлаЯШТ, путь2+дата1+ИмяФайлаЯШТ);
	КопироватьФайл(путь1+дата1+ИмяФайлаЯШТБрак, путь2+дата1+ИмяФайлаЯШТБрак);
	КопироватьФайл(путь1+дата1+" Ярославль.zip",путь2+дата1+" Ярославль.zip");
		сообщить(строка(ТекущаяДата())+" Файлы остатков по Ярославлю "+?(флКопировать,"скопированы","перемещены")+" в "+путь2, СтатусСообщения.Информация);
	исключение
		сообщить(строка(ТекущаяДата())+" Файлы остатков по Ярославлю НЕ "+?(флКопировать,"скопированы","перемещены")+" в "+путь2, СтатусСообщения.Внимание);
    КонецПопытки;
КонецЕсли;

если не Флажок2 тогда
лВыгрузитьПрайсФилиалов();	
Флажок2 = истина;
ПолеВвода1 = ТекущаяДата();


zipФайл = новый ЗаписьZipФайла(путь1+ИмяОбщАрхива,,,МетодСжатияzip.Сжатие,
				УровеньСжатияzip.Оптимальный,
				//МетодШифрованияzip.Zip20
				);

zipФайл.Добавить(путь1+дата1+ИмяФайлаЯШТ, РежимСохраненияПутейZIP.НеСохранятьПути);
zipФайл.Добавить(путь1+дата1+ИмяФайла1, РежимСохраненияПутейZIP.НеСохранятьПути);
zipФайл.Добавить(путь1+дата1+ИмяФайла2, РежимСохраненияПутейZIP.НеСохранятьПути);
//+++ москву - не надо!
//zipФайл.Добавить(путь1+дата1+ИмяФайла3, РежимСохраненияПутейZIP.НеСохранятьПути);
zipФайл.Добавить(путь1+дата1+ИмяФайла4, РежимСохраненияПутейZIP.НеСохранятьПути);
zipФайл.Добавить(путь1+дата1+ИмяФайла5, РежимСохраненияПутейZIP.НеСохранятьПути); //14.08.2018
zipФайл.Записать();
сообщить("Создан архив "+путь1+ИмяОбщАрхива);

//===========================выгрузка прайсов на сайт===============================
	попытка
		Состояние(строка(ТекущаяДата())+" Идет подключение к FTP...");
		врФТП = Новый FTPСоединение("ftp.yst.ru",,"dc140403_yst", "scdi7kRU",, Истина ); //  188.225.16.133>>ftp.yst.ru

	Если врФТП = Неопределено Тогда
		Сообщить( "Во время обмена данными произошла ошибка при подключении	к FTP. " + ОписаниеОшибки(), СтатусСообщения.Внимание);
	иначе
		Состояние(строка(ТекущаяДата())+" Соединение с FTP установлено...");
	КонецЕсли;
	
	//  врФТП.Записать("c:\"+ИмяФайлаСообщения , "data/"+ИмяФайлаСообщения);
	Состояние("Идет копирование файла на сайт...");
	врФТП.Записать(путь1+ИмяОбщАрхива , "public_html/data/Price_YST.zip");
	
	
	Состояние("Идет копирование файла USD на сайт...");
	врФТП.Записать(путь1+ИмяАрхиваUSD , "public_html/data/Price_USD_YST.zip");
	
	
	//  Сообщить(строка(ТекущаяДата())+" - Файл: "+ИмяФайлаСообщения+" - успешно выгружен на сайт ftp://yst76.ru/data/"+ИмяФайлаСообщения, СтатусСообщения.Информация)
	Сообщить(строка(ТекущаяДата())+" - Файл: "+ИмяОбщАрхива+" - успешно выгружен на сайт.", СтатусСообщения.Информация);
	Сообщить("Прямая cсылка для скачивания:   http://www.yst.ru/data/"+ИмяОбщАрхива, СтатусСообщения.Информация);
	Исключение
		Сообщить("Ошибка при выгрузке на FTP файла: "+ИмяОбщАрхива+" : "+ОписаниеОшибки(), СтатусСообщения.Информация);
	КонецПопытки;
	
//=============================================================


zipФайл = новый ЗаписьZipФайла(путь1+дата1+" Остатки.zip",,,МетодСжатияzip.Сжатие,
				УровеньСжатияzip.Оптимальный,
				//МетодШифрованияzip.Zip20
				);
zipФайл.Добавить(путь1+ИмяФайлаОст);
 zipФайл.Записать();
сообщить("Создан архив "+путь1+дата1+" Остатки.zip");  //zip  остаётся

//--------------------------------------------------------------------------------


попытка
если флКопировать тогда
	//ярославль уже скопирован
	КопироватьФайл(путь1+дата1+ИмяФайла1,путь2+дата1+ИмяФайла1);
	КопироватьФайл(путь1+дата1+ИмяФайла2,путь2+дата1+ИмяФайла2);
	КопироватьФайл(путь1+дата1+ИмяФайла3,путь2+дата1+ИмяФайла3);
	КопироватьФайл(путь1+дата1+ИмяФайла4,путь2+дата1+ИмяФайла4);
	КопироватьФайл(путь1+дата1+ИмяФайла5,путь2+дата1+ИмяФайла5); //14.08.2018
	КопироватьФайл(путь1+ИмяОбщАрхива   ,путь2+ИмяОбщАрхива);

	КопироватьФайл(путь1+дата1+ИмяФайлаОст,путь2+дата1+ИмяФайлаОст);
Иначе
	УдалитьФайлы(путь1, дата1+ИмяФайлаЯШТ); //Ярославль просто удаляем
	УдалитьФайлы(путь1, дата1+ИмяФайлаЯШТБрак); //ЯрославльБрак просто удаляем
	ПереместитьФайл(путь1+дата1+ИмяФайла1,путь2+дата1+ИмяФайла1);
	ПереместитьФайл(путь1+дата1+ИмяФайла2,путь2+дата1+ИмяФайла2);
	ПереместитьФайл(путь1+дата1+ИмяФайла3,путь2+дата1+ИмяФайла3);
	ПереместитьФайл(путь1+дата1+ИмяФайла4,путь2+дата1+ИмяФайла4);
	ПереместитьФайл(путь1+дата1+ИмяФайла5,путь2+дата1+ИмяФайла5);
//	ПереместитьФайл(путь1+ИмяОбщАрхива   ,путь2+ИмяОбщАрхива);     //zip остаётся
	КопироватьФайл(путь1+ИмяОбщАрхива   ,путь2+ИмяОбщАрхива);

	ПереместитьФайл(путь1+ИмяФайлаОст, путь2+ИмяФайлаОст);
КонецЕсли;	
сообщить(строка(ТекущаяДата())+" Все Файлы по филиалам "+?(флКопировать,"скопированы","перемещены")+" в "+путь2, СтатусСообщения.Информация);
	исключение
сообщить(строка(ТекущаяДата())+" НЕ Все Файлы по филиалам "+?(флКопировать,"скопированы","перемещены")+" в "+путь2, СтатусСообщения.Внимание);
	КонецПопытки;
КонецЕсли;

если не Флажок3 тогда
	
	ВыгрузкаТочек(путь1+ИмяФайлаТочек);

	если врФТП=неопределено тогда
		попытка
			Состояние(строка(ТекущаяДата())+" Идет подключение к FTP...");
			врФТП = Новый FTPСоединение("ftp.yst.ru",,"dc140403_yst", "scdi7kRU",, Истина ); //188.225.16.133 >> ftp.yst.ru

			Если врФТП = Неопределено Тогда
				Сообщить( "Во время обмена данными произошла ошибка при подключении	к FTP. " + ОписаниеОшибки(), СтатусСообщения.Внимание);
			иначе
				Состояние(строка(ТекущаяДата())+" Соединение с FTP установлено...");
			КонецЕсли;
		исключение
			сообщить(строка(ТекущаяДата())+" НЕТ соединения с FTP.", СтатусСообщения.Внимание);
		КонецПопытки;
	
	КонецЕсли;
	
	//  врФТП.Записать("c:\"+ИмяФайлаСообщения , "data/"+ИмяФайлаСообщения);
	Состояние("Идет копирование файла на сайт...");
	
	попытка
		врФТП.Записать(путь1+ИмяФайлаТочек , "public_html/data/"+ИмяФайлаТочек);
		Сообщить(строка(ТекущаяДата())+" - Файл: "+ИмяФайлаТочек+" - успешно выгружен на сайт.", СтатусСообщения.Информация);
		Сообщить("Прямая cсылка для скачивания:   http://www.yst.ru/data/"+ИмяФайлаТочек, СтатусСообщения.Информация);
	Исключение
		Сообщить("Ошибка при выгрузке на FTP файла: "+ИмяФайлаТочек+" : "+ОписаниеОшибки(), СтатусСообщения.Информация);
	КонецПопытки;
	
	Флажок3 = истина;
КонецЕсли;	

//21.02.2018 -------------отдельная выгрузка сразу в папку2------------------------
Если не Флажок4 тогда 
	ВнешОбр = справочники.ВнешниеОбработки.НайтиПоКоду(171);
	
	ИмяФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные = ВнешОбр.ХранилищеВнешнейОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяФайла); //каждый раз заново!
	сообщить("для обработки № 171 - записан файл "+ИмяФайла);
	Форма = ВнешниеОбработки.ПолучитьФорму(ИмяФайла);
	//путь3 = путь2+"Все диски\"; 
	Форма.СохранитьВExcel_ВсеДиски(путь3); // фикс название !!!     
//26.09.2018
	//имя4 = формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+формат(месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+" Диски с товарами в пути(диски).xls";
	  имя4 = формат(День(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"-"+формат(месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+" Остатки по дискам+ (диски).xls";
	
	//путь3 >> путь2+"Все диски\";
	КопироватьФайл(путь3+имя4, путь2+"Все диски\"+имя4);
	
	Флажок4 = истина;
КонецЕсли;

ВремяВыполнения = ТекущаяДата() - Время0;
сообщить("----- Обработка выполнена за "+строка( цел(ВремяВыполнения/60) )+" мин.------");
КонецПроцедуры


Процедура ВыгрузкаТочек(ИмяФайла="", ТОЛЬКОутв = истина)
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	МАКСИМУМ(Точки.НазваниеТочки) КАК name,
	                |	МИНИМУМ(Точки.Номер) КАК id,
	                |	Точки.Адрес КАК address,
					//+++ 21.11.2017
	                |	Точки.АдресTerminal КАК addressterminal,
					
	                |	МАКСИМУМ(Точки.ИнформацияДляВодителя) КАК phone,
	                |	МАКСИМУМ(Точки.КонтактноеЛицо) КАК person,
	                |	МАКСИМУМ(Точки.Согласован) КАК agreed,
	                |	МАКСИМУМ(Точки.Координаты) КАК coordinates,
	                |	МАКСИМУМ(Точки.НаправлениеПродаж) КАК direction,
	                |	МАКСИМУМ(Точки.Ссылка) КАК Точка,
	                |	МАКСИМУМ(Точки.WebSite) КАК WebSite,
	                |	Точки.Владелец.НаименованиеПолное КАК Client
	                |ИЗ
	                |	Справочник.Точки КАК Точки
	                |ГДЕ
	                |	НЕ(Точки.Владелец.ЗапретитьВводЗаказаПокупателя
	                |				ИЛИ Точки.Владелец.ЗапретОтгрузки
	                |				ИЛИ Точки.Владелец.ПометкаУдаления
	                |				ИЛИ Точки.ПометкаУдаления)
	                |	И Точки.Согласован
	                |	И НЕ Точки.Владелец.ИНН В
	                |				(ВЫБРАТЬ
	                |					ДанныеПоСудебнымДеламСрезПервых.ИННОтветчика
	                |				ИЗ
	                |					РегистрСведений.ДанныеПоСудебнымДелам.СрезПервых КАК ДанныеПоСудебнымДеламСрезПервых
	                |				ГДЕ
	                |					ДанныеПоСудебнымДеламСрезПервых.IsSimpleJustice)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	Точки.Владелец.НаименованиеПолное,
	                |	Точки.Адрес,
					|	Точки.АдресTerminal 
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Client,
	                |	address,
	                |	id
	                |АВТОУПОРЯДОЧИВАНИЕ";
					    
	Если НЕ ТОЛЬКОутв тогда
		Запрос.Текст = стрЗаменить(запрос.Текст, "ГДЕ Точки.Согласован","");
	КонецЕсли;
	
	 Результат = Запрос.Выполнить();
	 выборка   = Результат.Выбрать(); 
	
	 таблЗамена = новый ТаблицаЗначений;
	 таблЗамена.Колонки.Добавить("Что");
	 таблЗамена.Колонки.Добавить("НаЧто");
	 стр1 = таблЗамена.Добавить();
	 	стр1.Что = "Общество с ограниченной ответственностью"; стр1.НаЧто ="ООО";
	 стр1 = таблЗамена.Добавить();
	 	стр1.Что = "Индивидуальный предприниматель"; 			стр1.НаЧто ="ИП";
	 стр1 = таблЗамена.Добавить();
	 	стр1.Что ="«";											стр1.НаЧто ="""";
	 стр1 = таблЗамена.Добавить();
	 	стр1.Что ="»";											стр1.НаЧто ="""";
	 
	ОбъектXML = Новый ЗаписьXML;
	ОбъектXML.ОткрытьФайл(ИмяФайла, "UTF-8");
	
	ОбъектXML.ЗаписатьОбъявлениеXML();  //<?xml version="1.0"?>
	ОбъектXML.ЗаписатьНачалоЭлемента("companies");
      адр0 = ""; client0="";     
	  Пока выборка.Следующий() цикл
		  
		  Если client0 = СокрЛП(выборка.client) //+++ 17.10.2017 - 1 точка клиента с 1 адресом
			  и адр0 =  сокрЛП(выборка.address) тогда
			  сообщить(" Точка "+строка(выборка.id)+" с таким же адресом у того же клиента "+client0+" НЕ БУДЕТ выгружаться!", СтатусСообщения.Внимание);
			  продолжить;
		  Иначе
			 client0 = СокрЛП(выборка.client);
			    адр0 = сокрЛП(выборка.address);  
		  КонецЕсли;	  
			  
	ОбъектXML.ЗаписатьНачалоЭлемента("company");
        ОбъектXML.ЗаписатьНачалоЭлемента("name"); ОбъектXML.ЗаписатьТекст(СокрЛП(выборка.name));
		ОбъектXML.ЗаписатьКонецЭлемента();
		  clientName = СокрЛП(выборка.client);
		  Для i=0 по таблЗамена.Количество()-1 цикл
			  clientName = стрЗаменить(clientName ,таблЗамена[i].Что, таблЗамена[i].НаЧто);
		  КонецЦикла;
		ОбъектXML.ЗаписатьНачалоЭлемента("client"); ОбъектXML.ЗаписатьТекст(clientName); //+++ 05.10.2017
		ОбъектXML.ЗаписатьКонецЭлемента();

		ОбъектXML.ЗаписатьНачалоЭлемента("id"); ОбъектXML.ЗаписатьТекст( формат(выборка.id, "ЧГ=0") );
		ОбъектXML.ЗаписатьКонецЭлемента();
		ОбъектXML.ЗаписатьНачалоЭлемента("address"); ОбъектXML.ЗаписатьТекст( сокрЛП(выборка.address) );
		ОбъектXML.ЗаписатьКонецЭлемента();
		
		//+++ 21.11.2017
		ОбъектXML.ЗаписатьНачалоЭлемента("addressterminal"); ОбъектXML.ЗаписатьТекст( сокрЛП(выборка.addressterminal) );  
		ОбъектXML.ЗаписатьКонецЭлемента();

		ОбъектXML.ЗаписатьНачалоЭлемента("phone"); ОбъектXML.ЗаписатьТекст( сокрЛП(выборка.phone) );
		ОбъектXML.ЗаписатьКонецЭлемента();
		ОбъектXML.ЗаписатьНачалоЭлемента("person"); ОбъектXML.ЗаписатьТекст(  сокрЛП(выборка.person) );
   		ОбъектXML.ЗаписатьКонецЭлемента();
		ОбъектXML.ЗаписатьНачалоЭлемента("agreed"); ОбъектXML.ЗаписатьТекст( ?(выборка.agreed, "1", "0") );
		ОбъектXML.ЗаписатьКонецЭлемента();
		если выборка.coordinates<>"" тогда
			ОбъектXML.ЗаписатьНачалоЭлемента("coordinates"); ОбъектXML.ЗаписатьТекст( выборка.coordinates );
	 		ОбъектXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
		
		ОбъектXML.ЗаписатьНачалоЭлемента("direction");ОбъектXML.ЗаписатьТекст( формат(выборка.direction,"ЧН=0")  ); // 0...15
		ОбъектXML.ЗаписатьКонецЭлемента();
		
		ОбъектXML.ЗаписатьНачалоЭлемента("directnames");ОбъектXML.ЗаписатьТекст( ЧислоВФлаги(выборка.direction)  ); // 1,2,4,8
		ОбъектXML.ЗаписатьКонецЭлемента();
		
		ОбъектXML.ЗаписатьНачалоЭлемента("WebSite");ОбъектXML.ЗаписатьТекст( СокрЛП(выборка.WebSite)  ); // 26.12.2016
		ОбъектXML.ЗаписатьКонецЭлемента();
		
		
	ОбъектXML.ЗаписатьКонецЭлемента(); //company
	КонецЦикла;

	ОбъектXML.ЗаписатьКонецЭлемента(); //companies
	
	ОбъектXML.Закрыть();
	 сообщить("Файл записан!");
	 
КонецПроцедуры

//1.Wholesale
//2.Retail
//4.On-line shop
//8.End customer
функция ЧислоВФлаги(НаправлениеПродаж=0)
 Флажок88 = (Цел(НаправлениеПродаж/8)>=1);
 НаправлениеПродаж1 = НаправлениеПродаж - 8*Цел(НаправлениеПродаж/8);
 	
 Флажок44 = (Цел(НаправлениеПродаж1/4)>=1);
 НаправлениеПродаж1 = НаправлениеПродаж1 - 4*Цел(НаправлениеПродаж1/4);
 
 Флажок22 = (Цел(НаправлениеПродаж1/2)>=1);
 НаправлениеПродаж1 = НаправлениеПродаж1 - 2*Цел(НаправлениеПродаж1/2);
 
 Флажок11 = (НаправлениеПродаж1=1);
 
 текст1 = "";
 текст1 = ?(Флажок11, "1.Wholesale;","")   +?(Флажок22, "2.Retail;","")
   		 +?(Флажок44, "4.On-line shop;","")+?(Флажок88, "8.End customer;","");
		 
 возврат текст1;
КонецФункции



Процедура Пуск() Экспорт
	Флажок1 = ложь;
	Флажок2 = ложь;
	КнопкаВыполнитьНажатие(неопределено);
КонецПроцедуры


Процедура лВыгрузитьПрайсЯрославль(толькоФил=истина, толькоОст=истина)
	ВнешОбр = справочники.ВнешниеОбработки.НайтиПоКоду(171);
	
	ИмяФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные = ВнешОбр.ХранилищеВнешнейОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяФайла); //каждый раз заново!
	сообщить("для обработки № 171 - записан файл "+ИмяФайла);
	
	Форма = ВнешниеОбработки.ПолучитьФорму(ИмяФайла);
	Форма.USD = истина; // только USD цены
	Форма.ДействияФормыВыгрузитьВExcel(неопределено, путь0); 
	
	Форма.НеВыгружатьНаFTP = НеВыгружатьНаFTP; //02.11.2017
	
	Форма.USD = ЛОЖЬ;   // руб. цены - 4 закладки, выгрузка на сайт, + Остатки (для менеджеров)
	Форма.ДействияФормыВыгрузитьВExcel(неопределено, путь0); 
КонецПроцедуры	

Процедура лВыгрузитьПрайсФилиалов(толькоФил=истина, толькоОст=истина) 
	ВнешОбр = справочники.ВнешниеОбработки.НайтиПоКоду(210);
	
	ИмяФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные = ВнешОбр.ХранилищеВнешнейОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяФайла);
	сообщить("для обработки № 210 - записан файл "+ИмяФайла);
		
	Форма = ВнешниеОбработки.ПолучитьФорму(ИмяФайла);
	
	Форма.НеВыгружатьНаFTP = НеВыгружатьНаFTP; //02.11.2017

	Форма.ДействияФормыВыгрузитьВExcel(неопределено,путь0, минНомФил); //, толькоФил, толькоОст);	
КонецПроцедуры	

Процедура ОсновныеДействияФормыРобот(Кнопка)
	колЧас = 8;
	ВвестиЧисло( колЧас, "Число часов");
	Интервал = 3600 * колЧас; // 8 - 16 - 24 (2 раза в сутки)
	ПодключитьОбработчикОжидания("Пуск",Интервал);
	
	элементыФормы.ОсновныеДействияФормы.Кнопки.Робот.Текст = "Робот ("+строка(колЧас)+"ч.)";
КонецПроцедуры

Процедура ПриОткрытии()
	
Время0 = ТекущаяДата();
дата0 = формат(Год(ТекущаяДата()),"ЧГ=0")+"\"+формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+формат(ТекущаяДата(),"ДФ=MMMM")+"\";
врФТП = неопределено;
путь0 = "\\terminal\обмен\Гостева Алёна\";
путь1 = путь0+дата0;  // где формировать
путь2 = "\\terminal\Общая\Остатки\"+дата0;        // куда переносить: с 16.08.2018 Обмен>>Общая

путь3 = "\\terminal\Обмен\ЕГОР МАЛЫШЕВ\Остатки Excel\Все диски\"+формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=")+"."+формат(ТекущаяДата(),"ДФ=MMMM")+"\"; //10.09 - 03.11.2018

МинНомФил = 1;
КонецПроцедуры

Процедура ПолеВвода1ПриИзменении(Элемент)
	
	Если ПолеВвода1>ТекущаяДата() тогда
		ОтключитьОбработчикОжидания("Пуск");
		
		Интервал = (ПолеВвода1 - ТекущаяДата()); // 8 - 16 - 24 (2 раза в сутки)
		ПодключитьОбработчикОжидания("Пуск",Интервал);
		колЧас = Окр(Интервал/3600,1);
		элементыФормы.ОсновныеДействияФормы.Кнопки.Робот.Текст = "Робот ("+строка(колЧас)+"ч.)";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолеВвода1Регулирование(Элемент, Направление, СтандартнаяОбработка)
	ПолеВвода1ПриИзменении(Элемент);
КонецПроцедуры
