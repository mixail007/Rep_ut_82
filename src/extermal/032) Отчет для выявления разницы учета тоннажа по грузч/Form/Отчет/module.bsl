
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
КонецПроцедуры

Процедура ПриЗакрытии()
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	А.Док,
	|	А.Регистратор,
	|	А.ВесСУчетомКоэффициентов,
	|	А.ВЕС,
	|	А.ВесСУчетомКоэффициентов - А.ВЕС КАК Разница
	|ИЗ
	|	(ВЫБРАТЬ
	|		МгнДанные.Док КАК Док,
	|		ДанныеРегистра.Регистратор КАК Регистратор,
	|		МгнДанные.ВесВТоннах КАК ВесВТоннах,
	|		ЕСТЬNULL(МгнДанные.ВесСУчетомКоэффициентов, 0) КАК ВесСУчетомКоэффициентов,
	|		ЕСТЬNULL(ДанныеРегистра.ВЕС, 0) КАК ВЕС
	|	ИЗ
	|		(ВЫБРАТЬ
	|			А.Док КАК Док,
	|			СУММА(А.ВесВТоннах) КАК ВесВТоннах,
	|			СУММА(А.ВесСУчетомКоэффициентов) КАК ВесСУчетомКоэффициентов
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ЗАПРОС.Док КАК Док,
	|				ЗАПРОС.Номенклатура КАК Номенклатура,
	|				СУММА(ЗАПРОС.Количество) КАК Количество,
	|				СУММА(ЗАПРОС.Нетто) / 1000 КАК ВесВТоннах,
	|				СУММА(ЗАПРОС.Брутто) КАК ВесСУчетомКоэффициентов,
	|				СУММА(ЗАПРОС.ФОТ) КАК ФОТ
	|			ИЗ
	|				(ВЫБРАТЬ
	|					А.Док КАК Док,
	|					НАЧАЛОПЕРИОДА(А.Док.Дата, ДЕНЬ) КАК ДатаДок,
	|					ВЫБОР
	|						КОГДА А.Номенклатура В ИЕРАРХИИ (&ЛегковыеЗимние)
	|								ИЛИ А.Номенклатура В ИЕРАРХИИ (&ЛегковыеЛетние)
	|								ИЛИ А.Номенклатура В ИЕРАРХИИ (&ШипованыеЛегковые)
	|								ИЛИ А.Номенклатура В ИЕРАРХИИ (&Укомплектованные)
	|							ТОГДА ""Легковые""
	|						КОГДА А.Номенклатура В ИЕРАРХИИ (&Грузовые)
	|							ТОГДА ""Грузовые""
	|						КОГДА А.Номенклатура В ИЕРАРХИИ (&СпецТехника)
	|							ТОГДА ""Спецтехника""
	|						КОГДА А.Номенклатура В ИЕРАРХИИ (&Сельхозшина)
	|							ТОГДА ""Сельхозшины""
	|						КОГДА А.Номенклатура В ИЕРАРХИИ (&Легкогрузовые)
	|								ИЛИ А.Номенклатура В ИЕРАРХИИ (&ШипованыеЛегкоГрузовые)
	|							ТОГДА ""Легкогрузовые""
	|						КОГДА А.Номенклатура.ВидТовара = &Диски
	|							ТОГДА ""Диски""
	|						ИНАЧЕ ""Камеры, ободные ленты, шипы""
	|					КОНЕЦ КАК ТипШин,
	|					А.Номенклатура КАК Номенклатура,
	|					А.Количество КАК Количество,
	|					А.Нетто КАК Нетто,
	|					А.Брутто КАК Брутто,
	|					0.055 * А.Брутто КАК ФОТ
	|				ИЗ
	|					(ВЫБРАТЬ
	|						ТабЧастьДокумента.Номенклатура КАК Номенклатура,
	|						ТабЧастьДокумента.Ссылка КАК Док,
	|						ТабЧастьДокумента.Количество КАК Количество,
	|						ЕСТЬNULL(НЗ.Вес, 0) * ТабЧастьДокумента.Количество / ВЫБОР
	|							КОГДА ЕСТЬNULL(НЗ.КоэффициентКоличества, 0) = 0
	|								ТОГДА 1
	|							ИНАЧЕ НЗ.КоэффициентКоличества
	|						КОНЕЦ КАК Нетто,
	|						ЕСТЬNULL(НЗ.Вес, 0) * ТабЧастьДокумента.Количество / ВЫБОР
	|							КОГДА ЕСТЬNULL(НЗ.КоэффициентКоличества, 0) = 0
	|								ТОГДА 1
	|							ИНАЧЕ НЗ.КоэффициентКоличества
	|						КОНЕЦ * ВЫБОР
	|							КОГДА ТабЧастьДокумента.Номенклатура.Импорт
	|								ТОГДА НЗ.КоэффициентИмпорта
	|							ИНАЧЕ 1
	|						КОНЕЦ * ВЫБОР
	|							КОГДА ТабЧастьДокумента.Ссылка.ОтгрузкаВагона
	|								ТОГДА &КоэффициентВагона
	|							ИНАЧЕ 1
	|						КОНЕЦ * ВЫБОР
	|							КОГДА ТабЧастьДокумента.Номенклатура.ВидТовара = &Диски
	|								ТОГДА 4
	|							ИНАЧЕ 1
	|						КОНЕЦ * ВЫБОР
	|							КОГДА ТабЧастьДокумента.Ссылка ССЫЛКА Документ.Перекатка
	|								ТОГДА &КоэффициентПерекатки
	|							ИНАЧЕ 1
	|						КОНЕЦ КАК Брутто
	|					ИЗ
	|						(ВЫБРАТЬ
	|							РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|							СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	|							РеализацияТоваровУслугТовары.Ссылка КАК Ссылка
	|						ИЗ
	|							Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|						ГДЕ
	|							РеализацияТоваровУслугТовары.Ссылка.Проведен
	|							И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|							И РеализацияТоваровУслугТовары.Ссылка.Склад <> &СкладТранзит
	|						
	|						СГРУППИРОВАТЬ ПО
	|							РеализацияТоваровУслугТовары.Ссылка,
	|							РеализацияТоваровУслугТовары.Номенклатура
	|						
	|						ОБЪЕДИНИТЬ ВСЕ
	|						
	|						ВЫБРАТЬ
	|							ПеремещениеТоваровТовары.Номенклатура,
	|							&КоэффициентПеремещения * СУММА(ПеремещениеТоваровТовары.Количество),
	|							ПеремещениеТоваровТовары.Ссылка
	|						ИЗ
	|							Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|						ГДЕ
	|							ПеремещениеТоваровТовары.Ссылка.Проведен
	|							И ПеремещениеТоваровТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|						
	|						СГРУППИРОВАТЬ ПО
	|							ПеремещениеТоваровТовары.Ссылка,
	|							ПеремещениеТоваровТовары.Номенклатура
	|						
	|						ОБЪЕДИНИТЬ ВСЕ
	|						
	|						ВЫБРАТЬ
	|							ПоступлениеТоваровУслугТовары.Номенклатура,
	|							СУММА(ПоступлениеТоваровУслугТовары.Количество),
	|							ПоступлениеТоваровУслугТовары.Ссылка
	|						ИЗ
	|							Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|						ГДЕ
	|							ПоступлениеТоваровУслугТовары.Ссылка.Проведен
	|							И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|							И ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер <> &СкладТранзит
	|						
	|						СГРУППИРОВАТЬ ПО
	|							ПоступлениеТоваровУслугТовары.Ссылка,
	|							ПоступлениеТоваровУслугТовары.Номенклатура
	|						
	|						ОБЪЕДИНИТЬ ВСЕ
	|						
	|						ВЫБРАТЬ
	|							Перекатка.Номенклатура,
	|							СУММА(Перекатка.Количество),
	|							Перекатка.Ссылка
	|						ИЗ
	|							Документ.Перекатка.Товары КАК Перекатка
	|						ГДЕ
	|							Перекатка.Ссылка.Проведен
	|							И Перекатка.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|						
	|						СГРУППИРОВАТЬ ПО
	|							Перекатка.Ссылка,
	|							Перекатка.Номенклатура
	|						
	|						ОБЪЕДИНИТЬ ВСЕ
	|						
	|						ВЫБРАТЬ
	|							ВозвратТоваровОтПокупателя.Номенклатура,
	|							СУММА(ВозвратТоваровОтПокупателя.Количество),
	|							ВозвратТоваровОтПокупателя.Ссылка
	|						ИЗ
	|							Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателя
	|						ГДЕ
	|							ВозвратТоваровОтПокупателя.Ссылка.Проведен
	|							И ВозвратТоваровОтПокупателя.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|						
	|						СГРУППИРОВАТЬ ПО
	|							ВозвратТоваровОтПокупателя.Ссылка,
	|							ВозвратТоваровОтПокупателя.Номенклатура
	|						
	|						ОБЪЕДИНИТЬ ВСЕ
	|						
	|						ВЫБРАТЬ
	|							ВозвратТоваровПоставщику.Номенклатура,
	|							СУММА(ВозвратТоваровПоставщику.Количество),
	|							ВозвратТоваровПоставщику.Ссылка
	|						ИЗ
	|							Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщику
	|						ГДЕ
	|							ВозвратТоваровПоставщику.Ссылка.Проведен
	|							И ВозвратТоваровПоставщику.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|						
	|						СГРУППИРОВАТЬ ПО
	|							ВозвратТоваровПоставщику.Ссылка,
	|							ВозвратТоваровПоставщику.Номенклатура) КАК ТабЧастьДокумента
	|							ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыЗагрузки КАК НЗ
	|							ПО ТабЧастьДокумента.Номенклатура.Типоразмер = НЗ.Типоразмер
	|								И ТабЧастьДокумента.Номенклатура.ВидТовара = НЗ.ВидПродукции) КАК А
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ДанныеПоГрузчикам.Регистратор КАК Регистратор
	|						ИЗ
	|							РегистрНакопления.ДанныеПоГрузчикам КАК ДанныеПоГрузчикам) КАК ДанныеПоГрузчикам
	|						ПО А.Док = ДанныеПоГрузчикам.Регистратор
	|				ГДЕ
	|					А.Брутто > 0) КАК ЗАПРОС
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ЗАПРОС.Док,
	|				ЗАПРОС.Номенклатура) КАК А
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыЗагрузки КАК НЗ
	|				ПО А.Номенклатура.Типоразмер = НЗ.Типоразмер
	|					И А.Номенклатура.ВидТовара = НЗ.ВидПродукции
	|		
	|		СГРУППИРОВАТЬ ПО
	|			А.Док) КАК МгнДанные
	|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ДанныеРегистра.Регистратор КАК Регистратор,
	|				ДанныеРегистра.ВЕС КАК ВЕС
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ДанныеПоГрузчикам.Регистратор КАК Регистратор,
	|					СУММА(ДанныеПоГрузчикам.Вес) КАК ВЕС
	|				ИЗ
	|					РегистрНакопления.ДанныеПоГрузчикам КАК ДанныеПоГрузчикам
	|				ГДЕ
	|					ДанныеПоГрузчикам.Регистратор.Дата < &КонДата
	|					И ДанныеПоГрузчикам.Регистратор.Дата > &НачДата
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ДанныеПоГрузчикам.Регистратор) КАК ДанныеРегистра) КАК ДанныеРегистра
	|			ПО МгнДанные.Док = ДанныеРегистра.Регистратор) КАК А
	|ГДЕ
	|	А.ВесСУчетомКоэффициентов - А.ВЕС <> 0";

	Запрос.УстановитьПараметр("НачДата",НачалоДня(НачДата));
	 Запрос.УстановитьПараметр("КонДата",КонецДня(КонДата));
//	 Запрос.УстановитьПараметр("ВидРасценки",Перечисления.ВидыРасценок.РасценкаГрузчика);
	 Запрос.УстановитьПараметр("Диски",Перечисления.ВидыТоваров.Диски);
	 Запрос.УстановитьПараметр("КоэффициентВагона",Константы.КоэффициентВагона.Получить());
	 Запрос.УстановитьПараметр("КоэффициентПеремещения",Константы.КоэффициентПеремещения.Получить());
	 Запрос.УстановитьПараметр("КоэффициентПерекатки",Константы.КоэффициентПерекатки.Получить());
	 
	Запрос.УстановитьПараметр("ЛегковыеЗимние",Справочники.Номенклатура.НайтиПоКоду("60103"));
	Запрос.УстановитьПараметр("ЛегковыеЛетние",Справочники.Номенклатура.НайтиПоКоду("60101"));
	Запрос.УстановитьПараметр("ШипованыеЛегковые",Справочники.Номенклатура.НайтиПоКоду("91447"));
	Запрос.УстановитьПараметр("Грузовые",Справочники.Номенклатура.НайтиПоКоду("01748"));
	Запрос.УстановитьПараметр("СпецТехника",Справочники.Номенклатура.НайтиПоКоду("80632"));
	Запрос.УстановитьПараметр("Сельхозшина",Справочники.Номенклатура.НайтиПоКоду("01750"));
	Запрос.УстановитьПараметр("Легкогрузовые",Справочники.Номенклатура.НайтиПоКоду("60106"));
	Запрос.УстановитьПараметр("ШипованыеЛегкоГрузовые",Справочники.Номенклатура.НайтиПоКоду("91448"));
	Запрос.УстановитьПараметр("Укомплектованные",Справочники.Номенклатура.НайтиПоКоду("01222"));
	Запрос.УстановитьПараметр("СкладТранзит",Справочники.Склады.НайтиПоКоду("00144"));

	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	НачДата = НастройкаПериода.ПолучитьДатуНачала();
	КонДата = НастройкаПериода.ПолучитьДатуОкончания();
КонецПроцедуры




