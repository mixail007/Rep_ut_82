Перем Контрагент;
Перем Менеджер;

Процедура КоманднаяПанель1Сформировать(Кнопка)
	
	Руководитель = Ложь;
	БезНаправления = Истина;
	Если глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Серков")
		ИЛИ глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Федорова") Тогда
		Руководитель = Истина;
		Направление = Справочники.НаправленияПродаж.НайтиПоКоду("26");
	ИначеЕсли глТекущийПользователь =  Справочники.Пользователи.НайтиПоКоду("Бондаренко Е.Д. (снабжение)") тогда
		Руководитель = Истина;
		Направление = Справочники.НаправленияПродаж.НайтиПоКоду("21");
	ИначеЕсли глТекущийПользователь =  Справочники.Пользователи.НайтиПоКоду("Филатова С.В.") тогда
		Руководитель = Истина;
		Направление = Справочники.НаправленияПродаж.НайтиПоКоду("20");
	ИначеЕсли глТекущийПользователь =  Справочники.Пользователи.НайтиПоКоду("Марешева И.Г.") тогда
		Руководитель = Истина;
		Направление = Справочники.НаправленияПродаж.НайтиПоКоду("22");
	ИначеЕсли глТекущийПользователь =  Справочники.Пользователи.НайтиПоКоду("Лигута А.С.(руководитель)") тогда
		Руководитель = Истина;
		Направление = Справочники.НаправленияПродаж.НайтиПоКоду("4");
	ИначеЕсли глТекущийПользователь =  Справочники.Пользователи.НайтиПоКоду("Лигута А.С.") тогда
		Руководитель = Истина;
		Направление = Справочники.НаправленияПродаж.НайтиПоКоду("4");
	ИначеЕсли глТекущийПользователь =  Справочники.Пользователи.НайтиПоКоду("Красюк Н.В.(руководитель)") тогда
		Руководитель = Истина;
		Направление = Справочники.НаправленияПродаж.НайтиПоКоду("5");
	ИначеЕсли глТекущийПользователь =  Справочники.Пользователи.НайтиПоКоду("Красюк Н.В.") Тогда
		Руководитель = Истина;
		Направление = Справочники.НаправленияПродаж.НайтиПоКоду("5");
	Иначе
		БезНаправления = Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если Дата < Дата('20180101000000') Тогда
		Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Объект,
	               |	ЗначенияСвойствОбъектов.Значение
	               |ПОМЕСТИТЬ Важность
	               |ИЗ
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство.Код = ""90184""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента.НаправлениеПродаж КАК НаправлениеПродаж,
				   |	"+?(Руководитель = Истина, "ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента", ?(БезНаправления = Истина, "ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо", "ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента"))+" КАК Менеджер,
	               |	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	               |	КИ.Регион,
	               |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СуммаПродаж,
	               |	ЕСТЬNULL(Важность.Значение, 0) КАК Важность,
	               |	МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПодаркиКлиентамСрезПоследних.Сертификат ПОДОБНО ""%#СертификатШины%""
	               |					ТОГДА 1
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0)) КАК СертификатШины,
	               |	МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПодаркиКлиентамСрезПоследних.Сертификат ПОДОБНО ""%#СертификатДиски%""
	               |					ТОГДА 1
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0)) КАК СертификатДиски,
	               |	МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПодаркиКлиентамСрезПоследних.Сертификат ПОДОБНО ""%#СертификатАКС%""
	               |					ТОГДА 1
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0)) КАК СертификатАКС,
	               |	МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПодаркиКлиентамСрезПоследних.VIPСертификат ПОДОБНО ""%#СертификатШиныVIP%""
	               |					ТОГДА 1
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0)) КАК СертификатШиныVIP,
	               |	МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПодаркиКлиентамСрезПоследних.VIPСертификат ПОДОБНО ""%#СертификатДискиVIP%""
	               |					ТОГДА 1
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0)) КАК СертификатДискиVIP,
	               |	МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	               |				КОГДА ПодаркиКлиентамСрезПоследних.VIPСертификат ПОДОБНО ""%#СертификатАКСVIP%""
	               |					ТОГДА 1
	               |				ИНАЧЕ 0
	               |			КОНЕЦ, 0)) КАК СертификатАКСVIP,
				   |	МАКСИМУМ(ПодаркиКлиентамСрезПоследних.БрендыСертификатаДиски) КАК БрендыСертификатаДиски,
	               |	МАКСИМУМ(ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок1, 0)) КАК Подарок1,
	               |	МАКСИМУМ(ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок2, 0)) КАК Подарок2,
	               |	МАКСИМУМ(ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок3, 0)) КАК Подарок3,
	               |	МАКСИМУМ(ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок4, 0)) КАК Подарок4,
	               |	МАКСИМУМ(ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок5, 0)) КАК Подарок5,
	               |	МАКСИМУМ(ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок6, 0)) КАК Подарок6,
	               |	МАКСИМУМ(ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок1, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок2, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок3, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок4, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок5, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок6, 0)) КАК Поле4,
	               |	МАКСИМУМ(ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.МесяцВручения, ДАТАВРЕМЯ(1, 1, 1))) КАК МесяцВручения
				   //|	"""" КАК Поле3
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, , 
				   |	" +	?(Руководитель = Истина, " ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента.НаправлениеПродаж В ИЕРАРХИИ(&НаправлениеПродаж)", " ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента = &ОсновнойМенеджерКонтрагента") + "
				   |) КАК ПродажиОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Важность КАК Важность
	               |		ПО ПродажиОбороты.ДоговорКонтрагента.Владелец = Важность.Объект
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЮрКИ.Объект КАК Объект,
	               |			ВЫБОР
	               |				КОГДА ПОДСТРОКА(ЮрКИ.Регион, 1, 1) = """"
	               |					ТОГДА ФактКИ.Поле2
	               |				ИНАЧЕ ЮрКИ.Регион
	               |			КОНЕЦ КАК Регион
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				КонтактнаяИнформация.Объект КАК Объект,
	               |				КонтактнаяИнформация.Поле2 КАК Регион
	               |			ИЗ
	               |				РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |			ГДЕ
	               |				КонтактнаяИнформация.Вид.Код = ""00001"") КАК ЮрКИ
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФактКИ
	               |				ПО ЮрКИ.Объект = ФактКИ.Объект
	               |					И (ФактКИ.Вид.Код = ""00002"")) КАК КИ
	               |		ПО ПродажиОбороты.ДоговорКонтрагента.Владелец = КИ.Объект
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодаркиКлиентам.СрезПоследних(&КонецПериода, ) КАК ПодаркиКлиентамСрезПоследних
	               |		ПО ПродажиОбороты.ДоговорКонтрагента.Владелец = ПодаркиКлиентамСрезПоследних.Контрагент
				   |			И (ПодаркиКлиентамСрезПоследних.Период МЕЖДУ &НачалоПериода И &КонецПериода)
	               |ГДЕ
				   |	1 = 1
				   |	" + ?(Важность > 0 , "УсловиеВажности", "") + "
                   |    " + ?(Итого > 0 , " И ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок1, 0) + ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок2, 0) + ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок3, 0)+
				   |	ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок4, 0) + ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок5, 0) + ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок6, 0) > &Итого", "") + "
	               |СГРУППИРОВАТЬ ПО
	               |	ПродажиОбороты.ДоговорКонтрагента.Владелец,
	               |	ЕСТЬNULL(Важность.Значение, 0),
	               |	КИ.Регион,
	               |	ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента.НаправлениеПродаж,
	               |	ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НаправлениеПродаж,
	               |	Менеджер,
	               |	Контрагент
				   |АВТОУПОРЯДОЧИВАНИЕ
				   |ИТОГИ
				   |	СУММА(СуммаПродаж),
				   |	СУММА(СертификатШины),
				   |	СУММА(СертификатДиски),
				   |	СУММА(СертификатАКС),
				   |	СУММА(СертификатШиныVIP),
				   |	СУММА(СертификатДискиVIP),
				   |	СУММА(СертификатАКСVIP),
				   |	СУММА(Подарок1),
				   |	СУММА(Подарок2),
				   |	СУММА(Подарок3),
				   |	СУММА(Подарок4),
				   |	СУММА(Подарок5),
				   |	СУММА(Подарок6)
				   |	ПО
				   |	НаправлениеПродаж,
				   |	Менеджер
				   |";
			   Иначе
				   
		Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Объект,
	               |	ЗначенияСвойствОбъектов.Значение
	               |ПОМЕСТИТЬ Важность
	               |ИЗ
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство.Код = ""90184""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента.НаправлениеПродаж КАК НаправлениеПродаж,
				   |	"+?(Руководитель = Истина, "ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента", ?(БезНаправления = Истина, "ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо", "ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента"))+" КАК Менеджер,
	               |	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	               |	КИ.Регион,
	               |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СуммаПродаж,
	               |	ЕСТЬNULL(Важность.Значение, 0) КАК Важность,
	               |	ПодаркиКлиентамСрезПоследних.СертификатШины КАК СертификатШины,
	               |	ПодаркиКлиентамСрезПоследних.СертификатДиски КАК СертификатДиски,
	               |	ПодаркиКлиентамСрезПоследних.СертификатАксессуары КАК СертификатАКС,
	               |	ПодаркиКлиентамСрезПоследних.СертификатШиныVIP КАК СертификатШиныVIP,
	               |	ПодаркиКлиентамСрезПоследних.СертификатДискиVIP КАК СертификатДискиVIP,
	               |	ПодаркиКлиентамСрезПоследних.СертификатАксессуарыVIP КАК СертификатАКСVIP,
				   |	ПодаркиКлиентамСрезПоследних.БрендыСертификатаДиски КАК БрендыСертификатаДиски,
	               |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок1, 0) КАК Подарок1,
	               |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок2, 0) КАК Подарок2,
	               |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок3, 0) КАК Подарок3,
	               |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок4, 0) КАК Подарок4,
	               |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок5, 0) КАК Подарок5,
	               |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок6, 0) КАК Подарок6,
	               |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок1, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок2, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок3, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок4, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок5, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок6, 0) КАК Поле4,
	               |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.МесяцВручения, ДАТАВРЕМЯ(1, 1, 1)) КАК МесяцВручения
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, , 
				   |	" +	?(Руководитель = Истина, " ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента.НаправлениеПродаж В ИЕРАРХИИ(&НаправлениеПродаж)", " ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента = &ОсновнойМенеджерКонтрагента") + "
				   |) КАК ПродажиОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Важность КАК Важность
	               |		ПО ПродажиОбороты.ДоговорКонтрагента.Владелец = Важность.Объект
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЮрКИ.Объект КАК Объект,
	               |			ВЫБОР
	               |				КОГДА ПОДСТРОКА(ЮрКИ.Регион, 1, 1) = """"
	               |					ТОГДА ФактКИ.Поле2
	               |				ИНАЧЕ ЮрКИ.Регион
	               |			КОНЕЦ КАК Регион
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				КонтактнаяИнформация.Объект КАК Объект,
	               |				КонтактнаяИнформация.Поле2 КАК Регион
	               |			ИЗ
	               |				РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |			ГДЕ
	               |				КонтактнаяИнформация.Вид.Код = ""00001"") КАК ЮрКИ
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФактКИ
	               |				ПО ЮрКИ.Объект = ФактКИ.Объект
	               |					И (ФактКИ.Вид.Код = ""00002"")) КАК КИ
	               |		ПО ПродажиОбороты.ДоговорКонтрагента.Владелец = КИ.Объект
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодаркиКлиентам.СрезПоследних(&КонецПериода, ) КАК ПодаркиКлиентамСрезПоследних
	               |		ПО ПродажиОбороты.ДоговорКонтрагента.Владелец = ПодаркиКлиентамСрезПоследних.Контрагент
				   |			И (ПодаркиКлиентамСрезПоследних.Период МЕЖДУ &НачалоПериода И &КонецПериода)
	               |ГДЕ
				   |	1 = 1
				   |	" + ?(Важность > 0 , "УсловиеВажности", "") + "
                   |    " + ?(Итого > 0 , " И ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок1, 0) + ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок2, 0) + ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок3, 0)+
				   |	ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок4, 0) + ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок5, 0) + ЕстьNull(ПодаркиКлиентамСрезПоследних.Подарок6, 0) > &Итого", "") + "
				   |СГРУППИРОВАТЬ ПО
				   |	ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента.НаправлениеПродаж,
				   |	ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента,
				   |	ПродажиОбороты.ДоговорКонтрагента.Владелец,
				   |	КИ.Регион,
				   |	ПодаркиКлиентамСрезПоследних.СертификатШины,
				   |	ПодаркиКлиентамСрезПоследних.СертификатДиски,
				   |	ПодаркиКлиентамСрезПоследних.СертификатАксессуары,
				   |	ПодаркиКлиентамСрезПоследних.СертификатШиныVIP,
				   |	ПодаркиКлиентамСрезПоследних.СертификатДискиVIP,
				   |	ПодаркиКлиентамСрезПоследних.СертификатАксессуарыVIP,
				   |	ПодаркиКлиентамСрезПоследних.БрендыСертификатаДиски,
				   |	ЕСТЬNULL(Важность.Значение, 0),
				   |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок1, 0),
				   |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок2, 0),
				   |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок3, 0),
				   |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок4, 0),
				   |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок5, 0),
				   |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок6, 0),
				   |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок1, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок2, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок3, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок4, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок5, 0) + ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.Подарок6, 0),
				   |	ЕСТЬNULL(ПодаркиКлиентамСрезПоследних.МесяцВручения, ДАТАВРЕМЯ(1, 1, 1))
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НаправлениеПродаж,
	               |	Менеджер,
	               |	Контрагент
				   |АВТОУПОРЯДОЧИВАНИЕ
				   |ИТОГИ
				   |	СУММА(СуммаПродаж),
				   |	СУММА(СертификатШины),
				   |	СУММА(СертификатДиски),
				   |	СУММА(СертификатАКС),
				   |	СУММА(СертификатШиныVIP),
				   |	СУММА(СертификатДискиVIP),
				   |	СУММА(СертификатАКСVIP),
				   |	СУММА(Подарок1),
				   |	СУММА(Подарок2),
				   |	СУММА(Подарок3),
				   |	СУММА(Подарок4),
				   |	СУММА(Подарок5),
				   |	СУММА(Подарок6)
				   |	ПО
				   |	НаправлениеПродаж,
				   |	Менеджер
				   |";
				   
			   КонецЕсли;
	запрос.УстановитьПараметр("НачалоПериода", НачалоГода(Дата));
	запрос.УстановитьПараметр("КонецПериода", КонецГода(Дата));
	запрос.УстановитьПараметр("НаправлениеПродаж", Направление);
	запрос.УстановитьПараметр("ОсновнойМенеджерКонтрагента", глТекущийПользователь);                                      		
	запрос.УстановитьПараметр("Итого", Итого);   
	Если СписокВидСравнения = ВидСравнения.Равно Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УсловиеВажности", " И Важность.Значение = &Важность");
	ИначеЕсли СписокВидСравнения = ВидСравнения.НеРавно Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УсловиеВажности", " И Важность.Значение <> &Важность");
	ИначеЕсли СписокВидСравнения = ВидСравнения.Больше Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УсловиеВажности", " И Важность.Значение > &Важность");
	ИначеЕсли СписокВидСравнения = ВидСравнения.БольшеИлиРавно Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УсловиеВажности", " И Важность.Значение >= &Важность");
	ИначеЕсли СписокВидСравнения = ВидСравнения.Меньше Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УсловиеВажности", " И Важность.Значение < &Важность");
	ИначеЕсли СписокВидСравнения = ВидСравнения.МеньшеИлиРавно Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УсловиеВажности", " И Важность.Значение <= &Важность");
	КонецЕсли;
	запрос.УстановитьПараметр("Важность", Важность);
	
	
	Т = Запрос.Выполнить();
	
	ЭлементыФормы.ТабличноеПоле.Значение  = т.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЭлементыФормы.ТабличноеПоле.СоздатьКолонки();
	//Настроим ширину колонок табличного поля
	
	Для Каждого Ст из ЭлементыФормы.ТабличноеПоле.Колонки цикл
		ст.Ширина=5;
	КонецЦикла;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.НаправлениеПродаж.Ширина=23; 
	ЭлементыФормы.ТабличноеПоле.Колонки.НаправлениеПродаж.Доступность = Ложь;
	ЭлементыФормы.ТабличноеПоле.Колонки.НаправлениеПродаж.ТолькоПросмотр = Истина;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.Менеджер.Ширина=23;
	ЭлементыФормы.ТабличноеПоле.Колонки.Менеджер.ТолькоПросмотр = Истина;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.Важность.Ширина = 7;
	ЭлементыФормы.ТабличноеПоле.Колонки.Важность.ТолькоПросмотр = Истина;
	ЭлементыФормы.ТабличноеПоле.Колонки.Важность.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
		
	ЭлементыФормы.ТабличноеПоле.Колонки.Контрагент.Ширина=23;
	ЭлементыФормы.ТабличноеПоле.Колонки.Контрагент.ТолькоПросмотр = Истина;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.Регион.ТолькоПросмотр = Истина;
	ЭлементыФормы.ТабличноеПоле.Колонки.Регион.Положение = ПоложениеКолонки.НаСледующейСтроке;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.СуммаПродаж.Ширина=15;
	ЭлементыФормы.ТабличноеПоле.Колонки.СуммаПродаж.ТолькоПросмотр = Истина;
	ЭлементыФормы.ТабличноеПоле.Колонки.СуммаПродаж.ТекстШапки = "Сумма продаж";
		
	
	//ЭлементыФормы.ТабличноеПоле.Колонки.Поле1.ТекстШапки = "Сертификаты";
	//ЭлементыФормы.ТабличноеПоле.Колонки.Поле1.Ширина=25;
	//ЭлементыФормы.ТабличноеПоле.Колонки.Поле1.ТолькоПросмотр = Истина;
	//ЭлементыФормы.ТабличноеПоле.Колонки.Поле2.ТекстШапки = "VIP Сертификаты";
	//ЭлементыФормы.ТабличноеПоле.Колонки.Поле2.Ширина=25;
	//ЭлементыФормы.ТабличноеПоле.Колонки.Поле2.ТолькоПросмотр = Истина;
	//ЭлементыФормы.ТабличноеПоле.Колонки.Поле3.ТекстШапки = "Подарки";
	//ЭлементыФормы.ТабличноеПоле.Колонки.Поле3.Ширина=40;
	//ЭлементыФормы.ТабличноеПоле.Колонки.Поле3.ТолькоПросмотр = Истина;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатШины.ТекстШапки = "Шины";
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатШины.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатШины.Ширина = 7;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатДиски.ТекстШапки = "Диски";
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатДиски.Положение  = ПоложениеКолонки.ВТойЖеКолонке;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатДиски.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатДиски.Ширина = 7;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатАКС.ТекстШапки = "АКС";
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатАКС.Положение  = ПоложениеКолонки.ВТойЖеКолонке;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатАКС.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатАКС.Ширина = 7;
		
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатШиныVIP.ТекстШапки = "Шины VIP";
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатШиныVIP.Положение = ПоложениеКолонки.НаСледующейСтроке;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатШиныVIP.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатШиныVIP.Ширина = 7;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатДискиVIP.ТекстШапки = "Диски VIP";
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатДискиVIP.Положение  = ПоложениеКолонки.ВТойЖеКолонке;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатДискиVIP.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатДискиVIP.Ширина = 7;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатАКСVIP.ТекстШапки = "АКС VIP";
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатАКСVIP.Положение  = ПоложениеКолонки.ВТойЖеКолонке;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатАКСVIP.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.СертификатАКСVIP.Ширина = 7;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.БрендыСертификатаДиски.ТекстШапки = "Бренды Диски";
	ЭлементыФормы.ТабличноеПоле.Колонки.БрендыСертификатаДиски.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Лево;
	ЭлементыФормы.ТабличноеПоле.Колонки.БрендыСертификатаДиски.Ширина = 50;
		
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок1.ТекстШапки = "Ежедневник";
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок1.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок1.Доступность = Ложь;	
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок1.Ширина=7;
	
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок2.ТекстШапки = "Календарь настенный";
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок2.Положение  = ПоложениеКолонки.ВТойЖеКолонке;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок2.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок2.Ширина=7;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок2.Доступность = Ложь;	
	
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок3.ТекстШапки = "Календарь настольный";
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок3.Положение  = ПоложениеКолонки.ВТойЖеКолонке;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок3.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок3.Ширина=7;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок3.Доступность = Ложь;	
	
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок4.ТекстШапки = "Набор подарочный";
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок4.Положение  = ПоложениеКолонки.ВТойЖеКолонке;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок4.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок4.Ширина=7;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок4.Доступность = Ложь;	
	
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок5.Видимость = Ложь;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок5.Положение  = ПоложениеКолонки.ВТойЖеКолонке;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок5.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок5.Ширина=7;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок5.Доступность = Ложь;	
	
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок6.Видимость = Ложь;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок6.Положение  = ПоложениеКолонки.ВТойЖеКолонке;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок6.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок6.Ширина=7;
	ЭлементыФормы.ТабличноеПоле.Колонки.Подарок6.Доступность = Ложь;	
	
	ЭлементыФормы.ТабличноеПоле.Колонки.Поле4.ТекстШапки = "Итог";
	ЭлементыФормы.ТабличноеПоле.Колонки.Поле4.Ширина=7;
	ЭлементыФормы.ТабличноеПоле.Колонки.Поле4.ТолькоПросмотр = Истина;
	ЭлементыФормы.ТабличноеПоле.Колонки.Поле4.Доступность = Ложь;	
	
	ЭлементыФормы.ТабличноеПоле.Колонки.МесяцВручения.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
	ЭлементыФормы.ТабличноеПоле.Колонки.МесяцВручения.Ширина=10;
	ЭлементыФормы.ТабличноеПоле.Колонки.МесяцВручения.ТекстШапки = "Дата вручения";
	ЭлементыФормы.ТабличноеПоле.ВертикальныеЛинии = Истина;
	ЭлементыФормы.ТабличноеПоле.ГоризонтальныеЛинии = Истина;
	
	Если глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Серков") тогда
		Рез = т.Выгрузить();
		//Для Каждого Стр из Рез Цикл
		//	Попытка
		//		Контрагент = Стр.Контрагент;
		//		Менеджер = Стр.Менеджер;
		//		Если Стр.СертификатШины 	= 1 Тогда 
		//			ЗаписатьРегистр("СертификатШины",  "#СертификатШины" ,   Истина);
		//		КонецЕсли;
		//		Если Стр.СертификатДиски 	= 1 Тогда
		//			ЗаписатьРегистр("СертификатДиски", "#СертификатДиски" ,  Истина);
		//		КонецЕсли;
		//		Если Стр.СертификатАКБ 	= 1 Тогда
		//			ЗаписатьРегистр("СертификатАКБ",   "#СертификатАКБ" ,    Истина);
		//		КонецЕсли;
		//		Если Стр.СертификатАКС 	= 1 Тогда
		//			ЗаписатьРегистр("СертификатАКС",   "#СертификатАКС" ,    Истина);
		//		КонецЕсли;
		//	Исключение
		//	КонецПопытки;
		//КонецЦикла;
	КонецЕсли;
	
	Если Дата < Дата('20180101000000') Тогда
		ЭлементыФормы.ТабличноеПоле.ТолькоПросмотр = Истина;
	Иначе
		ЭлементыФормы.ТабличноеПоле.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Дата = ТекущаяДата();
	
	ЭлементыФормы.ПолеВидСравнения.СписокВыбора = СписокВидСравнения;
	
КонецПроцедуры

Процедура ЗаписатьРегистр(ТекДанные)
	
	Если ЗначениеЗаполнено(ТекДанные.Менеджер) Тогда
		
		Рег = РегистрыСведений.ПодаркиКлиентам.СоздатьНаборЗаписей();
		Рег.Записывать = Истина;
		Рег.Отбор.Контрагент.Установить(ТекДанные.Контрагент);
		Рег.Отбор.Менеджер.Установить(ТекДанные.Менеджер);
		Рег.Отбор.Период.Установить(НачалоГода(Дата));
		Рег.Прочитать();
		Если рег.Количество() = 0 Тогда
			Рг  = РегистрыСведений.ПодаркиКлиентам.СоздатьМенеджерЗаписи();
			ЗаполнитьЗаписьРегистра(Рг, ТекДанные);
			Рг.Записать();
		Иначе
			Для каждого Запись ИЗ Рег Цикл
				ЗаполнитьЗаписьРегистра(Запись, ТекДанные);
				Рег.Записать(Истина);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли; 	
	
КонецПроцедуры

Процедура ЗаполнитьЗаписьРегистра(Рг, ТекДанные)
	
	Рг.Контрагент 			= ТекДанные.Контрагент;
	Рг.Менеджер				= ТекДанные.Менеджер;
	
	Рг.Сертификат = "";
	Рг.VIPСертификат = "";
	
	
	Рг.СертификатАксессуары = ТекДанные.СертификатАКС;
	Рг.СертификатШины = ТекДанные.СертификатШины;
	Рг.СертификатДиски = ТекДанные.СертификатДиски;
	
	Рг.СертификатАксессуарыVIP = ТекДанные.СертификатАКСVIP;
	Рг.СертификатШиныVIP = ТекДанные.СертификатШиныVIP;
	Рг.СертификатДискиVIP = ТекДанные.СертификатДискиVIP;
	
	Рг.МесяцВручения		= ТекДанные.МесяцВручения;
	
	Рг.БрендыСертификатаДиски = ТекДанные.БрендыСертификатаДиски;
	
	Рг.Подарок1			 	= ТекДанные.Подарок1;
	Рг.Подарок2			 	= ТекДанные.Подарок2;
	Рг.Подарок3			 	= ТекДанные.Подарок3;
	Рг.Подарок4			 	= ТекДанные.Подарок4;
	Рг.Подарок5			 	= ТекДанные.Подарок5;
	Рг.Подарок6			 	= ТекДанные.Подарок6;
	
	Рг.Период 				= НачалоГода(Дата);
	
КонецПроцедуры

Функция получитьЗапись(Запись, Пишем, СтрокаРегистра)
	
	Если Пишем тогда
		
		Масс = РазложитьСтрокуВМассивПодстрок(СтрокаРегистра, ";");
		СтЗаписи = Запись+ ";";
		Для Каждого Ст из Масс Цикл;
			Если Ст <> "" тогда
				СтЗаписи = СтЗаписи +Ст+ ";";
			КонецЕсли;;
		КонецЦикла;
	Иначе
		Масс = РазложитьСтрокуВМассивПодстрок(СтрокаРегистра, ";");
		СтЗаписи = "";
		Для Каждого Ст из Масс Цикл;
			Если Ст <> Запись тогда
				Если Ст <> "" тогда
					
					СтЗаписи = СтЗаписи +Ст+ ";";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	Возврат СтЗаписи;
	
КонецФункции

Процедура ПересчитатьИтог(ТекущаяСтрока, Элемент)
	
	ТекущаяСтрока.Поле4 = ТекущаяСтрока.Подарок1 + ТекущаяСтрока.Подарок2+ТекущаяСтрока.Подарок3+ТекущаяСтрока.Подарок4;
	
КонецПроцедуры

Процедура ТабличноеПолеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НЕ ОтменаРедактирования Тогда
		Контрагент = Элемент.ТекущаяСтрока.Контрагент;
		Менеджер = Элемент.ТекущаяСтрока.Менеджер;
		ЗаписатьРегистр(Элемент.ТекущиеДанные);	
		
		ПересчитатьИтог(Элемент.ТекущиеДанные, Элемент);
	КонецЕсли;
	
КонецПроцедуры

СписокВидСравнения = Новый СписокЗначений;
СписокВидСравнения.Добавить(ВидСравнения.Равно);
СписокВидСравнения.Добавить(ВидСравнения.Больше);
СписокВидСравнения.Добавить(ВидСравнения.БольшеИлиРавно);
СписокВидСравнения.Добавить(ВидСравнения.Меньше);
СписокВидСравнения.Добавить(ВидСравнения.МеньшеИлиРавно);
СписокВидСравнения.Добавить(ВидСравнения.НеРавно);


