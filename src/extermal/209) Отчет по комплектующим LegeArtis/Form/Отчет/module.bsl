
Перем ТаблицаКрышки Экспорт;
Перем  ТаблицаСводная Экспорт;

Процедура ДействияФормыОтчетСформировать(Кнопка)
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	ТабДок2=ЭлементыФормы.ПолеТабличногоДокумента2;
	ТабДок3=ЭлементыФормы.ПолеТабличногоДокумента3;
	ТабДок4=ЭлементыФормы.ПолеТабличногоДокумента4;
	
	Отчет(ТабДок,ТабДок2,ТабДок3,ТабДок4);
	
КонецПроцедуры

Процедура Отчет(ТабДок,ТабДок2,ТабДок3,ТабДок4) Экспорт
	
	
	ТабДок.Очистить();
	ТабДок2.Очистить();
	ТабДок3.Очистить();
	ТабДок4.Очистить();
	
	
	
	Запрос =Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст="ВЫБРАТЬ
	|	А.Номенклатура,
	|	А.КоличествоОстаток КАК КоличествоДисковОстаток,
	|	А.Комплектующая,
	|	КрышкиНаСкладахОстатки.КоличествоОстаток КАК КоличествоКрышекОстаток
	|ПОМЕСТИТЬ ВТ_СводнаяТаблица
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|		КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				Номенклатура.Наименование ПОДОБНО ""%LegeArtis%""
	|					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|					И (НЕ Склад.ЗапретитьИспользование)
	|					И (НЕ Склад.Транзитный)) КАК ТоварыНаСкладахОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
	|				КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая
	|			ИЗ
	|				РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	|			ГДЕ
	|				КомплектующиеНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|				И КомплектующиеНоменклатуры.Номенклатура.Наименование ПОДОБНО ""%LegeArtis%""
	|				И КомплектующиеНоменклатуры.Комплектующая.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|				И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Крышки)) КАК КомплектующиеНоменклатуры
	|			ПО ТоварыНаСкладахОстатки.Номенклатура = КомплектующиеНоменклатуры.Номенклатура
	|	ГДЕ
	|		(НЕ КомплектующиеНоменклатуры.Комплектующая ЕСТЬ NULL )) КАК А
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|					И Номенклатура В ИЕРАРХИИ (&Крышки)
	|					И (НЕ Склад.ЗапретитьИспользование)
	|					И (НЕ Склад.Транзитный)) КАК КрышкиНаСкладахОстатки
	|		ПО А.Комплектующая = КрышкиНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	А.Комплектующая,
	|	А.КоличествоКрышекТребуется,
	|	А.КоличествоКрышекОстаток,
	|	А.Коэффициент,
	|	А.СвободныйОстатокКрышек
	|ПОМЕСТИТЬ ВТ_Крышки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_СводнаяТаблица.Комплектующая КАК Комплектующая,
	|		СУММА(ВТ_СводнаяТаблица.КоличествоДисковОстаток) КАК КоличествоКрышекТребуется,
	|		СРЕДНЕЕ(ВТ_СводнаяТаблица.КоличествоКрышекОстаток) КАК КоличествоКрышекОстаток,
	|		ВЫБОР
	|			КОГДА СРЕДНЕЕ(ВТ_СводнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_СводнаяТаблица.КоличествоДисковОстаток) < 0
	|				ТОГДА ВЫРАЗИТЬ(СРЕДНЕЕ(ВТ_СводнаяТаблица.КоличествоКрышекОстаток) / СУММА(ВТ_СводнаяТаблица.КоличествоДисковОстаток) КАК ЧИСЛО(15, 2))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК Коэффициент,
	|		ЕстьNULL(СРЕДНЕЕ(ВТ_СводнаяТаблица.КоличествоКрышекОстаток) - СУММА(ВТ_СводнаяТаблица.КоличествоДисковОстаток),0) КАК СвободныйОстатокКрышек
	|	ИЗ
	|		ВТ_СводнаяТаблица КАК ВТ_СводнаяТаблица
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТ_СводнаяТаблица.Комплектующая) КАК А
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СводнаяТаблица.Номенклатура,
	|	ВТ_СводнаяТаблица.Номенклатура.Код КАК Код,
	|	ВТ_СводнаяТаблица.Комплектующая,
	|	ВТ_СводнаяТаблица.Комплектующая.Код КАК КодКомплектующей,
	|	ВТ_СводнаяТаблица.Комплектующая.КодСБИС КАК КодСБИС,
	|	ВТ_СводнаяТаблица.КоличествоДисковОстаток,
	|	ВЫРАЗИТЬ(ВТ_СводнаяТаблица.КоличествоДисковОстаток * ВТ_Крышки.Коэффициент КАК ЧИСЛО(15, 0)) КАК КоличествоДисковМожноСкомплектовать
	|ИЗ
	|	ВТ_СводнаяТаблица КАК ВТ_СводнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Крышки КАК ВТ_Крышки
	|		ПО ВТ_СводнаяТаблица.Комплектующая = ВТ_Крышки.Комплектующая
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_СводнаяТаблица.Номенклатура.Наименование";
	
	
	Запрос.УстановитьПараметр("Крышки",Справочники.Номенклатура.НайтиПоКоду("0080004"));	
	//Запрос.УстановитьПараметр("",);	
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	Макет = ПолучитьМакет("Отчет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.КонецПериода= Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	
	ТабДок.Вывести(ОбластьЗаголовок);	
	Пока Выборка.Следующий() Цикл
		ОбластьДетали =Макет.ПолучитьОбласть("Детали");	
		ОбластьДетали.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьДетали);	
	КонецЦикла;	
	
	
	// Дефицитные диски 
	
	Выборка.Сбросить();
	
	Макет = ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ШапкаТаблицы");
	//ОбластьЗаголовок.Параметры.КонецПериода= Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	
	ТабДок3.Вывести(ОбластьЗаголовок);	
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоДисковМожноСкомплектовать<Выборка.КоличествоДисковОстаток Тогда
			ОбластьДетали =Макет.ПолучитьОбласть("ДеталиРасшифровкаДиски");	
			ОбластьДетали.Параметры.Заполнить(Выборка);
			ОбластьДетали.Параметры.СвободныйОстаток=Выборка.КоличествоДисковОстаток-Выборка.КоличествоДисковМожноСкомплектовать;
			ТабДок3.Вывести(ОбластьДетали);	
		КонецЕсли;
	КонецЦикла;	
	
	// Крышки	
	
	ЗапросКрышки=Новый Запрос;
	ЗапросКрышки.МенеджерВременныхТаблиц=Запрос.МенеджерВременныхТаблиц;
	ЗапросКрышки.Текст="ВЫБРАТЬ * ИЗ ВТ_Крышки";
	РезультатЗапроса=ЗапросКрышки.Выполнить();
	
	ТаблицаКрышки=РезультатЗапроса.Выгрузить();
	ТаблицаКрышки.Сортировать("СвободныйОстатокКрышек ВОЗР");
	сч=0;
	Макет = ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//ОбластьЗаголовок.Параметры.КонецПериода= Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	ТабДок2.Вывести(ОбластьЗаголовок);
	Для сч=0 По ТаблицаКрышки.Количество()-1 Цикл
		ОбластьДетали =Макет.ПолучитьОбласть("Детали2");	
		ОбластьДетали.Параметры.Заполнить(ТаблицаКрышки[сч]);
		ОбластьДетали.Параметры.Код=ТаблицаКрышки[сч].Комплектующая.Код;
		//ОбластьДетали.Параметры.КоличествоКрышекТребуется=
		ОбластьДетали.Параметры.КоличествоКрышекТребуетсяРасшифровка = Новый Структура("ПотребностьКрышки",ТаблицаКрышки[сч].Комплектующая);
		
		ТабДок2.Вывести(ОбластьДетали);	
	КонецЦикла;	
	
	
	// Сводный запрос по применяемости дисков к крышкам	
	
	ЗапросСводный=Новый Запрос;
	ЗапросСводный.МенеджерВременныхТаблиц=Запрос.МенеджерВременныхТаблиц;
	ЗапросСводный.Текст="ВЫБРАТЬ * ИЗ 	ВТ_СводнаяТаблица";
	ТаблицаСводная=ЗапросСводный.Выполнить().Выгрузить();
	
	
	ЗапросПоНепривязаннымКрышкам=Новый Запрос;
	ЗапросПоНепривязаннымКрышкам.Текст="ВЫБРАТЬ
   |	А.Номенклатура КАК Комплектующая,
   |	А.Номенклатура.Код КАК Код,
   |	А.Номенклатура.КодСБИС КАК КодСБИС,
   |	А.КоличествоОстаток КАК КоличествоКрышекОстаток
   |ИЗ
   |	(ВЫБРАТЬ
   |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
   |		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
   |	ИЗ
   |		РегистрНакопления.ТоварыНаСкладах.Остатки(
   |				,
   |				Номенклатура В ИЕРАРХИИ (&Крышки)
   |					И (НЕ Номенклатура В
   |							(ВЫБРАТЬ
   |								РегистрСведений.КомплектующиеНоменклатуры.Комплектующая
   |							ИЗ
   |								РегистрСведений.КомплектующиеНоменклатуры))) КАК ТоварыНаСкладахОстатки) КАК А
   |
   |УПОРЯДОЧИТЬ ПО
   |	КоличествоКрышекОстаток УБЫВ";
	
	ЗапросПоНепривязаннымКрышкам.УстановитьПараметр("Крышки",Справочники.Номенклатура.НайтиПоКоду("0080004"));
	
	Выборка=ЗапросПоНепривязаннымКрышкам.Выполнить().Выбрать();
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокКрышкиБезПривязки");
	ТабДок4.Вывести(ОбластьЗаголовок);
	ОбластьДетали = Макет.ПолучитьОбласть("ДеталиКрышкиБезПривязки");
	Пока Выборка.Следующий() Цикл
		ОбластьДетали.Параметры.Заполнить(Выборка);
		ТабДок4.Вывести(ОбластьДетали);	
	КонецЦикла;	
	
	// Запрос по комплектущим в наличии, когда нет остатков по номенклатуре, к которой они привязаны (т.е. крышки есть, а дисков нет)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	А.Комплектующая КАК Комплектующая,
	               |	А.Комплектующая.Код КАК Код,
	               |	А.Комплектующая.КодСБИС КАК КодСБИС,
	               |	А.КоличествоОстаток КАК КоличествоКрышекОстатокБезДисков,
	               |	Б.ОстатокДисков
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая,
	               |		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	               |	ИЗ
	               |		РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура В ИЕРАРХИИ (&Крышки)) КАК ТоварыНаСкладахОстатки
	               |			ПО КомплектующиеНоменклатуры.Комплектующая = ТоварыНаСкладахОстатки.Номенклатура) КАК А
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЕСТЬNULL(СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток), 0) КАК ОстатокДисков,
	               |			КомплектующиеНоменклатуры.Комплектующая КАК Комплектующая
	               |		ИЗ
	               |			РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	               |				ПО КомплектующиеНоменклатуры.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			КомплектующиеНоменклатуры.Комплектующая) КАК Б
	               |		ПО А.Комплектующая = Б.Комплектующая
	               |ГДЕ
	               |	А.КоличествоОстаток > 0
	               |	И Б.ОстатокДисков = 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КоличествоКрышекОстатокБезДисков УБЫВ
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	Запрос.УстановитьПараметр("Крышки",Справочники.Номенклатура.НайтиПоКоду("0080004"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбластьДетали.Параметры.Заполнить(Выборка);
		ОбластьДетали.Параметры.КоличествоКрышекОстаток = 0;
		ТабДок4.Вывести(ОбластьДетали);	
	КонецЦикла;	
	
	ТаблицаКрышки.Сортировать("СвободныйОстатокКрышек Убыв");
	сч=0;
	Для сч=0 По ТаблицаКрышки.Количество()-1 Цикл
		Если ТаблицаКрышки[сч].СвободныйОстатокКрышек > 0 Тогда
			ОбластьДетали.Параметры.Заполнить(ТаблицаКрышки[сч]);
			ОбластьДетали.Параметры.КодСБИС = ТаблицаКрышки[сч].Комплектующая.КодСБИС;
			ОбластьДетали.Параметры.Код = ТаблицаКрышки[сч].Комплектующая.Код;
			ОбластьДетали.Параметры.КоличествоКрышекОстаток = 0;
			ОбластьДетали.Параметры.КоличествоКрышекОстатокБезДисков = 0;
			ОбластьДетали.Параметры.СвободныйОстатокКрышекСУчетомЗапаса = Цел(ТаблицаКрышки[сч].СвободныйОстатокКрышек - ТаблицаКрышки[сч].СвободныйОстатокКрышек*0.3);
			ТабДок4.Вывести(ОбластьДетали);	
		КонецЕсли;
	КонецЦикла;	
	
	ТабДок4.ТолькоПросмотр = Истина;
	
	
КонецПроцедуры

Процедура ПриОткрытии()
	КонДата=ТекущаяДата();
КонецПроцедуры

Процедура ПолеТабличногоДокумента2ОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ТабДок=Новый ТабличныйДокумент;
	
	Если ТипЗнч(Расшифровка)=Тип("Структура") Тогда
		Если  Расшифровка.Свойство("ПотребностьКрышки") Тогда
			СтандартнаяОбработка=Ложь;
			СтруктураПоиска=Новый Структура("Комплектующая");
			СтруктураПоиска.Комплектующая=Расшифровка.ПотребностьКрышки;
			НайдСтроки=ТаблицаСводная.НайтиСтроки(СтруктураПоиска);
			
			Если НайдСтроки.Количество()>0 Тогда
				Макет=ПолучитьМакет("Макет");
				ОбластьШапка=Макет.ПолучитьОбласть("ШапкаТаблицыРасшифровка");  
				ТабДок.Вывести(ОбластьШапка);
				
				Для каждого НайдСтрока ИЗ НайдСтроки Цикл
					ОбластьДетали=Макет.ПолучитьОбласть("ДеталиРасшифровка");  
					ОбластьДетали.Параметры.Заполнить(НайдСтрока);
					ТабДок.Вывести(ОбластьДетали);
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;
	ТабДок.ТолькоПросмотр=Истина;
	ТабДок.Показать();
КонецПроцедуры

Процедура ДействияФормыВыгрузитьОстатки(Кнопка)
	Для сч=2 по 20 Цикл
		АдресЯчейкиЗначения="R"+Строка(сч)+"C6";
		ЗначениеТекст=ЭлементыФормы.ПолеТабличногоДокумента3.ПолучитьОбласть(АдресЯчейкиЗначения).ТекущаяОбласть.Текст;
		Если ЗначениеТекст<>"" И Число(ЗначениеТекст)>0 Тогда
			АдресЯчейкиКода="R"+Строка(сч)+"C2";
			ЗначениеКод=ЭлементыФормы.ПолеТабличногоДокумента3.ПолучитьОбласть(АдресЯчейкиКода).ТекущаяОбласть.Текст;
			Менеджер=РегистрыСведений.ПлановыеОстаткиТоваров.СоздатьМенеджерЗаписи();
			Менеджер.Номенклатура=Справочники.Номенклатура.НайтиПоКоду(ЗначениеКод);
			Менеджер.Период=ТекущаяДата();
			Менеджер.Количество=Число(ЗначениеТекст);
			Менеджер.Записать();
			
		КонецЕсли;
	КонецЦикла;
	Предупреждение("Остатки по крепежу выгружены. Теперь нужно сформировать отчет 171. Прайс-лист с остатками.");
КонецПроцедуры

Процедура ДействияФормыОтчетОстаткиДисковБезПривязки(Кнопка)
	ТабДок=Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ОстаткиБезПривязки");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура.Код,
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,(НЕ Номенклатура В
	|(ВЫБРАТЬ РАЗЛИЧНЫЕ Комплектующая
	|ИЗ  РегистрСведений.КомплектующиеНоменклатуры
	|ГДЕ Комплектующая.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|ОБЪЕДИНИТЬ
	|ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура  ИЗ  РегистрСведений.КомплектующиеНоменклатуры
	|ГДЕ Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|))
	|И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ТоварыНаСкладахОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура.Наименование";
	
	Результат = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетали = Результат.Выбрать();
	
	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ТолькоПросмотр=Истина;
	ТабДок.Показать();
КонецПроцедуры


ТаблицаКрышкиРасшифровка = Новый ТаблицаЗначений;
ТаблицаСводная = Новый ТаблицаЗначений;
