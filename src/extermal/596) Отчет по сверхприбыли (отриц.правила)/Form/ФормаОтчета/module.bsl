
//поэтапное выполнение:
	//1. получим список клиентов с "-" перс. правилами
    //2. Получим цены и товары по этому правилу
	//3. Получим цены клиента БЕЗ "-" правил по этим товарам 
	//4. найдём продажи по списку товаров
	//5. Соберем всё в 1 таблицу и покажем в печ.форме
//
Процедура КнопкаСформироватьНажатие(Кнопка)
	
 	//1. получим список клиентов с "-" перс. правилами
	ВыборкаКонтр = ПолучитьВыборкуКлиентов();
	Сообщить(строка(ТекущаяДата())+"=== формирование таблицы по "+строка(ВыборкаКонтр.Количество())+" клиентам ===");
	
	конст = Константы.ЦенообразованиеПоКатегориям.Получить();
	ЕдиноеДерево.Строки.Очистить();
	 
	Пока ВыборкаКонтр.Следующий() Цикл
		ОбработкаПрерыванияПользователя();
		стр1 = ЕдиноеДерево.Строки.Добавить();
		стр1.Контрагент   = ВыборкаКонтр.Контрагент;
		стр1.Номенклатура = 0;
		Состояние( строка(ТекущаяДата())+" Обрабатывается клиент: "+строка(ВыборкаКонтр.Контрагент)+" по "+строка(ВыборкаКонтр.Приоритет)+" правилам.");
		
	//2. найдём продажи по списку товаров для этого клиента
		таблПродаж = ПолучитьПродажиКлиента(ВыборкаКонтр.Контрагент, ДатаНач, ДатаКон); 
		Состояние(строка(ТекущаяДата())+" Получен список "+строка(таблПродаж.Количество())+" товаров по продажам по Клиенту: "+строка(ВыборкаКонтр.Контрагент));
		Если ПоПродажам тогда
			списТов = таблПродаж.выгрузитьКолонку("Номенклатура");
			если списТов.Количество()=0 тогда 
			продолжить;
			КонецЕсли;
		Иначе 
			списТов = неопределено;
		КонецЕсли;
	//3. Получим цены и товары по этому правилу
		ПолитикаОтрицательныхПравил = ПолучитьПолитикуПоОтрицательнымПравилам( ВыборкаКонтр.Контрагент, Истина, конст, списТов);
		таблОтрицательные = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(ВыборкаКонтр.Контрагент, списТов, , ПолитикаОтрицательныхПравил); 
		i=0; // при отсутствие правила - ставвится "заглушка" правило № 99 999 
		пока i<таблОтрицательные.Количество() цикл
			если таблОтрицательные[i].МинимальнаяЦена=0 или таблОтрицательные[i].Приоритет>0 тогда
				таблОтрицательные.Удалить(i);
			Иначе i=i+1;
			КонецЕсли;	
		КонецЦикла;	
		списТов = таблОтрицательные.ВыгрузитьКолонку("Номенклатура");
		Сообщить(строка(ТекущаяДата())+" Получен список "+строка(списТов.Количество())+?(ПоПродажам," проданных","")+" товаров с ценой по ""отрицательным правилам"" по клиенту: "+строка(ВыборкаКонтр.Контрагент));
			
	//4. Получим цены клиента БЕЗ "-" правил по этим товарам 
		ПолитикаБезОтрицательныхПравил = ПолучитьПолитикуПоОтрицательнымПравилам( ВыборкаКонтр.Контрагент, ЛОЖЬ, конст, списТов);
		таблБезОтрицательных = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(ВыборкаКонтр.Контрагент, списТов , , ПолитикаБезОтрицательныхПравил); 
		Состояние(строка(ТекущаяДата())+" Получены цены "+строка(таблБезОтрицательных.Количество())+" товаров без ""отрицательных правил"" по клиенту: "+строка(ВыборкаКонтр.Контрагент));
		
	
	 	//5. Соберем всё в 1 таблицу и покажем в печ.форме
		Состояние("идёт формирование общей таблица по клиенту: "+строка(ВыборкаКонтр.Контрагент));
		ДобавитьВЕдинуюТаблицу( стр1, таблОтрицательные, таблБезОтрицательных, таблПродаж );
	КонецЦикла;
	
	Сообщить(строка(ТекущаяДата())+"=== формирование таблицы по "+строка(ВыборкаКонтр.Количество())+" клиентам завершено ===");
	
КонецПроцедуры

//======================================================================================

функция ПолучитьВыборкуКлиентов()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПравилаЦенообразования.Контрагент КАК Контрагент,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПравилаЦенообразования.Приоритет) КАК Приоритет,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПравилаЦенообразования.Категория) КАК Категория
	               |ИЗ
	               |	РегистрСведений.ПравилаЦенообразования КАК ПравилаЦенообразования
	               |ГДЕ
	               |	ПравилаЦенообразования.Приоритет < 0
	               |	И ПравилаЦенообразования.Выключено = ЛОЖЬ
	               |	И ПравилаЦенообразования.Категория <> ЗНАЧЕНИЕ(Перечисление.КатегорииСкидок.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПравилаЦенообразования.Контрагент";
	Результат = Запрос.Выполнить();
	ВыборкаКонтр = Результат.Выбрать();
	возврат ВыборкаКонтр;
КонецФункции

функция ПолучитьПолитикуПоОтрицательнымПравилам( Контрагент, Отрицательные = Истина, НовыеПравила=Истина,  СписокНоменклатуры=неопределено)
	 Запрос = Новый Запрос;
 Если Отрицательные тогда
	 Запрос.Текст = "ВЫБРАТЬ
           |	Правила1.Приоритет КАК Приоритет,
           |	Правила1.ВидТовара,
           |	Правила1.Производитель,
           |	Правила1.НоменклатурнаяГруппа,
           |	Правила1.ВходитВПапку,
           |	Правила1.ПодСтрока,
           |	Правила1.Диаметр,
           |	Правила1.Номенклатура,
           |	Правила1.ТипЦен,
		   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)) КАК Правило,
		   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(50)) КАК ОтпускнаяЦена,
			   
		   //!!! учет тр.Наценки филиала - УЖЕ должна быть тут заложена !!! 
		   |	Правила1.СкидкаНаценка//ТрНаценка
		   |	, Правила1.СкидкаПредоплаты
		   
		   //+++ 04.07.2016
		   |	, Правила1.ВидДефектаДляУценки
		   //12.01.2017
		   |	, 0 КАК ТрКлиента
		
           |ИЗ
           |	РегистрСведений.ПравилаЦенообразования КАК Правила1
	 |ГДЕ
	 |	Правила1.Контрагент = &Контрагент
	 |	И Правила1.Категория <> Значение(Перечисление.КатегорииСкидок.ПустаяСсылка)
     |	И Правила1.Выключено=ЛОЖЬ
	 |	И Правила1.Приоритет < 0
	 
	 |//гр1 	 и Правила1.ВидТовара В (&СписокВидовТовара)
	 |//гр1      и Правила1.Производитель в (&СписокПроизводителей)
	 |//гр1      и Правила1.НоменклатурнаяГруппа в (&СписокНомГрупп)
	 |";
	 	
	 Если НЕ НовыеПравила тогда
	 		Запрос.Текст = СтрЗаменить(Запрос.Текст , "<>", "=");
	 КонецЕсли;	
	 
 КонецЕсли;
 
  Если НЕ Отрицательные тогда // тогда сложнее - берём кусок кода из  ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв()
	 
	//+++ 24.08.2016 - по "рубильнику" (старые Общие и персональные правила "живут" в пустой Категории! )
	Если НовыеПравила тогда 
		
	Запрос.Текст = "ВЫБРАТЬ
           |	Табл1.ВидТовара,
           |	Табл1.Категория,
		 //12.01.2017 
		   |	Табл1.ТрКлиента
		   
		   |ПОМЕСТИТЬ ВТ_Виды
           |ИЗ
           |	&ТаблВидов КАК Табл1
		   
		   //+++ соединяем только с нужными видами
		   |//гр1 ГДЕ Табл1.ВидТовара В (&СписокВидовТовара)

           |;
           |///////////////////////////////////////////////
		   |ВЫБРАТЬ * из (ВЫБРАТЬ
           |	Правила1.Приоритет КАК Приоритет,
           |	Правила1.ВидТовара,
           |	Правила1.Производитель,
           |	Правила1.НоменклатурнаяГруппа,
           |	Правила1.ВходитВПапку,
           |	Правила1.ПодСтрока,
           |	Правила1.Диаметр,
           |	Правила1.Номенклатура,
           |	Правила1.ТипЦен,
		   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)) КАК Правило,
		   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(50)) КАК ОтпускнаяЦена,
			   
		   //!!! учет тр.Наценки филиала - УЖЕ должна быть тут заложена !!! 
		   |	Правила1.СкидкаНаценка//ТрНаценка
		   |	, Правила1.СкидкаПредоплаты
		   
		   //+++ 04.07.2016
		   |	, Правила1.ВидДефектаДляУценки
		   //12.01.2017
		   |	, ВЫБОР когда Правила1.ТрКлиента=0 
		   |		тогда ЕстьNull(ТаблКатегорий.ТрКлиента,0)
		   |		иначе Правила1.ТрКлиента 
		   |	КОНЕЦ КАК ТрКлиента
		
           |ИЗ
           |	РегистрСведений.ПравилаЦенообразования КАК Правила1
		   
		   //12.01.2017
		   |ЛЕВОЕ СОЕДИНЕНИЕ
		   |	ВТ_Виды как ТаблКатегорий
		   | ПО Правила1.ВидТовара = ТаблКатегорий.ВидТовара
//==========================Тр.Затраты==============================================
|//ОбщиеПравилаДляТрЗатрат

           |ГДЕ
           |	Правила1.Контрагент = &Контрагент
           |	И Правила1.Выключено=ЛОЖЬ
		   
//=====================================19.04.2017 =======================================================================
		   |И  Правила1.Приоритет >0

   
		   //+++ 24.08.2016 - "старые" и "новые" персональные правила - Разделены по измерению Категория!
		   |    И Правила1.Категория <> Значение(Перечисление.КатегорииСкидок.ПустаяСсылка)
		   
		     //+++ 24.11.2016 -- в правилах 1 клиента тоже может быть "бардак"----
		   |//гр1 	И Правила1.ВидТовара В (&СписокВидовТовара)
		   |//гр1   И Правила1.Производитель в (&СписокПроизводителей)
		   |//гр1   И Правила1.НоменклатурнаяГруппа в (&СписокНомГрупп)

|
           |ОБЪЕДИНИТЬ ВСЕ
           |
	//======================== Вот здесь отбор по Общим правилам по Категориям Клиента (или 3-я категория!) ==================
           |ВЫБРАТЬ
           |	ЕстьNull(ПравилаОбщие.Приоритет, 1000) + 1000,
		  
		   //24.08.2016 - Вид есть всегда!
		   //|	ПравилаЦенообразованияОбщие.ВидТовара,
		   |	ТаблВидов.ВидТовара,
		   
           |	ПравилаОбщие.Производитель,
           |	ПравилаОбщие.НоменклатурнаяГруппа,
           |	ПравилаОбщие.ВходитВПапку,
           |	ПравилаОбщие.ПодСтрока,
           |	ПравилаОбщие.Диаметр,
           |	ПравилаОбщие.Номенклатура,
		   
           |	ПравилаОбщие.ТипЦен,
		   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)),
		   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(50)),

		//+++ 24.11.2016 --------------Учет Наценки от филиала по 2м условиям-----------------------
		//---------------------------------флТрнаценка и ИспользоватьТранспорт в правиле---------------
		   |	ЕстьNull(ПравилаОбщие.СкидкаНаценка,0)//ТрНаценка
		//---------------------------------------------------------------------------------------------
		// учет клиентов, которые работают БезНДС (экспортные в рублях по договору Экспорт)
		// - делается ниже, при расчете конечной стоимости (чтобы при проверке правил - не было ошибок!

		   //24.08.2016 - в общих правилах у каждой категории - свои скидки предоплаты!
           |	,ЕстьNull(ПравилаОбщие.СкидкаПредоплаты,0)
		   
		   //+++ 04.07.2016
		   |	, ПравилаОбщие.ВидДефектаДляУценки
		   //12.01.2017
           |	, ТаблВидов.ТрКлиента
		   
		   |ИЗ
		   |	ВТ_Виды как ТаблВидов
		   
           |	ЛЕВОЕ СОЕДИНЕНИЕ
		   |		РегистрСведений.ПравилаЦенообразованияОбщие КАК ПравилаОбщие
		   |	ПО 
		   |		ТаблВидов.ВидТовара = ПравилаОбщие.ВидТовара
		   |		И ТаблВидов.Категория = ПравилаОбщие.Категория
		   
		   //+++ 24.08.2016 - "старые" правила - БЕЗ Категории!
		   | ГДЕ ПравилаОбщие.Категория <> Значение(Перечисление.КатегорииСкидок.ПустаяСсылка)
		   
		   |) как Правила
		   |
		  //25.09.15 или 13.08.16 -- отбор по 1 виду товара из заказа покупателя----
		   |//гр1 ГДЕ Правила.ВидТовара В (&СписокВидовТовара)
		   |//гр1      и Правила.Производитель в (&СписокПроизводителей)
		   |//гр1      и Правила.НоменклатурнаяГруппа в (&СписокНомГрупп)
		   |
		   |УПОРЯДОЧИТЬ ПО
           |	Правила.Приоритет
		   |АВТОУПОРЯДОЧИВАНИЕ";
				   
	//16.01.2017 - в Заказе покупателя - нужна галка для "выключения" тр.наценки клиента (при самовывозе)!
	флТр = Контрагент.ОсновнойМенеджерКонтрагента.ОсновноеПодразделение.ОбособленноеПодразделение;
	Если флТр тогда
		текстТрКлиента  = "*(1+ТаблВидов.ТрКлиента/100)";
		текстТрКлиента2 = "*(1+ВЫБОР когда Правила1.ТрКлиента=0 
							|		тогда ЕстьNull(ТаблКатегорий.ТрКлиента,0)
							|		иначе Правила1.ТрКлиента 
							|КОНЕЦ/100)";
		текстТрКлиента3 ="*(1+ТаблВидов.ТрКлиента/100)";
	Иначе
		текстТрКлиента = "";  
		текстТрКлиента2 ="";
		текстТрКлиента3 ="";
	КонецЕсли;
	
	//+++ 24.11.2016 --- учет тр.наценки (Филиала и до Клиента всегда в + ) ----
	Если флТр тогда
		филиалКод = Контрагент.ОсновнойМенеджерКонтрагента.ОсновноеПодразделение.Код;
		Если филиалКод="00106" тогда
			ТрФилиал =  "ТрРнД";
		ИначеЕсли филиалКод="00112" тогда
			ТрФилиал =  "ТрСПб";
		ИначеЕсли филиалКод="00138" тогда
			ТрФилиал =  "ТрЕкт";
		иначе  // для москвы или Ярославля - нет тр. наценки!
			ТрФилиал=""; 
		КонецЕсли;
		
		Если ТрФилиал<>"" тогда  //и филиальная и клиентская наценка
		Запрос.текст = стрЗаменить(Запрос.текст, "ЕстьNull(ПравилаОбщие.СкидкаНаценка,0)//ТрНаценка",
		"выбор когда ПравилаОбщие.ИспользоватьТранспорт 
		|		тогда 100*( (1+ЕстьNull(ПравилаОбщие.СкидкаНаценка,0)/100)*(1+ЕстьNull(ПравилаОбщие."+ТрФилиал+",0)/100)
		//+++ 12.01.2017 --- сразу "прибавим" каскадом ТрКлиента!
		|"+текстТрКлиента+" -1)
		|		иначе "+?(текстТрКлиента="","ЕстьNull(ПравилаОбщие.СкидкаНаценка,0)", "100*( (1+ЕстьNull(ПравилаОбщие.СкидкаНаценка,0)/100)
		|"+текстТрКлиента+" -1)")+" Конец ");
		
//---------------------------------наценка в перс.правила------------------------------------------------
		Запрос.текст = стрЗаменить(Запрос.текст, "//ОбщиеПравилаДляТрЗатрат",
	    "ЛЕВОЕ СОЕДИНЕНИЕ(
		|ВЫБРАТЬ
	    |	ПравилаОбщиеТр.ID,
	    |	ПравилаОбщиеТр.Категория,
	    |	ПравилаОбщиеТр.ИспользоватьТранспорт,
		|	ПравилаОбщиеТр."+ТрФилиал+"
		|ИЗ
	    |	РегистрСведений.ПравилаЦенообразованияОбщие КАК ПравилаОбщиеТр
	    |ГДЕ
	    |	ПравилаОбщиеТр.Категория <> Значение(Перечисление.КатегорииСкидок.ПустаяСсылка) 
		|				) как Правила0
		
	//+++( 29.12.2016 с учетом "склейки" правила1 с Диаметром = Правило0 + . Диаметр + ;
	//	|	ПО Правила1.ID = Правила0.ID
		|ПО ВЫБОР КОГДА Правила1.Диаметр="""" 
		|		 ТОГДА Правила1.ID = Правила0.ID+"";""
		|        ИНАЧЕ Правила1.ID = Правила0.ID+"".""+Правила1.Диаметр+"";"" 
		|	КОНЕЦ
	//+++)	
		//может быть и так... что для каждой категории своя наценка?!
		|	И Правила1.Категория = Правила0.Категория
		|");
		
		Запрос.текст = стрЗаменить(Запрос.текст, "Правила1.СкидкаНаценка//ТрНаценка",
		"ВЫБОР КОГДА Правила0.ИспользоватьТранспорт 
		|ТОГДА 100*( (1+Правила1.СкидкаНаценка/100)*(1+ЕстьNull(Правила0."+ТрФилиал+",0)/100)
		//+++( 12.01.2017 --- сразу прибавим и ТрКлиента!
		|"+текстТрКлиента2+"  -1)
		|ИНАЧЕ "+?(текстТрКлиента2="","Правила1.СкидкаНаценка",
			"100*( (1+Правила1.СкидкаНаценка/100) 
		//(12.01.2017 - тр.наценка клиента из правил или карточки клиента!
		|"+текстТрКлиента2+" -1)")+" Конец как СкидкаНаценка");
		
	ИначеЕсли текстТрКлиента3<>"" тогда // 12.01.2017  только если есть Тр.Клиента!
		 Запрос.текст = стрЗаменить(Запрос.текст, "ЕстьNull(ПравилаОбщие.СкидкаНаценка,0)//ТрНаценка",
		" 100*( (1+ЕстьNull(ПравилаОбщие.СкидкаНаценка,0)/100)
		//+++ 12.01.2017 --- сразу прибавим и ТрКлиента3 из карточки!
		|"+текстТрКлиента3+" -1)");

		Запрос.текст = стрЗаменить(Запрос.текст, "Правила1.СкидкаНаценка//ТрНаценка",
		" 100*( (1+Правила1.СкидкаНаценка/100)
		//+++ 12.01.2017 --- сразу прибавим и ТрКлиента!
		|"+текстТрКлиента2+" -1) как СкидкаНаценка");
	КонецЕсли;
	
		
	Иначе // 12.01.2017 + ТрКлиента!
		 Запрос.текст = стрЗаменить(Запрос.текст, "ЕстьNull(ПравилаОбщие.СкидкаНаценка,0)//ТрНаценка",
		" 100*((1+ЕстьNull(ПравилаОбщие.СкидкаНаценка,0)/100)
		//+++ 12.01.2017 --- сразу прибавим и ТрКлиента3 из карточки!
		|"+текстТрКлиента3+"
		| - 1)");

		Запрос.текст = стрЗаменить(Запрос.текст, "Правила1.СкидкаНаценка//ТрНаценка",
		" 100*( (1+Правила1.СкидкаНаценка/100)
		
		//+++ 12.01.2016 --- сразу прибавим и ТрКлиента!
		|"+ТекстТрКлиента2+"
		|- 1)
		|как СкидкаНаценка");
	КонецЕсли;
			   
//==============================================================

	табл1 = Контрагент.КатегорияСкидок.Выгрузить();
	списокВидов = ПолучитьСписокВыгружаемыхТоваров();
	для каждого вид1 из списокВидов цикл
		если табл1.найти(вид1.Значение, "ВидТовара")=неопределено тогда
			стр1 = табл1.Добавить();
			стр1.видТовара = вид1.Значение;
			стр1.Категория = перечисления.КатегорииСкидок.к3;
		КонецЕсли;	
	КонецЦикла;	
	для каждого стр1 из табл1 цикл //23.09.2016 НЕ МОЖЕТ БЫТЬ ПУСТОЙ!
		если стр1.Категория = перечисления.КатегорииСкидок.ПустаяСсылка() тогда
			стр1.Категория = перечисления.КатегорииСкидок.к3;
		КонецЕсли;
	КонецЦикла;	
	Запрос.УстановитьПараметр("ТаблВидов", табл1);
	//Запрос.УстановитьПараметр("ТипЦенЗаглушка", справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005") ); // Крупный опт.
	
	Иначе  //================== без учёта категорий - старые перс. и общие правила!
	Запрос.Текст = "ВЫБРАТЬ * из (ВЫБРАТЬ
	               |	ПравилаЦенообразования.Приоритет КАК Приоритет,
	               |	ПравилаЦенообразования.ВидТовара,
	               |	ПравилаЦенообразования.Производитель,
	               |	ПравилаЦенообразования.НоменклатурнаяГруппа,
	               |	ПравилаЦенообразования.ВходитВПапку,
	               |	ПравилаЦенообразования.ПодСтрока,
	               |	ПравилаЦенообразования.Диаметр,
	               |	ПравилаЦенообразования.Номенклатура,
	               |	ПравилаЦенообразования.ТипЦен,
				   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)) КАК Правило,
				   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(50)) КАК ОтпускнаяЦена,
	               |	ПравилаЦенообразования.СкидкаНаценка,
	               |	ПравилаЦенообразования.СкидкаПредоплаты
				   
				   //+++ 04.07.2016
				   |	, ПравилаЦенообразования.ВидДефектаДляУценки
				
	               |ИЗ
	               |	РегистрСведений.ПравилаЦенообразования КАК ПравилаЦенообразования
	               |ГДЕ
	               |	ПравилаЦенообразования.Контрагент = &Контрагент
	               |	И ПравилаЦенообразования.Выключено=ЛОЖЬ
				   
				   //+++ 24.08.2016 - "старые" персональные правила - БЕЗ КАТЕГОРИИ !
				   |    И ПравилаЦенообразования.Категория = Значение(Перечисление.КатегорииСкидок.ПустаяСсылка)
//=====================================19.04.2017 =======================================================================
				   |	И ПравилаЦенообразования.Приоритет >0
				   //24.11.2016
				   |//гр1    И ПравилаЦенообразования.ВидТовара В (&СписокВидовТовара)
				   |//гр1    И ПравилаЦенообразования.Производитель в (&СписокПроизводителей)
				   |//гр1    И ПравилаЦенообразования.НоменклатурнаяГруппа в (&СписокНомГрупп)

	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПравилаЦенообразованияОбщие.Приоритет + 1000,
	               |	ПравилаЦенообразованияОбщие.ВидТовара,
	               |	ПравилаЦенообразованияОбщие.Производитель,
	               |	ПравилаЦенообразованияОбщие.НоменклатурнаяГруппа,
	               |	ПравилаЦенообразованияОбщие.ВходитВПапку,
	               |	ПравилаЦенообразованияОбщие.ПодСтрока,
	               |	ПравилаЦенообразованияОбщие.Диаметр,
	               |	ПравилаЦенообразованияОбщие.Номенклатура,
	               |	ПравилаЦенообразованияОбщие.ТипЦен,
				   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)),
				   //|	ВЫРАЗИТЬ("""" КАК СТРОКА(50)),
	               |	ПравилаЦенообразованияОбщие.СкидкаНаценка,
	               |	0
				   				   //+++ 04.07.2016
				   |	, ПравилаЦенообразованияОбщие.ВидДефектаДляУценки

				   |ИЗ
	               |	РегистрСведений.ПравилаЦенообразованияОбщие КАК ПравилаЦенообразованияОбщие
				   
				    //+++ 24.08.2016 - "старые" правила - БЕЗ КАТЕГОРИИ !
				   | ГДЕ ПравилаЦенообразованияОбщие.Категория = Значение(Перечисление.КатегорииСкидок.ПустаяСсылка)
				   |	) как Правила
				   |
					//25.09.15 или 13.08.16 -- отбор по 1 виду товара из заказа покупателя----
				   |//гр1 ГДЕ Правила.ВидТовара В (&СписокВидовТовара)
				   |//гр1      и Правила.Производитель в (&СписокПроизводителей)
				   |//гр1      и Правила.НоменклатурнаяГруппа в (&СписокНомГрупп)
				   |
				   |УПОРЯДОЧИТЬ ПО
	               |	Правила.Приоритет
				   |АВТОУПОРЯДОЧИВАНИЕ";
	КонецЕсли;
	  
  КонецЕсли;
  
  
  Если СписокНоменклатуры<>неопределено тогда
	//23.12.2015 для больших массивов - оочень тормозит и смысл отбора пропадает
	Если СписокНоменклатуры.Количество()<10000 тогда 
		
		//+++ 22.09.2015 - - если в заказе только 1 тип товара (90% заказов!) - не надо брать ВСЕ правила и все цены!
		ТаблВидовТовара = новый ТаблицаЗначений; // 13.08.2016
		ТаблВидовТовара.Колонки.Добавить("ВидТовара");
		ТаблВидовТовара.Колонки.Добавить("НоменклатурнаяГруппа");
		ТаблВидовТовара.Колонки.Добавить("Производитель");
		
		этоСписок = ТипЗнч(СписокНоменклатуры)=ТИП("СписокЗначений");
		для каждого тов из СписокНоменклатуры цикл
			Товар1 = ?(этоСписок, тов.Значение, тов);
			стр1 = ТаблВидовТовара.Добавить();
			стр1.видТовара 			  = Товар1.видТовара;	
			стр1.НоменклатурнаяГруппа = Товар1.НоменклатурнаяГруппа;	
			стр1.Производитель 		  = Товар1.Производитель;	
		КонецЦикла;
		
		Табл1 = ТаблВидовТовара.Скопировать(,"НоменклатурнаяГруппа");
		Табл1.Свернуть("НоменклатурнаяГруппа");    
		спис1 = Табл1.ВыгрузитьКолонку( "НоменклатурнаяГруппа");
		спис1.Добавить( справочники.НоменклатурныеГруппы.ПустаяСсылка() );
		Запрос.УстановитьПараметр("СписокНомГрупп", спис1 );
		
		Табл2 = ТаблВидовТовара.Скопировать(,"Производитель");
		Табл2.Свернуть("Производитель");
		спис2 = Табл2.ВыгрузитьКолонку("Производитель");
		спис2.Добавить( справочники.Производители.ПустаяСсылка() );
		Запрос.УстановитьПараметр("СписокПроизводителей",  спис2);
	
		ТаблВидовТовара.Свернуть("ВидТовара");
		Запрос.УстановитьПараметр("СписокВидовТовара", ТаблВидовТовара.ВыгрузитьКолонку("ВидТовара") );
		
		Запрос.Текст = стрЗаменить(Запрос.Текст, "//гр1 ", "");
	
    КонецЕсли;
КонецЕсли;

	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	 Результат = Запрос.Выполнить();
	 табл = Результат.Выгрузить();
	 возврат табл;
КонецФункции

функция ПолучитьПродажиКлиента(Контрагент, ДатаНач, ДатаКон)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПродажиОбороты.Номенклатура,
	|	СУММА(ПродажиОбороты.КоличествоОборот) КАК Количество,
	|	выбор когда СУММА(ПродажиОбороты.КоличествоОборот)=0 тогда СУММА(ПродажиОбороты.СтоимостьОборот)
	|		иначе Выразить( СУММА(ПродажиОбороты.СтоимостьОборот)/СУММА(ПродажиОбороты.КоличествоОборот) как число(15,2) ) Конец КАК Цена, 
	|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК Сумма
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ДатаНач,	&ДатаКон, 	,
	|			ДоговорКонтрагента.Владелец = &Контрагент ) КАК ПродажиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.Номенклатура";
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон) );
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Результат  = Запрос.Выполнить();
	таблПродаж = Результат.Выгрузить();

	возврат таблПродаж;
	
КонецФункции

функция ДобавитьВЕдинуюТаблицу(стр1, таблОтрицательные, таблБезОтрицательных, таблПродаж  )
	
	Запрос = Новый Запрос; //склейка таблиц слева направо
	Запрос.УстановитьПараметр("Контрагент", стр1.Контрагент);
	Запрос.УстановитьПараметр("таблОтрицательные", таблОтрицательные);
	Запрос.УстановитьПараметр("таблБезОтрицательных", таблБезОтрицательных);
	Запрос.УстановитьПараметр("таблПродаж", таблПродаж);
	Предоплатные = (стр1.Контрагент.ОсновнойДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.НайтиПоКоду("00001"));
	Запрос.УстановитьПараметр("Предоплатные", Предоплатные);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	цены0.Номенклатура,
	               |	цены0.Приоритет КАК Приоритет,
	               |	ВЫБОР
	               |		КОГДА &Предоплатные
	               |			ТОГДА цены0.ЦенаСоСкидкойПредоплаты
	               |		ИНАЧЕ цены0.МинимальнаяЦена
	               |	КОНЕЦ КАК Цена0
	               |ПОМЕСТИТЬ ВТ_0
	               |ИЗ
	               |	&таблОтрицательные КАК цены0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	цены1.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА &Предоплатные
	               |			ТОГДА цены1.ЦенаСоСкидкойПредоплаты
	               |		ИНАЧЕ цены1.МинимальнаяЦена
	               |	КОНЕЦ КАК Цена1
	               |ПОМЕСТИТЬ ВТ_1
	               |ИЗ
	               |	&таблБезОтрицательных КАК цены1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	цены2.Номенклатура,
	               |	цены2.Количество,
	               |	цены2.Цена КАК ЦенаПродажи,
	               |	цены2.Сумма КАК СуммаПродаж
	               |ПОМЕСТИТЬ ВТ_2
	               |ИЗ
	               |	&таблПродаж КАК цены2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&Контрагент КАК Контрагент,
				   |	цены0.Номенклатура.Код как Код,
	               |	цены0.Номенклатура КАК Номенклатура,
	               |	цены0.Приоритет КАК Приоритет,
	               |	цены0.Цена0 КАК Цена0,
	               |	ЕСТЬNULL(цены1.Цена1, 0) КАК Цена1,
	               |	ЕСТЬNULL(цены2.Количество, 0) КАК Количество,
	               |	ЕСТЬNULL(цены2.ЦенаПродажи, 0) КАК ЦенаПродажи,
	               |	ЕСТЬNULL(цены2.СуммаПродаж, 0) КАК СуммаПродаж,
	               |	(ЕСТЬNULL(цены0.Цена0, 0) - цены1.Цена1) * ЕСТЬNULL(цены2.Количество, 0) КАК СуммаПрибыли,
	               |	(ЕСТЬNULL(цены2.ЦенаПродажи, 0) - ЕСТЬNULL(цены1.Цена1, 0)) * ЕСТЬNULL(цены2.Количество, 0) КАК СуммаПрибылиФакт
	               |ИЗ
	               |	ВТ_0 КАК цены0
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_2 КАК цены2
	               |		ПО цены0.Номенклатура = цены2.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_1 КАК цены1
	               |		ПО цены0.Номенклатура = цены1.Номенклатура
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура),
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Приоритет),
	          //     |	СРЕДНЕЕ(Цена0),
	          //     |	СРЕДНЕЕ(Цена1),
	          //     |	СРЕДНЕЕ(ЦенаПродажи),
	               |	СУММА(Количество),
	               |	СУММА(СуммаПродаж),
	               |	СУММА(СуммаПрибыли),
	               |	СУММА(СуммаПрибылиФакт)
	               |ПО
	               |	Контрагент";
	Результат = Запрос.Выполнить();
	ВыборкаКлиент = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаКлиент.Следующий();
	ЗаполнитьЗначенияСвойств(стр1,ВыборкаКлиент);
	
	выборка =ВыборкаКлиент.Выбрать();
	Пока Выборка.Следующий() Цикл
	  стр2 = стр1.Строки.Добавить();
	  ЗаполнитьЗначенияСвойств(стр2, выборка);
	КонецЦикла;
КонецФункции//склейка

//================интерфейсные функции========================
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыРазвернутьВсе(Кнопка)
	Свернуть = ЭлементыФормы.ДействияФормы.Кнопки.РазвернутьВсе.Пометка;
	
	для каждого стр1 из ЕдиноеДерево.Строки цикл
		если Свернуть тогда
			ЭлементыФормы.ЕдиноеДерево.Свернуть(стр1);
		Иначе // сразу всё дерево
			ЭлементыФормы.ЕдиноеДерево.Развернуть(стр1, Истина);
		КонецЕсли;
		
		////=======более 2х уровней=======
		//Если Свернуть тогда
		//Для каждого стр2 из стр1.Строки цикл
		//	ЭлементыФормы.ЕдиноеДерево.Свернуть(стр2);
		//	для каждого стр3 из стр2.Строки цикл
		//		ЭлементыФормы.ЕдиноеДерево.Свернуть(стр3);
		//	КонецЦикла;
		//КонецЦикла;
		//КонецЕсли;
	
	КонецЦикла;

ЭлементыФормы.ДействияФормы.Кнопки.РазвернутьВсе.Пометка = не ЭлементыФормы.ДействияФормы.Кнопки.РазвернутьВсе.Пометка;
Если ЭлементыФормы.ДействияФормы.Кнопки.РазвернутьВсе.Пометка тогда
	ЭлементыФормы.ДействияФормы.Кнопки.РазвернутьВсе.Текст ="Свернуть";
Иначе	
	ЭлементыФормы.ДействияФормы.Кнопки.РазвернутьВсе.Текст ="Развернуть";
КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ДатаНач = НачалоГода(ТекущаяДата());
	ДатаКон = НачалоМесяца(ТекущаяДата())-1;
КонецПроцедуры

Процедура ЕдиноеДеревоПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.СуммаПрибылиФакт = ДанныеСтроки.СуммаПрибыли  и ДанныеСтроки.СуммаПрибылиФакт<>0 тогда
		ОформлениеСтроки.ЦветФона = webЦвета.СветлоЗеленый;
	ИначеЕсли ДанныеСтроки.СуммаПрибылиФакт>0 тогда
		ОформлениеСтроки.ЦветФона = webЦвета.Роса; //бледно-зеленый
	ИначеЕсли ДанныеСтроки.СуммаПрибылиФакт<0 тогда
		ОформлениеСтроки.ЦветФона = webЦвета.СветлоРозовый;
	КонецЕсли;	
КонецПроцедуры



	