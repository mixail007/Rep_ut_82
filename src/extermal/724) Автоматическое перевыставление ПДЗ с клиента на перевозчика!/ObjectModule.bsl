Функция ПеревыставитьПДЗ() экспорт
	
	
	СписокПодразделений = Новый СписокЗначений;
	СписокПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("00104"));  //деп-т продаж
	СписокПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("00112"));  //филиалы
	СписокПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("00106"));
	СписокПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("00138"));
	СписокПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("00172"));
	СписокПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("00133"));
	СписокПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("00168"));//аксы
	СоответствиеПодразделенияОтветственные = новый Соответствие;
	СоответствиеПодразделенияОтветственные.Вставить(Справочники.Подразделения.НайтиПоКоду("00104"),Справочники.Пользователи.НайтиПоКоду("Запахов И.А."));
	СоответствиеПодразделенияОтветственные.Вставить(Справочники.Подразделения.НайтиПоКоду("00168"),Справочники.Пользователи.НайтиПоКоду("Запахов И.А."));
	СоответствиеПодразделенияОтветственные.Вставить(Справочники.Подразделения.НайтиПоКоду("00112"),Справочники.Пользователи.НайтиПоКоду("Иванов А. В."));
	СоответствиеПодразделенияОтветственные.Вставить(Справочники.Подразделения.НайтиПоКоду("00106"),Справочники.Пользователи.НайтиПоКоду("Атанов Д.Д."));
	СоответствиеПодразделенияОтветственные.Вставить(Справочники.Подразделения.НайтиПоКоду("00172"),Справочники.Пользователи.НайтиПоКоду("Воронцова О. А."));
	СоответствиеПодразделенияОтветственные.Вставить(Справочники.Подразделения.НайтиПоКоду("00138"),Справочники.Пользователи.НайтиПоКоду("Гасперт Е.А."));
	СоответствиеПодразделенияОтветственные.Вставить(Справочники.Подразделения.НайтиПоКоду("00133"),Справочники.Пользователи.НайтиПоКоду("Ильина Н.В."));
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент
	|ПОМЕСТИТЬ Договоры
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Наименование ПОДОБНО ""%*""
	|	И ДоговорыКонтрагентов.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)
	|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетДенежныхСредствВПодотчетеУВодителейОстатки.Заказ,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстатки.Реализация,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстатки.Реализация.ДоговорКонтрагента как ДоговорКонтрагента,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстатки.ЗаданиеНаОтгрузку,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстатки.СуммаОстаток,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстатки.СуммаПредыдущийДолгОстаток
	|ПОМЕСТИТЬ ДолгиПоВодителям
	|ИЗ
	|	РегистрНакопления.УчетДенежныхСредствВПодотчетеУВодителей.Остатки(
	|			&ТекДата,
	|			Реализация.ДоговорКонтрагента В
	|				(ВЫБРАТЬ
	|					Договоры.Договор
	|				ИЗ
	|					Договоры КАК Договоры)) КАК УчетДенежныхСредствВПодотчетеУВодителейОстатки
	|ГДЕ
	|	УчетДенежныхСредствВПодотчетеУВодителейОстатки.СуммаОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток,
	|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка
	|ПОМЕСТИТЬ ДолгиПоЗаказам
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	|			&ТекДата,
	|			ДоговорКонтрагента В
	|					(ВЫБРАТЬ
	|						дОГОВОРЫ.Договор
	|					ИЗ
	|						дОГОВОРЫ КАК дОГОВОРЫ)
	|				И Сделка В
	|					(ВЫБРАТЬ
	|						ДолгиПоВодителям.Заказ
	|					ИЗ
	|						ДолгиПоВодителям КАК ДолгиПоВодителям)) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|ГДЕ
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продажи.Регистратор,
	|	Продажи.ЗаказПокупателя,
	|	Продажи.ДоговорКонтрагента,
	|	СУММА(Продажи.Стоимость) КАК Стоимость,
	|	Продажи.Подразделение
	|ПОМЕСТИТЬ Продажи
	|ИЗ
	|	РегистрНакопления.Продажи КАК Продажи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеВодителюНаПолучениеДенежныхСредств КАК ЗаданиеВодителюНаПолучениеДенежныхСредств
	|		ПО Продажи.Регистратор = ЗаданиеВодителюНаПолучениеДенежныхСредств.Реализация
	|ГДЕ
	|	РАЗНОСТЬДАТ(Продажи.Период, &ТекДата, ДЕНЬ) > 7
	|	И ЗаданиеВодителюНаПолучениеДенежныхСредств.Проведен
	|	И Продажи.ДоговорКонтрагента В
	|			(ВЫБРАТЬ
	|				Договоры.Договор
	|			ИЗ
	|				Договоры КАК Договоры)
	|	И Продажи.Подразделение В(&Подразделения)
	|
	|СГРУППИРОВАТЬ ПО
	|	Продажи.Регистратор,
	|	Продажи.ЗаказПокупателя,
	|	Продажи.ДоговорКонтрагента,
	|	Продажи.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продажи.Регистратор,
	|	Продажи.ЗаказПокупателя,
	|	Продажи.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Продажи.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	Продажи.Стоимость КАК СтоимостьПродажи,
	|	ДолгиПоЗаказам.СуммаВзаиморасчетовОстаток,
	|	ДолгиПоВодителям.СуммаОстаток КАК СуммаОстатокПоВодителям,
	|	ДолгиПоВодителям.СуммаПредыдущийДолгОстаток КАК СуммаПредыдущийДолгОстатокПоВодителям,
	|	Продажи.Подразделение
	|ИЗ
	|	Продажи КАК Продажи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолгиПоВодителям КАК ДолгиПоВодителям
	|		ПО Продажи.Регистратор = ДолгиПоВодителям.Реализация
	|			И Продажи.ЗаказПокупателя = ДолгиПоВодителям.Заказ И Продажи.ДоговорКонтрагента = ДолгиПоВодителям.ДоговорКонтрагента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолгиПоЗаказам КАК ДолгиПоЗаказам
	|		ПО Продажи.ЗаказПокупателя = ДолгиПоЗаказам.Сделка
	|			И Продажи.ДоговорКонтрагента = ДолгиПоЗаказам.ДоговорКонтрагента";

	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Подразделения", СписокПодразделений);

	Результат = Запрос.Выполнить();
	
	ОбщаяТаблица = Результат.Выгрузить();
	Контрагенты = ОбщаяТаблица.Скопировать(,"Контрагент,ДоговорКонтрагента");
	Контрагенты.Свернуть("Контрагент,ДоговорКонтрагента");

	//Выборка = Результат.Выбрать();

	для каждого стр из Контрагенты Цикл
		
		Отбор = Новый Структура();
		Отбор.Вставить("Контрагент",стр.Контрагент);
		Отбор.Вставить("ДоговорКонтрагента",стр.ДоговорКонтрагента);
		НашлиСтроки = ОбщаяТаблица.НайтиСтроки(Отбор);
		
		Если НашлиСтроки.Количество()>0 тогда      // по нескольким заказам
			
			Исполнитель = СоответствиеПодразделенияОтветственные[НашлиСтроки[0].Подразделение];
			//НайтиСоздатьДоговор
			НовДог =  НайтиСоздатьДоговор(НашлиСтроки[0].ЗаказПокупателя.Организация,стр.Контрагент,Исполнитель);
			//НайтиСоздатьДоговор
			
			//создадим документ взаимозачет
			Документ=Документы.Взаимозачет.СоздатьДокумент();
			Документ.Дата = ТекущаяДата();
			Документ.Организация = стр.ДоговорКонтрагента.Организация;
			Документ.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ПереносЗадолженности;
			Документ.КонтрагентДебитор = стр.Контрагент;
			Документ.КонтрагентКредитор = НовДог.Владелец;
			Документ.Ответственный = Справочники.Пользователи.НайтиПоКоду("Робот (центр - номенклатура)");
			Документ.ОтражатьВБухгалтерскомУчете = Истина;
			Документ.ОтражатьВНалоговомУчете = Истина;
			Документ.ОтражатьВУправленческомУчете = Истина;
			Документ.ВалютаДокумента = НовДог.ВалютаВзаиморасчетов;
			
			Документ.Комментарий = "#Создан автоматически. Перевыставление ДЗ/ПДЗ, дата создания " + ТекущаяДата();	
			
			СуммаИтог = 0;
			
			для каждого ОбщСтр из НашлиСтроки цикл			
				
				НовСтр=Документ.СуммыДолга.Добавить();
				НовСтр.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская;
				новСтр.ДоговорКонтрагента = ОбщСтр.ДоговорКонтрагента;
				НовСтр.Сделка = ОбщСтр.ЗаказПокупателя;
				//НовСтр.Сумма = ОбщСтр.СуммаВзаиморасчетовОстаток;
				НовСтр.Сумма = ОбщСтр.СуммаОстатокПоВодителям + ОбщСтр.СуммаПредыдущийДолгОстатокПоВодителям;
				НовСтр.Валюта = ОбщСтр.ДоговорКонтрагента.ВалютаВзаиморасчетов;
				НовСтр.КурсВзаиморасчетов = 1;
				НовСтр.СуммаУпр = НовСтр.Сумма;
				СуммаИтог = СуммаИтог + НовСтр.Сумма;
				
				//на наш договор
				НовСтр1=Документ.СуммыДолга.Добавить();
				НовСтр1.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская;
				новСтр1.ДоговорКонтрагента = НовДог;
				НовСтр1.Сделка = ОбщСтр.ЗаказПокупателя;
				НовСтр1.Сумма = НовСтр.Сумма;
				НовСтр1.Валюта = НовДог.ВалютаВзаиморасчетов;
				//НовСтр.КурсВзаиморасчетов = Окр(Выборка.РублиПриход/Выборка.ВалютаПриход,4);
				НовСтр1.КурсВзаиморасчетов = 1;
				НовСтр1.СуммаУпр = НовСтр.Сумма;  		
				
				
			КонецЦикла;
			
						
			Документ.СуммаДокумента = СуммаИтог;
	//		Документ.Записать();
			если СуммаИтог<>0 тогда
				Документ.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
		
		Если Документ.Проведен тогда //можно заменить на проведен
			СозданиеЗадачи(Документ.Ссылка,Исполнитель);
		КонецЕсли;
		
		КонецЕсли;
		
	КонецЦикла;

		
КонецФункции

процедура СозданиеЗадачи(Объект,Исполнитель) 
	// уведомлением в 1С  
	//1я
	задача = задачи.ЗадачиПользователя.СоздатьЗадачу();
	задача.Дата = ТекущаяДата();
	задача.СрокИсполнения = КонецДня(ТекущаяДата());
	//задача.Исполнитель = Объект.КонтрагентДебитор.ОсновнойМенеджерКонтрагента;
	задача.Исполнитель = Исполнитель;
	задача.Постановщик = справочники.Пользователи.НайтиПоКоду("Бондаренко Е.Д. (снабжение)");
	задача.Оповещение = истина;
	задача.СрокОповещения = НачалоДня(ТекущаяДата()) + 8*3600;
	задача.Наименование = "Перевыставлены ДЗ или ПДЗ с клиента на перевозчика";
	задача.Описание = "Автоматически перевыставлен долг  по истечении 7 дней с даты отгрузки  с наличных договоров на договор ""Расчеты с водителем*""";
	задача.Объект = Объект;
	задача.Инициатор = Справочники.Пользователи.НайтиПоКоду("Робот (центр - номенклатура)");
	задача.Записать();
	
	// 2я
	Если задача.Исполнитель.Наименование <> "Запахов И.А." тогда //если первая задача не на него 
		задача1 = задача.Скопировать();
		задача1.Дата = ТекущаяДата();
		задача1.Исполнитель = справочники.Пользователи.НайтиПоКоду("Запахов И.А.");
		задача1.Записать();   	
	КонецЕсли;
	
КонецПроцедуры

функция НайтиСоздатьДоговор(Организация, контрагент,ответственный)
	//поиск     

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Наименование ПОДОБНО ""%Расчеты с водителем*%""
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.Владелец = &Владелец
	|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.Прочее)";
	
	Запрос.УстановитьПараметр("Владелец", контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() тогда
		
		//создание если не нашли
		НовыйДоговор						 = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
		НовыйДоговор.ВалютаВзаиморасчетов	 = Константы.ВалютаУправленческогоУчета.Получить();
		НовыйДоговор.ВедениеВзаиморасчетов	 = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам;
		НовыйДоговор.Комментарий			 = "Расчеты с водителем (автосоздание " + Лев(ТекущаяДата(),10) + ")";
		НовыйДоговор.ВидДоговора			 = Перечисления.ВидыДоговоровКонтрагентов.Прочее;
		НовыйДоговор.Владелец				 = Контрагент;
		НовыйДоговор.Наименование			 = "Расчеты с водителем*";
		НовыйДоговор.ТипДоговора			 = Справочники.ТипыДоговоров.НайтиПоКоду("00004"); //Отсрочка;
		НовыйДоговор.Организация			 = Организация;
		//НовыйДоговор.ОтветственноеЛицо		 =  Справочники.Пользователи.НайтиПоКоду("Запахов И.А.");
		НовыйДоговор.ОтветственноеЛицо		 =  ответственный;
		НовыйДоговор.Записать();
		
		
		Возврат НовыйДоговор.Ссылка;
		
		
	иначе   //если нашли
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий()  тогда
			
			возврат ВыборкаДетальныеЗаписи.Ссылка;   		
			
		КонецЕсли;
	КонецЕсли;
	
	
	
КонецФункции

	