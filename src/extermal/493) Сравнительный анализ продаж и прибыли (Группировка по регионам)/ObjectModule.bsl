Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекстБонусы = ПолучитьБонусы(ложь).ТекстЗапросаБонусы;

	
	СКДНастроек = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	ТекстЗапроса = СКДНастроек.НаборыДанных.НаборДанных3.Элементы.НаборДанных1.Запрос;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(2017, 1, 1) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	0 КАК Бонус
	|ПОМЕСТИТЬ втБонусы",
	ТекстБонусы);
	ЭтотОбъект.СхемаКомпоновкиДанных.НаборыДанных.НаборДанных3.Элементы.НаборДанных1.Запрос = ТекстЗапроса;
	
	ТекстЗапроса2 = СКДНастроек.НаборыДанных.НаборДанных3.Элементы.НаборДанных2.Запрос;
	
	ТекстЗапроса2 = СтрЗаменить(ТекстЗапроса2,
	
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(2017, 1, 1) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	0 КАК Бонус
	|ПОМЕСТИТЬ втБонусы",
	ТекстБонусы);
    ЭтотОбъект.СхемаКомпоновкиДанных.НаборыДанных.НаборДанных3.Элементы.НаборДанных2.Запрос = ТекстЗапроса2;
	
	мУстановитьОтборДляФилиалов();  //31.07.2018
			
	КомпоновщикМакет = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакет.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//ДокументРезультат.ПоказатьУровеньГруппировокСтрок(2); //Уровень 3
	//ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1); //Уровень 2
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);   //Уровень 1
	
	ДокументРезультат.ФиксацияСлева = 1;
	
КонецПроцедуры

// отбор по подразделению менеджера
процедура мУстановитьОтборДляФилиалов() экспорт
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
	//	
	//	//+++ 26.06.2013 - ограничение по подразделению
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
			СообщитьОбОшибке("У вас недостаточно прав для просмотра данного отчета!");
			Возврат;
		КонецЕсли;
	//	
		Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") тогда 
			
			Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтчетыОтборПоДоговору") тогда
				СписокМенеджеров = ПолучитьСписокПользователейСвоейГруппы();
				эл1 = Новый ПолеКомпоновкиДанных("ДоговорКонтрагентаОтветственноеЛицо");
				
				ОтборПоДоговоруКонтрагента=неопределено; //31.07.2018 - чтобы не дублить!
				для i=0 по КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество()-1 цикл
					если КомпоновщикНастроек.Настройки.Отбор.Элементы[i].ЛевоеЗначение = эл1 тогда
					ОтборПоДоговоруКонтрагента=КомпоновщикНастроек.Настройки.Отбор.Элементы[i];
					прервать;
					КонецЕсли;
				КонецЦикла;
				если ОтборПоДоговоруКонтрагента=неопределено тогда
				ОтборПоДоговоруКонтрагента=КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				КонецЕсли;
			
				ОтборПоДоговоруКонтрагента.Использование=Истина;
				ОтборПоДоговоруКонтрагента.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
				ОтборПоДоговоруКонтрагента.ЛевоеЗначение=эл1;
				ОтборПоДоговоруКонтрагента.ПравоеЗначение=СписокМенеджеров;			
			
			иначеЕсли ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтчетыОтборПоКонтрагенту") тогда
				СписокКонтр = ПолучитьСписокКонтрагентовМенеджера(СписокМенеджеров);
				эл1 = Новый ПолеКомпоновкиДанных("Покупатель");
				
				ОтборПоПокупателю=неопределено;  //31.07.2018 - чтобы не дублить!
				для i=0 по КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество()-1 цикл
					если КомпоновщикНастроек.Настройки.Отбор.Элементы[i].ЛевоеЗначение = эл1 тогда
					ОтборПоПокупателю=КомпоновщикНастроек.Настройки.Отбор.Элементы[i];
					прервать;
					КонецЕсли;
				КонецЦикла;
				если ОтборПоПокупателю=неопределено тогда
				ОтборПоПокупателю=КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				КонецЕсли;
				
				ОтборПоПокупателю.Использование = Истина;
				ОтборПоПокупателю.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				ОтборПоПокупателю.ЛевоеЗначение=эл1;
				ОтборПоПокупателю.ПравоеЗначение = СписокКонтр;
				
			иначе  //31.07.2018 - все равно нужно ограничение по подразделению!
				//ДоступноеПодразделение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
				//эл1 = Новый ПолеКомпоновкиДанных("Подразделение");
				ДоступноеПодразделение = ПараметрыСеанса.ТекущийПользователь.НаправлениеПродаж;
				эл1 = Новый ПолеКомпоновкиДанных("НаправлениеПродаж");
				
				ОтборПодразделение=неопределено;//31.07.2018 - чтобы не дублить!
				для i=0 по КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество()-1 цикл
					если КомпоновщикНастроек.Настройки.Отбор.Элементы[i].ЛевоеЗначение = эл1 тогда
					ОтборПодразделение=КомпоновщикНастроек.Настройки.Отбор.Элементы[i];
					прервать;
					КонецЕсли;
				КонецЦикла;
				если ОтборПодразделение=неопределено тогда
					ОтборПодразделение=КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				КонецЕсли;
				
				ОтборПодразделение.Использование=Истина;
				ОтборПодразделение.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
				ОтборПодразделение.ЛевоеЗначение=эл1;
				ОтборПодразделение.ПравоеЗначение=ДоступноеПодразделение;			
			КонецЕсли;
		
		Иначе
		//ДоступноеПодразделение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
		//эл1 = Новый ПолеКомпоновкиДанных("Подразделение");
				ДоступноеПодразделение = ПараметрыСеанса.ТекущийПользователь.НаправлениеПродаж;
				эл1 = Новый ПолеКомпоновкиДанных("НаправлениеПродаж");
			
			ОтборПодразделение=неопределено; //31.07.2018 - чтобы не дублить!
			для i=0 по КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество()-1 цикл
				если КомпоновщикНастроек.Настройки.Отбор.Элементы[i].ЛевоеЗначение = эл1 тогда
				ОтборПодразделение=КомпоновщикНастроек.Настройки.Отбор.Элементы[i];
				прервать;
				КонецЕсли;
			КонецЦикла;
			если ОтборПодразделение=неопределено тогда
				ОтборПодразделение=КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			КонецЕсли;
			
			ОтборПодразделение.Использование=Истина;
			ОтборПодразделение.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
			ОтборПодразделение.ЛевоеЗначение=эл1;
			ОтборПодразделение.ПравоеЗначение=ДоступноеПодразделение;		
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры	
