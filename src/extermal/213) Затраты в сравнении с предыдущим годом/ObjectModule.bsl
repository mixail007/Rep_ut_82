Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	//ЗаполнитьНачальныеНастройкиПоМакету(ПолучитьМакет("ПараметрыОтчетовПродажиКомпании"), СтруктураПредставлениеПолей, МассивОтбора, ОбщийОтчет, "СписокКроссТаблица");
	Текст = "ВЫБРАТЬ СУММА(СуммаТекущийГод) СуммаТекущийГод, СУММА(СуммаПрошлыйГод)  СуммаПрошлыйГод,
|СУММА(СуммаТекущийГод)-СУММА(СуммаПрошлыйГод) АбсолютноеОтклонение,
|ВЫБОР КОГДА СУММА(СуммаПрошлыйГод)>0 ТОГДА СУММА(СуммаТекущийГод)/СУММА(СуммаПрошлыйГод) ИНАЧЕ 0 КОНЕЦ ОтносительноеОтклонение
|ИЗ
|(ВЫБРАТЬ
|ЕстьNULL(ЗатратыТекущийГод.Подразделение,ЗатратыПрошлыйГод.Подразделение) Подразделение,
|ЕстьNULL(ЗатратыТекущийГод.СтатьяЗатрат,ЗатратыПрошлыйГод.СтатьяЗатрат) СтатьяЗатрат,
|ЕстьNULL(ЗатратыТекущийГод.НоменклатурнаяГруппа,ЗатратыПрошлыйГод.НоменклатурнаяГруппа) НоменклатурнаяГруппа,
|ЕстьNULL(ЗатратыТекущийГод.СуммаОборот,0) СуммаТекущийГод,
|ЕстьNULL(ЗатратыПрошлыйГод.СуммаОборот,0) СуммаПрошлыйГод

|ИЗ

|(ВЫБРАТЬ
|	Подразделение,
|	СтатьяЗатрат,
|	НоменклатурнаяГруппа,
|	СуммаОборот
|ИЗ
|	РегистрНакопления.Затраты.Обороты(&ДатаНач,&ДатаКон)) КАК ЗатратыТекущийГод
|ПОЛНОЕ СОЕДИНЕНИЕ
|(ВЫБРАТЬ
|	Подразделение,
|	СтатьяЗатрат,
|	НоменклатурнаяГруппа,
|	СуммаОборот
|ИЗ
|	РегистрНакопления.Затраты.Обороты(ДОБАВИТЬКДАТЕ(&ДатаНач,ГОД,-1), ДОБАВИТЬКДАТЕ(&ДатаКон,ГОД,-1)) ) КАК ЗатратыПрошлыйГод 
|ПО 	ЗатратыТекущийГод.Подразделение=ЗатратыПрошлыйГод.Подразделение
|И ЗатратыТекущийГод.СтатьяЗатрат=ЗатратыПрошлыйГод.СтатьяЗатрат
|И ЗатратыТекущийГод.НоменклатурнаяГруппа=ЗатратыПрошлыйГод.НоменклатурнаяГруппа   ) А
|{ГДЕ СтатьяЗатрат.*, Подразделение.*, НоменклатурнаяГруппа.*}
|ИТОГИ СУММА(СуммаТекущийГод) , СУММА(СуммаПрошлыйГод),
|СУММА(СуммаТекущийГод)-СУММА(СуммаПрошлыйГод) АбсолютноеОтклонение,
|ВЫБОР КОГДА СУММА(СуммаПрошлыйГод)>0 ТОГДА 100*(СУММА(СуммаТекущийГод)/СУММА(СуммаПрошлыйГод)-1) ИНАЧЕ 0 КОНЕЦ ОтносительноеОтклонение
| ПО ОБЩИЕ
|{ ИТОГИ ПО СтатьяЗатрат.*, Подразделение.*, НоменклатурнаяГруппа.*}";

	СтруктураПредставлениеПолей = Новый Структура("
	|СтатьяЗатрат,
	|Подразделение,
	|НоменклатурнаяГруппа,
	|СуммаТекущийГод,
	|СуммаПрошлыйГод,
	|АбсолютноеОтклонение,
	|ОтносительноеОтклонение", 
	"Статья затрат",
	"Подразделение",
	"Номенклатурная группа",
	"Сумма тек. год",
	"Сумма прош. год",
	"Абсолютное отклонение",
	"Относительное отклонение");
	
	
	ПостроительОтчета.Текст = Текст;
	//МассивОтбора = Новый Массив;
	//МассивОтбора.Добавить("Покупатель");
	//МассивОтбора.Добавить("Номенклатура");
	//МассивОтбора.Добавить("Подразделение");
	
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Истина;
	
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаТекущийГод", "Сумма тек. год", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаПрошлыйГод", "Сумма прошл. год", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("АбсолютноеОтклонение", "Абсолютное отклонение", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ОтносительноеОтклонение", "Относительное отклонение", Истина, "ЧЦ=15; ЧДЦ=2");

	ОбщийОтчет.мНазваниеОтчета = "Затраты сравнение по аналитике";
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Установим дату начала отчета
	Если ЗначениеНеЗаполнено(ОбщийОтчет.ДатаНач) Тогда
		Если Не ЗначениеНеЗаполнено(глТекущийПользователь) Тогда
			ОбщийОтчет.ДатаНач = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("РентабельностьПродаж", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ПроцентНаценки", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПРоцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "Затраты";