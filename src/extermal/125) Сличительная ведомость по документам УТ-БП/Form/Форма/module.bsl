Перем ШрифтЖирный,ЦветНоменклатуры,ШрифтНаклонный;

// Хранит таблицу соответствия граф журнала и реквизитов документов
Перем мВыводимыеГрафы;

// Хранит список выводимых граф в журнале
Перем мСписокГрафЖурнала;

// Хранит таблицу, предназначенную для быстрого получения списка документов,
// которые вводятся на основании искомого
Перем мВводНаОсновании;

// Хранит список документов для данной конфигурации
Перем мСписокОбрабатываемыхДокументов;

// Хранит список документов имеющих нулевую длину номера
Перем мСписокДокументовБезНомера;

// Хранит имя документа, для которого заполнены пункты меню "Ввод на основании"
// и "Перейти". Позволяет не выполнять их перезаполнение для одного и того же документа.
Перем мМенюДляДокумента;

// Сожержит флаг наличия в конфигурации универсального отчета "ОтчетПоДвижению"
Перем мЕстьОтчетПоДвижению;

// Сожержит флаг наличия в конфигурации общей формы "ФормаСтруктурыПодчиненности"
Перем мЕстьФормаСтруктурыПодчиненности;
Перем мСписокДокументовДляРегистрации;


Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	РезультатПодключения = ВыполнитьПодключениеКИБПриемнику();
	
	Если РезультатПодключения = Неопределено Тогда
		Предупреждение("Возникли ошибки при подключении к информационной базе-приемнику.");
		Возврат
	КонецЕсли;
	Если НачДата=Дата(1,1,1) тогда
		Предупреждение("Выберите дату начала периода!");
		Возврат
	КонецЕсли;
	Если КонДата=Дата(1,1,1) тогда
		КонДата = НачДата;
	КонецЕсли;

	Если НачалоДня(НачДата) > КонецДня(КонДата) тогда
		Предупреждение("     Неверно задан период!
					   |Дата начала > даты окончания!");
		Возврат
	КонецЕсли;
	ДеревоОтличий = ПолучитьДеревоОтличий(НачалоДня(НачДата),КонецДня(КонДата));
	НастроитьОтображение(ДеревоОтличий);
КонецПроцедуры

Процедура КоманднаяПанель1НастройкаПодключения(Кнопка)
	ФормаНастройкиПодключения = ПолучитьФорму("ФормаНастройкиПодключения");
	ФормаНастройкиПодключения.Открыть();
КонецПроцедуры

Процедура ПриЗакрытии()
	СтруктураПодключения = Новый Структура;
	
	Для каждого Реквизит Из Метаданные().Реквизиты Цикл
		
		СтруктураПодключения.Вставить(Реквизит.Имя,ЭтотОбъект[Реквизит.Имя]);
	
	КонецЦикла; 
	
	СохранитьЗначение("СтруктураНастройкиПодключения_БП",СтруктураПодключения);
КонецПроцедуры

Процедура ПриОткрытии()
	СтруктураПодключения = ВосстановитьЗначение("СтруктураНастройкиПодключения_БП");
	Если типЗнч(СтруктураПодключения) = Тип("Структура") Тогда
		Для каждого Эл Из СтруктураПодключения Цикл
		
			ЭтотОбъект[Эл.Ключ] = Эл.Значение;
		
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура НастроитьОтображение(Данные)
	
// предварительно готовим список документов, которые зарегистрированы	
СписокЗарегистрированныхДокументов = Новый СписокЗначений;
	
Узел = ПланыОбмена.ОбменУТ_БП.НайтиПоКоду("БП");
Если Не Узел.Пустая() Тогда
   Выборка = ПланыОбмена.ВыбратьИзменения(Узел, Узел.НомерОтправленного);
   
   Пока Выборка.Следующий() Цикл
	   ЗарегистрированныйОбъект=Выборка.Получить();
	   Если Лев(Строка(ТипЗнч(ЗарегистрированныйОбъект)),8)="Документ" Тогда
		   СписокЗарегистрированныхДокументов.Добавить(ЗарегистрированныйОбъект.Ссылка);
	   КонецЕсли;  
   КонецЦикла;	   
КонецЕсли;

	
	НомерПП=0;
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	ТабДок.Очистить();
	Макет = ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьЗаголовок.Параметры.Период = ПредставлениеПериода(НачалоДня(НачДата),КонецДня(КонДата),"ФП=Истина");
	ТабДок.Вывести(ОбластьЗаголовок);

    
    ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("Шапка");
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	Для каждого строка ИЗ Данные Цикл
		
		Если не ТребуетсяОтображатьДокумент(строка.Документ) Тогда
			    Продолжить;
		КонецЕсли;	
		
	НомерПП=НомерПП+1;
	ОбластьСтрокаДокумент = Макет.ПолучитьОбласть("СтрокаДокумента");
	ОбластьСтрокаДокумент.Параметры.Заполнить(строка);
	ОбластьСтрокаДокумент.Параметры.НомерПП=НомерПП;
	Если ЕстьРеквизитДокумента("СуммаДокумента",строка.Документ.Метаданные()) Тогда
		ОбластьСтрокаДокумент.Параметры.СуммаДокумента=строка.Документ.СуммаДокумента;
	КонецЕсли;	
	
	Если ЕстьРеквизитДокумента("Контрагент",строка.Документ.Метаданные()) Тогда
		ОбластьСтрокаДокумент.Параметры.Контрагент=строка.Документ.Контрагент;
	КонецЕсли;
	
	Если ТипЗнч(строка.Документ) =Тип("ДокументСсылка.СчетФактураВыданный") ИЛИ
		 ТипЗнч(строка.Документ) =Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		 Если не ЗначениеНеЗаполнено(строка.Документ.ДокументОснование) И ЕстьРеквизитДокумента("СуммаДокумента",строка.Документ.ДокументОснование.Метаданные()) Тогда
			 ОбластьСтрокаДокумент.Параметры.СуммаДокумента=строка.Документ.ДокументОснование.СуммаДокумента;
		 КонецЕсли; 	 
		 Если не ЗначениеНеЗаполнено(строка.Документ.ДокументОснование) И ЕстьРеквизитДокумента("Контрагент",строка.Документ.ДокументОснование.Метаданные()) Тогда
			 ОбластьСтрокаДокумент.Параметры.Контрагент=строка.Документ.ДокументОснование.Контрагент;
		 КонецЕсли; 	 
	КОнецЕсли;	 
	ОбластьСтрокаДокумент.Параметры.Примечание = строка.Примечание; //+++
	
	Если СписокЗарегистрированныхДокументов.НайтиПоЗначению(строка.Документ) <> Неопределено Тогда
		ОбластьСтрокаДокумент.Области.СтрокаДокумента.ЦветФона=WebЦвета.СветлоРозовый;
	КонецЕсли;	
		
	
	ТабДок.Вывести(ОбластьСтрокаДокумент);
	КонецЦикла;	
    //ТабДок.ТолькоПросмотр=Истина;
    ЭлементыФормы.ПолеТабличногоДокумента.ТолькоПросмотр=Истина;
КонецПроцедуры

Функция  ТребуетсяОтображатьДокумент(Документ)
	  НайдЗнач=  мСписокОбрабатываемыхДокументов.НайтиПоЗначению(Документ.Метаданные().Имя);
	  Если НайдЗнач=Неопределено Тогда
		  Возврат Ложь;
	  ИначеЕсли НайдЗнач.Пометка Тогда
		  Возврат Истина;
	  Иначе	  
		 Возврат Ложь; 
	  КонецЕсли;	  
КонецФункции


Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1НастройкаОтображения(Кнопка)
	ФормаНастройки = ОбработкаОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма);
	//ФормаНастройки.СписокГрафЖурнала = мСписокГрафЖурнала.Скопировать();
	ФормаНастройки.СписокОбрабатываемыхДокументов = мСписокОбрабатываемыхДокументов.Скопировать();
	//ФормаНастройки.ВыводимыеГрафы = мВыводимыеГрафы.Скопировать();
	//Для Каждого СтрокаГрафы Из ФормаНастройки.ВыводимыеГрафы Цикл
	//	СтрокаГрафы.СсылкаНаГрафу = ФормаНастройки.СписокГрафЖурнала.Получить(мСписокГрафЖурнала.Индекс(СтрокаГрафы.СсылкаНаГрафу));
	//КонецЦикла;
	Если Не ФормаНастройки.ОткрытьМодально()=Неопределено Тогда
		//мСписокГрафЖурнала = ФормаНастройки.СписокГрафЖурнала;
		мСписокОбрабатываемыхДокументов = ФормаНастройки.СписокОбрабатываемыхДокументов;
		//мВыводимыеГрафы = ФормаНастройки.ВыводимыеГрафы;
		//НастроитьДополнительныеКолонки();
		//ОбновитьСписок();
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель1Выгрузить(Кнопка)
	
//Попытка   // чтобы можно было перезаписывать объекты - надо гарантировать, что режим монопольный
//	УстановитьМонопольныйРежим(Истина);
//Исключение
//	Текст = "С информационной базой работают другие пользователи.
//	|В данный момент невозможно установить монопольный режим!";
//	Предупреждение(Текст, 10);
//КонецПопытки;
	
	
	Для каждого ВыделеннаяОбласть ИЗ ЭлементыФормы.ПолеТабличногоДокумента.ВыделенныеОбласти Цикл
		ИмяОбласти=ВыделеннаяОбласть.Имя;		
		
		индДвоеточия=Найти(ИмяОбласти,":");
		
		Если индДвоеточия>0 Тогда // несколько ячеек
			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			НачальныйНомер=Число(Сред(ИмяОбласти,индR1+1,индC1-индR1-1));
			ОстСтрока=Сред(ИмяОбласти,индДвоеточия);
			
			индR2=Найти(ОстСтрока,"R");
			индC2=Найти(ОстСтрока,"C");
			КонечныйНомер=Число(Сред(ОстСтрока,индR2+1,индC2-индR2-1));
			
			Для сч=НачальныйНомер по КонечныйНомер Цикл
				диапазон = "R"+Строка(сч)+"C1:R"+Строка(сч)+"C5";
				мСсылкаНаДокумент=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C2").Расшифровка;
				Если не ЗначениеНеЗаполнено(мСсылкаНаДокумент) Тогда 
					ЭлементыФормы.ПолеТабличногоДокумента.Область(диапазон).ЦветФона=WebЦвета.СветлоРозовый;
					Если мСписокДокументовДляРегистрации.НайтиПоЗначению(мСсылкаНаДокумент)=Неопределено Тогда
						мСписокДокументовДляРегистрации.Добавить(мСсылкаНаДокумент);
						//Сообщить(мСсылкаНаДокумент);
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
			
		Иначе // одна ячейка

			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			сч=Число(Сред(ИмяОбласти,индR1+1,индC1-индR1-1));
			диапазон = "R"+Строка(сч)+"C1:R"+Строка(сч)+"C5";
			мСсылкаНаДокумент=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C2").Расшифровка;
			Если не ЗначениеНеЗаполнено(мСсылкаНаДокумент) Тогда 
				ЭлементыФормы.ПолеТабличногоДокумента.Область(диапазон).ЦветФона=WebЦвета.СветлоРозовый;
					Если мСписокДокументовДляРегистрации.НайтиПоЗначению(мСсылкаНаДокумент)=Неопределено Тогда
						мСписокДокументовДляРегистрации.Добавить(мСсылкаНаДокумент);
						//Сообщить(мСсылкаНаДокумент);
					КонецЕсли;	
			КонецЕсли;


		КонецЕсли;	
		
				
КонецЦикла;	

	//УзелОбмена = ПланыОбмена.ОбменУТ_БП.НайтиПоНаименованию("БП");
		
	Для сч=0 по мСписокДокументовДляРегистрации.Количество()-1 Цикл
	ТекущаяСтрока = мСписокДокументовДляРегистрации[сч];
	
	//Объект = Новый УдалениеОбъекта(ТекущаяСтрока.Значение); 
	//ПланыОбмена.ЗарегистрироватьИзменения(УзелОбмена, Объект);
	ДокументОбъект=ТекущаяСтрока.Значение.ПолучитьОбъект();
	
	ДокументОбъект.ОбменДанными.Загрузка = истина; //+++ 19.10.2011 для перезаписи даже в закрытом периоде?!
	
	ЗарегистрироватьОбъект(ДокументОбъект,Ложь,Истина,Истина);
	КонецЦикла;
		
	
	

КонецПроцедуры

Процедура НачДатаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	НачДата = НачДата + Направление*86400;
	Если НачДата>КонДата тогда
	КонДата = НачДата;
	КонецЕсли;
КонецПроцедуры

Процедура КонДатаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	КонДата = КонДата + Направление*86400;
	Если КонДата<НачДата тогда
		НачДата = КонДата;
	КонецЕсли;
КонецПроцедуры


//------------Убираем-------------------
Процедура КоманднаяПанель1СнятьСвыгрузки(Кнопка)
	
	Для каждого ВыделеннаяОбласть ИЗ ЭлементыФормы.ПолеТабличногоДокумента.ВыделенныеОбласти Цикл
		ИмяОбласти=ВыделеннаяОбласть.Имя;		
		
		индДвоеточия=Найти(ИмяОбласти,":");
		
		Если индДвоеточия>0 Тогда // несколько ячеек
			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			НачальныйНомер=Число(Сред(ИмяОбласти,индR1+1,индC1-индR1-1));
			ОстСтрока=Сред(ИмяОбласти,индДвоеточия);
			
			индR2=Найти(ОстСтрока,"R");
			индC2=Найти(ОстСтрока,"C");
			КонечныйНомер=Число(Сред(ОстСтрока,индR2+1,индC2-индR2-1));
			
			Для сч=НачальныйНомер по КонечныйНомер Цикл
				диапазон = "R"+Строка(сч)+"C1:R"+Строка(сч)+"C5";
				мСсылкаНаДокумент=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C2").Расшифровка;
				
				Если ЗначениеЗаполнено(мСсылкаНаДокумент) Тогда    
					ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)).ЦветФона=WebЦвета.Белый;
					//ЭлементыФормы.ПолеТабличногоДокумента.Область(диапазон).ЦветФона=WebЦвета.Белый;
					
					элементСписка = мСписокДокументовДляРегистрации.НайтиПоЗначению(мСсылкаНаДокумент);
					Если элементСписка<>Неопределено Тогда  //УДАЛЯЕМ
//--------------------------Удаляем регистрацию в планах обмена--------------------	
						мСписокДокументовДляРегистрации.Удалить(элементСписка);
						//ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C2").Расшифровка = неопределено;
			            ДокументОбъект = мСсылкаНаДокумент.ПолучитьОбъект();
			ПланыОбмена.УдалитьРегистрациюИзменений(ПланыОбмена.ОбменУТ_БП.НайтиПоКоду("БП"), мСсылкаНаДокумент);  //+++ 21.10.2011
					//Сообщить(мСсылкаНаДокумент);
						Если ДокументОбъект.ОбменДанными.Получатели.Количество()>0 тогда
						ДокументОбъект.ОбменДанными.Загрузка = истина;
						ДокументОбъект.ОбменДанными.Получатели.Автозаполнение=Ложь;
						ДокументОбъект.ОбменДанными.Получатели.Очистить();
						ДокументОбъект.ОбменДанными.Отправитель = Неопределено; 
						ДокументОбъект.Записать();
                        КонецЕсли;
	//------------------------	
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
			
		Иначе // одна ячейка

			индR1=Найти(ИмяОбласти,"R");
			индC1=Найти(ИмяОбласти,"C");
			
			сч=Число(Сред(ИмяОбласти,индR1+1,индC1-индR1-1));
			диапазон = "R"+Строка(сч)+"C1:R"+Строка(сч)+"C5";
			
			мСсылкаНаДокумент=ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C2").Расшифровка;
			
			Если ЗначениеЗаполнено(мСсылкаНаДокумент) Тогда 
					ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)).ЦветФона=WebЦвета.Белый;
					//ЭлементыФормы.ПолеТабличногоДокумента.Область(диапазон).ЦветФона=WebЦвета.Белый;
				 элементСписка = мСписокДокументовДляРегистрации.НайтиПоЗначению(мСсылкаНаДокумент);
				 
				 Если элементСписка<>Неопределено Тогда  //УДАЛЯЕМ
	//--------------------------Удаляем регистрацию в планах обмена--------------------	
						мСписокДокументовДляРегистрации.Удалить(элементСписка);
						//ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+Строка(сч)+"C2").Расшифровка = неопределено;
			            ДокументОбъект = мСсылкаНаДокумент.ПолучитьОбъект();
	ПланыОбмена.УдалитьРегистрациюИзменений(ПланыОбмена.ОбменУТ_БП.НайтиПоКоду("БП"), мСсылкаНаДокумент);  //+++ 21.10.2011
					//Сообщить(мСсылкаНаДокумент);
						Если ДокументОбъект.ОбменДанными.Получатели.Количество()>0 тогда
						ДокументОбъект.ОбменДанными.Загрузка = истина;
						ДокументОбъект.ОбменДанными.Получатели.Автозаполнение=Ложь;
						ДокументОбъект.ОбменДанными.Получатели.Очистить();
						ДокументОбъект.ОбменДанными.Отправитель = Неопределено; 
						ДокументОбъект.Записать();
                        КонецЕсли;
	//------------------------	
				КонецЕсли;	
			КонецЕсли;
	КонецЕсли;		
КонецЦикла;	

	//УзелОбмена = ПланыОбмена.ОбменУТ_БП.НайтиПоНаименованию("БП");
				
КонецПроцедуры


мСписокДокументовДляРегистрации= Новый СписокЗначений;
мСписокОбрабатываемыхДокументов = Новый СписокЗначений;
мСписокДокументовБезНомера = Новый СписокЗначений;
Для Каждого Док Из Метаданные.Документы Цикл
	Если НЕ ПравоДоступа("Чтение", Док) Тогда
		Продолжить;
	КонецЕсли;
	мСписокОбрабатываемыхДокументов.Добавить(Док.Имя, Док.Синоним, Истина, БиблиотекаКартинок.Документ);
	Если Не Док.ДлинаНомера Тогда
		мСписокДокументовБезНомера.Добавить(Док.Имя);
	КонецЕсли;
КонецЦикла;
мСписокОбрабатываемыхДокументов.СортироватьПоПредставлению();


ШрифтЖирный = Новый Шрифт(,,Истина);
ШрифтНаклонный= Новый Шрифт(,,,Истина);
ЦветНоменклатуры = WebЦвета.СветлоЖелтыйЗолотистый;