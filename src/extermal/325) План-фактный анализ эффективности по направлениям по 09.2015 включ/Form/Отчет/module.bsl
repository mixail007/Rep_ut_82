
Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОтчетыПланФактныйАнализЭффективностиПоНаправлениямОтчет_68c8f9b7-e818-4554-96a8-10a44612f7e0", ПостроительОтчетаОтчет.ПолучитьНастройки());

КонецПроцедуры

//Процедура ДействияФормыОтчетНастройка(Кнопка)

//	Форма = ВнешнийОтчетОбъект.ПолучитьФорму("ОтчетНастройка");
//	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
//	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
//	Если Форма.ОткрытьМодально() = Истина Тогда
//		ОтчетВывести();
//	Иначе
//		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
//	КонецЕсли;

//КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок, ДатаКон, ДатаНач);

КонецПроцедуры

Процедура Отчет(ТабДок, ДатаКон, ДатаНач) Экспорт

	Макет = ПолучитьМакет("Отчет");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьОбъектПланирования = Макет.ПолучитьОбласть("ОбъектПланирования");
	ОбластьОбъектПланированияМенеджер = Макет.ПолучитьОбласть("ОбъектПланированияМенеджер");
	ОбластьПоказательЭффективности = Макет.ПолучитьОбласть("ПоказательЭффективности");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	//По отделу развития вцелом
	ЗапросПоОтделу = Новый Запрос;
	ЗапросПоОтделу.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	ЗапросПоОтделу.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	ЗапросПоОтделу.УстановитьПараметр("ПустаяСсылка", Справочники.НаправленияПродаж.ПустаяСсылка());
	ЗапросПоОтделу.Текст = "ВЫБРАТЬ
	                       |	Планы.ПоказательЭффективности КАК ПоказательЭффективности,
	                       |	Планы.ПараметрПоказателя,
	                       |	ЕСТЬNULL(Планы.ЗначениеПланОборот, 0) КАК ЗначениеПлан,
						   |	ЕСТЬNULL(Планы.Вес,0) КАК Вес
	                       |ИЗ
	                       |	РегистрНакопления.ПланыПродажПоПоказателямЭффективности.Обороты(
	                       |			&ДатаНач,
	                       |			&ДатаКон,
	                       |			,
	                       |			ОбъектПланирования ССЫЛКА Справочник.НаправленияПродаж
	                       |				И НЕ ОбъектПланирования = &ПустаяСсылка) КАК Планы
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	Планы.ПоказательЭффективности,
	                       |	Планы.ПараметрПоказателя,
	                       |	ЕСТЬNULL(Планы.ЗначениеПланОборот, 0),
	                       |	Планы.Вес
	                       |
	                       |УПОРЯДОЧИТЬ ПО
	                       |	ПоказательЭффективности
	                       |АВТОУПОРЯДОЧИВАНИЕ";
						   
	РезультатПоОтделу = ЗапросПоОтделу.Выполнить().Выбрать();
	
	Если РезультатПоОтделу.Количество()>0 Тогда
		ОбластьОбъектПланирования.Параметры.ОбъектПланирования = "Отдел развития";
		ТабДок.Вывести(ОбластьОбъектПланирования, РезультатПоОтделу.Уровень());
	КонецЕсли;
	
	Пока РезультатПоОтделу.Следующий() Цикл
		ОбластьПоказательЭффективности.Параметры.ПоказательЭффективности = РезультатПоОтделу.ПоказательЭффективности.Наименование + ?(РезультатПоОтделу.ПараметрПоказателя = Неопределено, "", " " + РезультатПоОтделу.ПараметрПоказателя.Наименование);
		ЗначениеПлан = 0;
		ЗначениеФакт = 0;
		ЗначениеПлан = РезультатПоОтделу.ЗначениеПлан;
		ОбластьПоказательЭффективности.Параметры.ЗначениеПлан = ЗначениеПлан;
		//считать и выводить факт
		Если НЕ РезультатПоОтделу.ПоказательЭффективности.ТекстЗапроса = "" Тогда
			
			ТекстЗапроса = РезультатПоОтделу.ПоказательЭффективности.ТекстЗапроса;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//отбор по менеджеру или направлению", "ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&НаправлениеПродаж)");
			
			ЗапросФакт = Новый Запрос;
			ЗапросФакт.УстановитьПараметр("КонДата", КонецДня(ДатаКон));
			ЗапросФакт.УстановитьПараметр("НачДата", НачалоДня(ДатаНач));
			НаправлениеПродаж = Новый СписокЗначений;
			НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.Москва);
			НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.НижнийНовгород);
			НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.Подмосковье);
			НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.СеверЮг);
			НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.ФилиалЕкб);
			НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.ФилиалРнД);
			НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.ФилиалСПб);
			НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.ЦентрРоссии);
			НаправлениеПродаж.Добавить(Справочники.НаправленияПродаж.БондаренкоКорпоративныеКлиенты);
			
			ЗапросФакт.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
			СписокКонтрагентов = Новый СписокЗначений;
			СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001549"));
			СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000382"));
			ЗапросФакт.УстановитьПараметр("ШинтрейдСПб", СписокКонтрагентов);
			
			Если РезультатПоОтделу.ПараметрПоказателя <> Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
				ДлинаЗапроса = СтрДлина(ТекстЗапроса);
				СписокПараметров = РезультатПоОтделу.ПараметрПоказателя.СписокПараметров.ВыгрузитьКолонку("Параметр");
				Если ТипЗНЧ(РезультатПоОтделу.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
					ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.НоменклатурнаяГруппа В(&СписокПараметров))";
				ИначеЕсли ТипЗНЧ(РезультатПоОтделу.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Производители") Тогда
					ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Производитель В(&СписокПараметров))";	
				ИначеЕсли ТипЗНЧ(РезультатПоОтделу.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Типоразмеры") Тогда
					ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Типоразмер В(&СписокПараметров))";	
				ИначеЕсли ТипЗНЧ(РезультатПоОтделу.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Номенклатура") Тогда
					ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура В ИЕРАРХИИ(&СписокПараметров))";	
				ИначеЕсли ТипЗНЧ(РезультатПоОтделу.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.МоделиТоваров") Тогда
					ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Модель В(&СписокПараметров))";	
				КонецЕсли;
				ЗапросФакт.УстановитьПараметр("СписокПараметров", СписокПараметров);
			КонецЕсли;
			
			ЗапросФакт.Текст = ТекстЗапроса;
			
			РезультатФакт = ЗапросФакт.Выполнить().Выбрать();
			Если РезультатФакт.Следующий() Тогда
				ЗначениеФакт = РезультатФакт.Значение;
			КонецЕсли;
			ОбластьПоказательЭффективности.Параметры.ЗначениеФакт = ЗначениеФакт;
			
		КонецЕсли;
		
		//% выполнения
		ПроцентВыполнения = ?(ЗначениеПлан=0,0,ЗначениеФакт*100/ЗначениеПлан);
		ОбластьПоказательЭффективности.Параметры.ПроцентВыполнения = Формат(ПроцентВыполнения, "ЧДЦ=0");
		
		//остаток до 100%
		ОстатокДо100 = ЗначениеПлан-ЗначениеФакт;
		ОбластьПоказательЭффективности.Параметры.ОстатокДо100 = ?(ОстатокДо100>0,ОстатокДо100,0);
		
		//вес
		ОбластьПоказательЭффективности.Параметры.Вес = РезультатПоОтделу.Вес;
		
		//KPI
		КоэффициентЭффективности = РезультатПоОтделу.Вес * ПроцентВыполнения;
		ОбластьПоказательЭффективности.Параметры.КоэффициентЭффективности = КоэффициентЭффективности;
		
		ТабДок.Вывести(ОбластьПоказательЭффективности, РезультатПоОтделу.Уровень()+1);
		
	КонецЦикла;
						   
	//По направлениям					   
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.НаправленияПродаж.ПустаяСсылка());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Планы.ОбъектПланирования КАК ОбъектПланирования,
	|	Планы.ПоказательЭффективности КАК ПоказательЭффективности,
	|	Планы.ПараметрПоказателя,
	|	ЕСТЬNULL(Планы.ЗначениеПланОборот, 0) КАК ЗначениеПлан,
	|	ЕСТЬNULL(Планы.Вес,0) КАК Вес
	|ИЗ
	|	РегистрНакопления.ПланыПродажПоПоказателямЭффективности.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			ОбъектПланирования ССЫЛКА Справочник.НаправленияПродаж
	|				И НЕ ОбъектПланирования = &ПустаяСсылка) КАК Планы
	|
	|СГРУППИРОВАТЬ ПО
	|	Планы.ОбъектПланирования,
	|	Планы.ПоказательЭффективности,
	|	Планы.ПараметрПоказателя,
	|	ЕСТЬNULL(Планы.ЗначениеПланОборот, 0),
	|	Планы.Вес
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектПланирования,
	|	ПоказательЭффективности
	|ИТОГИ ПО
	|	ОбъектПланирования
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Результат.Следующий() Цикл
		ОбластьОбъектПланирования.Параметры.ОбъектПланирования = Результат.ОбъектПланирования;
		ТабДок.Вывести(ОбластьОбъектПланирования, Результат.Уровень());
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбластьПоказательЭффективности.Параметры.ПоказательЭффективности = Выборка.ПоказательЭффективности.Наименование + ?(Выборка.ПараметрПоказателя = Неопределено, "", " " + Выборка.ПараметрПоказателя.Наименование);
			ЗначениеПлан = 0;
			ЗначениеФакт = 0;
			ЗначениеПлан = Выборка.ЗначениеПлан;
			ОбластьПоказательЭффективности.Параметры.ЗначениеПлан = Выборка.ЗначениеПлан;
			//считать и выводить факт
			
			Если НЕ Выборка.ПоказательЭффективности.ТекстЗапроса = "" Тогда
				
				ТекстЗапроса = Выборка.ПоказательЭффективности.ТекстЗапроса;
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//отбор по менеджеру или направлению", "ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
				
				ЗапросФакт = Новый Запрос;
				ЗапросФакт.УстановитьПараметр("КонДата", КонецДня(ДатаКон));
				ЗапросФакт.УстановитьПараметр("НачДата", НачалоДня(ДатаНач));
				ЗапросФакт.УстановитьПараметр("НаправлениеПродаж", Результат.ОбъектПланирования);
				СписокКонтрагентов = Новый СписокЗначений;
				СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001549"));
				СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000382"));
				ЗапросФакт.УстановитьПараметр("ШинтрейдСПб", СписокКонтрагентов);
				
				Если Выборка.ПараметрПоказателя <> Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
					ДлинаЗапроса = СтрДлина(ТекстЗапроса);
					СписокПараметров = Выборка.ПараметрПоказателя.СписокПараметров.ВыгрузитьКолонку("Параметр");
					Если ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
						ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.НоменклатурнаяГруппа В(&СписокПараметров))";
					ИначеЕсли ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Производители") Тогда
						ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Производитель В(&СписокПараметров))";	
					ИначеЕсли ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Типоразмеры") Тогда
						ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Типоразмер В(&СписокПараметров))";	
					ИначеЕсли ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Номенклатура") Тогда
						ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура В ИЕРАРХИИ(&СписокПараметров))";	
					ИначеЕсли ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.МоделиТоваров") Тогда
						ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Модель В(&СписокПараметров))";	
					КонецЕсли;
					ЗапросФакт.УстановитьПараметр("СписокПараметров", СписокПараметров);
				КонецЕсли;
				
				ЗапросФакт.Текст = ТекстЗапроса;
				
				РезультатФакт = ЗапросФакт.Выполнить().Выбрать();
				Если РезультатФакт.Следующий() Тогда
					ЗначениеФакт = РезультатФакт.Значение;
				КонецЕсли;
				ОбластьПоказательЭффективности.Параметры.ЗначениеФакт = ЗначениеФакт;
			КонецЕсли;
			
			//% выполнения
			ПроцентВыполнения = ?(ЗначениеПлан=0,0,ЗначениеФакт*100/ЗначениеПлан);
			ОбластьПоказательЭффективности.Параметры.ПроцентВыполнения = Формат(ПроцентВыполнения, "ЧДЦ=0");
			
			//остаток до 100%
			ОстатокДо100 = ЗначениеПлан-ЗначениеФакт;
			ОбластьПоказательЭффективности.Параметры.ОстатокДо100 = ?(ОстатокДо100>0,ОстатокДо100,0);
			
			//вес
			ОбластьПоказательЭффективности.Параметры.Вес = Выборка.Вес;
			
			//KPI
			КоэффициентЭффективности = ?(Выборка.Вес = Null,0,Выборка.Вес*ПроцентВыполнения);
			ОбластьПоказательЭффективности.Параметры.КоэффициентЭффективности = КоэффициентЭффективности;
					
			ТабДок.Вывести(ОбластьПоказательЭффективности, Выборка.Уровень()+1);
		КонецЦикла;
		
		//выводить по менеджерам направления
		ЗапросПоМенеджерам = Новый Запрос;
		ЗапросПоМенеджерам.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
		ЗапросПоМенеджерам.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
		ЗапросПоМенеджерам.УстановитьПараметр("НаправлениеПродаж", Результат.ОбъектПланирования);
		ЗапросПоМенеджерам.Текст = 
		"ВЫБРАТЬ
		|	Планы.ОбъектПланирования КАК ОбъектПланирования,
		|	Планы.ПоказательЭффективности КАК ПоказательЭффективности,
		|	Планы.ПараметрПоказателя,
		|	ЕСТЬNULL(Планы.ЗначениеПланОборот, 0) КАК ЗначениеПлан,
		|	ЕСТЬNULL(Планы.Вес,0) КАК Вес
		|ИЗ
		|	РегистрНакопления.ПланыПродажПоПоказателямЭффективности.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			,
		|			ОбъектПланирования ССЫЛКА Справочник.Пользователи
		|				И ОбъектПланирования.НаправлениеПродаж = &НаправлениеПродаж) КАК Планы
		|
		|СГРУППИРОВАТЬ ПО
		|	Планы.ОбъектПланирования,
		|	Планы.ПоказательЭффективности,
		|	Планы.ПараметрПоказателя,
		|	ЕСТЬNULL(Планы.ЗначениеПланОборот, 0),
		|	Планы.Вес
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОбъектПланирования,
		|	ПоказательЭффективности
		|ИТОГИ ПО
		|	ОбъектПланирования
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		РезультатПоМенеджерам = ЗапросПоМенеджерам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока РезультатПоМенеджерам.Следующий() Цикл
			ОбластьОбъектПланированияМенеджер.Параметры.ОбъектПланирования = РезультатПоМенеджерам.ОбъектПланирования;
			ТабДок.Вывести(ОбластьОбъектПланированияМенеджер, РезультатПоМенеджерам.Уровень()+1);
			
			Выборка = РезультатПоМенеджерам.Выбрать();
			Пока Выборка.Следующий() Цикл
				ОбластьПоказательЭффективности.Параметры.ПоказательЭффективности = Выборка.ПоказательЭффективности.Наименование + ?(Выборка.ПараметрПоказателя = Неопределено, "", " " + Выборка.ПараметрПоказателя.Наименование);
				ОбластьПоказательЭффективности.Параметры.ЗначениеПлан = Выборка.ЗначениеПлан;
				ЗначениеПлан = 0;
				ЗначениеФакт = 0;
				ЗначениеПлан = Выборка.ЗначениеПлан;
				//считать и выводить факт
				
				Если НЕ Выборка.ПоказательЭффективности.ТекстЗапроса = "" Тогда
					
					ТекстЗапроса = Выборка.ПоказательЭффективности.ТекстЗапроса;
					Если НЕ Выборка.ПоказательЭффективности = Справочники.ПоказателиЭффективности.ОтношениеПросрочкиКДебЗадолженности Тогда
						ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//отбор по менеджеру или направлению", "ДоговорКонтрагента.ОтветственноеЛицо = &Менеджер");
					КонецЕсли;
					
					ЗапросФакт = Новый Запрос;
					ЗапросФакт.УстановитьПараметр("КонДата", КонецДня(ДатаКон));
					ЗапросФакт.УстановитьПараметр("НачДата", НачалоДня(ДатаНач));
					ЗапросФакт.УстановитьПараметр("Менеджер", Выборка.ОбъектПланирования);
					СписокКонтрагентов = Новый СписокЗначений;
					СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001549"));
					СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000382"));
					ЗапросФакт.УстановитьПараметр("ШинтрейдСПб", СписокКонтрагентов);
					
					Если Выборка.ПараметрПоказателя <> Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
						ДлинаЗапроса = СтрДлина(ТекстЗапроса);
						СписокПараметров = Выборка.ПараметрПоказателя.СписокПараметров.ВыгрузитьКолонку("Параметр");
						Если ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.НоменклатурнаяГруппа В(&СписокПараметров))";
						ИначеЕсли ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Производители") Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Производитель В(&СписокПараметров))";	
						ИначеЕсли ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Типоразмеры") Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Типоразмер В(&СписокПараметров))";	
						ИначеЕсли ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Номенклатура") Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура В ИЕРАРХИИ(&СписокПараметров))";
						ИначеЕсли ТипЗНЧ(Выборка.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.МоделиТоваров") Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Модель В(&СписокПараметров))";	
						КонецЕсли;
						ЗапросФакт.УстановитьПараметр("СписокПараметров", СписокПараметров);
					КонецЕсли;
					
					ЗапросФакт.Текст = ТекстЗапроса;
					
					РезультатФакт = ЗапросФакт.Выполнить().Выбрать();
					Если РезультатФакт.Следующий() Тогда
						ЗначениеФакт = РезультатФакт.Значение;
					КонецЕсли;
					ОбластьПоказательЭффективности.Параметры.ЗначениеФакт = ЗначениеФакт;
					
				КонецЕсли;
				
				//% выполнения
				ПроцентВыполнения = ?(ЗначениеПлан=0,0,ЗначениеФакт*100/ЗначениеПлан);
				ОбластьПоказательЭффективности.Параметры.ПроцентВыполнения = Формат(ПроцентВыполнения, "ЧДЦ=0");
				
				//остаток до 100%
				ОстатокДо100 = ЗначениеПлан-ЗначениеФакт;
				ОбластьПоказательЭффективности.Параметры.ОстатокДо100 = ?(ОстатокДо100>0,ОстатокДо100,0);
				
				//вес
				ОбластьПоказательЭффективности.Параметры.Вес = Выборка.Вес;
				
				//KPI
				КоэффициентЭффективности = ?(Выборка.Вес = Null,0,Выборка.Вес*ПроцентВыполнения);
				ОбластьПоказательЭффективности.Параметры.КоэффициентЭффективности = КоэффициентЭффективности;
				
				ТабДок.Вывести(ОбластьПоказательЭффективности, Выборка.Уровень()+1);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

Процедура КнопкаВыбораПериодаНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если НЕ ЗначениеНеЗаполнено(ДатаНач) И НЕ ЗначениеНеЗаполнено(ДатаКон) Тогда
		
		ВТекущемПериоде = Ложь;
		
		Если ДатаКон >= ТекущаяДата() Тогда
		
			ВТекущемПериоде = Истина;
		
		КонецЕсли;
		
		Если ВТекущемПериоде Тогда
		
			мДатаРасчета = Формат(ТекущаяДата(), "ДЛФ=Д");
			мДнейВПериоде = Окр((КонецДня(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			мДнейРасчета =  ((НачалоДня(ТекущаяДата()) - НачалоДня(ДатаНач)) / 60 / 60 / 24);
			
		Иначе
			
			мДатаРасчета = Формат(ДатаКон, "ДЛФ=Д");
			мДнейВПериоде = Окр((КонецМесяца(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			мДнейРасчета =  Окр((КонецДня(ДатаКон) - НачалоДня(ДатаНач)) / 60 / 60 / 24, 0);
			
		КонецЕсли; 
		
		ЭлементыФормы.ОписаниеПараметров.Заголовок = "Дата расчета: " + мДатаРасчета + ", дней в периоде: " + Строка(мДнейВПериоде) + ", дней расчета: " + Строка(мДнейРасчета) + ", тип периода: " + ?(ВТекущемПериоде, "текущий", "прошедший");
		
	КонецЕсли; 	
	
КонецПроцедуры

ДатаНач = НачалоМесяца(ТекущаяДата());
ДатаКон = КонецМесяца(ТекущаяДата());


