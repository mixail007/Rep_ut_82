
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьПоставкамиНажатие(Элемент)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поставка,
	|	ПоступлениеТоваровУслуг.Дата
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Проведен
	|	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон";
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("ДатаНач",НачПериода);
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(КонПериода));
	Результат = Запрос.Выполнить();
	ТЗ =  Результат.Выгрузить();
	Поставки.Очистить();
	Поставки.Загрузить(ТЗ);
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьПоставками(Кнопка)
	Если ЗначениеНеЗаполнено(Контрагент) Тогда
		Сообщить("Необходимо заполнить Контрагента",СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	Если ЗначениеНеЗаполнено(ДоговорКонтрагента) Тогда
		Сообщить("Необходимо заполнить Договор контрагента",СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	Если Отказ = Истина Тогда
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	ПоступлениеТоваровУслуг.Дата,
	|	1 КАК Загружать,
	|	ПоступлениеТоваровУслуг.НомерСФ,
	|	ПоступлениеТоваровУслуг.ДатаСФ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Проведен
	|	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаДокумента";
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("ДатаНач",НачПериода);
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ВалютаДокумента",Справочники.Валюты.НайтиПоКоду("643"));

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Поставки.Очистить();
	Пока Выборка.Следующий() Цикл
		НовСторокаПоставка = Поставки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСторокаПоставка,Выборка);
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1Действие(Кнопка)
	ИзменитьПометку(Истина) ;
КонецПроцедуры

Процедура КоманднаяПанель1Действие1(Кнопка)
	ИзменитьПометку(Ложь) ;
КонецПроцедуры

Процедура ИзменитьПометку(Пометка)
	Для каждого СтрПоставка Из Поставки Цикл
		СтрПоставка.Загружать =Пометка;
	КонецЦикла;
КонецПроцедуры 

Процедура ЗаполнитьСФВПоставкахНажатие(Элемент)
	Для Каждого СтрПоставка из Поставки Цикл
		Если СтрПоставка.Загружать Тогда
			Поставка = СтрПоставка.Поступление.ПолучитьОбъект();
			Поставка.НомерСФ = НомерСФ;
			Поставка.ДатаСФ  = ДатаСФ;
			СтрПоставка.НомерСФ = НомерСФ;
			СтрПоставка.ДатаСФ = ДатаСФ;
			Попытка
				Поставка.Записать();
			Исключение
				Сообщить("Не удалось записать " + Поставка.Ссылка, СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьНоменклатуруИзПоставок(Кнопка)
	ТЗПоставок = Поставки.Выгрузить(Новый Структура("Загружать",Истина));
	МассивПоставок = ТЗПоставок.ВыгрузитьКолонку("Поступление");
	СписокПоставок = Новый СписокЗначений;
	СписокПоставок.ЗагрузитьЗначения(МассивПоставок);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	|	МИНИМУМ(ПоступлениеТоваровУслугТовары.Цена) КАК Цена,
	|	СУММА(ПоступлениеТоваровУслугТовары.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В(&Поставки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Номенклатура";
	Запрос.УстановитьПараметр("Поставки",СписокПоставок);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Товары.Очистить();
	Пока Выборка.Следующий() Цикл
		СтрокаНоменклатура = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНоменклатура,Выборка);
	КонецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель2ЗаполнитьЦеныНоменклатурыВПоставках(Кнопка)
	Для Каждого СтрПоставка из Поставки Цикл
		Если СтрПоставка.Загружать Тогда
			
			ДокПоставка = СтрПоставка.Поступление.ПолучитьОбъект();
			ДокПоставка.УчитыватьНДС = Истина;
			ДокПоставка.СуммаВключаетНДС = Истина;

			Для Каждого СтрТовар из Товары Цикл
				Номенклатура = СтрТовар.Номенклатура;
				НайденныеСтроки = ДокПоставка.Товары.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура));
				Если НайденныеСтроки.Количество() > 0 Тогда
					Для каждого Стр из НайденныеСтроки Цикл
						Стр.цена = СтрТовар.Цена;
						РассчитатьСуммуТабЧасти(Стр, ДокПоставка);
						РассчитатьСуммуНДСТабЧасти(Стр, ДокПоставка);
						УчитыватьНДС = Истина;
						СуммаВключаетНДС = Истина;
						МетаданныеДокумента = ДокПоставка.Метаданные();
						//Если ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента ) Тогда
						//	УчитыватьНДС = ДокументОбъект.УчитыватьНДС;
						//КонецЕсли;

						//Если ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента ) Тогда
						//	СуммаВключаетНДС = ДокументОбъект.СуммаВключаетНДС;
						//КонецЕсли;

						Стр.СуммаНДС = РассчитатьСуммуНДС(Стр.Сумма,
						                                                   УчитыватьНДС, СуммаВключаетНДС,
						                                                   ПолучитьСтавкуНДС(Стр.СтавкаНДС));

					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			Попытка
				ДокПоставка.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщить("Не удалось провести : " + ДокПоставка.Ссылка);
			КонецПопытки;		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	//ФормаВыбора = Справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора();
	//
	//// Владельца менять по умолчанию не даем.
	//ФормаВыбора.ПараметрОтборПоВладельцу = Контрагент;
	//ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;
	//ФормаВыбора.Открыть();
	

КонецПроцедуры

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора(,Элемент,);

	// Владельца менять по умолчанию не даем.
	ФормаВыбора.ПараметрОтборПоВладельцу = Контрагент;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;
	ФормаВыбора.Открыть();

КонецПроцедуры

Процедура ДоговорКонтрагентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
КонецПроцедуры

Процедура ПоставкиПоступлениеПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.Поставки.ТекущиеДанные;
КонецПроцедуры

Процедура ТоварыЦенаПриИзменении(Элемент)
	ТекущиеДанные = ЭлементыФормы.Товары.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
КонецПроцедуры

Процедура ТоварыКоличествоПриИзменении(Элемент)
	ТекущиеДанные = ЭлементыФормы.Товары.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
КонецПроцедуры

Процедура ТоварыСуммаПриИзменении(Элемент)
	ТекущиеДанные = ЭлементыФормы.Товары.ТекущиеДанные;
	ТекущиеДанные.Цена = ТекущиеДанные.Сумма / ТекущиеДанные.Количество;

КонецПроцедуры
