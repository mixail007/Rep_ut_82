Перем СписокВодителей;
Процедура КнопкаСформироватьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНач");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = НачПериода;
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаКон");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонПериода;
   СписокВодителей.Очистить();
КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНач");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = НачалоДня(НачПериода);
   СписокВодителей.Очистить();

КонецПроцедуры

Процедура ВыбратьВодителейНажатие(Элемент)
	Если ЗначениеНеЗаполнено(НачПериода) или ЗначениеНеЗаполнено(КонПериода) Тогда
		Сообщить("Заполните период!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	Если ЗначениеНеЗаполнено(Подразделение) Тогда
		Сообщить("Заполните подразделение!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;

	Если СписокВодителей.Количество()=0 Тогда
		ЗаполнитьСписокВодителей();
	КонецЕсли;
	
	Если СписокВодителей.ОтметитьЭлементы()  Тогда 
		ЗаполнитьСтрокуВодителей(СписокВодителей);
	КонецЕсли;	

КонецПроцедуры

Процедура ЗаполнитьСтрокуВодителей(СписокЗначений)
	Водитель = "";
	Для Каждого Стр Из СписокЗначений Цикл 
		Если Стр.Пометка тогда 
			Водитель = Водитель + Стр + "; ";
		КонецЕсли;			
	КонецЦикла;

КонецПроцедуры


Процедура ПриОткрытии()
	Подразделение = Справочники.Подразделения.НайтиПоКоду("00112");// СПБ
	СписокВодителей = Новый СписокЗначений;

	
КонецПроцедуры

Процедура ЗаполнитьСписокВодителей()
	Запрос =  Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Водитель
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И РеализацияТоваровУслуг.Подразделение = &Подразделение
	|	И РеализацияТоваровУслуг.Водитель <> &ПустаяСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслуг.Водитель";
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПустаяСсылка", "");

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокВодителей.Добавить(Выборка.Водитель);
	КонецЦикла;

КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаКон");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение = КонецДня(КонПериода);
   СписокВодителей.Очистить();
КонецПроцедуры

Процедура ПодразделениеПриИзменении(Элемент)
	СписокВодителей.Очистить();
КонецПроцедуры

Процедура АвтомобильПриИзменении(Элемент)
КонецПроцедуры

Процедура ДействияФормыСформировать(Кнопка)
	Если ЗначениеНеЗаполнено(НачПериода) или ЗначениеНеЗаполнено(КонПериода) Тогда
		Сообщить("Заполните период!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	Если ЗначениеНеЗаполнено(Подразделение) Тогда
		Сообщить("Заполните подразделение!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	СхемаКомпоновкиДанных = ПолучитьМакет("Макет");
	
	//Из схемы возьмем настройки по умолчанию
	Настройки_ = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	Если ПустаяСтрока(Водитель) Тогда
		ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НетОтбораВодителя");
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = Истина;
	Иначе
		ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НетОтбораВодителя");
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = Ложь;
        ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Водитель");
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = "%" + Водитель + "%";

    КонецЕсли;	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНач");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = НачПериода;
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаКон");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = КонецДня(КонПериода);
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Подразделение");
	ПараметрСКД.Использование = Истина;
	ПараметрСКД.Значение  = Подразделение;
	
	Если ПустаяСтрока(Автомобиль) Тогда
		ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НетОтбораАвто");
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = Истина;
	Иначе
		ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НетОтбораАвто");
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = Ложь;
        ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Авто");
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = "%" + Автомобиль + "%";

    КонецЕсли;	

	
		
	//Формируем макет, с помощью компоновщика макета
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки,ДанныеРасшифровки );
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	
	
	
	
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки);
	
	//	 ДанныеРасшифровки=ДанныеРасшифровки_;
	
	//Очищаем поле табличного документа
	Элементыформы.Результат.Очистить();
	
	//        //Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Элементыформы.Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
КонецПроцедуры

Функция ПолучитьСписокПоСтроке(Список)
    ТЗ = Новый СписокЗначений;
	Для Каждого Элемент из Список Цикл
		Если Элемент.Пометка тогда 
			ТЗ.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТЗ;
КонецФункции

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;
	
	СтандартнаяОбработка = Ложь;
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки,Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	НастройкиРасшифровки = ОбработкаРасшифровки.Выполнить(Расшифровка,ВыполненноеДействие);
	
	Если НастройкиРасшифровки<>Неопределено Тогда
		
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиРасшифровки);
		
		ДействияФормыСформировать("");
		
	КонецЕсли;

КонецПроцедуры



СписокВодителей = Новый СписокЗначений;