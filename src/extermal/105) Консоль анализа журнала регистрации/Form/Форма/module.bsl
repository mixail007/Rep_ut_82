///////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура вывода отчета по открытой выгрузке журнала регистрации
Процедура ВывестиОтчет()
	
	Форма = ЭтотОбъект.ПараметрыАнализаДанных(ЭтаФорма);
	Если Форма.Открыта() Тогда
		
		Форма.Закрыть();
		
	КонецЕсли;
	
	ЭтотОбъект.ПостроитьОтчет(ЭлементыФормы.РезультатОтчета, РеквизитРазмещениеРеквизитов,
							  РеквизитРазмещениеГруппировок, РеквизитРазмещениеИтогов,
							  РеквизитТипОформления);
	
	Страница = ЭлементыФормы.ПанельРезультатов.Страницы.Отчет;
	ОчиститьВсеСтраницыКроме(Страница);
	УстановитьВидимой(ЭлементыФормы.ПанельРезультатов, Страница);

КонецПроцедуры	// Процедура ВывестиОтчет

// Процедура вывода отчета в сводную таблицу по открытой выгрузке журнала регистрации
Процедура ВывестиСводнуюТаблицу()
		
	Форма = ЭтотОбъект.ПараметрыАнализаДанных(ЭтаФорма);
	Если Форма.Открыта() Тогда
		
		Форма.Закрыть();
		
	КонецЕсли;
	ЭтотОбъект.ПостроитьСводнуюТаблицу(ЭлементыФормы.СводнаяТаблица.ВстроенныеТаблицы.СводнаяТаблица,
									   РеквизитРазмещениеРеквизитов,
							  		   РеквизитРазмещениеГруппировок, РеквизитРазмещениеИтогов,
							  		   РеквизитТипОформления);
	
	Страница = ЭлементыФормы.ПанельРезультатов.Страницы.СводнаяТаблица;
	ОчиститьВсеСтраницыКроме(Страница);
	УстановитьВидимой(ЭлементыФормы.ПанельРезультатов, Страница);
		
КонецПроцедуры	// Процедура ВывестиСводнуюТаблицу
		
// Процедура вывода сводной диаграммы по открытой выгрузке журнала регистрации
Процедура ВывестиСводнуюДиаграмму()
		
	Форма = ЭтотОбъект.ПараметрыАнализаДанных(ЭтаФорма);
	Если Форма.Открыта() Тогда
		
		Форма.Закрыть();
		
	КонецЕсли;
	ЭтотОбъект.ПостроитьСводнуюДиаграмму(ЭлементыФормы.СводнаяДиаграмма);
	
	Страница = ЭлементыФормы.ПанельРезультатов.Страницы.СводнаяДиаграмма;
	ОчиститьВсеСтраницыКроме(Страница);
	УстановитьВидимой(ЭлементыФормы.ПанельРезультатов, Страница);
		
КонецПроцедуры	// Процедура ВывестиСводнуюДиаграмму

// Процедура запуска анализа данных по открытой выгрузке журнала регистрации
Процедура ВыполнитьАнализДанных(ТипАнализа) Экспорт
	
	ЭтотОбъект.ВыполнитьАнализ(ЭлементыФормы.РезультатАнализа, ТипАнализа);
	
	Страница = ЭлементыФормы.ПанельРезультатов.Страницы.Анализ;
	ОчиститьВсеСтраницыКроме(Страница);
	УстановитьВидимой(ЭлементыФормы.ПанельРезультатов, Страница);
	
КонецПроцедуры	// Процедура ВыполнитьАнализДанных

// Процедуры сворачивания панели настроек
Процедура СвернутьНастройки()
	
	ЭлементыФормы.КоманднаяПанель.Кнопки.ОтображатьНастройки.Пометка = Ложь;
	
	ЭлементыФормы.ПанельНастроек.УстановитьПривязку(ГраницаЭлементаУправления.Низ);
	ЭлементыФормы.Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Верх, ЭлементыФормы.ПанельНастроек, ГраницаЭлементаУправления.Низ);
	ЭлементыФормы.ПанельНастроек.Свертка = РежимСверткиЭлементаУправления.Верх;
	ЭлементыФормы.Разделитель.Свертка = РежимСверткиЭлементаУправления.Верх;
	
КонецПроцедуры

// Процедура отображения панели настроек
Процедура ПоказатьНастройки()
	
	ЭлементыФормы.КоманднаяПанель.Кнопки.ОтображатьНастройки.Пометка = Истина;

	ЭлементыФормы.Разделитель.Свертка = РежимСверткиЭлементаУправления.Нет;
	ЭлементыФормы.ПанельНастроек.Свертка = РежимСверткиЭлементаУправления.Нет;
	ЭлементыФормы.Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Верх);
	ЭлементыФормы.Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Низ, ЭлементыФормы.Разделитель, ГраницаЭлементаУправления.Верх);
	ЭлементыФормы.ПанельНастроек.УстановитьПривязку(ГраницаЭлементаУправления.Низ, ЭлементыФормы.Разделитель, ГраницаЭлементаУправления.Верх);
	
КонецПроцедуры

// Процедура установки видимой указанной страницы панели
Процедура УстановитьВидимой(ПанельЭУ, Страница)
	
	Страница.Видимость = Истина;
	Страница.Доступность = Истина;
	ПанельЭУ.ТекущаяСтраница = Страница;
	Для каждого СтраницаПанели из ПанельЭУ.Страницы Цикл
		
		Если СтраницаПанели.Имя <> Страница.Имя Тогда
			
			СтраницаПанели.Видимость = Ложь;
			СтраницаПанели.Доступность = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// процедура очистки данных со всех станиц, кроме текущей
Процедура ОчиститьВсеСтраницыКроме(Страница)
	
	Если Страница = ЭлементыФормы.ПанельРезультатов.Страницы.Отчет Тогда
		
		ЭлементыФормы.СводнаяТаблица.ВстроенныеТаблицы.СводнаяТаблица.ИсточникДанных = Неопределено;
		ЭлементыФормы.СводнаяДиаграмма.Серии.Очистить();
		ЭлементыФормы.СводнаяДиаграмма.Точки.Очистить();
		ЭлементыФормы.СводнаяДиаграмма.ИсточникДанных = Неопределено;
		ЭлементыФормы.РезультатАнализа.Очистить();
		
	ИначеЕсли Страница = ЭлементыФормы.ПанельРезультатов.Страницы.СводнаяТаблица Тогда
		
		ЭлементыФормы.РезультатОтчета.Очистить();
		ЭлементыФормы.СводнаяДиаграмма.Серии.Очистить();
		ЭлементыФормы.СводнаяДиаграмма.Точки.Очистить();
		ЭлементыФормы.СводнаяДиаграмма.ИсточникДанных = Неопределено;
		ЭлементыФормы.РезультатАнализа.Очистить();
		
	ИначеЕсли Страница = ЭлементыФормы.ПанельРезультатов.Страницы.СводнаяДиаграмма Тогда
		
		ЭлементыФормы.РезультатОтчета.Очистить();
		ЭлементыФормы.СводнаяТаблица.ВстроенныеТаблицы.СводнаяТаблица.ИсточникДанных = Неопределено;
		ЭлементыФормы.РезультатАнализа.Очистить();
		
	ИначеЕсли Страница = ЭлементыФормы.ПанельРезультатов.Страницы.Анализ Тогда
		
		ЭлементыФормы.РезультатОтчета.Очистить();
		ЭлементыФормы.СводнаяТаблица.ВстроенныеТаблицы.СводнаяТаблица.ИсточникДанных = Неопределено;
		ЭлементыФормы.СводнаяДиаграмма.Серии.Очистить();
		ЭлементыФормы.СводнаяДиаграмма.Точки.Очистить();
		ЭлементыФормы.СводнаяДиаграмма.ИсточникДанных = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ

// Обработчик кнопки ОткрытьЖурнал командной панели КоманднаяПанель
Процедура КоманднаяПанельОткрытьЖурнал(Кнопка)
	
	ВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ВыбораФайла.Заголовок = НСтр("ru='Выберите файл выгрузки журнала регистрации'");
	ВыбораФайла.Фильтр = НСтр("ru='Файлы выгрузки журнала регистрации (*.xml)|*.xml|Все файлы (*.*)|*.*'");
	ВыбораФайла.Расширение = "xml";
	
	Если ВыбораФайла.Выбрать() Тогда
		
		ЭтотОбъект.ОткрытьЖурнал(ВыбораФайла.ПолноеИмяФайла);
		Заголовок = Заголовок + ": " + ВыбораФайла.ПолноеИмяФайла;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Действия.Кнопки.ЗакрытьЖурнал.Доступность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры	// КоманднаяПанельОткрытьЖурнал(Кнопка)

// Обработчик кнопки ЗакрытьЖурнал командной панели КоманднаяПанель
Процедура КоманднаяПанельЗакрытьЖурнал(Кнопка)
	
	ЭтотОбъект.ЗакрытьЖурнал();
	Поз = Найти(Заголовок, ": ");
	Если Поз > 0 Тогда
		
		Заголовок = Лев(Заголовок, Поз - 1);
		
	КонецЕсли;
	ЭлементыФормы.КоманднаяПанель.Кнопки.Действия.Кнопки.ЗакрытьЖурнал.Доступность = Ложь;
	
КонецПроцедуры	// КоманднаяПанельЗакрытьЖурнал(Кнопка)

// Обработчик кнопки ПостроитьОтчет командной панели КоманднаяПанель
Процедура КоманднаяПанельПостроитьОтчет(Кнопка)
	
	ВывестиОтчет();

КонецПроцедуры	// КоманднаяПанельПостроитьОтчет(Кнопка)

// Обработчик кнопки ОтображатьНастройки командной панели КоманднаяПанель
Процедура КоманднаяПанельОтображатьНастройки(Кнопка)
	
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	Если Кнопка.Пометка Тогда
		
		ПоказатьНастройки();
		
	Иначе
		
		СвернутьНастройки();
		
	КонецЕсли;
	
КонецПроцедуры	// КоманднаяПанельОтображатьНастройки(Кнопка)

// Обработчик кнопки ОбщаяСтатистика командной панели КоманднаяПанель
Процедура КоманднаяПанельОбщаяСтатистика(Кнопка)
	
	ВыполнитьАнализДанных(Тип("АнализДанныхОбщаяСтатистика"));
	
КонецПроцедуры	// КоманднаяПанельОбщаяСтатистика(Кнопка)

// Обработчик кнопки ПараметрыАнализаДанных командной панели КоманднаяПанельАнализаДанных
Процедура КоманднаяПанельАнализаДанныхПараметрыАнализаДанных(Кнопка)
	
	Форма = ЭтотОбъект.ПараметрыАнализаДанных(ЭтаФорма);
	Форма.Открыть();
	
КонецПроцедуры

// Обработчик кнопки ПараметрыАнализа командной панели КоманднаяПанель
Процедура КоманднаяПанельПараметрыАнализа(Кнопка)
	
	Форма = ЭтотОбъект.ПараметрыАнализаДанных(ЭтаФорма);
	Если ЭлементыФормы.ПанельРезультатов.ТекущаяСтраница = ЭлементыФормы.ПанельРезультатов.Страницы.Анализ Тогда
		
		Форма.Открыть();
		
	Иначе
		
		Форма.ОткрытьМодально();
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик кнопки СводнаяТаблица командной панели КоманднаяПанель
Процедура КоманднаяПанельСводнаяТаблица(Кнопка)
	
	ВывестиСводнуюТаблицу();
	
КонецПроцедуры

// Обработчик кнопки СводнаяДиаграмма командной панели КоманднаяПанель
Процедура КоманднаяПанельСводнаяДиаграмма(Кнопка)
	
	ВывестиСводнуюДиаграмму();
	
КонецПроцедуры

// Обработчик кнопки Обновить командной панели КоманднаяПанель
Процедура КоманднаяПанельОбновить(Кнопка)
	
	ТекущаяСтраница = ЭлементыФормы.ПанельРезультатов.ТекущаяСтраница;
	Если ТекущаяСтраница = ЭлементыФормы.ПанельРезультатов.Страницы.Отчет Тогда
		
		ВывестиОтчет();
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельРезультатов.Страницы.СводнаяТаблица Тогда
		
		ВывестиСводнуюТаблицу();
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельРезультатов.Страницы.СводнаяДиаграмма Тогда
		
		ВывестиСводнуюДиаграмму();
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельРезультатов.Страницы.Анализ Тогда
		
		ВыполнитьАнализДанных(ПостроительОтчетаАнализаДанных.ТипАнализа);
		
	КонецЕсли;
	
КонецПроцедуры	// КоманднаяПанельОбновить(Кнопка)

// Обработчик кнопки ПеренестиВКолонки командной панели КоманднаяПанель9
Процедура КоманднаяПанель9ПеренестиВКолонки(Кнопка)
	
	Если ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные <> Неопределено Тогда
		
		ПутьКДанным = ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные.ПутьКДанным;
		ТипИзмерения = ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные.ТипИзмерения;
		ПостроительОтчета.ИзмеренияСтроки.Удалить(ПостроительОтчета.ИзмеренияСтроки.Найти(ЭлементыФормы.ИзмеренияСтроки.ТекущиеДанные.Имя));
		ПостроительОтчета.ИзмеренияКолонки.Добавить(ПутьКДанным, , ТипИзмерения);
		
	КонецЕсли;

КонецПроцедуры	// КоманднаяПанель9ПеренестиВКолонки(Кнопка)

// Обработчик кнопки ПеренестиВСтроки командной панели КоманднаяПанель10
Процедура КоманднаяПанель10ПеренестиВСтроки(Кнопка)
	
	Если ЭлементыФормы.ИзмеренияКолонки.ТекущиеДанные <> Неопределено Тогда
		ПутьКДанным = ЭлементыФормы.ИзмеренияКолонки.ТекущиеДанные.ПутьКДанным;
		ТипИзмерения = ЭлементыФормы.ИзмеренияКолонки.ТекущиеДанные.ТипИзмерения;
		ПостроительОтчета.ИзмеренияКолонки.Удалить(ПостроительОтчета.ИзмеренияКолонки.Найти(ЭлементыФормы.ИзмеренияКолонки.ТекущиеДанные.Имя));
		ПостроительОтчета.ИзмеренияСтроки.Добавить(ПутьКДанным, , ТипИзмерения);
	КонецЕсли;

КонецПроцедуры	// КоманднаяПанель10ПеренестиВСтроки(Кнопка)

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события формы ПередОткрытием
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлементыФормы.КоманднаяПанель.Кнопки.Действия.Кнопки.ОткрытьЖурнал.Доступность = Истина;
	ЭлементыФормы.КоманднаяПанель.Кнопки.Действия.Кнопки.ЗакрытьЖурнал.Доступность = Ложь;
	
	ЭлементыФормы.ИзмеренияСтроки.Колонки.Удалить(ЭлементыФормы.ИзмеренияСтроки.Колонки.Тип);
	ЭлементыФормы.ИзмеренияКолонки.Колонки.Удалить(ЭлементыФормы.ИзмеренияКолонки.Колонки.Тип);

	ЭлементыФормы.РазмещениеГруппировок.СписокВыбора.Добавить(ТипРазмещенияИзмерений.Вместе, 
		НСтр("ru='В одной колонке/строке'"));
	ЭлементыФормы.РазмещениеГруппировок.СписокВыбора.Добавить(ТипРазмещенияИзмерений.Отдельно, 
		НСтр("ru='В отдельных колонках/строках'"));
	ЭлементыФормы.РазмещениеГруппировок.СписокВыбора.Добавить(ТипРазмещенияИзмерений.ОтдельноИТолькоВИтогах, 
		НСтр("ru='В отдельных колонках/строках и только в итогах'"));
		
	ЭлементыФормы.РазмещениеРеквизитов.СписокВыбора.Добавить(ТипРазмещенияРеквизитовИзмерений.ВместеСИзмерениями, 
		НСтр("ru='С группировками'"));
	ЭлементыФормы.РазмещениеРеквизитов.СписокВыбора.Добавить(ТипРазмещенияРеквизитовИзмерений.Отдельно, 
		НСтр("ru='В отдельных колонках'"));
	ЭлементыФормы.РазмещениеРеквизитов.СписокВыбора.Добавить(ТипРазмещенияРеквизитовИзмерений.Вместе, 
		НСтр("ru='В отдельной колонке'"));
		
	ЭлементыФормы.РазмещениеИтогов.СписокВыбора.Добавить(ТипРазмещенияИтогов.Заголовок,
		НСтр("ru='В заголовке'"));
	ЭлементыФормы.РазмещениеИтогов.СписокВыбора.Добавить(ТипРазмещенияИтогов.Подвал,
		НСтр("ru='В подвале'"));
	ЭлементыФормы.РазмещениеИтогов.СписокВыбора.Добавить(ТипРазмещенияИтогов.ЗаголовокИПодвал,
		НСтр("ru='В заголовке и подвале'"));
	ЭлементыФормы.РазмещениеИтогов.СписокВыбора.Добавить(ТипРазмещенияИтогов.ТолькоПодвал,
		НСтр("ru='Только подвале'"));
		
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.БезОформления, 
		НСтр("ru='Без оформления'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Камень, 
		НСтр("ru='Камень'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Классика, 
		НСтр("ru='Классика'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Классика2, 
		НСтр("ru='Классика2'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Классика3, 
		НСтр("ru='Классика3'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Весна, 
		НСтр("ru='Весна'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Лето, 
		НСтр("ru='Лето'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Осень, 
		НСтр("ru='Осень'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Зима, 
		НСтр("ru='Зима'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Асфальт, 
		НСтр("ru='Асфальт'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Медь, 
		НСтр("ru='Медь'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Бронза, 
		НСтр("ru='Бронза'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Платина, 
		НСтр("ru='Платина'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Серебро, 
		НСтр("ru='Серебро'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Бирюза, 
		НСтр("ru='Бирюза'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Песок, 
		НСтр("ru='Песок'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Трава, 
		НСтр("ru='Трава'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Лед, 
		НСтр("ru='Лед'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Апельсин, 
		НСтр("ru='Апельсин'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Текстиль, 
		НСтр("ru='Текстиль'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Дерево, 
		НСтр("ru='Дерево'"));
	ЭлементыФормы.ВариантОформления.СписокВыбора.Добавить(СтандартноеОформление.Интерфейс, 
		НСтр("ru='Интерфейс'"));
	
	ПоказатьНастройки();
	
КонецПроцедуры

// Обработчик события ПриПолученииДанных элемента формы УсловноеОформление
Процедура УсловноеОформлениеПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ОформЯчейки = ОформлениеСтроки.Ячейки.Оформление;
		ЗначОф = ОформЯчейки.Значение;
		
		Если ЗначОф <> Неопределено Тогда
			
			Если ЗначОф.ЦветТекста.Использование Тогда
				
		    	ОформЯчейки.ЦветТекста = ЗначОф.ЦветТекста.Значение;
				
			КонецЕсли;
			
			Если ЗначОф.ЦветФона.Использование Тогда
				
				ОформЯчейки.ЦветФона = ЗначОф.ЦветФона.Значение
				
			КонецЕсли;
			
			Если ЗначОф.ЦветФона.Использование Тогда
				
				ОформЯчейки.Шрифт = ЗначОф.Шрифт.Значение;
				
			КонецЕсли;

			Если ЗначОф.ЦветФона.Использование Тогда
				
				ОформЯчейки.Выравнивание = ЗначОф.ГоризонтальноеПоложение.Значение;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик события формы ПередСохранениемЗначений
Процедура ПередСохранениемЗначений(Отказ)
	
	Настройки = ЗначениеВСтрокуВнутр(ПостроительОтчета.ПолучитьНастройки());
	
КонецПроцедуры

// Обработчик события формы ПослеВосстановленияЗначений
Процедура ПослеВосстановленияЗначений()
	
	Попытка
		
		Если ЭтотОбъект.ЖурналОткрыт() Тогда
			
			ПостроительОтчета.УстановитьНастройки(ЗначениеИзСтрокиВнутр(Настройки));
			
		КонецЕсли;
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры
