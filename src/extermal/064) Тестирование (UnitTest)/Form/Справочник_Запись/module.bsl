Перем ТекущиеДанные, ВсеРеквизиты, ВсеТЧ;

Функция СоздатьСтруктуру()
	Тест = Новый Структура;
	Тест.Вставить("Описание", ЭлементыФормы.ОписаниеТеста.ПолучитьТекст());
	Тест.Вставить("ПередЗаполнением", ЭлементыФормы.ПТДПередЗаполнением.ПолучитьТекст());
	Тест.Вставить("ПередЗаписью", ЭлементыФормы.ПТДПередЗаписью.ПолучитьТекст());
	Тест.Вставить("ПослеЗаписи", ЭлементыФормы.ПТДПослеЗаписи.ПолучитьТекст());
	Тест.Вставить("Объект", Справочник);
	Тест.Вставить("Форма", ФормаДляЗаполнения);
	Тест.Вставить("Реквизиты", Реквизиты);
	Тест.Вставить("ТабличныеЧасти", ТабличныеЧасти);
	Тест.Вставить("Параметры", Параметры);
	Тест.Вставить("ОшибкаЕслиЗаписан", ОшибкаЕслиЗаписан);
	Тест.Вставить("ФормаРедактирования", "Справочник_Запись");
	Возврат Тест;
КонецФункции

Процедура ЗаполнитьИзСтруктуры(СтруктураТеста) Экспорт 
	Если СтруктураТеста.Свойство("Описание") Тогда
		ЭлементыФормы.ОписаниеТеста.УстановитьТекст(СтруктураТеста.Описание);
	КонецЕсли;
	
	Если СтруктураТеста.Свойство("Объект") Тогда
		Справочник = СтруктураТеста.Объект;
		СправочникПриИзменении(ЭлементыФормы.Справочник);
	КонецЕсли;
	
	Если СтруктураТеста.Свойство("Форма") Тогда
		СписокВыбора = ЭлементыФормы.ФормаДляЗаполнения.СписокВыбора;
		СписокВыбора.Очистить();
		МД = Справочник.ПривестиЗначение().Метаданные();
		Для Каждого МФорма ИЗ МД.Формы Цикл
			СписокВыбора.Добавить(МФорма.Имя, МФорма.Синоним);
		КонецЦикла;
		
		ФормаДляЗаполнения = СтруктураТеста.Форма;
	КонецЕсли;
	
	Если СтруктураТеста.Свойство("Реквизиты") Тогда
		Реквизиты = СтруктураТеста.Реквизиты;
		Колонка = Реквизиты.Колонки.Найти("Вычислять");
		Если Колонка = Неопределено Тогда
			Реквизиты.Колонки.Добавить("Вычислять");
		КонецЕсли;
		Строка = Реквизиты.Найти("ЭтоГруппа", "Имя");
		СтрокаВсе = ВсеРеквизиты.Найти("ЭтоГруппа", "Имя");
		Если СтрокаВсе <> Неопределено Тогда
			СтрокаВсе.Значение = Строка.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураТеста.Свойство("ТабличныеЧасти") Тогда
		ТабличныеЧасти = СтруктураТеста.ТабличныеЧасти;
		Колонка = ТабличныеЧасти.Колонки.Найти("Вычислять");
		Если Колонка = Неопределено Тогда
			ТабличныеЧасти.Колонки.Добавить("Вычислять");
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураТеста.Свойство("Параметры") Тогда
		Параметры = СтруктураТеста.Параметры;
		Колонка = Параметры.Колонки.Найти("Вычислять");
		Если Колонка = Неопределено Тогда
			Параметры.Колонки.Добавить("Вычислять");
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураТеста.Свойство("ПередЗаполнением") Тогда
		ЭлементыФормы.ПТДПередЗаполнением.УстановитьТекст(СтруктураТеста.ПередЗаполнением);
	КонецЕсли;
	
	Если СтруктураТеста.Свойство("ПослеЗаписи") Тогда
		ЭлементыФормы.ПТДПослеЗаписи.УстановитьТекст(СтруктураТеста.ПослеЗаписи);
	КонецЕсли;
	
	Если СтруктураТеста.Свойство("ПередЗаписью") Тогда
		ЭлементыФормы.ПТДПередЗаписью.УстановитьТекст(СтруктураТеста.ПередЗаписью);
	КонецЕсли;

	Если СтруктураТеста.Свойство("ОшибкаЕслиЗаписан") Тогда
		ОшибкаЕслиЗаписан = СтруктураТеста.ОшибкаЕслиЗаписан;
	КонецЕсли;
КонецПроцедуры

Процедура СправочникНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	СписокЗначений = Новый СписокЗначений;
	Для Каждого МСправочник Из Метаданные.Справочники Цикл
		СписокЗначений.Добавить(МСправочник.Имя, МСправочник.Синоним,,БиблиотекаКартинок.СправочникОбъект);
	КонецЦикла;
	ВыбЭлемент =  СписокЗначений.ВыбратьЭлемент();
	Если ВыбЭлемент <> Неопределено И ВыбЭлемент.Представление <> Строка(Справочник) Тогда
		Массив = Новый Массив;
		Массив.Добавить(Тип("СправочникСсылка." + ВыбЭлемент.Значение));
		Справочник = Новый ОписаниеТипов(Массив);
		Элемент.Значение = Справочник;
		СправочникПриИзменении(Элемент);
	КонецЕсли;
	
КонецПроцедуры

Процедура СправочникПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ЭлементыФормы.НадписьФорма.Видимость = ЗначениеЗаполнено(Справочник);
	ЭлементыФормы.ФормаДляЗаполнения.Видимость = ЭлементыФормы.НадписьФорма.Видимость;
	Реквизиты.Очистить();
	МД = Справочник.ПривестиЗначение().Метаданные();
	Для Каждого Реквизит Из МД.СтандартныеРеквизиты Цикл
		Строка = Реквизиты.Добавить();
		Строка.Имя = Реквизит.Имя;
		Строка.Синоним = ?(ПустаяСтрока(Реквизит.Синоним),Реквизит.Имя,Реквизит.Синоним);
		Строка.Тип = Реквизит.Тип;
		Строка.Вычислять = Ложь;
		Строка.Использование = "ДляГруппыИЭлемента";
		Строка.Значение = Реквизит.Тип.ПривестиЗначение();
	КонецЦикла;
	
	Для Каждого Реквизит Из МД.Реквизиты Цикл
		Строка = Реквизиты.Добавить();
		Строка.Имя = Реквизит.Имя;
		Строка.Синоним = ?(ПустаяСтрока(Реквизит.Синоним),Реквизит.Имя,Реквизит.Синоним);
		Строка.Тип = Реквизит.Тип;
		Строка.Вычислять = Ложь;
		Строка.Использование = Реквизит.Использование;
		Строка.Значение = Реквизит.Тип.ПривестиЗначение();
	КонецЦикла;
	
	ТабличныеЧасти.Строки.Очистить();
	ТекущиеДанные = Неопределено;
	
	Для Каждого ТЧ Из МД.ТабличныеЧасти Цикл
		СтрокаТЧ = ТабличныеЧасти.Строки.Добавить();
		СтрокаТЧ.Имя = ТЧ.Имя;
		СтрокаТЧ.Синоним = ?(ПустаяСтрока(ТЧ.Синоним),ТЧ.Имя,ТЧ.Синоним);
		СтрокаТЧ.Использование = ТЧ.Использование;

		//Строка.Тип = Реквизит.Тип;
		СтрокаТЧ.Вычислять = Ложь;
		//Строка.Значение = Реквизит.Тип.ПривестиЗначение();
		Для Каждого Реквизит Из ТЧ.Реквизиты Цикл
			Строка = СтрокаТЧ.Строки.Добавить();
			Строка.Имя = Реквизит.Имя;
			Строка.Синоним = ?(ПустаяСтрока(Реквизит.Синоним),Реквизит.Имя,Реквизит.Синоним);
			Строка.Тип = Реквизит.Тип;
			Строка.Вычислять = Ложь;
			Строка.Использование = ТЧ.Использование;
			Строка.Значение = Реквизит.Тип.ПривестиЗначение();
		КонецЦикла;
		СоздатьТаблицуДляЗаполнения(СтрокаТЧ);
	КонецЦикла;
	УстановитьОтбор(Ложь, Истина);
КонецПроцедуры

Процедура ФормаДляЗаполненияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Элемент.СписокВыбора.Очистить();
	МД = Справочник.ПривестиЗначение().Метаданные();
	Для Каждого МФорма ИЗ МД.Формы Цикл
		Элемент.СписокВыбора.Добавить(МФорма.Имя, МФорма.Синоним);
	КонецЦикла;
КонецПроцедуры

Процедура ТабличныеЧастиПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = Элемент.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ТекущиеДанные = Неопределено Тогда
			ТекущиеДанные = ТекСтрока;
		КонецЕсли;
		
		Если ТекущиеДанные <> ТекСтрока Тогда 
			Если ТекущиеДанные <> Неопределено Тогда
				Если ТекущиеДанные.Родитель = Неопределено Тогда
					Если ТекущиеДанные.Вычислять Тогда
						ТекущиеДанные.Значение = ЭлементыФормы.Запрос.ПолучитьТекст();
					Иначе
						ТекущиеДанные.Значение = ЗначениеВСтрокуВнутр(Таблица);
					КонецЕсли;
				Иначе 
					Если ТекущиеДанные.Родитель.Вычислять Тогда
						ТекущиеДанные.Родитель.Значение = ЭлементыФормы.Запрос.ПолучитьТекст();
					Иначе
						ТекущиеДанные.Родитель.Значение = ЗначениеВСтрокуВнутр(Таблица);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ТекущиеДанные = ТекСтрока;
			
			Если ТекущиеДанные <> Неопределено Тогда
				Если ТекущиеДанные.Родитель = Неопределено Тогда
					Если ТекущиеДанные.Вычислять Тогда
						ЭлементыФормы.Запрос.УстановитьТекст(ТекущиеДанные.Значение);
					Иначе
						Таблица = ЗначениеИзСтрокиВнутр(ТекущиеДанные.Значение);
						ЭлементыФормы.Таблица.СоздатьКолонки();
					КонецЕсли;
				Иначе 
					Если ТекущиеДанные.Родитель.Вычислять Тогда
						ЭлементыФормы.Запрос.УстановитьТекст(ТекущиеДанные.Родитель.Значение);
					Иначе
						Таблица = ЗначениеИзСтрокиВнутр(ТекущиеДанные.Родитель.Значение);
						ЭлементыФормы.Таблица.СоздатьКолонки();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Вычислять = ?(ТекущиеДанные.Родитель = Неопределено, ТекущиеДанные.Вычислять,ТекущиеДанные.Родитель.Вычислять); 
		
		ЭлементыФормы.Таблица.Видимость = Не Вычислять;
		ЭлементыФормы.КоманднаяПанель3.Видимость = Не Вычислять;
		ЭлементыФормы.Запрос.Видимость = Вычислять;
		ЭлементыФормы.КоманднаяПанельЗапрос.Видимость = Вычислять;
	КонецЕсли;	
	
КонецПроцедуры

Процедура КоманднаяПанельЗапросКонструкторЗапроса(Кнопка)
	// Вставить содержимое обработчика.
	КонструкторЗапроса = Новый КонструкторЗапроса;
	КонструкторЗапроса.Текст = ЭлементыФормы.Запрос.ВыделенныйТекст;
	Если КонструкторЗапроса.ОткрытьМодально() Тогда
		ЭлементыФормы.Запрос.ВыделенныйТекст = КонструкторЗапроса.Текст;
	КонецЕсли;
КонецПроцедуры

Процедура СоздатьТаблицуДляЗаполнения(ТекСтрока)
	Если ТекСтрока.Родитель = Неопределено Тогда
		Если Не ТекСтрока.Вычислять Тогда
			Таблица.Очистить();
			Таблица.Колонки.Очистить();
		КонецЕсли;
		Для Каждого Строка Из ТекСтрока.Строки Цикл 
			Строка.Вычислять = ТекСтрока.Вычислять;
			Если Не ТекСтрока.Вычислять Тогда
				Таблица.Колонки.Добавить(Строка.Имя, Строка.Тип, Строка.Синоним);
			КонецЕсли;
		КонецЦикла;
		Если Не ТекСтрока.Вычислять Тогда
			ТекСтрока.Значение = ЗначениеВСтрокуВнутр(Таблица);
			ЭлементыФормы.Таблица.СоздатьКолонки();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ТабличныеЧастиВыражениеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.ТабличныеЧасти.ТекущиеДанные;
	СоздатьТаблицуДляЗаполнения(ТекСтрока);
	ТабличныеЧастиПриАктивизацииСтроки(ЭлементыФормы.ТабличныеЧасти)
КонецПроцедуры

Процедура РеквизитыЗначениеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.Реквизиты.ТекущиеДанные;
	Если ТекСтрока.Имя = "ЭтоГруппа" Тогда
		Если ТекСтрока.Значение Тогда
			УстановитьОтбор(Истина);
		Иначе
			УстановитьОтбор(Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОтбор(ДляГруппы, Принудительно = Ложь)
	Если ВсеРеквизиты = Неопределено Или Принудительно Тогда
		ВсеРеквизиты = Реквизиты.Скопировать();
	КонецЕсли;
	Если ВсеТЧ = Неопределено Или Принудительно Тогда
		ВсеТЧ = ТабличныеЧасти.Скопировать();
	КонецЕсли;

	Строка = ВсеРеквизиты.Найти("ЭтоГруппа", "Имя");
	Если Строка <> Неопределено Тогда 
		Строка.Значение = ДляГруппы;
	КонецЕсли;
	
	
	Отбор = Новый Структура("Использование", "ДляГруппыИЭлемента");
	Реквизиты = ВсеРеквизиты.Скопировать(Отбор);
	Отбор.Использование = ?(ДляГруппы,"ДляГруппы","ДляЭлемента");
	ИРеквизиты = ВсеРеквизиты.Скопировать(Отбор);
	Для Каждого Р ИЗ ИРеквизиты Цикл
		Строка = Реквизиты.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Р);
	КонецЦикла;
	ТабличныеЧасти.Строки.Очистить();
	//*/Wont fix
	Для Каждого СтрокаДерева Из ВсеТЧ.Строки Цикл
		Если (СтрокаДерева.Использование = "ДляЭлемента" И Не ДляГруппы)
			ИЛИ (СтрокаДерева.Использование = "ДляГруппы" И ДляГруппы)
			Тогда
			Строка = ТабличныеЧасти.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, СтрокаДерева);
			Для Каждого Подстрока ИЗ СтрокаДерева.Строки Цикл 
				А = Строка.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(А, Подстрока);
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ПараметрыТипПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.Параметры.ТекущиеДанные;
	ТекСтрока.Значение = Элемент.Значение.ПривестиЗначение(ТекСтрока.Значение);
КонецПроцедуры

Процедура РеквизитыВыражениеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.Реквизиты.ТекущиеДанные;
	Если Элемент.Значение Тогда
		ТекСтрока.Значение = "";
	Иначе
		ТекСтрока.Значение = ТекСтрока.Тип.ПривестиЗначение();
	КонецЕсли;
КонецПроцедуры

Процедура РеквизитыЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ТекСтрока = ЭлементыФормы.Реквизиты.ТекущиеДанные;
	Если ТекСтрока.Вычислять Тогда
		СтандартнаяОбработка = Ложь;
		Форма = ПолучитьФорму("Другое_ФормаВвода");
		Форма.Параметры = Параметры;
		Форма.ПараметрыТестов = ПараметрыТестов;
		Если Форма.Открыта() Тогда
			Форма.Закрыть();
		КонецЕсли;
		Описание = ПолучитьМакет("Макет_ВырожениеЗначения").ПолучитьТекст();
		Форма.ЭлементыФормы.Описание.УстановитьТекст(Описание);
		Форма.ЭлементыФормы.Код.УстановитьТекст(Элемент.Значение);
		Результат = Форма.ОткрытьМодально();
		Если Результат <> Неопределено Тогда
			Элемент.Значение = Результат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСохранитьИЗакрыть(Кнопка)
	// Вставить содержимое обработчика.
	ТабличныеЧастиПриАктивизацииСтроки(ЭлементыФормы.ТабличныеЧасти);
	СтруктураТеста = СоздатьСтруктуру();
	Если МодальныйРежим Тогда 
		Закрыть(СтруктураТеста);
	Иначе
		СтрокаТеста.Описание = СтруктураТеста.Описание;
		СтрокаТеста.Тест = ЗначениеВСтрокуВнутр(СтруктураТеста);
		Закрыть(СтруктураТеста);
	КонецЕсли;
	
		
КонецПроцедуры

Процедура КоманднаяПанель5НайтиПоНаименованию(Кнопка)
	// Вставить содержимое обработчика.
	Наименование = "";
	Строка = Реквизиты.Найти("Наименование", "Имя");
	Если Строка <> Неопределено Тогда
		Наименование = Строка.Значение;
	КонецЕсли;
	
	ЭлементыФормы.ПТДПередЗаполнением.ВыделенныйТекст = "Ссылка = Справочники." + Справочник.ПривестиЗначение().Метаданные().Имя + ".НайтиПоНаименованию("""+Наименование+""", <ТочноеСоответствие>, <Родитель>, <Владелец>);"
КонецПроцедуры

Процедура КоманднаяПанель7ДобавитьВГлобальныеПараметры(Кнопка)
	// Вставить содержимое обработчика.
	Имя = "<Введите имя>";
	ВвестиСтроку(Имя);
	ЭлементыФормы.ПТДПослеЗаписи.ВыделенныйТекст = "ГлобальныеПараметры.Вставить(""" + Имя +""", Объект.Ссылка);";
	ЭлементыФормы.ОписаниеТеста.ДобавитьСтроку("После записи объект будет доступен как:");
	ЭлементыФормы.ОписаниеТеста.ДобавитьСтроку(Символы.Таб + "ГлобальныеПараметры." + Имя);
	Строка = ПараметрыТестов.Добавить();
	Строка.Имя = Имя;
	Строка.Тип = Справочник;
	Строка.Значение = Справочник.ПривестиЗначение();
КонецПроцедуры

Процедура ТаблицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТекущиеДанные = ЭлементыФормы.ТабличныеЧасти.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.Значение = ЗначениеВСтрокуВнутр(Таблица);
	КонецЕсли;
КонецПроцедуры

Процедура ТабличныеЧастиПриИзмененииФлажка(Элемент, Колонка)
	// Вставить содержимое обработчика. 
	Если Колонка = ЭлементыФормы.ТабличныеЧасти.Колонки._Выражение Тогда
		ТабличныеЧастиПриАктивизацииСтроки(Элемент);
	КонецЕсли;
КонецПроцедуры

