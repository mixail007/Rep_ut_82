
Процедура ДействияФормыСформирвоать(Кнопка)
	
	ТабДок = ПолучитьФорму().ЭлементыФормы.ПолеТабличногоДокумента1;
	Макет = ПолучитьМакет("Отчет");
	ОбластьЗаголовок				 			   = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы					           = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаГруппировки	 			  	   = Макет.ПолучитьОбласть("СтрокаГруппировки");
	ОбластьСтрока							 	   = Макет.ПолучитьОбласть("Строка");
	
	ТабДок.Очистить();
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ОбластьЗаголовок.Параметры.Заголовок = "Анализ запасов по крышкам (наши бренды) на " + Строка(Лев(ТекущаяДата(),10));
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	СписокПроизводителей = Новый СписокЗначений;
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("65")); //REPLICA
	СписокПроизводителей.Добавить(Справочники.Производители.НайтиПоКоду("3333")); //REPLICA TD
	
	Если ТолькоНашиБренды Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
		Запрос.УстановитьПараметр("Папка2", Справочники.Номенклатура.НайтиПоКоду("9112946"));
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВложенныйЗапрос.Комплектующие КАК Крышка,
		               |	ВложенныйЗапрос.Номенклатура,
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоНаСкладе,
		               |	ЕСТЬNULL(ВЫБОР
		               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		               |				ТОГДА 0
		               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		               |		КОНЕЦ, 0) КАК КоличествоВПроизводстве,
		               |	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) КАК КоличествоВПути,
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ВЫБОР
		               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		               |				ТОГДА 0
		               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		               |		КОНЕЦ, 0) КАК ВсегоДисков,
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки1.КоличествоОстаток, 0) КАК КоличествоКрышек,
		               |	ВложенныйЗапрос.Номенклатура.Код КАК НоменклатураКод,
		               |	ВложенныйЗапрос.Комплектующие.Код КАК КрышкаКод,
		               |	ЕСТЬNULL(ЗаказыПоставщикамКрышкиОстатки.КоличествоОстаток, 0) КАК ЗаказаноКрышек
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		Аналоги.Заменяемое КАК Номенклатура,
		               |		Аналоги.Заменитель КАК Комплектующие,
		               |		Аналоги.Производитель КАК Производитель
		               |	ИЗ
		               |		РегистрСведений.Аналоги КАК Аналоги
		               |	ГДЕ
		               |		Аналоги.Заменитель В ИЕРАРХИИ(&Папка2)) КАК ВложенныйЗапрос
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(, ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки
		               |		ПО ВложенныйЗапрос.Номенклатура = ЗаказыПоставщикамСезонныеОстатки.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(
		               |				,
		               |				ЗаказПоставщику.НомерКонтейнера <> """"
		               |					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПоставщикамОстатки
		               |		ПО ВложенныйЗапрос.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамКрышки.Остатки(&ТекДата, ) КАК ЗаказыПоставщикамКрышкиОстатки
		               |		ПО ВложенныйЗапрос.Комплектующие = ЗаказыПоставщикамКрышкиОстатки.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		               |				,
		               |				Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		               |					И НЕ Склад.ЗапретитьИспользование
		               |					И НЕ Склад.Транзитный) КАК ТоварыНаСкладахОстатки
		               |		ПО ВложенныйЗапрос.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки1
		               |		ПО ВложенныйЗапрос.Комплектующие = ТоварыНаСкладахОстатки1.Номенклатура
		               |ГДЕ
		               |	(ВЫБОР
		               |				КОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ВЫБОР
		               |								КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		               |									ТОГДА 0
		               |								ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		               |							КОНЕЦ, 0) > 0
		               |						И ЕСТЬNULL(ВложенныйЗапрос.Производитель, 0) = 0
		               |					ТОГДА ИСТИНА
		               |				ИНАЧЕ ЛОЖЬ
		               |			КОНЕЦ
		               |			ИЛИ ВЫБОР
		               |				КОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки1.КоличествоОстаток, 0) > 0
		               |						ИЛИ ЕСТЬNULL(ЗаказыПоставщикамКрышкиОстатки.КоличествоОстаток, 0) <> 0
		               |							И ЕСТЬNULL(ВложенныйЗапрос.Производитель, 0) <> 0
		               |					ТОГДА ИСТИНА
		               |				ИНАЧЕ ЛОЖЬ
		               |			КОНЕЦ)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВложенныйЗапрос.Комплектующие,
		               |	ВложенныйЗапрос.Номенклатура,
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0),
		               |	ЕСТЬNULL(ВЫБОР
		               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		               |				ТОГДА 0
		               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		               |		КОНЕЦ, 0),
		               |	ВложенныйЗапрос.Номенклатура.Код,
		               |	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0),
		               |	ВложенныйЗапрос.Комплектующие.Код,
		               |	ЕСТЬNULL(ЗаказыПоставщикамКрышкиОстатки.КоличествоОстаток, 0),
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ВЫБОР
		               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		               |				ТОГДА 0
		               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		               |		КОНЕЦ, 0),
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки1.КоличествоОстаток, 0)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВложенныйЗапрос.Номенклатура.КодСБИС,
		               |	КрышкаКод
		               |ИТОГИ
		               |	СУММА(КоличествоНаСкладе),
		               |	СУММА(КоличествоВПроизводстве),
		               |	СУММА(КоличествоВПути),
		               |	СУММА(ВсегоДисков),
		               |	СРЕДНЕЕ(КоличествоКрышек),
		               |	СРЕДНЕЕ(ЗаказаноКрышек)
		               |ПО
		               |	Крышка";
		
		Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
		Запрос.УстановитьПараметр("Папка1", Справочники.Номенклатура.НайтиПоКоду("9106690"));
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВложенныйЗапрос.Комплектующие КАК Крышка,
		               |	ВложенныйЗапрос.Номенклатура,
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоНаСкладе,
		               |	ЕСТЬNULL(ВЫБОР
		               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		               |				ТОГДА 0
		               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		               |		КОНЕЦ, 0) КАК КоличествоВПроизводстве,
		               |	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) КАК КоличествоВПути,
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ВЫБОР
		               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		               |				ТОГДА 0
		               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		               |		КОНЕЦ, 0) КАК ВсегоДисков,
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки1.КоличествоОстаток, 0) КАК КоличествоКрышек,
		               |	ВложенныйЗапрос.Номенклатура.Код КАК НоменклатураКод,
		               |	ВложенныйЗапрос.Комплектующие.Код КАК КрышкаКод,
		               |	ЕСТЬNULL(ЗаказыПоставщикамКрышкиОстатки.КоличествоОстаток, 0) КАК ЗаказаноКрышек
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		КомплектующиеНоменклатуры.Номенклатура КАК Номенклатура,
		               |		КомплектующиеНоменклатуры.Комплектующая КАК Комплектующие
		               |	ИЗ
		               |		РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
		               |	ГДЕ
		               |		КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&Папка1)) КАК ВложенныйЗапрос
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(, ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки
		               |		ПО ВложенныйЗапрос.Номенклатура = ЗаказыПоставщикамСезонныеОстатки.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(
		               |				,
		               |				ЗаказПоставщику.НомерКонтейнера <> """"
		               |					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПоставщикамОстатки
		               |		ПО ВложенныйЗапрос.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамКрышки.Остатки(&ТекДата, ) КАК ЗаказыПоставщикамКрышкиОстатки
		               |		ПО ВложенныйЗапрос.Комплектующие = ЗаказыПоставщикамКрышкиОстатки.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		               |				,
		               |				Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
		               |					И НЕ Склад.ЗапретитьИспользование
		               |					И НЕ Склад.Транзитный) КАК ТоварыНаСкладахОстатки
		               |		ПО ВложенныйЗапрос.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки1
		               |		ПО ВложенныйЗапрос.Комплектующие = ТоварыНаСкладахОстатки1.Номенклатура
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВложенныйЗапрос.Комплектующие,
		               |	ВложенныйЗапрос.Номенклатура,
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0),
		               |	ЕСТЬNULL(ВЫБОР
		               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		               |				ТОГДА 0
		               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		               |		КОНЕЦ, 0),
		               |	ВложенныйЗапрос.Номенклатура.Код,
		               |	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0),
		               |	ВложенныйЗапрос.Комплектующие.Код,
		               |	ЕСТЬNULL(ЗаказыПоставщикамКрышкиОстатки.КоличествоОстаток, 0),
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ВЫБОР
		               |			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток < 0
		               |				ТОГДА 0
		               |			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		               |		КОНЕЦ, 0),
		               |	ЕСТЬNULL(ТоварыНаСкладахОстатки1.КоличествоОстаток, 0)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВложенныйЗапрос.Номенклатура.КодСБИС,
		               |	КрышкаКод
		               |ИТОГИ
		               |	СУММА(КоличествоНаСкладе),
		               |	СУММА(КоличествоВПроизводстве),
		               |	СУММА(КоличествоВПути),
		               |	СУММА(ВсегоДисков),
		               |	СРЕДНЕЕ(КоличествоКрышек),
		               |	СРЕДНЕЕ(ЗаказаноКрышек)
		               |ПО
		               |	Крышка";
		
		Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	КонецЕсли;
	
	Пока Результат.Следующий() Цикл
		
		ОбластьСтрокаГруппировки.Параметры.Заполнить(Результат);
		Если НЕ Результат.Крышка = "Диски без привязки к крышкам" Тогда
			ОбластьСтрокаГруппировки.Параметры.КрышкаКод = Результат.Крышка.КодСБИС;
		КонецЕсли;
		
		Разница = 0;
		НеобходимыйЗапасКрышек = 0;
		ОбластьСтрокаГруппировки.Параметры.ВЗаказ = 0;
		
		Если НЕ Результат.ВсегоДисков = 0 Тогда
			НеобходимыйЗапасКрышек = Результат.ВсегоДисков  -?(Результат.ЗаказаноКрышек=Null,0,Результат.ЗаказаноКрышек); 
			Разница = Окр(НеобходимыйЗапасКрышек - Результат.КоличествоКрышек);
			Если Разница > 0 Тогда
				ОбластьСтрокаГруппировки.Параметры.ВЗаказ = Разница*1.1; 
			КонецЕсли;
		КонецЕсли;
		
		Если ВыводитьТолькоДефицитПоКрышкам Тогда
			
			Если ОбластьСтрокаГруппировки.Параметры.ВЗаказ > 0 Тогда
				ТабДок.Вывести(ОбластьСтрокаГруппировки,1,,Ложь);
				
				Выборка = Результат.Выбрать();
				Пока Выборка.Следующий() Цикл
					Если Выборка.ВсегоДисков > 0 Тогда
						ОбластьСтрока.Параметры.Заполнить(Выборка);
						ОбластьСтрока.Параметры.КоличествоКрышек = "";
						ТабДок.Вывести(ОбластьСтрока,2,,Ложь);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			ТабДок.Вывести(ОбластьСтрокаГруппировки,1,,Ложь);
			
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если Выборка.ВсегоДисков > 0 Тогда
					ОбластьСтрока.Параметры.Заполнить(Выборка);
					ОбластьСтрока.Параметры.КоличествоКрышек = "";
					ТабДок.Вывести(ОбластьСтрока,2,,Ложь);
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабДок.ФиксацияСверху = 6;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
	ВыполнитьАнализ(Истина);
КонецПроцедуры

Процедура ПриОткрытии()
	ТолькоНашиБренды = Истина;
КонецПроцедуры
