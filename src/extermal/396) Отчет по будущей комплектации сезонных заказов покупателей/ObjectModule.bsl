
Процедура ВыполнитьАнализ() Экспорт
	
	СписокНоменклатурныхГрупп = Новый СписокЗначений;
	СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026")); //Литые
	СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049")); //Штампованные
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДокОсн = Новый ТабличныйДокумент;

	Макет = ПолучитьМакет("Отчет");
	ОбластьЗаголовок				 			   = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрокаЗаголовокПриходТоваров            = Макет.ПолучитьОбласть("СтрокаЗаголовокПриходТоваров");
	ОбластьЗаголовокПроизводитель	 			   = Макет.ПолучитьОбласть("ЗаголовокПроизводитель");
	ОбластьСтрокаНоменклатура				 	   = Макет.ПолучитьОбласть("СтрокаНоменклатура");
	ОбластьЗаголовокТранзит						   = Макет.ПолучитьОбласть("ЗаголовокТранзит");
	ОбластьЗаголовокКонтрагент                     = Макет.ПолучитьОбласть("ЗаголовокКонтрагент");
	ОбластьКонтрагент						       = Макет.ПолучитьОбласть("Контрагент");
	ОбластьЗаголовокПроизводительКонтрагент	       = Макет.ПолучитьОбласть("ЗаголовокПроизводительКонтрагент");
	ОбластьСтрокаНоменклатураКонтрагент		       = Макет.ПолучитьОбласть("СтрокаНоменклатураКонтрагент");
	ОбластьСтрокаНоменклатураДетали			       = Макет.ПолучитьОбласть("СтрокаНоменклатураКонтрагент1");
	ОбластьИтоги 								   = Макет.ПолучитьОбласть("Итоги");
	ОбластьИтогиПоЗаказам 						   = Макет.ПолучитьОбласть("ИтогиПоЗаказам");
	
	ТабДок.Очистить();
	ТабДок.НачатьАвтогруппировкуСтрок();
	ТабДокОсн.Очистить();
	ТабДокОсн.НачатьАвтогруппировкуСтрок();
	
	//Товары в производстве
	ТаблицаТоварыВПроизводстве = ПолучитьТоварыВПроизводстве();
	//Товары в пути	
	ТаблицаТоварыВПути = ПолучитьТоварыВПути();
	ТаблицаТоварыВПутиТранзитНаГрузополучателя = ПолучитьТоварыВПутиНаГрузополучателя();
	ТаблицаТоварыВПутиДляВывода = ПолучитьТоварыВПутиДляВывода();
	//Товары в свободном остатке на складе
	ТаблицаТоварыНаСкладеГоловное = ПолучитьТоварыНаСкладеГоловное();
	ТаблицаТоварыНаСкладеОбособленное = ПолучитьТоварыНаСкладеОбособленное();
	//Товары с сезонных заказах покупателя
	ТаблицаТоварыВСезонныхЗаказах = ПолучитьТоварыВСезонныхЗаказах();
	
	
			
	Контрагент = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДесятьМесДоТекущейДаты", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-10));
	Запрос.УстановитьПараметр("КонецСледМесяца", КонецМесяца(ДобавитьМесяц(ТекущаяДата(),1)));
	Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокНоменклатурныхГрупп);
	Запрос.Текст = "ВЫБРАТЬ
				   |	ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент КАК Контрагент,
				   |	ЗаказПокупателяСезонныйТовары.Ссылка,
				   |	ЗаказПокупателяСезонныйТовары.Ссылка.Дата КАК Дата
				   |ИЗ
				   |	Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПокупателяСезонныйТовары
				   |ГДЕ
				   |	НЕ ЗаказПокупателяСезонныйТовары.Ссылка.ПометкаУдаления
				   |	И ЗаказПокупателяСезонныйТовары.Ссылка.Дата >= &ДесятьМесДоТекущейДаты
				   |	И ЗаказПокупателяСезонныйТовары.Ссылка.ДатаДействияПо > &КонецСледМесяца
				   |	И ЗаказПокупателяСезонныйТовары.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
				   |	И ЗаказПокупателяСезонныйТовары.Номенклатура.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ЗаказПокупателяСезонныйТовары.Ссылка,
				   |	ЗаказПокупателяСезонныйТовары.Ссылка.Дата,
				   |	ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	Дата
				   |ИТОГИ ПО
				   |	Контрагент
				   |АВТОУПОРЯДОЧИВАНИЕ";
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаТоварыВСезонныхЗаказах = Новый ТаблицаЗначений;
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("Контрагент");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("Менеджер");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("СезонныйЗаказ");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("Подразделение");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("ДатаНач");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("ДатаКон");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("Номенклатура");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("НоменклатурнаяГруппа");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("Производитель");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("ВСезонномЗаказе");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("ОтгруженоПоСезонномуЗаказу");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("РезервПоСезонномуЗаказу");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("СвободныйОстатокНаСкладе");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("ТоварыВПутиНаГрузополучателя");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("ОтстатокПотребностиПоСезонномуЗаказу");
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("РезервПрочий");                          //не используется
	ТаблицаТоварыВСезонныхЗаказах.Колонки.Добавить("ТоварыВПутиОбщие");
	
	ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту = ТаблицаТоварыВСезонныхЗаказах.Скопировать();
	
	СписокКонтрагентов = Новый СписокЗначений;
	
	Пока Результат.Следующий() Цикл
		
		Контрагент = Результат.Контрагент;
		СписокКонтрагентов.Добавить(Контрагент); 
		
		ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту.Очистить();
		
		Выборка = Результат.Выбрать(); //все сезонные заказы по контрагенту
		
		Пока Выборка.Следующий() Цикл
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", Выборка.Ссылка);
			Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокНоменклатурныхГрупп);
			Запрос.Текст = "ВЫБРАТЬ
						   |	ЗаказПокупателяСезонныйТовары.Номенклатура КАК Номенклатура,
						   |	СУММА(ЗаказПокупателяСезонныйТовары.Количество) КАК Количество
						   |ИЗ
						   |	Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПокупателяСезонныйТовары
						   |ГДЕ
						   |	ЗаказПокупателяСезонныйТовары.Ссылка = &Ссылка
						   |	И ЗаказПокупателяСезонныйТовары.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
						   |	И ЗаказПокупателяСезонныйТовары.Номенклатура.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
						   |
						   |СГРУППИРОВАТЬ ПО
						   |	ЗаказПокупателяСезонныйТовары.Номенклатура";
			ВыборкаТЧ = Запрос.Выполнить().Выбрать();
			Пока ВыборкаТЧ.Следующий() Цикл
				СтрокаТЗ										 = ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту.Добавить();
				СтрокаТЗ.Контрагент								 = Контрагент;
				СтрокаТЗ.Менеджер								 = Контрагент.ОсновнойМенеджерКонтрагента;
				СтрокаТЗ.СезонныйЗаказ							 = Выборка.Ссылка;
				СтрокаТЗ.Подразделение							 = Выборка.Ссылка.Подразделение;
				СтрокаТЗ.ДатаНач								 = Выборка.Ссылка.Дата;
				СтрокаТЗ.ДатаКон								 = КонецДня(Выборка.Ссылка.ДатаДействияПо);
				СтрокаТЗ.Номенклатура							 = ВыборкаТЧ.Номенклатура;
				СтрокаТЗ.НоменклатурнаяГруппа					 = ВыборкаТЧ.Номенклатура.НоменклатурнаяГруппа;
				СтрокаТЗ.Производитель							 = ВыборкаТЧ.Номенклатура.Производитель;
				СтрокаТЗ.ВСезонномЗаказе						 = ВыборкаТЧ.Количество;
				СтрокаТЗ.ОтгруженоПоСезонномуЗаказу				 = 0;
				СтрокаТЗ.РезервПоСезонномуЗаказу				 = 0;
				СтрокаТЗ.СвободныйОстатокНаСкладе				 = 0;
				СтрокаТЗ.ТоварыВПутиНаГрузополучателя			 = 0;
				СтрокаТЗ.ОтстатокПотребностиПоСезонномуЗаказу	 = 0;
				СтрокаТЗ.РезервПрочий							 = 0;
				СтрокаТЗ.ТоварыВПутиОбщие						 = 0;
			КонецЦикла;
			
		КонецЦикла;  //все сезонные заказы по контрагенту
		
		//перебрали все сезонные заказы по контрагенту, теперь получаем по ним данные с учетом подразделений 
		ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту.Сортировать("ДатаКон Убыв");
		ДатаКон = ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту[0].ДатаКон;
		ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту.Сортировать("ДатаНач Возр");
		ДатаНач = ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту[0].ДатаНач;
		
		//1. что отгружено по сезонным заказам
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
		Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокНоменклатурныхГрупп);
		Запрос.Текст = "ВЫБРАТЬ
					   |	ПродажиОбороты.ДокументПродажи.Дата КАК ДокументПродажиДата,
					   |	ПродажиОбороты.Номенклатура КАК Номенклатура,
					   |	ПродажиОбороты.КоличествоОборот КАК Количество,
					   |	ПродажиОбороты.Подразделение
					   |ИЗ
					   |	РегистрНакопления.Продажи.Обороты(
					   |			&ДатаНач,
					   |			&ДатаКон,
					   |			,
					   |			ДоговорКонтрагента.Владелец = &Контрагент
					   |				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
					   |				И Номенклатура.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ПродажиОбороты
					   |
					   |УПОРЯДОЧИТЬ ПО
					   |	ДокументПродажиДата
					   |АВТОУПОРЯДОЧИВАНИЕ";
		
		ТаблицаПродаж = Запрос.Выполнить().Выгрузить();
		Для каждого СтрТЗ ИЗ ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту Цикл
			Потребность = СтрТЗ.ВСезонномЗаказе;
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура", СтрТЗ.Номенклатура);
			Отбор.Вставить("Подразделение", СтрТЗ.Подразделение);
			МассивСтрокПродаж = ТаблицаПродаж.НайтиСтроки(Отбор);
			Для Каждого СтрМассива ИЗ МассивСтрокПродаж Цикл
				Если Потребность > 0 И СтрМассива.Количество > 0 Тогда
					Если СтрМассива.ДокументПродажиДата >= СтрТЗ.ДатаНач И СтрМассива.ДокументПродажиДата <= СтрТЗ.ДатаКон Тогда
						Если СтрМассива.Количество >= Потребность Тогда
							СтрТЗ.ОтгруженоПоСезонномуЗаказу = Потребность;
							СтрМассива.Количество = СтрМассива.Количество - Потребность;
							Потребность = 0;
						Иначе
							СтрТЗ.ОтгруженоПоСезонномуЗаказу = СтрМассива.Количество;
							Потребность = Потребность - СтрМассива.Количество; 
							СтрМассива.Количество = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		//2. что есть в товарах в пути на грузополучателя
		//выводятся все товары в пути на грузополучателя, даже если они превышают количество в сезонном заказе
		Для каждого СтрТЗ ИЗ ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Грузополучатель", Контрагент);
			Отбор.Вставить("Номенклатура", СтрТЗ.Номенклатура);
			
			СтрокиТаблицаТоварыВПутиТранзитНаГрузополучателя = ТаблицаТоварыВПутиТранзитНаГрузополучателя.НайтиСтроки(Отбор);
			Для Каждого СтрМассива ИЗ СтрокиТаблицаТоварыВПутиТранзитНаГрузополучателя Цикл
				СтрТЗ.ТоварыВПутиНаГрузополучателя = СтрТЗ.ТоварыВПутиНаГрузополучателя + СтрМассива.КоличествоВПути;
				СтрМассива.КоличествоВПути = 0;
			КонецЦикла;
		КонецЦикла;
				
		//3. что в резерве, и удовлетворяет сезонным заказам
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокНоменклатурныхГрупп);
		Запрос.Текст = "ВЫБРАТЬ
					   |	ЗаказыПокупателейОстатки.Номенклатура,
					   |	ЗаказыПокупателейОстатки.КоличествоОстаток КАК Количество,
					   |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение КАК Подразделение,
					   |	ЗаказыПокупателейОстатки.ЗаказПокупателя
					   |ИЗ
					   |	РегистрНакопления.ЗаказыПокупателей.Остатки(
					   |			,
					   |			ЗаказПокупателя.Проверен
					   |				И ДоговорКонтрагента.Владелец = &Контрагент
					   |				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
					   |				И Номенклатура.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ЗаказыПокупателейОстатки";
					   
		ТаблицаРезервов = Запрос.Выполнить().Выгрузить();
		Для каждого СтрТЗ ИЗ ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту Цикл
			Потребность = СтрТЗ.ВСезонномЗаказе - СтрТЗ.ОтгруженоПоСезонномуЗаказу - СтрТЗ.ТоварыВПутиНаГрузополучателя;
			Если Потребность > 0 Тогда
				Отбор = Новый Структура;
				Отбор.Вставить("Номенклатура", СтрТЗ.Номенклатура);
				Отбор.Вставить("Подразделение", СтрТЗ.Подразделение);
				МассивСтрокРезервов = ТаблицаРезервов.НайтиСтроки(Отбор);
				Для Каждого СтрМассива ИЗ МассивСтрокРезервов Цикл
					Если Потребность > 0 И СтрМассива.Количество > 0 Тогда
						Если СтрМассива.Количество >= Потребность Тогда
							СтрТЗ.РезервПоСезонномуЗаказу = Потребность;
							СтрМассива.Количество = СтрМассива.Количество - Потребность;
							Потребность = 0;
						Иначе
							СтрТЗ.РезервПоСезонномуЗаказу = СтрМассива.Количество;
							Потребность = Потребность - СтрМассива.Количество;
							СтрМассива.Количество = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		//остатки по резервам надо добавить в таблицу значений как прочий резерв (не по сезонным заказам)
		Для каждого СтрокаТЗ ИЗ ТаблицаРезервов Цикл
			Если СтрокаТЗ.Количество > 0 Тогда
				СтрТЗ										 = ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту.Добавить();
				СтрТЗ.Контрагент							 = Контрагент;
				СтрТЗ.Менеджер								 = Контрагент.ОсновнойМенеджерКонтрагента;
				СтрТЗ.СезонныйЗаказ							 = СтрокаТЗ.ЗаказПокупателя;
				СтрТЗ.Подразделение							 = СтрокаТЗ.Подразделение;
				СтрТЗ.ДатаНач								 = Дата(1,1,1);
				СтрТЗ.ДатаКон								 = Дата(1,1,1);
				СтрТЗ.Номенклатура							 = СтрокаТЗ.Номенклатура;
				СтрТЗ.НоменклатурнаяГруппа					 = СтрокаТЗ.Номенклатура.НоменклатурнаяГруппа;
				СтрТЗ.Производитель							 = СтрокаТЗ.Номенклатура.Производитель;
				СтрТЗ.ВСезонномЗаказе						 = 0;
				СтрТЗ.ОтгруженоПоСезонномуЗаказу			 = 0;
				СтрТЗ.РезервПоСезонномуЗаказу				 = СтрокаТЗ.Количество;
				СтрТЗ.СвободныйОстатокНаСкладе				 = 0;
				СтрТЗ.ТоварыВПутиНаГрузополучателя			 = 0;
				СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу	 = 0;
				СтрТЗ.РезервПрочий                           = СтрокаТЗ.Количество;
				СтрТЗ.ТоварыВПутиОбщие						 = 0;
			КонецЕсли;
		КонецЦикла;
		
		//4. что есть в свободном остатке на складе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокНоменклатурныхГрупп);
		Запрос.Текст = "ВЫБРАТЬ
					   |	А.Номенклатура,
					   |	А.ОстатокНаСкладах - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток,
					   |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение КАК Подразделение
					   |ИЗ
					   |	(ВЫБРАТЬ
					   |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладах,
					   |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура
					   |	ИЗ
					   |		РегистрНакопления.ТоварыНаСкладах.Остатки(
					   |				,
					   |				НЕ Склад.ЗапретитьИспользование
					   |					И НЕ Склад.Транзитный
					   |					И Номенклатура.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ТоварыНаСкладахОстатки) КАК А
					   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
					   |				,
					   |				ЗаказПокупателя.Проверен
					   |					И НЕ ЗаказПокупателя.Транзит
					   |					И Номенклатура.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ЗаказыПокупателейОстатки
					   |		ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура";
		ТаблицаТоварыНаСкладахГоловное = Запрос.Выполнить().Выгрузить();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокНоменклатурныхГрупп);
		Запрос.Текст = "ВЫБРАТЬ
					   |	А.Номенклатура,
					   |	А.ОстатокНаСкладах - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток,
					   |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение КАК Подразделение
					   |ИЗ
					   |	(ВЫБРАТЬ
					   |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладах,
					   |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
					   |		ТоварыНаСкладахОстатки.Склад.Подразделение КАК СкладПодразделение
					   |	ИЗ
					   |		РегистрНакопления.ТоварыНаСкладах.Остатки(
					   |				,
					   |				НЕ Склад.ЗапретитьИспользование
					   |					И Склад.Транзитный
					   |					И Номенклатура.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ТоварыНаСкладахОстатки) КАК А
					   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
					   |				,
					   |				ЗаказПокупателя.Проверен
					   |					И ЗаказПокупателя.Транзит
					   |					И Номенклатура.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ЗаказыПокупателейОстатки
					   |		ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
					   |			И А.СкладПодразделение = ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение";
		ТаблицаТоварыНаСкладахОбособленные = Запрос.Выполнить().Выгрузить();
		
		Для каждого СтрТЗ ИЗ ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту Цикл
			Потребность = СтрТЗ.ВСезонномЗаказе - СтрТЗ.ОтгруженоПоСезонномуЗаказу - СтрТЗ.РезервПоСезонномуЗаказу - СтрТЗ.ТоварыВПутиНаГрузополучателя;
			Если Потребность > 0 Тогда
				Отбор = Новый Структура;
				Отбор.Вставить("Номенклатура", СтрТЗ.Номенклатура);
				Отбор.Вставить("Подразделение", СтрТЗ.Подразделение);
				Если СтрТЗ.Подразделение = Справочники.Подразделения.НайтиПоКоду("00005") Тогда  //головное
					МассивСтрокСвободныхОстатков = ТаблицаТоварыНаСкладахГоловное.НайтиСтроки(Отбор);
				Иначе
					МассивСтрокСвободныхОстатков = ТаблицаТоварыНаСкладахОбособленные.НайтиСтроки(Отбор);
				КонецЕсли;
				Для Каждого СтрМассива ИЗ МассивСтрокСвободныхОстатков Цикл
					Если Потребность > 0 И СтрМассива.СвободныйОстаток > 0 Тогда
						Если СтрМассива.СвободныйОстаток >= Потребность Тогда
							СтрТЗ.СвободныйОстатокНаСкладе = Потребность;
							СтрМассива.СвободныйОстаток = СтрМассива.СвободныйОстаток - Потребность;
							Потребность = 0;
						Иначе
							СтрТЗ.СвободныйОстатокНаСкладе = СтрМассива.СвободныйОстаток;
							Потребность = Потребность - СтрМассива.СвободныйОстаток;
							СтрМассива.СвободныйОстаток = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
			
		//Добавляем в таблицу все неразобранные товары в пути на грузополучатетелй               
		Для каждого СтрокаТЗ ИЗ ТаблицаТоварыВПутиТранзитНаГрузополучателя Цикл
			Если СтрокаТЗ.КоличествоВПути > 0 И СтрокаТЗ.Грузополучатель = Контрагент Тогда
				СтрТЗ										 = ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту.Добавить();
				СтрТЗ.Контрагент							 = Контрагент;
				СтрТЗ.Менеджер								 = Контрагент.ОсновнойМенеджерКонтрагента;
				СтрТЗ.СезонныйЗаказ							 = СтрокаТЗ.ЗаказПоставщику;
				СтрТЗ.Подразделение							 = СтрокаТЗ.ЗаказПоставщику.Подразделение;
				СтрТЗ.ДатаНач								 = Дата(1,1,1);
				СтрТЗ.ДатаКон								 = Дата(1,1,1);
				СтрТЗ.Номенклатура							 = СтрокаТЗ.Номенклатура;
				СтрТЗ.НоменклатурнаяГруппа					 = СтрокаТЗ.Номенклатура.НоменклатурнаяГруппа;
				СтрТЗ.Производитель							 = СтрокаТЗ.Номенклатура.Производитель;
				СтрТЗ.ВСезонномЗаказе						 = 0;
				СтрТЗ.ОтгруженоПоСезонномуЗаказу			 = 0;
				СтрТЗ.РезервПоСезонномуЗаказу				 = 0;
				СтрТЗ.СвободныйОстатокНаСкладе				 = 0;
				СтрТЗ.ТоварыВПутиНаГрузополучателя			 = СтрокаТЗ.КоличествоВПути;
				СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу	 = 0;
				СтрТЗ.РезервПрочий                           = 0;
				СтрТЗ.ТоварыВПутиОбщие						 = 0;
				СтрокаТЗ.КоличествоВПути = 0;
			КонецЕсли;
		КонецЦикла;
				
		//Сливаем таблицу по контрагенту в общую ТЗ
		Для Каждого СтрТЗ ИЗ ТаблицаТоварыВСезонныхЗаказахПоКонтрагенту Цикл
			СтрокаТЗ = ТаблицаТоварыВСезонныхЗаказах.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЗ, СтрТЗ);
		КонецЦикла; 
				
	КонецЦикла; //выборка контрагентов из сезонных заказов
		
	//5. что есть в товарах в пути на склад
	//Даже если у контрагента есть персональные товары в пути, но их не хватает до полного удовлетворения потребности, то доделиваем из общих товаров в пути
	ТаблицаТоварыВСезонныхЗаказах.Сортировать("ДатаНач");
	Для каждого СтрТЗ ИЗ ТаблицаТоварыВСезонныхЗаказах Цикл
		Потребность = СтрТЗ.ВСезонномЗаказе - СтрТЗ.ОтгруженоПоСезонномуЗаказу - СтрТЗ.РезервПоСезонномуЗаказу - СтрТЗ.ТоварыВПутиНаГрузополучателя - СтрТЗ.СвободныйОстатокНаСкладе;
		Если Потребность > 0 Тогда 
			Отбор = Новый Структура;
			Отбор.Вставить("Подразделение", СтрТЗ.СезонныйЗаказ.Подразделение);
			Отбор.Вставить("Номенклатура", СтрТЗ.Номенклатура);
			СтрокиТаблицаТоварыВПути = ТаблицаТоварыВПути.НайтиСтроки(Отбор);
			Для Каждого СтрМассива ИЗ СтрокиТаблицаТоварыВПути Цикл
				Если Потребность > 0 И СтрМассива.КоличествоВПути > 0 Тогда
					Если СтрМассива.КоличествоВПути >= Потребность Тогда 
						СтрТЗ.ТоварыВПутиОбщие = СтрТЗ.ТоварыВПутиОбщие + Потребность;
						СтрМассива.КоличествоВПути = СтрМассива.КоличествоВПути - Потребность;
						Потребность = 0;
					Иначе
						СтрТЗ.ТоварыВПутиОбщие = СтрТЗ.ТоварыВПутиОбщие + СтрМассива.КоличествоВПути;
						Потребность = Потребность - СтрМассива.КоличествоВПути;
						СтрМассива.КоличествоВПути = 0;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрТЗ ИЗ ТаблицаТоварыВСезонныхЗаказах Цикл
		Потребность = СтрТЗ.ВСезонномЗаказе - СтрТЗ.ОтгруженоПоСезонномуЗаказу - СтрТЗ.РезервПоСезонномуЗаказу - СтрТЗ.СвободныйОстатокНаСкладе - СтрТЗ.ТоварыВПутиНаГрузополучателя - СтрТЗ.ТоварыВПутиОбщие;  
		Если Потребность > 0 Тогда
			СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу = Потребность;
		КонецЕсли;
	КонецЦикла;
	
	//Добавляем в таблицу все неразобранные товары в пути на грузополучатетелй               
	Для каждого СтрокаТЗ ИЗ ТаблицаТоварыВПутиТранзитНаГрузополучателя Цикл
		Если СтрокаТЗ.КоличествоВПути > 0 Тогда
			СтрТЗ										 = ТаблицаТоварыВСезонныхЗаказах.Добавить();
			СтрТЗ.Контрагент							 = СтрокаТЗ.ЗаказПоставщику.Грузополучатель;
			СтрТЗ.Менеджер								 = СтрокаТЗ.ЗаказПоставщику.Грузополучатель.ОсновнойМенеджерКонтрагента;
			СтрТЗ.СезонныйЗаказ							 = СтрокаТЗ.ЗаказПоставщику;
			СтрТЗ.Подразделение							 = СтрокаТЗ.ЗаказПоставщику.Подразделение;
			СтрТЗ.ДатаНач								 = Дата(1,1,1);
			СтрТЗ.ДатаКон								 = Дата(1,1,1);
			СтрТЗ.Номенклатура							 = СтрокаТЗ.Номенклатура;
			СтрТЗ.НоменклатурнаяГруппа					 = СтрокаТЗ.Номенклатура.НоменклатурнаяГруппа;
			СтрТЗ.Производитель							 = СтрокаТЗ.Номенклатура.Производитель;
			СтрТЗ.ВСезонномЗаказе						 = 0;
			СтрТЗ.ОтгруженоПоСезонномуЗаказу			 = 0;
			СтрТЗ.РезервПоСезонномуЗаказу				 = 0;
			СтрТЗ.СвободныйОстатокНаСкладе				 = 0;
			СтрТЗ.ТоварыВПутиНаГрузополучателя			 = СтрокаТЗ.КоличествоВПути;
			СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу	 = 0;
			СтрТЗ.РезервПрочий                           = 0;
			СтрТЗ.ТоварыВПутиОбщие						 = 0;
			СтрокаТЗ.КоличествоВПути = 0;
		КонецЕсли;
	КонецЦикла;
	
	//6. все остальные резервы по другим контрагентам, у которых нет сезонных заказов
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокКонтрагентов", СписокКонтрагентов);
	Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокНоменклатурныхГрупп);
	Запрос.Текст = "ВЫБРАТЬ
				   |	ЗаказыПокупателейОстатки.Номенклатура,
				   |	ЗаказыПокупателейОстатки.КоличествоОстаток КАК Количество,
				   |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение КАК Подразделение,
				   |	ЗаказыПокупателейОстатки.ЗаказПокупателя
				   |ИЗ
				   |	РегистрНакопления.ЗаказыПокупателей.Остатки(
				   |			,
				   |			ЗаказПокупателя.Проверен
				   |				И НЕ ДоговорКонтрагента.Владелец В (&СписокКонтрагентов)
				   |				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
				   |				И Номенклатура.НоменклатурнаяГруппа В (&СписокНоменклатурныхГрупп)) КАК ЗаказыПокупателейОстатки";
	ТаблицаПрочиеРезервыПоПрочимКонтрагентам = Запрос.Выполнить().Выбрать();
	Пока ТаблицаПрочиеРезервыПоПрочимКонтрагентам.Следующий() Цикл
		СтрТЗ										 = ТаблицаТоварыВСезонныхЗаказах.Добавить();
		СтрТЗ.Контрагент							 = ТаблицаПрочиеРезервыПоПрочимКонтрагентам.ЗаказПокупателя.Контрагент;
		СтрТЗ.Менеджер								 = ТаблицаПрочиеРезервыПоПрочимКонтрагентам.ЗаказПокупателя.Контрагент.ОсновнойМенеджерКонтрагента;
		СтрТЗ.СезонныйЗаказ							 = ТаблицаПрочиеРезервыПоПрочимКонтрагентам.ЗаказПокупателя;
		СтрТЗ.Подразделение							 = ТаблицаПрочиеРезервыПоПрочимКонтрагентам.Подразделение;
		СтрТЗ.ДатаНач								 = Дата(1,1,1);
		СтрТЗ.ДатаКон								 = Дата(1,1,1);
		СтрТЗ.Номенклатура							 = ТаблицаПрочиеРезервыПоПрочимКонтрагентам.Номенклатура;
		СтрТЗ.НоменклатурнаяГруппа					 = ТаблицаПрочиеРезервыПоПрочимКонтрагентам.Номенклатура.НоменклатурнаяГруппа;
		СтрТЗ.Производитель							 = ТаблицаПрочиеРезервыПоПрочимКонтрагентам.Номенклатура.Производитель;
		СтрТЗ.ВСезонномЗаказе						 = 0;
		СтрТЗ.ОтгруженоПоСезонномуЗаказу			 = 0;
		СтрТЗ.РезервПоСезонномуЗаказу				 = ТаблицаПрочиеРезервыПоПрочимКонтрагентам.Количество;
		СтрТЗ.СвободныйОстатокНаСкладе				 = 0;
		СтрТЗ.ТоварыВПутиНаГрузополучателя			 = 0;
		СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу	 = 0;
		СтрТЗ.РезервПрочий                           = ТаблицаПрочиеРезервыПоПрочимКонтрагентам.Количество;;
		СтрТЗ.ТоварыВПутиОбщие						 = 0;
	//	СтрТЗ.КоличествоВПути = 0;
	КонецЦикла;
	
	
				   
				   
				   
				   
	
	ТаблицаПоМенеджерам = ТаблицаТоварыВСезонныхЗаказах.Скопировать();
	ТаблицаПоМенеджерам.Свернуть("Менеджер", "ВСезонномЗаказе,ОтгруженоПоСезонномуЗаказу,РезервПоСезонномуЗаказу,СвободныйОстатокНаСкладе,ТоварыВПутиНаГрузополучателя,ОтстатокПотребностиПоСезонномуЗаказу,РезервПрочий,ТоварыВПутиОбщие");	
	ТаблицаПоМенеджерам.Сортировать("Менеджер");	
	
	Для каждого СтрокаТЗПоМенеджерам ИЗ ТаблицаПоМенеджерам Цикл
		
		//#Если Сервер Тогда
			ТабДок.Очистить();
			ТабДок.НачатьАвтогруппировкуСтрок();
			ТабДокОсн.НачатьАвтогруппировкуСтрок();
		//#КонецЕсли
		
		ОбластьЗаголовокКонтрагент.Параметры.Менеджер = СтрокаТЗПоМенеджерам.Менеджер;
		Если ТаблицаТоварыВСезонныхЗаказах.Количество() > 0 Тогда
			ТабДок.Вывести(ОбластьЗаголовокКонтрагент, 1);
			ТабДокОсн.Вывести(ОбластьЗаголовокКонтрагент, 1);
		КонецЕсли;
		
		ТаблицаПоКонтрагентам = ТаблицаТоварыВСезонныхЗаказах.Скопировать();
		ТаблицаПоКонтрагентам.Свернуть("Менеджер, Контрагент", "ВСезонномЗаказе,ОтгруженоПоСезонномуЗаказу,РезервПоСезонномуЗаказу,СвободныйОстатокНаСкладе,ТоварыВПутиНаГрузополучателя,ОтстатокПотребностиПоСезонномуЗаказу,РезервПрочий,ТоварыВПутиОбщие");	
		ТаблицаПоКонтрагентам.Сортировать("Контрагент");
		
		Отбор = Новый Структура;
		Отбор.Вставить("Менеджер", СтрокаТЗПоМенеджерам.Менеджер);
		МассивСтрокПоМенеджеру = ТаблицаПоКонтрагентам.НайтиСтроки(Отбор);
		
		ВСезонномЗаказеПоМенедежру = 0;
		ОтгруженоПоСезонномуЗаказуПоМенедежру = 0;
		РезервПоСезонномуЗаказуПоМенедежру = 0;
		ОтстатокПотребностиПоСезонномуЗаказуПоМенедежру = 0;
		СвободныйОстатокНаСкладеПоМенедежру = 0;
		ТоварыВПутиНаГрузополучателяПоМенедежру = 0;
		ТоварыВПутиОбщиеПоМенедежру = 0;
		
		
		Для каждого СтрТЗ ИЗ МассивСтрокПоМенеджеру Цикл
			
			ОбластьКонтрагент.Параметры.Контрагент	 = СтрТЗ.Контрагент;
			ОбластьКонтрагент.Параметры.Заказано	 = СтрТЗ.ВСезонномЗаказе;
			ОбластьКонтрагент.Параметры.Отгружено	 = СтрТЗ.ОтгруженоПоСезонномуЗаказу;
			ОбластьКонтрагент.Параметры.ВРезерве	 = СтрТЗ.РезервПоСезонномуЗаказу;
			ОбластьКонтрагент.Параметры.Потребность	 = ?(СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу > 0, СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу, 0);
			ОбластьКонтрагент.Параметры.НаСкладе	 = СтрТЗ.СвободныйОстатокНаСкладе;
			ОбластьКонтрагент.Параметры.ВПути		 = СтрТЗ.ТоварыВПутиНаГрузополучателя;
			ОбластьКонтрагент.Параметры.ВПутиНаСклад = СтрТЗ.ТоварыВПутиОбщие;
			ТабДок.Вывести(ОбластьКонтрагент, 1,,Ложь);
			ТабДокОсн.Вывести(ОбластьКонтрагент, 1,,Ложь);
			
			ВСезонномЗаказеПоМенедежру = ВСезонномЗаказеПоМенедежру +  СтрТЗ.ВСезонномЗаказе;
			ОтгруженоПоСезонномуЗаказуПоМенедежру = ОтгруженоПоСезонномуЗаказуПоМенедежру + СтрТЗ.ОтгруженоПоСезонномуЗаказу;
			РезервПоСезонномуЗаказуПоМенедежру = РезервПоСезонномуЗаказуПоМенедежру + СтрТЗ.РезервПоСезонномуЗаказу;
			ОтстатокПотребностиПоСезонномуЗаказуПоМенедежру = ОтстатокПотребностиПоСезонномуЗаказуПоМенедежру + ?(СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу > 0, СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу, 0);;
			СвободныйОстатокНаСкладеПоМенедежру = СвободныйОстатокНаСкладеПоМенедежру + СтрТЗ.СвободныйОстатокНаСкладе;
			ТоварыВПутиНаГрузополучателяПоМенедежру = ТоварыВПутиНаГрузополучателяПоМенедежру + СтрТЗ.ТоварыВПутиНаГрузополучателя;
			ТоварыВПутиОбщиеПоМенедежру = ТоварыВПутиОбщиеПоМенедежру + СтрТЗ.ТоварыВПутиОбщие;
			
			ТаблицаПоЗаказам = ТаблицаТоварыВСезонныхЗаказах.Скопировать();
			ТаблицаПоЗаказам.Свернуть("Контрагент, СезонныйЗаказ, ДатаНач", "ВСезонномЗаказе,ОтгруженоПоСезонномуЗаказу,РезервПоСезонномуЗаказу,СвободныйОстатокНаСкладе,ТоварыВПутиНаГрузополучателя,ОтстатокПотребностиПоСезонномуЗаказу,РезервПрочий,ТоварыВПутиОбщие");	
			ТаблицаПоЗаказам.Сортировать("Контрагент Возр, ДатаНач Возр");
			
			Отбор = Новый Структура;
			Отбор.Вставить("Контрагент", СтрТЗ.Контрагент);
			МассивСтрокПоЗаказу = ТаблицаПоЗаказам.НайтиСтроки(Отбор);
			
			Для каждого СтрЗаказ ИЗ МассивСтрокПоЗаказу Цикл
				
				ОбластьЗаголовокПроизводительКонтрагент.Параметры.СезонныйЗаказ	 = СтрЗаказ.СезонныйЗаказ;
				ОбластьЗаголовокПроизводительКонтрагент.Параметры.Заказано		 = СтрЗаказ.ВСезонномЗаказе;
				ОбластьЗаголовокПроизводительКонтрагент.Параметры.Отгружено		 = СтрЗаказ.ОтгруженоПоСезонномуЗаказу;
				ОбластьЗаголовокПроизводительКонтрагент.Параметры.ВРезерве		 = СтрЗаказ.РезервПоСезонномуЗаказу;
				ОбластьЗаголовокПроизводительКонтрагент.Параметры.Потребность	 = ?(СтрЗаказ.ОтстатокПотребностиПоСезонномуЗаказу > 0, СтрЗаказ.ОтстатокПотребностиПоСезонномуЗаказу, 0);
				ОбластьЗаголовокПроизводительКонтрагент.Параметры.НаСкладе		 = СтрЗаказ.СвободныйОстатокНаСкладе;
				ОбластьЗаголовокПроизводительКонтрагент.Параметры.ВПути			 = СтрЗаказ.ТоварыВПутиНаГрузополучателя;
				ОбластьЗаголовокПроизводительКонтрагент.Параметры.ВПутиНаСклад	 = СтрЗаказ.ТоварыВПутиОбщие;
				ТабДок.Вывести(ОбластьЗаголовокПроизводительКонтрагент, 2,,Ложь);
				ТабДокОсн.Вывести(ОбластьЗаголовокПроизводительКонтрагент, 2,,Ложь);
				
				ТаблицаПоНоменклатуре = ТаблицаТоварыВСезонныхЗаказах.Скопировать();
				ТаблицаПоНоменклатуре.Свернуть("Контрагент, СезонныйЗаказ, Производитель, ДатаНач", "ВСезонномЗаказе,ОтгруженоПоСезонномуЗаказу,РезервПоСезонномуЗаказу,СвободныйОстатокНаСкладе,ТоварыВПутиНаГрузополучателя,ОтстатокПотребностиПоСезонномуЗаказу,РезервПрочий,ТоварыВПутиОбщие");	
				ТаблицаПоНоменклатуре.Сортировать("Контрагент Возр, Производитель Возр");
				
				Отбор = Новый Структура;
				Отбор.Вставить("Контрагент", СтрТЗ.Контрагент);
				Отбор.Вставить("СезонныйЗаказ", СтрЗаказ.СезонныйЗаказ);
				МассивСтрокПоПроизв = ТаблицаПоНоменклатуре.НайтиСтроки(Отбор);
				
				Для каждого СтрПроизв ИЗ МассивСтрокПоПроизв Цикл
					
					ОбластьСтрокаНоменклатураКонтрагент.Параметры.Производитель	 = СтрПроизв.Производитель;
					ОбластьСтрокаНоменклатураКонтрагент.Параметры.Заказано		 = СтрПроизв.ВСезонномЗаказе;
					ОбластьСтрокаНоменклатураКонтрагент.Параметры.Отгружено		 = СтрПроизв.ОтгруженоПоСезонномуЗаказу;
					ОбластьСтрокаНоменклатураКонтрагент.Параметры.ВРезерве		 = СтрПроизв.РезервПоСезонномуЗаказу;
					ОбластьСтрокаНоменклатураКонтрагент.Параметры.Потребность	 = ?(СтрПроизв.ОтстатокПотребностиПоСезонномуЗаказу > 0, СтрПроизв.ОтстатокПотребностиПоСезонномуЗаказу, 0);
					ОбластьСтрокаНоменклатураКонтрагент.Параметры.НаСкладе		 = СтрПроизв.СвободныйОстатокНаСкладе;
					ОбластьСтрокаНоменклатураКонтрагент.Параметры.ВПути			 = СтрПроизв.ТоварыВПутиНаГрузополучателя;
					ОбластьСтрокаНоменклатураКонтрагент.Параметры.ВПутиНаСклад	 = СтрПроизв.ТоварыВПутиОбщие;
					ТабДок.Вывести(ОбластьСтрокаНоменклатураКонтрагент, 3,,Ложь);
					ТабДокОсн.Вывести(ОбластьСтрокаНоменклатураКонтрагент, 3,,Ложь);
					
					Отбор = Новый Структура;
					Отбор.Вставить("Контрагент", СтрТЗ.Контрагент);
					Отбор.Вставить("СезонныйЗаказ", СтрЗаказ.СезонныйЗаказ);
					Отбор.Вставить("Производитель", СтрПроизв.Производитель);
					
					МассивСтрокПоНоменклатуре = ТаблицаТоварыВСезонныхЗаказах.НайтиСтроки(Отбор);
					
					Для каждого СтрНоменкл ИЗ МассивСтрокПоНоменклатуре Цикл
						
						ОбластьСтрокаНоменклатураДетали.Параметры.НоменклатураКод	 = СтрНоменкл.Номенклатура.Код;
						ОбластьСтрокаНоменклатураДетали.Параметры.Номенклатура		 = СтрНоменкл.Номенклатура;
						ОбластьСтрокаНоменклатураДетали.Параметры.Заказано			 = СтрНоменкл.ВСезонномЗаказе;
						ОбластьСтрокаНоменклатураДетали.Параметры.Отгружено			 = СтрНоменкл.ОтгруженоПоСезонномуЗаказу;
						ОбластьСтрокаНоменклатураДетали.Параметры.ВРезерве			 = СтрНоменкл.РезервПоСезонномуЗаказу;
						ОбластьСтрокаНоменклатураДетали.Параметры.Потребность		 = ?(СтрНоменкл.ОтстатокПотребностиПоСезонномуЗаказу > 0, СтрНоменкл.ОтстатокПотребностиПоСезонномуЗаказу, 0);
						ОбластьСтрокаНоменклатураДетали.Параметры.НаСкладе			 = СтрНоменкл.СвободныйОстатокНаСкладе;
						ОбластьСтрокаНоменклатураДетали.Параметры.ВПути				 = СтрНоменкл.ТоварыВПутиНаГрузополучателя;
						ОбластьСтрокаНоменклатураДетали.Параметры.ВПутиНаСклад		 = СтрНоменкл.ТоварыВПутиОбщие;
						ТабДок.Вывести(ОбластьСтрокаНоменклатураДетали, 4,,Ложь);
						ТабДокОсн.Вывести(ОбластьСтрокаНоменклатураДетали, 4,,Ложь);
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ОбластьИтогиПоЗаказам.Параметры.Заказано			 = ВСезонномЗаказеПоМенедежру;
		ОбластьИтогиПоЗаказам.Параметры.Отгружено			 = ОтгруженоПоСезонномуЗаказуПоМенедежру;
		ОбластьИтогиПоЗаказам.Параметры.ВРезерве			 = РезервПоСезонномуЗаказуПоМенедежру;
		ОбластьИтогиПоЗаказам.Параметры.Потребность		 	 = ОтстатокПотребностиПоСезонномуЗаказуПоМенедежру;
		ОбластьИтогиПоЗаказам.Параметры.НаСкладе			 = СвободныйОстатокНаСкладеПоМенедежру;
		ОбластьИтогиПоЗаказам.Параметры.ВПути				 = ТоварыВПутиНаГрузополучателяПоМенедежру;
		ОбластьИтогиПоЗаказам.Параметры.ВПутиНаСклад		 = ТоварыВПутиОбщиеПоМенедежру;
		ТабДок.Вывести(ОбластьИтогиПоЗаказам, 1);
		ТабДокОсн.Вывести(ОбластьИтогиПоЗаказам, 1);
		//#Если Сервер Тогда
			Если СтрокаТЗПоМенеджерам.Менеджер = Справочники.Пользователи.НайтиПоКоду("Малышев Егор") Тогда
				
				Если ТаблицаТоварыВСезонныхЗаказах.Количество() > 0 Тогда
					ТабДок.Вывести(ОбластьИтоги, 1);
					ТабДокОсн.Вывести(ОбластьИтоги, 1);
				КонецЕсли;
				
				ТаблицаПоНомГруппам = ТаблицаТоварыВСезонныхЗаказах.Скопировать();
				ТаблицаПоНомГруппам.Свернуть("НоменклатурнаяГруппа", "ВСезонномЗаказе,ОтгруженоПоСезонномуЗаказу,РезервПоСезонномуЗаказу,СвободныйОстатокНаСкладе,ТоварыВПутиНаГрузополучателя,ОтстатокПотребностиПоСезонномуЗаказу,РезервПрочий,ТоварыВПутиОбщие");	
				ТаблицаПоНомГруппам.Сортировать("НоменклатурнаяГруппа Возр");	
				
				Для каждого СтрТЗ ИЗ ТаблицаПоНомГруппам Цикл
					
					ОбластьКонтрагент.Параметры.Контрагент		 = СтрТЗ.НоменклатурнаяГруппа;
					ОбластьКонтрагент.Параметры.Заказано		 = СтрТЗ.ВСезонномЗаказе;
					ОбластьКонтрагент.Параметры.Отгружено		 = СтрТЗ.ОтгруженоПоСезонномуЗаказу;
					ОбластьКонтрагент.Параметры.ВРезерве		 = СтрТЗ.РезервПоСезонномуЗаказу;
					ОбластьКонтрагент.Параметры.Потребность		 = ?(СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу > 0, СтрТЗ.ОтстатокПотребностиПоСезонномуЗаказу, 0);
					ОбластьКонтрагент.Параметры.НаСкладе		 = СтрТЗ.СвободныйОстатокНаСкладе;
					ОбластьКонтрагент.Параметры.ВПути			 = СтрТЗ.ТоварыВПутиНаГрузополучателя;
					ОбластьКонтрагент.Параметры.ВПутиНаСклад	 = СтрТЗ.ТоварыВПутиОбщие;
					ТабДок.Вывести(ОбластьКонтрагент, 1,,Ложь);
					ТабДокОсн.Вывести(ОбластьКонтрагент, 1,,Ложь);
					
					ТаблицаПоПроизводителям = ТаблицаТоварыВСезонныхЗаказах.Скопировать();
					ТаблицаПоПроизводителям.Свернуть("НоменклатурнаяГруппа, Производитель", "ВСезонномЗаказе,ОтгруженоПоСезонномуЗаказу,РезервПоСезонномуЗаказу,СвободныйОстатокНаСкладе,ТоварыВПутиНаГрузополучателя,ОтстатокПотребностиПоСезонномуЗаказу,РезервПрочий,ТоварыВПутиОбщие");	
					ТаблицаПоПроизводителям.Сортировать("НоменклатурнаяГруппа Возр, Производитель Возр");
					
					Отбор = Новый Структура;
					Отбор.Вставить("НоменклатурнаяГруппа", СтрТЗ.НоменклатурнаяГруппа);
					МассивСтрокПоПроизводителю = ТаблицаПоПроизводителям.НайтиСтроки(Отбор);
					
					Для каждого СтрПроизв ИЗ МассивСтрокПоПроизводителю Цикл
						
						ОбластьЗаголовокПроизводительКонтрагент.Параметры.СезонныйЗаказ		 = СтрПроизв.Производитель;
						ОбластьЗаголовокПроизводительКонтрагент.Параметры.Заказано			 = СтрПроизв.ВСезонномЗаказе;
						ОбластьЗаголовокПроизводительКонтрагент.Параметры.Отгружено			 = СтрПроизв.ОтгруженоПоСезонномуЗаказу;
						ОбластьЗаголовокПроизводительКонтрагент.Параметры.ВРезерве			 = СтрПроизв.РезервПоСезонномуЗаказу;
						ОбластьЗаголовокПроизводительКонтрагент.Параметры.Потребность		 = ?(СтрПроизв.ОтстатокПотребностиПоСезонномуЗаказу > 0, СтрПроизв.ОтстатокПотребностиПоСезонномуЗаказу, 0);
						ОбластьЗаголовокПроизводительКонтрагент.Параметры.НаСкладе			 = СтрПроизв.СвободныйОстатокНаСкладе;
						ОбластьЗаголовокПроизводительКонтрагент.Параметры.ВПути				 = СтрПроизв.ТоварыВПутиНаГрузополучателя;
						ОбластьЗаголовокПроизводительКонтрагент.Параметры.ВПутиНаСклад		 = СтрПроизв.ТоварыВПутиОбщие;
						ТабДок.Вывести(ОбластьЗаголовокПроизводительКонтрагент, 2,,Ложь);
						ТабДокОсн.Вывести(ОбластьЗаголовокПроизводительКонтрагент, 2,,Ложь);
						
						ТаблицаПоНоменклатуре = ТаблицаТоварыВСезонныхЗаказах.Скопировать();
						ТаблицаПоНоменклатуре.Свернуть("НоменклатурнаяГруппа, Производитель, Номенклатура", "ВСезонномЗаказе,ОтгруженоПоСезонномуЗаказу,РезервПоСезонномуЗаказу,СвободныйОстатокНаСкладе,ТоварыВПутиНаГрузополучателя,ОтстатокПотребностиПоСезонномуЗаказу,РезервПрочий,ТоварыВПутиОбщие");	
						ТаблицаПоНоменклатуре.Сортировать("НоменклатурнаяГруппа Возр, Производитель Возр, Номенклатура Возр");
						
						Отбор = Новый Структура;
						Отбор.Вставить("НоменклатурнаяГруппа", СтрТЗ.НоменклатурнаяГруппа);
						Отбор.Вставить("Производитель", СтрПроизв.Производитель);
						МассивСтрокПоНоменклатуре = ТаблицаПоНоменклатуре.НайтиСтроки(Отбор);
						
						Для каждого СтрЗаказ ИЗ МассивСтрокПоНоменклатуре Цикл
							
							ОбластьСтрокаНоменклатураДетали.Параметры.НоменклатураКод	 = СтрЗаказ.Номенклатура.Код;
							ОбластьСтрокаНоменклатураДетали.Параметры.Номенклатура		 = СтрЗаказ.Номенклатура;
							ОбластьСтрокаНоменклатураДетали.Параметры.Заказано			 = СтрЗаказ.ВСезонномЗаказе;
							ОбластьСтрокаНоменклатураДетали.Параметры.Отгружено			 = СтрЗаказ.ОтгруженоПоСезонномуЗаказу;
							ОбластьСтрокаНоменклатураДетали.Параметры.ВРезерве			 = СтрЗаказ.РезервПоСезонномуЗаказу;
							ОбластьСтрокаНоменклатураДетали.Параметры.Потребность		 = ?(СтрЗаказ.ОтстатокПотребностиПоСезонномуЗаказу > 0, СтрЗаказ.ОтстатокПотребностиПоСезонномуЗаказу, 0);
							ОбластьСтрокаНоменклатураДетали.Параметры.НаСкладе			 = СтрЗаказ.СвободныйОстатокНаСкладе;
							ОбластьСтрокаНоменклатураДетали.Параметры.ВПути				 = СтрЗаказ.ТоварыВПутиНаГрузополучателя;
							ОбластьСтрокаНоменклатураДетали.Параметры.ВПутиНаСклад		 = СтрЗаказ.ТоварыВПутиОбщие;
							ТабДок.Вывести(ОбластьСтрокаНоменклатураДетали, 3,,Ложь);
							ТабДокОсн.Вывести(ОбластьСтрокаНоменклатураДетали, 3,,Ложь);
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЦикла;
				
				
				//Вывод товаров в производстве
				Если ТаблицаТоварыВПроизводстве.Количество() > 0 Тогда
					
					Пока ТаблицаТоварыВПроизводстве.Следующий() Цикл //Общие итоги
						
						ОбластьЗаголовок.Параметры.Заголовок = "Товары в производстве";
						ОбластьЗаголовок.Параметры.Количество = ТаблицаТоварыВПроизводстве.Количество;
						ТабДок.Вывести(ОбластьЗаголовок, 1);
						ТабДокОсн.Вывести(ОбластьЗаголовок, 1);
						ВыборкаГрузополучатель = ТаблицаТоварыВПроизводстве.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Пока ВыборкаГрузополучатель.Следующий() Цикл
							
							ОбластьЗаголовокТранзит.Параметры.Грузополучатель = ВыборкаГрузополучатель.Грузополучатель;
							ОбластьЗаголовокТранзит.Параметры.Количество = ВыборкаГрузополучатель.Количество;
							ТабДок.Вывести(ОбластьЗаголовокТранзит, 1);
							ТабДокОсн.Вывести(ОбластьЗаголовокТранзит, 1);
							ВыборкаПроизводитель = ВыборкаГрузополучатель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							
							Пока ВыборкаПроизводитель.Следующий() Цикл
								
								ОбластьЗаголовокПроизводитель.Параметры.Производитель = ВыборкаПроизводитель.Производитель;
								ОбластьЗаголовокПроизводитель.Параметры.Количество = ВыборкаПроизводитель.Количество;
								ТабДок.Вывести(ОбластьЗаголовокПроизводитель, 2,,Ложь);
								ТабДокОсн.Вывести(ОбластьЗаголовокПроизводитель, 2,,Ложь);
								ВыборкаНоменклатура = ВыборкаПроизводитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								
								Пока ВыборкаНоменклатура.Следующий() Цикл
									
									ОбластьСтрокаНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
									ОбластьСтрокаНоменклатура.Параметры.НоменклатураКод = ВыборкаНоменклатура.Номенклатура.Код;
									ТабДок.Вывести(ОбластьСтрокаНоменклатура, 3,,Ложь);
									ТабДокОсн.Вывести(ОбластьСтрокаНоменклатура, 3,,Ложь);
								КонецЦикла;
								
							КонецЦикла;
							
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЕсли;
				
				//Вывод товаров в пути
				Если ТаблицаТоварыВПутиДляВывода.Количество() > 0 Тогда //выводим отчет по товарам в пути
					
					Пока ТаблицаТоварыВПутиДляВывода.Следующий() Цикл
						
						ОбластьЗаголовок.Параметры.Заголовок = "Товары в пути";
						ОбластьЗаголовок.Параметры.Количество = ТаблицаТоварыВПутиДляВывода.Количество;
						ТабДок.Вывести(ОбластьЗаголовок, 1);
						ТабДокОсн.Вывести(ОбластьЗаголовок, 1);
						ВыборкаПоПризнакуПоступленияВПорт = ТаблицаТоварыВПутиДляВывода.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Пока ВыборкаПоПризнакуПоступленияВПорт.Следующий() Цикл
							
							Если ВыборкаПоПризнакуПоступленияВПорт.ПризнакПоступленияВПорт = 0 Тогда
								ОбластьСтрокаЗаголовокПриходТоваров.Параметры.ПризнакПоступленияВПорт = "Поступление в порт после "+Лев(КонецМесяца(ТекущаяДата())+20*86400,10);
							ИначеЕсли ВыборкаПоПризнакуПоступленияВПорт.ПризнакПоступленияВПорт = 1 Тогда
								ОбластьСтрокаЗаголовокПриходТоваров.Параметры.ПризнакПоступленияВПорт = "Поступление в порт до "+Лев(КонецМесяца(ТекущаяДата())+20*86400,10)+" включительно";
							КонецЕсли;
							ОбластьСтрокаЗаголовокПриходТоваров.Параметры.Количество = ВыборкаПоПризнакуПоступленияВПорт.Количество;
							ТабДок.Вывести(ОбластьСтрокаЗаголовокПриходТоваров, 1);
							ТабДокОсн.Вывести(ОбластьСтрокаЗаголовокПриходТоваров, 1);
							ВыборкаТранзит = ВыборкаПоПризнакуПоступленияВПорт.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаТранзит.Следующий() Цикл	
								
								ОбластьЗаголовокТранзит.Параметры.Грузополучатель = ВыборкаТранзит.Грузополучатель;
								ОбластьЗаголовокТранзит.Параметры.Количество = ВыборкаТранзит.Количество;
								ТабДок.Вывести(ОбластьЗаголовокТранзит, 2);
								ТабДокОсн.Вывести(ОбластьЗаголовокТранзит, 2);
								ВыборкаПроизводитель = ВыборкаТранзит.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								
								Пока ВыборкаПроизводитель.Следующий() Цикл
									
									ОбластьЗаголовокПроизводитель.Параметры.Производитель = ВыборкаПроизводитель.Производитель;
									ОбластьЗаголовокПроизводитель.Параметры.Количество = ВыборкаПроизводитель.Количество;
									ТабДок.Вывести(ОбластьЗаголовокПроизводитель, 3,,Ложь);
									ТабДокОсн.Вывести(ОбластьЗаголовокПроизводитель, 3,,Ложь);
									ВыборкаНоменклатура = ВыборкаПроизводитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									
									Пока ВыборкаНоменклатура.Следующий() Цикл
										
										ОбластьСтрокаНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
										ОбластьСтрокаНоменклатура.Параметры.НоменклатураКод = ВыборкаНоменклатура.Номенклатура.Код;
										ТабДок.Вывести(ОбластьСтрокаНоменклатура, 4,,Ложь);
										ТабДокОсн.Вывести(ОбластьСтрокаНоменклатура, 4,,Ложь);
									КонецЦикла;
									
								КонецЦикла;
								
							КонецЦикла;
							
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЕсли; //есть товары в пути
				
			КонецЕсли; //Малышев Егор
			
			ТабДок.ЗакончитьАвтогруппировкуСтрок();
			ТабДокОсн.ЗакончитьАвтогруппировкуСтрок();
			//Отправка на почту
			//
			Вложение1 = ПолучитьИмяВременногоФайла("xls");
			ТабДок.Записать(Вложение1, ТипФайлаТабличногоДокумента.XLS);
			Вложение1ZIP = КаталогВременныхФайлов()+"\Вложение "+СокрЛП(СтрокаТЗПоМенеджерам.Менеджер.Код)+".zip";
			Архив = Новый ЗаписьZIPФайла(Вложение1ZIP,,,
			МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Максимальный, МетодШифрованияZIP.Zip20);
			Архив.Добавить(Вложение1, РежимСохраненияПутейZIP.НеСохранятьПути);
			Архив.Записать();
			
			Профиль = Новый ИнтернетПочтовыйПрофиль;
			Профиль.АдресСервераSMTP   = "mail.yst76.ru";
			Профиль.ПортSMTP		   = 25;
			Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
			Профиль.ПарольSMTP         = "";
			Профиль.ПользовательSMTP   = "";
			Письмо = Новый ИнтернетПочтовоеСообщение;
			Письмо.Отправитель = "no-reply@yst76.ru";
			//Письмо.Получатели.Добавить("alekseeva_ae@yst.ru");
			//Письмо.Получатели.Добавить("malyshev@yst-group.com");
			
			Если НЕ СтрокаТЗПоМенеджерам.Менеджер = Справочники.Пользователи.НайтиПоКоду("Малышев Егор") Тогда
				ЗапросАдресов = Новый Запрос;
				ЗапросАдресов.УстановитьПараметр("Объект", СтрокаТЗПоМенеджерам.Менеджер);
				ЗапросАдресов.Текст = "ВЫБРАТЬ
				                      |	КонтактнаяИнформация.Объект КАК Объект,
				                      |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200)) КАК Представление
				                      |ИЗ
				                      |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
				                      |ГДЕ
				                      |	КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
				                      |	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя)
				                      |	И КонтактнаяИнформация.Объект = &Объект";
				ВыборкаАдресов = ЗапросАдресов.Выполнить().Выбрать();
				Если ВыборкаАдресов.Следующий() Тогда
					Письмо.Получатели.Добавить(СокрЛП(ВыборкаАдресов.Представление));
				КонецЕсли;
			КонецЕсли;
			
			Письмо.Тема = "Отчет по будущей комплектации сезонных заказов покупателей по менеджеру " + СокрЛП(СтрокаТЗПоМенеджерам.Менеджер.Код);
			ТекстПисьма = "Анализ выполнен по всем сезонным заказам покупателей, у которых дата действия больше " + Строка(КонецМесяца(ДобавитьМесяц(ТекущаяДата(),1))) + ". " + Символы.ПС + "Учитываются товары в пути со сроком прихода на склад по " + Строка(КонецМесяца(ТекущаяДата())+20*86400);
			Письмо.Тексты.Добавить(ТекстПисьма,ТипТекстаПочтовогоСообщения.ПростойТекст);
			Письмо.Вложения.Добавить(Вложение1ZIP,"Вложение 1.zip");
			
			Почта = Новый ИнтернетПочта;
			
			Если Письмо.Получатели.Количество()>0 тогда
			Попытка
				Почта.Подключиться(Профиль);
				Почта.Послать(Письмо);
				Почта.Отключиться();
			Исключение
				Пауза(20);
				Почта.Подключиться(Профиль);
				Почта.Послать(Письмо);
				Почта.Отключиться();
			КонецПопытки;
			конецЕсли;
		//#КонецЕсли
		
	КонецЦикла;
				//Отправка на почту
			
			Вложение1 = ПолучитьИмяВременногоФайла("xls");
			ТабДокОсн.Записать(Вложение1, ТипФайлаТабличногоДокумента.XLS);
			Вложение1ZIP = КаталогВременныхФайлов()+"\Вложение общее.zip";
			Архив = Новый ЗаписьZIPФайла(Вложение1ZIP,,,
			МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Максимальный, МетодШифрованияZIP.Zip20);
			Архив.Добавить(Вложение1, РежимСохраненияПутейZIP.НеСохранятьПути);
			Архив.Записать();
			
			Профиль = Новый ИнтернетПочтовыйПрофиль;
			Профиль.АдресСервераSMTP   = "mail.yst76.ru";
			Профиль.ПортSMTP		   = 25;
			Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
			Профиль.ПарольSMTP         = "";
			Профиль.ПользовательSMTP   = "";
			Письмо = Новый ИнтернетПочтовоеСообщение;
			Письмо.Отправитель = "no-reply@yst76.ru";
			Письмо.Получатели.Добавить("alekseeva_ae@yst.ru");
			Письмо.Получатели.Добавить("malyshev@yst-group.com");

			Письмо.Тема = "Отчет по будущей комплектации сезонных заказов покупателей общий ";
			ТекстПисьма = "Анализ выполнен по всем сезонным заказам покупателей, у которых дата действия больше " + Строка(КонецМесяца(ДобавитьМесяц(ТекущаяДата(),1))) + ". " + Символы.ПС + "Учитываются товары в пути со сроком прихода на склад по " + Строка(КонецМесяца(ТекущаяДата())+20*86400);
			Письмо.Тексты.Добавить(ТекстПисьма,ТипТекстаПочтовогоСообщения.ПростойТекст);
			Письмо.Вложения.Добавить(Вложение1ZIP,"Вложение 1.zip");
			
			Почта = Новый ИнтернетПочта;
			
			Попытка
				Почта.Подключиться(Профиль);
				Почта.Послать(Письмо);
				Почта.Отключиться();
			Исключение
				Пауза(20);
				Почта.Подключиться(Профиль);
				Почта.Послать(Письмо);
				Почта.Отключиться();
			КонецПопытки;
		
КонецПроцедуры

Функция ПолучитьТоварыВПроизводстве()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.Грузополучатель = &ПустаяСсылка
	               |			ТОГДА ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.Подразделение
	               |		ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.Грузополучатель
	               |	КОНЕЦ КАК Грузополучатель,
	               |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура.Производитель КАК Производитель,
	               |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
	               |	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК Количество,
	               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(, ЗаказПоставщикуСезонный.ДатаДействияПо >= &ТекущаяДата) КАК ЗаказыПоставщикамСезонныеОстатки
	            //   |ГДЕ
	            //   |	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток > 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Грузополучатель,
	               |	Номенклатура
	               |ИТОГИ
	               |	СУММА(Количество)
	               |ПО
	               |	ОБЩИЕ,
	               |	Грузополучатель,
	               |	Производитель,
	               |	Номенклатура
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	ТаблицаТоварыВПроизводстве = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Возврат ТаблицаТоварыВПроизводстве;
	
КонецФункции

Функция ПолучитьТоварыВПути()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	Запрос.УстановитьПараметр("ДвадцатоеЧислоСледМесяца", КонецМесяца(ТекущаяДата())+20*86400);
	Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПоставщикамОстатки.Номенклатура,
	               |	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоВПути,
	               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Подразделение КАК Подразделение
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	               |			,
	               |			ЗаказПоставщику.НомерКонтейнера <> """"
	               |				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	               |				И ЗаказПоставщику.Грузополучатель = &ПустаяСсылка) КАК ЗаказыПоставщикамОстатки
	               |ГДЕ
	               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДвадцатоеЧислоСледМесяца
	               |	И ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
	               |	И ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <> &ПустаяДата";
	ТаблицаТоварыВПути = Запрос.Выполнить().Выгрузить(); 
	
	Возврат ТаблицаТоварыВПути;
	
КонецФункции

Функция ПолучитьТоварыВПутиНаГрузополучателя()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	Запрос.УстановитьПараметр("ДвадцатоеЧислоСледМесяца", КонецМесяца(ТекущаяДата())+20*86400);
	Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПоставщикамОстатки.Номенклатура,
	               |	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоВПути,
	               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Грузополучатель КАК Грузополучатель,
	               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	               |			,
	               |			ЗаказПоставщику.НомерКонтейнера <> """"
	               |				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	             //  |				И ЗаказПоставщику.Транзит
	               |				И ЗаказПоставщику.Грузополучатель <> &ПустаяСсылка) КАК ЗаказыПоставщикамОстатки
	               |ГДЕ
	               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДвадцатоеЧислоСледМесяца
	               |	И ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
	               |	И ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <> &ПустаяДата";
	ТаблицаТоварыВПутиТранзитНаГрузополучателя = Запрос.Выполнить().Выгрузить();  
	
	Возврат ТаблицаТоварыВПутиТранзитНаГрузополучателя;
	
КонецФункции

Функция ПолучитьТоварыВПутиДляВывода()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	Запрос.УстановитьПараметр("ДвадцатоеЧислоСледМесяца", КонецМесяца(ТекущаяДата())+20*86400);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA > &ДвадцатоеЧислоСледМесяца
	               |				ИЛИ ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA = &ПустаяДата
	               |			ТОГДА 0
	               |		ИНАЧЕ 1
	               |	КОНЕЦ КАК ПризнакПоступленияВПорт,
	               |	ВЫБОР
	               |		КОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.Грузополучатель = &ПустойКонтрагент
	               |			ТОГДА ЗаказыПоставщикамОстатки.ЗаказПоставщику.Подразделение
	               |		ИНАЧЕ ЗаказыПоставщикамОстатки.ЗаказПоставщику.Грузополучатель
	               |	КОНЕЦ КАК Грузополучатель,
	               |	ЗаказыПоставщикамОстатки.Номенклатура.Производитель КАК Производитель,
	               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA КАК ДатаПоступления,
	               |	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	               |	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК Количество,
	               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	               |			,
	               |			ЗаказПоставщику.НомерКонтейнера <> """"
	               |				И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПоставщикамОстатки
	               |ГДЕ
	               |	ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПризнакПоступленияВПорт УБЫВ,
	               |	Грузополучатель,
	               |	Производитель,
	               |	ДатаПоступления,
	               |	Номенклатура
	               |ИТОГИ
	               |	СУММА(Количество)
	               |ПО
	               |	ОБЩИЕ,
	               |	ПризнакПоступленияВПорт,
	               |	Грузополучатель,
	               |	Производитель,
	               |	Номенклатура
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	ТаблицаТоварыВПутиДляВывода = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Возврат ТаблицаТоварыВПутиДляВывода;
	
КонецФункции

Функция ПолучитьТоварыНаСкладеГоловное()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	А.Номенклатура,
	               |	А.СвободныйОстаток
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |		ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток
	               |	ИЗ
	               |		РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				,
	               |				НЕ Склад.ЗапретитьИспользование
	               |					И НЕ Склад.Транзитный
	               |					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ТоварыНаСкладахОстатки
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	               |					,
	               |					ЗаказПокупателя.Проверен
	               |						И НЕ ЗаказПокупателя.Транзит
	               |						И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПокупателейОстатки
	               |			ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура) КАК А
	               |ГДЕ
	               |	А.СвободныйОстаток > 0";
	ТаблицаТоварыНаСкладеГоловное = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаТоварыНаСкладеГоловное;
	
КонецФункции

Функция ПолучитьТоварыНаСкладеОбособленное()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	А.Подразделение,
	               |	А.Номенклатура,
	               |	А.СвободныйОстаток
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТоварыНаСкладахОстатки.Склад.Подразделение КАК Подразделение,
	               |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |		ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток
	               |	ИЗ
	               |		РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				,
	               |				НЕ Склад.ЗапретитьИспользование
	               |					И Склад.Транзитный
	               |					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ТоварыНаСкладахОстатки
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	               |					,
	               |					ЗаказПокупателя.Проверен
	               |						И ЗаказПокупателя.Транзит
	               |						И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПокупателейОстатки
	               |			ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура) КАК А
	               |ГДЕ
	               |	А.СвободныйОстаток > 0";
	ТаблицаТоварыНаСкладеОбособленное = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаТоварыНаСкладеОбособленное;
	
КонецФункции

Функция ПолучитьТоварыВСезонныхЗаказах()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДесятьМесДоТекущейДаты", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-10));
	Запрос.УстановитьПараметр("КонецСледМесяца", КонецМесяца(ДобавитьМесяц(ТекущаяДата(),1)));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателяСезонныйТовары.Ссылка,
	               |	ЗаказПокупателяСезонныйТовары.Ссылка.Дата КАК Дата,
	               |	ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент,
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура.Код КАК Код,
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура,
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура.Производитель КАК Производитель,
	               |	ЗаказПокупателяСезонныйТовары.Количество КАК КоличествоВЗаказе,
	               |	СУММА(ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) КАК КоличествоВРезерве,
	               |	0 КАК КоличествоОтгружено,
	               |	0 КАК КоличествоПотребность,
	               |	0 КАК КоличествоНаСкладе,
	               |	0 КАК КоличествоВПути,
	               |	ЗаказПокупателяСезонныйТовары.Ссылка.Подразделение,
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	               |ИЗ
	               |	Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПокупателяСезонныйТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	               |				,
	               |				ЗаказПокупателя.Проверен
	               |					И НЕ ЗаказПокупателя.ВводитьТолькоПеремещение) КАК ЗаказыПокупателейОстатки
	               |		ПО ЗаказПокупателяСезонныйТовары.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	               |			И ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент = ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент
	               |			И ЗаказПокупателяСезонныйТовары.Ссылка.Транзит = ЗаказыПокупателейОстатки.ЗаказПокупателя.Транзит
	               |ГДЕ
	               |	НЕ ЗаказПокупателяСезонныйТовары.Ссылка.ПометкаУдаления
	               |	И ЗаказПокупателяСезонныйТовары.Ссылка.Дата >= &ДесятьМесДоТекущейДаты
	               |	И ЗаказПокупателяСезонныйТовары.Ссылка.ДатаДействияПо > &КонецСледМесяца
	               |	И ЗаказПокупателяСезонныйТовары.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура,
	               |	ЗаказПокупателяСезонныйТовары.Ссылка,
	               |	ЗаказПокупателяСезонныйТовары.Ссылка.Дата,
	               |	ЗаказПокупателяСезонныйТовары.Ссылка.Контрагент,
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура.Код,
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура.Производитель,
	               |	ЗаказПокупателяСезонныйТовары.Количество,
	               |	ЗаказПокупателяСезонныйТовары.Ссылка.Подразделение,
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура.НоменклатурнаяГруппа
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата
	               |АВТОУПОРЯДОЧИВАНИЕ";
	ТаблицаТоварыВСезонныхЗаказах = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаТоварыВСезонныхЗаказах;
	
КонецФункции

Процедура Пауза(Сек)
	Попытка
		scr = Новый COMОбъект("WScript.Shell");
		scr.Run("sleep "+СокрЛП(Число(Сек)),0,1);
	Исключение
	КонецПопытки;
КонецПроцедуры

