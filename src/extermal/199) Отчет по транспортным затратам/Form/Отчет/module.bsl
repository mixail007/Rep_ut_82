
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ОтчетИнициализация();

КонецПроцедуры

Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОтчетыВнешнийОтчет1Отчет_0d9ddf37-3396-4e79-a0b7-3bd008526928", ПостроительОтчетаОтчет.ПолучитьНастройки());

КонецПроцедуры

Процедура ДействияФормыОтчетНастройка(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Форма = ВнешнийОтчетОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Форма.ОткрытьМодально() = Истина Тогда
		ОтчетВывести();
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ОтчетВывести();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ОтчетВывести()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();

	ПостроительОтчетаОтчет.Параметры.Вставить("Автоуслуги", Справочники.СтатьиЗатрат.НайтиПоКоду("К0115"));
	ПостроительОтчетаОтчет.Параметры.Вставить("КонДата", КонецДня(КонДата));
	ПостроительОтчетаОтчет.Параметры.Вставить("НачДата", НачДата);
	ПостроительОтчетаОтчет.Параметры.Вставить("ОтделСнабжения", Справочники.Подразделения.НайтиПоКоду("00006"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТранспортныеУслугиВозмещаемые", Справочники.Номенклатура.НайтиПоНаименованию("Транспортная услуга 44-ТР возмещаемые"));
	ПостроительОтчетаОтчет.Параметры.Вставить("ТранспортныеУслугиРаспределяемые", Справочники.Номенклатура.НайтиПоКоду("ЛН00040"));

	ПостроительОтчетаОтчет.Выполнить();
	ПостроительОтчетаОтчет.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Классика);
	ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет по транспортным затратам за "+ПредставлениеПериода(НачДата,КонецДня(КонДата),"ФП=Истина");
	ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ
КонецПроцедуры

Процедура ОтчетИнициализация()
		ПостроительОтчетаОтчет.Текст =
	"  ВЫБРАТЬ 
	|  ВидЗатрат, Подразделение,НоменклатурнаяГруппа, Сумма ИЗ
	|	(ВЫБРАТЬ
	|	""1. Входящий транспорт на себестоимость"" КАК ВидЗатрат,
	|	&ОтделСнабжения КАК Подразделение,
	|	ДопРасходыНаСебест.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ДопРасходыНаСебест.Регистратор,
	|	ВЫРАЗИТЬ(СУММА(ДопРасходыНаСебест.Сумма) КАК ЧИСЛО(15,0)) Сумма
	|	
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДопРасходы.Ссылка КАК Ссылка,
	|		ДопРасходы.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|		ДопРасходы.СуммаТовара КАК СуммаТовара,
	|		ДопРасходы.СуммаУслуг КАК СуммаУслуг,
	|		ДопРасходыДокумент.СуммаТоваров КАК СуммаТоваров,
	|		ДопРасходыДокумент.Ссылка Регистратор,
	|		ВЫРАЗИТЬ(ДопРасходы.СуммаТовара / ДопРасходыДокумент.СуммаТоваров * ДопРасходы.СуммаУслуг КАК ЧИСЛО(15, 0)) КАК Сумма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПоступлениеДопРасходовТовары.Ссылка КАК Ссылка,
	|			ПоступлениеДопРасходовТовары.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|			СУММА(ПоступлениеДопРасходовТовары.СуммаТовара) КАК СуммаТовара,
	|			СРЕДНЕЕ(ПоступлениеДопРасходовТовары.Ссылка.Сумма) КАК СуммаУслуг
	|		ИЗ
	|			Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|		ГДЕ
	|			ПоступлениеДопРасходовТовары.Ссылка.Проведен
	|			И ПоступлениеДопРасходовТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|			И ПоступлениеДопРасходовТовары.Ссылка.Услуга = &ТранспортныеУслугиРаспределяемые
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПоступлениеДопРасходовТовары.Ссылка,
	|			ПоступлениеДопРасходовТовары.Номенклатура.НоменклатурнаяГруппа) КАК ДопРасходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ПоступлениеДопРасходовТовары.Ссылка КАК Ссылка,
	|				СУММА(ПоступлениеДопРасходовТовары.СуммаТовара) КАК СуммаТоваров
	|			ИЗ
	|				Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|			ГДЕ
	|				ПоступлениеДопРасходовТовары.Ссылка.Проведен
	|				И ПоступлениеДопРасходовТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|				И ПоступлениеДопРасходовТовары.Ссылка.Услуга = &ТранспортныеУслугиРаспределяемые
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПоступлениеДопРасходовТовары.Ссылка) КАК ДопРасходыДокумент
	|			ПО ДопРасходы.Ссылка = ДопРасходыДокумент.Ссылка) КАК ДопРасходыНаСебест
	|
	|СГРУППИРОВАТЬ ПО
	|	ДопРасходыНаСебест.НоменклатурнаяГруппа,ДопРасходыНаСебест.Регистратор
	| 
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	""2. Невозмещаемый исходящий транспорт"" ВидЗатрат,
	|	ЗатратыОбороты.Подразделение Подразделение,
	|	ЗатратыОбороты.НоменклатурнаяГруппа НоменклатурнаяГруппа,
	|	ЗатратыОбороты.Регистратор	Регистратор,
	|	ВЫРАЗИТЬ(ЗатратыОбороты.СуммаОборот   КАК ЧИСЛО(15,0)) Сумма
	|ИЗ
	|	РегистрНакопления.Затраты.Обороты(&НачДата, &КонДата,Регистратор , СтатьяЗатрат = &Автоуслуги) КАК ЗатратыОбороты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	""3. Возмещаемый исходящий транспорт"" ВидЗатрат,
	|	ПоступлениеТоваровУслугУслуги.Подразделение Подразделение ,
	|	ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа НоменклатурнаяГруппа,
	|	ПоступлениеТоваровУслугУслуги.Ссылка Регистратор,
	|	ВЫРАЗИТЬ(СУММА(ПоступлениеТоваровУслугУслуги.Сумма)  КАК ЧИСЛО(15,0)) Сумма
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугУслуги.Ссылка.Проведен
	|	И ПоступлениеТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И ПоступлениеТоваровУслугУслуги.Номенклатура = &ТранспортныеУслугиВозмещаемые
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа,
	|	ПоступлениеТоваровУслугУслуги.Подразделение,ПоступлениеТоваровУслугУслуги.Ссылка) А
	|{ИТОГИ ПО Регистратор}
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	ВидЗатрат,
	|	Подразделение,
	|	НоменклатурнаяГруппа";
	
		СтруктураПредставлениеПолей = Новый Структура("
	|ВидЗатрат,
	|НоменклатурнаяГруппа", 
	"Вид затрат",
	"Номенклатурная группа");

	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчетаОтчет);
	ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет по транспортным затратам за "+ПредставлениеПериода(НачДата,КонецДня(КонДата),"ФП=Истина");
	Настройка = ВосстановитьЗначение("НастройкаВнешниеОтчетыВнешнийОтчет1Отчет_0d9ddf37-3396-4e79-a0b7-3bd008526928");
	Если Настройка <> Неопределено Тогда
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры
