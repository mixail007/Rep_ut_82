Перем ОбъектПодключения, РезультатПодключения Экспорт;
Перем ОбъектПодключения2, РезультатПодключения2 Экспорт;

Функция ВыполнитьПодключениеКИБПриемнику(РезультатПодключения = Неопределено, СтрокаСообщенияОбОшибке = "") Экспорт
	
	Если РезультатПодключения = Неопределено Тогда
	
		СтруктураПодключения = СформироватьСтруктуруДляПодключения();
		ОбъектПодключения = ПодключитсяКИнформационнойБазе(СтруктураПодключения, СтрокаСообщенияОбОшибке);
		
		Если ОбъектПодключения = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Попытка
			РезультатПодключения = ОбъектПодключения.Обработки.УниверсальныйОбменДаннымиXML.Создать();
		Исключение
			СтрокаСообщенияОбОшибке = "При попытке создания обработки ОбменДаннымиXML произошла ошибка:" + ОписаниеОшибки();
			#Если Клиент тогда
			Сообщить(СтрокаСообщенияОбОшибке, СтатусСообщения.Важное);
			#КонецЕсли
			РезультатПодключения = Неопределено;
		КонецПопытки;
	
	КонецЕсли;
		
	Если РезультатПодключения = Неопределено Тогда
		Возврат РезультатПодключения;
	КонецЕсли;
		
	Возврат ОбъектПодключения;
	
КонецФункции

Функция ВыполнитьПодключениеКИБПриемнику2(РезультатПодключения = Неопределено, СтрокаСообщенияОбОшибке = "") Экспорт
	
	Если РезультатПодключения = Неопределено Тогда
	
		СтруктураПодключения = СформироватьСтруктуруДляПодключения2();
		ОбъектПодключения = ПодключитсяКИнформационнойБазе(СтруктураПодключения, СтрокаСообщенияОбОшибке);
		
		Если ОбъектПодключения = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Попытка
			РезультатПодключения = ОбъектПодключения.Обработки.УниверсальныйОбменДаннымиXML.Создать();
		Исключение
			СтрокаСообщенияОбОшибке = "При попытке создания обработки ОбменДаннымиXML произошла ошибка:" + ОписаниеОшибки();
			#Если Клиент тогда
			Сообщить(СтрокаСообщенияОбОшибке, СтатусСообщения.Важное);
			#КонецЕсли
			РезультатПодключения = Неопределено;
		КонецПопытки;
	
	КонецЕсли;
		
	Если РезультатПодключения = Неопределено Тогда
		Возврат РезультатПодключения;
	КонецЕсли;
		
	Возврат ОбъектПодключения;
	
КонецФункции


Функция СформироватьСтруктуруДляПодключения()
	
	СтруктураПодключения = Новый Структура();
	СтруктураПодключения.Вставить("ТипПодключения", 1);
	СтруктураПодключения.Вставить("ФайловыйРежим", Ложь);
	СтруктураПодключения.Вставить("АутентификацияWindows", Ложь);
	СтруктураПодключения.Вставить("КаталогИБ", "");
	СтруктураПодключения.Вставить("ИмяСервера", "server:3041");
	СтруктураПодключения.Вставить("ИмяИБНаСервере", "v83ib_otdelk_zup");
	СтруктураПодключения.Вставить("Пользователь", "Плотников");
	СтруктураПодключения.Вставить("Пароль", "123654");
	СтруктураПодключения.Вставить("ВерсияПлатформы", "V83");	
	
	Возврат СтруктураПодключения;
	
КонецФункции

Функция СформироватьСтруктуруДляПодключения2()
	
	СтруктураПодключения = Новый Структура();
	СтруктураПодключения.Вставить("ТипПодключения", 1);
	СтруктураПодключения.Вставить("ФайловыйРежим", Ложь);
	СтруктураПодключения.Вставить("АутентификацияWindows", Ложь);
	СтруктураПодключения.Вставить("КаталогИБ", "");
	СтруктураПодключения.Вставить("ИмяСервера", "server");
	СтруктураПодключения.Вставить("ИмяИБНаСервере", "v82ib_baza_zup");
	СтруктураПодключения.Вставить("Пользователь", "Плотников");
	СтруктураПодключения.Вставить("Пароль", "159");
	СтруктураПодключения.Вставить("ВерсияПлатформы", "V82");	
	
	Возврат СтруктураПодключения;
	
КонецФункции


Функция ПодключитсяКИнформационнойБазе(СтруктураПодключения, СтрокаСообщенияОбОшибке = "")
	
	Перем СтрокаПодключения;
	
	ПараметровДостаточно = ОпределитьДостсточностьПараметровДляПодключенияКИнформационнойБазе(СтруктураПодключения, СтрокаПодключения, СтрокаСообщенияОбОшибке);
	
	Если Не ПараметровДостаточно Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не СтруктураПодключения.АутентификацияWindows Тогда
		Если НЕ ПустаяСтрока(СтруктураПодключения.Пользователь) Тогда
			СтрокаПодключения = СтрокаПодключения + ";Usr = """ + СтруктураПодключения.Пользователь + """";
		КонецЕсли;
		Если НЕ ПустаяСтрока(СтруктураПодключения.Пароль) Тогда
			СтрокаПодключения = СтрокаПодключения + ";Pwd = """ + СтруктураПодключения.Пароль + """";
		КонецЕсли;
	КонецЕсли;
	
	//"V8" или "V81"
	ОбъектПодключения = СтруктураПодключения.ВерсияПлатформы;
	
	СтрокаПодключения = СтрокаПодключения + ";";
	
	Попытка
		#Если Клиент Тогда
		Состояние("Выполняется подключение к информационной базе ...");
		#КонецЕсли
		Если  СтруктураПодключения.ТипПодключения = 0 Тогда
			ОбъектПодключения = ОбъектПодключения +".Application";
			ТекCOMОбъект = Новый COMОбъект(ОбъектПодключения);
			ТекCOMОбъект.Connect(СтрокаПодключения);
		Иначе
			ОбъектПодключения = ОбъектПодключения +".COMConnector";
			ТекCOMПодключение = Новый COMОбъект(ОбъектПодключения);
			ТекCOMОбъект = ТекCOMПодключение.Connect(СтрокаПодключения);
		КонецЕсли;
			
		#Если Клиент Тогда
			Состояние("Соединение установлено");
			Состояние();
		#КонецЕсли		
			
	Исключение
		
		СтрокаСообщенияОбОшибке = "При попытке подключения к информационной базе произошла следующая ошибка:" + Символы.ПС 
						+ ОписаниеОшибки();
		#Если Клиент Тогда
			СообщитьОбОшибкеДляПользователю(СтрокаСообщенияОбОшибке);
		    Состояние("Соединение установить не удалось");
			Состояние();
		#КонецЕсли
							
		Возврат Неопределено;
		
	КонецПопытки;
	
	Возврат ТекCOMОбъект;
	
КонецФункции

Функция ОпределитьДостсточностьПараметровДляПодключенияКИнформационнойБазе(СтруктураПодключения, СтрокаПодключения = "", СтрокаСообщенияОбОшибке = "") Экспорт
	
	НаличиеОшибок = Ложь;
	
	Если СтруктураПодключения.ФайловыйРежим  Тогда
		
		Если ПустаяСтрока(СтруктураПодключения.КаталогИБ) Тогда
			
			СтрокаСообщенияОбОшибке = "Не задан каталог информационной базы-приемника";
			#Если Клиент Тогда
			Сообщить(СтрокаСообщенияОбОшибке, СтатусСообщения.Важное);
			#КонецЕсли
			НаличиеОшибок = Истина;
			
		КонецЕсли;
		
		СтрокаПодключения = "File=""" + СтруктураПодключения.КаталогИБ + """";
	Иначе
		
		Если ПустаяСтрока(СтруктураПодключения.ИмяСервера) Тогда
			
			СтрокаСообщенияОбОшибке = "Не задано имя сервера 1С:Предприятия информационной базы-приемника";
			#Если Клиент Тогда
			Сообщить(СтрокаСообщенияОбОшибке, СтатусСообщения.Важное);
			#КонецЕсли
			НаличиеОшибок = Истина;
			
		КонецЕсли;
		
		Если ПустаяСтрока(СтруктураПодключения.ИмяИБНаСервере) Тогда
			
			СтрокаСообщенияОбОшибке = "Не задано имя информационной базы-приемника на сервере 1С:Предприятия";
			#Если Клиент Тогда
			Сообщить(СтрокаСообщенияОбОшибке, СтатусСообщения.Важное);
			#КонецЕсли
			НаличиеОшибок = Истина;
			
		КонецЕсли;		
		
		СтрокаПодключения = "Srvr = """ + СтруктураПодключения.ИмяСервера + """; Ref = """ + СтруктураПодключения.ИмяИБНаСервере + """";		
		
	КонецЕсли;
	
	Возврат НЕ НаличиеОшибок;	
	
КонецФункции

Процедура СообщитьОбОшибкеДляПользователю(Знач ТекстСообщения) Экспорт

	НачалоСлужебногоСообщения    = Найти(ТекстСообщения, "{");
	ОкончаниеСлужебногоСообщения = Найти(ТекстСообщения, "}:");
	
	Если ОкончаниеСлужебногоСообщения > 0 
		И НачалоСлужебногоСообщения > 0 
		И НачалоСлужебногоСообщения < ОкончаниеСлужебногоСообщения Тогда
		
		ТекстСообщения = Лев(ТекстСообщения, (НачалоСлужебногоСообщения - 1)) +
		                 Сред(ТекстСообщения, (ОкончаниеСлужебногоСообщения + 2));
						 
	КонецЕсли;
	
	Сообщить(СокрЛП(ТекстСообщения), СтатусСообщения.Важное);

КонецПроцедуры

Функция ЗаполнитьТабФот(дата1,дата2,отбор) Экспорт
	
	ОбъектПодключения = ВыполнитьПодключениеКИБПриемнику();
	
	КЧ = Новый КвалификаторыЧисла(12,2);
    КС = Новый КвалификаторыСтроки(100);
	КД = Новый КвалификаторыДаты();
    Массив = Новый Массив;
    Массив.Добавить(Тип("Строка"));
    ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
    Массив.Очистить();
    Массив.Добавить(Тип("Число"));
    ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	Массив.Очистить();
    Массив.Добавить(Тип("Дата"));
    ОписаниеТиповД = Новый ОписаниеТипов(Массив, , ,КД);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Месяц",ОписаниеТиповД);
	Таблица.Колонки.Добавить("Сумма",ОписаниеТиповЧ);
	Таблица.Колонки.Добавить("Год",ОписаниеТиповС);
	Таблица.Колонки.Добавить("Сотрудник",ОписаниеТиповС);
		
	Запрос = ОбъектПодключения.NewObject("Запрос");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|ЗначенияСвойствОбъектов.Объект
|ПОМЕСТИТЬ Свойства
|ИЗ
|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
|ГДЕ
|	ЗначенияСвойствОбъектов.Свойство.Код = &Код
|	И ТИПЗНАЧЕНИЯ(ЗначенияСвойствОбъектов.Объект) = ТИП(Справочник.СотрудникиОрганизаций)
|	И ЗначенияСвойствОбъектов.Значение.Наименование ПОДОБНО &ВидТовара
 |
|СГРУППИРОВАТЬ ПО
|	ЗначенияСвойствОбъектов.Объект
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации КАК Месяц,
|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Сумма,
|	""Этот год"" КАК Год,
|   ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Наименование КАК Сотрудник
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
|ГДЕ
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &дата1 И &дата2
|	И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник В
|			(ВЫБРАТЬ
|				св.Объект
|			ИЗ
|				Свойства КАК св)
|
|СГРУППИРОВАТЬ ПО
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
|   ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Наименование
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	ДОБАВИТЬКДАТЕ(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, ГОД, 1),
|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат),
|	""Прошлый год"",
|   ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Наименование
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
|ГДЕ
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ ДОБАВИТЬКДАТЕ(&дата1, ГОД, -1) И ДОБАВИТЬКДАТЕ(&дата2, ГОД, -1)
|	И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник В
|			(ВЫБРАТЬ
|				св.Объект
|			ИЗ
|				Свойства КАК св)
|
|СГРУППИРОВАТЬ ПО
|	ДОБАВИТЬКДАТЕ(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, ГОД, 1),
|   ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Наименование";
	
	Запрос.УстановитьПараметр("дата1",дата1);
	Запрос.УстановитьПараметр("Код","0005");
    Запрос.УстановитьПараметр("ВидТовара",строка(отбор));
	Запрос.УстановитьПараметр("дата2",дата2);
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Для каждого стр из Рез Цикл
		нов = Таблица.Добавить();
		ЗаполнитьЗначенияСвойств(нов,стр);
	КонецЦикла;
	
	//Возврат Таблица;
	
	ОбъектПодключения = ВыполнитьПодключениеКИБПриемнику2();
			
	Запрос = ОбъектПодключения.NewObject("Запрос");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|ЗначенияСвойствОбъектов.Объект
|ПОМЕСТИТЬ Свойства
|ИЗ
|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
|ГДЕ
|	ЗначенияСвойствОбъектов.Свойство.Код = &Код
|	И ТИПЗНАЧЕНИЯ(ЗначенияСвойствОбъектов.Объект) = ТИП(Справочник.СотрудникиОрганизаций)
|	И ЗначенияСвойствОбъектов.Значение.Наименование ПОДОБНО &ВидТовара
 |
|СГРУППИРОВАТЬ ПО
|	ЗначенияСвойствОбъектов.Объект
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации КАК Месяц,
|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Сумма,
|	""Этот год"" КАК Год,
|   ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Наименование КАК Сотрудник
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
|ГДЕ
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &дата1 И &дата2
|	И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник В
|			(ВЫБРАТЬ
|				св.Объект
|			ИЗ
|				Свойства КАК св)
|
|СГРУППИРОВАТЬ ПО
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
|   ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Наименование
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	ДОБАВИТЬКДАТЕ(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, ГОД, 1),
|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат),
|	""Прошлый год"",
|   ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Наименование
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
|ГДЕ
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ ДОБАВИТЬКДАТЕ(&дата1, ГОД, -1) И ДОБАВИТЬКДАТЕ(&дата2, ГОД, -1)
|	И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник В
|			(ВЫБРАТЬ
|				св.Объект
|			ИЗ
|				Свойства КАК св)
|
|СГРУППИРОВАТЬ ПО
|	ДОБАВИТЬКДАТЕ(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, ГОД, 1),
|   ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Наименование";
	
	Запрос.УстановитьПараметр("дата1",дата1);
	Запрос.УстановитьПараметр("Код","0005");
    Запрос.УстановитьПараметр("ВидТовара",строка(отбор));
	Запрос.УстановитьПараметр("дата2",дата2);
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Для каждого стр из Рез Цикл
		нов = Таблица.Добавить();
		ЗаполнитьЗначенияСвойств(нов,стр);
	КонецЦикла;
	
	//Таблица.Свернуть("Месяц,Год","Сумма");
	
	Возврат Таблица;			   
				   
КонецФункции
