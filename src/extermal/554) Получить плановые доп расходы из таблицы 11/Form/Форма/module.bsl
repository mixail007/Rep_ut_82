
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Если ВыбранныеДоки.Количество()>0 тогда
		//тзДанныеПоДопРасходам=ПолучитьДанныеПоДопРасходам();
		Эксель = Новый COMОбъект("Excel.Application");
		//ПутьКФайлу="\\Novikova\Таблица11\таблица 11.xls";
		ПутьКФайлу="c:\Таблица11\таблица 11.xls";
		//ПутьКФайлу="c:\obm\таблица 11.xls";
		Файл = Новый Файл(ПутьКФайлу);
		Если Не Файл.Существует() Тогда
			Сообщить("Файл не существует!");
			Возврат;
		КонецЕсли; 
		Книга   = Эксель.Workbooks.Open(ПутьКФайлу);
		КоличествоЛистов = Книга.Sheets.Count;
		НомерЛиста=1;
		СписокЛистов=новый СписокЗначений;
		Пока НомерЛиста <= КоличествоЛистов Цикл
			СписокЛистов.Добавить(Книга.Sheets(НомерЛиста).Name);
			НомерЛиста=НомерЛиста+1;
		КонецЦикла;
		ЛистСезон=СписокЛистов.ВыбратьЭлемент("Укажите сезон");
		Лист                = Книга.Worksheets(ЛистСезон.Значение);
		
		КолонкаКонтейнер="I";
		КолонкаПланФрахт="DH";
		КолонкаПланДоставка="DI";
		КолонкаПланБрокерские="DJ";
		
		
		Налоги     = Справочники.Номенклатура.НайтиПоНаименованию("Таможня, НДС",,Справочники.Номенклатура.НайтиПоКоду("ЛН00001"));
		Фрахт      = Справочники.Номенклатура.НайтиПоНаименованию("Фрахт",,Справочники.Номенклатура.НайтиПоКоду("ЛН00001"));
		Таможня    = Справочники.Номенклатура.НайтиПоНаименованию("Таможенная пошлина",,Справочники.Номенклатура.НайтиПоКоду("ЛН00001"));
		Брокерские = Справочники.Номенклатура.НайтиПоНаименованию("Брокерские услуги",,Справочники.Номенклатура.НайтиПоКоду("ЛН00001"));
		Доставка   = Справочники.Номенклатура.НайтиПоНаименованию("Автодоставка",,Справочники.Номенклатура.НайтиПоКоду("ЛН00001"));

		ВалютаДоллар = Справочники.Валюты.НайтиПоКоду("840");
		ВалютаРуб = Справочники.Валюты.НайтиПоКоду("643");
		
		Для каждого стрДоки из ВыбранныеДоки Цикл
			Если стрДоки.флажок тогда
				КонтейнерИзДока=СокрЛП(стрДоки.НомерКонтейнера);
				НСтр = Лист.Columns(КолонкаКонтейнер).Find(КонтейнерИзДока);
				Если НСтр<>Неопределено тогда
					СтрокаExcel=НСтр.Row;
					Сообщить(""+СтрокаExcel);
					//Попытка
					СуммаПланФрахт=Число(СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаПланФрахт).Value));
					СуммаПланДоставка=Число(СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаПланДоставка).Value));
					СуммаПланБрокерские=Число(СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаПланБрокерские).Value));
					
					ЗаказОб = стрДоки.ЗаказПоставщику.ПолучитьОбъект();
					
					ПроверитьСтрокиДопРасходов(ЗаказОб);
					
					ОбновитьПлановуюСумму(ЗаказОб,Фрахт,СуммаПланФрахт, ВалютаДоллар, 60);
					ОбновитьПлановуюСумму(ЗаказОб,Доставка,СуммаПланДоставка, ВалютаРуб,120);
					ОбновитьПлановуюСумму(ЗаказОб,Брокерские,СуммаПланБрокерские, ВалютаРуб,120);
					
					ПересчитатьНалоги(ЗаказОб);
					//ЗаказОб.ПолучитьФорму("ФормаДокумента").Открыть();
					
					ЗаказОб.ОбменДанными.Загрузка = истина;
					ЗаказОб.Записать(РежимЗаписиДокумента.Запись);
				//Исключение
					//Сообщить(""+СтрокаExcel);
					//Сообщить(ОписаниеОшибки());
				//КонецПопытки;
				Иначе
					Сообщить("Контейнер: "+КонтейнерИзДока+" в таблице не найден.");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Эксель.DisplayAlerts = 0; 
		Эксель.Quit();
	КонецЕсли;
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

процедура ОбновитьПлановуюСумму(ЗаказОб,Услуга,Сумма, Валюта, Отсрочка)
	Если Сумма > 0 тогда
		стр = ЗаказОб.ПлановыеДопРасходы.Найти(Услуга,"Номенклатура");
		ВалютаРуб = Справочники.Валюты.НайтиПоКоду("643");
		Если стр = неопределено тогда
			нстр = ЗаказОб.ПлановыеДопРасходы.Добавить();
			нстр.Номенклатура = Услуга;
			нстр.Валюта = Валюта;
			нстр.СуммаВзаиморасчетов = Сумма;
			Если Валюта<>ВалютаРуб тогда
				нстр.СуммаУпр = Сумма * ЗаказОб.КурсВзаиморасчетов;
			иначе
				нстр.СуммаУпр = Сумма * 1;
			КонецЕсли;
			Если Услуга="FOB" тогда
				нстр.СуммаВзаиморасчетов = ЗаказОб.СуммаДокумента;
				нстр.СуммаУпр = ЗаказОб.СуммаДокумента*ЗаказОб.КурсВзаиморасчетов;
			КонецЕсли;
			стр = нстр;
		ИначеЕсли стр.Номенклатура="FOB" и стр.СуммаВзаиморасчетов=0 тогда
			стр.СуммаВзаиморасчетов = ЗаказОб.СуммаДокумента;
			стр.СуммаУпр = ЗаказОб.СуммаДокумента*ЗаказОб.КурсВзаиморасчетов;
		иначе
			Если стр.СуммаВзаиморасчетов = 0 тогда
				стр.СуммаВзаиморасчетов = Сумма;
				Если Валюта<>ВалютаРуб тогда
					стр.СуммаУпр = стр.СуммаВзаиморасчетов * ЗаказОб.КурсВзаиморасчетов;
				иначе
					стр.СуммаУпр = стр.СуммаВзаиморасчетов * 1;
				КонецЕсли;
			иначе
				сообщить(""+ЗаказОб+" "+Услуга+" сумма уже есть: "+стр.СуммаВзаиморасчетов+" пропускаем...");
			КонецЕсли;
		КонецЕсли;
		
		если не значениеЗаполнено(стр.ДатаПлатежа) тогда
			стр.ДатаПлатежа=ЗаказОб.Дата+60*60*24*Отсрочка;
		КонецЕсли;
		Сообщить(""+ЗаказОб+" "+Услуга+" сумма: "+Сумма+" дата платежа: "+стр.ДатаПлатежа);
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыДействие(Кнопка)
	СписокКонтрагентов=Новый СписокЗначений;
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("91735")); //FREEMAN RACING WHEELS INC
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93695")); //NINGBO PARTNER INTERNATIONAL TRADE CO., LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("91535")); //JIANGSU SAINTY MACHINERY I&E CORP. LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000715")); //Zhejiang Jingu Company Ltd
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93777")); //Steel Strips Wheels Limited
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93694")); //Zhangzhou Shuangsheng WHeels Co., ltd
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("91834")); //NINGBO LONGTIME MACHINE CO.,LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001626")); //XIAMEN YONGXINGXUN INDUSTRY AND TRADE CO., LTD	
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("92540")); //FUJIAN SHUANGSHENG IM &EX CO., LTD	
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94302")); //ZHANGZHOU LIYANG MACHINE CO., LTD	
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94447")); //XIAMEN FUYISHENG MACHINE CO., LTD,
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94442")); //JIANGSU SIBORUI IMPORT AND EXPORT CO., LTD
	//отбираем документы без сформированных доп.расходов
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЗаказПоставщику.Ссылка КАК ЗаказПоставщику,
	             |	ЗаказПоставщику.Дата,
	             |	ЗаказПоставщику.Номер,
	             |	ЗаказПоставщику.Контрагент,
	             |	ЗаказПоставщику.НомерКонтейнера КАК НомерКонтейнера,
	             |	ЗаказПоставщику.НомерВходящегоДокумента,
	             |	ЗаказПоставщику.СуммаДокумента,
	             |	ИСТИНА КАК флажок
	             |ИЗ
	             |	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	             |ГДЕ
	             |	ЗаказПоставщику.Дата МЕЖДУ &ДатаН И &ДатаК
	             |	И ЗаказПоставщику.Проведен = ИСТИНА
	             |	И НЕ ЗаказПоставщику.НомерКонтейнера ЕСТЬ NULL 
	             |	И НЕ ЗаказПоставщику.НомерКонтейнера = """"
	             |	И ЗаказПоставщику.Контрагент В(&СписокКонтрагентов)";
	Запрос.УстановитьПараметр("ДатаН",НачПериода);
	Запрос.УстановитьПараметр("ДатаК",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("СписокКонтрагентов",СписокКонтрагентов);
	Рез=Запрос.Выполнить().Выгрузить();
	ВыбранныеДоки=рез;
	
	ЭлементыФормы.ВыбранныеДоки.СоздатьКолонки();
	ЭлементыФормы.ВыбранныеДоки.Колонки.Добавить("фл","фл");
	Колонки = ЭлементыФормы.ВыбранныеДоки.Колонки;
	Индекс=Колонки.Индекс(Колонки["фл"]);
	//ЭлементыФормы.ВыбранныеДоки.Колонки.ЗаказПоставщику.КнопкаВыбора = истина;
	ЭлементыФормы.ВыбранныеДоки.Колонки.Сдвинуть(Колонки["фл"],-Индекс);
	ЭлементыФормы.ВыбранныеДоки.Колонки.фл.РежимРедактирования=РежимРедактированияКолонки.Непосредственно;
	ЭлементыФормы.ВыбранныеДоки.Колонки.фл.ДанныеФлажка="флажок";
	ЭлементыФормы.ВыбранныеДоки.Колонки.флажок.видимость=ложь;
	
КонецПроцедуры

Процедура ПересчитатьНалоги(Заказ)
	ТаможняНДС = Справочники.Номенклатура.НайтиПоКоду("ЛН00385"); //Таможня, НДС
	ТаможняНДС = Справочники.Номенклатура.НайтиПоНаименованию("Таможня, НДС",,Справочники.Номенклатура.НайтиПоНаименованию("Услуги входящие 44"));
	НомПошлина = Справочники.Номенклатура.НайтиПоНаименованию("Таможенная пошлина",,Справочники.Номенклатура.НайтиПоНаименованию("Услуги входящие 44"));
	Фрахт = Справочники.Номенклатура.НайтиПоКоду("ЛН00379"); //Фрахт
	Фрахт = Справочники.Номенклатура.НайтиПоНаименованию("Фрахт",,Справочники.Номенклатура.НайтиПоНаименованию("Услуги входящие 44")); //Фрахт
	Пошлина=0;
	НДС = 0;
	СуммаФрахт = 0;
	
	стр = Заказ.ПлановыеДопРасходы.Найти(Фрахт,"Номенклатура");
	
	Если стр<>Неопределено тогда
		СуммаФрахт = стр.СуммаВзаиморасчетов;
		Пошлина = (Заказ.Товары.Итог("Сумма")+СуммаФрахт)/100*5;
	КонецЕсли;
	
	НДС = (Пошлина+Заказ.Товары.Итог("Сумма")+СуммаФрахт)/100*18;
	Сообщить("Пошлина: "+Пошлина+Символы.ПС+"НДС: "+НДС);
	Налоги = НДС;
	
	стр = Заказ.ПлановыеДопРасходы.Найти(ТаможняНДС,"Номенклатура");
	Если стр<>неопределено тогда
		стр.СуммаВзаиморасчетов = Налоги;
	Иначе
		нстр = Заказ.ПлановыеДопРасходы.Добавить();
		нстр.Номенклатура = ТаможняНДС;
		нстр.валюта = Заказ.ВалютаДокумента;
		нстр.СуммаВзаиморасчетов = Налоги;
	КонецЕсли;
	
	стр = Заказ.ПлановыеДопРасходы.Найти(НомПошлина,"Номенклатура");
	Если стр<>неопределено тогда
		стр.СуммаВзаиморасчетов = Пошлина;
	Иначе
		нстр = Заказ.ПлановыеДопРасходы.Добавить();
		нстр.Номенклатура = НомПошлина;
		нстр.валюта = Заказ.ВалютаДокумента;
		нстр.СуммаВзаиморасчетов = Пошлина;
	КонецЕсли;
	
	Для каждого стр из Заказ.ПлановыеДопРасходы Цикл
		ПересчитатьСуммыУпр(Заказ,стр);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПересчитатьСуммыУпр(Заказ,стр)
	Если стр.Валюта = Заказ.ВалютаДокумента тогда
		стр.СуммаУпр = стр.СуммаВзаиморасчетов*Заказ.КурсВзаиморасчетов;
	Иначе
		стр.СуммаУпр = стр.СуммаВзаиморасчетов;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьСтрокиДопРасходов(ЗаказОб)
	
	СтрокаФрахт = Справочники.Номенклатура.НайтиПоНаименованию("Фрахт",,Справочники.Номенклатура.НайтиПоНаименованию("Услуги входящие 44")); //Фрахт
	СтрокаНалоги = Справочники.Номенклатура.НайтиПоНаименованию("Таможня, НДС",,Справочники.Номенклатура.НайтиПоНаименованию("Услуги входящие 44"));
	СтрокаПошлина = Справочники.Номенклатура.НайтиПоНаименованию("Таможенная пошлина",,Справочники.Номенклатура.НайтиПоНаименованию("Услуги входящие 44"));
	СтрокаБрокерские = Справочники.Номенклатура.НайтиПоНаименованию("Брокерские услуги",,Справочники.Номенклатура.НайтиПоНаименованию("Услуги входящие 44"));
	СтрокаДоставка = Справочники.Номенклатура.НайтиПоНаименованию("Автодоставка",,Справочники.Номенклатура.НайтиПоНаименованию("Услуги входящие 44"));
	СтрокаFob = "FOB";
	
	ВалютаДоллар = Справочники.Валюты.НайтиПоКоду("840");
	ВалютаРуб = Справочники.Валюты.НайтиПоКоду("643");
	
	ПроверитьСтроку(ЗаказОб,СтрокаФрахт,ВалютаДоллар,60);
	ПроверитьСтроку(ЗаказОб,СтрокаНалоги,ВалютаДоллар,30);
	ПроверитьСтроку(ЗаказОб,СтрокаПошлина,ВалютаДоллар,30);
	ПроверитьСтроку(ЗаказОб,СтрокаБрокерские,ВалютаРуб,120);
	ПроверитьСтроку(ЗаказОб,СтрокаДоставка,ВалютаРуб,120);
	Если ЗаказОб.контрагент.Код = "91735" тогда
		ПроверитьСтроку(ЗаказОб,СтрокаFob,ВалютаДоллар,7);
	иначе
		ПроверитьСтроку(ЗаказОб,СтрокаFob,ВалютаДоллар,30);
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьСтроку(Заказ, Ном, вал,Отсрочка)
	стр = Заказ.ПлановыеДопРасходы.Найти(Ном,"Номенклатура");
	Если стр = неопределено тогда
		нстр = Заказ.ПлановыеДопРасходы.Добавить();
		нстр.Номенклатура = Ном;
		нстр.Валюта = вал;
		Если Ном="FOB" тогда
			нстр.СуммаВзаиморасчетов = Заказ.СуммаДокумента;
			нстр.СуммаУпр = Заказ.СуммаДокумента*Заказ.КурсВзаиморасчетов;
		КонецЕсли;
		стр = нстр;
	ИначеЕсли стр.Номенклатура="FOB" и стр.СуммаВзаиморасчетов=0 тогда
		стр.СуммаВзаиморасчетов = Заказ.СуммаДокумента;
		стр.СуммаУпр = Заказ.СуммаДокумента*Заказ.КурсВзаиморасчетов;
	КонецЕсли;
	
	если не значениеЗаполнено(стр.ДатаПлатежа) тогда
		стр.ДатаПлатежа=Заказ.Дата+60*60*24*Отсрочка;
	КонецЕсли;
	
КонецПроцедуры
