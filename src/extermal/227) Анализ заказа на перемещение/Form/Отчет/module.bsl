
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт

	Макет = ВнешнийОтчетОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателяТовары.НомерСтроки,
	|	ЗаказПокупателяТовары.Номенклатура.Код,
	|	ЗаказПокупателяТовары.Номенклатура,
	|	ЗаказПокупателяТовары.Количество КАК КОличествоЗаказано,
	|	ПеремещениеТоваровТовары.Количество КАК КоличествоПеремещено,
	|	ЗаказПокупателяТовары.Количество - ЕСТЬNULL(ПеремещениеТоваровТовары.Количество, 0) КАК ОсталосьПереместить,
	|   ТоварыНаСкладахОстатки.КоличествоОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказПокупателяТовары.НомерСтроки КАК НомерСтроки,
	|		ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	|		ЗаказПокупателяТовары.Количество КАК Количество
	|	ИЗ
	|		Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|	ГДЕ
	|		ЗаказПокупателяТовары.Ссылка = &Ссылка) КАК ЗаказПокупателяТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|			СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество
	|		ИЗ
	|			Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ГДЕ
	|			ПеремещениеТоваровТовары.Ссылка.Проведен
	|			И ПеремещениеТоваровТовары.Ссылка.ВнутреннийЗаказ.ДокументОснование = &Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПеремещениеТоваровТовары.Номенклатура) КАК ПеремещениеТоваровТовары
	|		ПО ЗаказПокупателяТовары.Номенклатура = ПеремещениеТоваровТовары.Номенклатура
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки( ,НЕ Склад.ЗапретитьИспользование И НЕ Склад.Транзитный) КАК ТоварыНаСкладахОстатки
	|	ПО ЗаказПокупателяТовары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура";

	Запрос.УстановитьПараметр("Ссылка", ЗаказПокупателя);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ОбластьЗаголовок.Параметры.ЗаголовокДокумента= Строка(ЗаказПокупателя)+", контрагент "+ ЗаказПокупателя.Контрагент;
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ЗаказПокупателяНачалоВыбора(Элемент, СтандартнаяОбработка)
СтандартнаяОбработка=ЛОЖЬ;
	ФормаВыбора=Документы.ЗаказПокупателя.ПолучитьФорму("ФормаСписка",ЭтаФорма);
	ФормаВыбора.РежимВыбора=Истина;
	ФормаВыбора.МножественныйВыбор=Ложь;

	ФормаВыбора.Открыть();
КонецПроцедуры


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	ЗаказПокупателя= ЗначениеВыбора;
КонецПроцедуры


Процедура ЗаказПокупателяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ЗаказПокупателя= ВыбранноеЗначение;

КонецПроцедуры

