
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	//	Отчет(ТабДок, КонПериода, НачПериода);
//+++   18.05.2012
	началоВр = ТекущаяДата();
	
	Отчет(ТабДок, КонПериода, НачПериода);

	КонецВр = ТекущаяДата();
	ВремяВыполнения = Число(КонецВр - началоВр);
	
 	парамЗапроса = формат(НачПериода,"ДЛФ=D")+" - "+формат(КонПериода,"ДЛФ=D"); 
	Если ВремяВыполнения>0 тогда
		//общий модуль:  яштПрочее.ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки(
		ЗаписатьВЖурналИзмененийВремяВыполненияВнешнейОбработки( 57, ВремяВыполнения, "Кнопка [Сформировать] - "+парамЗапроса+" ("+строка(ВремяВыполнения)+" Сек.)" ); //!!!!
	КонецЕсли;	
	//+++)   18.05.2012

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок, КонПериода, НачПериода) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	
	
	//+++( 03.05.2012
	пустойСписок = неопределено;
			договоры    = пустойСписок;
			контрагенты = пустойСписок;
			
	Если НЕ ( РольДоступна("яштФинДиректор") или РольДоступна("ПолныеПрава") ) тогда
			
			Если //группа или 1
				ЗначениеЗаполнено(ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов")) Тогда
				СписокПользователей = Новый СписокЗначений;
				Для каждого СтрокаСпр Из ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов").ПользователиГруппы Цикл
					СписокПользователей.Добавить(СтрокаСпр.Пользователь);	
				КонецЦикла; 
			иначе //только по себе!
				СписокПользователей = Новый СписокЗначений;
	       		СписокПользователей.Добавить(ПараметрыСеанса.ТекущийПользователь);
			КонецЕсли;//+++)
			
			Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтчетыОтборПоДоговору")
				и  ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьОтбор") )      // отбор ЗДЕСЬ!
				или ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда  //+++ 21.07.2015
				 договоры = ПолучитьСписокДоговоровМенеджера(СписокПользователей);
				 Запрос.УстановитьПараметр("договоры",   договоры);
			 иначеЕсли ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтчетыОтборПоКонтрагенту")
				 и  ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьОтбор") тогда   // отбор ЗДЕСЬ!
				 контрагенты = ПолучитьСписокКонтрагентовМенеджера(СписокПользователей);
				 Запрос.УстановитьПараметр("контрагенты", контрагенты);
			КонецЕсли; 
			
	КонецЕсли; 
	//Запрос.УстановитьПараметр("ПустойСписок", пустойСписок);
	//Запрос.УстановитьПараметр("договоры",   договоры);
	//Запрос.УстановитьПараметр("контрагенты", контрагенты);
	//+++) 03.05.2012

	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗапросПоПродажам.Менеджер КАК Менеджер,
	|	ЗапросПоПродажам.Контрагент КАК Контрагент,
	|	ЗапросПоПродажам.СуммаПродаж КАК СуммаПродаж,
	|	ЗапросПоПродажам.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДвиженияДенежныхСредствОбороты.ПриходДС КАК ПриходДС,
	|	ЕСТЬNULL(ДвиженияДенежныхСредствНераспределенка.СуммаОборот, 0) КАК НераспределенныеДеньги,
	|	ВзаиморасчетыСКонтрагентамиОстатки.Дебиторка КАК Дебиторка,
	|	ЗапросПоПродажам.СебестоимостьПродаж КАК СебестоимостьПродаж,
	|	ЗапросПоПродажам.Наценка КАК Наценка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПродажиОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер,
	|		СУММА(ПродажиОбороты.СтоимостьОборот) КАК СуммаПродаж,
	|		ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	|		СУММА(ЕСТЬNULL(ПродажиСебестоимость.Стоимость, 0)) КАК СебестоимостьПродаж,
	|		СУММА(ПродажиОбороты.СтоимостьОборот - ЕСТЬNULL(ПродажиСебестоимость.Стоимость, 0)) КАК Наценка
	|	ИЗ
	|		РегистрНакопления.Продажи.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				Регистратор,
	|				//ОтборДогКонтр1 ) КАК ПродажиОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СУММА(ПродажиСебестоимость.Стоимость) КАК Стоимость,
	|				ПродажиСебестоимость.Регистратор КАК Регистратор
	|			ИЗ
	|				РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
	|			ГДЕ
	|				ПродажиСебестоимость.Период МЕЖДУ &НачПериода И &КонПериода
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПродажиСебестоимость.Регистратор) КАК ПродажиСебестоимость
	|			ПО ПродажиОбороты.Регистратор = ПродажиСебестоимость.Регистратор
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
	|		ПродажиОбороты.ДоговорКонтрагента.Владелец,
	|		ПродажиОбороты.ДоговорКонтрагента) КАК ЗапросПоПродажам
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДвиженияДенежныхСредствОбороты.Контрагент КАК Контрагент,
	|			ДвиженияДенежныхСредствОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|			СУММА(ДвиженияДенежныхСредствОбороты.СуммаОборот) КАК ПриходДС
	|		ИЗ
	|			РегистрНакопления.ДвиженияДенежныхСредств.Обороты(
	|					&НачПериода,
	|					&КонПериода,
	|					Регистратор,
	|					//ОтборДогКонтр1 ) КАК ДвиженияДенежныхСредствОбороты
	|		ГДЕ
	|			ДвиженияДенежныхСредствОбороты.ПриходРасход = &ПриходРасход
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДвиженияДенежныхСредствОбороты.Контрагент,
	|			ДвиженияДенежныхСредствОбороты.ДоговорКонтрагента) КАК ДвиженияДенежныхСредствОбороты
	|		ПО ЗапросПоПродажам.Контрагент = ДвиженияДенежныхСредствОбороты.Контрагент
	|			И ЗапросПоПродажам.ДоговорКонтрагента = ДвиженияДенежныхСредствОбороты.ДоговорКонтрагента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	|			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|			СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток) КАК Дебиторка
	|		ИЗ
	|			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	|					&КонПериода,
	|					//ОтборДогКонтр1 ) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец,
	|			ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|		ПО ЗапросПоПродажам.Контрагент = ВзаиморасчетыСКонтрагентамиОстатки.Контрагент
	|			И ЗапросПоПродажам.ДоговорКонтрагента = ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДенежныхСредств.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				ПриходРасход = &ПриходРасход
	|					И ДоговорКонтрагента.ТипДоговора = &Нераспределенка
	|					//ОтборДогКонтрИ ) КАК ДвиженияДенежныхСредствНераспределенка
	|		ПО ЗапросПоПродажам.Контрагент = ДвиженияДенежныхСредствНераспределенка.Контрагент
	| УПОРЯДОЧИТЬ ПО ЗапросПоПродажам.Менеджер.Наименование, ЗапросПоПродажам.Контрагент.Наименование
	|ИТОГИ
	|	СУММА(СуммаПродаж),
	|	СУММА(ПриходДС),
	|	МИНИМУМ(НераспределенныеДеньги),
	|	СУММА(Дебиторка),
	|	СУММА(СебестоимостьПродаж),
	|	СУММА(Наценка)
	|ПО
	|	ОБЩИЕ,
	|	Менеджер,
	|	Контрагент,
	|	ДоговорКонтрагента";

	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("ПриходРасход", Перечисления.ВидыДвиженийПриходРасход.Приход);
	Запрос.УстановитьПараметр("Нераспределенка", Справочники.ТипыДоговоров.НД);
	
	//+++ 04.05.2012 через Замену
	текстЗамены = ?(договоры = ПустойСписок, ?(Контрагенты = ПустойСписок,"","ДоговорКонтрагента.Владелец В (&Контрагенты)"),	"ДоговорКонтрагента В (&договоры)") ;
	Запрос.текст = стрЗаменить(Запрос.текст, "//ОтборДогКонтрИ", ?(текстЗамены="","", "И "+текстЗамены) );
	Запрос.текст = стрЗаменить(Запрос.текст, "//ОтборДогКонтр1", текстЗамены);
	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьМенеджер = Макет.ПолучитьОбласть("Менеджер");
	ОбластьКонтрагент = Макет.ПолучитьОбласть("Контрагент");
	ОбластьКонтрагентСНД = Макет.ПолучитьОбласть("КонтрагентСНераспределенкой");
	ОбластьДоговор = Макет.ПолучитьОбласть("ДоговорКонтрагента");
    ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	
	ТабДок.Очистить();
	ОбластьЗаголовок.Параметры.Период12 = "За период с: "+формат(НачПериода,"ДЛФ=D")+" по "+формат(КонПериода,"ДЛФ=D");
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.ФиксацияСверху = ТабДок.ВысотаТаблицы;
	
	ВыборкаИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаИтог.Следующий() Тогда 
		
		ОбластьИтог.Параметры.Заполнить(ВыборкаИтог);
		
	КонецЕсли;
	
	
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаМенеджер = ВыборкаИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаМенеджер.Следующий() Цикл
		ОбластьМенеджер.Параметры.Заполнить(ВыборкаМенеджер);
		ТабДок.Вывести(ОбластьМенеджер, ВыборкаМенеджер.Уровень());

		ВыборкаКонтрагент = ВыборкаМенеджер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			ОбластьКонтрагент.Параметры.Заполнить(ВыборкаКонтрагент);
			ОбластьКонтрагентСНД.Параметры.Заполнить(ВыборкаКонтрагент);
			
			Если ВыборкаКонтрагент.НераспределенныеДеньги <> 0 Тогда
			
				ТабДок.Вывести(ОбластьКонтрагентСНД, ВыборкаКонтрагент.Уровень());
				
			Иначе
				
				ТабДок.Вывести(ОбластьКонтрагент, ВыборкаКонтрагент.Уровень());
			
			КонецЕсли; 
			
			
			ВыборкаДоговор = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаДоговор.Следующий() Цикл
				ОбластьДоговор.Параметры.Заполнить(ВыборкаДоговор);
				ТабДок.Вывести(ОбластьДоговор, ВыборкаДоговор.Уровень(),,Ложь);
			КонецЦикла;
			
			
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);

	ТабДок.Вывести(ОбластьИтог);
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	НачПериода = НачалоМесяца(ТекущаяДата());
	КонПериода = КонецДня(ТекущаяДата());
КонецПроцедуры
