
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	
	
	Если ВыбранныеДоки.Количество()>0 тогда
		тзДанныеПоДопРасходам=ПолучитьДанныеПоДопРасходам();
		Эксель = Новый COMОбъект("Excel.Application");
		//ПутьКФайлу="\\Novikova\Таблица11\таблица 11.xls";
		ПутьКФайлу="c:\Таблица11\таблица 11.xls";

		Файл = Новый Файл(ПутьКФайлу);
		Если Не Файл.Существует() Тогда
			Сообщить("Файл не существует!");
			Возврат;
		КонецЕсли; 
		Книга   = Эксель.Workbooks.Open(ПутьКФайлу);
		КоличествоЛистов = Книга.Sheets.Count;
		НомерЛиста=1;
		СписокЛистов=новый СписокЗначений;
		Пока НомерЛиста <= КоличествоЛистов Цикл
			СписокЛистов.Добавить(Книга.Sheets(НомерЛиста).Name);
			НомерЛиста=НомерЛиста+1;
		КонецЦикла;
		ЛистСезон=СписокЛистов.ВыбратьЭлемент("Укажите сезон");
		Лист                = Книга.Worksheets(ЛистСезон.Значение);
		
		КолонкаКонтейнер="I";
		КолонкаДляКурсаВПоступление="CY";
		КолонкаДляГТДВПоступление="CZ";
		КолонкаФлагГотовности="DE";
		
		Для каждого стрДоки из ВыбранныеДоки Цикл
			Если стрДоки.флажок тогда
				Допрасходы=0;
				КонтейнерИзДока=СокрЛП(стрДоки.НомерКонтейнера);
				НСтр = Лист.Columns(КолонкаКонтейнер).Find(КонтейнерИзДока);
				Если НСтр<>Неопределено тогда
					СтрокаExcel=НСтр.Row;
					Если нрег(СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаФлагГотовности).Value))="ready" тогда
						НачатьТранзакцию();
						Попытка
							Для каждого стр из тзДанныеПоДопРасходам цикл
								Допрасходы=Допрасходы+СформироватьДопРасход(стр,стрДоки.ПоступлениеТоваровУслуг,СтрокаExcel,Лист);
							КонецЦикла;
							ЗафиксироватьТранзакцию();
						Исключение
							Допрасходы=0;
							ОтменитьТранзакцию();
							Сообщить(ОписаниеОшибки());
						КонецПопытки;
					КонецЕсли;
					Если Допрасходы>0 тогда
						ПоступлениеОб=стрДоки.ПоступлениеТоваровУслуг.ПолучитьОбъект();
						//
						//Ставим курс из файла
						СтрКурсИзФайла=СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаДляКурсаВПоступление).Value);
	                    КурсИзФайла=?(СтрКурсИзФайла="",0,Число(СтрКурсИзФайла));
						Если КурсИзФайла>0 тогда
							ПоступлениеОб.КурсВзаиморасчетов=КурсИзФайла;
						КонецЕсли;	
						//
						НомерГТД=СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаДляГТДВПоступление).Value);
						Если НомерГТД<>"" тогда
							УстановитьНомерГТДВПоступление(ПоступлениеОб,НомерГТД);
						КонецЕсли;
							
						ПоступлениеОб.НомерВходящегоДокумента="себ сформир";
						ПоступлениеОб.Записать(РежимЗаписиДокумента.Проведение);
					КонецЕсли;
				Иначе
					Сообщить("Контейнер: "+КонтейнерИзДока+" в таблице не найден.");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Эксель.DisplayAlerts = 0; 
		Эксель.Quit();
	КонецЕсли;
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры


Функция ПолучитьДанныеПоДопРасходам()
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ДанныеПоДопРасходам.Контрагент КАК Контрагент,
	             |	ДанныеПоДопРасходам.Услуга КАК Услуга,
	             |	ДанныеПоДопРасходам.Договор КАК Договор,
	             |	ДанныеПоДопРасходам.КолонкаВФайлеСумма,
	             |	ДанныеПоДопРасходам.КолонкаВФайлеКурс,
				 |	ДанныеПоДопРасходам.КолонкаВФайлеНомерСчета,
                 |	ДанныеПоДопРасходам.КолонкаВФайлеДатаСчета,
	             |	ДанныеПоДопРасходам.Договор.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
				 |	ДанныеПоДопРасходам.СтавкаНДС КАК СтавкаНДС
	             |ИЗ
	             |	РегистрСведений.ДанныеПоДопРасходам КАК ДанныеПоДопРасходам
	             |ГДЕ
	             |	ДанныеПоДопРасходам.КолонкаВФайлеСумма <> """"
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Контрагент,
	             |	Договор,
	             |	Услуга";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция СформироватьДопРасход(стр,ПоступлениеСсылка,СтрокаExcel,Лист)
	//Сообщить(ПоступлениеСсылка);
	СтрСуммаДопРасходов=СокрЛП(Лист.Cells(СтрокаExcel,  стр.КолонкаВФайлеСумма).Value);
	СуммаДопРасхода=?(СтрСуммаДопРасходов="",0,Число(СтрСуммаДопРасходов));
	Если СуммаДопРасхода>0 тогда
		КолонкаКурс=СокрЛП(стр.КолонкаВФайлеКурс);
		Если КолонкаКурс<>"" тогда
			курс=Число(СокрЛП(Лист.Cells(СтрокаExcel,  стр.КолонкаВФайлеКурс).Value));
		Иначе
			Курс=1;
		КонецЕсли;
		Если СокрЛП(стр.КолонкаВФайлеНомерСчета) <> "" Тогда
			СтрНомерСчета = СокрЛП(Лист.Cells(СтрокаExcel,  стр.КолонкаВФайлеНомерСчета).Value);
			СтрНомерСчета = СтрЗаменить(СтрНомерСчета,Символы.НПП,"");
		Иначе
			СтрНомерСчета = "";
		КонецЕсли;
		Если СокрЛП(стр.КолонкаВФайлеДатаСчета) <> "" Тогда
			СтрДатаСчета = СокрЛП(Лист.Cells(СтрокаExcel,  стр.КолонкаВФайлеДатаСчета).Value);
		Иначе
			СтрДатаСчета = "";
		КонецЕсли;
		Если ЗначениеЗаполнено(стр.СтавкаНДС) Тогда
			ПроцентНДС = ПолучитьСтавкуНДС(стр.СтавкаНДС);
		Иначе
			ПроцентНДС = 0;
		КонецЕсли;	
		
		ДокДопРасходов = Документы.ПоступлениеДопРасходов.СоздатьДокумент();
		ЗаполнитьШапкуДокументаПоОснованию(ДокДопРасходов, ПоступлениеСсылка);
		ДокДопРасходов.ЗаполнитьТоварыПоПоступлениюТоваров(ПоступлениеСсылка, ДокДопРасходов.Товары);
		ДокДопРасходов.Дата = ПоступлениеСсылка.Дата + 1;
		ДокДопРасходов.СпособРаспределения = Перечисления.СпособыРаспределенияДопРасходов.ПоСумме;
		ДокДопРасходов.Контрагент = стр.Контрагент;
		ДокДопРасходов.ДоговорКонтрагента = стр.Договор;
		ДокДопРасходов.Услуга = стр.Услуга;
		ДокДопРасходов.ВидОперации = Перечисления.ВидыОперацийПоступлениеДопРасходов.УслугаСтороннейОрганизации;
		Валюта=стр.Договор.ВалютаВзаиморасчетов;
		ДокДопРасходов.Сумма = СуммаДопРасхода*Курс;
		ДокДопРасходов.КурсВзаиморасчетов=Курс;
		ДокДопрасходов.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
		ДокДопрасходов.ОтражатьВБухгалтерскомУчете = Ложь;
		ДокДопрасходов.ОтражатьВНалоговомУчете = Ложь;
		ДокДопРасходов.НомерСчета = СтрНомерСчета;
		ДокДопРасходов.ДатаСчета = СтрДатаСчета;
		//расчет суммы НДС в зависимости от ставки
		Если ПроцентНДС <> 0 Тогда
			ДокДопРасходов.УчитыватьНДС = Истина;
			ДокДопРасходов.СуммаВключаетНДС = Истина;
			ДокДопРасходов.СтавкаНДС = стр.СтавкаНДС;
			ДокДопРасходов.СуммаНДС = ДокДопРасходов.Сумма/(100+ПроцентНДС)*ПроцентНДС;
		КонецЕсли;	
		ДокДопРасходов.Записать(РежимЗаписиДокумента.Проведение);
		Сообщить("Для "+ПоступлениеСсылка+" сформировано "+ДокДопРасходов+" сумма "+ДокДопРасходов.Сумма);
		Возврат 1;
		//Сообщить("Контрагент: "+стр.Контрагент+" Договор: "+стр.Договор+" Услуга: "+стр.Услуга+" сумма: "+СуммаДопРасхода+" "+стр.ВалютаВзаиморасчетов+" курс: "+Курс);
	КонецЕсли;
	Возврат 0;
конецФункции

Процедура ОсновныеДействияФормыДействие(Кнопка)
	СписокКонтрагентов=Новый СписокЗначений;
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("91735")); //FREEMAN RACING WHEELS INC
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93695")); //NINGBO PARTNER INTERNATIONAL TRADE CO., LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("91535")); //JIANGSU SAINTY MACHINERY I&E CORP. LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000715")); //Zhejiang Jingu Company Ltd
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93777")); //Steel Strips Wheels Limited
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93694")); //Zhangzhou Shuangsheng WHeels Co., ltd
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("91834")); //NINGBO LONGTIME MACHINE CO.,LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001626")); //XIAMEN YONGXINGXUN INDUSTRY AND TRADE CO., LTD	
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("92540")); //FUJIAN SHUANGSHENG IM &EX CO., LTD	
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94302")); //ZHANGZHOU LIYANG MACHINE CO., LTD	
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94447")); //XIAMEN FUYISHENG MACHINE CO., LTD,
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94442")); //JIANGSU SIBORUI IMPORT AND EXPORT CO., LTD
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001797")); //Tyre Technology
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("93512")); //Nexen Tire Corporation
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П005407")); //Sailun JinyuGroup Co.,Ltd.
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94075")); //Inci Aku Sanayi ve Ticaret A.S.
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94632")); //Xiamen Jiashunlai Trading Co..Ltd
	СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П005407")); //Sailun JinyuGroup Co.,Ltd.
    СписокКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П012694")); //SHANDONG ZHONGYI RUBBER CO. LTD
	//отбираем документы без сформированных доп.расходов
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ПоступлениеТоваровУслуг.Ссылка КАК ПоступлениеТоваровУслуг,
	             |	ПоступлениеТоваровУслуг.Дата,
	             |	ПоступлениеТоваровУслуг.Номер,
	             |	ПоступлениеТоваровУслуг.Контрагент,
	             |	ПоступлениеТоваровУслуг.Сделка.НомерКонтейнера КАК НомерКонтейнера,
	             |	ПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	             |	ПоступлениеТоваровУслуг.СуммаДокумента,
	             |	ИСТИНА КАК флажок
	             |ИЗ
	             |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	             |ГДЕ
	             |	ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаН И &ДатаК
	             |	И ПоступлениеТоваровУслуг.Проведен = ИСТИНА
	             |	И НЕ ПоступлениеТоваровУслуг.НомерВходящегоДокумента ПОДОБНО ""%себ сформир%""
	             |	И НЕ ПоступлениеТоваровУслуг.НомерВходящегоДокумента ПОДОБНО ""%cеб сформир%""
	             |	И НЕ ПоступлениеТоваровУслуг.НомерВходящегоДокумента ПОДОБНО ""%себ. сформир%""
	             |	И НЕ ПоступлениеТоваровУслуг.НомерВходящегоДокумента ПОДОБНО ""%cеб. сформир%""
	             |	И НЕ ПоступлениеТоваровУслуг.НомерВходящегоДокумента ПОДОБНО ""%себ.сформир%""
	             |	И НЕ ПоступлениеТоваровУслуг.НомерВходящегоДокумента ПОДОБНО ""%себест.сформир%""
	             |	И НЕ ПоступлениеТоваровУслуг.Сделка.НомерКонтейнера ЕСТЬ NULL 
	             |	И НЕ ПоступлениеТоваровУслуг.Сделка.НомерКонтейнера = """"
	             |	И ПоступлениеТоваровУслуг.Контрагент В(&СписокКонтрагентов)
	             |	И НЕ ПоступлениеТоваровУслуг.Номер ПОДОБНО ""%WG%""";
	Запрос.УстановитьПараметр("ДатаН",НачПериода);
	Запрос.УстановитьПараметр("ДатаК",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("СписокКонтрагентов",СписокКонтрагентов);
	Рез=Запрос.Выполнить().Выгрузить();
	ВыбранныеДоки=рез;
	
	ЭлементыФормы.ВыбранныеДоки.СоздатьКолонки();
	ЭлементыФормы.ВыбранныеДоки.Колонки.Добавить("фл","фл");
	Колонки = ЭлементыФормы.ВыбранныеДоки.Колонки;
	Индекс=Колонки.Индекс(Колонки["фл"]);
	ЭлементыФормы.ВыбранныеДоки.Колонки.Сдвинуть(Колонки["фл"],-Индекс);
	ЭлементыФормы.ВыбранныеДоки.Колонки.фл.РежимРедактирования=РежимРедактированияКолонки.Непосредственно;
	ЭлементыФормы.ВыбранныеДоки.Колонки.фл.ДанныеФлажка="флажок";
	ЭлементыФормы.ВыбранныеДоки.Колонки.флажок.видимость=ложь;
	
КонецПроцедуры

Процедура УстановитьНомерГТДВПоступление(ПоступлениеОбъект,НомерГТД)
	СпрНомерГТД=Справочники.НомераГТД.НайтиПоКоду(НомерГТД);
	Если СпрНомерГТД=неопределено тогда
		СпрНомерГТДОб=Справочники.НомераГТД.СоздатьЭлемент();
		СпрНомерГТДОб.Код=НомерГТД;
		СпрНомерГТДОб.Записать();
		НомерГТД=СпрНомерГТДОб.Ссылка;
	КонецЕсли;
	ПоступлениеОбъект.НомерСБИС=Строка(НомерГТД);
КонецПроцедуры


Процедура КоманднаяПанель2кнУбратьОтметку(Кнопка)
	Для каждого стр из ВыбранныеДоки цикл
		стр.Флажок = ложь;
	КонецЦикла;
КонецПроцедуры


Процедура КоманднаяПанель2кнПроставитьФлажки(Кнопка)
	Для каждого стр из ВыбранныеДоки цикл
		стр.Флажок = истина;
	КонецЦикла;
КонецПроцедуры

