перем ИмяФайланастроек;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	НачДата = НачалоГода( ТекущаяДата() );
	КонДата = КонецМесяца( ТекущаяДата() );
	
	ОтчетИнициализация();

КонецПроцедуры

Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОтчетыАнализПокупателейПоКатегориямОтчет_cb6a99b0-1169-4640-86d5-708e4ead72bb", ПостроительОтчетаОтчет.ПолучитьНастройки());
  //  ЗначениеВФайл(ИмяФайланастроек, ПостроительОтчетаОтчет.ПолучитьНастройки());
КонецПроцедуры


Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыОтчетНастройка(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Форма = ВнешнийОтчетОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Форма.ОткрытьМодально() = Истина Тогда
		ОтчетВывести();
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ОтчетВывести();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ОтчетВывести()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();

	ПостроительОтчетаОтчет.Параметры.Вставить("НачДата", КонецМесяца(НачДата-1) );
//	ПостроительОтчетаОтчет.Параметры.Вставить("КонДата", КонДата);
 	ПостроительОтчетаОтчет.Параметры.Вставить("Продажа", "Продажа%");
    ПостроительОтчетаОтчет.Параметры.Вставить("Прочее",  перечисления.ВидыТоваров.Прочее);
	ПостроительОтчетаОтчет.Параметры.Вставить("АвтоЗапчасти",  перечисления.ВидыТоваров.АвтоЗапчасти);
	ПостроительОтчетаОтчет.Выполнить();
	
	ПостроительОтчетаОтчет.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Классика);
	
	ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);

	шир = ЭлементыФормы.ПолеТабличногоДокумента.ШиринаТаблицы;
	выс = ЭлементыФормы.ПолеТабличногоДокумента.ВысотаТаблицы;
	выс1 = выс;
	ЭлементыФормы.ПолеТабличногоДокумента.Защита = ложь;
//-----------в цикле по месяцам	--- получаем результат и пишем в конец ПолеТабличногоДокумента----------------------
	ЭлементыФормы.ПолеТабличногоДокумента.Область(4,шир , 4, шир ).Текст = "на начало";
	ЭлементыФормы.ПолеТабличногоДокумента.Область(4, шир, выс, шир).ШиринаКолонки = 10;
	
	КолМесяцев = Месяц(КонДата) - Месяц(НачДата) + (Год(КонДата) - Год(НачДата))*12;
	сплошная = ЭлементыФормы.ПолеТабличногоДокумента.Область(4,шир,4,шир).ГраницаСверху;
	
      k=0; d=0;// число строк смещения!
	для месяц = 0 по КолМесяцев цикл
		конМесяца1 = ДобавитьМесяц( КонецМесяца(НачДата), месяц) ;
		ОбработкаПрерыванияПользователя();  
	состояние("Идет расчет за "+формат(конМесяца1, "ДФ='MMMM yyyy'")+"...")	;
	
	ПостроительОтчетаОтчет.Параметры.Вставить("НачДата", конМесяца1);
	ПостроительОтчетаОтчет.Выполнить();
	
	ПолеТабличногоДокумента1 = новый ТабличныйДокумент;
	ПостроительОтчетаОтчет.Вывести(ПолеТабличногоДокумента1);
	
    выс1 = ПолеТабличногоДокумента1.ВысотаТаблицы;//+++ 05.06.2015
	
	ЭлементыФормы.ПолеТабличногоДокумента.Область(4,шир + 2*месяц + 1, 4, шир + 2*месяц + 1).Текст = формат(конМесяца1, "ДФ='MMMM yyyy'");
	ЭлементыФормы.ПолеТабличногоДокумента.Область(4, шир + 2*месяц + 1, 4, шир + 2*месяц + 1).Шрифт = //оформление из столбца1
		ЭлементыФормы.ПолеТабличногоДокумента.Область(4, шир, 4, шир).Шрифт;
		
  ЭлементыФормы.ПолеТабличногоДокумента.Область(4, шир + 2*месяц + 2, 4, шир+ 2*месяц + 2).ГраницаСправа = сплошная;
      k=0; d=0;// число строк смещения!
  для i=5 по выс1 + d +100 цикл
	  
	  Если ПолеТабличногоДокумента1.Область(i-d, шир, i-d, шир).Текст="" тогда 
		  прервать;
	  КонецЕсли;	  
	  
	предСтолб = ?(месяц=0, шир, шир + 2*(месяц-1) + 1);  
	
	ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц + 1, i, шир + 2*месяц + 1).Текст = 
		ПолеТабличногоДокумента1.Область(i-d, шир, i-d, шир).Текст; //повторяем d раз
	
  //вставка пустой строки
  ч1=-1;  ч2=-1;
    попытка 
    	  ч1 = число( ЭлементыФормы.ПолеТабличногоДокумента.Область(i-k, предСтолб, i-k, предСтолб).Текст);
	исключение	
	  ч1=-1;
	КонецПопытки;
    попытка 
    	  ч2 = число( ПолеТабличногоДокумента1.Область(i-d, шир, i-d, шир).Текст);
    исключение	
	  ч2=-1;
	КонецПопытки;
    
	если ч1*ч2<0 тогда	
		
	
	
	если ч1>0 тогда k=k+1; //d=?(d>0,d-1,0); 
	 ЭлементыФормы.ПолеТабличногоДокумента.ВставитьОбласть(ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+формат(i,"ЧГ=0")),
				ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+формат(i,"ЧГ=0")),
			ТипСмещенияТабличногоДокумента.ПоВертикали);
			
	ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц - 1, i, шир + 2*месяц - 1).Текст = строка(k);		
//	ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц , i, шир + 2*месяц ).Текст = строка(k);		
	//ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+формат(i,"ЧГ=0")).Сгруппировать("Детали", РасположениеЗаголовкаГруппировкиТабличногоДокумента.Начало );
	иначе  d=d+1; //k=?(k>0,k-1,0);
	ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц + 1, i, шир + 2*месяц + 1).Текст = строка(d);		
//	ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц , i, шир + 2*месяц ).Текст = строка(d);		
	КонецЕсли;
	
	 ////-------------------------чистка старого------------------------------	
		для kk=1 по шир + 2*месяц цикл 		//по 2*(месяц-1)+2			
			ЭлементыФормы.ПолеТабличногоДокумента.Область(i, kk , i, kk ).Текст = "";				
		КонецЦикла;


	Иначе
		k=0; //d=0;
		ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц + 1, i, шир + 2*месяц + 1).Шрифт = //оформление из столбца1
		ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц - 1, i, шир + 2*месяц - 1).Шрифт;
	КонецЕсли;
		
		стр1 = ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир +2*месяц + 1, i, шир + 2*месяц + 1).Текст;
		стр0 = ЭлементыФормы.ПолеТабличногоДокумента.Область(i, предСтолб, i, предСтолб).Текст;
		стр1 = стрЗаменить(стр1, Символы.НПП,"");		
		стр0 = стрЗаменить(стр0,Символы.НПП,"");
		
		Если стр1="" тогда стр1="0" КонецЕсли;
		Если стр0="" тогда стр0="0" КонецЕсли;
		попытка разность  = число(стр1) -  число(стр0);
		исключение
				
			Если стр1 = стр0 тогда  		разность = "   ="; 
				если Флажок1 тогда
				ЭлементыФормы.ПолеТабличногоДокумента.УдалитьОбласть(  ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+формат(i,"ЧГ=0")),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					 i=i-1; d=d-1;
					продолжить;
				КонецЕсли;	
			ИначеЕсли стр1 < стр0 тогда 	разность = "  +++";	 k=k+1; 
				ЭлементыФормы.ПолеТабличногоДокумента.ВставитьОбласть(ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+формат(i,"ЧГ=0")),
				ЭлементыФормы.ПолеТабличногоДокумента.Область("R"+формат(i,"ЧГ=0")),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
				
				ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц , i, шир + 2*месяц ).Текст = "";
			 ////-------------------------чистка старого------------------------------	
				для kk=1 по шир + 2*месяц цикл 		//по 2*(месяц-1)+2			
					ЭлементыФормы.ПолеТабличногоДокумента.Область(i, kk , i, kk ).Текст = "";				
				КонецЦикла;
	
			ИначеЕсли стр1 > стр0 тогда     разность = "  ---";	 d=d+1; ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц +1, i, шир + 2*месяц + 1).Текст = "";
			Иначе разность = "";
			КонецЕсли;
		
		КонецПопытки;	
			ЭлементыФормы.ПолеТабличногоДокумента.Область(i, шир + 2*месяц + 2, i, шир + 2*месяц + 2).Текст = 	строка(разность);
				
	КонецЦикла;	
КонецЦикла;	

выс1 = i+1;
dd = 3;
ЭлементыФормы.ПолеТабличногоДокумента.Область(4,шир + 1, выс1-dd, шир+2*КолМесяцев+2).ШиринаКолонки = 7;

ЭлементыФормы.ПолеТабличногоДокумента.Область(4,шир + 1, выс1-dd, шир+2*КолМесяцев+2).ГраницаСверху = сплошная;
ЭлементыФормы.ПолеТабличногоДокумента.Область(4,шир + 1, выс1-dd, шир+2*КолМесяцев+2).ГраницаСнизу  = сплошная;
ЭлементыФормы.ПолеТабличногоДокумента.Область(5,шир + 1, выс1-dd, шир+2*КолМесяцев+2).ГраницаСправа = сплошная;
ЭлементыФормы.ПолеТабличногоДокумента.Область(5,шир + 1, выс1-dd, шир+2*КолМесяцев+2).ГраницаСлева  = сплошная;

если dd=3 тогда
ЭлементыФормы.ПолеТабличногоДокумента.Область(выс1-2, 1, выс1, шир+2*КолМесяцев+2).ЦветТекста  = webЦвета.Белый;
нетГраницы = ЭлементыФормы.ПолеТабличногоДокумента.Область(выс1, 1, выс1, 1).ГраницаСнизу;
ЭлементыФормы.ПолеТабличногоДокумента.Область(выс1-2, 1, выс1, шир+2*КолМесяцев+2).ГраницаСверху  = нетГраницы;
ЭлементыФормы.ПолеТабличногоДокумента.Область(выс1-2, 1, выс1, шир+2*КолМесяцев+2).ГраницаСнизу  = нетГраницы;
ЭлементыФормы.ПолеТабличногоДокумента.Область(выс1-2, 1, выс1, шир+2*КолМесяцев+2).ГраницаСправа  = нетГраницы;
ЭлементыФормы.ПолеТабличногоДокумента.Область(выс1-2, 1, выс1, шир+2*КолМесяцев+2).ГраницаСлева  = нетГраницы;
КонецЕсли;

//ЭлементыФормы.ПолеТабличногоДокумента.Защита = Истина;
ЭлементыФормы.ПолеТабличногоДокумента.Показать();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ
КонецПроцедуры

Процедура ОтчетИнициализация()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ПостроительОтчетаОтчет.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ВидТовара КАК ВидТовара,
	|	ВложенныйЗапрос.ПризнакПокупателя КАК ПризнакПокупателя,
	|	ВложенныйЗапрос.Покупатель КАК КоличествоПокупателей,
	|	ВложенныйЗапрос.Покупатель КАК Покупатель,
	|	ВложенныйЗапрос.КолДокЗаПериод КАК КолДокЗаПериод
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(НачСостояние.Ссылка, ВложенныйЗапрос.Покупатель) КАК Покупатель,
	|		ЕСТЬNULL(НачСостояние.КатегорияВидТовара, ВложенныйЗапрос.НоменклатураВидТовара) КАК ВидТовара,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВложенныйЗапрос.КолДокДоНачала, 0) > 1
	|				ТОГДА ""2.Повторный""
	|			КОГДА ЕСТЬNULL(ВложенныйЗапрос.КолДокДоНачала, 0) = 1
	|				ТОГДА ""1.Разовый""
	|			КОГДА ЕСТЬNULL(ВложенныйЗапрос.КолДокДоНачала, 0) = 0
	|				ТОГДА ""0.Потенциальный""
	|		КОНЕЦ КАК ПризнакПокупателя,
	|		ВложенныйЗапрос.КолДокДоНачала КАК КолДокЗаПериод
	|	ИЗ
	|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Контрагенты.Ссылка КАК Ссылка,
	|			ВЫБОР
	|				КОГДА КатегорииОбъектов.Категория.Наименование ПОДОБНО ""%Шины""
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	|				КОГДА КатегорииОбъектов.Категория.Наименование ПОДОБНО ""%Диски""
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|				КОГДА КатегорииОбъектов.Категория.Наименование ПОДОБНО ""%АКБ""
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.АКБ)
	|				КОГДА КатегорииОбъектов.Категория.Наименование ПОДОБНО ""%Аксессуары""
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Аксессуары)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.ПустаяСсылка)
	|			КОНЕЦ КАК КатегорияВидТовара
	|		ИЗ
	|			Справочник.Контрагенты КАК Контрагенты
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК КатегорииОбъектов
	|				ПО Контрагенты.Ссылка = КатегорииОбъектов.Объект
	|		ГДЕ
	|			Контрагенты.ДатаСоздания < &НачДата
	|			И Контрагенты.Покупатель
	|			И НЕ Контрагенты.ЭтоГруппа
	|			И НЕ Контрагенты.ПометкаУдаления) КАК НачСостояние
	|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Продажи.Регистратор) КАК КолДокДоНачала,
	|				Продажи.ДоговорКонтрагента.Владелец КАК Покупатель,
	|				Продажи.Номенклатура.ВидТовара КАК НоменклатураВидТовара
	|			ИЗ
	|				РегистрНакопления.Продажи КАК Продажи
	|			ГДЕ
	|				Продажи.Период < &НачДата
	|				И Продажи.Количество > 0
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Продажи.ДоговорКонтрагента.Владелец,
	|				Продажи.Номенклатура.ВидТовара) КАК ВложенныйЗапрос
	|			ПО НачСостояние.Ссылка = ВложенныйЗапрос.Покупатель
	|				И НачСостояние.КатегорияВидТовара = ВложенныйЗапрос.НоменклатураВидТовара) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ВидТовара <> &Прочее
	|	И ВложенныйЗапрос.ВидТовара <> &АвтоЗапчасти
	|
	|УПОРЯДОЧИТЬ ПО
	|	Покупатель,
	|	ВидТовара,
	|	ПризнакПокупателя
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоПокупателей),
	|	СУММА(КолДокЗаПериод)
	|ПО
	|	ОБЩИЕ,
	|	ВидТовара,
	|	ПризнакПокупателя
	|АВТОУПОРЯДОЧИВАНИЕ";
		
	
	
	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет";
	
	Настройка = Неопределено;	
	
	//Настройка = ВосстановитьЗначение("НастройкаВнешниеОтчетыАнализПокупателейПоКатегориямОтчет_cb6a99b0-1169-4640-86d5-708e4ead72bb");
	//Если Настройка <> Неопределено Тогда
	//	ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	//КонецЕсли;

	Если Настройка = Неопределено Тогда
		Настройка  = ЗначениеИзФайла(ИмяФайланастроек);
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
//	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

Процедура ДействияФормыОбновить(Кнопка)
	ЗаполнитьДатуСозданияПоВсемПокупателямИзUID();
КонецПроцедуры

Процедура ЗаполнитьДатуСозданияПоВсемПокупателямИзUID()
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Контрагенты.Ссылка
		               |ИЗ
		               |	Справочник.Контрагенты КАК Контрагенты
		               |ГДЕ
		               |	Контрагенты.Покупатель
		               |	И Контрагенты.ДатаСоздания = &ДатаСоздания
					   |";
		
		Запрос.УстановитьПараметр("ДатаСоздания", '00010101' );
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Если Выборка.Количество()=0 тогда
			Предупреждение("У всех покупателей заполнено поле ""Дата создания"".
							|Перезаполнение даты создания - не требуется.",10);
			возврат;
		КонецЕсли;
		
		Если Вопрос("Найдено "+строка(Выборка.Количество())+" контрагентов.
					|Заполнить дату создания?",РежимДиалогаВопрос.ДаНет,10 )=КодВозвратаДиалога.Нет тогда
			возврат;
		КонецЕсли;	
		i=0;
		сообщить("--------------"+строка(ТекущаяДата())+"----------------------");
		
		Пока Выборка.Следующий() Цикл
			 ОбработкаПрерыванияПользователя();
			 i=i+1;
			 ПолеВвода1 = Выборка.ссылка;
			 УИ = ПолеВвода1.УникальныйИдентификатор();
			 рез = ПолучитьМоментСозданияУникальногоИдентификатора(УИ);
			 ПолеВвода2  = Дата(рез);
			 попытка
				 контр =  Выборка.ссылка.ПолучитьОбъект();
				 контр.ДатаСоздания = ПолеВвода2;
				 сообщить(строка(i)+") "+ строка(Выборка.ссылка) +"  Дата создания: "+строка(ПолеВвода2) );
				 контр.ОбменДанными.Загрузка = истина;
				 контр.Записать();
				 контр.ОбменДанными.Загрузка = ложь;
			 исключение
				сообщить(строка(i)+") "+ строка(Выборка.ссылка) +"  Дата создания: "+строка(ПолеВвода2)+" Ошибка: "+ОписаниеОшибки(), СтатусСообщения.Важное );
			 КонецПопытки;	
		 КонецЦикла;
		 сообщить("--------------"+строка(ТекущаяДата())+"----------------------");
		

КонецПроцедуры

 
//-------------вспомогательные функции-----------------------
Функция ByteToDec(знч16) 
	Если знч16 = "0" Тогда
		Возврат 0;
	ИначеЕсли знч16 = "1" Тогда
		Возврат 1;
	ИначеЕсли знч16 = "2" Тогда
		Возврат 2;
	ИначеЕсли знч16 = "3" Тогда
		Возврат 3;
	ИначеЕсли знч16 = "4" Тогда
		Возврат 4;
	ИначеЕсли знч16 = "5" Тогда
		Возврат 5;
	ИначеЕсли знч16 = "6" Тогда
		Возврат 6;
	ИначеЕсли знч16 = "7" Тогда
		Возврат 7;
	ИначеЕсли знч16 = "8" Тогда
		Возврат 8;
	ИначеЕсли знч16 = "9" Тогда
		Возврат 9;
	ИначеЕсли знч16 = "A" Тогда
		Возврат 10;
	ИначеЕсли знч16 = "B" Тогда
		Возврат 11;
	ИначеЕсли знч16 = "C" Тогда
		Возврат 12;
	ИначеЕсли знч16 = "D" Тогда
		Возврат 13;
	ИначеЕсли знч16 = "E" Тогда
		Возврат 14;
	ИначеЕсли знч16 = "F" Тогда
		Возврат 15;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Функция HexToDec(знч16) 
	знч10 = 0;
	длн = СтрДлина(знч16);
	Для й = 1 По СтрДлина(знч16) Цикл
		знч10 = знч10 + Pow(16, длн - й) * ByteToDec(Сред(знч16, й, 1));
	КонецЦикла;
	Возврат знч10;
КонецФункции

//------------основная функция расчета даты по UID--------------------
Функция ПолучитьМоментСозданияУникальногоИдентификатора(УИ)
	ЧасПояс = +3; // c 2014г.
	Если стрДлина(УИ)<18 тогда                   //5b34fad2-cf03-11e4-adf5-c488bb62e7c5
		сообщить("Неверный формат Уникального идентификатора! UID должен иметь длину 36 символов (не менее 18), например: 5b34fad2-cf03-11e4-adf5-c488bb62e7c5", СтатусСообщения.Внимание);
		возврат '00010101';
	КонецЕсли;
    УИ = СокрЛП(ВРег(СтрЗаменить("" + УИ, "-", "")));
	
	Если Не Сред(УИ, 13, 1) = "1" Тогда
		Возврат '00010101';
	КонецЕсли;
	интервал16 = ВРег(Сред(УИ, 14, 3) + Сред(УИ, 9, 4) + Сред(УИ, 1, 8));
	интервал10 = HexToDec(интервал16);
	интервалСек = интервал10 / 10000000;
	
	//ЭлементыФормы.Надпись3.Заголовок = "Внутри секунды: 0,"+формат(  1000000*(интервалСек - цел(интервалСек)),"ЧЦ=7; ЧДЦ=1; ЧВН=; ЧГ=3,0" )+" Сек." ;
	
	Результат = Дата(1582, 10, 15) + интервалСек + ЧасПояс*3600;
	
	Возврат Результат ;
	
КонецФункции


ИмяФайланастроек =  "\\Terminal\обмен\Огородников С\настройкиОтчета_350.txt";