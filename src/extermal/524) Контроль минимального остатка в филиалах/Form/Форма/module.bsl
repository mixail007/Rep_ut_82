Перем СтруктураКолонокРезультата;
Перем СписокКонтрагентов;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	ТЗФилиал = Новый ТаблицаЗначений;
	ТЗФилиал.Колонки.Добавить("Номенклатура");
	ТЗФилиал.Колонки.Добавить("Количество");


	Для каждого СтрокаДереваНоменклатура Из Результат.Строки Цикл
		ТЗФилиал.Очистить();
		Для каждого ДетальныеСтроки Из СтрокаДереваНоменклатура.Строки Цикл
			Если  ДетальныеСтроки.Пометка = Истина и ДетальныеСтроки.Заказываем > 0 Тогда
				НовСтрока = ТЗФилиал.Добавить();
				НовСтрока.Количество = ДетальныеСтроки.Заказываем;
				НовСтрока.Номенклатура = ДетальныеСтроки.Номенклатура;
			КонецЕсли;
		КонецЦикла;
		Если ТЗФилиал.Количество()> 0 Тогда
			СоздатьЗаказ(СтрокаДереваНоменклатура.Подразделение,ВидТовара,ТЗФилиал)
		КонецЕсли;
	КонецЦикла;
	
   
КонецПроцедуры

Процедура СоздатьЗаказ(ПодразделениеВр,ВидТовара,ТЗТЧ)
	Заказ = Документы.ЗаказПокупателя.СоздатьДокумент();
	Заказ.Дата = ТекущаяДата();
	Заказ.ДатаОтгрузки = ТекущаяДата();
	Заказ.Организация = Справочники.Организации.НайтиПоКоду("00001");
	
	Если ВидТовара = Перечисления.ВидыТоваров.Аксессуары ТОгда
		Заказ.Контрагент = Справочники.Контрагенты.НайтиПоКоду("П001120");
		Заказ.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоКоду("b2823");
		Заказ.ТипЦен = Заказ.ДоговорКонтрагента.ТипЦен;

	Иначе
		//
	КонецЕсли;	
	Заказ.ОтгрузкаСПодразделенияСклада = Истина;	
	Заказ.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
	Заказ.КурсВзаиморасчетов = 1;
	Заказ.КратностьВзаиморасчетов = 1;
	Заказ.Комментарий = ПодразделениеВр.Наименование;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Склады.Ссылка
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Подразделение = &Подразделение
	|	И Склады.ПометкаУдаления = ЛОЖЬ
	|	И Склады.ЗапретитьИспользование = ЛОЖЬ";
	Запрос.УстановитьПараметр("Подразделение", ПодразделениеВр);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Заказ.Склад = Выборка.Ссылка;
	КонецЕсли;
	Заказ.ОтгрузкаСПодразделенияСклада = Истина;
	Заказ.Подразделение = Справочники.Подразделения.НайтиПоКоду("00005");
	
	МассивНом = ТЗТЧ.ВыгрузитьКолонку("Номенклатура");
	СписокНом = Новый СписокЗначений;
	СписокНом.ЗагрузитьЗначения(МассивНом);
	ТаблицаЦен = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Заказ.Контрагент, СписокНом);
	Для каждого СтрТЧ из ТЗТЧ Цикл
		НовСтрокаТовары = Заказ.Товары.Добавить();
		НовСтрокаТовары.Номенклатура = СтрТЧ.Номенклатура;
		ПриИзмененииНоменклатурыТабЧасти(НовСтрокаТовары, Заказ);
		ЗаполнитьЕдиницуЦенуПродажиТабЧасти(НовСтрокаТовары, Заказ, Константы.ВалютаРегламентированногоУчета.Получить());
		НовСтрокаТовары.Количество = СтрТЧ.Количество;
		СтрокаЦен = ТаблицаЦен.найти(НовСтрокаТовары.Номенклатура, "Номенклатура");
		ЗаполнитьСтавкуНДСТабЧасти(НовСтрокаТовары, Заказ);
		РассчитатьСуммуТабЧасти(НовСтрокаТовары, Заказ);
		РассчитатьСуммуНДСТабЧасти(НовСтрокаТовары, Заказ);
		НовСтрокаТовары.Коэффициент = 1;
		
		Если СтрокаЦен = Неопределено Тогда
			Сообщить(строка(НовСтрокаТовары.НомерСтроки)+"строка: Цены на товар "+НовСтрокаТовары.Номенклатура.Код+" - нет.");
		Иначе	
			НовСтрокаТовары.Цена = СтрокаЦен.МинимальнаяЦена;  // по политике или правилам ценообразования
		КонецЕсли;	
	КонецЦикла;
	Удалось = Ложь;
	Попытка
		Заказ.Записать(РежимЗаписиДокумента.Запись);
		Удалось = Истина;
	Исключение
		Сообщить("Не удалось записать заказ"+ ОписаниеОшибки());
	КонецПопытки;
	
	Если Удалось Тогда
		Заказ.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры


Процедура КоманднаяПанель2ЗаполнитьПоФилиалам(Кнопка)
	Если ВидТовара = Перечисления.ВидыТоваров.ПустаяСсылка() Тогда
		Сообщить("Заполните вид товара", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	СтруктураКолонокРезультата = Новый Структура();
	Для каждого Колонка Из ЭлементыФормы.Результат.Колонки Цикл
		СтруктураКолонокРезультата.Вставить(Колонка.Имя, Колонка);
	КонецЦикла;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияТочкиЗаказаСрезПоследних.Номенклатура,
	|	ЗначенияТочкиЗаказаСрезПоследних.Подразделение КАК Подразделение,
	|	СУММА(ЕСТЬNULL(ЗначенияТочкиЗаказаСрезПоследних.МинимальныйСтраховойЗапас, 0)) КАК СтраховойЗапас,
	|	СУММА(ЕСТЬNULL(ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа, 0)) КАК ЗначениеТочкиЗаказа
	|ПОМЕСТИТЬ Вт_Номенклатура
	|ИЗ
	|	РегистрСведений.ЗначенияТочкиЗаказа.СрезПоследних(
	|			,
	|			ВЫБОР
	|					КОГДА &Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|						ТОГДА Подразделение <> ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|								И Подразделение <> &ГоловноеПодразделение
	|					ИНАЧЕ Подразделение = &Подразделение
	|				КОНЕЦ
	|				И СпособОпределенияЗначенияТочкиЗаказа = &СпособОпределения
	|				И ВЫБОР
	|					КОГДА &ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Номенклатура.ВидТовара = &ВидТовара
	|				КОНЕЦ) КАК ЗначенияТочкиЗаказаСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияТочкиЗаказаСрезПоследних.Номенклатура,
	|	ЗначенияТочкиЗаказаСрезПоследних.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК Заказано,
	|	ЗаказыПокупателейОстатки.Номенклатура,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(
	|			,
	|			ЗаказПокупателя.Транзит
	|				И ЗаказПокупателя.Проверен
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						Вт_Номенклатура.Номенклатура
	|					ИЗ
	|						Вт_Номенклатура КАК Вт_Номенклатура)) КАК ЗаказыПокупателейОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПокупателейОстатки.Номенклатура,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК Остаток,
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Склад.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			НЕ Склад.ЗапретитьИспользование
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						Вт_Номенклатура.Номенклатура
	|					ИЗ
	|						Вт_Номенклатура КАК Вт_Номенклатура)) КАК ТоварыНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Склад.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) КАК СвободныйОстатокЯр,
	|	ТоварыНаСкладахОстатки.Номенклатура
	|ПОМЕСТИТЬ ВТ_СвободныйОстЯр
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			НЕ Склад.ЗапретитьИспользование
	|				И НЕ Склад.Транзитный
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						Вт_Номенклатура.Номенклатура
	|					ИЗ
	|						Вт_Номенклатура КАК Вт_Номенклатура)) КАК ТоварыНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	|				,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							Вт_Номенклатура.Номенклатура
	|						ИЗ
	|							Вт_Номенклатура КАК Вт_Номенклатура)
	|					И ЗаказПокупателя.Проверен
	|					И НЕ ЗаказПокупателя.Транзит) КАК ЗаказыПокупателейОстатки
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТоварыНаСкладахОстаткиВПути.КоличествоОстаток) КАК ВПути,
	|	ТоварыНаСкладахОстаткиВПути.Номенклатура,
	|	ТоварыНаСкладахОстаткиВПути.Склад.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_ВПути
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ВПути)
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						Вт_Номенклатура.Номенклатура
	|					ИЗ
	|						Вт_Номенклатура КАК Вт_Номенклатура)) КАК ТоварыНаСкладахОстаткиВПути
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстаткиВПути.Номенклатура,
	|	ТоварыНаСкладахОстаткиВПути.Склад.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вт_Номенклатура.Номенклатура,
	|	Вт_Номенклатура.Подразделение КАК Подразделение,
	|	Вт_Номенклатура.СтраховойЗапас КАК СтраховойЗапас,
	|	Вт_Номенклатура.ЗначениеТочкиЗаказа КАК ЗначениеТочкиЗаказа,
	|	ЕСТЬNULL(ВТ_ВПути.ВПути, 0) КАК ВПути,
	|	ЕСТЬNULL(ВТ_Заказы.Заказано, 0) КАК Заказано,
	|	ЕСТЬNULL(ВТ_Остатки.Остаток, 0) КАК Остаток,
	|	ЕСТЬNULL(ВТ_Остатки.Остаток, 0) - ЕСТЬNULL(ВТ_Заказы.Заказано, 0) КАК СвободныйОстаток,
	|	ИСТИНА КАК Пометка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Остатки.Остаток, 0) - ЕСТЬNULL(ВТ_Заказы.Заказано, 0) + ЕСТЬNULL(ВТ_ВПути.ВПути, 0) <= Вт_Номенклатура.СтраховойЗапас
	|			ТОГДА Вт_Номенклатура.ЗначениеТочкиЗаказа - ЕСТЬNULL(ВТ_Остатки.Остаток, 0) + ЕСТЬNULL(ВТ_Заказы.Заказано, 0) - ЕСТЬNULL(ВТ_ВПути.ВПути, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НужноЗаказать,
	|	ЕСТЬNULL(ВТ_СвободныйОстЯр.СвободныйОстатокЯр, 0) КАК СвободныйОстатокВЯрославле
	|ПОМЕСТИТЬ Вт_Пред
	|ИЗ
	|	Вт_Номенклатура КАК Вт_Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО Вт_Номенклатура.Номенклатура = ВТ_Заказы.Номенклатура
	|			И Вт_Номенклатура.Подразделение = ВТ_Заказы.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|		ПО Вт_Номенклатура.Номенклатура = ВТ_Остатки.Номенклатура
	|			И Вт_Номенклатура.Подразделение = ВТ_Остатки.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВПути КАК ВТ_ВПути
	|		ПО Вт_Номенклатура.Номенклатура = ВТ_ВПути.Номенклатура
	|			И Вт_Номенклатура.Подразделение = ВТ_ВПути.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СвободныйОстЯр КАК ВТ_СвободныйОстЯр
	|		ПО Вт_Номенклатура.Номенклатура = ВТ_СвободныйОстЯр.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вт_Пред.Пометка,
	|	Вт_Пред.Подразделение КАК Подразделение,
	|	Вт_Пред.Номенклатура,
	|	Вт_Пред.СтраховойЗапас КАК СтраховойЗапас,
	|	Вт_Пред.ЗначениеТочкиЗаказа КАК ЗначениеТочкиЗаказа,
	|	Вт_Пред.Остаток КАК Остаток,
	|	Вт_Пред.Заказано КАК Заказано,
	|	Вт_Пред.СвободныйОстаток КАК СвободныйОстаток,
	|	Вт_Пред.ВПути КАК ВПути,
	|	Вт_Пред.НужноЗаказать КАК НужноЗаказать,
	|	Вт_Пред.СвободныйОстатокВЯрославле КАК СвободныйОстатокВЯрославле,
	|	ВЫБОР
	|		КОГДА Вт_Пред.СвободныйОстатокВЯрославле < Вт_Пред.НужноЗаказать
	|			ТОГДА Вт_Пред.СвободныйОстатокВЯрославле
	|		ИНАЧЕ Вт_Пред.НужноЗаказать
	|	КОНЕЦ КАК Заказываем,
	|	Вт_Пред.Номенклатура.Код КАК Код,
	|	Вт_Пред.Номенклатура.Артикул КАК Артикул
	|ИЗ
	|	Вт_Пред КАК Вт_Пред
	|ИТОГИ
	|	СУММА(СтраховойЗапас),
	|	СУММА(ЗначениеТочкиЗаказа),
	|	СУММА(Остаток),
	|	СУММА(Заказано),
	|	СУММА(СвободныйОстаток),
	|	СУММА(ВПути),
	|	СУММА(НужноЗаказать),
	|	СУММА(СвободныйОстатокВЯрославле),
	|	СУММА(Заказываем)
	|ПО
	|	Подразделение";
	Запрос.УстановитьПараметр("ГоловноеПодразделение",Справочники.Подразделения.НайтиПоКоду("00005"));
	Запрос.УстановитьПараметр("СпособОпределения", Перечисления.СпособыОпределенияЗначенияТочкиЗаказа.Фиксированная);
	Запрос.УстановитьПараметр("Подразделение",Подразделение);
	Запрос.УстановитьПараметр("ВидТовара", ВидТовара);

	//РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Результат.Строки.Очистить();
    Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Итератор = 0;
	Пока Итератор < ЭлементыФормы.Результат.Колонки.Количество() Цикл
		КолонкаДляИзмененияСвойств = ЭлементыФормы.Результат.Колонки.Получить(Итератор);
		Колонка = Неопределено;
		Если СтруктураКолонокРезультата.Свойство(КолонкаДляИзмененияСвойств.Имя, Колонка) Тогда
			ЗаполнитьЗначенияСвойств(КолонкаДляИзмененияСвойств, Колонка);
		Иначе
			ЭлементыФормы.Результат.Колонки.Удалить(КолонкаДляИзмененияСвойств);
			Итератор = Итератор - 1;
		КонецЕсли;
		Итератор = Итератор + 1;
	КонецЦикла;
	ЭлементыФормы.Результат.Колонки.Пометка.Доступность = истина;

	
КонецПроцедуры

Процедура ИзменитьПометку(Пометка)
	Подразделение = ЭлементыФормы.Результат.ВыделенныеСтроки[0].Подразделение;
	Для каждого СтрокаДереваНоменклатура Из Результат.Строки Цикл
		Если СтрокаДереваНоменклатура.Подразделение = Подразделение Тогда
			Для каждого ДетальныеСтроки Из СтрокаДереваНоменклатура.Строки Цикл
				ДетальныеСтроки.Пометка = Пометка;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	
КонецПроцедуры // ИзменитьПометку()


Процедура КоманднаяПанель2Действие(Кнопка)
	ИзменитьПометку(Истина) ;

КонецПроцедуры


Процедура КоманднаяПанель2Действие1(Кнопка)
	ИзменитьПометку(Ложь) ;

КонецПроцедуры


Процедура РезультатПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		ОформлениеСтроки.Ячейки.Пометка.ОтображатьТекст = Ложь;

	Если ДанныеСтроки.Строки.Количество() > 0 Тогда
	
		ОформлениеСтроки.ЦветФона = Новый Цвет(205, 209, 197);
		ОформлениеСтроки.Ячейки.Пометка.ОтображатьФлажок = Ложь;
		ОформлениеСтроки.Ячейки.Пометка.Флажок = Ложь;
	Иначе
		ОформлениеСтроки.Ячейки.Пометка.ОтображатьФлажок = Истина;
		ОформлениеСтроки.Ячейки.Пометка.Флажок = ДанныеСтроки.Пометка;
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель1ЗагрузитьИзПрайса(Кнопка)
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаПрайса");
	Форма.Открыть();

КонецПроцедуры



