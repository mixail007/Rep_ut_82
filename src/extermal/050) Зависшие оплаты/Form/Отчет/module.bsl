
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентами.Контрагент,
	|	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента,
	|	СУММА(ВзаиморасчетыСКонтрагентами.СуммаДолгаДт) КАК ДолгКлиента,
	|	СУММА(ВзаиморасчетыСКонтрагентами.СуммаДолгаКт) КАК ДолгФирмы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
	|		ВЫБОР
	|			КОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток > 0
	|				ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаДолгаДт,
	|		ВЫБОР
	|			КОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток < 0
	|				ТОГДА -ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаДолгаКт
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента = &ОсновнойМенеджер) КАК ВзаиморасчетыСКонтрагентамиОстатки) КАК ВзаиморасчетыСКонтрагентами
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСКонтрагентами.Контрагент,
	|	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВзаиморасчетыСКонтрагентами.СуммаДолгаДт) > 0 И
	|	СУММА(ВзаиморасчетыСКонтрагентами.СуммаДолгаКт) > 0";

	Запрос.УстановитьПараметр("ОсновнойМенеджер", глТекущийПользователь);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если ТипЗнч(Расшифровка)=Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		СтандартнаяОбработка=ЛОЖЬ;
	    ТекстВопроса = "Ввести зачет аванса по договору?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли; 
		
	ФормаДокумента=Документы.Взаимозачет.ПолучитьФормуНовогоДокумента();
	ФормаДокумента.ДокументОбъект.ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности;
	ФормаДокумента.ДокументОбъект.КонтрагентДебитор=Расшифровка.Владелец;
	ФормаДокумента.ДокументОбъект.ДоговорКонтрагентаДебитора=Расшифровка;
	ФормаДокумента.ДокументОбъект.ЗаполнитьОстаткамиДебиторскойЗадолженностиУпр();
	ФормаДокумента.ДокументОбъект.ЗаполнитьОстаткамиКредиторскойЗадолженностиУпр();
	ФормаДокумента.Открыть();
			
	КонецЕсли;	
КонецПроцедуры
