перем 	НомерЗаказа;
Перем   ФайлЗагрузки;
Перем   КаталогВременныхФайлов;


Процедура ПутьПриИзменении(Элемент)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	//Фильтр = НСтр("ru = 'Текст'; en = 'Text'")
	//    + "(*.txt)|*.txt";
	//ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Путь = ДиалогОткрытияФайла.ПолноеИмяФайла;	
	Иначе
		Предупреждение(НСтр("ru = 'Файл(ы) не выбран!'; en = 'File(s) not selected!'"));
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПутьНачалоВыбора(Элемент, СтандартнаяОбработка)
	ПутьПриИзменении(Элемент);
КонецПроцедуры

Процедура ЗаполнитьНажатие(Элемент)
	НайденыОшибки = Ложь;
		Если Путь = "" Тогда
			Сообщить("Не выбран файл PDF");
			НайденыОшибки = Истина;
		КонецЕсли;
		Если Путь = "" Тогда
			Сообщить("Не выбран каталог временных файлов");
			НайденыОшибки = Истина;
		КонецЕсли;
		Если НайденыОшибки = Истина Тогда
			Возврат;
		КонецЕсли;
		
		МакетУтилиты 	= ПолучитьМакет("pdftotext");
		Адрес 			= ПоместитьВоВременноеХранилище(МакетУтилиты, Новый УникальныйИдентификатор);
		ФайлУтилиты1 	= КаталогВременныхФайлов + "pdftotext.exe";
		ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
		УдалитьИзВременногоХранилища(Адрес);
		ДанныеХранилища.Записать(ФайлУтилиты1);
		
		МакетУтилиты 	= ПолучитьМакет("hstart");
		Адрес 			= ПоместитьВоВременноеХранилище(МакетУтилиты, Новый УникальныйИдентификатор);
		ФайлУтилиты2 	= КаталогВременныхФайлов + "hstart.exe";
		ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
		УдалитьИзВременногоХранилища(Адрес);
		ДанныеХранилища.Записать(ФайлУтилиты2);
		
		МакетУтилиты 	= ПолучитьМакет("xpdfrc");
		Адрес 			= ПоместитьВоВременноеХранилище(МакетУтилиты, Новый УникальныйИдентификатор);
		ФайлУтилиты3 	= КаталогВременныхФайлов + "xpdfrc";
		ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
		УдалитьИзВременногоХранилища(Адрес);
		ДанныеХранилища.Записать(ФайлУтилиты3);
		
		ТекстКоманды = """" + КаталогВременныхФайлов + "hstart.exe"" /NOCONSOLE /WAIT ""pdftotext.exe -layout """ + Путь + """ """ + КаталогВременныхФайлов + "temp.txt""""";
		
		WshShell = Новый COMОбъект("WScript.Shell");
		WshShell.Run(ТекстКоманды, 5, 1);
		
		текдок=Новый ТекстовыйДокумент;
		текдок.Прочитать(КаталогВременныхФайлов+"temp.txt", КодировкаТекста.UTF8);
		загрузкаТЧ=Ложь;
		Текст = "";
		//текдок = Новый ЧтениеТекста(КаталогВременныхФайлов+"temp.txt", КодировкаТекста.UTF8);
		Для Номен=1 по текдок.КоличествоСтрок() цикл
			ТСтр = текдок.ПолучитьСтроку(Номен);
			ТекСтр =  СокрЛП(ТСтр);
			Если Номен = 3 Тогда
				Текст = СтрЗаменить(ТекСтр, " ","|");
				СтрМ=РазложитьСтрокуВМассивПодстрок(Текст,"|");
				Для каждого Ст из Стрм цикл
					Если ст <> "" Тогда
						Если НачинаетсяСЦифры(Сред(Ст, 5, 1)) тогда
							НомерЗаказа = Ст;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
							
			ИначеЕсли Номен > 24 Тогда
				Если СтрДлина(ТекСтр) > 100 Тогда	
					Если НачинаетсяСЦифры(Лев(ТекСтр, 1)) Тогда	
						Текст = СтрЗаменить(ТекСтр, " ","|");
						СтрМ=РазложитьСтрокуВМассивПодстрок(Текст,"|");
						Номенклатура = Неопределено;
						Цена = Неопределено;
						Количество = Неопределено;
	                    Проход = 1;
						СтрМассива = 1;
						Для каждого Ст из Стрм цикл
							Если ст <> "" Тогда
								Если НачинаетсяСЦифры(Лев(ст, 1)) Тогда
									Если СодержитБуквы(Ст) Тогда

										Если Проход = 2 тогда
											Номенклатура = ПоискПоШК(Ст);
										ИначеЕсли Проход = 3 и СодержитТочку(Ст) тогда
											Количество = Число(Ст);
										ИначеЕсли Проход = 5 и СодержитТочку(Ст) тогда
											Цена = Число(Ст);
										Иначе 
											Если (Проход = 3 или Проход = 5) и не СодержитТочку(Ст) тогда
												проход = проход -1;
											КонецЕсли;
										КонецЕсли;
									проход = проход +1;
									КонецЕсли;
								КонецЕсли;	
							КонецЕсли;
							СтрМассива = СтрМассива +1;	
						КонецЦикла;
						Если Номенклатура <> Неопределено Тогда
	                   	 	ЗаполнитьСтроку(Номенклатура, Количество, Цена);
							Текст = "";	
						КонецЕсли;
					КонецЕсли;			
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		// текстр.Закрыть();
		УдалитьФайлы(КаталогВременныхФайлов + "temp.txt");
		УдалитьФайлы(КаталогВременныхФайлов + "pdftotext.exe");
		УдалитьФайлы(КаталогВременныхФайлов + "hstart.exe");
		УдалитьФайлы(КаталогВременныхФайлов + "xpdfrc");
		
		
		
КонецПроцедуры

Процедура ЗаполнитьСтроку(Номенклатура, Количество, Цена);
	ст = Накладная.Добавить();
	ст.Номенклатура 			= Номенклатура;
	ст.Код  					= Номенклатура.Код;
	ст.Артикул  				= Номенклатура.Артикул;
	ст.Количество  				= Количество;
	ст.Цена  					= Цена;
	
КонецПроцедуры

Функция НачинаетсяСЦифры(Парам)
	
	Запрос = Новый Запрос("ВЫБРАТЬ 1 ГДЕ &Парам ПОДОБНО ""[0-9]%""");
	Запрос.УстановитьПараметр("Парам", Парам);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция СодержитБуквы(Парам)
	Есть = Истина;
	Для  К = 1 по СтрДлина(Парам) Цикл
		Запрос = Новый Запрос("ВЫБРАТЬ 1 ГДЕ &Парам ПОДОБНО ""[A-я]%""");
		Запрос.УстановитьПараметр("Парам", Сред(Парам, К ,1));
		Если НЕ Запрос.Выполнить().Пустой() Тогда
			Есть = ложь;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат Есть;
	
КонецФункции

Функция СодержитТочку(Парам)
	Есть = Ложь;
	Для  К = 1 по СтрДлина(Парам) Цикл
		Запрос = Новый Запрос("ВЫБРАТЬ 1 ГДЕ &Парам ПОДОБНО ""%.%""");
		Запрос.УстановитьПараметр("Парам", Сред(Парам, К ,1));
		Если НЕ Запрос.Выполнить().Пустой() Тогда
			Есть = Истина;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат Есть;
	
КонецФункции


Функция ПоискПоШК(Ст)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Штрихкоды.Штрихкод,
		|	Штрихкоды.Владелец.Код Как код
		|ИЗ
		|	РегистрСведений.Штрихкоды КАК Штрихкоды
		|ГДЕ
		|	Штрихкоды.Штрихкод = &Штрихкод";
        
		//|	И Штрихкоды.Владелец.Ссылка В ИЕРАРХИИ(&Ссылка)
	Запрос.УстановитьПараметр("Ссылка", Справочники.Номенклатура.НайтиПоКоду("0000001"));
    Запрос.УстановитьПараметр("Штрихкод", Ст);
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Номенклатура = Справочники.Номенклатура.НайтиПоКоду(ВыборкаДетальныеЗаписи.Код) ;
	КонецЦикла;

	Возврат Номенклатура;
		
КонецФункции

Процедура ОсновныеДействияФормыОсновныеДействияФормыВыполнить(Кнопка)
	
	Заказ = Документы.ЗаказПокупателя.СоздатьДокумент();
	
	Заказ.Дата = ТекущаяДата();
	Заказ.ДатаОтгрузки = ТекущаяДата();
	
	организация = Справочники.Организации.НайтиПоКоду("00001");
	Если организация <> Неопределено Тогда
		Заказ.Организация = организация;
	КонецЕсли;
	Заказ.УчитыватьНДС = Истина;
	Заказ.СуммаВключаетНДС = Истина;
	Заказ.ТипЗаказа = 16;
	контрагент = Справочники.Контрагенты.НайтиПоКоду("П011064");
	Заказ.Грузополучатель = контрагент;
	Заказ.Контрагент = контрагент;
	ПриИзмененииЗначенияКонтрагента(Заказ);


	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Владелец
		|	И ДоговорыКонтрагентов.ОтветственноеЛицо = &ОтветственноеЛицо";

	Запрос.УстановитьПараметр("Владелец", Контрагент.Ссылка);
	Запрос.УстановитьПараметр("ОтветственноеЛицо", ПараметрыСеанса.ТекущийПользователь);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выгрузить();

	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Договор = ВыборкаДетальныеЗаписи[0].ССылка;
	Иначе
		договор = Контрагент.ОсновнойДоговорКонтрагента;
	КонецЕсли;
	
	Заказ.Проверен = Истина;
	Заказ.ДоговорКонтрагента = договор;
	Заказ.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00006");
		
	Если ЗначениеЗаполнено(Заказ.ДоговорКонтрагента) Тогда
		Заказ.ДатаОплаты = Заказ.ДатаОтгрузки + Заказ.ДоговорКонтрагента.ДопустимоеЧислоДнейЗадолженности * 86400;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заказ.ДоговорКонтрагента) Тогда
		Заказ.ВалютаДокумента = Заказ.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	Иначе
		Заказ.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	Курс = ПолучитьКурсВалюты(Заказ.ВалютаДокумента, Заказ.Дата);
	Заказ.КурсВзаиморасчетов = Курс.Курс;
	Заказ.КратностьВзаиморасчетов = Курс.Кратность;
	Заказ.Подразделение = Справочники.Подразделения.НайтиПоКоду("00005");	
	Заказ.Ответственный =  ПараметрыСеанса.ТекущийПользователь;
	Для Каждого Ном из Накладная Цикл
		товар = Заказ.Товары.Добавить();
		товар.Номенклатура = Ном.Номенклатура.Ссылка;
		ЗаполнитьЕдиницуЦенуПродажиТабЧасти(товар, Заказ, Заказ.ВалютаДокумента);

		коэф = товар.ЕдиницаИзмерения.Коэффициент;
		Если коэф = 0 Тогда
			коэф = 1;
		КонецЕсли;
		товар.Количество = ном.Количество;
		товар.Коэффициент = коэф;
		товар.Цена = Ном.Цена;
		ЗаполнитьСтавкуНДСТабЧасти(товар, Заказ);
		РассчитатьСуммуТабЧасти(товар, Заказ);
		РассчитатьСуммуНДСТабЧасти(товар, Заказ);
	КонецЦикла;
	Заказ.НомерВходящегоДокумента = НомерЗаказа;
	Заказ.Комментарий = "# Edisoft - " +НомерЗаказа;
	Заказ.СтруктурнаяЕдиница = Заказ.Организация.ОсновнойБанковскийСчет;
	Попытка
		Заказ.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
		Сообщить("Проведен Заказ № " +Заказ.Номер);
	
	Исключение
		Заказ.Записать();
		Сообщить("Записан Заказ № " +Заказ.Номер+ " Проверьте правильность заполнения");
	КонецПопытки;
КонецПроцедуры

КаталогВременныхФайлов = "C:\Windows\Temp\" ;