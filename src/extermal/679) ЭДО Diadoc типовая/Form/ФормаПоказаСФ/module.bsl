
Процедура ОткрытьФрм(фрм)
	Если фрм.открыта() Тогда 
		фрм.активизировать()
	иначе 	
		фрм.открытьМодально();
	КонецЕсли;	
	ОбновитьСФ("");
КонецПроцедуры	

Процедура HTMLДокументonclick(Элемент, pEvtObj)
	pEvtObj.returnValue = Ложь;
	попытка 
		ТекстСсылки = стрЗаменить(pEvtObj.srcElement.parentElement.document.activeElement.href, "about:", "");
		ТекстСсылки = стрЗаменить(ТекстСсылки, "blank", "");
	исключение 
		Возврат
	конецПопытки;	
	Если найти(ТекстСсылки, "ВАЛЮТА")>0 Тогда 
		гуид = прав(ТекстСсылки, стрДлина(ТекстСсылки)-7);
		СсылкаНаЭлемент = справочники.Валюты.ПолучитьСсылку(Новый УникальныйИдентификатор(гуид));
		Если значениеЗаполнено(ссылкаНаЭлемент) Тогда
			открытьФРМ(СсылкаНаЭлемент.ПолучитьФорму());
		КонецЕсли;
	ИначеЕсли найти(текстСсылки, "СПРАВОЧНИКВАЛЮТ")>0 Тогда 
		ОткрытьФрм(справочники.Валюты.ПолучитьФормуСписка());
	ИначеЕсли найти(текстСсылки, "ОКВ")> 0 Тогда 
		//таблица = Новый ТабличныйДокумент;
		//Таблица.Вывести(справочники.Валюты.ПолучитьМакет("КлассификаторВалют"));
		//Таблица.Показать();
		открытьФРМ(Справочники.Валюты.ПолучитьФорму("ФормаПодбораИзКлассификатора"));
	ИначеЕсли найти(Текстссылки, "ЕДИНИЦА")>0 Тогда 
		стрДан = Сред(ТекстСсылки, 9);
		позРазд = Найти(стрДан, ":");
		типСправочника = Лев(стрДан, позРазд - 1);
		гуид = Сред(стрДан, позРазд + 1);
		
		СсылкаНаЭлемент = Вычислить("справочники." + типСправочника + ".ПолучитьСсылку(Новый УникальныйИдентификатор(гуид))");
		Если значениеЗаполнено(ссылкаНаЭлемент) Тогда
			ОткрытьФрм(СсылкаНаЭлемент.ПолучитьФорму());
		КонецЕсли;
	ИначеЕсли найти(текстСсылки, "СПРАВОЧНИКЕДИНИЦ")>0 Тогда 
		ОткрытьФрм(справочники.КлассификаторЕдиницИзмерения.ПолучитьФормуСписка());
	ИначеЕсли найти(текстСсылки, "ОКЕИ")> 0 Тогда 
		//таблица = Новый ТабличныйДокумент;
		//Таблица.Вывести(справочники.КлассификаторЕдиницИзмерения.ПолучитьМакет("КлассификаторЕдиницИзмерения"));
		//Таблица.Показать();
		открытьФРМ(Справочники.КлассификаторЕдиницИзмерения.ПолучитьФорму("ФормаПодбораИзКлассификатора"));
		
	ИначеЕсли найти(Текстссылки, "СТРАНА")>0 Тогда 
		гуид = прав(ТекстСсылки, стрДлина(ТекстСсылки)-7);
		СсылкаНаЭлемент = справочники.КлассификаторСтранМира.ПолучитьСсылку(Новый УникальныйИдентификатор(гуид));
		Если значениеЗаполнено(ссылкаНаЭлемент) Тогда
			ОткрытьФрм(СсылкаНаЭлемент.ПолучитьФорму());
		КонецЕсли;
	ИначеЕсли найти(текстСсылки, "СПРАВОЧНИКСТРАН")>0 Тогда 
		ОткрытьФрм(справочники.КлассификаторСтранМира.ПолучитьФормуСписка());
	ИначеЕсли найти(текстСсылки, "ОКСМ")> 0 Тогда 
		//таблица = Новый ТабличныйДокумент;
		//Таблица.Вывести(справочники.КлассификаторСтранМира.ПолучитьМакет("КлассификаторСтранМира"));
		//Таблица.Показать();
		открытьФРМ(Справочники.КлассификаторСтранМира.ПолучитьФорму("ФормаПодбораИзКлассификатора"));

	ИначеЕсли найти(Текстссылки, "КОНТРАГЕНТ")>0 Тогда 
		гуид = прав(ТекстСсылки, стрДлина(ТекстСсылки)-11);
		СсылкаНаЭлемент = справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(гуид));
		Если значениеЗаполнено(ссылкаНаЭлемент) Тогда
			ОткрытьФрм(СсылкаНаЭлемент.ПолучитьФорму());
		КонецЕсли;
	ИначеЕсли найти(Текстссылки, "ОРГАНИЗАЦИЯ")>0 Тогда 
		гуид = прав(ТекстСсылки, стрДлина(ТекстСсылки)-12);
		СсылкаНаЭлемент = справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(гуид));
		Если значениеЗаполнено(ссылкаНаЭлемент) Тогда
			ОткрытьФрм(СсылкаНаЭлемент.ПолучитьФорму());
		КонецЕсли;
   ИначеЕсли найти(Текстссылки, "СЧЕТФАКТУРАВЫДАННЫЙ")>0 Тогда 
		гуид = прав(ТекстСсылки, стрДлина(ТекстСсылки)-20);
		СсылкаНаЭлемент = Документы.СчетФактураВыданный.ПолучитьСсылку(Новый УникальныйИдентификатор(гуид));
		Если значениеЗаполнено(ссылкаНаЭлемент) Тогда
			ОткрытьФрм(СсылкаНаЭлемент.ПолучитьФорму());
		КонецЕсли;   
	ИначеЕсли найти(ТекстСсылки, "КАРТОЧКА:")>0 Тогда
		СтрокаИД = прав(ТекстСсылки, СтрДлина(ТекстСсылки)-9);
		Если найти(строкаИД, ":")>0 Тогда
			BoxID = лев(строкаИД, найти(строкаИД, ":")-1);
			DocID = прав(строкаИД, стрДлина(СтрокаИД) - найти(строкаИД, ":"));
			
			Док =  Модуль_РаботаССерверомДиадок.ПолучитьДокументДиадок(DocID, BoxId) ;
			ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ОткрытьКарточкуДокументаДД(Док, ЭтаФорма, Истина);
 		КонецЕсли;	
	ИначеЕсли 	(найти(ТекстСсылки, "РТУ:")>0) и (метаданные.документы.найти("РеализацияТоваровУслуг")<>Неопределено)  Тогда
		гуид = прав(ТекстСсылки, стрДлина(ТекстСсылки)-4);
		СсылкаНаЭлемент = Документы.РеализацияТоваровУслуг.ПолучитьСсылку(Новый УникальныйИдентификатор(гуид));
		Если значениеЗаполнено(ссылкаНаЭлемент) Тогда
			ОткрытьФрм(СсылкаНаЭлемент.ПолучитьФорму());
		КонецЕсли;  

	КонецЕсли;	
КонецПроцедуры

Процедура ПриОткрытии()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	Элементыформы.ПанельОбновлениеСтатуса.Видимость = Ложь;
	ТестовыйДокумент = (Найти(ТипДокумента, "тестовый") > 0);
    	
	ОбновитьСФ("");
	
	Organization = Модуль_РаботаССерверомДиадок.ПолучитьЯщикДиадокДляОрганизации(СсылкаНаОбъект.Организация);
	CounteragentName = Organization.GetCounteragentById(ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Контрагент_2_CounteragentBoxID(Получатель, Organization.Id)).Name;
	
	ПодразделениеКонтрагента = CounteragentName + ?(НЕ ПустаяСтрока(ПодразделениеКонтрагента), " (" + ПодразделениеКонтрагента + ")", "");
	
	Если НЕ ОтправкаНевозможна Тогда
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельПредупреждения, РежимСверткиЭлементаУправления.Низ);
	КонецЕсли;	
	
	Если требуетсяНомерЗаказа = Ложь Тогда
		элементыформы.НомерЗаказа.Видимость = Ложь;
		Элементыформы.НадписьНомерЗаказа.Видимость = Ложь;
	КонецЕсли;	
	
	Organization=		Модуль_РаботаССерверомДиадок.ПолучитьЯщикДиадокДляОрганизации(СсылкаНаОбъект.Организация);
	UserPermissions= 	Organization.GetUserPermissions();
	
	Если UserPermissions.CanRequestResolutions Тогда
		
		ПодменюСогласование=	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Добавить("ПодменюСогласование", ТипКнопкиКоманднойПанели.Подменю, "Согласование");
		
		КнопкаОтправитьНаСогласование=	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ПодменюСогласование.Кнопки.Добавить("ПередатьНаСогласование", ТипКнопкиКоманднойПанели.Действие, "Передать на согласование", Новый Действие("ПередатьНаСогласование"));
		КнопкаОтправитьНаСогласование.Подсказка = "Передать на согласование";
		
		КнопкаОтправитьНаПодписание= 	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ПодменюСогласование.Кнопки.Добавить("ПередатьНаПодписание", ТипКнопкиКоманднойПанели.Действие, "Передать на подписание", Новый Действие("ПередатьНаПодпись"));
		КнопкаОтправитьНаПодписание.Подсказка = "Передать на подписание";
		
		ЕстьКнопкиПередачи=	Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьСФ(кн)
	
	СписокОшибок = "";
    	
	Результат = РезультатФормированияПФПоОбъекту;
		
	Таб = Результат.Таблица;
	СписокОшибок = Результат.СписокОшибок;
	
	Фрм = ЭтотОбъект.ПолучитьФорму("ФормаПоказаСФ");
	ЭлементыФормы.HTMLДокумент.УстановитьТекст(СписокОшибок);
	Элементыформы.ТаблицаСФ.Очистить();
	Элементыформы.ТаблицаСФ.Вывести(Таб);
	
	УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельHTMLДокумента, ?(ЗначениеЗаполнено(СписокОшибок), РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Право));
	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ПодписатьИОтправить.Доступность = ?(ПустаяСтрока(СписокОшибок) и НЕ(ОтправкаНевозможна) , Истина, Ложь);
	
КонецПроцедуры	

Процедура ОсновныеДействияФормывыгрузить(Кнопка)
	Если ТребуетсяНомерЗаказа и (ЗначениеЗаполнено(НомерЗаказа)=Ложь) Тогда 
		предупреждение("Не указан номер заказа", , "Дикдок");
		Возврат
	КонецЕсли;	
	ОтправкаДокументаНаСогласование=	Ложь;

	Элементыформы.ПанельОбновлениеСтатуса.Видимость = Истина;
	ЭлементыФормы.ТаблицаСФ.Доступность = Ложь;
	ЭлементыФормы.НадписьОтправка.Заголовок = "Производится отправка документа";
	ПодключитьОбработчикОжидания("ВыгрузкаОбработчик", 0.1, Истина);
	
КонецПроцедуры

Процедура ВыгрузкаОбработчик()
	
	закрыватьФорму = Истина;
	
	Попытка
		Если СуществующийЭДДляУдаления <> Неопределено Тогда
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_DocumentID_Для_Документ(СсылкаНаОбъект,"", ""); 
		КонецЕсли;
		
		ПараметрыОтправкиНаСогласование=	Неопределено;
		Если ОтправкаДокументаНаСогласование Тогда
			
			ПараметрыОтправкиНаСогласование=	ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ВыбратьПараметрыПолучателяПриОтправкеНаСогласование(СсылкаНаОбъект.Организация, Organization, ResolutionRequestType, "ПервичнаяПередачаНаОбработку");
			Если ПараметрыОтправкиНаСогласование = Неопределено Тогда
				Элементыформы.ПанельОбновлениеСтатуса.Видимость = Ложь;
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		ПараметрыОтправки=	Новый Структура();
		ПараметрыОтправки.Вставить("Получатель", 						Получатель);
		ПараметрыОтправки.Вставить("ДокументСсылка", 					СсылкаНаОбъект);
		ПараметрыОтправки.Вставить("DocumentType", 						"Invoice");
		ПараметрыОтправки.Вставить("ReceiverDepartmentId", 				ToDepartmentID);
		ПараметрыОтправки.Вставить("ПараметрыОтправкиНаСогласование", 	ПараметрыОтправкиНаСогласование);
		ПараметрыОтправки.Вставить("isTest", 							ТестовыйДокумент);
		ПараметрыОтправки.Вставить("ParentDocumentId", 					Неопределено);
		ПараметрыОтправки.Вставить("НомерЗаказа", 						НомерЗаказа);
		ПараметрыОтправки.Вставить("ДопСведения", 						ДопСведения);
		ПараметрыОтправки.Вставить("IdОтправленого", 					ID);
		
		ID = Модуль_РаботаССерверомДиадок.ОтправитьДокумент(ПараметрыОтправки);
		
		Если СуществующийЭДДляУдаления<>Неопределено Тогда
			СуществующийЭДДляУдаления.Delete();
		КонецЕсли;
		
		СоотвПараметрОповещения = Новый Соответствие;
		СоотвПараметрОповещения.Вставить(СсылкаНаОбъект, ПолучитьМодульПрог("Модуль_Логика_РаботаСBase64").КонвертироватьЧисло64ВГуид(ID));
		Оповестить("ПеревыставлениеДокумента", СоотвПараметрОповещения, ЭтаФорма);
		
		//проставим реквизиты в сф 
		Попытка 
			ДокОбъект = СсылкаНаОбъект.ПолучитьОбъект();
			записать = Ложь;
			Реквизиты = ДокОбъект.Метаданные().Реквизиты;
			Если реквизиты.найти("Выставлен")<>Неопределено Тогда 
				ДокОбъект.выставлен = Истина;
				записать = Истина;
			КонецЕсли;
			Если реквизиты.найти("КодСпособаВыставления")<>Неопределено Тогда 
				ДокОбъект.КодСпособаВыставления = 2;
				записать = Истина;
			КонецЕсли;
			Если реквизиты.найти("ДатаВыставления")<>Неопределено Тогда 
				ДокОбъект.ДатаВыставления = ТекущаяДата();
				записать = Истина;
			КонецЕсли;
			Если записать Тогда 
				ДокОбъект.записать();
			КонецЕсли;
		исключение 
			сообщить("Не удалось установить данные о способе выставления для документа "+ ДокОбъект);
		КонецПопытки;	 
	Исключение
		
		ТекстОшибки =  ОписаниеОшибки();
		
		ФормаОшибки = ПолучитьФорму("ФормаОбработкиОшибкиВыгрузкиДокумента");
		
		Если найти(ТекстОшибки, "<head>")=0 Тогда
			
			ТекстОшибки = "При выгрузке документа "+СсылкаНаОбъект+" произошла ошибка: 
			|"+ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").СформироватьТекстОшибкиДиадок(ОписаниеОшибки());
			
			Если Найти(ТекстОшибки, "Не настроены параметры подписания!") > 0 Тогда
				
				ТекстОшибки = ТекстОшибки + Символы.ПС + Символы.ПС + "Для отправки документов заполните параметры подписания.";
				
				ФормаОшибки.РежимОтображения = "КнопкаЗаполнитьПараметрыПодписанияУПД";
				ФормаОшибки.ДополнительныеПараметры = Новый Структура;
				ФормаОшибки.ДополнительныеПараметры.Вставить("Исходящие"	   , Истина);
				ФормаОшибки.ДополнительныеПараметры.Вставить("ДляКорректировки", Ложь);
				ФормаОшибки.ДополнительныеПараметры.Вставить("Организация"	   , СсылкаНаОбъект.Организация);
				
			КонецЕсли;
			
		Иначе
			
			ТекстОшибки = "При формировании файла для "+СсылкаНаОбъект+" обнаружены ошибки.";
			
		КонецЕсли;
		
		ФормаОшибки.ТекстОшибки = ТекстОшибки;
		Результат = ФормаОшибки.ОткрытьМодально();
			
		закрыватьФорму = Ложь;
		Если  результат=1 Тогда 
			//снова выгружаем этот док
			Возврат;
		КонецЕсли;	
	КонецПопытки;
	
	
	Если закрыватьФорму Тогда
		ЭлементыФормы.НадписьОтправка.Заголовок = "Документ отправлен";
		ПодключитьОбработчикОжидания("ВыгрузкаОбработчик2", 0.1, Истина);
	Иначе 
		Элементыформы.ПанельОбновлениеСтатуса.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыгрузкаОбработчик2()
	ДатаВыводаЛайтбокса = ТекущаяДата();
	Пока ДатаВыводаЛайтбокса+1.5 > ТекущаяДата() цикл
		н = 1;
	КонецЦикла;	
	
	Оповестить("ДокументОтправлен", Новый Структура("Ссылка, ТипДокумента", СсылкаНаОбъект, ТипДокумента));
	Закрыть(ID);
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСертификата" Тогда 
		
		ЭтаФорма.Закрыть();
		
	ИначеЕсли ИмяСобытия = "ПеревыставлениеДокумента" Тогда
		
		ОбновитьСФ("");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодразделениеКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	CounteragentID = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Контрагент_2_CounteragentBoxID(Получатель, MyBoxId);
	стПодразделениеКонтрагента = ПолучитьФорму("ФормаВыбораОрганизацииПодразделения").ВыбратьПодразделениеКонтрагентаДиадок(MyBoxId,CounteragentID , ToDepartmentID);
	
	Если стПодразделениеКонтрагента <>Неопределено Тогда
		ПодразделениеКонтрагента = CounteragentName + ?(НЕ ПустаяСтрока(стПодразделениеКонтрагента.ПредставлениеПодразделения), " (" + стПодразделениеКонтрагента.ПредставлениеПодразделения + ")", "");
		ToDepartmentID = стПодразделениеКонтрагента.DepartmentID;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодразделениеКонтрагентаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПодразделениеКонтрагента = CounteragentName;
	ToDepartmentID = "";
КонецПроцедуры

Процедура ПередатьНаСогласование()
	
	ОтправкаДокументаНаСогласование=	Истина;
	ResolutionRequestType=				"ApprovementRequest";
	ПодключитьОбработчикОжидания("ВыгрузкаОбработчик", 0.1, Истина);
	
КонецПроцедуры

Процедура ПередатьНаПодпись()
	
	ОтправкаДокументаНаСогласование=	Истина;
	ResolutionRequestType=				"SignatureRequest";
	ПодключитьОбработчикОжидания("ВыгрузкаОбработчик", 0.1, Истина);
	
КонецПроцедуры

Процедура НомерЗаказаПриИзменении(Элемент)
	ДопСведения = "номер_заказа:"+СокрЛП(НомерЗаказа);
    ОбновитьСФ("");
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Попытка
		
		Если Модуль_ИнтеграцияОбщий.ЭтоКСФ(СсылкаНаОбъект) Тогда 
			ТипДокумента = "InvoiceCorrection";
			ТипКонтента  = "InvoiceCorrectionContent";
			Content		 = ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").ПолучитьInvoiceCorrectionContent(СсылкаНаОбъект,, ДопСведения);
			СписокОшибок = ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").ВалидацияInvoiceCorrectionContent(Content, СсылкаНаОбъект);
		Иначе 
			ТипДокумента = "Invoice";
			ТипКонтента  = "InvoiceContent";
			Content		 = ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").ПолучитьInvoiceContent(СсылкаНаОбъект, ДопСведения,, MyBoxID);
			СписокОшибок = ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").ВалидацияInvoiceContent(Content, СсылкаНаОбъект);
		КонецЕсли;
		
		ПараметрыПФ = Новый Структура;
		ПараметрыПФ.Вставить("Content"	   , Content);
		ПараметрыПФ.Вставить("ТипКонтента" , ТипКонтента);
		ПараметрыПФ.Вставить("ТипДокумента", ТипДокумента);
		ПараметрыПФ.Вставить("ПоказатьДопСведения", ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").ВизуализироватьДопПоля(СсылкаНаОбъект.Организация));
		
		Таблица = Модуль_РаботаСКонтентом.СформироватьПечатнуюФорму(ПараметрыПФ);
		
		РезультатФормированияПФПоОбъекту = Новый Структура("Таблица, СписокОшибок", Таблица, СписокОшибок);
		
	Исключение
		
		ТекстОшибки = ОписаниеОшибки();
		
		Получитьформу("Модуль_СообщенияДляПользователей_Форма_ВыводОшибки").ПоказатьОшибку(
			"Внимание!",
			"Не удалось сформировать печатную форму документа",
			ТекстОшибки);
			
		Отказ = Истина;
		
	КонецПопытки;
		
КонецПроцедуры
