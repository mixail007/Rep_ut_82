Перем ПодписантИП;

Процедура ПриОткрытии()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	
	ИНН_СертифкатаАвторизации= УдалитьЛишниеНулиИНН(ПолучитьМодульПрог("Модуль_РаботаССерверомДиадок").ДанныеСертифкатаАвторизации(Организация).INN);
	ПодписантИП = СтрДлина(ИНН_СертифкатаАвторизации) = 12;
	
	ЗаполнитьСписокВыбора_ОбластьПолномочий();
	ЗаполнитьСписокВыбора_СтатусРаботника();
	
	ЗаполнитьНастройкиПодписи();
	УправлениеФормой();
	
КонецПроцедуры


Процедура СтатусРаботникаПриИзменении(Элемент)
	
	Если ДляКорректировки И ПустаяСтрока(ОснованияПолномочийСотрудника)
		И (СтатусРаботника = "SellerEmployee"
		ИЛИ СтатусРаботника = "InformationCreatorEmployee"
		ИЛИ СтатусРаботника = "OtherOrganizationEmployee") Тогда
		ОснованияПолномочийСотрудника = "Должностные обязанности";
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

Процедура ИсходящиеПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбора_ОбластьПолномочий();
	
	ЗаполнитьНастройкиПодписи();
	УправлениеФормой();
	
КонецПроцедуры

Процедура КнопкаСохранитьНажатие(Кнопка)
	
	Отказ= Ложь;
	
	ПроверитьНастройкиПодписи(Отказ);
	
	Если НЕ Отказ Тогда
		СохранитьНастройкиПодписи(Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		Закрыть(Истина);
	КонецЕсли;
	
КонецПроцедуры


Процедура УправлениеФормой()
	
	Если ДляКорректировки Тогда
		Заголовок = "Настройка подписи УКД";
		Если ПодписантИП Тогда 
			УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельДолжность, РежимСверткиЭлементаУправления.Верх);
		КонецЕсли;	
	КонецЕсли;
	
	ЭлементыФормы.ОснованияПолномочийОрганизации.Доступность= 				СтатусРаботника = "OtherOrganizationEmployee";
	ЭлементыФормы.НадписьОснованияПолномочийОрганизации.Доступность= 		ЭлементыФормы.ОснованияПолномочийОрганизации.Доступность;
	ЭлементыФормы.ОснованияПолномочийОрганизации.АвтоОтметкаНезаполненного= ЭлементыФормы.ОснованияПолномочийОрганизации.Доступность;
	ЭлементыФормы.ОснованияПолномочийОрганизации.ОтметкаНезаполненного= 	ЭлементыФормы.ОснованияПолномочийОрганизации.АвтоОтметкаНезаполненного И НЕ ЗначениеЗаполнено(ОснованияПолномочийОрганизации);
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбора_ОбластьПолномочий()
	
	ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Очистить();
	
	Если Исходящие Тогда
		
		Если ДляКорректировки Тогда
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("InvoiceSigner"								  , "Лицо, ответственное за подписание счетов-фактур");
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("PersonDocumentedOperation"					  , "Лицо, ответственное за оформление свершившегося события");
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("ResponsibleForOperationAndSignerForInvoice"	  , "Лицо, ответственное за оформление свершившегося события и за подписание счетов-фактур");
		Иначе
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("PersonMadeOperation"							  , "Лицо, совершившее сделку"															  );
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("PersonDocumentedOperation"					  , "Лицо, ответственное за оформление сделки"											  );
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("MadeAndSignOperation"						  , "Лицо, совершившее сделку и ответственное оформление"								  );
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("MadeOperationAndSignedInvoice"				  , "Лицо, совершившее сделку и ответственное за подписание счетов-фактур"				  );
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("MadeAndResponsibleForOperationAndSignedInvoice", "Лицо, совершившее сделку и ответственное за оформление и за подписание счетов-фактур");
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("ResponsibleForOperationAndSignerForInvoice"	  , "Лицо, ответственное за оформление сделки и за подписание счетов-фактур"			  );
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("InvoiceSigner"								  , "Лицо, ответственное за подписание счетов-фактур");
		КонецЕсли;
		
	Иначе
		
		Если ДляКорректировки Тогда
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("PersonDocumentedOperation"					  , "Лицо, ответственное за оформление свершившегося события");
		Иначе
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("PersonMadeOperation"							  , "Лицо, совершившее сделку"							 );
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("PersonDocumentedOperation"					  , "Лицо, ответственное за оформление сделки"			 );
			ЭлементыФормы.ОбластьПолномочий.СписокВыбора.Добавить("MadeAndSignOperation"						  , "Лицо, совершившее сделку и ответственное оформление");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбора_СтатусРаботника()
	
	ЭлементыФормы.СтатусРаботника.СписокВыбора.Очистить();
	
	Если Исходящие Тогда
		
		ЭлементыФормы.СтатусРаботника.СписокВыбора.Добавить("SellerEmployee"			, "Работник организации продавца"						  );
		ЭлементыФормы.СтатусРаботника.СписокВыбора.Добавить("InformationCreatorEmployee", "Работник организации - составителя информации продавца");
		
	Иначе
		
		ЭлементыФормы.СтатусРаботника.СписокВыбора.Добавить("SellerEmployee"			, "Работник организации покупателя"						  );
		ЭлементыФормы.СтатусРаботника.СписокВыбора.Добавить("InformationCreatorEmployee", "Работник организации - составителя информации покупателя");
		
	КонецЕсли;
	
	ЭлементыФормы.СтатусРаботника.СписокВыбора.Добавить("OtherOrganizationEmployee"	, "Работник иной уполномоченной организации");
	
	Если ПодписантИП Тогда
		ЭлементыФормы.СтатусРаботника.СписокВыбора.Добавить("AuthorizedPerson", "Уполномоченное физическое лицо (в том числе индивидуальный предприниматель)");
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьНастройкиПодписи()
	
	ExtendedSignerDetailsToPost= ПолучитьМодульПрог("Модуль_РаботаССерверомДиадок").ПрочитатьДанныеПодписанта(Организация, Исходящие, ДляКорректировки);
	
	Должность= 			ExtendedSignerDetailsToPost.JobTitle;
	ОбластьПолномочий= 	ExtendedSignerDetailsToPost.Powers;
	СтатусРаботника= 	ExtendedSignerDetailsToPost.Status;
	ИныеСведения= 		ExtendedSignerDetailsToPost.SignerInfo;
	
	ОснованияПолномочийОрганизации= ExtendedSignerDetailsToPost.OrganizationPowersBase;
	ОснованияПолномочийСотрудника= 	ExtendedSignerDetailsToPost.PowersBase;
	
КонецПроцедуры

Процедура ПроверитьНастройкиПодписи(Отказ)
	
	ТекстОшибки= "";
	Разделитель= "";
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстОшибки= ТекстОшибки + Разделитель + "Не заполнено поле """+ЭлементыФормы.НадписьОрганизация.Заголовок+"""!";
		Разделитель= Символы.ПС;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОбластьПолномочий) Тогда
		ТекстОшибки= ТекстОшибки + Разделитель + "Не заполнено поле """+ЭлементыФормы.НадписьОбластьПолномочий.Заголовок+"""!";
		Разделитель= Символы.ПС;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтатусРаботника) Тогда
		ТекстОшибки= ТекстОшибки + Разделитель + "Не заполнено поле """+ЭлементыФормы.НадписьСтатусРаботника.Заголовок+"""!";
		Разделитель= Символы.ПС;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Должность) И НЕ ПодписантИП Тогда
		ТекстОшибки= ТекстОшибки + Разделитель + "Не заполнено поле """+ЭлементыФормы.НадписьДолжность.Заголовок+"""!";
		Разделитель= Символы.ПС;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОснованияПолномочийСотрудника) Тогда
		ТекстОшибки= ТекстОшибки + Разделитель + "Не заполнено поле """+ЭлементыФормы.НадписьОснованияПолномочийСотрудника.Заголовок+"""!";
		Разделитель= Символы.ПС;
	КонецЕсли;
	
	Если СтатусРаботника = "OtherOrganizationEmployee" И НЕ ЗначениеЗаполнено(ОснованияПолномочийОрганизации) Тогда
		ТекстОшибки= ТекстОшибки + Разделитель + "Не заполнено поле """+ЭлементыФормы.НадписьОснованияПолномочийОрганизации.Заголовок+"""!";
		Разделитель= Символы.ПС;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Получитьформу("Модуль_СообщенияДляПользователей_Форма_ВыводОшибки").ПоказатьОшибку("Ошибки заполнения настроек подписи УПД", ТекстОшибки);
		Отказ= Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьНастройкиПодписи(Отказ)
	
	ExtendedSignerDetailsToPost= ПолучитьМодульПрог("Модуль_Диадок_РаботаСКонтентом").Новый_ExtendedSignerDetailsToPost();
	
	ExtendedSignerDetailsToPost.JobTitle= 	Должность;
	ExtendedSignerDetailsToPost.Powers=	  	ОбластьПолномочий;
	ExtendedSignerDetailsToPost.Status=		СтатусРаботника;
	ExtendedSignerDetailsToPost.SignerInfo= ИныеСведения;
	
	ExtendedSignerDetailsToPost.OrganizationPowersBase= ОснованияПолномочийОрганизации;
	ExtendedSignerDetailsToPost.PowersBase= 			ОснованияПолномочийСотрудника;
	
	ExtendedSignerDetailsToPost.SignerType= ?(ПодписантИП, "IndividualEntity", "LegalEntity");
	
	Если ExtendedSignerDetailsToPost.SignerType = "IndividualEntity" Тогда
		ExtendedSignerDetailsToPost.RegistrationCertificate= Модуль_ИнтеграцияОбщий.ПолучитьДатуНомерСвидетельстваОГосРегистрацииИП(Организация);
	КонецЕсли;
	
	ПолучитьМодульПрог("Модуль_РаботаССерверомДиадок").ЗаписатьДанныеПодписанта(Организация, ExtendedSignerDetailsToPost, Исходящие, ДляКорректировки);
	
КонецПроцедуры
 



