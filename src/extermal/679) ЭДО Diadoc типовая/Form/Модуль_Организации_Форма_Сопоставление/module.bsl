
перем ТаблицаНеподключенныхОрганизаций;

Процедура ПриОткрытии()
	ЗафиксироватьСобытиеGA("Форма_Сопоставление_Организация");
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	ЭтаФорма.Заголовок = "Выберите организации, с которыми будете работать в "+НаименованиеСистемы;
	ЭлементыФормы.ДеревоОрганизаций.Колонки.ПредставлениеОрганизацииДД.ТекстШапки = "Организация в "+КраткоеНаименованиеСистемыПредложныйПадеж+", ИНН/КПП";	
	ИнициализироватьДанныеФормы();
КонецПроцедуры

Процедура ДеревоОрганизацийПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого стр из ОформленияСтрок цикл 
		
		стр.ячейки.ЯщикДиадок.цветтекста = ?(ЗначениеЗаполнено(стр.данныеСтроки.OrganizationId), webцвета.Черный, webцвета.Красный);
		стр.ячейки.Организация.цветТекста = ?(ТипЗнч(стр.Данныестроки.организация)=тип("Строка"), webцвета.Красный, webцвета.Черный);
		
		Если стр.ДанныеСтроки.ЭтоОрганизация Тогда
			стр.Шрифт=	Новый Шрифт(,,Истина);
		КонецЕсли;
		
	Конеццикла;	
КонецПроцедуры

Процедура ИзменитьСостояниеФлажкаВклВыкл(ТекущиеДанные)
	 	Если  (ЗначениеЗаполнено(ТекущиеДанные.OrganizationId) = Ложь) Тогда 
			предупреждение("Не выбран ящик "+НаименованиеСистемы+".",, НаименованиеСистемы)
		ИначеЕсли типЗнч(ТекущиеДанные.Организация) = тип("Строка") Тогда 
			предупреждение("Не выбрана организация.",, НаименованиеСистемы)
		Иначе 	
			ТекущиеДанные.вкл = не ТекущиеДанные.вкл 
		КонецЕсли;	
КонецПроцедуры

Процедура ВыбратьОрганизациюПоЯщикуДиадок(ТекущиеДанные)
	
	ФормаВыбораОрганизации=		ПолучитьФорму("ФормаВыбораОрганизации");
	ФормаВыбораОрганизации.ИНН=	ЭлементыФормы.ДеревоОрганизаций.ТекущиеДанные.ИНН;
	
	ВыбраннаяОрганизация=	ФормаВыбораОрганизации.ОткрытьМодально();
	
	Если НЕ ВыбраннаяОрганизация = Неопределено 
		И НЕ ЭлементыФормы.ДеревоОрганизаций.ТекущиеДанные.Организация = ВыбраннаяОрганизация Тогда
		НайденнаяОрганизация=	ДеревоОрганизаций.Строки.НайтиСтроки(Новый Структура("Организация", ВыбраннаяОрганизация), Истина);
		Если НайденнаяОрганизация.Количество() = 0 Тогда
			ЭлементыФормы.ДеревоОрганизаций.ТекущиеДанные.Организация=	ВыбраннаяОрганизация;
		Иначе
			Предупреждение("Данная организация уже сопоставлена, выберите другую организацию");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДеревоОрганизацийПередНачаломИзменения(Элемент, Отказ)
	
	//Отказ=	Истина;
	
	//Если Элементыформы.ДеревоОрганизаций.ТекущаяКолонка.Имя = "Организация" Тогда 
	//	
	//	ВыбратьОрганизациюПоЯщикуДиадок(Элементыформы.ДеревоОрганизаций.ТекущиеДанные);
	//	
	//КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьСтрокиДерева(КоллекцияСтрок)
	
	Для Каждого СтрокаДерева Из КоллекцияСтрок Цикл 
		Если ЗначениеЗаполнено(СтрокаДерева.Организация) Тогда
			
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_BoxID_для_Организация(СтрокаДерева.СопоставленнаяОрганизация, "", "");
			ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(СтрокаДерева.СопоставленнаяОрганизация, "ДиадокИдентификаторЭДОДляОрганизации", "");
			
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_BoxID_для_Организация(СтрокаДерева.Организация, СтрокаДерева.OrganizationId, СтрокаДерева.ЯщикДиадок, СтрокаДерева.DepartmentKpp);
			ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(СтрокаДерева.Организация, "ДиадокИдентификаторЭДОДляОрганизации", СтрокаДерева.FnsParticipantId);
			
			ЕстьРезультат = Истина;
			
            ФормироватьУПД = ОдинСАдаптер_СвойстваОбъектов_ПолучитьЗначениеСвойства(СтрокаДерева.Организация, "ДиадокФормироватьУПД");
            Если ФормироватьУПД = Неопределено Тогда
                ФормироватьУПД = "СФТОРГ12АКТ";
                ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(СтрокаДерева.Организация, "ДиадокФормироватьУПД", ФормироватьУПД);
            КонецЕсли;

			Если Не ЕстьСтарыйФорматОтправкиИсходящихДокументов Тогда
				ЕстьСтарыйФорматОтправкиИсходящихДокументов = ФорматДокументовНаОтправкуУстаревшийФормат(ФормироватьУПД);
			КонецЕсли;
			
			ОбработатьСтрокиДерева(СтрокаДерева.Строки);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыВыполнить(Кнопка)
	
	ОбработатьСтрокиДерева(ДеревоОрганизаций.Строки);
	
	Если ЕстьРезультат Тогда
		
		ЭтаФорма.Закрыть();
		ЗафиксироватьСобытиеGA("Форма_Сопоставление_Организация", "first-entrance");
		
		Если ЕстьСтарыйФорматОтправкиИсходящихДокументов Тогда
			
			ФормаУведомления = ПолучитьФорму("ФормаHTMLСообщения", ВладелецФормы);
			
			ФормаУведомления.ЗаголовокФормы = "Уведомление о смене формата";
			
			ФормаУведомления.ЭтоУведомлениеОСменеФормата = Истина;
			
			ФормаУведомления.HTMLТекст =
			"<HTML><HEAD>
			|<META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
			|<STYLE type=""text/css"">h3{margin-top:0.5em; margin-bottom:1em;} p{margin-top:0.2em; margin-bottom:0em;}</STYLE></HEAD>
			|<BODY>
			|<H4>С 1 июля 2017 года изменился формат счета-фактуры по <A href=""http://publication.pravo.gov.ru/Document/View/0001201604260024""> приказу №155 ФНС</A>,
			|соответственно после 1 июля налоговая может отказать в вычете НДС за старый формат</H4>
			|<P>Счет-фактура старого формата не считается выставленным, если он отправлен после 1 июля. Налоговая может отказать в вычете НДС получателю при представлении документов.</P>
			|<H4>Договоритесь с поставщиками о переходе на новый формат</H4>
			|<P>С 1 июля счета-фактуры нужно передавать в новом формате по приказу №155 ФНС. Если поставщик продолжает отправлять документы в старом формате, запросите аннулирование документов и попросите перевыставить их в новом формате.</P></BODY></HTML>";
			
			ФормаУведомления.ОткрытьМодально();
			
		КонецЕсли;
		
	Иначе
		ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").СообщениеОбОшибкеДиадок("Необходимо сопоставить минимум одну организацию для работы");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуДерева(СтрокаДерева, Organization, Department)
	
	СтрокаДерева.OrganizationId=	Organization.Id;
	СтрокаДерева.FnsParticipantId=	Organization.FnsParticipantId;
	СтрокаДерева.ИНН=				Organization.Inn;
	СтрокаДерева.ЭтоОрганизация=    Department = Неопределено;
	Если Department = Неопределено Тогда
		СтрокаДерева.КПП=			Organization.Kpp;
		НаименованиеЯщика= 			Organization.Name;
		СтрокаДерева.ПредставлениеОрганизацииДД= НаименованиеЯщика + ", " + СокрЛП(Organization.Inn) + ?(Organization.Kpp = "", "", "/" + СокрЛП(Organization.Kpp));
	Иначе
		СтрокаДерева.DepartmentKpp=	Department.Kpp;
		СтрокаДерева.КПП=			Department.Kpp;
		НаименованиеЯщика= 			Organization.Name + " (" + Department.Name + ")";
		СтрокаДерева.ПредставлениеОрганизацииДД= НаименованиеЯщика + ", " + СокрЛП(Organization.Inn) + ?(Department.Kpp = "", "", "/" + СокрЛП(Department.Kpp));
	КонецЕсли;
	СтрокаДерева.ЯщикДиадок=  НаименованиеЯщика;
	СтрокаДерева.Организация= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").BoxID_2_Организация(СтрокаДерева.OrganizationId, СтрокаДерева.DepartmentKpp);
	
	Если НЕ ЗначениеЗаполнено(СтрокаДерева.Организация) Тогда
		Если Department = Неопределено Тогда
			Kpp= Organization.Kpp;
		Иначе
			Kpp= Department.Kpp;
		КонецЕсли;
		НайденнаяОрганизация= ТаблицаНеподключенныхОрганизаций.НайтиСтроки(Новый Структура("ИНН, КПП", Organization.Inn, Kpp));
		Если НайденнаяОрганизация.Количество() > 0 Тогда
			СтрокаДерева.Организация= НайденнаяОрганизация[0].Организация;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаДерева.СопоставленнаяОрганизация= СтрокаДерева.Организация;
	
КонецПроцедуры

Процедура ИнициализироватьДанныеФормы()
	
	ТаблицаНеподключенныхОрганизаций =  ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьТаблицуОрганизацийКоторыеНеПодключеныКДиадоку();
	
	ДеревоОрганизаций.Строки.Очистить();
	
	DiadocConnection= Модуль_РаботаССерверомДиадок.ПолучитьDiadocConnection();
	OrganizationList= DiadocConnection.GetOrganizationList();
	Для Индекс = 0 По OrganizationList.Count - 1 Цикл
		
		СтрокаОрганизации= ДеревоОрганизаций.Строки.Добавить();
		Organization=	OrganizationList.GetItem(Индекс);
		ЗаполнитьСтрокуДерева(СтрокаОрганизации, Organization, Неопределено);
		
		Для ИндексПодразделений = 0 По Organization.Departments.Count - 1 Цикл
			Department=	Organization.Departments.GetItem(ИндексПодразделений);
			Если НЕ ПустаяСтрока(Department.Kpp) И Department.Kpp <> Organization.Kpp Тогда
				СтрокаОрганизации.ЭтоРодитель=	Истина;
				СтрокаПодразделения= СтрокаОрганизации.Строки.Добавить();
				ЗаполнитьСтрокуДерева(СтрокаПодразделения, Organization, Department);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого СтрокаДерева Из ДеревоОрганизаций.Строки Цикл
		ЭлементыФормы.ДеревоОрганизаций.Свернуть(СтрокаДерева);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДеревоОрганизацийПередНачаломДобавления(Элемент, Отказ, Копирование)
	отказ = Истина;
КонецПроцедуры

Процедура ДеревоОрганизацийПередУдалением(Элемент, Отказ)
	отказ = Истина;
КонецПроцедуры

Процедура ДеревоОрганизацийОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=	Ложь;
	
	ВыбратьОрганизациюПоЯщикуДиадок(Элементыформы.ДеревоОрганизаций.ТекущиеДанные);
	
КонецПроцедуры
