Перем текущий_XmlTorg12_Item;
Перем КодСтраныДляЗаполненияВНовом;
Перем НаименованиеСтраныДляЗаполненияВНовом;
Перем ТекущийДоговорКонтрагента;

//{ ТЕЛО ФОРМЫ
	
	Процедура УстановитьПустойСклад()
		
		НаименованиеСправочникаСкладов = ПолучитьПрофильКонфигурации().НаименованиеСправочникаСкладов;
		Склад = справочники[НаименованиеСправочникаСкладов].ПустаяСсылка();
		
	КонецПроцедуры
	
	Процедура УстановитьПустоеПодразделение()
		
		ИспользоватьСопоставлениеПодразделений = ПолучитьПрофильКонфигурации().ИспользоватьСопоставлениеПодразделений;
		Если ИспользоватьСопоставлениеПодразделений Тогда
			НаименованиеСправочникаПодразделений = ПолучитьПрофильКонфигурации().НаименованиеСправочникаПодразделений;
			Подразделение = справочники[НаименованиеСправочникаПодразделений].пустаяСсылка();
		КонецЕсли;
		
	КонецПроцедуры	
	
	Процедура УправлениеФормой()
		
		СформироватьЗаголовок();
		
		Если НЕ ЗначениеЗаполнено(Склад) Тогда
			УстановитьПустойСклад();
		КонецЕсли;
		
		Если ЭлементыФормы.Подразделение.Видимость
			И НЕ ЗначениеЗаполнено(Подразделение) Тогда
			УстановитьПустоеПодразделение();
		КонецЕсли;
		
		Если ЭДОбъект.Department <> Неопределено Тогда
			НаименованиеПодразделенияВДиадоке=	ЭДОбъект.Department.Name;
		Иначе
			НаименованиеПодразделенияВДиадоке=	"Головное подразделение";
		КонецЕсли;
		
		ЭлементыФормы.Сопоставить.ЦветТекста = WEBЦвета.Синий;
		
		ЭлементыФормы.Договор.ОграничениеТипа=	Новый ОписаниеТипов(ОдинСАдаптер_Документы_ПолучитьТипСправочникаДоговоров());
		ЭлементыФормы.Договор.КнопкаВыбора=		Истина;
		ЭлементыФормы.Договор.КнопкаОчистки=	Истина;
		
		Если  ПолучитьПрофильКонфигурации().НастройкиПоступления.ПоступлениеОборудования=Ложь Тогда 
			Подменю =    Элементыформы.КоманднаяПанельВерхняя.Кнопки.Операция.кнопки;
			Подменю.удалить(подменю.ПоступлениеОборудования);
			Подменю.удалить(подменю.ПоступлениеОбъектовСтроительства);
		КонецЕсли;	
		
		Если  ПолучитьПрофильКонфигурации().НастройкиПоступления.ВозвратОтПокупателя=Ложь Тогда
			Подменю =    Элементыформы.КоманднаяПанельВерхняя.Кнопки.Операция.кнопки;
			Подменю.удалить(подменю.ВозвратОтПокупателя);
		КонецЕсли;	
		
		Если ПолучитьПрофильКонфигурации().НастройкиПоступления.ПоступлениеНМА = Ложь Тогда
			Подменю =    Элементыформы.КоманднаяПанельВерхняя.Кнопки.Операция.кнопки;
			Подменю.удалить(подменю.ПоступлениеНМА);
		КонецЕсли;
		
		Если ПолучитьПрофильКонфигурации().ХранениеНастроекПользователей.Вариант <> "Рарус" Тогда
			Подменю =    Элементыформы.КоманднаяПанельВерхняя.Кнопки.Операция.кнопки;
			Подменю.удалить(подменю.ПоступлениеАвтомобилей);
		КонецЕсли;
		
		Если ИмяФормыПрикладногорешенияДляИнтеграцииДиадок() <> "Модуль_ИнтеграцияБух" Тогда
			Подменю =    Элементыформы.КоманднаяПанельВерхняя.Кнопки.Операция.кнопки;
			Подменю.удалить(подменю.ПокупкаКомиссияАгент);	
		КонецЕсли;
		
		Если  ПолучитьПрофильКонфигурации().ИспользоватьСопоставлениеПодразделений=Ложь Тогда
			УстановитьРежимСверткиЭлементаУправления(Элементыформы.ПанельПоказаПодразделения, РежимСверткиЭлементаУправления.Верх);
		КонецЕсли;
		
		НастройкаВидимости();
		
	КонецПроцедуры
	
	Функция ЗаполнитьИОткрытьФормуСозданияДокументаВ1С(_ЭДОбъект, _DocumentContent, БолванкаДокумента1С = Неопределено) Экспорт
		
		ЭДОбъект = _ЭДОбъект;
		DocumentContent = _DocumentContent;
		
		ПредставлениеЭД=	ПолучитьФорму("Модуль_РаботаССерверомДиадок").ПредставлениеЭД(ЭДОбъект);
		
		Если БолванкаДокумента1С = Неопределено Тогда
			БолванкаДокумента1С=	Модуль_ЗаполнениеКонтента.ИницализироватьИЗаполнитьСтруктуруДокумента1С(ЭДОбъект, DocumentContent);
		КонецЕсли;
				
		ЗаполнитьЗначенияСвойств(ЭтаФорма, БолванкаДокумента1С);
		
		ЗаполнитьДанныеТЧЗначениямиИз1С(ТабличнаяЧасть);
		
		ПодключитьОбработчикОжидания("Обработчик_ОжиданиеИзмененияТипаНоменклатуры", 0.3, Истина);
		
		УправлениеФормой();
		
		ПараметрЗакрытия = ОткрытьМодально(); 
		Возврат ПараметрЗакрытия;
				
	КонецФункции
	
	Процедура УстановитьВозможностьЗаполненияГТД()
		
		Если Модуль_ИнтеграцияОбщий.ЕстьВозможностьЗаполненияГТД(ВидОперации, ЭДОбъект)
			ИЛИ Модуль_ИнтеграцияОбщий.ЕстьВозможностьЗаполненияСерий(ВидОперации, ЭДОбъект) Тогда
			Если НЕ ЭлементыФормы.ЗаполнениеГТД.Видимость Тогда
				ВозможностьЗаполненияГТД = Истина;
			КонецЕсли;
			ЭлементыФормы.ЗаполнениеГТД.Видимость = Истина;
		Иначе
			ВозможностьЗаполненияГТД = Ложь;
			ЭлементыФормы.ЗаполнениеГТД.Видимость = Ложь;
		КонецЕсли;
		
		ЗаполнениеГТДПриИзменении("");
		
	КонецПроцедуры
	
	Процедура СформироватьЗаголовок()
		
		Если ВидОперации ="ПокупкаКомиссия" Тогда
			Заголовок  =  "Создание поступления товаров и услуг (покупка, комиссия)";
		ИначеЕсли ВидОперации ="ПоступлениеОборудования" Тогда 
			Заголовок  =  "Создание поступления товаров и услуг (поступление оборудования)";
		ИначеЕсли ВидОперации ="ПоступлениеОбъектовСтроительства" Тогда 
			Заголовок  =  "Создание поступления товаров и услуг (поступление объектов строительства)";
		ИначеЕсли ВидОперации ="ВозвратОтПокупателя" Тогда 
			Заголовок  =  "Создание Возврата от покупателя";
		ИначеЕсли ВидОперации ="ПоступлениеНМА" Тогда 
			Заголовок  =  "Создание поступления НМА";
		ИначеЕсли ВидОперации ="ПоступлениеДопРасходов" Тогда 
			Заголовок  =  "Создание поступления доп. расходов";
		ИначеЕсли ВидОперации ="ПоступлениеАвтомобилей" Тогда 
			Заголовок  =  "Создание поступления автомобилей";
		ИначеЕсли ВидОперации ="ПокупкаКомиссияАгент" Тогда 
			Заголовок  =  "Создание поступления товаров и услуг (покупка, комиссия) агентом (комиссионером)";
		Иначе
			Заголовок = "";
		КонецЕсли;	
		
	КонецПроцедуры
	
	Процедура УправлениеВидимостьюКолонокАльфаАвто(ЕстьVINЭД, ЕстьАртикулЭД)
		
		Если ЕстьVINЭД Тогда
			Элементыформы.ТабличнаяЧасть.Колонки.VINЭД.Видимость = Истина;
			Элементыформы.ТабличнаяЧасть.Колонки.VIN.Видимость = Истина;
		Иначе
			VINЭД = Элементыформы.ТабличнаяЧасть.Колонки.Вставить(2,"VIN из ЭД");
			VINЭД.Имя = "VINЭД";
			VINЭД.Данные = "VINЭД";
			
			VINЭД = Элементыформы.ТабличнаяЧасть.Колонки.Вставить(6,"VIN");
			VINЭД.Имя = "VIN";
			VINЭД.Данные = "VIN";
		КонецЕсли;
		Если ЕстьАртикулЭД Тогда
			ИндексЭД = Элементыформы.ТабличнаяЧасть.Колонки.Индекс(Элементыформы.ТабличнаяЧасть.Колонки.Найти("АртикулЭД"));
			Элементыформы.ТабличнаяЧасть.Колонки.Удалить(ИндексЭД);
			Индекс = Элементыформы.ТабличнаяЧасть.Колонки.Индекс(Элементыформы.ТабличнаяЧасть.Колонки.Найти("Артикул"));
			Элементыформы.ТабличнаяЧасть.Колонки.Удалить(Индекс);
		КонецЕсли;
		Элементыформы.ТабличнаяЧасть.Колонки.ЕдиницаИзмерения.Видимость = Ложь;
		
	КонецПроцедуры
	
	Процедура УправлениеВидимостьюКолонокVIN(ЕстьVINЭД)
		
		Если ЕстьVINЭД Тогда
			ИндексVINЭД = Элементыформы.ТабличнаяЧасть.Колонки.Индекс(Элементыформы.ТабличнаяЧасть.Колонки.Найти("VINЭД"));
			Элементыформы.ТабличнаяЧасть.Колонки.Удалить(ИндексVINЭД);
			ИндексVIN = Элементыформы.ТабличнаяЧасть.Колонки.Индекс(Элементыформы.ТабличнаяЧасть.Колонки.Найти("VIN"));
			Элементыформы.ТабличнаяЧасть.Колонки.Удалить(ИндексVIN);
		КонецЕсли;
		
	КонецПроцедуры

	Процедура УправлениеВидимостьюКолонокАртикул(ЕстьАртикулЭД)
		
		Если Не ЕстьАртикулЭД Тогда
			АртикулЭД = Элементыформы.ТабличнаяЧасть.Колонки.Вставить(2,"Артикул из ЭД");
			АртикулЭД.Имя = "АртикулЭД";
			АртикулЭД.Данные = "АртикулЭД";
			АртикулЭД.Видимость = Ложь;
			Артикул = Элементыформы.ТабличнаяЧасть.Колонки.Вставить(6,"Артикул");
			Артикул.Имя = "Артикул";
			Артикул.Данные = "Артикул";
			Артикул.Видимость = Ложь;
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура НастройкаВидимости() 
		
		СформироватьЗаголовок();
		
		Элементыформы.ТабличнаяЧасть.Колонки.ЕдиницаИзмерения.Видимость=	ИспользоватьЕдиницуИзмерения;
		Элементыформы.ТабличнаяЧасть.Колонки.ЕдиницаИзЭД.Видимость=			ИспользоватьЕдиницуИзмерения;
		Элементыформы.ТабличнаяЧасть.Колонки.Количество.Видимость=			НЕ (ВидОперации = "ПоступлениеАвтомобилей");
		
		ЕстьVINЭД = ?(Элементыформы.ТабличнаяЧасть.Колонки.Найти("VINЭД") = Неопределено, Ложь, Истина);
		ЕстьАртикулЭД = ?(Элементыформы.ТабличнаяЧасть.Колонки.Найти("АртикулЭД") = Неопределено, Ложь, Истина);
		
		Если ВидОперации = "ПоступлениеАвтомобилей" Тогда
			УправлениеВидимостьюКолонокАльфаАвто(ЕстьVINЭД, ЕстьАртикулЭД);
		Иначе
			УправлениеВидимостьюКолонокАртикул(ЕстьАртикулЭД);
			УправлениеВидимостьюКолонокVIN(ЕстьVINЭД);
		КонецЕсли;	
		
		КолонкиТЧ = Элементыформы.ТабличнаяЧасть.Колонки;
		Если ВидОперации = "ПокупкаКомиссияАгент" Тогда
			Если КолонкиТЧ.Найти("Комитент") = Неопределено Тогда
				кол = КолонкиТЧ.Добавить("Комитент");
				кол.Данные = "Комитент";
			КонецЕсли;
		Иначе
			Если КолонкиТЧ.Найти("Комитент") <> Неопределено Тогда
				КолонкиТЧ.Удалить(КолонкиТЧ.Найти("Комитент"));
			КонецЕсли;
		КонецЕсли;
		
		УстановитьВозможностьЗаполненияГТД();
		
	КонецПроцедуры	
	
	Процедура ЗаполнениеТабличнойЧасти()
		
		Для каждого стр Из ТабличнаяЧасть Цикл
			
			ПараметрыЗаполнения=	Новый Структура();
			ПараметрыЗаполнения.Вставить("Контрагент", 						Контрагент);
			ПараметрыЗаполнения.Вставить("ВидОперации", 					ВидОперации);
			ПараметрыЗаполнения.Вставить("СуммаВключаетНДС", 				СуммаВключаетНДС);
			ПараметрыЗаполнения.Вставить("ИспользоватьЕдиницуИзмерения", 	ИспользоватьЕдиницуИзмерения);
			ПараметрыЗаполнения.Вставить("Type", 							ЭДОбъект.Type);
			
			Модуль_ЗаполнениеКонтента.ЗаполнитьТипНоменклатуры(стр, ВидОперации, ЭДОбъект.Type);
			Если ВидОперации = "ПоступлениеОбъектовСтроительства" Тогда
				Если типЗнч(стр.номенклатура) <> тип("СправочникСсылка.ОбъектыСтроительства") Тогда
					Модуль_ЗаполнениеКонтента.Заполнить_Строку_Данными1С(Стр, ПараметрыЗаполнения);
				КонецЕсли;
			ИначеЕсли ВидОперации = "ПоступлениеНМА" Тогда
				Если типЗнч(стр.номенклатура) <> тип("СправочникСсылка.НематериальныеАктивы") Тогда
					Модуль_ЗаполнениеКонтента.Заполнить_Строку_Данными1С(Стр, ПараметрыЗаполнения);
				КонецЕсли;
			ИначеЕсли ВидОперации = "ПоступлениеАвтомобилей" Тогда
				Если типЗнч(стр.номенклатура) <> тип("СправочникСсылка.Автомобили") Тогда
					Модуль_ЗаполнениеКонтента.Заполнить_Строку_Данными1С(Стр, ПараметрыЗаполнения);
				КонецЕсли;	
			ИначеЕсли типЗнч(стр.номенклатура)<>тип("СправочникСсылка.Номенклатура") Тогда
				Модуль_ЗаполнениеКонтента.Заполнить_Строку_Данными1С(Стр, ПараметрыЗаполнения);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура ПересчитатьПоля(СтрокаТЧ)
		
		Если ВидОперации = "ПоступлениеДопРасходов" Тогда
			Если ЭтаФорма.ЭлементыФормы.Найти("СуммаРасхода") <> Неопределено Тогда
				ЭтаФорма.СуммаРасхода =?(СуммаВключаетНДС, ЭДОбъект.total, ЭДОбъект.total-ЭДОбъект.vat);
			КонецЕсли;
		Иначе
			Модуль_ЗаполнениеКонтента.ПересчитатьПоляСУчетомНДС(СтрокаТЧ, ВидОперации, СуммаВключаетНДС);
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура ЗаполнитьДанныеТЧЗначениямиИз1С(ТабличнаяЧасть)
		
		ПараметрыЗаполнения=	Новый Структура();
		ПараметрыЗаполнения.Вставить("Контрагент", 						Контрагент);
		ПараметрыЗаполнения.Вставить("ВидОперации", 					ВидОперации);
		ПараметрыЗаполнения.Вставить("СуммаВключаетНДС", 				СуммаВключаетНДС);
		ПараметрыЗаполнения.Вставить("ИспользоватьЕдиницуИзмерения", 	ИспользоватьЕдиницуИзмерения);
		ПараметрыЗаполнения.Вставить("Type", 							ЭДОбъект.Type);
		
		Модуль_ЗаполнениеКонтента.ЗаполнитьДанными1С(ТабличнаяЧасть, ПараметрыЗаполнения);
		
	КонецПроцедуры
	
	Функция ПроверкаЗаполненияДанных()
		
		ВсеОК = Истина;
		Если Контрагент.Пустая() Тогда
			Сообщить("Не указан контрагент");
			ВсеОК = Ложь;
		
		Иначе
			Попытка
				ПроверкаНаДоступностьСсылки = Контрагент.Код;
			Исключение
				Сообщить("Не корректно указан контрагент. Возможно у Вас нет доступа к работе с данным контрагентом");
			КонецПопытки;
		КонецЕсли;
		
		Если ВидОперации <> "ПоступлениеДопРасходов" 
			ИЛИ ИмяФормыПрикладногорешенияДляИнтеграцииДиадок() = "Модуль_ИнтеграцияАльфаАвто41" Тогда
			
			Для каждого стр Из ТабличнаяЧасть Цикл
				Если НЕ ЗначениеЗаполнено(стр.Номенклатура) и (стр.Тип <> "Услуга")Тогда
					Сообщить("В строке " + стр.НомерСтроки + " не указана номенклатура");
					ВсеОК = Ложь;
				КонецЕсли;
				
				Если ИспользоватьЕдиницуИзмерения и НЕ (ВидОперации = "ПоступлениеАвтомобилей") Тогда
					Если НЕ ЗначениеЗаполнено(стр.ЕдиницаИзмерения) и (стр.Тип <> "Услуга") Тогда
						Сообщить("В строке " + стр.НомерСтроки + " не указана единица измерения");
						ВсеОК = Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Возврат ВсеОК;
		
	КонецФункции
	
	Процедура УстановитьСоответствиеНоменклатуры()
		
		Для каждого строкаТЧ Из ТабличнаяЧасть Цикл
			
			Если НЕ ЗначениеЗаполнено(строкаТЧ.Номенклатура) Тогда
				Возврат;
			КонецЕсли;
			
			item = строкаТЧ.XmlTorg12_Item;
			Номенклатура_УстановитьСоответствие(строкаТЧ.Номенклатура, Контрагент, item.Code, item.NomenclatureArticle, item.Name);
			
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура УстановитьСоответствиеДоговора()
		
		Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			Возврат;
		КонецЕсли;
		
		Договор_УстановитьСоответствие(ДоговорКонтрагента, ДоговорСвойство);
		
	КонецПроцедуры
	
//} ТЕЛО ФОРМЫ

//{ ОБРАБОТЧИКИ ОЖИДАНИЯ
	
	Процедура Обработчик_ОжиданиеВыбораНоменклатуры()
		
		Если ВидОперации = "ПоступлениеНМА" Тогда
			фрм = Справочники.НематериальныеАктивы.ПолучитьФормуНовогоЭлемента();
		ИначеЕсли ВидОперации = "ПоступлениеАвтомобилей" Тогда
			фрм = Справочники.Автомобили.ПолучитьФормуНовогоЭлемента();
		Иначе
			фрм = Справочники.Номенклатура.ПолучитьФормуНовогоЭлемента();
		КонецЕсли;
		
		Если НЕ фрм.Открыта() ИЛИ фрм.ССылка.ЭтоГруппа Тогда
			ПодключитьОбработчикОжидания("Обработчик_ОжиданиеВыбораНоменклатуры", 0.3, Истина);
		КонецЕсли;
		
		Если ВидОперации = "ПоступлениеАвтомобилей" Тогда
			Если ПустаяСтрока(фрм.VIN)  Тогда
				фрм.VIN = Номенклатура_ПолучитьVINИзНаименования(текущий_XmlTorg12_Item.Name);
			КонецЕсли;
		Иначе
			
			Если ИмяФормыПрикладногорешенияДляИнтеграцииДиадок() = "Модуль_ИнтеграцияАсторТД" Тогда
				Если ПустаяСтрока(фрм.Наименование) Тогда
					фрм.Наименование = текущий_XmlTorg12_Item.Name;
				КонецЕсли;
			Иначе
				Если ПустаяСтрока(фрм.Наименование) И ПустаяСтрока(фрм.НаименованиеПолное) Тогда
					фрм.Наименование = текущий_XmlTorg12_Item.Name;
					фрм.НаименованиеПолное = текущий_XmlTorg12_Item.Name;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура Обработчик_ОжиданиеВыбораСтраныПроисхождения()
		Если ВозможностьЗаполненияГТД И НЕ ПустаяСтрока(КодСтраныДляЗаполненияВНовом) Тогда
			фрм = Справочники.КлассификаторСтранМира.ПолучитьФормуНовогоЭлемента();
			Если фрм.Открыта() И ПустаяСтрока(фрм.Наименование) Тогда
				фрм.Наименование = НаименованиеСтраныДляЗаполненияВНовом;
				фрм.Код = КодСтраныДляЗаполненияВНовом;
			КонецЕсли;
			
			ПодключитьОбработчикОжидания("Обработчик_ОжиданиеВыбораСтраныПроисхождения", 0.3, Истина);
		КонецЕсли;
	КонецПроцедуры
	
	Процедура Обработчик_ОжиданиеИзмененияТипаНоменклатуры()
		
		Для каждого стр Из ТабличнаяЧасть Цикл
			Если ЗначениеЗаполнено(стр.Номенклатура) Тогда
				Модуль_ЗаполнениеКонтента.ЗаполнитьТипНоменклатуры(стр, ВидОперации, ЭДОбъект.Type);
			КонецЕсли;
		КонецЦикла;	
		
		ПодключитьОбработчикОжидания("Обработчик_ОжиданиеИзмененияТипаНоменклатуры", 0.3, Истина);
		
	КонецПроцедуры
	
//} ОБРАБОТЧИКИ ОЖИДАНИЯ

//{ ДЕЙСТВИЯ ФОРМЫ
	
	Процедура ПерейтиКСозданиюДокумента1С()
		
		Если НЕ ПроверкаЗаполненияДанных() Тогда
			Предупреждение("Заполните все необходимые данные.",, НаименованиеСистемы);
			Возврат;
		КонецЕсли;
		
		Если (видОперации =  "ВозвратОтПокупателя") и (ТабличнаяЧасть.НайтиСтроки(Новый Структура("тип", "Услуга")).Количество()>0 ) Тогда
			Предупреждение("Невозможно создание документа ""Возврат товаров от покупателя"", содержащего строки с услугами.",, НаименованиеСистемы);
			Возврат;
		КонецЕсли;
		
		Если ВидОперации = "ПоступлениеДопРасходов" Тогда
			Если ИмяФормыПрикладногорешенияДляИнтеграцииДиадок() = "Модуль_ИнтеграцияАльфаАвто41"
				ИЛИ ИмяФормыПрикладногорешенияДляИнтеграцииДиадок() = "Модуль_ИнтеграцияТКПТ" Тогда
				УстановитьСоответствиеНоменклатуры();
			КонецЕсли;
		Иначе
			УстановитьСоответствиеНоменклатуры();
		КонецЕсли;
		
		УстановитьСоответствиеДоговора();
		
		Если ВозможностьЗаполненияГТД и (Модуль_ИнтеграцияОбщий.ЕстьВозможностьЗаполненияСерий(ВидОперации, ЭДОбъект) = Истина) Тогда
			СоздатьИЗаполнитьСерииНоменклатуры();
		КонецЕсли;
		
		документСсылка = СоздатьДокументВ1СПоступление(
		Новый Структура(
		"Дата, ДатаВходящегоДокумента, НомерВходящегоДокумента, ДоговорКонтрагента, Склад, Подразделение, Грузоотправитель, Грузополучатель",
		, ЭДОбъект.DocumentDate,  ЭДОбъект.DocumentNumber, ДоговорКонтрагента, Склад, Подразделение, Грузоотправитель, Грузополучатель),
		Новый Структура("Организация, Контрагент", Организация, Контрагент),
		ЭДОбъект,
		ТабличнаяЧасть,
		СуммаВключаетНДС,
		ВидОперации,
		ВозможностьЗаполненияГТД);
		
		Закрыть(документСсылка);
		
	КонецПроцедуры
	
	Процедура СоздатьИЗаполнитьСерииНоменклатуры()
		
		Для каждого Строка Из ТабличнаяЧасть Цикл
			
			Если ЗначениеЗаполнено(Строка.Серия) Тогда
				Продолжить;    
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Строка.Номенклатура) Тогда
				Сообщить("В строке " + Строка.НомерСтроки + " необходимо сопоставить номенклатуру.");
				Продолжить;
			КонецЕсли;
			
			Если Строка.Номенклатура.ВестиУчетПоСериям = Ложь Тогда
				Сообщить("Для номенклатуры " + Строка.Номенклатура + " (строка " + Строка.НомерСтроки +
				") не ведется учет по сериям. Серия не создана.");
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.СтранаПроисхожденияЭД) И ЗначениеЗаполнено(Строка.ГТД) Тогда
				Строка.Серия = Модуль_ЗаполнениеКонтента.СоздатьИЗаполнитьСериюНоменклатуры(Строка);
			КонецЕсли;

		КонецЦикла;
		
	КонецПроцедуры
	
	
	Процедура ТабличнаяЧастьНоменклатураНачалоВыбора(Элемент, СтандартнаяОбработка)
		
		текущий_XmlTorg12_Item = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.XmlTorg12_Item;
		ПодключитьОбработчикОжидания("Обработчик_ОжиданиеВыбораНоменклатуры", 0.3, Истина);
		
	КонецПроцедуры
	
	Процедура ОсновныеДействияФормыОсновныеДействияФормыВыполнить(Кнопка)
		ПерейтиКСозданиюДокумента1С();
	КонецПроцедуры
	
	Процедура КонтрагентПриИзменении(Элемент)
		Если  Вопрос("Внимание! При смене контрагента значения номенклатуры будут перезаполнены. 
			|Перезаполнить номенклатуру?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет,НаименованиеСистемы) = КодВозвратаДиалога.Да Тогда
			ЗаполнитьДанныеТЧЗначениямиИз1С(ТабличнаяЧасть);
		КонецЕсли;
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьПриПолученииДанных(Элемент, ОформленияСтрок)
		Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			ОформлениеСтроки.Ячейки.НоменклатураИзЭД.ЦветФона = WEBЦвета.СветлоСерый;
			ОформлениеСтроки.Ячейки.ЕдиницаИзЭД.ЦветФона = WEBЦвета.СветлоСерый;
			Если ОформлениеСтроки.Ячейки.Найти("СтранаПроисхожденияЭД") <> Неопределено Тогда
				ОформлениеСтроки.Ячейки.СтранаПроисхожденияЭД.ЦветФона = WEBЦвета.СветлоСерый;
			КонецЕсли;
			
			ЕстьVINЭД = ?(ОформлениеСтроки.Ячейки.Найти("VINЭД")=Неопределено, Ложь,Истина); 
			Если ЕстьVINЭД Тогда
				ОформлениеСтроки.Ячейки.VINЭД.ЦветФона = WebЦвета.СветлоСерый;
			КонецЕсли;
			ЕстьАртикулЭД = ?(ОформлениеСтроки.Ячейки.Найти("АртикулЭД")=Неопределено, Ложь,Истина); 
			Если ЕстьАртикулЭД Тогда
				ОформлениеСтроки.Ячейки.АртикулЭД.ЦветФона = WebЦвета.СветлоСерый;
			КонецЕсли;
		КонецЦикла;
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьНоменклатураПриИзменении(Элемент)
		Модуль_ЗаполнениеКонтента.ЗаполнитьСтрокуПоНоменклатуре(Элементыформы.ТабличнаяЧасть.ТекущиеДанные, ВидОперации, СуммаВключаетНДС, ИспользоватьЕдиницуИзмерения, ЭДОбъект.Type);
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьПередУдалением(Элемент, Отказ)
		Отказ = Истина;
	КонецПроцедуры
	
	Процедура СуммаВключаетНДСПриИзменении(Элемент)
		Для каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
			ПересчитатьПоля(СтрокаТЧ);
		КонецЦикла;
		
		СохранитьЗначение("Диадок_РежимВводаВходящейНакладнойСуммаВключаетНДС", СуммаВключаетНДС);
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьЕдиницаИзмеренияНачалоВыбора(Элемент, СтандартнаяОбработка)
		Попытка
			Элемент.ВыборПоВладельцу = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура;
		Исключение
		КонецПопытки;
		
		Если ИмяФормыПрикладногорешенияДляИнтеграцииДиадок() = "Модуль_ИнтеграцияАльфаАвто41" Тогда 
			СтандартнаяОбработка = Ложь;
			Если ЗначениеЗаполнено(ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура)=Ложь Тогда
				предупреждение("Не заполнена номенклатура в строке.", , НаименованиеСистемы);
				Возврат
			КонецЕсли;	
			фрм = Справочники.ЕдиницыИзмерения.ПолучитьФормуВыбора();
			фрм.ПараметрОтборПоВладельцу =   ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура.ТипНоменклатуры;
			
			результат = фрм.ОткрытьМодально();
			Если ЗначениеЗаполнено(результат) Тогда 
				ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.ЕдиницаИзмерения = результат;
			КонецЕсли;	 
			
		КонецЕсли;	
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
		ПересчитатьПоля(ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные);
	КонецПроцедуры
	
	Процедура СопоставитьНажатие(Элемент)
		Закрыть("Сопоставить");
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьНоменклатураОчистка(Элемент, СтандартнаяОбработка)
		СтандартнаяОбработка = Ложь;
		Если ВидОперации = "ПоступлениеОбъектовСтроительства" Тогда
			Элементыформы.ТабличнаяЧасть.ТекущиеДанные.номенклатура = справочники.ОбъектыСтроительства.ПустаяСсылка();
		ИначеЕсли ВидОперации = "ПоступлениеНМА" Тогда 
			Элементыформы.ТабличнаяЧасть.ТекущиеДанные.номенклатура = справочники.НематериальныеАктивы.ПустаяСсылка();	
		ИначеЕсли ВидОперации = "ПоступлениеАвтомобилей" Тогда 
			Элементыформы.ТабличнаяЧасть.ТекущиеДанные.номенклатура = справочники.Автомобили.ПустаяСсылка();	
			Элементыформы.ТабличнаяЧасть.ТекущиеДанные.VIN = "";
		Иначе
			Элементыформы.ТабличнаяЧасть.ТекущиеДанные.номенклатура =  справочники.Номенклатура.ПустаяСсылка();	
		КонецЕсли;
		
		Если Элементыформы.ТабличнаяЧасть.Колонки.Найти("Серия") <> Неопределено Тогда
			Элементыформы.ТабличнаяЧасть.ТекущиеДанные.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура КоманднаяПанельВидОперации(Кнопка)
		
		ВидОперации = кнопка.имя;
		НастройкаВидимости() ;
		УстановитьВозможностьЗаполненияГТД();
		
		ЗаполнениеТабличнойЧасти();
		
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьЕдиницаИзмеренияОчистка(Элемент, СтандартнаяОбработка)
		
		Элементыформы.ТабличнаяЧасть.ТекущиеДанные.ЕдиницаИзмерения = ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ItemStruct_2_ЕдиницаИзмерения(Неопределено, "");
		СтандартнаяОбработка = Ложь;
		
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьСтранаПроисхожденияНачалоВыбора(Элемент, СтандартнаяОбработка)
		КодСтраныДляЗаполненияВНовом = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.КодСтраныПроисхожденияЭД;
		НаименованиеСтраныДляЗаполненияВНовом = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.СтранаПроисхожденияЭД;
		ПодключитьОбработчикОжидания("Обработчик_ОжиданиеВыбораСтраныПроисхождения", 0.3, Истина);
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьСтранаПроисхожденияПриИзменении(Элемент)
		КодСтраныДляЗаполненияВНовом = "";
		НаименованиеСтраныДляЗаполненияВНовом = "";
		строкиДляИзмененияСтраны = ТабличнаяЧасть.НайтиСтроки(Новый Структура(
		"КодСтраныПроисхожденияЭД", 
		ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.КодСтраныПроисхожденияЭД));
		
		Для каждого стр Из строкиДляИзмененияСтраны Цикл
			стр.СтранаПроисхождения = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.СтранаПроисхождения;
		КонецЦикла;
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьСерияНачалоВыбора(Элемент, СтандартнаяОбработка)
		Владелец = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура;
		Элемент.ВыборПоВладельцу = Владелец;
	КонецПроцедуры
	
	Процедура ДоговорНачалоВыбора(Элемент, СтандартнаяОбработка)
		
		СтандартнаяОбработка = Ложь;
		ТекущийДоговорКонтрагента = ДоговорКонтрагента;
		
		ВидыДоговоров = ПолучитьМодульПрог(ИмяФормыПрикладногорешенияДляИнтеграцииДиадок()).ПолучитьСписокВидовДоговоров(ВидОперации);
		
		ФрмВыбора = ПолучитьМодульПрог(ИмяФормыПрикладногорешенияДляИнтеграцииДиадок()).ПолучитьФормуВыбораДоговораКонтрагента(Элемент,Организация,ЭДОбъект.documentDate,Контрагент,ВидыДоговоров,ДоговорКонтрагента);
		
		ФрмВыбора.Открыть();
		
		
	КонецПроцедуры
	
	Процедура ДоговорПриИзменении(Элемент)
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			Контрагент = ДоговорКонтрагента.Владелец;
		КонецЕсли;
		Договор_УстановитьСоответствие(ТекущийДоговорКонтрагента,"");
	КонецПроцедуры
	
	Процедура СкладОчистка(Элемент, СтандартнаяОбработка)
		УстановитьПустойСклад();
		СтандартнаяОбработка = Ложь;
	КонецПроцедуры
	
	Процедура ПодразделениеОчистка(Элемент, СтандартнаяОбработка)
		УстановитьПустоеПодразделение();
		СтандартнаяОбработка = Ложь;
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьЕдиницаИзмеренияПриИзменении(Элемент)
		
		СтрокаТЧ = Элементыформы.ТабличнаяЧасть.ТекущиеДанные;
		коэффициент =  ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьКоэффициентПересчетаПоItemStruct(строкаТЧ.XmlTorg12_Item, 	строкаТЧ.ЕдиницаИзмерения);
		Модуль_ЗаполнениеКонтента.ПересчитатьСтрокуПоКоэффициенту(строкаТЧ, ВидОперации, Коэффициент, СуммаВключаетНДС);
		
	КонецПроцедуры
	
	Процедура ТабличнаяЧастьЕдиницаИзмеренияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
		сообщить("!");
	КонецПроцедуры
	
	Процедура ЗаполнениеГТДПриИзменении(Элемент)
		КолонкиТЧ = Элементыформы.ТабличнаяЧасть.Колонки;
		
		Если ВозможностьЗаполненияГТД Тогда
			Если Модуль_ИнтеграцияОбщий.ЕстьВозможностьЗаполненияСерий(ВидОперации, ЭДОбъект) = Истина Тогда
				ИзменитьСоставКолонокДляСерий(КолонкиТЧ);
				Если ТабличнаяЧасть.Колонки.Найти("Серия")= Неопределено Тогда
					ТабличнаяЧасть.Колонки.Добавить("Серия");
				КонецЕсли;
				ЗаполнитьСерииНоменклатуры();
			ИначеЕсли Модуль_ИнтеграцияОбщий.ЕстьВозможностьЗаполненияГТД(ВидОперации, ЭДОбъект)= Истина Тогда
				ИзменитьСоставКолонокДляГТД(КолонкиТЧ);	
			КонецЕсли;	
		Иначе
			Если КолонкиТЧ.Найти("Серия") <> Неопределено Тогда
				КолонкиТЧ.Удалить(КолонкиТЧ.Найти("Серия"));
			КонецЕсли;
			Если ТабличнаяЧасть.Колонки.Найти("Серия")<> Неопределено Тогда
				ТабличнаяЧасть.Колонки.Удалить(ТабличнаяЧасть.Колонки.Серия);
			КонецЕсли;
			Если КолонкиТЧ.Найти("СтранаПроисхождения") <> Неопределено Тогда
				КолонкиТЧ.Удалить(КолонкиТЧ.Найти("СтранаПроисхождения"));
			КонецЕсли;
			
			Если КолонкиТЧ.Найти("ГТД") <> Неопределено Тогда
				КолонкиТЧ.Удалить(КолонкиТЧ.Найти("ГТД"));
			КонецЕсли;
			
			Если КолонкиТЧ.Найти("СтранаПроисхожденияЭД") <> Неопределено Тогда
				КолонкиТЧ.Удалить(КолонкиТЧ.Найти("СтранаПроисхожденияЭД"));
			КонецЕсли;
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура ИзменитьСоставКолонокДляГТД(КолонкиТЧ)
		
		Если КолонкиТЧ.Найти("Серия") <> Неопределено Тогда
			КолонкиТЧ.Удалить(КолонкиТЧ.Найти("Серия"));
		КонецЕсли;
		
		Если КолонкиТЧ.Найти("ГТД") = Неопределено Тогда
			кол = КолонкиТЧ.Добавить("ГТД");
			кол.Данные = "ГТД";
			кол.ТолькоПросмотр = Истина;
			кол.ЦветФонаПоля = WEBЦвета.СветлоСерый;
			кол = КолонкиТЧ.Добавить("СтранаПроисхожденияЭД", "Страна из ЭД");
			кол.Данные = "СтранаПроисхожденияЭД";
			кол.ТолькоПросмотр = Истина;
			кол = КолонкиТЧ.Добавить("СтранаПроисхождения", "Страна");
			кол.Данные = "СтранаПроисхождения";
			кол.ЭлементУправления.КнопкаОчистки = Ложь;
			кол.ЭлементУправления.УстановитьДействие("НачалоВыбора", Новый Действие("ТабличнаяЧастьСтранаПроисхожденияНачалоВыбора"));
			кол.ЭлементУправления.УстановитьДействие("ПриИзменении", Новый Действие("ТабличнаяЧастьСтранаПроисхожденияПриИзменении"));
		Иначе	
			КолонкаГТД = КолонкиТЧ.Найти("ГТД"); 
			КолонкаГТД.ЦветФонаПоля = WEBЦвета.СветлоСерый;
			КолонкаГТД.ТолькоПросмотр = Истина;
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура ИзменитьСоставКолонокДляСерий(КолонкиТЧ)
		
		Если КолонкиТЧ.Найти("СтранаПроисхождения") <> Неопределено Тогда
			КолонкиТЧ.Удалить(КолонкиТЧ.Найти("СтранаПроисхождения"));
		КонецЕсли;
		
		Если КолонкиТЧ.Найти("ГТД") = Неопределено Тогда
			кол = КолонкиТЧ.Добавить("ГТД");
			кол.Данные = "ГТД";
			кол.ТолькоПросмотр = Истина;
			кол.ЦветФонаПоля = WEBЦвета.СветлоСерый;
			кол = КолонкиТЧ.Добавить("СтранаПроисхожденияЭД", "Страна из ЭД");
			кол.Данные = "СтранаПроисхожденияЭД";
			кол.ТолькоПросмотр = Истина;
			кол = КолонкиТЧ.Добавить("Серия", "Серия");
			кол.Данные = "Серия";
			кол.ЭлементУправления.КнопкаВыбора = Истина;
			кол.ЭлементУправления.КнопкаОчистки = Истина;
			кол.ЭлементУправления.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
			кол.ЭлементУправления.УстановитьДействие("НачалоВыбора", Новый Действие("ТабличнаяЧастьСерияНачалоВыбора"));
		Иначе
			КолонкаГТД = КолонкиТЧ.Найти("ГТД"); 
			КолонкаГТД.ЦветФонаПоля = WEBЦвета.СветлоСерый;
			КолонкаГТД.ТолькоПросмотр = Истина;
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура ЗаполнитьСерииНоменклатуры()
		Для каждого Строка Из Элементыформы.ТабличнаяЧасть.Значение Цикл
			Модуль_ЗаполнениеКонтента.ЗаполнитьСериюНоменклатуры(Строка);	
		КонецЦикла;
	КонецПроцедуры
	
	Процедура ПриОткрытии()
		
		КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
		
		ОбработкаСобытияПодключаемогоМодуля("ПриОткрытииФормы", Новый Структура("Форма, ИмяФормы", ЭтаФорма, "ФормаВводаНакладной"));
		
	КонецПроцедуры
	
	Процедура ПодключаемаяКоманда(Кнопка)
			
		ОбработкаСобытияПодключаемогоМодуля("ПодключаемаяКоманда", Новый Структура("Форма, ИмяФормы, Кнопка", ЭтаФорма, "ФормаВводаНакладной", Кнопка));
		
	КонецПроцедуры
	
	
//} ДЕЙСТВИЯ ФОРМЫ

ТабличнаяЧасть.Колонки.Добавить("XmlTorg12_Item");
ТабличнаяЧасть.Колонки.Добавить("КодСтраныПроисхожденияЭД");
ТабличнаяЧасть.Колонки.Добавить("XmlTorg12_ItemSubtotal");
ТабличнаяЧасть.Колонки.Добавить("XmlTorg12_ItemSubtotalWithVatExcluded");
