Перем ОснованиеКорректировкиРеализации, КорректировкаРеализации, ИсправленныйСчетФактура;


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").ВСистемеРеализованыКорректировки() Тогда
		
		Предупреждение("В данной конфигурации не реализованы корректировки.
					   |Выполнение данной операции невозможно.",,НаименованиеСистемы);
					   
		Отказ= Истина;
		
	КонецЕсли;
	
	Документ1С= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").DocumentID_2_Документ(ЭДОбъект.DocumentId, ЭДОбъект.OrganizationID, ЭДОбъект);
	
	Если Документ1С = Неопределено Тогда
		
		Предупреждение("Электронный документ не сопоставлен с документом в 1С.
					   |Выполнение данной операции невозможно.",,НаименованиеСистемы);
					   
		Отказ= Истина;
		
	Иначе
		ОснованиеКорректировкиРеализации= Документ1С.ДокументОснование;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЗаполнитьНачальноеПредставлениеФормы();
	
	ОбновитьСсылки();
	
	УправлениеФормой();
	
КонецПроцедуры


Процедура ЗаполнитьНачальноеПредставлениеФормы()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	
	Если ТипНовогоДокумента = "InvoiceRevision" Тогда
		
		Заголовок= "Создание исправления счета-фактуры";
		Элементыформы.СопоставленныйДокумент.Заголовок=  "1. Корректировка реализации в 1С (Исправление):";
		Элементыформы.СопоставленныйДокумент1.Заголовок= "2. Исправление счета-фактуры в 1С:";
		
	ИначеЕсли ТипНовогоДокумента = "InvoiceCorrectionRevision" Тогда
		
		Заголовок= "Создание исправления корректировочного счета-фактуры";
		Элементыформы.СопоставленныйДокумент.Заголовок=  "1. Корректировка реализации в 1С (Исправление):";
		Элементыформы.СопоставленныйДокумент1.Заголовок= "2. Исправление счета-фактуры в 1С:";
		
	ИначеЕсли ТипНовогоДокумента = "InvoiceCorrection" Тогда
		
		Заголовок= "Создание корректировочного счета-фактры";
		Элементыформы.СопоставленныйДокумент.Заголовок=  "1. Корректировка реализации в 1С (Корректировка):";
		Элементыформы.СопоставленныйДокумент1.Заголовок= "2. Корректировочный счета-фактура в 1С:";
		
	КонецЕсли;

КонецПроцедуры

Процедура УправлениеФормой()
	
	Если НЕ ЗначениеЗаполнено(КорректировкаРеализации) Тогда
		
		ЭлементыФормы.КорректировкаРеализации.Заголовок= "Создать...";
		ЭлементыФормы.ИсправленныйСчетФактура.Заголовок= "Создать...";
		
		ЭлементыФормы.КорректировкаРеализации.Доступность= Истина;
		ЭлементыФормы.ИсправленныйСчетФактура.Доступность= Ложь;
		
		ЭлементыФормы.ИсправленныйСчетФактура.ЦветТекста=  WEBЦвета.Серый;
		ЭлементыФормы.ИсправленныйСчетФактура.Гиперссылка= Ложь;
		
		Элементыформы.КнопкаСформироватьЭлектронныйДокумент.Доступность= Ложь;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(ИсправленныйСчетФактура) Тогда
		
		ЭлементыФормы.КорректировкаРеализации.Заголовок= КорректировкаРеализации;
		ЭлементыФормы.ИсправленныйСчетФактура.Заголовок= "Создать...";
		
		ЭлементыФормы.КорректировкаРеализации.Доступность= Истина;
		ЭлементыФормы.ИсправленныйСчетФактура.Доступность= Истина;
		
		ЭлементыФормы.ИсправленныйСчетФактура.ЦветТекста=  WEBЦвета.Синий;
		ЭлементыФормы.ИсправленныйСчетФактура.Гиперссылка= Истина;
		
		Элементыформы.КнопкаСформироватьЭлектронныйДокумент.Доступность= Ложь;
		
	Иначе
		
		ЭлементыФормы.КорректировкаРеализации.Заголовок= КорректировкаРеализации;
		ЭлементыФормы.ИсправленныйСчетФактура.Заголовок= ИсправленныйСчетФактура;
		
		ЭлементыФормы.КорректировкаРеализации.Доступность= Истина;
		ЭлементыФормы.ИсправленныйСчетФактура.ЦветТекста=  WEBЦвета.Синий;
		
		ЭлементыФормы.ИсправленныйСчетФактура.Гиперссылка= Истина;
		ЭлементыФормы.ИсправленныйСчетФактура.Доступность= Истина;
		
		Элементыформы.КнопкаСформироватьЭлектронныйДокумент.Доступность= Истина;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура КорректировкаРеализацииНажатие(Элемент)
	
	Если ЗначениеЗаполнено(КорректировкаРеализации) Тогда
		КорректировкаРеализации.ПолучитьОбъект().ПолучитьФорму().Открыть();
	Иначе
		
		КорректировкаОбъект= Модуль_ИнтеграцияОбщий.ПолучитьКорректировкуОбъект(ТипНовогоДокумента, ОснованиеКорректировкиРеализации);
		
		Если НЕ КорректировкаОбъект.Метаданные().ВводитсяНаОсновании.Содержит(ОснованиеКорректировкиРеализации.Метаданные()) Тогда
			
			Предупреждение("Документ ""Корректировка реализации"" не может вводиться
						   |на основании документа """+ТипЗнч(ОснованиеКорректировкиРеализации)+""".",,НаименованиеСистемы);
							
		Иначе
			
			КорректировкаОбъект.Заполнить(ОснованиеКорректировкиРеализации);
			КорректировкаОбъект.ПолучитьФорму().ОткрытьМодально();
			
			ОбновитьСсылки();
			УправлениеФормой();
			
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИсправленныйСчетФактураНажатие(Элемент)
	
	Если ЗначениеЗаполнено(ИсправленныйСчетФактура) Тогда
		ИсправленныйСчетФактура.ПолучитьОбъект().ПолучитьФорму().Открыть();
	Иначе
		
		СчетФактураОбъект= Документы.СчетФактураВыданный.СоздатьДокумент();
		
		СчетФактураОбъект.Заполнить(КорректировкаРеализации);
		
		ОбработкаСобытияПодключаемогоМодуля("ПослеСозданияСчетФактуры", Новый Структура("СчетФактураОбъект, РеализацииСсылка", СчетФактураОбъект, КорректировкаРеализации));
		
		СчетФактураОбъект.ПолучитьФорму().ОткрытьМодально();
		
		ОбновитьСсылки();
		УправлениеФормой();
		
	КонецЕсли;
	
КонецПроцедуры


Процедура КнопкаСформироватьЭлектронныйДокументНажатие(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ИсправленныйСчетФактура) Тогда
		Предупреждение("Необходимо создать счет-фактуру в 1С.",, НаименованиеСистемы);
		Возврат;
	КонецЕсли;
	
	Грузополучатель = Модуль_ИнтеграцияОбщий.ПолучитьГрузополучателяПоДокументу(ИсправленныйСчетФактура);
	Получатель = ?(ЗначениеЗаполнено(Грузополучатель), Грузополучатель, ИсправленныйСчетФактура.Контрагент);
	
	СтруктураПараметров  = ПолучитьСтруктуруПараметровДляОтправкиПакета();
	МассивДокументовПакета = Новый Массив;
	
	СтруктураПараметров.Вкл					= Истина;
	СтруктураПараметров.DocumentType 		= "Invoice";
	СтруктураПараметров.ToDepartmentId 		= "";
	СтруктураПараметров.ВыгружатьExel 		= Ложь;
	СтруктураПараметров.CustomDocumentId	= "";
	
	СтруктураПараметров.Документ 				= ИсправленныйСчетФактура;
	СтруктураПараметров.ТипДокумента			= "";
	СтруктураПараметров.ЭтоТестовыйДокумент 	= Ложь;
	СтруктураПараметров.ТребуетсяНомерЗаказа	= Ложь;
	СтруктураПараметров.НомерЗаказа 			= "";
	СтруктураПараметров.ДопСведения 			= "";
	СтруктураПараметров.ВнешняяПечатнаяФорма 	= Неопределено;
	
	Если ПолучитьБазовыйТипAttachmentVersion(ЭДОбъект.AttachmentVersion) = "UniversalTransferDocument" Тогда
		СтруктураПараметров.ФункцияУПД	= "СЧФ";
	КонецЕсли;
	
	СтруктураПараметров.Отправитель = ИсправленныйСчетФактура.Организация;
	СтруктураПараметров.Получатель  = Получатель;
	
	МассивДокументовПакета.Добавить(СтруктураПараметров);
	
	НоваяФорма = ПолучитьФорму("ФормаПечатногоДокумента", Этаформа, ИсправленныйСчетФактура);
	НоваяФорма.ЗакрыватьПриЗакрытииВладельца = Истина;
	Результат = НоваяФорма.СформироватьИПоказатьПечатнуюФорму(МассивДокументовПакета, , , , ИсправленныйСчетФактура);
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаЗакрытьНажатие(Элемент)
	
	Закрыть();
	
КонецПроцедуры


Процедура ОбновитьСсылки()
	
	СсылкиНаДокументы = Модуль_ИнтеграцияОбщий.ПолучитьСсылкиДляСозданияКорректировкиРеализации(ОснованиеКорректировкиРеализации, ТипНовогоДокумента);
	
	ОснованиеКорректировкиРеализации= СсылкиНаДокументы.КорректировкаРеализацииОснование;
	КорректировкаРеализации= 		  СсылкиНаДокументы.КорректировкаРеализацииСсылка;
	ИсправленныйСчетФактура= 		  СсылкиНаДокументы.ИсправленныйСчетФактураСсылка;
	
КонецПроцедуры













