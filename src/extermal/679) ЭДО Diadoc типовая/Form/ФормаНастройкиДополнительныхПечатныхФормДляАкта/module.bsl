
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
	Успех = Истина;
	результат = Новый Структура;
	
	Если  ИспользоватьСтандартнуюФормуАкта=0 Тогда
		результат.Вставить("ДиадокВнешняяПечатнаяФормаАкта", "");
	Иначе
		
		Если ЗначениеЗаполнено(ВнешняяПечатнаяФормаАкта)=Ложь Тогда
			Предупреждение("Не указана внешняя печатная форма 
			|для акта выполненных работ!", ,НаименованиеСистемы);
			Возврат;
		КонецЕсли;
		
		Результат.Вставить("ДиадокВнешняяПечатнаяФормаАкта", строка(ВнешняяПечатнаяФормаАкта.УникальныйИдентификатор())); 
		
	КонецЕсли;
	
	НастройкиВнешнихПечатныхФорм = результат;
	
	ЭтаФорма.закрыть();
	
КонецПроцедуры

Процедура ПриОткрытии()
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	ВнешняяПечатнаяФормаАкта = справочники.ВнешниеОбработки.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(НастройкиВнешнихПечатныхФорм.ДиадокВнешняяПечатнаяФормаАкта) Тогда
		ИспользоватьСтандартнуюФормуАкта = 1;
		Попытка 
			ВнешняяПечатнаяФормаАкта = ПолучитьМодульПрог("Модуль_ИнтеграцияОбщий").ВнешняяОбработкаПоGUID(НастройкиВнешнихПечатныхФорм.ДиадокВнешняяПечатнаяФормаАкта);
		Исключение 
			предупреждение("Не удалось найти внешнюю печатную форму.
			|Необходимо заново выбрать нужный элемент.",,НаименованиеСистемы);
		КонецПопытки;	
	иначе 
		ИспользоватьСтандартнуюФормуАкта = 0;
	КонецЕсли;	
		
	НастроитьДоступность();

КонецПроцедуры


Процедура НастроитьДоступность()
	Элементыформы.ВнешняяПечатнаяФормаАкта.Доступность = (ИспользоватьСтандартнуюФормуАкта=1);
КонецПроцедуры	

Процедура ИспользоватьСтандартнуюФормуСчетаПриИзменении(Элемент)
	НастроитьДоступность()
КонецПроцедуры

Функция  получитьСписокВнешнихПечатныхФорм(МетаданныеОбъекта)
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВнешниеОбработкиПринадлежность.Ссылка
	 	|ИЗ
	 	|	Справочник.ВнешниеОбработки.Принадлежность КАК ВнешниеОбработкиПринадлежность
	 	|ГДЕ
	 	|	//ВнешниеОбработкиПринадлежность.СсылкаОбъекта В(&МетаданныеОбъекта) и
	 	|	 ВнешниеОбработкиПринадлежность.Ссылка.ПометкаУдаления = Ложь
		|	И ВнешниеОбработкиПринадлежность.Ссылка.ВидОбработки = ЗНАЧЕНИЕ(Перечисление.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма)";
	 
	Запрос.УстановитьПараметр("МетаданныеОбъекта", МетаданныеОбъекта);
	 
	МассивВыбора =   запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Результат = Новый СписокЗначений;
	Результат.ЗагрузитьЗначения(МассивВыбора);
	
	Возврат Результат;	 
	 
КонецФункции	

Функция ВыбратьВнешнююФПИзСписка(СписокВыбора)
	фрм = справочники.ВнешниеОбработки.ПолучитьФормуВыбора();
	отбор = фрм.СправочникСписок.Отбор.Ссылка;
	отбор.видсравнения = видСравнения.ВСписке;
	отбор.использование = Истина;
	отбор.значение = СписокВыбора;
	
	Возврат фрм.ОткрытьМодально();

КонецФункции

Процедура ВнешняяПечатнаяФормаАктаНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	
	МетаданныеОбъекта = Новый списокЗначений;
	МетаданныеОбъекта.Добавить(Документы.РеализацияТоваровУслуг.ПустаяСсылка());

	СписокВыбора = получитьСписокВнешнихПечатныхФорм(МетаданныеОбъекта);
	выбранноеЗначение = ВыбратьВнешнююФПИзСписка(СписокВыбора);
	
	Если ЗначениеЗаполнено(выбранноеЗначение) Тогда 
		ВнешняяПечатнаяФормаАкта = выбранноеЗначение;
	КонецЕсли;
КонецПроцедуры
