Функция ПолучитьМассивПолейОтбора()
	
	МассивПолей=	Новый Массив();
	Если ИмяСписка = "СписокДокументовДляВыгрузки" Тогда
		МассивПолей.Добавить("Покупатель");
		МассивПолей.Добавить("Продавец");
		МассивПолей.Добавить("Грузополучатель");
		МассивПолей.Добавить("ВидДокумента");
		МассивПолей.Добавить("Номер");
	ИначеЕсли ИмяСписка = "ТаблицаДокументовВходящих"
		ИЛИ ИмяСписка = "ТаблицаДокументовИсходящих" Тогда
		МассивПолей.Добавить("Покупатель");
		МассивПолей.Добавить("Продавец");
		МассивПолей.Добавить("ЗначениеТипаДокумента");
		МассивПолей.Добавить("Номер");
		МассивПолей.Добавить("ЗначениеСостояниеДокументооборота");
	КонецЕсли;

	Возврат МассивПолей;
	
КонецФункции

Процедура ВосстановитьЗначениеОтбора(СтрокаТаблицы, СтрокаРодитель =  Неопределено) 
	
	Если СтрокаРодитель = Неопределено Тогда
		
		ВостановленныйОтборЗначение=	ВосстановитьЗначение(ИмяСписка + "/ОсновнойОтборДиадокЗначение" + СтрокаТаблицы.Имя);
		Если НЕ ВостановленныйОтборЗначение = Неопределено Тогда
			
			СтрокаТаблицы.Значение=	ВостановленныйОтборЗначение;
			
			ВостановленныйОтборИспользование=	ВосстановитьЗначение(ИмяСписка + "/ОсновнойОтборДиадокИспользование" + СтрокаТаблицы.Имя);
			Если НЕ ВостановленныйОтборИспользование = Неопределено Тогда
				СтрокаТаблицы.Использование=	ВостановленныйОтборИспользование;
			КонецЕсли;
			
			ВостановленныйОтборВидСравнения=	ВосстановитьЗначение(ИмяСписка + "/ОсновнойОтборДиадокВидСравнения" + СтрокаТаблицы.Имя);
			Если НЕ ВостановленныйОтборВидСравнения = Неопределено Тогда
				СтрокаТаблицы.ВидСравнения=	ВостановленныйОтборВидСравнения;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ВостановленныйОтборЗначение=	ВосстановитьЗначение(ИмяСписка + "/ДополнительныйОтборДиадокЗначение" + СтрокаРодитель.Имя + СтрокаТаблицы.Имя);
		Если НЕ ВостановленныйОтборЗначение = Неопределено Тогда
			
			СтрокаТаблицы.Значение=	ВостановленныйОтборЗначение;
			
			ВостановленныйОтборИспользование=	ВосстановитьЗначение(ИмяСписка + "/ДополнительныйОтборДиадокИспользование" + СтрокаРодитель.Имя + СтрокаТаблицы.Имя);
			Если НЕ ВостановленныйОтборИспользование = Неопределено Тогда
				СтрокаТаблицы.Использование=	ВостановленныйОтборИспользование;
			КонецЕсли;
			
			ВостановленныйОтборВидСравнения=	ВосстановитьЗначение(ИмяСписка + "/ДополнительныйОтборДиадокВидСравнения" + СтрокаРодитель.Имя + СтрокаТаблицы.Имя);
			Если НЕ ВостановленныйОтборВидСравнения = Неопределено Тогда
				СтрокаТаблицы.ВидСравнения=	ВостановленныйОтборВидСравнения;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьОтбор()
	
	Для каждого СтрокаТаблицы Из ОсновнойОтбор Цикл
		СохранитьЗначение(ИмяСписка + "/ОсновнойОтборДиадокЗначение" + СтрокаТаблицы.Имя, СтрокаТаблицы.Значение);
		СохранитьЗначение(ИмяСписка + "/ОсновнойОтборДиадокИспользование" + СтрокаТаблицы.Имя, СтрокаТаблицы.Использование);
		СохранитьЗначение(ИмяСписка + "/ОсновнойОтборДиадокВидСравнения" + СтрокаТаблицы.Имя, СтрокаТаблицы.ВидСравнения);
	КонецЦикла;
	
	Для каждого СтрокаРодитель Из ДополнительныйОтбор.Строки Цикл
		Для каждого СтрокаДерева Из СтрокаРодитель.Строки Цикл
			СохранитьЗначение(ИмяСписка + "/ДополнительныйОтборДиадокЗначение" + СтрокаРодитель.Имя + СтрокаДерева.Имя, СтрокаДерева.Значение);
			СохранитьЗначение(ИмяСписка + "/ДополнительныйОтборДиадокИспользование" + СтрокаРодитель.Имя + СтрокаДерева.Имя, СтрокаДерева.Использование);
			СохранитьЗначение(ИмяСписка + "/ДополнительныйОтборДиадокВидСравнения" + СтрокаРодитель.Имя + СтрокаДерева.Имя, СтрокаДерева.ВидСравнения);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьФлагИспользования(СтрокаРодитель)
	
	Если СтрокаРодитель <> Неопределено Тогда
		Если СтрокаРодитель.Строки.НайтиСтроки(Новый Структура("Использование", Истина)).Количество() > 0 Тогда
			СтрокаРодитель.Использование=	Истина;
		Иначе
			СтрокаРодитель.Использование=	Ложь;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеФормой();

КонецПроцедуры

Процедура ЗаполнитьТаблицуОтбора()
	
	ДоступныеПоляОтбора=	НачальныйОтборСтрок.ПолучитьДоступныеПоля();
	МассивПолейОтбора=		ПолучитьМассивПолейОтбора();
	
	Для каждого ПолеОтбора Из ДоступныеПоляОтбора Цикл
		Если НЕ МассивПолейОтбора.Найти(ПолеОтбора.Имя) = Неопределено Тогда
			ПолеОтбора.Отбор= Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого НачальноеПолеОтбора Из НачальныйОтборСтрок Цикл
		Если НЕ МассивПолейОтбора.Найти(НачальноеПолеОтбора.Имя) = Неопределено Тогда
			
			ДоступноеПоле=	ДоступныеПоляОтбора.Найти(НачальноеПолеОтбора.Имя);
			ДоступноеПоле.Отбор= Истина;
			
			СтрокаТаблицыОтбора=				ОсновнойОтбор.Добавить();
			СтрокаТаблицыОтбора.Имя=			НачальноеПолеОтбора.Имя;
			СтрокаТаблицыОтбора.Значение=		НачальноеПолеОтбора.Значение;
			СтрокаТаблицыОтбора.Использование=	НачальноеПолеОтбора.Использование;
			СтрокаТаблицыОтбора.ОписаниеТипа=	НачальноеПолеОтбора.ТипЗначения;
			СтрокаТаблицыОтбора.Представление=	НачальноеПолеОтбора.Представление;
			
			СписокДоступныхТипов=	ПолучитьСписокДоступныхВидовСравнения(СтрокаТаблицыОтбора);
			Если СписокДоступныхТипов.Количество() > 0 Тогда
				СтрокаТаблицыОтбора.ВидСравнения=	СписокДоступныхТипов[0].Значение;
			Иначе
				СтрокаТаблицыОтбора.ВидСравнения=	НачальноеПолеОтбора.ВидСравнения;
			КонецЕсли;

			ВосстановитьЗначениеОтбора(СтрокаТаблицыОтбора);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныйОтбор()
	
	СписокИспользуемыхДокументов=	ПолучитьСписокИспользуемыхДокументов();
	
	Для каждого ЭлементСписка Из СписокИспользуемыхДокументов Цикл
		
		СтрокаРодитель=	ДополнительныйОтбор.Строки.Добавить();
		СтрокаРодитель.Представление=	ЭлементСписка.Значение.Синоним;
		СтрокаРодитель.Имя=				ЭлементСписка.Значение.Имя;
		
		Для каждого РеквизитДокумента Из ЭлементСписка.Значение.Реквизиты Цикл
			
			СтрокаРеквизитов=	СтрокаРодитель.Строки.Добавить();
			СтрокаРеквизитов.Представление=	РеквизитДокумента.Синоним;
			СтрокаРеквизитов.ВидСравнения=	ВидСравнения.Равно;
			СтрокаРеквизитов.Имя=			РеквизитДокумента.Имя;
			
			ВосстановитьЗначениеОтбора(СтрокаРеквизитов, СтрокаРодитель);
			
		КонецЦикла;
		
		ОбновитьФлагИспользования(СтрокаРодитель);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОтборы()
	
	ЗаполнитьТаблицуОтбора();
	ЗаполнитьДополнительныйОтбор();
	
КонецПроцедуры

Процедура УправлениеФормой()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	
	Если ИмяСписка = "ТаблицаДокументовВходящих"
		ИЛИ ИмяСписка = "ТаблицаДокументовИсходящих" Тогда
		ЭлементыФормы.ПанельОтбор.Страницы.Реквизиты.Видимость=		Ложь;
		ЭлементыФормы.ПанельОтбор.Страницы.Реквизиты.Доступность=	Ложь;
		ЭлементыФормы.ПанельОтбор.ОтображениеЗакладок=				ОтображениеЗакладок.НеИспользовать;
	КонецЕсли;
	
	Если ИмяСписка = "СписокДокументовДляВыгрузки" Тогда
		
		КоличествоДопОтборов=	0;
		Для каждого СтрокаРодитель Из ДополнительныйОтбор.Строки Цикл
			КоличествоДопОтборов=	КоличествоДопОтборов + СтрокаРодитель.Строки.НайтиСтроки(Новый Структура("Использование", Истина)).Количество();
		КонецЦикла;
		
		Если КоличествоДопОтборов > 0 Тогда
			ЭлементыФормы.ПанельОтбор.Страницы.Реквизиты.Заголовок=	"Реквизиты " + "(" + КоличествоДопОтборов + ")";
		Иначе
			ЭлементыФормы.ПанельОтбор.Страницы.Реквизиты.Заголовок=	"Реквизиты";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЗаполнитьОтборы();
	УправлениеФормой();
	
КонецПроцедуры

Процедура ОсновнойОтборПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	УстановитьОграничениеТипаОсновнойОтбор();
		
КонецПроцедуры

Процедура ВыбратьВидДокументаВСписке()
	
	ТекущиеДанные=	ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные;
	
	СписокВыбора=	ПолучитьСписокИспользуемыхДокументов();
	
	ТекущаяПозиция=	СписокВыбора.НайтиПоЗначению(ТекущиеДанные.Значение);
	
	ВыбранныйЭлемент=	ВыбратьИзСписка(СписокВыбора, , ТекущаяПозиция);
	Если НЕ ВыбранныйЭлемент = Неопределено Тогда
		ТекущиеДанные.Использование=	Истина;
		ТекущиеДанные.Значение=			ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьТипДокументаВСписке()
	
	ТекущиеДанные=	ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные;
	
	СписокТиповДокументов=	Модуль_РаботаССерверомДиадок.ПолучитьСписокТиповДокументовДиадок();
	
	СписокВыбора=	Новый СписокЗначений;
	Для каждого ЭлементСписка Из СписокТиповДокументов Цикл
		СписокВыбора.Добавить(ЭлементСписка.Представление);
	КонецЦикла;
	
	ТекущаяПозиция=	СписокВыбора.НайтиПоЗначению(ТекущиеДанные.Значение);
	
	ВыбранныйЭлемент=	ВыбратьИзСписка(СписокВыбора, , ТекущаяПозиция);
	Если НЕ ВыбранныйЭлемент = Неопределено Тогда
		ТекущиеДанные.Использование=	Истина;
		ТекущиеДанные.Значение=			ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьСостояниеДокументооборотаВСписке()
	
	ТекущиеДанные= ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные;
	
	Если ИмяСписка = "ТаблицаДокументовВходящих" Тогда
		СтатусыДокументов= Модуль_РаботаССерверомДиадок.СтатусыДокументовДиадок().Inbound;
	Иначе
		СтатусыДокументов= Модуль_РаботаССерверомДиадок.СтатусыДокументовДиадок().Outbound;
	КонецЕсли;
	
	СписокВыбора= Новый СписокЗначений;
	Для Каждого КлючИЗначение ИЗ СтатусыДокументов Цикл
		СписокВыбора.Добавить(КлючИЗначение.Значение);
	КонецЦикла;
	
	ТекущаяПозиция= СписокВыбора.НайтиПоЗначению(ТекущиеДанные.Значение);
	
	ВыбранныйЭлемент= ВыбратьИзСписка(СписокВыбора,,ТекущаяПозиция);
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ТекущиеДанные.Использование= Истина;
		ТекущиеДанные.Значение=		 ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьКонтрагентаВСписке()
	
	ТекущиеДанные=	ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные;
	
	СписокАктивныхКонтрагентов=	Модуль_РаботаССерверомДиадок.ПолучитьСписокАктивныхКонтрагентовДиадок();
	
	СписокВыбора=	Новый СписокЗначений;
	Для каждого ЭлементСписка Из СписокАктивныхКонтрагентов Цикл
		СписокВыбора.Добавить(ЭлементСписка.Значение);
	КонецЦикла;
	
	ТекущаяПозиция=	СписокВыбора.НайтиПоЗначению(ТекущиеДанные.Значение);
	
	ВыбранныйЭлемент=	ВыбратьИзСписка(СписокВыбора, , ТекущаяПозиция);
	Если НЕ ВыбранныйЭлемент = Неопределено Тогда
		ТекущиеДанные.Использование=	Истина;
		ТекущиеДанные.Значение=			ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьОрганизациюВСписке()
	
	ТекущиеДанные=	ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные;
	
	СписокАктивныхКонтрагентов=	Модуль_РаботаССерверомДиадок.ПолучитьСписокОрганизацийДиадок();
	
	СписокВыбора=	Новый СписокЗначений;
	Для каждого ЭлементСписка Из СписокАктивныхКонтрагентов Цикл
		СписокВыбора.Добавить(ЭлементСписка.Значение);
	КонецЦикла;
	
	ТекущаяПозиция=	СписокВыбора.НайтиПоЗначению(ТекущиеДанные.Значение);
	
	ВыбранныйЭлемент=	ВыбратьИзСписка(СписокВыбора, , ТекущаяПозиция);
	Если НЕ ВыбранныйЭлемент = Неопределено Тогда
		ТекущиеДанные.Использование=	Истина;
		ТекущиеДанные.Значение=			ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновнойОтборЗначениеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные.Имя = "ВидДокумента" Тогда
		СтандартнаяОбработка=	Ложь;
		ВыбратьВидДокументаВСписке();
	ИначеЕсли ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные.Имя = "ЗначениеТипаДокумента" Тогда
		СтандартнаяОбработка=	Ложь;
		ВыбратьТипДокументаВСписке();
	ИначеЕсли ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные.Имя = "ЗначениеСостояниеДокументооборота" Тогда
		СтандартнаяОбработка=	Ложь;
		ВыбратьСостояниеДокументооборотаВСписке();
	ИначеЕсли ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные.Имя = "Продавец" Тогда
		СтандартнаяОбработка=	Ложь;
		Если ИмяСписка = "ТаблицаДокументовВходящих" Тогда
			ВыбратьКонтрагентаВСписке();
		ИначеЕсли ИмяСписка = "ТаблицаДокументовИсходящих" Тогда
			ВыбратьОрганизациюВСписке();
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные.Имя = "Покупатель" Тогда
		СтандартнаяОбработка=	Ложь;
		Если ИмяСписка = "ТаблицаДокументовВходящих" Тогда
			ВыбратьОрганизациюВСписке();
		ИначеЕсли ИмяСписка = "ТаблицаДокументовИсходящих" Тогда
			ВыбратьКонтрагентаВСписке();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновнойОтборПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ=	Истина;
КонецПроцедуры

Процедура ОсновнойОтборПередУдалением(Элемент, Отказ)
	Отказ=	Истина;
КонецПроцедуры

Процедура ОсновнойОтборЗначениеОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные.Имя = "ВидДокумента"
		И ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка=	Ложь;
		ВыбратьВидДокументаВСписке();
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокДоступныхВидовСравнения(СтрокаТаблицыОтбора)
	
	СписокВидовСравнения=	Новый СписокЗначений;
	
	Если ТипЗнч(СтрокаТаблицыОтбора.Значение) = Тип("Строка") Тогда
		Если СтрокаТаблицыОтбора.ОписаниеТипа.КвалификаторыСтроки.Длина > 0 Тогда
			СписокВидовСравнения.Добавить(ВидСравнения.Равно);
			СписокВидовСравнения.Добавить(ВидСравнения.НеРавно);
			СписокВидовСравнения.Добавить(ВидСравнения.ВСписке);
			СписокВидовСравнения.Добавить(ВидСравнения.НеВСписке);
        КонецЕсли;
		СписокВидовСравнения.Добавить(ВидСравнения.Содержит);
		СписокВидовСравнения.Добавить(ВидСравнения.НеСодержит);
	ИначеЕсли ТипЗнч(СтрокаТаблицыОтбора.Значение) = Тип("Булево") Тогда
		СписокВидовСравнения.Добавить(ВидСравнения.Равно);
		СписокВидовСравнения.Добавить(ВидСравнения.НеРавно);
	ИначеЕсли ТипЗнч(СтрокаТаблицыОтбора.Значение) = Тип("Число") Тогда
		СписокВидовСравнения.Добавить(ВидСравнения.Равно);
		СписокВидовСравнения.Добавить(ВидСравнения.НеРавно);
		СписокВидовСравнения.Добавить(ВидСравнения.Больше);
		СписокВидовСравнения.Добавить(ВидСравнения.БольшеИлиРавно);
		СписокВидовСравнения.Добавить(ВидСравнения.Меньше);
		СписокВидовСравнения.Добавить(ВидСравнения.МеньшеИлиРавно);
	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(СтрокаТаблицыОтбора.Значение))
		ИЛИ ТипЗнч(СтрокаТаблицыОтбора.Значение) = Тип("СписокЗначений") Тогда
		СписокВидовСравнения.Добавить(ВидСравнения.Равно);
		СписокВидовСравнения.Добавить(ВидСравнения.НеРавно);
		СписокВидовСравнения.Добавить(ВидСравнения.ВСписке);
		СписокВидовСравнения.Добавить(ВидСравнения.НеВСписке);
		//СписокВидовСравнения.Добавить(ВидСравнения.ВИерархии);
		//СписокВидовСравнения.Добавить(ВидСравнения.НеВИерархии);
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(СтрокаТаблицыОтбора.Значение)) Тогда
		СписокВидовСравнения.Добавить(ВидСравнения.Равно);
		СписокВидовСравнения.Добавить(ВидСравнения.НеРавно);
	КонецЕсли;
	
	Возврат СписокВидовСравнения;
	
КонецФункции

Процедура ОсновнойОтборВидСравненияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=	Ложь;
	
	ТекущиеДанные=	ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные;
	
	СписокВыбора=	ПолучитьСписокДоступныхВидовСравнения(ТекущиеДанные);
	
	ВыбранныйЭлемент=	ВыбратьИзСписка(СписокВыбора);
	Если НЕ ВыбранныйЭлемент = Неопределено Тогда
		ТекущиеДанные.ВидСравнения=	ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
	УстановитьОграничениеТипаОсновнойОтбор();
	
КонецПроцедуры

Процедура ДополнительныйОтборПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	УстановитьОграничениеТипаДопОтбор();
	
КонецПроцедуры

Процедура ДополнительныйОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные.Родитель = Неопределено Тогда
		СтандартнаяОбработка=	Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнительныйОтборЗначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные.Использование=	Истина;
	Иначе
		ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные.Использование=	Ложь;
	КонецЕсли;
		
КонецПроцедуры

Процедура ДополнительныйОтборЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные.Использование=	Ложь;
	
КонецПроцедуры

Процедура ОсновнойОтборЗначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные.Использование=	Истина;
	Иначе
		ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные.Использование=	Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнительныйОтборПередНачаломИзменения(Элемент, Отказ)
	
	Если ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные.Родитель = Неопределено Тогда
		Если ЭлементыФормы.ДополнительныйОтбор.ТекущаяКолонка.Имя = "Использование" Тогда
			ФлагИспользования=	НЕ ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные.Использование;
			Для каждого СтрокаДерева Из ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные.Строки Цикл
				СтрокаДерева.Использование=	ФлагИспользования;
			КонецЦикла;
		Иначе
			Отказ=	Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновнойОтборЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные.Использование=	Ложь;
	
КонецПроцедуры

Процедура ДополнительныйОтборВидСравненияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=	Ложь;
	
	СписокВыбора=	Новый СписокЗначений;
	
	ТекущиеДанные=	ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные;
	
	СписокВыбора.Добавить(ВидСравнения.Равно);
	СписокВыбора.Добавить(ВидСравнения.НеРавно);
	
	ВыбранныйЭлемент=	ВыбратьИзСписка(СписокВыбора);
	Если НЕ ВыбранныйЭлемент = Неопределено Тогда
		ТекущиеДанные.ВидСравнения=	ВыбранныйЭлемент.Значение;
	КонецЕсли;

	УстановитьОграничениеТипаДопОтбор();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПрименить(Кнопка)
	
	СохранитьОтбор();
	Закрыть(Истина);
	
КонецПроцедуры

Процедура ДополнительныйОтборПередУдалением(Элемент, Отказ)
	Отказ=	Истина;
КонецПроцедуры

Процедура ДополнительныйОтборПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	Отказ=	Истина;
КонецПроцедуры

Процедура ДополнительныйОтборПриИзмененииФлажка(Элемент, Колонка)
	
	ОбновитьФлагИспользования(ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные.Родитель);
	
КонецПроцедуры

Процедура УстановитьОграничениеТипаОсновнойОтбор()
	
	ЭлементУправления=	ЭлементыФормы.ОсновнойОтбор.Колонки.Значение.ЭлементУправления;
	ТекущиеДанные=		ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные;
	НайденноеПоле=		НачальныйОтборСтрок.Найти(ТекущиеДанные.Имя);
	
	Если ТекущиеДанные.ВидСравнения = ВидСравнения.ВСписке
		ИЛИ ТекущиеДанные.ВидСравнения = ВидСравнения.НеВСписке Тогда
		
		МассивТипов=	Новый Массив();
		МассивТипов.Добавить(Тип("СписокЗначений"));
		ЭлементУправления.ОграничениеТипа=	Новый ОписаниеТипов(МассивТипов);
		
		Если ТипЗнч(ТекущиеДанные.Значение) = Тип("СписокЗначений") Тогда
			СписокЗначений=	ТекущиеДанные.Значение;
		Иначе
			СписокЗначений=	Новый СписокЗначений;
			СписокЗначений.Добавить(ТекущиеДанные.Значение);
		КонецЕсли;
		
		ТекущиеДанные.Значение=	ЭлементУправления.ОграничениеТипа.ПривестиЗначение(СписокЗначений);
		
		ЭлементУправления.ТипЗначенияСписка=	НайденноеПоле.ТипЗначения;
		
	Иначе
		
		Если ТипЗнч(ТекущиеДанные.Значение) = Тип("СписокЗначений")
			И ТекущиеДанные.Значение.Количество() > 0 Тогда
			ТекущееЗначение=	ТекущиеДанные.Значение[0].Значение;
		Иначе
			ТекущееЗначение=	ТекущиеДанные.Значение;
		КонецЕсли;
		
		ЭлементУправления.ОграничениеТипа=	Новый ОписаниеТипов(НайденноеПоле.ТипЗначения.Типы());
		ТекущиеДанные.Значение=	ЭлементУправления.ОграничениеТипа.ПривестиЗначение(ТекущееЗначение);
		
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Значение) = Тип("Строка") 
		ИЛИ ТипЗнч(ТекущиеДанные.Значение) = Тип("Число") Тогда
		Если ТекущиеДанные.Имя = "ВидДокумента"
			ИЛИ ТекущиеДанные.Имя = "ЗначениеТипаДокумента"
			ИЛИ ТекущиеДанные.Имя = "ЗначениеСостояниеДокументооборота"
			ИЛИ ТекущиеДанные.Имя = "Продавец"
			ИЛИ ТекущиеДанные.Имя = "Покупатель" Тогда
			ЭлементУправления.КнопкаСпискаВыбора=	Истина;
			ЭлементУправления.РедактированиеТекста=	Ложь;
		Иначе
			ЭлементУправления.КнопкаСпискаВыбора=	Ложь;
			ЭлементУправления.РедактированиеТекста=	Истина;
		КонецЕсли;
		ЭлементУправления.КнопкаВыбора=			Ложь;
	Иначе
		ЭлементУправления.КнопкаСпискаВыбора=	Ложь;
		ЭлементУправления.КнопкаВыбора=			Истина;
		ЭлементУправления.РедактированиеТекста=	Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОграничениеТипаДопОтбор()
	
	ЭлементУправления=	ЭлементыФормы.ДополнительныйОтбор.Колонки.Значение.ЭлементУправления;
	ТекущиеДанные=	ЭлементыФормы.ДополнительныйОтбор.ТекущиеДанные;
	
	Если ТекущиеДанные.Родитель = Неопределено Тогда
		
		ЭлементУправления.ВыбиратьТип=	Ложь;
		ЭлементУправления.КнопкаВыбора=	Ложь;
		ЭлементУправления.КнопкаОчистки=	Ложь;
		
	Иначе		
		
		МетаданныеРодитель=	Метаданные.Документы[ТекущиеДанные.Родитель.Имя];
		МетаданныеРеквизит=	МетаданныеРодитель.Реквизиты[ТекущиеДанные.Имя];
		
		ЭлементУправления.ОграничениеТипа=	Новый ОписаниеТипов(МетаданныеРеквизит.Тип);
		Если ТекущиеДанные.Значение = Неопределено Тогда
			ТекущиеДанные.Значение=	ЭлементУправления.ОграничениеТипа.ПривестиЗначение(ТекущиеДанные.Значение);
		КонецЕсли;
		
		ЭлементУправления.РедактированиеТекста=	Истина;
		Если ТипЗнч(ТекущиеДанные.Значение) = Тип("Строка") 
			ИЛИ ТипЗнч(ТекущиеДанные.Значение) = Тип("Число") Тогда
			ЭлементУправления.КнопкаСпискаВыбора=	Ложь;
			ЭлементУправления.КнопкаВыбора=			Ложь;
		Иначе
			ЭлементУправления.КнопкаСпискаВыбора=	Ложь;
			ЭлементУправления.КнопкаВыбора=			Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновнойОтборПриАктивизацииКолонки(Элемент)
	
	УстановитьОграничениеТипаОсновнойОтбор();
	
КонецПроцедуры

Функция ПолучитьСписокИспользуемыхДокументов() Экспорт
	
	СписокДокументов=	Новый СписокЗначений;
	
	Если Метаданные.Документы.Найти("РеализацияТоваровУслуг") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.РеализацияТоваровУслуг);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("СчетФактураВыданный") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.СчетФактураВыданный);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("СчетНаОплатуПокупателю") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.СчетНаОплатуПокупателю);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("КорректировкаРеализации") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.КорректировкаРеализации);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ОказаниеУслуг") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.ОказаниеУслуг);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("АктСверкиВзаиморасчетов") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.АктСверкиВзаиморасчетов);
	КонецЕсли;

	Если Метаданные.Документы.Найти("АктОбОказанииПроизводственныхУслуг") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.АктОбОказанииПроизводственныхУслуг);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ОтчетКомиссионераОПродажах") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.ОтчетКомиссионераОПродажах);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ОтчетКомитентуОПродажах") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.ОтчетКомитентуОПродажах);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ВозвратТоваровПоставщику") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.ВозвратТоваровПоставщику);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ВозвратТоваровПоставщикуИзНТТ") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.ВозвратТоваровПоставщикуИзНТТ);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ОтражениеНачисленияНДС") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.ОтражениеНачисленияНДС);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ОтражениеРеализацииТоваровИУслугНДС") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.ОтражениеРеализацииТоваровИУслугНДС);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("РеализацияУслугПоПереработке") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.РеализацияУслугПоПереработке);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ПередачаОС") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.ПередачаОС);
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ЗаказПокупателя") <> Неопределено Тогда
		СписокДокументов.Добавить(Метаданные.Документы.ЗаказПокупателя);
	КонецЕсли;
	
	Возврат СписокДокументов;
	
КонецФункции

Функция ПолучитьСписокЭлементов(ТекущиеДанные);
	
	СписокЭлементов=	Новый СписокЗначений;
	
	Если ТекущиеДанные.Имя = "ВидДокумента" Тогда
		
		СписокИспользуемыхДокументов=	ПолучитьСписокИспользуемыхДокументов();
		Для каждого ЭлементСпискаДокументов Из СписокИспользуемыхДокументов Цикл
			СписокЭлементов.Добавить(ЭлементСпискаДокументов.Значение.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТекущиеДанные.Имя = "ЗначениеТипаДокумента" Тогда
		
		СписокТипов=	Модуль_РаботаССерверомДиадок.ПолучитьСписокТиповДокументовДиадок();
		Для каждого ЭлементСпискаТипов Из СписокТипов Цикл
			СписокЭлементов.Добавить(ЭлементСпискаТипов.Представление);
		КонецЦикла;
		
	ИначеЕсли ТекущиеДанные.Имя = "ЗначениеСостояниеДокументооборота" Тогда
		
		Если ИмяСписка = "ТаблицаДокументовВходящих" Тогда
			СписокСостояний = Модуль_РаботаССерверомДиадок.СтатусыДокументовДиадок().Inbound;
		Иначе
			СписокСостояний = Модуль_РаботаССерверомДиадок.СтатусыДокументовДиадок().Outbound;
		КонецЕсли;
		Для Каждого КлючИЗначение ИЗ СписокСостояний Цикл
			СписокЭлементов.Добавить(КлючИЗначение.Значение);
		КонецЦикла;
		
	ИначеЕсли ТекущиеДанные.Имя = "Продавец" Тогда
		
		Если ИмяСписка = "ТаблицаДокументовВходящих" Тогда
			СписокПродавцов=	Модуль_РаботаССерверомДиадок.ПолучитьСписокАктивныхКонтрагентовДиадок();
		ИначеЕсли ИмяСписка = "ТаблицаДокументовИсходящих" Тогда
			СписокПродавцов=	Модуль_РаботаССерверомДиадок.ПолучитьСписокОрганизацийДиадок();
		КонецЕсли;
		
		Для каждого ЭлементСпискаКонтрагентов Из СписокПродавцов Цикл
			СписокЭлементов.Добавить(ЭлементСпискаКонтрагентов.Значение);
		КонецЦикла;
		
	ИначеЕсли ТекущиеДанные.Имя = "Покупатель" Тогда
		
		Если ИмяСписка = "ТаблицаДокументовВходящих" Тогда
			СписокПокупателей=	Модуль_РаботаССерверомДиадок.ПолучитьСписокОрганизацийДиадок();
		ИначеЕсли ИмяСписка = "ТаблицаДокументовИсходящих" Тогда
			СписокПокупателей=	Модуль_РаботаССерверомДиадок.ПолучитьСписокАктивныхКонтрагентовДиадок();
		КонецЕсли;
		
		Для каждого ЭлементСпискаОрганизаций Из СписокПокупателей Цикл
			СписокЭлементов.Добавить(ЭлементСпискаОрганизаций.Значение);
		КонецЦикла;
		
	КонецЕсли;
		
	Возврат СписокЭлементов;
	
КонецФункции

Процедура ОсновнойОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные=	ЭлементыФормы.ОсновнойОтбор.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Значение) = Тип("СписокЗначений") И
		ТекущиеДанные.ОписаниеТипа.КвалификаторыСтроки.Длина > 0 Тогда
		
		СтандартнаяОбработка=	Ложь;
		
		ФормаВводаСписка=	ПолучитьФорму("ФормаВводаСпискаЗначений", ЭтаФорма);
		ФормаВводаСписка.СписокЭлементов=			ПолучитьСписокЭлементов(ТекущиеДанные);
		ФормаВводаСписка.СписокВыбранныхЭлементов=	ТекущиеДанные.Значение;
		
		Результат=	ФормаВводаСписка.ОткрытьМодально();
		Если Результат = Истина Тогда
			ТекущиеДанные.Значение.Очистить();
			Для каждого ЭлементСписка Из ФормаВводаСписка.СписокЭлементов Цикл
				Если ЭлементСписка.Пометка = Истина Тогда
					ТекущиеДанные.Значение.Добавить(ЭлементСписка.Значение);
				КонецЕсли;
			КонецЦикла;
			ТекущиеДанные.Использование=	Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнительныйОтборПриАктивизацииКолонки(Элемент)
	
	УстановитьОграничениеТипаДопОтбор();
	
КонецПроцедуры

МассивОтборСтрок=	Новый Массив();