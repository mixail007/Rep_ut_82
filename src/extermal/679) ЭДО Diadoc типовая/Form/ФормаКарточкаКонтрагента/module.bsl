
Процедура ОткрытьКарточку(ПарОбъектДД, ПарОрганизация) Экспорт
	
	ОбъектДД = ПарОбъектДД;
	Организация = парОрганизация;
	
	КонтрагентВДиадокеПредставление = ОбъектДД.Name + " (" + ОбъектДД.Inn + " / " + ОбъектДД.Kpp + ")";
	
	ТаблицаЗначенийДляМаршрутизации =   ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ВернутьТаблицуМаршрутизацииДляКонтрагента(Организация, ОбъектДД.id,ОбъектДД.Organization.id);

	ТаблицаМаршрутизации.Строки.Очистить();
	Для каждого стр из ТаблицаЗначенийДляМаршрутизации цикл 
		СтрокаДерева = ТаблицаМаршрутизации.Строки.Добавить();
		СтрокаДерева.Контрагент 				= стр.Контрагент;
		СтрокаДерева.НаименованиеПодразделения	= стр.НаименованиеПодразделения;
		СтрокаДерева.ToDepartmentID				= стр.ToDepartmentID;
		
	    ТаблицаМаршрутизацииПоДогворам = стр.ТаблицаМаршрутизацииПоДоговорам;
		Для каждого СтрТаблицы из  ТаблицаМаршрутизацииПоДогворам цикл 
			СтрДог = СтрокаДерева.Строки.Добавить();
			СтрДог.Контрагент 				 = СтрТаблицы.Договор;
			СтрДог.НаименованиеПодразделения = СтрТаблицы.НаименованиеПодразделения;
			СтрДог.ToDepartmentID 			 = СтрТаблицы.ToDepartmentID;
		КонецЦикла;
		Элементыформы.ТаблицаМаршрутизации.Развернуть(СтрокаДерева); 
	КонецЦикла;
	
	Если (ТаблицаМаршрутизации.Строки.количество()=0) или ((ТаблицаМаршрутизации.Строки.количество()=1) и  (ТаблицаМаршрутизации.Строки[0].ToDepartmentID="") и (ТаблицаМаршрутизации.Строки[0].строки.количество()=0) ) Тогда 
		КонтрагентСсылка = ?(ТаблицаМаршрутизации.Строки.количество()=1, ТаблицаМаршрутизации.Строки[0].Контрагент, "");
		КонтрагентПоследний = КонтрагентСсылка;
		настроитьмаршрутизацию = Ложь;
	Иначе 
		НастроитьМаршрутизацию = Истина;
	КонецЕсли;
	
	Status=	ОбъектДД.GetStatus();
	
	Открыть();
	
КонецПроцедуры

Процедура КонтрагентСсылкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КонтрагентСсылкаВыбранный = ПолучитьФорму("ФормаВыбораКонтрагента").ВыбратьКонтрагента(ОбъектДД.Organization, ОбъектДД.INN);
	Если ЗначениеЗаполнено(КонтрагентСсылкаВыбранный) Тогда
		КонтрагентСсылка = КонтрагентСсылкаВыбранный;
	КонецЕсли;
		
	Если КонтрагентСсылка <> КонтрагентПоследний Тогда
		
		Если ЗначениеЗаполнено(КонтрагентПоследний) Тогда
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_CounteragentBoxID_для_Контрагент(КонтрагентПоследний, "", ОбъектДД.Organization.Id);
			ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(КонтрагентПоследний, "ДиадокИдентификаторЭДО", "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтрагентСсылка) Тогда
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_CounteragentBoxID_для_Контрагент(КонтрагентСсылка, ОбъектДД.Id, ОбъектДД.Organization.Id);
			ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(КонтрагентСсылка, "ДиадокИдентификаторЭДО", ОбъектДД.FnsParticipantId);
		КонецЕсли;
		
		КонтрагентПоследний = КонтрагентСсылка;
		
		Оповестить("ОбновитьСписокКААктивныеСтрокаКА",  ОбъектДД, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтрагентСсылкаОчистка(Элемент, СтандартнаяОбработка)
	
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(КонтрагентПоследний) Тогда
		ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_CounteragentBoxID_для_Контрагент(КонтрагентПоследний, "", ОбъектДД.Organization.Id);
		ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(КонтрагентПоследний, "ДиадокИдентификаторЭДО", "");
	КонецЕсли;
	
    КонтрагентПоследний = КонтрагентСсылка;
   	Оповестить("ОбновитьСписокКААктивныеСтрокаКА", ОбъектДД, ЭтаФорма);

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзменениеСертификата" Тогда 
		ЭтаФорма.Закрыть();
	КонецЕсли;

КонецПроцедуры

Процедура УдалитьСтроку(Строка)
	
	НаименованиеСправочникаДоговоров = ПолучитьПрофильКонфигурации().НаименованиеСправочникаДоговоров;
	
	Если  Строка <> Неопределено Тогда 
		
		Если типЗнч(Строка.Контрагент)=тип("СправочникСсылка."+НаименованиеСправочникаДоговоров) Тогда
	    	ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляДоговора(Строка.Контрагент,  "", "", Ложь);
        	удаляемыестроки =   Строка.Родитель.Строки.НайтиСтроки(Новый Структура("Контрагент", Строка.Контрагент));
			Для каждого стр из  удаляемыестроки цикл 
				Строка.Родитель.Строки.Удалить(стр);
			КонецЦикла;	
			
		Иначе 	
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_CounteragentBoxID_для_Контрагент(Строка.Контрагент, "", ОбъектДД.Organization.Id);
			ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(Строка.Контрагент, "ДиадокИдентификаторЭДО", "");
	    	ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляКонтрагента(Строка.Контрагент, ОбъектДД.Organization.id, "", "");
        	удаляемыестроки =   ТаблицаМаршрутизации.Строки.НайтиСтроки(Новый Структура("Контрагент", Строка.Контрагент));
			Для каждого стр из  удаляемыестроки цикл 
				ТаблицаМаршрутизации.строки.Удалить(стр);
			КонецЦикла;	
		КонецЕсли;	
		
	КонецЕсли;	

КонецПроцедуры	

Процедура КоманднаяПанель2Удалить(Кнопка)

	Если элементыформы.ТаблицаМаршрутизации.ТекущиеДанные.строки.количество() > 0 Тогда 
		Пока элементыформы.ТаблицаМаршрутизации.ТекущиеДанные.строки.количество() > 0  цикл 
			 УдалитьСтроку(элементыформы.ТаблицаМаршрутизации.ТекущиеДанные.строки[0]);
        КонецЦикла;
	КонецЕсли;
	
	УдалитьСтроку(элементыформы.ТаблицаМаршрутизации.ТекущиеДанные);
	
	Оповестить("ОбновитьСписокКААктивныеСтрокаКА", ОбъектДД, ЭтаФорма);
	
КонецПроцедуры

Процедура ОткрытьКарточкуДоговора(текущаяСтрока)
	фрм = ЭтотОбъект.ПолучитьФорму("ФормаНастройкиМаршрутизацииПоДоговору").ОткрытьКарточку(ОбъектДД,Организация, текущаяСтрока.родитель.Контрагент , текущаяСтрока.контрагент, текущаяСтрока.НаименованиеПодразделения, текущаяСтрока.ToDepartmentID);
	Если фрм <>Неопределено Тогда 
		//установим параметры
		
		Выборкатаблицы = текущаяСтрока.родитель.строки.НайтиСтроки(Новый Структура("Контрагент", фрм.Договор));
		Если  (фрм.Договор<> текущаяСтрока.Контрагент) и (выборкатаблицы.Количество()>0) Тогда
			предупреждение("Карточка договора уже добавлена в таблицу маршрутизации!", ,НаименованиеСистемы);
		Иначе 
			Если фрм.Договор<> текущаяСтрока.контрагент Тогда 
				//убираем связку со старым контрагентом
		  	    ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляДоговора(текущаяСтрока.контрагент, "", "", Ложь);
			КонецЕсли;	
			
	  	    ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляДоговора(фрм.договор,  фрм.ПодразделениеКонтрагента, фрм.DepartmentID, ИспользоватьБелыйЛистДоговоров);
			
			текущаяСтрока.Контрагент 					= фрм.Договор;
			текущаяСтрока.НаименованиеПодразделения 	= фрм.ПодразделениеКонтрагента;
			текущаяСтрока.ToDepartmentID 				= фрм.DepartmentID
		КонецЕсли;	
		
	КонецЕсли;	


КонецПроцедуры

Процедура ОткрытьКарточкуКонтрагента(текущаяСтрока)
	фрм = ЭтотОбъект.ПолучитьФорму("ФормаНастройкиМаршрутизации").ОткрытьКарточку(ОбъектДД,текущаяСтрока.контрагент, текущаяСтрока.НаименованиеПодразделения, текущаяСтрока.ToDepartmentID);
	Если фрм <>Неопределено Тогда 
		//установим параметры
		
		Выборкатаблицы = ТаблицаМаршрутизации.строки.НайтиСтроки(Новый Структура("Контрагент", фрм.контрагент));
		Если  (фрм.контрагент<> текущаяСтрока.контрагент) и (выборкатаблицы.Количество()>0) Тогда
			предупреждение("Карточка контрагента уже добавлена в таблицу маршрутизации!", ,НаименованиеСистемы);
		Иначе 
			Если фрм.контрагент<> текущаяСтрока.контрагент Тогда 
				//убираем связку со старым контрагентом
				ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_CounteragentBoxID_для_Контрагент(текущаяСтрока.контрагент, "", ОбъектДД.Organization.Id);
				ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(текущаяСтрока.контрагент, "ДиадокИдентификаторЭДО", "");
		  	    ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляКонтрагента(текущаяСтрока.контрагент, ОбъектДД.Organization.id, "", "");
			КонецЕсли;	
			
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_CounteragentBoxID_для_Контрагент(фрм.контрагент, ОбъектДД.Id, ОбъектДД.Organization.Id);
			ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(фрм.контрагент, "ДиадокИдентификаторЭДО", ОбъектДД.FnsParticipantId);
	  	    ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляКонтрагента(фрм.контрагент, ОбъектДД.Organization.id, фрм.ПодразделениеКонтрагента, фрм.DepartmentID);
			
			текущаяСтрока.Контрагент 					= фрм.контрагент;
			текущаяСтрока.НаименованиеПодразделения 	= фрм.ПодразделениеКонтрагента;
			текущаяСтрока.ToDepartmentID 				= фрм.DepartmentID
		КонецЕсли;	
		
	КонецЕсли;	

КонецПроцедуры

Процедура ТаблицаМаршрутизацииПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	НаименованиеСправочникаДоговоров = ПолучитьПрофильКонфигурации().НаименованиеСправочникаДоговоров;
	текущаяСтрока =    элементыформы.ТаблицаМаршрутизации.ТекущиеДанные;
	Если ТипЗнч(текущаяСтрока.Контрагент) = тип("СправочникСсылка."+НаименованиеСправочникаДоговоров) Тогда 
		ОткрытьКарточкуДоговора(текущаяСтрока)
	Иначе 
		ОткрытьКарточкуКонтрагента(текущаяСтрока)
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель2Добавить(Кнопка)

	фрм = ЭтотОбъект.ПолучитьФорму("ФормаНастройкиМаршрутизации").ОткрытьКарточку(ОбъектДД, "", "", "");
	Если фрм <>Неопределено Тогда 
		//установим параметры
		
		Выборкатаблицы = ТаблицаМаршрутизации.Строки.НайтиСтроки(Новый Структура("Контрагент", фрм.контрагент));
		Если выборкатаблицы.Количество()>0 Тогда
			предупреждение("Контрагент уже добавлен в таблицу маршрутизации!",,НаименованиеСистемы);
		Иначе 
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Установить_CounteragentBoxID_для_Контрагент(фрм.контрагент, ОбъектДД.Id, ОбъектДД.Organization.Id);
			ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(фрм.контрагент, "ДиадокИдентификаторЭДО", ОбъектДД.FnsParticipantId);
	  	    ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляКонтрагента(фрм.контрагент, ОбъектДД.Organization.id, фрм.ПодразделениеКонтрагента, фрм.DepartmentID);
			стр =   ТаблицаМаршрутизации.строки.Добавить();
			стр.Контрагент 					= фрм.контрагент;
			стр.НаименованиеПодразделения 	= фрм.ПодразделениеКонтрагента;
			стр.ToDepartmentID 				= фрм.DepartmentID
		КонецЕсли;	
		
	КонецЕсли;	
КонецПроцедуры

Процедура КоманднаяПанель2ДобавитьДоговор(Кнопка)

	НаименованиеСправочникаДоговоров = ПолучитьПрофильКонфигурации().НаименованиеСправочникаДоговоров;

	текСтрока = Элементыформы.ТаблицаМаршрутизации.ТекущиеДанные;
	Если текстрока = Неопределено Тогда 
		предупреждение("Не добавлен контрагент 1С", , НаименованиеСистемы);
		Возврат;
	ИначеЕсли ТипЗнч(Текстрока.Контрагент) = тип("СправочникСсылка."+НаименованиеСправочникаДоговоров) Тогда 
		ТекущийКонтрагент = ТекСтрока.Родитель.Контрагент
	Иначе 
		ТекущийКонтрагент = ТекСтрока.Контрагент;
	КонецЕсли;	
		
	фрм = ЭтотОбъект.ПолучитьФорму("ФормаНастройкиМаршрутизацииПоДоговору").ОткрытьКарточку(ОбъектДД, Организация, ТекущийКонтрагент, "", "", "");
	Если фрм <>Неопределено Тогда 
		//установим параметры
		
		стрКонтрагента  = ?(ТипЗнч(Текстрока.Контрагент) = тип("СправочникСсылка."+НаименованиеСправочникаДоговоров),Текстрока.Родитель, Текстрока);
		Выборкатаблицы = стрКонтрагента.Строки.НайтиСтроки(Новый Структура("Контрагент", фрм.Договор));
		Если выборкатаблицы.Количество()>0 Тогда
			предупреждение("Договор уже добавлен в таблицу маршрутизации!",,НаименованиеСистемы);
		Иначе 
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляДоговора(фрм.Договор,  фрм.ПодразделениеКонтрагента, фрм.DepartmentID, ИспользоватьБелыйЛистДоговоров);
			стр = стрКонтрагента.строки.добавить();
			стр.Контрагент 					= фрм.Договор;
			стр.НаименованиеПодразделения 	= фрм.ПодразделениеКонтрагента;
			стр.ToDepartmentID 				= фрм.DepartmentID;
			
			Элементыформы.ТаблицаМаршрутизации.Развернуть(стрКонтрагента);
		КонецЕсли;	
		
	КонецЕсли;	
КонецПроцедуры

Процедура УправлениеФормой()
	
	Если ТаблицаМаршрутизации.Строки.Количество() > 0 Тогда
		ИспользоватьБелыйЛистДоговоров=	ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ПолучитьЗначениеИспользованияБелогоСпискаДоговоров(ТаблицаМаршрутизации.Строки[0].Контрагент);
	КонецЕсли;
	
	УстановитьРежимСверткиЭлементаУправления(Элементыформы.ПанельЕдиничногоОтображения,
	?(НастроитьМаршрутизацию ИЛИ ИспользоватьБелыйЛистДоговоров,  РежимСверткиЭлементаУправления.Верх, РежимСверткиЭлементаУправления.Нет));
	
	УстановитьРежимСверткиЭлементаУправления(Элементыформы.ПанельТаблицаМаршрутизации,
	?(НастроитьМаршрутизацию ИЛИ ИспользоватьБелыйЛистДоговоров,  РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх));

	Если Status = "IsRejectedByMe" ИЛИ Status = "IsInvitedByMe" Тогда
		КомментарийДружбы=	ОбъектДД.MessageToCounteragent();
	ИначеЕсли Status = "InvitesMe" ИЛИ Status = "RejectsMe" Тогда
		КомментарийДружбы=	ОбъектДД.MessageFromCounteragent();
	КонецЕсли;
	
	Если Status = "InvitesMe"
		ИЛИ Status = "RejectsMe"
		ИЛИ Status = "IsRejectedByMe" Тогда
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Принять.Доступность=	Истина;
		Если Status = "InvitesMe" Тогда
			ЭлементыФормы.КоманднаяПанель1.Кнопки.Принять.Текст= "Принять приглашение";
		Иначе
			ЭлементыФормы.КоманднаяПанель1.Кнопки.Принять.Текст= "Отправить приглашение";
		КонецЕсли;
	Иначе
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Принять.Доступность=	Ложь;
	КонецЕсли;
	
	Если Status = "IsMyCounteragent"
		ИЛИ Status = "InvitesMe"
		ИЛИ Status = "IsInvitedByMe" Тогда
		ЭлементыФормы.КоманднаяПанель1.Кнопки.ОтозватьЗапрос.Доступность=	Истина;
	Иначе
		ЭлементыФормы.КоманднаяПанель1.Кнопки.ОтозватьЗапрос.Доступность=	Ложь;
	КонецЕсли;
	
КонецПроцедуры	

Процедура ПриОткрытии()
	
	ЭлементыФормы.ФормироватьУПД.СписокВыбора = ФорматДокументовНаОтправкуСписокВыбора(Истина);
	
	ФормироватьУПД		= ПолучитьНастройку_ФормироватьУПД();
	ШифроватьДокументы 	= ПолучитьНастройку_ШифроватьДокументы();
	
	КартинкаЗаголовка	= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	ЭтаФорма.Заголовок 	= "Контрагент в " + НаименованиеСистемы;
	
	УправлениеФормой();
	
КонецПроцедуры

Процедура НастроитьМаршрутизациюПриИзменении(Элемент)
	
	Если НастроитьМаршрутизацию = Ложь И ТаблицаМаршрутизации.Строки.Количество() > 0 Тогда 
		Если ТаблицаМаршрутизации.Строки.Количество() > 1 Тогда
			Предупреждение("В таблице больше одной строки!",, НаименованиеСистемы);
			НастроитьМаршрутизацию=	Истина;
			Возврат;
		Иначе 
			
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляКонтрагента(ТаблицаМаршрутизации.Строки[0].Контрагент, ОбъектДД.Organization.id, "", "");
			ТаблицаМаршрутизации.Строки[0].НаименованиеПодразделения = "";
			ТаблицаМаршрутизации.Строки[0].ToDepartmentID = "";
			КонтрагентСсылка =  ТаблицаМаршрутизации.Строки[0].Контрагент;
			
			ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьИспользованиеБелогоСпискаДоговоров(ТаблицаМаршрутизации.Строки[0].Контрагент, Ложь);
			
		КонецЕсли;
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

Процедура ТаблицаМаршрутизацииПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура ТаблицаМаршрутизацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	Отказ = Истина;
КонецПроцедуры

Процедура КоманднаяПанель1Принять(Кнопка)
	
	Результат=	Модуль_РаботаССерверомДиадок.ОбработатьНажатиеКнопкиПринять(ОбъектДД, Status, Организация);
	Если Результат Тогда
		
		ОбъектДД=	ОбъектДД.Organization.GetCounteragentById(ОбъектДД.Id);
		Status=		ОбъектДД.GetStatus();
		
		УправлениеФормой();
		Оповестить("ОбновитьСписокКААктивныеСтрокаКА", ОбъектДД, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1ОтозватьЗапрос(Кнопка)
	
	Результат=	Модуль_РаботаССерверомДиадок.ОбработатьНажатиеКнопкиЗаблокировать(ОбъектДД);
	Если Результат Тогда
		
		ОбъектДД=	ОбъектДД.Organization.GetCounteragentById(ОбъектДД.Id);
		Status=		ОбъектДД.GetStatus();
		
		УправлениеФормой();
		Оповестить("ОбновитьСписокКААктивныеСтрокаКА", ОбъектДД, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИспользоватьБелыйЛистДоговоровПриИзменении(Элемент)
	
	Если ТаблицаМаршрутизации.Строки.Количество() > 0 Тогда 
		ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьИспользованиеБелогоСпискаДоговоров(ТаблицаМаршрутизации.Строки[0].Контрагент, ИспользоватьБелыйЛистДоговоров);
		Для каждого СтрокаКонтрагента Из ТаблицаМаршрутизации.Строки Цикл
			Для каждого СтрокаДоговора Из СтрокаКонтрагента.Строки Цикл
				ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьПараметрыМаршрутизацииДляДоговора(СтрокаДоговора.Контрагент,  СтрокаДоговора.НаименованиеПодразделения, СтрокаДоговора.ToDepartmentID, ИспользоватьБелыйЛистДоговоров);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ИспользоватьБелыйЛистДоговоров = Истина Тогда
		
		Для Каждого Строка ИЗ ТаблицаМаршрутизации.Строки Цикл
			
			Если Строка.Строки.Количество() = 0 Тогда
				
				Ответ = Вопрос("Выбран режим отправки документов только по договорам в списке, при этом есть контрагенты с пустым списком договоров!
							    |Документы по таким контрагентам выгружаться не будут. Продолжить?", РежимДиалогаВопрос.ДаНет);
				Если Ответ = КодВозвратаДиалога.Нет Тогда
					Отказ = Истина;
				КонецЕсли;
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	Если НЕ Отказ Тогда 
		УстановитьНастройку_ФормироватьУПД();
		УстановитьНастройку_ШифроватьДокументы();
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьНастройку_ФормироватьУПД()
	
	Результат = "";
	
	Если НастроитьМаршрутизацию Тогда
		
		Для Каждого СтрокаТаблицы ИЗ ТаблицаМаршрутизации.Строки Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.Контрагент) Тогда
				Результат = ОдинСАдаптер_СвойстваОбъектов_ПолучитьЗначениеСвойства(СтрокаТаблицы.Контрагент, ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ИдентификаторСвойстваФормироватьУПДКонтрагент(), "");
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ЗначениеЗаполнено(КонтрагентСсылка) Тогда
		Результат = ОдинСАдаптер_СвойстваОбъектов_ПолучитьЗначениеСвойства(КонтрагентСсылка, ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ИдентификаторСвойстваФормироватьУПДКонтрагент(), "");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьНастройку_ФормироватьУПД()
	
	НастройкаИзменена = Ложь;
	
	Если НастроитьМаршрутизацию Тогда
		
		Для Каждого СтрокаТаблицы ИЗ ТаблицаМаршрутизации.Строки Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.Контрагент) Тогда
				ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(СтрокаТаблицы.Контрагент, ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ИдентификаторСвойстваФормироватьУПДКонтрагент(), ФормироватьУПД);
				НастройкаИзменена = Истина;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ЗначениеЗаполнено(КонтрагентСсылка) Тогда
		ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(КонтрагентСсылка, ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").ИдентификаторСвойстваФормироватьУПДКонтрагент(), ФормироватьУПД);
		НастройкаИзменена = Истина;
	КонецЕсли;
	
	Если НастройкаИзменена Тогда
		Оповестить("ОбновитьСписокКААктивныеСтрокаКА", ОбъектДД, ЭтаФорма);
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьНастройку_ШифроватьДокументы()
	
	Результат = "";
	
	Если НастроитьМаршрутизацию Тогда
		
		Для Каждого СтрокаТаблицы ИЗ ТаблицаМаршрутизации.Строки Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.Контрагент) Тогда
				Результат = ОдинСАдаптер_СвойстваОбъектов_ПолучитьЗначениеСвойства(СтрокаТаблицы.Контрагент, "ДиадокШифроватьДокументыКонтрагент", "");
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ЗначениеЗаполнено(КонтрагентСсылка) Тогда
		
		Результат = ОдинСАдаптер_СвойстваОбъектов_ПолучитьЗначениеСвойства(КонтрагентСсылка, "ДиадокШифроватьДокументыКонтрагент", "");
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьНастройку_ШифроватьДокументы()
	
	Если НастроитьМаршрутизацию Тогда
		
		Для Каждого СтрокаТаблицы ИЗ ТаблицаМаршрутизации.Строки Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.Контрагент) Тогда
				ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(СтрокаТаблицы.Контрагент, "ДиадокШифроватьДокументыКонтрагент", ШифроватьДокументы);
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ЗначениеЗаполнено(КонтрагентСсылка) Тогда
		ОдинСАдаптер_СвойстваОбъектов_УстановитьЗначениеСвойства(КонтрагентСсылка, "ДиадокШифроватьДокументыКонтрагент", ШифроватьДокументы);
	КонецЕсли;
		
КонецПроцедуры

Процедура ФормироватьУПДОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ВыбранноеЗначение <> "Разделитель";
	
КонецПроцедуры
