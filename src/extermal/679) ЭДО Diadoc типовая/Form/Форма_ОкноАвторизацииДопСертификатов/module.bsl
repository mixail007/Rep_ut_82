
Процедура ПриОткрытии()
	
	КартинкаЗаголовка= ЭДО_БиблиотекаКартинок().КартинкаЗаголовка;
	
	УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельТекстОшибки, РежимСверткиЭлементаУправления.Низ);
	
	ПодключитьОбработчикОжидания("ЗаполнитьТаблицуСертификатов", 0.1, Истина);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПодтвердить(Кнопка)
	
	Если ТаблицаСертификатов.Найти(Истина, "Ошибка") <> Неопределено Тогда
		ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").СообщениеОбОшибкеДиадок("Не все дополнительные сертификаты авторизованы в " + НаименованиеСистемы + "!" + Символы.ПС + "Необходимо отредактировать список сертификатов и повторить попытку");
	Иначе
		Закрыть(Истина);
	КонецЕсли;
	
КонецПроцедуры


Процедура ТаблицаСертификатовПриАктивизацииСтроки(Элемент)
	
	ОбновитьНадписьТекстОшибки();
	
КонецПроцедуры

Процедура ТаблицаСертификатовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ОформлениеСтроки.ДанныеСтроки.Ошибка Тогда
		ОформлениеСтроки.Ячейки.ПредставлениеСертификата.ЦветТекста= WebЦвета.Красный;
		ОформлениеСтроки.Ячейки.СтатусАвторизации.ЦветТекста=		 WebЦвета.Красный;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаСертификатовПредставлениеСертификатаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка= Ложь;
	
	ТекущиеДанные= ЭлементыФормы.ТаблицаСертификатов.ТекущиеДанные;
	BoxId= ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").Организация_2_BoxID(ТекущиеДанные.ОрганизацияВ1С);
	
	ПараметрыDiadocConnection= Модуль_РаботаССерверомДиадок.ВыбратьСертификатДляОрганизации(ТекущиеДанные.ОрганизацияВ1С.Наименование, BoxId);
	
	Если ПараметрыDiadocConnection <> Неопределено Тогда
		
		ТекущиеДанные.ОтпечатокСертификата= 	ПараметрыDiadocConnection.DiadocConnection.Certificate.Thumbprint;
		ТекущиеДанные.ПредставлениеСертификата= Модуль_РаботаССерверомДиадок.ПредставлениеСертификата(ПараметрыDiadocConnection.DiadocConnection.Certificate);
		
		АвторизоватьСтрокуТаблицыСертификатов(ТекущиеДанные);
		
		ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьРеквизитыСертификатаДляОрганизации(ТекущиеДанные.ОрганизацияВ1С, ПараметрыDiadocConnection.DiadocConnection.Certificate);
		
		ОбновитьНадписьТекстОшибки();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаСертификатовПередУдалением(Элемент, Отказ)
	
	ПолучитьМодульПрог("Модуль_Данные1С_СвязиОбъектов").УстановитьРеквизитыСертификатаДляОрганизации(Элемент.ТекущиеДанные.ОрганизацияВ1С);
	
	Модуль_РаботаССерверомДиадок.ВыполнитьОчисткуДопСертификата(Элемент.ТекущиеДанные.ОрганизацияВ1С);
	
КонецПроцедуры

Процедура ТаблицаСертификатовПредставлениеСертификатаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка= Ложь;
	
КонецПроцедуры

Процедура ТаблицаСертификатовПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ= Истина;
	
	Сообщить("Добавить дополнительный сертификат можно на вкладке ""Настройка"" в параметрах отправки организации.");
	
КонецПроцедуры


Процедура ЗаполнитьТаблицуСертификатов()
		
	ТаблицаНастроенныхОтпечатков= ВосстановитьЗначение("ТаблицаОтпечатковОрганизацийДиадок");
	
	Если ТаблицаНастроенныхОтпечатков = Неопределено Тогда
		ПолучитьМодульПрог("Модуль_Логика_ПоведениеФорм").СообщениеОбОшибкеДиадок("Ошибка получения списка дополнительных сертификатов!" + Символы.ПС + "Необходимо повторить выбор дополнительных сертификатов на вкладке ""Настройка"" в параметрах отправки организаций");
		Закрыть(Истина);
		Возврат;
	КонецЕсли;
	
	УстановленныеСертификаты= Новый Соответствие;
	
	CollectionPersonalCertificates= Модуль_РаботаССерверомДиадок.DiadocInvoiceAPI.GetPersonalCertificates();
	ВГраница= CollectionPersonalCertificates.Count - 1;
	Для ИндексЦикла = 0 ПО ВГраница Цикл
		УстановленныеСертификаты.Вставить(CollectionPersonalCertificates.GetItem(ИндексЦикла).Thumbprint, ИндексЦикла);
	КонецЦикла;
	
	ОбратныйИндекс= ТаблицаНастроенныхОтпечатков.Количество() - 1;
	Пока ОбратныйИндекс > -1 Цикл
		Если 	НЕ ЗначениеЗаполнено(ТаблицаНастроенныхОтпечатков[ОбратныйИндекс].ОтпечатокСертификата)
			ИЛИ НЕ ЗначениеЗаполнено(ТаблицаНастроенныхОтпечатков[ОбратныйИндекс].ПредставлениеСертификата) Тогда
			ТаблицаНастроенныхОтпечатков.Удалить(ОбратныйИндекс);
		КонецЕсли;
		ОбратныйИндекс= ОбратныйИндекс - 1;
	КонецЦикла;
	
	Если ТаблицаНастроенныхОтпечатков.Количество() = 0 Тогда
		Закрыть(Истина);
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаОтпечатка ИЗ ТаблицаНастроенныхОтпечатков Цикл
		
		ИндексPersonalCertificate= УстановленныеСертификаты[СтрокаОтпечатка.ОтпечатокСертификата];
		
		НоваяСтрока= ТаблицаСертификатов.Добавить();
		
		НоваяСтрока.ОрганизацияВ1С= СтрокаОтпечатка.Организация;
			
		Если ИндексPersonalCertificate <> Неопределено Тогда
			
			PersonalCertificate =  CollectionPersonalCertificates.GetItem(ИндексPersonalCertificate);
			
			НоваяСтрока.ОтпечатокСертификата=	  PersonalCertificate.Thumbprint;
			НоваяСтрока.ПредставлениеСертификата= Модуль_РаботаССерверомДиадок.ПредставлениеСертификата(PersonalCertificate);
			
			Если PersonalCertificate.EndDate < НачалоДня(ТекущаяДата()) Тогда
				НоваяСтрока.Ошибка= Истина;
				НоваяСтрока.ТекстОшибки= "Срок действия сертификата истек";
			ИначеЕсли НЕ Модуль_РаботаССерверомДиадок.ПроверитьДоступПоСертификату(PersonalCertificate.Thumbprint) Тогда
				НоваяСтрока.Ошибка= Истина;
				НоваяСтрока.ТекстОшибки= "По сертификату нет доступа в " + НаименованиеСистемы;
			КонецЕсли;
			
		Иначе
			
			НоваяСтрока.ОтпечатокСертификата=	  СтрокаОтпечатка.ОтпечатокСертификата;
			НоваяСтрока.ПредставлениеСертификата= СтрокаОтпечатка.ПредставлениеСертификата;
			
			НоваяСтрока.Ошибка= Истина;
			НоваяСтрока.ТекстОшибки= "Сертификат не установлен";
		
		КонецЕсли;
		
	КонецЦикла;
	
	АвторизоватьТаблицуСертификатов();
	
КонецПроцедуры

Процедура АвторизоватьТаблицуСертификатов()
	
	Для Каждого СтрокаТаблицыСертификатов ИЗ ТаблицаСертификатов Цикл
		АвторизоватьСтрокуТаблицыСертификатов(СтрокаТаблицыСертификатов)
	КонецЦикла;
	
	ЭлементыФормы.ПанельПроцессаАвторизации.Видимость= Ложь;
	
	ОбновитьНадписьТекстОшибки();
	
КонецПроцедуры

Процедура АвторизоватьСтрокуТаблицыСертификатов(СтрокаТаблицыСертификатов)
	
	РезультатАвторизации= Модуль_РаботаССерверомДиадок.ВыполнитьАвторизациюПоДопСертификату(СтрокаТаблицыСертификатов.ОрганизацияВ1С, СтрокаТаблицыСертификатов.ОтпечатокСертификата);
	
	Если РезультатАвторизации.Результат = Истина Тогда
		СтрокаТаблицыСертификатов.Ошибка= Ложь;
		СтрокаТаблицыСертификатов.ТекстОшибки= "";
		СтрокаТаблицыСертификатов.СтатусАвторизации= "Авторизован";
	Иначе
		СтрокаТаблицыСертификатов.Ошибка= Истина;
		СтрокаТаблицыСертификатов.ТекстОшибки= РезультатАвторизации.СписокОшибок;
		СтрокаТаблицыСертификатов.СтатусАвторизации= "Ошибка авторизации";
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьНадписьТекстОшибки()
	
	ТекущиеДанные= ЭлементыФормы.ТаблицаСертификатов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстОшибки= "";
	Иначе
		ТекстОшибки= ТекущиеДанные.ТекстОшибки;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельТекстОшибки, РежимСверткиЭлементаУправления.Нет);
		ЭлементыФормы.НадписьТекстОшибки.Заголовок= ТекстОшибки;
	Иначе
		ЭлементыФормы.НадписьТекстОшибки.Заголовок= ТекстОшибки;
		УстановитьРежимСверткиЭлементаУправления(ЭлементыФормы.ПанельТекстОшибки, РежимСверткиЭлементаУправления.Низ);
	КонецЕсли;
	
КонецПроцедуры
