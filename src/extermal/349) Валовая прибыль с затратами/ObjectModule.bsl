Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	//ЗаполнитьНачальныеНастройкиПоМакету(ПолучитьМакет("ПараметрыОтчетовПродажиКомпании"), СтруктураПредставлениеПолей, МассивОтбора, ОбщийОтчет, "СписокКроссТаблица");
	
	ТипыДоговоров=Новый СписокЗначений;
	ТипыДоговоров.Добавить(Справочники.ТипыДоговоров.Факторинг);
	ТипыДоговоров.Добавить(Справочники.ТипыДоговоров.НайтиПоКоду("00004"));//отсрочка
	ТипыДоговоров.Добавить(Справочники.ТипыДоговоров.НайтиПоКоду("00001"));//предоплата
	ТипыДоговоров.Добавить(Справочники.ТипыДоговоров.НайтиПоКоду("Я0004"));//ФА
	
	СписокВозмещаемые =Новый СписокЗначений;
	СписокВозмещаемые.Добавить(Справочники.Номенклатура.НайтиПоНаименованию("Транспортная услуга 44-ТР возмещаемые",истина));
	СписокВозмещаемые.Добавить(Справочники.Номенклатура.НайтиПоНаименованию("Возмещение транспортных услуг",истина));
	
	СписокНаЗатраты=Новый СписокЗначений;
	СписокНаЗатраты.Добавить(Справочники.Номенклатура.НайтиПоНаименованию("Транспортные услуги 44-1 на затраты",истина));

	
	Текст = "ВЫБРАТЬ
	        |	ТранспортныеЗатратыПоРеализациям.Поступление,
	        |	ТранспортныеЗатратыПоРеализациям.Реализация,
	        |	ТранспортныеЗатратыПоРеализациям.Поступление.СуммаДокумента КАК СуммаЗатрат
	        |ПОМЕСТИТЬ втПоступленияРеализации
	        |ИЗ
	        |	РегистрСведений.ТранспортныеЗатратыПоРеализациям КАК ТранспортныеЗатратыПоРеализациям
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	        |		ПО ТранспортныеЗатратыПоРеализациям.Реализация = РеализацияТоваровУслуг.Ссылка
	        |ГДЕ
	        |	ТранспортныеЗатратыПоРеализациям.Реализация ССЫЛКА Документ.РеализацияТоваровУслуг
	        |	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	РеализацииТовары.Ссылка,
	        |	СУММА(ЕСТЬNULL(НормыЗагрузки.НормаЗагрузки, 0.0001) * РеализацииТовары.Количество) КАК НормаЗагрузки
	        |ПОМЕСТИТЬ втНормыРеализаций
	        |ИЗ
	        |	(ВЫБРАТЬ
	        |		РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	        |		СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	        |		РеализацияТоваровУслугТовары.Номенклатура.Типоразмер КАК НоменклатураТипоразмер,
	        |		РеализацияТоваровУслугТовары.Номенклатура.ВидТовара КАК НоменклатураВидТовара
	        |	ИЗ
	        |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	        |	ГДЕ
	        |		РеализацияТоваровУслугТовары.Ссылка В
	        |				(ВЫБРАТЬ
	        |					втПоступленияРеализации.Реализация
	        |				ИЗ
	        |					втПоступленияРеализации КАК втПоступленияРеализации)
	        |	
	        |	СГРУППИРОВАТЬ ПО
	        |		РеализацияТоваровУслугТовары.Ссылка,
	        |		РеализацияТоваровУслугТовары.Номенклатура.Типоразмер,
	        |		РеализацияТоваровУслугТовары.Номенклатура.ВидТовара) КАК РеализацииТовары
	        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |			НормыЗагрузки.Типоразмер КАК Типоразмер,
	        |			МАКСИМУМ(ВЫБОР
	        |					КОГДА НормыЗагрузки.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	        |							ИЛИ НормыЗагрузки.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	        |						ТОГДА НормыЗагрузки.НормаЗагрузки
	        |					ИНАЧЕ 0.00001
	        |				КОНЕЦ) КАК НормаЗагрузки,
	        |			НормыЗагрузки.ВидПродукции КАК ВидПродукции
	        |		ИЗ
	        |			Справочник.НормыЗагрузки КАК НормыЗагрузки
	        |		ГДЕ
	        |			НормыЗагрузки.ПометкаУдаления = ЛОЖЬ
	        |			И НормыЗагрузки.НормаЗагрузки <> 0
	        |		
	        |		СГРУППИРОВАТЬ ПО
	        |			НормыЗагрузки.Типоразмер,
	        |			НормыЗагрузки.ВидПродукции) КАК НормыЗагрузки
	        |		ПО РеализацииТовары.НоменклатураТипоразмер = НормыЗагрузки.Типоразмер
	        |			И РеализацииТовары.НоменклатураВидТовара = НормыЗагрузки.ВидПродукции
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	РеализацииТовары.Ссылка
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ПоступлениеТоваровУслугУслуги.Ссылка,
	        |	СУММА(ПоступлениеТоваровУслугУслуги.Сумма) КАК Сумма
	        |ПОМЕСТИТЬ втСуммаНаЗатраты
	        |ИЗ
	        |	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	        |ГДЕ
	        |	ПоступлениеТоваровУслугУслуги.Номенклатура В(&СписокНаЗатраты)
	        |	И ПоступлениеТоваровУслугУслуги.Ссылка В
	        |			(ВЫБРАТЬ
	        |				втПоступленияРеализации.Поступление
	        |			ИЗ
	        |				втПоступленияРеализации КАК втПоступленияРеализации)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ПоступлениеТоваровУслугУслуги.Ссылка
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	А.Поступление,
	        |	А.Реализация,
	        |	А.СуммаЗатрат,
	        |	А.СуммаНаЗатраты,
	        |	ВЫБОР
	        |		КОГДА НормыПоПоступлениям.НормаЗагрузки <> 0
	        |			ТОГДА А.НормаЗагрузки / НормыПоПоступлениям.НормаЗагрузки
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК КоэффВеса,
	        |	А.СуммаЗатрат * ВЫБОР
	        |		КОГДА НормыПоПоступлениям.НормаЗагрузки <> 0
	        |			ТОГДА А.НормаЗагрузки / НормыПоПоступлениям.НормаЗагрузки
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК СуммаЗатрат1,
	        |	А.СуммаНаЗатраты * ВЫБОР
	        |		КОГДА НормыПоПоступлениям.НормаЗагрузки <> 0
	        |			ТОГДА А.НормаЗагрузки / НормыПоПоступлениям.НормаЗагрузки
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК СуммаНаЗатраты2,
	        |	А.Реализация.Контрагент
	        |ПОМЕСТИТЬ втОснова
	        |ИЗ
	        |	(ВЫБРАТЬ
	        |		втПоступленияРеализации.Поступление КАК Поступление,
	        |		втПоступленияРеализации.Реализация КАК Реализация,
	        |		втПоступленияРеализации.СуммаЗатрат КАК СуммаЗатрат,
	        |		втНормыРеализаций.НормаЗагрузки КАК НормаЗагрузки,
	        |		втСуммаНаЗатраты.Сумма КАК СуммаНаЗатраты
	        |	ИЗ
	        |		втПоступленияРеализации КАК втПоступленияРеализации
	        |			ЛЕВОЕ СОЕДИНЕНИЕ втНормыРеализаций КАК втНормыРеализаций
	        |			ПО втПоступленияРеализации.Реализация = втНормыРеализаций.Ссылка
	        |			ЛЕВОЕ СОЕДИНЕНИЕ втСуммаНаЗатраты КАК втСуммаНаЗатраты
	        |			ПО втПоступленияРеализации.Поступление = втСуммаНаЗатраты.Ссылка) КАК А
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |			втПоступленияРеализации.Поступление КАК Поступление,
	        |			СУММА(втПоступленияРеализации.СуммаЗатрат) КАК СуммаЗатрат,
	        |			СУММА(втНормыРеализаций.НормаЗагрузки) КАК НормаЗагрузки
	        |		ИЗ
	        |			втПоступленияРеализации КАК втПоступленияРеализации
	        |				ЛЕВОЕ СОЕДИНЕНИЕ втНормыРеализаций КАК втНормыРеализаций
	        |				ПО втПоступленияРеализации.Реализация = втНормыРеализаций.Ссылка
	        |		
	        |		СГРУППИРОВАТЬ ПО
	        |			втПоступленияРеализации.Поступление) КАК НормыПоПоступлениям
	        |		ПО А.Поступление = НормыПоПоступлениям.Поступление
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Транспорт.Контрагент,
	        |	ВЫРАЗИТЬ(Транспорт.РасходТранспортОб КАК ЧИСЛО(15, 2)) КАК РасходТранспортОб,
	        |	ВЫРАЗИТЬ(Транспорт.РасходТранспортНаЗатраты КАК ЧИСЛО(15, 2)) КАК РасходТранспортНаЗатраты,
	        |	ВЫРАЗИТЬ(Транспорт.ДоходТранспорт КАК ЧИСЛО(15, 2)) КАК ДоходТранспорт,
	        |	0 КАК Продажи,
	        |	0 КАК ВаловаяПрибыль,
	        |	0 КАК ПениРассчитаны,
	        |	0 КАК ПениВыставлены,
	        |	0 КАК ОТК,
	        |	0 КАК Бонусы
	        |ПОМЕСТИТЬ вт
	        |ИЗ
	        |	(ВЫБРАТЬ
	        |		А.РеализацияКонтрагент КАК Контрагент,
	        |		СУММА(А.РСуммаЗатрат1) КАК РасходТранспортОб,
	        |		СУММА(А.РСуммаНаЗатраты2) КАК РасходТранспортНаЗатраты,
	        |		СУММА(А.ДСумма) КАК ДоходТранспорт
	        |	ИЗ
	        |		(ВЫБРАТЬ
	        |			втОснова.РеализацияКонтрагент КАК РеализацияКонтрагент,
	        |			СУММА(втОснова.СуммаЗатрат1) КАК РСуммаЗатрат1,
	        |			СУММА(втОснова.СуммаНаЗатраты2) КАК РСуммаНаЗатраты2,
	        |			СУММА(0) КАК ДСумма
	        |		ИЗ
	        |			втОснова КАК втОснова
	        |		
	        |		СГРУППИРОВАТЬ ПО
	        |			втОснова.РеализацияКонтрагент
	        |		
	        |		ОБЪЕДИНИТЬ ВСЕ
	        |		
	        |		ВЫБРАТЬ
	        |			РеализацияТоваровУслугУслуги.Ссылка.Контрагент,
	        |			СУММА(0),
	        |			СУММА(0),
	        |			СУММА(РеализацияТоваровУслугУслуги.Сумма)
	        |		ИЗ
	        |			Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	        |		ГДЕ
	        |			РеализацияТоваровУслугУслуги.Номенклатура В(&СписокВозмещаемые)
	        |			И РеализацияТоваровУслугУслуги.Ссылка.ТранспортДатаРеализации МЕЖДУ &ДатаНач И &ДатаКон
	        |			И РеализацияТоваровУслугУслуги.Ссылка.Проведен = ИСТИНА
	        |		
	        |		СГРУППИРОВАТЬ ПО
	        |			РеализацияТоваровУслугУслуги.Ссылка.Контрагент) КАК А
	        |	
	        |	СГРУППИРОВАТЬ ПО
	        |		А.РеализацияКонтрагент) КАК Транспорт
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	ПродажиОбороты.ДоговорКонтрагента.Владелец,
	        |	0,
	        |	0,
	        |	0,
	        |	СУММА(ПродажиОбороты.СтоимостьОборот),
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0
	        |ИЗ
	        |	РегистрНакопления.Продажи.Обороты(
	        |			&ДатаНач,
	        |			&ДатаКон,
	        |			,
	        |			ДоговорКонтрагента.ТипДоговора В (&СписокТиповДоговоров)
	        |				И НЕ Номенклатура В (&СписокВозмещаемые)) КАК ПродажиОбороты
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ПродажиОбороты.ДоговорКонтрагента.Владелец
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	ПродажиОбороты.ДоговорКонтрагента.Владелец,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	СУММА(ПродажиОбороты.СтоимостьОборот - ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)),
	        |	0,
	        |	0,
	        |	0,
	        |	0
	        |ИЗ
	        |	РегистрНакопления.Продажи.Обороты(
	        |			&ДатаНач,
	        |			&ДатаКон,
	        |			Регистратор,
	        |			НЕ Номенклатура В (&СписокВозмещаемые)
	        |				И ДоговорКонтрагента.ТипДоговора В (&СписокТиповДоговоров)) КАК ПродажиОбороты
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК ПродажиСебестоимостьОбороты
	        |		ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
	        |			И ПродажиОбороты.ХарактеристикаНоменклатуры = ПродажиСебестоимостьОбороты.ХарактеристикаНоменклатуры
	        |			И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
	        |			И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ПродажиОбороты.ДоговорКонтрагента.Владелец
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	ПростроченаяДЗ.ДоговорКонтрагента.Владелец,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	СУММА(ВЫРАЗИТЬ(ПростроченаяДЗ.Сумма * (&Процент / 365) / 100 КАК ЧИСЛО(18, 2))),
	        |	0,
	        |	0,
	        |	0
	        |ИЗ
	        |	РегистрСведений.ПростроченаяДЗ КАК ПростроченаяДЗ
	        |ГДЕ
	        |	ПростроченаяДЗ.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	        |	И ПростроченаяДЗ.ДоговорКонтрагента.ТипДоговора В(&СписокТиповДоговоров)
	        |	И ПростроченаяДЗ.Сумма > 0
	        |	И ПростроченаяДЗ.Дата МЕЖДУ &ДатаНач И &ДатаКон
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ПростроченаяДЗ.ДоговорКонтрагента.Владелец
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	ПродажиОбороты.ДоговорКонтрагента.Владелец,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	СУММА(ПродажиОбороты.СтоимостьОборот),
	        |	0,
	        |	0
	        |ИЗ
	        |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , ДоговорКонтрагента.ТипДоговора = ЗНАЧЕНИЕ(Справочник.ТипыДоговоров.Пени)) КАК ПродажиОбороты
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ПродажиОбороты.ДоговорКонтрагента.Владелец
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	ОТК.Контрагент,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	СУММА(РасходныйКассовыйОрдер.СуммаДокумента),
	        |	0
	        |ИЗ
	        |	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |			ЗначенияСвойствОбъектов.Объект КАК Объект,
	        |			ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Значение КАК Справочник.Контрагенты) КАК Контрагент
	        |		ИЗ
	        |			РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	        |		ГДЕ
	        |			ЗначенияСвойствОбъектов.Свойство = &Свойство) КАК ОТК
	        |		ПО РасходныйКассовыйОрдер.Ссылка = ОТК.Объект
	        |ГДЕ
	        |	(РасходныйКассовыйОрдер.СтатьяЗатрат = &СтатьяЗатрат
	        |			ИЛИ РасходныйКассовыйОрдер.Затраты.СтатьяЗатрат = &СтатьяЗатрат)
	        |	И РасходныйКассовыйОрдер.Проведен = ИСТИНА
	        |	И РасходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ОТК.Контрагент
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	Бонусы.Контрагент,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	0,
	        |	СУММА(Бонусы.Бонус)
	        |ИЗ
	        |	(ВЫБРАТЬ
	        |		БонусПоступлением.Контрагент КАК Контрагент,
	        |		БонусПоступлением.СуммаДокумента КАК Бонус
	        |	ИЗ
	        |		(ВЫБРАТЬ
	        |			ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	        |			СУММА(ПоступлениеТоваровУслуг.СуммаДокумента) КАК СуммаДокумента
	        |		ИЗ
	        |			Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	        |		ГДЕ
	        |			ПоступлениеТоваровУслуг.ДоговорКонтрагента В
	        |					(ВЫБРАТЬ
	        |						ДоговорыКонтрагентов.Ссылка
	        |					ИЗ
	        |						Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	        |					ГДЕ
	        |						ДоговорыКонтрагентов.Наименование ПОДОБНО ""%бонус%"")
	        |			И ПоступлениеТоваровУслуг.Проведен = ИСТИНА
	        |			И ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
	        |		
	        |		СГРУППИРОВАТЬ ПО
	        |			ПоступлениеТоваровУслуг.Контрагент) КАК БонусПоступлением
	        |	
	        |	ОБЪЕДИНИТЬ ВСЕ
	        |	
	        |	ВЫБРАТЬ
	        |		БонусКорректировкой.ДоговорКонтрагентаВладелец,
	        |		БонусКорректировкой.СуммаВзаиморасчетовРасход
	        |	ИЗ
	        |		(ВЫБРАТЬ
	        |			ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.Владелец КАК ДоговорКонтрагентаВладелец,
	        |			СУММА(ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
	        |		ИЗ
	        |			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(&ДатаНач, &ДатаКон, Регистратор, ДоговорКонтрагента.ВидДоговора = Значение(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)) КАК ВзаиморасчетыСКонтрагентамиОбороты
	        |		ГДЕ
	        |			ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.Комментарий ПОДОБНО ""%бонус%""
	        |			И ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.КорректировкаДолга
	        |		
	        |		СГРУППИРОВАТЬ ПО
	        |			ВзаиморасчетыСКонтрагентамиОбороты.ДоговорКонтрагента.Владелец) КАК БонусКорректировкой) КАК Бонусы
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	Бонусы.Контрагент
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	СУММА(вт.Продажи) КАК Продажи,
	        |	СУММА(вт.ВаловаяПрибыль) КАК ВаловаяПрибыль,
	        |	СУММА(вт.ПениРассчитаны) КАК ПениРассчитаны,
	        |	СУММА(вт.ПениВыставлены) КАК ПениВыставлены,
	        |	СУММА(вт.РасходТранспортОб) КАК РасходТранспортОб,
	        |	СУММА(вт.РасходТранспортНаЗатраты) КАК РасходТранспортНаЗатраты,
	        |	СУММА(вт.ДоходТранспорт) КАК ДоходТранспорт,
	        |	СУММА(вт.ВаловаяПрибыль - вт.ПениРассчитаны + вт.ПениВыставлены - вт.РасходТранспортНаЗатраты + вт.ДоходТранспорт - вт.ОТК - вт.Бонусы) КАК ВаловаяСЗатратами,
	        |	СУММА(вт.ОТК) КАК ОТК,
	        |	СУММА(вт.Бонусы) КАК Бонусы
	        |{ВЫБРАТЬ
	        |	Продажи,
	        |	ВаловаяПрибыль,
	        |	ПениРассчитаны,
	        |	ПениВыставлены,
	        |	РасходТранспортОб,
	        |	РасходТранспортНаЗатраты,
	        |	ДоходТранспорт,
	        |	ОТК,
	        |	ВаловаяСЗатратами,
	        |	вт.Контрагент.*,
	        |	Бонусы}
	        |ИЗ
	        |	вт КАК вт
	        |{ГДЕ
	        |	вт.Контрагент.*,
	        |	(СУММА(вт.ВаловаяПрибыль - вт.ПениРассчитаны + вт.ПениВыставлены - вт.РасходТранспортНаЗатраты + вт.ДоходТранспорт - вт.Бонусы)) КАК ВаловаяСЗатратами}
	        |{УПОРЯДОЧИТЬ ПО
	        |	вт.Контрагент.*}
	        |ИТОГИ
	        |	СУММА(Продажи),
	        |	СУММА(ВаловаяПрибыль),
	        |	СУММА(ПениРассчитаны),
	        |	СУММА(ПениВыставлены),
	        |	СУММА(РасходТранспортОб),
	        |	СУММА(РасходТранспортНаЗатраты),
	        |	СУММА(ДоходТранспорт),
	        |	СУММА(ВаловаяСЗатратами),
	        |	СУММА(ОТК),
	        |	СУММА(Бонусы)
	        |ПО
	        |	ОБЩИЕ
	        |{ИТОГИ ПО
	        |	вт.Контрагент.*}
	        |АВТОУПОРЯДОЧИВАНИЕ";
	СтруктураПредставлениеПолей = Новый Структура("
	|Продажи,
	|ВаловаяПрибыль,
	|ПениРассчитаны,
	|ПениВыставлены,
	|РасходТранспортНаЗатраты,
	|ДоходТранспорт,
	|ОТК,
	|Бонусы,
	|ВаловаяСЗатратами,
	|Контрагент", 
	"Продажи сумма",
	"Валовая прибыль",
	"Пени рассчитаные",
	"Пени выставленные",
	"Транспорт на затраты",
	"Транспорт доход",
	"ОТК",
	"Бонусы",
	"Валовая прибыль с затратами",
	"Контрагент");
	
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда
	
	    ТекстПоляСвойств= "";
		ТекстПоляКатегорий = "";

		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
		
		//СтрокаТаблицы = ТаблицаПолей.Добавить();
		//СтрокаТаблицы.ПутьКДанным = "Номенклатура";
		//СтрокаТаблицы.Представление = "Номенклатура";
		//СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
		
		ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, Текст, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,,,,,,ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);
				
		//ДобавитьВТекстСвойстваОбщие(Текст, ТекстПоляСвойств, "//ОБЩИЕ_СВОЙСТВА");
      // для избежания двойственности поля Номенклатура в запросе
	    //Текст=СтрЗаменить(Текст,"ИНАЧЕ Номенклатура","ИНАЧЕ ТаблицаРегистраСебестоимость.Номенклатура");
		//УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, ОбщийОтчет.мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;
	
	ПостроительОтчета.Текст = Текст;
	ПостроительОтчета.Параметры.Вставить("Процент",Процент);
	ПостроительОтчета.Параметры.Вставить("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90173"));//ОТК
	ПостроительОтчета.Параметры.Вставить("СтатьяЗатрат",Справочники.СтатьиЗатрат.НайтиПоКоду("О0181"));//отк
	ПостроительОтчета.Параметры.Вставить("СписокТиповДоговоров",ТипыДоговоров);
	ПостроительОтчета.Параметры.Вставить("СписокВозмещаемые",СписокВозмещаемые);
    ПостроительОтчета.Параметры.Вставить("СписокНаЗатраты",СписокНаЗатраты);


	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Контрагент");
	//МассивОтбора.Добавить("Номенклатура");
	//МассивОтбора.Добавить("Подразделение");
	
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Истина;
	
	ОбщийОтчет.ЗаполнитьПоказатели("Продажи", "Продажи", Истина, "ЧЦ=15; ЧДЦ=2");
	//ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество в базовых единицах", Истина, "ЧЦ=15; ЧДЦ=3");
	ОбщийОтчет.ЗаполнитьПоказатели("ВаловаяПрибыль", "Валовая прибыль", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ПениРассчитаны", "Пени рассчитаные", Истина, "ЧЦ=15; ЧДЦ=2");
	//ОбщийОтчет.ЗаполнитьПоказатели("СебестоимостьСТранспортом", "Себестоимость с транспортом в валюте упр. учета", Ложь, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ПениВыставлены", "Пени выставленные", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("РасходТранспортНаЗатраты", "Транспорт на затраты", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ДоходТранспорт", "Транспорт выставленный", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ОТК", "ОТК", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("Бонусы", "Бонусы", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ВаловаяСЗатратами", "Валовая с затратами", Истина, "ЧЦ=15; ЧДЦ=2");
	
	
	ОбщийОтчет.мНазваниеОтчета = "Отчет по валовой прибыли с затратами";
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Установим дату начала отчета
	Если ЗначениеНеЗаполнено(ОбщийОтчет.ДатаНач) Тогда
		Если Не ЗначениеНеЗаполнено(глТекущийПользователь) Тогда
			ОбщийОтчет.ДатаНач = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		
		//+++ 26.06.2013 - ограничение по подразделению
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
           СообщитьОбОшибке("У вас недостаточно прав для просмотра данного отчета!");
		   Возврат;
	    КонецЕсли;
	   
		ДоступноеПодразделение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Процент",Процент);
    	ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.Значение = ДоступноеПодразделение;
		ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.Использование = Истина;
		ОбщийОтчет.ПостроительОтчета.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
	КонецЕсли;

	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("РентабельностьПродаж", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ПроцентНаценки", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПРоцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "Продажи";