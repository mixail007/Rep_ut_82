
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец, Зачеты.ДоговорКонтрагента.Владелец) КАК Контрагент,
	|	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента, Зачеты.ДоговорКонтрагента) КАК Договор,
	|	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.Сделка, Зачеты.Сделка) КАК Сделка,
	|	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток, 0) КАК ОстатокРеальногоДолга,
	|	ЕСТЬNULL(Зачеты.СуммаЗачета, 0) КАК ЗачтенныйДолг
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
	|			 ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток 
	|			ИЗ
	|		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки КАК ВзаиморасчетыСКонтрагентамиОстатки) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Ссылка.КонтрагентДебитор КАК КонтрагентДебитор,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сделка КАК Сделка,
	|			СУММА(УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сумма) КАК СуммаЗачета
	|		ИЗ
	|			Документ.УправленческийЗачетВзаимныхОбязательств.СуммыДолга КАК УправленческийЗачетВзаимныхОбязательствСуммыДолга
	|		ГДЕ
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.ВидЗадолженности = &Дебиторская
	|			И УправленческийЗачетВзаимныхОбязательствСуммыДолга.Ссылка.Проведен
	|		
	|		СГРУППИРОВАТЬ ПО
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Ссылка.КонтрагентДебитор,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.ДоговорКонтрагента,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сделка
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Ссылка.КонтрагентКредитор,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.ДоговорКонтрагента,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сделка,
	|			-СУММА(УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сумма)
	|		ИЗ
	|			Документ.УправленческийЗачетВзаимныхОбязательств.СуммыДолга КАК УправленческийЗачетВзаимныхОбязательствСуммыДолга
	|		ГДЕ
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.ВидЗадолженности = &Кредиторская
	|			И УправленческийЗачетВзаимныхОбязательствСуммыДолга.Ссылка.Проведен		
	|		СГРУППИРОВАТЬ ПО
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Ссылка.КонтрагентКредитор,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.ДоговорКонтрагента,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сделка) КАК Зачеты
	|		ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = Зачеты.ДоговорКонтрагента
	|			И ВзаиморасчетыСКонтрагентамиОстатки.Сделка = Зачеты.Сделка
	|ГДЕ
	|	(ЕСТЬNULL(Зачеты.СуммаЗачета, 0) >0) И (ЕСТЬNULL(Зачеты.СуммаЗачета, 0) > ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток, 0))
	|	ИЛИ 
	|	(ЕСТЬNULL(Зачеты.СуммаЗачета, 0) <0) И (ЕСТЬNULL(Зачеты.СуммаЗачета, 0) < ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток, 0))";

	Запрос.УстановитьПараметр("Дебиторская", Перечисления.ВидыЗадолженности.Дебиторская);
	Запрос.УстановитьПараметр("Кредиторская", Перечисления.ВидыЗадолженности.Кредиторская);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры
