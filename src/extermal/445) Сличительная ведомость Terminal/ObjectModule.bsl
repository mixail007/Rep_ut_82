перем  ИмяФайлаРезультата;

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	//стандартнаяОбработка = Ложь;
	//СхемаКД = СхемаКомпоновкиДанных;
	//Настройки =  КомпоновщикНастроек.Настройки;
	//
	//СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	//компоновщикмакета = Новый КомпоновщикмакетаКомпоновкиДанных;
	//МакеткомпоновкиДанных =    КомпоновщикМакета.выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	//ВнешниеИсточники = Новый Структура("Stor",Прочитать());
	//ДокументРезультат.очистить();
	//
	//процессоркомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	//ПроцессорКомпоновкиДанных.инициализировать(МакеткомпоновкиДанных,ВнешниеИсточники,ДанныеРасшифровки,Истина);
	//
	//ПроцессорВыводаРезультатаотчета = Новый ПроцессорВыводаРезультатакомпоновкиДанныхВТабличныйДокумент;
	//ПроцессорВыводаРезультатаОтчета.УстановитьДокумент(ДокументРезультат);
	//ПроцессорВыводаРезультатаОтчета.Вывести(ПроцессоркомпоновкиДанных);
	//процессорВыводаРезультатаОтчета.ЗакончитьВывод();
	//
	
КонецПроцедуры


функция ПолучитьСтарыйТекст()
	текст0 = 	"ВЫБРАТЬ
	|	ВТ.НомерTerminal,
	|	ВТ.СтатусTerminal,
	|	ЕСТЬNULL(ВТ.СуммаTerminal, 0) КАК СуммаTerminal
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&Выгрузка КАК ВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Точки.Владелец
	|ПОМЕСТИТЬ НужныеКонтрагенты
	|ИЗ
	|	Справочник.Точки КАК Точки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПокупателя.Ссылка КАК Ссылка,
	|	ЗаказПокупателя.Проведен,
	|	ЗаказПокупателя.Дата,
	|	ЗаказПокупателя.СуммаДокумента,
	|	ЗаказПокупателя.ПометкаУдаления,
	|	ЗаказПокупателя.Номер
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Дата МЕЖДУ &начПериода И &конПериода
	|	И ЗаказПокупателя.Контрагент В
	|			(ВЫБРАТЬ
	|				НужныеКонтрагенты.Владелец
	|			ИЗ
	|				НужныеКонтрагенты КАК НужныеКонтрагенты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(ЗаказПокупателяЗаказы.Ссылка.Дата, Заказы.Дата)) КАК ОбщийДата,
	|	Заказы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДатыОбщихЗаказов
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Заказы КАК ЗаказПокупателяЗаказы
	|		ПО Заказы.Ссылка = ЗаказПокупателяЗаказы.ЗаказПокупателя.Ссылка
	|			И (НЕ ЗаказПокупателяЗаказы.Ссылка.ВводитьТолькоПеремещение)
	|
	|СГРУППИРОВАТЬ ПО
	|	Заказы.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МАКСИМУМ(ЕСТЬNULL(ЗаказПокупателяЗаказы.Ссылка, ДатыОбщихЗаказов.Ссылка)) КАК Общийссылка,
	|	ДатыОбщихЗаказов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОбщиеЗаказыПоследний
	|ИЗ
	|	ДатыОбщихЗаказов КАК ДатыОбщихЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Заказы КАК ЗаказПокупателяЗаказы
	|		ПО ДатыОбщихЗаказов.Ссылка = ЗаказПокупателяЗаказы.ЗаказПокупателя
	|			И ДатыОбщихЗаказов.ОбщийДата = ЗаказПокупателяЗаказы.Ссылка.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыОбщихЗаказов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Общийссылка,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ЗаказПокупателяЗаказы.Ссылка, ОбщиеЗаказыПоследний.Ссылка) КАК Общийссылка,
	|	ОбщиеЗаказыПоследний.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ЗаказПокупателяЗаказы.НомерСтроки, 0) КАК НомерСтроки
	|ПОМЕСТИТЬ ОбщиеЗаказы
	|ИЗ
	|	ОбщиеЗаказыПоследний КАК ОбщиеЗаказыПоследний
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Заказы КАК ЗаказПокупателяЗаказы
	|		ПО ОбщиеЗаказыПоследний.Общийссылка = ЗаказПокупателяЗаказы.Ссылка
	|			И ОбщиеЗаказыПоследний.Ссылка = ЗаказПокупателяЗаказы.ЗаказПокупателя
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Общийссылка,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя
	|ПОМЕСТИТЬ ОстаткиПоЗаказу
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(
	|			,
	|			ЗаказПокупателя В
	|				(ВЫБРАТЬ
	|					Заказы.Общийссылка
	|				ИЗ
	|					ОбщиеЗаказы КАК Заказы)) КАК ЗаказыПокупателейОстатки
	|ГДЕ
	|	ЗаказыПокупателейОстатки.СуммаВзаиморасчетовОстаток > 0
	|	И ЗаказыПокупателейОстатки.СуммаУпрОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиОбороты.ЗаказПокупателя
	|ПОМЕСТИТЬ ОтгрузкиОбороты
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			,
	|			,
	|			,
	|			ЗаказПокупателя В
	|				(ВЫБРАТЬ
	|					Заказы.Общийссылка
	|				ИЗ
	|					ОбщиеЗаказы КАК Заказы)) КАК ПродажиОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВнутренниеЗаказыОбороты.ВнутреннийЗаказ.ДокументОснование
	|ИЗ
	|	РегистрНакопления.ВнутренниеЗаказы.Обороты(
	|			,
	|			,
	|			,
	|			ВнутреннийЗаказ.ДокументОснование В
	|				(ВЫБРАТЬ
	|					Заказы.Общийссылка
	|				ИЗ
	|					ОбщиеЗаказы КАК Заказы)) КАК ВнутренниеЗаказыОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВОжиданииОтПоставщикаОбороты.ЗаказПокупателя
	|ПОМЕСТИТЬ ЗаказыВожидании
	|ИЗ
	|	РегистрНакопления.ТоварыВОжиданииОтПоставщика.Обороты КАК ТоварыВОжиданииОтПоставщикаОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщиеЗаказы.Общийссылка КАК Общийссылка,
	|	ОбщиеЗаказы.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ОстаткиПоЗаказу.ЗаказПокупателя) КАК ОстаткиПоЗаказам,
	|	МАКСИМУМ(ОтгрузкиОбороты.ЗаказПокупателя) КАК ОтгрузкиПоЗаказам,
	|	МАКСИМУМ(ОбщиеЗаказы.НомерСтроки) КАК НомерСтроки,
	|	ЗаказыВожидании.ЗаказПокупателя КАК ЗаказВОжидании
	|ПОМЕСТИТЬ СводПоОтгрузкамИОстаткам
	|ИЗ
	|	ОбщиеЗаказы КАК ОбщиеЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоЗаказу КАК ОстаткиПоЗаказу
	|		ПО ОбщиеЗаказы.Общийссылка = ОстаткиПоЗаказу.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтгрузкиОбороты КАК ОтгрузкиОбороты
	|		ПО ОбщиеЗаказы.Общийссылка = ОтгрузкиОбороты.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказыВожидании КАК ЗаказыВожидании
	|		ПО ОбщиеЗаказы.Общийссылка = ЗаказыВожидании.ЗаказПокупателя
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбщиеЗаказы.Общийссылка,
	|	ОбщиеЗаказы.Ссылка,
	|	ЗаказыВожидании.ЗаказПокупателя
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Общийссылка,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводПоОтгрузкамИОстаткам.Ссылка КАК Ссылка,
	|	5 КАК статус
	|ПОМЕСТИТЬ СтатусыПоЧастичноОтгруженнымЗаказам
	|ИЗ
	|	СводПоОтгрузкамИОстаткам КАК СводПоОтгрузкамИОстаткам
	|ГДЕ
	|	НЕ СводПоОтгрузкамИОстаткам.ОстаткиПоЗаказам ЕСТЬ NULL 
	|	И НЕ СводПоОтгрузкамИОстаткам.ОтгрузкиПоЗаказам ЕСТЬ NULL 
	|	И СводПоОтгрузкамИОстаткам.Ссылка = СводПоОтгрузкамИОстаткам.Общийссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводПоОтгрузкамИОстаткам.Общийссылка КАК Общийссылка,
	|	СводПоОтгрузкамИОстаткам.Ссылка КАК Ссылка,
	|	СводПоОтгрузкамИОстаткам.НомерСтроки
	|ПОМЕСТИТЬ ЧастичноОтгруженныеОбщиеЗаказы
	|ИЗ
	|	СводПоОтгрузкамИОстаткам КАК СводПоОтгрузкамИОстаткам
	|ГДЕ
	|	СводПоОтгрузкамИОстаткам.Общийссылка <> СводПоОтгрузкамИОстаткам.Ссылка
	|	И НЕ СводПоОтгрузкамИОстаткам.ОстаткиПоЗаказам ЕСТЬ NULL 
	|	И НЕ СводПоОтгрузкамИОстаткам.ОтгрузкиПоЗаказам ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Общийссылка,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧастичноОтгруженныеОбщиеЗаказы.Общийссылка КАК Общийссылка,
	|	ЧастичноОтгруженныеОбщиеЗаказы.Ссылка КАК Ссылка,
	|	ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА ЧастичноОтгруженныеОбщиеЗаказы.Ссылка = ЗаказПокупателяЗаказы.ЗаказПокупателя
	|				ТОГДА 0
	|			ИНАЧЕ ЗаказПокупателяТовары.Количество
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ТоварыВОбщихЗаказахПослеТекущего
	|ИЗ
	|	ЧастичноОтгруженныеОбщиеЗаказы КАК ЧастичноОтгруженныеОбщиеЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Заказы КАК ЗаказПокупателяЗаказы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|			ПО ЗаказПокупателяЗаказы.ЗаказПокупателя = ЗаказПокупателяТовары.Ссылка
	|		ПО ЧастичноОтгруженныеОбщиеЗаказы.Общийссылка = ЗаказПокупателяЗаказы.Ссылка
	|ГДЕ
	|	ЗаказПокупателяЗаказы.НомерСтроки >= ЧастичноОтгруженныеОбщиеЗаказы.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧастичноОтгруженныеОбщиеЗаказы.Общийссылка,
	|	ЧастичноОтгруженныеОбщиеЗаказы.Ссылка,
	|	ЗаказПокупателяТовары.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Общийссылка,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВОбщихЗаказахПослеТекущего.Общийссылка КАК Общийссылка,
	|	ТоварыВОбщихЗаказахПослеТекущего.Ссылка КАК Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВОбщихЗаказахПослеТекущего.Количество < ЗаказыПокупателейОстатки.КоличествоОстаток
	|				ТОГДА ЗаказыПокупателейОстатки.КоличествоОстаток - ТоварыВОбщихЗаказахПослеТекущего.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Недогруз
	|ПОМЕСТИТЬ НедогрузНаТекущийЗаказ
	|ИЗ
	|	ТоварыВОбщихЗаказахПослеТекущего КАК ТоварыВОбщихЗаказахПослеТекущего
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	|				,
	|				ЗаказПокупателя В
	|					(ВЫБРАТЬ
	|						Заказы.Общийссылка
	|					ИЗ
	|						ОбщиеЗаказы КАК Заказы)) КАК ЗаказыПокупателейОстатки
	|		ПО ТоварыВОбщихЗаказахПослеТекущего.Общийссылка = ЗаказыПокупателейОстатки.ЗаказПокупателя
	|			И ТоварыВОбщихЗаказахПослеТекущего.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыВОбщихЗаказахПослеТекущего.Общийссылка,
	|	ТоварыВОбщихЗаказахПослеТекущего.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Общийссылка,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводПоОтгрузкамИОстаткам.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СводПоОтгрузкамИОстаткам.Общийссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.Доставлен)
	|			ТОГДА 18
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ статусыОтгруженныеПолностьюПоОбщимЗаказам
	|ИЗ
	|	СводПоОтгрузкамИОстаткам КАК СводПоОтгрузкамИОстаткам
	|ГДЕ
	|	СводПоОтгрузкамИОстаткам.ОстаткиПоЗаказам ЕСТЬ NULL 
	|	И НЕ СводПоОтгрузкамИОстаткам.ОтгрузкиПоЗаказам ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НедогрузНаТекущийЗаказ.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА НедогрузНаТекущийЗаказ.Недогруз = 0
	|			ТОГДА ВЫБОР
	|					КОГДА НедогрузНаТекущийЗаказ.Общийссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.Доставлен)
	|						ТОГДА 18
	|					ИНАЧЕ 4
	|				КОНЕЦ
	|		ИНАЧЕ 5
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ СтатусыИзЧастичноОтгруженныхОбщихЗаказов
	|ИЗ
	|	НедогрузНаТекущийЗаказ КАК НедогрузНаТекущийЗаказ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводПоОтгрузкамИОстаткам.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СводПоОтгрузкамИОстаткам.Общийссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.Вобработке)
	|			ТОГДА 16
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ СтатусыПоЗакрытымЗаказам
	|ИЗ
	|	СводПоОтгрузкамИОстаткам КАК СводПоОтгрузкамИОстаткам
	|ГДЕ
	|	СводПоОтгрузкамИОстаткам.ОстаткиПоЗаказам ЕСТЬ NULL 
	|	И СводПоОтгрузкамИОстаткам.ОтгрузкиПоЗаказам ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводПоОтгрузкамИОстаткам.Ссылка,
	|	17 КАК Статус
	|ПОМЕСТИТЬ СтатусыЗаказыВОжидании
	|ИЗ
	|	СводПоОтгрузкамИОстаткам КАК СводПоОтгрузкамИОстаткам
	|ГДЕ
	|	СводПоОтгрузкамИОстаткам.ОтгрузкиПоЗаказам ЕСТЬ NULL 
	|	И НЕ СводПоОтгрузкамИОстаткам.ОстаткиПоЗаказам ЕСТЬ NULL 
	|	И НЕ СводПоОтгрузкамИОстаткам.ЗаказВОжидании ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводПоОтгрузкамИОстаткам.Общийссылка КАК Общийссылка,
	|	СводПоОтгрузкамИОстаткам.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НеОтгруженныеЗаказы
	|ИЗ
	|	СводПоОтгрузкамИОстаткам КАК СводПоОтгрузкамИОстаткам
	|ГДЕ
	|	СводПоОтгрузкамИОстаткам.ОтгрузкиПоЗаказам ЕСТЬ NULL 
	|	И НЕ СводПоОтгрузкамИОстаткам.ОстаткиПоЗаказам ЕСТЬ NULL 
	|	И СводПоОтгрузкамИОстаткам.ЗаказВОжидании ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Общийссылка,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(ЗаказПокупателяЗаказы.Ссылка.Дата, НеОтгруженныеЗаказы.Общийссылка.Дата)) КАК ДатаНаперемещение,
	|	НеОтгруженныеЗаказы.Общийссылка КАК Общийссылка
	|ПОМЕСТИТЬ ДатыЗаказовНаПеремещение
	|ИЗ
	|	НеОтгруженныеЗаказы КАК НеОтгруженныеЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Заказы КАК ЗаказПокупателяЗаказы
	|		ПО НеОтгруженныеЗаказы.Общийссылка = ЗаказПокупателяЗаказы.ЗаказПокупателя
	|
	|СГРУППИРОВАТЬ ПО
	|	НеОтгруженныеЗаказы.Общийссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Общийссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыЗаказовНаПеремещение.Общийссылка КАК Общийссылка,
	|	ЗаказПокупателяЗаказы.Ссылка КАК ПеремещениеСсылка,
	|	НеОтгруженныеЗаказы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НеотгруженныеСЗаказамиНаПеремещение
	|ИЗ
	|	ДатыЗаказовНаПеремещение КАК ДатыЗаказовНаПеремещение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Заказы КАК ЗаказПокупателяЗаказы
	|		ПО ДатыЗаказовНаПеремещение.Общийссылка = ЗаказПокупателяЗаказы.ЗаказПокупателя
	|			И ДатыЗаказовНаПеремещение.ДатаНаперемещение = ЗаказПокупателяЗаказы.Ссылка.Дата
	|		ПОЛНОЕ СОЕДИНЕНИЕ НеОтгруженныеЗаказы КАК НеОтгруженныеЗаказы
	|		ПО ДатыЗаказовНаПеремещение.Общийссылка = НеОтгруженныеЗаказы.Общийссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Общийссылка,
	|	ПеремещениеСсылка,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка ЕСТЬ NULL 
	|						ТОГДА ВЫБОР
	|								КОГДА ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка.Проведен
	|									ТОГДА ВЫБОР
	|											КОГДА ЗаданиеНаОтгрузкуЗаказыПокупателей.КоличествоШтук = ЗаданиеНаОтгрузкуЗаказыПокупателей.КоличествоШтукОтгружено
	|												ТОГДА ВЫБОР
	|														КОГДА ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка.Выполнено
	|															ТОГДА 14
	|														ИНАЧЕ 11
	|													КОНЕЦ
	|											ИНАЧЕ 12
	|										КОНЕЦ
	|								КОГДА ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка.ПометкаУдаления = ИСТИНА
	|									ТОГДА -1
	|								ИНАЧЕ 13
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА НЕ НеотгруженныеСЗаказамиНаПеремещение.Общийссылка.Транзит
	|									ИЛИ НеотгруженныеСЗаказамиНаПеремещение.ПеремещениеСсылка ЕСТЬ NULL 
	|								ТОГДА ВЫБОР
	|										КОГДА НеотгруженныеСЗаказамиНаПеремещение.Общийссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.Вобработке)
	|											ТОГДА 16
	|										КОГДА НеотгруженныеСЗаказамиНаПеремещение.Общийссылка.Проверен
	|											ТОГДА 2
	|										ИНАЧЕ 1
	|									КОНЕЦ
	|							ИНАЧЕ NULL
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Проведен
	|					ТОГДА ВЫБОР
	|							КОГДА ЗаданиеНаОтгрузкуЗаказыПокупателей.КоличествоШтук = ЗаданиеНаОтгрузкуЗаказыПокупателей.КоличествоШтукОтгружено
	|								ТОГДА 8
	|							ИНАЧЕ 9
	|						КОНЕЦ
	|				КОГДА ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.ПометкаУдаления = ИСТИНА
	|					ТОГДА -1
	|				ИНАЧЕ 10
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	НеотгруженныеСЗаказамиНаПеремещение.Ссылка КАК Ссылка,
	|	НеотгруженныеСЗаказамиНаПеремещение.ПеремещениеСсылка КАК ПеремещениеСсылка,
	|	НеотгруженныеСЗаказамиНаПеремещение.Общийссылка КАК Общийссылка
	|ПОМЕСТИТЬ СтатусыПоЗаказамНаОтгрузке
	|ИЗ
	|	НеотгруженныеСЗаказамиНаПеремещение КАК НеотгруженныеСЗаказамиНаПеремещение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК ЗаданиеНаОтгрузкуЗаказыПокупателей
	|		ПО НеотгруженныеСЗаказамиНаПеремещение.Общийссылка = ЗаданиеНаОтгрузкуЗаказыПокупателей.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеремещение.ЗаказыПокупателей КАК ЗаданиеНаПеремещениеЗаказыПокупателей
	|		ПО НеотгруженныеСЗаказамиНаПеремещение.Общийссылка = ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ПеремещениеСсылка,
	|	Общийссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыПоЗаказамНаОтгрузке.Ссылка КАК Ссылка,
	|	СтатусыПоЗаказамНаОтгрузке.ПеремещениеСсылка КАК ПеремещениеСсылка,
	|	СтатусыПоЗаказамНаОтгрузке.Общийссылка КАК Общийссылка
	|ПОМЕСТИТЬ ЗаказыВПутиНаФилиалы
	|ИЗ
	|	СтатусыПоЗаказамНаОтгрузке КАК СтатусыПоЗаказамНаОтгрузке
	|ГДЕ
	|	СтатусыПоЗаказамНаОтгрузке.Статус ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ПеремещениеСсылка,
	|	Общийссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыВПутиНаФилиалы.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ПеремещениеТоваров.Ссылка ЕСТЬ NULL 
	|					И ПеремещениеТоваров.Проведен
	|				ТОГДА 6
	|			ИНАЧЕ 7
	|		КОНЕЦ) КАК статус
	|ПОМЕСТИТЬ СтатусыПоФилиаламВПути
	|ИЗ
	|	ЗаказыВПутиНаФилиалы КАК ЗаказыВПутиНаФилиалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК ЗаданиеНаОтгрузкуЗаказыПокупателей
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|			ПО ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация = ПеремещениеТоваров.Перемещение
	|		ПО ЗаказыВПутиНаФилиалы.ПеремещениеСсылка = ЗаданиеНаОтгрузкуЗаказыПокупателей.ЗаказПокупателя
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыВПутиНаФилиалы.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	статусыОтгруженныеПолностьюПоОбщимЗаказам.Ссылка,
	|	статусыОтгруженныеПолностьюПоОбщимЗаказам.Статус
	|ПОМЕСТИТЬ ВсеЗаказыСоСтатусами
	|ИЗ
	|	статусыОтгруженныеПолностьюПоОбщимЗаказам КАК статусыОтгруженныеПолностьюПоОбщимЗаказам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатусыПоЧастичноОтгруженнымЗаказам.Ссылка,
	|	СтатусыПоЧастичноОтгруженнымЗаказам.статус
	|ИЗ
	|	СтатусыПоЧастичноОтгруженнымЗаказам КАК СтатусыПоЧастичноОтгруженнымЗаказам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатусыИзЧастичноОтгруженныхОбщихЗаказов.Ссылка,
	|	СтатусыИзЧастичноОтгруженныхОбщихЗаказов.Статус
	|ИЗ
	|	СтатусыИзЧастичноОтгруженныхОбщихЗаказов КАК СтатусыИзЧастичноОтгруженныхОбщихЗаказов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатусыПоЗакрытымЗаказам.Ссылка,
	|	СтатусыПоЗакрытымЗаказам.Статус
	|ИЗ
	|	СтатусыПоЗакрытымЗаказам КАК СтатусыПоЗакрытымЗаказам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатусыПоЗаказамНаОтгрузке.Ссылка,
	|	СтатусыПоЗаказамНаОтгрузке.Статус
	|ИЗ
	|	СтатусыПоЗаказамНаОтгрузке КАК СтатусыПоЗаказамНаОтгрузке
	|ГДЕ
	|	НЕ СтатусыПоЗаказамНаОтгрузке.Статус ЕСТЬ NULL 
	|	И СтатусыПоЗаказамНаОтгрузке.Статус > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатусыПоФилиаламВПути.Ссылка,
	|	СтатусыПоФилиаламВПути.статус
	|ИЗ
	|	СтатусыПоФилиаламВПути КАК СтатусыПоФилиаламВПути
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатусыЗаказыВОжидании.Ссылка,
	|	СтатусыЗаказыВОжидании.Статус
	|ИЗ
	|	СтатусыЗаказыВОжидании КАК СтатусыЗаказыВОжидании
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.НомерTerminal,
	|	ВТ.СтатусTerminal,
	|	ВсеЗаказыСоСтатусами.Статус,
	|	ВсеЗаказыСоСтатусами.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ВсеЗаказыСоСтатусами.Ссылка,
	|	ВТ.СуммаTerminal
	|ИЗ
	|	ВТ КАК ВТ
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВсеЗаказыСоСтатусами КАК ВсеЗаказыСоСтатусами
	|		ПО ВТ.НомерTerminal = ВсеЗаказыСоСтатусами.Ссылка.Номер";
	
	возврат текст0;
КонецФункции

//+++ 29.06.2018
функция ПолучитьСписокЗаказов(НачПериода,КонПериода)
	
	запрос1=новый запрос;
	запрос1.УстановитьПараметр("начПериода",начПериода);	
	запрос1.УстановитьПараметр("КонПериода",КонПериода);	
	запрос1.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Точки.Владелец
		|ПОМЕСТИТЬ НужныеКонтрагенты
		|ИЗ
		|	Справочник.Точки КАК Точки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказПокупателя.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Дата МЕЖДУ &начПериода И &конПериода
		|	И ЗаказПокупателя.Контрагент В
		|			(ВЫБРАТЬ
		|				НужныеКонтрагенты.Владелец
		|			ИЗ
		|				НужныеКонтрагенты КАК НужныеКонтрагенты)";
	табл1 = запрос1.Выполнить().Выгрузить();

	Список1 = новый СписокЗначений;
	Список1.ЗагрузитьЗначения( табл1.ВыгрузитьКолонку("Ссылка") );
	возврат Список1;
	
КонецФункции

//+++ 29.06.2018
функция ПолучитьТекстСравнения()
	текст12 = "ВЫБРАТЬ
	          |	ВТ.НомерTerminal,
	          |	ВТ.СтатусTerminal,
	          |	ЕСТЬNULL(ВТ.СуммаTerminal, 0) КАК СуммаTerminal
	          |ПОМЕСТИТЬ ВТ
	          |ИЗ
	          |	&Выгрузка КАК ВТ
	          |
	          |ИНДЕКСИРОВАТЬ ПО
	          |	ВТ.НомерTerminal
	          |;
	          |
	          |////////////////////////////////////////////////////////////////////////////////
	          |ВЫБРАТЬ
	          |	ЗаказыСоСтатусами1C.Статус,
	          |	ЗаказыСоСтатусами1C.Заказ
	          |ПОМЕСТИТЬ ВТ_Заказы1C
	          |ИЗ
	          |	&ЗаказыСоСтатусами1C КАК ЗаказыСоСтатусами1C
	          |;
	          |
	          |////////////////////////////////////////////////////////////////////////////////
	          |ВЫБРАТЬ
	          |	ВТ.НомерTerminal,
	          |	ВТ.СтатусTerminal,
			  //+++ 18.07.2018 - Задача № 50914 --- слияние статусов в Terminal в 8
			  //|ВсеЗаказыСоСтатусами.Статус,
	          |	выбор когда ВсеЗаказыСоСтатусами.Статус=21 
		  	  |	  или (ВсеЗаказыСоСтатусами.Статус>=8 и ВсеЗаказыСоСтатусами.Статус<=14) тогда 8
		  	  |	иначе 
			  |		выбор когда ВсеЗаказыСоСтатусами.Статус=2 и ВсеЗаказыСоСтатусами.Ссылка.Резерв=ЛОЖЬ тогда 22 
			  |			Иначе ВсеЗаказыСоСтатусами.Статус Конец
			  |	Конец как Статус,
			  //+++)
	          |	ВсеЗаказыСоСтатусами.СсылкаСуммаДокумента КАК СуммаДокумента,
	          |	ВсеЗаказыСоСтатусами.Ссылка,
	          |	ВТ.СуммаTerminal
	          |ИЗ
	          |	ВТ КАК ВТ
	          |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	          |			Заказы1С.Статус КАК Статус,
	          |			Зак.Ссылка КАК Ссылка,
	          |			Зак.СуммаДокумента КАК СсылкаСуммаДокумента,
	          |			Зак.Номер КАК СсылкаНомер
	          |		ИЗ
	          |			ВТ_Заказы1C КАК Заказы1С
	          |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	          |					док.Ссылка КАК Ссылка,
	          |					док.СуммаДокумента КАК СуммаДокумента,
	          |					док.Номер КАК Номер
	          |				ИЗ
	          |					Документ.ЗаказПокупателя КАК док
	          |				ГДЕ
	          |					док.Дата >= &НачПериода
	          |					И док.Дата <= &КонПериода) КАК Зак
	          |				ПО Заказы1С.Заказ = Зак.Ссылка) КАК ВсеЗаказыСоСтатусами
	          |		ПО ВТ.НомерTerminal = ВсеЗаказыСоСтатусами.СсылкаНомер";
возврат текст12;
КонецФункции

Функция Прочитать(НачПериода,КонПериода)   Экспорт
удачно = ПодключитьсяКсерверу("Заказы");
	Если удачно тогда
		сообщить(строка(ТекущаяДата())+" получение данных на Сервере завершено !", СтатусСообщения.Информация);
	Иначе	
		сообщить(строка(ТекущаяДата())+" Ошибка при подключении к серверу!", СтатусСообщения.Внимание);
		#Если Клиент тогда
		Предупреждение("Ошибка подключения к серверу!",30);
		#КонецЕсли
	КонецЕсли;
Таб = разобрать();	
	#Если Клиент тогда
    	сообщить("Получено "+строка( Таб.Количество() )+" заказов с Terminal.");
	#КонецЕсли


//+++( 29.06.2018 -------------
	списокЗаказов = ПолучитьСписокЗаказов(НачПериода,КонецДня(КонПериода));
	ЗаказыСоСтатусами1C = ОбменСУТИнтернетМагазин.ПолучитьстатусыЗаказов(списокЗаказов); // ТАЖЕ САМАЯ ФУНКЦИЯ, которая выгружает в Terminal!
	#Если Клиент тогда
		сообщить("Получено "+строка( ЗаказыСоСтатусами1C.Количество() )+" заказов 1C.");
	#КонецЕсли

	Запрос = Новый Запрос;
	//+++ 29.06.2018	
	Запрос.Текст = ПолучитьТекстСравнения();
	Запрос.УстановитьПараметр("ЗаказыСоСтатусами1C",ЗаказыСоСтатусами1C);
	//Запрос.Текст =  ПолучитьСтарыйТекст();
	//+++)
	
	Запрос.УстановитьПараметр("Выгрузка",таб);
	Запрос.УстановитьПараметр("начПериода",НачПериода);
	Запрос.УстановитьПараметр("конПериода",КонецДня(КонПериода));

	табл0 = Запрос.Выполнить().Выгрузить();
	#Если Клиент тогда
		сообщить(строка(ТекущаяДата())+" получена таблица сравнения заказов по номеру.");
	#КонецЕсли
	
возврат табл0;	
конецфункции

Функция ПодключитьсяКсерверу(ТипДокумента)
	
Попытка
//ПроксиСервер = Новый ИнтернетПрокси;
//ПроксиСервер.Пользователь = "admin";
//ПроксиСервер.Пароль       = "cegthvfhbj";
									 //+":"+формат(порт,"ЧГ=0")                       cegthvfhbj
Соединение = Новый HTTPСоединение("terminal.yst.ru:80",,"admin","cegthvfhbj" );   //"http://localhost"  50876

Если Соединение = Неопределено Тогда
	Возврат Ложь;
КонецЕсли;

НП = Формат(НачПериода,"ДФ=yyyy-MM-dd");
КП = Формат(КонПериода,"ДФ=yyyy-MM-dd");
Если ТипДокумента = "Заказы" тогда
ресурс = "api/ordersapi/get?begindate="+НП+"&enddate="+КП;
иначеесли ТипДокумента = "Реализации" тогда
ресурс = "api/salesapi/get?begindate="+НП+"&enddate="+КП;
ИначеЕсли ТипДокумента = "СезонныеЗаказы" тогда
ресурс = "api/seasonordersapi/get?begindate="+НП+"&enddate="+КП;

конецЕсли;
Заголовки = Новый Соответствие();
 //АдресРесурса = СтрокаПодключения+":"+формат(порт,"ЧГ=0")+ресурс;
   АдресРесурса = "store.yst.ru:80"+ресурс;
// посылаем запрос
ИмяФайлаРезультата = ПолучитьИмяВременногоФайла();
//Если post тогда
//	HTTPОтвет = Соединение.Записать( ИмяФайла, Ресурс, Заголовки) ;
//иначе	
	// ТОЛЬКО ЧИТАТЬ!
	   Заголовки.Вставить("HASH", "D5790E89580D8B75927F804E738CFCE");  
	   Заголовки.Вставить("Accept", "application/xml");  
	   //  http://terminal.yst.ru
		HTTPзапрос = Новый HTTPЗапрос("/"+Ресурс, Заголовки);
		HTTPОтвет = Соединение.Получить( HTTPзапрос, ИмяФайлаРезультата);
		//HTTPОтвет = Соединение.ОтправитьДляОбработки( Ресурс, ИмяФайлаРезультата);
//КонецЕсли;

Соединение = Неопределено; // разорвать соединение

 ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
 ТекстовыйФайлОтвет.Прочитать(ИмяФайлаРезультата, КодировкаТекста.UTF8);
 СтрокаJSONРезультат = ТекстовыйФайлОтвет.ПолучитьТекст();
 ТекстовыйФайлОтвет = неопределено; // отключается от файла
 
сообщить("Статус ответа: "+строка(HTTPОтвет.КодСостояния)+" Ответ сервера: '"+СтрокаJSONРезультат+"'" );

Если HTTPОтвет.КодСостояния = 200 тогда
	рез = Истина;
	сообщить("Ответ находится во временном файле: "+ИмяФайлаРезультата);
Иначе
	рез = ЛОЖЬ;
	сообщить("Ответ сервера - указывает о наличие ошибки!", СтатусСообщения.ОченьВажное);
КонецЕсли;

исключение
сообщить("Ошибка : "+ОписаниеОшибки() );
	рез = ЛОЖЬ;
КонецПопытки;

возврат рез;

КонецФункции
функция Разобрать()
 ЧтениеXML = Новый ЧтениеXML;
 ЧтениеXML.ОткрытьФайл(ИмяФайлаРезультата);
 
КЧ = Новый КвалификаторыЧисла(12,2);
КС = Новый КвалификаторыСтроки(20);
Массив = Новый Массив;
Массив.Добавить(Тип("Строка"));
ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
Массив.Очистить();
Массив.Добавить(Тип("Число"));
ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
 
 ТаблицаЗаказа = Новый ТаблицаЗначений;
 ТаблицаЗаказа.Колонки.Добавить("НомерTerminal",ОписаниеТиповС );
 ТаблицаЗаказа.Колонки.Добавить("СтатусTerminal",ОписаниеТиповЧ);
 ТаблицаЗаказа.Колонки.Добавить("СуммаTerminal",ОписаниеТиповЧ);
 
 Запись = Новый Структура;
 
 Пока ЧтениеXML.Прочитать() Цикл
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
   Имя = ЧтениеXML.Имя;
  КонецЕсли;
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
   Запись.Вставить(Имя, ЧтениеXML.Значение);      //информацию внутри блока XML помещаем в структуру
  КонецЕсли;
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
   Если ЧтениеXML.Имя = "order" Тогда
    СтрокаТЗ = ТаблицаЗаказа.Добавить();
    СтрокаТЗ.НомерTerminal = Запись.num;
    СтрокаТЗ.статусTerminal = Строка(Запись.st);
    СтрокаТЗ.СуммаTerminal = Число(Запись.sum);
   КонецЕсли;
  КонецЕсли;
 КонецЦикла;
 ЧтениеXML.Закрыть();	
возврат ТаблицаЗаказа;	
конецфункции	
	
	
Функция ПрочитатьРеализации()   Экспорт
удачно = ПодключитьсяКсерверу("Реализации");
	Если удачно тогда
		сообщить(строка(ТекущаяДата())+" получение данных на Сервере завершено !", СтатусСообщения.Информация);
	Иначе	
		сообщить(строка(ТекущаяДата())+" Ошибка при подключении к серверу!", СтатусСообщения.Внимание);
		#Если Клиент тогда
		Предупреждение("Ошибка подключения к серверу!",30);
		#КонецЕсли
	КонецЕсли;
Таб = разобратьРеализации();	
//результат= неопределено;	

//МВ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Выгрузка.Номер,
		|	Выгрузка.СуммаРеализации
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&Выгрузка КАК Выгрузка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка,
		|	РеализацияТоваровУслуг.Проведен,
		|	РеализацияТоваровУслуг.Дата,
		|	РеализацияТоваровУслуг.СуммаДокумента,
		|	РеализацияТоваровУслуг.ПометкаУдаления,
		|	РеализацияТоваровУслуг.Номер
		|ПОМЕСТИТЬ Реализации
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ГОД) = НАЧАЛОПЕРИОДА(&ДатаНач, ГОД)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Номер КАК Номер,
		|	ЕСТЬNULL(Реализации.СуммаДокумента, 0) КАК СуммаДокумента,
		|	Реализации.Ссылка,
		|	ВТ.СуммаРеализации КАК СуммаДокументаStore,
		|	Реализации.Номер КАК НомерДокумента
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реализации КАК Реализации
		|		ПО ВТ.Номер = Реализации.Номер";
		
	//Запрос.МенеджерВременныхТаблиц = МВ;
	Запрос.УстановитьПараметр("Выгрузка",таб);
	Запрос.УстановитьПараметр("ДатаНач",НачПериода);
	Запрос.УстановитьПараметр("ДатаКон",КонПериода);

	Результат = Запрос.Выполнить().Выгрузить();
//	
возврат Результат;	
конецфункции
функция РазобратьРеализации() Экспорт
 ЧтениеXML = Новый ЧтениеXML;
 ЧтениеXML.ОткрытьФайл(ИмяФайлаРезультата);
 
КЧ = Новый КвалификаторыЧисла(12,2);
КС = Новый КвалификаторыСтроки(20);
Массив = Новый Массив;
Массив.Добавить(Тип("Строка"));
ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
Массив.Очистить();
Массив.Добавить(Тип("Число"));
ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
 
 ТаблицаЗаказа = Новый ТаблицаЗначений;
 ТаблицаЗаказа.Колонки.Добавить("Номер",ОписаниеТиповС );
 //ТаблицаЗаказа.Колонки.Добавить("СтатусStor",ОписаниеТиповЧ);
 ТаблицаЗаказа.Колонки.Добавить("СуммаРеализации",ОписаниеТиповЧ);
 
 Запись = Новый Структура;
 
 Пока ЧтениеXML.Прочитать() Цикл
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
   Имя = ЧтениеXML.Имя;
  КонецЕсли;
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
   Запись.Вставить(Имя, ЧтениеXML.Значение);      //информацию внутри блока XML помещаем в структуру
  КонецЕсли;
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
   Если ЧтениеXML.Имя = "sale" Тогда
    СтрокаТЗ = ТаблицаЗаказа.Добавить();
    СтрокаТЗ.Номер = Запись.num;
    СтрокаТЗ.СуммаРеализации = Число(Запись.sum);
   КонецЕсли;
  КонецЕсли;
 КонецЦикла;
 ЧтениеXML.Закрыть();	
возврат ТаблицаЗаказа;	
конецфункции	

Функция ПрочитатьСезонныеЗаказы()   Экспорт
удачно = ПодключитьсяКсерверу("СезонныеЗаказы");
	Если удачно тогда
		сообщить(строка(ТекущаяДата())+" получение данных на Сервере завершено !", СтатусСообщения.Информация);
	Иначе	
		сообщить(строка(ТекущаяДата())+" Ошибка при подключении к серверу!", СтатусСообщения.Внимание);
		#Если Клиент тогда
		Предупреждение("Ошибка подключения к серверу!",30);
		#КонецЕсли
	КонецЕсли;
Таб = разобратьРеализации();	
//результат= неопределено;	

//МВ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Выгрузка.Номер,
		|	Выгрузка.СуммаРеализации
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&Выгрузка КАК Выгрузка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказПокупателяСезонный.Ссылка,
		|	ЗаказПокупателяСезонный.Проведен,
		|	ЗаказПокупателяСезонный.Дата,
		|	ЗаказПокупателяСезонный.СуммаДокумента,
		|	ЗаказПокупателяСезонный.ПометкаУдаления,
		|	ЗаказПокупателяСезонный.Номер
		|ПОМЕСТИТЬ Реализации
		|ИЗ
		|	Документ.ЗаказПокупателяСезонный КАК ЗаказПокупателяСезонный
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(ЗаказПокупателяСезонный.Дата, ГОД) = НАЧАЛОПЕРИОДА(&ДатаНач, ГОД)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Номер КАК Номер,
		|	ЕСТЬNULL(Реализации.СуммаДокумента, 0) КАК СуммаДокумента,
		|	Реализации.Ссылка,
		|	ВТ.СуммаРеализации КАК СуммаДокументаStore,
		|	Реализации.Номер КАК НомерДокумента
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реализации КАК Реализации
		|		ПО ВТ.Номер = Реализации.Номер";
		
	//Запрос.МенеджерВременныхТаблиц = МВ;
	Запрос.УстановитьПараметр("Выгрузка",таб);
	Запрос.УстановитьПараметр("ДатаНач",НачПериода);
	Запрос.УстановитьПараметр("ДатаКон",КонПериода);

	Результат = Запрос.Выполнить().Выгрузить();
//	
возврат Результат;	
конецфункции
	