
Процедура КнопкаВыполнитьНажатие(Кнопка)
	списНом = неопределено;
	ЦеныПоПравилам = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, списНом,,неопределено, неопределено);
	ЦеныКолесаТут = ПолучитьЦеныАЭ();
	
	//ЦеныКолесаТут.выбратьСтроку();
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЦеныПравила.Номенклатура,
	             |	ЦеныПравила.ЦенаПоТипуЦен,
	             |	ЦеныПравила.МинимальнаяЦена,
	             |	ЦеныПравила.ЦенаСоСкидкойПредоплаты
	             |ПОМЕСТИТЬ втЦеныПоПравилам
	             |ИЗ
	             |	&ЦеныПравила КАК ЦеныПравила
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	тзЦеныКолесаТут.НоменклатураКод,
	             |	тзЦеныКолесаТут.Цена
	             |ПОМЕСТИТЬ втЦеныКолесаТутБН
	             |ИЗ
	             |	&тзЦеныКолесаТут КАК тзЦеныКолесаТут
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втЦеныКолесаТутБН.НоменклатураКод,
	             |	втЦеныКолесаТутБН.Цена,
	             |	НоменклатураСпр.Ссылка КАК Номенклатура
	             |ПОМЕСТИТЬ втЦеныКолесаТут
	             |ИЗ
	             |	втЦеныКолесаТутБН КАК втЦеныКолесаТутБН
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	             |		ПО втЦеныКолесаТутБН.НоменклатураКод = НоменклатураСпр.Код
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	А.Номенклатура,
	             |	ВЫРАЗИТЬ(ВЫБОР
	             |			КОГДА А.КоличествоОстаток <> 0
	             |				ТОГДА А.СтоимостьОстаток / А.КоличествоОстаток
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК ЧИСЛО(15, 0)) КАК СредняяПоПартиям
	             |ПОМЕСТИТЬ втСредняяПоПартиям
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		ПартииТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура,
	             |		СУММА(ПартииТоваровНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	             |		СУММА(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток) КАК СтоимостьОстаток
	             |	ИЗ
	             |		РегистрНакопления.ПартииТоваровНаСкладах.Остатки(, НЕ Склад.ЗапретитьИспользование) КАК ПартииТоваровНаСкладахОстатки
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		ПартииТоваровНаСкладахОстатки.Номенклатура) КАК А
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втЦеныКолесаТут.Номенклатура КАК Номенклатура,
	             |	ЕСТЬNULL(втЦеныПоПравилам.ЦенаСоСкидкойПредоплаты, 0) КАК ЦенаПоПравилам,
	             |	ЕСТЬNULL(втСредняяПоПартиям.СредняяПоПартиям, 0) КАК ЦенаСредняяПоПартиям,
	             |	втЦеныКолесаТут.Цена КАК ЦенаКолесаТут,
	             |	втЦеныКолесаТут.НоменклатураКод
	             |ПОМЕСТИТЬ вт
	             |ИЗ
	             |	втЦеныКолесаТут КАК втЦеныКолесаТут
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныПоПравилам КАК втЦеныПоПравилам
	             |		ПО втЦеныКолесаТут.Номенклатура = втЦеныПоПравилам.Номенклатура
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втСредняяПоПартиям КАК втСредняяПоПартиям
	             |		ПО втЦеныКолесаТут.Номенклатура = втСредняяПоПартиям.Номенклатура
	             |ГДЕ
	             |	//ЗаменитьУсловие
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	вт.Номенклатура КАК Номенклатура,
	             |	вт.ЦенаПоПравилам,
	             |	вт.ЦенаСредняяПоПартиям,
	             |	вт.ЦенаКолесаТут,
	             |	вт.НоменклатураКод,
	             |	вт.ЦенаПоПравилам - вт.ЦенаСредняяПоПартиям КАК РазницаПравилаСредняя,
	             |	вт.ЦенаПоПравилам - вт.ЦенаКолесаТут КАК РазницаПравилаСайт
	             |ИЗ
	             |	вт КАК вт
	             |ГДЕ
	             |	(вт.ЦенаПоПравилам < вт.ЦенаСредняяПоПартиям
	             |			ИЛИ НЕ вт.ЦенаПоПравилам = вт.ЦенаКолесаТут)
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Номенклатура
	             |АВТОУПОРЯДОЧИВАНИЕ";
				 
				 Если ЗначениеЗаполнено(ВидТовара) тогда
					 Запрос.Текст = СтрЗаменить(Запрос.Текст,"//ЗаменитьУсловие", "втЦеныКолесаТут.Номенклатура.ВидТовара = &ВидТовара");
				 иначе
					 Запрос.Текст = СтрЗаменить(Запрос.Текст,"//ЗаменитьУсловие", "ИСТИНА");
				 КонецЕсли;
				 
	Запрос.УстановитьПараметр("ЦеныПравила",ЦеныПоПравилам);
	Запрос.УстановитьПараметр("тзЦеныКолесаТут",ЦеныКолесаТут);
	Запрос.УстановитьПараметр("ВидТовара",ВидТовара);
	
	Макет = ПолучитьМакет("Макет");
	
	Результат = Запрос.Выполнить();
	ТабДок = новый ТабличныйДокумент;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.Показать("Сравнение цен для ИМ");
	
КонецПроцедуры


функция ПолучитьСоединение(СтрокаСоединенияCOM="", v8="V82") Экспорт
	
	v8connect = Новый COMОбъект(v8+".ComConnector");
	Попытка
	Соединение = v8connect.Connect(СтрокаСоединенияCOM);
	#Если Клиент Тогда
	ТипБазы = "Ref=";  длТипаБазы=3;
	Если Найти(СтрокаСоединенияCOM,"File=")>0 тогда		
		ТипБазы = "File="; длТипаБазы=4;
	КонецЕсли;	
	имяБД = Прав(СтрокаСоединенияCOM,стрДлина(СтрокаСоединенияCOM) - найти(СтрокаСоединенияCOM,ТипБазы)-длТипаБазы);
	имяБД = Лев(имяБД, найти(имяБД,";")-1);
	Сообщить("Соединение с базой: "+имяБД+" - успешно установлено.", СтатусСообщения.Информация);
	#КонецЕсли
	Исключение
	#Если Клиент Тогда
		Сообщить("Ошибка соединения с базой: " + ОписаниеОшибки(), СтатусСообщения.Внимание);
	#КонецЕсли
		Возврат неопределено;
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

функция ПолучитьЦеныАЭ()
	//соединение
	ЦеныКолесаТут = новый ТаблицаЗначений;
	ЦеныКолесаТут.Колонки.Добавить("НоменклатураКод"	, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(9, ДопустимаяДлина.Переменная)));
	ЦеныКолесаТут.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	
	Base="Srvr=""sigma:2041"";Ref=""v82ib_fedunov_ut""";
	UsrPwd = "Usr=Администратор;Pwd=cegthuthjq";
	СтрокаСоединенияCOM = Base+";"+UsrPwd;
	
	Соединение = ПолучитьСоединение(СтрокаСоединенияCOM); 
	Если Соединение = неопределено тогда
		возврат ЛОЖЬ;
	КонецЕсли;
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст=Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст="ВЫБРАТЬ
	|ТоварыНаСайте.Номенклатура.Код как НоменклатураКод,
	|ТоварыНаСайте.Цена
	|ИЗ
	|	РегистрСведений.ТоварыНаСайте КАК ТоварыНаСайте
	|ГДЕ
	|	ТоварыНаСайте.Цена <> 0";

    рез = Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		нстр = ЦеныКолесаТут.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,рез);
	КонецЦикла;
	Возврат ЦеныКолесаТут;
КонецФункции
