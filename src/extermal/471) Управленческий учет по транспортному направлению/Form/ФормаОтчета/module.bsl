
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНач");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = ДатаНач;
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаКон");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = ДатаКон;  	
КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНач");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = ДатаНач;
КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаКон");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонецДня(ДатаКон);
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЗаданиеНаОтгрузку.Дата, ДЕНЬ) КАК Дата,
		|	ЗаданиеНаОтгрузку.Ссылка,
		|	ЗаданиеНаОтгрузку.Перевозчик,
		|	ЗаданиеНаОтгрузку.Направление,
		|	ЗаданиеНаОтгрузку.МаркаАвтомобиля,
		|	ЗаданиеНаОтгрузку.МаркаПрицепа,
		|	ЕСТЬNULL(ЗаданиеНаОтгрузку.СуммаОбратки, 0) + ЕСТЬNULL(ЗаданиеНаОтгрузку.СуммаОбраткиЯШТ, 0) КАК СуммаОбраткиОбщая,
		|	ЕСТЬNULL(ЗаданиеНаОтгрузку.Километров, 0) КАК Километров,
		|	ЗаданиеНаОтгрузку.ВесМакс КАК Тоннаж,
		|	ЕСТЬNULL(ЗаданиеНаОтгрузку.Тариф, 0) КАК СтоимостьДоставки,
		|	ЕСТЬNULL(ЗаданиеНаОтгрузку.ГосНомерАвтомобиля, ""не указан"") КАК ГосНомерАвтомобиля,
		|	ЕСТЬNULL(ВложенныйЗапрос.Пробег, 0) КАК РасстояниеВозвратВГараж,
		|	ЗаданиеНаОтгрузку.Представление
		|ПОМЕСТИТЬ Маршруты
		|ИЗ
		|	Документ.ЗаданиеНаОтгрузку КАК ЗаданиеНаОтгрузку
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЗаданиеНаОтгрузкуОбратки.Ссылка КАК Ссылка,
		|			МАКСИМУМ(ЗаданиеНаОтгрузкуОбратки.Пробег) КАК Пробег
		|		ИЗ
		|			Документ.ЗаданиеНаОтгрузку.Обратки КАК ЗаданиеНаОтгрузкуОбратки
		|		ГДЕ
		|			(ЗаданиеНаОтгрузкуОбратки.Ссылка.Перевозчик ПОДОБНО ""%Малышев%""
		|					ИЛИ ЗаданиеНаОтгрузкуОбратки.Ссылка.Перевозчик ПОДОБНО ""%Землянский%""
		|					ИЛИ ЗаданиеНаОтгрузкуОбратки.Ссылка.Перевозчик ПОДОБНО ""%Воробьев%"")
		|			И ЗаданиеНаОтгрузкуОбратки.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|			И ЗаданиеНаОтгрузкуОбратки.Ссылка.Перевозчик <> """"
		|			И НЕ ЗаданиеНаОтгрузкуОбратки.Ссылка.ПометкаУдаления
		|			И ЗаданиеНаОтгрузкуОбратки.Направление ПОДОБНО ""%Возвращение в гараж%""
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЗаданиеНаОтгрузкуОбратки.Ссылка) КАК ВложенныйЗапрос
		|		ПО ЗаданиеНаОтгрузку.Ссылка = ВложенныйЗапрос.Ссылка
		|ГДЕ
		|	ЗаданиеНаОтгрузку.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ЗаданиеНаОтгрузку.Перевозчик <> """"
		|	И НЕ ЗаданиеНаОтгрузку.ПометкаУдаления
		|	И (ЗаданиеНаОтгрузку.Перевозчик ПОДОБНО ""%Малышев%""
		|			ИЛИ ЗаданиеНаОтгрузку.Перевозчик ПОДОБНО ""%Землянский%""
		|			ИЛИ ЗаданиеНаОтгрузку.Перевозчик ПОДОБНО ""%Воробьев%"")
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(ИнформацияПоПроезду.Адрес КАК СТРОКА(250))) КАК Точки,
		|	МАКСИМУМ(ИнформацияПоПроезду.Расстояние) КАК Расстояние,
		|	Маршруты.Ссылка КАК Документ,
		|	Маршруты.Перевозчик КАК Перевозчик,
		|	Маршруты.Направление,
		|	Маршруты.МаркаАвтомобиля,
		|	Маршруты.МаркаПрицепа,
		|	СУММА(0) КАК Тариф,
		|	СУММА(ИнформацияПоПроезду.ДоставкаНал + ИнформацияПоПроезду.ДоставкаБНал + ИнформацияПоПроезду.ДоставкаВЦене) КАК Доставка,
		|	Маршруты.Тоннаж,
		|	Маршруты.СуммаОбраткиОбщая,
		|	Маршруты.ГосНомерАвтомобиля,
		|	Маршруты.Дата,
		|	Маршруты.Километров,
		|	Маршруты.РасстояниеВозвратВГараж,
		|	Маршруты.Представление
		|ПОМЕСТИТЬ ВТ_Третья
		|ИЗ
		|	Маршруты КАК Маршруты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнформацияПоПроезду КАК ИнформацияПоПроезду
		|		ПО Маршруты.Ссылка = ИнформацияПоПроезду.Задание
		|
		|СГРУППИРОВАТЬ ПО
		|	Маршруты.Ссылка,
		|	Маршруты.Перевозчик,
		|	Маршруты.МаркаАвтомобиля,
		|	Маршруты.МаркаПрицепа,
		|	Маршруты.Направление,
		|	Маршруты.Тоннаж,
		|	Маршруты.СуммаОбраткиОбщая,
		|	Маршруты.ГосНомерАвтомобиля,
		|	Маршруты.Дата,
		|	Маршруты.Километров,
		|	Маршруты.РасстояниеВозвратВГараж,
		|	Маршруты.Представление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ТарифыНаПеревозкиСрезПоследних.Тоннаж) КАК ТоннажТариф,
		|	ВТ_Третья.Точки,
		|	ВТ_Третья.Расстояние,
		|	ВТ_Третья.Документ,
		|	ВТ_Третья.Перевозчик,
		|	ВТ_Третья.Направление,
		|	ВТ_Третья.МаркаАвтомобиля,
		|	ВТ_Третья.МаркаПрицепа,
		|	ВТ_Третья.Тариф,
		|	ВТ_Третья.Доставка,
		|	ВТ_Третья.Тоннаж,
		|	ВТ_Третья.СуммаОбраткиОбщая,
		|	ВТ_Третья.ГосНомерАвтомобиля,
		|	ВТ_Третья.Дата,
		|	ВТ_Третья.Километров,
		|	ВТ_Третья.РасстояниеВозвратВГараж,
		|	ВТ_Третья.Представление
		|ПОМЕСТИТЬ ВТ_определение_тоннажа
		|ИЗ
		|	ВТ_Третья КАК ВТ_Третья
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаПеревозки.СрезПоследних(, НЕ НаемныйТранспорт) КАК ТарифыНаПеревозкиСрезПоследних
		|		ПО ВТ_Третья.Тоннаж <= ТарифыНаПеревозкиСрезПоследних.Тоннаж
		|			И ВТ_Третья.Дата >= ТарифыНаПеревозкиСрезПоследних.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Третья.Точки,
		|	ВТ_Третья.Расстояние,
		|	ВТ_Третья.Документ,
		|	ВТ_Третья.Перевозчик,
		|	ВТ_Третья.Направление,
		|	ВТ_Третья.МаркаАвтомобиля,
		|	ВТ_Третья.МаркаПрицепа,
		|	ВТ_Третья.Тариф,
		|	ВТ_Третья.Доставка,
		|	ВТ_Третья.Тоннаж,
		|	ВТ_Третья.СуммаОбраткиОбщая,
		|	ВТ_Третья.ГосНомерАвтомобиля,
		|	ВТ_Третья.Дата,
		|	ВТ_Третья.Километров,
		|	ВТ_Третья.РасстояниеВозвратВГараж,
		|	ВТ_Третья.Представление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_определение_тоннажа.Точки,
		|	ВТ_определение_тоннажа.Расстояние,
		|	ВТ_определение_тоннажа.Документ,
		|	ВТ_определение_тоннажа.Перевозчик,
		|	ВТ_определение_тоннажа.Направление,
		|	ВТ_определение_тоннажа.МаркаАвтомобиля,
		|	ВТ_определение_тоннажа.МаркаПрицепа,
		|	ВТ_определение_тоннажа.Тариф,
		|	ВТ_определение_тоннажа.Доставка,
		|	ВТ_определение_тоннажа.Тоннаж,
		|	ВТ_определение_тоннажа.СуммаОбраткиОбщая,
		|	ВТ_определение_тоннажа.ТоннажТариф,
		|	МИНИМУМ(ТарифыНаПеревозкиСрезПоследних.ЗонаКилометража) КАК ЗонаКилометража,
		|	ВТ_определение_тоннажа.ГосНомерАвтомобиля,
		|	ВТ_определение_тоннажа.Дата,
		|	ВТ_определение_тоннажа.Километров,
		|	ВТ_определение_тоннажа.РасстояниеВозвратВГараж,
		|	ВТ_определение_тоннажа.Представление
		|ПОМЕСТИТЬ Определениетарифа
		|ИЗ
		|	ВТ_определение_тоннажа КАК ВТ_определение_тоннажа
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаПеревозки.СрезПоследних(, НЕ НаемныйТранспорт) КАК ТарифыНаПеревозкиСрезПоследних
		|		ПО ВТ_определение_тоннажа.ТоннажТариф = ТарифыНаПеревозкиСрезПоследних.Тоннаж
		|			И ВТ_определение_тоннажа.Дата >= ТарифыНаПеревозкиСрезПоследних.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_определение_тоннажа.Точки,
		|	ВТ_определение_тоннажа.Расстояние,
		|	ВТ_определение_тоннажа.Документ,
		|	ВТ_определение_тоннажа.Перевозчик,
		|	ВТ_определение_тоннажа.Направление,
		|	ВТ_определение_тоннажа.МаркаАвтомобиля,
		|	ВТ_определение_тоннажа.МаркаПрицепа,
		|	ВТ_определение_тоннажа.Тариф,
		|	ВТ_определение_тоннажа.Доставка,
		|	ВТ_определение_тоннажа.Тоннаж,
		|	ВТ_определение_тоннажа.СуммаОбраткиОбщая,
		|	ВТ_определение_тоннажа.ТоннажТариф,
		|	ВТ_определение_тоннажа.ГосНомерАвтомобиля,
		|	ВТ_определение_тоннажа.Дата,
		|	ВТ_определение_тоннажа.Километров,
		|	ВТ_определение_тоннажа.РасстояниеВозвратВГараж,
		|	ВТ_определение_тоннажа.Представление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Определениетарифа.Точки,
		|	Определениетарифа.Расстояние,
		|	Определениетарифа.Документ,
		|	Определениетарифа.Перевозчик,
		|	Определениетарифа.Направление,
		|	Определениетарифа.МаркаАвтомобиля,
		|	Определениетарифа.МаркаПрицепа,
		|	Определениетарифа.Тариф,
		|	Определениетарифа.Доставка,
		|	Определениетарифа.Тоннаж,
		|	Определениетарифа.СуммаОбраткиОбщая,
		|	Определениетарифа.ТоннажТариф,
		|	Определениетарифа.ЗонаКилометража,
		|	Определениетарифа.ГосНомерАвтомобиля,
		|	Определениетарифа.Дата,
		|	Определениетарифа.Километров,
		|	Определениетарифа.РасстояниеВозвратВГараж,
		|	Определениетарифа.Представление
		|ПОМЕСТИТЬ ВТ_Четвертая
		|ИЗ
		|	Определениетарифа КАК Определениетарифа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Четвертая.Точки,
		|	ВТ_Четвертая.Расстояние,
		|	ВТ_Четвертая.Документ,
		|	ВТ_Четвертая.Перевозчик,
		|	ВТ_Четвертая.Направление,
		|	ВТ_Четвертая.МаркаАвтомобиля,
		|	ВТ_Четвертая.МаркаПрицепа,
		|	ВТ_Четвертая.Тариф,
		|	ВТ_Четвертая.Доставка,
		|	ВТ_Четвертая.Тоннаж,
		|	ВТ_Четвертая.СуммаОбраткиОбщая,
		|	ВТ_Четвертая.СуммаОбраткиОбщая + ВТ_Четвертая.Доставка КАК ИтогоСуммаДоставкиИОбратки,
		|	ТарифыНаПеревозкиСрезПоследних.ТарифЗаКм,
		|	ТарифыНаПеревозкиСрезПоследних.СебестоимостьЗаКм,
		|	ВТ_Четвертая.ГосНомерАвтомобиля,
		|	ВТ_Четвертая.Дата,
		|	ВТ_Четвертая.Километров,
		|	ВТ_Четвертая.РасстояниеВозвратВГараж,
		|	ВЫБОР
		|		КОГДА ВТ_Четвертая.РасстояниеВозвратВГараж = 0
		|			ТОГДА ВТ_Четвертая.Километров + ВТ_Четвертая.Километров
		|		ИНАЧЕ ВТ_Четвертая.РасстояниеВозвратВГараж + ВТ_Четвертая.Километров
		|	КОНЕЦ КАК ИтогоПробег,
		|	ВТ_Четвертая.Представление
		|ПОМЕСТИТЬ ВТ_Фин
		|ИЗ
		|	ВТ_Четвертая КАК ВТ_Четвертая
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаПеревозки.СрезПоследних(, НЕ НаемныйТранспорт) КАК ТарифыНаПеревозкиСрезПоследних
		|		ПО ВТ_Четвертая.ТоннажТариф = ТарифыНаПеревозкиСрезПоследних.Тоннаж
		|			И ВТ_Четвертая.ЗонаКилометража = ТарифыНаПеревозкиСрезПоследних.ЗонаКилометража
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Фин.Точки,
		|	ВТ_Фин.Расстояние,
		|	ВТ_Фин.Представление КАК Документ,
		|	ВТ_Фин.Перевозчик,
		|	ВТ_Фин.Направление,
		|	ВТ_Фин.МаркаАвтомобиля,
		|	ВТ_Фин.МаркаПрицепа,
		|	ВТ_Фин.Тариф,
		|	ВТ_Фин.Доставка,
		|	ВТ_Фин.Тоннаж,
		|	ВТ_Фин.СуммаОбраткиОбщая,
		|	ВТ_Фин.ИтогоСуммаДоставкиИОбратки,
		|	ВТ_Фин.ТарифЗаКм,
		|	ВТ_Фин.СебестоимостьЗаКм,
		|	ВТ_Фин.ГосНомерАвтомобиля,
		|	ВТ_Фин.Дата,
		|	IsNull(ВТ_Фин.Километров,0) Как Километров,
		|	IsNull(ВТ_Фин.РасстояниеВозвратВГараж, 0 ) Как РасстояниеВозвратВГараж,
		|	ВТ_Фин.ИтогоПробег * ВТ_Фин.СебестоимостьЗаКм КАК СебестоимостьДоставки,
		|	ВТ_Фин.ИтогоСуммаДоставкиИОбратки - (ВТ_Фин.ИтогоПробег * ВТ_Фин.СебестоимостьЗаКм) КАК Прибыль,
		|	ВЫБОР
		|		КОГДА ВТ_Фин.ИтогоПробег = 0
		|			ТОГДА 0
		|		ИНАЧЕ (ВТ_Фин.ИтогоСуммаДоставкиИОбратки - ВТ_Фин.ИтогоПробег * ВТ_Фин.СебестоимостьЗаКм) / ВТ_Фин.ИтогоПробег
		|	КОНЕЦ КАК ПрибыльНаКм,
		|	IsNull(ВТ_Фин.ИтогоПробег,0) как ИтогоПробег 
		|ИЗ
		|	ВТ_Фин КАК ВТ_Фин";

	Запрос.Параметры.Вставить("ДатаНач",ДатаНач);
	Запрос.Параметры.Вставить("ДатаКон",КонецДня(ДатаКон));
		
	ТаблицаБП_УТ = Запрос.Выполнить().Выгрузить();
	
	
//===========================================================    	
    //////////////запрос к бухгалтерии
Сервер = "server:3041";
БазаДанных   = "v83ib_zemvorob_bp";
Пользователь = "Робот";
Пароль = "09876";

V82 = Новый COMобъект("V83.ComConnector");

СтрокаПодключения =  "srvr='" + СокрЛП(Сервер)
+ "'; ref='" + СокрЛП(БазаДанных)
+ "'; usr='" + СокрЛП(Пользователь)
+ "'; pwd='" + СокрЛП(Пароль) + "';";

Попытка
БазаИсточник = V82.Connect(СтрокаПодключения);
Исключение
Сообщить("Не удалось подключиться к базе Бухгалтерия ИП");
КонецПопытки;
	

ЗапросБП = БазаИсточник.NewObject("Запрос");

	ЗапросБП.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаПеревозкуГрузовПрямой.Ссылка,
		|	СУММА(ЗаданиеНаПеревозкуГрузовПрямой.Тариф) КАК СуммаДоставкиПрямой,
		|	СУММА(ЗаданиеНаПеревозкуГрузовПрямой.Расстояние) КАК РасстояниеПрямой,
		|	СУММА(ЗаданиеНаПеревозкуГрузовПрямой.Вес) КАК ВесПрямой,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаданиеНаПеревозкуГрузовПрямой.НомерСтроки) КАК КоличествоТочекПрямой
		|ПОМЕСТИТЬ ВТ_Прямой
		|ИЗ
		|	Документ.ЗаданиеНаПеревозкуГрузов.Прямой КАК ЗаданиеНаПеревозкуГрузовПрямой
		|ГДЕ
		|	ЗаданиеНаПеревозкуГрузовПрямой.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ЗаданиеНаПеревозкуГрузовПрямой.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаданиеНаПеревозкуГрузовПрямой.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаПеревозкуГрузовОбратный.Ссылка,
		|	СУММА(ЗаданиеНаПеревозкуГрузовОбратный.Тариф) КАК СуммаДоставкиОбратный,
		|	СУММА(ЗаданиеНаПеревозкуГрузовОбратный.Расстояние) КАК РасстояниеОбратный,
		|	СУММА(ЗаданиеНаПеревозкуГрузовОбратный.Вес) КАК ВесОбратный,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаданиеНаПеревозкуГрузовОбратный.НомерСтроки) КАК КоличествоТочекОбратный
		|ПОМЕСТИТЬ ВТ_Обратный
		|ИЗ
		|	Документ.ЗаданиеНаПеревозкуГрузов.Обратный КАК ЗаданиеНаПеревозкуГрузовОбратный
		|ГДЕ
		|	ЗаданиеНаПеревозкуГрузовОбратный.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ЗаданиеНаПеревозкуГрузовОбратный.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаданиеНаПеревозкуГрузовОбратный.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Прямой.Ссылка,
		|	ВТ_Прямой.СуммаДоставкиПрямой,
		|	ВТ_Прямой.РасстояниеПрямой,
		|	ВТ_Прямой.ВесПрямой,
		|	ВТ_Прямой.КоличествоТочекПрямой,
		|	ЕСТЬNULL(ВТ_Обратный.СуммаДоставкиОбратный, 0) КАК СуммаДоставкиОбратный,
		|	ЕСТЬNULL(ВТ_Обратный.РасстояниеОбратный, 0) КАК РастояниеОбратный,
		|	ЕСТЬNULL(ВТ_Обратный.ВесОбратный, 0) КАК ВесОбратный,
		|	ЕСТЬNULL(ВТ_Обратный.КоличествоТочекОбратный, 0) КАК КоличествоТочекОбратный,
		|	ВТ_Прямой.Ссылка.Дата,
		|	ВТ_Прямой.Ссылка.МаршрутПеревозки,
		|	ВТ_Прямой.Ссылка.Автомобиль
		|ПОМЕСТИТЬ ВТ_3
		|ИЗ
		|	ВТ_Прямой КАК ВТ_Прямой
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обратный КАК ВТ_Обратный
		|		ПО ВТ_Прямой.Ссылка = ВТ_Обратный.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_3.СсылкаДата КАК Дата,
		|	ВТ_3.СсылкаАвтомобиль.Description как МаркаАвтомобиля,
		|	ВТ_3.СсылкаАвтомобиль.НаименованиеПолное как ГосНомерАвтомобиля,
		|	ВТ_3.Ссылка.Number как Документ,
		|	ВТ_3.СсылкаМаршрутПеревозки КАК Направление,
		|	ВТ_3.КоличествоТочекОбратный + ВТ_3.КоличествоТочекПрямой КАК Точки,
		|	ВТ_3.РасстояниеПрямой как Километров,
		|	ВТ_3.РастояниеОбратный КАК РасстояниеВозвратВГараж,
		|	ВТ_3.РастояниеОбратный + ВТ_3.РасстояниеПрямой КАК ИтогоПробег,
		|	ВТ_3.СуммаДоставкиОбратный как СуммаОбраткиОбщая,
		|	ВТ_3.СуммаДоставкиПрямой как Доставка,
        |	ВТ_3.СуммаДоставкиОбратный + ВТ_3.СуммаДоставкиПрямой КАК ИтогоСуммаДоставкиИОбратки,
		|	Выбор когда ВТ_3.ВесПрямой > ВТ_3.ВесОбратный 
		| Тогда 
		|ВТ_3.ВесПрямой
		|Иначе 
		|ВТ_3.ВесОбратный конец КАК Тоннаж
		|ИЗ
		|	ВТ_3 КАК ВТ_3";
		
		
		
		
	ЗапросБП.Параметры.Вставить("ДатаНач",ДатаНач);
	ЗапросБП.Параметры.Вставить("ДатаКон",КонецДня(ДатаКон));	
	РезультатЗапросаБП1 = ЗапросБП.Выполнить().Выбрать();
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Дата",Новый ОписаниеТипов("Дата"));
	ТЗ.Колонки.Добавить("МаркаАвтомобиля",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТЗ.Колонки.Добавить("ГосНомерАвтомобиля",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТЗ.Колонки.Добавить("Документ",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТЗ.Колонки.Добавить("Направление",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));				  
	ТЗ.Колонки.Добавить("Точки",Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("Километров",Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("РасстояниеВозвратВГараж",Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("ИтогоПробег",Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("СуммаОбраткиОбщая",Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("Доставка",Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("ИтогоСуммаДоставкиИОбратки",Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("Тоннаж",Новый ОписаниеТипов("Число"));
	
	
	
	Пока РезультатЗапросаБП1.Следующий() Цикл		
	Строка = ТЗ.Добавить();	
	Строка.Дата = РезультатЗапросаБП1.Дата;
	Строка.МаркаАвтомобиля = РезультатЗапросаБП1.МаркаАвтомобиля;
	Строка.ГосНомерАвтомобиля = РезультатЗапросаБП1.ГосНомерАвтомобиля;
	Строка.Документ = РезультатЗапросаБП1.Документ;
	Строка.Направление = РезультатЗапросаБП1.Направление;
	Строка.Точки = РезультатЗапросаБП1.Точки;
	Строка.Километров = РезультатЗапросаБП1.Километров;
	Строка.РасстояниеВозвратВГараж = РезультатЗапросаБП1.РасстояниеВозвратВГараж;
	Строка.ИтогоПробег = РезультатЗапросаБП1.ИтогоПробег;
	Строка.СуммаОбраткиОбщая = РезультатЗапросаБП1.СуммаОбраткиОбщая;
	Строка.Доставка = РезультатЗапросаБП1.Доставка;
	Строка.ИтогоСуммаДоставкиИОбратки = РезультатЗапросаБП1.ИтогоСуммаДоставкиИОбратки;
	Строка.Тоннаж = РезультатЗапросаБП1.Тоннаж;	
	КонецЦикла;	
	
	
	
	// из БП выгрузим в таблицу и сделаем запрос к УТ, чтобы определить тарифы
	МенеджерТаблиц = Новый МенеджерВременныхТаблиц;
	ЗапросБП_УТ = Новый Запрос;
	ЗапросБП_УТ.МенеджерВременныхТаблиц = МенеджерТаблиц;
	ЗапросБП_УТ.Параметры.Вставить("ТаблицаБП",ТЗ);
	ЗапросБП_УТ.Текст ="ВЫБРАТЬ
	                   |	ТаблицаБП.Дата,
	                   |	ТаблицаБП.МаркаАвтомобиля КАК МаркаАвтомобиля,
	                   |	ТаблицаБП.госНомерАвтомобиля КАК ГосНомерАвтомобиля,
	                   |	ТаблицаБП.документ КАК Документ,
	                   |	ТаблицаБП.Направление,
	                   |	ЕСТЬNULL(ТаблицаБП.Точки, 0) КАК Точки,
	                   |	ЕСТЬNULL(ТаблицаБП.Километров, 0) КАК Километров,
	                   |	ЕСТЬNULL(ТаблицаБП.РасстояниеВозвратВГараж, 0) КАК РасстояниеВозвратВГараж,
	                   |	ЕСТЬNULL(ТаблицаБП.ИтогоПробег, 0) КАК ИтогоПробег,
	                   |	ЕСТЬNULL(ТаблицаБП.СуммаОбраткиОбщая, 0) КАК СуммаОбраткиОбщая,
	                   |	ЕСТЬNULL(ТаблицаБП.Доставка, 0) КАК Доставка,
	                   |	ЕСТЬNULL(ТаблицаБП.ИтогоСуммаДоставкиИОбратки, 0) КАК ИтогоСуммаДоставкиИОбратки,
	                   |	ЕСТЬNULL(ТаблицаБП.Тоннаж, 0) КАК Тоннаж
	                   |ПОМЕСТИТЬ ТаблицаБП
	                   |ИЗ
	                   |	&ТаблицаБП КАК ТаблицаБП
	                   |;
	                   |
	                   |////////////////////////////////////////////////////////////////////////////////
	                   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                   |	ТаблицаБП.Дата,
	                   |	ТаблицаБП.ИтогоПробег,
	                   |	ТаблицаБП.Тоннаж,
	                   |	МИНИМУМ(ТарифыНаПеревозкиСрезПоследних.Тоннаж) КАК ТоннажТариф
	                   |ПОМЕСТИТЬ ВТ_Определение_Тоннажа
	                   |ИЗ
	                   |	ТаблицаБП КАК ТаблицаБП
	                   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаПеревозки.СрезПоследних КАК ТарифыНаПеревозкиСрезПоследних
	                   |		ПО ТаблицаБП.Дата >= ТарифыНаПеревозкиСрезПоследних.Период
	                   |			И ТаблицаБП.Тоннаж <= ТарифыНаПеревозкиСрезПоследних.Тоннаж
	                   |
	                   |СГРУППИРОВАТЬ ПО
	                   |	ТаблицаБП.Дата,
	                   |	ТаблицаБП.ИтогоПробег,
	                   |	ТаблицаБП.Тоннаж
	                   |;
	                   |
	                   |////////////////////////////////////////////////////////////////////////////////
	                   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                   |	ВТ_Определение_Тоннажа.Дата,
	                   |	ВТ_Определение_Тоннажа.ИтогоПробег,
	                   |	ВТ_Определение_Тоннажа.Тоннаж,
	                   |	ВТ_Определение_Тоннажа.ТоннажТариф,
	                   |	МИНИМУМ(ТарифыНаПеревозкиСрезПоследних.ЗонаКилометража) КАК ЗонаКилометража
	                   |ПОМЕСТИТЬ ВТ_2
	                   |ИЗ
	                   |	ВТ_Определение_Тоннажа КАК ВТ_Определение_Тоннажа
	                   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаПеревозки.СрезПоследних КАК ТарифыНаПеревозкиСрезПоследних
	                   |		ПО ВТ_Определение_Тоннажа.ТоннажТариф = ТарифыНаПеревозкиСрезПоследних.Тоннаж
	                   |			И ВТ_Определение_Тоннажа.ИтогоПробег <= ТарифыНаПеревозкиСрезПоследних.ЗонаКилометража
	                   |
	                   |СГРУППИРОВАТЬ ПО
	                   |	ВТ_Определение_Тоннажа.Дата,
	                   |	ВТ_Определение_Тоннажа.ИтогоПробег,
	                   |	ВТ_Определение_Тоннажа.Тоннаж,
	                   |	ВТ_Определение_Тоннажа.ТоннажТариф
	                   |;
	                   |
	                   |////////////////////////////////////////////////////////////////////////////////
	                   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                   |	ВТ_2.Дата,
	                   |	ВТ_2.ИтогоПробег,
	                   |	ВТ_2.Тоннаж,
	                   |	ТарифыНаПеревозкиСрезПоследних.СебестоимостьЗаКм,
	                   |	ТарифыНаПеревозкиСрезПоследних.ТарифЗаКм,
	                   |	ВТ_2.ТоннажТариф,
	                   |	ВТ_2.ЗонаКилометража
	                   |ПОМЕСТИТЬ ВТ_Тариф
	                   |ИЗ
	                   |	ВТ_2 КАК ВТ_2
	                   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаПеревозки.СрезПоследних КАК ТарифыНаПеревозкиСрезПоследних
	                   |		ПО ВТ_2.ТоннажТариф = ТарифыНаПеревозкиСрезПоследних.Тоннаж
	                   |			И ВТ_2.ЗонаКилометража = ТарифыНаПеревозкиСрезПоследних.ЗонаКилометража
	                   |;
	                   |
	                   |////////////////////////////////////////////////////////////////////////////////
	                   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                   |	ТаблицаБП.Дата,
	                   |	ТаблицаБП.МаркаАвтомобиля,
	                   |	ТаблицаБП.ГосНомерАвтомобиля,
	                   |	ТаблицаБП.Документ,
	                   |	ТаблицаБП.Направление,
	                   |	ТаблицаБП.Точки,
	                   |	ТаблицаБП.Километров,
	                   |	IsNull(ТаблицаБП.РасстояниеВозвратВГараж,0) как РасстояниеВозвратВГараж,
	                   |	ТаблицаБП.ИтогоПробег,
	                   |	ТаблицаБП.СуммаОбраткиОбщая,
	                   |	ТаблицаБП.Доставка,
	                   |	ТаблицаБП.ИтогоСуммаДоставкиИОбратки,
	                   |	ТаблицаБП.Тоннаж,
	                   |	ВТ_Тариф.СебестоимостьЗаКм,
	                   |	ВТ_Тариф.ТарифЗаКм,
	                   |	ТаблицаБП.ИтогоПробег * ВТ_Тариф.СебестоимостьЗаКм КАК СебестоимостьДоставки,
	                   |	ТаблицаБП.ИтогоСуммаДоставкиИОбратки - ТаблицаБП.ИтогоПробег * ВТ_Тариф.СебестоимостьЗаКм КАК Прибыль,
	                   |	ВЫБОР
	                   |		КОГДА ТаблицаБП.ИтогоПробег = 0
	                   |			ТОГДА 0
	                   |		ИНАЧЕ (ТаблицаБП.ИтогоСуммаДоставкиИОбратки - ТаблицаБП.ИтогоПробег * ВТ_Тариф.СебестоимостьЗаКм) / ТаблицаБП.ИтогоПробег
	                   |	КОНЕЦ КАК ПрибыльНаКм,
	                   |	ВТ_Тариф.ТоннажТариф,
	                   |	ВТ_Тариф.ЗонаКилометража
	                   |ИЗ
	                   |	ВТ_Тариф КАК ВТ_Тариф
	                   |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаБП КАК ТаблицаБП
	                   |		ПО ТаблицаБП.ИтогоПробег = ВТ_Тариф.ИтогоПробег
	                   |			И ТаблицаБП.Тоннаж = ВТ_Тариф.Тоннаж";

	РезультатЗапросаБП = ЗапросБП_УТ.Выполнить().Выбрать(); 	
	
	
	
	Пока РезультатЗапросаБП.Следующий() Цикл
	Строка = ТаблицаБП_УТ.Добавить();
	Строка.Дата = РезультатЗапросаБП.Дата;
	Строка.МаркаАвтомобиля = РезультатЗапросаБП.МаркаАвтомобиля;
	Строка.ГосНомерАвтомобиля = РезультатЗапросаБП.ГосНомерАвтомобиля;
	Строка.Документ = "Задание на перевозку из Бухгалтерии № " + РезультатЗапросаБП.Документ;
	Строка.Направление = РезультатЗапросаБП.Направление;
	Строка.Точки = РезультатЗапросаБП.Точки;
	Строка.Километров = РезультатЗапросаБП.Километров;
	Строка.РасстояниеВозвратВГараж = РезультатЗапросаБП.РасстояниеВозвратВГараж;
	Строка.ИтогоПробег = РезультатЗапросаБП.ИтогоПробег;
	Строка.СуммаОбраткиОбщая = РезультатЗапросаБП.СуммаОбраткиОбщая;	
	Строка.Доставка = РезультатЗапросаБП.Доставка;	
	Строка.ИтогоСуммаДоставкиИОбратки = РезультатЗапросаБП.ИтогоСуммаДоставкиИОбратки;	
	Строка.Тоннаж = РезультатЗапросаБП.Тоннаж;
	Строка.СебестоимостьЗаКм = РезультатЗапросаБП.СебестоимостьЗаКм;
	Строка.ТарифЗаКм = РезультатЗапросаБП.ТарифЗаКм;
	Строка.Прибыль = РезультатЗапросаБП.Прибыль;	
	Строка.СебестоимостьДоставки = РезультатЗапросаБП.СебестоимостьДоставки;	
	КонецЦикла;		
	//////////////запрос к бухгалтерии, конец
 	МассивНаименованийМарокАвто = МассивНаименованийМарокАвто();  
Для каждого Строка из ТаблицаБП_УТ Цикл
    ПереименоватьМаркуАвтомобиля(Строка);	
КонецЦикла;
 	
	СтандартнаяОбработка = Ложь;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаБП_УТ",ТаблицаБП_УТ);
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
    Настройки = КомпоновщикНастроек.Настройки;  
    
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных);

	Результат = ЭлементыФормы.Результат;
	
	Результат.Очистить();
	
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(Результат);

    ПроцессорВывода.Вывести(ПроцессорКомпоновки);   
	
	Результат.Показать();	
	
КонецПроцедуры


//процедура ПереименоватьМаркуАвтомобиля(Строка)	
//	Для каждого СтрокаМ из МассивНаименованийМарокАвто Цикл 
//		ПолиСтр = СтрЗаменить(СокрЛП(Строка.МаркаАвтомобиля)," ",Символы.ПС);
//		Замена = Истина;
//		
//		Для Счетчик = 1 По СтрЧислоСтрок(ПолиСтр) Цикл
//			Если замена Тогда 
//				ТекСтрока = СтрПолучитьСтроку(ПолиСтр, Счетчик);    
//				Если не СтрЧислоВхождений(СтрокаМ.ПолноеНаименование,ТекСтрока) > 0 Тогда 
//					Замена = Ложь; 
//				КонецЕсли;
//			Иначе
//				Счетчик = СтрЧислоСтрок(Полистр);
//			КонецЕсли;
//		КонецЦикла;    		
//		
//		Если замена Тогда 
//			Строка.МаркаАвтомобиля = Строкам.Наименование;
//			Прервать;
//		КонецЕсли;
//	КонецЦикла;			
//КонецПроцедуры

// собираем справочник Типы Автомобилей - для парсера наименований
//Функция  МассивНаименованийМарокАвто()
//	Рез = "";
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ РАЗЛИЧНЫЕ
//		|	ТипАвтомобиля.Наименование,
//		|	ТипАвтомобиля.ПолноеНаименование
//		|ИЗ
//		|	Справочник.ТипАвтомобиля КАК ТипАвтомобиля
//		|ГДЕ
//		|	НЕ ТипАвтомобиля.ПометкаУдаления";

//	Рез = Запрос.Выполнить().Выгрузить();

//	Возврат Рез;	
//КонецФункции	


// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, СтандартнаяОбработка) Экспорт
	
	Если СтрЧислоВхождений(ПолеТД.Текст,"Задание на отгрузку") > 0 Тогда 		
		НомерДокумента = СтрЗаменить(ПолеТД.Текст,"Задание на отгрузку", "");
		Индекс = Найти(Номердокумента,"от");
		НомерДокумента = СокрЛП(Лев(НомерДокумента,Индекс-2));
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаданиеНаОтгрузку.Ссылка
		|ИЗ
		|	Документ.ЗаданиеНаОтгрузку КАК ЗаданиеНаОтгрузку
		|ГДЕ
		|	ЗаданиеНаОтгрузку.Номер ПОДОБНО &Номер
		|	И ЗаданиеНаОтгрузку.Дата МЕЖДУ &ДатаНач И &ДатаКон";
		
		Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
		Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
		Запрос.УстановитьПараметр("Номер", НомерДокумента);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ВыборкаДетальныеЗаписи.Ссылка.ПолучитьФорму().Открыть();		
		КонецЦикла; 
	ИначеЕсли  СтрЧислоВхождений(ПолеТД.Текст,"Задание на перевозку из Бухгалтерии") = 0 Тогда
		Сообщить("Документ находится в базе Бухгалтерии, открытие не предусмотрено");
	КонецЕсли;	  		
КонецПроцедуры // ОбработкаРасшифровки()
