
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
		
		НачПериодаПриИзменении(неопределено);
		КонПериодаПриИзменении(неопределено);

	КонецЕсли;
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	НачПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0].Значение.Дата;
	КонПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1].Значение.Дата;

КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0].Значение.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0].Значение.Дата = НачПериода;
КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1].Значение.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1].Значение.Дата = КонПериода;
КонецПроцедуры

Процедура ВидТовараПриИзменении(Элемент)
	
	НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы[0];
	НовыйЭлементОтбора.ПравоеЗначение = ВидТовара;
	Если ВидТовара.пустая() тогда
		НовыйЭлементОтбора.Использование = ЛОЖЬ;
	иначе
		НовыйЭлементОтбора.Использование = истина;
	КонецЕсли;
	
КонецПроцедуры
