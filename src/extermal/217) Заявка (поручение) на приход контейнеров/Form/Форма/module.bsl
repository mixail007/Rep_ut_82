
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач  = НастройкаПериода.ПолучитьДатуНачала();
		ДатаНач1 = ДобавитьМесяц(ДатаНач,-3);
		ДатаКон  = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ДатаНачПриИзменении(Элемент)
	ДатаНач1 = ДобавитьМесяц(ДатаНач,-3);
КонецПроцедуры

//++++++++++++++++++++++++ПЕЧАТЬ+++++++++++++++++++++++++++++
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
ТабДокумент = Новый ТабличныйДокумент;
ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявкаНаПриходКонтейнеров_Заявка";

	Макет = ПолучитьМакет("Макет");

	ОбластьМакета = Макет.ПолучитьОбласть("Страница1");
	
	Если ЗначениеЗаполнено(Договор) тогда
	ОбластьМакета.Параметры.НомДог  = Договор.Номер;
	ОбластьМакета.Параметры.ДатаДог = Формат(Договор.Дата,"ДЛФ=D");
	иначе
		ОбластьМакета.Параметры.НомДог  = "______";
		ОбластьМакета.Параметры.ДатаДог = " ""____""_________ 20___ года";
	КонецЕсли;
	
	ОбластьМакета.Параметры.ДатаЗаявки = Формат(ДатаНач1, "ДФ='dd MMMM yyyy'")+" года";
	
	Если ЗначениеЗаполнено(Исполнитель) тогда
		СведенияОИсполнителе       = СведенияОЮрФизЛице(Исполнитель, ДатаНач1);	
		ОбластьМакета.Параметры.Исполнитель = ОписаниеОрганизации(СведенияОИсполнителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	иначе	
		ОбластьМакета.Параметры.Исполнитель = "";
	КонецЕсли;	
	
	ОбластьМакета.Параметры.Контейнера = Контейнера;
	ОбластьМакета.Параметры.КолКонтрейнеров = КолКонтрейнеров;
	
	ОбластьМакета.Параметры.видПеревозкиТекст = "Вид перевозки:";
	Если ЗначениеЗаполнено(Услуга) тогда
		Если НАйти(Услуга.Наименование, "Фрахт")>0 тогда // = справочники.Номенклатура.НайтиПоКоду("ЛН00379") тогда // Фрахт 02
			ОбластьМакета.Параметры.видПеревозки = "морской";
		иначеЕсли Найти(Услуга.Наименование,"Брокерские услуги")>0 тогда // = справочники.Номенклатура.НайтиПоКоду("ЛН00382") тогда // Брокерские услуги 06
			ОбластьМакета.Параметры.видПеревозки = "автодоставка";
		иначе //Если Найти(Услуга,"Таможенное оформление")>0 тогда //= справочники.Номенклатура.НайтиПоКоду("ЛН00223") тогда // Таможенное оформление
			ОбластьМакета.Параметры.видПеревозкиТекст = "Вид услуг:";
			ОбластьМакета.Параметры.видПеревозки = Услуга.Наименование;
		КонецЕсли;
	иначе
		ОбластьМакета.Параметры.видПеревозки ="";
	КонецЕсли;

	ОбластьМакета.Параметры.ГородПорт = ГородПорт;
	ОбластьМакета.Параметры.ДатаНач = Формат(ДатаНач,"ДЛФ=D");
	ОбластьМакета.Параметры.ДатаКон = Формат(ДатаКон,"ДЛФ=D");
	
	ОбластьМакета.Параметры.Страхование = Формат(Страхование,"БЛ=Нет; БИ=Да");
	ОбластьМакета.Параметры.Автоперевозка = Формат(Автоперевозка,"БЛ=Нет; БИ=Да");
	ОбластьМакета.Параметры.ТаможенноеОформление = Формат(ТаможенноеОформление,"БЛ=Нет; БИ=Да");
	
	ОбластьМакета.Параметры.Примечание = Примечание;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ТолькоПросмотр = истина;
	ТабДокумент.Показать();
	
КонецПроцедуры


//получаем все данные по Поставщику и Услуге за период
// в список Исполнителей - записываем всех
// в договора - список всех договоров
Процедура ПолучитьНажатие(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Грузоотправитель) тогда
		Предупреждение("Выберите Грузоотправителя!");
		возврат;
	КонецЕсли;	
	
	Если ДатаНач = '00010101' или ДатаКон= '00010101' или  ДатаКон<ДатаНач тогда
		Предупреждение("Неверно выбран период Прибытия на территорию РФ");
		возврат;
	КонецЕсли;	
		
	
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
               |	ВЫРАЗИТЬ(ДокПоступления.Комментарий КАК СТРОКА(500)) КАК Контейнер,
               |	ДокПоступления.Ссылка КАК ДокПостуления,
			   |	ДокПоступления.ДатаПрибытияВПорт как ДатаВПорт,
               |	ИСТИНА КАК Выбран
               |ИЗ
               |	Документ.ПоступлениеТоваровУслуг КАК ДокПоступления
               |ГДЕ
               |	( (ДокПоступления.Дата >= &ДатаНач И ДокПоступления.Дата <= &ДатаКон)
               |	или (ДокПоступления.ДатаПрибытияВПорт >= &ДатаНач И ДокПоступления.ДатаПрибытияВПорт <= &ДатаКон) )
               |	И ДокПоступления.Контрагент = &Контрагент
               |	И ДокПоступления.Проведен
               |	И (ВЫРАЗИТЬ(ДокПоступления.Комментарий КАК СТРОКА(100))) <> """"";

Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
Запрос.УстановитьПараметр("Контрагент", Грузоотправитель);

Результат = Запрос.Выполнить();
ТабЗнач = Результат.Выгрузить();
Поступления.Загрузить(ТабЗнач);

//ОбновитьСписокКонтейнеров();

//----------------------------------------Второй запрос---------------------------------
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
               |	ЗакупкиОбороты.Регистратор.Контрагент КАК Контрагент,
               |	ЗакупкиОбороты.Регистратор.ДоговорКонтрагента КАК ДоговорКонтрагента,
               |	ЗакупкиОбороты.Регистратор.Услуга КАК Услуга
               |ИЗ
               |	РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, Регистратор, ДокументЗакупки В (&СписокДокПоступления)) КАК ЗакупкиОбороты";
Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
Запрос.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
СписокДокПоступления = Поступления.ВыгрузитьКолонку("ДокПостуления");
Запрос.УстановитьПараметр("СписокДокПоступления", СписокДокПоступления);
//проверка
Если ЗначениеЗаполнено(Услуга) тогда
	Запрос.Текст =Запрос.Текст + "
			   |ГДЕ
               |	ЗакупкиОбороты.Регистратор.Услуга = &Услуга";
	Запрос.УстановитьПараметр("Услуга", Услуга);
КонецЕсли;

Результат = Запрос.Выполнить();
ТабЗнач0 = Результат.Выгрузить();

Если НЕ ЗначениеЗаполнено(Услуга) тогда
   ТабЗнач1 = ТабЗнач0.Скопировать();
   ТабЗнач1.Свернуть("Услуга");
   спис1 = ТабЗнач1.ВыгрузитьКолонку("Услуга");
   
   ЭлементыФормы.Услуга.СписокВыбора.Очистить();
   Услуга  = Справочники.Номенклатура.ПустаяСсылка();
	Если спис1.Количество()>0 тогда
 	Услуга  =  спис1[0];
	Если спис1.Количество()=1 тогда
		ЭлементыФормы.Услуга.КнопкаВыбора = ложь;
		ЭлементыФормы.Услуга.КнопкаСпискаВыбора = ложь;
	иначе
		ЭлементыФормы.Услуга.КнопкаВыбора = Истина;
		ЭлементыФормы.Услуга.КнопкаСпискаВыбора = Истина;
	КонецЕсли;
		для i=0 по спис1.Количество()-1 цикл
    		ЭлементыФормы.Услуга.СписокВыбора.Добавить(спис1[i]);
    	КонецЦикла;	 
	КонецЕсли;
КонецЕсли;


  ТабЗнач1 = ТабЗнач0.Скопировать();
  ТабЗнач1.Свернуть("Контрагент");
спис1 = ТабЗнач1.ВыгрузитьКолонку("Контрагент");
ЭлементыФормы.Исполнитель.СписокВыбора.Очистить();
 Исполнитель  = Справочники.Контрагенты.ПустаяСсылка();
Если спис1.Количество()>0 тогда
	Исполнитель = спис1[0];
	Если спис1.Количество()=1 тогда
		ЭлементыФормы.Исполнитель.КнопкаВыбора = ложь;
		ЭлементыФормы.Исполнитель.КнопкаСпискаВыбора = ложь;
	иначе
		ЭлементыФормы.Исполнитель.КнопкаВыбора = Истина;
		ЭлементыФормы.Исполнитель.КнопкаСпискаВыбора = Истина;
	КонецЕсли;
	для i=0 по спис1.Количество()-1 цикл
    	ЭлементыФормы.Исполнитель.СписокВыбора.Добавить(спис1[i]);
	КонецЦикла;	
КонецЕсли;


  ТабЗнач1 = ТабЗнач0.Скопировать();
  ТабЗнач1.Свернуть("ДоговорКонтрагента");
спис1 = ТабЗнач1.ВыгрузитьКолонку("ДоговорКонтрагента");
ЭлементыФормы.Договор.СписокВыбора.Очистить();
Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
Если спис1.Количество()>0 тогда
	Договор = спис1[0];
	Если спис1.Количество()=1 тогда
		ЭлементыФормы.Договор.КнопкаВыбора = ложь;
		ЭлементыФормы.Договор.КнопкаСпискаВыбора = ложь;
	иначе
		ЭлементыФормы.Договор.КнопкаВыбора = Истина;
		ЭлементыФормы.Договор.КнопкаСпискаВыбора = Истина;
	КонецЕсли;	
	для i=0 по спис1.Количество()-1 цикл
    	ЭлементыФормы.Договор.СписокВыбора.Добавить(спис1[i]);
	КонецЦикла;	
КонецЕсли;

Если Поступления.Количество()=0 тогда
	Предупреждение("Не найдено ни одного документа Поступления!", 30 );
КонецЕсли;

КонецПроцедуры



//===================ФОРМА===================================

Процедура ПоступленияВыбранПриИзменении(Элемент)
	ОбновитьСписокКонтейнеров();
КонецПроцедуры

Процедура ОбновитьСписокКонтейнеров()
	
	Контейнера = "";
	
	для i=0 по Поступления.Количество()-1 цикл
		Если Поступления[i].Выбран тогда 
			Контейнера = Контейнера + СокрЛП(Поступления[i].Контейнер)+"; ";
		КонецЕсли;
	КонецЦикла;	

	Контейнера = стрЗаменить(Контейнера, ",", ";");	
	Контейнера = стрЗаменить(Контейнера, ";;", ";");	
	Контейнера = стрЗаменить(Контейнера, "; ;", ";");	
	КолКонтрейнеров = СтрЧислоВхождений(Контейнера, ";");
    
КонецПроцедуры

Процедура ПоступленияПослеУдаления(Элемент)
	ОбновитьСписокКонтейнеров();
КонецПроцедуры

Процедура ПоступленияПередНачаломДобавления(Элемент, Отказ, Копирование)
	Предупреждение("Данные строки автоматически заполняются 
				   |при нажатии на кнопку <<Получить данные>>");
	Отказ = истина;				   
КонецПроцедуры

Процедура КоманднаяПанель1Пересчитать(Кнопка)
		ОбновитьСписокКонтейнеров();
КонецПроцедуры

	
Процедура ПриОткрытии()
		
	Если ДатаНач='00010101' тогда
		ДатаНач = НачалоМесяца(ТекущаяДата());
		ДатаНач1 = ДобавитьМесяц(ДатаНач, -3);
	КонецЕсли;
	Если ДатаКон='00010101' тогда
		ДатаКон = КонецМесяца(ТекущаяДата());
	КонецЕсли;
	
	ЭлементыФормы.ГородПорт.Значение = "Санкт-Петербург";
	ЭлементыФормы.ГородПорт.СписокВыбора.Очистить();
	ЭлементыФормы.ГородПорт.СписокВыбора.Добавить("Санкт-Петербург");
	ЭлементыФормы.ГородПорт.СписокВыбора.Добавить("Новороссийск");
	ЭлементыФормы.ГородПорт.СписокВыбора.Добавить("Владивосток");

	ЭлементыФормы.Услуга.СписокВыбора.Очистить();
	//Услуга = справочники.Номенклатура.НайтиПоКоду("ЛН00379"); // Фрахт
	ЭлементыФормы.Услуга.СписокВыбора.Добавить(справочники.Номенклатура.НайтиПоКоду("ЛН00379"));
	ЭлементыФормы.Услуга.СписокВыбора.Добавить(справочники.Номенклатура.НайтиПоКоду("ЛН00382"));
	ЭлементыФормы.Услуга.СписокВыбора.Добавить(справочники.Номенклатура.НайтиПоКоду("ЛН00223"));
	
	ЭлементыФормы.Грузоотправитель.СписокВыбора.Очистить();
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	Контрагенты.Ссылка КАК Ссылка
	                |ИЗ
	                |	Справочник.Контрагенты КАК Контрагенты
	                |ГДЕ
	                |	Контрагенты.ОсновнойМенеджерКонтрагента = &ОсновнойМенеджерКонтрагента
	                |	И (НЕ Контрагенты.ПометкаУдаления)
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Контрагенты.Наименование
	                |АВТОУПОРЯДОЧИВАНИЕ";
	 
	 Запрос.УстановитьПараметр("ОсновнойМенеджерКонтрагента", Справочники.Пользователи.НайтиПоКоду("Серебренникова А.А.") );
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
	 	ЭлементыФормы.Грузоотправитель.СписокВыбора.Добавить(Выборка.Ссылка);
	 КонецЦикла;
	 
	 
КонецПроцедуры


Процедура ИсполнительПриИзменении(Элемент)
	     этоПервый = истина;
	для i=0 по ЭлементыФормы.Договор.СписокВыбора.Количество()-1 цикл
		Если ЭлементыФормы.Договор.СписокВыбора[i].Значение.Владелец = Исполнитель тогда
			ЭлементыФормы.Договор.СписокВыбора[i].Пометка = истина;
			если этоПервый тогда
				Договор = ЭлементыФормы.Договор.СписокВыбора[i].Значение;
				этоПервый = ложь;
			КонецЕсли;	
		иначе
			ЭлементыФормы.Договор.СписокВыбора[i].Пометка = ложь;
		КонецЕсли;	
	КонецЦикла;
	
	Если этоПервый тогда // не нашли такого
		Договор = Исполнитель.ОсновнойДоговорПоставки;
	КонецЕсли;	
	
КонецПроцедуры


Процедура УслугаПриИзменении(Элемент)
	ПолучитьНажатие(Неопределено);
КонецПроцедуры


Процедура ПоступленияПриПолученииДанных(Элемент, ОформленияСтрок)
	ОбновитьСписокКонтейнеров();
КонецПроцедуры


Процедура КоманднаяПанель1Действие9(Кнопка)
	для i=0 по Поступления.Количество()-1 цикл
		Поступления[i].Выбран = ложь;
	КонецЦикла;	
КонецПроцедуры


Процедура КоманднаяПанель1Действие10(Кнопка)
		для i=0 по Поступления.Количество()-1 цикл
		Поступления[i].Выбран = истина;
	КонецЦикла;	
КонецПроцедуры


Процедура ДоговорПриИзменении(Элемент)
	Если Договор.Владелец<>Исполнитель тогда
		Предупреждение("Выбранный вами договор подчинен 
		|Контрагенту: "+строка(Договор.Владелец)+",
		|а Исполнитель выбран:"+строка(Исполнитель), 60);
		
	 этоПервый = истина;
	для i=0 по ЭлементыФормы.Договор.СписокВыбора.Количество()-1 цикл
		Если ЭлементыФормы.Договор.СписокВыбора[i].Значение.Владелец = Исполнитель тогда
			ЭлементыФормы.Договор.СписокВыбора[i].Пометка = истина;
			если этоПервый тогда
				Договор = ЭлементыФормы.Договор.СписокВыбора[i].Значение;
				сообщить("Автоматически выбран договор контрагента: "+строка(Исполнитель)+" - "
				+строка(Договор)+" №"+строка(Договор.Номер)+" от "+формат(договор.Дата,"ДЛФ=D") ) ;
				этоПервый = ложь;
			КонецЕсли;	
		иначе
			ЭлементыФормы.Договор.СписокВыбора[i].Пометка = ложь;
		КонецЕсли;	
	КонецЦикла;
	
	Если этоПервый тогда // не нашли такого
		Договор = Исполнитель.ОсновнойДоговорПоставки;
	КонецЕсли;	
	
	КонецЕсли;
КонецПроцедуры

