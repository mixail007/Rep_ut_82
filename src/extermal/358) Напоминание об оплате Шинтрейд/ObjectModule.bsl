
Процедура НапомнитьОЗадолженности(дДат) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
	               |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	               |	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	               |	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток) КАК СуммаУпрОстаток,
	               |	ВЫБОР
	               |		КОГДА ДОБАВИТЬКДАТЕ(ВЫБОР
	               |					КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)
	               |						ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата
	               |					ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
	               |				КОНЕЦ, ДЕНЬ, -7) = &дДата
	               |			ТОГДА 7
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ДОБАВИТЬКДАТЕ(ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)
	               |								ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата
	               |							ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
	               |						КОНЕЦ, ДЕНЬ, -3) = &дДата
	               |					ТОГДА 3
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ЧислоДнейДоОплаты
	               |ПОМЕСТИТЬ втЗаказы
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	               |			&дДата,
	               |			ДоговорКонтрагента.ТипДоговора = ЗНАЧЕНИЕ(Справочник.ТипыДоговоров.ШинтрейдЯрославль)
	               |				И (ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	               |					ИЛИ ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером))
	               |				И (ДОБАВИТЬКДАТЕ(ВЫБОР
	               |							КОГДА Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)
	               |								ТОГДА Сделка.Дата
	               |							ИНАЧЕ Сделка.ДатаОплаты
	               |						КОНЕЦ, ДЕНЬ, -7) = &дДата
	               |					ИЛИ ДОБАВИТЬКДАТЕ(ВЫБОР
	               |							КОГДА Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)
	               |								ТОГДА Сделка.Дата
	               |							ИНАЧЕ Сделка.ДатаОплаты
	               |						КОНЕЦ, ДЕНЬ, -3) = &дДата
	               |					ИЛИ ВЫБОР
	               |						КОГДА Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)
	               |							ТОГДА Сделка.Дата
	               |						ИНАЧЕ Сделка.ДатаОплаты
	               |					КОНЕЦ = &дДата)) КАК ВзаиморасчетыСКонтрагентамиОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
	               |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	               |	ВЫБОР
	               |		КОГДА ДОБАВИТЬКДАТЕ(ВЫБОР
	               |					КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)
	               |						ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата
	               |					ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
	               |				КОНЕЦ, ДЕНЬ, -7) = &дДата
	               |			ТОГДА 7
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ДОБАВИТЬКДАТЕ(ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)
	               |								ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата
	               |							ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
	               |						КОНЕЦ, ДЕНЬ, -3) = &дДата
	               |					ТОГДА 3
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втЗаказы.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
	               |	втЗаказы.ДоговорКонтрагента.Владелец КАК Контрагент,
	               |	втЗаказы.Сделка КАК Заказ,
	               |	втЗаказы.Сделка.ДатаОплаты КАК ДатаОплаты,
	               |	втЗаказы.СуммаВзаиморасчетовОстаток КАК СуммаВз,
	               |	втЗаказы.СуммаУпрОстаток КАК СуммаРуб,
	               |	втЗаказы.Сделка.ВалютаДокумента КАК Валюта,
	               |	втЗаказы.ЧислоДнейДоОплаты,
	               |	ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК АдресПочты,
	               |	Реализации.Реализация
	               |ИЗ
	               |	втЗаказы КАК втЗаказы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО втЗаказы.ДоговорКонтрагента.ОтветственноеЛицо = КонтактнаяИнформация.Объект
	               |			И (КонтактнаяИнформация.Вид.Код = ""00012"")
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			РеализацияТоваровУслуг.Ссылка КАК Реализация,
	               |			РеализацияТоваровУслуг.Сделка КАК Сделка
	               |		ИЗ
	               |			Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |		ГДЕ
	               |			РеализацияТоваровУслуг.Проведен = РеализацияТоваровУслуг.Проведен
	               |			И РеализацияТоваровУслуг.ДоговорКонтрагента.ТипДоговора = ЗНАЧЕНИЕ(Справочник.ТипыДоговоров.ШинтрейдЯрославль)
	               |			И (РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	               |					ИЛИ РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером))) КАК Реализации
	               |		ПО втЗаказы.Сделка = Реализации.Сделка
	               |ГДЕ
	               |	(втЗаказы.СуммаВзаиморасчетовОстаток > 0
	               |			ИЛИ втЗаказы.СуммаУпрОстаток > 0)
	               |ИТОГИ ПО
	               |	ОтветственноеЛицо";
				   
	Если дДат = Дата(1,1,1) Тогда
		Запрос.УстановитьПараметр("дДата",НачалоДня(ТекущаяДата()));
	Иначе
		Запрос.УстановитьПараметр("дДата",НачалоДня(дДат));
	КонецЕсли;
	
	ВыборкаМенеджер = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаМенеджер.Следующий() Цикл
		ВыборкаДетали = ВыборкаМенеджер.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			СоздатьЗадачу(ВыборкаДетали);//СоздатьСобытие(ВыборкаДетали);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьЗадачу(Выборка)
	
	Если Выборка.ЧислоДнейДоОплаты = 7 Тогда
		ОписаниеСобытия = "7 дней до оплаты по заказу " + Строка(Выборка.Заказ);
	ИначеЕсли Выборка.ЧислоДнейДоОплаты = 3 Тогда
		ОписаниеСобытия = "3 дня до оплаты по заказу " + Строка(Выборка.Заказ);
	ИначеЕсли Выборка.ЧислоДнейДоОплаты = 0 Тогда
		ОписаниеСобытия = "Сегодня срок оплаты по заказу " + Строка(Выборка.Заказ);
	КонецЕсли;
	
	//***Задача № 57104 - дублируем на почту
	АдресМенеджера = СокрЛП(Выборка.АдресПочты);
	АдресПочты = АдресМенеджера;	
	Если Найти(АдресМенеджера, "nikitin_m@yst.ru") = 0 Тогда
		АдресПочты = АдресПочты + "; " + "nikitin_m@yst.ru";
	КонецЕсли;
	Если Найти(АдресМенеджера, "malyshev@yst.ru") > 0 Тогда
		АдресПочты = СтрЗаменить(АдресПочты, "malyshev@yst.ru", "shaburova@yst.ru");
	КонецЕсли;
	Если Найти(АдресМенеджера, "nikitin_m@yst.ru") > 0 
		ИЛИ Найти(АдресМенеджера, "aa@yst-group.com") > 0 
		ИЛИ Найти(АдресМенеджера, "az@yst-group.com") > 0 Тогда
		АдресПочты = АдресПочты + "; " + "burova@yst.ru";
	КонецЕсли;
	
	АдресОтправителяЯШТ = "1c@yst.ru";
	УЗ = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию(АдресОтправителяЯШТ); 
	Тема = ОписаниеСобытия;
	ТекстСообщения = "Автоматическая отправка." + Символы.ПС  
					+ Строка(Выборка.Заказ.Контрагент) + " по заказу покупателя " + Выборка.Заказ + ":" + Символы.ПС 
					+ "дата оплаты: "+ Формат(Выборка.ДатаОплаты,"ДФ=dd.MM.yyyy")+", сумма долга "+Выборка.СуммаВз+" "+Выборка.Валюта + Символы.ПС
					+ Строка(Выборка.Реализация);
	СписокФайловВложений = новый СписокЗначений;				
	яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(АдресПочты, СписокФайловВложений, УЗ, ТекстСообщения, Тема);
	
	НовЗадача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
	НовЗадача.Дата           = ТекущаяДата();
	НовЗадача.СрокИсполнения = НачалоДня(ТекущаяДата()) + 17*3600; // до 17:00
	НовЗадача.Оповещение	 = Истина;
	НовЗадача.СрокОповещения = НачалоДня(ТекущаяДата()) + 8*3600; // оповещение в 8-00
	НовЗадача.Инициатор 	 = Справочники.Пользователи.НайтиПоКоду("Робот (магазин)");
	НовЗадача.Наименование	 = ОписаниеСобытия;
	НовЗадача.Исполнитель	 = Выборка.ОтветственноеЛицо;
	НовЗадача.Описание		 = ТекстСообщения;
	НовЗадача.Объект		 = Выборка.Заказ;
	НовЗадача.Записать();  
	
КонецПроцедуры

Процедура СоздатьСобытие(Выборка)
	
	Если Выборка.ЧислоДнейДоОплаты = 10 Тогда
		ОписаниеСобытия = "10 дней до оплаты по заказу " + Строка(Выборка.Заказ);
	ИначеЕсли Выборка.ЧислоДнейДоОплаты = 3 Тогда
		ОписаниеСобытия = "3 дня до оплаты по заказу " + Строка(Выборка.Заказ);
	ИначеЕсли Выборка.ЧислоДнейДоОплаты = 0 Тогда
		ОписаниеСобытия = "Сегодня срок оплаты по заказу " + Строка(Выборка.Заказ);
	КонецЕсли;
	
	ДокСобытие = Документы.Событие.СоздатьДокумент();
	ДокСобытие.ТипСобытия			= Перечисления.ВходящееИсходящееСобытие.Входящее;
	ДокСобытие.ВидСобытия			= Перечисления.ВидыСобытий.Прочее;
	ДокСобытие.ВидОбъекта			= Перечисления.ВидыОбъектовСобытия.Контрагент;
	ДокСобытие.Контрагент			= Выборка.Контрагент;
	ДокСобытие.Основание			= Выборка.Заказ;
	ДокСобытие.Важность				= Перечисления.Важность.Высокая;
	ДокСобытие.СостояниеСобытия		= Перечисления.СостоянияСобытий.Запланировано;
	ДокСобытие.НапомнитьОСобытии	= Истина;
	ДокСобытие.ВремяНапоминания		= НачалоДня(ТекущаяДата())+28830;//8 утра
	ДокСобытие.Дата					= ТекущаяДата();
	ДокСобытие.НачалоСобытия		= НачалоДня(ТекущаяДата())+28800;//8 утра
	ДокСобытие.ОкончаниеСобытия		= КонецДня(ТекущаяДата());//+5*24*60*60;//
	ДокСобытие.ОписаниеСобытия		= ОписаниеСобытия;
	ДокСобытие.СодержаниеСобытия	= "По заказу покупателя " + Выборка.Заказ + ":" + Символы.ПС + "дата оплаты: "+Формат(Выборка.ДатаОплаты,"ДФ=dd.MM.yyyy")+", сумма долга "+Выборка.СуммаВз+" "+Выборка.Валюта;
	ДокСобытие.Ответственный		= Выборка.ОтветственноеЛицо;
	ДокСобытие.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры	