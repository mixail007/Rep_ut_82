Перем ПараметрДанныхНачалоПериода, ПараметрДанныхКонецПериода;

Процедура КнопкаВыбораПериодаНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНачала, ?(ДатаОкончания='0001-01-01', ДатаОкончания, КонецДня(ДатаОкончания)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНачала = НастройкаПериода.ПолучитьДатуНачала();
		ДатаОкончания = НастройкаПериода.ПолучитьДатуОкончания();
		ПараметрДанныхНачалоПериода.Значение = ДатаНачала;	
		ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаОкончания);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДатаНачалаПриИзменении(Элемент)
	
	ПараметрДанныхНачалоПериода.Значение = ДатаНачала;	
	
КонецПроцедуры

Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаОкончания);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Для Каждого ВариантНастроек Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
		ЭлементыФормы.ВариантОтчета.СписокВыбора.Добавить(ВариантНастроек.Имя, ВариантНастроек.Представление);
	КонецЦикла;
	Если СхемаКомпоновкиДанных.ВариантыНастроек.Количество() > 0 Тогда
		ЭлементыФормы.ВариантОтчета.Значение = СхемаКомпоновкиДанных.ВариантыНастроек[0].Имя;
	КонецЕсли;	
	
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);
	ДатаОкончания = ТекущаяДата();
	УстановитьНастройки();
	КлючУникальности = 1;
	
КонецПроцедуры

Процедура УстановитьНастройки()
	
	ПараметрДанныхНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0];
	ПараметрДанныхНачалоПериода.Значение = ДатаНачала;
	ПараметрДанныхНачалоПериода.Использование = Истина;
	
	ПараметрДанныхКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1];
	ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаОкончания);
	ПараметрДанныхКонецПериода.Использование = Истина;
	
	Настройки = КомпоновщикНастроек.Настройки;
		
КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
	
	Настройки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	ПараметрДанныхНачалоПериода = Настройки.ПараметрыДанных.Элементы[0];
	ПараметрДанныхНачалоПериода.Значение = ДатаНачала;
	ПараметрДанныхНачалоПериода.Использование = Истина;
	
	ПараметрДанныхНачалоПериода = Настройки.ПараметрыДанных.Элементы[1];
	ПараметрДанныхНачалоПериода.Значение = КонецДня(ДатаОкончания);
	ПараметрДанныхНачалоПериода.Использование = Истина;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ,ДанныеРасшифровки);	
	
	ЭлементыФормы.Результат.Очистить();
	ДокументРезультат = ЭлементыФормы.Результат;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	//ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ПроцессорВывода.НачатьВывод();
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		ЭлементРезультата = ПроцессорКомпоновкиДанных.Следующий();
		Если ЭлементРезультата = Неопределено Тогда
			Прервать;
		Иначе
			
			Если ВариантОтчета = "Основной" Тогда    //анализируем, были ли првоерки нагрузки у ближайщих партий этой номенклатуры. Берем плюс минус 3 недели.
				
				Если ЭлементРезультата.ЗначенияПараметров.Количество() > 0 Тогда 
					
					ИмяПараметра_НомерКонтейнера = Неопределено;
					
					// Поскольку имена параметров зашиты как "П1, П2..." то нужно понять какой из них нам нужен
					// Для этого идем в макеты и ищем имя параметра в выражении к параметру
					Для каждого ПараметрМакета Из МакетКомпоновки.Макеты[ЭлементРезультата.Макет].Параметры Цикл
						
						Если ТипЗнч(ПараметрМакета) = Тип("ПараметрОбластиВыражениеКомпоновкиДанных") Тогда
							
							Если Найти(ПараметрМакета.Выражение,"ПроверкаБлижайшейПартии") > 0 Тогда
								ИмяПараметра_ПроверкаБлижайшейПартии = ПараметрМакета.Имя;    
							КонецЕсли; 
							
							Если Найти(ПараметрМакета.Выражение,"НомерКонтейнера") > 0 Тогда
								ИмяПараметра_НомерКонтейнера = ПараметрМакета.Имя;   
							КонецЕсли; 
							
							Если Найти(ПараметрМакета.Выражение,"Код") > 0 Тогда
								ИмяПараметра_Код = ПараметрМакета.Имя;   
							КонецЕсли; 
							
							Если Найти(ПараметрМакета.Выражение,"Количество") > 0 Тогда
								ИмяПараметра_Количество = ПараметрМакета.Имя;   
							КонецЕсли; 
							
							Если Найти(ПараметрМакета.Выражение,"ДатаПоставки") > 0 Тогда
								ИмяПараметра_ДатаПоставки = ПараметрМакета.Имя;   
							КонецЕсли; 
							
						КонецЕсли;    
						
					КонецЦикла; 
					
					Если ИмяПараметра_НомерКонтейнера <> Неопределено Тогда
						// Заменяем значения полей на свои произвольные
						
						Если ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_Количество].Значение < 5 Тогда
							
							Запрос = Новый Запрос;
							Запрос.УстановитьПараметр("КодНоменклатуры", ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_Код].Значение);
							Запрос.УстановитьПараметр("НачалоПериода", Дата(Прав(ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_ДатаПоставки].Значение,19))-86400*21);
							Запрос.УстановитьПараметр("КонецПериода", Дата(Прав(ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_ДатаПоставки].Значение,19))+86400*21);
							Запрос.Текст = "ВЫБРАТЬ
							|	А.ДокументЗакупки,
							|	А.ДатаПроведенияТестаНагрузки
							|ИЗ
							|	(ВЫБРАТЬ
							|		ЗакупкиОбороты.ДокументЗакупки КАК ДокументЗакупки,
							|		ЕСТЬNULL(ПровереннаяНагрузкаДисков.Дата, 0) КАК ДатаПроведенияТестаНагрузки
							|	ИЗ
							|		РегистрНакопления.Закупки.Обороты(
							|				&НачалоПериода,
							|				&КонецПериода,
							|				,
							|				Номенклатура.Код = &КодНоменклатуры
							|					И НЕ ЗаказПоставщику.НомерКонтейнера = """") КАК ЗакупкиОбороты
							|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПровереннаяНагрузкаДисков КАК ПровереннаяНагрузкаДисков
							|			ПО ЗакупкиОбороты.Номенклатура = ПровереннаяНагрузкаДисков.Номенклатура
							|				И ЗакупкиОбороты.ЗаказПоставщику.НомерКонтейнера = ПровереннаяНагрузкаДисков.НомерКонтейнера
							|	ГДЕ
							|		ЗакупкиОбороты.КоличествоОборот > 0) КАК А
							|ГДЕ
							|	А.ДатаПроведенияТестаНагрузки <> 0";
							Рез = Запрос.Выполнить().Выбрать();
							Пока Рез.Следующий() Цикл
								ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_ПроверкаБлижайшейПартии].Значение = "Дата проверки " + Лев(Строка(Рез.ДатаПроведенияТестаНагрузки),10) + ", " + Строка(Рез.ДокументЗакупки);
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЕсли; 
					
				КонецЕсли;
				
			КонецЕсли;
			
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПроцессорВывода.ЗакончитьВывод();
			
КонецПроцедуры

Процедура ВариантОтчетаПриИзменении(Элемент)
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек.Найти(Элемент.Значение).Настройки);
	
КонецПроцедуры
