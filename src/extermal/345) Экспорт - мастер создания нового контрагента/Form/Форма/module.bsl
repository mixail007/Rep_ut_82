
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция проверяет строку на наличие значимых символов
//
// Параметры
//  ВыбСтрока  – строка для проверки
// Возвращаемое значение:
//   Строка - пробел или пустое значение строки
//
Функция ПроверкаПустойСтроки(ВыбСтрока, ПризнакЗапятой=Истина)
	
	Если ПустаяСтрока(ВыбСтрока) Тогда
		Возврат "";
	Иначе
		Возврат ?(ПризнакЗапятой,",","")+" ";
	КонецЕсли; 
	
КонецФункции // ПроверкаПустойСтроки()

// Процедура открывает форму списка справочника ВидыКонтаткнойИнформации
// с установленным отбором и владельцем
//
// Переметры:
//  Тип        - Перечисоление, типы контактной информации.
//  ВидОбъекта - Перечисоление, вид объекта контактной информации.
//  Элемент    - Элемент управления, владелец для формы выбора.
//
// Возвращаемое значение
//  НЕТ
//
Процедура ОткрытьФормуВыбораВидаКонтактнойИнформацииСОтбором(Тип, ВидОбъекта, Элемент)
	
	ФормаВыбора = Справочники.ВидыКонтактнойИнформации.ПолучитьФормуВыбора(, Элемент);
	
	ФормаВыбора.Отбор.Тип.Использование = Истина;
	ФормаВыбора.Отбор.Тип.Значение      = Тип;
	ФормаВыбора.Отбор.ВидОбъектаКонтактнойИнформации.Использование = Истина;
	ФормаВыбора.Отбор.ВидОбъектаКонтактнойИнформации.Значение      = ВидОбъекта;
	
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность                            = Ложь;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ВидОбъектаКонтактнойИнформации.Доступность = Ложь;
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ЭлементыФормы.НаименованиеИННэкспорт.СписокВыбора.Добавить("БИН");
	ЭлементыФормы.НаименованиеИННэкспорт.СписокВыбора.Добавить("УНП");
	Если ЗначениеНеЗаполнено(ВидТелефонаКонтрагента) Тогда
		ВидТелефонаКонтрагента = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
	КонецЕсли;
	Если ЗначениеНеЗаполнено(ВидЭлектроннойПочтыКонтрагента) Тогда
		Выб = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38823");
		Если Выб.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты 
			И Выб.ВидОбъектаКонтактнойИнформации = Перечисления.ВидыОбъектовКонтактнойИнформации.Контрагенты Тогда
			  ВидЭлектроннойПочтыКонтрагента = Выб.Ссылка;
		КонецЕсли;	
	КонецЕсли;
	Если ЗначениеНеЗаполнено(ВидТелефонаДиректора) Тогда
		Выб = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00020");
		Если Выб.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон 
			И Выб.ВидОбъектаКонтактнойИнформации = Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛица Тогда
			  ВидТелефонаДиректора = Выб.Ссылка;
		КонецЕсли;	
	КонецЕсли;
	Если ЗначениеНеЗаполнено(ВидЭлектроннойПочтыДиректора) Тогда
		Выб = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00019");
		Если Выб.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты 
			И Выб.ВидОбъектаКонтактнойИнформации = Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛица Тогда
			  ВидЭлектроннойПочтыДиректора = Выб.Ссылка;
		КонецЕсли;	
	КонецЕсли;
	Если ЗначениеНеЗаполнено(ВидТелефонаКонтактногоЛица) Тогда
		Выб = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00020");
		Если Выб.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон 
			И Выб.ВидОбъектаКонтактнойИнформации = Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛица Тогда
			  ВидТелефонаКонтактногоЛица = Выб.Ссылка;
		КонецЕсли;	
	КонецЕсли;
	Если ЗначениеНеЗаполнено(ВидЭлектроннойПочтыКонтактногоЛица) Тогда
		Выб = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00019");
		Если Выб.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты 
			И Выб.ВидОбъектаКонтактнойИнформации = Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛица Тогда
			  ВидЭлектроннойПочтыКонтактногоЛица = Выб.Ссылка;
		КонецЕсли;	
	КонецЕсли;
	Организация = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
КонецПроцедуры

Функция ПроверитьЗаполнениеРеквизитовФормы(СписокРеквизитов)
	
	СтатусПроверки = Истина;
	Для Каждого Стр из СписокРеквизитов Цикл
		ИмяРеквизита = Стр.Значение;
		Если ЗначениеНеЗаполнено(ЭтаФорма[ИмяРеквизита]) Тогда
			СтатусПроверки = Ложь;
			сообщить("Не заполнен обязательный реквизит:  "+Стр.Представление, СтатусСообщения.Важное);
		КонецЕсли;	
	КонецЦикла;	
	возврат СтатусПроверки;
	
КонецФункции	

// Процедура вызывается при нажатии на кнопку Зарегистрировать командной панели ОсновныеДействияФормы.
// 
//
Процедура ОсновныеДействияФормыЗарегистрировать(Кнопка)
	
	СписокРеквизитов = Новый СписокЗначений;
	СписокРеквизитов.Добавить("НаименованиеКонтрагента", "Наменование");
	СписокРеквизитов.Добавить("НаименованиеКонтрагентаПолное", "Наименование полное");
	СписокРеквизитов.Добавить("ЮрФизЛицо", "Юр./Физ. лицо");
	СписокРеквизитов.Добавить("СтранаЮрАдрес", "Юридический адрес - Страна");
	СписокРеквизитов.Добавить("Юридическийадрес", "Юридический адрес");
	СписокРеквизитов.Добавить("СтранаФактАдрес", "Фактический адрес - Страна");
	СписокРеквизитов.Добавить("ФактическийАдрес", "Фактический адрес");
	СписокРеквизитов.Добавить("НаименованиеИННэкспорт", "Наименование налогового идентификатора (БИН, УНП или др.)");
	СписокРеквизитов.Добавить("НалоговыйИдентификатор", "Налоговый идентификатор");
	СписокРеквизитов.Добавить("ВалютаВзаиморасчетов", "Валюта взаиморасчетов");
	СписокРеквизитов.Добавить("КатегорияПокупателя", "Категория покупателя");
	СписокРеквизитов.Добавить("ФИОДиректора", "Фамилия И.О. директора");
	СписокРеквизитов.Добавить("ДолжностьДиректора", "Должность директора");
	СписокРеквизитов.Добавить("ДействующийНаОсновании", "Действующий на основании");
	СписокРеквизитов.Добавить("ФИОКонтактногоЛица", "Фамилия И.О. контактного лица");
	СписокРеквизитов.Добавить("ДолжностьКонтактногоЛица", "Должность контактного лица");
	СписокРеквизитов.Добавить("НомерДоговора", "Номер договора");
	СписокРеквизитов.Добавить("ДатаДоговора", "Дата договора");
	СписокРеквизитов.Добавить("СрокДействияДоговора", "Срок действия договора");
	СписокРеквизитов.Добавить("ЛимитДЗ", "Лимит дебиторской задолженности");
	СписокРеквизитов.Добавить("ВидТовара", "Вид товара покупателя");

	
	//для двуязычного контрагента должны быть заполнены адреса на английском языке
	Если Найти(Врег(СтранаЮрАдрес),"БЕЛАРУСЬ")=0 и Найти(Врег(СтранаЮрАдрес),"АРМЕНИЯ")=0
		и Найти(Врег(СтранаЮрАдрес),"КАЗАХСТАН")=0 и ДваЯзыка = Истина Тогда
		СписокРеквизитов.Добавить("СтранаЮрАдресАнгл", "Юридический адрес на английском языке - Страна" );
		СписокРеквизитов.Добавить("ЮридическийАдресАнгл", "Юридический адрес на английском языке" );
		СписокРеквизитов.Добавить("СтранаФактАдресАнгл", "Фактический адрес на английском языке - Страна" );
		СписокРеквизитов.Добавить("ФактическийАдресАнгл", "Фактический адрес на английском языке" );
	КонецЕсли;	
	
	Если НЕ ПроверитьЗаполнениеРеквизитовФормы(СписокРеквизитов) Тогда
		возврат;
	КонецЕсли;	
	
	//эта обработка только для экспортных клиентов!   Поэтому страна не может быть Россией
	Если Врег(СокрЛП(СтранаЮрАдрес)) = Врег("Российская Федерация") или Врег(СокрЛП(СтранаЮрАдрес)) = "РОССИЯ" 
		или Врег(СокрЛП(СтранаФактАдрес)) = Врег("Российская Федерация") или Врег(СокрЛП(СтранаФактАдрес)) = "РОССИЯ"
		Тогда
		Предупреждение("Данная обработка предназначена только для покупателей, 
		|находищихся за пределами Российской федерации!
		|Новый покупатель не зарегистрирован!");
		возврат;
	КонецЕсли;
	
	//проверим наличие банка
	Если СокрЛП(НомерРасчетногоСчета)<>"" И ЗначениеНеЗаполнено(Банк) Тогда
		ТекстВопроса = "Не указан банк расчетного счета покупателя.
		|Создать нового контрагента без расчетного счета 
		|(можно будет потом добавить прямо в справочнике)?";
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			сообщить("Новый контрагент не создан");
			возврат;
		КонецЕсли;	
	КонецЕсли;	
	
	ВыбГруппаКонтрагентов = Справочники.Контрагенты.ПотенциальныеПокупатели;
	
	НовыйКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
	НовыйКонтрагент.Родитель                   = ВыбГруппаКонтрагентов;
	НовыйКонтрагент.Наименование               = НаименованиеКонтрагента;
	НовыйКонтрагент.НаименованиеПолное         = НаименованиеКонтрагентаПолное;
	//НовыйКонтрагент.ДополнительноеОписание     = Запись.ДополнительноеОписание;
	НовыйКонтрагент.ЮрФизЛицо                  = ЮрФизЛицо;
	НовыйКонтрагент.ОсновнойМенеджерПокупателя = глТекущийПользователь;
	НовыйКонтрагент.Покупатель                 = Истина;//+++ 09.02.2016
	НовыйКонтрагент.Поставщик                  = Ложь;
	НовыйКонтрагент.Экспорт = Истина;
	НовыйКонтрагент.ОсновнойМенеджерКонтрагента = глТекущийПользователь;
	НовыйКонтрагент.КатегорияПокупателя = КатегорияПокупателя;
	НовыйКонтрагент.ИНН = НалоговыйИдентификатор;
	НовыйКонтрагент.НаименованиеИННэкспорт = НаименованиеИННэкспорт;
	НовыйКонтрагент.КонтролироватьСуммуЗадолженности = Истина;
	НовыйКонтрагент.ДопустимаяСуммаЗадолженности = ЛимитДЗ;
	
	Если Найти(Врег(СтранаЮрАдрес),"БЕЛАРУСЬ")>0 ИЛИ Найти(Врег(СтранаЮрАдрес),"АРМЕНИЯ")>0
		ИЛИ Найти(Врег(СтранаЮрАдрес),"КАЗАХСТАН")>0 Тогда
		НовыйКонтрагент.ДвуязычныйЭкспорт = Ложь;
	Иначе
		НовыйКонтрагент.ДвуязычныйЭкспорт = ДваЯзыка;
	КонецЕсли;	
	
	НачатьТранзакцию();
	ФиксироватьТранзакцию = Истина;
	
	НовыйКонтрагент.УстановитьНовыйКод("П");
	ФормаКонтрагента = НовыйКонтрагент.ПолучитьФорму(, ЭтаФорма.ВладелецФормы);
	ФормаКонтрагента.НаборКонтактнойИнформации.Отбор.Объект.Установить(НовыйКонтрагент.Ссылка);
	
	// Контактная инфомация контрагента
	// Телефон контрагента
	Если ФиксироватьТранзакцию Тогда
		
		// Адрес контрагента юридический
		Если СокрЛП(СтранаЮрАдрес)<>"" И СокрЛП(Юридическийадрес)<>"" Тогда
			НоваяЗапись = ФормаКонтрагента.НаборКонтактнойИнформации.Добавить();
			НоваяЗапись.Вид    = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
			НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Адрес;
			НоваяЗапись.Объект = НовыйКонтрагент.Ссылка;
			НоваяЗапись.Поле1 = СокрЛП(СтранаЮрАдрес);
			НоваяЗапись.Представление = СокрЛП(ЮридическийАдрес);
		КонецЕсли; 
		// Адрес контрагента фактический
		Если СокрЛП(СтранаФактАдрес)<>"" И СокрЛП(ФактическийАдрес)<>"" Тогда
			НоваяЗапись = ФормаКонтрагента.НаборКонтактнойИнформации.Добавить();
			НоваяЗапись.Вид    = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
			НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Адрес;
			НоваяЗапись.Объект = НовыйКонтрагент.Ссылка;
			НоваяЗапись.Поле1 = СокрЛП(СтранаФактАдрес);
			НоваяЗапись.Представление = СокрЛП(ФактическийАдрес);
		КонецЕсли; 
		//телефон
		Если НЕ ЗначениеНеЗаполнено(ВидТелефонаКонтрагента) И НЕ ПустаяСтрока(НомерТелефонаКонтрагента) Тогда
			НоваяЗапись = ФормаКонтрагента.НаборКонтактнойИнформации.Добавить();
			НоваяЗапись.Вид    = ВидТелефонаКонтрагента;
			НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Телефон;
			НоваяЗапись.Объект = НовыйКонтрагент.Ссылка;
			НоваяЗапись.Поле3  = НомерТелефонаКонтрагента;
			НоваяЗапись.Поле4  = ДобавочныйНомерТелефонаКонтрагента;
			НоваяЗапись.Поле2  = КодГородаТелефонаКонтрагента;
			СформироватьПредставлениеТелефона(НоваяЗапись);
		КонецЕсли; 
		// Адрес электронной почты контрагента
		Если НЕ ЗначениеНеЗаполнено(ВидЭлектроннойПочтыКонтрагента) И НЕ ПустаяСтрока(АдресЭлектроннойПочтыКонтрагента) Тогда
			НоваяЗапись = ФормаКонтрагента.НаборКонтактнойИнформации.Добавить();
			НоваяЗапись.Вид    = ВидЭлектроннойПочтыКонтрагента;
			НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
			НоваяЗапись.Объект = НовыйКонтрагент.Ссылка;
			НоваяЗапись.Представление = АдресЭлектроннойПочтыКонтрагента;
		КонецЕсли;
		
		//Адреса на английском языке
		Если НовыйКонтрагент.ДвуязычныйЭкспорт Тогда
			ВидАдресаЮрАнгл = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38846");
			ВидАдресаФактАнгл = Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38847");
			Если НЕ ЗначениеНеЗаполнено(ВидАдресаЮрАнгл) И НЕ ПустаяСтрока(ЮридическийАдресАнгл) Тогда
				НоваяЗапись = ФормаКонтрагента.НаборКонтактнойИнформации.Добавить();
				НоваяЗапись.Вид    = ВидАдресаЮрАнгл;
				НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Адрес;
				НоваяЗапись.Объект = НовыйКонтрагент.Ссылка;
				НоваяЗапись.Поле1 = СокрЛП(СтранаЮрАдресАнгл);
				НоваяЗапись.Представление = СокрЛП(ЮридическийАдресАнгл);
			КонецЕсли;
			Если НЕ ЗначениеНеЗаполнено(ВидАдресаФактАнгл) И НЕ ПустаяСтрока(ФактическийАдресАнгл) Тогда
				НоваяЗапись = ФормаКонтрагента.НаборКонтактнойИнформации.Добавить();
				НоваяЗапись.Вид    = ВидАдресаФактАнгл;
				НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Адрес;
				НоваяЗапись.Объект = НовыйКонтрагент.Ссылка;
				НоваяЗапись.Поле1 = СокрЛП(СтранаФактАдресАнгл);
				НоваяЗапись.Представление = СокрЛП(ФактическийАдресАнгл);
			КонецЕсли;
		КонецЕсли;	
			
	КонецЕсли;
	
	Попытка
		ФормаКонтрагента.ЗаписатьВФорме();
	Исключение
		Сообщить("Не удалось записать контрагента: " + ОписаниеОшибки());
		ФиксироватьТранзакцию = Ложь;
	КонецПопытки;
	
	
	// если не записали ничего - значит проблемы возникли
	Если ФормаКонтрагента.Модифицированность Тогда
		СообщитьОбОшибке("Не удалось записать нового контрагента.");
		ФиксироватьТранзакцию = Ложь;	
	КонецЕсли;
	
	//категория
	Если НЕ ЗначениеНеЗаполнено(ВидТовара) И ФиксироватьТранзакцию Тогда
		НаборЗаписейКатегорииОбъекта = ФормаКонтрагента.Категории;
		НаборЗаписейКатегорииОбъекта.ОбъектОтбораКатегорий = НовыйКонтрагент.Ссылка;
		НаборЗаписейКатегорииОбъекта.НазначениеКатегорий = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты;
		Запись = ФормаКонтрагента.Категории.КатегорииОбъекта.Добавить();
		Запись.Категория = ВидТовара;
		Запись.Принадлежность = Истина;
		Попытка
			ФормаКонтрагента.ЗаписатьВФорме();
			ФормаКонтрагента.Категории.ПрочитатьЗаполнитьКатегорииОбъекта();
			НовыйКонтрагент.Покупатель = Истина;
			ФормаКонтрагента.ЗаписатьВФорме();
		Исключение
			Сообщить("Не удалось записать категорию товара: " + ОписаниеОшибки());
			ФиксироватьТранзакцию = Ложь;
		КонецПопытки;
	КонецЕсли;
	//записали категорию
			
	Если ФиксироватьТранзакцию Тогда
			
		//Основной договор контрагента создаем и заполняем
		Если ЗначениеЗаполнено(НовыйКонтрагент.ОсновнойДоговорКонтрагента) Тогда
			НайденныйДоговорОбъект = НовыйКонтрагент.ОсновнойДоговорКонтрагента.ПолучитьОбъект();
		Иначе	
			ВыборкаДоговоров = Справочники.ДоговорыКонтрагентов.Выбрать(, НовыйКонтрагент.Ссылка);
			Если ВыборкаДоговоров.Следующий() Тогда
				НайденныйДоговорОбъект = ВыборкаДоговоров.Ссылка.ПолучитьОбъект();
			Иначе
				НайденныйДоговорОбъект = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
			КонецЕсли;
		КонецЕсли;		
		НайденныйДоговорОбъект.Наименование = "Договор продажи";
		НайденныйДоговорОбъект.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам;
		НайденныйДоговорОбъект.ВалютаВзаиморасчетов = ВалютаВзаиморасчетов;
		Если ЗначениеНеЗаполнено(НайденныйДоговорОбъект.ВалютаВзаиморасчетов) Тогда
			НайденныйДоговорОбъект.ВалютаВзаиморасчетов = Константы.ВалютаУправленческогоУчета.Получить();
		КонецЕсли;
		НайденныйДоговорОбъект.Организация = Организация;
		Если ЗначениеНеЗаполнено(НайденныйДоговорОбъект.Организация) Тогда
			НайденныйДоговорОбъект.Организация = Справочники.Организации.НайтиПоКоду("00001");
		КонецЕсли;
		НайденныйДоговорОбъект.ОтветственноеЛицо = глТекущийПользователь;
		НайденныйДоговорОбъект.Владелец           = НовыйКонтрагент.Ссылка;
		НайденныйДоговорОбъект.ВидУсловийДоговора = Перечисления.ВидыУсловийДоговоровВзаиморасчетов.БезДополнительныхУсловий;
		НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
		НайденныйДоговорОбъект.ТипЦен      = Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
		НайденныйДоговорОбъект.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль;
		НайденныйДоговорОбъект.Дата = ДатаДоговора;
		НайденныйДоговорОбъект.Номер = СокрЛП(НомерДоговора);
		НайденныйДоговорОбъект.ДатаОкончанияДействия = СрокДействияДоговора;
		НайденныйДоговорОбъект.ВидУсловийДоговора = Перечисления.ВидыУсловийДоговоровВзаиморасчетов.СДополнительнымиУсловиями;
		НайденныйДоговорОбъект.КонтролироватьСуммуЗадолженности = Истина;
		НайденныйДоговорОбъект.ДопустимаяСуммаЗадолженности = ЛимитДЗ;
		Попытка
			НайденныйДоговорОбъект.Записать();
		Исключение
			СообщитьОбОшибке(ОписаниеОшибки(),, "Не удалось записать основной договор контрагента.");
			ФиксироватьТранзакцию = Ложь;
		КонецПопытки;
		
		Если  ФиксироватьТранзакцию Тогда
			Если НЕ НовыйКонтрагент.ОсновнойДоговорКонтрагента.Ссылка = НайденныйДоговорОбъект.Ссылка Тогда
				НовыйКонтрагент.ОсновнойДоговорКонтрагента = НайденныйДоговорОбъект.Ссылка;
				Попытка
					ФормаКонтрагента.ЗаписатьВФорме();
				Исключение
					Сообщить("Не удалось записать контрагента: " + ОписаниеОшибки());
					ФиксироватьТранзакцию = Ложь;
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	//конец создания договора
	
	//директор - в контактные лица
	Если ФиксироватьТранзакцию  Тогда
		
		НовоеКонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
		НовоеКонтактноеЛицо.Наименование       = ФИОДиректора;
		НовоеКонтактноеЛицо.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента;
		НовоеКонтактноеЛицо.ОбъектВладелец     = НовыйКонтрагент.Ссылка;
		НовоеКонтактноеЛицо.Должность          = ДолжностьДиректора;
		НовоеКонтактноеЛицо.Описание = "Действующий на основании "+СокрЛП(ДействующийНаОсновании);
		НовоеКонтактноеЛицо.Роль = Справочники.РолиКонтактныхЛиц.Директор;
		Попытка
			НовоеКонтактноеЛицо.УстановитьНовыйКод();
			НовоеКонтактноеЛицо.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
			ФиксироватьТранзакцию = Ложь;
		КонецПопытки;
		
	КонецЕсли;
	
	//контактные данные директора
	Если ФиксироватьТранзакцию  Тогда
			
		НаборКонтактнойИнформации = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
		НаборКонтактнойИнформации.Отбор.Объект.Значение = НовоеКонтактноеЛицо.Ссылка;
		НаборКонтактнойИнформации.Отбор.Объект.Использование = Истина;
		ЕстьНоваяЗапись = Ложь;
		// Телефон директора
		Если НЕ ЗначениеНеЗаполнено(ВидТелефонаДиректора) И НЕ ПустаяСтрока(НомерТелефонаДиректора) Тогда
			НоваяЗапись = НаборКонтактнойИнформации.Добавить();
			НоваяЗапись.Вид    = ВидТелефонаДиректора;
			НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Телефон;
			НоваяЗапись.Объект = НовоеКонтактноеЛицо.Ссылка;
			НоваяЗапись.Поле3  = НомерТелефонаДиректора;
			НоваяЗапись.Поле4  = ДобавочныйНомерТелефонаДиректора;
			НоваяЗапись.Поле2  = КодГородаТелефонаДиректора;
			СформироватьПредставлениеТелефона(НоваяЗапись);
			ЕстьНоваяЗапись = Истина;
		КонецЕсли; 
		// Адрес электронной почты директора
		Если НЕ ЗначениеНеЗаполнено(ВидЭлектроннойПочтыДиректора) И НЕ ПустаяСтрока(АдресЭлектроннойПочтыДиректора) Тогда
			НоваяЗапись = НаборКонтактнойИнформации.Добавить();
			НоваяЗапись.Вид    = ВидЭлектроннойПочтыДиректора;
			НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
			НоваяЗапись.Объект = НовоеКонтактноеЛицо.Ссылка;
			НоваяЗапись.Представление = АдресЭлектроннойПочтыДиректора;
			ЕстьНоваяЗапись = Истина;
		КонецЕсли;
		
		Если ЕстьНоваяЗапись Тогда
			Попытка
				НаборКонтактнойИнформации.Записать(Ложь);
			Исключение
				Сообщить(ОписаниеОшибки());
				ФиксироватьТранзакцию = Ложь;
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
    //директор
	
	//второе контактное лицо
	Если ФиксироватьТранзакцию  Тогда
		
		НовоеКонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
		НовоеКонтактноеЛицо.Наименование       = ФИОКонтактногоЛица;
		НовоеКонтактноеЛицо.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента;
		НовоеКонтактноеЛицо.ОбъектВладелец     = НовыйКонтрагент.Ссылка;
		НовоеКонтактноеЛицо.Должность          = ДолжностьКонтактногоЛица;
		Попытка
			НовоеКонтактноеЛицо.УстановитьНовыйКод();
			НовоеКонтактноеЛицо.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
			ФиксироватьТранзакцию = Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Если ФиксироватьТранзакцию  Тогда
		
		НаборКонтактнойИнформации = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
		НаборКонтактнойИнформации.Отбор.Объект.Значение = НовоеКонтактноеЛицо.Ссылка;
		НаборКонтактнойИнформации.Отбор.Объект.Использование = Истина;
        ЕстьНоваяЗапись = Ложь;
		
		// Телефон контактного лица
		Если НЕ ЗначениеНеЗаполнено(ВидТелефонаКонтактногоЛица) И НЕ ПустаяСтрока(НомерТелефонаКонтактногоЛица) Тогда
			НоваяЗапись = НаборКонтактнойИнформации.Добавить();
			НоваяЗапись.Вид    = ВидТелефонаКонтактногоЛица;
			НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Телефон;
			НоваяЗапись.Объект = НовоеКонтактноеЛицо.Ссылка;
			НоваяЗапись.Поле3  = НомерТелефонаКонтактногоЛица;
			НоваяЗапись.Поле4  = ДобавочныйНомерТелефонаКонтактногоЛица;
			НоваяЗапись.Поле2  = КодГородаТелефонаКонтактногоЛица;
			СформироватьПредставлениеТелефона(НоваяЗапись);
			ЕстьНоваяЗапись = Истина;
		КонецЕсли; 
		
		// Адрес электронной почты контактного лица
		Если НЕ ЗначениеНеЗаполнено(ВидЭлектроннойПочтыКонтактногоЛица) И НЕ ПустаяСтрока(АдресЭлектроннойПочтыКонтактногоЛица) Тогда
			НоваяЗапись = НаборКонтактнойИнформации.Добавить();
			НоваяЗапись.Вид    = ВидЭлектроннойПочтыКонтактногоЛица;
			НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
			НоваяЗапись.Объект = НовоеКонтактноеЛицо.Ссылка;
			НоваяЗапись.Представление = АдресЭлектроннойПочтыКонтактногоЛица;
			ЕстьНоваяЗапись = Истина;
		КонецЕсли;
		
		Если ЕстьНоваяЗапись Тогда
			Попытка
				НаборКонтактнойИнформации.Записать(Ложь);
			Исключение
				Сообщить(ОписаниеОшибки());
				ФиксироватьТранзакцию = Ложь;
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	//второе контактное лицо
	
	//сумма по договору регистрируется специальным документом
	Если ФиксироватьТранзакцию И СуммаДоговора <> 0 Тогда
		НовДок = Документы.УсловияПоставокПоДоговорамКонтрагентов.СоздатьДокумент();
		НовДок.Контрагент = НовыйКонтрагент.Ссылка;
		НовДок.ДоговорКонтрагента = НовыйКонтрагент.ОсновнойДоговорКонтрагента;
		НовДок.Дата = ТекущаяДата();
		НовДок.ДатаНачала = ДатаДоговора;
		НовДок.ДатаОкончания = СрокДействияДоговора;
		НовДок.СуммаУсловийДоговора = СуммаДоговора;
		НовДок.Ответственный = глТекущийПользователь;
		Попытка
			НовДок.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить(ОписаниеОшибки());
			ФиксироватьТранзакцию = Ложь;
		КонецПопытки;	
	КонецЕсли;
	
	//банковские реквизиты
	Если ФиксироватьТранзакцию И СокрЛП(НомерРасчетногоСчета)<>"" И ЗначениеЗаполнено(Банк) Тогда
		ТекБанк = Банк;
		Если Не ТекБанк.Пустая() Тогда
			НовСпр = Справочники.БанковскиеСчета.СоздатьЭлемент();
			НовСпр.Наименование = ТекБанк.Наименование;
			НовСпр.Банк = ТекБанк;
			НовСпр.НомерСчета = СокрЛП(НомерРасчетногоСчета);
			НовСпр.ВидСчета = "Расчетный";
			НовСпр.ВалютаДенежныхСредств = ВалютаВзаиморасчетов;
			НовСпр.Владелец = НовыйКонтрагент.Ссылка;
			Попытка
				НовСпр.Записать();
			Исключение
				Сообщить(ОписаниеОшибки());
				ФиксироватьТранзакцию = Ложь;
			КонецПопытки;

		КонецЕсли;	
    КонецЕсли;
	
	Если ФиксироватьТранзакцию Тогда
		ЗафиксироватьТранзакцию();
	Иначе
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли;
	
	//дополнительно создаем договор в Ворд и прицепляем к договору
	Попытка
		НаимОбработки = "Печать договора в Word";
		ТекСсылка=Справочники.ДополнительныеПечатныеФормы.НайтиПоНаименованию(НаимОбработки); 
		Если ТекСсылка.Пустая() Тогда
			сообщить("Не найден файл внешней печатной формы: "+НаимОбработки+"   Договор в Word не сформирован");
		Иначе
			ИмяФайла = ПолучитьИмяВременногоФайла(); 
			ДвоичныеДанные = ТекСсылка.ХранилищеВнешнейОбработки.Получить(); 
			ДвоичныеДанные.Записать(ИмяФайла); 
			ОбработкаПечатьДоговора = ВнешниеОбработки.Создать(ИмяФайла,Ложь); 
			ОбработкаПечатьДоговора.Договор = НовыйКонтрагент.ОсновнойДоговорКонтрагента;
			ОбработкаПечатьДоговора.ПечатьДоговораВорд(Истина);
		КонецЕсли;	
	Исключение
		сообщить("Не удалось открыть файл внешней обработки: "+НаимОбработки);
	КонецПопытки;
	
	ЭтаФорма.Закрыть();
	
	Если ФиксироватьТранзакцию Тогда
		ФормаКонтрагента.Обновить();
		ФормаКонтрагента.Открыть();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события НачалоВыбора элемента формы ВидТелефонаКонтрагента.
//
Процедура ВидТелефонаКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.Телефон, Перечисления.ВидыОбъектовКонтактнойИнформации.Контрагенты);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ВидАдресаКонтрагента.
//
Процедура ВидАдресаКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.Адрес, Перечисления.ВидыОбъектовКонтактнойИнформации.Контрагенты);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ВидЭлектроннойПочтыКонтрагента.
//
Процедура ВидЭлектроннойПочтыКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Перечисления.ВидыОбъектовКонтактнойИнформации.Контрагенты);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ВидТелефонаКонтактногоЛица.
//
Процедура ВидТелефонаКонтактногоЛицаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.Телефон, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛица);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ВидЭлектроннойПочтыКонтактногоЛица.
//
Процедура ВидЭлектроннойПочтыКонтактногоЛицаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛица);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы НомерТелефонаКонтрагента.
//
Процедура НомерТелефонаКонтрагентаПриИзменении(Элемент)
	
	Элемент.Значение = ПривестиНомерТелефонаКШаблону(Элемент.Значение);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы НомерТелефонаКонтактногоЛица.
//
Процедура НомерТелефонаКонтактногоЛицаПриИзменении(Элемент)
	
	Элемент.Значение = ПривестиНомерТелефонаКШаблону(Элемент.Значение);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ДобавочныйНомерТелефонаКонтрагента.
//
Процедура ДобавочныйНомерТелефонаКонтрагентаПриИзменении(Элемент)
	
	Элемент.Значение = ПривестиНомерТелефонаКШаблону(Элемент.Значение);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ДобавочныйНомерТелефонаКонтактногоЛица.
//
Процедура ДобавочныйНомерТелефонаКонтактногоЛицаПриИзменении(Элемент)
	
	Элемент.Значение = ПривестиНомерТелефонаКШаблону(Элемент.Значение);
	
КонецПроцедуры


Процедура СтранаЮрАдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ФормаВыбора = Справочники.КлассификаторСтранМира.ПолучитьФормуВыбора(, Элемент,);
	Если СокрЛП(СтранаЮрАдрес)<>"" Тогда
		НайденнаяСтрана = Справочники.КлассификаторСтранМира.НайтиПоРеквизиту("НаименованиеПолное",СтранаЮрАдрес);
		Если Найденнаястрана.Пустая() Тогда
			НайденнаяСтрана = Справочники.КлассификаторСтранМира.НайтиПоНаименованию(СтранаЮрАдрес);
		КонецЕсли;
		ФормаВыбора.НачальноеЗначениеВыбора = НайденнаяСтрана;
	КонецЕсли;
	ФормаВыбора.Открыть();

КонецПроцедуры

Процедура СтранаЮрАдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если СокрЛП(ВыбранноеЗначение.НаименованиеПолное)<>"" Тогда
		СтандартнаяОбработка = Ложь;
		ЭлементыФормы.СтранаЮрАдрес.Значение = СокрЛП(ВыбранноеЗначение.НаименованиеПолное); 
	ИначеЕсли СокрЛП(ВыбранноеЗначение.Наименование)<>"" Тогда
		СтандартнаяОбработка = Ложь;
		ЭлементыФормы.СтранаЮрАдрес.Значение = СокрЛП(ВыбранноеЗначение.Наименование); 
	КонецЕсли;
	
	Если Найти(Врег(СтранаЮрАдрес),"БЕЛАРУСЬ")>0 Тогда
		НаименованиеИННэкспорт = "УНП";
	ИначеЕсли Найти(Врег(СтранаЮрАдрес),"КАЗАХСТАН")>0 Тогда
	    НаименованиеИННэкспорт = "БИН";
	КонецЕсли;
	
КонецПроцедуры

Процедура СтранаФактАдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ФормаВыбора = Справочники.КлассификаторСтранМира.ПолучитьФормуВыбора(, Элемент,);
	Если СокрЛП(СтранаФактАдрес)<>"" Тогда
		НайденнаяСтрана = Справочники.КлассификаторСтранМира.НайтиПоРеквизиту("НаименованиеПолное",СтранаЮрАдрес);
		Если Найденнаястрана.Пустая() Тогда
			НайденнаяСтрана = Справочники.КлассификаторСтранМира.НайтиПоНаименованию(СтранаЮрАдрес);
		КонецЕсли;
		ФормаВыбора.НачальноеЗначениеВыбора = НайденнаяСтрана;
	КонецЕсли;
	ФормаВыбора.Открыть();

КонецПроцедуры

Процедура СтранаФактАдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если СокрЛП(ВыбранноеЗначение.НаименованиеПолное)<>"" Тогда
		СтандартнаяОбработка = Ложь;
		ЭлементыФормы.СтранаФактАдрес.Значение = СокрЛП(ВыбранноеЗначение.НаименованиеПолное); 
	ИначеЕсли СокрЛП(ВыбранноеЗначение.Наименование)<>"" Тогда
		СтандартнаяОбработка = Ложь;
		ЭлементыФормы.СтранаФактАдрес.Значение = СокрЛП(ВыбранноеЗначение.Наименование); 
	КонецЕсли;

КонецПроцедуры

Процедура КнопкаПолучитьНомерНажатие(Элемент)
	
	Если СокрЛП(НомерДоговора)<>"" Тогда
		Если Вопрос("Получить новый номер договора на экспорт?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	ДоговорыКонтрагентов.Номер КАК Номер
	 |ИЗ
	 |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	 |ГДЕ
	 |	ДоговорыКонтрагентов.ТипДоговора = &ТипДоговора
	 |	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
	 |";
	 
	 Числа = "0123456789";
	 ОлдНомер = 0;
	 Запрос.УстановитьПараметр("ТипДоговора", Справочники.ТипыДоговоров.ШинтрейдЯрославль);
	 Выборка = Запрос.Выполнить().Выбрать();
	 Пока Выборка.Следующий() Цикл
		 НовНомер = "";
		 ТекНом = СокрЛП(Выборка.Номер);
		 Если ТекНом = "" Тогда
			 продолжить;
		 КонецЕсли;
		 Пока СокрЛП(ТекНом)<>"" Цикл
			 Если Найти(Числа,Прав(ТекНом,1))>0 Тогда
				 НовНомер = Строка(Прав(ТекНом,1))+НовНомер;
				 ТекНом = Лев(ТекНом, СтрДлина(ТекНом)-1);
			 Иначе
				 прервать;
			 КонецЕсли;
		 КонецЦикла;
		 Если Число(НовНомер) > ОлдНомер Тогда
			 ОлдНомер = Число(НовНомер);
		 КонецЕсли;	 
	 КонецЦикла; //по договорам
	 //договоры на экспорт с 2015 года с префиксом ШТЯ
	 Если ОлдНомер = 0 Тогда 
		 НомерДоговора = "ШТЯ-1";
	 Иначе
		 НомерДоговора = "ШТЯ-"+СтрЗаменить(СокрЛП(ОлдНомер+1),Символы.НПП,"");
	 КонецЕсли;	 
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если СокрЛП(ФИОДиректора)="" или СокрЛП(ДолжностьДиректора)="" или СокрЛП(ДействующийНаОсновании)=""
		или СокрЛП(ФИОКонтактногоЛица)="" или СокрЛП(ДолжностьКонтактногоЛица)="" Тогда
		ЭлементыФормы.Панель1.Страницы.Страница2.Заголовок = "Контактные лица (необходимо заполнить!)";
	Иначе
		ЭлементыФормы.Панель1.Страницы.Страница2.Заголовок = "Контактные лица";
	КонецЕсли;
	
	Если Найти(Врег(СтранаЮрАдрес),"БЕЛАРУСЬ")>0 ИЛИ Найти(Врег(СтранаЮрАдрес),"АРМЕНИЯ")>0
		ИЛИ Найти(Врег(СтранаЮрАдрес),"КАЗАХСТАН")>0 Тогда
		ЭлементыФормы.ДваЯзыка.Видимость = Ложь;
		ЭлементыФормы.Панель1.Страницы.СтраницаДваЯзыка.Видимость = Ложь;
	Иначе
		ЭлементыФормы.ДваЯзыка.Видимость = Истина;
		Если ДваЯзыка Тогда
			ЭлементыФормы.Панель1.Страницы.СтраницаДваЯзыка.Видимость = Истина;
		Иначе
			ЭлементыФормы.Панель1.Страницы.СтраницаДваЯзыка.Видимость = Ложь;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура СтранаЮрАдресАнглПриИзменении(Элемент)
	Если СокрЛП(СтранаФактАдресАнгл)= "" Тогда
		СтранаФактАдресАнгл = СтранаЮрАдресАнгл;
	КонецЕсли;	
КонецПроцедуры

Процедура ВидТовараНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбФорма = Справочники.КатегорииОбъектов.ПолучитьФорму("ФормаВыбора", Элемент);
	ВыбФорма.РежимВыбора = Истина;
	
	ВыбФорма.Отбор.НазначениеКатегории.Значение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты;
	ВыбФорма.Отбор.НазначениеКатегории.Использование = Истина;
	ВыбФорма.ЭлементыФормы.СправочникСписок.НастройкаОтбора.НазначениеКатегории.Доступность = Ложь;
	
	ВыбФорма.Открыть();
	
КонецПроцедуры



