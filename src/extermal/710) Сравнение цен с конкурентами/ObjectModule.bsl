
 Функция ПолучитьТаблицуКонкурентов()
	
	Таб = Новый ТаблицаЗначений;    
 
    /// Как добавить колонки в таблицу значений в 1с 8.3, 8.2
 
    Таб.Колонки.Добавить("КодКонкурента");
    Таб.Колонки.Добавить("Артикул");
    Таб.Колонки.Добавить("Наименование");
	Таб.Колонки.Добавить("ЦенаКонкурента", Новый ОписаниеТипов("Число" , Новый КвалификаторыЧисла(15, 2)));
	Таб.Колонки.Добавить("Дата");
 
   ИмяФайлаРезультата = ПолучитьИмяВременногоФайла();
	
	HTTP = Новый HTTPСоединение("terminal.yst.ru");       
	
	HTTP.Получить( Новый HTTPЗапрос("/customforpartners/PricesOfSuppliersDataHandler.ashx"), ИмяФайлаРезультата);	
	
	
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	
	ТекстовыйФайл.Прочитать(  ИмяФайлаРезультата,"UTF-8")  ;
	
	Сообщить(ТекстовыйФайл.КоличествоСтрок());
	Для НомерСтроки = 1 По ТекстовыйФайл.КоличествоСтрок() Цикл
		Стр= ТекстовыйФайл.ПолучитьСтроку(НомерСтроки); 
		ФИО=РазложитьСтрокуВМассивПодстрок(Стр,";");
		строка=Таб.Добавить();
	строка.КодКонкурента=ФИО[0];
	строка.Артикул=ФИО[1];
	строка.Наименование=ФИО[2];
    строка.ЦенаКонкурента=ФИО[3];
	
    строка.Дата=ФИО[4];
	//	Сообщить(Стр);
	КонецЦикла;
	
	Возврат   Таб;
КонецФункции	
	


  Функция ПолучитьТаблицуЯШТ()
Запрос= Новый Запрос;	
Запрос.Текст="ВЫБРАТЬ
	//Номенклатура.Ссылка,
|	Номенклатура.Артикул,
|	Количество(Номенклатура.Артикул)
|	ПОМЕСТИТЬ Вт_АртикулыДубли
|ИЗ
|	Справочник.Номенклатура КАК Номенклатура
|ГДЕ
|	Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
|	И НЕ Номенклатура.ПометкаУдаления
|	И Номенклатура.ВидДефектаДляУценки = &ВидДефектаДляУценки
|	И Артикул<>"""" И НЕ Артикул ПОДОБНО (""%*%"")	
|	СГРУППИРОВАТЬ ПО Номенклатура.Артикул
|	ИМЕЮЩИЕ Количество(Номенклатура.Артикул)>1
|	;
|	
|	ВЫБРАТЬ Артикул, Ссылка,	
|	Ссылка.Производитель КАК Производитель 
|	ИЗ Справочник.Номенклатура КАК Номенклатура
|ГДЕ
|	Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
|	И НЕ Номенклатура.ПометкаУдаления
|	И Номенклатура.ВидДефектаДляУценки = &ВидДефектаДляУценки
|	И Артикул НЕ В (ВЫБРАТЬ Артикул ИЗ Вт_АртикулыДубли)
|	УПОРЯДОЧИТЬ ПО Артикул
|	
|	;
|	
|	  ВЫБРАТЬ ТоварыНаСкладахОстатки.Номенклатура Номенклатура,
| ТоварыНаСкладахОстатки.Номенклатура.Артикул Артикул, КоличествоОстаток,
| ЦеныНоменклатурыОстатки.Цена ЦенаB2b
|		ИЗ РегистрНакопления.ТоварыНаСкладах.Остатки(,НЕ Номенклатура.ПометкаУдаления И Номенклатура.ВидТовара=Значение(Перечисление.ВидыТоваров.Шины) 
|И НЕ Склад.ЗапретитьИспользование И НЕ Склад.Транзитный И  Номенклатура.ВидДефектаДляУценки = &ВидДефектаДляУценки
|	И  Номенклатура.Артикул НЕ В (ВЫБРАТЬ Артикул ИЗ Вт_АртикулыДубли)) ТоварыНаСкладахОстатки
| ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,Номенклатура.ВидТовара=Значение(Перечисление.ВидыТоваров.Шины) И ТипЦен=&ТипЦенБ2Б) ЦеныНоменклатурыОстатки
|  ПО ТоварыНаСкладахОстатки.Номенклатура=ЦеныНоменклатурыОстатки.Номенклатура
|  УПОРЯДОЧИТЬ ПО  ТоварыНаСкладахОстатки.Номенклатура.Наименование"    ;

Запрос.УстановитьПараметр("ВидДефектаДляУценки",Справочники.ВидыДефектовДляУценки.ПустаяСсылка());
Запрос.УстановитьПараметр("ТипЦенБ2Б",Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00032")); // Тип Цен базовая

ТабТовары= Запрос.Выполнить().Выгрузить();


СписокТоваров=Новый СписокЗначений;

МассивТовары = ТабТовары.ВыгрузитьКолонку("Номенклатура");
СписокТоваров.ЗагрузитьЗначения(МассивТовары);

Контр = Справочники.Контрагенты.НайтиПоКоду("П008452");  // Хатин Д.И.
ТаблицаЦены=ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв( Контр, СписокТоваров) ;

//  ТаблицаЦены.ВыбратьСтроку();
  
ТабАртикулы = Новый ТаблицаЗначений;    
 
    /// Как добавить колонки в таблицу значений в 1с 8.3, 8.2
 
    ТабАртикулы.Колонки.Добавить("Номенклатура");
    ТабАртикулы.Колонки.Добавить("Артикул");
  //  ТабАртикулы.Колонки.Добавить("Наименование");
	ТабАртикулы.Колонки.Добавить("КоличествоОстаток");
	ТабАртикулы.Колонки.Добавить("Цена");
	ТабАртикулы.Колонки.Добавить("Ценаb2b");

Для каждого строка ИЗ  ТабТовары Цикл
	
	Если ЗначениеЗаполнено(строка.Артикул) Тогда
	мас = РазложитьСтрокуВМассивПодстрок(строка.Артикул,"=");
	
	Для сч=0 по мас.Количество()-1 Цикл
	//	Сообщить(строка.Номенклатура.Наименование+" "+ Строка(мас[сч]));
		строкаТаблицы=ТабАртикулы.Добавить();
		строкаТаблицы.Артикул=мас[сч];
		строкаТаблицы.Номенклатура=строка.Номенклатура;
		строкаТаблицы.КоличествоОстаток=строка.КоличествоОстаток;
		строкаТаблицы.Ценаb2b=строка.Ценаb2b;

		
	НайдСтрокаЦены= ТаблицаЦены.Найти(строкаТаблицы.Номенклатура,"Номенклатура");
	
	Если НайдСтрокаЦены<>Неопределено Тогда
		строкаТаблицы.Цена=НайдСтрокаЦены.МинимальнаяЦена;
	Иначе
		строкаТаблицы.Цена=0;
	КонецЕсли;	
		
	КонецЦикла;	
	КонецЕсли;
КонецЦикла;

   Возврат  ТабАртикулы;
КонецФункции



Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка=ЛОЖЬ;
	
		
	 ТзЯшт=ПолучитьТаблицуЯШТ();

	 ТзКонкуренты=ПолучитьТаблицуКонкурентов();
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;  
	// - Если сделать так, как показано выше(рекомендуют на некоторых ресурсах), то при изменении настроек в режиме клиента
	// этих изменений Вы не увидите, потому что настройки всегда будут по умолчанию. Как правильно - вариант ниже
	Настройки = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(); 
 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; 
 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);	
	
	ВнешнийНаборДанных = Новый Структура("ТоварыЯшт", ТзЯшт); 
	ВнешнийНаборДанных.Вставить("ТоварыКонкурентов",ТзКонкуренты)  ;
	//ВнешнийНаборДанныхКонкуренты = Новый Структура("ТоварыКонкуренты", ТзКонкуренты);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки); 
	
	ДокументРезультат.Очистить();
	
 	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры
