перем СписокИсключаемыхКонтрагентов, СпрПДЗ;


Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ПериодРегистрации = ДобавитьМесяц(ПериодРегистрации, Направление);
	Элемент.Значение = ДатаКакМесяцПредставление(ПериодРегистрации);
	
	НачалоПериода = НачалоМесяца(ПериодРегистрации);
	КонецПериода = КонецМесяца(ПериодРегистрации);

КонецПроцедуры


Процедура ДействияФормыСформировать(Кнопка)
	ЗагрузитьПланы();
КонецПроцедуры

Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма);
КонецПроцедуры

Процедура ПриОткрытии()
	Если ПериодРегистрации = '00010101000000' Тогда
		ПериодРегистрации = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	// Заполним реквизит формы МесяцСтрока.
	МесяцСтрока = ДатаКакМесяцПредставление(ПериодРегистрации);
	
	НачалоПериода = НачалоМесяца(ПериодРегистрации);
	КонецПериода = КонецМесяца(ПериодРегистрации);
КонецПроцедуры

Процедура ЗагрузитьПланы()
	
	ЗапросРассчитываемыеНГ = Новый Запрос;
	ЗапросРассчитываемыеНГ.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	                             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	                             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели
	                             |ПОМЕСТИТЬ вт
	                             |ИЗ
	                             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	                             |ГДЕ
	                             |	(МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	                             |				И (МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	                             |					И МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	                             |					И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	                             |					И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы)
	                             |			ИЛИ (МесячныйПланДепортаментаПродаж.Вес > 0
	                             |				ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
	                             |				ИЛИ 77 <> 77 ))
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	                             |ИЗ
	                             |	вт КАК вт
	                             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования КАК ТоварныеГруппыДляПланирования
	                             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	                             |			ПО ТоварныеГруппыДляПланирования.Ссылка = ТоварныеГруппыДляПланированияСостав.Ссылка
	                             |		ПО (вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Ссылка
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель.Родитель)
	                             |			И (вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Ссылка
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель
	                             |				ИЛИ вт.ТоварнаяГруппа = ТоварныеГруппыДляПланирования.Родитель.Родитель.Родитель)
	                             |ГДЕ
	                             |	ТоварныеГруппыДляПланирования.ЭтоГруппа = ЛОЖЬ
	                             |	И вт.НоменклатурнаяГруппаПоказатели = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	                             |
	                             |ОБЪЕДИНИТЬ ВСЕ
	                             |
	                             |ВЫБРАТЬ
	                             |	вт.НоменклатурнаяГруппаПоказатели
	                             |ИЗ
	                             |	вт КАК вт
	                             |ГДЕ
	                             |	вт.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)";
	ЗапросРассчитываемыеНГ.УстановитьПараметр("МесяцПланирования", НачалоМесяца(НачалоПериода));
	Если не флТолькоСВесами тогда
		//Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
		ЗапросРассчитываемыеНГ.Текст = СтрЗаменить(ЗапросРассчитываемыеНГ.Текст,"77 <> 77","МесячныйПланДепортаментаПродаж.Отслеживать");
	КонецЕсли;

	СписокРассчитываемыхНГ = ЗапросРассчитываемыеНГ.Выполнить().Выгрузить().ВыгрузитьКолонку("НоменклатурнаяГруппа");

	
	//по отделу в целом
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И (МесячныйПланДепортаментаПродаж.Вес > 0
	             |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
	             |			ИЛИ 77 <> 77)
	             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
	 Запрос.УстановитьПараметр("МесяцПланирования", НачалоМесяца(НачалоПериода));
	 Если не флТолькоСВесами тогда
		 Запрос.Текст = СтрЗаменить(Запрос.Текст,"77 <> 77","МесячныйПланДепортаментаПродаж.Отслеживать");
	 КонецЕсли;

	 СписокПланирования = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НаправлениеПродаж");

	
	
	 //по направлениям
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	А.НаправлениеПродаж КАК НаправлениеПродаж,
	             |	А.ТоварнаяГруппа,
	             |	А.НоменклатурнаяГруппаПоказатели,
	             |	А.ТоварнаяГруппаСуммовоеПланирование,
	             |	А.ВесО КАК ВесО,
	             |	А.ТоварнаяГруппаНаименование,
	             |	А.ПоказательПлан,
	             |	А.ПоказательПланНО,
	             |	А.ПоказательИтоговыйПлан,
	             |	А.КоличествоПлан,
	             |	А.СуммаПлан,
	             |	А.КоличествоПланНО,
	             |	А.СуммаПланНО,
	             |	А.КоличествоИтоговыйПлан,
	             |	А.СуммаИтоговыйПлан,
	             |	А.ПоказательПланыМенеджеров,
	             |	А.Сортировка,
	             |	А.Показатель,
	             |	А.Сумма,
	             |	А.Количество
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
	             |		МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |		МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	             |		0 КАК Вес,
	             |		0 КАК Отслеживать,
	             |		0 КАК ВесКоличество,
	             |		МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК ТоварнаяГруппаСуммовоеПланирование,
	             |		0 КАК ВесО,
	             |		МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Наименование КАК ТоварнаяГруппаНаименование,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК ПоказательПлан,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК ПоказательПланНО,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК ПоказательИтоговыйПлан,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК КоличествоПлан,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК СуммаПлан,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК КоличествоПланНО,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК СуммаПланНО,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК КоличествоИтоговыйПлан,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК СуммаИтоговыйПлан,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |				ТОГДА 7
	             |			ИНАЧЕ 0
	             |		КОНЕЦ КАК ПоказательПланыМенеджеров,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	             |				ТОГДА 1000
	             |			ИНАЧЕ ВЫБОР
	             |					КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |						ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |					ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |				КОНЕЦ
	             |		КОНЕЦ КАК Сортировка,
	             |		0 КАК Показатель,
	             |		0 КАК Сумма,
	             |		0 КАК Количество
	             |	ИЗ
	             |		РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |	ГДЕ
	             |		МесячныйПланДепортаментаПродаж.НаправлениеПродаж = ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |		И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	             |		И МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |		И ( 77 <> 77
	             |				ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
	             |				ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	             |		МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
	             |		МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
	             |		МесячныйПланДепортаментаПродаж.Вес,
	             |		МесячныйПланДепортаментаПродаж.Отслеживать,
	             |		МесячныйПланДепортаментаПродаж.ВесКоличество,
	             |		МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |			ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |		КОНЕЦ,
	             |		МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Наименование,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |								И МесячныйПланДепортаментаПродаж.СуммаПлан = 0
	             |							ТОГДА 7
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПлан
	             |					КОНЕЦ
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |								И МесячныйПланДепортаментаПродаж.СуммаПланНО = 0
	             |							ТОГДА 7
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |					КОНЕЦ
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА ВЫБОР
	             |						КОГДА ВЫБОР
	             |								КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |										И МесячныйПланДепортаментаПродаж.СуммаПлан = 0
	             |									ТОГДА 7
	             |								ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |							КОНЕЦ <> 0
	             |							ТОГДА ВЫБОР
	             |									КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |											И МесячныйПланДепортаментаПродаж.СуммаПлан = 0
	             |										ТОГДА 7
	             |									ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |								КОНЕЦ
	             |						ИНАЧЕ ВЫБОР
	             |								КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |										И МесячныйПланДепортаментаПродаж.СуммаПланНО = 0
	             |									ТОГДА 7
	             |								ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |							КОНЕЦ
	             |					КОНЕЦ
	             |			ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	             |						КОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан <> 0
	             |							ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |						ИНАЧЕ МесячныйПланДепортаментаПродаж.КоличествоПланНО
	             |					КОНЕЦ КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ,
	             |		ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПлан КАК ЧИСЛО(15, 0)),
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |					И МесячныйПланДепортаментаПродаж.СуммаПлан = 0
	             |				ТОГДА 7
	             |			ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПлан
	             |		КОНЕЦ,
	             |		ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланНО КАК ЧИСЛО(15, 0)),
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.Код = ""000000030""
	             |					И МесячныйПланДепортаментаПродаж.СуммаПланНО = 0
	             |				ТОГДА 7
	             |			ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |		КОНЕЦ,
	             |		ВЫРАЗИТЬ(ВЫБОР
	             |				КОГДА МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП <> ДАТАВРЕМЯ(1, 1, 1)
	             |					ТОГДА МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан
	             |				ИНАЧЕ МесячныйПланДепортаментаПродаж.КоличествоПланНО
	             |			КОНЕЦ КАК ЧИСЛО(15, 0)),
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ДатаУтвержденияРДП <> ДАТАВРЕМЯ(1, 1, 1)
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан
	             |			ИНАЧЕ МесячныйПланДепортаментаПродаж.СуммаПланНО
	             |		КОНЕЦ,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланМенеджер
	             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланМенеджер КАК ЧИСЛО(15, 0))
	             |		КОНЕЦ,
	             |		ВЫБОР
	             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	             |				ТОГДА 1000
	             |			ИНАЧЕ ВЫБОР
	             |					КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |						ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |					ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |				КОНЕЦ
	             |		КОНЕЦ,
	             |		0,
	             |		0,
	             |		0
	             |	ИЗ
	             |		РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |	ГДЕ
	             |		МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |		И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ПустаяСсылка)
	             |		И (77 <> 77
	             |				ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
	             |				ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)
	             |		И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |		И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	             |		И 99 = 99) КАК А
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	А.НаправлениеПродаж,
	             |	А.Сортировка УБЫВ,
	             |	А.ТоварнаяГруппаНаименование,
	             |	А.НоменклатурнаяГруппаПоказатели
	             |ИТОГИ
	             |	СУММА(ВесО)
	             |ПО
	             |	НаправлениеПродаж
	             |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("МесяцПланирования", НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);
	Запрос.УстановитьПараметр("ПДЗ", Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030"));
	
	 Если не флТолькоСВесами тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"77 <> 77","МесячныйПланДепортаментаПродаж.Отслеживать");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
	Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
	КонецЕсли;
	
	
	РезультатПоНаправлениям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//ДеревоНаФормеНаправления = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//
	
	//тз = Результат.Выгрузить();
	//тз.ВыбратьСтроку();

	//Если ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.ПланированиеНО2 тогда
		//Планы менеджеров
		Запрос.Текст="ВЫБРАТЬ
		             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
		             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
		             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
		             |	СУММА(ВЫБОР
		             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
		             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланМенеджер
		             |			ИНАЧЕ ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.КоличествоПланМенеджер КАК ЧИСЛО(15, 0))
		             |		КОНЕЦ) КАК ПоказательПланыМенеджеров
		             |ИЗ
		             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		             |ГДЕ
		             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
		             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ПустаяСсылка)
		             |	И (77 <> 77
		             |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
		             |			ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)
		             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
		             |	И МесячныйПланДепортаментаПродаж.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		             |	И 99 = 99
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
		             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
		             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж
		             |
		             |УПОРЯДОЧИТЬ ПО
		             |	НаправлениеПродаж,
		             |	НоменклатурнаяГруппаПоказатели
		             |АВТОУПОРЯДОЧИВАНИЕ";
		Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
		КонецЕсли;
		Если не флТолькоСВесами тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"77 <> 77","МесячныйПланДепортаментаПродаж.Отслеживать");
		КонецЕсли;

		Менеджеров = Запрос.Выполнить().Выгрузить();
		//пдз должно быть среднее
		Запрос.Текст="ВЫБРАТЬ
		             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
		             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
		             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
		             |	СРЕДНЕЕ(ВЫБОР
		             |			КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
		             |				ТОГДА МесячныйПланДепортаментаПродаж.СуммаПланМенеджер
		             |			ИНАЧЕ МесячныйПланДепортаментаПродаж.КоличествоПланМенеджер
		             |		КОНЕЦ) КАК ПоказательПланыМенеджеров
		             |ИЗ
		             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
		             |ГДЕ
		             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
		             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ПустаяСсылка)
		             |	И (77 <> 77
		             |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
		             |			ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)
		             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
		             |	И МесячныйПланДепортаментаПродаж.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		             |	И 99 = 99
		             |	И МесячныйПланДепортаментаПродаж.ТоварнаяГруппа = &ПДЗ
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели,
		             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа,
		             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж
		             |
		             |УПОРЯДОЧИТЬ ПО
		             |	НаправлениеПродаж,
		             |	НоменклатурнаяГруппаПоказатели
		             |АВТОУПОРЯДОЧИВАНИЕ";
					 
					 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
						 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
					 КонецЕсли;
					 
					 Если не флТолькоСВесами тогда
						 Запрос.Текст = СтрЗаменить(Запрос.Текст,"77 <> 77","МесячныйПланДепортаментаПродаж.Отслеживать");
					 КонецЕсли;


        ПДЗ = Запрос.Выполнить().Выгрузить();
		
		отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
		Для каждого стр из ПДЗ цикл
			ЗаполнитьЗначенияСвойств(отбор, стр);
			НайденныеСтроки = Менеджеров.НайтиСтроки(отбор);
			Для каждого эл из НайденныеСтроки цикл
				эл.ПоказательПланыМенеджеров = стр.ПоказательПланыМенеджеров;
			КонецЦикла;
		КонецЦикла;
		//пдз
		
		Для каждого стр из Менеджеров Цикл
			отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
			отбор.НоменклатурнаяГруппаПоказатели = стр.НоменклатурнаяГруппаПоказатели;//Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
				отбор.ТоварнаяГруппа = стр.ТоварнаяГруппа;
			иначе
				//Продолжить;
				отбор.ТоварнаяГруппа = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВРублях;
			КонецЕсли;
			
			НайденныеСтроки = РезультатПоНаправлениям.Строки.НайтиСтроки(отбор,истина);
			Для каждого эл из НайденныеСтроки цикл
				эл.ПоказательПланыМенеджеров = стр.ПоказательПланыМенеджеров;
			КонецЦикла;
		КонецЦикла;
	//КонецЕсли;
		
	//факт периодов
	Запрос.Текст="ВЫБРАТЬ
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж КАК НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК Количество,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК Сумма,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка.Родитель КАК ТоварнаяГруппаПланированияРодитель,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка.Родитель.Родитель КАК ТоварнаяГруппаПланированияРодительРодитель,
	             |	СУММА(ВЫБОР
	             |			КОГДА ТоварныеГруппыДляПланированияСостав.Ссылка.СуммовоеПланирование
	             |				ТОГДА ПродажиОбороты.СтоимостьОборот
	             |			ИНАЧЕ ПродажиОбороты.КоличествоОборот
	             |		КОНЕЦ) КАК Показатель
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода,
	             |			&КонПериода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж,
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка.Родитель,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка.Родитель.Родитель";
	 Запрос.УстановитьПараметр("СписокРассчитываемыхНГ", СписокРассчитываемыхНГ);
	 Запрос.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
	 Если флРедактироватьДаты Тогда
		 Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
		 Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	 Иначе
		 Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(НачалоПериода));
		 Запрос.УстановитьПараметр("КонПериода", КонецМесяца(КонецПериода));
	 КонецЕсли;
	 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
		 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В(&НаправлениеПродаж)");
		 //Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
	 КонецЕсли;
				 
	ФактПериодов = Запрос.Выполнить().Выгрузить();
	
	//отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	ПроставитьФактВДерево(РезультатПоНаправлениям,ФактПериодов);
	// ручные показатели
	//Заполним рассчитываемые показатели
	//прошлый год
	Запрос.Текст="ВЫБРАТЬ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	             |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	             |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	             |	МесячныйПланДепортаментаПродаж.Вес КАК вес,
	             |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса,
	             |	МесячныйПланДепортаментаПродаж.Менеджер,
	             |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование,
	             |	0 КАК Сумма,
	             |	0 КАК Количество,
	             |	0 КАК Показатель,
	             |	ВЫБОР
	             |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	             |			ТОГДА МесячныйПланДепортаментаПродаж.Вес
	             |		ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	             |	КОНЕЦ КАК ВесО
	             |ИЗ
	             |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	             |ГДЕ
	             |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	             |	И МесячныйПланДепортаментаПродаж.Менеджер = ЗНАЧЕНИЕ(Справочник.Пользователи.Пустаяссылка)
	             |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.Пустаяссылка)
	             |	И НЕ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	             |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	             |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
	             |	И (ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса КАК СТРОКА(500))) <> """"
				 |	И (77 <> 77
		         |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
		         |			ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)
	             |	И 99 = 99";
				 
	 Запрос.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
	 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
		 //Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
		 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж  В(&НаправлениеПродаж)");
	 КонецЕсли;
	 
	 Если не флТолькоСВесами тогда
		 Запрос.Текст = СтрЗаменить(Запрос.Текст,"77 <> 77","МесячныйПланДепортаментаПродаж.Отслеживать");
	 КонецЕсли;
	 Факт = Запрос.Выполнить().Выгрузить();
	 Для каждого стр из Факт Цикл
		 Если флРедактироватьДаты Тогда
			 КонПер = КонецПериода;
		 Иначе
			 КонПер = КонецДня(КонецПериода);
		 КонецЕсли;
		 Если КонПер>КонецДня(ТекущаяДата()) тогда
			 КонПер = КонецДня(ТекущаяДата());
		 КонецЕсли;
		 Если стр.СуммовоеПланирование тогда
			 стр.Сумма = ПолучитьЗначениеПоказателя(стр,НачалоПериода,КонПер);
			 Стр.Показатель = стр.Сумма;
		 иначе//Если стр.ВесКоличество>0 тогда
			 стр.Количество = ПолучитьЗначениеПоказателя(стр,НачалоПериода,КонПер);
			 Стр.Показатель = стр.Количество;
		 КонецЕсли;
	 КонецЦикла;
	 
	 отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	 Для каждого стр из Факт Цикл
		 ЗаполнитьЗначенияСвойств(отбор,стр);
		 НайденныеСтроки = РезультатПоНаправлениям.Строки.НайтиСтроки(отбор,истина);
		 Для каждого эл из НайденныеСтроки цикл
			 эл.Количество = стр.Количество;
			 эл.Сумма = стр.Сумма;
			 эл.Показатель = стр.Показатель;
		 КонецЦикла;
	 КонецЦикла;
	 
	 //проставим общие показатели по отделу
	 РассчитатьОбщиеПоказателиПоОтделу(РезультатПоНаправлениям,СписокПланирования);
	
	///////
	///менеджеры
	ЗапросМ = новый Запрос;
	ЗапросМ.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.Производитель,
	              |	МесячныйПланДепортаментаПродаж.КоличествоИтоговыйПлан,
	              |	МесячныйПланДепортаментаПродаж.СуммаИтоговыйПлан,
	              |	МесячныйПланДепортаментаПродаж.КоличествоПлан,
	              |	МесячныйПланДепортаментаПродаж.СуммаПлан,
	              |	МесячныйПланДепортаментаПродаж.Утвержден,
	              |	МесячныйПланДепортаментаПродаж.Вес КАК вес,
	              |	МесячныйПланДепортаментаПродаж.Менеджер,
	              |	МесячныйПланДепортаментаПродаж.КоличествоПланНО,
	              |	МесячныйПланДепортаментаПродаж.СуммаПланНО,
	              |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	              |	МесячныйПланДепортаментаПродаж.Отслеживать,
	              |	ВЫБОР
	              |		КОГДА МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	              |			ТОГДА МесячныйПланДепортаментаПродаж.Вес
	              |		ИНАЧЕ МесячныйПланДепортаментаПродаж.ВесКоличество
	              |	КОНЕЦ КАК ВесО,
	              |	МесячныйПланДепортаментаПродаж.КоличествоПланМенеджер,
	              |	МесячныйПланДепортаментаПродаж.СуммаПланМенеджер,
	              |	МесячныйПланДепортаментаПродаж.ДатаУтвержденияМенеджером,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование
	              |ПОМЕСТИТЬ втПлан
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.Пустаяссылка)
	              |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.Пустаяссылка)
	              |	И 99 = 99
				  |	И (77 <> 77
		          |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
		          |			ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)

	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	втПлан.НаправлениеПродаж КАК НаправлениеПродаж,
	              |	втПлан.Менеджер КАК Менеджер,
	              |	втПлан.ТоварнаяГруппа КАК ТоварнаяГруппа,
	              |	втПлан.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПоказатели,
	              |	СУММА(ВЫРАЗИТЬ(втПлан.КоличествоИтоговыйПлан КАК ЧИСЛО(15, 0))) КАК КоличествоИтоговыйПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаИтоговыйПлан = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаИтоговыйПлан
	              |		КОНЕЦ) КАК СуммаИтоговыйПлан,
	              |	СУММА(ВЫРАЗИТЬ(втПлан.КоличествоПлан КАК ЧИСЛО(15, 0))) КАК КоличествоПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаПлан = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаПлан
	              |		КОНЕЦ) КАК СуммаПлан,
	              |	СУММА(втПлан.вес) КАК Вес,
	              |	втПлан.МесяцПланирования КАК МесяцПланирования,
	              |	СУММА(ВЫРАЗИТЬ(втПлан.КоличествоПланНО КАК ЧИСЛО(15, 0))) КАК КоличествоПланНО,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаПланНО = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаПланНО
	              |		КОНЕЦ) КАК СуммаПланНО,
	              |	СУММА(втПлан.ВесКоличество) КАК ВесКоличество,
	              |	МАКСИМУМ(втПлан.Отслеживать) КАК Отслеживать,
	              |	МАКСИМУМ(втПлан.Утвержден) КАК Утвержден,
	              |	СУММА(втПлан.ВесО) КАК ВесО,
	              |	СУММА(ВЫРАЗИТЬ(втПлан.КоличествоПланМенеджер КАК ЧИСЛО(15, 0))) КАК КоличествоПланМенеджер,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |					И втПлан.СуммаПланМенеджер = 0
	              |				ТОГДА 7
	              |			ИНАЧЕ втПлан.СуммаПланМенеджер
	              |		КОНЕЦ) КАК СуммаПланМенеджер,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаИтоговыйПлан = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаИтоговыйПлан
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫРАЗИТЬ(втПлан.КоличествоИтоговыйПлан КАК ЧИСЛО(15, 0))
	              |		КОНЕЦ) КАК ПоказательИтоговыйПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаПлан = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаПлан
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫРАЗИТЬ(втПлан.КоличествоПлан КАК ЧИСЛО(15, 0))
	              |		КОНЕЦ) КАК ПоказательПлан,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаПланНО = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаПланНО
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫРАЗИТЬ(втПлан.КоличествоПланНО КАК ЧИСЛО(15, 0))
	              |		КОНЕЦ) КАК ПоказательПланНО,
	              |	СУММА(ВЫБОР
	              |			КОГДА втПлан.ТоварнаяГруппа.СуммовоеПланирование
	              |				ТОГДА ВЫБОР
	              |						КОГДА втПлан.ТоварнаяГруппа.Код = ""000000030""
	              |								И втПлан.СуммаПланМенеджер = 0
	              |							ТОГДА 7
	              |						ИНАЧЕ втПлан.СуммаПланМенеджер
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫРАЗИТЬ(втПлан.КоличествоПланМенеджер КАК ЧИСЛО(15, 0))
	              |		КОНЕЦ) КАК ПоказательПланМенеджер,
	              |	втПлан.ТоварнаяГруппаСуммовоеПланирование,
	              |	ВЫБОР
	              |		КОГДА втПлан.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	              |			ТОГДА 1000
	              |		ИНАЧЕ втПлан.ВесО
	              |	КОНЕЦ КАК Сортировка,
	              |	0 КАК Количество,
	              |	0 КАК Сумма,
	              |	0 КАК Показатель
	              |ИЗ
	              |	втПлан КАК втПлан
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	втПлан.ТоварнаяГруппа,
	              |	втПлан.НоменклатурнаяГруппа,
	              |	втПлан.НаправлениеПродаж,
	              |	втПлан.Менеджер,
	              |	втПлан.МесяцПланирования,
	              |	втПлан.ТоварнаяГруппаСуммовоеПланирование,
	              |	ВЫБОР
	              |		КОГДА втПлан.ТоварнаяГруппа = ЗНАЧЕНИЕ(Справочник.ПоказателиЭффективности.ОбъемОтгрузкиВРублях)
	              |			ТОГДА 1000
	              |		ИНАЧЕ втПлан.ВесО
	              |	КОНЕЦ
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	НаправлениеПродаж,
	              |	втПлан.Менеджер.Наименование,
	              |	Сортировка УБЫВ,
	              |	втПлан.ТоварнаяГруппа.Наименование,
	              |	НоменклатурнаяГруппаПоказатели
	              |ИТОГИ
	              |	СУММА(ВесО)
	              |ПО
	              |	НаправлениеПродаж,
	              |	Менеджер
	              |АВТОУПОРЯДОЧИВАНИЕ";
				  
	  ЗапросМ.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
	  Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
		  //Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
		  ЗапросМ.Текст = СтрЗаменить(ЗапросМ.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
	  КонецЕсли;
	  Если не флТолькоСВесами тогда
		  ЗапросМ.Текст = СтрЗаменить(ЗапросМ.Текст,"77 <> 77","МесячныйПланДепортаментаПродаж.Отслеживать");
	  КонецЕсли;
	  
	  ЗапросМ.УстановитьПараметр("МесяцПланирования", НачалоМесяца(НачалоПериода));
	  ЗапросМ.УстановитьПараметр("НачПериодаПрошлогоМесяца", ДобавитьМесяц(НачалоПериода,-1));
	  ЗапросМ.УстановитьПараметр("КонПериодаПрошлогоМесяца", ДобавитьМесяц(КонецМесяца(НачалоПериода),-1));
	  ЗапросМ.УстановитьПараметр("НачПрошлогоПериода", ДобавитьМесяц(НачалоПериода,-12));
	  ЗапросМ.УстановитьПараметр("КонПрошлогоПериода", ДобавитьМесяц(КонецМесяца(НачалоПериода),-12));
	  ЗапросМ.УстановитьПараметр("СписокИсключаемыхКонтрагентов", СписокИсключаемыхКонтрагентов);
	  ЗапросМ.УстановитьПараметр("Выключенные",Справочники.Пользователи.НайтиПоНаименованию("Выключенные"));
	  
	  
	  Результат2 = ЗапросМ.Выполнить();
	  
	  
	  ПланыПоВсемМенеджерам = Результат2.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//факт прошлых периодов
	Запрос.Текст="ВЫБРАТЬ
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
	             |	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппаПланирования,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер
	             |ПОМЕСТИТЬ втПродажиПрошлыйГод
	             |ИЗ
	             |	РегистрНакопления.Продажи.Обороты(
	             |			&НачПериода,
	             |			&КонПериода,
	             |			Месяц,
	             |			Номенклатура.Услуга = ЛОЖЬ
	             |				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.ПустаяСсылка)
	             |				И Номенклатура.НоменклатурнаяГруппа В (&СписокРассчитываемыхНГ)
	             |				И 99 = 99) КАК ПродажиОбороты
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	             |		ПО ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа = ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
	             |	ТоварныеГруппыДляПланированияСостав.Ссылка,
	             |	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	А.НоменклатураНоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	             |	А.ТоварнаяГруппаПланирования,
	             |	А.ТоварнаяГруппаПланирования.Родитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель,
	             |	А.Менеджер,
	             |	СУММА(А.КоличествоОборот) КАК Количество,
	             |	СУММА(А.СтоимостьОборот) КАК Сумма,
	             |	СУММА(ВЫБОР
	             |			КОГДА А.ТоварнаяГруппаПланирования.СуммовоеПланирование
	             |				ТОГДА А.СтоимостьОборот
	             |			ИНАЧЕ А.КоличествоОборот
	             |		КОНЕЦ) КАК Показатель
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		втПродажиПрошлыйГод.НоменклатураНоменклатурнаяГруппа КАК НоменклатураНоменклатурнаяГруппа,
	             |		втПродажиПрошлыйГод.КоличествоОборот КАК КоличествоОборот,
	             |		втПродажиПрошлыйГод.СтоимостьОборот КАК СтоимостьОборот,
	             |		втПродажиПрошлыйГод.ТоварнаяГруппаПланирования КАК ТоварнаяГруппаПланирования,
	             |		втПродажиПрошлыйГод.Менеджер КАК Менеджер
	             |	ИЗ
	             |		втПродажиПрошлыйГод КАК втПродажиПрошлыйГод) КАК А
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	А.НоменклатураНоменклатурнаяГруппа,
	             |	А.ТоварнаяГруппаПланирования,
	             |	А.ТоварнаяГруппаПланирования.Родитель,
	             |	А.ТоварнаяГруппаПланирования.Родитель.Родитель,
	             |	А.Менеджер";
				 
				 Запрос.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
				 Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
					 Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В(&НаправлениеПродаж)");
					//Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж = &НаправлениеПродаж");
				КонецЕсли;
				
	ФактПрошлыхПериодов = Запрос.Выполнить().Выгрузить();
	
	//отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	ПроставитьФактВДеревоМенеджеров(ПланыПоВсемМенеджерам,ФактПрошлыхПериодов);
	
	
	//ручные по менеджерам
	ЗапросМ.Текст="ВЫБРАТЬ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования КАК МесяцПланирования,
	              |	МесячныйПланДепортаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
	              |	МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели КАК НоменклатурнаяГруппаПоказатели,
	              |	МесячныйПланДепортаментаПродаж.Менеджер КАК Менеджер,
	              |	0 КАК Количество,
	              |	0 КАК Сумма,
	              |	МесячныйПланДепортаментаПродаж.Вес,
	              |	МесячныйПланДепортаментаПродаж.ВесКоличество,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса,
	              |	МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.СуммовоеПланирование КАК СуммовоеПланирование,
	              |	0 КАК Показатель
	              |ИЗ
	              |	РегистрСведений.МесячныйПланДепортаментаПродаж КАК МесячныйПланДепортаментаПродаж
	              |ГДЕ
	              |	МесячныйПланДепортаментаПродаж.МесяцПланирования = &МесяцПланирования
	              |	И МесячныйПланДепортаментаПродаж.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.Пустаяссылка)
	              |	И МесячныйПланДепортаментаПродаж.НаправлениеПродаж <> ЗНАЧЕНИЕ(Справочник.НаправленияПродаж.Пустаяссылка)
	              |	И НЕ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа ССЫЛКА Справочник.ТоварныеГруппыДляПланирования
	              |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели ССЫЛКА Справочник.НоменклатурныеГруппы
	              |				И МесячныйПланДепортаментаПродаж.НоменклатурнаяГруппаПоказатели <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
	              |	И (ВЫРАЗИТЬ(МесячныйПланДепортаментаПродаж.ТоварнаяГруппа.ТекстЗапроса КАК СТРОКА(500))) <> """"
				  |	И (77 <> 77
		          |			ИЛИ МесячныйПланДепортаментаПродаж.ВесКоличество > 0
		          |			ИЛИ МесячныйПланДепортаментаПродаж.Вес > 0)
	              |	И 99 = 99";
	  ЗапросМ.УстановитьПараметр("НаправлениеПродаж", НаправлениеПродаж);
	  Если ЗначениеЗаполнено(НаправлениеПродаж) тогда
		  //ЗапросМ.Текст = СтрЗаменить(Запрос.ЗапросМ,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж");
		  ЗапросМ.Текст = СтрЗаменить(ЗапросМ.Текст,"99 = 99","МесячныйПланДепортаментаПродаж.НаправлениеПродаж В(&НаправлениеПродаж)");
	  КонецЕсли;
	  
	  Если не флТолькоСВесами тогда
		  ЗапросМ.Текст = СтрЗаменить(ЗапросМ.Текст,"77 <> 77","МесячныйПланДепортаментаПродаж.Отслеживать");
	  КонецЕсли;

	  Рез = ЗапросМ.Выполнить().Выгрузить();
	  Для каждого стр из Рез Цикл
		  //Если стр.Вес>0 тогда
		  Если флРедактироватьДаты Тогда
			  КонПер = КонецПериода;
		  Иначе
			  КонПер = КонецДня(КонецПериода);
		  КонецЕсли;
		  Если КонПер>КонецДня(ТекущаяДата()) тогда
			  КонПер = КонецДня(ТекущаяДата());
		  КонецЕсли;	
		  Если стр.СуммовоеПланирование тогда
			  стр.Сумма = ПолучитьЗначениеПоказателя(стр,НачалоПериода,КонПер);
			  стр.Показатель = стр.Сумма;
		  иначе//Если стр.ВесКоличество>0 тогда
			  стр.Количество = ПолучитьЗначениеПоказателя(стр,НачалоПериода,КонПер);
			  стр.Показатель = стр.Количество;
		  КонецЕсли;
	  КонецЦикла;
	
	////прошлый месяц
	//Для каждого стр из Рез Цикл
	//	Если стр.СуммовоеПланирование тогда
	//		стр.СуммаПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
	//		стр.ПоказательПрошлыйМесяц = стр.СуммаПрошлыйМесяц;
	//	иначе//Если стр.ВесКоличество>0 тогда
	//		стр.КоличествоПрошлыйМесяц = ПолучитьЗначениеПоказателя(стр,ДобавитьМесяц((НачалоПериода),-1),КонецДня(ДобавитьМесяц((КонецПериода),-1)));
	//		стр.ПоказательПрошлыйМесяц = стр.КоличествоПрошлыйМесяц;
	//	КонецЕсли;
	//КонецЦикла;
	//Рез.ВыбратьСтроку();
	Для каждого стр из  Рез цикл
		нашли = ложь;
		ОбновитьПараметрыВДеревеМенеджеров(ПланыПоВсемМенеджерам, стр,ложь);
	КонецЦикла;
	//к=1;
	
	
	//нерассчитываемые по менеджерам
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ПланыПродажПоПоказателямЭффективностиОбороты.ОбъектПланирования КАК Менеджер,
	             |	ПланыПродажПоПоказателямЭффективностиОбороты.ПоказательЭффективности КАК ТоварнаяГруппаПланирования,
	             |	СУММА(ПланыПродажПоПоказателямЭффективностиОбороты.ЗначениеПланОборот) КАК Показатель,
	             |	ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка) КАК НоменклатурнаяГруппа,
	             |	ЗНАЧЕНИЕ(Справочник.ТоварныеГруппыДляПланирования.ПустаяСсылка) КАК ТоварнаяГруппаПланированияРодитель,
	             |	ЗНАЧЕНИЕ(Справочник.ТоварныеГруппыДляПланирования.ПустаяСсылка) КАК ТоварнаяГруппаПланированияРодительРодитель,
	             |	СУММА(ПланыПродажПоПоказателямЭффективностиОбороты.ЗначениеПланОборот) КАК Количество,
	             |	СУММА(ПланыПродажПоПоказателямЭффективностиОбороты.ЗначениеПланОборот) КАК Сумма
	             |ИЗ
	             |	РегистрНакопления.ПланыПродажПоПоказателямЭффективности.Обороты(&НачПериода, &КонПериода, Месяц, ) КАК ПланыПродажПоПоказателямЭффективностиОбороты
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПланыПродажПоПоказателямЭффективностиОбороты.ПоказательЭффективности,
	             |	ПланыПродажПоПоказателямЭффективностиОбороты.ОбъектПланирования";
	//Если флРедактироватьДаты Тогда
	//	Запрос.УстановитьПараметр("НачПериода",НачалоПериода);			 
	//	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонецМесяца(НачалоПериода)));
	//Иначе
		Запрос.УстановитьПараметр("НачПериода",НачалоМесяца(НачалоПериода));			 
		Запрос.УстановитьПараметр("КонПериода",КонецДня(КонецМесяца(НачалоПериода)));
	//КонецЕсли;
			 	
	Нерассчитываемые = Запрос.Выполнить().Выгрузить();
	
	ПроставитьФактВДеревоМенеджеров(ПланыПоВсемМенеджерам,Нерассчитываемые);
	
	//Добавим строку итого
	
	ТабДок = новый ТабличныйДокумент;
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента1;
	ТабДок.Очистить();
	Макет = ПолучитьМакет("Отчет");
	
	Область  = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(Область);
	
	Область  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(Область);
	
	ОбластьНаправление  = Макет.ПолучитьОбласть("ОбъектПланирования");
	ОбластьОбъект  = Макет.ПолучитьОбласть("ПоказательЭффективности");
	ОбластьМенеджер  = Макет.ПолучитьОбласть("ОбъектПланированияМенеджер");

		
	КонПер = КонецДня(КонецПериода);
	Если КонПер>КонецДня(ТекущаяДата()) тогда
		КонПер = КонецДня(ТекущаяДата());
	КонецЕсли;
	
	РабочихДнейВМесяце = ПолучитьЧислоРабочихДнейВМесяце(НачалоМесяца(НачалоПериода), КонецМесяца(НачалоПериода));
	РабочихДнейПрошло = ПолучитьЧислоРабочихДнейВМесяце(НачалоМесяца(НачалоПериода),КонПер);
	
	Коэфф = РабочихДнейПрошло/РабочихДнейВМесяце;
	
	Этаформа.Заголовок = "Месячный план ДП"+" (Рабочих дней в месяце: "+РабочихДнейВМесяце+", рабочих дней прошло: "+ РабочихДнейПрошло+", коэфф: "+Формат(коэфф,"ЧДЦ=2")+")";
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	
	Для каждого стр из РезультатПоНаправлениям.строки цикл
		ОбластьНаправление.Параметры.ОбъектПланирования = ?(ЗначениеЗаполнено(стр.НаправлениеПродаж),стр.НаправлениеПродаж,"0. Департамент продаж");
		ТабДок.Вывести(ОбластьНаправление,1);
		КоэффициентЭффективностиОбъекта = 0;
		Для каждого стр2 из стр.строки цикл
			ОбластьОбъект.Параметры.ПоказательЭффективности = "" + стр2.ТоварнаяГруппа + "; " + стр2.НоменклатурнаяГруппаПоказатели;
			ОбластьОбъект.Параметры.Вес = стр2.ВесО;
			ОбластьОбъект.Параметры.ЗначениеПлан = стр2.ПоказательИтоговыйПлан;
			ОбластьОбъект.Параметры.ЗначениеФакт = стр2.Показатель;
			
			
			ПроцентВыполнения = ?(стр2.ПоказательИтоговыйПлан=0,0,стр2.Показатель*100/стр2.ПоказательИтоговыйПлан);
			ОбластьОбъект.Параметры.ПроцентВыполнения = Формат(ПроцентВыполнения, "ЧДЦ=0");
			
			ОстатокДо100 = стр2.ПоказательИтоговыйПлан-стр2.Показатель;
			ОбластьОбъект.Параметры.ОстатокДо100 = ?(ОстатокДо100>0,ОстатокДо100,0);
			
			Если стр2.ТоварнаяГруппа  =  Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030") Тогда  //пдз <=7 - 100%, 7<пдз<=10 - от 99.99 до 50% пропорц, 10<пдз<=13 от 50% до 25% проп, >13 - 0
				Если стр2.Показатель<=7 тогда
					ПроцентВыполнения = 100;
					//КоэффициентЭффективности = стр2.ВесО * 100;
				иначеЕсли стр2.Показатель<=10 тогда
					//КоэффициентЭффективности = стр2.ВесО * (650 - 50*стр2.Показатель)/3;
					ПроцентВыполнения = (650 - 50*стр2.Показатель)/3;
				иначеЕсли 	стр2.Показатель<=13 тогда
					//КоэффициентЭффективности = стр2.ВесО * (400 - 25*стр2.Показатель)/3;
					ПроцентВыполнения = (400 - 25*стр2.Показатель)/3;
				иначе
					//КоэффициентЭффективности = стр2.ВесО * 0;
					ПроцентВыполнения = 0;
				КонецЕсли;
				
				КоэффициентЭффективности = стр2.ВесО * ПроцентВыполнения;
				
				ОбластьОбъект.Параметры.ПроцентВыполнения = Формат(ПроцентВыполнения, "ЧДЦ=0");
				ОбластьОбъект.Параметры.ОстатокДо100 = 0;
				
				//ОбластьОбъект.Параметры.ОпережениеОтставание = стр2.ПоказательИтоговыйПлан - стр2.Показатель;
				ОбластьОбъект.Параметры.ОпережениеОтставание = 0;
				ОбластьОбъект.Параметры.ОпережениеОтставаниеПроц = 0;
			Иначе
				ОбластьОбъект.Параметры.ОпережениеОтставание = -стр2.ПоказательИтоговыйПлан*коэфф + стр2.Показатель;
				
				Если -стр2.ПоказательИтоговыйПлан*коэфф + стр2.Показатель>=0 тогда
					Знак = 1;
				Иначе
					Знак = -1;
				КонецЕсли;
				
				Если стр2.ПоказательИтоговыйПлан*коэфф<>0 тогда
					//ОбластьОбъект.Параметры.ОпережениеОтставаниеПроц = знак * стр2.Показатель*100 / стр2.ПоказательИтоговыйПлан*коэфф;
					проц = (100 -(стр2.Показатель*100 / (стр2.ПоказательИтоговыйПлан*коэфф)));
					проц = ?(проц>0, проц,-проц);
					ОбластьОбъект.Параметры.ОпережениеОтставаниеПроц = знак * Проц;
				Иначе
					ОбластьОбъект.Параметры.ОпережениеОтставаниеПроц = 0;	
				КонецЕсли;

				КоэффициентЭффективности = стр2.ВесО * ?(ПроцентВыполнения>100,100,ПроцентВыполнения);
			КонецЕсли;
			
			КоэффициентЭффективности = КоэффициентЭффективности / 100;
			
			ОбластьОбъект.Параметры.КоэффициентЭффективности = Формат(КоэффициентЭффективности, "ЧДЦ=2");
			
			КоэффициентЭффективностиОбъекта = КоэффициентЭффективностиОбъекта + КоэффициентЭффективности;
			
			ТабДок.Вывести(ОбластьОбъект,2);
		КонецЦикла;
		ТабДок.Область("КПО").Текст = ?(Окр(КоэффициентЭффективностиОбъекта, 2) > 1, 1, Окр(КоэффициентЭффективностиОбъекта, 2));
		//Менеджеры
		отбор = новый Структура("НаправлениеПродаж");
		отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
		НайденныеСтроки =  ПланыПоВсемМенеджерам.Строки.НайтиСтроки(отбор,истина);
		
		ТабМенеджеры = новый ТаблицаЗначений;
		ТабМенеджеры.Колонки.Добавить("Менеджер");
		Для каждого найденнаяСтрока из НайденныеСтроки цикл
			Если ЗначениеЗаполнено(найденнаяСтрока.Менеджер) и ЗначениеЗаполнено(найденнаяСтрока.ТоварнаяГруппа) тогда
				нстр = ТабМенеджеры.Добавить();
				нстр.Менеджер = найденнаяСтрока.Менеджер;
			КонецЕсли;
		КонецЦикла;
		ТабМенеджеры.Свернуть("Менеджер");
		
		КоэффициентЭффективностиМенеджера = 0;
		Для каждого стр из ТабМенеджеры цикл
			ОбластьМенеджер.Параметры.ОбъектПланирования = стр.Менеджер;
			КоэффициентЭффективностиМенеджера = 0;
			ТабДок.Вывести(ОбластьМенеджер,2);
						
			Для каждого найденнаяСтрока из НайденныеСтроки цикл
				Если ЗначениеЗаполнено(найденнаяСтрока.Менеджер) и ЗначениеЗаполнено(найденнаяСтрока.ТоварнаяГруппа) и найденнаяСтрока.Менеджер = стр.Менеджер тогда
					//Если ПредМенеджер<>найденнаяСтрока.Менеджер тогда
					//	ОбластьМенеджер.Область("КПМ").Текст = ?(Окр(КоэффициентЭффективностиМенеджера, 2) > 1, 1, Окр(КоэффициентЭффективностиМенеджера, 2));
					//	
					//	ПредМенеджер = найденнаяСтрока.Менеджер;
					//	ОбластьМенеджер.Параметры.ОбъектПланирования = найденнаяСтрока.Менеджер;
					//	КоэффициентЭффективностиМенеджера = 0;
					//	ТабДок.Вывести(ОбластьМенеджер,2);
					//КонецЕсли;
					
					ОбластьОбъект.Параметры.ПоказательЭффективности = "" + найденнаяСтрока.ТоварнаяГруппа + "; " + найденнаяСтрока.НоменклатурнаяГруппаПоказатели;
					ОбластьОбъект.Параметры.Вес = найденнаяСтрока.ВесО;
					//ОбластьОбъект.Параметры.ЗначениеПлан = найденнаяСтрока.ПоказательПланНО;
					ОбластьОбъект.Параметры.ЗначениеПлан = найденнаяСтрока.ПоказательПланМенеджер;
					ОбластьОбъект.Параметры.ЗначениеФакт = найденнаяСтрока.Показатель;
					
					//ОбластьОбъект.Параметры.ОпережениеОтставание = стр2.ПоказательИтоговыйПлан*коэфф - стр2.Показатель;
					
					//ПроцентВыполнения = ?(найденнаяСтрока.ПоказательПланНО=0,0,найденнаяСтрока.Показатель*100/найденнаяСтрока.ПоказательПланНО);
					ПроцентВыполнения = ?(найденнаяСтрока.ПоказательПланМенеджер=0,0,найденнаяСтрока.Показатель*100/найденнаяСтрока.ПоказательПланМенеджер);
					ОбластьОбъект.Параметры.ПроцентВыполнения = Формат(ПроцентВыполнения, "ЧДЦ=0");
					
					//ОстатокДо100 = найденнаяСтрока.ПоказательПланНО-найденнаяСтрока.Показатель;
					ОстатокДо100 = найденнаяСтрока.ПоказательПланМенеджер-найденнаяСтрока.Показатель;
					ОбластьОбъект.Параметры.ОстатокДо100 = ?(ОстатокДо100>0,ОстатокДо100,0);
					
					//Если стр2.ТоварнаяГруппа  =  Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030") Тогда
					//	КоэффициентЭффективности = найденнаяСтрока.ВесО * ?(ОстатокДо100 > 13, 0, ?(ОстатокДо100 >= 10, 25,?(ОстатокДо100 >= 7, 50, 100)));
					//	
					//Иначе
					//	КоэффициентЭффективности = найденнаяСтрока.ВесО * ?(ПроцентВыполнения>100,100,ПроцентВыполнения);
					//КонецЕсли;
					Если найденнаяСтрока.ТоварнаяГруппа  =  Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030") Тогда  //пдз <=7 - 100%, 7<пдз<=10 - от 99.99 до 50% пропорц, 10<пдз<=13 от 50% до 25% проп, >13 - 0
						Если найденнаяСтрока.Показатель<=7 тогда
							ПроцентВыполнения = 100;
							//КоэффициентЭффективности = стр2.ВесО * 100;
						иначеЕсли найденнаяСтрока.Показатель<=10 тогда
							//КоэффициентЭффективности = стр2.ВесО * (650 - 50*стр2.Показатель)/3;
							ПроцентВыполнения = (650 - 50*найденнаяСтрока.Показатель)/3;
						иначеЕсли 	найденнаяСтрока.Показатель<=13 тогда
							//КоэффициентЭффективности = стр2.ВесО * (400 - 25*стр2.Показатель)/3;
							ПроцентВыполнения = (400 - 25*найденнаяСтрока.Показатель)/3;
						иначе
							//КоэффициентЭффективности = стр2.ВесО * 0;
							ПроцентВыполнения = 0;
						КонецЕсли;
						
						КоэффициентЭффективности = найденнаяСтрока.ВесО * ПроцентВыполнения;
						
						ОбластьОбъект.Параметры.ПроцентВыполнения = Формат(ПроцентВыполнения, "ЧДЦ=0");
						ОбластьОбъект.Параметры.ОстатокДо100 = 0;
						
						//ОбластьОбъект.Параметры.ОпережениеОтставание = найденнаяСтрока.ПоказательПланНО - найденнаяСтрока.Показатель;
						ОбластьОбъект.Параметры.ОпережениеОтставание = 0;
						ОбластьОбъект.Параметры.ОпережениеОтставаниеПроц = 0;
					Иначе
						//ОбластьОбъект.Параметры.ОпережениеОтставание = -найденнаяСтрока.ПоказательПланНО*коэфф + найденнаяСтрока.Показатель;
						ОбластьОбъект.Параметры.ОпережениеОтставание = -найденнаяСтрока.ПоказательПланМенеджер*коэфф + найденнаяСтрока.Показатель;
						
						Если -найденнаяСтрока.ПоказательПланМенеджер*коэфф + найденнаяСтрока.Показатель>=0 тогда
							Знак = 1;
						Иначе
							Знак = -1;
						КонецЕсли;
						
						Если найденнаяСтрока.ПоказательПланМенеджер*коэфф<>0 тогда
							//ОбластьОбъект.Параметры.ОпережениеОтставаниеПроц = знак * найденнаяСтрока.Показатель*100 / найденнаяСтрока.ПоказательПланМенеджер*коэфф;
							//ОбластьОбъект.Параметры.ОпережениеОтставаниеПроц = знак *  (100-(найденнаяСтрока.Показатель*100 / (найденнаяСтрока.ПоказательПланМенеджер*коэфф)));
							проц = (100 -(найденнаяСтрока.Показатель*100 / (найденнаяСтрока.ПоказательПланМенеджер*коэфф)));

							проц = ?(проц>0, проц,-проц);
							ОбластьОбъект.Параметры.ОпережениеОтставаниеПроц = знак * Проц;
						Иначе
							ОбластьОбъект.Параметры.ОпережениеОтставаниеПроц = 0;	
						КонецЕсли;
						КоэффициентЭффективности = найденнаяСтрока.ВесО * ?(ПроцентВыполнения>100,100,ПроцентВыполнения);
					КонецЕсли;
					
					КоэффициентЭффективности = КоэффициентЭффективности / 100;
					КоэффициентЭффективностиМенеджера = КоэффициентЭффективностиМенеджера + КоэффициентЭффективности;
					ОбластьОбъект.Параметры.КоэффициентЭффективности = Формат(КоэффициентЭффективности, "ЧДЦ=2");
					
					ТабДок.Вывести(ОбластьОбъект,3);	 
					
				КонецЕсли;
				
			КонецЦикла;
			ТабДок.Область("КПМ").Текст = ?(Окр(КоэффициентЭффективностиМенеджера, 2) > 1, 1, Окр(КоэффициентЭффективностиМенеджера, 2));
		КонецЦикла;
		
	КонецЦикла;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	//ТабДок.Показать();
КонецПроцедуры

Функция ПолучитьЧислоРабочихДнейВМесяце(Нач,Кон)
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(*) КАК РабочихДней
	               |ИЗ
	               |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	               |ГДЕ
	               |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаН И &ДатаК
	               |	И (РегламентированныйПроизводственныйКалендарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	               |			ИЛИ РегламентированныйПроизводственныйКалендарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный))";
				   Запрос.УстановитьПараметр("ДатаН",Нач);
				   Запрос.УстановитьПараметр("ДатаК",Кон);
				   Рез = Запрос.Выполнить().Выбрать();
				   Пока Рез.Следующий() Цикл
					   Возврат Рез.РабочихДней;
				   конецЦикла;
				   
				   Сообщить("Не установлен регламентированный производственный календарь, число рабочих дней = 20");
				   Возврат 20;
КонецФункции


Процедура ОбновитьПараметрыВДеревеМенеджеров(Дерево, стр, ТолькоВес)
	Отбор = Новый Структура("Менеджер,НаправлениеПродаж, ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	ЗаполнитьЗначенияСвойств(Отбор,стр);
	НайденныеСтроки = Дерево.Строки.НайтиСтроки(Отбор,истина);
	
	Для каждого НайденнаяСтрока из НайденныеСтроки цикл
		Если толькоВес тогда
			НайденнаяСтрока.Вес = Стр.Вес;
			НайденнаяСтрока.ВесКоличество = Стр.ВесКоличество;
		иначе
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока,стр);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроставитьФактВДерево(Дерево, Факт)
	Если Факт.Количество()>0 тогда
		Для каждого стр из Дерево.Строки цикл
			Если ЗначениеЗаполнено(стр.НаправлениеПродаж) и ЗначениеЗаполнено(стр.ТоварнаяГруппа) тогда
				Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) и типЗнч(стр.НоменклатурнаяГруппаПоказатели)=Тип("СправочникСсылка.НоменклатурныеГруппы")  тогда
					отбор = новый Структура("НаправлениеПродаж,НоменклатурнаяГруппа");
					отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
					отбор.НоменклатурнаяГруппа = стр.НоменклатурнаяГруппаПоказатели;
					НайденныеСтроки = Факт.НайтиСтроки(отбор);
					Если НайденныеСтроки.Количество()>0 тогда
						стр.Количество = НайденныеСтроки[0].Количество;
						стр.Сумма = НайденныеСтроки[0].Сумма;
						
						стр.Показатель = НайденныеСтроки[0].Показатель;
					КонецЕсли;
				Иначе//
					отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппаПланирования");
					отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
					отбор.ТоварнаяГруппаПланирования = стр.ТоварнаяГруппа;
					НайденныеСтроки = Факт.НайтиСтроки(отбор);
					Если НайденныеСтроки.Количество()>0 тогда
						Количество = 0;
						Сумма = 0;
						Показатель = 0;
						
						Для каждого эл из НайденныеСтроки цикл
							Количество = Количество + эл.Количество;
							Сумма = Сумма + эл.Сумма;
					
							Показатель = Показатель + эл.Показатель;
						КонецЦикла;
						
						стр.Количество = Количество;
						стр.Сумма = Сумма;
						
						стр.Показатель = Показатель;
					иначе//Надо поискать в родителях
						отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппаПланированияРодитель");
						отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
						отбор.ТоварнаяГруппаПланированияРодитель = стр.ТоварнаяГруппа;
						НайденныеСтроки = Факт.НайтиСтроки(отбор);
						Если НайденныеСтроки.Количество()>0 тогда
							Количество = 0;
							Сумма = 0;
						
							Показатель = 0;
							
							Для каждого эл из НайденныеСтроки цикл
								Количество = Количество + эл.Количество;
								Сумма = Сумма + эл.Сумма;
								Показатель = Показатель + эл.Показатель;
							КонецЦикла;
							
							стр.Количество = Количество;
							стр.Сумма = Сумма;
							
							стр.Показатель = Показатель;
							
						иначе//Надо поискать в родителяхРодителей
							отбор = новый Структура("НаправлениеПродаж,ТоварнаяГруппаПланированияРодительРодитель");
							отбор.НаправлениеПродаж = стр.НаправлениеПродаж;
							отбор.ТоварнаяГруппаПланированияРодительРодитель = стр.ТоварнаяГруппа;
							НайденныеСтроки = Факт.НайтиСтроки(отбор);
							Если НайденныеСтроки.Количество()>0 тогда
								Количество = 0;
								Сумма = 0;
								
								Показатель = 0;
								
								Для каждого эл из НайденныеСтроки цикл
									Количество = Количество + эл.Количество;
									Сумма = Сумма + эл.Сумма;
									Количество = Количество + эл.Количество;
									Показатель = Показатель + эл.Показатель;
								КонецЦикла;
								
								стр.Количество = Количество;
								стр.Сумма = Сумма;
								
								стр.Показатель = Показатель;
								
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если Стр.Строки.Количество()>0 тогда
				ПроставитьФактВДерево(стр, Факт);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


Функция ПолучитьЗначениеПоказателя(Выборка,НачПер,КонПер, Направления = неопределено, ИсключатьШинтрейдКТ = ложь)
	ЗапросПоказатель = Новый Запрос;
	
	Условие = "";
	БылаЗамена = ложь;
	Попытка
		ТекстЗапросаПоказателя = Выборка.ТоварнаяГруппаТекстЗапроса;
	исключение
		ТекстЗапросаПоказателя = Выборка.ТоварнаяГруппа.ТекстЗапроса
	КонецПопытки;
	
	Если Направления<>неопределено тогда
		ТекстЗапросаПоказателя = СтрЗаменить(ТекстЗапросаПоказателя, "//отбор по менеджеру или направлению", "ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений) и"+ Символы.ПС+"//отбор по менеджеру или направлению");
		БылаЗамена = истина;
		ЗапросПоказатель.УстановитьПараметр("СписокНаправлений",Направления);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.НаправлениеПродаж) тогда
		Условие = ДобавитьУсловие(Условие, " ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродаж ");
		ЗапросПоказатель.УстановитьПараметр("НаправлениеПродаж",Выборка.НаправлениеПродаж);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.НоменклатурнаяГруппаПоказатели) тогда
		Если ТипЗнч(Выборка.НоменклатурнаяГруппаПоказатели)= Тип("СправочникСсылка.НоменклатурныеГруппы") тогда
			Условие = ДобавитьУсловие(Условие, " Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа ");
			ЗапросПоказатель.УстановитьПараметр("НоменклатурнаяГруппа",Выборка.НоменклатурнаяГруппаПоказатели);
		ИначеЕсли ТипЗнч(Выборка.НоменклатурнаяГруппаПоказатели)= Тип("СправочникСсылка.ПараметрыПоказателейЭффективности") тогда
			п=0;
			Для Каждого стрПараметров из Выборка.НоменклатурнаяГруппаПоказатели.СписокПараметров цикл
				 Условие = ДобавитьУсловиеПараметраЭффективности(Условие,стрПараметров,"Параметр_"+п,ЗапросПоказатель);
				 п=п+1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		Если ЗначениеЗаполнено(Выборка.Менеджер) тогда
			Условие = ДобавитьУсловие(Условие, " ДоговорКонтрагента.ОтветственноеЛицо = &Менеджер ");
			ЗапросПоказатель.УстановитьПараметр("Менеджер",Выборка.Менеджер);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	
	ЗапросПоказатель.Текст = СтрЗаменить(ТекстЗапросаПоказателя,"//отбор по менеджеру или направлению",?(Условие="",?(БылаЗамена,"истина","истина"),Условие));
	ЗапросПоказатель.УстановитьПараметр("НачДата",(НачПер));
	//ЗапросПоказатель.УстановитьПараметр("КонДата",КонецМесяца(КонПер));
	ЗапросПоказатель.УстановитьПараметр("КонДата",КонПер);
	
	Если ИсключатьШинтрейдКТ тогда
		СписокПустой = Новый СписокЗначений;
		ЗапросПоказатель.УстановитьПараметр("ШинтрейдСПб",СписокПустой);
	Иначе
		ЗапросПоказатель.УстановитьПараметр("ШинтрейдСПб",СписокИсключаемыхКонтрагентов);
	КонецЕсли;
	
	Рез = ЗапросПоказатель.Выполнить().Выбрать();
	
	Пока Рез.Следующий() Цикл
		Возврат Рез.Значение;
	КонецЦикла;
	
	Возврат 0;
КонецФункции

Функция ДобавитьУсловие(ТекстУсловия,НовоеУсловие)
	Если ТекстУсловия = "" тогда
		 ТекстУсловия = НовоеУсловие;
	 иначе
		 ТекстУсловия = ТекстУсловия+ " и "+ НовоеУсловие;
	 КонецЕсли;
	 Возврат ТекстУсловия;
 КонецФункции

 Функция ДобавитьУсловиеПараметраЭффективности(ТекстУсловия,стрПараметров,ИмяПараметра,Запрос)
	 НовоеУсловие = "";
	 Если стрПараметров.ТипПараметра = "Номенклатура" тогда
		 НовоеУсловие = "Номенклатура";
	 иначеЕсли стрПараметров.ТипПараметра = "Номенклатурные группы" тогда
		 НовоеУсловие = "Номенклатура.НоменклатурнаяГруппа";
	 иначеЕсли стрПараметров.ТипПараметра = "Производители" тогда
		 НовоеУсловие = "Номенклатура.Производитель";	 
	 иначеЕсли стрПараметров.ТипПараметра = "Модели товаров" тогда
		 НовоеУсловие = "Номенклатура.Модель";	 	 
	 иначеЕсли стрПараметров.ТипПараметра = "Типоразмеры" тогда
		 НовоеУсловие = "Номенклатура.Типоразмер";	 	 
	 иначеЕсли стрПараметров.ТипПараметра = "Виды товаров" тогда
		 НовоеУсловие = "Номенклатура.ВидТовара";	 	 	 
	 КонецЕсли;
	 
	 Если стрПараметров.ВидСравнения = "В группе" тогда
		 НовоеУсловие = НовоеУсловие + " в Иерархии(&"+ИмяПараметра+") ";
	 ИначеЕсли стрПараметров.ВидСравнения = "Не в группе" тогда
		 НовоеУсловие = НовоеУсловие + " не в Иерархии(&"+ИмяПараметра+") ";
	 ИначеЕсли стрПараметров.ВидСравнения = "Содержит" тогда
		 НовоеУсловие = НовоеУсловие + " Содержит %"+ИмяПараметра+"% ";
	 ИначеЕсли стрПараметров.ВидСравнения = "Равно" тогда  НовоеУсловие = НовоеУсловие+ " "+ "="+ "&"+ИмяПараметра+" ";
	 ИначеЕсли стрПараметров.ВидСравнения = "Не равно" тогда  НовоеУсловие = НовоеУсловие+ " "+ "<>"+ "&"+ИмяПараметра+" ";
	 КонецЕсли; 
	 Запрос.УстановитьПараметр(ИмяПараметра,стрПараметров.Параметр);
	 
	 Если ТекстУсловия = "" тогда
		 ТекстУсловия = НовоеУсловие;
	 иначе
		 ТекстУсловия = ТекстУсловия+ " и "+ НовоеУсловие;
	 КонецЕсли;
	 Возврат ТекстУсловия;
 КонецФункции
 
Процедура ПроставитьФактВДеревоМенеджеров(Дерево, Факт)
	Для каждого стр из Дерево.Строки цикл
		Если ЗначениеЗаполнено(стр.ТоварнаяГруппа) и ЗначениеЗаполнено(стр.Менеджер) тогда
			Если ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) и типЗнч(стр.НоменклатурнаяГруппаПоказатели)=Тип("СправочникСсылка.НоменклатурныеГруппы")  тогда
				отбор = новый Структура("Менеджер,НоменклатурнаяГруппа");
				отбор.Менеджер = стр.Менеджер;
				отбор.НоменклатурнаяГруппа = стр.НоменклатурнаяГруппаПоказатели;
				НайденныеСтроки = Факт.НайтиСтроки(отбор);
				Если НайденныеСтроки.Количество()>0 тогда
					стр.Количество = НайденныеСтроки[0].Количество;
					стр.Сумма = НайденныеСтроки[0].Сумма;
					стр.Показатель = НайденныеСтроки[0].Показатель;
				КонецЕсли;
			Иначе//
				отбор = новый Структура("Менеджер,ТоварнаяГруппаПланирования");
				отбор.Менеджер = стр.Менеджер;
				отбор.ТоварнаяГруппаПланирования = стр.ТоварнаяГруппа;
				НайденныеСтроки = Факт.НайтиСтроки(отбор);
				Если НайденныеСтроки.Количество()>0 тогда
					Количество = 0;
					Сумма = 0;
					Показатель = 0;
					
					Для каждого эл из НайденныеСтроки цикл
						Количество = Количество + эл.Количество;
						Сумма = Сумма + эл.Сумма;
						
						Показатель = Показатель + эл.Показатель;
					КонецЦикла;
					
					стр.Количество = Количество;
					стр.Сумма = Сумма;
					
					стр.Показатель = Показатель;
				иначе//Надо поискать в родителях
					отбор = новый Структура("Менеджер,ТоварнаяГруппаПланированияРодитель");
					отбор.Менеджер = стр.Менеджер;
					отбор.ТоварнаяГруппаПланированияРодитель = стр.ТоварнаяГруппа;
					НайденныеСтроки = Факт.НайтиСтроки(отбор);
					Если НайденныеСтроки.Количество()>0 тогда
						Количество = 0;
						Сумма = 0;
						Количество = 0;
						
						Показатель = 0;
						
						Для каждого эл из НайденныеСтроки цикл
							Количество = Количество + эл.Количество;
							Сумма = Сумма + эл.Сумма;
							
							Показатель = Показатель + эл.Показатель;
						КонецЦикла;
						
						стр.Количество = Количество;
						стр.Сумма = Сумма;
						
						стр.Показатель = Показатель;
						
					иначе//Надо поискать в родителяхРодителей
						отбор = новый Структура("Менеджер,ТоварнаяГруппаПланированияРодительРодитель");
						отбор.Менеджер = стр.Менеджер;
						отбор.ТоварнаяГруппаПланированияРодительРодитель = стр.ТоварнаяГруппа;
						НайденныеСтроки = Факт.НайтиСтроки(отбор);
						Если НайденныеСтроки.Количество()>0 тогда
							Количество = 0;
							Сумма = 0;
							
							Показатель = 0;
							
							Для каждого эл из НайденныеСтроки цикл
								Количество = Количество + эл.Количество;
								Сумма = Сумма + эл.Сумма;
								
								Показатель = Показатель + эл.Показатель;
							КонецЦикла;
							
							стр.Количество = Количество;
							стр.Сумма = Сумма;
							
							стр.Показатель = Показатель;
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если Стр.Строки.Количество()>0 тогда
			ПроставитьФактВДеревоМенеджеров(стр, Факт);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура РассчитатьОбщиеПоказателиПоОтделу(Дерево,СписокПланирования)
	отбор = новый Структура("НаправлениеПродаж",Справочники.НаправленияПродаж.ПустаяСсылка());
	НайденныеСтрокиОбщиеПоказатели = Дерево.Строки.НайтиСтроки(отбор,истина);
	
	отбор2 = новый Структура("ТоварнаяГруппа,НоменклатурнаяГруппаПоказатели");
	
	Для каждого найденнаяСтрока из НайденныеСтрокиОбщиеПоказатели цикл
		Если ЗначениеЗаполнено(найденнаяСтрока.ТоварнаяГруппа) тогда
			ЗаполнитьЗначенияСвойств(отбор2,найденнаяСтрока);
			НайденныеСтроки = Дерево.Строки.НайтиСтроки(отбор2,истина);
			
			Показатель = 0;
			ПоказательИтоговыйПлан = 0;
			
			Если найденнаяСтрока.ТоварнаяГруппа <> СпрПДЗ тогда
				Для каждого строкаНаправлений из  НайденныеСтроки цикл
					Если ЗначениеЗаполнено(строкаНаправлений.НаправлениеПродаж) тогда
						Показатель = Показатель + строкаНаправлений.Показатель; //Факт
						ПоказательИтоговыйПлан = ПоказательИтоговыйПлан + строкаНаправлений.ПоказательИтоговыйПлан; //ПланРДП
					КонецЕсли;
				КонецЦикла;
				найденнаяСтрока.Показатель = Показатель;
				найденнаяСтрока.ПоказательИтоговыйПлан = ПоказательИтоговыйПлан;
			иначе
				КонПер = КонецДня(КонецПериода);
				Если КонПер>КонецДня(ТекущаяДата()) тогда
					КонПер = КонецДня(ТекущаяДата());
				КонецЕсли;	
				найденнаяСтрока.Показатель = ПолучитьЗначениеПоказателя(найденнаяСтрока,НачалоПериода,КонПер,СписокПланирования);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура флРедактироватьДатыПриИзменении(Элемент)
	
	Если флРедактироватьДаты Тогда
		ЭлементыФормы.НачалоПериода.Доступность = Истина;
		ЭлементыФормы.КонецПериода.Доступность = Истина;
		ЭлементыФормы.ПериодРегистрации.Доступность = Ложь;
	Иначе
		ЭлементыФормы.НачалоПериода.Доступность = Ложь;
		ЭлементыФормы.КонецПериода.Доступность = Ложь;
		ЭлементыФормы.ПериодРегистрации.Доступность = Истина;
		НачалоПериода = НачалоМесяца(ПериодРегистрации);
		КонецПериода = КонецМесяца(ПериодРегистрации);
	Конецесли;
	
КонецПроцедуры



СписокИсключаемыхКонтрагентов = новый СписокЗначений;
СписокИсключаемыхКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001549"));  //ШинТрейд (Питер)
СписокИсключаемыхКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000382"));
СписокИсключаемыхКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94247"));  //*** 2016.09 Розничный покупатель ДПД
СписокИсключаемыхКонтрагентов.Добавить(Справочники.Контрагенты.НайтиПоКоду("94143"));  //*** 2016.09 Покупатель

СпрПДЗ = Справочники.ПоказателиЭффективности.НайтиПоКоду("000000030");

