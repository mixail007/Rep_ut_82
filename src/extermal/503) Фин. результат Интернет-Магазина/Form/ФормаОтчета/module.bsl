Перем НП;

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	Если НП.Редактировать() Тогда
		
		НачДата = НП.ПолучитьДатуНачала();
		КонДата = НП.ПолучитьДатуОкончания();

	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	НачДата = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1));
	КонДата = КонецМесяца(ДобавитьМесяц(ТекущаяДата(),-1));
	ПоСтатьямИМ = истина;
КонецПроцедуры

Процедура ДействияФормыСформировать(Кнопка)
	РезультатПодключения = ВыполнитьПодключениеКИБПриемнику();
		
	Если РезультатПодключения = Неопределено Тогда
		Предупреждение("Возникли ошибки при подключении к информационной базе-приемнику.");
		Возврат
	КонецЕсли;

	табДок = Сформировать();
	ЭлементыФормы.ПолеТабличногоДокумента1.Очистить();
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ТабДок);
	ЭлементыФормы.ПолеТабличногоДокумента1.ТолькоПросмотр = Истина;

	ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(1);
	ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(0);
КонецПроцедуры

Процедура ПолеТабличногоДокумента1ОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
			
	Если ТипЗнч(Расшифровка) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		отчет = Отчеты.ВедомостьВзаиморасчетыСКонтрагентами.Создать();
		отчет.ЗаполнитьНачальныеНастройки();
		отчет.ОбщийОтчет.ДатаНач  = НачДата;
		отчет.ОбщийОтчет.ДатаКон  = КонДата;
		отчет.ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке  = Истина;
		построитель = отчет.ПолучитьПостроительОтчета();
		//ИзмеренияПостроителяОтчета
		
		Построитель.ИзмеренияСтроки.очистить();
		
		Построитель.ИзмеренияСтроки.Добавить("Контрагент");
		Построитель.ИзмеренияСтроки.Добавить("Сделка");
		
		Построитель.ВыбранныеПоля.Очистить();
		
		Построитель.ВыбранныеПоля.Добавить("Сделка.ДатаОплаты");
		
		//Построитель.ИзмеренияСтроки.Добавить("Регистратор");
		
		
		построитель.Отбор.Контрагент.ВидСравнения = ВидСравнения.Равно;
		построитель.Отбор.Контрагент.Значение = Расшифровка;
		построитель.Отбор.Контрагент.Использование = Истина;
		
		построитель.Отбор.Добавить("ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж");
		построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.ВидСравнения = ВидСравнения.Равно;
		построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Значение = Справочники.НаправленияПродаж.НайтиПоКоду("16");
		построитель.Отбор.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Использование = Истина;
				
		ф = отчет.ПолучитьОсновнуюФорму();
		ф.ОбновитьОтчет();
		ф.открыть();
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("Строка") Тогда
		Если Расшифровка = "РасшифровкаСкладБрак" тогда
			//отчет = Отчеты.ВедомостьПартииТоваровНаСкладах.Создать();
			//отчет.ЗаполнитьНачальныеНастройки();
			//отчет.ОбщийОтчет.ДатаНач  = НачДата;
			//отчет.ОбщийОтчет.ДатаКон  = КонДата;
			//
			//построитель = отчет.ПолучитьПостроительОтчета();
			//
			//Построитель.ИзмеренияСтроки.очистить();
			//Построитель.ИзмеренияКолонки.очистить();
			//Построитель.ИзмеренияСтроки.Добавить("Склад");
			//Построитель.ИзмеренияСтроки.Добавить("Номенклатура");
			//
			//построитель.Отбор.Добавить("Склад","Склад1","С1");
			//построитель.Отбор.Склад1.ВидСравнения = ВидСравнения.ВИерархии;
			//построитель.Отбор.Склад1.Значение = Справочники.Склады.НайтиПоКоду("02174");
			//построитель.Отбор.Склад1.Использование = Истина;
			//
			//построитель.Отбор.Добавить("Склад","Склад2","С2");
			//построитель.Отбор.Склад2.ВидСравнения = ВидСравнения.НеРавно;
			//построитель.Отбор.Склад2.Значение = Справочники.Склады.НайтиПоКоду("02203");
			//построитель.Отбор.Склад2.Использование = Истина;
			//
			//ф = отчет.ПолучитьОсновнуюФорму();
			//ф.ОбновитьОтчет();
			//ф.открыть();
			ТекСсылка = Справочники.ВнешниеОбработки.НайтиПоКоду("555");
			ИмяФайла = ПолучитьИмяВременногоФайла(); 
			ДвоичныеДанные = ТекСсылка.ХранилищеВнешнейОбработки.Получить(); 
			ДвоичныеДанные.Записать(ИмяФайла); 
			Если ТекСсылка.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда 
				Обработка = ВнешниеОтчеты.Создать(ИмяФайла,ложь); 
			Иначе 
				Обработка = ВнешниеОбработки.Создать(ИмяФайла,Ложь); 
			КонецЕсли; 
						
			ф = Обработка.ПолучитьФорму();
			ф.Открыть();
			//ПараметрСКД = Отчет.КомпоновщикНастроек.Настройки. ПараметрыДанных.Элементы.Найти("ДатаК");
			//ПараметрСКД.Отчет.Использование = Истина;
			//ПараметрСКД.Отчет.Значение  = КонецДня(КонДата);


		ИначеЕсли Расшифровка = "ЗатратыНеУменьшающиеПрибыль" тогда
			Если РольДоступна("ПолныеПрава") тогда
				// На косяки
				отчет = Отчеты.Затраты.Создать();
				отчет.ЗаполнитьНачальныеНастройки();
				отчет.ОбщийОтчет.ДатаНач  = НачДата;
				отчет.ОбщийОтчет.ДатаКон  = КонДата;
				
				построитель = отчет.ПолучитьПостроительОтчета();
				
				Построитель.ИзмеренияСтроки.очистить();
				Построитель.ИзмеренияКолонки.очистить();
				Построитель.ИзмеренияСтроки.Добавить("СтатьяЗатрат");
				
				построитель.Отбор.Добавить("Подразделение");
				построитель.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
				построитель.Отбор.Подразделение.Значение = Справочники.Подразделения.НайтиПоКоду("00139"); //Отдел интернет-продаж
				построитель.Отбор.Подразделение.Использование = Истина;
				
				построитель.Отбор.Добавить("СтатьяЗатратУпр");
				построитель.Отбор.СтатьяЗатратУпр.ВидСравнения = ВидСравнения.Равно;
				построитель.Отбор.СтатьяЗатратУпр.Значение = Справочники.СтатьиЗатратУПР.НайтиПоКоду("00076"); //На косяки
				построитель.Отбор.СтатьяЗатратУпр.Использование = Истина;
				
				ф = отчет.ПолучитьОсновнуюФорму();
				ф.ОбновитьОтчет();
				ф.открыть();
				
				//Сотрудник 2
				отчет2 = Отчеты.Затраты.Создать();
				отчет2.ЗаполнитьНачальныеНастройки();
				отчет2.ОбщийОтчет.ДатаНач  = НачДата;
				отчет2.ОбщийОтчет.ДатаКон  = КонДата;
				
				
				построитель2 = отчет2.ПолучитьПостроительОтчета();
				
				Построитель2.ИзмеренияСтроки.очистить();
				Построитель2.ИзмеренияКолонки.очистить();
				Построитель2.ИзмеренияСтроки.Добавить("СтатьяЗатрат");
				
				построитель2.Отбор.Добавить("Подразделение");
				построитель2.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
				построитель2.Отбор.Подразделение.Значение = Справочники.Подразделения.НайтиПоКоду("00139"); //Отдел интернет-продаж
				построитель2.Отбор.Подразделение.Использование = Истина;
				
				построитель2.Отбор.Добавить("СтатьяЗатратУпр");
				построитель2.Отбор.СтатьяЗатратУпр.ВидСравнения = ВидСравнения.Равно;
				построитель2.Отбор.СтатьяЗатратУпр.Значение = Справочники.СтатьиЗатратУПР.НайтиПоКоду("00066"); //ФОТ
				построитель2.Отбор.СтатьяЗатратУпр.Использование = Истина;
				
				построитель2.Отбор.Добавить("Регистратор.Контрагент","РегистраторКонтрагент","РК");
				построитель2.Отбор.РегистраторКонтрагент.ВидСравнения = ВидСравнения.Равно;
				построитель2.Отбор.РегистраторКонтрагент.Значение = Справочники.Контрагенты.НайтиПоКоду("91765"); //Сотрудники 2
				построитель2.Отбор.РегистраторКонтрагент.Использование = Истина;
				
				построитель2.Отбор.Добавить("Периодичность");
				построитель2.Отбор.Периодичность.ВидСравнения = ВидСравнения.Равно;
				построитель2.Отбор.Периодичность.Значение = 2;
				построитель2.Отбор.Периодичность.Использование = Истина;
				
				ф2 = отчет2.ПолучитьОсновнуюФорму();
				ф2.ОбновитьОтчет();
				ф2.открыть();
			КонецЕсли;
		иначе	
			отчет = Отчеты.Затраты.Создать();
			отчет.ЗаполнитьНачальныеНастройки();
			отчет.ОбщийОтчет.ДатаНач  = НачДата;
			отчет.ОбщийОтчет.ДатаКон  = КонДата;
			построитель = отчет.ПолучитьПостроительОтчета();
			//ИзмеренияПостроителяОтчета
			
			Построитель.ИзмеренияСтроки.очистить();
			Построитель.ИзмеренияКолонки.очистить();
			Если ПоСтатьямИМ Тогда
				Построитель.ИзмеренияСтроки.Добавить("СтатьяЗатратУпр");
			Иначе
				Построитель.ИзмеренияСтроки.Добавить("СтатьяЗатрат");
			КонецЕсли;
			
			Построитель.ВыбранныеПоля.Добавить("Регистратор");
			
			//Построитель.ИзмеренияСтроки.Добавить("Регистратор");
			Если ПоСтатьямИМ Тогда
				построитель.Отбор.Добавить("СтатьяЗатратУпр.Наименование");
				построитель.Отбор.СтатьяЗатратУпрНаименование.ВидСравнения = ВидСравнения.Содержит;
				построитель.Отбор.СтатьяЗатратУпрНаименование.Значение = Расшифровка;
				построитель.Отбор.СтатьяЗатратУпрНаименование.Использование = Истина;
			Иначе
				построитель.Отбор.Добавить("СтатьяЗатрат.Наименование");
				построитель.Отбор.СтатьяЗатратНаименование.ВидСравнения = ВидСравнения.Содержит;
				построитель.Отбор.СтатьяЗатратНаименование.Значение = Расшифровка;
				построитель.Отбор.СтатьяЗатратНаименование.Использование = Истина;
			КонецЕсли;
			
			//построитель.Отбор.Добавить("СтатьяЗатрат.Наименование");
			построитель.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
			построитель.Отбор.Подразделение.Значение = Справочники.Подразделения.НайтиПоКоду("00139");
			построитель.Отбор.Подразделение.Использование = Истина;
			
			ф = отчет.ПолучитьОсновнуюФорму();
			ф.ОбновитьОтчет();
			ф.открыть();
		КонецЕсли;
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваров") тогда
		Расшифровка.ПолучитьФорму("ФормаДокумента").Открыть();
	Иначе	
	    отчет = Отчеты.Затраты.Создать();
		отчет.ЗаполнитьНачальныеНастройки();
		отчет.ОбщийОтчет.ДатаНач  = НачДата;
		отчет.ОбщийОтчет.ДатаКон  = КонДата;
		построитель = отчет.ПолучитьПостроительОтчета();
		//ИзмеренияПостроителяОтчета
		
		Построитель.ИзмеренияСтроки.очистить();
		Построитель.ИзмеренияКолонки.очистить();
		Построитель.ИзмеренияСтроки.Добавить("СтатьяЗатратУпр");
		
		Построитель.ВыбранныеПоля.Добавить("Регистратор");
		
		//Построитель.ИзмеренияСтроки.Добавить("Регистратор");
		
		//построитель.Отбор.Добавить("СтатьяЗатрат.Наименование");
		построитель.Отбор.СтатьяЗатратУпр.ВидСравнения = ВидСравнения.Равно;
		построитель.Отбор.СтатьяЗатратУпр.Значение = Справочники.СтатьиЗатратУПР.ПустаяСсылка();
		построитель.Отбор.СтатьяЗатратУпр.Использование = Истина;
		
		//построитель.Отбор.Добавить("СтатьяЗатрат.Наименование");
		построитель.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
		построитель.Отбор.Подразделение.Значение = Справочники.Подразделения.НайтиПоКоду("00139");
		построитель.Отбор.Подразделение.Использование = Истина;
		
		ф = отчет.ПолучитьОсновнуюФорму();
		ф.ОбновитьОтчет();
		ф.открыть();
	КонецЕсли;
	
КонецПроцедуры

НП = Новый НастройкаПериода;
