
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ОтчетИнициализация();
	
	//Форма = ПолучитьФорму("Пароль");
	//Рез = Форма.ОткрытьМодально();
	//Если (Рез="ОК") Тогда
	//	возврат;
	//Иначе
	//	Отказ = Истина;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОбработкиВнешняяОбработка1Отчет_5862f844-7253-4875-ab6f-7dfeeb04611e", ПостроительОтчетаОтчет.ПолучитьНастройки());

КонецПроцедуры

Процедура ДействияФормыОтчетНастройка(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Форма = ВнешняяОбработкаОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Форма.ОткрытьМодально() = Истина Тогда
		ОтчетВывести();
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ОтчетВывести();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ОтчетВывести()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();

	ПостроительОтчетаОтчет.Параметры.Вставить("КонДата", КонецДня(КонДата));
	ПостроительОтчетаОтчет.Параметры.Вставить("НачДата", НачалоДня(НачДата));
	ПостроительОтчетаОтчет.Параметры.Вставить("Наличные", Перечисления.ВидыДенежныхСредств.Наличные);

	ПостроительОтчетаОтчет.ТекстЗаголовка="Отчет по движению денежных средств по кассам "+ПредставлениеПериода(НачалоДня(НачДата),КонецДня(КонДата),"ФП=Истина");
	
	//ПостроительОтчетаОтчет.Выполнить();
	//ПостроительОтчетаОтчет.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	//ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	//ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	//ПостроительОтчетаОтчет.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Классика);
	//ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);

	
	ПостроительОтчетаОтчет.Выполнить();
	ПостроительОтчетаОтчет.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Отдельно;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
	
	ПостроительОтчетаОтчет.МакетОформления = Неопределено;
	
	ПостроительОтчетаОтчет.Макет=Неопределено;
	Макет=ПостроительОтчетаОтчет.Макет ;
	
	ТекущаяОбласть=Неопределено;
	Пока Истина Цикл
	ТекущаяОбласть=Макет.НайтиТекст("Период",ТекущаяОбласть,ПостроительОтчетаОтчет.Макет.Область(),Истина,Истина,Истина,ЛОЖЬ);
	Если ТекущаяОбласть<>Неопределено Тогда
		Если ТекущаяОбласть.Параметр="Период" Тогда
			ТекущаяОбласть.Формат="ДФ=dd.MM.yy";
			//ТекущаяОбласть.Текст="Документ";
		КонецЕсли;	
		ТекущаяОбласть.ШиринаКолонки=8;
	Иначе
		Прервать;
	КонецЕсли;	
	КонецЦикла;	

	
	ТекущаяОбласть=Неопределено;
	Пока Истина Цикл
	ТекущаяОбласть=Макет.НайтиТекст("НачальныйОстаток",ТекущаяОбласть,ПостроительОтчетаОтчет.Макет.Область(),Истина,Истина,Истина,ЛОЖЬ);
	Если ТекущаяОбласть<>Неопределено Тогда
		Если ТекущаяОбласть.Параметр="НачальныйОстаток" Тогда
			ТекущаяОбласть.ШиринаКолонки=12;
		КонецЕсли;	
	Иначе
		Прервать;
	КонецЕсли;	
	КонецЦикла;	

	
	ТекущаяОбласть=Неопределено;
	Пока Истина Цикл
	ТекущаяОбласть=Макет.НайтиТекст("Приход",ТекущаяОбласть,ПостроительОтчетаОтчет.Макет.Область(),Истина,Истина,Истина,ЛОЖЬ);
	Если ТекущаяОбласть<>Неопределено Тогда
		Если ТекущаяОбласть.Параметр="Приход" Тогда
			ТекущаяОбласть.ШиринаКолонки=12;
		КонецЕсли;	
	Иначе
		Прервать;
	КонецЕсли;	
	КонецЦикла;	
	
	ТекущаяОбласть=Неопределено;
	Пока Истина Цикл
	ТекущаяОбласть=Макет.НайтиТекст("Расход",ТекущаяОбласть,ПостроительОтчетаОтчет.Макет.Область(),Истина,Истина,Истина,ЛОЖЬ);
	Если ТекущаяОбласть<>Неопределено Тогда
		Если ТекущаяОбласть.Параметр="Расход" Тогда
			ТекущаяОбласть.ШиринаКолонки=12;
		КонецЕсли;	
	Иначе
		Прервать;
	КонецЕсли;	
	КонецЦикла;	

	
	ТекущаяОбласть=Неопределено;
	Пока Истина Цикл
	ТекущаяОбласть=Макет.НайтиТекст("КонечныйОстаток",ТекущаяОбласть,ПостроительОтчетаОтчет.Макет.Область(),Истина,Истина,Истина,ЛОЖЬ);
	Если ТекущаяОбласть<>Неопределено Тогда
		Если ТекущаяОбласть.Параметр="КонечныйОстаток" Тогда
			ТекущаяОбласть.ШиринаКолонки=12;
		КонецЕсли;	
	Иначе
		Прервать;
	КонецЕсли;	
	КонецЦикла;	

	
	
	
    ПостроительОтчетаОтчет.Макет=Макет;
	ПостроительОтчетаОтчет.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Лед);
	ПостроительОтчетаОтчет.ОформитьМакет();
	ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);
    ЭлементыФормы.ПолеТабличногоДокумента.ОтображатьЗаголовки=Истина;
	ЭлементыФормы.ПолеТабличногоДокумента.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	ЭлементыФормы.ПолеТабличногоДокумента.АвтоМасштаб=Истина;


	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ
КонецПроцедуры

Процедура ОтчетИнициализация()

	ПостроительОтчетаОтчет.Текст =
	"ВЫБРАТЬ
	|	РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка,
	|	РасходныйКассовыйОрдерРасшифровкаПлатежа.ДокументПланированияПлатежа.Описание
	|ПОМЕСТИТЬ Описание
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасходныйКассовыйОрдерРасшифровкаПлатежа
	|ГДЕ
	|	РасходныйКассовыйОрдерРасшифровкаПлатежа.НомерСтроки = 1
	|	И РасходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДенежныеСредстваОстаткиИОбороты.БанковскийСчетКасса КАК РегистраторКасса,
	|	ДенежныеСредстваОстаткиИОбороты.Период КАК Период,
	|	ДенежныеСредстваОстаткиИОбороты.Регистратор КАК Регистратор,
	|	ДенежныеСредстваОстаткиИОбороты.Регистратор.Комментарий КАК Комментарий,
	|	Описание.ДокументПланированияПлатежаОписание КАК ОписаниеВЗаявке,
	|	ДенежныеСредстваОстаткиИОбороты.СуммаНачальныйОстаток КАК НачальныйОстаток,
	|	ДенежныеСредстваОстаткиИОбороты.СуммаПриход КАК Приход,
	|	ДенежныеСредстваОстаткиИОбороты.СуммаРасход КАК Расход,
	|	ДенежныеСредстваОстаткиИОбороты.СуммаКонечныйОстаток КАК КонечныйОстаток,
	|	ДенежныеСредстваОстаткиИОбороты.БанковскийСчетКасса.Родитель КАК Подразделение
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.ОстаткиИОбороты(&НачДата, &КонДата, Регистратор, ДвиженияИГраницыПериода, ВидДенежныхСредств = &Наличные) КАК ДенежныеСредстваОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Описание КАК Описание
	|		ПО ДенежныеСредстваОстаткиИОбороты.Регистратор = Описание.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистраторКасса,
	|	Период
	|ИТОГИ
	|	СУММА(НачальныйОстаток),
	|	СУММА(Приход),
	|	СУММА(Расход),
	|	СУММА(КонечныйОстаток)
	|ПО
	|	Подразделение,
	|	РегистраторКасса";
	
	
	     // Супервизор должен видеть все кроме выбранных касс
	Если (глТекущийПользователь.Наименование="Супервизор") Тогда
		СписокОграничений = Новый СписокЗначений();
		                 СписокОграничений.Добавить(Справочники.Кассы.НайтиПоКоду("00001")); // основная касса
						 СписокОграничений.Добавить(Справочники.Кассы.НайтиПоКоду("00004")); // основная касса
						 СписокОграничений.Добавить(Справочники.Кассы.НайтиПоКоду("00014")); // касса иентернет магазина

		ПостроительОтчетаОтчет.Параметры.Вставить("СписокКасс",СписокОграничений);
		ПостроительОтчетаОтчет.Текст=СтрЗаменить(ПостроительОтчетаОтчет.Текст, "//ДОПУСЛОВИЕ","И БанковскийСчетКасса НЕ В (&СписокКасс)");
	Конецесли;
		//ДОПУСЛОВИЕ
	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет по движению денежных средств по кассам";
	СтруктураПредставлениеПолей = Новый Структура("
	|РегистраторКасса,
	|Период,
	|Комментарий,
	|НачальныйОстаток,
	|Приход,
	|Расход,
	|КонечныйОстаток",
	"Касса",
	"Дата",
	"Комментарий",
	"Нач. ост",
	"Приход",
	"Расход",
	"Кон. ост");
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчетаОтчет);

	Настройка = ВосстановитьЗначение("НастройкаВнешниеОбработкиВнешняяОбработка1Отчет_5862f844-7253-4875-ab6f-7dfeeb04611e");
	//Если Настройка <> Неопределено Тогда
	//	ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	//КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры
