перем  ДанныеРасшифровки_;
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Для каждого стр из аналоги Цикл
		Набор = РегистрыСведений.АналогиДисков.СоздатьНаборЗаписей();
		Набор.Отбор.Номенклатура.Использование = Истина;
		Набор.Отбор.Аналог.Использование = Истина;
		Набор.Отбор.Номенклатура.Установить(Номенклатура);
		Набор.Отбор.Аналог.Установить(стр.Аналог);
		Набор.Прочитать();
		НовЗапись = Набор.Добавить();
		НовЗапись.Номенклатура= Номенклатура;
		НовЗапись.Аналог= стр.Аналог;
		Набор.Записать();
		й = аналоги.Индекс(Стр);
		пока й < Аналоги.Количество()-1 Цикл 
			й=й+1;
			Набор = РегистрыСведений.АналогиДисков.СоздатьНаборЗаписей();
			Набор.Отбор.Номенклатура.Использование = Истина;
			Набор.Отбор.Аналог.Использование = Истина;
			Набор.Отбор.Номенклатура.Установить(стр.Аналог);
			Набор.Отбор.Аналог.Установить(Аналоги[й].Аналог);
			Набор.Прочитать();
			НовЗапись = Набор.Добавить();
			НовЗапись.Номенклатура= стр.Аналог;
			НовЗапись.Аналог= Аналоги[й].Аналог;
			Набор.Записать();
		конецЦикла;
		
	конецЦикла;
	
	
	
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель2ПоПодстроке(Кнопка)
	подстрока = "";
	Ввестистроку(подстрока,"введите подстроку для поиска");
	Если ЗначениеЗаполнено(подстрока) Тогда
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Наименование ПОДОБНО &ПодСтрока
		|	И Номенклатура.Ссылка <> &Ссылка
		|	И Номенклатура.Ссылка В ИЕРАРХИИ(&Родитель)";

	Запрос.УстановитьПараметр("ПодСтрока", "%"+подстрока+"%");
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	Запрос.УстановитьПараметр("Родитель", Номенклатура.Родитель);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Стр = Аналоги.Добавить();
		Стр.аналог = Выборка.Ссылка;
	КонецЦикла;
    конецЕсли;

КонецПроцедуры

Процедура ПриОткрытии()
СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

//Из схемы возьмем настройки по умолчанию
Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;

//Помещаем в переменную данные о расшифровке данных
ДанныеРасшифровки_ = Новый ДанныеРасшифровкиКомпоновкиДанных;

//Формируем макет, с помощью компоновщика макета
КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

//Передаем в макет компоновки схему, настройки и данные расшифровки
МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки_);

//Выполним компоновку с помощью процессора компоновки
ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки_);

//Очищаем поле табличного документа
Результат = ЭлементыФормы.ДокРезультат;
Результат.Очистить();

//Выводим результат в табличный документ
ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
                                                  
ПроцессорВывода.УстановитьДокумент(Результат);

ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;
	СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Создадим и инициализируем обработчик расшифровки                    
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки_, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	ДоступныеДействия = Новый Массив();
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	
	
	Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия,);
	
	Если Настройки <> Неопределено Тогда
		ДанныеРасшифровки_ = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки_);
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки_);
		
		//Очищаем поле табличного документа
		Результат = ЭлементыФормы.ДокРезультат;
		Результат.Очистить();
		
	    //Выводим результат в табличный документ
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(Результат);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	КонецЕсли;
КонецПроцедуры

Процедура СнятьОтборыНажатие(Элемент)
	приОткрытии();
КонецПроцедуры
