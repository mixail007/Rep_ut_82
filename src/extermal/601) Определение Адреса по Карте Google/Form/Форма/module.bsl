Перем Поставщик;
Перем ИсточникСобытийКарты;
Перем МассивВременныхФайлов;

перем ПолеАдреса; //03.05.2017


///////////////////////////////////////////////////////////////////////
///////////////////ПРОЦЕДУРЫ ФОРМЫ/////////////////////////////////////
///////////////////////////////////////////////////////////////////////

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Поставщик = "Гугл";
	Заголовок = "Работа с картами. Поставщик - " + Поставщик;
	ИнициализироватьКарту();
КонецПроцедуры

Процедура ПриОткрытии()
	// НайтиАдресНаКарте(ТекАдрес);
КонецПроцедуры

Процедура ПриЗакрытии()
	//удаление файла карты
	Файл = Новый Файл(КаталогВременныхФайлов() + "Карта.html");
	Если Файл.Существует() Тогда
		УдалитьФайлы(Файл.ПолноеИмя);
	КонецЕсли;
	
	//удаление временных файлов
	Для Каждого ТекЭлемент Из МассивВременныхФайлов Цикл
		УдалитьФайлы(ТекЭлемент);
	КонецЦикла;
КонецПроцедуры

Процедура ИнициализироватьКарту()
	
	//ПутьКФайлу = КаталогВременныхФайлов() + "Карта"+Поставщик+".html";
	ПутьКФайлу = "\\Terminal\обмен\Огородников С\" + "Карта"+Поставщик+".html";
	//Ф = новый Файл(ПутьКФайлу);
	//Если не Ф.Существует() Тогда
	////	УдалитьФайлы(ПутьКФайлу);
	//Т = новый ТекстовыйДокумент;
	//ТД = ЭтотОбъект.ПолучитьМакет("Макет" + Поставщик);
	//Т.УстановитьТекст(ТД.ПолучитьТекст());
	//Т.Записать(ПутьКФайлу);
	//КонецЕсли; 
	//сообщить(ПутьКФайлу);
	ЭлементыФормы.Эксплорер.Перейти(ПутьКФайлу);
	
КонецПроцедуры

Процедура ОчиститьКарту()
	ВыполнитьСкрипт("Reset()");
КонецПроцедуры

Процедура ВыполнитьСкрипт(Команда) Экспорт 
	ЭлементыФормы.Эксплорер.document.getElementById("WebClientOperation").value = Команда;
	ЭлементыФормы.Эксплорер.document.getElementById("WebClient").click();
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
///////////////////ГЕОКОДИРОВАНИЕ И ПОИСК АДРЕСА///////////////////////
///////////////////////////////////////////////////////////////////////

Процедура АдресПриИзменении(Элемент)
	ТекАдрес = стрЗаменить(ТекАдрес,"""","'");
	НайтиАдресНаКарте(ТекАдрес); 
КонецПроцедуры

Процедура ПоискАдерсаНажатие(Элемент)
	НайтиАдресНаКарте(ТекАдрес);
КонецПроцедуры

Процедура НайтиАдресНаКарте(Адрес = "")	
	//поиск адреса
	Если Адрес = "" Тогда
		Адрес = "г.Ярославль, ул.Базовая, д.3 (Яршинторг)";		
	КонецЕсли;
	
	ТекАдрес = стрЗаменить(ТекАдрес,"""","'");
	// дальше пробуем с помощью геокодинга вывести данные поиска в таблицу
	ТаблицаАдресов.Очистить();
	
	ПоискАдреса(Адрес);
	Если Поставщик = "Яндекс" Тогда
		ПроизвестиГеокодинг_Яндекс();
	ИначеЕсли Поставщик = "Гугл" Тогда
		ПроизвестиГеокодинг_Гугл();
	//ИначеЕсли Поставщик = "2ГИС" Тогда
	//	ПроизвестиГеокодинг_2ГИС();
	КонецЕсли;
КонецПроцедуры

Процедура ПоискАдреса(Адрес)
	ВыполнитьСкрипт("FindAdres(""" + Адрес + """);");
КонецПроцедуры

//Процедура выводит в таблицу данные геокдинга Яндекса
//
//Параметры:
// ТекАдрес - Строка
Процедура ПроизвестиГеокодинг_Яндекс()
	Яндекс = Новый HTTPСоединение("geocode-maps.yandex.ru", , , , , 20, Новый ЗащищенноеСоединениеOpenSSL);
	
	ВременныйФайл = КаталогВременныхФайлов() + "Yandex_geocode_" + СокрЛП(Новый УникальныйИдентификатор);
	Попытка
		Яндекс.Получить("/1.x/?geocode=" + ТекАдрес + "&results=10", ВременныйФайл);
	Исключение
		Сообщить("Ошибка при попытке геокодировать по яндексу адрес: " + ТекАдрес);
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ВременныйФайл);
	
	ПостроительDOM 			= Новый ПостроительDOM;
	ДокументДОМ 			= ПостроительDOM.Прочитать(ЧтениеXML);
	
	СписокText 				= ДокументДОМ.ПолучитьЭлементыПоИмени("text");
	СписокPos 				= ДокументДОМ.ПолучитьЭлементыПоИмени("pos");
		
	Если (СписокText.Количество() = 0) ИЛИ (СписокPos.Количество() = 0) Тогда
		Возврат;	
	КонецЕсли;
	
	Для ъ = 0 по СписокText.Количество()-1 Цикл
		Координаты = СписокPos[Ъ].ТекстовоеСодержимое;
		Разделитель = Найти(Координаты," ");
		Широта = Число(Сред(Координаты, Разделитель + 1));
		Долгота = Число(Лев(Координаты, Разделитель - 1));
		
		Если Широта = 0 ИЛИ Долгота = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		стрАдрес = ТаблицаАдресов.Добавить();
		Если СписокText.Количество() > ъ Тогда
			стрАдрес.Адрес = СписокText[Ъ].ТекстовоеСодержимое;
			стрАдрес.Широта = Широта;
			стрАдрес.Долгота = Долгота;
		КонецЕсли;		
	КонецЦикла;
	//МассивВременныхФайлов.Добавить(ВременныйФайл);
КонецПроцедуры

//Процедура выводит в таблицу данные геокдинга Гугл
//
//Параметры:
// ТекАдрес - Строка
Процедура ПроизвестиГеокодинг_Гугл()
	Гугл = Новый HTTPСоединение("maps.googleapis.com");
	
	ВременныйФайл = КаталогВременныхФайлов() + "Google_geocode_" + СокрЛП(Новый УникальныйИдентификатор);
	Попытка
		Гугл.Получить("/maps/api/geocode/xml?address=" + ТекАдрес + "&language=ru&sensor=false", ВременныйФайл);
	Исключение
		Сообщить("Ошибка при попытке геокодировать по Google адрес: " + ТекАдрес);
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ВременныйФайл);
	
	ПостроительDOM 			= Новый ПостроительDOM;
	ДокументДОМ 			= ПостроительDOM.Прочитать(ЧтениеXML);
	ТаблицаРезультатов = ДокументДОМ.ПолучитьЭлементыПоИмени("result");
	
	Если ДокументДОМ.ПолучитьЭлементыПоИмени("status")[0].ТекстовоеСодержимое <> "OK" ИЛИ ТаблицаРезультатов.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ТекРезультат = 0;
	//Для ТекРезультат = 0 по ТаблицаРезультатов.Количество() -1 Цикл 
		
		СписокText 				= ТаблицаРезультатов[ТекРезультат].ПолучитьЭлементыПоИмени("formatted_address");
		ЭлементыШиротаДолгота = ТаблицаРезультатов[ТекРезультат].ПолучитьЭлементыПоИмени("location");
		Широта = ЭлементыШиротаДолгота[0].ПолучитьЭлементыПоИмени("lat")[0].ТекстовоеСодержимое;
		Долгота = ЭлементыШиротаДолгота[0].ПолучитьЭлементыПоИмени("lng")[0].ТекстовоеСодержимое;
		Если Широта = 0 ИЛИ Долгота = 0 Тогда
			Возврат;
		КонецЕсли;
			
		стрАдрес = ТаблицаАдресов.Добавить();
		стрАдрес.Широта  = Широта;
		стрАдрес.Долгота = Долгота;
		стрАдрес.Адрес = СписокText[0].ТекстовоеСодержимое;  
		
	//КонецЦикла;
	
	//Если ТаблицаАдресов.Количество()>0 тогда //03.05.2017
		Адрес2 = ПолучитьАдресПоКоординатам(ТаблицаАдресов[0].Широта,ТаблицаАдресов[0].Долгота);  // что нашли...
		
		ТаблицаАдресов[0].Адрес = Адрес2;
		ТекАдрес = Адрес2;
	//КонецЕсли;

	//МассивВременныхФайлов.Добавить(ВременныйФайл);
КонецПроцедуры

//Процедура ТаблицаАдресовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
//	Если ЗначениеЗаполнено(ВыбраннаяСтрока.Широта) И ЗначениеЗаполнено(ВыбраннаяСтрока.Долгота) Тогда
//		СтандартнаяОбработка = Ложь;
//	КонецЕсли;
//	Широта = Формат(ВыбраннаяСтрока.Широта, "ЧЦ=10; ЧДЦ=7; ЧРД=.; ЧРГ=");
//	Долгота = Формат(ВыбраннаяСтрока.Долгота, "ЧЦ=10; ЧДЦ=7; ЧРД=.; ЧРГ=");
//	ОбратнПоискАдреса(Широта, Долгота, ВыбраннаяСтрока.Адрес);
//КонецПроцедуры


//Процедура ОбратнПоискАдреса(Широта, Долгота, Адрес)
//	ВыполнитьСкрипт("ReverseSearchAdres(" + Широта + "," + Долгота + ", """ + Адрес + """);");
//КонецПроцедуры


//обработка щелчка, для считывания координат меток
// 
Процедура Эксплорерonclick(Элемент, pEvtObj)
	ПолучитьКоординаты();
КонецПроцедуры

//Процедура получает координаты для Яндекса
Процедура ПолучитьКоординаты()
		Попытка
			Элемент = ЭлементыФормы.Эксплорер;
			ЧислоТип = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 12));
			
			КоординатаX = ЭлементыФормы.Эксплорер.document.getElementById("CoordX").value;
			КоординатаX = ЧислоТип.ПривестиЗначение(КоординатаX);
			
			КоординатаY = ЭлементыФормы.Эксплорер.document.getElementById("CoordY").value;
			КоординатаY = ЧислоТип.ПривестиЗначение(КоординатаY);
			
			Если КоординатаX > 0 И КоординатаY > 0 Тогда
				//НоваяСтрока = ТаблицаТочек.Добавить();
				//НоваяСтрока.Точка = "Точка" + ТаблицаТочек.Количество();
				//НоваяСтрока.Широта  = КоординатаX;
				//НоваяСтрока.Долгота = КоординатаY;
				
				ЭлементыФормы.Эксплорер.document.getElementById("CoordX").value = "0";
				ЭлементыФормы.Эксплорер.document.getElementById("CoordY").value = "0";
				
				//+++ 02.05.2017
				ТекАдрес = ПолучитьАдресПоКоординатам(КоординатаX,КоординатаY, ЛОЖЬ);  // что нашли...
				НайтиАдресНаКарте(ТекАдрес);				
           	КонецЕсли;
		Исключение
		КонецПопытки;
	
КонецПроцедуры

//+++ 02.05.2017
функция ПолучитьАдресПоКоординатам(Шч=0,Дч=0, ЗаполнятьПоля=Истина)

 Ш = формат(Шч,"ЧРД=.");
 Д = формат(Дч,"ЧРД=.");
 
 //ЗапросGoogle = "http://maps.googleapis.com/maps/api/geocode/xml?latlng="+Ш+","+Д+"&sensor=true";
 
 рез = "";	
 СтрокаXMLРезультат = "";

Соединение = Новый HTTPСоединение("maps.googleapis.com");

	Заголовки = Новый Соответствие();
	ИмяФайлаРезультата = ПолучитьИмяВременногоФайла();
	Ресурс = "/maps/api/geocode/xml?latlng="+Ш+","+Д+"&language=ru&sensor=true";
	HTTPзапрос = Новый HTTPЗапрос(Ресурс, Заголовки);
	
	попытка
		HTTPОтвет = Соединение.Получить( HTTPзапрос, ИмяФайлаРезультата);
	
	Соединение = Неопределено; // разорвать соединение
 
 	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяФайлаРезультата);
	ПостроительDOM 			= Новый ПостроительDOM;
	ДокументДОМ 			= ПостроительDOM.Прочитать(ЧтениеXML);
	ТаблицаРезультатов = ДокументДОМ.ПолучитьЭлементыПоИмени("result");
	
 	рез = "";
	Если ДокументДОМ.ПолучитьЭлементыПоИмени("status")[0].ТекстовоеСодержимое <> "OK" ИЛИ ТаблицаРезультатов.Количество() = 0 Тогда 
		Предупреждение("Неверный адрес!",10);
		Возврат рез;
	КонецЕсли;
	
	ТекРезультат = 0;
 //	Для ТекРезультат = 0 по ТаблицаРезультатов.Количество() -1 Цикл 
		
		СписокText 	 = ТаблицаРезультатов[ТекРезультат].ПолучитьЭлементыПоИмени("formatted_address");
		Если ТекРезультат = 0 тогда
			рез = СписокText[0].ТекстовоеСодержимое;
		КонецЕсли;
		
	Если ЗаполнятьПоля тогда
		address_component = ТаблицаРезультатов[ТекРезультат].ПолучитьЭлементыПоИмени("address_component");
		РазобратьАдресНаПоля(address_component);
		рез = СобратьАдресИзПолей();
	КонецЕсли;
	
//	КонецЦикла;

	исключение
		Сообщить("Ошибка : "+ОписаниеОшибки(), СтатусСообщения.Внимание );
    КонецПопытки;

 //-------------------для просмотра всех полей----------------------------
 //ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
 //ТекстовыйФайлОтвет.Прочитать(ИмяФайлаРезультата, КодировкаТекста.UTF8);
 //ТекстовыйФайлОтвет.Показать();
	
	возврат рез;

КонецФункции


функция ПолучитьТаблСокращений()
  таблСокр = новый ТаблицаЗначений;
  таблСокр.Колонки.Добавить("Поле");
  таблСокр.Колонки.Добавить("Что");
  таблСокр.Колонки.Добавить("НаЧто");
  
  стр1 = таблСокр.Добавить();
  стр1.Поле = "Дом"; стр1.Что = "корпус";   стр1.НаЧто ="корп."; 
  стр1 = таблСокр.Добавить();
  стр1.Поле = "Дом"; стр1.Что = "строение"; стр1.НаЧто ="стр."; 
  
  стр1 = таблСокр.Добавить();//-------------------------------------------
  стр1.Поле = "Улица"; стр1.Что = "улица";    стр1.НаЧто ="ул."; 
  стр1 = таблСокр.Добавить();
  стр1.Поле = "Улица"; стр1.Что = "проспект"; стр1.НаЧто ="пр-кт"; 
  
  стр1 = таблСокр.Добавить();
  стр1.Поле = "Улица"; стр1.Что = "площадь";  стр1.НаЧто ="пл.";
  стр1 = таблСокр.Добавить();
  стр1.Поле = "Улица"; стр1.Что = "переулок"; стр1.НаЧто ="пер.";
  стр1 = таблСокр.Добавить();
  стр1.Поле = "Улица"; стр1.Что ="набережная";стр1.НаЧто ="наб.";
  стр1 = таблСокр.Добавить();
  стр1.Поле = "Улица"; стр1.Что = "шоссе";    стр1.НаЧто ="ш.";
// проезд, аллея  - так и есть! 
  
  стр1 = таблСокр.Добавить();//-------------------------------------------
  стр1.Поле = "Регион"; стр1.Что = "автономный округ";  стр1.НаЧто ="АО";
  стр1 = таблСокр.Добавить();
  стр1.Поле = "Регион"; стр1.Что = "автономная область";  стр1.НаЧто ="Аобл";
  
  возврат таблСокр;
  
КонецФункции	  

//03.05.2017 - разбор XML-файла на поля Адресного классификатора!
  //<address_component>
  // <long_name>97а</long_name>
  // <short_name>97а</short_name>
  // <type>street_number</type>
  //</address_component>
// 
  //<address_component>
  // <long_name>проспект Октября</long_name>
  // <short_name>пр. Октября</short_name>
  // <type>route</type>
  //</address_component>
//  
  //<address_component>
  // <long_name>Ярославль</long_name>
  // <short_name>Ярославль</short_name>
  // <type>locality</type>
  // <type>political</type>
  //</address_component>
//  
  //<address_component>
  // <long_name>город Ярославль</long_name>
  // <short_name>г. Ярославль</short_name>
  // <type>administrative_area_level_2</type>
  // <type>political</type>
  //</address_component>
//  
  //<address_component>
  // <long_name>Ярославская область</long_name>
  // <short_name>Ярославская обл.</short_name>
  // <type>administrative_area_level_1</type>
  // <type>political</type>
  //</address_component>
//  
  //<address_component>
  // <long_name>Россия</long_name>
  // <short_name>RU</short_name>
  // <type>country</type>
  // <type>political</type>
  //</address_component>
//  
  //<address_component>
  // <long_name>150031</long_name>
  // <short_name>150031</short_name>
  // <type>postal_code</type>
  //</address_component>
//
процедура РазобратьАдресНаПоля(address_component)
	
	 Типы = новый соответствие;
	 Типы.Вставить("street_number", "Дом");    
	 Типы.Вставить("route",         "Улица");
	 
	 Типы.Вставить("locality",      "Город");
	 
	 Типы.Вставить("administrative_area_level_2", "Район");
	 
	 Типы.Вставить("administrative_area_level_1", "Регион"); // обл., край, респ., АО, Аобл
	 Типы.Вставить("country","Страна");
	 Типы.Вставить("postal_code","Индекс");
	 
	  таблЗамены = ПолучитьТаблСокращений();
	 
	ТаблицаТочек.Очистить();	 
	для i=0 по address_component.Количество()-1 цикл
		Если address_component[i].ДочерниеУзлы.Количество()<3 тогда
			продолжить;
		КонецЕсли;
	
		type  = address_component[i].ДочерниеУзлы[2];
		Если type.ИмяУзла="type" тогда
		  тип1  = type.ТекстовоеСодержимое; //	"street_number"	
		  поле1 = типы.Получить( тип1 );
		  если поле1=неопределено тогда
			  продолжить;
		  КонецЕсли;	  
	  	иначе
		  продолжить;
	    КонецЕсли;
		
		long  = address_component[i].ДочерниеУзлы[0];  //ИмяУзла	"long_name"  	Строка
		short = address_component[i].ДочерниеУзлы[1];  //ИмяУзла	"short_name"	Строка

	//использование сокращений------------------------
		Если поле1="Страна" или поле1="Город" тогда 
			Знач1 = long.ТекстовоеСодержимое+?(поле1="Город", " г","");
			
		ИначеЕсли поле1="Дом" тогда //----------------
			Знач1 = long.ТекстовоеСодержимое;
			
			//доп.поля!
			таблЗамены2 = таблЗамены.НайтиСтроки( новый Структура("Поле","Дом"));
			для каждого поле2 из таблЗамены2 цикл
				Если найти(Знач1,поле2.Что)>0 тогда
					знач2 = прав( Знач1, стрДлина(Знач1) - найти(Знач1,поле2.Что) - стрДлина(поле2.Что) );
					знач1 = лев( знач1, найти(Знач1, поле2.Что) - 2);  // "35 корпус 2" = 4-2
					
					стрАдр = ТаблицаТочек.Добавить();
					стрАдр.Поле     =  поле2.Что;   //корпус/строение
					стрАдр.Значение =  знач2;
				КонецЕсли;
			КонецЦикла;
						
		ИначеЕсли поле1="Улица" тогда  //----------------
			Знач1 = short.ТекстовоеСодержимое;  // обл. респ. край
			
			Знач2 = long.ТекстовоеСодержимое; //замена  пр-кт, пр-д
			таблЗамены2 = таблЗамены.НайтиСтроки( новый Структура("Поле","Улица"));
			для каждого поле2 из таблЗамены2 цикл
				Если найти(Знач2,поле2.Что)>0 тогда  
					Знач1 = стрЗаменить(Знач2,поле2.Что,поле2.НаЧто);
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли поле1="Регион" тогда  //----------------
			Знач1 = short.ТекстовоеСодержимое;  // обл. респ. край
			
			Знач2 = long.ТекстовоеСодержимое; //замена   АО, Аобл
			таблЗамены2 = таблЗамены.НайтиСтроки( новый Структура("Поле","Регион"));
			для каждого поле2 из таблЗамены2 цикл
				Если найти(Знач2,поле2.Что)>0 тогда
					Знач1 = стрЗаменить(Знач2,поле2.Что,поле2.НаЧто);
				КонецЕсли;
			КонецЦикла;
	        
		иначе //Если short.ИмяУзла="short_name" тогда
			Знач1 = short.ТекстовоеСодержимое;
		КонецЕсли;
		
		
		Если поле1="Район" и найти(Знач1,"г. ")>0 тогда
			продолжить; //Район = Город!
		КонецЕсли;	
		
	//------------------------------------------------	
		
		
		j=Найти(Знач1,".");		L= стрДлина(Знач1);
		если j>0 и j<>L тогда
		сокр  =	лев(Знач1, j-1);  // "г. Ярославль" >> "Ярославль г"
		
		Знач1 = прав(Знач1, L-j-1)+ " "+сокр;
		иначе
		Знач1 = стрЗаменить(Знач1, ".",""); // без точки! обл  ул  г
	    КонецЕсли;
		
		Если поле1="Регион" тогда
			если Знач1 = ТаблицаТочек[ТаблицаТочек.Количество()-1].Значение тогда // Регион = Город!  Москва, СПб, 
			ТаблицаТочек[ТаблицаТочек.Количество()-1].Поле = "Регион";
			продолжить; //Район = Город!
			КонецЕсли;
		КонецЕсли;	
		
		стрАдр = ТаблицаТочек.Добавить();
		стрАдр.Поле     =  поле1;
		стрАдр.Значение =  Знач1;
	КонецЦикла;
	
	Если ТаблицаТочек.Найти("Дом", "Поле") = неопределено тогда
		Предупреждение("Неправильный адрес! Отсутствует номер дома!", 10);
	КонецЕсли;
	
КонецПроцедуры

функция СобратьАдресИзПолей()  //формат Представления как в 1С!
	рез0 = ТекАдрес;
	рез = "";
	для каждого стр1 из ТаблицаТочек цикл // задом наперед...
		
		если стр1.Поле = "Страна" и стр1.Значение = "Россия" тогда // страна и индекс НЕ надо!
			прервать;
		КонецЕсли;	
		
		
		Если стр1.Поле = "Город" тогда
		рез = "г. "+лев(стр1.Значение, стрДлина(стр1.Значение)-2)+", "+рез;
		ИначеЕсли стр1.Поле = "Дом" тогда
		рез = "д."+ стр1.Значение + ", "+рез;
		Иначеесли стр1.Поле = "корпус" тогда
		рез = "корп. "+ стр1.Значение + ", "+рез;
		Иначеесли стр1.Поле = "строение" тогда
		рез = "стр. "+ стр1.Значение + ", "+рез;
		иначе
		рез = стр1.Значение + ", "+рез;
		КонецЕсли;
	
	КонецЦикла;	
	рез = лев(рез, стрДлина(рез)-2);
	
	возврат рез;
	
КонецФункции

Процедура КоманднаяПанель1ОчиститьВсе(Кнопка)
	ТаблицаТочек.Очистить();
	ОчиститьКарту();
КонецПроцедуры

Процедура ОсновныеДействияПерегрузитьКарту(Кнопка)
	ИнициализироватьКарту();
КонецПроцедуры

Процедура ОсновныеДействияСправка(Кнопка)
	ФормаСправки = ЭтотОбъект.ПолучитьФорму("СправочнаяИнформация", ЭтаФорма);
	ФормаСправки.Поставщик = Поставщик;
	ФормаСправки.Открыть();
КонецПроцедуры

//Процедура ОсновныеДействияРазработчик(Кнопка)
//	ЗапуститьПриложение("http://smaylukk.com.ua/?lang=Ru");
//КонецПроцедуры

Процедура Эксплорерondatasetcomplete(Элемент, pEvtObj)
	Если ИсточникСобытийКарты = "Маршрут" Тогда
		ИнформацияОМаршруте =  ЭлементыФормы.Эксплорер.document.getElementById("RouteInfo").value;
		//еще не конец - надо теперь обработать строку - удалить символы HTML
		Пока Истина Цикл   //удаление символов вида &#160;
			ПозицияНач = Найти(ИнформацияОМаршруте, "&");
			Если ПозицияНач = 0 Тогда
				Прервать;
			КонецЕсли;
			
			ПозицияКон = Найти(ИнформацияОМаршруте, ";");
			Если ПозицияКон = 0 Тогда
				Прервать;
			КонецЕсли;
			ИнформацияОМаршруте = Сред(ИнформацияОМаршруте, 1, ПозицияНач - 1) + Сред(ИнформацияОМаршруте, ПозицияКон + 1);
		КонецЦикла;
		
		ДополнительнаяИнформация = ИнформацияОМаршруте;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель2ОчиститьКарту(Кнопка)
	ОчиститьКарту();
КонецПроцедуры

Процедура КоманднаяПанель2ОчиститьТаблицу(Кнопка)
	ТаблицаТочек.Очистить();
КонецПроцедуры


//////////////////////////////////////
Поставщик = СтруктураПоставщиковКарт.Получить(ЭтотОбъект.ТипКарты);
ИсточникСобытийКарты = "";
МассивВременныхФайлов = Новый Массив;

ПолеАдреса = новый Массив;
ПолеАдреса.Добавить("Представление"); //0

ПолеАдреса.Добавить("Индекс"); // 1
ПолеАдреса.Добавить("Регион"); // 2  

ПолеАдреса.Добавить("Район"); // 3
ПолеАдреса.Добавить("Город"); // 4

ПолеАдреса.Добавить("НаселенныйПункт"); // 5  - НЕ ИСПОЛЬЗУЕТСЯ !

ПолеАдреса.Добавить("Улица"); // 6
ПолеАдреса.Добавить("Дом"); // 7
ПолеАдреса.Добавить("Корпус"); // 8

ПолеАдреса.Добавить("Квартира"); // 9  - НЕ ИСПОЛЬЗУЕТСЯ !

ПолеАдреса.Добавить("Координаты"); // 10
//ПолеАдреса.Добавить("Страна");   // 11 - НЕТ в КонтактнойИнформации ! 
