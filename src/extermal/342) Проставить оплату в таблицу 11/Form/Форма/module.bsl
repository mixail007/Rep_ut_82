Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	    ДанныеПоДопРасходам = ПолучитьДанныеПоДопРасходам();
	
		Эксель = Новый COMОбъект("Excel.Application");
		//ПутьКФайлу="\\Novikova\Таблица11\таблица 11.xls";
		//ПутьКФайлу="e:\таблица 11.xls";
        ПутьКФайлу="\\Terminal\ВЭД\CВЕТА\таблица 11.xls";
		
		Файл = Новый Файл(ПутьКФайлу);
		Если Не Файл.Существует() Тогда
			Сообщить(ПутьКФайлу+"   Файл не существует!");
			Возврат;
		КонецЕсли;
		Книга   = Эксель.Workbooks.Open(ПутьКФайлу,,0,,,,0);
		Если Книга.ReadOnly = 1 Тогда
			Предупреждение("Файл "+ПутьКФайлу+" уже открыт. 
			|Необходимо сначала закрыть файл.");
			Книга.Close(0);
			//Эксель.Quit();
			возврат;
		КонецЕсли;	
		КоличествоЛистов = Книга.Sheets.Count;
		НомерЛиста=1;
		СписокЛистов=новый СписокЗначений;
		Пока НомерЛиста <= КоличествоЛистов Цикл
			СписокЛистов.Добавить(Книга.Sheets(НомерЛиста).Name);
			НомерЛиста=НомерЛиста+1;
		КонецЦикла;
		ЛистСезон=СписокЛистов.ВыбратьЭлемент("Укажите сезон");
		Лист = Книга.Worksheets(ЛистСезон.Значение);
		//
		КолонкаКонтейнер="I";
		//КолонкаДляКурсаВПоступление="CY";
		//КолонкаДляГТДВПоступление="CZ";
		//КолонкаФлагГотовности="DE";
		Для каждого стрДоки из ВыбранныеДоки Цикл
			Если стрДоки.флажок тогда
				КонтейнерИзДока=СокрЛП(стрДоки.НомерКонтейнера);
				НСтр = Лист.Columns(КолонкаКонтейнер).Find(КонтейнерИзДока);
				Если НСтр<>Неопределено тогда
					СтрокаExcel=НСтр.Row;
					НайденныеСтроки = ДанныеПоДопРасходам.НайтиСтроки(Новый Структура("Контрагент, Услуга, Договор", 
					стрДоки.Контрагент, стрДоки.Услуга, стрДоки.ДоговорКонтрагента));
					Если НайденныеСтроки.Количество()>0 Тогда
						КолонкаДатаОплаты = НайденныеСтроки[0].КолонкаВФайлеДатаОплаты;
						КолонкаНомерСчета = НайденныеСтроки[0].КолонкаВФайлеНомерСчета;
						Если СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаДатаОплаты).Value) = "" Тогда
							//проверим тот ли счет
							ТекНомСчета = СокрЛП(Лист.Cells(СтрокаExcel,  КолонкаНомерСчета).Text);
							ТекНомСчета = СтрЗаменить(ТекНомСчета, Символы.ПС, "");
							Если ТекНомСчета<>СокрЛП(стрДоки.ДокДопРасхода.НомерСчета) Тогда
								сообщить("Контейнер "+КонтейнерИзДока+" не совпадают номера счетов в 1С: "+стрДоки.ДокДопРасхода.НомерСчета+", в файле: "+ТекНомСчета+", данные об оплате не обновлены", СтатусСообщения.Важное);
							Иначе	
								Лист.Cells(СтрокаExcel,  КолонкаДатаОплаты).Value = Формат(стрДоки.ДатаОплаты, "ДФ=dd.MM.yyyy");
							КонецЕсли;
						Иначе
							сообщить("Контейнер "+КонтейнерИзДока+" уже заполнены данные об оплате");
						КонецЕсли;
					Иначе
						сообщить("Контейнер "+КонтейнерИзДока+": Нет настроек для "+СокрЛП(СтрДоки.Контрагент)+"  "+СокрЛП(СтрДоки.ДоговорКонтрагента)+" по услуге "+СокрЛП(стрДоки.Услуга)+"! Данные об оплате не заполнены !", СтатусСообщения.Важное);
					КонецЕсли;	
				Иначе
					Сообщить("Контейнер "+КонтейнерИзДока+" в таблице не найден.", СтатусСообщения.Важное);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		//Эксель.Workbooks(1).Activate();
		Эксель.DisplayAlerts = 1;
		Эксель.Visible = 1;
		Эксель.WindowState = -4140;
		Эксель.WindowState = -4137;
			
КонецПроцедуры

Функция ПолучитьДанныеПоДопРасходам()
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ДанныеПоДопРасходам.Контрагент КАК Контрагент,
	             |	ДанныеПоДопРасходам.Услуга КАК Услуга,
	             |	ДанныеПоДопРасходам.Договор КАК Договор,
	             |	ДанныеПоДопРасходам.КолонкаВФайлеКурс,
				 |	ДанныеПоДопРасходам.КолонкаВФайлеНомерСчета,
                 |	ДанныеПоДопРасходам.КолонкаВФайлеДатаСчета,
	             |	ДанныеПоДопРасходам.КолонкаВФайлеДатаОплаты
	             |ИЗ
	             |	РегистрСведений.ДанныеПоДопРасходам КАК ДанныеПоДопРасходам
	             |ГДЕ
	             |	ДанныеПоДопРасходам.КолонкаВФайлеДатаОплаты <> """"
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Контрагент,
	             |	Договор,
	             |	Услуга";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Процедура ВыбПериодНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель2ДействиеЗаполнить(Кнопка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	   "ВЫБРАТЬ
	   |	ВзаиморасчетыСКонтрагентамиОбороты.Сделка КАК ДокДопРасхода,
	   |	ВзаиморасчетыСКонтрагентамиОбороты.Сделка.Контрагент КАК Контрагент,
	   |	ВзаиморасчетыСКонтрагентамиОбороты.Сделка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	   |	ВзаиморасчетыСКонтрагентамиОбороты.Сделка.Услуга КАК Услуга,
	   |	ВЫБОР 
	   |      КОГДА ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	   |         ТОГДА ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.ДатаОплаты
	   |      ИНАЧЕ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.Дата
	   |    КОНЕЦ КАК ДатаОплаты,
	   |	ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход КАК СуммаОплаты
	   |ПОМЕСТИТЬ ТЗсделок
	   |ИЗ
	   |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
	   |			&ДатаНач,
	   |			&ДатаКон,
	   |			Регистратор,
	   |			ДоговорКонтрагента.ОтветственноеЛицо = &СотрудникВЭД
	   |				И ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоРасчетнымДокументам)
	   |				И Сделка ССЫЛКА Документ.ПоступлениеДопРасходов) КАК ВзаиморасчетыСКонтрагентамиОбороты
	   |ГДЕ
	   |	(ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	   |			ИЛИ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер)
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	МАКСИМУМ(ПоступлениеДопРасходовТовары.ДокументПартии.Сделка.НомерКонтейнера) КАК НомерКонтейнера,
	   |	ПоступлениеДопРасходовТовары.Ссылка КАК ДокДопРасхода
	   |ПОМЕСТИТЬ ТЗСделокНомерКонтейнера
	   |ИЗ
	   |	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	   |ГДЕ
	   |	ПоступлениеДопРасходовТовары.Ссылка В
	   |			(ВЫБРАТЬ
	   |				ТЗсделок.ДокДопРасхода
	   |			ИЗ
	   |				ТЗсделок)
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	ПоступлениеДопРасходовТовары.Ссылка
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТЗсделок.Контрагент КАК Контрагент,
	   |	ТЗсделок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	   |	ТЗсделок.Услуга КАК Услуга,
	   |	ТЗСделокНомерКонтейнера.НомерКонтейнера КАК НомерКонтейнера,
	   |	ТЗсделок.ДокДопРасхода КАК ДокДопРасхода,
	   |	МАКСИМУМ(ТЗсделок.ДатаОплаты) КАК ДатаОплаты,
	   |	СУММА(ТЗсделок.СуммаОплаты) КАК СуммаОплаты,
	   |	МАКСИМУМ(ИСТИНА) КАК Флажок
	   |ИЗ
	   |	ТЗсделок КАК ТЗсделок
	   |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗСделокНомерКонтейнера КАК ТЗСделокНомерКонтейнера
	   |		ПО ТЗсделок.ДокДопРасхода = ТЗСделокНомерКонтейнера.ДокДопРасхода
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	ТЗсделок.Контрагент,
	   |	ТЗсделок.ДоговорКонтрагента,
	   |	ТЗсделок.Услуга,
	   |	ТЗСделокНомерКонтейнера.НомерКонтейнера,
	   |	ТЗсделок.ДокДопРасхода
	   |
	   |УПОРЯДОЧИТЬ ПО
	   |	Контрагент,
	   |	ДоговорКонтрагента,
	   |	НомерКонтейнера,
	   |	Услуга,
	   |	ДокДопРасхода";
	   
	   Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	   Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
       Запрос.УстановитьПараметр("СотрудникВЭД", ОтветственныйЗаДоговор);
	   
	   ТЗ = Запрос.Выполнить().Выгрузить();
	   ВыбранныеДоки = ТЗ;
	   
	ЭлементыФормы.ВыбранныеДоки.СоздатьКолонки();
	ЭлементыФормы.ВыбранныеДоки.Колонки.Добавить("фл","фл");
	Колонки = ЭлементыФормы.ВыбранныеДоки.Колонки;
	Индекс=Колонки.Индекс(Колонки["фл"]);
	ЭлементыФормы.ВыбранныеДоки.Колонки.Сдвинуть(Колонки["фл"],-Индекс);
	ЭлементыФормы.ВыбранныеДоки.Колонки.фл.РежимРедактирования=РежимРедактированияКолонки.Непосредственно;
	ЭлементыФормы.ВыбранныеДоки.Колонки.фл.ДанныеФлажка="флажок";
	ЭлементыФормы.ВыбранныеДоки.Колонки.флажок.видимость=ложь;

	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЗначениеНеЗаполнено(ДатаНач) или ЗначениеНеЗаполнено(ДатаКон) Тогда
		ДатаНач = НачалоМесяца(ТекущаяДата());
		ДатаКон = КонецМесяца(ТекущаяДата());
	КонецЕсли;
	Организация = Справочники.Организации.НайтиПоКоду("00001");
	ОтветственныйЗаДоговор = Справочники.Пользователи.НайтиПоНаименованию("Серебренникова Анна Александровна");
	
КонецПроцедуры


