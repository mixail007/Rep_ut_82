
Процедура КнопкаСформироватьНажатие(Кнопка)
	
	Дата0 = НачПериода;
	
	Таблица.Очистить();
	
	стр0 = ПолучитьСуммыНаДату(Дата0);	
	если Флажок1 тогда
		стрТ = Таблица.Добавить();
		ЗаполнитьЗначенияСвойств(стрТ, стр0);
		стрТ.Дата = формат(дата0,"ДЛФ=D");
		
	КонецЕсли;

	пока Дата0<КонПериода цикл
		ОбработкаПрерыванияПользователя();

		Дата1 = ДобавитьМесяц(Дата0,1);
		Состояние("Идёт расчет на дату: "+ формат(Дата1,"ДЛФ=DD"));
		стр1 = ПолучитьСуммыНаДату(Дата1);
		
		Если Флажок1 тогда
			стрТ = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(стрТ, стр1);
			стрТ.Дата =  формат(дата1,"ДЛФ=D");
		КонецЕсли;
		
		//==================================================
		стрТ = Таблица.Добавить();
		
		стрТ.Дата = формат( дата0,"ДФ='MMMM yyyy'");

		стрТ.суммаСуды = стр1.суммаСуды - стр0.суммаСуды;
		стрТ.СуммаДефолт = стр1.СуммаДефолт - стр0.СуммаДефолт;
		стрТ.СуммаПросрочки = стр1.СуммаПросрочки - стр0.СуммаПросрочки;
		стрТ.СуммаПродаж    = получитьОборотыПродаж(дата0, дата1);
		
		посчитатьКоэффициенты(стрТ);
		
		Дата0 = Дата1;
		ЗаполнитьЗначенияСвойств(стр0, стр1); // чтобы не считать еще раз
	КонецЦикла;

//ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Таблица;

нарисоватьДиаграмму();
ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.График;

КонецПроцедуры

//Основная функция
функция ПолучитьСуммыНаДату(Дата1)
Запрос = новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
                 |	СудыПоДебиторамДляДЗКЗ.Контрагент,
				 |	СудыПоДебиторамДляДЗКЗ.ДолгНаСписание
                 |ПОМЕСТИТЬ втКонтрагенты
                 |ИЗ
                 |	РегистрСведений.СудыПоДебиторамДляДЗКЗ КАК СудыПоДебиторамДляДЗКЗ
                 |;
			|ВЫБРАТЬ
             |	СУММА(суды.СуммаВзаиморасчетовОстаток) КАК суммаСуды,
             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ суды.ДоговорКонтрагента) КАК ДоговорКонтрагента,
             |	&ДатаКон КАК Дата
             |ПОМЕСТИТЬ вт_Суды
             |ИЗ
             |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
             |			&ДатаКон,
             |			ДоговорКонтрагента.ВалютаВзаиморасчетов = &Руб
             |				И ДоговорКонтрагента.Владелец В
             |					(ВЫБРАТЬ
             |						СудыПоДебиторамДляДЗКЗ.Контрагент
             |					ИЗ
             |						втКонтрагенты КАК СудыПоДебиторамДляДЗКЗ
             |					ГДЕ
             |						СудыПоДебиторамДляДЗКЗ.ДолгНаСписание = ЛОЖЬ)) КАК суды
             |ГДЕ
             |	суды.СуммаВзаиморасчетовОстаток > 0
			 |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	&ДатаКон КАК Дата,
               |	Дефолт.СуммаВзаиморасчетовОстаток КАК СуммаДефолт
               |ПОМЕСТИТЬ вт_Дефолт
               |ИЗ
               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
               |			&ДатаКон,  ДоговорКонтрагента.ВалютаВзаиморасчетов = &Руб
               |			И ДоговорКонтрагента.Владелец В
               |				(ВЫБРАТЬ
               |					СудыПоДебиторамДляДЗКЗ.Контрагент
               |				ИЗ
               |					втКонтрагенты КАК СудыПоДебиторамДляДЗКЗ
               |				ГДЕ
               |					СудыПоДебиторамДляДЗКЗ.ДолгНаСписание)) КАК Дефолт
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |
			   
			     //		  |ПОМЕСТИТЬ вт_Просрочка
			
            //Запрос полностью скопирован из 102 отчета "как есть"
              |"+" ВЫБРАТЬ
                 |	СудыПоДебиторамДляДЗКЗ.Контрагент
                 |ПОМЕСТИТЬ втКонтрагентыДолгиНаСписание
                 |ИЗ
                 |	РегистрСведений.СудыПоДебиторамДляДЗКЗ КАК СудыПоДебиторамДляДЗКЗ
                 |ГДЕ
                 |	СудыПоДебиторамДляДЗКЗ.ДолгНаСписание
                 |;
                 |
                 |////////////////////////////////////////////////////////////////////////////////
                 |ВЫБРАТЬ
                 |	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо, ВыставилиПениПоСделке.Сделка.ДоговорКонтрагента.ОтветственноеЛицо) КАК Менеджер,
                 |	ВЫБОР
                 |		КОГДА ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец В
                 |				(ВЫБРАТЬ
                 |					втКонтрагентыДолгиНаСписание.Контрагент
                 |				ИЗ
                 |					втКонтрагентыДолгиНаСписание КАК втКонтрагентыДолгиНаСписание)
                 |			ТОГДА ""1. Долги на списание""
                 |		ИНАЧЕ ВЫБОР
                 |				КОГДА ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец В
                 |						(ВЫБРАТЬ
                 |							втКонтрагенты.Контрагент
                 |						ИЗ
                 |							втКонтрагенты КАК втКонтрагенты)
                 |					ТОГДА ""2. Суды""
                 |				ИНАЧЕ ВЫБОР
                 |						КОГДА ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение, ВыставилиПениПоСделке.Сделка.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение) ЕСТЬ NULL 
                 |							ТОГДА ""Менеджеры без подразделений""
                 |						ИНАЧЕ ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение, ВыставилиПениПоСделке.Сделка.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение)
                 |					КОНЕЦ
                 |			КОНЕЦ
                 |	КОНЕЦ КАК Подразделение,
                 |	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец, ВыставилиПениПоСделке.Сделка.ДоговорКонтрагента.Владелец) КАК Контрагент,
                 |	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента, ВыставилиПениПоСделке.Сделка.ДоговорКонтрагента) КАК ДоговорКонтрагента,
                 |	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток, 0) КАК СуммаВзаиморасчетов,
                 |	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток, 0) КАК СуммаУпр,
                 |	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.Сделка, ВыставилиПениПоСделке.Сделка) КАК Сделка,
                 |	ВЫБОР
                 |		КОГДА ВыставилиПениПоСделке.Сделка ЕСТЬ NULL 
                 |			ТОГДА 0
                 |		ИНАЧЕ ВыставилиПениПоСделке.Пени
                 |	КОНЕЦ КАК ВыставилиПеней,
                 |	ВЫБОР
                 |		КОГДА НЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка ЕСТЬ NULL 
                 |			ТОГДА ВЫБОР
                 |					КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
                 |						ТОГДА ВЫБОР
                 |								КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ОжидаемыйСрокПоставки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
                 |									ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
                 |								ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ОжидаемыйСрокПоставки
                 |							КОНЕЦ
                 |					КОГДА ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, 0) = 0
                 |							ИЛИ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
                 |						ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата
                 |					ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
                 |				КОНЕЦ
                 |		ИНАЧЕ ВЫБОР
                 |				КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
                 |					ТОГДА ВЫБОР
                 |							КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ОжидаемыйСрокПоставки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
                 |								ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
                 |							ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ОжидаемыйСрокПоставки
                 |						КОНЕЦ
                 |				КОГДА ЕСТЬNULL(ВыставилиПениПоСделке.Сделка.ДатаОплаты, 0) = 0
                 |						ИЛИ ВыставилиПениПоСделке.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
                 |					ТОГДА ВыставилиПениПоСделке.Сделка.Дата
                 |				ИНАЧЕ ВыставилиПениПоСделке.Сделка.ДатаОплаты
                 |			КОНЕЦ
                 |	КОНЕЦ КАК ДатаОплаты,
                 |	ВЫБОР
                 |		КОГДА НЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка ЕСТЬ NULL 
                 |			ТОГДА ВЫБОР
                 |					КОГДА РАЗНОСТЬДАТ(ВЫБОР
                 |								КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
                 |									ТОГДА ВЫБОР
                 |											КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ОжидаемыйСрокПоставки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
                 |												ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
                 |											ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ОжидаемыйСрокПоставки
                 |										КОНЕЦ
                 |								КОГДА ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, 0) = 0
                 |										ИЛИ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
                 |									ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата
                 |								ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
                 |							КОНЕЦ, &ДатаКон, ДЕНЬ) > 0
                 |						ТОГДА РАЗНОСТЬДАТ(ВЫБОР
                 |									КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
                 |										ТОГДА ВЫБОР
                 |												КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ОжидаемыйСрокПоставки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
                 |													ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
                 |												ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ОжидаемыйСрокПоставки
                 |											КОНЕЦ
                 |									КОГДА ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, 0) = 0
                 |											ИЛИ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
                 |										ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата
                 |									ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
                 |								КОНЕЦ, &ДатаКон, ДЕНЬ)
                 |					ИНАЧЕ 0
                 |				КОНЕЦ
                 |		ИНАЧЕ 0
                 |	КОНЕЦ КАК Просрочка,
                 |	ВЫБОР
                 |		КОГДА НЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка ЕСТЬ NULL 
                 |			ТОГДА ВЫБОР
                 |					КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка ССЫЛКА Документ.ЗаказПоПрессФормам
                 |						ТОГДА ВЫБОР
                 |								КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыЗаказовПоПрессформам.ПолностьюЗачтен)
                 |									ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток
                 |								ИНАЧЕ 0
                 |							КОНЕЦ
                 |					КОГДА РАЗНОСТЬДАТ(ВЫБОР
                 |									КОГДА ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, 0) = 0
                 |											ИЛИ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
                 |										ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата
                 |									ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты
                 |								КОНЕЦ, &ДатаКон, ДЕНЬ) > 0
                 |							ИЛИ ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.Дата, 0) = 0
                 |							ИЛИ ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток < 0
                 |						ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток
                 |					ИНАЧЕ 0
                 |				КОНЕЦ
                 |		ИНАЧЕ 0
                 |	КОНЕЦ КАК СуммаПросрочки,
                 |	ЕСТЬNULL(ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВидДоговора, ВыставилиПениПоСделке.Сделка.ДоговорКонтрагента.ВидДоговора) КАК ВидДоговора
                 |ПОМЕСТИТЬ А
                 |ИЗ
                 |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон, ДоговорКонтрагента.ВалютаВзаиморасчетов = &Руб) КАК ВзаиморасчетыСКонтрагентамиОстатки
                 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                 |			ВзаиморасчетовОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
                 |			СУММА(ВзаиморасчетовОстатки.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток
                 |		ИЗ
                 |			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон, ДоговорКонтрагента.ВалютаВзаиморасчетов = &Руб) КАК ВзаиморасчетовОстатки
                 |		
                 |		СГРУППИРОВАТЬ ПО
                 |			ВзаиморасчетовОстатки.ДоговорКонтрагента) КАК ВзаиморасчетыСКонтрагентамиОстаткиНужногоТипа
                 |		ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = ВзаиморасчетыСКонтрагентамиОстаткиНужногоТипа.ДоговорКонтрагента
                 |			И (ВзаиморасчетыСКонтрагентамиОстаткиНужногоТипа.СуммаВзаиморасчетовОстаток > 0)
                 |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                 |			НачисленныеПениОбороты.Сделка КАК Сделка,
                 |			СУММА(НачисленныеПениОбороты.ПениРасход) КАК Пени
                 |		ИЗ
                 |			РегистрНакопления.НачисленныеПени.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК НачисленныеПениОбороты
                 |		ГДЕ
                 |			НачисленныеПениОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
                 |		
                 |		СГРУППИРОВАТЬ ПО
                 |			НачисленныеПениОбороты.Сделка) КАК ВыставилиПениПоСделке
                 |		ПО ВзаиморасчетыСКонтрагентамиОстатки.Сделка = ВыставилиПениПоСделке.Сделка
                 |ГДЕ
                 |	ИСТИНА
                 |;
                 |
                 |////////////////////////////////////////////////////////////////////////////////
                 |ВЫБРАТЬ
                 |	&ДатаКон КАК Дата,
                 |	СУММА(А.СуммаПросрочки) КАК СуммаПросрочки
           	      |ПОМЕСТИТЬ вт_Просрочка
			     |ИЗ
                 |	А КАК А"+";
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	Суды.суммаСуды / &Коэф КАК суммаСуды,
               |	Дефолт.СуммаДефолт / &Коэф КАК СуммаДефолт,
               |	Просрочка.СуммаПросрочки / &Коэф КАК СуммаПросрочки
               |ИЗ
               |	вт_Просрочка КАК Просрочка
               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
               |			вт_Суды.Дата КАК Дата,
               |			вт_Суды.суммаСуды КАК суммаСуды
               |		ИЗ
               |			вт_Суды КАК вт_Суды) КАК Суды
               |		ПО Просрочка.Дата = Суды.Дата
               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
               |			вт_Дефолт.Дата КАК Дата,
               |			вт_Дефолт.СуммаДефолт КАК СуммаДефолт
               |		ИЗ
               |			вт_Дефолт КАК вт_Дефолт) КАК Дефолт
               |		ПО Просрочка.Дата = Дефолт.Дата";
			   
		Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(дата1,-1) );
		Запрос.УстановитьПараметр("ДатаКон", дата1);
		Запрос.УстановитьПараметр("Коэф", Коэф); //млн.
		Запрос.УстановитьПараметр("Руб", справочники.валюты.НайтиПоКоду("643") );
		табл = Запрос.Выполнить().Выгрузить();
        стр1 = табл[0];
		возврат стр1;
КонецФункции

функция получитьОборотыПродаж(Дата0, Дата1)
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	СУММА(ПродажиОбороты.СтоимостьОборот / &Коэф) КАК СуммаПродаж
	              //  |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажиОбороты.ДоговорКонтрагента) КАК ДоговорКонтрагента
	                |ИЗ
	                |	РегистрНакопления.Продажи.Обороты(&Дата0, &Дата1, , ДоговорКонтрагента.ВалютаВзаиморасчетов = &Руб) КАК ПродажиОбороты";
	 
	 Запрос.УстановитьПараметр("Дата0", Дата0);
	 Запрос.УстановитьПараметр("Дата1", Дата1-1); //до  23:59:59 !
	 Запрос.УстановитьПараметр("Коэф", Коэф);
	 Запрос.УстановитьПараметр("Руб", справочники.валюты.НайтиПоКоду("643"));
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Если Выборка.Следующий() тогда
		 рез = выборка.СуммаПродаж;
	 иначе рез = 0;
	 КонецЕсли;
	 
	 возврат рез;
КонецФункции 
	
процедура посчитатьКоэффициенты(стрТ, КоэфПроцент=100)
	стрТ.Кдеф   = КоэфПроцент*стрТ.СуммаДефолт / стрТ.СуммаПродаж;
	стрТ.Ксуд   = КоэфПроцент*стрТ.СуммаСуды / стрТ.СуммаПродаж;
	стрТ.Кпроср = КоэфПроцент*стрТ.СуммаПросрочки / стрТ.СуммаПродаж;
КонецПроцедуры

процедура нарисоватьДиаграмму()
	
	ЭлементыФормы.Диаграмма.Очистить();
 
//-------------рисуем линии-----------------------------------
ЭлементыФормы.Диаграмма.Обновление = ложь;

	ЭлементыФормы.Диаграмма.Серии.Добавить("К дефолт,%");
//	
	ЭлементыФормы.Диаграмма.Серии.Добавить("К суды,%");
//	
	ЭлементыФормы.Диаграмма.Серии.Добавить("К просрочки, %");
	
    ЭлементыФормы.Диаграмма.Серии[0].Цвет = webЦвета.Зеленый; 	
    ЭлементыФормы.Диаграмма.Серии[1].Цвет = webЦвета.Синий; 
    ЭлементыФормы.Диаграмма.Серии[2].Цвет = webЦвета.Красный; //ярко-красный	
	k=0;	
	для j=0 по Таблица.Количество()-1 цикл
		Если Таблица[j].СуммаПродаж=0 тогда
			продолжить;
		КонецЕсли; 	
	ЭлементыФормы.Диаграмма.Точки.Добавить(Формат(Таблица[j].Дата,"ДФ='MMMM ГГГГ'"));
	k=k+1;
	КонецЦикла;

для i=0 по 2 цикл
	k=0;	
	для j=0 по Таблица.Количество()-1 цикл
		Если Таблица[j].СуммаПродаж=0 тогда
			продолжить;
		КонецЕсли; 	
//		сообщить(строка(k)+" ("+строка(i)+") = "+ строка(Таблица[j][i+5]) );
    ЭлементыФормы.Диаграмма.УстановитьЗначение(k, i, Таблица[j][i+5] );
	k=k+1;
	КонецЦикла;
КонецЦикла;
ЭлементыФормы.Диаграмма.ОбластьЗаголовка.Текст = "Динамика коэффициентов (%)";
ЭлементыФормы.Диаграмма.Обновление = истина;


//================================== Диаграмма2 ===============================
	ЭлементыФормы.Диаграмма2.Очистить();
 
//-------------рисуем линии-----------------------------------
ЭлементыФормы.Диаграмма2.Обновление = ложь;
Кр = ?(Коэф=1000,"тыс.", ?(Коэф=1000000,"млн.", ?(Коэф<>1,строка(Коэф),"")));
	ЭлементыФормы.Диаграмма2.Серии.Добавить("Сумма дефолт, "+Кр+"руб.");
	ЭлементыФормы.Диаграмма2.Серии.Добавить("Сумма суды, "+Кр+"руб.");
	ЭлементыФормы.Диаграмма2.Серии.Добавить("Сумма просрочки, "+Кр+"руб.");
	
    ЭлементыФормы.Диаграмма2.Серии[0].Цвет = webЦвета.Зеленый; 	
    ЭлементыФормы.Диаграмма2.Серии[1].Цвет = webЦвета.Синий; 
    ЭлементыФормы.Диаграмма2.Серии[2].Цвет = webЦвета.Красный; //ярко-красный	
	k=0;	
	для j=0 по Таблица.Количество()-1 цикл
		Если Таблица[j].СуммаПродаж<>0 тогда
			продолжить;
		КонецЕсли; 	
	ЭлементыФормы.Диаграмма2.Точки.Добавить(Формат(Таблица[j].Дата,"ДФ='MMMM ГГГГ'"));
	k=k+1;
	КонецЦикла;

для i=0 по 2 цикл
	k=0;	
	для j=0 по Таблица.Количество()-1 цикл
		Если Таблица[j].СуммаПродаж<>0 тогда
			продолжить;
		КонецЕсли; 	
//		сообщить(строка(k)+" ("+строка(i)+") = "+ строка(Таблица[j][i+5]) );
    ЭлементыФормы.Диаграмма2.УстановитьЗначение(k, i, Таблица[j][i+1] );
	k=k+1;
	КонецЦикла;
КонецЦикла;
ЭлементыФормы.Диаграмма2.ОбластьЗаголовка.Текст = "Динамика сумм ("+Кр+"руб.)";
ЭлементыФормы.Диаграмма2.Обновление = истина;


КонецПроцедуры


//=============== на форме ============================
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ТаблицаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если данныеСтроки.Кдеф >МаксКдэф тогда
		ОформлениеСтроки.Ячейки.Кдеф.ЦветТекста = webЦвета.Красный;
		ОформлениеСтроки.Ячейки.Кдеф.Шрифт = новый Шрифт(ОформлениеСтроки.Ячейки.Кдеф.Шрифт,,,Истина);
		ОформлениеСтроки.ЦветФона = webЦвета.Желтый;
	КонецЕсли;	
	Если данныеСтроки.Ксуд >МаксКсуд тогда
		ОформлениеСтроки.Ячейки.Ксуд.ЦветТекста = webЦвета.Красный;
		ОформлениеСтроки.Ячейки.Ксуд.Шрифт = новый Шрифт(ОформлениеСтроки.Ячейки.Ксуд.Шрифт,,,Истина);
		ОформлениеСтроки.ЦветФона = webЦвета.Желтый;
	КонецЕсли;	
	Если данныеСтроки.Кпроср >МаксКпроср тогда
		ОформлениеСтроки.Ячейки.Кпроср.ЦветТекста = webЦвета.Красный;
		ОформлениеСтроки.Ячейки.Кпроср.Шрифт = новый Шрифт(ОформлениеСтроки.Ячейки.Кпроср.Шрифт,,,Истина);
		ОформлениеСтроки.ЦветФона = webЦвета.Желтый;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
		
	МаксКдэф = константы.Кдеф.Получить();
	МаксКсуд = константы.Ксуд.Получить(); //0.10;
	МаксКпроср = константы.Кпроср.Получить(); // 10;
	
	Коэф = 1000000;
	Флажок1 = истина;
	
	НачПериода = НачалоГода( ТекущаяДата() );
	КонПериода = КонецДня( ТекущаяДата() );

КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.Коэф.СписокВыбора.Добавить(1);
	ЭлементыФормы.Коэф.СписокВыбора.Добавить(1000);
	ЭлементыФормы.Коэф.СписокВыбора.Добавить(1000000);
	КоэфПриИзменении(неопределено);

КонецПроцедуры

Процедура КоэфПриИзменении(Элемент)
	если Коэф = 1000000000 тогда
		ЭлементыФормы.Флажок1.Заголовок = "Показывать суммы на начало месяца (в млрд. руб)";
	Иначеесли Коэф = 1000000 тогда
		ЭлементыФормы.Флажок1.Заголовок = "Показывать суммы на начало месяца (в млн. руб)";
	иначеесли Коэф = 1000 тогда
		ЭлементыФормы.Флажок1.Заголовок = "Показывать суммы на начало месяца (в тыс. руб)";
	иначеесли Коэф = 1 тогда
		ЭлементыФормы.Флажок1.Заголовок = "Показывать суммы на начало месяца (в руб)";
	Иначе
		ЭлементыФормы.Флажок1.Заголовок = "Показывать суммы на начало месяца руб. х ";
	КонецЕсли;	
КонецПроцедуры


//=================изменение коэффициентов===========================================

Процедура МаксКдэфРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = 	Элемент.Значение  + Направление * 0.01;
	МаксКдэфПриИзменении(Элемент);
КонецПроцедуры

Процедура МаксКсудРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = 	Элемент.Значение  + Направление * 0.01;
	МаксКсудПриИзменении(Элемент);
КонецПроцедуры
 
Процедура МаксКпросрРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = 	Элемент.Значение  + Направление * 0.5;
	МаксКпросрПриИзменении(Элемент);
КонецПроцедуры


Процедура МаксКдэфПриИзменении(Элемент)
	константы.Кдеф.Установить(МаксКдэф);
КонецПроцедуры

Процедура МаксКсудПриИзменении(Элемент)
	константы.Ксуд.Установить(МаксКсуд);
КонецПроцедуры

Процедура МаксКпросрПриИзменении(Элемент)
	константы.Кпроср.Установить(МаксКпроср);
КонецПроцедуры

 
