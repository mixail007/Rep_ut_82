
Процедура ДопРаходПриИзменении(Элемент)
	Фильтр = Истина;
	ЭлементыФормы.ПолеВвода2.Доступность=Элементыформы.ДопРаход.Значение <> "Таможенная пошлина";
	Элементыформы.Значение.Доступность = Элементыформы.ДопРаход.Значение <> "Таможенная пошлина";
	
КонецПроцедуры

Процедура ПолеВвода2ПриИзменении(Элемент)
	Фильтр = Истина;
КонецПроцедуры

Процедура ЗначениеПриИзменении(Элемент)
	Фильтр = Истина;
КонецПроцедуры

Процедура ДействияФормыСформировать(Кнопка)
		
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	Настройки.Отбор.Элементы.Очистить();
	
	Если Фильтр тогда
		НовыйЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДопРасход"); 
		новыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных["Равно"];
		Если  Элементыформы.ДопРаход.Значение = "Прочие" или Элементыформы.ДопРаход.Значение = "Комиссия" тогда		
			НовыйЭлементОтбора.ПравоеЗначение = Элементыформы.ДопРаход.Значение;
		иначе
			номенклатура = справочники.Номенклатура.НайтиПоНаименованию(Элементыформы.ДопРаход.Значение);	
			НовыйЭлементОтбора.ПравоеЗначение = номенклатура;	
		конецесли;
		
		Если  Элементыформы.ДопРаход.Значение <> "Таможенная пошлина" тогда	
			НовыйЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СуммаФакт"); 
			новыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных[СтрЗаменить((Строка(ВидСравнения))," ","")];;
			НовыйЭлементОтбора.ПравоеЗначение = Значение;
			
			Настройки.выбор.Элементы[1].Использование=ложь;//1

		иначе	
			НовыйЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СуммаФакт"); 
			новыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных["Больше"];
			НовыйЭлементОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ФобФрахт");
			
			Настройки.выбор.Элементы[1].Использование=Истина;//1

		конецесли;
	конецЕсли;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки,истина);
	ЭлементыФормы.Результат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ЭлементыФормы.Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
		

КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаН"));
ПараметрСКД.Использование = истина ;
ПараметрСКД.Значение  = начПериода;

ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаК"));
ПараметрСКД.Использование = истина ;
ПараметрСКД.Значение  = КонецДня(КонПериода);

КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаН"));
ПараметрСКД.Использование = истина ;
ПараметрСКД.Значение  = начПериода;
КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаК"));
ПараметрСКД.Использование = истина ;
ПараметрСКД.Значение  = КонецДня(КонПериода);
КонецПроцедуры
