
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешнийОтчетОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗатратыОбороты.Период КАК Период,
	|	ЗатратыОбороты.СтатьяЗатрат,
	|	ЗатратыОбороты.Регистратор КАК Регистратор,
	|	ЗатратыОбороты.Регистратор.Контрагент КАК Контрагент,
	|	ПОДСТРОКА(ЗатратыОбороты.Регистратор.Комментарий, 1, 100) КАК Комментарий,
	|	ЗатратыОбороты.СуммаОборот КАК Сумма
	|ИЗ
	|	РегистрНакопления.Затраты.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Регистратор,
	|			(НЕ СтатьяЗатрат В ИЕРАРХИИ (&ПроцентыПоКредитам))
	|				И СтатьяЗатрат <> &НалогНаПрибыльГор
	|				И СтатьяЗатрат <> &НалогНаПрибыльОбл
	|				И СтатьяЗатрат <> &НалогНаПрибыльФед
	|				И СтатьяЗатрат <> &НалогНДС
	|				И НоменклатурнаяГруппа = &ПустаяНоменклатурнаяГруппа
	|				И (НЕ Подразделение В ИЕРАРХИИ (&Аренда))) КАК ЗатратыОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";

	Запрос.УстановитьПараметр("Аренда", Справочники.Подразделения.Аренда);
	Запрос.УстановитьПараметр("КонДата", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("НалогНаПрибыльГор", Справочники.СтатьиЗатрат.НайтиПоКоду("О0175"));
	Запрос.УстановитьПараметр("НалогНаПрибыльОбл", Справочники.СтатьиЗатрат.НайтиПоКоду("О0172"));
	Запрос.УстановитьПараметр("НалогНаПрибыльФед", Справочники.СтатьиЗатрат.НайтиПоКоду("О0174"));
	Запрос.УстановитьПараметр("НалогНДС", Справочники.СтатьиЗатрат.НайтиПоКоду("О0177"));
	Запрос.УстановитьПараметр("НачДата", НачПериода);
	Запрос.УстановитьПараметр("ПроцентыПоКредитам", Справочники.СтатьиЗатрат.ПроцентыПоКредитамИЗаймам);
	Запрос.УстановитьПараметр("ПустаяНоменклатурнаяГруппа", Справочники.НоменклатурныеГруппы.ПустаяСсылка());

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры
