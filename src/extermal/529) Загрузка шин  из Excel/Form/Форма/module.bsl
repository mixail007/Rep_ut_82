

Процедура Кнопка1Нажатие(Элемент)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Заголовок = "Прочитать табличный документ из файла";
	ДиалогВыбораФайла.Фильтр    = "Лист Excel (*.xls)|*.xls";
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		//		ТабличныйДокумент = ЭлементыФормы.ТабличныйДокумент;
		ФайлНаДиске = Новый Файл(ДиалогВыбораФайла.ПолноеИмяФайла);
		Если нРег(ФайлНаДиске.Расширение) = ".xls" Тогда
			мПрочитатьТабличныйДокументИзExcel(ДиалогВыбораФайла.ПолноеИмяФайла,1);
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры


Функция мПрочитатьТабличныйДокументИзExcel(ИмяФайла, НомерЛистаExcel = 1) Экспорт
	
	//СвойствоУкомплектованКрепежом = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90164");
	//СвойствоВидУпаковки           = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90165");
	//СвойствоЦвет                  = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90166");
	//СвойствоКодСлика              = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90147");
	//СвойствоМаксимальнаяНагрузка  = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90157");
	СвойствоТипШтрихкода          = ПланыВидовХарактеристик.ТипыШтрихкодов.НайтиПоКоду("00001");  
	
	ТаблицаЦен=Новый ТаблицаЗначений;
	ТаблицаЦен.Колонки.Добавить("Номенклатура");
	ТаблицаЦен.Колонки.Добавить("Цена");
	
	НачатьТранзакцию();
	
	xlLastCell = 11;
	
	ВыбФайл = Новый Файл(ИмяФайла);
	Если НЕ ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ИмяФайла);
		Состояние("Обработка файла Microsoft Excel...");
		ExcelЛист = Excel.Sheets(1);
	Исключение
		Сообщить("Ошибка. Возможно неверно указан номер листа книги Excel.");
		Возврат ложь;
		
	КонецПопытки;	
	
	ActiveCell = Excel.ActiveCell.SpecialCells(xlLastCell);
	RowCount = ActiveCell.Row;
	Если ЭлементыФормы.ПерваяСтрока.Значение > RowCount Тогда
		ЭлементыФормы.ПерваяСтрока.Значение = RowCount;
	КонецЕсли;	
	
	
	ColumnCount = ActiveCell.Column;
	
	Сообщить("Найдено "+строка(RowCount)+" строк и "+строка(ColumnCount)+" столбцов");
		
	Если ЭлементыФормы.перваяСтрока.Значение = 0 тогда
		ЭлементыФормы.перваяСтрока.Значение = 2; 
	КонецЕсли;
	
	сообщить("Начало ----------"+строка(ТекущаяДата())+"---------" );
	
	Для Row = перваяСтрока По КоличествоСтрок Цикл
		
		ОбработкаПрерыванияПользователя();
		
		Состояние("Идет загрузка из Excel: "+строка(Row)+" / "+строка(RowCount)+" ("+строка(окр(Row*100/RowCount,1))+"%)");
		
		//если уже заполнен код - пропускаем!
		Если СокрЛП(ExcelЛист.Cells(Row,Код1С).Value) <> "" Тогда //код
			Продолжить;
		КонецЕсли;
		наимТипоРазмер =  СокрЛП(ExcelЛист.Cells(Row,Типоразмер).Value);
		наимТипоРазмер =СтрЗаменить(наимТипоРазмер,"Z","");
		типоразмерСпр = Справочники.Типоразмеры.НайтиПоНаименованию(наимТипоРазмер);
		модельСпр = Справочники.МоделиТоваров.НайтиПоНаименованию(СокрЛП(ExcelЛист.Cells(Row,Модель).Value));
		если МодельСпр.Пустая() Тогда
			модельСпр = Справочники.МоделиТоваров.СоздатьЭлемент();
			модельСпр.Наименование =СокрЛП(ExcelЛист.Cells(Row,Модель).Value);
			модельСпр.Записать();
		конецЕсли;	
			
		индексСпр = СокрЛП(ExcelЛист.Cells(Row,Индекс).Value);
		АртикулСпр = СокрЛП(Строка(Формат(ExcelЛист.Cells(Row,Артикул).Value, "ЧГ=0")));

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
		|	И Номенклатура.Модель = &Модель
		|	И Номенклатура.Типоразмер = &Типоразмер
		|	И Номенклатура.Наименование ПОДОБНО &Наименование";

	Запрос.УстановитьПараметр("Модель", МодельСпр.Ссылка);
	Запрос.УстановитьПараметр("Наименование", "%"+индексСпр+"%");
	Запрос.УстановитьПараметр("Типоразмер", ТипоразмерСпр);

	Результат = Запрос.Выполнить();
	Если не результат.Пустой() Тогда
		// артикул у существующей номенклатуры мог измениться
		Выборка = Результат.Выбрать();
		пока Выборка.Следующий() Цикл
			наличиеШипаСпр = СокрЛП(ExcelЛист.Cells(Row,НаличиеШипа).Value);
			  если	Найти(" шип",Выборка.ссылка.Наименование)<> 0 или Найти(" ШИП",Выборка.ссылка.Наименование)<> 0  или Найти(" Шип",Выборка.ссылка.Наименование)<> 0  тогда
				 если не ЗначениеЗаполнено(наличиеШипаСпр) тогда 
					продолжить; 
				 конецЕсли;	 
			  иначе		 
				 если ЗначениеЗаполнено(наличиеШипаСпр) тогда 
					продолжить; 
				 конецЕсли;	 
			  конецЕсли;  
			Если СокрЛП(Выборка.Ссылка.Артикул) <> АртикулСпр Тогда
				НомОб = Выборка.Ссылка.получитьОбъект();
				НомОб.артикул = АртикулСпр;
				НомОб.записать();
				сообщить("У номенклатуры "+Выборка.ссылка.код+" "+ Выборка.ссылка.наименование+" исправлен артикул" );
				прервать;
			конецЕсли;	
		конецЦикла;
		продолжить;
	конецЕсли;	
		
		
		СпрОбъект = Справочники.Номенклатура.СоздатьЭлемент();	
		СпрОбъект.Наименование            = ""+Производитель+" "+СокрЛП(ExcelЛист.Cells(Row,Модель).Value)+" "+наимТипоРазмер+ " "+СокрЛП(ExcelЛист.Cells(Row,Индекс).Value)+" "+СокрЛП(ExcelЛист.Cells(Row,НаличиеШипа).Value);
		СпрОбъект.НаименованиеПолное      = "А/шина "+Производитель+" "+СокрЛП(ExcelЛист.Cells(Row,Модель).Value)+" "+наимТипоРазмер+ " "+СокрЛП(ExcelЛист.Cells(Row,Индекс).Value)+" "+СокрЛП(ExcelЛист.Cells(Row,НаличиеШипа).Value);
		
		
		СпрОбъект.ТипоРазмер              = ТипоразмерСпр;
		СпрОбъект.Модель                  = МодельСпр.Ссылка;
		СпрОбъект.ВидТовара               = Перечисления.ВидыТоваров.Шины;
		СпрОбъект.Родитель            	  = Родитель;
		СпрОбъект.БазоваяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
		СпрОбъект.НоменклатурнаяГруппа    = НоменклатурнаяГруппа;
		СпрОбъект.Производитель           = Производитель;
		СпрОбъект.СтавкаНДС               = Перечисления.СтавкиНДС.НДС18;
		СпрОбъект.Комментарий			  = Комментарий;
		СпрОбъект.Записать();
		Сообщить("("+СпрОбъект.Код+") "+ СпрОбъект.Наименование);
		СпрОбъект.Артикул				  = СокрЛП(Строка(Формат(ExcelЛист.Cells(Row,Артикул).Value, "ЧГ=0")));
		СпрОбъект.ОсновнойПоставщик		  = ОснованойПоставщик;
		СпрОбъект.Записать();
//		
//		//####################################### ЕДИНИЦЫ ИЗМЕРЕНИЯ #######################################
		СпрЕдИзм = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
		СпрЕдИзм.Владелец = СпрОбъект.Ссылка;
		СпрЕдИзм.ЕдиницаПоКлассификатору =  СпрОбъект.БазоваяЕдиницаИзмерения;
		СпрЕдИзм.Коэффициент= 1;
		СпрЕдИзм.Наименование = "шт";
		СпрЕдИзм.Вес = ?(Вес>0, СокрЛП(ExcelЛист.Cells(Row,Вес).Value), 0);
		СпрЕдИзм.Объем = ?(Объем>0, СокрЛП(ExcelЛист.Cells(Row,Объем).Value), 0);
		СпрЕдИзм.УстановитьНовыйКод(Константы.ПрефиксКодаЕдиниц.Получить());
		СпрЕдИзм.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
		СпрЕдИзм.Записать();
		
		СпрОбъект.ЕдиницаХраненияОстатков = СпрЕдИзм.Ссылка;
		СпрОбъект.ЕдиницаДляОтчетов = СпрЕдИзм.Ссылка;
		
		СпрОбъект.Записать();
		
		//сезонность
		  СезонСпр = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(Сезон);
		 Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
		 Запись.Объект = СпрОбъект.Ссылка;
		 Запись.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90197");
		 Запись.Значение = СезонСпр;
		 Запись.Записать();
		 
		////штрихкод
		//ТекЗапись = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
		//ТекЗапись.Код = СпрОбъект.Код; //+++ 16.03.2012 ПолучитьНовыйКодДляШтрихКода();
		//Штрихкод = ПолучитьНовыйКодДляШтрихКодаЯШТ(СпрОбъект); 
		//
		//ТекЗапись.ШтрихКод = Штрихкод ;
		//ТекЗапись.Владелец              = СпрОбъект.Ссылка;
		//ТекЗапись.ЕдиницаИзмерения      = СпрОбъект.ЕдиницаХраненияОстатков;
		//ТекЗапись.ТипШтрихкода          = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
		//ТекЗапись.Качество              = Справочники.Качество.Новый;
		//ТекЗапись.Записать();

		
		
		//		
//		//####################################### ЦЕНЫ #######################################
//		//Попытка	
//		//	Цена=Число(ExcelЛист.Cells(Row,10).Value);
//		//	Если  Цена > 0 Тогда
//		//		
//		//		строкаЦена=ТаблицаЦен.Добавить();
//		//		строкаЦена.Номенклатура = СпрОбъект.Ссылка; 
//		//		строкаЦена.Цена = Цена; 
//		//	КонецЕсли;
//		//Исключение	
//		//КонецПопытки;
//		
//		//####################################### ЗНАЧЕНИЕ СВОЙСТВ ОБЪЕКТОВ #######################################
//		//Вид упаковки
//		МенеджерЗначенияСвойств = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
//		
//		МенеджерЗначенияСвойств.Объект   = СпрОбъект.Ссылка;
//		МенеджерЗначенияСвойств.Свойство = СвойствоВидУпаковки;
//		МенеджерЗначенияСвойств.Прочитать();	
//		
//		ВидУпаковкиКоробка=Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию("коробка");
//		
//		Если не МенеджерЗначенияСвойств.Выбран() Тогда
//			МенеджерЗначенияСвойств.Объект   = СпрОбъект.Ссылка;
//			МенеджерЗначенияСвойств.Свойство = СвойствоВидУпаковки;
//			МенеджерЗначенияСвойств.Значение = ВидУпаковкиКоробка;
//			МенеджерЗначенияСвойств.Записать();
//		КонецЕсли;
//		// Цвет
//		КодЦвет="";
//		
//		КодЦвет=СтрокаJ; //ОК
////		
////		
//		Если СокрЛП(КодЦвет)<>"" Тогда
//			МенеджерЗначенияСвойств = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
//			
//			МенеджерЗначенияСвойств.Объект   = СпрОбъект.Ссылка;
//			МенеджерЗначенияСвойств.Свойство = СвойствоЦвет;
//			МенеджерЗначенияСвойств.Прочитать();	
//			
//			
//			Если не МенеджерЗначенияСвойств.Выбран() Тогда
//				МенеджерЗначенияСвойств.Объект   = СпрОбъект.Ссылка;
//				МенеджерЗначенияСвойств.Свойство = СвойствоЦвет;
//				МенеджерЗначенияСвойств.Значение = КодЦвет;
//				МенеджерЗначенияСвойств.Записать();
//			КонецЕсли;
//			
//		КонецЕсли;
//		
//		//####################################### ШТРИХКОД #######################################
//		
		//ШтрихКод = Строка(Формат(ExcelЛист.Cells(Row,ШтрихКод1С).Value, "ЧГ=0"));
		//
		//Если СтрДлина(Строка(ШтрихКод)) > 1 Тогда
		//	МенеджерШтрихкод = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
		//	
		//	МенеджерШтрихкод.Владелец         = СпрОбъект.Ссылка;
		//	МенеджерШтрихкод.Штрихкод         = Строка(ШтрихКод);
		//	МенеджерШтрихкод.ТипШтрихкода     = СвойствоТипШтрихкода;
		//	МенеджерШтрихкод.ЕдиницаИзмерения = СпрЕдИзм.Ссылка; 
		//	МенеджерШтрихкод.Качество         = Справочники.Качество.Новый;
		//	МенеджерШтрихкод.Прочитать();	
		//	
		//	Если не МенеджерШтрихкод.Выбран() Тогда
		//		МенеджерШтрихкод.Владелец         = СпрОбъект.Ссылка;
		//		МенеджерШтрихкод.Код              = Число(СпрОбъект.Ссылка.Код);
		//		МенеджерШтрихкод.Штрихкод         = Строка(ШтрихКод);
		//		МенеджерШтрихкод.ТипШтрихкода     = СвойствоТипШтрихкода;
		//		МенеджерШтрихкод.ЕдиницаИзмерения = СпрЕдИзм.Ссылка; 
		//		МенеджерШтрихкод.Качество         = Справочники.Качество.Новый;
		//		МенеджерШтрихкод.Записать();
		//	КонецЕсли;
		//КонецЕсли;

		ExcelЛист.Cells(Row,Код1С).Value = СпрОбъект.Код;
		//ExcelЛист.Cells(Row,ШтрихКод1С).Value = """"+ШтрихКод+"""";
		
	КонецЦикла;
//	
//	//####################################### УСТАНОВКА ЦЕН НОМЕНКЛАТУРЫ #######################################
//	//Если ТаблицаЦен.Количество()>0 Тогда
//	//	
//	//	ДокУЦН = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
//	//	ДокУЦН.Дата = ТекущаяДата();
//	//	
//	//	ТипЦенБазовая = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008");
//	//	
//	//	строкаТипыЦен = ДокУЦН.ТипыЦен.Добавить();
//	//	строкаТипыЦен.ТипЦен = ТипЦенБазовая;
//	//	
//	//	//
//	//	Для  счСтрок=0 по  ТаблицаЦен.Количество()-1 Цикл
//	//		строкаТовары                  = ДокУЦН.Товары.Добавить();
//	//		строкаТовары.Номенклатура     = ТаблицаЦен[счСтрок].Номенклатура;
//	//		строкаТовары.Цена             = ТаблицаЦен[счСтрок].Цена;
//	//		строкаТовары.Валюта           = Константы.ВалютаУправленческогоУчета.Получить();
//	//		строкаТовары.ЕдиницаИзмерения = строкаТовары.Номенклатура.ЕдиницаХраненияОстатков;
//	//		строкаТовары.ТипЦен           = ТипЦенБазовая;
//	//		
//	//	КонецЦикла; 
//	//	//	
//	//	ДокУЦН.ПолучитьФорму().Открыть();	
//	//	//	
//	//КонецЕсли;
//	
	ЗафиксироватьТранзакцию();
	
	Excel.WorkBooks.Close();
	Excel = 0;
	сообщить("Конец--------"+строка(ТекущаяДата())+"-------" );	
	Возврат Истина;
	
КонецФункции // ()
 функция ПолучитьНовыйКодДляШтрихКодаЯШТ(Спр)

Если стрДлина(Спр.Код)<7 тогда
	код1 = Формат(число(Спр.Код), "ЧЦ=7; ЧВН=");
иначе 
	код1 = Спр.код;
КонецЕсли;	
	
ШтрихКод = "05000"+ Спр.Код;
ШтрихКод = ШтрихКод + КонтрольныйСимволEAN(ШтрихКод, 13);

возврат ШтрихКод;

КонецФункции


Процедура ПриОткрытии()
	
	ПерваяСтрока = 2;
	Комментарий = "Загружен из Excel";
	
КонецПроцедуры

Процедура СезонНачалоВыбора(Элемент, СтандартнаяОбработка)
	
КонецПроцедуры



