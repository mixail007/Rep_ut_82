
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
КонецПроцедуры

Процедура ПриЗакрытии()
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок, КонПериода, НачПериода);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок, КонПериода, НачПериода) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента.ОтветственноеЛицо КАК ОснМенеджерКонтрагента,
	|	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента.Владелец КАК ДоговорКонтрагентаВладелец,
	|	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовНачальныйОстаток КАК СуммаВзаиморасчетовНачальныйОстаток,
	|	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовПриход,
	|	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовРасход,
	|	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток КАК СуммаВзаиморасчетовКонечныйОстаток,
	|	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента КАК ОснМенеджер
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(&НачПериода, &КонПериода, , , ) КАК ВзаиморасчетыСКонтрагентамиОстаткиИОбороты
	|ГДЕ
	|	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток <> 0
	|	И ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовПриход = 0
	|	И ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовРасход = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОснМенеджерКонтрагента,
	|	ДоговорКонтрагентаВладелец,
	|	ДоговорКонтрагента
	|ИТОГИ
	|	СУММА(СуммаВзаиморасчетовНачальныйОстаток),
	|	СУММА(СуммаВзаиморасчетовКонечныйОстаток)
	|ПО
	|	ОснМенеджерКонтрагента,
	|	ДоговорКонтрагентаВладелец,
	|	ДоговорКонтрагента
	|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("КонПериода", КонПериода);
	Запрос.УстановитьПараметр("НачПериода", НачПериода);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	
	ОбластьОснМенеджерКонтрагента = Макет.ПолучитьОбласть("ОснМенеджерКонтрагента");
	
	ОбластьДоговорКонтрагентаВладелец = Макет.ПолучитьОбласть("ДоговорКонтрагентаВладелец");
	ОбластьДоговорКонтрагента = Макет.ПолучитьОбласть("ДоговорКонтрагента");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОснМенеджерКонтрагента = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); //29.08.2016	
	Пока ВыборкаОснМенеджерКонтрагента.Следующий() цикл
	ОбластьОснМенеджерКонтрагента.Параметры.Заполнить(ВыборкаОснМенеджерКонтрагента);
		ТабДок.Вывести(ОбластьОснМенеджерКонтрагента, ВыборкаОснМенеджерКонтрагента.Уровень());

		
	ВыборкаДоговорКонтрагентаВладелец = ВыборкаОснМенеджерКонтрагента.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаДоговорКонтрагентаВладелец.Следующий() Цикл
		ОбластьДоговорКонтрагентаВладелец.Параметры.Заполнить(ВыборкаДоговорКонтрагентаВладелец);
		//ОбластьДоговорКонтрагентаВладелец.Параметры.ОснМенеджер = ВыборкаДоговорКонтрагентаВладелец.ДоговорКонтрагентаВладелец.ОсновнойМенеджерКонтрагента;
		ТабДок.Вывести(ОбластьДоговорКонтрагентаВладелец, ВыборкаДоговорКонтрагентаВладелец.Уровень());

		ВыборкаДоговорКонтрагента = ВыборкаДоговорКонтрагентаВладелец.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаДоговорКонтрагента.Следующий() Цикл
			ОбластьДоговорКонтрагента.Параметры.Заполнить(ВыборкаДоговорКонтрагента);
			ТабДок.Вывести(ОбластьДоговорКонтрагента, ВыборкаДоговорКонтрагента.Уровень());
            
			//ВыборкаДетали = ВыборкаДоговорКонтрагента.Выбрать();

			//Пока ВыборкаДетали.Следующий() Цикл
			//	ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
			//	ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
			//КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	КонецЦикла; //29.08.2016
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ВыбПериодНажатие1(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры




