
функция Печать(UIDКонтрагента="", ДатаСреза=неопределено, таблДок=неопределено ) Экспорт // для вызова из Коннект-24
	
	если таблДок=неопределено тогда
		таблДок = новый ТабличныйДокумент;
	КонецЕсли;
	
	Если UIDКонтрагента="" тогда
		возврат таблДок;
	КонецЕсли;
	
	
	ПарамДата =ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Период");
	ПарамДата.Использование = Истина;
	Если ДатаСреза=неопределено тогда
   		ПарамДата.Значение = КонецДня( ТекущаяДата() );
	иначе
		ПарамДата.Значение =КонецДня( ДатаСреза );
	КонецЕсли;	

	
//=================== установка отбора по контрагенту ========================	
	элОтбора1 = Новый ПолеКомпоновкиДанных("Контрагент");
	новыйUID = новый УникальныйИдентификатор( UIDКонтрагента );
	знач1     = справочники.Контрагенты.ПолучитьСсылку(новыйUID);
	Если знач1=неопределено или знач1=справочники.Контрагенты.ПустаяСсылка() тогда
		возврат таблДок;
	КонецЕсли;
	
	
	N = ЭтотОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество();
	НеНашлиЭл1 = Истина;
	для i=0 по N-1 цикл
		эл1 = ЭтотОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы[i];
		Если эл1.ЛевоеЗначение = элОтбора1 Тогда
			эл1.Использование = Истина; //включаем всегда!
			эл1.ПравоеЗначение = знач1;
			//Если i>0 Тогда // сдвинем в начало
			//	отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Сдвинуть(эл1, -i);
			//КонецЕсли;	
		    НеНашлиЭл1 = Ложь;
			Прервать;
		иначе
			эл1.Использование = ЛОЖЬ; //выключаем все остальные отборы !!!
		КонецЕсли;
	КонецЦикла;

	Если НеНашлиЭл1 Тогда //добавляем новое поле отбора!
		эл1 = ЭтотОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы.Вставить(0, Тип("ЭлементОтбораКомпоновкиДанных"));
		эл1.ЛевоеЗначение = элОтбора1;
		эл1.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
		эл1.Использование = Истина;
		эл1.ПравоеЗначение = знач1;
	КонецЕсли;	
	
	ЭтотОбъект.СкомпоноватьРезультат( таблДок );
	
	
	путь = КаталогВременныхФайлов();
	таблДок.Записать(путь+UIDКонтрагента+".htm", ТипФайлаТабличногоДокумента.HTML);
	
	возврат таблДок;
	
КонецФункции


функция ВыгрузитьНаFTP(таблДок, ИмяФайлаСообщения="") экспорт

	путь = КаталогВременныхФайлов();
	//таблДок.Записать(путь+ИмяФайлаСообщения+"_.tmp", ТипФайлаТабличногоДокумента.HTML);
		 
//	врФТП = Новый FTPСоединение("188.225.16.133",,"dc140403_yst", "scdi7kRU",, Истина );
	врФТП = Новый FTPСоединение("188.225.16.133",,"dc140403_yst", "scdi7kRU",, ЛОЖЬ );
	врФТП.Записать(путь+ИмяФайлаСообщения , "public_html/data/"+ИмяФайлаСообщения);
		
	возврат "http://www.yst.ru/data/"+ИмяФайлаСообщения;
	
КонецФункции


Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	UsrPwd = "Usr=""Админ"";Pwd=""cegthvfrc""";
	
	Base   =  "Srvr=""sigma:2041"";Ref=""v82ib_test""";
	v8connect = Новый COMОбъект("V82.ComConnector");
	СтрокаСоединенияCOM = Base+";"+UsrPwd;
	Попытка
		Соединение = v8connect.Connect(СтрокаСоединенияCOM);
		#Если Клиент Тогда
			Сообщить(строка(ТекущаяДата())+" Успешно Установлено подключение к базе 1С V8:"+base, СтатусСообщения.Информация);
		#КонецЕсли
	Исключение
		#Если Клиент Тогда
			Сообщить("НЕТ подключения к базе 1С V8:"+base+" ! ", СтатусСообщения.Внимание);
		#КонецЕсли
		Возврат;
	КонецПопытки;
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст = 
	"   ВЫБРАТЬ
	|	ЗаказПоставщику.Дата Как ДатаЗаказ,
	|	ЗаказПоставщику.Номер как номерЗаказ,
	|	ЗаказПоставщику.Контрагент.Наименование как контрагентЗаказ,
	|	ЗаказПоставщику.СуммаДокумента как СуммадокументаЗаказ,
	|	ЗаказПоставщику.НомерКонтейнера как НомерКонтейнераЗаказ
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Проведен = ЛОЖЬ
	|	И ЗаказПоставщику.ПометкаУдаления = ЛОЖЬ
	|	И ЗаказПоставщику.Дата > ДОБАВИТЬКДАТЕ(&Дата, месяц, -2)";
	//|	И ЗаказПоставщику.Дата < ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, -4)
	Запрос.установитьПараметр("Дата",КонецДня(Период));
	Таб = Запрос.Выполнить().Выгрузить();
	ТабЗаказов = Новый ТаблицаЗначений;
	Табзаказов.Колонки.Добавить("ДатаЗаказ");
	Табзаказов.Колонки.Добавить("НомерЗаказ");
	Табзаказов.Колонки.Добавить("КонтрагентЗаказ");
	Табзаказов.Колонки.Добавить("СуммаДокументаЗаказ");
	Табзаказов.Колонки.Добавить("НомерКонтейнераЗаказ");
	
	Для каждого стр из Таб Цикл
		Нстр = ТабЗаказов.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,стр);
	конецЦикла;
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказКонтейнеров.Контрагент.Наименование как КонтрагентЗаявка,
	|	ЗаказКонтейнеров.ДатаЗаявки как ДатаЗаявкиЗаявка,
	|	ЗаказКонтейнеров.количествоПлан как количествоЗаявка,
	|	ЗаказКонтейнеров.ДатаПодачиВПорт как ДатаПодачивПортЗаявка,
	|	ЗаказКонтейнеров.АдресЗагрузки как АдресЗагрузкиЗаявка
	|ИЗ
	|	РегистрСведений.ЗаказКонтейнеров КАК ЗаказКонтейнеров
	|ГДЕ
	|	ЗаказКонтейнеров.ДатаЗаявки > ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаЗаявки";
	
	Запрос.установитьПараметр("Дата",КонецДня(Период));
	Таб = Запрос.Выполнить().Выгрузить();
	ТабЗаявок = Новый ТаблицаЗначений;
	ТабЗаявок.Колонки.Добавить("КонтрагентЗаявка");
	ТабЗаявок.Колонки.Добавить("ДатаЗаявкиЗаявка");
	ТабЗаявок.Колонки.Добавить("КоличествоЗаявка");
	ТабЗаявок.Колонки.Добавить("ДатаПодачиВПортЗаявка");
	ТабЗаявок.Колонки.Добавить("АдресЗагрузкиЗаявка");
	
	Для каждого стр из Таб Цикл
		Нстр = ТабЗаявок.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,стр);
	конецЦикла;
	
ВнешниеИсточники = Новый Структура();
ВнешниеИсточники.Вставить("ТабЗаказов",ТабЗаказов);
ВнешниеИсточники.Вставить("ТабЗаявок",ТабЗаявок);

	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = КомпоновщикНастроек.Настройки;
	ПарамДата = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Период");
	ПарамДата.Использование = Истина;
	ПарамДата.Значение = КонецДня(Период);
	
	ПарамДата = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Рубли");
	ПарамДата.Использование = Истина;
	ПарамДата.Значение =Константы.ВалютаРегламентированногоУчета.Получить();
	
	ПарамДата = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Фримен");
	ПарамДата.Использование = Истина;
	ПарамДата.Значение =Справочники.Контрагенты.НайтиПоКоду("91735");
   
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеИсточники, ДанныеРасшифровки,истина);
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
		
		
		
		
		
КонецПроцедуры
