Перем Соединение;
Процедура КнопкаСформироватьНажатие(Кнопка)
	тз=ПолучитьПоказатели();
КонецПроцедуры

Функция ПолучитьПоказатели()
	ТаблицаЦен = Новый ТаблицаЗначений;
	ТаблицаЦен.Колонки.Добавить("НоменклатураКод", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(7)));
	ТаблицаЦен.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	ТаблицаЦен.Колонки.Добавить("ЦенаПоставщика", Новый ОписаниеТипов("Число"));
	ТаблицаЦен.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	
	//------------Соединение---------------------------------
	ИмяПользователя    = "Администратор";
	ПарольПользователя = "cegthuthjq";
	
	СтрокаСоединенияCOM=""; 
	
	Base = "Srvr=""sigma:2041"";Ref=""v82ib_fedunov_ut""";
	UsrPwd = "Usr="""+ИмяПользователя+""";Pwd="""+ПарольПользователя+"""";
	СтрокаСоединенияCOM = Base+";"+UsrPwd;
	Если Соединение = неопределено тогда
		Соединение = ПолучитьСоединение(СтрокаСоединенияCOM); 
		Если Соединение = неопределено тогда
			возврат ТаблицаЦен;
		КонецЕсли;
	КонецЕсли;
	
	//----------------------------------------свободные остатки----------------------------------------	
	#Если Клиент тогда
		Состояние(" Идет получение цен номенклатуры в базе АЭ");
	#КонецЕсли
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст="ВЫБРАТЬ
	|ТоварыНаСайте.Номенклатура.Код КАК НоменклатураКод,
	|ТоварыНаСайте.Цена,
	|ТоварыНаСайте.ЦенаПоставщика,
	|ТоварыНаСайте.Количество
	|ИЗ
	|РегистрСведений.ТоварыНаСайте КАК ТоварыНаСайте
	|ГДЕ
	|ТоварыНаСайте.Регион = &Регион
	//|и ТоварыНаСайте.Количество >0
	|";
	Запрос.УстановитьПараметр("Регион",Соединение.Справочники.Регионы.НайтиПоКоду("УТ0000062"));//Для рассчета цен
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		нстр=ТаблицаЦен.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,Рез);
	КонецЦикла;
//ТаблицаЦен.ВыбратьСтроку();	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	тзЦеныАЭ.НоменклатураКод,
	             |	тзЦеныАЭ.Цена,
	             |	тзЦеныАЭ.ЦенаПоставщика,
	             |	тзЦеныАЭ.Количество
	             |ПОМЕСТИТЬ втЦеныАЭ
	             |ИЗ
	             |	&тзЦеныАЭ КАК тзЦеныАЭ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втЦеныАЭ.Цена КАК ЦенаИМ,
	             |	втЦеныАЭ.ЦенаПоставщика,
	             |	НоменклатураСпр.Ссылка КАК Номенклатура,
	             |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ЦенаПоТипу,
	             |	втЦеныАЭ.НоменклатураКод КАК Код,
	             |	втЦеныАЭ.Количество
	             |ИЗ
	             |	втЦеныАЭ КАК втЦеныАЭ
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	             |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &КрОпт) КАК ЦеныНоменклатурыСрезПоследних
	             |			ПО НоменклатураСпр.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
	             |		ПО втЦеныАЭ.НоменклатураКод = НоменклатураСпр.Код";
				 Запрос.УстановитьПараметр("тзЦеныАЭ",ТаблицаЦен);
	Запрос.УстановитьПараметр("КрОпт",Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"));
	
    Рез=Запрос.Выполнить().Выгрузить();
	Возврат Рез;
КонецФункции

Функция ПолучитьСоединение(СтрокаСоединенияCOM="", v8="V82")
	
	v8connect = Новый COMОбъект(v8+".ComConnector");
	Попытка
		Соединение = v8connect.Connect(СтрокаСоединенияCOM);
		#Если Клиент Тогда
			ТипБазы = "Ref=";  длТипаБазы=3;
			Если Найти(СтрокаСоединенияCOM,"File=")>0 Тогда		
				ТипБазы = "File="; длТипаБазы=4;
			КонецЕсли;	
			имяБД = Прав(СтрокаСоединенияCOM,стрДлина(СтрокаСоединенияCOM) - найти(СтрокаСоединенияCOM,ТипБазы)-длТипаБазы);
			имяБД = Лев(имяБД, найти(имяБД,";")-1);
			Сообщить("Успешно установлено соединение с "+?(ТипБазы = "Ref=","серверной", "файловой")+" базой: "+имяБД, СтатусСообщения.Информация);
		#КонецЕсли
	Исключение
		#Если Клиент Тогда
			Сообщить("Ошибка при соединении с "+?(ТипБазы = "Ref=","серверной", "файловой")+" базой: "+имяБД+"
			|Ошибка: "+ ОписаниеОшибки(), СтатусСообщения.Внимание);
		#КонецЕсли
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

Процедура ДействияФормыДействие6(Кнопка)
	тз=ПолучитьПоказатели();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("тз", тз);
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	Результат = ЭлементыФормы.Результат;
	Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

Соединение=неопределено;