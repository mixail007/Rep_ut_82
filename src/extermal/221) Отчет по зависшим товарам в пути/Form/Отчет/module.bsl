
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	
	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику.Контрагент КАК Контрагент,
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику.Комментарий КАК Комментарий,
	|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоРасход,
	|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(&НачДата, , , , Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) КАК ЗаказыПоставщикамОстаткиИОбороты
	|ГДЕ
	|//	ЗаказыПоставщикамОстаткиИОбороты.КоличествоРасход > 0
	|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоКонечныйОстаток > 0";
	
	Запрос.Текст= " ВЫБРАТЬ
 |  ЗначенияСвойствОбъектов.ДатаПоступления ДатаПоступления,
 |  ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику.Контрагент Контрагент,
 |  ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику,
 |  ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику.Комментарий Комментарий,
 |  ЗаказыПоставщикамОстаткиИОбороты.КоличествоРасход КоличествоРасход,
 |   ЗаказыПоставщикамОстаткиИОбороты.КоличествоКонечныйОстаток
 |   ИЗ	
 |(ВЫБРАТЬ //РАЗЛИЧНЫЕ
 |		ЗаказПоставщику КАК ЗаказПоставщику,
 |   	//ЗаказПоставщику.Комментарий КАК Комментарий,
 |   	КоличествоРасход,
 |   	КоличествоКонечныйОстаток
 |   ИЗ
 |   	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(&НачДата, , , , Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски))
 |   ГДЕ КоличествоКонечныйОстаток <> 0 )  КАК ЗаказыПоставщикамОстаткиИОбороты
 |   ЛЕВОЕ СОЕДИНЕНИЕ 
 |   (
 |   ВЫБРАТЬ ОБъект ЗаказПоставщику, Значение ДатаПоступления ИЗ РегистрСведений.ЗначенияСвойствОбъектов 
 |   ГДЕ Свойство=&СвойствоДатаОжидаемогоПоступления  
 |   ) ЗначенияСвойствОбъектов
 |   ПО ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику = ЗначенияСвойствОбъектов.ЗаказПоставщику 
 |   //) А
 |   ГДЕ ДатаПоступления 	<&КонДата
 |	УПОРЯДОЧИТЬ ПО ДатаПоступления";

 Запрос.Текст = "
 |ВЫБРАТЬ
|   ЗначенияСвойствОбъектов.ДатаПоступления ДатаПоступления,
|   ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент Контрагент,
|   ЗаказыПоставщикамОстатки.ЗаказПоставщику,
|   ЗаказыПоставщикамОстатки.ЗаказПоставщику.Комментарий Комментарий,
|   ЕстьNULL(ЗаказыПоставщикамОстаткиИОбороты.КоличествоРасход,0) КоличествоРасход,
|	ЗаказыПоставщикамОстатки.КоличествоОстаток
|	ИЗ	
| (
|  ВЫБРАТЬ 
|  ЗаказПоставщику,
|	  СУММА(КоличествоОстаток) КоличествоОстаток
|	   ИЗ
| (
| 	ВЫБРАТЬ 
| 		ЗаказПоставщику КАК ЗаказПоставщику,
|		Номенклатура ,
|	ВЫБОР КОГДА КоличествоОстаток>0 ТОГДА КоличествоОстаток ИНАЧЕ -КоличествоОстаток КОНЕЦ КоличествоОстаток
|	ИЗ
|		РегистрНакопления.ЗаказыПоставщикам.Остатки( , Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски))
|	ГДЕ КоличествоОстаток <> 0  ) А 
|	СГРУППИРОВАТЬ ПО 
|	ЗаказПоставщику
|	)  КАК ЗаказыПоставщикамОстатки
|	//ЛЕВОЕ СОЕДИНЕНИЕ 
|  //  РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(, , , , Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) ЗаказыПоставщикамОстаткиИОбороты
|  //  ПО ЗаказыПоставщикамОстатки.ЗаказПоставщику = ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику
//ЛЕВОЕ СОЕДИНЕНИЕ 
|  //  РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(, , , , Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)) ЗаказыПоставщикамОстаткиИОбороты
|  //  ПО ЗаказыПоставщикамОстатки.ЗаказПоставщику = ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику
|	ЛЕВОЕ СОЕДИНЕНИЕ 
|	(
|	ВЫБРАТЬ ОБъект ЗаказПоставщику, Значение ДатаПоступления ИЗ РегистрСведений.ЗначенияСвойствОбъектов 
|	ГДЕ Свойство=&СвойствоДатаОжидаемогоПоступления  
|	) ЗначенияСвойствОбъектов
|	ПО ЗаказыПоставщикамОстатки.ЗаказПоставщику = ЗначенияСвойствОбъектов.ЗаказПоставщику 
|	//) А
|	ГДЕ ДатаПоступления 	<&КонДата
| 	УПОРЯДОЧИТЬ ПО ДатаПоступления" ;
	Запрос.УстановитьПараметр("НачДата", НачДата);
	Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Запрос.УстановитьПараметр("СвойствоДатаОжидаемогоПоступления", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); // Дата ожидаемого поступления

	
	Запрос.Текст ="ВЫБРАТЬ 
|  ЗаказПоставщику,
|	  СУММА(КоличествоОстаток) КоличествоОстаток
|	  ПОМЕСТИТЬ ВТ_ЗаказыПоставщику
|	   ИЗ
| (
| 	ВЫБРАТЬ 
| 		ЗаказПоставщику КАК ЗаказПоставщику,
|		Номенклатура ,
|	ВЫБОР КОГДА КоличествоОстаток>0 ТОГДА КоличествоОстаток ИНАЧЕ -КоличествоОстаток КОНЕЦ КоличествоОстаток
|	ИЗ
|		РегистрНакопления.ЗаказыПоставщикам.Остатки( , (ДоговорКОнтрагента.ОтветственноеЛицо=&ОтветственноеЛицо ИЛИ &ФлагНеОтбирать) И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски))
|	ГДЕ КоличествоОстаток <> 0  ) А  
|	СГРУППИРОВАТЬ ПО ЗаказПоставщику //)  КАК ЗаказыПоставщикамОстатки
|	
|;	
|ВЫБРАТЬ РАЗЛИЧНЫЕ Сделка 
|ПОМЕСТИТЬ ВТ_ПоступленияПоЗаказам
|ИЗ Документ.ПоступлениеТоваровУслуг ГДЕ Ссылка.Проведен И Сделка В (ВЫБРАТЬ ЗаказПоставщику ИЗ ВТ_ЗаказыПоставщику)
|;
|ВЫБРАТЬ ВТ_ЗаказыПоставщику.ЗаказПоставщику ЗаказПоставщику,
|ВТ_ЗаказыПоставщику.КоличествоОстаток КоличествоОстаток,
|ВТ_ЗаказыПоставщику.ЗаказПоставщику.Комментарий Комментарий,
|ВТ_ЗаказыПоставщику.ЗаказПоставщику.ДатаПоступления ДатаПоступления,
|ВТ_ЗаказыПоставщику.ЗаказПоставщику.Контрагент Контрагент,
|ВТ_ПоступленияПоЗаказам.Сделка  БылиПоступленияПоЗаказу
|ИЗ ВТ_ЗаказыПоставщику
|ЛЕВОЕ  СОЕДИНЕНИЕ ВТ_ПоступленияПоЗаказам ПО 
|ВТ_ЗаказыПоставщику.ЗаказПоставщику= ВТ_ПоступленияПоЗаказам.Сделка
|	ГДЕ ВТ_ЗаказыПоставщику.ЗаказПоставщику.ДатаПоступления<&КонДата 
|	УПОРЯДОЧИТЬ ПО ВТ_ЗаказыПоставщику.ЗаказПоставщику.ДатаПоступления";
	

Запрос.УстановитьПараметр("ОтветственноеЛицо",ОтборОтветственноеЛицо);
Запрос.УстановитьПараметр("ФлагНеОтбирать",ЗначениеНеЗаполнено(ОтборОтветственноеЛицо));

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		Если ЗначениеЗаполнено(ВыборкаДетали.БылиПоступленияПоЗаказу) Тогда
			ОбластьДетальныхЗаписей.Параметры.БылиПоступления = "Да";
		Иначе	
			ОбластьДетальныхЗаписей.Параметры.БылиПоступления = "";
		КонецЕсли;	
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	КонДата=ТекущаяДата();
	НачДата = ДобавитьМесяц(НачалоМесяца(ТекущаяДата()),-3);
КонецПроцедуры
