// функции для совместимости кода 
&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы, Параметры = Неопределено, Владелец = Неопределено )
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Попытка
			ЭтотОбъект="";
		Исключение
		КонецПопытки;
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы, Параметры, Владелец);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы, Владелец, Параметры);
КонецФункции
&НаКлиенте
Функция сбисЭлементФормы(Форма,ИмяЭлемента)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Форма.Элементы[ИмяЭлемента];
	КонецЕсли;
	Возврат Форма.ЭлементыФормы[ИмяЭлемента];
КонецФункции
&НаКлиенте
Функция сбисПолучитьСтраницу(Элемент, ИмяСтраницы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Элемент.ПодчиненныеЭлементы[ИмяСтраницы];
	КонецЕсли;
	Возврат Элемент.Страницы[ИмяСтраницы];
КонецФункции
//------------------------------------------------------

&НаКлиенте
Функция ОбновитьКонтент(Кэш) Экспорт
// функция обновляет контент для подразделов раздела Полученные	
	СтруктураДляОбновленияФормы = Кэш.Интеграция.сбисПолучитьСписокДокументов(Кэш);
	Кэш.ОбщиеФункции.ОбновитьПанельНавигации();
	ГлавноеОкно = Кэш.ГлавноеОкно;
	Контент = сбисЭлементФормы(ГлавноеОкно, "Контент");
	Контент.ТекущаяСтраница = сбисПолучитьСтраницу(Контент, "РеестрДокументов");	
	Кэш.ТаблДок = сбисЭлементФормы(ГлавноеОкно,"Таблица_РеестрДокументов");
	Возврат СтруктураДляОбновленияФормы;
КонецФункции
&НаКлиенте
Процедура НавигацияУстановитьПанель() Экспорт
// Процедура устанавливает панель навигации на 1ую страницу	
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	ГлавноеОкно.ФильтрСтраница=1;
	сбисЭлементФормы(ГлавноеОкно,"ПанельНавигации").Видимость=Истина;
	сбисЭлементФормы(ГлавноеОкно,"ЗаписейНаСтранице1С").Видимость=Ложь;
	сбисЭлементФормы(ГлавноеОкно,"ЗаписейНаСтранице").Видимость=Истина;
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьДокумент(Кэш, СтрТабл) Экспорт
// Процедура открывает окно просмотра документа	
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	МассивПакетов = ПодготовитьСтруктуруДокумента(СтрТабл, Кэш);
	Если МассивПакетов.Количество() > 0 Тогда
		ПолныйСоставПакета = МассивПакетов[0];
		сч = 0;
		Для Каждого Элемент Из ПолныйСоставПакета.Вложение Цикл
			ТекстHTML = Кэш.Интеграция.ПолучитьHTMLВложения(Кэш, ПолныйСоставПакета.Идентификатор, Элемент);
			ПолныйСоставПакета.Вложение[сч].Вставить("ТекстHTML",ТекстHTML);
			сч = сч+1;
		КонецЦикла;
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьДокумент","ФормаПросмотрДокумента","", Кэш);
		фрм.ПоказатьДокумент(Кэш,ПолныйСоставПакета);	
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Функция ЗаполнитьПрохождение(СоставПакета) Экспорт
// Функция заполняет данные о прохождении документа	
	События = Новый Структура("Отправка, Получение, Утверждение", Новый Структура,Новый Структура,Новый Структура);
	Если СоставПакета.Свойство("Событие") Тогда
		Для Каждого Событие Из СоставПакета.Событие Цикл
			Если Событие.Название = "Подтверждение даты отправки" Тогда
				События.Отправка.Вставить("Название","Отправлено");
				События.Отправка.Вставить("ДатаВремя",Событие.ДатаВремяДокумента);
			ИначеЕсли Событие.Название = "Извещение о получении" Тогда
				События.Получение.Вставить("Название","Получено");
				События.Получение.Вставить("ДатаВремя",Событие.ДатаВремяДокумента);
				Если Событие.Свойство("Вложение") Тогда
					События.Получение.Вставить("Подпись",?(Событие.Вложение[0].Свойство("Подпись"),Событие.Вложение[0].Подпись[0].Сертификат.ФИО,""));
				КонецЕсли;
           	ИначеЕсли Событие.Название = "Уведомление о приеме" Тогда
				События.Утверждение.Вставить("Название","Утверждено");
				События.Утверждение.Вставить("ДатаВремя",Событие.ДатаВремяДокумента);
				События.Утверждение.Вставить("Подпись",?(Событие.Вложение[0].Свойство("Подпись"),Событие.Вложение[0].Подпись[0].Сертификат.ФИО,""));
			ИначеЕсли Событие.Название = "Уведомление об уточнении" Тогда
				События.Утверждение.Вставить("Название","Отклонено. "+Событие.Комментарий);
				События.Утверждение.Вставить("ДатаВремя",Событие.ДатаВремяДокумента);
				События.Утверждение.Вставить("Подпись",?(Событие.Вложение[0].Свойство("Подпись"),Событие.Вложение[0].Подпись[0].Сертификат.ФИО,""));
			ИначеЕсли Событие.Название = "Получение" Тогда
				События.Отправка.Вставить("Название","Отправлено");
				События.Отправка.Вставить("Подпись",?(Событие.Вложение[0].Свойство("Подпись"),Событие.Вложение[0].Подпись[0].Сертификат.ФИО,""));
				Если Не События.Отправка.Свойство("ДатаВремя") Тогда   // если по регламенту нет подтверждения оператора
					События.Отправка.Вставить("ДатаВремя",Событие.ДатаВремяДокумента);
				КонецЕсли;	
	        КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат События;
КонецФункции
&НаКлиенте
Процедура НаСменуРаздела(Кэш) Экспорт
КонецПроцедуры
&НаКлиенте
Функция ПодготовитьСтруктуруДокумента(СтрокаСпискаДокументов, Кэш) Экспорт
// функция формирует структуру данных по пакету электронных документов, необходимую для его предварительного просмотра и загрузки в 1С		
	Возврат Кэш.ОбщиеФункции.ПодготовитьСтруктуруДокументаСбис(СтрокаСпискаДокументов, Кэш);	
КонецФункции
&НаКлиенте
Процедура ФильтрОчистить(Кэш) Экспорт
// Процедура устанавливает значения фильтра по-умолчанию для текущего раздела	
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		ГлавноеОкно.ФильтрПериод = "За весь период";
	Иначе
		ГлавноеОкно.ФильтрПериод = "0";
	КонецЕсли;
	ГлавноеОкно.ФильтрДатаНач = "";
	ГлавноеОкно.ФильтрДатаКнц = "";
	ГлавноеОкно.ФильтрСостояние = ГлавноеОкно.СписокСостояний.НайтиПоИдентификатору(0).Значение;
	ГлавноеОкно.ФильтрКонтрагент = "";
	ГлавноеОкно.ФильтрКонтрагентПодключен = "";
	ГлавноеОкно.ФильтрОрганизация = "";
	ГлавноеОкно.ФильтрСтраница = 1;
	Попытка
		ГлавноеОкно.ФильтрОтветственный = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	Исключение
	КонецПопытки;
КонецПроцедуры
&НаКлиенте
Процедура УстановитьВидимостьЭлементовВформеПросмотра(ФормаПросмотра, СоставПакета) Экспорт
	ФормаПросмотра.ЗаголовокПакета = ФормаПросмотра.СоставПакета.Название + " ";
   	ФормаПросмотра.ЭлементыФормы.Загрузка.Видимость = Истина;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.Идентификатор.Видимость = Ложь;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.Статус.Видимость = Ложь;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.Название.Видимость = Истина;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.ХарактеристикаПоставщика.Видимость = Ложь;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.ЕдИзм.Видимость = Ложь;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.Количество.Видимость = Ложь;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.Цена.Видимость = Ложь;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.СуммаБезНал.Видимость = Истина;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.СтавкаНДС.Видимость = Истина;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.СуммаНДС.Видимость = Истина;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.Сумма.Видимость = Истина;
	
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.Номенклатура.ТолькоПросмотр = Ложь;
	ФормаПросмотра.ЭлементыФормы.ТабличнаяЧасть.Колонки.Характеристика.ТолькоПросмотр = Ложь;
	
	ФормаПросмотра.ЭлементыФормы.СинонимДокумента.Видимость = Истина;
	ФормаПросмотра.ЭлементыФормы.НадписьТипДокумента.Видимость = Истина;
	Если СоставПакета.Свойство("Этап") и СоставПакета.Этап.Количество()>0 и СоставПакета.Этап[0].Свойство("Действие") и СоставПакета.Этап[0].Действие.Количество()>0 Тогда
		ФормаПросмотра.ЭлементыФормы.ТекущийЭтап.Видимость = Истина;
		ФормаПросмотра.ЭлементыФормы.Утвердить.Видимость = Истина;
		ФормаПросмотра.ЭлементыФормы.Утвердить.Заголовок = СоставПакета.Этап[0].Действие[0].Название;
		Если СоставПакета.Этап[0].Действие.Количество()>1 Тогда
			ФормаПросмотра.ЭлементыФормы.Отклонить.Видимость = Истина;
			ФормаПросмотра.ЭлементыФормы.Отклонить.Заголовок = СоставПакета.Этап[0].Действие[1].Название;
		Иначе
			ФормаПросмотра.ЭлементыФормы.Отклонить.Видимость = Ложь;
		КонецЕсли;
	Иначе
		ФормаПросмотра.ЭлементыФормы.ТекущийЭтап.Видимость = Ложь;
		ФормаПросмотра.ЭлементыФормы.Отклонить.Видимость = Ложь;
		ФормаПросмотра.ЭлементыФормы.Утвердить.Видимость = Ложь;
	КонецЕсли;

	ФормаПросмотра.ЭлементыФормы.ТулБар.ТекущаяСтраница = сбисПолучитьСтраницу(ФормаПросмотра.ЭлементыФормы.ТулБар,"Полученные");
	ФормаПросмотра.ЭлементыФормы.ТаблицаДокументов.Колонки.Статус.Видимость = Истина;
	ФормаПросмотра.ЭлементыФормы.ПакетКомментарий.Доступность = Ложь;
	ФормаПросмотра.ЭлементыФормы.Прохождение.Видимость = Истина;
	ФормаПросмотра.ЭлементыФормы.ТаблицаДокументов.Колонки.Удалить.Видимость = Ложь;
КонецПроцедуры
&НаКлиенте
Функция сбисСписокДополнительныхОпераций(Кэш, ФормаПросмотра) Экспорт
	СписокДопОпераций = Новый СписокЗначений;
	СписокДопОпераций.Добавить("СохранитьНаДиск", "Сохранить на диск");
	СписокДопОпераций.Добавить("ОткрытьДокументОнлайн", "Открыть документ на sbis.ru");	
	Возврат СписокДопОпераций;
КонецФункции
&НаКлиенте
Функция СохранитьНаДиск(Кэш, ФормаПросмотра) Экспорт
	ФормаПросмотра.СохранитьНаДискНажатие("");
КонецФункции
&НаКлиенте
Функция ОткрытьДокументОнлайн(Кэш, ФормаПросмотра) Экспорт
	ФормаПросмотра.ОткрытьДокументОнлайн("");
КонецФункции
&НаКлиенте
Функция СформироватьРасхождение(Кэш, ФормаПросмотра) Экспорт
	ФормаПросмотра.СформироватьРасхождениеНажатие("");
КонецФункции
&НаКлиенте
Процедура ФильтрУстановитьВидимость(ФормаФильтра) Экспорт
	сбисЭлементФормы(ФормаФильтра,"ФильтрКонтрагентПодключен").Видимость = Ложь;
	сбисЭлементФормы(ФормаФильтра,"НадписьКонтрагентПодключен").Видимость = Ложь;
	сбисЭлементФормы(ФормаФильтра,"ФильтрОтветственный").Видимость = Ложь;
	сбисЭлементФормы(ФормаФильтра,"НадписьОтветственный").Видимость = Ложь;
КонецПроцедуры