
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ОтчетИнициализация();

КонецПроцедуры

Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОбработкиВнешняяОбработка_1Отчет_2dd10033-09cd-4251-b8bd-c44964189603", ПостроительОтчетаОтчет.ПолучитьНастройки());

КонецПроцедуры

Процедура ДействияФормыОтчетНастройка(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Форма = ВнешняяОбработкаОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Форма.ОткрытьМодально() = Истина Тогда
		ОтчетВывести();
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ОтчетВывести();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ОтчетВывести()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет по возвратам от покупателей за "  + Формат(ДатаОтчета,  "ДФ=""дд ММММ гггг 'г.'""");
	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();
	
	НачДатаОтчета = НачалоДня(ДатаОтчета);
	КонДатаОтчета = КонецДня(ДатаОтчета);

	ПостроительОтчетаОтчет.Параметры.Вставить("КонДатаОтчета", КонДатаОтчета);
	ПостроительОтчетаОтчет.Параметры.Вставить("НачДатаОтчета", НачДатаОтчета);

	ПостроительОтчетаОтчет.Выполнить();
	ПостроительОтчетаОтчет.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Вместе;
	ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Вместе;
	ПостроительОтчетаОтчет.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Интерфейс);
	ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ
КонецПроцедуры

Процедура ОтчетИнициализация()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ПостроительОтчетаОтчет.Текст =
	"ВЫБРАТЬ
	|	Ссылка.Контрагент,
	|	Ссылка.ГосНомерАвтомобиля КАК НомерАвто,
	|	Номенклатура,
	|	Склад,
	|	Сумма(Количество) КАК Вернули
	|{ВЫБРАТЬ
	|	Контрагент.*,
	|	НомерАвто,
	|	Номенклатура.*,
	|	Вернули}
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка.Дата МЕЖДУ &НачДатаОтчета И &КонДатаОтчета
	|	И РеализацияТоваровУслуг.Ссылка.Проведен = ИСТИНА
	|СГРУППИРОВАТЬ ПО
	|	Ссылка.Дата,
	|	Ссылка.Контрагент,
	|	Ссылка.ГосНомерАвтомобиля,
	|	Номенклатура,
	|	Склад
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка.Дата
	|ИТОГИ
	|	Сумма(Вернули) ПО Ссылка.Контрагент, 
	|	НомерАвто, 
	|	Склад
	|";
	
	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	
	
	
	
	
КонецПроцедуры
