
Функция ЗаполнитьТаблицуРасчетСкидок(ТабОбъемКонтейнера, ТабРазмерСкидок, НижеПорога, ПорогНаценки, Курс, Фрахт,ВидОстатков, отборПоПроизводителю,Список) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Объемы.Радиус,
		|	Объемы.Объем,
		|	Объемы.НоменклатурнаяГруппа
		|ПОМЕСТИТЬ ОбъемыКонтейнера
		|ИЗ
		|	&Объемы КАК Объемы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмерСкидок.НоменклатурнаяГруппа,
		|	РазмерСкидок.Производитель,
		|	РазмерСкидок.Скидка,
		|	РазмерСкидок.ЗаМалыйДиаметр
		|ПОМЕСТИТЬ РазмерСкидок
		|ИЗ
		|	&РазмерСкидок КАК РазмерСкидок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СезонныйАссортимент.Номенклатура.Код КАК Код,
		|	СезонныйАссортимент.Номенклатура,
		|	ЦеныФОПСрезПоследних.Цена КАК ЦенаФОБ,
		|	ВЫБОР
		|		КОГДА ОбъемыКонтейнера.Объем = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(&Фрахт / ОбъемыКонтейнера.Объем КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Фрахт,
		|	(ЦеныФОПСрезПоследних.Цена + ВЫБОР
		|		КОГДА ОбъемыКонтейнера.Объем = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(&Фрахт / ОбъемыКонтейнера.Объем КАК ЧИСЛО(15, 2))
		|	КОНЕЦ) * &Курс КАК ВРублях,
		|	(ЦеныНоменклатурыСрезПоследних.Цена * (100 - ВЫБОР
		|		КОГДА СезонныйАссортимент.Номенклатура.Типоразмер.Диаметр < ""16""
		|			ТОГДА РазмерСкидок.Скидка + РазмерСкидок.ЗаМалыйДиаметр
		|		ИНАЧЕ РазмерСкидок.Скидка
		|	КОНЕЦ) / 100 - (ВЫРАЗИТЬ((ЦеныФОПСрезПоследних.Цена + ВЫБОР
		|			КОГДА ОбъемыКонтейнера.Объем = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(&Фрахт / ОбъемыКонтейнера.Объем КАК ЧИСЛО(15, 2))
		|		КОНЕЦ) * &Курс * 1.239 + ВЫБОР
		|			КОГДА ОбъемыКонтейнера.Объем = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(&ХЗ / ОбъемыКонтейнера.Объем КАК ЧИСЛО(15, 2))
		|		КОНЕЦ КАК ЧИСЛО(15, 2)))) / (ВЫРАЗИТЬ((ЦеныФОПСрезПоследних.Цена + ВЫБОР
		|			КОГДА ОбъемыКонтейнера.Объем = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(&Фрахт / ОбъемыКонтейнера.Объем КАК ЧИСЛО(15, 2))
		|		КОНЕЦ) * &Курс * 1.239 + ВЫБОР
		|			КОГДА ОбъемыКонтейнера.Объем = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(&ХЗ / ОбъемыКонтейнера.Объем КАК ЧИСЛО(15, 2))
		|		КОНЕЦ КАК ЧИСЛО(15, 2))) * 100 КАК Наценка,
		|	ВЫРАЗИТЬ((ЦеныФОПСрезПоследних.Цена + ВЫБОР
		|			КОГДА ОбъемыКонтейнера.Объем = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(&Фрахт / ОбъемыКонтейнера.Объем КАК ЧИСЛО(15, 2))
		|		КОНЕЦ) * &Курс * 1.239 + ВЫБОР
		|			КОГДА ОбъемыКонтейнера.Объем = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(&ХЗ / ОбъемыКонтейнера.Объем КАК ЧИСЛО(15, 2))
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ИтогоВРублях,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК БазоваяЦена,
		|	СезонныйАссортимент.Номенклатура.Типоразмер.Диаметр КАК Диаметр,
		|	СезонныйАссортимент.Номенклатура.Производитель КАК Производитель,
		|	ВЫБОР
		|		КОГДА СезонныйАссортимент.Номенклатура.Типоразмер.Диаметр < ""16""
		|			ТОГДА РазмерСкидок.Скидка + РазмерСкидок.ЗаМалыйДиаметр
		|		ИНАЧЕ РазмерСкидок.Скидка
		|	КОНЕЦ КАК Скидка,
		|	ЦеныНоменклатурыСрезПоследних.Цена * (100 - ВЫБОР
		|		КОГДА СезонныйАссортимент.Номенклатура.Типоразмер.Диаметр < ""16""
		|			ТОГДА РазмерСкидок.Скидка + РазмерСкидок.ЗаМалыйДиаметр
		|		ИНАЧЕ РазмерСкидок.Скидка
		|	КОНЕЦ) / 100 КАК ИтогоЦена
		|ПОМЕСТИТЬ Свод
		|ИЗ
		|	РегистрСведений.СезонныйАссортимент КАК СезонныйАссортимент
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОбъемыКонтейнера КАК ОбъемыКонтейнера
		|		ПО СезонныйАссортимент.Номенклатура.НоменклатурнаяГруппа = ОбъемыКонтейнера.НоменклатурнаяГруппа
		|			И СезонныйАссортимент.Номенклатура.Типоразмер.Диаметр = ОбъемыКонтейнера.Радиус
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныФОП.СрезПоследних КАК ЦеныФОПСрезПоследних
		|		ПО СезонныйАссортимент.Номенклатура = ЦеныФОПСрезПоследних.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &Базовая) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО СезонныйАссортимент.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РазмерСкидок КАК РазмерСкидок
		|		ПО СезонныйАссортимент.Номенклатура.НоменклатурнаяГруппа = РазмерСкидок.НоменклатурнаяГруппа
		|			И (СезонныйАссортимент.Номенклатура.Производитель = РазмерСкидок.Производитель
		|				ИЛИ РазмерСкидок.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяССылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СезонныйАссортимент.Номенклатура,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0)
		|	КОНЕЦ КАК ВПути,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток, 0)
		|	КОНЕЦ КАК ВПроизводстве,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК НаСкладе,
		|	ВЫБОР
		|		КОГДА НоменклатураИмпорт.Номенклатура ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК СС,
		|	ВЫБОР
		|		КОГДА НоменклатураИмпорт.ЧерныйЛист ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ НоменклатураИмпорт.ЧерныйЛист
		|	КОНЕЦ КАК ЧС
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрСведений.СезонныйАссортимент КАК СезонныйАссортимент
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&период, Склад.ЗапретитьИспользование = ЛОЖЬ) КАК ТоварыНаСкладахОстатки
		|		ПО СезонныйАссортимент.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(&период, ВЭД = ЛОЖЬ) КАК ЗаказыПоставщикамОстатки
		|		ПО СезонныйАссортимент.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(&период, ЗаказПокупателя.Проверен = ИСТИНА) КАК ЗаказыПокупателейОстатки
		|		ПО СезонныйАссортимент.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
		|				&период,
		|				ВЭД = ЛОЖЬ
		|					И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) > &Период) КАК ЗаказыПоставщикамСезонныеОстатки
		|		ПО СезонныйАссортимент.Номенклатура = ЗаказыПоставщикамСезонныеОстатки.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураИмпорт КАК НоменклатураИмпорт
		|		ПО СезонныйАссортимент.Номенклатура = НоменклатураИмпорт.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Свод.Код,
		|	Свод.Номенклатура,
		|	Свод.ЦенаФОБ,
		|	Свод.Фрахт,
		|	Свод.ВРублях,
		|	Свод.Наценка,
		|	Свод.ИтогоВРублях,
		|	Свод.БазоваяЦена,
		|	Свод.Диаметр,
		|	Свод.Производитель,
		|	Свод.Скидка,
		|	Свод.ИтогоЦена,
		|	Остатки.НаСкладе,
		|	Остатки.СвободныйОстаток,
		|	Остатки.ВПути,
		|	Остатки.ВПроизводстве,
		|	Остатки.СС,
		|	Остатки.ЧС,
		|	Остатки.НаСкладе * Свод.Наценка КАК НаСкладеНаценка,
		|	Остатки.СвободныйОстаток * Свод.Наценка КАК СвободныйОстатокНаценка,
		|	Остатки.ВПути * Свод.Наценка КАК ВПутиНаценка,
		|	Остатки.ВПроизводстве * Свод.Наценка КАК ВПроизводствеНаценка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Свод.Наценка, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ Остатки.НаСкладе
		|	КОНЕЦ КАК НаСкладе1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Свод.Наценка, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ Остатки.СвободныйОстаток
		|	КОНЕЦ КАК СвободныйОстаток1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Свод.Наценка, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ Остатки.ВПути
		|	КОНЕЦ КАК ВПути1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Свод.Наценка, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ Остатки.ВПроизводстве
		|	КОНЕЦ КАК ВПроизводстве1
		|ИЗ
		|	Свод КАК Свод
		|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
		|		ПО Свод.Номенклатура = Остатки.Номенклатура
		|ГДЕ
		|	99 = 99
		|	И 98 = 98
		|	И 97 = 97
		|
		|УПОРЯДОЧИТЬ ПО
		|	Свод.Номенклатура.Наименование";

	Если НижеПорога Тогда	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","Свод.Наценка < &ПорогНаценки");
		Запрос.УстановитьПараметр("ПорогНаценки", ПорогНаценки);
	КонецЕсли;
	Если Видостатков = 1 тогда //только белые
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"98 = 98","Остатки.СС = ЛОЖЬ и Остатки.ЧС = ЛОЖЬ");
	иначеЕсли	 Видостатков = 2 тогда  //только серые
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"98 = 98","Остатки.СС = ИСТИНА и Остатки.ЧС = ЛОЖЬ");
	иначеЕсли	 Видостатков = 3 тогда  //только черные
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"98 = 98","Остатки.ЧС = ИСТИНА");
	конецЕсли;	
	Если ОтборПоПроизводителю= Истина тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"97 = 97","Свод.Производитель В (&СписокПроизводителей)");
		Запрос.УстановитьПараметр("СписокПроизводителей", Список);
    конецЕсли;	
	
	Запрос.УстановитьПараметр("Объемы", ТабОбъемКонтейнера);
	Запрос.УстановитьПараметр("РазмерСкидок", ТабРазмерСкидок);
	Запрос.УстановитьПараметр("Базовая", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));
	Запрос.УстановитьПараметр("Курс", Курс);
	Запрос.УстановитьПараметр("Фрахт", Фрахт);
	Запрос.УстановитьПараметр("ХЗ", ХЗ);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	
	
	
	Результат = Запрос.Выполнить();

    РасчетСкидок = Результат.Выгрузить();
	
	Возврат РасчетСкидок;
	
КонецФункции

Функция ЗаполнитьТаблицуОбъемКонтейнера() Экспорт
	
	КС = Новый КвалификаторыСтроки(3);
	КЧ = Новый КвалификаторыЧисла(10,0);

	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповСтрока = Новый ОписаниеТипов(Массив,,КС);
	
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧисло = Новый ОписаниеТипов(Массив,,КЧ);
	
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ОписаниеТиповНГ = Новый ОписаниеТипов(Массив);
	
	ТабОбъемКонтейнера = Новый ТаблицаЗначений;
	ТабОбъемКонтейнера.Колонки.Добавить("НоменклатурнаяГруппа", ОписаниеТиповНГ);
	ТабОбъемКонтейнера.Колонки.Добавить("Радиус", ОписаниеТиповСтрока);
	ТабОбъемКонтейнера.Колонки.Добавить("Объем", ОписаниеТиповЧисло);
	
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049");	
	стр.Радиус = "13";
	стр.Объем = 3050;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049");	
	стр.Радиус = "14";
	стр.Объем = 2550;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049");	
	стр.Радиус = "15";
	стр.Объем = 2150;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049");	
	стр.Радиус = "16";
	стр.Объем = 1750;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049");	
	стр.Радиус = "17";
	стр.Объем = 1350;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "13";
	стр.Объем = 2200;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "14";
	стр.Объем = 1850;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "15";
	стр.Объем = 1620;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "16";
	стр.Объем = 1500;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "17";
	стр.Объем = 1150;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "18";
	стр.Объем = 1000;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "19";
	стр.Объем = 820;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "20";
	стр.Объем = 610;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "21";
	стр.Объем = 550;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "22";
	стр.Объем = 480;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "24";
	стр.Объем = 420;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "26";
	стр.Объем = 380;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "28";
	стр.Объем = 340;
	стр = ТабОбъемКонтейнера.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");	
	стр.Радиус = "30";
	стр.Объем = 300;
	
	Возврат ТабОбъемКонтейнера;
	
КонецФункции

Функция ЗаполнитьТаблицуРазмерСкидок() Экспорт
	
	КЧ = Новый КвалификаторыЧисла(5,2);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧисло = Новый ОписаниеТипов(Массив,,КЧ);
	
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ОписаниеТиповНГ = Новый ОписаниеТипов(Массив);
	
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.Производители"));
	ОписаниеТиповПр = Новый ОписаниеТипов(Массив);
	
	ТабРазмерСкидок = Новый ТаблицаЗначений;
	ТабРазмерСкидок.Колонки.Добавить("НоменклатурнаяГруппа", ОписаниеТиповНГ);
	ТабРазмерСкидок.Колонки.Добавить("Производитель", ОписаниеТиповПр);
	ТабРазмерСкидок.Колонки.Добавить("ЗаМалыйДиаметр", ОписаниеТиповЧисло);
	ТабРазмерСкидок.Колонки.Добавить("Скидка", ОписаниеТиповЧисло);
	
	стр = ТабРазмерСкидок.Добавить();
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00049");	
	стр.Скидка = 24;
	
	стр = ТабРазмерСкидок.Добавить();  //CROSS STREET
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("3291");
	стр.Скидка = 12;
	
	стр = ТабРазмерСкидок.Добавить(); //ALCASTA
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("100");
	стр.Скидка = 12;
	
	стр = ТабРазмерСкидок.Добавить(); //Megami
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("3485");
	стр.Скидка = 12;
	
	стр = ТабРазмерСкидок.Добавить();//REPLICA TD Special Series
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("3754");
	стр.Скидка = 12;
	
	стр = ТабРазмерСкидок.Добавить(); //NZ
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("517");
	стр.ЗаМалыйДиаметр = -2;
	стр.Скидка = 48;
	
	стр = ТабРазмерСкидок.Добавить(); //YST
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("3293");
	стр.ЗаМалыйДиаметр = -2;
	стр.Скидка = 48;
	
	стр = ТабРазмерСкидок.Добавить();//YOKATTA
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("3290");
	стр.ЗаМалыйДиаметр = -2;
	стр.Скидка = 48;
	
	стр = ТабРазмерСкидок.Добавить(); //X-RACE
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("3406");
	стр.ЗаМалыйДиаметр = -2;
	стр.скидка = 48;
	
	стр = ТабРазмерСкидок.Добавить(); //BUFFALO
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.производитель = Справочники.Производители.НайтиПоКоду("3656");
	стр.Скидка = 0;
	
	стр = ТабРазмерСкидок.Добавить(); //HARP
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("3654");
	стр.Скидка = 0;
	
	стр = ТабРазмерСкидок.Добавить(); //VISSOL
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("3657");
	стр.Скидка = 0;
	
	стр = ТабРазмерСкидок.Добавить();//REPLICA
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("65");
	стр.ЗаМалыйДиаметр = -2;
	стр.Скидка = 57;
	
	стр = ТабРазмерСкидок.Добавить();//REPLICA TD
	стр.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026");
	стр.Производитель = Справочники.Производители.НайтиПоКоду("3333");
	стр.ЗаМалыйДиаметр = -2;
	стр.Скидка = 57;
	
	Возврат ТабРазмерСкидок;
	
КонецФункции