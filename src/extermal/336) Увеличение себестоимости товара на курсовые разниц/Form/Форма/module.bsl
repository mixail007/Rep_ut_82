
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ДокКорректировка = Документы.КорректировкаЗаписейРегистровНакопления.СоздатьДокумент();
	ДокКорректировка.Организация	= Справочники.Организации.НайтиПоКоду("00001");		
	ДокКорректировка.Дата 			= НачалоДня(ДатаКорректировкиСебестоимостиТоваров)+1;
	ДокКорректировка.Комментарий 	= "Корректировка стоимости товаров на курсовые разницы";
	ДокКорректировка.Записать();
	
	НоваяСтрокаТЗ = ДокКорректировка.ТаблицаРегистровНакопления.Добавить();
	НоваяСтрокаТЗ.Имя = "ПартииТоваровНаСкладах";
	НоваяСтрокаТЗ.Представление = "Партии товаров на складах";
	
	НЗПартии = РегистрыНакопления.ПартииТоваровНаСкладах.СоздатьНаборЗаписей();
	НЗПартии.Отбор.Регистратор.Значение = ДокКорректировка.Ссылка;
	
	НоваяСтрокаТЗ = ДокКорректировка.ТаблицаРегистровНакопления.Добавить();
	НоваяСтрокаТЗ.Имя = "ВзаиморасчетыСКонтрагентами";
	НоваяСтрокаТЗ.Представление = "Взаиморасчеты с контрагентами";
	
	НЗВзаиморасчеты = РегистрыНакопления.ВзаиморасчетыСКонтрагентами.СоздатьНаборЗаписей();
	НЗВзаиморасчеты.Отбор.Регистратор.Значение = ДокКорректировка.Ссылка;
	
	
	ДокКорректировкаДолга = Документы.КорректировкаДолга.СоздатьДокумент();
	ДокКорректировкаДолга.Организация	= Справочники.Организации.НайтиПоКоду("00001");	
	ДокКорректировкаДолга.Дата 			= НачалоДня(ДатаКорректировкиСебестоимостиТоваров)+1;
	ДокКорректировкаДолга.Контрагент	= Контрагент;
	ДокКорректировкаДолга.Комментарий	= "Курсовые разницы";
	ДокКорректировкаДолга.ОтражатьВУправленческомУчете = Истина;
	
	Для каждого СтрокаРашифровка ИЗ РасшифровкаРазниц Цикл
		
		ДоляОстаткаИзПрихода = СтрокаРашифровка.СтоимостьТоварныхОстатковНаДатуКорректировки / (СтрокаРашифровка.СтоимостьТоварныхОстатковНаДатуКорректировки + СтрокаРашифровка.СтоимостьПроданногоТовараНаДатуКорректировки) * 100;
		СуммаКурсРазницДляРаспределенияНаСтоимостьТоваров = СтрокаРашифровка.ВзаиморасчетыРуб / 100 * ДоляОстаткаИзПрихода;
		СуммаКорректировкиВзаиморасчетов = 0;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаКорректировкиСебестоимостиТоваров", НачалоДня(ДатаКорректировкиСебестоимостиТоваров));
		Запрос.УстановитьПараметр("ЗаказПоставщику", СтрокаРашифровка.Сделка);
		Запрос.Текст = "ВЫБРАТЬ
		|	ПартииТоваровНаСкладахОстатки.Номенклатура,
		|	ПартииТоваровНаСкладахОстатки.Склад,
		|	ПартииТоваровНаСкладахОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахОстатки.СерияНоменклатуры,
		|	ПартииТоваровНаСкладахОстатки.ДокументОприходования,
		|	ПартииТоваровНаСкладахОстатки.СтатусПартии,
		|	ПартииТоваровНаСкладахОстатки.Заказ,
		|	ПартииТоваровНаСкладахОстатки.Качество,
		|	ПартииТоваровНаСкладахОстатки.КоличествоОстаток,
		|	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаКорректировкиСебестоимостиТоваров, ДокументОприходования.Сделка = &ЗаказПоставщику) КАК ПартииТоваровНаСкладахОстатки";
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			Доля = Результат.СтоимостьОстаток * 100 / СтрокаРашифровка.СтоимостьТоварныхОстатковНаДатуКорректировки;
			СуммаДляОтнесения = СуммаКурсРазницДляРаспределенияНаСтоимостьТоваров / 100 * Доля;
			СуммаКорректировкиВзаиморасчетов = СуммаКорректировкиВзаиморасчетов + СуммаДляОтнесения;
			НЗапись = НЗПартии.Добавить();
			НЗапись.Активность 					= Истина;
			НЗапись.ВидДвижения					= ВидДвиженияНакопления.Приход;
			НЗапись.Период 						= НачалоДня(ДатаКорректировкиСебестоимостиТоваров)+1;
			НЗапись.Номенклатура				= Результат.Номенклатура;
			НЗапись.Склад						= Результат.Склад;
			НЗапись.ХарактеристикаНоменклатуры	= Результат.ХарактеристикаНоменклатуры;
			НЗапись.СерияНоменклатуры			= Результат.СерияНоменклатуры;
			НЗапись.ДокументОприходования		= Результат.ДокументОприходования;
			НЗапись.СтатусПартии				= Результат.СтатусПартии;
			НЗапись.Заказ						= Результат.Заказ;
			НЗапись.Качество					= Результат.Качество;
			НЗапись.Количество					= 0;
			НЗапись.Склад						= Результат.Склад;
			НЗапись.Стоимость					= СуммаДляОтнесения;
			НЗПартии.Записать();
		КонецЦикла;
		
		Если СуммаКорректировкиВзаиморасчетов > 0 Тогда
			НЗапись = НЗВзаиморасчеты.Добавить();
			НЗапись.Активность 					= Истина;
			НЗапись.ВидДвижения					= ВидДвиженияНакопления.Расход;
			НЗапись.Период 						= НачалоДня(ДатаКорректировкиСебестоимостиТоваров)+1;
			НЗапись.ДоговорКонтрагента			= ДоговорКонтрагента;
			НЗапись.Сделка						= СтрокаРашифровка.Сделка;
			НЗапись.СуммаВзаиморасчетов			= 0;
			НЗапись.СуммаУпр					= СуммаКорректировкиВзаиморасчетов;
			НЗВзаиморасчеты.Записать();
		КонецЕсли;
		
		ДокКорректировка.Комментарий = "Курсовые разницы";
		
		КооректировкаДолга = ДокКорректировкаДолга.СуммыДолга.Добавить();
		КооректировкаДолга.ДоговорКонтрагента = ДоговорКонтрагента;
		КооректировкаДолга.Сделка = СтрокаРашифровка.Сделка;
		КооректировкаДолга.УменьшениеДолгаКонтрагентаУпр = СтрокаРашифровка.ВзаиморасчетыРуб - СуммаКорректировкиВзаиморасчетов;
		КооректировкаДолга.КурсВзаиморасчетов = 1;
		КооректировкаДолга.КратностьВзаиморасчетов = 1;
		ДокКорректировкаДолга.Записать();
		ДокКорректировкаДолга.ПолучитьФорму().Открыть();		
		
	КонецЦикла;
		
	ДокКорректировка.ПолучитьФорму().Открыть();
		
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаполнить(Кнопка)

	РасшифровкаРазниц.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаРассчетаКурсовыхРазниц", НачалоДня(ДатаРассчетаКурсовыхРазниц));
	Запрос.УстановитьПараметр("ДатаКорректировкиСебестоимостиТоваров", НачалоДня(ДатаКорректировкиСебестоимостиТоваров));
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
	               |	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	               |	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток) КАК КурсоваяРазница,
	               |	СУММА(ПартииТоваровНаСкладахОстаткиИОбороты.СтоимостьРасход) КАК СтоимостьПроданногоТовара,
	               |	СУММА(ПартииТоваровНаСкладахОстаткиИОбороты.СтоимостьКонечныйОстаток) КАК СтоимостьТоварногоОстатка
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаРассчетаКурсовыхРазниц, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ВзаиморасчетыСКонтрагентамиОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.ОстаткиИОбороты(, &ДатаКорректировкиСебестоимостиТоваров, , , ) КАК ПартииТоваровНаСкладахОстаткиИОбороты
	               |		ПО ВзаиморасчетыСКонтрагентамиОстатки.Сделка = ПартииТоваровНаСкладахОстаткиИОбороты.ДокументОприходования.Сделка
	               |ГДЕ
	               |	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток = 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка";
				   
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		НоваяРасшифровка = РасшифровкаРазниц.Добавить();
		НоваяРасшифровка.Сделка = Результат.Сделка;
		НоваяРасшифровка.ВзаиморасчетыВал = Результат.СуммаВзаиморасчетовОстаток;
		НоваяРасшифровка.ВзаиморасчетыРуб = Результат.КурсоваяРазница;
		НоваяРасшифровка.СтоимостьПроданногоТовараНаДатуКорректировки = Результат.СтоимостьПроданногоТовара;
		НоваяРасшифровка.СтоимостьТоварныхОстатковНаДатуКорректировки = Результат.СтоимостьТоварногоОстатка;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СписокВидовДоговоров = Новый СписокЗначений;
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);

	СтруктураДополнительныхПараметров = Новый Структура();
	СтруктураОтбора = Новый Структура();
	СписокСпособовВеденияВзаиморасчетов = Новый СписокЗначений();
	СписокСпособовВеденияВзаиморасчетов.Добавить(Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом);
	СписокСпособовВеденияВзаиморасчетов.Добавить(Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам);
	
	СтруктураОтбора.Вставить("ЗначениеОтбора", СписокСпособовВеденияВзаиморасчетов);
	СтруктураОтбора.Вставить("ВидСравненияОтбора", ВидСравнения.ВСписке);
	СтруктураДополнительныхПараметров.Вставить("ВедениеВзаиморасчетов", СтруктураОтбора);

	НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, ДоговорКонтрагента,
	                                        СписокВидовДоговоров, СтандартнаяОбработка, СтруктураДополнительныхПараметров);
	
КонецПроцедуры
