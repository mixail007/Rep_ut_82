

//+++  Область и Город
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	//+++
	//ЗаполнитьНачальныеНастройкиПоМакету(ПолучитьМакет("ПараметрыОтчетовПродажиКомпании"), СтруктураПредставлениеПолей, МассивОтбора, ОбщийОтчет, "СписокКроссТаблица");
	
	Текст = "ВЫБРАТЬ
	        |	ЗначенияСвойствОбъектов.Объект,
	        |	ЗначенияСвойствОбъектов.Значение
	        |ПОМЕСТИТЬ Группа
	        |ИЗ
	        |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	        |ГДЕ
	        |	ЗначенияСвойствОбъектов.Свойство.Код = ""90230""
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗначенияСвойствОбъектов.Объект,
	        |	ЗначенияСвойствОбъектов.Значение
	        |ПОМЕСТИТЬ Важность
	        |ИЗ
	        |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	        |ГДЕ
	        |	ЗначенияСвойствОбъектов.Свойство.Код = ""90184""
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗначенияСвойствОбъектов.Объект,
	        |	ЗначенияСвойствОбъектов.Значение
	        |ПОМЕСТИТЬ Статус
	        |ИЗ
	        |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	        |ГДЕ
	        |	ЗначенияСвойствОбъектов.Свойство.Код = ""90218""
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	СУММА(ТаблицаРегистра.КоличествоОборот) КАК Количество,
	        |	СУММА(ТаблицаРегистра.КоличествоОборот * ТаблицаРегистра.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоБазовыхЕд,
	        |	ВЫБОР
	        |		КОГДА СУММА(ТаблицаРегистра.КоличествоОборот) > 0
	        |			ТОГДА СУММА(ТаблицаРегистра.СтоимостьОборот) / СУММА(ТаблицаРегистра.КоличествоОборот)
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК Цена,
	        |	СУММА(ТаблицаРегистра.СтоимостьОборот) КАК Стоимость,
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец КАК Покупатель,
	        |	ТаблицаРегистра.Номенклатура КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ВЫБОР
	        |		КОГДА ВложенныйЗапрос1.Поле1 ЕСТЬ NULL 
	        |				ИЛИ ВложенныйЗапрос1.Поле1 = """"
	        |			ТОГДА ""Россия""
	        |		ИНАЧЕ ВложенныйЗапрос1.Поле1
	        |	КОНЕЦ КАК Страна,
	        |	ВложенныйЗапрос.Область,
	        |	ВложенныйЗапрос.Город,
	        |	ЭлПочта.Представление КАК АдресЭлПочты,
	        |	ВложенныйЗапрос.ЮридическийАдрес,
	        |	ВложенныйЗапрос.ФактическийАдрес,
	        |	ВложенныйЗапрос.ДоставкаАдрес,
	        |	Важность.Значение КАК Важность,
	        |	Статус.Значение КАК Статус,
	        |	ВложенныйЗапрос2.ЯШТИнтернет КАК Интернет,
	        |	ВложенныйЗапрос2.ЯШТТерминал КАК Терминал,
	        |	Группа.Значение КАК РабочаяГруппа
	        |{ВЫБРАТЬ
	        |	Страна,
	        |	Область,
	        |	Город,
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	ТаблицаРегистра.Период,
	        |	(ПОДСТРОКА(ТаблицаРегистра.ДоговорКонтрагента.Владелец.Комментарий, 1, 100)) КАК КомментарийПокупателя,
	        |	ТаблицаРегистра.Регистратор.* КАК Регистратор,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ДЕНЬ)) КАК ПериодДень,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, МЕСЯЦ)) КАК ПериодМесяц,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, КВАРТАЛ)) КАК ПериодКвартал,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ГОД)) КАК ПериодГод,
	        |	АдресЭлПочты,
	        |	ЮридическийАдрес,
	        |	ФактическийАдрес,
	        |	ДоставкаАдрес,
	        |	Важность,
	        |	Статус.*,
	        |	Интернет,
	        |	Терминал,
	        |	РабочаяГруппа.*}
	        |ИЗ
	        |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК ТаблицаРегистра
	        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |			ВложенныйЗапрос.ОбластьФакт КАК Область,
	        |			ВложенныйЗапрос.ГородФакт КАК Город,
	        |			ВложенныйЗапрос.Координаты КАК Координаты,
	        |			КонтактнаяИнформация.Объект КАК Объект,
	        |			ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200)) КАК ЮридическийАдрес,
	        |			ВложенныйЗапрос.Представление КАК ФактическийАдрес,
	        |			ВложенныйЗапросДоставка.ПредставлениеДоставка КАК ДоставкаАдрес
	        |		ИЗ
	        |			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	        |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |					КонтактнаяИнформация.Объект КАК Объект,
	        |					ВЫРАЗИТЬ(КонтактнаяИнформация.Поле2 КАК СТРОКА(200)) КАК ОбластьФакт,
	        |					ВЫБОР
	        |						КОГДА (ВЫРАЗИТЬ(КонтактнаяИнформация.Поле4 КАК СТРОКА(100))) = """"
	        |							ТОГДА ВЫБОР
	        |									КОГДА (ВЫРАЗИТЬ(КонтактнаяИнформация.Поле5 КАК СТРОКА(100))) = """"
	        |										ТОГДА ВЫРАЗИТЬ(КонтактнаяИнформация.Поле3 КАК СТРОКА(100))
	        |									ИНАЧЕ (ВЫРАЗИТЬ(КонтактнаяИнформация.Поле3 КАК СТРОКА(100))) + "", "" + (ВЫРАЗИТЬ(КонтактнаяИнформация.Поле5 КАК СТРОКА(100)))
	        |								КОНЕЦ
	        |						ИНАЧЕ ВЫРАЗИТЬ(КонтактнаяИнформация.Поле4 КАК СТРОКА(100))
	        |					КОНЕЦ КАК ГородФакт,
	        |					ВЫРАЗИТЬ(КонтактнаяИнформация.Поле10 КАК СТРОКА(30)) КАК Координаты,
	        |					ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200)) КАК Представление
	        |				ИЗ
	        |					РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	        |				ГДЕ
	        |					КонтактнаяИнформация.Тип = &Тип
	        |					И КонтактнаяИнформация.Вид = &ВидФ) КАК ВложенныйЗапрос
	        |				ПО КонтактнаяИнформация.Объект = ВложенныйЗапрос.Объект
	        |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |					КонтактнаяИнформация.Объект КАК Объект,
	        |					ВЫРАЗИТЬ(КонтактнаяИнформация.Поле2 КАК СТРОКА(200)) КАК ОбластьДоставка,
	        |					ВЫБОР
	        |						КОГДА (ВЫРАЗИТЬ(КонтактнаяИнформация.Поле4 КАК СТРОКА(100))) = """"
	        |							ТОГДА ВЫБОР
	        |									КОГДА (ВЫРАЗИТЬ(КонтактнаяИнформация.Поле5 КАК СТРОКА(100))) = """"
	        |										ТОГДА ВЫРАЗИТЬ(КонтактнаяИнформация.Поле3 КАК СТРОКА(100))
	        |									ИНАЧЕ (ВЫРАЗИТЬ(КонтактнаяИнформация.Поле3 КАК СТРОКА(100))) + "", "" + (ВЫРАЗИТЬ(КонтактнаяИнформация.Поле5 КАК СТРОКА(100)))
	        |								КОНЕЦ
	        |						ИНАЧЕ ВЫРАЗИТЬ(КонтактнаяИнформация.Поле4 КАК СТРОКА(100))
	        |					КОНЕЦ КАК ГородДоставка,
	        |					ВЫРАЗИТЬ(КонтактнаяИнформация.Поле10 КАК СТРОКА(30)) КАК КоординатыДоставка,
	        |					ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200)) КАК ПредставлениеДоставка
	        |				ИЗ
	        |					РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	        |				ГДЕ
	        |					КонтактнаяИнформация.Тип = &Тип
	        |					И КонтактнаяИнформация.Вид = &ВидАдресДоставки) КАК ВложенныйЗапросДоставка
	        |				ПО КонтактнаяИнформация.Объект = ВложенныйЗапросДоставка.Объект
	        |		ГДЕ
	        |			КонтактнаяИнформация.Тип = &Тип
	        |			И КонтактнаяИнформация.Вид = &Вид) КАК ВложенныйЗапрос
	        |		ПО ТаблицаРегистра.ДоговорКонтрагента.Владелец = ВложенныйЗапрос.Объект
	        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |			ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК СТРОКА(100)) КАК Представление,
	        |			КонтактнаяИнформация.Объект КАК Объект
	        |		ИЗ
	        |			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	        |		ГДЕ
	        |			КонтактнаяИнформация.Тип = &ТипЭл
	        |			И КонтактнаяИнформация.Вид = &ВидЭл) КАК ЭлПочта
	        |		ПО ТаблицаРегистра.ДоговорКонтрагента.Владелец = ЭлПочта.Объект
	        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |			КонтактнаяИнформация.Объект КАК Объект,
	        |			МАКСИМУМ(КонтактнаяИнформация.Поле1) КАК Поле1
	        |		ИЗ
	        |			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	        |		ГДЕ
	        |			КонтактнаяИнформация.Тип = &АдресИностранный
	        |			И КонтактнаяИнформация.Объект.Экспорт = ИСТИНА
	        |		
	        |		СГРУППИРОВАТЬ ПО
	        |			КонтактнаяИнформация.Объект) КАК ВложенныйЗапрос1
	        |		ПО ТаблицаРегистра.ДоговорКонтрагента.Владелец = ВложенныйЗапрос1.Объект
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Важность КАК Важность
	        |		ПО ТаблицаРегистра.ДоговорКонтрагента.Владелец = Важность.Объект
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Статус КАК Статус
	        |		ПО ТаблицаРегистра.ДоговорКонтрагента.Владелец = Статус.Объект
	        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |			Контрагенты.ЯШТИнтернет КАК ЯШТИнтернет,
	        |			Контрагенты.ЯШТТерминал КАК ЯШТТерминал,
	        |			Контрагенты.Ссылка КАК Ссылка
	        |		ИЗ
	        |			Справочник.Контрагенты КАК Контрагенты) КАК ВложенныйЗапрос2
	        |		ПО ТаблицаРегистра.ДоговорКонтрагента.Владелец = ВложенныйЗапрос2.Ссылка
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Группа КАК Группа
	        |		ПО ТаблицаРегистра.ДоговорКонтрагента.Владелец = Группа.Объект
	        |{ГДЕ
	        |	ВложенныйЗапрос.Область,
	        |	ВложенныйЗапрос.Город,
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	ТаблицаРегистра.Период,
	        |	ТаблицаРегистра.Регистратор.* КАК Регистратор,
	        |	ВложенныйЗапрос.ЮридическийАдрес,
	        |	ВложенныйЗапрос.ФактическийАдрес,
	        |	ВложенныйЗапрос.ДоставкаАдрес,
	        |	(ВЫРАЗИТЬ(Важность.Значение КАК ЧИСЛО(10, 0))) КАК Важность,
	        |	(ВЫРАЗИТЬ(Статус.Значение КАК Перечисление.КатегорииКонтрагентов)).* КАК Статус,
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.ЯШТИнтернет КАК Интернет,
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.ЯШТТерминал КАК Терминал,
	        |	ВложенныйЗапрос2.ЯШТИнтернет КАК Интернет,
	        |	ВложенныйЗапрос2.ЯШТТерминал КАК Терминал,
	        |	Группа.Значение.*}
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец,
	        |	ТаблицаРегистра.Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения,
	        |	ВложенныйЗапрос.Область,
	        |	ВложенныйЗапрос.Город,
	        |	ЭлПочта.Представление,
	        |	ВложенныйЗапрос.ЮридическийАдрес,
	        |	ВложенныйЗапрос.ФактическийАдрес,
	        |	ВЫБОР
	        |		КОГДА ВложенныйЗапрос1.Поле1 ЕСТЬ NULL 
	        |				ИЛИ ВложенныйЗапрос1.Поле1 = """"
	        |			ТОГДА ""Россия""
	        |		ИНАЧЕ ВложенныйЗапрос1.Поле1
	        |	КОНЕЦ,
	        |	ВложенныйЗапрос.ДоставкаАдрес,
	        |	Статус.Значение,
	        |	ВложенныйЗапрос2.ЯШТИнтернет,
	        |	ВложенныйЗапрос2.ЯШТТерминал,
	        |	Группа.Значение,
	        |	Важность.Значение
	        |{УПОРЯДОЧИТЬ ПО
	        |	Страна,
	        |	Область,
	        |	Город,
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.Период,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	ТаблицаРегистра.Регистратор.* КАК Регистратор,
	        |	Стоимость,
	        |	Количество,
	        |	ЮридическийАдрес,
	        |	ФактическийАдрес,
	        |	ДоставкаАдрес,
	        |	Важность,
	        |	Статус.*,
	        |	Интернет,
	        |	Терминал,
	        |	РабочаяГруппа.*}
	        |ИТОГИ
	        |	СУММА(Количество),
	        |	СУММА(КоличествоБазовыхЕд),
	        |	ВЫБОР
	        |		КОГДА СУММА(Количество) > 0
	        |			ТОГДА СУММА(Стоимость) / СУММА(Количество)
	        |		ИНАЧЕ 0
	        |	КОНЕЦ КАК Цена,
	        |	СУММА(Стоимость)
	        |ПО
	        |	ОБЩИЕ
	        |{ИТОГИ ПО
	        |	Страна,
	        |	Область,
	        |	Город,
	        |	ТаблицаРегистра.ДоговорКонтрагента.Владелец.* КАК Покупатель,
	        |	ТаблицаРегистра.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	        |	ТаблицаРегистра.ЗаказПокупателя.* КАК ЗаказПокупателя,
	        |	ТаблицаРегистра.Номенклатура.* КАК Номенклатура,
	        |	ТаблицаРегистра.Номенклатура.БазоваяЕдиницаИзмерения.* КАК НоменклатураБазоваяЕдиницаИзмерения,
	        |	ТаблицаРегистра.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	        |	ТаблицаРегистра.Подразделение.* КАК Подразделение,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ДЕНЬ)) КАК ПериодДень,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, МЕСЯЦ)) КАК ПериодМесяц,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, КВАРТАЛ)) КАК ПериодКвартал,
	        |	(НАЧАЛОПЕРИОДА(ТаблицаРегистра.Период, ГОД)) КАК ПериодГод,
	        |	ТаблицаРегистра.ДокументПродажи.* КАК ДокументПродажи,
	        |	АдресЭлПочты,
	        |	ЮридическийАдрес,
	        |	ФактическийАдрес,
	        |	ДоставкаАдрес,
	        |	Важность,
	        |	Статус.*,
	        |	Интернет,
	        |	Терминал,
	        |	РабочаяГруппа.*}
	        |АВТОУПОРЯДОЧИВАНИЕ";
	СтруктураПредставлениеПолей = Новый Структура("
	|Количество,
	|КоличествоБазовыхЕд,
	|Стоимость,
	|Покупатель,
	|ДоговорКонтрагента,
	|ЗаказПокупателя,
	|НоменклатураБазоваяЕдиницаИзмерения,
	|ХарактеристикаНоменклатуры,
	|КомментарийПокупателя,
	|Подразделение,
	|ПериодДень,
	|ПериодНеделя,
	|ПериодМесяц,
	|ПериодКвартал,
	|ПериодГод,
	|Страна,
	|Область,
	|АдресЭлПочты,
	|ЮридическийАдрес,
	|ФактическийАдрес,
	|ДоставкаАдрес",  //+++
	"Количество товара в единицах хранения остатков",
	"Количество товара в базовых единицах",
	"Продажная стоимость",
	"Покупатель",
	"Договор контрагента",
	"Заказ покупателя",
	"Базовая единица измерения",
	"Характеристика номенклатуры",
	"Комментарий покупателя",
	"Подразделение",
	"По дням",
	"По неделям",
	"По месяцам",
	"По кварталам",
	"По годам",
	"Страна",
	"Область (Географич.регион)",
	"Адрес эл. почты",
	"Юридический адрес",
	"Фактический адрес",
	"Адрес доставки");
	
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда
	
	    ТекстПоляСвойств= "";
		ТекстПоляКатегорий = "";

		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ДоговорКонтрагента.Владелец";
		СтрокаТаблицы.Представление = "Покупатель";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты;
		
		ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, Текст, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,,,,,,ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);
				
		ДобавитьВТекстСвойстваОбщие(Текст, ТекстПоляСвойств, "//ОБЩИЕ_СВОЙСТВА");
      // для избежания двойственности поля Номенклатура в запросе
	    
	//	УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, ОбщийОтчет.мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;
	
	ПостроительОтчета.Текст = Текст;
	//+++ Юр.Адрес!
	ПостроительОтчета.Параметры.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес); 
	
	ПостроительОтчета.Параметры.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);//+++ 06.05.2016 
//	ПостроительОтчета.Параметры.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	
	ПостроительОтчета.Параметры.Вставить("ВидФ", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента); 
	ПостроительОтчета.Параметры.Вставить("ВидАдресДоставки", Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00021")); 
	
	//+++ Эл.Адрес!
	ПостроительОтчета.Параметры.Вставить("ТипЭл", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	ПостроительОтчета.Параметры.Вставить("ВидЭл", Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыДляОбменаДокументами);
	
	ПостроительОтчета.Параметры.Вставить("АдресИностранный", Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Покупатель");
	МассивОтбора.Добавить("Номенклатура");
	МассивОтбора.Добавить("Подразделение");
	
	//+++ начальные настройки
	ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить("Страна");
	ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить("Область");
	ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить("Покупатель");
	
	
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	//ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Истина;
	ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке = истина; // НЕ работает!
	
 	ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество в единицах хранения", Истина, "ЧЦ=15; ЧДЦ=3");
	ОбщийОтчет.ЗаполнитьПоказатели("Цена", "Цена продажи", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("Стоимость", "Продажная стоимость в валюте упр. учета", Истина, "ЧЦ=15; ЧДЦ=2");
	

	ОбщийОтчет.мНазваниеОтчета = "Продажи с адресами";
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Истина;
	//+++ ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	

	// Установим дату начала отчета
	Если ЗначениеНеЗаполнено(ОбщийОтчет.ДатаНач) Тогда
		Если Не ЗначениеНеЗаполнено(глТекущийПользователь) Тогда
			ОбщийОтчет.ДатаНач = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("РентабельностьПродаж", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	//ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ПроцентНаценки", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПРоцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "Продажи";