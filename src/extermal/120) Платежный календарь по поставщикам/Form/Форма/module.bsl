
//Перем ТЗДолги; // основная таблица в которую копируются долги разбитые по срокам оплат;
Перем ТЗДатаОплаты; //ТЗДолгПоСделке,


Процедура КнопкаВыполнитьНажатие(Кнопка)
ЭлементыФормы.ПолеТабличногоДокумента.Очистить();	
ТабличныйДокумент =ЭлементыФормы.ПолеТабличногоДокумента;	
//ТабличныйДокумент = Новый ТабличныйДокумент;

Макет = ПолучитьМакет("Макет");

ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
ОбластьШапка.Параметры.КонДата = Формат (Кондата,"ДФ=dd.MM.yyyy");
ОбластьШапка.Параметры.Контрагент = Контрагент;
ОбластьШапка.Параметры.строкаПоставщики=?(не ЗначениеНеЗаполнено(Контрагент),"поставщику","поставщикам");
ОбластьШапка.Параметры.ДоговорКонтрагента = ?(ЗначениеНеЗаполнено(ДоговорКонтрагента),"","по договору "+СокрЛП(Строка(ДоговорКонтрагента))+", отв. лицо "+СокрЛП(Строка(ДоговорКонтрагента.ОтветственноеЛицо)));
ОбластьИТОГО = Макет.ПолучитьОбласть("СтрокаИтого");

ТабличныйДокумент.Вывести(ОбластьШапка);

ТЗДолги= Новый ТаблицаЗначений;	
ТЗДолги.Колонки.Добавить("Контрагент");
ТЗДолги.Колонки.Добавить("ДоговорКонтрагента");
ТЗДолги.Колонки.Добавить("Сделка");
ТЗДолги.Колонки.Добавить("ДатаОплаты");
ТЗДолги.Колонки.Добавить("ОстатокДолга");


// запрос производится по заказам, в поступлении товаров и услуг которых не заполнен График

Запрос = Новый Запрос;
Запрос.Текст="ВЫБРАТЬ
|	ДоговорКонтрагента.Владелец Контрагент,
|	ДоговорКонтрагента.Ссылка ДоговорКонтрагента,
|   Сделка Сделка,
|	-СуммаВзаиморасчетовОстаток  ОстатокДолга
|ИЗ
|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&КонДата, ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам
|	И ДоговорКонтрагента.ВидДоговора = &СПоставщиком  И Сделка ССЫЛКА Документ.ЗаказПоставщику"+
 ?(не ЗначениеНеЗаполнено(Контрагент),"  И ДоговорКонтрагента.Владелец=&Контрагент ","")+
 ?(не ЗначениеНеЗаполнено(ДоговорКонтрагента),"  И ДоговорКонтрагента=&ДоговорКонтрагента ","")+
 ?(не ЗначениеНеЗаполнено(ОтветственноеЛицо),"  И ДоговорКонтрагента.ОтветственноеЛицо=&ОтветственноеЛицо ","")+
 ") 	ГДЕ СуммаВзаиморасчетовОстаток<0";


Если не ЗначениеНеЗаполнено(Контрагент) Тогда
Запрос.УстановитьПараметр("Контрагент",Контрагент);
КонецЕсли;
Если не ЗначениеНеЗаполнено(ДоговорКонтрагента) Тогда
Запрос.УстановитьПараметр("ДоговорКонтрагента",ДоговорКонтрагента);
КонецЕсли;

Если не ЗначениеНеЗаполнено(ОтветственноеЛицо) Тогда
Запрос.УстановитьПараметр("ОтветственноеЛицо",ОтветственноеЛицо);
КонецЕсли;


Запрос.УстановитьПараметр("СПоставщиком",Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
Запрос.УстановитьПараметр("ПоЗаказам",Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам);
Запрос.УстановитьПараметр("КонДата",НачалоДня(КонецДня(КонДата)+1));

Результат=Запрос.Выполнить();

  Выборка=Результат.Выбрать();
  
  Если  Результат.Пустой() Тогда
	Возврат;	  
  КонецЕсли;  
  
  Пока Выборка.Следующий() Цикл
	  Если не ЗначениеНеЗаполнено(Выборка.Сделка) Тогда
		        ПолучитьДолгиПоставщикуПоСделке(Выборка.Сделка,Выборка.ОстатокДолга,ТЗДолги);
	  КонецЕсли;
  КонецЦикла;  
  
  Для каждого строка из ТЗДолги Цикл
	  Если ЗначениеНеЗаполнено(строка.ДатаОплаты)  Тогда
		  строка.ДатаОплаты=ПустоеЗначениеТипа(Тип("Дата"));
	  КОнецЕсли;	
	  
	  Если СворачиватьДоДатыКонтроля Тогда
		  Если строка.ДатаОплаты<=КонДата Тогда
			  строка.ДатаОплаты=КонДата;
		  КонецЕсли;	
	КонецЕсли;
 КонецЦикла;

  
  
  ТЗДолги.Сортировать("ДатаОплаты Возр,Сделка Возр");
  
  ТЗДолгиПоЗаказам=ТЗДолги.Скопировать();
  ТЗДолгиПоЗаказам.Свернуть("Контрагент,ДоговорКонтрагента,ДатаОплаты,Сделка","ОстатокДолга");
  
 ТЗДолги.Свернуть("Контрагент,ДоговорКонтрагента,ДатаОплаты","ОстатокДолга");
 ТЗДолги.Сортировать("ДатаОплаты,Контрагент,ДоговорКонтрагента");

//ТЗДатаОплаты - таблица только дат оплаты
 
ТЗДатаОплаты=ТЗДолги.Скопировать();
ТЗДатаОплаты.Свернуть("ДатаОплаты");

СуммаДолгаИтог=0;

 ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
 Для каждого строка ИЗ ТЗДатаОплаты Цикл
	 Если ПоказатьОплатыВПериоде И НЕ(строка.ДатаОплаты>=НачалоДня(НачПериода) И строка.ДатаОплаты<=КонецДня(КонПериода)) Тогда
		Продолжить;	 
	 КонецЕсли;	 
		 
	ОбластьДО = Макет.ПолучитьОбласть("ДатаОплаты");
	ОбластьДО.Параметры.ДатаОплаты = Формат (строка.ДатаОплаты,"ДФ=dd.MM.yyyy");
	
	Отбор = Новый Структура();
	Отбор.Вставить("ДатаОплаты",строка.ДатаОплаты);
	Строки=ТЗДолги.НайтиСтроки(Отбор);
	Если Строки.Количество()>0 Тогда
		
		НакопСумма=0;
		Для каждого КонтрагентСтрока Из Строки Цикл
			НакопСумма=НакопСумма+КонтрагентСтрока.ОстатокДолга;
		КонецЦикла;	
		СуммаДолгаИтог=СуммаДолгаИтог+НакопСумма;
		ОбластьДО.Параметры.Сумма=НакопСумма;
		
		
		ТабличныйДокумент.Вывести(ОбластьДО,1);
		Для каждого КонтрагентСтрока Из Строки Цикл
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаКОнтрагент");
			ОбластьСтрока.Параметры.Контрагент= КонтрагентСтрока.Контрагент;
			ОбластьСтрока.Параметры.ДоговорКонтрагента= КонтрагентСтрока.ДоговорКонтрагента;
			
			//ОбластьСтрока.Параметры.Сделка= КонтрагентСтрока.Сделка;
			ОбластьСтрока.Параметры.Сумма= КонтрагентСтрока.ОстатокДолга;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока,2);
			
			Отбор=Новый Структура();
			Отбор.Вставить("ДатаОплаты",строка.ДатаОплаты);
			Отбор.Вставить("Контрагент",КонтрагентСтрока.Контрагент);
			Отбор.Вставить("ДоговорКонтрагента",КонтрагентСтрока.ДоговорКонтрагента);
			
			НайдСтроки= ТЗДолгиПоЗаказам.НайтиСтроки(Отбор);
			Если НайдСтроки.Количество()>0 Тогда
				
				Для каждого СделкаСтрока Из НайдСтроки Цикл
					ОбластьСделка = Макет.ПолучитьОбласть("СтрокаСделка");
					ОбластьСделка.Параметры.Сделка=СделкаСтрока.Сделка;
					ОбластьСделка.Параметры.Сумма=СделкаСтрока.ОстатокДолга;
					ТабличныйДокумент.Вывести(ОбластьСделка,3);
				КонецЦикла;	
				КонецЕсли;	
			
		КонецЦикла;
	КонецЕсли;	
	
	
КонецЦикла;	

ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();

ОбластьИТОГО.Параметры.Сумма=СуммаДолгаИтог;
ТабличныйДокумент.Вывести(ОбластьИТОГО);



КонецПроцедуры


Процедура ВыбПериодНажатие(Элемент)
	//НастройкаПериода = Новый НастройкаПериода;
	//НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	//НастройкаПериода.РедактироватьКакИнтервал = Истина;
	//НастройкаПериода.РедактироватьКакПериод = Истина;
	//НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	//НастройкаПериода.Редактировать();
	//НачДата = НастройкаПериода.ПолучитьДатуНачала();
	//КонДата = НастройкаПериода.ПолучитьДатуОкончания();
КонецПроцедуры

Процедура ПоВсемКонтрагентамПриИзменении(Элемент)
	 ЭлементыФормы.Контрагент.Значение=Справочники.Контрагенты.ПустаяСсылка();
КонецПроцедуры

Процедура ПриОткрытии()
	КонДата=КонецДня(ТекущаяДата());
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("ДокументСсылка.ЗаказПокупателя")
		 ИЛИ ТипЗнч(Расшифровка) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		СЗ = Новый СписокЗначений;
		СЗ.Добавить("Открыть", "Открыть документ...",,БиблиотекаКартинок.ОткрытьДокумент);
		СЗ.Добавить("ОткрытьДвижения", "Открыть взаиморасчеты по документу...",,БиблиотекаКартинок.Отчет);
		СЗ.Добавить("ОткрытьСтруктуру", "Открыть структуру подчиненности документа...",,БиблиотекаКартинок.ТолькоСкрепка);
		
		Выбор = ВыбратьИзМеню(СЗ, Элемент);
		
		Если Выбор = Неопределено Тогда
		
			СтандартнаяОбработка = Ложь;
			Возврат;
			
		Иначе
			
			Если Выбор.Значение <> "Открыть" Тогда
				
				Если Выбор.Значение = "ОткрытьДвижения" Тогда
					
					СтандартнаяОбработка = Ложь;
					ВывестиВзаиморасчетыПоДокументу(Расшифровка);
					
				ИначеЕсли Выбор.Значение = "ОткрытьСтруктуру" Тогда
					
					СтандартнаяОбработка = Ложь;
				    ПоказатьСтруктуруПодчиненностиДокумента(Расшифровка);
					
				КонецЕсли; 
			
			КонецЕсли; 
		
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		СтандартнаяОбработка = Ложь;
		ВывестиВзаиморасчетыПоДокументу(Расшифровка, Истина);	
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ВывестиВзаиморасчетыПоДокументу(Ссылка, ПустаяСделка = Ложь)
	
	
	Отчет = Отчеты.ВедомостьВзаиморасчетыСКонтрагентами.Создать();
	
	Отчет.ЗаполнитьНачальныеНастройки();
	
	ФормаОбработки = Отчет.ПолучитьОсновнуюФорму();
	
	ФормаОбработки.Открыть();
	
	Отчет.ОбщийОтчет.ДатаКон = КонецДня(КонДата);
	
	Для Каждого СтрОтб из ФормаОбработки.ПостроительОтчета.Отбор Цикл
		
		СтрОтб.Использование = Ложь;	
		
	КонецЦикла;
	
	///
	Если ФормаОбработки.ПостроительОтчета.Отбор.Найти("Контрагент") = Неопределено Тогда
	
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("Контрагент");
		
	Иначе
		
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Найти("Контрагент");
	
	КонецЕсли; 
	
	СтрОтб.ВидСравнения = ВидСравнения.Равно;
	СтрОтб.Значение = Ссылка.Контрагент;
	СтрОтб.Использование = Истина;

	///
	Если ФормаОбработки.ПостроительОтчета.Отбор.Найти("Сделка") = Неопределено Тогда
	
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("Сделка");
		
	Иначе
		
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Найти("Сделка");
	
	КонецЕсли; 

	СтрОтб.ВидСравнения = ВидСравнения.Равно;
	
	СтрОтб.Значение = ?(ПустаяСделка, Неопределено, Ссылка);
	
	СтрОтб.Использование = Истина;
	
	///
	Если ФормаОбработки.ПостроительОтчета.Отбор.Найти("ДоговорКонтрагента") = Неопределено Тогда
	
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента");
		
	Иначе
		
		СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Найти("ДоговорКонтрагента");
	
	КонецЕсли;
	
	СтрОтб.ВидСравнения = ВидСравнения.Равно;
	СтрОтб.Значение = Ссылка.ДоговорКонтрагента;
	СтрОтб.Использование = Истина;	
	
	ФормаОбработки.ПостроительОтчета.ВыбранныеПоля.Очистить();
	
	ФормаОбработки.ПостроительОтчета.ВыбранныеПоля.Добавить(ФормаОбработки.ПостроительОтчета.ДоступныеПоля.Период.ПутьКДанным, ФормаОбработки.ПостроительОтчета.ДоступныеПоля.Период.Имя);
	ФормаОбработки.ПостроительОтчета.ВыбранныеПоля.Добавить(ФормаОбработки.ПостроительОтчета.ДоступныеПоля.Регистратор.ПутьКДанным, ФормаОбработки.ПостроительОтчета.ДоступныеПоля.Регистратор.Имя);
	
	ФормаОбработки.ОбновитьОтчет();
	
	Возврат;


КонецПроцедуры

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
		// сохраним договор контрагента, возможно понадобится к нему вернуться
	мТекущийДоговорКонтрагента = ДоговорКонтрагента;

	СписокВидовДоговоров = Новый СписокЗначений;
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	
	НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, ДоговорКонтрагента,
	                                        СписокВидовДоговоров, СтандартнаяОбработка);

КонецПроцедуры

Процедура ОбновлениеОтображения()
	ЭлементыФормы.НадписьКонтрагент.Значение=?(ЗначениеНеЗаполнено(Контрагент),"по всем","");
	ЭлементыФормы.НадписьДоговор.Значение=?(ЗначениеНеЗаполнено(ДоговорКонтрагента),"по всем","отв. лицо:"+Строка(ДоговорКонтрагента.ОтветственноеЛицо));
	ЭлементыФормы.НадписьОтвЛицо.Значение=?(ЗначениеНеЗаполнено(ОтветственноеЛицо),"по всем","");
	ЭлементыФормы.Надпись1.Видимость=ПоказатьОплатыВПериоде;
	ЭлементыФормы.НачПериода.Видимость=ПоказатьОплатыВПериоде;
	ЭлементыФормы.Надпись5.Видимость=ПоказатьОплатыВПериоде;
	ЭлементыФормы.КонПериода.Видимость=ПоказатьОплатыВПериоде;
	ЭлементыФормы.КнопкаВыбораПериода.Видимость=ПоказатьОплатыВПериоде;
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
КонецПроцедуры

Процедура ВыбПериодНажатие1(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

