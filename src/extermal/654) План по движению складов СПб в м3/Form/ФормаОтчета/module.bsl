
Процедура ПриОткрытии()
	
	Подразделение = Справочники.Подразделения.НайтиПоКоду("00112");
	
	Попытка
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НастройкиОбработокСрезПоследних.ТЧ
			|ИЗ
			|	РегистрСведений.НастройкиОбработок.СрезПоследних КАК НастройкиОбработокСрезПоследних
			|ГДЕ
			|	НастройкиОбработокСрезПоследних.ВидОбработки = ""ПланируемоеДвижениеОбъемовТоваровПоСклад""";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ПолученноеЗначение = Выборка.ТЧ.Получить();
		КонецЕсли;
		Если ТипЗнч(ПолученноеЗначение) = Тип("ТаблицаЗначений") Тогда
			ТаблицаСоответствий.Загрузить(ПолученноеЗначение);
		//Иначе
		//	ПолученноеЗначение = ВосстановитьЗначение("ТЧТаблицаСоответствий");
		//	Если ТипЗнч(ПолученноеЗначение) = Тип("ТаблицаЗначений") Тогда
		//		ТаблицаСоответствий.Загрузить(ПолученноеЗначение);
		//	КонецЕсли;
		КонецЕсли;
	Исключение
		//ПолученноеЗначение = ВосстановитьЗначение("ТЧТаблицаСоответствий");
		//Если ТипЗнч(ПолученноеЗначение) = Тип("ТаблицаЗначений") Тогда
		//	ТаблицаСоответствий.Загрузить(ПолученноеЗначение);
		//КонецЕсли;
	КонецПопытки;

КонецПроцедуры

Процедура ДействияФормыСформировать(Кнопка)
	
	СтрокаСПустойГруппойСкладов = ТаблицаСоответствий.Найти(Справочники.ГруппыСкладов.ПустаяСсылка());
	Если НЕ СтрокаСПустойГруппойСкладов = Неопределено Тогда
		Сообщить("Перед формированием отчета необходимо заполнить все соответствия групп складов для номенклатурных групп. Иначе результат отчета не будет достоверным.");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Период", КонецДня(ПериодОтчета));
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Пустая", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Склад.ГруппаСкладов КАК ГруппаСкладов,
	               |	ВЫБОР
	               |		КОГДА ТоварыНаСкладахОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель = &Пустая
	               |			ТОГДА ТоварыНаСкладахОстатки.Номенклатура.НоменклатурнаяГруппа
	               |		ИНАЧЕ ТоварыНаСкладахОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель
	               |	КОНЕЦ КАК НоменклатурнаяГруппа,
	               |	СУММА(ТоварыНаСкладахОстатки.Номенклатура.ЕдиницаХраненияОстатков.Объем * ТоварыНаСкладахОстатки.КоличествоОстаток) КАК Остатки,
	               |	0 КАК Доставка,
	               |	0 КАК Самовывоз,
	               |	0 КАК Поставки
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад.Подразделение = &Подразделение) КАК ТоварыНаСкладахОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстатки.Склад.ГруппаСкладов,
	               |	ВЫБОР
	               |		КОГДА ТоварыНаСкладахОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель = &Пустая
	               |			ТОГДА ТоварыНаСкладахОстатки.Номенклатура.НоменклатурнаяГруппа
	               |		ИНАЧЕ ТоварыНаСкладахОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель
	               |	КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	NULL,
	               |	ВЫБОР
	               |		КОГДА ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель = &Пустая
	               |			ТОГДА ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа
	               |		ИНАЧЕ ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель
	               |	КОНЕЦ,
	               |	0,
	               |	СУММА(ВЫБОР
	               |			КОГДА НЕ ЗаказыПокупателейОстатки.ЗаказПокупателя.Самовывоз
	               |				ТОГДА ЗаказыПокупателейОстатки.Номенклатура.ЕдиницаХраненияОстатков.Объем * ЗаказыПокупателейОстатки.КоличествоОстаток
	               |		КОНЕЦ),
	               |	СУММА(ВЫБОР
	               |			КОГДА ЗаказыПокупателейОстатки.ЗаказПокупателя.Самовывоз
	               |				ТОГДА ЗаказыПокупателейОстатки.Номенклатура.ЕдиницаХраненияОстатков.Объем * ЗаказыПокупателейОстатки.КоличествоОстаток
	               |		КОНЕЦ),
	               |	0
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателей.Остатки(
	               |			,
	               |			ЗаказПокупателя.Подразделение = &Подразделение
	               |				И ЗаказПокупателя.Проверен
	               |				И ЗаказПокупателя.ДатаОтгрузки >= &ТекДата
	               |				И ЗаказПокупателя.ДатаОтгрузки <= &Период) КАК ЗаказыПокупателейОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВЫБОР
	               |		КОГДА ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель = &Пустая
	               |			ТОГДА ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа
	               |		ИНАЧЕ ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель
	               |	КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	NULL,
	               |	ВЫБОР
	               |		КОГДА ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель = &Пустая
	               |			ТОГДА ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа
	               |		ИНАЧЕ ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель
	               |	КОНЕЦ,
	               |	0,
	               |	0,
	               |	0,
	               |	СУММА(ЗаказыПоставщикамОстатки.Номенклатура.ЕдиницаХраненияОстатков.Объем * ЗаказыПоставщикамОстатки.КоличествоОстаток)
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	               |			,
	               |			ЗаказПоставщику.Подразделение = &Подразделение
	               |				И ЗаказПоставщику.ДатаПоступления >= &ТекДата
	               |				И ЗаказПоставщику.ДатаПоступления <= &Период) КАК ЗаказыПоставщикамОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВЫБОР
	               |		КОГДА ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель = &Пустая
	               |			ТОГДА ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа
	               |		ИНАЧЕ ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель
	               |	КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	NULL,
	               |	ВЫБОР
	               |		КОГДА ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель = &Пустая
	               |			ТОГДА ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа
	               |		ИНАЧЕ ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель
	               |	КОНЕЦ,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	СУММА(ЗаказыПокупателейОстатки.Номенклатура.ЕдиницаХраненияОстатков.Объем * ЗаказыПокупателейОстатки.КоличествоОстаток)
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателей.Остатки(
	               |			,
	              // |			ЗаказПокупателя.Подразделение = &ГоловноеПодразделение И
	               |			 ЗаказПокупателя.Контрагент.Код = ""П000835""
	               |				И ЗаказПокупателя.Проверен
	               |				И ЗаказПокупателя.ДатаОтгрузки >= &ТекДата
	               |				И ЗаказПокупателя.ДатаОтгрузки <= &Период) КАК ЗаказыПокупателейОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВЫБОР
	               |		КОГДА ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель = &Пустая
	               |			ТОГДА ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа
	               |		ИНАЧЕ ЗаказыПокупателейОстатки.Номенклатура.НоменклатурнаяГруппа.Родитель
	               |	КОНЕЦ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ГруппаСкладов,
	               |	НоменклатурнаяГруппа
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрТЗ ИЗ ТЗ Цикл
		Если СтрТЗ.ГруппаСкладов = NULL Тогда
			СтрокаСоответствия = ТаблицаСоответствий.Найти(СтрТЗ.НоменклатурнаяГруппа);
			Если СтрокаСоответствия = Неопределено Тогда
				СтрТЧ = ТаблицаСоответствий.Добавить();
				СтрТЧ.НоменклатурнаяГруппа = СтрТЗ.НоменклатурнаяГруппа;
				Сообщить("Необходимо заполнить соответствие группе складов для номенклатурной группы " + СтрТЗ.НоменклатурнаяГруппа.Наименование);
			Иначе
				СтрТЗ.ГруппаСкладов = СтрокаСоответствия.ГруппаСкладов;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ТаблицаСоответствий.Сортировать("НоменклатурнаяГруппа");
	
	ТЗ.Свернуть("ГруппаСкладов,НоменклатурнаяГруппа","Остатки,Доставка,Самовывоз,Поставки");
	
	Настройки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ВнешнийНаборДанных = Новый Структура("ТабДанные", ТЗ);
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки);	
	
	ЭлементыФормы.Результат.Очистить();
	ДокументРезультат = ЭлементыФормы.Результат;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1);
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);
	
КонецПроцедуры

Процедура ПериодОтчетаПриИзменении(Элемент)
	
	Если КонецДня(ПериодОтчета) < КонецДня(ТекущаяДата()) Тогда
		Сообщить("Необходимо указать будущую дату");
		ПериодОтчета = Дата(1,1,1);
	Иначе
		ПериодОтчета = КонецДня(ПериодОтчета);
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗакрытии()

    НоваяЗапись = РегистрыСведений.НастройкиОбработок.СоздатьМенеджерЗаписи();
    НоваяЗапись.Период = НачалоГода(ТекущаяДата());
	НоваяЗапись.ВидОбработки = "ПланируемоеДвижениеОбъемовТоваровПоСкладамСПб";
    НоваяЗапись.ТЧ = Новый ХранилищеЗначения(ТаблицаСоответствий.Выгрузить());
    НоваяЗапись.Записать(); 
	
	//СохранитьЗначение("ТЧТаблицаСоответствий", ТаблицаСоответствий.Выгрузить());
	
КонецПроцедуры

Процедура СоответствиеГруппаСкладовПриИзменении(Элемент)
	
    НоваяЗапись = РегистрыСведений.НастройкиОбработок.СоздатьМенеджерЗаписи();
    НоваяЗапись.Период = НачалоГода(ТекущаяДата());
	НоваяЗапись.ВидОбработки = "ПланируемоеДвижениеОбъемовТоваровПоСкладамСПб";
    НоваяЗапись.ТЧ = Новый ХранилищеЗначения(ТаблицаСоответствий.Выгрузить());
    НоваяЗапись.Записать(); 
	
КонецПроцедуры
