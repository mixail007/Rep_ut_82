
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	//+++ начальные данные
	НачалоПериода = НачалоДня(ТекущаяДата());
	КонецПериода = КонецДня(ТекущаяДата());
	Расценка = 0.07;	
	Сотрудник = Справочники.ФизическиеЛица.ПустаяСсылка();
	Головное = справочники.Подразделения.НайтиПоКоду("00005");
		
	ЭлементыФормы.ПолеТабличногоДокумента.	ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	//ЭлементыФормы.ПолеТабличногоДокумента.ТолькоПросмотр = Истина;
	//ЭлементыФормы.ПолеТабличногоДокумента.Защита = Истина;

	ОтчетИнициализация();

КонецПроцедуры

Процедура ПриЗакрытии()

	СохранитьЗначение("НастройкаВнешниеОбработкиВнешняяОбработка1Отчет_03dfad30-5dd0-4b14-bcda-ca6e7534d98a", ПостроительОтчетаОтчет.ПолучитьНастройки());

КонецПроцедуры

Процедура ДействияФормыОтчетНастройка(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Форма = ВнешняяОбработкаОбъект.ПолучитьФорму("ОтчетНастройка");
	Форма.ПостроительОтчета = ПостроительОтчетаОтчет;
	Настройка = ПостроительОтчетаОтчет.ПолучитьНастройки();
	Если Форма.ОткрытьМодально() = Истина Тогда
		ОтчетВывести();
	Иначе
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_НАСТРОЙКА
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
  	ОтчетИнициализация();
	ОтчетВывести();

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры



//+++
Процедура ОтчетВывести()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ЭлементыФормы.ПолеТабличногоДокумента.Очистить();
	ЭлементыФормы.Диаграмма.Очистить();

	ПостроительОтчетаОтчет.Параметры.Вставить("Головное", Головное );//+++ 28.07.2016			
 	ПостроительОтчетаОтчет.Параметры.Вставить("НачалоПериода", НачалоПериода);
	ПостроительОтчетаОтчет.Параметры.Вставить("КонецПериода", КонецПериода);
	ПостроительОтчетаОтчет.Параметры.Вставить("Сотрудник", Сотрудник);
    ПостроительОтчетаОтчет.Параметры.Вставить("Контрагент", Контрагент);
	
 	
	//ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.ПолеТабличногоДокумента);
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ВЫПОЛНИТЬ
	
	
	
ВыводитьДиаграмму = Истина; //(ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Страница2);
	
	//+++ выводим ТАБЛИЦУ сами..............
    запрос = новый запрос;
	запрос.Текст = ПостроительОтчетаОтчет.Текст;
	
	запрос.УстановитьПараметр("Головное", Головное );//+++ 28.07.2016			
 	запрос.Параметры.Вставить("НачалоПериода",НачалоПериода);
	запрос.Параметры.Вставить("КонецПериода", КонецПериода );
	запрос.Параметры.Вставить("Сотрудник",Сотрудник);
	запрос.Параметры.Вставить("Контрагент", Контрагент);
	
	//запрос.Параметры.Расценка = Расценка;
	Состояние("Идет получение данных отчета...");
	рез = запрос.Выполнить();
	
	ТабДокумент = ЭлементыФормы.ПолеТабличногоДокумента; //новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВнешняяОбработка_ВесПоГрузчикам";

	Макет = ПолучитьМакет("Макет");

	
	Состояние("Идет формирование таблицы...");
	// Выводим шапку накладной
 	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок|Сотрудник");
	период="";
	Если НачалоПериода=НачалоДня(КонецПериода) тогда
		период = "за "+Формат(НачалоПериода,"ДФ='dd MMMM yyyy'");
	иначе
		период = "с "+Формат(НачалоПериода,"ДФ='dd MMMM yyyy'")+" по "+Формат(КонецПериода,"ДФ='dd MMMM yyyy'");
	КонецЕсли;	
	ОбластьМакета.Параметры.ТекстЗаголовка = "Отчет "+период+"г.";
	Если ЗначениеЗаполнено(ЭлементыФормы.Сотрудник.Значение) тогда
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбластьМакета.Параметры.ТекстЗаголовка +" для Сотрудника: "+ЭлементыФормы.Сотрудник.Значение.Наименование;
	КонецЕсли;	
	ОбластьМакета.Параметры.ТекДата = "данные от "+Формат(ТекущаяДата(),"ДФ='dd.MM.yyyy HH:mm'");
	ТабДокумент.Вывести(ОбластьМакета);
    //----------------------------------------------------------

	ОбластьМакета1 = Макет.ПолучитьОбласть("Строка|ИтогоСотр");
	ОбластьМакета11 = Макет.ПолучитьОбласть("ШапкаТаблицы|ИтогоСотр");
	
	ОбластьМакета2 = Макет.ПолучитьОбласть("Строка|Сотрудник");
	
	ОбластьМакета3 = Макет.ПолучитьОбласть("Строка|Контрагент");
	ОбластьМакета33 = Макет.ПолучитьОбласть("ШапкаТаблицы|Контрагент");
	
	ОбластьМакета4 = Макет.ПолучитьОбласть("ИтогоКонтр|Контрагент");
//---------Цикл по сотрудникам-------------------------------------	
	//выборкаОбщ = рез.выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//выборкаСотр = рез.выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщиеИтоги = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаОбщиеИтоги.Следующий() Тогда
		
		выборкаСотр = ВыборкаОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		//------------Выводим и считаем Контрагентов-----------------
		ЭтоПервая = Ложь; 
		ОбластьМакета0 = Макет.ПолучитьОбласть("ШапкаТаблицы|Сотрудник");
		ТабДокумент.Вывести(ОбластьМакета0);
		
		мас = новый Массив;  N=0; 
		Контр = новый Массив;  j=0;
		
		тзКонтр = Новый ТаблицаЗначений;
		тзКонтр.Колонки.Добавить("Контрагент");
		выборкаКонтр = получитьВыборкуКонтрагентов();
		пока выборкаКонтр.Следующий() цикл		
			ОбластьМакета33.параметры.Контрагент = выборкаКонтр.Контрагент;
			ТабДокумент.Присоединить(ОбластьМакета33);//Шапка или Сумма
			//мас.Добавить(выборкаКонтр.Контрагент); 
			N=N+1;//максимальное число Контрагентов
			НовСтрКонтр = тзКонтр.Добавить();
			НовСтрКонтр.Контрагент = выборкаКонтр.Контрагент;
			Контр.Добавить(0);			
		КонецЦикла;	
		
		тзКонтр.Сортировать("Контрагент");
		мас = тзКонтр.ВыгрузитьКолонку("Контрагент");
		
		ОбластьМакета11 = Макет.ПолучитьОбласть("ШапкаТаблицы|ИтогоСотр");
		ТабДокумент.Присоединить(ОбластьМакета11);
		
		i=0; j=0;
		//ВесНеттоИтог = 0;
		//-------------------------------------------------------------------------------	
		пока выборкаСотр.Следующий() цикл
			ОбластьМакета2.параметры.Сотрудник = ВыборкаСотр.Сотрудник;
			ТабДокумент.Вывести(ОбластьМакета2);//сотрудник
			если j=0 тогда 
				ТабДокумент.ФиксацияСверху = 4;
			КонецЕсли;	
			
			//итоги по Сотруднику
			ОбластьМакета1.параметры.ВсегоСотр = ВыборкаСотр.ВесВсего;
			ОбластьМакета1.параметры.СуммаСотр = ВыборкаСотр.ВесВсего * расценка;
			ОбластьМакета1.параметры.НеттоСотр = ВыборкаСотр.ВесНетто;
			
			//---------------ЦИКЛ ПО КОНТРАГЕНТУ---------------------------------
			выборкаКонтр = выборкаСотр.выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			i=0; ЭтоПервый = Истина;
			ТабДокумент.НачатьГруппуКолонок();
			пока выборкаКонтр.Следующий() цикл
				пока (i<N) цикл
					Если (ВыборкаКонтр.Контрагент=мас[i]) тогда
						прервать;//выход из цикла
					КонецЕсли;	
					ОбластьМакета3.параметры.ВесВсего =	0;
					ТабДокумент.Присоединить(ОбластьМакета3);//Шапка или Сумма
					i=i+1; 
				КонецЦикла;
				
				Если i<N тогда
					Контр[i] = Контр[i] + ВыборкаКонтр.ВесВсего;
					
					ОбластьМакета3.параметры.ВесВсего = ВыборкаКонтр.ВесВсего;
					ТабДокумент.Присоединить(ОбластьМакета3);//Шапка или Сумма
				КонецЕсли;
				
				Если ЭтоПервый тогда
					ТабДокумент.ФиксацияСлева = 1;
					ЭтоПервый = ЛОЖЬ;
				КонецЕсли;
				i=i+1;
			КонецЦикла;       
			
			//---------------добиваем 0-ми до итогов-----------------------
			Если НЕ ЗначениеЗаполнено(Сотрудник) тогда
				пока i<N цикл
					ОбластьМакета3.параметры.ВесВсего =	0;
					ТабДокумент.Присоединить(ОбластьМакета3);//Шапка или Сумма
					i=i+1;
				КонецЦикла;
			КонецЕсли;	
			ТабДокумент.ЗакончитьГруппуКолонок();
			ТабДокумент.Присоединить(ОбластьМакета1);  //Итого Сотр 
			j=j+1;//индекс сотрудника
		КонецЦикла;
		
		//=======================Итоги Контр==========================
		ОбластьМакета1 = Макет.ПолучитьОбласть("ИтогоКонтр|Сотрудник"); 
		ТабДокумент.Вывести(ОбластьМакета1);//итого 
		
		ОбластьМакета2 = Макет.ПолучитьОбласть("ИтогоКонтр|Контрагент"); 
		
		сум=0;
		для i=0 по N-1 цикл
			ОбластьМакета2.параметры.ВесВсего = Контр[i];
			сум = сум + Контр[i];
			ТабДокумент.Присоединить(ОбластьМакета2);
		КонецЦикла;
		
		ОбластьМакета3 = Макет.ПолучитьОбласть("ИтогоКонтр|ИтогоСотр"); 
		//========================Итоги итогов==================		
		//ОбластьМакета3.Параметры.ВсегоСотр = сум;
		//ОбластьМакета3.Параметры.СуммаСотр = сум * Расценка;
		ОбластьМакета3.Параметры.ВсегоСотр = ВыборкаОбщиеИтоги.ВесВсего;
		ОбластьМакета3.Параметры.СуммаСотр = ВыборкаОбщиеИтоги.ВесВсего * Расценка;
		ОбластьМакета3.Параметры.НеттоСотр = ВыборкаОбщиеИтоги.ВесНетто;
		ТабДокумент.Присоединить(ОбластьМакета3);
		
	КонецЕсли;
	
	ТабДокумент.Защита = Ложь;
	ТабДокумент.ТолькоПросмотр = Истина;
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Состояние("Идет вывод данных отчета в таблицу...");
	ТабДокумент.Показать();
	
	//------------------------------------------------	
	Если ВыводитьДиаграмму тогда
		Состояние("Идет формирование диаграммы...");
		ПостроительОтчетаОтчет.Выполнить();
		ПостроительОтчетаОтчет.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
		ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВСтроках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
		ПостроительОтчетаОтчет.РазмещениеРеквизитовИзмеренийВКолонках = ТипРазмещенияРеквизитовИзмерений.Отдельно;
		//ПостроительОтчетаОтчет.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Классика);
		
		Состояние("Идет вывод данных в диаграмму...");
		ПостроительОтчетаОтчет.Вывести(ЭлементыФормы.Диаграмма);
	КонецЕсли;
	
	Состояние(" ");
	
КонецПроцедуры

Процедура ОтчетИнициализация()
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	         
	
текст =	"ВЫБРАТЬ
       	|	ДанныеПоГрузчикамОбороты.Регистратор.Контрагент КАК Контрагент,
       	|	ДанныеПоГрузчикамОбороты.Сотрудник КАК Сотрудник,
		  |	ВЫРАЗИТЬ(ДанныеПоГрузчикамОбороты.ВесНеттоОборот + ДанныеПоГрузчикамОбороты.ВесДискиОборот + ДанныеПоГрузчикамОбороты.ВесИмпортОборот + ДанныеПоГрузчикамОбороты.ВесПеремещенияОборот КАК ЧИСЛО(15, 1)) КАК ВесВсего,
     //  	|	Выбор Когда ВЫРАЗИТЬ(ДанныеПоГрузчикамОбороты.ВесНеттоОборот КАК Число(15, 1)) <> 0 Тогда ВЫРАЗИТЬ(ДанныеПоГрузчикамОбороты.ВесНеттоОборот + ДанныеПоГрузчикамОбороты.ВесДискиОборот + ДанныеПоГрузчикамОбороты.ВесИмпортОборот + ДанныеПоГрузчикамОбороты.ВесПеремещенияОборот КАК ЧИСЛО(15, 1)) Иначе 0 Конец КАК ВесВсего,
    //  	|	ВЫРАЗИТЬ(ДанныеПоГрузчикамОбороты.ВесНеттоОборот КАК ЧИСЛО(15, 1)) КАК ВесВсего,
       	|	ДанныеПоГрузчикамОбороты.ВесНеттоОборот КАК ВесНетто,
       	|	ДанныеПоГрузчикамОбороты.ВесДискиОборот КАК ВесДиски,
       	|	ДанныеПоГрузчикамОбороты.ВесИмпортОборот КАК ВесИмпорт,
       	|	ДанныеПоГрузчикамОбороты.ВесПеремещенияОборот КАК ВесПеремещения
       	|{ВЫБРАТЬ
       	|	Сотрудник.*,
       	|	Контрагент.*,
       	|	ВесВсего,
       	|	ВесНетто,
       	|	ВесДиски,
       	|	ВесИмпорт,
       	|	ВесПеремещения}
       	|ИЗ
       	|	РегистрНакопления.ДанныеПоГрузчикам.Обороты(
       	|			&НачалоПериода,
       	|			&КонецПериода,
       	|			Регистратор,";//			(Дата >= &НачалоПериода) И (Дата <= &КонецПериода) "; 
	Если ЗначениеЗаполнено(ЭлементыФормы.Сотрудник.Значение) тогда
		Текст = Текст + " Сотрудник = &Сотрудник";
	КонецЕсли;
		текст = Текст+" ) КАК ДанныеПоГрузчикамОбороты
        |ГДЕ
       |	выбор когда &Головное = Значение(Справочник.Подразделения.ПустаяСсылка) тогда истина
	   |		иначе ДанныеПоГрузчикамОбороты.Регистратор.Подразделение = &Головное Конец 
	//    |	ВЫРАЗИТЬ(ДанныеПоГрузчикамОбороты.ВесНеттоОборот + ДанныеПоГрузчикамОбороты.ВесДискиОборот + ДанныеПоГрузчикамОбороты.ВесИмпортОборот + ДанныеПоГрузчикамОбороты.ВесПеремещенияОборот КАК ЧИСЛО(15, 1))  <> 0
	    |	И ВЫРАЗИТЬ(ДанныеПоГрузчикамОбороты.ВесНеттоОборот КАК ЧИСЛО(15, 1))  <> 0
	   	|";//			(Дата >= &НачалоПериода) И (Дата <= &КонецПериода) "; 
	Если ЗначениеЗаполнено(ЭлементыФормы.Контрагент.Значение) тогда
		Текст = Текст + " И (ДанныеПоГрузчикамОбороты.Регистратор.Контрагент = &Контрагент)";
	КонецЕсли;	
	текст = Текст+"
		|{ГДЕ
       	|	(НАЧАЛОПЕРИОДА(ДанныеПоГрузчикамОбороты.Период, ДЕНЬ)) КАК Дата,
       	|	ДанныеПоГрузчикамОбороты.Сотрудник.*,
       	|	ДанныеПоГрузчикамОбороты.Регистратор.Контрагент.* КАК Контрагент,
       	|	ДанныеПоГрузчикамОбороты.Регистратор.*,
       |	(ДанныеПоГрузчикамОбороты.ВесНеттоОборот + ДанныеПоГрузчикамОбороты.ВесДискиОборот + ДанныеПоГрузчикамОбороты.ВесИмпортОборот + ДанныеПоГрузчикамОбороты.ВесПеремещенияОборот) КАК ВесВсего,
       //	|	(ДанныеПоГрузчикамОбороты.ВесНеттоОборот ) КАК ВесВсего,
       	|	ДанныеПоГрузчикамОбороты.ВесНеттоОборот КАК ВесНетто,
       	|	ДанныеПоГрузчикамОбороты.ВесДискиОборот КАК ВесДиски,
       	|	ДанныеПоГрузчикамОбороты.ВесИмпортОборот КАК ВесИмпорт,
       	|	ДанныеПоГрузчикамОбороты.ВесПеремещенияОборот КАК ВесПеремещения,
       	|	((ДанныеПоГрузчикамОбороты.ВесНеттоОборот + ДанныеПоГрузчикамОбороты.ВесДискиОборот + ДанныеПоГрузчикамОбороты.ВесИмпортОборот + ДанныеПоГрузчикамОбороты.ВесПеремещенияОборот) * &Расценка) КАК СуммаВсего}
       //	|	(ДанныеПоГрузчикамОбороты.ВесНеттоОборот * &Расценка) КАК СуммаВсего}
       	|
       	|УПОРЯДОЧИТЬ ПО
       	|	Сотрудник,
       	|	Контрагент
       	|ИТОГИ
       	|	СУММА(ВесВсего),
       	|	СУММА(ВесНетто),
       	|	СУММА(ВесДиски),
       	|	СУММА(ВесИмпорт),
       	|	СУММА(ВесПеремещения)
       	|ПО Общие,
       	|	Сотрудник,
       	|	Контрагент
       	|АВТОУПОРЯДОЧИВАНИЕ";
	ПостроительОтчетаОтчет.Текст = текст;
	ПостроительОтчетаОтчет.ЗаполнитьНастройки();
	ПостроительОтчетаОтчет.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительОтчетаОтчет.ТекстЗаголовка = "Отчет";
	Настройка = ВосстановитьЗначение("НастройкаВнешниеОбработкиВнешняяОбработка1Отчет_03dfad30-5dd0-4b14-bcda-ca6e7534d98a");
	Если Настройка <> Неопределено Тогда
		ПостроительОтчетаОтчет.УстановитьНастройки(Настройка);
	КонецЕсли;

	
	 
	
	
	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПОСТРОИТЕЛЬОТЧЕТА_ИНИЦИАЛИЗАЦИЯ
КонецПроцедуры

//+++
функция получитьВыборкуКонтрагентов()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ДанныеПоГрузчикамОбороты.Регистратор.Контрагент КАК Контрагент
	               |ИЗ
	               |	РегистрНакопления.ДанныеПоГрузчикам.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ";
				 //|			(Дата >= &НачалоПериода) И (Дата <= &КонецПериода) ";  // не заполнено!!!
	Если ЗначениеЗаполнено(ЭлементыФормы.Сотрудник.Значение) тогда
		Запрос.Текст = Запрос.Текст + " Сотрудник = &Сотрудник";
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	КонецЕсли;
	Запрос.текст = Запрос.Текст+" ) КАК ДанныеПоГрузчикамОбороты
	               |ГДЕ
				   |	
				   |	выбор когда &Головное = Значение(Справочник.Подразделения.ПустаяСсылка) тогда истина
	   			   |		иначе ДанныеПоГрузчикамОбороты.Регистратор.Подразделение = &Головное Конец И

	               |	(ВЫРАЗИТЬ(ДанныеПоГрузчикамОбороты.ВесНеттоОборот + ДанныеПоГрузчикамОбороты.ВесДискиОборот + ДанныеПоГрузчикамОбороты.ВесИмпортОборот + ДанныеПоГрузчикамОбороты.ВесПеремещенияОборот КАК ЧИСЛО(15, 1))) <> 0";
	            //   |	(ВЫРАЗИТЬ(ДанныеПоГрузчикамОбороты.ВесНеттоОборот КАК ЧИСЛО(15, 1))) <> 0";
			   //			(Дата >= &НачалоПериода) И (Дата <= &КонецПериода) "; 
	Если ЗначениеЗаполнено(ЭлементыФормы.Контрагент.Значение) тогда
		Запрос.Текст = Запрос.Текст + " И (ДанныеПоГрузчикамОбороты.Регистратор.Контрагент = &Контрагент)";
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
	КонецЕсли;	
	Запрос.текст = Запрос.Текст+"
				   |УПОРЯДОЧИТЬ ПО
	               |	Контрагент
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	запрос.УстановитьПараметр("Головное", Головное );			
	
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	возврат Выборка;
	
КонецФункции	




Процедура РасценкаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.значение = Элемент.значение + Направление * 0.01; // 1 коп.  
КонецПроцедуры

//-------------Выбор периодов------------------------
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура КонецПериодаПриИзменении(Элемент)
	КонецПериода = КонецДня(КонецПериода);
	Если НачалоПериода>КонецПериода тогда 
		НачалоПериода = НачалоДня(КонецПериода);
	КонецЕсли;	
КонецПроцедуры

Процедура НачалоПериодаПриИзменении(Элемент)
	НачалоПериода = НачалоДня(НачалоПериода);
	Если КонецПериода<НачалоПериода тогда 
		КонецПериода = КонецДня(НачалоПериода);
	КонецЕсли;
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
СтандартнаяОбработка = ЛОЖЬ;

	запрос1 = новый Запрос;
	запрос1.Текст = "ВЫБРАТЬ
	                |	ДанныеПоГрузчикамОбороты.Сотрудник КАК Сотрудник,
	                |	ДанныеПоГрузчикамОбороты.Регистратор.Контрагент.Наименование КАК Контрагент,
	                |	ВЫРАЗИТЬ(ДанныеПоГрузчикамОбороты.ВесНеттоОборот + ДанныеПоГрузчикамОбороты.ВесДискиОборот + ДанныеПоГрузчикамОбороты.ВесИмпортОборот + ДанныеПоГрузчикамОбороты.ВесПеремещенияОборот КАК ЧИСЛО(15, 1)) КАК Вес,
	                |	ДанныеПоГрузчикамОбороты.Регистратор КАК Регистратор
	                |ИЗ
	                |	РегистрНакопления.ДанныеПоГрузчикам.Обороты(&НачалоПериода, &КонецПериода, Регистратор, 	
					|//отборСотрКлиента
					|
					| 												) КАК ДанныеПоГрузчикамОбороты
	                |ГДЕ 
					|	выбор когда &Головное = Значение(Справочник.Подразделения.ПустаяСсылка) тогда истина
	   				|		иначе ДанныеПоГрузчикамОбороты.Регистратор.Подразделение = &Головное Конец 
					|//отборКонтр
					|
   					|УПОРЯДОЧИТЬ ПО
	                |	ДанныеПоГрузчикамОбороты.Сотрудник.Наименование,
	                |	ДанныеПоГрузчикамОбороты.Регистратор.Контрагент.Наименование,
	                |	ДанныеПоГрузчикамОбороты.Регистратор
	                |ИТОГИ
	                |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Сотрудник),
	                |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Контрагент),
	                |	СУММА(Вес),
	                |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Регистратор)
	                |ПО
	                |	ОБЩИЕ";
	запрос1.УстановитьПараметр("Головное", Головное );			
				
	запрос1.УстановитьПараметр("НачалоПериода", НачалоПериода);
	запрос1.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Если типЗнч(Расшифровка) = тип("СправочникСсылка.ФизическиеЛица") тогда
		запрос1.Текст = стрЗаменить( запрос1.Текст, "//отборСотрКлиента", " Сотрудник = &Сотрудник");
		запрос1.УстановитьПараметр("Сотрудник", Расшифровка);
		НазвРасшифровки = "Сотруднику: "+строка(Расшифровка);
		
	ИначеЕсли типЗнч(Расшифровка) = тип("СправочникСсылка.Контрагенты") тогда
		запрос1.Текст = стрЗаменить( запрос1.Текст, "//отборКонтр", "И ДанныеПоГрузчикамОбороты.Регистратор.Контрагент = &Контрагент");
		запрос1.УстановитьПараметр("Контрагент", Расшифровка);
		НазвРасшифровки = "Клиенту: "+строка(Расшифровка);
		
	иначе	
		НазвРасшифровки = "Значению: "+строка(Расшифровка)+" кг.";
			Col = Элемент.ТекущаяОбласть.Лево;
			Row = Элемент.ТекущаяОбласть.Верх;
		
		Контрагент = Элемент.Область(3, Col, 3, Col).расшифровка;
		Сотрудник  = Элемент.Область(Row, 1, Row, 1).расшифровка;
		Если ЗначениеЗаполнено(Сотрудник) тогда
			запрос1.Текст = стрЗаменить( запрос1.Текст, "//отборСотрКлиента", " Сотрудник = &Сотрудник");
			запрос1.УстановитьПараметр("Сотрудник", Сотрудник);
			НазвРасшифровки = НазвРасшифровки +" и Сотруднику: "+строка(Сотрудник);
		КонецЕсли;
		Если ЗначениеЗаполнено(Контрагент) тогда
			запрос1.Текст = стрЗаменить( запрос1.Текст, "//отборКонтр", "И ДанныеПоГрузчикамОбороты.Регистратор.Контрагент = &Контрагент");
			запрос1.УстановитьПараметр("Контрагент", Контрагент);
			НазвРасшифровки = НазвРасшифровки +"
			|и Контрагенту: "+строка(Контрагент);
		КонецЕсли;
	КонецЕсли;
	
	рез = запрос1.Выполнить();	
	таблЗнач1 = рез.Выгрузить();
	
	таблДок = новый ТабличныйДокумент;
	ТаблДок.Область(1,1,1,1).Текст  = "Расшифровка по подразделению: "+строка(Головное)+"
									   |и "+НазвРасшифровки+"
									   |за интервал с "+формат(НачалоПериода,"ДЛФ=D")+" по "+формат(КонецПериода,"ДЛФ=D");
	
	для i=1 по таблЗнач1.Количество() цикл
		стр1 = таблЗнач1[i-1];
		для j=1 по таблЗнач1.Колонки.Количество() цикл
			ТаблДок.Область(4,j,4,j).Текст  =таблЗнач1.Колонки[j-1].Имя; 
			
			ТаблДок.Область(i+4, j, i+4, j).Текст =  стр1[ таблЗнач1.Колонки[j-1].Имя ];
			ТаблДок.Область(i+4, j, i+4, j).Расшифровка = стр1[ таблЗнач1.Колонки[j-1].Имя ];
		КонецЦикла;
	КонецЦикла;
	ТаблДок.область(4,таблЗнач1.Колонки.Количество(),4+таблЗнач1.Количество(), таблЗнач1.Колонки.Количество()).ШиринаКолонки = 60;
	
	ТаблДок.ТолькоПросмотр = Истина;
	ТаблДок.Защита = истина;
	ТаблДок.Показать(); 
	
	//ЭлементыФормы.ПолеТабличногоДокумента.Очистить();
	//ЭлементыФормы.ПолеТабличногоДокумента = ТаблДок;
	//ЭлементыФормы.ПолеТабличногоДокумента.Показать();
	
КонецПроцедуры

