 перем Уровень, ЧислоЧасовНочи;
 Процедура КнопкаВыполнитьНажатие(Кнопка)
	 УровеньГруппировки = 1;
	Если ЭлементыФормы.Панель1.текущаястраница = ЭлементыФормы.Панель1.Страницы.Страница1 тогда
		Отгрузки.Очистить();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ Задания
		|ИЗ
		|	Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК ЗаданиеНаОтгрузкуЗаказыПокупателей
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаОтгрузку КАК ЗаданиеНаОтгрузку
		|		ПО ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка = ЗаданиеНаОтгрузку.Ссылка
		|ГДЕ
		|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Выполнено
		|//	И ЗаданиеНаОтгрузку.Подразделение = &Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РезервНаСкладахОбороты.Номенклатура,
		|	РезервНаСкладахОбороты.ЗаказПокупателя.Контрагент КАК Контрагент,
		|	РезервНаСкладахОбороты.КоличествоПриход КАК Количество,
		|	РезервНаСкладахОбороты.Регистратор КАК Задание,
		|	РезервНаСкладахОбороты.Номенклатура.Код КАК Код
		|ИЗ
		|	РегистрНакопления.РезервНаСкладах.Обороты(ДОБАВИТЬКДАТЕ(&ДатаНач, ДЕНЬ, -7), ДОБАВИТЬКДАТЕ(&ДатаКон, ДЕНЬ, 7), Регистратор, ) КАК РезервНаСкладахОбороты
		|ГДЕ
		|	РезервНаСкладахОбороты.Регистратор В
		|			(ВЫБРАТЬ
		|				Задания.Ссылка
		|			ИЗ
		|				Задания КАК Задания)";
		
		Запрос.УстановитьПараметр("ДатаКон", КонПериода);
		Запрос.УстановитьПараметр("ДатаНач", НачПериода);
		если ЗначениеЗаполнено(Подразделение) Тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"//","");
			Запрос.УстановитьПараметр("подразделение",подразделение);
		конецЕсли;
		
		если Перемещения Тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"ЗаданиеНаОтгрузку","ЗаданиеНаПеремещение");
		конецЕсли;	
		
		НедогрузыПоКонтрагентам = Запрос.Выполнить().Выгрузить();
		
		
		
		//недогрузы	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка КАК Ссылка,
		|	МАКСИМУМ(ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация.Дата) КАК РеализацияДата
		|ПОМЕСТИТЬ Задания
		|ИЗ
		|	Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК ЗаданиеНаОтгрузкуЗаказыПокупателей
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаОтгрузку КАК ЗаданиеНаОтгрузку
		|		ПО ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка = ЗаданиеНаОтгрузку.Ссылка
		|ГДЕ
		|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Выполнено
		| //	И ЗаданиеНаОтгрузку.Подразделение = &Подразделение

		|СГРУППИРОВАТЬ ПО
		|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаданиеНаОтгрузкуТовары.Ссылка КАК Ссылка,
		|	ЗаданиеНаОтгрузкуТовары.Номенклатура,
		|	ЗаданиеНаОтгрузкуТовары.КоличествоЗаказано КАК План,
		|	ЗаданиеНаОтгрузкуТовары.Количество КАК Факт,
		|	ЗаданиеНаОтгрузкуТовары.ПричинаНедогруза КАК ПричинаНедогруза,
		|	Задания.РеализацияДата КАК Дата,
		|	ЗаданиеНаОтгрузкуТовары.Склад,
		|	ЗаданиеНаОтгрузкуТовары.АдресХранения,
		|	ЗаданиеНаОтгрузкуТовары.Кладовщик,
		|	ЗаданиеНаОтгрузкуТовары.НомерСтроки
		|ПОМЕСТИТЬ Свод
		|ИЗ
		|	Задания КАК Задания
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаОтгрузку.Товары КАК ЗаданиеНаОтгрузкуТовары
		|		ПО Задания.Ссылка = ЗаданиеНаОтгрузкуТовары.Ссылка
		|ГДЕ
		|	ЗаданиеНаОтгрузкуТовары.Ссылка В
		|			(ВЫБРАТЬ
		|				Задания.Ссылка
		|			ИЗ
		|				Задания КАК Задания)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Свод.Ссылка КАК Ссылка,
		|	Свод.Номенклатура КАК Номенклатура,
		|	Свод.План КАК План,
		|	Свод.Факт КАК Факт,
		|	ЕСТЬNULL(Свод.План, 0) - ЕСТЬNULL(Свод.Факт, 0) КАК Разница,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Свод.План, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((ЕСТЬNULL(Свод.План, 0) - ЕСТЬNULL(Свод.Факт, 0)) / Свод.План * 100 КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК РазницаПроц,
		|	Свод.ПричинаНедогруза,
		|	Свод.Склад,
		|	Свод.АдресХранения,
		|	Свод.НомерСтроки,
		|	ЗНАЧЕНИЕ(Справочник.контрагенты.ПустаяСсылка) КАК Контрагент,
		|	Свод.Кладовщик,
		|	Свод.Номенклатура.Код КАК Код,
		|	Свод.Дата КАК ДатаОтгрузки
		|ИЗ
		|	Свод КАК Свод
		|ИТОГИ
		|	СУММА(План),
		|	СУММА(Факт),
		|	СУММА(Разница),
		|	ВЫРАЗИТЬ(100*СУММА(Разница)/СУММА(План) КАК ЧИСЛО(15, 2)) КАК РазницаПроц,
		|	МАКСИМУМ(ДатаОтгрузки)
		|ПО
		|	Ссылка,
		|	Номенклатура";
		
		Запрос.УстановитьПараметр("ДатаКон", КонПериода);
		Запрос.УстановитьПараметр("ДатаНач", НачПериода);
		если ЗначениеЗаполнено(Подразделение) Тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"//","");
			Запрос.УстановитьПараметр("подразделение",подразделение);
		конецЕсли;
		
		если Перемещения Тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"ЗаданиеНаОтгрузку","ЗаданиеНаПеремещение");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"ЗаданиеНаПеремещениеТовары.Кладовщик,","");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"Свод.Кладовщик,","");
		конецЕсли;
		
		Результат = Запрос.Выполнить();
		Таблица = Результат.Выгрузить();
		//Элементыформы.Отгрузки.Значение=(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам));
		Дерево = Результат.Выгрузить(ОбходрезультатаЗапроса.ПоГруппировкам);
		Дерево.Строки.Очистить();
		ВыборкаСсылка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСсылка.Следующий() Цикл
			Если ВыборкаССылка.План <>ВыборкаССылка.Факт Тогда
				//проверим на фильтр,если он задан
				Если не проверитьФильтр(ВыборкаСсылка,Таблица) Тогда			
					продолжить;
				конецЕсли;
				СтрокаДок = Дерево.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДок,ВыборкаСсылка);
				ВыборкаНоменклатура = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаНоменклатура.Следующий() Цикл
					Если не проверитьФильтр(ВыборкаНоменклатура,Таблица) Тогда			
						продолжить;
					конецЕсли;
					Если ВыборкаНоменклатура.Разница<>0 Тогда
						СтрокаНом = СтрокаДок.Строки.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаНом,ВыборкаНоменклатура);
						строкаНом.Ссылка = "";
						СтрокаНом.ДатаОтгрузки ="";
						ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							Если не проверитьФильтр(ВыборкаДетальныеЗаписи,Таблица) Тогда			
								продолжить;
							конецЕсли;
							
							Если ВыборкаДетальныеЗаписи.Разница<>0 Тогда
								СтрокаСклад = СтрокаНом.Строки.Добавить();	
								ЗаполнитьЗначенияСвойств(СтрокаСклад,ВыборкаДетальныеЗаписи);
								строкаСклад.Код = "";
								СтрокаСклад.ДатаОтгрузки ="";
								СтрокаСклад.Номенклатура = "";
								Отбор = новый Структура();
								Отбор.Вставить("Задание",ВыборкаССылка.Ссылка);
								Отбор.Вставить("Номенклатура",ВыборкаНоменклатура.номенклатура);
								контрагенты = НедогрузыПоконтрагентам.НайтиСтроки(Отбор);
								количествоПоконтрагентам = ВыборкаДетальныеЗаписи.Разница;
								Для каждого ст из Контрагенты Цикл
									Если количествоПоконтрагентам>0 и ст.Количество<>0 Тогда
										СтрокаКонт= СтрокаСклад.Строки.добавить();
										СтрокаКонт.Контрагент = ст.контрагент;
										Если количествоПоконтрагентам >= ст.Количество Тогда
											СтрокаКонт.Разница = ст.Количество;
											ст.количество=0;
											количествоПоконтрагентам= количествоПоконтрагентам-ст.Количество;
										иначе
											СтрокаКонт.Разница = КоличествоПоКонтрагентам;
											ст.количество = КоличествоПоКонтрагентам-ст.Количество;
											количествоПоКонтрагентам =0;
										конецЕсли;
									конецЕсли;
								конецЦикла;
							конецЕсли;
						КонецЦикла;
					конецЕсли;
				КонецЦикла;
			конецЕсли; 
		КонецЦикла;
		
		Элементыформы.Отгрузки.Значение=Дерево;	
//=========================================
КонецЕсли;

	Если ЭлементыФормы.Панель1.текущаястраница = ЭлементыФормы.Панель1.Страницы.Страница2 тогда
 
		
Отгрузки1.Очистить();
			//недогрузы по менеджеру
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ 
		|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка КАК Ссылка,
		|	МАКСИМУМ(ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация.Дата) КАК РеализацияДата,
		
	//+++ 18.05.2018
		|	Сумма(ЗаданиеНаОтгрузкуЗаказыПокупателей.КоличествоШтук - ЗаданиеНаОтгрузкуЗаказыПокупателей.КоличествоШтукОтгружено) как КолНедогруз
		
		|ПОМЕСТИТЬ Задания
		|ИЗ
		|	Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК ЗаданиеНаОтгрузкуЗаказыПокупателей
		
		|ГДЕ
		
//+++ 18.05.2018 - реализации может не быть!
		|	(ЗаданиеНаОтгрузкуЗаказыПокупателей.Реализация.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	или ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Дата МЕЖДУ &ДатаНач и &ДатаКон)
		
		|	И ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Выполнено  
		|	И ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Проведен
		
		|"+
		?(ЗначениеЗаполнено(Подразделение),"	И ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка.Подразделение = &Подразделение ", "")+ " " +
		?(ЗначениеЗаполнено(менеджер),"	И ЗаданиеНаОтгрузкуЗаказыПокупателей.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо = &Менеджер","")+
		"

		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаданиеНаОтгрузкуЗаказыПокупателей.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|"+"ВЫБРАТЬ
		|	РезервНаСкладахОбороты.Регистратор КАК Задание,
		
		|	РезервНаСкладахОбороты.ЗаказПокупателя,
		|	РезервНаСкладахОбороты.ЗаказПокупателя.Контрагент КАК Контрагент,
		
		|	РезервНаСкладахОбороты.Номенклатура.Код КАК Код,
		|	РезервНаСкладахОбороты.Номенклатура,
		
		|	РезервНаСкладахОбороты.КоличествоПриход КАК Количество
		
		|ПОМЕСТИТЬ Отбор
		|ИЗ
		|	 РегистрНакопления.РезервНаСкладах.Обороты(&ДатаНач7, &ДатаКон7, Регистратор, ) КАК РезервНаСкладахОбороты
		|ГДЕ
		|	РезервНаСкладахОбороты.Регистратор В (ВЫБРАТЬ Задания.Ссылка ИЗ Задания КАК Задания)  "+
		?(ЗначениеЗаполнено(Подразделение),"  И РезервНаСкладахОбороты.ЗаказПокупателя.Подразделение = &Подразделение  ", "")+ " " +
		?(ЗначениеЗаполнено(менеджер)," И РезервНаСкладахОбороты.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо = &Менеджер  ", "")+ " " +

		" ;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Задания.Ссылка КАК Ссылка,
		|	Задания.РеализацияДата КАК Дата,
		|	Задания.КолНедогруз,
				
		|	ЗаданиеНаОтгрузкуТовары.Номенклатура,
		|	ЗаданиеНаОтгрузкуТовары.КоличествоЗаказано КАК План,
		|	ЗаданиеНаОтгрузкуТовары.Количество КАК Факт,
		|	ЗаданиеНаОтгрузкуТовары.ПричинаНедогруза КАК ПричинаНедогруза,
		|	ЗаданиеНаОтгрузкуТовары.НомерСтроки,
		
		|	Отбор.Контрагент,
		|	Отбор.ЗаказПокупателя,
		|	Отбор.Количество
		
		|ПОМЕСТИТЬ Свод
		|ИЗ
		|	Задания КАК Задания
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаОтгрузку.Товары КАК ЗаданиеНаОтгрузкуТовары
		|			ЛЕВОЕ СОЕДИНЕНИЕ Отбор КАК Отбор
		|			ПО (Отбор.Номенклатура = ЗаданиеНаОтгрузкуТовары.Номенклатура)
		|				И (Отбор.Задание = ЗаданиеНаОтгрузкуТовары.Ссылка)
		|		ПО Задания.Ссылка = ЗаданиеНаОтгрузкуТовары.Ссылка
		|ГДЕ
		|	ЗаданиеНаОтгрузкуТовары.Ссылка В (ВЫБРАТЬ Задания.Ссылка ИЗ Задания КАК Задания)
		|	или	Задания.КолНедогруз>0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Свод.Ссылка КАК Ссылка,
		|	Свод.Номенклатура КАК Номенклатура,
		
		|	Свод.План КАК План,
		|	Свод.Факт КАК Факт,
		|	ЕСТЬNULL(Свод.План, 0) - ЕСТЬNULL(Свод.Факт, 0) КАК Разница,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Свод.План, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((ЕСТЬNULL(Свод.План, 0) - ЕСТЬNULL(Свод.Факт, 0)) / Свод.План * 100 КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК РазницаПроц,
		|	Свод.ПричинаНедогруза,
		|	Свод.НомерСтроки,
		|	Свод.Номенклатура.Код КАК Код,
		|	Свод.Дата КАК ДатаОтгрузки,
		
		|	Свод.Контрагент КАК Контрагент,
		|	Свод.ЗаказПокупателя КАК Заказ,
		|	Свод.Количество КАК КоличествоПриход
		
		|	,Свод.КолНедогруз
	

		|ИЗ
		|	Свод КАК Свод
		|  "+
		?(ЗначениеЗаполнено(менеджер),"Где 	 Свод.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо = &менеджер","")+"
		|ИТОГИ
		|	СУММА(План),
		|	СУММА(Факт),
		|	СУММА(Разница),
		|	ВЫРАЗИТЬ(100*СУММА(Разница)/сумма(План) КАК ЧИСЛО(15, 2)) КАК РазницаПроц,
		|	МАКСИМУМ(ДатаОтгрузки)
		|
		|	,МАКСИМУМ(КолНедогруз)
		
		|ПО
		|	Ссылка,
		|	Контрагент,
		|	Заказ";
		
		Запрос.УстановитьПараметр("ДатаНач", НачПериода);
		Запрос.УстановитьПараметр("ДатаКон", КонПериода);
		
		Запрос.УстановитьПараметр("ДатаНач7", НачПериода - 7*86400);
		Запрос.УстановитьПараметр("ДатаКон7", КонПериода + 7*86400);
		
		если ЗначениеЗаполнено(Подразделение) Тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"//","");
			Запрос.УстановитьПараметр("подразделение",подразделение);
		конецЕсли;
		если ЗначениеЗаполнено(менеджер) Тогда
			Запрос.УстановитьПараметр("Менеджер",Менеджер);
	    конецЕсли;
		если Перемещения Тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"ЗаданиеНаОтгрузку","ЗаданиеНаПеремещение");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"ЗаданиеНаПеремещениеТовары.Кладовщик,","");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"Свод.Кладовщик,","");
		конецЕсли;
		
		Результат = Запрос.Выполнить();
		Таблица = Результат.Выгрузить();
		Дерево = Результат.Выгрузить(ОбходрезультатаЗапроса.ПоГруппировкам);
		Дерево.Строки.Очистить();
		ВыборкаСсылка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСсылка.Следующий() Цикл
			Если ВыборкаССылка.План <>ВыборкаССылка.Факт Тогда
				
				//проверим на фильтр,если он задан
				Если не проверитьФильтр(ВыборкаСсылка,Таблица) Тогда			
					продолжить;
				конецЕсли;
				СтрокаДок = Дерево.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДок,ВыборкаСсылка);
				ВыборкаКонтрагенты = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаКонтрагенты.Следующий() Цикл
					Если не проверитьФильтр(ВыборкаКонтрагенты,Таблица) Тогда			
						продолжить;
					конецЕсли;
					Если ВыборкаКонтрагенты.Разница<>0 Тогда
						СтрокаКонтрагент = СтрокаДок.Строки.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаКонтрагент,ВыборкаКонтрагенты);
						
						ВыборкаЗаказы = ВыборкаКонтрагенты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаЗаказы.Следующий() Цикл
							Если не проверитьФильтр(ВыборкаЗаказы,Таблица) Тогда			
								продолжить;
							конецЕсли;
							Если ВыборкаЗаказы.Разница<>0 Тогда
								СтрокаЗаказ = СтрокаКонтрагент.Строки.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаЗаказ,ВыборкаЗаказы);
								ВыборкаНоменклатура = ВыборкаЗаказы.Выбрать();
								Пока ВыборкаНоменклатура.Следующий() Цикл
									Если не проверитьФильтр(ВыборкаНоменклатура,Таблица) Тогда			
										продолжить;
									конецЕсли;
									Если ВыборкаНоменклатура.Разница<>0 Тогда
										СтрокаНом = СтрокаЗаказ.Строки.Добавить();
										ЗаполнитьЗначенияСвойств(СтрокаНом,ВыборкаНоменклатура);
									конецЕсли;
								КонецЦикла;
							конецЕсли;
						КонецЦикла;
					конецЕсли;
				КонецЦикла;
				
			конецЕсли; 
		КонецЦикла;
		Элементыформы.Отгрузки1.Значение = Дерево;	
	КонецЕсли;	
	
	Обновитьитоги();
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания() +1 + ЧислоЧасовНочи*3600;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель2Заполнить(Кнопка)
КонецПроцедуры

Процедура ОтгрузкиПричинаНедогрузаПриИзменении(Элемент)
	ТекДанные = ЭлементыФормы.Отгрузки.ТекущиеДанные;
	Если не ЗначениеЗаполнено(ТекДанные.Склад) Тогда
		Сообщить("Заполните причину недогруза в строке, где указан склад!");
		Текданные.ПричинаНедогруза = Перечисления.ПричиныНедогруза.ПустаяСсылка();
	иначе	
	Если ТекДанные.ссылка <> неопределено Тогда
	ДокОбъект = ТекДанные.ссылка.ПолучитьОбъект();
	//Для каждого стр из ДокОбъект.товары Цикл
	//	Если стр.номенклатура = ТекДанные.Номенклатура и стр.количество< стр.КоличествоЗаказано Тогда
	//	 стр.причинаНедогруза= ТекДанные.ПричинаНедогруза;
	//   конецЕсли;
	//конецЦикла;
	
	ДокОбъект.товары[ТекДанные.номерСтроки-1].причинаНедогруза = ТекДанные.ПричинаНедогруза;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
   конецЕсли;
   Если ТекДанные.ПричинаНедогруза = перечисления.ПричиныНедогруза.НеВошлоВМашинуДПЗ  Тогда
	  Обновитьитоги(); 
   конецЕсли;
   конецЕсли;
КонецПроцедуры


Процедура Обновитьитоги()
	// общий процент
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ЗаданиеНаОтгрузкуТовары.КоличествоЗаказано) КАК План,
		|	СУММА(ВЫБОР
		|			КОГДА ЗаданиеНаОтгрузкуТовары.ПричинаНедогруза <> ЗНАЧЕНИЕ(Перечисление.ПричиныНедогруза.НевошлоВМашинуДПЗ)
		|				ТОГДА ЗаданиеНаОтгрузкуТовары.Количество
		|			ИНАЧЕ ЗаданиеНаОтгрузкуТовары.КоличествоЗаказано
		|		КОНЕЦ) КАК Факт
		|ПОМЕСТИТЬ ОтгрузкаТоваров
		|ИЗ
		|	Документ.ЗаданиеНаОтгрузку.Товары КАК ЗаданиеНаОтгрузкуТовары
		|ГДЕ
		|	ЗаданиеНаОтгрузкуТовары.Ссылка.Дата МЕЖДУ &НачПериода И &КонПериода
		|	И ЗаданиеНаОтгрузкуТовары.Ссылка.Выполнено
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтгрузкаТоваров.План,
		|	ОтгрузкаТоваров.Факт,
		|	ВЫРАЗИТЬ((ОтгрузкаТоваров.План - ОтгрузкаТоваров.Факт) / ОтгрузкаТоваров.План * 100 КАК ЧИСЛО(15, 2)) КАК Процент,
		|	ОтгрузкаТоваров.План - ОтгрузкаТоваров.Факт КАК Разница
		|ИЗ
		|	ОтгрузкаТоваров КАК ОтгрузкаТоваров";

	Запрос.УстановитьПараметр("КонПериода", КонПериода);
	Запрос.УстановитьПараметр("НачПериода", НачПериода);

	Результат = Запрос.Выполнить().Выбрать();

	Если Результат.Следующий() Тогда
	ЭлементыФормы.Итого.Заголовок = "Всего заказано: " + Результат.План	+" шт., отгружено: "+ Результат.Факт+ " шт. , разница "+результат.Разница+" шт.  ("+ Результат.процент+"%)";
		
    КонецЕсли;
			
конецПроцедуры	

Процедура ПриОткрытии()
	УровеньГруппировки =1;
	УровеньГруппировки1 =1;

	Редактирующие = Новый СписокЗначений;
	Редактирующие.Добавить(Справочники.Пользователи.НайтиПоКоду("Фролов"));
	Редактирующие.Добавить(Справочники.Пользователи.НайтиПоКоду("Гаричев"));
	Редактирующие.Добавить(Справочники.Пользователи.НайтиПоКоду("Цверава В.У."));
	Редактирующие.Добавить(Справочники.Пользователи.НайтиПоКоду("Князева"));
	Редактирующие.Добавить(Справочники.Пользователи.НайтиПоКоду("Невежина И.Н."));
	Редактирующие.Добавить(Справочники.Пользователи.НайтиПоКоду("Алексеева А.Е."));
	Редактирующие.Добавить(Справочники.Пользователи.НайтиПоКоду("Огородников"));
	
	Если Редактирующие.НайтиПоЗначению(ПараметрыСеанса.ТекущийПользователь) = Неопределено Тогда
		ЭлементыФормы.Отгрузки.Колонки.ПричинаНедогруза.ТолькоПросмотр = Истина;
		Элементыформы.Отгрузки.Колонки.Кладовщик.ТолькоПросмотр = Истина;
		ЭлементыФормы.Отгрузки1.Колонки.ПричинаНедогруза.ТолькоПросмотр = Истина;
		Если ПараметрыСеанса.ТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Бондаренко Е.Д. (снабжение)") тогда
			Менеджер = ПараметрыСеанса.ТекущийПользователь;
			ЭлементыФормы.Менеджер.ТолькоПросмотр = Истина;
		КонецЕсли;
	иначе	
		ЭлементыФормы.Отгрузки.Колонки.ПричинаНедогруза.ТолькоПросмотр = Ложь;
		Элементыформы.Отгрузки.Колонки.Кладовщик.ТолькоПросмотр = Ложь;
		ЭлементыФормы.Отгрузки1.Колонки.ПричинаНедогруза.ТолькоПросмотр = Ложь;
	конецЕсли;
	
	КонПериода = началоДня( ТекущаяДата() )+ ЧислоЧасовНочи*3600;  //до 6 утра
	НачПериода = НачалоДня(КонПериода - 86400);
	
	
	масПодразделений = яштПоставщики.ПолучитьМассивФилиалов();
	// 0 - это Ярославль!
	для i=0 по масПодразделений.Количество()-1 цикл 
		ЭлементыФормы.Подразделение.СписокВыбора.Добавить( масПодразделений[i] );
	КонецЦикла;
	
	Если глТекущийПользователь.ОсновноеПодразделение.ОбособленноеПодразделение тогда
		Подразделение = глТекущийПользователь.ОсновноеПодразделение;
	иначе
		Подразделение = масПодразделений[0];
	КонецЕсли;
	
КонецПроцедуры

Процедура УровеньГруппировкиПриИзменении(Элемент)
	Для каждого Строка Из ЭлементыФормы.Отгрузки.Значение.Строки Цикл 
    	ЭлементыФормы.Отгрузки.Свернуть(Строка);
		
   КонецЦикла;
    Если Уровеньгруппировки>1 Тогда
		Для каждого Строка Из ЭлементыФормы.Отгрузки.Значение.Строки Цикл 
			РазвернутьДерево(Строка, 1, ЭлементыФормы.Отгрузки); 
		КонецЦикла;
    конецЕсли;
    Этаформа.Обновить();
КонецПроцедуры

 Процедура УровеньГруппировки1ПриИзменении(Элемент)
	Для каждого Строка Из ЭлементыФормы.Отгрузки1.Значение.Строки Цикл 
    	ЭлементыФормы.Отгрузки1.Свернуть(Строка); 
						
    КонецЦикла;
    Если УровеньГруппировки > 1 Тогда
		Для каждого Строка Из ЭлементыФормы.Отгрузки1.Значение.Строки Цикл 
			РазвернутьДерево(Строка, 1, ЭлементыФормы.Отгрузки1); 
		КонецЦикла;
    конецЕсли;
    Этаформа.Обновить();

КонецПроцедуры

функция РазвернутьДерево(СтрокаДерева,Уровень,Таблица)
	
	Таблица.Развернуть(СтрокаДерева, Ложь); 
	 уровень=Уровень+1;

	 пока Уровень < Уровеньгруппировки 
			 и строкаДерева.Строки.Количество()>0 Цикл
		Для каждого строка из строкаДерева.Строки Цикл
			РазвернутьДерево(Строка, Уровень, Таблица);
		КонецЦикла;
	конецЦикла;

конецФункции




Функция ПроверитьФильтр(Выборка,Таблица)
	Если (не ЗначениеЗаполнено(кладовщик))и (не	ЗначениеЗаполнено(причинаНедогруза)) Тогда
	 Возврат  Истина;
    конецЕсли;
    Отбор = Новый Структура();
	Если ЗНачениеЗаполнено(Кладовщик) Тогда
		Отбор.Вставить("Кладовщик",кладовщик);
	конецЕсли;
	Если ЗНачениеЗаполнено(ПричинаНедогруза) Тогда
		Отбор.Вставить("ПричинаНедогруза",ПричинаНедогруза);
	конецЕсли;
	Отбор.Вставить("ссылка",Выборка.ссылка);
	Если Выборка.Группировка() = "Заказ" Тогда
	Отбор.Вставить("Заказ",Выборка.Заказ);
	иначеесли Выборка.Группировка() = "Заказ" Тогда
	Отбор.Вставить("Контрагент",Выборка.Контрагент);
    
	иначеесли Выборка.Группировка() = "Номенклатура" Тогда
	Отбор.Вставить("номенклатура",Выборка.Номенклатура);
	иначеесли Выборка.Группировка() = "" Тогда
	Отбор.Вставить("номенклатура",Выборка.Номенклатура);
	Отбор.Вставить("Склад",Выборка.Склад);
    конецЕсли;
    строки = Таблица.Найтистроки(Отбор);
	Если строки.Количество()>0 Тогда
	  Возврат Истина;
	иначе
	Возврат ложь;
	конецЕсли
конецФункции

Процедура ОтгрузкиКладовщикПриИзменении(Элемент)
	Если не Перемещения Тогда
	ТекДанные = ЭлементыФормы.Отгрузки.ТекущиеДанные;
	Если не ЗначениеЗаполнено(ТекДанные.Склад) Тогда
		Сообщить("Заполните Кладовщика в строке, где указан склад!");
		Текданные.Кладовщик = Справочники.ФизическиеЛица.ПустаяСсылка();
	иначе	
		Если ТекДанные.ссылка <> неопределено Тогда
			ДокОбъект = ТекДанные.ссылка.ПолучитьОбъект();	
			ДокОбъект.товары[ТекДанные.номерСтроки-1].Кладовщик = ТекДанные.Кладовщик;
			ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		конецЕсли;
	конецЕсли;
    КонецЕсли;
КонецПроцедуры

Процедура КладовщикПриИзменении(Элемент)
	КнопкаВыполнитьНажатие(Истина);
КонецПроцедуры

Процедура ПричинаНедогрузаПриИзменении(Элемент)
	КнопкаВыполнитьНажатие(истина);
КонецПроцедуры


Процедура УровеньГруппировки1Регулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = Элемент.Значение  + Направление;
	Если Элемент.Значение >5 тогда
		Элемент.Значение =5;
	ИначеЕсли Элемент.Значение <0 тогда
		Элемент.Значение =0;
	КонецЕсли;	
	УровеньГруппировки1ПриИзменении(Элемент)
КонецПроцедуры

Процедура УровеньГруппировкиРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = Элемент.Значение  + Направление;
	Если Элемент.Значение >5 тогда
		Элемент.Значение =5;
	ИначеЕсли Элемент.Значение <0 тогда
		Элемент.Значение =0;
	КонецЕсли;	
	УровеньГруппировкиПриИзменении(Элемент)
КонецПроцедуры

Процедура Отгрузки1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Контрагент) тогда
		Если ДанныеСтроки.КолНедогруз > ДанныеСтроки.Разница тогда //есть недогруз без 
		  ОформлениеСтроки.ЦветФона = webЦвета.СветлоРозовый;  
	    иначеЕсли ДанныеСтроки.КолНедогруз < ДанныеСтроки.Разница тогда // пересорт
		    ОформлениеСтроки.ЦветФона = webЦвета.СветлоЗеленый;  
		иначе //Если ДанныеСтроки.КолНедогруз = ДанныеСтроки.Разница тогда // 
		    ОформлениеСтроки.ЦветФона = webЦвета.СветлоЖелтый;  
		КонецЕсли;
	 КонецЕсли;	
КонецПроцедуры

ЧислоЧасовНочи = 3; // от 0 до 6х утра  - ещё предыдущий день... тянется
