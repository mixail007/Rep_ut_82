
Процедура КнопкаСформироватьНажатие(Кнопка)
	МВТ=Новый МенеджерВременныхТаблиц;
	Запрос=новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МВТ;
	Запрос.Текст="ВЫБРАТЬ
	             |	ДоговорыКонтрагентов.Ссылка КАК Договор
	             |ПОМЕСТИТЬ втДоговорыКонтрагента
	             |ИЗ
	             |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	             |ГДЕ
	             |	ДоговорыКонтрагентов.ОтветственноеЛицо = &ОтветственноеЛицо
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
	             |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетовРасход, 0)) КАК ПоступлениеОплаты,
	             |	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток) КАК СуммаДЗ
	             |ПОМЕСТИТЬ втНеЗакрытыеСделки
	             |ИЗ
	             |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	             |			&КонецПериода,
	             |			ДоговорКонтрагента.Ссылка В
	             |				(ВЫБРАТЬ
	             |					втДоговорыконтрагента.Договор
	             |				ИЗ
	             |					втДоговорыконтрагента)) КАК ВзаиморасчетыСКонтрагентамиОстатки
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			ВзаиморасчетыСКонтрагентамиОбороты.Сделка КАК Сделка,
	             |			СУММА(ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
	             |		ИЗ
	             |			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
	             |					,
	             |					&КонецПериода,
	             |					Авто,
	             |					ДоговорКонтрагента.Ссылка В
	             |						(ВЫБРАТЬ
	             |							втДоговорыконтрагента.Договор
	             |						ИЗ
	             |							втДоговорыконтрагента)) КАК ВзаиморасчетыСКонтрагентамиОбороты
	             |		ГДЕ
	             |			НЕ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			ВзаиморасчетыСКонтрагентамиОбороты.Сделка) КАК ВложенныйЗапрос
	             |		ПО (ВложенныйЗапрос.Сделка = ВзаиморасчетыСКонтрагентамиОстатки.Сделка)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВзаиморасчетыОборот.Сделка,
	             |	СУММА(ЕСТЬNULL(ОплатаЗаВсеПериоды.СуммаВзаиморасчетовРасход, 0)) КАК ПоступлениеОплаты,
	             |	СУММА(0) КАК СуммаДЗ
	             |ПОМЕСТИТЬ втЗакрытыеСделки
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		ВзаиморасчетыСКонтрагентамиОбороты.Сделка КАК Сделка,
	             |		СУММА(ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
	             |	ИЗ
	             |		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
	             |				&НачалоПериода,
	             |				&КонецПериода,
	             |				Регистратор,
	             |				ДоговорКонтрагента В
	             |						(ВЫБРАТЬ
	             |							ВтДоговорыКонтрагента.Договор
	             |						ИЗ
	             |							ВтДоговорыКонтрагента КАК ВтДоговорыКонтрагента)
	             |					И НЕ Сделка В
	             |							(ВЫБРАТЬ
	             |								втНеЗакрытыеСделки.Сделка
	             |							ИЗ
	             |								втНеЗакрытыеСделки КАК втНеЗакрытыеСделки)) КАК ВзаиморасчетыСКонтрагентамиОбороты
	             |	ГДЕ
	             |		НЕ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		ВзаиморасчетыСКонтрагентамиОбороты.Сделка) КАК ВзаиморасчетыОборот
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			ВзаиморасчетыСКонтрагентамиОбороты.Сделка КАК Сделка,
	             |			СУММА(ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
	             |		ИЗ
	             |			РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
	             |					,
	             |					&КонецПериода,
	             |					Авто,
	             |					ДоговорКонтрагента В
	             |							(ВЫБРАТЬ
	             |								ВтДоговорыКонтрагента.Договор
	             |							ИЗ
	             |								ВтДоговорыКонтрагента КАК ВтДоговорыКонтрагента)
	             |						И НЕ Сделка В
	             |								(ВЫБРАТЬ
	             |									втНеЗакрытыеСделки.Сделка
	             |								ИЗ
	             |									втНеЗакрытыеСделки КАК втНеЗакрытыеСделки)) КАК ВзаиморасчетыСКонтрагентамиОбороты
	             |		ГДЕ
	             |			НЕ ВзаиморасчетыСКонтрагентамиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			ВзаиморасчетыСКонтрагентамиОбороты.Сделка) КАК ОплатаЗаВсеПериоды
	             |		ПО ВзаиморасчетыОборот.Сделка = ОплатаЗаВсеПериоды.Сделка
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВзаиморасчетыОборот.Сделка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗаказыПокупателейОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
	             |	ЗаказыПокупателейОбороты.ЗаказПокупателя,
	             |	ЗаказыПокупателейОбороты.Регистратор,
	             |	ЗаказыПокупателейОбороты.Номенклатура,
	             |	ЗаказыПокупателейОбороты.Цена,
	             |	ЗаказыПокупателейОбороты.КоличествоРасход,
	             |	ЗаказыПокупателейОбороты.СуммаУпрРасход,
	             |	ЕСТЬNULL(втЗакрытыеСделки.ПоступлениеОплаты, втНеЗакрытыеСделки.ПоступлениеОплаты) КАК ПоступлениеОплаты,
	             |	ЕСТЬNULL(втНеЗакрытыеСделки.СуммаДЗ, 0) КАК СуммаДЗ,
	             |	ЗаказыПокупателейОбороты.Номенклатура.Код
	             |ПОМЕСТИТЬ втОстнова
	             |ИЗ
	             |	РегистрНакопления.ЗаказыПокупателей.Обороты(
	             |			,
	             |			,
	             |			Регистратор,
	             |			ЗаказПокупателя В
	             |				(ВЫБРАТЬ
	             |					втЗакрытыеСделки.Сделка
	             |				ИЗ
	             |					втЗакрытыеСделки КАК втЗакрытыеСделки
	             |			
	             |				ОБЪЕДИНИТЬ ВСЕ
	             |			
	             |				ВЫБРАТЬ
	             |					втнеЗакрытыеСделки.Сделка
	             |				ИЗ
	             |					втнеЗакрытыеСделки КАК втнеЗакрытыеСделки)) КАК ЗаказыПокупателейОбороты
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втНеЗакрытыеСделки КАК втНеЗакрытыеСделки
	             |		ПО ЗаказыПокупателейОбороты.ЗаказПокупателя = втНеЗакрытыеСделки.Сделка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втЗакрытыеСделки КАК втЗакрытыеСделки
	             |		ПО ЗаказыПокупателейОбороты.ЗаказПокупателя = втЗакрытыеСделки.Сделка
	             |ГДЕ
	             |	ЗаказыПокупателейОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	Б.ЗаказПокупателя,
	             |	Б.Номенклатура,
	             |	ЦеныНоменклатуры.Цена
	             |ПОМЕСТИТЬ втБазоваяЦенаПоЗаказам
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		А.ЗаказПокупателя КАК ЗаказПокупателя,
	             |		А.Номенклатура КАК Номенклатура,
	             |		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	             |	ИЗ
	             |		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |			втОстнова.ЗаказПокупателя КАК ЗаказПокупателя,
	             |			втОстнова.Номенклатура КАК Номенклатура
	             |		ИЗ
	             |			втОстнова КАК втОстнова) КАК А
	             |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	             |			ПО А.Номенклатура = ЦеныНоменклатуры.Номенклатура
	             |				И А.ЗаказПокупателя.Дата >= ЦеныНоменклатуры.Период
	             |				И (ЦеныНоменклатуры.ТипЦен = &ТипЦенБазовая)
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		А.ЗаказПокупателя,
	             |		А.Номенклатура) КАК Б
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	             |		ПО Б.Номенклатура = ЦеныНоменклатуры.Номенклатура
	             |			И Б.Период = ЦеныНоменклатуры.Период
	             |			И (ЦеныНоменклатуры.ТипЦен = &ТипЦенБазовая)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втОстнова.Контрагент,
	             |	втОстнова.ЗаказПокупателя,
	             |	втОстнова.Регистратор,
	             |	втОстнова.Номенклатура,
	             |	втОстнова.Цена,
	             |	втОстнова.НоменклатураКод,
	             |	втОстнова.КоличествоРасход,
	             |	втОстнова.СуммаУпрРасход,
	             |	втОстнова.ПоступлениеОплаты,
	             |	втБазоваяЦенаПоЗаказам.Цена КАК БазоваяЦена,
	             |	втОстнова.СуммаДЗ,
	             |	ВЫБОР
	             |		КОГДА ЕСТЬNULL(ВложенныйЗапросСуммаРеализацийПоСделке.СуммаРеализаций, 0) <> 0
	             |			ТОГДА втОстнова.ПоступлениеОплаты * ВложенныйЗапросРеализации.СуммаУпрРасход / ВложенныйЗапросСуммаРеализацийПоСделке.СуммаРеализаций
	             |		ИНАЧЕ 0
	             |	КОНЕЦ КАК ПоступлениеОплатыПоНакладной
	             |ПОМЕСТИТЬ втОснова2
	             |ИЗ
	             |	втОстнова КАК втОстнова
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втБазоваяЦенаПоЗаказам КАК втБазоваяЦенаПоЗаказам
	             |		ПО втОстнова.ЗаказПокупателя = втБазоваяЦенаПоЗаказам.ЗаказПокупателя
	             |			И втОстнова.Номенклатура = втБазоваяЦенаПоЗаказам.Номенклатура
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			втОстнова.ЗаказПокупателя КАК ЗаказПокупателя,
	             |			СУММА(втОстнова.СуммаУпрРасход) КАК СуммаРеализаций
	             |		ИЗ
	             |			втОстнова КАК втОстнова
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			втОстнова.ЗаказПокупателя) КАК ВложенныйЗапросСуммаРеализацийПоСделке
	             |		ПО втОстнова.ЗаказПокупателя = ВложенныйЗапросСуммаРеализацийПоСделке.ЗаказПокупателя
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			втОстнова.Регистратор КАК Регистратор,
	             |			СУММА(втОстнова.СуммаУпрРасход) КАК СуммаУпрРасход
	             |		ИЗ
	             |			втОстнова КАК втОстнова
	             |		
	             |		СГРУППИРОВАТЬ ПО
	             |			втОстнова.Регистратор) КАК ВложенныйЗапросРеализации
	             |		ПО втОстнова.Регистратор = ВложенныйЗапросРеализации.Регистратор";
	Запрос.УстановитьПараметр("НачалоПериода",?(НачалоПериода=Дата(1,1,1),'20000101000000',НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",?(КонецПериода=Дата(1,1,1),КонецДня(ТекущаяДата()),КонецДня(КонецПериода)));
	Запрос.УстановитьПараметр("ТипЦенБазовая",Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"));//базовая
	Запрос.УстановитьПараметр("ОтветственноеЛицо",Справочники.Пользователи.НайтиПоНаименованию("Замула А. В."));
	Рез=Запрос.Выполнить().Выгрузить();
	//Рез.ВыбратьСтроку();
	ТЗЦеныАвтологист=Новый ТаблицаЗначений;
	ТЗЦеныАвтологист.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТЗЦеныАвтологист.Колонки.Добавить("МинимальнаяЦена",Новый ОписаниеТипов("Число",,,,Новый КвалификаторыЧисла(15,2)));
	ТЗЦеныАвтологист.Колонки.Добавить("ДатаЦены",Новый ОписаниеТипов("Дата"));
	//тз1=Рез.Выгрузить().ВыбратьСтроку();
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втОстнова.ЗаказПокупателя.Дата КАК ЗаказПокупателяДата,
	|	втОстнова.Номенклатура
	|ИЗ
	|	втОстнова КАК втОстнова
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстнова.ЗаказПокупателя.Дата,
	|	втОстнова.Номенклатура
	|ИТОГИ ПО
	|	ЗаказПокупателяДата";
	ВыборкаДата=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СписокНоменклатуры=новый СписокЗначений;
	КонтрАвтологист=Справочники.Контрагенты.НайтиПоКоду("П000868");
	Пока ВыборкаДата.Следующий() Цикл
		ДатаЦены=ВыборкаДата.ЗаказПокупателяДата;
		ВыборкаНом=ВыборкаДата.Выбрать();
		СписокНоменклатуры.Очистить();
		Пока ВыборкаНом.Следующий() Цикл
			СписокНоменклатуры.Добавить(ВыборкаНом.Номенклатура);
		КонецЦикла;
		//тз=ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(КонтрАвтологист,СписокНоменклатуры,ДатаЦены);
		тз=ПолучитьЦеныДляКонтрагента(КонтрАвтологист,СписокНоменклатуры,ДатаЦены);
		Если ТипЗнч(тз)=Тип("ТаблицаЗначений") тогда
			Для Каждого стр из тз цикл
				нстр=ТЗЦеныАвтологист.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,стр);
				нстр.ДатаЦены=ДатаЦены;
			КонецЦикла;	 
		Иначе
		КонецЕсли;
	КонецЦикла;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЦеныАвтологист.Номенклатура,
	             |	ЦеныАвтологист.МинимальнаяЦена,
	             |	ЦеныАвтологист.ДатаЦены
	             |ПОМЕСТИТЬ втЦеныАвтологист
	             |ИЗ
	             |	&ЦеныАвтологист КАК ЦеныАвтологист
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втОснова2.Номенклатура,
	             |	втОснова2.Контрагент,
	             |	втОснова2.Регистратор КАК Реализация,
	             |	втОснова2.Цена,
	             |	втОснова2.НоменклатураКод,
	             |	втОснова2.КоличествоРасход КАК Количество,
	             |	втОснова2.СуммаУпрРасход КАК СуммаРеализации,
	             |	втОснова2.БазоваяЦена,
	             |	ЕСТЬNULL(втЦеныАвтологист.МинимальнаяЦена, втОснова2.БазоваяЦена) КАК ЦенаСоСкидкой,
	             |	ВЫБОР
	             |		КОГДА втОснова2.Цена - ЕСТЬNULL(втЦеныАвтологист.МинимальнаяЦена, втОснова2.БазоваяЦена) > 0
	             |			ТОГДА ВЫБОР
	             |					КОГДА втОснова2.СуммаДЗ <= 0
	             |							И ЕСТЬNULL(втЦеныАвтологист.МинимальнаяЦена, втОснова2.БазоваяЦена) <> 0
	             |						ТОГДА втОснова2.КоличествоРасход * (втОснова2.Цена - ЕСТЬNULL(втЦеныАвтологист.МинимальнаяЦена, втОснова2.БазоваяЦена))
	             |					ИНАЧЕ 0
	             |				КОНЕЦ
	             |		ИНАЧЕ 0
	             |	КОНЕЦ КАК СуммаВознаграждения,
	             |	втОснова2.СуммаДЗ КАК СуммаДЗ,
	             |	втОснова2.ПоступлениеОплатыПоНакладной КАК ПоступлениеОплатыПоНакладной,
	             |	втОснова2.ЗаказПокупателя КАК ЗаказПокупателя
	             |ИЗ
	             |	втОснова2 КАК втОснова2
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныАвтологист КАК втЦеныАвтологист
	             |		ПО втОснова2.ЗаказПокупателя.Дата = втЦеныАвтологист.ДатаЦены
	             |			И втОснова2.Номенклатура = втЦеныАвтологист.Номенклатура
	             |ИТОГИ
	             |	СУММА(СуммаРеализации),
	             |	МАКСИМУМ(СуммаДЗ),
	             |	МАКСИМУМ(ПоступлениеОплатыПоНакладной)
	             |ПО
	             |	ЗаказПокупателя,
	             |	Реализация";
	Запрос.УстановитьПараметр("ЦеныАвтологист",ТЗЦеныАвтологист);
	Рез=Запрос.Выполнить();
	тз=Рез.Выгрузить();
	//тз.ВыбратьСтроку();
	тз.Очистить();
	ВыборкаЗаказ=Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗаказ.Следующий() Цикл
		ВыборкаРеализация=ВыборкаЗаказ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаРеализация.Следующий() Цикл
			Детали=ВыборкаРеализация.Выбрать();
			Пока Детали.Следующий() Цикл
				нстр=тз.Добавить();
				ЗаполнитьЗначенияСвойств(нстр,Детали);
				нстр.ПоступлениеОплатыПоНакладной=?(Детали.СуммаРеализации=0,0,ВыборкаРеализация.ПоступлениеОплатыПоНакладной*Детали.СуммаРеализации/ВыборкаРеализация.СуммаРеализации);
				нстр.СуммаДЗ=?(Детали.СуммаРеализации=0,0,ВыборкаЗаказ.СуммаДЗ*Детали.СуммаРеализации/ВыборкаЗаказ.СуммаРеализации);
			КонецЦикла;	
		КонецЦикла;	
	КонецЦикла;	
	//тз.ВыбратьСтроку();
	
	///
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("тз",тз);
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	Настройки = КомпоновщикНастроек.Настройки;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	Настройки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,
	ВнешниеНаборыДанных);
	
	//ТабДок = Новый ТабличныйДокумент;
	ТабДок=ЭлементыФормы.Результат;
	ТабДок.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабДок);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ТабДок.Показать();
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры


/////
Функция ПолучитьЦеныДляКонтрагента(Контрагент,СписокНоменклатуры, ДатаЦены=Неопределено) Экспорт
	// получаетцены
	ЗапросПоискПолитики=Новый Запрос;	
	Если ДатаЦены=Неопределено тогда
		ЗапросПоискПолитики.Текст ="ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПолитикаЦенообразования.Ссылка
		|ИЗ
		|	Документ.ПолитикаЦенообразования КАК ПолитикаЦенообразования
		|ГДЕ
		|	ПолитикаЦенообразования.Контрагент = &Контрагент
		|	И ПолитикаЦенообразования.Ссылка.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПолитикаЦенообразования.Дата УБЫВ";
		
		
		ЗапросПоискПолитики.УстановитьПараметр("Контрагент",Контрагент);
	Иначе
		//Смирнов ++
		//
		ЗапросПоискПолитики.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
		                          |	ПолитикаЦенообразования.Ссылка
		                          |ИЗ
		                          |	Документ.ПолитикаЦенообразования КАК ПолитикаЦенообразования
		                          |ГДЕ
		                          |	ПолитикаЦенообразования.Контрагент = &Контрагент
		                         // |	И ПолитикаЦенообразования.Ссылка.Проведен
		                          |	И ПолитикаЦенообразования.Дата <= &ДатаЦены
		                          |	И ПолитикаЦенообразования.ПометкаУдаления = ЛОЖЬ
		                          |
		                          |УПОРЯДОЧИТЬ ПО
		                          |	ПолитикаЦенообразования.Дата УБЫВ";
		ЗапросПоискПолитики.УстановитьПараметр("Контрагент",Контрагент);
		ЗапросПоискПолитики.УстановитьПараметр("ДатаЦены",ДатаЦены);
		//Смирнов
	КонецЕсли;
	
	РезультатПолитика= ЗапросПоискПолитики.Выполнить();
	
	Если РезультатПолитика.Пустой() Тогда
		Возврат ("нет политики ценообразования для контрагента");
	Иначе
		ВыборкаПолитика=РезультатПолитика.Выбрать();
		ВыборкаПолитика.Следующий();
		ТекущаяПолитика=ВыборкаПолитика.Ссылка;
	КонецЕсли;	     // для контрагента нет политики ценообразования
	
	
	ТекстЗапросаДляВставкиЦена="ВЫБОР ";
	
	Для сч=0 по ТекущаяПолитика.Правила.Количество()-1 Цикл
		ТекстЗапросаДляВставкиЦена=ТекстЗапросаДляВставкиЦена+ " КОГДА " + ТекущаяПолитика.Правила[сч].Правило + " ТОГДА " + ТекущаяПолитика.Правила[сч].ОтпускнаяЦена;
	КонецЦикла;
	ТекстЗапросаДляВставкиЦена=ТекстЗапросаДляВставкиЦена+" ИНАЧЕ 0 КОНЕЦ ";
	
	
	ТекстЗапросаДляВставкиПриоритет="ВЫБОР ";
	
	Для сч=0 по ТекущаяПолитика.Правила.Количество()-1 Цикл
		ТекстЗапросаДляВставкиПриоритет=ТекстЗапросаДляВставкиПриоритет+ " КОГДА " + ТекущаяПолитика.Правила[сч].Правило + " ТОГДА " + ТекущаяПолитика.Правила[сч].НомерСтроки;
	КонецЦикла;
	ТекстЗапросаДляВставкиПриоритет=ТекстЗапросаДляВставкиПриоритет+" ИНАЧЕ 1000 КОНЕЦ Приоритет ";
	
	
	ПостроительОтчетаОтчет = Новый ПостроительОтчета;
	
	ПостроительОтчетаОтчет.Текст="ВЫБРАТЬ
	|   Приоритет, Номенклатура,   
	//ТипЦен,
	|	МинимальнаяЦена
	|
	|	ПОМЕСТИТЬ ВТ_Товары
	| ИЗ
	| (ВЫБРАТЬ 
	|	Номенклатура,   
	//|	Номенклатура.НоменклатурнаяГруппа, 
	//|	Номенклатура.Производитель, 
	//|	ТипЦен,
	|	0000 МинимальнаяЦена,
	|	1 Приоритет
	|	ИЗ 
	| ( ВЫБРАТЬ Номенклатура, ТипЦен, Цена ЦенаПоТипуЦен 
	|	ИЗ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаЦены, ТипЦен В (&СписокТиповЦен) 
	| 				И Номенклатура В (&СписокНоменклатуры) )
	|   ГДЕ Цена > 0 )ЦеныНоменклатуры 
	| ГДЕ 0000>0
	|) А
	
	|;
	|
	|ВЫБРАТЬ Номенклатура,  МИНИМУМ(Приоритет) Приоритет	
	|ПОМЕСТИТЬ ВТ_ПриоритетыТоваров
	|	ИЗ 
	|ВТ_Товары
	|СГРУППИРОВАТЬ ПО Номенклатура
	|;
	|ВЫБРАТЬ
	| ВТ_Товары.Приоритет, ВТ_Товары.Номенклатура, 
	//|ВТ_Товары.ТипЦен ТипЦен,
	
	////---------------------округление до рублей-------------------
	|Выразить(ВТ_Товары.МинимальнаяЦена как Число(15,0)) как МинимальнаяЦена
	|
	|
	|ИЗ ВТ_Товары
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПриоритетыТоваров
	|ПО  ВТ_Товары.Номенклатура= ВТ_ПриоритетыТоваров.Номенклатура 
	|И ВТ_Товары.Приоритет= ВТ_ПриоритетыТоваров.Приоритет 
	|
	|";
	
	ПостроительОтчетаОтчет.Текст=СтрЗаменить(ПостроительОтчетаОтчет.Текст,"0000",ТекстЗапросаДляВставкиЦена);
	ПостроительОтчетаОтчет.Текст=СтрЗаменить(ПостроительОтчетаОтчет.Текст,"1 Приоритет",ТекстЗапросаДляВставкиПриоритет);
	
	СписокТиповЦен=Новый СписокЗначений;
	
	Для сч=0 по ТекущаяПолитика.Параметры.Количество()-1 Цикл
		ИмяПараметра =ТекущаяПолитика.Параметры[сч].ИмяПараметра;
		ЗначениеПараметра = ТекущаяПолитика.Параметры[сч].ЗначениеПараметра;
		ПостроительОтчетаОтчет.Параметры.Вставить(ИмяПараметра, ЗначениеПараметра);
		
		Если ТипЗнч(ЗначениеПараметра)= Тип("СправочникСсылка.ТипыЦенНоменклатуры") Тогда
			Если  СписокТиповЦен.НайтиПоЗначению(ЗначениеПараметра) =Неопределено Тогда
				СписокТиповЦен.Добавить(ЗначениеПараметра);
			КонецЕсли;	   
		КонецЕсли;	
	КонецЦикла;	 
	
	ПостроительОтчетаОтчет.Параметры.Вставить("СписокТиповЦен", СписокТиповЦен);
	ПостроительОтчетаОтчет.Параметры.Вставить("СписокНоменклатуры", СписокНоменклатуры);
	ПостроительОтчетаОтчет.Параметры.Вставить("ДатаЦены", ДатаЦены);
	//ПостроительОтчетаОтчет.Параметры.Вставить("ДатаДокумента", Ссылка.Дата);
	
	Результат = ПостроительОтчетаОтчет.ПолучитьЗапрос().Выполнить();
	
	табЗнач1 = Результат.Выгрузить();
	Возврат  табЗнач1;
	
КонецФункции	

