Перем ТекстОтбора;
Перем ТекстОтбораНоменклатуры;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
КонецПроцедуры

Процедура ПриЗакрытии()
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	ТабДок.Очистить();
	Макет = ВнешняяОбработкаОбъект.ПолучитьМакет("Отчет");

	ТекстОтбора = "";
	ТекстОтбораНоменклатуры = "";
	
	Отбор = "";
	
	Если Номенклатура.Количество() > 0 Тогда
		
		Если ВидСравненияНоменклатуры = ВидСравнения.ВСписке Тогда
		
			Отбор = " В ";
			
		ИначеЕсли ВидСравненияНоменклатуры = ВидСравнения.НеВСписке Тогда
		
			Отбор = " НЕ В ";
			
		ИначеЕсли ВидСравненияНоменклатуры = ВидСравнения.ВСпискеПоИерархии Тогда
		
			Отбор = " В ИЕРАРХИИ ";
			
		ИначеЕсли ВидСравненияНоменклатуры = ВидСравнения.НеВСпискеПоИерархии Тогда
		
			Отбор = " НЕ В ИЕРАРХИИ ";
		
		КонецЕсли;
		
		ТекстОтбора = ТекстОтбора +
		"	И З2.Номенклатура" + Отбор + "(&СписокНоменклатуры)";
		
		ТекстОтбораНоменклатуры = СтрЗаменить(ТекстОтбора, "И З2", "И Закупки");
		
	КонецЕсли;
	
	ТекстОтбораНоменклатуры = " ГДЕ	Закупки.Период МЕЖДУ " + ?(АнализироватьЗакупкиТолькоВВыбраномПериоде, "&ДатаНач", "&ДатаУчета")  + " И &ДатаКон " + ТекстОтбораНоменклатуры;
	
	Отбор = "";
	
	Если Контрагенты.Количество() > 0 Тогда
		
		Если ВидСравненияКонтрагентов = ВидСравнения.ВСписке Тогда
		
			Отбор = " В ";
			
		ИначеЕсли ВидСравненияКонтрагентов = ВидСравнения.НеВСписке Тогда
		
			Отбор = " НЕ В ";
			
		ИначеЕсли ВидСравненияКонтрагентов = ВидСравнения.ВСпискеПоИерархии Тогда
		
			Отбор = " В ИЕРАРХИИ ";
			
		ИначеЕсли ВидСравненияКонтрагентов = ВидСравнения.НеВСпискеПоИерархии Тогда
		
			Отбор = " НЕ В ИЕРАРХИИ ";
		
		КонецЕсли;
		
		ТекстОтбора = ТекстОтбора +
		"	И З2.Контрагент" + Отбор + " (&СписокКонтрагентов) ";
		
	КонецЕсли;

	Если ФормироватьОтчетЗакупки Тогда
		
		ТекДата = ТекущаяДата();		
		ОтчетПоступления(Макет, ТабДок, X, ДатаКон, ДатаНач);
		
		Если ВыводитьИнформациюОВремениВыполнения Тогда
			
			Сообщить("Построен отчет по поступлениям за " + Строка(ТекущаяДата() - ТекДата) + " сек.");
			
		КонецЕсли;
		
	КонецЕсли; 
	
	Если ФормироватьОтчетПродажи Тогда
		
		ТекДата = ТекущаяДата();		
		ОтчетПродажи(Макет, ТабДок, X, ДатаКон, ДатаНач);
		
		Если ВыводитьИнформациюОВремениВыполнения Тогда
			
			Сообщить("Построен отчет по продажам за " + Строка(ТекущаяДата() - ТекДата) + " сек.");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ФормироватьОбщийОтчет Тогда
		
		ТекДата = ТекущаяДата();		
		ОтчетОбщий(Макет, ТабДок, X, ДатаКон, ДатаНач);
		
		Если ВыводитьИнформациюОВремениВыполнения Тогда
			
			Сообщить("Построен общий отчет за " + Строка(ТекущаяДата() - ТекДата) + " сек.");
			
		КонецЕсли;
		
	КонецЕсли; 
	
	
КонецПроцедуры

Процедура ОтчетПоступления(Макет, ТабДок, X, ДатаКон,  ДатаНач) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ЗПокупки.Период, " + ПериодИтогов + ") КАК Период,
	|	ЗПокупки.ВидОперации,
	|	ЗПокупки.Номенклатура КАК Номенклатура,
	|	ЗПокупки.Контрагент,
	|	ЗПокупки.СуммаДвижения,
	|	ЗПокупки.ОплатаТовара,
	|	ЗПокупки.ДокументЗакупки КАК ПоПриходу,
	|	РАЗНОСТЬДАТ(ЗПокупки.Период, &ДатаКонца, ДЕНЬ) КАК Дни,
	|	ВЫРАЗИТЬ(-1 * ЗПокупки.ОплатаТовара * &X / 100 / 365 * РАЗНОСТЬДАТ(ЗПокупки.Период, &ДатаКонца, ДЕНЬ) КАК ЧИСЛО(15, 2)) КАК Пени
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|					ИЛИ ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|				ТОГДА ""ОплатаПоставщику""
	|			ИНАЧЕ ""Поступление""
	|		КОНЕЦ КАК ВидОперации,
	|		ВзаиморасчетыСКонтрагентами.ВидДвижения КАК ВидДвижения,
	|		ВзаиморасчетыСКонтрагентами.Период КАК Период,
	|		Закупки.Номенклатура КАК Номенклатура,
	|		Закупки.Номенклатура.Импорт КАК Импорт,
	|		Закупки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		Закупки.ДокументЗакупки КАК ДокументЗакупки,
	|		Закупки.Количество КАК Количество,
	|		Закупки.Стоимость КАК Стоимость,
	|		ВЫБОР
	|			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &ДвижениеРасход
	|				ТОГДА Закупки.Стоимость
	|			ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	|		КОНЕЦ КАК СуммаДвижения,
	|		ВЫБОР
	|			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &ДвижениеПриход
	|				ТОГДА ВЫБОР
	|						КОГДА Закупки.ДокументЗакупки.СуммаДокумента = 0
	|							ТОГДА 0
	|						ИНАЧЕ ВЫРАЗИТЬ(ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов / Закупки.ДокументЗакупки.СуммаДокумента * Закупки.Стоимость КАК ЧИСЛО(15, 2))
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ОплатаТовара,
	|		ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента КАК ДоговорКонтрагента1,
	|		ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.Владелец КАК Контрагент,
	|		ВзаиморасчетыСКонтрагентами.Сделка КАК Сделка,
	|		ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.Закупки КАК Закупки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	|			ПО (ВЫБОР
	|					КОГДА Закупки.ДокументЗакупки.Сделка ССЫЛКА Документ.ЗаказПоставщику
	|						ТОГДА Закупки.ДокументЗакупки.Сделка = ВзаиморасчетыСКонтрагентами.Сделка
	|					ИНАЧЕ Закупки.ДокументЗакупки = ВзаиморасчетыСКонтрагентами.Сделка
	|				КОНЕЦ)
	|	
	|" + ТекстОтбораНоменклатуры + " 
	|		
	|) КАК ЗПокупки
	|ГДЕ
	|	ЗПокупки.Импорт = ИСТИНА
	|	И ЗПокупки.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ЗПокупки.Количество > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ
	|	СУММА(Пени)
	|ПО
	|	ОБЩИЕ,
	|	Номенклатура,
	|	Период";

	Запрос.УстановитьПараметр("X", Процент);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаУчета", НачалоДня(ДатаНачалПолученияДанныхОЗакупках) + 600);	
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(КонецГода(ДатаНач)));
	
	Запрос.УстановитьПараметр("ДвижениеПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ДвижениеРасход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("СписокНоменклатуры", Номенклатура.ВыгрузитьКолонку("Номенклатура"));	
	
	Состояние("Выполнение запроса по закупкам...");
	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
	ОбластьПериод = Макет.ПолучитьОбласть("Период");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ОбластьЗаголовок.Параметры.Заголовок = "Поступления за период " + ПредставлениеПериода(ДатаНач, ДатаКон, "ФП = Истина");
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	
    Состояние("Вывод результатов запроса по закупкам...");

	ВыборкаНоменклатура = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаНоменклатура.Следующий() Цикл
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		ТабДок.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень(),,Ложь);

		ВыборкаПериод = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаПериод.Следующий() Цикл
			ОбластьПериод.Параметры.Заполнить(ВыборкаПериод);
			ТабДок.Вывести(ОбластьПериод, ВыборкаПериод.Уровень(),,Ложь);

			ВыборкаДетали = ВыборкаПериод.Выбрать();

			Пока ВыборкаДетали.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень(),,Ложь);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.Вывести(ОбластьОбщийИтог);
	
	Запрос = "";
	
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры


Процедура ОтчетПродажи(Макет, ТабДок, X, ДатаКон,  ДатаНач) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
"ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(З2.Период, " + ПериодИтогов + ") КАК Период,
	|	З2.ВидОперации КАК ВидОперации,
	|	З2.ОплатаТовара КАК ОплатаТовара,
	|	З2.Номенклатура КАК Номенклатура,
	|	З2.Контрагент,
	|	З2.КоличествоПродажи,
	|	ВЫРАЗИТЬ(З2.СтоимостьПродажи / З2.КоличествоПродажи КАК ЧИСЛО(15, 2)) КАК Цена,
	|	З2.СтоимостьПродажи КАК СтоимостьПродажи,
	|	З2.ДокументОприходования КАК ПоПриходу,
	|	З2.Регистратор КАК РасходнаяНаклодная,
	|	РАЗНОСТЬДАТ(З2.Период, &ДатаКонца, ДЕНЬ) КАК Дни,
	|	ВЫРАЗИТЬ(З2.ОплатаТовара * &X / 100 / 365 * РАЗНОСТЬДАТ(З2.Период, &ДатаКонца, ДЕНЬ) КАК ЧИСЛО(15, 2)) КАК АнтиПени
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	|				ТОГДА ""Оплата""
	|			ИНАЧЕ ""Продажа""
	|		КОНЕЦ КАК ВидОперации,
	|		ВЫБОР
	|			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	|				ТОГДА ВЫРАЗИТЬ(ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов / ПродажиСебестоимость.Регистратор.СуммаДокумента * Продажи.Стоимость КАК ЧИСЛО(15, 2))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ОплатаТовара,
	|		ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.Владелец КАК Контрагент,
	|		ПродажиСебестоимость.Номенклатура.Импорт КАК НоменклатураИмпорт,
	|		ПродажиСебестоимость.Номенклатура КАК Номенклатура,
	|		ВзаиморасчетыСКонтрагентами.Период КАК Период,
	|		ПродажиСебестоимость.Стоимость КАК Стоимость,
	|		ПродажиСебестоимость.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ВзаиморасчетыСКонтрагентами.Сделка КАК Сделка,
	|		ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|		ПродажиСебестоимость.ДокументОприходования КАК ДокументОприходования,
	|		ПродажиСебестоимость.Регистратор КАК Регистратор,
	|		ПродажиСебестоимость.Количество КАК КоличествоПродажи,
	|		ПродажиСебестоимость.Стоимость КАК СтоимостьЗакупка,
	|		Продажи.Стоимость КАК СтоимостьПродажи,
	|		Продажи.Период КАК ПериодПродаж
	|	ИЗ
	|		РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	|			ПО ПродажиСебестоимость.ЗаказПокупателя = ВзаиморасчетыСКонтрагентами.Сделка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи КАК Продажи
	|			ПО ПродажиСебестоимость.ЗаказПокупателя = Продажи.ЗаказПокупателя
	|				И ПродажиСебестоимость.Номенклатура = Продажи.Номенклатура
	|				И ПродажиСебестоимость.Регистратор = Продажи.Регистратор) КАК З2
	|ГДЕ
	|	З2.ПериодПродаж МЕЖДУ &ДатаНач И &ДатаКон
	|	И З2.НоменклатураИмпорт = ИСТИНА
	|   " + ТекстОтбора + "
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ
	|	СУММА(АнтиПени)
	|ПО
	|	ОБЩИЕ,
	|	Номенклатура,
	|	Период";

	Запрос.УстановитьПараметр("X", Процент);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(КонецГода(ДатаНач)));
	
	//Запрос.УстановитьПараметр("ДвижениеПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("СписокНоменклатуры", Номенклатура.ВыгрузитьКолонку("Номенклатура"));	
	Запрос.УстановитьПараметр("СписокКонтрагентов", Контрагенты.ВыгрузитьКолонку("Контрагент"));
	
	Состояние("Выполнение запроса по продажам...");
	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ПОбщиеИтоги");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("ПНоменклатура");
	ОбластьПериод = Макет.ПолучитьОбласть("ППериод");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("ПДетали");

	ОбластьЗаголовок.Параметры.Заголовок = "Продажи за период " + ПредставлениеПериода(ДатаНач, ДатаКон, "ФП = Истина");
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	
    Состояние("Вывод результатов запроса по продажам...");
	
	ВыборкаНоменклатура = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаНоменклатура.Следующий() Цикл
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		ТабДок.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень(),,Ложь);

		ВыборкаПериод = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаПериод.Следующий() Цикл
			ОбластьПериод.Параметры.Заполнить(ВыборкаПериод);
			ТабДок.Вывести(ОбластьПериод, ВыборкаПериод.Уровень(),,Ложь);

			ВыборкаДетали = ВыборкаПериод.Выбрать();

			Пока ВыборкаДетали.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень(),,Ложь);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.Вывести(ОбластьОбщийИтог);
	
	Запрос = "";
	
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ОтчетОбщий(Макет, ТабДок, X, ДатаКон,  ДатаНач) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОЗ.Период КАК Период,
	|	ОЗ.ВидОперации,
	|	ОЗ.Номенклатура КАК Номенклатура,
	|	ОЗ.Контрагент,
	|	ОЗ.ОплатаТовара,
	|	ОЗ.ПоПриходу,
	|	ОЗ.Дни,
	|	ОЗ.Пени КАК Пени,
	|	ВЫБОР
	|		КОГДА ОЗ.Пени < 0
	|			ТОГДА ОЗ.Пени
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК _Пени,
	|	ВЫБОР
	|		КОГДА ОЗ.Пени > 0
	|			ТОГДА ОЗ.Пени
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК _АнтиПени
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(ЗПокупки.Период, " + ПериодИтогов + ") КАК Период,
	|		ЗПокупки.ВидОперации КАК ВидОперации,
	|		ЗПокупки.Номенклатура КАК Номенклатура,
	|		ЗПокупки.Контрагент КАК Контрагент,
	|		ЗПокупки.СуммаДвижения КАК СуммаДвижения,
	|		ЗПокупки.ОплатаТовара КАК ОплатаТовара,
	|		ЗПокупки.ДокументЗакупки КАК ПоПриходу,
	|		РАЗНОСТЬДАТ(ЗПокупки.Период, &ДатаКонца, ДЕНЬ) КАК Дни,
	|		ВЫРАЗИТЬ(-1 * ЗПокупки.ОплатаТовара * &X / 100 / 365 * РАЗНОСТЬДАТ(ЗПокупки.Период, &ДатаКонца, ДЕНЬ) КАК ЧИСЛО(15, 2)) КАК Пени,
	|		ЛОЖЬ КАК Поле1,
	|		ЛОЖЬ КАК Поле2
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|						ИЛИ ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|					ТОГДА ""ОплатаПоставщику""
	|				ИНАЧЕ ""Поступление""
	|			КОНЕЦ КАК ВидОперации,
	|			ВзаиморасчетыСКонтрагентами.ВидДвижения КАК ВидДвижения,
	|			ВзаиморасчетыСКонтрагентами.Период КАК Период,
	|			Закупки.Номенклатура КАК Номенклатура,
	|			Закупки.Номенклатура.Импорт КАК Импорт,
	|			Закупки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|			Закупки.ДокументЗакупки КАК ДокументЗакупки,
	|			Закупки.Количество КАК Количество,
	|			Закупки.Стоимость КАК Стоимость,
	|			ВЫБОР
	|				КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &ДвижениеРасход
	|					ТОГДА Закупки.Стоимость
	|				ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	|			КОНЕЦ КАК СуммаДвижения,
	|			ВЫБОР
	|				КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &ДвижениеПриход
	|					ТОГДА ВЫБОР
	|							КОГДА Закупки.ДокументЗакупки.СуммаДокумента = 0
	|								ТОГДА 0
	|							ИНАЧЕ ВЫРАЗИТЬ(ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов / Закупки.ДокументЗакупки.СуммаДокумента * Закупки.Стоимость КАК ЧИСЛО(15, 2))
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ОплатаТовара,
	|			ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента КАК ДоговорКонтрагента1,
	|			ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.Владелец КАК Контрагент,
	|			ВзаиморасчетыСКонтрагентами.Сделка КАК Сделка,
	|			ВзаиморасчетыСКонтрагентами.Регистратор КАК Регистратор
	|		ИЗ
	|			РегистрНакопления.Закупки КАК Закупки
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	|				ПО (ВЫБОР
	|						КОГДА Закупки.ДокументЗакупки.Сделка ССЫЛКА Документ.ЗаказПоставщику
	|							ТОГДА Закупки.ДокументЗакупки.Сделка = ВзаиморасчетыСКонтрагентами.Сделка
	|						ИНАЧЕ Закупки.ДокументЗакупки = ВзаиморасчетыСКонтрагентами.Сделка
	|					КОНЕЦ)
	|" + 		ТекстОтбораНоменклатуры + " 
	|		) КАК ЗПокупки
	|	ГДЕ
	|		ЗПокупки.Импорт = ИСТИНА
	|		И ЗПокупки.Период МЕЖДУ &ДатаНач И &ДатаКон
	|		И ЗПокупки.Количество > 0
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(З2.Период, " + ПериодИтогов + ") КАК Период,
	|		З2.ВидОперации,
	|		З2.Номенклатура,
	|		З2.Контрагент,
	|		З2.СтоимостьПродажи,
	|		З2.ОплатаТовара,
	|		З2.ДокументОприходования,
	|		РАЗНОСТЬДАТ(З2.Период, &ДатаКонца, ДЕНЬ),
	|		ВЫРАЗИТЬ(З2.ОплатаТовара * &X / 100 / 365 * РАЗНОСТЬДАТ(З2.Период, &ДатаКонца, ДЕНЬ) КАК ЧИСЛО(15, 2)),
	|		ВЫРАЗИТЬ(З2.СтоимостьПродажи / З2.КоличествоПродажи КАК ЧИСЛО(15, 2)),
	|		З2.Регистратор
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	|					ТОГДА ""Оплата""
	|				ИНАЧЕ ""Продажа""
	|			КОНЕЦ КАК ВидОперации,
	|			ВЫБОР
	|				КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = &Расход
	|					ТОГДА ВЫРАЗИТЬ(ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов / ПродажиСебестоимость.Регистратор.СуммаДокумента * Продажи.Стоимость КАК ЧИСЛО(15, 2))
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ОплатаТовара,
	|			ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.Владелец КАК Контрагент,
	|			ПродажиСебестоимость.Номенклатура.Импорт КАК НоменклатураИмпорт,
	|			ПродажиСебестоимость.Номенклатура КАК Номенклатура,
	|			ВзаиморасчетыСКонтрагентами.Период КАК Период,
	|			ПродажиСебестоимость.Стоимость КАК Стоимость,
	|			ПродажиСебестоимость.ЗаказПокупателя КАК ЗаказПокупателя,
	|			ВзаиморасчетыСКонтрагентами.Сделка КАК Сделка,
	|			ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|			ПродажиСебестоимость.ДокументОприходования КАК ДокументОприходования,
	|			ПродажиСебестоимость.Регистратор КАК Регистратор,
	|			ПродажиСебестоимость.Количество КАК КоличествоПродажи,
	|			ПродажиСебестоимость.Стоимость КАК СтоимостьЗакупка,
	|			Продажи.Стоимость КАК СтоимостьПродажи,
	|			Продажи.Период КАК ПериодПродаж
	|		ИЗ
	|			РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	|				ПО ПродажиСебестоимость.ЗаказПокупателя = ВзаиморасчетыСКонтрагентами.Сделка
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи КАК Продажи
	|				ПО ПродажиСебестоимость.ЗаказПокупателя = Продажи.ЗаказПокупателя
	|					И ПродажиСебестоимость.Номенклатура = Продажи.Номенклатура
	|					И ПродажиСебестоимость.Регистратор = Продажи.Регистратор) КАК З2
	|	ГДЕ
	|		З2.ПериодПродаж МЕЖДУ &ДатаНач И &ДатаКон
	|		И З2.НоменклатураИмпорт = ИСТИНА
	|   " + ТекстОтбора + "
	|	) КАК ОЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	ОЗ.ПоПриходу,
	|	ОЗ.Период,
	|	ОЗ.ВидОперации,
	|	ОЗ.Номенклатура,
	|	ОЗ.Контрагент,
	|	ОЗ.ОплатаТовара,
	|	ОЗ.Дни,
	|	ОЗ.Пени
	|ИТОГИ
	|	СУММА(Пени),
	|	СУММА(_Пени),
	|	СУММА(_АнтиПени)
	|ПО
	|	ОБЩИЕ,
	|	Номенклатура,
	|	Период";

	Запрос.УстановитьПараметр("X", Процент);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаУчета", НачалоДня(ДатаНачалПолученияДанныхОЗакупках) + 600);	
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(КонецГода(ДатаНач)));
	
	//Запрос.УстановитьПараметр("ДвижениеПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ДвижениеПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ДвижениеРасход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("СписокНоменклатуры", Номенклатура.ВыгрузитьКолонку("Номенклатура"));	
	Запрос.УстановитьПараметр("СписокКонтрагентов", Контрагенты.ВыгрузитьКолонку("Контрагент"));
	
	Состояние("Выполнение общего запроса...");
	
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ООбщиеИтоги");
	ОбластьНоменклатура = Макет.ПолучитьОбласть("ОНоменклатура");
	ОбластьПериод = Макет.ПолучитьОбласть("ОПериод");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("ОДетали");

	ОбластьЗаголовок.Параметры.Заголовок = "Общий итог за период " + ПредставлениеПериода(ДатаНач, ДатаКон, "ФП = Истина");
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	
    Состояние("Вывод результатов общего запроса...");

	ВыборкаНоменклатура = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаНоменклатура.Следующий() Цикл
		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		ТабДок.Вывести(ОбластьНоменклатура, ВыборкаНоменклатура.Уровень(),,Ложь);

		ВыборкаПериод = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаПериод.Следующий() Цикл
			ОбластьПериод.Параметры.Заполнить(ВыборкаПериод);
			ТабДок.Вывести(ОбластьПериод, ВыборкаПериод.Уровень(),,Ложь);

			ВыборкаДетали = ВыборкаПериод.Выбрать();

			Пока ВыборкаДетали.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень(),,Ложь);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.Вывести(ОбластьОбщийИтог);
	
	Запрос = "";
	
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры


Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыНастройка(Кнопка)
	
	Настройка = ПолучитьФорму("Настройка").ОткрытьМодально();
	
	//Если Настройка.ОткрытьМодально() <> Неопределено Тогда
	//
	//	 УстановитьНастройки();
	//
	//КонецЕсли; 
	
	
	
КонецПроцедуры

//Отбор = Новый Структура;

//Настройки.Вставить("ОтборНоменклатуры", Новый Массив);
//Настройки.Вставить("ИсключитьКонтрагентов", Ложь);
//Настройки.Вставить("ОтборКонтрагентов", Новый Массив);

ВидСравненияКонтрагентов = ВидСравнения.ВСписке;
ВидСравненияНоменклатуры = ВидСравнения.ВСписке;

ПериодИтогов = "День";

ДатаНачалПолученияДанныхОЗакупках = Дата(2006, 7, 29);

ФормироватьОбщийОтчет = Истина;
ФормироватьОтчетЗакупки = Истина;
ФормироватьОтчетПродажи = Истина;