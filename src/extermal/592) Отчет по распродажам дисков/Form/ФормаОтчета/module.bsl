Перем ПараметрДанныхНачалоПериода, ПараметрДанныхКонецПериода;

Процедура ДействияФормыДействие(Кнопка)
	
	Если ВариантОтчета = "Остатки" Тогда
		//Получим таблицу скидок из 597 внешней обработки
		ТекСсылка = Справочники.ВнешниеОбработки.НайтиПоКоду("597"); 
		ИмяФайла = ПолучитьИмяВременногоФайла(); 
		ДвоичныеДанные = ТекСсылка.ХранилищеВнешнейОбработки.Получить(); 
		ДвоичныеДанные.Записать(ИмяФайла); 
		ОбработкаКонтрольСкидок = ВнешниеОбработки.Создать(ИмяФайла,Ложь); 
		ТабОбъемКонтейнера = ОбработкаКонтрольСкидок.ЗаполнитьТаблицуОбъемКонтейнера();
		ТабРазмерСкидок = ОбработкаКонтрольСкидок.ЗаполнитьТаблицуРазмерСкидок();
		ТабРасчетСкидок = ОбработкаКонтрольСкидок.ЗаполнитьТаблицуРасчетСкидок(ТабОбъемКонтейнера, ТабРазмерСкидок, Ложь, 0, 59, 2500, Ложь, Неопределено, 0);
	КонецЕсли;
	
	Настройки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);	
	
	ЭлементыФормы.Результат.Очистить();
	ДокументРезультат = ЭлементыФормы.Результат;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.НачатьВывод();
	Пока Истина Цикл
		ОбработкаПрерыванияПользователя();
		ЭлементРезультата = ПроцессорКомпоновкиДанных.Следующий();
		Если ЭлементРезультата= Неопределено Тогда
			Прервать;
		Иначе
			
			Если ВариантОтчета = "Остатки" Тогда
				
				Если ЭлементРезультата.ЗначенияПараметров.Количество() > 0 Тогда 
					
					ИмяПараметра_СсылкаНаФото = Неопределено;
					ИмяПараметра_КодНоменклатуры = Неопределено;
					ИмяПараметра_Цена = Неопределено;
					
					// Поскольку имена параметров зашиты как "П1, П2..." то нужно понять какой из них нам нужен
					// Для этого идем в макеты и ищем имя параметра в выражении к параметру
					Для каждого ПараметрМакета Из МакетКомпоновки.Макеты[ЭлементРезультата.Макет].Параметры Цикл
						
						Если ТипЗнч(ПараметрМакета) = Тип("ПараметрОбластиВыражениеКомпоновкиДанных") Тогда
							
							Если Найти(ПараметрМакета.Выражение,"photo.yst.ru/allwheels") > 0 Тогда
								ИмяПараметра_СсылкаНаФото = ПараметрМакета.Имя;    
							КонецЕсли; 
							
							Если Найти(ПараметрМакета.Выражение, "Код") > 0 Тогда
								ИмяПараметра_КодНоменклатуры = ПараметрМакета.Имя;
							КонецЕсли;
							
							Если Найти(ПараметрМакета.Выражение, "Цена") > 0 И Найти(ПараметрМакета.Выражение, "USD") = 0 Тогда
								ИмяПараметра_Цена = ПараметрМакета.Имя;
							КонецЕсли;
							
						КонецЕсли;    
						
					КонецЦикла; 
					
					Если ИмяПараметра_СсылкаНаФото <> Неопределено Тогда
						//Обработка значения поля
						ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_СсылкаНаФото].Значение = НРег(ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_СсылкаНаФото].Значение);
					КонецЕсли; 
					
					Если ИмяПараметра_КодНоменклатуры <> Неопределено Тогда
						КодНоменклатуры = ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_КодНоменклатуры].Значение;
						Цена = ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_Цена].Значение;
						СтрокаТЗСкидок = ТабРасчетСкидок.Найти(КодНоменклатуры);
						Если НЕ СтрокаТЗСкидок = Неопределено Тогда
							КонтрольнаяЦена = СтрокаТЗСкидок.ИтогоВРублях;
							Если Цена < КонтрольнаяЦена Тогда
								ЭлементРезультата.ЗначенияПараметров[ИмяПараметра_Цена].Значение = КонтрольнаяЦена;
								Сообщить("Для номенклатуры " + КодНоменклатуры + " Цена " + Строка(Цена) + " заменена на " + Строка(КонтрольнаяЦена));
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПроцессорВывода.ЗакончитьВывод();
	
КонецПроцедуры

Процедура ВариантОтчетаПриИзменении(Элемент)
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек.Найти(Элемент.Значение).Настройки);
	
	УстановитьНастройки();
	
КонецПроцедуры

Процедура КнопкаВыбораПериодаНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНачала, ?(ДатаОкончания='0001-01-01', ДатаОкончания, КонецДня(ДатаОкончания)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНачала = НастройкаПериода.ПолучитьДатуНачала();
		ДатаОкончания = НастройкаПериода.ПолучитьДатуОкончания();
		ПараметрДанныхНачалоПериода.Значение = ДатаНачала;	
		ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаОкончания);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДатаНачалаПриИзменении(Элемент)
	
	ПараметрДанныхНачалоПериода.Значение = ДатаНачала;	
	
КонецПроцедуры

Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаОкончания);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Для Каждого ВариантНастроек Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
		ЭлементыФормы.ВариантОтчета.СписокВыбора.Добавить(ВариантНастроек.Имя, ВариантНастроек.Представление);
	КонецЦикла;
	Если СхемаКомпоновкиДанных.ВариантыНастроек.Количество() > 0 Тогда
		ЭлементыФормы.ВариантОтчета.Значение = СхемаКомпоновкиДанных.ВариантыНастроек[0].Имя;
	КонецЕсли;	
	
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДатаОкончания = ТекущаяДата();
	УстановитьНастройки();
	КлючУникальности = 1;
	
КонецПроцедуры

Процедура УстановитьНастройки()
	
	Если ВариантОтчета = "Остатки" Тогда
		ЭлементыФормы.ДатаНачала.Доступность = Ложь;
		ДатаНачала = Дата(1,1,1);
		
		ПараметрДанныхНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1];   //при выборе этого варианта все равно запрос по продажам выполняется,т.о. сокращается скорость
		ПараметрДанныхНачалоПериода.Значение = КонецДня(ДатаОкончания);
		ПараметрДанныхНачалоПериода.Использование = Истина;
		
		ЭлементыФормы.НадписьДатаПроверкиНагрузки.Видимость = Истина;
		ЭлементыФормы.ДатаПроверкиНагрузки.Видимость = Истина;
		ДатаПроверкиНагрузки = '20180201000000';
		
		ПараметрДатаПроверкиНагрузки = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[3];
		ПараметрДатаПроверкиНагрузки.Значение = ДатаПроверкиНагрузки;
		ПараметрДатаПроверкиНагрузки.Использование = Истина;
		
		ЭлементыФормы.Надпись2.Видимость = Истина;
		
	Иначе
		ЭлементыФормы.ДатаНачала.Доступность = Истина;
		ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);
		
		ПараметрДанныхНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1];
		ПараметрДанныхНачалоПериода.Значение = ДатаНачала;
		ПараметрДанныхНачалоПериода.Использование = Истина;
		
		ЭлементыФормы.НадписьДатаПроверкиНагрузки.Видимость = Ложь;
		ЭлементыФормы.ДатаПроверкиНагрузки.Видимость = Ложь;
		
		ЭлементыФормы.Надпись2.Видимость = Ложь;
		
	КонецЕсли;
		
	ПараметрДанныхКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[2];
	ПараметрДанныхКонецПериода.Значение = КонецДня(ДатаОкончания);
	ПараметрДанныхКонецПериода.Использование = Истина;
	
	Настройки = КомпоновщикНастроек.Настройки;
		
КонецПроцедуры

