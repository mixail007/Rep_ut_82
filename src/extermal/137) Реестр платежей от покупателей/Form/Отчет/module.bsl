
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
КонецПроцедуры

Процедура ПриЗакрытии()
КонецПроцедуры

Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
СтрокаФильтраЗапроса="";	
Если ПерПоказыватьВСЕ=1 Тогда
	 СтрокаФильтраЗапроса="ИМЕЮЩИЕ СУММА(СуммаПеней)>0";
ИначеЕсли	ПерПоказыватьВСЕ=2 Тогда
	 СтрокаФильтраЗапроса="ИМЕЮЩИЕ СУММА(СуммаПУ)>0";
ИначеЕсли 	ПерПоказыватьВСЕ=3 Тогда
	СтрокаФильтраЗапроса="ИМЕЮЩИЕ СУММА(СуммаНД)>0";
КонецЕсли;	

	
	Макет=ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ 
|Регистратор Документ,
|Контрагент,
|Контрагент.ОсновнойМенеджерКонтрагента ОсновнойМенеджерКонтрагента,
|СУММА(СуммаПеней) СуммаПеней,
|СУММА(СуммаПУ) СуммаПУ,
|СУММА(СуммаНД) СуммаНД,
|СУММА(СуммаВзаиморасчетовРасход)-СУММА(СуммаПеней)-СУММА(СуммаПУ)-СУММА(СуммаНД) СуммаОстаток,
|СУММА(СуммаВзаиморасчетовРасход) СуммаПлатежа ИЗ
|(ВЫБРАТЬ
|	ДоговорКонтрагента.Владелец Контрагент,
|	ДоговорКонтрагента,
|	ВЫБОР
|	КОГДА ДоговорКонтрагента.ТипДоговора = &Пени
|	 ТОГДА СуммаВзаиморасчетовРасход
|		ИНАЧЕ 0
|	КОНЕЦ КАК СуммаПеней,
|	ВЫБОР
|	КОГДА ДоговорКонтрагента.ТипДоговора = &ПеревыставлУслуги
|	 ТОГДА СуммаВзаиморасчетовРасход
|	ИНАЧЕ 0
|	КОНЕЦ КАК СуммаПУ,
|	ВЫБОР КОГДА ДоговорКонтрагента.ТипДоговора = &НД
|	 ТОГДА СуммаВзаиморасчетовРасход
|	ИНАЧЕ 0
|	КОНЕЦ КАК СуммаНД,
//|	ВЫБОР КОГДА ДоговорКонтрагента.ТипДоговора<> &НД ИЛИ ДоговорКонтрагента.ТипДоговора<> &ПеревыставлУслуги ИЛИ ДоговорКонтрагента.ТипДоговора = &Пени
//|	 ТОГДА СуммаВзаиморасчетовРасход
//|	ИНАЧЕ 0
//|	КОНЕЦ КАК ОстатокСуммы,
|	Регистратор,
|	СуммаВзаиморасчетовРасход
|ИЗ
|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(&НачДата, &КонДата, Регистратор, )
|ГДЕ (Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее И
|Регистратор.ВидОперации=&ОплатаОтПокупателяБезНал) ИЛИ (Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
| И Регистратор.ВидОперации=&ОплатаОтПокупателяНал) ) А
|СГРУППИРОВАТЬ ПО	Регистратор,
|Контрагент,
|Контрагент.ОсновнойМенеджерПокупателя  "+ СтрокаФильтраЗапроса+
 " УПОРЯДОЧИТЬ ПО Регистратор.Дата,Регистратор";

	
	//, КонДата, НачДата, Пени, ПеревыставлУслуги
	
	Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Запрос.УстановитьПараметр("НачДата", НачалоДня(НачДата));
	Запрос.УстановитьПараметр("Пени", Справочники.ТипыДоговоров.Пени);
	Запрос.УстановитьПараметр("ПеревыставлУслуги", Справочники.ТипыДоговоров.ВозмещаемыеУслуги);
	Запрос.УстановитьПараметр("НД", Справочники.ТипыДоговоров.НД);
	Запрос.УстановитьПараметр("ОплатаОтПокупателяБезНал", Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ОплатаПокупателя);
	Запрос.УстановитьПараметр("ОплатаОтПокупателяНал", Перечисления.ВидыОперацийПКО.ОплатаПокупателя);

			
	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ПериодСтр=ПредставлениеПериода(НачалоДня(НачДата),КонецДня(Кондата), "ФП=Истина");
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();
    номПП=0;
	Пока ВыборкаДетали.Следующий() Цикл
		номПП=номПП+1;
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ОбластьДетальныхЗаписей.Параметры.НомПП=НомПП;
		Если ТипЗнч(ВыборкаДетали.Документ)=Тип("ДокументСсылка.ПлатежноеПоручениеВходящее") Тогда
			ОбластьДетальныхЗаписей.Параметры.НазначениеПлатежа=ВыборкаДетали.Документ.НазначениеПлатежа;
		КонецЕсли;	
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры




