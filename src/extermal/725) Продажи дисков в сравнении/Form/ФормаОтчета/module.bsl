
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	Литые = Истина;
	Штампованные = Истина;
	Год = 1;
	УстановитьФильтр();

КонецПроцедуры

Процедура ПоРегионамПоРегионам(Кнопка)
		Для каждого Настройка Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
Если Кнопка.Текст = Настройка.Представление тогда
   	КомпоновщикНастроек.ЗагрузитьНастройки(Настройка.Настройки);   
	ЭлементыФормы.ПоРегионам.Заголовок= Настройка.Представление;
	УстановитьФильтр();
Прервать;
КонецЕсли;
КонецЦикла;


КонецПроцедуры


Процедура ПроцентПриИзменении(Элемент)
	УстановитьФильтр();
КонецПроцедуры


Процедура ФильтрПроцентПриИзменении(Элемент)
	УстановитьФильтр();
КонецПроцедуры


Процедура ВидСравненияПриИзменении(Элемент)
	УстановитьФильтр();
КонецПроцедуры

процедура УстановитьФильтр()
	КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Отбор.Элементы.Очистить();
	КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Структура[0].Отбор.Элементы.Очистить();
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Литые"));
	ПараметрСКД.Использование = истина ;
	ПараметрСКД.Значение  = Литые*1;
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Штамп"));
	ПараметрСКД.Использование = истина ;
	ПараметрСКД.Значение  = Штампованные*1;

	
	
	
	Если ФильтрПроцент тогда
		//Если   ЭлементыФормы.ПоРегионам.Заголовок = "По менеджерам" Тогда
		//	НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Структура[0].Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//иначе
		//	НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//конецЕсли;
		//
		//НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПроцентПрироста"); 
		//новыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных[СтрЗаменить((Строка(ВидСравнения))," ","")];;
		//НовыйЭлементОтбора.ПравоеЗначение = Процент;	
		
		ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Процент"));
		ПараметрСКД.Использование = Истина;
		ПараметрСКД.Значение  = процент;
		
	конецЕсли;	
	
конецПроцедуры	

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	перем  ВыполненноеДействие;
	
	
	
	
	
	
	
	
	
	СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	//Создадим и инициализируем обработчик расшифровки                    
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	ДоступныеДействия = Новый Массив();
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	//ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	//ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
	
	// Добавляем собственные действия 
	Нов = Новый СписокЗначений;
	ЭлементРасшифровкиДанных = ДанныеРасшифровки.Элементы[Расшифровка];
	ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
	Если  ЭлементРасшифровкиДанныхПоля.Поле = "Контрагент"  тогда
		СпрКонтрагент = ЭлементРасшифровкиДанныхПоля.Значение;
		Нов.Добавить("Посмотреть звонки");
	конецЕсли;
	
	//  
	
	Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия,Нов);
	
	Если ВыполненноеДействие = "Посмотреть звонки" Тогда
		   ТД = ПолучитьТаблицуЗвонков(3, СпрКонтрагент,НачПериода,КонецДня(КонПериода));
		   ТД.Открыть();
	конецЕсли;
	
	

КонецПроцедуры

Процедура ЛитыеПриИзменении(Элемент)
	УстановитьФильтр();
КонецПроцедуры

Процедура ШтампованныеПриИзменении(Элемент)
	УстановитьФильтр();
КонецПроцедуры
