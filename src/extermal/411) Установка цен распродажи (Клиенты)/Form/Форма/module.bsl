перем СвойствоРаспродажи;


//===================Изменения по клиентам========================
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
		
	Если флЭкспорт тогда
		Предупреждение("Для экспортых клиентов - цены распродажи устанавливаются автоматически!", 10);
		возврат;
	КонецЕсли;
	
	Если ТабличноеПоле2.Количество()=0 тогда
		Предупреждение("Список клиентов - пуст!", 10);
		возврат;
	КонецЕсли;
	
	если ТабличноеПоле1.Количество()=0 тогда
    	Предупреждение("Список товаров и цен - пуст!", 10);
		возврат;
	КонецЕсли;

					
	Если вопрос("Вы действительно хотите для "
		+ строка(ТабличноеПоле2.Количество())+" клиентов назначить/отключить цены распродажи?", РежимДиалогаВопрос.ДаНет, 0)
		= КодВозвратаДиалога.Нет Тогда
    Возврат;
	КонецЕсли;

//----------------только для рублевых------------------------	
	
	для каждого стр2 из ТабличноеПоле2 цикл
		
//+++ 14.02.2016		
//================цены НЕ НАДО ставить======================================
		//если стр2.флаг=истина тогда
		//	N = ТабличноеПоле1.Количество(); 
		//	i = 0;
		//	для каждого стр1 из ТабличноеПоле1 цикл
		//		ОбработкаПрерыванияПользователя();
		//		стрРегСв  = РегистрыСведений.ЦеныКлиента.СоздатьМенеджерЗаписи(); 
		//		стрРегСв.Контрагент = стр2.Контрагент;
		//		стрРегСв.Комментарий = "Цена распродажи установлена "+строка(ТекущаяДата());
		//		стрРегСв.Период = ДатаСреза;
		//	ЗаполнитьЗначенияСвойств(стрРегСв, стр1); // ном, цена
		//		попытка
		//		стрРегСв.Записать(); //очистка
		//		i=i+1;	Если i%100=0 тогда
		//				Состояние("Установлено "+строка(i)+" из "+строка(N)+" строк цен...");
		//			КонецЕсли;	
		//	исключение
		//		сообщить("Клиент: "+строка(стр2.Контрагент)+" товар: "+строка(стр1.Номенклатура)+"- ошибка: "+ОписаниеОшибки(), СтатусСообщения.ОченьВажное); // !!
		//		КонецПопытки;
		//	КонецЦикла;
		//
		//сообщить("Установлены цены для Клиента: "+строка(стр2.Контрагент), СтатусСообщения.Информация); // !!

		//Иначе//===============================удаление ВСЕХ ЦЕН =================
		//	Запрос = Новый Запрос;
		//	Запрос.Текст = "ВЫБРАТЬ
		//				   |	ЦеныКлиентаСрезПоследних.Период,
		//				   |	ЦеныКлиентаСрезПоследних.Контрагент,
		//				   |	ЦеныКлиентаСрезПоследних.Номенклатура,
		//				   |	ЦеныКлиентаСрезПоследних.Цена
		//				   |ИЗ
		//				   |	РегистрСведений.ЦеныКлиента КАК ЦеныКлиентаСрезПоследних
		//				   |ГДЕ
		//				   |	ЦеныКлиентаСрезПоследних.Контрагент = &Контрагент
		//				   |	И ЦеныКлиентаСрезПоследних.Комментарий ПОДОБНО &Комментарий
		//				   |"+?(Флажок1,"И Номенклатура в (&СписокНом)","");
		//	Запрос.УстановитьПараметр("СписокНом", ТабличноеПоле1.ВыгрузитьКолонку("Номенклатура") );
		//	
		//	Запрос.УстановитьПараметр("Контрагент", стр2.Контрагент);
		//	Запрос.УстановитьПараметр("Дата", ДатаСреза);
		//	Запрос.УстановитьПараметр("Комментарий", "Цена распродажи установлена %"); //24.02.2016 - только такие записи чистятся!
		//	
		//	выборка = Запрос.Выполнить().Выбрать();			
		//	N = выборка.Количество(); i=0;
		//	пока выборка.Следующий() цикл
		//		ОбработкаПрерыванияПользователя();
		//		стрРегСв = РегистрыСведений.ЦеныКлиента.СоздатьМенеджерЗаписи();
		//		ЗаполнитьЗначенияСвойств(стрРегСв, выборка);
		//		попытка стрРегСв.Удалить(); 
		//			i=i+1; если i%100=0 тогда
		//				Состояние("Удалено "+строка(i)+" из "+строка(N)+" строк цен...");
		//			КонецЕсли;	
		//		исключение Сообщить("Клиент: "+строка(стр2.Контрагент)
		//			+" товар: "+строка(стрРегСв.Номенклатура)+" Ошибка: "+ОписаниеОшибки(), СтатусСообщения.Внимание); 
		//		КонецПопытки;
		//	КонецЦикла;
		//	Состояние(" ");
		//сообщить("Удалено "+строка(N)+" фикс. цен распродажи по клиенту: "+строка(стр2.Контрагент), СтатусСообщения.Информация); // !!
		//КонецЕсли;	
		//
//========================Свойство===========================================================		
	регСвСвойство = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	регСвСвойство.Объект   = стр2.Контрагент; 
	регСвСвойство.Свойство = СвойствоРаспродажи;
	регСвСвойство.Значение = стр2.Флаг;
		попытка
			регСвСвойство.Записать(истина);
			сообщить("Успешно "+?(стр2.Флаг=истина,"включено", "выключено")+" свойство распродажи по клиенту: "+строка(стр2.Контрагент), СтатусСообщения.Информация); // v
		исключение
			сообщить("НЕ УДАЛОСЬ "+?(стр2.Флаг=истина,"включить", "выключить")+" свойство распродажи по клиенту: "+строка(стр2.Контрагент), СтатусСообщения.Внимание); // !
		КонецПопытки;
	
	КонецЦикла;	
	
	//КоманднаяПанель3Обновить(неопределено);

КонецПроцедуры




Процедура КоманднаяПанель2Обновить(Кнопка)
	
	запрос = новый Запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	ЦеныДляРаспродажи.Номенклатура.Код КАК Код,
	               |	ЦеныДляРаспродажи.Номенклатура,
	               |	ЦеныДляРаспродажи.Номенклатура.Типоразмер.Диаметр КАК Диаметр,
	               |	ЦеныДляРаспродажи.Цена
	               |ИЗ
	               |	РегистрСведений.ЦеныДляРаспродажи.СрезПоследних(
	               |			&ДатаСреза,
	               |			ЗаписьАктивна = &флЭкспорт
	               |				И Цена > 0) КАК ЦеныДляРаспродажи";
	
	запрос.УстановитьПараметр("ДатаСреза", ДатаСреза );
	запрос.УстановитьПараметр("флЭкспорт", флЭкспорт );
	ТабличноеПоле1.Очистить();
	ТабличноеПоле1 = запрос.Выполнить().Выгрузить();
 	ЭлементыФормы.Панель1.Страницы.Страница1.Заголовок = "Цены распродажи ("+ТабличноеПоле1.Количество()+")";

КонецПроцедуры

Процедура КоманднаяПанель3Обновить(Кнопка)
	
	Если флЭкспорт тогда // все просто - все клиенты [v]Экспорт
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
       |	ИСТИНА КАК Флаг,
	   |	Истина КАК ЕстьЦены,
       |	Контрагенты.Ссылка КАК Контрагент
       |ИЗ
       |	Справочник.Контрагенты КАК Контрагенты
       |ГДЕ
       |	НЕ Контрагенты.ПометкаУдаления
       |	И Контрагенты.Экспорт
       |	И Контрагенты.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов <> &ВалютаВзаиморасчетов
       |	И Контрагенты.Покупатель
	   |";
			
		Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", справочники.Валюты.НайтиПоКоду("643") );
		ТабличноеПоле2 =  Запрос.Выполнить().Выгрузить();
	Иначе  // по новому свойству и Ценам!
	Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	максимум(Клиенты.Флаг) КАК Флаг,
		               |	максимум(Клиенты.ЕстьЦены) КАК ЕстьЦены,
		               |	Клиенты.Контрагент
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		ЕстьNull(ЗначенияСвойствОбъектов.Значение, ЛОЖЬ) КАК Флаг,
		               |		ложь КАК ЕстьЦены,
		               |		ЗначенияСвойствОбъектов.Объект КАК Контрагент

		               |	ИЗ
		               |		РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		               |	ГДЕ
		               |		ЗначенияСвойствОбъектов.Свойство = &Свойство
		               |		И ЗначенияСвойствОбъектов.Объект.Покупатель
		               |		И ЗначенияСвойствОбъектов.Значение = ИСТИНА
					   |ОБЪЕДИНИТЬ ВСЕ
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |		ложь КАК Флаг,
		               |		Истина КАК ЕстьЦены,
		               |		ЦеныКлиентаСрезПоследних.Контрагент КАК Контрагент
		               |	ИЗ
		               |		РегистрСведений.ЦеныКлиента.СрезПоследних(&Дата,   "+?(Флажок1," Номенклатура в (&СписокНом)","")
					   +"
						|) КАК ЦеныКлиентаСрезПоследних
		               |	
                       |) КАК Клиенты
		               |СГРУППИРОВАТЬ ПО
		               |	Клиенты.Контрагент";
					   
					   
					 //-------------------------------------------------------	
	Запрос.УстановитьПараметр("СписокНом", ТабличноеПоле1.ВыгрузитьКолонку("Номенклатура") );
	запрос.УстановитьПараметр("Дата", ДатаСреза );
	запрос.УстановитьПараметр("Свойство", СвойствоРаспродажи );
		ТабличноеПоле2 =  Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	ЭлементыФормы.Панель1.Страницы.Страница2.Заголовок = "Список клиентов ("+ТабличноеПоле2.Количество()+")";
	
КонецПроцедуры

Процедура флЭкспортПриИзменении(Элемент)
	
	КоманднаяПанель2Обновить(неопределено);
	
	КоманднаяПанель3Обновить(неопределено);
	
	ЭлементыФормы.ТабличноеПоле2.ТолькоПросмотр = флЭкспорт;
		
КонецПроцедуры

//===================флажки===================
процедура УстановитьФл(ном=0)
	для каждого стр1 из ТабличноеПоле2 цикл
		стр1.Флаг = ?(ном = 1, Истина, 
						     ?(ном = 0, ЛОЖЬ, НЕ стр1.Флаг ) );
	КонецЦикла;						 
КонецПроцедуры

Процедура КоманднаяПанель3флВкл(Кнопка)
	УстановитьФл(1);
КонецПроцедуры

Процедура КоманднаяПанель3флВЫКЛ(Кнопка)
	УстановитьФл(0);
КонецПроцедуры

Процедура КоманднаяПанель3флПереКл(Кнопка)
	УстановитьФл(2);
КонецПроцедуры


Процедура ТабличноеПоле2ПриПолученииДанных(Элемент, ОформленияСтрок)
	ЭлементыФормы.Панель1.Страницы.Страница2.Заголовок = "Список клиентов ("+ТабличноеПоле2.Количество()+")";
	для каждого стр1 из ОформленияСтрок цикл
		если стр1.ДанныеСтроки.ЕстьЦены=Истина тогда  
			стр1.Шрифт = новый Шрифт(стр1.Шрифт ,,,Истина); //Жирный
    	КонецЕсли;
	КонецЦикла;
КонецПроцедуры


Процедура ПриОткрытии()
	флЭкспортПриИзменении(неопределено);
	ДатаСреза = ТекущаяДата();
	Флажок1   = ложь; // НЕ только по списку, а по всем!
КонецПроцедуры

Процедура КоманднаяПанель2УстановкаЦенРаспродажи(Кнопка)
	документы.УстановкаЦенДляРаспродажи.ПолучитьФорму("ФормаСписка").Открыть();
КонецПроцедуры

Процедура ТабличноеПоле1ПередНачаломИзменения(Элемент, Отказ)
	Если Вопрос("Список товаров для распродажи устанавливается в документе ""Установки цен для распродажи"".
		  |Вы действительно хотите изменить цену для установки цен клиентам?", РежимДиалогаВопрос.ДаНет, 30)<>КодВозвратаДиалога.Да тогда
		  Отказ = истина;
	КонецЕсли;	  
КонецПроцедуры

Процедура ТабличноеПоле1ПередНачаломДобавления(Элемент, Отказ, Копирование)
	Если не Флажок1 и Вопрос("Список товаров для распродажи устанавливается в документе ""Установки цен для распродажи"".
		  |Вы действительно хотите добавить новую строку для установки цен клиентам?", РежимДиалогаВопрос.ДаНет, 30)<>КодВозвратаДиалога.Да тогда
		  Отказ = истина;
	иначе
		Флажок1 = истина;  
	КонецЕсли;	  
КонецПроцедуры

Процедура ТабличноеПоле1ПередУдалением(Элемент, Отказ)
	Если не Флажок1 и Вопрос("Список товаров для распродажи устанавливается в документе ""Установки цен для распродажи"".
		  |Вы действительно хотите удалить выбранную строку для установки цен клиентам?", РежимДиалогаВопрос.ДаНет, 30)<>КодВозвратаДиалога.Да тогда
		  Отказ = истина;
	иначе
		Флажок1 = истина;  
	КонецЕсли;	  
КонецПроцедуры

СвойствоРаспродажи = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90183"); //Цены распродажи