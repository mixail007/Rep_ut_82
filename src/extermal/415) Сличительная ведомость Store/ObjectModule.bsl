перем  ИмяФайлаРезультата;

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	стандартнаяОбработка = Ложь;
	СхемаКД = СхемаКомпоновкиДанных;
	Настройки =  КомпоновщикНастроек.Настройки;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	компоновщикмакета = Новый КомпоновщикмакетаКомпоновкиДанных;
	МакеткомпоновкиДанных =    КомпоновщикМакета.выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	ВнешниеИсточники = Новый Структура("Stor",Прочитать());
	ДокументРезультат.очистить();
	
	процессоркомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.инициализировать(МакеткомпоновкиДанных,ВнешниеИсточники,ДанныеРасшифровки,Истина);
	
	ПроцессорВыводаРезультатаотчета = Новый ПроцессорВыводаРезультатакомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаРезультатаОтчета.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаРезультатаОтчета.Вывести(ПроцессоркомпоновкиДанных);
	процессорВыводаРезультатаОтчета.ЗакончитьВывод();
	
	
КонецПроцедуры

Функция Прочитать()   Экспорт
удачно = ПодключитьсяКсерверу();
	Если удачно тогда
		сообщить(строка(ТекущаяДата())+" получение данных на Сервере завершено !", СтатусСообщения.Информация);
	Иначе	
		сообщить(строка(ТекущаяДата())+" Ошибка при подключении к серверу!", СтатусСообщения.Внимание);
		Предупреждение("Ошибка подключения к серверу!",30);
	КонецЕсли;
Таб = разобрать();	

//МВ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Выгрузка.Номер,
		|	Выгрузка.СтатусStor,
		|	Выгрузка.СуммаЗаказаStor
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&Выгрузка КАК Выгрузка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка,
		|	ЗаказПокупателя.Проведен,
		|	ЗаказПокупателя.Дата,
		|	ЗаказПокупателя.СуммаДокумента,
		|	ЗаказПокупателя.ПометкаУдаления,
		|	ЗаказПокупателя.Номер
		|ПОМЕСТИТЬ Заказы
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(ЗаказПокупателя.Дата, ГОД) = НАЧАЛОПЕРИОДА(&ДатаНач, ГОД)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыПокупателейОстатки.ЗаказПокупателя
		|ПОМЕСТИТЬ ОстаткиПоЗаказу
		|ИЗ
		|	РегистрНакопления.ЗаказыПокупателей.Остатки(
		|			,
		|			ЗаказПокупателя В
		|				(ВЫБРАТЬ
		|					Заказы.Ссылка
		|				ИЗ
		|					Заказы КАК Заказы)) КАК ЗаказыПокупателейОстатки
		|ГДЕ
		|	ЗаказыПокупателейОстатки.СуммаВзаиморасчетовОстаток > 0
		|	И ЗаказыПокупателейОстатки.СуммаУпрОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродажиОбороты.ЗаказПокупателя
		|ПОМЕСТИТЬ ОтгрузкиОбороты
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			,
		|			,
		|			,
		|			ЗаказПокупателя В
		|				(ВЫБРАТЬ
		|					Заказы.Ссылка
		|				ИЗ
		|					Заказы КАК Заказы)) КАК ПродажиОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВнутренниеЗаказыОстатки.ВнутреннийЗаказ.ДокументОснование
		|ИЗ
		|	РегистрНакопления.ВнутренниеЗаказы.Остатки(
		|			,
		|			ВнутреннийЗаказ.ДокументОснование В
		|				(ВЫБРАТЬ
		|					Заказы.Ссылка
		|				ИЗ
		|					Заказы КАК Заказы)) КАК ВнутренниеЗаказыОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.СтатусStor,
		|	ЕСТЬNULL(ВТ.СуммаЗаказаStor, 0) КАК СуммаЗаказаStor,
		|	ВТ.Номер,
		|	ЕСТЬNULL(Заказы.СуммаДокумента, 0) КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА Заказы.ПометкаУдаления
		|			ТОГДА 3
		|		КОГДА НЕ Заказы.Проведен
		|			ТОГДА 1
		|		КОГДА ОстаткиПоЗаказу.ЗаказПокупателя ЕСТЬ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА ОтгрузкиОбороты.ЗаказПокупателя ЕСТЬ NULL 
		|						ТОГДА 3
		|					ИНАЧЕ 4
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ОтгрузкиОбороты.ЗаказПокупателя ЕСТЬ NULL 
		|					ТОГДА 2
		|				ИНАЧЕ 5
		|			КОНЕЦ
		|	КОНЕЦ КАК Статус,
		|	Заказы.Ссылка
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Заказы КАК Заказы
		|			ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоЗаказу КАК ОстаткиПоЗаказу
		|			ПО Заказы.Ссылка = ОстаткиПоЗаказу.ЗаказПокупателя
		|			ЛЕВОЕ СОЕДИНЕНИЕ ОтгрузкиОбороты КАК ОтгрузкиОбороты
		|			ПО Заказы.Ссылка = ОтгрузкиОбороты.ЗаказПокупателя
		|		ПО ВТ.Номер = Заказы.Номер";
		
	//Запрос.МенеджерВременныхТаблиц = МВ;
	Запрос.УстановитьПараметр("Выгрузка",таб);
	Запрос.УстановитьПараметр("ДатаНач",НачПериода);
	Запрос.УстановитьПараметр("ДатаКон",КонПериода);

	Результат = Запрос.Выполнить().Выгрузить();
	
возврат Результат;	
конецфункции

Функция ПодключитьсяКсерверу(Заказы=Истина)
	
Попытка
//ПроксиСервер = Новый ИнтернетПрокси;
//ПроксиСервер.Пользователь = "admin";
//ПроксиСервер.Пароль       = "cegthvfhbj";
									 //+":"+формат(порт,"ЧГ=0")                       cegthvfhbj
Соединение = Новый HTTPСоединение("store.yst.ru:80",,"admin","cegthvfhbj" );   //"http://localhost"  50876

Если Соединение = Неопределено Тогда
	Возврат Ложь;
КонецЕсли;

НП = Формат(НачПериода,"ДФ=yyyy-MM-dd");
КП = Формат(КонПериода,"ДФ=yyyy-MM-dd");
Если Заказы тогда
ресурс = "api/ordersapi/get?begindate="+НП+"&enddate="+КП;
иначе
ресурс = "api/salesapi/get?begindate="+НП+"&enddate="+КП;
конецЕсли;
Заголовки = Новый Соответствие();
 //АдресРесурса = СтрокаПодключения+":"+формат(порт,"ЧГ=0")+ресурс;
   АдресРесурса = "store.yst.ru:80"+ресурс;
// посылаем запрос
ИмяФайлаРезультата = ПолучитьИмяВременногоФайла();
//Если post тогда
//	HTTPОтвет = Соединение.Записать( ИмяФайла, Ресурс, Заголовки) ;
//иначе	
	// ТОЛЬКО ЧИТАТЬ!
	   Заголовки.Вставить("HASH", "D5790E89580D8B75927F804E738CFCE");  
	   Заголовки.Вставить("Accept", "application/xml");  
	   //  http://terminal.yst.ru
		HTTPзапрос = Новый HTTPЗапрос("/"+Ресурс, Заголовки);
		HTTPОтвет = Соединение.Получить( HTTPзапрос, ИмяФайлаРезультата);
		//HTTPОтвет = Соединение.ОтправитьДляОбработки( Ресурс, ИмяФайлаРезультата);
//КонецЕсли;

Соединение = Неопределено; // разорвать соединение

 ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
 ТекстовыйФайлОтвет.Прочитать(ИмяФайлаРезультата, КодировкаТекста.UTF8);
 СтрокаJSONРезультат = ТекстовыйФайлОтвет.ПолучитьТекст();
 ТекстовыйФайлОтвет = неопределено; // отключается от файла
 
сообщить("Статус ответа: "+строка(HTTPОтвет.КодСостояния)+" Ответ сервера: '"+СтрокаJSONРезультат+"'" );

Если HTTPОтвет.КодСостояния = 200 тогда
	рез = Истина;
	сообщить("Ответ находится во временном файле: "+ИмяФайлаРезультата);
Иначе
	рез = ЛОЖЬ;
	сообщить("Ответ сервера - указывает о наличие ошибки!", СтатусСообщения.ОченьВажное);
КонецЕсли;

исключение
сообщить("Ошибка : "+ОписаниеОшибки() );
	рез = ЛОЖЬ;
КонецПопытки;

возврат рез;

КонецФункции
функция Разобрать()
 ЧтениеXML = Новый ЧтениеXML;
 ЧтениеXML.ОткрытьФайл(ИмяФайлаРезультата);
 
КЧ = Новый КвалификаторыЧисла(12,2);
КС = Новый КвалификаторыСтроки(20);
Массив = Новый Массив;
Массив.Добавить(Тип("Строка"));
ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
Массив.Очистить();
Массив.Добавить(Тип("Число"));
ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
 
 ТаблицаЗаказа = Новый ТаблицаЗначений;
 ТаблицаЗаказа.Колонки.Добавить("Номер",ОписаниеТиповС );
 ТаблицаЗаказа.Колонки.Добавить("СтатусStor",ОписаниеТиповЧ);
 ТаблицаЗаказа.Колонки.Добавить("СуммаЗаказаStor",ОписаниеТиповЧ);
 
 Запись = Новый Структура;
 
 Пока ЧтениеXML.Прочитать() Цикл
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
   Имя = ЧтениеXML.Имя;
  КонецЕсли;
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
   Запись.Вставить(Имя, ЧтениеXML.Значение);      //информацию внутри блока XML помещаем в структуру
  КонецЕсли;
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
   Если ЧтениеXML.Имя = "order" Тогда
    СтрокаТЗ = ТаблицаЗаказа.Добавить();
    СтрокаТЗ.Номер = Запись.num;
    СтрокаТЗ.статусStor = Число(Запись.st);
    СтрокаТЗ.СуммаЗаказаStor = Число(Запись.sum);
   КонецЕсли;
  КонецЕсли;
 КонецЦикла;
 ЧтениеXML.Закрыть();	
возврат ТаблицаЗаказа;	
конецфункции	
	
	
Функция ПрочитатьРеализации()   Экспорт
удачно = ПодключитьсяКсерверу(Ложь);
	Если удачно тогда
		сообщить(строка(ТекущаяДата())+" получение данных на Сервере завершено !", СтатусСообщения.Информация);
	Иначе	
		сообщить(строка(ТекущаяДата())+" Ошибка при подключении к серверу!", СтатусСообщения.Внимание);
		Предупреждение("Ошибка подключения к серверу!",30);
	КонецЕсли;
Таб = разобратьРеализации();	
//результат= неопределено;	

//МВ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Выгрузка.Номер,
		|	Выгрузка.СуммаРеализации
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&Выгрузка КАК Выгрузка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка,
		|	РеализацияТоваровУслуг.Проведен,
		|	РеализацияТоваровУслуг.Дата,
		|	РеализацияТоваровУслуг.СуммаДокумента,
		|	РеализацияТоваровУслуг.ПометкаУдаления,
		|	РеализацияТоваровУслуг.Номер
		|ПОМЕСТИТЬ Реализации
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ГОД) = НАЧАЛОПЕРИОДА(&ДатаНач, ГОД)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Номер КАК Номер,
		|	ЕСТЬNULL(Реализации.СуммаДокумента, 0) КАК СуммаДокумента,
		|	Реализации.Ссылка,
		|	ВТ.СуммаРеализации КАК СуммаДокументаStore,
		|	Реализации.Номер КАК НомерДокумента
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реализации КАК Реализации
		|		ПО ВТ.Номер = Реализации.Номер";
		
	//Запрос.МенеджерВременныхТаблиц = МВ;
	Запрос.УстановитьПараметр("Выгрузка",таб);
	Запрос.УстановитьПараметр("ДатаНач",НачПериода);
	Запрос.УстановитьПараметр("ДатаКон",КонПериода);

	Результат = Запрос.Выполнить().Выгрузить();
//	
возврат Результат;	
конецфункции
функция РазобратьРеализации() Экспорт
 ЧтениеXML = Новый ЧтениеXML;
 ЧтениеXML.ОткрытьФайл(ИмяФайлаРезультата);
 
КЧ = Новый КвалификаторыЧисла(12,2);
КС = Новый КвалификаторыСтроки(20);
Массив = Новый Массив;
Массив.Добавить(Тип("Строка"));
ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
Массив.Очистить();
Массив.Добавить(Тип("Число"));
ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
 
 ТаблицаЗаказа = Новый ТаблицаЗначений;
 ТаблицаЗаказа.Колонки.Добавить("Номер",ОписаниеТиповС );
 //ТаблицаЗаказа.Колонки.Добавить("СтатусStor",ОписаниеТиповЧ);
 ТаблицаЗаказа.Колонки.Добавить("СуммаРеализации",ОписаниеТиповЧ);
 
 Запись = Новый Структура;
 
 Пока ЧтениеXML.Прочитать() Цикл
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
   Имя = ЧтениеXML.Имя;
  КонецЕсли;
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
   Запись.Вставить(Имя, ЧтениеXML.Значение);      //информацию внутри блока XML помещаем в структуру
  КонецЕсли;
  Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
   Если ЧтениеXML.Имя = "sale" Тогда
    СтрокаТЗ = ТаблицаЗаказа.Добавить();
    СтрокаТЗ.Номер = Запись.num;
    СтрокаТЗ.СуммаРеализации = Число(Запись.sum);
   КонецЕсли;
  КонецЕсли;
 КонецЦикла;
 ЧтениеXML.Закрыть();	
возврат ТаблицаЗаказа;	
конецфункции	