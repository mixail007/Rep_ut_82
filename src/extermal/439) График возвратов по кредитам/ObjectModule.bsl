Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)	
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Движение"));
	Если Параметр <> Неопределено Тогда	
        Параметр.Значение = Перечисления.ВидыДвиженийПриходРасход.Расход;
        Параметр.Использование = Истина;
	КонецЕсли;
	
	Если ЗначениеНеЗаполнено(ПериодС) или ЗначениеНеЗаполнено(ПериодПо) Тогда
		Сообщить("Заполните преиод!!!");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаС"));
	Если Параметр <> Неопределено Тогда
		Параметр.Значение = ПериодС;
		Параметр.Использование = Истина;
	КонецЕсли;
	
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаПо"));
	Если Параметр <> Неопределено Тогда
		Параметр.Значение = ПериодПо;
		Параметр.Использование = Истина;
	КонецЕсли;
	
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Кредит"));
	Если Параметр <> Неопределено Тогда
		Параметр.Значение = Справочники.ТипыДоговоров.Кредит;
		Параметр.Использование = Истина;
	КонецЕсли;
	
	
	СтандартнаяОбработка = Ложь;
    КомпоновщикМакет = Новый КомпоновщикМакетаКомпоновкиДанных;
    Макет = КомпоновщикМакет.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки);
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновки);
    //ДокументРезультат.ПоказатьУровеньГруппировокСтрок(2); //Уровень 3
    //ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1); //Уровень 2
    ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);   //Уровень 1
	
КонецПроцедуры
