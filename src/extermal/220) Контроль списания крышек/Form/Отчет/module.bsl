
Процедура ДействияФормыОтчетСформировать(Кнопка)
	//{{КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА(Отчет)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Отчет(ТабДок);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	
	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещенияИРеализации.Документ КАК ДокументСписанияДисков,
	|	ПеремещенияИРеализации.Документ.Подразделение КАК Подразделение,
	|	ПеремещенияИРеализации.Контрагент,
	|	ПеремещенияИРеализации.Количество КАК КоличествоДисковСписано,
	|	ТребованиеНакладные.ДокументСписанияКрышек,
	|	ТребованиеНакладные.Количество КАК КоличествоКрышекСписано,
	|	ЕСТЬNULL(ПеремещенияИРеализации.Количество, 0) - ЕСТЬNULL(ТребованиеНакладные.Количество, 0) КАК Разность,
	|	ПеремещенияИРеализации.Значение КАК КрышкиВыданы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Перемещения.Документ КАК Документ,
	|		Перемещения.Контрагент КАК Контрагент,
	|		Перемещения.Количество КАК Количество,
	|		NULL КАК Значение
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПеремещениеТоваровТовары.Ссылка КАК Документ,
	|			ПеремещениеТоваровТовары.Ссылка.СкладПолучатель КАК Контрагент,
	|			СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество
	|		ИЗ
	|			Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ГДЕ
	|			ПеремещениеТоваровТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|			И ПеремещениеТоваровТовары.Ссылка.Проведен
	|			И ПеремещениеТоваровТовары.Ссылка.СкладПолучатель.Транзитный
	|			И ПеремещениеТоваровТовары.Ссылка.ВнутреннийЗаказ <> &ПустойВнутреннийЗаказ
	|			И ПеремещениеТоваровТовары.Номенклатура В ИЕРАРХИИ(&Диски)
	|			И ПеремещениеТоваровТовары.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|			И ПеремещениеТоваровТовары.Номенклатура В
	|					(ВЫБРАТЬ
	|						РегистрСведений.КомплектующиеНоменклатуры.Номенклатура
	|					ИЗ
	|						РегистрСведений.КомплектующиеНоменклатуры)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПеремещениеТоваровТовары.Ссылка,
	|			ПеремещениеТоваровТовары.Ссылка.СкладПолучатель) КАК Перемещения
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ПродажиОбороты.ДокументПродажи,
	|		ПродажиОбороты.ДокументПродажи.Контрагент,
	|		ПродажиОбороты.КоличествоОборот,
	|		ЗначенияСвойствОбъектов.Значение
	|	ИЗ
	|		РегистрНакопления.Продажи.Обороты(
	|				&НачДата,
	|				&КонДата,
	|				,
	|				Номенклатура В ИЕРАРХИИ (&Диски)
	|					И Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Диски)
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							РегистрСведений.КомплектующиеНоменклатуры.Номенклатура
	|						ИЗ
	|							РегистрСведений.КомплектующиеНоменклатуры)) КАК ПродажиОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|			ПО ПродажиОбороты.ДокументПродажи = ЗначенияСвойствОбъектов.Объект
	|	ГДЕ
	|		ЗначенияСвойствОбъектов.Свойство = &Свойство ИЛИ ЗначенияСвойствОбъектов.Свойство ЕСТЬ NULL) КАК ПеремещенияИРеализации
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТребованиеНакладнаяМатериалы.Ссылка.ДокументОснование КАК ДокументСписанияДисков,
	|			ТребованиеНакладнаяМатериалы.Ссылка КАК ДокументСписанияКрышек,
	|			СУММА(ТребованиеНакладнаяМатериалы.Количество) КАК Количество
	|		ИЗ
	|			Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
	|		ГДЕ
	|			ТребованиеНакладнаяМатериалы.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|			И ТребованиеНакладнаяМатериалы.Номенклатура В ИЕРАРХИИ(&Крышки)
	|			И ТребованиеНакладнаяМатериалы.Ссылка.Проведен
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТребованиеНакладнаяМатериалы.Ссылка.ДокументОснование,
	|			ТребованиеНакладнаяМатериалы.Ссылка) КАК ТребованиеНакладные
	|		ПО ПеремещенияИРеализации.Документ = ТребованиеНакладные.ДокументСписанияДисков
	|ГДЕ
	|	(ПеремещенияИРеализации.Документ.Подразделение ЕСТЬ NULL 
	|			ИЛИ ПеремещенияИРеализации.Документ.Подразделение = &Подразделение)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещенияИРеализации.Документ.Дата
	|ИТОГИ
	|	СУММА(КоличествоДисковСписано),
	|	СУММА(КоличествоКрышекСписано),
	|	СУММА(Разность)
	|ПО
	|	ОБЩИЕ";

	Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Запрос.УстановитьПараметр("НачДата", НачДата);
	Запрос.УстановитьПараметр("Крышки", Справочники.Номенклатура.НайтиПоКоду("0080004"));
	Запрос.УстановитьПараметр("Диски", Справочники.Номенклатура.НайтиПоКоду("0001752"));
	Запрос.УстановитьПараметр("ПустойВнутреннийЗаказ", Документы.ВнутреннийЗаказ.ПустаяСсылка());
    Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90146"));

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());

	ВыборкаДетали = ВыборкаОбщийИтог.Выбрать();

	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ОбластьДетальныхЗаписей.Параметры.КрышкиВыданы = ?(ВыборкаДетали.КрышкиВыданы = Истина, "Да", "");
		
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	Подразделение=Справочники.Подразделения.НайтиПоКоду("00005") ;
	
КонецПроцедуры
