перем ДанныеРасшифровки1;
Процедура ПериодПланированияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПериодПланирования) Тогда
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачФакт");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = ДобавитьМесяц( ПериодПланирования.ДатаНачала,-12);
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонФакт");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонецДня(ДобавитьМесяц( ПериодПланирования.ДатаКонца,-12));  
   
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодПланирования");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  =  ПериодПланирования;
  КонецЕсли;

  ПериодПланированияПоГодам = Периодпланирования;

КонецПроцедуры

Процедура ПоОтветственнымПоОтветственным(Кнопка)
Для каждого Настройка Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
Если Кнопка.Текст = Настройка.Представление тогда
   	КомпоновщикНастроек.ЗагрузитьНастройки(Настройка.Настройки);

   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачФакт");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = ДобавитьМесяц( ПериодПланирования.ДатаНачала,-12);
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонФакт");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонецДня(ДобавитьМесяц( ПериодПланирования.ДатаКонца,-12));  
   
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодПланирования");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  =  ПериодПланирования;
   
	ЭлементыФормы.ПоОтветственным.Заголовок= Настройка.Представление;
Прервать;
КонецЕсли;
КонецЦикла;

КонецПроцедуры

Процедура ПоОтветственнымПоПодразделениям(Кнопка)
Для каждого Настройка Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
Если Кнопка.Текст = Настройка.Представление тогда
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройка.Настройки);

   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачФакт");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = ДобавитьМесяц( ПериодПланирования.ДатаНачала,-12);
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонФакт");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонецДня(ДобавитьМесяц( ПериодПланирования.ДатаКонца,-12));  
   
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодПланирования");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  =  ПериодПланирования;
   
	ЭлементыФормы.ПоОтветственным.Заголовок= Настройка.Представление;
Прервать;
КонецЕсли;
КонецЦикла;
КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ЭлементРасшифровкиДанных = ДанныеРасшифровки.Элементы[Расшифровка];
	ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
	Если  ЭлементРасшифровкиДанныхПоля.Поле = "СуммаПрошлыйГод"  тогда
		Попытка
			Аналитика1 =ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;  //ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0]
		исключение
			Аналитика1 = Неопределено;
		конецпопытки;
		
		
		Если ЭлементыФормы.ПоОтветственным.Заголовок =  "По ответственным" тогда
			Подразделение = Неопределено;
			СтатьяЗатрат = Неопределено;
			Ответственный = Неопределено;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Подразделения") тогда
				Подразделение = Аналитика1;
				СтатьяЗатрат =  ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0].Значение;
			конецЕсли;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.СтатьиЗатрат") тогда
				СтатьяЗатрат = Аналитика1;
			конецЕсли;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Пользователи") тогда
				Ответственный = Аналитика1;
			конецЕсли;	
			
			Форма = ПолучитьФорму("ФормаРасшифровки");
			Если статьяЗатрат <> неопределено тогда
				Форма.СтатьяЗатрат = СтатьяЗатрат;
			конецЕсли;
			
			Если подразделение <> неопределено тогда
				Форма.Подразделение = Подразделение;
			конецЕсли;
			
			Если ответственный <> неопределено тогда
				Форма.ответственный = ответственный;
			конецЕсли;
			форма.ВидОтчета = "Затраты";
			форма.Вариант = "По ответственным";
			форма.началоПериода = ДобавитьМесяц( ПериодПланирования.ДатаНачала,-12);
			Форма.КонецПериода = КонецДня(ДобавитьМесяц( ПериодПланирования.ДатаКонца,-12));  
			//	конецЕсли;
			форма.Открыть();
			ИначеЕсли ЭлементыФормы.ПоОтветственным.Заголовок =  "По подразделениям" тогда
			Подразделение = Неопределено;
			СтатьяЗатрат = Неопределено;
			Ответственный = Неопределено;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.СтатьиЗатрат") тогда
				СтатьяЗатрат = Аналитика1;
				Подразделение = ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьПоля()[0].Значение;
			конецЕсли;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Пользователи") тогда
				Ответственный = Аналитика1;
				Подразделение =  ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0].Значение;
			конецЕсли;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Подразделения") тогда
				Подразделение = Аналитика1;
			конецЕсли;	
			
			Форма = ПолучитьФорму("ФормаРасшифровки");
			Если статьяЗатрат <> неопределено тогда
				Форма.СтатьяЗатрат = СтатьяЗатрат;
			конецЕсли;
			
			Если подразделение <> неопределено тогда
				Форма.Подразделение = Подразделение;
			конецЕсли;
			
			Если ответственный <> неопределено тогда
				Форма.ответственный = ответственный;
			конецЕсли;
			форма.ВидОтчета = "Затраты";
			форма.Вариант = "По подразделениям";
			форма.началоПериода = ДобавитьМесяц( ПериодПланирования.ДатаНачала,-12);
			Форма.КонецПериода = КонецДня(ДобавитьМесяц( ПериодПланирования.ДатаКонца,-12));  
			//	конецЕсли;
			форма.Открыть();
	
		конецЕсли;
	ИначеЕсли  ЭлементРасшифровкиДанныхПоля.Поле = "СуммаБюджет"  тогда
		Попытка
			Аналитика1 =ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;  //ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0]
		исключение
			Аналитика1 = Неопределено;
		конецпопытки;
		Попытка
			Аналитика2 =ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0].Значение; //ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0]
		исключение
			Аналитика2 = Неопределено;
		конецпопытки;
		
		если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.СтатьиЗатрат") или ТипЗнч(Аналитика2) = Тип("СправочникСсылка.СтатьиЗатрат") тогда
			СписокКомандировок= новый списокЗначений;
			списокКомандировок.Добавить(Справочники.СтатьиЗатрат.НайтиПоКоду("А0047"));
			списокКомандировок.Добавить(Справочники.СтатьиЗатрат.НайтиПоКоду("А0046"));
			списокКомандировок.Добавить(Справочники.СтатьиЗатрат.НайтиПоКоду("А0048"));
			списокКомандировок.Добавить(Справочники.СтатьиЗатрат.НайтиПоКоду("А0195"));
			списокКомандировок.Добавить(Справочники.СтатьиЗатрат.НайтиПоКоду("А0049"));
			
			Если списокКомандировок.НайтиПоЗначению(Аналитика1)	<> Неопределено или списокКомандировок.НайтиПоЗначению(Аналитика2)	<> Неопределено Тогда	
				
				Форма = ПолучитьФорму("ФормаРасшифровки");
				Форма.ПериодПланирования = ПериодПланирования;
			подразделение = Неопределено;	
			Если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Подразделения") тогда
				Подразделение = Аналитика1;
			конецЕсли;

				Форма.Подразделение = Подразделение;
				форма.ВидОтчета = "Командировки";
				форма.Открыть();
			конецЕсли;
		конецЕсли;
		
		
	конецЕсли;
	
	

КонецПроцедуры

Процедура КоманднаяПанель1Сформировать(Кнопка)
	СхемаКомпоновкиДанных1 = ПолучитьМакет("ПоГодам");
  	 
	Настройки1 = СхемаКомпоновкиДанных1.НастройкиПоУмолчанию;
	
	ДанныеРасшифровки1 = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета1 = Новый КомпоновщикМакетаКомпоновкиДанных;

	Для каждого Настройка Из СхемаКомпоновкиДанных1.ВариантыНастроек Цикл
		Если ЭлементыФормы.ПоОтветственным1.Заголовок = Настройка.Представление тогда
			Настройки1 = Настройка.Настройки;
			ЭлементыФормы.ПоОтветственным.Заголовок= Настройка.Представление;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	
	Параметр = СхемаКомпоновкиДанных1.Параметры.НачФакт;
	Параметр.Значение = ДобавитьМесяц( ПериодПланированияПоГодам.ДатаНачала,-12);
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.КонФакт;
	Параметр.Значение =  КонецДня(ДобавитьМесяц( ПериодПланированияПоГодам.ДатаКонца,-12));
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.Н16;
	Параметр.Значение = ДобавитьМесяц( ПериодПланированияПоГодам.ДатаНачала,-12*2);
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.К16;
	Параметр.Значение =  КонецДня(ДобавитьМесяц( ПериодПланированияПоГодам.ДатаКонца,-12*2));
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.Н15;
	Параметр.Значение = ДобавитьМесяц( ПериодПланированияПоГодам.ДатаНачала,-12*3);
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.К15;
	Параметр.Значение =  КонецДня(ДобавитьМесяц( ПериодПланированияПоГодам.ДатаКонца,-12*3));
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.Н14;
	Параметр.Значение = ДобавитьМесяц( ПериодПланированияПоГодам.ДатаНачала,-12*4);
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.К14;
	Параметр.Значение =  КонецДня(ДобавитьМесяц( ПериодПланированияПоГодам.ДатаКонца,-12*4));
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.Н13;
	Параметр.Значение = ДобавитьМесяц( ПериодПланированияПоГодам.ДатаНачала,-12*5);
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.К13;
	Параметр.Значение =  КонецДня(ДобавитьМесяц( ПериодПланированияПоГодам.ДатаКонца,-12*5));
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;

	Параметр = СхемаКомпоновкиДанных1.Параметры.СчетЗатраты;
	Параметр.Значение =  ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы;
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	//
	Параметр = СхемаКомпоновкиДанных1.Параметры.ПериодПланирования;
	Параметр.Значение = ПериодПланированияПоГодам;
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	
	МакетКомпоновки1 = КомпоновщикМакета1.Выполнить(СхемаКомпоновкиДанных1, Настройки1, ДанныеРасшифровки1);
	
	//ВнешнийНаборДанных = Новый Структура("ТаблН", ТаблН);	//Добавляем внешнюю таблицу
	
	ПроцессорКомпоновкиДанных1 = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных1.Инициализировать(МакетКомпоновки1, , ДанныеРасшифровки1);
	
	РезультатПоГодам = ЭлементыФормы.РезультатПоГодам;
	РезультатПоГодам.Очистить();
	
	ПроцессорВывода1 = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода1.УстановитьДокумент(РезультатПоГодам);
	
	ПроцессорВывода1.Вывести(ПроцессорКомпоновкиДанных1);
	
	РезультатПоГодам.ФиксацияСлева = 2;
    РезультатПоГодам.ПоказатьУровеньГруппировокСтрок(0);


КонецПроцедуры

Процедура РезультатПоГодамОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
			СтандартнаяОбработка = Ложь;

	ЭлементРасшифровкиДанных = ДанныеРасшифровки1.Элементы[Расшифровка];
	ЭлементРасшифровкиДанныхПоля = ЭлементРасшифровкиДанных.ПолучитьПоля()[0];
	Если  ЭлементРасшифровкиДанныхПоля.Поле = "СуммаОборот"  тогда
		СтандартнаяОбработка = Ложь;
		
		Попытка
			Аналитика1 =ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;  //ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0]
		исключение
			Аналитика1 = Неопределено;
		конецпопытки;

		Попытка
			Год =ЭлементРасшифровкиДанных.ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;  //ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0]
		исключение
			Год = Неопределено;
		конецпопытки;
           		Если ЭлементыФормы.ПоОтветственным1.Заголовок =  "По ответственным" тогда

			 Подразделение = Неопределено;
			 СтатьяЗатрат = Неопределено;
			 Ответственный = Неопределено;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Подразделения") тогда
				Подразделение = Аналитика1;
				СтатьяЗатрат =  ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0].Значение;
			конецЕсли;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.СтатьиЗатрат") тогда
				СтатьяЗатрат = Аналитика1;
			конецЕсли;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Пользователи") тогда
				Ответственный = Аналитика1;
			конецЕсли;	
		
			Форма = ПолучитьФорму("ФормаРасшифровки");
			Если статьяЗатрат <> неопределено тогда
			Форма.СтатьяЗатрат = СтатьяЗатрат;
		    конецЕсли;
		
			Если подразделение <> неопределено тогда
			Форма.Подразделение = Подразделение;
		    конецЕсли;
			
			Если ответственный <> неопределено тогда
			Форма.ответственный = ответственный;
		    конецЕсли;

			
			форма.ВидОтчета = "Затраты";
			форма.началоПериода = ДобавитьМесяц( ПериодПланированияПоГодам.ДатаНачала,-12*(Год(ПериодПланированияПоГодам.ДатаКонца)-Год));
			Форма.КонецПериода = КонецДня(ДобавитьМесяц( ПериодПланированияПоГодам.ДатаКонца,-12*(Год(ПериодПланированияПоГодам.ДатаКонца)-Год)));  
		//	конецЕсли;
			форма.Открыть();
		    иначеЕсли 	ЭлементыФормы.ПоОтветственным1.Заголовок =  "По подразделениям" тогда
		 Подразделение = Неопределено;
			 СтатьяЗатрат = Неопределено;
			 Ответственный = Неопределено;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.СтатьиЗатрат") тогда
				СтатьяЗатрат = Аналитика1;
				Подразделение = ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьПоля()[0].Значение;
			конецЕсли;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Пользователи") тогда
				Ответственный = Аналитика1;
				Подразделение =  ЭлементРасшифровкиДанных.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьРодителей()[0].получитьполя()[0].Значение;
			конецЕсли;
			
			если ТипЗнч(Аналитика1) = Тип("СправочникСсылка.Подразделения") тогда
				Подразделение = Аналитика1;
			конецЕсли;	
		
			Форма = ПолучитьФорму("ФормаРасшифровки");
			Если статьяЗатрат <> неопределено тогда
			Форма.СтатьяЗатрат = СтатьяЗатрат;
		    конецЕсли;
		
			Если подразделение <> неопределено тогда
			Форма.Подразделение = Подразделение;
		    конецЕсли;
			
			Если ответственный <> неопределено тогда
			Форма.ответственный = ответственный;
		    конецЕсли;

			
			форма.ВидОтчета = "Затраты";
			форма.началоПериода = ДобавитьМесяц( ПериодПланированияПоГодам.ДатаНачала,-12*(Год(ПериодПланированияПоГодам.ДатаКонца)-Год));
			Форма.КонецПериода = КонецДня(ДобавитьМесяц( ПериодПланированияПоГодам.ДатаКонца,-12*(Год(ПериодПланированияПоГодам.ДатаКонца)-Год)));  
		//	конецЕсли;
			форма.Открыть();
		
		    конецЕсли;
			конецЕсли;
		
		

КонецПроцедуры

Процедура ПриОткрытии()
		Если ЗначениеЗаполнено(ПериодПланирования) Тогда
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачФакт");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = ДобавитьМесяц( ПериодПланирования.ДатаНачала,-12);
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонФакт");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  = КонецДня(ДобавитьМесяц( ПериодПланирования.ДатаКонца,-12));  
   
   
   ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодПланирования");
   ПараметрСКД.Использование = Истина;
   ПараметрСКД.Значение  =  ПериодПланирования;
  КонецЕсли;

КонецПроцедуры

Процедура ПоОтветственным1ПоОтветственным(Кнопка)
	ЭлементыФормы.ПоОтветственным1.Заголовок= Кнопка.Текст;

КонецПроцедуры
