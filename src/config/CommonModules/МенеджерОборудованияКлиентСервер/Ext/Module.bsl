
Функция ПараметрыФискальногоНакопителяОбщие() Экспорт
	
	Параметры = Новый Структура();
	Параметры.Вставить("РегистрационныйНомерККТ");
	Параметры.Вставить("ОрганизацияНазвание");
	Параметры.Вставить("ОрганизацияИНН");
	Параметры.Вставить("АдресУстановкиККТ");
	Параметры.Вставить("КодыСистемыНалогообложения");
	Параметры.Вставить("ПризнакАвтономногоРежима"      , Ложь);
	Параметры.Вставить("ПризнакАвтоматическогоРежима"  , Ложь);
	Параметры.Вставить("НомерАвтоматаДляАвтоматическогоРежима");
	Параметры.Вставить("ПризнакШифрованиеДанных"       , Ложь);
	Параметры.Вставить("ПризнакРасчетовЗаУслуги"       , Ложь);
	Параметры.Вставить("ПризнакФормированияТолькоБСО"  , Ложь);
	Параметры.Вставить("ПризнакРасчетовТолькоВИнтернет", Ложь);
	Параметры.Вставить("ОрганизацияОФДИНН");
	Параметры.Вставить("ОрганизацияОФДНазвание");
	Возврат Параметры; 
	
КонецФункции

Функция ПараметрыРегистрацииККТ() Экспорт
	
	Параметры = ПараметрыФискальногоНакопителяОбщие();
	Параметры.Вставить("ЗаводскойНомерККТ");
	Параметры.Вставить("ПризнакФискализации");
	Параметры.Вставить("ЗаводскойНомерФН");
	Параметры.Вставить("НомерДокументаФискализации");
	Параметры.Вставить("ДатаВремяФискализации");
	Параметры.Вставить("ВерсияФФДККТ");
	Параметры.Вставить("ВерсияФФДФН");

	Возврат Параметры; 
	
КонецФункции

Функция ПараметрыСостоянияККТ() Экспорт;
	
	Параметры = Новый Структура();
	Параметры.Вставить("КоличествоНепереданныхФД"   , Неопределено); 
	Параметры.Вставить("НомерПервогоНепереданногоФД", Неопределено); 
	Параметры.Вставить("ДатаПервогоНепереданногоФД ", Неопределено); 
	
	Возврат Параметры; 
	
КонецФункции

Функция ПараметрыОперацииФискализацииЧека() Экспорт;
	
	ПараметрыЧека = Новый Структура();
	// Общие реквизиты для всех типов оборудования.
	ПараметрыЧека.Вставить("ДокументОснование"  , Неопределено);
	ПараметрыЧека.Вставить("ТипРасчета"         , ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств"));
	ПараметрыЧека.Вставить("Кассир"             , Неопределено); // Должность и фамилия лица, осуществившего расчет с покупателем (клиентом), оформившего кассовый чек.
	ПараметрыЧека.Вставить("КассирИНН"          , Неопределено); // Идентификационный номер налогоплательщика кассира, при наличии.
	ПараметрыЧека.Вставить("Электронно"         , Ложь); // Чек будет предоставлен в элетронной форме, без печати.
	
	ПараметрыЧека.Вставить("Отправляет1СSMS"   , Ложь); // SMS отправляет средствами 1C.
	ПараметрыЧека.Вставить("Отправляет1СEmail" , Ложь); // Email отправляет средствами 1C. 
	
	ПараметрыЧека.Вставить("ОрганизацияНазвание" , Неопределено);
	ПараметрыЧека.Вставить("ОрганизацияИНН"      , Неопределено); // ИНН организации (Для чека ЕНВД)
	ПараметрыЧека.Вставить("ОрганизацияКПП"      , Неопределено); // Название организации (Для чека ЕНВД)
	ПараметрыЧека.Вставить("АдресМагазина"       , Неопределено); // Адрес магазина (Для чека ЕНВД)
	ПараметрыЧека.Вставить("НаименованиеМагазина", Неопределено); // Наименование магазина
	// Параметры необходимые для ФР
	ПараметрыЧека.Вставить("СерийныйНомер"      , Неопределено); // Заводской номер ККМ
	// Параметры необходимые для чека ЕНВД на принтере чеков
	ПараметрыЧека.Вставить("НомерКассы"         , Неопределено);
	ПараметрыЧека.Вставить("НомерЧека"          , Неопределено);
	ПараметрыЧека.Вставить("НомерСмены"         , Неопределено);
	ПараметрыЧека.Вставить("ДатаВремя"          , ТекущаяДата());
	ПараметрыЧека.Вставить("ТекстШапки"         , НСтр("ru='ДОБРО ПОЖАЛОВАТЬ!'"));
	ПараметрыЧека.Вставить("ТекстПодвала"       , НСтр("ru='СПАСИБО ЗА ПОКУПКУ!'"));
	// Параметры для ККТ по ФЗ-54
	ПараметрыЧека.Вставить("КодСистемыНалогообложения", Неопределено);  
	ПараметрыЧека.Вставить("ОтправительEmail"         , Неопределено);
	ПараметрыЧека.Вставить("ПокупательEmail"          , Неопределено);
	ПараметрыЧека.Вставить("ПокупательНомер"          , Неопределено);
	ПараметрыЧека.Вставить("ВознагражденияАгента"     , Неопределено); // AgentCompensation
	ПараметрыЧека.Вставить("ТелефонПлатежногоАгента"  , Неопределено); // AgentPhone 
	ПараметрыЧека.Вставить("ТелефонОператораПоПриемуПлатежей", Неопределено); // ReceivePaymentsOperatorPhone
	ПараметрыЧека.Вставить("ТелефонОператораПеревода"        , Неопределено); // MoneyTransferOperatorPhone
	ПараметрыЧека.Вставить("ТелефонПоставщика"               , Неопределено);
	ПараметрыЧека.Вставить("АдресОператораПеревода"          , Неопределено); // MoneyTransferOperatorAddress
	ПараметрыЧека.Вставить("ИННОператораПеревода"            , Неопределено); // MoneyTransferOperatorVATIN
	ПараметрыЧека.Вставить("НаименованиеОператораПеревода"   , Неопределено); // MoneyTransferOperatorName
	ПараметрыЧека.Вставить("ОперацияПлатежногоАгента"        , Неопределено);
	ПараметрыЧека.Вставить("ТелефонБанковскогоАгента"        , Неопределено); // BankAgentPhone
	ПараметрыЧека.Вставить("ТелефонБанковскогоСубагента"     , Неопределено); // BankSubagentPhone
	ПараметрыЧека.Вставить("ОперацияБанковскогоАгента"       , Неопределено); // BankAgentOperation
	ПараметрыЧека.Вставить("ОперацияБанковскогоСубагента"    , Неопределено); // BankSubagentOperation
	ПараметрыЧека.Вставить("ВознагражденияБанковскогоАгента" , Неопределено); // BankAgentCompensation
	// Позиции чека для фискализации
	ПараметрыЧека.Вставить("ПозицииЧека"  , Новый Массив()); // Массив элементов "Структура"
	ПараметрыЧека.Вставить("ТаблицаОплат" , Новый Массив()); // Массив элементов "Структура"
	
	Возврат ПараметрыЧека; 
	
КонецФункции

Функция ПараметрыФискальнойСтрокиЧека() Экспорт;
	
	ПараметрыСтроки = Новый Структура();
	ПараметрыСтроки.Вставить("ФискальнаяСтрока"); 
	// Обязательные поля
	ПараметрыСтроки.Вставить("Наименование");    // Наименовнование предмета расчета
	ПараметрыСтроки.Вставить("Количество"  , 0); // Количество предмета расчета 
	ПараметрыСтроки.Вставить("Цена"        , 0); // Цена без учета скидок и наценок
	ПараметрыСтроки.Вставить("Сумма"       , 0); // Cтоимость предмета расчета с учетом скидок и наценок
	ПараметрыСтроки.Вставить("НомерСекции" , 0); // Номер cекции ФР (для совместимости)
	ПараметрыСтроки.Вставить("СтавкаНДС"   , 0); // Cтавка НДС в %
	ПараметрыСтроки.Вставить("Штрихкод");        // Штрихкод
	// Дополнительные реквизиты начиная с ФФД 1.1
	ПараметрыСтроки.Вставить("КодПризнакаСпособаРасчета");  // Код признака способа расчета (Таблица 25 документа ФФД)
	ПараметрыСтроки.Вставить("КодПризнакаПредметаРасчета"); // Код признака предмета расчета   (Таблица 25 документа ФФД)
	ПараметрыСтроки.Вставить("ЕдиницаИзмеренияПредметаРасчета"); // Код признака предмета расчета 
	ПараметрыСтроки.Вставить("КодТоварнойНоменклатуры");    // Код товарной номенклатуры
	
	Возврат ПараметрыСтроки; 
	
КонецФункции

Функция ПараметрыНормализуемыхФискальныхДанных() Экспорт
	
	СтруктураРезультат = ПараметрыСостоянияККТ();
	
	СтруктураРезультат.Вставить("ДатаСменыККТ");
	СтруктураРезультат.Вставить("НомерСменыККТ");
	СтруктураРезультат.Вставить("КоличествоЧеков");
	СтруктураРезультат.Вставить("КоличествоФД");
	СтруктураРезультат.Вставить("ПревышеноВремяОжиданияОтветаОФД");
	СтруктураРезультат.Вставить("НеобходимаСтрочнаяЗаменаФН");
	СтруктураРезультат.Вставить("ПамятьФНПереполнена");
	СтруктураРезультат.Вставить("РесурсФНИсчерпан");
	
	Возврат СтруктураРезультат;
	
КонецФункции

Функция ПолучитьКодТипаРасчетаДенежнымиСредствами(ТипРасчета) Экспорт
	
	Если ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств") Тогда
		ПризнакРасчетаКод = 1 
	ИначеЕсли ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств") Тогда
		ПризнакРасчетаКод = 2 
	ИначеЕсли ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.РасходДенежныхСредств") Тогда
		ПризнакРасчетаКод = 3
	Иначе
		ПризнакРасчетаКод = 4
	КонецЕсли;
	
	Возврат ПризнакРасчетаКод;
	
КонецФункции

// Добавленные
Функция КодСистемыНалогообложения(Организация=Неопределено, ДатаДокумента = Неопределено,ЕстьУслуги=Ложь, ПриоритетныйПорядок = Неопределено) Экспорт
	//13.07.17 всегда ОСН
	возврат 0;
	
	Если ДатаДокумента = Неопределено Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	Отказ = Ложь;
	УП = ПолучитьПараметрыУчетнойПолитикиНалоговыйУчет(ДатаДокумента, Отказ, Организация);
	Если Отказ Тогда
//		Результат = -1;

   		Результат = 3;

	ИначеЕсли УП.РозничнаяТорговляОблагаетсяЕНВД Тогда    
		Результат = 3;
	ИначеЕсли УП.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая Тогда
		Если ЕстьУслуги Тогда 
			Результат = 3;
				Иначе
			Результат = 0;
		КонецЕсли;
	ИначеЕсли УП.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная Тогда
		Если УП.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
			Результат = 1;
		ИначеЕсли УП.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
			Результат = 2;
		Иначе
			Результат = -1;
		КонецЕсли;
	Иначе
		Результат = -1;
	КонецЕсли;
		
	Возврат Результат;

КонецФункции

Функция ПолучитьСтавкуНДСДляФискализацииЧека(СтавкаНДС,Организация=Неопределено) Экспорт
	//13.07.17 всегда 18%
	Возврат ПолучитьСтавкуНДС(Перечисления.СтавкиНДС.НДС18);
	
	ДатаДокумента=ТекущаяДата();
	 Отказ = Ложь;

	Если ЗначениеЗаполнено(Организация) Тогда
		УП = ПолучитьПараметрыУчетнойПолитикиНалоговыйУчет(ДатаДокумента, Отказ, Организация);
	  КонецЕсли;
	  Если Отказ Тогда
		  Результат ="";

	ИначеЕсли СтавкаНДС = ПредопределенноеЗНачение("Перечисление.СтавкиНДС.БезНДС") Тогда
		Результат = "";
		ИначеЕсли  ЗначениеЗаполнено(Организация) И УП.РозничнаяТорговляОблагаетсяЕНВД Тогда
	     Результат ="";

	Иначе
		Результат = ПолучитьСтавкуНДС(СтавкаНДС);
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции
