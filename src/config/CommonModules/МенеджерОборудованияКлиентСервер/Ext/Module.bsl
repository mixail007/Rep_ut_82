
Функция ПараметрыФискальногоНакопителяОбщие() Экспорт
	
	Параметры = Новый Структура();
	Параметры.Вставить("РегистрационныйНомерККТ");
	Параметры.Вставить("ОрганизацияНазвание");
	Параметры.Вставить("ОрганизацияИНН");
	Параметры.Вставить("АдресУстановкиККТ");
	Параметры.Вставить("КодыСистемыНалогообложения");
	Параметры.Вставить("ПризнакАвтономногоРежима"      , Ложь);
	Параметры.Вставить("ПризнакАвтоматическогоРежима"  , Ложь);
	Параметры.Вставить("НомерАвтоматаДляАвтоматическогоРежима");
	Параметры.Вставить("ПризнакШифрованиеДанных"       , Ложь);
	Параметры.Вставить("ПризнакРасчетовЗаУслуги"       , Ложь);
	Параметры.Вставить("ПризнакФормированияТолькоБСО"  , Ложь);
	Параметры.Вставить("ПризнакРасчетовТолькоВИнтернет", Ложь);
	Параметры.Вставить("ОрганизацияОФДИНН");
	Параметры.Вставить("ОрганизацияОФДНазвание");
	Возврат Параметры; 
	
КонецФункции

Функция ПараметрыРегистрацииККТ() Экспорт
	
	Параметры = ПараметрыФискальногоНакопителяОбщие();
	Параметры.Вставить("ЗаводскойНомерККТ");
	Параметры.Вставить("ПризнакФискализации");
	Параметры.Вставить("ЗаводскойНомерФН");
	Параметры.Вставить("НомерДокументаФискализации");
	Параметры.Вставить("ДатаВремяФискализации");
	Параметры.Вставить("ВерсияФФДККТ");
	Параметры.Вставить("ВерсияФФДФН");

	Возврат Параметры; 
	
КонецФункции

Функция ПараметрыСостоянияККТ() Экспорт;
	
	Параметры = Новый Структура();
	Параметры.Вставить("КоличествоНепереданныхФД"   , Неопределено); 
	Параметры.Вставить("НомерПервогоНепереданногоФД", Неопределено); 
	Параметры.Вставить("ДатаПервогоНепереданногоФД ", Неопределено); 
	
	Возврат Параметры; 
	
КонецФункции

Функция ПараметрыОперацииФискализацииЧека() Экспорт;
	
	ПараметрыЧека = Новый Структура();
	// Общие реквизиты для всех типов оборудования.
	ПараметрыЧека.Вставить("ДокументОснование"  , Неопределено);
	ПараметрыЧека.Вставить("ТипРасчета"         , ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств"));
	ПараметрыЧека.Вставить("Кассир"             , Неопределено); // Должность и фамилия лица, осуществившего расчет с покупателем (клиентом), оформившего кассовый чек.
	ПараметрыЧека.Вставить("КассирИНН"          , Неопределено); // Идентификационный номер налогоплательщика кассира, при наличии.
	ПараметрыЧека.Вставить("Электронно"         , Ложь); // Чек будет предоставлен в элетронной форме, без печати.
	
	ПараметрыЧека.Вставить("Отправляет1СSMS"   , Ложь); // SMS отправляет средствами 1C.
	ПараметрыЧека.Вставить("Отправляет1СEmail" , Ложь); // Email отправляет средствами 1C. 
	
	ПараметрыЧека.Вставить("ОрганизацияНазвание" , Неопределено);
	ПараметрыЧека.Вставить("ОрганизацияИНН"      , Неопределено); // ИНН организации (Для чека ЕНВД)
	ПараметрыЧека.Вставить("ОрганизацияКПП"      , Неопределено); // Название организации (Для чека ЕНВД)
	ПараметрыЧека.Вставить("АдресМагазина"       , Неопределено); // Адрес магазина (Для чека ЕНВД)
	ПараметрыЧека.Вставить("НаименованиеМагазина", Неопределено); // Наименование магазина
	// Признак агента - "Перечисление.ПризнакиАгента", (ФФД, Тег 1057, Расшифровка - таблица 10)
	ПараметрыЧека.Вставить("ПризнакАгента"     , Неопределено); // Перечисление - Признак агента (Тег 1057).
	ПараметрыЧека.Вставить("ДанныеАгента"      , ПараметрыДанныеАгента());     // Структура,Заполнение необязательно - Данные агента.
	ПараметрыЧека.Вставить("ДанныеПоставщика"  , ПараметрыДанныеПоставщика()); // Структура,Заполнение необязательно - Данные поставщика.
	// Параметры необходимые для ФР
	ПараметрыЧека.Вставить("СерийныйНомер"      , Неопределено); // Заводской номер ККМ
	// Параметры необходимые для чека ЕНВД на принтере чеков
	ПараметрыЧека.Вставить("НомерКассы"         , Неопределено);
	ПараметрыЧека.Вставить("НомерЧека"          , Неопределено);
	ПараметрыЧека.Вставить("НомерСмены"         , Неопределено);
	ПараметрыЧека.Вставить("ДатаВремя"          , ТекущаяДата());
	ПараметрыЧека.Вставить("ТекстШапки"         , НСтр("ru='ДОБРО ПОЖАЛОВАТЬ!'"));
	ПараметрыЧека.Вставить("ТекстПодвала"       , НСтр("ru='СПАСИБО ЗА ПОКУПКУ!'"));
	// Параметры для ККТ по ФЗ-54
	ПараметрыЧека.Вставить("КодСистемыНалогообложения", Неопределено);  
	ПараметрыЧека.Вставить("ОтправительEmail"         , Неопределено);
	ПараметрыЧека.Вставить("ПокупательEmail"          , Неопределено);
	ПараметрыЧека.Вставить("ПокупательНомер"          , Неопределено);
	ПараметрыЧека.Вставить("ВознагражденияАгента"     , Неопределено); // AgentCompensation
	ПараметрыЧека.Вставить("ТелефонПлатежногоАгента"  , Неопределено); // AgentPhone 
	ПараметрыЧека.Вставить("ТелефонОператораПоПриемуПлатежей", Неопределено); // ReceivePaymentsOperatorPhone
	ПараметрыЧека.Вставить("ТелефонОператораПеревода"        , Неопределено); // MoneyTransferOperatorPhone
	ПараметрыЧека.Вставить("ТелефонПоставщика"               , Неопределено);
	ПараметрыЧека.Вставить("АдресОператораПеревода"          , Неопределено); // MoneyTransferOperatorAddress
	ПараметрыЧека.Вставить("ИННОператораПеревода"            , Неопределено); // MoneyTransferOperatorVATIN
	ПараметрыЧека.Вставить("НаименованиеОператораПеревода"   , Неопределено); // MoneyTransferOperatorName
	ПараметрыЧека.Вставить("ОперацияПлатежногоАгента"        , Неопределено);
	ПараметрыЧека.Вставить("ТелефонБанковскогоАгента"        , Неопределено); // BankAgentPhone
	ПараметрыЧека.Вставить("ТелефонБанковскогоСубагента"     , Неопределено); // BankSubagentPhone
	ПараметрыЧека.Вставить("ОперацияБанковскогоАгента"       , Неопределено); // BankAgentOperation
	ПараметрыЧека.Вставить("ОперацияБанковскогоСубагента"    , Неопределено); // BankSubagentOperation
	ПараметрыЧека.Вставить("ВознагражденияБанковскогоАгента" , Неопределено); // BankAgentCompensation
	// Позиции чека для фискализации
	ПараметрыЧека.Вставить("ПозицииЧека"  , Новый Массив()); // Массив элементов "Структура"
	ПараметрыЧека.Вставить("ТаблицаОплат" , Новый Массив()); // Массив элементов "Структура"
	
	Возврат ПараметрыЧека; 
	
КонецФункции

Функция ПараметрыФискальнойСтрокиЧека() Экспорт;
	
	ПараметрыСтроки = Новый Структура();
	ПараметрыСтроки.Вставить("ФискальнаяСтрока"); 
	// Обязательные поля
	ПараметрыСтроки.Вставить("Наименование");    // Наименовнование предмета расчета
	ПараметрыСтроки.Вставить("Количество"  , 0); // Количество предмета расчета 
	ПараметрыСтроки.Вставить("Цена"        , 0); // Цена без учета скидок и наценок
	ПараметрыСтроки.Вставить("ЦенаСоСкидками" , 0);  // Обязательно, Цена с учетом скидок и наценок (Необходимо начиная с ФФД 1.0.5 и выше)
	ПараметрыСтроки.Вставить("Сумма"       , 0); // Cтоимость предмета расчета с учетом скидок и наценок
	ПараметрыСтроки.Вставить("СуммаСкидок");         // Необязательно, Сумма скидок и наценок, не входит в ФФД.
	ПараметрыСтроки.Вставить("НомерСекции" , 0); // Номер cекции ФР (для совместимости)
	ПараметрыСтроки.Вставить("СтавкаНДС"   , 0); // Cтавка НДС в %
	ПараметрыСтроки.Вставить("СуммаНДС");            // Необязательно, Сумма НДС
	ПараметрыСтроки.Вставить("Штрихкод");        // Штрихкод
	

	//// Дополнительные реквизиты начиная с ФФД 1.1
	ПараметрыСтроки.Вставить("КодПризнакаСпособаРасчета");  // Код признака способа расчета (Таблица 25 документа ФФД)
	ПараметрыСтроки.Вставить("КодПризнакаПредметаРасчета"); // Код признака предмета расчета   (Таблица 25 документа ФФД)
	ПараметрыСтроки.Вставить("ЕдиницаИзмеренияПредметаРасчета"); // Код признака предмета расчета 
	ПараметрыСтроки.Вставить("КодТоварнойНоменклатуры");    // Код товарной номенклатуры
	
	//Добавил 20181226 Груздев. На будущее... из УТ 10.3
	// Реквизиты начиная с ФФД 1.0.5
	// Перечисление - ПризнакиСпособаРасчета - (ФФД, Тег 1214, Расшифровка - таблица 28)
	ПараметрыСтроки.Вставить("ПризнакСпособаРасчета", Неопределено); // Признак способа расчета. Обязательно для ФФД 1.0.5 и выше.
	                                         
	// Реквизиты начиная с ФФД 1.1
	// Перечисление - ПризнакиПредметаРасчета - (ФФД, Тег 1030, Расшифровка - таблица 29)
	ПараметрыСтроки.Вставить("ПризнакПредметаРасчета", Неопределено); // Признак предмета расчета. Обязательно для ФФД 1.1 и выше.
	
	// Перечисление - ПризнакиАгента - (ФФД, Тег 1222, Расшифровка - таблица 21)
	ПараметрыСтроки.Вставить("ПризнакАгентаПоПредметуРасчета");  // Необязательно, Признак агента по предмету расчета, Тег 1222.
	ПараметрыСтроки.Вставить("ДанныеАгента"     , ПараметрыДанныеАгента());     // Структура - Данные агента, Тег 1223. Заполение необязательно.
	ПараметрыСтроки.Вставить("ДанныеПоставщика" , ПараметрыДанныеПоставщика()); // Структура - Данные поставщика, Тег 1224. Заполение необязательно.
	
	ПараметрыСтроки.Вставить("ЕдиницаИзмерения");         // Необязательно, Единица измерения предмета расчета. 
	ПараметрыСтроки.Вставить("КодТоварнойНоменклатуры");  // Необязательно, Код товарной номенклатуры.
	
	// Реквизиты начиная с ФФД 1.1 (Введены приказом от 9 апреля 2018 г. N ММВ-7-20/207@)
	ПараметрыСтроки.Вставить("КодСтраныПроисхожденияТовара"); // Строка,Необязательно - Цифровой код страны происхождения товара в соответствии с Общероссийским классификатором стран мира.
	ПараметрыСтроки.Вставить("НомерТаможеннойДекларации");    // Строка,Необязательно - Регистрационный номер таможенной декларации.
	ПараметрыСтроки.Вставить("СуммаАкциза");                  // Число,Необязательно  - Cумма акциза, включенная в стоимость предмета расчета.
	
	
	Возврат ПараметрыСтроки; 
	
КонецФункции


Функция ПараметрыДанныеАгента() Экспорт
	
	// ФФД - Значения реквизита «данные агента» (тег 1223) указаны в таблице 22.
	Параметры = Новый Структура();
	
	ПлатежныйАгент = Новый Структура();
	ПлатежныйАгент.Вставить("Операция", Неопределено);  // Строка - Операция платежного агента.
	ПлатежныйАгент.Вставить("Телефон" , Неопределено);  // Строка - Телефон платежного агента.
	Параметры.Вставить("ПлатежныйАгент", ПлатежныйАгент);
	
	ОператорПеревода = Новый Структура();
	ОператорПеревода.Вставить("Телефон"     , Неопределено); // Строка - Телефон оператора перевода.
	ОператорПеревода.Вставить("Наименование", Неопределено); // Строка - Наименование оператора перевода.
	ОператорПеревода.Вставить("Адрес"       , Неопределено); // Строка - Адрес оператора перевода.
	ОператорПеревода.Вставить("ИНН"         , Неопределено); // Строка - ИНН оператора перевода.
	Параметры.Вставить("ОператорПеревода", ОператорПеревода);
	
	ОператорПоПриемуПлатежей = Новый Структура();
	ОператорПоПриемуПлатежей.Вставить("Телефон", Неопределено); // Строка - Телефон оператора по приему платежей.
	Параметры.Вставить("ОператорПоПриемуПлатежей", ОператорПоПриемуПлатежей);
	
	Возврат Параметры; 
	
КонецФункции

Функция ПараметрыДанныеПоставщика() Экспорт
	
	Параметры = Новый Структура();
	Параметры.Вставить("Телефон");      // Строка - Телефон поставщика.
	Параметры.Вставить("Наименование"); // Строка - Наименование поставщика.
	Параметры.Вставить("ИНН");          // Строка - ИНН поставщика.
	Возврат Параметры; 
	
КонецФункции



Функция ПолучитьКодТипаРасчетаДенежнымиСредствами(ТипРасчета) Экспорт
	
	Если ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств") Тогда
		ПризнакРасчетаКод = 1 
	ИначеЕсли ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств") Тогда
		ПризнакРасчетаКод = 2 
	ИначеЕсли ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.РасходДенежныхСредств") Тогда
		ПризнакРасчетаКод = 3
	Иначе
		ПризнакРасчетаКод = 4
	КонецЕсли;
	
	Возврат ПризнакРасчетаКод;
	
КонецФункции

Функция ПолучитьКодПризнакаАгента(ПризнакАгента) Экспорт
	
	Если ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.БанковскийПлатежныйАгент") Тогда
		ПризнакАгентаКод = 0 
	ИначеЕсли ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.БанковскийПлатежныйСубагент") Тогда
		ПризнакАгентаКод = 1 
	ИначеЕсли ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.ПлатежныйАгент") Тогда
		ПризнакАгентаКод = 2
	ИначеЕсли ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.ПлатежныйСубагент") Тогда
		ПризнакАгентаКод = 3 
	ИначеЕсли ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.Поверенный") Тогда
		ПризнакАгентаКод = 4
	ИначеЕсли ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.Комиссионер") Тогда
		ПризнакАгентаКод = 5 
	ИначеЕсли ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.Агент") Тогда
		ПризнакАгентаКод = 6
	КонецЕсли;
	
	Возврат ПризнакАгентаКод;
	
КонецФункции

Функция ПолучитьКодПризнакаСпособаРасчета(ПризнакСпособаРасчета) Экспорт
	
	Если ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПредоплатаПолная") Тогда
		ПризнакСпособаРасчетаКод = 1 
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПредоплатаЧастичная") Тогда
		ПризнакСпособаРасчетаКод = 2 
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс") Тогда
		ПризнакСпособаРасчетаКод = 3
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой") Тогда
		ПризнакСпособаРасчетаКод = 4 
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой") Тогда
		ПризнакСпособаРасчетаКод = 5
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаБезОплаты") Тогда
		ПризнакСпособаРасчетаКод = 6 
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ОплатаКредита") Тогда
		ПризнакСпособаРасчетаКод = 7
	КонецЕсли;
	
	Возврат ПризнакСпособаРасчетаКод;
	
КонецФункции

Функция ПолучитьПризнакСпособаРасчетаДляПечати(ПризнакСпособаРасчета) Экспорт
	
	Если ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПредоплатаПолная") Тогда
		ПризнакСпособаРасчетаДляПечати = "[ПрОп100]"   
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПредоплатаЧастичная") Тогда
		ПризнакСпособаРасчетаДляПечати = "[ПрОпл]"
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.Аванс") Тогда
		ПризнакСпособаРасчетаДляПечати = "[Аванс]"
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой") Тогда
		ПризнакСпособаРасчетаДляПечати = "[ПОпл]"
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой") Тогда
		ПризнакСпособаРасчетаДляПечати = "[ЧОпл]"
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ПередачаБезОплаты") Тогда
		ПризнакСпособаРасчетаДляПечати = "[БезОп]" 
	ИначеЕсли ПризнакСпособаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиСпособаРасчета.ОплатаКредита") Тогда
		ПризнакСпособаРасчетаДляПечати = "[Кред]"
	КонецЕсли;
	
	Возврат ПризнакСпособаРасчетаДляПечати;
	
КонецФункции

Функция ПолучитьКодПризнакаПредметаРасчета(ПризнакПредметаРасчета) Экспорт
	
	Если ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.Товар") Тогда
		ПризнакПредметаРасчетаКод = 1 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.ПодакцизныйТовар") Тогда
		ПризнакПредметаРасчетаКод = 2 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.Работа") Тогда
		ПризнакПредметаРасчетаКод = 3 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.Услуга") Тогда
		ПризнакПредметаРасчетаКод = 4 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.СтавкаАзартнойИгры") Тогда
		ПризнакПредметаРасчетаКод = 5 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.ВыигрышАзартнойИгры") Тогда
		ПризнакПредметаРасчетаКод = 6 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.ЛотерейныйБилет") Тогда
		ПризнакПредметаРасчетаКод = 7 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.ВыигрышЛотереи") Тогда
		ПризнакПредметаРасчетаКод = 8 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.ПредоставлениеРИД") Тогда
		ПризнакПредметаРасчетаКод = 9 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.ПлатежВыплата") Тогда
		ПризнакПредметаРасчетаКод = 10 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.АгентскоеВознаграждение") Тогда
		ПризнакПредметаРасчетаКод = 11 
	ИначеЕсли ПризнакПредметаРасчета = ПредопределенноеЗначение("Перечисление.ПризнакиПредметаРасчета.СоставнойПредметРасчета") Тогда
		ПризнакПредметаРасчетаКод = 12 
	Иначе
	   ПризнакПредметаРасчетаКод = 13
	КонецЕсли;
	
	Возврат ПризнакПредметаРасчетаКод;
	
КонецФункции

// Добавленные
Функция КодСистемыНалогообложения(Организация=Неопределено, ДатаДокумента = Неопределено,ЕстьУслуги=Ложь, ПриоритетныйПорядок = Неопределено) Экспорт
	//13.07.17 всегда ОСН
	возврат 0;
	
	Если ДатаДокумента = Неопределено Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	Отказ = Ложь;
	УП = ПолучитьПараметрыУчетнойПолитикиНалоговыйУчет(ДатаДокумента, Отказ, Организация);
	Если Отказ Тогда
//		Результат = -1;

   		Результат = 3;

	ИначеЕсли УП.РозничнаяТорговляОблагаетсяЕНВД Тогда    
		Результат = 3;
	ИначеЕсли УП.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая Тогда
		Если ЕстьУслуги Тогда 
			Результат = 3;
				Иначе
			Результат = 0;
		КонецЕсли;
	ИначеЕсли УП.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная Тогда
		Если УП.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
			Результат = 1;
		ИначеЕсли УП.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
			Результат = 2;
		Иначе
			Результат = -1;
		КонецЕсли;
	Иначе
		Результат = -1;
	КонецЕсли;
		
	Возврат Результат;

КонецФункции

Функция ПолучитьСтавкуНДСДляФискализацииЧека(СтавкаНДС,Организация=Неопределено) Экспорт
	ДатаДокумента=ТекущаяДата();
	//13.07.17 всегда 18%   +++ 28.12.2018 >> 20%
	//Возврат ПолучитьСтавкуНДС(Перечисления.СтавкиНДС.НДС18);
	Возврат ПолучитьСтавкуНДС(СтавкаНДСнаДату(ДатаДокумента));
	
	 Отказ = Ложь;

	Если ЗначениеЗаполнено(Организация) Тогда
		УП = ПолучитьПараметрыУчетнойПолитикиНалоговыйУчет(ДатаДокумента, Отказ, Организация);
	  КонецЕсли;
	  Если Отказ Тогда
		  Результат ="";

	ИначеЕсли СтавкаНДС = ПредопределенноеЗНачение("Перечисление.СтавкиНДС.БезНДС") Тогда
		Результат = "";
		ИначеЕсли  ЗначениеЗаполнено(Организация) И УП.РозничнаяТорговляОблагаетсяЕНВД Тогда
	     Результат ="";

	Иначе
		Результат = ПолучитьСтавкуНДС(СтавкаНДС);
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

//Функция ПараметрыНормализуемыхФискальныхДанных() Экспорт
//	
//	СтруктураРезультат = ПараметрыСостоянияККТ();
//	
//	СтруктураРезультат.Вставить("ДатаСменыККТ");
//	СтруктураРезультат.Вставить("НомерСменыККТ");
//	СтруктураРезультат.Вставить("КоличествоЧеков");
//	СтруктураРезультат.Вставить("КоличествоФД");
//	СтруктураРезультат.Вставить("ПревышеноВремяОжиданияОтветаОФД");
//	СтруктураРезультат.Вставить("НеобходимаСтрочнаяЗаменаФН");
//	СтруктураРезультат.Вставить("ПамятьФНПереполнена");
//	СтруктураРезультат.Вставить("РесурсФНИсчерпан");
//	
//	Возврат СтруктураРезультат;
//	
//КонецФункции


Функция ПараметрыНормализуемыхФискальныхДанных() Экспорт
	
	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("ДатаСменыККТ"   , Неопределено);
	СтруктураРезультат.Вставить("НомерСменыККТ"  , Неопределено);
	СтруктураРезультат.Вставить("КоличествоЧеков", Неопределено); // Количество кассовых чеков за смену (NumberOfChecks).
	СтруктураРезультат.Вставить("КоличествоФД"   , Неопределено); // Количество общее ФД за смену (NumberOfDocuments).
	
	СтруктураРезультат.Вставить("КоличествоНепереданныхФД"   , Неопределено); // Количество непереданных документов (BacklogDocumentsCounter).
	СтруктураРезультат.Вставить("НомерПервогоНепереданногоФД", Неопределено); // Номер первого непереданного документа (BacklogDocumentFirstNumber). 
	СтруктураРезультат.Вставить("ДатаПервогоНепереданногоФД ", Неопределено); // Дата и время первого из непереданных документов (BacklogDocumentFirstDateTime).

	СтруктураРезультат.Вставить("ПревышеноВремяОжиданияОтветаОФД");// OFDTimeout  
	СтруктураРезультат.Вставить("НеобходимаСтрочнаяЗаменаФН");     // Признак необходимости срочной замены ФН (UrgentReplacementFN).
	СтруктураРезультат.Вставить("ПамятьФНПереполнена");            // Признак переполнения памяти ФН (MemoryOverflowFN).
	СтруктураРезультат.Вставить("РесурсФНИсчерпан");               // Признак исчерпания ресурса ФН (ResourcesExhaustionFN).
	
	Возврат СтруктураРезультат;
	
КонецФункции




