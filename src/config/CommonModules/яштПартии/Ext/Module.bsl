Функция ПолучитьСписокДопРасходов(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Документ", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеДопРасходовТовары.Ссылка КАК ссылка
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|ГДЕ
	|	ПоступлениеДопРасходовТовары.ДокументПартии = &Документ
	|	И ПоступлениеДопРасходовТовары.Ссылка.Проведен = ИСТИНА";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Процедура ПерераспределитьДопЗатраты(CсылкаПартии = Неопределено, СсылкаДопЗатрат, КоличествоИзПартии = Ложь) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Запрос.Ссылка,
	|	Запрос.Номенклатура,
	|	Запрос.Количество,
	|	Запрос.СтоимостьЕдиницы,
	|	Запрос.Сумма,
	|	Запрос.ДокументПартии КАК ДокументПартии,
	|	Запрос.НоменклатураПартии,
	|	Запрос.КоличествоПартии,
	|	Запрос.СтоимостьЕдиницыПартии,
	|	Запрос.СуммаПартии
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновнойЗапрос.Ссылка КАК Ссылка,
	|		ОсновнойЗапрос.Номенклатура КАК Номенклатура,
	|		СУММА(ОсновнойЗапрос.Количество) КАК Количество,
	|		СУММА(ОсновнойЗапрос.СтоимостьЕдиницы) КАК СтоимостьЕдиницы,
	|		СУММА(ОсновнойЗапрос.Сумма) КАК Сумма,
	|		ОсновнойЗапрос.ДокументПартии КАК ДокументПартии,
	|		ОсновнойЗапрос.НоменклатураПартии КАК НоменклатураПартии,
	|		СУММА(ОсновнойЗапрос.КоличествоПартии) КАК КоличествоПартии,
	|		СУММА(ОсновнойЗапрос.СтоимостьЕдиницыПартии) КАК СтоимостьЕдиницыПартии,
	|		СУММА(ОсновнойЗапрос.СуммаПартии) КАК СуммаПартии
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПоступлениеДопРасходовТовары.Ссылка КАК Ссылка,
	|			ПоступлениеДопРасходовТовары.ДокументПартии КАК ДокументПартии,
	|			ПоступлениеДопРасходовТовары.СуммаТовара КАК Сумма,
	|			ПоступлениеДопРасходовТовары.Количество КАК Количество,
	|			ПоступлениеДопРасходовТовары.Номенклатура КАК Номенклатура,
	|			ВЫРАЗИТЬ(ПоступлениеДопРасходовТовары.СуммаТовара / ПоступлениеДопРасходовТовары.Количество КАК ЧИСЛО(15, 2)) КАК СтоимостьЕдиницы,
	|			ЕСТЬNULL(ПоступлениеТоваровУслуг.Количество, 0) КАК КоличествоПартии,
	|			ЕСТЬNULL(ПоступлениеТоваровУслуг.Цена, 0) КАК СтоимостьЕдиницыПартии,
	|			ЕСТЬNULL(ПоступлениеТоваровУслуг.Сумма, 0) КАК СуммаПартии,
	|			ПоступлениеТоваровУслуг.Номенклатура КАК НоменклатураПартии
	|		ИЗ
	|			Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|					ПоступлениеТоваровУслуг.Количество КАК Количество,
	|					ПоступлениеТоваровУслуг.Цена КАК Цена,
	|					ПоступлениеТоваровУслуг.Сумма КАК Сумма,
	|					ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура
	|				ИЗ
	|					Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг) КАК ПоступлениеТоваровУслуг
	|				ПО ПоступлениеДопРасходовТовары.ДокументПартии = ПоступлениеТоваровУслуг.Ссылка
	|					И ПоступлениеДопРасходовТовары.Номенклатура = ПоступлениеТоваровУслуг.Номенклатура
	|		ГДЕ
	|			ПоступлениеДопРасходовТовары.ДокументПартии ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			И ПоступлениеДопРасходовТовары.Ссылка = &Ссылка) КАК ОсновнойЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОсновнойЗапрос.Ссылка,
	|		ОсновнойЗапрос.Номенклатура,
	|		ОсновнойЗапрос.ДокументПартии,
	|		ОсновнойЗапрос.НоменклатураПартии) КАК Запрос
	|ГДЕ
	|	Запрос.СтоимостьЕдиницыПартии <> Запрос.СтоимостьЕдиницы
	|	" + ?(КоличествоИзПартии, "ИЛИ Запрос.Количество <> Запрос.КоличествоПартии", "") + "	
	|ИТОГИ ПО
	|	ДокументПартии";
		
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаДопЗатрат);
	
	ВыборкаПоПартии = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	Если ВыборкаПоПартии.Количество() > 0 Тогда
		
		ОбъектДопЗатрат = СсылкаДопЗатрат.ПолучитьОбъект();
		
		Пока ВыборкаПоПартии.Следующий() Цикл
			
			Сообщить("Обработка " + Строка(СсылкаДопЗатрат) + " по партии " + Строка(ВыборкаПоПартии.ДокументПартии) + ":", СтатусСообщения.Информация);
			
			ВыборкаСтрокДока = ВыборкаПоПартии.Выбрать();
			
			Пока ВыборкаСтрокДока.Следующий() Цикл
				
				МассивСтрокДляУдаления = Новый Массив;
				МассивСтрокДляУдаления.Очистить();
				
				Для каждого СтрокаДока Из ОбъектДопЗатрат.Товары Цикл
					
					Если (СтрокаДока.ДокументПартии = ВыборкаСтрокДока.ДокументПартии)
						И (СтрокаДока.Номенклатура = ВыборкаСтрокДока.Номенклатура) Тогда
						
						
						Если (ВыборкаСтрокДока.КоличествоПартии = 0)
							И (ВыборкаСтрокДока.СтоимостьЕдиницыПартии = 0) Тогда
							
							МассивСтрокДляУдаления.Добавить(СтрокаДока);
							
						Иначе
							
							Если КоличествоИзПартии Тогда
								
								
								СтрокаДока.Количество = ВыборкаСтрокДока.КоличествоПартии; 
								
								
							КонецЕсли;
							
							СтрокаДока.СуммаТовара = СтрокаДока.Количество * ВыборкаСтрокДока.СтоимостьЕдиницыПартии;
							
							Сообщить("В строке №" + Строка(СтрокаДока.НомерСтроки) + " изменили позицию " + Строка(СтрокаДока.Номенклатура) + ": " + 
							?(КоличествоИзПартии, " Количество: " + Строка(СтрокаДока.Количество)+";", "") + " Сумма: " + Строка(СтрокаДока.СуммаТовара),
							СтатусСообщения.Важное);
							
						КонецЕсли; 
						
						
						
					КонецЕсли; 
					
					
				КонецЦикла; 
				
				Если МассивСтрокДляУдаления.Количество() > 0 Тогда
					
					Для каждого СтрокаУдаления Из МассивСтрокДляУдаления Цикл
						
						Сообщить("Удаляем строку №" + Строка(СтрокаУдаления.НомерСтроки) + " (" + Строка(СтрокаУдаления.Номенклатура) + ") т.к. она отсутствует в документе партии!", СтатусСообщения.ОченьВажное);
						ОбъектДопЗатрат.Товары.Удалить(СтрокаУдаления);
						
					КонецЦикла; 	
					
					
				КонецЕсли; 
				
			КонецЦикла;
			
		КонецЦикла;
		
		Попытка
			
			ОбъектДопЗатрат.Записать(РежимЗаписиДокумента.Проведение);
			
		Исключение
			
			Сообщить("Документ " + Строка(СсылкаДопЗатрат) + "Провести не удалось!!!", СтатусСообщения.Внимание);
			
		КонецПопытки; 
		
	Иначе
		
		Сообщить("По документу " + Строка(СсылкаДопЗатрат) + " расхождений по документу(ам) поступлений не обнаружено!!!", СтатусСообщения.Информация);
		
	КонецЕсли; 
	
	
КонецПроцедуры

Процедура СкорректироватьДопЗатраты(Ссылка) Экспорт 
	
	Запрос = новый Запрос("
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходовТовары.Ссылка,
	|	ПоступлениеДопРасходовТовары.ДокументПартии,
	|	СУММА(ПоступлениеДопРасходовТовары.СуммаТовара) КАК Сумма
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|ГДЕ
	|	ПоступлениеДопРасходовТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеДопРасходовТовары.Ссылка,
	|	ПоступлениеДопРасходовТовары.ДокументПартии");
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Выб = Запрос.Выполнить().Выбрать();
	
	Проводить = Ложь;
	
	Пока Выб.Следующий() Цикл
		
		СуммаДопРасходов 	= Выб.Сумма;
		
		Попытка 
			
			СуммаДокПартии		= Выб.ДокументПартии.Товары.Итог("Сумма");
			
		Исключение
			
			СуммаДокПартии		= Выб.ДокументПартии.СуммаДокумента;
			
		КонецПопытки;
		
		ДокументПартии		= Выб.ДокументПартии;
		
		Если (СуммаДопРасходов <> СуммаДокПартии) Тогда 
			// Восстанавливаем	
			Сообщить(Строка(Выб.Ссылка) + "    " + Строка(СуммаДопРасходов));
			Сообщить(Строка(Выб.ДокументПартии) + "      " + Строка(СуммаДокПартии));
			Проводить = Ложь;
			Объект = Выб.Ссылка.получитьОбъект();
			
			МассивУд = новый Массив;
			
			Для каждого стр из Объект.Товары Цикл
				
				Если (стр.ДокументПартии = ДокументПартии) Тогда
					// Удаляем строки соотв. нашему документу партии
					//Объект.Товары.Удалить(Объект.Товары.Индекс(Стр));
					МассивУд.Добавить(Стр);
					Проводить = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
			Для каждого Стр из МассивУд Цикл
				Объект.Товары.Удалить(Стр);
			КонецЦикла;
			
			Если (Проводить) Тогда
				
				Попытка 
					
					Объект.ЗаполнитьТоварыПоПоступлениюТоваров(ДокументПартии, Объект.Товары);
					
				Исключение
					;
				Конецпопытки;
				
				Объект.Записать(РежимЗаписиДокумента.Проведение);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


//***20150707 Регламентное задание
Процедура ПроведениеПартий() Экспорт
	
	//открывается период для редактирвоания
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Роли.Ссылка КАК Роль
				   |ИЗ
				   |	Перечисление.НаборПравПользователей КАК Роли";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	
	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПартионныйУчетГраницы.Период КАК Период,
		|	ПартионныйУчетГраницы.Регистратор,
		|	ПартионныйУчетГраницы.МоментВремени
		|ИЗ
		|	Последовательность.ПартионныйУчет.Границы КАК ПартионныйУчетГраницы
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";

	
	ВыборкаГраниц = Запрос.Выполнить().Выбрать();
	Если ВыборкаГраниц.Следующий() Тогда
		ГПт = ВыборкаГраниц.МоментВремени;
	Иначе
		ГПт = Новый МоментВремени('00010101');
	КонецЕсли;

    ДатаЗапрета = ДобавитьМесяц( НачалоДня(ГПт.Дата), -1); // - 1 месяц от Границы! 
	
	
	
	
	//+++ 23.06.2016
	//ДатаЗапрета = Началодня(НачалоДня(Последовательности.ПартионныйУчет.ПолучитьГраницу().Дата)-1);
    //ДатаЗапрета = ДобавитьМесяц( НачалоДня(Последовательности.ПартионныйУчет.ПолучитьГраницу().Дата), -1); // - 1 месяц от Границы! 
	//т.к. меняются еще и Заказы покупателей/поставщиков при проведении Реализаций/Поступлений!
		
	Набор = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьНаборЗаписей();
	Набор.Отбор.Организация.Установить(Справочники.Организации.ПустаяСсылка());
	Для Каждого СтрТЗ ИЗ Результат Цикл
		Запись = Набор.Добавить();
		Запись.Организация = Справочники.Организации.ПустаяСсылка();
		Запись.Роль        = СтрТЗ.Роль;  
		Запись.ГраницаЗапретаИзменений = ДатаЗапрета;
	КонецЦикла;
	Набор.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|Организации.Ссылка КАК Организация  	
	|Из Справочник.Организации КАК Организации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьНаборЗаписей();
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		Для Каждого СтрТЗ ИЗ Результат Цикл
			Запись = Набор.Добавить();
			Запись.Организация = Выборка.Организация;
			Запись.Роль = СтрТЗ.Роль;
			ДатаЗапрета = ДатаЗапрета;
			Запись.ГраницаЗапретаИзменений = ДатаЗапрета;
		КонецЦикла;
		Набор.Записать();
	КонецЦикла;
	
	ТекстСообщения = Новый ЗаписьТекста("D:\Общая папка\Проведение по партиям\Ошибки "+ СтрЗаменить(Строка(ТекущаяДата()), ":", "-") +".txt");	
	ТекстСообщения.ЗаписатьСтроку(" => Открыт период с "+ строка(ДатаЗапрета));
	
	ПараметрыСеанса.ПроведениеПоПартиямОшибкиРеглЗадания = ПараметрыСеанса.ПроведениеПоПартиямОшибкиРеглЗадания
											+ Строка(Формат(ТекущаяДата(), "ДФ=дд/ММ/гггг чч:мм:сс")) + ": "
											+ "Запущено автоматическое перепроведение по партиям c " + Строка(Последовательности.ПартионныйУчет.ПолучитьГраницу().Дата);
	
	
	ОбработкаПроведения = Обработки.ПроведениеПоПартиям.Создать();
	ОбработкаПроведения.ДатаКонцаОбработки = ТекущаяДата();
	ОбработкаПроведения.ВыполнитьВосстановление();
	
	ПараметрыСеанса.ПроведениеПоПартиямОшибкиРеглЗадания = ПараметрыСеанса.ПроведениеПоПартиямОшибкиРеглЗадания + " Выполнено";
	
	Если НЕ ПараметрыСеанса.ПроведениеПоПартиямДатаПервойОшибки = Дата(1,1,1) Тогда
		ПараметрыСеанса.ПроведениеПоПартиямОшибкиРеглЗадания = ПараметрыСеанса.ПроведениеПоПартиямОшибкиРеглЗадания + " Дата актуальности установлена на " + Строка(ПараметрыСеанса.ПроведениеПоПартиямДатаПервойОшибки);
	КонецЕсли;
	
	ТекстСообщения.ЗаписатьСтроку(ПараметрыСеанса.ПроведениеПоПартиямОшибкиРеглЗадания);
	
	//устанавливаются стандартные настройки границы запрета изменения данных
	УстановкаГраницыЗапретаИзмененияДанных(); 
	
	//+++ -14 дней для обычных пользователей и не более чем на 20 дней для Полных прав...
	ДатаЗапрета = НачалоДня(ТекущаяДата() - 14*86400);
	ТекстСообщения.ЗаписатьСтроку(" <- Закрыт период по "+ строка(ДатаЗапрета));
	
	ТекстСообщения.Закрыть();
	
КонецПроцедуры


Процедура ПроведениеПоследовательностиЗаказыПоставщикамСезонные() Экспорт
	
////открывается период для редактирвоания (для Всех ролей по всем организациям)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Роли.Ссылка КАК Роль
				   |ИЗ
				   |	Перечисление.НаборПравПользователей КАК Роли";
	Результат = Запрос.Выполнить().Выгрузить();
	
	
//+++ 23.06.2016 прочитать границы запрета - как было по всем организациям для 1 роли------------
	  запрос0 = новый запрос("ВЫБРАТЬ * ИЗ РегистрСведений.ГраницыЗапретаИзмененияДанных КАК Границы");
	  табл0 = запрос0.Выполнить().Выгрузить();
	  
	  
//сдигаем дату запрета на день раньше границы
ДатаЗапрета = НачалоДня(Последовательности.ЗаказыПоставщикамСезонные.ПолучитьГраницу().Дата)-1;
//---------------- Установка новой границы (Открываем период по ЯШТ)-------------------------------	  
	Набор = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьНаборЗаписей();
	Набор.Отбор.Организация.Установить(Справочники.Организации.ПустаяСсылка());
	Для Каждого СтрТЗ ИЗ Результат Цикл
		Запись = Набор.Добавить();
		Запись.Организация = Справочники.Организации.ПустаяСсылка();
		Запись.Роль = СтрТЗ.Роль;  
		Запись.ГраницаЗапретаИзменений = ДатаЗапрета;
	КонецЦикла;
	Набор.Записать();
	

//---------установка новой границы для всех организаций???---------------------
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|Организации.Ссылка КАК Организация  	
	|Из Справочник.Организации КАК Организации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Набор = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьНаборЗаписей();
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		Для Каждого СтрТЗ ИЗ Результат Цикл
			Запись = Набор.Добавить();
			Запись.Организация = Выборка.Организация;
			Запись.Роль = СтрТЗ.Роль;
			ДатаЗапрета = ДатаЗапрета;
			Запись.ГраницаЗапретаИзменений = ДатаЗапрета;
		КонецЦикла;
		Набор.Записать();

	КонецЦикла;
	
	//выполняется восстановление последовательности
	попытка
		Последовательности.ЗаказыПоставщикамСезонные.Восстановить();
	исключение
	конецПопытки;
	
	////устанавливаются стандартные настройки границы запрета изменения данных
	//УстановкаГраницыЗапретаИзмененияДанных();
	  	
	//+++( 23.06.2016 восстанавливаем как было
	для каждого стр0 из Табл0 цикл
		Стр1 = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьМенеджерЗаписи();
    	ЗаполнитьЗначенияСвойств( стр1, стр0 ); 
		Стр1.Записать();
   	КонецЦикла;
	//+++)
	
	
КонецПроцедуры


Процедура УстановкаГраницыЗапретаИзмененияДанных() Экспорт

	//Для полных прав: если 20 число месяца не наступило, то открыт предыдущий месяц полностью
	//иначе - конец предыдущего месяца
	
	//Для остальных ролей: -14 дней
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Роли.Ссылка КАК Роль
	               |ИЗ
	               |	Перечисление.НаборПравПользователей КАК Роли";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Набор = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьНаборЗаписей();
	Набор.Отбор.Организация.Установить(Справочники.Организации.ПустаяСсылка());
	Для Каждого СтрТЗ ИЗ Результат Цикл
		Запись = Набор.Добавить();
		Запись.Организация = Справочники.Организации.ПустаяСсылка();
		Запись.Роль = СтрТЗ.Роль;
		Если СтрТЗ.Роль = Перечисления.НаборПравПользователей.ПолныеПрава Тогда
			Если День(ТекущаяДата()) < 20 Тогда
				ДатаЗапрета = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1));
			Иначе
				ДатаЗапрета = НачалоМесяца(ТекущаяДата()) - 1;
			КонецЕсли;
		Иначе
			ДатаЗапрета = НачалоДня(ТекущаяДата() - 14*86400);  //14 дней
		КонецЕсли;
		Запись.ГраницаЗапретаИзменений = ДатаЗапрета;
	КонецЦикла;
	Набор.Записать();
	
	//И по организациям тоже
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|Организации.Ссылка КАК Организация  	
	|Из Справочник.Организации КАК Организации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьНаборЗаписей();
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		Для Каждого СтрТЗ ИЗ Результат Цикл
			Запись = Набор.Добавить();
			Запись.Организация = Выборка.Организация;
			Запись.Роль = СтрТЗ.Роль;
			Если СтрТЗ.Роль = Перечисления.НаборПравПользователей.ПолныеПрава Тогда
				Если День(ТекущаяДата()) < 20 Тогда
					ДатаЗапрета = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1));
				Иначе
					ДатаЗапрета = НачалоМесяца(ТекущаяДата()) - 1;
				КонецЕсли;
			Иначе
		 		ДатаЗапрета = НачалоДня(ТекущаяДата() - 14*86400);  //14 дней
			КонецЕсли;
			Запись.ГраницаЗапретаИзменений = ДатаЗапрета;
		КонецЦикла;
		Набор.Записать();
	КонецЦикла;
	
КонецПроцедуры

