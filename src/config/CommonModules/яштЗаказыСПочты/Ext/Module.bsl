
//26.04.2018
//ОБЩАЯ ФУНКЦИЯ загрузки файлов с почты
//- загружает письма с почты: имяПочтЯщика 
//	за период [МинДатаОтправления - МаксДатаОтправления]
//	все вложения (application) - пишет в папку:  Путь (если пустая, то КаталогВременныхФайлов )
//  фильтр по строке ОтправителиПисьма, если "" тогда ото всех!
// УдалятьСообщенияССервера  - удалять письма посде загрузки или нет...
//
//возвращает: списокФайлов
//
функция ПолучитьФайлыСПочты(имяПочтЯщика="", Путь="", ОтправителиПисьма="", УдалятьСообщенияССервера = ЛОЖЬ, МинДатаОтправления=неопределено, МаксДатаОтправления=неопределено) Экспорт
	списокФайлов = Новый СписокЗначений;

	имяПочтЯщика = ?(имяПочтЯщика="", "1C@yst.ru", имяПочтЯщика);   // "no-reply@yst76.ru" / "1C@yst.ru";
	Путь=?(Путь="",  КаталогВременныхФайлов(), Путь);
	МинДатаОтправления = ?(МинДатаОтправления=неопределено, НачалоДня(ТекущаяДата()), МинДатаОтправления);
	МаксДатаОтправления =?)МаксДатаОтправления=неопределено, КонецДня(ТекущаяДата()), МаксДатаОтправления);

	
	
//путь =  Константы.ПутьКФайлам.получить()+"\НовЛайн\";
//текстФайлаСодержит = "Остатки на ";

//------- 1) подключаемся к учетной записи почты: НовЛайнЯщикДляПрайсов-------------
УЗ = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию(имяПочтЯщика); 
	ИПП=Новый ИнтернетПочтовыйПрофиль;
	//----------для получения только POP3 ----------------
	ИПП.АдресСервераPOP3   = УЗ.POP3Сервер;
	ИПП.ПортPOP3           = УЗ.ПортPOP3;
	ИПП.Пользователь	   = УЗ.АдресЭлектроннойПочты;
	ИПП.Пароль			   = УЗ.Пароль;
	
	//+++ 22.09.2014 - так возможно...
	ИПП.АдресСервераIMAP = уз.POP3Сервер; 
	ИПП.ПортIMAP 		 = уз.ПортPOP3 ;
	ИПП.ПользовательIMAP = уз.Логин;
	ИПП.ПарольIMAP       = УЗ.Пароль;
	ИПП.ИспользоватьSSLIMAP = истина;
	
попытка
	Почта=Новый ИнтернетПочта;
	Почта.Подключиться(ИПП);
исключение
	#Если Клиент Тогда
		сообщить("Невозможно подключиться к почте: "+имяПочтЯщика+" : "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	#КонецЕсли	
	Возврат списокФайлов;
КонецПопытки;

//---------- 2) перебираем все письма из папки Входящие и ищем только с вложениями-------------
	//для этой цели объект Почта имеет метод "Выбрать". 
	//У метода два параметра: 
	//1-ый отвечает за УдалятьСообщенияССервера
	//2-ой массив с заголовками писем... пустой
	//
// Почта.Выбрать(<УдалятьСообщения>, <МассивЗаголовковСообщенийИлиИдентификаторов>) 

попытка
	Сообщения = Почта.Выбрать(УдалятьСообщенияССервера); // тип: массив из типов: ИнтернетПочтовоеСообщение 
исключение
	Почта.Отключиться();
	#Если Клиент Тогда
		сообщить("Невозможно получить письма с почты: "+имяПочтЯщика+" : "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	#КонецЕсли	
	Возврат списокФайлов;
КонецПопытки;

//----------------Главный Цикл-------------------------
//Далее после выборки сообщений необходимо перебрать их в Цикле и сохранить вложение, 
#Если Клиент Тогда
	сообщить(Строка(ТекущаяДата())+" Начало обработки "+строка(Сообщения.Количество())+" писем.", СтатусСообщения.Информация);
#КонецЕсли	

Для каждого Сообщение Из Сообщения Цикл
	
	//берем только сегодняшние письма!
	Если Сообщение.ДатаОтправления < МинДатаОтправления или Сообщение.ДатаОтправления>МаксДатаОтправления Тогда
	  Продолжить;
	КонецЕсли;	  

	Попытка
		ОтправительПисьма = Сообщение.Отправитель.Адрес;
	Исключение
		ОтправительПисьма = Сообщение.Отправитель;
	КонецПопытки;

	Если ОтправительПисьма<>"" тогда
		Если Найти(ОтправителиПисьма, ОтправительПисьма)=0 тогда
			#Если Клиент Тогда
				Сообщить("Не найден отправитель: "+ ОтправительПисьма + " в списке:  "+ОтправителиПисьма, СтатусСообщения.Важное);
			#КонецЕсли	
		продолжить;
		КонецЕсли;
	КонецЕсли;	

//ИнтернетПочтовоеСообщение
телоПисьма = " Тема: "+Сообщение.Тема +" (отправлено: "+Сообщение.ДатаОтправления+" >> получено: "+Сообщение.ДатаПолучения+")";

// Перебираем вложения письма
	Влож = "";  i=0;
	Для каждого Вложение Из Сообщение.Вложения Цикл     // ИнтернетПочтовоеВложение
		Попытка //возможна ошибка при записи 
			Если Найти(Вложение.ТипСодержимого, "application/")>0 Тогда    
				//"application/vnd.ms-excel" (XLS)  или "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" (XLSX)
			Вложение.Данные.Записать(путь+Вложение.ИмяФайла);
			
			//25.04.2018
			списокФайлов.Добавить(Вложение.ИмяФайла, ОтправительПисьма+телоПисьма+формат(i,"ЧН=' '") );  
			
			Влож=Влож+Вложение.ИмяФайла+", "; //Запоминаем имя вложения прикрепленных к данному письму
		    КонецЕсли;
		
		Исключение
		  Почта.Отключиться();
		  #Если Клиент Тогда
			  сообщить(телоПисьма+" : "+ОписаниеОшибки(), СтатусСообщения.Внимание);
			  сообщить("Невозможно сохранить файл вложения: "+путь+Вложение.ИмяФайла, СтатусСообщения.Внимание);
		  #КонецЕсли	
		  Возврат списокФайлов;
	    КонецПопытки;
	  
	 i=i+1;
	КонецЦикла;	
	
	#Если Клиент Тогда
    сообщить(телоПисьма+" : "+Влож, СтатусСообщения.Информация);
	#КонецЕсли

КонецЦикла;	//по письмам

возврат списокФайлов;
КонецФункции


 //ОСНОВНАЯ функция для регл.задания
 //загрузки файлов с почты, создание заказов покупателей и создание событий для Менеджера----------
процедура ЗагрузитьЗаказыСПочты() ЭКСПОРТ
рез = "";
имяПочтЯщика="support@yst.ru";
Путь="\\sigma\Общая папка\Файлы с почты\";	

ТаблНастроек = ПолучитьНастройкиЗагрузкиЗаказовИзExcel();

для каждого стр1 из ТаблНастроек цикл
	Если стр1.ОтправителиКлиента="" тогда 
		Продолжить;
	КонецЕсли;
путь1 = Путь  +стр1.КодКлиента+"\";	
стр1.списокФайлов = ПолучитьФайлыСПочты(имяПочтЯщика, путь1, стр1.ОтправителиКлиента ); 
рез1 = СоздатьЗаказыИзФайловExcel(стр1, путь1);
рез = рез + рез1;
КонецЦикла;

#Если Клиент тогда
	сообщить(рез);
#КонецЕсли
//рез - в лог файл! 
КонецПроцедуры

функция ПолучитьНастройкиЗагрузкиЗаказовИзExcel()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НастройкаЗагрузкиЗаказовИзExcel.Контрагент.Код как КодКлиента,
				   |	НастройкаЗагрузкиЗаказовИзExcel.Контрагент,
	               |	НастройкаЗагрузкиЗаказовИзExcel.Артикул,
	               |	НастройкаЗагрузкиЗаказовИзExcel.Количество,
	               |	НастройкаЗагрузкиЗаказовИзExcel.Цена,
	               |	НастройкаЗагрузкиЗаказовИзExcel.ПерваяСтрока,
	               |	НастройкаЗагрузкиЗаказовИзExcel.Брэнд,
	               |	НастройкаЗагрузкиЗаказовИзExcel.Код,
	               |	НастройкаЗагрузкиЗаказовИзExcel.КоличествоОтказ,
	               |	НастройкаЗагрузкиЗаказовИзExcel.ПричинаОтказа,
	               |	КонтактнаяИнформация.Представление как ОтправителиКлиента
	               |ИЗ
	               |	РегистрСведений.НастройкаЗагрузкиЗаказовИзExcel КАК НастройкаЗагрузкиЗаказовИзExcel
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			КИ.Объект КАК Контрагент,
	               |			КИ.Представление КАК Представление,
	               |			КИ.Комментарий КАК Комментарий
	               |		ИЗ
	               |			РегистрСведений.КонтактнаяИнформация КАК КИ
	               |		ГДЕ
	               |			ВЫРАЗИТЬ(КИ.Объект КАК Справочник.Контрагенты).Ссылка В
	               |					(ВЫБРАТЬ нн.Контрагент ИЗ РегистрСведений.НастройкаЗагрузкиЗаказовИзExcel КАК нн)
	               |			И КИ.Тип = &Тип
	               |			И КИ.Вид = &Вид) КАК КонтактнаяИнформация
	               |		ПО НастройкаЗагрузкиЗаказовИзExcel.Контрагент = КонтактнаяИнформация.Контрагент";
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);				   
	Запрос.УстановитьПараметр("Вид", справочники.ВидыКонтактнойИнформации.НайтиПоКоду("39245")  );				   
		Результат = Запрос.Выполнить();
		табл = результат.Выгрузить();
	для каждого стр1 из табл цикл
		стр1.КодКлиента = сокрЛП(стр1.КодКлиента);
		стр1.ОтправителиКлиента = СокрЛП(стр1.ОтправителиКлиента);
		стр1.ОтправителиКлиента = стрЗаменить(стр1.ОтправителиКлиента," ","");
		стр1.ОтправителиКлиента = стрЗаменить(стр1.ОтправителиКлиента,",",";");
	КонецЦикла;

	возврат табл;
КонецФункции	

//Функция разбора Excel файлов и создание заказа покупателя,
 //стр1 =  списокФайлов,
// для: КодКлиента, Контрагент,
 //из столбцов Excel: Артикул, Количество, Цена, ПерваяСтрока,
 //доп.поля: Брэнд, Код,
//--------------------
 //поля возврата при ошибке: КоличествоОтказ, ПричинаОтказа,
 //---------------------------------
 //связка:	ОтправителиКлиента
 //===============================================
//возвращает количество созданных Заказов
функция СоздатьЗаказыИзФайловExcel(стр1, Путь="")
	рез = "";
	для i=0 по стр1.списокФайлов.Количество()-1 цикл
		  ИмяФайла = Путь+стр1.списокФайлов[i].Значение;
		  табЗнач = РазобратьExcelФайлВТабЗнач(ИмяФайла, стр1);
		  табЗначОтвет = СоздатьЗаказПоТабЗнач(табЗнач, стр1.Контрагент);
		  рез = табЗначОтвет.Итог("КоличествоОтказ");
		  Если рез <> 0 тогда
			  СоздатьУведомлениеОбОшибке(ИмяФайла, стр1, табЗначОтвет);
		  КонецЕсли;	  
	КонецЦикла;
	возврат рез;
КонецФункции
 
функция РазобратьExcelФайлВТабЗнач(ИмяФайла, стр1)
	табЗнач = новый ТаблицаЗначений;
	табЗнач.Колонки.Добавить("НомерСтроки");
	табЗнач.Колонки.Добавить("Артикул");
	табЗнач.Колонки.Добавить("Номенклатура"); //если найдём такую
	табЗнач.Колонки.Добавить("Количество");
	табЗнач.Колонки.Добавить("Цена");
	
	//разбор Excel-файла: ИмяФайла  по полям  стр1
	//НомерСтроки  = от стр1.ПерваяСтрока до конца...
	
	возврат табЗнач;
КонецФункции	

функция СоздатьЗаказПоТабЗнач(табЗнач, Контр)
	табЗначОтвет = новый ТаблицаЗначений;
	табЗначОтвет = табЗнач.Скопировать(); //все колонки как есть...
	табЗначОтвет.Колонки.Добавить("КоличествоОтказ");
	табЗначОтвет.Колонки.Добавить("ПричинаОтказа");
	
	//создаём заказ на Ярославль, на Контр по осн.договору (с учётом вида товаров!)
	//табЗначОтвет - чего нет, что не нашли... и т.д.
	//
	возврат табЗначОтвет;
КонецФункции

процедура СоздатьУведомлениеОбОшибке(ИмяФайла, стр1, табЗначОтвет)
	//пишем обратно в тот же файл Excel:
	//- КоличествоОтказ и ПричинаОтказа в соответствующие столбцы стр1.КоличествоОтказ и стр1.ПричинаОтказа
	
	//создаём событие для Менеджера по стр1.Контрагент - с указанием ИмяФАЙЛА, отправителя, Темы Письма
	
	//пишем всё в лог-файл
КонецПроцедуры