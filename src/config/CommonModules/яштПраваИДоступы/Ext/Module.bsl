Процедура ПроверитьПрава(Объект, Форма, Отказ) Экспорт 
	
	Если ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда
		// в папку "Потенциальные клиенты " разрешаем добавлять безусловно
		Если Объект.Родитель = Справочники.Контрагенты.ПотенциальныеПокупатели Тогда
			Возврат;
		КонецЕсли;	
		Если Объект.ЭтоНовый() Тогда
			Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "КонтрагентыРазрешитьДобавлять") Тогда
				Отказ = Истина;
				Сообщить("Вам не разрешено добавлять новые элементы справочника Контрагенты!");
			    Возврат;
			КонецЕсли; 
		Иначе
			Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "КонтрагентыРазрешитьРедактировать") Тогда
				Сообщить("Вам не разрешено редактировать элементы справочника Контрагенты!");
				Форма.ТолькоПросмотр = Истина;
				Возврат;
			КонецЕсли; 
		КонецЕсли; 	
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда   
		// в папку "Потенциальные клиенты " разрешаем добавлять безусловно
		Если Объект.Владелец.Родитель = Справочники.Контрагенты.ПотенциальныеПокупатели Тогда
			Возврат;
		КонецЕсли;
		Если Объект.ЭтоНовый() Тогда
			Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ДоговорыКонтрагентовРазрешитьДобавлять") Тогда
				Отказ = Истина;
				Сообщить("Вам не разрешено добавлять новые элементы справочника Договоры контрагентов!");
			    Возврат;
			КонецЕсли; 
		Иначе
			Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ДоговорыКонтрагентовРазрешитьРедактировать") Тогда
				Сообщить("Вам не разрешено редактировать элементы справочника Договоры контрагентов!");
				Форма.ТолькоПросмотр = Истина;
				Возврат;
			КонецЕсли; 
		КонецЕсли; 	
	КонецЕсли; 


КонецПроцедуры

Процедура ПроверитьПраваПередЗаписью(Объект, Отказ) Экспорт 

	Если ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда	
		// в папку "Потенциальные клиенты " разрешаем добавлять безусловно
		Если Объект.Родитель = Справочники.Контрагенты.ПотенциальныеПокупатели или Объект.Родитель = Справочники.Контрагенты.КлиентыИМ Тогда
			Возврат;
		КонецЕсли;
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "КонтрагентыРазрешитьРедактировать") Тогда
			Сообщить("Вам не разрешено редактировать элементы справочника Контрагенты!");
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда			
		// в папку "Потенциальные клиенты " разрешаем добавлять безусловно
		Если Объект.Владелец.Родитель = Справочники.Контрагенты.ПотенциальныеПокупатели или Объект.Владелец.Родитель = Справочники.Контрагенты.КлиентыИМ Тогда
			Возврат;
		КонецЕсли;

		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ДоговорыКонтрагентовРазрешитьРедактировать") Тогда
			Сообщить("Вам не разрешено редактировать элементы справочника Договоры контрагентов!");
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
		
		//Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ДоговорыКонтрагентовРазрешитьЗаписьБезТипаДоговора") Тогда
		//	Если ЗначениеНеЗаполнено(Объект.ТипДоговора) Тогда
		//		Сообщить("Необходимо заполнить поле 'Тип договора'!");
		//		Отказ = Истина;
		//		Возврат;
		//	КонецЕсли; 
		//КонецЕсли;
	КонецЕсли; 	
	
КонецПроцедуры

Функция ПолучитьСписокКонтрагентовМенеджера(ТекущийПользователь) Экспорт
	
	Если ТипЗнч(ТекущийПользователь) <> Тип("СписокЗначений") Тогда
	
		СписокПользователей = Новый СписокЗначений;
		СписокПользователей.Добавить(ТекущийПользователь);
		
	Иначе
		
		СписокПользователей = ТекущийПользователь;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", СписокПользователей);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Контрагент КАК Контрагент
	|ИЗ
	|	(ВЫБРАТЬ
	|		Контрагенты.Ссылка КАК Контрагент
	|	ИЗ
	|		Справочник.Контрагенты КАК Контрагенты
	|	ГДЕ
	|		Контрагенты.ОсновнойМенеджерКонтрагента В (&Пользователь)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ДоговорыКонтрагентов.Владелец Контрагент
	|	ИЗ
	|		Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|	ГДЕ
	|		ДоговорыКонтрагентов.ОтветственноеЛицо В (&Пользователь)) КАК ВложенныйЗапрос";
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	СЗ = Новый СписокЗначений;
	СЗ.Очистить();
	
	СЗ.ЗагрузитьЗначения( тз.ВыгрузитьКолонку(0) ); //+++ 06.10.2011
	//Для каждого СтрокаТЗ Из ТЗ Цикл
	//	СЗ.Добавить(СтрокаТЗ.Контрагент);	
	//КонецЦикла; 
	
	Возврат СЗ;
	
КонецФункции

 //получает доступных контрагентов по пользователю
Функция ПолучитьСписокКонтрагентовМенеджераПоРегиону(ТекущийПользователь) Экспорт
	
	Если ТипЗнч(ТекущийПользователь) <> Тип("СписокЗначений") Тогда
	
		СписокПользователей = Новый СписокЗначений;
		СписокПользователей.Добавить(ТекущийПользователь);
		
	Иначе
		
		СписокПользователей = ТекущийПользователь;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", СписокПользователей);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь
	|ПОМЕСТИТЬ ВТ_П
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ОсновноеПодразделение.ОбособленноеПодразделение = ИСТИНА
	|	И Пользователи.ОсновноеПодразделение.ВЭД = ЛОЖЬ
	|	И Пользователи.ПометкаУдаления = ЛОЖЬ
	|	И Пользователи.Заблокирован = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	РегистрСведений.СоответствиеМенеджеровРегионам КАК СоответствиеМенеджеровРегионам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО СоответствиеМенеджеровРегионам.Регион = Контрагенты.Регион
	|ГДЕ
	|	СоответствиеМенеджеровРегионам.Пользователь В(&Пользователь)
	|	И СоответствиеМенеджеровРегионам.ВидСотрудника = ЗНАЧЕНИЕ(Перечисление.ВидыСотрудниковОтделаПродаж.Оператор)
	|	И НЕ Контрагенты.ОсновнойМенеджерКонтрагента В
	|				(ВЫБРАТЬ
	|					ВТ.Пользователь
	|				ИЗ
	|					ВТ_П КАК ВТ)	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоответствиеМенеджеровРегионам.Регион
	|ИЗ
	|	РегистрСведений.СоответствиеМенеджеровРегионам КАК СоответствиеМенеджеровРегионам
	|ГДЕ
	|	СоответствиеМенеджеровРегионам.Пользователь В(&Пользователь)
	|	И СоответствиеМенеджеровРегионам.ВидСотрудника = ЗНАЧЕНИЕ(Перечисление.ВидыСотрудниковОтделаПродаж.Помощник)
	//|	И НЕ СоответствиеМенеджеровРегионам.Регион.ОсновнойМенеджерКонтрагента В
	//|				(ВЫБРАТЬ
	//|					ВТ.Пользователь
	//|				ИЗ
	//|					ВТ_П КАК ВТ)
	|";
	
	/// выбираем контрагентов согласно региону и регистру сведений СоответствиеМенеджеровРегионам,
	//при этом исключаем контрагентов, у которых осн. менеджер - пользователь филиала !
	
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	СЗ = Новый СписокЗначений;
	СЗ.Очистить();
	
	СЗ.ЗагрузитьЗначения( тз.ВыгрузитьКолонку(0) ); //+++ 06.10.2011
	//Для каждого СтрокаТЗ Из ТЗ Цикл
	//	СЗ.Добавить(СтрокаТЗ.Контрагент);	
	//КонецЦикла; 
	
	Возврат СЗ;
	
КонецФункции

//получает список основных менеджеров к-а по доступным контрагентам по пользователю
Функция ПолучитьСписокОсновныхМенеджеровКонтрагентовПоРегиону(ТекущийПользователь) Экспорт
	
	Если ТипЗнч(ТекущийПользователь) <> Тип("СписокЗначений") Тогда
	
		СписокПользователей = Новый СписокЗначений;
		СписокПользователей.Добавить(ТекущийПользователь);
		
	Иначе
		
		СписокПользователей = ТекущийПользователь;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", СписокПользователей);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь
	|ПОМЕСТИТЬ ВТ_П
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ОсновноеПодразделение.ОбособленноеПодразделение = ИСТИНА
	|	И Пользователи.ОсновноеПодразделение.ВЭД = ЛОЖЬ
	|	И Пользователи.ПометкаУдаления = ЛОЖЬ
	|	И Пользователи.Заблокирован = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Контрагенты.Ссылка КАК Контрагент
	|ПОМЕСТИТЬ ВТ_К
	|ИЗ
	|	РегистрСведений.СоответствиеМенеджеровРегионам КАК СоответствиеМенеджеровРегионам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО СоответствиеМенеджеровРегионам.Регион = Контрагенты.Регион
	|ГДЕ
	|	СоответствиеМенеджеровРегионам.Пользователь В(&Пользователь)
	|	И СоответствиеМенеджеровРегионам.ВидСотрудника = ЗНАЧЕНИЕ(Перечисление.ВидыСотрудниковОтделаПродаж.Оператор)
	|	И НЕ Контрагенты.ОсновнойМенеджерКонтрагента В
	|				(ВЫБРАТЬ
	|					ВТ.Пользователь
	|				ИЗ
	|					ВТ_П КАК ВТ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоответствиеМенеджеровРегионам.Регион
	|ИЗ
	|	РегистрСведений.СоответствиеМенеджеровРегионам КАК СоответствиеМенеджеровРегионам
	|ГДЕ
	|	СоответствиеМенеджеровРегионам.Пользователь В(&Пользователь)
	|	И СоответствиеМенеджеровРегионам.ВидСотрудника = ЗНАЧЕНИЕ(Перечисление.ВидыСотрудниковОтделаПродаж.Помощник)
	//|	И НЕ СоответствиеМенеджеровРегионам.Регион.ОсновнойМенеджерКонтрагента В
	//|				(ВЫБРАТЬ
	//|					ВТ.Пользователь
	//|				ИЗ
	//|					ВТ_П КАК ВТ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_К.Контрагент.ОсновнойМенеджерКонтрагента как ОсновнойМенеджерКонтрагента
	|ИЗ
	|	ВТ_К КАК ВТ_К
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_К.Контрагент.ОсновнойМенеджерКонтрагента";
	
	/// выбираем контрагентов согласно региону и регистру сведений СоответствиеМенеджеровРегионам,
	//при этом исключаем контрагентов, у которых осн. менеджер - пользователь филиала !
	
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	СЗ = Новый СписокЗначений;
	СЗ.Очистить();
	
	СЗ.ЗагрузитьЗначения( тз.ВыгрузитьКолонку(0) ); //+++ 06.10.2011
	//Для каждого СтрокаТЗ Из ТЗ Цикл
	//	СЗ.Добавить(СтрокаТЗ.Контрагент);	
	//КонецЦикла; 
	
	Возврат СЗ;
	
КонецФункции


Функция ПолучитьСписокДоговоровМенеджера(ТекущийПользователь) Экспорт
	ДоговораИМ = неопределено;
	
	Если ТипЗнч(ТекущийПользователь) <> Тип("СписокЗначений") Тогда
		
		СписокПользователей = Новый СписокЗначений;
		СписокПользователей.Добавить(ТекущийПользователь);
		
	Иначе
		
		СписокПользователей = ТекущийПользователь;
		//24.08.16 По списку пользователей в филиалах видят только руководители... Добавим все договора Клиентов с  РезервИМ по их подразделению
		
		Если ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение.ОбособленноеПодразделение Тогда //филиалы
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДоговорыПоТоварнымГруппам.Договор
			|ИЗ
			|	РегистрСведений.ДоговорыПоТоварнымГруппам КАК ДоговорыПоТоварнымГруппам
			|ГДЕ
			|(
		//	|	ДоговорыПоТоварнымГруппам.Контрагент.КонтрагентДляРезерваИМ <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) или  //123Заменить
			|			ДоговорыПоТоварнымГруппам.Договор.КонтрагентДляРезерваИМ <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|)
			|	И ДоговорыПоТоварнымГруппам.Подразделение = &Подразделение";
			
			Запрос.УстановитьПараметр("Подразделение", ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение);
			
			ДоговораИМ = Запрос.Выполнить().Выгрузить();
			
		КонецЕсли;
	конецесли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", СписокПользователей);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ОтветственноеЛицо В (&Пользователь)";
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	СЗ = Новый СписокЗначений;
	СЗ.Очистить();
	
	СЗ.ЗагрузитьЗначения( тз.ВыгрузитьКолонку(0) ); //+++ 06.10.2011
	Если ДоговораИМ <> неопределено  Тогда
	Для каждого СтрокаТЗ Из ДоговораИМ Цикл
		СЗ.Добавить(СтрокаТЗ.Договор);	
	КонецЦикла; 
	конецЕсли;
	Возврат СЗ;
	
КонецФункции

//+++ 11.07.2013
функция ПолучитьСписокПользователейСвоейГруппы() Экспорт
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") 
		И ЗначениеЗаполнено(ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов"))
		И НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтображатьТолькоСобственныеЗаказы") Тогда //+++ 2012 для списка заказов
		
			СписокПользователей = Новый СписокЗначений;
			группа = ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов").ПользователиГруппы;
			Для каждого СтрокаСпр Из группа Цикл
				СписокПользователей.Добавить(СтрокаСпр.Пользователь);	
			КонецЦикла; 
 	Иначе //только по себе - нет группы или явно вкл. ОтображатьТолькоСобственныеЗаказы!
		СписокПользователей = Новый СписокЗначений;
		СписокПользователей.Добавить(ПараметрыСеанса.ТекущийПользователь);
	КонецЕсли;
		
		возврат СписокПользователей;
КонецФункции

//+++ 10.01.2012 
Функция ПолучитьСписокТовГруппМенеджера(ТекущийПользователь) Экспорт
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	ЗначенияСвойствОбъектов.Объект
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|ГДЕ
	//|	ЗначенияСвойствОбъектов.Свойство = &Свойство
	//|	И ЗначенияСвойствОбъектов.Значение = &Значение";
	//
	//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00127") );
	//Запрос.УстановитьПараметр("Значение", ТекущийПользователь);
	//
	//Результат = Запрос.Выполнить();
	//ТЗ        = Результат.Выгрузить();
	//
	//СЗ = Новый СписокЗначений;
	//СЗ.Очистить();
	//
	//СЗ.ЗагрузитьЗначения( ТЗ.ВыгрузитьКолонку(0) ); 
	//Возврат СЗ;
	
	набор = РегистрыСведений.ОтборПоНоменклатурнымГруппамДляОтчетов.СоздатьНаборЗаписей();
	набор.Отбор.Пользователь.Установить(ТекущийПользователь);
	набор.Прочитать();
	Массив = набор.ВыгрузитьКолонку("НоменклатурнаяГруппа");
	список = Новый СписокЗначений;
	список.ЗагрузитьЗначения(Массив);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("список",список);
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатурныеГруппы.Ссылка
	               |ИЗ
	               |	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
	               |ГДЕ
	               |	(НоменклатурныеГруппы.Родитель В (&список)
	               |			ИЛИ НоменклатурныеГруппы.Ссылка В (&список))";
	


	
	Результат = Запрос.Выполнить().Выгрузить();

	
	СЗ = Новый СписокЗначений;
	СЗ.Очистить();
	
	СЗ.ЗагрузитьЗначения( Результат.ВыгрузитьКолонку(0) ); 
	Возврат СЗ;	

конецФункции	


Процедура УстановитьОтборВСправочникКонтрагенты(Отбор, ЭлементСпискаФормы) Экспорт

	Если Константы.ИспользоватьОграниченияСписковВыбора.Получить() Тогда
		
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьПолныйСписокКонтрагентов") Тогда
			СписокПользователей = Новый СписокЗначений;
			// Миронычев
			Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РедактированиеДокументовГруппы")  Тогда
				СписокПользователейГруппы = ПолучитьСписокГруппыПользователей(ПараметрыСеанса.ТекущийПользователь) ;
				Для Каждого Ст из СписокПользователейГруппы Цикл
					СписокПользователей.Добавить(Ст.Пользователь);
				КонецЦикла;
			Иначе
				СписокПользователей.Добавить(ПараметрыСеанса.ТекущийПользователь);	
			КонецЕсли;
			//КонецМиронычев
			//СписокПользователей = Новый СписокЗначений;			
			//
			//СписокПользователей.Добавить(ПараметрыСеанса.ТекущийПользователь);	
			//
			Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоРегиону")  Тогда
				СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджераПоРегиону(ПараметрыСеанса.ТекущийПользователь);
			иначе				
				СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджера(СписокПользователей);
			КонецЕсли;
			
			Если Отбор.Найти("Ссылка") = Неопределено Тогда 
				Отбор.Добавить("Ссылка");
			КонецЕсли;
			
			Отбор["Ссылка"].Использование = Истина;
			Отбор["Ссылка"].ВидСравнения = ВидСравнения.ВСписке;
			Отбор["Ссылка"].Значение = СписокКонтрагентовМенеджера;
			
			ЭлементСпискаФормы.НастройкаОтбора["Ссылка"].Доступность = Ложь;
			
			
		КонецЕсли; 
		
		СправочникиОтборПомеченныхНаУдаление(Отбор, ЭлементСпискаФормы);
		
	КонецЕсли; 

КонецПроцедуры

Процедура УстановитьОтборВСправочникДоговорыКонтрагентов(Отбор, ЭлементСпискаФормы) Экспорт

	Если Константы.ИспользоватьОграниченияСписковВыбора.Получить() Тогда
		
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьПолныйСписокДоговоров") Тогда
			
			СписокПользователей = Новый СписокЗначений;			
			
			// Миронычев
			Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РедактированиеДокументовГруппы")  Тогда
				СписокПользователейГруппы = ПолучитьСписокГруппыПользователей(ПараметрыСеанса.ТекущийПользователь) ;
				Для Каждого Ст из СписокПользователейГруппы Цикл
					СписокПользователей.Добавить(Ст.Пользователь);
				КонецЦикла;
			Иначе
				СписокПользователей.Добавить(ПараметрыСеанса.ТекущийПользователь);	
			КонецЕсли;
			//КонецМиронычев
			
			//+++ Шарафутдиннов 16.05.2018
			Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоРегиону")  Тогда
				СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджераПоРегиону(СписокПользователей);
				
				Если СписокКонтрагентовМенеджера.НайтиПоЗначению(Отбор["Владелец"].Значение) = Неопределено Тогда  //ищем владельца договора в разрешенных для данного пользователя
					Если Отбор.Найти("ОтветственноеЛицо") = Неопределено Тогда            //не находим - ставим отбор по ответственному за договор
						Отбор.Добавить("ОтветственноеЛицо");
					КонецЕсли;
					
					Отбор["ОтветственноеЛицо"].Использование = Истина;
					Отбор["ОтветственноеЛицо"].ВидСравнения = ВидСравнения.ВСписке;
					Отбор["ОтветственноеЛицо"].Значение = СписокПользователей;
					
				КонецЕсли;
			иначе		
				//--- Шарафутдиннов 16.05.2018   			
				
				Если Отбор.Найти("ОтветственноеЛицо") = Неопределено Тогда 
					Отбор.Добавить("ОтветственноеЛицо");
				КонецЕсли;
				
				Отбор["ОтветственноеЛицо"].Использование = Истина;
				Отбор["ОтветственноеЛицо"].ВидСравнения = ВидСравнения.ВСписке;
				Отбор["ОтветственноеЛицо"].Значение = СписокПользователей;
				
				//ЭлементСпискаФормы.НастройкаОтбора["ОтветственноеЛицо"].Доступность = Ложь;
			КонецЕсли;
			
			
		КонецЕсли; 
		
		СправочникиОтборПомеченныхНаУдаление(Отбор, ЭлементСпискаФормы);
		
	КонецЕсли; 

КонецПроцедуры

Процедура УстановитьОтборВЖурналеДокументов(Отбор, ЭлементСпискаФормы, ДоговорНеДоступен = Ложь,ПроизводитьОтборВЖурналеДокументов=Истина) Экспорт
		
	Если НЕ ЗначениеЗаполнено(Отбор.Дата.ЗначениеС) И НЕ ЗначениеЗаполнено(Отбор.Дата.ЗначениеПо) Тогда
		
		ДатаНачалаВДокументах=НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1));   
		ДатаОкончанияВДокументах=КонецМесяца(ТекущаяДата());
		ОсновнаяДатаНачалаОтчетов=ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнаяДатаНачалаОтчетов");
		Если Не ЗначениеНеЗаполнено(ОсновнаяДатаНачалаОтчетов) Тогда
			ДатаНачалаВДокументах=ОсновнаяДатаНачалаОтчетов;
			ДатаОкончанияВДокументах=КонецГода(ТекущаяДата());
		КонецЕсли;
		
		Отбор.Дата.ЗначениеС=ДатаНачалаВДокументах;
		Отбор.Дата.ЗначениеПо=ДатаОкончанияВДокументах;
		Отбор.Дата.Использование=Истина;
		
	КонецЕсли;
	
	ДокументыОтборПомеченныхНаУдаление(Отбор, ЭлементСпискаФормы);	 // разрешено или нет
	
	//Для филиалов - всегда нужен отбор!
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		
		//+++ 03.10.2014 - если включен [v]Дележка - то отбор по договорам всех менеджеров Группы (если она есть, иначе ТОЛЬКО по себе!)
		//Иначе - ВСЕ документы подразделения!
		Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") тогда 
			
			//отбор по договорам всех менеджеров своей Группы/или только по себе! 
			СписокМенеджеров = ПолучитьСписокПользователейСвоейГруппы();
			
			
			Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоКонтрагету")) Тогда
				Если Отбор.Найти("Контрагент") = Неопределено Тогда  //+++ 08.06.2015
					Отбор.Добавить("Контрагент");
				КонецЕсли;
				Отбор["Контрагент"].Использование = Истина;
				Отбор["Контрагент"].ВидСравнения = ВидСравнения.ВСписке;
				СписокКонтр = ПолучитьСписокКонтрагентовМенеджера(СписокМенеджеров);
				Отбор["Контрагент"].Значение = СписокКонтр;
				ЭлементСпискаФормы.НастройкаОтбора["Контрагент"].Доступность = Ложь;
			иначеЕсли (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоРегиону")) Тогда
				Если Отбор.Найти("Контрагент") = Неопределено Тогда  //+++ 08.06.2015
					Отбор.Добавить("Контрагент");
				КонецЕсли;
				Отбор["Контрагент"].Использование = Истина;
				Отбор["Контрагент"].ВидСравнения = ВидСравнения.ВСписке;
				СписокКонтр = ПолучитьСписокКонтрагентовМенеджераПоРегиону(ПараметрыСеанса.ТекущийПользователь);
				Отбор["Контрагент"].Значение = СписокКонтр;
				ЭлементСпискаФормы.НастройкаОтбора["Контрагент"].Доступность = Ложь;	
			Иначе//отбор по договору
				Если Отбор.Найти("ДоговорКонтрагента") = Неопределено Тогда  //+++ 08.06.2015
					Отбор.Добавить("ДоговорКонтрагента");
				КонецЕсли;
				Отбор["ДоговорКонтрагента"].Использование = Истина;
				Отбор["ДоговорКонтрагента"].ВидСравнения = ВидСравнения.ВСписке;
				СписокДоговоровМенеджера = ПолучитьСписокДоговоровМенеджера(СписокМенеджеров);
				Отбор["ДоговорКонтрагента"].Значение = СписокДоговоровМенеджера;
				ЭлементСпискаФормы.НастройкаОтбора["ДоговорКонтрагента"].Доступность = Ложь;
			КонецЕсли;
			
		Иначе//================================================ ВСЕ документы 1-го Подразделения ================================
			
			Если Отбор.Найти("Подразделение") = Неопределено Тогда 
				Отбор.Добавить("Подразделение");
			КонецЕсли;
			Отбор["Подразделение"].Использование = Истина;
			
			//+++( 27.05.2015 - отбор по 1 или нескольким подразделениям
			ОдноПодразделение = ?(РольДоступна("Партнер"), ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновноеПодразделение"), ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение);
			списокПодразделенийПользователя = получитьСписокРазрешенныхОбъектовПользователя(ПараметрыСеанса.ТекущийПользователь, "Подразделения"); 
			если списокПодразделенийПользователя.Количество()=0 тогда // как было
				Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
				Отбор["Подразделение"].Значение = ОдноПодразделение;
			иначе	
				Отбор["Подразделение"].ВидСравнения = ВидСравнения.ВСписке;
				Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
			КонецЕсли;
			//+++)
			
			ЭлементСпискаФормы.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		КонецЕсли;
		ВОЗВРАТ; // больше никаких отборов не надо!	
	КонецЕсли;
	
	//при явном указании в вызове процедуры... без отбора по журналам, только ограничения по датам ( но не для филиалов!)
	Если  ПроизводитьОтборВЖурналеДокументов = Ложь Тогда   
		Возврат;
	КонецЕсли;	
	
	//06.10.2014 - если ВЫКЛЮЧЕН отбор у пользователя... 
	Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьОтбор") Тогда    			
		Возврат;
	КонецЕсли;  
	
	//если выключен общий отбор у всех...
	Если Константы.ИспользоватьОграниченияСписковВыбора.Получить() Тогда
		
		мПоРегиону     = Ложь;
		мПоКонтрагенту = Ложь;
		мПоДоговору = Истина;  // если не включено ничего, то отбор по договорам!
		
		//Если (НЕ (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоКонтрагету")))
		//	И (НЕ (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоДоговору")))	Тогда
		//	Возврат;
		//КонецЕсли;
		
		//+++ Шарафутдинов задача 43163 
		Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоРегиону")) Тогда
			
			мПоРегиону     = Истина;
			мПоКонтрагенту = Ложь;
			мПоДоговору    = Ложь;
		КонецЕсли;
		//--- Шарафутдинов задача 43163
		
		
		Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоКонтрагету")) Тогда
			мПоКонтрагенту = Истина;
			мПоДоговору = Ложь;
			мПоРегиону     = Ложь;
		КонецЕсли;
		
		Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоДоговору")) Тогда
			мПоКонтрагенту = Ложь;
			мПоДоговору = Истина;
			мПоРегиону  = Ложь;
		КонецЕсли;
		
		Если ДоговорНеДоступен И мПоДоговору Тогда
			мПоДоговору = Ложь;
			мПоКонтрагенту = Истина;
			мПоРегиону  = Ложь;
		КонецЕсли; 
		
		
		//06.10.2014 - только для ЗаказовПокупателей - срабатывает отключение отбора при [v]ОтображатьВсеЗаказы!
		Если НЕ ( ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтображатьВсеЗаказы") 
			и найти( Строка(ЭлементСпискаФормы.Значение), "ЗаказПокупателя" ) > 0 
			)  Тогда 
			
			СписокМенеджеров = ПолучитьСписокПользователейСвоейГруппы(); //15.10.2014 - по группе или только свои...
			
			//+++ Шарафутдинов задача 43163 
			Если мПоРегиону Тогда
				СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджераПоРегиону(СписокМенеджеров);
				попытка //для некоорых списках документа не срабатывает, легче всего в попытке обойти
					Если Отбор.Найти("ДокументыПоКонтрагенту") = Неопределено Тогда 
						Отбор.Добавить("ДокументыПоКонтрагенту");
					КонецЕсли;
					Отбор["ДокументыПоКонтрагенту"].Использование = Истина;
					Отбор["ДокументыПоКонтрагенту"].ВидСравнения = ВидСравнения.ВСписке;
					Отбор["ДокументыПоКонтрагенту"].Значение = СписокКонтрагентовМенеджера;
					ЭлементСпискаФормы.НастройкаОтбора["ДокументыПоКонтрагенту"].Доступность = Ложь;
				Исключение					
					 сообщить("Не удалось установить отбор по региону для списка документов", СтатусСообщения.Информация);						
				КонецПопытки;
			КонецЕсли; 
			//--- Шарафутдинов задача 43163 		
			
			
			Если мПоКонтрагенту Тогда
				СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджера(СписокМенеджеров);
				Если Отбор.Найти("ДокументыПоКонтрагенту") = Неопределено Тогда 
					Отбор.Добавить("ДокументыПоКонтрагенту");
				КонецЕсли;
				Отбор["ДокументыПоКонтрагенту"].Использование = Истина;
				Отбор["ДокументыПоКонтрагенту"].ВидСравнения = ВидСравнения.ВСписке;
				Отбор["ДокументыПоКонтрагенту"].Значение = СписокКонтрагентовМенеджера;
				ЭлементСпискаФормы.НастройкаОтбора["ДокументыПоКонтрагенту"].Доступность = Ложь;
			КонецЕсли; 
			
			Если мПоДоговору Тогда
				//+++ 04.04.2018 ---------------[ ] ОтображатьВсеЗаказы--------------------
				Если Строка(ЭлементСпискаФормы.Значение) =  "ДокументСписок.ЗаказПокупателя" и не РольДоступна("МенеджерФормулы") тогда
					
					Если Отбор.Найти("ОтборПоОтветственному") = Неопределено Тогда 
						Отбор.Добавить("ОтборПоОтветственному");
					КонецЕсли;
					
					Отбор["ОтборПоОтветственному"].Использование = Истина;
					Отбор["ОтборПоОтветственному"].ВидСравнения = ВидСравнения.ВСписке;
					Отбор["ОтборПоОтветственному"].Значение = СписокМенеджеров;
					ЭлементСпискаФормы.НастройкаОтбора["ОтборПоОтветственному"].Доступность = Ложь;
				 	
				Иначе //--------как было ------------------
				
					СписокДоговоровМенеджера = ПолучитьСписокДоговоровМенеджера(СписокМенеджеров);
					Если Отбор.Найти("ДокументыПоДоговоруКонтрагента") = Неопределено Тогда 
						Отбор.Добавить("ДокументыПоДоговоруКонтрагента");
					КонецЕсли;
					Отбор["ДокументыПоДоговоруКонтрагента"].Использование = Истина;
					Отбор["ДокументыПоДоговоруКонтрагента"].ВидСравнения = ВидСравнения.ВСписке;
					Отбор["ДокументыПоДоговоруКонтрагента"].Значение = СписокДоговоровМенеджера;
					ЭлементСпискаФормы.НастройкаОтбора["ДокументыПоДоговоруКонтрагента"].Доступность = Ложь;
				
				КонецЕсли; //+++)
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
	//Миронычев
	Если не РольДоступна("ПолныеПрава") и ТипЗНЧ(ЭлементСпискаФормы.Значение)= Тип("ДокументСписок.ЗаказПокупателя") тогда
		Если ПараметрыСеанса.ТекущийПользователь.НаправлениеПродаж <> Справочники.НаправленияПродаж.НайтиПоКоду("16") тогда 
			Если ПараметрыСеанса.ТекущийПользователь.НаправлениеПродаж <> Справочники.НаправленияПродаж.ПустаяСсылка() тогда
			
				//+++ 04.04.2018 - ТОЛЬКО если не добавили ВЫШЕ!
				Если Отбор.Найти("ОтборПоОтветственному") = Неопределено Тогда  
					Отбор.Добавить("ОтборПоОтветственному"); //ЕЩЁ один такой же отбор!
			
					Отбор["ОтборПоОтветственному"].Использование = Истина;
					Отбор["ОтборПоОтветственному"].ВидСравнения = ВидСравнения.НеРавно;
					Отбор["ОтборПоОтветственному"].Значение = Справочники.Пользователи.НайтиПоКоду("Левченко Е.");
					ЭлементСпискаФормы.НастройкаОтбора["ОтборПоОтветственному"].Доступность = Ложь;
				КонецЕсли;
			
		    КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


//+++27.05.2015 - Разрешенные Объекты справочника Подразделения или др. - Пользователь, Объект (ссылка на справочник)
функция получитьСписокРазрешенныхОбъектовПользователя(ТекПользователь, ИмяСправочникаВМетаданных="Подразделения") экспорт
	
	   Запрос = Новый Запрос;
	   Запрос.Текст = "ВЫБРАТЬ
	   |	РазрешенныеОбъектыПользователей.Объект 
	   |ИЗ
	   |	РегистрСведений.РазрешенныеОбъектыПользователей КАК РазрешенныеОбъектыПользователей
	   |ГДЕ
	   |	РазрешенныеОбъектыПользователей.Пользователь = &Пользователь
	   |    И РазрешенныеОбъектыПользователей.Объект ссылка Справочник."+ИмяСправочникаВМетаданных+"
	   |"; //
	   Запрос.УстановитьПараметр("Пользователь", ТекПользователь);
	   
	   Результат = Запрос.Выполнить();
	   таблРез = Результат.Выгрузить();
	   
	   спис = новый СписокЗначений;
	   
	   если таблРез.Количество()>0 тогда
	   	 спис.ЗагрузитьЗначения( таблРез.ВыгрузитьКолонку("Объект") );
	   КонецЕсли;
	   
возврат спис;

КонецФункции	

//+++ 10.01.2012 - добавлен отбор по "Товарным(Номенклатурным) группам"
Процедура УстановитьОтборПоУниверсальномуОтчету(ПостроительОтчета) Экспорт

	Если Константы.ИспользоватьОграниченияСписковВыбора.Получить() Тогда  //ДА!
			
		//+++ 10.01.2012
		//Если (НЕ (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтчетыОтборПоКонтрагенту")))
		//	И (НЕ (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтчетыОтборПоДоговору"))) Тогда
		
		Если РольДоступна("ДополнительныеПраваВЭД") Тогда
			
			попытка
				
				Если ПостроительОтчета.Отбор.Найти("ПодразделениеВЭД") = Неопределено Тогда
					ИмяОтбораТовГрупп = "Подразделение.ВЭД";
					ПодраздВЭД = ПостроительОтчета.Отбор.Добавить(ИмяОтбораТовГрупп);
				Иначе
					ПодраздВЭД = ПостроительОтчета.Отбор.Найти("ПодразделениеВЭД");
				КонецЕсли;
				
				ПодраздВЭД.Использование = истина;
				ПодраздВЭД.ВидСравнения = ВидСравнения.Равно;
				ПодраздВЭД.Значение = истина;
				
			исключение
				
			Конецпопытки;
			
		ИначеЕсли РольДоступна("яштФинДиректор") Тогда
			
			
		иначе
			
			попытка
				
				Если ПостроительОтчета.Отбор.Найти("ПодразделениеВЭД") = Неопределено Тогда
					ИмяОтбораТовГрупп = "Подразделение.ВЭД";
					ПодраздВЭД = ПостроительОтчета.Отбор.Добавить(ИмяОтбораТовГрупп);
				Иначе
					ПодраздВЭД = ПостроительОтчета.Отбор.Найти("ПодразделениеВЭД");
				КонецЕсли;
				
				ПодраздВЭД.Использование = истина;
				ПодраздВЭД.ВидСравнения = ВидСравнения.Равно;
				ПодраздВЭД.Значение = Ложь;
				
			исключение
				
			Конецпопытки;
			
       КонецЕсли;
		
		Если РольДоступна("яштФинДиректор") или РольДоступна("ПолныеПрава") тогда
			Возврат; // нет отборов, доступно ВСЁ
		КонецЕсли;
		
	Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьОтбор") Тогда
		//Сообщить("Неверная настройка пользователя: Выключена настройка ""Отбор в журналах и отчетах -> Использовать Отбор"" !");
		Возврат; // принудительно для ВСЕХ не смотря на эту настройку!!!
	КонецЕсли;  
	
	// вытеснение
		мПоКонтрагенту = Ложь; 
		мПоДоговору    = Ложь; // мПоДоговору= истина, тогда мПоКонтрагенту = ложь;  
		мПоТовГруппам  = Ложь; // мПоТовГруппам = истина, тогда  мПоДоговору и мПоКонтрагенту = ложь;  
     	
		Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтчетыОтборПоКонтрагенту")) Тогда
			мПоКонтрагенту  = Истина;
		КонецЕсли;
		
		
		Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтчетыОтборПоДоговору")) Тогда
			//Если мПоКонтрагенту тогда
			//Сообщить("Неверные настройки пользователя: ""Отбор в журналах и отчетах -> Отбор по Контрагенту"" !");
			//КонецЕсли;
			
			мПоКонтрагенту  = ЛОЖЬ; // это тоже самое!
			мПоДоговору 	= Истина;
		КонецЕсли;
		
		//+++ 10.01.2012 
		Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОтчетыОтборПоТоварнымГруппам")) Тогда
			мПоТовГруппам = Истина;
			//Если мПоКонтрагенту тогда
			//Сообщить("Неверные настройки пользователя: ""Отбор в журналах и отчетах -> Отбор по Контрагенту"" !");
			//мПоКонтрагенту  = ЛОЖЬ; // по товарной группе - видны ВСЕ контрагенты и договоры!
			//КонецЕсли;
			//Если мПоДоговору тогда
			//Сообщить("Неверные настройки пользователя: ""Отбор в журналах и отчетах -> Отбор по Договору"" !");
			//мПоДоговору 	= ЛОЖЬ;
			//КонецЕсли;
		КонецЕсли;
		
		Если  НЕ мПоКонтрагенту и НЕ мПоДоговору и НЕ мПоТовГруппам и не ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") тогда
			//Сообщить("Неверная настройка пользователя - Не выбран ""Отбор в журналах и отчетах -> Отчеты: Отбор по...""  Используется отбор по Договору Пользователя!");
	    	мПоДоговору = Истина;
		КонецЕсли;
		
		ИмяОтбораКонтрагента = "";
		ИмяОтбораДоговора = "";
		ИмяОтбораТовГрупп = "";

		ТипКонтрагентов = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		ТипДоговоров    = Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов");
		ТипТовГрупп     = Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы");  //+++ 10.01.2012
		
		Для каждого Поле Из ПостроительОтчета.ДоступныеПоля Цикл
			
			Если Поле.ТипЗначения = ТипКонтрагентов Тогда
				ИмяОтбораКонтрагента = Поле.Имя;
			КонецЕсли; 
			
			Если Поле.ТипЗначения = ТипДоговоров Тогда
				ИмяОтбораДоговора = Поле.Имя;
			КонецЕсли; 
			
			Если Поле.ТипЗначения = ТипТовГрупп Тогда //+++ 10.01.2012 - ном.группы должы быть в доступных полях построителя!!!
				ИмяОтбораТовГрупп = Поле.Имя;
			КонецЕсли;
			
		КонецЦикла;
		
		КонтрагентОтбор = Неопределено;
		ДоговорОтбор    = Неопределено;
		ТовГруппыОтбор  = Неопределено;
		
		Если мПоКонтрагенту и СтрДлина(ИмяОтбораКонтрагента) > 0 Тогда
			Если ПостроительОтчета.Отбор.Найти(ИмяОтбораКонтрагента) = Неопределено Тогда
				КонтрагентОтбор = ПостроительОтчета.Отбор.Добавить(ИмяОтбораКонтрагента);
			Иначе
				КонтрагентОтбор = ПостроительОтчета.Отбор.Найти(ИмяОтбораКонтрагента);
			КонецЕсли; 
		КонецЕсли; 
		
		Если мПоДоговору и СтрДлина(ИмяОтбораДоговора) > 0 Тогда
			Если ПостроительОтчета.Отбор.Найти(ИмяОтбораДоговора) = Неопределено Тогда
				ДоговорОтбор = ПостроительОтчета.Отбор.Добавить(ИмяОтбораДоговора);
			Иначе
				ДоговорОтбор = ПостроительОтчета.Отбор.Найти(ИмяОтбораДоговора);
			КонецЕсли; 
		КонецЕсли;
		
		Если мПоТовГруппам Тогда//и СтрДлина(ИмяОтбораТовГрупп) > 0 Тогда   //+++ 10.01.2012
				//ИмяОтбораТовГрупп = "Номенклатура.НоменклатурнаяГруппа";
			Если ПостроительОтчета.Отбор.Найти("НоменклатураНоменклатурнаяГруппа") = Неопределено Тогда
				ИмяОтбораТовГрупп = "Номенклатура.НоменклатурнаяГруппа";
				ТовГруппыОтбор = ПостроительОтчета.Отбор.Добавить(ИмяОтбораТовГрупп);
			Иначе
				ТовГруппыОтбор = ПостроительОтчета.Отбор.Найти("НоменклатураНоменклатурнаяГруппа");
			КонецЕсли; 
		КонецЕсли;
		
		Если ДоговорОтбор = Неопределено И КонтрагентОтбор = Неопределено и ТовГруппыОтбор=неопределено Тогда
			Возврат;
		КонецЕсли; 
		
		Если мПоДоговору и ДоговорОтбор = Неопределено Тогда
			мПоДоговору = Ложь;
			мПоКонтрагенту = Истина;
		КонецЕсли; 
		
		 
		Если мПоКонтрагенту Тогда
			
			//+++ 01.02.2012
			//отбор по всем менеджерам группы пользователей для распред.заказов
			Если //ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") И
				ЗначениеЗаполнено(ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов")) Тогда
				СписокПользователей = Новый СписокЗначений;
				Для каждого СтрокаСпр Из ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов").ПользователиГруппы Цикл
					СписокПользователей.Добавить(СтрокаСпр.Пользователь);	
				КонецЦикла; 
			иначе //только по себе!
				СписокПользователей = Новый СписокЗначений;
				СписокПользователей.Добавить(ПараметрыСеанса.ТекущийПользователь);
			КонецЕсли;//+++)
			
			Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоРегиону")  Тогда
				СписокДоступный = ПолучитьСписокКонтрагентовМенеджераПоРегиону(СписокПользователей);
			иначе				
				СписокДоступный = ПолучитьСписокКонтрагентовМенеджера(СписокПользователей);
			КонецЕсли;
			
			
			Если КонтрагентОтбор.Использование Тогда //уже включен - проверим на правильность
				//можно меньше но не больше!		
				ПравильныйВыбор = ложь;
				для i=0 по СписокДоступный.Количество()-1 цикл
					Если КонтрагентОтбор.ВидСравнения = ВидСравнения.Равно тогда
						Если СписокДоступный[i].Значение = КонтрагентОтбор.Значение тогда
							ПравильныйВыбор = истина;
							прервать;
						КонецЕсли;
					иначеЕсли КонтрагентОтбор.ВидСравнения = ВидСравнения.ВСписке тогда
						ПравильныйВыбор1 = ложь; // для каждого i
						для j=0 по КонтрагентОтбор.Значение.Количество()-1 цикл
							Если СписокДоступный[i].Значение = КонтрагентОтбор.Значение[j] тогда
								ПравильныйВыбор1 = истина;
								прервать;
							КонецЕсли;
						КонецЦикла;
						ПравильныйВыбор = ?(i=0, ПравильныйВыбор1, ПравильныйВыбор и ПравильныйВыбор1); // все стоки j должны входить в i 
						//иначе   ПравильныйВыбор = ложь;
					КонецЕсли;
				конецЦикла;
				
				Если не ПравильныйВыбор тогда		
					КонтрагентОтбор.ВидСравнения = ВидСравнения.ВСписке;
					КонтрагентОтбор.Значение = СписокДоступный;
					сообщить("Отбор по Контрагенту - изменен в соответствие с Вашими разрешениями!");
				КонецЕсли;
			иначе // не использовался отбор!
				КонтрагентОтбор.ВидСравнения = ВидСравнения.ВСписке;
				КонтрагентОтбор.Значение = СписокДоступный;
			КонецЕсли; 
			
			КонтрагентОтбор.Использование =истина; // (КонтрагентОтбор.Значение.Количество()>0 );
			
		КонецЕсли; 
		
		
	//--------Только по себе!-------------------------------------------------------------	
			
		Если мПоДоговору Тогда
		   	//+++( 01.02.2012
		//было
		//СписокДоступный =  ПолучитьСписокДоговоровМенеджера(ПараметрыСеанса.ТекущийПользователь);
		//
       	//отбор по всем менеджерам группы пользователей для распред.заказов
		Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") И
			ЗначениеЗаполнено(ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов")) Тогда
			СписокПользователей = Новый СписокЗначений;
			Для каждого СтрокаСпр Из ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов").ПользователиГруппы Цикл
				СписокПользователей.Добавить(СтрокаСпр.Пользователь);	
			КонецЦикла; 
		иначе //только по себе!
			СписокПользователей = Новый СписокЗначений;
	        СписокПользователей.Добавить(ПараметрыСеанса.ТекущийПользователь);
		КонецЕсли;
		
		//+++( 06.12.2012
		//СписокДоступный =  ПолучитьСписокДоговоровМенеджера(СписокПользователей);
		Если ПостроительОтчета.Отбор.Найти("ДоговорОтборОтвественноеЛицо")=неопределено тогда
			ПостроительОтчета.Отбор.Добавить("ДоговорКонтрагента.ОтветственноеЛицо","ДоговорОтборОтвественноеЛицо", "Менеджер по договору Контрагента");
		КонецЕсли;
			ДоговорОтборОтвественноеЛицо = ПостроительОтчета.Отбор.Найти("ДоговорОтборОтвественноеЛицо");
	
		ДоговорОтборОтвественноеЛицо.ВидСравнения = ВидСравнения.ВСписке;
		ДоговорОтборОтвественноеЛицо.Использование =истина; // (КонтрагентОтбор.Значение.Количество()>0 );
		
		если ДоговорОтборОтвественноеЛицо.Значение.Количество()=0
			или ТипЗнч(ДоговорОтборОтвественноеЛицо.Значение)<>Тип("СписокЗначений") тогда
			ДоговорОтборОтвественноеЛицо.Значение = СписокПользователей;
		иначе
			масПользователей = ДоговорОтборОтвественноеЛицо.Значение.ВыгрузитьЗначения();
			для i=0 по масПользователей.Количество()-1  цикл
				Если ЗначениеНеЗаполнено(масПользователей[i])
					или (СписокПользователей.НайтиПоЗначению(масПользователей[i])=неопределено) тогда //+++ 11.12.2012 - ограничение по менеджерам!
					#Если Клиент тогда
					 сообщить("Данные по Менеджеру: "+строка(масПользователей[i])+" - не доступны для Вас! Вы в разных группах доступа!", СтатусСообщения.Информация);	
					#КонецЕсли	
		 			ДоговорОтборОтвественноеЛицо.Значение = СписокПользователей;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	//------------------так очень долго------------------------------------
	//Если ДоговорОтбор.Использование Тогда //уже включен - проверим на правильность
			////можно меньше но не больше!		
			//	ПравильныйВыбор = ложь;
			//		для i=0 по СписокДоступный.Количество()-1 цикл
			//			Если ДоговорОтбор.ВидСравнения = ВидСравнения.Равно тогда
			//				Если СписокДоступный[i].Значение = ДоговорОтбор.Значение тогда
			//					ПравильныйВыбор = истина;
			//					прервать;
			//				КонецЕсли;
			//			иначеЕсли ДоговорОтбор.ВидСравнения = ВидСравнения.ВСписке тогда
			//				ПравильныйВыбор1 = ложь; // для каждого i
			//				для j=0 по ДоговорОтбор.Значение.Количество()-1 цикл
			//					Если СписокДоступный[i].Значение = ДоговорОтбор.Значение[j] тогда
			//						ПравильныйВыбор1 = истина;
			//						прервать;
			//					КонецЕсли;
			//				КонецЦикла;
			//			ПравильныйВыбор = ?(i=0, ПравильныйВыбор1, ПравильныйВыбор и ПравильныйВыбор1); // все стоки j должны входить в i 
			//				//иначе   ПравильныйВыбор = ложь;
			//			КонецЕсли;
			//		конецЦикла;
			//		
			//		Если не ПравильныйВыбор тогда		
			//			ДоговорОтбор.ВидСравнения = ВидСравнения.ВСписке;
			//			ДоговорОтбор.Значение = СписокДоступный;
			//			сообщить("Отбор по Договорам - изменен в соответствие с Вашими разрешениями!");
			//		КонецЕсли;
			//иначе // не использовался отбор!
			//	ДоговорОтбор.ВидСравнения = ВидСравнения.ВСписке;
			//	ДоговорОтбор.Значение = СписокДоступный;
			//КонецЕсли; 
			//
			//ДоговорОтбор.Использование =истина; // (КонтрагентОтбор.Значение.Количество()>0 );
    	//+++ 06.12.2012 конец) 


		КонецЕсли; 
		
	//+++ 
	//-------Только по своим ном.группам-----------------------------------------------------	
		Если мПоТовГруппам И  НЕ ТовГруппыОтбор=неопределено тогда
			//Если НЕ ТовГруппыОтбор.Использование Тогда
				//ТовГруппыОтбор.ВидСравнения = ВидСравнения.ВСписке;
				//ТовГруппыОтбор.Значение = ПолучитьСписокТовГруппМенеджера(ПараметрыСеанса.ТекущийПользователь);
				//ТовГруппыОтбор.Использование =истина; // ( ТовГруппыОтбор.Значение.Количество()>0 );
			//КонецЕсли; 
			
			СписокДоступный = ПолучитьСписокТовГруппМенеджера(ПараметрыСеанса.ТекущийПользователь);
             			
		  Если ТовГруппыОтбор.Использование Тогда    //уже включен - проверим на правильность
		
		
			//можно меньше но не больше!		
				ПравильныйВыбор = ложь;
					для i=0 по СписокДоступный.Количество()-1 цикл
						Если ТовГруппыОтбор.ВидСравнения = ВидСравнения.Равно тогда
							Если СписокДоступный[i].Значение = ТовГруппыОтбор.Значение тогда
								ПравильныйВыбор = истина;
								прервать;
							КонецЕсли;
						иначеЕсли ТовГруппыОтбор.ВидСравнения = ВидСравнения.ВСписке тогда
							ПравильныйВыбор1 = ложь; // для каждого i
							для j=0 по ТовГруппыОтбор.Значение.Количество()-1 цикл
								Если СписокДоступный[i].Значение = ТовГруппыОтбор.Значение[j] тогда
									ПравильныйВыбор1 = истина;
									прервать;
								КонецЕсли;
							КонецЦикла;
	                     ПравильныйВыбор = ?(i=0, ПравильныйВыбор1, ПравильныйВыбор и ПравильныйВыбор1); // все стоки j должны входить в i 
						//иначе   ПравильныйВыбор = ложь;
						КонецЕсли;
					конецЦикла;
					
					Если не ПравильныйВыбор тогда		
						ТовГруппыОтбор.ВидСравнения = ВидСравнения.ВСписке;
						ТовГруппыОтбор.Значение = СписокДоступный;
						сообщить("Отбор по Договорам - изменен в соответствие с Вашими разрешениями!");
					КонецЕсли;
			иначе // не использовался отбор!
				ТовГруппыОтбор.ВидСравнения = ВидСравнения.ВСписке;
				ТовГруппыОтбор.Значение = СписокДоступный;
			КонецЕсли; 
			
			ТовГруппыОтбор.Использование =истина; // (КонтрагентОтбор.Значение.Количество()>0 );
			
		КонецЕсли; //мПоТовГруппам
		//============================================================================================================
		
	КонецЕсли;

КонецПроцедуры

Процедура СправочникиОтборПомеченныхНаУдаление(Отбор, ЭлементСпискаФормы) Экспорт

	Если Константы.ИспользоватьОграниченияСписковВыбора.Получить() Тогда
		
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СправочникиРазрешитьПросмотрПомеченныхНаУдаление") Тогда
			
			
			Если Отбор.Найти("ПометкаУдаления") = Неопределено Тогда 
				Отбор.Добавить("ПометкаУдаления");
			КонецЕсли;
			
			Отбор["ПометкаУдаления"].Использование = Истина;
			Отбор["ПометкаУдаления"].ВидСравнения = ВидСравнения.Равно;
			Отбор["ПометкаУдаления"].Значение = Ложь;
			
			ЭлементСпискаФормы.НастройкаОтбора["ПометкаУдаления"].Доступность = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ДокументыОтборПомеченныхНаУдаление(Отбор, ЭлементСпискаФормы) Экспорт

	Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ДокументыРазрешитьПросмотрПомеченныхНаУдаление") Тогда
			
			
		Если Отбор.Найти("ПометкаУдаления") = Неопределено Тогда 
			Отбор.Добавить("ПометкаУдаления");
		КонецЕсли;
			
		Отбор["ПометкаУдаления"].Использование = Истина;
		Отбор["ПометкаУдаления"].ВидСравнения = ВидСравнения.Равно;
		Отбор["ПометкаУдаления"].Значение = Ложь;
			
		ЭлементСпискаФормы.НастройкаОтбора["ПометкаУдаления"].Доступность = Ложь;
		
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьОтборСправочникаПользователи(Отбор, ЭлементСпискаФормы) Экспорт
	
	Если Константы.ИспользоватьОграниченияСписковВыбора.Получить() Тогда
		
		Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьПолныйСписокПользователей") Тогда
			
			
			Если Отбор.Найти("Заблокирован") = Неопределено Тогда 
				Отбор.Добавить("Заблокирован");
			КонецЕсли;
			
			Отбор["Заблокирован"].Использование = Истина;
			Отбор["Заблокирован"].ВидСравнения = ВидСравнения.Равно;
			Отбор["Заблокирован"].Значение = Ложь;
			
			ЭлементСпискаФормы.НастройкаОтбора["Заблокирован"].Доступность = Ложь;

			
		КонецЕсли; 
		
		СправочникиОтборПомеченныхНаУдаление(Отбор, ЭлементСпискаФормы);
		
	КонецЕсли; 
	
КонецПроцедуры

Функция ПолучитьСписокМенеджеровИРуководителей() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаправлениеПродаж", Справочники.НаправленияПродаж.ПустаяСсылка());
	Запрос.УстановитьПараметр("Ссылка", Справочники.Пользователи.ПустаяСсылка());
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	А.Ссылка КАК Ссылка
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		Пользователи.Ссылка КАК Ссылка
	               |	ИЗ
	               |		Справочник.Пользователи КАК Пользователи
	               |	ГДЕ
	               |		Пользователи.НаправлениеПродаж <> &НаправлениеПродаж
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		НаправленияПродаж.Руководитель
	               |	ИЗ
	               |		Справочник.НаправленияПродаж КАК НаправленияПродаж) КАК А
	               |ГДЕ
	               |	А.Ссылка <> &Ссылка";
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции