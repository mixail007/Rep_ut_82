
//-------------------------------------------------------------------------------------
//------процедуры и функции для учета Адресного хранения в ТЧ документов --------------
//------            Константы.ВестиАдресноеХранение = истина --------------------------
//-------------------------------------------------------------------------------------

Процедура ПроверитьЗаполнениеТабЧастиТоварыАдресноеХранение(Источник, Отказ) Экспорт
	Если НЕ Константы.ВестиАдресноеХранение.Получить() 
		или (Источник.Метаданные().Имя="ВнутреннееПеремещениеТоваров") 	Тогда // не нужна проверка, т.к. все склады адресные
		Возврат;
	КонецЕсли;
	
	//++++++++++++++ отменяем контроль для Оприходования и Списания ++++++++++++++++++++++++++++++++++
	//			!!!	ТОЛЬКО если они введены на основании Инвентаризации !!!
	Если ( (Источник.Метаданные().Имя="ОприходованиеТоваров" или Источник.Метаданные().Имя="СписаниеТоваров")
		и ЗначениеЗаполнено(Источник.ИнвентаризацияТоваровНаСкладе) 
		) тогда
		Возврат;
	КонецЕсли;
	
	
	СтруктураОбязательныхПолей=Новый Структура("Номенклатура,Склад,АдресХранения,Количество");
	
	// если адр.хранение не заполно, то не проверяем заполнение полей!
	Если Источник.ТоварыАдресноеХранение.Количество()>0 тогда
		ПроверитьЗаполнениеТабличнойЧасти(Источник, "ТоварыАдресноеХранение", СтруктураОбязательныхПолей, Отказ, "");
	КонецЕсли;	
	
	Если  Отказ Тогда Возврат КонецЕсли;
	
	
	Если Источник.Метаданные().Имя <> "ТребованиеНакладная" Тогда
		
		Если Источник.ТоварыАдресноеХранение.Количество() > 0 ИЛИ Источник.Товары.Количество() > 0 Тогда
			Запрос=Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
			
			Если Источник.Метаданные().Имя="СписаниеТоваров" Тогда
				Если Не Источник.Склад.АдресноеХранение И Источник.ТоварыАдресноеХранение.Количество()=0 Тогда 
					Возврат; // склад без адресного хранения
					
				Иначе
					Запрос.Текст="ВЫБРАТЬ
					             |	ЕСТЬNULL(ТоварыАдресноеХранение.Номенклатура, Товары.Номенклатура) КАК Номенклатура,
					             |	ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0) КАК КоличествоПоАдресам,
					             |	ЕСТЬNULL(Товары.Количество, 0) КАК Количество
					             |ИЗ
					             |	(ВЫБРАТЬ
					             |		ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
					             |		СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
					             |		ПоступлениеТоваровУслугТовары.Склад КАК Склад
					             |	ИЗ
					             |		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
					             |	ГДЕ
					             |		ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
					             |		И ПоступлениеТоваровУслугТовары.Склад.АдресноеХранение = ИСТИНА
					             |	
					             |	СГРУППИРОВАТЬ ПО
					             |		ПоступлениеТоваровУслугТовары.Номенклатура,
					             |		ПоступлениеТоваровУслугТовары.Склад) КАК Товары
					             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					             |			ПоступлениеТоваровУслугТоварыАдресноеХранение.Номенклатура КАК Номенклатура,
					             |			СУММА(ПоступлениеТоваровУслугТоварыАдресноеХранение.Количество) КАК Количество,
					             |			ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад КАК Склад
					             |		ИЗ
					             |			Документ.ПоступлениеТоваровУслуг.ТоварыАдресноеХранение КАК ПоступлениеТоваровУслугТоварыАдресноеХранение
					             |		ГДЕ
					             |			ПоступлениеТоваровУслугТоварыАдресноеХранение.Ссылка = &Ссылка
					             |		
					             |		СГРУППИРОВАТЬ ПО
					             |			ПоступлениеТоваровУслугТоварыАдресноеХранение.Номенклатура,
					             |			ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад) КАК ТоварыАдресноеХранение
					             |		ПО (ТоварыАдресноеХранение.Номенклатура = Товары.Номенклатура)
					             |			И (ТоварыАдресноеХранение.Склад = Товары.Склад)
					             |ГДЕ
					             |	ЕСТЬNULL(Товары.Количество, 0) <> ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0)";
					
					Запрос.Текст=СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг",Источник.Метаданные().Имя);
					Запрос.УстановитьПараметр("Склад", Источник.Склад);
					Результат=Запрос.Выполнить();
					
					Если НЕ Результат.Пустой() Тогда
						Выборка=Результат.Выбрать();
						
						Пока Выборка.Следующий() Цикл
							СообщитьОбОшибке("Несоответствие по товару : " +Строка(Выборка.Номенклатура.Код) +"."+ Строка(Выборка.Номенклатура.Наименование)  +" (Товары)= "+Строка(Выборка.Количество)+ ", (Адреса хранения)="+Строка(Выборка.КоличествоПоАдресам) , Отказ);
						КонецЦикла;	
						
					КонецЕсли;	
					
				КонецЕсли;
				
			иначеЕсли Источник.Метаданные().Имя="ОприходованиеТоваров" Тогда
				
				Если Не Источник.Склад.АдресноеХранение И Источник.ТоварыАдресноеХранение.Количество()=0 Тогда 
					Возврат; // склад без адресного хранения
					
				Иначе
					Запрос.Текст="ВЫБРАТЬ
					|	ЕСТЬNULL(ТоварыАдресноеХранение.Номенклатура, Товары.Номенклатура) КАК Номенклатура,
					|	ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0) КАК КоличествоПоАдресам,
					|	ЕСТЬNULL(Товары.Количество, 0) КАК Количество
					|ИЗ
					|	(ВЫБРАТЬ
					|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Номенклатура КАК Номенклатура,
					|		СУММА(ПоступлениеТоваровУслугТоварыАдресноеХранение.Количество) КАК Количество,
					|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад КАК Склад
					|	ИЗ
					|		Документ.ПоступлениеТоваровУслуг.ТоварыАдресноеХранение КАК ПоступлениеТоваровУслугТоварыАдресноеХранение
					|	ГДЕ
					|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Ссылка = &Ссылка
					|		И ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад = &Склад
					|	
					|	СГРУППИРОВАТЬ ПО
					|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Номенклатура,
					|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад) КАК ТоварыАдресноеХранение
					|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					|			ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
					|			СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
					|			ПоступлениеТоваровУслугТовары.Склад КАК Склад
					|		ИЗ
					|			Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
					|		ГДЕ
					|			ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
					|		
					|		СГРУППИРОВАТЬ ПО
					|			ПоступлениеТоваровУслугТовары.Номенклатура,
					|			ПоступлениеТоваровУслугТовары.Склад) КАК Товары
					|		ПО ТоварыАдресноеХранение.Номенклатура = Товары.Номенклатура
					|ГДЕ
					|	ЕСТЬNULL(Товары.Количество, 0) <> ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0)";
					
					Запрос.Текст=СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг",Источник.Метаданные().Имя);
					Запрос.УстановитьПараметр("Склад", Источник.Склад);
					Результат=Запрос.Выполнить();
					
					Если НЕ Результат.Пустой() Тогда
						Выборка=Результат.Выбрать();
						
						Пока Выборка.Следующий() Цикл
							СообщитьОбОшибке("Несоответствие по товару : " +Строка(Выборка.Номенклатура.Код) +"."+ Строка(Выборка.Номенклатура.Наименование)  +" (Товары)= "+Строка(Выборка.Количество)+ ", (Адреса хранения)="+Строка(Выборка.КоличествоПоАдресам) , Отказ);
						КонецЦикла;	
						
					КонецЕсли;	
					
				КонецЕсли;
				
				// проверка действует для всех документов, кроме оприходования, списания и перемещения
				// в перемещении, если  ЗначениеЗаполнено(Источник.ВнутреннийЗаказ) - то склады-отправители в таб.части, 
				// значит -проверку делаем
			ИначеЕсли Источник.Метаданные().Имя<>"ПеремещениеТоваров"  Тогда 
				
				//=============================================================================================
				вТЧАдресаЕстьСтроки = (Источник.ТоварыАдресноеХранение.Количество()>0);
				
				вТЧТоварыЕсть5000 = ложь;
				//ТЧТовары = Источник.Товары.выгрузить();
				//ТЧТовары.свернуть("Склад"); //различные склады
				Для каждого стр1 из Источник.Товары цикл
					Если стр1.Склад=справочники.Склады.ПустаяСсылка() тогда
						#Если Клиент тогда
							Если вТЧАдресаЕстьСтроки или Источник.Склад.АдресноеХранение тогда
								сообщить("В строке № "+строка(стр1.НомерСтроки)+" Табличной части ""Товары"" -незаполнено поле ""Склад"". Это недопустимо при работе с Адресным хранением! Заполните склад", СтатусСообщения.Внимание);
							КонецЕсли;	
						#КонецЕсли
					иначе
						попытка // не у всех документов есть Склад в ТЧ
							Если стр1.Склад.АдресноеХранение тогда
								вТЧТоварыЕсть5000 = истина; 
								Прервать;
							КонецЕсли;
						Исключение
						КонецПопытки;
					КонецЕсли;
				КонецЦикла;	
				
				Если НЕ вТЧТоварыЕсть5000 И НЕ вТЧАдресаЕстьСтроки Тогда 
					Возврат; // склад без адресного хранения, сравнивать нечего!
				КонецЕсли;	
				
				Если (вТЧТоварыЕсть5000 И НЕ вТЧАдресаЕстьСтроки) тогда
					#Если Клиент тогда
						сообщить("  Недостаточно данных по Табличной части ""Адресное хранение""!", СтатусСообщения.Внимание);
					#КонецЕсли
					Отказ=истина; возврат;
				иначеЕсли (НЕ вТЧТоварыЕсть5000 И вТЧАдресаЕстьСтроки) тогда
					#Если Клиент тогда
						сообщить("  Недостаточно данных по Табличной части ""Товары"" при наличии данных по ""Адресному хранению""!", СтатусСообщения.Внимание);
					#КонецЕсли
					Отказ=истина; возврат;
				КонецЕсли;
				//=============================================================================================
				//+++ 11.02.2015 - добавлена группировка по Товары - Номенклатура (бывают повторения товара!)
				Запрос.Текст="ВЫБРАТЬ
				|	ЕСТЬNULL(ТоварыАдресноеХранение.Номенклатура, Товары.Номенклатура) КАК Номенклатура,
				|	ЕСТЬNULL(ТоварыАдресноеХранение.Склад, Товары.Склад) КАК Склад,
				|	ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0) КАК КоличествоПоАдресам,
				|	ЕСТЬNULL(Товары.Количество, 0) КАК Количество,
				|	Товары.НомерСтроки,
				|	Товары.КолСтрок
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Номенклатура КАК Номенклатура,
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад КАК Склад,
				|		СУММА(ПоступлениеТоваровУслугТоварыАдресноеХранение.Количество) КАК Количество
				|	ИЗ
				|		Документ.ПоступлениеТоваровУслуг.ТоварыАдресноеХранение КАК ПоступлениеТоваровУслугТоварыАдресноеХранение
				|	ГДЕ
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Ссылка = &Ссылка
				|		И ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад.АдресноеХранение
				|	
				|	СГРУППИРОВАТЬ ПО
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Номенклатура,
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад) КАК ТоварыАдресноеХранение
				|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
				|			ПоступлениеТоваровУслугТовары.Склад КАК Склад,
				|			СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
				//+++ 11.02.2015 - первая строка и количество различных строк...
				|			МИНИМУМ(ПоступлениеТоваровУслугТовары.НомерСтроки) КАК НомерСтроки,
				|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПоступлениеТоваровУслугТовары.НомерСтроки) КАК КолСтрок
				|		ИЗ
				|			Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
				|		ГДЕ
				|			ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
				|			И ПоступлениеТоваровУслугТовары.Склад.АдресноеХранение
				|		
				|		СГРУППИРОВАТЬ ПО
				|			ПоступлениеТоваровУслугТовары.Номенклатура,
				|			ПоступлениеТоваровУслугТовары.Склад) КАК Товары
				|		ПО ТоварыАдресноеХранение.Номенклатура = Товары.Номенклатура
				|			И ТоварыАдресноеХранение.Склад = Товары.Склад
				|ГДЕ
				|	ЕСТЬNULL(Товары.Количество, 0) <> ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0)
				|АВТОУПОРЯДОЧИВАНИЕ";
				
				Запрос.Текст=СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг",Источник.Метаданные().Имя);	
				
				Результат=Запрос.Выполнить();
				
				Если НЕ Результат.Пустой() Тогда
					Выборка=Результат.Выбрать();
					
					Пока Выборка.Следующий() Цикл //+++ 11.02.2015 если товар поаторяется в Товарах  - есть 2 строки...
						СообщитьОбОшибке("Несоответствие количества для " +?(Выборка.КолСтрок=1,"строки № "+Строка(Выборка.НомерСтроки), Строка(Выборка.КолСтрок)+" строк (первая № "+Строка(Выборка.НомерСтроки)+")")
						+" табл.'Товары': "+Строка(Выборка.Номенклатура.Код) +" ) "+ Строка(Выборка.Номенклатура.Наименование) +" по складу: "+Строка(Выборка.Склад) +" . (Товары)= "+Строка(Выборка.Количество)+ " , (Адреса хранения)= "+Строка(Выборка.КоличествоПоАдресам) , Отказ);
					КонецЦикла;	
					
					Отказ = истина;	
				КонецЕсли;	
				
				// перемещение, где один из складов с адресным хранением
				// складОтправитель и СкладПолучатель в шапке
				
			ИначеЕсли  Источник.Метаданные().Имя="ПеремещениеТоваров" 
				//И (Источник.СкладОтправитель.АдресноеХранение ИЛИ Источник.СкладПолучатель.АдресноеХранение) 
				тогда //НЕ обязательно склад = 5000!
				
				//================================Проверки условий===========================================
				вТЧАдресаЕстьСтроки = (Источник.ТоварыАдресноеХранение.Количество()>0);
				
				вТЧТоварыЕсть5000 = ложь;
				//ТЧТовары = Источник.Товары.выгрузить();
				//ТЧТовары.свернуть("Склад"); //различные склады
				Для каждого стр1 из Источник.Товары цикл
					Если стр1.Склад=справочники.Склады.ПустаяСсылка() тогда
						#Если Клиент тогда
							Если вТЧАдресаЕстьСтроки 
								или (не Источник.СкладОтправитель.ЭтоГруппа и  //+++ 28.04.2015
								Источник.СкладОтправитель.АдресноеХранение) 
								ИЛИ (не Источник.СкладПолучатель.ЭтоГруппа  и 
								Источник.СкладПолучатель.АдресноеХранение) тогда
								сообщить("В строке № "+строка(стр1.НомерСтроки)+" Табличной части ""Товары"" - незаполнено поле ""Склад"". Это недопустимо при Адресном хранении!", СтатусСообщения.Внимание);
							КонецЕсли;	
						#КонецЕсли
					иначеЕсли стр1.Склад.АдресноеХранение тогда
						вТЧТоварыЕсть5000 = истина; 
						Прервать;
					КонецЕсли;
				КонецЦикла;	
				
				//------------Склад отправитель в ТЧТовары - определяется наличием ВнутреннегоЗаказа!---------------------
				//-----------иначе в ТЧТовары - склад-получатель ---------------------------------------------------------
				складОтправительВТЧТовары = ЗначениеЗаполнено(Источник.ВнутреннийЗаказ);
				
				Если складОтправительВТЧТовары тогда
					Если вТЧТоварыЕсть5000 тогда  // 5000 это Отправитель!!!
						СвязатьПоСкладу=Истина; // склад получатель в табличной части Товары!!!
					иначе // 5000 это получатель!!!
						СвязатьПоСкладу=Ложь;
					КонецЕсли;
				иначе // Если НЕ складОтправительВТЧТовары тогда
					Если вТЧТоварыЕсть5000 тогда  // 5000 это Отправитель!!!
						СвязатьПоСкладу=Истина; // склад получатель в табличной части Товары!!!
					иначе // с какого-то склада на 5000 и 5000 - это получатель!!!
						СвязатьПоСкладу=Ложь;
					КонецЕсли;
				КонецЕсли;	
				
				НужноПроверятьСоответствиеТоварыАдреса = вТЧАдресаЕстьСтроки или вТЧТоварыЕсть5000
				или (не Источник.СкладОтправитель.ЭтоГруппа и Источник.СкладОтправитель.АдресноеХранение) //+++ 28.04.2015
				или (не Источник.СкладПолучатель.ЭтоГруппа и Источник.СкладПолучатель.АдресноеХранение);
				
				Если НужноПроверятьСоответствиеТоварыАдреса Тогда
					Если Источник.СкладОтправитель.АдресноеХранение и Источник.СкладПолучатель.АдресноеХранение тогда
						СообщитьОбОшибке ("Для перемещения с одного адресного склада на другой адресный склад - нужен документ ""Внутреннее перемещение"".");
						//Отказ = истина;				
						Отказ = не РольДоступна("ПравоЗавершенияРаботыПользователей");   //22.05.2017 IT-отдел!
						Возврат;
					КонецЕсли;
					Если СвязатьПоСкладу тогда
						Если (вТЧТоварыЕсть5000 и НЕ вТЧАдресаЕстьСтроки) 
							или (НЕ вТЧТоварыЕсть5000 и вТЧАдресаЕстьСтроки) тогда
							СообщитьОбОшибке ("Нет строк со складом адресного хранения!");
							//Отказ = истина;				
							Отказ = не РольДоступна("ПравоЗавершенияРаботыПользователей");   //22.05.2017 IT-отдел!
							Возврат;
						КонецЕсли;
					КонецЕсли;	
				иначе
					Возврат; //Это обычное перемещение, контроль Адресного хранения не требуется!
				КонецЕсли; 	
				
				Запрос.Текст="ВЫБРАТЬ
				|	ЕСТЬNULL(ТоварыАдресноеХранение.Номенклатура, Товары.Номенклатура) КАК Номенклатура,
				|	ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0) КАК КоличествоПоАдресам,
				|	ЕСТЬNULL(Товары.Количество, 0) КАК Количество
				|ИЗ
				|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Номенклатура КАК Номенклатура,
				|		СУММА(ПоступлениеТоваровУслугТоварыАдресноеХранение.Количество) КАК Количество,
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад КАК Склад
				|	ИЗ
				|		Документ.ПоступлениеТоваровУслуг.ТоварыАдресноеХранение КАК ПоступлениеТоваровУслугТоварыАдресноеХранение
				|	ГДЕ
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Ссылка = &Ссылка
				|	
				|	СГРУППИРОВАТЬ ПО
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Номенклатура,
				|		ПоступлениеТоваровУслугТоварыАдресноеХранение.Склад) КАК ТоварыАдресноеХранение
				|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
				|			ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
				|			СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
				|			ПоступлениеТоваровУслугТовары.Склад КАК Склад
				|		ИЗ
				|			Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
				|		ГДЕ
				|			ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
				|			//ОтборПоСкладу
				|		
				|		СГРУППИРОВАТЬ ПО
				|			ПоступлениеТоваровУслугТовары.Номенклатура,
				|			ПоступлениеТоваровУслугТовары.Склад) КАК Товары
				|		ПО ТоварыАдресноеХранение.Номенклатура = Товары.Номенклатура
				|			//СвязьПоСкладу
				|ГДЕ
				|	ЕСТЬNULL(Товары.Количество, 0) <> ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0)";
				
				Если СвязатьПоСкладу тогда						 
					Запрос.Текст=СтрЗаменить(Запрос.Текст, "//ОтборПоСкладу", "И ПоступлениеТоваровУслугТовары.Склад.АдресноеХранение");
					Запрос.Текст=СтрЗаменить(Запрос.Текст, "//СвязьПоСкладу", "И ТоварыАдресноеХранение.Склад = Товары.Склад");
				КонецЕсли;	
				
				Запрос.Текст=СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг",Источник.Метаданные().Имя);
				
				Результат=Запрос.Выполнить();
				
				Если НЕ Результат.Пустой() Тогда
					Выборка=Результат.Выбрать();
					
					Пока Выборка.Следующий() Цикл
						СообщитьОбОшибке("Несоответствие по товару: " +Строка(Выборка.Номенклатура.Код) +"."+ Строка(Выборка.Номенклатура.Наименование)  +" (Товары)= "+Строка(Выборка.Количество)+ ", (Адреса хранения)="+Строка(Выборка.КоличествоПоАдресам) , Отказ);
					КонецЦикла;	
					
				КонецЕсли;	
				
				
			КонецЕсли;			 
		КонецЕсли;
		
	ИначеЕсли Источник.Метаданные().Имя = "Требованиенакладная" Тогда
		
		Если Источник.ТоварыАдресноеХранение.Количество() > 0 ИЛИ Источник.Материалы.Количество() > 0 Тогда
			Запрос=Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
			
			Запрос.Текст="ВЫБРАТЬ
			|	ЕСТЬNULL(ТоварыАдресноеХранение.Номенклатура, Товары.Номенклатура) КАК Номенклатура,
			|	ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0) КАК КоличествоПоАдресам,
			|	ЕСТЬNULL(Товары.Количество, 0) КАК Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТребованиеНакладнаяМатериалы.Номенклатура КАК Номенклатура,
			|		СУММА(ТребованиеНакладнаяМатериалы.Количество) КАК Количество,
			|		ТребованиеНакладнаяМатериалы.Склад КАК Склад
			|	ИЗ
			|		Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
			|	ГДЕ
			|		ТребованиеНакладнаяМатериалы.Ссылка = &Ссылка
			|		И ТребованиеНакладнаяМатериалы.Склад.АдресноеХранение = ИСТИНА
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ТребованиеНакладнаяМатериалы.Номенклатура,
			|		ТребованиеНакладнаяМатериалы.Склад) КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТребованиеНакладнаяТоварыАдресноеХранение.Номенклатура КАК Номенклатура,
			|			СУММА(ТребованиеНакладнаяТоварыАдресноеХранение.Количество) КАК Количество,
			|			ТребованиеНакладнаяТоварыАдресноеХранение.Склад КАК Склад
			|		ИЗ
			|			Документ.ТребованиеНакладная.ТоварыАдресноеХранение КАК ТребованиеНакладнаяТоварыАдресноеХранение
			|		ГДЕ
			|			ТребованиеНакладнаяТоварыАдресноеХранение.Ссылка = &Ссылка
			|		
			|		СГРУППИРОВАТЬ ПО
			|			ТребованиеНакладнаяТоварыАдресноеХранение.Номенклатура,
			|			ТребованиеНакладнаяТоварыАдресноеХранение.Склад) КАК ТоварыАдресноеХранение
			|		ПО ТоварыАдресноеХранение.Номенклатура = Товары.Номенклатура
			|			И ТоварыАдресноеХранение.Склад = Товары.Склад
			|ГДЕ
			|	ЕСТЬNULL(Товары.Количество, 0) <> ЕСТЬNULL(ТоварыАдресноеХранение.Количество, 0)";
			
			Запрос.УстановитьПараметр("Склад", Источник.Склад);
			Результат=Запрос.Выполнить();
			
			Если НЕ Результат.Пустой() Тогда
				Выборка=Результат.Выбрать();
				
				Пока Выборка.Следующий() Цикл
					СообщитьОбОшибке("Несоответствие по товару : " +Строка(Выборка.Номенклатура.Код) +"."+ Строка(Выборка.Номенклатура.Наименование)  +" (Товары)= "+Строка(Выборка.Количество)+ ", (Адреса хранения)="+Строка(Выборка.КоличествоПоАдресам) , Отказ);
				КонецЦикла;	
				
			КонецЕсли;	
			
		КонецЕсли;

	КонецЕсли;
КонецПроцедуры

Процедура ДвиженияПоРегиструТоварыАдресноеХранение(ДвиженияСсылка, Объект)  Экспорт
	
	Если НЕ Константы.ВестиАдресноеХранение.Получить() 
	или (Объект.ТоварыАдресноеХранение.Количество()=0) Тогда  // нет строк - движение не надо делать
		Возврат 
	КонецЕсли;

	    НаборДвижений = ДвиженияСсылка;

		ТаблицаАдресноеХранение = Объект.ТоварыАдресноеХранение.Выгрузить();
		
		// Получим таблицу значений, совпадающую со структутрой набора записей регистра.
		ТаблицаДвижений = НаборДвижений.Выгрузить();
		ТаблицаДвижений.Очистить();

		// Заполним таблицу движений.
		ЗагрузитьВТаблицуЗначений(ТаблицаАдресноеХранение, ТаблицаДвижений);

		// Недостающие поля.
		

		НаборДвижений.мПериод            = Объект.Дата;
		НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;

		мВидДокумента=Объект.Метаданные().Имя;
		
		Если мВидДокумента="ПоступлениеТоваровУслуг" ИЛИ мВидДокумента ="ОприходованиеТоваров"
			 ИЛИ мВидДокумента="ВозвратТоваровОтПокупателя"
			 ИЛИ(мВидДокумента="ОперацияПоОтветственномуХранению" И Объект.ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.Поступление ) Тогда
			
			НаборДвижений.ВыполнитьПриход();
			
		ИначеЕсли мВидДокумента="РеализацияТоваровУслуг" ИЛИ мВидДокумента ="СписаниеТоваров" 
			ИЛИ мВидДокумента ="ТребованиеНакладная"
			ИЛИ мВидДокумента="ВозвратТоваровПоставщику"
			ИЛИ(мВидДокумента="ОперацияПоОтветственномуХранению" И Объект.ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.Списание) Тогда
			
			НаборДвижений.ВыполнитьРасход();
			
		ИначеЕсли   ( мВидДокумента="ПеремещениеТоваров" //+++ 24.01.2013 - внутренний заказ может быть!!!
					//И ЗначениеНеЗаполнено(Объект.ВнутреннийЗаказ)
				    )  Тогда
					
			//+++ 12.02.2012 - переработаны правила для необязательности Склада с АдресноеХранение=Истина в Шапке...
			
			 Если ЗначениеНеЗаполнено(Объект.ВнутреннийЗаказ) //И Объект.СкладПолучатель.АдресноеХранение  
				 и НЕ Объект.СкладОтправитель.АдресноеХранение тогда
				 
				 НаборДвижений.ВыполнитьПриход();
				 
			 иначе
			//Если ( ЗначениеЗаполнено(Объект.ВнутреннийЗаказ) и Объект.СкладОтправитель.АдресноеХранение) и НЕ Объект.СкладПолучатель.АдресноеХранение)
			//	 или 
			//	 (ЗначениеНеЗаполнено(Объект.ВнутреннийЗаказ)и Объект.СкладОтправитель.АдресноеХранение и НЕ Объект.СкладПолучатель.АдресноеХранение) Тогда  //+++ 24.01.2013 - склад отправитель в ТЧ!
				 
				 НаборДвижений.ВыполнитьРасход();
				
			 //иначеЕсли (Объект.СкладОтправитель.АдресноеХранение или Объект.СкладПолучатель.АдресноеХранение)
			 //	   или Объект.ТоварыАдресноеХранение.Количество()>0 тогда // если один из складов - адресный!
			 //   СообщитьОбОшибке("Движение по Адресному хранению для документа: "+строка(Объект)+" - не выполнено! Несоответствие поля ""Внутренний Заказ"" и Склад Отправитель/Получатель в Шапке документа!");
			КонецЕсли;
			
		КонецЕсли;

	
	
	КонецПроцедуры	
	
	
Процедура КонтрольОстатковАдресноеХранение(ДокументСсылка, Отказ) Экспорт

	//+++( 14.11.2017 работает уже давно и отменять не собираемся!
	//Если НЕ Константы.ВестиАдресноеХранение.Получить() Тогда Возврат КонецЕсли;
	комуМожно = РольДоступна("ПравоЗавершенияРаботыПользователей");
	Для каждого стр1 из ДокументСсылка.ТоварыАдресноеХранение Цикл
		Если стр1.АдресХранения.Владелец <> стр1.Склад Тогда
			Отказ = НЕ комуМожно;
			#Если Клиент тогда
			сообщить( строка(стр1.НомерСтроки)+") Адрес ячейки: "+строка(стр1.АдресХранения)+" не принадлежит складу: "+строка(стр1.Склад), СтатусСообщения.Внимание );
			#КонецЕсли	
		
		ИначеЕсли стр1.АдресХранения.Пустая() Тогда
			Отказ = НЕ комуМожно;
			#Если Клиент тогда
			сообщить( строка(стр1.НомерСтроки)+") Адрес ячейки не заполнен!", СтатусСообщения.Внимание );
			#КонецЕсли	
			
		ИначеЕсли стр1.Склад.Пустая() Тогда
			Отказ = НЕ комуМожно;
			#Если Клиент тогда
			сообщить( строка(стр1.НомерСтроки)+") Склад не заполнен!", СтатусСообщения.Внимание );
			#КонецЕсли	
		КонецЕсли;	
	КонецЦикла;	
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	//+++)
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
 		Запрос.Текст= "ВЫБРАТЬ
 		              |	РеализацияАдресноеХранение.Номенклатура КАК Номенклатура,
 		              |	РеализацияАдресноеХранение.Склад КАК Склад,
 		              |	РеализацияАдресноеХранение.АдресХранения КАК АдресХранения,
 		              |	РеализацияАдресноеХранение.Количество КАК Количество,
 		              |	ЕСТЬNULL(ТоварыАдресноеХранениеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
 		              |ИЗ
 		              |	(ВЫБРАТЬ
 		              |		РеализацияТоваровУслугТоварыАдресноеХранение.Номенклатура КАК Номенклатура,
 		              |		РеализацияТоваровУслугТоварыАдресноеХранение.Склад КАК Склад,
 		              |		РеализацияТоваровУслугТоварыАдресноеХранение.АдресХранения КАК АдресХранения,
 		              |		СУММА(РеализацияТоваровУслугТоварыАдресноеХранение.Количество) КАК Количество
 		              |	ИЗ
 		              |		Документ.РеализацияТоваровУслуг.ТоварыАдресноеХранение КАК РеализацияТоваровУслугТоварыАдресноеХранение
 		              |	ГДЕ
 		              |		РеализацияТоваровУслугТоварыАдресноеХранение.Ссылка = &ДокументСсылка
 		              |	
 		              |	СГРУППИРОВАТЬ ПО
 		              |		РеализацияТоваровУслугТоварыАдресноеХранение.Номенклатура,
 		              |		РеализацияТоваровУслугТоварыАдресноеХранение.Склад,
 		              |		РеализацияТоваровУслугТоварыАдресноеХранение.АдресХранения) КАК РеализацияАдресноеХранение
 		              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыАдресноеХранение.Остатки(
 		              |				,
 		              |				Номенклатура В
 		              |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
 		              |						Документ.РеализацияТоваровУслуг.ТоварыАдресноеХранение.Номенклатура
 		              |					ИЗ
 		              |						Документ.РеализацияТоваровУслуг.ТоварыАдресноеХранение
 		              |					ГДЕ
 		              |						Документ.РеализацияТоваровУслуг.ТоварыАдресноеХранение.Ссылка = &ДокументСсылка)) КАК ТоварыАдресноеХранениеОстатки
 		              |		ПО РеализацияАдресноеХранение.Номенклатура = ТоварыАдресноеХранениеОстатки.Номенклатура
 		              |			И РеализацияАдресноеХранение.Склад = ТоварыАдресноеХранениеОстатки.Склад
 		              |			И РеализацияАдресноеХранение.АдресХранения = ТоварыАдресноеХранениеОстатки.АдресХранения
 		              |ГДЕ
 		              |	РеализацияАдресноеХранение.Количество > ЕСТЬNULL(ТоварыАдресноеХранениеОстатки.КоличествоОстаток, 0)";	
		
	имяДокумента = ДокументСсылка.Метаданные().Имя;	
	Если имяДокумента <> "РеализацияТоваровУслуг" тогда //+++ для любого документа!
		Запрос.Текст=СтрЗаменить(Запрос.Текст, "РеализацияТоваровУслуг", имяДокумента);
	КонецЕсли;
	
		Выборка = Запрос.Выполнить().Выбрать();
		
	Отказ = ложь;	
	Пока Выборка.Следующий() Цикл
        СообщитьОбОшибке("Остатка товара "+Строка(Выборка.Номенклатура.Код) +"."+ Строка(Выборка.Номенклатура.Наименование)+" не хватает на складе: "+ Строка(Выборка.Склад) +
		" по адресу: " +Строка(Выборка.АдресХранения)+" . В документе: "+Строка(Выборка.Количество)+" . На остатках: "+Строка(Выборка.КоличествоОстаток), Отказ);
		  //+" (Товары)= "+Строка(Выборка.Количество)+ ", (Адреса хранения)="+Строка(Выборка.КоличествоПоАдресам) , Отказ);
	Отказ = истина;	
	КонецЦикла;	

КонецПроцедуры
	
Функция СформироватьСтруктуруПолейТоварыАдресноеХранение() Экспорт

	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("Номенклатура"              , "Номенклатура");
	СтруктураПолей.Вставить("Склад"              , "Склад");
	СтруктураПолей.Вставить("АдресХранения"              , "АдресХранения");
	СтруктураПолей.Вставить("Количество"              , "Количество");

	Возврат СтруктураПолей;

КонецФункции // СформироватьСтруктуруПолейТовары()


Процедура ПроверитьСкладыАдресногоХраненияВФорме(Объект,Отказ) Экспорт
Если НЕ Константы.ВестиАдресноеХранение.Получить() Тогда Возврат КонецЕсли;
	
	Для каждого строкаАдресноеХранение ИЗ Объект.ТоварыАдресноеХранение Цикл
		Если ЗначениеНеЗаполнено(строкаАдресноеХранение.Склад) ИЛИ  НЕ строкаАдресноеХранение.Склад.АдресноеХранение Тогда
			СообщитьОбОшибке("В строке № "+ строкаАдресноеХранение.НомерСтроки + " должен быть установлен склад с адресным хранением", Отказ);
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	