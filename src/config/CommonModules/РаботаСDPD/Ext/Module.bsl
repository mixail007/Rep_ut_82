
процедура ОформитьЗаявкуВDPD(Заказ) Экспорт
	СоответствиеГородовПоставщиков=новый Соответствие;
	СоответствиеГородовПоставщиков.Вставить(Справочники.Контрагенты.ПустаяСсылка(),Справочники.Города.НайтиПоКоду("000006491"));//Яршинторг - Ярославль
	СоответствиеГородовПоставщиков.Вставить(Справочники.Контрагенты.НайтиПоКоду("94036  "),Справочники.Города.НайтиПоКоду("000005726"));//Яршинторг Екб- Екб
	СоответствиеГородовПоставщиков.Вставить(Справочники.Контрагенты.НайтиПоКоду("93187  "),Справочники.Города.НайтиПоКоду("000005273"));//Яршинторг Рнд- Рнд
	СоответствиеГородовПоставщиков.Вставить(Справочники.Контрагенты.НайтиПоКоду("П000835"),Справочники.Города.НайтиПоКоду("000006601"));//Яршинторг Спб- Спб
	СоответствиеГородовПоставщиков.Вставить(Справочники.Контрагенты.НайтиПоКоду("93870  "),Справочники.Города.НайтиПоКоду("000006533"));//Яршинторг Мск- Мск
	//СоответствиеГородовПоставщиков.Вставить(Справочники.Контрагенты.НайтиПоКоду("УТ0000345"),Справочники.Города.НайтиПоКоду("000006533"));//Пауэр Мск
	
	аббр =  ПолучитьАббревиатуры();
	ЗаказИМ=?(Заказ.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = Справочники.НаправленияПродаж.НайтиПоКоду("16"),истина,ложь);
	Префикс=?(ЗаказИМ,"KTY","YST");
	
	ОтправлятьДоки=ложь;
	Если истина и //ЗаказИМ и 
		//(Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребитель или	Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребительФЛ) 
		Заказ.Контрагент.КатегорияПокупателя <> Справочники.КатегорииПокупателей.ПосредникТК
		тогда 
		ОтправлятьДоки=истина;
	КонецЕсли;

	Данные = Новый Соответствие;
	Ошибка = ПодготовитьДанные(Заказ, Данные,ЗаказИМ,Префикс);
	
	Если Данные.Получить("DPDЗабираетПоАдресу") тогда
		КодУслуги="Д";
		Если СокрЛП(Данные.Получить("ПоставщикГород"))="" или СокрЛП(Данные.Получить("ПоставщикУлица"))="" и Данные.Получить("ПоставщикРегион")<>"Санкт-Петербург г" тогда
			Ошибка = Ошибка+" Не заполнен фактический адрес поставщика.";
		КонецЕсли;
	Иначе
		КодУслуги="Т";
		Если СокрЛП(Данные.Получить("ТерминалДПД"))="" тогда
			Ошибка = Ошибка+" Не заполнен код терминала забора.";
		КонецЕсли;
	КонецЕсли;
	Если Данные.получить("DPDВезетНаАдрес") тогда
		КодУслуги=КодУслуги+"Д";
		Если (СокрЛП(Данные.Получить("ПокупательГород"))="" и СокрЛП(Данные.Получить("НаселенныйПункт"))="") или СокрЛП(Данные.Получить("ПокупательУлица"))="" тогда
			Ошибка = Ошибка+" Не заполнен фактический адрес покупателя(улица или город).";
		КонецЕсли;
	Иначе
		КодУслуги=КодУслуги+"Т";
		Если СокрЛП(Данные.Получить("ПунктВыдачиКодDPD"))="" тогда
			Ошибка = Ошибка+" Не заполнен код терминала выдачи.";
		КонецЕсли;
	КонецЕсли;	
	
	ДатаОтправки = КолесаТут.ПолучитьДатуОтгрузкиЗаказа(ТекущаяДата(), Заказ).ДатаОтправки;
	ДатаОтправки=?(Заказ.ДатаОтгрузки>ДатаОтправки,Заказ.ДатаОтгрузки,ДатаОтправки);
		//ДатаОтправки=Заказ.Датаотгрузки;
	
	Если Ошибка ="" тогда
		Тариф= "";
		мТариф=СокрЛП(Данные.Получить("ТарифТК"));
		тзПараметрыТК=новый таблицаЗначений;
		тзПараметрыТК.Колонки.Добавить("ЗаказПоставщика");
		тзПараметрыТК.Колонки.Добавить("Заказ");
		тзПараметрыТК.Колонки.Добавить("Поле");
		тзПараметрыТК.Колонки.Добавить("Значение");
		
		ЗаписьXML = ПодготовитьШапкуXML(Данные,ДатаОтправки,аббр, ЗаказИМ,Заказ, тзПараметрыТК);
		
		//аббр= "";
		ЗаписьXML = ДобавитьЗаказВDPD(ЗаписьXML,Данные,КодУслуги,аббр,мТариф,тзПараметрыТК,Заказ,Префикс,ОтправлятьДоки);
		ЗаписьXML = ДополнитьЗаписьXML(ЗаписьXML);
		ТекстXML = ЗаписьXML.Закрыть();
		
		ИмяФайла=СокрЛП(Заказ.НомерВходящегоДокумента);
		
		Если ЗаказИМ тогда
			Попытка
				//#Если  клиент тогда
				//	имяФайла="C:\obm\"+имяФайла+"_ЗапросВТК.xml";
				//#Иначе
					имяФайла="D:\1C\KOLESATYT\"+имяФайла+"_ЗапросВТК.xml";
				//#КонецЕсли
				
				Файл = Новый ЗаписьТекста(ИмяФайла);
				Файл.ЗаписатьСтроку(ТекстXML);
				Файл.Закрыть();
			Исключение
			КонецПопытки;
		КонецЕсли;

		
		Попытка
			ЗаказОб = Заказ.получитьОбъект();
			
			//Если ЗаказОб.ДатаОтгрузки<ДатаОтправки тогда
				ЗаказОб.ДатаОтгрузки=ДатаОтправки;
			//КонецЕсли;
			
			ТабЧастьПараметрыТК=ЗаказОб.РеквизитыЗаказаТК;
			Для каждого стрЗ из тзПараметрыТК цикл
				ОбновитьРеквизитТК(ТабЧастьПараметрыТК,стрЗ.Поле, стрЗ.Значение);
			КонецЦикла;
			
			ЗаказОб.ОбменДанными.Загрузка = Истина;
			ЗаказОб.Записать(РежимзаписиДокумента.Запись);
		Исключение
			возврат;
		КонецПопытки;
		
		//Ответ = ОтправитьЗапросWEBСервису("http://wstest.dpd.ru:80/services/order2",ТекстXML); //тестовый ws
		Ответ = ОтправитьЗапросWEBСервису("http://ws.dpd.ru:80/services/order2",ТекстXML); //рабочий ws
		Если Ответ<>"" тогда
			Текст = новый ТекстовыйДокумент;
			Текст.ДобавитьСтроку(Ответ);
			ИмяФайла = ПолучитьИмяВременногоФайла("xml");
			Текст.Записать(ИмяФайла,"UTF-8 ");
			РазобратьXMLОтветCreateOrder(ИмяФайла,ЗаказОб);
		КонецЕсли;
		
		ЗаказОб.ОбменДанными.Загрузка = Истина;
		ЗаказОб.записать(РежимЗаписиДокумента.Запись);
		Сообщить("Статус заказа ДПД "+ЗаказОб.СтатусДПД);

		#Если клиент тогда
			Сообщить(Заказ);
		#КонецЕсли
		
	Иначе 
		ЗаказОб = Заказ.получитьОбъект();
		ОбновитьРеквизитТК(ЗаказОб.РеквизитыЗаказаТК,"Ошибка ДПД", Ошибка);
		ЗаказОб.записать(РежимЗаписиДокумента.Запись);
		#Если клиент тогда
			Сообщить(Ошибка);
		#Конецесли
		
	КонецЕсли;
	
конецпроцедуры

процедура ОформитьЗаявкуВПодорожник(Заказ) Экспорт
	тзПараметрыТК=новый таблицаЗначений;
	тзПараметрыТК.Колонки.Добавить("Поле");
	тзПараметрыТК.Колонки.Добавить("Значение");
	
	ТекстXML = ПодготовитьШапкуЗаказаПодорожник(Заказ,тзПараметрыТК);
	Если ТекстXML<>"" тогда
		ИмяФайла=СокрЛП(Заказ.НомерВходящегоДокумента);
		Попытка
			//#Если  клиент тогда
			//	имяФайла="C:\obm\"+имяФайла+"_ЗапросВТК.xml";
			//#Иначе
				имяФайла="D:\1C\KOLESATYT\"+имяФайла+"_ЗапросВТК.xml";
			//#КонецЕсли
			
			Файл = Новый ЗаписьТекста(ИмяФайла,КодировкаТекста.UTF8);
			Файл.ЗаписатьСтроку(ТекстXML);
			Файл.Закрыть();
		Исключение
		КонецПопытки;
		
		//Ответ = ОтправитьЗапросWEBСервису("http://podorojnikcrm.novene.ru/api/soap/index.php",ТекстXML); //тестовый ws
		Ответ = ОтправитьЗапросWEBСервису("http://crm.podorojnik.ru/api/soap/index.php",ТекстXML); //рабочий
		
		ДатаОтправки = КолесаТут.ПолучитьДатуОтгрузкиЗаказа(ТекущаяДата(), Заказ).ДатаОтправки;
	    ДатаОтправки=?(Заказ.ДатаОтгрузки>ДатаОтправки,Заказ.ДатаОтгрузки,ДатаОтправки);
		
		Если Ответ<>"" тогда
			Текст = новый ТекстовыйДокумент;
			Текст.ДобавитьСтроку(Ответ);
			ИмяФайла = ПолучитьИмяВременногоФайла("xml");
			Текст.Записать(ИмяФайла,"UTF-8 ");
			НомерЗаказаТК = РазобратьXMLОтветAddOrder(ИмяФайла);
			Если НомерЗаказаТК<>"" тогда
				ЗаказОб=Заказ.ПолучитьОбъект();
				
				//Если ЗаказОб.ДатаОтгрузки<ДатаОтправки тогда
					ЗаказОб.ДатаОтгрузки=ДатаОтправки;
				//КонецЕсли;
				
				ЗаказОб.СтатусДПД  = Перечисления.СтатусыЗаказовДПД.ДПДЗаказПодтвержден;
				ЗаказОб.НомерЗаказаТК  = НомерЗаказаТК;
				
				СтрокаОбласть = ЗаказОб.РеквизитыЗаказаТК.Найти("Region","Поле");
				Если СтрокаОбласть<>неопределено тогда
					Область = СтрокаОбласть.Значение;
				Иначе
					Область="ххх";
				КонецЕсли;
				
				Если Найти(нрег(Область),"ярославская")>0 или Найти(нрег(Область),"костромская")>0 тогда
					ЗаказОб.Комментарий = "Подтвержден; Подорожник(ЯО); "+ЗаказОб.Комментарий;
				Иначе
					ЗаказОб.Комментарий = "Подтвержден; Подорожник; "+ЗаказОб.Комментарий;
				КонецЕсли;
				
				Если Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребитель и СокрЛП(ЗаказОб.Подразделение.Код) = "00005" тогда  //если подтвержден и безнал и Ярославль тогда
					//попытка
						менеджерЗаписи = РегистрыСведений.КатегорииОбъектов.СоздатьМенеджерЗаписи();
						менеджерЗаписи.Объект=ЗаказОб.Ссылка;
						менеджерЗаписи.Категория = Справочники.КатегорииОбъектов.НайтиПоКоду("00043"); //Колеса тут
						менеджерЗаписи.Записать();
					//Исключение
					//КонецПопытки;
				КонецЕсли;
				
				нстр=ЗаказОб.РеквизитыЗаказаТК.Добавить();
				нстр.Поле="Номер заказа перевозчика";
				нстр.Значение=НомерЗаказаТК;
				
				ТабЧастьПараметрыТК=ЗаказОб.РеквизитыЗаказаТК;
				Для каждого стрЗ из тзПараметрыТК цикл
					ОбновитьРеквизитТК(ТабЧастьПараметрыТК,стрЗ.Поле, стрЗ.Значение);
				КонецЦикла;
				
				ЗаказОб.Записать(РежимЗаписиДокумента.Запись);
				
			КонецЕсли;
			#Если клиент тогда
				Сообщить(Заказ);
			#КонецЕсли
		Иначе
			#Если клиент тогда
				Сообщить("Ответ пустой: "+Заказ);
			#КонецЕсли
		КонецЕсли;
	Иначе
		ЗаказОб=Заказ.ПолучитьОбъект();	
		ЗаказОб.СтатусПеревозчика="Ошибка создания заказа";
		ЗаказОб.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
конецпроцедуры

Функция РазобратьXMLОтветAddOrder(ИмяФайла)
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяФайла);

	ЗаказыXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	Попытка
		Заказы = ЗаказыXDTO.Body.AddOrderResponse.return.ids;
		НомерЗаказаТК=Формат(Заказы.item,"ЧГ=0");
		Возврат НомерЗаказаТК;
	Исключение
		Возврат "";
	КонецПопытки;
КонецФункции

Функция ПодготовитьДанные(Заказ,Данные,ЗаказИМ,Префикс)
	Если ЗаказИМ тогда
		Номер = Заказ.НомерВходящегоДокумента;
		Данные.Вставить("НомерЗаказаПолный",Номер);
		Номер = СтрЗаменить(Номер,"ИМ","");
		
		Попытка
			Номер = Формат(Число(Номер),"ЧГ=0");
		Исключение
		КонецПопытки;

		Данные.Вставить("НомерЗаказа",Номер);
	иначе
		Данные.Вставить("НомерЗаказа",Заказ.Номер);
		Данные.Вставить("НомерЗаказаПолный",Заказ.Номер);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заказ.грузоотправитель) Тогда
		Данные.Вставить("ПоставщикКод",Заказ.грузоотправитель.Код);
		Данные.Вставить("Поставщик",Заказ.грузоотправитель);
		Если Заказ.Подразделение.Код = "00005" //головное 
			или Заказ.Подразделение.Код = "00138" //Обособленное подразделение Екатеринбург
			или Заказ.Подразделение.Код = "00122" //Подразделение Екатеринбург
			или Заказ.Подразделение.Код = "00112" //Подразделение Санкт-Петербург
			тогда			
			Данные.Вставить("DPDЗабираетПоАдресу",Истина);
		иначе
			Данные.Вставить("DPDЗабираетПоАдресу",ложь);
		конецЕсли;	
		
		отбор = Новый Структура();
		отбор.Вставить("Объект",Заказ.Грузоотправитель);
		Отбор.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.Адрес);
		если Данные.Получить("DPDЗабираетПоАдресу") Тогда
			Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
		иначе
			Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Терминал DPD"));
		конецЕсли;
		Адрес = РегистрыСведений.КонтактнаяИнформация.Получить(Отбор);
		Данные.Вставить("ПоставщикИндекс",Адрес.Поле1);
		Данные.Вставить("ПоставщикРегион",Адрес.Поле2);
		Данные.Вставить("ПоставщикРайон",Адрес.Поле3);
		Данные.Вставить("ПоставщикГород",Адрес.Поле4);
		Если Адрес.Поле2 = "Санкт-Петербург г" тогда
			Данные.Вставить("ПоставщикГород",Адрес.Поле2);
		КонецЕсли;
		Данные.Вставить("ПоставщикНаселенныйпункт",Адрес.Поле5);
		Данные.Вставить("ПоставщикУлица",Адрес.Поле6);
		Данные.Вставить("ПоставщикАббрУлицы","");
		Данные.Вставить("ПоставщикДом",Адрес.Поле7);
		Данные.Вставить("ПоставщикКорпус",Адрес.Поле8);
		Данные.Вставить("ПоставщикКвартира",Адрес.Поле9);
		Данные.Вставить("АдресПоставщикаПредставление",адрес.Представление);
		
		если Данные.Получить("DPDЗабираетПоАдресу") Тогда
			Данные.Вставить("ТерминалДПД","");
		иначе
			Данные.Вставить("ТерминалДПД",СокрЛП(Адрес.Комментарий));//когда мы везем до терминала
		конецЕсли;
		
		
	иначе
		Данные.Вставить("ПоставщикКод",Заказ.Организация.Код);
		Данные.Вставить("Поставщик",Заказ.Организация);
		Данные.Вставить("DPDЗабираетПоАдресу",Истина);
		
		отбор = Новый Структура();
		отбор.Вставить("Объект",Заказ.Организация);
		Отбор.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.Адрес);
		Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
		
		Адрес = РегистрыСведений.КонтактнаяИнформация.Получить(Отбор);
		Данные.Вставить("ПоставщикИндекс",Адрес.Поле1);
		Данные.Вставить("ПоставщикРегион",Адрес.Поле2);
		Данные.Вставить("ПоставщикРайон",Адрес.Поле3);
		Данные.Вставить("ПоставщикГород",Адрес.Поле4);
		Данные.Вставить("ПоставщикНаселенныйпункт",Адрес.Поле5);
		Данные.Вставить("ПоставщикУлица",Адрес.Поле6);
		Данные.Вставить("ПоставщикАббрУлицы","");
		Данные.Вставить("ПоставщикДом","3");
		Данные.Вставить("ПоставщикКорпус","2");
		Данные.Вставить("ПоставщикКвартира",Адрес.Поле9);
		Данные.Вставить("АдресПоставщикаПредставление",адрес.Представление);
		
	конецЕсли;
	табИнфо = Заказ.РеквизитыЗаказаТК.Выгрузить();
	
	тек = ПолучитьЗначениеРеквизитаТК(табинфо,"ContactFio","Грузополучатель");
	//тек =  табинфо.Найти("ContactFio");
	Данные.Вставить("Контрагент", тек.Значение);
	
	тек = ПолучитьЗначениеРеквизитаТК(табинфо,"ContactPhone","ТелефонКонтрагента"); ////
	//тек =  табинфо.Найти("ContactPhone");
	Данные.Вставить("ТелефонКонтрагента", тек.Значение);
	
	тек = ПолучитьЗначениеРеквизитаТК(табинфо,"ТарифТК","Услуга");
	//тек =  табинфо.Найти("ТарифТК");
	Если тек=неопределено тогда
		Данные.вставить("ТарифТК","PCL"); 
	иначе
		Данные.Вставить("ТарифТК", тек.Значение);
	КонецЕсли;
	
	тек = ПолучитьЗначениеРеквизитаТК(табинфо,"TerminalOrAddress","ТерминалИлиАдрес");
	//тек =  табинфо.Найти("TerminalOrAddress");
	Если тек=неопределено тогда
		Данные.Вставить("DPDВезетНаАдрес",истина);
	иначе
		Данные.Вставить("DPDВезетНаАдрес",не тек.Значение);
	КонецЕсли;
	
	Если не тек.значение Тогда //везем на адрес клиента
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"PostalCode","Индекс");
		//тек =  табинфо.Найти("PostalCode");
		Данные.Вставить("ПокупательИндекс", тек.Значение);
		АдресПокупателя = тек.Значение;
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"RegionId");
		//тек =  табинфо.Найти("RegionId");
		Если тек = неопределено тогда
			тек = табинфо.Найти("Region");
			Данные.Вставить("ПокупательРегион",тек.Значение);
		иначе
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	АдресныйКлассификатор.Наименование,
			|	АдресныйКлассификатор.Сокращение
			|ИЗ
			|	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
			|ГДЕ
			|	АдресныйКлассификатор.КодРегионаВКоде = &КодРегионаВКоде
			|	И АдресныйКлассификатор.ТипАдресногоЭлемента = 1";
			
			Запрос.УстановитьПараметр("КодРегионаВКоде", Число(тек.Значение));
			
			РезультатРег = Запрос.Выполнить().Выбрать();
			Если РезультатРег.Следующий() Тогда
				Данные.Вставить("ПокупательРегион",РезультатРег.наименование);
				АдресПокупателя =АдресПокупателя+ " "+ СокрЛП(РезультатРег.наименование)+ " "+СокрЛП(РезультатРег.сокращение);
			иначе	   
				ошибка ="По указанному коду региона регион не найден ";
			конецесли;	  
		КонецЕсли;
		Данные.Вставить("ПокупательРайон", "");
		Данные.Вставить("ПокупательНаселенныйПункт", "");
		Данные.Вставить("ПокупательКвартира", "");
		
		тек =  табинфо.Найти("CityId");
		Если тек = неопределено тогда
			тек = ПолучитьЗначениеРеквизитаТК(табинфо,"City","Город доставки");
			//тек =  табинфо.Найти("City");
			Данные.Вставить("ПокупательГород", тек.Значение);
			АдресПокупателя = АдресПокупателя+ ", "+ тек.Значение;
			
		иначе	
			город = Справочники.Города.НайтиПоРеквизиту("КодГорода",тек.Значение);
			АдресПокупателя = АдресПокупателя+ ", "+ СокрЛП(город);
			
			Если город <> Справочники.Города.Пустаяссылка() Тогда
				Данные.Вставить("ПокупательГород", город.Наименование);
				АдресПокупателя = АдресПокупателя+ ", г. "+ СокрЛП(город.Наименование);
			иначе
				ошибка ="Не найден город по переданному коду города DPD";
			конецЕсли;
		КонецЕсли;
		
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"Settlement");
		Данные.Вставить("НаселенныйПункт", тек.Значение);
		
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"StreetType","ПокупательАббрУлицы");
		//тек =  табинфо.Найти("StreetType");
		Данные.Вставить("ПокупательАббрУлицы", тек.Значение);
		АдресПокупателя = АдресПокупателя+ ", "+ СокрЛП(тек.Значение);
		
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"Street","ПокупательУлица");
		//тек =  табинфо.Найти("Street");
		Данные.Вставить("ПокупательУлица", тек.Значение);
		АдресПокупателя = АдресПокупателя+ " "+ СокрЛП(тек.Значение);
		
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"House","ПокупательДом");
		//тек =  табинфо.Найти("House");
		Данные.Вставить("ПокупательДом", тек.Значение);
		АдресПокупателя = АдресПокупателя+ ", д. "+ СокрЛП(тек.Значение);
		
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"BlockType","ПокупательКорпус");
		//тек =  табинфо.Найти("BlockType");
		Данные.Вставить("ПокупательКорпус", тек.Значение);
		Если тек.Значение <> "" тогда
			АдресПокупателя = АдресПокупателя+ " корпус "+ СокрЛП(тек.Значение);
		конецЕсли;
		
		
		Данные.Вставить("АдресПокупателяПредставление",АдресПокупателя);
		Данные.Вставить("ПунктВыдачиКодDPD", "");
		
	иначе //везем на адрес терминала
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"TerminalCode","ПунктВыдачиКодDPD");
		//тек =  табинфо.Найти("TerminalCode");
		Данные.Вставить("ПунктВыдачиКодDPD", тек.Значение);
		
		
		ПунктВыдачи = Справочники.ПунктыВыдачи.найтиПокоду(СокрЛП(тек.значение));
		Если ПунктВыдачи<> справочники.ПунктыВыдачи.ПустаяСсылка() Тогда
			отбор = Новый Структура();
			отбор.Вставить("Объект",ПунктВыдачи);
			Отбор.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.Адрес);
			Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Адрес терминала DPD"));
			
			Адрес = РегистрыСведений.КонтактнаяИнформация.Получить(Отбор);
			Данные.Вставить("ПокупательИндекс",Адрес.Поле1);
			Данные.Вставить("ПокупательРегион",Адрес.Поле2);
			Данные.Вставить("ПокупательРайон",Адрес.Поле3);
			Данные.Вставить("ПокупательГород",Адрес.Поле4);
			Данные.Вставить("ПокупательНаселенныйпункт",Адрес.Поле5);
			Данные.Вставить("ПокупательУлица",Адрес.Поле6);
			Данные.Вставить("ПокупательАббрУлицы","");
			Данные.Вставить("ПокупательДом",Адрес.Поле7);
			Данные.Вставить("ПокупательКорпус",Адрес.Поле8);
			Данные.Вставить("ПокупательКвартира",Адрес.Поле9);
			Данные.Вставить("АдресПокупателяПредставление",адрес.Представление);
		иначе
			ошибка = "Не найден пункт выдачи заказа";
		конецЕсли;	
		
	конецЕсли;
	
	тек = ПолучитьЗначениеРеквизитаТК(табинфо,"Адрес покупателя","");
	Если тек=неопределено тогда
		Данные.Вставить("Адрес покупателя", "");
	Иначе
		Данные.Вставить("Адрес покупателя", тек.Значение);
	КонецЕсли;
	
	тек = ПолучитьЗначениеРеквизитаТК(табинфо,"КлиентПлатитЗаДоставку","");
	Если тек=неопределено тогда
		Данные.Вставить("КлиентПлатитЗаДоставку", ложь);
	Иначе
		Данные.Вставить("КлиентПлатитЗаДоставку", тек.Значение);
	КонецЕсли;
	
	тек = ПолучитьЗначениеРеквизитаТК(табинфо,"Номер плательщика в DPD","");
	Если тек=неопределено тогда
		Данные.Вставить("Номер плательщика в DPD", "");
	Иначе
		Данные.Вставить("Номер плательщика в DPD", СокрЛП(тек.Значение));
	КонецЕсли;
	
	тек = ПолучитьЗначениеРеквизитаТК(табинфо,"Доставка за нал","");
	Если тек=неопределено тогда
		Данные.Вставить("Доставка за нал", ложь);
	Иначе
		Данные.Вставить("Доставка за нал", СокрЛП(тек.Значение));
	КонецЕсли;


	Вес =0;
	Объем = 0;
	Данные.Вставить("ПериодДоставки");  
	
	Если ЗаказИМ тогда
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"ОплаченБН");
		//тек =  табинфо.Найти("ОплаченБН");
		Данные.Вставить("ОплаченБН", тек.Значение);
		
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"DeliveryDate","ДатаДоставки");
		//тек =  табинфо.Найти("DeliveryDate");
		//Данные.Вставить("ДатаДоставки", Дата(тек.Значение));
		Данные.Вставить("ДатаДоставки", тек.Значение);
		
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"DeliveryTime","ВремяДоставки");
		//тек =  табинфо.Найти("DeliveryTime");
		Данные.Вставить("ВремяДоставки",тек.Значение);
		Данные.Вставить("ПериодДоставки",тек.Значение);
		
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"КурьерСТерминалом");
		//тек =  табинфо.Найти("КурьерСТерминалом");
		Данные.Вставить("КурьерСТерминалом",тек.Значение);
		
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"ContactPhone_Dop","ТелефонКонтрагентаЗапасной");
		//тек =  табинфо.Найти("ContactPhone_Dop");
		Данные.Вставить("ТелефонКонтрагентаЗапасной", тек.Значение);
		
		АдресПокупателяПредставление = ПолучитьПредставлениеАдресаПокупателя(Данные);
		Данные.Вставить("АдресПокупателяПредставление", АдресПокупателяПредставление);
	иначе
		тек = ПолучитьЗначениеРеквизитаТК(табинфо,"ОплаченБН");
		Если тек <> неопределено тогда
			Данные.Вставить("ОплаченБН", тек.Значение);
        Иначе
			Данные.Вставить("ОплаченБН",Ложь);
		КонецЕсли;
	КонецЕсли;	
	
	Для каждого стр из Заказ.Товары Цикл
		Размеры = ПолучитьРазмеры(стр.Номенклатура,стр.ЕдиницаИзмерения);
		//Размеры=новый Структура("weight,length,width,height");  
		Вес = Вес+ Размеры.weight*стр.Количество;//стр.ЕдиницаИзмерения.Вес*стр.Количество;
		Объем  = Объем+Размеры.volume*стр.Количество;//+(Размеры.length*Размеры.width*Размеры.height)*стр.Количество;
		//Сообщить("Объем:"+Объем+" "+стр.Номенклатура+" length:"+Размеры.length+" width:"+Размеры.width+" height:"+Размеры.height+" колво:"+стр.Количество);
	конецЦикла;
	
	
	Данные.Вставить("Вес",Вес );
	Данные.Вставить("Объем",Объем);
	Данные.Вставить("СтоимостьТоваров", Заказ.товары.итог("Сумма"));
	Данные.Вставить("СтоимостьУслуг", Заказ.услуги.итог("Сумма"));
	Данные.Вставить("Сумма", Заказ.суммаДокумента);
	
	
	Ошибка="";
	Возврат ошибка;
КонецФункции

Функция ПолучитьПредставлениеАдресаПокупателя(Данные)
	АдресПокупателяПредставление = "";
	
	Если СокрЛП(Данные.Получить("ПокупательИндекс"))<>"" тогда
		АдресПокупателяПредставление=Данные.Получить("ПокупательИндекс");
	КонецЕсли;
	Если СокрЛП(Данные.Получить("ПокупательРегион"))<>"" тогда
		АдресПокупателяПредставление=АдресПокупателяПредставление+", "+Данные.Получить("ПокупательРегион");
	КонецЕсли;
	Если СокрЛП(Данные.Получить("ПокупательРайон"))<>"" тогда
		АдресПокупателяПредставление=АдресПокупателяПредставление+", "+Данные.Получить("ПокупательРайон");
	КонецЕсли;
	Если СокрЛП(Данные.Получить("ПокупательГород"))<>"" тогда
		АдресПокупателяПредставление=АдресПокупателяПредставление+", "+Данные.Получить("ПокупательГород");
	КонецЕсли;
	Если СокрЛП(Данные.Получить("ПокупательНаселенныйпункт"))<>"" тогда
		АдресПокупателяПредставление=АдресПокупателяПредставление+", "+Данные.Получить("ПокупательНаселенныйпункт");
	КонецЕсли;
	Если СокрЛП(Данные.Получить("ПокупательУлица"))<>"" тогда
		АдресПокупателяПредставление=АдресПокупателяПредставление+", "+Данные.Получить("ПокупательУлица");
	КонецЕсли;
	Если СокрЛП(Данные.Получить("ПокупательАббрУлицы"))<>"" тогда
		АдресПокупателяПредставление=АдресПокупателяПредставление+" "+Данные.Получить("ПокупательАббрУлицы");
	КонецЕсли;
    Если СокрЛП(Данные.Получить("ПокупательДом"))<>"" тогда
		АдресПокупателяПредставление=АдресПокупателяПредставление+", "+Данные.Получить("ПокупательДом");
	КонецЕсли;
	Если СокрЛП(Данные.Получить("ПокупательКорпус"))<>"" тогда
		АдресПокупателяПредставление=АдресПокупателяПредставление+"корпус "+Данные.Получить("ПокупательКорпус");
	КонецЕсли;
    Если СокрЛП(Данные.Получить("ПокупательКвартира"))<>"" тогда
		АдресПокупателяПредставление=АдресПокупателяПредставление+"кв. "+Данные.Получить("ПокупательКвартира");
	КонецЕсли;

	возврат АдресПокупателяПредставление;
КонецФункции

Функция ПодготовитьШапкуXML(Выборка,ДатаОтправки,аббр,ЗаказИМ = ложь,Заказ, тзПараметрыТК)
	Если ЗаказИМ тогда
		// для тестового
		//ЛогинЯШТ="1001027795"; //ЯШТ
		//ПарольЯШТ = "182A17BD6FC5557D1FCA30FA1D56593EB21AEF88"; //ЯШТ
		// для рабочего
		ЛогинЯШТ="1007003132"; //ЯШТ
		ПарольЯШТ = "89CF47BC79EDDE98122968E978B4176783A774BC"; //ЯШТ
	иначе
		// для тестового
		//ЛогинЯШТ="1001027795"; //ЯШТ
		//ПарольЯШТ = "182A17BD6FC5557D1FCA30FA1D56593EB21AEF88"; //ЯШТ
		// для рабочего
		ЛогинЯШТ=""; //ЯШТ
		ПарольЯШТ = ""; //ЯШТ
		Если Заказ.Контрагент.DPD_clientNumber<>"" тогда
			ЛогинЯШТ=Заказ.Контрагент.DPD_clientNumber;
			ПарольЯШТ=Заказ.Контрагент.DPD_clientKey;
		КонецЕсли;
		#Если Клиент тогда
			Если ЛогинЯШТ="" тогда
				 ФормаВыбора = Справочники.КлиентскиеНомераDPD.ПолучитьФормуВыбора("ФормаВыбора"); 
    			 ФормаВыбора.Заголовок	= "Выберите клиентский номер";
    			 Выбрано = ФормаВыбора.ОткрытьМодально();
				 Если Выбрано<>неопределено тогда
				 	ЛогинЯШТ = СокрЛП(Выбрано.Код);
				 	ПарольЯШТ = СокрЛП(Выбрано.Ключ);
				 КонецЕсли;
			КонецЕсли;
		#КонецЕсли
	КонецЕсли;

	
	// для рабочего
	//ЛогинЯШТ="1007003275"; //ЯШТ
	//ПарольЯШТ = "6078E6EF054E13F442B4A46ADDE226628F946EDC"; //ЯШТ
	ИмяФайла=КаталогВременныхФайлов()+"DPD.xml"; // на сервере - своя папка...
	
	ЗаписьXML = Новый ЗаписьXML;
	//ЗаписьXML.ОткрытьФайл(ИмяФайла, "UTF-8");
	//ЗаписьXML.ЗаписатьОбъявлениеXML();  //<?xml version="1.0"?>
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Envelope");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soap", "http://schemas.xmlsoap.org/soap/envelope/");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:ns","http://dpd.ru/ws/order2/2012-04-04");
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Header");
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Body");
	ЗаписьXML.ЗаписатьНачалоЭлемента("ns:createOrder");
	ЗаписьXML.ЗаписатьНачалоЭлемента("orders");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("auth");
	//Если Выборка.ЗаказПокупателяОрганизация=ОрганизацияЯШТ тогда
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientNumber"); ЗаписьXML.ЗаписатьТекст(ЛогинЯШТ); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientKey"); ЗаписьXML.ЗаписатьТекст(ПарольЯШТ); ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ОбновитьРеквизитТК(тзПараметрыТК,"Клиентский номер DPD",ЛогинЯШТ);
	//иначе
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("clientNumber"); ЗаписьXML.ЗаписатьТекст(ЛогинАЭ); ЗаписьXML.ЗаписатьКонецЭлемента();
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("clientKey"); ЗаписьXML.ЗаписатьТекст(ПарольАЭ); ЗаписьXML.ЗаписатьКонецЭлемента();
	//КонецЕсли;
	ЗаписьXML.ЗаписатьКонецЭлемента();//auth
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("header");
	//Если Выборка.ДатаОтгрузки>ДатаОтправки тогда  //если заказ составной, для того что бы он пришел клиенту в один день, отправляем в дпд разными датами
	//	ДатаЗаказаДПД=Выборка.ДатаОтгрузки;
	//иначе
	ДатаЗаказаДПД=ДатаОтправки;
	//КонецЕсли;
	ЗаписьXML.ЗаписатьНачалоЭлемента("datePickup");	ЗаписьXML.ЗаписатьТекст(Формат(ДатаЗаказаДПД,"ДФ=yyyy-MM-dd")); ЗаписьXML.ЗаписатьКонецЭлемента();
	
	КлиентПлатит = выборка.получить("КлиентПлатитЗаДоставку");
	Если КлиентПлатит="" тогда
		КлиентПлатит = ложь;
	КонецЕсли;	
	
	НомерПлательщика = выборка.получить("Номер плательщика в DPD");
	Если НомерПлательщика = "" тогда
		   НомерПлательщика="1001028502";
	КонецЕсли;
	
	Если КлиентПлатит тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("payer");	ЗаписьXML.ЗаписатьТекст(НомерПлательщика); ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("senderAddress");
	ЗаписьXML.ЗаписатьНачалоЭлемента("name"); ЗаписьXML.ЗаписатьТекст("Яршинторг"); ЗаписьXML.ЗаписатьКонецЭлемента();
	
	Если не выборка.Получить("DPDЗабираетПоАдресу") тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("terminalCode"); ЗаписьXML.ЗаписатьТекст(""+Выборка.получить("ТерминалДПД")); ЗаписьXML.ЗаписатьКонецЭлемента(); //!!!
	КонецЕсли;	
	//Если выборка.DPDЗабираетПоАдресу тогда
	ЗаписьXML.ЗаписатьНачалоЭлемента("countryName"); ЗаписьXML.ЗаписатьТекст("Россия"); ЗаписьXML.ЗаписатьКонецЭлемента(); //!!!
	
	если  выборка.получить("ПоставщикИндекс") <>"" тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("index"); ЗаписьXML.ЗаписатьТекст(выборка.получить("ПоставщикИндекс")); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	КонецЕсли;
	
	если  выборка.Получить("ПоставщикРегион")<>"" тогда
		//ЗаписьXML.ЗаписатьНачалоЭлемента("region"); ЗаписьXML.ЗаписатьТекст(УбратьСокращениеИзРегиона(выборка.ПоставщикРегион,аббр)); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
		ЗаписьXML.ЗаписатьНачалоЭлемента("region"); ЗаписьXML.ЗаписатьТекст(выборка.Получить("ПоставщикРегион")); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("city"); ЗаписьXML.ЗаписатьТекст(СтрЗаменить(""+СтрЗаменить(""+Выборка.Получить("ПоставщикГород")," г","")," г","")); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	////ЗаписьXML.ЗаписатьНачалоЭлемента("street"); ЗаписьXML.ЗаписатьТекст(""+Выборка.ПоставщикУлица); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	////ЗаписьXML.ЗаписатьНачалоЭлемента("house"); ЗаписьXML.ЗаписатьТекст(""+Выборка.ПоставщикДом); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	////Если Выборка.ПоставщикКорпус<>"" тогда 
	////	ЗаписьXML.ЗаписатьНачалоЭлемента("houseKorpus"); ЗаписьXML.ЗаписатьТекст(""+Выборка.ПоставщикКорпус); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	////КонецЕсли;
	УлицаАббр = ПолучитьУлицуАббр(Выборка.получить("ПоставщикУлица"),аббр);
	если  УлицаАббр.Улица<>"" тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("street"); ЗаписьXML.ЗаписатьТекст(""+УлицаАббр.Улица); ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЕсли;
	если  Выборка.Получить("ПоставщикАббрУлицы")<>"" тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("streetAbbr"); ЗаписьXML.ЗаписатьТекст(""+СтрЗаменить(Выборка.Получить("ПоставщикАббрУлицы"),".","")); ЗаписьXML.ЗаписатьКонецЭлемента();
	ИначеЕсли  УлицаАббр.Аббр<>"" тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("streetAbbr"); ЗаписьXML.ЗаписатьТекст(""+УлицаАббр.Аббр); ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЕсли;
	ЗаписьXML.ЗаписатьНачалоЭлемента("house"); ЗаписьXML.ЗаписатьТекст(""+Выборка.Получить("ПоставщикДом")); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	Если Выборка.Получить("ПоставщикКорпус")<>"" тогда 
		ЗаписьXML.ЗаписатьНачалоЭлемента("houseKorpus"); ЗаписьXML.ЗаписатьТекст(""+Выборка.получить("ПоставщикКорпус")); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	КонецЕсли;
	//Иначе
	//	//ЗаписьXML.ЗаписатьНачалоЭлемента("name"); ЗаписьXML.ЗаписатьТекст("Яршинторг"); ЗаписьXML.ЗаписатьКонецЭлемента();
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("terminalCode"); ЗаписьXML.ЗаписатьТекст(""+Выборка.ТерминалДПД); ЗаписьXML.ЗаписатьКонецЭлемента(); //!!!
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("countryName"); ЗаписьXML.ЗаписатьТекст("Россия"); ЗаписьXML.ЗаписатьКонецЭлемента(); //!!!
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("city"); ЗаписьXML.ЗаписатьТекст("Ярославль"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("street"); ЗаписьXML.ЗаписатьТекст("Базовая"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("house"); ЗаписьXML.ЗаписатьТекст("3"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("houseKorpus"); ЗаписьXML.ЗаписатьТекст("а"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	
	//КонецЕсли;
	Если СокрЛП(Выборка.Получить("ПоставщикКод"))="93870" тогда //Москва
		ЗаписьXML.ЗаписатьНачалоЭлемента("contactFio"); ЗаписьXML.ЗаписатьТекст("Байструкова Дарья"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
		ЗаписьXML.ЗаписатьНачалоЭлемента("contactPhone"); ЗаписьXML.ЗаписатьТекст("89265229066"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
	Иначе
		//ЗаписьXML.ЗаписатьНачалоЭлемента("contactFio"); ЗаписьXML.ЗаписатьТекст("Щербаков Артем"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
		//ЗаписьXML.ЗаписатьНачалоЭлемента("contactPhone"); ЗаписьXML.ЗаписатьТекст("89301200749"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
		ЗаписьXML.ЗаписатьНачалоЭлемента("contactFio"); ЗаписьXML.ЗаписатьТекст("KOLESATYT"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???
		ЗаписьXML.ЗаписатьНачалоЭлемента("contactPhone"); ЗаписьXML.ЗаписатьТекст("88003338187"); ЗаписьXML.ЗаписатьКонецЭлемента(); //???

	КонецЕсли;
	ЗаписьXML.ЗаписатьКонецЭлемента();//senderAddress
	
	Если СокрЛП(Выборка.Получить("ПоставщикКод"))="93870" тогда  //Москва
		ЗаписьXML.ЗаписатьНачалоЭлемента("pickupTimePeriod"); ЗаписьXML.ЗаписатьТекст("9-14"); ЗаписьXML.ЗаписатьКонецЭлемента(); 
	Иначе
		ЗаписьXML.ЗаписатьНачалоЭлемента("pickupTimePeriod"); ЗаписьXML.ЗаписатьТекст("9-18"); ЗаписьXML.ЗаписатьКонецЭлемента(); 
	КонецЕсли;
	
	//Если ЗаказИМ и (Заказ.Подразделение.Код="00005" или Заказ.Подразделение=Справочники.Подразделения.ПустаяСсылка()) тогда //Ярославль
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("regularNum"); ЗаписьXML.ЗаписатьТекст("8562"); ЗаписьXML.ЗаписатьКонецЭлемента();	
	//КонецЕсли;
	//
	//Если Заказ.Подразделение.Код="00112" тогда //Питер
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("regularNum"); ЗаписьXML.ЗаписатьТекст("7587"); ЗаписьXML.ЗаписатьКонецЭлемента();	
	//КонецЕсли;
	
	Если ЛогинЯШТ = "1007003132" тогда
		Если Заказ.Подразделение.Код="00005" или Заказ.Подразделение=Справочники.Подразделения.ПустаяСсылка() тогда //Ярославль
			ЗаписьXML.ЗаписатьНачалоЭлемента("regularNum"); ЗаписьXML.ЗаписатьТекст("8562"); ЗаписьXML.ЗаписатьКонецЭлемента();	
		ИначеЕсли Заказ.Подразделение.Код="00112" тогда //Питер
			ЗаписьXML.ЗаписатьНачалоЭлемента("regularNum"); ЗаписьXML.ЗаписатьТекст("7587"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ИначеЕсли Заказ.Подразделение.Код="00138" тогда //Екат
			ЗаписьXML.ЗаписатьНачалоЭлемента("regularNum"); ЗаписьXML.ЗаписатьТекст("8430"); ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;
	
	//Если Выборка.ЗаказПокупателяОрганизация=ОрганизацияЯШТ тогда
	//Иначе
	//	Если ДатаЗаказаДПД<Дата("20160401")тогда
	//		Если СокрЛП(Выборка.ПоставщикКод)="УТ0000494" тогда //Екат
	//			ЗаписьXML.ЗаписатьНачалоЭлемента("regularNum"); ЗаписьXML.ЗаписатьТекст("8963"); ЗаписьXML.ЗаписатьКонецЭлемента(); 
	//		ИначеЕсли СокрЛП(Выборка.ПоставщикКод)="П000835" тогда //Питер
	//			ЗаписьXML.ЗаписатьНачалоЭлемента("regularNum"); ЗаписьXML.ЗаписатьТекст("8743"); ЗаписьXML.ЗаписатьКонецЭлемента(); 
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	ЗаписьXML.ЗаписатьКонецЭлемента();//header
	Возврат ЗаписьXML;
КонецФункции

Функция ДобавитьЗаказВDPD(Запись,Выборка,КодУслуги,аббр,Тариф,тзПараметрыТК,Заказ,Префикс = "YST",ОтправлятьДоки=ложь)
	СоответствиеПоставщиковКодДпд = ЗаполнитьСоответствиеПоставщиков();	
	//Важен порядок!!!!!!!!
	СоставПосылки = ПолучитьСоставПосылки(заказ,Префикс);
	Запись.ЗаписатьНачалоЭлемента("order");
	Запись.ЗаписатьНачалоЭлемента("orderNumberInternal"); Запись.ЗаписатьТекст(""+СокрЛП(Выборка.Получить("НомерЗаказаПолный"))+"_"+СокрЛП(Выборка.Получить("ПоставщикКод"))); Запись.ЗаписатьКонецЭлемента();
	Запись.ЗаписатьНачалоЭлемента("serviceCode"); Запись.ЗаписатьТекст(Тариф); Запись.ЗаписатьКонецЭлемента();
	
	пЗаказ=""+СокрЛП(Выборка.получить("НомерЗаказа"))+"_"+СокрЛП(Выборка.Получить("ПоставщикКод"));
	//пЗаказПоставщика =""+СокрЛП(Выборка.НомерЗаказаПоставщика);
	пЗаказПоставщика = "";                                                                                        
	//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"Услуга",Тариф,пЗаказПоставщика);
	ОбновитьРеквизитТК(тзПараметрыТК,"Услуга",Тариф);
	
	Запись.ЗаписатьНачалоЭлемента("serviceVariant"); Запись.ЗаписатьТекст(КодУслуги); Запись.ЗаписатьКонецЭлемента();  //ТТ:терминал - терминал или ТД: терминал-двери
	//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"Вариант доставки",КодУслуги,пЗаказПоставщика);
	ОбновитьРеквизитТК(тзПараметрыТК,"Вариант доставки",КодУслуги);

	
	Запись.ЗаписатьНачалоЭлемента("cargoNumPack"); Запись.ЗаписатьТекст(""+СоставПосылки.КоличествоМест); Запись.ЗаписатьКонецЭлемента();
	
	//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"Количество мест",""+СоставПосылки.КоличествоМест,пЗаказПоставщика);
	ОбновитьРеквизитТК(тзПараметрыТК,"Количество мест",СоставПосылки.КоличествоМест);
	//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"Адрес покупателя",Выборка.Получить("АдресПокупателяПредставление"),пЗаказПоставщика);
	ОбновитьРеквизитТК(тзПараметрыТК,"Адрес покупателя",Выборка.Получить("АдресПокупателяПредставление"));
	Если Выборка.Получить("Вес")>0 тогда
		Запись.ЗаписатьНачалоЭлемента("cargoWeight"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+Выборка.Получить("Вес"),",",".")," ","")); Запись.ЗаписатьКонецЭлемента();
		//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"Фактический вес",""+""+Выборка.Получить("Вес"),пЗаказПоставщика);
		ОбновитьРеквизитТК(тзПараметрыТК,"Фактический вес",""+Выборка.Получить("Вес"));
	КонецЕсли;
	Если Выборка.Получить("Объем")>0 тогда
		Запись.ЗаписатьНачалоЭлемента("cargoVolume"); Запись.ЗаписатьТекст(СтрЗаменить(""+Выборка.Получить("Объем"),",",".")); Запись.ЗаписатьКонецЭлемента();
	КонецЕсли;
	Запись.ЗаписатьНачалоЭлемента("cargoRegistered"); Запись.ЗаписатьТекст("false"); Запись.ЗаписатьКонецЭлемента();
	
	СтоимостьЗаказа=Выборка.получить("Сумма");//+Выборка.Получить("СтоимостьУслуг")*(Выборка.Получить("Сумма")/Выборка.Получить("СтоимостьТоваров"));
	СтоимостьЗаказа=Окр(СтоимостьЗаказа,0,РежимОкругления.Окр15как10);
	Запись.ЗаписатьНачалоЭлемента("cargoValue"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+СтоимостьЗаказа," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
	//Запись.ЗаписатьНачалоЭлемента("cargoValue"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+Выборка.Сумма," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
	//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"Объявленная ценность",""+СтоимостьЗаказа,пЗаказПоставщика);
	ОбновитьРеквизитТК(тзПараметрыТК,"Объявленная ценность",""+СтоимостьЗаказа);
	
	
	Запись.ЗаписатьНачалоЭлемента("cargoCategory"); Запись.ЗаписатьТекст(СоставПосылки.Состав); Запись.ЗаписатьКонецЭлемента();
	
	
	//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"Содержимое",""+СоставПосылки.Состав,пЗаказПоставщика);
	ОбновитьРеквизитТК(тзПараметрыТК,"Содержимое",""+СоставПосылки.Состав);
	Если СокрЛП(Выборка.Получить("ПериодДоставки"))<>"" тогда
		Запись.ЗаписатьНачалоЭлемента("deliveryTimePeriod"); Запись.ЗаписатьТекст(СокрЛП(СтрЗаменить(Выборка.Получить("ПериодДоставки")," ",""))); Запись.ЗаписатьКонецЭлемента();
	КонецЕсли;
	
	Попытка
		ДатаД = Дата(Выборка.Получить("ДатаДоставки"));
		ДатаД = Формат(ДатаД,"ДФ=dd.MM.yyyy");
	Исключение
		ДатаД = Дата(1,1,1);
	КонецПопытки;
	
	Если ЗначениеЗаполнено(ДатаД) тогда
		Запись.ЗаписатьНачалоЭлемента("extraParam"); //Запись.ЗаписатьТекст(СоставПосылки.Состав); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("name"); Запись.ЗаписатьТекст("desirable_date"); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("value"); Запись.ЗаписатьТекст(ДатаД); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьКонецЭлемента(); //extraParam
	КонецЕсли;
	
	//08.09.17
	КлиентПлатитЗаДоставку =  СокрЛП(Выборка.Получить("КлиентПлатитЗаДоставку"));
	ДоставкаЗаНал = выборка.получить("Доставка за нал");
	Если ДоставкаЗаНал="" тогда
		ДоставкаЗаНал = ложь;
	КонецЕсли;	
	
	Если КлиентПлатитЗаДоставку = "Да" и ДоставкаЗаНал тогда
		Запись.ЗаписатьНачалоЭлемента("paymentType"); Запись.ЗаписатьТекст("ОУП"); Запись.ЗаписатьКонецЭлемента();
    КонецЕсли;

	Запись.ЗаписатьНачалоЭлемента("receiverAddress");
	Запись.ЗаписатьНачалоЭлемента("name"); Запись.ЗаписатьТекст(""+Выборка.Получить("Контрагент")); Запись.ЗаписатьКонецЭлемента();
	//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"Грузополучатель",""+Выборка.Получить("Контрагент"),пЗаказПоставщика);
	ОбновитьРеквизитТК(тзПараметрыТК,"Грузополучатель",""+Выборка.Получить("Контрагент"));
	Если Выборка.Получить("DPDВезетНаАдрес")=Ложь тогда
		Запись.ЗаписатьНачалоЭлемента("terminalCode"); Запись.ЗаписатьТекст(""+Выборка.Получить("ПунктВыдачиКодDPD")); Запись.ЗаписатьКонецЭлемента();
	Иначе
		
		CountryCode = выборка.Получить("CountryCode");
		Если CountryCode = неопределено или CountryCode = "RU" тогда
			Страна = "Россия";
		ИначеЕсли CountryCode = "KZ" тогда
			Страна = "Казахстан";
		ИначеЕсли CountryCode = "BY" тогда
			Страна = "Белоруссия";
		ИначеЕсли CountryCode = "KG" тогда
			Страна = "Киргизия";
		Иначе
			Страна = "Россия";
		КонецЕсли;
		Запись.ЗаписатьНачалоЭлемента("countryName"); Запись.ЗаписатьТекст(Страна); Запись.ЗаписатьКонецЭлемента();
		
		если  выборка.получить("ПокупательИндекс") <>"" тогда
			Запись.ЗаписатьНачалоЭлемента("index"); Запись.ЗаписатьТекст(выборка.Получить("ПокупательИндекс")); Запись.ЗаписатьКонецЭлемента(); //???
		КонецЕсли;
		
		если  выборка.Получить("ПокупательРегион")<>"" тогда
			//Запись.ЗаписатьНачалоЭлемента("region"); Запись.ЗаписатьТекст(УбратьСокращениеИзРегиона(выборка.ПокупательРегион,аббр)); Запись.ЗаписатьКонецЭлемента(); //???
			Запись.ЗаписатьНачалоЭлемента("region"); Запись.ЗаписатьТекст(выборка.Получить("ПокупательРегион")); Запись.ЗаписатьКонецЭлемента(); //???
		КонецЕсли;
		
		
		ГородДоставки = Выборка.Получить("ПокупательГород");
		НаселенныйПунктДоставки = Выборка.Получить("НаселенныйПункт");
		Если НаселенныйПунктДоставки<>"" тогда 
			город = НаселенныйПунктДоставки;
		иначе
			город =  ГородДоставки;
		КонецЕсли;
		
		если  Выборка.Получить("ПокупательГород")<>"" тогда
			Запись.ЗаписатьНачалоЭлемента("city"); Запись.ЗаписатьТекст(СтрЗаменить(город," г","")); Запись.ЗаписатьКонецЭлемента();
			//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"Город доставки",СтрЗаменить(""+Выборка.получить("ПокупательГород")," г",""),пЗаказПоставщика);
			//ОбновитьРеквизитТК(тзПараметрыТК,"Город доставки",СтрЗаменить(""+Выборка.получить("ПокупательГород")," г",""));
		КонецЕсли;
		
				
		УлицаАббр = ПолучитьУлицуАббр(Выборка.Получить("ПокупательУлица"),аббр);
		если  УлицаАббр.Улица<>"" тогда
			Запись.ЗаписатьНачалоЭлемента("street"); Запись.ЗаписатьТекст(""+УлицаАббр.Улица); Запись.ЗаписатьКонецЭлемента();
		КонецЕсли;
		если  Выборка.получить("ПокупательАббрУлицы")<>"" тогда
			Запись.ЗаписатьНачалоЭлемента("streetAbbr"); Запись.ЗаписатьТекст(""+СтрЗаменить(Выборка.Получить("ПокупательАббрУлицы"),".","")); Запись.ЗаписатьКонецЭлемента();
		ИначеЕсли  УлицаАббр.Аббр<>"" тогда
			Запись.ЗаписатьНачалоЭлемента("streetAbbr"); Запись.ЗаписатьТекст(""+УлицаАббр.Аббр); Запись.ЗаписатьКонецЭлемента();
		КонецЕсли;
		
		если  Выборка.получить("ПокупательДом")<>"" тогда
			Запись.ЗаписатьНачалоЭлемента("house"); Запись.ЗаписатьТекст(""+Выборка.Получить("ПокупательДом")); Запись.ЗаписатьКонецЭлемента();
		КонецЕсли;
		если  Выборка.получить("ПокупательКорпус")<>"" тогда
			Запись.ЗаписатьНачалоЭлемента("houseKorpus"); Запись.ЗаписатьТекст(""+Выборка.Получить("ПокупательКорпус")); Запись.ЗаписатьКонецЭлемента();
		КонецЕсли;
		если  Выборка.получить("ПокупательКвартира")<>"" тогда
			Запись.ЗаписатьНачалоЭлемента("flat"); Запись.ЗаписатьТекст(""+Выборка.Получить("ПокупательКвартира")); Запись.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;
	
	Запись.ЗаписатьНачалоЭлемента("contactFio"); Запись.ЗаписатьТекст(""+Выборка.получить("Контрагент")); Запись.ЗаписатьКонецЭлемента();
	//Запись.ЗаписатьНачалоЭлемента("contactPhone"); Запись.ЗаписатьТекст(""+Выборка.Получить("ТелефонКонтрагента")); Запись.ЗаписатьКонецЭлемента();
	Запись.ЗаписатьНачалоЭлемента("contactPhone"); Запись.ЗаписатьТекст(""+Выборка.Получить("ТелефонКонтрагента")+?(СокрЛП(Выборка.Получить("ТелефонКонтрагентаЗапасной"))="","",";"+СокрЛП(Выборка.Получить("ТелефонКонтрагентаЗапасной")))); Запись.ЗаписатьКонецЭлемента();
	
	Запись.ЗаписатьКонецЭлемента();//receiverAddress
	
	//Если Префикс = "KTY" тогда
		//пожалуй, тут надо сделать проверку на задолженность по заказу
		Если  не Выборка.получить("ОплаченБН") тогда
			Запись.ЗаписатьНачалоЭлемента("extraService");
			Запись.ЗаписатьНачалоЭлемента("esCode");Запись.ЗаписатьТекст("НПП"); Запись.ЗаписатьКонецЭлемента();
			Запись.ЗаписатьНачалоЭлемента("param");
			Запись.ЗаписатьНачалоЭлемента("name");Запись.ЗаписатьТекст("sum_npp"); Запись.ЗаписатьКонецЭлемента();
			Запись.ЗаписатьНачалоЭлемента("value");Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+Заказ.СуммаДокумента," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
			Запись.ЗаписатьКонецЭлемента();//param
			Запись.ЗаписатьКонецЭлемента();//extraService
		КонецЕсли;
	//КонецЕсли;
	
	Запись.ЗаписатьНачалоЭлемента("extraService");
	Запись.ЗаписатьНачалоЭлемента("esCode");Запись.ЗаписатьТекст("SMS"); Запись.ЗаписатьКонецЭлемента();
	Запись.ЗаписатьНачалоЭлемента("param");
	Запись.ЗаписатьНачалоЭлемента("name");Запись.ЗаписатьТекст("phone"); Запись.ЗаписатьКонецЭлемента();
	Запись.ЗаписатьНачалоЭлемента("value");Запись.ЗаписатьТекст(Выборка.Получить("ТелефонКонтрагента")); Запись.ЗаписатьКонецЭлемента();
	Запись.ЗаписатьКонецЭлемента();//param
	Запись.ЗаписатьКонецЭлемента();//extraService
	//parcel
	МассивТоваров=СоставПосылки.СоставТЗ;
	//пакеты одной посылкой
	
	МассивПакеты=МассивТоваров.Скопировать();
	МассивПакеты.очистить();
	МассивАксы = МассивПакеты.Скопировать();
	МассивКрепеж = МассивПакеты.Скопировать();
	МассивОтдельныеПосылки = МассивПакеты.Скопировать();
	МассивДокументы = МассивПакеты.Скопировать();
	
	Для каждого стр из МассивТоваров Цикл
		Если СокрЛП(стр.Номенклатура.Код)="9178010" тогда //пакеты
			нстр = МассивПакеты.Добавить();
			ЗаполнитьЗначенияСвойств(нстр,стр);
		ИначеЕсли стр.ВидНоменклатуры=Перечисления.ВидыТоваров.Аксессуары тогда //акс
			нстр = МассивАксы.Добавить();
			ЗаполнитьЗначенияСвойств(нстр,стр);
		иначеЕсли стр.ВидНоменклатуры=Перечисления.ВидыТоваров.Прочее тогда //крепеж
			нстр = МассивКрепеж.Добавить();
			ЗаполнитьЗначенияСвойств(нстр,стр);
		иначе	 
			нстр = МассивОтдельныеПосылки.Добавить();
			ЗаполнитьЗначенияСвойств(нстр,стр);
		КонецЕсли;
	КонецЦикла;
	
	СоставШК="";
	//массив посылок шины/диски
	Для каждого стр из МассивОтдельныеПосылки Цикл
		кол=1;
		размеры=ПолучитьРазмеры(стр.Номенклатура,стр.ЕдиницаИзмерения);
		Пока кол<=стр.Количество цикл
			Если Префикс="KTY" тогда
				ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+глТранслит(СокрЛП(стр.Номенклатура.Код))+"V"+кол);
			иначе
				//ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+глТранслит(СокрЛП(стр.Номенклатура.Код))+"V"+кол);
				ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+глТранслит(СокрЛП(стр.Номенклатура.Код))+"V"+кол);
			КонецЕсли;
			//ШК=ВРЕГ("KTY"+СокрЛП(Выборка.НомерBITRIX)+"V"+ИнтернетМагазин.Транслитерация(СокрЛП(Выборка.ПоставщикКод))+"V"+ИнтернетМагазин.Транслитерация(СокрЛП(стр.Номенклатура.Код))+"V"+кол);
			Запись.ЗаписатьНачалоЭлемента("parcel");
			Запись.ЗаписатьНачалоЭлемента("number"); Запись.ЗаписатьТекст(ШК); Запись.ЗаписатьКонецЭлемента();
			Запись.ЗаписатьНачалоЭлемента("weight"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+размеры.weight," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
			Запись.ЗаписатьНачалоЭлемента("length"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+размеры.length," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
			Запись.ЗаписатьНачалоЭлемента("width");  Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+размеры.width," ",""),",","."));  Запись.ЗаписатьКонецЭлемента();
			Запись.ЗаписатьНачалоЭлемента("height"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+размеры.height," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
			Запись.ЗаписатьКонецЭлемента();//parcel
			кол=кол+1;
			СоставШК=СоставШК+ШК+";";
		КонецЦикла
	КонецЦикла;
	
	Для каждого стр из МассивПакеты Цикл
		размеры=ПолучитьРазмеры(стр.Номенклатура,стр.ЕдиницаИзмерения);
		Если Префикс="KTY" тогда
			ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+глТранслит(СокрЛП(стр.Номенклатура.Код))+"V"+1);
		иначе
			//ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+ глТранслит(СокрЛП(стр.Номенклатура.Код))+"V"+1);
			ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+глТранслит(СокрЛП(стр.Номенклатура.Код))+"V"+1);
		КонецЕсли;
		//ШК=ВРЕГ("KTY"+СокрЛП(Выборка.НомерBITRIX)+"V"+ИнтернетМагазин.Транслитерация(СокрЛП(Выборка.ПоставщикКод))+"V"+ИнтернетМагазин.Транслитерация(СокрЛП(стр.Номенклатура.Код))+"V"+кол);
		Запись.ЗаписатьНачалоЭлемента("parcel");
		Запись.ЗаписатьНачалоЭлемента("number"); Запись.ЗаписатьТекст(ШК); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("weight"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+размеры.weight," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("length"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+40," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();      //отправляют в пакете
		Запись.ЗаписатьНачалоЭлемента("width");  Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+30," ",""),",","."));  Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("height"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+1," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьКонецЭлемента();//parcel
		СоставШК=СоставШК+ШК+";";
	КонецЦикла;	
	
	//аксы
	VМакс=0;
	ВесОб=0;
	Для каждого стр из МассивАксы Цикл
		размеры=ПолучитьРазмеры(стр.Номенклатура,стр.ЕдиницаИзмерения);
		ВесОб=ВесОб+размеры.weight;
		v=размеры.height*размеры.length*размеры.width;
		Если VМакс>v тогда
			;
		иначе
			VМакс=v;
			РазмерыМакс=Размеры;
		КонецЕсли;
	КонецЦикла;
	Если МассивАксы.Количество()>0 тогда
		Если Префикс="KTY" тогда
			ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+(СокрЛП("AKS"))+"V"+1);
		иначе
			//ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+(СокрЛП("AKS"))+"V"+1);
			ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+(СокрЛП("AKS"))+"V"+1);
		КонецЕсли;
		//ШК=ВРЕГ("KTY"+СокрЛП(Выборка.НомерBITRIX)+"V"+ИнтернетМагазин.Транслитерация(СокрЛП(Выборка.ПоставщикКод))+"V"+1ИнтернетМагазин.Транслитерация(СокрЛП(стр.Номенклатура.Код))+"V"+кол);
		Запись.ЗаписатьНачалоЭлемента("parcel");
		Запись.ЗаписатьНачалоЭлемента("number"); Запись.ЗаписатьТекст(ШК); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("weight"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+ВесОб," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("length"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+РазмерыМакс.length," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("width");  Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+РазмерыМакс.width," ",""),",","."));  Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("height"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+РазмерыМакс.height," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьКонецЭлемента();//parcel
		СоставШК=СоставШК+ШК+";";
	КонецЕсли;
	//аксы
	
	//Крепеж
	VМакс=0;
	ВесОб=0;
	Для каждого стр из МассивКрепеж Цикл
		размеры=ПолучитьРазмеры(стр.Номенклатура,стр.ЕдиницаИзмерения);
		ВесОб=ВесОб+размеры.weight;
		v=размеры.height*размеры.length*размеры.width;
		Если VМакс>v тогда
			;
		иначе
			VМакс=v;
			РазмерыМакс=Размеры;
		КонецЕсли;
	КонецЦикла;
	Если МассивКрепеж.Количество()>0 тогда
		Если Префикс="KTY" тогда
			ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+(СокрЛП("KRP"))+"V"+1);
		иначе
			//ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+(СокрЛП("KRP"))+"V"+1);
			ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+(СокрЛП("KRP"))+"V"+1);
		КонецЕсли;
		//ШК=ВРЕГ("KTY"+СокрЛП(Выборка.НомерBITRIX)+"V"+ИнтернетМагазин.Транслитерация(СокрЛП(Выборка.ПоставщикКод))+"V"+ИнтернетМагазин.Транслитерация(СокрЛП(стр.Номенклатура.Код))+"V"+кол);
		Запись.ЗаписатьНачалоЭлемента("parcel");
		Запись.ЗаписатьНачалоЭлемента("number"); Запись.ЗаписатьТекст(ШК); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("weight"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+ВесОб," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("length"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+30," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("width");  Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+30," ",""),",","."));  Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("height"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+30," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьКонецЭлемента();//parcel
		СоставШК=СоставШК+ШК+";";
	КонецЕсли;
	//крепеж
	
	
	//Документы
	Если ОтправлятьДоки тогда
		Если Префикс="KTY" тогда
			ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+(СокрЛП("DOC"))+"V"+1);
		иначе
			//ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СокрЛП("DOC")+"V"+1);
			ШК=ВРЕГ(Префикс+глТранслит(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+(СокрЛП("DOC"))+"V"+1);
		КонецЕсли;
		Запись.ЗаписатьНачалоЭлемента("parcel");
		Запись.ЗаписатьНачалоЭлемента("number"); Запись.ЗаписатьТекст(ШК); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("weight"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+0.05," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("length"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+30," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("width");  Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+30," ",""),",","."));  Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьНачалоЭлемента("height"); Запись.ЗаписатьТекст(СтрЗаменить(СтрЗаменить(""+30," ",""),",",".")); Запись.ЗаписатьКонецЭлемента();
		Запись.ЗаписатьКонецЭлемента();//parcel
		СоставШК=СоставШК+ШК+";";
	КонецЕсли;
	
	//unitLoad для ФЗ 54
	//Если Префикс = "KTY" тогда
		Если  не Выборка.получить("ОплаченБН") тогда
			Для Каждого эл из МассивТоваров цикл
				Запись.ЗаписатьНачалоЭлемента("unitLoad");
				Запись.ЗаписатьНачалоЭлемента("article"); Запись.ЗаписатьТекст(эл.Номенклатура.Код); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("descript"); Запись.ЗаписатьТекст(""+эл.Номенклатура); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("declared_value"); Запись.ЗаписатьТекст(Формат(эл.Количество*эл.Цена,"ЧДЦ=2; ЧРД=.; ЧРГ=; ЧГ=0")); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("npp_amount"); Запись.ЗаписатьТекст(Формат(эл.Цена,"ЧДЦ=2; ЧРД=.; ЧРГ=; ЧГ=0")); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("vat_percent"); Запись.ЗаписатьТекст("18"); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("without_vat"); Запись.ЗаписатьТекст("0"); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("count"); Запись.ЗаписатьТекст(""+эл.Количество); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьКонецЭлемента();//unitLoad
			КонецЦикла;
			
			Для Каждого стр из Заказ.Услуги цикл
				Запись.ЗаписатьНачалоЭлемента("unitLoad");
				Запись.ЗаписатьНачалоЭлемента("article"); Запись.ЗаписатьТекст(стр.Номенклатура.Код); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("descript"); Запись.ЗаписатьТекст(""+стр.Номенклатура); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("declared_value"); Запись.ЗаписатьТекст(Формат(стр.Количество*стр.Цена,"ЧДЦ=2; ЧРД=.; ЧРГ=; ЧГ=0")); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("npp_amount"); Запись.ЗаписатьТекст(Формат(стр.Цена,"ЧДЦ=2; ЧРД=.; ЧРГ=; ЧГ=0")); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("vat_percent"); Запись.ЗаписатьТекст("18"); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("without_vat"); Запись.ЗаписатьТекст("0"); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьНачалоЭлемента("count"); Запись.ЗаписатьТекст(""+стр.Количество); Запись.ЗаписатьКонецЭлемента();
				Запись.ЗаписатьКонецЭлемента();//unitLoad
			КонецЦикла;	
		КонецЕсли;
	//КонецЕсли;
	//Документы
	//ДобавитьПараметраТК(тзПараметрыТК,пЗаказ,"ШК",СоставШК,пЗаказПоставщика);
	ОбновитьРеквизитТК(тзПараметрыТК,"ШК",СоставШК);
	Запись.ЗаписатьКонецЭлемента();//order
	возврат Запись;
КонецФункции

Функция ДополнитьЗаписьXML(Запись)
	Запись.ЗаписатьКонецЭлемента();//orders
	Запись.ЗаписатьКонецЭлемента();//createOrder
	Запись.ЗаписатьКонецЭлемента();//Body
	Запись.ЗаписатьКонецЭлемента();//Envelope
	возврат Запись;
КонецФункции

Функция ОтправитьЗапросWEBСервису(URL,ТекстXML,Таймаут = 10000)
	Если ПустаяСтрока(ТекстXML) Тогда
		Возврат "";
	КонецЕсли;
	WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	WinHttp.SetTimeouts(Таймаут, Таймаут, Таймаут, Таймаут);
	WinHttp.Option(2,"utf-8");
	WinHttp.Open("POST",URL);
	WinHttp.setRequestHeader("Content-Type","text/xml; charset=utf-8");
	
	Попытка
		WinHttp.Send(ТекстXML);
		Если WinHttp.Status = 200 Тогда
			Ответ=WinHttp.ResponseStream;
			
			Возврат(WinHttp.ResponseText);
		Иначе
			Сообщить("Ошибка сервера: " + WinHttp.Status + " " + WinHttp.ResponseText + " " + WinHttp.StatusText, СтатусСообщения.Важное);
			Возврат("");
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
		Возврат("");
	КонецПопытки;
КонецФункции

Функция РазобратьXMLОтветCreateOrder(файл,Заказ)
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(Файл);
	ТабЗаказы = новый ТаблицаЗначений;
	ТабЗаказы.Колонки.Добавить("orderNumberInternal");
	ТабЗаказы.Колонки.Добавить("status");
	ТабЗаказы.Колонки.Добавить("orderNum");
	ТабЗаказы.Колонки.Добавить("errorMessage");
	ТабЗаказы.Колонки.Добавить("ЗаказПоставщика");
	
	Ошибка = "";
	
	ЗаказыXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	Заказы = ЗаказыXDTO.Body.createOrderResponse.return;
	
	//Если ТипЗнч(Заказы)<>Тип("СписокXDTO") Тогда
	//	инфоПоЗаказу = Новый Массив;
	//	попытка
	//		инфоПоЗаказу.Добавить(Заказы.return);
	//	исключение
	//		инфоПоЗаказу.Добавить(Заказы);
	//	КонецПопытки;
	//Иначе
	//	СписокXDTOЗаказы = Заказы;
	//КонецЕсли;
	//у нас возвращается всегда информация только по 1 заказу
	//ЗаказОб = Заказ.ПолучитьОбъект();
	//ЗаказОб = Заказ;
	СтрокаОбласть = Заказ.РеквизитыЗаказаТК.Найти("Region","Поле");
	Если СтрокаОбласть<>неопределено тогда
		Область = СтрокаОбласть.Значение;
	Иначе
		Область="ххх";
	КонецЕсли;

	
	Если СокрЛП(Заказы.status)="OK" тогда
		Заказ.СтатусДПД  = Перечисления.СтатусыЗаказовДПД.ДПДЗаказПодтвержден;
		Заказ.СтатусПеревозчика  = Заказы.status;
		Заказ.НомерЗаказаТК  = Заказы.orderNum;
		//Заказ.Комментарий = "Подтвержден; DPD; "+Заказ.Комментарий;
		
		Если Найти(нрег(Область),"москва")>0 или Найти(нрег(Область),"московская")>0 тогда
			Заказ.Комментарий = "Подтвержден; DPD Москва! "+Заказ.Комментарий;
		Иначе
			Заказ.Комментарий = "Подтвержден; DPD; "+Заказ.Комментарий;
		КонецЕсли;
		
		//нстр=Заказ.РеквизитыЗаказаТК.Добавить();
		//нстр.Поле="Номер заказа перевозчика";
		//нстр.Значение=Заказы.orderNum;
		ОбновитьРеквизитТК(Заказ.РеквизитыЗаказаТК,"Номер заказа перевозчика", Заказы.orderNum);
		ОбновитьРеквизитТК(Заказ.РеквизитыЗаказаТК,"Дата/время согласования с ТК", ТекущаяДата());
		
	ИначеЕсли СокрЛП(Заказы.status)="OrderPending" тогда
		Заказ.СтатусДПД  = Перечисления.СтатусыЗаказовДПД.ДПДНаРассмотрении;
		Заказ.СтатусПеревозчика  = Заказы.status;
		попытка
			Ошибка = Заказы.errorMessage;
			Сообщить(Заказы.errorMessage);
		Исключение
		КонецПопытки;
	ИначеЕсли СокрЛП(Заказы.status)<>"" тогда
		Заказ.СтатусДПД  = Перечисления.СтатусыЗаказовДПД.ДПДОшибка;
		Заказ.СтатусПеревозчика  = Заказы.status;
		попытка
			Ошибка = Заказы.errorMessage;
			Сообщить(Заказы.errorMessage);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если Заказ.ИМСклиентомСогласовано и Заказ.СтатусДПД  = Перечисления.СтатусыЗаказовДПД.ДПДЗаказПодтвержден тогда //что б не мусорить в комментариях заказов не ИМ
		//Заказ.Комментарий = "Подтвержден; DPD; "+ Заказ.Комментарий;
		Если Найти(нрег(Область),"москва")>0 или Найти(нрег(Область),"московская")>0 тогда
			Заказ.Комментарий = "Подтвержден; DPD Москва! "+Заказ.Комментарий;
		Иначе
			Заказ.Комментарий = "Подтвержден; DPD; "+Заказ.Комментарий;
		КонецЕсли;

		
		Если (Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребитель и СокрЛП(Заказ.Подразделение.Код) = "00005") или //если подтвержден и безнал и Ярославль тогда
			(Заказ.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = Справочники.НаправленияПродаж.НайтиПоКоду("16") и СокрЛП(Заказ.Подразделение.Код) = "00005" и Заказ.Контрагент.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо)
			тогда  
			//попытка
				менеджерЗаписи = РегистрыСведений.КатегорииОбъектов.СоздатьМенеджерЗаписи();
				менеджерЗаписи.Объект=Заказ.Ссылка;
				менеджерЗаписи.Категория = Справочники.КатегорииОбъектов.НайтиПоКоду("00043"); //Колеса тут
				менеджерЗаписи.Записать();
			//Исключение
			//КонецПопытки;
		КонецЕсли;
		
		Если (((Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребитель или Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребительФЛ) или
			(Заказ.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = Справочники.НаправленияПродаж.НайтиПоКоду("16") и Заказ.Контрагент.КатегорияПокупателя <> Справочники.КатегорииПокупателей.ПосредникТК)))
			и ЗначениеЗаполнено(Заказ.Подразделение) и СокрЛП(Заказ.Подразделение.Код) <> "00005" тогда  //если подтвержден  и Питер тогда
			//попытка
				менеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
				менеджерЗаписи.Объект=Заказ.Ссылка;
				менеджерЗаписи.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90175"); //Направлений отгрузки (филиал)
				менеджерЗаписи.Значение = Справочники.ЗначенияСвойствОбъектов.НайтиПоКоду("b0099"); //ДПД 
				менеджерЗаписи.Записать();
			//Исключение
			//КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьРеквизитТК(Заказ.РеквизитыЗаказаТК,"Ошибка ДПД", Ошибка);
	
КонецФункции

Функция ПолучитьУлицуАббр(Улица,Аббревиатуры) экспорт
	УлицаСтруктура = новый структура("Улица,Аббр");
	УлицаСтруктура.Улица=Улица;
	УлицаСтруктура.Аббр="";
	
	Для каждого сокр из Аббревиатуры цикл
		позиция = Найти(улица," "+СокрЛП(сокр.Аббр));
		Если позиция <> 0 тогда
			Если стрДлина(СокрЛП(сокр.Аббр))>= стрДлина(УлицаСтруктура.Аббр) тогда
				УлицаСтруктура.Улица=СокрЛП(СтрЗаменить(Улица,СокрЛП(сокр.Аббр),""));
				УлицаСтруктура.Аббр=СокрЛП(сокр.Аббр);
			КонецЕсли;
			//Возврат УлицаСтруктура;
		КонецЕсли;
	КонецЦикла;
	Возврат УлицаСтруктура;
КонецФункции

Функция ПолучитьСоставПосылки(Заказ,Префикс)Экспорт
	рез=новый Структура("состав,СоставТЗ,КоличествоМест");
	состав = "";
	составтз=новый ТаблицаЗначений;
	СоставТЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	СоставТЗ.Колонки.Добавить("ВидНоменклатуры",Новый ОписаниеТипов("ПеречислениеСсылка.ВидыТоваров"));
	СоставТЗ.Колонки.Добавить("ЕдиницаИзмерения",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	СоставТЗ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	СоставТЗ.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	
	//Отбор = новый Структура("Поставщик");
	//Отбор.Поставщик = Выборка.Получить("Поставщик");
	тТовары = Заказ.Товары.Выгрузить();
	//строки = тТовары.НайтиСтроки(отбор);
	Для каждого стр из тТовары цикл
		Состав=состав+"("+СокрЛП(стр.Номенклатура.Код)+") "+стр.Номенклатура+" - "+стр.Количество+"# "+Символ(10);
		нстр=составтз.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,стр);
		нстр.ВидНоменклатуры = стр.номенклатура.ВидТовара;
	КонецЦикла;
	МестДокументов = 0;
	Если //(Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребитель или Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребительФЛ) 
		Заказ.Контрагент.КатегорияПокупателя <> Справочники.КатегорииПокупателей.ПосредникТК 
		//и Префикс = "KTY" 
		и Истина
		тогда
		Состав = Состав+Символ(10)+"Комплект документов";
		МестДокументов=1;
	КонецЕсли;
	рез.Состав=Состав;
	СоставТЗ.Свернуть("Номенклатура,ВидНоменклатуры,ЕдиницаИзмерения,Цена","Количество");
	КоличествоМест=0;
	
	МестПакетов=0;
	МестАксов=0;
	МестКрепеж=0;
	МестОсновнойТовар=0;
	Для каждого стр из СоставТЗ цикл
		Если СокрЛП(стр.Номенклатура.Код)="9178010"  тогда
			МестПакетов=1;
		иначеЕсли стр.ВидНоменклатуры=Перечисления.ВидыТоваров.Аксессуары тогда
			МестАксов=1;
		ИначеЕсли стр.ВидНоменклатуры=Перечисления.ВидыТоваров.Прочее тогда
			МестКрепеж=1;
		иначе
			МестОсновнойТовар=МестОсновнойТовар+стр.Количество;
		КонецЕсли;
	КонецЦикла;
	
	Рез.СоставТЗ=СоставТЗ;
	Рез.КоличествоМест=МестОсновнойТовар+МестКрепеж+МестАксов+МестПакетов+МестДокументов;
	
	возврат Рез;
КонецФункции

Функция ПолучитьАббревиатуры() экспорт
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АдресныйКлассификатор.Сокращение КАК Аббр
	|ИЗ
	|	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
	|ГДЕ
	|	(АдресныйКлассификатор.КодУлицыВКоде = 1
	|			ИЛИ АдресныйКлассификатор.ТипАдресногоЭлемента = 1)";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция УбратьСокращениеИзРегиона(Регион,Аббревиатуры) экспорт
	мРегион=нрег(Регион);
	мРегион=стрЗаменить(мРегион," "+"область","");
	мРегион=стрЗаменить(мРегион," "+"край","");
	мРегион=стрЗаменить(мРегион," "+"обл","");
	Для каждого сокр из Аббревиатуры цикл
		мРегион=стрЗаменить(мРегион," "+нрег(сокрЛП(сокр.Аббр)),"");
		//Возврат мРегион;
	КонецЦикла;
	Возврат мРегион;
КонецФункции

Функция ПолучитьРазмеры(Номенклатура,Единица)
	Размеры=новый Структура("weight,length,width,height,volume");
	Размеры.weight=Окр(?(Единица.Вес<>0,Единица.Вес,8),2); //по умолчанию 8кг
	
	Объем = Единица.Объем;
	Если Объем = 0 тогда
		Объем = 0.12;
	КонецЕсли;
	Если Номенклатура.ВидТовара = Перечисления.видыТоваров.Шины тогда
		//Если Номенклатура.Родитель=Грузовые или Номенклатура.Родитель=Сельхоз тогда
		Если Номенклатура.Родитель=Справочники.Номенклатура.НайтиПоКоду("0080631") или Номенклатура.Родитель=Справочники.Номенклатура.НайтиПоКоду("0001750") тогда
			дДлина = (2.54*Число(СтрЗаменить(Номенклатура.Типоразмер.Диаметр,"C","")));
			ввысота=СтрЗаменить(Номенклатура.Типоразмер.Ширина,"L","");;
			ввысота=Число(ввысота);
			Размеры.length=дДлина;
			Размеры.width=дДлина;
			Размеры.height=ввысота/10;
		Иначе
			Диаметр=Номенклатура.Типоразмер.Диаметр;
			Диаметр=СтрЗаменить(Диаметр,"C","");
			Диаметр=СтрЗаменить(Диаметр,"LT","");
			Диаметр=СтрЗаменить(Диаметр,"L","");
			шШирина=Номенклатура.Типоразмер.Ширина;
			вВысота=Номенклатура.Типоразмер.Высота;
			вВысота=СтрЗаменить(вВысота,"-","");
			дДлина = 2.54*Число(Диаметр)+2*((Число(шШирина))*(Число(?(вВысота="",82,вВысота)))/100)/10;
			//шширина=дДлина;
			ввысота=Число(шШирина)/10;
			Размеры.length=дДлина;
			Размеры.width=дДлина;
			Размеры.height=ввысота;
		КонецЕсли;
		Объем=Объем*1.2732;
	ИначеЕсли Номенклатура.ВидТовара = Перечисления.видыТоваров.Диски тогда
		дДлина = 2.54*Номенклатура.Типоразмер.Диаметр;
		шширина=дДлина;
		ввысота=Номенклатура.Типоразмер.Ширина*2.54;
		Размеры.length=дДлина;
		Размеры.width=шширина;
		Размеры.height=ввысота;
	ИначеЕсли Номенклатура.ВидТовара = Перечисления.видыТоваров.АКБ тогда
		Если ЗначениеЗаполнено(Номенклатура.Типоразмер) тогда
			МассивР=РазложитьСтрокуВМассивПодстрокDPD(Номенклатура.Типоразмер.Наименование,"x"); //латинская
			Если МассивР.Количество()=3 тогда
				Размеры.length=число(МассивР[0])/10;
				Размеры.width=число(МассивР[1])/10;
				Размеры.height=число(МассивР[2])/10;
			иначе
				МассивР=РазложитьСтрокуВМассивПодстрокDPD(Номенклатура.Типоразмер.Наименование,"х");	//русская
				Если МассивР.Количество()=3 тогда
					Размеры.length=число(МассивР[0])/10;
					Размеры.width=число(МассивР[1])/10;
					Размеры.height=число(МассивР[2])/10;
				иначе
					Размеры.length=40;
					Размеры.width=40;
					Размеры.height=40
				КонецЕсли;
				
			конецЕсли;
		конецЕсли;
	ИначеЕсли Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Прочее тогда
		Размеры.weight=?(Единица.Вес<>0,Единица.Вес,0.1);  //крепеж
		Размеры.length=5;
		Размеры.width=5;
		Размеры.height=5;
	Иначе
		Размеры.weight=?(Единица.Вес<>0,Единица.Вес,0.2);  //для аксов по умолчанию 200гр
		Размеры.length=10;
		Размеры.width=10;
		Размеры.height=10;
	КонецЕсли;
	
	Размеры.weight = Окр(Размеры.weight,2);
	Размеры.length = Окр(Размеры.length,2);
	Размеры.width  = Окр(Размеры.width,2);
	Размеры.height = Окр(Размеры.height,2);
	Размеры.volume = Окр(Объем,2);

	возврат Размеры;
КонецФункции

//Процедура ДобавитьПараметраТК(тз,Заказ,Поле,Значение,ЗаказПоставщика)
//	нстр = тз.Добавить();
//	нстр.ЗаказПоставщика=ЗаказПоставщика;
//	нстр.Заказ=Заказ;
//	нстр.Поле=Поле;
//	нстр.Значение = Значение;
//КонецПроцедуры
// обновление статуса
Процедура ОбновитьСтатусыЗаказов(ДатаН=неопределено,ДатаК=неопределено) Экспорт
	Если ДатаН = неопределено тогда
		ДатаН=ДобавитьМесяц(ТекущаяДата(),-1);
	КонецЕсли;	
	
	Если ДатаК = неопределено тогда
		ДатаК=КонецДня(ТекущаяДата());
	КонецЕсли;	
	
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ЗаказПокупателя.Грузоотправитель КАК Поставщик,
	             |	ЗаказПокупателя.Ссылка КАК ЗаказПокупателя,
	             |	ЗаказПокупателя.Номер КАК НомерЗаказа,
	             |	ЕСТЬNULL(ЗаказПокупателя.Грузоотправитель.Код, ЗаказПокупателя.Организация.Код) КАК ПоставщикКод,
	             |	ЗаказПокупателя.Ссылка КАК Ссылка,
	             |	ВЫБОР
	             |		КОГДА ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &КолесаТут
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК ЗаказИМ,
	             |	ЗаказПокупателя.НомерВходящегоДокумента
	             |ПОМЕСТИТЬ вт
	             |ИЗ
	             |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	             |ГДЕ
	             |	(ЗаказПокупателя.TerminalОтгрузкаТранспортнойКомпанией = ИСТИНА
	             |			ИЛИ ЗаказПокупателя.ИМСклиентомСогласовано
	             |				И ЗаказПокупателя.ТранспортнаяКомпания = &ТранспортнаяКомпанияДПД)
	             |	И (ЗаказПокупателя.СтатусПеревозчика = ""OrderPending""
	             |			ИЛИ ЗаказПокупателя.СтатусПеревозчика = ""OrderDuplicate""
	             |			ИЛИ ЗаказПокупателя.СтатусПеревозчика = ""no-data-found"")
	             |	И ЗаказПокупателя.Дата МЕЖДУ &ДатаН И &ДатаК
	             |	И ЗаказПокупателя.Проведен
	             |	И ЗаказПокупателя.ТипЗаказа <> 6
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	вт.Поставщик,
	             |	вт.ЗаказПокупателя,
	             |	вт.НомерЗаказа,
	             |	вт.ПоставщикКод,
	             |	вт.Ссылка,
	             |	вт.ЗаказИМ,
	             |	вт.НомерВходящегоДокумента,
	             |	ЕСТЬNULL(НомерДПД.Номер, """") КАК Номер,
	             |	ЕСТЬNULL(НомерДПД.Ключ, """") КАК Ключ
	             |ИЗ
	             |	вт КАК вт
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			ЗаказПокупателяРеквизитыЗаказаТК.Ссылка КАК ЗаказПокупателя,
	             |			ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК.Значение КАК СТРОКА(100)) КАК Номер,
	             |			КлиентскиеНомераDPD.Ключ КАК Ключ
	             |		ИЗ
	             |			Документ.ЗаказПокупателя.РеквизитыЗаказаТК КАК ЗаказПокупателяРеквизитыЗаказаТК
	             |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлиентскиеНомераDPD КАК КлиентскиеНомераDPD
	             |				ПО ((ВЫРАЗИТЬ(ЗаказПокупателяРеквизитыЗаказаТК.Значение КАК СТРОКА(100))) = КлиентскиеНомераDPD.Код)
	             |		ГДЕ
	             |			ЗаказПокупателяРеквизитыЗаказаТК.Поле = ""Клиентский номер DPD""
	             |			И ЗаказПокупателяРеквизитыЗаказаТК.Ссылка В
	             |					(ВЫБРАТЬ
	             |						вт.ЗаказПокупателя
	             |					ИЗ
	             |						вт)) КАК НомерДПД
	             |		ПО вт.ЗаказПокупателя = НомерДПД.ЗаказПокупателя";
	
	
				 Запрос.УстановитьПараметр("ДатаН",ДатаН);
				 Запрос.УстановитьПараметр("ДатаК",КонецДня(ДатаК));
				 Запрос.УстановитьПараметр("КолесаТут",Справочники.НаправленияПродаж.НайтиПоКоду("16"));
				 Запрос.УстановитьПараметр("ТранспортнаяКомпанияДПД",Справочники.Контрагенты.НайтиПоКоду("94121")); //Армадилло Бизнес Посылка

	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		ЗаписьXML = ПодготовитьШапкуXML_обновление(Выборка);
		ЗаписьXML = ДобавитьЗаказВDPD_Обновление(ЗаписьXML,Выборка);
		ЗаписьXML = ДополнитьЗаписьXML_обновление(ЗаписьXML);
		ТекстXML = ЗаписьXML.Закрыть();
		//Ответ = ОтправитьЗапросWEBСервису_Обновление("http://ws.dpd.ru:80/services/order2",ТекстXML);
		//Ответ = ОтправитьЗапросWEBСервису("http://wstest.dpd.ru:80/services/order2",ТекстXML); //тест
		Ответ = ОтправитьЗапросWEBСервису("http://ws.dpd.ru:80/services/order2",ТекстXML); //рабочий
		Сообщить(Ответ);
		
		Если Ответ<>"" тогда
			Текст = новый ТекстовыйДокумент;
			Текст.ДобавитьСтроку(Ответ);
			ИмяФайла = ПолучитьИмяВременногоФайла("xml");
			Текст.Записать(ИмяФайла,"UTF-8 ");
			РазобратьXMLОтветGetOrderStatus(ИмяФайла,Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	//СоздатьЗадачиПоВозвратнымЗаказам();//по заказам, которые дпд вот-вот отправит назад, создадим задачи
конецПроцедуры	

Функция ПодготовитьШапкуXML_Обновление(Выборка)
	//для рабочего
	//Логин="1007003275"; //ЯШТ
	//Пароль = "6078E6EF054E13F442B4A46ADDE226628F946EDC"; //ЯШТ
	Если Выборка.ЗаказИМ тогда
		// для тестового
		//Логин="1001027795"; //ЯШТ
		//Пароль = "182A17BD6FC5557D1FCA30FA1D56593EB21AEF88"; //ЯШТ
		// для рабочего
		Логин="1007003132"; //ЯШТ
		Пароль = "89CF47BC79EDDE98122968E978B4176783A774BC"; //ЯШТ
	иначе
		// для тестового
		//Логин="1001027795"; //ЯШТ
		//Пароль = "182A17BD6FC5557D1FCA30FA1D56593EB21AEF88"; //ЯШТ
		// для рабочего
		Логин=""; //ЯШТ
		Пароль = ""; //ЯШТ
		
		Если Выборка.ЗаказПокупателя.Контрагент.DPD_clientNumber<>"" тогда
			Логин=Выборка.ЗаказПокупателя.Контрагент.DPD_clientNumber;
			Пароль=Выборка.ЗаказПокупателя.Контрагент.DPD_clientKey;
		иначе
			Логин = Выборка.Номер;
			Пароль = Выборка.Ключ;
		КонецЕсли;

	КонецЕсли;
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Envelope");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soap", "http://schemas.xmlsoap.org/soap/envelope/");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:ns","http://dpd.ru/ws/order2/2012-04-04");
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Header");
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Body");
	ЗаписьXML.ЗаписатьНачалоЭлемента("ns:getOrderStatus");
	ЗаписьXML.ЗаписатьНачалоЭлемента("orderStatus");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("auth");
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientNumber"); ЗаписьXML.ЗаписатьТекст(Логин); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientKey"); ЗаписьXML.ЗаписатьТекст(Пароль); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();//auth
	
	Возврат ЗаписьXML;
КонецФункции

Функция ДобавитьЗаказВDPD_Обновление(Запись,Выборка)
	//Важен порядок!!!!!!!!
	Запись.ЗаписатьНачалоЭлемента("order");
	Если Выборка.ЗаказИМ тогда
		Запись.ЗаписатьНачалоЭлемента("orderNumberInternal"); Запись.ЗаписатьТекст(""+СокрЛП(Выборка.НомерВходящегоДокумента)+"_"+СокрЛП(Выборка.ПоставщикКод)); Запись.ЗаписатьКонецЭлемента();
	иначе
		Запись.ЗаписатьНачалоЭлемента("orderNumberInternal"); Запись.ЗаписатьТекст(""+СокрЛП(Выборка.НомерЗаказа)+"_"+СокрЛП(Выборка.ПоставщикКод)); Запись.ЗаписатьКонецЭлемента();	
	КонецЕсли;
	
	Запись.ЗаписатьКонецЭлемента();//order
	возврат Запись;
КонецФункции

Функция ДополнитьЗаписьXML_Обновление(Запись)
	Запись.ЗаписатьКонецЭлемента();//orders
	Запись.ЗаписатьКонецЭлемента();//createOrder
	Запись.ЗаписатьКонецЭлемента();//Body
	Запись.ЗаписатьКонецЭлемента();//Envelope
	возврат Запись;
КонецФункции

Функция РазобратьXMLОтветGetOrderStatus(файл,заказ)
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(Файл);
	ТабЗаказы = новый ТаблицаЗначений;
	ТабЗаказы.Колонки.Добавить("orderNumberInternal");
	ТабЗаказы.Колонки.Добавить("status");
	ТабЗаказы.Колонки.Добавить("orderNum");
	ТабЗаказы.Колонки.Добавить("errorMessage");
	ТабЗаказы.Колонки.Добавить("ЗаказПоставщика");
	
	Ошибка = "";
	
	ЗаказыXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	Заказы = ЗаказыXDTO.Body.getOrderStatusResponse.return;
	
	ЗаказОб = Заказ.ПолучитьОбъект();
	
	СтрокаОбласть = ЗаказОб.РеквизитыЗаказаТК.Найти("Region","Поле");
	Если СтрокаОбласть<>неопределено тогда
		Область = СтрокаОбласть.Значение;
	Иначе
		Область="ххх";
	КонецЕсли;
	
	Если СокрЛП(Заказы.status)="OK" тогда
		ЗаказОб.СтатусДПД  = Перечисления.СтатусыЗаказовДПД.ДПДЗаказПодтвержден;
		ЗаказОб.СтатусПеревозчика  = Заказы.status;
		ЗаказОб.НомерЗаказаТК  = Заказы.orderNum;
		//ЗаказОб.Комментарий = "Подтвержден; "+ЗаказОб.Комментарий;
		
		//нстр=ЗаказОб.РеквизитыЗаказаТК.Добавить();
		//нстр.Поле="Номер заказа перевозчика";
		//нстр.Значение=Заказы.orderNum;
		//Сообщить(Заказ.Номер+" ОК");
		
		ОбновитьРеквизитТК(ЗаказОб.РеквизитыЗаказаТК,"Номер заказа перевозчика", Заказы.orderNum);
		ОбновитьРеквизитТК(ЗаказОб.РеквизитыЗаказаТК,"Дата/время согласования с ТК", ТекущаяДата());

	ИначеЕсли СокрЛП(Заказы.status)="OrderPending" тогда
		ЗаказОб.СтатусДПД  = Перечисления.СтатусыЗаказовДПД.ДПДНаРассмотрении;
		ЗаказОб.СтатусПеревозчика  = Заказы.status;
		Сообщить(Заказ.Номер+" "+ Заказы.errorMessage);
		Ошибка = Заказы.errorMessage;
	ИначеЕсли СокрЛП(Заказы.status)<>"" тогда
		ЗаказОб.СтатусДПД  = Перечисления.СтатусыЗаказовДПД.ДПДОшибка;
		ЗаказОб.СтатусПеревозчика  = Заказы.status;
		Попытка
			err = Заказы.errorMessage;
		Исключение
			err = "Что то пошло не так!";
		КонецПопытки;
		Сообщить(Заказ.Номер+" "+ err);
		Ошибка = err;
	КонецЕсли;
	
	Если ЗаказОб.ИМСклиентомСогласовано и ЗаказОб.СтатусДПД  = Перечисления.СтатусыЗаказовДПД.ДПДЗаказПодтвержден тогда //что б не мусорить в комментариях заказов не ИМ
		//ЗаказОб.Комментарий = "Подтвержден; DPD; "+ ЗаказОб.Комментарий;
		Если Найти(нрег(Область),"москва")>0 или Найти(нрег(Область),"московская")>0 тогда
			ЗаказОб.Комментарий = "Подтвержден; DPD Москва! "+ЗаказОб.Комментарий;
		Иначе
			ЗаказОб.Комментарий = "Подтвержден; DPD; "+ЗаказОб.Комментарий;
		КонецЕсли;
		
		Если (Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребитель и СокрЛП(ЗаказОб.Подразделение.Код) = "00005") или   //если подтвержден и безнал и Ярославль тогда
			(Заказ.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = Справочники.НаправленияПродаж.НайтиПоКоду("16") и СокрЛП(Заказ.Подразделение.Код) = "00005" и Заказ.Контрагент.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо) тогда
			//попытка
				менеджерЗаписи = РегистрыСведений.КатегорииОбъектов.СоздатьМенеджерЗаписи();
				менеджерЗаписи.Объект=ЗаказОб.Ссылка;
				менеджерЗаписи.Категория = Справочники.КатегорииОбъектов.НайтиПоКоду("00043"); //Колеса тут
				менеджерЗаписи.Записать();
			//Исключение
			//КонецПопытки;
		КонецЕсли;
		
		Если ((Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребитель или Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребительФЛ) или
			(Заказ.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = Справочники.НаправленияПродаж.НайтиПоКоду("16") и Заказ.Контрагент.КатегорияПокупателя <> Справочники.КатегорииПокупателей.ПосредникТК))
			  и ЗначениеЗаполнено(Заказ.Подразделение) и СокрЛП(Заказ.Подразделение.Код) <> "00005" тогда  //если подтвержден  и Питер тогда
			//попытка
				менеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
				менеджерЗаписи.Объект=Заказ.Ссылка;
				менеджерЗаписи.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90175"); //Направлений отгрузки (филиал)
				менеджерЗаписи.Значение = Справочники.ЗначенияСвойствОбъектов.НайтиПоКоду("b0099"); //ДПД 
				менеджерЗаписи.Записать();
			//Исключение
			//КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьРеквизитТК(ЗаказОб.РеквизитыЗаказаТК,"Ошибка ДПД", Ошибка);
	
	ЗаказОб.ОбменДанными.Загрузка = Истина; //+++ 23.05.2018 - только запись без перепроведения и проверок в режиме Загрузки
		ЗаказОб.записать(РежимЗаписиДокумента.Запись);
	ЗаказОб.ОбменДанными.Загрузка = ЛОЖЬ;
	
КонецФункции

Процедура СоздатьЗадачиПоВозвратнымЗаказам() экспорт
	//Запрос = Новый Запрос;
	//Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	//			 |	ЗадачиПользователя.Объект КАК ЗаказПокупателя
	//			 |ПОМЕСТИТЬ втЗаказыВЗадачах
	//			 |ИЗ
	//			 |	Задача.ЗадачиПользователя КАК ЗадачиПользователя
	//			 |;
	//			 |
	//			 |////////////////////////////////////////////////////////////////////////////////
	//			 |ВЫБРАТЬ РАЗЛИЧНЫЕ 
	//			 |	ЗаказПокупателяТовары.Ссылка КАК ЗаказПокупателя,
	//			 |	ЗаказПокупателяТовары.Ссылка.Ответственный,
	//			 |	ЗаказПокупателяТовары.Ссылка.Номер
	//			 |ИЗ
	//			 |	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	//			 |ГДЕ
	//			 |	ЗаказПокупателяТовары.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказов.ОтмененЖдемВозвратаОтТК)
	//			 |	И НЕ ЗаказПокупателяТовары.Ссылка В
	//			 |				(ВЫБРАТЬ
	//			 |					втЗаказыВЗадачах.ЗаказПокупателя
	//			 |				ИЗ
	//			 |					втЗаказыВЗадачах КАК втЗаказыВЗадачах)";
	//			 Рез = Запрос.Выполнить().Выбрать();
	//			 
	//			 пока Рез.Следующий() цикл
	//				 ЗадачаОб = Задачи.ЗадачиПользователя.СоздатьЗадачу();
	//				 ЗадачаОб.Дата=ТекущаяДата();
	//				 //ЗадачаОб.Исполнитель = Рез.Ответственный;
	//				 ЗадачаОб.Исполнитель =Справочники.Пользователи.НайтиПоНаименованию("Левченко Евгения Сергеевна");
	//				 ЗадачаОб.Наименование = "Заказ №"+ Рез.Номер+" отменен ТК";
	//				 ЗадачаОб.Объект = Рез.ЗаказПокупателя;
	//				 ЗадачаОб.Описание="Заказ №"+ Рез.Номер+" отменен ТК";
	//				 ЗадачаОб.Оповещение = Истина;
	//				 ЗадачаОб.Выполнена = ложь;
	//				 //ЗадачаОб.Выполнена = истина;
	//				 
	//				 ЗадачаОб.СрокОповещения = ТекущаяДата()-1;
	//				 ЗадачаОб.Записать();
	//			 КонецЦикла;
	
КонецПроцедуры

Функция РазложитьСтрокуВМассивПодстрокDPD(Знач Стр, Разделитель = ",") Экспорт
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции // глРазложить

Функция ПодготовитьШапкуЗаказаПодорожник(Заказ,табРеквизитыТК) Экспорт
	СоответствиеПоставщиковКодДпд = ЗаполнитьСоответствиеПоставщиков();	
	
	ЛогинПодорожник      = "super_client_1472";
	ПарольПодорожник     = "25qaz1";
	ЛогинПодорожникЯО    = "super_client_1478";
	ПарольПодорожникЯО   = "29wsx2";
	
	аббр =  ПолучитьАббревиатуры();
	ЗаказИМ=?(Заказ.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = Справочники.НаправленияПродаж.НайтиПоКоду("16"),истина,ложь);
	Префикс=?(ЗаказИМ,"KTY","YST");
	
	ОтправлятьДоки=ложь;
	Если //(Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребитель или	Заказ.Контрагент.КатегорияПокупателя = Справочники.КатегорииПокупателей.КонечныйПотребительФЛ) 
		Заказ.Контрагент.КатегорияПокупателя <> Справочники.КатегорииПокупателей.ПосредникТК
		тогда 
		ОтправлятьДоки=истина;
	КонецЕсли;
	
	Выборка = Новый Соответствие;
	Ошибка = ПодготовитьДанные(Заказ, Выборка,ЗаказИМ,Префикс);
	
	Область = Выборка.Получить("ПокупательРегион");
	Область2 = Выборка.Получить("АдресПокупателяПредставление");
	Если Область2 = "" тогда
		Область2 = Выборка.Получить("Адрес покупателя");
	КонецЕсли;

	Если Найти(нрег(Область),"ярославская")>0 или Найти(нрег(Область2),"ярославская")>0  
		или Найти(нрег(Область),"костромская")>0 или  Найти(нрег(Область2),"костромская")>0 тогда  
		Логин  = ЛогинПодорожникЯО;
		Пароль = ПарольПодорожникЯО;
	Иначе 
		Логин  = ЛогинПодорожник;
		Пароль = ПарольПодорожник;
	КонецЕсли;
	
	ОбщийВес =0;
	ШК="";
	КоличествоМ=0;
	Содержимое = "";
	ОбъявленнаяЦенность=0;
	ЗаказПоставщика="";
	ЗаказПеревозчика="";
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soapenv:Envelope");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:xsd", "http://www.w3.org/2001/XMLSchema");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soapenv", "http://schemas.xmlsoap.org/soap/envelope/");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soap", "http://podorojnikcrm.novene.ru/api/soap/"); 
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soapenc", "http://schemas.xmlsoap.org/soap/encoding/");
	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("soapenv:Header");
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soapenv:Body");
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:AddOrder");
	ЗаписьXML.ЗаписатьНачалоЭлемента("data");
	ЗаписьXML.ЗаписатьНачалоЭлемента("login"); ЗаписьXML.ЗаписатьТекст(Логин); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("password"); ЗаписьXML.ЗаписатьТекст(Пароль); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("orders");
	ЗаписьXML.ЗаписатьНачалоЭлемента("order");
	ЗаписьXML.ЗаписатьНачалоЭлемента("number"); ЗаписьXML.ЗаписатьТекст(СокрЛП(Выборка.Получить("НомерЗаказаПолный")));ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("date_delivery"); ЗаписьXML.ЗаписатьТекст(Формат(Выборка.Получить("ДатаДоставки"),"ДФ=dd.MM.yyyy"));ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("time_delivery"); ЗаписьXML.ЗаписатьТекст(СокрЛП(Выборка.Получить("ВремяДоставки")));ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("buyer"); ЗаписьXML.ЗаписатьТекст(""+Выборка.Получить("Контрагент"));ЗаписьXML.ЗаписатьКонецЭлемента();
	
	Телефон=СокрЛП(УбратьЛишниеСимволыТелефона(Выборка.Получить("ТелефонКонтрагента")));
	ТелефонКонтрагентаЗапасной=УбратьЛишниеСимволыТелефона(Выборка.Получить("ТелефонКонтрагентаЗапасной"));
	Если СокрЛП(ТелефонКонтрагентаЗапасной)<>"" тогда
		Телефон = Телефон+","+ТелефонКонтрагентаЗапасной;
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("phone"); 
	ЗаписьXML.ЗаписатьТекст(""+Телефон);
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	Если СокрЛП(Область2)<>"" тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("address"); 
		ЗаписьXML.ЗаписатьТекст(""+Область2);
		ЗаписьXML.ЗаписатьКонецЭлемента();
	Иначе
		Возврат "";
	КонецЕсли;
	ЗаписьXML.ЗаписатьНачалоЭлемента("pay_type"); 
	СпособОплаты = "Наличные";
	Если Выборка.Получить("ОплаченБН") тогда
		СпособОплаты = "Предоплачен";
	ИначеЕсли Выборка.Получить("КурьерСТерминалом") тогда
		СпособОплаты = "Карта";
	КонецЕсли;
	ЗаписьXML.ЗаписатьТекст(СпособОплаты);
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	тзУслуги = Заказ.Услуги.Выгрузить();
	СуммаУслуг =тзУслуги.Итог("Сумма"); 
	ЗаписьXML.ЗаписатьНачалоЭлемента("price_delivery"); ЗаписьXML.ЗаписатьТекст(Формат(СуммаУслуг,"ЧРД=.; ЧГ=0"));ЗаписьXML.ЗаписатьКонецЭлемента();
	
	тзТовары = Заказ.Товары.Выгрузить();
	СуммаТоваров =тзТовары.Итог("Сумма"); 
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("price_summ"); ЗаписьXML.ЗаписатьТекст(Формат(СуммаТоваров,"ЧРД=.; ЧГ=0"));ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("notes");
	Если Выборка.Получить("ПунктВыдачиКодDPD")<>"" тогда
		ЗаписьXML.ЗаписатьТекст("САМОВЫВОЗ");
	Иначе
		ЗаписьXML.ЗаписатьТекст("");
	КонецЕсли;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("pickup"); ЗаписьXML.ЗаписатьТекст("0");ЗаписьXML.ЗаписатьКонецЭлемента(); //pickup - это признак самовывоза, некоторые клиенты хранят заказы у подорожника, и покупатель забирает их самовывозом. В вашем случае тут видимо всегда 0
	ЗаписьXML.ЗаписатьНачалоЭлемента("items");
	
	
	МассивПакеты=тзТовары.Скопировать();
	МассивПакеты.очистить();
	МассивАксы = МассивПакеты.Скопировать();
	МассивКрепеж = МассивПакеты.Скопировать();
	МассивОтдельныеПосылки = МассивПакеты.Скопировать();
	МассивДокументы = МассивПакеты.Скопировать();
	
	
	Для каждого стр из тзТовары Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("OrderItem");
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("articul"); ЗаписьXML.ЗаписатьТекст(""+СокрЛП(стр.Номенклатура.Код));ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("volume"); ЗаписьXML.ЗаписатьТекст(СтрЗаменить(""+СокрЛП(стр.Количество*стр.ЕдиницаИзмерения.Объем),",","."));ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("weight"); ЗаписьXML.ЗаписатьТекст(СтрЗаменить(""+СокрЛП(стр.Количество*стр.ЕдиницаИзмерения.Вес),",","."));ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("title"); ЗаписьXML.ЗаписатьТекст(""+СокрЛП(стр.Номенклатура));ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("amount"); ЗаписьXML.ЗаписатьТекст(""+СокрЛП(стр.Количество));ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("price"); ЗаписьXML.ЗаписатьТекст(СокрЛП(Формат(стр.Цена,"ЧРД=.; ЧГ=0")));ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьКонецЭлемента();//OrderItem
		
		ОбщийВес 	= ОбщийВес+стр.ЕдиницаИзмерения.Вес;
		//ШК       	= ШК+СокрЛП(стр.Номенклатура.Код)+Символы.ПС;
		КоличествоМ = КоличествоМ+стр.Количество;
		Содержимое 	= Содержимое+"("+СокрЛП(стр.Номенклатура.Код)+") "+стр.Номенклатура+" - "+стр.Количество+"#"+Символы.ПС;
		ОбъявленнаяЦенность = ОбъявленнаяЦенность+стр.Сумма;
		
		Если стр.Номенклатура.Код="9178010" тогда //пакет
			ШК = ШК+Префикс+СокрЛП(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+СокрЛП(стр.Номенклатура.Код)+"V1"+";";
		ИначеЕсли стр.Номенклатура.ВидТовара  = перечисления.ВидыТоваров.Аксессуары тогда	 
			Если Найти(ШК,"VAKSV")=0 тогда
				ШК = ШК+Префикс+СокрЛП(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+"AKS"+"V1"+";";
			КонецЕсли;
		ИначеЕсли стр.Номенклатура.ВидТовара  = перечисления.ВидыТоваров.Прочее тогда	 
			Если Найти(ШК,"VKRPV")=0 тогда
				ШК = ШК+Префикс+СокрЛП(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+"KRP"+"V1"+";";
			КонецЕсли;
		Иначе
			Для к=1 по стр.Количество цикл
				ШК = ШК+Префикс+СокрЛП(Выборка.Получить("НомерЗаказа"))+"V"+СоответствиеПоставщиковКодДпд.Получить(Заказ.Подразделение)+"V"+СокрЛП(стр.Номенклатура.Код)+"V"+к+";";
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//items
	ЗаписьXML.ЗаписатьКонецЭлемента();//Order
	ЗаписьXML.ЗаписатьКонецЭлемента();//Orders
	ЗаписьXML.ЗаписатьКонецЭлемента();//data
	ЗаписьXML.ЗаписатьКонецЭлемента();//AddOrder
	ЗаписьXML.ЗаписатьКонецЭлемента();//Body
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ТекстXML = ЗаписьXML.Закрыть();
	
	нстр = табРеквизитыТК.Добавить();
	нстр.Поле = "Услуга";
	нстр.Значение = "";
	
	нстр = табРеквизитыТК.Добавить();
	нстр.Поле = "Вариант доставки";
	нстр.Значение = "";
	
	нстр = табРеквизитыТК.Добавить();
	нстр.Поле = "Количество мест";
	нстр.Значение = КоличествоМ;
	
	нстр = табРеквизитыТК.Добавить();
	нстр.Поле = "Фактический вес";
	нстр.Значение = ОбщийВес;
	
	нстр = табРеквизитыТК.Добавить();
	нстр.Поле = "Объявленная ценность";
	нстр.Значение = ОбъявленнаяЦенность;
	
	нстр = табРеквизитыТК.Добавить();
	нстр.Поле = "Содержимое";
	нстр.Значение = Содержимое;
	
	нстр = табРеквизитыТК.Добавить();
	нстр.Поле = "Грузополучатель";
	нстр.Значение = Выборка.Получить("Контрагент");
	
	нстр = табРеквизитыТК.Добавить();
	нстр.Поле = "Город доставки";
	нстр.Значение = Выборка.Получить("ПокупательГород");
	
	нстр = табРеквизитыТК.Добавить();
	нстр.Поле = "ШК";
	нстр.Значение = ШК;
	
	Возврат ТекстXML;
КонецФункции

// Функция убирает лишнии символы и разделители из строки с номером телефона
// 
// Параметры:
//	Телефон	- Строка	- Номер телефона
//
// Возвращаемое значение:
//	Строка	- Номер телефона после обработки
//
Функция УбратьЛишниеСимволыТелефона(Телефон) Экспорт
	// Убираем все ненужные символы
	ДлинаНомера = СтрДлина(Телефон);
	НовыйТелефон = "";
	Для а = 1 По ДлинаНомера Цикл
		Симв 		= Сред(Телефон, а, 1);
		КодСимвола 	= КодСимвола(Симв);
		Если КодСимвола < 58 И КодСимвола > 47 Тогда
			НовыйТелефон = НовыйТелефон + Симв;
		КонецЕсли;	
	КонецЦикла;
	// Проверяем полученный номер телефона
	Если НЕ ПустаяСтрока(НовыйТелефон) Тогда
		Если СтрДлина(НовыйТелефон) > 7 Тогда
			Если Лев(НовыйТелефон, 1) = "8" Тогда 
				НовыйТелефон = "7" + Сред(НовыйТелефон, 2, СтрДлина(НовыйТелефон));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат НовыйТелефон;
КонецФункции // УбратьЛишниеСимволыТелефона()

процедура ОбновитьРеквизитТК(ТЧ,Реквизит, Значение) экспорт
	отбор = новый структура("Поле");
	отбор.Поле=Реквизит;
	НайденныеСтроки = тч.НайтиСтроки(отбор);
	Если НайденныеСтроки.Количество()>0 тогда
		Для каждого стр из НайденныеСтроки цикл
			стр.Значение = Значение;
		КонецЦикла;
	иначе
		нстр = тч.Добавить();
		нстр.Поле = Реквизит;
		нстр.Значение = Значение;
	КонецЕсли;
КонецПроцедуры

Функция ЗаполнитьСоответствиеПоставщиков() Экспорт
	СоответствиеПоставщиковКодДпд=новый Соответствие; //для ШК Дпд, что бы шк был поменьше
	СоответствиеПоставщиковКодДпд.Вставить(Справочники.Подразделения.ПустаяСсылка(),"1");//Яршинторг - Ярославль
	СоответствиеПоставщиковКодДпд.Вставить(Справочники.Подразделения.НайтиПоКоду("00005"),"1");//Яршинторг - Ярославль
	СоответствиеПоставщиковКодДпд.Вставить(Справочники.Подразделения.НайтиПоКоду("00138"),"2");//Яршинторг Екб- Екб
	СоответствиеПоставщиковКодДпд.Вставить(Справочники.Подразделения.НайтиПоКоду("00106"),"3");//Яршинторг Рнд- Рнд
	СоответствиеПоставщиковКодДпд.Вставить(Справочники.Подразделения.НайтиПоКоду("00112"),  "4");//Яршинторг Спб- Спб
	СоответствиеПоставщиковКодДпд.Вставить(Справочники.Подразделения.НайтиПоКоду("00133"),  "6");//Яршинторг Мск- Мск
	возврат СоответствиеПоставщиковКодДпд;
КонецФункции

Процедура РегЗаданиеОбновлениеСтатусовСозданияЗаказовВДПД() экспорт
	ОбновитьСтатусыЗаказов();
КонецПроцедуры

функция ПолучитьЗначениеРеквизитаТК(ТЧ,Название1,Название2=неопределено) экспорт
	тек =  ТЧ.Найти(Название1);	
	Если тек = неопределено и Название2<>неопределено тогда
		тек =  ТЧ.Найти(Название2);	
	КонецЕсли;	
	Возврат тек;
КонецФункции

Функция ОтменитьЗаказВДПД(ЗаказПокупателя) Экспорт
		
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Envelope");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soap", "http://schemas.xmlsoap.org/soap/envelope/");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:ns","http://dpd.ru/ws/order2/2012-04-04");
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Header");
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Body");
	ЗаписьXML.ЗаписатьНачалоЭлемента("ns:cancelOrder");
	ЗаписьXML.ЗаписатьНачалоЭлемента("orders");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("auth");
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientNumber"); ЗаписьXML.ЗаписатьТекст("1007003132"); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientKey"); ЗаписьXML.ЗаписатьТекст("89CF47BC79EDDE98122968E978B4176783A774BC"); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();//auth

	НомерДПД = СокрЛП(ЗаказПокупателя.НомерЗаказаТК);
	Если НомерДПД<>"" тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("cancel");
		ЗаписьXML.ЗаписатьНачалоЭлемента("orderNum"); ЗаписьXML.ЗаписатьТекст(НомерДПД); ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьКонецЭлемента();//cancel
	КонецЕсли;
		
	ЗаписьXML.ЗаписатьКонецЭлемента();//orders
	ЗаписьXML.ЗаписатьКонецЭлемента(); //cancelOrder
	ЗаписьXML.ЗаписатьКонецЭлемента(); //Body
	ЗаписьXML.ЗаписатьКонецЭлемента(); //Envelope
	
	ТекстXML = ЗаписьXML.Закрыть();
	
	Ответ = ОтправитьЗапросWEBСервису("http://ws.dpd.ru:80/services/order2",ТекстXML);
	Если Ответ<>"" тогда
		Текст = новый ТекстовыйДокумент;
		Текст.ДобавитьСтроку(Ответ);
		ИмяФайла = ПолучитьИмяВременногоФайла("xml");
		Текст.Записать(ИмяФайла,"UTF-8 ");
		тз = РазобратьXMLОтветChancelOrder(ИмяФайла);
		стрсобщение="";
		для каждого стр из тз цикл
			стрсобщение=стрсобщение+символы.ПС+"ОтветDPD: Заказ: "+ стр.orderNum+" " +стр.status+" "+стр.errorMessage;
		КонецЦикла;
	иначе
		стрсобщение="Не удалось удалить заказ";
	КонецЕсли;
	возврат стрсобщение;
КонецФункции

Функция РазобратьXMLОтветChancelOrder(ФайлОтвета)
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ФайлОтвета);
	
	ТабЗаказы = новый ТаблицаЗначений;
	ТабЗаказы.Колонки.Добавить("orderNum");
	ТабЗаказы.Колонки.Добавить("status");
	ТабЗаказы.Колонки.Добавить("errorMessage");
	
	ЗаказыXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	Заказы = ЗаказыXDTO.Body.cancelOrderResponse.return;
	
	Если ТипЗнч(Заказы)<>Тип("СписокXDTO") Тогда
		СписокXDTOЗаказы = Новый Массив;
		попытка
			СписокXDTOЗаказы.Добавить(Заказы.return);
		исключение
			СписокXDTOЗаказы.Добавить(Заказы);
		КонецПопытки;
	Иначе
		СписокXDTOЗаказы = Заказы;
	КонецЕсли;
	
	Для Каждого XDTOЗаказ из СписокXDTOЗаказы цикл
		нстр = ТабЗаказы.Добавить();
		ЗаполнитьЗначенияСвойств(нстр,XDTOЗаказ);
	КонецЦикла;
	
	возврат ТабЗаказы;
КонецФункции

Функция ПолучитьСтоимостьДоставкиЗаказаПоТарифу(Заказ) экспорт
	СтоимостьДоставки = 0 ;
	ЗаписьXML = ПодготовитьЗапросСтоимостиДоставкиДПД(Заказ);
	ТекстXML = ЗаписьXML.Закрыть();
	//Сообщить(ТекстXML);
	Ответ = ОтправитьЗапросWEBСервису("http://ws.dpd.ru:80/services/calculator2",ТекстXML); //рабочий
	
	Если Ответ<>"" тогда
		Текст = новый ТекстовыйДокумент;
		Текст.ДобавитьСтроку(Ответ);
		ИмяФайла = ПолучитьИмяВременногоФайла("xml");
		Текст.Записать(ИмяФайла,"UTF-8 ");
		СтоимостьДоставки = XMLОтветЗапросСтоимостиДоставки(ИмяФайла);
    КонецЕсли;
  Возврат СтоимостьДоставки;
КонецФункции

Функция ПодготовитьЗапросСтоимостиДоставкиДПД(Заказ)
	Логин="1007003132"; //ЯШТ
	Пароль = "89CF47BC79EDDE98122968E978B4176783A774BC";
	
	ЗаказИМ=?(Заказ.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = Справочники.НаправленияПродаж.НайтиПоКоду("16"),истина,ложь);
	Префикс=?(ЗаказИМ,"KTY","YST");
	
	Данные = Новый Соответствие;
	Ошибка = ПодготовитьДанные(Заказ,Данные,ЗаказИМ,Префикс);
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soapenv:Envelope");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soapenv", "http://schemas.xmlsoap.org/soap/envelope/");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:ns","http://dpd.ru/ws/calculator/2012-03-20");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soap","http://dpd.ru/ws/calculator/2012-03-20");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("soapenv:Header");
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soapenv:Body");
	ЗаписьXML.ЗаписатьНачалоЭлемента("ns:getServiceCost2");
	ЗаписьXML.ЗаписатьНачалоЭлемента("request");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("auth");
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientNumber"); ЗаписьXML.ЗаписатьТекст(Логин); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientKey"); ЗаписьXML.ЗаписатьТекст(Пароль); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();//auth
	
	//отправитель
	ПривозимНаПунктВыдачиСами = истина;
	ЗаписьXML.ЗаписатьНачалоЭлемента("pickup"); 
	Если Заказ.Подразделение = Справочники.Подразделения.ПустаяСсылка() 
		или Заказ.Подразделение = Справочники.Подразделения.НайтиПоКоду("00005") тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("cityName"); ЗаписьXML.ЗаписатьТекст("Ярославль"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("regionCode"); ЗаписьXML.ЗаписатьТекст("76"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("countryCode"); ЗаписьXML.ЗаписатьТекст("RU"); ЗаписьXML.ЗаписатьКонецЭлемента();
		
	иначеЕсли Заказ.Подразделение = Справочники.Подразделения.НайтиПоКоду("00138") тогда  //Екб
		ЗаписьXML.ЗаписатьНачалоЭлемента("cityName"); ЗаписьXML.ЗаписатьТекст("Екатеринбург"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("regionCode"); ЗаписьXML.ЗаписатьТекст("62"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("countryCode"); ЗаписьXML.ЗаписатьТекст("RU"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ПривозимНаПунктВыдачиСами = ложь;
	иначеЕсли Заказ.Подразделение = Справочники.Подразделения.НайтиПоКоду("00112") тогда  //Спб
		ЗаписьXML.ЗаписатьНачалоЭлемента("cityName"); ЗаписьXML.ЗаписатьТекст("Санкт-Петербург"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("regionCode"); ЗаписьXML.ЗаписатьТекст("78"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("countryCode"); ЗаписьXML.ЗаписатьТекст("RU"); ЗаписьXML.ЗаписатьКонецЭлемента();		
	иначеЕсли Заказ.Подразделение = Справочники.Подразделения.НайтиПоКоду("00106") тогда  //РнД
		ЗаписьXML.ЗаписатьНачалоЭлемента("cityName"); ЗаписьXML.ЗаписатьТекст("Ростов-на-Дону"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("regionCode"); ЗаписьXML.ЗаписатьТекст("61"); ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("countryCode"); ЗаписьXML.ЗаписатьТекст("RU"); ЗаписьXML.ЗаписатьКонецЭлемента();		
	КонецЕсли;
	ЗаписьXML.ЗаписатьКонецЭлемента();//pickup

	//получатель
	ЗаписьXML.ЗаписатьНачалоЭлемента("delivery");
	
	//индекс
	Попытка
		индекс = ПолучитьЗначениеРеквизитаТК(Заказ.РеквизитыЗаказаТК,"PostalCode").Значение;
	исключение
		индекс = "";
	КонецПопытки;
	Если индекс<>"" тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("index");ЗаписьXML.ЗаписатьТекст(индекс); ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЕсли;
	//город
	Попытка
		город = ПолучитьЗначениеРеквизитаТК(Заказ.РеквизитыЗаказаТК,"City").Значение;
	исключение
		город = "";
	КонецПопытки;
	Если город<>"" тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("cityName");ЗаписьXML.ЗаписатьТекст(город); ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЕсли;
	
	Попытка
		Страна = ПолучитьЗначениеРеквизитаТК(Заказ.РеквизитыЗаказаТК,"countryCode").Значение;
	исключение
		Страна = "RU";
	КонецПопытки;
	ЗаписьXML.ЗаписатьНачалоЭлемента("countryCode"); ЗаписьXML.ЗаписатьТекст(Страна); ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//delivery
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("selfPickup"); ЗаписьXML.ЗаписатьТекст(?(ПривозимНаПунктВыдачиСами,"true","false")); ЗаписьXML.ЗаписатьКонецЭлемента();
	
	
	ДоставкаДоТерминала = Данные.Получить("DPDВезетНаАдрес");
	ДоставкаДоТерминала = ?(ДоставкаДоТерминала,"true","false");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("selfDelivery"); ЗаписьXML.ЗаписатьТекст(ДоставкаДоТерминала); ЗаписьXML.ЗаписатьКонецЭлемента();

	//вес = заказ.Товары.Итог("Вес");
	вес = 0;
	Для каждого стр из Заказ.Товары цикл
		вес = вес + стр.Количество * стр.ЕдиницаИзмерения.Вес;
	КонецЦикла;
	Вес = Формат(Вес,"ЧРД=.; ЧГ=");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("weight"); ЗаписьXML.ЗаписатьТекст(Вес); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("serviceCode");ЗаписьXML.ЗаписатьТекст("PCL"); ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("declaredValue"); ЗаписьXML.ЗаписатьТекст(Формат(Заказ.СуммаДокумента,"РД=.; ЧГ=")); ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//request
    ЗаписьXML.ЗаписатьКонецЭлемента();//getServiceCost2
	ЗаписьXML.ЗаписатьКонецЭлемента();//Body
    ЗаписьXML.ЗаписатьКонецЭлемента();//Header
//    ЗаписьXML.ЗаписатьКонецЭлемента();//soapenv

	Возврат ЗаписьXML;

КонецФункции

Функция XMLОтветЗапросСтоимостиДоставки(ФайлОтвета)
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ФайлОтвета);
	
	ЗаказыXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	Попытка
		Стоимость = ЗаказыXDTO.Body.getServiceCost2Response.return.cost;
		Стоимость = Число(СтрЗаменить(Стоимость,".",","));
	исключение
		Стоимость = 0;
	КонецПопытки;
	Возврат Стоимость;
КонецФункции	