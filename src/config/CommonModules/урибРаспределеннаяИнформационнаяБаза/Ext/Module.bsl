Процедура урибДействиеВыполнитьОбменДанными() Экспорт

	ФайлНайден = Истина;
	урибВыполнитьОбменДанными(,ФайлНайден);
	
	врСтатусОбмена = Константы.УРИБСтатусОбмена.Получить();
	
	Если ПустаяСтрока(врСтатусОбмена) Тогда
		Предупреждение(Строка(ТекущаяДата()) + ": Процедура обмена данными завершена успешно!" + ?(ФайлНайден," Входной файл найден."," Входной файл не найден.")); //Сообщить(Строка(ТекущаяДата()) + ": Процедура обмена данными завершена успешно!", СтатусСообщения.Информация);
	Иначе
		Предупреждение(Строка(ТекущаяДата()) + ": " + урибПолучитьОписаниеСтатусаОбмена(врСтатусОбмена)); //Сообщить(Строка(ТекущаяДата()) + ": " + урибПолучитьОписаниеСтатусаОбмена(врСтатусОбмена), СтатусСообщения.ОченьВажное);
	КонецЕсли; 

КонецПроцедуры
 
Функция урибПодключитьсяКФТП()
	
	Попытка
		врФТП = Новый FTPСоединение(
			Константы.УРИБАдресСервераFTP.Получить(),
			,
			Константы.УРИБПользовательСервераFTP.Получить(),
			Константы.УРИБПарольПользователяFTP.Получить(),
			,
			Константы.УрибПассивныйРежим.Получить()	
		);
		Возврат врФТП;
	Исключение
		Возврат Неопределено;
	КонецПопытки;

КонецФункции // урибПодключитьсяКФТП()

Процедура урибВыполнитьОбменДанными(пВыводитьСообщения = Ложь, ФайлНайден=Истина) Экспорт

	//
	врСтатусОбмена = "";
	
	врИмя = ПланыОбмена.РаспределеннаяИнформационнаяБаза.ЭтотУзел().ИмяИнтернетСоединения;
	
	Если (Константы.УрибОбменИзФайла.Получить() = Ложь) Тогда
	Если врИмя <> "" Тогда
		Состояние("Установка Интернет-соединения...");
		Попытка
			врИнтернетСоединение = Новый ИнтернетСоединение(врИмя);
		Исключение
			врСтатусОбмена = "Ошибка установки соединения с Интернет.";
			Перейти ~КОНЕЦ;
		КонецПопытки; 
	КонецЕсли; 
	
	// получить сообщения;
	// после потенциально долгих операций переподключаемся к FTP, т.к.
	// соединение FTP всего скорее разорвано сервером;
	Состояние("Подключение к FTP для получения сообщений...");
	врФТП = урибПодключитьсяКФТП();
	Если врФТП = Неопределено Тогда
		врСтатусОбмена = "Во время обмена данными произошла ошибка при подключении к FTP. " + ОписаниеОшибки();
		Перейти ~КОНЕЦ; 
	КонецЕсли; 
	
	// перебираем все файлы нам
	Состояние("Поиск новых сообщений для получения...");
	врМассив = врФТП.НайтиФайлы("/", "Message_?????_" + СокрЛП(ПланыОбмена.РаспределеннаяИнформационнаяБаза.ЭтотУзел().Код) + ".zip");
	
	ФайлНайден = ?(врМассив.Количество()>0,Истина,Ложь);
	
	Для каждого врФайлНаФТП Из врМассив Цикл
	
		Попытка
			
			ИмяФайлаСообщения = КаталогВременныхФайлов() + врФайлНаФТП.Имя;
			Состояние("Получение сообщения с FTP...");
			
			//!!! временно с newmail по HTTP
			Если Константы.УРИБАдресСервераFTP.Получить() = "ftp.newmail.ru" Тогда
				
				врHTTP = Новый HTTPСоединение("ystformuladibm.newmail.ru");
				врHTTP.Получить(врФайлНаФТП.ПолноеИмя, ИмяФайлаСообщения);
			Иначе
				
				// не будет переподключения только первое сообщение
				Если врФТП = Неопределено Тогда
					врФТП = урибПодключитьсяКФТП();
					Если врФТП = Неопределено Тогда
						врСтатусОбмена = "Во время обмена данными произошла ошибка при подключении к FTP. " + ОписаниеОшибки();
						Перейти ~КОНЕЦ; 
					КонецЕсли; 
				КонецЕсли; 
				врФТП.Получить(врФайлНаФТП.ПолноеИмя, ИмяФайлаСообщения);
			КонецЕсли; 
			врФТП = Неопределено;
			
			// извлечем из архива
			Состояние("Распаковка сообщения для получения...");
			врЧтениеАрхива = Новый ЧтениеZipФайла(ИмяФайлаСообщения);
			врЧтениеАрхива.ИзвлечьВсе(КаталогВременныхФайлов());
			УдалитьФайлы(ИмяФайлаСообщения); 
			ИмяФайлаСообщения = КаталогВременныхФайлов() + врЧтениеАрхива.Элементы[0].Имя;
			
			//
			Состояние("Чтение сообщения...");
			ЧтениеXML = Новый ЧтениеXML(); 
			ЧтениеXML.ОткрытьФайл(ИмяФайлаСообщения); 
			ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения(); 
			ЧтениеСообщения.НачатьЧтение(ЧтениеXML); 
			ПараметрыСеанса.ИдетОбменРаспределеннойБазы = Истина; 
			ПланыОбмена.ПрочитатьИзменения(ЧтениеСообщения); 
			
			врОтправитель = ЧтениеСообщения.Отправитель;
			
			ЧтениеСообщения.ЗакончитьЧтение(); 
			
			Если пВыводитьСообщения Тогда
				Сообщить("ОБМЕН " + ТекущаяДата() + ": Данные обмена приняты",СтатусСообщения.Информация); 
			КонецЕсли;
			
			врОб = врОтправитель.ПолучитьОбъект();
			врОб.ДатаЧтенияПоследнегоСообщения = ТекущаяДата();
			врОб.Записать();
						
		Исключение 
			
			врОписаниеОшибки = ОписаниеОшибки();
			
			Если ЧтениеXML <> Неопределено Тогда
				ЧтениеXML.Закрыть(); 
			КонецЕсли; 
			ЧтениеСообщения = Неопределено;
			ЧтениеXML = Неопределено;
			
			Если Найти(врОписаниеОшибки, "Возможно, информационная база уже открыта Конфигуратором.") Тогда
				врСтатусОбмена = "ЗакрытьКонфигуратор";
			ИначеЕсли Найти(врОписаниеОшибки, "Из главного узла распределенной ИБ получены изменения конфигурации") Тогда
				врСтатусОбмена = "ОбновитьКонфигурацию";
			ИначеЕсли Найти(врОписаниеОшибки, "Данные принимаются от узла, для которого зарегистрированы изменения конфигурации.") 
				ИЛИ Найти(врОписаниеОшибки, "Номер сообщения меньше или равен номеру ранее принятого сообщения") Тогда
				;
			Иначе         
				врСтатусОбмена = "В процессе обмена данными произошла ошибка. Сообщите администратору!
				|Ошибка: " + ОписаниеОшибки();
			КонецЕсли; 
		КонецПопытки; 
		
		// удалим файл, если обмен прошел без ошибок или изменения конфигурации
		Если врСтатусОбмена = "" Тогда
			Состояние("Подключение к FTP для удаления...");
			врФТП = урибПодключитьсяКФТП();
			Если врФТП <> Неопределено Тогда
				Попытка
					Состояние("Удаление сообщения на FTP...");
					врФТП.Удалить(врФайлНаФТП.ПолноеИмя);
				Исключение
					;
				КонецПопытки;
				врФТП = Неопределено;
			КонецЕсли; 
		КонецЕсли; 
			
		//После того, как чтение данных обмена закончено, возвращаем       //параметру сеанса ИдетОбменРаспределеннойБазы значение Ложь. 
		ПараметрыСеанса.ИдетОбменРаспределеннойБазы = Ложь;
		
	КонецЦикла;
	
	//
	Если врСтатусОбмена <> "" Тогда
		Перейти ~КОНЕЦ;
	КонецЕсли; 
	
~ОТПРАВИТЬ:	
	
	// отправить сообщения: выбираем все узлы из плана обмена, за исключением текущего,
	// у которых установлен реквизит ВыполнятьОбмен.
	ВыборкаУзлов = ПланыОбмена.РаспределеннаяИнформационнаяБаза.Выбрать();
	Пока ВыборкаУзлов.Следующий() Цикл 
		
		Если Не ВыборкаУзлов.ВыполнятьОбмен Тогда 
			Продолжить; 
		КонецЕсли; 
		
		Если ВыборкаУзлов.Ссылка = ПланыОбмена.РаспределеннаяИнформационнаяБаза.ЭтотУзел() Тогда
			Продолжить;
		КонецЕсли;
		
		//
		Состояние("Подключение к FTP для отправки...");
		врФТП = урибПодключитьсяКФТП();
		Если врФТП = Неопределено Тогда
			врСтатусОбмена = "Во время обмена данными произошла ошибка при подключении к FTP. " + ОписаниеОшибки();
			Перейти ~КОНЕЦ;
		КонецЕсли; 
	
		//С помощью объектов ЗаписьXML и ЗаписьСообщения выполняем запись изменений       //для выбранного узла в xml-файл.
		
		Состояние("Формирование сообщения для отправки...");
		Узел = ВыборкаУзлов.Ссылка;
		ЗаписьXML = Новый ЗаписьXML(); 
		ИмяФайлаСообщения = КаталогВременныхФайлов() + "Message_" + СокрЛП(ПланыОбмена.РаспределеннаяИнформационнаяБаза.ЭтотУзел().Код) + "_" + СокрЛП(Узел.Код) + ".xml";
		ЗаписьXML.ОткрытьФайл(ИмяФайлаСообщения); 
		ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения(); 
		ЗаписьСообщения.НачатьЗапись(ЗаписьXML,Узел); 
		ПланыОбмена.ЗаписатьИзменения(ЗаписьСообщения); 
		ЗаписьСообщения.ЗакончитьЗапись(); 
		ЗаписьXML.Закрыть(); 
		
		// сжать
		Состояние("Сжатие сообщения для отправки...");
		врИмяФайлаСообщения = "Message_" + СокрЛП(ПланыОбмена.РаспределеннаяИнформационнаяБаза.ЭтотУзел().Код) + "_" + СокрЛП(Узел.Код) + ".zip";
		ИмяФайлаАрхива = КаталогВременныхФайлов() + врИмяФайлаСообщения;
		врЗаписьАрхива = Новый ЗаписьZipФайла(ИмяФайлаАрхива);
		врЗаписьАрхива.Добавить(ИмяФайлаСообщения);
		врЗаписьАрхива.Записать();
		
		врФТП = Неопределено;
		
		Состояние("Подключение к FTP для отправки...");
		врФТП = урибПодключитьсяКФТП();
		
		// записать на ФТП
		Состояние("Запись сообщения на FTP...");
		врФТП.Записать(ИмяФайлаАрхива, врИмяФайлаСообщения + ".tmp");
		Попытка
			врФТП.Удалить("/" + врИмяФайлаСообщения);
		Исключение
			;
		КонецПопытки;
		врФТП.Переместить(врИмяФайлаСообщения + ".tmp", врИмяФайлаСообщения);
		
		// отключиться
		врФТП = Неопределено;
		
		Если пВыводитьСообщения Тогда
			Сообщить("ОБМЕН " + ТекущаяДата() + ": Сообщение обмена для узла " + Узел.Наименование + " отправлено!", СтатусСообщения.Информация); 
		КонецЕсли;
		
		УдалитьФайлы(ИмяФайлаСообщения); 
		УдалитьФайлы(ИмяФайлаАрхива); 
		
	КонецЦикла; 
	
~КОНЕЦ:	
	
	Константы.УРИБСтатусОбмена.Установить(врСтатусОбмена);
	
	Иначе 
	// Берем из файла 
	/////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////		
	Состояние("Поиск новых сообщений для получения...");
	ПутьКФайлуОбменаНаДиске = Константы.УрибПутьКФайлуОбмена.Получить();
	ПутьКФайлуОбменаНаДиске = ?(ПутьКФайлуОбменаНаДиске="","/",ПутьКФайлуОбменаНаДиске);
	врМассив = НайтиФайлы(ПутьКФайлуОбменаНаДиске, "Message_?????_" + СокрЛП(ПланыОбмена.РаспределеннаяИнформационнаяБаза.ЭтотУзел().Код) + ".zip");
	Для каждого врФайл Из врМассив Цикл
	
		Попытка
			
			ИмяФайлаСообщения = ПутьКФайлуОбменаНаДиске + врФайл.Имя;
						
			// Извлечение из архива
			Состояние("Распаковка сообщения для получения...");
			врЧтениеАрхива = Новый ЧтениеZipФайла(ИмяФайлаСообщения);
			врЧтениеАрхива.ИзвлечьВсе(КаталогВременныхФайлов());
			УдалитьФайлы(ИмяФайлаСообщения); 
			ИмяФайлаСообщения = КаталогВременныхФайлов() + врЧтениеАрхива.Элементы[0].Имя;
			
			// Чтение сообщения
			Состояние("Чтение сообщения...");
			ЧтениеXML = Новый ЧтениеXML(); 
			ЧтениеXML.ОткрытьФайл(ИмяФайлаСообщения); 
			ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения(); 
			ЧтениеСообщения.НачатьЧтение(ЧтениеXML); 
			ПараметрыСеанса.ИдетОбменРаспределеннойБазы = Истина; 
			ПланыОбмена.ПрочитатьИзменения(ЧтениеСообщения); 
			
			врОтправитель = ЧтениеСообщения.Отправитель;
			
			ЧтениеСообщения.ЗакончитьЧтение(); 
			
			Если пВыводитьСообщения Тогда
				Сообщить("ОБМЕН " + ТекущаяДата() + ": Данные обмена приняты",СтатусСообщения.Информация); 
			КонецЕсли;
			
			врОб = врОтправитель.ПолучитьОбъект();
			врОб.ДатаЧтенияПоследнегоСообщения = ТекущаяДата();
			врОб.Записать();
						
		Исключение 
			
			врОписаниеОшибки = ОписаниеОшибки();
			
			Если ЧтениеXML <> Неопределено Тогда
				ЧтениеXML.Закрыть(); 
			КонецЕсли; 
			ЧтениеСообщения = Неопределено;
			ЧтениеXML = Неопределено;
			
			Если Найти(врОписаниеОшибки, "Возможно, информационная база уже открыта Конфигуратором.") Тогда
				врСтатусОбмена = "ЗакрытьКонфигуратор";
			ИначеЕсли Найти(врОписаниеОшибки, "Из главного узла распределенной ИБ получены изменения конфигурации") Тогда
				врСтатусОбмена = "ОбновитьКонфигурацию";
			ИначеЕсли Найти(врОписаниеОшибки, "Данные принимаются от узла, для которого зарегистрированы изменения конфигурации.") 
				ИЛИ Найти(врОписаниеОшибки, "Номер сообщения меньше или равен номеру ранее принятого сообщения") Тогда
				;
			Иначе         
				врСтатусОбмена = "В процессе обмена данными произошла ошибка. Сообщите администратору!
				|Ошибка: " + ОписаниеОшибки();
			КонецЕсли; 
		КонецПопытки; 
		
		//После того, как чтение данных обмена закончено, возвращаем       //параметру сеанса ИдетОбменРаспределеннойБазы значение Ложь. 
		ПараметрыСеанса.ИдетОбменРаспределеннойБазы = Ложь;
		
	КонецЦикла;	
	//
	Если врСтатусОбмена <> "" Тогда
		Перейти ~КОНЕЦОБМЕНАСДИСКОМ;
	КонецЕсли; 
	
~ПОЛОЖИТЬ:	
	
	// отправить сообщения: выбираем все узлы из плана обмена, за исключением текущего,
	// у которых установлен реквизит ВыполнятьОбмен.
	ВыборкаУзлов = ПланыОбмена.РаспределеннаяИнформационнаяБаза.Выбрать();
	Пока ВыборкаУзлов.Следующий() Цикл 
		
		Если Не ВыборкаУзлов.ВыполнятьОбмен Тогда 
			Продолжить; 
		КонецЕсли; 
		
		Если ВыборкаУзлов.Ссылка = ПланыОбмена.РаспределеннаяИнформационнаяБаза.ЭтотУзел() Тогда
			Продолжить;
		КонецЕсли;
		
		//С помощью объектов ЗаписьXML и ЗаписьСообщения выполняем запись изменений       //для выбранного узла в xml-файл.
		
		Состояние("Формирование сообщения для отправки...");
		Узел = ВыборкаУзлов.Ссылка;
		ЗаписьXML = Новый ЗаписьXML(); 
		ИмяФайлаСообщения = КаталогВременныхФайлов() + "Message_" + СокрЛП(ПланыОбмена.РаспределеннаяИнформационнаяБаза.ЭтотУзел().Код) + "_" + СокрЛП(Узел.Код) + ".xml";
		ЗаписьXML.ОткрытьФайл(ИмяФайлаСообщения); 
		ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения(); 
		ЗаписьСообщения.НачатьЗапись(ЗаписьXML,Узел); 
		ПланыОбмена.ЗаписатьИзменения(ЗаписьСообщения); 
		ЗаписьСообщения.ЗакончитьЗапись(); 
		ЗаписьXML.Закрыть(); 
		
		// сжать
		Состояние("Сжатие сообщения для отправки...");
		врИмяФайлаСообщения = "Message_" + СокрЛП(ПланыОбмена.РаспределеннаяИнформационнаяБаза.ЭтотУзел().Код) + "_" + СокрЛП(Узел.Код) + ".zip";
		ИмяФайлаАрхива = ПутьКФайлуОбменаНаДиске + врИмяФайлаСообщения;
		врЗаписьАрхива = Новый ЗаписьZipФайла(ИмяФайлаАрхива);
		врЗаписьАрхива.Добавить(ИмяФайлаСообщения);
		врЗаписьАрхива.Записать();
						
		Если пВыводитьСообщения Тогда
			Сообщить("ОБМЕН " + ТекущаяДата() + ": Сообщение обмена для узла " + Узел.Наименование + " отправлено!", СтатусСообщения.Информация); 
		КонецЕсли;
		
		УдалитьФайлы(ИмяФайлаСообщения); 
		
	КонецЦикла; 
	
~КОНЕЦОБМЕНАСДИСКОМ:	
	
	Константы.УРИБСтатусОбмена.Установить(врСтатусОбмена);	
		
	КонецЕсли;

КонецПроцедуры 

Функция урибПолучитьОписаниеСтатусаОбмена(пСтатусОбмена, пТипСтатусаОбмена = "") Экспорт

	Если ПустаяСтрока(пСтатусОбмена) Тогда
		пТипСтатусаОбмена = "";
	ИначеЕсли пСтатусОбмена = "ЗакрытьКонфигуратор" 
		ИЛИ пСтатусОбмена = "ОбновитьКонфигурацию" Тогда
		
		пТипСтатусаОбмена = "ИзменениеКонфигурации";
	Иначе
		пТипСтатусаОбмена = "Ошибка";
	КонецЕсли;
	
	Если пСтатусОбмена = "ЗакрытьКонфигуратор" Тогда
		Возврат "Для продолжения обмена данными необходимо закрыть конфигуратор 1С."; 
	ИначеЕсли пСтатусОбмена = "ОбновитьКонфигурацию" Тогда
		Возврат "Для продолжения обмена данными необходимо обновить конфигурацию базы данных: убедиться, что закрыты все сессии 1С и выполнить обмен вручную.";
		//Возврат "Для продолжения обмена данными необходимо выполнить обмен вручную.";
	Иначе
		Возврат пСтатусОбмена;
	КонецЕсли;
	
КонецФункции
