
// Список времен, на которые можно откладывать напоминание
Перем мСписокОтложенногоВремени;

// Типы возможных документов - инициаторов напоминания
Перем мТипыДокументовНапоминаний;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ОткрытиеКонтрагентКонтактноеЛицо(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(Элемент.Значение) = Тип("Строка") И НЕ ЗначениеНеЗаполнено(Элемент.Значение) Тогда
	
		СтандартнаяОбработка = Ложь;
		
		Если ТипЗнч(ЭлементыФормы.ТаблицаНапоминаний.ТекущиеДанные.ДокументНапоминания) = Тип("ДокументСсылка.Событие")
		 ИЛИ ТипЗнч(ЭлементыФормы.ТаблицаНапоминаний.ТекущиеДанные.ДокументНапоминания) = Тип("ДокументСсылка.СчетНаОплатуПокупателю")
		 ИЛИ ТипЗнч(ЭлементыФормы.ТаблицаНапоминаний.ТекущиеДанные.ДокументНапоминания) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		
			Запись = РегистрыСведений.ДанныеНезарегистрированныхКонтрагентов.СоздатьМенеджерЗаписи();
			Запись.ОбъектРегистратор = ЭлементыФормы.ТаблицаНапоминаний.ТекущиеДанные.ДокументНапоминания;
			Запись.Прочитать();
		
			ОбработкаРедактирования = Обработки.РедактированиеДанныхНезарегистрированныхКонтрагентов.Создать();
			ОбработкаРедактирования.Запись = Запись;
			ФормаОбработки = ОбработкаРедактирования.ПолучитьФорму(, ЭтаФорма);
			ФормаОбработки.ТолькоПросмотр = Истина;
			ОбновлятьДанные = ФормаОбработки.ОткрытьМодально();
		
		КонецЕсли; 
	
	КонецЕсли; 

КонецПроцедуры

// Процедура обновляет таблицу напоминаний
//
// Параметры
//  НовыеНапоминания - таблица значений, таблица с параметрами напоминаний
//
//  Возвращаемое значение
//   НЕТ
Процедура ОбновитьТаблицуНапоминаний(НовыеНапоминания) Экспорт

	ТекущийДокументТабПоля = Неопределено;
	Если ЭлементыФормы.ТаблицаНапоминаний.ТекущиеДанные <> Неопределено Тогда
		ТекущийДокументТабПоля = ЭлементыФормы.ТаблицаНапоминаний.ТекущиеДанные.ДокументНапоминания;
	КонецЕсли; 

	Для каждого Напоминание из НовыеНапоминания Цикл

		Если Напоминание.ФлагДеньРождения Тогда
			Для каждого СтрокаНапоминания Из ТаблицаНапоминаний Цикл
				Если СтрокаНапоминания.ФлагДеньРождения
					И НЕ мТипыДокументовНапоминаний.СодержитТип(ТипЗнч(СтрокаНапоминания.ДокументНапоминания))
					И СтрокаНапоминания.Контрагент = Напоминание.Контрагент
					И СтрокаНапоминания.КонтактноеЛицо = Напоминание.КонтактноеЛицо Тогда
				
					ТаблицаНапоминаний.Удалить(СтрокаНапоминания);
					Прервать;
				
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
		
		СтрокиТаблицы = ТаблицаНапоминаний.НайтиСтроки(Новый Структура("ДокументНапоминания, КонтактноеЛицо", Напоминание.ДокументНапоминания, Напоминание.КонтактноеЛицо));
		Если СтрокиТаблицы.Количество() = 1 Тогда
			СтрокаТаблицы = СтрокиТаблицы[0];
		Иначе
			СтрокаТаблицы = ТаблицаНапоминаний.Добавить();
		КонецЕсли;

		СтрокаТаблицы.Тема                = Напоминание.Тема;
		СтрокаТаблицы.Контрагент          = Напоминание.Контрагент;
		СтрокаТаблицы.КонтактноеЛицо      = Напоминание.КонтактноеЛицо;
		СтрокаТаблицы.ТекстНапоминания    = Напоминание.ТекстНапоминания;
		СтрокаТаблицы.ДатаНапоминания     = Напоминание.ДатаНапоминания;
		СтрокаТаблицы.Пользователь        = Напоминание.Пользователь;
		СтрокаТаблицы.ДокументНапоминания = Напоминание.ДокументНапоминания;
		СтрокаТаблицы.ФлагДеньРождения    = Напоминание.ФлагДеньРождения;
		
	КонецЦикла;

	Если ТекущийДокументТабПоля <> Неопределено И НЕ ЗначениеНеЗаполнено(ТекущийДокументТабПоля) Тогда
		СтрокаТаблицы = ТаблицаНапоминаний.Найти(ТекущийДокументТабПоля);
		Если СтрокаТаблицы <> Неопределено Тогда
			ЭлементыФормы.ТаблицаНапоминаний.ТекущаяСтрока = СтрокаТаблицы;
		КонецЕсли;
	КонецЕсли;

	а = 0;
	Пока а <= (ТаблицаНапоминаний.Количество() - 1) Цикл
		Если ТаблицаНапоминаний[а].ФлагДеньРождения И НЕ мТипыДокументовНапоминаний.СодержитТип(ТипЗнч(ТаблицаНапоминаний[а].ДокументНапоминания)) Тогда
			а = а + 1;
			Продолжить;
		КонецЕсли; 
		СтрокаТаблицы = НовыеНапоминания.Найти(ТаблицаНапоминаний[а].ДокументНапоминания);
		Если СтрокаТаблицы = Неопределено Тогда
			ТаблицаНапоминаний.Удалить(ТаблицаНапоминаний[а]);
		КонецЕсли;
		а = а + 1;
	КонецЦикла;
	
	Для каждого Напоминание из ТаблицаНапоминаний Цикл
		СтрокаТаблицы = НовыеНапоминания.Найти(Напоминание.ДокументНапоминания);
		Если СтрокаТаблицы = Неопределено И НЕ Напоминание.ФлагДеньРождения Тогда
			ТаблицаНапоминаний.Удалить(Напоминание);
		КонецЕсли;
	КонецЦикла;

	Если ТаблицаНапоминаний.Количество() = 0 Тогда
		Если ЭтаФорма.Открыта() Тогда
			ЭтаФорма.Закрыть();
		КонецЕсли;
	КонецЕсли;

	ОбновитьРеквизитыФормы();

КонецПроцедуры // ОбновитьТаблицуНапоминаний()

// Процедура устанавливает картинку на форме
//
// Параметры
//  Картинка - картинка,которую нужно показать
//
//  Возвращаемое значение
//   НЕТ
Процедура УстановитьКартинку(Картинка) Экспорт

	ЭлементыФормы.Эмблема.Картинка = Картинка;

КонецПроцедуры // УстановитьКартинку()

// Процедура перезаполняет значения реквизитов формы
//
// Параметры
//  НЕТ
//
//  Возвращаемое значение
//   НЕТ
Процедура ОбновитьРеквизитыФормы()
	
	СтрокаТаблицы = ЭлементыФормы.ТаблицаНапоминаний.ТекущиеДанные;
	Если СтрокаТаблицы = Неопределено Тогда
	
		ТекстНапоминания = "";
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		КонтактноеЛицо = Справочники.КонтактныеЛица.ПустаяСсылка();
		Тема = "";
		ЭтаФорма.Заголовок = "Напоминание";
		УстановитьКартинку(ПолучитьКартинкуНапоминания(ДокументНапоминания));

	Иначе
		
		Пользователь = СтрокаТаблицы.Пользователь;
		ДокументНапоминания = СтрокаТаблицы.ДокументНапоминания;
		ДатаНапоминания = СтрокаТаблицы.ДатаНапоминания;

		ТекстНапоминания = "";
		Для Сч = 1 По СтрЧислоСтрок(СтрокаТаблицы.ТекстНапоминания) Цикл
			СтрокаТекста = СтрПолучитьСтроку(СтрокаТаблицы.ТекстНапоминания, Сч);
			Если НЕ ПустаяСтрока(СокрЛП(СтрокаТекста)) Тогда
				ТекстНапоминания = ТекстНапоминания + СтрокаТекста + Символы.ПС;
			КонецЕсли;
		КонецЦикла;
		
		Контрагент = СтрокаТаблицы.Контрагент;
		КонтактноеЛицо = СтрокаТаблицы.КонтактноеЛицо;
		Тема = СтрокаТаблицы.Тема;

		Если СтрокаТаблицы.ФлагДеньРождения И НЕ мТипыДокументовНапоминаний.СодержитТип(ТипЗнч(СтрокаТаблицы.ДокументНапоминания)) Тогда
			
			ЭтаФорма.Заголовок = "Напоминание: День рождения "+Формат(ДатаНапоминания,"ДФ='dd ММММ yyyy';ДЛФ=ДД");
			
			УстановитьКартинку(БиблиотекаКартинок.ДеньРождения);
	
		Иначе
			
			ЭтаФорма.Заголовок = "Напоминание: "+Формат(ДатаНапоминания,"ДФ='dd ММММ yyyy';ДЛФ=ДД")+", "+Формат(ДатаНапоминания,"ДФ='дддд'")+" "
			                      + Формат(ДатаНапоминания,"ДФ=ЧЧ:мм;ДЛФ=Т");
			
			УстановитьКартинку(ПолучитьКартинкуНапоминания(ДокументНапоминания));
	
		КонецЕсли; 
		
	КонецЕсли; 

КонецПроцедуры // ОбновитьРеквизитыФормы()

// Процедура открывает документы-напоминания
//
// Параметры
//  НЕТ
//
//  Возвращаемое значение
//   НЕТ
Процедура ОткрытьДокументы()

	Для каждого ВыделеннаяСтрока Из ЭлементыФормы.ТаблицаНапоминаний.ВыделенныеСтроки Цикл
	
		Если ВыделеннаяСтрока <> Неопределено Тогда

			Если ВыделеннаяСтрока.ФлагДеньРождения И НЕ мТипыДокументовНапоминаний.СодержитТип(ТипЗнч(ВыделеннаяСтрока.ДокументНапоминания)) Тогда

				НовоеСобытие = Документы.Событие.СоздатьДокумент();
				
				НовоеСобытие.Дата               = ТекущаяДата();
				НовоеСобытие.Контрагент         = ВыделеннаяСтрока.Контрагент;
				НовоеСобытие.КонтактноеЛицо     = ВыделеннаяСтрока.КонтактноеЛицо;
				НовоеСобытие.СодержаниеСобытия  = ВыделеннаяСтрока.ТекстНапоминания;
				НовоеСобытие.ОписаниеСобытия    = ВыделеннаяСтрока.Тема;
				НовоеСобытие.НапомнитьОСобытии  = Истина;
				НовоеСобытие.ВремяНапоминания   = ТекущаяДата() + 60*30;
				НовоеСобытие.СостояниеСобытия   = Перечисления.СостоянияСобытий.Запланировано;
				
				НовоеСобытие.ПолучитьФорму().Открыть();
				
			Иначе

				Если ВыделеннаяСтрока.ДокументНапоминания <> Неопределено
					И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ВыделеннаяСтрока.ДокументНапоминания))
					И НЕ ВыделеннаяСтрока.ДокументНапоминания.Пустая() Тогда
				
					ВыделеннаяСтрока.ДокументНапоминания.ПолучитьФорму().Открыть();
				
				КонецЕсли; 
				
			
			КонецЕсли; 
			
		КонецЕсли; 
	
	КонецЦикла; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	ЭтаФорма.Заголовок = "Напоминание: "+Формат(ДатаНапоминания,"ДФ='dd ММММ yyyy';ДЛФ=ДД")+", "+Формат(ДатаНапоминания,"ДФ='дддд'")+" "
	                      + Формат(ДатаНапоминания,"ДФ=ЧЧ:мм;ДЛФ=Т");
	ЭлементыФормы.ЗначениеОтложенногоВремени.СписокВыбора = мСписокОтложенногоВремени;
	ЭлементыФормы.ЗначениеОтложенногоВремени.Значение = мСписокОтложенногоВремени[0].Значение;
	Сигнал();

	ВосстановленноеЗначениеОтложенногоВремени = ВосстановитьЗначение("ЗначениеОтложенногоВремени");
	Если ТипЗнч(ВосстановленноеЗначениеОтложенногоВремени) = Тип("Число") И ЭлементыФормы.ЗначениеОтложенногоВремени.СписокВыбора.НайтиПоЗначению(ВосстановленноеЗначениеОтложенногоВремени) <> Неопределено Тогда
		ЗначениеОтложенногоВремени = ВосстановленноеЗначениеОтложенногоВремени;
	КонецЕсли; 

КонецПроцедуры // ПриОткрытии()

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ТаблицаНапоминаний.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры // ПередОткрытием()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события Нажатие элемента формы КнопкаПрекратить.
//
Процедура КнопкаПрекратитьНажатие(Элемент)

	а = 0;
	
	Пока а <= ЭлементыФормы.ТаблицаНапоминаний.ВыделенныеСтроки.Количество() - 1 Цикл

		ВыделеннаяСтрока = ЭлементыФормы.ТаблицаНапоминаний.ВыделенныеСтроки.Получить(а);
	
		Если ВыделеннаяСтрока <> Неопределено Тогда

			Если ВыделеннаяСтрока.ФлагДеньРождения И НЕ мТипыДокументовНапоминаний.СодержитТип(ТипЗнч(ВыделеннаяСтрока.ДокументНапоминания)) Тогда

				ТаблицаНапоминаний.Удалить(ВыделеннаяСтрока);
				
			Иначе

				Если ВыделеннаяСтрока.ДокументНапоминания <> Неопределено
					И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ВыделеннаяСтрока.ДокументНапоминания))
					И НЕ ВыделеннаяСтрока.ДокументНапоминания.Пустая() Тогда
				
						Попытка
						
							ОбъектДокументаНапоминания = ВыделеннаяСтрока.ДокументНапоминания.ПолучитьОбъект();
							ОбъектДокументаНапоминания.Заблокировать();
							ОбъектДокументаНапоминания.НапомнитьОСобытии = Ложь;
							ОбъектДокументаНапоминания.ВремяНапоминания = Дата('000101010000');
							ОбъектДокументаНапоминания.Записать(РежимЗаписиДокумента.Запись);

							СтрокаТаблицы = ТаблицаНапоминаний.Найти(ВыделеннаяСтрока.ДокументНапоминания);

							Если СтрокаТаблицы <> Неопределено Тогда
								ТаблицаНапоминаний.Удалить(СтрокаТаблицы);
							Иначе
								а = а +1;
							КонецЕсли;

						Исключение

							Сообщить(""+ОписаниеОшибки());
							Возврат;
						
						КонецПопытки; 
				
				КонецЕсли; 
			
			КонецЕсли; 
			
		
		КонецЕсли; 
	
	КонецЦикла;

	Если ТаблицаНапоминаний.Количество() = 0 Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
	ОбновитьРеквизитыФормы();
	
КонецПроцедуры // КнопкаПрекратитьНажатие()

// Обработчик события Нажатие элемента формы КнопкаОткрыть.
//
Процедура КнопкаОткрытьНажатие(Элемент)

	ОткрытьДокументы();
	
КонецПроцедуры // КнопкаОткрытьНажатие()

// Обработчик события Нажатие элемента формы КнопкаОтложить.
//
Процедура КнопкаОтложитьНажатие(Элемент)

	а = 0;
	
	Пока а <= ЭлементыФормы.ТаблицаНапоминаний.ВыделенныеСтроки.Количество() - 1 Цикл

		ВыделеннаяСтрока = ЭлементыФормы.ТаблицаНапоминаний.ВыделенныеСтроки.Получить(а);
	
		Если ВыделеннаяСтрока <> Неопределено Тогда

			Если ВыделеннаяСтрока.ФлагДеньРождения И НЕ мТипыДокументовНапоминаний.СодержитТип(ТипЗнч(ВыделеннаяСтрока.ДокументНапоминания)) Тогда

				НовоеСобытие = Документы.Событие.СоздатьДокумент();
				
				НовоеСобытие.Дата               = ТекущаяДата();
				НовоеСобытие.Контрагент         = ВыделеннаяСтрока.Контрагент;
				НовоеСобытие.КонтактноеЛицо     = ВыделеннаяСтрока.КонтактноеЛицо;
				НовоеСобытие.СодержаниеСобытия  = ВыделеннаяСтрока.ТекстНапоминания;
				НовоеСобытие.ОписаниеСобытия    = ВыделеннаяСтрока.Тема;
				НовоеСобытие.НапомнитьОСобытии  = Истина;
				НовоеСобытие.ВремяНапоминания   = НачалоМинуты(ТекущаяДата() + ЗначениеОтложенногоВремени);

				НовоеСобытие.ВидСобытия         = Перечисления.ВидыСобытий.ТелефонныйЗвонок;
				НовоеСобытие.ТипСобытия         = Перечисления.ВходящееИсходящееСобытие.Исходящее;
				НовоеСобытие.Ответственный      = глТекущийПользователь;
				
				СтруктураРабочихВремен = ОпределитьНачалоИОкончениеРабочегоДняПользователя();
				
				НачалоРабочегоДня    = СтруктураРабочихВремен.ДатаНачала;
				ОкончаниеРабочегоДня = СтруктураРабочихВремен.ДатаОкончания;
				
				НовоеСобытие.НачалоСобытия      = НачалоДня(ТекущаяДата()) + Час(НачалоРабочегоДня)*60*60 + Минута(НачалоРабочегоДня)*60;
				НовоеСобытие.ОкончаниеСобытия   = НачалоДня(ТекущаяДата()) + Час(ОкончаниеРабочегоДня)*60*60 + Минута(ОкончаниеРабочегоДня)*60;
				НовоеСобытие.Важность           = Перечисления.Важность.Средняя;
				НовоеСобытие.СостояниеСобытия   = Перечисления.СостоянияСобытий.Запланировано;
				НовоеСобытие.Комментарий = "Сформирован автоматически при напоминании о дне рождения";
				
				Попытка
					НовоеСобытие.Записать(РежимЗаписиДокумента.Проведение);
					ТаблицаНапоминаний.Удалить(ВыделеннаяСтрока);
				Исключение
					СообщитьОбОшибке(ОписаниеОшибки(),, "Документ ""Событие"" не создан.");
				КонецПопытки;
				
			Иначе

				Если ВыделеннаяСтрока.ДокументНапоминания <> Неопределено
					И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ВыделеннаяСтрока.ДокументНапоминания))
					И НЕ ВыделеннаяСтрока.ДокументНапоминания.Пустая() Тогда
				
					Попытка
					
						ОбъектДокументаНапоминания = ВыделеннаяСтрока.ДокументНапоминания.ПолучитьОбъект();
						ОбъектДокументаНапоминания.ВремяНапоминания = НачалоМинуты(ТекущаяДата() + ЗначениеОтложенногоВремени);
						ОбъектДокументаНапоминания.Записать(РежимЗаписиДокумента.Запись);
						
						СтрокаТаблицы = ТаблицаНапоминаний.Найти(ВыделеннаяСтрока.ДокументНапоминания);

						Если СтрокаТаблицы <> Неопределено Тогда
							ТаблицаНапоминаний.Удалить(СтрокаТаблицы);
						Иначе
							а = а +1;
						КонецЕсли;

					Исключение

						Сообщить(""+ОписаниеОшибки());
						Возврат;
					
					КонецПопытки; 
					
				КонецЕсли; 
				
			КонецЕсли; 
			
		КонецЕсли; 
	
	КонецЦикла; 
	
	Если ТаблицаНапоминаний.Количество() = 0 Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;

	ОбновитьРеквизитыФормы();
	
	СохранитьЗначение("ЗначениеОтложенногоВремени", ЗначениеОтложенногоВремени);
	
КонецПроцедуры // КнопкаОтложитьНажатие()

// Обработчик события ПриАктивизацииСтроки элемента формы ТаблицаНапоминаний.
//
Процедура ТаблицаНапоминанийПриАктивизацииСтроки(Элемент)

	ОбновитьРеквизитыФормы();

КонецПроцедуры // ТаблицаНапоминанийПриАктивизацииСтроки()

// Обработчик события ПриВыводеСтроки элемента формы ТаблицаНапоминаний.
//
Процедура ТаблицаНапоминанийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.Картинка.ОтображатьФлажок   = Ложь;
	ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки     = ?((ДанныеСтроки.ФлагДеньРождения И НЕ мТипыДокументовНапоминаний.СодержитТип(ТипЗнч(ДанныеСтроки.ДокументНапоминания))), 7, ОпределитьИндексКартинкиВидаСобытия(ДанныеСтроки.ДокументНапоминания));

КонецПроцедуры // ТаблицаНапоминанийПриВыводеСтроки()

// Обработчик события ПередНачаломДобавления элемента формы ТаблицаНапоминаний.
//
Процедура ТаблицаНапоминанийПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы ТаблицаНапоминаний.
//
Процедура ТаблицаНапоминанийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы ТаблицаНапоминаний.
//
Процедура ТаблицаНапоминанийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;

	ОткрытьДокументы();
	
КонецПроцедуры

Процедура КонтрагентОткрытие(Элемент, СтандартнаяОбработка)
	
	ОткрытиеКонтрагентКонтактноеЛицо(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура КонтактноеЛицоОткрытие(Элемент, СтандартнаяОбработка)
	
	ОткрытиеКонтрагентКонтактноеЛицо(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры


// Заполним список времен, на которые предлагается отложить напоминание
мСписокОтложенногоВремени = Новый СписокЗначений;
мСписокОтложенногоВремени.Добавить(5*60,"5 мин.");
мСписокОтложенногоВремени.Добавить(10*60,"10 мин.");
мСписокОтложенногоВремени.Добавить(15*60,"15 мин.");
мСписокОтложенногоВремени.Добавить(30*60,"30 мин.");
мСписокОтложенногоВремени.Добавить(1*60*60,"1 час");
мСписокОтложенногоВремени.Добавить(2*60*60,"2 часа");
мСписокОтложенногоВремени.Добавить(4*60*60,"4 часа");
мСписокОтложенногоВремени.Добавить(8*60*60,"8 часов");
мСписокОтложенногоВремени.Добавить(1*24*60*60,"1 день");
мСписокОтложенногоВремени.Добавить(2*24*60*60,"2 дня");
мСписокОтложенногоВремени.Добавить(3*24*60*60,"3 дня");
мСписокОтложенногоВремени.Добавить(4*24*60*60,"4 дня");
мСписокОтложенногоВремени.Добавить(1*7*24*60*60,"1 неделя");


Если ТаблицаНапоминаний.Колонки.Найти("Тема") = Неопределено Тогда
	ТаблицаНапоминаний.Колонки.Добавить("Тема");
КонецЕсли;

Если ТаблицаНапоминаний.Колонки.Найти("Контрагент") = Неопределено Тогда
	ТаблицаНапоминаний.Колонки.Добавить("Контрагент");
КонецЕсли;

Если ТаблицаНапоминаний.Колонки.Найти("КонтактноеЛицо") = Неопределено Тогда
	ТаблицаНапоминаний.Колонки.Добавить("КонтактноеЛицо");
КонецЕсли;

Если ТаблицаНапоминаний.Колонки.Найти("ТекстНапоминания") = Неопределено Тогда
	ТаблицаНапоминаний.Колонки.Добавить("ТекстНапоминания");
КонецЕсли;

Если ТаблицаНапоминаний.Колонки.Найти("ДатаНапоминания") = Неопределено Тогда
	ТаблицаНапоминаний.Колонки.Добавить("ДатаНапоминания");
КонецЕсли;

Если ТаблицаНапоминаний.Колонки.Найти("Пользователь") = Неопределено Тогда
	ТаблицаНапоминаний.Колонки.Добавить("Пользователь");
КонецЕсли;

Если ТаблицаНапоминаний.Колонки.Найти("ДокументНапоминания") = Неопределено Тогда
	ТаблицаНапоминаний.Колонки.Добавить("ДокументНапоминания");
КонецЕсли;

// Заполним массив возможных типов для документов напоминания
МассивТипов = Новый Массив;
МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
МассивТипов.Добавить(Тип("ДокументСсылка.Событие"));
мТипыДокументовНапоминаний = Новый ОписаниеТипов(МассивТипов);