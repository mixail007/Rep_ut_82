Перем КодШтрихкода;
Перем ТипКартыДоИзменения;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура устанавливает видимость для элементов формы
//
// Параметры:
//  Нет.
//
Процедура УстановитьДоступность()

	ЭлементыФормы.ТипШтрихкода.Доступность = (ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая);
	
	Если ТипКарты = Перечисления.ТипыИнформационныхКарт.Дисконтная Тогда
		ЭлементыФормы.ВидСкидки.Доступность = Истина;
		ЭлементыФормы.ПроцентСкидки.Доступность = Истина;
		ЭлементыФормы.СтатусДисконтнойКарты.Доступность = Истина;
		ЭлементыФормы.Основание.Доступность = Истина;
	Иначе
		ЭлементыФормы.ВидСкидки.Доступность = Ложь;
		ЭлементыФормы.ПроцентСкидки.Доступность = Ложь;
		ЭлементыФормы.Основание.Доступность = Ложь;
	КонецЕсли; 
	
	Если ВидСкидки = Перечисления.ВидыСкидокИнформационныхКарт.Фиксированная Тогда
		//ЭлементыФормы.ПроцентСкидки.Доступность = Истина;
		
		ЭлементыФормы.ПроцентСкидки.Видимость = Истина;
		ЭлементыФормы.Надпись7.Видимость = Истина;
		
		ЭлементыФормы.ПроцентСкидки.АвтоОтметкаНезаполненного = Истина;
	Иначе
		//ЭлементыФормы.ПроцентСкидки.Доступность = Ложь;
		
		ЭлементыФормы.ПроцентСкидки.Видимость = Ложь;
		ЭлементыФормы.Надпись7.Видимость = Ложь;
		
		ЭлементыФормы.ПроцентСкидки.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ПроцентСкидки.ОтметкаНезаполненного = Ложь;
	КонецЕсли; 
	
КонецПроцедуры // УстановитьДоступность()

// Процедура изменяет внешний вид формы в зависимости от значения, выбранного в поле
//"ТипКарты".
//
Процедура ПриИзмененииТипаКарты()

	УстановитьДоступность();
	Если ТипКарты = Перечисления.ТипыИнформационныхКарт.Дисконтная Тогда
		ЭлементыФормы.ВладелецКарты.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		Если ТипЗнч(ВладелецКарты) <> Тип ("СправочникСсылка.Контрагенты") Тогда
			ВладелецКарты = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
		ЭлементыФормы.ВладелецКарты.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ВладелецКарты.ОтметкаНезаполненного = Ложь;
		//ЭлементыФормы.ПроцентСкидки.АвтоОтметкаНезаполненного = Истина;
	Иначе
		ЭлементыФормы.ВладелецКарты.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Пользователи");
		Если ТипЗнч(ВладелецКарты) <> Тип ("СправочникСсылка.Пользователи") Тогда
			ВладелецКарты = Справочники.Пользователи.ПустаяСсылка();
		КонецЕсли;
		ЭлементыФормы.ВладелецКарты.АвтоОтметкаНезаполненного = Истина;
		//ЭлементыФормы.ПроцентСкидки.АвтоОтметкаНезаполненного = Ложь;
		//ЭлементыФормы.ПроцентСкидки.ОтметкаНезаполненного = Ложь;
	КонецЕсли;


КонецПроцедуры

// Процедура изменяет внешний вид формы в зависимости от значения, выбранного в поле
//"ВидКарты".
//
Процедура ПриИзмененииВидаКарты()

	Если ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая Тогда
		ЭлементыФормы.ТекущийКодКарты.Данные = "ШтрихКодКарты";
		ЭлементыФормы.ТекущийКодКарты.ОграничениеТипа = Новый ОписаниеТипов("Строка",,,,ТипШтрихкода.ТипЗначения.КвалификаторыСтроки);
		Если Не ЗначениеНеЗаполнено(ТипШтрихкода)
		   И Не ЗначениеНеЗаполнено(ШтрихКодКарты)
		   И (Не ПроверитьШтрихКод(ШтрихКодКарты, ТипШтрихкода)) Тогда
			Сообщить("Не верный штрихкод!", СтатусСообщения.Важное);
			ШтрихКодКарты = "";
		КонецЕсли;
		ЭлементыФормы.ТекущийКодКарты.Значение = ШтрихКодКарты;
	Иначе
		ЭлементыФормы.ТекущийКодКарты.Данные = "КодКарты";
		ЭлементыФормы.ТекущийКодКарты.ОграничениеТипа = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(100));
		ЭлементыФормы.ТекущийКодКарты.Значение = КодКарты;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ЭлементыФормы.ВидКарты.СписокВыбора.Добавить(Перечисления.ВидыИнформационныхКарт.Магнитная);
	ЭлементыФормы.ВидКарты.СписокВыбора.Добавить(Перечисления.ВидыИнформационныхКарт.Штриховая);

	ЭлементыФормы.ТипКарты.СписокВыбора.Добавить(Перечисления.ТипыИнформационныхКарт.Дисконтная);
	ЭлементыФормы.ТипКарты.СписокВыбора.Добавить(Перечисления.ТипыИнформационныхКарт.Регистрационная);

	ЭлементыФормы.ТипШтрихКода.СписокВыбора.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8);
	ЭлементыФормы.ТипШтрихКода.СписокВыбора.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	ЭлементыФормы.ТипШтрихКода.СписокВыбора.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.EAN128);
	ЭлементыФормы.ТипШтрихКода.СписокВыбора.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.Code39);
	ЭлементыФормы.ТипШтрихКода.СписокВыбора.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.Code128);

	Если ЭтоНовый()
	   И ЗначениеНеЗаполнено(ВидКарты)
	   И ЗначениеНеЗаполнено(ТипКарты) Тогда
		ВидКарты     = Перечисления.ВидыИнформационныхКарт.Магнитная;
		ТипКарты     = Перечисления.ТипыИнформационныхКарт.Дисконтная;
		ВидСкидки     = Перечисления.ВидыСкидокИнформационныхКарт.Фиксированная;
		ПроцентСкидки = Константы.ПроцентСкидкиVIPКарты.Получить();
		ТипШтрихКода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
		СтатусДисконтнойКарты = Перечисления.СтатусыДисконтнойКарты.Активна;
	КонецЕсли;

	ЭлементыФормы.ВидКарты.Значение     = ВидКарты;
	ЭлементыФормы.ТипКарты.Значение     = ТипКарты;
	ЭлементыФормы.ТипШтрихКода.Значение = ТипШтрихКода;
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Если ПользовательИБ <> Неопределено
	   И ПользовательИБ.ОсновнойИнтерфейс <> Неопределено
	   И ПользовательИБ.ОсновнойИнтерфейс.Имя = "ИнтерфейсКассира" Тогда //Задействуем интерфейс кассира
	//Если Истина Тогда
	   
	   // в интерфейсе кассира менять можно: у активных VIP-карт:
	   //	если фамилия пустая, то и фамилию
	   //	если фамилия заполнена, то только другие данные
	   Если ТипКарты = Перечисления.ТипыИнформационныхКарт.Дисконтная
		   И ВидСкидки = Перечисления.ВидыСкидокИнформационныхКарт.Фиксированная
		   И СтатусДисконтнойКарты = Перечисления.СтатусыДисконтнойКарты.Активна Тогда
			
		   //врСоотв = Новый Соответствие();
		   //врСоотв["Наименование"] = 1;
		   //врСоотв["Код"] = 1;
		   //врСоотв["КодКарты"] = 1;
		   //врСоотв["ЭтоПрефиксКода"] = 1;
		   //врСоотв[""] = 1;
		   
		   // установим "только просмотр" всему, кроме полей, начинающихся с "Контакт", и комментария
		   Для каждого й Из ЭлементыФормы Цикл
			   Если Лев(й.Имя, 7) <> "Контакт" 
				   И й.Имя <> "Комментарий" Тогда
				   Попытка
					   ЭлементыФормы[й.Имя].ТолькоПросмотр = Истина;
				   Исключение
				   
				   КонецПопытки;
			   КонецЕсли; 
		   КонецЦикла;
		   
			ЭлементыФормы.КонтактФИО.ТолькоПросмотр = Не ПустаяСтрока(КонтактФИО);
		   
	   Иначе
			ЭтаФорма.ТолькоПросмотр = Истина;
	   КонецЕсли; 
	КонецЕсли; 

	Если ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая Тогда
		ЭлементыФормы.ТекущийКодКарты.Данные = "ШтрихКодКарты";
	Иначе
		ЭлементыФормы.ТекущийКодКарты.Данные = "КодКарты";
	КонецЕсли;
	Если ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая Тогда
		Штрихкод        = Неопределено;
		КодШтрихкода    = Неопределено;
		СтрокаШтрихкода = ПолучитьШтрихКод(Ссылка);
		Если СтрокаШтрихкода <> Неопределено Тогда
			ШтрихКодКарты = СтрокаШтрихкода.Штрихкод;
			КодШтрихкода    = СтрокаШтрихкода.Код;
		КонецЕсли;
	КонецЕсли;

	ПриИзмененииТипаКарты();
	УстановитьДоступность();

	вр = Не яштАдминистративныеФункцииДоступны();
	ЭлементыФормы.Наименование.ТолькоПросмотр = вр;
	ЭлементыФормы.Код.ТолькоПросмотр = вр;
	ЭлементыФормы.ТекущийКодКарты.ТолькоПросмотр = вр;
	ЭлементыФормы.ЭтоПрефиксКода.Доступность = Не вр;
	ЭлементыФормы.ВладелецКарты.ТолькоПросмотр = вр;
	ЭлементыФормы.ДатаАктивации.ТолькоПросмотр = вр;
	ЭлементыФормы.Основание.ТолькоПросмотр = вр;
	
	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	

// Процедура - обработчик события "ПередЗаписью" формы
//
Процедура ПередЗаписью(Отказ)
	
	Если ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая Тогда
		КодКарты = ШтрихКодКарты;
	КонецЕсли;
	
	Если ТипКарты = Перечисления.ТипыИнформационныхКарт.Регистрационная Тогда
		Если ЗначениеНеЗаполнено(ВладелецКарты) Тогда
			Предупреждение("Перед записью необходимо заполнить поле Владелец карты!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	Иначе
		Если ВидСкидки = Перечисления.ВидыСкидокИнформационныхКарт.Фиксированная
			И СтатусДисконтнойКарты = Перечисления.СтатусыДисконтнойКарты.Активна
			И ЗначениеНеЗаполнено(ПроцентСкидки) Тогда
			Предупреждение("Перед записью необходимо заполнить процент скидки!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриЗаписи" формы
//
Процедура ПриЗаписи(Отказ)

	Если ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая Тогда

		Если ШтрихКодКарты = "" Тогда
			Предупреждение("Перед записью необходимо заполнить код карты!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ТипШтрихКода = "" Тогда
			Предупреждение("Перед записью необходимо заполнить тип штрих-кода!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;

		НайденныеЗаписи = ПроверитьУникальностьШтрихКода(ШтрихКодКарты, КодШтрихкода);
		Если НайденныеЗаписи <> Неопределено И НайденныеЗаписи.Количество()<>0 Тогда //Найдены неуникальные записи.

			Ответ = Вопрос(""+ШтрихКодКарты+". Такой штрихкод уже установлен для других значений!"+Символы.ПС+
			"Показать записи с таким штрихкодом?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				НаборЗаписей = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
				НаборЗаписей.Прочитать();
				ФормаНаборЗаписей = НаборЗаписей.ПолучитьФорму("ФормаНабораЗаписей");
				ФормаНаборЗаписей.ЭлементыФормы.РегистрСведенийНаборЗаписей.ОтборСтрок.Штрихкод.Значение = ШтрихКодКарты;
				ФормаНаборЗаписей.ЭлементыФормы.РегистрСведенийНаборЗаписей.ОтборСтрок.Штрихкод.Использование = Истина;
				ФормаНаборЗаписей.ОткрытьМодально();
			КонецЕсли;
			Если Константы.РазрешитьНеуникальныеШтрихкоды.Получить() = Ложь Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;

		КонецЕсли;

	Иначе
		Если КодКарты = "" Тогда
			Предупреждение("Перед записью необходимо заполнить код карты!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы
//
Процедура ПослеЗаписи()

	Если ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая Тогда
		ЗаписьШтрихкода              = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
		ЗаписьШтрихкода.Владелец     = Ссылка;
		Если ЗначениеНеЗаполнено(КодШтрихкода) Тогда
			ЗаписьШтрихкода.Код      = ПолучитьНовыйКодДляШтрихКода();
			КодШтрихкода    = ЗаписьШтрихкода.Код;
		Иначе
			ЗаписьШтрихкода.Код      = КодШтрихкода;
			ЗаписьШтрихкода.Прочитать();
		КонецЕсли;
		ЗаписьШтрихкода.ТипШтрихкода = ТипШтрихкода;
		ЗаписьШтрихкода.Штрихкод     = ШтрихКодКарты;

		ЗаписьШтрихкода.Записать();
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик внешнего события.
//
Процедура ВнешнееСобытие(Источник, Событие, Данные)

	Если Не(ВводДоступен()) Тогда
		Возврат;
	КонецЕсли;

	Если Событие = "BarCodeValue" И глТорговоеОборудование <> Неопределено Тогда

		//Получаем штрихкод и заносим его в выбранную строку
		ВидКарты                        = Перечисления.ВидыИнформационныхКарт.Штриховая;
		ВидКартыПриИзменении(ЭлементыФормы.ВидКарты);
		ЭлементыФормы.ВидКарты.Значение = ВидКарты;

		ШтрихКод         = глТорговоеОборудование.УдалитьПрефиксИзШтрихКода(Данные);
		ТекущийШтрихКод  = ШтрихКодКарты;

		НайденныеЗаписи  = ПроверитьУникальностьШтрихКода(ШтрихКод, КодШтрихкода);

		НеУникален = Ложь;
		Если НайденныеЗаписи <> Неопределено И НайденныеЗаписи.Количество()<>0 Тогда //Найдены неуникальные записи.

			Ответ = Вопрос(""+ШтрихКод+". Такой штрихкод уже установлен для других значений!"+Символы.ПС+
			"Показать записи с таким штрихкодом?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				НаборЗаписей = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
				НаборЗаписей.Прочитать();
				ФормаНаборЗаписей = НаборЗаписей.ПолучитьФорму("ФормаНабораЗаписей");
				ФормаНаборЗаписей.ЭлементыФормы.РегистрСведенийНаборЗаписей.ОтборСтрок.Штрихкод.Значение = ШтрихКод;
				ФормаНаборЗаписей.ЭлементыФормы.РегистрСведенийНаборЗаписей.ОтборСтрок.Штрихкод.Использование = Истина;
				ФормаНаборЗаписей.ОткрытьМодально();
			КонецЕсли;
			НеУникален = Истина;

		КонецЕсли;

		Если Константы.РазрешитьНеуникальныеШтрихкоды.Получить()
		 Или (Не Константы.РазрешитьНеуникальныеШтрихкоды.Получить()) И (Не НеУникален) Тогда
			Если (Не ЗначениеНеЗаполнено(ТекущийШтрихКод)) И (ТекущийШтрихКод <> Штрихкод) Тогда
				Ответ = Вопрос("Задать новый штрих-код для карты?", РежимДиалогаВопрос.ДаНет);
			КонецЕсли;
			Если Ответ = КодВозвратаДиалога.Да ИЛИ Ответ = Неопределено Тогда
				ШтрихКодКарты = Штрихкод;
			КонецЕсли;
		КонецЕсли;

		глТорговоеОборудование.СканерПосылкаДанных(1);
	ИначеЕсли Событие = "MagneticStripeCardValue" Тогда

		ВидКарты     = Перечисления.ВидыИнформационныхКарт.Магнитная;
		ЭлементыФормы.ВидКарты.Значение     = ВидКарты;
		ВидКартыПриИзменении(ЭлементыФормы.ВидКарты);

		ТекДанные = глТорговоеОборудование.ПолучитьДанныеОтРидера(Данные);
		Карты = ПроверитьУникальностьМагнитногоКода(ТекДанные, Ссылка);

		Если (Карты <> Неопределено) И Карты.Количество() <> 0 Тогда
			Заголовок = "Найдены карты с таким кодом (" + ТекДанные + ")";
			ТекстОшибки = "";
			Для Каждого СтрокаКарты Из Карты Цикл
				ТекстОшибки = ТекстОшибки + "Карта: "+СтрокаКарты.Карта+", код: " + СтрокаКарты.КодКарты+Символы.ПС;
			КонецЦикла;
			СообщитьОбОшибке(ТекстОшибки,,Заголовок);
		Иначе
			Если (Не ЗначениеНеЗаполнено(КодКарты)) И (КодКарты <> ТекДанные) Тогда
				Ответ = Вопрос("Задать новый код для карты?", РежимДиалогаВопрос.ДаНет);
			КонецЕсли;
			Если Ответ = КодВозвратаДиалога.Да ИЛИ Ответ = Неопределено Тогда
				КодКарты = ТекДанные;
			КонецЕсли;
		КонецЕсли;

		глТорговоеОборудование.РидерПосылкаДанных();

	КонецЕсли;

	УстановитьДоступность();

КонецПроцедуры // ВнешнееСобытие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Обработчик события "ПриИзменении" поля "Вид карты".
//
Процедура ВидКартыПриИзменении(Элемент)

	ПриИзмененииВидаКарты();
	УстановитьДоступность();

КонецПроцедуры

// Обработчик события "НачалоВыбораИзСписка" поля "Текущий код карты".
//
Процедура ТипКартыНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	ТипКартыДоИзменения = Элемент.Значение;

КонецПроцедуры

// Обработчик события "ПриИзменении" поля "Тип карты".
//
Процедура ТипКартыПриИзменении(Элемент)

	Если ТипКартыДоИзменения <> Элемент.Значение Тогда
		Если НЕ ЗначениеНеЗаполнено(ВладелецКарты) Тогда
			Ответ = Вопрос("При изменении типа карты поле ""Владелец карты"" очистится. Продолжить?",
			               РежимДиалогаВопрос.ОКОтмена);
			Если Ответ <> КодВозвратаДиалога.ОК Тогда
				Элемент.Значение = ТипКартыДоИзменения;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	ПриИзмененииТипаКарты();
	УстановитьДоступность();

КонецПроцедуры

Процедура ТипШтрихкодаПриИзменении(Элемент)

	ПриИзмененииВидаКарты();

КонецПроцедуры

Процедура ТекущийКодКартыПриИзменении(Элемент)
	Если ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая Тогда
		Если Не ЗначениеНеЗаполнено(ТипШтрихкода)
		   И Не ЗначениеНеЗаполнено(ШтрихКодКарты)
		   И (Не ПроверитьШтрихКод(ШтрихКодКарты, ТипШтрихкода)) Тогда
			Сообщить("Не верный штрихкод!", СтатусСообщения.Важное);
			ШтрихКодКарты = "";
		КонецЕсли;
		ЭлементыФормы.ТекущийКодКарты.Значение = ШтрихКодКарты;
	КонецЕсли;
КонецПроцедуры

Процедура ПриИзмененииВидаСкидки()

	//Если ВидСкидки = Перечисления.ВидыСкидокИнформационныхКарт.Накопительная
	//	И ПроцентСкидки <> 0 Тогда
	//	ПроцентСкидки = 0;
	//КонецЕсли; 

КонецПроцедуры
 
Процедура ВидСкидкиПриИзменении(Элемент)
	
	ПриИзмененииВидаСкидки();
	УстановитьДоступность();
	
КонецПроцедуры

Процедура КонтактФИОПриИзменении(Элемент)
	
	Если ТипКарты = Перечисления.ТипыИнформационныхКарт.Дисконтная Тогда
	
		Если ВидСкидки = Перечисления.ВидыСкидокИнформационныхКарт.Накопительная Тогда
			Наименование = КонтактФИО + " (накоп.)";
		Иначе
			Наименование = КонтактФИО + " (VIP)";
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры



