Перем мПустаяКартинка;
Перем тТипЦенДляПечати;
Перем ВыделятьЦветом;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ

// Обновляет содержимое картинки
//
Процедура ПоказатьОсновноеИзображение()

	Если ЭлементыФормы.ДействияФормы.Кнопки.Изображение.Пометка = Истина Тогда
		
		ТекущиеДанныеСписка = ЭлементыФормы.Список.ТекущиеДанные;
		
		Если НЕ ТекущиеДанныеСписка = Неопределено
		   И НЕ ТекущиеДанныеСписка.ЭтоГруппа
		 //  И НЕ ТекущиеДанныеСписка.ОсновноеИзображение.Пустая() 
		 Тогда
		//	ЭлементыФормы.ОсновноеИзображение.Картинка = ТекущиеДанныеСписка.ОсновноеИзображение.Хранилище.Получить();
			ПоказатьОсновноеИзображениеЭлемента( ТекущиеДанныеСписка.ссылка ); // фото по ссылке на элемент!
		Иначе
		//	ЭлементыФормы.ОсновноеИзображение.Картинка = мПустаяКартинка;
			ЭлементыФормы.ПолеHTMLДокумента.УстановитьТекст("");
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

 
// Процедура устанавливает в поле картинки основное изображение номенклатуры
//как в Элементе номенклатуры
Процедура ПоказатьОсновноеИзображениеЭлемента(эл) 
	  форма = эл.получитьФорму("ФормаЭлемента");
	  форма.ПоказатьОсновноеИзображение();
	  
	  ЭлементыФормы.ПолеHTMLДокумента.УстановитьТекст( форма.ЭлементыФормы.ПолеHTMLДокумента.ПолучитьТекст() );
	  
КонецПроцедуры // ПоказатьОсновноеИзображениеЭлемента()
  

// Показывает или прячет панель основного изображения в зависимости от переменной мПоказыватьКартинку
//
Процедура ПоказатьСпрятатьПанельОсновногоИзображения()
	
	Если ЭлементыФормы.ДействияФормы.Кнопки.Изображение.Пометка Тогда
		
		ЭлементыФормы.РазделительКартинки.Доступность = Истина;
		ЭлементыФормы.ПанельОсновногоИзображения.Свертка = РежимСверткиЭлементаУправления.Нет;
		
		Если ЭлементыФормы.ПанельОсновногоИзображения.Высота = 0 Тогда
			ТекущийВерх = ЭлементыФормы.ПанельОсновногоИзображения.Верх;
			ЭлементыФормы.ПанельОсновногоИзображения.Верх = ТекущийВерх - 120;
			ЭлементыФормы.ПанельОсновногоИзображения.Высота = ТекущийВерх - ЭлементыФормы.ПанельОсновногоИзображения.Верх;
		КонецЕсли;
		
		Если ЭлементыФормы.ПанельОсновногоИзображения.Лево = 0 Тогда
			ЭлементыФормы.ПанельОсновногоИзображения.Ширина = ЭлементыФормы.ПанельОсновногоИзображения.Ширина - 8;
			ЭлементыФормы.ПанельОсновногоИзображения.Лево = 8;
		КонецЕсли;
		
		ЭлементыФормы.РазделительКартинки.УстановитьПривязку(ГраницаЭлементаУправления.Низ, Панель, ГраницаЭлементаУправления.Низ);
		ЭлементыФормы.ПанельОсновногоИзображения.УстановитьПривязку(ГраницаЭлементаУправления.Верх, ЭлементыФормы.РазделительКартинки, ГраницаЭлементаУправления.Низ);
	Иначе
		
		ЭлементыФормы.ПанельОсновногоИзображения.УстановитьПривязку(ГраницаЭлементаУправления.Верх, ЭлементыФормы.ПанельОсновногоИзображения, ГраницаЭлементаУправления.Низ);
		ЭлементыФормы.РазделительКартинки.УстановитьПривязку(ГраницаЭлементаУправления.Низ, ЭлементыФормы.ПанельОсновногоИзображения, ГраницаЭлементаУправления.Верх);
		
		ЭлементыФормы.ПанельОсновногоИзображения.Свертка = РежимСверткиЭлементаУправления.Низ;
		ЭлементыФормы.РазделительКартинки.Доступность = Ложь;
	КонецЕсли;
	
	ПоказатьОсновноеИзображение();
	
КонецПроцедуры // ПоказатьСпрятатьПанельОсновногоИзображения()

// Обработчик события элемента КоманднаяПанельФормы.ДействиеСвойства.
//
Процедура ДействияФормыДействиеСвойства(Кнопка)

	Если ЗначениеНеЗаполнено(ЭлементыФормы.Список.ТекущаяСтрока) Тогда
		Возврат;
	КонецЕсли;

	Форма = Обработки.ЗначенияСвойствОбъекта.ПолучитьФорму("ЗначенияСвойствОбъекта", ЭтаФорма, );

	Форма.НазначениеСвойств      = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
	Форма.ОбъектОтбораЗначений   = ЭлементыФормы.Список.ТекущаяСтрока;
	Форма.ОбъектОтбораНазначений = ЭлементыФормы.Список.ТекущаяСтрока;

	Форма.ПрочитатьЗаполнитьСвойстваИЗначения();
	Форма.Открыть();

КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.ДействиеКатегории.
//
Процедура ДействияФормыДействиеКатегории(Кнопка)

	Если ЗначениеНеЗаполнено(ЭлементыФормы.Список.ТекущаяСтрока) Тогда
		Возврат;
	КонецЕсли;

	Форма = Обработки.КатегорииОбъекта.ПолучитьФорму("КатегорииОбъекта", ЭтаФорма, );

	Форма.НазначениеКатегорий   = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
	Форма.ОбъектОтбораКатегорий = ЭлементыФормы.Список.ТекущаяСтрока;

	Форма.ПрочитатьЗаполнитьКатегорииОбъекта();
	Форма.Открыть();

КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.ДействиеОткрытьПрайсЛист.
//
Процедура ДействияФормыОткрытьПрайсЛист(Кнопка)

	ФормаПрайса = Обработки.ПечатьПрайсЛиста.ПолучитьФорму("ФормаЗаполнения");

	Если ЭлементыФормы.Список.ТекущаяСтрока<> Неопределено Тогда
		СписокНоменклатуры = Новый СписокЗначений;
		СписокНоменклатуры.Добавить(ЭлементыФормы.Список.ТекущаяСтрока.Ссылка);
		ФормаПрайса.мСписокНоменклатуры = СписокНоменклатуры;
	КонецЕсли;

	ФормаПрайса.Открыть();

КонецПроцедуры

// Процедура - обработчик внешнего события.
//
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Перем ТаблицаТоваров;

	Если Не(ВводДоступен()) Тогда
		Возврат;
	КонецЕсли;

	Если глТорговоеОборудование <> Неопределено Тогда
		Если Событие = "BarCodeValue" Тогда
			Если глТорговоеОборудование.ПолучитьТоварПоШтрихкоду(Данные, ТаблицаТоваров) Тогда
				ТаблицаТоваров.Свернуть("Номенклатура,Штрихкод");
				Если ТаблицаТоваров.Количество() = 1 Тогда
					ОткрытьЗначение(ТаблицаТоваров[0].Номенклатура);
				ИначеЕсли ТаблицаТоваров.Количество() > 1 Тогда
					СтрокаНоменклатуры = ТаблицаТоваров.ВыбратьСтроку("Выберите из найденных по штрихкоду.");
					Если СтрокаНоменклатуры<>Неопределено Тогда
						ОткрытьЗначение(СтрокаНоменклатуры.Номенклатура);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			глТорговоеОборудование.СканерПосылкаДанных(1);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.ДействиеЭтикетка.
//
Процедура НажатиеЭтикетка(Кнопка)

	Если ЭлементыФормы.Список.ТекущаяСтрока = Неопределено Тогда
		ПечатьЭтикеток();
	Иначе
		ПечатьЭтикеток(ЭлементыФормы.Список.ТекущаяСтрока.Ссылка);
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьВТаблицу(ТабДанных, Товар, ТипЦен, СХарактеристиками = Неопределено)

	ВалютаЦены = Неопределено;
	ЕдиницаЦены = Неопределено;
	ЦенаПечати = ПолучитьЦенуНоменклатуры(Товар,, ТипЦен,, ЕдиницаЦены, ВалютаЦены);
	Если ЦенаПечати = 0 Тогда
		Если  НЕ Товар.ВестиУчетПоХарактеристикам Тогда
			Сообщить("Для товара " + Товар.НаименованиеПолное + " не установлена цена выбранного типа. Эта позиция не печается. ", СтатусСообщения.Внимание);
			Возврат;
		Иначе
			Сообщить("Для товара " + Товар.НаименованиеПолное + " без характеристик не установлена цена выбранного типа.", СтатусСообщения.Внимание);
		КонецЕсли;
	Иначе
		СтрокаДанных = ТабДанных.Добавить();
		СтрокаДанных.Номенклатура             = Товар;
		СтрокаДанных.НоменклатураНаименование = Товар.НаименованиеПолное;
		СтрокаДанных.Единица                  = ЕдиницаЦены;
		СтрокаДанных.ЕдиницаНаименование      = ЕдиницаЦены.Наименование;
		СтрокаДанных.Цена                     = ЦенаПечати;
		СтрокаДанных.Валюта                   = ВалютаЦены;
	КонецЕсли;

	Если СХарактеристиками <> Неопределено
	   И Товар.ВестиУчетПоХарактеристикам Тогда
		ВыборкаХарактеристик = Справочники.ХарактеристикиНоменклатуры.Выбрать(,Товар);
		Пока ВыборкаХарактеристик.Следующий() Цикл
			Характеристика = ВыборкаХарактеристик.Ссылка;
			ВалютаЦены = Неопределено;
			ЕдиницаЦены = Неопределено;
			ЦенаПечати = ПолучитьЦенуНоменклатуры(Товар, Характеристика, ТипЦен,, ЕдиницаЦены, ВалютаЦены);
			Если ЦенаПечати = 0 Тогда
				Продолжить;
			КонецЕсли;

			СтрокаДанных = ТабДанных.Добавить();
			СтрокаДанных.Номенклатура               = Товар;
			СтрокаДанных.НоменклатураНаименование   = Товар.НаименованиеПолное;
			СтрокаДанных.ХарактеристикаНаименование = Характеристика.Наименование;
			СтрокаДанных.Единица                    = ЕдиницаЦены;
			СтрокаДанных.ЕдиницаНаименование        = ЕдиницаЦены.Наименование;
			СтрокаДанных.Цена                       = ЦенаПечати;
			СтрокаДанных.Валюта                     = ВалютаЦены;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры // ДобавитьВТаблицу()

// Обработчик события элемента КоманднаяПанельФормы.ДействиеЦенники.
//
Процедура ДействияФормыЦенники(Кнопка)

	Если ЭлементыФормы.Список.ТекущаяСтрока = Неопределено Тогда
		// ничего нет
		Возврат;
	КонецЕсли;

	Данные = Новый Структура("Организация, ТаблицаДанных, ДатаПечати");

	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("Номенклатура");
	ТаблицаДанных.Колонки.Добавить("НоменклатураНаименование");
	ТаблицаДанных.Колонки.Добавить("ХарактеристикаНаименование");
	ТаблицаДанных.Колонки.Добавить("Цена");
	ТаблицаДанных.Колонки.Добавить("Единица");
	ТаблицаДанных.Колонки.Добавить("ЕдиницаНаименование");
	ТаблицаДанных.Колонки.Добавить("Валюта");

	ТипыЦен = Справочники.ТипыЦенНоменклатуры.ПолучитьФормуВыбора(, ЭтаФорма);
	ТипыЦен.ОткрытьМодально();

	Если тТипЦенДляПечати = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Товар = ЭлементыФормы.Список.ТекущиеДанные.Ссылка;
	Если Товар.ЭтоГруппа Тогда
		Ответ = Вопрос("Печатать ценники по характеристикам?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СХарактеристиками = Истина;
		КонецЕсли;
		ЗаполнитьТаблицуДанных(ТаблицаДанных, Товар, СХарактеристиками);
	Иначе
		Если Товар.ВестиУчетПоХарактеристикам Тогда
			Ответ = Вопрос("Печатать ценники по характеристикам?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				СХарактеристиками = Истина;
			КонецЕсли;
		КонецЕсли;
		ДобавитьВТаблицу(ТаблицаДанных, Товар, тТипЦенДляПечати, СХарактеристиками);
	КонецЕсли;

	Данные.Организация   = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
	Данные.ТаблицаДанных = ТаблицаДанных;
	Данные.ДатаПечати    = ТекущаяДата();

	Ценники = НапечататьЦенники(Данные);
	НапечататьДокумент(Ценники, , , "Ценники");

	тТипЦенДляПечати = Неопределено;

КонецПроцедуры

// Обработчик события нажатия на кнопку Комплектующие.
//
Процедура ДействияФормыКомплектующие(Кнопка)

	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		// ничего нет
		Возврат;
	КонецЕсли;

	Если ТекущийЭлемент.ТекущаяСтрока = Справочники.Номенклатура.ПустаяСсылка() Тогда
		Предупреждение("Не выбрана ни одна позиция (возможно фокус ввода находится на дереве групп)", , "Ошибка печати");
		Возврат;
	КонецЕсли;

	МассивНоменклатуры = Новый Массив;
	МассивНоменклатуры.Добавить(ТекущийЭлемент.ТекущаяСтрока);
	ТабДокумент = НапечататьКомплектующие(МассивНоменклатуры);

	Если ТабДокумент.ВысотаТаблицы > 0 Тогда
		НапечататьДокумент(ТабДокумент, , , "Комплектующие");
	Иначе
		Предупреждение("Для "+СокрЛП(ТекущийЭлемент.ТекущаяСтрока)+" список комплектующих не задан!");
	КонецЕсли;

КонецПроцедуры // ДействияФормыКомплектующие()

// Обработчик события выбора пункта меню Остатки на складах.
//
Процедура ДействияФормыОстаткиНаСкладах(Кнопка)

	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		// ничего нет
		Возврат;
	КонецЕсли;

	яштОткрытьОтчетПоНоменклатуреОстаткиНаСкладах(ЭлементыФормы.Список.ТекущаяСтрока);

КонецПроцедуры

Процедура ДействияФормыЗаказыПокупателей(Кнопка)
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		// ничего нет
		Возврат;
	КонецЕсли;

	яштОткрытьОтчетПоЗаказамПокупателей(ЭлементыФормы.Список.ТекущаяСтрока);
КонецПроцедуры


// Процедура - обработчик события "ПриАктивизацииСтроки" элемента формы Список.
//
Процедура СписокПриАктивизацииСтроки(Элемент)

	ПоказатьОсновноеИзображение();

	ЭлементыФормы.Дерево.ТекущаяСтрока = ЭлементыФормы.Список.ТекущийРодитель;
	
	ОбновитьИнформацию();

КонецПроцедуры

Процедура ДействияФормыИзображение(Кнопка)

	ЭлементыФормы.ДействияФормы.Кнопки.Изображение.Пометка = НЕ ЭлементыФормы.ДействияФормы.Кнопки.Изображение.Пометка;
	ПоказатьСпрятатьПанельОсновногоИзображения();

КонецПроцедуры

Процедура ДеревоСИзображениемВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если  ВыбраннаяСтрока.Ссылка = Справочники.Номенклатура.ПустаяСсылка() Тогда
		ЭлементыФормы.Список.ТекущийРодитель = Неопределено;
	Иначе
		ЭлементыФормы.Список.ТекущийРодитель = ВыбраннаяСтрока.Ссылка;
	КонецЕсли;

	ПоказатьОсновноеИзображение();

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)

	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.ТипыЦенНоменклатуры") Тогда
		тТипЦенДляПечати = ЗначениеВыбора;
	ИначеЕсли ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.ХранилищеДополнительнойИнформации") Тогда
		ПоказатьОсновноеИзображение();
	КонецЕсли;

КонецПроцедуры // ОбработкаВыбора()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	ПоказыватьКартинку = ВосстановитьЗначение("Справочники.Номенклатура.ФормаСписка.Изображение");

	// если сохраненного значения нет, будем картинку показывать
	Если ПоказыватьКартинку = Неопределено Тогда
		ПоказыватьКартинку = Истина;
	КонецЕсли;

	ЭлементыФормы.ДействияФормы.Кнопки.Изображение.Пометка = ПоказыватьКартинку;
	
	ПоказатьСпрятатьПанельОсновногоИзображения();
	
	ВыделятьЦветом = Константы.ВыделятьКраснымОтсутствиеВеса.Получить();
	
	Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ПродажаАвтозапчастей") Тогда
		ЭлементыФормы.Список.ИерархическийПросмотр=Истина; 
		ЭлементыФормы.Список.ИзменятьИерархическийПросмотр=Ложь;	
		ЭлементыФормы.Дерево.РодительВерхнегоУровня=Справочники.Номенклатура.Автозапчасти;
		ЭлементыФормы.Список.РодительВерхнегоУровня=Справочники.Номенклатура.Автозапчасти;
	КонецЕсли;
	
	СправочникиОтборПомеченныхНаУдаление(Список.Отбор, ЭлементыФормы.Список);
	
КонецПроцедуры // ПриОткрытии()

// Обработчик события ОбработкаОповещения формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
			ПоказатьОсновноеИзображение();
		
	Иначе
		Если (ИмяСобытия = "ОбновитьФорму" И Источник = ЭлементыФормы.Список.ТекущиеДанные.Ссылка)
		 ИЛИ (ИмяСобытия = "ЗаписанЭлементНоменклатуры" И Параметр = ЭлементыФормы.Список.ТекущиеДанные.Ссылка) Тогда
			ПоказатьОсновноеИзображение();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("Справочники.Номенклатура.ФормаСписка.Изображение", ЭлементыФормы.ДействияФормы.Кнопки.Изображение.Пометка);
	
КонецПроцедуры // ПриЗакрытии()

// Процедура - обработчик события нажатие по кнопке Файлы командной панели ДействияФормы.
//
Процедура ДействияФормыФайлы(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЭлементыФормы.Список.ТекущиеДанные.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;

	СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ЭлементыФормы.Список.ТекущиеДанные.Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ЭлементыФормы.Список.ТекущиеДанные.Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", ЭлементыФормы.Список.ТекущиеДанные.Ссылка);
	
	ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);

КонецПроцедуры

Процедура ОсновноеИзображениеНажатие(Элемент)
	
	ТекущиеДанныеСписка = ЭлементыФормы.Список.ТекущиеДанные;
	
	Если ТекущиеДанныеСписка = Неопределено ИЛИ ТекущиеДанныеСписка.ЭтоГруппа Тогда
		Предупреждение("Укажите в списке элемент номенклатуры!");
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанныеСписка.ОсновноеИзображение.Пустая() Тогда
		Предупреждение("Основное изображение номенклатуры не задано!");
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуИзображения(ЭтаФорма, ТекущиеДанныеСписка.ОсновноеИзображение, ТекущиеДанныеСписка.Ссылка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// добавляет в выборку товаров все товары данного родителя
//
Функция ЗаполнитьТаблицуДанных(ТаблицаДанных, Родитель, СХарактеристиками = Неопределено)

	ВыборкаТоваров = Справочники.Номенклатура.Выбрать(Родитель);
	Пока ВыборкаТоваров.Следующий() Цикл
		Если ВыборкаТоваров.ЭтоГруппа Тогда
			ЗаполнитьТаблицуДанных(ТаблицаДанных, ВыборкаТоваров.Ссылка, СХарактеристиками);
		Иначе
			ДобавитьВТаблицу(ТаблицаДанных, ВыборкаТоваров.Ссылка, тТипЦенДляПечати, СХарактеристиками);
		КонецЕсли;
	КонецЦикла;

КонецФункции // ЗаполнитьТаблицуДанных()

Процедура КоманднаяПанель1Действие(Кнопка)
	
	ЭлементыФормы.Список.ИерархическийПросмотр = Не ЭлементыФормы.Список.ИерархическийПросмотр;
	
КонецПроцедуры

Процедура ДействияФормыВедомостьНаСкладах(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		// ничего нет
		Возврат;
	КонецЕсли;

	яштОткрытьОтчетПоНоменклатуреВедомостьНаСкладах(ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ДействияФормыВедомостьНаСкладахПоДокументам(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		// ничего нет
		Возврат;
	КонецЕсли;

	яштОткрытьОтчетПоНоменклатуреВедомостьНаСкладахПоДокументам(ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ДействияФормыНормыЗагрузки(Кнопка)
	
	Если (ЭлементыФормы.Список.ТекущаяСтрока.ЭтоГруппа = Истина) Тогда
		Возврат;
	КонецЕсли;
	Если (ЭлементыФормы.Список.ТекущаяСтрока.ТипоРазмер = Справочники.Типоразмеры.ПустаяСсылка()) Тогда
		Возврат;
	КонецЕсли;
	//Норма 				= Справочники.НормыЗагрузки.НайтиПоРеквизиту("Типоразмер",ЭлементыФормы.Список.ТекущаяСтрока.Типоразмер);
	Норма					= НайтиСсылкуНаНормуЗагрузки(ЭлементыФормы.Список.ТекущаяСтрока);
	Если (Норма = Справочники.НормыЗагрузки.ПустаяСсылка()) Тогда 
		Норма						= Справочники.НормыЗагрузки.СоздатьЭлемент();
		Норма.Типоразмер			= ЭлементыФормы.Список.ТекущаяСтрока.Типоразмер;
		Норма.КоэффициентИмпорта 	= 1;
		Норма.КоэффициентКоличества = 1;
		Норма.ВидПродукции			= ЭлементыФормы.Список.ТекущаяСтрока.ВидТовара;
		Норма.Записать();
		Норма = Норма.Ссылка;
	КонецЕсли;
	Форма						= Справочники.НормыЗагрузки.ПолучитьФормуСписка();
	Форма.ЭлементТек 			= Норма;
	Форма.РедактированиеИзФорм 	= Истина;
	Форма.Открыть();

КонецПроцедуры

Процедура СписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	//Если (ВыделятьЦветом) Тогда 
	//	Если  (Данныестроки.Ссылка.ЭтоГруппа=Ложь) и (Не (ЕстьВес(ДанныеСтроки.Ссылка))) Тогда
	//		ОформлениеСтроки.ЦветТекста = новый Цвет(255,0,0); 		
	//	КонецЕсли;
	//КонецЕсли;
	
	
КонецПроцедуры


Функция НайтиСсылкуНаНормуЗагрузки(Ссылка) 
	
	Запрос = новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ Ссылка из Справочник.НормыЗагрузки
	|Где ВидПродукции = &ВидПродукции И Типоразмер = &Типоразмер";
	
	Запрос.УстановитьПараметр("ВидПродукции",Ссылка.ВидТовара);
	Запрос.УстановитьПараметр("Типоразмер",Ссылка.ТипоРазмер);
	Выб = Запрос.Выполнить().Выбрать();
	
	Если (Выб.Следующий()) Тогда 
		Возврат Выб.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.НормыЗагрузки.ПустаяСсылка(); 
	
КонецФункции

Процедура ЗаполнитьИнформациюОстатки()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ном", ЭлементыФормы.Список.ТекущаяСтрока.Ссылка);
	Запрос.УстановитьПараметр("Подразделение", Справочники.Подразделения.НайтиПоКоду("00005"));
	Запрос.УстановитьПараметр("Общее", Справочники.Подразделения.ПустаяСсылка());
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Склад.Подразделение КАК СкладПодразделение,
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ОстТранзит
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			,
	               |			Склад.Транзитный
	               |				И НЕ Склад.ЗапретитьИспользование
	               |				И Номенклатура = &Ном) КАК ТоварыНаСкладахОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстатки.Склад.Подразделение,
	               |	ТоварыНаСкладахОстатки.Номенклатура
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СкладПодразделение,
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение,
	               |	ЗаказыПокупателейОстатки.Номенклатура,
	               |	СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ЗаказаноТранзит
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателей.Остатки(
	               |			,
	               |			ЗаказПокупателя.Транзит
	               |				И ЗаказПокупателя.Проверен
	               |				И Номенклатура = &Ном) КАК ЗаказыПокупателейОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Подразделение,
	               |	ЗаказыПокупателейОстатки.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОстТранзит.СкладПодразделение КАК Подразделение,
	               |	ОстТранзит.Номенклатура,
	               |	ОстТранзит.КоличествоОстаток - ЕСТЬNULL(ЗаказаноТранзит.КоличествоОстаток, 0) КАК СвободныйОстаток
	               |ПОМЕСТИТЬ СвободноТранзит
	               |ИЗ
	               |	ОстТранзит КАК ОстТранзит
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказаноТранзит КАК ЗаказаноТранзит
	               |		ПО ОстТранзит.Номенклатура = ЗаказаноТранзит.Номенклатура
	               |			И ОстТранзит.СкладПодразделение = ЗаказаноТранзит.ЗаказПокупателяПодразделение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&Подразделение,
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток
	               |ПОМЕСТИТЬ СвободноЯр
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			,
	               |			НЕ Склад.Транзитный
	               |				И НЕ Склад.ЗапретитьИспользование
	               |				И Номенклатура = &Ном) КАК ТоварыНаСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	               |				,
	               |				НЕ ЗаказПокупателя.Транзит
	               |					И ЗаказПокупателя.Проверен
	               |					И Номенклатура = &Ном) КАК ЗаказыПокупателейОстатки
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СвободноЯр.Подразделение КАК Подразделение,
	               |	СвободноЯр.Номенклатура КАК Номенклатура,
	               |	СвободноЯр.СвободныйОстаток
	               |ПОМЕСТИТЬ СвободноОбщее
	               |ИЗ
	               |	СвободноЯр КАК СвободноЯр
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СвободноТранзит.Подразделение,
	               |	СвободноТранзит.Номенклатура,
	               |	СвободноТранзит.СвободныйОстаток
	               |ИЗ
	               |	СвободноТранзит КАК СвободноТранзит
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СвободноОбщее.Подразделение КАК Подразделение,
	               |	ТоварыНаСкладахОстатки.Склад,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток - СвободноОбщее.СвободныйОстаток КАК Заказано,
	               |	СвободноОбщее.СвободныйОстаток КАК СвОстаток
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			,
	               |			Номенклатура = &Ном
	               |				И НЕ Склад.ЗапретитьИспользование) КАК ТоварыНаСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СвободноОбщее КАК СвободноОбщее
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = СвободноОбщее.Номенклатура
	               |			И (ВЫБОР
	               |				КОГДА НЕ ТоварыНаСкладахОстатки.Склад.Транзитный
	               |					ТОГДА СвободноОбщее.Подразделение = &Подразделение
	               |				ИНАЧЕ СвободноОбщее.Подразделение = ТоварыНаСкладахОстатки.Склад.Подразделение
	               |			КОНЕЦ)
	               |ГДЕ
	               |	СвободноОбщее.СвободныйОстаток > 0
	               |ИТОГИ
	               |	СУММА(Остаток),
	               |	СУММА(Остаток) - МАКСИМУМ(СвОстаток) КАК Заказано,
	               |	МАКСИМУМ(СвОстаток)
	               |ПО
	               |	Подразделение";
	
	
	
	ТаблицаОстатки.Строки.Очистить();
	ТаблицаОстатки = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	
	ЭлементыФормы.ТаблицаОстатки.СоздатьКолонки();	

КонецПроцедуры

Процедура ЗаполнитьИнформациюЦены()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Ссылка", ЭлементыФормы.Список.ТекущаяСтрока.Ссылка);
	
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.ТипЦен КАК Тип,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Валюта КАК Валюта,
	|	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдИзм
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, Номенклатура.Ссылка = &Ссылка) КАК ЦеныНоменклатурыСрезПоследних
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаЦены.Очистить();
	
	Пока Выборка.Следующий() Цикл
	
		СтрокаТаб = ТаблицаЦены.Добавить();
		СтрокаТаб.ТипЦены = Выборка.Тип;
		СтрокаТаб.Цена = Выборка.Цена;
		СтрокаТаб.Валюта = Выборка.Валюта;
		СтрокаТаб.ЕдИзм = Выборка.ЕдИзм.Наименование;
	
	
	КонецЦикла; 

	
КонецПроцедуры


 

Функция ПрочитатьЗаполнитьСвойстваИЗначенияВТЗ(ИмяДанных = "")

	// Эта проверка добавлена, чтобы не выполнялось перезаполнение таблицы 
	// при вызове данной процедуры из ПриИзмененииДанных, осуществляемом до 
	// вызова из ПередОткрытием
	Если ОбработкаОбъектЗначенияСвойств.НазначениеСвойств = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура Тогда
		ОбработкаОбъектЗначенияСвойств.ОбъектОтбораЗначений   = ЭлементыФормы.Список.ТекущаяСтрока.Ссылка;
		ОбработкаОбъектЗначенияСвойств.ОбъектОтбораНазначений = ЭлементыФормы.Список.ТекущаяСтрока.Ссылка;
		Возврат ОбработкаОбъектЗначенияСвойств.ВыгрузитьСвойстваИЗначенияВТЗ();
	КонецЕсли;
	
	Возврат "";

КонецФункции

Функция ПолучитьХарактеристикиНоменклатуры()
	
	ОбработкаОбъектЗначенияСвойств.НазначениеСвойств = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;	
	ТЗХарактеристики = ПрочитатьЗаполнитьСвойстваИЗначенияВТЗ();
	
	СтрХарактеристики = "";
	
	Для каждого СтрТЗ Из ТЗХарактеристики Цикл
	
		Если НЕ СтрТЗ.ПометкаУдаления Тогда
		
			Если НЕ ЗначениеНеЗаполнено(СтрТЗ.Значение) Тогда
			
				СтрХарактеристики = СтрХарактеристики + ?(СтрДлина(СтрХарактеристики) > 0, "; ", "") +
									СтрТЗ.Свойство + ": " + СтрТЗ.Значение;
									 
			
			КонецЕсли; 
		
		КонецЕсли; 	
	
	КонецЦикла; 
	
	Возврат СтрХарактеристики;
	
КонецФункции

Процедура ОбновитьИнформацию()
	
	Если ЭлементыФормы.ИнформационнаяПанель.ТекущаяСтраница.Имя = "Остатки" Тогда
	
		ЗаполнитьИнформациюОстатки();
		
	ИначеЕсли ЭлементыФормы.ИнформационнаяПанель.ТекущаяСтраница.Имя = "Общие" Тогда
		
		//Если (ЭлементыФормы.Список.ТекущаяСтрока<>Неопределено) Тогда
		//	
		//	Если (ЭлементыФормы.Список.ТекущаяСтрока.Ссылка.ЭтоГруппа) Тогда
		//		
		//		ЭлементыФормы.Нименование.Заголовок = "Группа товаров: " + ЭлементыФормы.Список.ТекущаяСтрока.Наименование;
		//		ЭлементыФормы.знчИмпорт.Заголовок = "";
		//		ЭлементыФормы.знчСтрана.Заголовок = "";
		//		ЭлементыФормы.знчВес.Заголовок = "";
		//		
		//		
		//	Иначе 
		//		
		//		ЭлементыФормы.Нименование.Заголовок = ЭлементыФормы.Список.ТекущаяСтрока.НаименованиеПолное;
		//		//Норма = НайтиСсылкуНаНормуЗагрузки(ЭлементыФормы.Список.ТекущаяСтрока.Ссылка);
		//		
		//		ВидимостьЕдХранения=ЭлементыФормы.Список.Колонки.ЕдиницаХраненияОстатков.Видимость;
		//		
		//		Если ВидимостьЕдХранения И Не ЗначениеНеЗаполнено(ЭлементыФормы.Список.ТекущиеДанные.ЕдиницаХраненияОстатков) Тогда
		//			ЭлементыФормы.знчВес.Заголовок = ЭлементыФормы.Список.ТекущиеДанные.ЕдиницаХраненияОстатков.Вес;
		//		КонецЕсли;	
		//		
		//		
		//		Если ЭлементыФормы.Список.ТекущаяСтрока.Ссылка.Импорт Тогда
		//			
		//			ЭлементыФормы.знчИмпорт.Заголовок = "Имп. товар";
		//			
		//		Иначе
		//			
		//			ЭлементыФормы.знчИмпорт.Заголовок = "Отеч. товар";
		//			
		//		КонецЕсли; 
		//		
		//		ЭлементыФормы.знчСтрана.Заголовок = ЭлементыФормы.Список.ТекущаяСтрока.СтранаПроисхождения;
		//		
		//		//ЭлементыФормы.знчХарактеристики.Заголовок = ПолучитьХарактеристикиНоменклатуры();
		//		
		//	КонецЕсли;
		//	
		//КонецЕсли;
		
	ИначеЕсли ЭлементыФормы.ИнформационнаяПанель.ТекущаяСтраница.Имя = "Цены" Тогда
		
		ЗаполнитьИнформациюЦены();
		
	ИначеЕсли ЭлементыФормы.ИнформационнаяПанель.ТекущаяСтраница.Имя = "Комплектующие" Тогда
		
		Комплектующие.Отбор.Номенклатура.Значение = ЭлементыФормы.Список.ТекущиеДанные.Ссылка;
		Комплектующие.Отбор.Номенклатура.Использование = Истина;
		
	ИначеЕсли ЭлементыФормы.ИнформационнаяПанель.ТекущаяСтраница.Имя = "КомплектующиеСправочно" Тогда
		
		Аналоги.Отбор.Заменяемое.Значение = ЭлементыФормы.Список.ТекущиеДанные.Ссылка;
		Аналоги.Отбор.Заменяемое.Использование = Истина;
		
	КонецЕсли; 
 

КонецПроцедуры

Процедура ИнформационнаяПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьИнформацию();
	
КонецПроцедуры

Процедура СписокПриПолученииДанных(Элемент, ОформленияСтрок)
Для Каждого Строка Из ОформленияСтрок Цикл
	Если Строка.ДанныеСтроки.Ссылка.ВидТовара=Перечисления.ВидыТоваров.Шины
		ИЛИ Строка.ДанныеСтроки.Ссылка.ВидТовара=Перечисления.ВидыТоваров.Диски Тогда
		Если НЕ ЗначениеНеЗаполнено(Строка.ДанныеСтроки.Ссылка.ЕдиницаХраненияОстатков) Тогда
		Строка.ячейки.Вес.значение=Формат(Строка.ДанныеСтроки.Ссылка.ЕдиницаХраненияОстатков.Вес,"ЧДЦ=2");
		КонецЕсли;
	КонецЕсли;
КонецЦикла;	
	
КонецПроцедуры

Процедура ДействияФормыНоменклатураШК(Кнопка)
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Предупреждение("Выберите папку или номенклатуру...");
		Возврат;
	КонецЕсли;

	яштОткрытьОтчетПоШК(ЭлементыФормы.Список.ТекущаяСтрока);

КонецПроцедуры

Процедура ТаблицаОстаткиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Строки.Количество() > 0 Тогда
	
		ОформлениеСтроки.ЦветФона = Новый Цвет(205, 209, 197);
	Иначе
	    ОформлениеСтроки.Ячейки.СвОстаток.ОтображатьТекст = ложь;
	    ОформлениеСтроки.Ячейки.Заказано.ОтображатьТекст = ложь;
	КонецЕсли;
КонецПроцедуры







 


мПустаяКартинка = Новый Картинка;

Список.Колонки.Добавить("ОсновноеИзображение");
