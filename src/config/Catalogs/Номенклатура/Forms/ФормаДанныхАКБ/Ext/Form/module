Перем НовыйВидТовара Экспорт;
Перем проверка;
Процедура ПриОткрытии()
	Проверка = Ложь;
	
	//"ЭтотОбъект" новый элемент.Получаем ссылку на источник копирования.
	//Ищем по наименованию.
	ОбъектКопированияСсылка = Справочники.Номенклатура.НайтиПоНаименованию(ЭтотОбъект.Наименование);
	
	Если ЗначениеЗаполнено(Типоразмер) Тогда
		ШиринаП = Типоразмер.Ширина;
		//Вылет = Типоразмер.Вылет;
		//Нагрузка = Типоразмер.Нагрузка;
		ВысотаП = Типоразмер.Высота;
		Диаметр = Типоразмер.Диаметр;
		//ПЦД = Типоразмер.PCD;
		//Ступица = Типоразмер.ДиаметрСтупицы;
	КонецЕсли;
	//
	//
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектКопированияСсылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Диаметр/Емкость"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		Емкость = стр.Значение;
	КонецЦикла;

	
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектКопированияСсылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Пусковой ток"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		ПусковойТок = стр.Значение;
	КонецЦикла;

	
	//НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	//НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Полярность"));
	//НаборЗаписей.Прочитать();
	//для Каждого стр из НаборЗаписей Цикл
	//	Полярность = стр.Значение;
	//КонецЦикла;

	
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектКопированияСсылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Тип клемм"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		ТипКлемм = стр.Значение;
	КонецЦикла;

	//
	//ОтборПоКомплектующим = КомплектующиеПоле.Отбор.Номенклатура;
	//ОтборПоКомплектующим.Значение      = Ссылка;
	//ОтборПоКомплектующим.Использование = Истина;
	
	Вес = ЕдиницаХраненияОстатков.Вес;
	//Объем = ЕдиницаХраненияОстатков.Объем;	   
КонецПроцедуры


Процедура ТипоразмерПриИзменении(Элемент)
	    ШиринаП = Элемент.Значение.Ширина;
		//Вылет = Элемент.Значение.Вылет;
		//Нагрузка = Элемент.Значение.Нагрузка;
		ВысотаП = Элемент.Значение.Высота;
		Диаметр = Элемент.Значение.Диаметр;
		//ПЦД = Элемент.Значение.PCD;
		//Ступица = Элемент.Значение.ДиаметрСтупицы;
КонецПроцедуры


Процедура ТипоразмерНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.Типоразмеры.ПолучитьФормуВыбора(, Элемент);
	Если ШиринаП <> "" Тогда
        нФормаВыбора.Отбор.Ширина.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.Ширина.Значение = ШиринаП;
        нФормаВыбора.Отбор.Ширина.Использование = Истина;
	КонецЕсли;
	Если ВысотаП <> "" Тогда
        нФормаВыбора.Отбор.Высота.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.Высота.Значение = ВысотаП;
        нФормаВыбора.Отбор.Высота.Использование = Истина;
	КонецЕсли;
	Если Диаметр <> "" Тогда
        нФормаВыбора.Отбор.Диаметр.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.Диаметр.Значение = Диаметр;
        нФормаВыбора.Отбор.Диаметр.Использование = Истина;
	КонецЕсли;
		//Если ЭтотОбъект.Ссылка.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
	//	нФормаВыбора.Отбор.Родитель.ВидСравнения = ВидСравнения.Равно;
	//	нФормаВыбора.Отбор.Родитель.Значение = Справочники.Типоразмеры.НайтиПоКоду("232");
	//	нФормаВыбора.Отбор.Родитель.Использование = Истина;
	//иначеЕсли ЭтотОбъект.Ссылка.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
	//	нФормаВыбора.Отбор.Родитель.ВидСравнения = ВидСравнения.Равно;
	//	нФормаВыбора.Отбор.Родитель.Значение = Справочники.Типоразмеры.НайтиПоКоду("11");
	//	нФормаВыбора.Отбор.Родитель.Использование = Истина;
	//КонецЕсли;
    нФормаВыбора.Открыть();
КонецПроцедуры


Процедура Кнопка1Нажатие(Элемент)
	Ответ = Вопрос("Вы уверены что хотите создать новый элемент
	| справочника ТИПОРАЗМЕРЫ?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда

	НовЭлемент = Справочники.Типоразмеры.СоздатьЭлемент();
	Если ЭтотОбъект.Ссылка.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
		НовЭлемент.Родитель = Справочники.Типоразмеры.НайтиПоНаименованию("Диски");
	ИначеЕсли ЭтотОбъект.Ссылка.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
		НовЭлемент.Родитель = Справочники.Типоразмеры.НайтиПоНаименованию("Шины");
	КонецЕсли;
	//НовЭлемент = Справочники.Типоразмеры.СоздатьЭлемент();
	НовЭлемент.Ширина = ШиринаП;
	//НовЭлемент.Нагрузка = Нагрузка;
	НовЭлемент.Диаметр = Диаметр;
	НовЭлемент.Высота = ВысотаП;
	//НовЭлемент.PCD = ПЦД;
	//НовЭлемент.Вылет = Вылет;
	//НовЭлемент.ДиаметрСтупицы = Ступица;
	
	
	//Если НовЭлемент.Родитель = Справочники.Типоразмеры.НайтиПоНаименованию("Диски") Тогда
	//	
	//	НовЭлемент.Наименование = ШиринаП+"x"+Диаметр+"/"+КолКр+"x"+ПЦД+" ET"+Вылет+" D"+Ступица;
	//	
	////ИначеЕсли Родитель = Справочники.Типоразмеры.НайтиПоНаименованию("Диски") Тогда
	////	
	////	Наименование = 		
	//КонецЕсли;
    НовЭлемент.Записать();
	Типоразмер = НовЭлемент.Ссылка;
    ФормаР = Типоразмер.ПолучитьФорму("ФормаЭлемента",);
	ФормаР.Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если Емкость <> 0 ТОгда
		НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
		НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Диаметр/Емкость"));
		Нов = НаборЗаписей.Добавить();
		Нов.Объект = ЭтотОбъект.Ссылка;
		Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Диаметр/Емкость");
		Нов.Значение = Емкость;
		НаборЗаписей.Записать();
	КонецЕсли;
	
	Если ПусковойТок <> 0 ТОгда
		НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
		НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Пусковой ток"));
		Нов = НаборЗаписей.Добавить();
		Нов.Объект = ЭтотОбъект.Ссылка;
		Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Пусковой ток");
		Нов.Значение = ПусковойТок;
		НаборЗаписей.Записать();
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(Полярность) ТОгда
	//НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	//НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Полярность"));
	//Нов = НаборЗаписей.Добавить();
	//Нов.Объект = ЭтотОбъект.Ссылка;
	//Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Полярность");
	//Нов.Значение = Полярность;
	//НаборЗаписей.Записать();
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипКлемм) ТОгда
		НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
		НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Тип клемм"));
		Нов = НаборЗаписей.Добавить();
		Нов.Объект = ЭтотОбъект.Ссылка;
		Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Тип клемм");
		Нов.Значение = ТипКлемм;
		НаборЗаписей.Записать();
	КонецЕсли;
	
	
	//Попытка 
	Если Вес <> ЕдиницаХраненияОстатков.Вес Тогда
		Об = ЕдиницаХраненияОстатков.ПолучитьОбъект();
		об.Вес = Вес;
		об.Записать();
	КонецЕсли;
	//Исключение
	//КОнецПопытки;
	
	//Если Объем <> ЕдиницаХраненияОстатков.Объем Тогда
	//	Об = ЕдиницаХраненияОстатков.ПолучитьОбъект();
	//	об.Объем = Объем;
	//	об.Записать();
	//КонецЕсли;
КонецПроцедуры

Процедура ТипКлеммНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Тип клемм"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();

КонецПроцедуры

Процедура КамераНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Камера"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры

Процедура ОсьНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Ось"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры

Процедура РисунокПротектораНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Рисунок протектора"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры

Процедура ЦветНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Цвет букв на боковине"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры

Процедура КонструкцияНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Конструкция"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры


Процедура ПередЗаписью(Отказ)
	Если ЭтоНовый() Тогда
		Если ЗначениеЗаполнено(Производитель) и ЗначениеЗаполнено(Типоразмер) и 
			ЗначениеЗаполнено(Вес) и ЗначениеЗаполнено(ПусковойТок) и
			ЗначениеЗаполнено(Емкость) и ЗначениеЗаполнено(КодСБИС) и 
			ЗначениеЗаполнено(ТипКлемм) и ЗначениеЗаполнено(Родитель) Тогда 
			Если ЗначениеНеЗаполнено(ЕдиницаХраненияОстатков) Тогда
				ВидТовара = НовыйВидТовара;
				БазоваяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт");
				ЭтотОбъект.Записать();
				Ед = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
				Ед.Вес = Вес;
				ед.Владелец = ЭтотОбъект.Ссылка;
				ед.ЕдиницаПоКлассификатору = БазоваяЕдиницаИзмерения;
				ед.Наименование = "шт";
				ед.Записать();
				ЕдиницаХраненияОстатков = ед.Ссылка;
			КонецЕсли;
			Если ЗначениеНеЗаполнено(СтавкаНДС) Тогда
				СтавкаНДС               = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяСтавкаНДС");
			КонецЕсли;
			Если ЗначениеНеЗаполнено(ТипШтрихкода) Тогда
				ТипШтрихкода            = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
			КонецЕсли;
			проверка = истина;
		Иначе
			Отказ = Истина;
			Сообщить("Не все обязательные поля заполнены!!!");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПусковойТокНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Пусковой ток"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();

КонецПроцедуры

Процедура ПолярностьНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Полярность"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка =Ложь;
	ЭтаФорма.Закрыть(проверка);
КонецПроцедуры





