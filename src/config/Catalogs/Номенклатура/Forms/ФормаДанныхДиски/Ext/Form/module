Перем НовыйВидТовара Экспорт;
перем проверка; 

Процедура ПриОткрытии()
	проверка = Ложь;
	Если ЗначениеЗаполнено(Типоразмер) Тогда
		ШиринаП = Типоразмер.Ширина;
		Вылет = Типоразмер.Вылет;
		Нагрузка = Типоразмер.Нагрузка;
		КолКр = Типоразмер.КоличествоОтверстий;
		Диаметр = Типоразмер.Диаметр;
		ПЦД = Типоразмер.PCD;
		Ступица = Типоразмер.ДиаметрСтупицы;
	КонецЕсли;
	//
	//
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Тип диска"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		Тип = стр.Значение;
	КонецЦикла;	

	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Цвет"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		цвет = стр.Значение;
	КонецЦикла;
	
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Крепеж в комплекте"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		Крепеж = стр.Значение;
	КонецЦикла;
	
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Форма диска"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		Форма = стр.Значение;
	КонецЦикла;
	
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Вид диска"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		Вид = стр.Значение;
	КонецЦикла;
	
	//
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Диаметр резьбы"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		ДиаметрРезьбы = стр.Значение;
	КонецЦикла;
	
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Шаг резьбы"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		ШагРезьбы = стр.Значение;
	КонецЦикла;
	
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Количество лучей"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		Лучи = стр.Значение;
	КонецЦикла;

    НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Максимальная нагрузка"));
	НаборЗаписей.Прочитать();
	для Каждого стр из НаборЗаписей Цикл
		Нагрузка = стр.Значение;
	КонецЦикла;

	//Для каждого стр из Результат Цикл
	//	Тип = стр.Тип;
	//	Вид = стр.Вид;
	//	Форма = стр.Форма;
	//	Крепеж = стр.Крепеж;
	//	Лучи = стр.Лучи;
	//	ДиаметрРезьбы = стр.ДиаметрРезьбы;
	//	ШагРезьбы = стр.ШагРезьбы;
	//	Цвет = стр.Цвет;
	//КонецЦикла;
	//
	ОтборПоКомплектующим = КомплектующиеПоле.Отбор.Номенклатура;
	ОтборПоКомплектующим.Значение      = Ссылка;
	ОтборПоКомплектующим.Использование = Истина;
	
	Вес = ЕдиницаХраненияОстатков.Вес;
	
КонецПроцедуры


Процедура ТипоразмерПриИзменении(Элемент)
	    ШиринаП = Элемент.Значение.Ширина;
		Вылет = Элемент.Значение.Вылет;
		Нагрузка = Элемент.Значение.Нагрузка;
		КолКр = Элемент.Значение.КоличествоОтверстий;
		Диаметр = Элемент.Значение.Диаметр;
		ПЦД = Элемент.Значение.PCD;
		Ступица = Элемент.Значение.ДиаметрСтупицы;
КонецПроцедуры


Процедура ТипоразмерНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.Типоразмеры.ПолучитьФормуВыбора(, Элемент);
	Если ШиринаП <> "" Тогда
        нФормаВыбора.Отбор.Ширина.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.Ширина.Значение = ШиринаП;
        нФормаВыбора.Отбор.Ширина.Использование = Истина;
	КонецЕсли;
	Если Вылет <> "" Тогда
        нФормаВыбора.Отбор.Вылет.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.Вылет.Значение = Вылет;
        нФормаВыбора.Отбор.Вылет.Использование = Истина;
	КонецЕсли;
	Если Нагрузка > 0 Тогда
        нФормаВыбора.Отбор.Нагрузка.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.Нагрузка.Значение = Нагрузка;
        нФормаВыбора.Отбор.Нагрузка.Использование = Истина;
	КонецЕсли;
	Если КолКр <> "" Тогда
        нФормаВыбора.Отбор.КоличествоОтверстий.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.КоличествоОтверстий.Значение = КолКр;
        нФормаВыбора.Отбор.КоличествоОтверстий.Использование = Истина;
	КонецЕсли;
	Если Диаметр <> "" Тогда
        нФормаВыбора.Отбор.Диаметр.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.Диаметр.Значение = Диаметр;
        нФормаВыбора.Отбор.Диаметр.Использование = Истина;
	КонецЕсли;
	Если ПЦД <> "" Тогда
        нФормаВыбора.Отбор.PCD.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.PCD.Значение = ПЦД;
        нФормаВыбора.Отбор.PCD.Использование = Истина;
	КонецЕсли;
	Если Ступица <> "" Тогда
        нФормаВыбора.Отбор.ДиаметрСтупицы.ВидСравнения = ВидСравнения.Равно;
        нФормаВыбора.Отбор.ДиаметрСтупицы.Значение = Ступица;
        нФормаВыбора.Отбор.ДиаметрСтупицы.Использование = Истина;
	КонецЕсли;
	//Если ссылкаНаТовар.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
	//	нФормаВыбора.Отбор.Родитель.ВидСравнения = ВидСравнения.Равно;
	//	нФормаВыбора.Отбор.Родитель.Значение = Справочники.Типоразмеры.НайтиПоКоду("232");
	//	нФормаВыбора.Отбор.Родитель.Использование = Истина;
	//иначеЕсли ссылкаНаТовар.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
	//	нФормаВыбора.Отбор.Родитель.ВидСравнения = ВидСравнения.Равно;
	//	нФормаВыбора.Отбор.Родитель.Значение = Справочники.Типоразмеры.НайтиПоКоду("11");
	//	нФормаВыбора.Отбор.Родитель.Использование = Истина;
	//КонецЕсли;
    нФормаВыбора.Открыть();
КонецПроцедуры


Процедура Кнопка1Нажатие(Элемент)
	Ответ = Вопрос("Вы уверены что хотите создать новый элемент
	| справочника ТИПОРАЗМЕРЫ?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда

	НовЭлемент = Справочники.Типоразмеры.СоздатьЭлемент();
	Если ЭтотОбъект.Ссылка.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
		НовЭлемент.Родитель = Справочники.Типоразмеры.НайтиПоНаименованию("Диски");
	ИначеЕсли ЭтотОбъект.Ссылка.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
		НовЭлемент.Родитель = Справочники.Типоразмеры.НайтиПоНаименованию("Шины");
	КонецЕсли;
	//НовЭлемент = Справочники.Типоразмеры.СоздатьЭлемент();
	НовЭлемент.Ширина = ШиринаП;
	НовЭлемент.Нагрузка = Нагрузка;
	НовЭлемент.Диаметр = Диаметр;
	НовЭлемент.КоличествоОтверстий = КолКр;
	НовЭлемент.PCD = ПЦД;
	НовЭлемент.Вылет = Вылет;
	НовЭлемент.ДиаметрСтупицы = Ступица;
	
	
	Если НовЭлемент.Родитель = Справочники.Типоразмеры.НайтиПоНаименованию("Диски") Тогда
		
		НовЭлемент.Наименование = ШиринаП+"x"+Диаметр+"/"+КолКр+"x"+ПЦД+" ET"+Вылет+" D"+Ступица;
		
	//ИначеЕсли Родитель = Справочники.Типоразмеры.НайтиПоНаименованию("Диски") Тогда
	//	
	//	Наименование = 		
    КонецЕсли;
    НовЭлемент.Записать();
	Типоразмер = НовЭлемент.Ссылка;
    ФормаР = Типоразмер.ПолучитьФорму("ФормаЭлемента",);
	ФормаР.Открыть();
	КонецЕсли;
КонецПроцедуры


Процедура ТипНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Тип диска"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры

Процедура ЦветНачалоВыбора(Элемент, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Цвет"));
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	ЗначенияСвойствОбъектов.Код
	//			   |ИЗ
	//			   |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//			   |ГДЕ
	//			   |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	//Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	//СписокН = Новый СписокЗначений;
	//СписокН.ЗагрузитьЗначения(Массив);
	//нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
	//нФормаВыбора.Отбор.Код.Значение = СписокН;
	//нФормаВыбора.Отбор.Код.Использование = Истина;

	//нФормаВыбора.Открыть();
КонецПроцедуры

Процедура КрепежНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Крепеж в комплекте"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры

Процедура ФормаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Форма диска"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры

Процедура ВидНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	нФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тип",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Вид диска"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Код
	               |ИЗ
	               |	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Владелец = &Тип";
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	СписокН = Новый СписокЗначений;
	СписокН.ЗагрузитьЗначения(Массив);
	нФормаВыбора.Отбор.Код.ВидСравнения = ВидСравнения.ВСписке;
    нФормаВыбора.Отбор.Код.Значение = СписокН;
    нФормаВыбора.Отбор.Код.Использование = Истина;

	нФормаВыбора.Открыть();
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ЗначениеЗаполнено(Тип) Тогда
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Тип диска"));
	Нов = НаборЗаписей.Добавить();
	Нов.Объект = ЭтотОбъект.Ссылка;
	Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Тип диска");
	Нов.Значение = Тип;
	НаборЗаписей.Записать();
    КонецЕсли;

	Если Цвет <> "" Тогда
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Цвет"));
	Нов = НаборЗаписей.Добавить();
	Нов.Объект = ЭтотОбъект.Ссылка;
	Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Цвет");
	Нов.Значение = Цвет;
	НаборЗаписей.Записать();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Крепеж) Тогда
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Крепеж в комплекте"));
	Нов = НаборЗаписей.Добавить();
	Нов.Объект = ЭтотОбъект.Ссылка;
	Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Крепеж в комплекте");
	Нов.Значение = Крепеж;
	НаборЗаписей.Записать();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма) Тогда
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Форма диска"));
	Нов = НаборЗаписей.Добавить();
	Нов.Объект = ЭтотОбъект.Ссылка;
	Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Форма диска");
	Нов.Значение = Форма;
	НаборЗаписей.Записать();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Вид) Тогда
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Вид диска"));
	Нов = НаборЗаписей.Добавить();
	Нов.Объект = ЭтотОбъект.Ссылка;
	Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Вид диска");
	Нов.Значение = Вид;
	НаборЗаписей.Записать();
	КонецЕсли;
	//
	Если ДиаметрРезьбы <> 0 Тогда
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Диаметр резьбы"));
	Нов = НаборЗаписей.Добавить();
	Нов.Объект = ЭтотОбъект.Ссылка;
	Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Диаметр резьбы");
	Нов.Значение = ДиаметрРезьбы;
	НаборЗаписей.Записать();
	КонецЕсли;
	
	Если ШагРезьбы <> 0 Тогда
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Шаг резьбы"));
	Нов = НаборЗаписей.Добавить();
	Нов.Объект = ЭтотОбъект.Ссылка;
	Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Шаг резьбы");
	Нов.Значение = ШагРезьбы;
	НаборЗаписей.Записать();
	КонецЕсли;
	
	Если Лучи <> 0 Тогда
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Количество лучей"));
	Нов = НаборЗаписей.Добавить();
	Нов.Объект = ЭтотОбъект.Ссылка;
	Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Количество лучей");
	Нов.Значение = Лучи;
	НаборЗаписей.Записать();
	КонецЕсли;
	
	Если Нагрузка <> 0 Тогда
	НаборЗаписей  = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Максимальная нагрузка"));
	Нов = НаборЗаписей.Добавить();
	Нов.Объект = ЭтотОбъект.Ссылка;
	Нов.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Максимальная нагрузка");
	Нов.Значение = Нагрузка;
	НаборЗаписей.Записать();
    КонецЕсли;
	
	Если Вес <> ЕдиницаХраненияОстатков.Вес Тогда
		Об = ЕдиницаХраненияОстатков.ПолучитьОбъект();
		об.Вес = Вес;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ЭтоНовый() Тогда
		Если ЗначениеНеЗаполнено(ЕдиницаХраненияОстатков) Тогда
			ВидТовара = НовыйВидТовара;
			БазоваяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт");
			ЭтотОбъект.Записать();
			Ед = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
			Ед.Вес = Вес;
			ед.Владелец = ЭтотОбъект.Ссылка;
			ед.ЕдиницаПоКлассификатору = БазоваяЕдиницаИзмерения;
			ед.Наименование = "шт";
			ед.Записать();
			ЕдиницаХраненияОстатков = ед.Ссылка;
		КонецЕсли;
		Если ЗначениеНеЗаполнено(СтавкаНДС) Тогда
			СтавкаНДС               = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяСтавкаНДС");
		КонецЕсли;
		Если ЗначениеНеЗаполнено(ТипШтрихкода) Тогда
			ТипШтрихкода            = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
		КонецЕсли;
		проверка = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭтаФорма.Закрыть(проверка);
	// Вставить содержимое обработчика.
КонецПроцедуры





