//// Модуль формы списка справочника

//Перем УстанавливаетсяОтборНаличияНаСкладе;
//Перем КомплектацияАвтомобилей;

//////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//Процедура УстановитьОтборПоХозяину()
//	Если НЕ обЗначениеНеЗаполнено(Хозяин) Тогда
//		Запрос = Новый Запрос;
//		Запрос.Текст = "ВЫБРАТЬ
//		|	АвтомобилиСрезПоследних.Автомобиль.Ссылка КАК Автомобиль
//		|ИЗ
//		|	РегистрСведений.Автомобили.СрезПоследних(, ВидЗначения=&ВидЗначения И Значение=&Значение) КАК АвтомобилиСрезПоследних";
//		Запрос.УстановитьПараметр("ВидЗначения",Перечисления.ДополнительнаяИнформацияАвтомобилей.Хозяин);
//		Запрос.УстановитьПараметр("Значение",Хозяин);
//		СписокАвтомобилей=Новый СписокЗначений;
//		Выборка=Запрос.Выполнить().Выбрать();
//		Пока Выборка.Следующий() Цикл
//			СписокАвтомобилей.Добавить(Выборка.Автомобиль);
//		КонецЦикла; 
//		Отбор.Ссылка.ВидСравнения=ВидСравнения.ВСписке;
//		Отбор.Ссылка.Использование=Истина;
//		Отбор.Ссылка.Значение=СписокАвтомобилей;
//		ЭлементыФормы.Список.НастройкаОтбора.Ссылка.Доступность=Истина;
//	КонецЕсли;
//КонецПроцедуры

//Процедура УстановитьОтборПоСкладу() Экспорт
//	УстанавливаетсяОтборНаличияНаСкладе=Истина;
//	ЭлементыФормы.СкладКомпании.Доступность=ВНаличии;
//	Если ВНаличии Тогда
//		Запрос=Новый Запрос;
//		Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
//					 |	ОстаткиАвтомобилейОстатки.Автомобиль
//					 |ИЗ
//					 |	РегистрНакопления.ОстаткиАвтомобилей.Остатки(,"+?(обЗначениеНеЗаполнено(СкладКомпании),"","СкладКомпании = &СкладКомпании")+") КАК ОстаткиАвтомобилейОстатки
//					 |ГДЕ
//					 |	ОстаткиАвтомобилейОстатки.КоличествоОстаток > 0
//					 |";
//		Запрос.УстановитьПараметр("СкладКомпании",СкладКомпании);
//		СписокАвтомобилей=Новый СписокЗначений;
//		Выборка=Запрос.Выполнить().Выбрать();
//		Пока Выборка.Следующий() Цикл
//			СписокАвтомобилей.Добавить(Выборка.Автомобиль);
//		КонецЦикла; 
//		Отбор.Ссылка.ВидСравнения=ВидСравнения.ВСписке;
//		Отбор.Ссылка.Значение=СписокАвтомобилей;
//		Отбор.Ссылка.Использование=Истина;
//		ЭлементыФормы.Список.НастройкаОтбора.Ссылка.Доступность=Истина;
//	Иначе
//		Отбор.Ссылка.Использование=Ложь;
//	КонецЕсли; 
//	УстанавливаетсяОтборНаличияНаСкладе=Ложь;
//КонецПроцедуры

//Процедура ЗагрузитьКомплектацииАвтомобилей()
//	Запрос=Новый Запрос;
//	Запрос.Текст="ВЫБРАТЬ
//				 |	Автомобили.Ссылка КАК Автомобиль,
//				 |	ДополнительноеОборудованиеВариантовКомплектации.ДополнительноеОборудование.Представление КАК ДополнительноеОборудование
//				 |ИЗ
//				 |	Справочник.Автомобили КАК Автомобили
//				 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительноеОборудованиеВариантовКомплектации КАК ДополнительноеОборудованиеВариантовКомплектации
//				 |		ПО Автомобили.ВариантКомплектации = ДополнительноеОборудованиеВариантовКомплектации.ВариантКомплектации
//				 |ГДЕ
//				 |	ДополнительноеОборудованиеВариантовКомплектации.ВидВключения = 2
//				 |
//				 |ОБЪЕДИНИТЬ ВСЕ
//				 |
//				 |ВЫБРАТЬ
//				 |	Автомобили.Ссылка,
//				 |	ЗаказНаАвтомобильДополнительноеОборудование.ДополнительноеОборудование.Представление
//				 |ИЗ
//				 |	Справочник.Автомобили КАК Автомобили
//				 |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаАвтомобиль.ДополнительноеОборудование КАК ЗаказНаАвтомобильДополнительноеОборудование
//				 |		ПО Автомобили.VIN = ЗаказНаАвтомобильДополнительноеОборудование.Ссылка.VIN
//				 |
//				 |УПОРЯДОЧИТЬ ПО
//				 |	ДополнительноеОборудование";
//	КомплектацияАвтомобилей=Запрос.Выполнить().Выбрать();
//КонецПроцедуры
// 
//Процедура ОтобразитьКомплектациюАвтомобиля()
//	КомплектацияАвтомобиля.Очистить();
//	
//	Если (КомплектацияАвтомобилей=Неопределено) ИЛИ (НЕ ЭлементыФормы.КомплектацияАвтомобиля.Видимость) Тогда
//		Возврат;
//	КонецЕсли; 
//	
//	Если ЭлементыФормы.Список.ТекущаяСтрока<>Неопределено Тогда
//		Если обЗначениеНеЗаполнено(ЭлементыФормы.Список.ТекущаяСтрока.ВариантКомплектации) Тогда
//			ИсточникОсновныхПараметров=ЭлементыФормы.Список.ТекущаяСтрока.Ссылка;
//		Иначе
//			ИсточникОсновныхПараметров=ЭлементыФормы.Список.ТекущаяСтрока.ВариантКомплектации;
//		КонецЕсли; 
//		Если НЕ обЗначениеНеЗаполнено(ИсточникОсновныхПараметров.ТипКузова) Тогда
//			НоваяСтрока=КомплектацияАвтомобиля.Добавить();
//			НоваяСтрока.Оборудование=СокрЛП(ИсточникОсновныхПараметров.ТипКузова);
//		КонецЕсли; 
//		Если НЕ обЗначениеНеЗаполнено(ИсточникОсновныхПараметров.ТипДвигателя) Тогда
//			НоваяСтрока=КомплектацияАвтомобиля.Добавить();
//			НоваяСтрока.Оборудование=СокрЛП(ИсточникОсновныхПараметров.ТипДвигателя);
//		КонецЕсли; 
//		Если НЕ обЗначениеНеЗаполнено(ИсточникОсновныхПараметров.ТипКПП) Тогда
//			НоваяСтрока=КомплектацияАвтомобиля.Добавить();
//			НоваяСтрока.Оборудование=СокрЛП(ИсточникОсновныхПараметров.ТипКПП);
//		КонецЕсли; 
//		КомплектацияАвтомобилей.Сбросить();
//		СтруктураОтбора=Новый Структура; СтруктураОтбора.Вставить("Автомобиль",ЭлементыФормы.Список.ТекущаяСтрока);
//		Пока КомплектацияАвтомобилей.НайтиСледующий(СтруктураОтбора) Цикл
//			НоваяСтрока=КомплектацияАвтомобиля.Добавить();
//			НоваяСтрока.Оборудование=КомплектацияАвтомобилей.ДополнительноеОборудование;
//		КонецЦикла; 
//	КонецЕсли;
//КонецПроцедуры
// 
//////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

//// Обработчик дополнительных действий формы
//Процедура ДополнительныеДействияФормы(Элемент=Неопределено)
//	Если Элемент=Неопределено Тогда
//		Возврат;
//	КонецЕсли;
//	Если ЭлементыФормы.Список.ТекущаяСтрока=Неопределено Тогда
//		Возврат;
//	КонецЕсли;
//	СправочникОбъект = ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект();
//	Если Элемент.Имя = "ДобавитьВИзбранное" Тогда
//		ДопПараметры = Новый Структура("ИмяФормы","ФормаСписка");
//	Иначе
//		ДопПараметры = Элемент;
//	КонецЕсли;	
//	СправочникОбъект.ОбработкаРеквизита(Элемент.Имя,,ЭтаФорма,ДопПараметры);
//КонецПроцедуры

//// Событие нажатия кнопки "ОтображатьДерево" в панели "ДействияФормы"
//Процедура ДействияФормыОтображатьДерево(Кнопка)
//	спСписокДействияФормыОтображатьДерево(ЭтаФорма, Кнопка);
//КонецПроцедуры

//// Событие надатия кнопки "Печать" в панели "ОсновныеДействияФормы"
//Процедура ОсновныеДействияФормыПечать(Кнопка)
//	спОсновныеДействияФормыПечать(ЭтаФорма, Кнопка);
//КонецПроцедуры

//Процедура ДействияФормыСписокЗаказовНаАвтомобили(Кнопка)
//	Если ЭлементыФормы.Список.ТекущаяСтрока=Неопределено Тогда
//		Возврат;
//	КонецЕсли; 
//	
//	ФормаСписка=Документы.ЗаказНаАвтомобиль.ПолучитьФормуСписка();
//	Если НЕ обЗначениеНеЗаполнено(Отбор.Модель.Значение) Тогда
//		ФормаСписка.Отбор.Модель.Значение=Отбор.Модель.Значение;
//		ФормаСписка.Отбор.Модель.Использование=Истина;
//	КонецЕсли; 
//	Если НЕ обЗначениеНеЗаполнено(Отбор.ВариантКомплектации.Значение) Тогда
//		ФормаСписка.Отбор.ВариантКомплектации.Значение=Отбор.ВариантКомплектации.Значение;
//		ФормаСписка.Отбор.ВариантКомплектации.Использование=Истина;
//	КонецЕсли; 
//	ФормаСписка.Открыть();
//КонецПроцедуры

//Процедура ДействияФормыНовыйЗаказНаАвтомобиль(Кнопка)
//	Если ЭлементыФормы.Список.ТекущаяСтрока=Неопределено Тогда
//		Возврат;
//	КонецЕсли; 
//	
//	АвтомобильОбъект=ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект();
//	АвтомобильОбъект.СоздатьЗаказНаАвтомобиль();
//КонецПроцедуры

//// Выводит отчёт ИсторияАвтомобилей по данным текущей строки
//Процедура ВывестиИсториюАвтомобилей()
//	Если ЭлементыФормы.Список.ТекущиеДанные=Неопределено Тогда
//		Возврат; // нечего выводить
//	КонецЕсли;
//	
//	ИсторияАвтомобилей=Отчеты.ИсторияАвтомобилей.Создать();
//	ИсторияАвтомобилей.ИсторияАвтомобилейИнициализация(Ложь); //отчёт формируется на автомате
//	
//	Элемент=ИсторияАвтомобилей.ПостроительОтчета.Отбор.Найти("Автомобиль");
//	Элемент.Использование=Истина;
//	Элемент.Значение=ЭлементыФормы.Список.ТекущиеДанные.Ссылка;
//	
//	Если ЭлементыФормы.Список.ТекущиеДанные.ЭтоГруппа Тогда
//		Элемент.ВидСравнения=ВидСравнения.ВИерархии;	
//	Иначе
//		Элемент.ВидСравнения=ВидСравнения.Равно;	
//	КонецЕсли;
//	
//	ИсторияАвтомобилей.Вывести();
//КонецПроцедуры

////Нажание кнопки поиска
//Процедура ОсновныеДействияФормыПоиск(Кнопка)
//	СписокАвтомобилей=Новый ТаблицаЗначений;
//	ИскомыйФрагмент="";
//	
//	Если Кнопка.Имя="ПоВладельцу" Тогда
//		ФормаВыбора=Справочники.Контрагенты.ПолучитьФормуВыбора(,ЭтаФорма);
//		ВыбранныйКонтрагент=ФормаВыбора.ОткрытьМодально();
//		Если ВыбранныйКонтрагент=Неопределено Тогда
//			Возврат;
//		КонецЕсли;
//		Запрос=Новый Запрос;
//		Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
//					 |	АвтомобилиСрезПоследних.Автомобиль КАК Автомобиль,
//					 |	АвтомобилиСрезПоследних.Период КАК Период
//					 |ИЗ
//					 |	РегистрСведений.Автомобили КАК АвтомобилиСрезПоследних
//					 |ГДЕ
//					 |	АвтомобилиСрезПоследних.ВидЗначения = &ВидЗначения
//					 |	И АвтомобилиСрезПоследних.Значение = &Значение
//					 |УПОРЯДОЧИТЬ ПО
//					 |	Автомобиль,
//					 |	Период УБЫВ";
//		Запрос.УстановитьПараметр("ВидЗначения",Перечисления.ДополнительнаяИнформацияАвтомобилей.Хозяин);
//		Запрос.УстановитьПараметр("Значение",ВыбранныйКонтрагент);
//		СписокАвтомобилей=Запрос.Выполнить().Выгрузить();

//	ИначеЕсли Кнопка.Имя="ПоНомеруАвтомобиля" Тогда
//		Если НЕ ВвестиСтроку(ИскомыйФрагмент,"Введите фрагмент номера автомобиля") Тогда
//			Возврат;
//		КонецЕсли; 
//		ИскомыйФрагмент=СокрЛП(ИскомыйФрагмент);
//		Если НЕ ПустаяСтрока(ИскомыйФрагмент) Тогда
//			Запрос = Новый Запрос;
//			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
//						   |	Сведения2.Значение КАК Контрагент,
//						   |	Сведения1.Автомобиль КАК Автомобиль,
//						   |	Сведения1.Значение КАК ГосНомер,
//						   |	Сведения1.Период КАК Период
//						   |ИЗ
//						   |	РегистрСведений.Автомобили КАК Сведения1
//						   |	ЛЕВОЕ СОЕДИНЕНИЕ
//						   |		РегистрСведений.Автомобили.СрезПоследних(,ВидЗначения = &ВидЗначенияХозяин)
//						   |		КАК Сведения2
//						   |	ПО
//						   |		( Сведения1.ВидЗначения = &ВидЗначенияГосномер ) И
//						   |		( Сведения1.Автомобиль = Сведения2.Автомобиль)
//						   |ГДЕ
//						   |	ВЫРАЗИТЬ(Сведения1.Значение КАК СТРОКА) ПОДОБНО &СвойствоАвтомобиля
//						   |УПОРЯДОЧИТЬ ПО
//						   |	Автомобиль,
//						   |	Период УБЫВ";
//			Запрос.УстановитьПараметр("ВидЗначенияХозяин",Перечисления.ДополнительнаяИнформацияАвтомобилей.Хозяин);
//			Запрос.УстановитьПараметр("ВидЗначенияГосномер",Перечисления.ДополнительнаяИнформацияАвтомобилей.ГосНомер);
//			Запрос.УстановитьПараметр("СвойствоАвтомобиля","%"+ИскомыйФрагмент+"%");
//			СписокАвтомобилей=Запрос.Выполнить().Выгрузить();
//		Иначе
//			Возврат;
//		КонецЕсли; 
//	
//	ИначеЕсли Кнопка.Имя="ПоVINАвтомобиля" Тогда
//		Если НЕ ВвестиСтроку(ИскомыйФрагмент,"Введите фрагмент VIN-кода автомобиля") Тогда
//			Возврат;
//		КонецЕсли; 
//		ИскомыйФрагмент=СокрЛП(ИскомыйФрагмент);
//		Если НЕ ПустаяСтрока(ИскомыйФрагмент) Тогда
//			Запрос = Новый Запрос;
//			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
//						   |	СправочникАвтомобили.Ссылка КАК Автомобиль,
//						   |	СправочникАвтомобили.Ссылка.VIN КАК VIN
//						   |ИЗ
//						   |	Справочник.Автомобили КАК СправочникАвтомобили
//						   |ГДЕ                                                                           
//						   |	СправочникАвтомобили.Ссылка.VIN ПОДОБНО &VIN
//					 	   |УПОРЯДОЧИТЬ ПО
//					 	   |	Автомобиль,
//					 	   |	VIN";
//			Запрос.УстановитьПараметр("VIN","%"+ИскомыйФрагмент+"%");
//			СписокАвтомобилей=Запрос.Выполнить().Выгрузить();
//		Иначе
//			Возврат;
//		КонецЕсли; 
//		
//	ИначеЕсли Кнопка.Имя="ПоНомеруКузова" Тогда
//		Если НЕ ВвестиСтроку(ИскомыйФрагмент,"Введите фрагмент № кузова автомобиля") Тогда
//			Возврат;
//		КонецЕсли; 
//		ИскомыйФрагмент=СокрЛП(ИскомыйФрагмент);
//		Если НЕ ПустаяСтрока(ИскомыйФрагмент) Тогда
//			Запрос = Новый Запрос;
//			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
//						   |	СправочникАвтомобили.Ссылка КАК Автомобиль,
//						   |	СправочникАвтомобили.Ссылка.НомерКузова КАК Кузов
//						   |ИЗ
//						   |	Справочник.Автомобили КАК СправочникАвтомобили
//						   |ГДЕ                                                                           
//						   |	СправочникАвтомобили.Ссылка.НомерКузова ПОДОБНО &НомерКузова
//					 	   |УПОРЯДОЧИТЬ ПО
//					 	   |	Автомобиль,
//					 	   |	НомерКузова";
//			Запрос.УстановитьПараметр("НомерКузова","%"+ИскомыйФрагмент+"%");
//			СписокАвтомобилей=Запрос.Выполнить().Выгрузить();
//		Иначе
//			Возврат;
//		КонецЕсли; 
//		
//	КонецЕсли; 
//	
//	//Если что нашли - предложим выбрать
//	Если СписокАвтомобилей.Количество()>0 Тогда
//		ВыбраныйАвтомобиль=СписокАвтомобилей.ВыбратьСтроку("Результаты поиска");
//		Если ВыбраныйАвтомобиль<>Неопределено Тогда
//			ЭлементыФормы.Список.ТекущаяСтрока=ВыбраныйАвтомобиль.Автомобиль;
//		КонецЕсли;
//	Иначе
//		Предупреждение("Соответствий не найдено !",2);
//	КонецЕсли;
//КонецПроцедуры

//Процедура ДействияФормыОтображениеКомплектации(Кнопка)
//	ЭлементыФормы.ДействияФормы.Кнопки.ОтображениеКомплектации.Пометка=НЕ ЭлементыФормы.ДействияФормы.Кнопки.ОтображениеКомплектации.Пометка;
//	Если ЭлементыФормы.ДействияФормы.Кнопки.ОтображениеКомплектации.Пометка Тогда
//		ЭлементыФормы.Список.Ширина=ЭлементыФормы.РазделительСпискаИКомплектации.Лево-ЭлементыФормы.Список.Лево;
//		ЭлементыФормы.РазделительСпискаИКомплектации.Видимость=Истина;
//		ЭлементыФормы.КомплектацияАвтомобиля.Видимость=Истина;
//		ЭлементыФормы.Список.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.РазделительСпискаИКомплектации,ГраницаЭлементаУправления.Лево);
//		Если КомплектацияАвтомобилей=Неопределено Тогда
//			ЗагрузитьКомплектацииАвтомобилей();
//		КонецЕсли;
//		ОтобразитьКомплектациюАвтомобиля();
//	Иначе
//		ЭлементыФормы.РазделительСпискаИКомплектации.Видимость=Ложь;
//		ЭлементыФормы.КомплектацияАвтомобиля.Видимость=Ложь;
//		ЭлементыФормы.Список.Ширина=ЭлементыФормы.КомплектацияАвтомобиля.Лево+ЭлементыФормы.КомплектацияАвтомобиля.Ширина-ЭлементыФормы.Список.Лево;
//		ЭлементыФормы.Список.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.КомплектацияАвтомобиля,ГраницаЭлементаУправления.Право);
//	КонецЕсли; 
//КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

//// Обработчик изменения отбора списка документов
//Процедура СписокПриИзмененииОтбора(Элемент = Неопределено)
//	Если Элемент = "СправочникСписок.Отбор.Модель.Использование"Тогда
//		Если НЕ Отбор.Модель.Использование Тогда
//			Отбор.Модель.ВидСравнения = ВидСравнения.Равно;
//			Отбор.Модель.Значение = Справочники.Модели.ПустаяСсылка();
//		КонецЕсли;
//	КонецЕсли;
//	Если Элемент = "СправочникСписок.Отбор.ВариантКомплектации.Использование"Тогда
//		Если НЕ Отбор.ВариантКомплектации.Использование Тогда
//			Отбор.ВариантКомплектации.ВидСравнения = ВидСравнения.Равно;
//			Отбор.ВариантКомплектации.Значение = Справочники.ВариантыКомплектации.ПустаяСсылка();
//		КонецЕсли;
//	КонецЕсли;
//	Если Элемент = "СправочникСписок.Отбор.Цвет.Использование"Тогда
//		Если НЕ Отбор.Цвет.Использование Тогда
//			Отбор.Цвет.ВидСравнения = ВидСравнения.Равно;
//			Отбор.Цвет.Значение = Справочники.Цвета.ПустаяСсылка();
//		КонецЕсли;
//	КонецЕсли;
//	Если Элемент = "СправочникСписок.Отбор.Модель.Значение" Тогда
//		Отбор.Модель.Использование = НЕ обЗначениеНеЗаполнено(ЭлементыФормы.ОтборМодельЗначение.Значение);
//	КонецЕсли;
//	Если Элемент = "СправочникСписок.Отбор.ВариантКомплектации.Значение" Тогда
//		Отбор.ВариантКомплектации.Использование = НЕ обЗначениеНеЗаполнено(ЭлементыФормы.ОтборВариантКомплектацииЗначение.Значение);
//	КонецЕсли;
//	Если Элемент = "СправочникСписок.Отбор.Цвет.Значение" Тогда
//		Отбор.Цвет.Использование = НЕ обЗначениеНеЗаполнено(ЭлементыФормы.ОтборЦветЗначение.Значение);
//	КонецЕсли;
//	Если НЕ УстанавливаетсяОтборНаличияНаСкладе Тогда
//		Если Элемент = "СправочникСписок.Отбор.Ссылка.Значение" ИЛИ
//			 Элемент = "СправочникСписок.Отбор.Ссылка.ВидСравнения" ИЛИ 
//			 Элемент = "СправочникСписок.Отбор.Ссылка.Использование" Тогда
//			 ВНаличии=Ложь;
//			 ЭлементыФормы.СкладКомпании.Доступность=Ложь;
//		КонецЕсли;
//	КонецЕсли; 
//КонецПроцедуры

//Процедура ВНаличииПриИзменении(Элемент)
//	УстановитьОтборПоСкладу();
//КонецПроцедуры

//Процедура СкладКомпанииПриИзменении(Элемент)
//	УстановитьОтборПоСкладу();
//КонецПроцедуры

//Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
//	спДеревоВыбор(ЭтаФорма, Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка);
//КонецПроцедуры

//Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
//	спСписокВыбор(ЭтаФорма, Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка);
//КонецПроцедуры

Процедура СписокПриАктивизацииСтроки(Элемент)
	
	//Обновим комментарий
	Если Элемент.ТекущиеДанные<>Неопределено Тогда
		Если Элемент.ТекущиеДанные.ЭтоГруппа Тогда
			ЭтаФорма.ЭлементыФормы.тКомментарий.Заголовок=СокрЛП(Элемент.ТекущиеДанные.Ссылка.Наименование);
		Иначе
			ЭтаФорма.ЭлементыФормы.тКомментарий.Заголовок=СокрЛП(Элемент.ТекущиеДанные.Ссылка.Наименование)+"; Модель "+Элемент.ТекущиеДанные.Ссылка.Модель+"; VIN "+Элемент.ТекущиеДанные.Ссылка.VIN+"; №куз "+Элемент.ТекущиеДанные.Ссылка.НомерКузова;
		КонецЕсли; 
	Иначе
		ЭтаФорма.ЭлементыФормы.тКомментарий.Заголовок="";
	КонецЕсли;
	КонецПроцедуры

//Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
//	Если НЕ ЭтоГруппа Тогда
//		спСписокПередНачаломДобавления(ЭтаФорма, Элемент, Отказ, Копирование, Родитель, ЭтоГруппа);
//		Отказ=Истина;
//		НовыйАвтомобиль=Справочники.Автомобили.ПолучитьФормуНовогоЭлемента(,ЭтаФорма);
//		НовыйАвтомобиль.Родитель=Родитель;
//		НовыйАвтомобиль.Хозяин=Хозяин;
//		НовыйАвтомобиль.Открыть();
//	КонецЕсли; 
//КонецПроцедуры

//Процедура СписокПередНачаломИзменения(Элемент, Отказ)
//	спСписокПередНачаломИзменения(ЭтаФорма, Элемент, Отказ);
//КонецПроцедуры

//Процедура СписокПередУдалением(Элемент, Отказ)
//	спСписокПередУдалением(ЭтаФорма, Элемент, Отказ);
//КонецПроцедуры

//Процедура СписокПередУстановкойПометкиУдаления(Элемент, Отказ)
//	спСписокПередУстановкойПометкиУдаления(ЭтаФорма, Элемент, Отказ);
//КонецПроцедуры

//Процедура СписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
//	спСписокПриВыводеСтроки(ЭтаФорма, Элемент, ОформлениеСтроки, ДанныеСтроки);
//	
//	//И покажем цену автомобиля
//	Если НЕ обЗначениеНеЗаполнено(ДанныеСтроки.Ссылка.Цена) Тогда
//		ОформлениеСтроки.Ячейки.Цена.ОтображатьТекст=Истина;
//		ОформлениеСтроки.Ячейки.Цена.Текст=Формат(ДанныеСтроки.Ссылка.Цена,"ЧЦ=15; ЧДЦ=2; ЧН=0,00")+" "+СокрЛП(ДанныеСтроки.Ссылка.Валюта);
//	КонецЕсли; 
//КонецПроцедуры

//Процедура СписокОбработкаЗаписиНовогоОбъекта(Элемент, Объект, СтандартнаяОбработка)
//	спСписокОбработкаЗаписиНовогоОбъекта(ЭтаФорма, Элемент, Объект, СтандартнаяОбработка);
//КонецПроцедуры

//Процедура СписокПередИзменениемРодителя(Элемент, Отказ)
//   	спСписокПередИзменениемРодителя(ЭтаФорма, Элемент, Отказ);
//КонецПроцедуры

//Процедура СписокПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
//	спСписокПриОкончанииРедактирования(ЭтаФорма, Элемент, НоваяСтрока, ОтменаРедактирования);
//КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

//Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
//	спСписокПередОткрытием(ЭтаФорма, Отказ, СтандартнаяОбработка);
//КонецПроцедуры

//Процедура ПриОткрытии()
//	спСписокПриОткрытии(ЭтаФорма);
//	ЭлементыФормы.РазделительСпискаИКомплектации.Видимость=Ложь;
//	ЭлементыФормы.КомплектацияАвтомобиля.Видимость=Ложь;
//	ПодключитьОбработчикИзмененияДанных("Отбор","СписокПриИзмененииОтбора",Истина);
//	УстановитьОтборПоХозяину();
//КонецПроцедуры

//Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
//	спСписокПриПовторномОткрытии(ЭтаФорма, СтандартнаяОбработка);
//КонецПроцедуры

//Процедура ОбновлениеОтображения()
//	спСписокОбновлениеОтображения(ЭтаФорма);
//КонецПроцедуры

//Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
//	спСписокПередЗакрытием(ЭтаФорма, Отказ, СтандартнаяОбработка);
//	Если ЭлементыФормы.ДействияФормы.Кнопки.ОтображениеКомплектации.Пометка Тогда
//		ДействияФормыОтображениеКомплектации(ЭлементыФормы.ДействияФормы.Кнопки.ОтображениеКомплектации);
//	КонецЕсли; 
//КонецПроцедуры

//Процедура ПриЗакрытии()
//	спСписокПриЗакрытии(ЭтаФорма);
//КонецПроцедуры

//Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
//	спОбработкаЗаписиНовогоОбъекта(ЭтаФорма, Объект, Источник);
//КонецПроцедуры

//Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
//	спСписокОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
//	Если ИмяСобытия="АвтомобильИзменен" Тогда
//		Если Отбор.Ссылка.Использование Тогда
//			УстановитьОтборПоХозяину();
//		КонецЕсли; 
//	КонецЕсли; 
//КонецПроцедуры

//Процедура ВнешнееСобытие(Источник, Событие, Данные)
//	Если НЕ спСписокВнешнееСобытие(ЭтаФорма, Источник, Событие, Данные) Тогда Возврат; КонецЕсли;
//КонецПроцедуры

//УстанавливаетсяОтборНаличияНаСкладе=Ложь;
//КомплектацияАвтомобилей=Неопределено;
