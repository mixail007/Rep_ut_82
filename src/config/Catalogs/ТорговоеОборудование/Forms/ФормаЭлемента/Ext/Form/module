Перем мБылВыборИзСписка;

// Открывает диалог выбора файла.
//
// Параметры:
//  Элемент                - элемент управления, для которого выбираем файл;
//  ПроверятьСуществование - если Истина, то выбор отменяется, если файл не
//                           существует.
// 
Процедура ВыборФайла(Элемент, Тип, ПроверятьСуществование=Ложь)

	ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	Если Тип = "компонента" Тогда
		ДиалогФыбораФайла.Фильтр     = "Внешние компоненты (*.dll)|*.dll";
		ДиалогФыбораФайла.Заголовок  = "Выберите файл";
		ДиалогФыбораФайла.Расширение = "dll";
	КонецЕсли;

	ДиалогФыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогФыбораФайла.ИндексФильтра               = 0;
	ДиалогФыбораФайла.ПолноеИмяФайла              = Элемент.Значение;
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла = ПроверятьСуществование;

	Если ДиалогФыбораФайла.Выбрать() Тогда
		ПолноеИмяФайла = ДиалогФыбораФайла.ПолноеИмяФайла;
		Каталог = ДиалогФыбораФайла.Каталог;
		Элемент.Значение = Прав(ПолноеИмяФайла, СтрДлина(ПолноеИмяФайла)-СтрДлина(Каталог));
	КонецЕсли;

КонецПроцедуры

// Обработчик события "НачалоВыбора" элемента управления Компонента формы.
//
Процедура КомпонентаНачалоВыбора(Элемент, СтандартнаяОбработка)

	ВыборФайла(Элемент, "компонента", Истина);

КонецПроцедуры

// Обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ)

	// проверка заполнения реквизитов
	Если ВидТорговогоОборудования.Пустая() Тогда
		Предупреждение("Не указан вид торгового оборудования!");
		Отказ = Истина;
	ИначеЕсли СокрЛП(Наименование) = "" Тогда
		Предупреждение("Не заполнено наименование!");
		Отказ = Истина;
	ИначеЕсли ОбработкаОбслуживания.Пустая() Тогда
		Предупреждение("Не указана обработка обслуживания!");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

// Обработчик события "ПриИзменении" элемента управления "Обработка" формы.
//
Процедура ОбработкаПриИзменении(Элемент)
	Перем Вид, Компонента, ПрогИД, Модели;

	Если глТорговоеОборудование <> Неопределено 
	   И Не ЗначениеНеЗаполнено(Элемент.Значение) Тогда
		ФормаОбработки = глТорговоеОборудование.ПолучитьФормуОбработки(Элемент.Значение);
		ФормаОбработки.ПолучитьПараметры(Вид, Компонента, ПрогИД, Модели);

		ВидТорговогоОборудования = Вид;
		ВнешняяКомпонента        = Компонента;
		ПрограммныйИдентификатор = ПрогИД;

		Если ЗначениеНеЗаполнено(Модели) ИЛИ Модели.Количество() = 0 Тогда
			ЭлементыФормы.Модель.КнопкаСпискаВыбора = Ложь;
		Иначе
			ЭлементыФормы.Модель.КнопкаСпискаВыбора = Истина;
			ЭлементыФормы.Модель.СписокВыбора = Модели;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Обработчик события "ОбработкаВыбора" элемента управления "Модель" формы.
//
Процедура МодельОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Код               = ВыбранноеЗначение;
	мБылВыборИзСписка = Истина;

КонецПроцедуры

// Обработчик события "ПриИзменении" элемента управления "Модель" формы.
//
Процедура МодельПриИзменении(Элемент)

	Если мБылВыборИзСписка Тогда
		Наименование      = ЭлементыФормы.Модель.СписокВыбора.НайтиПоЗначению(Код).Представление;
		мБылВыборИзСписка = Ложь;
	КонецЕсли;

КонецПроцедуры

// Обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Перем Вид, Компонента, ПрогИД, Модели;

	Если НЕ ЗначениеНеЗаполнено(ОбработкаОбслуживания)
	   И глТорговоеОборудование <> Неопределено Тогда

		ФормаОбработки = глТорговоеОборудование.ПолучитьФормуОбработки(ОбработкаОбслуживания);
		ФормаОбработки.ПолучитьПараметры(Вид, Компонента, ПрогИД, Модели);

		Если ЗначениеНеЗаполнено(Модели) ИЛИ Модели.Количество() = 0 Тогда
			ЭлементыФормы.Модель.КнопкаСпискаВыбора = Ложь;
		Иначе
			ЭлементыФормы.Модель.КнопкаСпискаВыбора = Истина;
			ЭлементыФормы.Модель.СписокВыбора = Модели;
		КонецЕсли;
	КонецЕсли;
	ОтображениеПанелиККМ();

	мБылВыборИзСписка = Ложь;

КонецПроцедуры

// Обработчик события "ПриИзменении" элемента управления "Вид" формы.
//
Процедура ВидПриИзменении(Элемент)
	
	ОтображениеПанелиККМ();
	
КонецПроцедуры

//Процедура управляет отображением панени "ПанельККМ".
//
Процедура ОтображениеПанелиККМ()
	Если ВидТорговогоОборудования = Перечисления.ВидыТорговогоОборудования.ККМOffLine
	 Или ВидТорговогоОборудования = Перечисления.ВидыТорговогоОборудования.ККМOnLine Тогда
		ЭлементыФормы.ПанельККМ.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельККМ.Свертка = РежимСверткиЭлементаУправления.Право;
	КонецЕсли;
КонецПроцедуры //ОтображениеПанелиККМ()

Процедура ПриОткрытии()
	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	
