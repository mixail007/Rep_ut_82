
Процедура КоманднаяПанельПользователиГруппыПодбор(Кнопка)
	
	ФормаПодбора = Справочники.Пользователи.ПолучитьФормуВыбора(, ЭтаФорма);
	
	ФормаПодбора.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	ФормаПодбора.ЗакрыватьПриВыборе           = Ложь;
	
	ФормаПодбора.Открыть();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.Пользователи") Тогда
		Если ПользователиГруппы.Найти(ЗначениеВыбора, "Пользователь") = Неопределено Тогда
			ПользователиГруппы.Добавить().Пользователь = ЗначениеВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		АдминистраторГруппы = глТекущийПользователь;
	ИначеЕсли Ссылка = Справочники.ГруппыПользователей.ВсеПользователи Тогда
		ЭлементыФормы.ПользователиГруппы.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ОбслужитьТаблицуНастройкиПравДоступа();
	
	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МЕХАНИЗМА НАСТРОЕК ПРАВ ДОСТУПА

Процедура ОбновитьПраваДоступа(Кнопка)
	УстановитьИзменяемыеПараметрыСеансаПользователя();
КонецПроцедуры

// Процедура обслуживает механизм настройки прав доступа к объектам.
//
Процедура ОбслужитьТаблицуНастройкиПравДоступа()
	
	ОбластиДанныхДоступа.Отбор.Ссылка.Использование = Истина;
	ОбластиДанныхДоступа.Отбор.Ссылка.ВидСравнения  = ВидСравнения.НеРавно;
	ОбластиДанныхДоступа.Отбор.Ссылка.Значение      = Перечисления.НаборПравПользователей.ПолныеПрава;
	ЭлементыФормы.ОбластиДанныхДоступа.НастройкаОтбора.Ссылка.Доступность = Ложь;
	
	ЭлементыФормы.ПраваДоступаПользователей.ОтборСтрок.ОбластьДанных.Значение = Перечисления.НаборПравПользователей.ПустаяСсылка();
	ЭлементыФормы.ПраваДоступаПользователей.ОтборСтрок.ОбластьДанных.Использование = Истина;
	ЭлементыФормы.ПраваДоступаПользователей.НастройкаОтбораСтрок.ОбластьДанных.Доступность = Ложь;
	
КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента формы ПраваДоступаПользователей.
//
Процедура ПраваДоступаПользователейПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ПриВыводеСтрокиПраваДоступа(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы ОбластиДанныхДоступа.
//
Процедура ОбластиДанныхДоступаПриАктивизацииСтроки(Элемент)
	
	УстановитьОтборНаОбластьДанных(Элемент, ЭлементыФормы.ПраваДоступаПользователей);
	
КонецПроцедуры

// Обработчик события ПриНачалеРедактирования элемента формы ПраваДоступаПользователей.
//
Процедура ПраваДоступаПользователейПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	УстановитьЗначенияДляНовойСтрокиПравДоступа(Элемент, НоваяСтрока);
	
КонецПроцедуры

// Обработчик события ПроверкаПеретаскивания элемента формы ОбластиДанныхДоступа.
//
Процедура ОбластиДанныхДоступаПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	ПроверкаПеретаскиванияВНовуюОбластьДанных(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка);
	
КонецПроцедуры

// Обработчик события Перетаскивание элемента формы ОбластиДанныхДоступа.
//
Процедура ОбластиДанныхДоступаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	ПеретаскиваниеВНовуюОбластьДанных(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка, ПраваДоступаПользователей, Модифицированность);
	
КонецПроцедуры

Процедура КоманднаяПанельПраваДоступаПользователейГруппыПользователя(Кнопка)
	
	Если НЕ ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	ФормаГруппПользователя = ПолучитьФорму("ФормаНастройкиГруппПользователя");
	ФормаГруппПользователя.Пользователь = Ссылка;
	ФормаГруппПользователя.ОткрытьМодально();
	
КонецПроцедуры

Процедура ПраваДоступаПользователейОбъектДоступаПриИзменении(Элемент)
	
	УстановитьСписокПоляВыбора(ЭлементыФормы.ПраваДоступаПользователей.Колонки.ВидНаследованияПравДоступаИерархическихСправочников.ЭлементУправления, ПолучитьСписокДоступныхДляРедактированияВидовНаследованияПравДоступаВФормеПользователя(Элемент.Значение));
	Если ЭлементыФормы.ПраваДоступаПользователей.ТекущиеДанные <> Неопределено
	   И ЭлементыФормы.ПраваДоступаПользователей.Колонки.ВидНаследованияПравДоступаИерархическихСправочников.ЭлементУправления.СписокВыбора.НайтиПоЗначению(ЭлементыФормы.ПраваДоступаПользователей.ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников) = Неопределено
	   И ЭлементыФормы.ПраваДоступаПользователей.Колонки.ВидНаследованияПравДоступаИерархическихСправочников.ЭлементУправления.СписокВыбора.Количество() > 0 Тогда
		ЭлементыФормы.ПраваДоступаПользователей.ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = ЭлементыФормы.ПраваДоступаПользователей.Колонки.ВидНаследованияПравДоступаИерархическихСправочников.ЭлементУправления.СписокВыбора[0].Значение;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПраваДоступаПользователейПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если ЭлементыФормы.ОбластиДанныхДоступа.ТекущиеДанные = Неопределено Тогда
		Предупреждение("Не выбрана область данных.");
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПраваДоступаПользователейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Элемент.ТекущиеДанные <> Неопределено
	   И ЗначениеНеЗаполнено(Элемент.ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников) Тогда
		Если Элемент.ТекущиеДанные.ОбъектДоступа.ЭтоГруппа Тогда
			Элемент.ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.РаспространитьНаПодчиненных;
		Иначе
			Элемент.ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.ТолькоДляТекущегоПрава;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

ПраваДоступаПользователей = мПраваДоступаПользователей;
