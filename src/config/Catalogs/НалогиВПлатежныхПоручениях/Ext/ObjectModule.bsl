// Возвращает список статусов отправителя п/п
//
// Возвращаемое значение:
//  СписокЗначений – в котором создаются элементы со статусами отправителя/
//
Функция ПолучитьСписокСтатусовОтправителя() Экспорт

	Список = Новый СписокЗначений;
	Список.Добавить("01", "01 - налогоплательщик (плательщик сборов) - юридическое лицо");
	Список.Добавить("02", "02 - налоговый агент");
	Список.Добавить("03", "03 - сборщик налогов и сборов");
	Список.Добавить("04", "04 - налоговый орган");
	Список.Добавить("05", "05 - территориальные органы Федеральной службы судебных приставов");
	Список.Добавить("06", "06 - участник внешнеэкономической деятельности");
	Список.Добавить("07", "07 - таможенный орган");
	Список.Добавить("08", "08 - плательщик иных платежей, осуществляющий перечисление платежей в бюджетную систему Российской Федерации (кроме платежей, администрируемых налоговыми органами)");
	
	//Если ТекущаяДата() >= '20050101' Тогда
	
		Список.Добавить("09", "09 - налогоплательщик (плательщик сборов) – индивидуальный предприниматель");
		Список.Добавить("10", "10 - налогоплательщик (плательщик сборов) – частный нотариус");
		Список.Добавить("11", "11 - налогоплательщик (плательщик сборов) – адвокат, учредивший адвокатский кабинет");
		Список.Добавить("12", "12 - налогоплательщик (плательщик сборов) – глава крестьянского (фермерского) хозяйства");
		Список.Добавить("13", "13 - налогоплательщик (плательщик сборов) – иное физическое лицо – клиент банка (владелец счета)");
		Список.Добавить("14", "14 - налогоплательщик, производящий выплаты физическим лицам (п.п. 1 п.1 ст. 235 Налогового кодекса Российской Федерации)");
		Список.Добавить("15", "15 - кредитная организация, оформившая расчетный документ на общую сумму на перечисление налогов, сборов и иных платежей в бюджетную систему Российской Федерации, уплачиваемых физическими лицами без открытия банковского счета");
		Список.Добавить("16", "16 - Участник внешнеэкономической деятельности – физическое лицо");
		Список.Добавить("17", "17 - Участник внешнеэкономической деятельности – индивидуальный предприниматель");
		Список.Добавить("18", "18 - Плательщик таможенных платежей, не являющийся декларантом, на которого законодательством России возложена обязанность по уплате таможенных платежей");
		Список.Добавить("19", "19 - Организации и их филиалы, удержавшие средства из зарплаты (дохода) должника – физического лица в счет погашения задолженности по платежам в бюджет на основании исполнительного документа");
		Список.Добавить("20", "20 - Участник внешнеэкономической деятельности – физическое лицо");
		Список.Добавить("21", "21 - Ответственный участник консолидированной группы налогоплательщиков");
		Список.Добавить("22", "22 - Участник консолидированной группы налогоплательщиков");
		Список.Добавить("24", "24 - Плательщик – физическое лицо, которое перечисляет в бюджет другие обязательные платежи");
		Список.Добавить("26", "26 - Учредители (участники) должника, собственники имущества должника – унитарного предприятия или третьи лица, составившие распоряжение о переводе денежных средств на погашение требований к должнику по уплате обязательных платежей, включенных в реестр требований кредиторов, в ходе процедур, применяемых в деле о банкротстве");
		Список.Добавить("27", "27 - Кредитные организации (филиалы кредитных организаций), составившие распоряжение о переводе денежных средств, перечисленных из бюджетной системы, не зачисленных получателю и подлежащих возврату в бюджетную систему");
		Список.Добавить("28", "28 - Законный или уполномоченный представитель налогоплательщика");
		Список.Добавить("29", "29 - Иные организации");
		Список.Добавить("30", "30 - Иные физические лица");
			
	//КонецЕсли;
	
	Возврат Список;

КонецФункции // ПолучитьСписокСтатусовОтправителя()

// Возвращает список статусов отправителя п/п
//
// Возвращаемое значение:
//  СписокЗначений – в котором создаются элементы со статусами отправителя/
//
Функция ПолучитьСписокОснованийПлатежа() Экспорт

	ОснованиеПлатежа = Новый СписокЗначений;
	ОснованиеПлатежа.Добавить("ТП", "ТП - платежи текущего года");
	ОснованиеПлатежа.Добавить("ЗД", "ЗД - добровольное погашение задолженности по истекшим налоговым периодам");
	
	Если ТекущаяДата() >= '20050101' Тогда
		ОснованиеПлатежа.Добавить("БФ","БФ - текущие платежи физических лиц – клиентов банка (владельцев счета), уплачиваемые со своего банковского счета");
	КонецЕсли;

	ОснованиеПлатежа.Добавить("ТР", "ТР - погашение задолженности по требованию об уплате налогов (сборов) от налогового органа");
	ОснованиеПлатежа.Добавить("РС", "РС - погашение рассроченной задолженности");
	ОснованиеПлатежа.Добавить("ОТ", "ОТ - погашение отсроченной задолженности");
	ОснованиеПлатежа.Добавить("РТ", "РТ - погашение реструктурируемой задолженности");
	ОснованиеПлатежа.Добавить("ВУ", "ВУ - погашение отсроченной задолженности в связи с введением внешнего управления");
	ОснованиеПлатежа.Добавить("ПР", "ПР - погашение задолженности, приостановленной к взысканию");
	ОснованиеПлатежа.Добавить("АП", "АП - погашение задолженности по акту проверки");
	ОснованиеПлатежа.Добавить("АР", "АР - погашение задолженности по исполнительному документу");
		
	ОснованиеПлатежа.Добавить("0", "0 - Невозможно указать конкретное значение показателя");
	
	Возврат ОснованиеПлатежа;

КонецФункции // ПолучитьСписокСтатусовОтправителя()

// Возвращает список статусов отправителя п/п
//
// Возвращаемое значение:
//  СписокЗначений – в котором создаются элементы со статусами отправителя/
//
Функция ПолучитьСписокПоказателейТипа() Экспорт

	Список = Новый СписокЗначений;
	Список.Добавить("НС", "НС - уплата налога или сбора");
	
	Если ТекущаяДата() >= '20050101' Тогда
		Список.Добавить("ПЛ", "ПЛ - уплата платежа");
		Список.Добавить("ГП", "ГП - уплата пошлины");
		Список.Добавить("ВЗ", "ВЗ - уплата взноса");
	КонецЕсли;
	
	Список.Добавить("АВ", "АВ - уплата аванса или предоплата (в том числе декадные платежи)");
	Список.Добавить("ПЕ", "ПЕ - уплата пени");
	Список.Добавить("ПЦ", "ПЦ - уплата процентов");
	Список.Добавить("СА", "СА - налоговые санкции, установленные Налоговым кодексом РФ");
	Список.Добавить("АШ", "АШ - административные штрафы");
	Список.Добавить("ИШ", "ИШ - иные штрафы, установленные соответствующими нормативными актами");
	Список.Добавить("0", "0 - Конкретное значение указать невозможно");
	
	Возврат Список;

КонецФункции // ПолучитьСписокСтатусовОтправителя()

Процедура ПередЗаписью(Отказ)
	
	Если НЕ Отказ Тогда
	
		обЗаписатьПротоколИзменений(ЭтотОбъект);
	
	КонецЕсли; 

КонецПроцедуры

