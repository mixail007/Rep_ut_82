////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет по реквизиту формы ВидТипаЦен требуемые реквизиты справочника
//
// Параметры:
//  Нет.
//
Процедура ЗаполнитьПризнакиПоВидуТипаЦен()

	Если ВидТипаЦен = "Базовый" Тогда
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Ложь;
		БазовыйТипЦен        = Неопределено;
		ПроцентСкидкиНаценки = 0;
		Рассчитывается       = Ложь;
	ИначеЕсли ВидТипаЦен = "Динамический" Тогда
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Истина;
		Рассчитывается       = Истина;
	ИначеЕсли ВидТипаЦен = "Расчетный" Тогда
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Истина;
		Рассчитывается       = Ложь;
	КонецЕсли;

	УстановитьНадписи();

КонецПроцедуры // ЗаполнитьПризнакиПоВидуТипаЦен()

// Процедура заполняет на форме реквизит ВидТипаЦен по реквизитам элемента
//
// Параметры:
//  Нет.
//
Процедура ЗаполнитьВидТипаЦенПоПризнакам()

	Если Рассчитывается Тогда
		ВидТипаЦен = "Динамический";
	Иначе
		Если ЗначениеНеЗаполнено(БазовыйТипЦен) Тогда
			ВидТипаЦен = "Базовый";
		Иначе
			ВидТипаЦен = "Расчетный";
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьВидТипаЦенПоПризнакам()

// Процедура устанавливает надписи в форме.
//
Процедура УстановитьНадписи()

	Если ВидТипаЦен = "Базовый" Тогда
		ЭлементыФормы.ИнфРассчитывается.Заголовок = "Цены назначаются и хранятся для каждой позиции номенклатуры.
		                                            |На основании цен этого типа могут рассчитываться цены других типов";
	ИначеЕсли ВидТипаЦен = "Динамический" Тогда
		ЭлементыФормы.ИнфРассчитывается.Заголовок = "Цены рассчитываются автоматически от цен базового типа";
	ИначеЕсли ВидТипаЦен = "Расчетный" Тогда
		ЭлементыФормы.ИнфРассчитывается.Заголовок = "Цены назначаются и хранятся для каждой позиции номенклатуры";
	КонецЕсли;

КонецПроцедуры // УстановитьНадписи()

// Процедура устанавливает доступность реквизитов формы.
//
Процедура УстановитьДоступность()

	Если ВидТипаЦен = "Базовый" Тогда
		ЭлементыФормы.БазовыйТипЦен.Доступность               = Ложь;
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ПроцентСкидкиНаценки.Доступность        = Ложь;
	ИначеЕсли ВидТипаЦен = "Расчетный" ИЛИ ВидТипаЦен = "Динамический" Тогда
		ЭлементыФормы.БазовыйТипЦен.Доступность               = Истина;
		ЭлементыФормы.БазовыйТипЦен.АвтоОтметкаНезаполненного = Истина;
		ЭлементыФормы.ПроцентСкидкиНаценки.Доступность        = Истина;
	КонецЕсли;

КонецПроцедуры // УстановитьДоступность()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПриИзмененииДанных формы.
//
Процедура ПриИзмененииДанных()

	Если ЭтоНовый() Тогда
		ПорядокОкругления = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии(Отказ)

	Если ЭтоНовый() Тогда
		ВалютаЦены = Константы.ВалютаУправленческогоУчета.Получить();
	КонецЕсли;

	// Заполнить список выбора номенклатуры
	ЭлементыФормы.ВидТипаЦен.СписокВыбора.Добавить("Базовый");
	ЭлементыФормы.ВидТипаЦен.СписокВыбора.Добавить("Динамический");
	ЭлементыФормы.ВидТипаЦен.СписокВыбора.Добавить("Расчетный");

	ЗаполнитьВидТипаЦенПоПризнакам();

	УстановитьНадписи();

	УстановитьДоступность();

	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)

	Если (ВидТипаЦен = "Расчетный" ИЛИ ВидТипаЦен = "Динамический")
	   И ЗначениеНеЗаполнено(БазовыйТипЦен) Тогда
		СообщитьОбОшибке("Не заполнен базовый тип цен!", Отказ);
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

// Обработчик события ПриИзменении поля выбора вида типа цен.
//
Процедура ВидТипаЦенПриИзменении(Элемент)

	Если ЗначениеНеЗаполнено(ВидТипаЦен) Тогда
		ВидТипаЦен = "Базовый";
	КонецЕсли;

	ЗаполнитьПризнакиПоВидуТипаЦен();

	УстановитьДоступность();

КонецПроцедуры // ВидТипаЦенПриИзменении()



