
Функция СохранитьЗначения()

	НачатьТранзакцию();
	
	// Куда включаем
	Для каждого СтрокаТЗ Из ТЗВходит Цикл
		
		Если СтрокаТЗ.Группа.ПользователиГруппы.Найти(Пользователь, "Пользователь") <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Объект = СтрокаТЗ.Группа.ПолучитьОбъект();
		НоваяСтрока = Объект.ПользователиГруппы.Добавить();
		НоваяСтрока.Пользователь = Пользователь;
		Попытка
			Объект.Записать();
		Исключение
			СообщитьОбОшибке(ОписаниеОшибки(),, "Изменения не сохранены!");
			ОтменитьТранзакцию();
			Возврат Ложь;
		КонецПопытки;
	
	КонецЦикла;

	// Откуда исключаем
	Для каждого СтрокаТЗ Из ТЗНеВходит Цикл
		
		Если СтрокаТЗ.Группа.ПользователиГруппы.Найти(Пользователь, "Пользователь") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Объект = СтрокаТЗ.Группа.ПолучитьОбъект();
		Объект.ПользователиГруппы.Удалить(Объект.ПользователиГруппы.Найти(Пользователь, "Пользователь"));
		Попытка
			Объект.Записать();
		Исключение
			СообщитьОбОшибке(ОписаниеОшибки(),, "Изменения не сохранены!");
			ОтменитьТранзакцию();
			Возврат Ложь;
		КонецПопытки;
	
	КонецЦикла;

	ЗафиксироватьТранзакцию();
	
	Модифицированность = Ложь;
	Возврат Истина;
	
КонецФункции // СохранитьЗначения()

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если СохранитьЗначения() Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		ОтветНаВопрос = Вопрос("Данные были изменены. Сохранить?", РежимДиалогаВопрос.ДаНетОтмена);
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			Отказ = НЕ СохранитьЗначения();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура Перетаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)

	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СтрокаТаблицыЗначений")
	   И НЕ ЗначениеНеЗаполнено(ПараметрыПеретаскивания.Значение.Группа) Тогда
		
		Если Элемент = ЭлементыФормы.ТЗВходит Тогда
			ПеренестиЭлемент(ТЗНеВходит, ТЗВходит, ПараметрыПеретаскивания.Значение.Группа);
		Иначе
			ПеренестиЭлемент(ТЗВходит, ТЗНеВходит, ПараметрыПеретаскивания.Значение.Группа);
		КонецЕсли; 
		
	КонецЕсли; 

КонецПроцедуры

Процедура ПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)

	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СтрокаТаблицыЗначений") Тогда
		НайденнаяСтрока = Элемент.Значение.Найти(ПараметрыПеретаскивания.Значение.Группа, "Группа");
		Если НайденнаяСтрока <> Неопределено Тогда
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		КонецЕсли;
	Иначе
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.НадписьПользователь.Заголовок = "Пользователь: " + СокрЛП(Пользователь);
	
	ЗаполнитьГруппыПользователя();
	
КонецПроцедуры

Процедура ПеренестиЭлемент(Откуда, Куда, Знач Группа)

	СтрокаОткуда = Откуда.Найти(Группа, "Группа");
	Если СтрокаОткуда <> Неопределено Тогда
		Откуда.Удалить(СтрокаОткуда);
	Иначе
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Куда.Добавить();
	НоваяСтрока.Группа = Группа;
	
	Модифицированность = Истина;

КонецПроцедуры

Процедура ВыборТабличногоПоля(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ТекущиеДанные <> Неопределено
	   И НЕ ЗначениеНеЗаполнено(Элемент.ТекущиеДанные.Группа) Тогда
		Если Элемент = ЭлементыФормы.ТЗВходит Тогда
			ПеренестиЭлемент(ТЗВходит, ТЗНеВходит, Элемент.ТекущиеДанные.Группа);
		Иначе
			ПеренестиЭлемент(ТЗНеВходит, ТЗВходит, Элемент.ТекущиеДанные.Группа);
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры

Процедура ПередНачаломИзмененияТабличногоПоля(Элемент, Отказ);

	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные <> Неопределено
	   И НЕ ЗначениеНеЗаполнено(Элемент.ТекущиеДанные.Группа) Тогда
		Элемент.ТекущиеДанные.Группа.ПолучитьФорму().Открыть();
	КонецЕсли; 

КонецПроцедуры

Процедура ЗаполнитьГруппыПользователя()

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТекПользователь", Пользователь);
	Запрос.УстановитьПараметр("ВсеПользователи", Справочники.ГруппыПользователей.ВсеПользователи);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГруппыПользователей.Ссылка                                                            КАК Группа,
	|	ВЫБОР КОГДА ТЧПользователиГруппы.Пользователь ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ КАК Флаг
	|ИЗ
	|	Справочник.ГруппыПользователей КАК ГруппыПользователей
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.ГруппыПользователей.ПользователиГруппы КАК ТЧПользователиГруппы
	|ПО
	|	ТЧПользователиГруппы.Ссылка = ГруппыПользователей.Ссылка
	|	И
	|	ТЧПользователиГруппы.Пользователь = &ТекПользователь
	|
	|ГДЕ
	|	ГруппыПользователей.Ссылка <> &ВсеПользователи
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Флаг Тогда
			НоваяСтрока = ТЗВходит.Добавить();
		Иначе
			НоваяСтрока = ТЗНеВходит.Добавить();
		КонецЕсли;
		НоваяСтрока.Группа = Выборка.Группа;
	КонецЦикла;
	
КонецПроцедуры

Процедура ТЗНеВходитВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ВыборТабличногоПоля(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ТЗНеВходитПередНачаломИзменения(Элемент, Отказ)
	
	ПередНачаломИзмененияТабличногоПоля(Элемент, Отказ);
	
КонецПроцедуры

Процедура ТЗВходитВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ВыборТабличногоПоля(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ТЗВходитПередНачаломИзменения(Элемент, Отказ)
	
	ПередНачаломИзмененияТабличногоПоля(Элемент, Отказ);
	
КонецПроцедуры

Процедура ПереместитьДобавитьНажатие(Элемент)
	
	Если ЭлементыФормы.ТЗНеВходит.ТекущиеДанные <> Неопределено
	   И НЕ ЗначениеНеЗаполнено(ЭлементыФормы.ТЗНеВходит.ТекущиеДанные.Группа) Тогда
		ПеренестиЭлемент(ТЗНеВходит, ТЗВходит, ЭлементыФормы.ТЗНеВходит.ТекущиеДанные.Группа);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПереместитьУдалитьНажатие(Элемент)
	
	Если ЭлементыФормы.ТЗВходит.ТекущиеДанные <> Неопределено
	   И НЕ ЗначениеНеЗаполнено(ЭлементыФормы.ТЗВходит.ТекущиеДанные.Группа) Тогда
		ПеренестиЭлемент(ТЗВходит, ТЗНеВходит, ЭлементыФормы.ТЗВходит.ТекущиеДанные.Группа);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТЗНеВходитНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
КонецПроцедуры

Процедура ТЗВходитНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
КонецПроцедуры

Процедура ТЗНеВходитПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Перетаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка);
	
КонецПроцедуры

Процедура ТЗВходитПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Перетаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка);
	
КонецПроцедуры

Процедура ТЗВходитПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	ПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка);
	
КонецПроцедуры

Процедура ТЗНеВходитПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	ПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка);
	
КонецПроцедуры
