
Перем мТекущееРасширениеФайла;

Перем мОбъектОтбора;
Перем мЕстьОсновноеИзображение;

Перем мЖирныйШрифт;
Перем мОбычныйШрифт;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура устанавливает доступность кнопок меню (таблицы отображения списка изображений)
// для установки и снятия основного элемента
//
// Параметры: 
//  ТекущееИзображение - ссылка на элемент спр. в Изображения, для которого 
//                 применяется доступоность кнопок.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ОбновитьКнопкиОсновногоИзображения(ТекущееИзображение)

	Если НЕ мЕстьОсновноеИзображение Тогда
		Возврат;
	КонецЕсли;
	
	КнопкаОсновноеИзображение = ЭлементыФормы.КоманднаяПанельИзображений.Кнопки.ОсновноеИзображение;
	КнопкаОсновноеИзображениеПодменю = ЭлементыФормы.КоманднаяПанельИзображений.Кнопки.Подменю.Кнопки.ОсновноеИзображение;
	
	Если ТекущееИзображение = Неопределено Тогда
		
		КнопкаОсновноеИзображение.Доступность = Ложь;
		КнопкаОсновноеИзображение.Пометка = Ложь;
		
	Иначе
		
		КнопкаОсновноеИзображение.Доступность = Истина;
		
		Если ТекущееИзображение = ОсновноеИзображение И Не ТекущееИзображение.Пустая() Тогда
			КнопкаОсновноеИзображение.Пометка = Истина;
		Иначе
			КнопкаОсновноеИзображение.Пометка = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	КнопкаОсновноеИзображениеПодменю.Доступность = КнопкаОсновноеИзображение.Доступность;
	КнопкаОсновноеИзображениеПодменю.Пометка     = КнопкаОсновноеИзображение.Пометка;

КонецПроцедуры // ОбновитьКнопкиОсновногоИзображения()

// Процедура вызывается при окончании редактирования строки таблицы Изображения
// или таблицы ДополнительныеФайлы
//
// Параметры: 
//  Элемент - элемент формы, событие строки которого обрабатывается
//  НоваяСтрока - булево, признак окончания редактирования новой строки
//  ТекущийВидДанных - Перечисление, вид данных текущей строки
//
// Возвращаемое значение:
//  Нет.
//
Процедура ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ТекущийВидДанных)

	Если Элемент.ТекущиеДанные <> Неопределено И НоваяСтрока И ТипЗнч(ОбязательныеОтборы) = Тип("Структура") Тогда
		
		Для каждого ОбязательныйОтбор Из ОбязательныеОтборы Цикл
			
			Элемент.ТекущиеДанные[ОбязательныйОтбор.Ключ] = ОбязательныйОтбор.Значение;
			
		КонецЦикла; 
		
	КонецЕсли;

	Элемент.ТекущиеДанные.ВидДанных = ТекущийВидДанных;

КонецПроцедуры

// Процедура показывает картинку текущей строки таблицы Изображения
//
// Параметры: 
//  Элемент - элемент формы, Изображения
//
// Возвращаемое значение:
//  Нет.
//
Процедура ПоказатьКартинкуТекущейСтроки(Элемент)

	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ЭлементыФормы.ПолеИзображения.Картинка = Новый Картинка();
		Возврат;
	КонецЕсли;

	//Проверка на новую строку, если новая то не обновляем изображение.
	Если НЕ Элемент.ТекущаяСтрока.Пустая() Тогда
		ТекущаяКартинка = Элемент.ТекущиеДанные.Ссылка.Хранилище.Получить();
		ЭлементыФормы.ПолеИзображения.Картинка = ?(ТекущаяКартинка <> Неопределено, ТекущаяКартинка, Новый Картинка());
	КонецЕсли;
	
	ОбновитьКнопкиОсновногоИзображения(ЭлементыФормы.Изображения.ТекущаяСтрока);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЕЙСТВИЙ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Сохраняет файлы выделенные в списке на диск.
//
// Параметры:
//  Кнопка - текущая кнопка, которую нажимаем
//  
Процедура КоманднаяПанельДополнительныхФайловСохранитьНаДиске(Кнопка)

	СохранитьФайлы(ЭлементыФормы.ДополнительныеФайлы.ТекущиеДанные, глТекущийПользователь, ЭлементыФормы.ДополнительныеФайлы.ВыделенныеСтроки);

КонецПроцедуры

// Сохраняет файлы выделенные в списке на диск и открывает их.
//
// Параметры:
//  Кнопка - текущая кнопка, которую нажимаем
//  
Процедура КоманднаяПанельДополнительныхФайловОткрытьФайлы(Кнопка)

	ОткрытьФайлы(ЭлементыФормы.ДополнительныеФайлы.ТекущиеДанные, глТекущийПользователь, ЭлементыФормы.ДополнительныеФайлы.ВыделенныеСтроки);

КонецПроцедуры

// Добавляет несколько файлов в спискок.
//
// Параметры:
//  Кнопка - текущая кнопка, которую нажимаем
//  
Процедура КоманднаяПанельДополнительныхФайловДобавитьНесколькоФайлов(Кнопка)

	ОбъектЗаписи = Неопределено;
	Если НЕ ОбязательныеОтборы.Свойство("Объект", ОбъектЗаписи) Тогда
	
		ОбъектЗаписи = ЭлементыФормы.ДополнительныеФайлы.ТекущиеДанные.Ссылка;
	
	КонецЕсли; 

	ВидДополнительнойИнформацииЗаписи = Неопределено;
	Если НЕ ОбязательныеОтборы.Свойство("ВидДанных", ВидДополнительнойИнформацииЗаписи) Тогда
	
		ВидДополнительнойИнформацииЗаписи = Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл;
	
	КонецЕсли; 
	
	ДобавитьФайлы(ОбъектЗаписи, глТекущийПользователь, ВидДополнительнойИнформацииЗаписи);
	
	
	Если ВладелецФормы <> Неопределено Тогда
		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ИзмененСписокСправочникаХранилищеДопИнформации"),мОбъектОтбора);
	КонецЕсли; 
	

КонецПроцедуры


// Процедура устанавливает текущую картинку в качестве основной для данного объекта
//
// Параметры:
//  Кнопка - текущая кнопка, которую нажимаем
//  
Процедура КоманднаяПанельИзображенийОсновноеИзображение(Кнопка)

	Если НЕ мЕстьОсновноеИзображение ИЛИ ЭлементыФормы.Изображения.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если ЭлементыФормы.КоманднаяПанельИзображений.Кнопки.ОсновноеИзображение.Пометка Тогда // снимем основное изображение
	
		ТекОсновноеИзображение = Справочники.ХранилищеДополнительнойИнформации.ПустаяСсылка();
	
	Иначе // установим основное изображение
	
		Если ЭлементыФормы.Изображения.ТекущиеДанные.ПометкаУдаления Тогда
			Ответ = Вопрос("Элемент помечен на удаление.
						   |Продолжить?", РежимДиалогаВопрос.ДаНет);
			Если Не Ответ = КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;

		ТекОсновноеИзображение = ЭлементыФормы.Изображения.ТекущаяСтрока;
		
	КонецЕсли;

	Попытка
		ВладелецФормы.ОсновноеИзображение = ТекОсновноеИзображение;
	Исключение
		Попытка
			ОбъектИзображения = мОбъектОтбора.ПолучитьОбъект();
			ОбъектИзображения.ОсновноеИзображение = ТекОсновноеИзображение;
			ОбъектИзображения.Записать();
		Исключение
			Сообщить("Не удалось изменить основное изображение!", СтатусСообщения.Важное);
			Возврат;
		КонецПопытки;
	КонецПопытки;
	
	ОсновноеИзображение = ТекОсновноеИзображение;
	ОбновитьКнопкиОсновногоИзображения(ЭлементыФормы.Изображения.ТекущаяСтрока);
	Обновить();
	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ОсновноеИзображение"), мОбъектОтбора);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события формы ПередОткрытием.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ТипЗнч(ОбязательныеОтборы) = Тип("Структура") И ОбязательныеОтборы.Свойство("Объект") Тогда
		
		ОбязательныеОтборы.Свойство("Объект", мОбъектОтбора);
		
	КонецЕсли;

	Если НЕ мОбъектОтбора = Неопределено Тогда
		
		Если НЕ мОбъектОтбора.Метаданные().Реквизиты.Найти("ОсновноеИзображение") = Неопределено Тогда
			мЕстьОсновноеИзображение = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ мЕстьОсновноеИзображение Тогда
		ЭлементыФормы.КоманднаяПанельИзображений.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельИзображений.Кнопки.Индекс(ЭлементыФормы.КоманднаяПанельИзображений.Кнопки.ОсновноеИзображение));
		ЭлементыФормы.КоманднаяПанельИзображений.Кнопки.Подменю.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельИзображений.Кнопки.Подменю.Кнопки.Индекс(ЭлементыФормы.КоманднаяПанельИзображений.Кнопки.Подменю.Кнопки.ОсновноеИзображение));
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события формы ПриОткрытии.
//
Процедура ПриОткрытии()

	ДополнительныеФайлы.Отбор.ВидДанных.Значение = Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл;
	ДополнительныеФайлы.Отбор.ВидДанных.Использование = Истина;
	Изображения.Отбор.ВидДанных.Значение = Перечисления.ВидыДополнительнойИнформацииОбъектов.Изображение;
	Изображения.Отбор.ВидДанных.Использование = Истина;

	ЭлементыФормы.ДополнительныеФайлы.НастройкаОтбора.ВидДанных.Доступность = Ложь;
	ЭлементыФормы.Изображения.НастройкаОтбора.ВидДанных.Доступность = Ложь;

	ЗакрыватьПриВыборе = Ложь;

	Если мЕстьОсновноеИзображение Тогда
		ОсновноеИзображение = мОбъектОтбора.ОсновноеИзображение;
	Иначе
		ОсновноеИзображение = Справочники.ХранилищеДополнительнойИнформации.ПустаяСсылка();
	КонецЕсли; 
	
	ОбновитьКнопкиОсновногоИзображения(ЭлементыФормы.Изображения.ТекущаяСтрока);

КонецПроцедуры

// Обработчик события формы ОбработкаВыбора.
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	ЭлементыФормы.Изображения.ТекущаяСтрока = ЗначениеВыбора;
	
	ПоказатьКартинкуТекущейСтроки(ЭлементыФормы.Изображения);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЕЙСТВИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриНачалеРедактирования элемента ДополнительныеФайлы.
//
Процедура ДополнительныеФайлыПриНачалеРедактирования(Элемент, НоваяСтрока)

	Если НоваяСтрока Тогда

		Элемент.ТекущиеДанные.ВидДанных = Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл;

	КонецЕсли;

	мТекущееРасширениеФайла = ПолучитьРасширениеФайла(ЭлементыФормы.ДополнительныеФайлы.ТекущаяСтрока.ИмяФайла);

КонецПроцедуры

// Обработчик события ПередОкончаниемРедактирования элемента ДополнительныеФайлы.
//
Процедура ДополнительныеФайлыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	НовоеРасширениеФайла = ПолучитьРасширениеФайла(ЭлементыФормы.ДополнительныеФайлы.ТекущиеДанные.ИмяФайла);

	Если Не ОтменаРедактирования
	   И НельзяИзменятьРасширение(мТекущееРасширениеФайла, НовоеРасширениеФайла) Тогда

		Отказ = Истина;
		ЭлементыФормы.ДополнительныеФайлы.ТекущаяКолонка = ЭлементыФормы.ДополнительныеФайлы.Колонки.ИмяФайла;
		Возврат;

	КонецЕсли;

	Если Не ОтменаРедактирования
	   И НоваяСтрока
	   И ЭлементыФормы.ДополнительныеФайлы.ТекущиеДанные.Хранилище.Получить() = Неопределено Тогда

		Отказ = Истина;
		Предупреждение("Необходимо выбрать файл.");
		ЭлементыФормы.ДополнительныеФайлы.ТекущаяКолонка = ЭлементыФормы.ДополнительныеФайлы.Колонки.ИмяФайла;
		Возврат;

	КонецЕсли;

	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл);

КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента ДополнительныеФайлы.
//
Процедура ДополнительныеФайлыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.ИмяФайла.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.ИмяФайла.ИндексКартинки = ПолучитьИндексПиктограммыФайла(ПолучитьРасширениеФайла(ДанныеСтроки.Ссылка.ИмяФайла));

КонецПроцедуры

// Обработчик события НачалоВыбора элемента ДополнительныеФайлы поля ИмяФайла.
//
Процедура ДополнительныеФайлыИмяФайлаНачалоВыбора(Элемент, СтандартнаяОбработка)

	Диалог = ПолучитьДиалогВыбораФайлов(Ложь);

	Если Не Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;

	Попытка
		ТекОбъект = ЭлементыФормы.ДополнительныеФайлы.ТекущиеДанные;
		ТекОбъект.Хранилище = Новый ХранилищеЗначения(Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла), Новый СжатиеДанных);
		ТекОбъект.ИмяФайла = Сред(Диалог.ПолноеИмяФайла, СтрДлина(Диалог.Каталог) + 1);
	Исключение
		Сообщить("" + ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы Изображения.
//
Процедура ИзображенияПриАктивизацииСтроки(Элемент)

	ПоказатьКартинкуТекущейСтроки(Элемент);
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Если ВладелецФормы <> Неопределено Тогда
	  		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ИзмененСписокСправочникаХранилищеДопИнформации"),мОбъектОтбора);
		КонецЕсли; 
	КонецЕсли;


КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента формы Изображения.
//
Процедура ИзображенияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если мЕстьОсновноеИзображение Тогда

		Если Не ДанныеСтроки.Ссылка.Пустая() И ДанныеСтроки.Ссылка = ОсновноеИзображение Тогда
			ОформлениеСтроки.Шрифт = мЖирныйШрифт;
		Иначе
			ОформлениеСтроки.Шрифт = мОбычныйШрифт;
		КонецЕсли;

	Иначе
		
		ОформлениеСтроки.Шрифт = мОбычныйШрифт;
	
	КонецЕсли;

КонецПроцедуры

// Процедура вызывается при нажатии на картинку изображения в форме
// и вызывает открытие формы элемента списка
//
// Параметры:
//  Элемент - картинка формы
//  
Процедура ПолеИзображениеНажатие(Элемент)
	
	ОткрытьФормуИзображения(ЭтаФорма, ЭлементыФормы.Изображения.ТекущаяСтрока, мОбъектОтбора);
	
КонецПроцедуры

// Обработчик события ПередОкончаниемРедактирования элемента формы Изображения.
//
Процедура ИзображенияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, Перечисления.ВидыДополнительнойИнформацииОбъектов.Изображение);

КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы Изображения.
//
Процедура ИзображенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)

	Если Не Копирование Тогда
		
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.Заголовок = "Выберите файл с фотографией";
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		ДиалогОткрытияФайла.ПредварительныйПросмотр = Истина;
		ДиалогОткрытияФайла.Фильтр = ПолучитьФильтрИзображений();

		Если ДиалогОткрытияФайла.Выбрать() Тогда

			ВыбранноеИзображение = Новый Картинка(ДиалогОткрытияФайла.ПолноеИмяФайла, Ложь);
			ЭлементыФормы.ПолеИзображения.Картинка = ВыбранноеИзображение;

		Иначе
			Отказ = Истина;
			Возврат;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы Изображения.
//
Процедура ИзображенияПередНачаломИзменения(Элемент, Отказ)

	Отказ = Истина;

	ОткрытьФормуИзображения(ЭтаФорма, ЭлементыФормы.Изображения.ТекущаяСтрока, мОбъектОтбора);

КонецПроцедуры

// Обработчик события ПриНачалеРедактирования элемента формы Изображения.
//
Процедура ИзображенияПриНачалеРедактирования(Элемент, НоваяСтрока)

	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Хранилище = Новый ХранилищеЗначения(ЭлементыФормы.ПолеИзображения.Картинка,Новый СжатиеДанных());
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриОкончанииРедактирования элемента формы Изображения.
//
Процедура ИзображенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	Если ВладелецФормы <> Неопределено Тогда
		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ИзмененСписокСправочникаХранилищеДопИнформации"),мОбъектОтбора);
	КонецЕсли; 
	
	ОбновитьКнопкиОсновногоИзображения(ЭлементыФормы.Изображения.ТекущаяСтрока);
	
КонецПроцедуры

// Обработчик события ПослеУдаления элемента формы Изображения.
//
Процедура ИзображенияПослеУдаления(Элемент)

	Если ВладелецФормы <> Неопределено Тогда
	  	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ИзмененСписокСправочникаХранилищеДопИнформации"),мОбъектОтбора);
	КонецЕсли; 
	
	ОбновитьКнопкиОсновногоИзображения(ЭлементыФормы.Изображения.ТекущаяСтрока);
	
	Если ЭлементыФормы.Изображения.ТекущаяСтрока = Неопределено Тогда
		ЭлементыФормы.ПолеИзображения.Картинка = Новый Картинка()
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПриОкончанииРедактирования элемента формы ДополнительныеФайлы.
//
Процедура ДополнительныеФайлыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	Если ВладелецФормы <> Неопределено Тогда
	  	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ИзмененСписокСправочникаХранилищеДопИнформации"),мОбъектОтбора);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПослеУдаления элемента формы ДополнительныеФайлы.
//
Процедура ДополнительныеФайлыПослеУдаления(Элемент)

	Если ВладелецФормы <> Неопределено Тогда
	  	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ИзмененСписокСправочникаХранилищеДопИнформации"),мОбъектОтбора);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДополнительныеФайлыПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Если ВладелецФормы <> Неопределено Тогда
	  		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ИзмененСписокСправочникаХранилищеДопИнформации"),мОбъектОтбора);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры



мОбъектОтбора = Неопределено;
мЕстьОсновноеИзображение = Ложь;

мЖирныйШрифт = Новый Шрифт(,, Истина);
мОбычныйШрифт = Новый Шрифт();
