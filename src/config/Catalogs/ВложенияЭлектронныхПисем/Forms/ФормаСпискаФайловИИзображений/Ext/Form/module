
Перем мТекущееРасширениеФайла;

Перем мОбъектОтбора;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура вызывается при окончании редактирования строки таблицы СправочникСписок
//
// Параметры: 
//  Элемент - элемент формы, событие строки которого обрабатывается
//  НоваяСтрока - булево, признак окончания редактирования новой строки
//  ТекущийВидДанных - Перечисление, вид данных текущей строки
//
// Возвращаемое значение:
//  Нет.
//
Процедура ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ТекущийВидДанных)

	Если Элемент.ТекущиеДанные <> Неопределено И НоваяСтрока И ТипЗнч(ОбязательныеОтборы) = Тип("Структура") Тогда
		Для каждого ОбязательныйОтбор Из ОбязательныеОтборы Цикл
			Элемент.ТекущиеДанные[ОбязательныйОтбор.Ключ] = ОбязательныйОтбор.Значение;
		КонецЦикла; 
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЕЙСТВИЙ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Сохраняет файлы выделенные в списке на диск.
//
// Параметры:
//  Кнопка - текущая кнопка, которую нажимаем
//  
Процедура КоманднаяПанельДополнительныхФайловСохранитьНаДиске(Кнопка)

	СохранитьФайлы(ЭлементыФормы.СправочникСписок.ТекущиеДанные, глТекущийПользователь, ЭлементыФормы.СправочникСписок.ВыделенныеСтроки,, "ВложенияЭлектронныхПисем");

КонецПроцедуры

// Сохраняет файлы выделенные в списке на диск и открывает их.
//
// Параметры:
//  Кнопка - текущая кнопка, которую нажимаем
//  
Процедура КоманднаяПанельДополнительныхФайловОткрытьФайлы(Кнопка)

	ОткрытьФайлы(ЭлементыФормы.СправочникСписок.ТекущиеДанные, глТекущийПользователь, ЭлементыФормы.СправочникСписок.ВыделенныеСтроки);

КонецПроцедуры

// Добавляет несколько файлов в спискок.
//
// Параметры:
//  Кнопка - текущая кнопка, которую нажимаем
//  
Процедура КоманднаяПанельДополнительныхФайловДобавитьНесколькоФайлов(Кнопка)

	ОбъектДобавления = Неопределено;
	Если НЕ ОбязательныеОтборы.Свойство("Объект", ОбъектДобавления) Тогда
		ОбъектДобавления = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;
	КонецЕсли; 

	ДобавитьФайлы(ОбъектДобавления, глТекущийПользователь, "ВложенияЭлектронныхПисем");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события формы ПередОткрытием.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ТипЗнч(ОбязательныеОтборы) = Тип("Структура") И ОбязательныеОтборы.Свойство("Объект") Тогда
		ОбязательныеОтборы.Свойство("Объект", мОбъектОтбора);
	КонецЕсли;

КонецПроцедуры

// Обработчик события формы ПриОткрытии.
//
Процедура ПриОткрытии()

	ЗакрыватьПриВыборе = Ложь;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЕЙСТВИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриНачалеРедактирования элемента СправочникСписок.
//
Процедура СправочникСписокПриНачалеРедактирования(Элемент, НоваяСтрока)

	мТекущееРасширениеФайла = ПолучитьРасширениеФайла(ЭлементыФормы.СправочникСписок.ТекущаяСтрока.ИмяФайла);

КонецПроцедуры

// Обработчик события ПередОкончаниемРедактирования элемента СправочникСписок.
//
Процедура СправочникСписокПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	НовоеРасширениеФайла = ПолучитьРасширениеФайла(ЭлементыФормы.СправочникСписок.ТекущиеДанные.ИмяФайла);

	Если Не ОтменаРедактирования
	   И НельзяИзменятьРасширение(мТекущееРасширениеФайла, НовоеРасширениеФайла) Тогда

		Отказ = Истина;
		ЭлементыФормы.СправочникСписок.ТекущаяКолонка = ЭлементыФормы.СправочникСписок.Колонки.ИмяФайла;
		Возврат;

	КонецЕсли;

	Если Не ОтменаРедактирования
	   И НоваяСтрока
	   И ЭлементыФормы.СправочникСписок.ТекущиеДанные.Хранилище.Получить() = Неопределено Тогда

		Отказ = Истина;
		Предупреждение("Необходимо выбрать файл.");
		ЭлементыФормы.СправочникСписок.ТекущаяКолонка = ЭлементыФормы.СправочникСписок.Колонки.ИмяФайла;
		Возврат;

	КонецЕсли;

	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл);

КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента СправочникСписок.
//
Процедура СправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.ИмяФайла.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.ИмяФайла.ИндексКартинки = ПолучитьИндексПиктограммыФайла(ПолучитьРасширениеФайла(ДанныеСтроки.Ссылка.ИмяФайла));

КонецПроцедуры

// Обработчик события НачалоВыбора элемента СправочникСписок поля ИмяФайла.
//
Процедура СправочникСписокИмяФайлаНачалоВыбора(Элемент, СтандартнаяОбработка)

	Диалог = ПолучитьДиалогВыбораФайлов(Ложь);

	Если Не Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;

	Попытка
		ТекОбъект = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
		ТекОбъект.Хранилище = Новый ХранилищеЗначения(Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла), Новый СжатиеДанных);
		ТекОбъект.ИмяФайла = Сред(Диалог.ПолноеИмяФайла, СтрДлина(Диалог.Каталог) + 1);
	Исключение
		Сообщить("" + ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

// Обработчик события ПриОкончанииРедактирования элемента формы СправочникСписок.
//
Процедура СправочникСписокПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	Если ВладелецФормы <> Неопределено Тогда
		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ИзмененСписокСправочникаХранилищеДопИнформации"),мОбъектОтбора);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПослеУдаления элемента формы СправочникСписок.
//
Процедура СправочникСписокПослеУдаления(Элемент)

	Если ВладелецФормы <> Неопределено Тогда
		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ИзмененСписокСправочникаХранилищеДопИнформации"),мОбъектОтбора);
	КонецЕсли; 
	
КонецПроцедуры

мОбъектОтбора = Неопределено;
