// Модуль формы элемента справочника

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик дополнительных действий формы
//Процедура ДополнительныеДействияФормы(Элемент=Неопределено)
//	Если Элемент=Неопределено Тогда
//		Возврат;
//	КонецЕсли;
//	ОбработкаРеквизита(Элемент.Имя,,ЭтаФорма,Элемент);
//КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

//Изменение наименования работы
Процедура НаименованиеПриИзменении(Элемент)
	Если ПустаяСтрока(НаименованиеПолное) Тогда
		НаименованиеПолное = Наименование;
	КонецЕсли; 
КонецПроцедуры

//Перед удалением цены
Процедура ЦеныПередУдалением(Элемент, Отказ)
	Если Элемент.ТекущаяСтрока.КлассАвтомобиля=Справочники.КлассыАвтомобилей.ОбщиеРаботы.Ссылка Тогда
		Отказ=Истина;
	КонецЕсли; 
КонецПроцедуры

//При выводе строки цен
Процедура ЦеныПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.КлассАвтомобиля=Справочники.КлассыАвтомобилей.ОбщиеРаботы.Ссылка Тогда
		ОформлениеСтроки.Ячейки.КлассАвтомобиля.ТолькоПросмотр=Истина;
	КонецЕсли; 
КонецПроцедуры

//При изменении класса автомобиля
Процедура ЦеныКлассАвтомобиляПриИзменении(Элемент)
	Если ЗначениеНеЗаполнено(ЭлементыФормы.Цены.ТекущаяСтрока.Нормочас) Тогда
	//	ЭлементыФормы.Цены.ТекущаяСтрока.Нормочас=обПраво("НормочасПоУмолчанию",Права);
	КонецЕсли; 
КонецПроцедуры

//Начало добавления связанной работы
Процедура СвязанныеРаботыПередНачаломДобавления(Элемент, Отказ, Копирование)
	Если ЭтоНовый() Тогда
		Ответ = Вопрос("Элемент еще не записан, ввод связанных с ним данных не возможен. Записать элемент?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Попытка
				Отказ = НЕ ЗаписатьВФорме();
			Исключение
				Отказ = Истина;
			КонецПопытки;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//Начало выбора связаной работы
Процедура СвязанныеРаботыСвязаннаяРаботаНачалоВыбора(Элемент, СтандартнаяОбработка)
	//Элемент.ОграничениеТипа=Новый ОписаниеТипов(Элемент.ТипЗначения.Типы());
	//дкВыборЗначенияРеквизита(ЭтаФорма,"СвязаннаяРабота",Элемент,СтандартнаяОбработка,,"СвязаннаяРабота")
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


Процедура ПриОткрытии()
	//спЭлементПриОткрытии(ЭтаФорма);
	
	//Выберем цены для данного элемента
	ЕстьОбщийКлассАвтомобиля=Ложь;
	ЦеныАвтоработы=РегистрыСведений.НормочасыРабот.Выбрать(Новый Структура("Авторабота",ЭтотОбъект.Ссылка));
	Пока ЦеныАвтоработы.Следующий() Цикл
		СтрокаЦены=Цены.Добавить();
		СтрокаЦены.КлассАвтомобиля=ЦеныАвтоработы.КлассАвтомобиля;
//		СтрокаЦены.Нормочас=ЦеныАвтоработы.Нормочас;
		СтрокаЦены.Время=ЦеныАвтоработы.Время;
		Если ЦеныАвтоработы.КлассАвтомобиля=Справочники.КлассыАвтомобилей.ОбщиеРаботы.Ссылка Тогда
			ЕстьОбщийКлассАвтомобиля=Истина;
		КонецЕсли; 
	КонецЦикла;
	Если НЕ ЕстьОбщийКлассАвтомобиля Тогда
		СтрокаЦены=Цены.Добавить();
		СтрокаЦены.КлассАвтомобиля=Справочники.КлассыАвтомобилей.ОбщиеРаботы.Ссылка;
	//	СтрокаЦены.Нормочас=обПраво("НормочасПоУмолчанию",Права);
		СтрокаЦены.Время=1;
	КонецЕсли; 
	
	//СвязанныеРаботы.Отбор.Авторабота.Значение=Ссылка;
	//СвязанныеРаботы.Отбор.Авторабота.Использование=Истина;
	
	Модифицированность=Ложь;
	
	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	




Процедура ПриЗаписи(Отказ)
//	спЭлементПриЗаписи(ЭтаФорма, Отказ);
	
	ЕстьОбщийКлассАвтомобиля=Ложь;
	//Проверим заполненность цен
	Для каждого ЦеныАвтоработы Из Цены Цикл
		Если ЦеныАвтоработы.КлассАвтомобиля=Справочники.КлассыАвтомобилей.ОбщиеРаботы.Ссылка Тогда
			ЕстьОбщийКлассАвтомобиля=Истина;
		КонецЕсли; 
		Если ЗначениеНеЗаполнено(ЦеныАвтоработы.КлассАвтомобиля) Тогда
			Сообщить("Класс автомобиля не задан!");
			Отказ=Истина;
		КонецЕсли; 
		//Если ЗначениеНеЗаполнено(ЦеныАвтоработы.Нормочас) Тогда
		//	Сообщить("Нормочас не задан!");
		//	Отказ=Истина;
		//КонецЕсли; 
		Если ЗначениеНеЗаполнено(ЦеныАвтоработы.Время) Тогда
			Сообщить("Время выполнения не задано!");
			Отказ=Истина;
		КонецЕсли;
		Если Цены.НайтиСтроки(Новый Структура("КлассАвтомобиля",ЦеныАвтоработы.КлассАвтомобиля)).Количество()>1 Тогда
			Сообщить("Повторение цен для класса автомобиля <"+СокрЛП(ЦеныАвтоработы.КлассАвтомобиля)+">");
			Отказ=Истина;
		КонецЕсли;
	КонецЦикла;
	Если НЕ ЕстьОбщийКлассАвтомобиля Тогда
		Сообщить("В ценах работы отсутствует обязательный общий класс автомобилей.");
		Отказ=Истина;
	КонецЕсли; 
	Если НЕ Отказ Тогда
		НачатьТранзакцию();
		//Сначала удалим цены для данного элемента
		ЦеныАвтоработы=РегистрыСведений.НормочасыРабот.Выбрать(Новый Структура("Авторабота",ЭтотОбъект.Ссылка));
		Пока ЦеныАвтоработы.Следующий() Цикл
			ЦеныАвтоработыМенеджер=ЦеныАвтоработы.ПолучитьМенеджерЗаписи();
			ЦеныАвтоработыМенеджер.Удалить();
		КонецЦикла;
		//Запишем новые цены
		Для каждого ЦеныАвтоработы Из Цены Цикл
			ЦеныАвтоработыМенеджер=РегистрыСведений.НормочасыРабот.СоздатьМенеджерЗаписи();
			ЦеныАвтоработыМенеджер.Авторабота=ЭтотОбъект.Ссылка;
			ЦеныАвтоработыМенеджер.КлассАвтомобиля=ЦеныАвтоработы.КлассАвтомобиля;
	//		ЦеныАвтоработыМенеджер.Нормочас=ЦеныАвтоработы.Нормочас;
			ЦеныАвтоработыМенеджер.Время=ЦеныАвтоработы.Время;
			ЦеныАвтоработыМенеджер.Записать();
		КонецЦикла; 
		ЗафиксироватьТранзакцию();
	КонецЕсли; 
КонецПроцедуры

Процедура ПослеЗаписи()
	//спЭлементПослеЗаписи(ЭтаФорма);
//	СвязанныеРаботы.Отбор.Авторабота.Значение=Ссылка;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

