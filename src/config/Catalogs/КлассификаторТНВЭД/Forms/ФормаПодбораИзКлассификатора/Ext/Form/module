////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ЗакрыватьПриВыборе = Ложь;
		
	ЗаполнитьКлассификатор();
	
КонецПроцедуры

Функция ТаблицаКлассификатораТНВЭД() Экспорт
	
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	
	Макет = Справочники.КлассификаторТНВЭД.ПолучитьМакет("КлассификаторТоварнойНоменклатурыВнешнеэкономическойДеятельности");
	
	//В полученном макете содержатся значения всех списков используемых в отчете
	//ищем переданный
	Список = Макет.Области.Найти("Строки");
	
	Если Список.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
		//заполнение дерева данными списка	
		ВерхОбласти = Список.Верх;
		НизОбласти = Список.Низ;
		
		НомерКолонки = 1;
		Область = Макет.Область(ВерхОбласти - 1, НомерКолонки);
		ИмяКолонки = Область.Текст;
		ДлинаКодаКлассификатора = 7;
		
		Пока ЗначениеЗаполнено(ИмяКолонки) Цикл
			
			Если ИмяКолонки = "Код" Тогда
				ТаблицаПоказателей.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(12)));
			ИначеЕсли ИмяКолонки = "Наименование" Тогда
				ТаблицаПоказателей.Колонки.Добавить("Наименование",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(255)));
			КонецЕсли;	
			
			НомерКолонки = НомерКолонки + 1;
			Область = Макет.Область(ВерхОбласти - 1, НомерКолонки);
			ИмяКолонки = Область.Текст;
			
		КонецЦикла;
		
		Для НомСтр = ВерхОбласти По НизОбласти Цикл
			// Отображаем только элементы
			
			Код = СокрП(Макет.Область(НомСтр, 1).Текст);
			Если СтрДлина(Код) = 2 Тогда
				Продолжить;
			КонецЕсли;
			СтрокаСписка = ТаблицаПоказателей.Добавить();
			
			Для Каждого Колонка Из ТаблицаПоказателей.Колонки Цикл
				
				ЗначениеКолонки = СокрП(Макет.Область(НомСтр, ТаблицаПоказателей.Колонки.Индекс(Колонка) + 1).Текст);
				СтрокаСписка[Колонка.Имя] = ЗначениеКолонки;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаПоказателей.Сортировать(ТаблицаПоказателей.Колонки[0].Имя + " Возр");
	
	Возврат ТаблицаПоказателей;
	
КонецФункции

Функция ПолучитьЗначенияКлассификатораИзМакета()
	
	ТаблицаПоказателей = ТаблицаКлассификатораТНВЭД();
	Возврат ТаблицаПоказателей;
	
КонецФункции

Функция ПолучитьРанееДобавленныеЭлементы()
	
	ИмяСправочника = "КлассификаторТНВЭД";
	
	Запрос = Новый Запрос;
	ЗапросТекст = "ВЫБРАТЬ
	               |	%1.Код,
				   |	%1.Ссылка
	               |ИЗ
	               |	Справочник.%1 КАК %1";
				   
	МетаданныеСправочник = Метаданные.Справочники[ИмяСправочника];
	ТекстПараметра2 = "%1.";
	Запрос.Текст = СтрЗаменить(ЗапросТекст, "%1", ИмяСправочника);			   
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаполнитьКлассификатор()
	
	Классификатор.Очистить();
	
	//Получаем полную таблицу элементов классификатора
	// в таблице содержатся Код и Наименование, элементов классификатора
	ЭлементыКлассификатораИзМакета = ПолучитьЗначенияКлассификатораИзМакета();
	
	//Получаем таблицу элементов классификатора уже имеющихся в справочнике
	РанееДобавленныеЭлементыКлассификатора 	= ПолучитьРанееДобавленныеЭлементы();
	РанееДобавленныеЭлементыКлассификатора.Индексы.Добавить("Код");
	
	ЭлементыКлассификатора = ЭлементыКлассификатораИзМакета;
	
	Если ЭлементыКлассификатора.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализируем структуру которую будем использовать для поиска существующих элементов
	СтруктураПоискаРанееСозданных = Новый Структура();
	
	Для Каждого Элемент Из ЭлементыКлассификатора Цикл
		
		НоваяСтрока = Классификатор.Добавить();
		НоваяСтрока.Код   = Элемент.Код;
		
		Наименование = Элемент.Наименование;
		НоваяСтрока.Наименование = Наименование;
		
		СтруктураПоискаРанееСозданных.Вставить("Код",        Элемент.Код);
		НайденныйЭлемент = РанееДобавленныеЭлементыКлассификатора.НайтиСтроки(СтруктураПоискаРанееСозданных);
		
		Если НайденныйЭлемент.Количество() > 0 Тогда
			
			//НоваяСтрока.Ссылка = НайденныйЭлемент[0].Ссылка;
			НоваяСтрока.ЕстьСсылка = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
		
	Классификатор.Сортировать("ЕстьСсылка Убыв, Код Возр");
		
КонецПроцедуры	

Процедура КлассификаторВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбраннаяСтрока.ЕстьСсылка Тогда 
		Предупреждение("Уже есть в справочнике");
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Создать новый элемент справочника?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СоздатьНовыйЭлемент(ВыбраннаяСтрока);	
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьНовыйЭлемент(ВыбраннаяСтрока)
	
	ЭлементКлассификатора = Справочники.КлассификаторТНВЭД.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(ЭлементКлассификатора, ВыбраннаяСтрока);
	ЭлементКлассификатора.НаименованиеПолное = ВыбраннаяСтрока.Наименование;
	
	ЭлементКлассификатора.Записать();
	
	ВыбраннаяСтрока.ЕстьСсылка = Истина;
	
КонецПроцедуры	
