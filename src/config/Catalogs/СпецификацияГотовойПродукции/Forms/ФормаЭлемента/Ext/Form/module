перем мПечатнаяФормаПоУмолчанию;
перем мТаблицаОстатков;

Процедура ПриОткрытии()
	Если ЭтоНовый() тогда
		Дата = ТекущаяДата();
	КонецЕсли;	
	СписокМакетов = ЭтотОбъект.ПолучитьСписокПечатныхФорм();
		
	УстановитьПодменюВыбораПечатнойФормы(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати,
	                                       СписокМакетов,
	                                       Новый Действие("ДействияФормыДействиеВыбратьПечатнуюФормы"));

	// Установить печатную форму по умолчанию.
	УстановитьКнопкуПечати(ЭтотОбъект.Метаданные().Имя, ЭтаФорма, СписокМакетов, мПечатнаяФормаПоУмолчанию);		
  КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Печать" командной панели
// формы. Процедура отрабатывает выбор печатной формы.
//
Процедура ДействияФормыДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ДействиеПечать.Текст = Кнопка.Текст;
		СтруктураМакета = Новый Структура("Макет, ПредставлениеМакета");
		СписокМакетов = ПолучитьСписокПечатныхФорм();
		СтрокаМакетаВСписке = СписокМакетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаМакетаВСписке <> Неопределено Тогда
			Печать(СтрокаМакетаВСписке.Значение);
			СтруктураМакета.Макет = СтрокаМакетаВСписке.Значение;
			СтруктураМакета.ПредставлениеМакета = СтрокаМакетаВСписке.Представление;			
			
		Иначе
			СсылкаВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрЗаменить(Кнопка.Имя, "_", "-")));
			Печать(СсылкаВнешнейФормы);
			СтруктураМакета.Макет = СсылкаВнешнейФормы;
			СтруктураМакета.ПредставлениеМакета = Кнопка.Текст;
		КонецЕсли;		
		
		мПечатнаяФормаПоУмолчанию = СтруктураМакета.Макет;
		СохранитьТекущуюКнопкуПечати(ЭтотОбъект.Метаданные().Имя, СтруктураМакета);
	КонецЕсли;

КонецПроцедуры // ДействияФормыДействиеВыбратьПечатнуюФормы()


Процедура НоменклатураПриИзменении(Элемент)
	
	Если НЕ ЭтоНовый() тогда
		Предупреждение("Изменение Даты ввода Спецификации - отразтся в её названии!", 30);
	КонецЕсли;	
	
	Наименование = Номенклатура.Код+"/"+формат(Дата,"ДФ=yy-MM-dd"); // сортировка по алфавиту - совпадает с сортировкой по полю Дата!
		
КонецПроцедуры

Процедура РассчитатьДоступноеКоличествоНаСкладе()
	
	Запрос = Новый Запрос;
	
	МенВрТаб = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенВрТаб;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаданиеНаПроизводствоДисковТовары.Номенклатура,
	               |	ЗаданиеНаПроизводствоДисковТовары.Спецификация,
	               |	ЗаданиеНаПроизводствоДисковТовары.Количество
	               |ПОМЕСТИТЬ ВтЗаданиеНаПроизводствоДисковТовары
	               |ИЗ
	               |	&ВТ_ТабличнаяЧасть КАК ЗаданиеНаПроизводствоДисковТовары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СпецификацияГотовойПродукцииСостав.Комплектующая КАК Комплектующая,
	               |	СУММА(СпецификацияГотовойПродукцииСостав.Количество * ЗаданиеНаПроизводствоДисковТовары.Количество) КАК КоличествоВсего
	               |ПОМЕСТИТЬ ВтКоличествоВДругихСпецификациях
	               |ИЗ
	               |	ВтЗаданиеНаПроизводствоДисковТовары КАК ЗаданиеНаПроизводствоДисковТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпецификацияГотовойПродукции.Состав КАК СпецификацияГотовойПродукцииСостав
	               |		ПО ЗаданиеНаПроизводствоДисковТовары.Спецификация = СпецификацияГотовойПродукцииСостав.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СпецификацияГотовойПродукцииСостав.Комплектующая
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура.Код КАК Код,
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Комлектующая,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ВтКоличествоВДругихСпецификациях.КоличествоВсего, 0) КАК СвободноеКоличествоНаСкладе
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтКоличествоВДругихСпецификациях КАК ВтКоличествоВДругихСпецификациях
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ВтКоличествоВДругихСпецификациях.Комплектующая
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТоварыНаСкладахОстатки.Номенклатура.Наименование";

				   
				   
	ТЧ = ВладелецФормы.Товары.Выгрузить();
		
    ТЧ.Свернуть("Номенклатура, Спецификация", "Количество");
    Запрос.УстановитьПараметр("ВТ_ТабличнаяЧасть", ТЧ);
			   
   	Запрос.УстановитьПараметр("Склад",Справочники.Склады.НайтиПоКоду("12117"));
	мТаблицаОстатков = Запрос.Выполнить().Выгрузить(); 
	мТаблицаОстатков.Свернуть ("Код,Комлектующая","СвободноеКоличествоНаСкладе");
КонецПроцедуры 
Процедура ПослеЗаписи()
	Если ТипЗнч(ВладелецФормы) = Тип ("Форма") тогда
		Если  ТипЗнч (ВладелецФормы.ДокументОбъект.Ссылка) = Тип ("ДокументСсылка.ЗаданиеНаПроизводствоДисков") тогда
			Текущиеданные = Владелецформы.ЭлементыФормы.Товары.ТекущиеДанные;
			ТекущиеДанные.Спецификация = Ссылка;
		КонецЕсли;
	КонецЕсли;	
	/////установим стандартную цену, если ее еще нет
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦеныНоменклатурыСрезПоследних.Цена,
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |			,
	               |			Номенклатура = &Номенклатура
	               |				И ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних";
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТипЦен", Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить());  // Закупочная  "Ценообразование"
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не выборка.Количество() тогда  //цена не установлена
		Док = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
		Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		НовЦена = док.ТипыЦен.Добавить();
		НовЦена.ТипЦен = Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить(); 
		док.Дата = ТекущаяДата();	
		док.Комментарий = "ковка";

		Нов = Док.Товары.Добавить();
		Нов.ТипЦен = Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить();
		нов.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		Нов.ИндексСтрокиТаблицыЦен = 0;
		Нов.Номенклатура = Номенклатура;
		нов.ЕдиницаИзмерения = Номенклатура.ЕдиницаХраненияОстатков;
		Нов.Цена = "10000";
				
		док.Записать(РежимЗаписиДокумента.Проведение);		
	КонецЕсли;	 

КонецПроцедуры

Процедура КоманднаяПанель1Подбор(Кнопка)
	ФормаПодбора =  ЭтотОбъект.ПолучитьФорму("ФормаПодбора",ЭтаФорма);
	Если ТипЗнч(ВладелецФормы) = Тип ("Форма") тогда
		Если  ТипЗнч (ВладелецФормы.ДокументОбъект.Ссылка) = Тип ("ДокументСсылка.ЗаданиеНаПроизводствоДисков") тогда
			РассчитатьДоступноеКоличествоНаСкладе();
			
			ФормаПодбора.ЭлементыФормы.Результат.Значение = мТаблицаОстатков;
			ФормаПодбора.ЭлементыФормы.Результат.СоздатьКолонки();	
						
		КонецЕсли;		
	Иначе 
		Запрос = Новый Запрос;
		Запрос.Текст =  "ВЫБРАТЬ
		                |	ТоварыНаСкладахОстатки.Номенклатура.Код КАК Код,
		                |	ТоварыНаСкладахОстатки.Номенклатура КАК Комлектующая,		               
		                |	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоНаСкладе
		                |ИЗ
		                |	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
		                |ГДЕ
		                |	ТоварыНаСкладахОстатки.Склад = &Склад";
		Запрос.УстановитьПараметр("Склад",Справочники.Склады.НайтиПоКоду("12117"));	//Ангар-ковка
		ТЗ = Запрос.Выполнить().Выгрузить();
		ФормаПодбора.ЭлементыФормы.Результат.Значение = ТЗ;
		ФормаПодбора.ЭлементыФормы.Результат.СоздатьКолонки();
	КонецЕсли;
	ФормаПодбора.ОткрытьМодально(); 
КонецПроцедуры

мТаблицаОстатков = Новый ТаблицаЗначений;
мТаблицаОстатков.Очистить();
