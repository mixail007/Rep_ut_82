Процедура УстановитьВидимость()
	
//	ЭлементыФормы.Способы.Колонки.Проект.Видимость = ИспользоватьРаспределениеЗатратПоПроектам();
	
КонецПроцедуры // УстановитьВидимость()

// Процедура заполняет счет налогового учета на основании счета и аналитики бухгалтерского учета.
//
Процедура ЗаполнитьСчетНалоговогоУчета(ИзменениеСубконто = ЛОЖЬ)

	//Если ИзменениеСубконто Тогда
	//	Возврат;
	//КонецЕсли;

	//СтрокаТабличнойЧасти = ЭлементыФормы.Способы.ТекущиеДанные;
	//ВидЗатратНУ          = СтрокаТабличнойЧасти.СтатьяЗатрат.ВидРасходовНУ;

	//Если НЕ ЗначениеНеЗаполнено(ВидЗатратНУ) Тогда
	//	СтрокаТабличнойЧасти.СчетЗатратНУ = ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ВидЗатратНУ", СтрокаТабличнойЧасти.СчетЗатрат, ВидЗатратНУ));
	//Иначе
	//	СтрокаТабличнойЧасти.СчетЗатратНУ = ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СтрокаТабличнойЧасти.СчетЗатрат));
	//КонецЕсли;

	//ПриВыбореСчетаВТабличномПоле(ЭлементыФормы.Способы.ТекущиеДанные.СчетЗатратНУ,
	//							 ЭлементыФормы.Способы.ТекущиеДанные.СубконтоНУ1,
	//							 ЭлементыФормы.Способы.Колонки.СубконтоНУ1,
	//							 ЭлементыФормы.Способы.ТекущиеДанные.СубконтоНУ2,
	//							 ЭлементыФормы.Способы.Колонки.СубконтоНУ2,
	//							 ЭлементыФормы.Способы.ТекущиеДанные.СубконтоНУ3,
	//							 ЭлементыФормы.Способы.Колонки.СубконтоНУ3);

КонецПроцедуры // ЗаполнитьСчетНалоговогоУчета()

// Процедура управляет доступностью колонок субконто в табличной части услуги
//
Процедура УстановитьДоступностьСубконто(СтрокаТЧ)

	//Если ЗначениеНеЗаполнено(СтрокаТЧ) Тогда
	//	Возврат;
	//КонецЕсли;

	//Если НЕ СтрокаТЧ.СтатьяЗатрат.ХарактерЗатрат = Перечисления.ХарактерЗатрат.Прочие Тогда
	//	Возврат;
	//КонецЕсли;

	//Колонки = ЭлементыФормы.Способы.Колонки;

	//ПриВыбореСчетаВТабличномПоле(ЭлементыФормы.Способы.ТекущиеДанные.СчетЗатрат,
	//						 ЭлементыФормы.Способы.ТекущиеДанные.Субконто1,
	//						 ЭлементыФормы.Способы.Колонки.Субконто1,
	//						 ЭлементыФормы.Способы.ТекущиеДанные.Субконто2,
	//						 ЭлементыФормы.Способы.Колонки.Субконто2,
	//						 ЭлементыФормы.Способы.ТекущиеДанные.Субконто3,
	//						 ЭлементыФормы.Способы.Колонки.Субконто3);

	//ПриВыбореСчетаВТабличномПоле(ЭлементыФормы.Способы.ТекущиеДанные.СчетЗатратНУ,
	//						 ЭлементыФормы.Способы.ТекущиеДанные.СубконтоНУ1,
	//						 ЭлементыФормы.Способы.Колонки.СубконтоНУ1,
	//						 ЭлементыФормы.Способы.ТекущиеДанные.СубконтоНУ2,
	//						 ЭлементыФормы.Способы.Колонки.СубконтоНУ2,
	//						 ЭлементыФормы.Способы.ТекущиеДанные.СубконтоНУ3,
	//						 ЭлементыФормы.Способы.Колонки.СубконтоНУ3);

КонецПроцедуры // УстановитьДоступностьСубконто()

//Процедура - обработчик события "ПриИзменении" поля СчетЗатрат
// в табличной части "Способы"
//
Процедура СпособыСчетЗатратПриИзменении(Элемент)

	//ПриВыбореСчетаВТабличномПоле(Элемент.Значение,
	//							 ЭлементыФормы.Способы.ТекущиеДанные.Субконто1,
	//							 ЭлементыФормы.Способы.Колонки.Субконто1,
	//							 ЭлементыФормы.Способы.ТекущиеДанные.Субконто2,
	//							 ЭлементыФормы.Способы.Колонки.Субконто2,
	//							 ЭлементыФормы.Способы.ТекущиеДанные.Субконто3,
	//							 ЭлементыФормы.Способы.Колонки.Субконто3);

	//ЗаполнитьСчетНалоговогоУчета()

КонецПроцедуры // СпособыСчетЗатратПриИзменении()

// Процедура - обработчик события "ОбработкаВыбора" поля "Счет затрат".
// 
//  Проверяет возможность использования выбранного пользователем счета
// в проводках.
//
Процедура СпособыСчетЗатратОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
	
КонецПроцедуры // СпособыСчетЗатратОбработкаВыбора()

//Процедура - обработчик события "ПриИзменении" поля Субконто1
// в табличной части "Способы"
//
Процедура СпособыСубконто1ПриИзменении(Элемент)

	//СтрокаТЧ = ЭлементыФормы.Способы.ТекущиеДанные;
	//ЗаменитьСубконтоНУ(СтрокаТЧ.СчетЗатрат, СтрокаТЧ.СчетЗатратНУ, 1, СтрокаТЧ.Субконто1, СтрокаТЧ.СубконтоНУ1);

КонецПроцедуры // СпособыСубконто1ПриИзменении()

//Процедура - обработчик события "ПриИзменении" поля Субконто2
// в табличной части "Способы"
//
Процедура СпособыСубконто2ПриИзменении(Элемент)

	//СтрокаТЧ = ЭлементыФормы.Способы.ТекущиеДанные;
	//ЗаменитьСубконтоНУ(СтрокаТЧ.СчетЗатрат, СтрокаТЧ.СчетЗатратНУ, 2, СтрокаТЧ.Субконто2, СтрокаТЧ.СубконтоНУ2);

КонецПроцедуры // СпособыСубконто2ПриИзменении()

//Процедура - обработчик события "ПриИзменении" поля Субконто3
// в табличной части "Способы"
//
Процедура СпособыСубконто3ПриИзменении(Элемент)

	//СтрокаТЧ = ЭлементыФормы.Способы.ТекущиеДанные;
	//ЗаменитьСубконтоНУ(СтрокаТЧ.СчетЗатрат, СтрокаТЧ.СчетЗатратНУ, 3, СтрокаТЧ.Субконто3, СтрокаТЧ.СубконтоНУ3);

КонецПроцедуры // СпособыСубконто3ПриИзменении()

//Процедура - обработчик события "ПриИзменении" поля СчетЗатратНУ
// в табличной части "Способы"
//
Процедура СпособыСчетЗатратНУПриИзменении(Элемент)

	//ПриВыбореСчетаВТабличномПоле(ЭлементыФормы.Способы.ТекущиеДанные.СчетЗатратНУ,
	//							 ЭлементыФормы.Способы.ТекущиеДанные.СубконтоНУ1,
	//							 ЭлементыФормы.Способы.Колонки.СубконтоНУ1,
	//							 ЭлементыФормы.Способы.ТекущиеДанные.СубконтоНУ2,
	//							 ЭлементыФормы.Способы.Колонки.СубконтоНУ2,
	//							 ЭлементыФормы.Способы.ТекущиеДанные.СубконтоНУ3,
	//							 ЭлементыФормы.Способы.Колонки.СубконтоНУ3);

КонецПроцедуры // СпособыСчетЗатратНУПриИзменении()

// Процедура - обработчик события "ОбработкаВыбора" поля "Счет затрат (НУ)".
// 
//  Проверяет возможность использования выбранного пользователем счета
// в проводках.
//
Процедура СпособыСчетЗатратНУОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
	
КонецПроцедуры // СпособыСчетЗатратНУОбработкаВыбора()

//Процедура - обработчик события "ПриАктивизацииСтроки"
// табличной части "Способы"
//
Процедура СпособыПриАктивизацииСтроки(Элемент)

	//СтрокаТЧ = ЭлементыФормы.Способы.ТекущиеДанные;
	//УстановитьДоступностьСубконто(СтрокаТЧ);

КонецПроцедуры // СпособыПриАктивизацииСтроки()

// Процедура - обработчик события "ПриВыводеСтроки" списка справочника.
// Формирует данные в колонке "ХарактерЗатрат"
//
Процедура СпособыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	//ХарактерЗатрат = ДанныеСтроки.СтатьяЗатрат.ХарактерЗатрат;
	//Если ЭлементыФормы.Способы.Колонки.ХарактерЗатрат.Видимость	Тогда
	//	ОформлениеСтроки.Ячейки.ХарактерЗатрат.ОтображатьТекст = Истина;
	//	ОформлениеСтроки.Ячейки.ХарактерЗатрат.Текст = ХарактерЗатрат;
	//КонецЕсли;
	//
	//УстановитьВидимостьЯчеекАналитикиЗатрат(
	//	ХарактерЗатрат,
	//	ДанныеСтроки.Продукция,
	//	ДанныеСтроки.СчетЗатрат, ДанныеСтроки.СчетЗатратНУ, ОформлениеСтроки, Истина, Истина, Истина);
	
КонецПроцедуры // СпособыПриВыводеСтроки()

// Процедура - обработчик события "ПриИзменении" поля СтатьяЗатрат списка справочника.
//
Процедура СпособыСтатьяЗатратПриИзменении(Элемент)
	//
	//СтрокаТабличнойЧасти = ЭлементыФормы.Способы.ТекущиеДанные;
	//ЗаполнитьСчетЗатратВСтрокеТабличногоПоля(СтрокаТабличнойЧасти, СтрокаТабличнойЧасти.ПодразделениеОрганизации, СтрокаТабличнойЧасти.СтатьяЗатрат, "СчетЗатрат", "СчетЗатратНУ");
	//Если СтрокаТабличнойЧасти.СтатьяЗатрат.ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы Тогда
	//	СтрокаТабличнойЧасти.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	//КонецЕсли;
	//ПриВыбореСчетаВТабличномПоле(СтрокаТабличнойЧасти.СчетЗатрат,
	//							 СтрокаТабличнойЧасти.Субконто1,
	//							 ЭлементыФормы.Способы.Колонки.Субконто1,
	//							 СтрокаТабличнойЧасти.Субконто2,
	//							 ЭлементыФормы.Способы.Колонки.Субконто2,
	//							 СтрокаТабличнойЧасти.Субконто3,
	//							 ЭлементыФормы.Способы.Колонки.Субконто3);

	//ЗаполнитьСчетНалоговогоУчета()

КонецПроцедуры // СпособыСтатьяЗатратПриИзменении()

Процедура СпособыПроектНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	//НачалоВыбораПроекта(ЭтаФорма, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры // СпособыПроектНачалоВыбора()

Процедура ПриОткрытии()
	
	УстановитьВидимость();
	
КонецПроцедуры

// Обработчик события "ПриНачалеРедактирования" строки табличной части
// "Способы".
//
Процедура СпособыПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	Если НоваяСтрока Тогда
		
		Элемент.ТекущиеДанные.Коэффициент  = 1;
		
	КонецЕсли;
	
КонецПроцедуры // СпособыПриНачалеРедактирования()
