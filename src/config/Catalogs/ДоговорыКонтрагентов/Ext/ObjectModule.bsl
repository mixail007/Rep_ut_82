////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 

// Функция проверяет, существуют ли ссылки на договор в движениях регистров накопления.
// Если есть - нельзя менять:
//  - Валюту взаиморасчетов
//  - Ведение взаиморасчетов.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Истина - если есть движения, Ложь - если нет.
//
Функция СуществуютСсылки() Экспорт

	Запрос = Новый Запрос();

	Запрос.УстановитьПараметр("ДоговорКонтрагента", Ссылка);

	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрСведений.УсловияПоставокПоДоговорамКонтрагентовОбщие.ДоговорКонтрагента
	|ГДЕ
	|	ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрСведений.УсловияПоставокПоДоговорамКонтрагентовПоНоменклатуре.ДоговорКонтрагента
	|ГДЕ
	|	ДоговорКонтрагента = &ДоговорКонтрагента
//+++ 01.04.2019 - выключен регистр	"РасчетыСКонтрагентами"
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ ПЕРВЫЕ 1
	//|	РегистрНакопления.РасчетыСКонтрагентами.ДоговорКонтрагента
	//|ГДЕ
	//|	ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента
	|ГДЕ
	|	ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрНакопления.ЗаказыПокупателей.ДоговорКонтрагента
	|ГДЕ
	|	ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрНакопления.ЗаказыПоставщикам.ДоговорКонтрагента
	|ГДЕ
	|	ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрНакопления.ПартииТоваровПереданные.ДоговорКонтрагента
	|ГДЕ
	|	ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрНакопления.ТоварыПереданные.ДоговорКонтрагента
	|ГДЕ
	|	ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрНакопления.ТоварыПолученные.ДоговорКонтрагента
	|ГДЕ
	|	ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрНакопления.Продажи.ДоговорКонтрагента
	|ГДЕ
	|	ДоговорКонтрагента = &ДоговорКонтрагента
	|";

	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции //  СуществуютСсылки()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура вызывается перед записью элемента справочника.
//
Процедура ПередЗаписью(Отказ)

	// Проверим можно ли изменять реквизиты договора.
	// Проверка осуществляется только если записывается уже существующий договор
	Если НЕ ОбменДанными.Загрузка И НЕ ЭтоНовый() Тогда
		
		Если ЭтоГруппа Тогда
			
			// Для группы владельца менять нельзя
			Если Владелец <> Ссылка.Владелец Тогда
				
				Сообщить("Нельзя изменять контрагента для группы договоров.", СтатусСообщения.Важное);
				Отказ = Истина;
				
			КонецЕсли; 
			
		Иначе
			
			//+++09.09.2016  ЕЩЕ РАЗ ПРОВЕРЯЕМ И ЗАПРЕЩАЕМ при ЛЮБОЙ записи! 
			#Если Клиент тогда
				//Если сокрЛП(ПараметрыСеанса.ТекущийПользователь.Код) <> "Красникова"
				Если НЕ ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "РазрешитьРаботуСБумажнымиДоговорами") 
					и НЕ ЭтоНовый()// при копировании (или новый) - можно ВСЁ! 
					тогда
					
					Если  (ЭтотОбъект.СостояниеДоговора <> ссылка.СостояниеДоговора)
						или  (ЭтотОбъект.ЕстьКопииПравоустанавливающихДокументов <> ссылка.ЕстьКопииПравоустанавливающихДокументов)
						или  (ЭтотОбъект.ЕстьДогорПоручительства <> ссылка.ЕстьДогорПоручительства)
						тогда 
						Предупреждение("Вам запрещено менять поля группы 'Контроль наличия основных документов'", 30);
						Отказ1 = Истина;
						возврат;
					КонецЕсли;	
					
				КонецЕсли;	
			#КонецЕсли
			
			
			// Проверим возможность смены владельца для договора
			Если Владелец <> Ссылка.Владелец Тогда
				
				Если КритерииОтбора.ДокументыПоДоговоруКонтрагента.Найти(Ссылка).Количество() > 0 Тогда
					
					Сообщить("Существуют документы, оформленные по договору """ + Наименование + """.
					|Контрагент договора не может быть изменен, элемент не записан.", 
					СтатусСообщения.Важное);
					Отказ = Истина;
					
				КонецЕсли; 
				
			КонецЕсли; 
			
			// Проверим возможность смены способа ведения взаиморасчетов и валюты взаиморасчетов
			Если ВедениеВзаиморасчетов <> Ссылка.ВедениеВзаиморасчетов
				ИЛИ ВалютаВзаиморасчетов <> Ссылка.ВалютаВзаиморасчетов 
				ИЛИ ВидДоговора <> Ссылка.ВидДоговора
				ИЛИ Организация <> Ссылка.Организация
				ИЛИ РасчетыВУсловныхЕдиницах <> Ссылка.РасчетыВУсловныхЕдиницах
				ИЛИ ВидУсловийДоговора <> Ссылка.ВидУсловийДоговора Тогда
				
				Если ЭтотОбъект.СуществуютСсылки() Тогда
					
					#Если Клиент тогда
						Сообщить("Существуют документы, проведенные по договору """ + Наименование + """.
						|Реквизиты ""Организация"", ""Ведение взаиморасчетов"", ""Валюта взаиморасчетов"", ""Вид договора"", ""Расчеты в условных единицах"" и ""Условия выполнения договора"" не могут быть изменены, элемент не записан!", 
						СтатусСообщения.Важное);
					#КонецЕсли
					
					Отказ = НЕ РольДоступна("ПравоЗавершенияРаботыПользователей"); //14.09.2016 только IT-отдел может делать Неправильно!
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	// Проверим заполнение и очистим неиспользуемые реквизиты элемента договора.
	Если Не ЭтоГруппа Тогда
		
		// Проверим, заполнена ли валюта.
		Если НЕ ОбменДанными.Загрузка И ЗначениеНеЗаполнено(ВалютаВзаиморасчетов) Тогда
			Сообщить("Не указана валюта договора.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		// Проверим, заполнена ли организация.
		Если НЕ ОбменДанными.Загрузка И ЗначениеНеЗаполнено(Организация) Тогда
			Сообщить("Не указана организация, от которой заключен договор.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		// Проверим, заполнен ли способ ведения взаиморасчетов.
		Если НЕ ОбменДанными.Загрузка И ЗначениеНеЗаполнено(ВедениеВзаиморасчетов) Тогда
			Сообщить("Не указан способ ведения взаиморасчетов по договору.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		// Проверим, назначен ли ответственный по  договору.
		Если НЕ ОбменДанными.Загрузка И ЗначениеНеЗаполнено(ОтветственноеЛицо) Тогда
			Сообщить("Не указано ответственное лицо по договору "+ Наименование +". Требуется назначить его.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		
		// Проверим, заполнен ли вид договора.
		Если НЕ ОбменДанными.Загрузка Тогда
			
			Если ЗначениеНеЗаполнено(ВидДоговора) Тогда
				Сообщить("Не указан вид договора.", СтатусСообщения.Важное);
				Отказ = Истина;
			Иначе
				// Проверим, правильно ли заполнен вид договора
				Если (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером)
					И НЕ Владелец.Покупатель Тогда
					Сообщить("Вид договора ""С покупателем"" может устанавливаться только когда у контрагента указано что он является покупателем.", СтатусСообщения.Важное);
					Отказ = Истина;
				ИначеЕсли (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом)
					И НЕ Владелец.Поставщик Тогда
					Сообщить("Вид договора ""С поставщиком"" может устанавливаться только когда у контрагента указано что он является поставщиком.", СтатусСообщения.Важное);
					Отказ = Истина;
				КонецЕсли; 
			КонецЕсли;
			
		КонецЕсли; 
		
		Если Не КонтролироватьСуммуЗадолженности Тогда
			ДопустимаяСуммаЗадолженности = 0;
		КонецЕсли;
		
		Если Не КонтролироватьЧислоДнейЗадолженности Тогда
			ДопустимоеЧислоДнейЗадолженности = 0;
		КонецЕсли;
		
		Если Не ДержатьРезервБезОплатыОграниченноеВремя Тогда
			ЧислоДнейРезерваБезОплаты = 0;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ОбменДанными.Загрузка Тогда
		#Если Клиент тогда
			ПроверитьПраваПередЗаписью(ЭтотОбъект, Отказ);
		#КонецЕсли	
	КонецЕсли;
	
	// нужно знать	дату создания договора, чтобы потом отделить неактуальные договоры
	Если ЭтоНовый() и (не ОбменДанными.Загрузка) и (не ЭтоГруппа) Тогда
		ДатаСозданияДоговора = ТекущаяДата();
	КонецЕсли;	
	
	Если НЕ Отказ Тогда
		
		обЗаписатьПротоколИзменений(ЭтотОбъект);
		
	КонецЕсли; 
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриКопировании(ОбъектКопирования)
	
//14.09.2016  НЕ чистим поля !!!	
//   а наоборот оставляем!

//11.01.2016 - автонумерация договоров - при копировании сохраняем привязку к бумажному договору!
// НЕ чистим только просроченные или договоры с пустым номером или датой
	//	Если (ДатаОкончанияДействия<текущаяДата() 
	//		 и ДатаОкончанияДействия>'20000101')
	//		 или (Номер = "")
	//		 или (Дата  = '00010101') тогда
	//	
	//	Номер = "";
	//	Дата = '00010101';
	//	ДатаОкончанияДействия = '00010101';
	//	
	//	СостояниеДоговора = справочники.СостояниеДокументов.ПустаяСсылка();//+++ и состояние тоже
	//	ЕстьКопииПравоустанавливающихДокументов = ложь;
	//	ЕстьДогорПоручительства = ложь;
	//КонецЕсли;	
	
//признак Копирования...
ДатаСозданияДоговора = ?(ОбъектКопирования.ДатаСозданияДоговора='00010101', ТекущаяДата(), ОбъектКопирования.ДатаСозданияДоговора);

КонецПроцедуры

