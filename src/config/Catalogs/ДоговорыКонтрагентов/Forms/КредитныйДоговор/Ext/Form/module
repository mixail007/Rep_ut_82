
Процедура КоманднаяПанель1ГрафикПлатежей(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	ЗаполнитьДанныеГрафикаПлатежей();
	
	Если кр_ДинамическаяСтавка Тогда
		ЭлементыФормы.Кр_ПроцентнаяСтавка.Видимость = Ложь;
		ЭлементыФормы.Панель.Страницы.ставка.Видимость = Истина;
		ЭлементыФормы.НадписьКр_ПроцентнаяСтавка.Видимость = Ложь
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьДанныеГрафикаПлатежей()
	
	Запрос = Новый Запрос("Выбрать Дата,Сумма,ВыплатаПоГрафику из РегистрСведений.КредитныеЛинии Где КредитныйДоговор=&ссылка и ВидДвижения=&Расход");
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Расход",Перечисления.ВидыДвиженийПриходРасход.Расход);
	
	ГрафикПлатежей = Запрос.Выполнить().Выгрузить();
	
	//////////////////////////////////////////////////////
	Запрос = Новый Запрос("Выбрать Дата,Сумма из РегистрСведений.КредитныеЛинии Где КредитныйДоговор=&ссылка и ВидДвижения=&Расход");
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Расход",Перечисления.ВидыДвиженийПриходРасход.Приход);
	
	ГрафикВзятий = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	// Вставить содержимое обработчика.
	НачатьТранзакцию();
	Попытка 
		//1. Очищаем 			
		ОтборКЛ = Новый Структура;
		ОтборКЛ.Вставить("КредитныйДоговор",Ссылка);
		
  		Выборка = РегистрыСведений.КредитныеЛинии.Выбрать(ОтборКЛ);
		
		
		Пока Выборка.Следующий() Цикл
			Если (Выборка.ВидДвижения = Перечисления.ВидыДвиженийПриходРасход.Расход) Тогда 
	    		МенеджерЗаписи = Выборка.ПолучитьМенеджерЗаписи();      
	    		МенеджерЗаписи.Прочитать();
	    		МенеджерЗаписи.Удалить();
			КонецЕсли;
		Конеццикла;  
		
		//2. Записываем из формы 
		Для каждого Стр из ГрафикПлатежей Цикл
				МенеджерЗаписи = РегистрыСведений.КредитныеЛинии.СоздатьМенеджерЗаписи();
				Если не ЗначениеЗаполнено(Стр.дата) Тогда 
					Сообщить("Не заполнена одна из дат в графике",СтатусСообщения.Важное);
					Отказ = истина;
					Возврат;
				КонецЕсли;
				
				Если (Стр.Сумма=0) Тогда 
					Сообщить("Не заполнена одна из сумм в графике",СтатусСообщения.Важное);
					Отказ = истина;
					Возврат;
				КонецЕсли;
				
				МенеджерЗаписи.ВидДвижения = Перечисления.ВидыДвиженийПриходРасход.Расход;
				МенеджерЗаписи.КредитныйДоговор = ссылка;
				МенеджерЗаписи.Дата = Стр.Дата;			
				МенеджерЗаписи.ВыплатаПоГрафику = Стр.ВыплатаПоГрафику;			
				МенеджерЗаписи.Сумма = Стр.Сумма;			
				МенеджерЗаписи.Записать();
		КонеЦЦикла;
		
		Для каждого Стр из ГрафикВзятий Цикл
				МенеджерЗаписи = РегистрыСведений.КредитныеЛинии.СоздатьМенеджерЗаписи();
				Если не ЗначениеЗаполнено(Стр.дата) Тогда 
					Сообщить("Не заполнена одна из дат в графике взятий",СтатусСообщения.Важное);
					Отказ = истина;
					Возврат;
				КонецЕсли;
				
				Если (Стр.Сумма=0) Тогда 
					Сообщить("Не заполнена одна из сумм в графике взятий",СтатусСообщения.Важное);
					Отказ = истина;
					Возврат;
				КонецЕсли;
				
				МенеджерЗаписи.ВидДвижения = Перечисления.ВидыДвиженийПриходРасход.Приход;
				МенеджерЗаписи.КредитныйДоговор = ссылка;
				МенеджерЗаписи.Дата = Стр.Дата;			
				МенеджерЗаписи.Сумма = Стр.Сумма;			
				МенеджерЗаписи.Записать();
		КонеЦЦикла;
		
	Исключение
		Отказ = истина;
		Сообщить("Не удалось записать график платежей.",СтатусСообщения.Важное);
		ОтменитьТранзакцию();
		Возврат;
	КонецПопытки;
	
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура КоманднаяПанель1ОбщийРасчетПоКредиту(Кнопка)
	// Вставить содержимое обработчика.
	
	// Расчет по кредиту состоит в том, чтобы определить, какие суммы надо выплачивать, в зависимости 
	// от его остатка, процентов и графика ! 
	// Суммы из графика - попадают безусловно. 
	
	ТД = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ВыплатыПоКредитам");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Тд.Вывести(Шапка);
	
	Строка = Макет.ПолучитьОбласть("Строка");
	
	КоличествоМесяцев = (Год(Кр_СрокКредитаПо) - Год(Кр_СрокКредитаС))*12;
	
	Если КоличествоМесяцев>0 Тогда 
		КоличествоМесяцев = КоличествоМесяцев + (12-Месяц(Кр_СрокКредитаС)) + Месяц(Кр_СрокКредитаПо);
	Иначе 	
		КоличествоМесяцев = Месяц(Кр_СрокКредитаПо) - Месяц(Кр_СрокКредитаС);		
	КонецЕсли;
	
	НачальнаяДата = Дата(Формат(Год(Кр_СрокКредитаС),"ЧГ=0") + Строка(Формат(Месяц(Кр_СрокКредитаС),"ЧЦ=2; ЧВН=")) + Строка(Формат(День(Кр_ДатаНачисленияПроцентов),"ЧЦ=2; ЧВН="))+ "000000");
	
	Остаток = 0;
	Для й=0 по КоличествоМесяцев-1 Цикл
		ТекДата = ДобавитьМесяц(НачальнаяДата,й);
		Остаток = ПолучитьОстатокПоКредиту(ТекДата,Ссылка);
		Начисление = Окр(Остаток*Кр_ПроцентнаяСтавка/100,2);
		
		Если(Начисление<>0) Тогда 
			Строка.Параметры.Дата = ТекДата;
			Строка.Параметры.Сумма = Начисление;
			Строка.Параметры.Информация = "Очередное начисление процентов";
			ТД.Вывести(строка);
		КонецЕсли;	
		
		ВыплатыПографику = НайтиВыплатыПоГрафику(НачалоМесяца(ТекДата),КонецМесяца(ТекДата),Ссылка);  
		
		Если (ВыплатыПографику.Количество()>0) Тогда 
			Для каждого Стр из ВыплатыПографику Цикл
				Строка.Параметры.Дата = Стр.Дата;
				Строка.Параметры.Сумма = Стр.Сумма;
				Строка.Параметры.Информация = "Выплаты по графику";
				ТД.Вывести(строка);			
			КонецЦикла;
		КонецЕсли;
		
		НачислениеЗаНевыборКредитнойЛинии = Окр((Кр_Лимит - Остаток)*Кр_ПроцентЗаЛимит/100,2);
		
		Если(НачислениеЗаНевыборКредитнойЛинии<>0) Тогда 
			Строка.Параметры.Дата = ТекДата;
			Строка.Параметры.Сумма = Начисление;
			Строка.Параметры.Информация = "Комиссия за лимит";
			ТД.Вывести(строка);
		КонецЕсли;	
		
	КонецЦикла;
	
	ТД.Показать();
КонецПроцедуры

Функция ПолучитьОстатокПоКредиту(ТекДата,Ссылка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПЗ.КредитныйДоговор,
	                      |	СУММА(ПЗ.Сумма) КАК Сумма
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		КредитныеЛинии.КредитныйДоговор КАК КредитныйДоговор,
	                      |		ВЫБОР
	                      |			КОГДА КредитныеЛинии.ВидДвижения = &Расход
	                      |				ТОГДА -КредитныеЛинии.Сумма
	                      |			ИНАЧЕ КредитныеЛинии.Сумма
	                      |		КОНЕЦ КАК Сумма
	                      |	ИЗ
	                      |		РегистрСведений.КредитныеЛинии КАК КредитныеЛинии
	                      |	ГДЕ
	                      |		КредитныеЛинии.КредитныйДоговор = &Ссылка и КредитныеЛинии.Дата <= &Дата) КАК ПЗ
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПЗ.КредитныйДоговор");
						  
	Запрос.УстановитьПараметр("Расход",Перечисления.ВидыДвиженийПриходРасход.Расход);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Дата",ТекДата);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если выб.Следующий() Тогда 
		Возврат Выб.сумма;
	КонецЕсли;
	
	Возврат 0;
КонецФункции

Функция НайтиВыплатыПоГрафику(НачДата,КонДата,Ссылка)
	
	ВыплатыПографику = Новый ТаблицаЗначений;
	ВыплатыПографику.Колонки.Добавить("Дата");
	ВыплатыПографику.Колонки.Добавить("Сумма");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |		КредитныеЛинии.Дата,
	                      |		Сумма
	                      |	ИЗ
	                      |		РегистрСведений.КредитныеЛинии КАК КредитныеЛинии
	                      |	ГДЕ
	                      |		КредитныеЛинии.ВидДвижения=&Расход и КредитныеЛинии.ВыплатаПоГрафику и КредитныеЛинии.КредитныйДоговор = &Ссылка и КредитныеЛинии.Дата между &ДатаНач и &ДатаКон");
						  
	Запрос.УстановитьПараметр("Расход",Перечисления.ВидыДвиженийПриходРасход.Расход);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ДатаНач",НачДата);
	Запрос.УстановитьПараметр("ДатаКон",КонДата);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если выб.Следующий() Тогда 
		Стр = ВыплатыПографику.Добавить();
		Стр.Дата = Выб.Дата;
		Стр.Сумма = Выб.Сумма;
	КонецЕсли;
	
	Возврат ВыплатыПографику;
	
КонецФункции

Процедура КоманднаяПанель1Действие4(Кнопка)
	Если Кр_ДатаНачисленияПроцентов <> дата(1,1,1) тогда
	ТД = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПроцентыПоКредитам");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Тд.Вывести(Шапка);
	
	ДатаНачисленияПроцентов = Дата(Строка(Формат(ТекущаяДата(),"ДФ=yyyyMM")) + Строка(Формат(Кр_ДатаНачисленияПроцентов,"ДФ=dd")) + "000000");
	
	Если НачалоДня(ТекущаяДата()) < ДатаНачисленияПроцентов Тогда	
		ДатаНачала = КонецДня(Дата(Строка(Формат(НачалоМесяца(ДатаНачисленияПроцентов)-1,"ДФ=yyyyMM")) + Строка(Формат(Кр_ДатаНачисленияПроцентов,"ДФ=dd")) + "000000"))+1;
		ДатаКонца = КонецДня(ДатаНачисленияПроцентов);
	ИначеЕсли НачалоДня(ТекущаяДата()) > ДатаНачисленияПроцентов Тогда
		ДатаНачала = КонецДня(Дата(Строка(Формат(ТекущаяДата(),"ДФ=yyyyMM")) + Строка(Формат(Кр_ДатаНачисленияПроцентов,"ДФ=dd")) + "000000"))+1;
		ДатаКонца = КонецДня(Дата(Строка(Формат(КонецМесяца(ДатаНачисленияПроцентов)+1,"ДФ=yyyyMM")) + Строка(Формат(Кр_ДатаНачисленияПроцентов,"ДФ=dd")) + "000000"));
	ИначеЕсли НачалоДня(ТекущаяДата()) = ДатаНачисленияПроцентов Тогда
		ДатаНачала = КонецДня(Дата(Строка(Формат(НачалоМесяца(ДатаНачисленияПроцентов)-1,"ДФ=yyyyMM")) + Строка(Формат(Кр_ДатаНачисленияПроцентов,"ДФ=dd")) + "000000"))+1;
		ДатаКонца = КонецДня(ТекущаяДата());
	КонецЕсли;
	
	Если Кр_СрокКредитаС <> Дата(1,1,1) Тогда	
	Если ДатаНачала < Кр_СрокКредитаС Тогда
		ДатаНачала = НачалоДня(Кр_СрокКредитаС);
	КонецЕсли;
	КонецЕсли;
	
	Если Кр_СрокКредитаПо <> Дата(1,1,1) Тогда
	Если ДатаКонца > Кр_СрокКредитаПо Тогда
		ДатаКонца = КонецДня(Кр_СрокКредитаПо);
	КонецЕсли;
	КонецЕсли;
	
	ТекДата = ДатаНачала;
	
	итогоПроцент = 0;
	итоголимит = 0;
	итогоПользование = 0;
	
	Пока ТекДата <> ДатаКонца +1 Цикл	
		Фильтр   = Новый Структура;
        Фильтр.Вставить("ДоговорКонтрагента",ЭтотОбъект.Ссылка);
        ТабОстатков = РегистрыНакопления.ВзаиморасчетыСКонтрагентами.Остатки(ТекДата,Фильтр,,"СуммаВзаиморасчетов");
		Если ТабОстатков.Количество() > 0 Тогда
			Остаток = ТабОстатков[0].СуммаВзаиморасчетов;
		Иначе
			Остаток = 0;
		КонецЕсли;
		
		ДнейВГоду = ДеньГода(КонецГода(ТекДата));
	
	    Строка = Макет.ПолучитьОбласть("Строка");
		
		Строка.Параметры.Дата = ТекДата;
		Строка.Параметры.СуммаДолга = Остаток;
		Строка.Параметры.ПроцентЗаКредит = Формат(Остаток/100*Кр_ПроцентнаяСтавка/ДнейВГоду,"ЧДЦ=2");
		строка.Параметры.ПроцентЗаЛимит = Формат(?(Кр_Лимит > 0,(Кр_Лимит+Остаток)/100*Кр_ПроцентЗаЛимит/ДнейВГоду,0),"ЧДЦ=2");
		Строка.Параметры.ПроцентЗаПользование = Формат(Остаток/100*Кр_ПроцентЗаПользование/ДнейВГоду,"ЧДЦ=2");
		итогоПроцент = итогоПроцент + Остаток/100*Кр_ПроцентнаяСтавка/ДнейВГоду;
	    итоголимит = итоголимит + ?(Кр_Лимит > 0,(Кр_Лимит+Остаток)/100*Кр_ПроцентЗаЛимит/ДнейВГоду,0);
		итогоПользование =  итогоПользование + Остаток/100*Кр_ПроцентЗаПользование/ДнейВГоду;
		Тд.Вывести(Строка);
		ТекДата = КонецДня(ТекДата) +1;
	КонецЦикла;
	
	Итого = Макет.ПолучитьОбласть("Итого");
	Итого.Параметры.итогоКредит = Формат(итогоПроцент,"ЧДЦ=2");
	Итого.Параметры.итогоЛимит = Формат(итоголимит,"ЧДЦ=2");
	Итого.Параметры.итогоПользование = Формат(итогоПользование,"ЧДЦ=2");
	
	Тд.Вывести(Итого);
	
	ТД.Показать();
    иначе
	Сообщить("Заполните дату начисления процентов!!!");
	КонецЕсли;

КонецПроцедуры

Процедура ДинамическаяПриИзменении(Элемент)
	Если Кр_ДинамическаяСтавка тогда
		ЭлементыФормы.Кр_ПроцентнаяСтавка.Видимость = Ложь;
		ЭлементыФормы.Панель.Страницы.ставка.Видимость = Истина;
		ЭлементыФормы.НадписьКр_ПроцентнаяСтавка.Видимость = Ложь
	иначе
		ЭлементыФормы.Кр_ПроцентнаяСтавка.Видимость = Истина;
		ЭлементыФормы.Панель.Страницы.ставка.Видимость = Ложь;
		ЭлементыФормы.НадписьКр_ПроцентнаяСтавка.Видимость = истина
	КонецЕсли;
КонецПроцедуры
