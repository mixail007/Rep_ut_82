
Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	
	ЭлементыФормы.СправочникДерево.ТекущаяСтрока = ЭлементыФормы.СправочникСписок.ТекущийРодитель;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	СправочникиОтборПомеченныхНаУдаление(СправочникСписок.Отбор, ЭлементыФормы.СправочникСписок);
	
	//+++Шарафутдмнов 01.03.2018
	СправочникиОтборПланируетОтветственный(СправочникСписок.Отбор, ЭлементыФормы.СправочникСписок,Истина);
	//---Шарафутдмнов 01.03.2018
	
КонецПроцедуры
	
//+++Шарафутдмнов 01.03.2018
Процедура СправочникиОтборПланируетОтветственный(Отбор, ЭлементСпискаФормы, Значение) Экспорт
	
	Если Константы.ИспользоватьОграниченияСписковВыбора.Получить() Тогда 		
		
		Если Отбор.Найти("ПланируетОтветственный") = Неопределено Тогда 
			Отбор.Добавить("ПланируетОтветственный");
		КонецЕсли;
		
		Отбор["ПланируетОтветственный"].Использование = Значение;
		Отбор["ПланируетОтветственный"].ВидСравнения = ВидСравнения.Равно;
		Отбор["ПланируетОтветственный"].Значение = истина;
		
		//ЭлементСпискаФормы.НастройкаОтбора["ПланируетОтветственный"].Доступность = Ложь;	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыПланируетОтветственный(Кнопка)
	
	СправочникиОтборПланируетОтветственный(СправочникСписок.Отбор, ЭлементыФормы.СправочникСписок,НЕ СправочникСписок.Отбор["ПланируетОтветственный"].Использование);
	ЭлементыФормы.ДействияФормы.Кнопки.ПланируетОтветственный.Пометка = не ЭлементыФормы.ДействияФормы.Кнопки.ПланируетОтветственный.Пометка;
	
КонецПроцедуры
//---Шарафутдмнов 01.03.2018

	

