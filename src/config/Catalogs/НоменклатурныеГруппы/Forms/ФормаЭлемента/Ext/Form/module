////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УстановитьДоступностьСостава()
	
	Если Ссылка.Пустая() Тогда
		СписокГруппы.Отбор.Код.Установить("");
	Иначе
		СписокГруппы.Отбор.Сбросить();
		СписокГруппы.Отбор.НоменклатурнаяГруппа.Установить(Ссылка);
	КонецЕсли;

КонецПроцедуры

// Процедура вызывает сервисный механизм для подбора номеклатуры в табличную часть.
//
// Параметры:
//  ТабличнаяЧасть - табличная часть, в которую осуществляется подбор.
//
Процедура ДействиеПодбор()

	СписокВидовПодбора = Новый СписокЗначений();
	СписокВидовПодбора.Добавить(, "По справочнику");

	СтруктураПараметровПодбора = Новый Структура();
	
	СтруктураПараметровПодбора.Вставить("Команда",             "");
	СтруктураПараметровПодбора.Вставить("СписокВидовПодбора" , СписокВидовПодбора);
	СтруктураПараметровПодбора.Вставить("Заголовок",           "Подбор номенклатуры в номенклатурную группу " + Наименование);
	СтруктураПараметровПодбора.Вставить("ЕстьКоличество",      Ложь);

	// Открываем форму подбора.
	ФормаПодбора = Обработки.ПодборНоменклатуры.ПолучитьФорму("ОсновнаяФорма", ЭтаФорма, ЭтаФорма);
	ФормаПодбора.мИспользоватьСерии                          = Ложь;
	ФормаПодбора.мИспользоватьХарактеристики                 = Ложь;
	ФормаПодбора.ОбработкаОбъект.СтруктураИсходныхПараметров = СтруктураПараметровПодбора;
	ФормаПодбора.Открыть();

КонецПроцедуры // ДействиеПодбор()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		БазоваяЕдиницаИзмерения = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяЕдиницаПоКлассификатору");
		СтавкаНДС               = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяСтавкаНДС");
	КонецЕсли;

	УстановитьДоступностьСостава();
	
	//***2016.04.04. заремлено, т.к. доступ разграничивается по настройке пользователя
	////+++ 06.04.2012 редактирование - не доступно
	//Если НЕ РольДоступна("ПолныеПрава") тогда
	//	ЭтаФорма.ТолькоПросмотр = истина;
	//КонецЕсли;
	
	Если РольДоступна("ПравоЗавершенияРаботыПользователей") тогда  // IT-отдел
		ЭлементыФормы.ВидТовара.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриЗаписи формы.
//
Процедура ПриЗаписи(Отказ)
	
	Если ЗначениеНеЗаполнено(БазоваяЕдиницаИзмерения) Тогда
		Предупреждение("Перед записью необходимо определить базовую единицу измерения!");
		Отказ = Истина;
	КонецЕсли;

	//ПроверитьЕдиницуХраненияОстатков(Отказ);

КонецПроцедуры // ПриЗаписи()

// Обработчик события ПослеЗаписи формы.
//
Процедура ПослеЗаписи()

	УстановитьДоступностьСостава();

КонецПроцедуры

// Обработчик события ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()

	ЭлементыФормы.ИнформационнаяНадписьБазовойЕдиницыИзмерения.Заголовок = БазоваяЕдиницаИзмерения.НаименованиеПолное;
	ЭлементыФормы.ИнформационнаяНадписьЕдиницыХраненияОстатков.Заголовок = ИнформацияОЕдиницеХраненияОстатков();
	
КонецПроцедуры // ОбновлениеОтображения()

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("Структура") Тогда
		
		ОбработкаПодбора(ЗначениеВыбора);
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()

Процедура ОбработкаПодбора(ЗначениеВыбора)

	ОбъектНоменклатуры = ЗначениеВыбора.Номенклатура.ПолучитьОбъект();
	
	Если ОбъектНоменклатуры.ЭтоГруппа Тогда
		
		Предупреждение("В состав номенклатурной группы могут включаться только элементы номенклатуры!");
		
	Иначе
		
		Если Не ЗначениеНеЗаполнено(ОбъектНоменклатуры.НоменклатурнаяГруппа) Тогда
			
			Если Вопрос("Выбранная номенклатура <" + ОбъектНоменклатуры + "> уже входит в группу <" + ОбъектНоменклатуры.НоменклатурнаяГруппа + ">. Включить в текущую номенклатурную группу?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
				
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОбъектНоменклатуры.НоменклатурнаяГруппа = Ссылка;
		ОбъектНоменклатуры.Записать();
		СписокГруппы.Обновить();
		
	КонецЕсли; 
	
КонецПроцедуры // ОбработкаПодбора()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РАБОТЫ СО СПИСКОМ ГРУППЫ

Процедура СписокГруппыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Перем ВыбЭлемент;
	
	Отказ = Истина;
	
	Если Копирование Тогда
		
		Предупреждение("Ввод новой записи копированием запрещен!");
		Возврат;
		
	КонецЕсли; 
	
	Если ЭтоНовый() Тогда
		
		Ответ = Вопрос("Элемент еще не записан. Записать?", РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			
			Если Не ЗаписатьВФорме() Тогда
				
			    Возврат;
				
			КонецЕсли;
			
		Иначе
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВвестиЗначение(ВыбЭлемент,,Тип("СправочникСсылка.Номенклатура")) Тогда
		
		ОбъектНоменклатуры = ВыбЭлемент.ПолучитьОбъект();
		
		Если ОбъектНоменклатуры.ЭтоГруппа Тогда
			
			Предупреждение("В состав номенклатурной группы могут включаться только элементы номенклатуры!");
			
		Иначе
			
			Если Не ЗначениеНеЗаполнено(ОбъектНоменклатуры.НоменклатурнаяГруппа) Тогда
				
				Если Вопрос("Выбранная номенклатура <" + ВыбЭлемент + "> уже входит в группу <" + ОбъектНоменклатуры.НоменклатурнаяГруппа + ">. Включить в текущую номенклатурную группу?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
					
					Возврат;
					
				КонецЕсли;
				
			КонецЕсли;
			
			ОбъектНоменклатуры.НоменклатурнаяГруппа = Ссылка;
			ОбъектНоменклатуры.Записать();
			СписокГруппы.Обновить();
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СписокГруппыПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Вес = 1;
		Элемент.ТекущиеДанные.НоменклатурнаяГруппа = Ссылка;
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокГруппыПередУстановкойПометкиУдаления(Элемент, Отказ)
	
	Отказ = Истина;
	
	ОбъектНоменклатуры = Элемент.ТекущиеДанные.Ссылка.ПолучитьОбъект();
	ОбъектНоменклатуры.НоменклатурнаяГруппа = Справочники.Номенклатура.ПустаяСсылка();
	ОбъектНоменклатуры.Записать();
	
	СписокГруппы.Обновить();
	
КонецПроцедуры

Процедура СписокГруппыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаЭлемента = ВыбраннаяСтрока.ПолучитьФорму("ФормаЭлемента", ЭтаФорма, ВыбраннаяСтрока);
	ФормаЭлемента.ЭлементыФормы.Панель.ТекущаяСтраница = ФормаЭлемента.ЭлементыФормы.Панель.Страницы.Дополнительные;
	ФормаЭлемента.ТекущийЭлемент = ФормаЭлемента.ЭлементыФормы.ВесовойКоэффициентВхождения;
	ФормаЭлемента.Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанельСписокГруппыДействиеПодбор(Кнопка)

	Если ЭтоНовый() Тогда

		Ответ = Вопрос("Элемент еще не записан. Записать?", РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда

			Если Не ЗаписатьВФорме() Тогда

				Возврат;
	
			КонецЕсли;

		Иначе

			Возврат;

		КонецЕсли;

	КонецЕсли;

	ДействиеПодбор();

КонецПроцедуры // КоманднаяПанельСписокГруппыДействиеПодбор()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РАБОТЫ С ЕДИНИЦАМИ ИЗМЕРЕНИЯ

Процедура ЕдиницаХраненияОстатковНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Отказ = НЕ ЗаписатьНовыйОбъектВФорме(ЭтаФорма);

КонецПроцедуры // ЕдиницаХраненияОстатковНачалоВыбора()

Функция ИнформацияОЕдиницеХраненияОстатков()

	Информация = "Единица хранения остатков "+СокрЛП(ЕдиницаХраненияОстатков);
	Возврат Информация;

КонецФункции // ИнформацияОЕдиницеХраненияОстатков()

// Процедура записывает единицу хранения остатков номенклатуры.
//
Процедура ПроверитьЕдиницуХраненияОстатков(Отказ)

	Если НЕ ЗначениеНеЗаполнено(ЕдиницаХраненияОстатков) Тогда
		Возврат;
	КонецЕсли; 

	ВыборкаЕдиниц = Справочники.ЕдиницыИзмерения.Выбрать(, Ссылка);
	Если ВыборкаЕдиниц.Следующий() Тогда
		НайденнаяЕдиница = ВыборкаЕдиниц.Ссылка;
	Иначе
		НайденнаяЕдиницаОбъект = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();

		НайденнаяЕдиницаОбъект.Наименование            = БазоваяЕдиницаИзмерения.Наименование;
		НайденнаяЕдиницаОбъект.ЕдиницаПоКлассификатору = БазоваяЕдиницаИзмерения;
		НайденнаяЕдиницаОбъект.Коэффициент             = 1;
		НайденнаяЕдиницаОбъект.Владелец                = Ссылка;

		Попытка
			НайденнаяЕдиницаОбъект.Записать();
		Исключение
			Сообщить("Не удалось записать единицу хранения остатков: " + ОписаниеОшибки(), СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат;
		КонецПопытки;
		
		НайденнаяЕдиница = НайденнаяЕдиницаОбъект.Ссылка;
		
	КонецЕсли;
	
	ЕдиницаХраненияОстатков = НайденнаяЕдиница;
	ЗаписатьВФорме();

КонецПроцедуры // ПроверитьЕдиницуХраненияОстатков()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ПЕРЕТАСКИВАНИЕ НОМЕНКЛАТУРЫ

// Процедура - обработчик события "ПроверкаПеретаскивания" табличной части "СписокГруппы".
//
Процедура СписокГруппыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)

	Если ЭтоПеретаскиваниеИзПодбора(ПараметрыПеретаскивания) Тогда
		ПроверкаПеретаскиванияИзПодбора(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Ссылка, "");
	Иначе
		ПеретаскиваниеОтменить(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "Перетаскивание" табличной части "СписокГруппы".
//
Процедура СписокГруппыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)

	Если ЭтоПеретаскиваниеИзПодбора(ПараметрыПеретаскивания) Тогда
		ПеретаскиваниеИзПодбора(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);
	Иначе
		ПеретаскиваниеОтменить(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если не(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"РазрешитьРедактироватьНоменклатурныеГруппы")) Тогда
		Предупреждение("Вы не имеете право на изменение номенклатурных групп.");
		Отказ = истина;
	КонецЕсли;
	
КонецПроцедуры
