////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если РежимВыбора И ЗначениеНеЗаполнено(ПараметрВыборПоВладельцу) Тогда
		ФормаВыбораВладельца = Справочники.Номенклатура.ПолучитьФормуВыбора();
		ФормаВыбораВладельца.Заголовок = "Выберите элемент справочника Номенклатура, Характеристики которого Вы хотите выбирать.";
		ПараметрВыборПоВладельцу = ФормаВыбораВладельца.ОткрытьМодально();
	КонецЕсли;
	
	Если НЕ ЗначениеНеЗаполнено(ПараметрВыборПоВладельцу) И НЕ ПараметрВыборПоВладельцу.ЭтоГруппа Тогда
		Если НЕ ПараметрВыборПоВладельцу.ВестиУчетПоХарактеристикам Тогда
			Если НЕ ПараметрВыборПоВладельцу.ВестиУчетПоХарактеристикам Тогда
				Предупреждение("Для номенклатуры """ + ПараметрВыборПоВладельцу + """ не ведется учет по характеристикам!");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Предупреждение("Не выбрана номенклатура!");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	ЭтаФорма.Заголовок = "Выбор характеристики: " + ПараметрВыборПоВладельцу;

	// Настраивается отбор свойств.
	ОбработкаОбъектЗначенияСвойств.НазначениеСвойств      = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры;
	ОбработкаОбъектЗначенияСвойств.ОбъектОтбораНазначений = ПараметрВыборПоВладельцу;

	// Перечитвываются свойства.
	ОбработкаОбъектЗначенияСвойств.ПрочитатьЗаполнитьСвойстваИЗначения();

	// Заполняется список характеристик.
	ОбновитьСписокХарактеристик();

КонецПроцедуры

// Обработчик события ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()

	Если ЭлементыФормы.Характеристики.ТекущаяСтрока <> Неопределено Тогда
		ЗаголовокКнопки = "Выбрать";
	Иначе
		ЗаголовокКнопки = "Ввести";
	КонецЕсли;

	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаВыбратьВвестиХарактеристику.Текст = ЗаголовокКнопки;

КонецПроцедуры

// Обработчик события ОбработкаЗаписиНовогоОбъекта формы.
//
Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)

	Если ТипЗнч(Объект) = Тип("ПланВидовХарактеристикОбъект.СвойстваОбъектов") Тогда
		ОбработкаОбъектЗначенияСвойств.ПроверитьДобавитьНовоеСвойство(Объект.Ссылка, ЭлементыФормы.СвойстваИЗначения);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ СВОЙСТВ И ЗНАЧЕНИЙ

// Обработчик события ДействиеПеречитать элемента КоманднаяПанель.СвойстваИЗначения.
//
Процедура КоманднаяПанельСвойстваИЗначенияДействиеПеречитать(Кнопка)

	// Перечитвываются свойства.
	ОбработкаОбъектЗначенияСвойств.ПрочитатьЗаполнитьСвойстваИЗначения();

	// Обновляется список характеристик.
	ОбновитьСписокХарактеристик();

КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента СвойстваИЗначения.
//
Процедура СвойстваИЗначенияПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;

	ОбработкаОбъектЗначенияСвойств.ОткрытьФормуНовогоСвойства(ЭтаФорма);

КонецПроцедуры

// Обработчик события ПередУдалением элемента СвойстваИЗначения.
//
Процедура СвойстваИЗначенияПередУдалением(Элемент, Отказ)

	Отказ = Истина;

	ОбработкаОбъектЗначенияСвойств.ИнвертироватьПометкуУдаленияСвойства(Элемент.ТекущиеДанные);

КонецПроцедуры

// Обработчик события ПриНачалеРедактирования элемента СвойстваИЗначения.
//
Процедура СвойстваИЗначенияПриНачалеРедактирования(Элемент, НоваяСтрока)

	ОбработкаОбъектЗначенияСвойств.ПривестиТипЗначенияСвойства(Элемент.ТекущиеДанные);

КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента СвойстваИЗначения.
//
Процедура СвойстваИЗначенияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если Элемент.Колонки.ПометкаУдаления.Видимость Тогда
		ОформлениеСтроки.Ячейки.ПометкаУдаления.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.ПометкаУдаления.ИндексКартинки     = Число(ДанныеСтроки.ПометкаУдаления);
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриОкончанииРедактирования элемента СвойстваИЗначения.
//
Процедура СвойстваИЗначенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ОбновитьСписокХарактеристик();

КонецПроцедуры

// Обработчик события Очистка элемента СвойстваИЗначения.Значение.
//
Процедура СвойстваИЗначенияЗначениеОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ЭлементыФормы.СвойстваИЗначения.ТекущиеДанные.Значение = Неопределено;

	ОбработкаОбъектЗначенияСвойств.ПривестиТипЗначенияСвойства(ЭлементыФормы.СвойстваИЗначения.ТекущиеДанные);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ХАРАКТЕРИСТИК

// Обработчик события ДействиеОбновить элемента КоманднаяПанель.Характеристики.
//
Процедура КоманднаяПанельХарактеристикиДействиеОбновить(Кнопка)

	ОбновитьСписокХарактеристик();

КонецПроцедуры

// Обработчик события ДействиеВыбрать элемента КоманднаяПанель.Характеристики.
//
Процедура КоманднаяПанельХарактеристикиДействиеВыбрать(Кнопка)

	Если ЭлементыФормы.Характеристики.ТекущаяСтрока <> Неопределено Тогда
		ОповеститьОВыборе(ЭлементыФормы.Характеристики.ТекущаяСтрока.Характеристика);
	КонецЕсли;

КонецПроцедуры

// Обработчик события Выбор элемента Характеристики.
//
Процедура ХарактеристикиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если МножественныйВыбор И ТипЗнч(ВыбраннаяСтрока) = Тип("Массив") И ВыбраннаяСтрока.Количество() > 0 Тогда
		ОповеститьОВыборе(ВыбраннаяСтрока[0].Характеристика);
	Иначе
		ОповеститьОВыборе(ВыбраннаяСтрока.Характеристика);
	КонецЕсли; 

КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента Характеристики.
//
Процедура ХарактеристикиПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;

	ВвестиНовуюХарактеристику();

КонецПроцедуры

// Обработчик события ПередУдалением элемента Характеристики.
//
Процедура ХарактеристикиПередУдалением(Элемент, Отказ)

	Отказ = Истина;

	ОбъектХарактеристика = Элемент.ТекущаяСтрока.Характеристика.ПолучитьОбъект();

	Попытка
		ОбъектХарактеристика.УстановитьПометкуУдаления(НЕ Элемент.ТекущаяСтрока.ПометкаУдаления, Истина);
	Исключение
		Предупреждение("Не удалось изменить пометку удаления характеристики:
		               |" + ОписаниеОшибки());
		Возврат;
	КонецПопытки;

	Элемент.ТекущаяСтрока.ПометкаУдаления = ОбъектХарактеристика.ПометкаУдаления;

КонецПроцедуры

// Обработчик события Нажатие элемента КнопкаВыбратьВвестиХарактеристику.
//
Процедура ОсновныеДействияФормыКнопкаВыбратьВвестиХарактеристику(Кнопка)

	ЗаголовокКнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаВыбратьВвестиХарактеристику.Текст;

	Если ЗаголовокКнопки = "Выбрать" Тогда
		Если ЭлементыФормы.Характеристики.ТекущаяСтрока <> Неопределено Тогда
			ОповеститьОВыборе(ЭлементыФормы.Характеристики.ТекущаяСтрока.Характеристика);
		Иначе
			Предупреждение("Не выбрана характеристика номенклатуры!");
		КонецЕсли;

	ИначеЕсли ЗаголовокКнопки = "Ввести" Тогда 
		ВвестиНовуюХарактеристику();

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

// Обновляет список отобранных характеристик.
//
// Параметры:
//  Нет.
//
Процедура ОбновитьСписокХарактеристик()

	// Запоминается ранее выбранная характеристика.
	Если ЭлементыФормы.Характеристики.ТекущаяСтрока <> Неопределено Тогда
		ТекущаяХарактеристика = ЭлементыФормы.Характеристики.ТекущаяСтрока.Характеристика;
	Иначе
		ТекущаяХарактеристика = НачальноеЗначениеВыбора;
	КонецЕсли;

    // Отбираются характеристики в соответствии с фильтром.
	ОтобратьХарактеристики();

    // Ранее выбранная характеристика устанавливается в качестве текущей.
	ТекущаяСтрока = Характеристики.Найти(ТекущаяХарактеристика, "Характеристика");
	
	Если ТекущаяСтрока <> Неопределено Тогда
		ЭлементыФормы.Характеристики.ТекущаяСтрока = ТекущаяСтрока;
	ИначеЕсли Характеристики.Количество() > 0 Тогда
		ЭлементыФормы.Характеристики.ТекущаяСтрока = Характеристики[0];
	КонецЕсли;

КонецПроцедуры

// Отбирает характеристики в соответствии с установленными значениями свойств.
//
// Параметры:
//  Нет.
//
Процедура ОтобратьХарактеристики()

	Запрос = Новый Запрос();

	Запрос.УстановитьПараметр("ВладелецХарактеристики", ПараметрВыборПоВладельцу);

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.ПометкаУдаления                  КАК ПометкаУдаления,
	|	ХарактеристикиНоменклатуры.Характеристика                   КАК Характеристика
	|
	|ИЗ
	|	(
	|	ВЫБРАТЬ 
	|		Справочник.ХарактеристикиНоменклатуры.ПометкаУдаления   КАК ПометкаУдаления,
	|		Справочник.ХарактеристикиНоменклатуры.Ссылка            КАК Характеристика
	|
	|	ИЗ
	|		Справочник.ХарактеристикиНоменклатуры
	|
	|	ГДЕ
	|		Справочник.ХарактеристикиНоменклатуры.Владелец = &ВладелецХарактеристики
	|
	|	)                                                           КАК ХарактеристикиНоменклатуры
	|";

	Для каждого Строка Из ОбработкаОбъектЗначенияСвойств.СвойстваИЗначения Цикл
		Если НЕ ЗначениеНеЗаполнено(Строка.Значение) Тогда
			Индекс = ОбработкаОбъектЗначенияСвойств.СвойстваИЗначения.Индекс(Строка);

			Запрос.УстановитьПараметр("Свойство" + Индекс, Строка.Свойство);
			Запрос.УстановитьПараметр("Значение" + Индекс, Строка.Значение);

			Запрос.Текст = Запрос.Текст + "
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|	РегистрСведений.ЗначенияСвойствОбъектов             КАК ЗначенияСвойствОбъектов" + Индекс + "
			|
			|ПО
			|	ЗначенияСвойствОбъектов" + Индекс + ".Объект = ХарактеристикиНоменклатуры.Характеристика
			|	И
			|	ЗначенияСвойствОбъектов" + Индекс + ".Свойство = &Свойство" + Индекс +"
			|	И
			|	ЗначенияСвойствОбъектов" + Индекс + ".Значение = &Значение" + Индекс +"
			|";
		КонецЕсли;
	КонецЦикла;

	Характеристики = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

// Вводит новую характеристику в соответствии с установленными значениями свойств.
//
// Параметры:
//  Нет.
//
Процедура ВвестиНовуюХарактеристику()

	СправочникОбъектХарактеристика = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();

	СправочникОбъектХарактеристика.Владелец     = ПараметрВыборПоВладельцу;
	СправочникОбъектХарактеристика.Наименование = СправочникОбъектХарактеристика.СформироватьНаименование(ОбработкаОбъектЗначенияСвойств.СвойстваИЗначения);

	НачатьТранзакцию();

	Попытка
		СправочникОбъектХарактеристика.Записать();
		
	Исключение
		Предупреждение("Не удалось записать характеристику:
		               |" + ОписаниеОшибки());
		Возврат;
	КонецПопытки;

	НаборЗаписейЗначенияСвойств = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();

	НаборЗаписейЗначенияСвойств.Отбор.Объект.Установить(СправочникОбъектХарактеристика.Ссылка);

	Для каждого Строка Из ОбработкаОбъектЗначенияСвойств.СвойстваИЗначения Цикл
		Если НЕ ЗначениеНеЗаполнено(Строка.Значение) Тогда
			Запись = НаборЗаписейЗначенияСвойств.Добавить();
			
			Запись.Объект   = СправочникОбъектХарактеристика.Ссылка;
			Запись.Свойство = Строка.Свойство;
			Запись.Значение = Строка.Значение;
		КонецЕсли;
	КонецЦикла;

	// Запись набора записей.
	Попытка
		НаборЗаписейЗначенияСвойств.Записать();
	Исключение
		Предупреждение("Не удалось записать значения свойств характеристики:
		               |" + ОписаниеОшибки());
		Возврат;
	КонецПопытки;

	ЗафиксироватьТранзакцию();

	НоваяСтрока = Характеристики.Добавить();

	НоваяСтрока.ПометкаУдаления = Ложь;
	НоваяСтрока.Характеристика  = СправочникОбъектХарактеристика.Ссылка;

	ЭлементыФормы.Характеристики.ТекущаяСтрока = НоваяСтрока;

КонецПроцедуры

