////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мФормироватьНаименованиеАвтоматически; // надо ли формировать автоматически наименование серии, или нет

Перем мТекущееОсновноеИзображение;
Перем мПустаяКартинка;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура устанавливает в поле картинки основное изображение
//
Процедура ПоказатьОсновноеИзображение() Экспорт

	Если мТекущееОсновноеИзображение = Неопределено Тогда
		ЭлементыФормы.ОсновноеИзображение.Картинка = мПустаяКартинка;
	Иначе
		ЭлементыФормы.ОсновноеИзображение.Картинка = мТекущееОсновноеИзображение;
	КонецЕсли;

КонецПроцедуры // ПоказатьОсновноеИзображение()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриИзмененииДанных формы.
//
Процедура ПриИзмененииДанных()

	УстановитьФлагФормироватьНаименованиеАвтоматически();

КонецПроцедуры // ПриИзмененииДанных()

// Процедура - обработчик события "ПередОткрытием" формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ЭтоНовый() Тогда

		ЗаполнитьГТДИСтрануИзВладельца(Истина)

	КонецЕсли;

КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	СписокКнопокФайлов = Новый СписокЗначений;
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
	ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
	
	мТекущееОсновноеИзображение = ОсновноеИзображение.Хранилище.Получить();
	ПоказатьОсновноеИзображение();

	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	

// Процедура - обработчик события "ОбработкаОповещения" формы
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ОбновитьФорму" и (Источник = Ссылка или (ТипЗнч(Источник) = Тип("СправочникСсылка.СерииНоменклатуры") и Источник.Пустая())) Тогда

		ИмяОбновляемогоЭлемента = Параметр.ИмяЭлемента;

		Если ИмяОбновляемогоЭлемента = "ОсновноеИзображение" Тогда

			// обновляем картинку на первой странице
			Если мТекущееОсновноеИзображение <> ОсновноеИзображение.Хранилище.Получить() Тогда
				мТекущееОсновноеИзображение = ОсновноеИзображение.Хранилище.Получить();
				ПоказатьОсновноеИзображение();
			КонецЕсли;

		ИначеЕсли ИмяОбновляемогоЭлемента = "ИзмененСписокСправочникаХранилищеДопИнформации" Тогда

			СписокКнопокФайлов = Новый СписокЗначений;
			СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
			СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
			ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // ОбработкаОповещения()

// Процедура - обработчик смены владельца
//
Процедура ВладелецПриИзменении(Элемент)

	ЗаполнитьГТДИСтрануИзВладельца()

КонецПроцедуры // ВладелецПриИзменении()

// Обработчик события элемента КоманднаяПанельФормы.Файлы.
//
Процедура ДействияФормыФайлы(Кнопка)

	Если ЭтоНовый() Тогда
		Предупреждение("Необходимо записать элемент серии!");
		Возврат;
	КонецЕсли;

	СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", Ссылка);

	ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.ХранилищеДополнительнойИнформации") Тогда
		
		Если НЕ ОсновноеИзображение = ЗначениеВыбора Тогда
			ОсновноеИзображение = ЗначениеВыбора;
		КонецЕсли;
		
		мТекущееОсновноеИзображение = ОсновноеИзображение.Хранилище.Получить();
		ПоказатьОсновноеИзображение();
		
		СписокКнопокФайлов = Новый СписокЗначений;
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
		ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Обработчик события ПриИзменении элемента Наименование.
//
Процедура НаименованиеПриИзменении(Элемент)

	УстановитьФлагФормироватьНаименованиеАвтоматически();

КонецПроцедуры // НаименованиеПриИзменении()

// Обработчик события НачалоВыбораИзСписка элемента Наименование.
//
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	// Формирование списка выбора.

	Список = Новый СписокЗначений();

	Список.Добавить(СформироватьНаименование());

	// Выбор из списка и обработка выбора.

	РезультатВыбора = ВыбратьИзСписка(Список, ЭлементыФормы.Наименование);

	Если РезультатВыбора <> Неопределено Тогда

		Наименование     = РезультатВыбора.Значение;
		мФормироватьНаименованиеАвтоматически = Истина;

	КонецЕсли;

КонецПроцедуры // НаименованиеНачалоВыбораИзСписка()

// Обработчик события ПриИзменении элемента СерийныйНомер.
//
Процедура СерийныйНомерПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СерийныйНомерПриИзменении()

// Обработчик события ПриИзменении элемента Сертификат.
//
Процедура СертификатПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СертификатПриИзменении()

// Обработчик события ПриИзменении элемента СрокГодности.
//
Процедура СрокГодностиПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СрокГодностиПриИзменении()

// Обработчик события ПриИзменении элемента НомерГТД.
//
Процедура НомерГТДПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // НомерГТДПриИзменении()

// Обработчик события ПриИзменении элемента СтранаПроисхождения.
//
Процедура СтранаПроисхожденияПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СтранаПроисхожденияПриИзменении()

// Процедура - обработчик события Нажатие картинки ОсновноеИзображение
//
Процедура ОсновноеИзображениеНажатие(Элемент)
	
	Если ЭтоНовый() Тогда
		Предупреждение("Необходимо записать элемент серии!");
		Возврат;
	КонецЕсли;

	ОткрытьФормуИзображения(ЭтаФорма, ОсновноеИзображение, Ссылка);
	
КонецПроцедуры // ОсновноеИзображениеНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ

// Процедура проверяет, было ли наименование серии ранее сформировано автоматически или нет,
// и присваивает соответствующее значение переменной мФормироватьНаименованиеАвтоматически.
//
// Параметры:
//  Нет.
//
Процедура УстановитьФлагФормироватьНаименованиеАвтоматически()

	Если ПустаяСтрока(Наименование) 
	 ИЛИ Наименование = СформироватьНаименование() Тогда

		мФормироватьНаименованиеАвтоматически = Истина;
	Иначе
		мФормироватьНаименованиеАвтоматически = Ложь;
	КонецЕсли;

КонецПроцедуры // УстановитьФлагФормироватьНаименованиеАвтоматически()

// Процедура проверяет, необходимо ли формировать наименование серии автоматически или нет,
// и, если необходимо, формирует его.
//
// Параметры:
//  Нет.
//
Процедура СформироватьНаименованиеАвтоматически()

	Если мФормироватьНаименованиеАвтоматически Тогда
		Наименование = СформироватьНаименование();
	КонецЕсли;

КонецПроцедуры // СформироватьНаименованиеАвтоматически()

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет номер ГТД и страну происхождения из элемента-владельца
//
Процедура ЗаполнитьГТДИСтрануИзВладельца(ТолькоНезаполненные = Ложь)

	Если ТолькоНезаполненные Тогда
		СтранаПроисхождения = ?(ЗначениеНеЗаполнено(СтранаПроисхождения), Владелец.СтранаПроисхождения, СтранаПроисхождения);
		НомерГТД = ?(ЗначениеНеЗаполнено(НомерГТД), Владелец.НомерГТД, НомерГТД);
	Иначе
		СтранаПроисхождения = Владелец.СтранаПроисхождения;
		НомерГТД = Владелец.НомерГТД;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьГТДИСтрануИзВладельца()

Процедура Кнопка1Нажатие(Элемент)
	Закрыть();
	ФормаСписка = Справочники.СерииНоменклатуры.ПолучитьФормуВыбора(, ВладелецФормы);
	ФормаСписка.ПараметрВыборПоВладельцу     = Владелец.Ссылка;
	ФормаСписка.ПараметрОтборПоВладельцу     = Владелец.Ссылка;
	ФормаСписка.РежимВыбора = Истина;
	ФормаСписка.ОткрытьМодально();
КонецПроцедуры

Процедура ПослеЗаписи(Отказ)
	Если ТипЗнч(ВладелецФормы) = Тип("ПолеВвода") Тогда
		ОповеститьОВыборе(Ссылка);
	КонецЕсли;
КонецПроцедуры


мПустаяКартинка = Новый Картинка;
