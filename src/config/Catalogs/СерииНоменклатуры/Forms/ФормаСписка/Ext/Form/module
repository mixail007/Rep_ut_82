////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мФормироватьНаименованиеАвтоматически; // надо ли формировать автоматически наименование серии, или нет

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если НЕ ЗначениеНеЗаполнено(ПараметрОтборПоВладельцу) Тогда

		Если НЕ ПараметрОтборПоВладельцу.ВестиУчетПоСериям Тогда

			Если ТипЗнч(ВладелецФормы) = Тип("Форма") Тогда
				Если ВладелецФормы.ЭлементыФормы.Найти("ФлажокВестиУчетПоСериям") <> Неопределено Тогда
					Если ВладелецФормы.ЭлементыФормы.ФлажокВестиУчетПоСериям.Значение Тогда
						ОтветПользователя = Вопрос("Перед работой с сериями необходимо записать элемент номенклатуры. Записать?",
						РежимДиалогаВопрос.ДаНетОтмена,,, "Вопрос");
						Если ОтветПользователя = КодВозвратаДиалога.Отмена 
							ИЛИ ОтветПользователя = КодВозвратаДиалога.Таймаут Тогда
							Отказ = Истина;
							Возврат;
						КонецЕсли;

						Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
							Попытка
								ВладелецФормы.СправочникОбъект.Записать();
							Исключение
							КонецПопытки;
						КонецЕсли;

					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			Если НЕ ПараметрОтборПоВладельцу.ВестиУчетПоСериям Тогда
				Предупреждение("Для номенклатуры """ + ПараметрОтборПоВладельцу + """ не ведется учет по сериям!");
				Отказ = Истина;
			КонецЕсли;

		КонецЕсли;

	Иначе
		Предупреждение("Не выбрана номенклатура или не записан редактируемый элемент номенклатуры!");
		Отказ = Истина;

	КонецЕсли;

КонецПроцедуры


// Процедура - обработчик события нажатие по кнопке Файлы командной панели ДействияФормы.
//
Процедура ДействияФормыФайлы(Кнопка)
	
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;

	СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка);

	ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Обработчик события ПриНачалеРедактирования элемента СправочникСписок.
//
Процедура СправочникСписокПриНачалеРедактирования(Элемент, НоваяСтрока)

	УстановитьФлагФормироватьНаименованиеАвтоматически();

КонецПроцедуры // СправочникСписокПриНачалеРедактирования()

// Обработчик события ПриИзменении элемента СправочникСписок.Наименование.
//
Процедура СправочникСписокНаименованиеПриИзменении(Элемент)

	УстановитьФлагФормироватьНаименованиеАвтоматически();

КонецПроцедуры // СправочникСписокНаименованиеПриИзменении()

// Обработчик события НачалоВыбораИзСписка элемента СправочникСписок.Наименование.
//
Процедура СправочникСписокНаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	// Формирование списка выбора.

	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;

	Список = Новый СписокЗначений();

	Список.Добавить(ТекущиеДанные.СформироватьНаименование());

	// Выбор из списка и обработка выбора.

	РезультатВыбора = ВыбратьИзСписка(Список, ЭлементыФормы.Список);

	Если РезультатВыбора <> Неопределено Тогда
		Элемент.Значение           = РезультатВыбора.Значение;
		ТекущиеДанные.Наименование = РезультатВыбора.Значение;

		мФормироватьНаименованиеАвтоматически = Истина;
	КонецЕсли;

КонецПроцедуры // СправочникСписокНаименованиеНачалоВыбораИзСписка()

// Обработчик события ПриИзменении элемента СправочникСписок.СерийныйНомер.
//
Процедура СправочникСписокСерийныйНомерПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СправочникСписокСерийныйНомерПриИзменении()

// Обработчик события ПриИзменении элемента СправочникСписок.Сертификат.
//
Процедура СправочникСписокСертификатПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СправочникСписокСертификатПриИзменении()

// Обработчик события ПриИзменении элемента СправочникСписок.СрокГодности.
//
Процедура СправочникСписокСрокГодностиПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СправочникСписокСрокГодностиПриИзменении()

// Обработчик события ПриИзменении элемента СправочникСписок.НомерГТД.
//
Процедура СправочникСписокНомерГТДПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СправочникСписокСрокГодностиПриИзменении()

// Обработчик события ПриИзменении элемента СправочникСписок.СтранаПроисхождения.
//
Процедура СправочникСписокСтранаПроисхожденияПриИзменении(Элемент)

	СформироватьНаименованиеАвтоматически();

КонецПроцедуры // СправочникСписокСрокГодностиПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ

// Процедура проверяет, было ли наименование серии ранее сформировано автоматически или нет,
// и присваивает соответствующее значение переменной мФормироватьНаименованиеАвтоматически.
//
// Параметры:
//  Нет.
//
Процедура УстановитьФлагФормироватьНаименованиеАвтоматически()

	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;

	Если ПустаяСтрока(ТекущиеДанные.Наименование) 
	 ИЛИ ТекущиеДанные.Наименование = ТекущиеДанные.СформироватьНаименование() Тогда

		мФормироватьНаименованиеАвтоматически = Истина;
	Иначе
		мФормироватьНаименованиеАвтоматически = Ложь;
	КонецЕсли;

КонецПроцедуры // УстановитьФлагФормироватьНаименованиеАвтоматически()

// Процедура проверяет, необходимо ли формировать наименование серии автоматически или нет,
// и, если необходимо, формирует его.
//
// Параметры:
//  Нет.
//
Процедура СформироватьНаименованиеАвтоматически()

	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;

	Если мФормироватьНаименованиеАвтоматически Тогда
		ТекущиеДанные.Наименование = ТекущиеДанные.СформироватьНаименование();
	КонецЕсли;

КонецПроцедуры // СформироватьНаименованиеАвтоматически()

Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

