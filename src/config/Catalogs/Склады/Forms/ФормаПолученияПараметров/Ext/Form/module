
Функция РеквизитыЗаполнены()
	
	ВсеОК = Истина;
	
	Если ПустаяСтрока(ЭлементыФормы.Наименование.Значение) Тогда
		ВсеОК = Ложь;
		Сообщить("Укажите Наименование!", СтатусСообщения.Внимание);
	ИначеЕсли не Подразделение.Пустая() и ЭлементыФормы.ГруппаСкладов.Значение.Пустая() Тогда
		ВсеОК = Ложь;
		Сообщить("Укажите Группу Складов (для рапределения по грузчикам)!", СтатусСообщения.Внимание);
	КонецЕсли;
	
	Возврат ВсеОК;
	
КонецФункции // РеквизитыЗаполнены()

Процедура ОсновныеДействияФормыОтправитьНаСогласование(Кнопка)
	
	Если РеквизитыЗаполнены() Тогда
		СоздатьЗадачуДляСогласования();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыДействиеОтказ(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура СоздатьЗадачуДляСогласования()
	
	Структ = Новый Структура();
	
	НаименованиеСклада = ЭлементыФормы.Наименование.Значение;
	
	Структ.Вставить("Родитель"              , ЭлементыФормы.Родитель.Значение);
	Структ.Вставить("Наименование"          , НаименованиеСклада);
	Структ.Вставить("Транзитный"            , ЭлементыФормы.Транзитный.Значение);
	
	//+++ 31.05.2018
	Структ.Вставить("Подразделение"         , ЭлементыФормы.Подразделение.Значение);
	Структ.Вставить("ГруппаСкладов"         , ЭлементыФормы.ГруппаСкладов.Значение);
	Структ.Вставить("АдресноеХранение"		, ЭлементыФормы.АдресноеХранение.Значение);		
	
	Структ.Вставить("ЗапретитьИспользование", ЭлементыФормы.ЗапретитьИспользование.Значение);
	Структ.Вставить("ТипСклада"             , ЭлементыФормы.ТипСклада.Значение);
	
	Структ.Вставить("Комментарий"           , ЭлементыФормы.Комментарий.Значение);	
	
	ДопПарам = Новый ХранилищеЗначения(Структ);
	
	зад = задачи.ЗадачиПользователя.СоздатьЗадачу();
	зад.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Пелевин С.В.");
	зад.Инициатор   = глТекущийПользователь;
	
	зад.Дата = текущаяДата();
	зад.ДатаИсполнения = КонецДня( текущаяДата() );  // до конца дня - не просроченная задача
	зад.Оповещение = истина;
	зад.СрокОповещения = текущаяДата();
	зад.Объект = Справочники.Склады.ПустаяСсылка();
	
	//14.12.2015 ------- согласование в таблице-----------------
	зад.НаСогласование = истина;
	
	зад.Наименование = "Согласуйте создание нового склада """ + НаименованиеСклада + """";
 	зад.Описание =  зад.Наименование;
	
	зад.ДопПараметры = ДопПарам;
	
	зад.Записать();
	
КонецПроцедуры // СоздатьЗадачуДляСогласования()

Процедура ПриОткрытии()
	
	ВладелецТекСтр = ВладелецФормы.ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если НЕ ВладелецТекСтр = Неопределено Тогда
		ЭлементыФормы.Родитель.Значение = ВладелецТекСтр.Родитель;
	КонецЕсли;
	
//+++ 31.05.2018 - подразделение	
	масПодр = яштПоставщики.ПолучитьМассивФилиалов();
	элементыФормы.Подразделение.СписокВыбора.Добавить( справочники.Подразделения.ПустаяСсылка() ); // Ярославль - без подразделения!
	для i=1 по масПодр.Количество()-1 цикл
	элементыФормы.Подразделение.СписокВыбора.Добавить(масПодр[i]);
	КонецЦикла;
	Подразделение = ?(глТекущийПользователь.ОсновноеПодразделение.ОбособленноеПодразделение, 
						глТекущийПользователь.ОсновноеПодразделение, элементыФормы.Подразделение.СписокВыбора[0].Значение );
	Транзитный = (Подразделение.ОбособленноеПодразделение);

КонецПроцедуры

Процедура ПодразделениеПриИзменении(Элемент)
	ЭлементыФормы.Транзитный.Значение    = (Подразделение.ОбособленноеПодразделение);
    ЭлементыФормы.ГруппаСкладов.Значение = справочники.ГруппыСкладов.ПустаяСсылка();
КонецПроцедуры

Процедура ГруппаСкладовПриИзменении(Элемент)
	Если НЕ Элемент.Значение.Пустая() тогда
		Если Элемент.Значение.Транзит <> ЭлементыФормы.Транзитный.Значение тогда
			Предупреждение("Нельзя выбирать "+?(Элемент.Значение.Транзит,"","НЕ ")+"Транзитную Группу для выбранного Подразделения!",30);
			Элемент.Значение = справочники.ГруппыСкладов.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
