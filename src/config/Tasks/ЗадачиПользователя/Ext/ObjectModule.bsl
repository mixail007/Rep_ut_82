////////////////////////////////////////////////////////////////////////////////
//СЕРВИСНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//
# Если Клиент Тогда
// Функция управляет выпадающим списком полей дат
//
Функция ВыборДатыВремениИзВыпадающегоСписка(Элемент, СтандартнаяОбработка, Форма) Экспорт

	СтандартнаяОбработка = Ложь;

	СписокВремен = Новый СписокЗначений;

	Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
		Элемент.Значение = НачалоМинуты(ТекущаяДата());
	КонецЕсли;

	Если ДеньГода(Элемент.Значение) = ДеньГода(ТекущаяДата()) Тогда

		Если Минута(ТекущаяДата()) > 30 Тогда
			ВремяСписка = НачалоМинуты(КонецЧаса(ТекущаяДата()) + 60);
		Иначе
			ВремяСписка = НачалоМинуты(КонецЧаса(ТекущаяДата()) - 29*60);
		КонецЕсли;

	Иначе
		ВремяСписка = НачалоДня(Элемент.Значение);
	КонецЕсли;

	Пока НачалоЧаса(ВремяСписка) < КонецДня(Элемент.Значение) Цикл

		СписокВремен.Добавить(ВремяСписка, Формат(ВремяСписка,"ДФ='дд.ММ.гггг ЧЧ:мм'"));
		ВремяСписка = ВремяСписка + 30*60;

	КонецЦикла;

	ВыбранноеВремя = Форма.ВыбратьИзСписка(СписокВремен, Элемент);

	Возврат ВыбранноеВремя;

КонецФункции // ВыборДатыВремениИзВыпадающегоСписка()
# КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА
//

// Процедура снимает флаг оповещения перед записью завершенной задачи
// или задачи, в которой дата оповещения не определена.
//
Процедура ПередЗаписью(Отказ)
	Если Найти(Наименование, "ПДЗ по контрагентам") > 0 тогда
		если ПометкаУдаления тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

	КолДа=0; КолНет=0;
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваров") и не перенаправлена Тогда
		КолДа=Товары.НайтиСтроки(Новый структура("Статус", Перечисления.СтатусыСтрокЗаказа.Подтвержден)).Количество();
		
		Если КолДа>0 тогда // согласовали хоть одну позицию
			//по просьбе Егора исключить его из цепочки утверждений
			//Если (объект.ПричинаВозврата = Перечисления.ПричиныВозвратаТовара.Брак или объект.ПричинаВозврата = Перечисления.ПричиныВозвратаТовара.БракВыгрузка) и (Товары[0].Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски) и Исполнитель <> Справочники.Пользователи.НайтиПоКоду("Малышев Егор") Тогда
			//	выполнена = ложь;  Согласованно = Ложь;
			//	Исполнитель = Справочники.Пользователи.НайтиПоКоду("Малышев Егор");	
			//	СтатусЗадачи = Описание;
			//	Описание = Описание+"
			//	|Ульяновым согласованно "+?(КолДа=Товары.Количество(),"полностью","ЧАСТИЧНО"); 
			Если Товары[0].Номенклатура.ВидТовара = Перечисления.ВидыТоваров.АКБ и Товары.Итог("Количество")>=10 и Исполнитель <> Справочники.Пользователи.НайтиПоКоду("Сухачева А.В.") Тогда
				выполнена = ложь;  Согласованно = Ложь;
				Исполнитель = Справочники.Пользователи.НайтиПоКоду("Сухачева А.В.");
				СтатусЗадачи = Описание;
				ОписаниеЗадачи =Описание+"
				|Серковым согласованно "+?(КолДа=Товары.Количество(),"полностью","ЧАСТИЧНО");  
				
			иначеЕсли Товары.Итог("Сумма")>=100000 и (Исполнитель = Справочники.Пользователи.НайтиПоКоду("Серков") или  Исполнитель = Справочники.Пользователи.НайтиПоКоду("Бондаренко Е.Д. (снабжение)") или Исполнитель = Справочники.Пользователи.НайтиПоКоду("Филатова С.В.")) Тогда	
				выполнена = ложь;  Согласованно = Ложь;
				Описание = Описание+"
				|Серковым согласованно "+?(КолДа=Товары.Количество(),"полностью","ЧАСТИЧНО"); 
				
				Если Инициатор.ОсновноеПодразделение  = справочники.Подразделения.НайтиПоКоду("00106") тогда  //ростов
					Исполнитель = Справочники.Пользователи.НайтиПоКоду("Лигута А.С.");
				иначеЕсли Инициатор.ОсновноеПодразделение  = справочники.Подразделения.НайтиПоКоду("00112") тогда   // питер
					Исполнитель = Справочники.Пользователи.НайтиПоКоду("Красюк Н.В.");
				иначеЕсли Инициатор.ОсновноеПодразделение  = справочники.Подразделения.НайтиПоКоду("00133") или   // москва
					Инициатор.ОсновноеПодразделение  = справочники.Подразделения.НайтиПоКоду("00107") тогда   // москва
					Исполнитель = Справочники.Пользователи.НайтиПоКоду("Марешева И.Г.");
				иначеЕсли Инициатор.ОсновноеПодразделение  = справочники.Подразделения.НайтиПоКоду("00122") или// екатеринбург
					Инициатор.ОсновноеПодразделение  = справочники.Подразделения.НайтиПоКоду("00138")Тогда  // екатеринбург
					Исполнитель = Справочники.Пользователи.НайтиПоКоду("Марешева И.Г.");//("Горустович Т.И");
				иначе	//Основное подразделение, разбиваем по товарным группам				 
					
					номГруппы = Товары.Выгрузить();
					номгруппы.Колонки.Добавить("Руководитель");
					Для каждого стр из НомГруппы Цикл
						стр.Руководитель = стр.номенклатура.НоменклатурнаяГруппа.Ответственный;
					конецЦикла;	
					НомГруппы.Свернуть("Руководитель");
					если НомГруппы.Количество() = 1 Тогда
						Исполнитель = номГруппы[0].Руководитель;
					иначе	
						Для каждого стр из НомГруппы Цикл
							если стр = НомГруппы[0] Тогда
								продолжить;  //для первой группы оставим эту задачу
							конецЕсли;	 
							НоваяЗадача = Скопировать();
							исполнитель = стр.Руководитель;
							сч =НоваяЗадача.Товары.Количество(); 
							пока сч>0 Цикл
								Если НоваяЗадача.Товары[сч-1].Номенклатура.НоменклатурнаяГруппа.Ответственный <> стр.Руководитель Тогда
									НоваяЗадача.Товары.Удалить(сч-1);
								конецЕсли;
								сч= сч-1;
							КонецЦикла;	
							НоваяЗадача.Записать();
						конецЦикла;
						// теперь исправим эту задачу	
						исполнитель = НомГруппы[0].Руководитель;
							сч =Товары.Количество(); 
							пока сч>0 Цикл
								Если Товары[сч-1].Номенклатура.НоменклатурнаяГруппа.Ответственный <> стр.Руководитель Тогда
									Товары.Удалить(сч-1);
								конецЕсли;
								сч= сч-1;
							КонецЦикла;	
					конецесли;
					
					
				конецЕсли;						 
			конецЕсли;
			перенаправлена = Истина;
		конецЕсли;
		
	конецЕсли;
	
	// Сакулина
	// Когда согласовал заявку руководитель, создается задача для глав буха и бухгалтера (Пьянкова)
	#Если Клиент тогда
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаявкаНаУдалениеВыставленныхПени") и Ссылка.Выполнена  <> Выполнена
		и ЗначениеРеквизитаДляСогласования = "Согласование руководителя" Тогда
		// Проверим что согласовали а не отказали
		Если Объект.Согласованно = Истина и  НаСогласование = Истина Тогда
			ДопИнфоПоРеализациям = "";
			Для каждого СтрРеал из Объект.ВыставленныеПени Цикл
				ДопИнфоПоРеализациям = ДопИнфоПоРеализациям + СтрРеал.Реализация + Символы.ПС;
			КонецЦикла;
			
			//// Создаем задачу бухгалтеру на оповещение
			//Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
			//Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Разживина Ю.Д.");		
			//задача.Наименование = "Напомните главному бухгалтеру об утверждении заявки на удаление выставленных пеней по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное); 
			//задача.Описание = "Согласована заявка на удаление выставленных пеней по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное)+ Символы.ПС +
			//" Необходимо оповестить Главного бухгалтера о необходимости утвердить заявку.";			
			//задача.Инициатор   = глТекущийПользователь;
			//задача.Дата 		    = ТекущаяДата();
			//задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
			//задача.Оповещение     = Ложь;
			//задача.СрокОповещения = ТекущаяДата(); 
			//Попытка
			//	задача.Записать();
			//	Сообщить(" + Сформирована  для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Информация );	
			//исключение
			//	Сообщить(" - Не удалось сформировать задачу для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Внимание );	
			//КонецПопытки;
			
			ПользователиДляСогласования = новый Массив;
			//ПользователиДляСогласования.Добавить("Разживина Ю.Д.");
			ПользователиДляСогласования.Добавить("Волкова А.С.");
			ПользователиДляСогласования.Добавить("Яковлева");
			ПользователиДляСогласования.Добавить("Соковых Е.С.");
			
			Для Каждого стр из ПользователиДляСогласования Цикл	
				// Создаем задачу главному бухгалтеру на утверждение заявки
				Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
				Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду(Стр,истина);		
				задача.Наименование = ?(Стр = "Волкова А.С.", "Напомните главному бухгалтеру об утверждении заявки на удаление выставленных пеней по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное),?(Стр = "Разживина Ю.Д.", "Напомните главному бухгалтеру об утверждении заявки на удаление выставленных пеней по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное), "Утвердить заявку на выставленные пени  " + строка(Объект.Контрагент.НаименованиеПолное))); 
				задача.Описание = ?(Стр = "Волкова А.С.","Согласована заявка на удаление выставленных пеней по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное)+ Символы.ПС + " Необходимо оповестить Главного бухгалтера о необходимости утвердить заявку.",?(Стр = "Разживина Ю.Д.","Согласована заявка на удаление выставленных пеней по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное)+ Символы.ПС + " Необходимо оповестить Главного бухгалтера о необходимости утвердить заявку.", "Утвердить заявку на выставленные пени по контрагенту: "+строка(Объект.Контрагент.НаименованиеПолное) + Символы.ПС + " по реализациям: "+ ДопИнфоПоРеализациям + Символы.ПС));
				Если Стр <> "Разживина Ю.Д."  или Стр <> "Волкова А.С." Тогда
					Задача.Описание = Задача.Описание + " Заявка согласована сотрудником: " + Строка(Исполнитель);
					Задача.РеквизитДляСогласования = "Ссылка";
					Задача.ЗначениеРеквизитаДляСогласования = "Утверждение заявки глав.бухгалтером";
	           		Задача.НаСогласование = Истина;
				КонецЕсли;
				задача.Инициатор      = глТекущийПользователь;
				задача.Объект   	  = Объект;
				задача.Дата 		  = ТекущаяДата();
				задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
				задача.Оповещение     = Истина;
				задача.СрокОповещения = ТекущаяДата(); 
				Попытка
					задача.Записать();
					Сообщить(?(Стр = "Волкова А.С.", " + Сформирована  для сотрудника: "+строка(задача.Исполнитель),?(Стр = "Разживина Ю.Д.", " + Сформирована  для сотрудника: "+строка(задача.Исполнитель), " + Сформирована задача на утверждение заявки на удаление выставленных пеней")), СтатусСообщения.Информация );	
				исключение
					Сообщить(?(Стр = "Волкова А.С.", " - Не удалось сформировать задачу для сотрудника: "+строка(задача.Исполнитель),?(Стр = "Разживина Ю.Д.", " - Не удалось сформировать задачу для сотрудника: "+строка(задача.Исполнитель)," - Не удалось сформировать задачу на утверждение заявки на удаление выставленных пеней для сотрудника: "+строка(задача.Исполнитель))), СтатусСообщения.Внимание );	
				КонецПопытки;

		КонецЦикла;
	КонецЕсли;
		// После того как утвердит главный бухгалтер создается задача на исполнение ( удаление выставленных пеней) для бухгалтера.
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаявкаНаУдалениеВыставленныхПени") и Ссылка.Выполнена  <> Выполнена
		и ЗначениеРеквизитаДляСогласования = "Утверждение заявки глав.бухгалтером" Тогда
		Если Объект.Согласованно = Истина и  НаСогласование = Истина Тогда

			ДопИнфоПоРеализациям = "";
			Для каждого СтрРеал из Объект.ВыставленныеПени Цикл
				ДопИнфоПоРеализациям = ДопИнфоПоРеализациям + СтрРеал.Реализация + Символы.ПС;
			КонецЦикла;
			
			//// Создаем задачу бухгалтеру на удаление выставленных пени
			//Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
			//Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Разживина Ю.Д.");		
			//задача.Наименование = "Удалить выставленные пени по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное); 
			//задача.Описание = "Удалить выставленные пени по контрагенту: "+строка(Объект.Контрагент.НаименованиеПолное) + Символы.ПС +
			//" по реализациям: "+ ДопИнфоПоРеализациям + Символы.ПС;
			//задача.Описание = Задача.Описание + "Согласовано " + Исполнитель;
			//задача.Инициатор   = глТекущийПользователь;
			//задача.Объект   	  = Объект;
			//задача.Дата 		  = ТекущаяДата();
			//задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
			//задача.Оповещение     = Ложь;
			//задача.СрокОповещения = ТекущаяДата(); 
			//Попытка
			//	задача.Записать();
			//	Сообщить(" + Сформирована задача на удаление выставленных пеней для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Информация );	
			//исключение
			//	Сообщить(" - Не удалось сформировать задачу на удаление выставленных пеней для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Внимание );	
			//КонецПопытки;
            Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
			Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Волкова А.С.");		
			задача.Наименование = "Удалить выставленные пени по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное); 
			задача.Описание = "Удалить выставленные пени по контрагенту: "+строка(Объект.Контрагент.НаименованиеПолное) + Символы.ПС +
			" по реализациям: "+ ДопИнфоПоРеализациям + Символы.ПС;
			задача.Описание = Задача.Описание + "Согласовано " + Исполнитель;
			задача.Инициатор   = глТекущийПользователь;
			задача.Объект   	  = Объект;
			задача.Дата 		  = ТекущаяДата();
			задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
			задача.Оповещение     = Ложь;
			задача.СрокОповещения = ТекущаяДата(); 
			Попытка
				задача.Записать();
				Сообщить(" + Сформирована задача на удаление выставленных пеней для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Информация );	
			исключение
				Сообщить(" - Не удалось сформировать задачу на удаление выставленных пеней для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Внимание );	
			КонецПопытки;

        КонецЕсли;
	КонецЕсли;
	#КонецЕсли

	// Когда согласовывают заявка на удаление Пеней, тогда создается задача Насте Пьянковой

	
	// Когда Догадкина Т.  выполняет задачу на  удаление Пеней, тогда в заявке становится реквизит Выполнена
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаявкаНаУдалениеВыставленныхПени") и Ссылка.Выполнена  <> Выполнена Тогда
		// Проверим что согласовали а не отказали
		Если Объект.Согласованно = Истина и  НаСогласование = Ложь Тогда
			ОбъектОбъект = Объект.ПолучитьОбъект();
			ОбъектОбъект.Выполнено = Выполнена;
			Попытка 
				ОбъектОбъект.Записать();
			Исключение
			КонецПопытки;
			
		КонецЕсли;
	КонецЕсли;
	// Когда Догадкина Т.  выполняет задачу на  удаление Пеней, тогда в заявке становится реквизит Выполнена

	
	
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(СрокОповещения)
		Или  (Выполнена и Инициатор=Исполнитель) Тогда //+++ 17.01.2014 выполнена своя задача...
		Оповещение = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ПриВыполнении".
//
Процедура ПриВыполнении(Отказ)

	ДатаИсполнения = ТекущаяДата();
	# Если Клиент Тогда
	Исполнитель    = глТекущийПользователь;
    # КонецЕсли
	 //+++ 17.01.2014 "обратное оповещение" - Инициатору
	 Если (не Отказ) и  Выполнена и (Инициатор<>Исполнитель) тогда
		Оповещение = истина;  СрокОповещения = ТекущаяДата() ; //  сразу -  инициатору (в теченеи 5 мин)
	 КонецЕсли;	


КонецПроцедуры // ПриВыполнении()

// Процедура - обработчик события "ПередВыполнением".
//
Процедура ПередВыполнением(Отказ)

	//РаботаСБизнесПроцессами.ПроверитьЗаполнениеРеквизитов(ЭтотОбъект, Отказ);

КонецПроцедуры // ПередВыполнением()


//+++ 12.08.2015
Процедура ИзменитьЦеныВЗаказеПокупателяПриСогласовании() Экспорт
	
	Если Объект.Пустая() тогда
	    возврат;
	КонецЕсли;
	
	ЗакОб = Объект.ПолучитьОбъект(); //26.10.2015
	Если яштПоЗаказуБылиОтгрузки(Объект) Тогда
		Сообщить("По документу: "+строка(Объект)+" - уже были отгрузки! Согласование цен уже нельзя делать!", СтатусСообщения.Внимание);	
		ПометкаУдаления = истина; // отменяется!
		возврат;
	КонецЕсли;	
			
	ВсеСогласовано = Истина;
	для каждого стр1 из Товары цикл
		стрЗак = ЗакОб.Товары.Найти(стр1.Номенклатура, "Номенклатура"); //номер строки в заказе НЕ может измениться?!
		Если стрЗак = неопределено тогда // строку удалили в заказе!
			Сообщить("Строку с товаров "+строка(стр1.Номенклатура.Код)+" - "+строка(стр1.Номенклатура)
			            +" - удалили из заказа, согласования цены ""Отменено"".", СтатусСообщения.Внимание);
			 стр1.Статус = перечисления.СтатусыСтрокЗаказа.Отменен;  
			продолжить;
		КонецЕсли;	
		стрЗак.Статус = стр1.Статус;
		Если стр1.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
			стрЗак.Цена  = стр1.Цена;
		ИначеЕсли стр1.Статус = перечисления.СтатусыСтрокЗаказа.Отменен тогда
			стрЗак.Цена  = стр1.ЦенаМин;
		Иначе //Если стр1.Статус = перечисления.СтатусыСтрокЗаказа.НаСогласовании тогда
			стрЗак.Цена  = стр1.ЦенаМин;
			ВсеСогласовано = ЛОЖЬ;
		КонецЕсли;
	//----------пересчет сумм--------------	
		СтрЗак.Сумма = стрЗак.Цена * стрЗак.Количество;
		СтрЗак.СуммаНДС = РассчитатьСуммуНДС(СтрЗак.Сумма,
                                               Объект.УчитыватьНДС, Объект.СуммаВключаетНДС,
                                               ПолучитьСтавкуНДС(СтрЗак.СтавкаНДС));
		
	КонецЦикла;	
	
	//если все согласовано, значит задача выполнена и выключаем флаг НаСогласование - больше не нужен!	
	Выполнена  = ВсеСогласовано;

	Если НЕ ОбменДанными.Загрузка тогда //+++ 25.09.2015 - НЕ запись задачи из Заказа
		попытка 
			ЗакОб.Согласован = Истина;  //ПРИЗНАК в заказе, что не надо делать Задачу: (ЭтотОбъект.Согласован <> Ссылка.Согласован) 
			Если ЗакОб.Проведен Тогда //+++ 26.08.2015
				ЗакОб.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ЗакОб.Записать();
			КонецЕсли;
			Сообщить("Документ: "+строка(ЗакОб)+" - успешно записан.", СтатусСообщения.Информация);	
		Исключение
			Сообщить("Ошибка при записи документа: "+строка(ЗакОб)+" - "+ОписаниеОшибки(), СтатусСообщения.Внимание);	
		КонецПопытки;	
	КонецЕсли;
	
КонецПроцедуры	

Процедура СогласоватьРекламнуюПродукцию() Экспорт
    Если Объект.Пустая() тогда
	    возврат;
	КонецЕсли;
	
	ЗакОб = Объект.ПолучитьОбъект(); //26.10.2015
	Если яштПоЗаказуБылиОтгрузки(Объект) Тогда
		Сообщить("По документу: "+строка(Объект)+" - уже были отгрузки! Согласование нельзя делать!", СтатусСообщения.Внимание);	
		ПометкаУдаления = истина; // отменяется!
		возврат;
	КонецЕсли;	
	
	УдаляемыеСтроки = Новый Массив;
	
	ВсеСогласовано = Истина;
	для каждого стр1 из Товары цикл
		стрЗак = ЗакОб.Товары.Найти(стр1.Номенклатура, "Номенклатура"); //номер строки в заказе НЕ может измениться?!
		Если стрЗак = неопределено тогда // строку удалили в заказе!
			Сообщить("Строку с товаров "+строка(стр1.Номенклатура.Код)+" - "+строка(стр1.Номенклатура)
			+" - удалили из заказа, согласования ""Отменено"".", СтатусСообщения.Внимание);
			стр1.Статус = перечисления.СтатусыСтрокЗаказа.Отменен;  
			продолжить;
		КонецЕсли;	
		стрЗак.Статус = стр1.Статус;
		Если стр1.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
			стрЗак.Количество  = стр1.Количество;
			//----------пересчет сумм--------------	
			СтрЗак.Сумма = стрЗак.Цена * стрЗак.Количество;
			СтрЗак.СуммаНДС = РассчитатьСуммуНДС(СтрЗак.Сумма,
			Объект.УчитыватьНДС, Объект.СуммаВключаетНДС,
			ПолучитьСтавкуНДС(СтрЗак.СтавкаНДС));
		ИначеЕсли стр1.Статус = перечисления.СтатусыСтрокЗаказа.Отменен тогда
			ЗакОб.Товары.Удалить(стрЗак);
		КонецЕсли;	
	КонецЦикла;									   
	
	//если все согласовано, значит задача выполнена и выключаем флаг НаСогласование - больше не нужен!	
	Выполнена  = ВсеСогласовано;

	Если НЕ ОбменДанными.Загрузка тогда //+++ 25.09.2015 - НЕ запись задачи из Заказа
		попытка 
			ЗакОб.Согласован = Истина;  //ПРИЗНАК в заказе, что не надо делать Задачу: (ЭтотОбъект.Согласован <> Ссылка.Согласован) 
			//ЗакОб.Проверен = Истина;
			Если ЗакОб.Проведен Тогда //+++ 26.08.2015
				//ЗакОб.Проверен = Истина;
				ЗакОб.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ЗакОб.Записать();
			КонецЕсли;
			Сообщить("Документ: "+строка(ЗакОб)+" - успешно записан.", СтатусСообщения.Информация);	
		Исключение
			Сообщить("Ошибка при записи документа: "+строка(ЗакОб)+" - "+ОписаниеОшибки(), СтатусСообщения.Внимание);	
		КонецПопытки;	
	КонецЕсли;

КонецПроцедуры

// + Сакулина. 24.11.2016
Процедура СогласоватьТипоразмер() Экспорт
	Если Объект.Пустая() Тогда
		Возврат;
	КонецЕсли;
	Если яштПоЗаказуБылиОтгрузки(Объект) и Объект.ТипЗаказа <> 13 Тогда
		Сообщить("По документу: "+строка(Объект)+" - уже были перемещения! Согласование нельзя делать!", СтатусСообщения.Внимание);	
		ПометкаУдаления = истина; // отменяется!
		возврат;
	КонецЕсли;	
    ЗакОб = Объект.ПолучитьОбъект();	
	ВсеСогласовано = Истина;
	
	для каждого Стр из Товары цикл
		СтрЗак = ЗакОб.Товары.Найти(Стр.Номенклатура, "Номенклатура"); //номер строки в заказе НЕ может измениться?!
		Если СтрЗак = неопределено тогда // строку удалили в заказе!
			Сообщить("Строку с товаров "+строка(Стр.Номенклатура.Код)+" - "+строка(Стр.Номенклатура)
			            +" - удалили из заказа, согласования цены ""Отменено"".", СтатусСообщения.Внимание);
			 Стр.Статус = перечисления.СтатусыСтрокЗаказа.Отменен;  
			Продолжить;
		КонецЕсли;	
		//СтрЗак.Статус = Стр.Статус;
		Если Стр.Статус = Перечисления.СтатусыСтрокЗаказа.ПустаяСсылка() или Стр.Статус = Перечисления.СтатусыСтрокЗаказа.Отменен Тогда
			ВсеСогласовано = ЛОЖЬ;
		КонецЕсли;
	КонецЦикла;	
	
	//если все согласовано, значит задача выполнена и выключаем флаг НаСогласование - больше не нужен!	
	Выполнена  = ВсеСогласовано;
	Если ВсеСогласовано Тогда
		ЗакОб.ТипЗаказа = 0;
	КонецЕсли;
	
	Если НЕ ОбменДанными.Загрузка тогда //+++ 25.09.2015 - НЕ запись задачи из Заказа
		попытка 
			ЗакОб.Согласован = Истина;  //ПРИЗНАК в заказе, что не надо делать Задачу: (ЭтотОбъект.Согласован <> Ссылка.Согласован) 
			Если ЗакОб.Проведен Тогда //+++ 26.08.2015
				ЗакОб.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ЗакОб.Записать();
			КонецЕсли;
			# Если Клиент Тогда
			Сообщить("Документ: "+строка(ЗакОб)+" - успешно записан.", СтатусСообщения.Информация);	
			# КонецЕсли
		Исключение
			# Если Клиент Тогда
			Сообщить("Ошибка при записи документа: "+строка(ЗакОб)+" - "+ОписаниеОшибки(), СтатусСообщения.Внимание);	
			#КонецЕсли

		КонецПопытки;	
	КонецЕсли;


	
КонецПроцедуры
// - Сакулина. 24.11.2016

//Плотников 03.04.2017
Процедура СогласоватьПодарки() Экспорт
	Если Объект.Пустая() Тогда
		Возврат;
	КонецЕсли;
	//Если яштПоЗаказуБылиОтгрузки(Объект) и Объект.ТипЗаказа <> 13 Тогда
	//	Сообщить("По документу: "+строка(Объект)+" - уже были перемещения! Согласование нельзя делать!", СтатусСообщения.Внимание);	
	//	ПометкаУдаления = истина; // отменяется!
	//	возврат;
	//КонецЕсли;	
    ЗакОб = Объект.ПолучитьОбъект();	
	ВсеСогласовано = Истина;
	
	для каждого Стр из Товары цикл
		СтрЗак = ЗакОб.Бонусы.Найти(Стр.Номенклатура, "Номенклатура"); //номер строки в заказе НЕ может измениться?!
		Если СтрЗак = неопределено тогда // строку удалили в заказе!
			Сообщить("Строку с товаров "+строка(Стр.Номенклатура.Код)+" - "+строка(Стр.Номенклатура)
			            +" - удалили из заказа, согласования цены ""Отменено"".", СтатусСообщения.Внимание);
			 Стр.Статус = перечисления.СтатусыСтрокЗаказа.Отменен;  
			Продолжить;
		КонецЕсли;	
		СтрЗак.Статус = Стр.Статус;
	КонецЦикла;	
	
	для каждого Стр из ЗакОб.Бонусы цикл
		Если Стр.Статус = Перечисления.СтатусыСтрокЗаказа.ПустаяСсылка() или Стр.Статус = Перечисления.СтатусыСтрокЗаказа.Отменен Тогда
			ВсеСогласовано = ЛОЖЬ;
		КонецЕсли;
	КонецЦикла;
	
	//если все согласовано, значит задача выполнена и выключаем флаг НаСогласование - больше не нужен!	
	Выполнена  = ВсеСогласовано;
	Если ВсеСогласовано Тогда
		ЗакОб.СогласованаТребованиеНакладная = истина;
	КонецЕсли;
	
	ЗакОб.Записать();
		
КонецПроцедуры
//Плотников 03.04.2017


//+++ 17.08.2015
функция получитьНазвПравила(стр1)
	текст2 = строка(стр1.ВидТовара)+" "+строка(стр1.Производитель)
				+?(ЗначениеЗаполнено(стр1.НоменклатурнаяГруппа),", ном.группа: "+строка(стр1.НоменклатурнаяГруппа),"")
				+?(ЗначениеЗаполнено(стр1.ВходитВПапку),", из каталога: "+строка(стр1.ВходитВПапку),"")
				+?(стр1.Диаметр="","", ", Диаметр "+стр1.Диаметр) 
				+?(стр1.ПодСтрока="","", ", Наименование содержит '"+стр1.ПодСтрока+"' ")
				+?(стр1.Номенклатура.пустая(),"", ", только для товара: "+строка(стр1.Номенклатура.Код)+" "+строка(стр1.Номенклатура));
   возврат текст2;
КонецФункции	

Процедура ИзменитьПравилаПокупателяПриСогласовании() Экспорт
	
//все правила клиента	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ *
	               |ИЗ
	               |	РегистрСведений.ПравилаЦенообразования КАК ПравилаЦенообразования
	               |ГДЕ
	               |	ПравилаЦенообразования.Контрагент = &Контрагент
//				   |";
//+++ 05.10.2016 - 17.11.2017 обязательно без категории - старые правила
				   |	И  ПравилаЦенообразования.Категория<>Значение(Перечисление.КатегорииСкидок.ПустаяСсылка)";
	//Если Найти(Наименование, "НОВЫЕ")>0 тогда  //согласование НОВЫХ правил!
	//	Запрос.Текст  = стрЗаменить(Запрос.Текст ,"ПравилаЦенообразования.Категория=", "ПравилаЦенообразования.Категория<>");
	//КонецЕсли;
//+++)

	Запрос.УстановитьПараметр("Контрагент", Объект);
				   
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		//+++( 08.06.2016 +++++++++++++++++++++++++++++++++++++++++++++++++++
		Если сокрЛП(Выборка.ID)<>"" тогда
			стрПравила = Товары.Найти(Выборка.ID, "ID"); //ПО ID правила Клиента!
			Если стрПравила = Неопределено тогда
			//	стрПравила = Товары.Найти(Выборка.Приоритет, "НомерСтрокиОснования"); //ПО НОМЕРУ ПРАВИЛА!
				продолжить;
			КонецЕсли;
		Иначе	
			сообщить("ID правила № "+строка(Выборка.Приоритет)+" не заполнено!", СтатусСообщения.Внимание);
			продолжить;
			//стрПравила = Товары.Найти(Выборка.Приоритет, "НомерСтрокиОснования"); //ПО НОМЕРУ ПРАВИЛА (как было раньше)!
		КонецЕсли;
		//+++)
		
		Если стрПравила = неопределено тогда 
			назв = получитьНазвПравила(Выборка);
	        стрПравила = Товары.Найти(назв, "Номенклатура");
			Если стрПравила = неопределено тогда 
				назв = 	"Предоплата: "+назв;
				стрПравила = Товары.Найти(назв, "Номенклатура");
			КонецЕсли;
			Если стрПравила = неопределено тогда
			//	Сообщить("не найдено правило №"+строка(Выборка.Приоритет));
			 	продолжить;
			КонецЕсли; 
		КонецЕсли;	
		стрПравила.НомерСтрокиОснования = Выборка.Приоритет;
		
		менРегСв = РегистрыСведений.ПравилаЦенообразования.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(менРегСв, выборка);
		
		Если стрПравила.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
			менРегСв.Выключено = ЛОЖЬ;
			если Найти(нрег(стрПравила.Номенклатура), "предоплата")>0 тогда
				менРегСв.СкидкаПредоплаты = стрПравила.Скидка;
			иначе
				менРегСв.СкидкаНаценка = стрПравила.Скидка;
			//	менРегСв.Бонус = 0; // СкидкаНаценка+Бонус <= макс.скидке !
			КонецЕсли;	
		ИначеЕсли стрПравила.Статус = перечисления.СтатусыСтрокЗаказа.Отменен тогда // вообще удалять надо... но тогда сдвинется номер правила!
			
			менРегСв.Выключено = ЛОЖЬ;//+++ 10.09.2015 - ВКЛючаем, но с мин.ценами!
			
			если Найти(нрег(стрПравила.Номенклатура), "предоплата")>0 тогда
				менРегСв.СкидкаПредоплаты = стрПравила.СкидкаМин;
			иначе
				менРегСв.СкидкаНаценка = стрПравила.СкидкаМин; //+++ 10.09.2015 - включаем, но макс.скидку!
				менРегСв.Бонус = 0; // СкидкаНаценка+Бонус <= макс.скидке !
				//если менРегСв.СкидкаПредоплаты = 0 тогда //остаток в СкидкаПредоплаты!
				//менРегСв.СкидкаПредоплаты = -Окр( (1 - (1 - стрПравила.СкидкаМин)/(1-стрПравила.Скидка) ) * 100 , 2);
				//КонецЕсли;		
			КонецЕсли;	
		Иначе //Если стрПравила.Статус = перечисления.СтатусыСтрокЗаказа.НаСогласовании тогда // вообще удалять надо... но тогда сдвинется номер правила!
			менРегСв.Выключено = Истина;//+++ 10.09.2015 - включаем, но с мин.ценами!
		КонецЕсли;
		
		//Если стрПравила.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден 
		//	или стрПравила.Статус = перечисления.СтатусыСтрокЗаказа.Отменен тогда
			попытка // перезапись правила!
				менРегСв.Записать(Истина);
				сообщить(?(менРегСв.Выключено,"ВЫКЛючено","ВКЛючено")+" правило № "+ строка(Выборка.Приоритет)+" (ID = "+Выборка.ID+") у клиента "+ строка(Объект), СтатусСообщения.Информация);
			исключение
				сообщить("Не удалось записать правило № "+ строка(Выборка.Приоритет)+" (ID = "+Выборка.ID+") у клиента "+ строка(Объект)+" : "+ОписаниеОшибки(), СтатусСообщения.Внимание);
			КонецПопытки;	
		//Иначе
		//	сообщить("Не изменилось правило № "+ строка(Выборка.Приоритет)+" у клиента "+ строка(Объект));
		//КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ИзменитьПравилаПокупателяПриСогласовании()

//+++ 14.12.2015
Процедура ИзменитьТочкиПокупателя() Экспорт
	для каждого стр1 из Товары цикл
		  точка = справочники.Точки.НайтиПоРеквизиту("Номер", стр1.НомерСтрокиОснования);
		  Если точка=неопределено тогда
				  #Если Клиент тогда
					  сообщить("Не удалось найти точку № "+строка( стр1.НомерСтрокиОснования )+":"+ОписаниеОшибки(), СтатусСообщения.Внимание);
				  #КонецЕсли	  
		  Иначе
			  точкаОб = точка.ПолучитьОбъект();
			  точкаОб.Согласован = (стр1.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден);
			  i = найти(стр1.Номенклатура,"Адрес:")+5;  i = ?(i=5, 0, i); // если нет слова Адрес - то вся ноненклатура = Адрес!
			  адр = прав(стр1.Номенклатура, стрДлина(стр1.Номенклатура) - i);
			  точкаОб.Адрес      =  адр; // тоже можно менять 
			  
			  Если точкаОб.Согласован и точкаОб.Координаты="" тогда //+++ 19.01.2016 - автоматически...
				  точкаОб.Координаты = ОбменСУТИнтернетМагазин.получитьКоординаты(адр);
			  КонецЕсли;
			  
			  попытка
				  точкаОб.Записать();
				  #Если Клиент тогда
					  сообщить( ?( точкаОб.Согласован, "   Согласован", "НЕ согласован")+" адрес точки № "+строка( стр1.НомерСтрокиОснования )+": "+адр, СтатусСообщения.Информация);
				  #КонецЕсли	
			  исключение
				  #Если Клиент тогда
					  сообщить("Не удалось записать точку № "+строка( стр1.НомерСтрокиОснования )+":"+ОписаниеОшибки(), СтатусСообщения.Внимание);
				  #КонецЕсли	  
			  КонецПопытки;
		  КонецЕсли;	  
	КонецЦикла;	
КонецПроцедуры

//+++ 12.08.2015
Процедура ИзменитьНазваниеЗадачиИОписаниеПриСогласовании(ТипДействия = 0) Экспорт
	//---------------------------------текстовое уведомление------------------------------------
	КолДа=0; КолНет=0; N=Товары.Количество();
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаказПокупателя") тогда //цены из заказа
	СтатусЗадачи = ""; ОписаниеЗадачи = "";	
		Если Объект.ТипЗаказа = 12 или Объект.ТипЗаказа = 13 Тогда  //Реклама или согласование типоразмера
			
			для каждого стр1 из Товары Цикл 
				симвСтатуса = "   Не согласована номенклатура" ;
				Если стр1.Статус=перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
					симвСтатуса = " + Утверждена номенклатура"; КолДа=КолДа+1; 
				ИначеЕсли стр1.Статус=перечисления.СтатусыСтрокЗаказа.Отменен тогда
					симвСтатуса = " - Отказано в утверждении номенклатуры"; КолНет=КолНет+1;
				КонецЕсли;	
				ОписаниеЗадачи = ОписаниеЗадачи 
				+ строка(стр1.НомерСтрокиОснования)+") "+ симвСтатуса 
				+"
				|         для товара: "+ строка(стр1.Номенклатура.Код)+" - "+строка(стр1.Номенклатура)+" Кол-во: "+строка(стр1.Количество)
				+"
				|";
			КонецЦикла;	
			Если КолДа+КолНет=N тогда Выполнена = истина;
			иначе Выполнена=Ложь;
			КонецЕсли;	
			СтатусЗадачи = ?(Выполнена,	?(КолДа=N,"УТВЕРЖДЕНЫ все позиции номенклатуры", 
			?(КолНет=N,"ОТКАЗАНО в согласование всех позиций номенклатуры", 
			?(КолДа+КолНет=N, "СОГЛАСОВАНЫ все позиции номенклатуры", "Согласованы не все позиции номенклатуры")
			)   ), "Требуется согласовать номенклатуру");
			Наименование = СтатусЗадачи+" для "+строка(Товары.Количество())+" тов. по Заказу "+строка(Объект.Номер)+" для Покупателя: "+строка(Объект.Контрагент);
			
		Иначе	
			
			для каждого стр1 из Товары Цикл 
				симвСтатуса = "   Не согласована цена: "+строка(стр1.Цена)+"р. меньше мин.разреш.цены: "+строка(стр1.ЦенаМин)+"р. " ;
				Если стр1.Статус=перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
					симвСтатуса = " + Утверждена Цена: "+строка(стр1.Цена)+"р. "; КолДа=КолДа+1; 
				ИначеЕсли стр1.Статус=перечисления.СтатусыСтрокЗаказа.Отменен тогда
					симвСтатуса = " - Отказано в установке цены: "+строка(стр1.Цена)+"р. "; КолНет=КолНет+1;
				КонецЕсли;	
				ОписаниеЗадачи = ОписаниеЗадачи 
				+ строка(стр1.НомерСтрокиОснования)+") "+ симвСтатуса 
				+"
				|         для товара: "+ строка(стр1.Номенклатура.Код)+" - "+строка(стр1.Номенклатура)+" Кол-во: "+строка(стр1.Количество)
				+"
				|";
			КонецЦикла;	
			Если КолДа+КолНет=N тогда Выполнена = истина;
			иначе Выполнена=Ложь;
			КонецЕсли;	
			СтатусЗадачи = ?(Выполнена,	?(КолДа=N,"УТВЕРЖДЕНЫ все цены", 
			?(КолНет=N,"ОТКАЗАНО в установке всех цен", 
			?(КолДа+КолНет=N, "СОГЛАСОВАНЫ все цены", "Согласованы не все цены")
			)   ), "Требуется согласовать цены");
			Наименование = СтатусЗадачи+" для "+строка(Товары.Количество())+" тов. по Заказу "+строка(Объект.Номер)+" для Покупателя: "+строка(Объект.Контрагент);
		КонецЕсли;
		
	ИначеЕсли  ТипЗнч(Объект) = Тип("ДокументСсылка.УстановкаБонусов") тогда  
		ОписаниеЗадачи = Описание;
		для каждого стр1 из Товары Цикл 
			симвСтатуса = "   Не согласован бонус: "+?(Объект.Бонус = 0,строка(стр1.Цена),строка(стр1.Количество))+"% меньше мин.разреш.скидки: "+строка(стр1.СкидкаМин)+"% " ;
			Если стр1.Статус=перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
				симвСтатуса = " + Утвержден бонус: "; КолДа=КолДа+1; 
			ИначеЕсли стр1.Статус<>перечисления.СтатусыСтрокЗаказа.ПустаяСсылка() 
				и стр1.Статус<>перечисления.СтатусыСтрокЗаказа.НаСогласовании тогда
				симвСтатуса = " - "+строка(стр1.Статус)+" бонус: "; КолНет=КолНет+1;
			КонецЕсли;	
			//ОписаниеЗадачи = ОписаниеЗадачи 
			//+ строка(стр1.НомерСтрокиОснования)+") "+ симвСтатуса 
			//+"
			//|         для правила "+ строка(стр1.Номенклатура)+"
			//|";
		КонецЦикла;	
		
		СтатусЗадачи = ?(Выполнена,	?(КолДа=N,"УТВЕРЖДЕНЫ все бонусы", 
		?(КолНет=N,"ОТКАЗАНО в установке всех бонусов", 
		?(КолДа+КолНет=N, "СОГЛАСОВАНЫ все бонусы", "Согласованы НЕ все бонусы")
		)   ), "Требуется согласовать бонусы");
		
		Наименование = СтатусЗадачи+?(Объект.Бонус=1," ОТК","("+строка(Объект.ТипБонуса)+") "+строка(Объект.НоменклатурнаяГруппа) )
		+"  по "+строка(Товары.Количество())+" торг.маркам";
		
		Если КолДа+КолНет=N тогда 
			Выполнена = истина;
			ОписаниеЗадачи = ОписаниеЗадачи +"
			|"+СтатусЗадачи	+" /"+строка(Исполнитель)+"/ "+формат(ТекущаяДата(),"ДФ='dd.MM.yyyy (HH:mm)'");		
	
			//Если КолНет=N тогда //06.02.2018 - отказ Гл.Бух!
			//	ДокОбъект = Объект.ПолучитьОбъект();
			//	ДокОбъект.Комментарий = "ОТМЕНЕНО /"+строка(Исполнитель)+"/ "+формат(ТекущаяДата(),"ДФ='dd.MM.yyyy (HH:mm)'")+"
			//	|"+ДокОбъект.Комментарий;
			//	ДокОбъект.Записать();
			//КонецЕсли;	
			
		иначе 
			Выполнена=Ложь;
		КонецЕсли;	
		
	//+++ 18.12.2017	
	ИначеЕсли  ТипЗнч(Объект) = Тип("ДокументСсылка.ВыплатаБонусовКонтрагентам") тогда  
		ОписаниеЗадачи = Описание;   
		КолСогл = 0; //3-е согласование!
		
		для каждого стр1 из Товары Цикл 
			симвСтатуса = "   Не согласован бонус: "+?(Объект.Бонус = 0,строка(стр1.Цена),строка(стр1.Количество))+"% меньше мин.разреш.скидки: "+строка(стр1.СкидкаМин)+"% " ;
			Если стр1.Статус=перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
				симвСтатуса = " + Утвержден бонус: "; 							
				КолДа=КолДа+1; 
			ИначеЕсли стр1.Статус=перечисления.СтатусыСтрокЗаказа.Отменен тогда
				симвСтатуса = " - ОТКЛОНЕН бонус: "; 							
				КолНет=КолНет+1; 
			ИначеЕсли стр1.Статус<>перечисления.СтатусыСтрокЗаказа.ПустаяСсылка() 
				и стр1.Статус<>перечисления.СтатусыСтрокЗаказа.НаСогласовании тогда
				симвСтатуса = " - "+строка(стр1.Статус)+" бонус: "; 			
				КолСогл=КолСогл+1;
			КонецЕсли;	
			//ОписаниеЗадачи = ОписаниеЗадачи 
			//+ строка(стр1.НомерСтрокиОснования)+") "+ симвСтатуса 
			//+"
			//|         для правила "+ строка(стр1.Номенклатура)+"
			//|";
		КонецЦикла;   //+++ 18.01.2018  --- НЕ МЕНЯЕТСЯ !!!
		//ОписаниеЗадачи = ОписаниеЗадачи+ "
		//|ИТОГО:  "+ товары.Итог("Сумма");
		
		СтатусЗадачи = ?(КолДа=N,"УТВЕРЖДЕНА выплата всех бонусов", 
							?(КолНет=N,"ОТКАЗАНО в выплате всех бонусов", 
								?(КолДа+КолНет+КолСогл=N, "СОГЛАСОВАНА выплата всех бонусов",
								   ?(КолДа>0 или КолНет>0 или КолСогл>0,"Не полностью Согласована выплата бонусов",
								  	"Требуется согласовать выплату бонусов")
						 )   )    );
		
		Наименование = СтатусЗадачи+?(Объект.Бонус=1," ОТК","("+строка(Объект.ТипБонуса)+")"+строка(Объект.НоменклатурнаяГруппа) )
		+" по "+строка(Товары.Количество())+" торг.маркам"; 
		
		Если КолДа+КолНет+КолСогл=N тогда 
			Выполнена = истина;
			ОписаниеЗадачи = ОписаниеЗадачи +"
			|"+СтатусЗадачи	+" /"+строка(Исполнитель)+"/ "+формат(ТекущаяДата(),"ДФ='dd.MM.yyyy (HH:mm)'");
				
			//Если КолНет=N тогда //06.02.2018 - отказ Гл.Бух!
			//	ДокОбъект = Объект.ПолучитьОбъект();
			//	ДокОбъект.Комментарий = "ОТМЕНЕНО /"+строка(Исполнитель)+"/ "+формат(ТекущаяДата(),"ДФ='dd.MM.yyyy (HH:mm)'")+"
			//	|"+ДокОбъект.Комментарий;
			//	ДокОбъект.Записать();
			//КонецЕсли;	

		иначе 
			Выполнена=Ложь;
		КонецЕсли;	

		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") тогда  // правила клиента
	СтатусЗадачи = ""; ОписаниеЗадачи = "";
		для каждого стр1 из Товары Цикл 
			симвСтатуса = "   Не согласована наценка/скидка: "+строка(стр1.Скидка)+"% меньше мин.разреш.скидки: "+строка(стр1.СкидкаМин)+"% " ;
			Если стр1.Статус=перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
				симвСтатуса = " + Утверждена наценка/скидка: "+строка(стр1.Скидка)+"% "; КолДа=КолДа+1; 
			ИначеЕсли стр1.Статус=перечисления.СтатусыСтрокЗаказа.Отменен тогда
				симвСтатуса = " - Отказано в установке наценки/скидки: "+строка(стр1.Скидка)+"% "; КолНет=КолНет+1;
			КонецЕсли;	
			ОписаниеЗадачи = ОписаниеЗадачи 
			+ строка(стр1.НомерСтрокиОснования)+") "+ симвСтатуса 
			+"
			|         для правила "+ строка(стр1.Номенклатура)+"
			|";
		КонецЦикла;	
		Если КолДа+КолНет=N тогда Выполнена = истина;
		иначе Выполнена=Ложь;
		КонецЕсли;	
		новыеСтарые =?(найти(Наименование,"НОВЫЕ")>0,"НОВЫЕ","старые");//05.10.2016
		СтатусЗадачи = ?(Выполнена,	?(КолДа=N,"УТВЕРЖДЕНЫ все "+новыеСтарые+" правила", 
		?(КолНет=N,"ОТКАЗАНЫ "+новыеСтарые+" правила", 
		?(КолДа+КолНет=N, "СОГЛАСОВАНЫ "+новыеСтарые+" все правила", "Согласованы все "+новыеСтарые+" правила")
		)   ), "Требуется согласовать правила");
		
		Наименование = СтатусЗадачи+" для "+строка(Товары.Количество())+" правил по клиенту: "+строка(Объект.Код)+" - "+строка(Объект);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Точки") тогда  // адреса точек
	СтатусЗадачи = ""; ОписаниеЗадачи = "";
		для каждого стр1 из Товары Цикл 
			ОписаниеЗадачи = ОписаниеЗадачи +?(стр1.Статус=перечисления.СтатусыСтрокЗаказа.Подтвержден, "+Согласована    ", "-НЕ Согласована ")
			+"Точка №"+строка(стр1.НомерСтрокиОснования)+": "+стр1.Номенклатура+"
			|";
			КолДа = КолДа +?(стр1.Статус=перечисления.СтатусыСтрокЗаказа.Подтвержден,1,0);
			КолНет = КолНет +?(стр1.Статус=перечисления.СтатусыСтрокЗаказа.Отменен,1,0);
		КонецЦикла;	
		Если КолДа+КолНет=N тогда 
			Выполнена = истина;
		иначе Выполнена=Ложь;
		КонецЕсли;	
		СтатусЗадачи = ?(Выполнена,	?(КолДа=N,"УТВЕРЖДЕНЫ все точки", 
		?(КолНет=N,"ОТКАЗАНО в утверждении всех точек", 
		?(КолДа+КолНет=N, "Согласованы все точки", "Не все точки согласованы")
		)   ), "Требуется Утвердить/Отказать адреса точек");
		Наименование = СтатусЗадачи+" для "+строка(Товары.Количество())+" точек";
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваров") тогда  // заявка на возврат
		СтатусЗадачи = ""; ОписаниеЗадачи = "";
		для каждого стр1 из Товары Цикл 
			симвСтатуса = "   Не согласован возврат: "+строка(стр1.Номенклатура)+"в количестве "+стр1.Количество+"шт. " ;
			Если стр1.Статус=перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
				симвСтатуса = "Согласован возврат: "+строка(стр1.Номенклатура)+"в количестве "+стр1.Количество+"шт. " ;
				КолДа=КолДа+1; 
			ИначеЕсли стр1.Статус=перечисления.СтатусыСтрокЗаказа.Отменен тогда
				симвСтатуса = " - Отказано в возврате: "+строка(стр1.Номенклатура)+"в количестве "+стр1.Количество+"шт. " ;
				КолНет=КолНет+1;
			КонецЕсли;	
			ОписаниеЗадачи = ОписаниеЗадачи 
			+ строка(стр1.НомерСтрокиОснования)+") "+ симвСтатуса; 
		КонецЦикла;	
		Если КолДа+КолНет=N тогда Выполнена = истина;
		иначе Выполнена=Ложь;
		КонецЕсли;	
		
		Если КолДа>0 тогда // согласовали хоть одну позицию
			//Если (объект.ПричинаВозврата = Перечисления.ПричиныВозвратаТовара.Брак или объект.ПричинаВозврата = Перечисления.ПричиныВозвратаТовара.БракВыгрузка)и(Товары[0].Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски) и Исполнитель <> Справочники.Пользователи.НайтиПоКоду("Малышев Егор") Тогда
			//	выполнена = ложь;  Согласованно = Ложь;
			//	СтатусЗадачи = Описание;
			//	ОписаниеЗадачи ="";
			Если Товары[0].Номенклатура.ВидТовара = Перечисления.ВидыТоваров.АКБ и Товары.Итог("Количество")>=10 и Исполнитель <> Справочники.Пользователи.НайтиПоКоду("Сухачева А.В.") Тогда
				выполнена = ложь;  Согласованно = Ложь;
				СтатусЗадачи = Описание;
				ОписаниеЗадачи = "";
				
			иначеЕсли Товары.Итог("Сумма")>=100000  и (Исполнитель = Справочники.Пользователи.НайтиПоКоду("Серков") или  Исполнитель = Справочники.Пользователи.НайтиПоКоду("Бондаренко Е.Д. (снабжение)") или Исполнитель = Справочники.Пользователи.НайтиПоКоду("Филатова С.В.")) Тогда	
				выполнена = ложь;  Согласованно = Ложь;
				СтатусЗадачи = Описание;
				ОписаниеЗадачи = "";
			иначе
				СтатусЗадачи = ?(Выполнена,	?(КолДа=N,"УТВЕРЖДЕНЫ все позиции возврата", 
				?(КолНет=N,"ОТКАЗАНО в возврате", 
				?(КолДа+КолНет=N, "СОГЛАСОВАНЫ все позиции возврата", "Согласованы не все позиции возврата")
				)   ), "Требуется согласовать возврат");
				Наименование = СтатусЗадачи+" для "+строка(Товары.Количество())+" тов. по Заявке на возврат "+строка(Объект.Номер)+" для Покупателя: "+строка(Объект.Контрагент);
			конецЕсли;
		иначе
			СтатусЗадачи = ?(Выполнена,	?(КолДа=N,"УТВЕРЖДЕНЫ все позиции возврата", 
			?(КолНет=N,"ОТКАЗАНО в возврате", 
			?(КолДа+КолНет=N, "СОГЛАСОВАНЫ все позиции возврата", "Согласованы не все позиции возврата")
			)   ), "Требуется согласовать возврат");
			Наименование = СтатусЗадачи+" для "+строка(Товары.Количество())+" тов. по Заявке на возврат "+строка(Объект.Номер)+" для Покупателя: "+строка(Объект.Контрагент);
		конецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Склады") тогда  // заявка на возврат
		ОписаниеЗадачи = ""; Выполнена = Истина;
		Если ТипДействия = 0 Тогда
			СтатусЗадачи = "НЕ согласовано создание склада";
			Описание = СтатусЗадачи+"
				|"+ОписаниеЗадачи;
			ПользовательФролов = Справочники.Пользователи.НайтиПоКоду("Фролов");
			СобытиеОбъект = ПодготовитьСобытие(ПользовательФролов, "Отказано в согласовании склада");
			Попытка
				ЭтотОбъект.Записать();
				СобытиеОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный)
			Исключение
			КонецПопытки;
		Иначе
			Если СокрЛП(Исполнитель.Код) = "Аверкина" Тогда
				СтатусЗадачи = "Согласовано создание склада";
				СоздатьНовыйСклад(СтатусЗадачи, ОписаниеЗадачи);
			Иначе//Если СокрЛП(Исполнитель.Код) = "Пелевин С.В." Тогда
				СтатусЗадачи    = "Выполнено первичное согласование создания склада.";
				ОписаниеЗадачи  = "Отправлено на согласование в отдел кадров.";
				СпрПользователь = Справочники.Пользователи.НайтиПоКоду("Аверкина");
				СоздатьЗадачуДляУтвержденияСклада(СпрПользователь, СтатусЗадачи, ОписаниеЗадачи);
			КонецЕсли;
		КонецЕсли;
		Возврат;
	КонецЕсли;	
	
	Описание = ОписаниеЗадачи; //Новое описание
	
КонецПроцедуры

процедура ИзменитьСтатусыВЗаявке() Экспорт
	 ДокОбъект = Объект.ПолучитьОбъект();
	 Для каждого стр из Товары Цикл
		 Если (найти(Наименование,"УТВЕРЖДЕНЫ")=0 и найти(Наименование,"СОГЛАСОВАНЫ")=0) и стр.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден тогда
			 ДокОбъект.Товары[стр.НомерСтрокиОснования-1].статус = Перечисления.СтатусыСтрокЗаказа.Согласован;
		иначеесли стр.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден тогда 	 
			 ДокОбъект.Товары[стр.НомерСтрокиОснования-1].статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден;
		 иначе
			 ДокОбъект.Товары[стр.НомерСтрокиОснования-1].статус = Перечисления.СтатусыСтрокЗаказа.Отменен;
		конецЕсли; 
	конецЦикла;
	ДокОбъект.Согласованно = Истина;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
конецПроцедуры	

//+++ 23.10.2017
Процедура ИзменитьСтатусыВКорректировкаЗаказа() Экспорт
	ДокОбъект = Объект.ПолучитьОбъект();
	Для каждого стр из Товары Цикл
		Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден 
			или  стр.Статус = Перечисления.СтатусыСтрокЗаказа.Отменен тогда 	
			масСтр = ДокОбъект.Товары.НайтиСтроки( новый Структура("НомерСтроки, Номенклатура", стр.НомерСтрокиОснования, стр.Номенклатура) );
			Если масСтр=неопределено или масСтр.Количество()=0 тогда
				#Если Клиент тогда
					сообщить("Не найдена строка № "+строка(стр.НомерСтрокиОснования)+" с товаром "+строка(стр.Номенклатура.Код)+" в документе!", СтатусСообщения.Внимание);
				#КонецЕсли
			Иначе	
				масСтр[0].Статус = стр.Статус;
				масСтр[0].Цена   = ?(стр.Статус = Перечисления.СтатусыСтрокЗаказа.Отменен, стр.ЦенаМин, стр.Цена);   // как в задаче!
				РассчитатьСуммуТабЧасти(масСтр[0], ДокОбъект);
				РассчитатьСуммуНДСТабЧасти(масСтр[0], ДокОбъект);
				
				#Если Клиент тогда
				Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.Отменен 
					Тогда сообщить("[x] В строке № "+строка(стр.НомерСтрокиОснования)+" цена товара "+строка(стр.Номенклатура.Код)+" ОТКАЗАНО в изменении!", СтатусСообщения.Внимание);
					Иначе сообщить("[v] В строке № "+строка(стр.НомерСтрокиОснования)+" цена товара "+строка(стр.Номенклатура.Код)+" УТВЕРЖДЕНО изменение.", СтатусСообщения.Информация);
				КонецЕсли;
				#КонецЕсли
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
	попытка
		ДокОбъект.Записать();
	исключение
		#Если Клиент тогда
		сообщить("Не удалось записать документ: "+ОписаниеОшибки(), СтатусСообщения.Важное);
		#КонецЕсли
	КонецПопытки;
КонецПроцедуры

Процедура ИзменитьСтатусыВУстановкеБонусов() Экспорт
	//Если не Выполнена Тогда
	Подтвержден = Ложь;
	Отменен = Ложь;
	неПолностью = Ложь;
	ДокОбъект = Объект.ПолучитьОбъект();
	
//+++12.01.2018 и для Бонусов и для ОТК тоже!		
		Для каждого стр из Товары Цикл
			Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден тогда 	 
				ДокОбъект.Бонусы[стр.НомерСтрокиОснования-1].Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден;
				//Подтвержден = Истина;
			иначе
				ДокОбъект.Бонусы[стр.НомерСтрокиОснования-1].статус = стр.Статус; //ЛЮБОЙ другой статус!
				//	//Отменен = Истина;
			конецЕсли; 
		конецЦикла;
		
		Для каждого стр из ДокОбъект.Бонусы Цикл
			Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.ПустаяСсылка() Тогда
				//Если стр.отменено = Ложь Тогда
				неПолностью = Истина;
				//КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	
	Если неПолностью = Ложь Тогда
			Для каждого стр из ДокОбъект.Бонусы Цикл
				Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден Тогда
					Подтвержден = Истина;
					//Докобъект.Бонусы[стр.НомерСтрокиБонуса-1].Согласован = Истина;
				КонецЕсли;
				Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.Отменен Тогда
					Отменен = Истина;
					//Докобъект.Бонусы[стр.НомерСтрокиБонуса-1].Выключено = Истина;
				КонецЕсли;
			КонецЦикла;
		
		Если Подтвержден и Отменен тогда 	
			ДокОбъект.Состояние = Перечисления.СостоянияОбъектов.Согласован;
		ИначеЕсли Подтвержден тогда
			ДокОбъект.Состояние = Перечисления.СостоянияОбъектов.Утвержден;
		ИначеЕсли Отменен тогда
			ДокОбъект.Состояние = Перечисления.СостоянияОбъектов.Отклонен;
			
		//+++ 06.02.2018
			ДокОбъект.Комментарий = "ОТМЕНЕНО /"+строка(Исполнитель)+"/ "+формат(ТекущаяДата(),"ДФ='dd.MM.yyyy (HH:mm)'")+"
			|"+ДокОбъект.Комментарий;
			
		КонецЕсли;
		
	КонецЕсли;//НеПолностью
	
	
	///Проведение
	//
	//ДокОбъект.Дата = ТекущаяДата();
	//Если ДокОбъект.Проведен тогда
	//ДокОбъект.Записать(РежимЗаписиДокумента.Проведение); //Движения из Документа!!!
	//Иначе //иногда и так бывает!
	//ДокОбъект.Записать();
	//КонецЕсли;
			
	Если Исполнитель <> Инициатор тогда //Менеджеру уходит задача после всех...закрыть задачу!
		
		ДатаИсполнения = ТекущаяДата();	 // время пред. исполнения
		Оповещение = истина;
		СрокОповещения = ТекущаяДата();	 // если есть оповещение
		
		Исполнитель = Инициатор; //31.01.2018 - ОБРАТНО на Менеджера!
		Выполнена   = ЛОЖЬ;
	//------- последний в списке ПоследовательностьСогласования - УТВЕРЖДАЕТ ---------------	
		ДокОбъект.Дата = ТекущаяДата();
		Если ДокОбъект.Состояние = Перечисления.СостоянияОбъектов.Отклонен тогда  // распроводим сразу!
			ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		иначе
			ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьСтатусыВВыплатеБонусов() Экспорт
	
	Подтвержден = Ложь;
	Отменен = Ложь;
	Согласован1 = ложь;
	неПолностью = Ложь;
	ДокОбъект = Объект.ПолучитьОбъект();
	
	Для каждого стр из Товары Цикл
		стрДок = ДокОбъект.Бонусы[стр.НомерСтрокиОснования-1]; 
			Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден тогда 	 
				стрДок.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден;
			иначе
				стрДок.статус = стр.Статус; //ЛЮБОЙ другой статус!
				
				//+++ 30.01.2018 ------------------изменение полей в документе!------------------------				
				Если стрДок.Статус = Перечисления.СтатусыСтрокЗаказа.Согласован тогда
					стрДок.Сумма = стр.ЦенаПоТипуЦен; // "Сумма продаж,р.";
			 		стрДок.СуммаОбрПродаж = стр.ЦенаМин; //"-Обр.Продажи,р.";
					стрДок.СуммаБонуса   = стр.Сумма; //"Бонус,р.";
					стрДок.ПроцентБонуса = стр.Скидка; //"Бонус,%";
				КонецЕсли;
				
			конецЕсли; 
		конецЦикла;
		
		Для каждого стр из ДокОбъект.Бонусы Цикл
			Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.ПустаяСсылка() Тогда
				неПолностью = Истина;
			КонецЕсли;	
		КонецЦикла;
 	
	Если неПолностью = Ложь Тогда
		Для каждого стр из ДокОбъект.Бонусы Цикл
			Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден Тогда
				Подтвержден = Истина;
			ИначеЕсли стр.Статус = Перечисления.СтатусыСтрокЗаказа.Отменен Тогда
				Отменен = Истина;
			ИначеЕсли стр.Статус = Перечисления.СтатусыСтрокЗаказа.Согласован Тогда
				Согласован1 = истина;
			КонецЕсли;
		КонецЦикла;
		
		Если (Подтвержден и Отменен) или Согласован1 тогда // третье состояние!
			ДокОбъект.Состояние = Перечисления.СостоянияОбъектов.Согласован;
		ИначеЕсли Подтвержден и НЕ Отменен и не Согласован1 тогда
			ДокОбъект.Состояние = Перечисления.СостоянияОбъектов.Утвержден;
		ИначеЕсли Отменен и НЕ Подтвержден и не Согласован1 тогда
			ДокОбъект.Состояние = Перечисления.СостоянияОбъектов.Отклонен;
			
		//+++ 06.02.2018
			ДокОбъект.Комментарий = "ОТМЕНЕНО /"+строка(Исполнитель)+"/ "+формат(ТекущаяДата(),"ДФ='dd.MM.yyyy (HH:mm)'")+"
			|"+ДокОбъект.Комментарий;
		КонецЕсли;
	КонецЕсли;//НеПолностью
	
	Если Исполнитель <> Инициатор тогда //Менеджер или Пятницкая должны закрыть задачу!
		
		ДатаИсполнения = ТекущаяДата();	 // время пред. исполнения
		Оповещение = истина;
		СрокОповещения = ТекущаяДата();	 // если есть оповещение
		
		Исполнитель = Инициатор; //31.01.2018 - ОБРАТНО на Менеджера!
		Выполнена   = ЛОЖЬ;
	//------- последний в списке ПоследовательностьСогласования - УТВЕРЖДАЕТ ---------------	
		ДокОбъект.Дата = ТекущаяДата();
		Если ДокОбъект.Состояние = Перечисления.СостоянияОбъектов.Отклонен тогда  // распроводим сразу!
			ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		иначе
			ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры


Процедура СоздатьЗадачуДляУтвержденияСклада(СпрПользователь, СтатусЗадачи, ОписаниеЗадачи)
	
	Описание = СтатусЗадачи+"
		|"+ОписаниеЗадачи;
	
	НовЗадача = ЭтотОбъект.Скопировать();
	
	ТекДата = ТекущаяДата();
	НовЗадача.Дата           = ТекДата;
	НовЗадача.СрокИсполнения = КонецДня(ТекДата);
	НовЗадача.Исполнитель    = СпрПользователь;
	НачатьТранзакцию();
	НовЗадача.Записать();
	ЭтотОбъект.Записать();
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры // СоздатьЗадачуДляУтвержденияСклада()

Функция ПодготовитьСобытие(ПользовательЛок, ОписаниеСобытия)
	
	ТекДата = ТекущаяДата();
	
	ДокСобытие=Документы.Событие.СоздатьДокумент();
	ДокСобытие.ТипСобытия=Перечисления.ВходящееИсходящееСобытие.Входящее;
	ДокСобытие.Важность=Перечисления.Важность.Высокая;
	ДокСобытие.ВидСобытия = Перечисления.ВидыСобытий.Прочее;
	ДокСобытие.СостояниеСобытия=Перечисления.СостоянияСобытий.Запланировано;
	ДокСобытие.НапомнитьОСобытии=Истина;
	ДокСобытие.ВремяНапоминания=ТекДата;//8 утра
	ДокСобытие.Дата=ТекДата;
	ДокСобытие.НачалоСобытия=ТекДата;//8 утра
	ДокСобытие.ОкончаниеСобытия=ТекДата;//
	ДокСобытие.ОписаниеСобытия=ОписаниеСобытия;
	ДокСобытие.СодержаниеСобытия=ОписаниеСобытия;
	ДокСобытие.Ответственный=ПользовательЛок;
	
	Возврат ДокСобытие;
	
КонецФункции // ПодготовитьСобытие()

Процедура СоздатьНовыйСклад(СтатусЗадачи, ОписаниеЗадачи)
	
	Описание = СтатусЗадачи+"
		|"+ОписаниеЗадачи;
	
	СтруктПарам = ЭтотОбъект.ДопПараметры.Получить();
	СкладОбъект = Справочники.Склады.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(СкладОбъект, СтруктПарам);
	СкладОбъект.ВидСклада = Перечисления.ВидыСкладов.Оптовый;
	ПользовательФролов = Справочники.Пользователи.НайтиПоКоду("Фролов");
	СобытиеОбъект = ПодготовитьСобытие(ПользовательФролов, "Создан новый склад");
	НачатьТранзакцию();
	СкладОбъект.Записать();
	СобытиеОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
	ЭтотОбъект.Записать();
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры // СоздатьНовыйСклад()
//Миронычев

Процедура СоздатьЗадачу(НаКорректировку = Ложь) Экспорт
	
	Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
	
	//+++ Шарафутдинов 07.02.2018
	Если НаБрак тогда
		
		Задача.Исполнитель 	  = Справочники.Пользователи.НайтиПоКоду("Пьянкова А.Н.");	
		задача.Инициатор   	  = ПараметрыСеанса.ТекущийПользователь;
		задача.Объект   	  = Объект;
		задача.Дата 		  = ТекущаяДата();
		задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
		задача.Оповещение     = Истина;
		задача.СрокОповещения = ТекущаяДата(); 
		Задача.Выполнена 	  = Ложь;
		задача.Товары.Загрузить(Товары.Выгрузить());
		
		задача.Наименование = "Выставлена претензия по браку "; 
		задача.Описание = "Выставлена претензия по браку ";  		
		
		Попытка
			задача.Записать();
			Сообщить(" + Сформирована задача по браку для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Информация );
		исключение
			Сообщить(" - Не удалось сформировать задачу по браку для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Внимание );	
		КонецПопытки;
		
		возврат;
		
	КонецЕсли;
	//--- Шарафутдинов 07.02.2018
	
	
	Если Объект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00138")//екатеринбург
		или Объект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00112")// сп
		Тогда
		Бухгалтер = Справочники.Пользователи.НайтиПоКоду("Клейменова О.Г.");	
	ИначеЕсли Объект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00133")//Москва
		или Объект.Подразделение = Справочники.Подразделения.НайтиПоКоду("00106")//РД
		Тогда
		Бухгалтер = Справочники.Пользователи.НайтиПоКоду("Парыгина С.В.");	
	Иначе
		Бухгалтер = Справочники.Пользователи.НайтиПоКоду("Миронова В.С.");	
	КонецЕсли;
	
	Если НаКорректировку Тогда    
		
		Задача.Исполнитель = Бухгалтер;	
		
		Если ВнутритарныйПересорт тогда
			задача.Наименование = "Создать корректировку отгрузки по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное); 
			задача.Описание = "Создать корректировку отгрузки по контрагенту: "+строка(Объект.Контрагент.НаименованиеПолное) + Символы.ПС +
			" по причине Внутритарного пересорта." + Символы.ПС;
		Иначе
			задача.Наименование = "Создать корректировку отгрузки по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное); 
			задача.Описание = "Создать корректировку отгрузки по контрагенту: "+строка(Объект.Контрагент.НаименованиеПолное) + Символы.ПС +
			" по причине вины склада." + Символы.ПС;
		КонецЕсли;
	Иначе
		//Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Пелевина Ирина");		
		Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Карасева Т.");				
		задача.Наименование = "Выставление претензии перевозчику по недогрузу контрагенту " + строка(Объект.Контрагент.НаименованиеПолное); 
		задача.Описание = "Выставление притензии перевозчику по недогрузу контрагенту: "+строка(Объект.Контрагент.НаименованиеПолное) + Символы.ПС +
		" по причине вина перевозчика." + Символы.ПС;
	КонецЕсли;
	
	задача.Инициатор   = ПараметрыСеанса.ТекущийПользователь;
	задача.Объект   	  = Объект;
	задача.Дата 		  = ТекущаяДата();
	задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
	задача.Оповещение     = Истина;
	задача.СрокОповещения = ТекущаяДата(); 
	задача.Товары.Загрузить(Товары.Выгрузить());
	Попытка
		задача.Записать();
		Сообщить(" + Сформирована задача по недогрузу для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Информация );
	исключение
		Сообщить(" - Не удалось сформировать задачу по недогрузу для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Внимание );	
	КонецПопытки;
	
	Если  Объект.РаботаетПоОбратнойПродаже тогда
		
		Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
		
		Если НаКорректировку Тогда 
			Мссв = ПолучитьСеансыИнформационнойБазы();
			Для Каждого ЭлементМассива Из Мссв Цикл
				Если ЭлементМассива.Пользователь.Имя="Невежина И.Н." Тогда
					Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Невежина И.Н.");
				ИначеЕсли ЭлементМассива.Пользователь.Имя="Ловыгина Е.И." Тогда
					Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Ловыгина Е.И.");
				Иначе
					Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Невежина И.Н.");
				КонецЕсли;
			КонецЦикла;
			
			Если ВнутритарныйПересорт тогда
				задача.Наименование = "Создать корректировку отгрузки по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное); 
				задача.Описание = "Создать корректировку отгрузки по контрагенту: "+строка(Объект.Контрагент.НаименованиеПолное) + Символы.ПС +
				" по причине Внутритарного пересорта." + Символы.ПС;
			Иначе
				задача.Наименование = "Создать корректировку отгрузки по контрагенту " + строка(Объект.Контрагент.НаименованиеПолное); 
				задача.Описание = "Создать корректировку отгрузки по контрагенту: "+строка(Объект.Контрагент.НаименованиеПолное) + Символы.ПС +
				" по причине вины склада." + Символы.ПС;
			КонецЕсли;
			
		КонецЕсли;
		
		задача.Инициатор   	= ПараметрыСеанса.ТекущийПользователь;
		задача.Объект   	  = Объект;
		задача.Дата 		  = ТекущаяДата();
		задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
		задача.Оповещение     = Истина;
		задача.СрокОповещения = ТекущаяДата(); 
		задача.Товары.Загрузить(Товары.Выгрузить());
		
		///+++ Шарафутдинов
		Если не ЗначениеЗаполнено(Задача.Исполнитель) тогда
			Возврат;
		КонецЕсли;
		///--- Шарафутдинов		
		
		Попытка
			Если Задача.Исполнитель <> задача.Инициатор Тогда
				задача.Записать();
				Сообщить(" + Сформирована задача по недогрузу для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Информация );
			КонецЕсли;
		исключение
			Сообщить(" - Не удалось сформировать задачу по недогрузу для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Внимание );	
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

//КонецМиронычев