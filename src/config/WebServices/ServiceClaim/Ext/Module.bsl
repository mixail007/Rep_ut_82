
Функция SetClaim(ArrayOfClaims,IsProbe,IsFormula = Ложь)
	// Вставить содержимое обработчика.
	URL = "http://yst.ru/claim";
		
	ТипXDTOРезультатОперации 		= ФабрикаXDTO.Тип(URL, "Result");
	ТипXDTOМассивРезультатОперации 	= ФабрикаXDTO.Тип(URL, "ArrayOfResults");
	ТипXDTOОбщаяструктураВозврата 	= ФабрикаXDTO.Тип(URL, "ResultAll");

	МассивРезультатовОперации 		= ФабрикаXDTO.Создать(ТипXDTOМассивРезультатОперации);
	ОбщаяСтруктураВозврата			= ФабрикаXDTO.Создать(ТипXDTOОбщаяструктураВозврата);
	
	Диски = Справочники.Номенклатура.НайтиПоКоду("0001752");
	
	
	Ошибка = "";
	Success = Истина;
	
	Список=ArrayOfClaims.ПолучитьСписок("Claims");
	
	ВсегоЗаписей=Список.Количество();	
	
	ОбъектДокументаБрака = Документы.ЗаявкаНаБрак.СоздатьДокумент();
	
	Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	ФИООтветственного = "";
	
	й = 0;
	МассивСтрокВозврата = Новый Массив;	
	
	Для  й=0 по ВсегоЗаписей-1 Цикл
		
		РезультатОперации 				= ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
		РезультатОперации.Error = Ложь;
		РезультатОперации.ContractorError = "";
		РезультатОперации.SNPError = "";
		РезультатОперации.NomenclatureError = "";
		РезультатОперации.QuantityError = "";
		РезультатОперации.ConditionError = "";
		РезультатОперации.TypeError = "";
		РезультатОперации.NumberError = "";
		
		Запись=Список.Получить(й);
		
		// Обязательные поля. 
		//ТипТовара 				= Запись.TypeOfProduct[0];
		ИНН 					= Запись.INN[0];
		ФИООтветственного 		= Запись.Responsible[0];
		КодТовара 				= Запись.Code[0];
		Количество 				= Запись.Quantity[0];
		СостояниеТовара			= Запись.Condition[0];
		ВидБрака				= Запись.TypeOfDefect[0];
		Пробег					= Запись.Run[0];
		Модель					= Запись.Model[0];
		Если IsFormula = Ложь Тогда
			Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН",ИНН);
		Иначе
			Контрагент = Справочники.Контрагенты.НайтиПоКоду("00232"); // ИП Малышева
			ИнформацияОКонтрагенте = Запись.InfoFormula;
		КонецЕсли;
		
		Если не ЗначениеЗаполнено(Контрагент) и IsFormula = Ложь Тогда 
			Success = Ложь;
			РезультатОперации.Error = Истина;
			РезультатОперации.ContractorError = "Контрагент не найден по ИНН";
		Конецесли;
		
		Если не ЗначениеЗаполнено(ФИООтветственного) и IsFormula = Ложь Тогда 
			Success = Ложь;
			РезультатОперации.Error = Истина;
			РезультатОперации.SNPError = "Не заполнено ФИО ответственного";
		Конецесли;
		
		Номенклатура = Справочники.Номенклатура.НайтиПоКоду(КодТовара);
		
		Если не ЗначениеЗаполнено(Номенклатура) Тогда 
			Success = Ложь;
			РезультатОперации.Error = Истина;
			РезультатОперации.NomenclatureError = "Номенклатура по коду не найдена.";
		Конецесли;
		 // Сакулина.25.08.2016. Перенесла в конец цикла
		//Если (ЗначениеЗаполнено(Номенклатура)) и (Номенклатура.ПринадлежитЭлементу(Диски)) Тогда 
		//	ОбъектДокументаБрака.ВидТовара = Перечисления.ВидыТоваров.Диски;
		//Иначе 
		//	ОбъектДокументаБрака.ВидТовара = Перечисления.ВидыТоваров.Шины;
		//Конецесли;
					
		
		Если не ЗначениеЗаполнено(Количество) Тогда 
			Success = Ложь;
			РезультатОперации.Error = Истина;
			РезультатОперации.QuantityError = "Неверное количество.";
		Конецесли;
		
		Если не ЗначениеЗаполнено(СостояниеТовара) Тогда 
			Success = Ложь;
			РезультатОперации.Error = Истина;
			РезультатОперации.ConditionError = "Не заполнено состояние товара.";
		Конецесли;
		
		Если СостояниеТовара<>1 и СостояниеТовара<>2 Тогда 
			Success = Ложь;
			РезультатОперации.Error = Истина;
			РезультатОперации.ConditionError = "Неверное состояние товара.";
		Конецесли;
		
		Если (ВидБрака<>11) и (ВидБрака<>12) и (ВидБрака<>13) и (ВидБрака<>14) и (ВидБрака<>15) и (ВидБрака<>16) и (ВидБрака<>17) и (ВидБрака<>18) и (ВидБрака<>21) и (ВидБрака<>22) и (ВидБрака<>23) и (ВидБрака<>24) и (ВидБрака<>25) и (ВидБрака<>26) и (ВидБрака<>27) и (ВидБрака<>31) и (ВидБрака<>32) и (ВидБрака<>33) и (ВидБрака<>34) и (ВидБрака<>35) и (ВидБрака<>36) и (ВидБрака<>99) Тогда 
			Success = Ложь;
			РезультатОперации.Error = Истина;
			РезультатОперации.TypeError = "Неверный вид брака.";
		КонецЕсли;
		
		/////////////// заполнение буфера
	    НомерДокументаРеализации 	= Запись.NumberOfDoc[0];
		ДатаДокументаРеализации 	= Запись.DateOfDoc;
		ДатаПроизводства 			= Запись.DateOfProduction[0];		
		Комментарий 				= Запись.Commentary[0];		
		СсылкаНаФото 				= Запись.HTTPLinkTOAPicture[0];		
		
		// Заполняем документ
		СтрУ = ОбъектДокументаБрака.Расшифровка.Добавить();
		СтрУ.Номенклатура						= Номенклатура;
		СтрУ.Количество							= Количество;	
		//СтрУ.НомерРеализации					= НомерДокументаРеализации;	
		Если IsFormula = Ложь    Тогда
			СтрУ.ДатаРеализации			= ДатаДокументаРеализации;	
		КонецЕсли;
		
		СтрУ.СостояниеТовара					= ?(СостояниеТовара=1,Перечисления.БракВидыСостоянийДиска.Неставленный,Перечисления.БракВидыСостоянийДиска.Ставленный);	
		СтрУ.ДатаПроизводства			= ДатаПроизводства;	
		СтрУ.ВидБракаСайт				= ВидБрака;	
		СтрУ.Пробег						= Пробег;	
		СтрУ.Марка						= Модель;	
		
		Если IsFormula = Ложь  Тогда
			Попытка 
				Запрос = Новый Запрос("ВЫБРАТЬ
				                      |	реализациятоваровуслуг.Ссылка,
				                      |	реализациятоваровуслуг.Контрагент
				                      |ИЗ
				                      |	Документ.РеализацияТоваровУслуг КАК реализациятоваровуслуг
				                      |ГДЕ
				                      |	реализациятоваровуслуг.Дата МЕЖДУ &дата1 И &дата2
				                      |	И реализациятоваровуслуг.Номер ПОДОБНО ""%"" + &номер
				                      |	И реализациятоваровуслуг.Контрагент.ИНН ПОДОБНО &ИНН");
				Запрос.УстановитьПараметр("Дата1",НачалоДня(ДатаДокументаРеализации));
				Запрос.УстановитьПараметр("Дата2",КонецДня(ДатаДокументаРеализации));
				Запрос.УстановитьПараметр("ИНН","%"+ИНН+"%");
				Запрос.УстановитьПараметр("Номер",НомерДокументаРеализации);
				Выб = Запрос.Выполнить().Выбрать();
				
				Если (Выб.Количество()<>1) Тогда 
					Success = Ложь;
					РезультатОперации.Error = Истина;
					РезультатОперации.NumberError="Не найден номер реализации.";
				КонецЕсли;
				
				Выб.Следующий();
				Контрагент = Выб.Контрагент; 
				НомерДокументаРеализации = Выб.Ссылка.Номер;
				СтрУ.НомерРеализации					= НомерДокументаРеализации;	
				СтрУ.Реализация = Выб.ссылка;
				
				// Сакулина. Проверяем есть ли товар в выбранной реализации
				Если СтрУ.Реализация <> Неопределено и СтрУ.Реализация <> Документы.РеализацияТоваровУслуг.ПустаяСсылка()
					и СтрУ.Номенклатура <> Справочники.Номенклатура.ПустаяСсылка() Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	РеализацияТоваровУслугТовары.Номенклатура,
					|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество
					|ИЗ
					|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
					|ГДЕ
					|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
					|	И РеализацияТоваровУслугТовары.Номенклатура = &Номенклатура
					|	И РеализацияТоваровУслугТовары.Количество >= &Количество
					|
					|СГРУППИРОВАТЬ ПО
					|	РеализацияТоваровУслугТовары.Номенклатура";
					Запрос.УстановитьПараметр("Ссылка",СтрУ.Реализация);
					Запрос.УстановитьПараметр("Номенклатура",СтрУ.Номенклатура);
					Запрос.УстановитьПараметр("Количество",СтрУ.Количество);

					Результат = Запрос.Выполнить();
					Выборка = Результат.Выбрать();
					Если Выборка.Количество() = 0 Тогда
						// Не найдена номенклатура в реализации
						Success = Ложь;
						РезультатОперации.Error = Истина;
						РезультатОперации.NumberError="Нет товара в реализации";
					КонецЕсли;
				КонецЕсли;
				// Сакулина. Проверяем есть ли товар в выбранной реализации
			Исключение			
				Success = Ложь;
				РезультатОперации.Error = Истина;
				РезультатОперации.NumberError="Не найден номер реализации.";
			Конецпопытки;
			
			
		Иначе
			ОбъектДокументаБрака.ИзФормулы = НомерДокументаРеализации;
		КонецЕсли;
		
		
		Если (ВидБрака=11) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.Биение;	
		ИначеЕсли (ВидБрака=12) Тогда 
			СтрУ.Качество				=	Справочники.Качество.ДефектЛитья;	
		ИначеЕсли (ВидБрака=13) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.ДефектЛКП;	
		ИначеЕсли (ВидБрака=14) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.Дисбаланс;	
		ИначеЕсли (ВидБрака=15) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.МеханическиеПовреждения;	
		ИначеЕсли (ВидБрака=16) Тогда
			СтрУ.Качество				= 	Справочники.Качество.НеПодходитНаАвто;	
		ИначеЕсли (ВидБрака=17) Тогда
			СтрУ.Качество				= 	Справочники.Качество.ДефектКомплектации;	
		ИначеЕсли (ВидБрака=18) Тогда
			СтрУ.Качество				= 	Справочники.Качество.Пересорт;	
		ИначеЕсли (ВидБрака=21) Тогда
			СтрУ.Качество				= 	Справочники.Качество.ДефектыПротектора;	
		ИначеЕсли (ВидБрака=22) Тогда 
			СтрУ.Качество				=	Справочники.Качество.ДефектыГермослояИлиДефектыОбкладкиПервогоСлоя;	
		ИначеЕсли (ВидБрака=23) Тогда
			СтрУ.Качество				= 	Справочники.Качество.ДефектыБоковины;	
		ИначеЕсли (ВидБрака=24) Тогда
			СтрУ.Качество				= 	Справочники.Качество.ДефектыБорта;	
		ИначеЕсли (ВидБрака=25) Тогда
			СтрУ.Качество				= 	Справочники.Качество.Дисбаланс;	
		ИначеЕсли (ВидБрака=26) Тогда
			СтрУ.Качество				= 	Справочники.Качество.ЗавышеноРадиальноеИлиБоковоеБиение;	
		ИначеЕсли (ВидБрака=27) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.ДефектОшиповки;
		//***2017.11.11 добавлены аксы
		ИначеЕсли (ВидБрака=31) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.ДефектУпаковки;	
		ИначеЕсли (ВидБрака=32) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.ПроизводственныйДефект;	
		ИначеЕсли (ВидБрака=33) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.МелкиеМеханическиеПовреждения;	
		ИначеЕсли (ВидБрака=34) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.НеполнаяЕмкость;	
		ИначеЕсли (ВидБрака=35) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.ИстечениеСрокаГодности;	
		ИначеЕсли (ВидБрака=36) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.НесоответствиеЗаявленнымХарактеристикам;	
		ИначеЕсли (ВидБрака=99) Тогда 
			СтрУ.Качество				= 	Справочники.Качество.Прочее;	
		Конецесли;
		
		СтрУ.Комментарий				= Комментарий;	
		СтрУ.Картинка					= СсылкаНаФото;	
		
		// Сакулина 25.08.2016
		// Если ошибки не было (Success = Ложь), тогда можем заполнить новые реквизиты. 
		Если Success = Истина Тогда
			Если  й=0 Тогда
				ОбъектДокументаБрака.ВидТовара = Номенклатура.ВидТовара;
			КонецЕсли;
		    СтрУ.СерийныйНомер = Запись.SerialNumber;
			
			//Запишем Поле ДополнительныеСвойства
			Если Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Шины Тогда
				ДополнительныеСвойства = "";
				//Если ЗначениеЗаполнено(Модель) Тогда
				//	ДополнительныеСвойства = "марка машины: " + Модель + " " + Символы.ПС;
				//КонецЕсли;
				//Если ЗначениеЗаполнено(Пробег) Тогда
				//	ДополнительныеСвойства = ДополнительныеСвойства + "пробег: " + Пробег + " " + Символы.ПС;
				//КонецЕсли;
								
				ДиаметрДиска = Запись.DiameterDisk;
				ШиринаОбода =  Запись.WidthRimDisk;
				РазмерДиска = Строка(ДиаметрДиска) + "*"+ Строка(ШиринаОбода);
				
				Если ЗначениеЗаполнено(ДиаметрДиска) и ЗначениеЗаполнено(ШиринаОбода)  Тогда
					ДополнительныеСвойства = ДополнительныеСвойства + "размер диска: " + РазмерДиска + " " + Символы.ПС;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Запись.Pressure) Тогда
					ДополнительныеСвойства = ДополнительныеСвойства + "давление в шине: " + Запись.Pressure + " " + Символы.ПС;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Запись.Location) Тогда
					ДополнительныеСвойства = ДополнительныеСвойства + "расположение шины: " + Запись.Location + " " + Символы.ПС;
				КонецЕсли;
				СтрУ.ДополнительныеСвойства = ДополнительныеСвойства;
			ИначеЕсли  Номенклатура.ВидТовара = Перечисления.ВидыТоваров.АКБ Тогда
				ДополнительныеСвойства = "";
				ИнфоОМашине = "";
								
				//DopInfoBattery = Запись.DopInfoTires;
				//Список=DopInfoBattery.ПолучитьСписок("DopInfoBattery");
								
				// В списке всегда подразумевается одна запись
				//ЗаписьДопИнфо=Список.Получить(0);
				
				Если ЗначениеЗаполнено(Модель) Тогда
					ИнфоОМашине = "модель авто: " + Модель + " " + Символы.ПС;

				КонецЕсли;
							
				Если ЗначениеЗаполнено(Запись.YearCar) Тогда
					ИнфоОМашине = ИнфоОМашине + "год выпуска авто:" + Формат(Запись.YearCar,"ДФ=гггг") + Символы.ПС;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Запись.EngineCapacity) Тогда
					ИнфоОМашине = ИнфоОМашине + "объем двигателя:" + Строка(Запись.EngineCapacity);
				КонецЕсли;
				СтрУ.Марка = ИнфоОМашине;
				
				Если ЗначениеЗаполнено(Запись.DateSaleKlient) Тогда
					СтрУ.ДатаПродажиКонПотребитель = Запись.DateSaleKlient;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Запись.DateDefect) Тогда
					СтрУ.ДатаВыявленияДефекта = Запись.DateDefect;
				КонецЕсли;
				
                Если ЗначениеЗаполнено(Запись.InfoKlient) Тогда
					СтрУ.ИнфоКонечныйПотребитель = Запись.InfoKlient;
				КонецЕсли;
			КонецЕсли;				
		КонецЕсли;
		// Сакулина 25.08.2016
		// Если ошибки не было (Success = Ложь), тогда можем заполнить новые реквизиты. 

		

		МассивРезультатовОперации.Добавить(ФормаXML.Элемент,URL,"Result",РезультатОперации);
	КонецЦикла;		
	
	ClaimGUID = "";
	ClaimNumber = "";
	
	// Запись документа, если Success = Истина
	Если (IsProbe) Тогда 
		;
	Иначе 
		Если (Success) Тогда 
			Если ЗначениеЗаполнено(Контрагент) Тогда 
				ОбъектДокументаБрака.Контрагент 						= Контрагент;
				// найдем менеджера
				//ОбъектДокументаБрака.Ответственный = Контрагент.ОсновнойМенеджерКонтрагента;
				Если Не IsFormula Тогда
					ЗакрепленныеОператорПомощник = ПолучитьЗакрпленныхЗаРегиономОператораПомощника(Контрагент.Регион, Контрагент);
					ОператорКонтрагента = ?(ЗакрепленныеОператорПомощник.Оператор = "", Справочники.Пользователи.ПустаяСсылка(), ЗакрепленныеОператорПомощник.Оператор);
					Если ОператорКонтрагента = Справочники.Пользователи.ПустаяСсылка() Тогда
						ОбъектДокументаБрака.Ответственный = СтрУ.Реализация.ДоговорКонтрагента.ОтветственноеЛицо;  //***остается как заглушка
					Иначе
						ОбъектДокументаБрака.Ответственный = ОператорКонтрагента; //***2018.05.23 №47249 
					КонецЕсли;
				Иначе
					ОбъектДокументаБрака.Ответственный = Справочники.Пользователи.НайтиПоКоду("Никулин А.В.");
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ФИООтветственного) Тогда 
				ОбъектДокументаБрака.ОтветственныйСоСтороныКлиента 		= ФИООтветственного;	
			КонецЕсли;
			
			Если НЕ IsFormula Тогда
			    ОбъектДокументаБрака.СозданЧерезТерминал = Истина;
			КонецЕсли;
			
			
			Если (ОбъектДокументаБрака.Расшифровка.Количество()>0) Тогда 
				Попытка 		
					ОбъектДокументаБрака.Дата = ТекущаяДата();
					Если IsFormula Тогда
						ОбъектДокументаБрака.КомментарийСклада = ИнформацияОКонтрагенте;
						ОбъектДокументаБрака.Записать(РежимЗаписиДокумента.Проведение);
					Иначе
						ОбъектДокументаБрака.Записать(РежимЗаписиДокумента.Запись);
					КонецЕсли;
					ClaimGUID = Строка(ОбъектДокументаБрака.Ссылка.УникальныйИдентификатор());
					ClaimNumber = Формат(ОбъектДокументаБрака.Номер,"ЧГ=0");
					
					Если ЗначениеЗаполнено(ОбъектДокументаБрака.Ссылка.Ответственный) Тогда
						//Создание задачи ответственному
						НоваяЗадача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
						НоваяЗадача.Исполнитель = ОбъектДокументаБрака.Ответственный; 
						НоваяЗадача.Дата = ТекущаяДата();
						НоваяЗадача.Оповещение = Истина;
						НоваяЗадача.СрокОповещения = ТекущаяДата();
						НоваяЗадача.Наименование = "Создана новая заявка на брак из Терминала ";
						НоваяЗадача.Описание = "Контрагент " + ОбъектДокументаБрака.Контрагент.Наименование + Символы.ПС + Строка(ОбъектДокументаБрака);
						НоваяЗадача.Объект = ОбъектДокументаБрака.Ссылка;
						НоваяЗадача.Записать();
					КонецЕсли;
				Исключение
					Ошибка = "Не удалось записать документ брака!";
					Success = Ложь;
				КонецПопытки;
				
				//***2017.11.16 т.к. GUID будет известен только после создания заявки, нет возможности передать ссылку на фото во вход.параметре
				Если НЕ ClaimGUID = "" И НЕ IsFormula Тогда
					//сгенерируем ссылку на страницу с фото для всех строк заявки
					СсылкаНаФото = "http://terminal.yst.ru/Claims/DetailsAdmin?guid="+ClaimGUID;
					Для каждого СтрТЧ ИЗ ОбъектДокументаБрака.Расшифровка Цикл
						СтрТЧ.Картинка = СсылкаНаФото;
					КонецЦикла;
					Попытка
						ОбъектДокументаБрака.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Ошибка = "Не удалось записать документ брака!";
						Success = Ложь;
					КонецПопытки;
				КонецЕсли;
				
			Иначе 
				Ошибка = "Нет данных для записи!";
				Success = Ложь;		
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
	//РезультатОперации.Success		 = Success;
	//РезультатОперации.Error			 = Ошибка;
	//РезультатОперации.Info			 = Строка(й+1);
				
	//Возврат РезультатОперации;
	ОбщаяСтруктураВозврата.ArrayOfResults = МассивРезультатовОперации;
	ОбщаяСтруктураВозврата.Success = Success;
	ОбщаяСтруктураВозврата.Error = Ошибка;
	ОбщаяСтруктураВозврата.ClaimGUID.Добавить(ClaimGUID);
	ОбщаяСтруктураВозврата.ClaimNumber.Добавить(ClaimNumber);
	
	Возврат ОбщаяСтруктураВозврата;
КонецФункции
