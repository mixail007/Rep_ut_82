
Функция CreateOrder(Partner, Goods, Storage, Comment, isTestOrder, ShippingDay, isReserve)
	
	URL = "http://37.1.84.50:8080/YStore";
		
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "Result");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	Товары = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
		
	Ошибка = "";
	Success = Истина;
	OrderNumber = "";
	OrderGUID = "";
	
	Контрагент = Справочники.Контрагенты.НайтиПоКоду(Partner);
	Если Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
		Success = Ложь;
		Ошибка = "Не удалось найти контрагента";
	КонецЕсли;
	
	//+++ 15.06.2015 - ограничение на первые 500 символов
	//Если СтрДлина(Comment) > 250 Тогда
	//	Success = Ложь;
	//	Ошибка = "Комментарий к заказу превышает допустимые 250 символов";
	//КонецЕсли;
	
	//Сохраняем каждый набор товаров в файл, чтоб сохранялась история о запросах	
	Сериализатор = Новый СериализаторXDTO(ФабрикаXDTO);
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл("D:\1C\YStore\Текущий.xml");
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Goods);
	ЗаписьXML.Закрыть();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл("D:\1C\YStore\Текущий.xml");
	
	ТаблицаЗаказа = Новый ТаблицаЗначений;
	ТаблицаЗаказа.Колонки.Добавить("НомерСтроки");
	ТаблицаЗаказа.Колонки.Добавить("Номенклатура");
	ТаблицаЗаказа.Колонки.Добавить("Количество");
	ТаблицаЗаказа.Колонки.Добавить("КоличествоОстаток");
	
	Запись = Новый Структура;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Имя = ЧтениеXML.Имя;
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			Запись.Вставить(Имя, ЧтениеXML.Значение);      //информацию фнутри блока XML помещаем в структуру
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ЧтениеXML.Имя = "Products" Тогда
				СтрокаТЗ = ТаблицаЗаказа.Добавить();
				СтрокаТЗ.НомерСтроки = Запись.RowNumber;
				СтрокаТЗ.Номенклатура = Запись.Code;
				СтрокаТЗ.Количество = Число(Запись.Quantity);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML.Закрыть();
	
	//Запрос свободных остатков
	Подразделение = Справочники.Подразделения.НайтиПоКоду(Storage);
	Если Подразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
		Success = Ложь;
		Ошибка = "Не удалось найти подразделение по коду " + Storage;
	КонецЕсли;
	
	//Аксессуары = Ложь;  //***2015.09.29 Аксы проверяются на своб. остатки наравне с другими товарами. Остатки сторонних поставщиков отключены.
	
	СписокНоменклатуры = Новый СписокЗначений;
	Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
		
		//Если в заказе Аксессуары, проверку остатков не делаем, а сразу создаем заказ
		Номенкл = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
		Если Номенкл = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Success = Ложь;
			Ошибка = "Не удалось найти номенклатуру по коду " + СтрокаТЗ.Номенклатура;
		КонецЕсли;
		СписокНоменклатуры.Добавить(СтрокаТЗ.Номенклатура);
		//Если Номенкл.ВидТовара = Перечисления.ВидыТоваров.Аксессуары Тогда
		//	Аксессуары = Истина;
		//	Прервать;
		//Иначе
		//	СписокНоменклатуры.Добавить(СтрокаТЗ.Номенклатура);
		//КонецЕсли;
	КонецЦикла;	
	
	//Если НЕ Аксессуары Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокЗаказа", СписокНоменклатуры);
		СписокКонтрагентовОТХ = Новый СписокЗначений;
		СписокКонтрагентовОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);
		Запрос.УстановитьПараметр("СписокКонтрагентовОТХ", СписокКонтрагентовОТХ);
				
		Запрос.Текст = "ВЫБРАТЬ спр.Ссылка 
						|ПОМЕСТИТЬ ВТ_Товары
						|ИЗ Справочник.Номенклатура КАК спр
						|	ГДЕ спр.Код В (&СписокЗаказа)
						|;
						|////////////////////////////////////////////////////////
						|ВЫБРАТЬ
		               |	А.Код,
		               |	А.ОстатокНаСкладахИОТХ - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура.Код, ТоварыНаОтветственномХраненииОстатки.Номенклатура.Код//+++
					   //23.01.2017
					   |//РезервКод ЕстьNull(ТоварыНаОтветственномХраненииОстатки.Номенклатура.Код, Резерв.Номенклатура.Код)
					   |		) КАК Код,
		               |		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток, 0) 
					   |//РезервКод + ЕСТЬNULL(Резерв.КоличествоОстаток, 0)
					   |КАК ОстатокНаСкладахИОТХ,
		               |		ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура, ТоварыНаОтветственномХраненииОстатки.Номенклатура) КАК Номенклатура
		               |	ИЗ
		               |		РегистрНакопления.ТоварыНаСкладах.Остатки( ,
		               |				Склад.ЗапретитьИспользование = ЛОЖЬ
		               |					И Склад.Транзитный = ЛОЖЬ
		               |					И Номенклатура В (ВЫБРАТЬ ВТ_товары.Ссылка из ВТ_товары) ) КАК ТоварыНаСкладахОстатки
					   //23.01.2017
					   |//РезервЗапрос
		               |			ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( 	,
		               |					 Склад.ЗапретитьИспользование = ЛОЖЬ
		               |						И Склад.Транзитный = ЛОЖЬ
		               |						И Номенклатура В (ВЫБРАТЬ ВТ_товары.Ссылка из ВТ_товары)
		               |						И Контрагент В (&СписокКонтрагентовОТХ) ) КАК ТоварыНаОтветственномХраненииОстатки
		               |			ПО ТоварыНаСкладахОстатки.Номенклатура = ТоварыНаОтветственномХраненииОстатки.Номенклатура) КАК А
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки( ,
		               |				ЗаказПокупателя.Проверен
		               |					И ЗаказПокупателя.Транзит = ЛОЖЬ
		               |					И Номенклатура В (ВЫБРАТЬ ВТ_товары.Ссылка из ВТ_товары) ) КАК ЗаказыПокупателейОстатки
		               |		ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура;
					   |УНИЧТОЖИТЬ ВТ_Товары;";
    							
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
			
			//Если Storage <> "00005" Тогда  //ФИЛИАЛЫ  23.01.2017 вместо 2х запросов - просто замена
			Если Подразделение.ОбособленноеПодразделение тогда
				Запрос.Текст = стрЗаменить(Запрос.Текст , "Склад.Транзитный = ЛОЖЬ", "Склад.Транзитный И Склад.Подразделение = &Подразделение");
				Запрос.Текст = стрЗаменить(Запрос.Текст , "ЗаказПокупателя.Транзит = ЛОЖЬ", "ЗаказПокупателя.Транзит И ЗаказПокупателя.Подразделение = &Подразделение");
			КонецЕсли;
			
	      //( 23.01.2017 - доп. остаток по резервному клиенту 
		  //07.06.17 Смирнов что б получить договор
		  
		  ЗаказВремДляДоговора = Документы.ЗаказПокупателя.СоздатьДокумент();
		  ЗаказВремДляДоговора.Дата = ТекущаяДата();
		  
		  ЗаказВремДляДоговора.Транзит = Истина;
		  Если Подразделение = Справочники.Подразделения.НайтиПоКоду("00005") Тогда  //Головное
			ЗаказВремДляДоговора.Транзит = Ложь;
		  КонецЕсли;

		  ЗаказВремДляДоговора.Подразделение = Подразделение;
		  ЗаказВремДляДоговора.Организация = Справочники.Организации.НайтиПоКоду("00001");
		  ЗаказВремДляДоговора.Контрагент  = Контрагент;
		  
		  ДоговорЗаказа = ОбменСУТИнтернетМагазин.найтиДоговорФакторингаПоОтветственному(ЗаказВремДляДоговора);
          ЗаказВремДляДоговора = неопределено;
		  
		  //КонтрРезерв = Контрагент.КонтрагентДляРезерваИМ; 
		  КонтрРезерв = ДоговорЗаказа.КонтрагентДляРезерваИМ;
			Если НЕ КонтрРезерв.Пустая() 
				И Контрагент.КонтрагентДляРезерваИМ<>Контрагент // не сам себе резерв!
				И КонтрРезерв.Код<>"П004703" тогда //не КолесаТУТ
				Запрос.Текст = стрЗаменить(Запрос.Текст ,	"ТоварыНаОтветственномХраненииОстатки.Номенклатура.Код//+++","");
				Запрос.Текст = стрЗаменить(Запрос.Текст ,  "//РезервКод",""); // 2 раза 
				
                Запрос.Текст = стрЗаменить(Запрос.Текст ,  "//РезервЗапрос","ПОЛНОЕ СОЕДИНЕНИЕ ("
				+"ВЫБРАТЬ
				 |	РезервИМ.Номенклатура,
				 |	РезервИМ.КоличествоОстаток
				 |ИЗ
				 |	РегистрНакопления.РезервДляИМ.Остатки(, КонтрагентДляРезерваИМ = &КонтрагентДляРезерваИМ 
				 |	И Номенклатура В (ВЫБРАТЬ ВТ_товары.Ссылка из ВТ_товары)
				 |	и Подразделение = &Подразделение    ) как РезервИМ
				| ГДЕ РезервИМ.КоличествоОстаток>0 "
				+") КАК Резерв 
				|ПО ТоварыНаСкладахОстатки.Номенклатура = Резерв.Номенклатура");
				Запрос.УстановитьПараметр("КонтрагентДляРезерваИМ", КонтрРезерв);
			КонецЕсли;
		    //) 23.01.2017 
			
		//Попытка
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		ДополнениеКОшибке = "";
		
		Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
			СтрокаРезультат = Результат.Найти(СтрокаТЗ.Номенклатура);
			Если СтрокаРезультат = Неопределено Тогда
				СтрокаТЗ.КоличествоОстаток = 0;
				Success = Ложь;
			Иначе
				СтрокаТЗ.КоличествоОстаток = СтрокаРезультат.СвободныйОстаток;
				Если СтрокаРезультат.СвободныйОстаток < СтрокаТЗ.Количество Тогда
					Success = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
		
	//КонецЕсли; //Аксессуары
	
	
	
	
	
	
	//+++( 16.03.2017 ---  Сторонние поставщики ----
	СрокДоставки0 = 0;  
	Поставщик0    = Справочники.Контрагенты.ПустаяСсылка();
	Статус0       = перечисления.СтатусыЗаказов.ПустаяСсылка();

	Если Success=Ложь тогда // товара нет в свободном остатке, но он может быть у стороннего поставщика
		
		Запрос2 = Новый Запрос;
		Запрос2.Текст = "ВЫБРАТЬ
		                |	спр.Ссылка КАК Товар
		                |ПОМЕСТИТЬ ВТ_Товары
		                |ИЗ
		                |	Справочник.Номенклатура КАК спр
		                |ГДЕ
		                |	спр.Код В(&СписокЗаказа)
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	Поставщики.Поставщик,
		                |	Поставщики.ОТХ,
		                |	Поставщики.СрокДоставки,
		                |	Поставщики.ОтправлятьЗаказыПоставщику,
		                |	Поставщики.ОдинЗаказПоставщикуВДень,
		                |	Поставщики.Код,
		                |	Поставщики.ТолькоПредоплата,
		                |	Поставщики.Включен
		                |ПОМЕСТИТЬ ВТ_Поставщики
		                |ИЗ
		                |	РегистрСведений.СрокиДоставки КАК Поставщики
		                |ГДЕ
		                |	Поставщики.ОТХ = ЛОЖЬ
		                |	И Поставщики.Включен
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	Ост.Контрагент КАК Поставщик,
		                |	Ост.Номенклатура,
						//17.03.2017
		                  |	Ост.Номенклатура.Код как Код,
		           //   |	Ост.Подразделение,
		                |	Ост.Остаток,
		                |	ВТ_Поставщики.СрокДоставки,
						|	ВТ_Поставщики.Код
		                |ИЗ
		                |	ВТ_Поставщики КАК ВТ_Поставщики
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиНоменклатурыКонтрагентов КАК Ост
		                |		ПО Ост.Контрагент = ВТ_Поставщики.Поставщик
		                |ГДЕ
		                |	Ост.Подразделение = &Подразделение
		                |	И Ост.Номенклатура В (ВЫБРАТЬ Товар ИЗ ВТ_Товары)
		                |	И Ост.Контрагент   В (ВЫБРАТЬ Поставщик ИЗ ВТ_Поставщики)
		            //    |	И ВТ_Поставщики.ТолькоПредоплата = &ТолькоПредоплата
					
					// будет браться только у одного поставщика!
						|Упорядочить по 
						|	СрокДоставки, 
						|	Код
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |УНИЧТОЖИТЬ ВТ_Товары
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |УНИЧТОЖИТЬ ВТ_Поставщики";
						
		Запрос2.УстановитьПараметр("СписокЗаказа", СписокНоменклатуры);
		Запрос2.УстановитьПараметр("Подразделение", ?(Подразделение.ОбособленноеПодразделение, Подразделение, справочники.Подразделения.ПустаяСсылка()) );
				
		результат2 = Запрос2.Выполнить();
		табл2   = результат2.Выгрузить();
		
		ЕстьУПоставщиков = истина;	//проверяем	наличие товаров по заказу у всех поставщиков!
		ВсеТоварыУОдногоПоставщика = ЛОЖЬ;
		
		Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
			
			//?  Есть на св.остатке... тогда не смотрим у поставщика... 
			//	 но заказ единый и не проделивается... товар всё равно будем "ждать" 7-10 дней
			Если  СтрокаТЗ.КоличествоОстаток = СтрокаТЗ.Количество тогда
				продолжить;	
			КонецЕсли;	
				
			Строка2 = табл2.Найти(СтрокаТЗ.Номенклатура, "Код"); //17.03.2017
			Если Строка2 = Неопределено Тогда
				СтрокаТЗ.КоличествоОстаток = 0;
				ЕстьУПоставщиков = Ложь;
			Иначе
				СтрокаТЗ.КоличествоОстаток = Строка2.Остаток;
				Поставщик1   = Строка2.Поставщик;
				СрокДоставки1= Строка2.СрокДоставки;
				
				Если СрокДоставки0<СрокДоставки1 тогда // максимальный срок доставки
					СрокДоставки0 = СрокДоставки1;
				КонецЕсли;
				
				Если Поставщик0.Пустая() тогда
					Поставщик0 = Поставщик1;   //первый попавшийся...
				иначеЕсли ВсеТоварыУОдногоПоставщика тогда	//если должен быть 1 заказ на 1 поставщика
					Если Поставщик1<>Поставщик0 тогда  
						ЕстьУПоставщиков = Ложь;  
						Ошибка = Ошибка + " Товар находится на различных складах ("+строка(СрокДоставки0)+" дн.)";
					КонецЕсли;
				КонецЕсли;
				
				// товар уже может частично быть на св.остатке...но он не проделится!
				КолЕсть = Строка2.Остаток + СтрокаТЗ.КоличествоОстаток;
				Если  КолЕсть < СтрокаТЗ.Количество Тогда 
					ЕстьУПоставщиков = Ложь;
					Ошибка = Ошибка + " Товара недостаточно на доп.складе № "+строка(Строка2.Код)+"! Товар:"+строка(СтрокаТЗ.Номенклатура.Код)
									+" надо: "+строка(СтрокаТЗ.Количество)+" шт. есть: "+строка(КолЕсть);
					СтрокаТЗ.КоличествоОстаток = КолЕсть;	
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;	
		
		Если ЕстьУПоставщиков тогда
			Success = Истина;
			Статус0     = перечисления.СтатусыЗаказов.ВОбработке;
			//Заказ НЕ проделивается!
			isTestOrder	= Истина; // нельзя проделить заказ для Стороннего поставщика... только после подтверждения
		КонецЕсли;
	
	КонецЕсли;
	//+++)
	
	//Создание заказа
	Если Success Тогда
		
		Заказ = Документы.ЗаказПокупателя.СоздатьДокумент();
		Заказ.Дата = ТекущаяДата();
		Если НЕ ShippingDay = "" Тогда  //передается дата отгрузки
			Заказ.ДатаОтгрузки = Дата(ShippingDay);
			Если СрокДоставки0>0 тогда //16.03.2017
				Заказ.ДатаОтгрузки = Заказ.ДатаОтгрузки + СрокДоставки0*86400; 
			КонецЕсли;	
		КонецЕсли;
		Если isReserve Тогда //Заказы могут быть резервные (закрытваются атвоматически через 10 дней) - дата отгрузки пустая, и с датой отгрузки	
			
			//16.03.2017 заказ у поставщика с доставкой несколько дней
			Если СрокДоставки0>0 тогда 
           		Заказ.ДатаОтгрузки = ТекущаяДата() + СрокДоставки0*86400;; //16.03.2017
            иначе
				Заказ.Резерв = Истина;
				Заказ.ДатаОтгрузки = '00010101000000';
			КонецЕсли;
		
		КонецЕсли;
		Заказ.Организация = Справочники.Организации.НайтиПоКоду("00001");
		
		//+++ 15.06.2015 - валютные клиенты
		Если Контрагент.Экспорт и Контрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов.Код<>"643" тогда
			Заказ.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00028"); //Базовая USD
			Заказ.ВалютаДокумента = Контрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов;
			
			//СтруктураВалюты = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Заказ.Дата, Новый Структура("Валюта", Заказ.ВалютаДокумента));
			//КурсДокумента      = СтруктураВалюты.Курс;
			//КратностьДокумента = СтруктураВалюты.Кратность;
            КурсДокумента = константы.КурсUSD.Получить(); //51.9749; //на 15.04.2015
            КратностьДокумента = 1;
			
			Заказ.КурсВзаиморасчетов = КурсДокумента;
			Заказ.КратностьВзаиморасчетов = КратностьДокумента;
			//Заказ.КурсВзаиморасчетов = 55;
			//Заказ.КратностьВзаиморасчетов = 1;
			
		Иначе // как было	
			Заказ.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"); //Крупный опт
			Заказ.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
			Заказ.КурсВзаиморасчетов = 1;
			Заказ.КратностьВзаиморасчетов = 1;
		КонецЕсли;
		Заказ.Контрагент = Контрагент;
		
		//16.03.2017 заказ у поставщика с доставкой несколько дней
		Если СрокДоставки0>0 тогда
		Заказ.Поставщик = Поставщик0;
		Заказ.Статус    = Статус0;
		КонецЕсли;
	
		//Плотников 10.08.2016
		Если ЗначениеЗаполнено(Контрагент.Грузополучатель) Тогда
			Заказ.Грузополучатель = Контрагент.Грузополучатель;
		КонецЕсли;
		
		Заказ.Транзит = Истина;
		
		Если Подразделение = Справочники.Подразделения.НайтиПоКоду("00005") Тогда  //Головное
			Заказ.Транзит = Ложь;
			
		ИначеЕсли ЗначениеЗаполнено(Подразделение) И Подразделение.ОбособленноеПодразделение Тогда 
			 Заказ.Склад = Подразделение.Склад;
			 Заказ.Ответственный = Справочники.Пользователи.НайтиПоКоду("Робот (центр - номенклатура)");
			 Заказ.Грузоотправитель = Подразделение.Контрагент;
		КонецЕсли;
				
		Если НЕ isTestOrder Тогда
			//Если НЕ Аксессуары Тогда
				Заказ.Проверен = Истина;
			//КонецЕсли;
		Иначе
			Если СрокДоставки0>0 тогда //16.03.2017
				Заказ.Комментарий = "Доставка "+строка(СрокДоставки0)+" дн. # ";	
            иначе
				Заказ.Комментарий = "Тестовый заказ ";
			КонецЕсли;
		КонецЕсли;
		
		Заказ.Подразделение = Подразделение;  
		Заказ.СуммаВключаетНДС = Истина;
		Заказ.УчитыватьНДС = Истина;
		Заказ.АвтоРезервирование = Истина;
		Заказ.ССайта = Истина;
		Заказ.НапомнитьОСобытии = Истина;
		Если НЕ ПользователиИнформационнойБазы.ТекущийПользователь().Имя = "YStoreAdmin" Тогда
			Заказ.ТипЗаказа = 4;
			Заказ.Комментарий = "WS: "+ Заказ.Комментарий + лев(Comment,500);  // 16.03.2017
		Иначе
			Заказ.ТипЗаказа = 3;
			Если СтрДлина(Comment) > 500 Тогда
		    Заказ.Комментарий = Заказ.Комментарий + "Store: " + лев(Comment,500);
			иначе
			Заказ.Комментарий = Заказ.Комментарий + "Store: " + Comment;
			КонецЕсли;
		КонецЕсли;
		
		//17.03.2017  для Евротранса...
		стр0 = СокрЛП(Comment);  
		н1 = Найти(стр0,"(");    
		н2 = Найти(стр0,")");
		нк = СтрЧислоВхождений(стр0,"("); // "Волосово( ВМП-34 )(2066639)"
		если нк>1 тогда
			стр1 = стр0; 
			пока н1>0 и н2>0 цикл
				стр0 = стр1;
				стр1 = прав(стр0, стрДлина(стр1)-н2);  //"(2066639)";
				н1=Найти(стр1,"("); н2=Найти(стр1,")");
			КонецЦикла;	
			н1=Найти(стр0,"("); н2=Найти(стр0,")");
		КонецЕсли;
		
		Если н1>0 и н2>0 тогда
			номерWS = сред(стр0, н1+1,  н2-н1-1 );
			Заказ.НомерВходящегоДокумента = номерWS;	
		КонецЕсли;

		//***договор получаем по единому алгоритму: сначала факторинг, потом - продажа
		//Заказ.ДоговорКонтрагента = ОбменСУТИнтернетМагазин.найтиДоговорФакторингаПоОтветственному(Заказ);
		Заказ.ДоговорКонтрагента = ДоговорЗаказа;
		
		//+++ 10.09.2015 - доп.условия на предоплатные договора - по типу!
		услПредоплатногоДоговора = (Заказ.ДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.НайтиПоКоду("00001")
										или Заказ.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ПредоплатаПоСчетам //+++14.08.2017
										или Заказ.ДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.ФакторингПредоплата ); //16.05.2017
		
		//Заказ.ДатаОплаты = ТекущаяДата() + 86400*Заказ.ДоговорКонтрагента.ЧислоДнейРезерваБезОплаты;
		Если  услПредоплатногоДоговора Тогда
			Если Заказ.ДоговорКонтрагента.КонтролироватьЧислоДнейЗадолженности Тогда
				ЧислоДнейСМоментаОтгрузки = мин(Заказ.ДоговорКонтрагента.ДопустимоеЧислоДнейЗадолженности, 30); // не более месяца !
			Иначе	
				ЧислоДнейСМоментаОтгрузки = 14;
			КонецЕсли;
        Иначе 
		    ЧислоДнейСМоментаОтгрузки = Заказ.ДоговорКонтрагента.ЧислоДнейРезерваБезОплаты;
		КонецЕсли;
		Заказ.ДатаОплаты = ТекущаяДата() + 86400 * ЧислоДнейСМоментаОтгрузки;
		//+++)
		
		СписокНом = Новый СписокЗначений;
		
		Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
			СтрокаТовары = Заказ.Товары.Добавить();
			СтрокаТовары.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
			СтрокаТовары.Коэффициент = 1;
			СтрокаТовары.Количество = СтрокаТЗ.Количество;
			ЗаполнитьЕдиницуЦенуПродажиТабЧасти(СтрокаТовары, Заказ, Константы.ВалютаРегламентированногоУчета.Получить()); 
			ЗаполнитьСтавкуНДСТабЧасти(СтрокаТовары, Заказ);
			РассчитатьСуммуТабЧасти(СтрокаТовары, Заказ);
			РассчитатьСуммуНДСТабЧасти(СтрокаТовары, Заказ);
			СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура));
		КонецЦикла;
		
		Если НЕ Заказ.Товары.Количество() = 0 Тогда
			
			ТабЗнач1  = Новый ТаблицаЗначений;
			ТабЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(Контрагент, СписокНом, ТекущаяДата());
			
			Если ТипЗнч(ТабЗнач1) = Тип("Строка") тогда // нет политики ценообразования документом
				табЗнач1  = новый ТаблицаЗначений;
				табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, СписокНом); //из регистра сведений
			КонецЕсли;	
			
			Для каждого стр1 из Заказ.Товары цикл
				стр2 = табЗнач1.найти(стр1.Номенклатура, "Номенклатура");
				стр1Цена = стр1.Цена;
				Если стр2 = неопределено тогда
					стр2МинимальнаяЦена = 0;
				иначе
					//+++( 10.09.2015 предоплатная цена может быть меньше!  
					//стр2МинимальнаяЦена = стр2.МинимальнаяЦена;
					Если услПредоплатногоДоговора тогда
        				попытка
							стр2МинимальнаяЦена = стр2.ЦенаСоСкидкойПредоплаты; 
						исключение // если экспортные цены или из Политики... то там нет поля ЦенаСоСкидкойПредоплаты	
							стр2МинимальнаяЦена = стр2.МинимальнаяЦена;
						КонецПопытки;	
					Иначе
						стр2МинимальнаяЦена = стр2.МинимальнаяЦена;
					КонецЕсли;	
					//+++)
				КонецЕсли;
				
				//-------------------------------
				Если стр1Цена<>стр2МинимальнаяЦена тогда
					стр1.Цена = стр2МинимальнаяЦена; // изменение Цены по политике ценообразования
					РассчитатьСуммуТабЧасти(стр1, Заказ);
					РассчитатьСуммуНДСТабЧасти(стр1, Заказ);
				КонецЕсли;
			КонецЦикла;
	
			
			Заказ.Записать(РежимЗаписиДокумента.Проведение);
			OrderGUID = Строка(Заказ.Ссылка.УникальныйИдентификатор());
			OrderNumber = СокрЛП(Заказ.Номер);
			
		КонецЕсли;
		
	Иначе
		
		//формируем возвращаемый массив
		Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
			Если СтрокаТЗ.КоличествоОстаток < СтрокаТЗ.Количество Тогда
				Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
				Товар.RowNumber.Добавить(Число(СтрокаТЗ.НомерСтроки));
				Товар.Code.Добавить(Строка(СтрокаТЗ.Номенклатура));
				Товар.Quantity.Добавить(Число(СтрокаТЗ.КоличествоОстаток));
				Товары.Products.Добавить(Товар);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	РезультатОперации.Products		 = Товары;
	РезультатОперации.Success		 = Success;
	РезультатОперации.OrderNumber	 = OrderNumber;
	РезультатОперации.OrderGUID		 = OrderGUID;
	РезультатОперации.Error			 = Ошибка;

	Если НЕ OrderNumber = "" Тогда
		Попытка
			ПереместитьФайл("D:\1C\YStore\Текущий.xml", "D:\1C\YStore\"+ OrderNumber +".xml");
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат РезультатОперации;	
	
КонецФункции

Функция DeleteOrder(OrderGUID)
	
	ОписаниеОшибки = "";
	Success = Истина;
	
	УИД = Новый УникальныйИдентификатор(СокрЛП(OrderGUID));
	ЗаказСсылка = Документы.ЗаказПокупателя.ПолучитьСсылку(УИД);
	Если (НЕ ЗаказСсылка = Документы.ЗаказПокупателя.ПустаяСсылка()) И (НЕ ЗаказСсылка = Неопределено) Тогда
		Если яштПоЗаказуБылиОтгрузки(ЗаказСсылка) Тогда
			ОписаниеОшибки = ОписаниеОшибки + " По заказу уже были отгрузки, корректировки или закрытие. Отмена невозможна.";
			Success = Ложь;
		КонецЕсли;	
		ДокОбъект = ЗаказСсылка.ПолучитьОбъект();
		ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		ДокОбъект.ПометкаУдаления = Истина;
		ДокОбъект.Записать();
	Иначе
		ОписаниеОшибки = ОписаниеОшибки + " Заказ покупателя не найден";
		Success = Ложь;
	КонецЕсли;
		
	URL = "http://37.1.84.50:8080/YStore";
		
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "ResultDel");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	РезультатОперации.Success = Success;
	РезультатОперации.Error = ОписаниеОшибки;
	Возврат РезультатОперации;	
	
КонецФункции
 
Функция ChangeOrder(OrderGUID, Goods, Comment, isReserve, ShippingDay)
	
	ОписаниеОшибки = "";
	Success = Истина;
	
	//13.03.15 Смирнов, если длина OrderGUID больше 12 символов, то заказ ищем по гуиду
	//если меньше, то ищем среди заказов Автоэксперта по входящему номеру
	Если СтрДлина(СокрЛП(OrderGUID))>12 тогда
		УИД = Новый УникальныйИдентификатор(СокрЛП(OrderGUID));
		ЗаказСсылка = Документы.ЗаказПокупателя.ПолучитьСсылку(УИД);
	Иначе
		ЗаказСсылка = Документы.ЗаказПокупателя.ПустаяСсылка();
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗаказПокупателя.Ссылка
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.НомерВходящегоДокумента = &НомерВходящегоДокумента
		|	И ЗаказПокупателя.Контрагент = &КонтрагентАЭ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказПокупателя.Дата УБЫВ";
		Запрос.УстановитьПараметр("НомерВходящегоДокумента",СокрЛП(OrderGUID));
		Запрос.УстановитьПараметр("КонтрагентАЭ",Справочники.Контрагенты.НайтиПоКоду("П000382"));
		Рез=Запрос.Выполнить().Выбрать();
		Пока Рез.Следующий() Цикл
			ЗаказСсылка=Рез.Ссылка; 
		КонецЦикла;
	КонецЕсли;
				 
	Если (НЕ ЗаказСсылка = Документы.ЗаказПокупателя.ПустаяСсылка()) И (НЕ ЗаказСсылка = Неопределено) Тогда
		
		Если ЗаказСсылка.ПометкаУдаления Тогда
			ОписаниеОшибки = ОписаниеОшибки + " Заказ помечен на удаление. Редактирование невозможно";
			Success = Ложь;
		КонецЕсли;
		
		Если яштПоЗаказуБылиОтгрузки(ЗаказСсылка) Тогда
			ОписаниеОшибки = ОписаниеОшибки + " По заказу уже были отгрузки, корректировки или закрытие. Изменение заказа невозможно.";
			Success = Ложь;
		КонецЕсли;	
		
		//еще одна проверка
		Если яштРезервыПоТоварам.ЕстьРезервПоЗаказу(ЗаказСсылка) Тогда
			ОписаниеОшибки = ОписаниеОшибки + " По заказу уже были отгрузки, корректировки или закрытие. Изменение заказа невозможно.";
			Success = Ложь;
		КонецЕсли;	
		
		//+++ 15.06.2015 - первые 250 символов
		//Если СтрДлина(Comment) > 250 Тогда
		//	Success = Ложь;
		//	Ошибка = "Комментарий к заказу превышает допустимые 250 символов";
		//КонецЕсли;
		
		Если Success Тогда
			
			ДокОбъект = ЗаказСсылка.ПолучитьОбъект();
			
			Если НЕ Comment = "" Тогда
				//+++ 15.06.2015 - первые 500 символов!  всего 512
				Если СтрДлина(Comment) > 500 Тогда
		        ДокОбъект.Комментарий = "Store: " + лев(Comment,500);
				иначе
				ДокОбъект.Комментарий = "Store: " + Comment;
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ShippingDay = "" Тогда  //передается дата отгрузки
				ДокОбъект.ДатаОтгрузки = Дата(ShippingDay);
			КонецЕсли;
			
			Если isReserve Тогда //Заказы могут быть резервные (закрытваются атвоматически через 10 дней) - дата отгрузки пустая, и с датой отгрузки	
				регСв = РегистрыСведений.КатегорииОбъектов.СоздатьНаборЗаписей();
				регСв.Отбор.Объект.ВидСравнения 	= ВидСравнения.Равно;
				регСв.Отбор.Объект.Значение 		= ЗаказСсылка;
				регСв.Отбор.Объект.Использование 	= Истина;
				регСв.Прочитать();
				Если регСв.Количество() > 0 Тогда
					Success = Ложь;
					Ошибка = "Заказ уже включен в отгрузку, установка признака Резерв невозможна";
				Иначе
					ДокОбъект.Резерв = Истина;
					ДокОбъект.ДатаОтгрузки = '00010101000000';
				КонецЕсли;	
			Иначе
				ДокОбъект.Резерв = Ложь;
			КонецЕсли;
			
			//изменение
			ТипОбъектаXDTO = ФабрикаXDTO.Тип("http://37.1.84.50:8080/YStore", "ArrayOfProducts");
			ЗаписьXML = Новый ЗаписьXML;
			ЗаписьXML.ОткрытьФайл("D:\1C\YStore\Текущий.xml");
			ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Goods,,"http://37.1.84.50:8080/YStore");
			ЗаписьXML.Закрыть();
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.ОткрытьФайл("D:\1C\YStore\Текущий.xml");
			ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипОбъектаXDTO);
			ОбъектXDTO.Проверить();
			ЧтениеXML.Закрыть();
			
			ТЗ = Новый ТаблицаЗначений;
			ТЗ.Колонки.Добавить("НомерСтроки");
			ТЗ.Колонки.Добавить("КодНоменклатуры");
			ТЗ.Колонки.Добавить("Количество");
			
			Для Каждого Запись ИЗ ОбъектXDTO.Products Цикл
				СтрокаТЗ = ТЗ.Добавить();
				СтрокаТЗ.НомерСтроки = Запись.RowNumber[0];
				СтрокаТЗ.КодНоменклатуры = Запись.Code[0];
				СтрокаТЗ.Количество = Запись.Quantity[0];
			КонецЦикла;
			
			//исключаем массу ошибок, когда заказ редактируется в 1С и не успевает еще синхронизироваться со Store
			//в массиве передается больше строк, чем есть в заказе
			Если ТЗ.Количество() > ДокОбъект.Товары.Количество() Тогда
				ОписаниеОшибки = ОписаниеОшибки + " Заказ покупателя отредактирован менеджером.";
				Success = Ложь;
			КонецЕсли;
			
			Если Success Тогда
				Для Каждого СтрТовар ИЗ ДокОбъект.Товары Цикл
					СтрокаТЗ = ТЗ.Найти(СтрТовар.Номенклатура.Код, "КодНоменклатуры");
					Если СтрокаТЗ = Неопределено Тогда
						СтрТовар.Количество = 0;
					Иначе
						Если НЕ СтрТовар.Номенклатура.Код = СтрокаТЗ.КодНоменклатуры Тогда 
							ОписаниеОшибки = ОписаниеОшибки + " Не совпадают коды товаров в строках массива и заказа.";
							Success = Ложь;
							Прервать;
						Иначе
							Если СтрокаТЗ.Количество > СтрТовар.Количество Тогда
								ОписаниеОшибки = ОписаниеОшибки + " В строке " + СтрокаТЗ.НомерСтроки + " количество изменено на большее";
								Success = Ложь;
								Прервать;
							ИначеЕсли СтрокаТЗ.Количество < СтрТовар.Количество Тогда
								СтрТовар.Количество = СтрокаТЗ.Количество;
								РассчитатьСуммуТабЧасти(СтрТовар, ДокОбъект);
								РассчитатьСуммуНДСТабЧасти(СтрТовар, ДокОбъект);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			//удаляем всем строки с количеством 0
			Если Success Тогда
				КоличествоСтрокТЧ = ДокОбъект.Товары.Количество();
				стр = 0;
				Пока стр < КоличествоСтрокТЧ Цикл
					Если ДокОбъект.Товары[стр].Количество = 0 Тогда
						ДокОбъект.Товары.Удалить(стр);
						КоличествоСтрокТЧ = КоличествоСтрокТЧ - 1;
					Иначе
						стр = стр+1;
					КонецЕсли;
				КонецЦикла; 
				ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		ОписаниеОшибки = ОписаниеОшибки + " Заказ покупателя не найден";
		Success = Ложь;
	КонецЕсли;
		
	URL = "http://37.1.84.50:8080/YStore";
		
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "ResultDel");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	РезультатОперации.Success = Success;
	РезультатОперации.Error = ОписаниеОшибки;
	Возврат РезультатОперации;	

КонецФункции


Функция CheckGoods(Goods, Storage)
	
	URL = "http://37.1.84.50:8080/YStore";
	
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "Result");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	Товары = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
	
	Ошибка = "";
	Success = Истина;
	
	ТаблицаЗаказа = Новый ТаблицаЗначений;
	ТаблицаЗаказа.Колонки.Добавить("НомерСтроки");
	ТаблицаЗаказа.Колонки.Добавить("Номенклатура");
	ТаблицаЗаказа.Колонки.Добавить("Количество");
	ТаблицаЗаказа.Колонки.Добавить("КоличествоОстаток");
	//ТаблицаЗаказа.Колонки.Добавить("Аксессуар");
	
	Список=Goods.ПолучитьСписок("Products");
	ВсегоЗаписей=Список.Количество();
	Для ии=0 по ВсегоЗаписей-1 Цикл
		Запись=Список.Получить(ии);
		СтрокаТЗ = ТаблицаЗаказа.Добавить();
		СтрокаТЗ.НомерСтроки = Запись.RowNumber[0];
		СтрокаТЗ.Номенклатура = Запись.Code[0];
		СтрокаТЗ.Количество = Число(Запись.Quantity[0]);
		
	КонецЦикла;		
	
	//Запрос свободных остатков
	Подразделение = Справочники.Подразделения.НайтиПоКоду(Storage);
	Если Подразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
		Success = Ложь;
		Ошибка = "Не удалось найти подразделение по коду " + Storage;
	КонецЕсли;
	
	СписокНоменклатуры = Новый СписокЗначений;
	Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
		
		//Если в заказе Аксессуары, проверку остатков не делаем, а сразу создаем заказ
		Номенкл = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
		Если Номенкл = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Success = Ложь;
			Ошибка = "Не удалось найти номенклатуру по коду " + СтрокаТЗ.Номенклатура;
		КонецЕсли;
		СписокНоменклатуры.Добавить(СтрокаТЗ.Номенклатура);
		//Если Номенкл.ВидТовара = Перечисления.ВидыТоваров.Аксессуары Тогда
		//	//Прервать;
		//	СтрокаТЗ.Аксессуар=истина;
		//	СтрокаТЗ.КоличествоОстаток=СтрокаТЗ.Количество;//аксы не проверяем
		//Иначе
			СписокНоменклатуры.Добавить(СтрокаТЗ.Номенклатура);
		//	СтрокаТЗ.Аксессуар=ложь;
		//КонецЕсли;
		
	КонецЦикла;	
	
	Если СписокНоменклатуры.Количество()>0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокЗаказа", СписокНоменклатуры);
		СписокКонтрагентовОТХ = Новый СписокЗначений;
		СписокКонтрагентовОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);
		Запрос.УстановитьПараметр("СписокКонтрагентовОТХ", СписокКонтрагентовОТХ);
		
		Если Storage = "00005" Тогда  //Головное
			
			Запрос.Текст = "ВЫБРАТЬ
			|	А.Код,
			|	А.ОстатокНаСкладахИОТХ - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток
			|ИЗ
			|	(ВЫБРАТЬ
			|		ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура.Код, ТоварыНаОтветственномХраненииОстатки.Номенклатура.Код) КАК Код,
			|		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладахИОТХ,
			|		ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура, ТоварыНаОтветственномХраненииОстатки.Номенклатура) КАК Номенклатура
			|	ИЗ
			|		РегистрНакопления.ТоварыНаСкладах.Остатки(
			|				,
			|				НЕ Склад.ЗапретитьИспользование
			|					И НЕ Склад.Транзитный
			|					И Номенклатура.Код В (&СписокЗаказа)) КАК ТоварыНаСкладахОстатки
			|			ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
			|					,
			|					НЕ Склад.ЗапретитьИспользование
			|						И НЕ Склад.Транзитный
			|						И Номенклатура.Код В (&СписокЗаказа)
			|						И Контрагент В (&СписокКонтрагентовОТХ)) КАК ТоварыНаОтветственномХраненииОстатки
			|			ПО ТоварыНаСкладахОстатки.Номенклатура = ТоварыНаОтветственномХраненииОстатки.Номенклатура) КАК А
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
			|				,
			|				ЗаказПокупателя.Проверен
			|					И НЕ ЗаказПокупателя.Транзит
			|					И Номенклатура.Код В (&СписокЗаказа)) КАК ЗаказыПокупателейОстатки
			|		ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура";
			
		Иначе //Обособленное
			
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
			
			Запрос.Текст = "ВЫБРАТЬ
			|	А.Код,
			|	А.ОстатокНаСкладахИОТХ - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток
			|ИЗ
			|	(ВЫБРАТЬ
			|		ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура.Код, ТоварыНаОтветственномХраненииОстатки.Номенклатура.Код) КАК Код,
			|		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладахИОТХ,
			|		ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура, ТоварыНаОтветственномХраненииОстатки.Номенклатура) КАК Номенклатура
			|	ИЗ
			|		РегистрНакопления.ТоварыНаСкладах.Остатки(
			|				,
			|				НЕ Склад.ЗапретитьИспользование
			|					И Склад.Транзитный
			|					И Номенклатура.Код В (&СписокЗаказа)
			|					И Склад.Подразделение = &Подразделение) КАК ТоварыНаСкладахОстатки
			|			ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
			|					,
			|					НЕ Склад.ЗапретитьИспользование
			|						И Склад.Транзитный
			|						И Номенклатура.Код В (&СписокЗаказа)
			|						И Контрагент В (&СписокКонтрагентовОТХ)
			|						И Склад.Подразделение = &Подразделение) КАК ТоварыНаОтветственномХраненииОстатки
			|			ПО ТоварыНаСкладахОстатки.Номенклатура = ТоварыНаОтветственномХраненииОстатки.Номенклатура) КАК А
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
			|				,
			|				ЗаказПокупателя.Проверен
			|					И ЗаказПокупателя.Транзит
			|					И Номенклатура.Код В (&СписокЗаказа)
			|					И ЗаказПокупателя.Подразделение = &Подразделение) КАК ЗаказыПокупателейОстатки
			|		ПО А.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура";
			
		КонецЕсли;
		
		//Попытка
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		ДополнениеКОшибке = "";
		
		Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
			//Если СтрокаТЗ.Аксессуар тогда //аксы не проверяем
			//	продолжить;
			//КонецЕсли;	
			СтрокаРезультат = Результат.Найти(СтрокаТЗ.Номенклатура);
			Если СтрокаРезультат = Неопределено Тогда
				СтрокаТЗ.КоличествоОстаток = 0;
				Success = Ложь;
			Иначе
				СтрокаТЗ.КоличествоОстаток = СтрокаРезультат.СвободныйОстаток;
				Если СтрокаРезультат.СвободныйОстаток < СтрокаТЗ.Количество Тогда
					Success = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
		
	КонецЕсли;
	
	//формируем возвращаемый массив
	Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
		Если СтрокаТЗ.КоличествоОстаток < СтрокаТЗ.Количество Тогда
			Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
			Товар.RowNumber.Добавить(Число(СтрокаТЗ.НомерСтроки));
			Товар.Code.Добавить(Строка(СтрокаТЗ.Номенклатура));
			Товар.Quantity.Добавить(Число(СтрокаТЗ.КоличествоОстаток));
			Товары.Products.Добавить(Товар);
		КонецЕсли;
	КонецЦикла;
	
	РезультатОперации.Products		 = Товары;
	РезультатОперации.Success		 = Success;
	РезультатОперации.OrderNumber	 = "";
	РезультатОперации.OrderGUID		 = "";
	РезультатОперации.Error			 = Ошибка;
	
	Возврат РезультатОперации;
	
КонецФункции


Функция CreateSeasonOrder(Partner, Goods, Storage, ActionDate, Comment, SeasonPostId)

	URL = "http://37.1.84.50:8080/YStore";
		
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "ResultSeasonOrder");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
		
	Ошибка = "";
	Success = Истина;
	OrderGUID = "";
	OrderNumber = "";
	
	Контрагент = Справочники.Контрагенты.НайтиПоКоду(Partner);
	Если Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
		Success = Ложь;
		Ошибка = "Не удалось найти контрагента";
	КонецЕсли;
	
	//Сохраняем каждый набор товаров в файл, чтоб сохранялась история о запросах	
	Сериализатор = Новый СериализаторXDTO(ФабрикаXDTO);
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл("D:\1C\YStore\ТекущийСезонный.xml");
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Goods);
	ЗаписьXML.Закрыть();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл("D:\1C\YStore\ТекущийСезонный.xml");
	
	ТаблицаЗаказа = Новый ТаблицаЗначений;
	ТаблицаЗаказа.Колонки.Добавить("НомерСтроки");
	ТаблицаЗаказа.Колонки.Добавить("Номенклатура");
	ТаблицаЗаказа.Колонки.Добавить("Количество");
	
	Запись = Новый Структура;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Имя = ЧтениеXML.Имя;
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			Запись.Вставить(Имя, ЧтениеXML.Значение);      //информацию фнутри блока XML помещаем в структуру
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ЧтениеXML.Имя = "Products" Тогда
				СтрокаТЗ = ТаблицаЗаказа.Добавить();
				СтрокаТЗ.НомерСтроки = Запись.RowNumber;
				СтрокаТЗ.Номенклатура = Запись.Code;
				СтрокаТЗ.Количество = Число(Запись.Quantity);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML.Закрыть();
	
	//Запрос свободных остатков
	Подразделение = Справочники.Подразделения.НайтиПоКоду(Storage);
	Если Подразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
		Success = Ложь;
		Ошибка = "Не удалось найти подразделение по коду " + Storage;
	КонецЕсли;
	
	//Аксессуары = Ложь;
	
	Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
		Номенкл = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
		Если Номенкл = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Success = Ложь;
			Ошибка = "Не удалось найти номенклатуру по коду " + СтрокаТЗ.Номенклатура;
		КонецЕсли;
	КонецЦикла;	
		
	//Создание заказа
	Если Success Тогда
		
		Заказ = Документы.ЗаказПокупателяСезонный.СоздатьДокумент();
		Заказ.Дата = ТекущаяДата();
		Заказ.ДатаДействияПо = ActionDate;
		Заказ.Организация = Справочники.Организации.НайтиПоКоду("00001");
		
		//+++ 15.06.2015 - валютные клиенты
		Если Контрагент.Экспорт и Контрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов.Код<>"643" тогда
			Заказ.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00028"); //Базовая USD
			Заказ.ВалютаДокумента = Контрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов;
			
            КурсДокумента = константы.КурсUSD.Получить(); //51.9749; //на 15.04.2015
            КратностьДокумента = 1;
			
			Заказ.КурсВзаиморасчетов = КурсДокумента;
			Заказ.КратностьВзаиморасчетов = КратностьДокумента;
		Иначе // как было	
			Заказ.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"); //Крупный опт
			Заказ.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
			Заказ.КурсВзаиморасчетов = 1;
			Заказ.КратностьВзаиморасчетов = 1;
		КонецЕсли;
		Заказ.Контрагент = Контрагент;
		Заказ.Транзит = Ложь;
						
		//+++ 15.06.2015 - первые 500 символов!  всего 512
		Если СтрДлина(Comment) > 500 Тогда
	        Заказ.Комментарий = "Store: " + лев(Comment,500);
		иначе
			Заказ.Комментарий = "Store: " + Comment;
		КонецЕсли;
		Заказ.Подразделение = Подразделение;  
		Заказ.СуммаВключаетНДС = Истина;
		Заказ.УчитыватьНДС = Истина;
		Заказ.НапомнитьОСобытии = Истина;
		
		Если НЕ SeasonPostId = Неопределено Тогда
			Заказ.SeasonPostId = SeasonPostId;
		КонецЕсли;
		
		//***договор получаем по единому алгоритму: сначала факторинг, потом - продажа
		Заказ.ДоговорКонтрагента = ОбменСУТИнтернетМагазин.найтиДоговорФакторингаПоОтветственному(Заказ);
		
		////+++ 10.09.2015 - для сезонного заказа НЕ ДОЛЖНО БЫТЬ предоплатного договора! 
		////    цены всегда отсрочечные! и не пересчитываются на предоплатные ДАЖЕ если договор будет предоплатный!
		//	услПредоплатногоДоговора = (Заказ.ДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.НайтиПоКоду("00001") );
		
		СписокНом = Новый СписокЗначений;
		
		Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
			СтрокаТовары = Заказ.Товары.Добавить();
			СтрокаТовары.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
			СтрокаТовары.Коэффициент = 1;
			СтрокаТовары.Количество = СтрокаТЗ.Количество;
			ЗаполнитьЕдиницуЦенуПродажиТабЧасти(СтрокаТовары, Заказ, Константы.ВалютаРегламентированногоУчета.Получить()); 
			ЗаполнитьСтавкуНДСТабЧасти(СтрокаТовары, Заказ);
			РассчитатьСуммуТабЧасти(СтрокаТовары, Заказ);
			РассчитатьСуммуНДСТабЧасти(СтрокаТовары, Заказ);
			СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура));
		КонецЦикла;
		
		Если НЕ Заказ.Товары.Количество() = 0 Тогда
			
			ТабЗнач1  = Новый ТаблицаЗначений;
			ТабЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(Контрагент, СписокНом, ТекущаяДата());
			
			Если ТипЗнч(ТабЗнач1) = Тип("Строка") тогда // нет политики ценообразования документом
				табЗнач1  = новый ТаблицаЗначений;
				табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, СписокНом); //из регистра сведений
			КонецЕсли;	
			
			Для каждого стр1 из Заказ.Товары цикл
				стр2 = табЗнач1.найти(стр1.Номенклатура, "Номенклатура");
				стр1Цена = стр1.Цена;
				Если стр2 = неопределено тогда
					стр2МинимальнаяЦена = 0;
				иначе
					стр2МинимальнаяЦена = стр2.МинимальнаяЦена;
				КонецЕсли;
				
				//-------------------------------
				Если стр1Цена<>стр2МинимальнаяЦена тогда
					стр1.Цена = стр2МинимальнаяЦена; // изменение Цены по политике ценообразования
					РассчитатьСуммуТабЧасти(стр1, Заказ);
					РассчитатьСуммуНДСТабЧасти(стр1, Заказ);
				КонецЕсли;
			КонецЦикла;
	
			
			Заказ.Записать(РежимЗаписиДокумента.Запись);
			OrderGUID = Строка(Заказ.Ссылка.УникальныйИдентификатор());
			OrderNumber = СокрЛП(Заказ.Номер);
			
		КонецЕсли;
		
	КонецЕсли;
	
	РезультатОперации.Success		 = Success;
	РезультатОперации.OrderNumber	 = OrderNumber;
	РезультатОперации.OrderGUID		 = OrderGUID;
	РезультатОперации.Error			 = Ошибка;

	Если НЕ OrderNumber = "" Тогда
		Попытка
			ПереместитьФайл("D:\1C\YStore\ТекущийСезонный.xml", "D:\1C\YStore\"+ OrderNumber +".xml");
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат РезультатОперации;	
	
КонецФункции

