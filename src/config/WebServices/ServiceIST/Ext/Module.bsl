
Функция CreateSupplierOrder(Partner, Goods, Comment, DocNumber)
	Success = истина;
	Ошибка = "";
	
	URL = "www.yst.ru/ist";
	
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "Result");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	
	
	Контрагент = Справочники.Контрагенты.НайтиПоКоду(СокрЛП(Partner));
	
	Если не ЗначениеЗаполнено(Контрагент) тогда
		Success = ложь;
		Ошибка = Ошибка+"Не найден контрагент с кодом "+СокрЛП(Partner)+"."; 
	КонецЕсли;
	
	Если Success тогда
		ДоговорПоставки = ПолучитьДоговорПоставки(Контрагент);
    КонецЕсли;

	Если не ЗначениеЗаполнено(ДоговорПоставки) тогда
		Success = ложь;
		Ошибка = Ошибка+"Не найден договор поставки."; 
	КонецЕсли;
	
	Если СокрЛП(DocNumber)="" тогда
		Success = ложь;
		Ошибка = Ошибка+Символы.ПС+"Не указан номер входящего документа.";
	КонецЕсли;
	
	//Поищем заказ по номеру входящего документа, который равен номеру заказа покупателя в базе ИСТ
	Если Success тогда
		ЗаказПоставщикуСсылка = НайтиЗаказПоставщику(Контрагент,СокрЛП(DocNumber));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаказПоставщикуСсылка) тогда
		ЗаказПоставщикуОб = ЗаказПоставщикуСсылка.ПолучитьОбъект();
	Иначе
		ЗаказПоставщикуОб = Документы.ЗаказПоставщику.СоздатьДокумент();
		
		ЗаказПоставщикуОб.Дата = ТекущаяДата();
		ЗаказПоставщикуОб.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
		ЗаказПоставщикуОб.Контрагент  = Контрагент;
		
		ДнейОтсрочки = ?(ДоговорПоставки.ДопустимоеЧислоДнейЗадолженности=0, 30, ДоговорПоставки.ДопустимоеЧислоДнейЗадолженности);
		
		ЗаказПоставщикуОб.ДатаПоступления = ТекущаяДата();
		ЗаказПоставщикуОб.ДатаОплаты = ТекущаяДата() + 24*60*60*ДнейОтсрочки;
		ЗаказПоставщикуОб.ДоговорКонтрагента = ДоговорПоставки;;
		ЗаказПоставщикуОб.Комментарий = СокрЛП(Comment);
		ЗаказПоставщикуОб.КратностьВзаиморасчетов  = 1;
		ЗаказПоставщикуОб.КурсВзаиморасчетов = 1;
		ЗаказПоставщикуОб.НомерВходящегоДокумента = СокрЛП(DocNumber);
		ЗаказПоставщикуОб.Организация = Справочники.Организации.НайтиПоКоду("00001");
		ЗаказПоставщикуОб.Подразделение = Справочники.Подразделения.НайтиПоКоду("00005");
		ЗаказПоставщикуОб.УчитыватьНДС = истина;
		ЗаказПоставщикуОб.СуммаВключаетНДС = истина;
		
		ТаблицаЗаказа = Новый ТаблицаЗначений;
		ТаблицаЗаказа.Колонки.Добавить("Номенклатура");
		ТаблицаЗаказа.Колонки.Добавить("НоменклатураСпр");
		ТаблицаЗаказа.Колонки.Добавить("Количество");
		ТаблицаЗаказа.Колонки.Добавить("Цена");
		
		Для каждого товар из Goods.Product цикл
			СтрокаТЗ = ТаблицаЗаказа.Добавить();
			СтрокаТЗ.Номенклатура = СокрЛП(товар.Code);
			СтрокаТЗ.Количество =  Число(товар.Quantity);
			СтрокаТЗ.НоменклатураСпр=Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
			
			Если не ЗначениеЗаполнено(СтрокаТЗ.НоменклатураСпр) тогда
				Success = ложь;
				Ошибка = Ошибка+Символы.ПС+"Не найдена номенклатура с кодом: "+СокрЛП(товар.Code);
			КонецЕсли;
			
			СтрокаТЗ.Цена =  Число(товар.Price);
		КонецЦикла;
		
		
		Если Success тогда
			для каждого стр из  ТаблицаЗаказа цикл
				нстр = ЗаказПоставщикуОб.Товары.Добавить();
				нстр.Номенклатура = стр.НоменклатураСпр;
				нстр.Количество = стр.Количество;
				нстр.Цена = стр.цена;
				нстр.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
				нстр.ЕдиницаИзмерения = нстр.Номенклатура.ЕдиницаХраненияОстатков;
				
				ПриИзмененииНоменклатурыТабЧасти(нстр, ЗаказПоставщикуОб);
				
				// Рассчитываем реквизиты табличной части.
				РассчитатьСуммуТабЧасти(нстр, ЗаказПоставщикуОб);
				РассчитатьСуммуНДСТабЧасти(нстр, ЗаказПоставщикуОб);
			КонецЦикла;
			
			попытка
				ЗаказПоставщикуОб.Записать(РежимЗаписиДокумента.Проведение);
				//ЗаказПоставщикуОб.Записать(РежимЗаписиДокумента.Запись);
				ЗаказПоставщикуСсылка = ЗаказПоставщикуОб.Ссылка;
			исключение
				Success = ложь;
				Ошибка = Ошибка + Символы.ПС+ОписаниеОшибки();
				ЗаказПоставщикуСсылка = Документы.ЗаказПоставщику.ПустаяСсылка();
			КонецПопытки;
			
			Если Success тогда
				//Создадим задачу / отправим письмо
				Попытка
					Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
					Задача.Дата = ТекущаяДата();
					Задача.Исполнитель = ЗаказПоставщикуОб.ДоговорКонтрагента.ОтветственноеЛицо;
					Задача.Наименование  = "Создан " + ЗаказПоставщикуСсылка + "от поставщика "+ЗаказПоставщикуОб.Контрагент;
					Задача.Описание = "Создан " + ЗаказПоставщикуСсылка + "от поставщика "+ЗаказПоставщикуОб.Контрагент;
					Задача.Оповещение  = истина;
					Задача.Объект = ЗаказПоставщикуСсылка;
					Задача.Записать();
					//письмо
					АдресПолучателя="200200140@yst.ru";
					УЗ = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("00011");//1c@yst.ru
					СписокФайловВложений=Новый СписокЗначений;
					ТекстСообщения = "Создан заказ поставщику" + Символы.ПС + ЗаказПоставщикуСсылка;
					Тема = "Создан заказ поставщику "+ЗаказПоставщикуОб.Контрагент;  
					яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(АдресПолучателя,СписокФайловВложений, УЗ, ТекстСообщения, Тема);
				исключение
					Ошибка = Ошибка + Символы.ПС+ОписаниеОшибки();
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	РезультатОперации.Success		 = Success;
	РезультатОперации.OrderNumber	 = ЗаказПоставщикуСсылка.Номер;;
	РезультатОперации.Order		     = ""+ЗаказПоставщикуСсылка;
	РезультатОперации.Error			 = Ошибка;
	
	Возврат РезультатОперации;
КонецФункции

Функция ПолучитьДоговорПоставки(Контрагент)
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ДоговорыКонтрагентов.Ссылка КАК ДоговорКонтрагента
	             |ИЗ
	             |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	             |ГДЕ
	             |	ДоговорыКонтрагентов.Владелец = &Владелец
	             |	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
	             |	И ДоговорыКонтрагентов.Организация = &Организация
	             |	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
	             |	И ДоговорыКонтрагентов.ТипДоговора = &ТипДоговора
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ДоговорыКонтрагентов.Номер УБЫВ
	             |АВТОУПОРЯДОЧИВАНИЕ";
				 Запрос.УстановитьПараметр("Владелец",Контрагент);
				 Запрос.УстановитьПараметр("Организация",Справочники.Организации.НайтиПоКоду("00001"));
				 Запрос.УстановитьПараметр("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
				 Запрос.УстановитьПараметр("ТипДоговора",Справочники.ТипыДоговоров.НайтиПоКоду("00027")); //поставка

				 Рез = Запрос.Выполнить().Выбрать();
				 
				 Пока Рез.Следующий() Цикл
					 Возврат Рез.ДоговорКонтрагента
				 КонецЦикла;
				 
				 Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
КонецФункции

Функция НайтиЗаказПоставщику(Контрагент,НомерВходящегоДокумента)
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПоставщику.Ссылка КАК ЗаказПоставщику
	               |ИЗ
	               |	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	               |ГДЕ
	               |	ЗаказПоставщику.Контрагент = &Контрагент
	               |	И ЗаказПоставщику.НомерВходящегоДокумента = &НомерВходящегоДокумента
	               |	И ЗаказПоставщику.Дата МЕЖДУ &ДатаН И &ДатаК";
				   Запрос.УстановитьПараметр("Контрагент",Контрагент);
				   Запрос.УстановитьПараметр("НомерВходящегоДокумента",СокрЛП(НомерВходящегоДокумента));
				   Запрос.УстановитьПараметр("ДатаН",началоГода(ТекущаяДата()));
				   Запрос.УстановитьПараметр("ДатаК",КонецГода(ТекущаяДата()));
				   
				   Рез = Запрос.Выполнить().Выбрать();
				   
				   Пока Рез.Следующий() Цикл
					   возврат Рез.ЗаказПоставщику;
				   КонецЦикла;

				   Возврат Документы.ЗаказПоставщику.ПустаяСсылка();
КонецФункции
