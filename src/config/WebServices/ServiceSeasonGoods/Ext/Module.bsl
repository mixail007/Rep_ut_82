
Функция GetPrice(Goods, Partner, OrderDate)
	
	URL = "http://37.1.84.50:8080/SeasonGoods";
		
	Товары = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
		
	Если НЕ Partner = "" Тогда
		Контрагент = Справочники.Контрагенты.НайтиПоКоду(Partner);
	КонецЕсли;
	
	//Сохраняем каждый набор товаров в файл, чтоб сохранялась история о запросах	
	Сериализатор = Новый СериализаторXDTO(ФабрикаXDTO);
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл("D:\1C\SeasonGoods\Текущий.xml");
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Goods);
	ЗаписьXML.Закрыть();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл("D:\1C\SeasonGoods\Текущий.xml");
	
	ТаблицаЗаказа = Новый ТаблицаЗначений;
	ТаблицаЗаказа.Колонки.Добавить("Номенклатура");
	ТаблицаЗаказа.Колонки.Добавить("Количество");
	ТаблицаЗаказа.Колонки.Добавить("Цена");
	
	Запись = Новый Структура;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Имя = ЧтениеXML.Имя;
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			Запись.Вставить(Имя, ЧтениеXML.Значение);      //информацию фнутри блока XML помещаем в структуру
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ЧтениеXML.Имя = "Products" Тогда
				СтрокаТЗ = ТаблицаЗаказа.Добавить();
				СтрокаТЗ.Номенклатура = Запись.Code;
				СтрокаТЗ.Количество = Число(Запись.QuantityPriceParameter);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML.Закрыть();
	
	//Запрос остатков в производстве
	
	СписокНоменклатуры = Новый СписокЗначений;
	Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
		Номенкл = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
		СписокНоменклатуры.Добавить(Номенкл);
	КонецЦикла;	
		
	Запрос = Новый Запрос;        
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
	               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный,
	               |	ЗаказПоставщикуСезонныйТовары.Цена,
	               |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура.Код,
	               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.Дата КАК ЗаказПоставщикуСезонныйДата
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
	               |			&ДатаЗаказа,
	               |			Номенклатура В (&СписокНоменклатуры)
				   |            И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
	               |				И ЗаказПоставщикуСезонный.Контрагент = &Контрагент
	               |				И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, ДЕНЬ, 30) > &ДатаЗаказа) КАК ЗаказыПоставщикамСезонныеОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщикуСезонный.Товары КАК ЗаказПоставщикуСезонныйТовары
	               |		ПО ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный = ЗаказПоставщикуСезонныйТовары.Ссылка
	               |			И ЗаказыПоставщикамСезонныеОстатки.Номенклатура = ЗаказПоставщикуСезонныйТовары.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номенклатура,
	               |	ЗаказПоставщикуСезонныйДата
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	
	Запрос.УстановитьПараметр("ДатаЗаказа", OrderDate);				 
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	тзРез = Запрос.Выполнить().Выгрузить();
	
	Отбор = Новый Структура("НоменклатураКод");
	
	Для Каждого стрТЧ из ТаблицаЗаказа Цикл
		
		строкиСЦеной = тзРез.НайтиСтроки(Новый Структура("Номенклатура",Справочники.Номенклатура.НайтиПоКоду(стрТЧ.Номенклатура)));
		Если СтрокиСЦеной.количество()>0 тогда
			цена = СтрокиСценой[0].Цена; //берем из самого раннего сезонника  по остаткам
			комментарий = Строка(СтрокиСЦеной[0].ЗаказПоставщикуСезонный);
		иначе
			//иначе цена ФОБ
			ЦеныФоб = РегистрыСведений.ЦеныФОП.Срезпоследних(OrderDate,Новый Структура("Номенклатура",Справочники.Номенклатура.НайтиПоКоду(стрТЧ.Номенклатура)));
			Если ЦеныФоб.Количество()>0 Тогда
				цена = ЦеныФоб[0].Цена;
				комментарий = "текущая цена ФОБ";
			иначе
				цена=0;
				комментарий = "Цена ФОБ не установлена";
			конецЕсли;
		конецесли;
		
		//ОсталосьСписать = стрТЧ.Количество;
		//Отбор.НоменклатураКод = стрТЧ.Номенклатура;
		//СтрокиНоменклатуры = тзРез.НайтиСтроки(Отбор);
		//тзДляОпределенияЦены = Новый ТаблицаЗначений;
		//тзДляОпределенияЦены.Колонки.Добавить("Цена");
		//тзДляОпределенияЦены.Колонки.Добавить("ЗаказПоставщикуСезонный");
		//Для Каждого эл из СтрокиНоменклатуры Цикл
		//	КоличествоДляСписания = ?(ОсталосьСписать >= эл.Количество, эл.Количество, ОсталосьСписать);
		//	стрСписания = тзДляОпределенияЦены.Добавить();
		//	стрСписания.Цена = эл.Цена;
		//	стрСписания.ЗаказПоставщикуСезонный = Строка(эл.ЗаказПоставщикуСезонный);
		//	ОсталосьСписать = ОсталосьСписать - КоличествоДляСписания;
		//	Если ОсталосьСписать <= 0 Тогда
		//		Прервать;
		//	КонецЕсли; 
		//КонецЦикла;
		//Если ОсталосьСписать > 0 И тзДляОпределенияЦены.Количество() = 0 Тогда
		//	стрСписания = тзДляОпределенияЦены.Добавить();
		//	стрСписания.Цена = 0;
		//КонецЕсли;
		//тзДляОпределенияЦены.Сортировать("Цена");
		
		//Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
		//Товар.Code.Добавить(Строка(стрТЧ.Номенклатура));
		//Товар.QuantityPriceParameter.Добавить(Число(тзДляОпределенияЦены[0].Цена));
		//Товар.Comment.Добавить(Строка(тзДляОпределенияЦены[0].ЗаказПоставщикуСезонный));
		//Товары.Products.Добавить(Товар);
		
		Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
		Товар.Code.Добавить(Строка(стрТЧ.Номенклатура));
		Товар.QuantityPriceParameter.Добавить(цена);
		Товар.Comment.Добавить(комментарий);
		Товары.Products.Добавить(Товар);

		
	КонецЦикла;
	
	Возврат Товары;	
	
КонецФункции
