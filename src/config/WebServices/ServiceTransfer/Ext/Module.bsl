

//26.07.2016
функция ТекстЗапросаПоОчередям( НомерЗадания = "",  ГруппаСкладов="", ТипДокумента = "ЗаданиеНаОтгрузку" )
	
	// использование 1го или 2х ВТ - позволяет сократить время формирования запроса до 3-4 сек вместо 10-25 сек
	Текст = "ВЫБРАТЬ 
		   |	ЗаданиеНаОтгрузкуТовары.Ссылка КАК Задание,
		   |	ЗаданиеНаОтгрузкуТовары.Номенклатура,
		   
		   //+++ 02.02.2018 ------- по задаче № 40166 -------------------  
		   |	СУММА(ЗаданиеНаОтгрузкуТовары.КоличествоЗаказано) КАК КоличествоЗаказано,
		   |	СУММА(ЗаданиеНаОтгрузкуТовары.Количество) КАК Количество
		   
		   |ПОМЕСТИТЬ ВТ_Заказы
		   |ИЗ
		   |	Документ.ЗаданиеНаОтгрузку.Товары КАК ЗаданиеНаОтгрузкуТовары
		   |ГДЕ
		   |	ЗаданиеНаОтгрузкуТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		   |	И ЗаданиеНаОтгрузкуТовары.Ссылка.Подразделение = &Подразделение
		   |	И ЗаданиеНаОтгрузкуТовары.Ссылка.Проведен
		   |	И ЗаданиеНаОтгрузкуТовары.Ссылка.Выполнено = ЛОЖЬ
		   |	И ЗаданиеНаОтгрузкуТовары.Склад.ГруппаСкладов <> ЗНАЧЕНИЕ(Справочник.ГруппыСкладов.ПустаяСсылка)
		   |
		   //+++ 02.02.2018 ------Вырезаем товары, которые ПОЛНОСТЬЮ отгружены с других складов/адресов!--------------
		   |СГРУППИРОВАТЬ ПО
		   |	ЗаданиеНаОтгрузкуТовары.Ссылка,
		   |	ЗаданиеНаОтгрузкуТовары.Номенклатура
		   |ИМЕЮЩИЕ
		   |	СУММА(ЗаданиеНаОтгрузкуТовары.КоличествоЗаказано) > СУММА(ЗаданиеНаОтгрузкуТовары.Количество)
		   |
		   |ИНДЕКСИРОВАТЬ ПО
		   |	ЗаданиеНаОтгрузкуТовары.Номенклатура
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	ИнформацияПоПроезду.Задание КАК Задание,
	        |	ИнформацияПоПроезду.Задание.Контрагент КАК ЗаданиеКонтрагент,
	        |	ВЫРАЗИТЬ(ИнформацияПоПроезду.Задание.Комментарий КАК СТРОКА(500)) КАК ЗаданиеКомментарий,
	        |	ИнформацияПоПроезду.Важность КАК Важность,
	        |	ЗаданиеНаОтгрузкуТовары.НомерСтроки КАК НомерСтроки,
	        |	ИнформацияПоПроезду.НомерОчереди КАК НомерОчереди,
	        |	ИнформацияПоПроезду.Контрагент,
	        |	РезервНаСкладахОстатки.Номенклатура,
	        |	РезервНаСкладахОстатки.Номенклатура.Код КАК НоменклатураКод,
	        |	РезервНаСкладахОстатки.Номенклатура.Артикул КАК Артикул,
	        |	РезервНаСкладахОстатки.Склад,
	        |	РезервНаСкладахОстатки.Склад.Код КАК СкладКод,
	        |	РезервНаСкладахОстатки.АдресХранения,
	        |	РезервНаСкладахОстатки.АдресХранения.Код КАК АдресХраненияКод,
			
	  		//+++ 12.12.2016 ----------- сумма нужна, когда в 1 очередь в разных заказах - одинаковый товар
	        |	СУММА(РезервНаСкладахОстатки.КоличествоОборот) КАК КоличествоЗаказано,
		   
	        |	МАКСИМУМ(ЗаданиеНаОтгрузкуТовары.Количество) КАК Количество,
	        |	МАКСИМУМ(ЕСТЬNULL(ВложенныйЗапрос.КоличествоОстаток, 0)) КАК КоличествоОстаток,
			
	  		//+++ 12.12.2016 ----------- в 1 очередь в разных заказах - одинаковый товар: ЗаказПокупателя > 1
	        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РезервНаСкладахОстатки.ЗаказПокупателя) КАК ЗаказПокупателя
	        |ИЗ
	        |	(ВЫБРАТЬ
	        |		док_Задание_ТЧ_Заказы.Ссылка КАК Задание,
	        |		ВЫБОР
	        |			КОГДА док_Задание_ТЧ_Заказы.Ссылка.Важность = ЗНАЧЕНИЕ(Перечисление.Важность.Высокая)
	        |				ТОГДА ""!!! ""
	        |			ИНАЧЕ """"
	        |		КОНЕЦ КАК Важность,
	        |		док_Задание_ТЧ_Заказы.ЗаказПокупателя КАК Заказ,
	        |		док_Задание_ТЧ_Заказы.ЗаказПокупателя.Контрагент КАК Контрагент,
	        |		док_Задание_ТЧ_Заказы.НомерОчереди КАК НомерОчереди
	        |	ИЗ
	        |		Документ.ЗаданиеНаОтгрузку.ЗаказыПокупателей КАК док_Задание_ТЧ_Заказы
	        |	ГДЕ
	        |		док_Задание_ТЧ_Заказы.Ссылка В (ВЫБРАТЬ вт.Задание ИЗ ВТ_Заказы КАК вт)) КАК ИнформацияПоПроезду
	        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |			РезервОбороты.ЗаказПокупателя КАК ЗаказПокупателя,
	        |			РезервОбороты.Номенклатура КАК Номенклатура,
	        |			РезервОбороты.Склад КАК Склад,
	        |			РезервОбороты.АдресХранения КАК АдресХранения,
	        |			РезервОбороты.Период КАК Период,
	        |			РезервОбороты.Регистратор КАК Регистратор,
	        |			РезервОбороты.КоличествоОборот КАК КоличествоОборот,
	        |			РезервОбороты.КоличествоПриход КАК КоличествоПриход,
	        |			РезервОбороты.КоличествоРасход КАК КоличествоРасход
	        |		ИЗ
	        |			РегистрНакопления.РезервНаСкладах.Обороты(&НачДата,	&КонДата, Регистратор,
	        |					Номенклатура В (ВЫБРАТЬ втТ.Номенклатура ИЗ ВТ_Заказы КАК втТ)
	        |						И Склад.Транзитный = ЛОЖЬ) КАК РезервОбороты
	        |		ГДЕ
	        |			РезервОбороты.КоличествоОборот > 0) КАК РезервНаСкладахОстатки
	        |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |				ТоварыАдресноеХранениеОстатки.КоличествоОстаток КАК КоличествоОстаток,
	        |				ТоварыАдресноеХранениеОстатки.Склад КАК Склад,
	        |				ТоварыАдресноеХранениеОстатки.АдресХранения КАК АдресХранения,
	        |				ТоварыАдресноеХранениеОстатки.Номенклатура КАК Номенклатура
	        |			ИЗ
	        |				РегистрНакопления.ТоварыАдресноеХранение.Остатки КАК ТоварыАдресноеХранениеОстатки
	        |			ГДЕ
	        |				ТоварыАдресноеХранениеОстатки.Склад.Подразделение = &ПодразделениеСклад
	        |				И ТоварыАдресноеХранениеОстатки.КоличествоОстаток > 0
	        |				И ТоварыАдресноеХранениеОстатки.Номенклатура В (ВЫБРАТЬ втТ.Номенклатура ИЗ ВТ_Заказы КАК втТ)
	        |			
	        |			ОБЪЕДИНИТЬ ВСЕ
	        |			
	        |			ВЫБРАТЬ
	        |				ТоварыНаСкладахОстатки.КоличествоОстаток,
	        |				ТоварыНаСкладахОстатки.Склад,
	        |				ЗНАЧЕНИЕ(Справочник.АдресаХранения.ПустаяСсылка),
	        |				ТоварыНаСкладахОстатки.Номенклатура
	        |			ИЗ
	        |				РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	        |			ГДЕ
	        |				ТоварыНаСкладахОстатки.Номенклатура В (ВЫБРАТЬ втТ.Номенклатура ИЗ ВТ_Заказы КАК втТ)
	        |				И ТоварыНаСкладахОстатки.Склад.Подразделение = &ПодразделениеСклад
	        |				И ТоварыНаСкладахОстатки.Склад.ЗапретитьИспользование = ЛОЖЬ
	        |				И ТоварыНаСкладахОстатки.Склад.АдресноеХранение = ЛОЖЬ
	        |				И ТоварыНаСкладахОстатки.Склад.ГруппаСкладов <> ЗНАЧЕНИЕ(Справочник.ГруппыСкладов.ПустаяСсылка)
	        |				И ТоварыНаСкладахОстатки.КоличествоОстаток > 0) КАК ВложенныйЗапрос
	        |			ПО РезервНаСкладахОстатки.Номенклатура = ВложенныйЗапрос.Номенклатура
	        |				И РезервНаСкладахОстатки.Склад = ВложенныйЗапрос.Склад
	        |				И РезервНаСкладахОстатки.АдресХранения = ВложенныйЗапрос.АдресХранения
	        |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |				ЗаданиеНаОтгрузкуТовары1.Ссылка КАК Задание,
	        |				ЗаданиеНаОтгрузкуТовары1.Номенклатура КАК Номенклатура,
	        |				ЗаданиеНаОтгрузкуТовары1.НомерСтроки КАК НомерСтроки,
	        |				ЗаданиеНаОтгрузкуТовары1.АдресХранения КАК АдресХранения,
	        |				ЗаданиеНаОтгрузкуТовары1.Склад КАК Склад,
	        |				ЗаданиеНаОтгрузкуТовары1.Количество КАК Количество
	        |			ИЗ
	        |				Документ.ЗаданиеНаОтгрузку.Товары КАК ЗаданиеНаОтгрузкуТовары1
	        |			ГДЕ
	        |				ЗаданиеНаОтгрузкуТовары1.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	        |				И ЗаданиеНаОтгрузкуТовары1.Ссылка В (ВЫБРАТЬ вт.Задание ИЗ ВТ_Заказы КАК вт)
	        |				И ЗаданиеНаОтгрузкуТовары1.Номенклатура В (ВЫБРАТЬ втТ.Номенклатура	ИЗ 	ВТ_Заказы КАК втТ)
	        |				И ЗаданиеНаОтгрузкуТовары1.Количество < ЗаданиеНаОтгрузкуТовары1.КоличествоЗаказано) КАК ЗаданиеНаОтгрузкуТовары
	        |			ПО РезервНаСкладахОстатки.Номенклатура = ЗаданиеНаОтгрузкуТовары.Номенклатура
	        |				И РезервНаСкладахОстатки.Склад = ЗаданиеНаОтгрузкуТовары.Склад
	        |				И РезервНаСкладахОстатки.АдресХранения = ЗаданиеНаОтгрузкуТовары.АдресХранения
	        |				И РезервНаСкладахОстатки.Регистратор = ЗаданиеНаОтгрузкуТовары.Задание
	        |		ПО ИнформацияПоПроезду.Заказ = РезервНаСкладахОстатки.ЗаказПокупателя
	        |ГДЕ
	        |	ЗаданиеНаОтгрузкуТовары.Склад.ГруппаСкладов <> ЗНАЧЕНИЕ(Справочник.ГруппыСкладов.ПустаяСсылка)
	        |	И РезервНаСкладахОстатки.Склад.ГруппаСкладов <> ЗНАЧЕНИЕ(Справочник.ГруппыСкладов.ПустаяСсылка)
			
	        |//ОтборПоГруппе И ЗаданиеНаОтгрузкуТовары.Склад.ГруппаСкладов = &ГруппаСкладов
			
			//+++ 12.12.2016 ----------- группировка нужна, когда в 1 очередь в разных заказах - одинаковый товар
	        |СГРУППИРОВАТЬ ПО
	        |	РезервНаСкладахОстатки.Склад,
	        |	РезервНаСкладахОстатки.АдресХранения,
	        |	ИнформацияПоПроезду.Важность,
	        |	РезервНаСкладахОстатки.Номенклатура,
	        |	ИнформацияПоПроезду.Контрагент,
	        |	ИнформацияПоПроезду.Задание,
	        |	ИнформацияПоПроезду.Задание.Контрагент,
	        |	ВЫРАЗИТЬ(ИнформацияПоПроезду.Задание.Комментарий КАК СТРОКА(500)),
	        |	ЗаданиеНаОтгрузкуТовары.НомерСтроки,
	        |	ИнформацияПоПроезду.НомерОчереди,
	        |	РезервНаСкладахОстатки.Номенклатура.Код,
	        |	РезервНаСкладахОстатки.Номенклатура.Артикул,
	        |	РезервНаСкладахОстатки.Склад.Код,
	        |	РезервНаСкладахОстатки.АдресХранения.Код
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Задание,
	        |	НомерСтроки,
	        |	НомерОчереди
	        |ИТОГИ
	        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомерСтроки),
	        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомерОчереди),
	        |	СУММА(КоличествоЗаказано),
	        |	СУММА(Количество),
	        |	СУММА(КоличествоОстаток)
	        |ПО
	        |	Задание
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |УНИЧТОЖИТЬ ВТ_Заказы";

			Если ТипДокумента<>"ЗаданиеНаОтгрузку" тогда
				текст = стрЗаменить(текст, "Документ.ЗаданиеНаОтгрузку.", "Документ."+ТипДокумента +".");
			КонецЕсли;
		
		Если НомерЗадания<>"" Тогда
			текст = СтрЗаменить(текст, "//НомерЗадания", "");
		КонецЕсли;
	
		Если ГруппаСкладов<>"" Тогда
			текст = СтрЗаменить(текст, "//ОтборПоГруппе", "");
		КонецЕсли;	
		
  Возврат Текст;
КонецФункции

//02.02.2018 - ВЫКЛЮЧЕНО!

функция ТекстЗапросаПоОчередямДляПеремещения_OLD( НомерЗадания = "",  ГруппаСкладов="" )
	
	// использование 1го или 2х ВТ - позволяет сократить время формирования запроса до 3-4 сек вместо 10-25 сек
	Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	ЗаданиеНаПеремещениеТовары.Ссылка КАК Задание,
	        |	ЗаданиеНаПеремещениеТовары.Номенклатура,
	        |	ЗаданиеНаПеремещениеТовары.НомерСтроки,
	        |	ЗаданиеНаПеремещениеТовары.АдресХранения,
	        |	ЗаданиеНаПеремещениеТовары.Склад,
	        |	СУММА(ЗаданиеНаПеремещениеТовары.Количество) КАК Количество
	        |ПОМЕСТИТЬ ВТ_Заказы
	        |ИЗ
	        |	Документ.ЗаданиеНаПеремещение.Товары КАК ЗаданиеНаПеремещениеТовары
	        |ГДЕ
	        |	ЗаданиеНаПеремещениеТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	        |	И ЗаданиеНаПеремещениеТовары.Ссылка.Подразделение = &Подразделение
	        |	И ЗаданиеНаПеремещениеТовары.Ссылка.Проведен
	        |	И ЗаданиеНаПеремещениеТовары.Ссылка.Выполнено = ЛОЖЬ
	        |	И ЗаданиеНаПеремещениеТовары.Склад.ГруппаСкладов <> ЗНАЧЕНИЕ(Справочник.ГруппыСкладов.ПустаяСсылка)
	        //+++ 07.11.2016 |	И ЗаданиеНаПеремещениеТовары.Количество = 0
	     	|
	        |СГРУППИРОВАТЬ ПО
	        |	ЗаданиеНаПеремещениеТовары.Ссылка,
	        |	ЗаданиеНаПеремещениеТовары.Номенклатура,
	        |	ЗаданиеНаПеремещениеТовары.НомерСтроки,
	        |	ЗаданиеНаПеремещениеТовары.АдресХранения,
	        |	ЗаданиеНаПеремещениеТовары.Склад
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	ЗаданиеНаПеремещениеТовары.Номенклатура
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ТоварыАдресноеХранениеОстатки.КоличествоОстаток КАК КоличествоОстаток,
	        |	ТоварыАдресноеХранениеОстатки.Склад КАК Склад,
	        |	ТоварыАдресноеХранениеОстатки.АдресХранения КАК АдресХранения,
	        |	ТоварыАдресноеХранениеОстатки.Номенклатура КАК Номенклатура
	        |ПОМЕСТИТЬ ВТ_ОстаткиТоваров
	        |ИЗ
	        |	РегистрНакопления.ТоварыАдресноеХранение.Остатки КАК ТоварыАдресноеХранениеОстатки
	        |ГДЕ
	        |	ТоварыАдресноеХранениеОстатки.Склад.Подразделение = &ПодразделениеСклад
	        |	И ТоварыАдресноеХранениеОстатки.КоличествоОстаток > 0
	        |	И ТоварыАдресноеХранениеОстатки.Номенклатура В
	        |			(ВЫБРАТЬ
	        |				втТ.Номенклатура
	        |			ИЗ
	        |				ВТ_Заказы КАК втТ)
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	ТоварыНаСкладахОстатки.КоличествоОстаток,
	        |	ТоварыНаСкладахОстатки.Склад,
	        |	ЗНАЧЕНИЕ(Справочник.АдресаХранения.ПустаяСсылка),
	        |	ТоварыНаСкладахОстатки.Номенклатура
	        |ИЗ
	        |	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	        |ГДЕ
	        |	ТоварыНаСкладахОстатки.Номенклатура В
	        |			(ВЫБРАТЬ
	        |				втТ.Номенклатура
	        |			ИЗ
	        |				ВТ_Заказы КАК втТ)
	        |	И ТоварыНаСкладахОстатки.Склад.Подразделение = &ПодразделениеСклад
	        |	И ТоварыНаСкладахОстатки.Склад.ЗапретитьИспользование = ЛОЖЬ
	        |	И ТоварыНаСкладахОстатки.Склад.АдресноеХранение = ЛОЖЬ
	        |	И ТоварыНаСкладахОстатки.Склад.ГруппаСкладов <> ЗНАЧЕНИЕ(Справочник.ГруппыСкладов.ПустаяСсылка)
	        |	И ТоварыНаСкладахОстатки.КоличествоОстаток > 0
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	РезервОбороты.ЗаказПокупателя КАК ЗаказПокупателя,
	        |	РезервОбороты.Номенклатура КАК Номенклатура,
	        |	РезервОбороты.Склад КАК Склад,
	        |	РезервОбороты.АдресХранения КАК АдресХранения,
	        |	РезервОбороты.Период КАК Период,
	        |	РезервОбороты.Регистратор КАК Регистратор,
	        |	РезервОбороты.КоличествоОборот КАК КоличествоОборот,
	        |	РезервОбороты.КоличествоПриход КАК КоличествоПриход,
	        |	РезервОбороты.КоличествоРасход КАК КоличествоРасход
	        |ПОМЕСТИТЬ ВТ_РезервНаСкладахОстатки
	        |ИЗ
	        |	РегистрНакопления.РезервНаСкладах.Обороты(
	        |			&НачДата,
	        |			&КонДата,
	        |			Регистратор,
	        |			Номенклатура В
	        |					(ВЫБРАТЬ
	        |						втТ.Номенклатура
	        |					ИЗ
	        |						ВТ_Заказы КАК втТ)
	        |				И Склад.Транзитный = ЛОЖЬ) КАК РезервОбороты
	        |ГДЕ
	        |	РезервОбороты.КоличествоОборот > 0
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка КАК Задание,
	        |	ЗаданиеНаПеремещениеЗаказыПокупателей.НомерОчереди,
	        |	ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя.АдресДоставки КАК АдресДоставки,
	        |	ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя.Контрагент.Код КАК КонтрагентКод,
	        |	ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
	        |	ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя.Контрагент КАК Контрагент,
	        |	ЗаданиеНаПеремещениеЗаказыПокупателей.ЗаказПокупателя
	        |ПОМЕСТИТЬ ВТ_Очередь
	        |ИЗ
	        |	Документ.ЗаданиеНаПеремещение.ЗаказыПокупателей КАК ЗаданиеНаПеремещениеЗаказыПокупателей
	        |ГДЕ
	        |	ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	        |	И ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка.Подразделение = &Подразделение
	        |	И ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка.Проведен
	        |	И НЕ ЗаданиеНаПеремещениеЗаказыПокупателей.Ссылка.Выполнено
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	ВТ_Заказы.Задание КАК Задание,
	        |	ВТ_Заказы.Задание.Контрагент КАК ЗаданиеКонтрагент,
	        |	ВЫРАЗИТЬ(ВТ_Заказы.Задание.Комментарий КАК СТРОКА(500)) КАК ЗаданиеКомментарий,
	        |	ВЫБОР
	        |		КОГДА ВТ_Заказы.Задание.Важность = ЗНАЧЕНИЕ(Перечисление.Важность.Высокая)
	        |			ТОГДА ""!!! ""
	        |		ИНАЧЕ """"
	        |	КОНЕЦ КАК Важность,
	        |	ВТ_Заказы.НомерСтроки КАК НомерСтроки,
	        |	ВТ_РезервНаСкладахОборот.Номенклатура,
	        |	ВТ_РезервНаСкладахОборот.Номенклатура.Код КАК НоменклатураКод,
	        |	ВТ_РезервНаСкладахОборот.Номенклатура.Артикул КАК Артикул,
	        |	ВТ_РезервНаСкладахОборот.Склад,
	        |	ВТ_РезервНаСкладахОборот.Склад.Код КАК СкладКод,
	        |	ВТ_РезервНаСкладахОборот.АдресХранения,
	        |	ВТ_РезервНаСкладахОборот.АдресХранения.Код КАК АдресХраненияКод,
	        |	СУММА(ВТ_РезервНаСкладахОборот.КоличествоОборот) КАК КоличествоЗаказано,
	        |	СУММА(ВТ_Заказы.Количество) КАК Количество,
	        |	СУММА(ЕСТЬNULL(ВТ_ОстаткиТоваров.КоличествоОстаток, 0)) КАК КоличествоОстаток,
	        |	ВТ_Очередь.НомерОчереди КАК НомерОчереди,
	        |	ВТ_Очередь.Контрагент
	        |ИЗ
	        |	ВТ_РезервНаСкладахОстатки КАК ВТ_РезервНаСкладахОборот
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиТоваров КАК ВТ_ОстаткиТоваров
	        |		ПО ВТ_РезервНаСкладахОборот.Номенклатура = ВТ_ОстаткиТоваров.Номенклатура
	        |			И ВТ_РезервНаСкладахОборот.Склад = ВТ_ОстаткиТоваров.Склад
	        |			И ВТ_РезервНаСкладахОборот.АдресХранения = ВТ_ОстаткиТоваров.АдресХранения
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	        |		ПО ВТ_РезервНаСкладахОборот.Номенклатура = ВТ_Заказы.Номенклатура
	        |			И ВТ_РезервНаСкладахОборот.Склад = ВТ_Заказы.Склад
	        |			И ВТ_РезервНаСкладахОборот.АдресХранения = ВТ_Заказы.АдресХранения
	        |			И ВТ_РезервНаСкладахОборот.Регистратор = ВТ_Заказы.Задание
	        |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Очередь КАК ВТ_Очередь
	        |		ПО ВТ_РезервНаСкладахОборот.ЗаказПокупателя = ВТ_Очередь.ЗаказПокупателя
			//+++ 31.10.2016 - связь по заданию - т.к. может быть один заказ - в разных заданиях на перемещение!
	        |		И ВТ_РезервНаСкладахОборот.Регистратор = ВТ_Очередь.Задание
	        |ГДЕ
	        |	ВТ_Заказы.Склад.ГруппаСкладов <> ЗНАЧЕНИЕ(Справочник.ГруппыСкладов.ПустаяСсылка)
	        |	И ВТ_РезервНаСкладахОборот.Склад.ГруппаСкладов <> ЗНАЧЕНИЕ(Справочник.ГруппыСкладов.ПустаяСсылка)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВТ_Заказы.Задание,
	        |	ВТ_Заказы.Задание.Контрагент,
	        |	ВЫРАЗИТЬ(ВТ_Заказы.Задание.Комментарий КАК СТРОКА(500)),
	        |	ВЫБОР
	        |		КОГДА ВТ_Заказы.Задание.Важность = ЗНАЧЕНИЕ(Перечисление.Важность.Высокая)
	        |			ТОГДА ""!!! ""
	        |		ИНАЧЕ """"
	        |	КОНЕЦ,
	        |	ВТ_Заказы.НомерСтроки,
	        |	ВТ_РезервНаСкладахОборот.Номенклатура,
	        |	ВТ_РезервНаСкладахОборот.Номенклатура.Код,
	        |	ВТ_РезервНаСкладахОборот.Номенклатура.Артикул,
	        |	ВТ_РезервНаСкладахОборот.Склад,
	        |	ВТ_РезервНаСкладахОборот.Склад.Код,
	        |	ВТ_РезервНаСкладахОборот.АдресХранения,
	        |	ВТ_РезервНаСкладахОборот.АдресХранения.Код,
	        |	ВТ_Очередь.НомерОчереди,
	        |	ВТ_Очередь.Контрагент
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Задание,
	        |	НомерСтроки
	        |ИТОГИ
	        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомерСтроки),
	        |	СУММА(КоличествоЗаказано),
	        |	СУММА(Количество),
	        |	СУММА(КоличествоОстаток),
	        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомерОчереди)
	        |ПО
	        |	Задание
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |УНИЧТОЖИТЬ ВТ_Заказы
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |УНИЧТОЖИТЬ ВТ_ОстаткиТоваров
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |УНИЧТОЖИТЬ ВТ_РезервНаСкладахОстатки
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |УНИЧТОЖИТЬ ВТ_Очередь";
			
		
		Если НомерЗадания<>"" Тогда
			текст = СтрЗаменить(текст, "//НомерЗадания", "");
		КонецЕсли;
	
		Если ГруппаСкладов<>"" Тогда
			текст = СтрЗаменить(текст, "//ОтборПоГруппе", "");
		КонецЕсли;	
		
  Возврат Текст;
  
  
КонецФункции


//возвращает полный список всех неотгруженных Заданий на отгрузку (за последний месяц!)
// для подразделения с кодом (строкой) CodeOfBranch
//
Функция GetAllOrdersOfShipment(CodeOfBranch="")
	
	URL = "http://37.1.84.50:8080/Transfer";	
	
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "ListOfOrders");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	
	//================ смотим все невыполненные задания на отгрузку, в которых есть адрес ==========================
	Запрос = новый Запрос;
	
	
	////31.08.2016 -Если надо "ускорить" и сделать 
	////отбор ТОЛЬКО по 1 группе складов Тогда использовать 2 вариант!
	Запрос.текст =  ТекстЗапросаПоОчередям();  
	
		
	
	//Запрос.текст =  ТекстЗапросаПоОчередям("", "ЦЦЛ"); 
	//Запрос.УстановитьПараметр("ЦЦЛ", справочники.ГруппыСкладов.НайтиПоКоду("06")  );  //АКБ, Аксессуары
	
	Запрос.УстановитьПараметр("НачДата",  НачалоНедели(НачалоНедели(ТекущаяДата())-1) );
	Запрос.УстановитьПараметр("КонДата",  КонецДня(ТекущаяДата()) );
	
	Если НЕ ЗначениеЗаполнено(CodeOfBranch) Тогда
		CodeOfBranch = "00005";
	КонецЕсли;
	
	Подразделение = Справочники.Подразделения.НайтиПоКоду(CodeOfBranch);
	Запрос.УстановитьПараметр("Подразделение",  Подразделение);
	
	Если CodeOfBranch = "00005" Тогда // для "реального" остатка в ячейке
		Запрос.УстановитьПараметр("ПодразделениеСклад", справочники.Подразделения.ПустаяСсылка() );
	Иначе 
		Запрос.УстановитьПараметр("ПодразделениеСклад", Подразделение);
	КонецЕсли;
	
	результат = Запрос.Выполнить();
	ВыборкаЗаказы   = результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//=========================Цикл по заказам==================================
	пока ВыборкаЗаказы.Следующий() Цикл	
		Документ1 = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Order"));
		Документ1.numberin1s 	= Строка(ВыборкаЗаказы.Задание.Номер);
		Документ1.dateofshipment = ВыборкаЗаказы.Задание.Дата;
		
		Документ1.client	    = строка(ВыборкаЗаказы.Важность) + //+++ Важность !
		СокрЛП( лев(Строка(ВыборкаЗаказы.ЗаданиеКонтрагент), 200) );
		
		Документ1.comment        = 	СокрЛП( ВыборкаЗаказы.ЗаданиеКомментарий );
		//+ " Водитель: "+СокрЛП(ВыборкаЗаказы.Задание.Водитель) + " Авто: "+СокрЛП(ВыборкаЗаказы.Задание.МаркаАвтомобиля)+" "+СокрЛП(ВыборкаЗаказы.Задание.ГосНомерАвтомобиля)
		
		//==============товары 1 заказа=========================================
		Товары   = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
		Товар 	 = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
		Выборка = ВыборкаЗаказы.Выбрать();
		стр0="";
		пока Выборка.Следующий() Цикл	
			стр1 = строка(Выборка.НомерСтроки)+"-"+формат(выборка.НомерОчереди,"ЧЦ=2; ЧВН=; ЧГ=0");
			
			//+++ 27.07.2016 - в 1 очереди - может быть несколько заказов одного клиента с таким же товаром!
			Если стр0=стр1 Тогда 
				Товар.quantity    = Товар.quantity    + Число(Выборка.КоличествоЗаказано); 
				Товар.quantityfact= Товар.quantityfact+ Число(Выборка.Количество);
				продолжить;
			Иначе
				Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
				стр0=стр1;
			КонецЕсли;
			
			Товар.rownumber =(Число(Выборка.НомерСтроки));
			
			Товар.productid =(Строка(Выборка.НоменклатураКод)); 
			
			Если ЗначениеЗаполнено(Выборка.АдресХранения) Тогда
				ШК = СокрЛП(Выборка.АдресХраненияКод);
			Иначе // НЕТ ЯЧЕЙКИ - берём код склада
				ШК = "99"+СокрЛП(Выборка.Склад.Код); // код всегда 5 символов, Иначе будет 0000099
			КонецЕсли;
			
			Если стрДлина(ШК)>0 и стрДлина(ШК)<7 Тогда
				ШК = формат( число(ШК), "ЧЦ=7; ЧВН=; ЧГ=0");
			КонецЕсли;
			
			ШК = ШК + КонтрольныйСимволEAN(ШК, 8);
			Товар.stockcell = ШК;
			
			Товар.quantity    = Число(Выборка.КоличествоЗаказано); //Сколько надо отгрузить
			Товар.quantityfact= Число(Выборка.Количество);
			
			//+++ 15.08.2016 - для отбора по Складу - надо "подменять" Склад на склад АХ, название "склада" будет в названии ячейки!
			Если Выборка.Склад.АдресноеХранение Тогда 
				Товар.stockname = (Строка(Выборка.Склад)); 
			Иначе //подменяем на название Склада АХ
				род = Выборка.Склад.Родитель;
				Запрос1 = Новый Запрос;
				Запрос1.Текст = "ВЫБРАТЬ первые 1
				|		Склады.Наименование как СкладАХ
				|ИЗ Справочник.Склады КАК Склады
				|ГДЕ Склады.Родитель = &Родитель
				|	  И Склады.АдресноеХранение = ИСТИНА";
				Запрос1.УстановитьПараметр("Родитель", род);
				Результат1 = Запрос1.Выполнить();
				Выборка1= Результат1.Выбрать();
				Если Выборка1.Следующий() Тогда
					Товар.stockname = (Строка(Выборка1.СкладАХ)); 
				Иначе // Если какой-то вообще непонятный склад... то он сам
					Товар.stockname = (Строка(Выборка.Склад)); 
				КонецЕсли;
			КонецЕсли;
			
			//+++ 26.07.2016 - номер очереди и Клиент
			очередь = формат(выборка.НомерОчереди,"ЧЦ=2; ЧВН=; ЧГ=0")+". "+строка(выборка.Контрагент);
			Если стрДлина(очередь)>40 Тогда
				очередь = лев(очередь,37)+"...";
			КонецЕсли;	
			Товар.queue = очередь; //лев(очередь, 40) = "02. " + 33 символа
			Товар.rest  = число(Выборка.КоличествоОстаток); // полное количество товара в данной ячейке!
			
			//25.07.2017 нельзя использовать / - это конец тэга
			Товар.stockname = стрЗаменить(Товар.stockname,"/","_");  
			
			Если Товар.quantityfact<Товар.quantity Тогда //+++ 07.11.2016
			Товары.Products.Добавить(Товар);
			КонецЕсли;
		
		КонецЦикла;
		
		Документ1.ArrayOfProducts = Товары;
		РезультатОперации.Orders.Добавить( Документ1 );
	КонецЦикла;
	
	//ТекстЗапроса = ТекстЗапросаПоОчередямДляПеремещения_OLD(); //Сакулина
	ТекстЗапроса = ТекстЗапросаПоОчередям(,,"ЗаданиеНаПеремещение"); //+++ 05.02.2018 единая функция!
	ЗаполнитьРезультатGetAllOrders("ЗаданиеПерем",ТипXDTOРезультатОперации, РезультатОперации, CodeOfBranch, ТекстЗапроса);
    	
	Возврат РезультатОперации;
	
КонецФункции
 
//возвращает список строк ТЧ Товары - ТОЛЬКО по Заданию на отгрузку!
//  для проверки, что все данные загрузились... возвращает ВСЕ товары!
Функция GetProductsOfOneOrder(Number)
	
	URL = "http://37.1.84.50:8080/Transfer";	
	
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "ArrayOfProducts");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	
	//================ смотим все невыполненные задания на отгрузку, в которых есть адрес ==========================
	Запрос = новый Запрос;
	Запрос.текст = ТекстЗапросаПоОчередям( Number, "" );  // , "ОтборПоОднойГруппеСкладов=ЦЦЛ" );   //ТекстЗапроса( Number);
	Запрос.УстановитьПараметр("ЦЦЛ", справочники.ГруппыСкладов.НайтиПоКоду("06")  );  //АКБ, Аксессуары
					
	Запрос.УстановитьПараметр("НачДата",  НачалоНедели( НачалоНедели(ТекущаяДата())-1) ); // начало пред.недели!! а не месяца!
	Запрос.УстановитьПараметр("КонДата",  КонецДня(ТекущаяДата()));
	
	//По префиксу!
	Если лев(Number,2)="СП" Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду("00112");  
	ИначеЕсли лев(Number,2)="РД" Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду("00106");  
	ИначеЕсли лев(Number,2)="Ео" Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду("00138");  
	ИначеЕсли лев(Number,2)="МС" Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду("00133");  
	Иначе	
		Подразделение = справочники.Подразделения.НайтиПоКоду("00005");  
	КонецЕсли;

		Запрос.УстановитьПараметр("Подразделение", Подразделение );  
		Если Подразделение.код = "00005" Тогда
			Запрос.УстановитьПараметр("ПодразделениеСклад", справочники.Подразделения.ПустаяСсылка() );
		Иначе
        	Запрос.УстановитьПараметр("ПодразделениеСклад", Подразделение );
		КонецЕсли;
	
	Запрос.УстановитьПараметр("НомерЗадания", "%"+Number);

	результат = Запрос.Выполнить();
	Выборка   = результат.Выбрать();
	 	
	Товары   = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
	
	пока Выборка.Следующий() Цикл	
		Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
		
		Товар.rownumber =(Число(Выборка.НомерСтроки));
		
		Товар.productid =(Строка(Выборка.НоменклатураКод)); 
		
		Если ЗначениеЗаполнено(Выборка.АдресХранения) Тогда
			ШК = СокрЛП(Выборка.АдресХраненияКод);
		Иначе // НЕТ ЯЧЕЙКИ - берём код склада
			код1 = СокрЛП(Выборка.СкладКод);
			Если стрДлина(код1)=7 Тогда
				ШК = "99" + код1;
			ИначеЕсли код1="" Тогда // нет склада???
				ШК = "9900000"; //все нули!
			ИначеЕсли стрДлина(код1)<7 Тогда
				код2=формат(число(код1),"ЧЦ=5; ЧН=00000; ЧВН=; ЧГ=0");
				ШК = "99" + код2;
			КонецЕсли;	
		КонецЕсли;
		
 		ШК = ШК + КонтрольныйСимволEAN(ШК, 8);
		
		Товар.stockcell = ШК;

		Товар.quantity  =(Число(Выборка.КоличествоЗаказано)); //Сколько надо отгрузить
		Товар.quantityfact=(Число(Выборка.Количество));
		
		//+++ 20.06.2016
		//Товар.rest      =(Число(Выборка.КоличествоСвободно));
		Товар.stockname =(строка(Выборка.Склад));
		
		//25.07.2017 нельзя использовать / - это конец тэга
		Товар.stockname = стрЗаменить(Товар.stockname,"/","_");  
		
		//+++ 26.07.2016 - номер очереди и Клиент
		очередь = формат(выборка.НомерОчереди,"ЧЦ=2; ЧВН=; ЧГ=0")+". "+строка(выборка.Контрагент);
		Если стрДлина(очередь)>40 Тогда
			очередь = лев(очередь,37)+"...";
		КонецЕсли;	
		Товар.queue = очередь; //лев(очередь, 40) = "02. " + 33 символа

		Товар.rest  = число(Выборка.КоличествоОстаток); // полное количество товара в данной ячейке!
		
	Если Товар.quantityfact<Товар.quantity Тогда //+++ 07.11.2016
		Товары.Products.Добавить(Товар);
	КонецЕсли;
	
	КонецЦикла;

 	РезультатОперации = Товары;
	
	Возврат РезультатОперации;
	
КонецФункции

//записывает данные назад
Функция ChangeOrder(Number="", ArrayOfProducts=НЕОПРЕДЕЛЕНО )
	
	рез= "";
	
	URL = "http://37.1.84.50:8080/Transfer";	
	Товары = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
	
   
	Попытка
		Запрос = новый Запрос;
		
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	ЗаданиеНаОтгрузку.Ссылка
			|ИЗ
			|	Документ.ЗаданиеНаОтгрузку КАК ЗаданиеНаОтгрузку
			|ГДЕ
			|	ЗаданиеНаОтгрузку.Дата МЕЖДУ &НачДата И &КонДата
			|	И 
			|(ЗаданиеНаОтгрузку.Номер = &Number1 
			| или ЗаданиеНаОтгрузку.Номер = &Number)
			|  И ЗаданиеНаОтгрузку.Подразделение = &Подразделение
			|УПОРЯДОЧИТЬ ПО
			|	ЗаданиеНаОтгрузку.Дата
			|АВТОУПОРЯДОЧИВАНИЕ";
			
		Если Месяц(ТекущаяДата())=1 Тогда
			НачДата = НачалоМесяца(ТекущаяДата());  //29.12.2016 - для нового года!
		Иначе
			НачДата = НачалоДня(ТекущаяДата()) - 14*86400;  //01.02.2017
		КонецЕсли;	
		
		КонДата = КонецДня(ТекущаяДата());
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонДата);
		Запрос.УстановитьПараметр("Number1", Number);   //ТК00 + номер цифрами...
		
		преф = лев(Number,2);
		Number = СокрЛП( прав(Number,стрДлина(Number)-2) ); // вырезаем ТК
		Запрос.УстановитьПараметр("Number", "ТК"+формат(число(Number),"ЧЦ=6; ЧВН=; ЧГ=0")  ); //НОМЕР ЗАДАНИЯ НА ОТГРУЗКУ 6-ти значный!
		Если преф="ТК" Тогда
			Запрос.УстановитьПараметр("Подразделение", справочники.Подразделения.НайтиПоКоду("00005") );//ТОЛЬКО Ярославль!
		Иначе //29.12.2016 документы по префиксу!
			Запрос.УстановитьПараметр("Подразделение", справочники.Подразделения.НайтиПоРеквизиту("ПрефиксИБ", преф) );
		КонецЕсли;
		
		результат = Запрос.Выполнить(); // не должно быть 5-ти значных номеров у заданий на отгрузку!
		
		
		// Сакулина. Добавила условие на поиск перемещения по такому же номеру?!
		Если результат.Пустой() Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ЗаданиеНаПеремещение.Ссылка
			|ИЗ
			|	Документ.ЗаданиеНаПеремещение КАК ЗаданиеНаПеремещение
			|ГДЕ
			|	ЗаданиеНаПеремещение.Дата МЕЖДУ &НачДата И &КонДата
			|	И 
			| (ЗаданиеНаПеремещение.Номер = &Number1 
			| или ЗаданиеНаПеремещение.Номер = &Number)
			|  И ЗаданиеНаПеремещение.Подразделение = &Подразделение
       		|УПОРЯДОЧИТЬ ПО
			|	ЗаданиеНаПеремещение.Дата
			|АВТОУПОРЯДОЧИВАНИЕ";
			//+++ 09.01.2018 - 6-ти значный!
			Запрос.УстановитьПараметр("Number", "ТК"+формат(число(Number),"ЧЦ=6; ЧВН=; ЧГ=0")  ); //С 2017г. НОМЕР ЗАДАНИЯ НА ПЕРЕМЕЩЕНИЕ 5-ти значный!
			результат = Запрос.Выполнить();
		КонецЕсли;	
		
		Если результат.Пустой() Тогда
			Возврат "Error. Not found document N "+Number+" in time from "+формат(НачДата,"ДЛФ=D")+" to "+формат(КонДата,"ДЛФ=D");
		КонецЕсли;
		
			Выборка   = результат.Выбрать();
			
			Выборка.Следующий();//первый попавшийся
			ЗаданиеСсылка = Выборка.Ссылка;
			
//22.11.2016 ==========================ЛОГ файл==================			
 ЗаписьXML = Новый ЗаписьXML;
 ИмяФайлаЛОГА = "D:\1C\Android\"+строка(ЗаданиеСсылка.Номер)+".xml";
 ЗаписьXML.ОткрытьФайл(ИмяФайлаЛОГА);
 ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ArrayOfProducts);
 ЗаписьXML.Закрыть();			
//===============================================================

	ЗаданиеОб = ЗаданиеСсылка.ПолучитьОбъект();
	Исключение
		Возврат "Error. NOT Found document N "+Number+"!!!
		         |"+ОписаниеОшибки();
	КонецПопытки;
	
//----------------доп.проверки---------------------------------------------	
	Если ArrayOfProducts=НЕОПРЕДЕЛЕНО Тогда
			Возврат "Error. Array of Products is Null!";
	ИначеЕсли ArrayOfProducts.products.Количество()=0 Тогда
			Возврат "Error. Array of Products is Empty!";
	КонецЕсли;
	
	Если ЗаданиеСсылка.ПометкаУдаления Тогда
		Возврат "Error. Order - already deleted! Rewrite is not available.";
	КонецЕсли;
	
	Если ЗаданиеСсылка.Выполнено Тогда
		Возврат "Error. Order - already done! Rewrite is not available.";
	КонецЕсли;	
	
	//----------------начинаем разбор---------------------------------------------	
	//Для Каждого Строка1 ИЗ ArrayOfProducts.Products Цикл
	
	
	
	//+++( 26.07.2016 - свернём по номеру строки (для разных очередей!)
	таблЗнач1 = новый ТаблицаЗначений;
	таблЗнач1.Колонки.Добавить("rownumber");
	таблЗнач1.Колонки.Добавить("productid");
	таблЗнач1.Колонки.Добавить("stockcell");
	таблЗнач1.Колонки.Добавить("stockname");
	таблЗнач1.Колонки.Добавить("quantity");
	таблЗнач1.Колонки.Добавить("quantityfact");
	// новое поле - мешается, поэтому надо сделать "свёртку" БЕЗ него!
	//таблЗнач1.Колонки.Добавить("queue");
		
	Для Каждого Строка1 ИЗ ArrayOfProducts.Products Цикл
		строка2 = таблЗнач1.Добавить();
		ЗаполнитьЗначенияСвойств( строка2, строка1);
	КонецЦикла;
	
	//stockname не надо!!!                   quantity нельзя суммировать! это Сколько Заказано в Строке!
	таблЗнач1.Свернуть("rownumber, productid, stockcell, quantity", "quantityfact");  
	
	//+++ 24.11.2016 устранение "дублей" товар-адрес  для разных строк    
	таблЗнач2 = таблЗнач1.Скопировать();
	таблЗнач2.Свернуть("productid, stockcell", "quantity, quantityfact");
	Если таблЗнач2.Количество()< таблЗнач1.Количество() Тогда
		 рез = рез + "
			|Exist "+строка(таблЗнач1.Количество() - таблЗнач2.Количество())+" dubl-strings!";
		// получится в последнюю строку из таблЗнач1	
		таблЗнач2.Колонки.Добавить("rownumber");
		для каждого стр2 из таблЗнач2 Цикл
			строки1 = таблЗнач1.НайтиСтроки(новый Структура("productid, stockcell", стр2.productid, стр2.stockcell) );
			стр2.rownumber = строки1[0].rownumber; // первый номер!
			Если строки1.Количество()>1 Тогда
			 рез = рез + "
			|"+строка(стр2.rownumber)+") << "+строка(строки1.Количество())
			+" strings. Sum quantity: "+строка(стр2.quantity)+" - Sum fact: "+строка(стр2.quantityfact);
			КонецЕсли;
		КонецЦикла;	
	таблЗнач1.Очистить();	
	таблЗнач1 = таблЗнач2.Скопировать(); // обратно в 1-ю таблицу!	
	КонецЕсли;	
	//+++)
	
	
	
	Для Каждого Строка1 ИЗ таблЗнач1 Цикл
		
		ном1 = Строка1.rownumber;
		СтрокаТЗ = ЗаданиеОб.Товары.Найти( ном1, "НомерСтроки");
		
		Если СтрокаТЗ=неопределено Тогда
			рез = рез + "
			|"+ строка(ном1)+") - string not found!";
			Продолжить;
		КонецЕсли;
		
		//+++ 15.06.2016 - НЕ менять строчку, Если факт.количество = 0 !
		Если Строка1.quantityfact<=0 Тогда 
			продолжить;	
		КонецЕсли;	
			
		
//22.11.2016-------------доп.проверка----------------------
			кодТов1 = лев(Строка1.productid, 7);
			Если сокрЛП(кодТов1)="" Тогда
			  рез = рез + "
			  |"+строка(ном1)+") No code of product!";
			  продолжить;
			КонецЕсли;
			  
			Тов1 = справочники.Номенклатура.НайтиПоКоду(кодТов1);
			Если Тов1=неопределено или Тов1=справочники.Номенклатура.ПустаяСсылка() Тогда
			  рез = рез + "
			  |"+строка(ном1)+") not found product "+сокрЛП(кодТов1);
			  продолжить;
			КонецЕсли;  
 
			кодЯчейки1 = лев(Строка1.stockcell,7);
	
			Если лев(кодЯчейки1,2)="99" Тогда
				СтрокаТЗ.АдресХранения = Справочники.АдресаХранения.ПустаяСсылка();
				Склад1 = Справочники.Склады.НайтиПоКоду( прав(кодЯчейки1,5) );
				Адр1   = справочники.АдресаХранения.ПустаяСсылка();
				ГруппаСкладов1 = Склад1.ГруппаСкладов;
			Иначе	
			    Адр1 = справочники.АдресаХранения.НайтиПоКоду(кодЯчейки1);
 				Склад1 = адр1.Владелец;
				ГруппаСкладов1 = адр1.Владелец.ГруппаСкладов;
			КонецЕсли;	
			
		//-----------проверка>>Поиск по 3м полям -------------------	
		Если    СтрокаТЗ.Номенклатура  <>Тов1 
			или СтрокаТЗ.АдресХранения <> Адр1
			ИЛИ СтрокаТЗ.Склад 		   <> Склад1 
			//ИЛИ СтрокаТЗ.ГруппаСкладов <> ГруппаСкладов1 
			Тогда

			//22.11.2016 --- попробуем найти такую строку ---
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ 
			|	ЗаданиеНаОтгрузкуТовары.НомерСтроки
			|ИЗ
			|	Документ.ЗаданиеНаОтгрузку.Товары КАК ЗаданиеНаОтгрузкуТовары
			|ГДЕ
			|	ЗаданиеНаОтгрузкуТовары.Ссылка = &Ссылка
			|	И ЗаданиеНаОтгрузкуТовары.Номенклатура = &Тов1
			|	И ЗаданиеНаОтгрузкуТовары.АдресХранения = &Адр1
			|	И ЗаданиеНаОтгрузкуТовары.Склад = &Склад1
			//|	И ЗаданиеНаОтгрузкуТовары.ГруппаСкладов = &ГруппаСкладов1
			|";
			Запрос.УстановитьПараметр("Ссылка", ЗаданиеСсылка);
			Если типЗнч(ЗаданиеСсылка)=Тип("ДокументСсылка.ЗаданиеНаПеремещение") Тогда
			 Запрос.Текст  = стрЗаменить(Запрос.Текст, ".ЗаданиеНаОтгрузку.",".ЗаданиеНаПеремещение.");
			КонецЕсли;
			Запрос.УстановитьПараметр("Ссылка", ЗаданиеСсылка);
			Запрос.УстановитьПараметр("Тов1",Тов1);
			Запрос.УстановитьПараметр("Адр1", Адр1);
			Запрос.УстановитьПараметр("Склад1", Склад1);
		//	Запрос.УстановитьПараметр("ГруппаСкладов1", ГруппаСкладов1);
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Если выборка.Следующий() Тогда
				СтрокаТЗ = ЗаданиеОб.Товары.Найти( Выборка.НомерСтроки, "НомерСтроки"); // нашли, но в другой строке!
				рез = рез +"
				|Сhanged other string N "+строка(ном1)+" >> "+ строка(Выборка.НомерСтроки);
			//+++ 28.11.2016 НЕ НАДО менять!	СтрокаТЗ.КоличествоЗаказано = Строка1.quantity;  
				СтрокаТЗ.ГруппаСкладов = ГруппаСкладов1;
			Иначе
				СтрокаТЗ = ЗаданиеОб.Товары.Добавить(); // НОВАЯ строка - другой товар или другая ячейка... которой не было
				СтрокаТЗ.Номенклатура  = Тов1;
				СтрокаТЗ.Склад 		   = Склад1;
				СтрокаТЗ.ГруппаСкладов = ГруппаСкладов1;
				СтрокаТЗ.АдресХранения = Адр1;
				СтрокаТЗ.КоличествоЗаказано = 0;  // 23.11.2016 чтобы общее число заказано НЕ сбилось!
				рез = рез +"
				|ADD NEW string N "+ строка(СтрокаТЗ.НомерСтроки);
			КонецЕсли;
			
		КонецЕсли;
		
			СтрокаТЗ.Количество = Строка1.quantityfact;
			
	КонецЦикла;
	
	Попытка
		ЗаданиеОб.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		рез = "Error. Not saved order! 
		|"+ОписаниеОшибки();
	КонецПопытки;
	
	Если рез = "" Тогда 
	рез = "Ok." 
	КонецЕсли;
	
//--------------------22.11.2016---------------------------------------	
	файлРез = новый ЗаписьТекста;
	файлРез.Открыть("D:\1C\Android\RESULT.txt", КодировкаТекста.UTF8, , Истина);
	файлРез.ЗаписатьСтроку( строка(ТекущаяДата())+" "+строка(ЗаданиеСсылка)+" ==> "+рез );
	файлРез.Закрыть();
	
	Возврат рез;
	
КонецФункции



Функция GetRestOfOneProduct(productid="", CodeOfBranch="")
	
	URL = "http://37.1.84.50:8080/Transfer";	
	
	Товары   = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
	
	Если НЕ ЗначениеЗаполнено(CodeOfBranch) Тогда
		CodeOfBranch = "00005";
	КонецЕсли;
	
	
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
               |	ТоварыНаСкладахОстатки.Склад,
               |	"""" КАК АдресХраненияКод,
               |	ТоварыНаСкладахОстатки.Номенклатура.Код
               |ИЗ
               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
               |			,
               |			Номенклатура = &Номенклатура
               |				И Склад.АдресноеХранение=ЛОЖЬ
               |				И Склад.ЗапретитьИспользование=ЛОЖЬ
               |				И Склад.Транзитный=ЛОЖЬ) КАК ТоварыНаСкладахОстатки
               |ГДЕ
               |	ТоварыНаСкладахОстатки.КоличествоОстаток > 0
               |
               |ОБЪЕДИНИТЬ ВСЕ
               |
               |ВЫБРАТЬ
               |	ТоварыАдресноеХранениеОстатки.КоличествоОстаток,
               |	ТоварыАдресноеХранениеОстатки.Склад,
               |	ТоварыАдресноеХранениеОстатки.АдресХранения.Код,
               |	ТоварыАдресноеХранениеОстатки.Номенклатура.Код
               |ИЗ
               |	РегистрНакопления.ТоварыАдресноеХранение.Остатки(,
               |			Номенклатура = &Номенклатура
               |				И Склад.ЗапретитьИспользование=ЛОЖЬ
               |				И Склад.Транзитный=ЛОЖЬ ) КАК ТоварыАдресноеХранениеОстатки
               |ГДЕ
               |	ТоварыАдресноеХранениеОстатки.КоличествоОстаток > 0";
			   
тов1 =  справочники.Номенклатура.НайтиПоКоду(productid);
Запрос.УстановитьПараметр("Номенклатура", тов1);

Если CodeOfBranch<>"00005" Тогда
	Запрос.Текст = стрЗаменить(Запрос.Текст, "Склад.Транзитный=ЛОЖЬ", "Склад.Транзитный=Истина
               |				И Склад.Подразделение = &Подразделение1");
	Подразделение1 =  справочники.Подразделения.НайтиПоКоду(CodeOfBranch);
	Запрос.УстановитьПараметр("Подразделение1", Подразделение1);
КонецЕсли;

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();

	i=0;
	Пока Выборка.Следующий() Цикл	
		Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
		i=i+1;
		Товар.rownumber = i;
		
		Товар.productid =(Строка(Выборка.НоменклатураКод)); 
			
		ШК = СокрЛП(Выборка.АдресХраненияКод);
		Если стрДлина(ШК)=7 Тогда
			ШК = ШК + КонтрольныйСимволEAN(ШК, 8);
			Товар.stockcell = ШК;
		Иначе
			Товар.stockcell = "";
		КонецЕсли;
		
	//+++ 16.08.2016 - "подмена" Склада на склад АХ (для отборов)
	//	Товар.stockname = строка(выборка.Склад);
		Если Выборка.Склад.АдресноеХранение Тогда 
			Товар.stockname = (Строка(Выборка.Склад)); 
		Иначе //подменяем на название Склада АХ
			род = Выборка.Склад.Родитель;
			Запрос1 = Новый Запрос;
			Запрос1.Текст = "ВЫБРАТЬ первые 1
			|		Склады.Наименование как СкладАХ
			|ИЗ Справочник.Склады КАК Склады
			|ГДЕ Склады.Родитель = &Родитель
			|	  И Склады.АдресноеХранение = ИСТИНА";
			Запрос1.УстановитьПараметр("Родитель", род);
			Результат1 = Запрос1.Выполнить();
			Выборка1= Результат1.Выбрать();
			Если Выборка1.Следующий() Тогда
				Товар.stockname = (Строка(Выборка1.СкладАХ)); 
			Иначе // Если какой-то вообще непонятный склад... то он сам
				Товар.stockname = (Строка(Выборка.Склад)); 
            КонецЕсли;
		КонецЕсли;

		//25.07.2017 нельзя использовать / - это конец тэга
		Товар.stockname = стрЗаменить(Товар.stockname,"/","_");  
	
		Товар.quantity    = 0; //Сколько надо отгрузить
		Товар.quantityfact= 0;
		Товар.rest		  = число(выборка.Остаток);
		
	Товары.Products.Добавить(Товар);
	КонецЦикла;

 	РезультатОперации = Товары;
	
	Возврат РезультатОперации;
		
КонецФункции


Процедура ЗаполнитьРезультатGetAllOrders(ТипДокумента,ТипXDTOРезультатОперации, РезультатОперации, CodeOfBranch, ТекстЗапроса)
	URL = "http://37.1.84.50:8080/Transfer";	
	Запрос = новый Запрос;
	Запрос.текст =  ТекстЗапроса;  
	
	
	
	//Запрос.текст =  ТекстЗапросаПоОчередям("", "ЦЦЛ"); 
	//Запрос.УстановитьПараметр("ЦЦЛ", справочники.ГруппыСкладов.НайтиПоКоду("06")  );  //АКБ, Аксессуары
	
	Запрос.УстановитьПараметр("НачДата",  НачалоДня( ТекущаяДата() ) - 5*86400  );    //начало рабочей недели
	Запрос.УстановитьПараметр("КонДата",  КонецДня(ТекущаяДата()) );
	
	Если НЕ ЗначениеЗаполнено(CodeOfBranch) Тогда
		CodeOfBranch = "00005";
	КонецЕсли;
	
	Подразделение = Справочники.Подразделения.НайтиПоКоду(CodeOfBranch);
	Запрос.УстановитьПараметр("Подразделение",  Подразделение);
	
	Если CodeOfBranch = "00005" Тогда // для "реального" остатка в ячейке
		Запрос.УстановитьПараметр("ПодразделениеСклад", справочники.Подразделения.ПустаяСсылка() );
	Иначе 
		Запрос.УстановитьПараметр("ПодразделениеСклад", Подразделение);
	КонецЕсли;
	
	результат = Запрос.Выполнить();
	ВыборкаЗаказы   = результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//=========================Цикл по заказам==================================
	Пока ВыборкаЗаказы.Следующий() Цикл	
		Документ1 = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Order"));
		Если ТипДокумента = "ЗаданиеПерем" Тогда
			Документ1.numberin1s 	= "@" + Строка(ВыборкаЗаказы.Задание.Номер);
		ИначеЕсли ТипДокумента = "ЗаданиеОтгр" Тогда
			Документ1.numberin1s 	= Строка(ВыборкаЗаказы.Задание.Номер);
        КонецЕсли;
			
		Документ1.dateofshipment = ВыборкаЗаказы.Задание.Дата;
		
		Документ1.client	     = строка(ВыборкаЗаказы.Важность) + //+++ Важность !
		СокрЛП( лев(Строка(ВыборкаЗаказы.ЗаданиеКонтрагент), 200) );
		
		Документ1.comment        = 	СокрЛП( ВыборкаЗаказы.ЗаданиеКомментарий );
		//+ " Водитель: "+СокрЛП(ВыборкаЗаказы.Задание.Водитель) + " Авто: "+СокрЛП(ВыборкаЗаказы.Задание.МаркаАвтомобиля)+" "+СокрЛП(ВыборкаЗаказы.Задание.ГосНомерАвтомобиля)
		
		//==============товары 1 заказа=========================================
		Товары   = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
		Товар 	 = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
		Выборка = ВыборкаЗаказы.Выбрать();
		стр0="";
		пока Выборка.Следующий() Цикл	
			стр1 = строка(Выборка.НомерСтроки)+"-"+формат(выборка.НомерОчереди,"ЧЦ=2; ЧВН=; ЧГ=0");
			
			//+++ 27.07.2016 - в 1 очереди - может быть несколько заказов одного клиента с таким же товаром!
			Если стр0=стр1 Тогда 
				Товар.quantity    = Товар.quantity    + Число(Выборка.КоличествоЗаказано); 
				Товар.quantityfact= Товар.quantityfact+ Число(Выборка.Количество);
				продолжить;
			Иначе
				Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
				стр0=стр1;
			КонецЕсли;
			
			Товар.rownumber =(Число(Выборка.НомерСтроки));
			
			Товар.productid =(Строка(Выборка.НоменклатураКод)); 
			
			Если ЗначениеЗаполнено(Выборка.АдресХранения) Тогда
				ШК = СокрЛП(Выборка.АдресХраненияКод);
			Иначе // НЕТ ЯЧЕЙКИ - берём код склада
				ШК = "99"+СокрЛП(Выборка.Склад.Код); // код всегда 5 символов, Иначе будет 0000099
			КонецЕсли;
			
			Если стрДлина(ШК)>0 и стрДлина(ШК)<7 Тогда
				ШК = формат( число(ШК), "ЧЦ=7; ЧВН=; ЧГ=0");
			КонецЕсли;
			
			ШК = ШК + КонтрольныйСимволEAN(ШК, 8);
			Товар.stockcell = ШК;
			
			Товар.quantity    = Число(Выборка.КоличествоЗаказано); //Сколько надо отгрузить
			Товар.quantityfact= Число(Выборка.Количество);
			
			//+++ 15.08.2016 - для отбора по Складу - надо "подменять" Склад на склад АХ, название "склада" будет в названии ячейки!
			Если Выборка.Склад.АдресноеХранение Тогда 
				Товар.stockname = (Строка(Выборка.Склад)); 
			Иначе //подменяем на название Склада АХ
				род = Выборка.Склад.Родитель;
				Запрос1 = Новый Запрос;
				Запрос1.Текст = "ВЫБРАТЬ первые 1
				|		Склады.Наименование как СкладАХ
				|ИЗ Справочник.Склады КАК Склады
				|ГДЕ Склады.Родитель = &Родитель
				|	  И Склады.АдресноеХранение = ИСТИНА";
				Запрос1.УстановитьПараметр("Родитель", род);
				Результат1 = Запрос1.Выполнить();
				Выборка1= Результат1.Выбрать();
				Если Выборка1.Следующий() Тогда
					Товар.stockname = (Строка(Выборка1.СкладАХ)); 
				Иначе // Если какой-то вообще непонятный склад... то он сам
					Товар.stockname = (Строка(Выборка.Склад)); 
				КонецЕсли;
			КонецЕсли;
			
			//+++ 26.07.2016 - номер очереди и Клиент
			очередь = формат(выборка.НомерОчереди,"ЧЦ=2; ЧВН=; ЧГ=0")+". "+строка(выборка.Контрагент);
			Если стрДлина(очередь)>40 Тогда
				очередь = лев(очередь,37)+"...";
			КонецЕсли;	
			Товар.queue = очередь; //лев(очередь, 40) = "02. " + 33 символа
			Товар.rest  = число(Выборка.КоличествоОстаток); // полное количество товара в данной ячейке!
			
			//25.07.2017 нельзя использовать / - это конец тэга
			Товар.stockname = стрЗаменить(Товар.stockname,"/","_");  
	
			Если Товар.quantityfact<Товар.quantity Тогда //+++ 07.11.2016
 				Товары.Products.Добавить(Товар);
			КонецЕсли;
			
		КонецЦикла;
		
		Документ1.ArrayOfProducts = Товары;
		РезультатОперации.Orders.Добавить( Документ1 );
	КонецЦикла;
КонецПроцедуры


Функция SetOrderstatusDeliveredByDriver(PhoneNumber="", Message="")
	
	URL = "http://37.1.84.50:8080/Transfer";
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "ResultDel");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);

	//==============================================================================
	//+++ 24.05.2017 --- анализ Крышек --- передаётся номер задания на отгрузку ----
	Message = СокрЛП(Message);

	Если Найти(врег(Message),"Я")=1 
		или Найти(врег(Message),"П")=1 // Питер
		или Найти(врег(Message),"Е")=1  // Екатеринбург
		или Найти(врег(Message),"Р")=1  // Ростов
		или Найти(врег(Message),"М")=1  // Москва
	тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ЗаданиеНаОтгрузку.Ссылка
		|ИЗ  Документ.ЗаданиеНаОтгрузку КАК ЗаданиеНаОтгрузку
		|ГДЕ ЗаданиеНаОтгрузку.Номер В (&СписокНомеров)
		|	И ЗаданиеНаОтгрузку.Дата > &НачДата";
		номер = СокрЛП(Message);
		
		Если Найти(врег(номер),"Я")=1 тогда Преф = "ТК";   //+++ 29.05.2017
		ИначеЕсли Найти(врег(номер),"П")=1 тогда Преф = "СП"; // Питер
		ИначеЕсли Найти(врег(номер),"Е")=1 тогда Преф = "Ео"; // Екатеринбург
		ИначеЕсли Найти(врег(номер),"Р")=1 тогда Преф = "РД"; // Ростов
		ИначеЕсли Найти(врег(номер),"М")=1 тогда Преф = "МС"; // Москва
		КонецЕсли;
		
		//30.05.2017 -----------------Список через , ------------------------------
		СписокНомеров = новый СписокЗначений;
		ii=Найти(номер,",");
		Если ii=0 тогда
			номер = Преф + "0" + прав(номер, стрДлина(номер)-1); //я19776 >> ТК019776
			Если стрДлина(номер)<>8 Тогда
				номер = Преф + формат( число(прав(номер, стрДлина(номер)-2)), "ЧЦ=6; ЧВН=; ЧГ=");
			КонецЕсли;
		СписокНомеров.Добавить( номер );
		Иначе //--------- много номеров--------------
			
			Пока ii>0 цикл
			номер1 = СокрЛП(лев(номер,ii-1));
			номер1 = Преф + "0" + прав(номер1, стрДлина(номер1)-1); //я19776 >> ТК019776
			Если стрДлина(номер1)<>8 Тогда
				номер1 = Преф + формат( число(прав(номер1, стрДлина(номер1)-2)), "ЧЦ=6; ЧВН=; ЧГ=");
			КонецЕсли;
			СписокНомеров.Добавить( номер1 );
			
        	номер = СокрЛП(прав(номер, стрДлина(номер) - ii));
			ii=Найти(номер,",");
	        КонецЦикла;
			
			Если стрДлина(номер)>0 тогда // последний (без конечной запятой)
				номер = Преф + "0" + прав(номер, стрДлина(номер)-1); //я19776 >> ТК019776
				Если стрДлина(номер)<>8 Тогда
					номер = Преф + формат( число(прав(номер, стрДлина(номер)-2)), "ЧЦ=6; ЧВН=; ЧГ=");
				КонецЕсли;
			СписокНомеров.Добавить( номер );
            КонецЕсли;
			
		КонецЕсли;
		Запрос.УстановитьПараметр("СписокНомеров", СписокНомеров ); // не более, чем за последний месяц
		//------------------------------------------------------------------------------------------------
		
		Запрос.УстановитьПараметр("НачДата", ДобавитьМесяц(ТекущаяДата(),-1) ); // не более, чем за последний месяц
		Результат = Запрос.Выполнить();
		
		Если результат.Пустой() тогда
			РезультатОперации.Success = ЛОЖЬ;
			РезультатОперации.Error = "Not found shipment document by numbers: "+Message;
			возврат РезультатОперации;
		КонецЕсли;	
	
		выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() цикл  // цикл по номерам!
			док = Выборка.ссылка;	
			
			//запись в Категории документа!
			регСв = РегистрыСведений.КатегорииОбъектов.СоздатьМенеджерЗаписи();
			регСв.Объект    = док;
			регСв.Категория = справочники.КатегорииОбъектов.НайтиПоКоду("00050"); //Крышки отданы водителю
			
			попытка
				регСв.Записать();
				
				//----------------сюда НЕ надо!---------------
				//регСв2= РегистрыСведений.SMSотВодителей.СоздатьМенеджерЗаписи(); 
				//регСв2.Дата		= ТекущаяДата(); // дата и время записи
				//регСв2.Телефон   = PhoneNumber;
				//регСв2.Сообщение = Message;
				//регСв2.ЗаданиеНаОтгрузку = док;
				//регСв2.Обработан = ЛОЖЬ;
				//регСв2.Комментарий = "[v]"+строка(регСв.Категория);
				//регСв2.Записать();
					
				РезультатОперации.Success = Истина;
				РезультатОперации.Error   = ""; //НомераЗаказов;
			исключение
				РезультатОперации.Success = ЛОЖЬ;
				РезультатОперации.Error = Message+" : "+ОписаниеОшибки();
				прервать;
			КонецПопытки;
		КонецЦикла;
		
		возврат РезультатОперации;	
	
	КонецЕсли;//сообщение содержит ТК
	//==============================================================================
	
	регСв = РегистрыСведений.SMSотВодителей.СоздатьМенеджерЗаписи();
	регСв.Телефон   = PhoneNumber;
	регСв.Сообщение = Message;
	регСв.ЗаданиеНаОтгрузку = документы.ЗаданиеНаОтгрузку.ПустаяСсылка();
	регСв.Обработан = ЛОЖЬ;
	
	регСв.Дата		= ТекущаяДата(); // дата и время записи
	
	регСв.Контрагент  = справочники.Контрагенты.ПустаяСсылка(); 
	регСв.Адрес       = "";
	регСв.Координаты  = "";
	регСв.Комментарий = "";
	
	ОбрабатыватьСразу = Истина; // обрабатываем сразу!
	
	Попытка 
				
	Если ОбрабатыватьСразу Тогда	
		
		регСв.ЗаданиеНаОтгрузку = НайтиЗаданиеПоНомеруВодителя(PhoneNumber);
		Если регСв.ЗаданиеНаОтгрузку.Пустая() Тогда
			
			регСв.Обработан = ЛОЖЬ; //не нашли - значит не обработали... есть ошибка

			РезультатОперации.Success = ЛОЖЬ;
			РезультатОперации.Error = "Not found shipment document by phone number!";
			регСв.Комментарий = РезультатОперации.Error;
			регСв.Записать(Истина);
	        Message = ""; Message0="";//Конец!
		Иначе	
			Message0 = СокрЛП(Message); //14.03.2017   может быть "1, 2"
			i = найти(Message0,","); L = стрДлина(Message0);
			Если i>0 Тогда
				Message  = СокрЛП(лев(Message0,i-1));     
				Message0 = СокрЛП(прав(Message0, L-i));   
			Иначе
				i = найти(Message0,"."); L = стрДлина(Message0); //15.03.2017    --- через "."
				Если i>0 Тогда
					Message  = СокрЛП(лев(Message0,i-1));     
					Message0 = СокрЛП(прав(Message0, L-i));   
				иначе		
					i = найти(Message0," "); L = стрДлина(Message0); //19.04.2017 --- через " "
					Если i>0 Тогда
						Message  = СокрЛП(лев(Message0,i-1));     
						Message0 = СокрЛП(прав(Message0, L-i));   
					иначе
						Message = Message0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	
			
			масКонтрФилиалов = новый массив;
			масКонтрФилиалов = получитьКонтрФилиалов();
			
//======================================================================================			
		Пока Message<>"" Цикл	//14.03.2017 цикл по очередям через , . или "пробел"
				
			НомерВыгрузки = число(Message);
			выборка = найтиЗаказы(регСв.ЗаданиеНаОтгрузку, НомерВыгрузки);
			НомераЗаказов = ""; ош = "";
			Пока выборка.Следующий() Цикл
				зак1 = выборка.ЗаказПокупателя.ПолучитьОбъект();
				регСв.Контрагент = выборка.Контрагент;
				регСв.Адрес 	 = сокрЛП(выборка.Адрес); //!!!  09.03.2017
				координаты = "";
				Если зак1.НомерТорговойТочкиКонтрагента>0 Тогда
					точка = справочники.Точки.НайтиПоРеквизиту("Номер", зак1.НомерТорговойТочкиКонтрагента,,регСв.Контрагент);
						  регСв.Адрес= точка.Адрес;
						  координаты = точка.Координаты;
				КонецЕсли;	
				регСв.Координаты = координаты;
				
				//14.03.2017 - исключение филиалов
				если масКонтрФилиалов.Найти( выборка.Контрагент ) <> неопределено тогда
					НомераЗаказов = "Заказы на филиал - не отмечаются как доставленные.";
					ош = "Client is Filial !";
				Иначе
					
					//регистрация в обмен Реализация!
					реал = выборка.Реализация; 
					Если ЗначениеЗаполнено(реал) Тогда //Если есть и это реализация
						Если типЗнч(реал) = тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
							
							//15.03.2017 - только если есть реализация!
								зак1.Статус = перечисления.СтатусыЗаказов.Доставлен; 
								зак1.ВремяНапоминания = ТекущаяДата(); //+++ 05.02.2018 регСв.Дата
								зак1.ОбменДанными.Загрузка = Истина;   //09.03.2017 - в режиме обмена - никаких проверок нет!
								зак1.Записать();
								зак1.ОбменДанными.Загрузка = ЛОЖЬ;
								НомераЗаказов = НомераЗаказов + выборка.Номер+", ";
							
							//09.03.2017 - так не работает
							ПланыОбмена.ЗарегистрироватьИзменения(ПланыОбмена.ПланОбмена_ОИМ.НайтиПоКоду("sim"), реал ); // по ссылке на реализацию
						Иначе
							НомераЗаказов = НомераЗаказов+ выборка.Номер+"= ";  //чтобы длина сохранялась!
							ош = ош +выборка.Номер+"- moved! ";
						КонецЕсли;
					Иначе
						НомераЗаказов = НомераЗаказов+ выборка.Номер+"x ";  //чтобы длина сохранялась!
						ош = ош +выборка.Номер+"- No sales! ";
					КонецЕсли;
				КонецЕсли;
				
								
			КонецЦикла;//Заказы по 1 очереди
			
			РезультатОперации.Success = Истина;
			РезультатОперации.Error   = ош; 
			
			регСв.Обработан = Истина; // только, Если всё хорошо...
			регСв.Комментарий = НомераЗаказов;
			
			регСв.Записать(Истина);// Перезаписываем, Если уже такой номер и очередь есть! пишем в любом случае!
			
 			Message = Message0;
			
			//=============для 1, 2 . 3 4 ========================
			i = найти(Message0,","); L = стрДлина(Message0);  
			Если i>0 Тогда
				Message  = СокрЛП(лев(Message0,i-1));     
				Message0 = СокрЛП(прав(Message0, L-i));   
			Иначе
				i = найти(Message0,"."); L = стрДлина(Message0); //15.03.2017    --- через "."
				Если i>0 Тогда
					Message  = СокрЛП(лев(Message0,i-1));     
					Message0 = СокрЛП(прав(Message0, L-i));   
				иначе		
					i = найти(Message0," "); L = стрДлина(Message0); //19.04.2017 --- через " "
					Если i>0 Тогда
						Message  = СокрЛП(лев(Message0,i-1));     
						Message0 = СокрЛП(прав(Message0, L-i));   
					иначе
						Message = "";  //Конец!
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	
 			
		КонецЦикла; //разные очереди	
		
		КонецЕсли;
	
	Иначе //без обработки - всегда успешно!
		РезультатОперации.Success = Истина;
		РезультатОперации.Error   = ""; //НомераЗаказов;
		регСв.Комментарий = "";
		регСв.Записать(Истина);
	КонецЕсли;
	
	Исключение
		РезультатОперации.Success = ЛОЖЬ;                   //Если есть задание на отгрузку, но ошибка -> обработан = ЛОЖЬ
		РезультатОперации.Error   = ОписаниеОшибки();    
		
		регСв.Обработан   = ЛОЖЬ;
		регСв.Комментарий = РезультатОперации.Error;
		регСв.Записать(Истина);
	КонецПопытки;
	

	Возврат РезультатОперации;	
	
КонецФункции	


функция найтиЗаказы(Задание, НомерОчереди)
	 Запрос = Новый Запрос;    //13.03.2017 идут дубли по товару... нужны РАЗЛИЧНЫЕ
	 Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	ИнформацияПоПроезду.Заказ как ЗаказПокупателя,
	  |	ИнформацияПоПроезду.Заказ.Номер как Номер,
	 |	ИнформацияПоПроезду.Реализация,
	 |	ИнформацияПоПроезду.Контрагент,
	 |	выразить(ИнформацияПоПроезду.Адрес как Строка(250) ) как Адрес
	 |ИЗ
	 |	РегистрСведений.ИнформацияПоПроезду КАК ИнформацияПоПроезду
	 |ГДЕ
	 |	ИнформацияПоПроезду.Задание = &Задание
	 |	И ИнформацияПоПроезду.НомерОчереди = &НомерОчереди";
	 
	 Запрос.УстановитьПараметр("Задание",Задание );
	 Запрос.УстановитьПараметр("НомерОчереди",НомерОчереди );
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 возврат Выборка;
	 
КонецФункции	

функция НайтиЗаданиеПоНомеруВодителя(ТелефонВодителя="", ДатаМин=неопределено)
	
	Запрос = Новый Запрос;   //ищем последнее задание по водителю!
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЗаданиеНаОтгрузку.Ссылка
	               |ИЗ
	               |	Документ.ЗаданиеНаОтгрузку КАК ЗаданиеНаОтгрузку
	               |ГДЕ
	               |	(ЗаданиеНаОтгрузку.ТелефонВодителя подобно (&ТелефонВодителя)
	               |	или ЗаданиеНаОтгрузку.ТелефонВодителя подобно (&ТелефонВодителя8)
	               |	или ЗаданиеНаОтгрузку.ТелефонВодителя подобно (&ТелефонВодителя8тире)
	               |	или ЗаданиеНаОтгрузку.ТелефонВодителя подобно (&ТелефонВодителя8тире2) )
	               |	И ЗаданиеНаОтгрузку.Проведен
	               |	И ЗаданиеНаОтгрузку.Выполнено
	               |	И ЗаданиеНаОтгрузку.Дата >= &ДатаМин
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЗаданиеНаОтгрузку.Дата УБЫВ
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
//различные варианты.... номер в середине...				   
	Запрос.УстановитьПараметр("ТелефонВодителя", "%"+ТелефонВодителя+"%");
	
//с 8-кой	
	ТелефонВодителя8 = стрЗаменить(ТелефонВодителя,"+7","8");
	Запрос.УстановитьПараметр("ТелефонВодителя8", "%"+ТелефонВодителя8+"%");
	
	//ищем 920-143-23-45
	ТелефонВодителя8тире = Сред(ТелефонВодителя8,2,3)+"-"+Сред(ТелефонВодителя8,5,3)+"-"+Сред(ТелефонВодителя8,8,2)+"-"+Сред(ТелефонВодителя8,10,2);
	Запрос.УстановитьПараметр("ТелефонВодителя8тире", "%"+ТелефонВодителя8тире+"%");
	//ищем  920-143-2345
	ТелефонВодителя8тире2 = Сред(ТелефонВодителя8,2,3)+"-"+Сред(ТелефонВодителя8,5,3)+"-"+Сред(ТелефонВодителя8,8,4);
	Запрос.УстановитьПараметр("ТелефонВодителя8тире2", "%"+ТелефонВодителя8тире2+"%");
	
	//(930)120-04-52   21.07.2017
	ТелефонВодителя8тире3 = "("+Сред(ТелефонВодителя8,2,3)+")"+Сред(ТелефонВодителя8,5,3)+"-"+Сред(ТелефонВодителя8,8,2)+"-"+Сред(ТелефонВодителя8,10,2);
	Запрос.УстановитьПараметр("ТелефонВодителя8тире3", "%"+ТелефонВодителя8тире3+"%");
	
	Если ДатаМин=неопределено Тогда  // обычно не более 1 - 2х недель
		ДатаМин=НачалоДня(ТекущаяДата()) - 14*86400;
	КонецЕсли;	 
	Запрос.УстановитьПараметр("ДатаМин",ДатаМин );
	
	Результат = Запрос.Выполнить();
	Выборка   = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		рез = Выборка.ссылка;
	Иначе
		рез = документы.ЗаданиеНаОтгрузку.ПустаяСсылка();
	КонецЕсли;	
	
	возврат рез;
КонецФункции	

функция получитьКонтрФилиалов()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Подразделения.Контрагент
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	Подразделения.ОбособленноеПодразделение";
	
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();	
	
	возврат табл.ВыгрузитьКолонку("Контрагент");
	
КонецФункции	
	
 
//=====================ПРИХОДЫ  - TransferArrival================================

функция ТекстЗапросаШапкаПоПриходу(типПрихода = 0)
	Если типПрихода = 0 тогда //Поступление
	 ЗапросТекст = "ВЫБРАТЬ
	               |	Заказ.Номер КАК numberin1s,
	               |	Заказ.Дата КАК dateoforder,
	               |	Заказ.КонтрагентНаименование КАК client,
	               |	Заказ.Комментарий КАК comment,
	               |	ЕСТЬNULL(Приход.Номер, """") КАК arrivalnumber
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		З.Ссылка КАК Ссылка,
	               |		З.Номер КАК Номер,
	               |		З.Дата КАК Дата,
	               |		З.Комментарий КАК Комментарий,
	               |		З.Контрагент.Наименование КАК КонтрагентНаименование
	               |	ИЗ
	               |		Документ.ЗаказПоставщику КАК З
	               |	ГДЕ
	               |		З.Номер ПОДОБНО &НомерДокумента
	               |		И З.Дата МЕЖДУ &НачДата И &КонДата
	               |		И З.Подразделение = &Подразделение) КАК Заказ
				   //ТОЛЬКО САМЫЙ СВЕЖИЙ - 1 приход !
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ 
				   //| ПЕРВЫЕ 1
	               |			П.Номер КАК Номер,
	               |			ВЫРАЗИТЬ(П.Сделка КАК Документ.ЗаказПоставщику) КАК Сделка
	               |		ИЗ
	               |			Документ.ПоступлениеТоваровУслуг КАК П
	               |		ГДЕ
	               |			П.Дата МЕЖДУ &НачДата И &КонДата
	               |			И П.ПометкаУдаления = ЛОЖЬ
	               |			И П.Подразделение = &Подразделение
	               //|		УПОРЯДОЧИТЬ ПО П.Дата УБЫВ
				   |) КАК Приход
	               |		ПО (Приход.Сделка = Заказ.Ссылка)";
	Иначе //=1 ПЕРЕМЕЩЕНИЕ!
		 ЗапросТекст = "ВЫБРАТЬ
		               |	ДокПеремещение.Номер КАК numberin1s,
		               |	ДокПеремещение.Дата КАК dateoforder,
		               |	ДокПеремещение.СкладНаименование КАК client,
		               |	ДокПеремещение.Комментарий КАК comment,
		               |	ЕСТЬNULL(Приход.Номер, """") КАК arrivalnumber
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		З.Ссылка КАК Ссылка,
		               |		З.Номер КАК Номер,
		               |		З.Дата КАК Дата,
		               |		З.Комментарий КАК Комментарий,
		               |		З.СкладОтправитель.Наименование КАК СкладНаименование
		               |	ИЗ
		               |		Документ.ПеремещениеТоваров КАК З
		               |	ГДЕ
		               |		З.Номер ПОДОБНО &НомерДокумента
		               |		И З.Дата МЕЖДУ &НачДата И &КонДата
		               |		И З.Подразделение = &Подразделение) КАК ДокПеремещение
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ 
					   //|ПЕРВЫЕ 1
		               |			П.Номер КАК Номер,
		               |			П.Перемещение КАК Сделка
		               |		ИЗ
		               |			Документ.ПеремещениеТоваров КАК П
		               |		ГДЕ
		               |			П.Дата МЕЖДУ &НачДата И &КонДата
		               |			И П.ПометкаУдаления = ЛОЖЬ
		               //|		УПОРЯДОЧИТЬ ПО П.Дата УБЫВ
					   |) КАК Приход
		               |		ПО (Приход.Сделка = ДокПеремещение.Ссылка)";
	КонецЕсли;			   
 возврат ЗапросТекст;
КонецФункции

функция ТекстЗапросаТоварыПоЗАКАЗУ()
	 ЗапросТекст = "ВЫБРАТЬ
	               |	ВсеПродукты.rownumber КАК rownumber,
	               |	ВсеПродукты.productid КАК productid,
	               |	ВсеПродукты.quantity КАК quantity,
	               |	ВсеПродукты.name КАК name,
	               |	ВсеПродукты.producttype КАК producttype,
	               |	ВсеПродукты.article КАК article,
	               |	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК barcode,
	               |	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК КоличествоШК
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		МИНИМУМ(ЗаказыИПоступления.rownumber) КАК rownumber,
	               |		ЗаказыИПоступления.productid КАК productid,
	               |		МАКСИМУМ(ЗаказыИПоступления.quantity) КАК quantity,
	               |		МАКСИМУМ(ЗаказыИПоступления.name) КАК name,
	               |		МАКСИМУМ(ЗаказыИПоступления.producttype) КАК producttype,
	               |		МАКСИМУМ(ЗаказыИПоступления.article) КАК article
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			ПоступлениеТоваровУслугТовары.НомерСтроки КАК rownumber,
	               |			ПоступлениеТоваровУслугТовары.Номенклатура.Код КАК productid,
	               |			ПоступлениеТоваровУслугТовары.Количество КАК quantity,
	               |			ПоступлениеТоваровУслугТовары.Номенклатура.Наименование КАК name,
	               |			ВЫБОР
	               |				КОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.Шины)
	               |					ТОГДА ""1""
	               |				КОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.диски)
	               |					ТОГДА ""2""
	               |				КОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.АКБ)
	               |					ТОГДА ""3""
	               |				КОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.Аксессуары)
	               |					ТОГДА ""4""
	               |				ИНАЧЕ ""0""
	               |			КОНЕЦ КАК producttype,
	               |			ПоступлениеТоваровУслугТовары.Номенклатура.Артикул КАК article
	               |		ИЗ
	               |			Документ.ЗаказПоставщику.Товары КАК ПоступлениеТоваровУслугТовары
	               |		ГДЕ
	               |			ПоступлениеТоваровУслугТовары.Ссылка.Номер = &НомерДокумента
	               |			И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
				   |
				   |//#ПОСТУПЛЕНИЯ
				   |
							   |) КАК ЗаказыИПоступления
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ЗаказыИПоступления.productid) КАК ВсеПродукты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	               |		ПО (ВсеПродукты.productid = ВЫРАЗИТЬ(Штрихкоды.Владелец КАК Справочник.Номенклатура).Код)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	rownumber
	               |ИТОГИ
	               |	МАКСИМУМ(productid),
	               |	МАКСИМУМ(quantity),
	               |	МАКСИМУМ(name),
	               |	МАКСИМУМ(producttype),
	               |	МАКСИМУМ(article),
	               |	МАКСИМУМ(barcode),
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоШК)
	               |ПО
	               |	rownumber";
					   
	    возврат ЗапросТекст;
  
КонецФункции

функция ТекстЗапросаТоварыНаЯчейкахПоПриходу(типПрихода = 0)
 	 ЗапросТекст = "ВЫБРАТЬ
					|	ПоступлениеТоваровУслугТовары.Номенклатура.Код,
					|	ПоступлениеТоваровУслугТовары.Склад,
					|	ПоступлениеТоваровУслугТовары.Склад.Код,
					|	ПоступлениеТоваровУслугТовары.АдресХранения,
					|	ПоступлениеТоваровУслугТовары.АдресХранения.Код,
					|	ПоступлениеТоваровУслугТовары.Количество
					|ИЗ
					|	Документ.ПоступлениеТоваровУслуг.ТоварыАдресноеХранение КАК ПоступлениеТоваровУслугТовары
					|ГДЕ
					|	ПоступлениеТоваровУслугТовары.Ссылка.Номер = &НомерДокумента
					|	И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
					|	И ПоступлениеТоваровУслугТовары.Ссылка.Подразделение = &Подразделение
					
					    |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугТовары.Номенклатура.Код,
	               |	ПоступлениеТоваровУслугТовары.Склад,
	               |	ПоступлениеТоваровУслугТовары.Склад.Код,
	               |	ЗНАЧЕНИЕ(Справочник.АдресаХранения.ПустаяСсылка),
	               |	"""",
	               |	ПоступлениеТоваровУслугТовары.Количество
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
				    |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Номер = &НомерДокумента
	               |	И ПоступлениеТоваровУслугТовары.Склад.АдресноеХранение = ЛОЖЬ
	               |	И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	               |";
	  Если типПрихода > 0 тогда
	  	ЗапросТекст = стрЗаменить( ЗапросТекст,".ПоступлениеТоваровУслуг.",".ПеремещениеТоваров.");
  	  КонецЕсли;
 возврат ЗапросТекст;
КонецФункции

функция ТекстЗапросаВсеПриходы()
	
	ЗапросТекст = "ВЫБРАТЬ
	              |	ЗаказПоставщику.Номер КАК Номер,
	              |	0 КАК Тип
	              |ИЗ
	              |	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	              |ГДЕ
	              |	ЗаказПоставщику.Дата МЕЖДУ &НачДата И &КонДата
	              |	И ЗаказПоставщику.Подразделение = &Подразделение
	              |	И ЗаказПоставщику.Проведен
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	ПеремещениеТоваров.Номер,
	              |	1
	              |ИЗ
	              |	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	              |ГДЕ
	              |	ПеремещениеТоваров.Дата МЕЖДУ &НачДата И &КонДата
	              |	И ПеремещениеТоваров.СкладПолучатель.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ВПути)
	              |	И ПеремещениеТоваров.СкладОтправитель.Подразделение <> ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	              |	И ПеремещениеТоваров.Проведен
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	Тип,
	              |	Номер
	              |АВТОУПОРЯДОЧИВАНИЕ";
	
	возврат ЗапросТекст;
КонецФункции	

//=======================================ФУНКЦИИ===================================

//получить 1 документ прихода
Функция GetOrderOfArrivalByNumber(Number="", Type=неопределено)
	URL = "http://37.1.84.50:8080/TransferArrival";	
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "Order");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	
	Если Number="" тогда
		РезультатОперации.comment = "ERROR. Number is empty!";
		возврат РезультатОперации;
	КонецЕсли;
	
	//По префиксу - 16.08.2017 - ВСЕГДА перемещение, если не ТК!
	безПрефикса ="";
	Если ВРЕГ(лев(Number,2))="СП" Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду("00112");  
		Type=1; //Это ВСЕГДА перемещение с филиала ДЛЯ Ярославля
	ИначеЕсли ВРЕГ(лев(Number,2))="РД" Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду("00106");  
		Type=1; //Это перемещение с филиала ДЛЯ Ярославля
	ИначеЕсли ВРЕГ(лев(Number,2))="Ео" Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду("00138");  
		Type=1; //Это перемещение с филиала ДЛЯ Ярославля
	ИначеЕсли ВРЕГ(лев(Number,2))="МС" Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду("00133");  
		Type=1; //Это перемещение с филиала ДЛЯ Ярославля
	ИначеЕсли ВРЕГ(лев(Number,2))="ТК" Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду("00005");  
	Иначе	
		безПрефикса = "%";
		Подразделение = справочники.Подразделения.НайтиПоКоду("00005");  
	КонецЕсли;
	
	Если Type=неопределено тогда // по умолчанию ищем ЗаказПоставщику
		Type=0;
	КонецЕсли;	
	
    // до 2х месяцев назад... Заказы Поставщику очень старые бывают!
	ЧислоДнейПоиска = Константы.ЧислоДнейПоискаДокументовПриходаAndroid.Получить(); //17.07.2017
	НачДата = НачалоДня(ТекущаяДата()) - ЧислоДнейПоиска*86400;
	КонДата = КонецДня(ТекущаяДата());
	НомерЗак     = "";
	НомерПрихода = "";

//----------------------------Шапка документа--------------------------------------
	Запрос = новый Запрос;
	Запрос.текст = ТекстЗапросаШапкаПоПриходу(Type);  
	Запрос.УстановитьПараметр("Подразделение", Подразделение ); 
	//20.07.2017 у перемещений номер короче чем надо у СП и РД, а у МС нормальный!
	Если Type=1 тогда 
		если стрДлина(Number)=7 тогда
			Number= Number+" ";
		КонецЕсли;
	КонецЕсли;	
	Запрос.УстановитьПараметр("НомерДокумента", безПрефикса+Number  );  
	Запрос.УстановитьПараметр("НачДата",  НачДата ); 
	Запрос.УстановитьПараметр("КонДата",  КонДата );
	результат = Запрос.Выполнить();
	Если результат.Пустой() тогда
		возврат РезультатОперации; //пустое всё!
	КонецЕсли;
	
	Выборка   = результат.Выбрать(); 
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств( РезультатОперации, Выборка );
	РезультатОперации.typeofarrival = Type; 
	
	НомерЗак     = Выборка.numberin1s;
	НомерПрихода = Выборка.arrivalnumber;
	
	Если НомерЗак="" тогда
		РезультатОперации.comment ="ERROR. Not found document by number "+Number
		           +" in period ["+формат(НачДата,"ДЛФ=D")+" - "+формат(КонДата,"ДЛФ=D")+"] !!!";
		возврат РезультатОперации;
	КонецЕсли;	


	
//------------------ТЧ Товары >> МассивСтрок----------------------------------
	МассивСтрокТЧТовары = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfRows"));
	Запрос = новый Запрос;
	Запрос.текст = ТекстЗапросаТоварыПоЗАКАЗУ();  
	Если Type>0 тогда //запрос одинаковый по ТЧ Товары!
		Запрос.Текст  = стрЗаменить(Запрос.Текст, ".ЗаказПоставщику.", ".ПеремещениеТоваров.");
	КонецЕсли;

	//+++ 14.07.2017 добавляем из Прихода/2-го перемещения из ТЧ Товары то, чего не было в Заказе/1-ом приходе
	Если НомерПрихода<>"" тогда
 	Запрос.текст = СтрЗаменить(Запрос.текст , "//#ПОСТУПЛЕНИЯ","
               |		ОБЪЕДИНИТЬ ВСЕ
               |		
               |		ВЫБРАТЬ
               |			1000 + Приход.НомерСтроки,
               |			Приход.Номенклатура.Код,
               |			0,
               |			Приход.Номенклатура.Наименование,
               |			ВЫБОР
               |				КОГДА Приход.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.Шины)
               |					ТОГДА ""1""
               |				КОГДА Приход.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.диски)
               |					ТОГДА ""2""
               |				КОГДА Приход.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.АКБ)
               |					ТОГДА ""3""
               |				КОГДА Приход.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.Аксессуары)
               |					ТОГДА ""4""
               |				ИНАЧЕ ""0""
               |			КОНЕЦ,
               |			Приход.Номенклатура.Артикул
               |		ИЗ
               |			Документ.ПоступлениеТоваровУслуг.Товары КАК Приход
               |		ГДЕ
               |			Приход.Ссылка.Номер = &НомерПрихода
               |			И Приход.Ссылка.Дата МЕЖДУ &НачДата И &КонДата ");
	Запрос.УстановитьПараметр("НомерПрихода", НомерПрихода );  
		Если Type>0 тогда //запрос одинаковый!
		Запрос.Текст = стрЗаменить(Запрос.Текст, ".ПоступлениеТоваровУслуг.", ".ПеремещениеТоваров.");
        КонецЕсли;
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение );  
	Запрос.УстановитьПараметр("НомерДокумента", НомерЗак );  
	Запрос.УстановитьПараметр("НачДата",  НачДата ); 
	Запрос.УстановитьПараметр("КонДата",  КонДата );
	
	результат1 = Запрос.Выполнить();
	Выборка1   = результат1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); // для нескольких ШК
	rownumber = 0;
	пока Выборка1.Следующий() Цикл	
		Строка1 = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Row"));
		ЗаполнитьЗначенияСвойств(Строка1, Выборка1 );
		МассивСтрокТЧТовары.Row.Добавить(Строка1); //массив
	КонецЦикла;
 	РезультатОперации.ArrayOfRows = МассивСтрокТЧТовары;

//--------------------ТОВАРЫ из Заказа/1-го перемещения + Прихода/2-го перемещения с номером строки 1000+N-------------------
 	Выборка1.Сбросить();
 	МассивТоваров = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
	пока Выборка1.Следующий() Цикл	
		Товар1 = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
		
		ЗаполнитьЗначенияСвойств(Товар1, Выборка1);
		
			
		Если Выборка1.КоличествоШК=1 тогда		
			Если НЕ ЗначениеЗаполнено(СокрЛП(Выборка1.barcode)) или стрДлина(СокрЛП(Выборка1.barcode))<>13 тогда // иногда бывают неправильные коды!
				Если стрДлина(СокрЛП(Выборка1.productid))=7 и Найти("0123456789", лев(Выборка1.productid,1) )>0 тогда
				ШК="05000"+СокрЛП(Выборка1.productid);
				ШК = ШК + КонтрольныйСимволEAN(ШК, 13);
				иначе 
				ШК = "0000000000000"; //13 нулей
				КонецЕсли;
			Иначе
				ШК = выборка1.barcode;
			КонецЕсли;	
		Иначе // 2 и более ШК
			Выборка2 = Выборка1.Выбрать(); 
			ШК="";  КодТов = СокрЛП(Выборка1.productid); 
			пока выборка2.Следующий() цикл
				ШК2 = СокрЛП(Выборка2.barcode);
				Если НЕ ЗначениеЗаполнено(ШК2) или стрДлина(ШК2)<>13 тогда // иногда бывают неправильные коды!
					Если стрДлина(КодТов)=7 и Найти("0123456789", лев(КодТов,1) )>0 тогда
					ШК2="05000"+КодТов;
					ШК2 = ШК2 + КонтрольныйСимволEAN(ШК2, 13);
					иначе 
					ШК2 = "0000000000000";
					КонецЕсли;
				Иначе
					ШК2 = выборка2.barcode;
				КонецЕсли;	
	            ШК = ШК+"|"+ШК2;
			КонецЦикла;	
			ШК=прав(ШК, стрДлина(ШК)-1);
	    КонецЕсли;
		Товар1.barcode = ШК;
		
		МассивТоваров.Product.Добавить(Товар1); //массив
	КонецЦикла;
 	РезультатОперации.ArrayOfProducts = МассивТоваров;

//----------------------------Из ФАКТ.Прихода/2-го перемещения, если он уже есть----------------
	Если НомерПрихода<>"" тогда
	ТоварыВЯчейках  = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfCells"));
	Запрос = новый Запрос;
	Запрос.текст = ТекстЗапросаТоварыНаЯчейкахПоПриходу(Type); 
	Запрос.УстановитьПараметр("Подразделение", Подразделение );  
	Запрос.УстановитьПараметр("НомерДокумента", НомерПрихода);  
	Запрос.УстановитьПараметр("НачДата",  НачДата ); 
	Запрос.УстановитьПараметр("КонДата",  КонДата );
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл	
		Товар2 = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Cell"));
		Товар2.productid   =(Строка(Выборка.НоменклатураКод)); 
		
	    Если ЗначениеЗаполнено(Выборка.АдресХранения) Тогда
	    	ШК = СокрЛП(Выборка.АдресХраненияКод);
	    Иначе // НЕТ ЯЧЕЙКИ - берём код склада
	    	код1 = СокрЛП(Выборка.СкладКод);
	    	Если стрДлина(код1)=5 Тогда
	    		ШК = "99" + код1;
	    	ИначеЕсли код1="" Тогда // нет склада???
	    		ШК = "9900000"; //все нули!
	    	ИначеЕсли стрДлина(код1)<5 Тогда
	    		код2=формат(число(код1),"ЧЦ=5; ЧН=00000; ЧВН=; ЧГ=0");
	    		ШК = "99" + код2;
			Иначе
				ШК = "9900000"; //все нули!
	    	КонецЕсли;	
	    КонецЕсли;
	    ШК = ШК + КонтрольныйСимволEAN(ШК, 8);
	    
	    Товар2.stockcell = ШК;
	    Товар2.quantityfact=(Число(Выборка.Количество));
	   // Товар.stockname   =(строка(Выборка.Склад));
		ТоварыВЯчейках.Cell.Добавить(Товар2);
	КонецЦикла;
	
	РезультатОперации.ArrayOfCells = ТоварыВЯчейках;
	КонецЕсли;
	
	Возврат РезультатОперации;
	
КонецФункции

//получить Все документы прихода: Поступления и Перемещения
функция GetAllOrderOfArrival(CodeOfBranch=неопределено)
	URL = "http://37.1.84.50:8080/TransferArrival";	
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "ArrayOfOrders");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	//По префиксу!
	Если CodeOfBranch<>неопределено Тогда
		Подразделение = справочники.Подразделения.НайтиПоКоду(CodeOfBranch);  
	Иначе	
		Подразделение = справочники.Подразделения.НайтиПоКоду("00005");  
	КонецЕсли;
    НачДата = НачалоНедели( НачалоНедели(ТекущаяДата()) - 1); // только с начала прошлой недели (макс. за 2 недели)
	КонДата = КонецДня(ТекущаяДата());
	
	Запрос = новый Запрос;
	Запрос.текст = ТекстЗапросаВсеПриходы(); 
	Запрос.УстановитьПараметр("Подразделение", Подразделение );  
	Если Подразделение.Код <> "00005" тогда // для филиалов
		Запрос.текст = стрЗаменить(Запрос.текст , "<>", "="); // смотрим перемещения cо складаОтправителя = Ярославль!
	КонецЕсли;	
	Запрос.УстановитьПараметр("НачДата",  НачДата ); 
	Запрос.УстановитьПараметр("КонДата",  КонДата );
	результат = Запрос.Выполнить();
	Выборка = результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл	
		ТипXDTOДокумента = ФабрикаXDTO.Тип(URL, "Order");
		Документ1 = ФабрикаXDTO.Создать(ТипXDTOДокумента);
		Документ1 = GetOrderOfArrivalByNumber(выборка.Номер, выборка.Тип);
		РезультатОперации.Order.Добавить( Документ1 );
	КонецЦикла;
	
	Возврат РезультатОперации;
	
КонецФункции
 
 
//===============================Из Android >> в 1С ============================== 

// из ЗаказаПоставщика -> ПоступлениеТоваровУслуг
процедура ЗаполнитьШапкуПрихода(док, Заказ)
	ЗаполнитьЗначенияСвойств( док, Заказ ); // Контрагент, Договор, Подразделение
	док.Дата  = ТекущаяДата();
	док.УстановитьНовыйНомер(док.Подразделение.ПрефиксИБ);
	док.Сделка = Заказ;
	док.ВидПоступления = перечисления.ВидыПоступленияТоваров.НаСклад;
	док.Комментарий    = "# заказ заполнен с Android "+строка(ТекущаяДата());
	док.Ответственный  = справочники.Пользователи.НайтиПоКоду("Робот (магазин)");
КонецПроцедуры

// на основании 1 перемещения на Товары в пути - делается приход к нам...
процедура ЗаполнитьШапкуПеремещения(док, док0)
	
	док.Перемещение = док0; // на основании док0
	
	док.Дата  = ТекущаяДата();
	док.ВидОперации = Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукция;
	
	док.Организация = док0.Организация;
	док.Перевозчик	= док0.Перевозчик;
	док.Водитель	= док0.Водитель;
	док.МаркаАвтомобиля		= док0.МаркаАвтомобиля;
	док.ГосНомерАвтомобиля  = док0.ГосНомерАвтомобиля;
	док.ГосНомерПрицепа     = док0.ГосНомерПрицепа;
	док.ВодительскоеУдостоверение 	 = док0.ВодительскоеУдостоверение;
	док.ОтражатьВУправленческомУчете = Истина;
	док.ОтражатьВБухгалтерскомУчете  = ЛОЖЬ;
	док.ОтражатьВНалоговомУчете		 = ЛОЖЬ;
	
	док.Комментарий    = "# заказ заполнен с Android "+строка(ТекущаяДата());
	док.Ответственный  = справочники.Пользователи.НайтиПоКоду("Робот (магазин)");
	
	док.СкладОтправитель = док0.СкладПолучатель;
	
	Откуда = док0.СкладОтправитель.Подразделение;
	Если Откуда.ОбособленноеПодразделение тогда // с филиала к нам...
		док.Подразделение   = справочники.Подразделения.НайтиПоКоду("00005");
	Иначе // cо склада (товары в пути) филиала на Филиал	
		док.Подразделение   =док0.СкладПолучатель.Подразделение;
	КонецЕсли;
	
	//основной склад подразделения
	док.СкладПолучатель = док.Подразделение.Склад;
	док.УстановитьНовыйНомер(док.Подразделение.ПрефиксИБ);

КонецПроцедуры

процедура ЗаполнениеЦенИВесаВПриходеПоЗаказу( ПриходОб, ЗаказСсылка )
	Тип = ?( ТипЗнч(ЗаказСсылка)=Тип("ДокументСсылка.ЗаказПоставщику"), 0, 1);
	
	для каждого стр1 из ПриходОб.Товары цикл
	стр1.Вес = стр1.Номенклатура.ЕдиницаХраненияОстатков.Вес * стр1.Количество;	
		Если Тип = 0 тогда // ещё и цены из Заказа
			стрЗак = ЗаказСсылка.Товары.Найти( стр1.Номенклатура, "Номенклатура");
			Если стрЗак=неопределено тогда
				стр1.Цена = 1; // очень маленькая - чтобы видели!
			Иначе	
				стр1.Цена = стрЗак.Цена;
			КонецЕсли;	
			стр1.Сумма= стр1.Цена * стр1.Количество;
			Если ПриходОб.УчитыватьНДС тогда
			стр1.СтавкаНДС = перечисления.СтавкиНДС.НДС18;
				Если ПриходОб.СуммаВключаетНДС тогда
				стр1.СуммаНДС  = Окр(стр1.Сумма*18/118,2);
				Иначе
				стр1.СуммаНДС  = Окр(стр1.Сумма*18/100,2); // сверху
				КонецЕсли;
			Иначе
		    стр1.СтавкаНДС = перечисления.СтавкиНДС.БезНДС;
			стр1.СуммаНДС  = 0;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
	//	-------- грузчики --------
	Если Константы.КТУгрузчиковПоСкладам.Получить() Тогда 
		яштРезервыПоТоварам.ЗаполнениеКТУГрузчиков(ПриходОб);
	КонецЕсли;

КонецПроцедуры	

//записывает данные назад
Функция ChangeOrderOfArrival(Number="", Type=неопределено, ArrayOfCells=НЕОПРЕДЕЛЕНО )
	
	рез  = "";	 //результат функции - строка
	Если Type=неопределено тогда
		Type=0; // ПРИХОД ищем
	КонецЕсли;
	
	Если Number="" или ArrayOfCells=НЕОПРЕДЕЛЕНО тогда
		возврат "ERROR. Not defined parameters!";
	КонецЕсли;
	
//текущее состояние может измениться с момента загрузки
	Order1   = GetOrderOfArrivalByNumber(Number, Type); 
	Если СокрЛП(Order1.numberin1s) = "" тогда
		Возврат "Not found document by number '"+Number+"' and type = "+строка(Type);
	КонецЕсли;
	
	НомерЗаказа   = Order1.numberin1s;
	ДатаЗаказа	  = Order1.dateoforder;
	
	НомерПрихода  = СокрЛП(Order1.arrivalnumber);
	
//==========================ЛОГ файл==================			
	 ЗаписьXML = Новый ЗаписьXML;
	 ИмяФайлаЛОГА = "D:\1C\Android\Arrival_"+НомерЗаказа+".xml";
	 ЗаписьXML.ОткрытьФайл(ИмяФайлаЛОГА);
	 ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ArrayOfCells);
	 ЗаписьXML.Закрыть();			
//====================================================

	Если Type=0 тогда
		ЗаказСсылка = документы.ЗаказПоставщику.НайтиПоНомеру(НомерЗаказа, ДатаЗаказа );
	иначе	// тип = 1
		ЗаказСсылка = документы.ПеремещениеТоваров.НайтиПоНомеру(НомерЗаказа, ДатаЗаказа );
	КонецЕсли;
	
	
	Если НомерПрихода="" тогда // Автоматически создаём документ
		Если Type=0 тогда
			ПриходОб = документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
			ЗаполнитьШапкуПрихода(ПриходОб, ЗаказСсылка);
		Иначе
			ПриходОб = документы.ПеремещениеТоваров.СоздатьДокумент();
			ЗаполнитьШапкуПеремещения(ПриходОб, ЗаказСсылка);
		КонецЕсли;	
	Иначе
		Если Type=0 тогда
			Приход = документы.ПоступлениеТоваровУслуг.НайтиПоНомеру(НомерПрихода, ТекущаяДата() );
			ПриходОб = Приход.ПолучитьОбъект();
		Иначе
			Приход = документы.ПеремещениеТоваров.НайтиПоНомеру(НомерПрихода, ТекущаяДата() );
			ПриходОб = Приход.ПолучитьОбъект();
		КонецЕсли;	
	КонецЕсли;
	
//таблАдр = ПриходОб.ТоварыАдресноеХранение;
//таблТов = ПриходОб.Товары;
			
//-------------------------Обработка ArrayOfCells -------------------------------------
// всего 3 поля: productid   stockcell  quantityfact
// если stockcell=99... это Склад БЕЗ Адреса, иначе в Адреса, а потом в Товары
	Для Каждого Стр1 ИЗ ArrayOfCells.Cell Цикл
		тов = справочники.Номенклатура.НайтиПоКоду(	стр1.productid );
		кол = стр1.quantityfact;
		ШК  = Стр1.stockcell;
		// определяем новая это строка или изменение в старой
		Если лев(ШК,2) = "99" тогда // это просто склад! без адреса
			СкладКод = сред(ШК, 3,5); 
			Склад = справочники.Склады.НайтиПоКоду(СкладКод);
			отборT = новый Структура;
			отборT.Вставить("Номенклатура", тов);
			отборT.Вставить("Склад",Склад);
			
			Если ПриходОб.Товары.Количество()>0 тогда
				строкиТ = ПриходОб.Товары.НайтиСтроки( отборT );
				Если строкиТ.Количество()>0 тогда
					стрТ = строкиТ[0];
				Иначе	
					стрТ = ПриходОб.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(стрТ, отборT);
				КонецЕсли;
			Иначе	
				стрТ = ПриходОб.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(стрТ, отборT);
			КонецЕсли;

			стрТ.Количество     = кол; // меняем количество!
			стрТ.Коэффициент    = 1;
			
			стрТ.КоличествоМест = стрТ.Количество/стрТ.Коэффициент; // количество мест!
			стрТ.ЕдиницаИзмерения 		= тов.ЕдиницаХраненияОстатков;
			стрТ.ЕдиницаИзмеренияМест	= тов.ЕдиницаХраненияОстатков;
			Если type>0 тогда 
		 	стрТ.Качество 	    = справочники.Качество.Новый;
			стрТ.СпособСписанияОстаткаТоваров = Перечисления.СпособыСписанияОстаткаТоваров.СоСклада;
 			КонецЕсли;
			
		Иначе  //-------------------табл.адресов----------------------
			кодЯчейки1 = лев(ШК,7);
			Адр1  = справочники.АдресаХранения.НайтиПоКоду(кодЯчейки1);
 			Склад = Адр1.Владелец;
			
			отборА  = новый Структура("АдресХранения, Номенклатура", Адр1, тов);
			строкиА = ПриходОб.ТоварыАдресноеХранение.НайтиСтроки( отборА );
			Если строкиА.Количество()>0 тогда
				стрА = строкиА[0];
			Иначе	
				стрА = 	ПриходОб.ТоварыАдресноеХранение.Добавить();
				ЗаполнитьЗначенияСвойств(стрА, отборА);
			КонецЕсли;
			
			стрА.Количество = кол; // меняем количество!
			стрА.Склад 		= Склад;
			
		КонецЕсли;	
		
	КонецЦикла;

//--------- пост.обработка таблАдр >> Товары --------------
	таблА = ПриходОб.ТоварыАдресноеХранение.Выгрузить(); // из ТЧ в ТаблЗнач
	таблА.Свернуть("Номенклатура,Склад", "Количество");
	для каждого стрА из таблА цикл
		отборТ = новый Структура;
		отборТ.Вставить("Номенклатура", стрА.Номенклатура);
		отборТ.Вставить("Склад",        стрА.Склад);
		
		Если ПриходОб.Товары.Количество()>0 тогда
			строкиТ = ПриходОб.Товары.НайтиСтроки( отборТ );
			Если строкиТ.Количество()>0 тогда
				стрТ = строкиТ[0];
			Иначе	
				стрТ = ПриходОб.Товары.Добавить();
				стрТ.Номенклатура = стрА.Номенклатура;
				стрТ.Склад        = стрА.Склад;
			КонецЕсли;
		Иначе	
			стрТ = ПриходОб.Товары.Добавить();
			стрТ.Номенклатура = стрА.Номенклатура;
			стрТ.Склад 		  = стрА.Склад;
		КонецЕсли;
		
		стрТ.Количество     = стрА.Количество; // меняем количество по складу и товару!
		
		стрТ.Коэффициент    = 1;
		стрТ.КоличествоМест = стрТ.Количество/стрТ.Коэффициент; // количество мест!
		стрТ.ЕдиницаИзмерения 		= стрТ.Номенклатура.ЕдиницаХраненияОстатков;
		стрТ.ЕдиницаИзмеренияМест	= стрТ.Номенклатура.ЕдиницаХраненияОстатков;
		
		Если Type<>0 тогда // для перемещений - надо ещё полей...
	 		стрТ.Качество = справочники.Качество.Новый;
			стрТ.СпособСписанияОстаткаТоваров = Перечисления.СпособыСписанияОстаткаТоваров.СоСклада;
		КонецЕсли;
		
	КонецЦикла;
	
//-----------------Перезаполнение цен / веса----------------
	ЗаполнениеЦенИВесаВПриходеПоЗаказу( ПриходОб, ЗаказСсылка );

//------------ Запись прихода --------------------------------
	Попытка
		ТекПользователь = справочники.Пользователи.НайтиПоКоду("Робот (магазин)");
		УстановитьПараметрыСеанса(ТекПользователь);
		ПриходОб.Проведен = ЛОЖЬ; // НЕ проводим !
		ПриходОб.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		рез = "Error. Not saved order! 
		|"+ОписаниеОшибки();
	КонецПопытки;
	
	Если рез = "" Тогда 
	рез = "Ok." + ПриходОб.Номер; //14.07.2017 
	КонецЕсли;
	
//--------------------Общий ЛОГ--------------------------------------	
	файлРез = новый ЗаписьТекста;
	файлРез.Открыть("D:\1C\Android\RESULT.txt", КодировкаТекста.UTF8, , Истина);
	файлРез.ЗаписатьСтроку( строка(ТекущаяДата())+" "+строка(ПриходОб)+" ==> "+рез );
	файлРез.Закрыть();
	
	Возврат рез;
	
КонецФункции

//01.11.2017
Функция Authenticate(login, password)
рез = "";
 
ПользовательИнформационнойБазы = ПользователиИнформационнойБазы.НайтиПоИмени( login ); // берем из поля ввода

Если ПользовательИнформационнойБазы=неопределено тогда
//	рез = "ERROR! No user with login '"+login+"'";
Иначе 
	
	// текст с сайта: http://www.forum.mista.ru/topic.php?id=598309
	ХэшНастоящегоПароля = ПользовательИнформационнойБазы.СохраняемоеЗначениеПароля;
	сообщить( строка(ХэшНастоящегоПароля) );

	НачатьТранзакцию(); //---------------------получаем----------------

	ПользовательИнформационнойБазы.Пароль = password;
	ПользовательИнформационнойБазы.Записать();

	ХешВведенногоПароля = ПользователиИнформационнойБазы.НайтиПоИмени( login ).СохраняемоеЗначениеПароля;
	сообщить( строка(ХешВведенногоПароля) );
	 
	Если ХешВведенногоПароля = ХэшНастоящегоПароля Тогда
	    рез = строка(ПользовательИнформационнойБазы.УникальныйИдентификатор);
		//рез = строка(ХешВведенногоПароля);
	Иначе
		//рез = "ERROR! Not right password!";
	КонецЕсли;
	ОтменитьТранзакцию();//-------------------------------------------
	
КонецЕсли;

возврат рез;

КонецФункции


//01.11.2017  --- возвращает строку Ошибки или Имя пользователя!
Функция ПолучитьПользователяПоУИД(UID)
	рез = "";

	УИД = новый УникальныйИдентификатор(UID);
	ПользовательИнформационнойБазы = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(УИД);

	Если ПользовательИнформационнойБазы=неопределено тогда
		рез = справочники.Пользователи.ПустаяСсылка();
	Иначе //есть такой user
		рез = справочники.Пользователи.НайтиПоКоду(ПользовательИнформационнойБазы.Имя);
	КонецЕсли;

	возврат рез;

КонецФункции

//17.01.2018 - создаёт новый документ перемещения по списку товаров
// ArrayOfCells = массив строк:
//  	Код = стр1.productid ;
//		кол = стр1.quantityfact ;
//		ШК  = Стр1.stockcell ;
//
функция CreateMoveGoods( ArrayOfCells )
	НомерПеремещения = "";
	//перемещение дисков с ангарУстранение через скл8000_500 на 8000
	скл8000_500     = справочники.Склады.НайтиПоКоду("01842"); //8000-500
    ангарУстранение = справочники.Склады.НайтиПоКоду("02340"); //Ангар-ремонт Устранение
	
	ДокПеремОб = Документы.ПеремещениеТоваров.СоздатьДокумент();
	ДокПеремОб.Дата = ТекущаяДата();
	
	//заполнение Тек.Пользователя и шапки документа
	глТекущийПользователь = справочники.Пользователи.НайтиПоКоду("Робот (магазин)");
	ПараметрыСеанса.ТекущийПользователь = глТекущийПользователь;
	ЗаполнитьШапкуДокумента(ДокПеремОб, глТекущийПользователь);
	 
	ДокПеремОб.СкладОтправитель = ангарУстранение;
	ДокПеремОб.СкладПолучатель  = скл8000_500;
	
	Для Каждого Стр1 ИЗ ArrayOfCells.Cell Цикл
		
		тов = справочники.Номенклатура.НайтиПоКоду(	стр1.productid );
		кол = стр1.quantityfact;
		ШК  = Стр1.stockcell;
		
		//===================по складам===============================
		Если ШК="" или лев(ШК,2)="99" тогда
			стр1 = ДокПеремОб.Товары.Добавить(); // в таблицу Товары!
		стр1.Номенклатура = тов;
		стр1.Количество = кол;
		стр1.Качество = справочники.Качество.Новый;
		стр1.ЕдиницаИзмерения = тов.ЕдиницаХраненияОстатков;
		стр1.Коэффициент = 1;
		//стр1.ЕдиницаИзмеренияМест = стр1.ЕдиницаИзмерения;
		//стр1.КоличествоМест = стр1.Количество;
			Если лев(ШК,2)="99" тогда
				СкладКод = сред(ШК, 3,5); 
				Склад = справочники.Склады.НайтиПоКоду(СкладКод);
				стр1.Склад = Склад;
			иначе
				стр1.Склад = ДокПеремОб.СкладПолучатель; //из шапки
			КонецЕсли;	
			
		Иначе	//===================по адресам===============================
			стр1 = ДокПеремОб.ТоварыАдресноеХранение.Добавить(); // в таблицу Товары!
		стр1.Номенклатура = тов;
		стр1.Количество = кол;
			кодЯчейки1 = лев(ШК,7);
			Адр1  = справочники.АдресаХранения.НайтиПоКоду(кодЯчейки1);
 		стр1.АдресХранения =Адр1;
		стр1.Склад = Адр1.Владелец;
		// если есть ячейки то наоборот со склада скл8000_500 на склад Адресного хранения!
			ДокПеремОб.СкладОтправитель = скл8000_500; 
			ДокПеремОб.СкладПолучатель = стр1.Склад;   
		КонецЕсли;
		
	КонецЦикла;	
	ДокПеремОб.Комментарий = ">> через Android "+строка(ТекущаяДата());
	
	попытка
		УстановитьНомерДокумента(ДокПеремОб);
		ДокПеремОб.Записать();
		НомерПеремещения = "Ok."+ДокПеремОб.Номер;
	Исключение
	КонецПопытки;
	
	возврат НомерПеремещения;
КонецФункции	