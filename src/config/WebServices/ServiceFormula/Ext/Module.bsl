
Функция CreateOrder(Goods, Comment, OrderID, Point, INN)
	
	URL = "http://37.1.84.50:8080/Formula";
		
	ТипXDTOРезультатОперации = ФабрикаXDTO.Тип(URL, "Result");
	РезультатОперации = ФабрикаXDTO.Создать(ТипXDTOРезультатОперации);
	Товары = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProducts"));
		
	Ошибка = "";
	Success = Истина;
	OrderNumber = "";
	OrderGUID = "";
	
	КонтрагентДляРезерваИМ = "";
	
	Если НЕ OrderID = "" Тогда
		Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", INN);
		Если Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
			Success = Ложь;
			Ошибка = "Не удалось найти контрагента по ИНН";
		Иначе
			КонтрагентДляРезерваИМ = Контрагент.КонтрагентДляРезерваИМ;
		КонецЕсли;
		Если СтрДлина(Comment) > 250 Тогда
			Success = Ложь;
			Ошибка = "Комментарий к заказу превышает допустимые 250 символов";
		КонецЕсли;
	КонецЕсли;
	
	//Сохраняем каждый набор товаров в файл, чтоб сохранялась история о запросах	
	Сериализатор = Новый СериализаторXDTO(ФабрикаXDTO);
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл("D:\1C\Formula\Текущий.xml");
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Goods);
	ЗаписьXML.Закрыть();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл("D:\1C\Formula\Текущий.xml");
	
	ТаблицаЗаказа = Новый ТаблицаЗначений;
	ТаблицаЗаказа.Колонки.Добавить("Номенклатура");
	ТаблицаЗаказа.Колонки.Добавить("Количество");
	ТаблицаЗаказа.Колонки.Добавить("КоличествоОстаток");
	
	Запись = Новый Структура;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Имя = ЧтениеXML.Имя;
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			Запись.Вставить(Имя, ЧтениеXML.Значение);      //информацию фнутри блока XML помещаем в структуру
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ЧтениеXML.Имя = "Products" Тогда
				СтрокаТЗ = ТаблицаЗаказа.Добавить();
				СтрокаТЗ.Номенклатура = Запись.Code;
				СтрокаТЗ.Количество = Число(Запись.Quantity);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML.Закрыть();
	
	//Запрос свободных остатков
	Подразделение = Справочники.Подразделения.НайтиПоКоду("00005");
	
	СписокНоменклатуры = Новый СписокЗначений;
	Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
		
		Номенкл = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
		Если Номенкл = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Success = Ложь;
			Ошибка = "Не удалось найти номенклатуру по коду " + СтрокаТЗ.Номенклатура;
		КонецЕсли;
		СписокНоменклатуры.Добавить(СтрокаТЗ.Номенклатура);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокЗаказа", СписокНоменклатуры);
	
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	спр.Ссылка
	//			   |ПОМЕСТИТЬ ВТ_Товары
	//			   |ИЗ
	//			   |	Справочник.Номенклатура КАК спр
	//			   |ГДЕ
	//			   |	спр.Код В(&СписокЗаказа)
	//			   |;
	//			   |
	//			   |////////////////////////////////////////////////////////////////////////////////
	//			   |ВЫБРАТЬ
	//			   |	ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура.Код, 0) КАК Код,
	//			   |	ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток
	//			   |ИЗ
	//			   |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	//			   |			,
	//			   |			НЕ Склад.ЗапретитьИспользование
	//			   |				И НЕ Склад.Транзитный
	//			   |				И Номенклатура.Код В (&СписокЗаказа)) КАК ТоварыНаСкладахОстатки
	//			   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	//			   |				,
	//			   |				ЗаказПокупателя.Проверен
	//			   |					И НЕ ЗаказПокупателя.Транзит
	//			   |					И Номенклатура.Код В (&СписокЗаказа)) КАК ЗаказыПокупателейОстатки
	//			   |		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура";
				   
				   
		  // Если НЕ КонтрагентДляРезерваИМ = "" И НЕ КонтрагентДляРезерваИМ = Справочники.Контрагенты.ПустаяСсылка() Тогда 
			   Запрос.Текст = "ВЫБРАТЬ
			   |	спр.Ссылка
			   |ПОМЕСТИТЬ ВТ_Товары
			   |ИЗ
			   |	Справочник.Номенклатура КАК спр
			   |ГДЕ
			   |	спр.Код В(&СписокЗаказа)
			   |;
			   |
			   |////////////////////////////////////////////////////////////////////////////////
			   |ВЫБРАТЬ
			   |	ЕСТЬNULL(ТоварыНаСкладахОстатки.Номенклатура.Код, Резерв.Номенклатура.Код) КАК Код,
			   |	ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Резерв.КоличествоОстаток, 0) КАК СвободныйОстаток
			   |ИЗ
			   |	РегистрНакопления.ТоварыНаСкладах.Остатки(
			   |			,
			   |			НЕ Склад.ЗапретитьИспользование
			   |				И НЕ Склад.Транзитный
			   |				И Номенклатура.Код В (&СписокЗаказа)) КАК ТоварыНаСкладахОстатки
			   |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			   |			РезервИМ.Номенклатура КАК Номенклатура,
			   |			РезервИМ.КоличествоОстаток КАК КоличествоОстаток
			   |		ИЗ
			   |			РегистрНакопления.РезервДляИМ.Остатки(
			   |					,
			   |					КонтрагентДляРезерваИМ = &КонтрагентДляРезерваИМ
			   |						И Номенклатура В
			   |							(ВЫБРАТЬ
			   |								ВТ_товары.Ссылка
			   |							ИЗ
			   |								ВТ_товары)
			   |						И Подразделение = &Подразделение) КАК РезервИМ
			   |		ГДЕ
			   |			РезервИМ.КоличествоОстаток > 0) КАК Резерв
			   |		ПО ТоварыНаСкладахОстатки.Номенклатура = Резерв.Номенклатура
			   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
			   |				,
			   |				ЗаказПокупателя.Проверен
			   |					И НЕ ЗаказПокупателя.Транзит
			   |					И Номенклатура.Код В (&СписокЗаказа)) КАК ЗаказыПокупателейОстатки
			   |		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура";	
			   Запрос.УстановитьПараметр("КонтрагентДляРезерваИМ", Справочники.Контрагенты.НайтиПоКоду("П004703"));  //Если надо поменять, то надо учесть, что КонтрагентДляРезерваИМ теперь в договоре
			   Запрос.УстановитьПараметр("Подразделение", Подразделение);
	   //КонецЕсли;
	   
	   Результат = Запрос.Выполнить().Выгрузить();
	
	ДополнениеКОшибке = "";
	
	Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
		СтрокаРезультат = Результат.Найти(СтрокаТЗ.Номенклатура);
		Если СтрокаРезультат = Неопределено Тогда
			СтрокаТЗ.КоличествоОстаток = 0;
			Success = Ложь;
		Иначе
			СтрокаТЗ.КоличествоОстаток = СтрокаРезультат.СвободныйОстаток;
			Если СтрокаРезультат.СвободныйОстаток < СтрокаТЗ.Количество Тогда
				Success = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	//Создание заказа
	Если Success И OrderID<>"" Тогда
		
		Заказ = Документы.ЗаказПокупателя.СоздатьДокумент();
		Заказ.Дата = ТекущаяДата();
		
		//Заказ.ДатаОтгрузки = ТекущаяДата() + 86400;
		Заказ.ДатаОтгрузки = '00010101000000';
		Заказ.Резерв = Истина;
		
		Заказ.Организация = Справочники.Организации.НайтиПоКоду("00001");
		Заказ.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"); //Крупный опт
		Заказ.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
		Заказ.КурсВзаиморасчетов = 1;
		Заказ.КратностьВзаиморасчетов = 1;
		Заказ.Контрагент = Контрагент;
		
		Заказ.Проверен = Истина;
		
		ДополнениеККомментарию = "";
		Если Point = 2 Тогда  //Мостецкая
			ДополнениеККомментарию = "Код склада: 00182";
			Заказ.НомерТорговойТочкиКонтрагента = 5598;
		ИначеЕсли Point = 3 Тогда //Толбухина
			ДополнениеККомментарию = "Код склада: 00183";
			Заказ.НомерТорговойТочкиКонтрагента = 3890;
		ИначеЕсли Point = 4 Тогда //Базовая
			ДополнениеККомментарию = "Код склада: 00184";
			Заказ.НомерТорговойТочкиКонтрагента = 5600;
		ИначеЕсли Point = 5 Тогда //Фрунзе
			ДополнениеККомментарию = "Код склада: 00185";
			Заказ.НомерТорговойТочкиКонтрагента = 5599;
		ИначеЕсли Point = 6 Тогда //Ленинградский
			ДополнениеККомментарию = "Код склада: 00210";
			Заказ.НомерТорговойТочкиКонтрагента = 7044;
		КонецЕсли;
		
		Заказ.Комментарий = "FormulaWeb: " + ДополнениеККомментарию + " " + Comment;
		Заказ.Подразделение = Подразделение;  
		Заказ.СуммаВключаетНДС = Истина;
		Заказ.УчитыватьНДС = Истина;
		Заказ.АвтоРезервирование = Истина;
		Заказ.ССайта = Истина;
		Заказ.НомерВходящегоДокумента = OrderID;
		Заказ.НапомнитьОСобытии = Истина;
		Заказ.ТипЗаказа = 9;
		
		//***2017.05.25 изменен алгоритм
		списокДоговоров = РегистрыСведений.ДоговорыПоТоварнымГруппам.СоздатьНаборЗаписей();
		СписокДоговоров.Отбор.Контрагент.Значение			 = Контрагент;
		СписокДоговоров.Отбор.Контрагент.Использование		 = Истина;
		СписокДоговоров.Отбор.Подразделение.Значение		 = Подразделение;
		СписокДоговоров.Отбор.Подразделение.Использование	 = Истина;
		СписокДоговоров.Отбор.КлиентКОЛЕСАТУТ.Значение		 = ЛОЖЬ;
		СписокДоговоров.Отбор.КлиентКОЛЕСАТУТ.Использование	 = Истина;
		СписокДоговоров.Прочитать();
		ТаблицаДоговоров = СписокДоговоров.Выгрузить();
		
		// заполним договор если он указан явно, остальное по договору по умолчанию
		НужныйДоговор = ТаблицаДоговоров.НайтиСтроки(Новый Структура("ВидТовара",Справочники.Номенклатура.НайтиПоКоду(ТаблицаЗаказа[0].Номенклатура).ВидТовара));
		Если НужныйДоговор.Количество() > 0 Тогда
			Заказ.ДоговорКонтрагента = НужныйДоговор[0].Договор;
		Иначе
			//***договор получаем по единому алгоритму: сначала факторинг, потом - продажа
			Заказ.ДоговорКонтрагента = ОбменСУТИнтернетМагазин.найтиДоговорФакторингаПоОтветственному(Заказ);
		КонецЕсли;
		//***
		
		Заказ.ДатаОплаты = ТекущаяДата() + 86400*Заказ.ДоговорКонтрагента.ЧислоДнейРезерваБезОплаты;
		
		СписокНом = Новый СписокЗначений;
		Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
			СтрокаТовары = Заказ.Товары.Добавить();
			СтрокаТовары.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
			СтрокаТовары.Коэффициент = 1;
			СтрокаТовары.Количество = СтрокаТЗ.Количество;
			ЗаполнитьЕдиницуЦенуПродажиТабЧасти(СтрокаТовары, Заказ, Константы.ВалютаРегламентированногоУчета.Получить()); 
			ЗаполнитьСтавкуНДСТабЧасти(СтрокаТовары, Заказ);
			РассчитатьСуммуТабЧасти(СтрокаТовары, Заказ);
			РассчитатьСуммуНДСТабЧасти(СтрокаТовары, Заказ);
			СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура));
		КонецЦикла;
		
		Если НЕ Заказ.Товары.Количество() = 0 Тогда
			
			ТабЗнач1  = Новый ТаблицаЗначений;
			ТабЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(Контрагент, СписокНом, ТекущаяДата());
			
			Если ТипЗнч(ТабЗнач1) = Тип("Строка") тогда // нет политики ценообразования документом
				табЗнач1  = новый ТаблицаЗначений;
				табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, СписокНом); //из регистра сведений
			КонецЕсли;	
			
			Для каждого стр1 из Заказ.Товары цикл
				стр2 = табЗнач1.найти(стр1.Номенклатура, "Номенклатура");
				стр1Цена = стр1.Цена;
				Если стр2 = неопределено тогда
					стр2МинимальнаяЦена = 0;
				иначе
					стр2МинимальнаяЦена = стр2.МинимальнаяЦена;
				КонецЕсли;
				
				//-------------------------------
				Если стр1Цена<>стр2МинимальнаяЦена тогда
					стр1.Цена = стр2МинимальнаяЦена; // изменение Цены по политике ценообразования
					РассчитатьСуммуТабЧасти(стр1, Заказ);
					РассчитатьСуммуНДСТабЧасти(стр1, Заказ);
				КонецЕсли;
			КонецЦикла;
	
			
			Заказ.Записать(РежимЗаписиДокумента.Проведение);
			OrderGUID = Строка(Заказ.Ссылка.УникальныйИдентификатор());
			OrderNumber = СокрЛП(Заказ.Номер);
			
			Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
				Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
				Товар.Code.Добавить(Строка(СтрокаТЗ.Номенклатура));
				Товар.Quantity.Добавить(Число(СтрокаТЗ.Количество));
				Товары.Products.Добавить(Товар);
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		//формируем возвращаемый массив
		Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
			Если СтрокаТЗ.КоличествоОстаток < СтрокаТЗ.Количество Тогда
				Товар = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "Product"));
				Товар.Code.Добавить(Строка(СтрокаТЗ.Номенклатура));
				Товар.Quantity.Добавить(Число(СтрокаТЗ.КоличествоОстаток));
				Товары.Products.Добавить(Товар);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	РезультатОперации.Products		 = Товары;
	РезультатОперации.Success		 = Success;
	РезультатОперации.OrderNumber	 = OrderNumber;
	РезультатОперации.OrderGUID		 = OrderGUID;
	РезультатОперации.Error			 = Ошибка;

	Если НЕ OrderNumber = "" Тогда
		Попытка
			ПереместитьФайл("D:\1C\Formula\Текущий.xml", "D:\1C\Formula\"+ OrderNumber +".xml");
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат РезультатОперации;	
	
КонецФункции

Функция CreateReturn(Partner, Goods, Comment, ID, Date)
	
	URL = "http://37.1.84.50:8080/Formula";
		
	Товары = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URL, "ArrayOfProductsRecovery"));
		
	Success = Истина;
	
	Контрагент = Справочники.Контрагенты.НайтиПоКоду(Partner);
	Если Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
		Success = Ложь;
	КонецЕсли;
	Если СтрДлина(Comment) > 250 Тогда
		Success = Ложь;
	КонецЕсли;
	
	//Сохраняем каждый набор товаров в файл, чтоб сохранялась история о запросах	
	Сериализатор = Новый СериализаторXDTO(ФабрикаXDTO);
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл("D:\1C\Formula\Текущий.xml");
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Goods);
	ЗаписьXML.Закрыть();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл("D:\1C\Formula\Текущий.xml");
	
	ТаблицаЗаказа = Новый ТаблицаЗначений;
	ТаблицаЗаказа.Колонки.Добавить("Номенклатура");
	ТаблицаЗаказа.Колонки.Добавить("Количество");
	ТаблицаЗаказа.Колонки.Добавить("Цена");
	
	Запись = Новый Структура;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Имя = ЧтениеXML.Имя;
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			Запись.Вставить(Имя, ЧтениеXML.Значение);      //информацию фнутри блока XML помещаем в структуру
		КонецЕсли;
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ЧтениеXML.Имя = "Products" Тогда
				СтрокаТЗ = ТаблицаЗаказа.Добавить();
				СтрокаТЗ.Номенклатура = Запись.Code;
				СтрокаТЗ.Количество = Число(Запись.Quantity);
				СтрокаТЗ.Цена = Число(Запись.Price);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML.Закрыть();
	
	Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
		Номенкл = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
		Если Номенкл = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Success = Ложь;
		КонецЕсли;
	КонецЦикла;	
	
	Если Success Тогда
		Заказ = Документы.ЗаказПоставщику.СоздатьДокумент();
		Заказ.Организация = Справочники.Организации.НайтиПоКоду("00001");
		Заказ.Контрагент = Контрагент;
		Если Partner = "П000382" Тогда //АЭ
			//Заказ.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоКоду("Б5728",,,Контрагент);
			Заказ.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоКоду("Г0433",,,Контрагент);
		ИначеЕсли Partner = "93980" Тогда //Формула
		КонецЕсли;
		Заказ.Дата = ТекущаяДата();
		Заказ.Склад = Справочники.Склады.НайтиПоКоду("00278"); //1
		Заказ.Комментарий = "сф №" + ID + " от " + Date + " " + Comment;
		Заказ.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
		Заказ.КурсВзаиморасчетов = 1;
		Заказ.КратностьВзаиморасчетов = 1;
		Заказ.ДатаПоступления = Дата(Date);
		Заказ.ДатаОплаты = Дата(Date);
		Заказ.УчитыватьНДС = Истина;
		Заказ.СуммаВключаетНДС = Истина;
		Заказ.Ответственный = Заказ.ДоговорКонтрагента.ОтветственноеЛицо; //чтоб этот ответственный потом смог сам редактировать заказ
		
		Для каждого СтрокаТЗ ИЗ ТаблицаЗаказа Цикл
			Номенкл = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
			СтрокаТовары = Заказ.Товары.Добавить();
			СтрокаТовары.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(СтрокаТЗ.Номенклатура);
			СтрокаТовары.Коэффициент = 1;
			СтрокаТовары.Количество = СтрокаТЗ.Количество;
			ЗаполнитьЕдиницуЦенуПродажиТабЧасти(СтрокаТовары, Заказ, Константы.ВалютаРегламентированногоУчета.Получить()); 
			СтрокаТовары.Цена = СтрокаТЗ.Цена;
			ЗаполнитьСтавкуНДСТабЧасти(СтрокаТовары, Заказ);
			РассчитатьСуммуТабЧасти(СтрокаТовары, Заказ);
			РассчитатьСуммуНДСТабЧасти(СтрокаТовары, Заказ);
		КонецЦикла;	
		
		Заказ.Записать(РежимЗаписиДокумента.Запись);
		
		Возврат Success;
		
	КонецЕсли;
	
КонецФункции


