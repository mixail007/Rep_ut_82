
Перем мНазваниеЭлемента;

Перем КодРодительскогоЭлемента;
Перем КодРегионаРодительскогоЭлемента;
Перем КодРайонаРодительскогоЭлемента;
Перем КодГородаРодительскогоЭлемента;
Перем КодНасПунктаРодительскогоЭлемента;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБРАБОТКИ АДРЕСНОЙ ИНФОРМАЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ СПИСКА

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только регионов
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоРегионы() Экспорт

	РегистрСведенийСписок.Отбор.Код.Использование = Ложь;
	РегистрСведенийСписок.Отбор.КодРегионаВКоде.Использование = Ложь;
	РегистрСведенийСписок.Отбор.КодРайонаВКоде.Использование  = Ложь;
	РегистрСведенийСписок.Отбор.КодГородаВКоде.Использование  = Ложь;
	РегистрСведенийСписок.Отбор.КодНаселенногоПунктаВКоде.Использование = Ложь;

	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.ВидСравнения  = ВидСравнения.Равно;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Значение      = 1;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Использование = Истина;

	мНазваниеЭлемента = "регионов";

КонецПроцедуры

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только регионов
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоРайоны() Экспорт
	
	Если КодРодительскогоЭлемента = 0 Тогда
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Использование = Ложь;
	Иначе
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.ВидСравнения  = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Значение      = КодРегионаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Использование = Истина;
	КонецЕсли;
	
	РегистрСведенийСписок.Отбор.КодРайонаВКоде.Использование = Ложь;
	РегистрСведенийСписок.Отбор.КодГородаВКоде.Использование = Ложь;
	РегистрСведенийСписок.Отбор.КодНаселенногоПунктаВКоде.Использование = Ложь;
	
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.ВидСравнения  = ВидСравнения.Равно;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Значение      = 2;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Использование = Истина;
	
	мНазваниеЭлемента = "районов";
	
КонецПроцедуры

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только районов
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоГорода() Экспорт

	Если КодРодительскогоЭлемента = 0 Тогда
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Использование = Ложь;
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.Использование = Ложь;
	Иначе
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.ВидСравнения  = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Значение     = КодРегионаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Использование = Истина;
		
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.ВидСравнения  = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.Значение    = КодРайонаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.Использование = Истина;
	КонецЕсли;
	
	РегистрСведенийСписок.Отбор.КодГородаВКоде.Использование = Ложь;
	РегистрСведенийСписок.Отбор.КодНаселенногоПунктаВКоде.Использование = Ложь;

	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.ВидСравнения  = ВидСравнения.Равно;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Значение      = 3;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Использование = Истина;

	мНазваниеЭлемента = "городов";

КонецПроцедуры

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только населенных пунктов
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоНаселенныеПункты() Экспорт

	Если КодРодительскогоЭлемента = 0 Тогда
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Использование = Ложь;
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.Использование = Ложь;
		РегистрСведенийСписок.Отбор.КодГородаВКоде.Использование = Ложь;
	Иначе
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.ВидСравнения  = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Значение     = КодРегионаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Использование = Истина;
		
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.ВидСравнения  = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.Значение    = КодРайонаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.Использование = Истина;
		
		РегистрСведенийСписок.Отбор.КодГородаВКоде.ВидСравнения     = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодГородаВКоде.Значение    = КодГородаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодГородаВКоде.Использование = Истина;
	КонецЕсли;
	
	РегистрСведенийСписок.Отбор.КодНаселенногоПунктаВКоде.Использование = Ложь;

	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.ВидСравнения  = ВидСравнения.Равно;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Значение      = 4;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Использование = Истина;

	мНазваниеЭлемента = "населенных пунктов";

КонецПроцедуры

// Процедура устанавливает условия отбора для демонстрации в списке для 
// выбора только улиц
//
// Параметры: 
//  нет
//
Процедура ОтобратьТолькоУлицы() Экспорт

	Если КодРодительскогоЭлемента = 0 Тогда
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Использование = Ложь;
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.Использование  = Ложь;
		РегистрСведенийСписок.Отбор.КодГородаВКоде.Использование  = Ложь;
		РегистрСведенийСписок.Отбор.КодНаселенногоПунктаВКоде.Использование = Ложь;
	Иначе
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.ВидСравнения = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Значение     = КодРегионаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодРегионаВКоде.Использование = Истина;
		
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.ВидСравнения = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.Значение     = КодРайонаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодРайонаВКоде.Использование  = Истина;
		
		РегистрСведенийСписок.Отбор.КодГородаВКоде.ВидСравнения = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодГородаВКоде.Значение     = КодГородаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодГородаВКоде.Использование  = Истина;
		
		РегистрСведенийСписок.Отбор.КодНаселенногоПунктаВКоде.ВидСравнения = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.КодНаселенногоПунктаВКоде.Значение     = КодНасПунктаРодительскогоЭлемента;
		РегистрСведенийСписок.Отбор.КодНаселенногоПунктаВКоде.Использование = Истина;
	КонецЕсли;

	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.ВидСравнения  = ВидСравнения.Равно;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Значение      = 5;
	РегистрСведенийСписок.Отбор.ТипАдресногоЭлемента.Использование = Истина;

	мНазваниеЭлемента = "населенных пунктов";

КонецПроцедуры

// Процедура устанавливает "родителя" для постороения условий отбора по переданным
// уже заполненным адресным полям
//
// Параметры: 
// Параметры: 
//  НазваниеРегиона - название региона( с сокращением)
//  НазваниеРайона - название района( с сокращением)
//  НазваниеГорода - название города( с сокращением)
//  НазваниеНаселенногоПункта - название населенного пункта( с сокращением)
//
Процедура УстановитьРодителя(Знач НазваниеРегиона, Знач НазваниеРайона, Знач НазваниеГорода, Знач НазваниеНаселенногоПункта) Экспорт

	РодительскийЭлемент = ПолучитьПустуюСтруктуруАдреса();
	КодРодителяРодителя = 0;

	Регион = ПолучитьАдресныйЭлемент(ОбрезатьСокращение(НазваниеРегиона), 1);

	Если Регион.Код > 0 Тогда
		РодительскийЭлемент = Регион;
		КодРодителяРодителя = Регион.Код;
	КонецЕсли;
	
	Район = ПолучитьАдресныйЭлемент(ОбрезатьСокращение(НазваниеРайона), 2, КодРодителяРодителя);

	Если Район.Код > 0 Тогда
		РодительскийЭлемент = Район;
		КодРодителяРодителя = Район.Код;
	КонецЕсли;
	
	Город = ПолучитьАдресныйЭлемент(ОбрезатьСокращение(НазваниеГорода), 3, КодРодителяРодителя);
	
	Если Город.Код > 0 Тогда
		РодительскийЭлемент = Город;
		КодРодителяРодителя = Город.Код;
	КонецЕсли;
	
	НаселенныйПункт = ПолучитьАдресныйЭлемент(ОбрезатьСокращение(НазваниеНаселенногоПункта), 4, КодРодителяРодителя);
	
	Если НаселенныйПункт.Код > 0 Тогда
		РодительскийЭлемент = НаселенныйПункт;
		КодРодителяРодителя = НаселенныйПункт.Код;
	КонецЕсли;
	
	КодРодительскогоЭлемента = РодительскийЭлемент.Код;
		
	КодРегионаРодительскогоЭлемента   = Цел(КодРодительскогоЭлемента / МаскаРегиона());
	КодРайонаРодительскогоЭлемента    = Цел(КодРодительскогоЭлемента / МаскаРайона()) % 1000;
	КодГородаРодительскогоЭлемента    = Цел(КодРодительскогоЭлемента / МаскаГорода()) % 1000;
	КодНасПунктаРодительскогоЭлемента = Цел(КодРодительскогоЭлемента / МаскаНасПункта()) % 1000;
	КодУлицыРодительскогоЭлемента     = Цел(КодРодительскогоЭлемента / МаскаУлицы())% 10000;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ И ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" элемента РегистрСведенийСписок.
//
Процедура РегистрСведенийСписокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные.Код > 0 Тогда
		ЭлементыФормы.НадписьРодителей.Заголовок = ПолучитьПолноеНазвание(Элемент.ТекущиеДанные.Код);
		Индекс = Элемент.ТекущиеДанные.Индекс;
		
	Иначе
		ЭлементыФормы.НадписьРодителей.Заголовок = "Не выбран элемент для детализации сведений!";
		Индекс = "";
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	СписокЭлементов = ЭлементыФормы.РегистрСведенийСписок;
	
	СписокЭлементов.НастройкаПорядка.Наименование.Доступность = Истина;
	СписокЭлементов.Значение.Порядок.Установить("Наименование Возр");
	
	СписокЭлементов.Колонки.Код.ИзменятьВидимость                       = Ложь;
	СписокЭлементов.Колонки.ТипАдресногоЭлемента.ИзменятьВидимость      = Ложь;
	СписокЭлементов.Колонки.КодРегионаВКоде.ИзменятьВидимость           = Ложь;
	СписокЭлементов.Колонки.КодРайонаВКоде.ИзменятьВидимость            = Ложь;
	СписокЭлементов.Колонки.КодГородаВКоде.ИзменятьВидимость            = Ложь;
	СписокЭлементов.Колонки.КодНаселенногоПунктаВКоде.ИзменятьВидимость = Ложь;
	СписокЭлементов.Колонки.КодУлицыВКоде.ИзменятьВидимость             = Ложь;
	
	СписокЭлементов.Колонки.Код.Видимость                       = Ложь;
	СписокЭлементов.Колонки.ТипАдресногоЭлемента.Видимость      = Ложь;
	СписокЭлементов.Колонки.КодРегионаВКоде.Видимость           = Ложь;
	СписокЭлементов.Колонки.КодРайонаВКоде.Видимость            = Ложь;
	СписокЭлементов.Колонки.КодГородаВКоде.Видимость            = Ложь;
	СписокЭлементов.Колонки.КодНаселенногоПунктаВКоде.Видимость = Ложь;
	СписокЭлементов.Колонки.КодУлицыВКоде.Видимость             = Ложь;
	
	РегистрСведенийСписок.Колонки.Добавить("Код", Ложь);
	
	РежимВыбора = Истина;
	СписокЭлементов.РежимВыбора = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мНазваниеЭлемента = "адресных элементов";

КодРодительскогоЭлемента = 0;
КодРегионаРодительскогоЭлемента = 0;
КодРайонаРодительскогоЭлемента = 0;
КодГородаРодительскогоЭлемента = 0;
КодНасПунктаРодительскогоЭлемента = 0;
