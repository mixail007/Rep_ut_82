
Процедура ДействияФормыОчистить(Кнопка)
	список = Новый списокЗначений;
	список.Добавить(перечисления.ВидыТоваров.Диски);
	список.Добавить(перечисления.ВидыТоваров.Аксессуары);
	список.Добавить(перечисления.ВидыТоваров.АКБ);
	выбор = Список.ВыбратьЭлемент("вид товара, покоторому нужно очистить распродажу",);
	если выбор <> Неопределено тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АссортиментРаспродажиДляТерминала.Номенклатура
		|ИЗ
		|	РегистрСведений.АссортиментРаспродажиДляТерминала КАК АссортиментРаспродажиДляТерминала
		|ГДЕ
		|	АссортиментРаспродажиДляТерминала.Номенклатура.ВидТовара = &Выбор";
		
		Запрос.УстановитьПараметр("Выбор", Выбор.Значение);
		
		СписокНоменклатуры = Запрос.Выполнить().Выгрузить();
		Для каждого стр из СписокНоменклатуры цикл
		наборЗаписей = РегистрыСведений.АссортиментРаспродажиДляТерминала.СоздатьНаборЗаписей();
		наборЗаписей.Отбор.номенклатура.значение =стр.номенклатура;
		наборЗаписей.Отбор.номенклатура.Использование = Истина;
		наборЗаписей.Прочитать();
		наборЗаписей.Очистить();
		наборЗаписей.Записать();
		конецЦикла;
	конецесли;
КонецПроцедуры

Процедура ДействияФормыЗагрузить(Кнопка)
	список = Новый списокЗначений;
	список.Добавить(перечисления.ВидыТоваров.Диски);
	список.Добавить(перечисления.ВидыТоваров.Аксессуары);
	список.Добавить(перечисления.ВидыТоваров.АКБ);
	выбор = Список.ВыбратьЭлемент("вид товара, покоторому хотите загрузить распродажу",);
	Если выбор <> Неопределено Тогда
		ответ = Вопрос("Очистить предыдущие данные по выбранному виду товара?", РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	АссортиментРаспродажиДляТерминала.Номенклатура
			|ИЗ
			|	РегистрСведений.АссортиментРаспродажиДляТерминала КАК АссортиментРаспродажиДляТерминала
			|ГДЕ
			|	АссортиментРаспродажиДляТерминала.Номенклатура.ВидТовара = &Выбор";
			
			Запрос.УстановитьПараметр("Выбор", Выбор.Значение);
			
			СписокНоменклатуры = Запрос.Выполнить().Выгрузить();
			Для каждого стр из СписокНоменклатуры цикл
				наборЗаписей = РегистрыСведений.АссортиментРаспродажиДляТерминала.СоздатьНаборЗаписей();
				наборЗаписей.Отбор.номенклатура.значение =стр.номенклатура;
				наборЗаписей.Отбор.номенклатура.Использование = Истина;
				наборЗаписей.Прочитать();
				наборЗаписей.Очистить();
				наборЗаписей.Записать();
			конецЦикла;
		КонецЕсли;
	 форма = РегистрыСведений.АссортиментРаспродажиДляТерминала.ПолучитьФорму("ФормаЗагрузки");
	 Форма.Открыть();
		
		
		
		
		
	конецЕсли;
КонецПроцедуры

Процедура ДействияФормыЗагрузитьВТерминал(Кнопка)
	ИмяФайла=КаталогВременныхФайлов()+"ProductsForSale_terminal.xml"; // на сервере - своя папка...
	
	ОбъектXML = Новый ЗаписьXML;
	ОбъектXML.ОткрытьФайл(ИмяФайла, "UTF-8");
	ОбъектXML.ЗаписатьОбъявлениеXML();  //<?xml version="1.0"?>
	ОбъектXML.ЗаписатьНачалоЭлемента("ProductsForSale");
	наборЗаписей = РегистрыСведений.АссортиментРаспродажиДляТерминала.СоздатьНаборЗаписей();
    наборЗаписей.Прочитать();
	Для каждого запись из наборЗаписей Цикл
		ОбъектXML.ЗаписатьНачалоЭлемента("Product");
		ОбъектXML.ЗаписатьАтрибут("ProductId", Запись.Номенклатура.Код); //строка
	    ОбъектXML.ЗаписатьКонецЭлемента(); 
	конецЦикла;
	ОбъектXML.ЗаписатьКонецЭлемента(); 
	ОбъектXML.Закрыть();
	
	удачно = ОбменСУТИнтернетМагазин.SIM_ВыгрузитьФайлНаСервер(ИмяФайла,"ImportSaleOffers", Истина, "terminal.yst.ru" );
	#Если Клиент Тогда
	сообщить("Сформирован файл выгрузки "+Имяфайла);
	Если удачно Тогда
	сообщить("Файл удачно выгружен в Terminal");
	конецЕсли;                                     	
	#конецесли
	

КонецПроцедуры
