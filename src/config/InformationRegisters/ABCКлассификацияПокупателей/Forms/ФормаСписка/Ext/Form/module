
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура обновляет надпись в форме владельце,
// если форма-владелец это форма элемента справочника Контрагенты
//
//  Параметры НЕТ
Процедура ОбновитьНадписьВФормеВладельце()

	Если ЭтаФорма.ВладелецФормы <> Неопределено Тогда
	
		Если ТипЗнч(ЭтаФорма.КлючУникальности) = Тип("Строка") И СтрЧислоВхождений(ЭтаФорма.КлючУникальности, "Контрагент") Тогда
		
			ЭтаФорма.ВладелецФормы.ПрочитатьABCКлассПокупателя();
		
		КонецЕсли; 
	
	КонецЕсли; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПослеУдаления элемента формы РегистрСведенийСписок.
//
Процедура РегистрСведенийСписокПослеУдаления(Элемент)
	
	ОбновитьНадписьВФормеВладельце();
	
КонецПроцедуры

// Обработчик события ПриОкончанииРедактирования элемента формы РегистрСведенийСписок.
//
Процедура РегистрСведенийСписокПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьНадписьВФормеВладельце();
	
КонецПроцедуры

// Обработчик события ПриЗакрытии формы.
//
Процедура ПриЗакрытии()
	
	ОбновитьНадписьВФормеВладельце();
	
КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента формы РегистрСведенийСписок.
//
Процедура РегистрСведенийСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.ABCКлассПокупателя.Пустая() Тогда
		
		ОформлениеСтроки.Ячейки.ABC_КлассПокупателя.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.ABC_КлассПокупателя.Текст = "Не указан";
		
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы ДействияФормы.ВвестиНовыйДокумент.
//
Процедура ДействияФормыВвестиНовыйДокумент(Кнопка)
	
	НовыйДокумент = Документы.ABCКлассификацияПокупателей.СоздатьДокумент();
	НовыйДокумент.ПолучитьФорму().Открыть();
	
КонецПроцедуры
