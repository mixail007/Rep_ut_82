
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если НЕ ОбменДанными.Загрузка  Тогда
		
		//+++ 28.06.2016 - ограничение записи нак и на группы товаров!
		// ограничение для всех, кроме Егора Малышева - для "связки" дисков и крышек...
		списГрупп = получитьСписокГрупп();
		флНадоПроверять=Истина;
		для каждого эл1 из списГрупп цикл
			если эл1.Значение.Пустая() тогда // пустая это Разрешение на все группы!!!
				флНадоПроверять=ЛОЖЬ;
			КонецЕсли;
		КонецЦикла;
		
			Для каждого ЗаписьРегистра Из ЭтотОбъект Цикл
			
			Если ЗначениеНеЗаполнено(ЗаписьРегистра.Номенклатура) Тогда
				СообщитьОбОшибке("Номенклатура должна быть заполнена обязательно!", Отказ);
			ИначеЕсли ЗаписьРегистра.Номенклатура.Услуга Тогда
				СообщитьОбОшибке("Номенклатура не может быть услугой!", Отказ);
				
			//+++ 28.06.2016 проверка доступа (разрешения) у пользователя на изменение "привязки" дисков
			ИначеЕсли флНадоПроверять тогда
			    ЗапрещеноРедактироватьКомплектующиеТовара = Истина;
				для каждого эл1 из списГрупп цикл
					Если ТоварВИерархии( ЗаписьРегистра.Номенклатура, эл1.Значение ) тогда
						ЗапрещеноРедактироватьКомплектующиеТовара = Ложь;
						прервать;
					КонецЕсли;	
				КонецЦикла;
				
				Если ЗапрещеноРедактироватьКомплектующиеТовара тогда
					СообщитьОбОшибке("У Вас недостаточно прав для редактирования Комплектующих номенклатуры! Невозможно изменить комплектующие товара: "+строка(ЗаписьРегистра.Номенклатура.Код)+" "+строка(ЗаписьРегистра.Номенклатура), Отказ);
				иначе
					#Если Клиент тогда
						Сообщить("Записана комплектующая: "+строка(ЗаписьРегистра.Комплектующая)+" для товара: "+строка(ЗаписьРегистра.Номенклатура), СтатусСообщения.Информация );
					#КонецЕсли	
				КонецЕсли;
			//+++)
			
			
			КонецЕсли;
			
			Если ЗначениеНеЗаполнено(ЗаписьРегистра.Комплектующая) Тогда
				СообщитьОбОшибке("Комплектующая должна быть заполнена обязательно!", Отказ);
			ИначеЕсли ЗаписьРегистра.Комплектующая.Услуга Тогда
				СообщитьОбОшибке("Комплектующая не может быть услугой!", Отказ);
			ИначеЕсли ЗаписьРегистра.Комплектующая.Набор Тогда
				СообщитьОбОшибке("Комплектующая не может быть набором!", Отказ);
			КонецЕсли;
			
			Если (ЗаписьРегистра.Комплектующая = ЗаписьРегистра.Номенклатура)
				И НЕ ЗначениеНеЗаполнено(ЗаписьРегистра.Номенклатура) Тогда
				СообщитьОбОшибке("Номенклатура не может совпадать с комплектующей!", Отказ);
			КонецЕсли;
			
			Если ЗаписьРегистра.Количество = 0 Тогда
				СообщитьОбОшибке("Количество не должно быть нулевым!", Отказ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//ОС и НМА
	
	Для каждого Запись Из ЭтотОбъект Цикл
		
		Если Не ОбменДанными.Загрузка И ТипЗнч(Запись.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			
			ПроверитьРегистрацию(Запись.Номенклатура, ЭтотОбъект);	
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	//ОС и НМА


КонецПроцедуры

//+++ 28.06.2016
функция получитьСписокГрупп()
	спис = новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ГруппыРедактированияНоменклатуры.ГруппаНоменклатуры
	|ИЗ
	|	РегистрСведений.ГруппыРедактированияНоменклатуры КАК ГруппыРедактированияНоменклатуры
	|ГДЕ
	|	ГруппыРедактированияНоменклатуры.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", глТекущийПользователь);
	
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();	
	спис.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("ГруппаНоменклатуры") );
	
	возврат спис;
КонецФункции	

функция ТоварВИерархии( тов1, гр1 )
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ первые 1
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &тов1
	|	И Номенклатура.Ссылка В ИЕРАРХИИ (&гр1)";
	
	Запрос.УстановитьПараметр("тов1", тов1 );
	Запрос.УстановитьПараметр("гр1",  гр1 );
	
	Результат = Запрос.Выполнить();	
	
	возврат НЕ Результат.Пустой();
	
КонецФункции	
	