Перем мСтруктурнаяЕдиница; // сохраняем структурную единицу, данные которого начинали редактировать

// По выбранному значению в поле ТипСтруктурнойЕдиницы устанавливает тип значения поля СтруктурнаяЕдиница
//
Процедура УстановитьТипСтруктурнойЕдиницы()

	Если ТипСтруктурнойЕдиницы  = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		Если ТипЗнч(СтруктурнаяЕдиница) <> Тип("СправочникСсылка.Склады") Тогда
			СтруктурнаяЕдиница = Справочники.Склады.ПустаяСсылка();
		КонецЕсли; 
	Иначе
		Если ТипЗнч(СтруктурнаяЕдиница) <> Тип("СправочникСсылка.Кассы") Тогда
			СтруктурнаяЕдиница = Справочники.Кассы.ПустаяСсылка();
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры // УстановитьТипСтруктурнойЕдиницы()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	мСтруктурнаяЕдиница = СтруктурнаяЕдиница;
	Заголовок = "Ответственное лицо для: " + СокрЛП(СтруктурнаяЕдиница);

	Если ЗначениеНеЗаполнено(ТипСтруктурнойЕдиницы) Тогда
		Если ТипЗнч(СтруктурнаяЕдиница) = Тип("СправочникСсылка.Склады") Тогда
			ТипСтруктурнойЕдиницы  = Перечисления.ТипыСтруктурныхЕдиниц.Склад;
		Иначе
			ТипСтруктурнойЕдиницы  = Перечисления.ТипыСтруктурныхЕдиниц.Касса;
		КонецЕсли;
	КонецЕсли;

	УстановитьТипСтруктурнойЕдиницы();

КонецПроцедуры //ПриОткрытии()

Процедура ПослеЗаписи()

	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ОтветственноеЛицо"), СтруктурнаяЕдиница);
	Если мСтруктурнаяЕдиница <> СтруктурнаяЕдиница Тогда

		// оповестим также форму того физлица, данные которого начинали редактировать
		Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ОтветственноеЛицо"), мСтруктурнаяЕдиница);
		мСтруктурнаяЕдиница = СтруктурнаяЕдиница;
	КонецЕсли;

КонецПроцедуры // ПослеЗаписи()


// Обработчик события "Открытие" ответственного лица.
//
Процедура КнопкаИсторияНажатие(Элемент)
	
	ФормаРегистра = РегистрыСведений.ОтветственныеЛица.ПолучитьФормуСписка();
	ФормаРегистра.РегистрСведенийСписок.Отбор.СтруктурнаяЕдиница.Значение = СтруктурнаяЕдиница;
	ФормаРегистра.РегистрСведенийСписок.Отбор.СтруктурнаяЕдиница.ВидСравнения = ВидСравнения.Равно;
	ФормаРегистра.РегистрСведенийСписок.Отбор.СтруктурнаяЕдиница.Использование = Истина;
	ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Конец;
	
	ФормаРегистра.Открыть();
	
КонецПроцедуры

// Обработчик события "ПриИзменении" ответственного лица.
//
Процедура СтруктурнаяЕдиницаПриИзменении(Элемент)

	Заголовок = "Ответственное лицо для: " + СокрЛП(СтруктурнаяЕдиница);
	УстановитьТипСтруктурнойЕдиницы();

КонецПроцедуры // СтруктурнаяЕдиницаПриИзменении()

Процедура ТипСтруктурнойЕдиницыПриИзменении(Элемент)

	УстановитьТипСтруктурнойЕдиницы();

КонецПроцедуры


