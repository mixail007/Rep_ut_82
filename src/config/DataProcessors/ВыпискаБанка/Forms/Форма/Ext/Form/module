
Процедура КнопкаВыполнитьНажатие(Элемент)
	
	Попытка
		
		НачатьТранзакцию();
		
		Для каждого Строка из СписокДокументов Цикл
				
			Документ=Строка.Документ.ПолучитьОбъект();
			
			Если НЕ (ТипЗнч(Документ)=Тип("ДокументОбъект.ДенежныйЧек") ИЛИ ТипЗнч(Документ)=Тип("ДокументОбъект.ОбъявлениеНаВзносНаличными")) Тогда
				
				Документ.ЕстьРасчетыСКонтрагентами=ЕстьРасчетыСКонтрагентами(Документ.ВидОперации);
				Документ.ЕстьРасчетыПоКредитам=ЕстьРасчетыПоКредитам(Документ.ВидОперации);
				
			КонецЕсли;
			
			Если Документ.Оплачено И НЕ Строка.Оплачено Тогда
				
					Документ.Оплачено=Ложь;
					Документ.ДатаОплаты='00010101';
					
					Документ.Записать(РежимЗаписиДокумента.Проведение);
				
			ИначеЕсли НЕ Документ.Оплачено И Строка.Оплачено Тогда
				
				Документ.Оплачено=Истина;
				Документ.ДатаОплаты=ДатаОплаты;
				
				Документ.Записать(РежимЗаписиДокумента.Проведение);
				
			КонецЕсли;
					
		КонецЦикла;	
		
		ЗафиксироватьТранзакцию();	
		
	Исключение	
		
		Сообщить(ОписаниеОшибки());
		
    КонецПопытки

КонецПроцедуры

Процедура КоманднаяПанельСписокДокументовУстановитьПометки(Кнопка)
	
	СуммаПриходИтого=0;
	СуммаРасходИтого=0;
	
	Для каждого Строка из СписокДокументов Цикл
		
		Если НЕ Строка.ЧастичнаяОплата Тогда
			
			Строка.Оплачено = Истина;
			
			СуммаПриходИтого=СуммаПриходИтого+Строка.СуммаПриход;
			СуммаРасходИтого=СуммаРасходИтого+Строка.СуммаРасход;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОстатокНаКонецДня=ОстатокНаНачалоДня+СуммаПриходИтого-СуммаРасходИтого;
	
КонецПроцедуры

// Рассчитывает суммы прихода и расхода по оплаченным документам
//
// Параметры: нет
//
Процедура РасчетОборотов()
	
	СуммаПриходИтого=0;
	СуммаРасходИтого=0;
	
	Для каждого Строка Из СписокДокументов Цикл
		
		Если Строка.Оплачено Тогда
			
			СуммаПриходИтого=СуммаПриходИтого+Строка.СуммаПриход;
			СуммаРасходИтого=СуммаРасходИтого+Строка.СуммаРасход;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	ОстатокНаКонецДня=ОстатокНаНачалоДня+СуммаПриходИтого-СуммаРасходИтого;

КонецПроцедуры // РасчетОборотов()

// Рассчитывает начальный остаток по выбранному счету на дату оплаты.
//
// Параметры: нет
//
Процедура РасчетНачальногоОстатка()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ДенежныеСредстваОстатки.СуммаОстаток КАК СуммаОстаток
	             |ИЗ
	             |	РегистрНакопления.ДенежныеСредства.Остатки(&ДатаОплаты, БанковскийСчетКасса=&СчетОрганизации) КАК ДенежныеСредстваОстатки";
				 
	Запрос.УстановитьПараметр("СчетОрганизации",СчетОрганизации);
	Запрос.УстановитьПараметр("ДатаОплаты",НачалоДня(ДатаОплаты));
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		
		ОстатокНаНачалоДня=Результат.СуммаОстаток;
		
	КонецЕсли;

КонецПроцедуры // РасчетНачальногоОстатка()

// Заполняет табличное поле и рассчитывает текущие остатки
//
Процедура ЗаполнитьВыписку()
	
	Если Организация.Пустая() ИЛИ СчетОрганизации.Пустая() ИЛИ
		ЗначениеНеЗаполнено(ДатаОплаты) Тогда
		Возврат;
	КонецЕсли;
	
	СписокДокументов.Очистить();
	
	Запрос=Новый Запрос;
	ТекстЗапроса="ВЫБРАТЬ
	|	ПлатежноеПоручениеИсходящее.Ссылка КАК Документ,
	|	ПлатежноеПоручениеИсходящее.Контрагент.Представление КАК Контрагент,
	|	ПлатежноеПоручениеИсходящее.Оплачено КАК Оплачено,
	|	ПлатежноеПоручениеИсходящее.ЧастичнаяОплата КАК ЧастичнаяОплата,
	|	ОстатокКСписанию.СуммаОстаток КАК СуммаОстаток,
	|	0 КАК СуммаПриход,
	|	ПлатежноеПоручениеИсходящее.СуммаДокумента КАК СуммаРасход
	|ИЗ
	|	Документ.ПлатежноеПоручениеИсходящее КАК ПлатежноеПоручениеИсходящее
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКСписанию.Остатки КАК ОстатокКСписанию
	|	ПО ПлатежноеПоручениеИсходящее.Ссылка = ОстатокКСписанию.ДокументСписания
	|ГДЕ
	|	ПлатежноеПоручениеИсходящее.СчетОрганизации = &СчетОрганизации
	|   И НЕ ПлатежноеПоручениеИсходящее.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ПлатежноеПоручениеИсходящее.Оплачено		 		 
		|И КонецПериода(ПлатежноеПоручениеИсходящее.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ПлатежноеПоручениеИсходящее.Оплачено И КонецПериода(ПлатежноеПоручениеИсходящее.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ПлатежноеПоручениеИсходящее.Оплачено И КонецПериода(ПлатежноеПоручениеИсходящее.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныйЧек.Ссылка,
	|	ДенежныйЧек.Организация.Представление,
	|	ДенежныйЧек.Оплачено,
	|	ЛОЖЬ,
	|	ДенежныйЧек.СуммаДокумента,
	|	0,
	|	ДенежныйЧек.СуммаДокумента
	|ИЗ
	|	Документ.ДенежныйЧек КАК ДенежныйЧек
	|
	|ГДЕ
	|	ДенежныйЧек.СчетОрганизации = &СчетОрганизации
	|   И НЕ ДенежныйЧек.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ДенежныйЧек.Оплачено		 		 
		|И КонецПериода(ДенежныйЧек.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ДенежныйЧек.Оплачено И КонецПериода(ДенежныйЧек.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ДенежныйЧек.Оплачено И КонецПериода(ДенежныйЧек.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъявлениеНаВзнос.Ссылка,
	|	ОбъявлениеНаВзнос.Организация.Представление,
	|	ОбъявлениеНаВзнос.Оплачено,
	|	ЛОЖЬ,
	|	ОбъявлениеНаВзнос.СуммаДокумента,
	|	ОбъявлениеНаВзнос.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.ОбъявлениеНаВзносНаличными КАК ОбъявлениеНаВзнос
	|
	|ГДЕ
	|	ОбъявлениеНаВзнос.СчетОрганизации = &СчетОрганизации
	|   И НЕ ОбъявлениеНаВзнос.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ОбъявлениеНаВзнос.Оплачено		 		 
		|И КонецПериода(ОбъявлениеНаВзнос.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ОбъявлениеНаВзнос.Оплачено И КонецПериода(ОбъявлениеНаВзнос.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ОбъявлениеНаВзнос.Оплачено И КонецПериода(ОбъявлениеНаВзнос.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежноеПоручениеВходящее.Ссылка,
	|	ПлатежноеПоручениеВходящее.Контрагент.Представление,
	|	ПлатежноеПоручениеВходящее.Оплачено,
	|	ПлатежноеПоручениеВходящее.ЧастичнаяОплата,
	|	ОстатокКПолучению.СуммаОстаток,
	|	ПлатежноеПоручениеВходящее.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.ПлатежноеПоручениеВходящее КАК ПлатежноеПоручениеВходящее
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКПолучению.Остатки КАК ОстатокКПолучению
	|	ПО ПлатежноеПоручениеВходящее.Ссылка = ОстатокКПолучению.ДокументПолучения
	|
	|ГДЕ
	|	ПлатежноеПоручениеВходящее.СчетОрганизации = &СчетОрганизации
	|   И НЕ ПлатежноеПоручениеВходящее.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ПлатежноеПоручениеВходящее.Оплачено		 		 
		|И КонецПериода(ПлатежноеПоручениеВходящее.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ПлатежноеПоручениеВходящее.Оплачено И КонецПериода(ПлатежноеПоручениеВходящее.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ПлатежноеПоручениеВходящее.Оплачено И КонецПериода(ПлатежноеПоручениеВходящее.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежноеТребованиеВыставленное.Ссылка,
	|	ПлатежноеТребованиеВыставленное.Контрагент.Представление,
	|	ПлатежноеТребованиеВыставленное.Оплачено,
	|	ПлатежноеТребованиеВыставленное.ЧастичнаяОплата,
	|	ОстатокКПолучению.СуммаОстаток,
	|	ПлатежноеТребованиеВыставленное.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.ПлатежноеТребованиеВыставленное КАК ПлатежноеТребованиеВыставленное
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКПолучению.Остатки КАК ОстатокКПолучению
	|	ПО ПлатежноеТребованиеВыставленное.Ссылка = ОстатокКПолучению.ДокументПолучения
	|
	|ГДЕ
	|	ПлатежноеТребованиеВыставленное.СчетОрганизации = &СчетОрганизации
	|   И НЕ ПлатежноеТребованиеВыставленное.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ПлатежноеТребованиеВыставленное.Оплачено		 		 
		|И КонецПериода(ПлатежноеТребованиеВыставленное.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ПлатежноеТребованиеВыставленное.Оплачено И КонецПериода(ПлатежноеТребованиеВыставленное.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ПлатежноеТребованиеВыставленное.Оплачено И КонецПериода(ПлатежноеТребованиеВыставленное.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИнкассовоеПоручениеПереданное.Ссылка,
	|	ИнкассовоеПоручениеПереданное.Контрагент.Представление,
	|	ИнкассовоеПоручениеПереданное.Оплачено,
	|	ИнкассовоеПоручениеПереданное.ЧастичнаяОплата,
	|	ОстатокКПолучению.СуммаОстаток,
	|	ИнкассовоеПоручениеПереданное.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.ИнкассовоеПоручениеПереданное КАК ИнкассовоеПоручениеПереданное
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКПолучению.Остатки КАК ОстатокКПолучению
	|	ПО ИнкассовоеПоручениеПереданное.Ссылка = ОстатокКПолучению.ДокументПолучения
	|
	|ГДЕ
	|	ИнкассовоеПоручениеПереданное.СчетОрганизации = &СчетОрганизации
	|   И НЕ ИнкассовоеПоручениеПереданное.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ИнкассовоеПоручениеПереданное.Оплачено		 		 
		|И КонецПериода(ИнкассовоеПоручениеПереданное.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ИнкассовоеПоручениеПереданное.Оплачено И КонецПериода(ИнкассовоеПоручениеПереданное.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ИнкассовоеПоручениеПереданное.Оплачено И КонецПериода(ИнкассовоеПоручениеПереданное.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АккредитивПолученный.Ссылка,
	|	АккредитивПолученный.Контрагент.Представление,
	|	АккредитивПолученный.Оплачено,
	|	АккредитивПолученный.ЧастичнаяОплата,
	|	ОстатокКПолучению.СуммаОстаток,
	|	АккредитивПолученный.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.АккредитивПолученный КАК АккредитивПолученный
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКПолучению.Остатки КАК ОстатокКПолучению
	|	ПО АккредитивПолученный.Ссылка = ОстатокКПолучению.ДокументПолучения
	|
	|ГДЕ
	|	АккредитивПолученный.СчетОрганизации = &СчетОрганизации
	|   И НЕ АккредитивПолученный.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И АккредитивПолученный.Оплачено		 		 
		|И КонецПериода(АккредитивПолученный.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((АккредитивПолученный.Оплачено И КонецПериода(АккредитивПолученный.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ АккредитивПолученный.Оплачено И КонецПериода(АккредитивПолученный.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежноеТребованиеПолученное.Ссылка,
	|	ПлатежноеТребованиеПолученное.Контрагент.Представление,
	|	ПлатежноеТребованиеПолученное.Оплачено,
	|	ПлатежноеТребованиеПолученное.ЧастичнаяОплата,
	|	ОстатокКСписанию.СуммаОстаток,
	|	0,
	|	ПлатежноеТребованиеПолученное.СуммаДокумента
	|ИЗ
	|	Документ.ПлатежноеТребованиеПолученное КАК ПлатежноеТребованиеПолученное
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКСписанию.Остатки КАК ОстатокКСписанию
	|	ПО ПлатежноеТребованиеПолученное.Ссылка = ОстатокКСписанию.ДокументСписания
	|ГДЕ
	|	ПлатежноеТребованиеПолученное.СчетОрганизации = &СчетОрганизации
	|   И НЕ ПлатежноеТребованиеПолученное.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ПлатежноеТребованиеПолученное.Оплачено		 		 
		|И КонецПериода(ПлатежноеТребованиеПолученное.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ПлатежноеТребованиеПолученное.Оплачено И КонецПериода(ПлатежноеТребованиеПолученное.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ПлатежноеТребованиеПолученное.Оплачено И КонецПериода(ПлатежноеТребованиеПолученное.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИнкассовоеПоручениеПолученное.Ссылка,
	|	ИнкассовоеПоручениеПолученное.Контрагент.Представление,
	|	ИнкассовоеПоручениеПолученное.Оплачено,
	|	ИнкассовоеПоручениеПолученное.ЧастичнаяОплата,
	|	ОстатокКСписанию.СуммаОстаток,
	|	0,
	|	ИнкассовоеПоручениеПолученное.СуммаДокумента
	|ИЗ
	|	Документ.ИнкассовоеПоручениеПолученное КАК ИнкассовоеПоручениеПолученное
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКСписанию.Остатки КАК ОстатокКСписанию
	|	ПО ИнкассовоеПоручениеПолученное.Ссылка = ОстатокКСписанию.ДокументСписания
	|ГДЕ
	|	ИнкассовоеПоручениеПолученное.СчетОрганизации = &СчетОрганизации
	|   И НЕ ИнкассовоеПоручениеПолученное.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ИнкассовоеПоручениеПолученное.Оплачено		 		 
		|И КонецПериода(ИнкассовоеПоручениеПолученное.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ИнкассовоеПоручениеПолученное.Оплачено И КонецПериода(ИнкассовоеПоручениеПолученное.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ИнкассовоеПоручениеПолученное.Оплачено И КонецПериода(ИнкассовоеПоручениеПолученное.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АккредитивПереданный.Ссылка,
	|	АккредитивПереданный.Контрагент.Представление,
	|	АккредитивПереданный.Оплачено,
	|	АккредитивПереданный.ЧастичнаяОплата,
	|	ОстатокКСписанию.СуммаОстаток,
	|	0,
	|	АккредитивПереданный.СуммаДокумента
	|ИЗ
	|	Документ.АккредитивПереданный КАК АккредитивПереданный
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКСписанию.Остатки КАК ОстатокКСписанию
	|	ПО АккредитивПереданный.Ссылка = ОстатокКСписанию.ДокументСписания
	|ГДЕ
	|	АккредитивПереданный.СчетОрганизации = &СчетОрганизации
	|   И НЕ АккредитивПереданный.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И АккредитивПереданный.Оплачено		 		 
		|И КонецПериода(АккредитивПереданный.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((АккредитивПереданный.Оплачено И КонецПериода(АккредитивПереданный.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ АккредитивПереданный.Оплачено И КонецПериода(АккредитивПереданный.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
			
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежныйОрдерВходящий.Ссылка,
	|	ПлатежныйОрдерВходящий.Контрагент.Представление,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ПлатежныйОрдерВходящий.СуммаДокумента,
	|	ПлатежныйОрдерВходящий.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.ПлатежныйОрдерПоступлениеДенежныхСредств КАК ПлатежныйОрдерВходящий
	|
	|ГДЕ
	|	ПлатежныйОрдерВходящий.СчетОрганизации = &СчетОрганизации
	|   И ПлатежныйОрдерВходящий.Проведен
	|	И КонецПериода(ПлатежныйОрдерВходящий.Дата,День) = &ДатаОплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежныйОрдерИсходящий.Ссылка,
	|	ПлатежныйОрдерИсходящий.Контрагент.Представление,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ПлатежныйОрдерИсходящий.СуммаДокумента,
	|	0,
	|	ПлатежныйОрдерИсходящий.СуммаДокумента
	|ИЗ
	|	Документ.ПлатежныйОрдерСписаниеДенежныхСредств КАК ПлатежныйОрдерИсходящий
	|
	|ГДЕ
	|	ПлатежныйОрдерИсходящий.СчетОрганизации = &СчетОрганизации
	|   И ПлатежныйОрдерИсходящий.Проведен
	|	И КонецПериода(ПлатежныйОрдерИсходящий.Дата,День) = &ДатаОплаты";
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйКассовыйОрдер.Ссылка,
	|	РасходныйКассовыйОрдер.СчетОрганизации.Представление,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	РасходныйКассовыйОрдер.СуммаДокумента,
	|	РасходныйКассовыйОрдер.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|
	|ГДЕ
	|	РасходныйКассовыйОрдер.ВидОперации=&СдачаНаличных
	|	И РасходныйКассовыйОрдер.ОбъявлениеНаВзносНаличными = &ПустоеОбъявление
	|	И РасходныйКассовыйОрдер.СчетОрганизации = &СчетОрганизации
	|   И РасходныйКассовыйОрдер.Проведен
	|   И РасходныйКассовыйОрдер.Оплачено
	|	И КонецПериода(РасходныйКассовыйОрдер.Дата,День) = &ДатаОплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходныйКассовыйОрдер.Ссылка,
	|	ПриходныйКассовыйОрдер.СчетОрганизации.Представление,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ПриходныйКассовыйОрдер.СуммаДокумента,
	|	0,
	|	ПриходныйКассовыйОрдер.СуммаДокумента
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|
	|ГДЕ
	|	ПриходныйКассовыйОрдер.ВидОперации=&ПолучениеНаличных
	|	И ПриходныйКассовыйОрдер.ДенежныйЧек = &ПустойДенежныйЧек
	|	И ПриходныйКассовыйОрдер.СчетОрганизации = &СчетОрганизации
	|   И ПриходныйКассовыйОрдер.Проведен
	|   И ПриходныйКассовыйОрдер.Оплачено
	|	И КонецПериода(ПриходныйКассовыйОрдер.Дата,День) = &ДатаОплаты";
	
	Запрос.Текст=ТекстЗапроса;
	
	Запрос.УстановитьПараметр("СчетОрганизации",СчетОрганизации);
	Запрос.УстановитьПараметр("ДатаОплаты",КонецДня(ДатаОплаты));
	
	Запрос.УстановитьПараметр("СдачаНаличных",Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк);
	Запрос.УстановитьПараметр("ПолучениеНаличных",Перечисления.ВидыОперацийПКО.ПолучениеНаличныхДенежныхСредствВБанке);
	
	Запрос.УстановитьПараметр("ПустоеОбъявление",Документы.ОбъявлениеНаВзносНаличными.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойДенежныйЧек",Документы.ДенежныйЧек.ПустаяСсылка());
		
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		Если РезультатЗапроса.ЧастичнаяОплата Тогда
			
			Если РезультатЗапроса.СуммаОстаток=NULL Тогда
				
				Продолжить;
				
			Иначе
				
				Строка=СписокДокументов.Добавить();
				Строка.Документ=РезультатЗапроса.Документ;
				Строка.Контрагент=РезультатЗапроса.Контрагент;
				Строка.СуммаПриход=?(РезультатЗапроса.СуммаПриход>0,РезультатЗапроса.СуммаОстаток,0);
				Строка.СуммаРасход=?(РезультатЗапроса.СуммаРасход>0,РезультатЗапроса.СуммаОстаток,0);
				Строка.Оплачено=Ложь;
				Строка.ЧастичнаяОплата=ИСТИНА;
				
			КонецЕсли;
			
		Иначе
			
			Строка=СписокДокументов.Добавить();
			Строка.Документ=РезультатЗапроса.Документ;
			Строка.Контрагент=РезультатЗапроса.Контрагент;
			Строка.СуммаПриход=РезультатЗапроса.СуммаПриход;
			Строка.СуммаРасход=РезультатЗапроса.СуммаРасход;
			Строка.Оплачено=РезультатЗапроса.Оплачено;
			Строка.ЧастичнаяОплата=ЛОЖЬ;
			
		КонецЕсли;
		
	КонецЦикла;
	
	РасчетНачальногоОстатка();
	РасчетОборотов();	 
	
	
КонецПроцедуры // ЗаполнитьВыписку()

Процедура КоманднаяПанельСписокДокументовЗаполнить(Кнопка)
	
	Если СписокДокументов.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Имя);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
		
		ЗаполнитьВыписку();
		
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанельСписокДокументыСнятьПометки(Кнопка)
	
	СуммаПриходИтого=0;
	СуммаРасходИтого=0;
	
	Для каждого Строка из СписокДокументов Цикл
		
		Если НЕ Строка.ЧастичнаяОплата Тогда
			
			Если Найти(ТипЗнч(Строка.Документ),"ордер")=0 Тогда
				
				Строка.Оплачено = Ложь;
				
			Иначе
				
				СуммаПриходИтого=СуммаПриходИтого+Строка.СуммаПриход;
				СуммаРасходИтого=СуммаРасходИтого+Строка.СуммаРасход;
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;	
	
	ОстатокНаКонецДня=ОстатокНаНачалоДня+СуммаПриходИтого-СуммаРасходИтого;
	
КонецПроцедуры

Процедура СписокДокументовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РасчетОборотов();
	
КонецПроцедуры

Процедура СчетОрганизацииПриИзменении(Элемент)
	
	Если Организация.Пустая() И НЕ СчетОрганизации.Пустая() Тогда
		Организация=СчетОрганизации.Владелец;
	КонецЕсли;
	
	ЗаполнитьВыписку();
		
КонецПроцедуры

Процедура ДатаОплатыПриИзменении(Элемент)
	
	ЗаполнитьВыписку();
	
КонецПроцедуры

Процедура ДатаОплатыРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗаполнитьВыписку();
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеНеЗаполнено(Организация) Тогда
		СчетОрганизации=Организация.ОсновнойБанковскийСчет;
	Иначе
		СчетОрганизации=Новый(Тип("СправочникСсылка.БанковскиеСчета"));
	КонецЕсли;
	
	ЗаполнитьВыписку();
	
КонецПроцедуры

Процедура ПроверитьВозможностьЧастичнойОплатыУпр(СтрокаДокумент)
	
	Если СтрокаДокумент.Оплачено 
		ИЛИ (ТипЗнч(СтрокаДокумент.Документ)=Тип("ДокументСсылка.ОбъявлениеНаВзносНаличными")
		ИЛИ ТипЗнч(СтрокаДокумент.Документ)=Тип("ДокументСсылка.ДенежныйЧек")
		ИЛИ ТипЗнч(СтрокаДокумент.Документ)=Тип("ДокументСсылка.ПлатежныйОрдерПоступлениеДенежныхСредств")
		ИЛИ ТипЗнч(СтрокаДокумент.Документ)=Тип("ДокументСсылка.ПлатежныйОрдерСписаниеДенежныхСредств")) Тогда
		
		ЭлементыФормы.КоманднаяПанельЧастичнаяОплата.Кнопки.ЧастичнаяОплата.Доступность=Ложь;
		
	Иначе
		
		ЭлементыФормы.КоманднаяПанельЧастичнаяОплата.Кнопки.ЧастичнаяОплата.Доступность=Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОпределитьОстатокПоДокументуУпр(РасчетныйДокумент,Регистр,Измерение)
	
	Если Не РасчетныйДокумент.ЧастичнаяОплата Тогда
		Остаток=РасчетныйДокумент.СуммаДокумента;
	Иначе
		ТекстЗапроса="ВЫБРАТЬ
		|	ОперативноеДвижение.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления."+Регистр+".Остатки(, "+Измерение+" = &РасчетныйДокумент) КАК ОперативноеДвижение";
		Запрос=Новый Запрос;
		Запрос.Текст=ТекстЗапроса;
		Запрос.УстановитьПараметр("РасчетныйДокумент",РасчетныйДокумент);
		
		Результат=Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			Остаток=Результат.СуммаОстаток;
		Иначе
			Остаток=0;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Остаток;
	
	КонецФункции // ОпределитьОстатокПоДокументу()

Процедура СписокДокументовДокументПриИзменении(Элемент)
	
	ТекущийДокумент=Элемент.Значение;
	ТекущиеДанныеДокумента=ЭлементыФормы.СписокДокументов.ТекущиеДанные;
	
	Если Не ЗначениеНеЗаполнено(ТекущийДокумент) Тогда
		
		ТекущиеДанныеДокумента.Оплачено=ТекущийДокумент.Оплачено;
		ТипДокумента=ТипЗнч(ТекущийДокумент);
		
		Если ТипДокумента = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.АккредитивПереданный")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ПлатежноеТребованиеПолученное")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ИнкассовоеПоручениеПолученное") Тогда
			
			ТекущиеДанныеДокумента.ЧастичнаяОплата=ТекущийДокумент.ЧастичнаяОплата;
			
			ТекущиеДанныеДокумента.Контрагент=ТекущийДокумент.Контрагент;
			
			ТекущиеДанныеДокумента.СуммаРасход=ОпределитьОстатокПоДокументуУпр(ТекущийДокумент,"ДенежныеСредстваКСписанию","ДокументСписания");
			ТекущиеДанныеДокумента.СуммаПриход=0;
			
			ТекущиеДанныеДокумента.ЧастичнаяОплата=ТекущийДокумент.ЧастичнаяОплата;
			
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПлатежноеПоручениеВходящее")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.АккредитивПолученный")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ПлатежноеТребованиеВыставленное")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ИнкассовоеПоручениеПереданное") Тогда
			
			ТекущиеДанныеДокумента.ЧастичнаяОплата=ТекущийДокумент.ЧастичнаяОплата;
			
			ТекущиеДанныеДокумента.Контрагент=ТекущийДокумент.Контрагент;
			
			ТекущиеДанныеДокумента.СуммаПриход=ОпределитьОстатокПоДокументуУпр(ТекущийДокумент,"ДенежныеСредстваКПолучению","ДокументПолучения");
			ТекущиеДанныеДокумента.СуммаРасход=0;
			
			ТекущиеДанныеДокумента.ЧастичнаяОплата=ТекущийДокумент.ЧастичнаяОплата;
			
		ИначеЕсли ТипДокумента= Тип("ДокументСсылка.ДенежныйЧек") Тогда
			
			ТекущиеДанныеДокумента.Контрагент=Новый(Тип("СправочникСсылка.Контрагенты"));
			
			ТекущиеДанныеДокумента.СуммаРасход=ТекущийДокумент.СуммаДокумента;
			ТекущиеДанныеДокумента.СуммаПриход=0;
		
		ИначеЕсли ТипДокумента= Тип("ДокументСсылка.ОбъявлениеНаВзносНаличными") Тогда
			
			ТекущиеДанныеДокумента.Контрагент=Новый(Тип("СправочникСсылка.Контрагенты"));
			
			ТекущиеДанныеДокумента.СуммаПриход=ТекущийДокумент.СуммаДокумента;
			ТекущиеДанныеДокумента.СуммаРасход=0;
			
		ИначеЕсли ТипДокумента= Тип("ДокументСсылка.ПлатежныйОрдерПоступлениеДенежныхСредств") Тогда
			
			ТекущиеДанныеДокумента.Контрагент=ТекущийДокумент.Контрагент;
			
			ТекущиеДанныеДокумента.СуммаПриход=ТекущийДокумент.СуммаДокумента;
			ТекущиеДанныеДокумента.СуммаРасход=0;
			
		ИначеЕсли ТипДокумента= Тип("ДокументСсылка.ПлатежныйОрдерСписаниеДенежныхСредств") Тогда
			
			ТекущиеДанныеДокумента.Контрагент=ТекущийДокумент.Контрагент;
			
			ТекущиеДанныеДокумента.СуммаРасход=ТекущийДокумент.СуммаДокумента;
			ТекущиеДанныеДокумента.СуммаПриход=0;
			
		КонецЕсли;
		
	Иначе
		
		ТекущиеДанныеДокумента.Контрагент=Новый(Тип("СправочникСсылка.Контрагенты"));
		ТекущиеДанныеДокумента.СуммаПриход=0;
		ТекущиеДанныеДокумента.СуммаРасход=0;
		ТекущиеДанныеДокумента.Оплачено=Ложь;
		
	КонецЕсли;
	
	ПроверитьВозможностьЧастичнойОплатыУпр(ТекущиеДанныеДокумента);
	
	РасчетОборотов();
		
КонецПроцедуры

Процедура СписокДокументовПослеУдаления(Элемент)
	
	РасчетОборотов();
	
КонецПроцедуры

Процедура СписокДокументовПриИзмененииФлажка(Элемент, Колонка)
	
	СтрокаДокумент=ЭлементыФормы.СписокДокументов.ТекущиеДанные;
	ПроверитьВозможностьЧастичнойОплатыУпр(СтрокаДокумент);
	
	РасчетОборотов();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Организация=ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
	
	Если НЕ ЗначениеНеЗаполнено(Организация) Тогда
		СчетОрганизации=Организация.ОсновнойБанковскийСчет;
	Иначе
		СчетОрганизации=Новый(Тип("СправочникСсылка.БанковскиеСчета"));
	КонецЕсли;
	
	ДатаОплаты=РабочаяДата;
		
	ЗаполнитьВыписку();
		
КонецПроцедуры

Процедура ТолькоОплаченныеПриИзменении(Элемент)
	
	ЗаполнитьВыписку();
	
КонецПроцедуры

Процедура КоманднаяПанельЧастичнаяОплатаЧастичнаяОплата(Кнопка)
	
	Если НЕ ЭлементыФормы.СписокДокументов.ТекущиеДанные.Документ=Неопределено Тогда
		
		РасчетныйДокумент=ЭлементыФормы.СписокДокументов.ТекущиеДанные.Документ;
		
		Если РасчетныйДокумент.Метаданные().Имя ="ПлатежноеПоручениеИсходящее"
			ИЛИ РасчетныйДокумент.Метаданные().Имя ="АккредитивПереданный" 
			ИЛИ РасчетныйДокумент.Метаданные().Имя ="ИнкассовоеПоручениеПолученное"
			ИЛИ РасчетныйДокумент.Метаданные().Имя ="ПлатежноеТребованиеПолученное" Тогда
			ПлатежныйОрдер=Документы.ПлатежныйОрдерСписаниеДенежныхСредств.СоздатьДокумент();
		Иначе
			ПлатежныйОрдер=Документы.ПлатежныйОрдерПоступлениеДенежныхСредств.СоздатьДокумент();
		КонецЕсли;
		
		ПлатежныйОрдер.РасчетныйДокумент=РасчетныйДокумент;
		ПлатежныйОрдер.Ответственный = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнойОтветственный");
		ПлатежныйОрдер.ЗаполнитьПоРасчетномуДокументуУпр();
		
		ФормаОрдера=ПлатежныйОрдер.ПолучитьФорму("ФормаДокумента");
		ФормаОрдера.ОткрытьМодально();
		
		ЗаполнитьВыписку();
		
	КонецЕсли;
				
КонецПроцедуры

Процедура СписокДокументовПриАктивизацииСтроки(Элемент)
	
	Если НЕ ЭлементыФормы.СписокДокументов.ТекущиеДанные=Неопределено Тогда  
		
		СтрокаДокумент=ЭлементыФормы.СписокДокументов.ТекущиеДанные;
		ПроверитьВозможностьЧастичнойОплатыУпр(СтрокаДокумент);
		
	КонецЕсли;
				
КонецПроцедуры

Процедура СписокДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.ЧастичнаяОплата Тогда
		ОформлениеСтроки.Ячейки.ФлагОплачено.ТолькоПросмотр=Истина;
		ОформлениеСтроки.Ячейки.ФлагОплачено.ОтображатьКартинку=Истина;
		ОформлениеСтроки.Ячейки.ФлагОплачено.ИндексКартинки=0;
		ОформлениеСтроки.Ячейки.ФлагОплачено.ОтображатьФлажок=Ложь;
		ОформлениеСтроки.Ячейки.ФлагОплачено.ОтображатьТекст=Ложь;
	ИначеЕсли Найти(ДанныеСтроки.Документ,"ордер")>0 Тогда
		ОформлениеСтроки.Ячейки.ФлагОплачено.ТолькоПросмотр=Истина;
		ОформлениеСтроки.Ячейки.ФлагОплачено.ОтображатьКартинку=Ложь;
		ОформлениеСтроки.Ячейки.ФлагОплачено.ОтображатьФлажок=Истина;
	Иначе
		ОформлениеСтроки.Ячейки.ФлагОплачено.ТолькоПросмотр=Ложь;
		ОформлениеСтроки.Ячейки.ФлагОплачено.ОтображатьКартинку=Ложь;
		ОформлениеСтроки.Ячейки.ФлагОплачено.ОтображатьФлажок=Истина;
	КонецЕсли;		
			
КонецПроцедуры

Процедура СписокДокументовДокументНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ФормаРасчетныеДокументы=ЖурналыДокументов.РасчетныеДокументыБанк.ПолучитьФорму("ФормаСписка",Элемент);
	ФормаРасчетныеДокументы.РежимВыбора=Истина;
	
	ФормаРасчетныеДокументы.Отбор.Организация.Значение=Организация;
	ФормаРасчетныеДокументы.Отбор.Организация.Использование=Истина;
	
	ФормаРасчетныеДокументы.Отбор.СчетОрганизации.Значение=СчетОрганизации;
	ФормаРасчетныеДокументы.Отбор.СчетОрганизации.Использование=Истина;
	
	Если ТолькоОплаченные Тогда
		
		ФормаРасчетныеДокументы.Отбор.Оплачено.Значение=Истина;
		ФормаРасчетныеДокументы.Отбор.Оплачено.Использование=Истина;
		
		ФормаРасчетныеДокументы.Отбор.ДатаОплаты.Значение=ДатаОплаты;
		ФормаРасчетныеДокументы.Отбор.ДатаОплаты.Использование=Истина;
		
	Иначе
		
		ФормаРасчетныеДокументы.Отбор.Оплачено.Значение=Ложь;
		ФормаРасчетныеДокументы.Отбор.Оплачено.Использование=Истина;
		
		ФормаРасчетныеДокументы.Отбор.ДатаОплаты.ВидСравнения=ВидСравнения.МеньшеИлиРавно;
		ФормаРасчетныеДокументы.Отбор.ДатаОплаты.Значение=ДатаОплаты;
		ФормаРасчетныеДокументы.Отбор.ДатаОплаты.Использование=Истина;
		
	КонецЕсли;
	
	ФормаРасчетныеДокументы.Открыть();
		
КонецПроцедуры




















