
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриЗакрытии формы.
//
Процедура ПриЗакрытии()
	
	СтруктураСохраненияЗначений = Новый Структура();
	
	Если СтатусИсходящее Тогда
		СтруктураСохраненияЗначений.Вставить("СтатусИсходящее");
	КонецЕсли; 
	Если СтатусОтправленное Тогда
		СтруктураСохраненияЗначений.Вставить("СтатусОтправленное");
	КонецЕсли; 
	Если СтатусПолученное Тогда
		СтруктураСохраненияЗначений.Вставить("СтатусПолученное");
	КонецЕсли; 
	Если СтатусСохраненное Тогда
		СтруктураСохраненияЗначений.Вставить("СтатусСохраненное");
	КонецЕсли;
	Если СостояниеРассмотрено Тогда
		СтруктураСохраненияЗначений.Вставить("СостояниеРассмотрено");
	КонецЕсли; 
	Если СостояниеНеРассмотрено Тогда
		СтруктураСохраненияЗначений.Вставить("СостояниеНеРассмотрено");
	КонецЕсли;
	
	СохранитьЗначение("НастройкаПинудительнойФильтрацииПисем", СтруктураСохраненияЗначений);
	
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	СтруктураСохраненияЗначений = ВосстановитьЗначение("НастройкаПинудительнойФильтрацииПисем");
	
	Если ТипЗнч(СтруктураСохраненияЗначений) = Тип("Структура") Тогда
		СтатусИсходящее        = СтруктураСохраненияЗначений.Свойство("СтатусИсходящее");
		СтатусОтправленное     = СтруктураСохраненияЗначений.Свойство("СтатусОтправленное");
		СтатусПолученное       = СтруктураСохраненияЗначений.Свойство("СтатусПолученное");
		СтатусСохраненное      = СтруктураСохраненияЗначений.Свойство("СтатусСохраненное");
		СостояниеРассмотрено   = СтруктураСохраненияЗначений.Свойство("СостояниеРассмотрено");
		СостояниеНеРассмотрено = СтруктураСохраненияЗначений.Свойство("СостояниеНеРассмотрено");
	Иначе
		СтатусИсходящее        = Истина;
		СтатусОтправленное     = Истина;
		СтатусПолученное       = Истина;
		СтатусСохраненное      = Истина;
		СостояниеРассмотрено   = Истина;
		СостояниеНеРассмотрено = Истина;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события Нажатие кнопки ОК командной панели ОсновныеДействияФормы.
//
Процедура ОсновныеДействияФормыОК(Элемент)
	
	Запрос = Новый Запрос;
	
	Если ГруппаПисемДляОбработки.Владелец.ГруппаУдаленные = ГруппаПисемДляОбработки Тогда
		ГруппаПисемДляОбработки = Справочники.ГруппыПисемЭлектроннойПочты.ПустаяСсылка();
	Иначе
		Запрос.УстановитьПараметр("ГруппаУчетнойЗаписи", ГруппаПисемДляОбработки);
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭлектронноеПисьмо.Ссылка
	|ИЗ
	|	Документ.ЭлектронноеПисьмо КАК ЭлектронноеПисьмо
	|ГДЕ
	|	" + ?(ГруппаПисемДляОбработки.Пустая(), "ЭлектронноеПисьмо.ПометкаУдаления = ИСТИНА", "ЭлектронноеПисьмо.ГруппаУчетнойЗаписи = &ГруппаУчетнойЗаписи И ЭлектронноеПисьмо.ПометкаУдаления = ЛОЖЬ");
	
	Если НЕ СостояниеНеРассмотрено ИЛИ НЕ СостояниеРассмотрено Тогда
		Если НЕ СостояниеНеРассмотрено И НЕ СостояниеРассмотрено Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И
			|	ЭлектронноеПисьмо.НеРассмотрено = ИСТИНА И ЭлектронноеПисьмо.НеРассмотрено = ЛОЖЬ";
		Иначе
			Запрос.Текст = Запрос.Текст + "
			|	И
			|	ЭлектронноеПисьмо.НеРассмотрено = " + ?(СостояниеНеРассмотрено, "ИСТИНА", "ЛОЖЬ");
		КонецЕсли; 
	КонецЕсли; 
	
	Если НЕ СтатусИсходящее Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И
		|	ЭлектронноеПисьмо.СтатусПисьма <> &Исходящее";
		Запрос.УстановитьПараметр("Исходящее", Перечисления.СтатусыПисем.Исходящее);
	КонецЕсли; 
	
	Если НЕ СтатусОтправленное Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И
		|	ЭлектронноеПисьмо.СтатусПисьма <> &Отправленное";
		Запрос.УстановитьПараметр("Отправленное", Перечисления.СтатусыПисем.Отправленное);
	КонецЕсли; 
	
	Если НЕ СтатусПолученное Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И
		|	ЭлектронноеПисьмо.СтатусПисьма <> &Полученное";
		Запрос.УстановитьПараметр("Полученное", Перечисления.СтатусыПисем.Полученное);
	КонецЕсли; 
	
	Если НЕ СтатусСохраненное Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И
		|	ЭлектронноеПисьмо.СтатусПисьма <> &Сохраненное";
		Запрос.УстановитьПараметр("Сохраненное", Перечисления.СтатусыПисем.Сохраненное);
	КонецЕсли;
	
	ЭтаФорма.Закрыть(Запрос);
	
КонецПроцедуры

