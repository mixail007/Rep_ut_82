///////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

Процедура ОбновитьНажатие(Элемент)
	
	СформироватьЖурналРегистрации();
	
КонецПроцедуры // ОбновитьНажатие()

Функция ПрочитатьСтроку(ЧтениеXML)
	
	Если Не ЧтениеXML.Прочитать() Тогда
		ВызватьИсключение "Не удалось считать значение";
	ИначеЕсли ЧтениеXML.ТипУзла <> ТипУзлаXML.Текст Тогда
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Возврат "";
		Иначе
			ВызватьИсключение "Ожидается тип узла ""Текст""";
		КонецЕсли;
	КонецЕсли;
	
	СтрокаXML = ЧтениеXML.Значение;
	Если Не ЧтениеXML.Прочитать() Тогда
		ВызватьИсключение "Не удалось считать окончание узла";
	ИначеЕсли Не ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
		ВызватьИсключение "Ожидается тип узла ""Конец элемента""";;
	КонецЕсли;
	
	Возврат СтрокаXML;
	
КонецФункции // ПрочитатьСтроку()

Процедура СформироватьЖурналРегистрации()
	
	ЖурналРегистрации.Очистить();  
	
	Если ТекущийДокументСсылка = Неопределено или ТекущийДокументСсылка.Пустая() Тогда
		Сообщить("Не выбран документ!");
		Возврат;
	КонецЕсли;
	
	ДатаНачала = ТекущийДокументСсылка.Дата - 3888000;
	Если ДатаНачала < '20000101' Тогда
		ДатаНачала = '20000101';
	ИначеЕсли ДатаНачала > ТекущаяДата() Тогда
		ДатаНачала = ТекущаяДата();
	КонецЕсли;
	ДатаОкончания = Макс(ТекущаяДата(), ДатаНачала);
	
	Фильтр = Новый Структура("StartDate, EndDate, Metadata, Data", ДатаНачала, ДатаОкончания, ТекущийДокументСсылка.Метаданные(), ТекущийДокументСсылка);
	ИмяВыходногоФайла = ПолучитьИмяВременногоФайла("xml");
	
	Попытка
		ВыгрузитьЖурналРегистрации(ИмяВыходногоФайла, Фильтр, "Date, Level, UserName, Computer, EventPresentation, Comment");
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
		Сообщить("Не удалась выгрузить данные журнала регистрации во временный файл.");
		Возврат;
	КонецПопытки;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяВыходногоФайла);
	ЧтениеXML.Прочитать();
	Если ЧтениеXML.ЛокальноеИмя <> "EventLog" Тогда
		Сообщить("Неверный формат файла");
		Возврат;
	КонецЕсли;
	
	ТипДата = Тип("Дата");
	НачалоЭлемента = ТипУзлаXML.НачалоЭлемента;
	
	// Код в комментарии записаный в 1 строку находится ниже этого комментария
	// Для редактирования кода снимите комментарий
	// Подробнее про код в 1 строку см. http://infostart.ru/public/71130/
	//Пока ЧтениеXML.Прочитать() Цикл
	//	ЛокальноеИмя = ЧтениеXML.ЛокальноеИмя;
	//	Если ЛокальноеИмя = "Event" Тогда
	//		Если ЧтениеXML.ТипУзла = НачалоЭлемента Тогда
	//			ОбработкаПрерыванияПользователя();
	//			СтрокаИстории = ЖурналРегистрации.Добавить();
	//		КонецЕсли;
	//	ИначеЕсли ЛокальноеИмя = "Date" Тогда
	//		СтрокаИстории.Date = XMLЗначение(ТипДата, ПрочитатьСтроку(ЧтениеXML));
	//	ИначеЕсли ЛокальноеИмя <> "EventLog" Тогда
	//		СтрокаИстории[ЛокальноеИмя] = ПрочитатьСтроку(ЧтениеXML);
	//	КонецЕсли;
	//КонецЦикла;

	// Код записанный в 1 строку находится в комментарии расположенном выше
	// Для редактирования кода снимите комментарий
	// Подробнее про код в 1 строку см. http://infostart.ru/public/71130/
	Пока ЧтениеXML.Прочитать() Цикл ЛокальноеИмя = ЧтениеXML.ЛокальноеИмя; Если ЛокальноеИмя = "Event" Тогда Если ЧтениеXML.ТипУзла = НачалоЭлемента Тогда ОбработкаПрерыванияПользователя(); СтрокаИстории = ЖурналРегистрации.Добавить(); КонецЕсли; ИначеЕсли ЛокальноеИмя = "Date" Тогда СтрокаИстории.Date = XMLЗначение(ТипДата, ПрочитатьСтроку(ЧтениеXML)); ИначеЕсли ЛокальноеИмя <> "EventLog" Тогда СтрокаИстории[ЛокальноеИмя] = ПрочитатьСтроку(ЧтениеXML); КонецЕсли; КонецЦикла;
	
КонецПроцедуры // СформироватьЖурналРегистрации()

Процедура ЖурналРегистрацииПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Если ЗначениеЗаполнено(ПараметрыПеретаскивания.Значение) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЖурналРегистрацииПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(ПараметрыПеретаскивания.Значение) Тогда
		ТекущийДокументСсылка = ПараметрыПеретаскивания.Значение;
		СформироватьЖурналРегистрации();
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ МОДУЛЯ
//

Процедура ПриОткрытии()
	
	СформироватьЖурналРегистрации();

КонецПроцедуры // ПриОткрытии()

///////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//
