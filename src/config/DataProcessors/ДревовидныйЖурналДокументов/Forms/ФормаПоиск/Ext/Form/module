///////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
перем всеЗаказы, СписокДоговор; //+6
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//

Процедура КнопкаВыбораПериодаНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода = '00010101', КонецПериода, КонецДня(КонецПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	Если НастройкаПериода.Редактировать() Тогда
		НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
КонецПроцедуры // КнопкаВыбораПериодаНажатие()

Процедура УстановитьПометкиНажатие(Элемент)
	
	ВидыДокументов.ЗаполнитьПометки(Истина);
	
КонецПроцедуры // УстановитьПометкиНажатие()

Процедура СнятьПометкиНажатие(Элемент)
	
	ВидыДокументов.ЗаполнитьПометки(Ложь);
	
КонецПроцедуры // СнятьПометкиНажатие()



Процедура НайтиПоНомеруНажатие(Элемент)
	
	Если ПустаяСтрока(НомерДокумента) Тогда
		Возврат
	КонецЕсли;
	
	// Условие по номеру
	Если ПоискПоПодстроке Тогда
		Условие = "
		|ГДЕ
		|	__Документ.Номер ПОДОБНО &ПараметрПоиска";
		ПараметрПоиска = "%" + НомерДокумента + "%";
	Иначе
		Условие = "
		|ГДЕ
		|	__Документ.Номер = &ПараметрПоиска";
		ПараметрПоиска = НомерДокумента;
	КонецЕсли;
	
	// Условие по периоду
	Если НачалоПериода = '00010101' и КонецПериода = '00010101' Тогда
	ИначеЕсли НачалоПериода = '00010101' и КонецПериода <> '00010101' Тогда
		Условие = Условие + "
		|		И __Документ.Дата <= &КонецПериода"
	ИначеЕсли НачалоПериода = '00010101' и КонецПериода <> '00010101' Тогда
		Условие = Условие + "
		|		И __Документ.Дата >= &НачалоПериода"
	Иначе
		Условие = Условие + "
		|		И __Документ.Дата МЕЖДУ &НачалоПериода И &КонецПериода"
	КонецЕсли;
	
	//+6
	Если не ВсеЗаказы тогда
			Условие = Условие + "
		|		И __Документ.ДоговорКонтрагента в (&СписокДоговор)";
	КонецЕсли;

	
	// Соберем запрос
	ТекстЗапроса = "";
	МетаданныеДокументы = Метаданные.Документы;
	Для каждого ЭлементСписка Из ВидыДокументов Цикл
		Если ЭлементСписка.Пометка Тогда
			ИмяДокумента = ЭлементСписка.Значение;
			Попытка МетаданныеДокумента = МетаданныеДокументы[ИмяДокумента] Исключение Продолжить КонецПопытки;
			
			Если МетаданныеДокумента.ДлинаНомера = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ТекстЗапроса = ?(ПустаяСтрока(ТекстЗапроса), "ВЫБРАТЬ РАЗРЕШЕННЫЕ ", ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ") + "
			|	__Документ.Ссылка
			|ИЗ
			|	Документ." + ИмяДокумента + " КАК __Документ " + Условие + "
			|";
		КонецЕсли;
	КонецЦикла;
	
	// Заполним список найденных
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ПараметрПоиска", ПараметрПоиска);
	
	//+6
	Если не ВсеЗаказы тогда
		Запрос.УстановитьПараметр("СписокДоговор",СписокДоговор);
	КонецЕсли;
	
	СписокНайдено.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0));
	
	Если СписокНайдено.Количество() Тогда
		ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.СписокНайдено;
		ЭлементыФормы.СписокНайдено.ТекущаяСтрока = СписокНайдено[0];
	КонецЕсли;
			
КонецПроцедуры // НайтиПоНомеруНажатие()

Процедура НайтиПоСсылкеНажатие(Элемент)
	Перем ТекстЗапроса;
	
	МетаданныеСсылки = СсылкаДляПоиска.Метаданные().Имя;
	Если Метаданные.Справочники.Найти(МетаданныеСсылки) <> Неопределено Тогда
		ВидСсылки = "Справочник." + МетаданныеСсылки;
	ИначеЕсли Метаданные.Документы.Найти(МетаданныеСсылки) <> Неопределено Тогда
		ВидСсылки = "Документ." + МетаданныеСсылки;
	ИначеЕсли Метаданные.Перечисления.Найти(МетаданныеСсылки) <> Неопределено Тогда
		ВидСсылки = "Перечисление." + МетаданныеСсылки;
	ИначеЕсли Метаданные.ПланыСчетов.Найти(МетаданныеСсылки) <> Неопределено Тогда
		ВидСсылки = "ПланСчетов." + МетаданныеСсылки;
	ИначеЕсли Метаданные.ПланыОбмена.Найти(МетаданныеСсылки) <> Неопределено Тогда
		ВидСсылки = "ПланОбмена." + МетаданныеСсылки;
	ИначеЕсли Метаданные.ПланыВидовРасчета.Найти(МетаданныеСсылки) <> Неопределено Тогда
		ВидСсылки = "ПланВидовРасчета." + МетаданныеСсылки;
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Найти(МетаданныеСсылки) <> Неопределено Тогда
		ВидСсылки = "ПланВидовХарактеристик." + МетаданныеСсылки;
	Иначе
		Сообщить("Поиск по данному типу данных не поддерживается");
		Возврат;
	КонецЕсли;
	
	// Условие по периоду
	Если НачалоПериода = '00010101' и КонецПериода = '00010101' Тогда
		Условие = "";
	ИначеЕсли НачалоПериода = '00010101' и КонецПериода <> '00010101' Тогда
		Условие = ".Дата <= &КонецПериода"
	ИначеЕсли НачалоПериода = '00010101' и КонецПериода <> '00010101' Тогда
		Условие = ".Дата >= &НачалоПериода"
	Иначе
		Условие = ".Дата МЕЖДУ &НачалоПериода И &КонецПериода"
	КонецЕсли;
	
	// Первый фильтр. Проверка на используемые документы, попадающие под условие
	ТекстЗапроса = "";
	ТипСсылки = ТипЗнч(СсылкаДляПоиска);
	МетаданныеДокументы = Метаданные.Документы;
	Для каждого ЭлементСписка Из ВидыДокументов Цикл Если ЭлементСписка.Пометка Тогда ИмяДокумента = ЭлементСписка.Значение; Документ = МетаданныеДокументы[ИмяДокумента]; Если НЕ ПравоДоступа("Чтение", Документ) Тогда Продолжить КонецЕсли; Для Каждого Реквизит ИЗ Документ.Реквизиты Цикл Если Реквизит.Тип.СодержитТип(ТипСсылки) Тогда ТекстЗапроса = ?(ТекстЗапроса = "", "", ТекстЗапроса + " ОБЪЕДИНИТЬ ВСЕ ") + "ВЫБРАТЬ ПЕРВЫЕ 1 """ + ИмяДокумента + """ КАК ИмяДокумента, """" КАК ИмяТабличнойЧасти ИЗ Документ." + ИмяДокумента + " КАК __Документ"; Прервать КонецЕсли КонецЦикла; Для Каждого ТабличнаяЧасть ИЗ Документ.ТабличныеЧасти Цикл ИмяТабличнойЧасти = ТабличнаяЧасть.Имя; Для Каждого Реквизит ИЗ ТабличнаяЧасть.Реквизиты Цикл Если Реквизит.Тип.СодержитТип(ТипСсылки) Тогда ТекстЗапроса = ?(ТекстЗапроса = "", "", ТекстЗапроса + " ОБЪЕДИНИТЬ ВСЕ ") + "ВЫБРАТЬ ПЕРВЫЕ 1 """ + ИмяДокумента + """ КАК ИмяДокумента, """ + ИмяТабличнойЧасти + """ КАК ИмяТабличнойЧасти ИЗ Документ." + ИмяДокумента + "." + ИмяТабличнойЧасти + " КАК __Документ"; Прервать КонецЕсли КонецЦикла КонецЦикла КонецЕсли КонецЦикла;
	
	Если ТекстЗапроса = "" Тогда
		Сообщить("Выбранные в журнале документы не содержат такой тип данных");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Второй фильтр. Проверка на реквизиты в которых могут быть ссылки
	ТекстЗапроса = "";
	//Пока Выборка.Следующий() Цикл
	//	ИмяДокумента = Выборка.ИмяДокумента;
	//	Документ = МетаданныеДокументы[ИмяДокумента];
	//	Если Выборка.ИмяТабличнойЧасти = "" Тогда
	//		Для Каждого Реквизит ИЗ Документ.Реквизиты Цикл
	//			ИмяРеквизита = Реквизит.Имя;
	//			Если Реквизит.Тип.СодержитТип(ТипСсылки) Тогда
	//				ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "ВЫБРАТЬ ", " ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ") + "ВЫРАЗИТЬ(__Документ." + ИмяРеквизита + " КАК " + ВидСсылки + ") КАК СсылкаДляСоединения, __Документ.Ссылка ИЗ Документ." + ИмяДокумента + " КАК __Документ ГДЕ __Документ." + ИмяРеквизита + " = &ЗначениеКритерияОтбора " + ?(Условие = "", "", " И __Документ" + Условие);
	//			КонецЕсли;
	//		КонецЦикла;
	//	Иначе
	//		ИмяТабличнойЧасти = Выборка.ИмяТабличнойЧасти;
	//		ТабличнаяЧасть = Документ.ТабличныеЧасти[ИмяТабличнойЧасти];
	//		Для Каждого Реквизит ИЗ ТабличнаяЧасть.Реквизиты Цикл
	//			ИмяРеквизита = Реквизит.Имя;
	//			Если Реквизит.Тип.СодержитТип(ТипСсылки) Тогда
	//				ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "ВЫБРАТЬ РАЗЛИЧНЫЕ ", " ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ РАЗЛИЧНЫЕ ") + "ВЫРАЗИТЬ(__Документ." + ИмяРеквизита + " КАК " + ВидСсылки + ") КАК СсылкаДляСоединения, __Документ.Ссылка ИЗ Документ." + ИмяДокумента + "." + ИмяТабличнойЧасти + " КАК __Документ ГДЕ __Документ." + ИмяРеквизита + " = &ЗначениеКритерияОтбора " + ?(Условие = "", "", " И __Документ.Ссылка" + Условие);
	//			КонецЕсли;
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЦикла;

	Пока Выборка.Следующий() Цикл ИмяДокумента = Выборка.ИмяДокумента; Документ = МетаданныеДокументы[ИмяДокумента]; Если Выборка.ИмяТабличнойЧасти = "" Тогда Для Каждого Реквизит ИЗ Документ.Реквизиты Цикл ИмяРеквизита = Реквизит.Имя; Если Реквизит.Тип.СодержитТип(ТипСсылки) Тогда ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "ВЫБРАТЬ ", " ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ") + "ВЫРАЗИТЬ(__Документ." + ИмяРеквизита + " КАК " + ВидСсылки + ") КАК СсылкаДляСоединения, __Документ.Ссылка ИЗ Документ." + ИмяДокумента + " КАК __Документ ГДЕ __Документ." + ИмяРеквизита + " = &ЗначениеКритерияОтбора " + ?(Условие = "", "", " И __Документ" + Условие); КонецЕсли; КонецЦикла; Иначе ИмяТабличнойЧасти = Выборка.ИмяТабличнойЧасти; ТабличнаяЧасть = Документ.ТабличныеЧасти[ИмяТабличнойЧасти]; Для Каждого Реквизит ИЗ ТабличнаяЧасть.Реквизиты Цикл ИмяРеквизита = Реквизит.Имя; Если Реквизит.Тип.СодержитТип(ТипСсылки) Тогда ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "ВЫБРАТЬ РАЗЛИЧНЫЕ ", " ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ РАЗЛИЧНЫЕ ") + "ВЫРАЗИТЬ(__Документ." + ИмяРеквизита + " КАК " + ВидСсылки + ") КАК СсылкаДляСоединения, __Документ.Ссылка ИЗ Документ." + ИмяДокумента + "." + ИмяТабличнойЧасти + " КАК __Документ ГДЕ __Документ." + ИмяРеквизита + " = &ЗначениеКритерияОтбора " + ?(Условие = "", "", " И __Документ.Ссылка" + Условие); КонецЕсли; КонецЦикла; КонецЕсли; КонецЦикла; 
	
	Если ТекстЗапроса = "" Тогда
		Сообщить("Выбранные в журнале документы не содержат такой тип данных");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", СсылкаДляПоиска);
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	ТаблицаЗначений.Свернуть("Ссылка");
	СписокНайдено.ЗагрузитьЗначения(ТаблицаЗначений.ВыгрузитьКолонку(0));
	
	Если ТаблицаЗначений.Количество() = 0 Тогда
		Сообщить("Документы не найдены");
	КонецЕсли;
	
КонецПроцедуры // НайтиПоСсылкеНажатие()

Процедура НайтиПолнотекстовыйНажатие(Элемент)

	Если ПустаяСтрока(ТекстПоиска) Тогда 
		Возврат;
	КонецЕсли;
	
	МассивОбластьПоиска = Новый Массив;
	МетаданныеДокументы = Метаданные.Документы;
	Для каждого ЭлементСписка Из ВидыДокументов Цикл 
		Если ЭлементСписка.Пометка Тогда ИмяДокумента = ЭлементСписка.Значение; 
			Попытка МетаданныеДокумента = МетаданныеДокументы[ИмяДокумента] 
			Исключение Продолжить КонецПопытки; 
			МассивОбластьПоиска.Добавить(МетаданныеДокумента) 
		КонецЕсли 
	КонецЦикла;
	
	Если МассивОбластьПоиска.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПоиска = ПолнотекстовыйПоиск.СоздатьСписок("", 10);
	СписокПоиска.ПолучатьОписание = Ложь;
	СписокПоиска.ОбластьПоиска = МассивОбластьПоиска;
	
	Если ПрименитьНечеткийПоиск Тогда
		СписокПоиска.ПорогНечеткости = Нечеткость;
	Иначе	
		СписокПоиска.ПорогНечеткости = 0;
	КонецЕсли;
	
	СписокПоиска.СтрокаПоиска = СокрЛП(ТекстПоиска);
	СписокПоиска.ПерваяЧасть();
	ПолноеКоличество = СписокПоиска.ПолноеКоличество();
	Пока ПолноеКоличество > 0 Цикл Для Индекс = 0 По СписокПоиска.Количество() - 1 Цикл СписокНайдено.Добавить(СписокПоиска.Получить(Индекс).Значение) КонецЦикла; Если ПолноеКоличество - СписокПоиска.НачальнаяПозиция() > СписокПоиска.Количество() Тогда СписокПоиска.СледующаяЧасть() Иначе Прервать КонецЕсли КонецЦикла;
	
КонецПроцедуры // НайтиПолнотекстовыйНажатие()



Процедура СписокНайденоВыбор(Элемент, ЭлементСписка)
	
	ТекущаяСтрока = ЭлементыФормы.СписокНайдено.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Закрыть(ТекущаяСтрока.Значение);
	
КонецПроцедуры // СписокНайденоВыбор()

Процедура ОсновныеДействияФормыВыбрать(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.СписокНайдено.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Закрыть(ТекущаяСтрока.Значение);
	
КонецПроцедуры // ОсновныеДействияФормыВыбрать()

Процедура ОсновныеДействияФормыОтбор(Кнопка)
	
	Если СписокНайдено.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Закрыть(СписокНайдено);
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ МОДУЛЯ
//

// Процедура - обработчик события "ОбработкаОповещения" формы
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗавершитьРаботуСистемы" Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаОповещения()

Процедура ПриОткрытии()
	ЭлементыФормы.ПоискПоПодстроке.Значение = истина; //+++ включена
	
	всеЗаказы = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОтображатьВсеЗаказы");//+6 ++(
    Если не всеЗаказы тогда
		списокПользователей = новый СписокЗначений;
			Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") 
				и ЗначениеЗаполнено(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов")) тогда 
				Группа = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов");
				для каждого Стр из Группа.ПользователиГруппы цикл
				    списокПользователей.Добавить(стр.Пользователь);
				КонецЦикла;		
			иначе	
				списокПользователей.Добавить(глТекущийПользователь);
			КонецЕсли;
			СписокДоговор = ПолучитьСписокДоговоровМенеджера(списокПользователей);
		КонецЕсли;//+++)
		
			
	Если ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Запретить Тогда
		ЭлементыФормы.ПанельВариантовПоиска.Страницы.Полнотекстовый.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//
