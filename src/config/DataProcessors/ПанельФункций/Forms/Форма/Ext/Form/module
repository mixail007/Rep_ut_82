////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ

Перем мСоответствиеСтраниц;
Перем мСоответствиеКартинокСтраниц;
Перем мТекущаяСтраница;
Перем ВсегоСтраниц;
Перем мСоответствиеМакетов;
Перем мДействиеПерехода;
Перем мДобавленныеСтраницы;
Перем мСоответствиеИстории;
Перем мТекущийУзел;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ

Процедура УстановитьДоступностьКнопокИстории()

	СчетчикИстории    = мСоответствиеИстории["Счетчик"];
	КоличествоИстории = мСоответствиеИстории["Количество"];

	ЭлементыФормы.КоманднаяПанельНавигации.Кнопки.ПерейтиВперед.Доступность = (СчетчикИстории < КоличествоИстории);
	ЭлементыФормы.КоманднаяПанельНавигации.Кнопки.ПерейтиНазад.Доступность  = (СчетчикИстории > 1);

КонецПроцедуры

Процедура ЗаписатьВИсторию()

	СчетчикИстории         = мСоответствиеИстории["Счетчик"];
	ТекущаяСтраницаИстории = мСоответствиеИстории[СчетчикИстории];

	Если ТекущаяСтраницаИстории <> мТекущаяСтраница Тогда

		СчетчикИстории = СчетчикИстории + 1;

		мСоответствиеИстории.Вставить("Счетчик",      СчетчикИстории);
		мСоответствиеИстории.Вставить("Количество",   СчетчикИстории);
		мСоответствиеИстории.Вставить(СчетчикИстории, мТекущаяСтраница);

	КонецЕсли;

	УстановитьДоступностьКнопокИстории();

КонецПроцедуры

Функция ПолучитьТекстМакета(ИмяСтраницы)

	ТекстМакета = мСоответствиеМакетов[ИмяСтраницы];

	Если ТекстМакета = Неопределено Тогда 
		Предупреждение("Не найдена страница: " + мСоответствиеСтраниц[ИмяСтраницы]);
		Возврат "";
	КонецЕсли;

	Если ПоказыватьОписания Тогда
		ТекстМакета = СтрЗаменить(ТекстМакета, "<!--", "");
		ТекстМакета = СтрЗаменить(ТекстМакета, "-->", "");
	КонецЕсли;

	Возврат ТекстМакета;

КонецФункции // ПолучитьТекстМакета()

Процедура ВыполнитьУстановкуТекущейСтраницы()

	ЭлементыФормы.ПолеHTMLДокумента.УстановитьТекст(ПолучитьТекстМакета(мТекущаяСтраница));

	ЭтаФорма.Заголовок = "Панель функций: " + мСоответствиеСтраниц[мТекущаяСтраница];

КонецПроцедуры // ВыполнитьУстановкуТекущейСтраницы()

/// ОБРАБОТКА HTML

Процедура ДобавитьПунктВHTML(ТекстТекущейСтраницы, Содержание, УровеньСодержания, ТагВыполнить, ТагПерейти, ИмяКартинки)

	ВставлятьСсылку = Ложь;
	ТекстСсылки     = "";

	Если НЕ ПустаяСтрока(ТагВыполнить) Тогда
		ВставлятьСсылку = Истина;
		Если Найти(ТагВыполнить, "ПолучитьОбщуюФорму=") = 0 Тогда
			ТекстСсылки = ТекстСсылки + "Выполнить=";
		КонецЕсли;

		ТекстСсылки = ТекстСсылки + СтрЗаменить(ТагВыполнить, """", "&quot");

	КонецЕсли;

	Если НЕ ПустаяСтрока(ТагПерейти) Тогда
		ВставлятьСсылку = Истина;
		ТекстСсылки = ТекстСсылки + "Перейти=" + СформироватьИмяСтраницы(ТагПерейти);
	КонецЕсли;

	ТекстТекущейСтраницы = ТекстТекущейСтраницы + "<DIV class=""Item" + УровеньСодержания + """>";

	Если ВставлятьСсылку Тогда
		ТекстТекущейСтраницы = ТекстТекущейСтраницы + "<A title="""" href=""" + ТекстСсылки + """>";
	КонецЕсли;

	Если НЕ ПустаяСтрока(ИмяКартинки) Тогда
		ТекстТекущейСтраницы = ТекстТекущейСтраницы + "<IMG border=""0"" align=top src=""" + ЭлементыФормы.ПолеHTMLДокумента.ПолучитьURL(Метаданные.ОбщиеКартинки[ИмяКартинки]) + """>";
	КонецЕсли;

	ТекстТекущейСтраницы = ТекстТекущейСтраницы + "<FONT size=" + ?(УровеньСодержания = 0, 3, 2) + " color=""#000000"">" + Содержание + "</FONT>" + Символы.ПС;

	//Если  УровеньСодержания = 0 Тогда
	//	ДобавитьЛиниюВHTML(ТекстТекущейСтраницы);
	//КонецЕсли;

	Если ВставлятьСсылку Тогда
		ТекстТекущейСтраницы = ТекстТекущейСтраницы + "</A>"
	КонецЕсли;

	ТекстТекущейСтраницы = ТекстТекущейСтраницы + "</DIV>";

КонецПроцедуры

Процедура ДобавитьПояснениеВHTML(ТекстТекущейСтраницы, Пояснение)

	Если НЕ ПустаяСтрока(Пояснение) Тогда
		ТекстТекущейСтраницы = ТекстТекущейСтраницы + "<!--<DIV class=""Description""><FONT color=#000000 size=2>" + Пояснение + "</FONT></DIV>-->" + Символы.ПС;
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьЗаголовокВHTML(ТекстТекущейСтраницы, ТекстЗаголовка, КартинкаЗаголовка = "")

	ВыводитьЗаголовок = (НЕ ПустаяСтрока(КартинкаЗаголовка)) ИЛИ (НЕ ПустаяСтрока(ТекстЗаголовка));

	Если ВыводитьЗаголовок Тогда
		ТекстТекущейСтраницы = ТекстТекущейСтраницы + "<DIV top=0 class=""Paragraf"">";
	КонецЕсли;

	Если НЕ ПустаяСтрока(КартинкаЗаголовка) Тогда
		ТекстТекущейСтраницы = ТекстТекущейСтраницы + "<IMG border=""0""  align=top src=""" + ЭлементыФормы.ПолеHTMLДокумента.ПолучитьURL(Метаданные.ОбщиеКартинки[КартинкаЗаголовка]) + """>";
	КонецЕсли;

	Если НЕ ПустаяСтрока(ТекстЗаголовка) Тогда
		ТекстТекущейСтраницы = ТекстТекущейСтраницы + "<FONT size=4 color=""#333399""> <STRONG>" + ТекстЗаголовка + "</STRONG> </FONT> <hr size=""1"" noshade color=""#333399"">";
	КонецЕсли;

	Если ВыводитьЗаголовок Тогда
		ТекстТекущейСтраницы = ТекстТекущейСтраницы + "</DIV>" + Символы.ПС;
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьЛиниюВHTML(ТекстТекущейСтраницы)

	ТекстТекущейСтраницы = ТекстТекущейСтраницы + "<hr size=""1"" noshade color=""#000000"">" + Символы.ПС; 

КонецПроцедуры

Функция ЗаголовокСтраницы()

	Возврат "
	|<HTML>
	|<HEAD>  
	|<META http-equiv=Content-Type content=""text/html; charset=utf-8"">
	|<META content=""MSHTML 6.00.2800.1400"" name=GENERATOR>
	|<STYLE type=text/css>.Paragraf {
	|MARGIN-TOP: 0px; FONT-WEIGHT: bold; MARGIN-BOTTOM: 0px; MARGIN-RIGHT: 0px; FONT-FAMILY: Tahoma, Verdana, ""MS Sans Serif"", Arial, sans-serif
	|}
	|.Item0 {
	|MARGIN-TOP: 10px; FONT-WEIGHT: bold; MARGIN-BOTTOM: 4px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 0px; FONT-FAMILY: Tahoma, Verdana, ""MS Sans Serif"", Arial, sans-serif
	|}
	|.Item1 {
	|MARGIN-TOP: 10px; MARGIN-BOTTOM: 4px; MARGIN-LEFT: 8px; MARGIN-RIGHT: 0px; FONT-FAMILY: Tahoma, Verdana, ""MS Sans Serif"", Arial, sans-serif
	|}
	|.Item2 {
	|MARGIN-TOP: 10px; MARGIN-BOTTOM: 4px; MARGIN-LEFT: 10px; MARGIN-RIGHT: 0px; FONT-FAMILY: Tahoma, Verdana, ""MS Sans Serif"", Arial, sans-serif
	|}
	|.Description {
	|MARGIN-TOP: 4px; MARGIN-BOTTOM: 4px; MARGIN-LEFT: 16px; MARGIN-RIGHT: 0px; FONT-FAMILY: Tahoma, Verdana, ""MS Sans Serif"", Arial, sans-serif; TEXT-ALIGN: justify;
	|}
	|</STYLE>
	|</HEAD>
	|<BODY  bgColor=#ffffff> 
	|";

КонецФункции // ЗаголовокСтраницы()

Функция ЗавершениеСтраницы()

	Возврат "</BODY></HTML>" + Символы.ПС;

КонецФункции

Функция СформироватьИмяСтраницы(НазваниеТекущейСтраницы)

	Возврат СтрЗаменить(СтрЗаменить(СтрЗаменить(НазваниеТекущейСтраницы, " ", "_"), ".", "_"), ",", "_");

КонецФункции

Функция ПрочитатьЭлементXML(ОбъектДоступаXML, ИмяЭлемента = Неопределено)
	
	Пока ОбъектДоступаXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Цикл // тип узла = начало элемента
		Если НЕ ОбъектДоступаXML.Прочитать() Тогда // должен прочитаться узел
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	Если ИмяЭлемента <> Неопределено Тогда // если определили имя элемента, нужно чтобы совпадало с полученным
		Если ОбъектДоступаXML.Имя <> ИмяЭлемента Тогда
			Сообщить("Неправильное имя узла (" + ИмяЭлемента + ")!"); 
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	мТекущийУзел = ОбъектДоступаXML.Имя;
	
	СоответствиеАтрибутов = Новый Соответствие();
	Пока ОбъектДоступаXML.ПрочитатьАтрибут() Цикл
		СоответствиеАтрибутов.Вставить(ОбъектДоступаXML.Имя, ОбъектДоступаXML.Значение);
	КонецЦикла;
	
	Возврат СоответствиеАтрибутов;

КонецФункции

Процедура ПодготовитьКонтекстСтраниц()

	мСоответствиеСтраниц         = Новый Соответствие;
	мСоответствиеКартинокСтраниц = Новый Соответствие;
	мСоответствиеМакетов         = Новый Соответствие;

	КоллекцияПереходов   = ЭлементыФормы.КоманднаяПанельНавигации.Кнопки.Разделы.Кнопки;
	мДобавленныеСтраницы = Новый Соответствие;

	МакетКонтекста = ПолучитьМакет("Контекст");
	КоличествоСтрокВМакете = МакетКонтекста.КоличествоСтрок();

//******************************************

	ОбъектХраненияДанныхПанели = Новый ЧтениеXML();
	ОбъектХраненияДанныхПанели.УстановитьСтроку(МакетКонтекста.ПолучитьТекст());
	
	СоответствиеАтрибутов = ПрочитатьЭлементXML(ОбъектХраненияДанныхПанели, "ПанельФункций");
	
	Если СоответствиеАтрибутов = Неопределено Тогда
		Предупреждение("Ошибка в исходном макете панели функций, работа панели функций не может быть продолжена!");
		Закрыть();
		Возврат;
	КонецЕсли;
	
	СоответствиеАтрибутов = ПрочитатьЭлементXML(ОбъектХраненияДанныхПанели, "СтраницаПанели");

	Пока СоответствиеАтрибутов <> Неопределено Цикл
		
		ПрочиталиСледующуюСтраницу = Ложь;
		ИмяСтраницы = СоответствиеАтрибутов["ИмяСтраницы"];
		Если НЕ ПустаяСтрока(ИмяСтраницы) Тогда 
			
			ЗаголовокСтраницы = СоответствиеАтрибутов["ЗаголовокСтраницы"];
			Если НЕ ПустаяСтрока(ЗаголовокСтраницы) Тогда
				
				КартинкаСтраницы = СоответствиеАтрибутов["КартинкаСтраницы"];
				ТекстТекущейСтраницы = "";
				ДобавитьЗаголовокВHTML(ТекстТекущейСтраницы, ЗаголовокСтраницы);

				СоответствиеАтрибутов = ПрочитатьЭлементXML(ОбъектХраненияДанныхПанели);
				
				Пока (СоответствиеАтрибутов <> Неопределено) И (мТекущийУзел = "ПунктПанели") Цикл
					Содержание   = СоответствиеАтрибутов["ЗаголовокПункта"];
					ТагВыполнить = СоответствиеАтрибутов["ВыполнитьВПункте"];
					ТагПерейти   = СоответствиеАтрибутов["ПерейтиВПункте"];
					Пояснение    = СоответствиеАтрибутов["ОписаниеПункта"];
					ИмяКартинки  = СоответствиеАтрибутов["Картинка"];
					Подраздел    = (СоответствиеАтрибутов["Подраздел"] = "Истина");
					
					ДобавитьПунктВHTML(ТекстТекущейСтраницы, Содержание, ?(Подраздел, 0, 1), ТагВыполнить, ТагПерейти, ИмяКартинки);
					ДобавитьПояснениеВHTML(ТекстТекущейСтраницы, Пояснение);
					
					СоответствиеАтрибутов = ПрочитатьЭлементXML(ОбъектХраненияДанныхПанели);
					
				КонецЦикла;
				
				ДобавитьМакетСтраницы(ЗаголовокСтраницы, ИмяСтраницы, ТекстТекущейСтраницы, КартинкаСтраницы, КоллекцияПереходов);
				
				Если СоответствиеАтрибутов = Неопределено Тогда
					Возврат;
				КонецЕсли;
				
				Если (СоответствиеАтрибутов <> Неопределено) И (мТекущийУзел = "СтраницаПанели") Тогда
					ПрочиталиСледующуюСтраницу = Истина;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ПрочиталиСледующуюСтраницу Тогда
			СоответствиеАтрибутов = ПрочитатьЭлементXML(ОбъектХраненияДанныхПанели, "СтраницаПанели");
		КонецЕсли;
		
	КонецЦикла;

///*****************************************
	//
	//
	//НазваниеТекущейСтраницы    = "";
	//ИмяТекущейСтраницы         = "";
	//ТекстТекущейСтраницы       = "";
	//ИмяКартинкиТекущейСтраницы = "";

	//Для Сч = 1 По КоличествоСтрокВМакете Цикл

	//	Буфер = МакетКонтекста.ПолучитьСтроку(Сч);
	//	
	//	// Получаем очередную строку в обработку
	//	ТагСтруктуры = СокрЛП(МакетКонтекста.Область(Сч, 1, Сч, 1).Текст);
	//	ИмяКартинки  = СокрЛП(МакетКонтекста.Область(Сч, 2, Сч, 2).Текст);
	//	Содержание1  = СокрЛП(МакетКонтекста.Область(Сч, 3, Сч, 3).Текст);
	//	Содержание2  = СокрЛП(МакетКонтекста.Область(Сч, 4, Сч, 4).Текст);
	//	Содержание3  = СокрЛП(МакетКонтекста.Область(Сч, 5, Сч, 5).Текст);
	//	Пояснение    = СокрЛП(МакетКонтекста.Область(Сч, 6, Сч, 6).Текст);
	//	ТагВыполнить = СокрЛП(МакетКонтекста.Область(Сч, 7, Сч, 7).Текст);
	//	ТагПерейти   = СокрЛП(МакетКонтекста.Область(Сч, 8, Сч, 8).Текст);

	//	УровеньСодержания = 2;
	//	Содержание        = Содержание3;

	//	Если НЕ ПустаяСтрока(Содержание2) Тогда
	//		УровеньСодержания = 1;
	//		Содержание        = Содержание2;

	//	КонецЕсли;

	//	Если НЕ ПустаяСтрока(Содержание1) Тогда
	//		УровеньСодержания = 0;
	//		Содержание        = Содержание1;

	//	КонецЕсли;

	//	// Анализируем таг структуры

	//	Если ТагСтруктуры = "Корень" Тогда
	//		// Описание контекста в целом 
	//		// пока не обрабатываем

	//	ИначеЕсли ТагСтруктуры = "Линия" Тогда
	//		ДобавитьЛиниюВHTML(ТекстТекущейСтраницы);

	//	ИначеЕсли ТагСтруктуры = "Страница" Тогда
	//		// Новая Страница
	//		// Страницы с пустым названием не обрабатываем
	//		Если ПустаяСтрока(Содержание) Тогда
	//			Сообщить("Обнаружена страница с пустым названием! Строка " + Сч);
	//			Продолжить;
	//		КонецЕсли;

	//		ДобавитьМакетСтраницы(НазваниеТекущейСтраницы, ИмяТекущейСтраницы, ТекстТекущейСтраницы, ИмяКартинкиТекущейСтраницы, КоллекцияПереходов);

	//		НазваниеТекущейСтраницы    = Содержание;
	//		ИмяТекущейСтраницы         = СформироватьИмяСтраницы(НазваниеТекущейСтраницы);
	//		ИмяКартинкиТекущейСтраницы = ИмяКартинки;
	//		ТекстТекущейСтраницы       = "";

	//		ДобавитьЗаголовокВHTML(ТекстТекущейСтраницы, НазваниеТекущейСтраницы);

	//	Иначе
	//		// пункт содержимого
	//		ДобавитьПунктВHTML(ТекстТекущейСтраницы, Содержание, УровеньСодержания, ТагВыполнить, ТагПерейти, ИмяКартинки);
	//		ДобавитьПояснениеВHTML(ТекстТекущейСтраницы, Пояснение);

	//	КонецЕсли;

	//КонецЦикла;

	//Если НЕ ПустаяСтрока(ТекстТекущейСтраницы) Тогда
	//	ДобавитьМакетСтраницы(НазваниеТекущейСтраницы, ИмяТекущейСтраницы, ТекстТекущейСтраницы, ИмяКартинкиТекущейСтраницы, КоллекцияПереходов);
	//КонецЕсли;

КонецПроцедуры

Процедура ДобавитьМакетСтраницы(НазваниеТекущейСтраницы, ИмяТекущейСтраницы, ТекстТекущейСтраницы, ИмяКартинкиТекущейСтраницы, КоллекцияПереходов)

	// Если уже формировали страницу, запишем её в соответствие
	Если НЕ ПустаяСтрока(НазваниеТекущейСтраницы) Тогда

		Если мДобавленныеСтраницы[ИмяТекущейСтраницы] = Истина Тогда
			Сообщить("Страница " + НазваниеТекущейСтраницы + "(" + ИмяТекущейСтраницы + ") не может быть добавлена, так как уже есть страница с таким именем!");

		Иначе
			мСоответствиеМакетов.Вставить(ИмяТекущейСтраницы, ЗаголовокСтраницы() + Символы.ПС + ТекстТекущейСтраницы + ЗавершениеСтраницы());
			мСоответствиеСтраниц.Вставить(ИмяТекущейСтраницы, НазваниеТекущейСтраницы);
			мСоответствиеКартинокСтраниц.Вставить(ИмяТекущейСтраницы, ИмяКартинкиТекущейСтраницы);
			мДобавленныеСтраницы.Вставить(ИмяТекущейСтраницы, Истина);

			КнопкаПерехода = КоллекцияПереходов.Добавить(ИмяТекущейСтраницы, ТипКнопкиКоманднойПанели.Действие, НазваниеТекущейСтраницы, мДействиеПерехода);

			Если НЕ ПустаяСтрока(ИмяКартинкиТекущейСтраницы) Тогда
				КнопкаПерехода.Картинка = БиблиотекаКартинок[ИмяКартинкиТекущейСтраницы];
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	мСоответствиеИстории = Новый Соответствие;
	мСоответствиеИстории.Вставить("Счетчик", 0);
	мСоответствиеИстории.Вставить("Количество", 0);

	УстановитьДоступностьКнопокИстории();
	ПодготовитьКонтекстСтраниц();

	ЭлементыФормы.КоманднаяПанельНастройка.Кнопки.Настройка.Кнопки.Описания.Пометка = Ложь;

	мТекущаяСтраница = ВосстановитьЗначение("ПанельФункций.ТекущаяСтраница");
	Если НЕ ТипЗнч(мТекущаяСтраница) = Тип("Строка") Тогда
		мТекущаяСтраница = "Содержание";
	КонецЕсли;

	Если мДобавленныеСтраницы[мТекущаяСтраница] <> Истина Тогда
		мТекущаяСтраница = "Содержание";
	КонецЕсли;

	мОткрыватьПриЗапуске = ВосстановитьЗначение("ПанельФункций.ОткрыватьПриЗапуске");

	Если НЕ ТипЗнч(мОткрыватьПриЗапуске) = Тип("Булево") Тогда
		ОткрыватьПриЗапуске = Истина;
	Иначе
		ОткрыватьПриЗапуске = мОткрыватьПриЗапуске;
	КонецЕсли;

	ЭлементыФормы.КоманднаяПанельНастройка.Кнопки.Настройка.Кнопки.ОткрыватьПриЗапуске.Пометка = ОткрыватьПриЗапуске;

	мПоказыватьОписания = ВосстановитьЗначение("ПанельФункций.Описания");

	Если НЕ ТипЗнч(мПоказыватьОписания) = Тип("Булево") Тогда
		ПоказыватьОписания = Истина;
	Иначе
		ПоказыватьОписания = мПоказыватьОписания;
	КонецЕсли;

	ЭлементыФормы.КоманднаяПанельНастройка.Кнопки.Настройка.Кнопки.Описания.Пометка = ПоказыватьОписания;

	ВыполнитьУстановкуТекущейСтраницы();
	ЗаписатьВИсторию();

КонецПроцедуры //ПриОткрытии()

Процедура ПриЗакрытии()

	СохранитьЗначение("ПанельФункций.ТекущаяСтраница",     мТекущаяСтраница);
	СохранитьЗначение("ПанельФункций.ОткрыватьПриЗапуске", ЭлементыФормы.КоманднаяПанельНастройка.Кнопки.Настройка.Кнопки.ОткрыватьПриЗапуске.Пометка);
	СохранитьЗначение("ПанельФункций.Описания", ЭлементыФормы.КоманднаяПанельНастройка.Кнопки.Настройка.Кнопки.Описания.Пометка);

КонецПроцедуры // ПриЗакрытии()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ДействияФормыПоказыватьОписаниеНажатие(Кнопка)

	ПоказыватьОписания = НЕ ПоказыватьОписания;
	Кнопка.Пометка     = ПоказыватьОписания;

	ВыполнитьУстановкуТекущейСтраницы();

КонецПроцедуры // ДействияФормыПоказыватьОписаниеНажатие()

Процедура ИндексОткрыватьПриЗапуске(Кнопка)

	Кнопка.Пометка      = НЕ Кнопка.Пометка;
	ОткрыватьПриЗапуске = Кнопка.Пометка;

КонецПроцедуры

Процедура ПолеHTMLДокументаОnСlick(Элемент, pEvtObj)

	htmlElement = pEvtObj.srcElement;

	Пока htmlElement <> Неопределено И ВРег(htmlElement.tagName) <> "A" Цикл
		htmlElement = htmlElement.parentElement;
	КонецЦикла;

	Если htmlElement = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Позиция = Найти(htmlElement.href, "Перейти=");

	Если Позиция > 0 Тогда

		ИмяСтраницы = Сред(htmlElement.href, Позиция + 8);
		Если мДобавленныеСтраницы[ИмяСтраницы] = Истина Тогда
			мТекущаяСтраница = ИмяСтраницы;
			ВыполнитьУстановкуТекущейСтраницы();
			ЗаписатьВИсторию();

		Иначе
			Предупреждение("Не найдена страница перехода:" + ИмяСтраницы + "!");

		КонецЕсли;

		pEvtObj.returnValue = Ложь;

	КонецЕсли;

	Позиция = Найти(htmlElement.href, "Выполнить=");

	Если Позиция > 0 Тогда

		Попытка
			Выполнить(Сред(htmlElement.href, Позиция + 10));
		Исключение
			Предупреждение("При выполении действия произошла ошибка!")
		КонецПопытки;

		pEvtObj.returnValue = Ложь;

	КонецЕсли;

	Позиция = Найти(htmlElement.href, "ПолучитьОбщуюФорму=");

	Если Позиция > 0 Тогда

		Попытка
			ПолучитьОбщуюФорму(Сред(htmlElement.href, Позиция + 19)).Открыть();;
		Исключение
			Предупреждение("При открыти общей формы произошла ошибка!")
		КонецПопытки;

		pEvtObj.returnValue = Ложь;

	КонецЕсли;

КонецПроцедуры // ПолеHTMLДокументаОnСlick()

Процедура ПолеHTMLДокументаOnDragStart(Элемент, pEvtObj)

	Если НЕ pEvtObj.srcElement = Неопределено И pEvtObj.srcElement.tagName = "IMG" Тогда

		pEvtObj.returnValue = Ложь;

	КонецЕсли;

КонецПроцедуры // ПолеHTMLДокументаOnDragStart()

Процедура КоманднаяПанельНавигацииСодержание(Кнопка)

	мТекущаяСтраница = "Содержание";

	ВыполнитьУстановкуТекущейСтраницы();
	ЗаписатьВИсторию();

КонецПроцедуры

Процедура КоманднаяПанельНавигацииДействиеПерехода(Кнопка)

	мТекущаяСтраница = Кнопка.Имя;

	ВыполнитьУстановкуТекущейСтраницы();
	ЗаписатьВИсторию();

КонецПроцедуры

Процедура КоманднаяПанельНавигацииПерейтиВперед(Кнопка)

	СчетчикИстории    = мСоответствиеИстории["Счетчик"];
	КоличествоИстории = мСоответствиеИстории["Количество"];
	СчетчикИстории    = СчетчикИстории + 1;

	Если СчетчикИстории > КоличествоИстории Тогда
		СчетчикИстории = КоличествоИстории;
	КонецЕсли;

	ТекущаяСтраницаИстории = мСоответствиеИстории[СчетчикИстории];

	Если ТекущаяСтраницаИстории <> Неопределено Тогда

		мТекущаяСтраница = ТекущаяСтраницаИстории;
		мСоответствиеИстории.Вставить("Счетчик", СчетчикИстории);
		ВыполнитьУстановкуТекущейСтраницы();

	КонецЕсли;

	УстановитьДоступностьКнопокИстории();

КонецПроцедуры

Процедура КоманднаяПанельНавигацииПерейтиНазад(Кнопка)

	СчетчикИстории         = мСоответствиеИстории["Счетчик"];
	КоличествоИстории      = мСоответствиеИстории["Количество"];
	ТекущаяСтраницаИстории = мСоответствиеИстории[СчетчикИстории - 1];

	Если ТекущаяСтраницаИстории <> Неопределено Тогда

		мТекущаяСтраница = ТекущаяСтраницаИстории;

		ВыполнитьУстановкуТекущейСтраницы();

		СчетчикИстории   = СчетчикИстории - 1;

		Если СчетчикИстории < 1 Тогда
			СчетчикИстории = 1;
		КонецЕсли;

		мСоответствиеИстории.Вставить("Счетчик", СчетчикИстории);

	КонецЕсли;

	УстановитьДоступностьКнопокИстории();

КонецПроцедуры


мДействиеПерехода = Новый Действие("КоманднаяПанельНавигацииДействиеПерехода");
