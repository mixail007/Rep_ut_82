
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

//УПРАВЛЕНЧЕСКИЕ ОТЧЕТЫ
Процедура УправленческийБалансНажатие(Элемент)
	открытьВнешнююОбработку(182,,Истина);
КонецПроцедуры

Процедура ДеньгиВТоварныхГруппахНажатие(Элемент)
	открытьВнешнююОбработку(147,,ЛОЖЬ);  //3-ий параметр = ЛОЖЬ, если это ВнешниеОтчеты.Создать()
КонецПроцедуры

Процедура ОтчетПоТоварнымГруппамНажатие(Элемент)
	открытьВнешнююОбработку(162,,ЛОЖЬ); 	
КонецПроцедуры

//ВЗАИМОРАСЧЕТЫ С КОНТРАГЕНТАМИ
Процедура ВедомостьПоВзаиморасчетамСКонтрагентамиНажатие(Элемент)
	
	ВедомостьПоВзаиморасчетамСКонтрагентами = Отчеты.ВедомостьВзаиморасчетыСКонтрагентами.Создать();
	ВедомостьПоВзаиморасчетамСКонтрагентами.ЗаполнитьНачальныеНастройки();
	ВедомостьПоВзаиморасчетамСКонтрагентами.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ВедомостьПоВзаиморасчетамСПодотчетникамиНажатие(Элемент)
	
	ВедомостьПоВзаиморасчетамСПодотчетниками = Отчеты.ВедомостьВзаиморасчетыСПодотчетнымиЛицами.Создать();
	ВедомостьПоВзаиморасчетамСПодотчетниками.ЗаполнитьНачальныеНастройки();
	ВедомостьПоВзаиморасчетамСПодотчетниками.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ЗадолженностьПоКонтрагентамНажатие(Элемент)
	
	ЗадолженностьПоКонтрагентам = Отчеты.ЗадолженностьПоКонтрагентам.Создать();
	ЗадолженностьПоКонтрагентам.ЗаполнитьНачальныеНастройки();
	ЗадолженностьПоКонтрагентам.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ПросроченнаяДзКзНажатие(Элемент)
	открытьВнешнююОбработку(339,,Ложь);
КонецПроцедуры

Процедура КонтрольАктовСверокНажатие(Элемент)
	открытьВнешнююОбработку(167,,ЛОЖЬ);
КонецПроцедуры

//ДЕНЕЖНЫЕ СРЕДСТВА
Процедура ОстаткиДенежныхСредствНажатие(Элемент)
	
	ОстаткиДенежныхСредств = Отчеты.ОстаткиДенежныхСредств.Создать();
	ОстаткиДенежныхСредств.ЗаполнитьНачальныеНастройки();
	ОстаткиДенежныхСредств.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ДвиженияДенежныхСредствНажатие(Элемент)
	
	ДвиженияДенежныхСредств = Отчеты.ДвиженияДенежныхСредств.Создать();
	ДвиженияДенежныхСредств.ЗаполнитьНачальныеНастройки();
	ДвиженияДенежныхСредств.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ПлатёжныйКалендарьПоПоставщикамНажатие(Элемент)
	открытьВнешнююОбработку(120,,Истина);
КонецПроцедуры

Процедура КонтрольРазнесенияДенежныхСредствНажатие(Элемент)
	открытьВнешнююОбработку(146,,Истина);
КонецПроцедуры

//ПРОДАЖИ
Процедура ПродажиНажатие(Элемент)
	
	Продажи = Отчеты.Продажи.Создать();
	Продажи.ЗаполнитьНачальныеНастройки();
	Продажи.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ПродажиДиаграммаНажатие(Элемент)
	
	ПродажиДиаграмма = Отчеты.ПродажиДиаграмма.Создать();
	ПродажиДиаграмма.ЗаполнитьНачальныеНастройки();
	ПродажиДиаграмма.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ВаловаяПрибыльНажатие(Элемент)
	
	ВаловаяПрибыл = Отчеты.ВаловаяПрибыль.Создать();
	ВаловаяПрибыл.ЗаполнитьНачальныеНастройки();
	ВаловаяПрибыл.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ПланФактныйАнализПродажНажатие(Элемент)
	открытьВнешнююОбработку(116,,Истина);
КонецПроцедуры

Процедура ЗакупкиИПродажиНарастающимИтогомНажатие(Элемент)
	открытьВнешнююОбработку(158,,ЛОЖЬ);
КонецПроцедуры

//ЗАКУПКИ
Процедура ЗакупкиНажатие(Элемент)
	Закупки = Отчеты.Закупки.Создать();
	Закупки.ЗаполнитьНачальныеНастройки();
	Закупки.ПолучитьФорму().Открыть();
КонецПроцедуры

//ОСТАТКИ ТОВАРОВ НА СКЛАДАХ
Процедура ОстаткиТоваровНаСкладахНажатие(Элемент)
	ОстаткиТоваровНаСкладах = Отчеты.ОстаткиТоваровНаСкладах.Создать();
	ОстаткиТоваровНаСкладах.ЗаполнитьНачальныеНастройки();
	ОстаткиТоваровНаСкладах.ПолучитьФорму().Открыть();
КонецПроцедуры

Процедура ОстаткиТоваровНаОТХНажатие(Элемент)
	ОстаткиТоваровНаОТХ = Отчеты.ОстаткиТоваровНаОтветХранении.Создать();
	ОстаткиТоваровНаОТХ.ЗаполнитьНачальныеНастройки();
	ОстаткиТоваровНаОТХ.ПолучитьФорму().Открыть();
КонецПроцедуры

Процедура ВедомостьПоТоварамНаСкладахНажатие(Элемент)
	ВедомостьПоТоварамНаСкладах = Отчеты.ВедомостьТоварыНаСкладах.Создать();
	ВедомостьПоТоварамНаСкладах.ЗаполнитьНачальныеНастройки();
	ВедомостьПоТоварамНаСкладах.ПолучитьФорму().Открыть();
КонецПроцедуры

Процедура ВедомостьПоТоварамНаОТХНажатие(Элемент)
	ВедомостьПоТоварамНаОТХ = Отчеты.ВедомостьТоварыНаОтветственномХранении.Создать();
	ВедомостьПоТоварамНаОТХ.ЗаполнитьНачальныеНастройки();
	ВедомостьПоТоварамНаОТХ.ПолучитьФорму().Открыть();
КонецПроцедуры

Процедура ВедомостьПоПартиямТоваровНаСкладахНажатие(Элемент)
	ВедомостьПоПартиямТоваровНаСкладах = Отчеты.ВедомостьПартииТоваровНаСкладах.Создать();
	ВедомостьПоПартиямТоваровНаСкладах.ЗаполнитьНачальныеНастройки();
	ВедомостьПоПартиямТоваровНаСкладах.ПолучитьФорму().Открыть();
КонецПроцедуры

Процедура СтоимостнаяОценкаСкладаВЦенахНоменклатурыНажатие(Элемент)
	СтоимостнаяОценкаСкладаВЦенахНоменклатуры = Отчеты.СтоимостнаяОценкаСкладаВЦенахНоменклатуры.Создать();
	СтоимостнаяОценкаСкладаВЦенахНоменклатуры.ПолучитьФорму().Открыть();
КонецПроцедуры

//ЗАТРАТЫ
Процедура ЗатратыНажатие(Элемент)
	Затраты = Отчеты.Затраты.Создать();
	Затраты.ЗаполнитьНачальныеНастройки();
	Затраты.ПолучитьФорму().Открыть();
КонецПроцедуры

//ПРЕМИИ
Процедура РасчетПремийДляОтветственныхЗаТоварныеГруппыНажатие(Элемент)
	
	//ЭлементСправочника 		= Справочники.ВнешниеОбработки.НайтиПоКоду("136");
	//ХранилищеВО 			= ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
	//ИмяФайла 				= КаталогВременныхФайлов()+"PrnForm.tmp";
	//ХранилищеВО.Записать(ИмяФайла);
	//РасчетПремийДляОтветственныхЗаТоварныеГруппы = ВнешниеОтчеты.Создать(ИмяФайла);
	//ФормаОбработки 			= РасчетПремийДляОтветственныхЗаТоварныеГруппы.ПолучитьФорму();
	//ФормаОбработки.Открыть();
	открытьВнешнююОбработку(136,,ЛОЖЬ);

КонецПроцедуры

Процедура РасчетПремийДляРегиональныхМенеджеровНажатие(Элемент)
	
	//ЭлементСправочника 		= Справочники.ВнешниеОбработки.НайтиПоКоду("159");
	//ХранилищеВО 			= ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
	//ИмяФайла 				= КаталогВременныхФайлов()+"PrnForm.tmp";
	//ХранилищеВО.Записать(ИмяФайла);
	//РасчетПремийДляРегиональныхМенеджеров = ВнешниеОтчеты.Создать(ИмяФайла);
	//ФормаОбработки 			= РасчетПремийДляРегиональныхМенеджеров.ПолучитьФорму();
	//ФормаОбработки.Открыть();
	открытьВнешнююОбработку(159,,ЛОЖЬ);

КонецПроцедуры

Процедура РасчетПремийДляРегиональныхМенеджеровНакопительноНажатие(Элемент)
	
	//ЭлементСправочника 		= Справочники.ВнешниеОбработки.НайтиПоКоду("160");
	//ХранилищеВО 			= ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
	//ИмяФайла 				= КаталогВременныхФайлов()+"PrnForm.tmp";
	//ХранилищеВО.Записать(ИмяФайла);
	//РасчетПремийДляРегиональныхМенеджеровНакопительно = ВнешниеОтчеты.Создать(ИмяФайла);
	//ФормаОбработки 			= РасчетПремийДляРегиональныхМенеджеровНакопительно.ПолучитьФорму();
	//ФормаОбработки.Открыть();
	открытьВнешнююОбработку(160,,ЛОЖЬ);
	
КонецПроцедуры

//ОСНОВНЫЕ СРЕДСТВА
Процедура СтоимостьОСНажатие(Элемент)
	
	СтоимостьОС = Отчеты.ОтчетОстаткиИОбороты.Создать(); 
	СтоимостьОС.ИмяРегистра = "СтоимостьОС";
	СтоимостьОС.ВыводитьПоказателиВСтроку = Истина;
	СтоимостьОС.ЗаполнитьНачальныеНастройки();
	СтоимостьОС.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура КонтрольРазнесенияДСНажатие(Элемент)
	ФормаРазнесенияДС=Обработки.КонтрольРазнесенияДС.ПолучитьФорму();
	ФормаРазнесенияДС.Открыть();
	ФормаРазнесенияДС.Сформировать();
КонецПроцедуры

Процедура РапортРуководителюНажатие(Элемент)
//ЭлементСправочника 		= Справочники.ВнешниеОбработки.НайтиПоКоду("194");
//	ХранилищеВО 			= ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
//	ИмяФайла 				= КаталогВременныхФайлов()+"PrnForm.tmp";
//	ХранилищеВО.Записать(ИмяФайла);
//	Рапорт = ВнешниеОтчеты.Создать(ИмяФайла);
//	ФормаОбработки 			= Рапорт.ПолучитьФорму();
//	ФормаОбработки.Открыть();	
	открытьВнешнююОбработку(194,,ЛОЖЬ);
	
КонецПроцедуры

Процедура ДеньгиВОборотеНажатие(Элемент)
	//ЭлементСправочника 		= Справочники.ВнешниеОбработки.НайтиПоКоду("189");
	//ХранилищеВО 			= ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
	//ИмяФайла 				= КаталогВременныхФайлов()+"PrnForm.tmp";
	//ХранилищеВО.Записать(ИмяФайла);
	//Рапорт = ВнешниеОтчеты.Создать(ИмяФайла);
	//ФормаОбработки 			= Рапорт.ПолучитьФорму();
	//ФормаОбработки.Открыть();
	открытьВнешнююОбработку(189,,ЛОЖЬ);

КонецПроцедуры

//+++ 11.08.2015
Процедура ТрЗатратыНажатие(Элемент)
	
	//ЭлементСправочника 		= Справочники.ВнешниеОбработки.НайтиПоКоду("354");
	//ХранилищеВО 			= ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
	//ИмяФайла 				= КаталогВременныхФайлов()+"PrnFormTZ.tmp";
	//ХранилищеВО.Записать(ИмяФайла);
	//ОтчетТрЗатрат = ВнешниеОтчеты.Создать(ИмяФайла);
	//ФормаОбработки 			= ОтчетТрЗатрат.ПолучитьФорму();
	//ФормаОбработки.Открыть();
    открытьВнешнююОбработку(354,,ЛОЖЬ);

КонецПроцедуры

Процедура ОбщБюджетНажатие(Элемент)
	
	//ЭлементСправочника 		= Справочники.ВнешниеОбработки.НайтиПоКоду("376");
	//ХранилищеВО 			= ЭлементСправочника.ХранилищеВнешнейОбработки.Получить();
	//ИмяФайла 				= КаталогВременныхФайлов()+"FormOBud.tmp";
	//ХранилищеВО.Записать(ИмяФайла);
	//ОтчетТрЗатрат = ВнешниеОтчеты.Создать(ИмяФайла);
	//ФормаОбработки 			= ОтчетТрЗатрат.ПолучитьФорму();
	//ФормаОбработки.Открыть();	
    открытьВнешнююОбработку(376,,ЛОЖЬ);

КонецПроцедуры

//+++ 14.10.2015 - Валовая прибыль с отбором по свойству "ВидОборачиваемости"
//
Процедура ДискиНеликвид(Элемент)
	ИмяФайла = КаталогВременныхФайлов()+"ВаловаяПрибыль101.epf";
	файл = новый файл(ИмяФайла);
	//Если НЕ Файл.Существует() тогда // 1 раз 
		обр = справочники.ВнешниеОбработки.НайтиПоКоду("101"); 
		ДвоичныеДанные = обр.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
	//КонецЕсли;

	Обработка101  = ВнешниеОбработки.Создать(ИмяФайла);
	Обработка101.ОбщийОтчет.ИспользоватьСвойстваИКатегории = Истина;//+++ 11.09.2013
 	Обработка101.ОбщийОтчет.ДатаНач = ДобавитьМесяц( НачалоМесяца( ТекущаяДата()) , -1);
	Обработка101.ОбщийОтчет.ДатаКон = КонецМесяца( ТекущаяДата() );
	Обработка101.ЗаполнитьНачальныеНастройки();
	
//----------------ВСЕ Показатели------------------------------	
	для i=0 по Обработка101.ОбщийОтчет.Показатели.Количество()-1 цикл
		Обработка101.ОбщийОтчет.Показатели[i].Использование = Истина;
	КонецЦикла;

	фОбработки101 = Обработка101.ПолучитьФорму("Форма");
	фОбработки101.Открыть();
	
	фОбработки101.ЭлементыФормы.ДатаНач.Значение = ДобавитьМесяц( НачалоМесяца( ТекущаяДата()) , -1);
	фОбработки101.ЭлементыФормы.ДатаКон.Значение = КонецМесяца( ТекущаяДата() );
		
//( 19.08.2016 уже 6-ое! ----------------отбор------------------------------	
//+++ 22.12.2017 уже 11-ое св-во
	ПутьКДанным = "Свойство11Значение";  // изменяется при добавлении свойств ранее "Вид оборачиваемости"
	ИмяПоля1    = "ВидОборачиваемости"; 
	Имя1	    = "Вид оборачиваемости";
	Если Обработка101.ОбщийОтчет.ПостроительОтчета.Отбор.Найти(ИмяПоля1)=неопределено тогда
		Обработка101.ОбщийОтчет.ПостроительОтчета.Отбор.Добавить(ПутьКДанным, ИмяПоля1, Имя1+" (св-во Номенклатура)");
		эл1 = Обработка101.ОбщийОтчет.ПостроительОтчета.Отбор.ВидОборачиваемости;
		эл1.ВидСравнения = видСравнения.НеРавно;
		эл1.Значение = 0;
		эл1.Использование = Истина; 
	КонецЕсли;	
	//----------------Группировки строк------------------------------	
	Обработка101.ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Очистить();
	ТипИзмерения = ТипИзмеренияПостроителяОтчета.Элементы;
	Обработка101.ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить(ПутьКДанным, ИмяПоля1, ТипИзмерения); //!!!
//)

	ПутьКДанным = "Номенклатура";
	ТипИзмерения = ТипИзмеренияПостроителяОтчета.Элементы;
	Обработка101.ОбщийОтчет.ПостроительОтчета.ИзмеренияСтроки.Добавить(ПутьКДанным,ПутьКДанным, ТипИзмерения);
	
	//----------------Доп.Поля-------------------------	
Обработка101.ОбщийОтчет.ПостроительОтчета.ВыбранныеПоля.Очистить();		

//-------------изменение структуры	-----------------------------------------------------
	ФормаНастройка = Обработка101.ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	ФормаНастройка.ВладелецФормы = фОбработки101;

	СтруктураСНастройками = Обработка101.СформироватьСтруктуруДляСохраненияНастроек(истина);
	РезультатОткрытия = ФормаНастройка.ОткрытьМодально();

	Если РезультатОткрытия = Истина Тогда
				
		фОбработки101.ЭлементыФормы.ДатаНач.Значение = ФормаНастройка.ДатаНач;
		фОбработки101.ЭлементыФормы.ДатаКон.Значение = ФормаНастройка.ДатаКон;
		
		Обработка101.ОбщийОтчет.СформироватьОтчет(фОбработки101.ЭлементыФормы.ДокументРезультат, Истина, 20, ЛОЖЬ);
		
		ЗаполнитьЗначенияСвойств(фОбработки101.ОбщийОтчет, Обработка101.ОбщийОтчет);

	КонецЕсли;	
//---------------------------------------------------------------------------------------
	
КонецПроцедуры

Процедура ВнОтч399Нажатие(Элемент)
	открытьВнешнююОбработку(399,,ложь);
КонецПроцедуры


// 213.(ОТЧЕТ) Затраты в сравнении с предыдущим годом 
Процедура ВнОтч213Нажатие(Элемент)
	открытьВнешнююОбработку(213,,ЛОЖЬ);
КонецПроцедуры

//215. Продажи в сравнении с предыдущим годом (р./шт.) 
Процедура ВнОтч215Нажатие(Элемент)
	открытьВнешнююОбработку(215,,ЛОЖЬ);
КонецПроцедуры

Процедура ВнОтч503Нажатие(Элемент)
	открытьВнешнююОбработку(503,,ЛОЖЬ);
КонецПроцедуры


//====================Прочие отчеты =======================
Процедура ВнОтч566Нажатие(Элемент)  //14.03.2017
	открытьВнешнююОбработку(566,,ЛОЖЬ);
КонецПроцедуры

Процедура ВнОтч569Нажатие(Элемент)
	открытьВнешнююОбработку(569,,ЛОЖЬ);
КонецПроцедуры

Процедура ВнОтч571Нажатие(Элемент)
	открытьВнешнююОбработку(571,,ЛОЖЬ);
КонецПроцедуры

Процедура ВнОтч570Нажатие(Элемент)
	открытьВнешнююОбработку(570,,ЛОЖЬ);
КонецПроцедуры

Процедура ВнОтч281Нажатие(Элемент)
	открытьВнешнююОбработку(281,,ЛОЖЬ);
КонецПроцедуры
 
Процедура Отчет399Нажатие(Элемент)
	открытьВнешнююОбработку(399,,Истина); //10.05.2017
КонецПроцедуры

Процедура Отчет606Нажатие(Элемент)
	открытьВнешнююОбработку(606,,ЛОЖЬ); //26.05.2017 - отчет на СКД
КонецПроцедуры

Процедура ВнОтч619Нажатие(Элемент)
	открытьВнешнююОбработку(619,,ЛОЖЬ);
КонецПроцедуры

Процедура РапортРуководителю1Нажатие(Элемент)
	открытьВнешнююОбработку(195,,ЛОЖЬ);
КонецПроцедуры

Процедура Отчет626Нажатие(Элемент)
	открытьВнешнююОбработку(626,,ЛОЖЬ);
КонецПроцедуры

Процедура ГрафикПлатежейНажатие(Элемент)
	открытьВнешнююОбработку(605,,ИСТИНА); //26.05.2017 - отчет на СКД
КонецПроцедуры

//==========ОБЩАЯ ПРОЦЕДУРА ДЛЯ ЛЮБОЙ ВНЕШНЕЙ ОБРАБОТКИ или ОТЧЕТА!===========================
процедура открытьВнешнююОбработку(номерВнОбр=44, имяФормы="", ЭтоОбработка=Истина)
	
	//ИмяФайла = КаталогВременныхФайлов()+"ВнешнийОтчет.epf";
	ИмяФайла = ПолучитьИмяВременногоФайла();
	
	файл = новый файл(ИмяФайла);
//	Если НЕ Файл.Существует() тогда
		обр = справочники.ВнешниеОбработки.НайтиПоКоду(номерВнОбр); // разбор на ГТД
		ДвоичныеДанные = обр.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
	//	сообщить(строка(ТекущаяДата())+"Записан файл обработки: "+ИмяФайла);
//	КонецЕсли;
	
	
    Если ЭтоОбработка Тогда
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
	Иначе
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
	КонецЕсли;
			
	Если имяФормы="" тогда //19.08.2016 по умолчанию для любой обработки или отчета - названия НЕ надо!
		Форма = Обработка.ПолучитьФорму();
	иначе
		Форма = Обработка.ПолучитьФорму(имяФормы);
	КонецЕсли;
	
	Форма.Открыть();
	
КонецПроцедуры

Процедура ВнОтч392Нажатие(Элемент)
	открытьВнешнююОбработку(392,,ЛОЖЬ);
КонецПроцедуры

Процедура ПриОткрытии()
	если СокрЛП(глТекущийПользователь.Код) = "Паращенко" 
		или СокрЛП(глТекущийПользователь.Код) = "Смирнов А.А." тогда 
		ЭлементыФормы.ВнОтч392.Видимость = истина;
		ЭлементыФормы.ВнОтч392.Доступность = истина;
	КонецЕсли;	
КонецПроцедуры

Процедура ВаловаяПрибыль1Нажатие(Элемент)
	открытьВнешнююОбработку(492,,ИСТИНа);
КонецПроцедуры


