

Процедура Печать() экспорт
	
	Макет = ПолучитьМакет("Макет");
	
	Макет.Области.ПолноеНаименование.Параметр = Контрагент.НаименованиеПолное;
	Если Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ОрганизПравоваяФорма = "Юридическое лицо";
	ИначеЕсли Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		ОрганизПравоваяФорма = "Физическое лицо";
	КонецЕсли;
	Макет.Области.ОрганизПравоваяФорма.Параметр = ОрганизПравоваяФорма;
	
	//Контакты
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Объект,
	|	КонтактнаяИнформация.Тип,
	|	КонтактнаяИнформация.Вид,
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Результат = Запрос.Выполнить().Выгрузить();
	ЮрАдрес = Результат.Найти(Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, "Вид");
	ФактАдрес = Результат.Найти(Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента, "Вид");
	Телефон = Результат.Найти(Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента, "Вид");
	ЭлАдрес = Результат.Найти(СПравочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыДляОбменаДокументами, "Вид");
	Если НЕ ЮрАдрес = Неопределено Тогда
		Макет.Области.ЮрАдрес.Параметр = ЮрАдрес.Представление; 
	КонецЕсли;
	Если НЕ ФактАдрес = Неопределено Тогда
		Макет.Области.ФактАдрес.Параметр	= ФактАдрес.Представление; 
	КонецЕсли;
	Если НЕ Телефон = Неопределено Тогда
		Макет.Области.Телефон.Параметр = Телефон.Представление;
	КонецЕсли;
	Если НЕ ЭлАдрес = Неопределено Тогда
		Макет.Области.ЭлАдрес.Параметр = ЭлАдрес.Представление;
	КонецЕсли;
	
	//Поставщик/Покупатель
	Если Контрагент.Поставщик = Истина Тогда
		Макет.Области.Поставщик.Параметр = "Х";
	КонецЕсли;
	Если Контрагент.Покупатель = Истина Тогда
		Макет.Области.Покупатель.Параметр = "Х";
	КонецЕСли;
	
	//Контактные лица
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактныеЛица.Ссылка,
	|	КонтактныеЛица.ОбъектВладелец
	|ИЗ
	|	Справочник.КонтактныеЛица КАК КонтактныеЛица
	|ГДЕ
	|	КонтактныеЛица.ОбъектВладелец = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Результат = Запрос.Выполнить().Выбрать();
	ЭтоПервый = Истина;
	Пока Результат.Следующий() Цикл
		КонтактноеЛицо = Результат.Ссылка.Наименование;
		Если ЭтоПервый Тогда
			КонтактныеЛица = КонтактноеЛицо;
			ЭтоПервый = Ложь;
		Иначе 
			КонтактныеЛица = КонтактныеЛица + ", " + КонтактноеЛицо;
		КонецЕсли;
	КонецЦикла;
	Макет.Области.КонтактныеЛица.Параметр = КонтактныеЛица;
	
	Макет.Области.МенеджерКонтрагента.Параметр = Контрагент.ОсновнойМенеджерКонтрагента;
	
	//Типы цен
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	 |	ДоступныеЦеныКонтрагентов.Контрагент,
	 |	ДоступныеЦеныКонтрагентов.ТипЦены
	 |ИЗ
	 |	РегистрСведений.ДоступныеЦеныКонтрагентов КАК ДоступныеЦеныКонтрагентов
	 |ГДЕ
	 |	ДоступныеЦеныКонтрагентов.Контрагент = &Контрагент";
	 
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Если Результат.ТипЦены.Наименование = "Крупный опт" Тогда
			Макет.Области.КрупныйОпт.Параметр = "Х";
		КонецЕсли;
		Если Результат.ТипЦены.Наименование = "Базовая" Тогда
			Макет.Области.Базовая.Параметр = "Х";
		КонецЕсли;
		Если Результат.ТипЦены.Наименование = "Дилерская" Тогда
			Макет.Области.Дилерская.Параметр = "Х";
		КонецЕсли;
		Если Результат.ТипЦены.Наименование = "Закупочная" Тогда
			Макет.Области.Закупочная.Параметр = "Х";
		КонецЕсли;
		Если Результат.ТипЦены.Наименование = "Мелкий опт" Тогда
			Макет.Области.МелкийОпт.Параметр = "Х";
		КонецЕсли;
		Если Результат.ТипЦены.Наименование = "Ручная" Тогда
			Макет.Области.Ручная.Параметр = "Х";
		КонецЕсли;
		Если Результат.ТипЦены.Наименование = "Свободная" Тогда
			Макет.Области.Свободная.Параметр = "Х";
		КонецЕсли;
		Если Результат.ТипЦены.Наименование = "Средний опт" Тогда
			Макет.Области.СреднийОпт.Параметр = "Х";
		КонецЕсли;
		Если Результат.ТипЦены.Наименование = "Якорная" Тогда
			Макет.Области.Якорная.Параметр = "Х";
		КонецЕсли;
	КонецЦикла;
		 
	//ОГРН
	Значение = Контрагент.ОГРН;
	Показатель = "ОГРН";
	Размерность = СтрДлина(Значение);
	ПроставитьВКвадратыЗначения(Макет, Показатель, Размерность, Значение);
	
	//ИНН
	Значение = Контрагент.ИНН;
	Показатель = "ИНН";
	Размерность = СтрДлина(Значение);
	ПроставитьВКвадратыЗначения(Макет, Показатель, Размерность, Значение);
	
	//КПП
	Значение = Контрагент.КПП;
	Показатель = "КПП";
	Размерность = СтрДлина(Значение);
	ПроставитьВКвадратыЗначения(Макет, Показатель, Размерность, Значение);
	
	//ОКПО
	Значение = Контрагент.КодПоОКПО;
	Показатель = "ОКПО";
	Размерность = СтрДлина(Значение);
	ПроставитьВКвадратыЗначения(Макет, Показатель, Размерность, Значение);
	
	//РС
	Значение = Контрагент.ОсновнойБанковскийСчет.НомерСчета;
	Показатель = "РС";
	Размерность = СтрДлина(Значение);
	ПроставитьВКвадратыЗначения(Макет, Показатель, Размерность, Значение);
	
	//КоррСчет
	Значение = Контрагент.ОсновнойБанковскийСчет.Банк.КоррСчет;
	Показатель = "КоррСчет";
	Размерность = СтрДлина(Значение);
	ПроставитьВКвадратыЗначения(Макет, Показатель, Размерность, Значение);
	
	//БИК
	Значение = Контрагент.ОсновнойБанковскийСчет.Банк.Код;
	Показатель = "БИК";
	Размерность = СтрДлина(Значение);
	ПроставитьВКвадратыЗначения(Макет, Показатель, Размерность, Значение);
	
	Макет.Области.Банк.Параметр = Контрагент.ОсновнойБанковскийСчет.Банк;
	
	//+++
	//Лимит
	Значение = Формат(Контрагент.ДопустимаяСуммаЗадолженности,"ЧДЦ=0; ЧРГ=,; ЧГ=3,0");
	Показатель = "Лимит";
	Размерность = СтрДлина(Значение);
	ПроставитьВКвадратыЗначения(Макет, Показатель, Размерность, Значение);
	
	Макет.ОтображатьСетку = Ложь;
	Макет.ОтображатьЗаголовки = Ложь;
	Макет.ТолькоПросмотр = Истина;
	Макет.Показать();
	
КонецПроцедуры	


	
Процедура ПроставитьВКвадратыЗначения(Макет, Показатель, Размерность, Значение) 
	
	ДопРазряд = ""; // дополнительный разряд в счетчике
	ТестОк = Истина;
	ДополнитьЗначение = Ложь;
	
	Если Макет.Области.Найти(Показатель + ДопРазряд + "1") = Неопределено Тогда
		ТестОк = Ложь;
	КонецЕсли;
	
	Если НЕ ТестОк Тогда
		Если ДопРазряд = "0" Тогда
			ДопРазряд = "";
		Иначе
			ДопРазряд = "0";
		КонецЕсли;
	КонецЕсли;
	
	СтрокаФорматаЯчейки = "ЧЦ = 15; ЧДЦ = 0; ЧРД=,; ЧС = 0; ЧГ=0";
	
	Если Размерность = 0 Тогда
		ЗначениеДопСтрока = ДополнитьСтроку("", Размерность," ");
	Иначе
		ЗначениеДопСтрока = Формат(Значение, СтрокаФорматаЯчейки);
		ЗначениеДопСтрока = ДополнитьСтроку(ЗначениеДопСтрока, Размерность," ");
	КонецЕсли;
	
	ДопЗначение = 0;
	
	Для НомЯчейки = 1 По Размерность Цикл
		
		Попытка
			Макет.Области[Показатель + ?(СтрДлина(НомЯчейки) = 1, ДопРазряд + НомЯчейки, НомЯчейки)].Параметр = Сред(ЗначениеДопСтрока, НомЯчейки, 1);
			//Макет.Области[Показатель + ?(СтрДлина(НомЯчейки) = 1, ДопРазряд + НомЯчейки, НомЯчейки)].ГраницаСверху.Толщина=0;
			//Макет.Области[Показатель + ?(СтрДлина(НомЯчейки) = 1, ДопРазряд + НомЯчейки, НомЯчейки)].ГраницаСверху.ТипЛинии=ТипЛинииЯчейкиТабличногоДокумента.Сплошная;
			//Макет.Области[Показатель + ?(СтрДлина(НомЯчейки) = 1, ДопРазряд + НомЯчейки, НомЯчейки)].ГраницаСнизу.ТипЛинии=ТипЛинииЯчейкиТабличногоДокумента.Сплошная;
			//Макет.Области[Показатель + ?(СтрДлина(НомЯчейки) = 1, ДопРазряд + НомЯчейки, НомЯчейки)].ГраницаСлева.ТипЛинии=ТипЛинииЯчейкиТабличногоДокумента.Сплошная;
			//Макет.Области[Показатель + ?(СтрДлина(НомЯчейки) = 1, ДопРазряд + НомЯчейки, НомЯчейки)].ГраницаСправа.ТипЛинии=ТипЛинииЯчейкиТабличногоДокумента.Сплошная;
		Исключение  
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

