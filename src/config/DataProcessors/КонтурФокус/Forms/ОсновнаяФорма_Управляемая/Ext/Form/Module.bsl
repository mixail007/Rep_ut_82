
&НаСервере
Процедура ПолучитьДанныеЮрФизЛица()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ДанныеЮрФизЛица_Врем	= ОбработкаОбъект.Фокус_ПолучитьДанные_ЮрФизЛица(ИНН);
	
	Если ЗначениеЗаполнено(ДанныеЮрФизЛица_Врем) Тогда
		
		ТабДокумент.Очистить();
		ТабДокумент.Вывести(ОбработкаОбъект.Фокус_ВывестиДанные_ЮрФизЛицо(ДанныеЮрФизЛица_Врем));
		
		ДанныеЮрФизЛица_Врем.Аналитика		= Неопределено;
		ДанныеЮрФизЛица_Врем.Маркеры		= Неопределено;
		ДанныеЮрФизЛица_Врем.БухОтчетность	= Неопределено;
		ДанныеЮрФизЛица = ДанныеЮрФизЛица_Врем;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
 	Если ПроверитьСоединение() Тогда
		ПриИзмененииИНН();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЭтоПравильныйИНН_Модуль(ИНН,ОПисаниеОшибки) Экспорт
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Возврат ОбработкаОбъект.ЭтоПравильныйИНН(ИНН,ОписаниеОшибки);
	
КонецФункции

&НаСервере
Процедура УстановитьДанныеHTMLНаСервере(ЭкспрессОценка,Доп)

	ДанныеЭкспрессОценки = "<html>"+ЭкспрессОценка+"</html>";
	ДопСведения = "<html>"+Доп+"</html>";

КонецПроцедуры
	
&НаКлиенте
Процедура ПриИзмененииИНН()
	
	Если Не ЗначениеЗаполнено(КлючДоступа) Тогда
		ТекстОшибки = "Укажите ключ доступа в настройках!";
		
		Если Параметры.МодальностьЗапрещена Тогда 
			Выполнить("ПоказатьПредупреждение(,ТекстОшибки,,""Контур.Фокус"")");
		Иначе
			Предупреждение(ТекстОшибки,,"Контур.Фокус");
		КонецЕсли;
    КонецЕсли;
	
	ПолучитьДанныеЮрФизЛица();

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИнформацию(Команда)
	
	ПриИзмененииИНН()
	
КонецПроцедуры

&НаСервере
Функция СоздатьНовогоКонтрагента()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.Фокус_Интеграция_СоздатьКарточкуКонтрагента(ДанныеЮрФизЛица);
	
КонецФункции

&НаКлиенте
Процедура СоздатьКонтрагента(Команда)
	
	Если ЗначениеЗаполнено(ДанныеЮрФизЛица) И ЗначениеЗаполнено(ИНН) И ДанныеЮрФизЛица.ИНН = ИНН Тогда
		
		РезультатСозданияКонтрагента = СоздатьНовогоКонтрагента();
		
		Если РезультатСозданияКонтрагента.Успешно Тогда
			
			ПараметрыФормы = Новый Структура("Ключ",РезультатСозданияКонтрагента.Ссылка);
			ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта",ПараметрыФормы);
		
		Иначе
			
			ТекстОшибки = "Не удалось создать карточку контрагента!";
			Если ЗначениеЗаполнено(РезультатСозданияКонтрагента.ТекстОшибки) Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС + РезультатСозданияКонтрагента.ТекстОшибки;
			КонецЕсли;
			
			Если Параметры.МодальностьЗапрещена Тогда 
				Выполнить("ПоказатьПредупреждение(,ТекстОшибки,,""Контур.Фокус"")");
			Иначе
				Предупреждение(ТекстОшибки,,"Контур.Фокус");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьОбщуюНастройку(ИмяНастройки,Значение)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.Фокус_ХранениеДанных_СохранитьНастройку(ИмяНастройки, Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура КлючДоступаПриИзменении(Элемент)
	
	СохранитьОбщуюНастройку("КлючДоступа",КлючДоступа);	
	
	ОбновитьМаскуКлюча();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьМаскуКлюча()
	
	Если ЗначениеЗаполнено(КлючДоступа) Тогда
		Элементы.МаскаКлюча.Заголовок = "..."+Прав(КлючДоступа,7);
	Иначе
		Элементы.МаскаКлюча.Заголовок = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьФункционалаПоНаличиюСвоихОбъектов()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбъектыДобавлены = ОбработкаОбъект.Фокус_ХранениеДанных_ДобавленыОбъекты();
	
	Элементы.ОбновитьДанныеНаблюдения.Доступность		= ОбъектыДобавлены;
	Элементы.ПоказатьИзмененияНаблюдения.Доступность	= ОбъектыДобавлены;
	Элементы.СохранитьНастройкиНаблюдения.Доступность	= ОбъектыДобавлены;
	
	Элементы.НадписьТекстОтсутствияОбъектов.Видимость	= НЕ ОбъектыДобавлены;
	Элементы.НадписьТекстОтсутствияОбъектов1.Видимость	= НЕ ОбъектыДобавлены;
	
	Элементы.СписокДействий.Доступность = ОбъектыДобавлены;
	
	Элементы.ГруппаСостояние.Видимость = ОбъектыДобавлены;
	
	Элементы.НадписьСостояниеЗначениеДа.Видимость	= ОбъектыДобавлены;
	Элементы.НадписьСостояниеЗначениеНет.Видимость	= НЕ ОбъектыДобавлены;
	
	Элементы.ГруппаНапоминаниеСнятьСвойства.Видимость = НЕ ОбъектыДобавлены;
	
	Элементы.ЗагрузитьСписокМаркеров.Видимость=ОбъектыДобавлены;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	КлючДоступа = ОбработкаОбъект.Фокус_ХранениеДанных_ПрочитатьНастройку("КлючДоступа");
    РезультатыЭкспрессПроверкиВБраузере = ОбработкаОбъект.Фокус_ХранениеДанных_ПрочитатьНастройку("ОткрыватьВБраузере");
	НастройкиМаркеровХранитьИндивидуальноПоПользователям=ОбработкаОбъект.Фокус_ХранениеДанных_ПрочитатьНастройку("ИндивидуальныйНастройкиМаркеров");
	
	ПараметрыПочты = ОбработкаОбъект.Фокус_ХранениеДанных_ПрочитатьНастройку("ПараметрыПочты");
	Если ТипЗнч(ПараметрыПочты) = Тип("Структура") Тогда
		СерверSMTP			= ПараметрыПочты.СерверSMTP;
		ПортSMTP			= ПараметрыПочты.ПортSMTP;
		ПользовательSMTP	= ПараметрыПочты.ПользовательSMTP;
		ПарольSMTP			= ПараметрыПочты.ПарольSMTP;
		ИспользоватьБезопасноеСоединение = ПараметрыПочты.ИспользоватьБезопасноеСоединение;
	КонецЕсли;
	
	ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + " ver. "+ОбработкаОбъект.ПолучитьНомерРелиза_Контур();
	
	Параметры.МодальностьЗапрещена = ОбработкаОбъект.МодальностьЗапрещена();
	
	ПутьКФормам = ОбработкаОбъект.Метаданные().ПолноеИмя() + ".Форма.";
	
	НаблюдениеДатаНачала = ТекущаяДата();
	НаблюдениеДатаОкончания = ТекущаяДата();
	
	ИнициализироватьНастройкиНаблюдения();
	
	ОбработкаОбъект.Фокус_ИнициализироватьМодуль();
	
	УстановитьДоступностьФункционалаПоНаличиюСвоихОбъектов();
	
	ВидФильтраКонтрагентовПроверка = "ПоДокументам";
	НачалоПериодаПроверкаНадежности = НачалоМесяца(ТекущаяДата());
	КонецПериодаПроверкаНадежности = ТекущаяДата();
	
	ОбновитьСписокДействий();
	
	СохраненныйСписокМаркеров = ОбработкаОбъект.Фокус_ХранениеДанных_ПолучитьСписокМаркеров();
	Если ТипЗнч(СохраненныйСписокМаркеров) = Тип("ТаблицаЗначений") Тогда
		Для Каждого Эл ИЗ СохраненныйСписокМаркеров Цикл
			НоваяСтрока = СписокМаркеров.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Эл);
			УстановитьНомерКартинкиСтрокиМаркеров(НоваяСтрока);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНомерКартинкиСтрокиМаркеров(ТекСтрока)
	
	Если ТекСтрока.Категория = "Красный" Тогда
		ТекСтрока.НомерКартинки = 1;
	ИначеЕсли ТекСтрока.Категория = "Желтый" Тогда
		ТекСтрока.НомерКартинки = 2;
	ИначеЕсли ТекСтрока.Категория = "Зеленый" Тогда
		ТекСтрока.НомерКартинки = 3;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеСтатистики()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ДанныеСтатистики = ОбработкаОбъект.ПолучитьHTMLСтатистикиКлюча();
	
	Элементы.ДанныеСтатистики.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеСтатистикиНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Возврат ОбработкаОбъект.Фокус_ВывестиДанные_СтатистикаКлюча(ОбработкаОбъект.Фокус_ПолучитьДанные_СтатистикаКлюча());
	
КонецФункции

&НаСервере
Функция СформироватьСостояниеИспользованияКлючаНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Возврат ОбработкаОбъект.Фокус_ВывестиДанные_ЗаполнитьЭлементФормыИнформациейОСтатистике(ОбработкаОбъект.Фокус_ПолучитьДанные_СтатистикаКлюча(),ТекущаяДата());
	
КонецФункции


&НаКлиенте
Процедура ПоказатьСтатистику(Команда)
	
	ТабДок = ПолучитьДанныеСтатистикиНаСервере();
	
	Если НЕ ТабДок = Неопределено Тогда
		ПараметрыФормы = Новый Структура("ТабДок",ТабДок);
		ОткрытьФорму(ПутьКФормам+"ФормаПросмотраТабличногоДокумента_Управляемая",ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылкуЭкспрессПроверки(ИНН)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Данные = ОбработкаОбъект.Фокус_ПолучитьДанные_ЭкспрессОтчет(ИНН);
	Если ЗначениеЗаполнено(Данные) Тогда
	    Возврат Данные.href;
	КонецЕсли;
	
	Возврат Неопределено;
		
КонецФункции

&НаСервере
Функция ПолучитьСсылкуНаВыписку()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат "https://focus-api.kontur.ru/api3/excerpt?key="+ОбработкаОбъект.Фокус_ПолучитьКлючРазработчика()+"&inn="+ИНН;
	
КонецФункции

&НаСервере
Функция ПолучитьСсылкуНаФинАнализ()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат "https://focus-api.kontur.ru/api3/finan?key="+ОбработкаОбъект.Фокус_ПолучитьКлючРазработчика()+"&inn="+ИНН;
	
КонецФункции

&НаСервере
Функция ПолучитьСсылкуНаКарточкуВКонтурФокус()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.Фокус_ПолучитьЗначение(ИНН,"req","focusHref")
КонецФункции

&НаКлиенте
Процедура ТабДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если Расшифровка = "ЭкспрессПроверка" Тогда
		
		СсылкаНаСтраницу = ПолучитьСсылкуЭкспрессПроверки(ИНН);
		
		Если ЗначениеЗаполнено(СсылкаНаСтраницу) Тогда
			Если РезультатыЭкспрессПроверкиВБраузере Тогда
				ЗапуститьПриложение(СсылкаНаСтраницу);
			Иначе
				ПараметрыФормы = Новый Структура("Ссылка",СсылкаНаСтраницу);
				ОткрытьФорму(ПутьКФормам+"ФормаРезультатовЭкспрессПроверки_Управляемая",ПараметрыФормы);
			КонецЕсли;		
		КонецЕсли;
		
	ИначеЕсли Расшифровка = "ВыпискаЕГРЮЛ" Тогда
		
		ЗапуститьПриложение(ПолучитьСсылкуНаВыписку());
		
	ИначеЕсли Расшифровка = "ФинАнализ" Тогда
		
		ЗапуститьПриложение(ПолучитьСсылкуНаФинАнализ());
		
	ИначеЕсли Расшифровка = "КонтурФокус" Тогда
		
		ЗапуститьПриложение(ПолучитьСсылкуНаКарточкуВКонтурФокус());
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьМаскуКлюча();
	УправлениеВидимостьюНастройкиВыборкиКонтрагентов();	
	
	ПодключитьОбработчикОжидания("ПроверитьАвтоматическийЗапуск",0.1,Истина);
	ОбновитьСтатистикуИспользования();
	ПодключитьОбработчикОжидания("ОбновитьСтатистикуИспользования",30,Ложь);
	УстановитьВидимость();
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущегоПользователяСеанса()
	
	Возврат ПараметрыСеанса.ТекущийПользователь;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьАвтоматическийЗапуск()
	
	Если ЗначениеЗаполнено(ПользовательАвтообмена) И ПолучитьТекущегоПользователяСеанса() = ПользовательАвтообмена Тогда
		
		ТекстПредупреждения = 	"Сейчас начнется обновление данных наблюдения за контрагентами.."+Символы.ПС+
								"Внимание! После обновления данных, 1С закроется, т.к. данный режим предназначен для автоматического запуска."+Символы.ПС+
								"Для отключения режима нужно очистить поле ""Пользователь автообмена"" в настройках наблюдения.";
		
		
		Если НЕ Вопрос(ТекстПредупреждения,РежимДиалогаВопрос.ОКОтмена,5,,"Контур.Фокус",КодВозвратаДиалога.ОК) = КодВозвратаДиалога.Отмена Тогда
			ОбновитьДанныеНаблюдения("");
			ЗавершитьРаботуСистемы();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИнициализироватьНастройкиНаблюдения()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ТекстЗапросаВыборкиКонтрагентов = ОбработкаОбъект.Фокус_ХранениеДанных_ПрочитатьНастройку("НаблюдениеВыборкаКонтрагентов");
	
	НастройкаМаркеров = ОбработкаОбъект.Фокус_ХранениеДанных_ПрочитатьНастройку("НаблюдениеНастройкаМаркеров");
	
	ТабДокументНастройкиМаркеров.Очистить();
	ТабДокументНастройкиМаркеров.Вывести(НастройкаМаркеров);
	ТабДокументНастройкиМаркеров.ФиксацияСверху = 1;
	
	ТекСписок = ОбработкаОбъект.Фокус_ХранениеДанных_ПрочитатьНастройку("СписокКонтрагентовНаблюдения");
	
	Для Каждого Стр ИЗ ТекСписок Цикл
		НоваяСтрока = СписокКонтрагентовНаблюдения.Добавить();
		НоваяСтрока.Контрагент = Стр.Контрагент;
	КонецЦикла;
	
	флСписокКонтрагентов = ОбработкаОбъект.Фокус_ХранениеДанных_ПрочитатьНастройку("ВариантВыборкиКонтрагентов");
	
	ПользовательАвтообмена = ОбработкаОбъект.Фокус_ХранениеДанных_ПрочитатьНастройку("ПользовательАвтообмена");
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюНастройкиВыборкиКонтрагентов()
	
	Если флСписокКонтрагентов = "Список" Тогда
		Элементы.ПанельНастроекВыборкиКонтрагентов.ТекущаяСтраница = Элементы.СтраницаСписокКонтрагентов;
	Иначе
		Элементы.ПанельНастроекВыборкиКонтрагентов.ТекущаяСтраница = Элементы.СтраницаТекстЗапроса;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура флСписокКонтрагентовПриИзменении(Элемент)
	
	УправлениеВидимостьюНастройкиВыборкиКонтрагентов();	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаблюденияНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ТабКонтрагентов = Новый ТаблицаЗначений;
	ТабКонтрагентов.Колонки.Добавить("Контрагент");
	Для Каждого Стр Из СписокКонтрагентовНаблюдения Цикл
		НоваяСтрока = ТабКонтрагентов.Добавить();
		НоваяСтрока.Контрагент = Стр.Контрагент;
	КонецЦикла;
	
	ОбработкаОбъект.Фокус_ХранениеДанных_СохранитьНастройку("НаблюдениеВыборкаКонтрагентов",	ТекстЗапросаВыборкиКонтрагентов);
	ОбработкаОбъект.Фокус_ХранениеДанных_СохранитьНастройку("НаблюдениеНастройкаМаркеров",		ТабДокументНастройкиМаркеров);
	ОбработкаОбъект.Фокус_ХранениеДанных_СохранитьНастройку("ВариантВыборкиКонтрагентов",		флСписокКонтрагентов);
	ОбработкаОбъект.Фокус_ХранениеДанных_СохранитьНастройку("СписокКонтрагентовНаблюдения",		ТабКонтрагентов);
	
	ОбработкаОбъект.Фокус_ХранениеДанных_СохранитьНастройку("ПользовательАвтообмена",ПользовательАвтообмена);
	
	ПараметрыПочты = Новый Структура;
	ПараметрыПочты.Вставить("СерверSMTP", 						СерверSMTP);
	ПараметрыПочты.Вставить("ПортSMTP", 						ПортSMTP);
	ПараметрыПочты.Вставить("ПользовательSMTP", 				ПользовательSMTP);
	ПараметрыПочты.Вставить("ПарольSMTP", 						ПарольSMTP);
	ПараметрыПочты.Вставить("ИспользоватьБезопасноеСоединение",	ИспользоватьБезопасноеСоединение);
	
	ОбработкаОбъект.Фокус_ХранениеДанных_СохранитьНастройку("ПараметрыПочты", ПараметрыПочты);

КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиНаблюдения(Команда)
	
	СохранитьНастройкиНаблюденияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеНаблюденияНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбработкаОбъект.Фокус_Наблюдение_ОбновитьДанные();
	ОбработкаОбъект.Фокус_Наблюдение_СоздатьМаркеры();
	ОбработкаОбъект.Фокус_Наблюдение_ВыполнитьДействия();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеНаблюдения(Команда)

	Если ПроверитьСоединение() Тогда
		ОбновитьДанныеНаблюденияНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция Фокус_API_ПроверитьКлючДоступаНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.Фокус_API_ПроверитьКлючДоступа();	
	
КонецФункции

&НаКлиенте
Функция ПроверитьСоединение()
	
	Если НЕ ЗначениеЗаполнено(КлючДоступа) Тогда
		Предупреждение("Укажите ключ доступа в настройках!",10,"Контур.Фокус: ошибка соединения");
		Возврат Ложь;
	КонецЕсли;
	
	РезультатПроверки = Фокус_API_ПроверитьКлючДоступаНаСервере();
	Если Не РезультатПроверки.Успешно Тогда
		Предупреждение("Не удалось получить данные с сервера Контур.Фокус:"+Символы.ПС+Символы.ПС+РезультатПроверки.ОписаниеОшибки,10,"Контур.Фокус: ошибка соединения");
	КонецЕсли;
	
	Возврат РезультатПроверки.Успешно;	
	
КонецФункции

&НаСервере
Процедура ПоказатьИзмененияНаблюденияНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Таб = ОбработкаОбъект.Фокус_ВыводДанных_ПоказатьСработавшиеМаркеры(НаблюдениеДатаНачала,НаблюдениеДатаОкончания,,,,,,Истина);
	
	ТабНаблюдения.Очистить();
	ТабНаблюдения.Вывести(Таб);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьИзмененияНаблюдения(Команда)

	ПоказатьИзмененияНаблюденияНаСервере();
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьМакетНаСервере(ИмяМакета)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОБработкаОбъект.ПолучитьМакет(ИмяМакета);
	
КонецФункции

&НаКлиенте
Процедура СохранитьФайлОбновления(Команда)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбора.Заголовок		= "Укажите файл, в который нужно сохранить обновление для вашей конфигурации";
	ДиалогВыбора.Фильтр			= "Файл конфигурации 1С (*.cf)|*.cf";      
	ДиалогВыбора.ПолноеИмяФайла = "КонтурFocus_upd.cf";
	
	Если ДиалогВыбора.Выбрать() Тогда      
		
		ПутьКФайлу = ДиалогВыбора.ПолноеИмяФайла;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ПолучитьМакетНаСервере("ФайлОбновленияКонфигурации").Записать(ПутьКФайлу);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнструкцияПоОбновлениюНажатие(Элемент)
	
	ПутьКФайлу = КаталогВременныхФайлов()+"КонтурФокус_1С_8_ОбновлениеБазы.pdf";
	ПолучитьМакетНаСервере("ИнструкцияОбновление").Записать(ПутьКФайлу);
	ЗапуститьПриложение(ПутьКФайлу);

КонецПроцедуры

&НаКлиенте
Процедура НадписьТекстОтсутствияОбъектовНажатие(Элемент)
	
	Элементы.ОсновнаяПанель.ТекущаяСтраница = Элементы.СтраницаНастройки;
	Элементы.ПанельНастроек.ТекущаяСтраница = Элементы.СтраницаХранениеДанных;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьТекстОтсутствияОбъектов1Нажатие(Элемент)
	
	Элементы.ОсновнаяПанель.ТекущаяСтраница = Элементы.СтраницаНастройки;
	Элементы.ПанельНастроек.ТекущаяСтраница = Элементы.СтраницаХранениеДанных;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатыЭкспрессПроверкиВБраузереПриИзменении(Элемент)
	
	СохранитьОбщуюНастройку("ОткрыватьВБраузере",РезультатыЭкспрессПроверкиВБраузере);	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюНастроекВыбораКонтрагентовНаблюдения()
	
	Если ВидФильтраКонтрагентовПроверка = "ПоДокументам" Тогда
		
		Элементы.ГруппаПоДокументам.Видимость	= Истина;
		Элементы.ГруппаКаталог.Видимость		= Ложь;
		
	ИначеЕсли ВидФильтраКонтрагентовПроверка = "Каталог" Тогда
		
		Элементы.ГруппаПоДокументам.Видимость	= Ложь;
		Элементы.ГруппаКаталог.Видимость		= Истина;
		
	Иначе
		
		Элементы.ГруппаПоДокументам.Видимость	= Ложь;
		Элементы.ГруппаКаталог.Видимость		= Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидФильтраКонтрагентовПроверкаПриИзменении(Элемент)
	
	УправлениеВидимостьюНастроекВыбораКонтрагентовНаблюдения();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПроверкиНаСервере()
	
	Если ВидФильтраКонтрагентовПроверка = "ПоДокументам" Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НачалоПериода",	НачалоПериодаПроверкаНадежности);
		СтруктураПараметров.Вставить("КонецПериода",	КонецДня(КонецПериодаПроверкаНадежности));
		
	ИначеЕсли ВидФильтраКонтрагентовПроверка = "Каталог" Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("КаталогКонтрагентов",	КаталогПроверкиНадежности);
		
	Иначе
		
		СтруктураПараметров = Неопределено;
		                                    
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбработкаОбъект.СписокПроверки.Загрузить(ОбработкаОбъект.Фокус_Интеграция_ПолучитьСписокПроверки(ВидФильтраКонтрагентовПроверка, СтруктураПараметров));
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	Если ОбработкаОбъект.СписокПроверки.Количество()>0 Тогда
		Элементы.СписокПроверкиПроверитьСписокПроверки.Отображение = ОтображениеКнопки.КартинкаИТекст;
		Элементы.СписокПроверкиПроверитьСписокПроверки.Заголовок = "Проверить " + ОбработкаОбъект.СписокПроверки.Количество() + " ИНН";
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокПроверки(Команда)
	
	ЗаполнитьСписокПроверкиНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРезультатЭкспрессПроверки(Команда)

	ТекДанные = Элементы.СписокПроверки.ТекущиеДанные;
	
	Если НЕ ТекДанные = Неопределено Тогда
		
		СсылкаНаСтраницу = ПолучитьСсылкуЭкспрессПроверки(ТекДанные.ИНН);
		
		Если ЗначениеЗаполнено(СсылкаНаСтраницу) Тогда
			Если РезультатыЭкспрессПроверкиВБраузере Тогда
				ЗапуститьПриложение(СсылкаНаСтраницу);
			Иначе
				ПараметрыФормы = Новый Структура("Ссылка",СсылкаНаСтраницу);
				ОткрытьФорму(ПутьКФормам+"ФормаРезультатовЭкспрессПроверки_Управляемая",ПараметрыФормы);
			КонецЕсли;		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМаркеровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		ТекСтрока = Элемент.ТекущиеДанные;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Наименование", ТекСтрока.Наименование);
		ПараметрыФормы.Вставить("Включен", ТекСтрока.Включен);
		ПараметрыФормы.Вставить("Описание", ТекСтрока.Описание);
		ПараметрыФормы.Вставить("Категория", ТекСтрока.Категория);
		ПараметрыФормы.Вставить("КодМаркера", ТекСтрока.КодМаркера);
		
	Иначе
		
		ПараметрыФормы = Новый Структура;
		
	КонецЕсли;
	
	ОткрытьФорму(ПутьКФормам+"ФормаМаркера_Управляемая",ПараметрыФормы,,"Новый");
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМаркеровПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокМаркеровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекСтрока = Элемент.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ID", ТекСтрока.ID);
	ПараметрыФормы.Вставить("Наименование", ТекСтрока.Наименование);
	ПараметрыФормы.Вставить("Включен", ТекСтрока.Включен);
	ПараметрыФормы.Вставить("Описание", ТекСтрока.Описание);
	ПараметрыФормы.Вставить("Категория", ТекСтрока.Категория);
	ПараметрыФормы.Вставить("КодМаркера", ТекСтрока.КодМаркера);
	
	ОткрытьФорму(ПутьКФормам+"ФормаМаркера_Управляемая",ПараметрыФормы,,ТекСтрока.ID);

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеМаркера(Параметр)
	
	Если ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ID = Параметр.ID;
		НайденныеСтроки = СписокМаркеров.НайтиСтроки(Новый Структура("ID",ID));
		Если НайденныеСтроки.Количество() = 0 Тогда
			ТекСтрока = СписокМаркеров.Добавить();
		Иначе
			ТекСтрока = НайденныеСтроки[0];
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТекСтрока,Параметр);
		
		УстановитьНомерКартинкиСтрокиМаркеров(ТекСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Фокус_ИзмененМаркер" Тогда
		ОбработатьИзменениеМаркера(Параметр);
	ИначеЕсли ИмяСобытия = "Фокус_ИзмененоДействие" Тогда
		ОбновитьСписокДействий();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокДействий()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Список = ОбработкаОбъект.Фокус_ХранениеДанных_ПолучитьСписокЭлементовСправочника("Действия");
	
	СписокДействий.Очистить();
	
	Для Каждого Эл Из Список Цикл
		ЗаполнитьЗначенияСвойств(СписокДействий.Добавить(),Эл);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура СписокМаркеровУстановитьСнятьФлажки(Пометка)
	
	Для Каждого Стр Из СписокМаркеров Цикл
		Стр.Включен = Пометка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМаркеровУстановитьФлажки(Команда)
	
	СписокМаркеровУстановитьСнятьФлажки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМаркеровСнятьФлажки(Команда)
	
	СписокМаркеровУстановитьСнятьФлажки(Ложь);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСодержимоеФайлаНастройкиМаркеров()
	
	Таб = Новый ТабличныйДокумент;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ОбработкаОбъект.ПолучитьМакет("Маркеры_МакетСохранения");
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Для Каждого Стр Из СписокМаркеров Цикл
		ОбластьСтрока.Параметры.Заполнить(Стр);
		Таб.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	Возврат Таб;
	
КонецФункции

&НаКлиенте
Процедура СохранитьНастройкиМаркеровВФайл(Команда)

	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбора.Заголовок		= "Укажите файл, в который нужно сохранить настройки маркеров";
	ДиалогВыбора.Фильтр			= "Табличный документ (*.mxl)|*.mxl";      
	ДиалогВыбора.ПолноеИмяФайла = "КонтурФокус_Маркеры.mxl";
	
	Если ДиалогВыбора.Выбрать() Тогда      
		
		ПутьКФайлу = ДиалогВыбора.ПолноеИмяФайла;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;

	Таб = ПолучитьСодержимоеФайлаНастройкиМаркеров();
	
	Таб.Записать(ПутьКФайлу);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСодержимоеФайлаНастройкиМаркеров(Адрес)
	
    ФайлПриемник = ПолучитьИмяВременногоФайла("mxl");
    ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
    ДанныеХранилища.Записать(ФайлПриемник);
    Таб = Новый ТабличныйДокумент;
    Таб.Прочитать(ФайлПриемник);
	
	Стр = 0;
	
	СписокМаркеров.Очистить();
	
	Пока Истина Цикл
		
		стр = Стр+1;
		
		ID = Таб.Область("R"+стр+"C1").Текст;
		
		Если НЕ ЗначениеЗаполнено(ID) Тогда
			Прервать;
		КонецЕсли;
		
		НоваяСтрока = СписокМаркеров.Добавить();
		НоваяСтрока.ID				= ID;
		НоваяСтрока.Наименование	= Таб.Область("R"+стр+"C2").Текст;
		НоваяСтрока.Описание		= Таб.Область("R"+стр+"C3").Текст;
		НоваяСтрока.КодМаркера		= Таб.Область("R"+стр+"C4").Текст;
		НоваяСтрока.Категория		= Таб.Область("R"+стр+"C5").Текст;
		
		УстановитьНомерКартинкиСтрокиМаркеров(НоваяСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиМаркеровИзФайла(Команда)
	
	СтандартнаяОбработка=Ложь;
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	Фильтр = "Табличный документ (*.mxl)|*.mxl";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл настройки маркеров";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		
		Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ДиалогОткрытияФайла.ПолноеИмяФайла));
			
		ПрочитатьСодержимоеФайлаНастройкиМаркеров(Адрес);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СохранитьСписокМаркеровНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.Фокус_ХранениеДанных_СохранитьСписокМаркеров(СписокМаркеров.Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура СохранитьСписокМаркеров(Команда)
	
	СохранитьСписокМаркеровНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСписокМаркеровНаСервере(ВыбПользователь)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	СохраненныйСписокМаркеров = ОбработкаОбъект.Фокус_ХранениеДанных_ПолучитьСписокМаркеров(ВыбПользователь);
	Если ТипЗнч(СохраненныйСписокМаркеров) = Тип("ТаблицаЗначений") Тогда
		СписокМаркеров.Очистить();
		Для Каждого Эл ИЗ СохраненныйСписокМаркеров Цикл
			НоваяСтрока = СписокМаркеров.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Эл);
			УстановитьНомерКартинкиСтрокиМаркеров(НоваяСтрока);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция ПрочитатьСписокПользователейНаСервере(ИмяНастройки)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.Фокус_ХранениеДанных_ПолучитьСписокПользователейССохраненнойНастройкой(ИмяНастройки);
КонецФункции

&НаКлиенте
Процедура ЗагрузитьСписокМаркеров(Команда)
	СписокПользователей=ПрочитатьСписокПользователейНаСервере("Маркеры");
	Если СписокПользователей=Неопределено Тогда
		Если Параметры.МодальностьЗапрещена Тогда 
			Выполнить("ПоказатьПредупреждение(,""Нет сохраненных настроек"",,""Контур.Фокус"")");
		Иначе
			Предупреждение("Нет сохраненных настроек",,"Контур.Фокус");
		КонецЕсли;
	Иначе
		Если Параметры.МодальностьЗапрещена Тогда 
			Оповещение=Неопределено;
			Выполнить("Оповещение = Новый ОписаниеОповещения(""СписокПользователейВыборЗавершение"", ЭтотОбъект, Неопределено)");
			Выполнить("ПоказатьВыборИзСписка(Оповещение,СписокПользователей,Элементы.ЗагрузитьСписокМаркеров)");
		Иначе
			ВыбПользователь=СписокПользователей.ВыбратьЭлемент();
			Если ВыбПользователь<>Неопределено Тогда
				ЗагрузитьСписокМаркеровНаСервере(Новый Структура("ID,Спр","",ВыбПользователь.Значение));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПользователейВыборЗавершение(ВыбранныйПользователь, ДополнительныеПараметры) Экспорт 
	Если ВыбранныйПользователь<>Неопределено Тогда
		ВыбПользователь=Новый Структура("ID,Спр","",ВыбранныйПользователь.Значение);
		ЗагрузитьСписокМаркеровНаСервере(ВыбПользователь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкиПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбновитьСтраницуЭкспрессПроверкиДляТекущейСтроки",0.1,Истина);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтраницуЭкспрессПроверкиПоИНННаСервере(ИНН)
	
	ТабДокументПроверки.Очистить();
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ДанныеМаркеры = ОбработкаОбъект.Фокус_Маркеры_ПолучитьСработавшие(СокрЛП(ИНН));
	ТабДокументПроверки.Вывести(ОбработкаОбъект.Фокус_ВыводДанных_ПоказатьСписокМаркеров(ДанныеМаркеры));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтраницуЭкспрессПроверкиДляТекущейСтроки()
	
	//Если ПроверкаСпискомСвоиМаркеры Тогда
		
	ТекСтрока = Элементы.СписокПроверки.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено Тогда
		
		ОбновитьСтраницуЭкспрессПроверкиПоИНННаСервере(ТекСтрока.ИНН);
		
	КонецЕсли;
		
	//Иначе
	//	
	//	Если РезультатыЭкспрессПроверкиВБраузере Тогда
	//		Возврат;
	//	КонецЕсли;
	//	
	//	ТекСтрока = ЭлементыФормы.СписокПроверки.ТекущиеДанные;
	//	Если НЕ ТекСтрока = Неопределено Тогда
	//		
	//		ДанныеОтчета = Фокус_ПолучитьДанные_ЭкспрессОтчет(СокрЛП(ТекСтрока.ИНН));
	//		
	//		Если ТипЗнч(ДанныеОтчета) = Тип("Структура") Тогда
	//			ЭлементыФормы.ПолеHTMLДокументаПроверка.Перейти(ДанныеОтчета.href);
	//		КонецЕсли;	
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПроверкиСпискаНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.Фокус_ХранениеДанных_СохранитьНастройку("ПроверкаСпискомСвоиМаркеры", ПроверкаСпискомСвоиМаркеры);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиПроверкиСписка(Команда)
	
	СохранитьНастройкиПроверкиСпискаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСписокПроверкиНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ТЗ = ОбработкаОбъект.Фокус_ПолучитьДанные_ЭкспрессПроверкаСписком(ОбработкаОбъект.СписокПроверки.ВыгрузитьКолонку("ИНН"));
	
	Для Каждого Стр ИЗ ТЗ Цикл
		
		НайденныеСтроки = ОбработкаОбъект.СписокПроверки.НайтиСтроки(Новый Структура("ИНН",Стр.ИНН));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока,Стр);
			НайденнаяСтрока.СсылкаВФокусе=ОбработкаОбъект.Фокус_ПолучитьЗначение(Стр.ИНН,"req","focusHref")
		КонецЦикла;
		
	КонецЦикла;

	ОбработкаОбъект.СписокПроверки.Сортировать("КрасныйКоличество Убыв,ЖелтыйКоличество Убыв,ЗеленыйКоличество Убыв, ИНН, Контрагент");
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	Элементы.СписокПроверкиПроверитьСписокПроверки.Отображение = ОтображениеКнопки.Текст;
	Элементы.СписокПроверкиПроверитьСписокПроверки.Заголовок = "Проверить";
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСписокПроверки(Команда)
	
 	Если ПроверитьСоединение() Тогда
		ПроверитьСписокПроверкиНаСервере();
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиМаркеровПоУмолчаниюНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	НовСписокМаркеров = ОбработкаОбъект.Фокус_Маркеры_ПолучитьСписокМаркеровПоУмолчанию();	
	
	СписокМаркеров.Очистить();
		
	Для Каждого Стр Из НовСписокМаркеров Цикл
		НоваяСтрока = СписокМаркеров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
		УстановитьНомерКартинкиСтрокиМаркеров(НоваяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНастройкиПоУмолчанию(Команда)

	ЗаполнитьНастройкиМаркеровПоУмолчаниюНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДействийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ОткрытьФорму(ПутьКФормам+"ФормаДействия_Управляемая",,,"Новый");
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДействийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекСтрока = Элемент.ТекущиеДанные;
	
    Если НЕ ТекСтрока = Неопределено Тогда
		ОткрытьФорму(ПутьКФормам+"ФормаДействия_Управляемая",Новый Структура("Ссылка", ТекСтрока.Ссылка),,ТекСтрока.Ссылка);
    КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокДействийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаСервере
Процедура Фокус_ОтправитьТестовыйEmailНаСервере(Адрес)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.Фокус_ОтправитьТестовыйEmail(Адрес);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьТестовоеПисьмо(Команда)
	
	СохранитьНастройкиНаблюденияНаСервере();

	Адрес = "";
	
	Если ВвестиСтроку(Адрес,"Укажите ваш email:") Тогда
		Фокус_ОтправитьТестовыйEmailНаСервере(Адрес);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабНаблюденияОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если Элемент.ТекущаяОбласть.Имя="ГиперссылкаФокус" и ЗначениеЗаполнено(Расшифровка) Тогда
		СтандартнаяОбработка=Ложь;
		ЗапуститьПриложение(Расшифровка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.ПредупреждениеWin10.Видимость=НЕ РезультатыЭкспрессПроверкиВБраузере;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатистикуИспользования()
	СтрСтат=СформироватьСостояниеИспользованияКлючаНаСервере();
	Если СтрСтат<>Неопределено Тогда
		Элементы.НадписьСтатистикаИспользования.Заголовок="Ключ: осталось "+(СтрСтат.ЗначениеОграничения-СтрСтат.Использовано)+" из "+СтрСтат.ЗначениеОграничения+": до "+Формат(СтрСтат.ДатаОкончания,"ДФ=dd.MM.yyyy");
		Элементы.НадписьСтатистикаИспользования.ЦветТекста=СтрСтат.ЦветРаскраски;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    Если Поле<>Неопределено Тогда
        Если Поле.Имя="СписокПроверкиСсылкаВФокусе" и ЗначениеЗаполнено(Объект.СписокПроверки[ВыбраннаяСтрока].СсылкаВФокусе) Тогда
            ЗапуститьПриложение(Объект.СписокПроверки[ВыбраннаяСтрока].СсылкаВФокусе);
            СтандартнаяОбработка=Ложь;
        ИначеЕсли Поле.Имя="СписокПроверкиКонтрагент" и ЗначениеЗаполнено(Объект.СписокПроверки[ВыбраннаяСтрока].Контрагент) Тогда
            П=Новый Структура("Ссылка",Объект.СписокПроверки[ВыбраннаяСтрока].Контрагент);
            Форма=ПолучитьФорму("Справочник.Контрагенты.ФормаОбъекта",П);
            Форма.Открыть();
        Иначе
            ТекДанные = Элементы.СписокПроверки.ТекущиеДанные;
            
            Если НЕ ТекДанные = Неопределено Тогда
                
                СсылкаНаСтраницу = ПолучитьСсылкуЭкспрессПроверки(ТекДанные.ИНН);
                
                Если ЗначениеЗаполнено(СсылкаНаСтраницу) Тогда
                    Если РезультатыЭкспрессПроверкиВБраузере Тогда
                        ЗапуститьПриложение(СсылкаНаСтраницу);
                    Иначе
                        ПараметрыФормы = Новый Структура("Ссылка",СсылкаНаСтраницу);
                        ОткрытьФорму(ПутьКФормам+"ФормаРезультатовЭкспрессПроверки_Управляемая",ПараметрыФормы);
                    КонецЕсли;        
                КонецЕсли;
                
            КонецЕсли;    
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиМаркеровХранитьИндивидуальноПоПользователямПриИзменении(Элемент)
	СохранитьОбщуюНастройку("ИндивидуальныйНастройкиМаркеров",НастройкиМаркеровХранитьИндивидуальноПоПользователям);	
КонецПроцедуры
