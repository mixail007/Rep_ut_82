
Функция ПолучитьНаправленияПродаж()
	
	Мас = Новый Массив;
	Мас.Добавить(Справочники.НаправленияПродаж.Москва);
	Мас.Добавить(Справочники.НаправленияПродаж.Подмосковье);
	Мас.Добавить(Справочники.НаправленияПродаж.ЦентрРоссии);
	Мас.Добавить(Справочники.НаправленияПродаж.СеверЮг);
	Мас.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(18)); // "Юг"
	Мас.Добавить(Справочники.НаправленияПродаж.ИнтернетМагазины);
	Мас.Добавить(Справочники.НаправленияПродаж.НижнийНовгород);  // Поволжье
	Мас.Добавить(Справочники.НаправленияПродаж.Беларусь);
	Мас.Добавить(Справочники.НаправленияПродаж.БондаренкоКорпоративныеКлиенты);
	Мас.Добавить(Справочники.НаправленияПродаж.Конечники);
	Мас.Добавить(Справочники.НаправленияПродаж.Тендеры);
	Мас.Добавить(Справочники.НаправленияПродаж.ФилиалРнД);
	Мас.Добавить(Справочники.НаправленияПродаж.ФилиалСПб);
	Мас.Добавить(Справочники.НаправленияПродаж.ФилиалЕкб);
	
	Возврат Мас;
	
КонецФункции // ПолучитьНаправленияПродаж()

Функция ПолучитьДанные(Подразделения, ДнейПросрочки=13)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо КАК Менеджер,
	|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорПродажи,
	|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
	|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты КАК ДатаОплаты,
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаДолга,
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаПросроченногоДолга,
	|	0 КАК НачислилиПеней,
	|	ВЫБОР
	|		КОГДА ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ТипДоговора = &Пени
	|			ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыставилиПеней,
	|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение КАК Подразделение,
	|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж КАК НаправлениеПродаж
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	|			,
	|			(ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ДоговорКонтрагента.ВидДоговора = &СКомиссионером)
	|				И ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&НаправленияПродаж)) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Менеджер,
	|	вт.Контрагент,
	|	вт.ДоговорПродажи,
	|	вт.Сделка,
	|	вт.ДатаОтгрузки,
	|	вт.ДатаОплаты,
	|	СУММА(вт.СуммаДолга) КАК СуммаДолга,
	|	СУММА(вт.СуммаПросроченногоДолга) КАК СуммаПросроченногоДолга,
	|	СУММА(вт.НачислилиПеней) КАК НачислилиПеней,
	|	СУММА(вт.ВыставилиПеней) КАК ВыставилиПеней,
	|	вт.Подразделение,
	|	вт.НаправлениеПродаж
	|ПОМЕСТИТЬ свод
	|ИЗ
	|	вт КАК вт
	|ГДЕ
	|	99=99
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.Менеджер,
	|	вт.Контрагент,
	|	вт.ДоговорПродажи,
	|	вт.Сделка,
	|	вт.ДатаОтгрузки,
	|	вт.ДатаОплаты,
	|	вт.Подразделение,
	|	вт.НаправлениеПродаж
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
	|	СУММА(ВЫБОР
	|			КОГДА &УчитыватьВзимныеОбязательства
	|				ТОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток - ЕСТЬNULL(УпрВзаимозачеты.Сумма, 0)
	|			ИНАЧЕ ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
	|		КОНЕЦ) КАК СуммаУпрОстаток
	|ПОМЕСТИТЬ ПДЗ
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	|			&ТекДата,
	|			(ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ДоговорКонтрагента.ВидДоговора = &СКомиссионером)
	|				И Сделка.ДатаОплаты < &ТекДата) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сделка КАК Сделка,
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Сумма КАК Сумма
	|		ИЗ
	|			Документ.УправленческийЗачетВзаимныхОбязательств.СуммыДолга КАК УправленческийЗачетВзаимныхОбязательствСуммыДолга
	|		ГДЕ
	|			УправленческийЗачетВзаимныхОбязательствСуммыДолга.Ссылка.Проведен
	|			И УправленческийЗачетВзаимныхОбязательствСуммыДолга.ВидЗадолженности = ЗНАЧЕНИЕ(Перечисление.ВидыЗадолженности.Дебиторская)) КАК УпрВзаимозачеты
	|		ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = УпрВзаимозачеты.ДоговорКонтрагента
	|			И ВзаиморасчетыСКонтрагентамиОстатки.Сделка = УпрВзаимозачеты.Сделка
	|ГДЕ
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	свод.Менеджер,
	|	свод.Контрагент,
	|	свод.Сделка,
	|	свод.ДатаОтгрузки,
	|	свод.ДатаОплаты,
	|	свод.СуммаДолга,
	|	ПДЗ.СуммаУпрОстаток КАК СуммаПросроченногоДолга,
	|	свод.НаправлениеПродаж,
	|	ВЫБОР
	|		КОГДА НЕ ПДЗ.Сделка ЕСТЬ NULL 
	|				И ЕСТЬNULL(ПДЗ.СуммаУпрОстаток, 0) > 0
	|			ТОГДА ВЫБОР
	|					КОГДА РАЗНОСТЬДАТ(ВЫБОР
	|								КОГДА ЕСТЬNULL(ПДЗ.Сделка.ДатаОплаты, 0) = 0
	|										ИЛИ ПДЗ.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|									ТОГДА ПДЗ.Сделка.Дата
	|								ИНАЧЕ ПДЗ.Сделка.ДатаОплаты
	|							КОНЕЦ, &ТекДата, ДЕНЬ) + 1 > 0
	|						ТОГДА РАЗНОСТЬДАТ(ВЫБОР
	|									КОГДА ЕСТЬNULL(ПДЗ.Сделка.ДатаОплаты, 0) = 0
	|											ИЛИ ПДЗ.Сделка.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|										ТОГДА ПДЗ.Сделка.Дата
	|									ИНАЧЕ ПДЗ.Сделка.ДатаОплаты
	|								КОНЕЦ, &ТекДата, ДЕНЬ) + 1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДнейПросрочено
	|ПОМЕСТИТЬ Итого
	|ИЗ
	|	свод КАК свод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПДЗ КАК ПДЗ
	|		ПО свод.Сделка = ПДЗ.Сделка
	|			И свод.ДоговорПродажи = ПДЗ.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	зтИтогоОбъединен.Менеджер КАК Менеджер,
	|	зтИтогоОбъединен.Контрагент КАК Контрагент,
	|	МАКСИМУМ(зтИтогоОбъединен.СуммаПросроченногоДолга) КАК СуммаПросроченногоДолга,
	|	зтИтогоОбъединен.НаправлениеПродаж КАК НаправлениеПродаж,
	|	МАКСИМУМ(зтИтогоОбъединен.ДнейПросрочено) КАК ДнейПросрочено
	|ИЗ
	|	(ВЫБРАТЬ
	|		Итого.Менеджер КАК Менеджер,
	|		Итого.Контрагент КАК Контрагент,
	|		СУММА(Итого.СуммаПросроченногоДолга) КАК СуммаПросроченногоДолга,
	|		Итого.НаправлениеПродаж КАК НаправлениеПродаж,
	|		МАКСИМУМ(Итого.ДнейПросрочено) КАК ДнейПросрочено
	|	ИЗ
	|		Итого КАК Итого
	|	ГДЕ
	|		Итого.ДнейПросрочено > &ДнейПросрочки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Итого.Менеджер,
	|		Итого.Контрагент,
	|		Итого.НаправлениеПродаж
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Итого.Менеджер,
	|		Итого.Контрагент,
	|		СУММА(Итого.СуммаПросроченногоДолга),
	|		Итого.НаправлениеПродаж,
	|		МАКСИМУМ(Итого.ДнейПросрочено)
	|	ИЗ
	|		Итого КАК Итого
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Итого.Менеджер,
	|		Итого.Контрагент,
	|		Итого.НаправлениеПродаж
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(Итого.СуммаПросроченногоДолга) >= 500000) КАК зтИтогоОбъединен
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПоследняяЗаписьПоСудам.Контрагент КАК Контрагент,
	|			СудебныеРазбирательстваСДебиторами.ДатаНачалаСудебногоПроцесса КАК ДатаНачалаСудебногоПроцесса
	|		ИЗ
	|			(ВЫБРАТЬ
	|				СудебныеРазбирательстваСДебиторами.Контрагент КАК Контрагент,
	|				МАКСИМУМ(СудебныеРазбирательстваСДебиторами.НомерЗаписи) КАК НомерЗаписи
	|			ИЗ
	|				РегистрСведений.СудебныеРазбирательстваСДебиторами КАК СудебныеРазбирательстваСДебиторами
	|			
	|			СГРУППИРОВАТЬ ПО
	|				СудебныеРазбирательстваСДебиторами.Контрагент) КАК ПоследняяЗаписьПоСудам
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СудебныеРазбирательстваСДебиторами КАК СудебныеРазбирательстваСДебиторами
	|				ПО ПоследняяЗаписьПоСудам.Контрагент = СудебныеРазбирательстваСДебиторами.Контрагент
	|					И ПоследняяЗаписьПоСудам.НомерЗаписи = СудебныеРазбирательстваСДебиторами.НомерЗаписи) КАК зтСуды
	|		ПО зтИтогоОбъединен.Контрагент = зтСуды.Контрагент
	|ГДЕ
	|	зтСуды.ДатаНачалаСудебногоПроцесса ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	зтИтогоОбъединен.Менеджер,
	|	зтИтогоОбъединен.Контрагент,
	|	зтИтогоОбъединен.НаправлениеПродаж
	|
	|УПОРЯДОЧИТЬ ПО
	|	НаправлениеПродаж,
	|	Менеджер,
	|	Контрагент
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	НаправленияПродаж = ПолучитьНаправленияПродаж();
	
	Если Подразделения.Количество()>0 тогда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"99=99","вт.Подразделение В(&Подразделения)");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НаправленияПродаж"            , НаправленияПродаж);
	Запрос.УстановитьПараметр("Пени"                         , Справочники.ТипыДоговоров.Пени);
	Запрос.УстановитьПараметр("СПокупателем"                 , Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	Запрос.УстановитьПараметр("СКомиссионером"               , Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	Запрос.УстановитьПараметр("УчитыватьВзимныеОбязательства", УчитыватьВзимныеОбязательства);
	Запрос.УстановитьПараметр("ТекДата"                      , Период);
	Запрос.УстановитьПараметр("ДнейПросрочки"                , ДнейПросрочки);
	Запрос.УстановитьПараметр("Подразделения"                , Подразделения);
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат Результат;
	
КонецФункции // ПолучитьДанные()

Процедура ПополнитьТелоПисьма(ТелоПисьма, Выборка)
	
	НомерСтроки = 1;
	Пока Выборка.Следующий() Цикл
		ТелоПисьма = ТелоПисьма + "<tr>"; 
		ТелоПисьма = ТелоПисьма + "<td>" + НомерСтроки + "</td>"; 
		ТелоПисьма = ТелоПисьма + "<td>" + Выборка.НаправлениеПродаж.Наименование + "</td>"; 
		ТелоПисьма = ТелоПисьма + "<td>" + Выборка.Менеджер.Наименование + "</td>"; 
		ТелоПисьма = ТелоПисьма + "<td>" + Выборка.Контрагент.Наименование + "</td>"; 
		ТелоПисьма = ТелоПисьма + "<td>" + Выборка.СуммаПросроченногоДолга + "</td>"; 
		ТелоПисьма = ТелоПисьма + "<td>" + Выборка.ДнейПросрочено + "</td>"; 
		ТелоПисьма = ТелоПисьма + "</tr>"+Символы.ПС;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры // ПополнитьТелоПисьма()

Функция СформироватьТекстСообщения(Данные)
	
	ТелоПисьма = "";
	НомПП = 0; 
	
	ТелоПисьма = "<HTML><HEAD></HEAD><BODY>" + Символы.ПС; 
	ТелоПисьма = ТелоПисьма + "<META HTTP-EQUIV=""Content-Type"" CONTENT=""text/html; charset=windows-1251"">" + Символы.ПС; 
	ТелоПисьма = ТелоПисьма + "<h3>ПДЗ сроком 14 дней и более или суммой 500 т.р. и более, на " + СокрЛП(Период) + "</h3>" + Символы.ПС; 
	ТелоПисьма = ТелоПисьма + "<table border='1px'><th>№</th><th>Направл. продаж</th><th>Менеджер</th><th>Контрагент</th><th>Сумма ПДЗ</th><th>Дней просрочено</th>"+Символы.ПС; 
	
	Выборка = Данные[4].Выбрать();
	ПополнитьТелоПисьма(ТелоПисьма, Выборка);
	ТелоПисьма = ТелоПисьма + Символы.ПС + "</table>" + Символы.ПС;
	
	// {{ Решили делать одной таблицей
	//ТелоПисьма = ТелоПисьма + "<br />" + "<br />";
	//
	//ТелоПисьма = ТелоПисьма + "<h3>ПДЗ суммой 500 т.р. и более на "+СокрЛП(Период)+"</h3>"+ Символы.ПС; 
	//ТелоПисьма = ТелоПисьма + "<table border='1px'><th>№</th><th>Направл. продаж</th><th>Менеджер</th><th>Контрагент</th><th>Сумма ПДЗ</th><th>Дней просрочено</th>"+Символы.ПС; 
	//
	//Выборка = Данные[5].Выбрать();
	//ПополнитьТелоПисьма(ТелоПисьма, Выборка);
	//ТелоПисьма = ТелоПисьма + Символы.ПС+ "</table>"+Символы.ПС; 
	// }} Решили делать одной таблицей
	
	ТелоПисьма = ТелоПисьма + "</BODY></HTML>"; 
	
	Возврат ТелоПисьма;
	
КонецФункции // СформироватьТекстСообщения()

Процедура ОтравитьДанные(Данные, АдресПочты = "serkov@yst.ru")
	
	СписокФайловВложений = новый СписокЗначений;
	УЗ = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("no-reply@yst76.ru");
    Тема = "ПДЗ";
	ТекстСообщения = СформироватьТекстСообщения(Данные);
	
	ПослатьЭлектронноеПисьмоЛок(АдресПочты, СписокФайловВложений, УЗ, ТекстСообщения, Тема);
	
КонецПроцедуры // ОтравитьДанные()

Процедура ВыполнитьРассылкуОПДЗ() Экспорт
	//Серков
	Подразделения=новый СписокЗначений();
	Данные = ПолучитьДанные(Подразделения,13);
	ОтравитьДанные(Данные, "serkov@yst.ru");
	//ОтравитьДанные(Данные, "smirnov@yst.ru");
	
	//Марешева
	Подразделения=новый СписокЗначений();
	Подразделения.Добавить(Справочники.Подразделения.НайтиПоКоду("00112")); //Спб
	Подразделения.Добавить(Справочники.Подразделения.НайтиПоКоду("00106")); //РнД
	Подразделения.Добавить(Справочники.Подразделения.НайтиПоКоду("00138")); //Екат
	Данные = ПолучитьДанные(Подразделения,6);
	ОтравитьДанные(Данные, "maresheva@yst.ru");
	//ОтравитьДанные(Данные, "smirnov@yst.ru");
	
КонецПроцедуры // ВыполнитьРассылкуОПДЗ()

Процедура ПослатьЭлектронноеПисьмоЛок(АдресПолучателя, СписокФайловВложений, УЗ, ТекстСообщения = "", Тема = "", Отправитель="",Копии = "", Уведомления = Ложь)
	
	ИПП=Новый ИнтернетПочтовыйПрофиль;
	ИПП.АдресСервераSMTP=УЗ.SMTPСервер;
	ИПП.ПортSMTP=УЗ.ПортSMTP;
	Если УЗ.ТребуетсяSMTPАутентификация Тогда
		ИПП.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
		ИПП.ПарольSMTP         = УЗ.ПарольSMTP;
		ИПП.ПользовательSMTP   = УЗ.ЛогинSMTP;
	Иначе
		ИПП.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
		ИПП.ПарольSMTP         = "";
		ИПП.ПользовательSMTP   = "";
	КонецЕсли;
	Письмо=Новый ИнтернетПочтовоеСообщение;
	Письмо.Отправитель.Адрес 		   = ?(Отправитель="", УЗ.АдресЭлектроннойПочты, Отправитель);
	Письмо.Отправитель.ОтображаемоеИмя = ?(Отправитель="", УЗ.Наименование, 	     Отправитель);
	Если  Копии<>"" тогда
		Письмо.Копии.Добавить(Копии);
	КонецЕсли;
	
	// Сакулина
	 Если Уведомления = Истина Тогда
		 Письмо.УведомитьОДоставке = Истина;
		 Письмо.УведомитьОПрочтении = Истина;
		 Письмо.АдресаУведомленияОДоставке.Добавить(УЗ.АдресЭлектроннойПочты);
		 Письмо.АдресаУведомленияОПрочтении.Добавить(УЗ.АдресЭлектроннойПочты);
	 КонецЕсли;
	 //Сакулина
	 
	//+++( 19.12.2011 - разбор адреса на несколько адресов
	i = Найти(АдресПолучателя,";"); j=Найти(АдресПолучателя, ",");
	k=?(i>0 и i>j,  i, ?(j>0 и j>i, j, 0) );
	
	Если i=0 и j=0 тогда
		Письмо.Получатели.Добавить(АдресПолучателя);
	иначе
		АдрОстаток = СокрЛП(АдресПолучателя);
		пока (k>0) цикл
			Адр1 = Лев(АдрОстаток, k-1);
			Если СокрЛП(Адр1)<>"" и Найти(Адр1,"@")>0 и Найти(Адр1,".")>0 тогда
				Письмо.Получатели.Добавить(Адр1);
			КонецЕсли;
			АдрОстаток = Прав(АдрОстаток, стрДлина(АдрОстаток)-k);
			i = Найти(АдрОстаток,";"); j=Найти(АдрОстаток, ",");
			k=?(i>0 и i>j,  i, ?(j>0 и j>i, j, 0) );
		КонецЦикла;
		Если СокрЛП(АдрОстаток)<>"" и Найти(АдрОстаток,"@")>0 и Найти(АдрОстаток,".")>0 тогда
			Письмо.Получатели.Добавить(АдрОстаток);
		КонецЕсли;
		
	КонецЕсли; //+++ )
	
	Если ЗначениеЗаполнено(СписокФайловВложений) И СписокФайловВложений.Количество()>0 Тогда
		Для Каждого ТекАдр Из СписокФайловВложений Цикл
			Письмо.Вложения.Добавить(ТекАдр.Значение);
		КонецЦикла;
	КонецЕсли;
	//Письмо.АдресаУведомленияОДоставке.Добавить(УЗ.АдресЭлектроннойПочты);
	//Письмо.АдресаУведомленияОПрочтении.Добавить(УЗ.АдресЭлектроннойПочты);

	
	Письмо.Тема= Тема;
	Если УЗ.АдресЭлектроннойПочты = "formula.auto.plus@yandex.ru" Тогда
		Письмо.ИмяОтправителя ="ООО ""Формула Авто Плюс"", г.Ярославль";
		Письмо.Организация ="ООО ""Формула Авто Плюс"", г.Ярославль";
	Иначе
		
		Письмо.ИмяОтправителя ="ЗАО ТК ""Яршинторг"", г.Ярославль";
		Письмо.Организация ="ЗАО ТК ""Яршинторг"", г.Ярославль";
	КонецЕсли;
	
	Письмо.Тексты.Добавить(ТекстСообщения, ТипТекстаПочтовогоСообщения.HTML);
	
	Почта=Новый ИнтернетПочта;
	попытка
		Почта.Подключиться(ИПП);
		Почта.Послать(Письмо);
		Почта.Отключиться();
		#Если Клиент Тогда
			сообщить(" >>>  Письмо отправлено на эл.адрес: "+АдресПолучателя+". "+строка(СписокФайловВложений.Количество())+" вложенных файлов...", СтатусСообщения.Информация);
		#КонецЕсли
	исключение
		Почта.Отключиться();
		#Если Клиент Тогда
			сообщить("xxxxx Ошибка при отправке письма на эл.адрес: "+АдресПолучателя+" - "+ОписаниеОшибки(), СтатусСообщения.Внимание);
		#КонецЕсли
	конецПопытки;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////
Период = ТекущаяДата();