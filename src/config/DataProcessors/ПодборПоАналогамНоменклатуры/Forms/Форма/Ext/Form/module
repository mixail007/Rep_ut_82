
Перем ТипЦен;
Процедура НайтиНажатие(Элемент)
	
	Перем Склад;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ НомАналоги.Номенклатура, НомАналоги.Номенклатура.Код Код, НомАналоги.Номенклатура.Артикул Артикул,
|	НомАналоги.Номенклатура.ЕдиницаХраненияОстатков ЕдиницаИзмерения,
|	НомАналоги.Номенклатура.Производитель Производитель,ВЫБОР КОГДА НомАналоги.ОсновнойНомер>0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ ОсновнойНомер,
|Остатки.КоличествоСвободныйОстаток Остаток,
|ЕСТЬNULL (ЦеныСрезПоследних.Цена,0) Цена ИЗ
|(ВЫБРАТЬ
|Номенклатура.Ссылка КАК Номенклатура,
|ВЫБОР КОГДА 	(Номенклатура.АртикулСокр ПОДОБНО &Артикул) ИЛИ (Номенклатура.Артикул ПОДОБНО &Артикул) ТОГДА
|1
|ИНАЧЕ 0
|КОНЕЦ
|КАК ОсновнойНомер
|ИЗ Справочник.Номенклатура КАК Номенклатура
|ГДЕ Номенклатура.Ссылка в (&СписокНоменклатура) и Номенклатура.Ссылка в Иерархии (&Автозапчасти)) НомАналоги
|	ЛЕВОЕ СОЕДИНЕНИЕ
|		(
|		ВЫБРАТЬ
|			ТоварыНаСкладах.Номенклатура КАК Номенклатура,
|			СУММА(ВЫБОР КОГДА ТоварыНаСкладах.КоличествоОстаток ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ТоварыНаСкладах.КоличествоОстаток КОНЕЦ) КАК КоличествоСвободныйОстаток
|		ИЗ	РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад = &Склад и Номенклатура в (&СписокНоменклатура)) КАК ТоварыНаСкладах
|		СГРУППИРОВАТЬ ПО	ТоварыНаСкладах.Номенклатура
|		) КАК Остатки
|	ПО
|		НомАналоги.Номенклатура = Остатки.Номенклатура
|	ЛЕВОЕ СОЕДИНЕНИЕ 
|РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,ТипЦен = &ТипЦен и Номенклатура в (&СписокНоменклатура)) КАК ЦеныСрезПоследних
| ПО НомАналоги.Номенклатура = ЦеныСрезПоследних.Номенклатура";

ЗапросРазличные=Новый Запрос;

ТекстПоНоменклатуреРазличные="ВЫБРАТЬ РАЗЛИЧНЫЕ  Номенклатура ИЗ
|(ВЫБРАТЬ
|	Номенклатура.Ссылка КАК Номенклатура,
|	ИСТИНА КАК ОсновнойНомер
|ИЗ
|	Справочник.Номенклатура КАК Номенклатура
|ГДЕ
|	(Номенклатура.АртикулСокр ПОДОБНО &Артикул
|			ИЛИ Номенклатура.Артикул ПОДОБНО &Артикул))А ";
					 
ПоискАртикул=?(ИспользоватьМаску,Артикул,"%"+СокрЛП(Артикул)+"%");					 
ЗапросРазличные.Текст=ТекстПоНоменклатуреРазличные;
ЗапросРазличные.УстановитьПараметр("Артикул",ПоискАртикул);
спНоменклатура=Новый СписокЗначений;
спНоменклатура.ЗагрузитьЗначения(ЗапросРазличные.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура"));

// в спНоменклатура находятся  элементы только из справоника Номенклатура и без Аналогов
ЗапросАналоги = Новый Запрос;
ЗапросАналоги.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
|Замена  ИЗ 
| (    // выборка по номенклатуре
|ВЫБРАТЬ
|   ВЫБОР КОГДА Аналоги.Заменитель.АртикулСокр ПОДОБНО &Артикул
|			ИЛИ Аналоги.Заменитель.Артикул ПОДОБНО &Артикул
|
|   ТОГДА
|   Аналоги.Заменяемое 
|   ИНАЧЕ
|   Аналоги.Заменитель
|   КОНЕЦ Замена 
|	
|ИЗ
|	РегистрСведений.Аналоги КАК Аналоги
|ГДЕ
|	ВЫБОР
|			КОГДА Аналоги.Заменитель ССЫЛКА Справочник.Номенклатура
|				ТОГДА Аналоги.Заменитель.АртикулСокр ПОДОБНО &Артикул
|						ИЛИ Аналоги.Заменитель.Артикул ПОДОБНО &Артикул
|						
|			ИНАЧЕ ЛОЖЬ
|	КОНЕЦ
|	  ИЛИ
|	ВЫБОР
|			КОГДА Аналоги.Заменяемое ССЫЛКА Справочник.Номенклатура
|				ТОГДА Аналоги.Заменяемое.АртикулСокр ПОДОБНО &Артикул
|						ИЛИ Аналоги.Заменяемое.Артикул ПОДОБНО &Артикул
|						
|			ИНАЧЕ ЛОЖЬ
|	КОНЕЦ  
|ОБЪЕДИНИТЬ
|  // выборка по строкам заменяемое
|ВЫБРАТЬ
|   Аналоги.Заменяемое  Замена 
| 
|ИЗ
|	РегистрСведений.Аналоги КАК Аналоги
|ГДЕ
|	ВЫБОР
|			КОГДА не Аналоги.Заменитель ССЫЛКА Справочник.Номенклатура
|				ТОГДА Аналоги.АртикулСокр ПОДОБНО &Артикул
|						ИЛИ Аналоги.Заменитель ПОДОБНО &Артикул
|						
|			ИНАЧЕ ЛОЖЬ
|	КОНЕЦ
|	  ИЛИ
|	ВЫБОР
|			КОГДА не Аналоги.Заменяемое ССЫЛКА Справочник.Номенклатура
|				ТОГДА Аналоги.АртикулСокр ПОДОБНО &Артикул
|						ИЛИ Аналоги.Заменяемое ПОДОБНО &Артикул
|						
|			ИНАЧЕ ЛОЖЬ
|	КОНЕЦ  
|ОБЪЕДИНИТЬ	
|  // выборка по строкам  заменитель
|ВЫБРАТЬ
|   Аналоги.Заменитель Замена 
| 
|ИЗ
|	РегистрСведений.Аналоги КАК Аналоги
|ГДЕ
|	ВЫБОР
|			КОГДА не Аналоги.Заменитель ССЫЛКА Справочник.Номенклатура
|				ТОГДА Аналоги.АртикулСокр ПОДОБНО &Артикул
|						ИЛИ Аналоги.Заменитель ПОДОБНО &Артикул
|						
|			ИНАЧЕ ЛОЖЬ
|	КОНЕЦ
|	  ИЛИ
|	ВЫБОР
|			КОГДА не Аналоги.Заменяемое ССЫЛКА Справочник.Номенклатура
|				ТОГДА Аналоги.АртикулСокр ПОДОБНО &Артикул
|						ИЛИ Аналоги.Заменяемое ПОДОБНО &Артикул
|						
|			ИНАЧЕ ЛОЖЬ
|	КОНЕЦ 	
|	) А
| ГДЕ ЗАМЕНА не в (&спНоменклатура)
|";

ЗапросАналоги.УстановитьПараметр("Артикул",ПоискАртикул);
ЗапросАналоги.УстановитьПараметр("спНоменклатура",спНоменклатура);
спАналоги=Новый СписокЗначений;
спАналоги=ЗапросАналоги.Выполнить().Выгрузить().ВыгрузитьКолонку("Замена");

// загружаем из аналогов в наш справочник ТОЛЬКО элементы номенклатуры
Для каждого элементСписка из спАналоги Цикл
	Если ТипЗнч(элементСписка)=Тип("СправочникСсылка.Номенклатура") Тогда
		спНоменклатура.Добавить(элементСписка);
	КонецЕсли;	
КонецЦикла;	
	
	
Если не ЗначениеНеЗаполнено(СтруктураИсходныхПараметров) Тогда   // по подбору
	СтруктураИсходныхПараметров.Свойство("Склад",Склад);
	СтруктураИсходныхПараметров.Свойство("ТипЦен",ТипЦен);
Иначе
	Склад=ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнойСклад");
	ТипЦен = Константы.ТипЦенРозница.Получить();
КонецЕсли;

Запрос.УстановитьПараметр("Склад", Склад);
Запрос.УстановитьПараметр("ТипЦен", ТипЦен);
Запрос.УстановитьПараметр("Артикул", ПоискАртикул);
Запрос.УстановитьПараметр("СписокНоменклатура",спНоменклатура);
Запрос.УстановитьПараметр("Автозапчасти",Справочники.Номенклатура.Автозапчасти);
									 
НоменклатураДляПодбора.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура НоменклатураДляПодбораПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Вставить содержимое обработчика.
ОформлениеСтроки.ЦветФона = ?(ДанныеСтроки.ОсновнойНомер,WebЦвета.Лазурный,ЦветаСтиля.ЦветФонаПоля);


КонецПроцедуры

Процедура НоменклатураДляПодбораВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если не ЗначениеНеЗаполнено(СтруктураИсходныхПараметров) Тогда  // по подбору
		СтруктураПодбора = Новый Структура();
		СтруктураПодбора.Вставить("Команда",             "ПодборВТабличнуюЧастьТовары");
		СтруктураПодбора.Вставить("ВалютаЦены",          ТипЦен.ВалютаЦены);
		СтруктураПодбора.Вставить("Номенклатура",        ВыбраннаяСтрока.Номенклатура);
		СтруктураПодбора.Вставить("ЕдиницаИзмерения",    ВыбраннаяСтрока.ЕдиницаИзмерения);
		СтруктураПодбора.Вставить("Склад",               ВыбраннаяСтрока.Склад);
		СтруктураПодбора.Вставить("СпособЗаполненияЦен", Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры);
		СтруктураПодбора.Вставить("Цена",                ВыбраннаяСтрока.Цена);
		//СтруктураПодбора.Вставить("ТипЦен",                ВыбраннаяСтрока.Цена);
		СтруктураПодбора.Вставить("Количество",          1);
		ОповеститьОВыборе(СтруктураПодбора);
	Иначе
		ФормаСписка=Справочники.Номенклатура.ПолучитьФормуСписка( );
		ФормаСписка.Открыть();
		ФормаСписка.ЭлементыФормы.Список.ТекущаяСтрока=ВыбраннаяСтрока.Номенклатура;
	КонецЕсли;



КонецПроцедуры

Процедура ПриОткрытии()
	
	//СтруктураИсходныхПараметров=Новый Структура("Склад,ТипЦен");
	//СтруктураИсходныхПараметров.Склад=ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнойСклад");
	//СтруктураИсходныхПараметров.ТипЦен=ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнойТипЦенПродажи");
	//Если ЗначениеНеЗаполнено(СтруктураИсходныхПараметров.Склад) Тогда
	//	Сообщить("Основной склад для пользователя не введен!",СтатусСообщения.Важное);
	//	ЭтаФорма.Закрыть();
	//КонецЕсли;	
	//Если ЗначениеНеЗаполнено(СтруктураИсходныхПараметров.ТипЦен) Тогда
	//	Сообщить("Тип цен продажи для пользователя не введен!",СтатусСообщения.Важное);
	//	ЭтаФорма.Закрыть();
	//КонецЕсли;	

КонецПроцедуры




