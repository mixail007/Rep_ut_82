Перем мИмяФайлаОтчета, мИмяФайлаТоваров;

// запись товаров из таблицы 1С во внутреннюю базу товаров ККМ
//
// Параметры:
//  Объект        - объект подключенного торгового оборудования
//  НомерСекции   - номер секции
//  Касса         - касса ККМ, для которой выгружаются товары
//  КаталогОбмена - каталог обмена с кассой ККМ
//  СписокТоваров - таблица с товарами, их ценами и количеством
//  НомерЛУ       - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ЗагрузитьТовары(Объект, НомерСекции, Касса, КаталогОбмена, СписокТоваров, НомерЛУ)

	ТекстДокумент = Новый ТекстовыйДокумент();

	// сформируем шапку
	ТекстДокумент.ДобавитьСтроку("##@@&&");     // строка инициализации
	ТекстДокумент.ДобавитьСтроку("#");          // признак загрузки

	Для Каждого Товар Из СписокТоваров Цикл

		ТекстДокумент.ДобавитьСтроку(
			Товар.Код + ";" +                                                                //  1 - код товара
			Товар.ШтрихКод + ";" +                                                           //  2 - штрихкод товара
			СокрП(Товар.Наименование) + ";" +                                                //  3 - наименование
			СокрП(Товар.Наименование) + ";" +                                                //  4 - наименование для кассы
			СтрЗаменить(СокрЛП(Формат(Товар.Цена, "ЧДЦ=2")), Символы.НПП, "") + ";" +        //  5 - цена
			СтрЗаменить(СокрЛП(Формат(Товар.Количество, "ЧДЦ=3")), Символы.НПП, "") + ";" +  //  6 - количество
			"0;" +                                                                           //  7 - вседа 0
			"0;" +                                                                           //  8 - скидка на товар
			"0;" +                                                                           //  9 - максимальная скидка
			"0;" +                                                                           // 10 - дата начала действия скидки
			"0;" +                                                                           // 11 - дата окончания действия скидки
			"0;" +                                                                           // 12 - время начала действия скидки
			"0;" +                                                                           // 13 - время окончания действия скидки
			"1;" +                                                                           // 14 - коэффициент пересчета всегда 1
			"0;" +                                                                           // 15 - код товара с базовой единицей
			СокрЛП(Товар.Родитель) + ";" +                                                   // 16 - код родительской группы
			?(Товар.Группа, "0;", "1;") +                                                    // 17 - выгружаем товар (1) или группу (0)
			Товар.Уровень + ";" +                                                            // 18 - номер уровня иерархического списка
			"0;" +                                                                           // 19 - номер секции
			";;"                                                                             // 20 - 
			);

	КонецЦикла;

	Попытка
		ТекстДокумент.Записать(КаталогОбмена + мИмяФайлаТоваров, КодировкаТекста.ANSI);
	Исключение
		ОписаниеРезультата = "ошибка записи товаров в текстовый файл.";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Возврат "";

КонецФункции // ЗагрузитьТовары()

// функция возвращает сумму чека
//
// Параметры:
//  Отчет        - отчет со строками всех чеков за снимаемую смену
//  КоличествоСтрокПредыдущихЧеков - количество строк отчета, относящихся к предыдущим чекам
//
// Возвращаемое значение:
//  сумма чека
//
Функция ПолучитьСуммуЧека(Отчет, КоличествоСтрокПредыдущихЧеков)

	Сумма = 0;
	Для Счетчик = КоличествоСтрокПредыдущихЧеков По Отчет.Количество()-1 Цикл
		Сумма = Сумма + Отчет[Счетчик].Сумма;
	КонецЦикла;

	Возврат Сумма;

КонецФункции // ПолучитьСуммуЧека()

// функция закрытия смены на ККМ Off-Line
//
// Параметры:
//  Объект        - объект подключенного торгового оборудования
//  НомерСекции   - номер секции
//  Касса         - касса ККМ, для которой закрывается смена
//  КаталогОбмена - каталог обмена с кассой ККМ
//  Отчет         - возвращаемая таблица значений с информацией о проданных товарах
//  НомерЛУ       - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ЗакрытьСмену(Объект, НомерСекции, Касса, КаталогОбмена, Отчет, НомерЛУ)

	ФайлСмены = Новый Файл(КаталогОбмена + мИмяФайлаОтчета);
	Если Не ФайлСмены.Существует() Тогда
		ОписаниеРезультата = "Отсутствует файл отчета " + мИмяФайлаОтчета + " в каталоге
		                     |" + КаталогОбмена;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	ФайлОтчета = Новый ТекстовыйДокумент();
	ФайлОтчета.Прочитать(КаталогОбмена + мИмяФайлаОтчета, КодировкаТекста.OEM);

	// количество строк в файле должно быть как минимум 4 (шапка + 1 строка по товару)
	Если ФайлОтчета.КоличествоСтрок() < 4 Тогда
		ОписаниеРезультата = "В файле отчета отсутствует информация о продажах";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	// выполним проверку шапки
	СтрокаОтчета = ФайлОтчета.ПолучитьСтроку(1);
	Если СтрокаОтчета <> "#" Тогда
		Если СтрокаОтчета = "@" Тогда
			ОписаниеРезультата = "Отчет № " + ФайлОтчета.ПолучитьСтроку(2) + " уже был загружен";
		Иначе
			ОписаниеРезультата = "Неверный формат файла отчета";
		КонецЕсли;

		Возврат ОписаниеРезультата;
	КонецЕсли;

	ЛогНомерИзОтчета = ФайлОтчета.ПолучитьСтроку(2);
	//Если ЛогНомерИзОтчета <> Касса.Код Тогда
	//	ОписаниеРезультата = "Закрытие смены производится для ККМ №" + Касса.Код + ", отчет получен из ККМ №" + ЛогНомерИзОтчета;
	//	Возврат ОписаниеРезультата;
	//КонецЕсли;

	НомерОтчета = ФайлОтчета.ПолучитьСтроку(3);
	Состояние("Загружается отчет № " + НомерОтчета + " с POS № " + ЛогНомерИзОтчета + "...");

	Отчет = Новый ТаблицаЗначений;
	Отчет.Колонки.Добавить("Код");
	Отчет.Колонки.Добавить("Штрихкод");
	Отчет.Колонки.Добавить("Наименование");
	Отчет.Колонки.Добавить("Цена");
	Отчет.Колонки.Добавить("Количество");
	Отчет.Колонки.Добавить("СуммаБезСкидки");
	Отчет.Колонки.Добавить("Сумма");
   	Отчет.Колонки.Добавить("НомерСекции");

	// используется для расчета скидок и надбавок по всем позициям чека
	ПредыдущийКонЧека = 0; 
	ПослРегистрация   = 0;

	Для Счетчик = 4 По ФайлОтчета.КоличествоСтрок() Цикл

		Стр = СтрЗаменить( ФайлОтчета.ПолучитьСтроку(Счетчик), ";", Символы.ПС );
		НомерТранзакции = Число(СтрПолучитьСтроку(Стр, 1));
		СтрокаДаты      = СтрПолучитьСтроку(Стр, 2);
		СтрокаДень      = Лев(СтрокаДаты,Найти(СтрокаДаты,".")-1);
		СтрокаДаты      = Сред(СтрокаДаты,Найти(СтрокаДаты,".")+1);
		СтрокаМесяц     = Лев(СтрокаДаты,Найти(СтрокаДаты,".")-1);
		СтрокаГод       = Сред(СтрокаДаты,Найти(СтрокаДаты,".")+1);
		ДатаТранзакции  = Дата (СтрокаГод, СтрокаМесяц, СтрокаДень);
		ВремяТранзакции =       СтрПолучитьСтроку(Стр, 3);
		ТипТранзакции   = Число(СтрПолучитьСтроку(Стр, 4));
		НомерККМ        = Число(СтрПолучитьСтроку(Стр, 5));
		НомерЧека       = Число(СтрПолучитьСтроку(Стр, 6));
		Кассир          =       СтрПолучитьСтроку(Стр, 7);
		Код             =       СтрПолучитьСтроку(Стр, 8);
		Секция          =       СтрПолучитьСтроку(Стр, 9);
		Цена            = Число(СтрЗаменить(СтрПолучитьСтроку(Стр, 10), ",", "." ) );
		Количество      = Число(СтрЗаменить(СтрПолучитьСтроку(Стр, 11), ",", "." ) );
		Сумма           = Число(СтрЗаменить(СтрПолучитьСтроку(Стр, 12), ",", "." ) );

		Если ТипТранзакции = 11 Тогда

			// продажа
			СтрПродажи = Отчет.Добавить();
			СтрПродажи.Код            = Код;
			СтрПродажи.Штрихкод       = "";
			СтрПродажи.Цена           = Цена;
			СтрПродажи.Количество     = Количество;
			СтрПродажи.Сумма          = Сумма;
			СтрПродажи.СуммаБезСкидки = Сумма;
			СтрПродажи.НомерСекции    = Число(Секция);

			ПослРегистрация = Отчет.Количество();

		ИначеЕсли ТипТранзакции = 12 Тогда

			// сторно последней регистрации
			Отчет.УдалитьСтроку(Отчет[ПослРегистрация-1]);
			ПослРегистрация = Отчет.Количество();

		ИначеЕсли ((ТипТранзакции = 15) или (ТипТранзакции = 17)) И (ПослРегистрация > 0) Тогда

			// скидка на последнюю позицию
			Отчет[ПослРегистрация-1].Сумма = Отчет[ПослРегистрация-1].Сумма - Сумма;

		ИначеЕсли ((ТипТранзакции = 16) ИЛИ (ТипТранзакции = 18)) И (ПослРегистрация > 0) Тогда

			// надбавка на последнюю позицию
			Отчет[ПослРегистрация-1].Сумма = Отчет[ПослРегистрация-1].Сумма + Сумма;

		ИначеЕсли (ТипТранзакции = 35) или (ТипТранзакции = 37) Тогда

			// скидка на чек
			СуммаЧека = ПолучитьСуммуЧека(Отчет, ПредыдущийКонЧека);
			НераспределеннаяСкидка=Сумма;
			Если СуммаЧека <> 0 Тогда
				Для Счетчик = ПредыдущийКонЧека По Отчет.Количество()-1 Цикл
					Скидка=Окр(Отчет[Счетчик].Сумма * Сумма / СуммаЧека,2);
					Отчет[Счетчик].Сумма = Отчет[Счетчик].Сумма - Скидка;
					НераспределеннаяСкидка=НераспределеннаяСкидка-Скидка;
				КонецЦикла;
				Если Отчет.Количество()>0 Тогда
					Отчет[Отчет.Количество()].Сумма=Отчет.Сумма-НераспределеннаяСкидка;
	            КонецЕсли;
			КонецЕсли;

		ИначеЕсли (ТипТранзакции = 35) или (ТипТранзакции = 37) Тогда

			// надбавка на чек
			СуммаЧека = ПолучитьСуммуЧека(Отчет, ПредыдущийКонЧека);
			Если СуммаЧека <> 0 Тогда
				Для Счетчик = ПредыдущийКонЧека По Отчет.Количество()-1 Цикл
					Отчет[Счетчик].Сумма = Отчет[Счетчик].Сумма + Отчет[Счетчик].Сумма * Сумма / СуммаЧека;
				КонецЦикла;
			КонецЕсли;
			
		ИначеЕсли ТипТранзакции = 55 Тогда

			// закрытие чека
			ПредыдущийКонЧека = Отчет.Количество();

		ИначеЕсли ТипТранзакции = 56 Тогда

			// отмена чека
			Пока Отчет.Количество()>ПредыдущийКонЧека Цикл
				Отчет.УдалитьСтроку(Отчет[Отчет.Количество()-1]);
			КонецЦикла;

		КонецЕсли;

	КонецЦикла;

	// свернем таблицу по товару
	Отчет.Свернуть("НомерСекции,Код,Штрихкод,Цена","Количество, Сумма, СуммаБезСкидки");

	// занесем в файл информацию о том, что отчет загружен.
	Попытка
		ФайлОтчета.ЗаменитьСтроку(1,"@");
		ФайлОтчета.Записать(КаталогОбмена + мИмяФайлаОтчета, КодировкаТекста.ANSI);
	Исключение
		ОписаниеРезультата = "Ошибка при замене первой строки файла с отчетом POS терминала";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Возврат "";

КонецФункции // ЗакрытьСмену()

// обработка вызова операции на ККМ Off-Line
//
// Параметры:
//  ИмяОперации  - имя выполняемой операции
//  Параметры    - структура с параметрами торгового оборудования
//  Ответ        - возвращаемая строка с представлением ошибки если она произошла, иначе пустая строка
//
Процедура ВыполнитьОперацию(ИмяОперации = "", Параметры, Ответ) Экспорт
	Перем Объект, Модель, НомерЛУ, НомерСекции, СписокТоваров, ДанныеИзККМ, Касса, КаталогОбмена;

	Параметры.Свойство("Объект" , Объект );
	Параметры.Свойство("НомерЛУ", НомерЛУ);

	Если ЗначениеНеЗаполнено(НомерЛУ) Тогда
		НомерЛУ = 1;
	КонецЕсли;

	Если ИмяОперации = "Подключить" Тогда

		Ответ = "";

		Параметры.Вставить("Объект", "off_spos");

	ИначеЕсли ИмяОперации = "Отключить" Тогда

		Ответ = "";

	ИначеЕсли ИмяОперации = "ЗагрузитьТовары" Тогда

		Параметры.Свойство("Касса" , Касса        );
		Параметры.Свойство("Секция", НомерСекции  );
		Параметры.Свойство("Товары", СписокТоваров);
		Параметры.Свойство("Путь"  , КаталогОбмена);

		КаталогОбмена = СокрЛП(КаталогОбмена);
		Если Прав(КаталогОбмена, 1) <> "\" Тогда
			КаталогОбмена = КаталогОбмена + "\";
		КонецЕсли;

		Ответ = ЗагрузитьТовары(Объект, НомерСекции, Касса, КаталогОбмена, СписокТоваров, НомерЛУ);

	ИначеЕсли ИмяОперации = "ЗакрытьСмену" Тогда

		Параметры.Свойство("Секция", НомерСекции  );
		Параметры.Свойство("Касса" , Касса        );
		Параметры.Свойство("Путь"  , КаталогОбмена);

		КаталогОбмена = СокрЛП(КаталогОбмена);
		Если Прав(КаталогОбмена, 1) <> "\" Тогда
			КаталогОбмена = КаталогОбмена + "\";
		КонецЕсли;

		Ответ = ЗакрытьСмену(Объект, НомерСекции, Касса, КаталогОбмена, ДанныеИзККМ, НомерЛУ);

		Параметры.Вставить("Данные" , ДанныеИзККМ);

	Иначе

		Ответ = "Передана неизвестная команда";

	КонецЕсли;

КонецПроцедуры // ВыполнитьОперацию()

// возвращает параметры для текущий обработки
//
Процедура ПолучитьПараметры(Вид, ВнешняяКомпонента, ПрограммныйИдентификатор, Модели) Экспорт

	Вид                      = Перечисления.ВидыТорговогоОборудования.ККМOffLine;
	ВнешняяКомпонента        = "";
	ПрограммныйИдентификатор = "";

	Модели = Новый СписокЗначений;
	Модели.Добавить("ОФПОС","Штрих-POS-Ф");

КонецПроцедуры

мИмяФайлаОтчета  = "report.txt";
мИмяФайлаТоваров = "goods.txt";
