// Подключение электронных весов
//
// Параметры:
//  Компонента   - внешняя компонента
//  ПрограммныйИдентификатор - пароль пользователя
//  Объект       - возвращаемый объект подключенного торгового оборудования
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Подключить(Компонента, ПрограммныйИдентификатор, Объект, НомерЛУ)

	Попытка
		ЗагрузитьВнешнююКомпоненту(Компонента);
	Исключение
		ОписаниеРезультата = "не удалось загрузить внешнюю компоненту """ + Компонента + """";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Попытка
		Объект = Новый("AddIn." + ПрограммныйИдентификатор);
	Исключение
		ОписаниеРезультата = "не удалось создать объект внешней компоненты с программым идентификатром AddIn." + ПрограммныйИдентификатор;
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Если Объект.УстройствоВключено = 1 Тогда
		Возврат "";
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.УстройствоВключено = 1;
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Подключить()

// Отключение электронных весов
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Отключить(Объект, НомерЛУ)

	// если нет объекта, то ничего не нужно отключать
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.УстройствоВключено = 0;
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Отключить()

// Получает текущее значение веса
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  Вес          - возвращаемый вес
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ПолучитьВес(Объект, Вес, НомерЛУ)

	Если Объект = Неопределено Тогда
		ОписаниеРезультата = "устройство не подключено";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Если Объект.АсинхронныйРежим = 1 Тогда
		Вес = Объект.Вес;
	ИначеЕсли Объект.ПолучитьВес() = 0 Тогда
		Вес = Объект.Вес;
	Иначе
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // ПолучитьВес()

// Фиксирует вес тары
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Тара(Объект, НомерЛУ)

	Если Объект = Неопределено Тогда
		ОписаниеРезультата = "устройство не подключено";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Если Объект.Тара() <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;
	
	Возврат "";

КонецФункции // Тара()

// Устанавливает вес тары
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  ВесТары      - устанавливаемый вес тары
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция УстановитьТару(Объект, ВесТары, НомерЛУ)

	Если Объект = Неопределено Тогда
		ОписаниеРезультата = "устройство не подключено";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.ВесТары = ВесТары;
	Если Объект.Тара() <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // УстановитьТару()

// обнуляет индикатор веса
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Обнулить(Объект, НомерЛУ)

	Если Объект = Неопределено Тогда
		ОписаниеРезультата = "устройство не подключено";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Если Объект.Ноль() <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Обнулить()

// Устаноливает режим весов
//
// Параметры: 
//  Объект       - объект подключенного торгового оборудования
//  Режим        - устанавливаемый режим (1 - асинхронный, 0 - синхронный)
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция УстановитьРежим(Объект, Режим, НомерЛУ)

	Если Объект = Неопределено Тогда
		ОписаниеРезультата = "устройство не подключено";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Если Режим = 1 Тогда

		Объект.АсинхронныйРежим = 1;
		Объект.ПериодОпроса     = 0;     // 0 - каждые 50 мс, 1 - 100 мс, 2 - 200 мс, 3 - 500 мс, 4 - 1000 мс (секунда)
		Объект.ШагВеса          = 0.001;
		Объект.Автовыключение   = 0;
		Объект.ПосылкаДанных    = 1;

	Иначе

		Объект.АсинхронныйРежим = 0;

	КонецЕсли;

	Возврат "";

КонецФункции // УстановитьРежим()

// обработка вызова операции на весах
//
// Параметры:
//  ИмяОперации  - имя выполняемой операции
//  Параметры    - структура с параметрами торгового оборудования
//  Ответ        - возвращаемая строка с представлением ошибки если она произошла, иначе пустая строка
//
Процедура ВыполнитьОперацию(ИмяОперации = "", Параметры, Ответ) Экспорт
	Перем Объект, Модель, НомерЛУ, Вес, ВесТары, Режим;

	Параметры.Свойство("Объект" , Объект );
	Параметры.Свойство("НомерЛУ", НомерЛУ);

	Если ЗначениеНеЗаполнено(НомерЛУ) Тогда
		НомерЛУ = 1;
	КонецЕсли;

	Если ИмяОперации = "Подключить" Тогда

		Параметры.Свойство("Модель", Модель);

		Ответ = Подключить(Модель.ВнешняяКомпонента, Модель.ПрограммныйИдентификатор, Объект, НомерЛУ);

		Параметры.Вставить("Объект", Объект);

	ИначеЕсли ИмяОперации = "Отключить" Тогда

		Ответ = Отключить(Объект, НомерЛУ);

	ИначеЕсли ИмяОперации = "ПолучитьВес" Тогда

		Ответ = ПолучитьВес(Объект, Вес, НомерЛУ);

		Параметры.Вставить("Вес", Вес);

	ИначеЕсли ИмяОперации = "Тара" Тогда

		Ответ = Тара(Объект, НомерЛУ);

	ИначеЕсли ИмяОперации = "УстановитьТару" Тогда

		Параметры.Свойство("ВесТары", ВесТары);

		Ответ = УстановитьТару(Объект, ВесТары, НомерЛУ);

	ИначеЕсли ИмяОперации = "Обнулить" Тогда

		Ответ = Обнулить(Объект, НомерЛУ);

	ИначеЕсли ИмяОперации = "УстановитьРежим" Тогда

		Параметры.Свойство("Режим", Режим);

		Ответ = УстановитьРежим(Объект, Режим, НомерЛУ);

	Иначе

		Ответ = "Передана неизвестная команда";

	КонецЕсли;

КонецПроцедуры // ВыполнитьОперацию()

// возвращает параметры для текущий обработки
//
Процедура ПолучитьПараметры(Вид, ВнешняяКомпонента, ПрограммныйИдентификатор, Модели) Экспорт

	Вид                      = Перечисления.ВидыТорговогоОборудования.ЭлектронныеВесы;
	ВнешняяКомпонента        = "scale1C.dll";
	ПрограммныйИдентификатор = "Scale45";

	Модели = Новый СписокЗначений;
	Модели.Добавить("ЭВБМД","Bolet MD-991");
	Модели.Добавить("ЭВБ41","BP 4149");
	Модели.Добавить("ЭВБ49","BP 4900");
	Модели.Добавить("ЭВКАП","CAS AP");
	Модели.Добавить("ЭВКАД","CAS AD");
	Модели.Добавить("ЭВКСК","CAS SC");
	Модели.Добавить("ЭВКС2","CAS S-2000");
	Модели.Добавить("ЭВПВЕ","ПетВес серия Е");
	Модели.Добавить("ЭВТТВ","Тензо ТВ-003/05Д");
	Модели.Добавить("ЭВШАС","Штрих АС");
	Модели.Добавить("ЭВШАP","Штрих АС POS");
	Модели.Добавить("ЭВШАМ","Штрих AC мини POS");
	Модели.Добавить("ЭВШВТ","Штрих ВТ");

КонецПроцедуры
