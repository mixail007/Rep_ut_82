// функция подключения сканера
//
// Параметры:
//  Компонента   - внешняя компонента
//  ПрогИд       - пароль пользователя
//  Объект       - возвращаемый объект подключенного торгового оборудования
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Подключить(Компонента, ПрогИд, Объект)

	Попытка 
		ЗагрузитьВнешнююКомпоненту(Компонента);
	Исключение
		ОписаниеРезультата = "не удалось загрузить внешнюю компоненту """ + Компонента + """";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Попытка
		Объект = Новый("AddIn." + ПрогИд);
	Исключение
		ОписаниеРезультата = "не удалось создать объект внешней компоненты с программым идентификатром AddIn." + ПрогИд;
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Если Объект.УстройствоВключено = 0 Тогда
		Если Объект.Подсоединить("Scanner") <> 0 Тогда
			ОписаниеРезультата = "не удалось подсоединить устройство";
			Возврат ОписаниеРезультата;
		КонецЕсли;

		Если Объект.Занять(1) <> 0 Тогда
			ОписаниеРезультата = "не удалось получить монопольный доступ к устройству";
			Возврат ОписаниеРезультата;
		КонецЕсли;

		Объект.УстройствоВключено = 1;
		Если Объект.Результат <> 0 Тогда
			ОписаниеРезультата = "не удалось включить устройство";
			Возврат ОписаниеРезультата;
		КонецЕсли;
	КонецЕсли;

	// очищаем буфер компоненты
	//Объект.ОчиститьВход();
	//Объект.ОчиститьВыход();

	// включаем режим немедленной посылки данных
	Объект.ПосылкаДанных = 1;

	Возврат "";

КонецФункции // Подключить()

// функция отключения сканера
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Отключить(Объект)

	// если нет объекта, то ничего не нужно отключать
	Если Объект = Неопределено Тогда
		Возврат "";
	ИначеЕсли Объект.УстройствоВключено = 0 Тогда
		Возврат "";
	КонецЕсли;

	Объект.УстройствоВключено = 0;
//+++	Объект.Отсоединить();

	Возврат "";

КонецФункции // Отключить()

// Посылка данных с сканер штрих-кода
// Если параметр Флаг = 1, компонента при получении штрих-кода срузу будет
// посылать его в Предприятие. Если Флаг = 0, компонента будет сохранять
// полученные штрихкод в очереди.
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  Флаг         - флаг посылки данных
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ПосылкаДанных(Объект, Флаг)

	Объект.ПосылкаДанных = Флаг;

	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = "ошибка посылки данных";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // ПосылкаДанных()

// функция очистки входной очереди сканера
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ОчиститьВход(Объект)

	Объект.ОчиститьВход();
	Объект.ОчиститьВыход();

	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = "ошибка очистки входной очереди сканера";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // ОчиститьВход()

// обработка вызова операции на сканере
//
// Параметры:
//  ИмяОперации  - имя выполняемой операции
//  Параметры    - структура с параметрами торгового оборудования
//  Ответ        - возвращаемая строка с представлением ошибки если она произошла, иначе пустая строка
//
Процедура ВыполнитьОперацию(ИмяОперации = "", Параметры, Ответ) Экспорт
	Перем Модель, Объект, Флаг;

	Параметры.Свойство("Объект", Объект );

	Если ИмяОперации = "Подключить" Тогда

		Параметры.Свойство("Модель", Модель);

		Ответ = Подключить(Модель.ВнешняяКомпонента, Модель.ПрограммныйИдентификатор, Объект);

		Параметры.Вставить("Объект", Объект);

	ИначеЕсли ИмяОперации = "Отключить" Тогда

		Ответ = Отключить(Объект);

	ИначеЕсли ИмяОперации = "ПосылкаДанных" Тогда

		Параметры.Свойство("Флаг"  , Флаг  );

		Ответ = ПосылкаДанных(Объект, Флаг);

	ИначеЕсли ИмяОперации = "ОчиститьВход" Тогда

		Ответ = ОчиститьВход(Объект);

	Иначе

		Ответ = "неизвестная команда";

	КонецЕсли;

КонецПроцедуры // ВыполнитьОперацию()

// возвращает параметры для текущий обработки
//
Процедура ПолучитьПараметры(Вид, ВнешняяКомпонента, ПрограммныйИдентификатор, Модели) Экспорт

	Вид                      = Перечисления.ВидыТорговогоОборудования.СканерШтрихКода;
	ВнешняяКомпонента        = "scanopos.dll";
	ПрограммныйИдентификатор = "Scanner";

	Модели = Новый СписокЗначений;
	Модели.Добавить("СШКСТ","Стандартный сканер");

КонецПроцедуры
