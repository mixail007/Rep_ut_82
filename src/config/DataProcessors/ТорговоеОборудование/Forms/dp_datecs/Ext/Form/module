// удаляет текущее окно с экрана дисплея покупателя
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//
// Возвращаемое значение: 
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция УдалитьТекущееОкно(Объект)

	// у дисплея всегда есть окно с номер 0 и его удалить нельзя
	Если Объект.ТекущееОкно <> 0 Тогда

		Объект.УдалитьОкно();
		Если Объект.Результат <> 0 Тогда
			ОписаниеРезультата = Объект.ОписаниеРезультата;
			Возврат ОписаниеРезультата;
		КонецЕсли;

		Объект.ТекущееОкно = 0;
		Объект.ОчиститьТекст();
		Если Объект.Результат <> 0 Тогда
			ОписаниеРезультата = Объект.ОписаниеРезультата;
			Возврат ОписаниеРезультата;
		КонецЕсли;

	КонецЕсли;

	Возврат "";

КонецФункции // УдалитьТекущееОкно()

// Подключение дисплея покупателя
//
// Параметры:
//  Компонента   - внешняя компонента
//  ПрограммныйИдентификатор - пароль пользователя
//  Объект       - возвращаемый объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Подключить(Компонента, ПрограммныйИдентификатор, Объект, НомерЛУ)

	Попытка
		ЗагрузитьВнешнююКомпоненту(Компонента);
	Исключение
		ОписаниеРезультата = "не удалось загрузить внешнюю компоненту """ + Компонента + """";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Попытка
		Объект = Новый("AddIn." + ПрограммныйИдентификатор);
	Исключение
		ОписаниеРезультата = "не удалось создать объект внешней компоненты с программым идентификатром AddIn." + ПрограммныйИдентификатор;
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Если Объект.УстройствоВключено = 1 Тогда
		Возврат "";
	КонецЕсли;

	Объект.УстройствоВключено = 1;
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Подключить()

// Отключение дисплея покупателя
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Отключить(Объект, НомерЛУ)

	// если нет объекта, то ничего не нужно отключать
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Ответ = УдалитьТекущееОкно(Объект);
	Если Не ПустаяСтрока(Ответ) Тогда
		Возврат Ответ;
	КонецЕсли;

	Объект.УстройствоВключено = 0;
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Отключить()

// Создает на экране дисплея покупателя окно
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение: 
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция СоздатьОкно(Объект, НомерЛУ)

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Ответ = УдалитьТекущееОкно(Объект);
	Если Не ПустаяСтрока(Ответ) Тогда
		Возврат Ответ;
	КонецЕсли;

	Объект.СоздатьОкно(0, 0, 2, 20, 2, 20);
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // СоздатьОкно()

// Очищает текст дисплея
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение: 
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ОчиститьДисплей(Объект, НомерЛУ)

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.ОчиститьТекст();
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // ОчиститьТекст()

// Выводит текстовую строку на дисплей покупателя
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  Строка       - строка, которую нужно вывести
//  НомерСтроки  - номер строки в окне (может принимать значения 0 или 1)
//
// Возвращаемое значение: 
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ВывестиСтроку(Объект, Строка, НомерСтроки = 0)

	Объект.ПоказатьТекстПоз(НомерСтроки, 0, Строка, 0);
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // ВывестиСтроку()

// Создает на экране окно и выводит в него бегущую строку
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  БегущаяСтрока1 - текст первой бегущей строчки
//  БегущаяСтрока2 - текст второй бегущей строчки
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение: 
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция БегущаяСтрока(Объект, БегущаяСтрока1, БегущаяСтрока2, НомерЛУ)

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Ответ = УдалитьТекущееОкно(Объект);
	Если Не ПустаяСтрока(Ответ) Тогда
		Возврат Ответ;
	КонецЕсли;

	Объект.СоздатьОкно(0, 0, 2, 20, 2, 45);
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.ОчиститьТекст();
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.ТипБегСтроки             = 5;    // инициализация строки
	Объект.ПоказатьТекстПоз(0, 0, БегущаяСтрока1, 0);
	Объект.ПоказатьТекстПоз(1, 0, БегущаяСтрока2, 0);
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.ЗадержкаПовтораБегСтроки = 500;  // повтор в мс
	Объект.ЗадержкаПоказаБегСтроки  = 150;  // задержка в мс
	Объект.ТипБегСтроки             = 3;    // бегущая строка

	Возврат "";

КонецФункции

// Открывает денежный ящик
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение: 
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ОткрытьЯщик(Объект, НомерЛУ)

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Если Объект.ЯщикОткрыт = 0 Тогда

		Объект.ОткрытьЯщик();
		Если Объект.Результат <> 0 Тогда
			ОписаниеРезультата = Объект.ОписаниеРезультата;
			Возврат ОписаниеРезультата;
		КонецЕсли;

	КонецЕсли;

	Возврат "";

КонецФункции // ОткрытьЯщик()

// обработка вызова операции на весах
//
// Параметры:
//  ИмяОперации  - имя выполняемой операции
//  Параметры    - структура с параметрами торгового оборудования
//  Ответ        - возвращаемая строка с представлением ошибки если она произошла, иначе пустая строка
//
Процедура ВыполнитьОперацию(ИмяОперации = "", Параметры, Ответ) Экспорт
	Перем Объект, Модель, НомерЛУ, Режим, БегущаяСтрока1, БегущаяСтрока2, Строка;

	Параметры.Свойство("Объект" , Объект );
	Параметры.Свойство("НомерЛУ", НомерЛУ);

	Если ЗначениеНеЗаполнено(НомерЛУ) Тогда
		НомерЛУ = 1;
	КонецЕсли;

	Если ИмяОперации = "Подключить" Тогда

		Параметры.Свойство("Модель", Модель);

		Ответ = Подключить(Модель.ВнешняяКомпонента, Модель.ПрограммныйИдентификатор, Объект, НомерЛУ);

		Параметры.Вставить("Объект", Объект);

	ИначеЕсли ИмяОперации = "Отключить" Тогда

		Ответ = Отключить(Объект, НомерЛУ);

	ИначеЕсли ИмяОперации = "БегущаяСтрока" Тогда

		Параметры.Свойство("БегущаяСтрока1", БегущаяСтрока1);
		Параметры.Свойство("БегущаяСтрока2", БегущаяСтрока2);

		Ответ = БегущаяСтрока(Объект, БегущаяСтрока1, БегущаяСтрока2, НомерЛУ);

	ИначеЕсли ИмяОперации = "СоздатьОкно" Тогда

		Ответ = СоздатьОкно(Объект, НомерЛУ);

	ИначеЕсли ИмяОперации = "ВывестиСтроки" Тогда

		Ответ = ОчиститьДисплей(Объект, НомерЛУ);
		Если Не ПустаяСтрока(Ответ) Тогда
			Возврат;
		КонецЕсли;

		Параметры.Свойство("Строка1", Строка);
		Ответ = ВывестиСтроку(Объект, Строка, 0);
		Если Не ПустаяСтрока(Ответ) Тогда
			Возврат;
		КонецЕсли;

		Параметры.Свойство("Строка2", Строка);
		Ответ = ВывестиСтроку(Объект, Строка, 1);
		Если Не ПустаяСтрока(Ответ) Тогда
			Возврат;
		КонецЕсли;

	ИначеЕсли ИмяОперации = "ОчиститьДисплей" Тогда

		Ответ = ОчиститьДисплей(Объект, НомерЛУ);

	ИначеЕсли ИмяОперации = "ОткрытьДенежныйЯщик" Тогда

		Ответ = ОткрытьЯщик(Объект, НомерЛУ);

	Иначе

		Ответ = "Передана неизвестная команда";

	КонецЕсли;

КонецПроцедуры // ВыполнитьОперацию()

// возвращает параметры для текущий обработки
//
Процедура ПолучитьПараметры(Вид, ВнешняяКомпонента, ПрограммныйИдентификатор, Модели) Экспорт

	Вид                      = Перечисления.ВидыТорговогоОборудования.ДисплейПокупателя;
	ВнешняяКомпонента        = "Line1C.dll";
	ПрограммныйИдентификатор = "FprnM45";

	Модели = Новый СписокЗначений;
	Модели.Добавить("ДПД01","Datecs");
	Модели.Добавить("ДПФРЧ","Firich");
	Модели.Добавить("ДПФТЧ","Flytech");
	Модели.Добавить("ДПМРК","Меркурий ДП-01, ДП-02, ДП-03");

КонецПроцедуры
