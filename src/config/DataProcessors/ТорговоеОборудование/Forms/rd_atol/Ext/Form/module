// Подключение ридера магнитных карт
//
// Параметры:
//  Компонента   - внешняя компонента
//  ПрограммныйИдентификатор - пароль пользователя
//  Объект       - возвращаемый объект подключенного торгового оборудования
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Подключить(Компонента, ПрограммныйИдентификатор, Объект, НомерЛУ)

	Попытка
		ЗагрузитьВнешнююКомпоненту(Компонента);
	Исключение
		ОписаниеРезультата = "не удалось загрузить внешнюю компоненту """ + Компонента + """";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Попытка
		Объект = Новый("AddIn." + ПрограммныйИдентификатор);
	Исключение
		ОписаниеРезультата = "не удалось создать объект внешней компоненты с программым идентификатром AddIn." + ПрограммныйИдентификатор;
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Если Объект.УстройствоВключено = 1 Тогда
		Возврат "";
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.УстройствоВключено = 1;
	Объект.СтараяВерсия = 0;
	Объект.Модель = 1;

	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Подключить()

// Отключение ридера магнитных карт
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Отключить(Объект, НомерЛУ)

	// если нет объекта, то ничего не нужно отключать
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.УстройствоВключено = 0;
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Отключить()

// Включение считывания следующего кода карты
// Если параметр Флаг = 1, компонента при получении штрих-кода срузу будет
// посылать его в Предприятие. Если Флаг = 0, компонента будет сохранять
// полученные штрихкод в очереди.
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ПосылкаДанных(Объект)

	Объект.ПосылкаДанных = 1;

	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = "ошибка посылки данных";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // ПосылкаДанных()

// обработка вызова операции на ридере
//
// Параметры:
//  ИмяОперации  - имя выполняемой операции
//  Параметры    - структура с параметрами торгового оборудования
//  Ответ        - возвращаемая строка с представлением ошибки если она произошла, иначе пустая строка
//
Процедура ВыполнитьОперацию(ИмяОперации = "", Параметры, Ответ) Экспорт
	Перем Модель, Объект, НомерЛУ;

	Параметры.Свойство("Объект", Объект );
	Параметры.Свойство("НомерЛУ", НомерЛУ);

	Если ИмяОперации = "Подключить" Тогда

		Параметры.Свойство("Модель", Модель);

		Ответ = Подключить(Модель.ВнешняяКомпонента, Модель.ПрограммныйИдентификатор, Объект, НомерЛУ);

		Параметры.Вставить("Объект", Объект);

	ИначеЕсли ИмяОперации = "ПосылкаДанных" Тогда

		Ответ = ПосылкаДанных(Объект);

	ИначеЕсли ИмяОперации = "Отключить" Тогда

		Ответ = Отключить(Объект, НомерЛУ);

	Иначе

		Ответ = "неизвестная команда";

	КонецЕсли;

КонецПроцедуры // ВыполнитьОперацию()

// возвращает параметры для текущий обработки
//
Процедура ПолучитьПараметры(Вид, ВнешняяКомпонента, ПрограммныйИдентификатор, Модели) Экспорт

	Вид                      = Перечисления.ВидыТорговогоОборудования.СканерШтрихКода;
	ВнешняяКомпонента        = "scaner1C.dll";
	ПрограммныйИдентификатор = "Scanner45";

	Модели = Новый СписокЗначений;
	Модели.Добавить("РДСТ","Стандартный ридер");

КонецПроцедуры
