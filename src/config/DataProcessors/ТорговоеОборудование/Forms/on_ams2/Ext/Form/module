// функция подключения ККМ On-Line
//
// Параметры:
//  Компонента   - внешняя компонента
//  ПрогИд       - пароль пользователя
//  Объект       - возвращаемый объект подключенного торгового оборудования
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Подключить(Компонента, ПрогИд, Объект)

	Попытка 
		ЗагрузитьВнешнююКомпоненту(Компонента);
	Исключение
		ОписаниеРезультата = "не удалось загрузить внешнюю компоненту """ + Компонента + """";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Попытка
		Объект = Новый("AddIn." + ПрогИд);
	Исключение
		ОписаниеРезультата = "не удалось создать объект внешней компоненты с программым идентификатром AddIn." + ПрогИд;
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Рез = Объект.Активизировать();
	Если Рез = 0 Тогда
		ОписаниеРезультата = Объект.ПолучитьТекстОшибки(); 
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Подключить()

// функция отключения ККМ On-Line
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Отключить(Объект)

	// если нет объекта, то ничего не нужно отключать
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;

	Рез = Объект.Остановить();
	Если Рез = 0 Тогда
		ОписаниеРезультата = Объект.ПолучитьТекстОшибки();
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Отключить()

// дописывает к переданному штрих-коду ведущие нули и контрольный символ кода EAN
//
// Параметры:
//  штрихкод     - штрих-код без ведущих нулей и контрольного символа кода EAN
//
// Возвращаемое значение:
//  полный штрих-код
//
Функция ПолучитьПолныйШК(Штрихкод)

	ДлинаШК  = СтрДлина(Штрихкод);
	ПолныйШК = Штрихкод;

	Если (НЕ ПроверитьШтрихКод(ШтрихКод,ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8))
	   И (НЕ ПроверитьШтрихКод(ШтрихКод,ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8)) Тогда
		Если ДлинаШК <= 7 Тогда

			// EAN8
			ВремШК = глТорговоеОборудование.ДополнитьСтрокуЛ(Штрихкод, "0", 7);
			Шк = КонтрольныйСимволEAN(ВремШК, 8);
			ПолныйШК = ВремШК + Шк;
		Иначе

			// EAN13
			ВремШК = глТорговоеОборудование.ДополнитьСтрокуЛ(Штрихкод, "0", 12);
			Шк = КонтрольныйСимволEAN(ВремШК, 13);
			ПолныйШК = ВремШК + Шк;

		КонецЕсли;
	КонецЕсли;
	Возврат ПолныйШК;

КонецФункции // ПолучитьПолныйШК()

// обработка события от ККМ On-Line
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  Событие      - обрабатываетмое событие
//  КодККМ       - сетевой номер ККМ
//  Буфер        - таблица выбитого оп чеку товара
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ОбработкаСобытия(Объект, Событие, КодККМ, КассаККМ, Буфер)
	Перем ОписаниеРезультата;
	Перем ВремТовар, ВремЕдиница, ВремЦена;

	Штрихкод = ПолучитьПолныйШК(СокрЛП(Объект.ПЛУ));
	Если Событие="Запрос" Тогда // запрос товара по штрих-коду

		Если глТорговоеОборудование.ПолучитьТоварПоШтрихкоду(Штрихкод, ВремТовар) Тогда
			ВремТовар = ВремТовар[0];
			Склад = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнойСклад");

			Если ЗначениеНеЗаполнено(Склад) Тогда
				ОписаниеРезультата = "Для текущего пользователя не установлен склад по умолчанию.";
			ИначеЕсли Склад.ВидСклада = Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка Тогда
				ОписаниеРезультата = "Для текущего пользователя установлен склад по умолчанию вида ""неавтоматизированная торговая точка"". Необходимо установить розничный или оптовый склад.";
			ИначеЕсли Склад.НомерСекции < 1 Тогда
				ОписаниеРезультата = "Номер секции склада, установленного для текущего пользователя по умолчанию, должен быть больше нуля.";
			Иначе
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("Дата",         КонецДня(РабочаяДата));
				Запрос.УстановитьПараметр("Номенклатура", ВремТовар.Номенклатура);
				Запрос.УстановитьПараметр("ЕдиницаИзмерения", ВремТовар.ЕдиницаИзмерения);
				Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ВремТовар.ХарактеристикаНоменклатуры);
				Запрос.УстановитьПараметр("СерияНоменклатуры", ВремТовар.СерияНоменклатуры);
				Запрос.УстановитьПараметр("Качество", ВремТовар.Качество);
				Запрос.УстановитьПараметр("Склад",        Склад);
				ВремКачество         = ВремТовар.Качество;
				ВремЕдиницаИзмерения = ВремТовар.ЕдиницаИзмерения;
				ВремХарактеристика   = ВремТовар.ХарактеристикаНоменклатуры;
				ВремТовар            = ВремТовар.Номенклатура;
				
				Если ВремКачество <> Справочники.Качество.Новый Тогда
					ОписаниеРезультата = "Можно продавать только товарные позиции с качеством ""Новый""."
					                   + Символы.ПС + "Считанный штрих-код соответствует качеству """ + ВремКачество
					                   + """ товара """ + ВремТовар.Наименование + """.";
				Иначе
					ТипЦен = Склад.ТипЦенРозничнойТорговли;
					Если ЗначениеНеЗаполнено(ТипЦен) Тогда
						ОписаниеРезультата = "На складе """+Склад+""" не заполнен тип цен розничной торговли.";
					Иначе
						Если ТипЦен.Рассчитывается Тогда
							ТипЦен = ТипЦен.БазовыйТипЦен;
							ПорядокОкругления = ТипЦен.ПорядокОкругления;
							ОкруглятьВБольшуюСторону = ТипЦен.ОкруглятьВБольшуюСторону;
							Коэффициент = (100 + ТипЦен.ПроцентСкидкиНаценки)/ 100;
						КонецЕсли;
						Запрос.УстановитьПараметр("ТипЦен", ТипЦен);
						Запрос.Текст = "
						|ВЫБРАТЬ
						|	ОстаткиТоваров.КоличествоОстаток
						|ИЗ
						|	РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата,
						|		Номенклатура  = &Номенклатура И ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
						|		И СерияНоменклатуры = &СерияНоменклатуры И Качество = &Качество
						|		И Склад = &Склад)
						|КАК
						|	ОстаткиТоваров
						|";

						Выборка=Запрос.Выполнить().Выгрузить();
						
						ВремЦена = ПолучитьЦенуНоменклатуры(ВремТовар, ВремХарактеристика, ТипЦен,,
						                         ВремЕдиницаИзмерения, мВалютаРегламентированногоУчета);
						
						Если Выборка.Количество() > 0
						 Или РазрешеноПревышениеОстаткаТоваровНаСкладе()
						 Или ВремТовар.Услуга Тогда
							ВремЦена = ?(ЗначениеНеЗаполнено(ВремЦена), 0, ВремЦена);

							Если ВремЦена = 0 Тогда
								ОписаниеРезультата = "У товара """+ВремТовар+""" не указана цена """+Склад.ТипЦенРозничнойТорговли+""".";
							Иначе
								Если Склад.ТипЦенРозничнойТорговли.Рассчитывается Тогда
									ВремЦена = ОкруглитьЦену(ВремЦена * Коэффициент, ПорядокОкругления, ОкруглятьВБольшуюСторону);
								КонецЕсли;
								Объект.НаименованиеТовара        = ВремТовар.Наименование;
								Объект.Цена                      = ВремЦена;
								Объект.Отдел                     = Склад.НомерСекции;
								Объект.ТоварнаяГруппа            = 0;
								Объект.МожноОтвечать             = 1;
								Объект.ПользовательскоеСообщение = "";
							КонецЕсли;
						Иначе
							ОписаниеРезультата = "На складе """+Склад+""" нет нужного количества """+ВремТовар+""".";
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ОписаниеРезультата = "Товар с кодом/штрих-кодом " + Штрихкод + " не найден!";
		КонецЕсли;

	ИначеЕсли Событие="ДобавлениеПокупкиВЧек" Тогда

		// Добавим покупку (строку таблицы значений) в чековый буфер по ККМ, вызвавшей событие.
		СтрокаБуфера = Буфер.Добавить();
		СтрокаБуфера.КодККМ       = КодККМ;
		СтрокаБуфера.Штрихкод     = Штрихкод;
		СтрокаБуфера.Количество   = Объект.Количество;
		СтрокаБуфера.Сумма        = Объект.СуммаПокупки;
		СтрокаБуфера.НомерПокупки = Объект.НомерПокупки;

	ИначеЕсли Событие="ЗакрытиеЧека" Тогда

		Чек = Документы.ЧекККМ.СоздатьДокумент();

		Чек.Дата = РабочаяДата;
		Чек.УстановитьВремя(АвтоВремя.ТекущееИлиПоследним);
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнитьШапкуДокумента(Чек, глТекущийПользователь, мВалютаРегламентированногоУчета, "Продажа");
		УстановитьНомерДокумента(Чек);
		Если Объект.ПризнакВозврата = 0 Тогда
			Чек.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа;
		Иначе
			Чек.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат;
		КонецЕсли;

		// Тип цен по умолчанию - из типа цен розничной торговли на данном складе
		РозничныйТипЦен = Чек.Склад.ТипЦенРозничнойТорговли;
		Если Не ЗначениеНеЗаполнено(РозничныйТипЦен) Тогда
			Чек.ТипЦен = РозничныйТипЦен;
		КонецЕсли; 

		Чек.ЧекПробитНаККМ = Истина;
		Чек.НомерЧекаККМ   = Объект.НомерЧека;
		Чек.КассаККМ       = КассаККМ;

		// Заполним табличную часть чека из чекового буфера

		СуммаЧекаККМ = Объект.СуммаЧека;
		СуммаЧека = Буфер.Итог("Сумма");
		Если СуммаЧека = 0 Тогда
			ПроцентСкидки = 0;
		Иначе
			ПроцентСкидки = ((СуммаЧека - СуммаЧекаККМ)*100)/СуммаЧека;
		КонецЕсли;

		Для Каждого СтрокаБуфера Из Буфер Цикл
			Если СтрокаБуфера.КодККМ = КодККМ Тогда
				Если глТорговоеОборудование.ПолучитьТоварПоШтрихкоду(СтрокаБуфера.Штрихкод, ВремТовар) Тогда
					ВремТовар = ВремТовар[0];
					СтрокаТабличнойЧасти = Чек.Товары.Добавить();
					СтрокаТабличнойЧасти.Номенклатура               = ВремТовар.Номенклатура;
					СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры = ВремТовар.ХарактеристикаНоменклатуры;
					СтрокаТабличнойЧасти.СерияНоменклатуры          = ВремТовар.СерияНоменклатуры;
					СтрокаТабличнойЧасти.Количество                 = СтрокаБуфера.Количество;
					СтрокаТабличнойЧасти.ЕдиницаИзмерения           = ВремТовар.ЕдиницаИзмерения;
					СтрокаТабличнойЧасти.Коэффициент                = ВремТовар.ЕдиницаИзмерения.Коэффициент;
					СтрокаТабличнойЧасти.Цена                       = СтрокаБуфера.Сумма / СтрокаБуфера.Количество;
					СтрокаТабличнойЧасти.Сумма                      = СтрокаБуфера.Сумма;
					СтрокаТабличнойЧасти.ПроцентСкидкиНаценки       = ПроцентСкидки;
					РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, Чек);
				Иначе
					Сообщить("Товар с кодом/штрих-кодом " + СтрокаБуфера.Штрихкод + " не найден!",СтатусСообщения.Внимание);
					СуммаЧекаККМ = СуммаЧекаККМ - СтрокаБуфера.Сумма;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

		Если Чек.Товары.Количество() > 0 Тогда
			Разница = СуммаЧекаККМ - Чек.Товары.Итог("Сумма");
			СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Сумма + Разница;
		КонецЕсли;

		// Удалим занесенные в чек покупки (строки таблицы значений) из чекового буфера.

		ВсегоСтрок = Буфер.Количество();
		Для а = 1 По ВсегоСтрок Цикл
			Если Буфер[ВсегоСтрок-а].КодККМ = КодККМ Тогда
				Буфер.Удалить(ВсегоСтрок-а);
			КонецЕсли;
		КонецЦикла;

		Чек.Записать(РежимЗаписиДокумента.Запись);
		Попытка
			Чек.Записать(РежимЗаписиДокумента.Проведение);
			Сообщить("Проведен чек №"+Чек.Номер+" от "+Чек.Дата+" на сумму "+Формат(Чек.СуммаДокумента,"ЧН=0; ЧДЦ=2")+" руб.",СтатусСообщения.Информация);
		Исключение
			ОписаниеРезультата = "Не удалось провести чек №"+Чек.Номер+" от "+Чек.Дата+".";
		КонецПопытки;

	ИначеЕсли Событие="СбросЧека" Тогда

		ВсегоСтрок = Буфер.Количество();
		Для а = 1 По ВсегоСтрок Цикл
			Если Буфер[ВсегоСтрок-а].КодККМ = КодККМ Тогда
				Буфер.Удалить(ВсегоСтрок-а);
			КонецЕсли;
		КонецЦикла;

	ИначеЕсли Событие="СвободнаяСумма" Тогда

	ИначеЕсли Событие="УдалениеПокупки" Тогда

		// удалить покупки из чек. буфера

		ВсегоСтрок = Буфер.Количество();
		Для а = 1 По ВсегоСтрок Цикл
			Если (Буфер[ВсегоСтрок-а].КодККМ = КодККМ) и (Буфер[ВсегоСтрок-а].НомерПокупки = Объект.НомерПокупки) Тогда
				Буфер.Удалить(ВсегоСтрок-а);
				Прервать;
			КонецЕсли;
		КонецЦикла;

		// и перенумеровать оставшиеся после удаления покупки

		Для Каждого СтрокаБуфера Из Буфер Цикл
			Если СтрокаБуфера.КодККМ = КодККМ Тогда
				Если СтрокаБуфера.НомерПокупки > Объект.НомерПокупки Тогда
					СтрокаБуфера.НомерПокупки = СтрокаБуфера.НомерПокупки - 1;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

	ИначеЕсли Событие="АннуляцияПокупки" Тогда

		// удалить покупки из чек. буфера с аннулированным кодом/штрих-кодом

		ВсегоСтрок = Буфер.Количество();
		Для а = 1 По ВсегоСтрок Цикл
			Если (Буфер[ВсегоСтрок-а].КодККМ = КодККМ) и (Буфер[ВсегоСтрок-а].Штрихкод = Штрихкод) Тогда
				Буфер.Удалить(ВсегоСтрок-а);
			КонецЕсли;
		КонецЦикла;

		// и перенумеровать оставшиеся после удаления покупки

		НовыйНомер = 0;
		Для Каждого СтрокаБуфера Из Буфер Цикл
			Если СтрокаБуфера.КодККМ = КодККМ Тогда
				НовыйНомер = НовыйНомер + 1;
				СтрокаБуфера.НомерПокупки = НовыйНомер;
			КонецЕсли;
		КонецЦикла;

	ИначеЕсли Событие="ИзменениеСтатусаИнтерфейса" Тогда

		// изменение статуса ККМ - фактически установка или потеря соединения
		// примечание: во время печати чека или отчета на кассе, интерфейс с ней теряется на не продолжительное время

		N = Объект.СтатусИнтерфейса;
		Попытка
			Сообщение = ?(N=1, "Установлено соединение", "Потеря соединения");
		Исключение
			Сообщение = "Ошибка получания статуса";
		КонецПопытки;

	КонецЕсли;

	Объект.СобытиеОбработано();

	Возврат ОписаниеРезультата;

КонецФункции // ОбработкаСобытия()

// обработка вызова операции на ККМ On-Line
//
// Параметры:
//  ИмяОперации  - имя выполняемой операции
//  Параметры    - структура с параметрами торгового оборудования
//  Ответ        - возвращаемая строка с представлением ошибки если она произошла, иначе пустая строка
//
Процедура ВыполнитьОперацию(ИмяОперации = "", Параметры, Ответ) Экспорт
	Перем Модель, Объект, КодККМ, Событие, Буфер, КассаККМ;

	Параметры.Свойство("Объект", Объект);

	Если ИмяОперации = "Подключить" Тогда

		Параметры.Свойство("Модель", Модель);

		Ответ = Подключить(Модель.ВнешняяКомпонента, Модель.ПрограммныйИдентификатор, Объект);

		Параметры.Вставить("Объект", Объект);

	ИначеЕсли ИмяОперации = "Отключить" Тогда

		Ответ = Отключить(Объект);

	ИначеЕсли ИмяОперации = "Событие" Тогда

		Параметры.Свойство("КодККМ"  , КодККМ  );
		Параметры.Свойство("КассаККМ", КассаККМ);
		Параметры.Свойство("Событие" , Событие );
		Параметры.Свойство("Буфер"   , Буфер   );

		Ответ = ОбработкаСобытия(Объект, Событие, КодККМ, КассаККМ, Буфер);

		Параметры.Вставить("Буфер"  , Буфер  );

	Иначе

		Ответ = "неизвестная команда";

	КонецЕсли;

КонецПроцедуры // ВыполнитьОперацию()

// возвращает параметры для текущий обработки
//
Процедура ПолучитьПараметры(Вид, ВнешняяКомпонента, ПрограммныйИдентификатор, Модели) Экспорт

	Вид                      = Перечисления.ВидыТорговогоОборудования.ККМOnLine;
	ВнешняяКомпонента        = "A200Online1c.dll";
	ПрограммныйИдентификатор = "A200OnlineExtension";

	Модели = Новый СписокЗначений;
	Модели.Добавить("ОНМС2","АМС-200Ф");

КонецПроцедуры
