// Получить описание ошибки
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//
// Возвращаемое значение:
//  строка с представлением возникшей ошибки
//
Функция ПолучитьОписаниеРезультата(Объект)
	Перем ОписаниеРезультата;

	ОписаниеРезультата = Объект.ОписаниеРезультата;
	Если Объект.Результат = -6 Тогда
		ОписаниеРезультата = ОписаниеРезультата + " (" + Объект.ОписаниеОшибкиПараметра + ")";
	КонецЕсли;

	Возврат ОписаниеРезультата;

КонецФункции // ПолучитьОписаниеРезультата()

// Подключение ККМ в режиме Off-Line
//
// Параметры:
//  Компонента   - внешняя компонента
//  ПрограммныйИдентификатор - пароль пользователя
//  Объект       - возвращаемый объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Подключить(Компонента, ПрограммныйИдентификатор, Объект, НомерЛУ)

	Попытка
		ЗагрузитьВнешнююКомпоненту(Компонента);
	Исключение
		ОписаниеРезультата = "не удалось загрузить внешнюю компоненту """ + Компонента + """";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Попытка
		Объект = Новый("AddIn." + ПрограммныйИдентификатор);
	Исключение
		ОписаниеРезультата = "не удалось создать объект внешней компоненты с программым идентификатром AddIn." + ПрограммныйИдентификатор;
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Если Объект.УстройствоВключено = 1 Тогда
		Возврат "";
	КонецЕсли;

	Объект.УстройствоВключено = 1;
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = ПолучитьОписаниеРезультата(Объект);
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Подключить()

// Отключение ККМ в режиме Off-Line
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Отключить(Объект, НомерЛУ)

	// если нет объекта, то ничего не нужно отключать
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.УстройствоВключено = 0;
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = ПолучитьОписаниеРезультата(Объект);
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Отключить()

// запись товаров из таблицы 1С во внутреннюю базу товаров ККМ
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерСекции  - номер секции
//  СписокТоваров - таблица с товарами, их ценами и количеством
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ЗагрузитьТовары(Объект, НомерСекции, СписокТоваров, НомерЛУ)

	Если СписокТоваров.Количество() = 0 Тогда
		ОписаниеРезультата = "Список товаров пуст";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.Очистить();
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = ПолучитьОписаниеРезультата(Объект);
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.ПолучитьСостояние();
	КоличествоДобавляемыхТоваров = Мин(Объект.ЗаписейВсего, СписокТоваров.Количество());

	// добавление без поиска 
	Объект.ТипДобавления = 0;
	Объект.НачалоДобавления();
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = ПолучитьОписаниеРезультата(Объект);
		Возврат ОписаниеРезультата;
	КонецЕсли;

	ОписаниеРезультата = "";
	Для а = 0 По (КоличествоДобавляемыхТоваров - 1) Цикл

		Объект.НомерПЛУ     = Прав(СписокТоваров[а].Код, 7);
		Объект.ШтрихКод     = Лев(СписокТоваров[а].Штрихкод, 13);
		Объект.Секция       = НомерСекции;
		Объект.Налог        = 0;
		Объект.Цена         = СписокТоваров[а].Цена;
		Объект.Остаток      = СписокТоваров[а].Количество;
		Объект.Наименование = Лев(СписокТоваров[а].Наименование, 24);

		Объект.УстановитьЗапись(); 
		Если Объект.Результат <> 0 Тогда
			ОписаниеРезультата = ПолучитьОписаниеРезультата(Объект);
			Объект.ОчиститьВыход();
			Прервать;
		КонецЕсли;

		Состояние("Добавлен товар: " + СписокТоваров[а].Наименование);
	КонецЦикла;

	Объект.ПоказатьПрогресс = 1;
	Объект.КонецДобавления();

	Возврат ОписаниеРезультата;

КонецФункции // ЗагрузитьТовары()

// функция закрытия смены на ККМ Off-Line
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  Отчет        - возвращаемая таблица значений с информацией о проданных товарах
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ЗакрытьСмену(Объект, Отчет, НомерЛУ)

	Отчет = Новый ТаблицаЗначений;
	Отчет.Колонки.Добавить("Код"        );
	Отчет.Колонки.Добавить("Штрихкод"   );
	Отчет.Колонки.Добавить("Цена"       );
	Отчет.Колонки.Добавить("Количество" );
	Отчет.Колонки.Добавить("Сумма"      );
	Отчет.Колонки.Добавить("НомерСекции");

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.БлокироватьУстройство();
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = ПолучитьОписаниеРезультата(Объект);
		Возврат ОписаниеРезультата;
	КонецЕсли;

	// проданные товары с гашением
	Объект.ТипОтчета        = 2; 
	Объект.КэшироватьОтчет  = 1;
	Объект.ПоказатьПрогресс = 1; 

	Объект.НачалоОтчета();
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = ПолучитьОписаниеРезультата(Объект);
		Возврат ОписаниеРезультата;
	КонецЕсли;

	ОписаниеРезультата = "";
	КоличествоСтрок = Объект.ЗаписейОтчета;
	Для Индекс = 1 По КоличествоСтрок Цикл

		Объект.ПолучитьЗапись();
		Если Объект.Результат <> 0 Тогда
			ОписаниеРезультата = ПолучитьОписаниеРезультата(Объект);
			Прервать;
		КонецЕсли;

		Стр = Отчет.Добавить();
		Стр.Код         = Объект.НомерПЛУ;
		Стр.Штрихкод    = Объект.ШтрихКод;
		Стр.Цена        = Объект.Цена;
		Стр.Количество  = Объект.Количество;
		Стр.Сумма       = Объект.Сумма;
		Стр.НомерСекции = Объект.Секция;

	КонецЦикла;

	Отчет.Свернуть("Код, Штрихкод, НомерСекции, Цена", "Количество, Сумма");

	Объект.КонецОтчета();
	Объект.РазблокироватьУстройство();

	Возврат ОписаниеРезультата;

КонецФункции // ЗакрытьСмену()

// обработка вызова операции на ККМ Off-Line
//
// Параметры:
//  ИмяОперации  - имя выполняемой операции
//  Параметры    - структура с параметрами торгового оборудования
//  Ответ        - возвращаемая строка с представлением ошибки если она произошла, иначе пустая строка
//
Процедура ВыполнитьОперацию(ИмяОперации = "", Параметры, Ответ) Экспорт
	Перем Объект, Модель, НомерЛУ, НомерСекции, СписокТоваров, ДанныеИзККМ;

	Параметры.Свойство("Объект" , Объект );
	Параметры.Свойство("НомерЛУ", НомерЛУ);

	Если ЗначениеНеЗаполнено(НомерЛУ) Тогда
		НомерЛУ = 1;
	КонецЕсли;

	Если ИмяОперации = "Подключить" Тогда

		Параметры.Свойство("Модель", Модель);

		Ответ = Подключить(Модель.ВнешняяКомпонента, Модель.ПрограммныйИдентификатор, Объект, НомерЛУ);

		Параметры.Вставить("Объект", Объект);

	ИначеЕсли ИмяОперации = "Отключить" Тогда

		Ответ = Отключить(Объект, НомерЛУ);

	ИначеЕсли ИмяОперации = "ЗагрузитьТовары" Тогда

		Параметры.Свойство("Секция", НомерСекции  );
		Параметры.Свойство("Товары", СписокТоваров);

		Ответ = ЗагрузитьТовары(Объект, НомерСекции, СписокТоваров, НомерЛУ);

	ИначеЕсли ИмяОперации = "ЗакрытьСмену" Тогда

		Ответ = ЗакрытьСмену(Объект, ДанныеИзККМ, НомерЛУ);

		Параметры.Вставить("Данные" , ДанныеИзККМ);

	Иначе

		Ответ = "Передана неизвестная команда";

	КонецЕсли;

КонецПроцедуры // ВыполнитьОперацию()

// возвращает параметры для текущий обработки
//
Процедура ПолучитьПараметры(Вид, ВнешняяКомпонента, ПрограммныйИдентификатор, Модели) Экспорт

	Вид                      = Перечисления.ВидыТорговогоОборудования.ККМOffLine;
	ВнешняяКомпонента        = "MP31C.dll";
	ПрограммныйИдентификатор = "MP345";

	Модели = Новый СписокЗначений;
	Модели.Добавить("ОФМП3","MemoPlus 3");

КонецПроцедуры
