////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы
//
// Параметры
//  Отказ                – <Булево> 
//                       – признак отказа от открытия формы; если в теле 
//                         процедуры-обработчика установить данному параметру 
//                         значение Истина, открытие формы выполнено не будет.
//
//  СтандартнаяОбработка – <Булево> 
//                       –  в данный параметр передается признак выполнения 
//                          стандартной (системной) обработки события; если в 
//                          теле процедуры-обработчика установить данному 
//                          параметру значение Ложь, стандартная обработка 
//                          события производиться не будет. Отказ от 
//                          стандартной обработки не отменяет открытие формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если глТорговоеОборудование = Неопределено Тогда
		СообщитьОбОшибке("Торговое оборудование не подключено");
		Отказ = Истина;
	ИначеЕсли глТорговоеОборудование.млТерминал.Количество() = 0 Тогда
		СообщитьОбОшибке("Терминал сбора данных не подключен");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
// Параметры
//  Нет
//
Процедура ПриОткрытии()
	
	Перем СтрокаТерминал;
	Перем Терминалы;
	Перем Терминал;
	
	Терминалы = Новый СписокЗначений();
	Для Каждого СтрокаТерминал Из глТорговоеОборудование.млТерминал Цикл
		Терминал = Новый Структура();
		Терминал.Вставить("Модель",  СтрокаТерминал.Модель);
		Терминал.Вставить("Объект",  СтрокаТерминал.Объект);
		Терминал.Вставить("НомерЛУ", СтрокаТерминал.НомерЛУ);
		Терминалы.Добавить(Терминал, Терминал.Модель);	
	КонецЦикла;
	
	ЭлементыФормы.ПолеВыбораТерминала.СписокВыбора   = Терминалы;
	ТекущийТСД                                       = Терминалы[0].Значение;
	ЭлементыФормы.ПолеВыбораТерминала.ТолькоПросмотр = 
		(Терминалы.Количество() = 1);
		
	ПолеВыбораТерминалаПриИзменении(ЭлементыФормы.ПолеВыбораТерминала);

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПриИзменении" поля выбора "ПолеВыбораТерминала"
//
// Параметры
//  Элемент - <ПолеВыбора>
//          - поле выбора "ПолеВыбораТерминала"
//
Процедура ПолеВыбораТерминалаПриИзменении(Элемент)
		
	Перем Формат;
	Перем Таблица;
	Перем ФормаОбработки;
	Перем Параметры;
	Перем Ответ;
	
	Если Не ЗначениеНеЗаполнено(ТекущийТСД) Тогда
		
		ФормаОбработки = глТорговоеОборудование.ПолучитьФормуОбработки(
			ТекущийТСД.Модель.ОбработкаОбслуживания);
		Параметры      = Новый Структура();
		
		Параметры.Вставить("Объект",  ТекущийТСД.Объект);
		Параметры.Вставить("НомерЛУ", ТекущийТСД.НомерЛУ);
		
		ФормаОбработки.ВыполнитьОперацию("ПолучитьСписокТаблиц", Параметры, Ответ);
		Если ЗначениеНеЗаполнено(Ответ) Тогда
			ЭлементыФормы.ПолеВыбораТаблицыТСД.СписокВыбора = Параметры.Таблицы;
		Иначе
			СообщитьОбОшибке("Не удалось получить список таблиц терминала: 
			                 	|" + Ответ + ".
								|Продолжение работы невозможно.");
			Закрыть();
		КонецЕсли;
		
		Если ЗначениеНеЗаполнено(ТекущийФорматВыгрузки) 
			Или ТекущаяТаблицаТСД = Неопределено Тогда
			
			глТорговоеОборудование.ТСДПолучитьПараметрыПоУмолчанию(
				ТекущийТСД.Модель, Формат, Таблица);
				
			Если ЗначениеНеЗаполнено(ТекущийФорматВыгрузки) Тогда
				ТекущийФорматВыгрузки = Формат;
			КонецЕсли;
			
			Если ТекущаяТаблицаТСД = Неопределено Тогда
				ТекущаяТаблицаТСД = Таблица;
			КонецЕсли;
			
		Иначе
			
			глТорговоеОборудование.ТСДСохранитьПараметрыПоУмолчанию(
				ТекущийТСД.Модель, ТекущийФорматВыгрузки, ТекущаяТаблицаТСД);
				
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ПолеВыбораТерминалаПриИзменении()

// Процедура - обработчик события "ПриНажатии" кнопки "Закрыть"
//
// Параметры
//  Элемент - <Кнопка>
//          - кнопка "Закрыть"
//
Процедура ЗакрытьНажатие(Элемент)
	
	Закрыть(Неопределено);

КонецПроцедуры // ЗакрытьНажатие()

// Процедура - обработчик события "ПриНажатии" кнопки "Загрузить"
//
// Параметры
//  Элемент - <Кнопка>
//          - кнопка "Загрузить"
//
Процедура ЗагрузитьНажатие()

	Перем Ответ;
	Перем Данные;
	
	Если ЗначениеНеЗаполнено(ТекущийТСД) Тогда
		
		Ответ = "не выбран терминал сбора данных";
				
	ИначеЕсли ТекущаяТаблицаТСД = Неопределено Тогда
		
		Ответ = "не выбрана таблица терминала";
		
	Иначе
		
		Ответ = ТСДЗагрузитьДанные1(ТекущийТСД,
								   ТекущаяТаблицаТСД,
								   ТекущийФорматВыгрузки,
								   Данные);
	
	КонецЕсли;
	
	Если ЗначениеНеЗаполнено(Ответ) Тогда
		Закрыть(Данные);
	Иначе
		Сообщить("Загрузка невозможна: " + Ответ, СтатусСообщения.Внимание);
	КонецЕсли;

КонецПроцедуры // ЗагрузитьНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция возвращает название колонки загружаемых данных
//
// Параметры
//  Колонка - <ПеречислениеСсылка.ТСДПоляДанных>
//          - параметр номенклатуры, который содержится в колонке
//
// Возвращаемое значение:
//  Строка  – строка, пригодная для использования в качестве имени колонки
//
Функция ПолучитьНазваниеКолонки(Колонка) Экспорт

	Перем Метаданные;
	Перем ИмяЗначения;
	
	//Метаданные  = Колонка.Метаданные();
	//ИмяЗначения = 
	//	Метаданные.ЗначенияПеречисления.Получить(
	//		Перечисления[Метаданные.Имя].Индекс(Колонка)).Имя;
	
	Возврат Колонка;

КонецФункции // ПолучитьНазваниеКолонки()

// Функция осуществляет загрузку данных из терминала сбора данных
//
// Параметры
//  Терминал - <Структура>
//           - структура, представляющая ТСД, используемый для загрузки.
//             структура имеет следующие поля:
//               "Модель"  - <СправочникСсылка.ТорговоеОборудование> 
//                         - модель ТСД
//
//               "НомерЛУ" - <Число>
//                         - номер логического устройства
//
//               "Объект"  - <НеизвестныйОбъект>
//                         - объект драйвера устройства
//
//  Таблица  - <Число>
//           - номер таблицы терминала
//
//  Формат   - <СправочникСсылка.ТСДФорматыДанных>
//           - формат данных
//
//  Данные   - <ТаблицаЗначений>
//           - выходной параметр; таблица значений, содержащая данные,
//             прочитанные из ТСД.
//
// Возвращаемое значение
//  <Строка> - описание произошедшей ошибки, либо "" в случае 
//             успешного завершения
//
Функция ТСДЗагрузитьДанные1(Терминал, Таблица, Формат, Данные) Экспорт
	
	Перем ФормаОбработки;
	Перем Параметры;
	Перем Ответ;
	Перем СтрокаФормата;
	Перем Поле;
	
	ФормаОбработки = глТорговоеОборудование.ПолучитьФормуОбработки(
		Терминал.Модель.ОбработкаОбслуживания);
		
	Параметры      = Новый Структура();
	Параметры.Вставить("Объект",  Терминал.Объект);
	Параметры.Вставить("НомерЛУ", Терминал.НомерЛУ);
	Параметры.Вставить("Таблица", Таблица);
	ФормаОбработки.ВыполнитьОперацию("ЗагрузитьДанные", Параметры, Ответ);
	
	    ФорматТСД   =   Новый ТаблицаЗначений;
		ФорматТСД.Колонки.Добавить("ПараметрНоменклатуры");
		ФорматТСД.Колонки.Добавить("ПолеТСД");
		
		Строка = ФорматТСД.Добавить();
		строка.ПараметрНоменклатуры = "ШтрихКод";         
		строка.ПолеТСД = 1;
		Строка = ФорматТСД.Добавить();
		строка.ПараметрНоменклатуры = "КоличествоНаСкладе";
		строка.ПолеТСД = 2;

	
	Если ЗначениеНеЗаполнено(Ответ) Тогда
		Данные = Параметры.Данные;
		Для Каждого СтрокаФормата Из ФорматТСД Цикл
			Поле = Формат(СтрокаФормата.ПолеТСД, "ЧЦ=10; ЧДЦ=0; ЧН=0");
			Поле = Данные.Колонки.Найти("Поле" + Поле);
			Если Поле <> Неопределено Тогда
				Поле.Имя = ПолучитьНазваниеКолонки(СтрокаФормата.ПараметрНоменклатуры);
			КонецЕсли;
		КонецЦикла;
		Если Данные.Количество() > 0 Тогда
			Ответ = Вопрос("Очистить память терминала сбора данных?",
						   РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				ФормаОбработки.ВыполнитьОперацию("ОчиститьПамятьТерминала",
												 Параметры,
												 Ответ);
			Иначе
				Ответ = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции
