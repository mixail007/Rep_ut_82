// Подключение ККМ в режиме Off-Line
//
// Параметры:
//  Компонента   - внешняя компонента
//  ПрограммныйИдентификатор - пароль пользователя
//  Объект       - возвращаемый объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Подключить(Компонента, ПрограммныйИдентификатор, Объект, НомерЛУ)

	Попытка
		ЗагрузитьВнешнююКомпоненту(Компонента);
	Исключение
		ОписаниеРезультата = "не удалось загрузить внешнюю компоненту """ + Компонента + """";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Попытка
		Объект = Новый("AddIn." + ПрограммныйИдентификатор);
	Исключение
		ОписаниеРезультата = "не удалось создать объект внешней компоненты с программым идентификатром AddIn." + ПрограммныйИдентификатор;
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Если Объект.УстройствоВключено = 1 Тогда
		Возврат "";
	КонецЕсли;

	Объект.УстройствоВключено = 1;
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Подключить()

// Отключение ККМ в режиме Off-Line
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Отключить(Объект, НомерЛУ)

	// если нет объекта, то ничего не нужно отключать
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.УстройствоВключено = 0;
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Отключить()

// запись товаров из таблицы 1С во внутреннюю базу товаров ККМ
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерСекции  - номер секции
//  СписокТоваров - таблица с товарами, их ценами и количеством
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ЗагрузитьТовары(Объект, НомерСекции, СписокТоваров, НомерЛУ)

	Если СписокТоваров.Количество() = 0 Тогда
		ОписаниеРезультата = "Список товаров пуст";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.НомерТекущегоУстройства = НомерЛУ;

	Объект.НачатьЗамещение();
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Для Каждого Товар Из СписокТоваров Цикл

		Попытка
			ШтрихКод = Число(Товар.Штрихкод);
		Исключение
			ШтрихКод = 0;
		КонецПопытки;

		Объект.ДобавитьНовый(Товар.Код,
		                     ШтрихКод,
		                     Лев(Товар.Наименование,14),
		                     Цел(Товар.Цена * 100),
		                     Товар.Количество,
		                     НомерСекции);

		Если Объект.Результат <> 0 Тогда
			ОписаниеРезультата = Объект.ОписаниеРезультата;
			Возврат ОписаниеРезультата;
		КонецЕсли;

		Состояние("Добавлен товар: " + Товар.Наименование);
	КонецЦикла;

	Если Объект.ЗакончитьЗамещение() <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // ЗагрузитьТовары()

// функция закрытия смены на ККМ Off-Line
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  Отчет        - возвращаемая таблица значений с информацией о проданных товарах
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ЗакрытьСмену(Объект, Отчет, НомерЛУ)

	Отчет = Новый ТаблицаЗначений;
	Отчет.Колонки.Добавить("Код"        );
	Отчет.Колонки.Добавить("Штрихкод"   );
	Отчет.Колонки.Добавить("Цена"       );
	Отчет.Колонки.Добавить("Количество" );
	Отчет.Колонки.Добавить("Сумма"      );
	Отчет.Колонки.Добавить("НомерСекции");

	Объект.НомерТекущегоУстройства = НомерЛУ;
	Объект.Блокировать(1);
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	// Получим количество строк в отчете 
	КоличествоСтрок = Объект.ПолныйОтчет(0,);
	Если Объект.Результат <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеРезультата;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Для Индекс = 1 По КоличествоСтрок Цикл

		ТекущаяСтрока = Объект.ПолучитьСтрокуОтчета(Индекс);
		Если Объект.Результат <> 0 Тогда
			ОписаниеРезультата = Объект.ОписаниеРезультата;

			// освобождаем буфер строк
			Объект.КонецОтчета();

			// разблокируем
			Объект.Блокировать(0);

			Возврат ОписаниеРезультата;
		КонецЕсли;

		Колво = Объект.ПолучитьДробное(ТекущаяСтрока, 6);
		Если Колво <> 0 Тогда
			Цена = Объект.ПолучитьЦелое(ТекущаяСтрока, 4) / 100;

			Стр = Отчет.Добавить();
			Стр.Код         = Объект.ПолучитьСтроку(ТекущаяСтрока, 1);
			Стр.Штрихкод    = Объект.ПолучитьСтроку(ТекущаяСтрока, 2);
			Стр.Цена        = Цена;
			Стр.Количество  = Колво;
			Стр.Сумма       = Цена * Колво;
			Стр.НомерСекции = Объект.ПолучитьСтроку(ТекущаяСтрока, 7);
		КонецЕсли;
	КонецЦикла;

	Отчет.Свернуть("Код, Штрихкод, НомерСекции, Цена", "Количество, Сумма");

	// освобождаем буфер строк
	Объект.КонецОтчета();

	// разблокируем
	Объект.Блокировать(0);

	// удаляем информацию о проданных товарах.
	Объект.Анулирование(0);

	Возврат "";

КонецФункции // ЗакрытьСмену()

// обработка вызова операции на ККМ Off-Line
//
// Параметры:
//  ИмяОперации  - имя выполняемой операции
//  Параметры    - структура с параметрами торгового оборудования
//  Ответ        - возвращаемая строка с представлением ошибки если она произошла, иначе пустая строка
//
Процедура ВыполнитьОперацию(ИмяОперации = "", Параметры, Ответ) Экспорт
	Перем Объект, Модель, НомерЛУ, НомерСекции, СписокТоваров, ДанныеИзККМ;

	Параметры.Свойство("Объект" , Объект );
	Параметры.Свойство("НомерЛУ", НомерЛУ);

	Если ЗначениеНеЗаполнено(НомерЛУ) Тогда
		НомерЛУ = 1;
	КонецЕсли;

	Если ИмяОперации = "Подключить" Тогда

		Параметры.Свойство("Модель", Модель);

		Ответ = Подключить(Модель.ВнешняяКомпонента, Модель.ПрограммныйИдентификатор, Объект, НомерЛУ);

		Параметры.Вставить("Объект", Объект);

	ИначеЕсли ИмяОперации = "Отключить" Тогда

		Ответ = Отключить(Объект, НомерЛУ);

	ИначеЕсли ИмяОперации = "ЗагрузитьТовары" Тогда

		Параметры.Свойство("Секция", НомерСекции  );
		Параметры.Свойство("Товары", СписокТоваров);

		Ответ = ЗагрузитьТовары(Объект, НомерСекции, СписокТоваров, НомерЛУ);

	ИначеЕсли ИмяОперации = "ЗакрытьСмену" Тогда

		Ответ = ЗакрытьСмену(Объект, ДанныеИзККМ, НомерЛУ);

		Параметры.Вставить("Данные" , ДанныеИзККМ);

	Иначе

		Ответ = "Передана неизвестная команда";

	КонецЕсли;

КонецПроцедуры // ВыполнитьОперацию()

// возвращает параметры для текущий обработки
//
Процедура ПолучитьПараметры(Вид, ВнешняяКомпонента, ПрограммныйИдентификатор, Модели) Экспорт

	Вид                      = Перечисления.ВидыТорговогоОборудования.ККМOffLine;
	ВнешняяКомпонента        = "MP21C.dll";
	ПрограммныйИдентификатор = "MP245";

	Модели = Новый СписокЗначений;
	Модели.Добавить("ОФМП2","MemoPlus II");

КонецПроцедуры
