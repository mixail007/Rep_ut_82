// Подключение ККМ в режиме Off-Line
//
// Параметры:
//  Компонента   - внешняя компонента
//  ПрограммныйИдентификатор - пароль пользователя
//  Объект       - возвращаемый объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Подключить(Компонента, ПрограммныйИдентификатор, Объект, НомерЛУ)

	Попытка
		ЗагрузитьВнешнююКомпоненту(Компонента);
	Исключение
		ОписаниеРезультата = "не удалось загрузить внешнюю компоненту """ + Компонента + """";
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Попытка
		Объект = Новый("AddIn." + ПрограммныйИдентификатор);
	Исключение
		ОписаниеРезультата = "не удалось создать объект внешней компоненты с программым идентификатром AddIn." + ПрограммныйИдентификатор;
		Возврат ОписаниеРезультата;
	КонецПопытки;

	Объект.НомерЛУ = НомерЛУ;
	Объект.УстановитьАктивноеЛУ();
	Если Объект.КодОшибки <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Возврат "";

КонецФункции // Подключить()

// Отключение ККМ в режиме Off-Line
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция Отключить(Объект, НомерЛУ)

	// если нет объекта, то ничего не нужно отключать
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;

	Объект.НомерПЛУ = НомерЛУ;
	Объект.УстановитьАктивноеЛУ();
	Если Объект.КодОшибки <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	// никаких дополнительных действий предпринимать не нужно
	Возврат "";

КонецФункции // Отключить()

// запись товаров из таблицы 1С во внутреннюю базу товаров ККМ
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  НомерСекции  - номер секции
//  СписокТоваров - таблица с товарами, их ценами и количеством
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ЗагрузитьТовары(Объект, НомерСекции, СписокТоваров, НомерЛУ)

	Если СписокТоваров.Количество() = 0 Тогда
		ОписаниеРезультата = "Список товаров пуст";
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.НомерПЛУ = НомерЛУ;
	Объект.УстановитьАктивноеЛУ();
	Если Объект.КодОшибки <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.УстановитьСвязь();
	Если Объект.КодОшибки <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.ОчиститьТаблицуТоваров();
	Если Объект.КодОшибки <> 0 Тогда

		ОписаниеРезультата = Объект.ОписаниеКодаОшибки;

	Иначе

		ОписаниеРезультата = "";
		Для Каждого СтрокаИзСписка Из СписокТоваров Цикл

			Объект.РежимМРА     = 64; // без поиска товара в таблице
			Объект.НомерПЛУ     = Прав(СтрокаИзСписка.Код, 7);
			Объект.ШтрихКод     = Лев(СтрокаИзСписка.Штрихкод, 13);
			Объект.Секция       = НомерСекции;
			Объект.Налог        = 0;
			Объект.Цена         = СтрокаИзСписка.Цена;
			Объект.Остаток      = СтрокаИзСписка.Количество;
			Объект.Наименование = Лев(СтрокаИзСписка.Наименование, 24);

			Объект.ДобавитьТовар(); 
			Если Объект.КодОшибки <> 0 Тогда
				ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
				Прервать;
			КонецЕсли;

			Состояние("Добавлен товар: " + СтрокаИзСписка.Наименование);

		КонецЦикла;

	КонецЕсли;

	Объект.РазорватьСвязь();

	Возврат ОписаниеРезультата;

КонецФункции // ЗагрузитьТовары()

// функция закрытия смены на ККМ Off-Line
//
// Параметры:
//  Объект       - объект подключенного торгового оборудования
//  Отчет        - возвращаемая таблица значений с информацией о проданных товарах
//  НомерЛУ      - номер логического устройства с который связан Объект
//
// Возвращаемое значение:
//  строка с представлением ошибки если она произошла, иначе пустая строка
//
Функция ЗакрытьСмену(Объект, Отчет, НомерЛУ)

	Отчет = Новый ТаблицаЗначений;
	Отчет.Колонки.Добавить("Код"        );
	Отчет.Колонки.Добавить("Штрихкод"   );
	Отчет.Колонки.Добавить("Цена"       );
	Отчет.Колонки.Добавить("Количество" );
	Отчет.Колонки.Добавить("Сумма"      );
	Отчет.Колонки.Добавить("НомерСекции");

	Объект.НомерПЛУ = НомерЛУ;
	Объект.УстановитьАктивноеЛУ();
	Если Объект.КодОшибки <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.УстановитьСвязь();
	Если Объект.КодОшибки <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
		Возврат ОписаниеРезультата;
	КонецЕсли;

	Объект.БлокировкаУстройства();
	Если Объект.КодОшибки <> 0 Тогда
		ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
	Иначе

		ОписаниеРезультата = "";

		Объект.ТипОтчёта = 2; // проданные товары с гашением
		Объект.НачатьОтчётПоТоварам();
		Если Объект.КодОшибки <> 0 Тогда
			ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
		Иначе

			КоличествоСтрок = Объект.КоличествоСтрокОтчёта;
			Для Индекс = 1 По КоличествоСтрок Цикл

				Объект.ВывестиСтрокуОтчёта();
				Если Объект.КодОшибки <> 0 Тогда
					ОписаниеРезультата = Объект.ОписаниеКодаОшибки;
					Прервать;
				КонецЕсли;

				Стр = Отчет.Добавить();
				Стр.Код         = Объект.НомерПЛУ;
				Стр.Штрихкод    = Объект.ШтрихКод;
				Стр.Количество  = Объект.КоличествоПродТовара;
				Стр.Цена        = Объект.Цена;
				Стр.Сумма       = Объект.СуммаПродажТовара;
				Стр.НомерСекции = Объект.Секция;

			КонецЦикла;

			Отчет.Свернуть("Код, Штрихкод, НомерСекции, Цена", "Количество, Сумма");

		КонецЕсли;
		Объект.ЗавершитьОтчёт();
		Объект.РазблокировкаУстройства();

	КонецЕсли;

	Объект.РазорватьСвязь();

	Возврат ОписаниеРезультата;

КонецФункции // ЗакрытьСмену()

// обработка вызова операции на ККМ Off-Line
//
// Параметры:
//  ИмяОперации  - имя выполняемой операции
//  Параметры    - структура с параметрами торгового оборудования
//  Ответ        - возвращаемая строка с представлением ошибки если она произошла, иначе пустая строка
//
Процедура ВыполнитьОперацию(ИмяОперации = "", Параметры, Ответ) Экспорт
	Перем Объект, Модель, НомерЛУ, НомерСекции, СписокТоваров, ДанныеИзККМ;

	Параметры.Свойство("Объект" , Объект );
	Параметры.Свойство("НомерЛУ", НомерЛУ);

	Если ЗначениеНеЗаполнено(НомерЛУ) Тогда
		НомерЛУ = 1;
	КонецЕсли;

	Если ИмяОперации = "Подключить" Тогда

		Параметры.Свойство("Модель", Модель );

		Ответ = Подключить(Модель.ВнешняяКомпонента, Модель.ПрограммныйИдентификатор, Объект, НомерЛУ);

		Параметры.Вставить("Объект", Объект );

	ИначеЕсли ИмяОперации = "Отключить" Тогда

		Ответ = Отключить(Объект, НомерЛУ);

	ИначеЕсли ИмяОперации = "ЗагрузитьТовары" Тогда

		Параметры.Свойство("Секция", НомерСекции  );
		Параметры.Свойство("Товары", СписокТоваров);

		Ответ = ЗагрузитьТовары(Объект, НомерСекции, СписокТоваров, НомерЛУ);

	ИначеЕсли ИмяОперации = "ЗакрытьСмену" Тогда

		Ответ = ЗакрытьСмену(Объект, ДанныеИзККМ, НомерЛУ);

		Параметры.Вставить("Данные" , ДанныеИзККМ);

	Иначе

		Ответ = "Передана неизвестная команда";

	КонецЕсли;

КонецПроцедуры // ВыполнитьОперацию()

// возвращает параметры для текущий обработки
//
Процедура ПолучитьПараметры(Вид, ВнешняяКомпонента, ПрограммныйИдентификатор, Модели) Экспорт

	Вид                      = Перечисления.ВидыТорговогоОборудования.ККМOffLine;
	ВнешняяКомпонента        = "DrvMemo.dll";
	ПрограммныйИдентификатор = "DrvMemo";

	Модели = Новый СписокЗначений;
	Модели.Добавить("ОФМПA","MemoPlus Astra");

КонецПроцедуры
