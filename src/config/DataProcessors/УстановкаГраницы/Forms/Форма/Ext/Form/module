Перем ТПрава;
Перем ТекДата;
Перем мПоказыватьФорму Экспорт;
Перем мДатаЗапрета Экспорт;


Процедура ЗаполнитьОсновноеДерево()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫбрать Ссылка КАК Роль, Даты.ГраницаЗапретаИзменений КАК ГраницаЗапретаИзменений ИЗ Перечисление.НаборПравПользователей КАК Роли
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|РегистрСведений.ГраницыЗапретаИзмененияДанных КАК Даты
	|ПО Роли.Ссылка = Даты.Роль
	|И Организация = &ПустаяОрганизация
	|ГДЕ Ссылка <> &ПолныеПрава";
	
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПолныеПрава", Перечисления.НаборПравПользователей.ПолныеПрава);

	ТПрава = Новый ТаблицаЗначений;
	
	ТПрава.Колонки.Добавить("НаборПрав");
	
	ТПрава.Колонки.Добавить("Граница");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаДерева = ТПрава.Добавить();
		СтрокаДерева.НаборПрав =  Выборка.Роль;
		СтрокаДерева.Граница = Выборка.ГраницаЗапретаИзменений;
		ТекДата = Выборка.ГраницаЗапретаИзменений;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполнения дерева даты запрета регламентированных данных
Процедура СохранитьДанные()
	
	Если НачалоДня(ТекДата) = НачалоДня(ДатаЗапрета) Тогда
		
		//Сообщить("Дата запрета уже установлена!");
		Возврат;
		
	КонецЕсли;
		
		
	Набор = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьНаборЗаписей();
	
	Набор.Отбор.Организация.Установить(Справочники.Организации.ПустаяСсылка());
	
	Для Каждого СтрокаРоли ИЗ ТПрава Цикл
		
		Запись = Набор.Добавить();
		Запись.Организация = Справочники.Организации.ПустаяСсылка();
		Запись.Роль = СтрокаРоли.НаборПрав;		
		Запись.ГраницаЗапретаИзменений = ДатаЗапрета;
		
	КонецЦикла;
	
	Набор.Записать();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|Организации.Ссылка КАК Организация  	
	|Из Справочник.Организации КАК Организации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Набор.Очистить();
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		
		Для Каждого Значение Из Перечисления.НаборПравПользователей Цикл
			Если Значение = Перечисления.НаборПравПользователей.ПолныеПрава Тогда
				Продолжить;
			КонецЕсли;
			Запись=Набор.Добавить();
			Запись.Организация = Выборка.Организация;
			Запись.Роль = Значение;
			Запись.ГраницаЗапретаИзменений = ДатаЗапрета;
		КонецЦикла;
		
		Набор.Записать();
		
	КонецЦикла;
	
	
	УстановитьПараметрГраницыЗапретаИзмененияДанных();
	
	Модифицированность = Ложь;

КонецПроцедуры

// Процедура - обработчик события "Перед открытием формы"
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЕстьДоступ = Ложь;
	
	МетаданныеНабораПрав  = Метаданные.Перечисления.НаборПравПользователей.ЗначенияПеречисления;
	ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Для каждого РольПользователя Из ТекущийПользователь.Роли Цикл
		Если Строка(РольПользователя) = Строка(Перечисления.НаборПравПользователей.ПолныеПрава) Тогда
			ЕстьДоступ = Истина;
		КонецЕсли;
	КонецЦикла;

	Если (ЕстьДоступ) ИЛИ (глЗапускСистемы) Тогда
		
		ЗаполнитьОсновноеДерево();
		Если мПоказыватьФорму <> Неопределено И
			 НЕ мПоказыватьФорму Тогда
			 
			 ДатаЗапрета = мДатаЗапрета;
			 СохранитьДанные();
			 Отказ = Истина;
			 
		КонецЕсли;
		
	Иначе 
		
		Предупреждение("Вы не можете использовать данный инструмент!", 5); 
		Отказ = Истина;
		
	КонецЕсли;
	
	
КонецПроцедуры


Процедура КнопкаВыполнитьНажатие(Элемент)
	
	Если НачалоДня(ТекДата) = НачалоДня(ДатаЗапрета) Тогда
		Сообщить("Дата запрета уже установлена!");
	Иначе
		СохранитьДанные();
	КонецЕсли;
	
КонецПроцедуры