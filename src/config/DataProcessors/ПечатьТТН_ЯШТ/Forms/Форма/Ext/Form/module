Функция ПечатьТТН() Экспорт

	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",  Документ);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	Если  ТипЗнч(Документ)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	      ТОГДА ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|					  ТОГДА Контрагент
	|					  ИНАЧЕ КонтрагентДляПечати КОНЕЦ
	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
	|	      ТОГДА Организация
	|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	|	БанковскийСчетОрганизации КАК БанковскийСчет,
	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|		  ТОГДА Контрагент
	|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Покупатель,
	|	ВЫБОР КОГДА КонтрагентДляПечати = &ПустойКонтрагент
	|		  ТОГДА Контрагент
	|   	  ИНАЧЕ КонтрагентДляПечати КОНЕЦ КАК Плательщик,
	|	Подразделение,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов       КАК Курс,
	|	КратностьВзаиморасчетов  КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	//ЧерезТК,
	|	//ОтгрузкаЧерезЧП,
	|	НомерДоверенности,
	|	ДатаДоверенности,
	|	ФизЛицоДоверенности
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";

	ИначеЕсли ТипЗнч(Документ)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	ТОГДА Контрагент   ИНАЧЕ Грузополучатель  КОНЕЦ
	|	КАК Грузополучатель,
	|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
	|	      ТОГДА Организация
	|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	|	БанковскийСчетОрганизации КАК БанковскийСчет,
	|	Контрагент КАК Покупатель,
	|		  Контрагент КАК Плательщик,
	|	Подразделение,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов       КАК Курс,
	|	КратностьВзаиморасчетов  КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|	ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";

	КонецЕсли;
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Если Реализации.Количество()>0 Тогда
	Запрос.УстановитьПараметр("ТекущийДокумент", Реализации.ВыгрузитьКолонку("Реализация"));	
	Иначе
    Запрос.УстановитьПараметр("ТекущийДокумент", Документ);
	КонецЕсли;

	Если Документ.ВалютаДокумента = Документ.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		Запрос.УстановитьПараметр("Курс", Документ.КурсВзаиморасчетов);
		Запрос.УстановитьПараметр("Кратность", Документ.КратностьВзаиморасчетов);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		Запрос.УстановитьПараметр("Курс", 1);
		Запрос.УстановитьПараметр("Кратность", 1);
	КонецЕсли;

	
	
		Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Склад		                                 КАК Склад,
	|	РеализацияТоваровУслуг.Номенклатура                                 КАК Номенклатура,
	|	РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное              КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Номенклатура." + ТоварКод + "                КАК Артикул,
	|	РеализацияТоваровУслуг.ЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.ЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	РеализацияТоваровУслуг.ЕдиницаИзмеренияМест.Представление           КАК ВидУпаковки,
	|	РеализацияТоваровУслуг.СтавкаНДС           КАК СтавкаНДС,
	|	РеализацияТоваровУслуг.Цена                КАК Цена,
	|	РеализацияТоваровУслуг.Количество          КАК Количество,
	|	РеализацияТоваровУслуг.КоличествоМест      КАК КоличествоМест,
	|	РеализацияТоваровУслуг.Сумма               КАК Сумма,
	|	РеализацияТоваровУслуг.СуммаНДС            КАК СуммаНДС,
	|	РеализацияТоваровУслуг.НомерСтроки         КАК НомерСтроки
	|ИЗ
	|
	|Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|ГДЕ
	|РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО РеализацияТоваровУслуг.Ссылка.Дата ВОЗР, РеализацияТоваровУслуг.НомерСтроки ВОЗР
	|
	|";

	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
	Запрос.Текст=СтрЗаменить(Запрос.Текст,".РеализацияТоваровУслуг",".ВозвратТоваровПоставщику");
	КонецЕсли;
	Если Реализации.Количество()>0 Тогда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент","РеализацияТоваровУслуг.Ссылка В (&ТекущийДокумент)");
	КонецЕсли;
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = ПолучитьМакет("ТТН");

	// Выводим общие реквизиты шапки
	
		СведенияОПоставщике       = СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента,, Шапка.БанковскийСчет);	
		
		СведенияОПокупателе       	  = СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);

	СведенияОГрузополучателе  = СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
		
		СведенияОГрузоотправитель = СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ГрузоотправительПоОКПО        = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ГрузополучательПоОКПО         = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО              = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.МаркаАвтомобиля           	  = СокрЛП(МаркаАвтомобиля);
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        	  = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя               	  = Водитель;
	ОбластьМакета.Параметры.ГосНомерПрицепа           	  = ГосНомерПрицепа;

	

	ТабДокумент.Вывести(ОбластьМакета);

	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ЗапросТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоКоличество_Отгр=0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 0;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
        ИтогоКоличество=ИтогоКоличество+ВыборкаСтрок.Количество;
		ИтогоКоличество_Отгр = ?(ЭлементыФормы.ПечатьОтгрузки.Значение, ИтогоКоличество_Отгр+ ВыборкаСтрок.Количество, 0);
		Если ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном           = Ном + 1;
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");

			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;

			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// очистим итоги по странице
			ИтогоКоличествоНаСтранице = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;

			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);

		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.Склад = ВыборкаСтрок.Склад;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование
		                                          //+ ПредставлениеСерий(ВыборкаСтрок)
		                                         // + ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "")
												  + ?(ЗначениеНеЗаполнено(ВыборкаСтрок.Номенклатура.Производитель),""," (" + ВыборкаСтрок.Номенклатура.Производитель + ")");
                       
		Мест        = ВыборкаСтрок.КоличествоМест;
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = (ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС));
		СуммаНДС    = ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС = СуммаСНДС  - СуммаНДС;

		ОбластьМакета.Параметры.Сумма = 0;
		ОбластьМакета.Параметры.Цена  = ?(ЭлементыФормы.ПечатьОтгрузки.Значение, ВыборкаСтрок.Количество, 0);

		ТабДокумент.Вывести(ОбластьМакета);

		// увеличим итоги по странице
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоКоличествоНаСтранице_Отгр = ?(ЭлементыФормы.ПечатьОтгрузки.Значение, ИтогоКоличествоНаСтранице + Количество, 0);
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;

		// увеличим итоги по дукументу
		ИтогоМест       = ИтогоМест       + Мест;
		//ИтогоКоличество_Отгр = ?(ЭлементыФормы.ПечатьОтгрузки.Значение, ИтогоКоличество + Количество, 0);
		
		ИтогоСуммаСНДС  = 0; //ИтогоСуммаСНДС  + СуммаСНДС;

	КонецЦикла;

	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице_Отгр = ?(ЭлементыФормы.ПечатьОтгрузки.Значение, ИтогоКоличествоНаСтранице, 0);
	ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;

	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоКоличество_Отгр = ?(ЭлементыФормы.ПечатьОтгрузки.Значение, ИтогоКоличество_Отгр, 0);
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = 0; //ИтогоСуммаСНДС;

	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	//Если НЕ Шапка.ОтгрузкаЧерезЧП Тогда
		
		Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
		Руководитель = Руководители.Руководитель;
		Бухгалтер    = Руководители.ГлавныйБухгалтер;
		
	//Доверенность
	Если  ТипЗнч(Документ)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
 	ОбластьМакета.Параметры.НомерДоверенности 	= Шапка.НомерДоверенности;
	ОбластьМакета.Параметры.ДатаДоверенности 	= Шапка.ДатаДоверенности;
	ОбластьМакета.Параметры.ДоверенностьВыдана 	= Шапка.ФизЛицоДоверенности;
	КонецЕсли; 
	
	//Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	//Руководитель = Руководители.Руководитель;
	//Бухгалтер    = Руководители.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.ДатаДокумента=Формат(Шапка.ДатаДокумента,"ДЛФ=DD");
	//ОбластьМакета.Параметры.ФИООтпускРпзрешил     = Руководитель;
	//ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;

	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.КоличествоСтрок         = КоличествоСтрок;
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	ОбластьМакета.Параметры.ВсегоМестПрописью       = ЧислоПрописью(ИтогоМест, ,",,,,,,,,0");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	ОбластьМакета   = Макет.ПолучитьОбласть("ТранспортныйРаздел");
	ШрифтСтандарт   = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , НЕ ЛицензионнаяКарточка);
	ШрифтОграничено = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , ЛицензионнаяКарточка);

	ОбластьМакета.Области.Стандарт.Шрифт   = ШрифтСтандарт;
	ОбластьМакета.Области.Ограничено.Шрифт = ШрифтОграничено;

	ОбластьМакета.Параметры.СрокДоставки              = СрокДоставки;
	ОбластьМакета.Параметры.Номер                     = ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ОрганизацияПеревозчик     = Перевозчик;
	ОбластьМакета.Параметры.МаркаАвтомобиля           = МаркаАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ОрганизацияЗаказчик       = Заказчик;
	ОбластьМакета.Параметры.ФИОВодителя               = Водитель;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
	ОбластьМакета.Параметры.ВидПеревозки              = ВидПеревозки;
	ОбластьМакета.Параметры.ПунктПогрузки             = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки            = ПунктРазгрузки;
	ОбластьМакета.Параметры.Прицеп                    = МаркаПрицепа;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = ГосНомерПрицепа;

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("СведенияОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;

КонецФункции // ПечатьТТН()

Процедура ЗаписатьДанныеВДокумент()
	
	ДокументОбъект = Документ.ПолучитьОбъект();
	//ДокументОбъект.ПунктРазгрузки 		= АдресДоставки;
	ДокументОбъект.СрокДоставки   		= СрокДоставки;
	ДокументОбъект.МаркаАвтомобиля 		= МаркаАвтомобиля;
	ДокументОбъект.МаркаПрицепа			= МаркаПрицепа;
	ДокументОбъект.ГосНомерАвтомобиля  	= ГосНомерАвтомобиля;
	ДокументОбъект.ГосНомерПрицепа     	= ГосНомерПрицепа;
	ДокументОбъект.ПунктПогрузки		= ПунктПогрузки;
	ДокументОбъект.ПунктРазгрузки      	= ПунктРазгрузки;
	ДокументОбъект.Водитель            	= Водитель;
	ДокументОбъект.Перевозчик          	= Перевозчик;
	ДокументОбъект.Заказчик            	= Заказчик;
	ДокументОбъект.ВидПеревозки        	= ВидПеревозки;
	ДокументОбъект.ВодительскоеУдостоверение = ВодительскоеУдостоверение;

	//ДокументОбъект.Записать();
	
	ДокументОбъект.Разблокировать();
	
	ДокументОбъект.Записать();
	
	Если Форма <> Неопределено Тогда
	
		Оповестить("ТТН");	
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Элемент)

	Если ЗначениеНеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;

	ТабДокумент = ПечатьТТН();
	НапечататьДокумент(ТабДокумент, 1, Ложь, "Товарно-транспортная накладная");
	
	ЗаписатьДанныеВДокумент();

КонецПроцедуры

Функция ПолучитьАдресИзКонтактнойИнформации_Лок(Объект, ТипАдреса = "")

	Если ЗначениеНеЗаполнено(ТипАдреса) Тогда
		Возврат "";
	КонецЕсли;

	Если ТипАдреса="Фактический" Тогда
		Начало = "Факт";
		
	ИначеЕсли ТипАдреса="Складской" Тогда
		Начало = "Складской";

	ИначеЕсли ТипАдреса="Регистрации"
		  ИЛИ ТипАдреса="Юридический" Тогда
		Начало = "Юр";
	Иначе
		Возврат "";
	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.Организации") Тогда
		Окончание = "организации";
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
		Окончание = "Контрагента";
	КонецЕсли;
	

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление,
	|	КонтактнаяИнформация.Вид
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект И
	|	КонтактнаяИнформация.Тип = &Тип
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			Если Выборка.Вид.Наименование = "Складской адрес организации" Тогда 
				Возврат Выборка.Представление;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;

КонецФункции // ПолучитьАдресИзКонтактнойИнформации()


Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	ПечатьОтгрузки=Истина;
	Если НЕ ПустаяСтрока(ПолучитьАдресИзКонтактнойИнформации_Лок(Документ.Организация,"Складской")) Тогда
		ЭлементыФормы.ПунктПогрузки.Значение = ПолучитьАдресИзКонтактнойИнформации_Лок(Документ.Организация,"Складской");
	КонецЕсли;

	
КонецПроцедуры

Процедура ДокументПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	
	ПриОткрытии();
	
КонецПроцедуры

Процедура ПриЗакрытии()
	// Вставить содержимое обработчика.
	
	ЗаписатьДанныеВДокумент();
	
КонецПроцедуры

Процедура ДействиеЗаполнитьНажатие(Элемент)
	Реализации.Очистить();
	Если Не ЗначениеНеЗаполнено(Документ) Тогда
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ Ссылка
		             |ИЗ Документ.РеализацияТоваровУслуг 
		             |ГДЕ  Дата МЕЖДУ &НачДата И &КонДата
		             |	И Контрагент = &Контрагент";
		Запрос.УстановитьПараметр("Контрагент",Документ.Контрагент);			 
		Запрос.УстановитьПараметр("НачДата",НачалоДня(Документ.Дата));			 
		Запрос.УстановитьПараметр("КонДата",КонецДня(Документ.Дата));			 
		Выборка=Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаРеализации=Реализации.Добавить();
			СтрокаРеализации.Реализация=Выборка.Ссылка;
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПеревозчикНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка= ЛОЖЬ;
	ФормаВыбораКонтрагента=Справочники.Контрагенты.ПолучитьФормуВыбора();
	ВыбКонтрагент=ФормаВыбораКонтрагента.ОткрытьМодально();
	Перевозчик=?(ЗначениеЗаполнено(ВыбКонтрагент),ВыбКонтрагент.НаименованиеПолное,"");
КонецПроцедуры
