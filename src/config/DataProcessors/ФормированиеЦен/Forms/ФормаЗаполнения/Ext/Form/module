////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мФормаВыбораФильтров;
Перем мФормаПодбораЗначенийФильтра;
Перем мДействиеТабличноеПолеЗначенияФильтровЗначениеФильтраНачалоВыбора;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Выполняет настройку отчета по умолчанию для заданного регистра накопления.
//
// Параметры: 
// 
Процедура ЗаполнитьНачальныеНастройки()

	Если мКоманда = "Изменить" Тогда
		ЭлементыФормы.ПанельОбработки.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		ЭлементыФормы.ПанельДополнительнойИнформации.ТекущаяСтраница = ЭлементыФормы.ПанельДополнительнойИнформации.Страницы.СтраницаЗаполнения;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьНачальныеНастройкиИзменениеЦен()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "Перед открытием" формы обработки.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ЗначениеНеЗаполнено(ИмяРегистра) Тогда
		ИмяРегистра = "ЦеныНоменклатуры";
	КонецЕсли;

	Если ИмяРегистра = "СкидкиНаценкиНоменклатуры" Тогда
		ЭлементыФормы.ВключатьНезаполненные.Заголовок = "Включать товары, для которых скидки (наценки) не установлены";
	КонецЕсли;

	Если ИмяРегистра = "ЦеныНоменклатуры" Тогда
		ЗаполнитьПостроительОтчетаПоЦенамНоменклатуры(ВключатьНезаполненные, Ложь);
	ИначеЕсли ИмяРегистра = "ЦеныНоменклатурыКонтрагентов" Тогда
		ЗаполнитьПостроительОтчетаПоЦенамНоменклатурыКонтрагентов(ВключатьНезаполненные, Ложь);
	ИначеЕсли ИмяРегистра = "СкидкиНаценкиНоменклатуры" Тогда
		ЗаполнитьПостроительОтчетаПоСкидкамНаценкамНоменклатуры(ВключатьНезаполненные, Ложь);
	Иначе
		СообщитьОбОшибке("Неверно задано имя регистра!", Отказ);
	КонецЕсли;

	ЗаполнитьНачальныеНастройки();

КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "НачалоВыбора" значения отбора.
//
Процедура ОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ТипыЦенНоменклатурыКонтрагентов") Тогда
		Контрагент = ПостроительОтчета.Отбор.Контрагент.Значение;
		Если Не ЗначениеНеЗаполнено(Контрагент) Тогда
			СтандартнаяОбработка = Ложь;
			ФормаВыбора = Справочники.ТипыЦенНоменклатурыКонтрагентов.ПолучитьФормуВыбора();

			ФормаВыбора.Отбор.Владелец.Значение = Контрагент;
			ФормаВыбора.Отбор.Владелец.Использование = Истина;
			Элемент.Значение = ФормаВыбора.ОткрытьМодально();

			Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ТипыЦенНоменклатурыКонтрагентов")
			   И НЕ ЗначениеНеЗаполнено(Элемент.Значение)
			   И ЗначениеНеЗаполнено(Элемент.Значение.ТипЦеныНоменклатуры) Тогда
				СообщитьОбОшибке("У выбранного типа цен контрагентов """ + Элемент.Значение
				                 + """ не заполнен реквизит ""Тип цены номенклатуры""! Заполнение невозможно.");
				Элемент.Значение = Неопределено;
				Возврат;
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" значения отбора.
//
Процедура ОтборЗначениеПриИзменении(Элемент)

	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ТипыЦенНоменклатурыКонтрагентов")
	   И НЕ ЗначениеНеЗаполнено(Элемент.Значение)
	   И ЗначениеНеЗаполнено(Элемент.Значение.ТипЦеныНоменклатуры) Тогда
		СообщитьОбОшибке("У выбранного типа цен контрагентов """ + Элемент.Значение
		                 + """ не заполнен реквизит ""Тип цены номенклатуры""! Заполнение невозможно.");
		Элемент.Значение = Неопределено;
		Возврат;
	КонецЕсли;

	Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Элемент.Значение)) и Элемент.Значение.ЭтоГруппа Тогда
		ЭлементыФормы.Отбор.ТекущаяСтрока.ВидСравнения = ВидСравнения.ВИерархии;
	КонецЕсли;

КонецПроцедуры // ОтборЗначениеПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура вызывается при нажатии кнопки "Выполнить". Формирует и выполняет запрос в
// соответствии с установленными отборами и оповещает владельца о выборе, 
// передавая результат запроса
//
Процедура КнопкаВыполнитьНажатие(Элемент)

	Если мКоманда <> "Изменить" Тогда
		Возврат;
	КонецЕсли;

	Запрос = ПостроительОтчета.ПолучитьЗапрос();
	РезультатЗапроса = Запрос.Выполнить();

	ЗначениеВыбора = Новый Структура;
	ЗначениеВыбора.Вставить("Команда", "ЗаполнениеТабличнойЧасти");
	ЗначениеВыбора.Вставить("Результат", РезультатЗапроса);
	Если РезультатЗапроса.Пустой() Тогда
		СообщитьОбОшибке("Нет данных для заполнения цен. Возможно в типах цен контрагентов не указаны типы цен номенклатуры.");
	КонецЕсли;

	ОповеститьОВыборе(ЗначениеВыбора);

КонецПроцедуры

// Процедура вызывается при изменении флажка "Включать товары, для которых цены не установлены"
//
Процедура ВключатьНезаполненныеПриИзменении(Элемент)

	Если ИмяРегистра = "ЦеныНоменклатуры" Тогда
		ЗаполнитьПостроительОтчетаПоЦенамНоменклатуры(ВключатьНезаполненные, Истина,ВключатьТолькоНаОстатках);
	ИначеЕсли ИмяРегистра = "ЦеныНоменклатурыКонтрагентов" Тогда
		ЗаполнитьПостроительОтчетаПоЦенамНоменклатурыКонтрагентов(ВключатьНезаполненные, Истина);
	ИначеЕсли ИмяРегистра = "СкидкиНаценкиНоменклатуры" Тогда
		ЗаполнитьПостроительОтчетаПоСкидкамНаценкамНоменклатуры(ВключатьНезаполненные, Истина);
	КонецЕсли;

КонецПроцедуры

// Процедура вызывается при изменении реквизита "ВыводитьЦеныВЕдиницахХранения"
//
Процедура ВыводитьЦеныВЕдиницахХраненияПриИзменении(Элемент)

КонецПроцедуры

// Процедура вызывается при изменении реквизита "ВыводитьЦеныВОсновныхЕдиницах"
//
Процедура ВыводитьЦеныВОсновныхЕдиницахПриИзменении(Элемент)

КонецПроцедуры





