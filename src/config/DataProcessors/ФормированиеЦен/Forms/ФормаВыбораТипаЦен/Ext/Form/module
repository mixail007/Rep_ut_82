
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура при необходимости сортирует дерево значений
//
Процедура ОтсортироватьДерево()

	Если ФлажокПеремещения Тогда
		ДеревоТиповЦенСкидок.Строки.Сортировать("Пометка УБЫВ");
	КонецЕсли;

КонецПроцедуры // ОтсортироватьДерево()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ОК" формы
//
Процедура ОсновныеДействияФормыОК(Кнопка)

	СписокТиповЦенСкидок.Очистить();

	Для Каждого СтрокаДерева Из ДеревоТиповЦенСкидок.Строки Цикл
		Если СтрокаДерева.Пометка Тогда
			СписокТиповЦенСкидок.Добавить(СтрокаДерева.ТипЦенСкидокСсылка);
		КонецЕсли;
	КонецЦикла;

	СтруктураВозвращаемыхЗначений = Новый Структура();
	СтруктураВозвращаемыхЗначений.Вставить("СписокТиповЦенСкидок", СписокТиповЦенСкидок);
	СтруктураВозвращаемыхЗначений.Вставить("Команда",        "ИзменениеТиповЦенСкидок");
	ОповеститьОВыборе(СтруктураВозвращаемыхЗначений);

КонецПроцедуры // ОсновныеДействияФормыОК()

// Процедура вызывается при нажатии кнопки "Установить все пометки" формы
//
Процедура ПанельТиповЦенСкидокКнопкаВыборатьВсе(Кнопка)

	Для Каждого СтрокаДерева Из ДеревоТиповЦенСкидок.Строки Цикл
		СтрокаДерева.Пометка = Истина;
	КонецЦикла;

КонецПроцедуры // ПанельТиповЦенСкидокКнопкаВыборатьВсе()

// Процедура вызывается при нажатии кнопка "Снять все пометки" формы
//
Процедура ПанельТиповЦенСкидокКнопкаСнятьВсе(Кнопка)

	Для Каждого СтрокаДерева Из ДеревоТиповЦенСкидок.Строки Цикл
		СтрокаДерева.Пометка = Ложь;
	КонецЦикла;

КонецПроцедуры // ПанельТиповЦенСкидокКнопкаСнятьВсе()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	// Обновить диалог
	Если ИмяСправочникаВыбора = "ТипыЦенНоменклатурыКонтрагентов" Тогда
		ЭлементыФормы.ПанельТиповЦенСкидок.Кнопки.КнопкаДобавить.Доступность = Истина;
	КонецЕсли;

	ДеревоТиповЦенСкидок.Колонки.Добавить("ТипЦенСкидокСсылка", Новый ОписаниеТипов("СправочникСсылка."+ИмяСправочникаВыбора));
	ДеревоТиповЦенСкидок.Строки.ЗагрузитьКолонку(СписокТиповЦенСкидок.ВыгрузитьЗначения() ,"ТипЦенСкидокСсылка");

	// Заполнить пометки и строковое представление
	Для Каждого ТипЦен Из СписокТиповЦенСкидок Цикл
		НоваяСтрокаДерева = ДеревоТиповЦенСкидок.Строки.Добавить();
		НоваяСтрокаДерева.Пометка            = Истина;
		НоваяСтрокаДерева.ТипЦенСкидокСсылка = ТипЦен.Значение;
		НоваяСтрокаДерева.ТипЦенСкидокСтрока = СокрЛП(ТипЦен.Значение);
	КонецЦикла;

	Выборка = Справочники[ИмяСправочникаВыбора].Выбрать( ,?(ЗначениеНеЗаполнено(ВладелецЦенСкидок), Неопределено, ВладелецЦенСкидок));
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.ПометкаУдаления Тогда
			//Если ИмяСправочникаВыбора = "ТипыЦенНоменклатуры" И Выборка.Рассчитывается Тогда
			//	Продолжить;
			//КОнецЕсли;
			Если ДеревоТиповЦенСкидок.Строки.Найти(Выборка.Ссылка) = Неопределено Тогда
				НоваяСтрокаДерева = ДеревоТиповЦенСкидок.Строки.Добавить();
				НоваяСтрокаДерева.ТипЦенСкидокСтрока = СокрЛП(Выборка);
				НоваяСтрокаДерева.ТипЦенСкидокСсылка = Выборка.Ссылка;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ФлажокПеремещения = ВосстановитьЗначение("ФормированиеЦен_ФормаВыбораТипаЦен_ФлажокПеремещения");

КонецПроцедуры // ПриОткрытии()

// Обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()

	СохранитьЗначение("ФормированиеЦен_ФормаВыбораТипаЦен_ФлажокПеремещения", ФлажокПеремещения);

КонецПроцедуры // ПриЗакрытии()

// Обработчик события "ОбновлениеОтображения" формы.
//
Процедура ОбновлениеОтображения()

	ОтсортироватьДерево()

КонецПроцедуры

// Обработчик нажатия кнопки "Добавить новый тип цен" .
//
Процедура ПанельТиповЦенСкидокКнопкаДобавить(Кнопка)

	// Открываем форму нового элемента справочника
	СпрТипыЦен           = Справочники.ТипыЦенНоменклатурыКонтрагентов;
	ФормаНового          = СпрТипыЦен.ПолучитьФормуНовогоЭлемента();
	ФормаНового.Владелец = ВладелецЦенСкидок;
	ФормаНового.ЭлементыФормы.Владелец.Доступность = Ложь;

	ФормаНового.ОткрытьМодально();

	// Заполнить пометки и строковое представление
	НовыйТипЦен = ФормаНового.Ссылка;

	Если НовыйТипЦен <> СпрТипыЦен.ПустаяСсылка() Тогда
		НоваяСтрокаДерева = ДеревоТиповЦенСкидок.Строки.Добавить();
		НоваяСтрокаДерева.Пометка            = Истина;
		НоваяСтрокаДерева.ТипЦенСкидокСсылка = НовыйТипЦен;
		НоваяСтрокаДерева.ТипЦенСкидокСтрока = СокрЛП(НовыйТипЦен);
	КонецЕсли;

КонецПроцедуры // ПанельТиповЦенСкидокКнопкаДобавить()







