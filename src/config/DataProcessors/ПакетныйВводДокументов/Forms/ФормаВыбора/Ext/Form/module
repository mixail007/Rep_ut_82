// Определяет возможность групповой обработки данных.
Перем мМножВыбор;
// Определяет, из какой таблицы главной формы отчета была вызвана форма.
Перем мИсходнаяТаблица;

// Процедура передает сделанные настройки в главную форму отчета.
//
Процедура Выбрать()

	МассивСтрока = Новый Массив; 
	МассивСтрока.Добавить(Тип("Строка"));
	КвалификаторСтроки  = Новый КвалификаторыСтроки("100", ДопустимаяДлина.Переменная);
	ОписаниеТиповСтрока = Новый ОписаниеТипов(МассивСтрока, , КвалификаторСтроки);

	Если мИсходнаяТаблица = "СписокГруппировок"  тогда

		ВыбранныеСтроки = Новый ТаблицаЗначений;
		ВыбранныеСтроки.Колонки.Добавить("ИмяГруппировки",           ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ОписаниеГруппировки",      ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ПредставлениеГруппировки", ОписаниеТиповСтрока);

		Если мМножВыбор Тогда
			Для Каждого СтрТабличноеПоле Из ТабличноеПоле Цикл
				Если СтрТабличноеПоле.Пометка Тогда
					НоваяСтрока = ВыбранныеСтроки.Добавить();
					НоваяСтрока.ИмяГруппировки           = СтрТабличноеПоле.ИмяПоля;
					НоваяСтрока.ПредставлениеГруппировки = СтрТабличноеПоле.ПредставлениеПоля;
					НоваяСтрока.ОписаниеГруппировки      = СтрТабличноеПоле.ОписаниеПоля;
				КонецЕсли;
			КонецЦикла;

		Иначе
			Если ЭлементыФормы.ТабличноеПоле.ТекущаяСтрока <> Неопределено Тогда
				СтрТабличноеПоле = ЭлементыФормы.ТабличноеПоле.ТекущиеДанные;
				НоваяСтрока = ВыбранныеСтроки.Добавить();
				НоваяСтрока.ИмяГруппировки           = СтрТабличноеПоле.ИмяПоля;
				НоваяСтрока.ПредставлениеГруппировки = СтрТабличноеПоле.ПредставлениеПоля;
				НоваяСтрока.ОписаниеГруппировки      = СтрТабличноеПоле.ОписаниеПоля;
			КонецЕсли;

		КонецЕсли;

	ИначеЕсли мИсходнаяТаблица = "СписокГруппировокСписок" тогда

		ВыбранныеСтроки = Новый ТаблицаЗначений;
		ВыбранныеСтроки.Колонки.Добавить("ИмяГруппировки",           ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ОписаниеГруппировки",      ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ПредставлениеГруппировки", ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("Пометка");

		Для Каждого СтрТабличноеПоле Из ТабличноеПоле Цикл
			НоваяСтрока = ВыбранныеСтроки.Добавить();
			НоваяСтрока.ИмяГруппировки           = СтрТабличноеПоле.ИмяПоля;
			НоваяСтрока.ПредставлениеГруппировки = СтрТабличноеПоле.ПредставлениеПоля;
			НоваяСтрока.ОписаниеГруппировки      = СтрТабличноеПоле.ОписаниеПоля;
			НоваяСтрока.Пометка=СтрТабличноеПоле.Пометка;
		КонецЦикла;

	ИначеЕсли мИсходнаяТаблица = "СписокПоказатели" Тогда

		ВыбранныеСтроки = Новый ТаблицаЗначений;
		ВыбранныеСтроки.Колонки.Добавить("ИмяПоказателя",           ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ОписаниеПоказателя",      ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ПредставлениеПоказателя", ОписаниеТиповСтрока);

		Если ЭлементыФормы.ТабличноеПоле.ТекущаяСтрока <> Неопределено Тогда

			СтрТабличноеПоле = ЭлементыФормы.ТабличноеПоле.ТекущиеДанные;

			НоваяСтрока = ВыбранныеСтроки.Добавить();
			НоваяСтрока.ИмяПоказателя           = СтрТабличноеПоле.ИмяПоля;
			НоваяСтрока.ПредставлениеПоказателя = СтрТабличноеПоле.ПредставлениеПоля;
			НоваяСтрока.ОписаниеПоказателя      = СтрТабличноеПоле.ОписаниеПоля;

		КонецЕсли;

	ИначеЕсли мИсходнаяТаблица="СписокПоказателиСписок" Тогда

		ВыбранныеСтроки = Новый ТаблицаЗначений;
		ВыбранныеСтроки.Колонки.Добавить("ИмяПоказателя",           ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ОписаниеПоказателя",      ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ПредставлениеПоказателя", ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("Пометка");

		Для Каждого СтрТабличноеПоле Из ТабличноеПоле Цикл
			НоваяСтрока = ВыбранныеСтроки.Добавить();
			НоваяСтрока.ИмяПоказателя           = СтрТабличноеПоле.ИмяПоля;
			НоваяСтрока.ПредставлениеПоказателя = СтрТабличноеПоле.ПредставлениеПоля;
			НоваяСтрока.ОписаниеПоказателя      = СтрТабличноеПоле.ОписаниеПоля;
			НоваяСтрока.Пометка = СтрТабличноеПоле.Пометка;
		КонецЦикла;

	Иначе
	
		ВыбранныеСтроки = Новый ТаблицаЗначений;
		ВыбранныеСтроки.Колонки.Добавить("ИмяФильтра",           ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ОписаниеФильтра",      ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ПредставлениеФильтра", ОписаниеТиповСтрока);
		ВыбранныеСтроки.Колонки.Добавить("ОписаниеТипов");

		Если мМножВыбор Тогда
			Для Каждого СтрТабличноеПоле Из ТабличноеПоле Цикл
				Если СтрТабличноеПоле.Пометка Тогда
					НоваяСтрока = ВыбранныеСтроки.Добавить();
					НоваяСтрока.ИмяФильтра           = СтрТабличноеПоле.ИмяПоля;
					НоваяСтрока.ПредставлениеФильтра = СтрТабличноеПоле.ПредставлениеПоля;
					НоваяСтрока.ОписаниеФильтра      = СтрТабличноеПоле.ОписаниеПоля;
					НоваяСтрока.ОписаниеТипов        = СтрТабличноеПоле.ОписаниеТипов;
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если ЭлементыФормы.ТабличноеПоле.ТекущаяСтрока <> Неопределено Тогда
				СтрТабличноеПоле = ЭлементыФормы.ТабличноеПоле.ТекущиеДанные;

				НоваяСтрока = ВыбранныеСтроки.Добавить();
				НоваяСтрока.ИмяФильтра           = СтрТабличноеПоле.ИмяПоля;
				НоваяСтрока.ПредставлениеФильтра = СтрТабличноеПоле.ПредставлениеПоля;
				НоваяСтрока.ОписаниеФильтра      = СтрТабличноеПоле.ОписаниеПоля;
				НоваяСтрока.ОписаниеТипов        = СтрТабличноеПоле.ОписаниеТипов;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	ОповеститьОВыборе(ВыбранныеСтроки);

КонецПроцедуры // Выбрать()

// Процедура - обработчик события "При открытии" формы.
//
Процедура ПриОткрытии()

	СтруктураПараметров = НачальноеЗначениеВыбора;

	мМножВыбор       = Истина;
	мИсходнаяТаблица = "";
	СтруктураСуществующиеЗначения   = Новый Структура;
	СтруктураНеиспользуемыеЗначения = Новый Структура;

	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		СтруктураПараметров.Свойство("МножественныйВыбор",              мМножВыбор);
		СтруктураПараметров.Свойство("СтруктураСуществующиеЗначения",   СтруктураСуществующиеЗначения);
		СтруктураПараметров.Свойство("СтруктураНеиспользуемыеЗначения", СтруктураНеиспользуемыеЗначения);
		СтруктураПараметров.Свойство("ИсходнаяТаблица",                 мИсходнаяТаблица);
	КонецЕсли;

	Если мИсходнаяТаблица = "СписокФильтров" Тогда
		ТаблицаИспользуемыеФильтры = мТаблицаФильтры.Скопировать();

		Заголовок = "Отбор обработки";

		Сч = 0;
		Пока Сч < ТаблицаИспользуемыеФильтры.Количество() Цикл
			Строка = ТаблицаИспользуемыеФильтры[Сч];
			Если СтруктураНеиспользуемыеЗначения.Свойство(Строка.ИмяПоля) Тогда
				ТаблицаИспользуемыеФильтры.Удалить(Строка);
			Иначе
				Сч = Сч + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ЭлементыФормы.ТабличноеПоле.Значение = ТаблицаИспользуемыеФильтры;

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик нажатия кнопки "ОК".
//
Процедура КнопкаВыполнитьНажатие(Элемент)

	Выбрать();

КонецПроцедуры // КнопкаВыбратьНажатие()

// Процедура - обработчик попытки удаления строки из таблицы.
//
Процедура ТабличноеПолеПередУдалением(Элемент, Отказ)

	Отказ = Истина;

КонецПроцедуры // ТабличноеПолеПередУдалением()

// Процедура - обработчик выбора строки таблицы.
//
Процедура ТабличноеПолеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Не мМножВыбор Тогда
		Выбрать();
	КонецЕсли;

КонецПроцедуры // ТабличноеПолеВыбор()

// Процедура - обработчик попытки добавления строки в таблицу.
//
Процедура ТабличноеПолеПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;

КонецПроцедуры // ТабличноеПолеПередНачаломДобавления()
