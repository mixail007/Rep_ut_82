
Процедура КнопкаВыполнитьНажатие(Элемент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СчетФактураВыданный.Ссылка
	               |ИЗ
	               |	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	               |
	               |ГДЕ
	               |	СчетФактураВыданный.НаАванс = &НаАванс И
	               |	СчетФактураВыданный.Дата МЕЖДУ &НачалоПериода И &КонецПериода И
	               |	СчетФактураВыданный.Организация = &Организация";

	Запрос.УстановитьПараметр("НаАванс", Истина);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(КонецПериода));

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Если Вопрос("Ранее уже выполнялся перенос счетов-фактур. Удалить ранее перенесенные?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Пока Выборка.Следующий() Цикл
				Сообщить("Удалена счет-фактура № " + Выборка.Ссылка.Номер + " от " + Выборка.Ссылка.Дата);
				Попытка
					Выборка.Ссылка.ПолучитьОбъект().Удалить();
				Исключение
					Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	Список.Сортировать("Дата Возр");
	
	Для Каждого СтрокаТП Из Список Цикл
		
		Если Не ЗначениеНеЗаполнено(СтрокаТП.ДокументОснование) Тогда
			// Создать Счет-фактуру на аванс
			СчФ  = Документы.СчетФактураВыданный.СоздатьДокумент();
			СчФ.Дата = СтрокаТП.Дата;
			СчФ.УстановитьВремя();
			
			Если ЗначениеНеЗаполнено(Организация.Префикс) Тогда
				СчФ.УстановитьНовыйНомер("А" + "0");
			Иначе
				СчФ.УстановитьНовыйНомер("А" + Организация.Префикс);
			КонецЕсли;

			СчФ.НаАванс = Истина;
			
			СчФ.Сумма = 	СтрокаТП.Сумма;
			СчФ.СуммаНДС = 	СтрокаТП.СуммаНДС;
			СчФ.СтавкаНДС = СтрокаТП.СтавкаНДС;
			
			СчФ.Организация = Организация;
			СчФ.Под0 = 		  СтрокаТП.Под0;
			СчФ.ДокументОснование = СтрокаТП.ДокументОснование;

			ТипОснования = ТипЗнч(СчФ.ДокументОснование);

			Если ТипОснования = Тип("ДокументСсылка.ПлатежноеПоручениеВходящее") Тогда
				СчФ.НомерПлатежноРасчетногоДокумента = СчФ.ДокументОснование.НомерВходящегоДокумента;
				СчФ.ДатаПлатежноРасчетногоДокумента =  СчФ.ДокументОснование.ДатаВходящегоДокумента;
				
			ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
				СчФ.НомерПлатежноРасчетногоДокумента = ПолучитьНомерНаПечать(СчФ.ДокументОснование);
				СчФ.ДатаПлатежноРасчетногоДокумента =  СчФ.ДокументОснование.Дата;
				
			КонецЕсли;
			
			СчФ.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);

			Сообщить("Выписан счет-фактура на аванс № " + СчФ.Номер + " от " + СчФ.Дата);
			
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	
КонецПроцедуры

Процедура КоманднаяПанельЗаполнить(Кнопка)
	
	Если ЗначениеНеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация. Регистрация не выполнена.");
		Отказ = Истина;
		ТекущийЭлемент = ЭлементыФормы.Организация;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеНеЗаполнено(НачалоПериода) Тогда
		Предупреждение("Не указана дата начала заполнения. Регистрация не выполнена.");
		Отказ = Истина;
		ТекущийЭлемент = ЭлементыФормы.НачалоПериода;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеНеЗаполнено(КонецПериода) Тогда
		Предупреждение("Не указана дата окончания заполнения. Регистрация не выполнена.");
		Отказ = Истина;
		ТекущийЭлемент = ЭлементыФормы.КонецПериода;
		Возврат;
	КонецЕсли;
	
	Если НачалоПериода > КонецПериода Тогда
		Предупреждение("Дата начала заполнения больше даты окончния. Регистрация не выполнена.");
		Отказ = Истина;
		ТекущийЭлемент = ЭлементыФормы.НачалоПериода;
		Возврат;
	КонецЕсли;
	
	Список.Очистить();
	
	// Выбираем моменты "перехода через ноль" в регистре "ВзаиморасчетыСПокупателямиДляНДС"
	// это и будут полученные авансы данного периода
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.Период,
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.Организация,
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.ДоговорКонтрагента.Владелец КАК Контрагент,
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.ДоговорКонтрагента,
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.Регистратор,
					|	СУММА(ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
					|	СУММА(ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.СуммаРасход) КАК СуммаРасход,
					|	СУММА(ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток
					|ИЗ
					|	РегистрНакопления.ВзаиморасчетыСПокупателямиДляНДС.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Регистратор, , Организация = &Организация) КАК ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты

					|ГДЕ
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.СуммаКонечныйОстаток < &Ноль И
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.СуммаРасход > &Ноль

					|СГРУППИРОВАТЬ ПО
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.Период,
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.Организация,
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.ДоговорКонтрагента.Владелец,
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.ДоговорКонтрагента,
					|	ВзаиморасчетыСПокупателямиДляНДСОстаткиИОбороты.Регистратор";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Ноль", 0);
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();

	Для Каждого СтрРез Из ТаблицаРезультата Цикл
		СуммаАванса = ?(СтрРез.СуммаНачальныйОстаток >= 0, -СтрРез.СуммаКонечныйОстаток, СтрРез.СуммаРасход);
		
		СтрокаТП = Список.Добавить();
		СтрокаТП.Дата = 		СтрРез.Период;
		СтрокаТП.Сумма = 		СуммаАванса;
		СтрокаТП.Контрагент = 	СтрРез.Контрагент;
		СтрокаТП.Договор = 		СтрРез.ДоговорКонтрагента;
		СтрокаТП.СтавкаНДС = 	Перечисления.СтавкиНДС.НДС18_118;
		СтрокаТП.ДокументОснование = СтрРез.Регистратор;
		
		СписокСуммаПриИзменении(СтрокаТП);
		
	КонецЦикла;
	
	// Далее нужно учесть оплаты товаров, переданных на комиссию
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	ОтчетКомиссионераОПродажахДенежныеСредства.СтавкаНДС,
					|	ОтчетКомиссионераОПродажахДенежныеСредства.Ссылка.Дата,
					|	ОтчетКомиссионераОПродажахДенежныеСредства.Ссылка,
					|	ОтчетКомиссионераОПродажахДенежныеСредства.Ссылка.Контрагент,
					|	ОтчетКомиссионераОПродажахДенежныеСредства.Ссылка.ДоговорКонтрагента,
					|	СУММА(ОтчетКомиссионераОПродажахДенежныеСредства.Сумма) КАК Сумма,
					|	СУММА(ОтчетКомиссионераОПродажахДенежныеСредства.СуммаНДС) КАК СуммаНДС
					|ИЗ
					|	Документ.ОтчетКомиссионераОПродажах.ДенежныеСредства КАК ОтчетКомиссионераОПродажахДенежныеСредства

					|ГДЕ
					|	ОтчетКомиссионераОПродажахДенежныеСредства.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода И
					|	ОтчетКомиссионераОПродажахДенежныеСредства.Ссылка.Организация = &Организация И
					|	ОтчетКомиссионераОПродажахДенежныеСредства.ВидОтчетаПоПлатежам = &ВидОтчетаПоПлатежамАванс

					|СГРУППИРОВАТЬ ПО
					|	ОтчетКомиссионераОПродажахДенежныеСредства.Ссылка,
					|	ОтчетКомиссионераОПродажахДенежныеСредства.СтавкаНДС";
					
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ВидОтчетаПоПлатежамАванс", Перечисления.ВидыОтчетовПоПлатежамКомиссия.Аванс);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		СтрокаТП = Список.Добавить();
		СтрокаТП.Дата = Выборка.Дата;
		СтрокаТП.Контрагент = Выборка.Контрагент;
		СтрокаТП.Договор = Выборка.ДоговорКонтрагента;
		СтрокаТП.СтавкаНДС = Выборка.СтавкаНДС;
		СтрокаТП.Сумма = Выборка.Сумма;
		СтрокаТП.СуммаНДС = Выборка.СуммаНДС;
		СтрокаТП.ДокументОснование = Выборка.Ссылка;
		
		СписокСуммаПриИзменении(СтрокаТП);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СписокСуммаПриИзменении(Элемент)
	
	Если ТипЗнч(Элемент) = Тип("СтрокаТаблицыЗначений") Тогда
		ТД = Элемент;
	Иначе
		ТД = ЭлементыФормы.Список.ТекущиеДанные;
	КонецЕсли;
	
	ТД.СуммаНДС = 0;

	Если ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
		ТД.СуммаНДС = ТД.Сумма * 20 / 100;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
		ТД.СуммаНДС = ТД.Сумма * 10 / 100;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
		ТД.СуммаНДС = ТД.Сумма * 18 / 100;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
		ТД.СуммаНДС = ТД.Сумма * 20 / 120;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
		ТД.СуммаНДС = ТД.Сумма * 10 / 110;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
		ТД.СуммаНДС = ТД.Сумма * 18 / 118;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1СписокСчетовФактур(Кнопка)
	
	Форма = Документы.СчетФактураВыданный.ПолучитьФорму("ФормаСписка",,);
	Форма.Открыть();
	
КонецПроцедуры

Процедура ОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если Список.Количество() > 0 Тогда
		Если Вопрос("При смене организации необходимо очистить табличную часть. Очистить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Список.Очистить();
		Иначе
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


