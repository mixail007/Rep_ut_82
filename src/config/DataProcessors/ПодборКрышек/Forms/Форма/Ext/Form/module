
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		тзВыбранныеТовары = ВыбранныеТовары.Выгрузить();
		ОповеститьОВыборе(тзВыбранныеТовары);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьКрышкиОстаткиПоЗаказуПокупателя()
	
	//Данные = ПолучитьДанныеКрышкиПоЗаказу();
	Данные = ПолучитьДанныеКрышкиПоТабличнойЧасти();
	Выгрукза = Данные.Выгрузить();
	Товары.Загрузить(Выгрукза);
	
КонецПроцедуры // ПоказатьКрышкиОстаткиПоЗаказуПокупателя()

Процедура КоманднаяПанель1ПоказатьКрышкиПоЗаказу(Кнопка)
	
	ПоказатьКрышкиОстаткиПоЗаказуПокупателя();
	
КонецПроцедуры

Функция ПолучитьДанныеКрышкиПоТабличнойЧасти()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КомплектующиеНоменклатуры.Комплектующая
	|ПОМЕСТИТЬ втКомплектующие
	|ИЗ
	|	РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	|ГДЕ
	|	КомплектующиеНоменклатуры.Номенклатура.НоменклатурнаяГруппа = &НомГруппаКолпаки
	|	И КомплектующиеНоменклатуры.Номенклатура В(&СписокКолпаки)
	|	И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&ПапкаКрышки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКомплектующие.Комплектующая КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток
	|ИЗ
	|	втКомплектующие КАК втКомплектующие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				Склад В (&Склады)
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							втКомплектующие.Комплектующая
	|						ИЗ
	|							втКомплектующие КАК втКомплектующие)) КАК ТоварыНаСкладахОстатки
	|		ПО втКомплектующие.Комплектующая = ТоварыНаСкладахОстатки.Номенклатура
	|ГДЕ
	|	ТоварыНаСкладахОстатки.КоличествоОстаток > 0";
	
	НомГруппаКолпаки = Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0075");
	ПапкаКрышки  = Справочники.Номенклатура.НайтиПоКоду("0080004");
	Запрос.УстановитьПараметр("НомГруппаКолпаки" , НомГруппаКолпаки);
	Запрос.УстановитьПараметр("ПапкаКрышки"  , ПапкаКрышки);
	Запрос.УстановитьПараметр("Склады"       , Склады);
	Запрос.УстановитьПараметр("СписокКолпаки", СписокНоменклатуры);
	
	результат = Запрос.Выполнить();
	
	Возврат результат;
	
КонецФункции // ПолучитьДанныеКрышкиПоТабличнойЧасти()

// Хорошая рабочая функция, но решено работать с данными таблицы, 
// чтобы предоставить возможность пользователю подбирать крышки
// в новый (еще не записанный) документ.
// Поэтому функция не используется
Функция ПолучитьДанныеКрышкиПоЗаказу()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КомплектующиеНоменклатуры.Комплектующая КАК Номенклатура
	|ПОМЕСТИТЬ втКомплектующие
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	|		ПО ЗаказПокупателяТовары.Номенклатура = КомплектующиеНоменклатуры.Номенклатура
	|ГДЕ
	|	ЗаказПокупателяТовары.Ссылка = &ДокСсылка
	|	И ЗаказПокупателяТовары.Номенклатура В ИЕРАРХИИ(&ПапкаКолпаки)
	|	И КомплектующиеНоменклатуры.Комплектующая В ИЕРАРХИИ(&ПапкаКрышки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКомплектующие.Номенклатура,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток
	|ИЗ
	|	втКомплектующие КАК втКомплектующие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				Склад В (&Склады)
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							втКомплектующие.Номенклатура
	|						ИЗ
	|							втКомплектующие КАК втКомплектующие)) КАК ТоварыНаСкладахОстатки
	|		ПО втКомплектующие.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|ГДЕ
	|	ТоварыНаСкладахОстатки.КоличествоОстаток > 0";
	
	ПапкаКолпаки = Справочники.Номенклатура.НайтиПоКоду("9160831");
	ПапкаКрышки  = Справочники.Номенклатура.НайтиПоКоду("0080004");
	Запрос.УстановитьПараметр("ПапкаКолпаки", ПапкаКолпаки);
	Запрос.УстановитьПараметр("ПапкаКрышки" , ПапкаКрышки);
	Запрос.УстановитьПараметр("ДокСсылка"   , ДокСсылка);
	Запрос.УстановитьПараметр("Склады"      , Склады);
	//Запрос.УстановитьПараметр("Период"      , Период);
	
	результат = Запрос.Выполнить();
	
	Возврат результат;
	
КонецФункции // ПолучитьДанныеКрышкиПоЗаказу()

Процедура ПриОткрытии()
	
	Если Склады.Количество() = 0 Тогда
		Склады.Добавить(Справочники.Склады.НайтиПоКоду("00393"));
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(ДокСсылка) Тогда
		ПоказатьКрышкиОстаткиПоЗаказуПокупателя();
	//КонецЕсли;
	
КонецПроцедуры

Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Количество = 0;
	Если ВвестиЧисло(Количество, "Укажите количество", 15, 0) И Количество > 0 Тогда
		СтрЭтаНоменкл = ВыбранныеТовары.Найти(ВыбраннаяСтрока.Номенклатура, "Номенклатура");
		Если СтрЭтаНоменкл = Неопределено Тогда
			СтрВыбранныеТовары = ВыбранныеТовары.Добавить();
			СтрВыбранныеТовары.Номенклатура = ВыбраннаяСтрока.Номенклатура;
		Иначе
			СтрВыбранныеТовары = СтрЭтаНоменкл;
		КонецЕсли;
		СтрВыбранныеТовары.Количество = СтрВыбранныеТовары.Количество + Количество;
	КонецЕсли;
	
КонецПроцедуры
