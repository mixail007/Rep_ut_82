
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ОткрытаДляВыбора = Истина;
	
	Объект_ПриОткрытии(ЭлементыФормы);
	
	Если ОткрытаДляВыбора И ОткрытиеПриВыборе Тогда
		Заголовок = "Адресная книга";
	КонецЕсли; 
	
	ИмяТекущейСтраницы = ВосстановитьЗначение("ИмяТекущейСтраницыВыбор");
	Если ТипЗнч(ИмяТекущейСтраницы) = Тип("Строка") Тогда
		Попытка
			ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы[ИмяТекущейСтраницы];
		Исключение
		КонецПопытки;
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриЗакрытии формы.
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("ВидОбщегоОбъекта"       , ВидОбщегоОбъекта);
	СохранитьЗначение("ИмяТекущейСтраницыВыбор", ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница.Имя);
	
КонецПроцедуры

// Обработчик события ОбработкаЗаписиНовогоОбъекта формы.
//
Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	
	Объект_ОбработкаЗаписиНовогоОбъекта(Объект, Источник, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛИ ФОРМЫ

// Обработчик события Нажатие элемента УстановитьОбъектКонтрагентыКонтактныеЛица командных панелей:
//  КоманднаяПанельКонтрагенты
//  КоманднаяПанельФизическиеЛица
//  КоманднаяПанельПрочиеКонтактныеЛица
//  КоманднаяПанельОрганизации.
//
Процедура УстановитьОбъектКонтрагентыКонтактныеЛица(Кнопка)
	
	ВидОбщегоОбъекта = Перечисления.ВидыОбъектовКонтактнойИнформации.Контрагенты;
	Объект_УстановитьОбъект(ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события Нажатие элемента УстановитьОбъектФизическиеЛица командных панелей:
//  КоманднаяПанельКонтрагенты
//  КоманднаяПанельФизическиеЛица
//  КоманднаяПанельПрочиеКонтактныеЛица
//  КоманднаяПанельОрганизации.
//
Процедура УстановитьОбъектФизическиеЛица(Кнопка)
	
	ВидОбщегоОбъекта = Перечисления.ВидыОбъектовКонтактнойИнформации.ФизическиеЛица;
	Объект_УстановитьОбъект(ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события Нажатие элемента УстановитьОбъектПрочиеКонтактныеЛица командных панелей:
//  КоманднаяПанельКонтрагенты
//  КоманднаяПанельФизическиеЛица
//  КоманднаяПанельПрочиеКонтактныеЛица
//  КоманднаяПанельОрганизации.
//
Процедура УстановитьОбъектПрочиеКонтактныеЛица(Кнопка)
	
	ВидОбщегоОбъекта = Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛица;
	Объект_УстановитьОбъект(ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события Нажатие элемента УстановитьОбъектОрганизации командных панелей:
//  КоманднаяПанельКонтрагенты
//  КоманднаяПанельФизическиеЛица
//  КоманднаяПанельПрочиеКонтактныеЛица
//  КоманднаяПанельОрганизации.
//
Процедура УстановитьОбъектОрганизации(Кнопка)
	
	ВидОбщегоОбъекта = Перечисления.ВидыОбъектовКонтактнойИнформации.Организации;
	Объект_УстановитьОбъект(ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события Нажатие командной панели формы ОсновныеДействияФормы.Выполнить.
//
Процедура КнопкаВыполнитьНажатие(Элемент)
	
	Если ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.КонтрагентыКонтактныеЛица Тогда
		Если ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.КонтрагентыСписок ИЛИ ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.АдресКонтрагента Тогда
			Если НЕ (ЭлементыФормы.КонтрагентыСписок.ТекущиеДанные <> Неопределено И ЭлементыФормы.КонтрагентыСписок.ТекущиеДанные.ЭтоГруппа) Тогда
				ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.КонтрагентыСписок, ЭлементыФормы.АдресКонтрагента, Истина, "Контрагенты");
			КонецЕсли; 
		ИначеЕсли ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.КонтактныеЛицаКонтрагентовСписок ИЛИ ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.АдресКонтактногоЛицаКонтрагента Тогда
			Если ЭлементыФормы.КонтактныеЛицаКонтрагентовСписок.ТекущиеДанные <> Неопределено Тогда
				ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтрокиДополнительно, ЭлементыФормы.КонтактныеЛицаКонтрагентовСписок, ЭлементыФормы.АдресКонтактногоЛицаКонтрагента, Истина, "КонтактныеЛица");
			КонецЕсли; 
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.Организации Тогда
		Если ЭлементыФормы.ОрганизацииСписок.ТекущиеДанные <> Неопределено Тогда
			ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ОрганизацииСписок, ЭлементыФормы.АдресОрганизации, Истина, "Организации");
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.ПрочиеКонтактныеЛица Тогда
		Если ЭлементыФормы.ПрочиеКонтактныеЛицаСписок.ТекущиеДанные <> Неопределено Тогда
			ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ПрочиеКонтактныеЛицаСписок, ЭлементыФормы.АдресПрочиеКонтактныеЛица, Истина, "ПрочиеКонтактныеЛица");
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.ФизическиеЛица Тогда
		Если НЕ (ЭлементыФормы.ФизЛицаСписок.ТекущиеДанные <> Неопределено И ЭлементыФормы.ФизЛицаСписок.ТекущиеДанные.ЭтоГруппа) Тогда
			ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ФизЛицаСписок, ЭлементыФормы.АдресФизЛица, Истина, "ФизическиеЛица");
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.Личные Тогда
		Если ЭлементыФормы.ЛичныеКонтактыСписок.ТекущиеДанные <> Неопределено Тогда
			ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ЛичныеКонтактыСписок, ЭлементыФормы.АдресЛичныеКонтакты, Истина, "ЛичныеКонтакты");
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.Пользователи Тогда
		Если НЕ (ЭлементыФормы.ПользователиСписок.ТекущиеДанные <> Неопределено И ЭлементыФормы.ПользователиСписок.ТекущиеДанные.ЭтоГруппа) Тогда
			ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ПользователиСписок, ЭлементыФормы.АдресПользователи, Истина, "Пользователи");
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.Поиск Тогда
		Если НЕ (ЭлементыФормы.РезультатыПоиска.ТекущиеДанные <> Неопределено И ЭлементыФормы.РезультатыПоиска.ТекущиеДанные.Объект.ЭтоГруппа) Тогда
			ДобавитьЭлементыРезультатовПоиска(ЭлементыФормы, РезультатыПоиска);
		КонецЕсли; 
	КонецЕсли; 
	
	Объект_КнопкаВыполнитьНажатие(Элемент, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события Нажатие командной панели формы КоманднаяПанельРезультатыПоиска.АдресЭлектроннойПочтыВОбъектТекущейСтроки.
//
Процедура КоманднаяПанельРезультатыПоискаАдресЭлектроннойПочтыВОбъектТекущейСтроки(Кнопка)
	
	Если ЭлементыФормы.РезультатыПоиска.ТекущиеДанные <> Неопределено И НЕ ЗначениеНеЗаполнено(ЭлементыФормы.РезультатыПоиска.ТекущиеДанные.Объект) Тогда
		ДобавитьАдресЭлектроннойПочтыВОбъект(СтрокаПоиска, ЭлементыФормы.РезультатыПоиска.ТекущиеДанные.Объект);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Нажатие командной панели формы КоманднаяПанельРезультатыПоиска.АдресЭлектроннойПочтыВНовыйОбъект.
//
Процедура КоманднаяПанельРезультатыПоискаАдресЭлектроннойПочтыВНовыйОбъект(Кнопка)
	
	СоздатьНовыйОбъектСАдресомЭлектроннойПочты(СтрокаПоиска);
	
КонецПроцедуры

// Обработчик события Нажатие командной панели формы КоманднаяПанельГруппыОбъектов.Обновить.
//
Процедура КоманднаяПанельГруппыОбъектовОбновить(Кнопка)
	
	ЗаполнитьСписокГруппРассылки(ГруппыРассылкиСписок);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ПОЛЕЙ ФОРМЫ

// Обработчик события ПриАктивизацииСтроки элемента формы КонтрагентыСписок.
//
Процедура КонтрагентыСписокПриАктивизацииСтроки(Элемент)
	
	Объект_КонтрагентыСписокПриАктивизацииСтроки(Элемент, КонтактныеЛицаКонтрагентовСписок);
	ПолучитьАдресЭлектроннойПочты(ЭлементыФормы.КонтактныеЛицаКонтрагентовСписок, ЭлементыФормы.АдресКонтактногоЛицаКонтрагента, СписокДанныхТекущейСтрокиДополнительно);
	ПолучитьАдресЭлектроннойПочты(Элемент, ЭлементыФормы.АдресКонтрагента, СписокДанныхТекущейСтроки);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы КонтактныеЛицаКонтрагентовСписок.
//
Процедура КонтактныеЛицаКонтрагентовСписокПриАктивизацииСтроки(Элемент)
	
	ПолучитьАдресЭлектроннойПочты(Элемент, ЭлементыФормы.АдресКонтактногоЛицаКонтрагента, СписокДанныхТекущейСтрокиДополнительно);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы ФизЛицаСписок.
//
Процедура ФизЛицаСписокПриАктивизацииСтроки(Элемент)
	
	ПолучитьАдресЭлектроннойПочты(Элемент, ЭлементыФормы.АдресФизЛица, СписокДанныхТекущейСтроки);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы ПрочиеКонтактныеЛицаСписок.
//
Процедура ПрочиеКонтактныеЛицаСписокПриАктивизацииСтроки(Элемент)
	
	ПолучитьАдресЭлектроннойПочты(Элемент, ЭлементыФормы.АдресПрочиеКонтактныеЛица, СписокДанныхТекущейСтроки);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы ОрганизацииСписок.
//
Процедура ОрганизацииСписокПриАктивизацииСтроки(Элемент)
	
	ПолучитьАдресЭлектроннойПочты(Элемент, ЭлементыФормы.АдресОрганизации, СписокДанныхТекущейСтроки);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы ЛичныеКонтактыСписок.
//
Процедура ЛичныеКонтактыСписокПриАктивизацииСтроки(Элемент)
	
	ПолучитьАдресЭлектроннойПочты(Элемент, ЭлементыФормы.АдресЛичныеКонтакты, СписокДанныхТекущейСтроки);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы ПользователиСписок.
//
Процедура ПользователиСписокПриАктивизацииСтроки(Элемент)
	
	ПолучитьАдресЭлектроннойПочты(Элемент, ЭлементыФормы.АдресПользователи, СписокДанныхТекущейСтроки);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаПриАктивизацииСтроки(Элемент)
	
	Объект_РезультатыПоискаПриАктивизацииСтроки(Элемент, ЭлементыФормы);
	
КонецПроцедуры


// Обработчик события ПередНачаломДобавления элемента формы Кому.
//
Процедура КомуПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы Копии.
//
Процедура КопииПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы СкрытыеКопии.
//
Процедура СкрытыеКопииПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы Кому.
//
Процедура КомуПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ОткрытьФормуОбъекта(Элемент.ТекущиеДанные.Объект);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы Копии.
//
Процедура КопииПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ОткрытьФормуОбъекта(Элемент.ТекущиеДанные.Объект);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы СкрытыеКопии.
//
Процедура СкрытыеКопииПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ОткрытьФормуОбъекта(Элемент.ТекущиеДанные.Объект);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные <> Неопределено И НЕ ЗначениеНеЗаполнено(Элемент.ТекущиеДанные.Объект) Тогда
		ОткрытьФормуОбъекта(Элемент.ТекущиеДанные.Объект);
	КонецЕсли; 
	
КонецПроцедуры


// Обработчик события Выбор элемента формы КонтрагентыСписок.
//
Процедура КонтрагентыСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ (Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ЭтоГруппа) Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.КонтрагентыСписок, ЭлементыФормы.АдресКонтрагента, СтандартнаяОбработка, "Контрагенты");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы КонтактныеЛицаКонтрагентовСписок.
//
Процедура КонтактныеЛицаКонтрагентовСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтрокиДополнительно, ЭлементыФормы.КонтактныеЛицаКонтрагентовСписок, ЭлементыФормы.АдресКонтактногоЛицаКонтрагента, СтандартнаяОбработка, "КонтактныеЛица");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы ФизЛицаСписок.
//
Процедура ФизЛицаСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ (Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ЭтоГруппа) Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ФизЛицаСписок, ЭлементыФормы.АдресФизЛица, СтандартнаяОбработка, "ФизическиеЛица");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы ПрочиеКонтактныеЛицаСписок.
//
Процедура ПрочиеКонтактныеЛицаСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ПрочиеКонтактныеЛицаСписок, ЭлементыФормы.АдресПрочиеКонтактныеЛица, СтандартнаяОбработка, "ПрочиеКонтактныеЛица");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы ОрганизацииСписок.
//
Процедура ОрганизацииСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ОрганизацииСписок, ЭлементыФормы.АдресОрганизации, СтандартнаяОбработка, "Организации");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы ЛичныеКонтактыСписок.
//
Процедура ЛичныеКонтактыСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ЛичныеКонтактыСписок, ЭлементыФормы.АдресЛичныеКонтакты, СтандартнаяОбработка, "ЛичныеКонтакты");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы ПользователиСписок.
//
Процедура ПользователиСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ (Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ЭтоГруппа) Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ПользователиСписок, ЭлементыФормы.АдресПользователи, СтандартнаяОбработка, "Пользователи");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ (Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.Объект.ЭтоГруппа) Тогда
		СтандартнаяОбработка = Ложь;
		Если ОткрытаДляВыбора И ОткрытиеПриВыборе Тогда
			Если Элемент.ТекущиеДанные <> Неопределено И НЕ ЗначениеНеЗаполнено(Элемент.ТекущиеДанные.Объект) Тогда
				ОткрытьФормуОбъекта(Элемент.ТекущиеДанные.Объект);
			КонецЕсли; 
		Иначе
			ДобавитьЭлементыРезультатовПоиска(ЭлементыФормы, РезультатыПоиска);
			ОбработкаВыбораТабличныхПолей(ЭтаФорма);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если НЕ (ОткрытаДляВыбора И ОткрытиеПриВыборе) Тогда
			СтандартнаяОбработка = Ложь;
			ДобавитьЭлементыГруппРассылки(ЭлементыФормы, ГруппыРассылкиСписок);
			ОбработкаВыбораТабличныхПолей(ЭтаФорма);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры


// Обработчик события ПередУдалением элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры


// Обработчик события ПриВыводеСтроки элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Объект_ГруппыРассылкиСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Объект_ГруппыРассылкиСписокПередНачаломДобавления(Элемент, Отказ, Копирование, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПередНачаломИзменения(Элемент, Отказ)
	
	Объект_ГруппыРассылкиСписокПередНачаломИзменения(Элемент, Отказ, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПередУдалением(Элемент, Отказ)
	
	Объект_ГруппыРассылкиСписокПередУдалением(Элемент, Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КНОПОК ФОРМЫ

// Обработчик события ПриИзменении элемента формы СтрокаПоиска.
//
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Объект_НайтиНажатие(Элемент, РезультатыПоиска, Элемент.Значение);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПриАктивизацииСтроки(Элемент)
	
	Объект_ГруппыРассылкиСписокПриАктивизацииСтроки(Элемент, СоставГруппыРассылки);
	
КонецПроцедуры

// Обработчик события Выбор элемента формы СоставГруппыРассылки.
//
Процедура СоставГруппыРассылкиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ (Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ОбъектРассылки.ЭтоГруппа) Тогда
		ДобавитьЭлементыГруппыРассылки(ЭлементыФормы, Элемент, СписокДанныхТекущейСтрокиДополнительно, ЭлементыФормы.АдресЭлементГруппыРассылки);
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы СоставГруппыРассылки.
//
Процедура СоставГруппыРассылкиПриАктивизацииСтроки(Элемент)
	
	ПолучитьАдресЭлектроннойПочты(Элемент, ЭлементыФормы.АдресЭлементГруппыРассылки, СписокДанныхТекущейСтрокиДополнительно, "ОбъектРассылки");
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы СоставГруппыРассылки.
//
Процедура СоставГруппыРассылкиПередНачаломИзменения(Элемент, Отказ)
	
	Объект_СоставГруппыРассылкиПередНачаломИзменения(Элемент, Отказ);
	
КонецПроцедуры

Процедура КнопкаНайтиНажатие(Элемент)
	
	Объект_НайтиНажатие(ЭлементыФормы.РезультатыПоиска, РезультатыПоиска, ЭлементыФормы.РезультатыПоиска.Значение);
	
КонецПроцедуры
