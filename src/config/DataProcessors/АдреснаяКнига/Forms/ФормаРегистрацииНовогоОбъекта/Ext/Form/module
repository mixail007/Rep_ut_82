
Перем СписокВидовОбъектов;

Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура записывает в ИБ новый зарегистрированный объект.
//
// Паарметры
//  ОткрытьФормуОбъекта - булево, открывать форму зарегистрированного объекта или нет
//
Процедура ЗарегистрироватьОбъектАдреснойКниги(ОткрытьФормуОбъекта = Ложь)

	Отказ = Ложь;
	
	Если ПустаяСтрока(НаименованиеОбъекта) Тогда
		Отказ = Истина;
		Сообщить("Не указано наименование объекта.");
	КонецЕсли;
	
	Если ПустаяСтрока(АдресЭлектроннойПочты) Тогда
		Отказ = Истина;
		Сообщить("Не указан адрес электронной почты.");
	КонецЕсли;

	Если ЗначениеНеЗаполнено(ВидКонтактнойИнформации) Тогда
		Отказ = Истина;
		Сообщить("Не указан вид адреса электронной почты.");
	КонецЕсли;

	Если ВидОбъекта.Тип = Тип("СправочникСсылка.КонтактныеЛица") И ВидОбъекта.Вид = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента И ЗначениеНеЗаполнено(КонтрагентВладелец) Тогда
		Отказ = Истина;
		Сообщить("Не указан контрагент для контактного лица.");
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСсылка = Новый (ВидОбъекта.Тип);
	НовыйОбъект = Справочники[НоваяСсылка.Метаданные().Имя].СоздатьЭлемент();
	
	Если ВидОбъекта.Тип = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		НовыйОбъект.ВидКонтактногоЛица = ВидОбъекта.Вид;
		Если ВидОбъекта.Вид = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента Тогда
			НовыйОбъект.ОбъектВладелец = КонтрагентВладелец;
		Иначе
			НовыйОбъект.ОбъектВладелец = глТекущийПользователь;
		КонецЕсли; 
	ИначеЕсли ВидОбъекта.Тип = Тип("СправочникСсылка.Контрагенты") Тогда
		НовыйОбъект.ОсновнойМенеджерПокупателя = глТекущийПользователь;
	КонецЕсли;
	
	НовыйОбъект.Наименование = НаименованиеОбъекта;
	
	ФормаОбъекта = НовыйОбъект.ПолучитьФорму();
	
	НачатьТранзакцию();
	ФиксироватьТранзакцию = Истина;
	
	Попытка
		ФормаОбъекта.ЗаписатьВФорме();
	Исключение
		Сообщить(ОписаниеОшибки());
		ФиксироватьТранзакцию = Ложь;
	КонецПопытки;
	
	ЗаписьКонтактнойИнформации = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
	ЗаписьКонтактнойИнформации.Тип           = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	ЗаписьКонтактнойИнформации.Вид           = ВидКонтактнойИнформации;
	ЗаписьКонтактнойИнформации.Объект        = НовыйОбъект.Ссылка;
	ЗаписьКонтактнойИнформации.Представление = АдресЭлектроннойПочты;
	
	Попытка
		ЗаписьКонтактнойИнформации.Записать(Ложь);
	Исключение
		Сообщить(ОписаниеОшибки());
		ФиксироватьТранзакцию = Ложь;
	КонецПопытки;
	
	Если ФиксироватьТранзакцию = Ложь Тогда
		ОтменитьТранзакцию();
		Возврат;
	Иначе
		ЗафиксироватьТранзакцию();
		СтруктураНовогоОбъекта = Новый Структура("Объект, АдресЭлектроннойПочты", НовыйОбъект.Ссылка, АдресЭлектроннойПочты);
	КонецЕсли; 
	
	ЭтаФорма.Закрыть(СтруктураНовогоОбъекта);
	
	Если ОткрытьФормуОбъекта Тогда
		ФормаОбъекта.Открыть();
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура управляет видимостью панели ПанельКонтрагент.
//
// Паарметры
//  НЕТ
//
Процедура ВидимостьПанельКонтрагент()

	Если ВидОбъекта.Тип = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		Если ВидОбъекта.Вид = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента Тогда
			ЭлементыФормы.ПанельКонтрагент.Свертка = РежимСверткиЭлементаУправления.Нет;
		Иначе
			ЭлементыФормы.ПанельКонтрагент.Свертка = РежимСверткиЭлементаУправления.Верх;
		КонецЕсли; 
	Иначе
		ЭлементыФормы.ПанельКонтрагент.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли; 

КонецПроцедуры

// Процедура устанавливает вид КИ по умолчанию.
//
// Паарметры
//  НЕТ
//
Процедура УстановитьВидКИ()

	Если ВидКонтактнойИнформации = Неопределено ИЛИ (ТипЗнч(ВидКонтактнойИнформации) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") И ВидКонтактнойИнформации.ВидОбъектаКонтактнойИнформации <> ВидОбъектаКИ(Новый(ВидОбъекта.Тип))) Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Тип"       , Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		Запрос.УстановитьПараметр("ВидОбъекта", ВидОбъектаКИ(Новый(ВидОбъекта.Тип)));
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВидыКонтактнойИнформации.Ссылка КАК ВидКИ
		|ИЗ
		|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
		|ГДЕ
		|	ВидыКонтактнойИнформации.Тип = &Тип
		|	И
		|	ВидыКонтактнойИнформации.ВидОбъектаКонтактнойИнформации = &ВидОбъекта
		|";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ВидКонтактнойИнформации = Выборка.ВидКИ;
		Иначе
			ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
		КонецЕсли;
		мПоследнееЗначениеЭлементаТайпинга = ВидКонтактнойИнформации;
		
	КонецЕсли; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриЗакрытии()
	
	СохранитьЗначение("ОбъектРегистрации", ВидОбъекта);
	
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ЭлементыФормы.ВидОбъекта.СписокВыбора = СписокВидовОбъектов.Скопировать();
	
	СохраненныйОбъект = ВосстановитьЗначение("ОбъектРегистрации");
	Если ТипЗнч(СохраненныйОбъект) = Тип("Структура") Тогда
		Для каждого ЭлементСписка Из СписокВидовОбъектов Цикл
			Если ЭлементСписка.Значение.Тип = СохраненныйОбъект.Тип И ЭлементСписка.Значение.Вид = СохраненныйОбъект.Вид Тогда
				ВидОбъекта = ЭлементСписка.Значение;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	Если ВидОбъекта = Неопределено Тогда
		ВидОбъекта = СписокВидовОбъектов[0].Значение;
	КонецЕсли; 
	
	УстановитьВидКИ();
	
	ВидимостьПанельКонтрагент();
	
	мПоследнееЗначениеЭлементаТайпинга = ВидКонтактнойИнформации;
	
КонецПроцедуры

// Обработчик события ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()
	
	ОбновлениеОтображенияВФормеПриТайпинге(ЭтаФорма, ЭлементыФормы.ВидКонтактнойИнформации, мОбработкаТайпинга, мТекстТайпинга)
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события Нажатие элемента формы ОсновныеДействияФормы.ЗарегистрироватьИОткрыть.
//
Процедура ОсновныеДействияФормыЗарегистрироватьИОткрыть(Кнопка)
	
	ЗарегистрироватьОбъектАдреснойКниги(Истина);
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы ОсновныеДействияФормы.Зарегистрировать.
//
Процедура ОсновныеДействияФормыЗарегистрировать(Элемент)
	
	ЗарегистрироватьОбъектАдреснойКниги();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события Очистка элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	мПоследнееЗначениеЭлементаТайпинга = ВидКонтактнойИнформации;
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, ВидОбъектаКИ(Новый (ВидОбъекта.Тип)));
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ВидОбъекта.
//
Процедура ВидОбъектаПриИзменении(Элемент)
	
	УстановитьВидКИ();
	
	ВидимостьПанельКонтрагент();
	
КонецПроцедуры

// Обработчик события АвтоПодборТекста элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, ВидОбъектаКИ(Новый(ВидОбъекта.Тип))), Тип("СправочникСсылка.ВидыКонтактнойИнформации"));
	
КонецПроцедуры

// Обработчик события ОкончаниеВводаТекста элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, ВидОбъектаКИ(Новый(ВидОбъекта.Тип))), ЭтаФорма, Тип("СправочникСсылка.ВидыКонтактнойИнформации"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга)
	
КонецПроцедуры

// Обработчик события Очистка элемента формы ВидОбъекта.
//
Процедура ВидОбъектаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииПриИзменении(Элемент)
	
	мПоследнееЗначениеЭлементаТайпинга = ВидКонтактнойИнформации;
	
КонецПроцедуры

СписокВидовОбъектов = Новый СписокЗначений;
СписокВидовОбъектов.Добавить(Новый Структура("Тип, Вид", Тип("СправочникСсылка.Контрагенты")   , Неопределено)                                            , "Контрагенты");
СписокВидовОбъектов.Добавить(Новый Структура("Тип, Вид", Тип("СправочникСсылка.КонтактныеЛица"), Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента), "Контактные лица контрагентов");
СписокВидовОбъектов.Добавить(Новый Структура("Тип, Вид", Тип("СправочникСсылка.КонтактныеЛица"), Перечисления.ВидыКонтактныхЛиц.ПрочееКонтактноеЛицо)     , "Прочие контактные лица");
СписокВидовОбъектов.Добавить(Новый Структура("Тип, Вид", Тип("СправочникСсылка.КонтактныеЛица"), Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт)            , "Личные контакты");
СписокВидовОбъектов.Добавить(Новый Структура("Тип, Вид", Тип("СправочникСсылка.ФизическиеЛица"), Неопределено)                                            , "Физические лица");

мОбработкаТайпинга                 = Ложь;
мТекстТайпинга                     = "";
мПоследнееЗначениеЭлементаТайпинга = Неопределено;