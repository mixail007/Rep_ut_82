
Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если ЭлементыФормы.Панель.ТекущаяСтраница.имя = "Заполнение" тогда
		ЗаписатьПланирование(ложь,ложь);
	ИначеЕсли ЭлементыФормы.Панель.ТекущаяСтраница.имя = "Утверждение" тогда
		УтвердитьПланирование();
	Иначе
		ЗаполнитьПоЗаявкам();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	ПериодПланирования = "Месяц";
	НачалоПериода = НачалоМесяца(ТекущаяДата());
	ЭлементыФормы.НадписьПериодБюджета.Видимость = Ложь;
	Элементыформы.ПериодБюджета.Видимость = Ложь;

	ПериодПланированияУ = "Месяц";
	НачалоПериодаУ = НачалоМесяца(ТекущаяДата());
	МесяцЗаявок = НачалоМесяца(ТекущаяДата());
	ЗаполнитьМесяц();
	Если планирование.Количество()>0 тогда
		Если планирование[0].УтвержденоОтветственным = истина или планирование[0].УтвержденоНОК = истина Тогда
			ЭлементыФормы.ЗаполнитьП.Видимость = Ложь;
			ЭлементыФормы.Утвердить.Видимость = Ложь;
		иначе	
			ЭлементыФормы.ЗаполнитьП.Видимость = Истина;
			ЭлементыФормы.Утвердить.Видимость = Истина;
		конецесли;
	иначе
		ЭлементыФормы.ЗаполнитьП.Видимость = Истина;
		ЭлементыФормы.Утвердить.Видимость = Истина;
	конецЕсли;
	
	Если глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Аверкина") или РольДоступна("ПолныеПрава") Тогда
		ЭлементыФормы.Панель.Страницы.Заявки.Видимость = Истина;
	конецЕсли;
	
	Если глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Аверкина")или глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Алексеева А.Е.") тогда
	Элементыформы.ЗаполнитьИзПолугодия.Видимость = Истина;
    конецесли;
	
	Если глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Веселова")или глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Парахня С") тогда
	Элементыформы.ЗаполнитьИзПолугодия.Видимость = Истина;
	ЭлементыФормы.Утверждение.ТолькоПросмотр = Истина;
	конецесли;

КонецПроцедуры


Процедура ПланированиеПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого стр из ОформленияСтрок цикл
		Если Стр.данныеСтроки.УтвержденоОтветственным  тогда
			Стр.ЦветФона = Webцвета.СветлоЖелтый;
			если глТекущийПользователь<>Справочники.Пользователи.НайтиПоКоду("Аверкина") тогда
				Для каждого яч из Стр.Ячейки Цикл
					яч.ТолькоПросмотр = Истина;
				конецЦикла;	
			конецЕсли;
		конецЕсли;
		Если Стр.данныеСтроки.УтвержденоНОК тогда
			Стр.ЦветФона = Webцвета.СветлоЗеленый;
			если глТекущийПользователь<>Справочники.Пользователи.НайтиПоКоду("Аверкина") тогда
				Для каждого яч из Стр.Ячейки Цикл
					яч.ТолькоПросмотр = Истина;
				конецЦикла;	
			конецЕсли;
		конецЕсли;
	конецЦикла;	
КонецПроцедуры

Процедура ПланированиеКоличествоЧеловекПриИзменении(Элемент)
	РассчитатьСуточные(ЭлементыФормы.Планирование.ТекущиеДанные);
КонецПроцедуры

Процедура ПланированиеКоличествоДнейПриИзменении(Элемент)
	РассчитатьСуточные(ЭлементыФормы.Планирование.ТекущиеДанные);
КонецПроцедуры

Процедура ПланированиеМеждународнаяПриИзменении(Элемент)
	РассчитатьСуточные(ЭлементыФормы.Планирование.ТекущиеДанные);
КонецПроцедуры

процедура РассчитатьСуточные(ТекущаяСтрока)
	Если текущаяСтрока.Международная Тогда
		ТекущаяСтрока.Суточные = ТекущаяСтрока.КоличествоЧеловек* ТекущаяСтрока.КоличествоДней*2500;
	иначе	
		ТекущаяСтрока.Суточные = ТекущаяСтрока.КоличествоЧеловек* ТекущаяСтрока.КоличествоДней*1000;
	конецЕсли;
конецпроцедуры	

Процедура НачалоПолугодияПриИзменении(Элемент)
	Если ПериодПланирования = "Полугодие" тогда
		//Если Месяц(НачалоПериода)<>1 и Месяц(НачалоПериода)<>7 Тогда
		//	//НачалоПериода = Дата(1,1,1);
		//	//Сообщить("Выберите январь или июль!");
		//	Если Месяц(ТекущаяДата())>=7 тогда
		//		нужныйМесяц = 7;
		//	иначе
		//		нужныйМесяц =1;
		//	конецЕсли;
		//	
		//	НачалоПериода = Дата(Год(ТекущаяДата()),нужныйМесяц,1);
		//иначе
		//	НачалоПериода = НачалоДня(НачалоПериода);
		//	ЗаполнитьПолугодие();
		//конецЕсли;	
	иначе
		НачалоПериода = НачалоМесяца(НачалоПериода);
		ЗаполнитьМесяц();
	конецЕсли;
КонецПроцедуры

Процедура ПланированиеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТекущаяСтрока = ЭлементыФормы.Планирование.ТекущиеДанные;	
	ТекущаяСтрока.Исполнитель = глТекущийПользователь;
	ТекущаяСтрока.подразделение = Подразделение;
	ТекущаяСтрока.Ответственный = Ответственный;
	ТекущаяСтрока.ПериодПланирования = ПериодПланирования;
	ТекущаяСтрока.Итого = ТекущаяСтрока.суточные+Текущаястрока.Проезд+Текущаястрока.ПрочиеРасходы+ Текущаястрока.Проживание;
КонецПроцедуры

Процедура ПериодПланированияПриИзменении(Элемент)
	если ПериодПланирования = "Полугодие" тогда
		ЭлементыФормы.ЗаполнитьП.Видимость = Ложь;
		ЭлементыФормы.НадписьНачалоПериода.Видимость = Ложь;
		ЭлементыФормы.НадписьПериодБюджета.Видимость = Истина;
		Элементыформы.ПериодБюджета.Видимость = Истина;

		Элементыформы.НачалоПериода.Видимость = Ложь;
		//Если планирование.Количество()>0 Тогда
		//	Ответ = Вопрос("Сохранить текущие данные?", РежимДиалогаВопрос.ДаНет, 0);
		//	Если Ответ = КодВозвратаДиалога.Да Тогда
		//		ЗаписатьПланирование(ложь,ложь);
		//	КонецЕсли;
		//конецЕсли;
		
		
		//ЭлементыФормы.НадписьНачалоПериода.Заголовок = "Начало полугодия";
		//Если Месяц(НачалоПериода)<>1 и Месяц(НачалоПериода)<>7 Тогда
		//	//НачалоПериода = Дата(1,1,1);
		//	//Сообщить("Выберите январь или июль!");
		//	Если Месяц(ТекущаяДата())>=7 тогда
		//		нужныйМесяц = 7;
		//	иначе
		//		нужныйМесяц =1;
		//	конецЕсли;
		//	
		//	НачалоПериода = Дата(Год(ТекущаяДата()),нужныйМесяц,1);
		//	ЗаполнитьПолугодие();
		//иначе
		//	НачалоПериода = НачалоДня(НачалоПериода);
		//	ЗаполнитьПолугодие();
		//конецЕсли;	
	иначе
		периодБюджета = справочники.ПериодыПланирования.ПустаяСсылка();
		ЭлементыФормы.НадписьПериодБюджета.Видимость = Ложь;
		Элементыформы.ПериодБюджета.Видимость = Ложь;
		ЭлементыФормы.ЗаполнитьП.Видимость = Истина;
		ЭлементыФормы.НадписьНачалоПериода.Видимость = Истина;
		ЭлементыФормы.НачалоПериода.Видимость = Истина;
		
		ЭлементыФормы.НадписьНачалоПериода.Заголовок = "Начало месяца";
		ЗаполнитьМесяц();
		Если планирование.Количество()>0 тогда
			Если планирование[0].УтвержденоНОК = истина или планирование[0].УтвержденоНОК = истина Тогда
				ЭлементыФормы.ЗаполнитьП.Видимость = Ложь;
			иначе	
				ЭлементыФормы.ЗаполнитьП.Видимость = Истина;
			конецесли;
		иначе
			ЭлементыФормы.ЗаполнитьП.Видимость = Истина;
		конецЕсли;
		
	конецЕсли;	
КонецПроцедуры

процедура ЗаполнитьПолугодие()
	//Если планирование.Количество()>0 Тогда
	//	Ответ = Вопрос("Сохранить текущие данные?", РежимДиалогаВопрос.ДаНет, 0);
	//	Если Ответ = КодВозвратаДиалога.Да Тогда
	//		ЗаписатьПланирование(ложь,ложь);
	//	КонецЕсли;
	//конецЕсли;
	
	планирование.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланированиеКомандировок.Месяц,
	|	ПланированиеКомандировок.Подразделение КАК Подразделение,
	|	ПланированиеКомандировок.Сотрудник,
	|	ПланированиеКомандировок.Ответственный,
	|	ПланированиеКомандировок.Международная,
	|	ПланированиеКомандировок.Направление,
	|	ПланированиеКомандировок.КоличествоЧеловек,
	|	ПланированиеКомандировок.КоличествоДней,
	|	ПланированиеКомандировок.Суточные,
	|	ПланированиеКомандировок.Проезд,
	|	ПланированиеКомандировок.ПрочиеРасходы,
	|	ПланированиеКомандировок.Проживание,
	|	ПланированиеКомандировок.УтвержденоОтветственным,
	|	ПланированиеКомандировок.УтвержденоНОК,
	|	ПланированиеКомандировок.Исполнитель КАК Исполнитель,
	|	ПланированиеКомандировок.ПериодПланирования,
	|	ЕСТЬNULL(ПланированиеКомандировок.Суточные, 0) + ЕСТЬNULL(ПланированиеКомандировок.Проезд, 0) + ЕСТЬNULL(ПланированиеКомандировок.ПрочиеРасходы, 0) + ЕСТЬNULL(ПланированиеКомандировок.Проживание, 0) КАК Итого
	|ИЗ
	|	РегистрСведений.ПланированиеКомандировок КАК ПланированиеКомандировок
	|ГДЕ
	|	ПланированиеКомандировок.ПериодБюджета = &ПериодБюджета
	|	И 99 = 99
	|	И ПланированиеКомандировок.ПериодПланирования = ""Полугодие""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Подразделение,
	|	Исполнитель";
	
	Запрос.УстановитьПараметр("ПериодБюджета", ПериодБюджета);
	//Если ПараметрыСеанса.ТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Аверкина") или РольДоступна("ПравоЗавершенияРаботыПользователей") тогда
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "99 = 99","ПланированиеКомандировок.Исполнитель = &Исполнитель");
	Запрос.УстановитьПараметр("Исполнитель", ПараметрыСеанса.ТекущийПользователь);
	//  конецЕсли;
	Планирование.Загрузить(Запрос.Выполнить().Выгрузить());
конецПроцедуры	

Процедура ЗаполнитьМесяц()
	//Если планирование.Количество()>0 Тогда
	//	Ответ = Вопрос("Сохранить текущие данные?", РежимДиалогаВопрос.ДаНет, 0);
	//	Если Ответ = КодВозвратаДиалога.Да Тогда
	//		ЗаписатьПланирование(ложь,ложь);
	//	КонецЕсли;
	//конецЕсли;
	
	планирование.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланированиеКомандировок.Месяц,
	|	ПланированиеКомандировок.Подразделение,
	|	ПланированиеКомандировок.Сотрудник,
	|	ПланированиеКомандировок.Ответственный,
	|	ПланированиеКомандировок.Международная,
	|	ПланированиеКомандировок.Направление,
	|	ПланированиеКомандировок.КоличествоЧеловек,
	|	ПланированиеКомандировок.КоличествоДней,
	|	ПланированиеКомандировок.Суточные,
	|	ПланированиеКомандировок.Проезд,
	|	ПланированиеКомандировок.ПрочиеРасходы,
	|	ПланированиеКомандировок.Проживание,
	|	ПланированиеКомандировок.УтвержденоОтветственным,
	|	ПланированиеКомандировок.УтвержденоНОК,
	|	ПланированиеКомандировок.Исполнитель,
	|	ПланированиеКомандировок.ПериодПланирования,
	|	ЕСТЬNULL(ПланированиеКомандировок.Суточные, 0) + ЕСТЬNULL(ПланированиеКомандировок.Проезд, 0) + ЕСТЬNULL(ПланированиеКомандировок.ПрочиеРасходы, 0) + ЕСТЬNULL(ПланированиеКомандировок.Проживание, 0) КАК Итого
	|ИЗ
	|	РегистрСведений.ПланированиеКомандировок КАК ПланированиеКомандировок
	|ГДЕ
	|	ПланированиеКомандировок.Месяц МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И 99 = 99
	|	И ПланированиеКомандировок.ПериодПланирования = ""месяц""";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("ДатаОкончания", конецМесяца(НачалоПериода));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "99 = 99","ПланированиеКомандировок.Исполнитель = &Исполнитель");
	Запрос.УстановитьПараметр("Исполнитель", ПараметрыСеанса.ТекущийПользователь);
	
	Планирование.Загрузить(Запрос.Выполнить().Выгрузить());
	
	
КонецПроцедуры

Процедура ПланированиеПередНачаломДобавления(Элемент, Отказ, Копирование)
	Если не ЗначениеЗаполнено(Подразделение) тогда
		Сообщить("Не заполненно подразделение");
		отказ = Истина;
	конецЕсли;	
	Если не ЗначениеЗаполнено(Ответственный) тогда
		Сообщить("Не заполнен руководитель");
		отказ = Истина;
	конецЕсли;	
	//Если планирование.Количество()>0 Тогда
	//	Если планирование[0].УтвержденоОтветственным или  планирование[0].УтвержденоНОК тогда
	//		Сообщить("План уже утвержден! Добавлять нельзя. ");
	//		отказ = Истина;
	//	конецесли;	
	//конецЕсли;
КонецПроцедуры


Процедура УтвердитьНажатие(Элемент)
	ЗаписатьПланирование(Истина,ложь);
КонецПроцедуры


Процедура ОтветственныйПриИзменении(Элемент)
	Если ответственный = глТекущийПользователь тогда
		Элементыформы.Утвердить.Видимость = Истина;
	Иначе
		Элементыформы.Утвердить.Видимость = Ложь;
	конецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьПНажатие(Элемент)
	//Если планирование.Количество()>0 Тогда
	//	Ответ = Вопрос("Сохранить текущие данные?", РежимДиалогаВопрос.ДаНет, 0);
	//	Если Ответ = КодВозвратаДиалога.Да Тогда
	//		ЗаписатьПланирование(ложь,ложь);
	//	КонецЕсли;
	//конецЕсли;
	
Если ввестиЗначение(ПериодБюджета,"Выберите период бюджета",Тип("СправочникСсылка.ПериодыПланирования")) тогда	
	
	планирование.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланированиеКомандировок.Месяц,
	|	ПланированиеКомандировок.Подразделение,
	|	ПланированиеКомандировок.Сотрудник,
	|	ПланированиеКомандировок.Ответственный,
	|	ПланированиеКомандировок.Международная,
	|	ПланированиеКомандировок.Направление,
	|	ПланированиеКомандировок.КоличествоЧеловек,
	|	ПланированиеКомандировок.КоличествоДней,
	|	ПланированиеКомандировок.Суточные,
	|	ПланированиеКомандировок.Проезд,
	|	ПланированиеКомандировок.ПрочиеРасходы,
	|	ПланированиеКомандировок.Проживание,
	|	ЛОЖЬ КАК УтвержденоОтветственным,
	|	ЛОЖЬ КАК УтвержденоНОК,
	|	ПланированиеКомандировок.Исполнитель,
	|	""Месяц"" КАК ПериодПланирования
	|ИЗ
	|	РегистрСведений.ПланированиеКомандировок КАК ПланированиеКомандировок
	|ГДЕ
	|	ПланированиеКомандировок.Месяц МЕЖДУ &ДатаНачала И &ДатаОкончания
    |	И ПланированиеКомандировок.ПериодБюджета = &ПериодБюджета
    |	И 99 = 99
	|	И ПланированиеКомандировок.ПериодПланирования = ""Полугодие""";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("ДатаОкончания", конецМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("ПериодБюджета", ПериодБюджета);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "99 = 99","ПланированиеКомандировок.Исполнитель = &Исполнитель");
	Запрос.УстановитьПараметр("Исполнитель", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Ответственный", ПараметрыСеанса.ТекущийПользователь);
	
	Планирование.Загрузить(Запрос.Выполнить().Выгрузить());
  конецЕсли;	
КонецПроцедуры

процедура ЗаписатьПланирование(Отв,НОК)
	
	НаборЗаписей= РегистрыСведений.ПланированиеКомандировок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор["Исполнитель"].Установить(глТекущийПользователь, Истина);
	НаборЗаписей.Отбор["ПериодПланирования"].Установить(ПериодПланирования, Истина);
	наборЗаписей.Прочитать();
	сч=0;
	Пока сч<НаборЗаписей.Количество() цикл
			Если  ПериодПланирования = "Полугодие" и наборЗаписей[сч].ПериодБюджета = ПериодБюджета тогда
				НаборЗаписей.Удалить(сч);
			иначеЕсли  ПериодПланирования = "Месяц" и наборЗаписей[сч].Месяц >= НачалоМесяца(НачалоПериода) и наборЗаписей[сч].Месяц <= конецМесяца(НачалоПериода) тогда
				НаборЗаписей.Удалить(сч);
			иначе
				сч= сч+1;
			КонецЕсли;
	конецЦикла;	
	наборЗаписей.Записать();
	Для каждого стр из Планирование Цикл
		Если стр.Месяц<> Дата(1,1,1) тогда
			Запись = РегистрыСведений.ПланированиеКомандировок.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись,стр);
			Запись.ПериодБюджета = ПериодБюджета;
			Если отв тогда
				Запись.УтвержденоОтветственным = Истина;	
				Запись.Ответственный = Ответственный;
				стр.УтвержденоОтветственным = Истина;
				стр.Ответственный = Ответственный;
			конецЕсли;	
			Запись.Записать(Истина);
		конецЕсли;		
	конецЦикла;	
	
конецПроцедуры	

Процедура ПланированиеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если не ЗначениеЗаполнено(Подразделение) тогда
		Сообщить("Не заполненно подразделение");
		отказ = Истина;
	конецЕсли;	
	Если не ЗначениеЗаполнено(Ответственный) тогда
		Сообщить("Не заполнен руководитель");
		отказ = Истина;
	конецЕсли;	
	
КонецПроцедуры

Процедура ПланированиеМесяцПриИзменении(Элемент)
	ТекущаяСтрока = ЭлементыФормы.Планирование.ТекущиеДанные;
	если ПериодПланирования = "Полугодие" тогда
		Если ТекущаяСтрока.Месяц< НачалоДня(ПериодБюджета.ДатаНачала) или ТекущаяСтрока.Месяц>конецМесяца(ПериодБюджета.ДатаКонца) тогда
			Сообщить("Выбранная дата не входит в планируемый период!");
			ТекущаяСтрока.Месяц = Дата(1,1,1);
		конецЕсли;
	иначе
		Если ТекущаяСтрока.Месяц< НачалоМесяца(НачалоПериода) или ТекущаяСтрока.Месяц>конецМесяца(НачалоПериода) тогда
			Сообщить("Выбранная дата не входит в планируемый период!");
			ТекущаяСтрока.Месяц = Дата(1,1,1);
		конецЕсли;
	конецЕсли;	
	
КонецПроцедуры

Процедура ПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ЭлементыФормы.Панель.ТекущаяСтраница.имя = "Заполнение" тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Записать.Текст = "Записать";
	ИначеЕсли ЭлементыФормы.Панель.ТекущаяСтраница.имя = "Утверждение" тогда
		ЭлементыФормы.НадписьНачалоПериодаУ.Видимость = Истина;
		Элементыформы.НачалоПериодаУ.Видимость = Истина;
		ЭлементыФормы.НадписьПериодБюджетаУ.Видимость = Ложь;
		Элементыформы.ПериодБюджетаУ.Видимость = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Записать.Текст = "Утвердить";
		ЗаполнитьДерево();
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Записать.Текст = "Обновить";
		ЗаполнитьПоЗаявкам();
	КонецЕсли;
КонецПроцедуры

Процедура ПериодПланированияУПриИзменении(Элемент)
	Если ПериодПланированияУ = "Полугодие" тогда
		ЭлементыФормы.НадписьНачалоПериодаУ.Видимость = Ложь;
		Элементыформы.НачалоПериодаУ.Видимость = Ложь;
		ЭлементыФормы.НадписьПериодБюджетаУ.Видимость = Истина;
		Элементыформы.ПериодБюджетаУ.Видимость = Истина;
	иначе
		ЭлементыФормы.НадписьНачалоПериодаУ.Видимость = Истина;
		Элементыформы.НачалоПериодаУ.Видимость = Истина;
		ЭлементыФормы.НадписьПериодБюджетаУ.Видимость = Ложь;
		Элементыформы.ПериодБюджетаУ.Видимость = Ложь;
		ЗаполнитьДерево();
	конецЕсли;
	
КонецПроцедуры

Процедура НачалоПериодаУПриИзменении(Элемент)
	Если ПериодПланированияУ = "Полугодие" тогда
		Если Месяц(НачалоПериодаУ)<>1 и Месяц(НачалоПериодаУ)<>7 Тогда
			//НачалоПериодаУ = Дата(1,1,1);
			//Сообщить("Выберите январь или июль!");
			Если Месяц(ТекущаяДата())>=7 тогда
				нужныйМесяц = 7;
			иначе
				нужныйМесяц =1;
			конецЕсли;
			
			НачалоПериодаУ = Дата(Год(ТекущаяДата()),нужныйМесяц,1);
		иначе
			НачалоПериодаУ = НачалоДня(НачалоПериодаУ);
			ЗаполнитьДерево();
		конецЕсли;	
	иначе
		НачалоПериодаУ = НачалоМесяца(НачалоПериодаУ);
		ЗаполнитьДерево();
	конецЕсли;
КонецПроцедуры

Процедура ПриЗакрытии()
	Если ЭлементыФормы.Панель.ТекущаяСтраница.имя = "Заполнение" тогда
	конецЕсли;	
КонецПроцедуры

Процедура ЗаписатьНажатие(Элемент)
	ЗаписатьПланирование(ложь,ложь);
КонецПроцедуры

процедура ЗаполнитьДерево()

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланированиеКомандировок.ПериодПланирования,
	|	ПланированиеКомандировок.Месяц,
	|	ПланированиеКомандировок.Подразделение КАК Подразделение,
	|	ПланированиеКомандировок.Сотрудник,
	|	ПланированиеКомандировок.Ответственный,
	|	ПланированиеКомандировок.Международная,
	|	ПланированиеКомандировок.Направление,
	|	ПланированиеКомандировок.Исполнитель КАК Исполнитель,
	|	ПланированиеКомандировок.КоличествоЧеловек,
	|	ПланированиеКомандировок.КоличествоДней,
	|	ПланированиеКомандировок.Суточные КАК Суточные,
	|	ПланированиеКомандировок.Проезд КАК Проезд,
	|	ПланированиеКомандировок.ПрочиеРасходы КАК ПрочиеРасходы,
	|	ПланированиеКомандировок.Проживание КАК Проживание,
	|	ПланированиеКомандировок.УтвержденоОтветственным,
	|	ПланированиеКомандировок.УтвержденоНОК,
	|	ЛОЖЬ КАК Пометка,
	|	ПланированиеКомандировок.Суточные + ПланированиеКомандировок.Проезд + ПланированиеКомандировок.ПрочиеРасходы + ПланированиеКомандировок.Проживание КАК Итого,
	|	ВЫБОР
	|		КОГДА ПланированиеКомандировок.Международная
	|			ТОГДА ПланированиеКомандировок.Суточные
	|		ИНАЧЕ ПланированиеКомандировок.Суточные * 0.7
	|	КОНЕЦ КАК Суточные_норма,
	|	ВЫБОР
	|		КОГДА ПланированиеКомандировок.Международная
	|			ТОГДА 0
	|		ИНАЧЕ ПланированиеКомандировок.Суточные * 0.3
	|	КОНЕЦ КАК Суточные_сверх,
	|	ПланированиеКомандировок.ПериодБюджета,
	|	НАЧАЛОПЕРИОДА(ПланированиеКомандировок.Месяц, МЕСЯЦ) КАК НачалоМесяца
	|ИЗ
	|	РегистрСведений.ПланированиеКомандировок КАК ПланированиеКомандировок
	|ГДЕ
	|	ПланированиеКомандировок.ПериодПланирования = &ПериодПланирования
	|	И 98 = 98
	|	И 99 = 99
	|	И 97 = 97
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоМесяца
	|ИТОГИ
	|	СУММА(Суточные),
	|	СУММА(Проезд),
	|	СУММА(ПрочиеРасходы),
	|	СУММА(Проживание),
	|	СУММА(Итого),
	|	СУММА(Суточные_норма),
	|	СУММА(Суточные_сверх)
	|ПО
	|	НачалоМесяца,
	|	Подразделение ИЕРАРХИЯ,
	|	Исполнитель";
	
	Если периодПланированияУ = "Полугодие" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"98 = 98","ПланированиеКомандировок.ПериодБюджета = &ПериодБюджета");	
	    Запрос.УстановитьПараметр("ПериодБюджета",ПериодБюджетаУ);
	иначе
		ДатаНач = НачалоМесяца(НачалоПериодаУ);
		ДатаКон = конецМесяца(НачалоПериодаУ);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"98 = 98","ПланированиеКомандировок.Месяц МЕЖДУ &ДатаНач И &ДатаКон");	
	    Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	    Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	конецЕсли;
	Если глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Аверкина") и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Алексеева А.Е.") и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Веселова" )и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Парахня С")и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Малышев") Тогда
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ПланированиеКомандировок.Ответственный = &Ответственный");	
	Запрос.УстановитьПараметр("Ответственный", глТекущийПользователь);
    иначе
	ЭлементыФормы.Утверждение.Колонки.Суточные_норма.Видимость = Истина;
	ЭлементыФормы.Утверждение.Колонки.Суточные_сверх.Видимость = Истина;
	КонецЕсли;
	Запрос.УстановитьПараметр("ПериодПланирования", ПериодПланированияУ);
	
	Если подразделениеОтбор<>Справочники.Подразделения.ПустаяСсылка()   тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"97 = 97","ПланированиеКомандировок.Подразделение = &Подразделение ");	
	    Запрос.УстановитьПараметр("Подразделение", ПодразделениеОтбор);
	конецЕсли;
	
	Утверждение = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
пересчетПодвала();	
конецпроцедуры	

Процедура УтверждениеПриИзмененииФлажка(Элемент, Колонка)
	текСтр = ЭлементыФормы.Утверждение.ТекущиеДанные;
	Для каждого стр из ТекСтр.Строки Цикл
		стр.Пометка = текСтр.пометка;
		Для каждого ст из стр.Строки Цикл
			ст.Пометка = текСтр.пометка;
		конецЦикла;	
	конецЦикла;	
КонецПроцедуры

Процедура УтверждениеПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого стр из ОформленияСтрок цикл
		Если Стр.данныеСтроки.УтвержденоОтветственным = Истина тогда
			Стр.ЦветФона = Webцвета.СветлоЖелтый;
			Если глТекущийПользователь<>Справочники.Пользователи.НайтиПоКоду("Аверкина") тогда
				Для каждого яч из Стр.Ячейки Цикл
					яч.ТолькоПросмотр = Истина;
				конецЦикла;	
			конецЕсли;
		конецЕсли;
		Если Стр.данныеСтроки.УтвержденоНОК = Истина тогда
			Стр.ЦветФона = Webцвета.СветлоЗеленый;
			если глТекущийПользователь<>Справочники.Пользователи.НайтиПоКоду("Аверкина") тогда
				Для каждого яч из Стр.Ячейки Цикл
					яч.ТолькоПросмотр = Истина;
				конецЦикла;	
			конецЕсли;
		конецЕсли;
		Если не ЗначениеЗаполнено(стр.ДанныеСтроки.Исполнитель)  тогда
			Стр.ЦветФона = Webцвета.БледноБирюзовый;
			если глТекущийПользователь<>Справочники.Пользователи.НайтиПоКоду("Аверкина") тогда
				Для каждого яч из Стр.Ячейки Цикл
					яч.ТолькоПросмотр = Истина;
				конецЦикла;	
			конецесли;
		конецЕсли;
	конецЦикла;	
КонецПроцедуры

процедура УтвердитьПланирование()
	Для каждого стрподразделение из Утверждение.Строки Цикл	
		Для каждого стрНачМесяца из стрПодразделение.Строки Цикл	
			Для каждого стрИсполнитель из стрНачМесяца.Строки Цикл	
				Для каждого стр из стрИсполнитель.Строки Цикл
					Если стр.пометка тогда
						Запись = РегистрыСведений.ПланированиеКомандировок.СоздатьМенеджерЗаписи();
						ЗаполнитьЗначенияСвойств(Запись,стр);
						Если глтекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Аверкина") тогда
							стр.УтвержденоНОК = Истина;
							Запись.УтвержденоНОК = Истина;
						иначе			
							Запись.УтвержденоОтветственным = Истина;	
							стр.УтвержденоОтветственным = Истина;
						конецЕсли;	
						Запись.Записать(Истина);
					конецЕсли;	
				конецЦикла;
			конецЦикла;
		конецЦикла;
	конецЦикла;
конецПроцедуры	

процедура пересчетПодвала()
		КоличествоЧеловек =0;
		КоличествоДней = 0;
		Суточные = 0;
		Суточные_норма = 0;
		Суточные_сверх = 0;
		Проезд = 0;
		ПрочиеРасходы = 0;
		Проживание = 0;
		Итого = 0;
		Для каждого ст из Утверждение.Строки  Цикл
//		КоличествоЧеловек =КоличествоЧеловек +ст.КоличествоЧеловек;
//		КоличествоДней =КоличествоДней +ст.КоличествоДней;
		Суточные =Суточные +ст.Суточные;
		Суточные_норма =Суточные_норма +ст.Суточные_норма;
		Суточные_сверх =Суточные_сверх +ст.Суточные_сверх;
		Проезд =Проезд +ст.Проезд;
		ПрочиеРасходы =ПрочиеРасходы +ст.ПрочиеРасходы;
		Проживание =Проживание +ст.Проживание;
		Итого =Итого +ст.Итого;
	конецЦикла;
	//    ЭлементыФормы.Утверждение.Колонки.СтатьяЗатрат.ТекстПодвала = "Итого";
	//	ЭлементыФормы.Утверждение.Колонки.КоличествоЧеловек.ТекстПодвала = КоличествоЧеловек;
	//	ЭлементыФормы.Утверждение.Колонки.КоличествоДней.ТекстПодвала = КоличествоДней;
		ЭлементыФормы.Утверждение.Колонки.Суточные.ТекстПодвала = Суточные;
		ЭлементыФормы.Утверждение.Колонки.Суточные_норма.ТекстПодвала = Суточные_норма;
		ЭлементыФормы.Утверждение.Колонки.Суточные_сверх.ТекстПодвала = Суточные_сверх;
		ЭлементыФормы.Утверждение.Колонки.Проезд.ТекстПодвала = Проезд;
		ЭлементыФормы.Утверждение.Колонки.ПрочиеРасходы.ТекстПодвала = ПрочиеРасходы;
		ЭлементыФормы.Утверждение.Колонки.Проживание.ТекстПодвала = Проживание;
		ЭлементыФормы.Утверждение.Колонки.Итого.ТекстПодвала = Итого;
 конецПроцедуры

процедура ЗаполнитьПоЗаявкам()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланированиеКомандировок.Подразделение,
	|	NULL,
	|	СУММА(ПланированиеКомандировок.Суточные) КАК Суточные,
	|	СУММА(ПланированиеКомандировок.Проезд) КАК Проезд,
	|	СУММА(ПланированиеКомандировок.ПрочиеРасходы) КАК ПрочиеРасходы,
	|	СУММА(ПланированиеКомандировок.Проживание) КАК Проживание,
	|	СУММА(ПланированиеКомандировок.КоличествоЧеловек) КАК КоличествоЧеловек,
	|	СУММА(ПланированиеКомандировок.КоличествоДней) КАК КоличествоДней,
	|	""План"" КАК Поле1,
	|	NULL КАК Заявка
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	РегистрСведений.ПланированиеКомандировок КАК ПланированиеКомандировок
	|ГДЕ
	|	ПланированиеКомандировок.ПериодПланирования = ""Месяц""
	|	И ПланированиеКомандировок.Месяц МЕЖДУ &ДатаНач И &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланированиеКомандировок.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаКомандировкуРасходы.Ссылка.Подразделение,
	|	ЗаявкаНаКомандировкуРасходы.Ссылка.Запланировал,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаявкаНаКомандировкуРасходы.ВидКомандировочногоРасхода = ""Суточные""
	|				ТОГДА ЗаявкаНаКомандировкуРасходы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ЗаявкаНаКомандировкуРасходы.ВидКомандировочногоРасхода = ""Проезд""
	|				ТОГДА ЗаявкаНаКомандировкуРасходы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ЗаявкаНаКомандировкуРасходы.ВидКомандировочногоРасхода = ""Представительские расходы""
	|					ИЛИ ЗаявкаНаКомандировкуРасходы.ВидКомандировочногоРасхода = ""Прочие расходы""
	|				ТОГДА ЗаявкаНаКомандировкуРасходы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ЗаявкаНаКомандировкуРасходы.ВидКомандировочногоРасхода = ""Проживание""
	|				ТОГДА ЗаявкаНаКомандировкуРасходы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СРЕДНЕЕ(1),
	|	СРЕДНЕЕ(РАЗНОСТЬДАТ(ЗаявкаНаКомандировкуРасходы.Ссылка.ДатаУбытия, ЗаявкаНаКомандировкуРасходы.Ссылка.ДатаПрибытия, ДЕНЬ) + 1),
	|	""Факт"",
	|	ЗаявкаНаКомандировкуРасходы.Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаКомандировку.Расходы КАК ЗаявкаНаКомандировкуРасходы
	|ГДЕ
	|	ЗаявкаНаКомандировкуРасходы.Ссылка.ДатаУбытия МЕЖДУ &ДатаНач И &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаКомандировкуРасходы.Ссылка,
	|	ЗаявкаНаКомандировкуРасходы.Ссылка.Подразделение,
	|	ЗаявкаНаКомандировкуРасходы.Ссылка.Запланировал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Подразделение КАК Подразделение,
	|	Данные.Суточные КАК Суточные,
	|	Данные.Проезд КАК Проезд,
	|	Данные.ПрочиеРасходы КАК ПрочиеРасходы,
	|	Данные.Проживание КАК Проживание,
	|	Данные.КоличествоЧеловек,
	|	Данные.КоличествоДней,
	|	ВЫБОР
	|		КОГДА Данные.Поле1 = ""Факт""
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК К,
	|	Данные.Заявка,
	|	Данные.Суточные + Данные.Проезд + Данные.ПрочиеРасходы + Данные.Проживание КАК Итого,
	|	Данные.Заявка.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА Данные.Поле1 = ""План""
	|			ТОГДА ""ЗАПЛАНИРОВАНО""
	|		ИНАЧЕ Данные.Заявка.МестоКомандировки
	|	КОНЕЦ КАК Направление,
	|	Данные.Заявка.Состояние КАК Состояние
	|ИЗ
	|	Данные КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Подразделение,
	|	Данные.Заявка,
	|	Данные.Суточные,
	|	Данные.Проезд,
	|	Данные.ПрочиеРасходы,
	|	Данные.Проживание,
	|	Данные.КоличествоЧеловек,
	|	Данные.КоличествоДней,
	|	Данные.Заявка.Сотрудник,
	|	Данные.Заявка.Состояние,
	|	ВЫБОР
	|		КОГДА Данные.Поле1 = ""Факт""
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Данные.Поле1 = ""План""
	|			ТОГДА ""ЗАПЛАНИРОВАНО""
	|		ИНАЧЕ Данные.Заявка.МестоКомандировки
	|	КОНЕЦ
	|ИТОГИ
	|	СУММА(К * Суточные) КАК Суточные,
	|	СУММА(К * Проезд) КАК Проезд,
	|	СУММА(К * ПрочиеРасходы) КАК ПрочиеРасходы,
	|	СУММА(К * Проживание) КАК Проживание,
	|	СУММА(К * Итого) КАК Итого,
	|	""Остаток запланированых средств"" КАК Направление
	|ПО
	|	Подразделение";
	
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(МесяцЗаявок));
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(МесяцЗаявок));
	
	ДеревоЗаявок = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
конецПроцедуры	

Процедура МесяцЗаявокПриИзменении(Элемент)
	ЗаполнитьПоЗаявкам();
КонецПроцедуры

Процедура ДеревоЗаявокПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого стр из ОформленияСтрок цикл
		Если Стр.данныеСтроки.Направление = "ЗАПЛАНИРОВАНО" тогда
			Стр.ЦветФона = Webцвета.ЛососьСветлый;
		ИначеЕсли Стр.данныеСтроки.Направление = "Остаток запланированых средств" тогда
			Стр.ЦветФона = Webцвета.ШелковыйОттенок;
		конецЕсли;	
		Если Стр.данныеСтроки.Состояние = ПЕречисления.СостоянияОбъектов.Согласован тогда
			Стр.ЦветФона = Webцвета.СветлоЖелтый;
		ИначеЕсли Стр.данныеСтроки.Состояние = ПЕречисления.СостоянияОбъектов.Утвержден тогда
			Стр.ЦветФона = Webцвета.СветлоЗеленый;
		конецЕсли;	
	конецЦикла;	
	КонецПроцедуры

Процедура СоздатьЗаявкуНажатие(Элемент)
	текДанные = ЭлементыФормы.Планирование.ТекущиеДанные;
	Док = Документы.ЗаявкаНаКомандировку.СоздатьДокумент();
	Док.Организация = Справочники.Организации.НайтиПоКоду("00001");	
	Док.Подразделение = ТекДанные.Подразделение;
	Док.Сотрудник = ТекДанные.сотрудник;
	Док.Ответственный = глТекущийпользователь;
	Док.МестоКомандировки = ТекДанные.Направление;
	Док.ВалютаДокумента = константы.ВалютаРегламентированногоУчета.Получить();
	Док.Международная = текДанные.Международная;
	Док.Запланировал = ТекДанные.Исполнитель;
	Док.СуммаДокумента =   ТекДанные.Суточные+ТекДанные.Проезд+ТекДанные.ПрочиеРасходы+ТекДанные.Проживание;
	новСтр = Док.Расходы.Добавить();
	НовСтр.ВидКомандировочногоРасхода = "Суточные";
	НовСтр.Сумма = ТекДанные.Суточные;
	новСтр = Док.Расходы.Добавить();
	НовСтр.ВидКомандировочногоРасхода = "Проезд";
	НовСтр.Сумма = ТекДанные.Проезд;
	новСтр = Док.Расходы.Добавить();
	НовСтр.ВидКомандировочногоРасхода = "Прочие расходы";
	НовСтр.Сумма = ТекДанные.ПрочиеРасходы;
	новСтр = Док.Расходы.Добавить();
	НовСтр.ВидКомандировочногоРасхода = "Проживание";
	НовСтр.Сумма = ТекДанные.Проживание;
	ФормаДок = Док.ПолучитьФорму();
	ФормаДок.Открыть();
	КонецПроцедуры

	Процедура УтверждениеПроездПриИзменении(Элемент)
		ТекСтрока = ЭлементыФормы.Утверждение.ТекущиеДанные;
		ТекСтрока.итого = ТекСтрока.Суточные+Текстрока.Проезд+ТекСтрока.ПрочиеРасходы + ТекСтрока.Проживание;
	КонецПроцедуры

	Процедура УтверждениеСуточныеПриИзменении(Элемент)
		ТекСтрока = ЭлементыФормы.Утверждение.ТекущиеДанные;
		ТекСтрока.итого = ТекСтрока.Суточные+Текстрока.Проезд+ТекСтрока.ПрочиеРасходы + ТекСтрока.Проживание;
	КонецПроцедуры

	Процедура УтверждениеКоличествоДнейПриИзменении(Элемент)
		ТекСтрока = ЭлементыФормы.Утверждение.ТекущиеДанные;
		Если ТекСтрока.Международная Тогда
		Текстрока.Суточные = ТекСтрока.КоличествоДней*ТекСтрока.КоличествоЧеловек*2500;
		ТекСтрока.Суточные_норма = Текстрока.Суточные;
		ТекСтрока.Суточные_сверх = 0;
	    иначе
		Текстрока.Суточные = ТекСтрока.КоличествоДней*ТекСтрока.КоличествоЧеловек*1000;
		ТекСтрока.Суточные_норма = Текстрока.Суточные*0.7;
		ТекСтрока.Суточные_сверх = Текстрока.Суточные*0.3;
		конецЕсли;
		ТекСтрока.итого = ТекСтрока.Суточные+Текстрока.Проезд+ТекСтрока.ПрочиеРасходы + ТекСтрока.Проживание;
	КонецПроцедуры

	Процедура УтверждениеКоличествоЧеловекПриИзменении(Элемент)
		ТекСтрока = ЭлементыФормы.Утверждение.ТекущиеДанные;
		Если ТекСтрока.Международная Тогда
		Текстрока.Суточные = ТекСтрока.КоличествоДней*ТекСтрока.КоличествоЧеловек*2500;
		ТекСтрока.Суточные_норма = Текстрока.Суточные;
		ТекСтрока.Суточные_сверх = 0;
	    иначе
		Текстрока.Суточные = ТекСтрока.КоличествоДней*ТекСтрока.КоличествоЧеловек*1000;
		ТекСтрока.Суточные_норма = Текстрока.Суточные*0.7;
		ТекСтрока.Суточные_сверх = Текстрока.Суточные*0.3;
		конецЕсли;
		ТекСтрока.итого = ТекСтрока.Суточные+Текстрока.Проезд+ТекСтрока.ПрочиеРасходы + ТекСтрока.Проживание;
	КонецПроцедуры

	Процедура УтверждениеПрочиеРасходыПриИзменении(Элемент)
		ТекСтрока = ЭлементыФормы.Утверждение.ТекущиеДанные;
		ТекСтрока.итого = ТекСтрока.Суточные+Текстрока.Проезд+ТекСтрока.ПрочиеРасходы + ТекСтрока.Проживание;
	КонецПроцедуры

	Процедура УтверждениеПроживаниеПриИзменении(Элемент)
		ТекСтрока = ЭлементыФормы.Утверждение.ТекущиеДанные;
		ТекСтрока.итого = ТекСтрока.Суточные+Текстрока.Проезд+ТекСтрока.ПрочиеРасходы + ТекСтрока.Проживание;
	КонецПроцедуры

	Процедура ПланированиеПередНачаломИзменения(Элемент, Отказ)
		Если не ЗначениеЗаполнено(Подразделение) тогда
			Сообщить("Не заполненно подразделение");
			отказ = Истина;
		конецЕсли;	
		Если не ЗначениеЗаполнено(Ответственный) тогда
			Сообщить("Не заполнен руководитель");
			отказ = Истина;
		конецЕсли;	
		//Если планирование.Количество()>0 Тогда
		//	Если планирование[0].УтвержденоОтветственным или  планирование[0].УтвержденоНОК тогда
		//		Сообщить("План уже утвержден! Добавлять нельзя. ");
		//		отказ = Истина;
		//	конецесли;	
		//конецЕсли;
	КонецПроцедуры

	Процедура УтверждениеМеждународнаяПриИзменении(Элемент)
		ТекСтрока = ЭлементыФормы.Утверждение.ТекущиеДанные;
		Если ТекСтрока.Международная Тогда
		Текстрока.Суточные = ТекСтрока.КоличествоДней*ТекСтрока.КоличествоЧеловек*2500;
		ТекСтрока.Суточные_норма = Текстрока.Суточные;
		ТекСтрока.Суточные_сверх = 0;
	    иначе
		Текстрока.Суточные = ТекСтрока.КоличествоДней*ТекСтрока.КоличествоЧеловек*1000;
		ТекСтрока.Суточные_норма = Текстрока.Суточные*0.7;
		ТекСтрока.Суточные_сверх = Текстрока.Суточные*0.3;
		конецЕсли;
		ТекСтрока.итого = ТекСтрока.Суточные+Текстрока.Проезд+ТекСтрока.ПрочиеРасходы + ТекСтрока.Проживание;
	КонецПроцедуры

	Процедура ПериодБюджетаПриИзменении(Элемент)
			ЗаполнитьПолугодие();
	КонецПроцедуры

	Процедура ПериодБюджетаУПриИзменении(Элемент)
		ЗаполнитьДерево();
	КонецПроцедуры

	Процедура ЗаполнитьИзПолугодияНажатие(Элемент)
		ПериодБюджетаДляЗаполнения = Неопределено;
		Массив = Новый Массив;
        Массив.Добавить(Тип("СправочникСсылка.ПериодыПланирования"));
		ОписаниеТипов = Новый ОписаниеТипов(Массив);
		ВыбралиПериод = ВвестиЗначение( ПериодБюджетаДляЗаполнения,"",ОписаниеТипов);	
		Если выбралипериод тогда	
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПланированиеКомандировок.Подразделение
			|ПОМЕСТИТЬ ВТ
			|ИЗ
			|	РегистрСведений.ПланированиеКомандировок КАК ПланированиеКомандировок
			|ГДЕ
			|	ПланированиеКомандировок.ПериодПланирования = ""Месяц""
			|	И ПланированиеКомандировок.Месяц МЕЖДУ &МесяцНач И &МесяцКон
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПланированиеКомандировок.Месяц,
			|	ПланированиеКомандировок.Подразделение,
			|	ПланированиеКомандировок.Сотрудник,
			|	ПланированиеКомандировок.Ответственный,
			|	ПланированиеКомандировок.Международная,
			|	ПланированиеКомандировок.Направление,
			|	ПланированиеКомандировок.Исполнитель,
			|	ПланированиеКомандировок.КоличествоЧеловек,
			|	ПланированиеКомандировок.КоличествоДней,
			|	ПланированиеКомандировок.Суточные,
			|	ПланированиеКомандировок.СуточныеСверхНормы,
			|	ПланированиеКомандировок.Проезд,
			|	ПланированиеКомандировок.ПрочиеРасходы,
			|	ПланированиеКомандировок.Проживание,
			|	ПланированиеКомандировок.УтвержденоОтветственным
			|ИЗ
			|	РегистрСведений.ПланированиеКомандировок КАК ПланированиеКомандировок
			|ГДЕ
			|	ПланированиеКомандировок.Месяц МЕЖДУ &МесяцНач И &МесяцКон
			|	И ПланированиеКомандировок.ПериодБюджета = &ПериодБюджета
			|	И НЕ ПланированиеКомандировок.Подразделение В
			|				(ВЫБРАТЬ
			|					ВТ.Подразделение
			|				ИЗ
			|					ВТ КАК ВТ)
			|	И ПланированиеКомандировок.ПериодПланирования = ""Полугодие""";
			
			Запрос.УстановитьПараметр("МесяцКон", КонецМесяца(НачалоПериодаУ));
			Запрос.УстановитьПараметр("МесяцНач", НачалоМесяца(НачалоПериодаУ));
			
			Запрос.УстановитьПараметр("ПериодБюджета", ПериодБюджетаДляЗаполнения);
			
			Результат = Запрос.Выполнить();
			
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				Запись = РегистрыСведений.ПланированиеКомандировок.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(Запись,Выборка);
				Запись.ПериодПланирования = "Месяц";
				Запись.Записать();	
			КонецЦикла;
			
		ЗаполнитьДерево();
			
		конецЕсли;
		
	КонецПроцедуры

	Процедура УровеньГруппировкиПриИзменении(Элемент)
	Для каждого Строка Из ЭлементыФормы.Утверждение.Значение.Строки Цикл 
	ЭлементыФормы.Утверждение.Свернуть(Строка); 		
    СвернутьДерево(Строка); 
    КонецЦикла;
    Если Уровеньгруппировки>1 Тогда
		Для каждого Строка Из ЭлементыФормы.Утверждение.Значение.Строки Цикл 
		Уровень=1;
		РазвернутьДерево(Строка,Уровень, ЭлементыФормы.Утверждение); 
	КонецЦикла;
    конецЕсли;
    Этаформа.Обновить();

	КонецПроцедуры

функция РазвернутьДерево(СтрокаДерева,Уровень,Таблица)
	уровень=Уровень+1;
	
	пока Уровень < Уровеньгруппировки Цикл
		Если строкаДерева.Строки.Количество()=0 Тогда
			Прервать;
		иначе	
			
			Для каждого строка из строкаДерева.Строки Цикл
				РазвернутьДерево(Строка,Уровень, Таблица);
			КонецЦикла;
		конецЕсли;	
	конецЦикла;
	Таблица.Развернуть(СтрокаДерева,Ложь); 
конецФункции

Функция СвернутьДерево(Таблица)
	Для каждого Строка Из Таблица.Строки Цикл 
    ЭлементыФормы.Утверждение.Свернуть(Строка); 
	СвернутьДерево(Строка);
    КонецЦикла;

	
конецФункции	

Процедура Кнопка1ОбновитьНажатие(Элемент)
	ЗаполнитьДерево();
КонецПроцедуры

Процедура СформироватьНажатие(Элемент)
	СхемаКомпоновкиДанных1 = ПолучитьМакет("Макет");
  	 
	Настройки1 = СхемаКомпоновкиДанных1.НастройкиПоУмолчанию;
	
	ДанныеРасшифровки1 = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета1 = Новый КомпоновщикМакетаКомпоновкиДанных;

	//ПараметрСКД = Настройки1.ПараметрыДанных.Элементы.Найти("НачФакт");
	//ПараметрСКД.Значение = ДобавитьМесяц( ПериодПланированияПоГодам.ДатаНачала,-12);
	//ПараметрСКД.Использование = ИСТИНА;

	//ПараметрСКД = Настройки1.ПараметрыДанных.Элементы.Найти("КонФакт");
	//ПараметрСКД.Значение = КонецДня(ДобавитьМесяц( ПериодПланированияПоГодам.ДатаКонца,-12));
	//ПараметрСКД.Использование = ИСТИНА;
	
	////ПараметрСКД = Настройки1.ПараметрыДанных.Элементы.Найти("ПериодПланирования");
	////ПараметрСКД.Значение = ПериодПланированияПоГодам;
	////ПараметрСКД.Использование = ИСТИНА;

	//ПараметрСКД = Настройки1.ПараметрыДанных.Элементы.Найти("ПериодБюджета");
	//ПараметрСКД.Значение = ПериодБЮджетаОтчет;
	//ПараметрСКД.Использование = ИСТИНА;

	
	Параметр = СхемаКомпоновкиДанных1.Параметры.ПериодБюджета;
	Параметр.Значение = ПериодБЮджетаОтчет;
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Параметр = СхемаКомпоновкиДанных1.Параметры.ПериодПланирования;
	Параметр.Значение =  ПериодПланированияОтчет;
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	
	Если ПериодПланированияОтчет = "Месяц" тогда
	Параметр = СхемаКомпоновкиДанных1.Параметры.НачалоМесяца;
	Параметр.Значение = МесяцОтчет;
	Параметр.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	конецЕсли;
	
	МакетКомпоновки1 = КомпоновщикМакета1.Выполнить(СхемаКомпоновкиДанных1, Настройки1, ДанныеРасшифровки1);
	
	//ВнешнийНаборДанных = Новый Структура("ТаблН", ТаблН);	//Добавляем внешнюю таблицу
	
	ПроцессорКомпоновкиДанных1 = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных1.Инициализировать(МакетКомпоновки1, , ДанныеРасшифровки1);
	
	ОтчетРезультат = ЭлементыФормы.ОтчетРезультат;
	ОтчетРезультат.Очистить();
	
	ПроцессорВывода1 = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода1.УстановитьДокумент(ОтчетРезультат);
	
	ПроцессорВывода1.Вывести(ПроцессорКомпоновкиДанных1);
	
	//РезультатПоГодам.ФиксацияСлева = 2;
	//РезультатПоГодам.ПоказатьУровеньГруппировокСтрок(0);

КонецПроцедуры

Процедура ПериодПланированияОтчетПриИзменении(Элемент)
		ЭлементыФормы.ПериодБюджетаОтчет.Видимость = ПериодПланированияОтчет <> "Месяц";
		ЭлементыФормы.НадписьПериодБюджетаОтчет.Видимость = ПериодПланированияОтчет <> "Месяц";
		ЭлементыФормы.НадписьМесяцОтчет.Видимость = ПериодПланированияОтчет = "Месяц";
		ЭлементыФормы.МесяцОтчет.Видимость = ПериодПланированияОтчет = "Месяц";
КонецПроцедуры
