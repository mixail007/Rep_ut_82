
Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура изменяет значение флажка в табличном поле НастройкаПолей.
//
Процедура ПроверкаСостоянияФлажка()

	Если ЭлементыФормы.НастройкаПолей.ТекущиеДанные = Неопределено Тогда
		Возврат;
	Иначе
		ТекущееНазначениеРеквизита1С = ЭлементыФормы.НастройкаПолей.ТекущиеДанные.НазначениеРеквизита1С;
	КонецЕсли; 
	
	Если ТипЗнч(ТекущееНазначениеРеквизита1С) = Тип("Строка") И НЕ ПустаяСтрока(ТекущееНазначениеРеквизита1С) Тогда
		ЭлементыФормы.НастройкаПолей.ТекущиеДанные.Использование = Истина;
	ИначеЕсли ТипЗнч(ТекущееНазначениеРеквизита1С) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") И НЕ ТекущееНазначениеРеквизита1С.Пустая() Тогда
		ЭлементыФормы.НастройкаПолей.ТекущиеДанные.Использование = Истина;
	Иначе
		ЭлементыФормы.НастройкаПолей.ТекущиеДанные.Использование = Ложь;
	КонецЕсли; 
	
КонецПроцедуры // ПроверкаСостоянияФлажка()

// Функция проверяет указаны ли владельцы в строках таблицы НастройкаЗагрузкиЗначений.
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   Булево, успешно ли завершена проверка
//
Функция ПроверитьНаличиеВладельца()

	Для каждого СтрокаТаблицы Из НастройкаЗагрузкиЗначений Цикл
		Если СтрокаТаблицы.Использование И СтрокаТаблицы.Владелец.Пустая() Тогда
			Возврат Ложь;
		КонецЕсли; 
	КонецЦикла;

	Возврат Истина;

КонецФункции // ПроверитьНаличиеВладельца()

// Функция проверяет указан ли признак ЮрФиз лица в таблице НастройкаЗагрузкиЗначений.
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   Булево, успешно ли прошла проверка
//
Функция ПроверитьНаличиеЮрФизЛица()

	Для каждого СтрокаТаблицы Из НастройкаЗагрузкиЗначений Цикл
		Если СтрокаТаблицы.Использование И СтрокаТаблицы.ЮрФизЛицо.Пустая() Тогда
			Возврат Ложь;
		КонецЕсли; 
	КонецЦикла;

	Возврат Истина;

КонецФункции // ПроверитьНаличиеЮрФизЛица()

// Процедура проверяет и устанавливает доступность кнопок нижней командной панели формы.
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   НЕТ
//
Процедура ДоступностьКнопокНижнейПанели()

	Если ЭлементыФормы.ПанельВыполненияЗагрузки.ТекущаяСтраница.Имя = "ЗаполнениеТаблицыПолей" Тогда
	
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность  = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Доступность  = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Готово.Доступность = Ложь;

	ИначеЕсли ЭлементыФормы.ПанельВыполненияЗагрузки.ТекущаяСтраница.Имя = "НастройкаПоискаОбъектов" Тогда
		
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность  = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Доступность  = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Готово.Доступность = Ложь;
		
	ИначеЕсли ЭлементыФормы.ПанельВыполненияЗагрузки.ТекущаяСтраница.Имя = "НастройкаЗагрузкиЗначений" Тогда
		
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Назад.Доступность  = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Далее.Доступность  = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Готово.Доступность = Истина;
		
	КонецЕсли; 

КонецПроцедуры

// Процедура корректирует строки в таблице настройки поиска объектов.
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   НЕТ
//
Процедура СкорректироватьСоответствияПоиска()

	мФормаИндикации.КомментарийОбработкиДанных = "Корректируются значения поиска объектов ...";
	мФормаИндикации.МаксимальноеЗначение = ТаблицаНастройкиПоискаОбъектов.Количество();
	мФормаИндикации.Значение = 0;
	мФормаИндикации.Открыть();
	
	Для каждого СтрокаТаблицы Из ТаблицаНастройкиПоискаОбъектов Цикл
	
		мФормаИндикации.Значение = ТаблицаНастройкиПоискаОбъектов.Индекс(СтрокаТаблицы) + 1;
		
		Если (ТипЗнч(СтрокаТаблицы.ЗначениеФайла) = Тип("Строка") И НЕ ПустаяСтрока(СтрокаТаблицы.ЗначениеФайла))
			 ИЛИ ТипЗнч(СтрокаТаблицы.ЗначениеФайла) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		
			Продолжить;

		Иначе

			НайденнаяСтрока = НастройкаПолей.Найти(СтрокаТаблицы.Значение1С,"НазначениеРеквизита1С");

			Если НайденнаяСтрока <> Неопределено Тогда

				СтрокаТаблицы.ЗначениеФайла = НайденнаяСтрока.ИмяРеквизита;
				СтрокаТаблицы.Использование = Истина;
					
			КонецЕсли;
		
		КонецЕсли; 
	
	КонецЦикла;

	Если мФормаИндикации.Открыта() Тогда
		мФормаИндикации.Закрыть();
	КонецЕсли; 

КонецПроцедуры

// Функция формирует список ИД полей, из которых складывается наименование нового объекта
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   СписокЗначений
//
Функция ПолучитьСписокПолейДляНаименования1С()

	СписокВозврата = Новый СписокЗначений;
	
	Для каждого СтрокаТаблицы Из ПоляПредставленияНаименованияОбъектаПриЗагрузке Цикл
		Если СтрокаТаблицы.Использование Тогда
			СписокВозврата.Добавить(СтрокаТаблицы.ИмяРеквизита, СтрокаТаблицы.ИндПоля);
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат СписокВозврата;
	
КонецФункции

// Процедура формирует данные для таблицы настройки объектов загрузки.
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   НЕТ
//
Процедура СформироватьТаблицуНастройкиЗагрузкиЗначений()

	мФормаИндикации.КомментарийОбработкиДанных = "Подготавливаются данные для поиска объектов ...";
	мФормаИндикации.МаксимальноеЗначение = 100;
	мФормаИндикации.Значение = 50;
	мФормаИндикации.Открыть();
	
	
	СписокПолейФайлаДляНаименования1С = ПолучитьСписокПолейДляНаименования1С();
	
	Если СписокПолейФайлаДляНаименования1С.Количество() = 0 Тогда
		Предупреждение("Не проставлено ни одного поля для формирования наименования объекта");
		Возврат;
	КонецЕсли;

	ЕстьКритерииПоискаОбъектов = Ложь;
	СписокСравненияКИ = Новый СписокЗначений;
	Для каждого СтрокаТаблицы Из ТаблицаНастройкиПоискаОбъектов Цикл
		Если СтрокаТаблицы.Использование Тогда
			ЕстьКритерииПоискаОбъектов = Истина;
			Если СтрокаТаблицы.ТипРеквизита1С = "ВидКИ" Тогда
				СписокСравненияКИ.Добавить(СтрокаТаблицы.Объект1С, СтрокаТаблицы.Условие);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 

	РезультатЗапроса    = Неопределено;
	РезультатЗапросаФИО = Неопределено;
	
	Если СписокСравненияКИ.Количество() > 0 Тогда
	
		Запрос = Новый Запрос;

		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КонтактнаяИнформация.Вид КАК Вид,
		|	КонтактнаяИнформация.Объект КАК Объект,
		|	КонтактнаяИнформация.Представление КАК Представление
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Вид В(&СписокВидов)
		|	И
		|	КонтактнаяИнформация.Объект ССЫЛКА Справочник." + ОпределитьИмяТаблицыОбъекта() + "
		|ИТОГИ ПО
		|	Объект,
		|	Вид
		|";

		Запрос.УстановитьПараметр("СписокВидов", СписокСравненияКИ);

		РезультатЗапроса = Запрос.Выполнить();
	
	КонецЕсли;

	Если ТипОбъекта = "ФизическиеЛица" Тогда
	
		Запрос = Новый Запрос;

		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
		|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество,
		|	ФИОФизЛицСрезПоследних.ФизЛицо КАК Объект
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
		|ИТОГИ ПО
		|	Объект
		|";

		Запрос.УстановитьПараметр("СписокВидов", СписокСравненияКИ);

		РезультатЗапросаФИО = Запрос.Выполнить();
	
	КонецЕсли; 
	
	ЭлементыФормы.НастройкаЗагрузкиЗначений.Колонки.Владелец.Видимость  = (ТипОбъекта = "КонтактныеЛицаКонтрагентов" ИЛИ ТипОбъекта = "ПрочиеКонтактныеЛица");
	Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" Тогда
		ЭлементыФормы.НастройкаЗагрузкиЗначений.Колонки.Владелец.ТекстШапки = "Контрагент";
	Иначе
		ЭлементыФормы.НастройкаЗагрузкиЗначений.Колонки.Владелец.ТекстШапки = "Ответственный";
	КонецЕсли; 
	ЭлементыФормы.НастройкаЗагрузкиЗначений.Колонки.ЮрФизЛицо.Видимость = (ТипОбъекта = "Контрагенты");

	НастройкаЗагрузкиЗначений.Очистить();

	Если мФормаИндикации.Открыта() Тогда
		мФормаИндикации.Закрыть();
	КонецЕсли; 
	
	мФормаИндикации.КомментарийОбработкиДанных = "Поиск объектов в базе 1С ...";
	мФормаИндикации.МаксимальноеЗначение = ТаблицаДанныхФайла.Количество();
	мФормаИндикации.Значение = 0;
	мФормаИндикации.Открыть();
	
	Для каждого СтрокаТаблицы Из ТаблицаДанныхФайла Цикл
	
		мФормаИндикации.Значение = ТаблицаДанныхФайла.Индекс(СтрокаТаблицы) + 1;
		
		НоваяСтрокаТаблицы = НастройкаЗагрузкиЗначений.Добавить();
		НоваяСтрокаТаблицы.НомерСтрокиФайла = СтрокаТаблицы.НомерСтрокиФайла;

		ПредставлениеОбъектаФайла = "";

		Для каждого ЭлементСписка Из СписокПолейФайлаДляНаименования1С Цикл
			ПредставлениеОбъектаФайла = ПредставлениеОбъектаФайла + " " + СтрокаТаблицы[ЭлементСписка.Представление];
		КонецЦикла; 
		
		НоваяСтрокаТаблицы.ПредставлениеОбъектаФайла = СокрЛП(ПредставлениеОбъектаФайла);
		НоваяСтрокаТаблицы.ПредставлениеОбъекта1С    = СокрЛП(ПредставлениеОбъектаФайла);

		Если НЕ ЕстьКритерииПоискаОбъектов Тогда
			ОбъектСтроки = Справочники[ОпределитьИмяТаблицыОбъекта()].ПустаяСсылка();
		Иначе
			ОбъектСтроки = НайтиОбъект(СтрокаТаблицы, СписокСравненияКИ, РезультатЗапроса, РезультатЗапросаФИО);
		КонецЕсли; 

		НоваяСтрокаТаблицы.Объект1С = ОбъектСтроки;
		Если НЕ ОбъектСтроки.Пустая() Тогда
		
			НоваяСтрокаТаблицы.ПредставлениеОбъекта1С = Строка(ОбъектСтроки);

			Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" ИЛИ ТипОбъекта = "ПрочиеКонтактныеЛица" Тогда
				НоваяСтрокаТаблицы.Владелец = ОбъектСтроки.ОбъектВладелец;
			КонецЕсли; 
		
		КонецЕсли; 

		Если ТипОбъекта = "Контрагенты" Тогда
			НоваяСтрокаТаблицы.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
		КонецЕсли; 
	
	КонецЦикла;

КонецПроцедуры

// Процедура пытается привести значения к отдому типу, одному из примитивных.
//
// Параметры
//  Значение1С - значение из базы 1С
//  ЗначениеФайла - значение к загрузке из файла
//
// Возвращаемое значение:
//   НЕТ
//
Процедура ПривестиОбъектыКОдномуВиду(Значение1С, ЗначениеФайла, СообщениеОшибки = Неопределено)

	Если ТипЗнч(Значение1С) = Тип("Строка") Тогда
	
		Значение1С = СокрЛП(Значение1С);
		Попытка
			ЗначениеФайла = СокрЛП(Строка(ЗначениеФайла));
		Исключение
			СообщениеОшибки = ""+ОписаниеОшибки();
			Возврат;
		КонецПопытки;

	ИначеЕсли ТипЗнч(Значение1С) = Тип("Число") Тогда

		Значение1С = Число(Значение1С);
		Попытка
			ЗначениеФайла = Число(ЗначениеФайла);
		Исключение
			СообщениеОшибки = ""+ОписаниеОшибки();
			Возврат;
		КонецПопытки;
		
	ИначеЕсли ТипЗнч(Значение1С) = Тип("Дата") Тогда

		Значение1С = Дата(Значение1С);
		ЗначениеФайлаДата = ПреобразоватьВСтрокуДаты(Строка(ЗначениеФайла));
		Если ЗначениеФайлаДата = Неопределено Тогда
			СообщениеОшибки = "Нет возможности преобразовать к типу ""Дата"".";
			Возврат;
		КонецЕсли; 
		Попытка
			ЗначениеФайла = Дата(ЗначениеФайлаДата);
		Исключение
			СообщениеОшибки = ""+ОписаниеОшибки();
			Возврат;
		КонецПопытки;
		
	КонецЕсли; 

КонецПроцедуры

// Функция ищет объект в базе 1С.
//
Функция НайтиОбъект(СтрокаФайла, СписокСравненияКИ, РезультатЗапроса, РезультатЗапросаФИО)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	" + ОпределитьИмяТаблицыОбъекта() + ".Ссылка,
	|	*
	|ИЗ
	|	Справочник." + ОпределитьИмяТаблицыОбъекта() + " КАК " + ОпределитьИмяТаблицыОбъекта() + "
	|
	|ГДЕ
	|	НЕ " + ОпределитьИмяТаблицыОбъекта() + ".ЭтоГруппа
	|";
	
	Если ОпределитьИмяТаблицыОбъекта() = "КонтактныеЛица" Тогда
	
		Запрос.Текст = Запрос.Текст + "
		|И
		|	" + ОпределитьИмяТаблицыОбъекта() + ".ВидКонтактногоЛица = &ВидКонтактногоЛица
		|";
		
		Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" Тогда
			Запрос.УстановитьПараметр("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента);
		ИначеЕсли ТипОбъекта = "ЛичныеКонтакты" Тогда
			Запрос.УстановитьПараметр("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт);
		Иначе
			Запрос.УстановитьПараметр("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.ПрочееКонтактноеЛицо);
		КонецЕсли; 
	
	КонецЕсли; 
	
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	
	НайденныйОбъект = Справочники[ОпределитьИмяТаблицыОбъекта()].ПустаяСсылка();

	Пока ВыборкаОбъектов.Следующий() Цикл
	
		Подходит = Истина;
		
		Для каждого СтрокаТаблицы Из ТаблицаНастройкиПоискаОбъектов Цикл // Проверим значения реквизитов

			СтрокаСИменемПоля = НастройкаПолей.Найти(СтрокаТаблицы.ЗначениеФайла, "ИмяРеквизита");
			Если СтрокаСИменемПоля = Неопределено Тогда
				Продолжить;
			КонецЕсли; 
			
			ИндПоля = СтрокаСИменемПоля.ИндПоля;
			
			Если СтрокаТаблицы.Использование И СтрокаТаблицы.ТипРеквизита1С = "Строка" Тогда

				Если ТипОбъекта = "ФизическиеЛица" И (СтрокаТаблицы.ИмяРеквизита1С = "Фамилия" ИЛИ СтрокаТаблицы.ИмяРеквизита1С = "Имя" ИЛИ СтрокаТаблицы.ИмяРеквизита1С = "Отчество") Тогда

					ВыборкаОбъекта = РезультатЗапросаФИО.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Объект");
					СтруктураПоиска = Новый Структура("Объект", ВыборкаОбъектов.Ссылка);
					Если ВыборкаОбъекта.НайтиСледующий(СтруктураПоиска) Тогда

						СтрокаСИменемПоля = НастройкаПолей.Найти(СтрокаТаблицы.ИмяРеквизита1С, "НазначениеРеквизита1С");
						Если СтрокаСИменемПоля <> Неопределено Тогда
							
							ИндПоля = СтрокаСИменемПоля.ИндПоля;
							
							ВыборкаКонечных = ВыборкаОбъекта.Выбрать();
							СтруктураПоиска = Новый Структура(СтрокаТаблицы.ИмяРеквизита1С, СтрокаФайла[ИндПоля]);
							Если ВыборкаКонечных.НайтиСледующий(СтруктураПоиска) Тогда
								Если СтрокаТаблицы.Условие = "<>" Тогда
									Подходит = Ложь;
								КонецЕсли;
							Иначе
								Если СтрокаТаблицы.Условие = "=" Тогда
									Подходит = Ложь;
								КонецЕсли;
							КонецЕсли;

						Иначе
							Подходит = Ложь;
							Прервать;
						КонецЕсли;

					Иначе
						Подходит = Ложь;
					КонецЕсли; 
					
				Иначе

					Значение1С = ВыборкаОбъектов[СтрокаТаблицы.ИмяРеквизита1С];
					ЗначениеФайла = СтрокаФайла[ИндПоля];
					СообщениеОшибки = Неопределено;
					ПривестиОбъектыКОдномуВиду(Значение1С, ЗначениеФайла, СообщениеОшибки);
					Если СообщениеОшибки <> Неопределено Тогда
						Сообщить("Установлено несоответствие типов полей. 1С - " + СокрЛП(СтрокаТаблицы.ИмяРеквизита1С) + ", файл - " + СокрЛП(СтрокаСИменемПоля.ИмяРеквизита));
						Сообщить("" + СообщениеОшибки);
						Возврат НайденныйОбъект;
					КонецЕсли; 
					Если СтрокаТаблицы.Условие = "=" Тогда
						Если Значение1С <> ЗначениеФайла Тогда
							Подходит = Ложь;
							Прервать;
						КонецЕсли; 
					Иначе
						Если Значение1С = ЗначениеФайла Тогда
							Подходит = Ложь;
							Прервать;
						КонецЕсли; 
					КонецЕсли; 
				
				КонецЕсли; 
				
			КонецЕсли;
			
		КонецЦикла;

		Если Подходит И ТипЗнч(РезультатЗапроса) = Тип("РезультатЗапроса") Тогда //Проверим контактную информацию

			ВыборкаОбъекта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Объект");
			СтруктураПоиска = Новый Структура("Объект", ВыборкаОбъектов.Ссылка);
			Если ВыборкаОбъекта.НайтиСледующий(СтруктураПоиска) Тогда
				Для каждого ВидКИ Из СписокСравненияКИ Цикл
					ВыборкаВКИ = ВыборкаОбъекта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Вид");
					СтруктураПоиска = Новый Структура("Вид", ВидКИ.Значение);
					Если ВыборкаВКИ.НайтиСледующий(СтруктураПоиска) Тогда

						СтрокаСИменемПоля = НастройкаПолей.Найти(ВидКИ.Значение, "НазначениеРеквизита1С");
						Если СтрокаСИменемПоля = Неопределено Тогда
							Подходит = Ложь;
							Прервать;
						КонецЕсли;

						ИндПоля = СтрокаСИменемПоля.ИндПоля;
						
						ВыборкаКонечных = ВыборкаВКИ.Выбрать();
						СтруктураПоиска = Новый Структура("Представление", СтрокаФайла[ИндПоля]);
						Если ВыборкаКонечных.НайтиСледующий(СтруктураПоиска) Тогда
							Если ВидКИ.Представление = "<>" Тогда
								Подходит = Ложь;
								Прервать;
							КонецЕсли;
						Иначе
							Если ВидКИ.Представление = "=" Тогда
								Подходит = Ложь;
								Прервать;
							КонецЕсли;
						КонецЕсли;
					Иначе
						Подходит = Ложь;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Подходит = Ложь;
			КонецЕсли; 
		
		КонецЕсли; 

		Если Подходит Тогда
			НайденныйОбъект = ВыборкаОбъектов.Ссылка;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;

	Возврат НайденныйОбъект;

КонецФункции // НайтиОбъект()

// Процедура проверяет и устанавливает сохраненный порядок строк таблицы полей.
//
Процедура ПроверитьПорядокСтрок(ТаблицаСохряняемыхСоответствий, ТаблицаОбъекта)

	СписокСохраненныхСтрок = Новый СписокЗначений;
	
	Для каждого СтрокаТаблицы Из ТаблицаСохряняемыхСоответствий Цикл
	
		СтрокаНастройкаПолей = ТаблицаОбъекта.Найти(СтрокаТаблицы.ИмяРеквизита, "ИмяРеквизита");
		
		Если СтрокаНастройкаПолей = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		СписокСохраненныхСтрок.Добавить(СтрокаНастройкаПолей);
	
	КонецЦикла;

	Для каждого ЭлементСписка Из СписокСохраненныхСтрок Цикл

		НужнаяСтрока = Неопределено;
		КолВоНайденныхСтрок = 0;
		КолВоСтрокСдвига = 0;
		НомерНужнойСтроки = СписокСохраненныхСтрок.Индекс(ЭлементСписка) + 1;
		УстановилиСтроку = Ложь;

		Для каждого СтрокаТаблицы Из ТаблицаОбъекта Цикл
		
			Если СписокСохраненныхСтрок.НайтиПоЗначению(СтрокаТаблицы) <> Неопределено Тогда
				КолВоНайденныхСтрок = КолВоНайденныхСтрок + 1;
			КонецЕсли;

			Если СтрокаТаблицы = ЭлементСписка.Значение Тогда
				Если КолВоНайденныхСтрок <> НомерНужнойСтроки Тогда
					ТаблицаОбъекта.Сдвинуть(ЭлементСписка.Значение, (-1 * КолВоСтрокСдвига));
				КонецЕсли; 
				УстановилиСтроку = Истина;
			КонецЕсли; 

			Если УстановилиСтроку Тогда
				Прервать;
			КонецЕсли;

			Если КолВоНайденныхСтрок >= НомерНужнойСтроки Тогда
				КолВоСтрокСдвига = КолВоСтрокСдвига + 1;
			КонецЕсли; 
		
		КонецЦикла; 
		
	
	КонецЦикла; 

КонецПроцедуры

// Процедура восстанавливает данные, сохраненные пользователем в предыдущем сеанае работы.
//
Процедура ПроставитьСохраненныеСоответствия()

	ЗначениеВосстановления = ВосстановитьЗначение("СоответствиеПараметровЗагрузка" + СокрЛП(ТипОбъекта) + СокрЛП(НаименованиеПрограммы));

	Если ЗначениеВосстановления <> Неопределено И ТипЗнч(ЗначениеВосстановления) = Тип("Структура") Тогда

		ТаблицаСохряняемыхСоответствий = Неопределено;
		
		ЗначениеВосстановления.Свойство("ТаблицаПолей", ТаблицаСохряняемыхСоответствий);

		Если ТаблицаСохряняемыхСоответствий <> Неопределено И ТипЗнч(ТаблицаСохряняемыхСоответствий) = Тип("ТаблицаЗначений") Тогда

			мФормаИндикации.КомментарийОбработкиДанных = "Выполняется восстановление сохраненных значений ...";
			мФормаИндикации.МаксимальноеЗначение = ТаблицаСохряняемыхСоответствий.Количество();
			мФормаИндикации.Значение = 0;
			мФормаИндикации.Открыть();
				
			Для каждого СтрокаТаблицы Из ТаблицаСохряняемыхСоответствий Цикл

				мФормаИндикации.Значение = ТаблицаСохряняемыхСоответствий.Индекс(СтрокаТаблицы) + 1;
				
				СтрокаНастройкаПолей = НастройкаПолей.Найти(СтрокаТаблицы.ИмяРеквизита, "ИмяРеквизита");
				
				Если СтрокаНастройкаПолей = Неопределено Тогда
				
					Продолжить;
				
				КонецЕсли; 

				Если СтрокаТаблицы.Тип = "Строка" Тогда

					СтрокаСписка = мСписокРеквизитовОбъекта.НайтиПоЗначению(СтрокаТаблицы.НазначениеРеквизита1С);

					Если СтрокаСписка <> Неопределено Тогда
					
						СтрокаНастройкаПолей.НазначениеРеквизита1С = СтрокаСписка.Представление;
						СтрокаНастройкаПолей.Использование = Истина;
					
					КонецЕсли; 

				ИначеЕсли СтрокаТаблицы.Тип = "ВидКИ" Тогда

					ПреобразованноеЗначение = ЗначениеИзСтрокиВнутр(СтрокаТаблицы.НазначениеРеквизита1С);

					Если ТипЗнч(ПреобразованноеЗначение) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") И ПреобразованноеЗначение.ПолучитьОбъект() <> Неопределено Тогда
					
						СтрокаНастройкаПолей.НазначениеРеквизита1С = ПреобразованноеЗначение;
						СтрокаНастройкаПолей.Использование = Истина;

					Иначе

						СтрокаНастройкаПолей.НазначениеРеквизита1С = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
					
					КонецЕсли; 
					
				КонецЕсли; 
			
			КонецЦикла;

			ПроверитьПорядокСтрок(ТаблицаСохряняемыхСоответствий, НастройкаПолей);
		
		КонецЕсли; 
		
		ТаблицаПредставленияНаименованияОбъекта = Неопределено;
		
		ЗначениеВосстановления.Свойство("ТаблицаПредставленияНаименования", ТаблицаПредставленияНаименованияОбъекта);

		Если ТаблицаПредставленияНаименованияОбъекта <> Неопределено И ТипЗнч(ТаблицаПредставленияНаименованияОбъекта) = Тип("ТаблицаЗначений") Тогда

			мФормаИндикации.КомментарийОбработкиДанных = "Выполняется восстановление сохраненных значений ...";
			мФормаИндикации.МаксимальноеЗначение = ТаблицаСохряняемыхСоответствий.Количество();
			мФормаИндикации.Значение = 0;
			мФормаИндикации.Открыть();
				
			Для каждого СтрокаТаблицы Из ТаблицаПредставленияНаименованияОбъекта Цикл

				мФормаИндикации.Значение = ТаблицаПредставленияНаименованияОбъекта.Индекс(СтрокаТаблицы) + 1;
				
				СтрокаНастройкаПолей = ПоляПредставленияНаименованияОбъектаПриЗагрузке.Найти(СтрокаТаблицы.ИмяРеквизита, "ИмяРеквизита");
				
				Если СтрокаНастройкаПолей = Неопределено Тогда
					Продолжить;
				КонецЕсли; 

				СтрокаНастройкаПолей.Использование = СтрокаТаблицы.Использование;
				
			КонецЦикла;

			ПроверитьПорядокСтрок(ТаблицаПредставленияНаименованияОбъекта, ПоляПредставленияНаименованияОбъектаПриЗагрузке);
		
		КонецЕсли; 
		
		СохраненннаяТаблицаНастройкиПоискаОбъектов = Неопределено;
		
		ЗначениеВосстановления.Свойство("ПоискОбъектов", СохраненннаяТаблицаНастройкиПоискаОбъектов);

		Если СохраненннаяТаблицаНастройкиПоискаОбъектов <> Неопределено
			И ТипЗнч(СохраненннаяТаблицаНастройкиПоискаОбъектов) = Тип("ТаблицаЗначений")
			И СохраненннаяТаблицаНастройкиПоискаОбъектов.Количество() > 0 Тогда

			мФормаИндикации.КомментарийОбработкиДанных = "Выполняется восстановление сохраненных значений ...";
			мФормаИндикации.МаксимальноеЗначение = ТаблицаСохряняемыхСоответствий.Количество();
			мФормаИндикации.Значение = 0;
			мФормаИндикации.Открыть();
			
			Для каждого СтрокаТаблицы Из СохраненннаяТаблицаНастройкиПоискаОбъектов Цикл

				мФормаИндикации.Значение = СохраненннаяТаблицаНастройкиПоискаОбъектов.Индекс(СтрокаТаблицы) + 1;
				
				СтрокаТаблицаНастройкиПоискаОбъектов = ТаблицаНастройкиПоискаОбъектов.Найти(СтрокаТаблицы.Значение1С, "Значение1С");

				Если СтрокаТаблицаНастройкиПоискаОбъектов <> Неопределено Тогда
				
					Если СтрокаТаблицы.ТипРеквизита1С = "Строка" Тогда
						Если НастройкаПолей.Найти(СтрокаТаблицы.ЗначениеФайла, "ИмяРеквизита") <> Неопределено Тогда
							СтрокаТаблицаНастройкиПоискаОбъектов.ЗначениеФайла = СтрокаТаблицы.ЗначениеФайла;
							СтрокаТаблицаНастройкиПоискаОбъектов.Условие = СтрокаТаблицы.Условие;
							СтрокаТаблицаНастройкиПоискаОбъектов.Использование = Истина;
						КонецЕсли; 
					ИначеЕсли СтрокаТаблицы.ТипРеквизита1С = "ВидКИ" Тогда
						Если ТипЗнч(СтрокаТаблицы.Объект1С) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") И НЕ СтрокаТаблицы.Объект1С.Пустая() И СтрокаТаблицы.Объект1С.ПолучитьОбъект() <> Неопределено Тогда
							СтрокаТаблицаНастройкиПоискаОбъектов.ЗначениеФайла = СтрокаТаблицы.ЗначениеФайла;
							СтрокаТаблицаНастройкиПоискаОбъектов.Объект1С = СтрокаТаблицы.Объект1С;
							СтрокаТаблицаНастройкиПоискаОбъектов.Условие = СтрокаТаблицы.Условие;
							СтрокаТаблицаНастройкиПоискаОбъектов.Использование = Истина;
						КонецЕсли; 
					КонецЕсли; 
				
				КонецЕсли; 
			
			КонецЦикла; 

		КонецЕсли; 

	КонецЕсли; 

КонецПроцедуры

// Процедура заполняет данными таблицу поиска объектов.
//
Процедура ЗаполнитьТаблицуПоискаОбъектов()

	ТаблицаНастройкиПоискаОбъектов.Очистить();

	Если ТипОбъекта = "Контрагенты" Тогда
	
		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "Наименование";
		НоваяСтрока.Значение1С     = "Наименование";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "НаименованиеПолное";
		НоваяСтрока.Значение1С     = "Полное наименование";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "ИНН";
		НоваяСтрока.Значение1С     = "ИНН";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";
		
		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НоваяСтрока.Значение1С     = "E-mail";
		НоваяСтрока.ТипРеквизита1С = "ВидКИ";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";
		НоваяСтрока.Объект1С       = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
		
	ИначеЕсли ОпределитьИмяТаблицыОбъекта() = "КонтактныеЛица" Тогда

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "Владелец";
		НоваяСтрока.Значение1С     = "Контрагент (наименование)";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "Фамилия";
		НоваяСтрока.Значение1С     = "Фамилия";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "Имя";
		НоваяСтрока.Значение1С     = "Имя";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "Отчество";
		НоваяСтрока.Значение1С     = "Отчество";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "ДатаРождения";
		НоваяСтрока.Значение1С     = "Дата рождения";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";
		
		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НоваяСтрока.Значение1С     = "E-mail";
		НоваяСтрока.ТипРеквизита1С = "ВидКИ";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";
		НоваяСтрока.Объект1С       = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();

	ИначеЕсли ТипОбъекта = "ФизическиеЛица" Тогда

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "Фамилия";
		НоваяСтрока.Значение1С     = "Фамилия";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "Имя";
		НоваяСтрока.Значение1С     = "Имя";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "Отчество";
		НоваяСтрока.Значение1С     = "Отчество";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "ДатаРождения";
		НоваяСтрока.Значение1С     = "Дата рождения";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "ИНН";
		НоваяСтрока.Значение1С     = "ИНН";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";

		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = "КодИМНС";
		НоваяСтрока.Значение1С     = "Код ИМНС";
		НоваяСтрока.ТипРеквизита1С = "Строка";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";
		
		НоваяСтрока = ТаблицаНастройкиПоискаОбъектов.Добавить();
		НоваяСтрока.ИмяРеквизита1С = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НоваяСтрока.Значение1С     = "E-mail";
		НоваяСтрока.ТипРеквизита1С = "ВидКИ";
		НоваяСтрока.ЗначениеФайла  = "";
		НоваяСтрока.Условие        = "=";
		НоваяСтрока.Объект1С       = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();

	КонецЕсли; 

КонецПроцедуры

// Процедура открывает форму с текстовой информацией из файла загрузки.
//
Процедура ПоказатьИнформациюИзФайла()

	Элемент = Элементыформы.НастройкаЗагрузкиЗначений;
	Колонка = Элементыформы.НастройкаЗагрузкиЗначений.ТекущаяКолонка;

	Если Элемент.ТекущиеДанные <> Неопределено Тогда
	
		СтрокаПоказа = "";

		НайденнаяСтрокаФайла = ТаблицаДанныхФайла.Найти(Элемент.ТекущиеДанные.НомерСтрокиФайла, "НомерСтрокиФайла");
		Если НайденнаяСтрокаФайла <> Неопределено Тогда

			Для каждого СтрокаТаблицы Из НастройкаПолей Цикл
			
				Если НЕ СтрокаТаблицы.Использование Тогда
					Продолжить;
				КонецЕсли;

				Если СтрЧислоВхождений(СтрокаТаблицы.ИндПоля,";") = 0 Тогда
					СтрокаПоказа = СтрокаПоказа + Символы.ПС + СокрЛП(СтрокаТаблицы.ИмяРеквизита) + ": " + СокрЛП(НайденнаяСтрокаФайла[СтрокаТаблицы.ИндПоля]);
				Иначе
					СтрокаПоказа = СтрокаПоказа + Символы.ПС + СокрЛП(СтрокаТаблицы.ИмяРеквизита) + ":";
					СписокИменПолейФайла = ИзСтрокиСРазделителями(СтрокаТаблицы.ИндПоля, ";", ложь, Истина);
					Для каждого ЭлементСписка Из СписокИменПолейФайла Цикл
						СтрокаПоказа = СтрокаПоказа + " " + СокрЛП(НайденнаяСтрокаФайла[ЭлементСписка.Значение]);
					КонецЦикла; 
				КонецЕсли; 
			
			КонецЦикла;
			
		КонецЕсли;

		ФормаИнформацииСтроки = ОбработкаОбъект.ПолучитьФорму("ФормаПросмотраИнформацииСтрокиФайла", ЭтаФорма, Элемент.ТекущиеДанные.НомерСтрокиФайла);
		ФормаИнформацииСтроки.СтрокаПоказа = СтрокаПоказа;
		ФормаИнформацииСтроки.Открыть();
	
	КонецЕсли;

КонецПроцедуры

// Процедура проставляет значения по умлочанию для формирования наименования нового объекта
//
Процедура ПроставитьЗначенияПолейФормированияНаименованияПоУмолчанию()

	Если ПоляПредставленияНаименованияОбъектаПриЗагрузке.Найти(Истина, "Использование") = Неопределено Тогда
		Для каждого СтрокаТаблицы Из ПоляПредставленияНаименованияОбъектаПриЗагрузке Цикл
			Если ВРег(СтрокаТаблицы.ИмяРеквизита) = "ФАМИЛИЯ" Тогда
				СтрокаТаблицы.Использование = Истина;
			КонецЕсли; 
			Если ВРег(СтрокаТаблицы.ИмяРеквизита) = "ИМЯ" Тогда
				СтрокаТаблицы.Использование = Истина;
			КонецЕсли; 
			Если ВРег(СтрокаТаблицы.ИмяРеквизита) = "ОТЧЕСТВО" Тогда
				СтрокаТаблицы.Использование = Истина;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события формы ПриОткрытии.
//
Процедура ПриОткрытии()

	ЗаполнитьТаблицуПоискаОбъектов();

	ПроставитьСохраненныеСоответствия();
	
	ПроставитьЗначенияПолейФормированияНаименованияПоУмолчанию();
	
	ДоступностьКнопокНижнейПанели();

	Если мФормаИндикации.Открыта() Тогда
		мФормаИндикации.Закрыть();
	КонецЕсли;
	
	// Установим доступность поля ввода для указания родителя создания новых элементов
	ПустаяСсылка = Новый("СправочникСсылка." + ОпределитьИмяТаблицыОбъекта());
	ЭлементыФормы.РодительДляЗагрузки.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка." + ОпределитьИмяТаблицыОбъекта());
	ЭлементыФормы.РодительДляЗагрузки.Значение        = ПустаяСсылка;
	ЭлементыФормы.РодительДляЗагрузки.ВыбиратьТип     = Ложь;
	Если ПустаяСсылка.Метаданные().Владельцы.Количество() > 0 ИЛИ НЕ ПустаяСсылка.Метаданные().Иерархический Тогда
		ЭлементыФормы.РодительДляЗагрузки.Доступность        = Ложь;
		ЭлементыФормы.НадписьРодительДляЗагрузки.Доступность = Ложь;
	Иначе
		ЭлементыФормы.РодительДляЗагрузки.Доступность        = Истина;
		ЭлементыФормы.НадписьРодительДляЗагрузки.Доступность = Истина;
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события формы ПриЗакрытии.
//
Процедура ПриЗакрытии()
	
	Если СохранятьСоответствиеПараметров Тогда
	
		ТаблицаСохряняемыхСоответствий = Новый ТаблицаЗначений;
		ТаблицаСохряняемыхСоответствий.Колонки.Добавить("ИмяРеквизита");
		ТаблицаСохряняемыхСоответствий.Колонки.Добавить("Тип");
		ТаблицаСохряняемыхСоответствий.Колонки.Добавить("НазначениеРеквизита1С");

		мФормаИндикации.КомментарийОбработкиДанных = "Сохраняются параметры ...";
		мФормаИндикации.МаксимальноеЗначение = НастройкаПолей.Количество();
		мФормаИндикации.Значение = 0;
		мФормаИндикации.Открыть();

		Для каждого СтрокаПараметров Из НастройкаПолей Цикл
		
			мФормаИндикации.Значение = НастройкаПолей.Индекс(СтрокаПараметров) + 1;
			
			Если (ТипЗнч(СтрокаПараметров.НазначениеРеквизита1С) = Тип("Строка") И ПустаяСтрока(СтрокаПараметров.НазначениеРеквизита1С))
				 ИЛИ (ТипЗнч(СтрокаПараметров.НазначениеРеквизита1С) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") И СтрокаПараметров.НазначениеРеквизита1С.Пустая()) Тогда
			
				Продолжить;
				
			КонецЕсли;

			СтрокаСохранения = ТаблицаСохряняемыхСоответствий.Добавить();

			СтрокаСохранения.ИмяРеквизита = СтрокаПараметров.ИмяРеквизита;
			СтрокаСохранения.Тип = ?(ТипЗнч(СтрокаПараметров.НазначениеРеквизита1С) = Тип("Строка"),"Строка","ВидКИ");
			Если ТипЗнч(СтрокаПараметров.НазначениеРеквизита1С) = Тип("Строка") Тогда

				ЗначениеНазначениеРеквизита1С = "";
				Для каждого ЭлементСписка Из мСписокРеквизитовОбъекта Цикл
				
					Если ЭлементСписка.Представление = СтрокаПараметров.НазначениеРеквизита1С Тогда
					
						ЗначениеНазначениеРеквизита1С = ЭлементСписка.Значение;
						Прервать;
					
					КонецЕсли; 
				
				КонецЦикла; 
				
			Иначе
				
				ЗначениеНазначениеРеквизита1С = ЗначениеВСтрокуВнутр(СтрокаПараметров.НазначениеРеквизита1С);
				
			КонецЕсли; 
			СтрокаСохранения.НазначениеРеквизита1С = ЗначениеНазначениеРеквизита1С;
		
		КонецЦикла;

		СтруктураПараметров = Новый Структура("ТаблицаПолей, ПоискОбъектов, ТаблицаПредставленияНаименования", ТаблицаСохряняемыхСоответствий, ТаблицаНастройкиПоискаОбъектов.Выгрузить(), ПоляПредставленияНаименованияОбъектаПриЗагрузке.Выгрузить());
		СохранитьЗначение(("СоответствиеПараметровЗагрузка" + СокрЛП(ТипОбъекта) + СокрЛП(НаименованиеПрограммы)),СтруктураПараметров);
	
	КонецЕсли;

	Если мФормаИндикации.Открыта() Тогда
		мФормаИндикации.Закрыть();
	КонецЕсли;
	
	ПоляПредставленияНаименованияОбъектаПриЗагрузке.Очистить();
	НастройкаПолей.Очистить();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события Нажатие элемента формы ОсновныеДействияФормы.Готово.
//
Процедура ОсновныеДействияФормыГотово(Элемент)

	Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" И НЕ ПроверитьНаличиеВладельца() Тогда
		Предупреждение("Укажите у всех загружаемых строк контрагента.
		               |           Загрузка не выполнена.");
		Возврат;
	ИначеЕсли ТипОбъекта = "Контрагенты" И НЕ ПроверитьНаличиеЮрФизЛица() Тогда
		Предупреждение("Укажите у всех загружаемых строк признак Юр/Физ лица.
		               |           Загрузка не выполнена.");
		Возврат;
	КонецЕсли;
	
	ЗаписатьЗагружаемуюИнформацию(РодительДляЗагрузки);
	
	Если мФормаИндикации.Открыта() Тогда
		мФормаИндикации.Закрыть();
	КонецЕсли; 
	Закрыть();
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы ОсновныеДействияФормы.Далее.
//
Процедура ОсновныеДействияФормыДалее(Кнопка)
	
	ПредыдущаяСтраница = ЭлементыФормы.ПанельВыполненияЗагрузки.ТекущаяСтраница;
	ЭлементыФормы.ПанельВыполненияЗагрузки.ТекущаяСтраница = ЭлементыФормы.ПанельВыполненияЗагрузки.Страницы[Мин(ЭлементыФормы.ПанельВыполненияЗагрузки.Страницы.Индекс(ПредыдущаяСтраница)+1, ЭлементыФормы.ПанельВыполненияЗагрузки.Страницы.Количество()-1)];
	Если ЭлементыФормы.ПанельВыполненияЗагрузки.ТекущаяСтраница.Имя = "НастройкаПоискаОбъектов" Тогда
		СкорректироватьСоответствияПоиска();
	ИначеЕсли ЭлементыФормы.ПанельВыполненияЗагрузки.ТекущаяСтраница.Имя = "НастройкаЗагрузкиЗначений" Тогда
		СформироватьТаблицуНастройкиЗагрузкиЗначений();
	КонецЕсли;
	ДоступностьКнопокНижнейПанели();
	Если мФормаИндикации.Открыта() Тогда
		мФормаИндикации.Закрыть();
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы ОсновныеДействияФормы.Назад.
//
Процедура ОсновныеДействияФормыНазад(Кнопка)
	
	ПредыдущаяСтраница = ЭлементыФормы.ПанельВыполненияЗагрузки.ТекущаяСтраница;
	ЭлементыФормы.ПанельВыполненияЗагрузки.ТекущаяСтраница = ЭлементыФормы.ПанельВыполненияЗагрузки.Страницы[Макс(ЭлементыФормы.ПанельВыполненияЗагрузки.Страницы.Индекс(ПредыдущаяСтраница)-1, 0)];
	ДоступностьКнопокНижнейПанели();
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельТаблицаНастройкиПоискаОбъектов.УстановитьФлажки.
//
Процедура КоманднаяПанельТаблицаНастройкиПоискаОбъектовУстановитьФлажки(Кнопка)

	Для каждого СтрокаТаблицы Из ТаблицаНастройкиПоискаОбъектов Цикл
		СтрокаТаблицы.Использование = Истина;
	КонецЦикла; 
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельТаблицаНастройкиПоискаОбъектов.СнятьФлажки.
//
Процедура КоманднаяПанельТаблицаНастройкиПоискаОбъектовСнятьФлажки(Кнопка)

	Для каждого СтрокаТаблицы Из ТаблицаНастройкиПоискаОбъектов Цикл
		СтрокаТаблицы.Использование = Ложь;
	КонецЦикла; 
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельНастройкаЗагрузкиЗначений.УстановитьФлажки.
//
Процедура КоманднаяПанельНастройкаЗагрузкиЗначенийУстановитьФлажки(Кнопка)

	Для каждого СтрокаТаблицы Из НастройкаЗагрузкиЗначений Цикл
		СтрокаТаблицы.Использование = Истина;
	КонецЦикла; 
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельНастройкаЗагрузкиЗначений.СнятьФлажки.
//
Процедура КоманднаяПанельНастройкаЗагрузкиЗначенийСнятьФлажки(Кнопка)

	Для каждого СтрокаТаблицы Из НастройкаЗагрузкиЗначений Цикл
		СтрокаТаблицы.Использование = Ложь;
	КонецЦикла; 
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельНастройкаЗагрузкиЗначений.ПосмотретьИнформациюИзФайлаПоТекущейСтроке.
//
Процедура КоманднаяПанельНастройкаЗагрузкиЗначенийПосмотретьИнформациюИзФайлаПоТекущейСтроке(Кнопка)
	
	ПоказатьИнформациюИзФайла();

КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанель.НастройкаПолейНастройкаФормированияНаименованияОбъекта.
//
Процедура КоманднаяПанельНастройкаПолейНастройкаФормированияНаименованияОбъекта(Кнопка)
	
	ЭтотОбъект.ПолучитьФорму("ФормаНастройкиПолейНаименованияОбъектаПриЗагрузке").ОткрытьМодально();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события Очистка элемента формы НастройкаПолейНазначениеРеквизита1С.
//
Процедура НастройкаПолейНазначениеРеквизита1СОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
		Элемент.Значение = "";
	ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		Элемент.Значение = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	КонецЕсли; 

	ПроверкаСостоянияФлажка();
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы НастройкаПолейНазначениеРеквизита1С.
//
Процедура НастройкаПолейНазначениеРеквизита1СНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда

		ВыбранныйЭлементСписка = Неопределено;
		
		Если НЕ ПустаяСтрока(Элемент.Значение) Тогда
		
			Для каждого ЭлементСписка Из мСписокРеквизитовОбъекта Цикл
			
				Если ЭлементСписка.Представление = Элемент.Значение Тогда
				
					ВыбранныйЭлементСписка = ЭлементСписка;
					Прервать;
				
				КонецЕсли; 
			
			КонецЦикла; 
		
		КонецЕсли; 
		
		ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(мСписокРеквизитовОбъекта,, ЭлементСписка);

		Если ВыбранныйЭлемент <> Неопределено Тогда
		
			Элемент.Значение = ВыбранныйЭлемент.Представление;
		
		КонецЕсли; 

	ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда

		СправочникВидовКИ = Справочники.ВидыКонтактнойИнформации.ПолучитьФорму("ФормаВыбора");
		СправочникВидовКИ.РежимВыбора = Истина;
		СправочникВидовКИ.Отбор.ВидОбъектаКонтактнойИнформации.Значение = Перечисления.ВидыОбъектовКонтактнойИнформации[ОпределитьИмяТаблицыОбъекта()];
		СправочникВидовКИ.Отбор.ВидОбъектаКонтактнойИнформации.Использование = Истина;
		СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ВидОбъектаКонтактнойИнформации.Доступность = Ложь;

		Если ЭлементыФормы.НастройкаПолей.ТекущиеДанные = Неопределено Тогда
			ИмяПоляСтрокиТаблицы = "";
		Иначе
			ИмяПоляСтрокиТаблицы = ЭлементыФормы.НастройкаПолей.ТекущиеДанные.ИмяРеквизита;
		КонецЕсли; 
		
		Если СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Рабочий адрес")) > 0
			 ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Домашний адрес")) > 0
			 ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Другой адрес")) > 0 Тогда

			СправочникВидовКИ.Отбор.Тип.ВидСравнения                                         = ВидСравнения.Равно;
			СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.Адрес;
			СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
			СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;

		ИначеЕсли СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Телефон")) > 0
			      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("факс")) > 0
			      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("мобильный")) > 0
			      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Mobile")) > 0
			      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Phone")) > 0
			      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Fax")) > 0 Тогда

			СправочникВидовКИ.Отбор.Тип.ВидСравнения                                         = ВидСравнения.Равно;
			СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.Телефон;
			СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
			СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;
			
		ИначеЕсли СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Web")) > 0
			      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Homepage")) > 0
			      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("WWW")) > 0
			      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("веб-страница")) > 0 Тогда

			СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
			СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
			СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;
			
		ИначеЕсли (СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Адрес")) > 0
			      И СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("эл. почты")) > 0)
				  ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Электронная почта")) > 0
				  ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("E-mail")) > 0 Тогда

			СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
			СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
			СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;
			
		ИначеЕсли СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("пейджер")) > 0
			  ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Pager")) > 0 Тогда

			СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.Другое;
			СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
			СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;
			
		КонецЕсли; 

		ВыбранноеЗначение = СправочникВидовКИ.ОткрытьМодально();

		Если ВыбранноеЗначение <> Неопределено Тогда
		
			Элемент.Значение = ВыбранноеЗначение;
		
		КонецЕсли; 
	
	КонецЕсли; 

	ПроверкаСостоянияФлажка();
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы НастройкаЗагрузкиЗначенийОбъект1С.
//
Процедура НастройкаЗагрузкиЗначенийОбъект1СНачалоВыбора(Элемент, СтандартнаяОбработка)

	Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" Тогда

		Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		НачалоВыбораКонтактногоЛицаКонтрагента(Элемент, СтандартнаяОбработка, ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец);
		
	ИначеЕсли ТипОбъекта = "ПрочиеКонтактныеЛица" Тогда

		Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		НачалоВыбораПрочегоКонтактногоЛица(Элемент, СтандартнаяОбработка, ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец);
		
	Иначе
		
		НачалоВыбораЛичныхКонтактов(Элемент, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПриСменеСтраницы элемента формы ПанельВыполненияЗагрузки.
//
Процедура ПанельВыполненияЗагрузкиПриСменеСтраницы(Элемент, ТекущаяСтраница)

	ДоступностьКнопокНижнейПанели();
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы НастройкаПолей.
//
Процедура НастройкаПолейПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы НастройкаПолей.
//
Процедура НастройкаПолейПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы ТаблицаНастройкиПоискаОбъектов.
//
Процедура ТаблицаНастройкиПоискаОбъектовПередУдалением(Элемент, Отказ)
	
	Отказ =Истина;
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы ТаблицаНастройкиПоискаОбъектов.
//
Процедура ТаблицаНастройкиПоискаОбъектовПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ =Истина;
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ТаблицаНастройкиПоискаОбъектовЗначениеФайла.
//
Процедура ТаблицаНастройкиПоискаОбъектовЗначениеФайлаНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 

	Если ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.ТипРеквизита1С = "Строка" Тогда

		СписокВыбора = Новый СписокЗначений;

		Для каждого СтрокаТаблицы Из НастройкаПолей Цикл
		
			Если СтрокаТаблицы.ТипРеквизита1С = "Строка" Тогда
			
				СписокВыбора.Добавить(СтрокаТаблицы.ИмяРеквизита);
			
			КонецЕсли; 
		
		КонецЦикла;

		Если НЕ ПустаяСтрока(Элемент.Значение) Тогда
			ТекущийЭлементСписка = СписокВыбора.НайтиПоЗначению(Элемент.Значение);
		КонецЕсли; 

		ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент("Выберите поле файла загрузки", ТекущийЭлементСписка);

		Если ВыбранныйЭлемент <> Неопределено Тогда
		
			Элемент.Значение = ВыбранныйЭлемент.Значение;
		
		КонецЕсли; 
		
	ИначеЕсли ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.ТипРеквизита1С = "ВидКИ" Тогда

		СписокВыбора = Новый СписокЗначений;

		Для каждого СтрокаТаблицы Из НастройкаПолей Цикл

			Если НЕ СтрокаТаблицы.Использование Тогда
				Продолжить;
			КонецЕсли; 
		
			Если ТипЗнч(СтрокаТаблицы.НазначениеРеквизита1С) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") И НЕ СтрокаТаблицы.НазначениеРеквизита1С.Пустая() И СтрокаТаблицы.НазначениеРеквизита1С.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
				СписокВыбора.Добавить(СтрокаТаблицы.НазначениеРеквизита1С, СтрокаТаблицы.ИмяРеквизита);
			КонецЕсли;
		
		КонецЦикла;

		Если СписокВыбора.Количество() = 0 Тогда
		
			Предупреждение("В таблице настройки соответствия полей необходимо указать реквизит 1С типа ""Адрес электронной почты"".");
			Возврат;
		
		КонецЕсли;

		Если НЕ ПустаяСтрока(Элемент.Значение) Тогда
			ТекущийЭлементСписка = СписокВыбора.НайтиПоЗначению(Элемент.Значение);
		КонецЕсли; 

		ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент("Выберите поле файла загрузки", ТекущийЭлементСписка);

		Если ВыбранныйЭлемент <> Неопределено Тогда
		
			Элемент.Значение = ВыбранныйЭлемент.Представление;
			ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Объект1С = ВыбранныйЭлемент.Значение;
		
		КонецЕсли; 
		
	КонецЕсли;
	
	Если ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.ТипРеквизита1С = "Строка" Тогда
		ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Использование = НЕ ПустаяСтрока(Элемент.Значение);
	ИначеЕсли ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.ТипРеквизита1С = "ВидКИ" Тогда
		ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Использование = НЕ ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Объект1С.Пустая();
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Очистка элемента формы ТаблицаНастройкиПоискаОбъектовЗначениеФайла.
//
Процедура ТаблицаНастройкиПоискаОбъектовЗначениеФайлаОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.ТипРеквизита1С = "Строка" Тогда
		Элемент.Значение = "";
	Иначе
		Элемент.Значение = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	КонецЕсли; 

	Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
		ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Использование = НЕ ПустаяСтрока(Элемент.Значение);
	ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Использование = НЕ Элемент.Значение.Пустая();
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы НастройкаЗагрузкиЗначений.
//
Процедура НастройкаЗагрузкиЗначенийПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы НастройкаЗагрузкиЗначений.
//
Процедура НастройкаЗагрузкиЗначенийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события Выбор элемента формы НастройкаЗагрузкиЗначений.
//
Процедура НастройкаЗагрузкиЗначенийВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.Имя = "ПредставлениеОбъектаФайла" Тогда
	
		СтандартнаяОбработка = Ложь;
		ПоказатьИнформациюИзФайла();
	
	КонецЕсли; 

КонецПроцедуры

// Обработчик события ПриИзменении элемента формы НастройкаЗагрузкиЗначенийОбъект1С.
//
Процедура НастройкаЗагрузкиЗначенийОбъект1СПриИзменении(Элемент)

	Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные <> Неопределено Тогда
	
		Если ТипЗнч(Элемент.Значение) <> Тип("СправочникСсылка." + ОпределитьИмяТаблицыОбъекта()) Тогда
			Элемент.Значение = Справочники[ОпределитьИмяТаблицыОбъекта()].ПустаяСсылка()
		КонецЕсли;
		
		Если НЕ ЗначениеНеЗаполнено(Элемент.Значение) Тогда
			Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" ИЛИ ТипОбъекта = "ПрочиеКонтактныеЛица" Тогда
				Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец <> Элемент.Значение.ОбъектВладелец Тогда
					ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец = Элемент.Значение.ОбъектВладелец;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
		
		Если Элемент.Значение <> Неопределено И НЕ Элемент.Значение.Пустая() Тогда
			ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Использование = Истина;
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриИзмененииФлажка элемента формы НастройкаПолей.
//
Процедура НастройкаПолейПриИзмененииФлажка(Элемент, Колонка)

	Если Элемент.ТекущиеДанные <> Неопределено Тогда
	
		Если Элемент.ТекущиеДанные.Использование Тогда
		
			Если (ТипЗнч(Элемент.ТекущиеДанные.НазначениеРеквизита1С) = Тип("Строка") И ПустаяСтрока(Элемент.ТекущиеДанные.НазначениеРеквизита1С))
				 ИЛИ (ТипЗнч(Элемент.ТекущиеДанные.НазначениеРеквизита1С) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") И Элемент.ТекущиеДанные.НазначениеРеквизита1С.Пустая()) Тогда
			

				Если ТипЗнч(Элемент.ТекущиеДанные.НазначениеРеквизита1С) = Тип("Строка") Тогда

					ВыбранныйЭлементСписка = Неопределено;
					
					Если НЕ ПустаяСтрока(Элемент.ТекущиеДанные.НазначениеРеквизита1С) Тогда
					
						Для каждого ЭлементСписка Из мСписокРеквизитовОбъекта Цикл
						
							Если ЭлементСписка.Представление = Элемент.ТекущиеДанные.НазначениеРеквизита1С Тогда
							
								ВыбранныйЭлементСписка = ЭлементСписка;
								Прервать;
							
							КонецЕсли; 
						
						КонецЦикла; 
					
					КонецЕсли; 
					
					ВыбранныйЭлемент = мСписокРеквизитовОбъекта.ВыбратьЭлемент("Выберите реквизит 1С", ЭлементСписка);

					Если ВыбранныйЭлемент <> Неопределено Тогда
					
						Элемент.ТекущиеДанные.НазначениеРеквизита1С = ВыбранныйЭлемент.Представление;
					
					КонецЕсли; 

				ИначеЕсли ТипЗнч(Элемент.ТекущиеДанные.НазначениеРеквизита1С) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда

					СправочникВидовКИ = Справочники.ВидыКонтактнойИнформации.ПолучитьФорму("ФормаВыбора");
					СправочникВидовКИ.РежимВыбора = Истина;
					СправочникВидовКИ.Отбор.ВидОбъектаКонтактнойИнформации.Значение = Перечисления.ВидыОбъектовКонтактнойИнформации[ОпределитьИмяТаблицыОбъекта()];
					СправочникВидовКИ.Отбор.ВидОбъектаКонтактнойИнформации.Использование = Истина;
					СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ВидОбъектаКонтактнойИнформации.Доступность = Ложь;

					Если ЭлементыФормы.НастройкаПолей.ТекущиеДанные = Неопределено Тогда
						ИмяПоляСтрокиТаблицы = "";
					Иначе
						ИмяПоляСтрокиТаблицы = ЭлементыФормы.НастройкаПолей.ТекущиеДанные.ИмяРеквизита;
					КонецЕсли; 
					
					Если СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Рабочий адрес")) > 0
						 ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Домашний адрес")) > 0
						 ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Другой адрес")) > 0 Тогда

						СправочникВидовКИ.Отбор.Тип.ВидСравнения                                         = ВидСравнения.Равно;
						СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.Адрес;
						СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
						СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;

					ИначеЕсли СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Телефон")) > 0
						      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("факс")) > 0
						      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("мобильный")) > 0
						      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Mobile")) > 0
						      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Phone")) > 0
						      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Fax")) > 0 Тогда

						СправочникВидовКИ.Отбор.Тип.ВидСравнения                                         = ВидСравнения.Равно;
						СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.Телефон;
						СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
						СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;
						
					ИначеЕсли СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Web")) > 0
						      ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("веб-страница")) > 0
							  ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Homepage")) > 0
							  ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("WWW")) > 0 Тогда

						СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
						СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
						СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;
						
					ИначеЕсли (СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Адрес")) > 0
						      И СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("эл. почты")) > 0)
							  ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Электронная почта")) > 0
							  ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("e-mail")) > 0 Тогда

						СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
						СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
						СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;
						
					ИначеЕсли СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("пейджер")) > 0
						  ИЛИ СтрЧислоВхождений(ВРег(ИмяПоляСтрокиТаблицы), ВРег("Pager")) > 0 Тогда

						СправочникВидовКИ.Отбор.Тип.Значение                                             = Перечисления.ТипыКонтактнойИнформации.Другое;
						СправочникВидовКИ.Отбор.Тип.Использование                                        = Истина;
						СправочникВидовКИ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Тип.Доступность = Ложь;
						
					КонецЕсли; 

					ВыбранноеЗначение = СправочникВидовКИ.ОткрытьМодально();

					Если ВыбранноеЗначение <> Неопределено Тогда
					
						Элемент.ТекущиеДанные.НазначениеРеквизита1С = ВыбранноеЗначение;
					
					КонецЕсли; 
				
				КонецЕсли; 

				ПроверкаСостоянияФлажка();
			
			КонецЕсли; 
			
		Иначе
			
			Если ТипЗнч(Элемент.ТекущиеДанные.НазначениеРеквизита1С) = Тип("Строка") Тогда
				Элемент.ТекущиеДанные.НазначениеРеквизита1С = "";
			Иначе
				Элемент.ТекущиеДанные.НазначениеРеквизита1С = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
			КонецЕсли; 
			
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриИзмененииФлажка элемента формы ТаблицаНастройкиПоискаОбъектов.
//
Процедура ТаблицаНастройкиПоискаОбъектовПриИзмененииФлажка(Элемент, Колонка)

	Если Элемент.ТекущиеДанные <> Неопределено Тогда
	
		Если Элемент.ТекущиеДанные.Использование Тогда

			Если Элемент.ТекущиеДанные.ТипРеквизита1С = "Строка" Тогда

				СписокВыбора = Новый СписокЗначений;

				Для каждого СтрокаТаблицы Из НастройкаПолей Цикл
				
					Если СтрокаТаблицы.ТипРеквизита1С = "Строка" Тогда
					
						СписокВыбора.Добавить(СтрокаТаблицы.ИмяРеквизита);
					
					КонецЕсли; 
				
				КонецЦикла;

				Если НЕ ПустаяСтрока(Элемент.ТекущиеДанные.ЗначениеФайла) Тогда
					ТекущийЭлементСписка = СписокВыбора.НайтиПоЗначению(Элемент.ТекущиеДанные.ЗначениеФайла);
				КонецЕсли; 

				ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент("Выберите поле файла загрузки", ТекущийЭлементСписка);

				Если ВыбранныйЭлемент <> Неопределено Тогда
				
					Элемент.ТекущиеДанные.ЗначениеФайла = ВыбранныйЭлемент.Значение;
				
				КонецЕсли; 
				
			ИначеЕсли ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.ТипРеквизита1С = "ВидКИ" Тогда

				СписокВыбора = Новый СписокЗначений;

				Для каждого СтрокаТаблицы Из НастройкаПолей Цикл

					Если НЕ СтрокаТаблицы.Использование Тогда
						Продолжить;
					КонецЕсли; 
				
					Если ТипЗнч(СтрокаТаблицы.НазначениеРеквизита1С) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") И НЕ СтрокаТаблицы.НазначениеРеквизита1С.Пустая() И СтрокаТаблицы.НазначениеРеквизита1С.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
						СписокВыбора.Добавить(СтрокаТаблицы.НазначениеРеквизита1С, СтрокаТаблицы.ИмяРеквизита);
					КонецЕсли;
				
				КонецЦикла;

				Если СписокВыбора.Количество() = 0 Тогда
				
					Предупреждение("В таблице настройки соответствия полей необходимо указать реквизит 1С типа ""Адрес электронной почты"".");
					Возврат;
				
				КонецЕсли;

				Если НЕ ПустаяСтрока(Элемент.ТекущиеДанные.ЗначениеФайла) Тогда
					ТекущийЭлементСписка = СписокВыбора.НайтиПоЗначению(Элемент.ТекущиеДанные.ЗначениеФайла);
				КонецЕсли; 

				ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент("Выберите поле файла загрузки", ТекущийЭлементСписка);

				Если ВыбранныйЭлемент <> Неопределено Тогда
				
					Элемент.ТекущиеДанные.ЗначениеФайла = ВыбранныйЭлемент.Представление;
					Элемент.ТекущиеДанные.Объект1С = ВыбранныйЭлемент.Значение;
				
				КонецЕсли; 
				
			КонецЕсли;
			
			Если ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.ТипРеквизита1С = "Строка" Тогда
				ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Использование = НЕ ПустаяСтрока(Элемент.ТекущиеДанные.ЗначениеФайла);
			ИначеЕсли ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.ТипРеквизита1С = "ВидКИ" Тогда
				ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Использование = НЕ ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Объект1С.Пустая();
			КонецЕсли;

		Иначе

			ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.ЗначениеФайла = "";
			ЭлементыФормы.ТаблицаНастройкиПоискаОбъектов.ТекущиеДанные.Объект1С = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
			
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

// Обработчик события АвтоПодборТекста элемента формы НастройкаЗагрузкиЗначений.Объект1С.
//
Процедура НастройкаЗагрузкиЗначенийОбъект1САвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	Если ОпределитьИмяТаблицыОбъекта() = "КонтактныеЛица" Тогда
		
		СтруктураПараметров = Новый Структура();
		Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" Тогда
			СтруктураПараметров.Вставить("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента);
			Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные <> Неопределено И НЕ ЗначениеНеЗаполнено(ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец) Тогда
				СтруктураПараметров.Вставить("ОбъектВладелец", ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец);
			КонецЕсли; 
		ИначеЕсли ТипОбъекта = "ЛичныеКонтакты" Тогда
			СтруктураПараметров.Вставить("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт);
		ИначеЕсли ТипОбъекта = "ПрочиеКонтактныеЛица" Тогда
			СтруктураПараметров.Вставить("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.ПрочееКонтактноеЛицо);
			Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные <> Неопределено И НЕ ЗначениеНеЗаполнено(ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец) Тогда
				СтруктураПараметров.Вставить("ОбъектВладелец", ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец);
			КонецЕсли; 
		КонецЕсли; 
		
		АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, СтруктураПараметров, Тип("СправочникСсылка.КонтактныеЛица"));
	
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ОкончаниеВводаТекста элемента формы НастройкаЗагрузкиЗначений.Объект1С.
//
Процедура НастройкаЗагрузкиЗначенийОбъект1СОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Если ОпределитьИмяТаблицыОбъекта() = "КонтактныеЛица" Тогда
		
		СтруктураПараметров = Новый Структура();
		Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" Тогда
			СтруктураПараметров.Вставить("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента);
			Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные <> Неопределено И НЕ ЗначениеНеЗаполнено(ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец) Тогда
				СтруктураПараметров.Вставить("ОбъектВладелец", ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец);
			КонецЕсли; 
		ИначеЕсли ТипОбъекта = "ЛичныеКонтакты" Тогда
			СтруктураПараметров.Вставить("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт);
		ИначеЕсли ТипОбъекта = "ПрочиеКонтактныеЛица" Тогда
			СтруктураПараметров.Вставить("ВидКонтактногоЛица", Перечисления.ВидыКонтактныхЛиц.ПрочееКонтактноеЛицо);
			Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные <> Неопределено И НЕ ЗначениеНеЗаполнено(ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец) Тогда
				СтруктураПараметров.Вставить("ОбъектВладелец", ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Владелец);
			КонецЕсли; 
		КонецЕсли; 
		
		ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, СтруктураПараметров, ЭтаФорма, Тип("СправочникСсылка.КонтактныеЛица"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы НастройкаЗагрузкиЗначений.
//
Процедура НастройкаЗагрузкиЗначенийПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
	
		Если ТипЗнч(Элемент.ТекущиеДанные.Объект1С) <> Тип("СправочникСсылка." + ОпределитьИмяТаблицыОбъекта()) Тогда
			Элемент.ТекущиеДанные.Объект1С = Справочники[ОпределитьИмяТаблицыОбъекта()].ПустаяСсылка()
		КонецЕсли;
		
		Если ОпределитьИмяТаблицыОбъекта() = "КонтактныеЛица" Тогда
		
			Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" Тогда
				Если ТипЗнч(Элемент.ТекущиеДанные.Владелец) <> Тип("СправочникСсылка.Контрагенты") Тогда
					Элемент.ТекущиеДанные.Владелец = Справочники.Контрагенты.ПустаяСсылка();
				КонецЕсли; 
			Иначе
				Если ТипЗнч(Элемент.ТекущиеДанные.Владелец) <> Тип("СправочникСсылка.Пользователи") Тогда
					Элемент.ТекущиеДанные.Владелец = Справочники.Пользователи.ПустаяСсылка();
				КонецЕсли; 
			КонецЕсли; 
		
		КонецЕсли; 
	
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы НастройкаЗагрузкиЗначений.Владелец.
//
Процедура НастройкаЗагрузкиЗначенийВладелецПриИзменении(Элемент)
	
	Если ОпределитьИмяТаблицыОбъекта() = "КонтактныеЛица" Тогда
	
		Если ТипОбъекта = "КонтактныеЛицаКонтрагентов" Тогда
			Если ТипЗнч(Элемент.Значение) <> Тип("СправочникСсылка.Контрагенты") Тогда
				Элемент.Значение = Справочники.Контрагенты.ПустаяСсылка();
			КонецЕсли;
		Иначе
			Если ТипЗнч(Элемент.Значение) <> Тип("СправочникСсылка.Пользователи") Тогда
				Элемент.Значение = Справочники.Пользователи.ПустаяСсылка();
			КонецЕсли; 
		КонецЕсли; 
	
		Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные <> Неопределено Тогда
		
			Если ЗначениеНеЗаполнено(Элемент.Значение) Тогда
				ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Объект1С = Новый("СправочникСсылка." + ОпределитьИмяТаблицыОбъекта());
			Иначе
				Если ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Объект1С.ОбъектВладелец <> Элемент.Значение Тогда
					ЭлементыФормы.НастройкаЗагрузкиЗначений.ТекущиеДанные.Объект1С = Новый("СправочникСсылка." + ОпределитьИмяТаблицыОбъекта());
				КонецЕсли; 
			КонецЕсли; 
		
		КонецЕсли; 
			
	КонецЕсли;
	
КонецПроцедуры

мОбработкаТайпинга                 = Ложь;
мТекстТайпинга                     = "";
мПоследнееЗначениеЭлементаТайпинга = Неопределено;
