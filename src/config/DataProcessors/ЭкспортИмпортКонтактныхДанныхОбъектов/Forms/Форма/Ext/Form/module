
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция определяет картинку программы Импорта/Экспорта
//
// Параметры
//  ЗначениеЭлемента - Строка, имя программы Импорта/Экспорта
//
// Возвращаемое значение:
//   Картинка
//
Функция ПолучитьКартинкуЭлементаСписка(ЗначениеЭлемента = "")

	Если ПустаяСтрока(ЗначениеЭлемента) Тогда
		ЗначениеЭлемента = НаименованиеПрограммы;
	КонецЕсли; 
	
	Если ЗначениеЭлемента = "OutlookExpress" Тогда
		Возврат БиблиотекаКартинок.OutlookExpress;
	ИначеЕсли ЗначениеЭлемента = "MSOutlook" Тогда
		Возврат БиблиотекаКартинок.MSOutlook;
	ИначеЕсли ЗначениеЭлемента = "TheBAT" Тогда
		Возврат БиблиотекаКартинок.TheBAT;
	Иначе
		Возврат Новый Картинка;
	КонецЕсли; 

КонецФункции // ПолучитьКартинкуЭлементаСписка()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события формы ПриОткрытии.
//
Процедура ПриОткрытии()

	мФормаИндикации = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	мФормаИндикации.НаименованиеОбработкиДанных = "Экспорт и импорт контакнтых данных ";
	мФормаИндикации.КомментарийЗначения         = "Выполнено:";
	
	Для каждого ЭлементСписка Из ЭлементыФормы.НаименованиеПрограммы.СписокВыбора Цикл
	
		ЭлементСписка.Картинка = ПолучитьКартинкуЭлементаСписка(ЭлементСписка.Значение);
	
	КонецЦикла; 

	ЭлементыФормы.НаименованиеПрограммы.Картинка = ПолучитьКартинкуЭлементаСписка();

КонецПроцедуры

// Обработчик события формы ПередОткрытием.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ВидОперации = "Импорт";
	ТипОбъекта = "Контрагенты";
	НаименованиеПрограммы = "MSOutlook";
	ФорматФайла = "ТекстCТабуляциями";

КонецПроцедуры

// Обработчик события формы ПередСохранениемЗначений.
//
Процедура ПередСохранениемЗначений(Отказ)

	СохраняемыеРеквизиты = Новый Структура;

	СохраняемыеРеквизиты.Вставить("ВидОперации", ВидОперации);
	СохраняемыеРеквизиты.Вставить("НаименованиеПрограммы", НаименованиеПрограммы);
	СохраняемыеРеквизиты.Вставить("ПутьКФайлу", ПутьКФайлу);
	СохраняемыеРеквизиты.Вставить("СохранятьСоответствиеПараметров", СохранятьСоответствиеПараметров);
	СохраняемыеРеквизиты.Вставить("ТипОбъекта", ТипОбъекта);
	СохраняемыеРеквизиты.Вставить("ФорматФайла", ФорматФайла);

КонецПроцедуры

// Обработчик события ПослеВосстановленияЗначений формы.
//
Процедура ПослеВосстановленияЗначений()

	СохраняемыеРеквизиты.Свойство("ВидОперации", ВидОперации);
	СохраняемыеРеквизиты.Свойство("НаименованиеПрограммы", НаименованиеПрограммы);
	СохраняемыеРеквизиты.Свойство("ПутьКФайлу", ПутьКФайлу);
	СохраняемыеРеквизиты.Свойство("СохранятьСоответствиеПараметров", СохранятьСоответствиеПараметров);
	СохраняемыеРеквизиты.Свойство("ТипОбъекта", ТипОбъекта);
	СохраняемыеРеквизиты.Свойство("ФорматФайла", ФорматФайла);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриИзменении элемента формы НаименованиеПрограммы.
//
Процедура НаименованиеПрограммыПриИзменении(Элемент)

	Элемент.Картинка = ПолучитьКартинкуЭлементаСписка();
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КнопкаВыполнитьНажатие.
//
Процедура КнопкаВыполнитьНажатие(Элемент)

	Если ВидОперации = "Импорт" Тогда
	
		ФайлЗагрузки = Новый Файл(ПутьКФайлу);

		Если НЕ ФайлЗагрузки.Существует() ИЛИ ФайлЗагрузки.ЭтоКаталог() Тогда

			Предупреждение("Выберите файл загрузки.");
			Возврат;
		
		КонецЕсли; 

		ТаблицаДанныхФайла = Новый ТаблицаЗначений;

		ТекстФайла = Новый ТекстовыйДокумент;

		ТекстФайла.Прочитать(ПутьКФайлу, КодировкаТекста.ANSI);

		Если НаименованиеПрограммы = "OutlookExpress" Тогда
		
			ЗаменитьПоля();
		
		КонецЕсли; 

		ЗаполнитьСписокРеквизитовОбъекта();
		
		НачатьНастройкуЗагрузки();

	ИначеЕсли ВидОперации = "Экспорт" Тогда

		Если ПустаяСтрока(ПутьКФайлу) Тогда

			Предупреждение("Выберите файл выгрузки.");
			Возврат;
		
		КонецЕсли; 
		
		ЗаполнитьСписокРеквизитовОбъектаВыгрузки();

		ПроверитьТаблицуОбъектовВыгрузки();
		
		НачатьНастройкуВыгрузки();
	
	КонецЕсли;

КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ПутьКФайлу.
//
Процедура ПутьКФайлуНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если ВидОперации = "Импорт" Тогда
		ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ВыборФайла.ПроверятьСуществованиеФайла = Истина;
		ВыборФайла.Заголовок = "Выберите файл для импорта";
	Иначе
		ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ВыборФайла.ПроверятьСуществованиеФайла = Ложь;
		ВыборФайла.Заголовок = "Выберите файл для экспорта";
	КонецЕсли; 
	
	Если ФорматФайла = "ТекстCSV" Тогда
		ВыборФайла.Фильтр = "Текстовый файл (*.csv)|*.csv";
	Иначе
		ВыборФайла.Фильтр = "Текстовый файл (*.txt,*.tdf)|*.txt;*.tdf";
	КонецЕсли;
	
	Если НЕ ВыборФайла.Выбрать() Тогда
	
		Возврат;
	
	КонецЕсли; 

	Если ВыборФайла.ВыбранныеФайлы.Количество() = 0 Тогда
	
		Возврат;
	
	КонецЕсли; 

	ПутьКФайлу = ВыборФайла.ВыбранныеФайлы[0];
	
КонецПроцедуры

// Обработчик события Очистка элемента формы ТипОбъекта.
//
Процедура ТипОбъектаОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Обработчик события Очистка элемента формы ВидОперации.
//
Процедура ВидОперацииОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Обработчик события Очистка элемента формы НаименованиеПрограммы.
//
Процедура НаименованиеПрограммыОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Обработчик события Очистка элемента формы ФорматФайла.
//
Процедура ФорматФайлаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры
