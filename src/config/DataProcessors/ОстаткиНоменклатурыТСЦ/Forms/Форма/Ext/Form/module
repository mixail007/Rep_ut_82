
Перем спДоступныеСклады;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
	//ЭлементыФормы.ДеревоНоменклатуры.Видимость= не ЭлементыФормы.ДеревоНоменклатуры.Видимость;
ПерезаполнитьТаблицуНоменклатуры();	
КонецПроцедуры

Процедура ПерезаполнитьТаблицуНоменклатуры() 
	Запрос = Новый Запрос;

			Запрос.Текст=" ВЫБРАТЬ
		|	Остатки.Номенклатура.Код КАК Код,
		|	Остатки.Номенклатура.Артикул КАК Артикул,
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.КоличествоОстаток КАК Остаток,
		|	ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Цена,0) Цена
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад В (&Склады)) КАК Остатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура в (ВЫБРАТЬ Номенклатура ИЗ РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад В (&Склады)) ) и ТипЦен = &ТипЦенРозница) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО Остатки.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	Остатки.Номенклатура.Наименование
		|"; 
		
	Запрос.УстановитьПараметр("Склады",спДоступныеСклады);
	Запрос.УстановитьПараметр("ТипЦенРозница",Константы.ТипЦенРозница.Получить());		
	НоменклатураДляПодбора.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры	

Процедура НоменклатураДляПодбораПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Вставить содержимое обработчика.
	
	ЯчейкаПиктограмма = ОформлениеСтроки.Ячейки.Пиктограмма;
	ЯчейкаПиктограмма.ОтображатьКартинку = Истина;
	
	Если ДанныеСтроки.ЭтоГруппа Тогда
		Если ДанныеСтроки.ПереходитьВверх Тогда
			ОформлениеСтроки.ЦветФона = ЦветаСтиля.ЦветФонаФормы;
		КонецЕсли;

		ЯчейкаПиктограмма.ИндексКартинки = 0; // группа
	Иначе
		ЯчейкаПиктограмма.ИндексКартинки = 1; // элемент
	КонецЕсли;

	
	КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ГруппаДоступностиСкладов=ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ГруппаДоступностиСкладов");
	Если ГруппаДоступностиСкладов<>Неопределено Тогда
		ЗапросПоСкладам=Новый Запрос;
		//Если (Константы.РаботаСООО.Получить()) Тогда 
		//	ОрганизацияООО = Константы.ОООДляРозницы.Получить();
		//	ЗапросПоСкладам.УстановитьПараметр("Организация",ОрганизацияООО);
		//	ЗапросПоСкладам.Текст="
		//	|ВЫБРАТЬ 
		//	|	Склад как Склад 
		//	|ИЗ 
		//	|	РегистрСведений.СоставГруппДоступностиСкладов как СкладыГруппы
		//	|ГДЕ ГруппаДоступности=&Группа
		//	|Объединить 
		//	|ВЫБРАТЬ 
		//	|	СкладООО как Склад 
		//	|ИЗ 
		//	|	РегистрСведений.СоответствиеСкладовОООСкладамИП как СкладыСОответствия
		//	|Внутреннее соединение 
		//	|	РегистрСведений.СоставГруппДоступностиСкладов как СкладыГруппы
		//	|По 
		//	|	СкладыСОответствия.СкладИП = СкладыГруппы.Склад
		//	|ГДЕ СкладыГруппы.ГруппаДоступности=&Группа
		//	|И
		//	|СкладыСОответствия.Организация = &Организация";
		//Иначе 
			ЗапросПоСкладам.Текст="ВЫБРАТЬ Склад ИЗ РегистрСведений.СоставГруппДоступностиСкладов ГДЕ ГруппаДоступности=&Группа";
		//КонецЕсли;
		ЗапросПоСкладам.УстановитьПараметр("Группа",ГруппаДоступностиСкладов);

		спДоступныеСклады.ЗагрузитьЗначения(ЗапросПоСкладам.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад"));
		ЭлементыФормы.Надпись1.Заголовок=  "Остаток на складах: "+Строка(спДоступныеСклады);
	Иначе
		Отказ=Истина;
	КонецЕсли;
    

     
КонецПроцедуры

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
ПерезаполнитьТаблицуНоменклатуры();		
КонецПроцедуры

Процедура НоменклатураВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
		Если    ВыбраннаяСтрока.Цена>0 Тогда
	Закрыть(ВыбраннаяСтрока.Номенклатура); 
       Иначе
	Предупреждение("Для товара "+ВыбраннаяСтрока.Номенклатура.Наименование+" не указана цена "+Строка(Константы.ТипЦенРозница.Получить()));
	КонецЕсли;
 
КонецПроцедуры

спДоступныеСклады= Новый СписокЗначений;

// Вставить содержимое обработчика.
		

