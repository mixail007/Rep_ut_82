
Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если НачалоПериода <> Дата(1,1,1) Тогда	
		если ЗаполнялиДиски тогда
			//очиститм все
			НаборЗаписей = РегистрыСведений.ПолугодовойПланДепертаментаПродаж.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.МесяцПланирования.Установить(НачалоПериода);
			НаборЗаписей.Записать();

			ЗаписатьВРегистрДиски(ЭлементыФормы.ДеревоПланирования.Значение);
		иначе			
			ЗаписатьВРегистр(ЭлементыФормы.ДеревоПланирования.Значение,ложь, НачалоПериода);
		конецЕсли;
	иначе
		Сообщить("Укажите период планирования!");
	конецЕсли;	
 КонецПроцедуры
 
 процедура ЗаписатьВРегистр(строка,Утвердить, МесяцПланирования)
	 Для каждого стр из Строка.Строки Цикл
		 Если Утвердить= Истина Тогда
			 //создадим пустую запись с периодом и направлением продаж, что бы понимать что план утвержден
			 
			 Если стр.ТоварнаяГруппа = Null и стр.направлениеПродаж <> Null  Тогда
				 Отбор = Новый Структура();
				 Отбор.Вставить("МесяцПланирования",МесяцПланирования);
				 Отбор.Вставить("ТоварнаяГруппа",Справочники.ТоварныеГруппыДляПланирования.ПустаяСсылка());
				 Отбор.Вставить("направлениеПродаж",НаправлениеПродаж);
				 Проверка = РегистрыСведений.ПолугодовойПланДепертаментаПродаж.Получить(Отбор);
				 Если не Проверка.утвержден тогда //если еще не был утвержден
					 
					 Запись = РегистрыСведений.ПолугодовойПланДепертаментаПродаж.СоздатьМенеджерЗаписи(); 
					 Запись.МесяцПланирования = МесяцПланирования;
					 Запись.НаправлениеПродаж =Стр.направлениеПродаж;
					 Запись.Утвержден = Истина;
					 Запись.Записать();
					 //создадим задачу руководителю
					 
					 задача = задачи.ЗадачиПользователя.СоздатьЗадачу();
					 Задача.Исполнитель = стр.направлениеПродаж.ОтветственныйЗаПланирование;
					 задача.Товары.Очистить();
					 задача.НаСогласование = Ложь;
					 задача.Наименование = "Утвержден полугодовой план продаж по вашему направлению продаж"; 
					 задача.Описание = "Утвержден полугодовой план продаж по вашему направлению продаж";
					 задача.Инициатор   = глТекущийПользователь;
					 задача.Дата 		    = ТекущаяДата();
					 задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
					 задача.Оповещение     = истина;
					 задача.СрокОповещения = ТекущаяДата(); 
					 Попытка
						 задача.Записать();
						 Сообщить(" + Сформирована ""Задача на оповещение"" для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Информация );	
					 исключение
						 Сообщить(" - Не удалось сформировать электронную Задачу на оповещение для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Внимание );	
					 КонецПопытки;
				конецЕсли;	 
				 
				 
				 
			 конецЕсли;;	 
			 стр.Утвержден = Истина;
		 конецЕсли;
		 
		 если ЗначениеЗаполнено(стр.НаправлениеПродаж) и ЗначениеЗаполнено(Стр.товарнаягруппа) и ЗначениеЗаполнено(стр.НоменклатурнаяГруппа) Тогда
			 Если Стр.ТоварнаяГруппа.ЭтоГруппа =Ложь Тогда
				 Запись = РегистрыСведений.ПолугодовойПланДепертаментаПродаж.СоздатьМенеджерЗаписи();
				 Запись.МесяцПланирования = МесяцПланирования;
				 ЗаполнитьЗначенияСвойств(Запись,стр);
				 Если Утвердить= Истина Тогда
					 Запись.Утвержден = Истина;
				 конецЕсли;
				 Запись.Записать(Истина);
			 конецЕсли;
		 Конецесли;	  
		ЗаписатьВРегистр(стр,утвердить, МесяцПланирования);	  
	конецЦикла;	 
конецПроцедуры	 
 
 
процедура ЗаписатьВРегистрДиски(строка)
	Для каждого стр из Строка.Строки Цикл
		//создадим пустую запись с периодом и направлением продаж, что бы понимать что план утвержден
		
		Если стр.ТоварнаяГруппа <> Null и стр.направлениеПродаж <> Null и стр.номенклатурнаяГруппа <> null Тогда
			//Отбор = Новый Структура();
			//Отбор.Вставить("ПериодПланирования",стр.НоменклатурнаяГруппа);
			//Отбор.Вставить("ТоварнаяГруппа",стр.ТоварнаяГруппа);
			//Отбор.Вставить("направлениеПродаж",Справочники.НаправленияПродаж.Диски);
			//Отбор.Вставить("НоменклатурнаяГруппа",стр.ТоварнаяГруппа.Состав[0].НоменклатурнаяГруппа);
			//Отбор.Вставить("Менеджер",стр.НаправлениеПродаж);
			
			//Проверка = РегистрыСведений.МесячныйПланПродаж.Получить(Отбор);
			Запись = РегистрыСведений.МесячныйПланПродаж.СоздатьМенеджерЗаписи();
			Запись.ПериодПланирования=ДобавитьМесяц(стр.НоменклатурнаяГруппа,12);
			Запись.ТоварнаяГруппа=стр.ТоварнаяГруппа;
			Запись.направлениеПродаж=Справочники.НаправленияПродаж.Диски;
			Запись.НоменклатурнаяГруппа=стр.ТоварнаяГруппа.Состав[0].НоменклатурнаяГруппа;
			Запись.Менеджер=стр.НаправлениеПродаж;
			Запись.количествоплан = стр.Количествоплан;
			Запись.СуммаПлан = стр.Суммаплан;
			Запись.Записать();
		конецесли;	
		ЗаписатьВРегистрДиски(стр);
	конецЦикла;	
	
	
	
конецПроцедуры	

процедура ЗаписатьВРегистрМесячныйПлан(строка,Утвердить, МесяцПланирования)
	Для каждого стр из Строка.Строки Цикл
		если ЗначениеЗаполнено(стр.НаправлениеПродаж) и ЗначениеЗаполнено(Стр.товарнаягруппа) и ЗначениеЗаполнено(стр.НоменклатурнаяГруппаПоказатели) Тогда
			Если Стр.ТоварнаяГруппа.ЭтоГруппа =Ложь Тогда
				Запись = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьМенеджерЗаписи();
				Запись.МесяцПланирования = МесяцПланирования;
				ЗаполнитьЗначенияСвойств(Запись,стр);
				Запись.КоличествоПланНО  = стр.КоличествоПлан;
				Запись.СуммаПланНО  = стр.СуммаПлан;
				Запись.Записать(Истина);
			конецЕсли;
		Конецесли;	  
		ЗаписатьВРегистрМесячныйПлан(стр,утвердить, МесяцПланирования);	  
	конецЦикла;	 
конецПроцедуры	 

Процедура ПланированиеПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из Оформлениястрок Цикл
		Если ОформлениеСтроки.ДанныеСтроки.Утвержден = Истина Тогда
			Для каждого яч из ОформлениеСтроки.ячейки	Цикл
				Яч.ТолькоПросмотр = Истина;
				Яч.Шрифт =  Новый Шрифт(,,Истина,,);

			конецЦикла;
		конецЕсли;	
	ОформлениеСтроки.Ячейки.ПрошлыйГод.Видимость = ЛожЬ; 	
	ОформлениеСтроки.Ячейки.ТекущийГод.Видимость = ЛожЬ; 	
	конецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель1Действие9(Кнопка)
	ЗаполнялиДиски =Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		
				"ВЫБРАТЬ
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0) - ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Наценка,
				|	СУММА(ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Себестоимость,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
				|ПОМЕСТИТЬ ПродажиПрошлогоГода
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиСебестоимостьОбороты
				|		ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
				|			И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
				|			И ПродажиОбороты.Подразделение = ПродажиСебестоимостьОбороты.Подразделение
				|			И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппа,
				|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа,
				|	НаправленияПродаж.Ссылка КАК НаправлениеПродаж
				|ПОМЕСТИТЬ Основа
				|ИЗ
				|	Справочник.НаправленияПродаж КАК НаправленияПродаж,
				|	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
				|ГДЕ
				|	НаправленияПродаж.ЭтоГруппа = ЛОЖЬ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество
				|ПОМЕСТИТЬ ОбщаяСредняяЦена
				|ИЗ
				|	ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|ГДЕ
				|	ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж В(&ДепартаментПродаж)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Основа.ТоварнаяГруппа КАК ТоварнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Сумма,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0) = 0
				|					ТОГДА ВЫБОР
				|							КОГДА ЕСТЬNULL(ОбщаяСредняяЦена.Количество, 0) = 0
				|								ТОГДА 0
				|							ИНАЧЕ ВЫРАЗИТЬ(ОбщаяСредняяЦена.Стоимость / ОбщаяСредняяЦена.Количество КАК ЧИСЛО(15, 2))
				|						КОНЕЦ
				|				ИНАЧЕ ВЫРАЗИТЬ(ПродажиПрошлогоГода.Стоимость / ПродажиПрошлогоГода.Количество КАК ЧИСЛО(15, 2))
				|			КОНЕЦ, 0)) КАК СредняяЦена,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Наценка, 0)) КАК СуммаНаценки,
				|	СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценки,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Себестоимость, 0)) КАК Себестоимость,
				|	ЛОЖЬ КАК Утвержден,
				|	0 КАК ПриростПродажПлан,
				|	0 КАК КоличествоПлан,
				|	0 КАК СуммаПлан,
				|	0 КАК ПриростСреднейЦены,
				|	0 КАК СредняяЦенаПлан,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценкиПлан,
				|	0 КАК СуммаНаценкиПлан,
				|	0 КАК ПриростНаценки,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж, Основа.НаправлениеПродаж) КАК НаправлениеПродаж,
				|	Основа.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Наименование, Основа.НаправлениеПродаж.Наименование) КАК ДляСортировки
				|ИЗ
				|	Основа КАК Основа
				|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|		ПО Основа.НаправлениеПродаж = ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж
				|			И Основа.НоменклатурнаяГруппа = ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщаяСредняяЦена КАК ОбщаяСредняяЦена
				|		ПО Основа.НоменклатурнаяГруппа = ОбщаяСредняяЦена.НоменклатурнаяГруппа
				|ГДЕ
				|	НЕ Основа.НаправлениеПродаж В (&НаправлениеПродажУбрать)
				|	//по направлению И Основа.НаправлениеПродаж В (&НаправлениеПродаж )
				|
				|СГРУППИРОВАТЬ ПО
				|	Основа.ТоварнаяГруппа,
				|	Основа.НоменклатурнаяГруппа,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж, Основа.НаправлениеПродаж),
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Наименование, Основа.НаправлениеПродаж.Наименование)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ДляСортировки,
				|	Основа.ТоварнаяГруппа.Наименование
				|ИТОГИ
				|	СУММА(Количество),
				|	СУММА(Сумма),
				|	ВЫБОР
				|		КОГДА СУММА(Количество) = 0
				|			ТОГДА СРЕДНЕЕ(СредняяЦена)
				|		ИНАЧЕ СУММА(Сумма) / СУММА(Количество)
				|	КОНЕЦ КАК СредняяЦена,
				|	СУММА(СуммаНаценки),
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценки,
				|	СУММА(Себестоимость),
				|	МИНИМУМ(Утвержден),
				|	СУММА(ПриростПродажПлан),
				|	СУММА(КоличествоПлан),
				|	СУММА(СуммаПлан),
				|	СУММА(ПриростСреднейЦены),
				|	СУММА(СредняяЦенаПлан),
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценкиПлан,
				|	СУММА(СуммаНаценкиПлан),
				|	СУММА(ПриростНаценки)
				|ПО
				|	ОБЩИЕ,
				|	НаправлениеПродаж,
				|	ТоварнаяГруппа ИЕРАРХИЯ";

	Запрос.УстановитьПараметр("КонПериода",КонецДня(ДобавитьМесяц(КонецПериода,-12)));
	Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	Запрос.УстановитьПараметр("НачПериода", ДобавитьМесяц(НачалоПериода,-12));
	СписокНаправлениеПродажУбрать = Новый СписокЗначений;
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(10));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(10));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(11));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(15));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(16));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(27));

	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.ПустаяСсылка());

	Запрос.УстановитьПараметр("НаправлениеПродажУбрать",СписокНаправлениеПродажУбрать);
	
	
	//Заполним список направлений для расчета средней цены по департаменту
	ЗапросН = Новый Запрос;
	ЗапросН.Текст = 
		"ВЫБРАТЬ
		|	НаправленияПродаж.Ссылка как Направление
		|ИЗ
		|	Справочник.НаправленияПродаж КАК НаправленияПродаж
		|ГДЕ
		|	НаправленияПродаж.Код <> 15
		|	И НаправленияПродаж.Код <> 16";

	Результат = ЗапросН.Выполнить();

	ДепартаментПродаж = Результат.Выгрузить().ВыгрузитьКолонку("Направление");
    Запрос.УстановитьПараметр("ДепартаментПродаж",ДепартаментПродаж);

	
	Если не РольДоступна("ПолныеПрава") или ЗначениеЗаполнено(НаправлениеПродаж)  Тогда
		Если ЗначениеЗаполнено(НаправлениеПродаж) Тогда
	    	СписокНаправлениеПродаж = Новый СписокЗначений;
			СписокНаправлениеПродаж.Добавить(НаправлениеПродаж);
		иначе
			ЗапросНП = Новый Запрос;
			ЗапросНП.Текст = 
			"ВЫБРАТЬ
			|	НаправленияПродаж.Ссылка
			|ИЗ
			|	Справочник.НаправленияПродаж КАК НаправленияПродаж
			|ГДЕ
			|	НаправленияПродаж.ОтветственныйЗаПланирование = &ОтветственныйЗаПланирование";
			
			ЗапросНП.УстановитьПараметр("ОтветственныйЗаПланирование", глТекущийПользователь);
			
			РезультатНП = ЗапросНП.Выполнить().Выгрузить();
			
			СписокНаправлениеПродаж = РезультатНП.ВыгрузитьКолонку("Ссылка");
		конецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//по направлению","");
		Запрос.УстановитьПараметр("НаправлениеПродаж",СписокНаправлениеПродаж);
	конецЕсли;	
	
	Результат = Запрос.Выполнить();
	Элементыформы.ДеревоПланирования.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	
	//заполним свод
	 	Запрос.Текст = 

	  				"ВЫБРАТЬ
	  				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	  				|	СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК Количество,
	  				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0)) КАК Стоимость,
	  				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0) - ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Наценка,
	  				|	СУММА(ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Себестоимость
	  				|ПОМЕСТИТЬ ПродажиПрошлогоГода
	  				|ИЗ
	  				|	РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиОбороты
	  				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиСебестоимостьОбороты
	  				|		ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
	  				|			И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
	  				|			И ПродажиОбороты.Подразделение = ПродажиСебестоимостьОбороты.Подразделение
	  				|			И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
	  				|ГДЕ
	  				|	НЕ ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&НаправлениеПродажУбрать)
	  				|
	  				|СГРУППИРОВАТЬ ПО
	  				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа
	  				|
	  				|ИНДЕКСИРОВАТЬ ПО
	  				|	НоменклатурнаяГруппа
	  				|;
	  				|
	  				|////////////////////////////////////////////////////////////////////////////////
	  				|ВЫБРАТЬ
	  				|	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппа,
	  				|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа
	  				|ПОМЕСТИТЬ Основа
	  				|ИЗ
	  				|	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
	  				|;
	  				|
	  				|////////////////////////////////////////////////////////////////////////////////
	  				|ВЫБРАТЬ
	  				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа,
	  				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Стоимость,
	  				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество
	  				|ПОМЕСТИТЬ ОбщаяСредняяЦена
	  				|ИЗ
	  				|	ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
	  				|
	  				|СГРУППИРОВАТЬ ПО
	  				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа
	  				|;
	  				|
	  				|////////////////////////////////////////////////////////////////////////////////
	  				|ВЫБРАТЬ
	  				|	Основа.ТоварнаяГруппа КАК ТоварнаяГруппа,
	  				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество,
	  				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Сумма,
	  				|	СУММА(ЕСТЬNULL(ВЫБОР
	  				|				КОГДА ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0) = 0
	  				|					ТОГДА ВЫБОР
	  				|							КОГДА ЕСТЬNULL(ОбщаяСредняяЦена.Количество, 0) = 0
	  				|								ТОГДА 0
	  				|							ИНАЧЕ ВЫРАЗИТЬ(ОбщаяСредняяЦена.Стоимость / ОбщаяСредняяЦена.Количество КАК ЧИСЛО(15, 2))
	  				|						КОНЕЦ
	  				|				ИНАЧЕ ВЫРАЗИТЬ(ПродажиПрошлогоГода.Стоимость / ПродажиПрошлогоГода.Количество КАК ЧИСЛО(15, 2))
	  				|			КОНЕЦ, 0)) КАК СредняяЦена,
	  				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Наценка, 0)) КАК СуммаНаценки,
	  				|	СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
	  				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
	  				|					ТОГДА 0
	  				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
	  				|			КОНЕЦ, 0)) КАК ПроцентНаценки,
	  				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Себестоимость, 0)) КАК Себестоимость,
	  				|	ЛОЖЬ КАК Утвержден,
	  				|	0 КАК ПриростПродажПлан,
	  				|	0 КАК КоличествоПлан,
	  				|	0 КАК СуммаПлан,
	  				|	0 КАК ПриростСреднейЦены,
	  				|	0 КАК СредняяЦенаПлан,
	  				|	СУММА(ЕСТЬNULL(ВЫБОР
	  				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
	  				|					ТОГДА 0
	  				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
	  				|			КОНЕЦ, 0)) КАК ПроцентНаценкиПлан,
	  				|	0 КАК СуммаНаценкиПлан,
	  				|	0 КАК ПриростНаценки,
	  				|	Основа.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	  				|ИЗ
	  				|	Основа КАК Основа
	  				|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
	  				|		ПО Основа.НоменклатурнаяГруппа = ПродажиПрошлогоГода.НоменклатурнаяГруппа
	  				|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщаяСредняяЦена КАК ОбщаяСредняяЦена
	  				|		ПО Основа.НоменклатурнаяГруппа = ОбщаяСредняяЦена.НоменклатурнаяГруппа
	  				|
	  				|СГРУППИРОВАТЬ ПО
	  				|	Основа.ТоварнаяГруппа,
	  				|	Основа.НоменклатурнаяГруппа
	  				|
	  				|УПОРЯДОЧИТЬ ПО
	  				|	Основа.ТоварнаяГруппа.Наименование
	  				|ИТОГИ
	  				|	СУММА(Количество),
	  				|	СУММА(Сумма),
	  				|	ВЫБОР
	  				|		КОГДА СУММА(Количество) = 0
	  				|			ТОГДА СРЕДНЕЕ(СредняяЦена)
	  				|		ИНАЧЕ СУММА(Сумма) / СУММА(Количество)
	  				|	КОНЕЦ КАК СредняяЦена,
	  				|	СУММА(СуммаНаценки),
	  				|	ВЫБОР
	  				|		КОГДА СУММА(Себестоимость) = 0
	  				|			ТОГДА 0
	  				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
	  				|	КОНЕЦ КАК ПроцентНаценки,
	  				|	СУММА(Себестоимость),
	  				|	МИНИМУМ(Утвержден),
	  				|	СУММА(ПриростПродажПлан),
	  				|	СУММА(КоличествоПлан),
	  				|	СУММА(СуммаПлан),
	  				|	СУММА(ПриростСреднейЦены),
	  				|	СУММА(СредняяЦенаПлан),
	  				|	ВЫБОР
	  				|		КОГДА СУММА(Себестоимость) = 0
	  				|			ТОГДА 0
	  				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
	  				|	КОНЕЦ КАК ПроцентНаценкиПлан,
	  				|	СУММА(СуммаНаценкиПлан),
	  				|	СУММА(ПриростНаценки)
	  				|ПО
	  				|	ОБЩИЕ,
	  				|	ТоварнаяГруппа ИЕРАРХИЯ";

	//Запрос.УстановитьПараметр("КонПериода",КонецДня(ДобавитьМесяц(КонецПериода,-12)));
	//Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	//Запрос.УстановитьПараметр("НачПериода", ДобавитьМесяц(НачалоПериода,-12));
	//СписокНаправлениеПродажУбрать = Новый СписокЗначений;
	//СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(10));
	//СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(11));
	//СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(15));
	//СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(16));
	//Запрос.УстановитьПараметр("НаправлениеПродажУбрать",СписокНаправлениеПродажУбрать);

	Результат = Запрос.Выполнить();
	Элементыформы.ДеревоСвод.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);

КонецПроцедуры

Процедура ДеревоПланированияПриростПродажПриИзменении(Элемент)
	стр = ЭлементыФормы.ДеревоПланирования.текущиеДанные;
	ПриростПродаж = стр.ПриростПродажПлан;
	//стр.ПриростПродажПлан = приростПродаж;
	стр.КоличествоПлан = Окр(стр.количество*(1+приростПродаж/100),0);
    Если стр.СредняяЦенаПлан=0 Тогда
	стр.суммаПлан = Стр.Сумма*(1+приростПродаж/100);
    иначе
	стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
	конецЕсли;                  
	Если стр.ПроцентНаценкиПлан<>0 Тогда
	стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
	стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
	конецЕсли;
	
	РассчитатьКоличествоПлан(стр,ПриростПродаж);
		пересчетИтогов(стр);

КонецПроцедуры

процедура РассчитатьКоличествоПлан(ТекСтрока,ПриростПродаж)
	
	Для каждого стр из  ТекСтрока.Строки Цикл
	стр.ПриростПродажПлан = приростПродаж;
	стр.КоличествоПлан = Окр(стр.количество*(1+приростПродаж/100),0);
    Если стр.СредняяЦенаПлан=0 Тогда
	стр.суммаПлан = Стр.Сумма*(1+приростПродаж/100);
    иначе
	стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
    конецЕсли;  
	если  Стр.Количествоплан =0 Тогда
	стр.СредняяЦенаПлан = 0;	
	иначе	
    стр.СредняяЦенаПлан = Стр.Суммаплан/Стр.Количествоплан;
	конецЕсли;
	Если стр.ПроцентНаценкиПлан<>0 Тогда
	стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
	стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
    конецЕсли;
    РассчитатьКоличествоПлан(стр,ПриростПродаж);
	пересчетИтогов(стр);

	конеццикла;	
	
конецПроцедуры	

Процедура ДеревоПланированияПриростСреднейЦеныПриИзменении(Элемент)
	стр = ЭлементыФормы.ДеревоПланирования.текущиеДанные;
	ПриростСреднейЦены = стр.ПриростСреднейЦены;
	стр.СредняяЦенаПлан = стр.СредняяЦена*(1+ПриростСреднейЦены/100);
	стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
	Если стр.ПроцентНаценкиПлан<>0 Тогда
		стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
		стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
	конецЕсли;
	
	РассчитатьСреднююЦенуПлан(стр,ПриростСреднейЦены);
	
	пересчетИтогов(стр);
КонецПроцедуры

процедура РассчитатьСреднююЦенуПлан(ТекСтрока,ПриростСреднейЦены)
	
	Для каждого стр из  ТекСтрока.Строки Цикл
		стр.ПриростСреднейЦены = ПриростСреднейЦены;	
		стр.СредняяЦенаПлан = стр.СредняяЦена*(1+ПриростСреднейЦены/100);
		стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
		Если стр.ПроцентНаценкиПлан<>0 Тогда
			стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
			стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
		конецЕсли;
		
		РассчитатьСреднююЦенуПлан(стр,ПриростСреднейЦены);
	конеццикла;	
	
конецПроцедуры	

Процедура КоманднаяПанель1ЗаполнитьИзПлана(Кнопка)
	ЗаполнялиДиски = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПолугодовойПланДепертаментаПродаж.МесяцПланирования,
		|	ПолугодовойПланДепертаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
		|	ПолугодовойПланДепертаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
		|	ПолугодовойПланДепертаментаПродаж.Количество КАК Количество,
		|	ПолугодовойПланДепертаментаПродаж.Сумма КАК Сумма,
		|	ПолугодовойПланДепертаментаПродаж.СредняяЦена КАК СредняяЦена,
		|	ПолугодовойПланДепертаментаПродаж.ПроцентНаценки КАК ПроцентНаценки,
		|	ПолугодовойПланДепертаментаПродаж.СуммаНаценки КАК СуммаНаценки,
		|	ПолугодовойПланДепертаментаПродаж.ПриростПродажПлан КАК ПриростПродажПлан,
		|	ПолугодовойПланДепертаментаПродаж.КоличествоПлан КАК КоличествоПлан,
		|	ПолугодовойПланДепертаментаПродаж.СуммаПлан КАК СуммаПлан,
		|	ПолугодовойПланДепертаментаПродаж.ПриростСреднейЦены КАК ПриростСреднейЦены,
		|	ПолугодовойПланДепертаментаПродаж.СредняяЦенаПлан КАК СредняяЦенаПлан,
		|	ПолугодовойПланДепертаментаПродаж.ПроцентНаценкиПлан КАК ПроцентНаценкиПлан,
		|	ПолугодовойПланДепертаментаПродаж.СуммаНаценкиПлан КАК СуммаНаценкиПлан,
		|	ПолугодовойПланДепертаментаПродаж.ПриростНаценки КАК ПриростНаценки,
		|	ПолугодовойПланДепертаментаПродаж.Себестоимость КАК Себестоимость,
		|	ПолугодовойПланДепертаментаПродаж.СуммаПлан / (100 + ПолугодовойПланДепертаментаПродаж.ПроцентНаценкиПлан) * 100 КАК СебестоимостьПлан,
		|	ПолугодовойПланДепертаментаПродаж.Утвержден КАК Утвержден,
		|	ПолугодовойПланДепертаментаПродаж.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ПолугодовойПланДепертаментаПродаж.ПриростПродажПлан КАК ПриростПродажПланНаправлениеПродаж
		|ИЗ
		|	РегистрСведений.ПолугодовойПланДепертаментаПродаж КАК ПолугодовойПланДепертаментаПродаж
		|ГДЕ
		|	ПолугодовойПланДепертаментаПродаж.МесяцПланирования = &МесяцПланирования
		|	И ПолугодовойПланДепертаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ТоварныеГруппыДляпланирования.ПустаяСсылка)
		|//по направлению И ПолугодовойПланДепертаментаПродаж.НаправлениеПродаж В (&НаправлениеПродаж )
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПолугодовойПланДепертаментаПродаж.НаправлениеПродаж.Наименование
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма),
		|	ВЫБОР
		|		КОГДА СУММА(Количество) = 0
		|			ТОГДА 0
		|		ИНАЧЕ СУММА(Сумма) / СУММА(Количество)
		|	КОНЕЦ КАК СредняяЦена,
		|	ВЫБОР
		|		КОГДА СУММА(Себестоимость) = 0
		|			ТОГДА 0
		|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
		|	КОНЕЦ КАК ПроцентНаценки,
		|	СУММА(СуммаНаценки),
		|	ВЫБОР
		|		КОГДА СУММА(Количество) = 0
		|			ТОГДА 0
		|		ИНАЧЕ (СУММА(КоличествоПлан) - СУММА(Количество)) / СУММА(Количество) * 100
		|	КОНЕЦ КАК ПриростПродажПлан,
		|	СУММА(КоличествоПлан),
		|	СУММА(СуммаПлан),
		|	СРЕДНЕЕ(ПриростСреднейЦены),
		|	ВЫБОР
		|		КОГДА СУММА(КоличествоПлан) = 0
		|			ТОГДА 0
		|		ИНАЧЕ СУММА(СуммаПлан) / СУММА(КоличествоПлан)
		|	КОНЕЦ КАК СредняяЦенаПлан,
		|	ВЫБОР
		|		КОГДА СУММА(СебестоимостьПлан) = 0
		|				ИЛИ СУММА(ПроцентНаценки) = СУММА(ПроцентНаценкиПлан)
		|			ТОГДА ВЫБОР
		|					КОГДА СУММА(Себестоимость) = 0
		|						ТОГДА 0
		|					ИНАЧЕ СРЕДНЕЕ(ПроцентНаценкиПлан) / 100
		|				КОНЕЦ
		|		ИНАЧЕ СУММА(СуммаНаценкиПлан) / СУММА(СебестоимостьПлан)
		|	КОНЕЦ * 100 КАК ПроцентНаценкиПлан,
		|	СУММА(СуммаНаценкиПлан),
		|	СУММА(СуммаНаценкиПлан) - СУММА(СуммаНаценки) КАК ПриростНаценки,
		|	СУММА(Себестоимость),
		|	МИНИМУМ(Утвержден),
		|	ВЫБОР
		|		КОГДА СУММА(Сумма) = 0
		|			ТОГДА 0
		|		ИНАЧЕ (СУММА(СуммаПлан) - СУММА(Сумма)) / СУММА(Сумма) * 100
		|	КОНЕЦ КАК ПриростПродажПланНаправлениеПродаж
		|ПО
		|	ОБЩИЕ,
		|	НаправлениеПродаж,
		|	ТоварнаяГруппа ИЕРАРХИЯ";

	Запрос.УстановитьПараметр("МесяцПланирования", НачалоПериода);
	Если не РольДоступна("ПолныеПрава") или ЗначениеЗаполнено(НаправлениеПродаж) или 
		(Кнопка.Имя<>"ПосмотретьВсе" и не РольДоступна("ПравоЗавершенияРаботыПользователей") и глТекущийПользователь <> Справочники.Пользователи.НайтиПоКоду("Серков"))  Тогда
		СписокНаправлениеПродаж = Новый СписокЗначений;
		Если ЗначениеЗаполнено(НаправлениеПродаж) Тогда
			СписокНаправлениеПродаж.Добавить(НаправлениеПродаж);
		иначе
			ЗапросНП = Новый Запрос;
			ЗапросНП.Текст = 
			"ВЫБРАТЬ
			|	НаправленияПродаж.Ссылка
			|ИЗ
			|	Справочник.НаправленияПродаж КАК НаправленияПродаж
			|ГДЕ
			|	НаправленияПродаж.ОтветственныйЗаПланирование = &ОтветственныйЗаПланирование";
			
			ЗапросНП.УстановитьПараметр("ОтветственныйЗаПланирование", глТекущийПользователь);
			
			РезультатНП = ЗапросНП.Выполнить().Выгрузить();
			
			СписокНаправлениеПродаж = РезультатНП.ВыгрузитьКолонку("Ссылка");
		конецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//по направлению","");
		Запрос.УстановитьПараметр("НаправлениеПродаж",СписокНаправлениеПродаж);
	конецЕсли;	
	
	
	Результат = Запрос.Выполнить();
	
	Элементыформы.ДеревоПланирования.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Для каждого строка из Элементыформы.ДеревоПланирования.Значение.Строки Цикл
		   	строка.ПриростПродажПлан = строка.ПриростПродажПланНаправлениеПродаж;
		Для каждого строчка из Строка.Строки Цикл
			строчка.ПриростПродажПлан = строчка.ПриростПродажПланНаправлениеПродаж;
		конецЦикла;	
	конецЦикла;	
	//Заполним свод из плана
	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПолугодовойПланДепертаментаПродаж.МесяцПланирования,
		|	ПолугодовойПланДепертаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
		|	ПолугодовойПланДепертаментаПродаж.Количество КАК Количество,
		|	ПолугодовойПланДепертаментаПродаж.Сумма КАК Сумма,
		|	ПолугодовойПланДепертаментаПродаж.СредняяЦена КАК СредняяЦена,
		|	ПолугодовойПланДепертаментаПродаж.ПроцентНаценки КАК ПроцентНаценки,
		|	ПолугодовойПланДепертаментаПродаж.СуммаНаценки КАК СуммаНаценки,
		|	ПолугодовойПланДепертаментаПродаж.ПриростПродажПлан КАК ПриростПродажПлан,
		|	ПолугодовойПланДепертаментаПродаж.КоличествоПлан КАК КоличествоПлан,
		|	ПолугодовойПланДепертаментаПродаж.СуммаПлан КАК СуммаПлан,
		|	ПолугодовойПланДепертаментаПродаж.ПриростСреднейЦены КАК ПриростСреднейЦены,
		|	ПолугодовойПланДепертаментаПродаж.СредняяЦенаПлан КАК СредняяЦенаПлан,
		|	ПолугодовойПланДепертаментаПродаж.ПроцентНаценкиПлан КАК ПроцентНаценкиПлан,
		|	ПолугодовойПланДепертаментаПродаж.СуммаНаценкиПлан КАК СуммаНаценкиПлан,
		|	ПолугодовойПланДепертаментаПродаж.ПриростНаценки КАК ПриростНаценки,
		|	ПолугодовойПланДепертаментаПродаж.Себестоимость КАК Себестоимость,
		|	ПолугодовойПланДепертаментаПродаж.СуммаПлан / (100 + ПолугодовойПланДепертаментаПродаж.ПроцентНаценкиПлан) * 100 КАК СебестоимостьПлан,
		|	ПолугодовойПланДепертаментаПродаж.Утвержден КАК Утвержден,
		|	ПолугодовойПланДепертаментаПродаж.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
		|ИЗ
		|	РегистрСведений.ПолугодовойПланДепертаментаПродаж КАК ПолугодовойПланДепертаментаПродаж
		|ГДЕ
		|	ПолугодовойПланДепертаментаПродаж.МесяцПланирования = &МесяцПланирования
		|	И ПолугодовойПланДепертаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ТоварныеГруппыДляпланирования.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПолугодовойПланДепертаментаПродаж.НаправлениеПродаж.Наименование
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма),
		|	ВЫБОР
		|		КОГДА СУММА(Количество) = 0
		|			ТОГДА 0
		|		ИНАЧЕ СУММА(Сумма) / СУММА(Количество)
		|	КОНЕЦ КАК СредняяЦена,
		|	ВЫБОР
		|		КОГДА СУММА(Себестоимость) = 0
		|			ТОГДА 0
		|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
		|	КОНЕЦ КАК ПроцентНаценки,
		|	СУММА(СуммаНаценки),
		|	ВЫБОР
		|		КОГДА СУММА(Количество) = 0
		|			ТОГДА 0
		|		ИНАЧЕ (СУММА(КоличествоПлан) - СУММА(Количество)) / СУММА(Количество) * 100
		|	КОНЕЦ КАК ПриростПродажПлан,
		|	СУММА(КоличествоПлан),
		|	СУММА(СуммаПлан),
		|	СРЕДНЕЕ(ПриростСреднейЦены),
		|	ВЫБОР
		|		КОГДА СУММА(КоличествоПлан) = 0
		|			ТОГДА СРЕДНЕЕ(СредняяЦенаПлан)
		|		ИНАЧЕ СУММА(СуммаПлан) / СУММА(КоличествоПлан)
		|	КОНЕЦ КАК СредняяЦенаПлан,
		|	ВЫБОР
		|		КОГДА СУММА(СебестоимостьПлан) = 0
		|				ИЛИ СУММА(ПроцентНаценки) = СУММА(ПроцентНаценкиПлан)
		|			ТОГДА ВЫБОР
		|					КОГДА СУММА(Себестоимость) = 0
		|						ТОГДА СРЕДНЕЕ(ПроцентНаценкиПлан) / 100
		|					ИНАЧЕ СРЕДНЕЕ(ПроцентНаценкиПлан) / 100
		|				КОНЕЦ
		|		ИНАЧЕ СУММА(СуммаНаценкиПлан) / СУММА(СебестоимостьПлан)
		|	КОНЕЦ * 100 КАК ПроцентНаценкиПлан,
		|	СУММА(СуммаНаценкиПлан),
		|	СРЕДНЕЕ(ПриростНаценки),
		|	СУММА(Себестоимость),
		|	МИНИМУМ(Утвержден)
		|ПО
		|	ОБЩИЕ,
		|	ТоварнаяГруппа ИЕРАРХИЯ,
		|	НоменклатурнаяГруппа";

	
	   Результат = Запрос.Выполнить();
	  Элементыформы.ДеревоСвод.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);

КонецПроцедуры

Процедура ДеревоПланированияПроцентНаценкиПланПриИзменении(Элемент)
	стр = ЭлементыФормы.ДеревоПланирования.текущиеДанные;
	ПроцентНаценкиПлан = стр.ПроцентНаценкиПлан;
	стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
	стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
	
	РассчитатьПроцентНаценкиПлан(стр,ПроцентНаценкиПлан);
    	пересчетИтогов(стр);

КонецПроцедуры

процедура РассчитатьПроцентНаценкиПлан(ТекСтрока,ПроцентНаценкиПлан)
	
	Для каждого стр из  ТекСтрока.Строки Цикл
	стр.ПроцентНаценкиПлан = ПроцентНаценкиПлан;
	стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
	стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
	
	РассчитатьПроцентНаценкиПлан(стр,ПроцентНаценкиПлан);
	конеццикла;	
	
конецПроцедуры	

процедура 	пересчетИтогов(стр);
	РодительскаяСтрока = Стр.Родитель;
	Если РодительскаяСтрока <> Неопределено Тогда
		приростПродажплан =0;
		Количествоплан =0;
		СуммаПлан =0;
		ПриростСреднейЦены=0;
		СредняяЦенаПлан =0;
		ПроцентНаценкиПлан =0;
		СуммаНаценкиПлан =0;
		ПриростНаценки =0;
		КоличествоСтрок =0;
		СебестоимостьПлан =0;
		Себестоимость = 0;
		Для каждого ст из РодительскаяСтрока.Строки  Цикл
			приростПродажплан =приростПродажплан+ст.приростПродажплан;
			Количествоплан =Количествоплан+ст.Количествоплан;
			СуммаПлан =СуммаПлан+ст.СуммаПлан;
			ПриростСреднейЦены=ПриростСреднейЦены+ст.ПриростСреднейЦены;
			СредняяЦенаПлан =СредняяЦенаПлан+ст.СредняяЦенаПлан;
			ПроцентНаценкиПлан =ПроцентНаценкиПлан+ст.ПроцентНаценкиПлан;
			СуммаНаценкиПлан =СуммаНаценкиПлан+ст.СуммаНаценкиПлан;
			ПриростНаценки =ПриростНаценки+ст.ПриростНаценки;
			СебестоимостьПлан = СебестоимостьПлан +ст.СуммаПлан/(100+ст.процентНаценкиПлан)*100;
			себестоимость = себестоимость+ст.себестоимость;
			КоличествоСтрок =КоличествоСтрок+1;
		конецЦикла; 
		если РодительскаяСтрока.Количество=0 Тогда
			РодительскаяСтрока.приростПродажплан =0;
		иначеесли  не ЗначениеЗаполнено(РодительскаяСтрока.ТоварнаяГруппа) и не ЗначениеЗаполнено(РодительскаяСтрока.ТоварнаяГруппа) тогда
			РодительскаяСтрока.приростПродажплан =Окр((СуммаПлан-РодительскаяСтрока.Сумма)/РодительскаяСтрока.Сумма*100,2);
		иначе
			РодительскаяСтрока.приростПродажплан =Окр((КоличествоПлан-РодительскаяСтрока.Количество)/РодительскаяСтрока.Количество*100,2);
		конецЕсли;
		РодительскаяСтрока.Количествоплан =Количествоплан;
		РодительскаяСтрока.СуммаПлан =СуммаПлан;
		РодительскаяСтрока.ПриростСреднейЦены=ПриростСреднейЦены/КоличествоСтрок;
		РодительскаяСтрока.СуммаНаценкиПлан =СуммаНаценкиПлан;
		РодительскаяСтрока.ПриростНаценки =ПриростНаценки;
		
		
		Если количествоПлан=0 Тогда
			РодительскаяСтрока.СредняяЦенаПлан = 0;	
		иначе	
			РодительскаяСтрока.СредняяЦенаПлан =СуммаПлан/КоличествоПлан;
		конецЕсли;
		Если СебестоимостьПлан=0 Тогда
			РодительскаяСтрока.ПроцентНаценкиПлан = 0;	
		иначе	
			РодительскаяСтрока.ПроцентНаценкиПлан =СуммаНаценкиПлан/СебестоимостьПлан*100;
		конецЕсли;
		пересчетИтогов(РодительскаяСтрока);	 
	конецЕсли;	 
конецПроцедуры

Процедура ПриОткрытии()
	Если  РольДоступна("ПравоЗавершенияРаботыПользователей") или глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Серков") Тогда
		//НаправлениеПродаж = глТекущийпользователь.НаправлениеПродаж;	
		//Элементыформы.НаправлениеПродаж.Доступность = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Утвердить.доступность = Истина;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.доступность = Истина;
		ЭлементыФормы.Панель.Страницы.Свод.Видимость = Истина;
		Элементыформы.ДеревоПланирования.Колонки.ПриростСреднейЦены.Доступность = Истина;

    конецЕсли;
	Если  глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Малышев Егор") Тогда
		Элементыформы.ДеревоПланирования.Колонки.НаправлениеПродаж.ТекстШапки = "Менеджер";
		Элементыформы.ДеревоПланирования.Колонки.НоменклатурнаяГруппа.ТекстШапки = "Период";
		ЭлементыФормы.КоманднаяПанель1.Кнопки.ЗаполнитьДиски.доступность = Истина;
	конецЕсли;
	Если РольДоступна("ПравоЗавершенияРаботыПользователей")  Тогда
    ЭлементыФормы.КоманднаяПанель1.Кнопки.ЗаполнитьДиски.доступность = Истина;
    конецЕсли;

	
КонецПроцедуры

Процедура КоманднаяПанель1Утвердить(Кнопка)
	ЗаписатьВРегистр(ЭлементыФормы.ДеревоПланирования.Значение,Истина, НачалоПериода);
КонецПроцедуры

Процедура НачалоПериодаПриИзменении(Элемент)
		Если Месяц(НачалоПериода)<>1 и  Месяц(НачалоПериода)<>7 Тогда
			Сообщить("Выберите начало полугодия!");
			НачалоПериода= Дата(1,1,1);
		иначе
			НачалоПериода = НачалоМесяца(началоПериода);
			конецПериода = КонецМесяца(ДобавитьМесяц(НачалоПериода,6)-1);
		конецЕсли;	
КонецПроцедуры

Процедура НаправлениеПродажНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если не рольДоступна("полныеПрава") Тогда
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.НаправленияПродаж.ПолучитьФормуВыбора(,Элемент,);
	ФормаВыбора.Отбор.ОтветственныйЗаПланирование.Значение      = глТекущийпользователь;
	ФормаВыбора.Отбор.ОтветственныйЗаПланирование.Использование = Истина;
	ФормаВыбора.Открыть();
	конецесли;	
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура НаправлениеПродажПриИзменении(Элемент)
			//Если заполнено направление продаж проверим, можно ли его редактировать
		Если значениеЗаполнено(НаправлениеПродаж)Тогда
			Отбор = Новый Структура();
			Отбор.Вставить("МесяцПланирования",НачалоПериода);
			Отбор.Вставить("ТоварнаяГруппа",Справочники.ТоварныеГруппыДляПланирования.ПустаяСсылка());
			Отбор.Вставить("НоменклатурнаяГруппа",Справочники.НоменклатурныеГруппы.ПустаяСсылка());
			Отбор.Вставить("направлениеПродаж",НаправлениеПродаж);
			Проверка = РегистрыСведений.ПолугодовойПланДепертаментаПродаж.Получить(Отбор);
			Если Проверка.утвержден тогда
				//ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.доступность = Ложь;
				ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.доступность = Ложь;
			иначе
				//ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.доступность = истина;
				ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.доступность = Истина;
			конецЕсли;
		конецЕсли;

КонецПроцедуры

Процедура ДеревоПланированияСредняяЦенаПланПриИзменении(Элемент)
		стр = ЭлементыФормы.ДеревоПланирования.текущиеДанные;
        Стр.суммаПлан = Стр.КоличествоПлан*Стр.СредняяЦенаПлан;
		стр.СуммаНаценкиПлан = стр.СуммаПлан/(100+стр.ПроцентНаценкиПлан)* стр.ПроцентНаценкиПлан;
		стр.ПриростНаценки = стр.СуммаНаценкиПлан-стр.СуммаНаценки;
		РассчитатьСреднююЦенуПланВСтроке(стр,стр.СредняяЦенаПлан);
		пересчетИтогов(стр);	
	КонецПроцедуры
	
процедура РассчитатьСреднююЦенуПланВСтроке(ТекСтрока,СредняяЦенаПлан)
	
	Для каждого стр из  ТекСтрока.Строки Цикл
		стр.СредняяЦенаПлан = СредняяЦенаПлан;
		Стр.суммаПлан = Стр.КоличествоПлан*Стр.СредняяЦенаПлан;
		стр.СуммаНаценкиПлан = стр.СуммаПлан/(100+стр.ПроцентНаценкиПлан)* стр.ПроцентНаценкиПлан;
		стр.ПриростНаценки = стр.СуммаНаценкиПлан-стр.СуммаНаценки;
		РассчитатьСреднююЦенуПланВСтроке(стр,СредняяЦенаПлан);
		пересчетИтогов(стр);
	конеццикла;	
	
конецПроцедуры	
	

Процедура КоманднаяПанель1ПосмотретьВсе(Кнопка)
		Если  РольДоступна("ПравоЗавершенияРаботыПользователей") или глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Серков") Тогда
    	иначеЕсли РольДоступна("ПолныеПрава")тогда 
		ЭлементыФормы.ДеревоПланирования.ТолькоПросмотр = Истина;
	    конецЕсли;	
        КоманднаяПанель1ЗаполнитьИзПлана(Кнопка);


КонецПроцедуры

Процедура ДеревоСводПроцентНаценкиПланПриИзменении(Элемент)
	//устанавливаем значение во всех строках с такойже товарной и номенклатурной группой
	ТекущаяСтрока = ЭлементыФормы.ДеревоСвод.текущиеДанные;
    ПроцентНаценкиПлан = ТекущаяСтрока.ПроцентНаценкиПлан;

	Для каждого стр из ЭлементыФормы.ДеревоПланирования.Значение.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
			стр.процентНаценкиПлан = ПроцентНаценкиПлан;	
			стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
			стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
			
			РассчитатьПроцентНаценкиПлан(стр,ПроцентНаценкиПлан);
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиПроцентНаценкиПлан(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла;
	Для каждого стр из ТекущаяСтрока.Строки Цикл
		Стр.ПроцентНаценкиПлан = ПроцентНаценкиПлан;
		установитьПНСвод(стр,ПроцентНаценкиПлан);
	
	 конеццикла;
КонецПроцедуры
процедура установитьПНСвод(строка,ПроцентНаценкиПлан)
	Для каждого стр из строка.Строки Цикл
		Стр.ПроцентНаценкиПлан = ПроцентНаценкиПлан;
		установитьПНСвод(стр,ПроцентНаценкиПлан);
	 конеццикла;
конецПроцедуры	


процедура проверитьВложенныеСтрокиПроцентНаценкиПлан(строка,текущаяСтрока)
	 	Для каждого стр из строка.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
				ПроцентНаценкиПлан = ТекущаяСтрока.ПроцентНаценкиПлан;
            стр.процентНаценкиПлан = ПроцентНаценкиПлан;
			стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
			стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
			
			РассчитатьПроцентНаценкиПлан(стр,ПроцентНаценкиПлан);
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиПроцентНаценкиПлан(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла;

	
	
	
конецПроцедуры	

Процедура ДеревоСводПриростСреднейЦеныПриИзменении(Элемент)
	//устанавливаем значение во всех строках с такойже товарной и номенклатурной группой
	ТекущаяСтрока = ЭлементыФормы.ДеревоСвод.текущиеДанные;
	ПриростСреднейЦены = ТекущаяСтрока.ПриростСреднейЦены;
	
	Для каждого стр из ЭлементыФормы.ДеревоПланирования.Значение.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
			стр.ПриростСреднейЦены = ПриростСреднейЦены;
			стр.СредняяЦенаПлан = стр.СредняяЦена*(1+ПриростСреднейЦены/100);
			стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
			Если стр.ПроцентНаценкиПлан<>0 Тогда
				стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
				стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
			конецЕсли;
			
			РассчитатьСреднююЦенуПлан(стр,ПриростСреднейЦены);
			
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиПриростСреднейЦены(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла;
	Для каждого стр из ТекущаяСтрока.Строки Цикл
		Стр.ПриростСреднейЦены = ПриростСреднейЦены;
		установитьПСЦСвод(стр,ПриростСреднейЦены);
		
	конеццикла;
КонецПроцедуры
процедура установитьПСЦСвод(строка,ПриростСреднейЦены)
	Для каждого стр из строка.Строки Цикл
		Стр.ПриростСреднейЦены = ПриростСреднейЦены;
		установитьПСЦСвод(стр,ПриростСреднейЦены);
	 конеццикла;
конецПроцедуры	

процедура проверитьВложенныеСтрокиПриростСреднейЦены(строка,текущаяСтрока)
	
	Для каждого стр из строка.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
			ПриростСреднейЦены = ТекущаяСтрока.ПриростСреднейЦены;
			стр.ПриростСреднейЦены = ПриростСреднейЦены;
			стр.СредняяЦенаПлан = стр.СредняяЦена*(1+ПриростСреднейЦены/100);
			стр.СуммаПлан = Стр.КоличествоПлан*стр.СредняяЦенаПлан;
			Если стр.ПроцентНаценкиПлан<>0 Тогда
				стр.СуммаНаценкиПлан=стр.СуммаПлан*стр.ПроцентНаценкиПлан/(100+стр.ПроцентНаценкиПлан);	
				стр.ПриростНаценки = стр.СуммаНаценкиПлан-Стр.СуммаНаценки;
			конецЕсли;
			
			РассчитатьСреднююЦенуПлан(стр,ПриростСреднейЦены);
			
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиПриростСреднейЦены(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла
	
конецПроцедуры	


Процедура ДеревоСводСредняяЦенаПланПриИзменении(Элемент)
	ТекущаяСтрока = ЭлементыФормы.ДеревоСвод.текущиеДанные;
	СредняяЦенаПлан = ТекущаяСтрока.СредняяЦенаПлан;
	
	Для каждого стр из ЭлементыФормы.ДеревоПланирования.Значение.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
			стр.СредняяЦенаПлан = СредняяЦенаПлан;
			ЗаполнитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла;
	Для каждого стр из ТекущаяСтрока.Строки Цикл
		Стр.СредняяЦенаПлан = СредняяЦенаПлан;
		установитьСредняяЦенаПланСвод(стр,СредняяЦенаПлан);		
	конеццикла;

КонецПроцедуры

процедура проверитьВложенныеСтрокиСредняяЦенаПлан(строка,текущаяСтрока)
	
	Для каждого стр из строка.строки цикл
		Если стр.товарнаяГруппа= ТекущаяСтрока.ТоварнаяГруппа и стр.НоменклатурнаяГруппа =ТекущаяСтрока.НоменклатурнаяГруппа тогда
			СредняяЦенаПлан = ТекущаяСтрока.СредняяЦенаПлан;
			стр.СредняяЦенаПлан = СредняяЦенаПлан;
			ЗаполнитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
			пересчетИтогов(стр);
		иначе	
			проверитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
		конецЕсли;	 
	конецЦикла
	
конецПроцедуры
процедура ЗаполнитьВложенныеСтрокиСредняяЦенаПлан(строка,текущаяСтрока)
	
	Для каждого стр из строка.строки цикл
			СредняяЦенаПлан = ТекущаяСтрока.СредняяЦенаПлан;
			стр.СредняяЦенаПлан = СредняяЦенаПлан;
			ЗаполнитьВложенныеСтрокиСредняяЦенаПлан(стр,текущаяСтрока);
			пересчетИтогов(стр);
	конецЦикла;
	
конецПроцедуры	



процедура установитьСредняяЦенаПланСвод(строка,СредняяЦенаПлан)
	Для каждого стр из строка.Строки Цикл
		Стр.СредняяЦенаПлан = СредняяЦенаПлан;
		установитьСредняяЦенаПланСвод(стр,СредняяЦенаПлан);
	 конеццикла;
конецПроцедуры	


Процедура КоманднаяПанель1ЗаполнитьДиски(Кнопка)
	ЗаполнялиДиски =истина;
	Элементыформы.ДеревоПланирования.Колонки.НаправлениеПродаж.ТекстШапки = "Менеджер";
    Элементыформы.ДеревоПланирования.Колонки.НоменклатурнаяГруппа.ТекстШапки = "Период";

	Запрос = Новый Запрос;
	Запрос.Текст = 
		
				"ВЫБРАТЬ
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0) - ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Наценка,
				|	СУММА(ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Себестоимость,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
				|	НАЧАЛОПЕРИОДА(ПродажиОбороты.Регистратор.Дата, МЕСЯЦ) КАК Период
				|ПОМЕСТИТЬ ПродажиПрошлогоГода
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, Регистратор, ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &Диски) КАК ПродажиОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиСебестоимостьОбороты
				|		ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
				|			И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
				|			И ПродажиОбороты.Подразделение = ПродажиСебестоимостьОбороты.Подразделение
				|			И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо,
				|	НАЧАЛОПЕРИОДА(ПродажиОбороты.Регистратор.Дата, МЕСЯЦ)
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппа,
				|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа,
				|	Пользователи.Ссылка КАК Ответственный
				|ПОМЕСТИТЬ Основа
				|ИЗ
				|	Справочник.Пользователи КАК Пользователи,
				|	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
				|ГДЕ
				|	Пользователи.НаправлениеПродаж = &Диски
				|	И ТоварныеГруппыДляПланированияСостав.Ссылка В ИЕРАРХИИ(&ДискиТоварнаяГруппа)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество
				|ПОМЕСТИТЬ ОбщаяСредняяЦена
				|ИЗ
				|	ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПродажиПрошлогоГода.Период КАК НоменклатурнаяГруппа,
				|	Основа.ТоварнаяГруппа КАК ТоварнаяГруппа,
				|	ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицо КАК НаправлениеПродаж,
				|	Основа.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа_,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Сумма,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0) = 0
				|					ТОГДА ВЫБОР
				|							КОГДА ЕСТЬNULL(ОбщаяСредняяЦена.Количество, 0) = 0
				|								ТОГДА 0
				|							ИНАЧЕ ВЫРАЗИТЬ(ОбщаяСредняяЦена.Стоимость / ОбщаяСредняяЦена.Количество КАК ЧИСЛО(15, 2))
				|						КОНЕЦ
				|				ИНАЧЕ ВЫРАЗИТЬ(ПродажиПрошлогоГода.Стоимость / ПродажиПрошлогоГода.Количество КАК ЧИСЛО(15, 2))
				|			КОНЕЦ, 0)) КАК СредняяЦена,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Наценка, 0)) КАК СуммаНаценки,
				|	СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценки,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Себестоимость, 0)) КАК Себестоимость,
				|	ЛОЖЬ КАК Утвержден,
				|	0 КАК ПриростПродажПлан,
				|	0 КАК КоличествоПлан,
				|	0 КАК СуммаПлан,
				|	0 КАК ПриростСреднейЦены,
				|	0 КАК СредняяЦенаПлан,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценкиПлан,
				|	0 КАК СуммаНаценкиПлан,
				|	0 КАК ПриростНаценки
				|ИЗ
				|	Основа КАК Основа
				|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|		ПО Основа.НоменклатурнаяГруппа = ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|			И Основа.Ответственный = ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицо
				|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщаяСредняяЦена КАК ОбщаяСредняяЦена
				|		ПО Основа.НоменклатурнаяГруппа = ОбщаяСредняяЦена.НоменклатурнаяГруппа
				|
				|СГРУППИРОВАТЬ ПО
				|	Основа.ТоварнаяГруппа,
				|	Основа.НоменклатурнаяГруппа,
				|	ПродажиПрошлогоГода.Период,
				|	ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицо
				|
				|УПОРЯДОЧИТЬ ПО
				|	Основа.ТоварнаяГруппа.Наименование
				|ИТОГИ
				|	СУММА(Количество),
				|	СУММА(Сумма),
				|	ВЫБОР
				|		КОГДА СУММА(Количество) = 0
				|			ТОГДА СРЕДНЕЕ(СредняяЦена)
				|		ИНАЧЕ СУММА(Сумма) / СУММА(Количество)
				|	КОНЕЦ КАК СредняяЦена,
				|	СУММА(СуммаНаценки),
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценки,
				|	СУММА(Себестоимость),
				|	МИНИМУМ(Утвержден),
				|	СУММА(ПриростПродажПлан),
				|	СУММА(КоличествоПлан),
				|	СУММА(СуммаПлан),
				|	СУММА(ПриростСреднейЦены),
				|	СУММА(СредняяЦенаПлан),
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценкиПлан,
				|	СУММА(СуммаНаценкиПлан),
				|	СУММА(ПриростНаценки)
				|ПО
				|	ОБЩИЕ,
				|	НаправлениеПродаж,
				|	ТоварнаяГруппа ИЕРАРХИЯ,
				|	НоменклатурнаяГруппа";

	Запрос.УстановитьПараметр("КонПериода",КонецДня(ДобавитьМесяц(КонецПериода,-12)));
	Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	Запрос.УстановитьПараметр("НачПериода", ДобавитьМесяц(НачалоПериода,-12));
	Запрос.УстановитьПараметр("Диски",Справочники.НаправленияПродаж.Диски);
	Запрос.УстановитьПараметр("ДискиТоварнаяГруппа",Справочники.ТоварныеГруппыДляПланирования.НайтиПоКоду("000000001"));
	
	Результат = Запрос.Выполнить();
	Элементыформы.ДеревоПланирования.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
КонецПроцедуры

Процедура ДеревоПланированияКоличествоПланПриИзменении(Элемент)
		стр = ЭлементыФормы.ДеревоПланирования.текущиеДанные;
        Стр.суммаПлан = Стр.КоличествоПлан*Стр.СредняяЦенаПлан;
		стр.СуммаНаценкиПлан = стр.СуммаПлан/(100+стр.ПроцентНаценкиПлан)* стр.ПроцентНаценкиПлан;
		стр.ПриростНаценки = стр.СуммаНаценкиПлан-стр.СуммаНаценки;
		РассчитатьколичествоПланВСтроке(стр,стр.КоличествоПлан);

		пересчетИтогов(стр);	
КонецПроцедуры
	
процедура РассчитатьколичествоПланВСтроке(ТекСтрока,КоличествоПлан)
	
	Для каждого стр из  ТекСтрока.Строки Цикл
		стр.КоличествоПлан = КоличествоПлан;
		Стр.суммаПлан = Стр.КоличествоПлан*Стр.СредняяЦенаПлан;
		стр.СуммаНаценкиПлан = стр.СуммаПлан/(100+стр.ПроцентНаценкиПлан)* стр.ПроцентНаценкиПлан;
		стр.ПриростНаценки = стр.СуммаНаценкиПлан-стр.СуммаНаценки;
		РассчитатьКоличествоПланВСтроке(стр,КоличествоПлан);
		пересчетИтогов(стр);
	конеццикла;	
	
конецПроцедуры	

Процедура КоманднаяПанель1ЗаполнитьАксыИАКБ(Кнопка)
	ЗаполнялиДиски =Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		
				"ВЫБРАТЬ
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0) - ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Наценка,
				|	СУММА(ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Себестоимость,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
				|ПОМЕСТИТЬ ПродажиПрошлогоГода
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиСебестоимостьОбороты
				|		ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
				|			И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
				|			И ПродажиОбороты.Подразделение = ПродажиСебестоимостьОбороты.Подразделение
				|			И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппа,
				|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа,
				|	НаправленияПродаж.Ссылка КАК НаправлениеПродаж
				|ПОМЕСТИТЬ Основа
				|ИЗ
				|	Справочник.НаправленияПродаж КАК НаправленияПродаж,
				|	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
				|ГДЕ
				|	НаправленияПродаж.ЭтоГруппа = ЛОЖЬ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество
				|ПОМЕСТИТЬ ОбщаяСредняяЦена
				|ИЗ
				|	ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|ГДЕ
				|	ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж = &ДепартаментПродаж
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Основа.ТоварнаяГруппа КАК ТоварнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Сумма,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0) = 0
				|					ТОГДА ВЫБОР
				|							КОГДА ЕСТЬNULL(ОбщаяСредняяЦена.Количество, 0) = 0
				|								ТОГДА 0
				|							ИНАЧЕ ВЫРАЗИТЬ(ОбщаяСредняяЦена.Стоимость / ОбщаяСредняяЦена.Количество КАК ЧИСЛО(15, 2))
				|						КОНЕЦ
				|				ИНАЧЕ ВЫРАЗИТЬ(ПродажиПрошлогоГода.Стоимость / ПродажиПрошлогоГода.Количество КАК ЧИСЛО(15, 2))
				|			КОНЕЦ, 0)) КАК СредняяЦена,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Наценка, 0)) КАК СуммаНаценки,
				|	СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценки,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Себестоимость, 0)) КАК Себестоимость,
				|	ЛОЖЬ КАК Утвержден,
				|	0 КАК ПриростПродажПлан,
				|	0 КАК КоличествоПлан,
				|	0 КАК СуммаПлан,
				|	0 КАК ПриростСреднейЦены,
				|	0 КАК СредняяЦенаПлан,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценкиПлан,
				|	0 КАК СуммаНаценкиПлан,
				|	0 КАК ПриростНаценки,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж, Основа.НаправлениеПродаж) КАК НаправлениеПродаж,
				|	Основа.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Наименование, Основа.НаправлениеПродаж.Наименование) КАК ДляСортировки
				|ИЗ
				|	Основа КАК Основа
				|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|		ПО Основа.НаправлениеПродаж = ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж
				|			И Основа.НоменклатурнаяГруппа = ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщаяСредняяЦена КАК ОбщаяСредняяЦена
				|		ПО Основа.НоменклатурнаяГруппа = ОбщаяСредняяЦена.НоменклатурнаяГруппа
				|ГДЕ
				|	Основа.НаправлениеПродаж = &НаправлениеПродаж
				|
				|СГРУППИРОВАТЬ ПО
				|	Основа.ТоварнаяГруппа,
				|	Основа.НоменклатурнаяГруппа,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж, Основа.НаправлениеПродаж),
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Наименование, Основа.НаправлениеПродаж.Наименование)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ДляСортировки,
				|	Основа.ТоварнаяГруппа.Наименование
				|ИТОГИ
				|	СУММА(Количество),
				|	СУММА(Сумма),
				|	ВЫБОР
				|		КОГДА СУММА(Количество) = 0
				|			ТОГДА СРЕДНЕЕ(СредняяЦена)
				|		ИНАЧЕ СУММА(Сумма) / СУММА(Количество)
				|	КОНЕЦ КАК СредняяЦена,
				|	СУММА(СуммаНаценки),
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценки,
				|	СУММА(Себестоимость),
				|	МИНИМУМ(Утвержден),
				|	СУММА(ПриростПродажПлан),
				|	СУММА(КоличествоПлан),
				|	СУММА(СуммаПлан),
				|	СУММА(ПриростСреднейЦены),
				|	СУММА(СредняяЦенаПлан),
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценкиПлан,
				|	СУММА(СуммаНаценкиПлан),
				|	СУММА(ПриростНаценки)
				|ПО
				|	ОБЩИЕ,
				|	НаправлениеПродаж,
				|	ТоварнаяГруппа ИЕРАРХИЯ";

	Запрос.УстановитьПараметр("КонПериода",КонецДня(ДобавитьМесяц(КонецПериода,-12)));
	Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
	Запрос.УстановитьПараметр("НачПериода", ДобавитьМесяц(НачалоПериода,-12));
	Запрос.УстановитьПараметр("НаправлениеПродаж",Справочники.НаправленияПродаж.НайтиПоКоду("15"));
	
	
	
	Результат = Запрос.Выполнить();
	Элементыформы.ДеревоПланирования.Значение = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	

КонецПроцедуры

Процедура КоманднаяПанель1кнРазбитьПоМесяцам(Кнопка)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		
				"ВЫБРАТЬ
				|	ПолугодовойПланДепертаментаПродаж.МесяцПланирования,
				|	ПолугодовойПланДепертаментаПродаж.ТоварнаяГруппа КАК ТоварнаяГруппа,
				|	ПолугодовойПланДепертаментаПродаж.НаправлениеПродаж КАК НаправлениеПродаж,
				|	ПолугодовойПланДепертаментаПродаж.Количество КАК Количество,
				|	ПолугодовойПланДепертаментаПродаж.Сумма КАК Сумма,
				|	ПолугодовойПланДепертаментаПродаж.СредняяЦена КАК СредняяЦена,
				|	ПолугодовойПланДепертаментаПродаж.ПроцентНаценки КАК ПроцентНаценки,
				|	ПолугодовойПланДепертаментаПродаж.СуммаНаценки КАК СуммаНаценки,
				|	ПолугодовойПланДепертаментаПродаж.ПриростПродажПлан КАК ПриростПродажПлан,
				|	ПолугодовойПланДепертаментаПродаж.КоличествоПлан КАК КоличествоПлан,
				|	ПолугодовойПланДепертаментаПродаж.СуммаПлан КАК СуммаПлан,
				|	ПолугодовойПланДепертаментаПродаж.ПриростСреднейЦены КАК ПриростСреднейЦены,
				|	ПолугодовойПланДепертаментаПродаж.СредняяЦенаПлан КАК СредняяЦенаПлан,
				|	ПолугодовойПланДепертаментаПродаж.ПроцентНаценкиПлан КАК ПроцентНаценкиПлан,
				|	ПолугодовойПланДепертаментаПродаж.СуммаНаценкиПлан КАК СуммаНаценкиПлан,
				|	ПолугодовойПланДепертаментаПродаж.ПриростНаценки КАК ПриростНаценки,
				|	ПолугодовойПланДепертаментаПродаж.Себестоимость КАК Себестоимость,
				|	ПолугодовойПланДепертаментаПродаж.СуммаПлан / (100 + ПолугодовойПланДепертаментаПродаж.ПроцентНаценкиПлан) * 100 КАК СебестоимостьПлан,
				|	ПолугодовойПланДепертаментаПродаж.Утвержден КАК Утвержден,
				|	ПолугодовойПланДепертаментаПродаж.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				|	ПолугодовойПланДепертаментаПродаж.ПриростПродажПлан КАК ПриростПродажПланНаправлениеПродаж
				|ПОМЕСТИТЬ втДанныеПланаНаПолугодие
				|ИЗ
				|	РегистрСведений.ПолугодовойПланДепертаментаПродаж КАК ПолугодовойПланДепертаментаПродаж
				|ГДЕ
				|	ПолугодовойПланДепертаментаПродаж.МесяцПланирования = &МесяцПланирования
				|	И ПолугодовойПланДепертаментаПродаж.ТоварнаяГруппа <> ЗНАЧЕНИЕ(Справочник.ТоварныеГруппыДляпланирования.ПустаяСсылка)
				|  //по направлению И ПолугодовойПланДепертаментаПродаж.НаправлениеПродаж В (&НаправлениеПродаж )
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0) - ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Наценка,
				|	СУММА(ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК Себестоимость,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
				|ПОМЕСТИТЬ ПродажиПрошлогоГода
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПродажиСебестоимостьОбороты
				|		ПО ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
				|			И ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
				|			И ПродажиОбороты.Подразделение = ПродажиСебестоимостьОбороты.Подразделение
				|			И ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа,
				|	ПродажиОбороты.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТоварныеГруппыДляПланированияСостав.Ссылка КАК ТоварнаяГруппа,
				|	ТоварныеГруппыДляПланированияСостав.НоменклатурнаяГруппа,
				|	НаправленияПродаж.Ссылка КАК НаправлениеПродаж
				|ПОМЕСТИТЬ Основа
				|ИЗ
				|	Справочник.НаправленияПродаж КАК НаправленияПродаж,
				|	Справочник.ТоварныеГруппыДляПланирования.Состав КАК ТоварныеГруппыДляПланированияСостав
				|ГДЕ
				|	НаправленияПродаж.ЭтоГруппа = ЛОЖЬ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Стоимость,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество
				|ПОМЕСТИТЬ ОбщаяСредняяЦена
				|ИЗ
				|	ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|ГДЕ
				|	ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж В(&ДепартаментПродаж)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Основа.ТоварнаяГруппа КАК ТоварнаяГруппа,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0)) КАК Количество,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Стоимость, 0)) КАК Сумма,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ЕСТЬNULL(ПродажиПрошлогоГода.Количество, 0) = 0
				|					ТОГДА ВЫБОР
				|							КОГДА ЕСТЬNULL(ОбщаяСредняяЦена.Количество, 0) = 0
				|								ТОГДА 0
				|							ИНАЧЕ ВЫРАЗИТЬ(ОбщаяСредняяЦена.Стоимость / ОбщаяСредняяЦена.Количество КАК ЧИСЛО(15, 2))
				|						КОНЕЦ
				|				ИНАЧЕ ВЫРАЗИТЬ(ПродажиПрошлогоГода.Стоимость / ПродажиПрошлогоГода.Количество КАК ЧИСЛО(15, 2))
				|			КОНЕЦ, 0)) КАК СредняяЦена,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Наценка, 0)) КАК СуммаНаценки,
				|	СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценки,
				|	СУММА(ЕСТЬNULL(ПродажиПрошлогоГода.Себестоимость, 0)) КАК Себестоимость,
				|	ЛОЖЬ КАК Утвержден,
				|	0 КАК ПриростПродажПлан,
				|	СУММА(ВЫБОР
				|			КОГДА втДанныеПланаНаПолугодие.Количество <> 0
				|				ТОГДА втДанныеПланаНаПолугодие.КоличествоПлан * ПродажиПрошлогоГода.Количество / втДанныеПланаНаПолугодие.Количество
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК КоличествоПлан,
				|	СУММА(ВЫБОР
				|			КОГДА втДанныеПланаНаПолугодие.Сумма <> 0
				|				ТОГДА втДанныеПланаНаПолугодие.СуммаПлан * ПродажиПрошлогоГода.Стоимость / втДанныеПланаНаПолугодие.Сумма
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаПлан,
				|	0 КАК ПриростСреднейЦены,
				|	СУММА(ВЫБОР
				|			КОГДА ВЫБОР
				|					КОГДА втДанныеПланаНаПолугодие.Количество <> 0
				|						ТОГДА втДанныеПланаНаПолугодие.КоличествоПлан * ПродажиПрошлогоГода.Количество / втДанныеПланаНаПолугодие.Количество
				|					ИНАЧЕ 0
				|				КОНЕЦ <> 0
				|				ТОГДА ВЫБОР
				|						КОГДА втДанныеПланаНаПолугодие.Сумма <> 0
				|							ТОГДА втДанныеПланаНаПолугодие.СуммаПлан * ПродажиПрошлогоГода.Стоимость / втДанныеПланаНаПолугодие.Сумма
				|						ИНАЧЕ 0
				|					КОНЕЦ / ВЫБОР
				|						КОГДА втДанныеПланаНаПолугодие.Количество <> 0
				|							ТОГДА втДанныеПланаНаПолугодие.КоличествоПлан * ПродажиПрошлогоГода.Количество / втДанныеПланаНаПолугодие.Количество
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СредняяЦенаПлан,
				|	СУММА(ЕСТЬNULL(ВЫБОР
				|				КОГДА ПродажиПрошлогоГода.Себестоимость = 0
				|					ТОГДА 0
				|				ИНАЧЕ ПродажиПрошлогоГода.Наценка / ПродажиПрошлогоГода.Себестоимость * 100
				|			КОНЕЦ, 0)) КАК ПроцентНаценкиПлан,
				|	СУММА(ВЫБОР
				|			КОГДА втДанныеПланаНаПолугодие.СуммаНаценки <> 0
				|				ТОГДА втДанныеПланаНаПолугодие.СуммаНаценкиПлан * ПродажиПрошлогоГода.Наценка / втДанныеПланаНаПолугодие.СуммаНаценки
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаНаценкиПлан,
				|	СУММА(ВЫБОР
				|			КОГДА втДанныеПланаНаПолугодие.СуммаНаценки <> 0
				|				ТОГДА втДанныеПланаНаПолугодие.СуммаНаценкиПлан * ПродажиПрошлогоГода.Наценка / втДанныеПланаНаПолугодие.СуммаНаценки
				|			ИНАЧЕ 0
				|		КОНЕЦ - ПродажиПрошлогоГода.Наценка) КАК ПриростНаценки,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж, Основа.НаправлениеПродаж) КАК НаправлениеПродаж,
				|	Основа.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПоказатели,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Наименование, Основа.НаправлениеПродаж.Наименование) КАК ДляСортировки
				|ИЗ
				|	Основа КАК Основа
				|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПрошлогоГода КАК ПродажиПрошлогоГода
				|		ПО Основа.НаправлениеПродаж = ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж
				|			И Основа.НоменклатурнаяГруппа = ПродажиПрошлогоГода.НоменклатурнаяГруппа
				|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщаяСредняяЦена КАК ОбщаяСредняяЦена
				|		ПО Основа.НоменклатурнаяГруппа = ОбщаяСредняяЦена.НоменклатурнаяГруппа
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеПланаНаПолугодие КАК втДанныеПланаНаПолугодие
				|		ПО Основа.НаправлениеПродаж = втДанныеПланаНаПолугодие.НаправлениеПродаж
				|			И Основа.НоменклатурнаяГруппа = втДанныеПланаНаПолугодие.НоменклатурнаяГруппа
				|			И Основа.ТоварнаяГруппа = втДанныеПланаНаПолугодие.ТоварнаяГруппа
				|ГДЕ
				|	НЕ Основа.НаправлениеПродаж В (&НаправлениеПродажУбрать)
				|	//по направлению И Основа.НаправлениеПродаж В (&НаправлениеПродаж )
				|
				|СГРУППИРОВАТЬ ПО
				|	Основа.ТоварнаяГруппа,
				|	Основа.НоменклатурнаяГруппа,
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж, Основа.НаправлениеПродаж),
				|	ЕСТЬNULL(ПродажиПрошлогоГода.ДоговорКонтрагентаОтветственноеЛицоНаправлениеПродаж.Наименование, Основа.НаправлениеПродаж.Наименование)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ДляСортировки,
				|	Основа.ТоварнаяГруппа.Наименование
				|ИТОГИ
				|	СУММА(Количество),
				|	СУММА(Сумма),
				|	ВЫБОР
				|		КОГДА СУММА(Количество) = 0
				|			ТОГДА СРЕДНЕЕ(СредняяЦена)
				|		ИНАЧЕ СУММА(Сумма) / СУММА(Количество)
				|	КОНЕЦ КАК СредняяЦена,
				|	СУММА(СуммаНаценки),
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценки,
				|	СУММА(Себестоимость),
				|	МИНИМУМ(Утвержден),
				|	СУММА(ПриростПродажПлан),
				|	СУММА(КоличествоПлан),
				|	СУММА(СуммаПлан),
				|	СУММА(ПриростСреднейЦены),
				|	ВЫБОР
				|		КОГДА СУММА(КоличествоПлан) = 0
				|			ТОГДА СРЕДНЕЕ(СредняяЦенаПлан)
				|		ИНАЧЕ СУММА(СуммаПлан) / СУММА(КоличествоПлан)
				|	КОНЕЦ КАК СредняяЦенаПлан,
				|	ВЫБОР
				|		КОГДА СУММА(Себестоимость) = 0
				|			ТОГДА 0
				|		ИНАЧЕ СУММА(СуммаНаценки) / СУММА(Себестоимость) * 100
				|	КОНЕЦ КАК ПроцентНаценкиПлан,
				|	СУММА(СуммаНаценкиПлан),
				|	СУММА(ПриростНаценки)
				|ПО
				|	ОБЩИЕ,
				|	НаправлениеПродаж,
				|	ТоварнаяГруппа ИЕРАРХИЯ";

	СписокНаправлениеПродажУбрать = Новый СписокЗначений;
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(10));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(10));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(11));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(15));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(16));
	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.НайтиПоКоду(27));

	СписокНаправлениеПродажУбрать.Добавить(Справочники.НаправленияПродаж.ПустаяСсылка());

	Запрос.УстановитьПараметр("НаправлениеПродажУбрать",СписокНаправлениеПродажУбрать);
	
	
	//Заполним список направлений для расчета средней цены по департаменту
	ЗапросН = Новый Запрос;
	ЗапросН.Текст = 
		"ВЫБРАТЬ
		|	НаправленияПродаж.Ссылка как Направление
		|ИЗ
		|	Справочник.НаправленияПродаж КАК НаправленияПродаж
		|ГДЕ
		|	НаправленияПродаж.Код <> 15
		|	И НаправленияПродаж.Код <> 16";

	Результат = ЗапросН.Выполнить();

	ДепартаментПродаж = Результат.Выгрузить().ВыгрузитьКолонку("Направление");
    Запрос.УстановитьПараметр("ДепартаментПродаж",ДепартаментПродаж);

	
	Если не РольДоступна("ПолныеПрава") или ЗначениеЗаполнено(НаправлениеПродаж)  Тогда
		Если ЗначениеЗаполнено(НаправлениеПродаж) Тогда
	    	СписокНаправлениеПродаж = Новый СписокЗначений;
			СписокНаправлениеПродаж.Добавить(НаправлениеПродаж);
		иначе
			ЗапросНП = Новый Запрос;
			ЗапросНП.Текст = 
			"ВЫБРАТЬ
			|	НаправленияПродаж.Ссылка
			|ИЗ
			|	Справочник.НаправленияПродаж КАК НаправленияПродаж
			|ГДЕ
			|	НаправленияПродаж.ОтветственныйЗаПланирование = &ОтветственныйЗаПланирование";
			
			ЗапросНП.УстановитьПараметр("ОтветственныйЗаПланирование", глТекущийПользователь);
			
			РезультатНП = ЗапросНП.Выполнить().Выгрузить();
			
			СписокНаправлениеПродаж = РезультатНП.ВыгрузитьКолонку("Ссылка");
		конецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//по направлению","");
		Запрос.УстановитьПараметр("НаправлениеПродаж",СписокНаправлениеПродаж);
	конецЕсли;	
	

	
	к=0;
	пока к <6 цикл
		Запрос.УстановитьПараметр("НачПериода", ДобавитьМесяц(НачалоПериода,-12+к));
		Запрос.УстановитьПараметр("КонПериода",КонецМесяца(Запрос.Параметры.НачПериода));
		Запрос.УстановитьПараметр("МесяцПланирования",НачалоПериода);
		
		Результат = Запрос.Выполнить();
		
		
		ДеревоЗначенийМесяц = ЭлементыФормы.ДеревоПланирования.Значение.Скопировать();
		
		ДеревоЗначенийМесяц = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
        //удалим предыдущие записи
		НаборЗаписей = РегистрыСведений.МесячныйПланДепортаментаПродаж.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.МесяцПланирования.Установить(ДобавитьМесяц(Запрос.Параметры.НачПериода,12));
		НаборЗаписей.Записать();

		ЗаписатьВРегистрМесячныйПлан(ДеревоЗначенийМесяц,ложь,ДобавитьМесяц(Запрос.Параметры.НачПериода,12));
		к=к+1;
	КонецЦикла;
	
КонецПроцедуры
