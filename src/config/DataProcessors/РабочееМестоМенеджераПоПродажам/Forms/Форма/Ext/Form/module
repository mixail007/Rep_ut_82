
Перем ВидТовара, ТипЦенКлиента;

Перем ГоловноеПодразделение;
Перем мОформляемыеДокументы;

Перем ДатаПоследнегоЧтенияПараметров, СписАкцияАКБ, СписРаспродажаДиски, КонтрагентРаспродажа, КонтрагентуРазрешенСерыйСписок, СписСтоп, СписСтопЧерный ;


// Процедура устанавливает в поле картинки основное изображение номенклатуры
//как в форме Списка номенклатуры
Процедура ПоказатьОсновноеИзображениеЭлемента(эл) 
	
	Если Флажок1     //+++ 29.09.2015 - как в карточке товара!
		и НЕ ЗначениеНеЗаполнено(эл) Тогда
      форма = эл.получитьФорму("ФормаЭлемента");
	  форма.ПоказатьОсновноеИзображение();
	  ЭлементыФормы.ПолеHTMLДокумента.УстановитьТекст( форма.ЭлементыФормы.ПолеHTMLДокумента.ПолучитьТекст() );
	Иначе
		ЭлементыФормы.ПолеHTMLДокумента.УстановитьТекст("");
	КонецЕсли;
	
КонецПроцедуры // ПоказатьОсновноеИзображение()


Процедура КнопкаВыполнитьНажатие(Кнопка)
КонецПроцедуры


Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
			
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ДобавитьДанныеВДокументПоВыборуСтроки(, СтандартнаяОбработка);
		
		РасшифроватьЯчейку(ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура,Колонка.Имя) //24.07.2017
	КонецЕсли; 

КонецПроцедуры

Процедура ДобавитьДанныеВДокументПоВыборуСтроки(СтруктураДанных = Неопределено, СтандартнаяОбработка)
	
	Если мОформляемыеДокументы.Количество() > 0 Тогда
	
		СтандартнаяОбработка = Ложь;
	
		СтрокаВыбораРедактируемогоДокумента = ВыбратьРедактируемыйДокумент();
		Если СтрокаВыбораРедактируемогоДокумента <> Неопределено Тогда
			Если СтруктураДанных = Неопределено Тогда
				СтруктураДанных = ПолучитьСтруктуруЗначенийНоменклатуры(СтрокаВыбораРедактируемогоДокумента.Объект);
			КонецЕсли;
			ДобавитьСтрокуВТабличнуюЧастьЗаказа(СтруктураДанных,  "Товары", СтрокаВыбораРедактируемогоДокумента.Объект, СтрокаВыбораРедактируемогоДокумента.Форма);
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры


Функция ВыбратьРедактируемыйДокумент()

	Если мОформляемыеДокументы.Количество() > 0 Тогда
		
	Возврат мОформляемыеДокументы[мОформляемыеДокументы.Количество()-1];
	
    КонецЕсли;
	
	//Если мОформляемыеДокументы.Количество() = 1 Тогда
	//	
	//	Возврат мОформляемыеДокументы[0];
	//	
	//Иначе
	//	
	//	СписокВыбора = Новый СписокЗначений;
	//	
	//	Для каждого СтрокаТЗ Из мОформляемыеДокументы Цикл
	//		ПредставлениеДокумента = СтрокаТЗ.Объект.Метаданные().Синоним + " №" + СтрокаТЗ.Объект.Номер + " от " + СтрокаТЗ.Объект.Дата + ?(НЕ ЗначениеНеЗаполнено(СтрокаТЗ.Объект.Контрагент), (", " + СтрокаТЗ.Объект.Контрагент), "");
	//		СписокВыбора.Добавить(СтрокаТЗ, ПредставлениеДокумента);
	//	КонецЦикла;
	//	
	//	ВыбранноеЗначение = СписокВыбора.ВыбратьЭлемент("Выберите документ для добавления номенклатуры");
	//	
	//	Если ВыбранноеЗначение <> Неопределено Тогда
	//		Возврат ВыбранноеЗначение.Значение
	//	Иначе
	//		Возврат Неопределено;
	//	КонецЕсли; 
	//	
	//КонецЕсли; 

КонецФункции // ВыбратьРедактируемыйДокумент()

Функция ПолучитьСтруктуруЗначенийНоменклатуры(ВыбранныйДокумент)

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Номенклатура"              , ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТипЦен"                    , ВыбранныйДокумент.ТипЦен);
	
//18.11.2016	
	//Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	//|	Цена             КАК ЦенаНоменклатуры
	//|ИЗ
	//|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних (,Номенклатура = &Номенклатура И ТипЦен = &ТипЦен)";
	//ВыборкаТабл = Запрос.Выполнить().выгрузить();
	
//+++( 18.11.2016 ---- Перс. цена клиента или по Общему правилу ------
списТов = новый СписокЗначений;
списТов.Добавить( ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура );
Выборка = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв( Контрагент, списТов );

Если Выборка.Количество()>0 тогда //29.03.2017
	ЦенаТовара = ?(Предоплата, Выборка[0].ЦенаСоСкидкойПредоплаты, Выборка[0].МинимальнаяЦена);
иначе
    ЦенаТовара = 0;
КонецЕсли;	
//+++)	
	
	
	СтруктураЗначений = Новый Структура;
	СтруктураЗначений.Вставить("Номенклатура"              , ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура);
	СтруктураЗначений.Вставить("ХарактеристикаНоменклатуры", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());

	
	
	Если Выборка.Количество() > 0 Тогда
		//Выборка.Следующий();
		СтруктураЗначений.Вставить("ВалютаЦены"                , Константы.ВалютаУправленческогоУчета.Получить());
	//18.11.2016 - цена клиента СРАЗУ!	
	//	СтруктураЗначений.Вставить("ЦенаНоменклатуры"          , Выборка.ЦенаНоменклатуры);
		СтруктураЗначений.Вставить("ЦенаНоменклатуры"          , ЦенаТовара);
		
		СтруктураЗначений.Вставить("КурсВалюты"                , 1);
		СтруктураЗначений.Вставить("КратностьВалюты"           , 1);
		СтруктураЗначений.Вставить("ЕдиницаЦены"               , ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура.ЕдиницаХраненияОстатков);
	Иначе
		СтруктураЗначений.Вставить("ВалютаЦены"                , Справочники.Валюты.ПустаяСсылка());
		СтруктураЗначений.Вставить("ЦенаНоменклатуры"          , 0);
		СтруктураЗначений.Вставить("КурсВалюты"                , 0);
		СтруктураЗначений.Вставить("КратностьВалюты"           , 0);
		СтруктураЗначений.Вставить("ЕдиницаЦены"               , ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура.ЕдиницаХраненияОстатков);
	КонецЕсли;
	
	Возврат СтруктураЗначений;

КонецФункции // ПолучитьСтруктуруЗначенийНоменклатуры()()

Процедура ПриОткрытии()
	
	ТипЦенКлиента = "Цена клиента";
	//+++ 14.10.2014 -------------------------------------------------
	Филиал = яштПоставщики.ПолучитьМассивФилиалов();
	для i=0 по Филиал.Количество()-1 цикл
		ЭлементыФормы.Подразделение.СписокВыбора.Добавить( Филиал[i] );
	КонецЦикла;
	
	Если ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение.ОбособленноеПодразделение тогда
		Подразделение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
	иначе	
		Подразделение = ГоловноеПодразделение;
	КонецЕсли;	
	
	//30.09.2015 - все параметры 1 раз при выборе параметров!
    ПеречитатьПроизводителей(Истина, 0); //по всем видам - сразу
	//черные и серые списки, АКБ распродажа - перенесена внутрь ПеречитатьПроизводителей()
	
	УстановитьВидимость();
	
	ДатаПоследнегоЧтенияПараметров = ТекущаяДата();
	
КонецПроцедуры

Процедура ЗагрузитьДанныеПоТоварам()
//+++( 21.07.2014 - всегда!
	  ЗагрузитьДанныеПоТоварамИПоставщика();
	  возврат;
КонецПроцедуры	

 
Процедура ЗагрузитьДанныеПоТоварамИПоставщика()
	Запрос =Новый Запрос;
	//20.02.2017 - для упрощения запроса
	флТранзит = ( ЗначениеЗаполнено(Подразделение) и Подразделение <> ГоловноеПодразделение);
	Запрос.УстановитьПараметр("Транзит", флТранзит  ) ;
	
	Запрос.Текст =" ВЫБРАТЬ 
				  |закПок.Номенклатура, закПок.КоличествоОстаток
				  |Поместить ВТ_Заказы
				  |из РегистрНакопления.ЗаказыПокупателей.Остатки( , Номенклатура.ВидТовара = &ВидТовара //НоменклатурнаяГруппа И Номенклатура.НоменклатурнаяГруппа = &НомГр
	     		  |			И ЗаказПокупателя.Проверен
				
				//уменьшает выборку числа заказов в разы!
			  	  |			И ЗаказПокупателя.Проведен
				  
			  	  |			И ЗаказПокупателя.Транзит "+?(флТранзит,"И ЗаказПокупателя.Подразделение=&Подразделение","= ЛОЖЬ")+"
			      | //ОТБОРТОВАРЫ
				  
                  |) как закПок
				 //НУЖНА индексация!
				 |Индексировать по закПок.Номенклатура
				  |;
				  |
				  |/////////////////////////////////////////////////////////////////////////
				  |
				  |ВЫБРАТЬ
	              |	А.Номенклатура,
	              |	СУММА(ВЫБОР
				  //+++ 28.09.2016 --- "нормальный" остаток с незапрещенных складов и без Типа...---------------------
	              |			КОГДА А.Склад.ЗапретитьИспользование=ЛОЖЬ
	              |				И А.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ПустаяСсылка)
				  //-----------------------------------------------------------------------------------------
				  |				ТОГДА А.КоличествоОстаток
	              |			ИНАЧЕ 0
	              |		КОНЕЦ) КАК КоличествоОстаток,
	              |	СУММА(ВЫБОР
	              |			КОГДА А.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ВПути)
	              |				ТОГДА А.КоличествоОстаток
	              |			ИНАЧЕ 0
	              |		КОНЕЦ) КАК КоличествоВПути,
	              |	СУММА(ВЫБОР
	              |			КОГДА А.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.Ошиповка)
	              |				ТОГДА А.КоличествоОстаток
	              |			ИНАЧЕ 0
	              |		КОНЕЦ) КАК КоличествоНаОшиповке
	              |ПОМЕСТИТЬ ВТ_Остатки
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ТоварыНаСкладахОстатки.Склад КАК Склад,
	              |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	              |		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	              |	ИЗ
	              |		РегистрНакопления.ТоварыНаСкладах.Остатки(,Номенклатура.ВидТовара = &ВидТовара
				  |                 //НоменклатурнаяГруппа И Номенклатура.НоменклатурнаяГруппа = &НомГр
				  //20.02.2017 - упрощение запроса
				  |					И Склад.Транзитный "+?(флТранзит,"И Склад.Подразделение=&Подразделение","= ЛОЖЬ")+"
				  
				  //+++ 28.09.2016 --- "нормальный" остаток с незапрещенных складов или с Типом...---------------------
	              |					И (Склад.ЗапретитьИспользование=ЛОЖЬ
				  |					   ИЛИ Склад.ТипСклада <> ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ПустаяСсылка)
				  |						)
				  | //ОТБОРТОВАРЫ
				  |) КАК ТоварыНаСкладахОстатки) КАК А
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	А.Номенклатура
				  //НУЖНА индексация!
				  |Индексировать по А.Номенклатура
	              |;
	              |
				  
				  //==============================через виртуальную таблицу быстрее=============================
				     |		ВЫБРАТЬ
					|	ОстаткиНоменклатурыКонтрагентов.Номенклатура,
					|	СУММА(ЕСТЬNULL(ОстаткиНоменклатурыКонтрагентов.Остаток, 0)) как Остаток,
					|	МАКСИМУМ(ЕСТЬNULL(СрокиДоставки.СрокДоставки, 0)) как СрокДоставки
			      |ПОМЕСТИТЬ ВТ_ОстаткиПоставщиков
                    |
					|ИЗ
					|		РегистрСведений.ОстаткиНоменклатурыКонтрагентов КАК ОстаткиНоменклатурыКонтрагентов
					|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиДоставки как СрокиДоставки
					|	ПО ОстаткиНоменклатурыКонтрагентов.Контрагент = СрокиДоставки.Поставщик
					|ГДЕ
					|	ОстаткиНоменклатурыКонтрагентов.Номенклатура.ВидТовара = &ВидТовара //НоменклатурнаяГруппа И ОстаткиНоменклатурыКонтрагентов.Номенклатура.НоменклатурнаяГруппа = &НомГр
					//28.11.2016
					|	    И ОстаткиНоменклатурыКонтрагентов.Контрагент в (&СписокСтороннихПоставщиков)
					|	    И ОстаткиНоменклатурыКонтрагентов.Остаток>0
					|		И СрокиДоставки.ОТХ=ЛОЖЬ
					//++++ 10.09.2014 отбор только по Поставщикам филиала или ЯШТ
				  |			И ОстаткиНоменклатурыКонтрагентов.Подразделение = &Подразделение
				  |//ОТБОРТОВАРЫ_поставщики
				  |
				//++++ группировка по всем Поставщикам - остаток общий, срок доставки - максимальный
					|СГРУППИРОВАТЬ ПО
					|	ОстаткиНоменклатурыКонтрагентов.Номенклатура
					//здесь ТОЖЕ надо!
					|Индексировать по ОстаткиНоменклатурыКонтрагентов.Номенклатура
	         	   |;
					  //==============================через виртуальную таблицу быстрее=============================
			  
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
				  
				  //+++ 21.11.2017 - полное соединение - то чего нет, но "в пути" по заказам ОТХ!
	              |	ЕСТЬNULL(Остатки.Номенклатура.Код, ЕстьNull(ЗаказыПоставщикамОстатки.Номенклатура.Код, ЗаказыОТХ.Номенклатура.Код)) КАК Код,
				  |	ЕСТЬNULL(Остатки.Номенклатура.Артикул, ЕстьNull(ЗаказыПоставщикамОстатки.Номенклатура.Артикул, ЗаказыОТХ.Номенклатура.Артикул)) КАК Артикул,
			      |	ЕСТЬNULL(Остатки.Номенклатура, ЕстьNull(ЗаказыПоставщикамОстатки.Номенклатура, ЗаказыОТХ.Номенклатура)) КАК Номенклатура,
				  
	              |	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	              |	ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КоличествоЗаказано,
	              |	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстаток,
				  
				  //+++( 29.10.2014
	              |//ПоказатьРазгрузку	
				  //|ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) КАК КоличествоВПути1,
				  //+++)
				  
				  |	ЕСТЬNULL(Остатки.КоличествоВПути, 0) КАК КоличествоВПути2,
	              |	ЕСТЬNULL(Остатки.КоличествоНаОшиповке, 0) КАК КоличествоНаОшиповке,
	              |	ЕСТЬNULL(Остатки.КоличествоОтветХранение, 0) КАК КоличествоОтветХранение,
	              | Остатки.уПоставщиков КАК уПоставщиков,
	              | Остатки.СрокДоставки КАК СрокДоставки,
				  
				  //+++ 21.11.2017
				  |	ЕСТЬNULL(Остатки.Номенклатура.ВидДефектаДляУценки, ЕстьNull(ЗаказыПоставщикамОстатки.Номенклатура.ВидДефектаДляУценки,ЗаказыОТХ.Номенклатура.ВидДефектаДляУценки)) как ВидДефектаДляУценки 
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		А.Номенклатура КАК Номенклатура,
	              |		СУММА(А.КоличествоОстаток) КАК КоличествоОстаток,
	              |		СУММА(А.КоличествоВПути) КАК КоличествоВПути,
	              |		СУММА(А.КОличествоНаОшиповке) КАК КоличествоНаОшиповке,
	              |		СУММА(А.КоличествоОтветХранение) КАК КоличествоОтветХранение,
				  |		СУММА(А.КоличествоУПоставщиков) КАК уПоставщиков,
				  |     Максимум(А.СрокДоставки) как СрокДоставки
	              |	ИЗ
	              |		(
				  //+++ 14.09.2017 ОБЪЕДИНИТЬ >> ОБЪЕДИНИТЬ ВСЕ
				  //Настоятельно рекомендуется использовать ОБЪЕДИНИТЬ ВСЕ в запросах, 
				  //где заведомо невозможно получения одинаковых строк. 
				  //Это существенно повышает производительность – система не пытается группировать строки.
                  |		
	              |		ВЫБРАТЬ
	              |			ВТ_Остатки.Номенклатура,
	              |			ВТ_Остатки.КоличествоОстаток,
	              |			ВТ_Остатки.КоличествоВПути,
	              |			ВТ_Остатки.КоличествоНаОшиповке,
	              |			0 КАК КоличествоОтветХранение,
				  |			0 КАК КоличествоУПоставщиков,
	              |			0 КАК СрокДоставки
	              |		ИЗ
	              |			ВТ_Остатки КАК ВТ_Остатки
	              |		
	              |		ОБЪЕДИНИТЬ ВСЕ
	              |		
	              |		ВЫБРАТЬ
					|	ВТ_ОстНомПост.Номенклатура,
					|	0,
					|	0,
					|	0,
					|	0,
					|	ВТ_ОстНомПост.Остаток,
					|	ВТ_ОстНомПост.СрокДоставки
		
					|ИЗ  ВТ_ОстаткиПоставщиков как ВТ_ОстНомПост
					
                 //=======26.03.2018 - 27.03.2017 для Шин и Прочего! =================================================================
				|" + ?(ВидТовара="Шины" или ВидТовара="Прочее" 
				
				//+++ 24.10.2018 --- Коширенков А.Задача № 57326 - грузовые диски на ОТХ! 9271121 ---------------
					или ВидТовара="Диски", "	
				  |		ОБЪЕДИНИТЬ ВСЕ
	           	  |	ВЫБРАТЬ
	              |			ТоварыНаОтветственномХраненииОстатки.Номенклатура КАК Номенклатура,
	              |			0 КАК КоличествоОстаток,
	              |			0 КАК КоличествоВПути,
	              |			0 КАК КОличествоНаОшиповке,
	              |			ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток КАК КоличествоОтветХранение,
				  
	              |			0 КАК КоличествоУПоставщиков,
	              |			0 КАК СрокДоставки
	              |		ИЗ
	              |			РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(, Номенклатура.ВидТовара = &ВидТовара //НоменклатурнаяГруппа И Номенклатура.НоменклатурнаяГруппа = &НомГр
				  |						И Контрагент В (&СписокКонтрагентовОТХ)
			    				  //20.02.2017 - упрощение запроса                                                   //24.10.2018 - Пустое!
				  |				И Склад.Транзитный "+?(флТранзит,"И Склад.Подразделение=&Подразделение","= ЛОЖЬ и Склад.Подразделение=&Пустое")+"
 	              |				И Склад.ЗапретитьИспользование=ЛОЖЬ
				  
	        	  | //ОТБОРТОВАРЫ
				  |			) КАК ТоварыНаОтветственномХраненииОстатки
	              |","")+"	
                 //=========================================================================================
				  |				) КАК А
	              |	
	              |	СГРУППИРОВАТЬ ПО
				  |		А.Номенклатура) КАК Остатки
				  |
					  
		//+++ 16 - 21.11.2017 = 22.11.2017 ТОЛЬКО ПО Ярославлю! для кузьмичёвой по задаче № 35864   --------------------------------------------------
				 |"+?(флТранзит=Истина,"", "
				 |
				 |ПОЛНОЕ СОЕДИНЕНИЕ (	
				 |		ВЫБРАТЬ
	              |			ЗакОТХтовары.Номенклатура как Номенклатура,
	              |			Сумма(ЗакОТХтовары.Количество) как Количество
	              |		ИЗ
	              |			Документ.ЗаказПоОтветственномуХранению.Товары как ЗакОТХтовары
				  |		ГДЕ
				  |			ЗакОТХтовары.Номенклатура.ВидТовара = &ВидТовара 
				  
				  |			//НоменклатурнаяГруппа И ЗакОТХтовары.Номенклатура.НоменклатурнаяГруппа = &НомГр
				  |
                  |//ОТБОРТОВ_ОТХ
				  |
				  |			И ЗакОТХтовары.Ссылка В (
				  
				  	   |	ВЫБРАТЬ ЗакОТХ.Ссылка
					   |ИЗ Документ.ЗаказПоОтветственномуХранению КАК ЗакОТХ
				   	   |		ЛЕВОЕ СОЕДИНЕНИЕ 
					   |			РегистрНакопления.ТоварыНаОтветственномХранении.Обороты(&ОдинМесяц, ,Регистратор,
				   	   |				Номенклатура.ВидТовара = &ВидТовара
					   |			   //ОТБОРТОВАРЫ
				   	   |					И Контрагент В (&СписокКонтрагентовОТХ)
					   																										//24.10.2018 - Пустое!
				   	   |					И Склад.Транзитный "+?(флТранзит,"И Склад.Подразделение=&Подразделение","= ЛОЖЬ и Склад.Подразделение=&Пустое")+"
					   |				) КАК ТоварыОТХОбороты
				   	   |		ПО ВЫРАЗИТЬ(ТоварыОТХОбороты.Регистратор КАК Документ.ОперацияПоОтветственномуХранению).ДокументОснование = ЗакОТХ.Ссылка
				   	   |ГДЕ
				   	   |	ЗакОТХ.Дата >= &ОдинМесяц
				   	   |	И ЗакОТХ.Проведен
				   	   |	И ЗакОТХ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоОтветственномуХранению.Поступление)
				   	   |	И ЗакОТХ.Контрагент В (&СписокКонтрагентовОТХ)
				   	   |	И ( ЗакОТХ.Подразделение = &Подразделение 
					   //+++ 12.02.2019 --- бывает и так и сяк! ---
					   |	  или ЗакОТХ.Подразделение = Значение(Справочник.Подразделения.ПустаяСсылка) 
					   |	  )
				   	   |	И ЕСТЬNULL(ТоварыОТХОбороты.КоличествоОборот, 0) = 0    
					   
					   | )
                  |СГРУППИРОВАТЬ ПО
				  |ЗакОТХтовары.Номенклатура ) как ЗаказыОТХ
				  |ПО Остатки.Номенклатура = ЗаказыОТХ.Номенклатура
				  |") + "
	 //+++)-----------------------------------------------------------------------------------------------------------
				  
				   //30.05.2018 - подзапрос! число записей с 20 млн. до 
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ЗаказыПокупателейОстатки
	              |		ПО Остатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
				  
	              |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки( ,ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ и Номенклатура.ВидТовара = &ВидТовара //НоменклатурнаяГруппа И Номенклатура.НоменклатурнаяГруппа = &НомГр
	            	  //20.02.2017 - упрощение запроса
				  |		И ЗаказПоставщику.Транзит "+?(флТранзит,"И ЗаказПоставщику.Подразделение = &Подразделение","= ЛОЖЬ")+"
			 
			 //+++ 01.09.2014
             |И ЗаказПоставщику.ДатаПоступления>=&МинДатаПоступления
			 
				  | //ОТБОРТОВАРЫ
				  |) КАК ЗаказыПоставщикамОстатки
	              |		ПО Остатки.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
	              |
				  |//ТоварыРазгружаютсяУжеНаСкладеЯШТ
				  |//ТоварыВПутивЯрославлеДляФилиала
				  |//Упорядочивание
	       	      |			          
	              |	
			//+++ 31.03.2015 учичтожаем явно виртуальные таблицы!	  
				  |;
				  |УНИЧТОЖИТЬ ВТ_Остатки;
				  |УНИЧТОЖИТЬ ВТ_ОстаткиПоставщиков;
				  |УНИЧТОЖИТЬ ВТ_Заказы;";
				  
Запрос.УстановитьПараметр("Пустое", справочники.Подразделения.ПустаяСсылка() );//+++ 24.10.2018

//+++( 29.10.2014 - только для Ярославля - только по дискам!				  
Если  ЗначениеНеЗаполнено(Подразделение) или Подразделение = ГоловноеПодразделение Тогда
СписокСтороннихПоставщиков =яштПоставщики.ПолучитьСписокПоставщиков();	 //20.11.2017	ЗаказыОТХ		  
	Запрос.Текст = стрЗаменить(Запрос.Текст, "//ПоказатьРазгрузку",
	"ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаданиеНаОтгрузкуПриход.КоличествоРазгружается,0) + ЕСТЬNULL(ЗаказыОТХ.Количество,0) КАК КоличествоВПути1,
	|ЕСТЬNULL(ЗаданиеНаОтгрузкуПриход.КоличествоРазгружается,0) как КоличествоРазгружается,");
	
	
	Запрос.Текст = стрЗаменить(Запрос.Текст, "//ТоварыРазгружаютсяУжеНаСкладеЯШТ",
	"ЛЕВОЕ СОЕДИНЕНИЕ ("+" ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.Номенклатура,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоРазгружается
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(,ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ и Номенклатура.ВидТовара = &ВидТовара //НоменклатурнаяГруппа И Номенклатура.НоменклатурнаяГруппа = &НомГр
	//	|	И НЕ ЗаказПоставщику.Транзит 
	|   И ЗаказПоставщику.ДатаПоступления>=&МинДатаПоступления
	|//ОТБОРТОВАРЫ
	|			И ЗаказПоставщику В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ЗадНаОтгрузку.ЗаказПоставщику
	|				ИЗ
	|					Документ.ЗаданиеНаОтгрузку.ЗаказыПоставщикам КАК ЗадНаОтгрузку
	|				ГДЕ ЗадНаОтгрузку.Ссылка.ПометкаУдаления=ЛОЖЬ и ЗадНаОтгрузку.Ссылка.Выполнено=ЛОЖЬ
	|				И ЗадНаОтгрузку.Ссылка.Дата>=&НачРазгрузки и ЗадНаОтгрузку.Ссылка.Дата<=&КонРазгрузки )) КАК ЗаказыПоставщикамОстатки
	|"+"			)как ЗаданиеНаОтгрузкуПриход
	|	ПО ЗаказыПоставщикамОстатки.Номенклатура = ЗаданиеНаОтгрузкуПриход.Номенклатура");
	
	Запрос.УстановитьПараметр("НачРазгрузки", НачалоДня(ТекущаяДата()-7*86400) ); // не дольше 7 дней...
	Запрос.УстановитьПараметр("КонРазгрузки", КонецДня(ТекущаяДата()) );
Иначе
//СписокСтороннихПоставщиков = новый СписокЗначений; //21.02.2017 у филиалов - НЕТ!
СписокСтороннихПоставщиков =яштПоставщики.ПолучитьСписокПоставщиков();	 //+++ 22.10.2018	снова ЕСТЬ!
	Запрос.Текст = стрЗаменить(Запрос.Текст, "//ПоказатьРазгрузку",
	"ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) КАК КоличествоВПути1,");
КонецЕсли;

запрос.УстановитьПараметр("СписокСтороннихПоставщиков", СписокСтороннихПоставщиков);
//+++)	 
//Плотников 10.02.2016 Остатки по Ярославлю для подразделений
Если  ЗначениеЗаполнено(Подразделение) и Подразделение <> Справочники.Подразделения.НайтиПоКоду("00005") Тогда
	Запрос.Текст = стрЗаменить(Запрос.Текст,"//Упорядочивание",		
	"УПОРЯДОЧИТЬ ПО
	|ВЫБОР
	|КОГДА Остатки.Номенклатура ЕСТЬ NULL 
	|ТОГДА ВЫБОР
	|КОГДА ЗаказыПоставщикамОстатки.Номенклатура ЕСТЬ NULL 
	|    ТОГДА Ярославль.Номенклатура.Наименование
	|ИНАЧЕ ЗаказыПоставщикамОстатки.Номенклатура.Наименование
	|КОНЕЦ 
	|ИНАЧЕ Остатки.Номенклатура.Наименование
	|КОНЕЦ");
Иначе
	Запрос.Текст = стрЗаменить(Запрос.Текст,"//Упорядочивание",	
	"УПОРЯДОЧИТЬ ПО
	|	ВЫБОР
	|		КОГДА Остатки.Номенклатура ЕСТЬ NULL 
	|			ТОГДА ЗаказыПоставщикамОстатки.Номенклатура.Наименование
	|		ИНАЧЕ Остатки.Номенклатура.Наименование
	|	КОНЕЦ");
	
КонецЕсли;                  

Если  ЗначениеЗаполнено(Подразделение) и Подразделение <> Справочники.Подразделения.НайтиПоКоду("00005") Тогда
	Запрос.Текст = стрЗаменить(Запрос.Текст,"Индексировать по ОстаткиНоменклатурыКонтрагентов.Номенклатура","Индексировать по ОстаткиНоменклатурыКонтрагентов.Номенклатура
	// Сакулина. Вставила вместо закоментированного ниже кода. Добавила для филиалов ВПутиЯР ( то же смое что КОличествоВПути1 для Ярославля)
	|;	
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоЯрославль,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК СвободныйОстатокЯрославль,
	|	ТоварыНаСкладахОстатки.Номенклатура.Код КАК Код,
	|	ТоварыНаСкладахОстатки.Номенклатура.Артикул КАК Артикул,
	|	ТоварыНаСкладахОстатки.Номенклатура.ВидДефектаДляУценки как ВидДефектаДляУценки,
	|	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаданияНаОтгрузкуПриход.КоличествоРазгружается, 0) КАК ВПутиВЯР
	|ПОМЕСТИТЬ Ярославль
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Склад.Транзитный = ЛОЖЬ
	|				И Склад.ЗапретитьИспользование = ЛОЖЬ
	|				И Номенклатура.ВидТовара = &ВидТовара  //НоменклатурнаяГруппа И Номенклатура.НоменклатурнаяГруппа = &НомГр
	|//ОТБОРТОВАРЫ
    | ) КАК ТоварыНаСкладахОстатки
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(,
	|				ЗаказПокупателя.Транзит=ЛОЖЬ
	|					И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателейОстатки
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(,ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
	|				и Номенклатура.ВидТовара = &ВидТовара  //НоменклатурнаяГруппа И Номенклатура.НоменклатурнаяГруппа = &НомГр
    |//ОТБОРТОВАРЫ
	|					И ЗаказПоставщику.Транзит=ЛОЖЬ
	|					И ЗаказПоставщику.ДатаПоступления >= &МинДатаПоступления) КАК ЗаказыПоставщикамОстатки
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|			ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоРазгружается
	|		ИЗ
	|			РегистрНакопления.ЗаказыПоставщикам.Остатки( ,ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
	|					и Номенклатура.ВидТовара = &ВидТовара //НоменклатурнаяГруппа И Номенклатура.НоменклатурнаяГруппа = &НомГр
    |//ОТБОРТОВАРЫ
	|						И ЗаказПоставщику.ДатаПоступления >= &МинДатаПоступления
	|						И ЗаказПоставщику В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								ЗадНаОтгрузку.ЗаказПоставщику
	|							ИЗ
	|								Документ.ЗаданиеНаОтгрузку.ЗаказыПоставщикам КАК ЗадНаОтгрузку
	|							ГДЕ
	|								ЗадНаОтгрузку.Ссылка.ПометкаУдаления=ЛОЖЬ
									//29.11.2016
	|								И ЗадНаОтгрузку.Ссылка.ВидОперации = &ВидОперацииПриход
	
	|								И ЗадНаОтгрузку.Ссылка.Выполнено=ЛОЖЬ
	|								И ЗадНаОтгрузку.Ссылка.Дата >= &НачРазгрузки
	|								И ЗадНаОтгрузку.Ссылка.Дата <= &КонРазгрузки)) КАК ЗаказыПоставщикамОстатки) КАК ЗаданияНаОтгрузкуПриход
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаданияНаОтгрузкуПриход.Номенклатура");
 	Запрос.УстановитьПараметр("ВидОперацииПриход", Перечисления.ВидыДвиженийПриходРасход.Приход);
	
	Запрос.Текст = стрЗаменить(Запрос.Текст,"Остатки.СрокДоставки КАК СрокДоставки","Остатки.СрокДоставки КАК СрокДоставки,
	|Ярославль.КоличествоЯрославль,
	|Ярославль.СвободныйОстатокЯрославль,
	|Ярославль.ВПутиВЯР");
	Запрос.Текст = стрЗаменить(Запрос.Текст,"ПО Остатки.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура","ПО Остатки.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
	|Полное СОЕДИНЕНИЕ Ярославль КАК Ярославль
	|ПО Остатки.Номенклатура = Ярославль.Номенклатура");
	//+++ 22.11.2017
	Запрос.Текст = стрЗаменить(Запрос.Текст,"ЕСТЬNULL(Остатки.Номенклатура.Код, ЕстьNull(ЗаказыПоставщикамОстатки.Номенклатура.Код, ЗаказыОТХ.Номенклатура.Код))",
											"ЕСТЬNULL(Остатки.Номенклатура.Код, ЕСТЬNULL(ЗаказыПоставщикамОстатки.Номенклатура.Код, Ярославль.Код))");
	Запрос.Текст = стрЗаменить(Запрос.Текст,"ЕСТЬNULL(Остатки.Номенклатура.Артикул, ЕстьNull(ЗаказыПоставщикамОстатки.Номенклатура.Артикул, ЗаказыОТХ.Номенклатура.Артикул))",
											"ЕСТЬNULL(Остатки.Номенклатура.Артикул, ЕСТЬNULL(ЗаказыПоставщикамОстатки.Номенклатура.Артикул, Ярославль.Артикул))");
	Запрос.Текст = стрЗаменить(Запрос.Текст,"ЕСТЬNULL(Остатки.Номенклатура, ЕстьNull(ЗаказыПоставщикамОстатки.Номенклатура, ЗаказыОТХ.Номенклатура))",
											"ЕСТЬNULL(Остатки.Номенклатура, ЕСТЬNULL(ЗаказыПоставщикамОстатки.Номенклатура, Ярославль.Номенклатура))");
	Запрос.Текст = стрЗаменить(Запрос.Текст,"ЕСТЬNULL(Остатки.Номенклатура.ВидДефектаДляУценки, ЕстьNull(ЗаказыПоставщикамОстатки.Номенклатура.ВидДефектаДляУценки,ЗаказыОТХ.Номенклатура.ВидДефектаДляУценки))", 
											"ЕСТЬNULL(Остатки.Номенклатура.ВидДефектаДляУценки, ЕстьNull(ЗаказыПоставщикамОстатки.Номенклатура.ВидДефектаДляУценки,Ярославль.ВидДефектаДляУценки))");
	
	ЭлементыФормы.Товары.Колонки.СвободныйОстатокЯрославль.Видимость = Истина;
	ЭлементыФормы.Товары.Колонки.КоличествоЯрославль.Видимость = Истина;	
	ЭлементыФормы.Товары.Колонки.ВПутиВЯр.Видимость = Истина;  // Сакулина
	
	Запрос.УстановитьПараметр("НачРазгрузки", НачалоДня(ТекущаяДата()-7*86400) ); // не дольше 7 дней...
	Запрос.УстановитьПараметр("КонРазгрузки", КонецДня(ТекущаяДата()) );

Иначе
	ЭлементыФормы.Товары.Колонки.СвободныйОстатокЯрославль.Видимость = Ложь;
	ЭлементыФормы.Товары.Колонки.КоличествоЯрославль.Видимость = Ложь;
	ЭлементыФормы.Товары.Колонки.ВПутиВЯр.Видимость = Ложь;    // Сакулина

КонецЕсли;	
//Плотников 10.02.2016 Остатки по Ярославлю для подразделений
				  
СоотвВидов = новый Соответствие;
СоотвВидов.Вставить("Шины", перечисления.ВидыТоваров.Шины);
СоотвВидов.Вставить("Диски", перечисления.ВидыТоваров.Диски);
СоотвВидов.Вставить("АКБ", перечисления.ВидыТоваров.АКБ);
СоотвВидов.Вставить("Аксессуары", перечисления.ВидыТоваров.Аксессуары);
СоотвВидов.Вставить("Прочее", перечисления.ВидыТоваров.Прочее);
СоотвВидов.Вставить("Реклама", перечисления.ВидыТоваров.РекламнаяПродукция);

ВидТовараПер = СоотвВидов.Получить(ВидТовара);
Запрос.УстановитьПараметр("ВидТовара", ВидТовараПер) ;
Запрос.УстановитьПараметр("МинДатаПоступления", НачалоДня(ТекущаяДата()) - 14*86400 ); //+++ 01.09.2014 в течение недели может быть "задержка"
				
	
	СписокКонтрагентовОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);  //+++ 01.10.2014
	Запрос.УстановитьПараметр("СписокКонтрагентовОТХ",СписокКонтрагентовОТХ);
		
	СтрокаОтбора = ""; //уже и так есть всегда! "И Номенклатура.ВидТовара = &ВидТовара";
	
	Если  ВидТовара = "Шины" Тогда
		Если ЗначениеНеЗаполнено(Подразделение) или Подразделение = ГоловноеПодразделение Тогда
			// общий запрос изменен
			// Запрос.Текст = ТекстЗапросаШины;
			Запрос.УстановитьПараметр("Подразделение",Справочники.Подразделения.ПустаяСсылка() );
 		Иначе
		//	Запрос.Текст=ТекстЗапросаШиныПодразделение;
			Запрос.УстановитьПараметр("Подразделение",Подразделение);
		КонецЕсли;	
		
		
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПроизводителиШин.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Производитель =&Производитель " ;
			Запрос.УстановитьПараметр("Производитель",ЭлементыФормы.ПроизводителиШин.Значение);
			
		КонецЕсли;	
		
		СтрокаОтбораПоПараметрам ="";
		
		//+++ 01.04.2015 поиск по Типоразмеру!
		Если СокрЛП(ПараметрШирина)<>"" Тогда
		СтрокаОтбора=СтрокаОтбора+ " И ( Номенклатура.Типоразмер.Ширина = &ПараметрШирина
									   | или Номенклатура.Типоразмер.ШиринаВДюймах = &ПараметрШирина)";
			Запрос.УстановитьПараметр("ПараметрШирина",ПараметрШирина);
		КонецЕсли;	
		
		Если СокрЛП(ПараметрВысота)<>"" Тогда
			СтрокаОтбора=СтрокаОтбора+ " И (Номенклатура.Типоразмер.Высота = &ПараметрВысота)";
			Запрос.УстановитьПараметр("ПараметрВысота",ПараметрВысота);
		КонецЕсли;	
		
		Если СокрЛП(ПараметрДиаметр)<>"" Тогда
			СтрокаОтбора=СтрокаОтбора+ " И (Номенклатура.Типоразмер.Диаметр = &ПараметрДиаметр)";
			Запрос.УстановитьПараметр("ПараметрДиаметр",ПараметрДиаметр);
		КонецЕсли;	
		
		//+++ 07.10.2015
		//Если ЗначениеЗаполнено(Сезон ) Тогда
		//	СтрокаОтбора=СтрокаОтбора+ " И (Номенклатура.Модель.Сезон = &Сезон)";
		//	Запрос.УстановитьПараметр("Сезон",Сезон);
		//КонецЕсли;	
		Если ЗначениеЗаполнено(РодительШ) Тогда
			СтрокаОтбора=СтрокаОтбора+ " И (Номенклатура.Родитель = &РодительШ)";
			Запрос.УстановитьПараметр("РодительШ",РодительШ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДопСтрокаПоискаШины ) Тогда
			попытка  //21.02.2017 - если число то это Код или Артикул!
				этоЧисло = число(ДопСтрокаПоискаШины);
			исключение	
				этоЧисло = 0;
			КонецПопытки;
			Если этоЧисло > 0 и стрДлина(ДопСтрокаПоискаШины)=7 тогда // это КОД или Артикул!
			СтрокаОтбора=СтрокаОтбора+ " И( Номенклатура.Код=&Код 
										|	ИЛИ Номенклатура.Артикул = &Код
										|	ИЛИ Номенклатура.Артикул Подобно (&ДопСтрокаПоискаШины)
										| ) ";
			Иначе
			СтрокаОтбора=СтрокаОтбора+ " И( Номенклатура.Наименование ПОДОБНО (&ДопСтрокаПоискаШины)
										|	ИЛИ Номенклатура.Артикул Подобно (&ДопСтрокаПоискаШины)
										| ) ";
			КонецЕсли;							
			Запрос.УстановитьПараметр("ДопСтрокаПоискаШины", "%"+ДопСтрокаПоискаШины+"%");
			Запрос.УстановитьПараметр("Код", ДопСтрокаПоискаШины);

		КонецЕсли;	
		
		// Сакулина
		Если ЗначениеЗаполнено(Сезонность) Тогда
			СтрокаОтбора=СтрокаОтбора+ " И (Номенклатура.Модель.Сезон = &Сезонность)";
			Запрос.УстановитьПараметр("Сезонность",Сезонность);
		КонецЕсли;
        // Сакулина

//==============================================================================
ИначеЕсли ВидТовара = "Диски" Тогда
		
		Если ЗначениеНеЗаполнено(Подразделение) или Подразделение = ГоловноеПодразделение Тогда
		//+++ диски тоже есть у поставщиков!
		//    Запрос.Текст= ТекстЗапросаДиски; //+++ здесь без изменения, дисков пока нет у поставщиков
			Запрос.УстановитьПараметр("Подразделение",справочники.Подразделения.ПустаяСсылка() );
 		Иначе
		//	Запрос.Текст= ТекстЗапросаДискиПодразделение;
			Запрос.УстановитьПараметр("Подразделение",Подразделение);
		КонецЕсли;	
		
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПроизводителиДисков.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Производитель =&Производитель " ;
			Запрос.УстановитьПараметр("Производитель",ЭлементыФормы.ПроизводителиДисков.Значение);
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПараметрШиринаДиски.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Типоразмер.Ширина =&Ширина" ;
			Запрос.УстановитьПараметр("Ширина",ЭлементыФормы.ПараметрШиринаДиски.Значение);
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПараметрДиаметрДиски.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Типоразмер.Диаметр =&Диаметр" ;
			Запрос.УстановитьПараметр("Диаметр",ЭлементыФормы.ПараметрДиаметрДиски.Значение);
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПараметрКоличествоОтверстий.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Типоразмер.КоличествоОтверстий =&КоличествоОтверстий" ;
			Запрос.УстановитьПараметр("КоличествоОтверстий",ЭлементыФормы.ПараметрКоличествоОтверстий.Значение);
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПараметрPCD.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Типоразмер.PCD =&PCD" ;
			Запрос.УстановитьПараметр("PCD",ЭлементыФормы.ПараметрPCD.Значение);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПараметрВылет.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Типоразмер.Вылет =&Вылет" ;
			Запрос.УстановитьПараметр("Вылет",ЭлементыФормы.ПараметрВылет.Значение);
		КонецЕсли;
		//08.04.15 Смирнов
		Если ЗначениеЗаполнено(ЭлементыФормы.ПараметрDIA.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Типоразмер.ДиаметрСтупицы =&DIA" ;
			Запрос.УстановитьПараметр("DIA",ЭлементыФормы.ПараметрDIA.Значение);
		КонецЕсли;
		//
		Если ЗначениеЗаполнено(ДопСтрокаПоискаДиски ) Тогда
			попытка  //21.02.2017 - если число то это Код или Артикул!
				этоЧисло = число(ДопСтрокаПоискаДиски);
			исключение	
				этоЧисло = 0;
			КонецПопытки;
			Если этоЧисло > 0 и стрДлина(ДопСтрокаПоискаДиски)=7 тогда // это КОД !
				СтрокаОтбора=СтрокаОтбора+ " И (Номенклатура.Код=&Код
											//+++ 14.08.2018 - задача № 52511 - для Скада - надо искать и по артикулу
				                            |ИЛИ Номенклатура.Артикул=&Код
											|	)";
 			Иначе
			СтрокаОтбора=СтрокаОтбора+ " И ( Номенклатура.Наименование ПОДОБНО (&ДопСтрокаПоискаДиски)
										|  ) ";
			КонецЕсли;							
			Запрос.УстановитьПараметр("ДопСтрокаПоискаДиски","%"+ДопСтрокаПоискаДиски+"%");
			Запрос.УстановитьПараметр("Код",ДопСтрокаПоискаДиски);
		КонецЕсли;	
//=========================================================================================================		
ИначеЕсли ВидТовара = "АКБ" Тогда
         //+++ 29.09.2016 - единый ЗАПРОС ДЛЯ всего!!!
		 Если ЗначениеЗаполнено(Подразделение) и Подразделение <> ГоловноеПодразделение Тогда
		//	Запрос.Текст = ТекстЗапросаАКБПодразделение;
			Запрос.УстановитьПараметр("Подразделение",Подразделение);
		Иначе 
		//	Запрос.Текст= ТекстЗапросаАКБ; //++ без изменений   нет у поставщиков
			Запрос.УстановитьПараметр("Подразделение",справочники.Подразделения.ПустаяСсылка() );
 		КонецЕсли;	
		
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПроизводителиАКБ.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Производитель=&Производитель" ;
			Запрос.УстановитьПараметр("Производитель",ЭлементыФормы.ПроизводителиАКБ.Значение);
		КонецЕсли;
		Если ЗначениеЗаполнено(ДопСтрокаПоискаАКБ ) Тогда
			попытка  //21.02.2017 - если число то это Код или Артикул!
				этоЧисло = число(ДопСтрокаПоискаАКБ);
			исключение	
				этоЧисло = 0;
			КонецПопытки;
			Если этоЧисло > 0 и стрДлина(ДопСтрокаПоискаАКБ)=7 тогда // это КОД !
           	СтрокаОтбора=СтрокаОтбора+ " И (Номенклатура.Код=&Код
										|	или Номенклатура.Артикул=&Код
										|	или Номенклатура.Артикул Подобно (&ДопСтрокаПоискаАКБ)
										|  )";
            Иначе
			СтрокаОтбора=СтрокаОтбора+ " И ( Номенклатура.Артикул=&Код
										|	ИЛИ Номенклатура.Артикул Подобно (&ДопСтрокаПоискаАКБ)
										|	ИЛИ Номенклатура.Наименование ПОДОБНО (&ДопСтрокаПоискаАКБ)
										|  )";
			КонецЕсли;							
			Запрос.УстановитьПараметр("ДопСтрокаПоискаАКБ","%"+ДопСтрокаПоискаАКБ+"%");
			Запрос.УстановитьПараметр("Код",ДопСтрокаПоискаАКБ);
		КонецЕсли;
		
	//+++ 23.07.2014		
	Если ЗначениеЗаполнено(ПусковойТок) или ЗначениеЗаполнено(Емкость) Тогда
		
		// делаем запрос по номенклатуре по свойству(ам) 
		ЗапросАКБ = новый запрос;
		ЗапросАКБ.Текст ="ВЫБРАТЬ различные
                  |					Выразить(ЗначенияСвойствОбъектов.Объект как Справочник.Номенклатура) КАК Номенклатура
                  |				ИЗ
                  |					РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
                  |				ГДЕ
				  //20.02.2017 упрощение запроса с 4,8 сек до 0,2 (стоимость с 23 до 3)
                  |					Выразить(ЗначенияСвойствОбъектов.Объект как Справочник.Номенклатура).ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.АКБ)
              	  | 			//ОТБОРТОВАРЫ_Свойства"; 
				  
		СтрокаОтбора_Свойства = "";
		Если ЗначениеЗаполнено(ПусковойТок) Тогда
			//ОТБОРТОВАРЫ_Свойства
			СтрокаОтбора_Свойства= " И ЗначенияСвойствОбъектов.Свойство = &СвойствоПТ 
									|И ЗначенияСвойствОбъектов.Значение = &ПусковойТок"; 
			ЗапросАКБ.УстановитьПараметр("ПусковойТок", ПусковойТок);
			ЗапросАКБ.УстановитьПараметр("СвойствоПТ", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Пусковой ток") );
		КонецЕсли;
	
		Если ЗначениеЗаполнено(Емкость) Тогда
	    	СтрокаОтбора_Свойства=СтрокаОтбора_Свойства + " И ЗначенияСвойствОбъектов.Свойство = &СвойствоЕ 
														  | И ЗначенияСвойствОбъектов.Значение = &Емкость"; 
		    ЗапросАКБ.УстановитьПараметр("Емкость", Емкость);
			ЗапросАКБ.УстановитьПараметр("СвойствоЕ" , ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Диаметр/Емкость") );
		КонецЕсли;
		ЗапросАКБ.Текст = стрЗаменить(ЗапросАКБ.Текст, "//ОТБОРТОВАРЫ_Свойства", СтрокаОтбора_Свойства);
	    рез = ЗапросАКБ.Выполнить();
		таб = рез.Выгрузить();
		
		//----------------и делаем ограничение в основном запросе---------------------------------------
		Если таб.Количество()>0 Тогда
			СписокТоваровПоСвойству = новый СписокЗначений;
		    СписокТоваровПоСвойству.ЗагрузитьЗначения(таб.выгрузитьКолонку("Номенклатура"));
			СтрокаОтбора=СтрокаОтбора+ " И Номенклатура.Ссылка в (&СписокТоваровПоСвойству)";
		  	Запрос.УстановитьПараметр("СписокТоваровПоСвойству", СписокТоваровПоСвойству);
		Иначе
		    СтрокаОтбора=СтрокаОтбора+ " И ЛОЖЬ ";  //Запрет!
		КонецЕсли;	
	КонецЕсли;
	
		
		Если ЗначениеЗаполнено(Размеры) Тогда
			СтрокаОтбора=СтрокаОтбора+ " И Номенклатура.Типоразмер.Наименование = &Размеры";
        	Запрос.УстановитьПараметр("Размеры", Размеры);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Полярность) Тогда  // п.п.  / о.п.
			СтрокаОтбора=СтрокаОтбора+ " И Номенклатура.Наименование ПОДОБНО (&Полярность)";
			Если Полярность="прям." 
				Тогда ПолярностьПоиск = "%п.п.%";
				Иначе ПолярностьПоиск = "%о.п.%";
			КонецЕсли;	
         	Запрос.УстановитьПараметр("Полярность", ПолярностьПоиск);
		КонецЕсли;
		//+++
		
		//+++ 18.06.2015
		Если ЗначениеЗаполнено(РодительАКБ) Тогда
			СтрокаОтбора=СтрокаОтбора+ " И ( Номенклатура.ссылка В ИЕРАРХИИ (&Родитель) ) ";
			Запрос.УстановитьПараметр("Родитель", РодительАКБ);
		КонецЕсли;
		
		
//==============================================================================
	ИначеЕсли ВидТовара = "Аксессуары" Тогда
		Если ЗначениеНеЗаполнено(Подразделение) или Подразделение = ГоловноеПодразделение Тогда
			//+++ запрос не меняется!
			//Запрос.Текст = ТекстЗапросаАксессуары;
			Запрос.УстановитьПараметр("Подразделение",справочники.Подразделения.ПустаяСсылка() );
		Иначе
			//Запрос.Текст= ТекстЗапросаАксессуарыПодразделение;
			Запрос.УстановитьПараметр("Подразделение",Подразделение);
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПроизводителиАксессуары.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Производитель =&Производитель " ;
			Запрос.УстановитьПараметр("Производитель",ЭлементыФормы.ПроизводителиАксессуары.Значение);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДопСтрокаПоискаАксессуары) Тогда
			попытка  //21.02.2017 - если число то это Код или Артикул!
				этоЧисло = число(ДопСтрокаПоискаАксессуары);
			исключение	
				этоЧисло = 0;
			КонецПопытки;
			Если этоЧисло > 0 и стрДлина(ДопСтрокаПоискаАксессуары)=7 тогда // это КОД !
 			СтрокаОтбора=СтрокаОтбора+ " И (  Номенклатура.Код=&Код 
										|   ) ";
			Иначе							
			СтрокаОтбора=СтрокаОтбора+ " И (  Номенклатура.Наименование ПОДОБНО (&ДопСтрокаПоискаАксессуары)
										|   ) ";
			КонецЕсли;							
			Запрос.УстановитьПараметр("ДопСтрокаПоискаАксессуары","%"+ДопСтрокаПоискаАксессуары+"%");
			Запрос.УстановитьПараметр("Код",ДопСтрокаПоискаАксессуары);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Артикул) Тогда// отдельно поле
			СтрокаОтбора=СтрокаОтбора+ " И Номенклатура.Артикул = &Артикул ";
			Запрос.УстановитьПараметр("Артикул", Артикул);
		КонецЕсли;

		Если ЗначениеЗаполнено(Родитель) Тогда
			СтрокаОтбора=СтрокаОтбора+ " И Номенклатура.ссылка В ИЕРАРХИИ (&Родитель) ";
			Запрос.УстановитьПараметр("Родитель", Родитель);
		КонецЕсли;
			
//==============================================================================
	ИначеЕсли ВидТовара = "Прочее" Тогда // прочее	
		
		//+++ 29.09.2016 ЕДИНЫЙ ЗАПРОС ДЛЯ ВСЕГО!!!!  УБРАНА СТРОКА!
		//Запрос.Текст =ТекстЗапросаПрочееПодразделение; 
			
		Если ЗначениеНеЗаполнено(Подразделение) или Подразделение = ГоловноеПодразделение Тогда
			//только по ЯШТ без ОТХ
			//Запрос.Текст = ТекстЗапросаПрочее;
			Запрос.УстановитьПараметр("Подразделение", Справочники.Подразделения.ПустаяСсылка() );
		Иначе
			Запрос.УстановитьПараметр("Подразделение",Подразделение);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПроизводителиПрочее.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Производитель = &Производитель " ;
			Запрос.УстановитьПараметр("Производитель",ЭлементыФормы.ПроизводителиПрочее.Значение);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭлементыФормы.РодительПрочее.Значение) Тогда //+++ 15.09.2017
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Родитель = &Родитель " ;
			Запрос.УстановитьПараметр("Родитель",ЭлементыФормы.РодительПрочее.Значение);
		КонецЕсли;

		Если ЗначениеЗаполнено(ДопСтрокаПоискаПрочее ) Тогда
			попытка  //21.02.2017 - если число то это Код или Артикул!
				этоЧисло = число(ДопСтрокаПоискаПрочее);
			исключение	
				этоЧисло = 0;
			КонецПопытки;
			Если этоЧисло > 0 и стрДлина(ДопСтрокаПоискаПрочее)=7 тогда // это КОД !
 			СтрокаОтбора=СтрокаОтбора+ " И (  Номенклатура.Код=&КодПрочее 
										|   ) ";
			Иначе							
			СтрокаОтбора=СтрокаОтбора+ " И (  Номенклатура.Наименование ПОДОБНО (&ДопСтрокаПоискаПрочее)
										|   ) ";
			КонецЕсли;							

			Запрос.УстановитьПараметр("ДопСтрокаПоискаПрочее","%"+ДопСтрокаПоискаПрочее+"%");
			Запрос.УстановитьПараметр("КодПрочее",ДопСтрокаПоискаПрочее);
		КонецЕсли;	
		
	Иначе // Реклама	
		Если ЗначениеНеЗаполнено(Подразделение) или Подразделение = ГоловноеПодразделение Тогда
			//+++ запрос не меняется!
			//Запрос.Текст = ТекстЗапросаАксессуары;
			Запрос.УстановитьПараметр("Подразделение",справочники.Подразделения.ПустаяСсылка() );
		Иначе
			//Запрос.Текст= ТекстЗапросаАксессуарыПодразделение;
			Запрос.УстановитьПараметр("Подразделение",Подразделение);
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(ЭлементыФормы.ПроизводителиРекламы.Значение) Тогда
			СтрокаОтбора= СтрокаОтбора+ " И Номенклатура.Производитель =&Производитель " ;
			Запрос.УстановитьПараметр("Производитель",ЭлементыФормы.ПроизводителиРекламы.Значение);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДопСтрокаПоискаРеклама) Тогда
			СтрокаОтбора=СтрокаОтбора+ " И ( Номенклатура.Наименование ПОДОБНО (&ДопСтрокаПоискаРеклама)
										|   ИЛИ Номенклатура.Код=&Код 
										|   ) ";
			Запрос.УстановитьПараметр("ДопСтрокаПоискаРеклама","%"+ДопСтрокаПоискаРеклама+"%");
			Запрос.УстановитьПараметр("Код",ДопСтрокаПоискаРеклама);
		КонецЕсли;
		
	КонецЕсли;	

	
	//+++ 15.08.2016
	Если флДефектные Тогда	
		СтрокаОтбора = СтрокаОтбора+" И (Номенклатура.ВидДефектаДляУценки <> Значение(Справочник.ВидыДефектовДляУценки.ПустаяСсылка)) ";
	КонецЕсли;
	
	//+++ 30.06.2014
	СтрокаОтбораПоставщики = стрЗаменить(СтрокаОтбора, "Номенклатура.","ОстаткиНоменклатурыКонтрагентов.Номенклатура.");
  	Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ОТБОРТОВАРЫ_поставщики", СтрокаОтбораПоставщики);
	
	Запрос.Текст=СтрЗаменить(Запрос.Текст,"//ОТБОРТОВАРЫ", СтрокаОтбора);
	
	//+++( 16.11.2017 для Кузьмичёвой по задаче № 35864
		Запрос.УстановитьПараметр("ПодразделениеОТХ",?(ЗначениеНеЗаполнено(Подразделение), ГоловноеПодразделение,  Подразделение) );  //12.02.2019 +++ по #Кузьмичёвой
					
		Запрос.УстановитьПараметр("ОдинМесяц", ДобавитьМесяц( ТекущаяДата(), -1) ); //ОдинМесяц
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"//ОТБОРТОВ_ОТХ", СтрЗаменить(СтрокаОтбора,"Номенклатура.", "ЗакОТХТовары.Номенклатура.") );
	//+++)	
		
	Пауэр = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", "7703247653");
 	Запрос.УстановитьПараметр("Пауэр", Пауэр );
	
	Если ВидТовара = "Диски" Тогда
				
		Если ТолькоГрузовые Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"//НоменклатурнаяГруппа","");
			Запрос.УстановитьПараметр("НомГр", Справочники.НоменклатурныеГруппы.НайтиПоКоду("00013"));
		КонецЕсли;
	КонецЕсли;
	
	Состояние("Идет получение данных по выбранным условиям для товаров "+видТовара+"...");
	
	
	
	Результат=Запрос.Выполнить();
	
	Состояние("Идет формирование таблицы данных...");
	Рез=Результат.Выгрузить(); 
	//++Смирнов 11.02.14
	Если РольДоступна("Партнер") Тогда
		N = Рез.Количество();
		Для Каждого стр из Рез Цикл
			к=0;
			Если к%500 = 0 Тогда
				Состояние("Идет вывод "+строка(к)+" из "+строка(N)+" строк...");
			КонецЕсли;
			Для каждого Колонка из стр Цикл
				Если ТипЗнч(Колонка)=Тип("Число") Тогда
					Колонка=?(Колонка>50,50,Колонка);
					стр[к]=Колонка;
				КонецЕсли;	
				к=к+1;
			КонецЦикла;	
		КонецЦикла;
	КонецЕсли;
	//Смирнов 11.02.14
	
	Состояние("Идет вывод таблицы данных...");
	Товары = Рез;

	Состояние(" ");
	
//	ЭлементыФормы.Товары.Колонки.КоличествоОтветХранение.Ширина=3;
	
КонецПроцедуры	


Процедура ПанельВидТоваровПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница=0 Тогда
		ВидТовара = "Шины";
	ИначеЕсли ТекущаяСтраница=1 Тогда
		ВидТовара = "Диски"; 
	ИначеЕсли ТекущаяСтраница=2 Тогда
		ВидТовара = "АКБ";
	ИначеЕсли ТекущаяСтраница = 3 Тогда
		ВидТовара = "Аксессуары";
	ИначеЕсли ТекущаяСтраница=4 Тогда	
		ВидТовара = "Прочее";
		ДопСтрокаПоискаПрочее = "";
		РодительПрочее = справочники.Номенклатура.НайтиПоКоду("0001127"); // Камеры!
		
		Флажок1 = ЛОЖЬ; // нет фото для камер, болтов, гаек, наклеек и т.д.
	ИначеЕсли ТекущаяСтраница=5 Тогда
		ВидТовара = "Реклама";
	КонецЕсли;	
	
	//Товары.Очистить();
	
КонецПроцедуры
	
// единая функция для получения параметров Шин и Дисков
Процедура ПеречитатьДиаметры(диаметрыШин = истина)
	
	Если ( (диаметрыШин и ЭлементыФормы.ПараметрДиаметр.СписокВыбора.Количество()>0 )
		или (НЕ диаметрыШин и ЭлементыФормы.ПараметрДиаметрДиски.СписокВыбора.Количество()>0 ) 
		) и ( ТекущаяДата() - ДатаПоследнегоЧтенияПараметров<600 ) Тогда
		 возврат; // читается 1 раз по остаткам...
	 КонецЕсли;	
	 
//-------диаметры есть дробные, есть в мм --------------------------	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ 
	|спр.Типоразмер.Ширина как Ширина,
	|спр.Типоразмер.ШиринаВДюймах как ШиринаВДюймах,
	|спр.Типоразмер.Диаметр как Диаметр,
	|"+?(диаметрыШин,"спр.Типоразмер.Высота как Высота","
	|спр.Типоразмер.КоличествоОтверстий КоличествоОтверстий, спр.Типоразмер.PCD PCD, спр.Типоразмер.Вылет Вылет, спр.Типоразмер.ДиаметрСтупицы ДиаметрСтупицы")+"
	|из 
	              |	(ВЫБРАТЬ 
				  |	ТоварыНаСкладахОстатки.Номенклатура.Типоразмер  как Типоразмер
           |ИЗ
	              |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	              |			,
	              |			Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров."+?(диаметрыШин,"Шины","Диски")+")
	              |				И Склад.Подразделение = &Подразделение) КАК ТоварыНаСкладахОстатки
	              |
				  //----------04.07.2016-------- В пути ----------------
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ 
	              |	ЗаказыПоставщикамОстатки.Номенклатура.Типоразмер
	              |ИЗ
	              |	РегистрНакопления.ЗаказыПоставщикам.Остатки(, 
				  |		Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров."+?(диаметрыШин,"Шины","Диски")+") 
				  | И Подразделение = &Подразделение 
				  |												) КАК ЗаказыПоставщикамОстатки

				  
				  //13.07.2016 --- для Никитина И.Б. - остатки все... независимо от подразделения
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ 
	              |	подЗаказ.Номенклатура.Типоразмер
				  |из РегистрСведений.ОстаткиНоменклатурыКонтрагентов КАК подЗаказ
				  |ГДЕ 
				  |		подЗаказ.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров."+?(диаметрыШин,"Шины","Диски")+")
				  |		И подЗаказ.Подразделение = &Подразделение 
 				//  |		И подЗаказ.Остаток>0
				  |
                   //13.07.2016 - до кучи... может быть на филиале товар на ОТХ и больше нигде!
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ 
	              |	товарыОТХ.Номенклатура.Типоразмер
				  |ИЗ
	              |	РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(, Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров."+?(диаметрыШин,"Шины","Диски")+") 
				  | И Склад.Подразделение = &Подразделение 
				  |												) КАК товарыОТХ
			
				  |) как спр";
				  
										  
Запрос.УстановитьПараметр("Подразделение", ?(Подразделение.Код="00005", справочники.Подразделения.ПустаяСсылка(), Подразделение) );
результат1 = Запрос.Выполнить();
  табЗнач  = результат1.Выгрузить();
  
Если диаметрыШин Тогда
	табЗнач1 = табЗнач.Скопировать(,"Ширина");
	табЗнач1.Свернуть("Ширина");
	
	табЗнач1.Колонки.Добавить("ШиринаЧ");
	для каждого стр1 из	табЗнач1 цикл     //сортировка по числу
		попытка
		стр1.ШиринаЧ = число(стр1.Ширина);
		исключение
		стр1.ШиринаЧ = 999;
		КонецПопытки;
	КонецЦикла;	
	
	//+++ 02.10.2017 - прибаляем все значения ширины в дюймах
	табЗнач2 = табЗнач.Скопировать(,"ШиринаВДюймах");
	табЗнач2.Свернуть("ШиринаВДюймах");
	для каждого стр2 из табЗнач2 цикл
		стр1 = табЗнач1.добавить();
		стр1.Ширина = стр2.ШиринаВДюймах;
		попытка
		стр1.ШиринаЧ = число(стр1.Ширина);
		исключение
		стр1.ШиринаЧ = 999;
		КонецПопытки;
	КонецЦикла;
	
	табЗнач1.Свернуть("Ширина, ШиринаЧ");
	табЗнач1.Сортировать("ШиринаЧ");
		
	ЭлементыФормы.ПараметрШирина.СписокВыбора.Очистить();
	ЭлементыФормы.ПараметрШирина.СписокВыбора.ЗагрузитьЗначения(  табЗнач1.ВыгрузитьКолонку("Ширина") );
 
//ЭлементыФормы.ПараметрШирина.СписокВыбора.СортироватьПоЗначению();

	табЗнач1 = табЗнач.Скопировать(,"Высота");
	табЗнач1.Свернуть("Высота");
ЭлементыФормы.ПараметрВысота.СписокВыбора.Очистить();
ЭлементыФормы.ПараметрВысота.СписокВыбора.ЗагрузитьЗначения(  табЗнач1.ВыгрузитьКолонку("Высота") );
ЭлементыФормы.ПараметрВысота.СписокВыбора.СортироватьПоЗначению();

	табЗнач1 = табЗнач.Скопировать(,"Диаметр");
	табЗнач1.Свернуть("Диаметр");
ЭлементыФормы.ПараметрДиаметр.СписокВыбора.Очистить();
ЭлементыФормы.ПараметрДиаметр.СписокВыбора.ЗагрузитьЗначения(  табЗнач1.ВыгрузитьКолонку("Диаметр") );
ЭлементыФормы.ПараметрДиаметр.СписокВыбора.СортироватьПоЗначению();
 Иначе
	
табЗнач1 = табЗнач.Скопировать(,"Ширина");
	табЗнач1.Свернуть("Ширина");
ЭлементыФормы.ПараметрШиринаДиски.СписокВыбора.Очистить();
ЭлементыФормы.ПараметрШиринаДиски.СписокВыбора.ЗагрузитьЗначения(  табЗнач1.ВыгрузитьКолонку("Ширина") );
ЭлементыФормы.ПараметрШиринаДиски.СписокВыбора.СортироватьПоЗначению();

табЗнач1 = табЗнач.Скопировать(,"Диаметр");
	табЗнач1.Свернуть("Диаметр");
	ЭлементыФормы.ПараметрДиаметрДиски.СписокВыбора.Очистить();
	ЭлементыФормы.ПараметрДиаметрДиски.СписокВыбора.ЗагрузитьЗначения(  табЗнач1.ВыгрузитьКолонку("Диаметр") );
	ЭлементыФормы.ПараметрДиаметрДиски.СписокВыбора.СортироватьПоЗначению();

табЗнач1 = табЗнач.Скопировать(,"PCD");
	табЗнач1.Свернуть("PCD");
	ЭлементыФормы.ПараметрPCD.СписокВыбора.Очистить();
	ЭлементыФормы.ПараметрPCD.СписокВыбора.ЗагрузитьЗначения(  табЗнач1.ВыгрузитьКолонку("PCD") );
	ЭлементыФормы.ПараметрPCD.СписокВыбора.СортироватьПоЗначению();
	
табЗнач1 = табЗнач.Скопировать(,"Вылет");
	табЗнач1.Свернуть("Вылет");
	ЭлементыФормы.ПараметрВылет.СписокВыбора.Очистить();
	ЭлементыФормы.ПараметрВылет.СписокВыбора.ЗагрузитьЗначения(  табЗнач1.ВыгрузитьКолонку("Вылет") );
	ЭлементыФормы.ПараметрВылет.СписокВыбора.СортироватьПоЗначению();
	
табЗнач1 = табЗнач.Скопировать(,"ДиаметрСтупицы");
	табЗнач1.Свернуть("ДиаметрСтупицы");
	ЭлементыФормы.ПараметрDIA.СписокВыбора.Очистить();
	ЭлементыФормы.ПараметрDIA.СписокВыбора.ЗагрузитьЗначения(  табЗнач1.ВыгрузитьКолонку("ДиаметрСтупицы") );
	ЭлементыФормы.ПараметрDIA.СписокВыбора.СортироватьПоЗначению();
	
	ЭлементыФормы.ПараметрКоличествоОтверстий.СписокВыбора.Очистить();
	для ном=4 по 10 цикл
		ЭлементыФормы.ПараметрКоличествоОтверстий.СписокВыбора.Добавить(строка(ном));
	КонецЦикла;
КонецЕсли;

 	ДатаПоследнегоЧтенияПараметров = ТекущаяДата(); 
КонецПроцедуры	//ПеречитатьДиаметры()	

Процедура ПеречитатьПараметрыДисков(ЗаполнятьСразу=Ложь)
	
		//перенесено выше в ПеречитатьДиаметры	
		Если ЗаполнятьСразу 
			или (ТекущаяДата()- ДатаПоследнегоЧтенияПараметров)>600 Тогда
			
			ПеречитатьДиаметры(ложь);
			
		КонецЕсли;
		
КонецПроцедуры	


Процедура ПеречитатьПроизводителей(ЗаполнятьСразу=Истина, Ном=0)
	ПериодОбновления = 30 * 60; //через 30 мин. обновляем все списки заново!
	Если не ЗаполнятьСразу 
		и (ТекущаяДата()- ДатаПоследнегоЧтенияПараметров)<ПериодОбновления Тогда 
			возврат;
	КонецЕсли;
		
	Подразделение1 = ?(Подразделение=справочники.Подразделения.ПустаяСсылка(),справочники.Подразделения.НайтиПоКоду("00005"),Подразделение);
	СкладПодразделение = ?(Подразделение=справочники.Подразделения.НайтиПоКоду("00005"), справочники.Подразделения.ПустаяСсылка(),Подразделение);
	СкладТранзит       = НЕ ( СкладПодразделение=справочники.Подразделения.ПустаяСсылка() ); 
	
	//для i=1 по 5 цикл
		ЗапросПроизводители = Новый Запрос;
		ЗапросПроизводители.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	А.Производитель,
		|	А.ПроизводительИмя,
		|	А.ВидТовараНомер
		|ИЗ
		|	(ВЫБРАТЬ 
		|		ТоварыНаСкладахОстатки.Номенклатура.Производитель КАК Производитель,
		|		ТоварыНаСкладахОстатки.Номенклатура.Производитель.Наименование КАК ПроизводительИмя,
		|		ТоварыНаСкладахОстатки.Номенклатура.ВидТовара как ВидТовараНомер

		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(, 
		|//ВидТовара	Номенклатура.ВидТовара = &ВидТовара И
		|					Номенклатура.Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|					И (Склад.ЗапретитьИспользование=ЛОЖЬ 
		|							ИЛИ Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ВПути)
		|							ИЛИ Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.Ошиповка) 
		|					   )
		|					И Склад.Транзитный =&Транзит
		|					И Склад.Подразделение = &СкладПодразделение) КАК ТоварыНаСкладахОстатки
		|
		  
	  //-------------------------товары сторонних поставщиков---------------------
	//+++ 14.09.2017  ОБЪЕДИНИТЬ>>ОБЪЕДИНИТЬ ВСЕ
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ  
	|		ТоварыПоставщиковОстатки.Номенклатура.Производитель,
	|		ТоварыПоставщиковОстатки.Номенклатура.Производитель.Наименование КАК ПроизводительИмя,
	|	ТоварыПоставщиковОстатки.Номенклатура.ВидТовара как ВидТовараНомер

		|	ИЗ
	    |		РегистрСведений.ОстаткиНоменклатурыКонтрагентов как ТоварыПоставщиковОстатки
		|	ГДЕ 
		|//ВидТовара 	ТоварыПоставщиковОстатки.Номенклатура.ВидТовара = &ВидТовара И
		|	ТоварыПоставщиковОстатки.Подразделение = &Подразделение
		| И	ТоварыПоставщиковОстатки.Остаток>0	 
		
		//+++ 06.04.2018 ----------только в пути -----------
|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ 
		|		ТоварыВПути.Номенклатура.Производитель,
		|		ТоварыВПути.Номенклатура.Производитель.Наименование,
		|		ТоварыВПути.Номенклатура.ВидТовара как ВидТовараНомер
		|из регистрНакопления.ЗаказыПоставщикам.Остатки(, 
	   |//ВидТовара	Номенклатура.ВидТовара = &ВидТовара И
	    |		Подразделение = &Подразделение
		|		И Номенклатура.Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|) как ТоварыВПути
		
//10.08.2018 --------------- товары сторонних поставщиков (под заказ) ЧЕРЕЗ СкладПодразделение -------------
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ 
		|		ТоварыПодЗаказ.Номенклатура.Производитель,
		|		ТоварыПодЗаказ.Номенклатура.Производитель.Наименование,
		|		ТоварыПодЗаказ.Номенклатура.ВидТовара как ВидТовараНомер
		|из регистрСведений.ОстаткиНоменклатурыКонтрагентов как ТоварыПодЗаказ
		|	где
	    |		ТоварыПодЗаказ.Подразделение = &СкладПодразделение
	    |		И ТоварыПодЗаказ.Номенклатура.Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|//ВидТовара	И ТоварыПодЗаказ.Номенклатура.ВидТовара = &ВидТовара
		|
				//---------------------------------- товары на ОТХ --------------------------
	//+++ 14.09.2017  ОБЪЕДИНИТЬ>>ОБЪЕДИНИТЬ ВСЕ
	|"+?(Ном=2 или Ном=4,"	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ 
		|		ТоварыНаОтветственномХраненииОстатки.Номенклатура.Производитель,
		|		ТоварыНаОтветственномХраненииОстатки.Номенклатура.Производитель.Наименование,
		|		ТоварыНаОтветственномХраненииОстатки.Номенклатура.ВидТовара как ВидТовараНомер
		|	ИЗ
		|		РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( ,
		|//ВидТовара	Номенклатура.ВидТовара = &ВидТовара И
		|					Номенклатура.Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|					И Склад.ЗапретитьИспользование=ЛОЖЬ
		|					И Склад.Транзитный = &Транзит И Склад.Подразделение = &СкладПодразделение) КАК ТоварыНаОтветственномХраненииОстатки
		|","")+"
	//+++++++++++++++++++++++++++++++++++++++	
		|) КАК А
		|
		|УПОРЯДОЧИТЬ ПО
		|	А.ПроизводительИмя";
		ЗапросПроизводители.Параметры.Вставить("ПредМесяц", ДобавитьМесяц( НачалоДня(ТекущаяДата()), -1 ) );
		ЗапросПроизводители.Параметры.Вставить("Транзит",		СкладТранзит); 
		ЗапросПроизводители.Параметры.Вставить("Подразделение", Подразделение1);
		ЗапросПроизводители.Параметры.Вставить("СкладПодразделение", СкладПодразделение);
		
		Если не ЗаполнятьСразу или Ном=0 тогда //полная очистка всех списков!
			ЭлементыФормы.ПроизводителиШин.СписокВыбора.Очистить();
			ЭлементыФормы.ПроизводителиДисков.СписокВыбора.Очистить();
			ЭлементыФормы.ПроизводителиАКБ.СписокВыбора.Очистить();
			ЭлементыФормы.ПроизводителиПрочее.СписокВыбора.Очистить();
			ЭлементыФормы.ПроизводителиАксессуары.СписокВыбора.Очистить();
			ЭлементыФормы.ПроизводителиРекламы.СписокВыбора.Очистить();
		КонецЕсли;
		
		Если Ном>0 тогда  //получение списка только 1 вида!
			ЗапросПроизводители.Параметры.Вставить("ВидТовара",  ?(Ном=6, Перечисления.ВидыТоваров.РекламнаяПродукция,
															 ?(Ном=1, Перечисления.ВидыТоваров.АКБ, 
															 ?(Ном=2, Перечисления.ВидыТоваров.Прочее, 
															 ?(Ном=3, Перечисления.ВидыТоваров.Диски, 
															 ?(Ном=4, Перечисления.ВидыТоваров.Аксессуары, Перечисления.ВидыТоваров.Шины) )) ) ) ); // Шины=5
		ЗапросПроизводители.Текст = стрЗаменить(ЗапросПроизводители.Текст , "//ВидТовара", "") ;
		КонецЕсли;
	
			
		Выборка=ЗапросПроизводители.Выполнить().Выбрать();
		Пока  Выборка.Следующий() Цикл
			Если Выборка.ВидТовараНомер=Перечисления.ВидыТоваров.АКБ тогда 
				ЭлементыФормы.ПроизводителиАКБ.СписокВыбора.Добавить(Выборка.Производитель);
			ИначеЕсли Выборка.ВидТовараНомер=Перечисления.ВидыТоваров.Прочее тогда
				ЭлементыФормы.ПроизводителиПрочее.СписокВыбора.Добавить(Выборка.Производитель);
			ИначеЕсли Выборка.ВидТовараНомер=Перечисления.ВидыТоваров.Диски тогда
				ЭлементыФормы.ПроизводителиДисков.СписокВыбора.Добавить(Выборка.Производитель);
			ИначеЕсли Выборка.ВидТовараНомер=Перечисления.ВидыТоваров.Аксессуары тогда
				ЭлементыФормы.ПроизводителиАксессуары.СписокВыбора.Добавить(Выборка.Производитель);
			ИначеЕсли Выборка.ВидТовараНомер=Перечисления.ВидыТоваров.Шины тогда
				ЭлементыФормы.ПроизводителиШин.СписокВыбора.Добавить(Выборка.Производитель);
			ИначеЕсли Выборка.ВидТовараНомер=Перечисления.ВидыТоваров.РекламнаяПродукция тогда
				ЭлементыФормы.ПроизводителиРекламы.СписокВыбора.Добавить(Выборка.Производитель);
			КонецЕсли;	
		КонецЦикла;	
		
	Если Ном=0 или Ном=3 тогда //27.08.2018 - все или только диски
		ПолучитьАкциюАКБиРаспродажуДисков();//черные серые списки 
	КонецЕсли;
	
	ДатаПоследнегоЧтенияПараметров = ТекущаяДата(); 
КонецПроцедуры//ПеречитатьПроизводителей	

процедура ПеречитатьПараметрыАКБ(ЗаполнятьСразу=Ложь)
	
	Если не ЗаполнятьСразу 
		и (ТекущаяДата()- ДатаПоследнегоЧтенияПараметров)<600 Тогда
			возврат;
	КонецЕсли; 	
	ЭлементыФормы.ПусковойТок.СписокВыбора.Очистить();
	ЭлементыФормы.Емкость.СписокВыбора.Очистить();
	ЭлементыФормы.Размеры.СписокВыбора.Очистить();
	ЭлементыФормы.Полярность.СписокВыбора.Очистить();	
	
//-------------Полярность из названия: п.п. или о.п.--------------------------------------------
ЭлементыФормы.Полярность.СписокВыбора.Добавить("");
ЭлементыФормы.Полярность.СписокВыбора.Добавить("прям.");
ЭлементыФормы.Полярность.СписокВыбора.Добавить("обр.");

Если НЕ ЗаполнятьСразу Тогда
	Возврат;
КонецЕсли;	
	
	ЗапросОстатки = Новый Запрос;
	ЗапросОстатки.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ТоварыНаСкладахОстатки.Номенклатура,
	                      |	ТоварыНаСкладахОстатки.Номенклатура.Родитель как РодительАКБ
	                      |ИЗ
	                      |	РегистрНакопления.ТоварыНаСкладах.Остатки( ,
	                      |			Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.АКБ)
	                      |				И Склад.ЗапретитьИспользование=ЛОЖЬ
	                      |				И Склад.Транзитный    = &Транзит
	                      |//И Склад.Подразделение = &Подразделение
						  |) КАК ТоварыНаСкладахОстатки";
	СкладТранзит = Подразделение.ОбособленноеПодразделение;
	ЗапросОстатки.УстановитьПараметр("Транзит",СкладТранзит); 
	Если СкладТранзит Тогда 
		ЗапросОстатки.Текст = стрЗаменить(ЗапросОстатки.Текст , "//И", "И");
		ЗапросОстатки.УстановитьПараметр("Подразделение", Подразделение);
	КонецЕсли;	
	таб = ЗапросОстатки.Выполнить().Выгрузить();
	
списТов = новый СписокЗначений;
списТов.ЗагрузитьЗначения( таб.ВыгрузитьКолонку("Номенклатура") );			   


//+++ 15.08.2016 - РодительАКБ  
таб.Свернуть("РодительАКБ");  
таб.Сортировать("РодительАКБ");
ЭлементыФормы.РодительАКБ.СписокВыбора.ЗагрузитьЗначения(таб.ВыгрузитьКолонку("РодительАКБ"));

//грузим свойства АКБ : Пусковой ток, Диаметр/Емкость, 
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			   |ЗначенияСвойствАКБ.Значение КАК Значение
               |ИЗ
               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствАКБ
               |ГДЕ
               |	ЗначенияСвойствАКБ.Свойство = &Свойство
               |	И выразить(ЗначенияСвойствАКБ.Объект как Справочник.Номенклатура) В (&МассивТов) 
|
               |УПОРЯДОЧИТЬ ПО
               |	Значение
               |АВТОУПОРЯДОЧИВАНИЕ";
			   
Запрос.УстановитьПараметр("МассивТов", списТов );

Запрос.УстановитьПараметр("Свойство" , ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Пусковой ток") );
Результат = Запрос.Выполнить();
Таб		  = Результат.Выгрузить();

//+++( 27.11.2015 сортировка по числам 
Таб.Колонки.Добавить("значЧ");
для каждого стр1 из Таб цикл 
	стр1.значЧ = число(стрЗаменить(сокрЛП(стр1.значение)," ","")); 
КонецЦикла;	
таб.Сортировать("значЧ");
//+++)

ЭлементыФормы.ПусковойТок.СписокВыбора.ЗагрузитьЗначения(Таб.ВыгрузитьКолонку("Значение"));

//Емкость
Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Диаметр/Емкость") );
Результат = Запрос.Выполнить();
Таб		  = Результат.Выгрузить();
ЭлементыФормы.Емкость.СписокВыбора.ЗагрузитьЗначения(Таб.ВыгрузитьКолонку("Значение") );

//------------типоразмеры по АКБ -----------------------
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
               |	СпрНоменклатура.Типоразмер.Наименование КАК Наименование
               |ИЗ
               |	Справочник.Номенклатура КАК СпрНоменклатура
               |ГДЕ
               |	СпрНоменклатура.Ссылка В (&МассивТов)
             //  |	И СпрНоменклатура.Ссылка.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.АКБ)
               |	И СпрНоменклатура.Типоразмер.Наименование <> """"
               |
               |УПОРЯДОЧИТЬ ПО
               |	Наименование
               |АВТОУПОРЯДОЧИВАНИЕ";
Запрос.УстановитьПараметр("МассивТов", списТов );

Результат = Запрос.Выполнить();
Таб		  = Результат.Выгрузить();
ЭлементыФормы.Размеры.СписокВыбора.ЗагрузитьЗначения(Таб.ВыгрузитьКолонку("Наименование"));
ДатаПоследнегоЧтенияПараметров = ТекущаяДата(); 

КонецПроцедуры		




Процедура ОбновитьНажатие(Элемент)
// история поисков - 30.09.2015
максДлина = 10; // 10 последних	

//21.02.2017
 Имя1 = ВидТовара; // Страница...
ЭлементыФормы["ДействиеОбновить"+Имя1].Доступность = ложь;
время0 = ТекущаяУниверсальнаяДатаВМиллисекундах();

ЭлементыФормы.Товары.Колонки.КоличествоОтветХранение.Видимость = ЛОЖЬ; //26.03.2018 НЕ ТОЛЬКО для ШИН
ЭлементыФормы.Товары.Колонки.КоличествоНаОшиповке.Видимость = ЛОЖЬ; 

Если Имя1="Шины" Тогда
	 Если ДопСтрокаПоискаШины<>"" Тогда
		 ЭлементыФормы.ДопСтрокаПоискаШины.СписокВыбора.Вставить(0,ДопСтрокаПоискаШины);
		 Если ЭлементыФормы.ДопСтрокаПоискаШины.СписокВыбора.Количество()>максДлина Тогда
			  ЭлементыФормы.ДопСтрокаПоискаШины.СписокВыбора.Удалить(максДлина);
		 КонецЕсли;	  
	 КонецЕсли;
	 
ЭлементыФормы.Товары.Колонки.КоличествоОтветХранение.Видимость = Истина; //26.03.2018 ТОЛЬКО для ШИН
ЭлементыФормы.Товары.Колонки.КоличествоНаОшиповке.Видимость = Истина; 

ИначеЕсли Имя1="Диски" Тогда
	 Если ДопСтрокаПоискаДиски<>"" Тогда
		 ЭлементыФормы.ДопСтрокаПоискаДиски.СписокВыбора.Вставить(0,ДопСтрокаПоискаДиски);
	 	 Если ЭлементыФормы.ДопСтрокаПоискаДиски.СписокВыбора.Количество()>максДлина Тогда
			  ЭлементыФормы.ДопСтрокаПоискаДиски.СписокВыбора.Удалить(максДлина);
		 КонецЕсли;	  
	 КонецЕсли;	
ЭлементыФормы.Товары.Колонки.КоличествоОтветХранение.Видимость = Истина; //24.10.2018 для Груз.Дисков на ОТХ!
	 
ИначеЕсли Имя1="АКБ" Тогда
	 Если ДопСтрокаПоискаАКБ<>"" Тогда
		 ЭлементыФормы.ДопСтрокаПоискаАКБ.СписокВыбора.Вставить(0,ДопСтрокаПоискаАКБ);
		 Если ЭлементыФормы.ДопСтрокаПоискаАКБ.СписокВыбора.Количество()>максДлина Тогда
			  ЭлементыФормы.ДопСтрокаПоискаАКБ.СписокВыбора.Удалить(максДлина);
	     КонецЕсли;	 
	 КонецЕсли;
	 
ИначеЕсли Имя1="Аксессуары" Тогда
	 Если ДопСтрокаПоискаАксессуары<>"" Тогда
		 ЭлементыФормы.ДопСтрокаПоискаАксессуары.СписокВыбора.Вставить(0,ДопСтрокаПоискаАксессуары);
	 	 Если ЭлементыФормы.ДопСтрокаПоискаАксессуары.СписокВыбора.Количество()>максДлина Тогда
			  ЭлементыФормы.ДопСтрокаПоискаАксессуары.СписокВыбора.Удалить(максДлина);
		 КонецЕсли;	
	 КонецЕсли;
	 
ИначеЕсли Имя1="Прочее" Тогда
	 Если ДопСтрокаПоискаПрочее<>"" Тогда
		 ЭлементыФормы.ДопСтрокаПоискаПрочее.СписокВыбора.Вставить(0,ДопСтрокаПоискаПрочее);
	  	 Если ЭлементыФормы.ДопСтрокаПоискаПрочее.СписокВыбора.Количество()>максДлина Тогда
			  ЭлементыФормы.ДопСтрокаПоискаПрочее.СписокВыбора.Удалить(максДлина);
		 КонецЕсли;
	 КонецЕсли;
ЭлементыФормы.Товары.Колонки.КоличествоОтветХранение.Видимость = истина; //27.03.2018 для Прочего есть ОТХ!

ИначеЕсли Имя1="Реклама" Тогда
	 Если ДопСтрокаПоискаРеклама<>"" Тогда
		 ЭлементыФормы.ДопСтрокаПоискаРеклама.СписокВыбора.Вставить(0,ДопСтрокаПоискаРеклама);
	  	 Если ЭлементыФормы.ДопСтрокаПоискаРеклама.СписокВыбора.Количество()>максДлина Тогда
			  ЭлементыФормы.ДопСтрокаПоискаРеклама.СписокВыбора.Удалить(максДлина);
		 КонецЕсли;
	  КонецЕсли;
КонецЕсли;

 ЗагрузитьДанныеПоТоварам();

 //18.11.2016 - количество в выборке
 для каждого стр1 из ЭлементыФормы.ПанельВидТоваров.Страницы цикл
		 Имя11 = стр1.Имя; //Страница
		 Имя11 = прав(Имя11, стрДлина(Имя11) - 8);
	 стр1.Заголовок = Имя11;
 КонецЦикла;
 
 ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Заголовок =  ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Заголовок +" ("+ФОРМАТ(Товары.Количество(),"ЧРГ=,")+")";
 
время1 = ТекущаяУниверсальнаяДатаВМиллисекундах();  //21.02.2017
стрВремя = формат( (время1 - время0)/1000 ,"ЧДЦ=1; ЧН='менее 0,05'");
ЭтаФорма.Заголовок = "Рабочее место менеджера по продажам ("+стрВремя+" сек.)";

ЭлементыФормы["ДействиеОбновить"+Имя1].Доступность = Истина;

	Если Товары.Количество()=0 Тогда
		Предупреждение("Ничего не найдено!", 5);
	КонецЕсли;	

КонецПроцедуры


Процедура ОчиститьДискиНажатие(Элемент)
	ДопСтрокаПоискаДиски = "";
	ПроизводителиДисков  = Справочники.Производители.ПустаяСсылка();
	ПараметрШиринаДиски="";
	ПараметрДиаметрДиски="";
	ПараметрКоличествоОтверстий="";
	ПараметрPCD="";
	ПараметрВылет="";
	ПараметрDIA = "";
	ДопСтрокаПоискаДиски="";
 //ЗагрузитьДанныеПоТоварам();
 	Товары.Очистить();
КонецПроцедуры

Процедура ОчиститьШиныНажатие(Элемент)
	ДопСтрокаПоискаШины = "";
	ПроизводителиШин  = Справочники.Производители.ПустаяСсылка();
	Сезонность = Перечисления.ТипыСезонности.ПустаяСсылка();
	РодительШ  = Справочники.Номенклатура.ПустаяСсылка();
	ПараметрШирина="";
	ПараметрВысота="";
	ПараметрДиаметр="";
 //ЗагрузитьДанныеПоТоварам();	  
 	Товары.Очистить();
КонецПроцедуры
 
Процедура ДействиеОчиститьАКБНажатие(Элемент)
	
	ПроизводителиАКБ = Справочники.Производители.ПустаяСсылка();
	РодительАКБ		 = справочники.Номенклатура.ПустаяСсылка();
	ДопСтрокаПоискаАКБ = "";
	ПусковойТок = 0;
	Емкость		= 0;
	Размеры  	= "";
	Полярность 	= "";
	//ЗагрузитьДанныеПоТоварам();	  
 	Товары.Очистить();
КонецПроцедуры

Процедура ДействиеОчиститьАксессуарыНажатие(Элемент)
	ПроизводителиАксессуары = Справочники.Производители.ПустаяСсылка();
	ДопСтрокаПоискаАксессуары = "";
	Артикул = "";
	Родитель = справочники.Номенклатура.ПустаяСсылка();//+++ 20.11.2014
	//ЗагрузитьДанныеПоТоварам();	  
 	Товары.Очистить();
КонецПроцедуры

Процедура ДействиеОчиститьПрочееНажатие(Элемент)
	ПроизводителиПрочее = Справочники.Производители.ПустаяСсылка();
	РодительПрочее      = справочники.Номенклатура.ПустаяСсылка();
	ДопСтрокаПоискаПрочее = "";
	//ЗагрузитьДанныеПоТоварам();	  
 	Товары.Очистить();
КонецПроцедуры

Процедура ДействиеОчиститьШины1Нажатие(Элемент)
	ПроизводителиРекламы = Справочники.Производители.ПустаяСсылка();
	ДопСтрокаПоискаРеклама = "";
	//ЗагрузитьДанныеПоТоварам();	  
 	Товары.Очистить();
КонецПроцедуры


Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ЭлементыФормы.Товары.ТекущиеДанные ) Тогда
		ТабличноеПолеЗаказы.Очистить();
		ТабличноеПолеЦены.Очистить();
		ЭлементыФормы.ПолеHTMLДокумента.УстановитьТекст("");
		возврат;
	КонецЕсли;
	
флЦены    = Истина;
флЗаказы  = Истина;
флОстатки = Истина;
//Флажок1 = Истина;

Если флЦены Тогда
	Запрос = Новый Запрос;
		Запрос.Текст ="ВЫБРАТЬ
		              |	Представление(ЦеныНоменклатуры.ТипЦен) КАК ТипЦен,
		              |	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена
		              |ИЗ
		              |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних( ,
		              |				ТипЦен В (&СписЦен)  
					  |			   и Номенклатура = &Номенклатура
					  | ) КАК ЦеныНоменклатуры
		          	  |";
	
	//==============Для всех ===========================================================
	ТипЦенБазовая 	= Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008");
	ТипЦенКрупныйОпт = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005");
	ТипЦенСреднийОпт = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00002"); //Ярославские типы цен
	ТипЦенМелкийОпт	 = ТипЦенКрупныйОпт;
	
//+++ 24.06.2016 - Кр.Опт ДЛЯ ВСЕХ подразделений (вместо их "филиальных")!
	ТипЦенКрупныйОпт = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"); 
	
	
	//08.05.14 Смирнов для акб
	Если ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница=ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаАКБ Тогда
		ТипЦенСреднийОпт = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00013");//СпецЦена
	///Плотников Для акб не надо Дилерскую и Базовую
		   ТипЦенБазовая = Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	//21.03.2016  для Голубевой
	Если ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница=ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаАксессуары Тогда
		//06.03.2017
		//ТипЦенСреднийОпт  = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00009"); //дилерская 
		    ТипЦенБазовая = Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
		ТипЦенСреднийОпт  = Справочники.ТипыЦенНоменклатуры.ПустаяСсылка(); 
	КонецЕсли;
	
	Если не Контрагент.Пустая() тогда   //28.11.2016
		Если Контрагент.Экспорт и Контрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов.Код<>"643" тогда
			ТипЦенКрупныйОпт = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00028"); //Базовая USD
		КонецЕсли;	
	КонецЕсли;	
	
	СписЦен = новый массив; //30.05.2018 - списком!
	СписЦен.Добавить(ТипЦенМелкийОпт);
	СписЦен.Добавить(ТипЦенСреднийОпт);
	СписЦен.Добавить(ТипЦенКрупныйОпт);
	СписЦен.Добавить(ТипЦенБазовая);
	Запрос.УстановитьПараметр("СписЦен", СписЦен);
	
	товар = ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура;
	Запрос.УстановитьПараметр("Номенклатура",товар);
	
//--------------------------------------------------	
ТабличноеПолеЦены = Запрос.Выполнить().Выгрузить();
	
//18.11.2016 ---- Перс. цена клиента или по Общему правилу ------
списТов = новый СписокЗначений;
списТов.Добавить( товар );
таблЦены = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв( Контрагент, списТов );
если таблЦены=неопределено 
	или таблЦены.Количество()=0 тогда //28.11.2016
	стрЦены  = новый Структура("МинимальнаяЦена,ЦенаСоСкидкойПредоплаты,ЦенаПоТипуЦен,Приоритет",0,0,0,0);
иначеЕсли таблЦены.Количество()>0 тогда	
	стрЦены  = таблЦены[0];
КонецЕсли;

текст140 = ЭлементыФормы.Надпись14.Заголовок;
Если Найти(текст140,"№")>0 тогда
текст140 = лев(текст140, Найти(текст140,"№") - 2);
КонецЕсли;

Если стрЦены.Приоритет=0 тогда
	ЭлементыФормы.Надпись14.Заголовок = текст140;
	ЭлементыФормы.Надпись14.Подсказка = " ";
Иначе
	текст14 = формат(стрЦены.Приоритет,"ЧГ=0"); //17.03.2017
	ЭлементыФормы.Надпись14.Заголовок = текст140 + " № "+текст14;
	
	Если стрЦены.Приоритет<-7000 тогда//12.02.2019
    	ЭлементыФормы.Надпись14.Подсказка  = "ПОВЫШЕННАЯ Цена для Резервных товаров ИМ!";
		ЭлементыФормы.Надпись14.ЦветТекста = webЦвета.Фуксия;  //ярко-малиновый
		
	ИначеЕсли стрЦены.Приоритет=-7000 тогда
    	ЭлементыФормы.Надпись14.Подсказка  = "У клиента действует цена Распродажи на этот товар!";
		ЭлементыФормы.Надпись14.ЦветТекста = webЦвета.Синий;  //ЯркоСиний
		
	ИначеЕсли стрЦены.Приоритет=-5000 тогда
    	ЭлементыФормы.Надпись14.Подсказка  = "У клиента Есть фиксированная цена на этот товар!";
		ЭлементыФормы.Надпись14.ЦветТекста = webЦвета.Синий;//ЯркоСиний
		
	ИначеЕсли стрЦены.Приоритет<0 тогда
    	ЭлементыФормы.Надпись14.Подсказка = "Цена по Исключительному правилу № "+текст14;
		ЭлементыФормы.Надпись14.ЦветТекста = webЦвета.ТемноЗеленый;//зеленые - менять нельзя!
		
	ИначеЕсли стрЦены.Приоритет>0 и стрЦены.Приоритет<1000 тогда
    	ЭлементыФормы.Надпись14.Подсказка = "Цена по Персональному правилу клиента № "+текст14;
		ЭлементыФормы.Надпись14.ЦветТекста = webЦвета.ТемноСиний; //перс.правило!
		
	ИначеЕсли стрЦены.Приоритет=2000 тогда
    	ЭлементыФормы.Надпись14.Подсказка = "Нет цены по правилу! Цена = Кр.Опт Правило № "+текст14;
		ЭлементыФормы.Надпись14.ЦветТекста = webЦвета.Красный;
		
	ИначеЕсли стрЦены.Приоритет>1000 тогда
    	ЭлементыФормы.Надпись14.Подсказка = "Цена по Общему правилу № "+текст14;
		ЭлементыФормы.Надпись14.ЦветТекста = webЦвета.Черный;
	КонецЕсли;
КонецЕсли;
ЭлементыФормы.Надпись10.Заголовок  = ЭлементыФормы.Надпись14.Подсказка;//12.02.2019
ЭлементыФормы.Надпись10.ЦветТекста = ЭлементыФормы.Надпись14.ЦветТекста;

стрПерс1  = ТабличноеПолеЦены.добавить();
//ТипЦенКлиента = справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00006");	
Если Контрагент.Пустая() тогда
	если стрЦены.ЦенаПоТипуЦен>0 тогда
		проц1= (стрЦены.МинимальнаяЦена/стрЦены.ЦенаПоТипуЦен - 1)*100;
		если проц1=0 тогда проц = "" 
		иначе проц = " ("+формат(проц1,"ЧДЦ=0")+"%)";
		КонецЕсли;	
	иначе проц ="";
	КонецЕсли;	
ТипЦенКлиента	= "Цена общ."+проц;     
	стрПерс1.Цена   = стрЦены.МинимальнаяЦена;
иначе//===================================================================================
	цена1 = ?(предоплата, стрЦены.ЦенаСоСкидкойПредоплаты, стрЦены.МинимальнаяЦена);
	если стрЦены.ЦенаПоТипуЦен>0 тогда
		проц1= (цена1/стрЦены.ЦенаПоТипуЦен - 1)*100;
		если проц1=0 тогда проц = "" 
		иначе проц = "("+формат(проц1,"ЧДЦ=2")+"%)";
		КонецЕсли;	
	иначе проц ="";
	КонецЕсли;	

	ТипЦенКлиента   = "Цена Клиента"+проц;
	стрПерс1.Цена   = цена1;
КонецЕсли;
стрПерс1.ТипЦен = ТипЦенКлиента;	
КонецЕсли;
                                                
//------------------- заказы покупателей по складам------------------------------------------------------------
Если флЗаказы Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	               |	ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	Максимум( ЕстьNull(КатегорииОбъектов.Категория, """") ) КАК Категория
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателей.Остатки(, Номенклатура = &Номенклатура //СТРОКАОТБОР
				   |) КАК ЗаказыПокупателейОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (выбрать ко.Категория, ко.Объект как Объект1
				   |			из РегистрСведений.КатегорииОбъектов как ко
				   //20.02.2017 - упрощение запроса!
				   |			ГДЕ выразить(ко.Объект как Документ.ЗаказПокупателя).ссылка ССЫЛКА Документ.ЗаказПокупателя
				   |			и выразить(ко.Объект как Документ.ЗаказПокупателя).Дата>=&ДатаМесяц ) КАК КатегорииОбъектов
	               |		ПО ЗаказыПокупателейОстатки.ЗаказПокупателя = КатегорииОбъектов.Объект1
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент,
	               |	ЗаказыПокупателейОстатки.ЗаказПокупателя,
	               |	ЗаказыПокупателейОстатки.КоличествоОстаток
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата";

	Запрос.УстановитьПараметр("Номенклатура",ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура);
	Запрос.УстановитьПараметр("ДатаМесяц", ДобавитьМесяц( ТекущаяДата(), -1) );
		
	Если ЗначениеНеЗаполнено(Подразделение) или Подразделение = ГоловноеПодразделение Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"//СТРОКАОТБОР" , " И ЗаказПокупателя.Транзит=ЛОЖЬ 
		|	И (ЗаказПокупателя.Проверен "+    //+++ 30.06.2014
		?(Константы.ИспользоватьОстаткиСтороннихПоставщиков.Получить(), " или ЗаказПокупателя.Поставщик<>Значение(справочник.Контрагенты.ПустаяСсылка) ","")
		+")");  
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"//СТРОКАОТБОР","И ЗаказПокупателя.Транзит И ЗаказПокупателя.Проверен И ЗаказПокупателя.Подразделение=&Подразделение");
		Запрос.УстановитьПараметр("Подразделение",Подразделение);
	КонецЕсли;	

	ТабличноеПолеЗаказы=Запрос.Выполнить().Выгрузить();
КонецЕсли;
	
	//------------------------------- остатки по складам ---------------------------------------------------------
Если флОстатки Тогда
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|Склад ,	КоличествоОстаток ИЗ
	|РегистрНакопления.ТоварыНаСкладах.Остатки (,Номенклатура =&Номенклатура //СТРОКАОТБОР
	|	И Склад.ЗапретитьИспользование=ЛОЖЬ
	|)
	|//ОстаткиПоставщиков
	|УПОРЯДОЧИТЬ ПО Склад";

	Запрос.УстановитьПараметр("Номенклатура",ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура);
	
	Если ЗначениеНеЗаполнено(Подразделение) или Подразделение = ГоловноеПодразделение Тогда  //22.10.2018 - изменен Транзит >> Подразделение!
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"//СТРОКАОТБОР" , " И Склад.Транзитный = ЛОЖЬ И Склад.Подразделение = &Пустое");
		Запрос.УстановитьПараметр("Пустое", справочники.Подразделения.ПустаяСсылка() );//так не блокируются записи филиалов!
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"//СТРОКАОТБОР" , " И Склад.Транзитный = Истина И Склад.Подразделение=&Подразделение ");
		Запрос.УстановитьПараметр("Подразделение",Подразделение);
	КонецЕсли;	
	
	//+++ 30.06.2014 ---------------Остатки сторонних поставщиков уже есть в прайсе!-------------------------------
	//Если Константы.ИспользоватьОстаткиСтороннихПоставщиков.Получить() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"//ОстаткиПоставщиков" , "ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
				   |	ВЫБОР
				   |		КОГДА &ПоказыватьПоставщикаПользователю
				   |			ТОГДА ОстаткиНоменклатурыКонтрагентов.Контрагент.Наименование
				   |		ИНАЧЕ ""на заказ""
				   |	КОНЕЦ КАК Склад,
				   |	выбор когда ОстаткиНоменклатурыКонтрагентов.Контрагент в (&СписокКонтр) Тогда
				   |			выбор когда ЕСТЬNULL(ОстаткиНоменклатурыКонтрагентов.Остаток, 0)>40 Тогда "">40"" 
				   |				  Иначе	ЕСТЬNULL(ОстаткиНоменклатурыКонтрагентов.Остаток, 0) конец
				   |		   Иначе ЕСТЬNULL(ОстаткиНоменклатурыКонтрагентов.Остаток, 0) конец КАК Остаток
				   |ИЗ
				   |	РегистрСведений.ОстаткиНоменклатурыКонтрагентов КАК ОстаткиНоменклатурыКонтрагентов
				   |ГДЕ
				   |	ОстаткиНоменклатурыКонтрагентов.Номенклатура    = &Номенклатура
				   |	И ОстаткиНоменклатурыКонтрагентов.Подразделение = &Подразделение");
		//+++ 10.07.2014 - отбор поставщиков по подразделению		   
		ПодразделениеОтбор = ?(Подразделение.Код = "00005", справочники.Подразделения.ПустаяСсылка(),  Подразделение);
		Запрос.УстановитьПараметр("Подразделение", ПодразделениеОтбор );
		
		СписокКонтр = яштПоставщики.ПолучитьСписокПоставщиков(ЛОЖЬ); // не ОТХ
 		Запрос.УстановитьПараметр("СписокКонтр", СписокКонтр );
		
		//------показывает поставщика только для полных прав или Если подразделение,
		//------для подразделений - показываем поставщиков ТОЛЬКО по их подразделению!
		ПоказыватьПоставщикаПользователю =НЕ ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"УчетТолькоПоПодразделениюПользователя")
					или (ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"УчетТолькоПоПодразделениюПользователя")
						 И глТекущийПользователь.ОсновноеПодразделение = ПодразделениеОтбор);
					               
		Запрос.УстановитьПараметр("ПоказыватьПоставщикаПользователю", ПоказыватьПоставщикаПользователю );
		
	//КонецЕсли;	
   //+++)
	ТабличноеПолеОстатки=Запрос.Выполнить().Выгрузить();
	
	
	Отбор = Новый структура;
	Отбор.Вставить("Категория",Истина);	
	ТабличноеПолеЗаказыСКатегориями = ТабличноеПолеЗаказы.Скопировать(Отбор);
	
 	//ЭлементыФормы.Надпись10.Заголовок = " ";
	 текСтрЗак = Элементыформы.ТабличноеПолеЗаказы.ТекущиеДанные; //30.05.2018 есть разрешение в Заказе !
 	 Если текСтрЗак<>неопределено  
		  тогда номЗак = текСтрЗак.ЗаказПокупателя.Номер;
	  Контр1 =  ?(не Контрагент.Пустая(), Контрагент, текСтрЗак.Контрагент);
	  флРазрешенЧерный = (Контр1.Экспорт или текСтрЗак.ЗаказПокупателя.РазрешитьГрузитьТоварыИзСтопЛиста); //31.05.2018 экспортным - всё можно! 
	  иначе 
		  флРазрешенЧерный = ЛОЖЬ; номЗак = "";
	  КонецЕсли; 
	 
	////+++ Надпись заказы 250216
	Если ТабличноеПолеЗаказыСКатегориями.Итог("КоличествоОстаток") > ТабличноеПолеОстатки.Итог("КоличествоОстаток") Тогда
		 ЭлементыФормы.Надпись10.Заголовок = "Количество по Заказу "+номЗак+" превышает Св.Остаток!";
		 ЭлементыФормы.Надпись10.ЦветТекста = webЦвета.Красный;
		  
	ИначеЕсли ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Имя="СтраницаДиски" тогда
		 
		Если СписСтоп.НайтиПоЗначению(товар) <> Неопределено тогда
  		 ЭлементыФормы.Надпись10.Заголовок = "Товар в Сером списке! Отгрузка "+?(флРазрешенЧерный,"по заказу "+номЗак+" Разрешена.","ЗАПРЕЩЕНА!");
		 ЭлементыФормы.Надпись10.ЦветТекста = webЦвета.Красный;
	 	ИначеЕсли СписСтопЧерный.НайтиПоЗначению(товар) <> Неопределено тогда
  	 	 ЭлементыФормы.Надпись10.Заголовок = "Товар в ЧЁРНОМ списке! Отгрузка "+?(флРазрешенЧерный,"по заказу "+номЗак+" Разрешена.","ЗАПРЕЩЕНА!");
		 ЭлементыФормы.Надпись10.ЦветТекста = webЦвета.Красный;
		ИначеЕсли СписРаспродажаДиски.НайтиПоЗначению(товар) <> Неопределено и КонтрагентРаспродажа тогда
		 ЭлементыФормы.Надпись10.Заголовок = "Распродажа по дискам!";
		 ЭлементыФормы.Надпись10.ЦветТекста = webЦвета.Черный;
		КонецЕсли;
	
	ИначеЕсли (ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Имя="СтраницаАКБ"  И СписАкцияАКБ.НайтиПоЗначению(товар) <> Неопределено)  тогда
		 ЭлементыФормы.Надпись10.Заголовок = "Распродажа по АКБ!";
		 ЭлементыФормы.Надпись10.ЦветТекста = webЦвета.Черный;
	ИначеЕсли (ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Имя="СтраницаАксессуары"  И СписАкцияАКБ.НайтиПоЗначению(товар) <> Неопределено)  тогда
		 ЭлементыФормы.Надпись10.Заголовок = "Распродажа по Аксессуарам!";
		 ЭлементыФормы.Надпись10.ЦветТекста = webЦвета.Черный;
	КонецЕсли;
	
	
КонецЕсли;

//--------------------Фото----------------
ПоказатьОсновноеИзображениеЭлемента(ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура);	
	
КонецПроцедуры

Процедура РасшифроватьЯчейку(НоменклатураСсылка,КолонкаИмя)
	Если ЗначениеЗаполнено(НоменклатураСсылка) И КолонкаИмя = "КоличествоОстаток" Тогда
		
				ОстаткиТоваровНаСкладах = Отчеты.ОстаткиТоваровНаСкладах.Создать();
				ФормаОбработки = ОстаткиТоваровНаСкладах.ПолучитьОсновнуюФорму();
				ФормаОбработки.Открыть();
				ФормаОбработки.ОбщийОтчет.ЗаполнитьНачальныеНастройки();
					// Удаляем лишние показатели
					
					
			Если ФормаОбработки.ПостроительОтчета.ИзмеренияСтроки.Найти("Склад") = Неопределено Тогда
				ФормаОбработки.ПостроительОтчета.ИзмеренияСтроки.Добавить("Склад");
			КонецЕсли;	
			
					
				Для Каждого СтрОтб из ФормаОбработки.ПостроительОтчета.Отбор Цикл
					СтрОтб.Использование = Ложь;	
				КонецЦикла;
				
				
					Если ФормаОбработки.ПостроительОтчета.Отбор.Найти("Склад.ЗапретитьИспользование") = Неопределено Тогда
						СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("Склад.ЗапретитьИспользование");
					Иначе
						СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Найти("Склад.ЗапретитьИспользование");
					КонецЕсли; 
					
					СтрОтб.ВидСравнения = ВидСравнения.Равно;
					СтрОтб.Значение = Ложь;
					СтрОтб.Использование = Истина;
					
				Если ЗначениеНеЗаполнено(Подразделение) или Подразделение = ГоловноеПодразделение Тогда		
					Если ФормаОбработки.ПостроительОтчета.Отбор.Найти("Склад.Транзитный") = Неопределено Тогда
						СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("Склад.Транзитный");
					Иначе
						СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Найти("Склад.Транзитный");
					КонецЕсли; 
					
					СтрОтб.ВидСравнения = ВидСравнения.Равно;
					СтрОтб.Значение = Ложь;
					СтрОтб.Использование = Истина;	
				Иначе
					
					Если ФормаОбработки.ПостроительОтчета.Отбор.Найти("Склад.Транзитный") = Неопределено Тогда
						СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("Склад.Транзитный");
					Иначе
						СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Найти("Склад.Транзитный");
					КонецЕсли; 
					
					СтрОтб.ВидСравнения = ВидСравнения.Равно;
					СтрОтб.Значение = Истина;
					СтрОтб.Использование = Истина;	
					
					Если ФормаОбработки.ПостроительОтчета.Отбор.Найти("Склад.Подразделение") = Неопределено Тогда
						СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("Склад.Подразделение");
					Иначе
						СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Найти("Склад.Подразделение");
					КонецЕсли; 
					
					СтрОтб.ВидСравнения = ВидСравнения.Равно;
					СтрОтб.Значение = Подразделение;
					СтрОтб.Использование = Истина;	
				КонецЕсли;	
				
			Если ФормаОбработки.ПостроительОтчета.Отбор.Найти("Номенклатура") = Неопределено Тогда
				СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Добавить("Номенклатура");
			Иначе
				СтрОтб = ФормаОбработки.ПостроительОтчета.Отбор.Найти("Номенклатура");
			КонецЕсли; 
	
				СтрОтб.ВидСравнения = ВидСравнения.Равно;
				СтрОтб.Значение = НоменклатураСсылка;
				СтрОтб.Использование = Истина;

				ФормаОбработки.Открыть();
				ФормаОбработки.ОбновитьОтчет();
				
				Возврат;

	ИначеЕсли   ЗначениеЗаполнено(НоменклатураСсылка) И КолонкаИмя = "КоличествоВПути1" Тогда
			СтандартнаяОбработка=Ложь;
			
        ФлагУдаленноеПодразделение = ЗначениеЗаполнено(Подразделение) И (Подразделение<> ГоловноеПодразделение);
	
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступления,
		             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
		             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
		             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент КАК Контрагент,
		             |	ЗаказыПоставщикамОстатки.Номенклатура,
		             |	ЗаказыПоставщикамОстатки.КоличествоОстаток
		             |ИЗ
		             |	РегистрНакопления.ЗаказыПоставщикам.Остатки( ,
		             |			ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
		             |				И Номенклатура = &Номенклатура
		             |				И ЗаказПоставщику.Транзит "+?(ФлагУдаленноеПодразделение,"И ЗаказПоставщику.Подразделение = &Подразделение ","= ЛОЖЬ")+" 
		             |				И ЗаказПоставщику.ДатаПоступления >= &МинДатаПоступления) КАК ЗаказыПоставщикамОстатки
		             |
				//+++ 20.11.2017 --------------------расшифровка - отбор по 1 товару из Заказов ОТХ (по задаче №35864 от Кузьмичевой Ирины)-----------------------
		             |ОБЪЕДИНИТЬ ВСЕ
		             |
		             |ВЫБРАТЬ
		                |	ЗакОТХтовары.Ссылка.Дата,
		                |	ЗакОТХтовары.Ссылка,
		                |	ЗакОТХтовары.Ссылка.ДоговорКонтрагента.ОтветственноеЛицо,
		                |	ЗакОТХтовары.Ссылка.Контрагент,
		                |	ЗакОТХтовары.Номенклатура,
		                |	СУММА(ЗакОТХтовары.Количество) КАК Количество
		                |ИЗ
		                |	Документ.ЗаказПоОтветственномуХранению.Товары КАК ЗакОТХтовары
		                |ГДЕ
		                |	ЗакОТХтовары.Номенклатура = &Номенклатура
						
		                |	И ЗакОТХтовары.Ссылка В
		                |			(ВЫБРАТЬ
		                |				ЗакОТХ.Ссылка
		                |			ИЗ
		                |				Документ.ЗаказПоОтветственномуХранению КАК ЗакОТХ 
						|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Обороты(&ОдинМесяц, , Регистратор, 
						|						Номенклатура = &Номенклатура
		                |						И Контрагент В (&СписокКонтрагентовОТХ)
		                |						И Склад.Транзитный"+?(ФлагУдаленноеПодразделение,"И Склад.Подразделение=&Подразделение","= ЛОЖЬ")+"
						|						) КАК ТоварыОТХОбороты
		                |					ПО
		                |						ВЫРАЗИТЬ(ТоварыОТХОбороты.Регистратор КАК Документ.ОперацияПоОтветственномуХранению).ДокументОснование = ЗакОТХ.Ссылка
		                |			ГДЕ
		                |				ЗакОТХ.Дата >= &ОдинМесяц
		                |				И ЗакОТХ.Проведен
		                |				И ЗакОТХ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоОтветственномуХранению.Поступление)
		                |				И ЗакОТХ.Контрагент В (&СписокКонтрагентовОТХ)
						|				И (ЗакОТХ.Подразделение = &ПодразделениеОТХ 
						//12.02.2019 ---- и так и сяк! ----------------------------------------------------
		                |				или ЗакОТХ.Подразделение = Значение(Справочник.Подразделения.ПустаяСсылка)
						|				  )
		                |				И ЕСТЬNULL(ТоварыОТХОбороты.КоличествоОборот, 0) = 0)
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ЗакОТХтовары.Номенклатура,
		                |	ЗакОТХтовары.Ссылка.Дата,
		                |	ЗакОТХтовары.Ссылка,
		                |	ЗакОТХтовары.Ссылка.ДоговорКонтрагента.ОтветственноеЛицо,
		                |	ЗакОТХтовары.Ссылка.Контрагент";
					 
		Запрос.УстановитьПараметр("МинДатаПоступления", НачалоДня(ТекущаяДата()) - 14*86400 ); //+++ 01.09.2014 в течение недели может быть "задержка"
		
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка); 		
		
		Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
		
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка); 		
		Запрос.УстановитьПараметр("Подразделение",  Подразделение);
		
		//+++ 20.11.2017
		Запрос.УстановитьПараметр("ОдинМесяц", ДобавитьМесяц(ТекущаяДата(), -1)  );
		Запрос.УстановитьПараметр("ПодразделениеОТХ", ?(ФлагУдаленноеПодразделение, Подразделение, ГоловноеПодразделение) ); //12.02.2019 яр!
		СписокКонтрагентовОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);  
		Запрос.УстановитьПараметр("СписокКонтрагентовОТХ",СписокКонтрагентовОТХ);

		
		ТабДок = Новый ТабличныйДокумент;
		Выборка=Запрос.Выполнить().Выбрать();
		Если Выборка.Количество()>0 Тогда
			Макет=ПолучитьМакет("ТоварыВПути");	
			
			ШапкаТовара =Макет.ПолучитьОбласть("ШапкаТовара");
		    ШапкаТовара.Параметры.Код = НоменклатураСсылка.Код;
			ШапкаТовара.Параметры.Номенклатура = НоменклатураСсылка;
			ТабДок.Вывести(ШапкаТовара);
			
			ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
			ТабДок.Вывести(ОбластьШапка);
			
			Пока Выборка.Следующий() Цикл
				ОбластьДетали=Макет.ПолучитьОбласть("Детали");
				ОбластьДетали.Параметры.Заполнить(Выборка);
				ОбластьДетали.Параметры.Комментарий=Выборка.ЗаказПоставщику.Комментарий;
				ТабДок.Вывести(ОбластьДетали);
			КонецЦикла;	
		КонецЕсли;
		ТабДок.ТолькоПросмотр=Истина;		
		ТабДок.Показать();

		
	КонецЕсли;			
	
КонецПроцедуры	

Процедура ТабличноеПолеЗаказыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Заказ=ЭлементыФормы.ТабличноеПолеЗаказы.ТекущиеДанные.ЗаказПокупателя;
	Если ЗначениеЗаполнено(Заказ) Тогда
		Заказ.ПолучитьФорму("ФормаДокумента").Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЗаказНажатие(Элемент)
	
	НовыйЗаказ = Документы.ЗаказПокупателя.СоздатьДокумент();
	
	если ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница=1 тогда 
		НовыйЗаказ.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00008"); //Базовая
	иначе
		НовыйЗаказ.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00005"); //Кр.Опт
	КонецЕсли;
	
	//+++ 18.07.2014
	НовыйЗаказ.Подразделение = ?(ЗначениеЗаполнено(Подразделение), Подразделение, справочники.Подразделения.НайтиПоКоду("00005"));
	НовыйЗаказ.Транзит		 = ?(ЗначениеЗаполнено(Подразделение), Подразделение.Код <> "00005", ложь);
	
//18.11.2016 --------------------------------------
	НовыйЗаказ.Контрагент = Контрагент;
	КонтрагентПриИзменении(НовыйЗаказ);
	
	//-------------определяем договор с этим клиентом для текущего менеджера-------------------------
	Дог = Контрагент.ОсновнойДоговорКонтрагента;
	если не Контрагент.Пустая() тогда
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ДоговорыКонтрагентов.Ссылка
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Владелец = &Владелец
	               |	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
	               |	И (ДоговорыКонтрагентов.ТипДоговора = &ТипДоговора
				   |		или ДоговорыКонтрагентов.ТипДоговора = &ТипДоговора2 )
	               |	И ДоговорыКонтрагентов.ОтветственноеЛицо = &ОтветственноеЛицо
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДоговорыКонтрагентов.Наименование";
		КодДог = ?(предоплата, "00001", "00004");
		Запрос.УстановитьПараметр("ТипДоговора", справочники.ТипыДоговоров.НайтиПоКоду(кодДог));
		
		КодДог2 = ?(предоплата, "00005", "00004"); //16.05.2017
		Запрос.УстановитьПараметр("ТипДоговора2", справочники.ТипыДоговоров.НайтиПоКоду(кодДог2));
		
		Запрос.УстановитьПараметр("ВидДоговора", перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
		Запрос.УстановитьПараметр("Владелец", Контрагент);
		Запрос.УстановитьПараметр("ОтветственноеЛицо", глТекущийПользователь);
		Результат = Запрос.Выполнить();
		если НЕ результат.Пустой() тогда
			Выборка = Результат.Выбрать(); 
			Выборка.Следующий();
			Дог = Выборка.ссылка;
		иначе
			Предупреждение("   Выбран Основной договор покупателя!
						   |на менеджера: "+строка(дог.ОтветственноеЛицо), 30);
		КонецЕсли;
	КонецЕсли;

	НовыйЗаказ.Дата = ТекущаяДата();
//-------------------------------------------------	
	
	ФормаЗаказа = НовыйЗаказ.ПолучитьФорму(, ЭтаФорма);
	ФормаЗаказа.мОбновлятьВладельца = Истина;
	ФормаЗаказа.Открыть();
	
	НовыйЗаказ.ДоговорКонтрагента = Дог;//18.11.2016
	НовыйЗаказ.КурсВзаиморасчетов = 1;
	НовыйЗаказ.УчитыватьНДС     = истина;
	НовыйЗаказ.СуммаВключаетНДС = истина;

Если Контрагент.Пустая() тогда
	НовыйЗаказ.ВалютаДокумента = справочники.Валюты.НайтиПоКоду("643");
иначе
	НовыйЗаказ.ВалютаДокумента = дог.ВалютаВзаиморасчетов;
	если Контрагент.Экспорт тогда
		Если дог.ВалютаВзаиморасчетов.Код = "643"
		и найти(врег(Дог.Наименование),"ЭКСПОРТ")>0    //Экспорт или З кспорт
		и найти(Дог.Наименование,"*")=0 тогда
		НовыйЗаказ.УчитыватьНДС     = ЛОЖЬ;
		НовыйЗаказ.СуммаВключаетНДС = ЛОЖЬ;
		иначеесли дог.ВалютаВзаиморасчетов.Код <> "643"  тогда
		НовыйЗаказ.КурсВзаиморасчетов = константы.КурсUSD.Получить(); // как Егор установил
		НовыйЗаказ.УчитыватьНДС     = истина;
		НовыйЗаказ.СуммаВключаетНДС = истина;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;	
	НоваяСтрока = мОформляемыеДокументы.Добавить();
	НоваяСтрока.Объект = НовыйЗаказ;
	НоваяСтрока.Форма  = ФормаЗаказа;

КонецПроцедуры


// Процедура - обработчик события "ПриИзменении" поля ввода контрагента.
//
Процедура КонтрагентПриИзменении(НовыйЗаказ)
 	
	// Выполняем общие действия для всех документов при изменении Контрагент.
	ПриИзмененииЗначенияКонтрагента(НовыйЗаказ);
	
	НовыйЗаказ.ДатаОплаты = НовыйЗаказ.Дата;
	Если НовыйЗаказ.ДоговорКонтрагента.ДержатьРезервБезОплатыОграниченноеВремя Тогда
		НовыйЗаказ.ДатаОплаты = НовыйЗаказ.ДатаОплаты + НовыйЗаказ.ДоговорКонтрагента.ЧислоДнейРезерваБезОплаты * 24 * 60 * 60;
	КонецЕсли;
	
	НовыйЗаказ.КонтактноеЛицо = НовыйЗаказ.Контрагент.ОсновноеКонтактноеЛицо;
		
	Если ЗначениеЗаполнено(НовыйЗаказ.Контрагент.Грузополучатель) Тогда
		Грузополучатель = НовыйЗаказ.Контрагент.Грузополучатель;
		//+++Шарафутдинов 26.03.2018
		НовыйЗаказ.Грузополучатель = Грузополучатель;
		//---Шарафутдинов 26.03.2018
	КонецЕсли;

КонецПроцедуры // КонтрагентПриИзменении()


Процедура ПодразделениеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
//+++ 04.07.2017 ------ просто чистим все списки выбора! ------	
	Товары.Очистить();

	масПолей = новый массив;
	//шины
	масПолей.Добавить("ПроизводителиШин");
	масПолей.Добавить("РодительШ");
	масПолей.Добавить("ПараметрШирина");
	масПолей.Добавить("ПараметрВысота");	
	масПолей.Добавить("ПараметрДиаметр");

	//диски
	масПолей.Добавить("ПроизводителиДисков");
	масПолей.Добавить("ПараметрШиринаДиски");
	масПолей.Добавить("ПараметрДиаметрДиски");
	масПолей.Добавить("ПараметрКоличествоОтверстий");
	масПолей.Добавить("ПараметрPCD");
	масПолей.Добавить("ПараметрВылет");
	масПолей.Добавить("ПараметрDIA");

	//АКБ
	масПолей.Добавить("ПроизводителиАКБ");
	масПолей.Добавить("РодительАКБ");
	масПолей.Добавить("Емкость");
	масПолей.Добавить("Полярность");
	масПолей.Добавить("Размеры");
	масПолей.Добавить("ПусковойТок");

	//Акс
	масПолей.Добавить("ПроизводителиАксессуары");
    масПолей.Добавить("Родитель");
	
	//Прочее
	масПолей.Добавить("ПроизводителиПрочее");
    масПолей.Добавить("РодительПрочее");//+++ 15.09.2017
	//Реклама
	масПолей.Добавить("ПроизводителиРекламы");

	для i=0 по масПолей.Количество()-1 цикл
		ЭлементыФормы[масПолей[i]].СписокВыбора.Очистить();
	КонецЦикла;

КонецПроцедуры

//Орлов ++ 06022014
Процедура УстановитьВидимость()
	
	ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаАКБ.Видимость    = Не РольДоступна("Партнер");
	ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаПрочее.Видимость = Не РольДоступна("Партнер");
	ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаШины.Видимость   = Не РольДоступна("Партнер");
	//ЭлементыФормы.Надпись8.Видимость                                 = Не РольДоступна("Партнер"); 
	ЭлементыФормы.НадписьПодразделение.Видимость                     = Не РольДоступна("Партнер");
	ЭлементыФормы.Подразделение.Видимость                            = Не РольДоступна("Партнер");
	ЭлементыФормы.СоздатьЗаказ.Видимость                             = Не РольДоступна("Партнер");
	ЭлементыФормы.ТабличноеПолеЦены.Видимость                        = Не РольДоступна("Партнер");
	ЭлементыФормы.ТабличноеПолеОстатки.Видимость                     = Не РольДоступна("Партнер");
	ЭлементыФормы.ТабличноеПолеЗаказы.Видимость		                 = Не РольДоступна("Партнер");
	
	
	//+++ 29.10.2014 для Ярославля и СПб - видимость есть!
	флВидимость = (Подразделение = справочники.Подразделения.ПустаяСсылка()
				   или Подразделение.Код="00005" 
				   или Подразделение.Код="00112");
	
	ЭлементыФормы.Товары.Колонки.уПоставщиков.Видимость = флВидимость;
	ЭлементыФормы.Товары.Колонки.СрокДоставки.Видимость = флВидимость;
	ЭлементыФормы.Товары.Колонки.КоличествоРазгружается.Видимость = флВидимость;

КонецПроцедуры
//Орлов -- 06022014

//+++ расцветка отрицательных остатков
Процедура ТоварыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.СвободныйОстаток<0 Тогда
		попытка
		Если ДанныеСтроки.СвободныйОстаток + ДанныеСтроки.КоличествоОтветХранение>=0 
			или ДанныеСтроки.СвободныйОстаток + ДанныеСтроки.КоличествоНаОшиповке>=0
			или ДанныеСтроки.СвободныйОстаток + ДанныеСтроки.КоличествоВПути1>=0 
			или ДанныеСтроки.СвободныйОстаток + ДанныеСтроки.КоличествоВПути2>=0 
			или ДанныеСтроки.СвободныйОстаток + ДанныеСтроки.уПоставщиков>=0 Тогда
			ОформлениеСтроки.цветФона = webЦвета.СветлоЖелтый;
		Иначе
			ОформлениеСтроки.цветФона = webЦвета.СветлоРозовый;
		КонецЕсли;	
		исключение
		КонецПопытки;
	КонецЕсли;
	
	//+++ 19.07.2017
	Если ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Имя="СтраницаДиски" тогда
		Если СписСтоп.НайтиПоЗначению(ДанныеСтроки.Номенклатура) <> Неопределено тогда
			ОформлениеСтроки.цветФона = webЦвета.СветлоСерый;
		ИначеЕсли СписСтопЧерный.НайтиПоЗначению(ДанныеСтроки.Номенклатура) <> Неопределено тогда
		//ОформлениеСтроки.цветФона = webЦвета.ТеплоРозовый;
			ОформлениеСтроки.цветФона = webЦвета.Серый;   //Чёрный список!!!
		ИначеЕсли КонтрагентРаспродажа тогда
			Если СписРаспродажаДиски.НайтиПоЗначению(ДанныеСтроки.Номенклатура) <> Неопределено тогда
			ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
			КонецЕсли;
		КонецЕсли;
	//17.03-04.07.2017  АкцияАКБ / РаспродажаДиски
ИначеЕсли ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Имя="СтраницаАКБ"
		или ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Имя="СтраницаАксессуары" тогда //06.02.2019
		Если СписАкцияАКБ.НайтиПоЗначению(ДанныеСтроки.Номенклатура) <> Неопределено тогда
			ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


//----------------------Заполнение Производителей в момент выбора------------------------------------

Процедура ПараметрШиринаДискиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Если ЭлементыФормы.ПараметрШиринаДиски.СписокВыбора.Количество()=0 Тогда
		ПеречитатьПараметрыДисков(Истина);
	КонецЕсли;	
КонецПроцедуры

Процедура ЕмкостьНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Если ЭлементыФормы.Емкость.СписокВыбора.Количество()=0 Тогда
     ПеречитатьПараметрыАКБ(Истина);   
	КонецЕсли; 
КонецПроцедуры

Процедура ПроизводителиШинНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	флСразу = (ЭлементыФормы.ПроизводителиШин.СписокВыбора.Количество()=0);
	ПеречитатьПроизводителей(флСразу, 5);//только по шинам  - если не сразу - то через 30 мин обновление всех списков выбора!
КонецПроцедуры

Процедура ПроизводителиДисковНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	флСразу = (ЭлементыФормы.ПроизводителиДисков.СписокВыбора.Количество()=0); 
	ПеречитатьПроизводителей(флСразу, 3);//только по 1 типу
КонецПроцедуры

Процедура ПроизводителиАКБНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	флСразу = (ЭлементыФормы.ПроизводителиАКБ.СписокВыбора.Количество()=0);
	ПеречитатьПроизводителей(флСразу, 1);//только по 1 типу
КонецПроцедуры

Процедура ПроизводителиПрочееНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	флСразу = (ЭлементыФормы.ПроизводителиПрочее.СписокВыбора.Количество()=0);
	ПеречитатьПроизводителей(флСразу, 2);//только по 1 типу
КонецПроцедуры

Процедура ПроизводителиРекламыНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	флСразу = (ЭлементыФормы.ПроизводителиРекламы.СписокВыбора.Количество()=0); 
	ПеречитатьПроизводителей(флСразу, 6);//только по 1 типу
КонецПроцедуры

Процедура ПроизводителиАксессуарыНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	флСразу = (ЭлементыФормы.ПроизводителиАксессуары.СписокВыбора.Количество()=0); 
	ПеречитатьПроизводителей(флСразу, 4);//только по 1 типу
КонецПроцедуры

Процедура ТабличноеПолеЗаказыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ЗначениеЗаполнено(ДанныеСтроки.ЗаказПокупателя) Тогда //+++ 31.08.2016
		Если ДанныеСтроки.ЗаказПокупателя.Проверен=ЛОЖЬ
			или ДанныеСтроки.ЗаказПокупателя.Резерв 
			
			//11.08.2017 - от стороннего поставщика - еще не приехало... 
			или ( ДанныеСтроки.ЗаказПокупателя.Статус = перечисления.СтатусыЗаказов.Подтвержден
				и ЗначениеЗаполнено(ДанныеСтроки.ЗаказПокупателя.Поставщик) ) 
			Тогда
			
			ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт,,,,Истина);// Курсив
			
			//11.08.2017 - курсив и на синем фоне
			Если ( ДанныеСтроки.ЗаказПокупателя.Статус = перечисления.СтатусыЗаказов.Подтвержден
				и ЗначениеЗаполнено(ДанныеСтроки.ЗаказПокупателя.Поставщик) )  тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.ЦианСветлый;//бледно-голубой
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Категория.ОтображатьТекст = Ложь;
	Если ЗначениеЗаполнено(ДанныеСтроки.Категория) Тогда //21.02.2017
		
		ОформлениеСтроки.Ячейки.Категория.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.Категория.текст = ДанныеСтроки.Категория;
		
		ОформлениеСтроки.Ячейки.Категория.ОтображатьФлажок = Истина;
		ОформлениеСтроки.Ячейки.Категория.Флажок = Истина; 
		ОформлениеСтроки.ЦветФона = webЦвета.СветлоЖелтый;
	Иначе
		//+++ 12.02.2019 ---- заказ серым фоном! отгружать нельзя!
		текСтрТовары = ЭлементыФормы.Товары.ТекущиеДанные;
		Если текСтрТовары<>неопределено тогда
			Если ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Имя="СтраницаДиски" тогда
				товар =  текСтрТовары.Номенклатура;
				Если СписСтоп.НайтиПоЗначению(товар) <> Неопределено 
					или СписСтопЧерный.НайтиПоЗначению(товар) <> Неопределено тогда
					Если НЕ ( ДанныеСтроки.ЗаказПокупателя.Контрагент.Экспорт или ДанныеСтроки.ЗаказПокупателя.РазрешитьГрузитьТоварыИзСтопЛиста)тогда 
		//			 ЭлементыФормы.Надпись10.Заголовок = "Товар в Сером/Черном списке! Отгрузка ЗАПРЕЩЕНА!");
					ОформлениеСтроки.ЦветФона = webЦвета.Розовый;
					ОформлениеСтроки.Ячейки.Категория.ОтображатьТекст = Истина;
					ОформлениеСтроки.Ячейки.Категория.текст = "Стоп-лист";
				    КонецЕсли; //Запрещенный заказ!
				КонецЕсли; //стоп-лист
			КонецЕсли;//Диски
		КонецЕсли;//текСтр
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеОстаткиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ТипЗнч(ДанныеСтроки.Склад)=Тип("Строка") Тогда //это не склад, а сторонний поставщик
		ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт,,,,Истина);// Курсив
	КонецЕсли;
КонецПроцедуры

Процедура Флажок1ПриИзменении(Элемент)
	Если ЭлементыФормы.Товары.ТекущиеДанные<>неопределено Тогда
		ПоказатьОсновноеИзображениеЭлемента(ЭлементыФормы.Товары.ТекущиеДанные.Номенклатура);	
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1КартаПартнера(Кнопка)
	орг = справочники.Организации.НайтиПоКоду("00001");
	орг.ПолучитьОбъект().ПечатьКартыПатнера(орг);
КонецПроцедуры

//-----------------диаметры----------------------
Процедура ПараметрДиаметрНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Если ЭлементыФормы.ПараметрДиаметр.СписокВыбора.Количество()=0 тогда
		ПеречитатьДиаметры(); //шины
	КонецЕсли;	
КонецПроцедуры


Процедура ПараметрДиаметрДискиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
 Если ЭлементыФормы.ПараметрДиаметрДиски.СписокВыбора.Количество()=0 Тогда
	 ПеречитатьДиаметры(ЛОЖЬ);
 КонецЕсли;
 
КонецПроцедуры


Процедура РодительШНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Если элементыФормы.РодительШ.СписокВыбора.Количество()=0 
		или ( ТекущаяДата() - ДатаПоследнегоЧтенияПараметров )>600 Тогда // 10 мин.
	Запрос = Новый Запрос;
		
	Запрос.Текст="ВЫБРАТЬ различные
	|	А.Родитель как Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Номенклатура.Родитель КАК Родитель
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура.ВидТовара = &ВидТовара
	//|"+ ?(не ПроизводителиШин.Пустая(), " И  Номенклатура.Производитель = &Производитель","")+"
	|							И НЕ (Склад.ЗапретитьИспользование 
	|							ИЛИ Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ВПути)
	|							ИЛИ Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.Ошиповка) 
	|			   ) И Склад.Транзитный = &Транзит и Склад.Подразделение = &Подразделение
	|												 ) КАК ТоварыНаСкладахОстатки
	|	
//+++ 14.09.2017  ОБЪЕДИНИТЬ>>ОБЪЕДИНИТЬ ВСЕ
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыНаОтветственномХраненииОстатки.Номенклатура.Родитель
	|	ИЗ
	|		РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(, Номенклатура.ВидТовара = &ВидТовара
	//|"+ ?(не ПроизводителиШин.Пустая(), " И  Номенклатура.Производитель = &Производитель","")+"
	|				  И Склад.ЗапретитьИспользование=ЛОЖЬ 
	|				  И Склад.Транзитный = &Транзит и Склад.Подразделение = &Подразделение
	|												 ) КАК ТоварыНаОтветственномХраненииОстатки
	//+++ 14.09.2017  ОБЪЕДИНИТЬ>>ОБЪЕДИНИТЬ ВСЕ
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыПоставщиковОстатки.Номенклатура.Родитель
	|	ИЗ
    |		РегистрСведений.ОстаткиНоменклатурыКонтрагентов как ТоварыПоставщиковОстатки
	|	ГДЕ
	|		ТоварыПоставщиковОстатки.Номенклатура.ВидТовара = &ВидТовара
	|	  И ТоварыПоставщиковОстатки.Подразделение = &Подразделение 
	|		
	//|"+ ?(не ПроизводителиШин.Пустая(), " И  ТоварыПоставщиковОстатки.Номенклатура.Производитель = &Производитель","")+"
 	|) КАК А
	|
	|УПОРЯДОЧИТЬ ПО
	|	А.Родитель.Наименование";
	Запрос.Параметры.Вставить("Транзит", (Подразделение.Код<>"00005") ); 
	Запрос.Параметры.Вставить("Подразделение", ?(Подразделение.Код="00005",справочники.Подразделения.ПустаяСсылка(),Подразделение) );
	Запрос.Параметры.Вставить("ВидТовара", перечисления.ВидыТоваров.Шины );
	Если не ПроизводителиШин.Пустая() Тогда
		Запрос.Параметры.Вставить("Производитель", ПроизводителиШин);
	КонецЕсли;
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();
		
	элементыФормы.РодительШ.СписокВыбора.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Ссылка") ); 
	
	ДатаПоследнегоЧтенияПараметров = ТекущаяДата(); 
		
	КонецЕсли;	

КонецПроцедуры



Процедура ТабличноеПолеЦеныПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	если ДанныеСтроки.ТипЦен=ТипЦенКлиента тогда
		ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт ,,,Истина);
	КонецЕсли;	
КонецПроцедуры

Процедура КонтрагентПриИзменении1(Элемент)
	
	Если Контрагент.Пустая() тогда
		Предоплата = ЛОЖЬ; 
		КонтрагентРаспродажа=ЛОЖЬ;
		КонтрагентуРазрешенСерыйСписок = ЛОЖЬ;
	//	ЭлементыФормы.Предоплата.Доступность = ЛОЖЬ;
	ЭлементыФормы.Надпись13.Заголовок = " ";
	ЭлементыФормы.Надпись14.Заголовок = " ";
	Иначе	
	//	ЭлементыФормы.Предоплата.Доступность = истина;
	    Предоплата = (Контрагент.ОсновнойДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.НайтиПоКоду("00001") 
		                или Контрагент.ОсновнойДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.ПредоплатаПоСчетам     //14.08.2017
						или Контрагент.ОсновнойДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.ФакторингПредоплата ); //16.05.2017
						
		КонтрагентРаспродажа = УКлиентаСвойствоДа();
		КонтрагентуРазрешенСерыйСписок = (Контрагент.Экспорт или Контрагент.ВыгружатьСерыйСписокВTerminal);    //РазрешитьГрузитьТоварыИзСтопЛиста
		
		ЭлементыФормы.Надпись13.Заголовок =" ";
		ЭлементыФормы.Надпись14.Заголовок ="руб.";
		
		Если Контрагент.Экспорт и Контрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов.Код <> "643" тогда
			ЭлементыФормы.Надпись14.Заголовок = Контрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов.Наименование;
		КонецЕсли;	
		
		
		Если Константы.ИспользоватьДележкуЗаказовВМинус.Получить() тогда	
			
			Если Контрагент.Экспорт 
			И Контрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов.Код = "643"
			И найти(врег(Контрагент.ОсновнойДоговорКонтрагента.Наименование),"ЭКСПОРТ")>0
			и найти(Контрагент.ОсновнойДоговорКонтрагента.Наименование,"*")=0 тогда
				ЭлементыФормы.Надпись14.Заголовок ="Без НДС!";
        	КонецЕсли;	
		
			Если Контрагент.ОсновнойМенеджерКонтрагента.ОсновноеПодразделение.ОбособленноеПодразделение тогда
				филиал = Контрагент.ОсновнойМенеджерКонтрагента.ОсновноеПодразделение.ПрефиксИБ;
				филиал = стрЗаменить(филиал, "Ео", "Ект");
				ЭлементыФормы.Надпись13.Заголовок ="(+тр.наценка "+филиал+")";    //СП, РД, Ео
			КонецЕсли;
		
		КонецЕсли;
	КонецЕсли;	
	
	ТоварыПриАктивизацииСтроки(неопределено); //меняет цену
	
	Если мОформляемыеДокументы.Количество()>0 Тогда
		Заказ = ВыбратьРедактируемыйДокумент().Объект;
		
		Если НЕ Заказ.Контрагент.пустая() тогда
		Предупреждение("Уже создан Заказ на Клиента: "+строка(Заказ.Контрагент)+"!
						|Закончите оформление предыдущего заказа!",30);
		КонецЕсли;
					
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)
КонтрагентРаспродажа = ЛОЖЬ;
КонтрагентуРазрешенСерыйСписок = ЛОЖЬ;
КонецПроцедуры

функция УКлиентаСвойствоДа(свво="90183")
рез = ЛОЖЬ;
Если Контрагент.Пустая() тогда возврат рез; КонецЕсли;

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ЗначенияСвойствОбъектов.Значение
|ИЗ
|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
|ГДЕ
|	ЗначенияСвойствОбъектов.Объект = &Объект
|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
Запрос.УстановитьПараметр("Объект", Контрагент);
Запрос.УстановитьПараметр("Свойство",  ПланыВидовХарактеристик.СвойстваОбъектов.найтиПоКоду("90183")  );
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();

Если Выборка.Следующий() тогда
	рез = Выборка.Значение;
КонецЕсли;

возврат рез;
КонецФункции	

Процедура КодНазваниеПриИзменении(Элемент)
	Если КодНазвание="" тогда
		возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	Номенклатура.ВидТовара КАК ВидТовара,
	                |	Номенклатура.Наименование КАК Товар,
	                |	ВЫБОР
					|		КОГДА Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.ПустаяСсылка)
					|			ТОГДА 999
	                |		КОГДА Номенклатура.ВидТовара = ЗНАЧЕНИЕ(перечисление.ВидыТоваров.Прочее)
	                |			ТОГДА 6
	                |		ИНАЧЕ Номенклатура.ВидТовара.Порядок
	                |	КОНЕЦ КАК ВидТовараПорядок
	                |ИЗ
	                |	Справочник.Номенклатура КАК Номенклатура
	                |ГДЕ
	                |	(Номенклатура.Код = &КодНазвание
	              //  |			ИЛИ Номенклатура.Наименование ПОДОБНО &Наименование
				    |   )
	                |	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	                |	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	                //|	И НЕ Номенклатура.Наименование ПОДОБНО &Искл
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	ВидТовараПорядок
	                |ИТОГИ
	                |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВидТовара),
	                |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товар),
	                |	МИНИМУМ(ВидТовараПорядок)
	                |ПО
	                |	ОБЩИЕ
	                |АВТОУПОРЯДОЧИВАНИЕ";
	 
	 Запрос.УстановитьПараметр("КодНазвание", КодНазвание);
	// Запрос.УстановитьПараметр("Наименование", "%"+КодНазвание+"%");
	// Запрос.УстановитьПараметр("Искл","(Д)%"); // дубли
	 Результат = Запрос.Выполнить();
	 Выборка1 = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	 Если Выборка1.Следующий() тогда
		 
		 Если выборка1.Товар=1 тогда  //один такой!
			 выборкаТов = Выборка1.Выбрать();  
			 выборкаТов.Следующий();
 			 КодНазвание1 = КодНазвание; //21.02.2017 - выборкаТов.Товар; // долго ищет по названию...
		 иначе
		 	 КодНазвание1 = КодНазвание;
	 	 КонецЕсли;
		 
		 выборка = Выборка1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);  
	 	если  выборка.Следующий() тогда
		 если выборка.ВидТовара = перечисления.ВидыТоваров.Шины тогда
			ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница = ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаШины;
			ДопСтрокаПоискаШины = КодНазвание1;
		 Иначеесли выборка.ВидТовара = перечисления.ВидыТоваров.Диски тогда
			ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница = ЭлементыФормы.ПанельВидТоваров.Страницы.Страницадиски;
			ДопСтрокаПоискаДиски = КодНазвание1;
		 Иначеесли выборка.ВидТовара = перечисления.ВидыТоваров.АКБ тогда
			ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница = ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаАКБ;
			ДопСтрокаПоискаАКБ = КодНазвание1;
		 Иначеесли выборка.ВидТовара = перечисления.ВидыТоваров.Аксессуары тогда
			ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница = ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаАксессуары;
			ДопСтрокаПоискаАксессуары = КодНазвание1;
		 Иначеесли выборка.ВидТовара = перечисления.ВидыТоваров.РекламнаяПродукция тогда
			ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница = ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаРеклама;
			ДопСтрокаПоискаРеклама = КодНазвание1;
         Иначе //если выборка.ВидТовара = перечисления.ВидыТоваров.Прочее тогда
			ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница = ЭлементыФормы.ПанельВидТоваров.Страницы.СтраницаПрочее;
			ДопСтрокаПоискаПрочее = КодНазвание1;
		 КонецЕсли;
		 
	     ОбновитьНажатие(Неопределено);
		иначе
		  Предупреждение("Не нейдено ни одного товара с кодом или названием '"+КодНазвание+"'",10);
        КонецЕсли;
	  иначе
		 Предупреждение("Не нейдено ни одного товара с кодом или названием '"+КодНазвание+"'",10);
	  КонецЕсли;
	
КонецПроцедуры

процедура ПолучитьАкциюАКБиРаспродажуДисков()
	
	 //24.03.2017
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	РаспродажаАКБ.Номенклатура
	                |ИЗ
	                |	РегистрСведений.АссортиментРаспродажиДляТерминала КАК РаспродажаАКБ
	                |ГДЕ
	                |	 РаспродажаАКБ.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.АКБ)
					//06.02.2019
					|ИЛИ РаспродажаАКБ.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Аксессуары)
					|";
	 Результат = Запрос.Выполнить();
	 табл = Результат.Выгрузить();

	 СписАкцияАКБ = новый СписокЗначений;
	 СписАкцияАКБ.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Номенклатура") );
	 
	 
	  //04.07.2017 ------------распродажа дисков--------------
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	РаспродажаДиски.Номенклатура
	                |ИЗ
	                |	РегистрСведений.ЦеныДляРаспродажи КАК РаспродажаДиски
	                |ГДЕ
	                |	РаспродажаДиски.Период = &ДатаЦеныРаспродажи";
	 ДатаЦеныРаспродажи = ОбменСУТИнтернетМагазин.ПолучитьДатуЦеныРаспродажи( ЛОЖЬ ); //как ЗаписьАктивна = ЛОЖЬ для рублевых!
     Запрос.УстановитьПараметр("ДатаЦеныРаспродажи", ДатаЦеныРаспродажи);
	 Результат = Запрос.Выполнить();
	 табл = Результат.Выгрузить();

	 СписРаспродажаДиски = новый СписокЗначений;
	 СписРаспродажаДиски.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Номенклатура") );

	 //04.07.2017 ------------серый список--------------
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	НоменклатураИмпорт.Номенклатура
	                |ИЗ
	                |	РегистрСведений.НоменклатураИмпорт КАК НоменклатураИмпорт
	                |ГДЕ
	                |	НоменклатураИмпорт.ЧерныйЛист = ЛОЖЬ";
	 Результат = Запрос.Выполнить();
	 табл = Результат.Выгрузить();
	 СписСтоп = новый СписокЗначений;
	 СписСтоп.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Номенклатура") );
	 
	 //04.07.2017 ------------черный список--------------
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	НоменклатураИмпорт.Номенклатура
	                |ИЗ
	                |	РегистрСведений.НоменклатураИмпорт КАК НоменклатураИмпорт
	                |ГДЕ
	                |	НоменклатураИмпорт.ЧерныйЛист = истина";
	 Результат = Запрос.Выполнить();
	 табл = Результат.Выгрузить();
	 СписСтопЧерный = новый СписокЗначений;
	 СписСтопЧерный.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Номенклатура") );


КонецПроцедуры	

Процедура РодительНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.Родитель.СписокВыбора.Количество()=0 тогда
		запросАкс = новый Запрос;
		запросАкс.Текст = "выбрать Склады.Ссылка 
							|Поместить ВТ_Склады
							|из справочник.Склады как Склады
 	  					  |	ГДЕ Склады.ЭтоГруппа = ЛОЖЬ
						  |	И Склады.ЗапретитьИспользование = ЛОЖЬ
		                  | И Склады.Транзитный = &Транзитный
		                  |//И Склады.Подразделение = &Подразделение
						  |;

						  |	ВЫБРАТЬ РАЗЛИЧНЫЕ
		                  |	ТоварыНаСкладахОстатки.Номенклатура.Родитель как Родитель,
						  |	ТоварыНаСкладахОстатки.Номенклатура.Родитель.Наименование как Назв
		                  |ИЗ
		                  |	РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Аксессуары)
						  |и Склад в (выбрать вт.Ссылка из ВТ_Склады как вт) 
						  |) КАК ТоварыНаСкладахОстатки
						  |Упорядочить по Назв";
		Если Подразделение.ОбособленноеПодразделение Тогда
			запросАкс.Текст = стрЗаменить(запросАкс.Текст,"//И","И");
		    запросАкс.УстановитьПараметр("Подразделение", Подразделение);
			запросАкс.УстановитьПараметр("Транзитный",Истина);
		Иначе
			запросАкс.УстановитьПараметр("Транзитный",ЛОЖЬ);
		КонецЕсли;	
		таб = ЗапросАкс.Выполнить().Выгрузить();
		ЭлементыФормы.Родитель.СписокВыбора.ЗагрузитьЗначения(таб.ВыгрузитьКолонку("Родитель"));
     КонецЕсли;

КонецПроцедуры

Процедура РодительПрочееНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.РодительПрочее.СписокВыбора.Количество()=0 тогда
		запросАкс = новый Запрос;
		запросАкс.Текст = "выбрать Склады.Ссылка 
							|Поместить ВТ_Склады
							|из справочник.Склады как Склады
 	  					  |	ГДЕ Склады.ЭтоГруппа = ЛОЖЬ
						  |	И Склады.ЗапретитьИспользование = ЛОЖЬ
		                  | И Склады.Транзитный = &Транзитный
		                  |//И Склады.Подразделение = &Подразделение
						  |;

						  |	ВЫБРАТЬ РАЗЛИЧНЫЕ
		                  |	ТоварыНаСкладахОстатки.Номенклатура.Родитель как Родитель,
						  |	ТоварыНаСкладахОстатки.Номенклатура.Родитель.Наименование как Назв
		                  |ИЗ
		                  |	РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
						  |и Склад в (выбрать вт.Ссылка из ВТ_Склады как вт) 
						  |) КАК ТоварыНаСкладахОстатки
						  |Упорядочить по Назв";
		Если Подразделение.ОбособленноеПодразделение Тогда
			запросАкс.Текст = стрЗаменить(запросАкс.Текст,"//И","И");
		    запросАкс.УстановитьПараметр("Подразделение", Подразделение);
			запросАкс.УстановитьПараметр("Транзитный",Истина);
		Иначе
			запросАкс.УстановитьПараметр("Транзитный",ЛОЖЬ);
		КонецЕсли;	
		таб = ЗапросАкс.Выполнить().Выгрузить();
		ЭлементыФормы.РодительПрочее.СписокВыбора.ЗагрузитьЗначения(таб.ВыгрузитьКолонку("Родитель"));
     КонецЕсли;

КонецПроцедуры

//+++ 15.09.2017
Процедура Надпись14Нажатие(Элемент) 
	Номер = ЭлементыФормы.Надпись14.Заголовок;
	
	Если Найти(Номер,"№")=0 тогда
		Предупреждение("Цена в валюте "+Номер+?(Предоплата," (с учетом предоплаты)","") , 30);
		возврат;
	КонецЕсли;
	
	попытка
		номерЧ = число( прав(Номер, стрДлина(Номер) - Найти(Номер,"№") - 1) );
	исключение
		Предупреждение("Номер правила не является числом.",30);
		возврат;
	КонецПопытки;	
		
	Если не Контрагент.Пустая() 
			и (Контрагент.Экспорт и Контрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов.Код<>"643") тогда
		ФормаПравила=РегистрыСведений.ПравилаЦенообразованияЭкспорт.ПолучитьФормуСписка();
		ФормаПравила.РегистрСведенийСписок.Отбор.Контрагент.ВидСравнения = ВидСравнения.Равно;
		ФормаПравила.РегистрСведенийСписок.Отбор.Контрагент.Значение = 	Контрагент;
		ФормаПравила.РегистрСведенийСписок.Отбор.Контрагент.Использование = Истина;
		
		Если номерЧ=2000 тогда 
			Предупреждение("Используется заглушка Кр.Опт / Курс USD!", 30);
		ИначеЕсли номерЧ=-5000 тогда 
			Предупреждение("Используется Фикс.цена клиента!", 30);
		ИначеЕсли номерЧ=-7000 тогда 
			Предупреждение("Используется цена для распродажи!", 30);
		КонецЕсли;
	
		ФормаПравила.ОткрытьМодально();
		возврат;
	КонецЕсли;
		
		ИмяФайла = ПолучитьИмяВременногоФайла();
		файл = новый файл(ИмяФайла);
		обр = справочники.ВнешниеОбработки.НайтиПоКоду("500"); 
		ДвоичныеДанные = обр.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);

		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		ФормаПравила = Обработка.ПолучитьФорму("Форма");
		Если Контрагент.Пустая() тогда 
			ФормаПравила.Контрагент = справочники.Контрагенты.НайтиПоКоду("90120"); // (Д) Автодизель без персональных правил...
		Иначе
			ФормаПравила.Контрагент = Контрагент;
   		КонецЕсли;	
		
	//	ФормаПравила.Открыть();  //возможно множественное открытие... 
		ФормаПравила.флТолькоПерсональные = ?(номерЧ>-200 и номерЧ<1000, Истина, ЛОЖЬ);
		ФормаПравила.КоманднаяПанель1Обновить(неопределено);
		
//28.09.2018	
	текСтр = ЭлементыФормы.Товары.ТекущиеДанные;
	если текСтр<>неопределено тогда
		НоменклатураВыб = текСтр.Номенклатура;
	КонецЕсли;

	Если номерЧ=-5000 тогда 
		Предупреждение("Фикс.цена клиента!", 10);
	ИначеЕсли номерЧ=-7000 тогда 
		Предупреждение("Цена Распродажи!", 10);
	КонецЕсли;
	
	Если номерЧ=99999 тогда 
		Предупреждение("Используется мин.цена из константы!", 30);
	ИначеЕсли номерЧ=2000 тогда 
		Предупреждение("Используется заглушка Кр.Опт!", 30);
	Иначе
			
		стрВыбора = неопределено;
		для каждого стр1 из ФормаПравила.ДеревоПравил.Строки цикл
			Если текСтр<>неопределено  //по виду
				и стр1.ВидТовара<>текСтр.Номенклатура.ВидТовара тогда
				продолжить;
			КонецЕсли;	
			
			для каждого стр2 из стр1.строки цикл 
			      Если текСтр<>неопределено  //ном.группа
					 и стр2.НоменклатурнаяГруппа<>справочники.НоменклатурныеГруппы.ПустаяСсылка()
						  и стр2.НоменклатурнаяГруппа<>текСтр.Номенклатура.НоменклатурнаяГруппа тогда
						продолжить;
				  КонецЕсли;	

				для каждого стр3 из стр2.строки цикл //производитель
				    Если текСтр<>неопределено  //ном.группа
					 и стр3.Производитель<>справочники.Производители.ПустаяСсылка()
						  и стр3.Производитель<>текСтр.Номенклатура.Производитель тогда
						продолжить;
					КонецЕсли;		
					
					для каждого стр4 из стр3.строки цикл // правила!!!
						
						Если стр4.Приоритет = НомерЧ тогда
							
							Если НомерЧ=-5000 или НомерЧ=-7000 тогда  //28.09.2018
								Если стр4.Номенклатура = НоменклатураВыб тогда
								стрВыбора = стр4;  			
								прервать;
								КонецЕсли;
							иначе
								стрВыбора = стр4;  			
								прервать;
							КонецЕсли;
							
						КонецЕсли;	
						
					КонецЦикла;	//4
					Если стрВыбора <> неопределено тогда прервать;
					КонецЕсли;	
				КонецЦикла;	//3
				Если стрВыбора <> неопределено тогда прервать;
				КонецЕсли;	
			КонецЦикла;	//2
			Если стрВыбора <> неопределено тогда прервать;
			КонецЕсли;	
		КонецЦикла;	//1
		
		Если стрВыбора <> неопределено тогда
		ФормаПравила.ЭлементыФормы.ДеревоПравил.текущаяСтрока = стрВыбора;
		КонецЕсли;
		
	КонецЕсли;
	
	////+ менять контрагента можно?
	//ФормаПравила.ЭлементыФормы.Контрагент.ТолькоПросмотр=Истина;
	
	////+ копировать правила на своих клиентов можно?
	//ФормаПравила.ЭлементыФормы.КоманднаяПанель1.Кнопки.Скопировать.Доступность = ЛОЖЬ;
	
	////+ Сохранять измененный правила - можно?
	//ФормаПравила.ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Доступность = ЛОЖЬ;
	
	ФормаПравила.ОткрытьМодально();  // только 1 окно
	
КонецПроцедуры

//30.05.2018
Процедура ТабличноеПолеЗаказыПриАктивизацииСтроки(Элемент)
	
	Если ЭлементыФормы.ПанельВидТоваров.ТекущаяСтраница.Имя="СтраницаДиски" и ТабличноеПолеЗаказы.Количество()>0 тогда
		
		 стр1 = ЭлементыФормы.Товары.ТекущиеДанные;
		 Если стр1<> неопределено 
			 тогда товар = стр1.Номенклатура;
		     иначе товар = справочники.Номенклатура.ПустаяСсылка();
		 КонецЕсли;
		 
	     текСтрЗак = Элементыформы.ТабличноеПолеЗаказы.ТекущиеДанные; //30.05.2018 есть разрешение в Заказе !
	 	 Если текСтрЗак<>неопределено  
			  тогда номЗак = текСтрЗак.ЗаказПокупателя.Номер;
		  Контр1 =  ?(не Контрагент.Пустая(), Контрагент, текСтрЗак.Контрагент);
		  флРазрешенЧерный = (Контр1.Экспорт или текСтрЗак.ЗаказПокупателя.РазрешитьГрузитьТоварыИзСтопЛиста); //31.05.2018 экспортным - всё можно! 
		  иначе 
			  флРазрешенЧерный = ЛОЖЬ; номЗак = "";
		  КонецЕсли; 
				
	     Если СписСтопЧерный.НайтиПоЗначению(товар) <> Неопределено тогда
			 ЭлементыФормы.Надпись10.Заголовок = "Товар в ЧЁРНОМ списке! "+?(флРазрешенЧерный,"Разрешена","ЗАПРЕЩЕНА!")+" Отгрузка по Заказу "+номЗак; 
			  ЭлементыФормы.Надпись10.ЦветТекста = webЦвета.Красный;
	  	 ИначеЕсли СписСтоп.НайтиПоЗначению(товар) <> Неопределено тогда
			//КонтрагентуРазрешенСерыйСписок = (Контр1.Экспорт или Контр1.ВыгружатьСерыйСписокВTerminal); //РазрешитьГрузитьТоварыИзСтопЛиста
  		 	ЭлементыФормы.Надпись10.Заголовок = "Товар в СЕРОМ списке! "+?(флРазрешенЧерный,"Разрешена","ЗАПРЕЩЕНА!")+" Отгрузка по Заказу "+номЗак;
			  ЭлементыФормы.Надпись10.ЦветТекста = webЦвета.Красный;
			//КонтрагентуРазрешенСерыйСписок = ЛОЖЬ;
	 	 КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодразделениеОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;  
	//сброс на Головное!
	Подразделение = ГоловноеПодразделение;
	ПодразделениеПриИзменении(неопределено);
КонецПроцедуры

ГоловноеПодразделение = Справочники.Подразделения.НайтиПоКоду("00005"); // Ярославль

ВидТовара = "Шины";

мОформляемыеДокументы = Новый ТаблицаЗначений;
мОформляемыеДокументы.Колонки.Добавить("Объект");
мОформляемыеДокументы.Колонки.Добавить("Форма");

СписАкцияАКБ = новый СписокЗначений;
СписРаспродажаДиски = новый СписокЗначений;
КонтрагентРаспродажа = ЛОЖЬ;
КонтрагентуРазрешенСерыйСписок = ЛОЖЬ;
СписСтоп = новый СписокЗначений;
СписСтопЧерный = новый СписокЗначений;