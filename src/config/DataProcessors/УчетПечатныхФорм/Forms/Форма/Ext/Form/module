 перем ПервичныйСтатус;

Процедура ШтрихКодОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	Если не ЗначениеЗаполнено(Должность) Тогда
		Предупреждение("Укажите свою должность!");
		возврат;
	конецЕсли;	
	
	Если ЭлементыФормы.Панель.ТекущаяСтраница.Имя = "ВходящиеДокументы" Тогда
		Организация = Лев(Текст,2);
		ВидПФ= Сред(Текст,3,1);
		номерДок = глТранслитОбратно(Сред(Текст,4,8));
		дата =  Число(Сред(Текст,12,6));
		ДатаДок = Дата(Формат(Дата, "ЧЦ=6; ЧРГ=.; ЧВН=; ЧГ=2,2,0")+" 00:00:00");
		ДатаДок = ДобавитьМесяц(ДатаДок,12*2000);
		кодКонтрагента = глТранслитОбратно(Сред(Текст,18,7));
		Суммастр = Сред(Текст,25);
		НайденныйДокумент = Неопределено;
		Если  ВидПФ ="7" или ВидПФ ="9" тогда
			НайденныйДокумент = Документы.ЗаданиеНаОтгрузку.НайтиПоНомеру(номердок,ДатаДок );
		конецЕсли;	
		Если НайденныйДокумент <> Неопределено Тогда
			наборЗаписей = регистрыСведений.УчетВходящихДокументов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.МаршрутныйЛист.Установить(НайденныйДокумент);    
				НаборЗаписей.Прочитать();
				Элементыформы.ВходящиеДокументы.Значение = НаборЗаписей.Выгрузить();
				Для каждого стр из НайденныйДокумент.обратки Цикл
					Если ТипЗнч(Стр.ДокументОснование)= Тип("ДокументСсылка.ЗаявкаНаВозвратТоваров") Тогда
						НовСтр = Элементыформы.СписокЗаявок.Значение.Добавить();
						НовСтр.Заявка = Стр.ДокументОснование;
						НовСтр.Контрагент = Стр.ДокументОснование.Контрагент;
						НовСтр.ЗаданиеНаОтгрузку = НайденныйДокумент;
					конецЕсли;	
				конецЦикла;
				
		конецЕсли;
	иначе
		Если СтрДлина(Текст)= 13 тогда
			текСтрока = Элементыформы.СписокПечатныхДокументов.ТекущиеДанные;	
			Если Лев(текст,4) = "9801" тогда
				ТекСтрока.статус  = Справочники.СостояниеДокументов.Оформлен;
				ТекСтрока.должность  = Должность;
				ТекСтрока.ФИООтветственного = Неопределено;
				ТекСтрока.Комментарий = "";
			ИначеЕсли Лев(текст,4) = "9802" тогда
				ТекСтрока.статус  = Справочники.СостояниеДокументов.НедоОформлен;
			ИначеЕсли Лев(текст,4) = "9901" тогда
				ТекСтрока.должность  = Справочники.ДолжностиОрганизаций.Оператор;
				ТекСтрока.ФИООтветственного = ТекСтрока.ССылкаДок.Ответственный;
				ТекСтрока.статус  = Справочники.СостояниеДокументов.НедоОформлен;
			ИначеЕсли Лев(текст,4) = "9902" тогда
				ТекСтрока.должность  = Справочники.ДолжностиОрганизаций.Водитель;
				ТекСтрока.ФИООтветственного = ТекСтрока.ССылкаДок.Водитель;
				ТекСтрока.статус  = Справочники.СостояниеДокументов.НедоОформлен;
			ИначеЕсли Лев(текст,4) = "9903" тогда
				ТекСтрока.должность  = Справочники.ДолжностиОрганизаций.Перевозчик;
				ТекСтрока.ФИООтветственного = ТекСтрока.ССылкаДок.Перевозчик;
				ТекСтрока.статус  = Справочники.СостояниеДокументов.НедоОформлен;
			ИначеЕсли Лев(текст,4) = "9904" тогда
				ТекСтрока.должность  = Справочники.ДолжностиОрганизаций.Менеджер;
				ТекСтрока.ФИООтветственного = ТекСтрока.ССылкаДок.Сделка.Ответственный;
				ТекСтрока.статус  = Справочники.СостояниеДокументов.НедоОформлен;
			ИначеЕсли Лев(текст,4) = "9905" тогда
				ТекСтрока.должность  = Справочники.ДолжностиОрганизаций.клиент;
				ТекСтрока.ФИООтветственного = ТекСтрока.ССылкаДок.Контрагент;
				ТекСтрока.статус  = Справочники.СостояниеДокументов.НедоОформлен;
			ИначеЕсли Лев(текст,4) = "9906" тогда
				ТекСтрока.должность  = Справочники.ДолжностиОрганизаций.БухгалтерФилиала;
				ТекСтрока.ФИООтветственного = ТекСтрока.ССылкаДок.Подразделение;
				ТекСтрока.статус  = Справочники.СостояниеДокументов.НедоОформлен;
			конецЕсли;	
			Если не НеЗаписыватьИзменения Тогда
				// в печатные формы запишем	
				НаборЗаписей = РегистрыСведений.ПечатныеФормыВНаличии.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Документ.Установить(ТекСтрока.СсылкаДок);
				НаборЗаписей.отбор.видПечатнойФормы.Установить(текСтрока.ВидПечатнойформы);
				НаборЗаписей.Прочитать(); 
				//Если НаборЗаписей[0].должность <> Справочники.ДолжностиОрганизаций.Бухгалтер Тогда  //Если был отсканирован бухгалтером,  ничего не делаем
				Если НаборЗаписей[0].Статус = Справочники.СостояниеДокументов.Оформлен Тогда
					//Предупреждение("Уже есть этот документ со статусом Оформлен", 20);
					ТекСтрока.Статус = Справочники.СостояниеДокументов.Дубль;
				Иначе
					Если  НаборЗаписей[0].Статус <> текСтрока.Статус Тогда
						НаборЗаписей[0].Статус = текСтрока.Статус;	
						НаборЗаписей[0].ДатаСтатуса = НачалоДня(текущаяДата());
					КонецЕсли;
					НаборЗаписей[0].Комментарий = текСтрока.Комментарий;
					НаборЗаписей.Записать();
					//конецЕсли;
					// в ответственные запишем	
					
					НаборЗаписей = РегистрыСведений.ОтветственныеЗаОшибкиПФ.СоздатьНаборЗаписей();
					НаборЗаписей.отбор.Период.Установить(НачалоДня(ТекущаяДата()));
					НаборЗаписей.Отбор.Документ.Установить(ТекСтрока.СсылкаДок);
					НаборЗаписей.отбор.видПечатнойФормы.Установить(текСтрока.ВидПечатнойформы);
					НаборЗаписей.отбор.ДатаОшибки.Установить(НачалоДня(ТекущаяДата()));
					
					НаборЗаписей.Прочитать(); 
					Если  НаборЗаписей.Количество()=0 Тогда
						Запись = НаборЗаписей.Добавить();
						Запись.Период = НачалоДня(ТекущаяДата());
						Запись.Документ = ТекСтрока.СсылкаДок;
						Запись.ВидПечатнойФормы = текСтрока.ВидПечатнойФормы;
						Запись.ДатаОшибки = НачалоДня(ТекущаяДата());
						Запись.Должность = текСтрока.Должность;
						Запись.ФИО =  текСтрока.ФИООтветственного;
						Запись.Комментарий = текСтрока.Комментарий;
					иначе
						Если ЗначениеЗаполнено(текСтрока.Должность) и ЗначениеЗаполнено(текСтрока.ФИООтветственного) Тогда
							Запись = НаборЗаписей[0];
							Запись.Документ = ТекСтрока.СсылкаДок;
							Запись.ВидПечатнойФормы = текСтрока.ВидПечатнойФормы;
							Запись.ДатаОшибки = НачалоДня(ТекущаяДата());
							Запись.Должность = текСтрока.Должность;
							Запись.ФИО =  текСтрока.ФИООтветственного;
							Запись.Комментарий = текСтрока.Комментарий;
						конецЕсли;
					КонецЕсли;
					НаборЗаписей.Записать();	
					
				КонецЕсли;
			конецесли;
		иначе	
			//ШтрихКод=КодОрг+ВидПФ+НомерДокумента+Дата+Кодконтрагент+СуммаСтр;
			
			Если  ЗначениеЗаполнено(Местонахождение) и не НеЗаписыватьИзменения Тогда
				Записывать = Истина;
			иначеЕсли  НеЗаписыватьИзменения Тогда
				Записывать = Ложь;
			Иначе
				Предупреждение("Должны быть заполнено Местонахождение или отключена запись изменений!");
				ШтрихКод="";
				Этаформа.ТекущийЭлемент = Элементыформы.ШтрихКод;
				Возврат;
			конецЕсли;
			
			Организация = Лев(Текст,2);
			ВидПФ= Сред(Текст,3,1);
			
			номерДок = глТранслитОбратно(Сред(Текст,4,8));
			дата =  Число(Сред(Текст,12,6));
			ДатаДок = Дата(Формат(Дата, "ЧЦ=6; ЧРГ=.; ЧВН=; ЧГ=2,2,0")+" 00:00:00");
			ДатаДок = ДобавитьМесяц(ДатаДок,12*2000);
			кодКонтрагента = глТранслитОбратно(Сред(Текст,18,7));
			Суммастр = Сред(Текст,25);
			попытка
				Рубли =   Число (Лев(Суммастр,СтрДлина(суммастр)-2)) ;
				копейки = Число (Прав(Суммастр,2));
				Сумма= Рубли+копейки/100;
			исключение
			конецпопытки;
			
			НайденныйДокумент = Неопределено;
			Если Организация <> "10" И Организация <> "30" И Организация <> "40" Тогда
				Предупреждение("Документ не Яршинторга!");
				ШтрихКод="";
				Этаформа.ТекущийЭлемент = Элементыформы.ШтрихКод;
				возврат;
			конецЕсли;
			если ВидПФ <>"6" и ВидПФ <>"7" и ВидПФ <>"9" и ВидПФ <>"R" и ВидПФ <>"U" тогда
				Если ВидПФ = "B" ИЛИ ВидПФ = "T" Тогда // Перемещение товаров: "B" (англ) = ТОРГ13; "T" (англ) = ТТН 
					Док = Документы.ПеремещениеТоваров.НайтиПоНомеру(НомерДок, ДатаДок);
					Если НЕ ЗначениеЗаполнено(Док) Тогда 
						Предупреждение("Документа с номером "+НомерДок+ " не нашли!");
					иначе
						НайденныйДокумент = СписокДокументов.Найти(Док,"ссылкаДок");
					конецЕсли;
				Иначе
					Если Организация = "30" ИЛИ Организация = "40" Тогда
						Док = НайтиРеализациюПоНомеруФормулаАвто(Организация, номердок, ДатаДок);
					Иначе
						Док = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(номердок,ДатаДок );
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(Док) Тогда 
						Предупреждение("Документа с номером "+НомерДок+ " не нашли!");
					ИначеЕсли Справочники.Контрагенты.НайтиПоКоду(кодКонтрагента) <> Док.Контрагент Тогда
						Предупреждение("В документе "+Док+ " не совпадает Контрагент!");
					ИначеЕсли Сумма <> Док.СуммаДокумента Тогда
						Предупреждение("В документе "+Док+ " не совпадает сумма!");
					иначе
						НайденныйДокумент = СписокДокументов.Найти(Док,"ссылкаДок");
					конецЕсли;
				КонецЕсли;
			иначеЕсли  ВидПФ ="6"  тогда
				Док = Документы.ЗаявкаНаВозвратТоваров.НайтиПоНомеру("0"+номердок,ДатаДок );
				Если ЗначениеЗаполнено(Док) Тогда
					НайденныйДокумент = СписокДокументов.Найти(Док,"ссылкаДок");
				конецЕсли;	
			иначеЕсли  ВидПФ ="7" или ВидПФ ="9" или ВидПФ ="R" или ВидПФ ="U" тогда
				Док = Документы.ЗаданиеНаОтгрузку.НайтиПоНомеру(номердок,ДатаДок );
				Если ЗначениеЗаполнено(Док) Тогда
					НайденныйДокумент = СписокДокументов.Найти(Док,"ссылкаДок");
				конецЕсли;	
			конецЕсли;	
			
			Если НайденныйДокумент = Неопределено Тогда
				Строка = СписокДокументов.Добавить();
				Строка.СсылкаДок = Док;
				попытка
					ПеремещениеКонтрагент = Неопределено;
					ЗаполнитьРеквизитыСтроки(Строка, Док, ВидПФ, ПеремещениеКонтрагент);
				исключение
				конецПопытки;
				новаяСтр = СписокДокументов.Добавить();
				ЗаполнитьЗначенияСвойств(новаяСтр,СписокДокументов[0]);
				ЗаполнитьЗначенияСвойств(СписокДокументов[0],Строка);
				СписокДокументов.Удалить(Строка);
			иначе
				Если  СписокДокументов[0].СсылкаДок<> НайденныйДокумент.СсылкаДок Тогда
				новаяСтр = СписокДокументов.Добавить();
				ЗаполнитьЗначенияСвойств(новаяСтр,СписокДокументов[0]);
				ЗаполнитьЗначенияСвойств(СписокДокументов[0],НайденныйДокумент);
				СписокДокументов.Удалить(НайденныйДокумент);
				конецЕсли;
			конецЕсли;
			
			ЭлементыФормы.СписокПечатныхДокументов.ОтборСтрок.СсылкаДок.Использование = Истина; 
			ЭлементыФормы.СписокПечатныхДокументов.ОтборСтрок.СсылкаДок.ВидСравнения = ВидСравнения.Равно; 
			ЭлементыФормы.СписокПечатныхДокументов.ОтборСтрок.СсылкаДок.Значение = Док; 
			
			ВидПечатнойФормы =  ПолучитьВидПечатнойФормы( ВидПФ ); //+++ 21.07.2017 - вынесена в общ.модуль яштПрочее
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("СсылкаДок", Док);
			ПараметрыОтбора.Вставить("ВидпечатнойФормы", ВидПечатнойФормы);
			НайденныеСтроки = СписокПечатныхДокументов.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество()=0 Тогда
				НоваястрокаПФ = СписокпечатныхДокументов.Добавить();
				НоваястрокаПФ.Переносить = истина;
				
				НаборЗаписей = РегистрыСведений.ПечатныеФормыВНаличии.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Документ.Установить(Док);
				НаборЗаписей.отбор.видПечатнойФормы.Установить(ВидПечатнойформы);
				НаборЗаписей.Прочитать(); 
				
				Если Наборзаписей.Количество() = 0  Тогда //не было зарегистрированно такого документа
					Если записывать Тогда	
						Запись = НаборЗаписей.Добавить();
						Запись.Документ = Док;
						Запись.ВидПечатнойФормы = ВидПечатнойформы;
						Запись.Местонахождение = Местонахождение;
						Запись.Статус =Первичныйстатус;
						Запись.ДатаПеремещения =  ТекущаяДата();
						Запись.ДатаСтатуса = НачалоДня(текущаяДата());
						Запись.Контрагент = НайтиКонтрагентаДляЗаписиВРегистр(ВидПФ, кодКонтрагента, ПеремещениеКонтрагент);
						Запись.Сумма = Сумма;
						Запись.Должность = Должность; 
						НаборЗаписей.Записать();		
						ЗаполнитьЗначенияСвойств(НоваяСтрокаПФ,Запись);
						НоваяСтрокаПФ.СсылкаДок = Док;
					иначе
						предупреждение ("Такой печатной формы не зарегистрированно!");
					КонецЕсли;
				иначе
					//Если НаборЗаписей[0].Статус = Справочники.СостояниеДокументов.Оформлен Тогда
					//	Предупреждение("Уже есть этот документ со статусом Оформлен", 20);
					//Иначе
						Если записывать и НаборЗаписей[0].Должность <> Справочники.ДолжностиОрганизаций.Бухгалтер Тогда
							Если НаборЗаписей[0].Местонахождение <> Местонахождение Тогда
								НаборЗаписей[0].Местонахождение = Местонахождение;
								НаборЗаписей[0].ДатаПеремещения =  ТекущаяДата();
							конецЕсли;
							Если  НаборЗаписей[0].Статус <> Справочники.СостояниеДокументов.оформлен Тогда
								НаборЗаписей[0].Статус = Первичныйстатус;	
								НаборЗаписей[0].ДатаСтатуса = НачалоДня(текущаяДата());
								НаборЗаписей[0].Комментарий  = "";
							КонецЕсли;
							НаборЗаписей[0].Должность  = Должность;
							НаборЗаписей.Записать();	
							ЗаполнитьЗначенияСвойств(НоваяСтрокаПФ, НаборЗаписей[0]);
							НоваяСтрокаПФ.СсылкаДок = Док;
						иначе
							//просто читаем
							ЗаполнитьЗначенияСвойств(НоваяСтрокаПФ, НаборЗаписей[0]);
							НоваяСтрокаПФ.СсылкаДок = Док;
							//добавим ответственных  если не дооформлен
							Если НоваяСтрокаПФ.Статус <> Справочники.СостояниеДокументов.оформлен Тогда
								НаборЗаписей = РегистрыСведений.ОтветственныеЗаОшибкиПФ.СоздатьНаборЗаписей();
								НаборЗаписей.Отбор.Документ.Установить(Док);
								НаборЗаписей.отбор.видПечатнойФормы.Установить(ВидПечатнойформы);
								//НаборЗаписей.отбор.ДатаОшибки.Установить(НачалоДня(ТекущаяДата()));
								НаборЗаписей.Прочитать(); 
								Если   НаборЗаписей.Количество()>0 Тогда
									ЗаполнитьЗначенияСвойств(НоваяСтрокаПФ, НаборЗаписей[НаборЗаписей.Количество()-1]);
									НоваяСтрокаПФ.ФИООтветственного = НаборЗаписей[НаборЗаписей.Количество()-1].ФИО;
								конецесли;
							Иначе
								НоваяСтрокаПФ.Статус = Справочники.СостояниеДокументов.Дубль;
							КонецЕсли;
						конецЕсли;
					//КонецЕсли;
				конецЕсли;
				ЭлементыФормы.СписокПечатныхДокументов.ТекущаяСтрока = НоваяСтрокаПФ; 
			КонецЕсли;
		КонецЕсли;	
	конецЕсли;
	ШтрихКод = ""; 
	Этаформа.ТекущийЭлемент = Элементыформы.ШтрихКод;
КонецПроцедуры

Процедура СписокПечатныхДокументовСтатусПриИзменении(Элемент)
	Строка = ЭлементыФормы.СписокПечатныхДокументов.ТекущиеДанные;
	НаборЗаписей = РегистрыСведений.ПечатныеФормыВНаличии.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Строка.ссылкаДок);
	НаборЗаписей.отбор.видПечатнойФормы.Установить(Строка.ВидПечатнойформы);
	НаборЗаписей.Прочитать(); 
	НаборЗаписей[0].Статус = Строка.статус;
	Если 	НаборЗаписей[0].Статус <> Строка.статус Тогда
	НаборЗаписей[0].ДатаСтатуса = НачалоДня(текущаяДата());
	конецесли;
	НаборЗаписей.Записать();		
	Этаформа.ТекущийЭлемент = Элементыформы.ШтрихКод;
КонецПроцедуры


Процедура СписокПечатныхДокументовкомментарийПриИзменении(Элемент)
	Строка = ЭлементыФормы.СписокПечатныхДокументов.ТекущиеДанные;
	НаборЗаписей = РегистрыСведений.ПечатныеФормыВНаличии.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Строка.ссылкаДок);
	НаборЗаписей.отбор.видПечатнойФормы.Установить(Строка.ВидПечатнойформы);
	НаборЗаписей.Прочитать(); 
	НаборЗаписей[0].Комментарий = Строка.Комментарий;
	НаборЗаписей.Записать();	
	Если Строка.Статус <> Справочники.СостояниеДокументов.оформлен Тогда
	НаборЗаписей = РегистрыСведений.ОтветственныеЗаОшибкиПФ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Строка.СсылкаДок);
	НаборЗаписей.отбор.видПечатнойФормы.Установить(Строка.ВидПечатнойформы);
	НаборЗаписей.отбор.ДатаОшибки.Установить(НачалоДня(ТекущаяДата()));
	НаборЗаписей.Прочитать(); 
	Если  НаборЗаписей.Количество()<> 0 Тогда
		НаборЗаписей[НаборЗаписей.Количество()-1].Комментарий = Строка.Комментарий;
		НаборЗаписей.Записать();	
	Конецесли;
	конецЕсли;
	Этаформа.ТекущийЭлемент = Элементыформы.ШтрихКод;	
	ПереключитьРаскладкуDW("EN");
КонецПроцедуры

Процедура СписокДокументовПриАктивизацииСтроки(Элемент)
	ТекСтрока = ЭлементыФормы.СписокДокументов.ТекущиеДанные;
	Если Текстрока<>Неопределено Тогда
		ЭлементыФормы.СписокПечатныхДокументов.ОтборСтрок.СсылкаДок.Использование = Истина; 
		ЭлементыФормы.СписокПечатныхДокументов.ОтборСтрок.СсылкаДок.ВидСравнения = ВидСравнения.Равно; 
		ЭлементыФормы.СписокПечатныхДокументов.ОтборСтрок.СсылкаДок.Значение = ТекСтрока.СсылкаДок; 
	конецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыНовыйРеестр(Кнопка)
	Ответ = Вопрос("Разбить реестры по статусам документов?", РежимДиалогаВопрос.ДаНет, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		ДокРеестр= Документы.РеестрПечатныхФормДляПередачиВОфис.СоздатьДокумент();
		ДокРеестр.Дата = ТекущаяДата();
		ДокРеестр.Подразделение = Местонахождение;
		ДокРеестр.Реестр.Загрузить(СписокПечатныхДокументов.Выгрузить());
		ДокРеестр.Записать();
		Форма = ДокРеестр.ПолучитьФорму();
		Форма.Открыть();
		
	Иначе
		ТабСт = СписокПечатныхДокументов.Выгрузить();
		ТабСт.Свернуть("Статус");
		Таб = СписокПечатныхДокументов.Выгрузить();
		Для каждого стр из ТабСт Цикл	
			ДокРеестр= Документы.РеестрПечатныхФормДляПередачиВОфис.СоздатьДокумент();
			ДокРеестр.Дата = ТекущаяДата();
			ДокРеестр.Подразделение = Местонахождение;
			СписокНужных = СписокПечатныхДокументов.Найтистроки(Новый структура("Статус",стр.статус));
			Для каждого ст из СписокНужных  Цикл
				новСтр= ДокРеестр.Реестр.Добавить();
				ЗаполнитьЗначенияСвойств(новСтр,ст);
			конецЦикла; 

			ДокРеестр.Записать();
			Форма = ДокРеестр.ПолучитьФорму();
			Форма.Открыть();
		конецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыДобавитьВСуществующий(Кнопка)
	Форма=Документы.РеестрПечатныхФормДляПередачиВОфис.ПолучитьФормуВыбора();
    Форма.Заголовок="Выбор реестра для пополнения";
    Форма.Отбор.Передан.Использование=Истина;
    Форма.Отбор.Передан.ВидСравнения=ВидСравнения.Равно;
    Форма.Отбор.Передан.Значение= Ложь;
    Форма.Отбор.Подразделение.Использование=Истина;
    Форма.Отбор.Подразделение.ВидСравнения=ВидСравнения.Равно;
    Форма.Отбор.Подразделение.Значение= Местонахождение;
	Форма.ЭлементыФормы.ДокументСписок.НастройкаОтбора.Передан.Доступность = Ложь;
	Форма.ЭлементыФормы.ДокументСписок.НастройкаОтбора.Подразделение.Доступность = Ложь;
	
    ВыбранноеЗначение=Форма.ОткрытьМодально();
	Если ВыбранноеЗначение <> Неопределено Тогда
	ДокРеестр = ВыбранноеЗначение.получитьОбъект();
	Для каждого стр из СписокПечатныхДокументов Цикл
		Если стр.Переносить Тогда
		строка = ДОкРеестр.реестр.Добавить();
		ЗаполнитьЗначенияСвойств(Строка,стр);
		конецЕсли;
	КонецЦикла;
	ДокРеестр.Реестр.Свернуть("СсылкаДок,ВидПечатнойФормы,Статус,Местонахождение,Комментарий");
    ДокРеестр.записать();	
	ДокРеестр.получитьформу().Открыть();
	конецЕсли;
КонецПроцедуры


Процедура ПриОткрытии()
//	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя")Тогда
		Местонахождение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
		ЭлементыФормы.Местонахождение.Доступность = Ложь;
		ПереключитьРаскладкуDW("EN");
		Первичныйстатус= Справочники.СостояниеДокументов.Оформлен;
		Если ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Невежина И.Н.") или ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Князева") или ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Карасева Т.") Тогда
		Первичныйстатус= Справочники.СостояниеДокументов.ВНаличии;
		конецЕсли;
//	конецЕсли;	
		ЭлементыФормы.СнятьВсе.Видимость = ложь;
		ЭлементыФормы.ОтметитьВсе.Видимость = ложь;
		ЭлементыФормы.Инвертировать.Видимость = ложь;
		ЭлементыФормы.СписокПечатныхДокументов.Колонки.Переносить.Доступность = ложь;
		ЭлементыФормы.СписокПечатныхДокументов.Колонки.Переносить.Видимость = ложь;

        ЭлементыФормы.Панель.Страницы.ВходящиеДокументы.Видимость = Ложь;
КонецПроцедуры


Процедура Кнопка1Нажатие(Элемент)
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("СлужебныеШК");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	
	ОбШтрихКод=ОбластьМакетаШапка.Рисунки.ШКОформлен.Объект;
	ОбШтрихКод.ТипКода = 1; 
	ОбШтрихКод.Сообщение = "980100000000"+КонтрольныйСимволEAN("980100000000", 13);
	ОбШтрихКод.ОтображатьТекст = Истина;

	ОбШтрихКод1=ОбластьМакетаШапка.Рисунки.ШКНедооформлен.Объект;
	ОбШтрихКод1.ТипКода = 1; 
	ОбШтрихКод1.Сообщение = "980200000000"+КонтрольныйСимволEAN("980200000000", 13);
	ОбШтрихКод1.ОтображатьТекст = Истина;

	ОбШтрихКод2=ОбластьМакетаШапка.Рисунки.ШКОператор.Объект;
	ОбШтрихКод2.ТипКода = 1; 
	ОбШтрихКод2.Сообщение = "990100000000"+КонтрольныйСимволEAN("990100000000", 13);
	ОбШтрихКод2.ОтображатьТекст = Истина;
	
	
	ОбШтрихКод3=ОбластьМакетаШапка.Рисунки.ШКВодитель.Объект;
	ОбШтрихКод3.ТипКода = 1; 
	ОбШтрихКод3.Сообщение = "990200000000"+КонтрольныйСимволEAN("990200000000", 13);
	ОбШтрихКод3.ОтображатьТекст = Истина;
	
	ОбШтрихКод4=ОбластьМакетаШапка.Рисунки.ШКПеревозчик.Объект;
	ОбШтрихКод4.ТипКода = 1; 
	ОбШтрихКод4.Сообщение = "990300000000"+КонтрольныйСимволEAN("990300000000", 13);
	ОбШтрихКод4.ОтображатьТекст = Истина;
	
	ОбШтрихКод5=ОбластьМакетаШапка.Рисунки.ШКМенеджер.Объект;
	ОбШтрихКод5.ТипКода = 1; 
	ОбШтрихКод5.Сообщение = "990400000000"+КонтрольныйСимволEAN("990400000000", 13);
	ОбШтрихКод5.ОтображатьТекст = Истина;
	
	ОбШтрихКод6=ОбластьМакетаШапка.Рисунки.ШККлиент.Объект;
	ОбШтрихКод6.ТипКода = 1; 
	ОбШтрихКод6.Сообщение = "990500000000"+КонтрольныйСимволEAN("990500000000", 13);
	ОбШтрихКод6.ОтображатьТекст = Истина;
	
	ОбШтрихКод7=ОбластьМакетаШапка.Рисунки.ШКБух.Объект;
	ОбШтрихКод7.ТипКода = 1; 
	ОбШтрихКод7.Сообщение = "990600000000"+КонтрольныйСимволEAN("990600000000", 13);
	ОбШтрихКод7.ОтображатьТекст = Истина;
	
	
	
	
	Табдок.Вывести(ОбластьМакетаШапка);
	Табдок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();

КонецПроцедуры


Функция  ПереключитьРаскладкуDW(Имя) Экспорт
	Попытка    
	    Wrapper = new COMobject("DynamicWrapper"); 
	    Wrapper.Register("USER32.DLL", "ActivateKeyboardLayout", "i=ll", "f=s", "r=l");
	    Wrapper.Register("USER32.DLL", "LoadKeyboardLayout", "i=sl", "f=s", "r=t");
	    
	Исключение
	    Возврат Истина; 
	КонецПопытки;
	
	SRus = "00000419"; 
	SEng = "00000409";
	
	NRus = 1049; 
	NEng = 1033; 
	
	Попытка
	    Если Нрег(Имя) = Нрег("Rus") тогда
	        Wrapper.LoadKeyboardLayout(SRus, 1);
	        Wrapper.ActivateKeyboardLayout(NRus, 0);    
	    Иначе    
	        Wrapper.LoadKeyboardLayout(SEng, 1);
	        Wrapper.ActivateKeyboardLayout(NEng, 0);    
	    КонецЕсли; 
	    возврат Ложь;
	Исключение
	    Возврат Истина;
	КонецПопытки;
КонецФункции


Процедура ПриЗакрытии()
	ПереключитьРаскладкуDW("Rus");

КонецПроцедуры

Процедура СписокПечатныхДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка.ТекстШапки = "Комментарий" Тогда
	ПереключитьРаскладкуDW("Rus");
    конецЕсли;
КонецПроцедуры

Процедура СписокПечатныхДокументовкомментарийОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ПереключитьРаскладкуDW("EN");
КонецПроцедуры

Процедура СписокПечатныхДокументовПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ПереключитьРаскладкуDW("EN");
КонецПроцедуры

Процедура ЗанестиНажатие(Элемент)
	Если Документ = Документы.РеализацияТоваровУслуг.ПустаяСсылка() или ВидПечатнойФормы = Перечисления.ВидыПечатныхФорм.ПустаяСсылка() Тогда
		Сообщить("Не выбран документ или вид печатной формы!");
		возврат;
	конецесли;
	Если ВидПечатнойФормы = Перечисления.ВидыПечатныхФорм.Торг12 Тогда
		ВидПФ = 1;
	ИначеЕсли ВидПечатнойФормы = Перечисления.ВидыПечатныхФорм.ТТН Тогда
		ВидПФ = 2;
	ИначеЕсли ВидПечатнойФормы = Перечисления.ВидыПечатныхФорм.Спецификация Тогда
		ВидПФ = 3;
	ИначеЕсли ВидПечатнойФормы = Перечисления.ВидыПечатныхФорм.Акт Тогда
		ВидПФ = 4;
	ИначеЕсли ВидПечатнойФормы = Перечисления.ВидыПечатныхФорм.Цены Тогда
		ВидПФ = 5;
	ИначеЕсли ВидПечатнойФормы = Перечисления.ВидыПечатныхФорм.ЗаявкаНаВозврат Тогда
		ВидПФ = 6;
	ИначеЕсли ВидПечатнойФормы = Перечисления.ВидыПечатныхФорм.МаршрутныйЛист Тогда
		ВидПФ = 7;
	ИначеЕсли ВидПечатнойФормы = Перечисления.ВидыПечатныхФорм.УПД Тогда
		ВидПФ = 8;
	конецЕсли;	
ШКТекст=СформироватьШКРеализации(Документ,ВидПФ); 	
ШтрихКодОкончаниеВводаТекста(Элемент,ШКТекст, ШКТекст, Истина);
	
КонецПроцедуры

Процедура Очистить(Кнопка)
Ответ = Вопрос("Очистить табличные части обработки?", РежимДиалогаВопрос.ДаНет, 0);
Если Ответ = КодВозвратаДиалога.Да Тогда
   СписокПечатныхДокументов.Очистить(); 
   СписокДокументов.Очистить();
КонецЕсли;
КонецПроцедуры

Процедура ОтметитьВсеНажатие(Элемент)
	Для каждого стр из списокПечатныхДокументов Цикл
	стр.Переносить = истина;	
	конецЦикла;	
КонецПроцедуры

Процедура СнятьВсеНажатие(Элемент)
	Для каждого стр из списокПечатныхДокументов Цикл
	стр.Переносить = ложь;	
	конецЦикла;	
КонецПроцедуры

Процедура ИнвертироватьНажатие(Элемент)
	Для каждого стр из списокПечатныхДокументов Цикл
	стр.Переносить = не стр.Переносить;	
	конецЦикла;	
КонецПроцедуры

Процедура ДолжностьПриИзменении(Элемент)
		ЭлементыФормы.СнятьВсе.Видимость = (Должность = Справочники.ДолжностиОрганизаций.Оператор);
		ЭлементыФормы.ОтметитьВсе.Видимость = (Должность = Справочники.ДолжностиОрганизаций.Оператор);
		ЭлементыФормы.Инвертировать.Видимость = (Должность = Справочники.ДолжностиОрганизаций.Оператор);
		ЭлементыФормы.СписокПечатныхДокументов.Колонки.Переносить.Доступность = (Должность = Справочники.ДолжностиОрганизаций.Оператор);
		ЭлементыФормы.СписокПечатныхДокументов.Колонки.Переносить.Видимость = (Должность = Справочники.ДолжностиОрганизаций.Оператор);
		ЭлементыФормы.Панель.Страницы.ВходящиеДокументы.Видимость = (Должность = Справочники.ДолжностиОрганизаций.Оператор);

КонецПроцедуры

Процедура ПринятьДокументыНажатие(Элемент)
	таб = ЭлементыФормы.ВходящиеДокументы.Значение.Скопировать();
	ТабМЛ = Таб.Скопировать();
	ТабМЛ.Свернуть("МаршрутныйЛист");
	МаршрутныйЛист = ТабМЛ[0].МаршрутныйЛист;
	наборЗаписей = регистрыСведений.УчетВходящихДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.МаршрутныйЛист.Установить(МаршрутныйЛист);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Загрузить(Таб);
	наборЗаписей.Записать(истина);
	
	ДокРеестрВыборка = Документы.РеестрПрочихДокументов.Выбрать(НачалоДня(ТекущаяДата()),КонецДня(ТекущаяДата()));
	
	Если ДокРеестрВыборка.следующий() Тогда
	ДокРеестр = ДокРеестрВыборка.ПолучитьОбъект();
	иначе	
	ДокРеестр = Документы.РеестрПрочихДокументов.СоздатьДокумент();
	Докреестр.Дата = НачалоДня(ТекущаяДата());
    конецЕсли;
	Для каждого стр из Таб цикл
	Если стр.ВНаличии Тогда	
	новстр = Докреестр.СписокДокументов.Добавить();
	НовСтр.ВидДокумента = стр.видДокумента;
	НовСтр.Контрагент = стр.Контрагент;
	НовСтр.Менеджер = стр.Заказпокупателя.ДоговорКонтрагента.ОтветственноеЛицо;
	НовСтр.Комментарий = Стр.Комментарий;
	конецЕсли;
    конецЦикла;
    ДокРеестр.Записать();
КонецПроцедуры

Процедура ОтметитьЗаявкиНажатие(Элемент)
	Таб = ЭлементыФормы.СписокЗаявок.Значение;
	Для каждого стр из Таб  Цикл
		Если не стр.Приехал и  стр.заявка.МаршрутныйЛист = стр.ЗаданиеНаОтгрузку Тогда
			ДокОбъект = Стр.Заявка.Получитьобъект();
			ДокОбъект.МаршрутныйЛист = Документы.ЗаданиеНаОтгрузку.ПустаяСсылка();
			ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		конецЕсли;
	конецЦикла;	
КонецПроцедуры

Функция НайтиРеализациюПоНомеруФормулаАвто(ОрганизацияШтрихКод, Номердок, ДатаДок)
	
	Если ОрганизацияШтрихКод = "30" Тогда
		ТипДоговора = Справочники.ТипыДоговоров.ФормулаАвтоПлюс;
	ИначеЕсли ОрганизацияШтрихКод = "40" Тогда
		ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль;
	Иначе
		Сообщить("Не удалось определить документ по штрих-коду");
		Возврат Документы.РеализацияТоваровУслуг.ПустаяСсылка();
	КонецЕсли;
	
	ПопыткаУспешна = Истина;
	
	Попытка
		НомерФормулаАвто = Число(Номердок);
	Исключение
		ПопыткаУспешна = Ложь;
	КонецПопытки;
	
	Если ПопыткаУспешна Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РеализацияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода
		|	И РеализацияТоваровУслуг.НомерФормулаАвто = &НомерФормулаАвто
		|	И РеализацияТоваровУслуг.ДоговорКонтрагента.ТипДоговора = &ТипДоговора";
		
		Запрос.УстановитьПараметр("НачПериода"      , НачалоДня(ДатаДок));
		Запрос.УстановитьПараметр("КонПериода"      , КонецДня(ДатаДок));
		Запрос.УстановитьПараметр("НомерФормулаАвто", НомерФормулаАвто);
		Запрос.УстановитьПараметр("ТипДоговора"     , ТипДоговора);
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ДокСсылка = Выборка.Ссылка;
		Иначе
			ДокСсылка = Документы.РеализацияТоваровУслуг.ПустаяСсылка();
		КонецЕсли;
		
	Иначе
		ДокСсылка = Документы.РеализацияТоваровУслуг.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ДокСсылка;
	
КонецФункции // НайтиРеализациюПоНомеруФормулаАвто()

Функция ПолучитьПарамКонтрагентаПоПеремещению(ДокСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.ВнутреннийЗаказ.ДокументОснование.Контрагент КАК Контрагент,
	|	ПеремещениеТоваров.ВнутреннийЗаказ.ДокументОснование.ДоговорКонтрагента КАК Договор
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ДокПеремещение";
	
	Запрос.УстановитьПараметр("ДокПеремещение", ДокСсылка);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		СтруктРез = Новый Структура("Контрагент, Договор", Выборка.Контрагент, Выборка.Договор);
	Иначе
		СтруктРез = Новый Структура("Контрагент, Договор", Справочники.Контрагенты.ПустаяСсылка(), Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;
	
	Возврат СтруктРез;
	
КонецФункции // ПолучитьПарамКонтрагентаПоПеремещению()

Процедура ЗаполнитьРеквизитыСтроки(Строка, Док, ВидПФ, ПеремещениеКонтрагент)
	
	Если НЕ (ВидПФ = "B" ИЛИ ВидПФ = "T") Тогда
		Строка.Контрагент = Док.Контрагент;
		Строка.Договор = Док.ДоговорКонтрагента;
		Строка.СуммаДокумента = Док.СуммаДокумента;
	Иначе
		СтруктПарамКонтрагента = ПолучитьПарамКонтрагентаПоПеремещению(Док);
		Строка.Контрагент     = СтруктПарамКонтрагента.Контрагент;
		Строка.Договор        = СтруктПарамКонтрагента.Договор;
		Строка.СуммаДокумента = 0;
		ПеремещениеКонтрагент = СтруктПарамКонтрагента.Контрагент;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьРеквизитыСтроки()

Функция НайтиКонтрагентаДляЗаписиВРегистр(ВидПФ, кодКонтрагента, ПеремещениеКонтрагент)
	
	Если НЕ (ВидПФ = "B" ИЛИ ВидПФ = "T") Тогда
		КонтрагентСсылка = Справочники.Контрагенты.НайтиПоКоду(кодКонтрагента);
	Иначе
		КонтрагентСсылка = ПеремещениеКонтрагент;
	КонецЕсли;
	
	Возврат КонтрагентСсылка;
	
КонецФункции // НайтиКонтрагентаДляЗаписиВРегистр()