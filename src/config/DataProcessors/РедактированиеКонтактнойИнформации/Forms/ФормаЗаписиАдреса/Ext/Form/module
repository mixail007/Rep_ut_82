 
Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

Перем мСтруктураИзмерений Экспорт;

Перем мПромежуточныйАдресЗаПределамиРФ;
перем Настройка1;
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//  Процедура формирует строковое представление адресных элементов -
// "родителей" переданого в переданных параментрах
//
// Параметры:
//  Элемент - элемент справочника Адресный классфикатор, для которого надо получить родителей.
//  Регион - строка, куда будет помещено строковое представление "родительского" региона.
//  Район - строка, куда будет помещено строковое представление "родительского" района.
//  Город - строка, куда будет помещено строковое представление "родительского" города.
//  НаселенныйПункт - строка, куда будет помещено строковое представление "родительского" населенного пункта.
//  Улица  - строка, куда будет помещено строковое представление "родительской" улица.
//  Дом - строка, куда будет помещено строковое представление "родительского" дома.
//  Индекс - строка, куда будет помещено строковое представление индекса.
//
Процедура ЗаполнитьРодителей(Регион, Район, Город, НаселенныйПункт, Улица, Дом, Индекс, Элемент) Экспорт

	Если Элемент.ТипАдресногоЭлемента > 5 Тогда
		АдресныйЭлемент = ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код - Элемент.Код%МаскаДома());
		Если АдресныйЭлемент.ТипАдресногоЭлемента = 6 Тогда
			Дом = ПолучитьНазвание(АдресныйЭлемент);
		Иначе
			Дом = "";
		КонецЕсли;
	КонецЕсли;

	Если Элемент.ТипАдресногоЭлемента > 4 Тогда
		АдресныйЭлемент = ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код - Элемент.Код%МаскаУлицы());
		Если АдресныйЭлемент.ТипАдресногоЭлемента = 5 Тогда
			Улица = ПолучитьНазвание(АдресныйЭлемент);
		Иначе
			Улица = "";
		КонецЕсли;
	КонецЕсли;

	Если Элемент.ТипАдресногоЭлемента > 3 Тогда
		АдресныйЭлемент = ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код - Элемент.Код%МаскаНасПункта());
		Если АдресныйЭлемент.ТипАдресногоЭлемента = 4 Тогда
			НаселенныйПункт = ПолучитьНазвание(АдресныйЭлемент);
		Иначе
			НаселенныйПункт = "";
		КонецЕсли;
	КонецЕсли;

	Если Элемент.ТипАдресногоЭлемента > 2 Тогда
		АдресныйЭлемент = ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код - Элемент.Код%МаскаГорода());
		Если АдресныйЭлемент.ТипАдресногоЭлемента = 3 Тогда
			Город = ПолучитьНазвание(АдресныйЭлемент);
		Иначе
			Город = "";
		КонецЕсли;
	КонецЕсли;

	Если Элемент.ТипАдресногоЭлемента > 1 Тогда
		АдресныйЭлемент = ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код - Элемент.Код%МаскаРайона());
		Если АдресныйЭлемент.ТипАдресногоЭлемента = 2 Тогда
			Район = ПолучитьНазвание(АдресныйЭлемент);
		Иначе
			Район = "";
		КонецЕсли;
	КонецЕсли;

	АдресныйЭлемент = ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код - Элемент.Код%МаскаРегиона());
	Если АдресныйЭлемент.ТипАдресногоЭлемента = 1 Тогда
		Регион = ПолучитьНазвание(АдресныйЭлемент);
	Иначе
		Регион = "";
	КонецЕсли;

	Индекс = Элемент.Индекс;

КонецПроцедуры

// Процедура формирует строковое представление адреса.
Процедура СформироватьПредставление()

	//+++( 21.12.2011 - при переключении на Адрес по Классификатору
	//- оставляем Представление как было
	Если НЕ ЭлементыФормы.флНеМенятьПредставление.Значение Тогда
		
		Представление = ПолучитьПредставлениеАдреса(ЭтотОбъект);
		
	Если Элементыформы.Надпись13.Заголовок = "Офис:" Тогда
	Представление= СтрЗаменить(Представление,"кв.","офис");
	конецЕсли;
	Если Элементыформы.Надпись12.Заголовок = "Строение:" Тогда
	Представление= СтрЗаменить(Представление,"корпус","строение");
	конецЕсли;
	Если Элементыформы.Надпись11.Заголовок = "Владение:" Тогда
	Представление= СтрЗаменить(Представление,"дом №","Владение");
	конецЕсли;

		
	КонецЕсли;
	//+++)
	
КонецПроцедуры

// Процедура обслуживает событие изменения типа адреса
// Российский адрес и Адрес за пределами РФ
// 
// Параметры
//  НЕТ
//
Процедура ПриИзмененииТипаАдреса()
	
	ПроизвольныйАдрес = не РоссийскийАдрес;//04.02.2016

	Если ПроизвольныйАдрес Тогда
		ЭлементыФормы.ПанельАдреса.ТекущаяСтраница = ЭлементыФормы.ПанельАдреса.Страницы.ПроизвольныйАдрес;
		Если ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
			Если Объект.Экспорт Тогда    //04.02.2016
				ЭлементыФормы.Страна.Видимость = Истина;
				ЭлементыФормы.НадписьСтрана.Видимость  = Истина;
			Иначе
				ЭлементыФормы.Страна.Видимость = Ложь;
				ЭлементыФормы.НадписьСтрана.Видимость  = Ложь;
			КонецЕсли;	
		Иначе
			ЭлементыФормы.Страна.Видимость = Ложь;
			ЭлементыФормы.НадписьСтрана.Видимость  = Ложь;
		КонецЕсли;	
	Иначе
		ЭлементыФормы.ПанельАдреса.ТекущаяСтраница = ЭлементыФормы.ПанельАдреса.Страницы.РегламентированныйАдрес;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

// Процедура вызывается при открытии формы.
//
Процедура ПриОткрытии()
	
	если РольДоступна("ПравоЗавершенияРаботыПользователей")  Тогда
		ЭлементыФормы.Представление.ТолькоПросмотр = Ложь;
	КонецЕсли;

	ЭлементыФормы.Объект.ТолькоПросмотр     = НЕ ДоступностьОбъекта;
	
	Если Вид = Неопределено Тогда
		Вид = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	КонецЕсли;

	Если ЗначениеНеЗаполнено(Объект) И ДоступностьОбъекта Тогда
		ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Объект;
	ИначеЕсли ЗначениеНеЗаполнено(Вид) Тогда
		ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Вид;
	Иначе
		ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Регион;
	КонецЕсли; 
	//+++ 04.02.2016
	//ПроизвольныйАдрес = (ПолучитьПредставлениеАдреса(ЭтотОбъект) <> Представление);
	//РоссийскийАдрес = истина;	//ВСЕГДА ПО КЛАССИФИКАТОРУ 
	
	//+++ 11.05.2016 Если нет Страны!
	Если типЗнч(ОбработкаОбъект.Объект)=тип("СправочникСсылка.Контрагенты") тогда
		РоссийскийАдрес = ОбработкаОбъект.Объект.Страна.Пустая() и не ОбработкаОбъект.Объект.Экспорт;   
		Если не РоссийскийАдрес и Поле1="" тогда
			Поле1 = СокрЛП(ОбработкаОбъект.Объект.Страна.НаименованиеПолное); //сразу страну пишет из Карточки клиента
		КонецЕсли;
	Иначе //всегда по умолчанию
		РоссийскийАдрес = Истина;
	КонецЕсли;	
	ПриИзмененииТипаАдреса();
	
	если РоссийскийАдрес тогда  //+++ 04.02.2016
		ОбработатьАдрес(Представление);
	КонецЕсли;	
	мПоследнееЗначениеЭлементаТайпинга = Вид;
	
КонецПроцедуры

// Процедура вызывается при ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)
	
	Если ПроизвольныйАдрес Тогда
		Для а = 1 По 10 Цикл
			ЭтотОбъект["Поле" + Строка(а)] = "";
		КонецЦикла;
	Иначе
		СформироватьПредставление();
		
		Если Поле10 = "" тогда  //26.04.2016 - автоопределение Координат!
		  Поле10 = ОбменСУТИнтернетМагазин.получитьКоординаты(Представление); //новая функция google.com (ПЛАТНАЯ! не более 1000 адресов в сутки!)
		  Если Поле10 = "" тогда
			  Предупреждение("Не удалось получить координаты по адресу: 
			  |"+Представление+"
			  |Разделите Представление на Адрес и Комментарий!", 30);
		      Отказ = не РольДОСТУПНА("ПравоЗавершенияРаботыПользователей");
		  КонецЕсли;
	     КонецЕсли;
	  
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается при ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()
	
	ЭтаФорма.ЭлементыФормы.Вид.ТолькоПросмотр = (Объект = Неопределено);

	ОбновлениеОтображенияВФормеПриТайпинге(ЭтаФорма, ЭтаФорма.ЭлементыФормы.Вид, мОбработкаТайпинга, мТекстТайпинга);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

// Процедура - обработчик события "ПриИзменении" элемента формы "РоссийскийАдрес".
//
Процедура РоссийскийАдресПриИзменении(Элемент)
	
	//+++ 11.05.2016 - нельзя переключать на Произвольный!
	Если типЗнч(ОбработкаОбъект.Объект)=тип("СправочникСсылка.Контрагенты") тогда
		Если не ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, Настройка1)
		и ОбработкаОбъект.Объект.Страна.Пустая() тогда // если страна Пустая!
	  	Предупреждение("Нельзя менять тип адреса!", 10);
      	Элемент.Значение = не Элемент.Значение;
		КонецЕсли;
	КонецЕсли;  

	Если Элемент.Значение Тогда
		ПриИзмененииТипаАдреса();
		Если ПустаяСтрока(Представление) Тогда
			Представление = мПромежуточныйАдресЗаПределамиРФ;
			мПромежуточныйАдресЗаПределамиРФ = "";
		КонецЕсли;
		
	Иначе
		мПромежуточныйАдресЗаПределамиРФ = Представление;
		//+++( 21.12.2011
		ЭлементыФормы.флНеМенятьПредставление.Значение = (СокрЛП(мПромежуточныйАдресЗаПределамиРФ)<>"");
		ЭлементыФормы.Представление.ТолькоПросмотр = флНеМенятьПредставление;
		Если флНеМенятьПредставление тогда
			ОбработатьАдрес(Представление);
		КонецЕсли;
		//+++)	
		СформироватьПредставление();
		ПриИзмененииТипаАдреса();
		
	КонецЕсли;
	
КонецПроцедуры

///
процедура Распознать(знач1, n)
	нКон = 0;	
	знач1 = СокрЛП(знач1);
	
		Если стрДлина(СокрЛП(знач1))=6 тогда
		знач2 = "";
			попытка 
				знач2 = Формат(Число(знач1),"ЧГ=0");
			исключение 
			конецПопытки;
			
			Если СокрЛП(знач2)=СокрЛП(знач1) тогда //индекс только из цифр
			нКон = 1;
			КонецЕсли;
		КонецЕсли;
		
		нрегзнач1 = нрег(знач1);
	
		
		Если (Найти(знач1," обл")>0) или (Найти(нрегзнач1,"обл.")>0) или (Найти(нрегзнач1,"область")>0) 
			или (Найти(нрегзнач1,"край")>0) 
			или (Найти(нрегзнач1,"республика ")>0) или (Найти(нрегзнач1,"респ.")>0) тогда 
			нКон = 2; 
			знач1 = стрЗаменить(знач1,"область","обл.");
			знач1 = ?(Найти(нрегзнач1,"обл.")=1, Прав(знач1, стрДлина(знач1) - 4)+" обл", знач1 );
			знач1 = ?(Найти(нрегзнач1,"респ.")=1, Прав(знач1, стрДлина(знач1) - 5)+" респ", знач1 );
			знач1 = ?(Найти(нрегзнач1,"республика ")=1, Прав(знач1, стрДлина(знач1) - 11)+" Респ", знач1 );
			//в конце точка не нужна.
			знач1 = ?(Найти(знач1,".")=стрДлина(знач1), лев(знач1, стрДлина(знач1)-1),  знач1 ) ;
	
			Если ( Найти( нрег(знач1),"московская")>0 ) тогда
				знач1 = "Московская обл";
			КонецЕсли;	
			
		ИначеЕсли (Найти(нрегзнач1,"ярославль")>0) тогда
			нКон = 4;
			знач1 = "Ярославль г"; // регион, но для нас - это Город!
		ИначеЕсли (Найти(нрегзнач1,"москва")>0) тогда  //+++ 12.10.2011
			нКон = 2;
			знач1 = "Москва г"; // регион!
		ИначеЕсли (Найти(знач1,"СПб")>0) или ((Найти(нрегзнач1,"санкт-петербург")>0))тогда  
			нКон = 2;
			знач1 = "Санкт-Петербург г"; // это регион Санкт-ПетербуРг
			
		ИначеЕсли (Найти(знач1,"МКАД")>0) тогда
			нКон = 6; //улица
		иначеЕсли (знач1="МО") тогда
			нКон = 2;
			знач1 = "Московская обл"; // регион!
			
		ИначеЕсли Найти(нрегзнач1," р-н")>0 или Найти(нрегзнач1," р-он")>0 или Найти(нрегзнач1," район")>0 тогда
			нКон = 3;
		иначеЕсли Найти(нрегзнач1,"г.")>0 или Найти(нрегзнач1,"город ")>0 тогда
			нКон = 4;
			знач1 = ?(Найти(нрегзнач1,"г.")=1, Прав(знач1, стрДлина(знач1) - 2) + " г", знач1 );
			
		иначеЕсли Найти(нрегзнач1,"пос.")=1 или Найти(нрегзнач1,"п.")=1 или Найти(нрегзнач1,"поселок ")>0 
			  или Найти(нрегзнач1,"п/о")=1  или Найти(нрегзнач1,"п\о")=1
			  ИЛИ Найти(нрегзнач1,"сел.")=1 или Найти(нрегзнач1,"с.")=1 или Найти(нрегзнач1,"село ")>0 
			  или Найти(нрегзнач1,"ст.")=1  или Найти(нрегзнач1,"станция")>0
			  ИЛИ Найти(нрегзнач1,"дер.")=1 или Найти(нрегзнач1,"деревня ")>0 тогда //или (n>3 и n<6) тогда
			нКон = 5;
			знач1 = ?(Найти(нрегзнач1,"п.")=1, Прав(знач1, стрДлина(знач1) - 2) + " п", знач1 );
		    знач1 = ?(Найти(нрегзнач1,"п/o")=1, Прав(знач1, стрДлина(знач1) - 3) + " п", знач1 );
		    знач1 = ?(Найти(нрегзнач1,"пос.")=1, Прав(знач1, стрДлина(знач1) - 4) + " п", знач1 );
		    знач1 = ?(Найти(нрегзнач1,"с.")=1, Прав(знач1, стрДлина(знач1) - 2) + " с", знач1 );
		    знач1 = ?(Найти(нрегзнач1,"сел.")=1, Прав(знач1, стрДлина(знач1) - 4) + " с", знач1 );
		    знач1 = ?(Найти(нрегзнач1,"ст.")=1, Прав(знач1, стрДлина(знач1) - 3) + " ст", знач1 );
		    знач1 = ?(Найти(нрегзнач1,"дер.")=1, Прав(знач1, стрДлина(знач1) - 4) + " д", знач1 );
	
		иначеЕсли Найти(нрегзнач1,"ул.")>0   или Найти(нрегзнач1,"улица")>0 
			  или Найти(нрегзнач1,"пр.")=1   или Найти(нрегзнач1,"пр-т")>0 
			  или Найти(нрегзнач1,"пр-кт")>0 или Найти(нрегзнач1,"проспект")>0
			  или Найти(нрегзнач1,"пр-д")>0  или Найти(нрегзнач1,"проезд")>0
			  или Найти(нрегзнач1,"тр.")=1   или Найти(нрегзнач1,"тр-т")>0  
			  или Найти(нрегзнач1,"тракт")>0 или Найти(нрегзнач1,"площадь")>0
			  или Найти(нрегзнач1,"км.")>0   или Найти(нрегзнач1,"километр")>0 
			  или Найти(нрегзнач1,"дор.")>0  или Найти(нрегзнач1,"дорога")>0
			  или Найти(нрегзнач1,"пл.")=1   или Найти(нрегзнач1,"пл-дь")>0  
			  или Найти(нрегзнач1,"пер.")>0  или Найти(нрегзнач1,"переулок")>0
			  или Найти(нрегзнач1,"ш.")>0    или Найти(нрегзнач1,"шоссе")>0 тогда
			нКон = 6;
			знач1 = СокрЛП( ?(Найти(нрегзнач1,"ул.")=1, Прав(знач1, стрДлина(знач1) - 3)+" ул", знач1 ) );
	        знач1 = СокрЛП( ?(Найти(нрегзнач1,"пл.")=1, Прав(знач1, стрДлина(знач1) - 3)+" пл", знач1 ) );
	        // город, улица, дом  / или Обл., Район, деревня, дом
		
//==================================================
			
		иначеЕсли Найти(нрегзнач1,"дом ")>0 тогда
			нКон = 7;
			знач1 = ?(Найти(знач1,"№")>0, Прав(знач1, стрДлина(знач1) - Найти(знач1,"№") ), знач1 );
			знач1 = СокрЛП( ?(Найти(нрег(знач1),"дом")=1, Прав(знач1, стрДлина(знач1) - 3), знач1 ) );
			//знач1 = "д."+знач1;
			
		иначеЕсли (Найти(нрегзнач1,"комн.")=1) или (Найти(нрегзнач1,"к.")=1) или (Найти(нрегзнач1,"комната")>0) или (n=10) тогда
			нКон = 10; 
			знач1 = ?(Найти(нрегзнач1,"№")>0, Прав(знач1, стрДлина(знач1) - Найти(знач1,"№") ), знач1 );
			знач1 = ?(Найти(нрегзнач1,"комн.")=1, Прав(знач1, стрДлина(знач1) - 5), знач1 );
			знач1 = ?(Найти(нрегзнач1,"к.")=1, Прав(знач1, стрДлина(знач1) - 2), знач1 );
	        
		иначеЕсли (Найти(нрегзнач1,"кв.")=1) //или (Найти(нрег(знач1),"квартира")>0)
			 или  (Найти(нрегзнач1,"оф.")=1) или (Найти(нрегзнач1,"офис")=1) или n=9 тогда
			нКон = 9; 
			знач1 = ?(Найти(нрегзнач1,"№")>0, Прав(знач1, стрДлина(знач1) - Найти(знач1,"№") ), знач1 );
			знач1 = ?(Найти(нрегзнач1,"кв.")=1 или Найти(нрегзнач1,"оф.")=1, Прав(знач1, стрДлина(знач1) - 3), знач1 );
			знач1 = ?(Найти(нрегзнач1,"офис")=1, Прав(знач1, стрДлина(знач1) - 4), знач1 );
			
		иначеЕсли (Найти(нрегзнач1,"корп.")=1) или (Найти(нрегзнач1,"корпус")>0)  
			  или  (Найти(нрегзнач1,"стр.")=1) или (Найти(нрегзнач1,"строение ")>0) или n=8 тогда
			нКон = 8; 
			знач1 = ?(Найти(нрегзнач1,"№")>0, Прав(знач1, стрДлина(знач1) - Найти(знач1,"№") ), знач1 );
			знач1 = ?(Найти(нрегзнач1,"корп.")=1, Прав(знач1, стрДлина(знач1) - 5), знач1 );
			знач1 = ?(Найти(нрегзнач1,"корпус")=1, Прав(знач1, стрДлина(знач1) - 6), знач1 );
			знач1 = ?(Найти(нрегзнач1,"стр.")=1, Прав(знач1, стрДлина(знач1) - 4), знач1 );
		КонецЕсли;	

		//--------------------------------------------
		 Если Найти(нрег(знач1),"д.")>0 тогда	//деревня или дом
			знач2 = СокрЛП( ?(Найти(нрег(знач1),"д.")=1, Прав(знач1, стрДлина(знач1) - 2)+" д", знач1 ) );
			нКон = 5;  //деревня! - знач1 не меняется!!!
			
			для i=0 по 9 цикл //если после д. идут цифры, то это дом!
				Если Найти(знач1, строка(i))>0 тогда
					знач1 = ?(Найти(знач1,"№")>0, Прав(знач1, стрДлина(знач1) - Найти(знач1,"№") ), знач1);
					знач1 = СокрЛП( ?(Найти(нрег(знач1),"д.")=1, Прав(знач1, стрДлина(знач1) - 2), знач1 ) );
					нКон = 7; прервать; // по первой же цифре 
				КонецЕсли;
			КонецЦикла;
			Если нКон=5 тогда //деревня сначала название потом префикс
				знач1 = знач2;
            КонецЕсли;
		КонецЕсли;
		
	//в конце точка не нужна.
	знач1 = ?(Найти(знач1,".")=стрДлина(знач1), лев(знач1, стрДлина(знач1)-1),  знач1 ) ;
	Знач1 = СокрЛП(знач1);
	знач1 = ?(Найти(знач1,".")=стрДлина(знач1), лев(знач1, стрДлина(знач1)-1),  знач1 ) ;
	
	Если Знач1="" тогда
		n=0;
	КонецЕсли;	
	
	n = нКон;//+++
	
Конецпроцедуры		

//+++
процедура РазбитьСтрокуНаПоля(стр0, ТаблЗнач1)
	
ТаблЗнач1 = неопределено;
ТаблЗнач1 =новый ТаблицаЗначений;
ТаблЗнач1.Колонки.Добавить("n");
ТаблЗнач1.Колонки.Добавить("Значение");

стр1 = стр0;// иначе значение меняется!

строка1 = СокрЛП(стр1);
Если строка1<>"" тогда 
		
		i=найти(строка1,","); L = стрДлина(строка1);
		n=1;
		пока i>0 и n<=10 цикл  //+++ 21.12

		знач1 = СокрЛП(Лев(Строка1, i-1));
		
		//!!! распознавание - что это такое
		//n=0;
		Распознать(знач1, n); 
		// переделывает значения n!
		
			Если n>0 тогда
				строка111 = ТаблЗнач1.Добавить();
				
				строка111.n = n;
				строка111.Значение = знач1; // запишем 
			//иначе 
				//сообщить("Не распознано поле №"+n+" = '"+знач1+"' (для адреса: "+стр1+")");
			n=n+1;
			КонецЕсли;	
		
		Строка1 = Прав(Строка1, L-i);
		i=найти(строка1,","); L = стрДлина(строка1);
		КонецЦикла;	
		
		Если n<=10 тогда  //+++ 21.12
			Распознать(Строка1, n);
			Если n>=5 тогда
				строка111 = ТаблЗнач1.Добавить();
				строка111.n = n;
				строка111.Значение = Строка1; // запишем 
			КонецЕсли;
			
		КонецЕсли;
		
КонецЕсли;

КонецПроцедуры


Процедура ОбработатьАдрес(Адрес1, НомерПоля1=2, НомерПоля2=9) 
	
	Табзнач1 = Неопределено;
	РазбитьСтрокуНаПоля(Адрес1, Табзнач1);
	рез = "";
	
	для i=0 по Табзнач1.количество()-1 цикл
		стр1 = Табзнач1[i];
		
		//+++ 22.12.2011 сразу определим правильную область  Город + ская обл
	Если ЭтотОбъект["Поле2"]="" тогда	
		Если СокрЛП(стр1.Значение)="Ярославль г" или СокрЛП(стр1.Значение)="Рыбинск г" 
			или СокрЛП(стр1.Значение)="Углич г"  или СокрЛП(стр1.Значение)="Ростов г" 
			//или СокрЛП(стр1.Значение)="Переславль-Залесский г"  или СокрЛП(стр1.Значение)="Брейтово г" 
			или СокрЛП(стр1.Значение)="Данилов г" или СокрЛП(стр1.Значение)="Тутаев г"  тогда
		ЭтотОбъект["Поле2"] = "Ярославская обл"; 
		иначеЕсли СокрЛП(стр1.Значение)="Архангельск г" тогда //2
		ЭтотОбъект["Поле2"] = "Архангельская обл"; 
		иначеЕсли СокрЛП(стр1.Значение)="Кострома г" тогда //1
		ЭтотОбъект["Поле2"] = "Костромская обл"; 
		иначеЕсли СокрЛП(стр1.Значение)="Тверь г" тогда//1
		ЭтотОбъект["Поле2"] = "Тверская обл"; 
		иначеЕсли СокрЛП(стр1.Значение)="Иваново г" тогда //1
		ЭтотОбъект["Поле2"] = "Ивановская обл"; //+++ 21.12.2011
		
		иначеЕсли СокрЛП(стр1.Значение)="Казань г" тогда//---
		ЭтотОбъект["Поле2"] = "Татарстан Респ"; 
		иначеЕсли СокрЛП(стр1.Значение)="Уфа г" тогда//---
		ЭтотОбъект["Поле2"] = "Башкортостан Респ";
		иначеЕсли СокрЛП(стр1.Значение)="Вологда г"  или СокрЛП(стр1.Значение)="Череповец г" тогда//---
		ЭтотОбъект["Поле2"] = "Вологодская обл";
							
		иначеЕсли СокрЛП(стр1.Значение)="Владимир г" тогда //0
		ЭтотОбъект["Поле2"] = "Владимирская обл"; //+++ 21.12.2011
		иначеЕсли СокрЛП(стр1.Значение)="Киров г" тогда //0
		ЭтотОбъект["Поле2"] = "Кировская обл";
		КонецЕсли;	
	КонецЕсли;
	
		//регион     //город
		Если (стр1.n>=НомерПоля1) и (стр1.n<=НомерПоля2) тогда
			рез = рез +СокрЛП(стр1.Значение)+", ";
			Если ЭтотОбъект["Поле"+строка(стр1.n)] = "" тогда
				ЭтотОбъект["Поле"+строка(стр1.n)] = СокрЛП(стр1.Значение); //+++ 21.12.2011
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	рез = Лев(рез, стрДлина(рез)-2);
	
//	возврат рез;
//КонецФункции	
КонецПроцедуры
//+++)

// Процедура вызывается при очистке значения элемента формы Объект.
//
Процедура ОбъектОчистка(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Вид) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		Вид = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Регион".
//
Процедура РегионПриИзменении(Элемент)
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Район".
//
Процедура РайонПриИзменении(Элемент)
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Город".
//
Процедура ГородПриИзменении(Элемент)
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "НаселенныйПункт".
//
Процедура НаселенныйПунктПриИзменении(Элемент)
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Улица".
//
Процедура УлицаПриИзменении(Элемент)
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Дом".
//
Процедура ДомПриИзменении(Элемент)

	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Корпус".
//
Процедура КорпусПриИзменении(Элемент)

	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Квартира".
//
Процедура КвартираПриИзменении(Элемент)

	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Индекс".
//
Процедура ИндексПриИзменении(Элемент)

	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "Регион".
//
Процедура РегионНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = ПолучитьСписокСокращений(Поле2, 1);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Поле2 = СокрЛП(Поле2) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "Район".
//
Процедура РайонНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = ПолучитьСписокСокращений(Поле3, 2);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Поле3 = СокрЛП(Поле3) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "Город".
//
Процедура ГородНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = ПолучитьСписокСокращений(Поле4, 3);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Поле4 = СокрЛП(Поле4) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "НаселенныйПункт".
//
Процедура НаселенныйПунктНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = ПолучитьСписокСокращений(Поле5, 4);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Поле5 = СокрЛП(Поле5) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "Улица".
//
Процедура УлицаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = ПолучитьСписокСокращений(Поле6, 5);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Поле6 = СокрЛП(Поле6) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
	
	Поле1 = ПолучитьИндекс(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле8);
	СформироватьПредставление();
	
КонецПроцедуры


// Процедура перехватывает момент начала выбора вида контактной информации.
//
// Параметры
//  Элемент - элемент формы, выбор значения которого должен произойти
//  СтандартнаяОбработка - булево, флаг стандартной обработки выбора.
Процедура ВидНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Объект = Неопределено ИЛИ Объект.Ссылка.Пустая() Тогда
		
		Сообщить("Выберите объект.");
		Возврат;
		
	КонецЕсли;

	ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Тип, ВидОбъектаКИ(Объект));
	
КонецПроцедуры


// Процедура - обработчик события "НачалоВыбора" поля ввода "Регион".
//
Процедура РегионНачалоВыбора(Элемент, СтандартнаяОбработка)

	ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Поле2);
	ФормаВыбора.ОтобратьТолькоРегионы();
	ФормаВыбора.Открыть();

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "Район".
//
Процедура РайонНачалоВыбора(Элемент, СтандартнаяОбработка)

	ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Поле3);
	ФормаВыбора.УстановитьРодителя(Поле2, "", "", "");
	ФормаВыбора.ОтобратьТолькоРайоны();
	ФормаВыбора.Открыть();

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "Город".
//
Процедура ГородНачалоВыбора(Элемент, СтандартнаяОбработка)

	ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Поле4);
	ФормаВыбора.УстановитьРодителя(Поле2, Поле3, "", "");
	ФормаВыбора.ОтобратьТолькоГорода();
	ФормаВыбора.Открыть();

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "НаселенныйПункт".
//
Процедура НаселенныйПунктНачалоВыбора(Элемент, СтандартнаяОбработка)

	ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Поле5);
	ФормаВыбора.УстановитьРодителя(Поле2, Поле3, Поле4, "");
	ФормаВыбора.ОтобратьТолькоНаселенныеПункты();
	ФормаВыбора.Открыть();

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "Улица".
//
Процедура УлицаНачалоВыбора(Элемент, СтандартнаяОбработка)

	ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Поле6);
	ФормаВыбора.УстановитьРодителя(Поле2, Поле3, Поле4, Поле5);
	ФормаВыбора.ОтобратьТолькоУлицы();
	ФормаВыбора.Открыть();

КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "Регион".
//
Процедура РегионОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	АдреснаяЗапись = ПолучитьСтруктуруАдресногоЭлемента(ВыбранноеЗначение.Код);
	Элемент.Значение = СокрЛП(АдреснаяЗапись.Наименование) + " " + СокрЛП(АдреснаяЗапись.Сокращение);
	ЗаполнитьРодителей(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле1, АдреснаяЗапись);
	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "Район".
//
Процедура РайонОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	АдреснаяЗапись = ПолучитьСтруктуруАдресногоЭлемента(ВыбранноеЗначение.Код);
	Элемент.Значение = СокрЛП(АдреснаяЗапись.Наименование) + " " + СокрЛП(АдреснаяЗапись.Сокращение);
	ЗаполнитьРодителей(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле1, АдреснаяЗапись);
	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "Город".
//
Процедура ГородОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	АдреснаяЗапись = ПолучитьСтруктуруАдресногоЭлемента(ВыбранноеЗначение.Код);
	Элемент.Значение = СокрЛП(АдреснаяЗапись.Наименование) + " " + СокрЛП(АдреснаяЗапись.Сокращение);
	ЗаполнитьРодителей(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле1, АдреснаяЗапись);
	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "НаселенныйПункт".
//
Процедура НаселенныйПунктОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	АдреснаяЗапись = ПолучитьСтруктуруАдресногоЭлемента(ВыбранноеЗначение.Код);
	Элемент.Значение = СокрЛП(АдреснаяЗапись.Наименование) + " " + СокрЛП(АдреснаяЗапись.Сокращение);
	ЗаполнитьРодителей(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле1, АдреснаяЗапись);
	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "Улица".
//
Процедура УлицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	АдреснаяЗапись = ПолучитьСтруктуруАдресногоЭлемента(ВыбранноеЗначение.Код);
	Элемент.Значение = СокрЛП(АдреснаяЗапись.Наименование) + " " + СокрЛП(АдреснаяЗапись.Сокращение);
	ЗаполнитьРодителей(Поле2, Поле3, Поле4, Поле5, Поле6, Поле7, Поле1, АдреснаяЗапись);
	СформироватьПредставление();

КонецПроцедуры

// Процедура перехватывает момент начала выбора Объекта.
//
// Параметры
//  Элемент - элемент формы, выбор значения которого должен произойти
//  СтандартнаяОбработка - булево, флаг стандартной обработки выбора.
Процедура ОбъектНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = НачалоВыбораОбъектаКИ(ЭтаФорма, Элемент, глТекущийПользователь);

КонецПроцедуры

// Процедура обработчик события АвтоПодборТекста элемента формы Вид.
//
Процедура ВидАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Тип, ВидОбъектаКИ(Объект)), Тип("СправочникСсылка.ВидыКонтактнойИнформации"));
	
КонецПроцедуры

// Процедура обработчик события ОкончаниеВводаТекста элемента формы Вид.
//
Процедура ВидОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Тип, ВидОбъектаКИ(Объект)), ЭтаФорма, Тип("СправочникСсылка.ВидыКонтактнойИнформации"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга);
	
КонецПроцедуры

// Процедура обработчик события ПриИзменении элемента формы Вид.
//
Процедура ВидПриИзменении(Элемент)
	
	мПоследнееЗначениеЭлементаТайпинга = Элемент.Значение;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЕЙСТВИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ
//

// Процедура - обработчик события "ЗагрузитьАК" командной панели "ДействияФормы".
//
Процедура ДействияФормыЗагрузитьАК(Кнопка)

	РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаЗагрузкиАдресногоКлассификатора").Открыть();

КонецПроцедуры

Процедура ОсновныеДействияФормыЗаписать(Кнопка)
	
	Записать();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если Записать() = Истина Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = ЗакрыватьФормуРедактирования();
	КонецЕсли; 
	
КонецПроцедуры

Процедура флНеМенятьПредставлениеПриИзменении(Элемент)
	
	Если не флНеМенятьПредставление тогда
		Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, Настройка1) тогда  //+++ нельзя менять флаг!
		   ЭлементыФормы.Представление.ТолькоПросмотр = флНеМенятьПредставление;
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СтранаНачалоВыбора(Элемент, СтандартнаяОбработка)
	ФормаВыбора = Справочники.КлассификаторСтранМира.ПолучитьФормуВыбора(, Элемент,);
	Если СокрЛП(Поле1)<>"" Тогда
		НайденнаяСтрана = Справочники.КлассификаторСтранМира.НайтиПоРеквизиту("НаименованиеПолное",Поле1);
		Если Найденнаястрана.Пустая() Тогда
			НайденнаяСтрана = Справочники.КлассификаторСтранМира.НайтиПоНаименованию(Поле1);
		КонецЕсли;
		ФормаВыбора.НачальноеЗначениеВыбора = НайденнаяСтрана;
	КонецЕсли;
	ФормаВыбора.Открыть();
КонецПроцедуры

Процедура СтранаПриИзменении(Элемент)
	Если СокрЛП(Представление) = "" Тогда
		Представление = СокрЛП(Поле1);
	КонецЕсли;	
КонецПроцедуры

Процедура СтранаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если СокрЛП(ВыбранноеЗначение.НаименованиеПолное)<>"" Тогда
		СтандартнаяОбработка = Ложь;
		ЭлементыФормы.Страна.Значение = СокрЛП(ВыбранноеЗначение.НаименованиеПолное); 
	ИначеЕсли СокрЛП(ВыбранноеЗначение.Наименование)<>"" Тогда
		СтандартнаяОбработка = Ложь;
		ЭлементыФормы.Страна.Значение = СокрЛП(ВыбранноеЗначение.Наименование); 
	КонецЕсли;	
КонецПроцедуры

Процедура Поле10Открытие(Элемент, СтандартнаяОбработка)
	
	Если Поле10<>"" тогда
		СтандартнаяОбработка = ложь;
	//	API 2.0, Static API, maps.yandex.ru
	// можно задавать параметры для онлайн карты непосредственно в адресной строке браузера, например:
	//http://maps.yandex.ru/?ll=37.584731,55.690693&spn=2.124481,0.671008&z=10&l=map&pt=37.584731,55.690693,pmrdm1
	
	//10.04.2017
	запятая = найти(Поле10,",");
	если запятая>0 тогда
		Координаты2 = прав(Поле10, стрДлина(Поле10) - запятая)+","+ лев(Поле10, запятая-1);
		URL="https://www.google.ru/maps/place/"+Представление+"/@"+Координаты2+",14z";   //14 - еще видны дома
	иначе
		URL="https://www.google.ru/maps/place/"+Представление;
	КонецЕсли;	
	//URL= "https://maps.yandex.ru/?ll="+Поле10
	//	+"&spn=2.124481,0.671008&z=14&l=map&pt="+Поле10+",pmrdm1";
		
	ЗапуститьПриложение(URL);	
	КонецЕсли;

КонецПроцедуры

Процедура Поле10НачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если вопрос("Рассчитать координаты автоматически?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да тогда
		Поле10 = ОбменСУТИнтернетМагазин.получитьКоординаты(Представление); //новая функция google.com (ПЛАТНАЯ! не более 1000 адресов в сутки!)
		Если Поле10 = "" тогда
			Предупреждение("Не удалось определить координаты по Представлению:
			|"+Представление, 10);
		КонецЕсли;	
	иначе
		Предупреждение("   Сейчас откроется YANDEX-карта.
						|Укажите правильный адрес 
						|и после этого Введите в поле Координаты
						|найденные Долготу и Широту через запятую,
						|Например 39.8380900,57.6573330", 30);
		URL = "https://maps.yandex.ru?text="+Представление;
		ЗапуститьПриложение(URL);	
	КонецЕсли;		

КонецПроцедуры





//+++ 11.05.2016 ==================== Запрет на ручной ввод полей ===============================
//
 процедура вклОтбор(формаВыбора, Текст)
 	текст1 = Лев( СокрЛП(Текст), найти(СокрЛП(Текст)," ")-1);
	текст1 = ?(текст1 = "", текст, текст1 );
	ФормаВыбора.РегистрСведенийСписок.Отбор.Наименование.ВидСравнения =ВидСравнения.Содержит;
	ФормаВыбора.РегистрСведенийСписок.Отбор.Наименование.Значение = Текст1;
	ФормаВыбора.РегистрСведенийСписок.Отбор.Наименование.Использование = истина;
КонецПроцедуры

Процедура РегионОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Если не ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, Настройка1) тогда
		Предупреждение("Выберите значение из списка!
				       | Ввод вручную - запрещен!",10);
		ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
		ФормаВыбора.НазваниеЭлемента = СокрЛП(Текст);
		ФормаВыбора.ОтобратьТолькоРегионы();
		
		вклОтбор(формаВыбора, Текст);
		
		ФормаВыбора.Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура РайонОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Если не ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, настройка1) тогда
		Предупреждение("Выберите значение из списка!
				       | Ввод вручную - запрещен!",10);
		ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
		ФормаВыбора.НазваниеЭлемента = СокрЛП(Текст);
		ФормаВыбора.УстановитьРодителя(Поле2, "", "", "");
		ФормаВыбора.ОтобратьТолькоРайоны();
		вклОтбор(формаВыбора, Текст);
		ФормаВыбора.Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура ГородОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
СтандартнаяОбработка = ложь;
	Если не ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, Настройка1) тогда
		Предупреждение("Выберите значение из списка!
				       | Ввод вручную - запрещен!",10);
		ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
		ФормаВыбора.НазваниеЭлемента = СокрЛП(Текст);
		ФормаВыбора.УстановитьРодителя(Поле2, Поле3, "", "");
		ФормаВыбора.ОтобратьТолькоГорода();
		вклОтбор(формаВыбора, Текст);
		ФормаВыбора.Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура НаселенныйПунктОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
СтандартнаяОбработка = ложь;
	Если не ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, Настройка1) тогда
		Предупреждение("Выберите значение из списка!
				       | Ввод вручную - запрещен!",10);
					   
		ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
		ФормаВыбора.НазваниеЭлемента = СокрЛП(Текст);
		ФормаВыбора.УстановитьРодителя(Поле2, Поле3, Поле4, "");
		ФормаВыбора.ОтобратьТолькоНаселенныеПункты();
		вклОтбор(формаВыбора, Текст);
		ФормаВыбора.Открыть();
	КонецЕсли;				   
КонецПроцедуры

Процедура УлицаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
СтандартнаяОбработка = ложь;
	Если не ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, Настройка1) тогда
		Предупреждение("Выберите значение из списка!
				       | Ввод вручную - запрещен!",10);
		ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
		ФормаВыбора.НазваниеЭлемента = СокрЛП(Текст);
		ФормаВыбора.УстановитьРодителя(Поле2, Поле3, Поле4, Поле5);
		ФормаВыбора.ОтобратьТолькоУлицы();
		вклОтбор(формаВыбора, Текст);
		ФормаВыбора.Открыть();
	КонецЕсли;				   
КонецПроцедуры

Процедура Надпись13Нажатие(Элемент)
	Если Элементыформы.Надпись13.Заголовок = "Квартира:" Тогда
		Элементыформы.Надпись13.Заголовок = "Офис:";
		Представление= СтрЗаменить(Представление,"кв.","офис");
	иначе
		Элементыформы.Надпись13.Заголовок = "Квартира:";
		Представление= СтрЗаменить(Представление,"офис","кв.");
	конецЕсли;
КонецПроцедуры

Процедура Надпись12Нажатие(Элемент)
	Если Элементыформы.Надпись12.Заголовок = "Корпус:" Тогда
	Элементыформы.Надпись12.Заголовок = "Строение:"; 
    Представление= СтрЗаменить(Представление,"корпус","строение");
    иначе
	Элементыформы.Надпись12.Заголовок = "Корпус:";
	Представление= СтрЗаменить(Представление,"строение","корпус");
    конецЕсли;

КонецПроцедуры

Процедура Надпись11Нажатие(Элемент)
	Если Элементыформы.Надпись11.Заголовок = "Дом:" Тогда
	Элементыформы.Надпись11.Заголовок = "Владение:"; 
    Представление= СтрЗаменить(Представление,"дом №","владение");
    иначе
	Элементыформы.Надпись11.Заголовок = "Дом:";
	Представление= СтрЗаменить(Представление,"владение","дом №");
    конецЕсли;

КонецПроцедуры


мОбработкаТайпинга                 = Ложь;
мТекстТайпинга                     = "";
мПоследнееЗначениеЭлементаТайпинга = Неопределено;

мСтруктураИзмерений = Неопределено;

мПромежуточныйАдресЗаПределамиРФ = "";

Настройка1 = "ИзменятьСписокЭлектронныхПисемПриВыбореПапкиПисем";
