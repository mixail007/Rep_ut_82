Перем ЖирныйШрифт;
Перем СмотретьПриВыборе;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ВложениеЯвляетсяФайломОтветовНаОпрос(НаименованиеВложения)
	символСтр = "";
	ИмяФайла = "";
	индСтр  = СтрДлина(НаименованиеВложения);
	Пока Истина Цикл
		символСтр = Сред(НаименованиеВложения, индСтр, 1);
		Если индСтр = 0 тогда
			Прервать;
		КонецЕсли;
		Если символСтр = "\" тогда
			Прервать;
		КонецЕсли;
		ИмяФайла = символСтр + ИмяФайла;
		индСтр  = индСтр - 1;
	КонецЦикла;
	
	Возврат (Булево(Найти(ИмяФайла, ".rps")) ИЛИ Булево(Найти(ИмяФайла, ".xml")));
	
КонецФункции

Процедура УстановитьФлажки(Корень, Флаг)

	Для каждого СтрокаДерева Из Корень.Строки Цикл
		Если СтрокаДерева.ФлагУдаления = "Каталог" Тогда
			УстановитьФлажки(СтрокаДерева, Флаг);
		Иначе
			Если ЭлементыФормы.Дерево.ТекущаяКолонка = ЭлементыФормы.Дерево.Колонки.ОбъектЗагрузки тогда
				СтрокаДерева.ЗагружатьВСправочник 	= Флаг;
			ИначеЕсли ЭлементыФормы.Дерево.ТекущаяКолонка = ЭлементыФормы.Дерево.Колонки.Опрос тогда
				СтрокаДерева.ЗагружатьОпрос 		= Флаг;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура, осуществляющая перенос строки из источника в приемник
//
// Параметры: 
//  ТЗИсточник - таблица источник
// ТЗПриемник - таблица применик
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьПеренестиСтроку(ТЗИсточник, ТЗПриемник, Перенести)
	//ТЗИсточник.ТекущаяСтрока
	СтрокаПриемника = ТЗПриемник.Добавить();
	//СтрокаПриемника = ТЗПриемник.ТекущаяСтрока;
	КолонокВТЗ = ТЗИсточник.Колонки.Количество();
	Для индКолонки = 0 по КолонокВТЗ-1 цикл
		СтрокаПриемника[индКолонки] = ТЗИсточник.ТекущаяСтрока[индКолонки];
	КонецЦикла;
	Если Перенести тогда
		// удалить из источника
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	ДатаНачала    = НачалоМесяца(РабочаяДата);
	ДатаОкончания = КонецМесяца(РабочаяДата);
	//Входящие.Колонки.Добавить("Непрочтено",Тип("Булево"));
	МТипов              = Новый Массив(1);
	МТипов[0]           = Тип("ПочтовоеСообщение");
	ТипКолонкиКонвертЭП = Новый ОписаниеТипов(МТипов);
	МТипов              = Новый Массив(1);
	МТипов[0]           = Тип("ДвоичныеДанные");
	ТипВложения         = Новый ОписаниеТипов(МТипов);
	ТолькоНепрочитанные = Истина;
	//Входящие.Колонки.Добавить("КонвертЭП", ТипКолонкиКонвертЭП);
	//Вложения.Колонки.Добавить("Данные",    ТипВложения);
	Входящие.Колонки.Добавить("КонвертЭП");
	Вложения.Колонки.Добавить("Данные",    ТипВложения);
	
	ЭлементыФормы.КоманднаяПанельДереваАнкет.Кнопки.ПредПросмотр.Пометка = СмотретьПриВыборе;
	
КонецПроцедуры

Процедура ЗаполнитьТабличноеПолеВходящие()
	
	Входящие.Очистить();
	Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() тогда
		// внешний почтовый клиент
		Почта = Новый Почта;
		Попытка
			Почта.Подключиться();
		Исключение
			Сообщить("Не удалось подключиться к почтовому клиенту");
			Возврат;
		КонецПопытки;
		Попытка 
			СписокКонвертов = Почта.Выбрать(ТолькоНепрочитанные, Ложь);
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
		Если СписокКонвертов = Неопределено тогда
			Возврат;
		КонецЕсли;
		Для каждого КонвертЭП из СписокКонвертов Цикл
			Если КонвертЭП.Вложения.Количество() > 0 тогда
				Для каждого ВложениеИзПисьма из КонвертЭП.Вложения Цикл
					Если ВложениеЯвляетсяФайломОтветовНаОпрос(ВложениеИзПисьма.Наименование) тогда
						
						ИмяВременногоФайла = "";
						ФайлИзВложения 	= ПолучитьXMLФайлИзВложения(ВложениеИзПисьма, ИмяВременногоФайла);
						
						СтрокаВх   			= Входящие.Добавить();
						СтрокаВх.Тема  		= КонвертЭП.Тема;
						СтрокаВх.КонвертЭП 	= КонвертЭП;
						СтрокаВх.Картинка 	= 0;
						
						ОбъектЗагрузки 	= НайтиОбъектДляЗагрузки(ФайлИзВложения);
						Анкета 			= ПолучитьАнкетуИзФайла(ФайлИзВложения);
						Если ЗначениеНеЗаполнено(Анкета) тогда
							Продолжить;
						КонецЕсли;
						ДатаОпроса 		= ПолучитьДатуФормированияАнкеты(ФайлИзВложения);
						Если ОбъектЗагрузки = Неопределено тогда
							// если объект загрузки найти по ИдОпрашиваемого найти не удалось, тогда пробуем его найти
							// по ФИО и дате рождения, если это физлицо(конт. лицо), либо по ИНН, если это контрагент
							ФайлИзВложения.ОткрытьФайл(ИмяВременногоФайла);
							ОбъектЗагрузки = НайтиОбъектПоАнкетнымДанным(ФайлИзВложения, Анкета);
						КонецЕсли;
						СтрокаВх.Анкета  	= Анкета;
						// ищем документ опрос
						ДокОпрос = НайтиДокументОпрос(ДатаОпроса, Анкета);
						СтрокаВх.Опрос  	= ДокОпрос;
						Если ЗначениеНеЗаполнено(ОбъектЗагрузки) и НЕ ЗначениеНеЗаполнено(ДокОпрос) тогда
							ОбъектЗагрузки = ДокОпрос.ОпрашиваемоеЛицо;
						КонецЕсли;
						СтрокаВх.ОбъектЗагрузки = ОбъектЗагрузки;
						Если Анкета.ЗагружатьОбъекты тогда
							Если ЗначениеНеЗаполнено(ОбъектЗагрузки) тогда
								СтрокаВх.ЗагружатьВСправочник = Истина;
							КонецЕсли;
						Иначе
							Если ЗначениеНеЗаполнено(ДокОпрос) тогда
								СтрокаВх.ЗагружатьОпрос = Истина;
							КонецЕсли;
						КонецЕсли;
						ФайлИзВложения.Закрыть();
					КонецЕсли;
				КонецЦикла;
			Иначе
				// письма без вложений нас не интересуют
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Почта.Отключиться();
	Иначе
		// встроенный почтовый клиент
		ЗапросПоЭлПисьмам = Новый Запрос;
		ЗапросПоЭлПисьмам.УстановитьПараметр("Полученное", 		Перечисления.СтатусыПисем.Полученное);
		ЗапросПоЭлПисьмам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                          |	ВложенияЭлектронныхПисем.Объект,
		                          |	ВложенияЭлектронныхПисем.Хранилище,
		                          |	ВложенияЭлектронныхПисем.Объект.Тема КАК Тема,
		                          |	ВложенияЭлектронныхПисем.ИмяФайла,
		                          |	ВложенияЭлектронныхПисем.Объект.ТекстПисьма КАК Текст,
		                          |	ВложенияЭлектронныхПисем.Объект.НеРассмотрено КАК Непрочтено
		                          |ИЗ
		                          |	Справочник.ВложенияЭлектронныхПисем КАК ВложенияЭлектронныхПисем
		                          |
		                          |ГДЕ
		                          |	(ВложенияЭлектронныхПисем.ИДФайлаПочтовогоПисьма = """") И
		                          |	(ВложенияЭлектронныхПисем.Объект.СтатусПисьма = &Полученное) И
		                          |	(ВложенияЭлектронныхПисем.Объект.Ссылка ССЫЛКА Документ.ЭлектронноеПисьмо) И
		                          |	((ВложенияЭлектронныхПисем.ИмяФайла ПОДОБНО ""%.rps"") ИЛИ (ВложенияЭлектронныхПисем.ИмяФайла ПОДОБНО ""%.xml""))" +
							?(ТолькоНепрочитанные, "
							|	И
		                    |	ВложенияЭлектронныхПисем.Объект.НеРассмотрено = ИСТИНА", "");
		РезЗапроса 		= ЗапросПоЭлПисьмам.Выполнить();
		ВыборкаПисем	= РезЗапроса.Выбрать();
		Пока ВыборкаПисем.Следующий() Цикл
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
			ФайлИзВложения	= Новый ЧтениеXML();
			ВыборкаПисем.Хранилище.Получить().Записать(ИмяВременногоФайла);
			ФайлИзВложения.ОткрытьФайл(ИмяВременногоФайла);
			ОбъектЗагрузки 	= НайтиОбъектДляЗагрузки(ФайлИзВложения);
			Анкета 			= ПолучитьАнкетуИзФайла(ФайлИзВложения);
			Если ЗначениеНеЗаполнено(Анкета) тогда
				Продолжить;
			КонецЕсли;
			Если ПоАнкете И Анкета <> АнкетаОтбора тогда
				Продолжить;
			КонецЕСли;
			ДатаОпроса 		= ПолучитьДатуФормированияАнкеты(ФайлИзВложения);
			
			СтрокаВх   		= Входящие.Добавить();
			СтрокаВх.Тема  	= ВыборкаПисем.Тема;
			КонвертЭП = Новый Структура("Текст,Вложения,Непрочтено");
			КонвертЭП.Текст 		= ВыборкаПисем.Текст;
			КонвертЭП.Непрочтено 	= ВыборкаПисем.Непрочтено;
			ВложенияМассив = Новый Массив;
			ВложениеСтруктура = Новый Структура("Наименование, Данные");
			ВложениеСтруктура.Наименование 	= ВыборкаПисем.ИмяФайла;
			ВложениеСтруктура.Данные		= ВыборкаПисем.Хранилище.Получить();
			ВложенияМассив.Добавить(ВложениеСтруктура);
			КонвертЭП.Вложения    			= ВложенияМассив;
			
			СтрокаВх.КонвертЭП 	= КонвертЭП;
			СтрокаВх.Картинка 	= 0;
			Если ОбъектЗагрузки = Неопределено тогда
				// если объект загрузки найти по ИдОпрашиваемого найти не удалось, тогда пробуем его найти
				// по ФИО и дате рождения, если это физлицо(конт. лицо), либо по ИНН, если это контрагент
				ФайлИзВложения.ОткрытьФайл(ИмяВременногоФайла);
				ОбъектЗагрузки = НайтиОбъектПоАнкетнымДанным(ФайлИзВложения, Анкета);
			КонецЕсли;
			СтрокаВх.Анкета  	= Анкета;
			// ищем документ опрос
			ДокОпрос = НайтиДокументОпрос(ДатаОпроса, Анкета);
			СтрокаВх.Опрос  	= ДокОпрос;
			Если ЗначениеНеЗаполнено(ОбъектЗагрузки) и НЕ ЗначениеНеЗаполнено(ДокОпрос) тогда
				ОбъектЗагрузки = ДокОпрос.ОпрашиваемоеЛицо;
			КонецЕсли;
			СтрокаВх.ОбъектЗагрузки = ОбъектЗагрузки;
			Если Анкета.ЗагружатьОбъекты тогда
				Если ЗначениеНеЗаполнено(ОбъектЗагрузки) тогда
					СтрокаВх.ЗагружатьВСправочник = Истина;
				КонецЕсли;
			Иначе
				Если ЗначениеНеЗаполнено(ДокОпрос) тогда
					СтрокаВх.ЗагружатьОпрос = Истина;
				КонецЕсли;
			КонецЕсли;
			ФайлИзВложения.Закрыть();
			//УдалитьФайлы(КаталогВременныхФайлов(), Прав(ИмяВременногоФайла, СтрДлина(ИмяВременногоФайла) - СтрДлина(КаталогВременныхФайлов())));
			Попытка
				УдалитьФайлы(ИмяВременногоФайла);
			Исключение
			КонецПопытки;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОбновить(Элемент)
	ЗаполнитьТабличноеПолеВходящие();
КонецПроцедуры

Процедура ОсновныеДействияФормыДействие0(Элемент)
	
	ЗагрузитьОпросы(Входящие);

КонецПроцедуры

Процедура ОсновныеДействияФормыДействие1(Элемент)

	Если ДеревоАнкет.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Корень = ДеревоАнкет.Строки[0];
	//ВсегоОпросов = Корень.Строки.Итог("ФлагЗагрузки", Истина);

	НачатьТранзакцию();
		ЗагрузитьОпросы(Корень);
	ЗафиксироватьТранзакцию();

КонецПроцедуры

Процедура КоманднаяПанельДереваАнкетПредПросмотр(Кнопка)

	Кнопка.Пометка    = Не Кнопка.Пометка;
	СмотретьПриВыборе = Кнопка.Пометка;

КонецПроцедуры

Процедура ЗаполнитьДеревоПоФайлам()

	Если ДеревоАнкет.Строки.Количество() > 0 Тогда
		Вопрос = "Существующее дерево файлов будет очищено. Продолжить?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДеревоАнкет.Строки.Очистить();

	Корень = ДеревоАнкет.Строки.Добавить();
	Корень["ИмяФайла"]     = ИмяКаталога;
	Корень["ФлагУдаления"] = "Каталог";

	ПоискФайлов(ИмяКаталога, Корень, ИскатьВПодКаталогах, ФайлыПоАнкете, АнкетаОтбораФайлы);
	
КонецПроцедуры

Процедура КоманднаяПанельДереваАнкетЗаполнить(Кнопка)
	
	ЗаполнитьДеревоПоФайлам();
	
КонецПроцедуры

Процедура КоманднаяПанельДереваАнкетВыбратьВсе(Кнопка)

	Если ДеревоАнкет.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Корень = ДеревоАнкет.Строки[0];

	УстановитьФлажки(Корень, 1);

КонецПроцедуры

Процедура КоманднаяПанельДереваАнкетСнятьВсе(Кнопка)

	Если ДеревоАнкет.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Корень = ДеревоАнкет.Строки[0];

	УстановитьФлажки(Корень, 0);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Процедура - обработчик события "ПриВыводеСтроки".
//
Процедура ВходящиеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.КонвертЭП.Непрочтено тогда
		ОформлениеСтроки.Шрифт = ЖирныйШрифт;
	КонецЕсли;
	ОформлениеСтроки.Ячейки.ОбъектЗагрузки.ОтображатьФлажок = Истина;
	ОформлениеСтроки.Ячейки.Опрос.ОтображатьФлажок   		= Истина;
	
КонецПроцедуры

Процедура ВходящиеПриАктивизацииСтроки(Элемент)
	
	Вложения.Очистить();
	Если Элемент.ТекущаяСтрока <> Неопределено тогда
		ЭлементыФормы.ПредПросмотр.УстановитьТекст(Элемент.ТекущаяСтрока.КонвертЭП.Текст);

		Для	каждого ВложениеПисьма	из	Элемент.ТекущаяСтрока.КонвертЭП.Вложения	Цикл
			НовоеВложение			= Вложения.Добавить();
			НовоеВложение.Вложение	= ВложениеПисьма.Наименование;
			НовоеВложение.Данные	= ВложениеПисьма.Данные;
		КонецЦикла;
	Иначе
		ЭлементыФормы.ПредПросмотр.УстановитьТекст("");
	КонецЕсли;
	
КонецПроцедуры

Процедура ВложенияПриАктивизацииСтроки(Элемент)

	ОбновитьОтображениеXMLФайла();
	
КонецПроцедуры

Процедура ИмяКаталогаНачалоВыбора(Элемент, СтандартнаяОбработка)

	ДиалогФыбораФайла                         = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);

	ДиалогФыбораФайла.Заголовок               = "Выберите каталог с файлами опросов";
	ДиалогФыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогФыбораФайла.ПолноеИмяФайла          = Элемент.Значение;

	Если ДиалогФыбораФайла.Выбрать() Тогда
		Элемент.Значение = ДиалогФыбораФайла.Каталог;
	КонецЕсли;

КонецПроцедуры

Процедура ДеревоПриАктивизацииСтроки(Элемент)

	ОбновитьОтображениеXMLФайлаИзКаталога();

КонецПроцедуры

Процедура ДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)

	Отказ = Истина;

КонецПроцедуры

Процедура ДеревоПередУдалением(Элемент, Отказ)

	Отказ = Истина;

	Если Элемент.ТекущаяСтрока.ФлагУдаления = "Каталог" Тогда
		Возврат;
	КонецЕсли;

	Элемент.ТекущаяСтрока.ФлагУдаления = НЕ Элемент.ТекущаяСтрока.ФлагУдаления;

КонецПроцедуры

Процедура ДеревоПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если (ДанныеСтроки.Родитель = Неопределено) ИЛИ (ДанныеСтроки.ФлагУдаления = "Каталог") Тогда
		ОформлениеСтроки.Ячейки.ИмяФайла.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.ИмяФайла.ИндексКартинки     = 2;
		ОформлениеСтроки.Ячейки.ОбъектЗагрузки.ОтображатьФлажок = Ложь;
		ОформлениеСтроки.Ячейки.Опрос.ОтображатьФлажок   		= Ложь;
	Иначе
		ОформлениеСтроки.Ячейки.ОбъектЗагрузки.ОтображатьФлажок = Истина;
		ОформлениеСтроки.Ячейки.Опрос.ОтображатьФлажок   		= Истина;
		ОформлениеСтроки.Ячейки.ИмяФайла.ОтображатьКартинку = Истина;
		Индекс = ?(ДанныеСтроки.ФлагУдаления, 0, 1);
		ОформлениеСтроки.Ячейки.ИмяФайла.ИндексКартинки     = Индекс;
	КонецЕсли;

КонецПроцедуры

Процедура ТабличноеПолеПриАктивизацииСтроки(Элемент)

	тИнформСтрока = "";
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		тИнформСтрока = тИнформСтрока + "
		|Документ : "+Элемент.ТекущаяСтрока.Опрос + "; "
	КонецЕсли;

КонецПроцедуры

Процедура ТабличноеПолеРезультатыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если (НЕ ЗначениеНеЗаполнено(ДанныеСтроки.Физлицо)) тогда
		ОформлениеСтроки.ЦветФона = ЦветаСтиля.ЦветФонаФормы;
	Иначе	
		ОформлениеСтроки.ЦветФона = Новый Цвет();
	КонецЕсли;	 
	
КонецПроцедуры

Процедура ТабличноеПолеРезультатыПриИзмененииФлажка(Элемент, Колонка)
	
	УстанавливаемоеЗначение	=	Элемент.ТекущиеДанные.ЗаписатьФизлицоВДокумент;
	ПараметрыПоиска	=	Новый	Структура("Опрос");
	ПараметрыПоиска.Опрос	=	Элемент.ТекущиеДанные.Опрос;
	МассивСтрок	=	Элемент.Значение.НайтиСтроки(ПараметрыПоиска);
	Для каждого СтрокаТаблицы	из	МассивСтрок	Цикл
		СтрокаТаблицы.ЗаписатьФизлицоВДокумент	=	УстанавливаемоеЗначение;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1ВыбратьВсе1(Кнопка)
	
	Если ЭлементыФормы.Входящие.ТекущаяКолонка = ЭлементыФормы.Входящие.Колонки.ОбъектЗагрузки или
		 ЭлементыФормы.Входящие.ТекущаяКолонка = ЭлементыФормы.Входящие.Колонки.Опрос тогда
		Если ЭлементыФормы.Входящие.ТекущаяКолонка = ЭлементыФормы.Входящие.Колонки.ОбъектЗагрузки тогда
			 ИмяКолонки = ЭлементыФормы.Входящие.Значение.Колонки.ЗагружатьВСправочник.Имя;
		Иначе
			 ИмяКолонки = ЭлементыФормы.Входящие.Значение.Колонки.ЗагружатьОпрос.Имя;
		КонецЕсли;
		Входящие.ЗаполнитьЗначения(Истина, ИмяКолонки);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1СнятьВсе1(Кнопка)
	
	Если ЭлементыФормы.Входящие.ТекущаяКолонка = ЭлементыФормы.Входящие.Колонки.ОбъектЗагрузки или
		 ЭлементыФормы.Входящие.ТекущаяКолонка = ЭлементыФормы.Входящие.Колонки.Опрос тогда
		Если ЭлементыФормы.Входящие.ТекущаяКолонка = ЭлементыФормы.Входящие.Колонки.ОбъектЗагрузки тогда
			 ИмяКолонки = ЭлементыФормы.Входящие.Значение.Колонки.ЗагружатьВСправочник.Имя;
		Иначе
			 ИмяКолонки = ЭлементыФормы.Входящие.Значение.Колонки.ЗагружатьОпрос.Имя;
		КонецЕсли;
		Входящие.ЗаполнитьЗначения(Ложь, ИмяКолонки);
	КонецЕсли;

КонецПроцедуры

Процедура ПредПросмотрonclick(Элемент, pEvtObj)
	
	ОбработкаСобытияOnClickПоляHTML(глТекущийПользователь, Элемент, pEvtObj,,, ЭтаФорма);
		
КонецПроцедуры

Процедура ПолеВвода1ПриИзменении(Элемент)
	
	ЗаполнитьТабличноеПолеВходящие();
	
КонецПроцедуры

Процедура ПоАнкетеПриИзменении(Элемент)
	ЗаполнитьТабличноеПолеВходящие();
КонецПроцедуры

Процедура ФайлыПоАнкетеПриИзменении(Элемент)
	
	ЗаполнитьДеревоПоФайлам();
	
КонецПроцедуры

Процедура АнкетаОтбораФайлыПриИзменении(Элемент)
	
	ЗаполнитьДеревоПоФайлам();
	
КонецПроцедуры

Процедура ОбновитьОтображениеXMLФайла();
	
	Если ЭлементыФормы.КоманднаяПанель2.Кнопки.HTML.Пометка тогда
		ЭлементыФормы.ПолеОтветов.Видимость 			= Ложь;
		ЭлементыФормы.ПолеHTMLДокументаПисьма.Видимость = Истина;
		ПолноеИмя	=	КаталогВременныхФайлов()	+	"tmpopr.xml";
		Если ЭлементыФормы.Вложения.ТекущаяСтрока <> Неопределено тогда
			ЭлементыФормы.Вложения.ТекущаяСтрока.Данные.Записать(ПолноеИмя);
		КонецЕсли;
		ТекстXML = Новый ТекстовыйДокумент();
		ТекстXML.Прочитать(ПолноеИмя);
		СтрокаXML = ТекстXML.ПолучитьТекст();
		
		ТекстXSL = Новый ТекстовыйДокумент();
		XSLМакет = Справочники.ТиповыеАнкеты.ПолучитьМакет("XSLМакет");
		ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
		ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		ФайлXSL = Новый ТекстовыйДокумент();
		ФайлXSL.УстановитьТекст(СтрокаПреобразования);
		ФайлXSL.Записать(КаталогВременныхФайлов()	+	"style.xsl");
		ЭлементыФормы.ПолеHTMLДокументаПисьма.Перейти(ПолноеИмя);
	Иначе
		ЭлементыФормы.ПолеОтветов.Видимость 			= Истина;
		ЭлементыФормы.ПолеHTMLДокументаПисьма.Видимость = Ложь;
	    СписокОтветов.Очистить();
		ПолноеИмя	=	КаталогВременныхФайлов()	+	"tmpopr.xml";
		Если ЭлементыФормы.Вложения.ТекущаяСтрока <> Неопределено тогда
			ЭлементыФормы.Вложения.ТекущаяСтрока.Данные.Записать(ПолноеИмя);
			ПрочитатьФайл(ПолноеИмя, СписокОтветов);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьОтображениеXMLФайлаИзКаталога();
	
	Если ЭлементыФормы.КоманднаяОтветов.Кнопки.HTML.Пометка тогда
		ЭлементыФормы.ПолеОтветовИзКаталога.Видимость 		= Ложь;
		ЭлементыФормы.ПолеHTMLДокументаИзКаталога.Видимость = Истина;
		Если ЭлементыФормы.Дерево.ТекущаяСтрока <> Неопределено И 
			 ЭлементыФормы.Дерево.ТекущаяСтрока.Родитель <> Неопределено И
			 Прав(ЭлементыФормы.Дерево.ТекущаяСтрока.ИмяФайла, 3) = "xml" тогда
			Каталог		= ЭлементыФормы.Дерево.ТекущаяСтрока.Родитель.ИмяФайла;
			ПолноеИмя	= Каталог + "\" + ЭлементыФормы.Дерево.ТекущаяСтрока.ИмяФайла;
			
			ТекстXSL = Новый ТекстовыйДокумент();
			XSLМакет = Справочники.ТиповыеАнкеты.ПолучитьМакет("XSLМакет");
			ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
			ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
			ФайлXSL = Новый ТекстовыйДокумент();
			ФайлXSL.УстановитьТекст(СтрокаПреобразования);
			ФайлXSL.Записать(Каталог + "\" + "style.xsl");
			ЭлементыФормы.ПолеHTMLДокументаИзКаталога.Перейти(ПолноеИмя);
		Иначе
			ЭлементыФормы.ПолеHTMLДокументаИзКаталога.Перейти("about:blank");
		КонецЕсли;
	Иначе
		Если НЕ СмотретьПриВыборе Тогда
			Возврат;
		КонецЕсли;

		ЭлементыФормы.ПолеОтветовИзКаталога.Видимость 		= Истина;
		ЭлементыФормы.ПолеHTMLДокументаИзКаталога.Видимость = Ложь;
		
		СписокОтветовФ.Очистить();

		Если ЭлементыФормы.Дерево.ТекущаяСтрока.ФлагУдаления = "Каталог" Тогда
			Возврат;
		КонецЕсли;

		ИмяФайла = ЭлементыФормы.Дерево.ТекущаяСтрока.ИмяФайла;
		Каталог  = ЭлементыФормы.Дерево.ТекущаяСтрока.Родитель.ИмяФайла;
		Файл     = Новый Файл(Каталог + "\" + ИмяФайла);

		Если НЕ Файл.Существует() Тогда 
			Возврат;
		КонецЕсли;

		ПрочитатьФайл(Файл.ПолноеИмя, СписокОтветовФ);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель2HTML(Кнопка)
	
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	ОбновитьОтображениеXMLФайла();

КонецПроцедуры

Процедура КоманднаяОтветовHTML(Кнопка)
	
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	ОбновитьОтображениеXMLФайлаИзКаталога();
	
КонецПроцедуры

ЖирныйШрифт       = Новый Шрифт(ЭлементыФормы.Входящие.Шрифт, , ,Истина);
СмотретьПриВыборе = Истина;
