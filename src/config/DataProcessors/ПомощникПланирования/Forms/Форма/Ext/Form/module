Перем мВосстановленыЗначения;

Процедура ПриОткрытии()
	
	Если мДокумент <> Неопределено Тогда
		
		ЭлементыФормы.Панель.Страницы.КонечныеПланы.Видимость = Ложь;
		ЭлементыФормы.Панель.Страницы.СформированныеДокументы.Видимость = Ложь;
		
		Заголовок = Заголовок + " (" + Строка(мДокумент) + ")";
		
		Если ЕстьРеквизитДокумента("НастройкиПомощникаПланирования", мДокумент.Метаданные()) Тогда
			
			НастройкиПомощникаПланирования = мДокумент.НастройкиПомощникаПланирования.Получить();
			
			Если ТипЗнч(НастройкиПомощникаПланирования) = Тип("Структура") Тогда
				
				ВосстановитьНастройкиИзСтруктуры(НастройкиПомощникаПланирования);
				мВосстановленыЗначения = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИнициализацияТиповОбъектовУправления();
	
	Если мВосстановленыЗначения <> Истина Тогда
		
		УстановитьНачальныеЗначения();
		
		мИспользоватьСвойстваИКатегории = ИспользоватьСвойстваИКатегории;
		НастроитьПостроитель(ПостроительОтчета);
		
	КонецЕсли;
	
	// Стратегия расчета количества
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокОбъемЗакупок);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокПланыЗакупок);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокОбъемПродаж);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокПланыПродаж);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокЗаказыПоставщикам);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокЗаказыПокупателей);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокВнутренниеЗаказы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокВнутренниеЗаказы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокСкладскиеОстатки);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокПлановыеОстатки);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокИзменитьРезультатРасчетаКоличества);
	
	// Стратегия расчета суммы
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораОбъемЗакупокСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораПланыЗакупокСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораОбъемПродажСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораПланыПродажСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораЗаказыПоставщикамСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораЗаказыПокупателейСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораВнутренниеЗаказыСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораВнутренниеЗаказыСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораСкладскиеОстаткиСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ПолеВыбораПлановыеОстаткиСтратегияРасчетаСуммы);
	УправлениеДоступностьюЭлементовУправления(ЭлементыФормы.ФлажокИзменитьРезультатРасчетаСуммы);
	
	// Отборы
	УправлениеДоступностьюОтборов();
	
	ЭлементыФормы.КоманднаяПанельКонечныеПланы.Кнопки.РежимВыбораДатПериодом.Пометка = РежимВыбораДатПериодом;
	
	ВидимостьРеквизитаПроект(, ЭлементыФормы, "КонечныеПланы.Проект");
	
КонецПроцедуры // ПриОткрытии()

Процедура КнопкаВыполнитьНажатие(Элемент)
	
	УстановитьЭкспортныеПеременные();
	
	УстановитьПараметрыПостроителя(ПостроительОтчета);
	
	ПостроительОтчета.Выполнить();
	
	Результат = ПостроительОтчета.Результат.Выгрузить(ОбходРезультатаЗапроса.Прямой);
	
	Если мДокумент <> Неопределено Тогда
		
		КонечныеПланы.Очистить();
		
		НовыйКонечныйПлан = КонечныеПланы.Добавить();
		Если ТипЗнч(мДокумент) = Тип("ДокументОбъект.ПланЗакупок") Тогда
			
			НовыйКонечныйПлан.ВидПлана = Перечисления.ВидыПланирования.Закупки;
			
		ИначеЕсли ТипЗнч(мДокумент) = Тип("ДокументОбъект.ПланПродаж") Тогда
			
			НовыйКонечныйПлан.ВидПлана = Перечисления.ВидыПланирования.Продажи;
			
		КонецЕсли;
		НовыйКонечныйПлан.Сценарий = мДокумент.Сценарий;
		НовыйКонечныйПлан.ДатаНач = мДокумент.ДатаПланирования;
		НовыйКонечныйПлан.ДатаКон = мДокумент.ДатаПланирования;
		
		ВыровнятьДатуПоКонцуПериода(НовыйКонечныйПлан.ДатаКон, мДокумент.Сценарий.Периодичность);
		
	КонецЕсли;
	
	Если ВыполнитьОбработку(Результат) И мДокумент <> Неопределено Тогда
		
		Если ЕстьРеквизитДокумента("НастройкиПомощникаПланирования", мДокумент.Метаданные()) Тогда
			
			мДокумент.НастройкиПомощникаПланирования = Новый ХранилищеЗначения(СформироватьСтруктуруДляСохраненияНастроек(), Новый СжатиеДанных(9));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // КнопкаВыполнитьНажатие()

Процедура ФлажокПриИзменении(Элемент)
	
	УправлениеДоступностьюЭлементовУправления(Элемент);
	УправлениеДоступностьюОтборов();
	
КонецПроцедуры // ФлажокПриИзменении()

Процедура УправлениеДоступностьюЭлементовУправления(Элемент)
	
	ИмяЭлемента = Элемент.Имя;
	
	ДоступностьЭлементов = Элемент.Значение;
	
	// Стратегия расчета количества
	Если      ИмяЭлемента = "ФлажокОбъемЗакупок" Тогда
		
		ЭлементыФормы.ПолеВводаОбъемЗакупокПроцент.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаОбъемЗакупокДатаНач.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаОбъемЗакупокДатаКон.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьОбъемЗакупокНаПериодС.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьОбъемЗакупокПо.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаОбъемЗакупок.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ФлажокОбъемЗакупокИсключить.Доступность = ДоступностьЭлементов;
		
		ЭлементыФормы.НадписьОбъемЗакупок.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВыбораОбъемЗакупокСтратегияРасчетаСуммы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаОбъемЗакупокТипЦен.Доступность = ДоступностьЭлементов И (ОбъемЗакупокСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВводаОбъемЗакупокСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов И (ОбъемЗакупокСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.НадписьОбъемЗакупокСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов И (ОбъемЗакупокСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВыбораОбъемЗакупокФункция.Доступность = ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента = "ФлажокПланыЗакупок" Тогда
		
		ЭлементыФормы.ПолеВводаПланыЗакупокПроцент.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаПланыЗакупокДатаНач.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаПланыЗакупокДатаКон.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьПланыЗакупокНаПериодС.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьПланыЗакупокПо.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаПланыЗакупок.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ФлажокПланыЗакупокИсключить.Доступность = ДоступностьЭлементов;
		
		ЭлементыФормы.НадписьПланыЗакупок.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВыбораПланыЗакупокСтратегияРасчетаСуммы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаПланыЗакупокТипЦен.Доступность = ДоступностьЭлементов И (ПланыЗакупокСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВводаПланыЗакупокСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов И (ПланыЗакупокСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.НадписьПланыЗакупокСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов И (ПланыЗакупокСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВыбораПланыЗакупокФункция.Доступность = ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента = "ФлажокОбъемПродаж" Тогда
		
		ЭлементыФормы.ПолеВводаОбъемПродажПроцент.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаОбъемПродажДатаНач.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаОбъемПродажДатаКон.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьОбъемПродажНаПериодС.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьОбъемПродажПо.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаОбъемПродаж.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ФлажокОбъемПродажИсключить.Доступность = ДоступностьЭлементов;
		
		ЭлементыФормы.НадписьОбъемПродаж.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВыбораОбъемПродажСтратегияРасчетаСуммы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаОбъемПродажТипЦен.Доступность = ДоступностьЭлементов И (ОбъемПродажСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВводаОбъемПродажСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов И (ОбъемПродажСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.НадписьОбъемПродажСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов И (ОбъемПродажСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВыбораОбъемПродажФункция.Доступность = ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента = "ФлажокПланыПродаж" Тогда
		
		ЭлементыФормы.ПолеВводаПланыПродажПроцент.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаПланыПродажДатаНач.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаПланыПродажДатаКон.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьПланыПродажНаПериодС.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьПланыПродажПо.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаПланыПродаж.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ФлажокПланыПродажИсключить.Доступность = ДоступностьЭлементов;
		
		ЭлементыФормы.НадписьПланыПродаж.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВыбораПланыПродажСтратегияРасчетаСуммы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаПланыПродажТипЦен.Доступность = ДоступностьЭлементов И (ПланыПродажСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВводаПланыПродажСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов И (ПланыПродажСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.НадписьПланыПродажСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов И (ПланыПродажСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВыбораПланыПродажФункция.Доступность = ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента = "ФлажокЗаказыПоставщикам" Тогда
		
		ЭлементыФормы.ПолеВводаЗаказыПоставщикамПроцент.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаЗаказыПоставщикамДатаНач.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаЗаказыПоставщикамДатаКон.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьЗаказыПоставщикамНаПериодС.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьЗаказыПоставщикамПо.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаЗаказыПоставщикам.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ФлажокЗаказыПоставщикамИсключить.Доступность = ДоступностьЭлементов;
		
		ЭлементыФормы.НадписьЗаказыПоставщикам.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВыбораЗаказыПоставщикамСтратегияРасчетаСуммы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаЗаказыПоставщикамТипЦен.Доступность = ДоступностьЭлементов И (ЗаказыПоставщикамСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВводаЗаказыПоставщикамСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов И (ЗаказыПоставщикамСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.НадписьЗаказыПоставщикамСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов И (ЗаказыПоставщикамСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВыбораЗаказыПоставщикамФункция.Доступность = ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента = "ФлажокЗаказыПокупателей" Тогда
		
		ЭлементыФормы.ПолеВводаЗаказыПокупателейПроцент.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаЗаказыПокупателейДатаНач.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаЗаказыПокупателейДатаКон.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьЗаказыПокупателейНаПериодС.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьЗаказыПокупателейПо.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаЗаказыПокупателей.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ФлажокЗаказыПокупателейИсключить.Доступность = ДоступностьЭлементов;
		
		ЭлементыФормы.НадписьЗаказыПокупателей.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВыбораЗаказыПокупателейСтратегияРасчетаСуммы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаЗаказыПокупателейТипЦен.Доступность = ДоступностьЭлементов И (ЗаказыПокупателейСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВводаЗаказыПокупателейСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов И (ЗаказыПокупателейСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.НадписьЗаказыПокупателейСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов И (ЗаказыПокупателейСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВыбораЗаказыПокупателейФункция.Доступность = ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента = "ФлажокВнутренниеЗаказы" Тогда
		
		ЭлементыФормы.ПолеВводаВнутренниеЗаказыПроцент.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаВнутренниеЗаказыДатаНач.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаВнутренниеЗаказыДатаКон.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьВнутренниеЗаказыНаПериодС.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьВнутренниеЗаказыПо.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.КнопкаНастройкаПериодаВнутренниеЗаказы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ФлажокВнутренниеЗаказыИсключить.Доступность = ДоступностьЭлементов;
		
		ЭлементыФормы.НадписьВнутренниеЗаказы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВыбораВнутренниеЗаказыСтратегияРасчетаСуммы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаВнутренниеЗаказыТипЦен.Доступность = ДоступностьЭлементов И (ВнутренниеЗаказыСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВводаВнутренниеЗаказыСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов И (ВнутренниеЗаказыСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.НадписьВнутренниеЗаказыСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов И (ВнутренниеЗаказыСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВыбораВнутренниеЗаказыФункция.Доступность = ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента = "ФлажокСкладскиеОстатки" Тогда
		
		ЭлементыФормы.ПолеВводаСкладскиеОстаткиПроцент.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаСкладскиеОстаткиДата.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьСкладскиеОстаткиНаДату.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ФлажокСкладскиеОстаткиИсключить.Доступность = ДоступностьЭлементов;
		
		ЭлементыФормы.НадписьСкладскиеОстатки.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВыбораСкладскиеОстаткиСтратегияРасчетаСуммы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаСкладскиеОстаткиТипЦен.Доступность = ДоступностьЭлементов И (СкладскиеОстаткиСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВводаСкладскиеОстаткиСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов И (СкладскиеОстаткиСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.НадписьСкладскиеОстаткиСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов И (СкладскиеОстаткиСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВыбораСкладскиеОстаткиФункция.Доступность = ДоступностьЭлементов;
		
	ИначеЕсли ИмяЭлемента = "ФлажокПлановыеОстатки" Тогда
		
		ЭлементыФормы.ПолеВводаПлановыеОстаткиПроцент.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаПлановыеОстаткиСценарий.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.НадписьПлановыеОстаткиПоСценарию.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ФлажокПлановыеОстаткиИсключить.Доступность = ДоступностьЭлементов;
		
		ЭлементыФормы.НадписьПлановыеОстатки.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВыбораПлановыеОстаткиСтратегияРасчетаСуммы.Доступность = ДоступностьЭлементов;
		ЭлементыФормы.ПолеВводаПлановыеОстаткиТипЦен.Доступность = ДоступностьЭлементов И (ПлановыеОстаткиСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВводаПлановыеОстаткиСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов И (ПлановыеОстаткиСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.НадписьПлановыеОстаткиСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов И (ПлановыеОстаткиСтратегияРасчетаСуммы - 1);
		ЭлементыФормы.ПолеВыбораПлановыеОстаткиФункция.Доступность = ДоступностьЭлементов;
	
	ИначеЕсли ИмяЭлемента = "ФлажокИзменитьРезультатРасчетаКоличества" Тогда
		
		ЭлементыФормы.ПолеВводаИзменитьРезультатРасчетаКоличестваПроцент.Доступность = ДоступностьЭлементов;
		
	// Стратегия расчета суммы
	ИначеЕсли ИмяЭлемента = "ПолеВыбораОбъемЗакупокСтратегияРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаОбъемЗакупокТипЦен.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.ПолеВводаОбъемЗакупокСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.НадписьОбъемЗакупокСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов - 1;
		
	ИначеЕсли ИмяЭлемента = "ПолеВыбораПланыЗакупокСтратегияРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаПланыЗакупокТипЦен.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.ПолеВводаПланыЗакупокСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.НадписьПланыЗакупокСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов - 1;
		
	ИначеЕсли ИмяЭлемента = "ПолеВыбораОбъемПродажСтратегияРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаОбъемПродажТипЦен.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.ПолеВводаОбъемПродажСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.НадписьОбъемПродажСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов - 1;
		
	ИначеЕсли ИмяЭлемента = "ПолеВыбораПланыПродажСтратегияРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаПланыПродажТипЦен.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.ПолеВводаПланыПродажСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.НадписьПланыПродажСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов - 1;
		
	ИначеЕсли ИмяЭлемента = "ПолеВыбораЗаказыПоставщикамСтратегияРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаЗаказыПоставщикамТипЦен.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.ПолеВводаЗаказыПоставщикамСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.НадписьЗаказыПоставщикамСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов - 1;
		
	ИначеЕсли ИмяЭлемента = "ПолеВыбораЗаказыПокупателейСтратегияРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаЗаказыПокупателейТипЦен.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.ПолеВводаЗаказыПокупателейСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.НадписьЗаказыПокупателейСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов - 1;
		
	ИначеЕсли ИмяЭлемента = "ПолеВыбораВнутренниеЗаказыСтратегияРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаВнутренниеЗаказыТипЦен.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.ПолеВводаВнутренниеЗаказыСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.НадписьВнутренниеЗаказыСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов - 1;
		
	ИначеЕсли ИмяЭлемента = "ПолеВыбораСкладскиеОстаткиСтратегияРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаСкладскиеОстаткиТипЦен.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.ПолеВводаСкладскиеОстаткиСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.НадписьСкладскиеОстаткиСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов - 1;
		
	ИначеЕсли ИмяЭлемента = "ПолеВыбораПлановыеОстаткиСтратегияРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаПлановыеОстаткиТипЦен.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.ПолеВводаПлановыеОстаткиСтратегияРасчетаСуммыДата.Доступность = ДоступностьЭлементов - 1;
		ЭлементыФормы.НадписьПлановыеОстаткиСтратегияРасчетаСуммыНаДату.Доступность = ДоступностьЭлементов - 1;
		
	ИначеЕсли ИмяЭлемента = "ФлажокИзменитьРезультатРасчетаСуммы" Тогда
		
		ЭлементыФормы.ПолеВводаИзменитьРезультатРасчетаСуммыПроцент.Доступность = ДоступностьЭлементов;
		
	КонецЕсли;
	
КонецПроцедуры // УправлениеДоступностьюЭлементовУправления()

Процедура УправлениеДоступностьюОтборов()
	
	ДоступностьСвойствИКатегорий = ОбъемЗакупок ИЛИ ПланыЗакупок ИЛИ ОбъемПродаж ИЛИ ПланыПродаж ИЛИ ЗаказыПоставщикам ИЛИ ЗаказыПокупателей ИЛИ ВнутренниеЗаказы ИЛИ СкладскиеОстатки;
	
	Для каждого Поле из ПостроительОтчета.ДоступныеПоля Цикл
	
		Если Найти(Поле.Имя, "ОбъемЗакупок") > 0 Тогда
			
			Поле.Отбор = ОбъемЗакупок;
			
		ИначеЕсли Найти(Поле.Имя, "ПланыЗакупок") > 0 Тогда
			
			Поле.Отбор = ПланыЗакупок;
			
		ИначеЕсли Найти(Поле.Имя, "ОбъемПродаж") > 0 Тогда
			
			Поле.Отбор = ОбъемПродаж;
			
		ИначеЕсли Найти(Поле.Имя, "ПланыПродаж") > 0 Тогда
			
			Поле.Отбор = ПланыПродаж;
			
		ИначеЕсли Найти(Поле.Имя, "ЗаказыПоставщикам") > 0 Тогда
			
			Поле.Отбор = ЗаказыПоставщикам;
			
		ИначеЕсли Найти(Поле.Имя, "ЗаказыПокупателей") > 0 Тогда
			
			Поле.Отбор = ЗаказыПокупателей;
			
		ИначеЕсли Найти(Поле.Имя, "ВнутренниеЗаказы") > 0 Тогда
			
			Поле.Отбор = ВнутренниеЗаказы;
			
		ИначеЕсли Найти(Поле.Имя, "СкладскиеОстатки") > 0 Тогда
			
			Поле.Отбор = СкладскиеОстатки;

		Иначе
			
			Поле.Отбор = ДоступностьСвойствИКатегорий;
			
		КонецЕсли;
	
	
	КонецЦикла;
	
КонецПроцедуры // УправлениеДоступностьюОтборов()

Процедура ИнициализацияТиповОбъектовУправления()

	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.ТипыЦенНоменклатуры");

	Если ЭлементыФормы.ПолеВводаОбъемЗакупокТипЦен.Значение = Неопределено Тогда

		ЭлементыФормы.ПолеВводаОбъемЗакупокТипЦен.Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы.ПолеВводаОбъемЗакупокТипЦен.Значение);

	КонецЕсли;

	Если ЭлементыФормы.ПолеВводаПланыЗакупокТипЦен.Значение = Неопределено Тогда

		ЭлементыФормы.ПолеВводаПланыЗакупокТипЦен.Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы.ПолеВводаПланыЗакупокТипЦен.Значение);

	КонецЕсли;

	Если ЭлементыФормы.ПолеВводаПланыПродажТипЦен.Значение = Неопределено Тогда

		ЭлементыФормы.ПолеВводаОбъемПродажТипЦен.Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы.ПолеВводаОбъемПродажТипЦен.Значение);

	КонецЕсли;

	Если ЭлементыФормы.ПолеВводаПланыПродажТипЦен.Значение = Неопределено Тогда

		ЭлементыФормы.ПолеВводаПланыПродажТипЦен.Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы.ПолеВводаПланыПродажТипЦен.Значение);

	КонецЕсли;

	Если ЭлементыФормы.ПолеВводаЗаказыПоставщикамТипЦен.Значение = Неопределено Тогда

		ЭлементыФормы.ПолеВводаЗаказыПоставщикамТипЦен.Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы.ПолеВводаЗаказыПоставщикамТипЦен.Значение);

	КонецЕсли;

	Если ЭлементыФормы.ПолеВводаЗаказыПокупателейТипЦен.Значение = Неопределено Тогда

		ЭлементыФормы.ПолеВводаЗаказыПокупателейТипЦен.Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы.ПолеВводаЗаказыПокупателейТипЦен.Значение);

	КонецЕсли;
	
	Если ЭлементыФормы.ПолеВводаВнутренниеЗаказыТипЦен.Значение = Неопределено Тогда

		ЭлементыФормы.ПолеВводаВнутренниеЗаказыТипЦен.Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы.ПолеВводаВнутренниеЗаказыТипЦен.Значение);

	КонецЕсли;

	Если ЭлементыФормы.ПолеВводаСкладскиеОстаткиТипЦен.Значение = Неопределено Тогда

		ЭлементыФормы.ПолеВводаСкладскиеОстаткиТипЦен.Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы.ПолеВводаСкладскиеОстаткиТипЦен.Значение);

	КонецЕсли;

	Если ЭлементыФормы.ПолеВводаПлановыеОстаткиТипЦен.Значение = Неопределено Тогда

		ЭлементыФормы.ПолеВводаПлановыеОстаткиТипЦен.Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы.ПолеВводаПлановыеОстаткиТипЦен.Значение);

	КонецЕсли;

КонецПроцедуры // ИнициализацияТиповОбъектовУправления()

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	ИмяДатаНач = СтрЗаменить(Элемент.Имя, "КнопкаНастройкаПериода", "") + "ДатаНач";
	ИмяДатаКон = СтрЗаменить(Элемент.Имя, "КнопкаНастройкаПериода", "") + "ДатаКон";
	
	МассивВозврата = ВвестиПериод(ЭтаФорма[ИмяДатаНач], ЭтаФорма[ИмяДатаКон]);
	
	Если ТипЗнч(МассивВозврата) = Тип("Массив") Тогда
		
		ЭтаФорма[ИмяДатаНач] = МассивВозврата[0];
		ЭтаФорма[ИмяДатаКон] = МассивВозврата[1];
		
	КонецЕсли; 

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ПолеВыбораСтратегияРасчетаСуммыПриИзменении(Элемент)
	
	СтратегияРасчета = Элемент.Значение;
	
	ИмяТипЦен = СтрЗаменить(СтрЗаменить(Элемент.Имя, "ПолеВыбора", "ПолеВвода"), "СтратегияРасчетаСуммы", "ТипЦен");
	
	Если СтратегияРасчета = 1 Тогда // По стратегии расчета количества
		
		ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.ТипыЦенНоменклатуры");
		ЭлементыФормы[ИмяТипЦен].Значение = ОписаниеТипов.ПривестиЗначение();
		
	ИначеЕсли СтратегияРасчета = 2 Тогда // По типу цен компании
		
		ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.ТипыЦенНоменклатуры");
		ЭлементыФормы[ИмяТипЦен].Значение = ОписаниеТипов.ПривестиЗначение(ЭлементыФормы[ИмяТипЦен].Значение);
		
	КонецЕсли;
	
	УправлениеДоступностьюЭлементовУправления(Элемент);
	
КонецПроцедуры // ПолеВыбораСтратегияРасчетаСуммыПриИзменении()

Процедура ПолеВыбораСтратегияРасчетаСуммыОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПолеВыбораСтратегияРасчетаСуммыОчистка()

Процедура ПолеВыбораРезультатРасчетаКоличестваОкруглитьДоОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПолеВыбораРезультатРасчетаКоличестваОкруглитьДоОчистка()

Процедура ПолеВыбораРезультатРасчетаСуммыОкруглитьДоОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ПолеВыбораРезультатРасчетаСуммыОкруглитьДоОчистка()

Процедура ПолеВводаТипЦенНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтратегияРасчета = ЭлементыФормы[СтрЗаменить(СтрЗаменить(Элемент.Имя, "ПолеВвода", "ПолеВыбора"), "ТипЦен", "СтратегияРасчетаСуммы")].Значение;
	
	Если СтратегияРасчета = 3 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СписокВыбора = Новый СписокЗначений;
		СписокВыбора.Добавить("ТипыЦенНоменклатурыКонтрагентов", "Номенклатуры контрагентов");
		СписокВыбора.Добавить("ТипыЦенНоменклатуры", "Номенклатуры");

		ВыбранныйЭлемент = ВыбратьИзСписка(СписокВыбора, Элемент);

		Если ВыбранныйЭлемент = Неопределено Тогда
			
			Возврат;
			
		КонецЕсли;
		
		ФормаВыбора = Справочники[ВыбранныйЭлемент.Значение].ПолучитьФормуВыбора(, Элемент);
		ФормаВыбора.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры // ПолеВводаТипЦенНачалоВыбора()

Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = СформироватьСтруктуруДляСохраненияНастроек();
	
КонецПроцедуры // ПередСохранениемЗначений()

Процедура ПослеВосстановленияЗначений()
	
	Если мДокумент = Неопределено Тогда
		
		ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки);
		
		мВосстановленыЗначения = Истина;
		
		ПриОткрытии();
		
	КонецЕсли;
	
КонецПроцедуры // ПослеВосстановленияЗначений()

Функция СформироватьСтруктуруДляСохраненияНастроек()
	
	СтруктураНастроек = Новый Структура;
	
	// Конечные планы
	Если мДокумент = Неопределено Тогда
		
		СтруктураНастроек.Вставить("КонечныеПланы", КонечныеПланы.Выгрузить());
		
	КонецЕсли;
	
	// Стратегия расчета количества
	СтруктураНастроек.Вставить("ОбъемЗакупок", ОбъемЗакупок);
	СтруктураНастроек.Вставить("ПланыЗакупок", ПланыЗакупок);
	СтруктураНастроек.Вставить("ОбъемПродаж", ОбъемПродаж);
	СтруктураНастроек.Вставить("ПланыПродаж", ПланыПродаж);
	СтруктураНастроек.Вставить("ЗаказыПоставщикам", ЗаказыПоставщикам);
	СтруктураНастроек.Вставить("ЗаказыПокупателей", ЗаказыПокупателей);
	СтруктураНастроек.Вставить("ВнутренниеЗаказы", ВнутренниеЗаказы);
	СтруктураНастроек.Вставить("СкладскиеОстатки", СкладскиеОстатки);
	СтруктураНастроек.Вставить("ПлановыеОстатки", ПлановыеОстатки);
	
	СтруктураНастроек.Вставить("ОбъемЗакупокПроцент", ОбъемЗакупокПроцент);
	СтруктураНастроек.Вставить("ПланыЗакупокПроцент", ПланыЗакупокПроцент);
	СтруктураНастроек.Вставить("ОбъемПродажПроцент", ОбъемПродажПроцент);
	СтруктураНастроек.Вставить("ПланыПродажПроцент", ПланыПродажПроцент);
	СтруктураНастроек.Вставить("ЗаказыПоставщикамПроцент", ЗаказыПоставщикамПроцент);
	СтруктураНастроек.Вставить("ЗаказыПокупателейПроцент", ЗаказыПокупателейПроцент);
	СтруктураНастроек.Вставить("ВнутренниеЗаказыПроцент", ВнутренниеЗаказыПроцент);
	СтруктураНастроек.Вставить("СкладскиеОстаткиПроцент", СкладскиеОстаткиПроцент);
	СтруктураНастроек.Вставить("ПлановыеОстаткиПроцент", ПлановыеОстаткиПроцент);
		                                            
	СтруктураНастроек.Вставить("ОбъемЗакупокДатаНач", ОбъемЗакупокДатаНач);
	СтруктураНастроек.Вставить("ПланыЗакупокДатаНач", ПланыЗакупокДатаНач);
	СтруктураНастроек.Вставить("ОбъемПродажДатаНач", ОбъемПродажДатаНач);
	СтруктураНастроек.Вставить("ПланыПродажДатаНач", ПланыПродажДатаНач);
	СтруктураНастроек.Вставить("ЗаказыПоставщикамДатаНач", ЗаказыПоставщикамДатаНач);
	СтруктураНастроек.Вставить("ЗаказыПокупателейДатаНач", ЗаказыПокупателейДатаНач);
	СтруктураНастроек.Вставить("ВнутренниеЗаказыДатаНач", ВнутренниеЗаказыДатаНач);
		                                            
	СтруктураНастроек.Вставить("ОбъемЗакупокДатаКон", ОбъемЗакупокДатаКон);
	СтруктураНастроек.Вставить("ПланыЗакупокДатаКон", ПланыЗакупокДатаКон);
	СтруктураНастроек.Вставить("ОбъемПродажДатаКон", ОбъемПродажДатаКон);
	СтруктураНастроек.Вставить("ПланыПродажДатаКон", ПланыПродажДатаКон);
	СтруктураНастроек.Вставить("ЗаказыПоставщикамДатаКон", ЗаказыПоставщикамДатаКон);
	СтруктураНастроек.Вставить("ЗаказыПокупателейДатаКон", ЗаказыПокупателейДатаКон);
	СтруктураНастроек.Вставить("ВнутренниеЗаказыДатаКон", ВнутренниеЗаказыДатаКон);
		                                            
	СтруктураНастроек.Вставить("СкладскиеОстаткиДата", СкладскиеОстаткиДата);
	СтруктураНастроек.Вставить("ПлановыеОстаткиСценарий", ПлановыеОстаткиСценарий);
		                                            
	СтруктураНастроек.Вставить("ОбъемЗакупокИсключить", ОбъемЗакупокИсключить);
	СтруктураНастроек.Вставить("ПланыЗакупокИсключить", ПланыЗакупокИсключить);
	СтруктураНастроек.Вставить("ОбъемПродажИсключить", ОбъемПродажИсключить);
	СтруктураНастроек.Вставить("ПланыПродажИсключить", ПланыПродажИсключить);
	СтруктураНастроек.Вставить("ЗаказыПоставщикамИсключить", ЗаказыПоставщикамИсключить);
	СтруктураНастроек.Вставить("ЗаказыПокупателейИсключить", ЗаказыПокупателейИсключить);
	СтруктураНастроек.Вставить("ВнутренниеЗаказыИсключить", ВнутренниеЗаказыИсключить);
	СтруктураНастроек.Вставить("СкладскиеОстаткиИсключить", СкладскиеОстаткиИсключить);
	СтруктураНастроек.Вставить("ПлановыеОстаткиИсключить", ПлановыеОстаткиИсключить);
		
	СтруктураНастроек.Вставить("ИзменитьРезультатРасчетаКоличества", ИзменитьРезультатРасчетаКоличества);
	СтруктураНастроек.Вставить("ИзменитьРезультатРасчетаКоличестваПроцент", ИзменитьРезультатРасчетаКоличестваПроцент);
	СтруктураНастроек.Вставить("РезультатРасчетаКоличестваОкруглитьДо", РезультатРасчетаКоличестваОкруглитьДо);
	
	СтруктураНастроек.Вставить("РежимСложенияОбъединения", РежимСложенияОбъединения);

	// Стратегия расчета суммы
	СтруктураНастроек.Вставить("ОбъемЗакупокСтратегияРасчетаСуммы", ОбъемЗакупокСтратегияРасчетаСуммы);
	СтруктураНастроек.Вставить("ПланыЗакупокСтратегияРасчетаСуммы", ПланыЗакупокСтратегияРасчетаСуммы);
	СтруктураНастроек.Вставить("ОбъемПродажСтратегияРасчетаСуммы", ОбъемПродажСтратегияРасчетаСуммы);
	СтруктураНастроек.Вставить("ПланыПродажСтратегияРасчетаСуммы", ПланыПродажСтратегияРасчетаСуммы);
	СтруктураНастроек.Вставить("ЗаказыПоставщикамСтратегияРасчетаСуммы", ЗаказыПоставщикамСтратегияРасчетаСуммы);
	СтруктураНастроек.Вставить("ВнутренниеЗаказыСтратегияРасчетаСуммы", ВнутренниеЗаказыСтратегияРасчетаСуммы);
	СтруктураНастроек.Вставить("СкладскиеОстаткиСтратегияРасчетаСуммы", СкладскиеОстаткиСтратегияРасчетаСуммы);
	СтруктураНастроек.Вставить("ПлановыеОстаткиСтратегияРасчетаСуммы", ПлановыеОстаткиСтратегияРасчетаСуммы);
		                                            
	СтруктураНастроек.Вставить("ОбъемЗакупокТипЦен", ОбъемЗакупокТипЦен);
	СтруктураНастроек.Вставить("ПланыЗакупокТипЦен", ПланыЗакупокТипЦен);
	СтруктураНастроек.Вставить("ОбъемПродажТипЦен", ОбъемПродажТипЦен);
	СтруктураНастроек.Вставить("ПланыПродажТипЦен", ПланыПродажТипЦен);
	СтруктураНастроек.Вставить("ЗаказыПоставщикамТипЦен", ЗаказыПоставщикамТипЦен);
	СтруктураНастроек.Вставить("ЗаказыПокупателейТипЦен", ЗаказыПокупателейТипЦен);
	СтруктураНастроек.Вставить("ВнутренниеЗаказыТипЦен", ВнутренниеЗаказыТипЦен);
	СтруктураНастроек.Вставить("СкладскиеОстаткиТипЦен", СкладскиеОстаткиТипЦен);
	СтруктураНастроек.Вставить("ПлановыеОстаткиТипЦен", ПлановыеОстаткиТипЦен);
		                                            
	СтруктураНастроек.Вставить("ОбъемЗакупокСтратегияРасчетаСуммыДата", ОбъемЗакупокСтратегияРасчетаСуммыДата);
	СтруктураНастроек.Вставить("ПланыЗакупокСтратегияРасчетаСуммыДата", ПланыЗакупокСтратегияРасчетаСуммыДата);
	СтруктураНастроек.Вставить("ОбъемПродажСтратегияРасчетаСуммыДата", ОбъемПродажСтратегияРасчетаСуммыДата);
	СтруктураНастроек.Вставить("ПланыПродажСтратегияРасчетаСуммыДата", ПланыПродажСтратегияРасчетаСуммыДата);
	СтруктураНастроек.Вставить("ЗаказыПоставщикамСтратегияРасчетаСуммыДата", ЗаказыПоставщикамСтратегияРасчетаСуммыДата);
	СтруктураНастроек.Вставить("ЗаказыПокупателейСтратегияРасчетаСуммыДата", ЗаказыПокупателейСтратегияРасчетаСуммыДата);
	СтруктураНастроек.Вставить("ВнутренниеЗаказыСтратегияРасчетаСуммыДата", ВнутренниеЗаказыСтратегияРасчетаСуммыДата);
	СтруктураНастроек.Вставить("СкладскиеОстаткиСтратегияРасчетаСуммыДата", СкладскиеОстаткиСтратегияРасчетаСуммыДата);
	СтруктураНастроек.Вставить("ПлановыеОстаткиСтратегияРасчетаСуммыДата", ПлановыеОстаткиСтратегияРасчетаСуммыДата);
		
	СтруктураНастроек.Вставить("ОбъемЗакупокФункция", ОбъемЗакупокФункция);
	СтруктураНастроек.Вставить("ПланыЗакупокФункция", ПланыЗакупокФункция);
	СтруктураНастроек.Вставить("ОбъемПродажФункция", ОбъемПродажФункция);
	СтруктураНастроек.Вставить("ПланыПродажФункция", ПланыПродажФункция);
	СтруктураНастроек.Вставить("ЗаказыПоставщикамФункция", ЗаказыПоставщикамФункция);
	СтруктураНастроек.Вставить("ЗаказыПокупателейФункция", ЗаказыПокупателейФункция);
	СтруктураНастроек.Вставить("ВнутренниеЗаказыФункция", ВнутренниеЗаказыФункция);
	СтруктураНастроек.Вставить("СкладскиеОстаткиФункция", СкладскиеОстаткиФункция);
	СтруктураНастроек.Вставить("ПлановыеОстаткиФункция", ПлановыеОстаткиФункция);
		
	СтруктураНастроек.Вставить("ИзменитьРезультатРасчетаСуммы", ИзменитьРезультатРасчетаСуммы);
	СтруктураНастроек.Вставить("ИзменитьРезультатРасчетаСуммыПроцент", ИзменитьРезультатРасчетаСуммыПроцент);
	СтруктураНастроек.Вставить("РезультатРасчетаСуммыОкруглитьДо", РезультатРасчетаСуммыОкруглитьДо);
	
	// Использовать свойства и категории
	СтруктураНастроек.Вставить("ИспользоватьСвойстваИКатегории", ИспользоватьСвойстваИКатегории);
	
	// Отборы
	СтруктураНастроек.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки(Истина, Ложь, Ложь, Ложь));
	
	Возврат СтруктураНастроек;
	
КонецФункции // СформироватьСтруктуруДляСохраненияНастроек()

Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками)

	Перем СохраненныеКонечныеПланы, СохраненныеНастройкиПостроителя;
	
	Если ТипЗнч(СтруктураСНастройками) = Тип("Структура") Тогда
		
		Для каждого Настройка из СтруктураСНастройками Цикл
			
			Если Настройка.Ключ = "КонечныеПланы" Тогда
				
				Если Настройка.Значение <> Неопределено И мДокумент = Неопределено Тогда
					
					КонечныеПланы.Загрузить(Настройка.Значение);
					
				КонецЕсли;
				
			ИначеЕсли Настройка.Ключ = "НастройкиПостроителя" Тогда
				
				Если Настройка.Значение <> Неопределено Тогда
					
					мИспользоватьСвойстваИКатегории = ИспользоватьСвойстваИКатегории;
					НастроитьПостроитель(ПостроительОтчета);
					ПостроительОтчета.УстановитьНастройки(Настройка.Значение, Истина, Ложь, Ложь, Ложь);
					
				КонецЕсли;
				
			Иначе
				
				Если Настройка.Значение <> Неопределено Тогда
					
					ЭтаФорма[Настройка.Ключ] = Настройка.Значение;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры // ВосстановитьНастройкиИзСтруктуры()

Процедура СформированныеДокументыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ДокументПроведен.ОтображатьТекст    = Ложь;
	ОформлениеСтроки.Ячейки.ДокументПроведен.ОтображатьФлажок   = Ложь;
	ОформлениеСтроки.Ячейки.ДокументПроведен.ОтображатьКартинку = Истина;
	
	Если ДанныеСтроки.ПометкаУдаления Тогда
		
		ОформлениеСтроки.Ячейки.ДокументПроведен.ИндексКартинки = 1;
		
	ИначеЕсли ДанныеСтроки.ДокументПроведен Тогда
		
		ОформлениеСтроки.Ячейки.ДокументПроведен.ИндексКартинки = 0;
		
	Иначе
		
		ОформлениеСтроки.Ячейки.ДокументПроведен.ИндексКартинки = 2;
		
	КонецЕсли; 

КонецПроцедуры // СформированныеДокументыПриВыводеСтроки()

Процедура СформированныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ОбновитьСостоянияДокументов();
	
	Попытка
		
		ОткрытьЗначение(ВыбраннаяСтрока.Документ);
		
	Исключение
	КонецПопытки;

КонецПроцедуры // СформированныеДокументыВыбор()

Процедура ОбновитьСостоянияДокументов()
	
	Индекс = 0;
	
	Пока Индекс < СформированныеДокументы.Количество() Цикл
		
		СтрокаТаблицы = СформированныеДокументы[Индекс];
		
		Попытка
			
			Если СтрокаТаблицы.Документ.ПолучитьОбъект() = Неопределено Тогда
				
				СформированныеДокументы.Удалить(СтрокаТаблицы);
				Продолжить;
				
			КонецЕсли;
			
		Исключение
			
			СформированныеДокументы.Удалить(СтрокаТаблицы);
			Продолжить;
			
		КонецПопытки;
		
		Если СтрокаТаблицы.Документ.ПометкаУдаления Тогда
			
			СтрокаТаблицы.ПометкаУдаления  = Истина;
			СтрокаТаблицы.ДокументПроведен = Ложь;
			
		ИначеЕсли СтрокаТаблицы.Документ.Проведен Тогда
			
			СтрокаТаблицы.ПометкаУдаления  = Ложь;
			СтрокаТаблицы.ДокументПроведен = Истина;
			
		Иначе
			
			СтрокаТаблицы.ПометкаУдаления  = Ложь;
			СтрокаТаблицы.ДокументПроведен = Ложь;
			
		КонецЕсли; 
		
		Индекс = Индекс + 1;
	
	КонецЦикла; 

КонецПроцедуры // ОбновитьСостоянияДокументов()

Процедура КоманднаяПанельСформированныеДокументыУстановитьПометки(Кнопка)
	
	ОбновитьСостоянияДокументов();
	
	Для каждого Строка из СформированныеДокументы Цикл
		
		Строка.Пометка = Истина;
		
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельСформированныеДокументыУстановитьПометки()

Процедура КоманднаяПанельСформированныеДокументыСнятьПометки(Кнопка)
	
	ОбновитьСостоянияДокументов();
	
	Для каждого Строка из СформированныеДокументы Цикл
		
		Строка.Пометка = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельСформированныеДокументыСнятьПометки()

Процедура КоманднаяПанельСформированныеДокументыПровести(Кнопка)
	
	ОбновитьСостоянияДокументов();
	
	Для каждого Строка из СформированныеДокументы Цикл
		
		Если Строка.Пометка Тогда
			
			ДокументОбъект = Строка.Документ.ПолучитьОбъект();
			
			Если ДокументОбъект <> Неопределено И НЕ ДокументОбъект.ПометкаУдаления Тогда
				
				Строка.Документ.ПолучитьОбъект().Записать(РежимЗаписиДокумента.Проведение);
				Строка.Пометка = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбновитьСостоянияДокументов();
	
КонецПроцедуры // КоманднаяПанельСформированныеДокументыПровести()

Процедура КоманднаяПанельСформированныеДокументыПометитьНаУдаление(Кнопка)
	
	ОбновитьСостоянияДокументов();
	
	Для каждого Строка из СформированныеДокументы Цикл
		
		Если Строка.Пометка Тогда
			
			Если Строка.Документ.ПолучитьОбъект() <> Неопределено Тогда
				
				Строка.Документ.ПолучитьОбъект().УстановитьПометкуУдаления(НЕ Строка.ПометкаУдаления);
				Строка.Пометка = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбновитьСостоянияДокументов();
	
КонецПроцедуры // КоманднаяПанельСформированныеДокументыПечать()

Процедура КоманднаяПанельСформированныеДокументыПечать(Кнопка)
	
	ОбновитьСостоянияДокументов();
	
	Для каждого Строка из СформированныеДокументы Цикл
		
		Если Строка.Пометка Тогда
			
			ДокументОбъект = Строка.Документ.ПолучитьОбъект();
			
			Если ДокументОбъект <> Неопределено Тогда
				
				Попытка
					
					ДокументОбъект.Печать("");
					
				Исключение
					
					СообщитьОбОшибке(ОписаниеОшибки(),, (Строка(ДокументОбъект) + ", печать не выполнена"));
					
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельСформированныеДокументыПечать()

Процедура КоманднаяПанельСформированныеДокументыОбновить(Кнопка)
	
	ОбновитьСостоянияДокументов();

КонецПроцедуры // КоманднаяПанельСформированныеДокументыОбновить()

Процедура УстановитьЭкспортныеПеременные()

	мОбъемЗакупок = ОбъемЗакупок;
	мПланыЗакупок = ПланыЗакупок;
	мОбъемПродаж = ОбъемПродаж;
	мПланыПродаж = ПланыПродаж;
	мЗаказыПоставщикам = ЗаказыПоставщикам;
	мЗаказыПокупателей = ЗаказыПокупателей;
	мВнутренниеЗаказы = ВнутренниеЗаказы;
	мСкладскиеОстатки = СкладскиеОстатки;
	мПлановыеОстатки = ПлановыеОстатки;
	                                            
	мОбъемЗакупокПроцент = ОбъемЗакупокПроцент;
	мПланыЗакупокПроцент = ПланыЗакупокПроцент;
	мОбъемПродажПроцент = ОбъемПродажПроцент;
	мПланыПродажПроцент = ПланыПродажПроцент;
	мЗаказыПоставщикамПроцент = ЗаказыПоставщикамПроцент;
	мЗаказыПокупателейПроцент = ЗаказыПокупателейПроцент;
	мВнутренниеЗаказыПроцент = ВнутренниеЗаказыПроцент;
	мСкладскиеОстаткиПроцент = СкладскиеОстаткиПроцент;
	мПлановыеОстаткиПроцент = ПлановыеОстаткиПроцент;
	                                            
	мОбъемЗакупокДатаНач = ОбъемЗакупокДатаНач;
	мПланыЗакупокДатаНач = ПланыЗакупокДатаНач;
	мОбъемПродажДатаНач = ОбъемПродажДатаНач;
	мПланыПродажДатаНач = ПланыПродажДатаНач;
	мЗаказыПоставщикамДатаНач = ЗаказыПоставщикамДатаНач;
	мЗаказыПокупателейДатаНач = ЗаказыПокупателейДатаНач;
	мВнутренниеЗаказыДатаНач = ВнутренниеЗаказыДатаНач;
	                                            
	мОбъемЗакупокДатаКон = ОбъемЗакупокДатаКон;
	мПланыЗакупокДатаКон = ПланыЗакупокДатаКон;
	мОбъемПродажДатаКон = ОбъемПродажДатаКон;
	мПланыПродажДатаКон = ПланыПродажДатаКон;
	мЗаказыПоставщикамДатаКон = ЗаказыПоставщикамДатаКон;
	мЗаказыПокупателейДатаКон = ЗаказыПокупателейДатаКон;
	мВнутренниеЗаказыДатаКон = ВнутренниеЗаказыДатаКон;
	                                            
	мСкладскиеОстаткиДата = СкладскиеОстаткиДата;
	мПлановыеОстаткиСценарий = ПлановыеОстаткиСценарий;
	                                            
	мОбъемЗакупокИсключить = ОбъемЗакупокИсключить;
	мПланыЗакупокИсключить = ПланыЗакупокИсключить;
	мОбъемПродажИсключить = ОбъемПродажИсключить;
	мПланыПродажИсключить = ПланыПродажИсключить;
	мЗаказыПоставщикамИсключить = ЗаказыПоставщикамИсключить;
	мЗаказыПокупателейИсключить = ЗаказыПокупателейИсключить;
	мВнутренниеЗаказыИсключить = ВнутренниеЗаказыИсключить;
	мСкладскиеОстаткиИсключить = СкладскиеОстаткиИсключить;
	мПлановыеОстаткиИсключить = ПлановыеОстаткиИсключить;
	
	мИзменитьРезультатРасчетаКоличества = ИзменитьРезультатРасчетаКоличества;
	мИзменитьРезультатРасчетаКоличестваПроцент = ИзменитьРезультатРасчетаКоличестваПроцент;
	мРезультатРасчетаКоличестваОкруглитьДо = РезультатРасчетаКоличестваОкруглитьДо;
	
	мРежимСложенияОбъединения = РежимСложенияОбъединения;
	                                            
	мОбъемЗакупокСтратегияРасчетаСуммы = ОбъемЗакупокСтратегияРасчетаСуммы;
	мПланыЗакупокСтратегияРасчетаСуммы = ПланыЗакупокСтратегияРасчетаСуммы;
	мОбъемПродажСтратегияРасчетаСуммы = ОбъемПродажСтратегияРасчетаСуммы;
	мПланыПродажСтратегияРасчетаСуммы = ПланыПродажСтратегияРасчетаСуммы;
	мЗаказыПоставщикамСтратегияРасчетаСуммы = ЗаказыПоставщикамСтратегияРасчетаСуммы;
	мЗаказыПокупателейСтратегияРасчетаСуммы = ЗаказыПокупателейСтратегияРасчетаСуммы;
	мВнутренниеЗаказыСтратегияРасчетаСуммы = ВнутренниеЗаказыСтратегияРасчетаСуммы;
	мСкладскиеОстаткиСтратегияРасчетаСуммы = СкладскиеОстаткиСтратегияРасчетаСуммы;
	мПлановыеОстаткиСтратегияРасчетаСуммы = ПлановыеОстаткиСтратегияРасчетаСуммы;
	                                            
	мОбъемЗакупокТипЦен = ОбъемЗакупокТипЦен;
	мПланыЗакупокТипЦен = ПланыЗакупокТипЦен;
	мОбъемПродажТипЦен = ОбъемПродажТипЦен;
	мПланыПродажТипЦен = ПланыПродажТипЦен;
	мЗаказыПоставщикамТипЦен = ЗаказыПоставщикамТипЦен;
	мЗаказыПокупателейТипЦен = ЗаказыПокупателейТипЦен;
	мВнутренниеЗаказыТипЦен = ВнутренниеЗаказыТипЦен;
	мСкладскиеОстаткиТипЦен = СкладскиеОстаткиТипЦен;
	мПлановыеОстаткиТипЦен = ПлановыеОстаткиТипЦен;
	                                            
	мОбъемЗакупокСтратегияРасчетаСуммыДата = ОбъемЗакупокСтратегияРасчетаСуммыДата;
	мПланыЗакупокСтратегияРасчетаСуммыДата = ПланыЗакупокСтратегияРасчетаСуммыДата;
	мОбъемПродажСтратегияРасчетаСуммыДата = ОбъемПродажСтратегияРасчетаСуммыДата;
	мПланыПродажСтратегияРасчетаСуммыДата = ПланыПродажСтратегияРасчетаСуммыДата;
	мЗаказыПоставщикамСтратегияРасчетаСуммыДата = ЗаказыПоставщикамСтратегияРасчетаСуммыДата;
	мЗаказыПокупателейСтратегияРасчетаСуммыДата = ЗаказыПокупателейСтратегияРасчетаСуммыДата;
	мВнутренниеЗаказыСтратегияРасчетаСуммыДата = ВнутренниеЗаказыСтратегияРасчетаСуммыДата;
	мСкладскиеОстаткиСтратегияРасчетаСуммыДата = СкладскиеОстаткиСтратегияРасчетаСуммыДата;
	мПлановыеОстаткиСтратегияРасчетаСуммыДата = ПлановыеОстаткиСтратегияРасчетаСуммыДата;
	
	мОбъемЗакупокФункция = ОбъемЗакупокФункция;
	мПланыЗакупокФункция = ПланыЗакупокФункция;
	мОбъемПродажФункция = ОбъемПродажФункция;
	мПланыПродажФункция = ПланыПродажФункция;
	мЗаказыПоставщикамФункция = ЗаказыПоставщикамФункция;
	мЗаказыПокупателейФункция = ЗаказыПокупателейФункция;
	мВнутренниеЗаказыФункция = ВнутренниеЗаказыФункция;
	мСкладскиеОстаткиФункция = СкладскиеОстаткиФункция;
	мПлановыеОстаткиФункция = ПлановыеОстаткиФункция;
	
	мИзменитьРезультатРасчетаСуммы = ИзменитьРезультатРасчетаСуммы;
	мИзменитьРезультатРасчетаСуммыПроцент = ИзменитьРезультатРасчетаСуммыПроцент;
	мРезультатРасчетаСуммыОкруглитьДо = РезультатРасчетаСуммыОкруглитьДо;
	                                            
	мСформированныеДокументы = СформированныеДокументы;

КонецПроцедуры // УстановитьЭкспортныеПеременные()

Процедура ФлажокИспользоватьСвойстваИКатегорииПриИзменении(Элемент)
	
	мИспользоватьСвойстваИКатегории = ИспользоватьСвойстваИКатегории;
	
	НастроитьПостроитель(ПостроительОтчета);
	
	УправлениеДоступностьюОтборов();
	
КонецПроцедуры // ФлажокИспользоватьСвойстваИКатегорииПриИзменении()

Процедура ОбновлениеОтображения()
	
	УстановитьКартинкуТипЦен(ЭлементыФормы.ПолеВводаОбъемЗакупокТипЦен);
	УстановитьКартинкуТипЦен(ЭлементыФормы.ПолеВводаПланыЗакупокТипЦен);
	УстановитьКартинкуТипЦен(ЭлементыФормы.ПолеВводаОбъемПродажТипЦен);
	УстановитьКартинкуТипЦен(ЭлементыФормы.ПолеВводаПланыПродажТипЦен);
	УстановитьКартинкуТипЦен(ЭлементыФормы.ПолеВводаЗаказыПоставщикамТипЦен);
	УстановитьКартинкуТипЦен(ЭлементыФормы.ПолеВводаЗаказыПокупателейТипЦен);
	УстановитьКартинкуТипЦен(ЭлементыФормы.ПолеВводаВнутренниеЗаказыТипЦен);
	УстановитьКартинкуТипЦен(ЭлементыФормы.ПолеВводаСкладскиеОстаткиТипЦен);
	УстановитьКартинкуТипЦен(ЭлементыФормы.ПолеВводаПлановыеОстаткиТипЦен);
	
КонецПроцедуры // ОбновлениеОтображения()

Процедура УстановитьКартинкуТипЦен(Элемент)
	
	Если ЗначениеНеЗаполнено(Элемент.Значение) = Истина Тогда
		
		Элемент.Картинка = Новый Картинка;
		
	ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ТипыЦенНоменклатуры") Тогда
		
		Элемент.Картинка = БиблиотекаКартинок.СправочникНоменклатура;
		
	ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ТипыЦенНоменклатурыКонтрагентов") Тогда
		
		Элемент.Картинка = БиблиотекаКартинок.СправочникКонтрагенты;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьКартинкуТипЦен()

Процедура УстановитьНачальныеЗначения()
	
	// Стратегия расчета количества
	ОбъемЗакупокПроцент = 100;
	ПланыЗакупокПроцент = 100;
	ОбъемПродажПроцент = 100;
	ПланыПродажПроцент = 100;
	ЗаказыПоставщикамПроцент = 100;
	ЗаказыПокупателейПроцент = 100;
	ВнутренниеЗаказыПроцент = 100;
	СкладскиеОстаткиПроцент = 100;
	ПлановыеОстаткиПроцент = 100;
	
	ДатаНач = НачалоМесяца(ТекущаяДата());
	ДатаКон = КонецМесяца(ТекущаяДата());
	
	ОбъемЗакупокДатаНач = ДатаНач;
	ПланыЗакупокДатаНач = ДатаНач;
	ОбъемПродажДатаНач = ДатаНач;
	ПланыПродажДатаНач = ДатаНач;
	ЗаказыПоставщикамДатаНач = ДатаНач;
	ЗаказыПокупателейДатаНач = ДатаНач;
	ВнутренниеЗаказыДатаНач = ДатаНач;
	                                            
	ОбъемЗакупокДатаКон = ДатаКон;
	ПланыЗакупокДатаКон = ДатаКон;
	ОбъемПродажДатаКон = ДатаКон;
	ПланыПродажДатаКон = ДатаКон;
	ЗаказыПоставщикамДатаКон = ДатаКон;
	ЗаказыПокупателейДатаКон = ДатаКон;
	ВнутренниеЗаказыДатаКон = ДатаКон;
	                                            
	СкладскиеОстаткиДата = ДатаНач;
	
	//Стратегия расчета суммы
	ОбъемЗакупокСтратегияРасчетаСуммыДата = ТекущаяДата();
	ПланыЗакупокСтратегияРасчетаСуммыДата = ТекущаяДата();
	ОбъемПродажСтратегияРасчетаСуммыДата = ТекущаяДата();
	ПланыПродажСтратегияРасчетаСуммыДата = ТекущаяДата();
	ЗаказыПоставщикамСтратегияРасчетаСуммыДата = ТекущаяДата();
	ЗаказыПокупателейСтратегияРасчетаСуммыДата = ТекущаяДата();
	ВнутренниеЗаказыСтратегияРасчетаСуммыДата = ТекущаяДата();
	СкладскиеОстаткиСтратегияРасчетаСуммыДата = ТекущаяДата();
	ПлановыеОстаткиСтратегияРасчетаСуммыДата = ТекущаяДата();
	
КонецПроцедуры // УстановитьНачальныеЗначения()

Процедура КоманднаяПанельКонечныеПланыВыбиратьДатыПериодом(Кнопка)
	
	РежимВыбораДатПериодом = НЕ РежимВыбораДатПериодом;
	Кнопка.Пометка = РежимВыбораДатПериодом;
	
КонецПроцедуры // КоманднаяПанельКонечныеПланыВыбиратьДатыПериодом()

Процедура КонечныеПланыДатаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если РежимВыбораДатПериодом Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = ТекущийЭлемент.ТекущиеДанные;
		
		МассивВозврата = ВвестиПериод(НачалоДня(ТекущиеДанные.ДатаНач), КонецДня(ТекущиеДанные.ДатаКон));
		
		Если ТипЗнч(МассивВозврата) = Тип("Массив") Тогда
			
			ТекущийЭлемент.ТекущиеДанные.ДатаНач = МассивВозврата[0];
			ТекущийЭлемент.ТекущиеДанные.ДатаКон = МассивВозврата[1];
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры // КонечныеПланыДатаНачалоВыбора()
