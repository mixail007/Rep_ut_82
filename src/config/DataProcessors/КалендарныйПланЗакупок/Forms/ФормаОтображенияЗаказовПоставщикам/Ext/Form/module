
Перем мТаблицаОбъектов;

Перем мСтруктураОбъекта;

Перем мМодифицированностьОбъектаПередКорректировкой;

Перем мЗаписанОбъект;

Перем мБылоИзменениеЗаказа;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет таблицу заказов
//
Процедура ЗаполнитьТаблицуЗаказов(Знач ИДТекущейСтроки = Неопределено)

	ТаблицаЗаказов.Очистить();
	
	Для каждого СтрокаТаблицы Из мТаблицаОбъектов Цикл
		НоваяСтрока = ТаблицаЗаказов.Добавить();
		НоваяСтрока.Дата            = СтрокаТаблицы.Объект.Дата;
		НоваяСтрока.НомерЗаказа     = СтрокаТаблицы.Объект.Номер;
		НоваяСтрока.ДатаПоступления = СтрокаТаблицы.Объект.ДатаПоступления;
		НоваяСтрока.ДатаОплаты      = СтрокаТаблицы.Объект.ДатаОплаты;
		НоваяСтрока.Контрагент      = СтрокаТаблицы.Объект.Контрагент;
		НоваяСтрока.Сумма           = ПолучитьСуммуДокументаСНДС(СтрокаТаблицы.Объект);
		НоваяСтрока.Валюта          = СтрокаТаблицы.Объект.ВалютаДокумента;
		НоваяСтрока.ИДОбъекта       = СтрокаТаблицы.ИДОбъекта;
	КонецЦикла;
	
	Если ИДТекущейСтроки <> Неопределено Тогда
		СтрокаТаблицыЗаказов = ТаблицаЗаказов.Найти(ИДТекущейСтроки, "ИДОбъекта");
		Если СтрокаТаблицыЗаказов <> Неопределено Тогда
			ЭлементыФормы.ТаблицаЗаказов.ТекущаяСтрока = СтрокаТаблицыЗаказов;
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события формы ПриОткрытии.
//
Процедура ПриОткрытии()
	
	мТаблицаОбъектов = ТаблицаОбъектов.Скопировать();
	
	Для каждого СтрокаТаблицы Из мТаблицаОбъектов Цикл
		Попытка
			СтрокаТаблицы.Объект.Заблокировать();
		Исключение
		КонецПопытки;
	КонецЦикла; 
	
	ЗаполнитьТаблицуЗаказов();
	
КонецПроцедуры

// Обработчик события формы ОбработкаЗаписиНовогоОбъекта.
//
Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	
	СтрокаОбъекта = мТаблицаОбъектов.Найти(Объект, "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда
		ИДОбъекта = СтрокаОбъекта.ИДОбъекта;
	Иначе
		ИДОбъекта = СокрЛП(Строка(Новый УникальныйИдентификатор()));
		СтрокаОбъекта = мТаблицаОбъектов.Добавить();
		СтрокаОбъекта.ИДОбъекта = ИДОбъекта;
		СтрокаОбъекта.Объект    = Объект;
		Попытка
			СтрокаОбъекта.Объект.Заблокировать();
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	мБылоИзменениеЗаказа = Истина;
	
	Если ТипЗнч(мСтруктураОбъекта) = Тип("Структура") Тогда
		мЗаписанОбъект = Истина;
		мСтруктураОбъекта = СкопироватьДанныеОбъектаВСтруктуру(Объект);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события формы ПередЗакрытием.
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если мБылоИзменениеЗаказа Тогда
		Отказ = Истина;
		ТаблицаОбъектов = мТаблицаОбъектов.Скопировать();;
		ЭтаФорма.Закрыть(Истина);
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриВыводеСтроки элемента формы ТаблицаЗаказов.
//
Процедура ТаблицаЗаказовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ПустаяСтрока(ДанныеСтроки.ИДОбъекта) Тогда
		СтрокаОбъекта = мТаблицаОбъектов.Найти(ДанныеСтроки.ИДОбъекта, "ИДОбъекта");
		Если СтрокаОбъекта <> Неопределено Тогда
			ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
			Если НЕ СтрокаОбъекта.Объект.Ссылка.Пустая() Тогда
				Если СтрокаОбъекта.Объект.Модифицированность() Тогда
					ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 5;
				Иначе
					ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 0;
				КонецЕсли; 
			Иначе
				ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 4;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы ТаблицаЗаказов.
//
Процедура ТаблицаЗаказовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеНеЗаполнено(Элемент.ТекущиеДанные.ИДОбъекта) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаОбъекта = мТаблицаОбъектов.Найти(Элемент.ТекущиеДанные.ИДОбъекта, "ИДОбъекта");
	
	Если СтрокаОбъекта = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мСтруктураОбъекта = СкопироватьДанныеОбъектаВСтруктуру(СтрокаОбъекта.Объект);
	мМодифицированностьОбъектаПередКорректировкой = СтрокаОбъекта.Объект.Модифицированность();
	мЗаписанОбъект = Ложь;
	
	ФормаЗаказа = СтрокаОбъекта.Объект.ПолучитьФорму(,ЭтаФорма);
	ФормаЗаказа.ФормаДляРегистрацииБезЗаписи = Истина;
	
	Если ЗначениеНеЗаполнено(СтрокаОбъекта.Объект.Ссылка) Тогда
		ФормаЗаказа.Модифицированность = Ложь;
	КонецЕсли;
	
	ФормаЗаказа.ОткрытьМодально();
	
	Если НЕ СтрокаОбъекта.Объект.Ссылка.Пустая() Тогда
		Если (НЕ мМодифицированностьОбъектаПередКорректировкой И НЕ мЗаписанОбъект)
		 ИЛИ СравнитьСтруктуруДанныхОбъектаИОбъект(СтрокаОбъекта.Объект.Ссылка, мСтруктураОбъекта) Тогда
			СтрокаОбъекта.Объект.Прочитать();
		Иначе
			ВосстановитьДанныеОбъектаИзСтруктуры(СтрокаОбъекта.Объект, мСтруктураОбъекта);
		КонецЕсли; 
	Иначе
		ВосстановитьДанныеОбъектаИзСтруктуры(СтрокаОбъекта.Объект, мСтруктураОбъекта);
	КонецЕсли; 
	
	Попытка
		СтрокаОбъекта.Объект.Заблокировать();
	Исключение
	КонецПопытки;
	
	мСтруктураОбъекта = Неопределено;
	
	ИДТекущейСтроки = Элемент.ТекущиеДанные.ИДОбъекта;
	ЗаполнитьТаблицуЗаказов(ИДТекущейСтроки);
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы ТаблицаЗаказов.
//
Процедура ТаблицаЗаказовПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		Если Элемент.ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		НайденнаяСтрока = мТаблицаОбъектов.Найти(Элемент.ТекущиеДанные.ИДОбъекта, "ИДОбъекта");
		Если НайденнаяСтрока <> Неопределено Тогда
			Объект = НайденнаяСтрока.Объект.Скопировать();
		Иначе
			Возврат;
		КонецЕсли;
	Иначе
		Объект = Документы.ЗаказПоставщику.СоздатьДокумент();
	КонецЕсли; 
	ФормаЗаказа = Объект.ПолучитьФорму(,ЭтаФорма);
	ФормаЗаказа.ФормаДляРегистрацииБезЗаписи = Истина;
	
	ФормаЗаказа.Модифицированность = Ложь;
	
	ФормаЗаказа.ОткрытьМодально();
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ИДТекущейСтроки = Элемент.ТекущиеДанные.ИДОбъекта;
	КонецЕсли; 
	ЗаполнитьТаблицуЗаказов(ИДТекущейСтроки);
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы ТаблицаЗаказов.
//
Процедура ТаблицаЗаказовПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		НайденнаяСтрока = мТаблицаОбъектов.Найти(Элемент.ТекущиеДанные.ИДОбъекта, "ИДОбъекта");
		Если НайденнаяСтрока <> Неопределено Тогда
			мТаблицаОбъектов.Удалить(НайденнаяСтрока);
			мБылоИзменениеЗаказа = Истина;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПослеУдаления элемента формы ТаблицаЗаказов.
//
Процедура ТаблицаЗаказовПослеУдаления(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьТаблицуЗаказов(Элемент.ТекущиеДанные.ИДОбъекта);
	Иначе
		ЗаполнитьТаблицуЗаказов();
	КонецЕсли;
	
КонецПроцедуры

ТаблицаЗаказов.Колонки.Добавить("ИДОбъекта");
мБылоИзменениеЗаказа = Ложь;
