////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет табличную часть обработки категориями объекта.
// При заполнении используются значения реквизитов обработки: 
// ОбъектОтбораКатегорий - объект, категории которого отбираются.
// НазначениеКатегорий - значение реквизита, по которому отбораются категории.
//
// Параметры:
//  Нет.
//
Процедура ПрочитатьЗаполнитьКатегорииОбъекта() Экспорт

	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("НазначениеКатегорий",     НазначениеКатегорий);
	Запрос.УстановитьПараметр("ОбъектОтбораКатегорий",   ОбъектОтбораКатегорий);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КатегорииОбъектов.ПометкаУдаления КАК ПометкаУдаления,
	|	КатегорииОбъектов.Ссылка КАК Категория,
	|	ВЫБОР
	|		КОГДА КатегорииОбъектов2.Объект ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Принадлежность
	|ИЗ
	|	(ВЫБРАТЬ
	|		КатегорииОбъектов.Ссылка КАК Ссылка,
	|		КатегорииОбъектов.ПометкаУдаления КАК ПометкаУдаления
	|	ИЗ
	|		Справочник.КатегорииОбъектов КАК КатегорииОбъектов
	|	ГДЕ
	|		КатегорииОбъектов.НазначениеКатегории В(&НазначениеКатегорий)
	|		//Замена И (КатегорииОбъектов.Наименование ПОДОБНО ""%ПЭК%"" ИЛИ КатегорииОбъектов.Наименование ПОДОБНО ""%Расчёт%"" ИЛИ КатегорииОбъектов.Наименование ПОДОБНО ""%Колеса%"" ИЛИ КатегорииОбъектов.Наименование ПОДОБНО ""%Диски%"" ИЛИ КатегорииОбъектов.Наименование ПОДОБНО ""%Тендер%"" ИЛИ КатегорииОбъектов.Наименование ПОДОБНО ""%Маркиров%"")
	|				
	|				
	|				
	|				
	|				) КАК КатегорииОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК КатегорииОбъектов2
	|		ПО (КатегорииОбъектов2.Категория = КатегорииОбъектов.Ссылка)
	|			И (КатегорииОбъектов2.Объект = &ОбъектОтбораКатегорий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КатегорииОбъектов.Ссылка.Наименование";
	
	Если Найти(Строка(НазначениеКатегорий),"Документ_ЗаказПокупателя") > 0 Тогда
		
		Запрос.Текст = СтрЗаменить(запрос.Текст,"//Замена","");
		
	КонецЕсли;
	
	КатегорииОбъекта.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

// Процедура открывает форму новой категории.
// Предназначена для вызова из обработчиков форм КатегорииОбъектаПередНачаломДобавления.
//
// Параметры:
//  Нет.
//
Процедура ОткрытьФормуНовойКатегории(ФормаВладелец) Экспорт

	ФормаНовойКатегории = Справочники.КатегорииОбъектов.ПолучитьФормуНовогоЭлемента(, ФормаВладелец, );

	Если ТипЗнч(НазначениеКатегорий) = Тип("СписокЗначений") Тогда
		ВыбранныйЭлемент = НазначениеКатегорий.ВыбратьЭлемент("Выбор назначения категории");

		Если ВыбранныйЭлемент <> Неопределено Тогда
			ФормаНовойКатегории.НазначениеКатегории = ВыбранныйЭлемент.Значение;
		КонецЕсли;

	Иначе
		ФормаНовойКатегории.НазначениеКатегории = НазначениеКатегорий;
	КонецЕсли;

	ФормаНовойКатегории.Открыть();

КонецПроцедуры

// Процедура проверяет, должна ли новая категория попасть в табличную часть обработки, 
// если да - добавляет категорию и активизирует соответствующую строку в табличном поле.
// Предназначена для вызова из обработчиков форм ОбработкаЗаписиНовогоОбъекта.
//
// Параметры:
//  Категория - добавляемая категория.
//  ТабличноеПоле - ТабличноеПоле, в котором надо активизировать строку.
//
Процедура ПроверитьДобавитьНовуюКатегорию(Категория, ТабличноеПоле) Экспорт

	Если ТипЗнч(НазначениеКатегорий) = Тип("СписокЗначений") Тогда
		Если НазначениеКатегорий.НайтиПоЗначению(Категория.НазначениеКатегории) = Неопределено Тогда
			Возврат;
		КонецЕсли;

	ИначеЕсли Категория.НазначениеКатегории <> НазначениеКатегорий Тогда
		Возврат;
	КонецЕсли;

	// Определение позиции категории в табличной части.

	Для Индекс = 0 По КатегорииОбъекта.Количество() - 1 Цикл
		Если Категория.Наименование < КатегорииОбъекта[Индекс].Категория.Наименование Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	// Вставка категории с соответствующую позицию.

	НоваяСтрока = КатегорииОбъекта.Вставить(Индекс);

	НоваяСтрока.ПометкаУдаления = Категория.ПометкаУдаления;
	НоваяСтрока.Категория       = Категория;
	НоваяСтрока.Принадлежность  = Истина;

	// Позиционирование курсора.

	ТабличноеПоле.ТекущаяСтрока = НоваяСтрока;

КонецПроцедуры

// Процедура снимает и устанавливает пометку удаления категории.
// Предназначена для вызова из обработчиков форм КатегорииОбъектаПередУдалением.
//
// Параметры:
//  ТекущаяСтрока - текущая строка табличной части.
//
Процедура ИнвертироватьПометкуУдаленияКатегории(ТекущаяСтрока) Экспорт

	ОбъектКатегория = ТекущаяСтрока.Категория.ПолучитьОбъект();

	Попытка
		ОбъектКатегория.УстановитьПометкуУдаления(НЕ ТекущаяСтрока.ПометкаУдаления, Истина);
	Исключение
		Предупреждение("Не удалось изменить пометку удаления категории:" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;

	ТекущаяСтрока.ПометкаУдаления = ОбъектКатегория.ПометкаУдаления;

	//Если ТекущаяСтрока.ПометкаУдаления Тогда
	//	ТекущаяСтрока.Принадлежность = Ложь;
	//КонецЕсли;

КонецПроцедуры

// Функция записывеет категории объекта в информационную базу.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Истина - если категории объекта были записаны, или их не требуется записывать
//  Ложь   - если категории объекта не удалось записать.
//
Функция ЗаписатьКатегорииОбъекта() Экспорт

	НаборЗаписейКатегорииОбъекта = РегистрыСведений.КатегорииОбъектов.СоздатьНаборЗаписей();

	Для каждого Строка Из КатегорииОбъекта Цикл
		Если Строка.Принадлежность Тогда
			Запись = НаборЗаписейКатегорииОбъекта.Добавить();

			Запись.Объект    = ОбъектОтбораКатегорий;
			Запись.Категория = Строка.Категория;
		КонецЕсли;
	КонецЦикла;

	НаборЗаписейКатегорииОбъекта.Отбор.Объект.Установить(ОбъектОтбораКатегорий);

	Попытка
		НаборЗаписейКатегорииОбъекта.Записать();
	Исключение
		Предупреждение("Не удалось записать категории объекта:" + Символы.ПС + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;

	Возврат Истина;

КонецФункции
