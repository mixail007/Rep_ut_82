////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	ЭтаФорма.Заголовок = "Категории: " + ОбработкаОбъектКатегорииОбъекта.ОбъектОтбораКатегорий;

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если Модифицированность Тогда
		Вопрос = "Измененные категории объекта не были записаны! Сохранить изменения?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНетОтмена);

		Если      Ответ = КодВозвратаДиалога.Да Тогда
			ОбработкаОбъектКатегорииОбъекта.ЗаписатьКатегорииОбъекта();

		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)

	ОбработкаОбъектКатегорииОбъекта.ПроверитьДобавитьНовуюКатегорию(Объект.Ссылка, ЭлементыФормы.КатегорииОбъекта);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

Процедура КоманднаяПанельДействиеЗаписать(Кнопка)

	Если ОбработкаОбъектКатегорииОбъекта.ЗаписатьКатегорииОбъекта() Тогда
		Модифицированность = Ложь;
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанельДействиеПеречитать(Кнопка)

	Если Модифицированность Тогда
		Вопрос = "Измененные категории объекта не были записаны! Продолжить?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОкОтмена);

		Если Ответ <> КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ОбработкаОбъектКатегорииОбъекта.ПрочитатьЗаполнитьКатегорииОбъекта();

	Модифицированность = Ложь;

КонецПроцедуры

Процедура КатегорииОбъектаПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;

	ОбработкаОбъектКатегорииОбъекта.ОткрытьФормуНовойКатегории(ЭтаФорма);

КонецПроцедуры

Процедура КатегорииОбъектаПередУдалением(Элемент, Отказ)

	Отказ = Истина;

	ОбработкаОбъектКатегорииОбъекта.ИнвертироватьПометкуУдаленияКатегории(Элемент.ТекущиеДанные);

КонецПроцедуры

Процедура КатегорииОбъектаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если Элемент.Колонки.ПометкаУдаления.Видимость Тогда
		ОформлениеСтроки.Ячейки.ПометкаУдаления.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.ПометкаУдаления.ИндексКартинки     = Число(ДанныеСтроки.ПометкаУдаления);
	КонецЕсли;

	Если Элемент.Колонки.Принадлежность.Видимость Тогда
		ОформлениеСтроки.Ячейки.Принадлежность.ОтображатьФлажок    = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура КатегорииОбъектаПриИзмененииФлажка(Элемент, Колонка)

	Модифицированность = Истина;

КонецПроцедуры

//30.06.2017 ---- вспомогательные функции получения адреса ---------------
// возвращает Структура("Вид, Адрес, Регион, Город, Улица, Дом, Координаты")
//
Функция ПолучитьКонтактнуюИнформацию(Контрагент, Вид)
	
	РезСтруктура =новый Структура("Вид, Адрес, Регион, Город, Улица, Дом, Координаты", 
	                                 "","","","","");
	
	Если типЗнч(Вид)=Тип("Число") тогда // номер точки
		Точка = справочники.Точки.НайтиПоРеквизиту("Номер",Вид);
		
		ЗаполнитьЗначенияСвойств(РезСтруктура, точка); // сразу все поля!
		
		РезСтруктура.Вид   = "Адрес точки"; 
		РезСтруктура.Адрес = точка.Адрес+"~"+точка.ИнформацияДляВодителя+" "+точка.КонтактноеЛицо;
					
	ИначеЕсли типЗнч(Вид)=Тип("Строка") тогда // ПРОСТО АДРЕС!
		
		РезСтруктура.Вид   = "Адрес из Заказа покупателя"; 
		РезСтруктура.Адрес = Вид;
		
		i=найти(Вид,"~");
		если i>0 тогда
			стрВид = лев(Вид, i-1);
		Иначе
			стрВид = Вид;
		КонецЕсли;
		
		КоордДШ = ОбменСУТИнтернетМагазин.получитьКоординаты(стрВид);
		РезСтруктура.Координаты = КоордДШ;
		
		//попробуем определить город и регион по строке 
		если КоордДШ<>"" тогда
			поляАдреса = ОбменСУТИнтернетМагазин.ПолучитьАдресПоКоординатам(КоордДШ, Истина);
			РезСтруктура.Регион = поляАдреса.Поле2;
			РезСтруктура.Город  = поляАдреса.Поле4;
			РезСтруктура.Улица  = поляАдреса.Поле6;
			РезСтруктура.Дом	= поляАдреса.Поле7;
		КонецЕсли;
	
	Иначе //---------------------"нормальный" адрес Д/Ф/Ю ------------------------------
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	КонтактнаяИнформация.Вид,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Комментарий,
		
		|	КонтактнаяИнформация.Поле2 как Регион,
		
		|	выбор когда КонтактнаяИнформация.Поле4="""" 
		|		  тогда КонтактнаяИнформация.Поле5
		|			Иначе КонтактнаяИнформация.Поле4 Конец как Город,
		
		//06.07.2017
		|
		| выбор когда КонтактнаяИнформация.Поле6="""" и КонтактнаяИнформация.Поле5<>""""
		| тогда ""нет улиц ""+КонтактнаяИнформация.Поле5 
		| иначе КонтактнаяИнформация.Поле6 Конец как Улица,
		|	КонтактнаяИнформация.Поле7 как Дом,
		
		|	КонтактнаяИнформация.Поле10 как Координаты
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Контрагент
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &Вид";
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Адрес);
		Запрос.УстановитьПараметр("Вид", Вид);
			
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
	 	Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(РезСтруктура, Выборка); 
			РезСтруктура.Адрес = выборка.Представление+?(СокрЛП(выборка.Комментарий)="","", "~"+выборка.Комментарий);
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат РезСтруктура;

КонецФункции	

//30.06.2017
функция НайтиАдресПоУмолчанию(Контрагент)
	
	Вид = справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Адрес доставки");    
	сАдрес = ПолучитьКонтактнуюИнформацию(Контрагент, Вид);
	
	Если СокрЛП(сАдрес.Адрес)="" Тогда
		Вид = справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
		сАдрес = ПолучитьКонтактнуюИнформацию(Контрагент, Вид);
		
		Если СокрЛП(сАдрес.Адрес)="" Тогда
			Вид = справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
			сАдрес = ПолучитьКонтактнуюИнформацию(Контрагент, Вид);
		КонецЕсли;
	КонецЕсли;
	
	возврат сАдрес;
	
КонецФункции

Процедура КнопкаOKНажатие(Элемент)

	СписокЗаписей0 = ПолучитьКатегорииСтрокой(ОбъектОтбораКатегорий);
	
	//+++ 25.03.2015 ----- доп.ограничения --------------- 
	попытка
		обДок = ОбъектОтбораКатегорий.получитьОбъект();   
		Если ТипЗнч(ОбъектОтбораКатегорий)=Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			
			Отказ = Ложь;
			
			//02.04.2015 не проделенный или Резервный заказ - можно только посчитать R13
			Если (НЕ обДок.Проверен)  или обДок.Резерв или обДок.Транзит тогда
				Отказ = Истина;
			КонецЕсли;
			
			//+++ 05.02.2016
			Если обДок.Подразделение.ОбособленноеПодразделение тогда
				Предупреждение("Нельзя ставить на отгрузку из Ярославля - заказ "+обДок.Номер+" из филиала: "+строка( обДок.Подразделение), 10);
				Отказ = истина;
			КонецЕсли;
			
			// Сакулина 23.11.2016
			Если обДок.ТипЗаказа = 13 Тогда
				Предупреждение("Нельзя ставить на отгрузку заказ с типом №:13", 10);
				Отказ = истина;
			КонецЕсли;
			
			//+++ 15.02.2017 
			Если обДок.Контрагент.ЗапретОтгрузки тогда
				Предупреждение("Клиенту: "+строка(обДок.Контрагент)+" - ЗАПРЕЩЕНА ОТГРУЗКА!", 10);
				Отказ = истина;
			КонецЕсли;
			Если обДок.Контрагент.Родитель = справочники.Контрагенты.ПотенциальныеПокупатели тогда
				Предупреждение("Клиент: "+строка(обДок.Контрагент)+" - находится в ""Потенциальных покупателях!""
				|Отгрузки таким клиентам - запрещены!", 10);
				Отказ = истина;
			КонецЕсли;
			
			сАдрес = ПолучитьСтруктуруАдреса(обДок.Ссылка);
			
			//+++( 05.07.2017 - тестирование --- проверка адреса на "правильность" ---
			//Если ЗначениеЗаполнено(обДок.видАдреса) тогда
			//	сАдрес = ПолучитьКонтактнуюИнформацию(обДок.Контрагент, обДок.видАдреса);
			//Иначе // нет вида адреса... 
			//	Если ЗначениеЗаполнено(обДок.АдресДоставки) тогда
			//		Если ОбДок.НомерТорговойТочкиКонтрагента<>0 тогда
			//			сАдрес = ПолучитьКонтактнуюИнформацию(обДок.Контрагент, обДок.НомерТорговойТочкиКонтрагента); //это число!
			//		Иначе
			//			сАдрес = ПолучитьКонтактнуюИнформацию(обДок.Контрагент, обДок.АдресДоставки); //это просто строка!
			//		КонецЕсли;	
			//	Иначе //нет адреса
			//		сАдрес = НайтиАдресПоУмолчанию(обДок.Контрагент);// находим Д-Ф-Ю адрес...
			//	КонецЕсли;
			//КонецЕсли;	
			
			//05.07.2017 - исключение из правил 3х городов - регионального значения
			РегионЭтоГород = (  найти(сАдрес.Регион,"Москва")>0 
			или найти(сАдрес.Регион,"Санкт-Петербург")>0 
			или найти(сАдрес.Регион,"Севастополь")>0 );
			
	//------------обработка найденной структуры полей сАдрес--------------------
	Если обДок.ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж <> справочники.НаправленияПродаж.НайтиПоКоду(16) тогда  //13.10.2017
		Если обДок.Контрагент.Экспорт = Ложь Тогда //Лукьяненков 04.12.2017 (убрать проверку для экспортных клиентов)
			Если сАдрес.Координаты = "" тогда
				Предупреждение("Ошибка по виду адреса '"+строка(сАдрес.Вид)+"' - не заполнено поле: 'Координаты'
				|в адресе: "+сАдрес.Адрес+"
				|Заполните все необходимые поля перед отгрузкой!", 30);
				Отказ = истина;
			ИначеЕсли сАдрес.Регион= "" тогда
				Предупреждение("Ошибка по виду адреса '"+строка(сАдрес.Вид)+"' - не заполнено поле: 'Регион'!
				|в адресе: "+сАдрес.Адрес+"
				|Заполните все необходимые поля перед отгрузкой!", 30);
				Отказ = истина;
			ИначеЕсли сАдрес.Город= "" и не РегионЭтоГород тогда 
				Предупреждение("Ошибка по виду адреса '"+строка(сАдрес.Вид)+"' - не заполнено поле: 'Город'!
				|в адресе: "+сАдрес.Адрес+"
				|Заполните все необходимые поля перед отгрузкой!", 30);
				Отказ = истина;
				
				//------------------должна быть привязка с детализацией до Улицы и Дома!----------------------------				
			ИначеЕсли сАдрес.Улица= "" тогда
				Предупреждение("Ошибка по виду адреса '"+строка(сАдрес.Вид)+"' - не найдено поле: 'Улица'!
				|в адресе: "+сАдрес.Адрес+"
				|Заполните все необходимые поля перед отгрузкой!", 30);
				Отказ = истина;
			ИначеЕсли сАдрес.Дом= "" тогда
				Предупреждение("Ошибка по виду адреса '"+строка(сАдрес.Вид)+"' - не найдено поле: 'Дом'!
				|в адресе: "+сАдрес.Адрес+"
				|Заполните все необходимые поля перед отгрузкой!", 30);
				Отказ = истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;			
			//+++)
			
			Если НЕ Отказ тогда 
				ЛитыеДиски = Ложь;
				ЕстьДиски  = Ложь;
				ТаБдокД =  обДок.Товары.Выгрузить();
				ТабДокД.Свернуть("Номенклатура","Количество");
				массив = ТаБдокД.ВыгрузитьКолонку("Номенклатура");
				СписНом = Новый СписокЗначений;
				СписНом.ЗагрузитьЗначения(массив);
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("Контрагент",обДок.Контрагент);
				Запрос.УстановитьПараметр("Список",СписНом);
				Запрос.УстановитьПараметр("литые",Справочники.НоменклатурныеГруппы.НайтиПоКоду("00026"));
				Запрос.Текст = "ВЫБРАТЬ
				|	ЗаказыПокупателейОстатки.Номенклатура,
				|	СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.ЗаказыПокупателей.Остатки(,
				|			ДоговорКонтрагента.Владелец = &Контрагент
				|				И Номенклатура В (&Список)
				|				И Номенклатура.НоменклатурнаяГруппа = &литые) КАК ЗаказыПокупателейОстатки
				|
				|СГРУППИРОВАТЬ ПО
				|	ЗаказыПокупателейОстатки.Номенклатура";
				РезНом = Запрос.Выполнить().Выгрузить();
				
				Для каждого стрТД из РезНом Цикл
					Если стрТД.КоличествоОстаток >= 8 Тогда
						ЛитыеДиски = Истина;
						Прервать;
					КонецЕсли;
					Если стрТД.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Диски Тогда
						ЕстьДиски = истина;
					КонецЕсли;	
				КонецЦикла;
				
				//проверяем по всем адресам
				
				ЗапросАдреса = Новый Запрос;
				ЗапросАдреса.УстановитьПараметр("об",обДок.Контрагент);
				ЗапросАдреса.УстановитьПараметр("адр",Перечисления.ТипыКонтактнойИнформации.Адрес);
				ЗапросАдреса.Текст = "ВЫБРАТЬ
				|	КонтактнаяИнформация.Поле2
				|ИЗ
				|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
				|ГДЕ
				|	КонтактнаяИнформация.Объект = &об
				|	И КонтактнаяИнформация.Тип = &адр
				|	И (КонтактнаяИнформация.Поле2 ПОДОБНО ""%Москва%""
				|			ИЛИ КонтактнаяИнформация.Поле2 ПОДОБНО ""%Московск%"")";
				
				РезАдреса = ЗапросАдреса.Выполнить().Выгрузить();
				
				Если ЛитыеДиски и РезАдреса.Количество()>0 и не обДок.РазрешитьГрузитьДиски Тогда
					Предупреждение("Согласуйте заказ у Егора Малышева!!!");
					Отказ = истина;
				КонецЕсли;
			КонецЕсли;
			
			
			//+++( 18.12.2015 - по времени НА СЕРВЕРЕ
			ТекущаяДата1 = ОценкаПроизводительностиВызовСервераПолныеПрава.ДатаИВремяНаСервере();
			
			//+++  21.09.2016 ЗАПРЕТ отгрузки по закрытому договору на дату отгрузки (или текущую, если она больше)!
			текДата = макс(обДок.ДатаОтгрузки, ТекущаяДата1 );
			//Миронычев
			Если обДок.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.ПредоплатаПоСчетам тогда
				ПроверитьДоговорВЗаказеПокупателя(обДок, Отказ, Истина, текДата ); 
			КонецЕсли;
			//КонецМиронычев
			
			
			
			Если обДок.ОтгрузкаСПодразделенияСклада тогда
				Предупреждение("Нельзя ставить Заказ "+обДок.Номер+" - на отгрузку из Ярославля!
				|Этот заказ уже предназначен [v] для отгрузки со склада филиала:
				|"+сокрЛП(обДок.Склад.Подразделение.Наименование)+" !",30);
				Отказ = истина;
			КонецЕсли;					
			
			Если НЕ Отказ тогда
				Если //обДок.Контрагент.Код = "П000382" или СокрЛП(обДок.Контрагент.Код) = "94247"  тогда //19.04.2016
					//НЕ обДок.Контрагент.КонтрагентДляРезерваИМ.Пустая() тогда //05.07.2016 //123Заменить
					НЕ обДок.ДоговорКонтрагента.КонтрагентДляРезерваИМ.Пустая() тогда //05.07.2016
					
					услВремени =  (ТекущаяДата1 - началоДня(ТекущаяДата1) >17 * 3600 + 10*60); // 17:10
				иначе	
					услВремени =  (ТекущаяДата1 - началоДня(ТекущаяДата1) >16 * 3600 );    //16
				КонецЕсли;
				
				Для i=0 По  КатегорииОбъекта.Количество()-1 Цикл
					Если КатегорииОбъекта[i].принадлежность 
						и услВремени 
						и (КатегорииОбъекта[i].Категория.Наименование = "Интернет-Магазин"
						или КатегорииОбъекта[i].Категория.Наименование = "КолесаТУТ"
						или КатегорииОбъекта[i].Категория.Наименование = "Питер") тогда //07.09.2015 - только для ИМ
						
						Отказ =  НЕ (РольДоступна("ПолныеПрава")   // для полных прав - можно...
						или РольДоступна("МенеджерПоПродажамСОграничениемПравДоступа") ) ; //или для Логистов с 29.06.2016
						
						Если Отказ тогда                                 
							сообщить("НЕ УСТАНОВЛЕНА КАТЕГОРИЯ '"+КатегорииОбъекта[i].Категория.Наименование+"' !  Уже поздно устанавливать эту категорию на сегодня!", СтатусСообщения.ОченьВажное); // !!!
						иначе
							сообщить("Успешно установлена категория '"+КатегорииОбъекта[i].Категория.Наименование+"'.", СтатусСообщения.Информация);
						КонецЕсли;
						
						разница = (ТекущаяДата()-ТекущаяДата1);
						разница = ?(разница<0, -разница, разница);
						Если разница>60 тогда
							Предупреждение("Время на вашем компьютере: "+формат(ТекущаяДата(),"ДЛФ=T")+"
							|ОТЛИЧАЕТСЯ от времени на сервере: "+формат(ТекущаяДата1,"ДЛФ=T")+"
							|   более чем на "+строка( цел(разница/60) )+" минут!", 30);
						КонецЕсли;	
					//иначеЕсли КатегорииОбъекта[i].принадлежность и КатегорииОбъекта[i].Категория.Наименование = "ПЭК" и ЕстьДиски Тогда	
					//		Предупреждение("Транспортной компанией ПЭК диски отгружать нельзя!");
					//		отказ = истина;
					иначеЕсли КатегорииОбъекта[i].принадлежность и КатегорииОбъекта[i].Категория.Наименование = "ПЭК" Тогда
						Если не ЗначениеЗаполнено(обДок.транспортнаяКомпания) тогда
							Предупреждение("При отгрузке через транспортные компании, необходимо
							|УТОЧНИТЬ транспортную компанию на закладке Задание водителю");
							отказ = истина;
						иначеЕсли ЕстьДиски и 
							(обДок.транспортнаяКомпания = Справочники.Контрагенты.НайтиПоКоду("П002764") или  //ПЭК новый
							обДок.транспортнаяКомпания = Справочники.Контрагенты.НайтиПоКоду("92995") или     //ПЭК Северо-Запад
							обДок.транспортнаяКомпания = Справочники.Контрагенты.НайтиПоКоду("93604") или     //ПЭК Северо-Запад (Питер)
							обДок.транспортнаяКомпания = Справочники.Контрагенты.НайтиПоКоду("93857") или     //ПЭК Урал
							обДок.транспортнаяКомпания = Справочники.Контрагенты.НайтиПоКоду("93525")         //ПЭК Южный регион
							)
							и 
							обДок.Контрагент<>Справочники.Контрагенты.НайтиПоКоду("90229") //ШИНИНВЕСТ (Челябинск)+
							и 
							обДок.Контрагент<>Справочники.Контрагенты.НайтиПоКоду("П003027") //КОНТИ Калининград
							и 
							обДок.Контрагент<>Справочники.Контрагенты.НайтиПоКоду("П009210") //ТОРГШИНА Украина/«TORGSHINA» LTD
							тогда
							Предупреждение("Возить ТК ПЭК диски запрещено!!!");
							отказ = истина;	
						конецЕсли;
					КонецЕсли;
				КонецЦикла;
				//+++) 	
				
				//проверка лимита, дог.поручительства и просроченного долга > 7 дней
				ПроверитьПревышениеОбщегоЛимитаДЗСУчетомЗаказа(обДок, Отказ);
				
				
				//+++ надо проверять на св.остаток... если есть ОТХ - ВЫКЛЮЧАЕМ!
				/////////////////////////////Плотников
				Если ПроверитьРезервыОТХ(обДок) Тогда
					Предупреждение("Внимание! Товар частично находится на ОТХ,
					|  Заказ может отгрузиться не полностью.", 30);
					// 	Отказ = истина;
				КонецЕсли;
				
				Если обДок.Типзаказа = 12 Тогда  //Если есть не согласованая реклама, то грузить нельзя
					Для каждого стр из обДок.Товары Цикл
						Если стр.Статус <> Перечисления.СтатусыСтрокЗаказа.ПустаяСсылка() 
							и стр.Статус <> Перечисления.СтатусыСтрокЗаказа.Подтвержден Тогда
							Предупреждение("Внимание! Заказ на согласовании,
							|  Нельзя отгружать!!!", 30);
							Отказ = истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;				
				КонецЕсли;
				
				
				//Подарки
				Отбор = Новый Структура;
				Отбор.Вставить("Бонус",Ложь);
				
				Строки = обДок.Бонусы.НайтиСтроки(Отбор);
				
				Если Строки.Количество()>0 и не обДок.СогласованаТребованиеНакладная Тогда
					
					Предупреждение("Внимание! Подарки не согласованы,
					|  Нельзя отгружать!!!", 30);
					Отказ = истина;
					
				КонецЕсли;
				/////////////////////////////Плотников
				
				
				
				
				
			КонецЕсли;
			
			Если Отказ Тогда 
				
				Для i=0 По  КатегорииОбъекта.Количество()-1 Цикл
					Если КатегорииОбъекта[i].принадлежность 
						И НЕ КатегорииОбъекта[i].Категория.Наименование = "Расчёт поездки" Тогда
						Сообщить("Категорию отгрузки '"+КатегорииОбъекта[i].Категория.Наименование+"' - устанавливать нельзя!", СтатусСообщения.Внимание);
						КатегорииОбъекта[i].принадлежность = Ложь;  //выключаем!
					ИначеЕсли КатегорииОбъекта[i].принадлежность 
						И  КатегорииОбъекта[i].Категория.Наименование = "Расчёт поездки" Тогда
					КонецЕсли;	
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
	Исключение
	КонецПопытки;	
	
	// Запись категорий объекта и закрытие формы.
	Если ОбработкаОбъектКатегорииОбъекта.ЗаписатьКатегорииОбъекта() Тогда
		Модифицированность = Ложь;		
				
		//(+++ 23.09.2013
		Если ТипЗнч(ОбъектОтбораКатегорий)=Тип("ДокументСсылка.ЗаказПокупателя") тогда 	
			
			СписокЗаписей1 = ПолучитьКатегорииСтрокой(ОбъектОтбораКатегорий);
			Если СписокЗаписей0<>СписокЗаписей1 тогда
				НомерЗаписиВТранзакции = СтрЧислоВхождений(СписокЗаписей1,",") - СтрЧислоВхождений(СписокЗаписей0,",");
				
				ДобавитьИзменениеЖИ("Изменена Категория документа.", ОбъектОтбораКатегорий.Метаданные(), ОбъектОтбораКатегорий, "Изменены категории с: " + СписокЗаписей0+" на: "+СписокЗаписей1, НомерЗаписиВТранзакции);
			КонецЕсли;	
			
		//+++( 09.10.2017 --- изменеие флага! для учёта Лимита!--------------
		Если Найти(СписокЗаписей1,"Тендеры")=0 Тогда
			обДок = ОбъектОтбораКатегорий.получитьОбъект();
			обДок.Вмаршрут = (СтрЧислоВхождений(СписокЗаписей1,",")>0);//+++ 09.10.2017
			обДок.ОбменДанными.Загрузка = истина;
			обДок.Записать(); 
			обДок.ОбменДанными.Загрузка = ложь;
		КонецЕсли;
		//+++)
		
			ТекДата = ТекущаяДата1;
			СтараяДатаОтгрузки = ОбъектОтбораКатегорий.ДатаОтгрузки;
			НоваяДатаОтгрузки  = ?(СтараяДатаОтгрузки<НачалоДня(ТекДата), НачалоДня(ТекДата), СтараяДатаОтгрузки); // ТОЛЬКО в +
			
				//+++( 20.08.2014 - проверка как в реализации!
			СтараяДатаОплаты = НачалоДня(ОбъектОтбораКатегорий.ДатаОплаты);
			НоваяДатаОплаты  = НачалоДня(НоваяДатаОтгрузки) + ОбъектОтбораКатегорий.ЧислоДнейСМоментаОтгрузки*86400;
			
			// как в реализации
			услОплаты = ( ОбъектОтбораКатегорий.ЧислоДнейСМоментаОтгрузки>0 и НоваяДатаОплаты<>СтараяДатаОплаты )
			или ( НоваяДатаОплаты > СтараяДатаОплаты );   //Дата оплаты - только в +
			
			Если НЕ Отказ // только если можно менять...
				И (СтараяДатаОтгрузки<>НоваяДатаОтгрузки ИЛИ услОплаты) Тогда 
				
				попытка
					обДок = ОбъектОтбораКатегорий.получитьОбъект();
					
					Если СтараяДатаОтгрузки<>НоваяДатаОтгрузки тогда
						обДок.ДатаОтгрузки = НоваяДатаОтгрузки;
					КонецЕсли;
					Если услОплаты тогда
						обДок.ДатаОплаты = НоваяДатаОплаты;
					КонецЕсли;
										
					обДок.ВремяНапоминания  = ТекущаяДата();//+++ 02.04.2015 - дата последнего изменения
					обДок.НапомнитьОСобытии = ЛОЖЬ; //выключаем напоминания 10.04.2017
					
					//+++ 20.08.2014 - в режиме ПЕРЕзаписи БЕЗ перепроведения!
					обДок.ОбменДанными.Загрузка = истина;
					обДок.Записать(); 
					обДок.ОбменДанными.Загрузка = ложь;
					//+++ 20.08.2014 - в режиме загрузки!
					
					Если СтараяДатаОтгрузки<>НоваяДатаОтгрузки тогда
						сообщить("Дата отгрузки по документу "+?(НоваяДатаОтгрузки>СтараяДатаОтгрузки,"увеличена","уменьшена")+" автоматически с: "+формат(СтараяДатаОтгрузки,"ДЛФ=D")+" на "+формат(НоваяДатаОтгрузки,"ДЛФ=D"));
						ДобавитьИзменениеЖИ("Изменена Дата отгрузки документа.", ОбъектОтбораКатегорий.Метаданные(), ОбъектОтбораКатегорий, ?(НоваяДатаОтгрузки>СтараяДатаОтгрузки,"увеличена","уменьшена")+" дата отгрузки: "+формат(СтараяДатаОтгрузки,"ДЛФ=D")+">>"+формат(НоваяДатаОтгрузки,"ДЛФ=D"), 0);
					КонецЕсли;
					Если услОплаты тогда
						сообщить("Дата Оплаты по документу "+?(НоваяДатаОплаты>СтараяДатаОплаты,"увеличена","уменьшена")+" автоматически с: "+формат(СтараяДатаОплаты,"ДЛФ=D")+" на "+формат(НоваяДатаОплаты,"ДЛФ=D"));
						ДобавитьИзменениеЖИ("Изменена Дата Оплаты документа.", ОбъектОтбораКатегорий.Метаданные(), ОбъектОтбораКатегорий, ?(НоваяДатаОплаты>СтараяДатаОплаты,"увеличена","уменьшена")+" дата Оплаты: "+формат(СтараяДатаОплаты,"ДЛФ=D")+">>"+формат(НоваяДатаОплаты,"ДЛФ=D"), 0);
					КонецЕсли;
					
					
				исключение
					обДок.ОбменДанными.Загрузка = ложь;
					
					Если СтараяДатаОтгрузки<>НоваяДатаОтгрузки тогда
						сообщить("Невозможно "+?(НоваяДатаОтгрузки>СтараяДатаОтгрузки,"увеличить","уменьшить")+" дату отгрузки с "+формат(СтараяДатаОтгрузки,"ДЛФ=D")+" на "+формат(НоваяДатаОтгрузки,"ДЛФ=D")+" в документе: "+строка(обДок), СтатусСообщения.Внимание);
					КонецЕсли;
					Если услОплаты тогда
						сообщить("Невозможно "+?(НоваяДатаОплаты>СтараяДатаОтгрузки,"увеличить","уменьшить")+" дату Оплаты с "+формат(СтараяДатаОплаты,"ДЛФ=D")+" на "+формат(НоваяДатаОплаты,"ДЛФ=D")+" в документе: "+строка(обДок), СтатусСообщения.Внимание);
					КонецЕсли;
				КонецПопытки;
				
			КонецЕсли;
			
				
		КонецЕсли;
		//+++)
				
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

//+++ 23.09.2013
функция ПолучитьКатегорииСтрокой(СсылкаНаОбъект1)
	рез = "";
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КатегорииОбъектов.Категория
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК КатегорииОбъектов
	|ГДЕ
	|	КатегорииОбъектов.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", СсылкаНаОбъект1);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	  рез = рез + СокрЛП(строка(Выборка.Категория))+",";
	КонецЦикла;
	
	возврат рез;
КонецФункции	

//+++ 23.09.2013
процедура ДобавитьИзменениеЖИ( Событие, ОбъектМД, Объект, Комментарий, НомерЗаписиКолИзменений)
	МенеджерЗаписиЖурналаИзменений = РегистрыСведений.ЖурналИзменений.СоздатьМенеджерЗаписи();
	МенеджерЗаписиЖурналаИзменений.Событие = Событие;
	МенеджерЗаписиЖурналаИзменений.ОбъектМетаданных = ОбъектМД;
	МенеджерЗаписиЖурналаИзменений.Комментарий = Комментарий;
	МенеджерЗаписиЖурналаИзменений.Объект = Объект;
	МенеджерЗаписиЖурналаИзменений.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	МенеджерЗаписиЖурналаИзменений.Период = ТекущаяДата();
	МенеджерЗаписиЖурналаИзменений.НомерЗаписи = НомерЗаписиКолИзменений;
	МенеджерЗаписиЖурналаИзменений.Компьютер = ИмяКомпьютера();
	Попытка
		МенеджерЗаписиЖурналаИзменений.Записать(Истина);	//+++ 12.11.2014
	Исключение
		сообщить("невозможно записать дату изменения категории: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки; 
КонецПроцедуры


Функция ПроверитьРезервыОТХ(Объект) 
	
	//+++ 11.09.2014 - проверка РЕЗЕРВА и по филиалам!
	//Если Объект.Транзит тогда //ИЛИ НЕ Объект.Проверен Тогда // 14.11.2013 - проверять все заказы!
	//	Возврат;
	//Конецесли;	

//	Если СокрЛП(Объект.Контрагент.Код) ="93625"  Тогда // для резерва
//		Возврат;
//	Конецесли;	
//	Если яштПоЗаказуБылиРеализации( Объект.Ссылка ) Тогда // для отгруженных заказов резерв не проверяется ?
//		Возврат;
//	КонецЕсли;	
//	
ЗапросКБазе =Новый Запрос;
ЗапросКБазе.УстановитьПараметр( "Транзит", Объект.Транзит );//+++ 11.09.2014
ЗапросКБазе.УстановитьПараметр( "Подразделение", Объект.Подразделение );//+++ 11.09.2014

Если Объект.Транзит и (Объект.Подразделение.Пустая() или Объект.Подразделение.Код="00005") тогда // транзит на Склады с подразделением Ярославль?!
	ЗапросКБазе.УстановитьПараметр( "Подразделение", Справочники.Подразделения.НайтиПоКоду("00005") );
КонецЕсли;

ЗапросКБазе.Текст = "ВЫБРАТЬ
                    |	ЗаказПокупателяТовары.НомерСтроки,
                    |	ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
                    |	ЗаказПокупателяТовары.Количество
                    |ПОМЕСТИТЬ ВТ_ЗаказТовары
                    |ИЗ
                    |	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
                    |ГДЕ
                    |	ЗаказПокупателяТовары.Ссылка = &Ссылка
                    |;
                    |
                    |////////////////////////////////////////////////////////////////////////////////
                    |ВЫБРАТЬ
                    |	Склады.Ссылка
                    |ПОМЕСТИТЬ ВТ_Склады
                    |ИЗ
                    |	Справочник.Склады КАК Склады
                    |ГДЕ
                    |	Склады.Транзитный = &Транзит
                    |	И НЕ Склады.ЗапретитьИспользование
                    |	И (НЕ &Транзит
                    |			ИЛИ &Транзит
                    |				И Склады.Подразделение = &Подразделение)
                    |;
                    |
                    |////////////////////////////////////////////////////////////////////////////////
                    |ВЫБРАТЬ
                    |	А.Номенклатура,
                    |	СУММА(А.КоличествоОстаток) КАК КоличествоОстаток,
                    |	СУММА(А.КоличествоНаОТХ) КАК КоличествоНаОТХ
                    |ПОМЕСТИТЬ ВТ_ОстаткиНаСкладахИОТХ
                    |ИЗ
                    |	(ВЫБРАТЬ
                    |		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
                    |		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
                    |		0 КАК КоличествоНаОТХ
                    |	ИЗ
                    |		РегистрНакопления.ТоварыНаСкладах.Остатки(
                    |				,
                    |				Номенклатура В
                    |						(ВЫБРАТЬ
                    |							ВТ_ЗаказТовары.Номенклатура
                    |						ИЗ
                    |							ВТ_ЗаказТовары)
                    |					И Склад В
                    |						(ВЫБРАТЬ
                    |							ВТ_Склады.Ссылка
                    |						ИЗ
                    |							ВТ_Склады)) КАК ТоварыНаСкладахОстатки
                    |	
                    |	ОБЪЕДИНИТЬ ВСЕ
                    |	
                    |	ВЫБРАТЬ
                    |		ТоварыНаОтветственномХранении.Номенклатура,
                    |		0,
                    |		ТоварыНаОтветственномХранении.КоличествоОстаток
                    |	ИЗ
                    |		РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
                    |				,
                    |				Номенклатура В
                    |						(ВЫБРАТЬ
                    |							ВТ_ЗаказТовары.Номенклатура
                    |						ИЗ
                    |							ВТ_ЗаказТовары)
                    |					И Склад В
                    |						(ВЫБРАТЬ
                    |							ВТ_Склады.Ссылка
                    |						ИЗ
                    |							ВТ_Склады)
                    |					И Контрагент В (&СписокКонтрагентовОТХ)) КАК ТоварыНаОтветственномХранении) КАК А
                    |
                    |СГРУППИРОВАТЬ ПО
                    |	А.Номенклатура
                    |;
                    |
                    |////////////////////////////////////////////////////////////////////////////////
                    |ВЫБРАТЬ
                    |	ВТ_ЗаказТовары.НомерСтроки,
                    |	ВТ_ЗаказТовары.Номенклатура,
                    |	ВТ_ЗаказТовары.Количество КАК КоличествоВЗаказе,
                    |	ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) КАК КоличествоЗаказано,
                    |	ЕСТЬNULL(ВТ_ОстаткиНаСкладахИОТХ.КоличествоОстаток, 0) КАК КоличествоОстаток,
                    |	ЕСТЬNULL(ВТ_ОстаткиНаСкладахИОТХ.КоличествоНаОТХ, 0) КАК КоличествоНаОТХ,
                    |	ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) - ЕСТЬNULL(ВТ_ОстаткиНаСкладахИОТХ.КоличествоОстаток, 0) КАК КоличествоНеХватает,
                    |	ОстаткиСтороннихПоставщиков.СрокДоставки КАК СрокДоставки,
                    |	ОстаткиСтороннихПоставщиков.Контрагент КАК Контрагент,
                    |	ЕСТЬNULL(ОстаткиСтороннихПоставщиков.Остаток, 0) КАК КолПост
                    |ИЗ
                    |	ВТ_ЗаказТовары КАК ВТ_ЗаказТовары
                    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНаСкладахИОТХ КАК ВТ_ОстаткиНаСкладахИОТХ
                    |		ПО ВТ_ЗаказТовары.Номенклатура = ВТ_ОстаткиНаСкладахИОТХ.Номенклатура
                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
                    |				,
                    |				ЗаказПокупателя.Проверен
                    |					И Номенклатура В
                    |						(ВЫБРАТЬ
                    |							ВТ_ЗаказТовары.Номенклатура
                    |						ИЗ
                    |							ВТ_ЗаказТовары)
                    |					И ЗаказПокупателя.Транзит = &Транзит
                    |					И (НЕ &Транзит
                    |						ИЛИ &Транзит
                    |							И ЗаказПокупателя.Подразделение = &Подразделение)) КАК ЗаказыПокупателей
                    |		ПО ВТ_ЗаказТовары.Номенклатура = ЗаказыПокупателей.Номенклатура
                    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                    |			ЕСТЬNULL(СрокиДоставки.СрокДоставки, 0) КАК СрокДоставки,
                    |			СрокиДоставки.Поставщик КАК Контрагент,
                    |			ОстаткиНоменклатурыКонтрагентов.Номенклатура КАК Номенклатура,
                    |			ОстаткиНоменклатурыКонтрагентов.Остаток КАК Остаток
                    |		ИЗ
                    |			РегистрСведений.СрокиДоставки КАК СрокиДоставки
                    |				ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                    |					ОстНомКонтр.Контрагент КАК Контрагент,
                    |					ОстНомКонтр.Номенклатура КАК Номенклатура,
                    |					ОстНомКонтр.Подразделение КАК Подразделение,
                    |					ОстНомКонтр.Остаток КАК Остаток
                    |				ИЗ
                    |					РегистрСведений.ОстаткиНоменклатурыКонтрагентов КАК ОстНомКонтр
                    |				ГДЕ
                    |					ОстНомКонтр.Контрагент В
                    |							(ВЫБРАТЬ РАЗЛИЧНЫЕ
                    |								сроки.Поставщик
                    |							ИЗ
                    |								РегистрСведений.СрокиДоставки КАК сроки
                    |							ГДЕ
                    |								НЕ сроки.ОТХ)
                    |					И ОстНомКонтр.Номенклатура В
                    |							(ВЫБРАТЬ
                    |								ВТ_ЗаказТовары.Номенклатура
                    |							ИЗ
                    |								ВТ_ЗаказТовары)
                    |					И (НЕ &Транзит
                    |								И ОстНомКонтр.Подразделение = &ПустоеПодразделение
                    |							ИЛИ &Транзит
                    |								И ОстНомКонтр.Подразделение = &Подразделение)
                    |					И ОстНомКонтр.Остаток > 0) КАК ОстаткиНоменклатурыКонтрагентов
                    |				ПО СрокиДоставки.Поставщик = ОстаткиНоменклатурыКонтрагентов.Контрагент
                    |					И (НЕ СрокиДоставки.ОТХ)) КАК ОстаткиСтороннихПоставщиков
                    |		ПО ВТ_ЗаказТовары.Номенклатура = ОстаткиСтороннихПоставщиков.Номенклатура
                    |ГДЕ
                    |	ВТ_ЗаказТовары.Количество + ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) - ЕСТЬNULL(ВТ_ОстаткиНаСкладахИОТХ.КоличествоОстаток, 0) > 0
                    |;
                    |
                    |////////////////////////////////////////////////////////////////////////////////
                    |УНИЧТОЖИТЬ ВТ_ЗаказТовары
                    |;
                    |
                    |////////////////////////////////////////////////////////////////////////////////
                    |УНИЧТОЖИТЬ ВТ_Склады
                    |;
                    |
                    |////////////////////////////////////////////////////////////////////////////////
                    |УНИЧТОЖИТЬ ВТ_ОстаткиНаСкладахИОТХ";
	
СписокКонтрагентовОТХ = Новый СписокЗначений;
СписокКонтрагентовОТХ = яштПоставщики.ПолучитьСписокПоставщиков(Истина);//+++13.10.2014
ЗапросКБазе.УстановитьПараметр("СписокКонтрагентовОТХ",СписокКонтрагентовОТХ);
ЗапросКБазе.УстановитьПараметр("ПустоеПодразделение",справочники.Подразделения.ПустаяСсылка() );

ЗапросКБазе.УстановитьПараметр("Ссылка", Объект.Ссылка);

//+++ 15.01.2016 - не надо брать заказы КонтрагентаИМ - тогда св.остаток Увеличится!
//Если НЕ Объект.Ссылка.Контрагент.КонтрагентДляРезерваИМ.Пустая() тогда //123Заменить
Если НЕ Объект.Ссылка.ДоговорКонтрагента.КонтрагентДляРезерваИМ.Пустая() тогда

	ЗапросКБазе.текст = стрЗаменить(ЗапросКБазе.текст ,"//ОстаткиРезерваИМ", " ОБЪЕДИНИТЬ ВСЕ
                    |	ВЫБРАТЬ
                    |		РезервДляИМ.Номенклатура,
                    |		РезервДляИМ.КоличествоОстаток,
                    |		0
                    |	ИЗ
                    |		РегистрНакопления.РезервДляИМ.Остатки( ,
                    |				КонтрагентДляРезерваИМ = &КлиентИМ
					|				И Подразделение = &Подразделение
                    |					И Номенклатура В (ВЫБРАТЬ
                    |							ВТ_ЗаказТовары.Номенклатура
                    |						 ИЗ ВТ_ЗаказТовары)) КАК РезервДляИМ
					|"); //активируем!
	//ЗапросКБазе.УстановитьПараметр("КлиентИМ",Объект.Ссылка.Контрагент.КонтрагентДляРезерваИМ); //123Заменить
	ЗапросКБазе.УстановитьПараметр("КлиентИМ",Объект.Ссылка.ДоговорКонтрагента.КонтрагентДляРезерваИМ);
	ЗапросКБазе.УстановитьПараметр("Подразделение", Объект.Ссылка.Подразделение );
КонецЕсли;

	Результат=ЗапросКБазе.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл	
		Если Выборка.КоличествоНеХватает>0  и Выборка.КоличествоНаОТХ>0 Тогда
			Сообщить("Товар " + Выборка.Номенклатура.наименование+ " находится на ОТХ");
			Возврат Истина;
		КонецЕсли;		
	КонецЦикла;		
	Возврат Ложь;		

КонецФункции	
