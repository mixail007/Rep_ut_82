////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура УправлениеКолонкамиПараметры()

	ЭлементыФормы.Параметры.Колонки.ЗначениеПараметра.ЭлементУправления.ВыбиратьТип = (ЭлементыФормы.Параметры.ТекущаяСтрока.ЭтоВыражение = Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриОК(Элемент)
    Текст = ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
	Закрыть(Истина);
КонецПроцедуры

Процедура ПриОткрытии()
	ЭлементыФормы.ТекстЗапроса.УстановитьТекст(Текст);
	Если ПредставленияДляИмен = Неопределено Тогда
		ПредставленияДляИмен = Новый Соответствие;
	КонецЕсли;
	Если ФорматыДляИмен = Неопределено Тогда
		ФорматыДляИмен = Новый Соответствие;
	КонецЕсли;
	
	Если ОтчетРасшифровки <> Неопределено Тогда	
		ОтчетРасшифровкиРедактор = СтрЗаменить(ОтчетРасшифровки, Символы.ПС, "/");
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьНажатие(Элемент)
    Перем ПостроительОтчетов;

	ПостроительОтчетов = Новый ПостроительОтчета;
	Попытка
		ПостроительОтчетов.Текст = ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
	Исключение
        Предупреждение(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

Процедура ПараметрыЭтоВыражениеПриИзменении(Элемент)
	Если ЭлементыФормы.Параметры.ТекущаяСтрока.ЭтоВыражение = Истина Тогда
		Если Не ТипЗнч(ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра) = Тип("Строка") Тогда
			ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра = "";
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.Параметры.ТекущаяСтрока.ЭтоВыражение = 2 Тогда
		Если Не ТипЗнч(ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра) = Тип("СписокЗначений") Тогда
			ЗначениеПараметра = ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра;
			ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра = Новый СписокЗначений;
			Если ЗначениеПараметра <> Неопределено Тогда
				ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра.Добавить(ЗначениеПараметра);
			КонецЕсли;
		КонецЕсли; 
	Иначе
		Если ТипЗнч(ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра) = Тип("СписокЗначений") Тогда
			Если ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра.Количество() <> 0 Тогда
				ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра = ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра[0].Значение;
			Иначе
				ЭлементыФормы.Параметры.ТекущаяСтрока.ЗначениеПараметра = Неопределено;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	УправлениеКолонкамиПараметры();
КонецПроцедуры

Процедура КоманднаяПанель2КонструкторЗапросов(Кнопка)
	КонструкторЗапроса = Новый КонструкторЗапроса;
	КонструкторЗапроса.АвтодобавлениеПредставлений = Истина;
	Попытка
		ТекстЗапроса = ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
		Если ТекстЗапроса <> "" Тогда
			КонструкторЗапроса.Текст = ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
		КонецЕсли;
		
		Если КонструкторЗапроса.ОткрытьМодально() Тогда
			ЭлементыФормы.ТекстЗапроса.УстановитьТекст(КонструкторЗапроса.Текст);
		КонецЕсли;
	Исключение
        Предупреждение(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

Процедура ЗапросПриСменеСтраницы(Элемент, ТекущаяСтраница)
    Перем ПостроительОтчетов;

	Если ТекущаяСтраница = 2 Тогда
		Представления.Очистить();
		ПостроительОтчетов = Новый ПостроительОтчета;
		Попытка
			ПостроительОтчетов.Текст = ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
			Если АвтоЗаполнение Тогда 
				ПостроительОтчетов.ЗаполнитьНастройки();
			КонецЕсли;

			КолВо = ПостроительОтчетов.ДоступныеПоля.Количество();
			Для тп = 0 По КолВо - 1 Цикл
				Поле = ПостроительОтчетов.ДоступныеПоля[тп];
				НоваяСтрока = Представления.Добавить();
				НоваяСтрока.Поле = Поле.Имя;
				
				Если ПредставленияДляИмен[Поле.Имя] <> Неопределено Тогда
					НоваяСтрока.Представление = ПредставленияДляИмен[Поле.Имя];
				Иначе
					НоваяСтрока.Представление = Поле.Имя;
				КонецЕсли;
				
				Если ФорматыДляИмен[Поле.Имя] <> Неопределено Тогда
					НоваяСтрока.Формат = ФорматыДляИмен[Поле.Имя];
				КонецЕсли;
			КонецЦикла;
		Исключение
	        Предупреждение(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура ПредставленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Элемент.ТекущаяСтрока.Представление <> "" Тогда
		ПредставленияДляИмен.Вставить(Элемент.ТекущаяСтрока.Поле, Элемент.ТекущаяСтрока.Представление);
	Иначе
		ПредставленияДляИмен.Удалить(Элемент.ТекущаяСтрока.Поле);
	КонецЕсли;
	
	Если Элемент.ТекущаяСтрока.Формат <> "" Тогда
		ФорматыДляИмен.Вставить(Элемент.ТекущаяСтрока.Поле, Элемент.ТекущаяСтрока.Формат);
	Иначе
		ФорматыДляИмен.Удалить(Элемент.ТекущаяСтрока.Поле);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтчетРасшифровкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	ФормаВыбораОтчета = ПолучитьФорму("ФормаВыбораОтчета", ВладелецФормы);
	ТС = НайтиСтрокуПоПути(ОтчетРасшифровки);
	Если ТС <> Неопределено Тогда
		ФормаВыбораОтчета.ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока = ТС;
	КонецЕсли;

	Если ФормаВыбораОтчета.ОткрытьМодально() = Истина Тогда
		ВыбранныйОтчет = ФормаВыбораОтчета.ЭлементыФормы.ДеревоОтчетов.ТекущаяСтрока;
		ОтчетРасшифровки = ПолучитьПутьСтроки(ВыбранныйОтчет);
		ОтчетРасшифровкиРедактор = СтрЗаменить(ОтчетРасшифровки, Символы.ПС, "/");
	КонецЕсли;
КонецПроцедуры

Процедура ПредставленияФорматНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Конструктор = Новый КонструкторФорматнойСтроки;
	Конструктор.Текст = Элемент.Значение;
	Если Конструктор.ОткрытьМодально() Тогда
		Элемент.Значение = Конструктор.Текст;
	КонецЕсли;
КонецПроцедуры

Процедура ПараметрыПриНачалеРедактирования(Элемент, НоваяСтрока)
	Если НоваяСтрока Тогда 
		Элемент.ТекущаяСтрока.ЭтоВыражение = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ПараметрыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Перем ЭлементСписка;
	ЭлементСписка = Элемент.Колонки.ЭтоВыражение.ЭлементУправления.СписокВыбора.НайтиПоЗначению(ДанныеСтроки.ЭтоВыражение);
	
	Если ЭлементСписка <> Неопределено Тогда 
		ОформлениеСтроки.Ячейки.ЭтоВыражение.Текст = ЭлементСписка.Представление;
	КонецЕсли;
КонецПроцедуры
