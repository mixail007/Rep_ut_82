Перем ТаблЗнач;


Процедура КоманднаяПанель1ЗаполнитьКлиентов(Кнопка)
	Отказ = Ложь;
	Если ПустаяСтрока(ЭлементыФормы.Период.Значение) Тогда
		Сообщить("Заполните период опроса");
		Отказ = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Менеджер) Тогда
		ЭлементыФормы.Клиенты.Колонки.Менеджер.Видимость = Истина;
	Иначе
		ЭлементыФормы.Клиенты.Колонки.Менеджер.Видимость = Ложь;
	КонецЕсли;
	Если Отказ = Ложь Тогда	
		ЗаполнитьКлиентовНаСервере();
	КонецЕсли;
КонецПроцедуры

Процедура КлиентыПриАктивизацииСтроки(Элемент)
	Если Не Элемент.ТекущиеДанные = Неопределено  Тогда
		ЭлементыФормы.ВопросыДляКлиентов.ОтборСтрок.Клиент.Установить(Элемент.ТекущиеДанные.Клиент);
	КонецЕсли;
КонецПроцедуры


Процедура ПериодНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
//	СтандартнаяОбработка = Ложь;
	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.Добавить(Формат('20160601',"ДФ='ММММ гггг'"));
	Элемент.СписокВыбора.Добавить(Формат('20160801',"ДФ='ММММ гггг'"));
	Элемент.СписокВыбора.Добавить(Формат('20170101',"ДФ='ММММ гггг'"));
	Элемент.СписокВыбора.Добавить(Формат('20170601',"ДФ='ММММ гггг'"));
	Элемент.СписокВыбора.Добавить(Формат('20170801',"ДФ='ММММ гггг'"));
	Элемент.СписокВыбора.Добавить(Формат('20180101',"ДФ='ММММ гггг'"));
	Элемент.СписокВыбора.Добавить(Формат('20180601',"ДФ='ММММ гггг'"));
	Элемент.СписокВыбора.Добавить(Формат('20180801',"ДФ='ММММ гггг'"));
	Элемент.СписокВыбора.Добавить(Формат('20190101',"ДФ='ММММ гггг'"));
	ТаблЗнач = Новый Массив;
	ТаблЗнач.Добавить('20160601');
	ТаблЗнач.Добавить('20160801');
	ТаблЗнач.Добавить('20170101');
	ТаблЗнач.Добавить('20170601');
	ТаблЗнач.Добавить('20170801');
	ТаблЗнач.Добавить('20180101');
    ТаблЗнач.Добавить('20180601');
    ТаблЗнач.Добавить('20180801');
    ТаблЗнач.Добавить('20190101');

  КонецПроцедуры

Процедура КоманднаяПанель1ЗаписатьОтветы(Кнопка)
	ПараметрыОтбора = Новый Структура("ОпросЗакончен",Истина);
	ТЗКлиентов = Клиенты.Выгрузить(ПараметрыОтбора,"Клиент");
	ЕстьДанныеДляЗаписи = Ложь;
	Для Каждого СтрКлиент из Клиенты Цикл
		Если СтрКлиент.СтатусОпроса <> Перечисления.СтатусОпросаКлиента.ПустаяСсылка() Тогда
			ЕстьДанныеДляЗаписи = Истина;
		КонецЕсли;
	КонецЦикла;	
	Если  ТЗКлиентов.Количество() = 0 и ЕстьДанныеДляЗаписи = Ложь Тогда
		Сообщить("Нет данных для записи. Не один опрос не завершен!",СтатусСообщения.Внимание);
        Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Клиенты.Клиент
	|ПОМЕСТИТЬ Клиенты
	|ИЗ
	|	&Клиенты КАК Клиенты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вопросы.Вопрос,
	|	Вопросы.Ответ,
	|	Вопросы.Клиент,
	|	Вопросы.Комментарий,
	|	Вопросы.КритерийКлиента
	|ПОМЕСТИТЬ ВопросыВсе
	|ИЗ
	|	&Вопросы КАК Вопросы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВопросыВсе.Вопрос,
	|	ВопросыВсе.Ответ,
	|	ВопросыВсе.Клиент,
	|	ВопросыВсе.Комментарий,
	|	ВопросыВсе.КритерийКлиента
	|ИЗ
	|	ВопросыВсе КАК ВопросыВсе
	|ГДЕ
	|	ВопросыВсе.Клиент В
	|			(ВЫБРАТЬ
	|				Клиенты.Клиент
	|			ИЗ
	|				Клиенты КАК Клиенты)";
	ПараметрыОтбора = Новый Структура("ОпросЗакончен",Истина);
	ТЗКлиентов = Клиенты.Выгрузить(ПараметрыОтбора,"Клиент,Менеджер");
	Запрос.УстановитьПараметр("Клиенты",ТЗКлиентов);
	Запрос.УстановитьПараметр("Вопросы",ВопросыДляКлиентов.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	НаборЗаписей = РегистрыСведений.ОтветыНаВопросыКлиента.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Период); 
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей = РегистрыСведений.ОтветыНаВопросыКлиента.СоздатьНаборЗаписей();
	    НаборЗаписей.Отбор.Период.Установить(Период); 
        НаборЗаписей.Отбор.Клиент.Установить(Выборка.Клиент); 
        НаборЗаписей.Отбор.Вопрос.Установить(Выборка.Вопрос); 
        НаборЗаписей.Отбор.Менеджер.Установить(Выборка.Клиент.ОсновнойМенеджерКонтрагента); 
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Период = Период;
		НоваяЗапись.Менеджер = Выборка.Клиент.ОсновнойМенеджерКонтрагента;
		НоваяЗапись.Клиент = Выборка.Клиент; 
		НоваяЗапись.Вопрос = Выборка.Вопрос; 
		НоваяЗапись.ВидКлиента = Выборка.КритерийКлиента; 
		Если Выборка.Вопрос.ПроизвольнаяФормаОтвета Тогда
			НоваяЗапись.ОтветНаВопрос = Выборка.Ответ;
		Иначе
			НоваяЗапись.ОтветНаВопрос = Выборка.Ответ;
			Если Выборка.Ответ = Истина и Не Выборка.Вопрос.НачислениеБалловЗаОтвет Тогда
				НоваяЗапись.Коэффициент = 1;
			ИначеЕсли  Выборка.Ответ = Ложь и Выборка.Вопрос.НачислениеБалловЗаОтвет Тогда
                НоваяЗапись.Коэффициент = 1;
            Иначе
				НоваяЗапись.Коэффициент = 0;
			КонецЕсли;
			НоваяЗапись.МаксимальныйВес = Выборка.Вопрос.Вес;
		КонецЕсли;
		НоваяЗапись.Комментарий = Выборка.Комментарий;
		НаборЗаписей.Записать();
	КонецЦикла; 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Клиенты.Клиент,
	|	Клиенты.СтатусОпроса,
	|	Клиенты.КритерийКлиента
	|ПОМЕСТИТЬ Клиенты
	|ИЗ
	|	&Клиенты КАК Клиенты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Клиенты.Клиент,
	|	Клиенты.СтатусОпроса,
	|	Клиенты.КритерийКлиента
	|ИЗ
	|	Клиенты КАК Клиенты
	|ГДЕ
	|	Клиенты.СтатусОпроса <> ЗНАЧЕНИЕ(Перечисление.СтатусОпросаКлиента.ПустаяСсылка)"  ;
	ТЗКлиентов = Клиенты.Выгрузить(,"Клиент,СтатусОпроса,КритерийКлиента");
    Запрос.УстановитьПараметр("Клиенты", ТЗКлиентов);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	НаборЗаписей = РегистрыСведений.СтатусыОпросаКлиента.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПериодОпроса.Установить(Период); 
    НаборЗаписей.Отбор.Период.Установить(ТекущаяДата());
	Пока Выборка.Следующий() Цикл 	
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Период = ТекущаяДата();
		НоваяЗапись.ПериодОпроса = Период;
		НоваяЗапись.Контрагент = Выборка.Клиент; 
		НоваяЗапись.ВидКлиента = Выборка.КритерийКлиента; 
		НоваяЗапись.Статус = Выборка.СтатусОпроса; 
	КонецЦикла; 
	НаборЗаписей.Записать();
    Сообщить("Данные записаны");

	//ЗаполнитьКлиентовНаСервере()
КонецПроцедуры


Процедура ПериодПриИзменении(Элемент)
	Для i=0 по ЭлементыФормы.Период.СписокВыбора.Количество()-1 Цикл 
		Если ЭлементыФормы.Период.СписокВыбора[i].Значение = Элемент.Значение Тогда
			Период = ТаблЗнач[i];
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьКлиентовНаСервере()
	Клиенты.Очистить();
	ВопросыДляКлиентов.Очистить();
	Запрос = Новый Запрос;
	ДатаКон = КонецДня(ТекущаяДата()-24*60*60);
	ДатаНач =  ДобавитьМесяц(НачалоДня(ДатаКон),-6);
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	Запрос.УстановитьПараметр("Период",Период);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтветыНаВопросыКлиента.Клиент
	|ПОМЕСТИТЬ ОпрошенныеКлиенты
	|ИЗ
	|	РегистрСведений.ОтветыНаВопросыКлиента КАК ОтветыНаВопросыКлиента
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ОтветыНаВопросыКлиента.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	И ВЫБОР
	|			КОГДА &Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ТОГДА ОтветыНаВопросыКлиента.Менеджер = &Менеджер
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Клиент
	|ПОМЕСТИТЬ ВТОбъемПродаж
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			НЕ ДоговорКонтрагента.Владелец В
	|					(ВЫБРАТЬ
	|						ОпрошенныеКлиенты.Клиент
	|					ИЗ
	|						ОпрошенныеКлиенты КАК ОпрошенныеКлиенты)) КАК ПродажиОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ТОГДА ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента = &Менеджер
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъемПродаж.СтоимостьОборот,
	|	ВТОбъемПродаж.Клиент,
	|	ВТОбъемПродаж.Клиент.ОсновнойМенеджерКонтрагента КАК Менеджер,
	|	2 КАК КритерийКлиента
	|ПОМЕСТИТЬ Объемообразующие
	|ИЗ
	|	ВТОбъемПродаж КАК ВТОбъемПродаж
	|ГДЕ
	|	ВТОбъемПродаж.СтоимостьОборот >= 3000000
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Клиент,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажиОбороты.ДокументПродажи) КАК КоличествоПродаж
	|ПОМЕСТИТЬ ВТОбъемПродаж1
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			НЕ ДоговорКонтрагента.Владелец В
	|					(ВЫБРАТЬ
	|						ОпрошенныеКлиенты.Клиент
	|					ИЗ
	|						ОпрошенныеКлиенты КАК ОпрошенныеКлиенты)) КАК ПродажиОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ТОГДА ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента = &Менеджер
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъемПродаж1.Клиент,
	|	ВТОбъемПродаж1.КоличествоПродаж,
	|	ВТОбъемПродаж1.Клиент.ОсновнойМенеджерКонтрагента КАК Менеджер,
	|	1 КАК КритерийКлиента
	|ПОМЕСТИТЬ Постоянные
	|ИЗ
	|	ВТОбъемПродаж1 КАК ВТОбъемПродаж1
	|ГДЕ
	|	ВТОбъемПродаж1.КоличествоПродаж >= &МинКоличествоПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОбъемПродаж1.Клиент,
	|	ВТОбъемПродаж1.КоличествоПродаж,
	|	ВТОбъемПродаж1.Клиент.ОсновнойМенеджерКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Клиент,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажиОбороты.ДокументПродажи) КАК КоличествоПродаж
	|ПОМЕСТИТЬ ВТОбъемПродаж2
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			НЕ ДоговорКонтрагента.Владелец В
	|					(ВЫБРАТЬ
	|						ОпрошенныеКлиенты.Клиент
	|					ИЗ
	|						ОпрошенныеКлиенты КАК ОпрошенныеКлиенты)) КАК ПродажиОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ТОГДА ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента = &Менеджер
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК СтоимостьОборот,
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец КАК Клиент,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажиОбороты.ДокументПродажи) КАК КоличествоПродаж
	|ПОМЕСТИТЬ ВТРазовикЗаПоследнийМесяц
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&ДатаКонДоп,
	|			&ДатаКон,
	|			,
	|			ДоговорКонтрагента.Владелец В
	|				(ВЫБРАТЬ
	|					ВТОбъемПродаж2.Клиент
	|				ИЗ
	|					ВТОбъемПродаж2 КАК ВТОбъемПродаж2)) КАК ПродажиОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ТОГДА ПродажиОбороты.ДоговорКонтрагента.Владелец.ОсновнойМенеджерКонтрагента = &Менеджер
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.ДоговорКонтрагента.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъемПродаж2.Клиент,
	|	ВТОбъемПродаж2.КоличествоПродаж,
	|	ВТОбъемПродаж2.Клиент.ОсновнойМенеджерКонтрагента КАК Менеджер,
	|	3 КАК КритерийКлиента
	|ПОМЕСТИТЬ Разовый
	|ИЗ
	|	ВТОбъемПродаж2 КАК ВТОбъемПродаж2
	|ГДЕ
	|	ВТОбъемПродаж2.КоличествоПродаж = 1
	|	И НЕ ВТОбъемПродаж2.Клиент В
	|				(ВЫБРАТЬ
	|					ВТРазовикЗаПоследнийМесяц.Клиент
	|				ИЗ
	|					ВТРазовикЗаПоследнийМесяц КАК ВТРазовикЗаПоследнийМесяц)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Разовый.Клиент,
	|	Разовый.КоличествоПродаж,
	|	Разовый.Менеджер,
	|	Разовый.КритерийКлиента,
	|	NULL КАК СтоимостьОборот
	|ПОМЕСТИТЬ ВтОбщая
	|ИЗ
	|	Разовый КАК Разовый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Постоянные.Клиент,
	|	Постоянные.КоличествоПродаж,
	|	Постоянные.Менеджер,
	|	Постоянные.КритерийКлиента,
	|	NULL
	|ИЗ
	|	Постоянные КАК Постоянные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Объемообразующие.Клиент,
	|	NULL,
	|	Объемообразующие.Менеджер,
	|	Объемообразующие.КритерийКлиента,
	|	Объемообразующие.СтоимостьОборот
	|ИЗ
	|	Объемообразующие КАК Объемообразующие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОбщая.Клиент,
	|	ВтОбщая.Менеджер,
	|	МАКСИМУМ(ВтОбщая.КритерийКлиента) КАК КритерийКлиента
	|ИЗ
	|	ВтОбщая КАК ВтОбщая
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтОбщая.Клиент,
	|	ВтОбщая.Менеджер";
	
	КОличествоДней = (ДатаКон - ДатаНач)/ 86400;
	КоличествоНедель = Цел(КОличествоДней/7);	
	МинКоличествоОтгрузок = КоличествоНедель * 2;
	
	Запрос.УстановитьПараметр("ДатаКон",ДатаКон);
	Запрос.УстановитьПараметр("ДатаНач",ДатаНач);
	Запрос.УстановитьПараметр("МинКоличествоПродаж",МинКоличествоОтгрузок);
	Запрос.УстановитьПараметр("ДатаКонДоп",ДобавитьМесяц(ДатаКон,-1));
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗКлиентов = РезультатЗапроса.Выгрузить();
	//МассивКлиентов = ТЗКлиентов.ВыгрузитьКОлонку("Клиент");
	//СписокКлиентов = Новый СписокЗначений;
	//СписокКлиентов.ЗагрузитьЗначения(МассивКлиентов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗКлиенты.Клиент,
	|	ТЗКлиенты.Менеджер,
	|	ТЗКлиенты.КритерийКлиента
	|ПОМЕСТИТЬ ВТКлиенты
	|ИЗ
	|	&ТЗКлиенты КАК ТЗКлиенты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтактныеЛица.Наименование КАК КонтактноеЛицоФИО,
	|	КонтактныеЛица.Ссылка КАК КонтактноеЛицоСсылка,
	|	ВТКлиенты.Клиент КАК Клиент,
	|	КонтактныеЛица.Должность,
	|	ВТКлиенты.Клиент КАК Клиент1,
	|	ВТКлиенты.Менеджер,
	|	ВТКлиенты.КритерийКлиента
	|ПОМЕСТИТЬ ВТКонтЛицо
	|ИЗ
	|	ВТКлиенты КАК ВТКлиенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛица КАК КонтактныеЛица
	|		ПО ВТКлиенты.Клиент = КонтактныеЛица.ОбъектВладелец
	|ГДЕ
	|	КонтактныеЛица.ОбъектВладелец В
	|			(ВЫБРАТЬ
	|				ВТКлиенты.Клиент
	|			ИЗ
	|				ВТКлиенты КАК ВТКлиенты)
	|	И КонтактныеЛица.Роль = ЗНАЧЕНИЕ(Справочник.РолиКонтактныхЛиц.Менеджер)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтактнаяИнформация.Объект КАК КонтактноеЛицо,
	|	КонтактнаяИнформация.Представление КАК Телефон
	|ПОМЕСТИТЬ ВТТелефоны
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект В
	|			(ВЫБРАТЬ
	|				ВТКонтЛицо.КонтактноеЛицоСсылка
	|			ИЗ
	|				ВТКонтЛицо КАК ВТКонтЛицо)
	|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТКонтЛицо.Клиент КАК Клиент,
	|	ВТКонтЛицо.КонтактноеЛицоФИО КАК КонтактноеЛицо,
	|	ВТТелефоны.Телефон,
	|	ВТКонтЛицо.Должность,
	|	ЕСТЬNULL(СтатусыОпросаКлиентаСрезПоследних.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусОпросаКлиента.ПустаяСсылка)) КАК СтатусОпроса,
	|	ВТКонтЛицо.Менеджер КАК Менеджер,
	|	ВТКонтЛицо.КритерийКлиента КАК КритерийКлиента
	|ИЗ
	|	ВТКонтЛицо КАК ВТКонтЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТелефоны КАК ВТТелефоны
	|		ПО ВТКонтЛицо.КонтактноеЛицоСсылка = ВТТелефоны.КонтактноеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОпросаКлиента.СрезПоследних(
	|				&ТекДата,
	|				Контрагент В
	|						(ВЫБРАТЬ
	|							ВТКлиенты.Клиент
	|						ИЗ
	|							ВТКлиенты КАК ВТКлиенты)
	|					И ПериодОпроса = &Период) КАК СтатусыОпросаКлиентаСрезПоследних
	|		ПО ВТКонтЛицо.Клиент = СтатусыОпросаКлиентаСрезПоследних.Контрагент
	|ИТОГИ
	|	МИНИМУМ(СтатусОпроса),
	|	МИНИМУМ(Менеджер),
	|	МАКСИМУМ(КритерийКлиента)
	|ПО
	|	Клиент";
	Запрос.УстановитьПараметр("ТЗКлиенты",ТЗКлиентов);
	Запрос.УстановитьПараметр("Период",Период);
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКлиент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока ВыборкаКлиент.Следующий() Цикл
		НоваяСтр = Клиенты.Добавить();
		НоваяСтр.Клиент = ВыборкаКлиент.Клиент;
		НоваяСтр.СтатусОпроса= ВыборкаКлиент.СтатусОпроса;
		НоваяСтр.Менеджер = ВыборкаКлиент.Менеджер;
		Если ВыборкаКлиент.КритерийКлиента = 1 Тогда
			НоваяСтр.КритерийКлиента = Перечисления.ВидыКлиентов.Постоянный;
		ИначеЕсли ВыборкаКлиент.КритерийКлиента = 2 Тогда
			НоваяСтр.КритерийКлиента = Перечисления.ВидыКлиентов.Объемообразующий;		
		ИначеЕсли ВыборкаКлиент.КритерийКлиента = 3 Тогда
			НоваяСтр.КритерийКлиента = Перечисления.ВидыКлиентов.Разовый;
		КонецЕсли;
		
		Выборка = ВыборкаКлиент.Выбрать();
		КонтактноеЛицо = "";
		Должность = "";
		Телефон = "";
		Пока Выборка.Следующий() Цикл
			КонтактноеЛицо = ?(КонтактноеЛицо = "",Выборка.КонтактноеЛицо, КонтактноеЛицо + " ," + Символы.ПС + Выборка.КонтактноеЛицо);
			Должность = ?(Должность = "",Выборка.Должность, Должность + " ," + Символы.ПС + Выборка.Должность);
			Телефон =  ?(Телефон = "",Выборка.Телефон, Телефон + " ," + Символы.ПС + Выборка.Телефон);
		КонецЦикла;
		НоваяСтр.Должность = Должность;
		НоваяСтр.КонтактноеЛицо = КонтактноеЛицо;
		НоваяСтр.Телефон = Телефон;
	КонецЦикла;
	
	//Клиенты.Загрузить(ТЗКлиентов);
	Если Клиенты.Количество() > 0 Тогда 
		МенеджерТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Клиенты",Клиенты.Выгрузить());
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Клиенты.Клиент,
		|	Клиенты.КритерийКлиента
		|ПОМЕСТИТЬ Клиенты
		|ИЗ
		|	&Клиенты КАК Клиенты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Клиенты.Клиент,
		|	ВопросыДляОпросаКлиента.Ссылка КАК Вопрос,
		|	Клиенты.КритерийКлиента
		|ИЗ
		|	Справочник.ВопросыДляОпросаКлиента КАК ВопросыДляОпросаКлиента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Клиенты КАК Клиенты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВопросыДляОпросаКлиента.НеАктуальный";
		РезультатЗапроса = Запрос.Выполнить();
		ВопросыДляКлиентов.Загрузить(РезультатЗапроса.Выгрузить());
		//Для Каждого Вопрос Из ВопросыДляКлиентов Цикл
		//	
		//	Если НЕ ЗначениеЗаполнено(Вопрос.Вопрос) Тогда
		//		НазначитьТипОтвета(Вопрос);
		//	Конецесли;
		//	
		//КонецЦикла;
		
		ЭлементыФормы.ВопросыДляКлиентов.ОтборСтрок.Клиент.Установить(Справочники.Контрагенты.ПустаяСсылка());
	КонецЕсли;
КонецПроцедуры

Процедура КлиентыПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
КонецПроцедуры

Процедура КлиентыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура ВопросыДляКлиентовПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
КонецПроцедуры

Процедура ВопросыДляКлиентовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура КлиентыПередНачаломИзменения(Элемент, Отказ)
	Если ЭлементыФормы.Клиенты.ТекущаяКолонка.Имя = "ОпросЗакончен" и Не Элемент.ТекущиеДанные.ОпросЗакончен Тогда
		Клиент = Элемент.ТекущиеДанные.Клиент;
		Отказ = ПроверкаЗаполненияКомментария(Клиент);
		Если Не Отказ Тогда
			ТекущиеДанные = ЭлементыФормы.Клиенты.ТекущиеДанные;
			ТекущиеДанные.СтатусОпроса = Перечисления.СтатусОпросаКлиента.ОпросПроведен;
		КонецЕсли;
	ИначеЕсли  ЭлементыФормы.Клиенты.ТекущаяКолонка.Имя = "ОпросЗакончен" и Элемент.ТекущиеДанные.ОпросЗакончен Тогда
        ТекущиеДанные = ЭлементыФормы.Клиенты.ТекущиеДанные;
		ТекущиеДанные.СтатусОпроса = Перечисления.СтатусОпросаКлиента.ПустаяСсылка();
	КонецЕсли;
КонецПроцедуры

Функция ПроверкаЗаполненияКомментария(Клиент)
	Отказ = Ложь;	
	ТЗОтветы = ВопросыДляКлиентов.Выгрузить(Новый Структура("Клиент",Клиент));
	Для каждого СтрТЗ из ТЗОтветы Цикл
		Если ЗначениеНеЗаполнено(СтрТЗ.Ответ) Тогда
			Сообщить("Необходимо заполнить ответ на вопрос: " + СтрТЗ.Вопрос);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
 	Возврат Отказ;
КонецФункции


Процедура ВопросыДляКлиентовПередНачаломИзменения(Элемент, Отказ)
	н = Элемент;
КонецПроцедуры

Процедура ВопросыДляКлиентовОтветНачалоВыбора(Элемент, СтандартнаяОбработка)
	Элемент.КнопкаСпискаВыбора = Истина;
	Если Не ЭлементыФОрмы.ВопросыДляКлиентов.ТекущиеДанные.Вопрос.ПроизвольнаяФормаОтвета  Тогда
		Элемент.ОграничениеТипа = Новый ОписаниеТипов("Булево");
	    Значение = Элемент.Значение;
	    Элемент.Значение = Элемент.ОграничениеТипа.ПривестиЗначение(Значение);
	    Элемент.ВыбиратьТип = Ложь;
	Иначе
		Элемент.ОграничениеТипа = Новый ОписаниеТипов("Строка");
	    Значение = Элемент.Значение;
	    Элемент.Значение = Элемент.ОграничениеТипа.ПривестиЗначение(Значение);
	    Элемент.ВыбиратьТип = Ложь;
   КонецЕсли;
КонецПроцедуры

Процедура ВопросыДляКлиентовОтветНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.Очистить();
	Вопрос = ЭлементыФормы.ВопросыДляКлиентов.ТекущиеДанные.Вопрос;
	Если Вопрос.ПроизвольнаяФормаОтвета Тогда
		Для Каждого Ответ из Вопрос.ВариантыОтвета Цикл
			Элемент.СписокВыбора.Добавить(Ответ.Ответ);
		КонецЦикла;
	Иначе
		Элемент.СписокВыбора.Добавить(Истина);
		Элемент.СписокВыбора.Добавить(Ложь);

	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	
КонецПроцедуры

Процедура КлиентыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если  ЭлементыФормы.Клиенты.ТекущаяКолонка.Имя = "СтатусОпроса" Тогда
		Если Элемент.ТекущиеДанные.СтатусОпроса = Перечисления.СтатусОпросаКлиента.ОпросПроведен 
			и  ЭлементыФормы.Клиенты.ТекущиеДанные.ОпросЗакончен = Ложь Тогда
			ТекущиеДанные = ЭлементыФормы.Клиенты.ТекущиеДанные;
			ТекущиеДанные.СтатусОпроса = Перечисления.СтатусОпросаКлиента.ПустаяСсылка();
		ИначеЕсли Элемент.ТекущиеДанные.СтатусОпроса <> Перечисления.СтатусОпросаКлиента.ОпросПроведен 
			и  ЭлементыФормы.Клиенты.ТекущиеДанные.ОпросЗакончен = Истина Тогда
           	ТекущиеДанные = ЭлементыФормы.Клиенты.ТекущиеДанные;
			ТекущиеДанные.СтатусОпроса = Перечисления.СтатусОпросаКлиента.ОпросПроведен;
		КонецЕсли;

	КонецЕсли;
КонецПроцедуры



