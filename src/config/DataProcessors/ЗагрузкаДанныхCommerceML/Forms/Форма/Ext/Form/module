// Хранит цвет для назначения цвета ячеек таблиц с неопределенными соответствиями
Перем мЦветЯчейки;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура открывает диалог выбора файла
//
// Параметры:
//  Элемент - элемент управления, для которого выбираем файл
//
Процедура ВыборФайла(Элемент)

	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ДиалогВыбора.Фильтр     = "Файл данных (*.xml)|*.xml";
	ДиалогВыбора.Расширение = "xml";
	
	ДиалогВыбора.Заголовок ="Выберите файлы для загрузки";

	ДиалогВыбора.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбора.ИндексФильтра               = 0;
	ДиалогВыбора.ПолноеИмяФайла              = Элемент.Значение;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Ложь;
	ДиалогВыбора.МножественныйВыбор          = Ложь;
	Если ДиалогВыбора.Выбрать() Тогда
		Элемент.Значение = ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

// Процедура открывать форму соответствий предварительно заполняя
// таблицы соответствий
// 
// Параметры:
//  НачСтраница - строка, имя страницы, которую нужно сделать активной при открытии
//  НачСтрока   - структура для поиска стороки, которую нужно сделать активной при открытии
//
Процедура ОткрытьФормуСоответствий(НачСтраница = "", НачСтрока = Неопределено)

	ЗаполнитьСоответствияТоваров();
	ЗаполнитьСоответствияВалют();
	ЗаполнитьСоответствияЕдиницИзмерения();
	ЗаполнитьСоответствияКонтрагентов();
	ЗаполнитьСоответствияТиповЦен();
	ЗаполнитьСоответствияОрганизаций();
	ФормаСоответствий                   = ПолучитьФорму("ФормаСоответствия", ЭтаФорма);
	ФормаСоответствий.НачальнаяСтраница = НачСтраница;
	ФормаСоответствий.НачальнаяСтрока   = НачСтрока;
	ФормаСоответствий.ОткрытьМодально();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура меняет цвет ячейки Номенклатура, если данные ячейки - пустая ссылка
// Вызывается ТОЛЬКО из обработков события ПриВыводеСтроки
//
// Параметры:
//  ОформлениеСтроки - свойство ОформлениеСтроки обратываемого табличного поля
//  ДанныеСтроки     - данные строки обратываемого табличного поля
//
Процедура ОформитьЯчейкуНоменклатуры(ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки.Номенклатура.ОтображатьТекст      = ИСТИНА;
	Если ЗначениеНеЗаполнено(ДанныеСтроки.Номенклатура) Тогда
		ОформлениеСтроки.Ячейки.Номенклатура.ЦветФона = мЦветЯчейки;
		ОформлениеСтроки.Ячейки.Номенклатура.Текст    = ДанныеСтроки.Наименование;
	ИначеЕсли ЗначениеНеЗаполнено(ДанныеСтроки.ХарактеристикаНоменклатуры) Тогда
		ОформлениеСтроки.Ячейки.Номенклатура.Текст = ДанныеСтроки.Номенклатура;
	Иначе
		ОформлениеСтроки.Ячейки.Номенклатура.Текст = СокрЛП(ДанныеСтроки.Номенклатура) + " (" + СокрЛП(ДанныеСтроки.ХарактеристикаНоменклатуры) + ")";
	КонецЕсли;

КонецПроцедуры

// Процедура меняет цвет ячейки, если данные ячейки - пустая ссылка
// Вызывается ТОЛЬКО из обработков события ПриВыводеСтроки
//
// Параметры:
//  ОформлениеСтроки - свойство ОформлениеСтроки обратываемого табличного поля
//  ДанныеСтроки     - данные строки обратываемого табличного поля
//  ИмяЯчейки        - имя ячейки для которого назначается цвет, должно совпадать с именем поля данных
//
Процедура ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, ИмяЯчейки)

	Если ЗначениеНеОпределено(ДанныеСтроки[ИмяЯчейки]) Тогда
		ОформлениеСтроки.Ячейки[ИмяЯчейки].ЦветФона = мЦветЯчейки;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	ЭлементыФормы.ТоварыКаталог.НастройкаОтбораСтрок.ИдДокумента.Доступность = ЛОЖЬ;
	ЭлементыФормы.ТоварыПрайс.НастройкаОтбораСтрок.ИдДокумента.Доступность = ЛОЖЬ;
	ЭлементыФормы.ТоварыКаталог.НастройкаОтбораСтрок.ИдДокумента.Доступность = ЛОЖЬ;

	Если ЗагружатьИзЭлПочты = ИСТИНА Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Текст = "из эл. почты";
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзФайла.Пометка   = ЛОЖЬ;
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзЭлПочты.Пометка = ИСТИНА;
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(1);
	Иначе
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Текст = "из файла";
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзФайла.Пометка   = ИСТИНА;
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзЭлПочты.Пометка = ЛОЖЬ;
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(0);
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПослеВосстановленияЗначений" формы
//
Процедура ПослеВосстановленияЗначений()

	Если ЗагружатьИзЭлПочты = ИСТИНА Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Текст = "из эл. почты";
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзФайла.Пометка   = ЛОЖЬ;
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзЭлПочты.Пометка = ИСТИНА;
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(1);
	Иначе
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Текст = "из файла";
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзФайла.Пометка   = ИСТИНА;
		ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзЭлПочты.Пометка = ЛОЖЬ;
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(0);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

// Процедура - обработчик события НачалоВыбора элемента ИмяФайлаДанных.
//
Процедура ИмяФайлаДанныхНачалоВыбора(Элемент, СтандартнаяОбработка)

	ВыборФайла(Элемент);

КонецПроцедуры

// Процедура - обработчик события "Нажатие" кнопки "КнопкаНастройкаПериода".
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНачала, ДатаОкончания);
	Если НП.Редактировать() Тогда
		ДатаНачала    = НП.ПолучитьДатуНачала();
		ДатаОкончания = НП.ПолучитьДатуОкончания();
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ОткрытьСоответствияОбъектов" 
// командной панели формы  для заполнения таблиц соответствий объектов и открытия
// формы определения соответствий
//
Процедура КоманднаяПанельОткрытьСоответствияОбъектов(Кнопка)

	ОткрытьФормуСоответствий();

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "ПрочитатьДанные" 
// командной панели формы для чтения и обработки данных из файла или каталога
//
Процедура КоманднаяПанельПрочитатьДанные(Кнопка)

	Если ЗагружатьИзЭлПочты Тогда
		ОбработатьЭлПисьма(ДатаНачала, ДатаОкончания)
	Иначе
		ОбработатьФайлы(ИмяФайлаДанных);
	КонецЕсли;
	Если ЭлДокументы.Количество() Тогда
		ЭлементыФормы.ЭлДокументы.ТекущаяСтрока = ЭлДокументы[0];
	Иначе
		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(0);
	КонецЕсли;

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "СохранитьДанные" 
// командной панели формы для сохранения электронных документов в базе
//
Процедура КоманднаяПанельСохранитьДанные(Кнопка)

	СохранитьДанные();

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "ДанныеИзФайла" подменю
// "ИзменитьСпособЗагрузки" командной панели формы для смены источника загрузки
//
Процедура КоманднаяПанельДанныеИзФайла(Кнопка)

	ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Текст = "из файла";
	ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзФайла.Пометка   = ИСТИНА;
	ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзЭлПочты.Пометка = ЛОЖЬ;

	ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(0);

	ЗагружатьИзЭлПочты = ЛОЖЬ;

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "ДанныеИзЭлПочты" подменю
// "ИзменитьСпособЗагрузки" командной панели формы для смены источника загрузки
//
Процедура КоманднаяПанельДанныеИзЭлПочты(Кнопка)

	ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Текст = "из эл. почты";
	ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзФайла.Пометка   = ЛОЖЬ;
	ЭлементыФормы.КоманднаяПанель.Кнопки.ИзменитьСпособЗагрузки.Кнопки.ДанныеИзЭлПочты.Пометка = ИСТИНА;

	ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(1);

	ЗагружатьИзЭлПочты = ИСТИНА;

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "УстановитьФлажки" командной панели
// табличного поля ЭлДокументы
//
Процедура КоманднаяПанельДокументыУстановитьФлажки(Кнопка)

	Для Каждого СтрокаТаблицыДокумент Из ЭлДокументы Цикл
		СтрокаТаблицыДокумент.Обрабатывать = Истина;
	КонецЦикла;

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "СнятьФлажки" командной панели
// табличного поля ЭлДокументы
//
Процедура КоманднаяПанельДокументыСнятьФлажки(Кнопка)

	Для Каждого СтрокаТаблицыДокумент Из ЭлДокументы Цикл
		СтрокаТаблицыДокумент.Обрабатывать = Ложь;
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ЭлДокументы

// Процедура - обработчик события "Выбор" табличного поля ЭлДокументы
//
Процедура ЭлДокументыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Колонка.Имя = "Контрагент" Тогда
		НачОтбор            = Новый Структура("Контрагент");
		НачОтбор.Контрагент = ВыбраннаяСтрока.Контрагент;
		ОткрытьФормуСоответствий("Контрагенты", НачОтбор);

	ИначеЕсли Колонка.Имя = "Организация" И (ВыбраннаяСтрока.Тип = "Заказ покупателя" 
		ИЛИ ВыбраннаяСтрока.Тип = "Поступление товаров и услуг") Тогда
		НачОтбор                  = Новый Структура("Организация");
		НачОтбор.Организация = ВыбраннаяСтрока.Организация;
		ОткрытьФормуСоответствий("Организации", НачОтбор);

	ИначеЕсли Колонка.Имя = "Валюта" И (ВыбраннаяСтрока.Тип = "Заказ покупателя"
		ИЛИ ВыбраннаяСтрока.Тип = "Поступление товаров и услуг") Тогда
		НачОтбор        = Новый Структура("Валюта");
		НачОтбор.Валюта = ВыбраннаяСтрока.Валюта;
		ОткрытьФормуСоответствий("Валюты", НачОтбор);
		
	ИначеЕсли (Колонка.Имя = "ВидДокумента"
		ИЛИ Колонка.Имя = "Дата"
		ИЛИ Колонка.Имя = "Номер")
		И Не ЗначениеНеЗаполнено(ВыбраннаяСтрока.ДокументВБазе) Тогда
		
		ОткрытьЗначение(ВыбраннаяСтрока.ДокументВБазе);
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "При активизации строки" табличного поля ЭлДокументы
//
Процедура ЭлДокументыПриАктивизацииСтроки(Элемент)

	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(0);
		
	ИначеЕсли Элемент.ТекущиеДанные.Тип = "Каталог" Тогда
		ЭлементыФормы.ТоварыКаталог.ОтборСтрок.ИдДокумента.Значение      = Элемент.ТекущиеДанные.Ид;
		ЭлементыФормы.ТоварыКаталог.ОтборСтрок.ИдДокумента.Использование = ИСТИНА;

		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(0);

	ИначеЕсли Элемент.ТекущиеДанные.Тип = "Прайс" Тогда
		ЭлементыФормы.ТоварыПрайс.ОтборСтрок.ИдДокумента.Значение      = Элемент.ТекущиеДанные.Ид;
		ЭлементыФормы.ТоварыПрайс.ОтборСтрок.ИдДокумента.Использование = ИСТИНА;

		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(1);

	ИначеЕсли (Элемент.ТекущиеДанные.Тип = "Заказ покупателя"
		ИЛИ Элемент.ТекущиеДанные.Тип = "Поступление товаров и услуг") Тогда
		ЭлементыФормы.ТоварыДокумент.ОтборСтрок.ИдДокумента.Значение      = Элемент.ТекущиеДанные.Ид;
		ЭлементыФормы.ТоварыДокумент.ОтборСтрок.ИдДокумента.Использование = ИСТИНА;

		ЭлементыФормы.ПанельТаблиц.ТекущаяСтраница = ЭлементыФормы.ПанельТаблиц.Страницы.Получить(2);

	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "При выводе строки" табличного поля ЭлДокументы
//
Процедура ЭлДокументыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "Контрагент");
	Если (ДанныеСтроки.Тип = "Заказ покупателя"
		ИЛИ ДанныеСтроки.Тип = "Поступление товаров и услуг") Тогда
		ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "Валюта");
		ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "Организация");
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 2;
	ИначеЕсли ДанныеСтроки.Тип = "Каталог" Тогда
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 2;
	ИначеЕсли ДанныеСтроки.Тип = "Прайс" Тогда
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 2;
	КонецЕсли;
	
	Если Не ЗначениеНеЗаполнено(ДанныеСтроки.ДокументВБазе) Тогда
		ОформлениеСтроки.Шрифт = Новый Шрифт(,,Истина);
	КонецЕсли; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТоварыКаталог

// Процедура - обработчик события "Выбор" табличного поля ТоварыКаталог
//
Процедура ТоварыКаталогВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Колонка.Имя = "Номенклатура" Тогда
		НачОтбор                         = Новый Структура("Наименование, Артикул, ШтрихКод, БазоваяЕдиницаИзмерения");
		НачОтбор.Наименование            = ВыбраннаяСтрока.Наименование;
		НачОтбор.Артикул                 = ВыбраннаяСтрока.Артикул;
		НачОтбор.ШтрихКод                = ВыбраннаяСтрока.ШтрихКод;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		ОткрытьФормуСоответствий("Номенклатура", НачОтбор);
	ИначеЕсли Колонка.Имя = "БазоваяЕдиницаИзмерения" Тогда
		НачОтбор                  = Новый Структура("ЕдиницаИзмерения");
		НачОтбор.ЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		ОткрытьФормуСоответствий("ЕдиницыИзмерения", НачОтбор);
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "При выводе строки" табличного поля ТоварыКаталог
//
Процедура ТоварыКаталогПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформитьЯчейкуНоменклатуры(ОформлениеСтроки, ДанныеСтроки);
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "БазоваяЕдиницаИзмерения");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТоварыПрайс

// Процедура - обработчик события "Выбор" табличного поля ТоварыПрайс
//
Процедура ТоварыПрайсВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Колонка.Имя = "Номенклатура" Тогда
		НачОтбор                         = Новый Структура("Наименование, Артикул, ШтрихКод, БазоваяЕдиницаИзмерения, Ид");
		НачОтбор.Наименование            = ВыбраннаяСтрока.Наименование;
		НачОтбор.Артикул                 = ВыбраннаяСтрока.Артикул;
		НачОтбор.ШтрихКод                = ВыбраннаяСтрока.ШтрихКод;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		НачОтбор.Ид                      = ВыбраннаяСтрока.Ид;
		ОткрытьФормуСоответствий("Номенклатура", НачОтбор);

	ИначеЕсли Колонка.Имя = "БазоваяЕдиницаИзмерения" Тогда
		НачОтбор                  = Новый Структура("ЕдиницаИзмерения");
		НачОтбор.ЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		ОткрытьФормуСоответствий("ЕдиницыИзмерения", НачОтбор);

	ИначеЕсли Колонка.Имя = "ЕдиницаИзмерения" Тогда
		НачОтбор                  = Новый Структура("ЕдиницаИзмерения");
		НачОтбор.ЕдиницаИзмерения = ВыбраннаяСтрока.ЕдиницаИзмерения;
		ОткрытьФормуСоответствий("ЕдиницыИзмерения", НачОтбор);

	ИначеЕсли Колонка.Имя = "Валюта" Тогда
		НачОтбор        = Новый Структура("Валюта");
		НачОтбор.Валюта = ВыбраннаяСтрока.Валюта;
		ОткрытьФормуСоответствий("Валюты", НачОтбор);

	ИначеЕсли Колонка.Имя = "ТипЦены" Тогда
		НачОтбор                  = Новый Структура("ТипЦены ,Контрагент");
		НачОтбор.ТипЦены    = ВыбраннаяСтрока.ТипЦены;
		НачОтбор.Контрагент = ВыбраннаяСтрока.Контрагент;
		ОткрытьФормуСоответствий("ТипыЦенКонтрагентов", НачОтбор);
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "При выводе строки" табличного поля ТоварыПрайс
//
Процедура ТоварыПрайсПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформитьЯчейкуНоменклатуры(ОформлениеСтроки, ДанныеСтроки);
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "БазоваяЕдиницаИзмерения");
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "ЕдиницаИзмерения");
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "Валюта");
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "ТипЦены");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТоварыДокумент

// Процедура - обработчик события "Выбор" табличного поля ТоварыДокумент
//
Процедура ТоварыДокументВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Колонка.Имя = "Номенклатура" Тогда
		НачОтбор                         = Новый Структура("Наименование, Артикул, ШтрихКод, БазоваяЕдиницаИзмерения, Ид");
		НачОтбор.Наименование            = ВыбраннаяСтрока.Наименование;
		НачОтбор.Артикул                 = ВыбраннаяСтрока.Артикул;
		НачОтбор.ШтрихКод                = ВыбраннаяСтрока.ШтрихКод;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		НачОтбор.БазоваяЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		НачОтбор.Ид                      = ВыбраннаяСтрока.Ид;
		ОткрытьФормуСоответствий("Номенклатура", НачОтбор);

	ИначеЕсли Колонка.Имя = "БазоваяЕдиницаИзмерения" Тогда
		НачОтбор                  = Новый Структура("ЕдиницаИзмерения");
		НачОтбор.ЕдиницаИзмерения = ВыбраннаяСтрока.БазоваяЕдиницаИзмерения;
		ОткрытьФормуСоответствий("ЕдиницыИзмерения", НачОтбор);

	ИначеЕсли Колонка.Имя = "ЕдиницаИзмерения" Тогда
		НачОтбор                  = Новый Структура("ЕдиницаИзмерения");
		НачОтбор.ЕдиницаИзмерения = ВыбраннаяСтрока.ЕдиницаИзмерения;
		ОткрытьФормуСоответствий("ЕдиницыИзмерения", НачОтбор);

	КонецЕсли;


КонецПроцедуры

// Процедура - обработчик события "При выводе строки" табличного поля ТоварыДокумент
//
Процедура ТоварыДокументПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформитьЯчейкуНоменклатуры(ОформлениеСтроки, ДанныеСтроки);
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "БазоваяЕдиницаИзмерения");
	ОформитьЯчейку(ОформлениеСтроки, ДанныеСтроки, "ЕдиницаИзмерения");

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

//Назначаем цвет для ячеек с объектами не имеющими соответствий в базе
мЦветЯчейки = Новый Цвет(255, 251, 240);

//Заполнение служебных структур данных для управления загрузкой данных
ЗаполнитьСтруктурыЗагрузки();
