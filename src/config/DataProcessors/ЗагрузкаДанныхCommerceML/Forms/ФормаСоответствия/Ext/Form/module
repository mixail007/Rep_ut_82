// Хранит цвет для назначения цвета ячеек строк табличных частей
Перем мЦветНеОпределено;
Перем мЦветОпределено;

//Хранить группы для записи новых элементов при потоковом создании элементов справочников 
Перем мГруппаДляНовойНоменклатуры;
Перем мГруппаДляНовыхКонтрагентов;
//Хранит вид справочника для которого вызываетсяформа выбор групп
Перем мСправочникДляВыбораГруппы;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//Функция расчитывает число строк в табличной части с определеннsv значением в указанном поле
//
// Параметры:
//  Таблица  - табличная часть для которой делается расчет
//  Поле     - наименование поля табличной часть для отбора
//  Значение - значение поля для формирования отбора
//
// Возвращаемое значение:
//  Число - количество отобранных строк в табличной части
//
Функция ПосчитатьКоличествоПолей(Таблица, Поле, Значение)

	Отбор = Новый Структура(Поле, Значение);
	НайденныеСтроки = Таблица.НайтиСтроки(Отбор);
	Если НайденныеСтроки = Неопределено тогда
		Возврат 0;
	Иначе
		Возврат НайденныеСтроки.Количество();
	КонецЕсли;

КонецФункции

// Процедура вызывает создание нового элемента справочника с открытием формы
// Вызывает процедуру создания нового элемента справочника по данным формы
// вызывается для обработки событий "ПриОткрытии" для создания новых элементов
//
// Параметры
//  Значение             - значение для записи созданного элемента справочника
//  ТипСправочника       - строка тип справочника
//
Процедура ВызватьСозданиеСправочника(Значение, ТипСправочника)

	Если ЗначениеНеЗаполнено(Значение) Тогда
		Если ТипСправочника = "Номенклатура" Тогда
			СтрокаДанных = ЭлементыФормы.СоответствияТоваров.ТекущиеДанные;
		ИначеЕсли ТипСправочника = "Валюты" Тогда
			СтрокаДанных = ЭлементыФормы.СоответстияВалют.ТекущиеДанные;
		ИначеЕсли ТипСправочника = "КлассификаторЕдиницИзмерения" Тогда
			СтрокаДанных = ЭлементыФормы.СоответствияЕдиницИзмерения.ТекущиеДанные;
		ИначеЕсли ТипСправочника = "Контрагенты" Тогда
			СтрокаДанных = ЭлементыФормы.СоответствияКонтрагентов.ТекущиеДанные;
		ИначеЕсли ТипСправочника = "ТипыЦенНоменклатурыКонтрагентов" Тогда
			СтрокаДанных = ЭлементыФормы.СоответствияТиповЦен.ТекущиеДанные;
		ИначеЕсли ТипСправочника = "Организации" Тогда
			СтрокаДанных = ЭлементыФормы.СоответствияОрганизаций.ТекущиеДанные;
		Иначе
			Возврат;
		КонецЕсли;
		СоздатьЭлементСправочникаИтеративно(ЭтаФорма, Значение, СтрокаДанных, ТипСправочника);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Процедура устанавливает цвет строки табличной части, 
// в зависимости от тго заполнено ли переданное значение
// Вызывается ТОЛЬКО из обработков события ПриВыводеСтроки
//
// Параметры:
//  ОформлениеСтроки - свойство ОформлениеСтроки обратываемого табличного поля
//  Значение         - значение по типу которого определяется цвет ячейки
//
Процедура УстановитьЦветСтроки(ОформлениеСтроки, Значение)

	Если ЗначениеНеЗаполнено(Значение) Тогда
		ОформлениеСтроки.ЦветФона = мЦветНеОпределено;
	Иначе
		ОформлениеСтроки.ЦветФона = мЦветОпределено;
	КонецЕсли;

КонецПроцедуры

// Процедура устанавливает доступность кнопки "СоздатьВсе" подменю "СоздатьНовый"
// командной панели формы в зависимости от наличия незаполненных строк в таблице
// Вызвается из обработчика события "ОбновлениеОтображения"
//
// Параметры:
//  ИмяСтраницы        - имя для которой вызывается процедура
//  ЧислоНезаполненных - число незаполненных строк в табличном поле страницы
//
Процедура УстановитьДоступностьКнопкиСоздатьВсе(ИмяСтраницы, ЧислоНезаполненных)

	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = ИмяСтраницы Тогда
		Если ЧислоНезаполненных = 0 Тогда
			ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьВсе.Доступность = ЛОЖЬ;
		Иначе
			ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьВсе.Доступность = ИСТИНА;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Процедура устанавливает доступность кнопки "СоздатьПоТекущейСтроке" подменю "СоздатьНовый"
// командной панели формы в зависимости от наличия незаполненных строк в таблице
// Вызвается из обработчика события "ОбновлениеОтображения"
//
// Параметры:
//  Таблица  - табличное поле
//  Реквизит - имя реквизита табличной части по которому определяется доступность кнопки
//
Процедура УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке(ИмяСтраницы, Таблица, Реквизит)

	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = ИмяСтраницы Тогда
		Если Таблица.ТекущаяСтрока = Неопределено Тогда
			ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьПоТекущейСтроке.Доступность = ЛОЖЬ;
		ИначеЕсли НЕ ЗначениеНеЗаполнено(Таблица.ТекущаяСтрока[Реквизит])Тогда
			ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьПоТекущейСтроке.Доступность = ЛОЖЬ;
		Иначе
			ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьПоТекущейСтроке.Доступность = ИСТИНА;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	ЭлементыФормы.КоманднаяПанель.Кнопки.ПоказатьТолькоНеопределенные.Пометка = ЛОЖЬ;
	Если НЕ ЗначениеНеЗаполнено(НачальнаяСтраница) Тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы[НачальнаяСтраница];
		Если НачальнаяСтраница = "Номенклатура" Тогда
			ТаблицаДляПоиска = СоответствияТоваров;
			ТаблицаДляВыбора = ЭлементыФормы.СоответствияТоваров;
		ИначеЕсли НачальнаяСтраница = "Валюты" Тогда
			ТаблицаДляПоиска = СоответствияВалют;
			ТаблицаДляВыбора = ЭлементыФормы.СоответствияВалют;
		ИначеЕсли НачальнаяСтраница = "ЕдиницыИзмерения" Тогда
			ТаблицаДляПоиска = СоответствияЕдиницИзмерения;
			ТаблицаДляВыбора = ЭлементыФормы.СоответствияЕдиницИзмерения;
		ИначеЕсли НачальнаяСтраница = "Контрагенты" Тогда
			ТаблицаДляПоиска = СоответствияКонтрагентов;
			ТаблицаДляВыбора = ЭлементыФормы.СоответствияКонтрагентов;
		ИначеЕсли НачальнаяСтраница = "ТипыЦенКонтрагентов" Тогда
			ТаблицаДляПоиска = СоответствияТиповЦен;
			ТаблицаДляВыбора = ЭлементыФормы.СоответствияТиповЦен;
		ИначеЕсли НачальнаяСтраница = "Организации" Тогда
			ТаблицаДляПоиска = СоответствияОрганизаций;
			ТаблицаДляВыбора = ЭлементыФормы.СоответствияОрганизаций;
		Иначе
			Возврат;
		КонецЕсли;
		НайденныеСтроки = ТаблицаДляПоиска.НайтиСтроки(НачальнаяСтрока);
		Если НайденныеСтроки.Количество() Тогда
			ТаблицаДляВыбора.ТекущаяСтрока = НайденныеСтроки[0];
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ОбновлениеОтображения" формы.
// обновляют заголовки страниц панели ОсновнаяПанели
//
Процедура ОбновлениеОтображения()

	// Подсчитаем количество строк в табличных частях.
	Для Каждого СтраницаПанели из ЭлементыФормы.ОсновнаяПанель.Страницы Цикл
		Если СтраницаПанели.Имя = "Номенклатура" Тогда
			ПустаяСсылка       = Справочники.Номенклатура.ПустаяСсылка();
			ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияТоваров, "Номенклатура", ПустаяСсылка);
			ЧислоВсех          = СоответствияТоваров.Количество();
			СтраницаПанели.Заголовок = "Номенклатура (" + ЧислоВсех + "/" + ЧислоНезаполненных + ")";
			УстановитьДоступностьКнопкиСоздатьВсе(СтраницаПанели.Имя, ЧислоНезаполненных);
			УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке(СтраницаПанели.Имя, ЭлементыФормы.СоответствияТоваров, "Номенклатура");

		ИначеЕсли СтраницаПанели.Имя = "Валюты" Тогда
			ПустаяСсылка       = Справочники.Валюты.ПустаяСсылка();
			ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияВалют, "НовыйВалюта", ПустаяСсылка);
			ЧислоВсех          = СоответствияВалют.Количество();
			СтраницаПанели.Заголовок = "Валюты (" + ЧислоВсех + "/" + ЧислоНезаполненных + ")";
			Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = СтраницаПанели.Имя Тогда
				ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьВсе.Доступность = ЛОЖЬ;
			КонецЕсли;
			УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке(СтраницаПанели.Имя, ЭлементыФормы.СоответствияВалют, "НовыйВалюта");

		ИначеЕсли СтраницаПанели.Имя = "ЕдиницыИзмерения" Тогда
			ПустаяСсылка       = Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка();
			ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияЕдиницИзмерения, "НовыйЕдиницаИзмерения", ПустаяСсылка);
			ЧислоВсех          = СоответствияЕдиницИзмерения.Количество();
			СтраницаПанели.Заголовок = "Единицы измерения (" + ЧислоВсех + "/" + ЧислоНезаполненных + ")";
			Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = СтраницаПанели.Имя Тогда
				ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьВсе.Доступность = ЛОЖЬ;
			КонецЕсли;
			УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке(СтраницаПанели.Имя, ЭлементыФормы.СоответствияЕдиницИзмерения, "НовыйЕдиницаИзмерения");

		ИначеЕсли СтраницаПанели.Имя = "Контрагенты" Тогда
			ПустаяСсылка       = Справочники.Контрагенты.ПустаяСсылка();
			ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияКонтрагентов, "НовыйКонтрагент", ПустаяСсылка);
			ЧислоВсех          = СоответствияКонтрагентов.Количество();
			СтраницаПанели.Заголовок = "Контрагенты (" + ЧислоВсех + "/" + ЧислоНезаполненных + ")";
			УстановитьДоступностьКнопкиСоздатьВсе(СтраницаПанели.Имя, ЧислоНезаполненных);
			УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке(СтраницаПанели.Имя, ЭлементыФормы.СоответствияКонтрагентов, "НовыйКонтрагент");

		ИначеЕсли СтраницаПанели.Имя = "ТипыЦенКонтрагентов" Тогда
			ПустаяСсылка       = Справочники.ТипыЦенНоменклатурыКонтрагентов.ПустаяСсылка();
			ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияТиповЦен, "НовыйТипЦены", ПустаяСсылка);
			ЧислоВсех          = СоответствияТиповЦен.Количество();
			СтраницаПанели.Заголовок = "Типы цен (" + ЧислоВсех + "/" + ЧислоНезаполненных + ")";
			УстановитьДоступностьКнопкиСоздатьВсе(СтраницаПанели.Имя, ЧислоНезаполненных);
			УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке(СтраницаПанели.Имя, ЭлементыФормы.СоответствияТиповЦен, "НовыйТипЦены");

		ИначеЕсли СтраницаПанели.Имя = "Организации" Тогда
			ПустаяСсылка       = Справочники.Организации.ПустаяСсылка();
			ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияОрганизаций, "НовыйОрганизация", ПустаяСсылка);
			ЧислоВсех          = СоответствияОрганизаций.Количество();
			СтраницаПанели.Заголовок = "Организации (" + ЧислоВсех + "/" + ЧислоНезаполненных + ")";
			Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = СтраницаПанели.Имя Тогда
				ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьВсе.Доступность = ЛОЖЬ;
			КонецЕсли;
			УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке(СтраницаПанели.Имя, ЭлементыФормы.СоответствияОрганизаций, "НовыйОрганизация");

		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" формы.
// присваивает значения группы по умолчанию для потокового сохранения объектов
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если мСправочникДляВыбораГруппы = "Номенклатура" Тогда
		мГруппаДляНовойНоменклатуры = ЗначениеВыбора;
	ИначеЕсли мСправочникДляВыбораГруппы = "Контрагенты" Тогда
		мГруппаДляНовыхКонтрагентов = ЗначениеВыбора;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриСменеСтраницы" панели "ОсновнаяПанель".
// обновляет доступность кнопок подменб "СоздатьНовый"
//
Процедура ОсновнаяПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)

	// Подсчитаем количество строк в табличных частях.
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Номенклатура" Тогда
		ПустаяСсылка       = Справочники.Номенклатура.ПустаяСсылка();
		ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияТоваров, "Номенклатура", ПустаяСсылка);
		УстановитьДоступностьКнопкиСоздатьВсе("Номенклатура", ЧислоНезаполненных);
		УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("Номенклатура", ЭлементыФормы.СоответствияТоваров, "Номенклатура");

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Валюты" Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьВсе.Доступность = ЛОЖЬ;

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "ЕдиницыИзмерения" Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьВсе.Доступность = ЛОЖЬ;

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Контрагенты" Тогда
		ПустаяСсылка       = Справочники.Контрагенты.ПустаяСсылка();
		ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияКонтрагентов, "НовыйКонтрагент", ПустаяСсылка);
		УстановитьДоступностьКнопкиСоздатьВсе("Контрагенты", ЧислоНезаполненных);
		УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("Контрагенты", ЭлементыФормы.СоответствияКонтрагентов, "НовыйКонтрагент");

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "ТипыЦенКонтрагентов" Тогда
		ПустаяСсылка       = Справочники.ТипыЦенНоменклатурыКонтрагентов.ПустаяСсылка();
		ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияТиповЦен, "НовыйТипЦены", ПустаяСсылка);
		УстановитьДоступностьКнопкиСоздатьВсе("ТипыЦенКонтрагентов", ЧислоНезаполненных);
		УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("ТипыЦенКонтрагентов", ЭлементыФормы.СоответствияТиповЦен, "НовыйТипЦены");

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Организации" Тогда
		ПустаяСсылка       = Справочники.Организации.ПустаяСсылка();
		ЧислоНезаполненных = ПосчитатьКоличествоПолей(СоответствияОрганизаций, "НовыйОрганизация", ПустаяСсылка);
		ЭлементыФормы.КоманднаяПанель.Кнопки.СоздатьНовый.Кнопки.СоздатьВсе.Доступность = ЛОЖЬ;
		УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("Организации", ЭлементыФормы.СоответствияОрганизаций, "НовыйОрганизация");

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "ПоказатьТолькоНеопределенные" 
// командной панели "КоманднаяПанель" для смены режима отборов табличных полей панели
// ОсновнаяПанель, устанавливает-сбрасывает отборы по пустому значению
// объекта-соответствия
//
Процедура КоманднаяПанельПоказатьТолькоНеопределенные(Кнопка)

	ЭлементыФормы.КоманднаяПанель.Кнопки.ПоказатьТолькоНеопределенные.Пометка = НЕ ЭлементыФормы.КоманднаяПанель.Кнопки.ПоказатьТолькоНеопределенные.Пометка;

	Если ЭлементыФормы.КоманднаяПанель.Кнопки.ПоказатьТолькоНеопределенные.Пометка Тогда

		ПустаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
		ПустаяВалюта       = Справочники.Валюты.ПустаяСсылка();
		ПустаяЕдиница      = Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка();
		ПустаяКонтрагент   = Справочники.Контрагенты.ПустаяСсылка();
		ПустаяТипЦен       = Справочники.ТипыЦенНоменклатурыКонтрагентов.ПустаяСсылка();
		ПустаяОрганизация  = Справочники.Организации.ПустаяСсылка();

		ЭлементыФормы.СоответствияТоваров.ОтборСтрок.Номенклатура.Значение              = ПустаяНоменклатура;
		ЭлементыФормы.СоответствияТоваров.ОтборСтрок.Номенклатура.ВидСравнения          = ВидСравнения.Равно;
		ЭлементыФормы.СоответствияТоваров.ОтборСтрок.Номенклатура.Использование         = ИСТИНА;
		ЭлементыФормы.СоответствияТоваров.НастройкаОтбораСтрок.Номенклатура.Доступность = ЛОЖЬ;

		ЭлементыФормы.СоответствияВалют.ОтборСтрок.НовыйВалюта.Значение              = ПустаяВалюта;
		ЭлементыФормы.СоответствияВалют.ОтборСтрок.НовыйВалюта.ВидСравнения          = ВидСравнения.Равно;
		ЭлементыФормы.СоответствияВалют.ОтборСтрок.НовыйВалюта.Использование         = ИСТИНА;
		ЭлементыФормы.СоответствияВалют.НастройкаОтбораСтрок.НовыйВалюта.Доступность = ЛОЖЬ;

		ЭлементыФормы.СоответствияЕдиницИзмерения.ОтборСтрок.НовыйЕдиницаИзмерения.Значение              = ПустаяЕдиница;
		ЭлементыФормы.СоответствияЕдиницИзмерения.ОтборСтрок.НовыйЕдиницаИзмерения.ВидСравнения          = ВидСравнения.Равно;
		ЭлементыФормы.СоответствияЕдиницИзмерения.ОтборСтрок.НовыйЕдиницаИзмерения.Использование         = ИСТИНА;
		ЭлементыФормы.СоответствияЕдиницИзмерения.НастройкаОтбораСтрок.НовыйЕдиницаИзмерения.Доступность = ЛОЖЬ;

		ЭлементыФормы.СоответствияКонтрагентов.ОтборСтрок.НовыйКонтрагент.Значение              = ПустаяКонтрагент;
		ЭлементыФормы.СоответствияКонтрагентов.ОтборСтрок.НовыйКонтрагент.ВидСравнения          = ВидСравнения.Равно;
		ЭлементыФормы.СоответствияКонтрагентов.ОтборСтрок.НовыйКонтрагент.Использование         = ИСТИНА;
		ЭлементыФормы.СоответствияКонтрагентов.НастройкаОтбораСтрок.НовыйКонтрагент.Доступность = ЛОЖЬ;

		ЭлементыФормы.СоответствияТиповЦен.ОтборСтрок.НовыйТипЦены.Значение              = ПустаяТипЦен;
		ЭлементыФормы.СоответствияТиповЦен.ОтборСтрок.НовыйТипЦены.ВидСравнения          = ВидСравнения.Равно;
		ЭлементыФормы.СоответствияТиповЦен.ОтборСтрок.НовыйТипЦены.Использование         = ИСТИНА;
		ЭлементыФормы.СоответствияТиповЦен.НастройкаОтбораСтрок.НовыйТипЦены.Доступность = ЛОЖЬ;

		ЭлементыФормы.СоответствияОрганизаций.ОтборСтрок.НовыйОрганизация.Значение      = ПустаяОрганизация;
		ЭлементыФормы.СоответствияОрганизаций.ОтборСтрок.НовыйОрганизация.ВидСравнения  = ВидСравнения.Равно;
		ЭлементыФормы.СоответствияОрганизаций.ОтборСтрок.НовыйОрганизация.Использование = ИСТИНА;
		ЭлементыФормы.СоответствияОрганизаций.НастройкаОтбораСтрок.НовыйОрганизация.Доступность = ЛОЖЬ;

	Иначе

		ЭлементыФормы.СоответствияТоваров.ОтборСтрок.Номенклатура.Использование         = ЛОЖЬ;
		ЭлементыФормы.СоответствияТоваров.НастройкаОтбораСтрок.Номенклатура.Доступность = ИСТИНА;

		ЭлементыФормы.СоответствияВалют.ОтборСтрок.НовыйВалюта.Использование         = ЛОЖЬ;
		ЭлементыФормы.СоответствияВалют.НастройкаОтбораСтрок.НовыйВалюта.Доступность = ИСТИНА;

		ЭлементыФормы.СоответствияЕдиницИзмерения.ОтборСтрок.НовыйЕдиницаИзмерения.Использование         = ЛОЖЬ;
		ЭлементыФормы.СоответствияЕдиницИзмерения.НастройкаОтбораСтрок.НовыйЕдиницаИзмерения.Доступность = ИСТИНА;

		ЭлементыФормы.СоответствияКонтрагентов.ОтборСтрок.НовыйКонтрагент.Использование         = ЛОЖЬ;
		ЭлементыФормы.СоответствияКонтрагентов.НастройкаОтбораСтрок.НовыйКонтрагент.Доступность = ИСТИНА;

		ЭлементыФормы.СоответствияТиповЦен.ОтборСтрок.НовыйТипЦены.Использование         = ЛОЖЬ;
		ЭлементыФормы.СоответствияТиповЦен.НастройкаОтбораСтрок.НовыйТипЦены.Доступность = ИСТИНА;

		ЭлементыФормы.СоответствияОрганизаций.ОтборСтрок.НовыйОрганизация.Использование         = ЛОЖЬ;
		ЭлементыФормы.СоответствияОрганизаций.НастройкаОтбораСтрок.НовыйОрганизация.Доступность = ИСТИНА;

	КонецЕсли;

КонецПроцедуры

// Процедура вызывается при нажатии пункта меню "СоздатьПоТекущейСтроке" 
// пожменю "СоздатьНовый" командной панели "КоманднаяПанель" для вызова процедур создания
// нового элемента справочника
//
Процедура КоманднаяПанельСоздатьПоТекущейСтроке(Кнопка)

	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Номенклатура" Тогда
		ТекСтрока = ЭлементыФормы.СоответствияТоваров.ТекущаяСтрока;
		Если НЕ ТекСтрока = Неопределено И ЗначениеНеЗаполнено(ТекСтрока.Номенклатура) Тогда
			ВызватьСозданиеСправочника(ТекСтрока.Номенклатура, "Номенклатура");
		КонецЕсли;

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Валюты" Тогда
		ТекСтрока = ЭлементыФормы.СоответстияВалют.ТекущаяСтрока;
		Если НЕ ТекСтрока = Неопределено И ЗначениеНеЗаполнено(ТекСтрока.НовыйВалюта) Тогда
			ВызватьСозданиеСправочника(ТекСтрока.НовыйВалюта, "Валюты");
		КонецЕсли;

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "ЕдиницыИзмерения" Тогда
		ТекСтрока = ЭлементыФормы.СоответствияЕдиницИзмерения.ТекущаяСтрока;
		Если НЕ ТекСтрока = Неопределено И ЗначениеНеЗаполнено(ТекСтрока.НовыйЕдиницаИзмерения) Тогда
			ВызватьСозданиеСправочника(ТекСтрока.НовыйЕдиницаИзмерения, "КлассификаторЕдиницИзмерения");
		КонецЕсли;

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Контрагенты" Тогда
		ТекСтрока = ЭлементыФормы.СоответствияКонтрагентов.ТекущаяСтрока;
		Если НЕ ТекСтрока = Неопределено И ЗначениеНеЗаполнено(ТекСтрока.НовыйКонтрагент) Тогда
			ВызватьСозданиеСправочника(ТекСтрока.НовыйКонтрагент, "Контрагенты");
		КонецЕсли;

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "ТипыЦенКонтрагентов" Тогда
		ТекСтрока = ЭлементыФормы.СоответствияТиповЦен.ТекущаяСтрока;
		Если НЕ ТекСтрока = Неопределено И ЗначениеНеЗаполнено(ТекСтрока.НовыйТипЦены) Тогда
			ВызватьСозданиеСправочника(ТекСтрока.НовыйТипЦены, "ТипыЦенНоменклатурыКонтрагентов");
		КонецЕсли;

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Организации" Тогда
		ТекСтрока = ЭлементыФормы.СоответствияОрганизаций.ТекущаяСтрока;
		Если НЕ ТекСтрока = Неопределено И ЗначениеНеЗаполнено(ТекСтрока.НовыйОрганизация) Тогда
			ВызватьСозданиеСправочника(ТекСтрока.НовыйОрганизация, "Организации");
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Процедура вызывается при нажатии пункта меню "СоздатьВсе" 
// пожменю "СоздатьНовый" командной панели "КоманднаяПанель" для вызова процедур создания
// новых элементов для всех неопределенных строк
//
Процедура КоманднаяПанельСоздатьВсе(Кнопка)

	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Номенклатура" Тогда
		Если НЕ Вопрос("Создать новые элементы номенклатуры для всех неопределенных строк?", РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.ОК, "Создание данных данных") = КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли;
		мСправочникДляВыбораГруппы = "Номенклатура";
		ФормаВыбора                = Справочники.Номенклатура.ПолучитьФормуВыбораГруппы( , ЭтаФорма);
		ФормаВыбора.Заголовок      = "Выбор группы для записи новых элементов";
		ФормаВыбора.ОткрытьМодально();

		Для Каждого СтрокаТаблицы Из СоответствияТоваров Цикл
			Если НЕ ЗначениеНеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			СпрНоменклатура          = СоздатьНоменклатуру(СтрокаТаблицы);
			СпрНоменклатура.Родитель = мГруппаДляНовойНоменклатуры;
			Попытка
				СпрНоменклатура.Записать();
				СтрокаТаблицы.Номенклатура = СпрНоменклатура.Ссылка;
				Сообщить("Создан элемент номенклатуры "+СпрНоменклатура);
			Исключение
				Сообщить("Ошибка при записи элемента номенклатуры "+СпрНоменклатура, СтатусСообщения.Важное);
				Продолжить;
			КонецПопытки;
			//Регистрируем единицу измерения
			СпрЕдиница                         = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
			СпрЕдиница.Владелец                = СпрНоменклатура.Ссылка;
			СпрЕдиница.ЕдиницаПоКлассификатору = СпрНоменклатура.БазоваяЕдиницаИзмерения;
			СпрЕдиница.Коэффициент             = 1;
			СпрЕдиница.Наименование            = Строка(СпрНоменклатура.БазоваяЕдиницаИзмерения);
			Попытка
				СпрЕдиница.Записать();
				СпрНоменклатура.ЕдиницаХраненияОстатков = СпрЕдиница.Ссылка;
				СпрНоменклатура.ЕдиницаДляОтчетов       = СпрЕдиница.Ссылка;
				СпрНоменклатура.Записать();
			Исключение
				Сообщить("Ошибка при записи единицы измерения элемента номенклатуры"+СпрНоменклатура, СтатусСообщения.Важное);
			КонецПопытки;

			//Регистрируем штрихкод
			Если НЕ ЗначениеНеЗаполнено(СтрокаТаблицы.ШтрихКод) Тогда
				ТекЗапись                  = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
				ТекЗапись.Код              = ПолучитьНовыйКодДляШтрихКода();
				ТекЗапись.Штрихкод         = СтрокаТаблицы.ШтрихКод;
				ТекЗапись.Владелец         = СпрНоменклатура.Ссылка;
				ТекЗапись.ЕдиницаИзмерения = СпрНоменклатура.ЕдиницаХраненияОстатков;
				ТекЗапись.ТипШтрихкода     = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
				ТекЗапись.Качество         = Справочники.Качество.Новый;
				ТекЗапись.Записать();
			КонецЕсли;
		КонецЦикла;

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "Контрагенты" Тогда
		Если НЕ Вопрос("Создать новых контрагентов для всех неопределенных строк?", РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.ОК, "Создание данных данных") = КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли;
		мСправочникДляВыбораГруппы = "Контрагенты";
		ФормаВыбора                = Справочники.Контрагенты.ПолучитьФормуВыбораГруппы( , ЭтаФорма);
		ФормаВыбора.Заголовок      = "Выбор группы для записи новых элементов";
		ФормаВыбора.ОткрытьМодально();

		Для Каждого СтрокаТаблицы Из СоответствияКонтрагентов Цикл
			Если НЕ ЗначениеНеЗаполнено(СтрокаТаблицы.НовыйКонтрагент) Тогда
				Продолжить;
			КонецЕсли;
			СпрКонтрагент          = СоздатьКонтрагента(СтрокаТаблицы);
			СпрКонтрагент.Родитель = мГруппаДляНовыхКонтрагентов;
			Попытка
				СпрКонтрагент.Записать();
				СтрокаТаблицы.НовыйКонтрагент = СпрКонтрагент.Ссылка;
				Сообщить("Создан контрагент "+СпрКонтрагент);
			Исключение
				Сообщить("Ошибка при записи контрагента "+СпрКонтрагент, СтатусСообщения.Важное);
			КонецПопытки;
		КонецЦикла;

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "ТипыЦенКонтрагентов" Тогда
		Если НЕ Вопрос("Создать новые типы цен для всех неопределенных строк?", РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.ОК, "Создание данных данных") = КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли;
		Для Каждого СтрокаТаблицы Из СоответствияТиповЦен Цикл
			Если НЕ ЗначениеНеЗаполнено(СтрокаТаблицы.НовыйТипЦены) ИЛИ ЗначениеНеЗаполнено(СтрокаТаблицы.Контрагент)Тогда
				Продолжить;
			КонецЕсли;
			СпрТипыЦен = СоздатьТипЦен(СтрокаТаблицы);
			Попытка
				СпрТипыЦен.Записать();
				СтрокаТаблицы.НовыйТипЦены = СпрТипыЦен.Ссылка;
				Сообщить("Создан тип цен контрагента "+СпрТипыЦен);
			Исключение
				Сообщить("Ошибка при записи типа цен контрагента  "+СпрТипыЦен, СтатусСообщения.Важное);
			КонецПопытки;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

// Процедура вызывается при нажатии кнопки "ОК" командной панели "ОсновныеДействияФормы"
//для сохрания изменеий и закрытия формы
//
Процедура КнопкаОКНажатие(Кнопка)

	//Сохраняем изменения соответствий номенклатуры
	ЗаменитьТоварыПоСоответствиям();

	//Сохраняем изменения соответствий валют
	ЗаменитьВалютыПоСоответствиям();

	//Сохраняем изменения соответствий единиц измерения
	ЗаменитьЕдиницыПоСоответствиям();

	//Сохраняем изменения соответствий контрагентов
	ЗаменитьКонтрагентовПоСоответствиям();

	//Сохраняем изменения соответствий типов цен
	ЗаменитьТипыЦенПоСоответствиям();

	//Сохраняем изменения соответствий организаций
	ЗаменитьОрганизацииПоСоответствиям();

	ОпределитьДокументыВБазе();

	Закрыть();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СоответствияТоваров

// Процедура - обработчик события "ПриАктивизацииСтроки" табличной части
// "СоответствияТоваров". устанавливает цвет строки
//
Процедура СоответствияТоваровПриАктивизацииСтроки(Элемент)

	УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("Номенклатура", ЭлементыФормы.СоответствияТоваров, "Номенклатура");

КонецПроцедуры

// Процедура - обработчик события "ПриВыводеСтроки" табличной части
// "СоответствияТоваров". устанавливает цвет строки
//
Процедура СоответствияТоваровПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	УстановитьЦветСтроки(ОформлениеСтроки, ДанныеСтроки.Номенклатура);

КонецПроцедуры

// Процедура - обработчик события "Очистка" поля ввода "Номенклатура"
// в строке табличной части "СоответствияТоваров".
//
Процедура СоответствияТоваровНоменклатураОчистка(Элемент, СтандартнаяОбработка)

	ЭлементыФормы.СоответствияТоваров.ТекущиеДанные.ХарактеристикаНоменклатуры = "";

КонецПроцедуры

// Процедура - обработчик события "Открытие" поля ввода "Номенклатура"
// в строке табличной части "СоответствияТоваров", создает новый элемент 
// справочника Номенклатура, если поле пустое
//
Процедура СоответствияТоваровНоменклатураОткрытие(Элемент, СтандартнаяОбработка)

	Если ЗначениеНеЗаполнено(Элемент.Значение) Тогда
		ВызватьСозданиеСправочника(Элемент.Значение, "Номенклатура");
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СоответстияВалют

// Процедура - обработчик события "ПриАктивизацииСтроки" табличной части
// "СоответстияВалют". устанавливает цвет строки
//
Процедура СоответствияВалютПриАктивизацииСтроки(Элемент)

	УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("Валюты", ЭлементыФормы.СоответствияВалют, "НовыйВалюта");

КонецПроцедуры

// Процедура - обработчик события "ПриВыводеСтроки" табличной части
// "СоответстияВалют". устанавливает цвет строки
//
Процедура СоответстияВалютПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	УстановитьЦветСтроки(ОформлениеСтроки, ДанныеСтроки.НовыйВалюта);

КонецПроцедуры

// Процедура - обработчик события "Открытие" поля ввода "НовыйВалюта"
// в строке табличной части "СоответстияВалют", создает новый элемент 
// справочника Валюты, если поле пустое
//
Процедура СоответстияВалютНовыйВалютаОткрытие(Элемент, СтандартнаяОбработка)

	Если ЗначениеНеЗаполнено(Элемент.Значение) Тогда
		ВызватьСозданиеСправочника(Элемент.Значение, "Валюты");
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СоответствияЕдиницИзмерения

// Процедура - обработчик события "ПриАктивизацииСтроки" табличной части
// "СоответствияЕдиницИзмерения". устанавливает цвет строки
//
Процедура СоответствияЕдиницИзмеренияПриАктивизацииСтроки(Элемент)

	УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("НовыйЕдиницаИзмерения", ЭлементыФормы.СоответствияЕдиницИзмерения, "НовыйЕдиницаИзмерения");

КонецПроцедуры

// Процедура - обработчик события "ПриВыводеСтроки" табличной части
// "СоответствияЕдиницИзмерения". устанавливает цвет строки
//
Процедура СоответствияЕдиницИзмеренияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	УстановитьЦветСтроки(ОформлениеСтроки, ДанныеСтроки.НовыйЕдиницаИзмерения);

КонецПроцедуры

// Процедура - обработчик события "Открытие" поля ввода "НовыйЕдиницаИзмерения"
// в строке табличной части "СоответствияЕдиницИзмерения", создает новый элемент 
// справочника КлассификаторЕдиницИзмерения, если поле пустое
//
Процедура СоответствияЕдиницИзмеренияНовыйЕдиницаИзмеренияОткрытие(Элемент, СтандартнаяОбработка)

	Если ЗначениеНеЗаполнено(Элемент.Значение) Тогда
		ВызватьСозданиеСправочника(Элемент.Значение, "КлассификаторЕдиницИзмерения");
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СоответствияКонтрагентов

// Процедура - обработчик события "ПриАктивизацииСтроки" табличной части
// "СоответствияКонтрагентов". устанавливает цвет строки
//
Процедура СоответствияКонтрагентовПриАктивизацииСтроки(Элемент)

	УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("Контрагенты", ЭлементыФормы.СоответствияКонтрагентов, "НовыйКонтрагент");

КонецПроцедуры

// Процедура - обработчик события "ПриВыводеСтроки" табличной части
// "СоответствияКонтрагентов". устанавливает цвет строки
//
Процедура СоответствияКонтрагентовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	УстановитьЦветСтроки(ОформлениеСтроки, ДанныеСтроки.НовыйКонтрагент);

КонецПроцедуры

// Процедура - обработчик события "Открытие" поля ввода "НовыйКонтрагент"
// в строке табличной части "СоответствияКонтрагентов", создает новый элемент 
// справочника Контрагенты, если поле пустое
//
Процедура СоответствияКонтрагентовНовыйКонтрагентОткрытие(Элемент, СтандартнаяОбработка)

	Если ЗначениеНеЗаполнено(Элемент.Значение) Тогда
		ВызватьСозданиеСправочника(Элемент.Значение, "Контрагенты");
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СоответствияТиповЦен

// Процедура - обработчик события "ПриАктивизацииСтроки" табличной части
// "СоответствияТиповЦен". устанавливает цвет строки
//
Процедура СоответствияТиповЦенПриАктивизацииСтроки(Элемент)

	УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("ТипыЦенКонтрагентов", ЭлементыФормы.СоответствияТиповЦен, "НовыйТипЦены");

КонецПроцедуры

// Процедура - обработчик события "ПриВыводеСтроки" табличной части
// "СоответствияТиповЦен". устанавливает цвет строки
//
Процедура СоответствияТиповЦенПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	УстановитьЦветСтроки(ОформлениеСтроки, ДанныеСтроки.НовыйТипЦены);

КонецПроцедуры

// Процедура - обработчик события "Открытие" поля ввода "НовыйТипЦены"
// в строке табличной части "СоответствияТиповЦен", создает новый элемент 
// справочника ТипыЦенНоменклатурыКонтрагентов, если поле пустое
//
Процедура СоответствияТиповЦенНовыйТипЦеныОткрытие(Элемент, СтандартнаяОбработка)

	Если ЗначениеНеЗаполнено(Элемент.Значение) Тогда
		ВызватьСозданиеСправочника(Элемент.Значение, "ТипыЦенНоменклатурыКонтрагентов");
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ СоответстсвияОрганизаций

// Процедура - обработчик события "ПриАктивизацииСтроки" табличной части
// "СоответстсвияОрганизаций". устанавливает цвет строки
//
Процедура СоответствияОрганизацийПриАктивизацииСтроки(Элемент)

	УстановитьДоступностьКнопкиСоздатьПоТекущейСтроке("Организации", ЭлементыФормы.СоответствияОрганизаций, "НовыйОрганизация");

КонецПроцедуры

// Процедура - обработчик события "ПриВыводеСтроки" табличной части
// "СоответстсвияОрганизаций". устанавливает цвет строки
//
Процедура СоответствияОрганизацийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	УстановитьЦветСтроки(ОформлениеСтроки, ДанныеСтроки.НовыйОрганизация);

КонецПроцедуры

// Процедура - обработчик события "Открытие" поля ввода "НовыйОрганизация"
// в строке табличной части "СоответстсвияОрганизаций", создает новый элемент 
// справочника Организации, если поле пустое
//
Процедура СоответствияОрганизацийНовыйОрганизацияОткрытие(Элемент, СтандартнаяОбработка)

	Если ЗначениеНеЗаполнено(Элемент.Значение) Тогда
		ВызватьСозданиеСправочника(Элемент.Значение, "Организации");
		СтандартнаяОбработка = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

//Назначаем цвета для строк с определеннными и неопределенными объектами
мЦветНеОпределено = Новый Цвет(255, 251, 240);
мЦветОпределено   = Новый Цвет(-1, -1, -1);
