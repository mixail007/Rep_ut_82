Перем ТЗПланПоНаправлениямПродаж;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура КнопкаВыбораПериодаНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьНажатие(Элемент)
	
	ПолучитьНастройки(ПериодРегистрации);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВводПоказателейЭффективностиПоНаправлениямДанные.ПоказательЭффективности КАК ПоказательПланирования,
		|	ВводПоказателейЭффективностиПоНаправлениямДанные.ПараметрПоказателя,
		|	ВводПоказателейЭффективностиПоНаправлениямДанные.Вес КАК KPI
		|ИЗ
		|	Документ.ВводПоказателейЭффективностиПоНаправлениям.Данные КАК ВводПоказателейЭффективностиПоНаправлениямДанные
		|ГДЕ
		|	ВводПоказателейЭффективностиПоНаправлениямДанные.Ссылка.ПериодРегистрации = &ПериодРегистрации
		|	И ВводПоказателейЭффективностиПоНаправлениямДанные.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И ВводПоказателейЭффективностиПоНаправлениямДанные.Ссылка.Проведен = ИСТИНА";

	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);

	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество()>0 Тогда
		ПланОтделаРазвития.Загрузить(Результат);
    КонецЕсли;
	
	Если ПланОтделаРазвития.Количество() = 0 Тогда
		Предупреждение("Должны быть заполнены показатели планирования");
		Возврат;
	КонецЕсли;
	
	ШинтрейдСПб = Новый СписокЗначений;
	ШинтрейдСПб.Добавить(Справочники.Контрагенты.НайтиПоКоду("П000382"));
	ШинтрейдСПб.Добавить(Справочники.Контрагенты.НайтиПоКоду("П001549"));
	ШинтрейдСПб.Добавить(Справочники.Контрагенты.НайтиПоКоду("94247"));  //*** 2016.09 Розничный покупатель ДПД
	ШинтрейдСПб.Добавить(Справочники.Контрагенты.НайтиПоКоду("94143"));  //*** 2016.09 Покупатель

	// Сакулина 
	СписокНаправлений = Новый СписокЗначений;
   ////  было:
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.Подмосковье);
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.Москва);
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.ЦентрРоссии);
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.ФилиалРнД);  //Марешева 
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.ФилиалСПб);  //Марешева
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.ФилиалЕкб);  //Марешева
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.НижнийНовгород);
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.БондаренкоКорпоративныеКлиенты);
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.СеверЮг);
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.Конечники);
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.Тендеры);
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.ИнтернетМагазины);
	
	//СписокНаправлений.Добавить(Справочники.НаправленияПродаж.Беларусь); //09.12.2016
	
	//(+++ 09.12.2016 - динамический список по всем направлениям,
	//					 где Согласование уходит на руководителя подразделения Деп.Продаж
	//						или для филиалов - согласование делает руководитель направления филиала
 	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	НаправленияПродаж.Ссылка
	                |ИЗ
	                |	Справочник.НаправленияПродаж КАК НаправленияПродаж
	                |ГДЕ
	                |	(НаправленияПродаж.Согласование = &РукДепПродаж
	                |			ИЛИ НаправленияПродаж.Руководитель = &РукНапрПродажФилиалов)
	                |	И НаправленияПродаж.Код <> 27";
	 ДепартаментПродаж = справочники.Подразделения.НайтиПоКоду("00104");
	 Запрос.УстановитьПараметр("РукДепПродаж", ДепартаментПродаж.Руководитель );  
	 Запрос.УстановитьПараметр("РукНапрПродажФилиалов", справочники.НаправленияПродаж.ФилиалРнД.Руководитель ); // по филиалам  - один человек
	 Результат = Запрос.Выполнить();
	 таблНапр  = Результат.Выгрузить();	 
     СписокНаправлений.ЗагрузитьЗначения( таблНапр.ВыгрузитьКолонку("Ссылка") );
	//++) 
	 
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактЯШТ.ТекстШапки = "ЯШТ факт " + Символы.ПС + Строка(Формат(Год(ДобавитьМесяц(НачалоМесяца(ПериодРегистрации), -12)), "ЧГ=0")) + Символы.ПС + "(1)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ПланЯШТ.ТекстШапки = "ЯШТ план " + Символы.ПС +  Строка(Формат(Год(НачалоМесяца(ПериодРегистрации)), "ЧГ=0")) + Символы.ПС + "(2)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ФактОР.ТекстШапки = "ДП факт " + Символы.ПС + Строка(Формат(Год(ДобавитьМесяц(НачалоМесяца(ПериодРегистрации), -12)), "ЧГ=0")) + Символы.ПС + "(3)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ДоляОРФакт.ТекстШапки = "Доля ДП," + Символы.ПС + " % факт " + Строка(Формат(Год(ДобавитьМесяц(НачалоМесяца(ПериодРегистрации), -12)), "ЧГ=0")) + Символы.ПС + "(4)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ПланПоМенедежрам.ТекстШапки = "План по менедж.," + Символы.ПС + Строка(Формат(Год(НачалоМесяца(ПериодРегистрации)), "ЧГ=0")) + Символы.ПС + "(5)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ПриростПланаКФакту.ТекстШапки = "Прирост плана" + Символы.ПС + "к факту по ДП, %" + Символы.ПС + "(6)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ДоляПланПоМенедежрам.ТекстШапки = "Доля ДП," + Символы.ПС + "% исходя из 5" + Символы.ПС + "(7)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ПланОР.ТекстШапки = "План ДП," + Символы.ПС+ "% исходя из 9" + Символы.ПС + "(8)";
	ЭлементыФормы.ПланОтделаРазвития.Колонки.ДоляОРПлан.ТекстШапки = "Доля ДП," + Символы.ПС + "% ручная настройка" + Символы.ПС + "(9)";
	
	ТаблицаПоНаправлениям.Колонки.Очистить();
	
	ИмяКолонкиТЗ = "Направление";
	ЗаголовокКолонкиТЗ = "Направления продаж";
	ТаблицаПоНаправлениям.Колонки.Добавить(ИмяКолонкиТЗ,,ЗаголовокКолонкиТЗ);
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить("Равно", " В ИЕРАРХИИ");
	Соответствие.Вставить("Не равно", " Не В ИЕРАРХИИ");
	Соответствие.Вставить("В группе", " В ИЕРАРХИИ" );
	Соответствие.Вставить("Не в группе", " Не В ИЕРАРХИИ" );
	Соответствие.Вставить("Содержит", " ПОДОБНО " );
	Соответствие.Вставить("Не содержит", " Не ПОДОБНО " );

	

	Для каждого СтрТЧ ИЗ ПланОтделаРазвития Цикл
		
		Если НЕ СтрТЧ.ПоказательПланирования.ТекстЗапроса = "" Тогда
			
			ТекстЗапроса = СтрТЧ.ПоказательПланирования.ТекстЗапроса;
			ТекстЗапросаЯШТФакт = СтрЗаменить(ТекстЗапроса, "НЕ ДоговорКонтрагента.Владелец В (&ШинтрейдСПб)", ""); 
			
			//Сакулина
			// Найдем типы параметров в Параметрах показателя
			ТЗ = Новый ТаблицаЗначений;
			ТЗ = СтрТЧ.ПараметрПоказателя.СписокПараметров.Выгрузить();		
			ТЗ.Свернуть("ВидСравнения,ТипПараметра");

		//	ТЗ.Свернуть("Тип,ВидСравнения");
			// Найдем типы параметров в Параметрах показателя
			//Сакулина				
			
			//ЯШТ Факт
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачДата", ДобавитьМесяц(НачалоМесяца(ПериодРегистрации), -12));
			Запрос.УстановитьПараметр("КонДата", ДобавитьМесяц(КонецДня(КонецМесяца(ПериодРегистрации)), -12));
			Запрос.УстановитьПараметр("ШинтрейдСПб", ШинтрейдСПб);
			Если НЕ СтрТЧ.ПараметрПоказателя = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
				ДлинаЗапроса = СтрДлина(ТекстЗапросаЯШТФакт);
				//Сакулина
				Вхождение = 0;
				Индекс = 0;
				Для каждого СтрокаТЗ из ТЗ Цикл
					Отбор = Новый Структура();
					Отбор.Вставить("ВидСравнения", СтрокаТЗ.ВидСравнения);
					Отбор.Вставить("ТипПараметра", СтрокаТЗ.ТипПараметра);
					
					Массив = СтрТЧ.ПараметрПоказателя.СписокПараметров.НайтиСтроки(Отбор);
					СписокПараметра = Новый СписокЗначений;
					Для Каждого СтрМ из Массив Цикл
						СписокПараметра.Добавить(СтрМ.параметр);
					КонецЦикла;

					СтрокаВидаСравнения = Соответствие.Получить(СтрокаТЗ.ВидСравнения);
					Индекс = Индекс + 1;
					Если СтрокаТЗ.ТипПараметра = "Номенклатурные группы" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура.НоменклатурнаяГруппа.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура.НоменклатурнаяГруппа " + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
						Вхождение = 1;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Производители" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура.Производитель.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров"  + Индекс + ")";
						Иначе
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура.Производитель" + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
						Вхождение = 1;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Типоразмеры" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," ","  и ")+ " Номенклатура.Типоразмер.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура.Типоразмер" + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Номенклатура" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура " + СтрокаВидаСравнения +  " (&СписокПараметров)" + Индекс + "))";
						КонецЕсли;
						Вхождение = 1;
 					ИначеЕсли СтрокаТЗ.ТипПараметра = "Модели товаров" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура.Модель.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура.Модель " + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
						Вхождение = 1;

					ИначеЕсли СтрокаТЗ.ТипПараметра = "Виды товаров" Тогда   // Сакулина
						ТекстЗапросаЯШТФакт = Лев(ТекстЗапросаЯШТФакт, СтрДлина(ТекстЗапросаЯШТФакт)-1)+ ?(Вхождение = 0," "," и ")+ " Номенклатура.ВидТовара " + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						Вхождение = 1;
					КонецЕсли;
					Если ТипЗнч(СписокПараметра[0].Значение) = Тип("Строка") Тогда
						Запрос.УстановитьПараметр("СписокПараметров"+ Индекс, "%" + СписокПараметра[0].Значение+ "%");
					Иначе
						Запрос.УстановитьПараметр("СписокПараметров"+ Индекс, СписокПараметра);
					КонецЕсли;


				КонецЦикла;
 			КонецЕсли;
 			Запрос.Текст = ТекстЗапросаЯШТФакт;
			
			Результат = Запрос.Выполнить().Выбрать();
			СтрТЧ.ФактЯШТ = 0;
			Если Результат.Следующий() Тогда
				СтрТЧ.ФактЯШТ = Окр(Результат.Значение,-2);
			КонецЕсли;
			
			// Сакулина
			// Проверим в Параметре показателя есть ли Отбор по Номенклатуре и Номенклатурным группам, 
			// если есть еще и по другим видам,тогда план не заполняем
			НеНадоЗаполнятьПлан = Ложь;
			Для каждого СтрПараметр из ТЗ Цикл
				Если СтрПараметр.ТипПараметра <> "Номенклатура" и  СтрПараметр.ТипПараметра <> "Номенклатурные группы" Тогда
					НеНадоЗаполнятьПлан = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// Сакулина

						
			////ЯШТ план 
			СтрТЧ.ПланЯШТ = 0; // Сакулина
			Если СтрТЧ.ПоказательПланирования = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВРублях
				И СтрТЧ.ПараметрПоказателя = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("НачДата", НачалоМесяца(ПериодРегистрации));
				Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(ПериодРегистрации)));
				Запрос.Текст = "ВЫБРАТЬ
				               |	ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот КАК ЗначениеПланОборот
				               |ИЗ
				               |	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, , ) КАК ПланыПродажОбороты";
							   
				Результат = Запрос.Выполнить().Выбрать();
			   	СтрТЧ.ПланЯШТ = 0;
			   	Если Результат.Следующий() Тогда
				   	СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
				КонецЕсли;
				
			ИначеЕсли СтрТЧ.ПоказательПланирования = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВРублях
				И Не СтрТЧ.ПараметрПоказателя = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() и НеНадоЗаполнятьПлан = Ложь Тогда
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("НачДата", НачалоМесяца(ПериодРегистрации));
				Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(ПериодРегистрации)));
				Запрос.УстановитьПараметр("СписокПараметров", СтрТЧ.ПараметрПоказателя.СписокПараметров.ВыгрузитьКолонку("Параметр"));
				Запрос.Текст = "ВЫБРАТЬ
				               |	ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот КАК ЗначениеПланОборот
				               |ИЗ
				               |	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, ,Номенклатура В Иерархии (&СписокПараметров) ) КАК ПланыПродажОбороты";
							   
				Результат = Запрос.Выполнить().Выбрать();
			   	СтрТЧ.ПланЯШТ = 0;
			   	Если Результат.Следующий() Тогда
				   	СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
				КонецЕсли;
				
			ИначеЕсли СтрТЧ.ПоказательПланирования = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВШтуках
				И НЕ СтрТЧ.ПараметрПоказателя = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() и НеНадоЗаполнятьПлан = Ложь  Тогда
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("НачДата", НачалоМесяца(ПериодРегистрации));
				Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(ПериодРегистрации)));
				Запрос.УстановитьПараметр("СписокПараметров", СтрТЧ.ПараметрПоказателя.СписокПараметров.ВыгрузитьКолонку("Параметр"));
				Запрос.Текст = "ВЫБРАТЬ
				               |	ПланыПродажОбороты.КоличествоОборот КАК ЗначениеПланОборот
				               |ИЗ
				               |	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, , Номенклатура В Иерархии (&СписокПараметров)) КАК ПланыПродажОбороты";
							   
				Результат = Запрос.Выполнить().Выбрать();
			   	СтрТЧ.ПланЯШТ = 0;
			   	Если Результат.Следующий() Тогда
				   	СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
				КонецЕсли;
			ИначеЕсли СтрТЧ.ПоказательПланирования = Справочники.ПоказателиЭффективности.ОбъемОтгрузкиВШтуках
				И СтрТЧ.ПараметрПоказателя = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("НачДата", НачалоМесяца(ПериодРегистрации));
				Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(ПериодРегистрации)));
				Запрос.Текст = "ВЫБРАТЬ
				               |	ПланыПродажОбороты.КоличествоОборот КАК ЗначениеПланОборот
				               |ИЗ
				               |	РегистрНакопления.ПланыПродаж.Обороты(&НачДата, &КонДата, ,) КАК ПланыПродажОбороты";
							   
				Результат = Запрос.Выполнить().Выбрать();
			   	СтрТЧ.ПланЯШТ = 0;
			   	Если Результат.Следующий() Тогда
				   	СтрТЧ.ПланЯШТ = Результат.ЗначениеПланОборот;
				КонецЕсли;

				
			КонецЕсли;			
			
			
			//ОР Факт
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачДата", ДобавитьМесяц(НачалоМесяца(ПериодРегистрации), -12));
			Запрос.УстановитьПараметр("КонДата", ДобавитьМесяц(КонецДня(КонецМесяца(ПериодРегистрации)), -12));
			Запрос.УстановитьПараметр("ШинтрейдСПб", ШинтрейдСПб);
			Запрос.УстановитьПараметр("СписокНаправлений", СписокНаправлений);

			Запрос.УстановитьПараметр("Пустая", Справочники.НаправленияПродаж.ПустаяСсылка());
			Если НЕ СтрТЧ.ПараметрПоказателя = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
				ДлинаЗапроса = СтрДлина(ТекстЗапроса);
				//Сакулина  
				Индекс =0;
				Для каждого СтрокаТЗ из ТЗ Цикл
					Отбор = Новый Структура();
					Отбор.Вставить("ВидСравнения", СтрокаТЗ.ВидСравнения);
					Отбор.Вставить("ТипПараметра", СтрокаТЗ.ТипПараметра);
					
					Массив = СтрТЧ.ПараметрПоказателя.СписокПараметров.НайтиСтроки(Отбор);
					СписокПараметра = Новый СписокЗначений;
					Для Каждого СтрМ из Массив Цикл
						СписокПараметра.Добавить(СтрМ.параметр);
					КонецЦикла;

					СтрокаВидаСравнения = Соответствие.Получить(СтрокаТЗ.ВидСравнения);
					Индекс = Индекс + 1;
					Если СтрокаТЗ.ТипПараметра = "Номенклатурные группы" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.НоменклатурнаяГруппа.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.НоменклатурнаяГруппа " + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
						Вхождение = 1;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Производители" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Производитель.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров"  + Индекс + ")";
						Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Производитель" + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
						Вхождение = 1;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Типоразмеры" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Типоразмер.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Типоразмер" + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Номенклатура" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура " + СтрокаВидаСравнения +  " (&СписокПараметров)" + Индекс + "))";
						КонецЕсли;
						Вхождение = 1;
 					ИначеЕсли СтрокаТЗ.ТипПараметра = "Модели товаров" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит"или СтрокаТЗ.ВидСравнения = "Не содержит"   Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Модель.Наименование " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Модель " + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
						Вхождение = 1;

					ИначеЕсли СтрокаТЗ.ТипПараметра = "Виды товаров" Тогда   // Сакулина
						ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+  "и Номенклатура.ВидТовара " + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						Вхождение = 1;
					КонецЕсли;
					Если ТипЗнч(СписокПараметра[0].Значение) = Тип("Строка") Тогда
						Запрос.УстановитьПараметр("СписокПараметров"+ Индекс, "%" + СписокПараметра[0].Значение+ "%");
					Иначе
						Запрос.УстановитьПараметр("СписокПараметров"+ Индекс, СписокПараметра);
					КонецЕсли;
				КонецЦикла;

				//Для каждого СтрокаТЗ из ТЗ Цикл
				//	Если СтрокаТЗ.Тип = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса,  СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.НоменклатурнаяГруппа В ИЕРАРХИИ(&СписокПараметров))";
				//	ИначеЕсли СтрокаТЗ.Тип = Тип("СправочникСсылка.Производители") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса,  СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.Производитель В(&СписокПараметров))";
				//	ИначеЕсли СтрокаТЗ.Тип = Тип("СправочникСсылка.Типоразмеры") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса,  СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.Типоразмер В(&СписокПараметров))";	
				//		ИначеЕсли СтрокаТЗ.Тип = Тип("СправочникСсылка.Номенклатура") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса,  СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура В ИЕРАРХИИ(&СписокПараметров))";	
				
				//	ИначеЕсли СтрокаТЗ.Тип = Тип("СправочникСсылка.МоделиТоваров") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса,  СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.Модель В(&СписокПараметров))";
				//	ИначеЕсли СтрокаТЗ.Тип = Тип("ПеречислениеСсылка.ВидыТоваров") Тогда   // Сакулина
				//		ТекстЗапроса = Лев(ТекстЗапроса,  СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.ВидТовара В(&СписокПараметров))";
				//	КонецЕсли;
				//КонецЦикла;
				//Сакулина
				//Запрос.УстановитьПараметр("СписокПараметров", СтрТЧ.ПараметрПоказателя.СписокПараметров.ВыгрузитьКолонку("Параметр"));
			КонецЕсли;

			//Если НЕ СтрТЧ.ПараметрПоказателя = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
			//	ДлинаЗапроса = СтрДлина(ТекстЗапроса);
			//	Если ТипЗНЧ(СтрТЧ.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			//		ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.НоменклатурнаяГруппа В(&СписокПараметров))";
			//	ИначеЕсли ТипЗНЧ(СтрТЧ.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Производители") Тогда
			//		ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Производитель В(&СписокПараметров))";	
			//	ИначеЕсли ТипЗНЧ(СтрТЧ.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Типоразмеры") Тогда
			//		ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Типоразмер В(&СписокПараметров))";	
			//	ИначеЕсли ТипЗНЧ(СтрТЧ.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.Номенклатура") Тогда
			//		ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура В ИЕРАРХИИ(&СписокПараметров))";	
			//	ИначеЕсли ТипЗНЧ(СтрТЧ.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("СправочникСсылка.МоделиТоваров") Тогда
			//		ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.Модель В(&СписокПараметров))";	
			//	ИначеЕсли ТипЗНЧ(СтрТЧ.ПараметрПоказателя.СписокПараметров[0].Параметр) = Тип("ПеречислениеСсылка.ВидыТоваров") Тогда   // Сакулина
			//		ТекстЗапроса = Лев(ТекстЗапроса, ДлинаЗапроса-1)+ " И Номенклатура.ВидТовара В(&СписокПараметров))";	
			//	КонецЕсли;
			//	Запрос.УстановитьПараметр("СписокПараметров", СтрТЧ.ПараметрПоказателя.СписокПараметров.ВыгрузитьКолонку("Параметр"));
			//КонецЕсли;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//отбор по менеджеру или направлению", "ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж В (&СписокНаправлений)");
			
			Запрос.Текст = ТекстЗапроса;
			
			Результат = Запрос.Выполнить().Выбрать();
			СтрТЧ.ФактОР = 0;
			Если Результат.Следующий() Тогда
				СтрТЧ.ФактОР = Окр(Результат.Значение,-2);
			КонецЕсли;
			
			
			//Менеджеры план
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачДата", НачалоМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(ПериодРегистрации)));
			Запрос.УстановитьПараметр("Показатель", СтрТЧ.ПоказательПланирования);
			Запрос.УстановитьПараметр("Параметр", СтрТЧ.ПараметрПоказателя);
			Запрос.Текст = "ВЫБРАТЬ
						   |	ПланыПродажПоПоказателямЭффективностиОбороты.ПоказательЭффективности,
						   |	ПланыПродажПоПоказателямЭффективностиОбороты.ЗначениеПланОборот КАК ЗначениеПланОборот
						   |ИЗ
						   |	РегистрНакопления.ПланыПродажПоПоказателямЭффективности.Обороты(
						   |			&НачДата,
						   |			&КонДата,
						   |			,
						   |			ПоказательЭффективности = &Показатель
						   |				И ПараметрПоказателя = &Параметр
						   |				И ОбъектПланирования ССЫЛКА Справочник.Пользователи) КАК ПланыПродажПоПоказателямЭффективностиОбороты";
			Результат = Запрос.Выполнить().Выбрать();
			СтрТЧ.ПланПоМенедежрам = 0;
			Если Результат.Следующий() Тогда
				СтрТЧ.ПланПоМенедежрам = Результат.ЗначениеПланОборот;
			КонецЕсли;
			
			//Прирост плана по ОР к факту по ОР
			Если НЕ СтрТЧ.ФактОР = 0 Тогда
				СтрТЧ.ПриростПланаКФакту = Окр((СтрТЧ.ПланПоМенедежрам - СтрТЧ.ФактОР) / СтрТЧ.ФактОР * 100,2);
			КонецЕсли;
			
			//ОР доля факт
			Если НЕ СтрТЧ.ФактЯШТ = 0 Тогда
				СтрТЧ.ДоляОРФакт = СтрТЧ.ФактОР * 100 / СтрТЧ.ФактЯШТ;
			КонецЕсли;
			
			
			//ОР доля план
			Если НЕ СтрТЧ.ПланЯШТ = 0 Тогда
				СтрТЧ.ДоляПланПоМенедежрам = СтрТЧ.ПланПоМенедежрам * 100 / СтрТЧ.ПланЯШТ;
			КонецЕсли;
			
		КонецЕсли;
		
		ИмяКолонкиТЗ = "Факт" + Строка(СтрТЧ.НомерСтроки);
		ЗаголовокКолонкиТЗ = СтрТЧ.ПоказательПланирования.Наименование + Символы.ПС + СтрТЧ.ПараметрПоказателя.Наименование + Символы.ПС + Строка(Формат(Год(ДобавитьМесяц(НачалоМесяца(ПериодРегистрации), -12)), "ЧГ=0"));
		ТаблицаПоНаправлениям.Колонки.Добавить(ИмяКолонкиТЗ,,ЗаголовокКолонкиТЗ);
		ИмяКолонкиТЗ = "План" + Строка(СтрТЧ.НомерСтроки);
		ТаблицаПоНаправлениям.Колонки.Добавить(ИмяКолонкиТЗ,,"План",15);
		ИмяКолонкиТЗ = "Прирост" + Строка(СтрТЧ.НомерСтроки);
		ТаблицаПоНаправлениям.Колонки.Добавить(ИмяКолонкиТЗ,,"Прирост, %",15);
		ИмяКолонкиТЗ = "ПланСерков" + Строка(СтрТЧ.НомерСтроки);
		ТаблицаПоНаправлениям.Колонки.Добавить(ИмяКолонкиТЗ,Новый ОписаниеТипов("Число"),"План Серков",15);
		ЭлементыФормы.ТаблицаПоНаправлениям.СоздатьКолонки();
				
	КонецЦикла;
	
	i = ТаблицаПоНаправлениям.Колонки.Количество();
	Пока i > 1 Цикл
		ЭлементыФормы.ТаблицаПоНаправлениям.Колонки[i-1].ВысотаЯчейки = 2;
		Если НЕ Найти(ЭлементыФормы.ТаблицаПоНаправлениям.Колонки[i-1].Имя, "Прирост") > 0 Тогда 
			ЭлементыФормы.ТаблицаПоНаправлениям.Колонки[i-1].ОтображатьИтогиВПодвале = Истина;
			ЭлементыФормы.ТаблицаПоНаправлениям.Колонки[i-1].ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложение.Право;
		Конецесли;
		i = i - 1;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НаправленияПродаж.Ссылка
	|ИЗ
	|	Справочник.НаправленияПродаж КАК НаправленияПродаж
	|ГДЕ
	|	НаправленияПродаж.Ссылка В(&СписокНаправлений)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НаправленияПродаж.Наименование
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("СписокНаправлений",СписокНаправлений);
	Результат = Запрос.Выполнить().Выбрать();
	
	ТаблицаПоНаправлениям.Очистить();
	
	Пока Результат.Следующий() Цикл
		
		НовСтр = ТаблицаПоНаправлениям.Добавить();
		НовСтр.Направление = Результат.Ссылка;
		
		стр = 1;
		i = 1;
		Пока i <= ПланОтделаРазвития.Количество() Цикл
			
			ПоказательПланирования = ПланОтделаРазвития[i-1].ПоказательПланирования;
			ПараметрПоказателя = ПланОтделаРазвития[i-1].ПараметрПоказателя;
			
			//Направление продаж Факт
			ТекстЗапроса = ПоказательПланирования.ТекстЗапроса;
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачДата", ДобавитьМесяц(НачалоМесяца(ПериодРегистрации), -12));
			Запрос.УстановитьПараметр("КонДата", ДобавитьМесяц(КонецДня(КонецМесяца(ПериодРегистрации)), -12));
			Запрос.УстановитьПараметр("ШинтрейдСПб", ШинтрейдСПб);
			Запрос.УстановитьПараметр("Направление", Результат.Ссылка);
			
			//Сакулина
			// Найдем типы параметров в Параметрах показателя
			ТЗ = Новый ТаблицаЗначений;
			ТЗ = ПараметрПоказателя.СписокПараметров.Выгрузить();		
			ТЗ.Свернуть("ВидСравнения,ТипПараметра");

			// Найдем типы параметров в Параметрах показателя
			//Сакулина

			Если НЕ ПараметрПоказателя = Справочники.ПараметрыПоказателейЭффективности.ПустаяСсылка() Тогда
				ДлинаЗапроса = СтрДлина(ТекстЗапроса);
				Вхождение = 0;
				//Сакулина
				Индекс =0;
				Для каждого СтрокаТЗ из ТЗ Цикл
					Отбор = Новый Структура();
					Отбор.Вставить("ВидСравнения", СтрокаТЗ.ВидСравнения);
					Отбор.Вставить("ТипПараметра", СтрокаТЗ.ТипПараметра);
					
					Массив = ПараметрПоказателя.СписокПараметров.НайтиСтроки(Отбор);
					СписокПараметра = Новый СписокЗначений;
					Для Каждого СтрМ из Массив Цикл
						СписокПараметра.Добавить(СтрМ.параметр);
					КонецЦикла;

					СтрокаВидаСравнения = Соответствие.Получить(СтрокаТЗ.ВидСравнения);
					Индекс = Индекс + 1;
					Если СтрокаТЗ.ТипПараметра = "Номенклатурные группы" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.НоменклатурнаяГруппа.Наименование  " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.НоменклатурнаяГруппа " + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Производители" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Производитель.Наименование  " + СтрокаВидаСравнения +  " &СписокПараметров"  + Индекс + ")";
						Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Производитель" + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Типоразмеры" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"   Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Типоразмер.Наименование  " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Типоразмер" + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Номенклатура" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Наименование  " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
						Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура " + СтрокаВидаСравнения +  " (&СписокПараметров)" + Индекс + "))";
						КонецЕсли;
 					ИначеЕсли СтрокаТЗ.ТипПараметра = "Модели товаров" Тогда
						Если СтрокаТЗ.ВидСравнения = "Содержит" или СтрокаТЗ.ВидСравнения = "Не содержит"  Тогда
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Модель.Наименование  " + СтрокаВидаСравнения +  " &СписокПараметров" + Индекс + ")";
					    Иначе
							ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ "и Номенклатура.Модель " + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
						КонецЕсли;
					ИначеЕсли СтрокаТЗ.ТипПараметра = "Виды товаров" Тогда   // Сакулина
						ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+  "и Номенклатура.ВидТовара " + СтрокаВидаСравнения +  " (&СписокПараметров" + Индекс + "))";
					КонецЕсли;
					Если ТипЗнч(СписокПараметра[0].Значение) = Тип("Строка") Тогда
						Запрос.УстановитьПараметр("СписокПараметров"+ Индекс, "%" + СписокПараметра[0].Значение+ "%");
					Иначе
						Запрос.УстановитьПараметр("СписокПараметров"+ Индекс, СписокПараметра);
					КонецЕсли;
				КонецЦикла;

				//Для каждого СтрокаТЗ из ТЗ Цикл
				//	Если СтрокаТЗ.Тип = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.НоменклатурнаяГруппа В ИЕРАРХИИ(&СписокПараметров))";
				//	ИначеЕсли СтрокаТЗ.Тип = Тип("СправочникСсылка.Производители") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.Производитель В(&СписокПараметров))";	
				//	ИначеЕсли СтрокаТЗ.Тип = Тип("СправочникСсылка.Типоразмеры") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.Типоразмер В(&СписокПараметров))";	
				//	ИначеЕсли СтрокаТЗ.Тип = Тип("СправочникСсылка.Номенклатура") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура В ИЕРАРХИИ(&СписокПараметров))";	
				//	ИначеЕсли СтрокаТЗ.Тип = Тип("СправочникСсылка.МоделиТоваров") Тогда
				//		ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.Модель В(&СписокПараметров))";	
				//	ИначеЕсли СтрокаТЗ.Тип = Тип("ПеречислениеСсылка.ВидыТоваров") Тогда   // Сакулина
				//		ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1)+ " И Номенклатура.ВидТовара В(&СписокПараметров))";	
				//	КонецЕсли;
				//КонецЦикла;
				//Сакулина
				//Запрос.УстановитьПараметр("СписокПараметров", ПараметрПоказателя.СписокПараметров.ВыгрузитьКолонку("Параметр"));
			КонецЕсли;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//отбор по менеджеру или направлению", "ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &Направление");
			
			Запрос.Текст = ТекстЗапроса;
			
			РезультатФакт = Запрос.Выполнить().Выбрать();
			Факт = 0;
			Если РезультатФакт.Следующий() Тогда
				Факт = Окр(РезультатФакт.Значение,-2);
				НовСтр.Установить(стр, Факт);
			КонецЕсли;
			
			стр = стр + 1;
			
			//Менеджеры план
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачДата", НачалоМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("КонДата", КонецДня(КонецМесяца(ПериодРегистрации)));
			Запрос.УстановитьПараметр("Показатель", ПоказательПланирования);
			Запрос.УстановитьПараметр("Параметр", ПараметрПоказателя);
			Запрос.УстановитьПараметр("Направление", Результат.Ссылка);
			Запрос.Текст = "ВЫБРАТЬ
			               |	ПланыПродажПоПоказателямЭффективностиОбороты.ПоказательЭффективности,
			               |	ПланыПродажПоПоказателямЭффективностиОбороты.ЗначениеПланОборот КАК ЗначениеПланОборот
			               |ИЗ
			               |	РегистрНакопления.ПланыПродажПоПоказателямЭффективности.Обороты(
			               |			&НачДата,
			               |			&КонДата,
			               |			,
			               |			ПоказательЭффективности = &Показатель
			               |				И ПараметрПоказателя = &Параметр
			               |				И ОбъектПланирования ССЫЛКА Справочник.Пользователи
			               |				И ОбъектПланирования.НаправлениеПродаж = &Направление) КАК ПланыПродажПоПоказателямЭффективностиОбороты";
			РезультатПлан = Запрос.Выполнить().Выбрать();
			План = 0;
			Если РезультатПлан.Следующий() Тогда
				План = РезультатПлан.ЗначениеПланОборот;
				НовСтр.Установить(стр, План);
			КонецЕсли;
			
			стр = стр + 1;
			
			//Прирост
			Если НЕ Факт = 0 Тогда
				НовСтр.Установить(стр, Окр((План - Факт) / Факт * 100,2));
			КонецЕсли;
			стр = стр + 1;
			
			//ПланСерков
			Если ТЗПланПоНаправлениямПродаж.Количество() > 0 Тогда
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("НаправлениеПродаж", Результат.Ссылка);
				ПараметрыОтбора.Вставить("НомерСтрокиТЧПланОтделаРазвития", i);
				НайденныеСтроки = ТЗПланПоНаправлениямПродаж.НайтиСтроки(ПараметрыОтбора);
				Если НайденныеСтроки.Количество() > 0 Тогда
					НовСтр.Установить(стр, НайденныеСтроки[0].ПланСерков);
				КонецЕсли;
			КонецЕсли;
			стр = стр + 1;
			i = i + 1;
			
		КонецЦикла;
	
	КонецЦикла;
	
	Для Каждого Стр из ЭлементыФормы.ТаблицаПоНаправлениям.Колонки Цикл
		Факт = ?(Найти(стр.Имя , "Факт") > 0, Стр.имя, Факт);
		План = ?(Найти(стр.Имя , "План") > 0,Стр.Имя, План);
		Если Найти(стр.Имя , "Прирост") > 0 тогда
			Показатель = Окр((ТаблицаПоНаправлениям.Итог(План) - ТаблицаПоНаправлениям.Итог(Факт)) / ?(ТаблицаПоНаправлениям.Итог(Факт) = 0, 1, ТаблицаПоНаправлениям.Итог(Факт)) * 100,2);
			Стр.ТекстПодвала = ?(Показатель > 100, 100, Показатель);
		КонецЕсли;
	КонецЦикла;
	//
	ЭлементыФормы.ТаблицаПоНаправлениям.ФиксацияСлева = 1;
КонецПроцедуры

Процедура ПланОтделаРазвитияДоляОРПланПриИзменении(Элемент)
	
	ТекСтр = ЭлементыФормы.ПланОтделаРазвития.ТекущиеДанные;
	ТекСтр.ПланОР = ТекСтр.ПланЯШТ * ТекСтр.ДоляОРПлан / 100; 
	
КонецПроцедуры

Процедура ПланОтделаРазвитияПланОРПриИзменении(Элемент)

	ТекСтр = ЭлементыФормы.ПланОтделаРазвития.ТекущиеДанные;
	ТекСтр.ДоляОРПлан = ТекСтр.ПланОР * 100 / ТекСтр.ПланЯШТ; 
	
КонецПроцедуры

Процедура ПланОтделаРазвитияПланЯШТПриИзменении(Элемент)

	ТекСтр = ЭлементыФормы.ПланОтделаРазвития.ТекущиеДанные;
	Если НЕ ТекСтр.ПланЯШТ = 0 Тогда
		ТекСтр.ДоляПланПоМенедежрам = ТекСтр.ПланПоМенедежрам * 100 / ТекСтр.ПланЯШТ;
		ТекСтр.ДоляОРПлан = ТекСтр.ПланОР * 100 / ТекСтр.ПланЯШТ; // Сакулина
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ПланПоНаправлениямПродаж.Очистить();
	
	Для каждого СтрТЗ ИЗ ТаблицаПоНаправлениям Цикл
		КолРазличныхОбъектовПлана = (ТаблицаПоНаправлениям.Колонки.Количество()-1)/4;
		Пока КолРазличныхОбъектовПлана > 0 Цикл
			КолонкаТЗ = ТаблицаПоНаправлениям.Колонки.Найти("ПланСерков" + Строка(КолРазличныхОбъектовПлана));
			СтрТЧ = ПланПоНаправлениямПродаж.Добавить();
			СтрТЧ.НаправлениеПродаж = СтрТЗ.Направление;
			СтрТЧ.НомерСтрокиТЧПланОтделаРазвития = КолРазличныхОбъектовПлана;
			СтрТЧ.ПланСерков = СтрТЗ.Получить(ТаблицаПоНаправлениям.Колонки.Индекс(КолонкаТЗ));   //4, 7, 10 и т.д. колонки содержат ПланСеркова
			КолРазличныхОбъектовПлана = КолРазличныхОбъектовПлана - 1;
		КонецЦикла;
	КонецЦикла;
	
	СохранитьЗначение("ТЧПланПоНаправлениямПродаж", ПланПоНаправлениямПродаж.Выгрузить());
	
КонецПроцедуры

Процедура ПриОткрытии()
	ПолучитьНастройки(НачалоМесяца(ТекущаяДата()));
	Если ПериодРегистрации = '00010101000000' Тогда
		ПериодРегистрации = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	// Заполним реквизит формы МесяцСтрока.
	МесяцСтрока = ДатаКакМесяцПредставление(ПериодРегистрации);
	
КонецПроцедуры

Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма);
	
КонецПроцедуры

Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ПериодРегистрации = ДобавитьМесяц(ПериодРегистрации, Направление);
	Элемент.Значение = ДатаКакМесяцПредставление(ПериодРегистрации);
	
КонецПроцедуры

Процедура УтвердитьПоказателиНажатие(Элемент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВводПоказателейЭффективностиПоНаправлениям.Ссылка
	               |ИЗ
	               |	Документ.ВводПоказателейЭффективностиПоНаправлениям КАК ВводПоказателейЭффективностиПоНаправлениям
	               |ГДЕ
	               |	ВводПоказателейЭффективностиПоНаправлениям.Проведен
	               |	И ВводПоказателейЭффективностиПоНаправлениям.ПериодРегистрации = &ПериодРегистрации";
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Количество() > 0 Тогда
		Предупреждение("В заданном периоде уже создан документ ""Ввод показателей эффективности по направлениям""");
		Возврат;
		
	КонецЕсли;
	
	ДокПлан = Документы.ВводПоказателейЭффективностиПоНаправлениям.СоздатьДокумент();
	ДокПлан.Дата = НачалоМесяца(НачалоМесяца(ПериодРегистрации));
	ДокПлан.ПериодРегистрации = НачалоМесяца(ПериодРегистрации);
	Для каждого Стр ИЗ ПланОтделаРазвития Цикл
		СтрокаПлан = ДокПлан.Данные.Добавить();
		СтрокаПлан.ПоказательЭффективности = Стр.ПоказательПланирования;
		СтрокаПлан.ПараметрПоказателя = Стр.ПараметрПоказателя;
		СтрокаПлан.Вес = Стр.KPI;
	КонецЦикла;
	ДокПлан.Записать(РежимЗаписиДокумента.Проведение);	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.Пользователи.ПустаяСсылка());
	Запрос.Текст = "ВЫБРАТЬ
	               |	НаправленияПродаж.Ссылка
	               |ИЗ
	               |	Справочник.НаправленияПродаж КАК НаправленияПродаж
	               |ГДЕ
	               |	НаправленияПродаж.ОтветственныйЗаПланирование <> &ПустаяСсылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяЗадача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
		НоваяЗадача.Инициатор = глТекущийПользователь;
		НоваяЗадача.Исполнитель = Выборка.Ссылка.ОтветственныйЗаПланирование;
		НоваяЗадача.Дата = ТекущаяДата();
		НоваяЗадача.Оповещение = Истина;
		НоваяЗадача.СрокОповещения = ТекущаяДата();
		НоваяЗадача.Наименование = "Утверждены показатели планирования работы Отдела развития на предстоящий месяц";
		НоваяЗадача.Записать();
	КонецЦикла;
	Предупреждение("Документ создан. Задачи ответственным за направления отправлены.");
	
КонецПроцедуры

Процедура УтвердитьПланПоНаправлениямНажатие(Элемент)
	
	ПланПоНаправлениямПродаж.Очистить();
	
	Для каждого СтрТЗ ИЗ ТаблицаПоНаправлениям Цикл
		КолРазличныхОбъектовПлана = (ТаблицаПоНаправлениям.Колонки.Количество()-1)/4;
		Пока КолРазличныхОбъектовПлана > 0 Цикл
			КолонкаТЗ = ТаблицаПоНаправлениям.Колонки.Найти("ПланСерков" + Строка(КолРазличныхОбъектовПлана));
			СтрТЧ = ПланПоНаправлениямПродаж.Добавить();
			СтрТЧ.НаправлениеПродаж = СтрТЗ.Направление;
			СтрТЧ.НомерСтрокиТЧПланОтделаРазвития = КолРазличныхОбъектовПлана;
			СтрТЧ.ПланСерков = СтрТЗ.Получить(ТаблицаПоНаправлениям.Колонки.Индекс(КолонкаТЗ));   //4, 7, 10 и т.д. колонки содержат ПланСеркова
			СтрТЧ.ПланМенеджер = СтрТЗ.Получить(ТаблицаПоНаправлениям.Колонки.Индекс(КолонкаТЗ)-2);
			КолРазличныхОбъектовПлана = КолРазличныхОбъектовПлана - 1;
		КонецЦикла;
	КонецЦикла;
	
	ТЗНаправлений = ПланПоНаправлениямПродаж.Выгрузить();
	ТЗНаправлений.Свернуть("НаправлениеПродаж");
	Для каждого СтрНапр ИЗ ТЗНаправлений Цикл
		НоваяЗадача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
		НоваяЗадача.Инициатор = глТекущийПользователь;
		НоваяЗадача.Исполнитель = СтрНапр.НаправлениеПродаж.ОтветственныйЗаПланирование;
		НоваяЗадача.Дата = ТекущаяДата();
		НоваяЗадача.Оповещение = Истина;
		НоваяЗадача.СрокОповещения = ТекущаяДата();
		НоваяЗадача.Наименование = "Утверждение плана продаж по направлению " + СтрНапр.НаправлениеПродаж.Наименование;
		ОписаниеЗадачи = СтрНапр.НаправлениеПродаж.Наименование + " " + ДатаКакМесяцПредставление(ПериодРегистрации) + Символы.ПС + "*****************************************" + Символы.ПС;
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("НаправлениеПродаж", СтрНапр.НаправлениеПродаж);
		НайденныеСтроки = ПланПоНаправлениямПродаж.НайтиСтроки(ПараметрыОтбора);
		Для каждого СтрМассива ИЗ НайденныеСтроки Цикл
			Если СтрМассива.ПланСерков = 0 Тогда
				УтвПлан = СтрМассива.ПланМенеджер;
			Иначе 
				УтвПлан = СтрМассива.ПланСерков;
			КонецЕсли;
			ОписаниеЗадачи = ОписаниеЗадачи + ПланОтделаРазвития[СтрМассива.НомерСтрокиТЧПланОтделаРазвития-1].ПоказательПланирования.Наименование + Символы.ПС + ПланОтделаРазвития[СтрМассива.НомерСтрокиТЧПланОтделаРазвития-1].ПараметрПоказателя.Наименование + Символы.ПС + Строка(УтвПлан) + Символы.ПС + "*****************************************" + Символы.ПС;
		КонецЦикла;
		НоваяЗадача.Описание = ОписаниеЗадачи;
		НоваяЗадача.Записать();
	КонецЦикла;
	Предупреждение("План по направлениям утвержден. Задачи ответственным за направления отправлены.");
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОчиститьИсторию(Кнопка)
	//Миронычев
	Если Вопрос("Вы действительно хотите Очистить?",РежимДиалогаВопрос.ДаНет, 30)=КодВозвратаДиалога.Да Тогда
	//КонецМиронычев	
		Для каждого СтрТЧ ИЗ ПланОтделаРазвития Цикл
		СтрТЧ.ПланЯШТ = 0;
		СтрТЧ.ПланОР = 0;
		СтрТЧ.ДоляОРПлан = 0;
	КонецЦикла;
	
	Для каждого СтрТЗ ИЗ ТаблицаПоНаправлениям Цикл
		КолРазличныхОбъектовПлана = (ТаблицаПоНаправлениям.Колонки.Количество()-1)/4;
		Пока КолРазличныхОбъектовПлана > 0 Цикл
			КолонкаТЗ = ТаблицаПоНаправлениям.Колонки.Найти("ПланСерков" + Строка(КолРазличныхОбъектовПлана));
			СтрТЗ.Установить(ТаблицаПоНаправлениям.Колонки.Индекс(КолонкаТЗ), 0);
			КолРазличныхОбъектовПлана = КолРазличныхОбъектовПлана - 1;
		КонецЦикла;
	КонецЦикла;
	//Миронычев
КонецЕсли;
//КонецМиронычев
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если РольДоступна("ПолныеПрава") ИЛИ РольДоступна("МенеджерПоВзаимозачетам") Тогда
	Иначе
		Сообщить("Нет доступа");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	
	//Миронычев
	Если Вопрос("Вы действительно хотите Сохранить?",РежимДиалогаВопрос.ДаНет, 30)=КодВозвратаДиалога.Да Тогда
	//КонецМиронычев			

	ПланПоНаправлениямПродаж.Очистить();
	
	Для каждого СтрТЗ ИЗ ТаблицаПоНаправлениям Цикл
		КолРазличныхОбъектовПлана = (ТаблицаПоНаправлениям.Колонки.Количество()-1)/4;
		Пока КолРазличныхОбъектовПлана > 0 Цикл
			КолонкаТЗ = ТаблицаПоНаправлениям.Колонки.Найти("ПланСерков" + Строка(КолРазличныхОбъектовПлана));
			СтрТЧ = ПланПоНаправлениямПродаж.Добавить();
			СтрТЧ.НаправлениеПродаж = СтрТЗ.Направление;
			СтрТЧ.НомерСтрокиТЧПланОтделаРазвития = КолРазличныхОбъектовПлана;
			СтрТЧ.ПланСерков = СтрТЗ.Получить(ТаблицаПоНаправлениям.Колонки.Индекс(КолонкаТЗ));   //4, 7, 10 и т.д. колонки содержат ПланСеркова
			КолРазличныхОбъектовПлана = КолРазличныхОбъектовПлана - 1;
		КонецЦикла;
	КонецЦикла;
	
    НоваяЗапись = РегистрыСведений.НастройкиОбработок.СоздатьМенеджерЗаписи();
    НоваяЗапись.Период = ТекущаяДата();
	НоваяЗапись.ВидОбработки = "МастерПланированияОтделаРазвития";
    НоваяЗапись.ТЧ = Новый ХранилищеЗначения(ПланПоНаправлениямПродаж.Выгрузить());
    НоваяЗапись.Записать(); 

	//проверка наличия записи
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиОбработок.ТЧ
		|ИЗ
		|	РегистрСведений.НастройкиОбработок КАК НастройкиОбработок
		|ГДЕ
		|	НастройкиОбработок.ВидОбработки = ""МастерПланированияОтделаРазвития""
		|	И НастройкиОбработок.Период = &ДатаМесяца";

	Запрос.УстановитьПараметр("ДатаМесяца", НачалоМесяца(ТекущаяДата()));	
	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();

	Если Выборка.Следующий() Тогда
		ТЗ = Выборка.ТЧ.Получить();
		Если ТЗ.Количество() <> 0 Тогда
			Предупреждение("Изменения, введенные вручную, сохранены.");
		КонецЕсли;	
	КонецЕсли;

	
	//Результат = ЗначениеВФайл("НастройкиМастераПланирования.1с",  ПланПоНаправлениямПродаж.Выгрузить());
	//СохранитьЗначение("ТЧПланПоНаправлениямПродаж", ПланПоНаправлениямПродаж.Выгрузить());
	
	//Если Результат Тогда
		//Предупреждение("Изменения, введенные вручную, сохранены.");
	//КонецЕсли;
	//Миронычев
КонецЕсли;
//КонецМиронычев
КонецПроцедуры

//Миронычев
Процедура ОсновныеДействияФормыОсновныеДействияФормыЗакрыть(Кнопка)
	
	Если Вопрос("Вы действительно хотите Закрыть?",РежимДиалогаВопрос.ДаНет, 30)=КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьНастройки(ДатаНастройки)
	Попытка
		//ПолученноеЗначение = ЗначениеИзФайла("НастройкиМастераПланирования.1с");
		//*******************************************************************
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НастройкиОбработок.ТЧ
			|ИЗ
			|	РегистрСведений.НастройкиОбработок КАК НастройкиОбработок
			|ГДЕ
			|	НастройкиОбработок.ВидОбработки = ""МастерПланированияОтделаРазвития""
			|	И НастройкиОбработок.Период = &ДатаМесяца";

		Запрос.УстановитьПараметр("ДатаМесяца", ДатаНастройки);	
		Результат = Запрос.Выполнить();

		Выборка = Результат.Выбрать();

		Если Выборка.Следующий() Тогда
			ПолученноеЗначение = Выборка.ТЧ.Получить();
		КонецЕсли;
		//***************************************
		Если ТипЗнч(ПолученноеЗначение) = Тип("ТаблицаЗначений") Тогда
			ТЗПланПоНаправлениямПродаж = ПолученноеЗначение;
		Иначе
			ТЗПланПоНаправлениямПродаж = ВосстановитьЗначение("ТЧПланПоНаправлениямПродаж");
		КонецЕсли;
	Исключение
		ТЗПланПоНаправлениямПродаж = ВосстановитьЗначение("ТЧПланПоНаправлениямПродаж");
	КонецПопытки;
КонецПроцедуры
//КонецМиронычев

ТЗПланПоНаправлениямПродаж = Новый ТаблицаЗначений;