
Перем мСписокКлючейСтруктурыСобытий Экспорт;

// Список представлений отборов
Перем мСтруктураПредставленийОтборов Экспорт;

// Список отборов
Перем мСписокОтборов Экспорт;

// Форма, которая на протяжении всего времени операции обмена информацией
//  показывает состояния отдельных, наиболее продолжительных, ее этапов.
Перем мФормаИндикации Экспорт;

// Функция формирует часть текста запроса по заказам покупателей
// для режимов День, Неделя и Месяц
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьТекстЗапроса_ЗаказыПокупателей()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя                КАК Документ,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОтгрузки   КАК Дата,
	|	&ЗаказПокупателяОтгрузка                                КАК ТипЗаказа,
	|	&ПустаяДата                                             КАК ДатаНачалаСобытия,
	|	&ПустаяДата                                             КАК ДатаКонцаСобытия,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент     КАК Контрагент,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КонтактноеЛицо КАК КонтактноеЛицо
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(&ТекущаяДата, ЗаказПокупателя ССЫЛКА Документ.ЗаказПокупателя) КАК ЗаказыПокупателейОстатки
	|	
	|ГДЕ
	|	ЗаказыПокупателейОстатки.КоличествоОстаток <> 0
	|	И
	|	(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата <= &ДатаКон","") + ")
	|	И
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Ответственный в (&ТекПользователь)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСКонтрагентамиОстатки.Сделка                КАК Документ,
	|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты     КАК Дата,
	|	&ЗаказПокупателяОплата                             КАК ТипЗаказа,
	|	&ПустаяДата                                        КАК ДатаНачалаСобытия,
	|	&ПустаяДата                                        КАК ДатаКонцаСобытия,
	|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент     КАК Контрагент,
	|	РасчетыСКонтрагентамиОстатки.Сделка.КонтактноеЛицо КАК КонтактноеЛицо
	|ИЗ
	//01.04.2019
	|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата, Сделка ССЫЛКА Документ.ЗаказПокупателя) КАК РасчетыСКонтрагентамиОстатки
	|	
	|ГДЕ
	|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток <> 0
	|	И
	|	(РасчетыСКонтрагентамиОстатки.Сделка.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И РасчетыСКонтрагентамиОстатки.Сделка.Дата <= &ДатаКон","") + ")
	|	И
	|	РасчетыСКонтрагентамиОстатки.Сделка.Ответственный в (&ТекПользователь)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует часть текста запроса по заказам поставщикам
// для режимов День, Неделя и Месяц
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьТекстЗапроса_ЗаказыПоставщикам()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику                 КАК Документ,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК Дата,
	|	&ЗаказПоставщикуПоступление                              КАК ТипЗаказа,
	|	&ПустаяДата                                              КАК ДатаНачалаСобытия,
	|	&ПустаяДата                                              КАК ДатаКонцаСобытия,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент      КАК Контрагент,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КонтактноеЛицо  КАК КонтактноеЛицо
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ТекущаяДата, ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток <> 0
	|	И
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Ответственный в (&ТекПользователь)
	|	И
	|	(ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата <= &ДатаКон","") + ")
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСКонтрагентамиОстатки.Сделка                КАК Документ,
	|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты     КАК Дата,
	|	&ЗаказПоставщикуОплата                             КАК ТипЗаказа,
	|	&ПустаяДата                                        КАК ДатаНачалаСобытия,
	|	&ПустаяДата                                        КАК ДатаКонцаСобытия,
	|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент     КАК Контрагент,
	|	РасчетыСКонтрагентамиОстатки.Сделка.КонтактноеЛицо КАК КонтактноеЛицо
	|ИЗ
	//+++ 01.04.2019
	|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата, Сделка ССЫЛКА Документ.ЗаказПоставщику) КАК РасчетыСКонтрагентамиОстатки
	|ГДЕ
	|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток <> 0
	|	И
	|	РасчетыСКонтрагентамиОстатки.Сделка.Ответственный в (&ТекПользователь)
	|	И
	|	(РасчетыСКонтрагентамиОстатки.Сделка.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И РасчетыСКонтрагентамиОстатки.Сделка.Дата <= &ДатаКон","") + ")
	|";
	
	Возврат ТекстЗапроса;

КонецФункции

// Функция формирует часть текста запроса по заказам поставщикам и заказам покупателей
// для режимов День, Неделя и Месяц
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьТекстЗапроса_ЗаказыВсе()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя                КАК Документ,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОтгрузки   КАК Дата,
	|	&ЗаказПокупателяОтгрузка                                КАК ТипЗаказа,
	|	&ПустаяДата                                             КАК ДатаНачалаСобытия,
	|	&ПустаяДата                                             КАК ДатаКонцаСобытия,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент     КАК Контрагент,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КонтактноеЛицо КАК КонтактноеЛицо
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(&ТекущаяДата, ЗаказПокупателя ССЫЛКА Документ.ЗаказПокупателя) КАК ЗаказыПокупателейОстатки
	|ГДЕ
	|	ЗаказыПокупателейОстатки.КоличествоОстаток <> 0
	|	И
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Ответственный в (&ТекПользователь)
	|	И
	|	(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата <= &ДатаКон","") + ")
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСКонтрагентамиОстатки.Сделка                КАК Документ,
	|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты     КАК Дата,
	|	&ЗаказПокупателяОплата                             КАК ТипЗаказа,
	|	&ПустаяДата                                        КАК ДатаНачалаСобытия,
	|	&ПустаяДата                                        КАК ДатаКонцаСобытия,
	|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент     КАК Контрагент,
	|	РасчетыСКонтрагентамиОстатки.Сделка.КонтактноеЛицо КАК КонтактноеЛицо
	|ИЗ
	//+++ 01.04.2019
	|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата, Сделка ССЫЛКА Документ.ЗаказПокупателя) КАК РасчетыСКонтрагентамиОстатки
	|ГДЕ
	|	РасчетыСКонтрагентамиОстатки.Сделка.Ответственный в (&ТекПользователь)
	|	И
	|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток <> 0
	|	И
	|	(РасчетыСКонтрагентамиОстатки.Сделка.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И РасчетыСКонтрагентамиОстатки.Сделка.Дата <= &ДатаКон","") + ")
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику                 КАК Документ,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК Дата,
	|	&ЗаказПоставщикуПоступление                              КАК ТипЗаказа,
	|	&ПустаяДата                                              КАК ДатаНачалаСобытия,
	|	&ПустаяДата                                              КАК ДатаКонцаСобытия,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент      КАК Контрагент,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КонтактноеЛицо  КАК КонтактноеЛицо
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ТекущаяДата, ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток <> 0
	|	И
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Ответственный В (&ТекПользователь)
	|	И
	|	(ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата <= &ДатаКон","") + ")
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСКонтрагентамиОстатки.Сделка                КАК Документ,
	|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты     КАК Дата,
	|	&ЗаказПоставщикуОплата                             КАК ТипЗаказа,
	|	&ПустаяДата                                        КАК ДатаНачалаСобытия,
	|	&ПустаяДата                                        КАК ДатаКонцаСобытия,
	|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент     КАК Контрагент,
	|	РасчетыСКонтрагентамиОстатки.Сделка.КонтактноеЛицо КАК КонтактноеЛицо
	|ИЗ
	//+++ 01.04.2019
	|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата, Сделка ССЫЛКА Документ.ЗаказПоставщику) КАК РасчетыСКонтрагентамиОстатки
	|ГДЕ
	|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток <> 0
	|	И
	|	РасчетыСКонтрагентамиОстатки.Сделка.Ответственный В (&ТекПользователь)
	|	И
	|	(РасчетыСКонтрагентамиОстатки.Сделка.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И РасчетыСКонтрагентамиОстатки.Сделка.Дата <= &ДатаКон","") + ")
	|
	|";
	
	Возврат ТекстЗапроса;

КонецФункции

// Функция возвращает Строку Вида отбора для запроса
// 
// Параметры
// ВидОтбора - ВидОтбора
// ЗначениеОтбора - Значение отбора запроса
// 
// Возвращаемое значение 
//  Строка для запроса
Функция ВозвратитьСтрокуВидаОтбора(ВидОтбора, ЗначениеОтбора)

	СтрокаВозврата = "";
	Если ВидОтбора = ВидСравнения.Равно Тогда
		СтрокаВозврата = Строка("= "+ЗначениеОтбора);
	ИначеЕсли ВидОтбора = ВидСравнения.НеРавно Тогда
		СтрокаВозврата = Строка("<> "+ЗначениеОтбора);
	ИначеЕсли ВидОтбора = ВидСравнения.ВСписке Тогда
		СтрокаВозврата = Строка("В ("+ЗначениеОтбора+")");
	ИначеЕсли ВидОтбора = ВидСравнения.НеВСписке Тогда
		СтрокаВозврата = Строка("НЕ В ("+ЗначениеОтбора+")");
	КонецЕсли;

	Возврат СтрокаВозврата;
	
КонецФункции // ВозвратитьСтрокуВидаОтбора()

// Процедура заполняет табличную часть обработки ЗаказыСобытия.
// 
// Параметры
//  НЕТ
// 
// Возвращаемое значение 
//  НЕТ
Процедура ЗаполнитьСобытия(ОтображатьЗаказы, ОтображаемыеЗаказы) Экспорт
	
	Перем Отбор;
	
	МассивТекстовЗапросов = Новый Массив;
	
	мФормаИндикации.КомментарийОбработкиДанных = "Выполняется заполнение событий списка ...";
	мФормаИндикации.МаксимальноеЗначение = 100;
	мФормаИндикации.Значение = 50;
	мФормаИндикации.Открыть();
	
	ОтборКонтрагент   = СтруктураОтборов.Получить("Контрагент");
	ОтборПользователь = СтруктураОтборов.Получить("Пользователь");
	
	СписокПользователейСПодменами = Новый СписокЗначений;
	СписокПользователейСПодменами.Добавить(ПользовательКалендаря);

	Если ОтображатьЗаказы Тогда
		
		Если ОтображаемыеЗаказы = 1 Тогда // Заказы покупателей
			
			СтруктураЗапроса = Новый Структура;
			СтруктураПараметров = Новый Структура;
			
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	РасчетыСКонтрагентамиОстатки.Сделка                         КАК Документ,
			|	&ВидЗаказПокупателяОплата                                   КАК ВидОперации,
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток     КАК Законченность,
			|	ВЫБОР КОГДА
			|		((ОтгрузкиПоЗаказам.ЗаказПокупателя ЕСТЬ NULL) И (ЗаказыПокупателейОстатки.КоличествоОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ                                                       КАК ВыполненностьВторойЧастиЗаказа,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ВалютаДокумента         КАК ВалютаДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КурсВзаиморасчетов      КАК КурсВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СуммаДокумента          КАК СуммаДокумента,
			|	NULL                                                        КАК СостояниеСобытия,
			|	NULL                                                        КАК Важность,
			|	NULL                                                        КАК ТипСобытия,
			|	NULL                                                        КАК ОписаниеСобытия,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент              КАК Контрагент,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Дата                    КАК Дата,
			|	NULL                                                        КАК НачалоСобытия,
			|	""Заказ покупателя""                                        КАК ПредставлениеДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Номер                   КАК Номер,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОтгрузки            КАК ДатаПоступленияОтгрузки,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты              КАК ДатаОплаты,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Склад                   КАК Склад,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СтруктурнаяЕдиница      КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР КОГДА ДокументЗаказПокупателяТовары.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПокупателяТовары.Количество КОНЕЦ
			|	    + ВЫБОР КОГДА ДокументЗаказПокупателяВозвратнаяТара.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПокупателяВозвратнаяТара.Количество КОНЕЦ) КАК ИтогКоличествоТЧ
			|ИЗ
			//+++ 01.04.2019
			|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата, Сделка ССЫЛКА Документ.ЗаказПокупателя) КАК РасчетыСКонтрагентамиОстатки
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.ЗаказыПокупателей.Остатки(&ТекущаяДата) КАК ЗаказыПокупателейОстатки
			|ПО
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПокупателя.Товары КАК ДокументЗаказПокупателяТовары
			|ПО
			|	ДокументЗаказПокупателяТовары.Ссылка = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПокупателя.ВозвратнаяТара КАК ДокументЗаказПокупателяВозвратнаяТара
			|ПО
			|	ДокументЗаказПокупателяВозвратнаяТара.Ссылка = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		ЗаказыПокупателейОбороты.ЗаказПокупателя КАК ЗаказПокупателя
			|	ИЗ
			|		РегистрНакопления.ЗаказыПокупателей.Обороты КАК ЗаказыПокупателейОбороты
			|	ГДЕ
			|		ЗаказыПокупателейОбороты.КоличествоРасход > 0
			|	) КАК ОтгрузкиПоЗаказам
			|ПО
			|	ОтгрузкиПоЗаказам.ЗаказПокупателя = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ГДЕ 
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток <> 0
			|	И
			|	(РасчетыСКонтрагентамиОстатки.Сделка.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И РасчетыСКонтрагентамиОстатки.Сделка.Дата <= &ДатаКон","") + ")
			|	И
			|	РасчетыСКонтрагентамиОстатки.Сделка.Ответственный В (&СписокПользователейСПодменами)";

			Если ОтборКонтрагент <> Неопределено Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|	И
				|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент " + ВозвратитьСтрокуВидаОтбора(ОтборКонтрагент[0],"&ВыбКонтрагент") + "
				|";
				
				СтруктураПараметров.Вставить("ВыбКонтрагент",ОтборКонтрагент[1]);
				
			КонецЕсли;

			ТекстЗапроса = ТекстЗапроса + "
			|
			|СГРУППИРОВАТЬ ПО
			|	РасчетыСКонтрагентамиОстатки.Сделка,
			|	&ВидЗаказПокупателяОплата,
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
			|	(ВЫБОР КОГДА
			|		((ОтгрузкиПоЗаказам.ЗаказПокупателя ЕСТЬ NULL) И (ЗаказыПокупателейОстатки.КоличествоОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ),
			|	РасчетыСКонтрагентамиОстатки.Сделка.ВалютаДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КурсВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КратностьВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СуммаДокумента,
			|	NULL,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Дата,
			|	""Заказ покупателя"",
			|	РасчетыСКонтрагентамиОстатки.Сделка.Номер,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОтгрузки,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Склад,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СтруктурнаяЕдиница
			|";
			
			СтруктураЗапроса.Вставить("ТекстЗапроса", ТекстЗапроса);
			СтруктураЗапроса.Вставить("ПараметрыЗапроса", СтруктураПараметров);
			МассивТекстовЗапросов.Добавить(СтруктураЗапроса);
			
			СтруктураЗапроса = Новый Структура;
			СтруктураПараметров = Новый Структура;
			
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя                         КАК Документ,
			|	&ВидЗаказПокупателяОтгрузка                                      КАК ВидОперации,
			|	ЗаказыПокупателейОстатки.КоличествоОстаток                       КАК Законченность,
			|	ВЫБОР КОГДА
			|		((ПлатежиПоСделкам.ОжидаемыйПлатеж ЕСТЬ NULL) И (РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ                                                            КАК ВыполненностьВторойЧастиЗаказа,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ВалютаДокумента         КАК ВалютаДокумента,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КурсВзаиморасчетов      КАК КурсВзаиморасчетов,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.СуммаДокумента          КАК СуммаДокумента,
			|	NULL                                                             КАК СостояниеСобытия,
			|	NULL                                                             КАК Важность,
			|	NULL                                                             КАК ТипСобытия,
			|	NULL                                                             КАК ОписаниеСобытия,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент              КАК Контрагент,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата                    КАК Дата,
			|	NULL                                                             КАК НачалоСобытия,
			|	""Заказ покупателя""                                             КАК ПредставлениеДокумента,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Номер                   КАК Номер,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОтгрузки            КАК ДатаПоступленияОтгрузки,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОплаты              КАК ДатаОплаты,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Склад                   КАК Склад,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.СтруктурнаяЕдиница      КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР КОГДА ДокументЗаказПокупателяТовары.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПокупателяТовары.Количество КОНЕЦ
			|	    + ВЫБОР КОГДА ДокументЗаказПокупателяВозвратнаяТара.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПокупателяВозвратнаяТара.Количество КОНЕЦ) КАК ИтогКоличествоТЧ
			|ИЗ
			|	РегистрНакопления.ЗаказыПокупателей.Остатки(&ТекущаяДата, ЗаказПокупателя ССЫЛКА Документ.ЗаказПокупателя) КАК ЗаказыПокупателейОстатки
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ
			//+++ 01.04.2019
			|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата) КАК РасчетыСКонтрагентамиОстатки
			|ПО
			|	РасчетыСКонтрагентамиОстатки.Сделка = ЗаказыПокупателейОстатки.ЗаказПокупателя
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПокупателя.Товары КАК ДокументЗаказПокупателяТовары
			|ПО
			|	ДокументЗаказПокупателяТовары.Ссылка = ЗаказыПокупателейОстатки.ЗаказПокупателя
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПокупателя.ВозвратнаяТара КАК ДокументЗаказПокупателяВозвратнаяТара
			|ПО
			|	ДокументЗаказПокупателяВозвратнаяТара.Ссылка = ЗаказыПокупателейОстатки.ЗаказПокупателя
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		РасчетыСКонтрагентамиОбороты.Сделка КАК ОжидаемыйПлатеж
			|	ИЗ
			//+++ 01.04.2019
			|		РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Обороты КАК РасчетыСКонтрагентамиОбороты
			|	ГДЕ
			|		РасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход <> 0
			|	) КАК ПлатежиПоСделкам
			|ПО
			|	ПлатежиПоСделкам.ОжидаемыйПлатеж = ЗаказыПокупателейОстатки.ЗаказПокупателя
			|	
			|ГДЕ 
			|	ЗаказыПокупателейОстатки.КоличествоОстаток <> 0
			|	И
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Ответственный В (&СписокПользователейСПодменами)
			|	И
			|	(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата <= &ДатаКон","") + ")";
			
			Если ОтборКонтрагент <> Неопределено Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|	И
				|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент " + ВозвратитьСтрокуВидаОтбора(ОтборКонтрагент[0],"&ВыбКонтрагент") + "
				|";
				
				СтруктураПараметров.Вставить("ВыбКонтрагент",ОтборКонтрагент[1]);
				
			КонецЕсли;

			ТекстЗапроса = ТекстЗапроса + "
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя,
			|	&ВидЗаказПокупателяОтгрузка,
			|	ЗаказыПокупателейОстатки.КоличествоОстаток,
			|	(ВЫБОР КОГДА
			|		((ПлатежиПоСделкам.ОжидаемыйПлатеж ЕСТЬ NULL) И (РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ),
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ВалютаДокумента,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КурсВзаиморасчетов,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КратностьВзаиморасчетов,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.СуммаДокумента,
			|
			|	NULL,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата,
			|	""Заказ покупателя"",
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Номер,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОтгрузки,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОплаты,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Склад,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.СтруктурнаяЕдиница
			|
			|";
		
			СтруктураЗапроса.Вставить("ТекстЗапроса", ТекстЗапроса);
			СтруктураЗапроса.Вставить("ПараметрыЗапроса", СтруктураПараметров);
			МассивТекстовЗапросов.Добавить(СтруктураЗапроса);
			
		ИначеЕсли ОтображаемыеЗаказы = 2 Тогда // Заказы поставщикам
		
			СтруктураЗапроса = Новый Структура;
			СтруктураПараметров = Новый Структура;
			
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	РасчетыСКонтрагентамиОстатки.Сделка                         КАК Документ,
			|	&ВидЗаказПоставщикуОплата                                   КАК ВидОперации,
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток     КАК Законченность,
			|	ВЫБОР КОГДА
			|		((ОтгрузкиПоЗаказам.ЗаказПоставщику ЕСТЬ NULL) И (ЗаказыПоставщикамОстатки.КоличествоОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ                                                       КАК ВыполненностьВторойЧастиЗаказа,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ВалютаДокумента         КАК ВалютаДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КурсВзаиморасчетов      КАК КурсВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СуммаДокумента          КАК СуммаДокумента,
			|	NULL                                                        КАК СостояниеСобытия,
			|	NULL                                                        КАК Важность,
			|	NULL                                                        КАК ТипСобытия,
			|	NULL                                                        КАК ОписаниеСобытия,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент              КАК Контрагент,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Дата                    КАК Дата,
			|	NULL                                                        КАК НачалоСобытия,
			|	""Заказ поставщику""                                        КАК ПредставлениеДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Номер                   КАК Номер,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаПоступления         КАК ДатаПоступленияОтгрузки,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты              КАК ДатаОплаты,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Склад                   КАК Склад,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СтруктурнаяЕдиница      КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР КОГДА ДокументЗаказПоставщикуТовары.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПоставщикуТовары.Количество КОНЕЦ
			|	    + ВЫБОР КОГДА ДокументЗаказПоставщикуВозвратнаяТара.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПоставщикуВозвратнаяТара.Количество КОНЕЦ) КАК ИтогКоличествоТЧ
			|ИЗ
			//+++ 01.04.2019
			|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата, Сделка ССЫЛКА Документ.ЗаказПоставщику) КАК РасчетыСКонтрагентамиОстатки
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ТекущаяДата) КАК ЗаказыПоставщикамОстатки
			|ПО
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПоставщику.Товары КАК ДокументЗаказПоставщикуТовары
			|ПО
			|	ДокументЗаказПоставщикуТовары.Ссылка = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПоставщику.ВозвратнаяТара КАК ДокументЗаказПоставщикуВозвратнаяТара
			|ПО
			|	ДокументЗаказПоставщикуВозвратнаяТара.Ссылка = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		ЗаказыПоставщикамОбороты.ЗаказПоставщику КАК ЗаказПоставщику
			|	ИЗ
			|		РегистрНакопления.ЗаказыПоставщикам.Обороты КАК ЗаказыПоставщикамОбороты
			|	ГДЕ
			|		ЗаказыПоставщикамОбороты.КоличествоРасход > 0
			|	) КАК ОтгрузкиПоЗаказам
			|ПО
			|	ОтгрузкиПоЗаказам.ЗаказПоставщику = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ГДЕ 
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток <> 0
			|	И
			|	РасчетыСКонтрагентамиОстатки.Сделка.Ответственный В (&СписокПользователейСПодменами)
			|	И
			|	(РасчетыСКонтрагентамиОстатки.Сделка.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И РасчетыСКонтрагентамиОстатки.Сделка.Дата <= &ДатаКон","") + ")";

			Если ОтборКонтрагент <> Неопределено Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|	И
				|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент " + ВозвратитьСтрокуВидаОтбора(ОтборКонтрагент[0],"&ВыбКонтрагент") + "
				|";
				
				СтруктураПараметров.Вставить("ВыбКонтрагент",ОтборКонтрагент[1]);
				
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|СГРУППИРОВАТЬ ПО
			|	РасчетыСКонтрагентамиОстатки.Сделка,
			|	&ВидЗаказПоставщикуОплата,
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
			|	(ВЫБОР КОГДА
			|		((ОтгрузкиПоЗаказам.ЗаказПоставщику ЕСТЬ NULL) И (ЗаказыПоставщикамОстатки.КоличествоОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ),
			|	РасчетыСКонтрагентамиОстатки.Сделка.ВалютаДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КурсВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КратностьВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СуммаДокумента,
			|	NULL,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Дата,
			|	""Заказ поставщику"",
			|	РасчетыСКонтрагентамиОстатки.Сделка.Номер,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаПоступления,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Склад,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СтруктурнаяЕдиница
			|";
			
			СтруктураЗапроса.Вставить("ТекстЗапроса", ТекстЗапроса);
			СтруктураЗапроса.Вставить("ПараметрыЗапроса", СтруктураПараметров);
			МассивТекстовЗапросов.Добавить(СтруктураЗапроса);
			
			СтруктураЗапроса = Новый Структура;
			СтруктураПараметров = Новый Структура;
			
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику                         КАК Документ,
			|	&ВидЗаказПоставщикуПоступление                                   КАК ВидОперации,
			|	ЗаказыПоставщикамОстатки.КоличествоОстаток                       КАК Законченность,
			|	ВЫБОР КОГДА
			|		((ПлатежиПоСделкам.ОжидаемыйПлатеж ЕСТЬ NULL) И (РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ                                                            КАК ВыполненностьВторойЧастиЗаказа,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ВалютаДокумента         КАК ВалютаДокумента,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КурсВзаиморасчетов      КАК КурсВзаиморасчетов,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СуммаДокумента          КАК СуммаДокумента,
			|	NULL                                                             КАК СостояниеСобытия,
			|	NULL                                                             КАК Важность,
			|	NULL                                                             КАК ТипСобытия,
			|	NULL                                                             КАК ОписаниеСобытия,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент              КАК Контрагент,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата                    КАК Дата,
			|	NULL                                                             КАК НачалоСобытия,
			|	""Заказ поставщику""                                             КАК ПредставлениеДокумента,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Номер                   КАК Номер,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления         КАК ДатаПоступленияОтгрузки,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаОплаты              КАК ДатаОплаты,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Склад                   КАК Склад,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СтруктурнаяЕдиница      КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР КОГДА ДокументЗаказПоставщикуТовары.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПоставщикуТовары.Количество КОНЕЦ
			|	    + ВЫБОР КОГДА ДокументЗаказПоставщикуВозвратнаяТара.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПоставщикуВозвратнаяТара.Количество КОНЕЦ) КАК ИтогКоличествоТЧ
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ТекущаяДата, ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику) КАК ЗаказыПоставщикамОстатки
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ
			//+++ 01.04.2019
			|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата) КАК РасчетыСКонтрагентамиОстатки
			|ПО
			|	РасчетыСКонтрагентамиОстатки.Сделка = ЗаказыПоставщикамОстатки.ЗаказПоставщику
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПоставщику.Товары КАК ДокументЗаказПоставщикуТовары
			|ПО
			|	ДокументЗаказПоставщикуТовары.Ссылка = ЗаказыПоставщикамОстатки.ЗаказПоставщику
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПоставщику.ВозвратнаяТара КАК ДокументЗаказПоставщикуВозвратнаяТара
			|ПО
			|	ДокументЗаказПоставщикуВозвратнаяТара.Ссылка = ЗаказыПоставщикамОстатки.ЗаказПоставщику
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		РасчетыСКонтрагентамиОбороты.Сделка КАК ОжидаемыйПлатеж
			|	ИЗ
			//+++ 01.04.2019
			|		РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Обороты КАК РасчетыСКонтрагентамиОбороты
			|	ГДЕ
			|		РасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход <> 0
			|	) КАК ПлатежиПоСделкам
			|ПО
			|	ПлатежиПоСделкам.ОжидаемыйПлатеж = ЗаказыПоставщикамОстатки.ЗаказПоставщику
			|		
			|ГДЕ 
			|	ЗаказыПоставщикамОстатки.КоличествоОстаток <> 0
			|	И
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Ответственный В (&СписокПользователейСПодменами)
			|	И
			|	(ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата <= &ДатаКон","") + ")";
			
			Если ОтборКонтрагент <> Неопределено Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|	И
				|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент " + ВозвратитьСтрокуВидаОтбора(ОтборКонтрагент[0],"&ВыбКонтрагент") + "
				|";
				
				СтруктураПараметров.Вставить("ВыбКонтрагент",ОтборКонтрагент[1]);
				
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
			|	&ВидЗаказПоставщикуПоступление,
			|	ЗаказыПоставщикамОстатки.КоличествоОстаток,
			|	(ВЫБОР КОГДА
			|		((ПлатежиПоСделкам.ОжидаемыйПлатеж ЕСТЬ NULL) И (РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ),
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ВалютаДокумента,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КурсВзаиморасчетов,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КратностьВзаиморасчетов,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СуммаДокумента,
			|	NULL,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата,
			|	""Заказ поставщику"",
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Номер,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаОплаты,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Склад,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СтруктурнаяЕдиница
			|";
		
			СтруктураЗапроса.Вставить("ТекстЗапроса", ТекстЗапроса);
			СтруктураЗапроса.Вставить("ПараметрыЗапроса", СтруктураПараметров);
			МассивТекстовЗапросов.Добавить(СтруктураЗапроса);
			
		Иначе // Все заказы и покупателей и поставщикам
			
			// По покупателям
			
			СтруктураЗапроса = Новый Структура;
			СтруктураПараметров = Новый Структура;
			
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	РасчетыСКонтрагентамиОстатки.Сделка                         КАК Документ,
			|	&ВидЗаказПокупателяОплата                                   КАК ВидОперации,
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток     КАК Законченность,
			|	ВЫБОР КОГДА
			|		((ОтгрузкиПоЗаказам.ЗаказПокупателя ЕСТЬ NULL) И (ЗаказыПокупателейОстатки.КоличествоОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ                                                       КАК ВыполненностьВторойЧастиЗаказа,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ВалютаДокумента         КАК ВалютаДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КурсВзаиморасчетов      КАК КурсВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СуммаДокумента          КАК СуммаДокумента,
			|	NULL                                                        КАК СостояниеСобытия,
			|	NULL                                                        КАК Важность,
			|	NULL                                                        КАК ТипСобытия,
			|	NULL                                                        КАК ОписаниеСобытия,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент              КАК Контрагент,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Дата                    КАК Дата,
			|	NULL                                                        КАК НачалоСобытия,
			|	""Заказ покупателя""                                        КАК ПредставлениеДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Номер                   КАК Номер,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОтгрузки            КАК ДатаПоступленияОтгрузки,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты              КАК ДатаОплаты,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Склад                   КАК Склад,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СтруктурнаяЕдиница      КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР КОГДА ДокументЗаказПокупателяТовары.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПокупателяТовары.Количество КОНЕЦ
			|	    + ВЫБОР КОГДА ДокументЗаказПокупателяВозвратнаяТара.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПокупателяВозвратнаяТара.Количество КОНЕЦ) КАК ИтогКоличествоТЧ
			|ИЗ
			//+++ 01.04.2019
			|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата, Сделка ССЫЛКА Документ.ЗаказПокупателя) КАК РасчетыСКонтрагентамиОстатки
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.ЗаказыПокупателей.Остатки(&ТекущаяДата) КАК ЗаказыПокупателейОстатки
			|ПО
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПокупателя.Товары КАК ДокументЗаказПокупателяТовары
			|ПО
			|	ДокументЗаказПокупателяТовары.Ссылка = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПокупателя.ВозвратнаяТара КАК ДокументЗаказПокупателяВозвратнаяТара
			|ПО
			|	ДокументЗаказПокупателяВозвратнаяТара.Ссылка = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		ЗаказыПокупателейОбороты.ЗаказПокупателя КАК ЗаказПокупателя
			|	ИЗ
			|		РегистрНакопления.ЗаказыПокупателей.Обороты КАК ЗаказыПокупателейОбороты
			|	ГДЕ
			|		ЗаказыПокупателейОбороты.КоличествоРасход > 0
			|	) КАК ОтгрузкиПоЗаказам
			|ПО
			|	ОтгрузкиПоЗаказам.ЗаказПокупателя = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ГДЕ 
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток <> 0
			|	И
			|	РасчетыСКонтрагентамиОстатки.Сделка.Ответственный В (&СписокПользователейСПодменами)
			|	И
			|	(РасчетыСКонтрагентамиОстатки.Сделка.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И РасчетыСКонтрагентамиОстатки.Сделка.Дата <= &ДатаКон","") + ")";

			Если ОтборКонтрагент <> Неопределено Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|	И
				|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент " + ВозвратитьСтрокуВидаОтбора(ОтборКонтрагент[0],"&ВыбКонтрагент") + "
				|";
				
				СтруктураПараметров.Вставить("ВыбКонтрагент",ОтборКонтрагент[1]);
				
			КонецЕсли;

			ТекстЗапроса = ТекстЗапроса + "
			|
			|СГРУППИРОВАТЬ ПО
			|	РасчетыСКонтрагентамиОстатки.Сделка,
			|	&ВидЗаказПокупателяОплата,
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
			|	(ВЫБОР КОГДА
			|		((ОтгрузкиПоЗаказам.ЗаказПокупателя ЕСТЬ NULL) И (ЗаказыПокупателейОстатки.КоличествоОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ),
			|	РасчетыСКонтрагентамиОстатки.Сделка.ВалютаДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КурсВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КратностьВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СуммаДокумента,
			|	NULL,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Дата,
			|	""Заказ покупателя"",
			|	РасчетыСКонтрагентамиОстатки.Сделка.Номер,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОтгрузки,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Склад,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СтруктурнаяЕдиница
			|";
			
			СтруктураЗапроса.Вставить("ТекстЗапроса", ТекстЗапроса);
			СтруктураЗапроса.Вставить("ПараметрыЗапроса", СтруктураПараметров);
			МассивТекстовЗапросов.Добавить(СтруктураЗапроса);
			
			СтруктураЗапроса = Новый Структура;
			СтруктураПараметров = Новый Структура;
			
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя                         КАК Документ,
			|	&ВидЗаказПокупателяОтгрузка                                      КАК ВидОперации,
			|	ЗаказыПокупателейОстатки.КоличествоОстаток                       КАК Законченность,
			|	ВЫБОР КОГДА
			|		((ПлатежиПоСделкам.ОжидаемыйПлатеж ЕСТЬ NULL) И (РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ                                                            КАК ВыполненностьВторойЧастиЗаказа,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ВалютаДокумента         КАК ВалютаДокумента,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КурсВзаиморасчетов      КАК КурсВзаиморасчетов,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.СуммаДокумента          КАК СуммаДокумента,
			|	NULL                                                             КАК СостояниеСобытия,
			|	NULL                                                             КАК Важность,
			|	NULL                                                             КАК ТипСобытия,
			|	NULL                                                             КАК ОписаниеСобытия,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент              КАК Контрагент,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата                    КАК Дата,
			|	NULL                                                             КАК НачалоСобытия,
			|	""Заказ покупателя""                                             КАК ПредставлениеДокумента,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Номер                   КАК Номер,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОтгрузки            КАК ДатаПоступленияОтгрузки,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОплаты              КАК ДатаОплаты,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Склад                   КАК Склад,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.СтруктурнаяЕдиница      КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР КОГДА ДокументЗаказПокупателяТовары.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПокупателяТовары.Количество КОНЕЦ
			|	    + ВЫБОР КОГДА ДокументЗаказПокупателяВозвратнаяТара.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПокупателяВозвратнаяТара.Количество КОНЕЦ) КАК ИтогКоличествоТЧ
			|ИЗ
			|	РегистрНакопления.ЗаказыПокупателей.Остатки(&ТекущаяДата, ЗаказПокупателя ССЫЛКА Документ.ЗаказПокупателя) КАК ЗаказыПокупателейОстатки
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ
			//+++ 01.04.2019
			|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата) КАК РасчетыСКонтрагентамиОстатки
			|ПО
			|	РасчетыСКонтрагентамиОстатки.Сделка = ЗаказыПокупателейОстатки.ЗаказПокупателя
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПокупателя.Товары КАК ДокументЗаказПокупателяТовары
			|ПО
			|	ДокументЗаказПокупателяТовары.Ссылка = ЗаказыПокупателейОстатки.ЗаказПокупателя
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПокупателя.ВозвратнаяТара КАК ДокументЗаказПокупателяВозвратнаяТара
			|ПО
			|	ДокументЗаказПокупателяВозвратнаяТара.Ссылка = ЗаказыПокупателейОстатки.ЗаказПокупателя
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		РасчетыСКонтрагентамиОбороты.Сделка КАК ОжидаемыйПлатеж
			|	ИЗ
			//+++ 01.04.2019
			|		РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Обороты КАК РасчетыСКонтрагентамиОбороты
			|	ГДЕ
			|		РасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход <> 0
			|	) КАК ПлатежиПоСделкам
			|ПО
			|	ПлатежиПоСделкам.ОжидаемыйПлатеж = ЗаказыПокупателейОстатки.ЗаказПокупателя
			|		
			|ГДЕ 
			|	ЗаказыПокупателейОстатки.КоличествоОстаток <> 0
			|	И
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Ответственный В (&СписокПользователейСПодменами)
			|	И
			|	(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата <= &ДатаКон","") + ")";
			
			Если ОтборКонтрагент <> Неопределено Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|	И
				|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент " + ВозвратитьСтрокуВидаОтбора(ОтборКонтрагент[0],"&ВыбКонтрагент") + "
				|";
				
				СтруктураПараметров.Вставить("ВыбКонтрагент",ОтборКонтрагент[1]);
				
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя,
			|	&ВидЗаказПокупателяОтгрузка,
			|	ЗаказыПокупателейОстатки.КоличествоОстаток,
			|	(ВЫБОР КОГДА
			|		((ПлатежиПоСделкам.ОжидаемыйПлатеж ЕСТЬ NULL) И (РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ),
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ВалютаДокумента,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КурсВзаиморасчетов,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.КратностьВзаиморасчетов,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.СуммаДокумента,
			|	NULL,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Контрагент,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата,
			|	""Заказ покупателя"",
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Номер,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОтгрузки,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОплаты,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Склад,
			|	ЗаказыПокупателейОстатки.ЗаказПокупателя.СтруктурнаяЕдиница
			|";
			
			СтруктураЗапроса.Вставить("ТекстЗапроса", ТекстЗапроса);
			СтруктураЗапроса.Вставить("ПараметрыЗапроса", СтруктураПараметров);
			МассивТекстовЗапросов.Добавить(СтруктураЗапроса);
			
			// По поставщикам
		
			СтруктураЗапроса = Новый Структура;
			СтруктураПараметров = Новый Структура;
			
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	РасчетыСКонтрагентамиОстатки.Сделка                         КАК Документ,
			|	&ВидЗаказПоставщикуОплата                                   КАК ВидОперации,
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток     КАК Законченность,
			|	ВЫБОР КОГДА
			|		((ОтгрузкиПоЗаказам.ЗаказПоставщику ЕСТЬ NULL) И (ЗаказыПоставщикамОстатки.КоличествоОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ                                                       КАК ВыполненностьВторойЧастиЗаказа,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ВалютаДокумента         КАК ВалютаДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КурсВзаиморасчетов      КАК КурсВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СуммаДокумента          КАК СуммаДокумента,
			|	NULL                                                        КАК СостояниеСобытия,
			|	NULL                                                        КАК Важность,
			|	NULL                                                        КАК ТипСобытия,
			|	NULL                                                        КАК ОписаниеСобытия,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент              КАК Контрагент,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Дата                    КАК Дата,
			|	NULL                                                        КАК НачалоСобытия,
			|	""Заказ поставщику""                                        КАК ПредставлениеДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Номер                   КАК Номер,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаПоступления         КАК ДатаПоступленияОтгрузки,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты              КАК ДатаОплаты,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Склад                   КАК Склад,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СтруктурнаяЕдиница      КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР КОГДА ДокументЗаказПоставщикуТовары.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПоставщикуТовары.Количество КОНЕЦ
			|	    + ВЫБОР КОГДА ДокументЗаказПоставщикуВозвратнаяТара.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПоставщикуВозвратнаяТара.Количество КОНЕЦ) КАК ИтогКоличествоТЧ
			|ИЗ
			//+++ 01.04.2019
			|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата, Сделка ССЫЛКА Документ.ЗаказПоставщику) КАК РасчетыСКонтрагентамиОстатки
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ТекущаяДата) КАК ЗаказыПоставщикамОстатки
			|ПО
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПоставщику.Товары КАК ДокументЗаказПоставщикуТовары
			|ПО
			|	ДокументЗаказПоставщикуТовары.Ссылка = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПоставщику.ВозвратнаяТара КАК ДокументЗаказПоставщикуВозвратнаяТара
			|ПО
			|	ДокументЗаказПоставщикуВозвратнаяТара.Ссылка = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		ЗаказыПоставщикамОбороты.ЗаказПоставщику КАК ЗаказПоставщику
			|	ИЗ
			|		РегистрНакопления.ЗаказыПоставщикам.Обороты КАК ЗаказыПоставщикамОбороты
			|	ГДЕ
			|		ЗаказыПоставщикамОбороты.КоличествоРасход > 0
			|) КАК ОтгрузкиПоЗаказам
			|ПО
			|	ОтгрузкиПоЗаказам.ЗаказПоставщику = РасчетыСКонтрагентамиОстатки.Сделка
			|
			|ГДЕ 
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток <> 0
			|	И
			|	РасчетыСКонтрагентамиОстатки.Сделка.Ответственный В (&СписокПользователейСПодменами)
			|	И
			|	(РасчетыСКонтрагентамиОстатки.Сделка.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И РасчетыСКонтрагентамиОстатки.Сделка.Дата <= &ДатаКон","") + ")";

			Если ОтборКонтрагент <> Неопределено Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|	И
				|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент " + ВозвратитьСтрокуВидаОтбора(ОтборКонтрагент[0],"&ВыбКонтрагент") + "
				|";
				
				СтруктураПараметров.Вставить("ВыбКонтрагент",ОтборКонтрагент[1]);
				
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|СГРУППИРОВАТЬ ПО
			|	РасчетыСКонтрагентамиОстатки.Сделка,
			|	&ВидЗаказПоставщикуОплата,
			|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
			|	(ВЫБОР КОГДА
			|		((ОтгрузкиПоЗаказам.ЗаказПоставщику ЕСТЬ NULL) И (ЗаказыПоставщикамОстатки.КоличествоОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ),
			|	РасчетыСКонтрагентамиОстатки.Сделка.ВалютаДокумента,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КурсВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.КратностьВзаиморасчетов,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СуммаДокумента,
			|	NULL,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Контрагент,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Дата,
			|	""Заказ поставщику"",
			|	РасчетыСКонтрагентамиОстатки.Сделка.Номер,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаПоступления,
			|	РасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты,
			|	РасчетыСКонтрагентамиОстатки.Сделка.Склад,
			|	РасчетыСКонтрагентамиОстатки.Сделка.СтруктурнаяЕдиница
			|";
			
			
			СтруктураЗапроса.Вставить("ТекстЗапроса", ТекстЗапроса);
			СтруктураЗапроса.Вставить("ПараметрыЗапроса", СтруктураПараметров);
			МассивТекстовЗапросов.Добавить(СтруктураЗапроса);
			
			СтруктураЗапроса = Новый Структура;
			СтруктураПараметров = Новый Структура;
			
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику                         КАК Документ,
			|	&ВидЗаказПоставщикуПоступление                                   КАК ВидОперации,
			|	ЗаказыПоставщикамОстатки.КоличествоОстаток                       КАК Законченность,
			|	ВЫБОР КОГДА
			|		((ПлатежиПоСделкам.ОжидаемыйПлатеж ЕСТЬ NULL) И (РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ                                                            КАК ВыполненностьВторойЧастиЗаказа,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ВалютаДокумента         КАК ВалютаДокумента,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КурсВзаиморасчетов      КАК КурсВзаиморасчетов,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СуммаДокумента          КАК СуммаДокумента,
			|	NULL                                                             КАК СостояниеСобытия,
			|	NULL                                                             КАК Важность,
			|	NULL                                                             КАК ТипСобытия,
			|	NULL                                                             КАК ОписаниеСобытия,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент              КАК Контрагент,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата                    КАК Дата,
			|	NULL                                                             КАК НачалоСобытия,
			|	""Заказ поставщику""                                             КАК ПредставлениеДокумента,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Номер                   КАК Номер,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления         КАК ДатаПоступленияОтгрузки,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаОплаты              КАК ДатаОплаты,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Склад                   КАК Склад,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СтруктурнаяЕдиница      КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР КОГДА ДокументЗаказПоставщикуТовары.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПоставщикуТовары.Количество КОНЕЦ
			|	    + ВЫБОР КОГДА ДокументЗаказПоставщикуВозвратнаяТара.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ ДокументЗаказПоставщикуВозвратнаяТара.Количество КОНЕЦ) КАК ИтогКоличествоТЧ
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ТекущаяДата, ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику) КАК ЗаказыПоставщикамОстатки
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ
			//+++ 01.04.2019
			|	РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Остатки(&ТекущаяДата) КАК РасчетыСКонтрагентамиОстатки
			|ПО
			|	РасчетыСКонтрагентамиОстатки.Сделка = ЗаказыПоставщикамОстатки.ЗаказПоставщику
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПоставщику.Товары КАК ДокументЗаказПоставщикуТовары
			|ПО
			|	ДокументЗаказПоставщикуТовары.Ссылка = ЗаказыПоставщикамОстатки.ЗаказПоставщику
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ЗаказПоставщику.ВозвратнаяТара КАК ДокументЗаказПоставщикуВозвратнаяТара
			|ПО
			|	ДокументЗаказПоставщикуВозвратнаяТара.Ссылка = ЗаказыПоставщикамОстатки.ЗаказПоставщику
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(
			|	ВЫБРАТЬ ПЕРВЫЕ 1
			|		РасчетыСКонтрагентамиОбороты.Сделка КАК ОжидаемыйПлатеж
			|	ИЗ
			//+++ 01.04.2019
			|		РегистрНакопления.ВзаимоРасчетыСКонтрагентами.Обороты КАК РасчетыСКонтрагентамиОбороты
			|	ГДЕ
			|		РасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход <> 0
			|	) КАК ПлатежиПоСделкам
			|ПО
			|	ПлатежиПоСделкам.ОжидаемыйПлатеж = ЗаказыПоставщикамОстатки.ЗаказПоставщику
			|	
			|ГДЕ 
			|	ЗаказыПоставщикамОстатки.КоличествоОстаток <> 0
			|	И
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Ответственный В (&СписокПользователейСПодменами)
			|	И
			|	(ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата <= &ДатаКон","") + ")";
			
			Если ОтборКонтрагент <> Неопределено Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|	И
				|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент " + ВозвратитьСтрокуВидаОтбора(ОтборКонтрагент[0],"&ВыбКонтрагент") + "
				|";
				
				СтруктураПараметров.Вставить("ВыбКонтрагент",ОтборКонтрагент[1]);
				
			КонецЕсли;

			ТекстЗапроса = ТекстЗапроса + "
			|	
			|СГРУППИРОВАТЬ ПО
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
			|	&ВидЗаказПоставщикуПоступление,
			|	ЗаказыПоставщикамОстатки.КоличествоОстаток,
			|	(ВЫБОР КОГДА
			|		((ПлатежиПоСделкам.ОжидаемыйПлатеж ЕСТЬ NULL) И (РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток ЕСТЬ NULL))
			|	ТОГДА
			|		Истина
			|	ИНАЧЕ
			|		Ложь
			|	КОНЕЦ),
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ВалютаДокумента,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КурсВзаиморасчетов,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.КратностьВзаиморасчетов,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СуммаДокумента,
			|	NULL,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Контрагент,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата,
			|	""Заказ поставщику"",
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Номер,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаОплаты,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Склад,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.СтруктурнаяЕдиница
			|	
			|";
		
			СтруктураЗапроса.Вставить("ТекстЗапроса", ТекстЗапроса);
			СтруктураЗапроса.Вставить("ПараметрыЗапроса", СтруктураПараметров);
			МассивТекстовЗапросов.Добавить(СтруктураЗапроса);
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	СтруктураЗапроса = Новый Структура;
	СтруктураПараметров = Новый Структура;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СобытияКалендаряПользователяОбобщенные.Событие           КАК Документ,
	|	СобытияКалендаряПользователяОбобщенные.ВидСобытия        КАК ВидОперации,
	|	0                                                        КАК Законченность,
	|	Ложь                                                     КАК ВыполненностьВторойЧастиЗаказа,
	|	&ПустаяВалюта                                            КАК ВалютаДокумента,
	|	0                                                        КАК КурсВзаиморасчетов,
	|	0                                                        КАК КратностьВзаиморасчетов,
	|	0                                                        КАК СуммаДокумента,
	|	СобытияКалендаряПользователяОбобщенные.СостояниеСобытия  КАК СостояниеСобытия,
	|	СобытияКалендаряПользователяОбобщенные.Важность          КАК Важность,
	|	СобытияКалендаряПользователяОбобщенные.ТипСобытия        КАК ТипСобытия,
	|	СобытияКалендаряПользователяОбобщенные.ОписаниеСобытия   КАК ОписаниеСобытия,
	|	СобытияКалендаряПользователяОбобщенные.Контрагент        КАК Контрагент,
	|	СобытияКалендаряПользователяОбобщенные.Дата              КАК Дата,
	|	СобытияКалендаряПользователяОбобщенные.ДатаНачалаСобытия КАК НачалоСобытия,
	|	""Событие""                                              КАК ПредставлениеДокумента,
	|	СобытияКалендаряПользователяОбобщенные.Событие.Номер     КАК Номер,
	|	NULL                                                     КАК ДатаПоступленияОтгрузки,
	|	NULL                                                     КАК ДатаОплаты,
	|	NULL                                                     КАК Склад,
	|	NULL                                                     КАК СтруктурнаяЕдиница,
	|	0                                                        КАК ИтогКоличествоТЧ
	|ИЗ
	|	РегистрСведений.СобытияКалендаряПользователяОбобщенные КАК СобытияКалендаряПользователяОбобщенные
	|	
	|ГДЕ
	|
	|	СобытияКалендаряПользователяОбобщенные.СостояниеСобытия = &СостояниеЗапланировано
	|";
	
	Если ОтборКонтрагент <> Неопределено Тогда

		ТекстЗапроса = ТекстЗапроса + "
		|	И
		|	СобытияКалендаряПользователяОбобщенные.Контрагент " + ВозвратитьСтрокуВидаОтбора(ОтборКонтрагент[0],"&ВыбКонтрагент") + "
		|";
		
		СтруктураПараметров.Вставить("ВыбКонтрагент",ОтборКонтрагент[1]);
		
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
	|	И
	|	СобытияКалендаряПользователяОбобщенные.Пользователь В (&СписокПользователейСПодменами)
	//Миронычев
	|	И Не СобытияКалендаряПользователяОбобщенные.ОписаниеСобытия ПОДОБНО ""Изменено НОВОЕ правило%""
	|	И Не СобытияКалендаряПользователяОбобщенные.ОписаниеСобытия ПОДОБНО ""Изменено старое правило%""
	|	И Не СобытияКалендаряПользователяОбобщенные.ОписаниеСобытия ПОДОБНО ""Закрытие заказов покупателей%""
	|	И Не СобытияКалендаряПользователяОбобщенные.ОписаниеСобытия ПОДОБНО ""Проверьте изменение Правил%""
	//КонецМиронычев
	|	(СобытияКалендаряПользователяОбобщенные.Событие.Дата >= &ДатаНач" + ?(ДатаКон <> Дата("000101010000")," И СобытияКалендаряПользователяОбобщенные.Событие.Дата <= &ДатаКон","") + ")
	|";

	СтруктураЗапроса.Вставить("ТекстЗапроса", ТекстЗапроса);
	СтруктураЗапроса.Вставить("ПараметрыЗапроса", СтруктураПараметров);
	МассивТекстовЗапросов.Добавить(СтруктураЗапроса);
	
	// Теперь выполним все запросы и запишем информацию в ТЧ
	
	ЗаказыСобытия.Очистить();
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СписокПользователейСПодменами", СписокПользователейСПодменами);
	Запрос.УстановитьПараметр("ДатаНач"                      , НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон"                      , ?(ДатаКон <> '00010101000000', КонецДня(ДатаКон), ДатаКон));
	Запрос.УстановитьПараметр("ТекущаяДата"                  , ТекущаяДата());
	Запрос.УстановитьПараметр("СостояниеЗапланировано"       , Перечисления.СостоянияСобытий.Запланировано);
	Запрос.УстановитьПараметр("ВидЗаказПокупателяОплата"     , Перечисления.ВидыДействийПоЗаказамПокупателей.ОплатаПоЗаказу);
	Запрос.УстановитьПараметр("ВидЗаказПокупателяОтгрузка"   , Перечисления.ВидыДействийПоЗаказамПокупателей.ОтгрузкаПоЗаказу);
	Запрос.УстановитьПараметр("ВидЗаказПоставщикуОплата"     , Перечисления.ВидыДействийПоЗаказамПоставщикам.ОплатаПоЗаказу);
	Запрос.УстановитьПараметр("ВидЗаказПоставщикуПоступление", Перечисления.ВидыДействийПоЗаказамПоставщикам.ПоступлениеПоЗаказу);
	Запрос.УстановитьПараметр("ПустаяВалюта"                 , Справочники.Валюты.ПустаяСсылка());
	
	ТекЗапрос = 0;
	ВсегоЗапросов = МассивТекстовЗапросов.Количество();
	мФормаИндикации.МаксимальноеЗначение = ВсегоЗапросов;
	Для каждого ЭлементМассива Из МассивТекстовЗапросов Цикл
		
		ТекЗапрос = ТекЗапрос + 1;
		мФормаИндикации.КомментарийОбработкиДанных = "Выполняется заполнение событий списка ...";
		мФормаИндикации.Значение = ТекЗапрос;
		мФормаИндикации.Открыть();
	
		ТекстЗапроса     = Неопределено;
		ПараметрыЗапроса = Неопределено;
		
		ЭлементМассива.Свойство("ТекстЗапроса"    , ТекстЗапроса);
		ЭлементМассива.Свойство("ПараметрыЗапроса", ПараметрыЗапроса);
		
		Если ЗначениеНеЗаполнено(ТекстЗапроса) Тогда
			Продолжить;
		КонецЕсли; 
		
		Запрос.Текст = ТекстЗапроса;
		Если ТипЗнч(ПараметрыЗапроса) = Тип("Структура") Тогда
			Для каждого ЭлементСтруктуры Из ПараметрыЗапроса Цикл
				Запрос.УстановитьПараметр(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
			КонецЦикла; 
		КонецЕсли; 
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
		
			СтрокаТЧ = ЗаказыСобытия.Добавить();
			
			СтрокаТЧ.Документ                       = Выборка.Документ;
			СтрокаТЧ.ВидОперации                    = Выборка.ВидОперации;
			СтрокаТЧ.Законченность                  = Выборка.Законченность;
			СтрокаТЧ.ВыполненностьВторойЧастиЗаказа = Выборка.ВыполненностьВторойЧастиЗаказа;
			СтрокаТЧ.ВалютаДокумента                = Выборка.ВалютаДокумента;
			СтрокаТЧ.КурсВзаиморасчетов             = Выборка.КурсВзаиморасчетов;
			СтрокаТЧ.КратностьВзаиморасчетов        = Выборка.КратностьВзаиморасчетов;
			СтрокаТЧ.СуммаДокумента                 = Выборка.СуммаДокумента;
			СтрокаТЧ.СостояниеСобытия               = Выборка.СостояниеСобытия;
			СтрокаТЧ.Важность                       = Выборка.Важность;
			СтрокаТЧ.ТипСобытия                     = Выборка.ТипСобытия;
			СтрокаТЧ.ОписаниеСобытия                = Выборка.ОписаниеСобытия;
			СтрокаТЧ.Контрагент                     = Выборка.Контрагент;
			СтрокаТЧ.Дата                           = Выборка.Дата;
			СтрокаТЧ.НачалоСобытия                  = Выборка.НачалоСобытия;
			СтрокаТЧ.ПредставлениеДокумента         = Выборка.ПредставлениеДокумента;
			СтрокаТЧ.Номер                          = Выборка.Номер;
			СтрокаТЧ.ДатаПоступленияОтгрузки        = Выборка.ДатаПоступленияОтгрузки;
			СтрокаТЧ.ДатаОплаты                     = Выборка.ДатаОплаты;
			СтрокаТЧ.Склад                          = Выборка.Склад;
			СтрокаТЧ.СтруктурнаяЕдиница             = Выборка.СтруктурнаяЕдиница;
			СтрокаТЧ.ИтогКоличествоТЧ               = Выборка.ИтогКоличествоТЧ;
			
		КонецЦикла; 
		
	КонецЦикла; 
	
КонецПроцедуры

// Процедура заполняет табличную часть обработки ДанныеМесяца.
// 
// Параметры
//  ОтображатьЗапланированныеСобытия  - булево, отображать запланированные события или все
//  ТипСобытияКалендаря - тип событий, которые надо отображать
// 
// Возвращаемое значение 
//  НЕТ
Процедура СобратьДокументыМесяца(ОтображатьЗапланированныеСобытия = Ложь, ТипСобытияКалендаря, ОтображатьЗаказы, ОтображаемыеЗаказы) Экспорт

	мФормаИндикации.КомментарийОбработкиДанных = "Выполняется заполнение документов месяца ...";
	мФормаИндикации.МаксимальноеЗначение = 100;
	мФормаИндикации.Значение = 50;
	мФормаИндикации.Открыть();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "";

	Если ОтображатьЗаказы Тогда
		
		Если ОтображаемыеЗаказы = 1 Тогда // Заказы покупателей
			Запрос.Текст = Запрос.Текст + ПолучитьТекстЗапроса_ЗаказыПокупателей();
		ИначеЕсли ОтображаемыеЗаказы = 2 Тогда // Заказы поставщикам
			Запрос.Текст = Запрос.Текст + ПолучитьТекстЗапроса_ЗаказыПоставщикам();
		Иначе // Все заказы, и покупателей, и поставщикам
			Запрос.Текст = Запрос.Текст + ПолучитьТекстЗапроса_ЗаказыВсе();
		КонецЕсли; 
		
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ
		|";
		
	КонецЕсли; 
	
	Запрос.Текст = Запрос.Текст + "
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СобытияКалендаряПользователяОбобщенные.Событие            КАК Документ,
	|	СобытияКалендаряПользователяОбобщенные.ДатаНачалаСобытия  КАК Дата,
	|	&ПустойТипЗаказа                                          КАК ТипЗаказа,
	|	СобытияКалендаряПользователяОбобщенные.ДатаНачалаСобытия  КАК ДатаНачалаСобытия,
	|	СобытияКалендаряПользователяОбобщенные.ДатаКонцаСобытия   КАК ДатаКонцаСобытия,
	|	СобытияКалендаряПользователяОбобщенные.Контрагент         КАК Контрагент,
	|	СобытияКалендаряПользователяОбобщенные.КонтактноеЛицо     КАК КонтактноеЛицо
	|ИЗ
	|	РегистрСведений.СобытияКалендаряПользователяОбобщенные КАК СобытияКалендаряПользователяОбобщенные
	|	
	|ГДЕ
	|
	|	СобытияКалендаряПользователяОбобщенные.Пользователь в (&ТекПользователь)
	|	И
	|	СобытияКалендаряПользователяОбобщенные.ДатаНачалаСобытия <= &ДатаКон
	|	И
	|	СобытияКалендаряПользователяОбобщенные.ДатаНачалаСобытия >= &ДатаНач
	|";

	Если ОтображатьЗапланированныеСобытия Тогда
	
		Запрос.Текст = Запрос.Текст + "
		|	И
		|	СобытияКалендаряПользователяОбобщенные.СостояниеСобытия = &ВыбСостояние
		|";
		
		Запрос.УстановитьПараметр("ВыбСостояние", Перечисления.СостоянияСобытий.Запланировано);
		
	КонецЕсли;

	Если НЕ ТипСобытияКалендаря.Пустая() Тогда
	
	
		Запрос.Текст = Запрос.Текст + "
		|	И
		|	СобытияКалендаряПользователяОбобщенные.ТипСобытия = &ВыбТипСобытия
		|";
		
		Запрос.УстановитьПараметр("ВыбТипСобытия", ТипСобытияКалендаря);
		
	
	КонецЕсли; 
	
	ПользовательКалендаряСПодменами = Новый СписокЗначений;
	ПользовательКалендаряСПодменами.Добавить(ПользовательКалендаря);
	
	Запрос.УстановитьПараметр("ТекущаяДата"               , ТекущаяДата());
	Запрос.УстановитьПараметр("ПустаяДата"                , '00010101000000');
	Запрос.УстановитьПараметр("ТекПользователь"           , ПользовательКалендаряСПодменами);
	Запрос.УстановитьПараметр("ДатаКон"                   , КонецНедели(КонецМесяца(ДатаКалендаря)));
	Запрос.УстановитьПараметр("ДатаНач"                   , НачалоНедели(НачалоМесяца(ДатаКалендаря)));
	Запрос.УстановитьПараметр("ЗаказПокупателяОтгрузка"   , Перечисления.ВидыДействийПоЗаказамПокупателей.ОтгрузкаПоЗаказу);
	Запрос.УстановитьПараметр("ЗаказПокупателяОплата"     , Перечисления.ВидыДействийПоЗаказамПокупателей.ОплатаПоЗаказу);
	Запрос.УстановитьПараметр("ПустойТипЗаказа"           , Перечисления.ВидыДействийПоЗаказамПокупателей.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеКонтактноеЛицо"      , Справочники.КонтактныеЛица.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЗаказПоставщикуПоступление", Перечисления.ВидыДействийПоЗаказамПоставщикам.ПоступлениеПоЗаказу);
	Запрос.УстановитьПараметр("ЗаказПоставщикуОплата"     , Перечисления.ВидыДействийПоЗаказамПоставщикам.ОплатаПоЗаказу);

	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();

	ТаблицаЗапроса.Сортировать("Дата ВОЗР");

	ДанныеМесяца.Загрузить(ТаблицаЗапроса);

	ДатаНачалаМесяцаЗапроса = НачалоМесяца(ДатаКалендаря);
	
КонецПроцедуры

// Процедура заполняет табличную часть обработки ДанныеНеделиЗаказы и
//  .реквизиты объекта СобытияНедели_День[Х]
// 
// Параметры
//  ОтображатьЗапланированныеСобытия  - булево, отображать запланированные события или все
//  ТипСобытияКалендаря - тип событий, которые надо отображать
// 
// Возвращаемое значение 
//  НЕТ
Процедура СобратьДокументыНедели(ОтображатьЗапланированныеСобытия = Ложь, ТипСобытияКалендаря, ОтображатьЗаказы, ОтображаемыеЗаказы) Экспорт

	мФормаИндикации.КомментарийОбработкиДанных = "Выполняется заполнение документов недели и дня ...";
	мФормаИндикации.МаксимальноеЗначение = 100;
	мФормаИндикации.Открыть();
	мФормаИндикации.Значение = 50;
	
	ПользовательКалендаряСПодменами = Новый СписокЗначений;
	ПользовательКалендаряСПодменами.Добавить(ПользовательКалендаря);
	
	Для а = 1 По ?(ОтображатьЗаказы, 7, 8) Цикл

		ЭтотОбъект["СобытияНедели_День" + Строка(а)] = Неопределено;

		ДатаДняНедели = НачалоДня(НачалоНедели(ДатаКалендаря) + (60*60*24)*а - 1);

		Запрос = Новый Запрос;
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	СобытияКалендаряПользователя.Событие                           КАК Документ,
		|	СобытияКалендаряПользователя.НомерНачальнойСтроки              КАК НомерНачальнойСтроки,
		|	СобытияКалендаряПользователя.НомерКонечнойСтроки               КАК НомерКонечнойСтроки,
		|	СобытияКалендаряПользователя.ДатаНачалаСобытия                 КАК ДатаНачалаСобытия,
		|	СобытияКалендаряПользователя.ДатаКонцаСобытия                  КАК ДатаКонцаСобытия,
		|	СобытияКалендаряПользователя.Контрагент                        КАК Контрагент,
		|	СобытияКалендаряПользователя.КонтактноеЛицо                    КАК КонтактноеЛицо,
		|	СобытияКалендаряПользователя.ОписаниеСобытия                   КАК ОписаниеСобытия,
		|	СобытияКалендаряПользователя.Важность                          КАК Важность,
		|	СобытияКалендаряПользователя.СостояниеСобытия                  КАК СостояниеСобытия,
		|	СобытияКалендаряПользователя.ТипСобытия                        КАК ТипСобытия,
		|	СобытияКалендаряПользователя.ВидСобытия                        КАК ВидСобытия,
		|	СобытияКалендаряПользователя.КоличествоОдновременныхДокументов КАК КоличествоОдновременныхДокументов
		|
		|ИЗ
		|	РегистрСведений.СобытияКалендаряПользователяОбобщенные КАК СобытияКалендаряПользователя
		|	
		|ГДЕ
		|
		|	СобытияКалендаряПользователя.Дата = &ДатаДняНедели
		|	И
		|	СобытияКалендаряПользователя.Пользователь в (&ТекущийПользователь)
		|	И
		|	СобытияКалендаряПользователя.Событие <> &ПустоеСобытие
		|";

		Если ОтображатьЗапланированныеСобытия Тогда
		
			Запрос.Текст = Запрос.Текст + "
			|	И
			|	СобытияКалендаряПользователя.Событие.СостояниеСобытия = &ВыбСостояние
			|";
			
			Запрос.УстановитьПараметр("ВыбСостояние", Перечисления.СостоянияСобытий.Запланировано);
			
		КонецЕсли;

		Если НЕ ТипСобытияКалендаря.Пустая() Тогда
		
		
			Запрос.Текст = Запрос.Текст + "
			|	И
			|	СобытияКалендаряПользователя.Событие.ТипСобытия = &ВыбТипСобытия
			|";
			
			Запрос.УстановитьПараметр("ВыбТипСобытия", ТипСобытияКалендаря);
			
		
		КонецЕсли; 
		
		Запрос.Текст = Запрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|
		|	СобытияКалендаряПользователя.Событие.НачалоСобытия
		|
		|";

		Запрос.УстановитьПараметр("ПустоеСобытие", Документы.Событие.ПустаяСсылка());
		Запрос.УстановитьПараметр("ДатаДняНедели", ДатаДняНедели);
		Запрос.УстановитьПараметр("ТекущийПользователь", ПользовательКалендаряСПодменами);

		РезультатЗапроса = Запрос.Выполнить();

		ТаблицаСобытий = РезультатЗапроса.Выгрузить();

		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Число"));
		ОписаниеТиповЧисло = Новый ОписаниеТипов(МассивТипов);
		
		ТаблицаСобытий.Колонки.Добавить("НомерНачальнойКолонки", ОписаниеТиповЧисло);
		ТаблицаСобытий.Колонки.Добавить("НомерКонечнойКолонки", ОписаниеТиповЧисло);

		СписокДня = Новый СписокЗначений;
		Для я = 1 По 48 Цикл
			НовыйСписок = Новый СписокЗначений;
			СписокДня.Добавить(НовыйСписок);
		КонецЦикла; 

		Запрос = Новый Запрос;
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	СобытияКалендаряПользователя.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы,
		|	СобытияКалендаряПользователя.ПорядковыйНомерВДне КАК ПорядковыйНомерВДне,
		|	ВЫБОР
		|	КОГДА
		|		СобытияКалендаряПользователя.Событие = &ПустоеСобытие
		|	ТОГДА
		|		Неопределено
		|	ИНАЧЕ
		|		СобытияКалендаряПользователя.Событие
		|	КОНЕЦ                     КАК Документ
		|
		|ИЗ
		|	РегистрСведений.СобытияКалендаряПользователя КАК СобытияКалендаряПользователя
		|	
		|ГДЕ
		|
		|	СобытияКалендаряПользователя.Дата = &ДатаДняНедели
		|	И
		|	СобытияКалендаряПользователя.Пользователь в (&ТекущийПользователь)
		|";

		Если ОтображатьЗапланированныеСобытия Тогда
		
			Запрос.Текст = Запрос.Текст + "
			|	И
			|	СобытияКалендаряПользователя.Событие.СостояниеСобытия = &ВыбСостояние
			|";
			
			Запрос.УстановитьПараметр("ВыбСостояние", Перечисления.СостоянияСобытий.Запланировано);
			
		КонецЕсли;

		Если НЕ ТипСобытияКалендаря.Пустая() Тогда
		
		
			Запрос.Текст = Запрос.Текст + "
			|	И
			|	СобытияКалендаряПользователя.Событие.ТипСобытия = &ВыбТипСобытия
			|";
			
			Запрос.УстановитьПараметр("ВыбТипСобытия", ТипСобытияКалендаря);
			
		
		КонецЕсли; 
		
		Запрос.Текст = Запрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|
		|	НомерСтрокиТаблицы ВОЗР,
		|	ПорядковыйНомерВДне ВОЗР
		|
		|ИТОГИ ПО
		|
		|	НомерСтрокиТаблицы,
		|	ПорядковыйНомерВДне
		|
		|";

		Запрос.УстановитьПараметр("ПустоеСобытие", Документы.Событие.ПустаяСсылка());
		Запрос.УстановитьПараметр("ДатаДняНедели", ДатаДняНедели);
		Запрос.УстановитьПараметр("ТекущийПользователь", ПользовательКалендаряСПодменами);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаСтрокЗапроса = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерСтрокиТаблицы");
		Пока ВыборкаСтрокЗапроса.Следующий() Цикл
			СписокЗначенийСтроки = СписокДня[ВыборкаСтрокЗапроса.НомерСтрокиТаблицы - 1].Значение;

			ВыборкаПолейЗапроса = ВыборкаСтрокЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПорядковыйНомерВДне");
			Пока ВыборкаПолейЗапроса.Следующий() Цикл
				КонечнаяВыборка = ВыборкаПолейЗапроса.Выбрать();
				Пока КонечнаяВыборка.Следующий() Цикл
					Если КонечнаяВыборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда

						Если СписокЗначенийСтроки.Количество() < ВыборкаПолейЗапроса.ПорядковыйНомерВДне Тогда
							Для б = СписокЗначенийСтроки.Количество() + 1 По ВыборкаПолейЗапроса.ПорядковыйНомерВДне Цикл
								СписокЗначенийСтроки.Добавить(Неопределено);
							КонецЦикла; 
						КонецЕсли; 
						
						СписокЗначенийСтроки[ВыборкаПолейЗапроса.ПорядковыйНомерВДне - 1].Значение = КонечнаяВыборка.Документ;

						Прервать;
						
					КонецЕсли; 
				КонецЦикла; 
			КонецЦикла; 
		КонецЦикла; 

		СтруктураЗначенияРеквизита = Новый Структура;
		СтруктураЗначенияРеквизита.Вставить("ТаблицаСобытий", ТаблицаСобытий);
		СтруктураЗначенияРеквизита.Вставить("РасположениеСобытий", СписокДня);
		
		ЭтотОбъект["СобытияНедели_День" + Строка(а)] = СтруктураЗначенияРеквизита;
		
	КонецЦикла;
	
	ДанныеНеделиЗаказы.Очистить();

	Если ОтображатьЗаказы Тогда
	
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("ТекущаяДата"                , ТекущаяДата());
		Запрос.УстановитьПараметр("ПустаяДата"                 , '00010101000000');
		Запрос.УстановитьПараметр("ПустоеКонтактноеЛицо"       , Справочники.КонтактныеЛица.ПустаяСсылка());
		Запрос.УстановитьПараметр("ТекПользователь"            , ПользовательКалендаряСПодменами);
		Запрос.УстановитьПараметр("ДатаКон"                    , КонецНедели(ДатаКалендаря));
		Запрос.УстановитьПараметр("ДатаНач"                    , НачалоНедели(ДатаКалендаря));
		Запрос.УстановитьПараметр("ЗаказПокупателяОтгрузка"    , Перечисления.ВидыДействийПоЗаказамПокупателей.ОтгрузкаПоЗаказу);
		Запрос.УстановитьПараметр("ЗаказПокупателяОплата"      , Перечисления.ВидыДействийПоЗаказамПокупателей.ОплатаПоЗаказу);
		Запрос.УстановитьПараметр("ЗаказПоставщикуПоступление" , Перечисления.ВидыДействийПоЗаказамПоставщикам.ПоступлениеПоЗаказу);
		Запрос.УстановитьПараметр("ЗаказПоставщикуОплата"      , Перечисления.ВидыДействийПоЗаказамПоставщикам.ОплатаПоЗаказу);
		
		Если ОтображаемыеЗаказы = 1 Тогда // Заказы покупателей
			Запрос.Текст = Запрос.Текст + ПолучитьТекстЗапроса_ЗаказыПокупателей();
		ИначеЕсли ОтображаемыеЗаказы = 2 Тогда // Заказы поставщикам
			Запрос.Текст = Запрос.Текст + ПолучитьТекстЗапроса_ЗаказыПоставщикам();
		Иначе // Все заказы, покупателей и поставщикам
			Запрос.Текст = Запрос.Текст + ПолучитьТекстЗапроса_ЗаказыВсе();
		КонецЕсли;
		
		ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
		ТаблицаЗапроса.Сортировать("Дата ВОЗР");
		ДанныеНеделиЗаказы.Загрузить(ТаблицаЗапроса);
		
	КонецЕсли;
	
	ДатаНачалаНедели = НачалоНедели(ДатаКалендаря);

КонецПроцедуры

// Заполним реквизиты обработки по умолчанию
ДатаНач = Дата("000101010000");
ДатаКон = Дата("000101010000");

ПользовательКалендаря = глТекущийПользователь;

мФормаИндикации = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
Отборы = Новый Соответствие;
МассивЗначенийОтбора = Новый Массив;
МассивЗначенийОтбора.Добавить(ВидСравнения.Равно);
МассивЗначенийОтбора.Добавить(ПользовательКалендаря);
Отборы.Вставить("Пользователь", МассивЗначенийОтбора);
СтруктураОтборов = Отборы;

мСписокКлючейСтруктурыСобытий = Новый СписокЗначений;
мСписокКлючейСтруктурыСобытий.Добавить("Документ");
мСписокКлючейСтруктурыСобытий.Добавить("ДатаНачалаСобытия");
мСписокКлючейСтруктурыСобытий.Добавить("ДатаКонцаСобытия");
мСписокКлючейСтруктурыСобытий.Добавить("ОписаниеСобытия");
мСписокКлючейСтруктурыСобытий.Добавить("Контрагент");
мСписокКлючейСтруктурыСобытий.Добавить("КонтактноеЛицо");
мСписокКлючейСтруктурыСобытий.Добавить("Важность");
мСписокКлючейСтруктурыСобытий.Добавить("СостояниеСобытия");
мСписокКлючейСтруктурыСобытий.Добавить("ТипСобытия");
мСписокКлючейСтруктурыСобытий.Добавить("ВидСобытия");

мСписокОтборов              = Новый СписокЗначений;
мСтруктураПредставленийОтборов = Новый Структура;

мСтруктураПредставленийОтборов.Вставить("Дата", "Дата документа");
мСтруктураПредставленийОтборов.Вставить("ДатаСобытия", "Дата события");
мСписокОтборов.Добавить("Контрагент","СправочникСсылка.Контрагенты");
мСтруктураПредставленийОтборов.Вставить("Контрагент", "Контрагент");
мСписокОтборов.Добавить("Пользователь","СправочникСсылка.Пользователи");
мСтруктураПредставленийОтборов.Вставить("Пользователь", "Ответственный");
мСписокОтборов.Добавить("Важность","ПеречислениеСсылка.Важность");
мСтруктураПредставленийОтборов.Вставить("Важность", "Важность события");
мСписокОтборов.Добавить("Тип","ПеречислениеСсылка.ВходящееИсходящееСобытие");
мСтруктураПредставленийОтборов.Вставить("Тип", "Тип события");
мСписокОтборов.Добавить("Номер","Строка");
мСтруктураПредставленийОтборов.Вставить("Номер", "Номер документа");
мСписокОтборов.Добавить("ТипДокумента","ОписаниеТипов");
мСтруктураПредставленийОтборов.Вставить("ТипДокумента", "Тип документа");
мСписокОтборов.Добавить("ВидОперации","");
мСтруктураПредставленийОтборов.Вставить("ВидОперации", "Вид операции");
