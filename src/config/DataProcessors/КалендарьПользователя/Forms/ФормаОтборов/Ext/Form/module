
Перем ОписаниеТиповДокументов;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет строки реквизита формы Отбор
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   НЕТ
Процедура ЗаполнитьСтрокиТаблицы()

	Для каждого Элементы Из мСписокОтборов Цикл
		ЗначениеОтбора = СтруктураОтборов.Получить(Элементы.Значение);
		Если ЗначениеОтбора <> Неопределено Тогда
			ЭтаФорма[Строка("Флаг"+Элементы.Значение)] = Истина;
			ЭтаФорма[Строка("ВидСравнения"+Элементы.Значение)] = ЗначениеОтбора[0];
			Если Элементы.Значение = "ТипДокумента" Тогда
				ЭлементыФормы.ЗначениеОтбораТипДокумента.Значение = ЗначениеОтбора[1].Типы().Получить(0);
			Иначе
				ЭтаФорма[Строка("ЗначениеОтбора"+Элементы.Значение)] = ЗначениеОтбора[1];
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;


	ЗначениеОтбораДата = Дата("00010101000000");
	ЗначениеОтбораДатаНач = Дата("00010101000000");
	ЗначениеОтбораДатаКон = Дата("00010101000000");
	
	Если ДатаНач = Дата("00010101000000") И ДатаКон = Дата("00010101000000") Тогда
		
		ФлагДата = Ложь;
		ВидСравненияДата = ВидСравнения.Равно;
		
	ИначеЕсли ДатаНач = ДатаКон Тогда
		
		ФлагДата = Истина;
		ВидСравненияДата = ВидСравнения.Равно;
		ЗначениеОтбораДата = ДатаНач;
		
	ИначеЕсли ДатаНач = Дата("00010101000000") Тогда
		
		ФлагДата = Истина;
		ВидСравненияДата = ВидСравнения.Меньше;
		ЗначениеОтбораДата = ДатаКон;
		
	ИначеЕсли ДатаКон = Дата("00010101000000") Тогда
		
		ФлагДата = Истина;
		ВидСравненияДата = ВидСравнения.Больше;
		ЗначениеОтбораДата = ДатаНач;

	Иначе

		ФлагДата = Истина;
		ВидСравненияДата = ВидСравнения.Интервал;
		ЗначениеОтбораДатаНач = ДатаНач;
		ЗначениеОтбораДатаКон = ДатаКон;
		
	КонецЕсли; 

	ЗначениеОтбораДатаСобытия = Дата("00010101000000");
	ЗначениеОтбораДатаСобытияНач = Дата("00010101000000");
	ЗначениеОтбораДатаСобытияКон = Дата("00010101000000");

	ДатаСобытия = СтруктураОтборов.Получить("ДатаСобытия");
	Если ДатаСобытия = Неопределено Тогда
		ФлагДатаСобытия = Ложь;
		ДатаСобытияНач = Дата("00010101000000");
		ДатаСобытияКон = Дата("00010101000000");
	Иначе
		ФлагДатаСобытия = Истина;
		Если ДатаСобытия[0] = ВидСравнения.ВСписке
		 ИЛИ ДатаСобытия[0] = ВидСравнения.НеВСписке
		 ИЛИ ДатаСобытия[0] = ВидСравнения.Равно
		 ИЛИ ДатаСобытия[0] = ВидСравнения.НеРавно Тогда

			ВидСравненияДатаСобытия = ДатаСобытия[0];
			ЗначениеОтбораДатаСобытия = ДатаСобытия[1];

		Иначе
			
			ВидСравненияДатаСобытия = ДатаСобытия[0];
			ДатаСобытияНач = ДатаСобытия[1];
			ДатаСобытияКон = ДатаСобытия[2];

			Если ДатаСобытияНач = Дата("00010101000000") И ДатаСобытияКон = Дата("00010101000000") Тогда
				
			ИначеЕсли ДатаСобытияНач = ДатаСобытияКон Тогда
				
				ЗначениеОтбораДатаСобытия = ДатаСобытияНач;
				
			ИначеЕсли ДатаСобытияНач = Дата("00010101000000") Тогда
				
				ЗначениеОтбораДатаСобытия = ДатаСобытияКон;
				
			ИначеЕсли ДатаСобытияКон = Дата("00010101000000") Тогда
				
				ЗначениеОтбораДатаСобытия = ДатаСобытияНач;

			Иначе

				ЗначениеОтбораДатаСобытияНач = ДатаСобытияНач;
				ЗначениеОтбораДатаСобытияКон = ДатаСобытияКон;
				
			КонецЕсли; 
			
		КонецЕсли; 
	КонецЕсли; 
	
	ВидимостьПолейВводаДат();
	
КонецПроцедуры

// Сравнивает два массива с данными
//
// Параметры
//  МассивА - Массив
//  МассивБ - Массив
//
// Возвращаемое значение:
//   Булево - результат сравнения
//
Функция СравнитьМассивы(МассивА, МассивБ)

	Если (МассивА[0] = МассивБ[0]) и (МассивА[1] = МассивБ[1]) Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции // СравнитьМассивы()

// Проверяет необходимость выполнения запроса
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   Булево//
Функция ПроверитьНеобходимостьЗапроса()

	Если ФлагДата Тогда
		Если ВидСравненияДата = ВидСравнения.Равно Тогда

			Если ДатаНач <> ЗначениеОтбораДата ИЛИ ДатаКон <> ЗначениеОтбораДата Тогда
				Возврат Истина;
			КонецЕсли; 

		ИначеЕсли ВидСравненияДата = ВидСравнения.Больше Тогда

			Если ДатаНач <> ЗначениеОтбораДата ИЛИ ДатаКон <> Дата("00010101000000") Тогда
				Возврат Истина;
			КонецЕсли; 
			
		ИначеЕсли ВидСравненияДата = ВидСравнения.Меньше Тогда

			Если ДатаНач <> Дата("00010101000000") ИЛИ ДатаКон <> ЗначениеОтбораДата Тогда
				Возврат Истина;
			КонецЕсли; 

		Иначе

			Если ДатаНач <> ЗначениеОтбораДатаНач ИЛИ ДатаКон <> ЗначениеОтбораДатаКон Тогда
				Возврат Истина;
			КонецЕсли; 
		
		КонецЕсли; 
	Иначе

		Если ДатаНач <> Дата("00010101000000") ИЛИ ДатаКон <> Дата("00010101000000") Тогда
			Возврат Истина;
		КонецЕсли; 
		
	КонецЕсли; 

	СписокПроверок = Новый СписокЗначений;
	СписокПроверок.Добавить("Пользователь");
	СписокПроверок.Добавить("Контрагент");

	Для каждого Проверка Из СписокПроверок Цикл
		
		ИдОтбора = Проверка.Значение;
		МассивОтбора = Новый Массив;
		МассивОтбора.Добавить(ЭтаФорма[Строка("ВидСравнения"+ИдОтбора)]);
		МассивОтбора.Добавить(ЭтаФорма[Строка("ЗначениеОтбора"+ИдОтбора)]);

		Если НЕ ЭтаФорма[Строка("Флаг"+ИдОтбора)] Тогда
			Если СтруктураОтборов.Получить(ИдОтбора) <> Неопределено Тогда
				Возврат Истина;
			КонецЕсли; 
		Иначе
			ОтборСобытия = СтруктураОтборов.Получить(ИдОтбора);
			Если ОтборСобытия = Неопределено Тогда
				Возврат Истина;
			Иначе
				Если НЕ СравнитьМассивы(МассивОтбора, ОтборСобытия) Тогда
					Возврат Истина;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат Ложь;
	
КонецФункции

// Процедура при начале выбора любого реквизита формы ВидСравнения.
// 
// Параметры
//  Элемент - элемент формы
Процедура ВидСравненияНачалоВыбора(Элемент)

	ИмяЭлемента = СтрЗаменить(Элемент.Имя, "ВидСравнения", "");
	
	СписокВыбора = Новый СписокЗначений;

	Если ИмяЭлемента = "ТипДокумента" Тогда
		СписокВыбора.Добавить(ВидСравнения.Равно, "Равно");
	Иначе
		СписокВыбора.Добавить(ВидСравнения.Равно, "Равно");
		СписокВыбора.Добавить(ВидСравнения.НеРавно, "Не равно");
		СписокВыбора.Добавить(ВидСравнения.ВСписке, "В списке");
		СписокВыбора.Добавить(ВидСравнения.НеВСписке, "Не в списке");
	КонецЕсли; 

	ВыбЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокВыбора);
	
	Если ВыбЭлемент <> Неопределено Тогда

		ВыбранноеЗначение = ВыбЭлемент.Значение;
		
		ЭтаФорма[Строка("ВидСравнения"+ИмяЭлемента)] = ВыбЭлемент.Значение;

		ЗначениеОтбораТекущейСтроки = ЭтаФорма[Строка("ЗначениеОтбора"+ИмяЭлемента)];

		Если ВыбранноеЗначение = ВидСравнения.Равно 
			ИЛИ ВыбранноеЗначение = ВидСравнения.НеРавно Тогда

			Если ИмяЭлемента <> "ТипДокумента" Тогда
				
				ЭлементыФормы[Строка("ВидСравнения"+ИмяЭлемента)].АвтопереносСтрок = Ложь;
				Если ТипЗнч(ЗначениеОтбораТекущейСтроки) = Тип("СписокЗначений") Тогда

					Если ЗначениеОтбораТекущейСтроки.Количество() > 0 тогда
						ЭтаФорма[Строка("ЗначениеОтбора"+ИмяЭлемента)] = ЗначениеОтбораТекущейСтроки[0].Значение;
					Иначе
						Если ИмяЭлемента = "ВидОперации" Тогда
							ЭтаФорма[Строка("ЗначениеОтбора"+ИмяЭлемента)] = Неопределено;
						КонецЕсли; 
					КонецЕсли;

				КонецЕсли;
				
			КонецЕсли;

		Иначе

			ЭлементыФормы[Строка("ВидСравнения"+ИмяЭлемента)].АвтопереносСтрок= Истина;
			Если ТипЗнч(ЗначениеОтбораТекущейСтроки) <> Тип("СписокЗначений") Тогда

				СтароеЗначение = ЗначениеОтбораТекущейСтроки;

				ЭтаФорма[Строка("ЗначениеОтбора"+ИмяЭлемента)] = Новый СписокЗначений;
				Если СтароеЗначение <> Неопределено Тогда
					ЭтаФорма[Строка("ЗначениеОтбора"+ИмяЭлемента)].Добавить(СтароеЗначение);
				КонецЕсли;

			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура при начале выбора любого реквизита формы ЗначениеОтбора.
// 
// Параметры
//  Элемент - элемент формы
Процедура ЗначениеОтбораНачалоВыбора(Элемент)

	ИмяЭлемента = СтрЗаменить(Элемент.Имя, "ЗначениеОтбора", "");
	НайденныйЭлемент = мСписокОтборов.НайтиПоЗначению(ИмяЭлемента);

	
	Если ЭтаФорма[Строка("ВидСравнения"+ИмяЭлемента)] = ВидСравнения.Равно ИЛИ
		 ЭтаФорма[Строка("ВидСравнения"+ИмяЭлемента)] = ВидСравнения.НеРавно Тогда

		Если ИмяЭлемента = "Номер" Тогда
			Если ТипЗнч(ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение) <> Тип("Строка") Тогда
				ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение = "";
			КонецЕсли; 
			ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].ВыбиратьТип = Ложь;
		Иначе
			Если НайденныйЭлемент <> Неопределено Тогда
				Если ТипЗнч(ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение) <> Тип(НайденныйЭлемент.Представление) Тогда
					ЭтаФорма[Строка("ЗначениеОтбора"+ИмяЭлемента)] = Новый(НайденныйЭлемент.Представление);
				КонецЕсли; 
				ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].ВыбиратьТип = Ложь;
			Иначе
				ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].ВыбиратьТип = Истина;
			КонецЕсли; 
		КонецЕсли;
		
	Иначе

		Если ИмяЭлемента = "ТипДокумента" Тогда
			Если ТипЗнч(ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение) <> Тип("ОписаниеТипов") Тогда
				ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение = Новый ОписаниеТипов;
			КонецЕсли; 
			ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].ДоступныеТипы = ОписаниеТиповДокументов;
		Иначе
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(Тип(НайденныйЭлемент.Представление));
			ОписаниеТиповЗначения = Новый ОписаниеТипов(МассивТипов);
			Если ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение.ТипЗначения <> ОписаниеТиповЗначения Тогда
				ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
			КонецЕсли; 
			
			ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].ВыбиратьТип = Ложь;
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура при изменении любого реквизита формы ЗначениеОтбора.
// 
// Параметры
//  Элемент - элемент формы
Процедура ЗначениеОтбораПриИзменении(Элемент)


	ИмяЭлемента = СтрЗаменить(Элемент.Имя, "ЗначениеОтбора", "");
	
	Если ЭтаФорма[Строка("ЗначениеОтбора"+ИмяЭлемента)] = Неопределено Тогда
		ЭтаФорма[Строка("Флаг"+ИмяЭлемента)] = Ложь;
	Иначе
		Если ТипЗнч(ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение) = Тип("СписокЗначений") Тогда
			Если ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение.Количество() > 0 Тогда
				ЭтаФорма[Строка("Флаг"+ИмяЭлемента)] = Истина;
			КонецЕсли; 
		ИначеЕсли ТипЗнч(ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение) = Тип("Строка") И ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение <> "" Тогда
			ЭтаФорма[Строка("Флаг"+ИмяЭлемента)] = Истина;
		ИначеЕсли ТипЗнч(ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение) = Тип("ОписаниеТипов") И ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение.Типы().Количество() <> 0 Тогда
			ЭтаФорма[Строка("Флаг"+ИмяЭлемента)] = Истина;
		ИначеЕсли НЕ ЭлементыФормы[Строка("ЗначениеОтбора"+ИмяЭлемента)].Значение.Пустая() тогда
			ЭтаФорма[Строка("Флаг"+ИмяЭлемента)] = Истина;
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры

// Процедура управляет видимостью элементов формы
// ЗначениеОтбораДатаНач, ЗначениеОтбораДатаКон и ЗначениеОтбораДата
//
Процедура ВидимостьПолейВводаДат()

	Если ВидСравненияДата = ВидСравнения.Равно
		 ИЛИ ВидСравненияДата = ВидСравнения.Больше
		 ИЛИ ВидСравненияДата = ВидСравнения.БольшеИлиРавно
		 ИЛИ ВидСравненияДата = ВидСравнения.Меньше
		 ИЛИ ВидСравненияДата = ВидСравнения.МеньшеИлиРавно
		 ИЛИ ВидСравненияДата = ВидСравнения.ВСписке
		 ИЛИ ВидСравненияДата = ВидСравнения.НеВСписке
		 ИЛИ ВидСравненияДата = ВидСравнения.НеРавно Тогда

		ЭлементыФормы.ЗначениеОтбораДата.Видимость = Истина;
		ЭлементыФормы.ЗначениеОтбораДатаНач.Видимость = Ложь;
		ЭлементыФормы.ЗначениеОтбораДатаКон.Видимость = Ложь;
		
	Иначе
		
		ЭлементыФормы.ЗначениеОтбораДата.Видимость = Ложь;
		ЭлементыФормы.ЗначениеОтбораДатаНач.Видимость = Истина;
		ЭлементыФормы.ЗначениеОтбораДатаКон.Видимость = Истина;
		
	КонецЕсли; 

	Если ВидСравненияДатаСобытия = ВидСравнения.Равно
		 ИЛИ ВидСравненияДатаСобытия = ВидСравнения.Больше
		 ИЛИ ВидСравненияДатаСобытия = ВидСравнения.БольшеИлиРавно
		 ИЛИ ВидСравненияДатаСобытия = ВидСравнения.Меньше
		 ИЛИ ВидСравненияДатаСобытия = ВидСравнения.МеньшеИлиРавно
		 ИЛИ ВидСравненияДатаСобытия = ВидСравнения.ВСписке
		 ИЛИ ВидСравненияДатаСобытия = ВидСравнения.НеВСписке
		 ИЛИ ВидСравненияДатаСобытия = ВидСравнения.НеРавно Тогда

		ЭлементыФормы.ЗначениеОтбораДатаСобытия.Видимость = Истина;
		ЭлементыФормы.ЗначениеОтбораДатаСобытияНач.Видимость = Ложь;
		ЭлементыФормы.ЗначениеОтбораДатаСобытияКон.Видимость = Ложь;
		
	Иначе
		
		ЭлементыФормы.ЗначениеОтбораДатаСобытия.Видимость = Ложь;
		ЭлементыФормы.ЗначениеОтбораДатаСобытияНач.Видимость = Истина;
		ЭлементыФормы.ЗначениеОтбораДатаСобытияКон.Видимость = Истина;
		
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ЗаполнитьСтрокиТаблицы();
	
КонецПроцедуры

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ДокументСсылка.Событие"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
	
	СписокВыбораТипов = Новый СписокЗначений;
	СписокВыбораТипов.ЗагрузитьЗначения(МассивТипов);

	Для а = 0 По СписокВыбораТипов.Количество() - 1 Цикл

		ДокументСсылка = Новый(СписокВыбораТипов[а].Значение);
		СписокВыбораТипов[а].Представление = ДокументСсылка.Метаданные().Синоним;

	КонецЦикла; 

	ЭлементыФормы.ЗначениеОтбораТипДокумента.СписокВыбора = СписокВыбораТипов;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ВЫЗЫВАЕМЫЕ ПО НАЖАТИЮ КНОПОК КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события Нажатие элемента формы КнопкаОК.
//
Процедура КнопкаОКНажатие(Кнопка)

	НеобходимостьЗапроса = ПроверитьНеобходимостьЗапроса();
	
	Для каждого Элементы Из мСписокОтборов Цикл
		Если Элементы.Значение = "ТипДокумента" Тогда
			Если ЭтаФорма[Строка("Флаг"+Элементы.Значение)] Тогда

				МассивТипов = Новый Массив;
				МассивТипов.Добавить(ЗначениеОтбораТипДокумента);
				ОписаниеТипаЗначенияОтбораТипаДокумента = Новый ОписаниеТипов(МассивТипов);

				МассивЗначений = Новый Массив;
				МассивЗначений.Добавить(ЭтаФорма[Строка("ВидСравнения"+Элементы.Значение)]);
				МассивЗначений.Добавить(ОписаниеТипаЗначенияОтбораТипаДокумента);
				
				СтруктураОтборов.Вставить(Элементы.Значение, МассивЗначений);
				
			Иначе

				СтруктураОтборов.Удалить(Элементы.Значение);
				
			КонецЕсли; 
		Иначе
			Если ЭтаФорма[Строка("Флаг"+Элементы.Значение)] Тогда

				МассивЗначений = Новый Массив;
				МассивЗначений.Добавить(ЭтаФорма[Строка("ВидСравнения"+Элементы.Значение)]);
				МассивЗначений.Добавить(ЭтаФорма[Строка("ЗначениеОтбора"+Элементы.Значение)]);
				
				СтруктураОтборов.Вставить(Элементы.Значение, МассивЗначений);
				
			Иначе

				Если СтруктураОтборов.Получить(Элементы.Значение) <> Неопределено Тогда
					СтруктураОтборов.Удалить(Элементы.Значение);
				КонецЕсли; 
				
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;

	Если ФлагДата Тогда
		Если ВидСравненияДата = ВидСравнения.Равно Тогда

			ДатаНач = ЗначениеОтбораДата;
			ДатаКон = ЗначениеОтбораДата;

		ИначеЕсли ВидСравненияДата = ВидСравнения.Больше Тогда

			ДатаНач = ЗначениеОтбораДата;
			ДатаКон = Дата("00010101000000");
			
		ИначеЕсли ВидСравненияДата = ВидСравнения.Меньше Тогда

			ДатаНач = Дата("00010101000000");
			ДатаКон = ЗначениеОтбораДата;

		Иначе

			ДатаНач = ЗначениеОтбораДатаНач;
			ДатаКон = ЗначениеОтбораДатаКон;
		
		КонецЕсли; 
	Иначе

		ДатаНач = Дата("00010101000000");
		ДатаКон = Дата("00010101000000");
		
	КонецЕсли; 

	Если ФлагДатаСобытия Тогда

		Если ВидСравненияДатаСобытия = ВидСравнения.ВСписке ИЛИ ВидСравненияДатаСобытия = ВидСравнения.НеВСписке Тогда

			МассивЗначений = Новый Массив;
			МассивЗначений.Добавить(ВидСравненияДатаСобытия);
			МассивЗначений.Добавить(ЗначениеОтбораДатаСобытия);

			СтруктураОтборов.Вставить("ДатаСобытия", МассивЗначений);
			
		Иначе

			Если ВидСравненияДатаСобытия = ВидСравнения.Равно Тогда

				ДатаСобытияНач = ЗначениеОтбораДатаСобытия;
				ДатаСобытияКон = ЗначениеОтбораДатаСобытия;

			ИначеЕсли ВидСравненияДатаСобытия = ВидСравнения.Больше Тогда

				ДатаСобытияНач = ЗначениеОтбораДатаСобытия;
				ДатаСобытияКон = Дата("00010101000000");
				
			ИначеЕсли ВидСравненияДатаСобытия = ВидСравнения.Меньше Тогда

				ДатаСобытияНач = Дата("00010101000000");
				ДатаСобытияКон = ЗначениеОтбораДатаСобытия;

			Иначе

				ДатаСобытияНач = ЗначениеОтбораДатаСобытияНач;
				ДатаСобытияКон = ЗначениеОтбораДатаСобытияКон;
			
			КонецЕсли; 

			МассивЗначений = Новый Массив;
			МассивЗначений.Добавить(ВидСравненияДатаСобытия);
			МассивЗначений.Добавить(ДатаСобытияНач);
			МассивЗначений.Добавить(ДатаСобытияКон);

			СтруктураОтборов.Вставить("ДатаСобытия", МассивЗначений);
			
		КонецЕсли;
		
	Иначе

		СтруктураОтборов.Удалить("ДатаСобытия");
		
	КонецЕсли;

	ЭтаФорма.ВладелецФормы.ОбновитьЗаказыСобытия(НЕ НеобходимостьЗапроса);

	ЭтаФорма.ВладелецФормы.ЭлементыФормы.ВыбКонтрагент.Значение = ЗначениеОтбораКонтрагент;
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КнопкаОтмена.
//
Процедура КнопкаОтменаНажатие(Элемент)
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события НачалоВыбораИзСписка элемента формы ВидСравненияКонтрагент.
//
Процедура ВидСравненияКонтрагентНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидСравненияНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбораИзСписка элемента формы ВидСравненияПользователь.
//
Процедура ВидСравненияПользовательНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидСравненияНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбораИзСписка элемента формы ВидСравненияВажность.
//
Процедура ВидСравненияВажностьНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидСравненияНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбораИзСписка элемента формы ВидСравненияТип.
//
Процедура ВидСравненияТипНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидСравненияНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ЗначениеОтбораКонтрагент.
//
Процедура ЗначениеОтбораКонтрагентНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ЗначениеОтбораНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ЗначениеОтбораПользователь.
//
Процедура ЗначениеОтбораПользовательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ЗначениеОтбораНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ЗначениеОтбораВажность.
//
Процедура ЗначениеОтбораВажностьНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ЗначениеОтбораНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ЗначениеОтбораТип.
//
Процедура ЗначениеОтбораТипНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ЗначениеОтбораНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораКонтрагент.
//
Процедура ЗначениеОтбораКонтрагентПриИзменении(Элемент)
	
	ЗначениеОтбораПриИзменении(Элемент);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораПользователь.
//
Процедура ЗначениеОтбораПользовательПриИзменении(Элемент)
	
	ЗначениеОтбораПриИзменении(Элемент);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораВажность.
//
Процедура ЗначениеОтбораВажностьПриИзменении(Элемент)
	
	ЗначениеОтбораПриИзменении(Элемент);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораТип.
//
Процедура ЗначениеОтбораТипПриИзменении(Элемент)
	
	ЗначениеОтбораПриИзменении(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбораИзСписка элемента формы ВидСравненияКонтрагент.
//
Процедура ВидСравненияДатаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;


	ИмяЭлемента = СтрЗаменить(Элемент.Имя, "ВидСравнения", "");
	
	СписокВыбора = Новый СписокЗначений;

	
	СписокВыбора.Добавить(ВидСравнения.Равно, "Равно");
	СписокВыбора.Добавить(ВидСравнения.Больше, "Больше");
	СписокВыбора.Добавить(ВидСравнения.Меньше, "Меньше");

	СписокВыбора.Добавить(ВидСравнения.Интервал, "Интервал (>, <)");

	ВыбЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокВыбора);
	
	Если ВыбЭлемент <> Неопределено Тогда

		ВыбранноеЗначение = ВыбЭлемент.Значение;
		
		ВидСравненияДата = ВыбЭлемент.Значение;

		Если ВыбранноеЗначение = ВидСравнения.ВСписке 
			ИЛИ ВыбранноеЗначение = ВидСравнения.НеВСписке Тогда

			Если ТипЗнч(ЗначениеОтбораДата) <> Тип("СписокЗначений") Тогда

				ЗначениеОтбораДата = Новый СписокЗначений;

			КонецЕсли;

		Иначе

			Если ТипЗнч(ЗначениеОтбораДата) <> Тип("Дата") Тогда

				ЗначениеОтбораДата = Дата("00010101000000");

			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли; 
	
	ВидимостьПолейВводаДат();
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ЗначениеОтбораДата.
//
Процедура ЗначениеОтбораДатаНачалоВыбора(Элемент, СтандартнаяОбработка)

	Если ВидСравненияДата = ВидСравнения.ВСписке ИЛИ ВидСравненияДата = ВидСравнения.НеВСписке Тогда

		Если ТипЗнч(ЗначениеОтбораДата) <> Тип("СписокЗначений") Тогда
			Элемент.Значение = Новый СписокЗначений;
		КонецЕсли; 
		
		ЭлементыФормы.ЗначениеОтбораДата.ВыбиратьТип = Ложь;
		
	Иначе
		
		Если ТипЗнч(ЗначениеОтбораДата) <> Тип("Дата") Тогда
			Элемент.Значение = Дата("00010101000000");
		КонецЕсли; 
		
		ЭлементыФормы.ЗначениеОтбораДата.ВыбиратьТип = Ложь;
		
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораДатаКон.
//
Процедура ЗначениеОтбораДатаКонПриИзменении(Элемент)

	Если Элемент.Значение <> Дата("00010101000000") Тогда
		Элемент.Значение = КонецДня(Элемент.Значение);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события НачалоВыбораИзСписка элемента формы ВидСравненияНомер.
//
Процедура ВидСравненияНомерНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидСравненияНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораНомер.
//
Процедура ЗначениеОтбораНомерПриИзменении(Элемент)
	
	ЗначениеОтбораПриИзменении(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ЗначениеОтбораНомер.
//
Процедура ЗначениеОтбораНомерНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ЗначениеОтбораНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события НачалоВыбораИзСписка элемента формы ВидСравненияТипДокумента.
//
Процедура ВидСравненияТипДокументаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидСравненияНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораТипДокумента.
//
Процедура ЗначениеОтбораТипДокументаПриИзменении(Элемент)

	Если Элемент.Значение <> Неопределено Тогда
	
		ФлагТипДокумента = Истина;

	Иначе

		ФлагТипДокумента = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события НачалоВыбораИзСписка элемента формы ВидСравненияВидОперации.
//
Процедура ВидСравненияВидОперацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидСравненияНачалоВыбора(Элемент);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораВидОперации.
//
Процедура ЗначениеОтбораВидОперацииПриИзменении(Элемент)
	
	Если ЗначениеОтбораВидОперации = Неопределено Тогда
		ФлагВидОперации = Ложь;
	ИначеЕсли ТипЗнч(ЗначениеОтбораВидОперации) = Тип("СписокЗначений") Тогда
		Если ЗначениеОтбораВидОперации.Количество() = 0 Тогда
			ФлагВидОперации = Ложь;
		Иначе
			ФлагВидОперации = Истина;
		КонецЕсли; 
	Иначе
		Если ЗначениеОтбораВидОперации.Пустая() Тогда
			ФлагВидОперации = Ложь;
		Иначе
			ФлагВидОперации = Истина;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ЗначениеОтбораВидОперации.
//
Процедура ЗначениеОтбораВидОперацииНачалоВыбора(Элемент, СтандартнаяОбработка)

	Если ВидСравненияВидОперации = ВидСравнения.Равно ИЛИ ВидСравненияВидОперации = ВидСравнения.НеРавно Тогда

		МассивТипов = Элемент.ТипЗначения.Типы();

		ИндексСписка = 0;
		Для а = 0 По МассивТипов.Количество() - 1 Цикл
			Если МассивТипов[а] = Тип("СписокЗначений") Тогда
				ИндексСписка = а;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 

		Если ИндексСписка > 0 Тогда
			МассивТипов.Удалить(ИндексСписка);
		КонецЕсли; 
		
		Элемент.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события НачалоВыбораИзСписка элемента формы ВидСравненияКонтрагент.
//
Процедура ВидСравненияДатаСобытияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	
	СписокВыбора.Добавить(ВидСравнения.Равно, "Равно");
	СписокВыбора.Добавить(ВидСравнения.Больше, "Больше");
	СписокВыбора.Добавить(ВидСравнения.Меньше, "Меньше");

	СписокВыбора.Добавить(ВидСравнения.Интервал, "Интервал (>, <)");

	СписокВыбора.Добавить(ВидСравнения.ВСписке, "В списке");
	СписокВыбора.Добавить(ВидСравнения.НеВСписке, "Не в списке");

	ВыбЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокВыбора);
	
	Если ВыбЭлемент <> Неопределено Тогда

		ВыбранноеЗначение = ВыбЭлемент.Значение;
		
		ВидСравненияДатаСобытия = ВыбЭлемент.Значение;

		Если ВыбранноеЗначение = ВидСравнения.ВСписке 
			ИЛИ ВыбранноеЗначение = ВидСравнения.НеВСписке Тогда

			Если ТипЗнч(ЗначениеОтбораДатаСобытия) <> Тип("СписокЗначений") Тогда

				ЗначениеОтбораДатаСобытия = Новый СписокЗначений;

			КонецЕсли;

		Иначе

			Если ТипЗнч(ЗначениеОтбораДатаСобытия) <> Тип("Дата") Тогда

				ЗначениеОтбораДатаСобытия = Дата("00010101000000");

			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли; 
	
	ВидимостьПолейВводаДат();
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ЗначениеОтбораДатаСобытия.
//
Процедура ЗначениеОтбораДатаСобытияНачалоВыбора(Элемент, СтандартнаяОбработка)

	Если ВидСравненияДатаСобытия = ВидСравнения.ВСписке ИЛИ ВидСравненияДатаСобытия = ВидСравнения.НеВСписке Тогда

		Если ТипЗнч(ЗначениеОтбораДатаСобытия) <> Тип("СписокЗначений") Тогда
			Элемент.Значение = Новый СписокЗначений;
		КонецЕсли; 
		
		ЭлементыФормы.ЗначениеОтбораДатаСобытия.ВыбиратьТип = Ложь;
		
	Иначе
		
		Если ТипЗнч(ЗначениеОтбораДатаСобытия) <> Тип("Дата") Тогда
			Элемент.Значение = Дата("00010101000000");
		КонецЕсли; 
		
		ЭлементыФормы.ЗначениеОтбораДатаСобытия.ВыбиратьТип = Ложь;
		
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораДатаСобытияКон.
//
Процедура ЗначениеОтбораДатаСобытияКонПриИзменении(Элемент)

	Если Элемент.Значение <> Дата("00010101000000") Тогда
		
		Элемент.Значение = КонецДня(Элемент.Значение);
		ФлагДатаСобытия = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораДатаСобытияНач.
//
Процедура ЗначениеОтбораДатаСобытияНачПриИзменении(Элемент)

	Если Элемент.Значение <> Дата("00010101000000") Тогда

		ФлагДатаСобытия = Истина;
		
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ЗначениеОтбораДатаСобытия.
//
Процедура ЗначениеОтбораДатаСобытияПриИзменении(Элемент)
	
	Если ТипЗнч(Элемент.Значение) = Тип("Дата") И Элемент.Значение <> Дата("00010101000000") Тогда
		
			ФлагДатаСобытия = Истина;
			
	ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") И Элемент.Значение.Количество() > 0 тогда
		
			ФлагДатаСобытия = Истина;
			
	КонецЕсли; 
	
КонецПроцедуры

МассивТипов = Новый Массив;
МассивТипов.Добавить(Тип("ДокументСсылка.Событие"));
МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
ОписаниеТиповДокументов = Новый ОписаниеТипов(МассивТипов);
