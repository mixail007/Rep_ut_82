
Процедура РассчитатьСуммуВзаиморасчетов()
	
	СуммаВзаиморасчетов=ПересчитатьИзВалютыВВалюту(СуммаПлатежа, ВалютаДокумента,
									ДоговорКонтрагента.ВалютаВзаиморасчетов,
									КурсДокумента, КурсВзаиморасчетов,
									КратностьДокумента, КратностьВзаиморасчетов);
	

КонецПроцедуры // ОбновитьНадписьСуммаВзаиморасчетов()
								
Процедура РассчитатьСуммуПлатежа()
	
	СуммаПлатежа=ПересчитатьИзВалютыВВалюту(СуммаВзаиморасчетов,
									ДоговорКонтрагента.ВалютаВзаиморасчетов,ВалютаДокумента,
									КурсВзаиморасчетов,КурсДокумента, 
									КратностьВзаиморасчетов, КратностьДокумента);
	

КонецПроцедуры // ОбновитьНадписьСуммаВзаиморасчетов()
								
//Процедура рассчитывает курс взаиморасчетов документа
//
Процедура РассчитатьКурсВзаиморасчетов()
	
	Если (СуммаВзаиморасчетов<> 0) И (КратностьДокумента <> 0) Тогда
		КурсВзаиморасчетов = СуммаПлатежа * КурсДокумента * КратностьВзаиморасчетов
							/ СуммаВзаиморасчетов/ КратностьДокумента;
	КонецЕсли;
	
КонецПроцедуры // РассчитатьКурсВзаиморасчетов


Процедура ОсновныеДействияФормыОк(Кнопка)
	
	Если АвтоПодбор Тогда
		
		ВключенныеВПлатежныйКалендарь=ТолькоВключенныеВПлатежныйКалендарь;
		
		СтавкаНДС=?(ЗначениеНеЗаполнено(РасшифровкаПлатежаДок[0].СтавкаНДС),ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяСтавкаНДС"),
						РасшифровкаПлатежаДок[0].СтавкаНДС);
		
		Если РасшифровкаПлатежаДок.Количество()=1 Тогда
			РасшифровкаПлатежаДок.Очистить();
		Иначе
			
			СтруктураОтбора=Новый Структура;
			СтруктураОтбора.Вставить("ДоговорКонтрагента",ДоговорКонтрагента);
			
			Если НЕ (ИмяРегистраДолг="ВзаиморасчетыСКонтрагентами" И ДоговорКонтрагента.ВедениеВзаиморасчетов=Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом)
				ИЛИ ИмяРегистраДолг="РасчетыСКонтрагентами" Тогда 
				
				СтруктураОтбора.Вставить("Сделка",Сделка);
				
			КонецЕсли;
			
			МассивСтрок=РасшифровкаПлатежаДок.НайтиСтроки(СтруктураОтбора);
			
			Для Каждого Строка Из МассивСтрок Цикл
				РасшифровкаПлатежаДок.Удалить(Строка);
			КонецЦикла;
			
		КонецЕсли;
		
		ИсходнаяРасшифровка=РасшифровкаПлатежаДок.Выгрузить();
		ИсходнаяРасшифровка.Очистить();
		
		НоваяСтрока=ИсходнаяРасшифровка.Добавить();
		НоваяСтрока.ДоговорКонтрагента=ДоговорКонтрагента;
		НоваяСтрока.Сделка=Сделка;
		НоваяСтрока.СуммаПлатежа=СуммаПлатежа;
		НоваяСтрока.КурсВзаиморасчетов=КурсВзаиморасчетов;
		НоваяСтрока.КратностьВзаиморасчетов=КратностьВзаиморасчетов;
		НоваяСтрока.СуммаВзаиморасчетов=СуммаВзаиморасчетов;
		
		// Очищаем фильтры по строке платежа
		СтатьяДвиженияДенежныхСредств="";
		Проект="";
		Сделка=Неопределено;
		
		РасшифровкаПодбор=ПодборПланируемыхДвижений(ИсходнаяРасшифровка,ПодборПоСуммеПлатежа, ВладелецФормы.ЗапрашиватьКурсВзаиморасчетов);	
		
		Для Каждого Строка Из РасшифровкаПодбор Цикл
			
			НоваяСтрока=РасшифровкаПлатежаДок.Добавить();
			НоваяСтрока.ДоговорКонтрагента=Строка.ДоговорКонтрагента;
			НоваяСтрока.Сделка=Строка.Сделка;
			НоваяСтрока.СуммаПлатежа=Строка.СуммаПлатежа;
			НоваяСтрока.КурсВзаиморасчетов=Строка.КурсВзаиморасчетов;
			НоваяСтрока.КратностьВзаиморасчетов=Строка.КратностьВзаиморасчетов;
			НоваяСтрока.СуммаВзаиморасчетов=Строка.СуммаВзаиморасчетов;
			НоваяСтрока.ДокументПланированияПлатежа=Строка.ДокументПланированияПлатежа;
			НоваяСтрока.СтатьяДвиженияДенежныхСредств=Строка.СтатьяДвиженияДенежныхСредств;
			НоваяСтрока.Проект=Строка.Проект;
			НоваяСтрока.КурсВзаиморасчетовПлан=Строка.КурсВзаиморасчетовПлан;
			НоваяСтрока.СуммаПлатежаПлан=Строка.СуммаПлатежаПлан;
			
			Если (Не ОтражатьВБухгалтерскомУчете=Неопределено) И ОтражатьВБухгалтерскомУчете Тогда
				
				ЗаполнитьРеквизитыРеглУчета(НоваяСтрока,Организация, Контрагент, СтавкаНДС);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Закрыть("АвтоПодбор");
		
	Иначе
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("СуммаПлатежа", СуммаПлатежа);
		СтруктураПараметров.Вставить("КурсВзаиморасчетов",КурсВзаиморасчетов);
		СтруктураПараметров.Вставить("СуммаВзаиморасчетов",СуммаВзаиморасчетов);
		СтруктураПараметров.Вставить("ДокументПланирования",ДокументПланируемогоДвиженияДС);
		
		Если КурсВзаиморасчетовПлан=0 Тогда
			СуммаПлатежаПлан=СуммаПлатежа;
		Иначе
			СуммаПлатежаПлан=ПересчитатьИзВалютыВВалюту(СуммаВзаиморасчетов,
									ДоговорКонтрагента.ВалютаВзаиморасчетов,ВалютаДокумента,
									КурсВзаиморасчетовПлан,КурсДокумента, 
									КратностьВзаиморасчетов, КратностьДокумента);
									
		КонецЕсли;
		
		СтруктураПараметров.Вставить("СуммаПлатежаПлан",СуммаПлатежаПлан);
		СтруктураПараметров.Вставить("КурсВзаиморасчетовПлан",КурсВзаиморасчетовПлан);
		Закрыть(СтруктураПараметров);
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура СуммаПлатежаПриИзменении(Элемент)
	
	Если ПлатежПоСуммеВзаиморасчетов Тогда
		РассчитатьКурсВзаиморасчетов();
	Иначе	
		РассчитатьСуммуВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры

Процедура КурсВзаиморасчетовПриИзменении(Элемент)
	
	Если ПлатежПоСуммеВзаиморасчетов Тогда
		РассчитатьСуммуПлатежа();
	Иначе	
		РассчитатьСуммуВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры

Процедура КурсВзаиморасчетовНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	// Отменить стандартную обработку.
	СтандартнаяОбработка = Ложь;

	// Если не заполнен договор, то курс взаиморасчетов выбрать нельзя
	Если ЗначениеНеЗаполнено(ДоговорКонтрагента) Тогда
		Предупреждение("Не указан договор контрагента."); 
		Возврат;
	КонецЕсли;

	ФормаВводаКурсаИКратности = ПолучитьОбщуюФорму("ФормаВводаКурсаИКратности");
	ФормаВводаКурсаИКратности.Валюта          = ДоговорКонтрагента.ВалютаВзаиморасчетов;
	ФормаВводаКурсаИКратности.КратностьВалюты = КратностьВзаиморасчетов;
	ФормаВводаКурсаИКратности.КурсВалюты      = КурсВзаиморасчетов;
	ФормаВводаКурсаИКратности.ДатаУстановкиКурсаИКратности = ДатаПлатежа;

	СтруктураКурсаИКратности = ФормаВводаКурсаИКратности.ОткрытьМодально();

	Если СтруктураКурсаИКратности <> неопределено Тогда

		КурсВзаиморасчетов = СтруктураКурсаИКратности.КурсВалюты;
		КратностьВзаиморасчетов = СтруктураКурсаИКратности.КратностьВалюты;
		
	КонецЕсли;

	Если ПлатежПоСуммеВзаиморасчетов Тогда
		РассчитатьСуммуПлатежа();
	Иначе	
		РассчитатьСуммуВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.НадписьДоговорКонтрагента.Заголовок=ДоговорКонтрагента;
	
	ЭлементыФормы.КурсВзаиморасчетов.Доступность=ВладелецФормы.ЗапрашиватьКурсВзаиморасчетов;
	ЭлементыФормы.СуммаПлатежа.Доступность=ВладелецФормы.ЗапрашиватьСуммуПлатежа;
	ЭлементыФормы.СуммаВзаиморасчетов.Доступность=ВладелецФормы.ЗапрашиватьСуммуВзаиморасчетов;
	ЭлементыФормы.ДокументПланируемогоДвиженияДС.Доступность=ВладелецФормы.ЗапрашиватьДокументПланирования;
		
	Если ТипЗадолженности="<0" Тогда
		ЭлементыФормы.РамкаГруппы1.Заголовок="Заявка на расходование средств";
	Иначе
		ЭлементыФормы.РамкаГруппы1.Заголовок="Планируемое поступление денежных средств";
	КонецЕсли;
	
	АвтоПодбор = ВосстановитьЗначение("АвтоПодборПланируемыхПлатежей");
	ПодборПоСуммеПлатежа=ВосстановитьЗначение("ПодборПоСуммеПлатежа");
	ТолькоВключенныеВПлатежныйКалендарь=ВосстановитьЗначение("ТолькоВключенныеВПлатежныйКалендарь");
	
	Если АвтоПодбор Тогда
		
		ЭлементыФормы.ДокументПланируемогоДвиженияДС.Видимость=Ложь;
		ЭлементыФормы.ПодборПоСумме.Видимость=Истина;
		ЭлементыФормы.ПодборПоСумме1.Видимость=Истина;
		
	Иначе
		
		ЭлементыФормы.ДокументПланируемогоДвиженияДС.Видимость=Истина;
		ЭлементыФормы.ПодборПоСумме.Видимость=Ложь;
		ЭлементыФормы.ПодборПоСумме1.Видимость=Ложь;
		
	КонецЕсли;
	
	Если ПлатежПоСуммеВзаиморасчетов Тогда
		ЭлементыФормы.ПанельСуммы.ТекущаяСтраница=ЭлементыФормы.ПанельСуммы.Страницы["ПоСуммеВзаиморасчетов"];
	Иначе
		ЭлементыФормы.ПанельСуммы.ТекущаяСтраница=ЭлементыФормы.ПанельСуммы.Страницы["ПоСуммеПлатежа"];
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументПланируемогоДвиженияДСНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	СуммаДляПодбора=СуммаПлатежа;
	ФормаПланируемыеДвижения=ПолучитьФорму("ФормаПодбораПланируемыхДвижений",ЭтаФорма);
	
	ФормаПланируемыеДвижения.РежимВыбора=Истина;
	ФормаПланируемыеДвижения.ЗакрыватьПриВыборе=Истина;
	ВключенныеВПлатежныйКалендарь=ТолькоВключенныеВПлатежныйКалендарь;
	
	ФормаПланируемыеДвижения.ОткрытьМодально();
		
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("Структура") Тогда
		ДокументПланируемогоДвиженияДС=ЗначениеВыбора.ДокументПланирования;
		СтатьяДвиженияДенежныхСредств=ЗначениеВыбора.СтатьяДвиженияДенежныхСредств;
		Проект=ЗначениеВыбора.Проект;
		КурсВзаиморасчетовПлан=ЗначениеВыбора.КурсВзаиморасчетовПлан;
	КонецЕсли;
	
КонецПроцедуры

Процедура АвтоПриИзменении(Элемент)
	
	Если АвтоПодбор Тогда
		
		ЭлементыФормы.ДокументПланируемогоДвиженияДС.Значение=Неопределено;
		ЭлементыФормы.ДокументПланируемогоДвиженияДС.Доступность=Ложь;
		
	Иначе
		
		ЭлементыФормы.ДокументПланируемогоДвиженияДС.Доступность=Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СохранитьЗначение("АвтоПодборПланируемыхПлатежей", АвтоПодбор);
	СохранитьЗначение("ПодборПоСуммеПлатежа", ПодборПоСуммеПлатежа);
	СохранитьЗначение("ТолькоВключенныеВПлатежныйКалендарь", ТолькоВключенныеВПлатежныйКалендарь);
	
КонецПроцедуры

Процедура СуммаВзаиморасчетовПриИзменении(Элемент)
	
	Если ПлатежПоСуммеВзаиморасчетов Тогда
		РассчитатьСуммуПлатежа();
	Иначе	
		РассчитатьКурсВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры

Процедура СпособВыбораПриИзменении(Элемент)
	
	Если АвтоПодбор Тогда
		
		ЭлементыФормы.ДокументПланируемогоДвиженияДС.Видимость=Ложь;
		ЭлементыФормы.ПодборПоСумме.Видимость=Истина;
		ЭлементыФормы.ПодборПоСумме1.Видимость=Истина;
		
	Иначе
		
		ЭлементыФормы.ДокументПланируемогоДвиженияДС.Видимость=Истина;
		ЭлементыФормы.ПодборПоСумме.Видимость=Ложь;
		ЭлементыФормы.ПодборПоСумме1.Видимость=Ложь;

	КонецЕсли;
			
КонецПроцедуры














