
Процедура РассчитатьСуммуВзаиморасчетов()
	
	СуммаВзаиморасчетов=ПересчитатьИзВалютыВВалюту(СуммаПлатежа, ВалютаДокумента,
									ДоговорКонтрагента.ВалютаВзаиморасчетов,
									КурсДокумента, КурсВзаиморасчетов,
									КратностьДокумента, КратностьВзаиморасчетов);
	

КонецПроцедуры // ОбновитьНадписьСуммаВзаиморасчетов()
								
Процедура РассчитатьСуммуПлатежа()
	
	СуммаПлатежа=ПересчитатьИзВалютыВВалюту(СуммаВзаиморасчетов,
									ДоговорКонтрагента.ВалютаВзаиморасчетов,ВалютаДокумента,
									КурсВзаиморасчетов,КурсДокумента, 
									КратностьВзаиморасчетов, КратностьДокумента);
	

КонецПроцедуры // ОбновитьНадписьСуммаВзаиморасчетов()
								
//Процедура рассчитывает курс взаиморасчетов документа
//
Процедура РассчитатьКурсВзаиморасчетов()
	
	Если (СуммаВзаиморасчетов<> 0) И (КратностьДокумента <> 0) Тогда
		КурсВзаиморасчетов = СуммаПлатежа * КурсДокумента * КратностьВзаиморасчетов
							/ СуммаВзаиморасчетов/ КратностьДокумента;
	КонецЕсли;
	
КонецПроцедуры // РассчитатьКурсВзаиморасчетов								


Процедура ОсновныеДействияФормыОк(Кнопка)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("СуммаПлатежа", СуммаПлатежа);
	СтруктураПараметров.Вставить("КурсВзаиморасчетов",КурсВзаиморасчетов);
	СтруктураПараметров.Вставить("СуммаВзаиморасчетов",СуммаВзаиморасчетов);

	Закрыть(СтруктураПараметров);
		
КонецПроцедуры

Процедура СуммаПлатежаПриИзменении(Элемент)
	
	Если ПлатежПоСуммеВзаиморасчетов Тогда
		РассчитатьКурсВзаиморасчетов();
	Иначе	
		РассчитатьСуммуВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры

Процедура КурсВзаиморасчетовПриИзменении(Элемент)
	
	Если ПлатежПоСуммеВзаиморасчетов Тогда
		РассчитатьСуммуПлатежа();
	Иначе	
		РассчитатьСуммуВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры

Процедура КурсВзаиморасчетовНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	// Отменить стандартную обработку.
	СтандартнаяОбработка = Ложь;

	// Если не заполнен договор, то курс взаиморасчетов выбрать нельзя
	Если ЗначениеНеЗаполнено(ДоговорКонтрагента) Тогда
		Предупреждение("Не указан договор контрагента."); 
		Возврат;
	КонецЕсли;

	ФормаВводаКурсаИКратности = ПолучитьОбщуюФорму("ФормаВводаКурсаИКратности");
	ФормаВводаКурсаИКратности.Валюта          = ДоговорКонтрагента.ВалютаВзаиморасчетов;
	ФормаВводаКурсаИКратности.КратностьВалюты = КратностьВзаиморасчетов;
	ФормаВводаКурсаИКратности.КурсВалюты      = КурсВзаиморасчетов;
	ФормаВводаКурсаИКратности.ДатаУстановкиКурсаИКратности = ДатаПлатежа;

	СтруктураКурсаИКратности = ФормаВводаКурсаИКратности.ОткрытьМодально();

	Если СтруктураКурсаИКратности <> неопределено Тогда

		КурсВзаиморасчетов = СтруктураКурсаИКратности.КурсВалюты;
		КратностьВзаиморасчетов = СтруктураКурсаИКратности.КратностьВалюты;
		
	КонецЕсли;

	Если ПлатежПоСуммеВзаиморасчетов Тогда
		РассчитатьСуммуПлатежа();
	Иначе	
		РассчитатьСуммуВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.НадписьДоговорКонтрагента.Заголовок=ДоговорКонтрагента;
	
	ЭлементыФормы.КурсВзаиморасчетов.Доступность=ВладелецФормы.ЗапрашиватьКурсВзаиморасчетов;
	ЭлементыФормы.СуммаПлатежа.Доступность=ВладелецФормы.ЗапрашиватьСуммуПлатежа;
	ЭлементыФормы.СуммаВзаиморасчетов.Доступность=ВладелецФормы.ЗапрашиватьСуммуВзаиморасчетов;
	
	Если ПлатежПоСуммеВзаиморасчетов Тогда
		ЭлементыФормы.ПанельСуммы.ТекущаяСтраница=ЭлементыФормы.ПанельСуммы.Страницы["ПоСуммеВзаиморасчетов"];
	Иначе
		ЭлементыФормы.ПанельСуммы.ТекущаяСтраница=ЭлементыФормы.ПанельСуммы.Страницы["ПоСуммеПлатежа"];
	КонецЕсли;
	
КонецПроцедуры

Процедура СуммаВзаиморасчетовПриИзменении(Элемент)
	
	Если ПлатежПоСуммеВзаиморасчетов Тогда
		РассчитатьСуммуПлатежа();
	Иначе	
		РассчитатьКурсВзаиморасчетов();
	КонецЕсли;
	
КонецПроцедуры









