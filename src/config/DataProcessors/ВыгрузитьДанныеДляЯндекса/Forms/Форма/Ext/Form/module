

Процедура КнопкаВыполнитьНажатие(Кнопка)

	Если ФайлСуществует(КаталогПуть) Тогда
		
		СформироватьФайлыВыгрузки();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаполнитьПроизводителей(Кнопка)
	
	ЗаполнитьПроизводителей();
	
КонецПроцедуры

Процедура ЗаполнитьПроизводителей()
	
	Для Каждого ТекСтрБренд Из Бренды Цикл
		//БрендЛок = ТекСтрБренд.Бренд;
		БрендЛок = СтрЗаменить(ТекСтрБренд.НаименованиеКатегории, "Диски ", ""); // Для замены Replica на LegeArtis
		ПроизводителиДанные = ПолучитьДанныеПроизводителейПоБренду(БрендЛок);
		ПроизводителиВыборка = ПроизводителиДанные.Выбрать();
		Пока ПроизводителиВыборка.Следующий() Цикл
			НовСтрПроизводитель = Производители.Добавить();
			НовСтрПроизводитель.Бренд         = ТекСтрБренд.Бренд;
			НовСтрПроизводитель.Производитель = ПроизводителиВыборка.Ссылка;
			НовСтрПроизводитель.Категория     = ТекСтрБренд.Категория;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПроизводителей()

Функция ПолучитьДанныеПроизводителейПоБренду(Бренд)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Производители.Ссылка
	|ИЗ
	|	Справочник.Производители КАК Производители
	|ГДЕ
	|	Производители.Наименование ПОДОБНО &НаименованиеБренда";
	
	Запрос.УстановитьПараметр("НаименованиеБренда", "%" + Бренд + "%");
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции // ПолучитьДанныеПроизводителейПоБренду()

Процедура ПриОткрытии()
	
	СформироватьТаблицуБрендов();
	
КонецПроцедуры

Процедура КаталогПутьНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ЗаголовокЛок = "Выберите каталог для создания файлов";
	ВыбратьКаталогЛок(КаталогПуть, ЗаголовокЛок);

КонецПроцедуры

Процедура ВыбратьКаталогЛок(ЗначениеПоляФормы, ЗаголовокЛок)
	
	//Режим = РежимДиалогаВыбораФайла.Открытие;
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = ЗаголовокЛок;
	ДиалогОткрытияФайла.ПолноеИмяФайла = Неопределено;
	ДиалогОткрытияФайла.Каталог = Неопределено;
	//ДиалогОткрытияФайла.Фильтр = Фильтр;
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ЗначениеПоляФормы = ДиалогОткрытияФайла.Каталог;
	КонецЕсли;	
	
КонецПроцедуры // ВыбратьКаталогЛок()

Процедура ФайлыВыгрузкиФайлПутьОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекСтр = ЭлементыФормы.ФайлыВыгрузки.ТекущиеДанные;
	
	СтандартнаяОбработка = Ложь;
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ТекСтр.ФайлПуть);
	ТекстДок.Показать();
	
КонецПроцедуры

Процедура ЗагрузитьКартинкиСайта(Кнопка)
	
	ВыполнитьЧтениеКартинокИзФайла(ФайлКартинки);
	
КонецПроцедуры

Процедура ВыбратьФайл(ЗначениеПоляФормы, ЗаголовокЛок, Фильтр)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	//Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = ЗаголовокЛок;
	ДиалогОткрытияФайла.ПолноеИмяФайла = Неопределено;
	ДиалогОткрытияФайла.Каталог = Неопределено;
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ЗначениеПоляФормы = ДиалогОткрытияФайла.ПолноеИмяФайла;
	КонецЕсли;	
	
КонецПроцедуры // ВыбратьФайл()

Процедура ФайлКартинкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ЗаголовокЛок = "Выберите файл для считывания данных о картинках";
	Фильтр = "Файл xml " + "(*.xml)|*.xml";
	ВыбратьФайл(ФайлКартинки, ЗаголовокЛок, Фильтр);

КонецПроцедуры

Процедура ФайлОписанияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ЗаголовокЛок = "Выберите файл для считывания описаний";
	Фильтр = "Файл xml " + "(*.xml)|*.xml";
	ВыбратьФайл(ФайлОписания, ЗаголовокЛок, Фильтр);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗагрузитьОписанияМоделей(Кнопка)
	
	ВыполнитьЧтениеОписанийИзФайла(ФайлОписания);
	
КонецПроцедуры

Процедура КнопкаЗаполнитьПроизводителейНажатие(Элемент)
	
	ЗаполнитьПроизводителей();
	
	ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Производители;
	
КонецПроцедуры

Процедура КнопкаПодтвердитьПроизводителейНажатие(Элемент)

	ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Прочее;
	
КонецПроцедуры

Процедура КнопкаЗагрузитьФайлыКартинокОписанияНажатие(Элемент)
	
	Если ФайлСуществует(ФайлКартинки) Тогда
		ВыполнитьЧтениеКартинокИзФайла(ФайлКартинки);
	КонецЕсли;
	Если ФайлСуществует(ФайлОписания) Тогда
		ВыполнитьЧтениеОписанийИзФайла(ФайлОписания);
	КонецЕсли;
	
	Если ФлажокКартинкиЗагружены И ФлажокОписанияЗагружены Тогда
		ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Файлы;
	Иначе
		Сообщить("Не удалось загрузить данные");
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаСоздатьФайлыВыгрузкиНажатие(Элемент)
	
	Если ФайлСуществует(КаталогПуть) Тогда
		
		СформироватьФайлыВыгрузки();
		
	КонецЕсли;
	
	Сообщить("Обработка закончена");
	
КонецПроцедуры

Процедура Панель1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	//ТекущаяСтраница
	
КонецПроцедуры

Процедура ОсновныеДействияФормыАвтоматическийВариант(Кнопка)
	
	ВыгрузитьДанныеНаВнешнийРесурс();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыВыгрузитьНаФТП(Кнопка)
	
	ВыгрузитьФайлыНаФТП();
	
КонецПроцедуры

//Процедура ВебСервис()
//	
//	URL = "www.yst.ru/im";
//	Прокси = WSссылки.IM.СоздатьWSПрокси("www.yst.ru/ServiceIM", "ServiceIM", "ServiceIMSoap12");  // (<URIПространстваИменСервиса>, <ИмяСервиса>, <ИмяПорта>, <Таймаут>) 
//	
//	Прокси.Пользователь = "ShintradeSPB";
//	Прокси.Пароль = "tdBsEtuJ";
//	
//	Фабрика = Прокси.ФабрикаXDTO;
//	рез=Фабрика.Создать(Фабрика.Тип(URL, "Result")); // Один из элементов XDTO-пакета
//	ИмяФайла = КаталогВременныхФайлов()+"Текущий.xml";
//	
//	
//КонецПроцедуры // ВебСервис()
