////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()

	// Оновляется информационная строка.
	Если НаборЗаписейНазначенияСвойства.Количество() > 0 Тогда
		ЭлементыФормы.НадписьНазначенияСвойства.Заголовок = 
		"Свойство предназначено только для указанных объектов";
	Иначе
		ЭлементыФормы.НадписьНазначенияСвойства.Заголовок = 
		"Свойство предназначено для всех объектов указанного типа";
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриИзмененииДанных формы.
//
Процедура ПриИзмененииДанных()

	// Перечитывается набор записей.
	ЭлементыФормы.НаборЗаписейНазначенияСвойства.ОбновлятьПриИзмененииОтбора = Ложь;
	НаборЗаписейНазначенияСвойства.Отбор.Свойство.Установить(Ссылка);
	НаборЗаписейНазначенияСвойства.Прочитать();

	// Видимость и отбор значений.
	ЭлементыФормы.ПанельФормы.Страницы.ЗначенияСвойства.Доступность = ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"));
	СписокЗначенияСвойства.Отбор.Владелец.Установить(Ссылка);

КонецПроцедуры

// Обработчик события ПриЗаписи формы.
//
Процедура ПриЗаписи(Отказ)

	Для каждого Запись Из НаборЗаписейНазначенияСвойства Цикл
		// Очистка записей, не соответствующих по типу.
		Если НЕ НазначениеСвойства.ТипЗначения.СодержитТип(ТипЗнч(Запись.Объект)) Тогда
			НаборЗаписейНазначенияСвойства.Удалить(Запись);

		// Назначение свойства каждой записи - для впервые записываемого объекта.
		ИначеЕсли Запись.Свойство <> Ссылка Тогда
			Запись.Свойство = Ссылка;
		КонецЕсли;
	КонецЦикла;

	// Назначение свойства отбору - для впервые записываемого объекта.
	Если НаборЗаписейНазначенияСвойства.Отбор.Свойство.Значение <> Ссылка Тогда
		НаборЗаписейНазначенияСвойства.Отбор.Свойство.Значение = Ссылка;
	КонецЕсли;

	Если НаборЗаписейНазначенияСвойства.Модифицированность() Тогда
		// Запись набора записей.
		Попытка
			НаборЗаписейНазначенияСвойства.Записать();
		Исключение
			Предупреждение("Не удалось записать назначения свойства:
			               |" + ОписаниеОшибки());
			Отказ = Истина;
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПослеЗаписи формы.
//
Процедура ПослеЗаписи()

	СписокЗначенияСвойства.Отбор.Владелец.Установить(Ссылка);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Обработчик события ПриИзменении элемента ТипЗначения.
//
Процедура ТипЗначенияПриИзменении(Элемент)

	ЭлементыФормы.ПанельФормы.Страницы.ЗначенияСвойства.Доступность = ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"));
	Если НЕ ЭлементыФормы.ПанельФормы.Страницы.ЗначенияСвойства.Доступность
		 И  ЭлементыФормы.ПанельФормы.ТекущаяСтраница.Имя = "ЗначенияСвойства" Тогда
		ЭлементыФормы.ПанельФормы.ТекущаяСтраница = ЭлементыФормы.ПанельФормы.Страницы[0];
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриИзменении элемента НазначениеСвойства.
//
Процедура НазначениеСвойстваПриИзменении(Элемент)

	Если НЕ ЭтоНовый() 
	   И НазначениеСвойства <> Ссылка.НазначениеСвойства 
	   И ЭтотОбъект.СуществуютСсылки() Тогда

		Предупреждение("Существуют объекты, которым назначено свойство """ + Наименование + """.
		               |Назначение свойства """ + Наименование + """ не может быть изменено.");

		НазначениеСвойства = Ссылка.НазначениеСвойства;
		Возврат;
	КонецЕсли;
	
	КолвоЗаписейВНаборе=НаборЗаписейНазначенияСвойства.Количество();
	Для ОбратныйИндекс = 1 По КолвоЗаписейВНаборе Цикл
		Запись = НаборЗаписейНазначенияСвойства[КолвоЗаписейВНаборе-ОбратныйИндекс];
		// Очистка записей, не соответствующих по типу.
		Если НЕ НазначениеСвойства.ТипЗначения.СодержитТип(ТипЗнч(Запись.Объект)) Тогда
			НаборЗаписейНазначенияСвойства.Удалить(Запись);
		КонецЕсли;
	КонецЦикла;


КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента НаборЗаписейНазначенияСвойства.
//
Процедура НаборЗаписейНазначенияСвойстваПередНачаломДобавления(Элемент, Отказ, Копирование)

	Если ЗначениеНеЗаполнено(НазначениеСвойства) Тогда
		Предупреждение("Не указано назначение свойства!");
		Отказ = Истина;
	КонецЕсли;
	
	Если НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы Тогда
		Предупреждение("Для документов изменение списка назначений свойства запрещено!");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента НаборЗаписейНазначенияСвойства.
//
Процедура НаборЗаписейНазначенияСвойстваПередНачаломИзменения(Элемент, Отказ)

	Если ЗначениеНеЗаполнено(НазначениеСвойства) Тогда
		Предупреждение("Не указано назначение свойства!");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриНачалеРедактирования элемента НаборЗаписейНазначенияСвойства.
//
Процедура НаборЗаписейНазначенияСвойстваПриНачалеРедактирования(Элемент, НоваяСтрока)

	Элемент.ТекущиеДанные.Объект = НазначениеСвойства.ТипЗначения.ПривестиЗначение(Элемент.ТекущиеДанные.Объект);

КонецПроцедуры

// Обработчик события Очистка элемента НаборЗаписейНазначенияСвойства.Объект.
//
Процедура НаборЗаписейНазначенияСвойстваОбъектОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента СписокЗначенияСвойства.
//
Процедура СписокЗначенияСвойстваПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)

	Если ЭтоНовый() Тогда
		Вопрос = "Свойство еще не записано! Записать?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = НЕ ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


