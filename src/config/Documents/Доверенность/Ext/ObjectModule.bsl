#Если Клиент Тогда

Функция ПечатьДоверенности(НазваниеМакета)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент",  ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаСреза",        Дата);
	Запрос.УстановитьПараметр("ФизЛицо",          ФизЛицо.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номер КАК НомерДокумента,
	|	Дата  КАК ДатаДокумента,
	|	Организация КАК Руководители,
	|	Организация,
	|	ФизЛицо,
	|	Контрагент                   КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(НаПолучениеОт КАК СТРОКА(100)) = """" ТОГДА Контрагент.НаименованиеПолное
	|		ИНАЧЕ НаПолучениеОт
	|	КОНЕЦ КАК ПоставщикПредставление,
	|	ДатаДействия                 КАК СрокДействия,
	|	ПоДокументу                  КАК РеквизитыДокументаНаПолучение,
	|	Товары.(
	|		НомерСтроки              КАК Номер,
	|		НаименованиеТовара       КАК Ценнности,
	|		НаименованиеТовара       КАК ЦеннностиПредставление,
	|		ЕдиницаПоКлассификатору  КАК ЕдиницаИзмерения,
	|		ЕдиницаПоКлассификатору.Представление КАК ЕдиницаИзмеренияПредставление,
	|		Количество
	|	)
	|ИЗ
	|	Документ.Доверенность КАК Доверенность
	|ГДЕ
	|	Доверенность.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_М2";

	Макет = ПолучитьОбщийМакет("М2");

	ФамилияИмяОтчествоФизЛица     = ФамилияИмяОтчество(Шапка.ФизЛицо, Шапка.ДатаДокумента);
	ФамилияИмяОтчествоДоверенного = ФамилияИмяОтчествоФизЛица.Фамилия + " " + ФамилияИмяОтчествоФизЛица.Имя + " " + ФамилияИмяОтчествоФизЛица.Отчество;
	ДолжностьДоверенного          = Должность;

	Если НазваниеМакета = "М2" тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Отрез");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ФИОДоверенного = ФамилияИнициалыФизЛица(ФамилияИмяОтчествоДоверенного);
		ТабДокумент.Вывести(ОбластьМакета);
		НазваниеФормы = "Типовая межотраслевая форма № М-2";
	Иначе
		НазваниеФормы = "Типовая межотраслевая форма № М-2а";
	КонецЕсли;

	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;

	ПаспортФизЛица        = ПаспортныеДанные(Шапка.ФизЛицо, Шапка.ДатаДокумента);
	СведенияОбОрганизации = СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НомерДокумента                = ПолучитьНомерНаПечать(ЭтотОбъект);
	ОбластьМакета.Параметры.НазваниеФормы                 = НазваниеФормы;
	ОбластьМакета.Параметры.ОрганизацияПредставление      = ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.РеквизитыСчета                = ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,");
	ОбластьМакета.Параметры.РеквизитыПотребителя          = ОписаниеОрганизации(СведенияОбОрганизации);
	ОбластьМакета.Параметры.ОрганизацияКодПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.ДолжностьДоверенного          = ДолжностьДоверенного;
	ОбластьМакета.Параметры.ФамилияИмяОтчествоДоверенного = ФамилияИмяОтчествоДоверенного;
	ОбластьМакета.Параметры.ПаспортСерия                  = ПаспортФизЛица.Серия;
	ОбластьМакета.Параметры.ПаспортНомер                  = ПаспортФизЛица.Номер;
	ОбластьМакета.Параметры.ПаспортВыдан                  = ПаспортФизЛица.Выдан;
	ОбластьМакета.Параметры.ПаспортДатаВыдачи             = ПаспортФизЛица.ДатаВыдачи;
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);

	Пока ВыборкаСтрокТовары.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.КоличествоПрописью = ?(ВыборкаСтрокТовары.Количество = 0, "",
		                                             Строка(ВыборкаСтрокТовары.Количество) + " (" + 
		                                             КоличествоПрописью(ВыборкаСтрокТовары.Количество) + ")");
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);

	Если НЕ ЗначениеНеЗаполнено(Руководитель) Тогда
		ОбластьМакета.Параметры.ФИОРуководителя       = Руководитель;
		ОбластьМакета.Параметры.Руководитель          = Руководитель;
	КонецЕсли;

	Если НЕ ЗначениеНеЗаполнено(Бухгалтер) Тогда
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;
		ОбластьМакета.Параметры.ГлавныйБухгалтер      = Бухгалтер;
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьДоверенности()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;

	Если Не ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ИмяМакета = "М2" ИЛИ ИмяМакета = "М2а" Тогда
		ТабДокумент = ПечатьДоверенности(ИмяМакета);
		
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("СправочникСсылка.ДополнительныеПечатныеФормы") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = ИмяМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = Ссылка;
		ТабДокумент = Обработка.Печать();
		
	КонецЕсли;

	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()));

КонецПроцедуры // Печать()

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСписокПечатныхФорм() Экспорт

	СписокМакетов = Новый СписокЗначений;

	СписокМакетов.Добавить("М2","Доверенность (М-2)");
	СписокМакетов.Добавить("М2а","Доверенность (М-2а)");

	ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
	Возврат СписокМакетов;

КонецФункции // ПолучитьОбластьСписокПечатныхФорм()

#КонецЕсли

// Процедура выполняет заполниение табличной части неполученными ТМЦ по заказу поставщику.
//
Процедура ЗаполнитьТоварыПоОстаткам() Экспорт

	Если ЗначениеНеЗаполнено(Сделка) Тогда
		Возврат;
	КонецЕсли;

	Товары.Очистить();

	// Товар
	Запрос = Новый Запрос;

	СписокСтатусПартии = Новый СписокЗначений;
	СписокСтатусПартии.Добавить(Перечисления.СтатусыПартийТоваров.Купленный);
	СписокСтатусПартии.Добавить(Перечисления.СтатусыПартийТоваров.НаКомиссию);

	Запрос.УстановитьПараметр("Договор",      ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Сделка",       Сделка);
	Запрос.УстановитьПараметр("СтатусПартии", СписокСтатусПартии);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура                    КАК Номенклатура,
	|	Док.ЕдиницаИзмерения                КАК Единица,
	|	МАКСИМУМ(Остатки.КоличествоОстаток) КАК КоличествоОстатокПоЗаказу,
	|	СУММА(Док.Количество)               КАК КоличествоПоЗаказу
	|ИЗ
	|	(ВЫБРАТЬ
	|		Ссылка,
	|		Номенклатура,
	|		ХарактеристикаНоменклатуры,
	|		ЕдиницаИзмерения,
	|		Количество
	|	ИЗ
	|		Документ.ЗаказПоставщику.Товары
	|	ГДЕ
	|		Ссылка = &Сделка) КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ДоговорКонтрагента = &Договор И ЗаказПоставщику = &Сделка) КАК Остатки
	|ПО
	|	Док.Номенклатура = Остатки.Номенклатура И Док.ХарактеристикаНоменклатуры = Остатки.ХарактеристикаНоменклатуры
	|
	|ГДЕ
	|	Остатки.СтатусПартии В (&СтатусПартии)
	|	И Остатки.КоличествоОстаток > 0
	|	И Док.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|	Док.ЕдиницаИзмерения";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка          = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		НаименованиеТовара = Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара = ?(ЗначениеНеЗаполнено(НаименованиеТовара), Выборка.Номенклатура.Наименование, НаименованиеТовара);

		СтрокаТабличнойЧасти                         = Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара      = НаименованиеТовара;
		СтрокаТабличнойЧасти.Количество              = Мин(Выборка.КоличествоОстатокПоЗаказу * Выборка.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / Выборка.Единица.Коэффициент, Выборка.КоличествоПоЗаказу);
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = Выборка.Единица.ЕдиницаПоКлассификатору;

	КонецЦикла;

	// Возвратная тара
	МетаданныеДокумента = Сделка.Метаданные();

	Если НЕ ЕстьТабЧастьДокумента("ВозвратнаяТара", МетаданныеДокумента) Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Договор",      ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Сделка",       Сделка);
	Запрос.УстановитьПараметр("СтатусПартии", Перечисления.СтатусыПартийТоваров.ВозвратнаяТара);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура                         КАК Номенклатура,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков КАК Единица,
	|	МАКСИМУМ(Остатки.КоличествоОстаток)      КАК КоличествоОстатокПоЗаказу,
	|	СУММА(Док.Количество)                    КАК КоличествоПоЗаказу
	|ИЗ
	|	(ВЫБРАТЬ
	|		Ссылка,
	|		Номенклатура,
	|		Количество
	|	ИЗ
	|		Документ.ЗаказПоставщику.ВозвратнаяТара
	|	ГДЕ
	|		Ссылка = &Сделка) КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ДоговорКонтрагента = &Договор И ЗаказПоставщику = &Сделка) КАК Остатки
	|ПО
	|	Док.Номенклатура = Остатки.Номенклатура
	|
	|ГДЕ
	|	Остатки.СтатусПартии = &СтатусПартии
	|	И Остатки.КоличествоОстаток > 0
	|	И Док.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка          = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		НаименованиеТовара = Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара = ?(ЗначениеНеЗаполнено(НаименованиеТовара), Выборка.Номенклатура.Наименование, НаименованиеТовара);

		СтрокаТабличнойЧасти                         = Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара      = НаименованиеТовара + " (возвратная тара)";
		СтрокаТабличнойЧасти.Количество              = Мин(Выборка.КоличествоОстатокПоЗаказу, Выборка.КоличествоПоЗаказу);
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = Выборка.Единица.ЕдиницаПоКлассификатору;

	КонецЦикла;

КонецПроцедуры // ЗаполнитьТоварыПоОстаткам()

// Процедура выполняет заполниение табличной части по счету на оплату поставщику.
//
Процедура ЗаполнитьТоварыПоСчету(Основание)

	Товары.Очистить();

	// Товар
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Основание", Основание);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура                         КАК Номенклатура,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков КАК Единица,
	|	Док.Количество                           КАК Количество
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &Основание И Док.Количество > 0
	|";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка          = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		НаименованиеТовара = Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара = ?(ЗначениеНеЗаполнено(НаименованиеТовара), Выборка.Номенклатура.Наименование, НаименованиеТовара);

		СтрокаТабличнойЧасти                         = Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара      = НаименованиеТовара;
		СтрокаТабличнойЧасти.Количество              = Выборка.Количество;
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = Выборка.Единица.ЕдиницаПоКлассификатору;

	КонецЦикла;

	// Возвратная тара
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Основание", Основание);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура                         КАК Номенклатура,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков КАК Единица,
	|	Док.Количество                           КАК Количество
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.ВозвратнаяТара КАК Док
	|ГДЕ
	|	Док.Ссылка = &Основание И Док.Количество > 0
	|";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка          = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		НаименованиеТовара = Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара = ?(ЗначениеНеЗаполнено(НаименованиеТовара), Выборка.Номенклатура.Наименование, НаименованиеТовара);

		СтрокаТабличнойЧасти                         = Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара      = НаименованиеТовара + " (возвратная тара)";
		СтрокаТабличнойЧасти.Количество              = Выборка.Количество;
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = Выборка.Единица.ЕдиницаПоКлассификатору;

	КонецЦикла;

КонецПроцедуры // ЗаполнитьТоварыПоОстаткам()

Процедура ОбработкаЗаполнения(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда

		Сделка             = Основание;
		Организация        = Основание.Организация;
		ДоговорКонтрагента = Основание.ДоговорКонтрагента;
		Контрагент         = Основание.Контрагент;

		Если НЕ ЗначениеНеЗаполнено(Основание.СтруктурнаяЕдиница)
		   И ТипЗнч(Основание.СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета")
		   И Основание.СтруктурнаяЕдиница.Владелец = Организация Тогда
			СтруктурнаяЕдиница = Основание.СтруктурнаяЕдиница;
		Иначе
			СтруктурнаяЕдиница = Организация.ОсновнойБанковскийСчет;
		КонецЕсли;

		ЗаполнитьТоварыПоОстаткам();

	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда

		Организация        = Основание.Организация;
		ДоговорКонтрагента = Основание.ДоговорКонтрагента;
		Контрагент         = Основание.Контрагент;

		Если НЕ ЗначениеНеЗаполнено(Основание.СтруктурнаяЕдиница)
		   И ТипЗнч(Основание.СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета")
		   И Основание.СтруктурнаяЕдиница.Владелец = Организация Тогда
			СтруктурнаяЕдиница = Основание.СтруктурнаяЕдиница;
		Иначе
			СтруктурнаяЕдиница = Организация.ОсновнойБанковскийСчет;
		КонецЕсли;

		ЗаполнитьТоварыПоСчету(Основание);

	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ Отказ Тогда
	
		обЗаписатьПротоколИзменений(ЭтотОбъект);
	
	КонецЕсли; 

КонецПроцедуры
