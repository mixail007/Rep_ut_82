
// Процедура выполняет действия, необходимые при выборе счета организации
//
// Параметры:
//  Нет.
//
Процедура ПриИзмененииСчетаОрганизации()
	
	Если СчетОрганизации.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если Организация.Пустая() Тогда
		Организация=СчетОрганизации.Владелец;
	КонецЕсли;
	
	Если НЕ ЗначениеНеЗаполнено(СчетОрганизации)
	   И НЕ ЗначениеНеЗаполнено(Касса)
	   И СчетОрганизации.ВалютаДенежныхСредств <> Касса.ВалютаДенежныхСредств Тогда
		Сообщить("Не совпадают валюты расчетного счета и кассы! Поле кассы - очищено.");
		Касса="";
	КонецЕсли;
	
	ВалютаДокумента=СчетОрганизации.ВалютаДенежныхСредств;
	ЭлементыФормы.НадписьВалюта.Заголовок=СчетОрганизации.ВалютаДенежныхСредств.Наименование;
	
	СтруктураКурсаДокумента = ПолучитьКурсВалюты(ВалютаДокумента, ?(ДатаОплаты='00010101',Дата,КонецДня(ДатаОплаты)));	
		
КонецПроцедуры // ПриИзмененииСчетаОрганизации()

Процедура СчетОрганизацииПриИзменении(Элемент)
	
	ПриИзмененииСчетаОрганизации();
	
КонецПроцедуры

Процедура КассаПриИзменении(Элемент)
	
	Если НЕ ЗначениеНеЗаполнено(СчетОрганизации)
	   И НЕ ЗначениеНеЗаполнено(Касса)
	   И СчетОрганизации.ВалютаДенежныхСредств <> Касса.ВалютаДенежныхСредств Тогда
		Сообщить("Не совпадают валюты расчетного счета и кассы! Поле расчетного счета - очищено.");
		СчетОрганизации="";
	КонецЕсли;
	
	ЭлементыФормы.НадписьВалюта.Заголовок=Касса.ВалютаДенежныхСредств.Наименование;
	ВалютаДокумента=Касса.ВалютаДенежныхСредств;
	
КонецПроцедуры

Процедура ПриОткрытии()
		
	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
		ЗаполнитьШапкуДокумента(ЭтотОбъект, глТекущийПользователь, ВалютаРегламентированногоУчета);
		ПриИзмененииСчетаОрганизации();
		
		УстановитьНомерДокумента(ЭтотОбъект);
				
	КонецЕсли;
    
	//БАЛАНС (04.12.2007)                       
	//
	мПроведениеИзФормы = Истина;
	
	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Ответственный.Пустая() Тогда
		Ответственный     = глТекущийПользователь;
	КонецЕсли;
	
	яштСменаПользователя(ЭтотОбъект, ЭтаФорма, глТекущийПользователь);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ОрганизацияПриИзменении(Элемент)
	
	СчетОрганизации=Организация.ОсновнойБанковскийСчет;
	ПриИзмененииСчетаОрганизации();
	УстановитьНомерДокумента(ЭтотОбъект);
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	РазрешитьОткрывать = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"РазрешитьОткрыватьКассовыеДокументы");
	Если не(РазрешитьОткрывать) Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры






