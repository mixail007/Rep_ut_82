Перем мЖирныйШрифт;
Перем мЗачеркнутыйШрифт;

Перем мСписокЗаказов, мСписокОтгрузок, ВремяОбновления;

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры





Процедура ДействияФормыДействиеАнализ(Кнопка)
	
	АнализЗаказа = Отчеты.АнализСезонныхЗаказов.Создать();
	АнализЗаказаФорма = АнализЗаказа.ПолучитьФорму();
	ТекСтр = ЭлементыФормы.Список.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтр.Ссылка) тогда
		АнализЗаказаФорма.ЭлементыФормы.ДатаНач.Значение = НачалоДня(ТекСтр.Ссылка.Дата);
		АнализЗаказаФорма.ЭлементыФормы.ДатаКон.Значение = КонецГода(ТекСтр.Ссылка.Дата);
		АнализЗаказаФорма.ЭлементыФормы.ПолеНастройкиСсылка.Значение = ТекСтр.Ссылка;
	КонецЕсли;
	АнализЗаказа.ЗаполнитьНачальныеНастройки();
	АнализЗаказаФорма.Открыть();
	АнализЗаказаФорма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	//+++( 24.08.2012 - отбор по подразделению ВСЕГДА!
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		Если Отбор.Найти("Подразделение") = Неопределено Тогда 
			Отбор.Добавить("Подразделение");
		КонецЕсли;
		Отбор["Подразделение"].Использование = Истина;
		Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
		Отбор["Подразделение"].Значение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
		ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
	КонецЕсли;
	
	Если РольДоступна("ДополнительныеПраваВЭД") Тогда
		
		Если ДокументСписок.Отбор.Найти("Подразделение") = Неопределено Тогда 
			ДокументСписок.Отбор.Добавить("Подразделение");
		КонецЕсли;
		ДокументСписок.Отбор["Подразделение"].Использование = Истина;
		
		списокПодразделенийПользователя = новый СписокЗначений;
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
		
		ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.ВСписке;
		ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
		
		ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		
	иначеЕсли РольДоступна("яштФинДиректор") Тогда	
		
	иначе
		
		Если ДокументСписок.Отбор["Подразделение"].Использование  = Ложь Тогда
			ДокументСписок.Отбор["Подразделение"].Использование = Истина;
			
			списокПодразделенийПользователя = новый СписокЗначений;
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
			
			ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.НеВСписке;
			ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
			
			//ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура СписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	//расцветка удаленных и просроченных заказов
	Если ДанныеСтроки.ссылка.ПометкаУдаления 
		или (ДанныеСтроки.ссылка.ДатаДействияПо>'00010101' 
		      и ДанныеСтроки.ссылка.ДатаДействияПо<НачалоДня( ТекущаяДата() )
			 )  тогда
		ОформлениеСтроки.ЦветФона = webЦвета.СветлоСерый;
	КонецЕсли;	

КонецПроцедуры


мСписокЗаказов=Новый Массив;
мСписокОтгрузок=Новый Массив;

мЖирныйШрифт = Новый Шрифт(,, Истина);
мЗачеркнутыйШрифт = Новый Шрифт(,,,,,Истина);
