Перем тзТерминалы;


Процедура АдресСтрНачалоВыбора(Элемент, СтандартнаяОбработка)
	ОбработкаРедактирования = Обработки.РедактированиеКонтактнойИнформации.Создать();
	ОбработкаРедактирования.ДоступностьОбъекта = истина;
	ОбработкаРедактирования.ЗаписыватьВРегистр = ложь;
	ОбработкаРедактирования.РедактироватьЗапись(КИ,ложь,ЭтаФорма);
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ЗаполнитьАдрес();
КонецПроцедуры

процедура ЗаполнитьАдрес()
	Аббр = РаботаСDPD.ПолучитьАббревиатуры();
	
	УлицаАббр = РаботаСDPD.ПолучитьУлицуАббр(КИ.Поле6,аббр);
	Если КИ.Поле4 = "" тогда
		ГородАббр = РаботаСDPD.ПолучитьУлицуАббр(КИ.Поле2,аббр); //Москва, Питер, Севастополь
	иначе
		ГородАббр = РаботаСDPD.ПолучитьУлицуАббр(КИ.Поле4,аббр);
	КонецЕсли;
	
	PostalCode	 = СокрЛП(КИ.Поле1);
	Region	 = СокрЛП(КИ.Поле2);
	District	 = СокрЛП(КИ.Поле3);
	City	 = СокрЛП(ГородАббр.Улица);
	Settlement= СокрЛП(КИ.Поле5);
	Street	 = СокрЛП(УлицаАббр.Улица);
	StreetType	 = СокрЛП(УлицаАббр.Аббр);
	
	ЭтоВладение = Найти(нрег(КИ.Представление),"владение")>0;
	Если ЭтоВладение тогда
		Vlad = СокрЛП(КИ.Поле7);
		House="";
	иначе
		House = СокрЛП(КИ.Поле7);
		Vlad="";
	КонецЕсли;
	
	ЭтоКорпус = Найти(нрег(КИ.Представление),"корпус")>0;
	Если ЭтоКорпус тогда
		BlockType = СокрЛП(КИ.Поле8);
		STR="";
	иначе
		STR = СокрЛП(КИ.Поле8);
		BlockType="";
	КонецЕсли;
	
	Dop_inf = СокрЛП(КИ.Комментарий);
	АдресСтр = СокрЛП(КИ.Представление);
КонецПроцедуры

Процедура ОсновныеДействияФормыкнОк(Кнопка)
	тч = Владелец.РеквизитыЗаказаТК;
	Если ЮрФизЛицо = "ФизЛицо" тогда
		Если Фамилия="" или Имя="" или Отчество="" тогда
			Предупреждение("Неполностью заполнены ФИО");
			возврат;
		КонецЕсли;	
		ContactFio = Фамилия+" "+Имя+" "+Отчество;
	КонецЕсли;
	
	Если не ТелефонВалиден(ContactPhone) тогда
		   Предупреждение("Телефон должен быть в формате +7 (ххх) ххх-хх-хх");
		   ЭтаФорма.ТекущийЭлемент =ЭлементыФормы.ContactPhone;
		возврат;
	КонецЕсли;
	
	Если не ТелефонВалиден(ContactPhone_Dop) и ContactPhone_Dop<>"" тогда
		   Предупреждение("Телефон должен быть в формате +7 (ххх) ххх-хх-хх");
		   ЭтаФорма.ТекущийЭлемент =ЭлементыФормы.ContactPhone_Dop;
		возврат;
	КонецЕсли;

	
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "ContactFio", ContactFio);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "ContactPhone", ContactPhone);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "ContactPhone_Dop", ContactPhone_Dop);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "ТарифТК", ТарифТК);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "КурьерСТерминалом", флКурьерСТерминалом);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "TerminalOrAddress", ?(ТерминалИлиАдресная="ПунктВыдачи",истина,ложь));
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "ОплаченБН", истина);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "КлиентПлатитЗаДоставку", флКлиентПлатитЗаДоставку);
	
	Если КлиентПлатитКакЮрик и СокрЛП(Владелец.Контрагент.НомерПлательщикаДПД)<>"" тогда
		РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Номер плательщика в DPD", СокрЛП(Владелец.Контрагент.НомерПлательщикаДПД));
	Иначе
		РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Номер плательщика в DPD", "");
	КонецЕсли;
	
	Если  флДоставкаЗаНал тогда
		РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Доставка за нал", истина);
	иначе
		РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Доставка за нал", ложь);
	КонецЕсли;
	
	
	Если ТерминалИлиАдресная = "ПунктВыдачи" тогда
		РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "TerminalCode", TerminalCode);
	иначе
		РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "TerminalCode", "");
	КонецЕсли;	 
	
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "countryCode", countryCode);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "PostalCode", PostalCode);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Region", Region);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "District", District);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "City", City);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Settlement", "");
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Street", Street);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "StreetType", StreetType);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Vlad", Vlad);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "House", House);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "BlockType", BlockType);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "STR", STR);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Dop_inf", Dop_inf);
	РаботаСDPD.ОбновитьРеквизитТК(ТЧ, "Адрес покупателя", АдресСтр);
	
	Владелец.СтоимостьДоставки = работасDPD.ПолучитьСтоимостьДоставкиЗаказаПоТарифу(Владелец);
	
	Закрыть();
КонецПроцедуры

Процедура ТерминалИлиАдреснаяПриИзменении(Элемент)
	Если ТерминалИлиАдресная = "ПунктВыдачи" тогда
		ЭлементыФормы.TerminalCode.Доступность = истина;
		Если тзТерминалы.Количество()=0 и Элемент<>неопределено тогда
			ЗаполнитьПВ();
		конецЕсли;
		Если  тзТерминалы.Количество()>0 тогда
			тзСтраны = тзТерминалы.Скопировать();
			тзСтраны.Свернуть("countryCode");

			тзТерминалы2 = тзТерминалы.Скопировать();
			тзТерминалы2.Очистить();
						ВыбСтрана = тзСтраны.ВыбратьСтроку("Выберите страну получателя");
			Если ВыбСтрана<>неопределено тогда
				отбор = новый структура("countryCode");
				отбор.countryCode = ВыбСтрана.countryCode;
				НайденныеТерминалы = тзТерминалы.НайтиСтроки(Отбор);
				Если найденныеТерминалы.Количество()>0 тогда
					Для каждого эл из найденныеТерминалы цикл
						нстр = тзТерминалы2.Добавить();
						ЗаполнитьЗначенияСвойств(нстр,эл);
					КонецЦикла;
				иначе 
					выбТерминал = неопределено;	
				КонецЕсли;
				выбТерминал = тзТерминалы2.ВыбратьСтроку("Выберите терминал получателя");
			иначе
				выбТерминал = неопределено;
			КонецЕсли;
		иначе
			выбТерминал = неопределено;
		КонецЕсли;
		
		Если выбТерминал <> неопределено тогда
			countryCode 	  = "";
			PostalCode 		  = "";
			Region 			  = "";
			District 	 	  = "";
			City		 	  = "";
			Street 	  		  = "";
			StreetType 		  = "";
			Vlad 		 	  = "";
			House 	 		  = "";
			BlockType  		  = "";
			Dop_inf 	 	  = "";
			STR 		 	  = "";
			АдресСтр 	 	  = "";
			
			TerminalCode = выбТерминал.terminalCode;
			CountryCode	 = выбТерминал.CountryCode;
			PostalCode	 = выбТерминал.index;
			Region 		 = выбТерминал.regionName;
			City 		 = выбТерминал.cityName;
			Street	     = выбТерминал.street;
			StreetType	 = выбТерминал.streetAbbr;
			House	     = выбТерминал.houseNo;
					КонецЕсли;	
		ЭлементыФормы.TerminalCode.Доступность 			 = истина;
		
		ЭлементыФормы.флКурьерСТерминалом.Доступность    = ложь;
		ЭлементыФормы.countryCode.Доступность 	 		 = ложь;
		ЭлементыФормы.PostalCode.Доступность 		 	 = ложь;
		ЭлементыФормы.Region.Доступность 				 = ложь;
		ЭлементыФормы.District.Доступность 	 			 = ложь;
		ЭлементыФормы.City.Доступность		 	 		 = ложь;
		ЭлементыФормы.Street.Доступность 	  			 = ложь;
		ЭлементыФормы.StreetType.Доступность 			 = ложь;
		ЭлементыФормы.Vlad.Доступность 		 			 = ложь;
		ЭлементыФормы.House.Доступность 	 			 = ложь;
		ЭлементыФормы.BlockType.Доступность  			 = ложь;
		ЭлементыФормы.Dop_inf.Доступность 	 			 = ложь;
		ЭлементыФормы.STR.Доступность 		 			 = ложь;
		ЭлементыФормы.АдресСтр.Доступность 	 			 = ложь;
		//КонецЕсли;	
	Иначе
		ЭлементыФормы.TerminalCode.Доступность 			 = ложь;
		
		ЭлементыФормы.флКурьерСТерминалом.Доступность    = истина;
		ЭлементыФормы.countryCode.Доступность 			 = истина;
		ЭлементыФормы.PostalCode.Доступность 		 	 = истина;
		ЭлементыФормы.Region.Доступность 				 = истина;
		ЭлементыФормы.District.Доступность 	 			 = истина;
		ЭлементыФормы.City.Доступность		 	 		 = истина;
		ЭлементыФормы.Street.Доступность 	  			 = истина;
		ЭлементыФормы.StreetType.Доступность 			 = истина;
		ЭлементыФормы.Vlad.Доступность 		 			 = истина;
		ЭлементыФормы.House.Доступность 	 			 = истина;
		ЭлементыФормы.BlockType.Доступность  			 = истина;
		ЭлементыФормы.Dop_inf.Доступность 	 			 = истина;
		ЭлементыФормы.STR.Доступность 		 			 = истина;
		ЭлементыФормы.АдресСтр.Доступность 	 			 = истина;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьПВ()
	ффайл = ПолучитьИмяВременногоФайла("xml") ;
	xml=ПолучитьГеографию();
	ОтправитьЗапросWEBСервису("http://ws.dpd.ru:80/services/geography2",xml,,ффайл);
    РазобратьXML(ффайл);
КонецПроцедуры


Функция ОтправитьЗапросWEBСервису(URL,ТекстXML,Таймаут = 10000,Файл)
	Если ПустаяСтрока(ТекстXML) Тогда
		Возврат "";
	КонецЕсли;
	WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	WinHttp.SetTimeouts(Таймаут, Таймаут, Таймаут, Таймаут);
	WinHttp.Option(2,"utf-8");
	WinHttp.Open("POST",URL);
	WinHttp.setRequestHeader("Content-Type","text/xml; charset=utf-8");
	Попытка
		WinHttp.Send(ТекстXML);
		Если WinHttp.Status = 200 Тогда
			Ответ=WinHttp.ResponseStream;
			Текст = новый ТекстовыйДокумент;
			Текст.ДобавитьСтроку(WinHttp.ResponseText());
			Текст.Записать(Файл); 
			Возврат(WinHttp.ResponseText);
		Иначе
			Сообщить("Ошибка сервера: " + WinHttp.Status + " " + WinHttp.ResponseText + " " + WinHttp.StatusText, СтатусСообщения.Важное);
			Возврат("");
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
		Возврат("");
	КонецПопытки;
КонецФункции

Функция РазобратьXML(файл)
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(Файл);
	
	РезультатРазборки = Новый Массив;
	
	ПунктыXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	ПунктыВыдачи = ПунктыXDTO.Body.getTerminalsSelfDelivery2Response.return.terminal;
	
	Если ТипЗнч(ПунктыВыдачи)<>Тип("СписокXDTO") Тогда
		СписокXDTOПунктВыдачи = Новый Массив;
		СписокXDTOПунктВыдачи.Добавить(ПунктыXDTO.Body.getTerminalsSelfDelivery2Response.return.terminal);
	Иначе
		СписокXDTOПунктВыдачи = ПунктыВыдачи;
	КонецЕсли;
	
	Для Каждого XDTOПунктВыдачи из СписокXDTOПунктВыдачи цикл
		//Если XDTOПунктВыдачи.address.countryCode="RU" тогда
			нстр = тзТерминалы.Добавить();
			ЗаполнитьЗначенияСвойств(нстр,XDTOПунктВыдачи);
			нстр.regionName=XDTOПунктВыдачи.address.regionName;
			нстр.street=XDTOПунктВыдачи.address.street;
			попытка
				нстр.streetAbbr=XDTOПунктВыдачи.address.streetAbbr;
			исключение	
			конецпопытки;
			попытка
				нстр.houseNo=XDTOПунктВыдачи.address.houseNo;
			исключение	
			конецпопытки;
			нстр.cityName=XDTOПунктВыдачи.address.cityName;
			попытка
				нстр.index=XDTOПунктВыдачи.address.index;
            исключение	
			конецпопытки;
			попытка
				нстр.countryCode=XDTOПунктВыдачи.address.countryCode;
            исключение	
			конецпопытки;

		//КонецЕсли;
	КонецЦикла;
	тзТерминалы.Сортировать("cityName");	
КонецФункции

Функция ПолучитьГеографию()
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Envelope");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:soap", "http://schemas.xmlsoap.org/soap/envelope/");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:ns","http://dpd.ru/ws/geography/2012-04-17");
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Header");
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("soap:Body");
	ЗаписьXML.ЗаписатьНачалоЭлемента("ns1:getTerminalsSelfDelivery2");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:ns1","http://dpd.ru/ws/geography/2015-05-20");
	ЗаписьXML.ЗаписатьНачалоЭлемента("auth");
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientNumber");
	ЗаписьXML.ЗаписатьТекст("1007003132");
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьНачалоЭлемента("clientKey");
	ЗаписьXML.ЗаписатьТекст("89CF47BC79EDDE98122968E978B4176783A774BC");
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ТекстXML = ЗаписьXML.Закрыть();
	Возврат ТекстXML;
КонецФункции

Процедура ПриОткрытии()
	ЮрЛицо = "ЮрЛицо";
	ЮрФизЛицоПриИзменении(неопределено);
	ТарифТК = "PCL";
	//ТЧ = Владелец.РеквизитыЗаказаТК;
	//ContactFio = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"ContactFio");
	//ContactPhone = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"ContactPhone");
	//ContactPhone_Dop = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"ContactPhone_Dop");
	//ТарифТК = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"ТарифТК");
	//  КурьерСТерминалом = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"КурьерСТерминалом");
	//  TerminalOrAddress = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"TerminalOrAddress");
	//TerminalCode = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"TerminalCode");
	//PostalCode = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"PostalCode");
	//Region = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Region");
	//District = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"District");
	//City = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"City");
	//Street = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Street");
	//StreetType = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"StreetType");
	//Vlad = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Vlad");
	//House = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"House");
	//BlockType = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"BlockType");
	//STR = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"STR");
	//Dop_inf = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Dop_inf");
	//АдресСтр = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Адрес покупателя");
	Если СокрЛП(Владелец.Контрагент.НомерПлательщикаДПД)<>"" тогда
		ЭлементыФормы.КлиентПлатитКакЮрик.Доступность = истина;
	Иначе
		ЭлементыФормы.КлиентПлатитКакЮрик.Доступность = ложь;
	КонецЕсли;
	
	//Если КлиентПлатитКакЮрик тогда
		ЭлементыФормы.флДоставкаЗаНал.Доступность = истина;
	//иначе
	//	ЭлементыФормы.флДоставкаЗаНал.Доступность = ложь;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	попытка
		ТЧ = Владелец.РеквизитыЗаказаТК;
		ContactFio = Владелец.Контрагент.НаименованиеПолное;//РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"ContactFio").Значение;
		ContactPhone = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"ContactPhone").Значение;
		ContactPhone_Dop = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"ContactPhone_Dop").Значение;
		ТарифТК = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"ТарифТК").Значение;
		флКурьерСТерминалом = ?(РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"КурьерСТерминалом").Значение="Да",истина,ложь);
		ЭлементыФормы.ТерминалИлиАдресная.Значение = ?(РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"TerminalOrAddress").Значение="Да","ПунктВыдачи","Адресная");
		TerminalCode = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"TerminalCode").Значение;
		countryCode = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"countryCode").Значение;
		PostalCode = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"PostalCode").Значение;
		Region = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Region").Значение;
		District = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"District").Значение;
		City = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"City").Значение;
		Street = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Street").Значение;
		StreetType = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"StreetType").Значение;
		Vlad = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Vlad").Значение;
		House = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"House").Значение;
		BlockType = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"BlockType").Значение;
		STR = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"STR").Значение;
		Dop_inf = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Dop_inf").Значение;
		АдресСтр = РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Адрес покупателя").Значение;
		
		флКлиентПлатитЗаДоставку = ?(РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"КлиентПлатитЗаДоставку").Значение="Да",истина,ложь);
		
		КлиентПлатитКакЮрик = ?(СокрЛП(РаботаСDPD.ПолучитьЗначениеРеквизитаТК(ТЧ,"Номер плательщика в DPD").Значение)<>"",истина,ложь);
		
		ТерминалИлиАдреснаяПриИзменении(неопределено);
	исключение
	КонецПопытки;
КонецПроцедуры

Процедура ЮрФизЛицоПриИзменении(Элемент)
	Если ЮрФизЛицо = "ЮрЛицо" тогда
		ЭлементыФормы.НадписьФИО.Видимость = ложь;
		ЭлементыФормы.Фамилия.Видимость    = ложь;
		ЭлементыФормы.Имя.Видимость        = ложь;
		ЭлементыФормы.Отчество.Видимость   = ложь;
		Фамилия  = "";
		Имя      = "";
		Отчество = "";
		ContactFio = Владелец.Контрагент.НаименованиеПолное;
		ЭлементыФормы.ContactFio.Видимость = Истина;
	иначе
		ЭлементыФормы.НадписьФИО.Видимость = Истина;
		ЭлементыФормы.Фамилия.Видимость    = Истина;
		ЭлементыФормы.Имя.Видимость        = Истина;
		ЭлементыФормы.Отчество.Видимость   = Истина;
		
		ContactFio = "";
		ЭлементыФормы.ContactFio.Видимость = ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ContactPhoneНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Владелец.Контрагент) Тогда
		ФормаВыбора = РегистрыСведений.КонтактнаяИнформация.ПолучитьФормуСписка("ФормаСписка", ЭтаФорма);
		ФормаВыбора.РежимВыбора = Истина;
		
		ФормаВыбора.РегистрСведенийСписок.Отбор.Объект.Значение = Владелец.Контрагент;
		ФормаВыбора.РегистрСведенийСписок.Отбор.Объект.Использование = Истина;
		
		СтруктураОтбораТелефонов = Новый СписокЗначений;
		СтруктураОтбораТелефонов.Добавить(Перечисления.ТипыКонтактнойИнформации.Телефон);
		ФормаВыбора.РегистрСведенийСписок.Отбор.Тип.ВидСравнения = ВидСравнения.ВСписке;
		ФормаВыбора.РегистрСведенийСписок.Отбор.Тип.Значение = СтруктураОтбораТелефонов;
		ФормаВыбора.РегистрСведенийСписок.Отбор.Тип.Использование = Истина;
		ФормаВыбора.ЭлементыФормы.РегистрСведенийСписок.Колонки.Тип.Видимость = Ложь;
		
		Ответ = ФормаВыбора.ОткрытьМодально();
		
		Если Ответ <> Неопределено Тогда
			Если не ТелефонВалиден(СокрЛП(Ответ)) тогда
				Предупреждение("Телефон должен быть в формате +7 (ххх) ххх-хх-хх");
			КонецЕсли;

			Элемент.Значение = Ответ;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура флКлиентПлатитЗаДоставкуПриИзменении(Элемент)
	Если флКлиентПлатитЗаДоставку и СокрЛП(Владелец.Контрагент.НомерПлательщикаДПД)<>"" тогда
		ЭлементыФормы.КлиентПлатитКакЮрик.Доступность = истина;
	Иначе
		ЭлементыФормы.КлиентПлатитКакЮрик.Доступность = ложь;
		КлиентПлатитКакЮрик = ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ContactPhoneПриИзменении(Элемент)
	Если не ТелефонВалиден(СокрЛП(Элемент.Значение)) тогда
		Предупреждение("Телефон должен быть в формате +7 (ххх) ххх-хх-хх");
		Возврат;
	КонецЕсли;
КонецПроцедуры

Функция ТелефонВалиден(Тел)
	Если лев(СокрЛП(Тел),2)<>"+7" тогда
		Возврат ложь;
	КонецЕсли;
	Возврат истина;
КонецФункции

Процедура КлиентПлатитКакЮрикПриИзменении(Элемент)
	//Если КлиентПлатитКакЮрик тогда
	//	ЭлементыФормы.флДоставкаЗаНал.Доступность = истина;
	//иначе
	//	ЭлементыФормы.флДоставкаЗаНал.Доступность = ложь;
	//КонецЕсли;
КонецПроцедуры



тзТерминалы = новый ТаблицаЗначений;
тзТерминалы.Колонки.Добавить("terminalCode", Новый ОписаниеТипов("Строка"));
тзТерминалы.Колонки.Добавить("cityName", Новый ОписаниеТипов("Строка"));
тзТерминалы.Колонки.Добавить("terminalName", Новый ОписаниеТипов("Строка"));
тзТерминалы.Колонки.Добавить("regionName", Новый ОписаниеТипов("Строка"));
тзТерминалы.Колонки.Добавить("street", Новый ОписаниеТипов("Строка"));
тзТерминалы.Колонки.Добавить("streetAbbr", Новый ОписаниеТипов("Строка"));
тзТерминалы.Колонки.Добавить("houseNo", Новый ОписаниеТипов("Строка"));
тзТерминалы.Колонки.Добавить("index", Новый ОписаниеТипов("Строка"));
тзТерминалы.Колонки.Добавить("countryCode", Новый ОписаниеТипов("Строка"));



