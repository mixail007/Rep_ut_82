Перем ТаблицаЗаказов;

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	//Если (Константы.ОплатыРаспределяютМенеджеры.Получить()) Тогда
	//	ЭлементыФормы.ДокументСписок.Колонки.СуммаДолга.Видимость = Истина;
	//Иначе 
	//	ЭлементыФормы.ДокументСписок.Колонки.СуммаДолга.Видимость = Ложь;
	//КонецЕсли;
КонецПроцедуры



Процедура ДокументСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Вставить содержимое обработчика.
	
	//Если (Константы.ОплатыРаспределяютМенеджеры.Получить()) Тогда
	//	
	//	ТекущаяСтрока = ДанныеСтроки;
	//	ОформлениеСтроки.Ячейки.СуммаДолга.Значение  = ТекущийДолг(ТекущаяСтрока.Ссылка.ДоговорКонтрагента, ТекущаяСтрока.Ссылка, Неопределено);
	//	Если (ОформлениеСтроки.Ячейки.СуммаДолга.Значение<>неопределено) и (ОформлениеСтроки.Ячейки.СуммаДолга.Значение<>0) Тогда 
	//		ОформлениеСтроки.ЦветФона = WebЦвета.Желтый;
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
//	УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.ДокументСписок);//+++ 03.10.2013
 	//+++( 08.10.2013 - отбор по подразделению ВСЕГДА!
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		Если Отбор.Найти("Подразделение") = Неопределено Тогда 
			Отбор.Добавить("Подразделение");
		КонецЕсли;
		Отбор["Подразделение"].Использование = Истина;
		Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
		Отбор["Подразделение"].Значение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
		ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь;
	КонецЕсли;
	//+++)

	    ДатаНачалаПериода=ДобавитьМесяц(НачалоМесяца(ТекущаяДата()),-12);
	    Отбор.Дата.видСравнения = ВидСравнения.Интервал;
		Отбор.Дата.значениеС  = ДатаНачалаПериода;
		Отбор.Дата.значениеПо = КонецДня(ТекущаяДата());
  		Отбор.Дата.Использование = Истина;

	
ЭлементыФормы.ДокументСписок.НастройкаОтбора["ДокументыПоДоговоруКонтрагента"].Доступность =  РольДоступна("ПолныеПрава");

Если ЗначениеЗаполнено( Отбор.ДокументыПоДоговоруКонтрагента.Значение) Тогда
	ПеречитатьТаблицуЗаказов(Отбор.ДокументыПоДоговоруКонтрагента.Значение);
КонецЕсли;

КонецПроцедуры


//+++ февраль 2012
//Процедура - обработчик внешнего события.
//
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Перем СписокДок;

	Если Не(ВводДоступен()) Тогда
		Возврат;
	КонецЕсли;

	Если глТорговоеОборудование <> Неопределено Тогда
		Если Событие = "BarCodeValue" Тогда
			Если глТорговоеОборудование.ПолучитьВсеДокументыПоШтрихКоду(Данные, СписокДок) Тогда
				Если СписокДок.Количество() = 1 Тогда
					ОткрытьЗначение(СписокДок[0].Ссылка);
				ИначеЕсли СписокДок.Количество() > 1 Тогда
					СтрокаДок = СписокДок.ВыбратьСтроку("Выберите один из найденных документов.");
					Если СтрокаДок<>Неопределено Тогда
						ОткрытьЗначение(СтрокаДок.Ссылка);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			глТорговоеОборудование.СканерПосылкаДанных(1);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)

Если ЗначениеНеЗаполнено( Отбор.ДокументыПоДоговоруКонтрагента.Значение) Тогда
	Возврат;
КонецЕсли;	

Для Каждого Строка Из ОформленияСтрок Цикл
	
	НайдСтрока=ТаблицаЗаказов.Найти(Строка.ДанныеСтроки.Ссылка,"ЗаказПокупателя");
	Если НайдСтрока=Неопределено Тогда
		  Продолжить;
	Иначе
		Если НайдСтрока.СуммаУпрОстаток<>0  Тогда // заказ полностью отгружен
			Строка.ячейки.СуммаДолга.ОтображатьТекст=Истина;
			Строка.ячейки.СуммаДолга.Текст=Строка(НайдСтрока.СуммаУпрОстаток);
			Строка.ЦветФона = WebЦвета.Желтый;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(НайдСтрока.ДокументПродажи) Тогда
			Строка.ячейки.ДокументПродажи.ОтображатьТекст=Истина;
			Строка.ячейки.ДокументПродажи.Текст=Строка(НайдСтрока.ДокументПродажи);
		КонецЕсли;	
			
	КонецЕсли;	
		
 КонецЦикла;
	
	
КонецПроцедуры

Процедура ПеречитатьТаблицуЗаказов (ДоговорКонтрагента)
	Запрос = Новый Запрос;
	
	Запрос.Текст ="ВЫБРАТЬ
	|	ЕстьNULL(ПродажиОбороты.ЗаказПокупателя,ВзаиморасчетыСКонтрагентамиОстатки.Сделка) ЗаказПокупателя,
	|	ЕстьNULL(ПродажиОбороты.ДокументПродажи.Номер,"""") ДокументПродажи,
	|	ЕстьNULL(ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток,0) СуммаУпрОстаток
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(, , , ДоговорКонтрагента = &ДоговорКонтрагента) КАК ПродажиОбороты
	|	ПОЛНОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ВзаиморасчетыСКонтрагентамиОстатки
	|	ПО  ПродажиОбороты.ЗаказПокупателя=ВзаиморасчетыСКонтрагентамиОстатки.Сделка
	|	
	|	УПОРЯДОЧИТЬ ПО ЗаказПокупателя.Дата" ;

Запрос.УстановитьПараметр("ДоговорКонтрагента",ДоговорКонтрагента);

ТаблицаЗаказов=Запрос.Выполнить().Выгрузить();

//Возврат ТаблицаЗаказов;
	
КонецПроцедуры	



