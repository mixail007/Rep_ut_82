
Процедура ОбработкаПроведения(Отказ, Режим)

	Если ЕстьУжеПроведенныйДокумент(Дата) тогда
		Отказ = Истина;
		#Если Клиент тогда
			Сообщить("Уже есть документ Начисление бонусов по номенклатуре за выбранный период!", СтатусСообщения.Внимание);
		#КонецЕсли	
	КонецЕсли;
	
	// регистр БонусыПоТоварам 
	Если НЕ Отказ тогда
		Движения.БонусыПоТоварам.Записывать = Истина;
		Движения.БонусыПоТоварам.Очистить();
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.БонусыПоТоварам.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, ТекСтрокаТовары);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

функция ЕстьУжеПроведенныйДокумент(Дата1)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НачислениеБонусовНаТовары.Ссылка
	|ИЗ
	|	Документ.НачислениеБонусовНаТовары КАК НачислениеБонусовНаТовары
	|ГДЕ
	|	НачислениеБонусовНаТовары.Дата>=&ДатаНач
	|	И НачислениеБонусовНаТовары.Дата<=&ДатаКон
	|	И НачислениеБонусовНаТовары.Проведен
	|	И НачислениеБонусовНаТовары.ссылка<>&ЭтотДокументСсылка";
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Дата1) );
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Дата1) );
	Запрос.УстановитьПараметр("ЭтотДокументСсылка",ссылка);
	Результат = Запрос.Выполнить();
	возврат НЕ результат.Пустой();	
КонецФункции	

процедура ЗаполнитьБонусы(флДиски=Истина) Экспорт
		
	// ТОЛЬКО по товарам с фикс.ценой>0 на дату документа
	Если Дата <> НачалоМесяца(Дата) тогда
		Дата = НачалоМесяца(Дата);
	КонецЕсли;	
	таблТов = ПолучитьТаблицуТоваровСФиксЦеной(Дата, флДиски);
	масТов  = таблТов.ВыгрузитьКолонку("Номенклатура"); //массив
	
	КлиентМРИЦ  = справочники.Контрагенты.НайтиПоКоду("11011");
	таблЦенМРИЦ = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(КлиентМРИЦ, масТов);
	
	Товары.Очистить();
	Для i=0 по таблТов.Количество()-1 цикл
		стр0 = таблТов[i];
		стр1 = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(стр1, стр0);
		стр1.ЦенаМриц = таблЦенМРИЦ.Найти(стр0.Номенклатура,"Номенклатура").МинимальнаяЦена;
		стр1.Бонус 	  = (стр1.ЦенаМриц - стр1.ФиксЦена) * стр0.Количество;
	КонецЦикла;

КонецПроцедуры

//04.10.2017 - для учёта бонусов ИМ
функция ПолучитьТаблицуТоваровСФиксЦеной(Дата1, флДиски)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПродажиОбороты.Период КАК Период,
	               |	ПродажиОбороты.Номенклатура,
	               |	МАКСИМУМ(ЦеныКлиентаСрезПоследних.Цена) КАК ФиксЦена,
	               |	СУММА(ПродажиОбороты.КоличествоОборот) КАК Количество
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, День, 
				   |			ДоговорКонтрагента.ОтветственноеЛицо.НаправлениеПродаж = &НаправлениеПродажИМ
				   |//флДиски   И Номенклатура.ВидТовара = Значение(Перечисление.ВидыТоваров.Диски)
				   |		) КАК ПродажиОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныКлиента.СрезПоследних( &ДатаКон,
	               |				Контрагент = &КонтрИМ
	               |//флДиски   И Номенклатура.ВидТовара = Значение(Перечисление.ВидыТоваров.Диски)
				   |					И Цена > 0) КАК ЦеныКлиентаСрезПоследних
	               |		ПО ПродажиОбороты.Номенклатура = ЦеныКлиентаСрезПоследних.Номенклатура
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПродажиОбороты.Период,
	               |	ПродажиОбороты.Номенклатура
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(ПродажиОбороты.КоличествоОборот) > 0
	               |	И МАКСИМУМ(ЦеныКлиентаСрезПоследних.Цена) > 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период";
	Если флДиски тогда
	Запрос.Текст = стрЗаменить(Запрос.Текст ,"//флДиски","");				   
	КонецЕсли;				   
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(НачалоМесяца(Дата1)-1) );
	Запрос.УстановитьПараметр("ДатаКон", НачалоМесяца(Дата1)-1 );
	Запрос.УстановитьПараметр("КонтрИМ", справочники.Контрагенты.НайтиПоКоду("94291")  ); //  для ценообразования KOLESATYT
	Запрос.УстановитьПараметр("НаправлениеПродажИМ", справочники.НаправленияПродаж.НайтиПоКоду(16) ); //18. "Колеса ТУТ"
	Результат   = Запрос.Выполнить();
	таблФиксЦен = Результат.Выгрузить();
	Возврат таблФиксЦен;
КонецФункции

