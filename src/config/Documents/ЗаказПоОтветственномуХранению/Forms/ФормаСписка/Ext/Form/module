перем ТаблицаЗаказов;

процедура ПолучитьЗаказы(СписокНомДок, Дата0='20160901', Дата1='20160902')
	
	Запрос = Новый Запрос;
Запрос.Текст= "ВЫБРАТЬ
              |	Зак.Ссылка,
              |	Зак.Контрагент,
              |	Зак.ДоговорКонтрагента
              |ПОМЕСТИТЬ ВТ_Зак
              |ИЗ
              |	Документ.ЗаказПоОтветственномуХранению КАК Зак
              |ГДЕ
              |	Зак.Дата МЕЖДУ &Дата0 И &Дата1
              |	И Зак.Номер В (&СписокНомДок)
              |;
              |
              |////////////////////////////////////////////////////////////////////////////////
              |ВЫБРАТЬ
              |	Б.Ссылка,
              |	СУММА(Б.КоличествоОстаток) КАК КоличествоОстаток,
              |	СУММА(Б.КоличествоОтгружено) КАК КоличествоОтгружено
              |ИЗ
              |	(ВЫБРАТЬ
              |		ЗаказПоОтветственномуХранениюТовары.СсылкаНомер КАК Ссылка,
              |		ЗаказПоОтветственномуХранениюТовары.Номенклатура КАК Номенклатура,
              |		ВЫБОР
              |			КОГДА ЗаказПоОтветственномуХранениюТовары.Удален
              |				ТОГДА 0
              |			ИНАЧЕ ЕСТЬNULL(ЗаказПоОтветственномуХранениюТовары.Количество, 0) - ЕСТЬNULL(ОперацияПоОтветственномуХранениюТовары.Количество, 0)
              |		КОНЕЦ КАК КоличествоОстаток,
              |		ЕСТЬNULL(ОперацияПоОтветственномуХранениюТовары.Количество, 0) КАК КоличествоОтгружено
              |	ИЗ
              |		(ВЫБРАТЬ
              |			ЗаказПоОтветственномуХранениюТовары.Ссылка КАК Ссылка,
              |			ЗаказПоОтветственномуХранениюТовары.Ссылка.Номер КАК СсылкаНомер,
              |			ЗаказПоОтветственномуХранениюТовары.Ссылка.ПометкаУдаления КАК Удален,
              |			ЗаказПоОтветственномуХранениюТовары.Номенклатура КАК Номенклатура,
              |			ЗаказПоОтветственномуХранениюТовары.Количество КАК Количество
              |		ИЗ
              |			Документ.ЗаказПоОтветственномуХранению.Товары КАК ЗаказПоОтветственномуХранениюТовары
              |		ГДЕ
              |			ЗаказПоОтветственномуХранениюТовары.Ссылка В (ВЫБРАТЬ ВТ_зак.Ссылка ИЗ ВТ_зак)) КАК ЗаказПоОтветственномуХранениюТовары
              |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
              |				ОперацияПоОтветственномуХранениюТовары.Регистратор.ДокументОснование КАК ДокументОснование,
              |				ОперацияПоОтветственномуХранениюТовары.Номенклатура КАК Номенклатура,
              |				СУММА(ВЫБОР
              |						КОГДА ОперацияПоОтветственномуХранениюТовары.КоличествоОборот < 0
              |							ТОГДА -ОперацияПоОтветственномуХранениюТовары.КоличествоОборот
              |						ИНАЧЕ ОперацияПоОтветственномуХранениюТовары.КоличествоОборот
              |					КОНЕЦ) КАК Количество
              |			ИЗ
              |				РегистрНакопления.ТоварыНаОтветственномХранении.Обороты(
              |						,
              |						,
              |						Регистратор,
              |						Контрагент В
              |								(ВЫБРАТЬ
              |									ВТ_Зак.Контрагент
              |								ИЗ
              |									ВТ_Зак)
              |							И ДоговорКонтрагента В
              |								(ВЫБРАТЬ
              |									ВТ_Зак.ДоговорКонтрагента
              |								ИЗ
              |									ВТ_Зак)) КАК ОперацияПоОтветственномуХранениюТовары
              |			ГДЕ
              |				ОперацияПоОтветственномуХранениюТовары.Регистратор.ДокументОснование В
              |						(ВЫБРАТЬ
              |							ВТ_зак.Ссылка
              |						ИЗ
              |							ВТ_зак)
              |			
              |			СГРУППИРОВАТЬ ПО
              |				ОперацияПоОтветственномуХранениюТовары.Регистратор.ДокументОснование,
              |				ОперацияПоОтветственномуХранениюТовары.Номенклатура) КАК ОперацияПоОтветственномуХранениюТовары
              |			ПО ЗаказПоОтветственномуХранениюТовары.Ссылка = ОперацияПоОтветственномуХранениюТовары.ДокументОснование
              |				И ЗаказПоОтветственномуХранениюТовары.Номенклатура = ОперацияПоОтветственномуХранениюТовары.Номенклатура) КАК Б
              |
              |СГРУППИРОВАТЬ ПО
              |	Б.Ссылка
              |;
              |
              |////////////////////////////////////////////////////////////////////////////////
              |УНИЧТОЖИТЬ ВТ_Зак"  ;

Запрос.УстановитьПараметр("СписокНомДок",СписокНомДок);
Запрос.УстановитьПараметр("Дата0",Дата0 );
Запрос.УстановитьПараметр("Дата1",Дата1 );

рез = Запрос.Выполнить();
ТаблицаЗаказов = рез.Выгрузить();

КонецПроцедуры

Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
		
списокДокументов = новый СписокЗначений;
датаМин = ТекущаяДата();
датаМакс = '20100101';
Для Каждого Строка Из ОформленияСтрок Цикл
	списокДокументов.Добавить(Строка.ДанныеСтроки.Номер);
	если Строка.ДанныеСтроки.Дата<датаМин тогда
		датаМин = Строка.ДанныеСтроки.Дата;
	КонецЕсли;	
	если Строка.ДанныеСтроки.Дата>датаМакс тогда
		датаМакс = Строка.ДанныеСтроки.Дата;
	КонецЕсли;	
КонецЦикла;

ПолучитьЗаказы(списокДокументов, датаМин, датаМакс); //ТаблицаЗаказов

Для Каждого Строка Из ОформленияСтрок Цикл
	
	НайдСтрока = ТаблицаЗаказов.Найти(Строка.ДанныеСтроки.Номер, "Ссылка");
	Если НайдСтрока=Неопределено Тогда
		  Продолжить;
	Иначе
		Если НайдСтрока.КоличествоОстаток=0 Тогда // заказ полностью отгружен
			Строка.ЦветФона= WebЦвета.LightGray;
		иначеЕсли НайдСтрока.КоличествоОстаток<0 тогда
			Строка.ЦветФона= WebЦвета.СветлоРозовый;
		КонецЕсли;
		
	    Если НайдСтрока.КоличествоОтгружено>0  Тогда
			Строка.ЦветТекста= WebЦвета.Синий;
		иначеЕсли НайдСтрока.КоличествоОтгружено<0  Тогда
			Строка.ЦветТекста= WebЦвета.Красный;
		КонецЕсли;
	КонецЕсли;	
		
 КонецЦикла;

КонецПроцедуры

Процедура ПриОткрытии()
	Отбор.Дата.ЗначениеС = ДобавитьМесяц(НачалоМесяца(ТекущаяДата()), -1);
	Отбор.Дата.ЗначениеПо = КонецДня(ТекущаяДата());
	
		   //+++( 02.09.2013 - отбор по подразделению ВСЕГДА для Питера!
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		Если Отбор.Найти("Подразделение") = Неопределено Тогда 
			Отбор.Добавить("Подразделение");
		КонецЕсли;
		Отбор["Подразделение"].Использование = Истина;
		Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
		Отбор["Подразделение"].Значение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
		ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		Возврат; //+++ 
	КонецЕсли;
	//+++)

КонецПроцедуры

//+++ февраль 2012
//Процедура - обработчик внешнего события.
//
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Перем СписокДок;

	Если Не(ВводДоступен()) Тогда
		Возврат;
	КонецЕсли;

	Если глТорговоеОборудование <> Неопределено Тогда
		Если Событие = "BarCodeValue" Тогда
			Если глТорговоеОборудование.ПолучитьВсеДокументыПоШтрихКоду(Данные, СписокДок) Тогда
				Если СписокДок.Количество() = 1 Тогда
					ОткрытьЗначение(СписокДок[0].Ссылка);
				ИначеЕсли СписокДок.Количество() > 1 Тогда
					СтрокаДок = СписокДок.ВыбратьСтроку("Выберите один из найденных документов.");
					Если СтрокаДок<>Неопределено Тогда
						ОткрытьЗначение(СтрокаДок.Ссылка);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			глТорговоеОборудование.СканерПосылкаДанных(1);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

