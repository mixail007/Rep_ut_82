
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);

	ПроверитьПовторяющиесяТовары(Отказ); //+++ 16.10.2012  не дадим провести этот БРЕД!
	
КонецПроцедуры

//+++ проверка дублей строк!    16.10.2012
Процедура ПроверитьПовторяющиесяТовары(Отказ)
	Запрос=Новый Запрос;
	Запрос.Текст=" ВЫБРАТЬ
	|	ЗаказПоОТХТовары.Номенклатура Номенклатура, Количество(*) КоличествоСтрок
	|ИЗ Документ.ЗаказПоОтветственномуХранению.Товары КАК ЗаказПоОТХТовары
	|ГДЕ ЗаказПоОТХТовары.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО 	ЗаказПоОТХТовары.Номенклатура
	|ИМЕЮЩИЕ 	Количество(*)>1" ;
	
Запрос.УстановитьПараметр("Ссылка",Ссылка);
Выборка=Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл
	Если Выборка.КоличествоСтрок>1 тогда
		Отказ=Истина;
		Сообщить("Товар "+Строка(Выборка.Номенклатура.Код)+", " +Строка(Выборка.Номенклатура) +" повторяется "+строка(Выборка.КоличествоСтрок)+" раза.",СтатусСообщения.Внимание);
	КонецЕсли;	
КонецЦикла;	
КонецПроцедуры	

Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	//+++(25.12.2014 только для IT-отдела - можно закрывать старые заказы Без договора!
	Если РольДоступна("ПравоЗавершенияРаботыПользователей") тогда 
		СтруктураОбязательныхПолей = Новый Структура("Организация, Контрагент");
	Иначе
	//как было	
		СтруктураОбязательныхПолей = Новый Структура("Организация, Контрагент, ДоговорКонтрагента");
	КонецЕсли;
    //+++)
	
	// Теперь позовем общую процедуру проверки.
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);	
	
КонецПроцедуры

Функция ПолучитьСписокПечатныхФорм() Экспорт

	СписокМакетов = Новый СписокЗначений;
	#Если Клиент тогда
		ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
	#КонецЕсли	
	Возврат СписокМакетов;

КонецФункции // ПолучитьСписокПечатныхФорм()

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если Не Проведен Тогда
		#Если Клиент тогда
			Предупреждение("Документ можно распечатать только после его проведения!");
		#КонецЕсли	
		Возврат;
	ИначеЕсли Не РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		#Если Клиент тогда
			Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		#КонецЕсли	
		Возврат;
	КонецЕсли;

	#Если Клиент тогда
	Если Не ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
   	#КонецЕсли	
	
	// Получить экземпляр документа на печать
	Если ТипЗнч(ИмяМакета) = Тип("СправочникСсылка.ДополнительныеПечатныеФормы") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = ИмяМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			#Если Клиент тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			#КонецЕсли	
			Возврат;
		КонецЕсли;
		#Если Клиент тогда
			ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
			ДвоичныеДанные.Записать(ИмяФайла);
			Обработка = ВнешниеОбработки.Создать(ИмяФайла);
			Обработка.СсылкаНаОбъект = Ссылка;
			ТабДокумент = Обработка.Печать();
	    #КонецЕсли
	КонецЕсли; 

	#Если Клиент тогда
		НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()));
    #КонецЕсли
	
КонецПроцедуры // Печать

Процедура ОбработкаЗаполнения(Основание)
	
	Если Основание  = Неопределено или ТипЗнч(Основание) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
//+++ 		
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		
		ВидПоступления = Перечисления.ВидыОперацийПоОтветственномуХранению.Списание;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоОтветственномуХранению") 
		  или ТипЗнч(Основание) = Тип("ДокументСсылка.ОперацияПоОтветственномуХранению") Тогда
		  
		Если Основание.ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.Поступление тогда
			ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.Списание;
		Иначе // на основании списания
			//Предупреждение("На основании документа Списания - нельзя делать других документов!");
			//Возврат;
			ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.Списание;
		КонецЕсли;
		
	Иначе//Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		ВидПоступления = Перечисления.ВидыОперацийПоОтветственномуХранению.Поступление;
			
	КонецЕсли;
	
	ДокументОснование = Основание.ссылка;// для структуры подчиненности	
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоОтветственномуХранению") Тогда 
		ВыборкаТЗ = ПолучитьВыборкуТоваровОТХ(Основание);
		для i=0 по ВыборкаТЗ.Количество()-1 Цикл
			выборка = ВыборкаТЗ[i];
			Если выборка.Количество<=0 Тогда 
				продолжить; 
			КонецЕсли;	
			СтрокаТоварыОтвХранение=Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТоварыОтвХранение, выборка);	
			СтрокаТоварыОтвХранение.Цена = СтрокаТоварыОтвХранение.Сумма/СтрокаТоварыОтвХранение.Количество; // больше 0
		КонецЦикла;	
	Иначе
		
		Для Каждого стр1 из Основание.Товары Цикл
		СтрокаТоварыОтвХранение=Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоварыОтвХранение, стр1);	
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры



функция ПолучитьВыборкуТоваровОТХ(Основание)
	Запрос1 = Новый Запрос;
	Запрос1.Текст = "ВЫБРАТЬ
	                |	запрос1.Номенклатура,
	                |	запрос1.КоличествоП - запрос1.КоличествоМ КАК Количество,
	                |	запрос1.СуммаП - запрос1.СуммаМ КАК Сумма
	                |ИЗ
	                |	(ВЫБРАТЬ
	                |		СУММА(ЕСТЬNULL(ТоварыНаОтветственномХраненииОбороты.КоличествоПриход, 0)) КАК КоличествоП,
	                |		СУММА(ЕСТЬNULL(ТоварыНаОтветственномХраненииОбороты.СтоимостьПриход, 0)) КАК СуммаП,
	                |		СУММА(ЕСТЬNULL(ТоварыНаОтветственномХраненииОбороты.КоличествоРасход, 0)) КАК КоличествоМ,
	                |		СУММА(ЕСТЬNULL(ТоварыНаОтветственномХраненииОбороты.СтоимостьРасход, 0)) КАК СуммаМ,
	                |		ТоварыНаОтветственномХраненииОбороты.Номенклатура КАК Номенклатура
	                |	ИЗ
	                |		РегистрНакопления.ТоварыНаОтветственномХранении.Обороты(&НачДата,&КонДата, Регистратор,
					|				Контрагент = &Контрагент
					|					И ДоговорКонтрагента = &ДоговорКонтрагента
					|					И Номенклатура В
					|						(ВЫБРАТЬ
					|							выб1.Номенклатура
					|						ИЗ
					|							Документ.ЗаказПоОтветственномуХранению.Товары КАК выб1
					|						ГДЕ
					|							выб1.Ссылка = &Ссылка)
					|		) КАК ТоварыНаОтветственномХраненииОбороты
	                |	ГДЕ (ТоварыНаОтветственномХраненииОбороты.Регистратор.ДокументОснование<>Неопределено) 
					|		И (ТоварыНаОтветственномХраненииОбороты.Регистратор.ДокументОснование<>&Пустая) 
	                |		И (ТоварыНаОтветственномХраненииОбороты.Регистратор.ДокументОснование = &Ссылка
	                |				ИЛИ ТоварыНаОтветственномХраненииОбороты.Регистратор.ДокументОснование.ДокументОснование = &Ссылка)
	                |	
	                |	СГРУППИРОВАТЬ ПО
	                |		ТоварыНаОтветственномХраненииОбороты.Номенклатура) КАК запрос1";
				   
	Запрос1.УстановитьПараметр("Ссылка",Основание);
	//  только обороты за период с даты заказа по :
	Запрос1.УстановитьПараметр("НачДата",НачалоДня(Основание.Дата) );
	Запрос1.УстановитьПараметр("КонДата",КонецДня(ТекущаяДата())   );
	Запрос1.УстановитьПараметр("Контрагент",Основание.Контрагент);
	Запрос1.УстановитьПараметр("ДоговорКонтрагента", Основание.ДоговорКонтрагента);
	Запрос1.УстановитьПараметр("Пустая", документы.ЗаказПоОтветственномуХранению.ПустаяСсылка());
	
	Результат1 = Запрос1.Выполнить();
	ВыборкаТЗ = Результат1.Выгрузить();
	
	возврат выборкаТЗ;
	
КонецФункции	

