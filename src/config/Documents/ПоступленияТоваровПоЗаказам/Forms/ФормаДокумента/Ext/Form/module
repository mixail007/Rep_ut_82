Перем мПечатнаяФормаПоУмолчанию;

Процедура КоманднаяПанель1НайтиЗаказы(Кнопка)
	
	Если не ЗначениеЗаполнено(Контрагент) Тогда
		Сообщить("Укажите контрагента!!!");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый запрос;
	запрос.УстановитьПараметр("дата1",НачалоДня(ДатаС));
	запрос.УстановитьПараметр("дата2",КонецДня(ДатаПо));
	запрос.УстановитьПараметр("Контрагент",Контрагент);
	запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПоставщику.Ссылка КАК Заказ,
	               |	ПоступлениеТоваровУслуг.Ссылка
	               |ИЗ
	               |	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |		ПО ЗаказПоставщику.Ссылка = ПоступлениеТоваровУслуг.Сделка
	               |ГДЕ
	               |	ЗаказПоставщику.Дата МЕЖДУ &дата1 И &дата2
	               |	И ЗаказПоставщику.Контрагент = &Контрагент
	               |	И ЗаказПоставщику.Номер ПОДОБНО ""%ТК%""
	               |	И (ПоступлениеТоваровУслуг.Ссылка ЕСТЬ NULL 
	               |			ИЛИ ПоступлениеТоваровУслуг.ПометкаУдаления)
	               |	И ЗаказПоставщику.Проведен = ИСТИНА";
	Рез = запрос.Выполнить().Выгрузить();
	
	Заказы.Загрузить(Рез);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	если ЭтоНовый() тогда
		
		Организация = Справочники.Организации.НайтиПоКоду("00001");
	КонецЕсли;
		
	если глТекущийПользователь = Ответственный или РольДоступна("ПолныеПрава") Тогда
		
		//ЭлементыФормы.ТабличноеПолеЗаказы.Колонки.Заказ.ТолькоПросмотр = ПодготовленДляСклада;
				
	Иначе
		
		ЭлементыФормы.ТабличноеПолеЗаказы.Доступность = не ПодготовленДляСклада;
		
	КонецЕсли;
	
	ЭлементыФормы.КоманднаяПанель1.Доступность = не ПодготовленДляСклада;
	
	ЭлементыФормы.СоздатьДокументы.Доступность = (Товары.итог("КоличествоПлан")  =  Товары.итог("КоличествоФакт")) и не ДокументыСозданы;
	
		// Заполнить подменю выбора печатных форм.
	СписокМакетов = ЭтотОбъект.ПолучитьСписокПечатныхФорм();
	УстановитьПодменюВыбораПечатнойФормы(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати,
	                                       СписокМакетов,
	                                       Новый Действие("КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы"));
	
	// Установить печатную форму по умолчанию.
	УстановитьКнопкуПечати(ЭтотОбъект.Метаданные().Имя, ЭтаФорма, СписокМакетов, мПечатнаяФормаПоУмолчанию);
	
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьТовары(Кнопка)
	
	массив = Заказы.ВыгрузитьКолонку("Заказ");
	
	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(массив);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Список",Список);
	запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПоставщикуТовары.Номенклатура,
	               |	СУММА(ЗаказПоставщикуТовары.Количество) КАК КоличествоПлан,
	               |	СУММА(ЗаказПоставщикуТовары.Количество) КАК КоличествоФакт
	               |ИЗ
	               |	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	               |ГДЕ
	               |	ЗаказПоставщикуТовары.Ссылка В(&список)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказПоставщикуТовары.Номенклатура";
				   
	рез = запрос.Выполнить().Выгрузить();
	
	Товары.Загрузить(Рез);
	
	если глТекущийПользователь = Ответственный или РольДоступна("ПолныеПрава") Тогда
		
		//ЭлементыФормы.ТабличноеПолеЗаказы.Колонки.Заказ.ТолькоПросмотр = истина;
				
	Иначе
		
		ЭлементыФормы.ТабличноеПолеЗаказы.Доступность = Ложь;
		
	КонецЕсли;
	
	ЭлементыФормы.КоманднаяПанель1.Доступность = ложь;
	
	ПодготовленДляСклада = истина;
	
	ЭлементыФормы.ПанельТовары.ТекущаяСтраница = ЭлементыФормы.ПанельТовары.Страницы.Товары;
	
КонецПроцедуры

Процедура КоманднаяПанель2Очистить(Кнопка)
	
	Товары.Очистить();
	
	ПодготовленДляСклада = Ложь;
	
	если глТекущийПользователь = Ответственный или РольДоступна("ПолныеПрава") Тогда
		
		//ЭлементыФормы.ТабличноеПолеЗаказы.Колонки.Заказ.ТолькоПросмотр = Ложь;
			
	Иначе
			
		ЭлементыФормы.ТабличноеПолеЗаказы.Доступность = истина;
		
	КонецЕсли;
	
	ЭлементыФормы.КоманднаяПанель1.Доступность = истина;
	
		
КонецПроцедуры

Процедура ТабличноеПолеТоварыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки из ОформленияСтрок Цикл
		
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		
		ПоказатьКодАртикул(ЭлементыФормы.Товары.Колонки, ОформлениеСтроки.Ячейки, ДанныеСтроки.Номенклатура);
		
	КонецЦикла;
	
	ЭлементыФормы.СоздатьДокументы.Доступность = (Товары.итог("КоличествоПлан")  =  Товары.итог("КоличествоФакт")) и не ДокументыСозданы;

КонецПроцедуры

Процедура КоманднаяПанель2ПерезаполнитьПлан(Кнопка)
	
	массив = Заказы.ВыгрузитьКолонку("Заказ");
	
	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(массив);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Список",Список);
	запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПоставщикуТовары.Номенклатура,
	               |	СУММА(ЗаказПоставщикуТовары.Количество) КАК КоличествоПлан
	               |ИЗ
	               |	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	               |ГДЕ
	               |	ЗаказПоставщикуТовары.Ссылка В(&список)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказПоставщикуТовары.Номенклатура";
				   
	рез = запрос.Выполнить().Выгрузить();
	
	для каждого стр из рез Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура",стр.Номенклатура);
		
		Строки = Товары.НайтиСтроки(отбор);
		
		КоличествоПлан = стр.КоличествоПлан;
		
		КоличествоСтрок = Строки.Количество();
		
		для каждого стр из Строки Цикл
			
			если КоличествоПлан >= стр.КоличествоФакт и КоличествоСтрок > 1 тогда
				
				Стр.КоличествоПлан = стр.КоличествоФакт;
				
				КоличествоПлан = КоличествоПлан - стр.КоличествоФакт;
				
			иначеесли КоличествоПлан >= стр.КоличествоФакт и КоличествоСтрок = 1 тогда
				
			    Стр.КоличествоПлан = КоличествоПлан;
				
				КоличествоПлан = 0;
				
			иначеесли КоличествоПлан < стр.КоличествоФакт тогда
				
				Стр.КоличествоПлан = КоличествоПлан;
				
				КоличествоПлан = 0;
				
			КонецЕсли;
			
			КоличествоСтрок = КоличествоСтрок - 1;
				
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

Процедура СоздатьДокументыНажатие(Элемент)
	
	ТоварыТЗ = Товары.Выгрузить();
	
	ДокументыСозданы = Истина;
	
	для каждого стр11 из Заказы Цикл
		
		НовДок = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
		НовДок.Заполнить(стр11.Заказ);
		НовДок.Дата = ТекущаяДата();
		НовДок.УстановитьНовыйНомер("ТК");
		
		ТоварыСоСкладами = НовДок.Товары.Выгрузить();
		ТоварыСоСкладами.Очистить();
		
		ТоварыСАдресами = НовДок.ТоварыАдресноеХранение.Выгрузить();
		ТоварыСАдресами.Очистить();
		
		для каждого стр из НовДок.Товары Цикл
			
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",стр.Номенклатура);
			
			Строки = ТоварыТЗ.НайтиСтроки(отбор);
			
			КоличествоПлан = стр.Количество;
			
			КоличествоСтрок = Строки.Количество();
			
			для каждого стрТовар из Строки Цикл
				
				если КоличествоПлан > стрТовар.КоличествоФакт и КоличествоПлан <> 0 и стрТовар.КоличествоФакт <> 0 тогда
					
					ОтборСтр = Новый Структура;
					ОтборСтр.Вставить("Номенклатура",стр.Номенклатура);
					ОтборСтр.Вставить("Склад",стрТовар.Склад);
					
					СтрокиНеПовторять = ТоварыСоСкладами.НайтиСтроки(ОтборСтр);

					если СтрокиНеПовторять.Количество() = 0 Тогда
						
						НовТовар = ТоварыСоСкладами.Добавить();
						
						ЗаполнитьЗначенияСвойств(НовТовар,стр);
						
						НовТовар.Количество = стрТовар.КоличествоФакт;
						
						НовТовар.Склад = стрТовар.Склад;
						
					иначе
						
						НовТовар = СтрокиНеПовторять[0];
						
						НовТовар.Количество = НовТовар.Количество + стрТовар.КоличествоФакт;
						
					КонецЕсли;
					
					КоличествоПлан = КоличествоПлан - стрТовар.КоличествоФакт;
					
					если ЗначениеЗаполнено(стрТовар.Адрес) Тогда
						
						НовАдрес = НовДок.ТоварыАдресноеХранение.Добавить();
						НовАдрес.Номенклатура = стр.Номенклатура;
						НовАдрес.Количество = стрТовар.КоличествоФакт;
						НовАдрес.Склад = стрТовар.Склад;
						НовАдрес.АдресХранения = стрТовар.Адрес;
						
					КонецЕсли;
					
					стрТовар.КоличествоФакт = 0;
					
					
				иначеесли КоличествоПлан <= стрТовар.КоличествоФакт и КоличествоПлан <> 0  и стрТовар.КоличествоФакт <> 0 тогда
					
					ОтборСтр = Новый Структура;
					ОтборСтр.Вставить("Номенклатура",стр.Номенклатура);
					ОтборСтр.Вставить("Склад",стрТовар.Склад);
					
					СтрокиНеПовторять = ТоварыСоСкладами.НайтиСтроки(ОтборСтр);

					если СтрокиНеПовторять.Количество() = 0 Тогда
						
						
						НовТовар = ТоварыСоСкладами.Добавить();
						
						ЗаполнитьЗначенияСвойств(НовТовар,стр);
						
						НовТовар.Количество = КоличествоПлан;
						
						НовТовар.Склад = стрТовар.Склад;
						
					Иначе
						
						НовТовар = СтрокиНеПовторять[0];
						
						НовТовар.Количество = НовТовар.Количество + КоличествоПлан;
							
					КонецЕсли;
					
					стрТовар.КоличествоФакт = стрТовар.КоличествоФакт - КоличествоПлан;
					
					если ЗначениеЗаполнено(стрТовар.Адрес) Тогда
						
						НовАдрес = НовДок.ТоварыАдресноеХранение.Добавить();
						НовАдрес.Номенклатура = стр.Номенклатура;
						НовАдрес.Количество = КоличествоПлан;
						НовАдрес.Склад = стрТовар.Склад;
						НовАдрес.АдресХранения = стрТовар.Адрес;
						
					КонецЕсли;
					
					КоличествоПлан = 0;
					
					
				КонецЕсли;
				
				КоличествоСтрок = КоличествоСтрок - 1;
				
			КонецЦикла;
			
		КонецЦикла;
		
		НовДок.Товары.Загрузить(ТоварыСоСкладами);
		
		НовДок.МаркаАвтомобиля = МаркаАвтомобиля;
		НовДок.МаркаПрицепа = МаркаПрицепа;
		НовДок.ГосНомерАвтомобиля = ГосНомерАвтомобиля;
		НовДок.ГосНомерПрицепа = ГосНомерПрицепа;
		НовДок.Водитель = Водитель;
		НовДок.КубатураАвтомобиля = КубатураАвтомобиля;
		
		Для каждого стр из НовДок.Товары Цикл
			
			РассчитатьСуммуТабЧасти(стр, НовДок);
			РассчитатьСуммуНДСТабЧасти(стр, НовДок);
			
		КонецЦикла;
		
		Если Грузчики.Количество()>0 Тогда
			
			Для каждого стрГр из Грузчики Цикл
				
				
				НовСтрГр = НовДок.ДанныеПоПогрузке.Добавить();
				НовСтрГр.Грузчик = стрГр.Грузчик;
				НовСтрГр.Вес = 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
		
		НовДок.Записать(РежимЗаписиДокумента.Запись);
		
		
	КонецЦикла;
	
	ЭтотОбъект.Записать();
		
КонецПроцедуры

Процедура КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ДействиеПечать.Текст = Кнопка.Текст;
		СтруктураМакета = Новый Структура("Макет, ПредставлениеМакета");
		СписокМакетов = ПолучитьСписокПечатныхФорм();
		СтрокаМакетаВСписке = СписокМакетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаМакетаВСписке <> Неопределено Тогда
			Печать(СтрокаМакетаВСписке.Значение);
			СтруктураМакета.Макет = СтрокаМакетаВСписке.Значение;
			СтруктураМакета.ПредставлениеМакета = СтрокаМакетаВСписке.Представление;			
			
		Иначе
			СсылкаВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрЗаменить(Кнопка.Имя, "_", "-")));
			Печать(СсылкаВнешнейФормы,,,ЭтаФорма);
			СтруктураМакета.Макет = СсылкаВнешнейФормы;
			СтруктураМакета.ПредставлениеМакета = Кнопка.Текст;
		КонецЕсли;		
		
		мПечатнаяФормаПоУмолчанию = СтруктураМакета.Макет;
		СохранитьТекущуюКнопкуПечати(ЭтотОбъект.Метаданные().Имя, СтруктураМакета);
	КонецЕсли;

КонецПроцедуры // КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы()

Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	НапечататьДокументПоУмолчанию(ЭтотОбъект, глТекущийПользователь, мПечатнаяФормаПоУмолчанию, ЭтаФорма);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

Процедура КоманднаяПанель2Заполнить(Кнопка)
	// Получим контекст обработки
	ИзменениеТабличнойЧастиТовары      = Обработки.ОбработкаТабличнойЧастиТовары.Создать();
	ФормаИзменениеТабличнойЧастиТовары = ИзменениеТабличнойЧастиТовары.ПолучитьФорму(,ЭтаФорма);

	//Установим реквизиты и переменные формы.
	ФормаИзменениеТабличнойЧастиТовары.ДокументОбъект             = ЭтотОбъект;
	ФормаИзменениеТабличнойЧастиТовары.мФормаДокумента            = ЭтаФорма;
	ФормаИзменениеТабличнойЧастиТовары.мЕстьНДС                   = Ложь; 
	ФормаИзменениеТабличнойЧастиТовары.мЕстьЦенаВРознице          = Ложь;
	ФормаИзменениеТабличнойЧастиТовары.мРассчитыватьАвтоматическиеСкидки   = Ложь;
	ФормаИзменениеТабличнойЧастиТовары.мСпособЗаполненияЦен       = Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры;
	//ФормаИзменениеТабличнойЧастиТовары.мМинимальныеЦены = мМинимальныеЦены;
	//ФормаИзменениеТабличнойЧастиТовары.мСписокФильтров = мСписокФильтров;

	//Перенесем табличную часть
	ИзменениеТабличнойЧастиТовары.Товары.Загрузить(Товары.Выгрузить());

	// Открываем форму обработки
	ФормаИзменениеТабличнойЧастиТовары.Открыть();

КонецПроцедуры

Процедура КоманднаяПанель3Заполнить(Кнопка)
	
	склады = товары.Выгрузить();
	склады.свернуть("Склад");
	склады.Колонки.Добавить("Группа");
	//Массив = Склады.ВыгрузитьКолонку(Склад);
	//
	//Список = Новый СписокЗначений;
	//Список.ЗагрузитьЗначения(Массив);
	//
	//Запрос = новый Запрос;
	//запрос.УстановитьПараметр("список",Список);
	//
	//запрос.Текст = 
	
	Для каждого стр из Склады Цикл
		
		стр.Группа = стр.склад.ГруппаСкладов;		
		
	КонецЦикла;
	
	склады.Свернуть("Группа");
	
	Для каждого стр из Склады Цикл
		
		если стр.Группа = Справочники.ГруппыСкладов.ПустаяСсылка() тогда
			об = Справочники.ГруппыСкладов.НайтиПоКоду("00");
		иначе
			об = стр.Группа;
		КонецЕсли;
		
		Для каждого стр из об.состав Цикл
			нов = Грузчики.Добавить();
			нов.Грузчик = стр.ФизЛицо;	
	    КонецЦикла;
				
	КонецЦикла;
КонецПроцедуры
