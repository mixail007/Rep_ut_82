Перем мЖирныйШрифт, мЗачеркнутыйШрифт, мСписокЗаказов, мСписокОтгруженныхЗаказов;

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры

//------------------------------------------------------------------

Функция ПроверитьЗакрытиеЗаказа(СсылкаЗаказ)
	Если мСписокЗаказов.Найти(СсылкаЗаказ)=Неопределено И СсылкаЗаказ.Проведен Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли	
КонецФункции

Функция ПроверитьОтгрузкуПоЗаказу(СсылкаЗаказ)
	
	Если мСписокОтгруженныхЗаказов.Найти(СсылкаЗаказ)=Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;	

	Возврат Истина;
	
КонецФункции


//------------------------------------------------------------------
Процедура СписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	//+++
	Если ПроверитьЗакрытиеЗаказа(ДанныеСтроки.Ссылка) Тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.LightGray;
	КонецЕсли;
	
	Если ПроверитьОтгрузкуПоЗаказу(ДанныеСтроки.Ссылка) Тогда
		ОформлениеСтроки.ЦветТекста = WebЦвета.Синий;
	КонецЕсли;	
	
	 
	//ОформлениеСтроки.Ячейки.Проверен.ОтображатьКартинку = Истина;
	//ОформлениеСтроки.Ячейки.Проверен.ОтображатьТекст    = Ложь;
	//ОформлениеСтроки.Ячейки.Проверен.ОтображатьФлажок   = Ложь;
	//ОформлениеСтроки.Ячейки.Проверен.ИндексКартинки     = 2;

	//
	//Если ДанныеСтроки.Ссылка.Проверен Тогда 
	//	
	//	ОформлениеСтроки.Шрифт = мЖирныйШрифт;
	//	ОформлениеСтроки.Ячейки.Проверен.ИндексКартинки     = 3;
	//	
	//КонецЕсли;

КонецПроцедуры

Процедура ОбновлениеОтображения()
	ПеречитатьСписокЗаказов();
КонецПроцедуры

Процедура ПриОткрытии()
	ПеречитатьСписокЗаказов();
КонецПроцедуры

Процедура ПеречитатьСписокЗаказов()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ВнутренниеЗаказыОстатки.ВнутреннийЗаказ
	             |ИЗ
	             |	РегистрНакопления.ВнутренниеЗаказы.Остатки КАК ВнутренниеЗаказыОстатки";
	мСписокЗаказов=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВнутреннийЗаказ");

	
	Запрос2 = Новый Запрос;
	Запрос2.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ПеремещениеТоваров.ВнутреннийЗаказ,
	               |	ПеремещениеТоваров.Проведен,
	               |	ПеремещениеТоваров.ПометкаУдаления
	               |ИЗ
	               |	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	               |ГДЕ
	               |	ПеремещениеТоваров.ВнутреннийЗаказ В (&СсылкаЗаказ)
	               |	И ПеремещениеТоваров.Проведен
	               |	И ПеремещениеТоваров.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("СсылкаЗаказ",мСписокЗаказов);
	
	мСписокОтгруженныхЗаказов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВнутреннийЗаказ");

КонецПроцедуры	

//------------------------------------------------------------------

           мСписокЗаказов = Новый Массив;
мСписокОтгруженныхЗаказов = Новый Массив;

мЖирныйШрифт = Новый Шрифт(,, Истина);
мЗачеркнутыйШрифт = Новый Шрифт(,,,,,Истина);
