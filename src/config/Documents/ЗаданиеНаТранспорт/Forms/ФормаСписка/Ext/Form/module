Перем мЖирныйШрифт;

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
  //+++( 26.04.2012
	//установка ограничения видимости помеченных на удаление документов
	ЭлементОтбора =ДокументСписок.Отбор.Найти("ПометкаУдаления");
		Если  ЭлементОтбора = Неопределено Тогда
			ЭлементОтбора = ДокументСписок.Отбор.Добавить("ПометкаУдаления"); // если нет - добавим в список отборов
		КонецЕсли;
		
		//по настройке пользователя !!!
		Если НЕ ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ДокументыРазрешитьПросмотрПомеченныхНаУдаление") тогда
			ЭлементОтбора.Установить(Ложь); // установим видимость только НЕудаленных
	    	ЭлементыФормы.ДокументСписок.НастройкаОтбора.ПометкаУдаления.Доступность = ЛОЖЬ;
	 	иначе // можно видеть удаленные элементы
			ЭлементыФормы.ДокументСписок.НастройкаОтбора.ПометкаУдаления.Доступность = Истина;
        КонецЕсли;
	//+++)

	//------------------ограничение по подразделению!----------------------------------------
	Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") тогда
		ЭлементОтбора = ДокументСписок.Отбор.Найти("Подразделение");
		ЭлементОтбора.Установить(глТекущийПользователь.ОсновноеПодразделение); 
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.Подразделение.Доступность = ЛОЖЬ;
	КонецЕсли;	
	
	//---------------ограничение просмотра заданий только по себе----------------------------------------
	Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОтображатьТолькоСобственныеЗаказы") тогда
		ЭлементОтбора = ДокументСписок.Отбор.Найти("Ответственный");
        ЭлементОтбора.Установить(глТекущийПользователь);
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.Ответственный.Доступность = ЛОЖЬ;
	КонецЕсли;	
	
	//---------------ограничение просмотра приходов----------------------------------------
	Если НЕ (РольДоступна("ПолныеПрава") 
	         или РольДоступна("Кладовщик")
			 или РольДоступна("ТолькоПросмотр")
	         или РольДоступна("МенеджерПоЗакупкам")
			 или РольДоступна("МенеджерПоЗакупкамСОграничениемПравДоступа")
			 или РольДоступна("яштФинДиректор") ) тогда
		ЭлементОтбора = ДокументСписок.Отбор.Найти("ВидОперации");
        ЭлементОтбора.Установить(перечисления.ВидыДвиженийПриходРасход.Расход);
  		ЭлементыФормы.ДокументСписок.НастройкаОтбора.ВидОперации.Доступность = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры

функция естьПоступленияПОЗаданию(ссылка)
	рез = ложь;
	возврат рез;
КонецФункции	

функция естьРеализацииПОЗаданию(ссылка)
	рез = ложь;
	возврат рез;
КонецФункции	

Процедура СписокПриПолученииДанных(Элемент, ОформленияСтрок)
	мТекущаяДата=ТекущаяДата();
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		задание = ОформлениеСтроки.ДанныеСтроки.Ссылка;
		
		Если ОформлениеСтроки.ДанныеСтроки.ВидОперации=Перечисления.ВидыДвиженийПриходРасход.Приход Тогда
			
			ОформлениеСтроки.ЦветТекста=WebЦвета.Красный;
			
			Если Задание.Выполнено тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.LightGray;   // Задание выполнено!
			КонецЕсли;
			
					
	//ИначеЕсли ОформлениеСтроки.ДанныеСтроки.Дата <> ОформлениеСтроки.ДанныеСтроки.Ссылка.ДатаДокументаПервая Тогда
		ИначеЕсли естьРеализацииПОЗаданию(задание) Тогда // все реализации проведены...
			ОформлениеСтроки.ЦветТекста=WebЦвета.Синий;	// идет отгрузка		
		КонецЕсли;		
		
		                                                                    // 2 часа
		Если (ОформлениеСтроки.ДанныеСтроки.Ссылка.ДатаМодификацииДокумента+7200) > мТекущаяДата Тогда
			ОформлениеСтроки.Шрифт = мЖирныйШрифт;
		КонецЕсли;	

			
		ОформлениеСтроки.ячейки.важность.ОтображатьТекст = ложь;
		Если ОформлениеСтроки.ДанныеСтроки.Важность <> Перечисления.Важность.Средняя тогда
		ОформлениеСтроки.ячейки.важность.ОтображатьКартинку = истина;
			Если ОформлениеСтроки.ДанныеСтроки.Важность = Перечисления.Важность.Высокая тогда
			ОформлениеСтроки.ячейки.важность.ИндексКартинки = 0;
			иначеЕсли ОформлениеСтроки.ДанныеСтроки.Важность = Перечисления.Важность.Низкая тогда
			ОформлениеСтроки.ячейки.важность.ИндексКартинки = 1;
			КонецЕсли;
		КонецЕсли;
		
		//----------------картинка приход/расход--------------------------------------
		ОформлениеСтроки.ячейки.ВидОперации.ОтображатьТекст = ложь;
		ОформлениеСтроки.ячейки.ВидОперации.ОтображатьКартинку = истина;
		Если ОформлениеСтроки.ДанныеСтроки.ВидОперации = Перечисления.ВидыДвиженийПриходРасход.Приход тогда
			ОформлениеСтроки.ячейки.ВидОперации.ИндексКартинки = 1;
		иначеЕсли ОформлениеСтроки.ДанныеСтроки.ВидОперации = Перечисления.ВидыДвиженийПриходРасход.Расход тогда
			ОформлениеСтроки.ячейки.ВидОперации.ИндексКартинки = 0;
		КонецЕсли;

		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДокументСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	стр1 = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если Копирование и не стр1.ссылка.Выполнено тогда
		Предупреждение("Копировать можно только Выполненный заказ!");
		Отказ = истина;
	КонецЕсли;	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
		Перем СписокДок;

	Если Не(ВводДоступен()) Тогда
		Возврат;
	КонецЕсли;

	Если глТорговоеОборудование <> Неопределено Тогда
		Если Событие = "BarCodeValue" Тогда
			Если глТорговоеОборудование.ПолучитьВсеДокументыПоШтрихКоду(Данные, СписокДок) Тогда
				Если СписокДок.Количество() = 1 Тогда
					ОткрытьЗначение(СписокДок[0].Ссылка);
				ИначеЕсли СписокДок.Количество() > 1 Тогда
					СтрокаДок = СписокДок.ВыбратьСтроку("Выберите один из найденных документов.");
					Если СтрокаДок<>Неопределено Тогда
						ОткрытьЗначение(СтрокаДок.Ссылка);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			глТорговоеОборудование.СканерПосылкаДанных(1);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


мЖирныйШрифт = Новый Шрифт(,, Истина);