Перем мПечатнаяФормаПоУмолчанию;
Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - Для проверки перехода документа в другой период
перем Соединение;
перем Воробьев,Землянский;


Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда 
		Дата = ТекущаяДата();
		Важность=Перечисления.Важность.Средняя;
		
		Ответственный = глТекущийПользователь;
		Подразделение = глТекущийПользователь.ОсновноеПодразделение;
        Организация   = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяОрганизация");
		
		ВидОперации   = Перечисления.ВидыДвиженийПриходРасход.Расход; // как в задании на отгрузку!
		//приход - не используется!
		
		УстановитьНомерДокумента(ЭтотОбъект);
		Если ЗначениеЗаполнено(ЗаявкаНаТранспорт) ТОгда
			Если ЗаявкаНаТранспорт.Статус <> Перечисления.СтатусыЗаявокНаТранспорт.ПеревозчикВыбран Тогда
				Сообщить("Нельзя вводить документ на основании не подтвержденной заявки!!!");
				ЭтаФорма.Закрыть();
			Иначе
				Организация = Справочники.Организации.НайтиПоКоду("00001");
				ВесМакс = ЗаявкаНаТранспорт.Вес;
				ЗаявкаНаТранспорт = ЗаявкаНаТранспорт.Ссылка;
				Направление = ЗаявкаНаТранспорт.Направление;
				ОбъемМакс = ЗаявкаНаТранспорт.Объем;
				Контрагент = ЗаявкаНаТранспорт.Контрагент;
				СуммаДокумента = ЗаявкаНаТранспорт.Сумма;
				Километров = ЗаявкаНаТранспорт.Пробег;
				Водитель = ЗаявкаНаТранспорт.Водитель;
				ГосНомерАвтомобиля = ЗаявкаНаТранспорт.ГосНомер; 
				ТелефонВодителя = ЗаявкаНаТранспорт.ТелефонВодителя;
				Контрагент = "Яршинторг";
				
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	
	УстановитьПодменюВыбораВидаОперации(ЭлементыФормы.ДействияФормы.Кнопки.ПодменюВидаОперации,
	ВидОперации.Метаданные().ЗначенияПеречисления,
	Новый Действие("ДействияФормыДействиеУстановитьОперацию"));
	
	УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);										
	
	// Заполнить подменю выбора доп.печатных форм.
	СписокМакетов = ЭтотОбъект.ПолучитьСписокПечатныхФорм();
	УстановитьПодменюВыбораПечатнойФормы(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати,
	                                       СписокМакетов,
	                                       Новый Действие("ДействияФормыДействиеВыбратьПечатнуюФормы"));
										   
	// Установить печатную форму по умолчанию.
	УстановитьКнопкуПечати(ЭтотОбъект.Метаданные().Имя, ЭтаФорма, СписокМакетов, мПечатнаяФормаПоУмолчанию);										   
	

	ЭлементыФормы.Перевозчик.СписокВыбора.Добавить("ИП Землянский Александр Николаевич");
	ЭлементыФормы.Перевозчик.СписокВыбора.Добавить("ИП Воробьев Александр Владимирович");
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
//-----------------функции заполнения--------------------------------//
///////////////////////////////////////////////////////////////////////

Процедура НомерПутевогоЛистаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	Если НомерПутевогоЛиста = "" тогда НомерПутевогоЛиста = "0"; КонецЕсли;
	
НомерПутевогоЛиста = лев(НомерПутевогоЛиста,1)+формат( число( прав(НомерПутевогоЛиста,6) ) + Направление, "ЧЦ=6; ЧВН=; ЧГ=0");	
		
КонецПроцедуры

Процедура ПеревозчикНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка= ЛОЖЬ;
	ФормаВыбораКонтрагента=Справочники.Контрагенты.ПолучитьФормуВыбора();
	ВыбКонтрагент=ФормаВыбораКонтрагента.ОткрытьМодально();
	Перевозчик=?(ЗначениеЗаполнено(ВыбКонтрагент),СокрЛП(ВыбКонтрагент.НаименованиеПолное),"");
КонецПроцедуры

Процедура ТипАвтомобиляПриИзменении(Элемент)
	ВесМакс   = Элемент.Значение.Вес;
	ОбъемМакс = Элемент.Значение.Объем;
	имя1 = Строка(Элемент.Значение);
	имя1 = СокрЛП(лев(имя1, найти(имя1,"(")-1));
	Если имя1<>"" Тогда //и СокрЛП(МаркаАвтомобиля)="" 
		МаркаАвтомобиля = имя1;
	КонецЕсли;
КонецПроцедуры

//----------------------------------------------------------------------
Процедура ПолеВвода1НачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	форма1 = справочники.ФизическиеЛица.ПолучитьФормуВыбора();
	//+++ 29.07.2014 - водители где угодно уже
	//форма1.СправочникСписок.отбор.Ссылка.ВидСравнения  = ВидСравнения.ВИерархии;
	//форма1.СправочникСписок.отбор.Ссылка.Значение	   = справочники.ФизическиеЛица.НайтиПоНаименованию("Водители");   //Водители
	//форма1.СправочникСписок.отбор.Ссылка.Использование = Истина;
	
	i=найти(СокрЛП(Водитель)," ");
	если i>0 тогда
	Фамилия = лев(СокрЛП(Водитель), i-1);
	форма1.СправочникСписок.отбор.Наименование.ВидСравнения  = ВидСравнения.Содержит;
	форма1.СправочникСписок.отбор.Наименование.Значение	   = Фамилия;   //Водители
	форма1.СправочникСписок.отбор.Ссылка.Использование = Истина;
	КонецЕсли;
	
	форма1.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = ложь;
	Водитель1 = форма1.ОткрытьМодально();
	Если строка(Водитель1)<>"" Тогда
	Водитель  = ФамилияИнициалыФизЛица(Водитель1);
	ТелефонВодителя = получитьТелефоны(Водитель1);
	
		АвтомобильГосНомерАвтомобиля  = ПолучитьКонтактнуюИнформацию(Водитель1, "Другое");
		Если Найти(АвтомобильГосНомерАвтомобиля, "Автомобиль: ")>0 Тогда
			АвтомобильГосНомерАвтомобиля = стрЗаменить(АвтомобильГосНомерАвтомобиля, "Автомобиль: ","");
			i= найти(АвтомобильГосНомерАвтомобиля, " ");  //первое наименование...
			Если i>0 Тогда
				МаркаАвтомобиля 	 = Лев(АвтомобильГосНомерАвтомобиля, i-1);
				ГосНомерАвтомобиля = Прав(АвтомобильГосНомерАвтомобиля, стрДлина(АвтомобильГосНомерАвтомобиля) - i);
			КонецЕсли;
		//+++ определяем тип авто	
		Если МаркаАвтомобиля<>"" и ГосНомерАвтомобиля<>"" Тогда
        Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ТипАвтомобиля.Ссылка,
		|	ТипАвтомобиля.Объем,
		|	ТипАвтомобиля.Вес
		|ИЗ
		|	Справочник.ТипАвтомобиля КАК ТипАвтомобиля
		|ГДЕ
		|	ТипАвтомобиля.ПолноеНаименование ПОДОБНО (&Марка)
		|	И ТипАвтомобиля.ПолноеНаименование ПОДОБНО (&Номер)";
		Запрос.УстановитьПараметр("Марка", "%"+МаркаАвтомобиля+"%" );
		Запрос.УстановитьПараметр("Номер", "%"+ГосНомерАвтомобиля+"%" );
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
			Если Выборка.Следующий() Тогда
				ТипАвтомобиля = выборка.ссылка;
				ВесМакс = выборка.Вес;
				ОбъемМакс = выборка.Объем;
			КонецЕсли;
		КонецЕсли;
        //+++)
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКонтактнуюИнформацию(об1, тип="Телефон")
	
	Если ТипЗнч(Об1)=Тип("Строка") Тогда
		Возврат "";
	КонецЕсли;	
	
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	КонтактнаяИнформация.Представление,
               |	КонтактнаяИнформация.Вид
               |ИЗ
               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
               |ГДЕ
               |	КонтактнаяИнформация.Объект = &Объект
               |	И КонтактнаяИнформация.Тип = &Тип";

Запрос.УстановитьПараметр("Объект", Об1);
Если тип="Телефон" Тогда
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);
	Тип1="Тел: ";
ИначеЕсли тип="Другое" Тогда
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Другое);
	Тип1="Доп.инфо: ";
ИначеЕсли найти(тип,"доставки")>0 Тогда
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.Текст = Запрос.Текст +" И КонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Вид", справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00021") );    //+++ 30.04.2015
	Тип1="адрес доставки: ";
ИначеЕсли найти(тип,"Факт")>0 Тогда
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.Текст = Запрос.Текст +" И КонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Вид", справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	Тип1="Факт.адрес: ";
ИначеЕсли найти(тип,"Юр")>0 Тогда
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.Текст = Запрос.Текст +" И КонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Вид", справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	Тип1="Юр.адрес: ";
КонецЕсли;
	
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
рез = "";
Если Выборка.Следующий() Тогда
	Если Строка(Выборка.Вид) = "Автомобиль" Тогда
		Тип1="Автомобиль: ";
	КонецЕсли;	
рез = рез + Тип1 +выборка.Представление;
КонецЕсли;

ПОКА Выборка.Следующий() ЦИКЛ
рез = рез + ", "+выборка.Представление;
КонецЦикла;

Возврат рез;

КонецФункции	

Функция получитьТелефоны(ВодительСсылка)
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	КонтактнаяИнформация.Представление
|ИЗ
|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
|ГДЕ
|	КонтактнаяИнформация.Объект = &Объект
|	И КонтактнаяИнформация.Тип = &Тип";
Запрос.УстановитьПараметр("Объект", ВодительСсылка);
Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
 рез = "";
Пока Выборка.Следующий() Цикл
	Если СокрЛП(Выборка.Представление)<>"" Тогда
		рез = рез+СокрЛП(Выборка.Представление)+"; ";
	КонецЕсли;	
КонецЦикла;

Возврат рез;
	
КонецФункции


//-------------------------------------------------------------

Процедура Кнопка1Нажатие(Элемент)
	Направление = ЗаполнитьНаправлениеПоТЧ();
КонецПроцедуры

функция ЗаполнитьНаправлениеПоТЧ()
	рез = "";
	для каждого стр1 из таблЗаказы цикл
	рез = рез + стр1.Направление+"; ";
	КонецЦикла;
	возврат рез;
КонецФункции


Процедура ТаблОбраткиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		инд= 3;
		Если Не ЗначениеНеЗаполнено(ДанныеСтроки.Счет) Тогда
			ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
			Если ДанныеСтроки.Счет.пометкаУдаления Тогда
				инд = 1;
			ИначеЕсли ДанныеСтроки.Счет.проведен Тогда
				инд = 0;
			ИначеЕсли НЕ ДанныеСтроки.Счет.проведен Тогда
				инд = 2;
			КонецЕсли;	
		КонецЕсли;	
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = инд;

КонецПроцедуры





//====================================ФУНКЦИИ СОЗДАНИЯ ДОКУМЕНТОВ========================
Функция НайтиПоступлениеДопРасходов()
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	выбор когда ПоступлениеДопРасходов.Ссылка.Маршрут="""" тогда
					|	ПоступлениеДопРасходов.Комментарий иначе ПоступлениеДопРасходов.Ссылка.Маршрут Конец КАК Клиент,
	                |	ПоступлениеДопРасходов.СуммаДокумента КАК Сумма,
	                |	ПоступлениеДопРасходов.НомерВходящегоДокумента КАК НомерВхДок,
	                |	ПоступлениеДопРасходов.Ссылка КАК Счет
	                |ИЗ
	                |	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	                |ГДЕ
	                |	ПоступлениеДопРасходов.Дата > &ДатаНач
	                |	И ПоступлениеДопРасходов.Комментарий ПОДОБНО &Комментарий  
					|	И ПоступлениеДопРасходов.ПометкаУдаления
					|
	                |УПОРЯДОЧИТЬ ПО
	                |	ПоступлениеДопРасходов.Дата
	                |АВТОУПОРЯДОЧИВАНИЕ";

	 Запрос.УстановитьПараметр("Комментарий", "%Задание на транспорт "+строка(ЭтотОбъект.Номер)+"%" );
	 Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ЭтотОбъект.Дата) - 14*86400);// не раньше 14 дней от даты заявки!
	 Результат = Запрос.Выполнить();
	 табл = Результат.Выгрузить();
	 
	 для каждого стр1 из табл цикл // обрезание Клиента
		 k = найти(стр1.Клиент, "#");
		 если k>1 тогда
			 стр1.Клиент = прав(стр1.Клиент, стрДлина(стр1.Клиент)-k+1);
		 КонецЕсли;	 
		 i = найти(стр1.Клиент, ">>>");
		 если i>0 тогда
		 стр1.Клиент = лев(стр1.Клиент, i-1);
		 КонецЕсли;
	 КонецЦикла;
	 
	Возврат табл;
	
КонецФункции	



Функция найтиДогКонтр(Контр, стрФА="")
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	 |	ДоговорыКонтрагентов.Ссылка
	 |ИЗ
	 |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	 |ГДЕ
	 |	ДоговорыКонтрагентов.Владелец = &Владелец
	 |	И ДоговорыКонтрагентов.ТипДоговора = &ТипДоговора 
	 |	И НЕ ДоговорыКонтрагентов.ПометкаУдаления
	 |//стрФА	И ДоговорыКонтрагентов.Наименование ПОДОБНО &Наименование
	 |	И НЕ ДоговорыКонтрагентов.Наименование ПОДОБНО (""%*%"")";
	 
	 Запрос.УстановитьПараметр("Владелец",Контр);
	 Запрос.УстановитьПараметр("ТипДоговора",справочники.ТипыДоговоров.найтиПоКоду("00003"));  //Услуги
	 
	 Если  стрФА<>"" Тогда
		 Запрос.УстановитьПараметр("Наименование","%"+стрФА+"%"); // ФАкторинг нельзя!
		 Запрос.Текст = стрЗаменить(Запрос.Текст ,"//стрФА", "");
	 КонецЕсли;
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Если Выборка.Следующий() Тогда
		 рез = выборка.ссылка;
	 Иначе	 
	 	рез = справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
	Возврат рез;
КонецФункции

Функция СоздатьДогКонтр(Контр, стрФА="")
	дог1 = справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
	дог1.Наименование = "Договор услуг"+стрФА;
	дог1.Владелец = Контр;
	дог1.Организация = справочники.Организации.НайтиПоКоду("00001");
	дог1.ВидДоговора  = перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
	дог1.ТипДоговора  = справочники.ТипыДоговоров.найтиПоКоду("00003"); //Услуги
	
	дог1.ВедениеВзаиморасчетов = перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом;
 	дог1.ВалютаВзаиморасчетов  = справочники.Валюты.НайтиПоКоду("643");
	дог1.ОтветственноеЛицо     = Контр.ОсновнойМенеджерКонтрагента;
	дог1.Комментарий = "# создан "+ТекущаяДата();	
	попытка
		дог1.ОбменДанными.Загрузка = Истина;
		дог1.Записать();
		дог1.ОбменДанными.Загрузка = ЛОЖЬ;
		сообщить("Создан новый '"+дог1.Наименование+"' по перевозчику: "+строка(Контр), СтатусСообщения.Информация);
		резСсылка = дог1.Ссылка;
	исключение
		сообщить("Ошибка при создании '"+дог1.Наименование+"' по перевозчику: "+строка(Контр)+" Ошибка:"+ОписаниеОшибки(), СтатусСообщения.Внимание);
		резСсылка = справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецПопытки;	

	Возврат резСсылка;
	
КонецФункции	


//перезаполняем таблицу  ТаблОбратки
процедура СоздатьПоступлениеДопРасходов()
	
 	ТаблОбратки.Очистить();
	
	Если ВремяНапоминания='00010101' тогда
		ВремяНапоминания = ТекущаяДата();
	КонецЕсли;
	
//-----------проверка существующих - ничего не создаём------------------
	табл =  НайтиПоступлениеДопРасходов();
	
	Если табл.Количество()>=1 и не флПерезаписывать Тогда
		СуммаОбр = табл.Итог("Сумма");
		сообщить("Уже существует "+строка(табл.Количество())+" документов ""ПоступлениеДопРасходов"" на сумму "+строка(СуммаОбр)+"р. Автоматического изменения не будет!", СтатусСообщения.ОченьВажное); //!!
		Для i=0 по табл.Количество()-1 Цикл
			стр1 = ТаблОбратки.Добавить();
			ЗаполнитьЗначенияСвойств(стр1, табл[i]);
		КонецЦикла;	
		Возврат;
	КонецЕсли;
	
//=====================================================	
СтатьяЗатратТрУсл = справочники.СтатьиЗатрат.НайтиПоКоду("К0115"); // Автоуслуги (грузовой транспорт)
НоменклатураТрУсл = Справочники.Номенклатура.НайтиПоКоду("ЛН00040",,Справочники.Номенклатура.НайтиПоКоду("ЛН00001")); //Транспортныеуслуги 44-ТЗР распределяемые
руб  = справочники.Валюты.НайтиПоКоду("643"); // ВСЕГДА РУБЛИ
орг  = справочники.Организации.НайтиПоКоду("00001"); //ЯШТ всегда!
опер = Перечисления.ВидыОперацийПоступлениеДопРасходов.УслугаСтороннейОрганизации;

для каждого стр111 из таблЗаказы цикл
	если флПерезаписывать и табл.Количество()>=1 тогда
	//поиск документа по реквизитам...  
	стрКлиент  ="#"+СокрЛП(стр111.Контрагент)+" : "+СокрЛП(стр111.Направление); 
	//стрКлиент  ="обр.№"+строка(стр111.НомерСтроки);
	докСсылка  = табл.найти( стрКлиент , "Клиент");
		если докСсылка<>неопределено тогда
    	Док = докСсылка.Счет.ПолучитьОбъект();
		иначе // новый
		док = документы.ПоступлениеДопРасходов.СоздатьДокумент();
		КонецЕсли;
	иначе // новый
		док = документы.ПоступлениеДопРасходов.СоздатьДокумент();
	КонецЕсли;

//--------------------------------------------------------------------------  
Док.ВидОперации    = опер;
Док.Организация    = орг;

Док.ОтражатьВУправленческомУчете = Истина;
Док.ВалютаДокумента =руб;
Док.КратностьВзаиморасчетов = 1;
Док.КурсВзаиморасчетов = 1;
Док.УчитыватьНДС = Истина;
Док.СуммаВключаетНДС = Истина;
Док.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;	 //ВСЕГДА без ндс!

Док.Дата 		   = ВремяНапоминания;
Док.Ответственный  = глТекущийПользователь;
Док.Услуга         = НоменклатураТрУсл;  //ОДНА Услуга!
Док.СпособРаспределения = Перечисления.СпособыРаспределенияДопРасходов.ПоСумме;

Док.Сумма          = стр111.Сумма;
Док.СуммаДокумента = Док.Сумма;
//Док.Подразделение  = ЭтотОбъект.Подразделение; // такое же...
Док.Подразделение  = справочники.Подразделения.НайтиПоКоду("00005");  //+++ 11.06.2015 - всегда ЯШТ

Док.Маршрут = стр111.Направление;// 28.01.2016

//------------------Контрагент--------------------
Контр = справочники.Контрагенты.ПустаяСсылка();
	Если СокрЛП(Перевозчик)="" Тогда
		Контр = ОрганизацияВыдавшаяДоверенность;
	ИначеЕсли Найти(Перевозчик, "Землянский")>0 Тогда	
		Контр = справочники.Контрагенты.НайтиПоКоду("00216");
	ИначеЕсли Найти(Перевозчик, "Воробьев")>0 Тогда	
		Контр = справочники.Контрагенты.НайтиПоКоду("93833");
	Иначе // Любой другой перевозчик
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Контрагенты.Ссылка
		               |ИЗ
		               |	Справочник.Контрагенты КАК Контрагенты
		               |ГДЕ
		               |	(ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(200))) = &Наименование";
		
		Запрос.УстановитьПараметр("Наименование",  ЭтотОбъект.Перевозчик);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Контр = выборка.Ссылка;
		Иначе 
			Контр = справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;	
	КонецЕсли;	
	
Если Контр = Неопределено или Контр.Пустая() Тогда
	Сообщить("Не найден Перевозчик по полному наименованию '"+Перевозчик+"'", СтатусСообщения.Внимание);
	Возврат;
КонецЕсли;	
Док.Контрагент    = Контр;

//----------- догвор всегда на Яршинторг ---------------------------------------------
	ДогКонтр = Контр.ОсновнойДоговорПоставки; //1 главный!
	Если ДогКонтр.Пустая() Тогда
	ДогКонтр = найтиДогКонтр(Контр," (НП)");  //"Любой Договор услуг (НП)"
		Если ДогКонтр.Пустая() Тогда
		 ДогКонтр = СоздатьДогКонтр(Контр," (НП)");
		КонецЕсли;
	КонецЕсли;
Док.ДоговорКонтрагента = ДогКонтр;

//-----------------Связка с заданием------------------------------------------------------------
Содержание  = "Тр.услуги по маршруту: "+СокрЛП(стр111.Направление)+", а/м "
		+ СокрЛП(этотобъект.МаркаАвтомобиля)+" "+ СокрЛП(этотобъект.ГосНомерАвтомобиля)
		+", вод. "+ СокрЛП(этотобъект.Водитель)+" от "+формат( этотобъект.Дата,"ДЛФ=D")+"г.";

Док.Содержание    = Содержание;

Док.Комментарий   = ?(СокрЛП(стр111.Контрагент0)="","", "#Отправитель: "+СокрЛП(стр111.Контрагент0)+" ")
					+"Получатель: "+СокрЛП(стр111.Контрагент)+" : "+СокрЛП(стр111.Направление)+">>>
|# Задание на транспорт "+ЭтотОбъект.Номер+" от "+формат(ЭтотОбъект.Дата,"ДЛФ=DD")+" #обр.№"+строка(стр111.НомерСтроки);

попытка 
	
	Если табл.Количество()=0 Тогда //+++ 01.06- "У" по 03.07.2015
		док.УстановитьНовыйНомер("ТК");
    КонецЕсли;

		док.ПометкаУдаления = Истина; 
		док.Записать(); // проводить нельзя!!!
	
	стр1 = ТаблОбратки.Добавить();
	стр1.Клиент = "#"+СокрЛП(стр111.Контрагент)+" : "+СокрЛП(стр111.Направление);
	стр1.Сумма  = стр111.Сумма;
	стр1.Счет  = док.Ссылка;
	
	сообщить("Успешно записан документ: "+строка(док.Ссылка), СтатусСообщения.Информация);
	
исключение
	сообщить("Ошибка при записи документа : "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	Возврат;
КонецПопытки;


КонецЦикла;



КонецПроцедуры //СоздатьПоступлениеДопРасходов

//==========Подключение============================
Функция ПолучитьСоединение(СтрокаСоединенияCOM="", v8="V82")
	
	v8connect = Новый COMОбъект(v8+".ComConnector");
	Попытка
	Соединение = v8connect.Connect(СтрокаСоединенияCOM);
	#Если Клиент Тогда
	ТипБазы = "Ref=";  длТипаБазы=3;
	Если Найти(СтрокаСоединенияCOM,"File=")>0 Тогда		
		ТипБазы = "File="; длТипаБазы=4;
	КонецЕсли;	
	имяБД = Прав(СтрокаСоединенияCOM,стрДлина(СтрокаСоединенияCOM) - найти(СтрокаСоединенияCOM,ТипБазы)-длТипаБазы);
	имяБД = Лев(имяБД, найти(имяБД,";")-1);
	Сообщить("Успешно установлено соединение с "+?(ТипБазы = "Ref=","серверной", "файловой")+" базой: "+имяБД, СтатусСообщения.Информация);
	#КонецЕсли
	Исключение
	#Если Клиент Тогда
		Сообщить("Ошибка при соединении с "+?(ТипБазы = "Ref=","серверной", "файловой")+" базой: "+имяБД+"
		         |Ошибка: "+ ОписаниеОшибки(), СтатусСообщения.Внимание);
	#КонецЕсли
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

процедура ВыгрузитьОбраткиВПутевойЛист(номПутЛист="")
	
	Если ТаблОбратки.Количество()=0 Тогда
		#Если Клиент Тогда
		сообщить("Нет документов Для выгрузки ""обраток""", СтатусСообщения.Внимание);
		#КонецЕсли
		Возврат;
	КонецЕсли;
	Если номПутЛист="" тогда
		#Если Клиент Тогда
		сообщить("Нет номера путевого листа Для выгрузки ""обраток""", СтатусСообщения.Внимание);
		#КонецЕсли
	    Возврат;
	КонецЕсли;
	
//---------------------определение реквизитов--------------------------------	
	Если Найти(Перевозчик,"Землянский")>0  Тогда
		ЭтоБПЗем = Истина;
	ИначеЕсли Найти(Перевозчик,"Малышев Е")>0  Тогда //24.05.2018
		ЭтоБПЗем = ЛОЖЬ;
	Иначе
		#Если Клиент Тогда
		Сообщить("Выгружать документы в Бухгалтерию Перевозчика - можно только по 2м перевозчикам: Землянский А.Н. или Малышев Е.И.!",СтатусСообщения.Внимание);
		#КонецЕсли
	    Возврат;
	КонецЕсли;
	
	//-------------Подключение----------------
	Если Соединение = Неопределено Тогда
		КоманднаяПанель2Подключиться(Неопределено);
	  	Если Соединение = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

		
 //----------------------------------------------------------------------------------
  путЛистCOM = соединение.Документы.ПутевойЛист.НайтиПоНомеру(номПутЛист, Дата);
  Если путЛистCOM.ссылка = неопределено тогда
  	#Если Клиент Тогда
	Сообщить("Не найден путевой лист № "+номПутЛист, СтатусСообщения.Внимание);
	#КонецЕсли
	Возврат;
  Иначе
	путЛист = путЛистCOM.ссылка.ПолучитьОбъект();
  КонецЕсли;

//-------------------------------------------------------------------------------------
путЛист.Реализации.Очистить();
для каждого стрОбр из таблЗаказы цикл
стр1 = путЛист.Реализации.Добавить();
стр1.Дата   = ВремяНапоминания;
стр1.Направление    = стрОбр.Контрагент+": "+стрОбр.Направление;
Если НЕ ДокументыСданыЛогистам тогда
	стр1.НомерДокумента = "тр:"+Номер;
Иначе
	стр1.НомерДокумента = ?(ЭтоБПЗем,"00","ВА")+ формат(число(стрОбр.НомерВхДок), "ЧЦ=9; ЧВН=; ЧГ=0");  //00000002819 или ВА000002819
КонецЕсли;	
стр1.Сумма  = стрОбр.Сумма;
стр1.Пробег = стрОбр.Пробег;
КонецЦикла;

попытка
	путЛист.Записать();
	сообщить("Данные записаны в Путевой лист "+НомерПутевогоЛиста, СтатусСообщения.Информация);
исключение
	сообщить("Ошибка записи в Путевой лист "+НомерПутевогоЛиста+":"+ОписаниеОшибки(), СтатусСообщения.Внимание);
КонецПопытки;

КонецПроцедуры	

//------------------------------------------------------------
процедура ВыгрузитьДопРасходыВБП()
	
	Если ТаблОбратки.Количество()=0 Тогда
		сообщить("Нет документов Для выгрузки ""обраток""", СтатусСообщения.Внимание);
	    Возврат;
	КонецЕсли;
	
	//---------------------определение реквизитов--------------------------------	
	Если Найти(Перевозчик,"Землянский")>0  Тогда
		ЭтоБПЗем = Истина;
	ИначеЕсли Найти(Перевозчик,"Малышев Е")>0  Тогда  //24.05.2018
		ЭтоБПЗем = ЛОЖЬ;
	Иначе
		#Если Клиент Тогда
		Сообщить("Выгружать документы в Бухгалтерию Перевозчика - можно только по 2м перевозчикам: Землянский А.Н. или Малышев Е.И.!",СтатусСообщения.Внимание);
		#КонецЕсли
	    Возврат;
	КонецЕсли;


//-------------Подключение----------------
Если Соединение = Неопределено Тогда
	КоманднаяПанель2Подключиться(Неопределено);
  	Если Соединение = Неопределено Тогда
		Возврат;
	КонецЕсли;
КонецЕсли;

  //=================================общие реквизиты Для всех документов======================================
	
//контрагент и его договор	
    КонтрТр  = соединение.справочники.Контрагенты.НайтиПоКоду("000000003");   //ЯШТ   
	КонтрДР  = соединение.справочники.Контрагенты.НайтиПоКоду("00000001"); //Другие покупатели
	
	Если ЭтоБПЗем Тогда
      ОргТр    = соединение.справочники.Организации.найтиПоКоду("000000002");
	    СкладТр  = соединение.справочники.Склады.НайтиПоКоду("000000005");
		
		ДогКонтрТр  = КонтрТр.ОсновнойДоговорКонтрагента;
		ДогКонтрДР  = КонтрДР.ОсновнойДоговорКонтрагента;
		
	Иначе //Воробьев БП >> Малышев Егор
      ОргТр    = соединение.справочники.Организации.найтиПоКоду("00013");
	//    СкладТр  = соединение.справочники.Склады.НайтиПоКоду("000000001");
	
		СкладТр  = соединение.справочники.Склады.НайтиПоКоду("000000005");    //24.05.2018 - единый склад?
		
		ДогКонтрТр  = соединение.справочники.ДоговорыКонтрагентов.НайтиПоКоду("000000867");  //договор ЯШТ по Малышеву
		КонтрДР     = соединение.справочники.ДоговорыКонтрагентов.НайтиПоКоду("000000950"); //Другие покупатели по Малышеву
	КонецЕсли;
	
	
	СпособЗачетаАвансовТр = соединение.Перечисления.СпособыЗачетаАвансов.Автоматически;
	
	УслугаТр       = соединение.справочники.Номенклатура.НайтиПоКоду("000000465");
	СчетДоходовТр  = соединение.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.2");
	СчетРасходовТр = соединение.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.2");
		
	СтавкаНДСТр    = соединение.Перечисления.СтавкиНДС.БезНДС;	 //ВСЕГДА без ндс!
	
	СчетРасчКонтр = соединение.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");
	СчетРасчАванс = соединение.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02");
	ВалютаДокументаТр    = соединение.Справочники.Валюты.найтиПоКоду("643");	//все услуги в рублях!
	ВидОперацииТр        = соединение.Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
	
	массивЦифр = новый массив;
	Для i=0 по 9 Цикл
		массивЦифр.Добавить(формат(i,"ЧЦ=1; ЧН=0") );
	КонецЦикла;

	
	
	
//==============Основной Цикл по документам===========================	
	Для каждого стр1 из ТаблОбратки Цикл   //!!! ТаблОбратки !!!
		
	//-----------------БЛОКИРОВКИ по БУ------------------------------------------	
	Если стр1.счет.ОтражатьВБухгалтерскомУчете Тогда // уже выгружен в БП ЯШТ
		сообщить(строка(стр1.счет)+" уже выгружен в БП ЯШТ, перевыгружать его в нельзя!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
		
	// 1)---------------Создаём или находим документ в базе БП-----------------
	этоНовыйДок = ложь;
	стр1.НомерВхДок = СокрЛП(стр1.счет.НомерВходящегоДокумента);
	
	Если СокрЛП(стр1.НомерВхДок)="" Тогда
		Док = соединение.Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		этоНовыйДок = Истина;
	 Иначе
		Если ЭтоБПЗем Тогда //00000000972
			номДок =формат(число(стр1.НомерВхДок), "ЧЦ=11; ЧВН=; ЧГ=0");
		Иначе	            //ВА000000297
			номДок ="ВА"+ формат(число(стр1.НомерВхДок), "ЧЦ=9; ЧВН=; ЧГ=0");
		КонецЕсли;	  
		
		ДокСсылка = соединение.Документы.РеализацияТоваровУслуг.НайтиПоНомеру(номДок, стр1.Счет.Дата );
		
		Если ДокСсылка=Неопределено или ДокСсылка.пустая() Тогда
			#Если Клиент Тогда
				сообщить("НЕ найден документ "+номДок+" - будет создан новый!", СтатусСообщения.Внимание);
			#КонецЕсли	
			Док = соединение.Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			этоНовыйДок = Истина;
		Иначе
			этоНовыйДок = ЛОЖЬ;
			//-----------------26.05.2015 - доп. БЛОКИРОВКа по приходу печ.документов------------------------------------------	
			Если ДокСсылка.Закрыт Тогда  //новый реквизит в Реализациях БП Землянского и Воробьева
				#Если Клиент Тогда
					сообщить("Существующий документ "+номДок+" - уже Закрыт от изменений! Получены все печатные документы!");
				#КонецЕсли
				Продолжить;
			КонецЕсли;
			//
			Если флПерезаписывать Тогда
			#Если Клиент Тогда
				сообщить("Существующий документ "+номДок+" - будет перезаписан.");
			#КонецЕсли
			Док = ДокСсылка.ПолучитьОбъект();
			Док.Услуги.Очистить();
			Иначе
				#Если Клиент Тогда
					сообщить("Уже существующий документ "+номДок+" в бухгалтерской базе 1С - НЕ изменен!", СтатусСообщения.Внимание);
				#КонецЕсли
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
		
	
    //2)----------------- одинаково в обоих БП!-------------------------------
	док.ВидОперации = ВидОперацииТр; // Продажа всегда!
	//док.Дата  = стр1.Счет.Дата; // дата по поступлению - не правильно!
	
	док.Дата  = ЭтотОбъект.ВремяНапоминания; // Фактическая дата и время отгрузки!
	Док.Организация = ОргТр;
	Док.СпособЗачетаАвансов	 = СпособЗачетаАвансовТр;
	Док.Склад = СкладТр;
	
	док.СчетУчетаРасчетовСКонтрагентом = СчетРасчКонтр;
	док.СчетУчетаРасчетовПоАвансам = СчетРасчАванс;
	
	док.ВалютаДокумента = ВалютаДокументаТр;
	док.КратностьВзаиморасчетов = 1;
	док.КурсВзаиморасчетов      = 1;
	
	док.УчитыватьНДС     = Истина;
	док.СуммаВключаетНДС = Истина;
	
	док.НомерПутевогоЛиста = НомерПутевогоЛиста; // 06.11.2015  - номер путевого листа в Бухгалтерии!
	док.ПробегЯШТ = Километров; // 11.11.2015

	//+++ 28.01.2016
	док.Маршрут   = стр1.Счет.Маршрут;
	док.Обратка   = Истина;
	док.КолТочек  = 1;
		
 //   Если флЯШТ Тогда // в договоре перевозчика!
 //		ЦенаТр 			= окр(стр1.Счет.Сумма*1.30, 2); //ВСЯ СУММА документа +30%
 //   	Док.Комментарий = СокрЛП(ЭтотОбъект.Водитель)+"    +30%";	
 //   	Док.Контрагент  = КонтрТр;
 //Док.договорКонтрагента = ДогКонтрТр;
 //   Иначе
 		ЦенаТр			= стр1.Счет.Сумма;     	//ВСЯ СУММА документа!
		Док.Комментарий = стр1.Счет.Комментарий;//ПОЛНЫЙ КОММЕНТАРИЙ!	
		Док.Контрагент  = КонтрДР;
 Док.договорКонтрагента = ДогКонтрДР;
	 //КонецЕсли;
	
	стрУсл = Док.Услуги.Добавить();
	
	стрУсл.Номенклатура = УслугаТр;
	стрУсл.Содержание   = стр1.Счет.Содержание; // по 1 услуге
	
	стрУсл.Количество   = 1;
	стрУсл.Цена   = ЦенаТр;
	стрУсл.Сумма  = ЦенаТр;
	
	// БЕЗ НДС!
	стрУсл.СтавкаНДС = СтавкаНДСТр;
	стрУсл.СуммаНДС  = 0;
	
	стрУсл.СчетДоходов  =  СчетДоходовТр;
	стрУсл.СчетРасходов = СчетРасходовТр;
	
	//5) -------------- машина и номер ----------------------
	номерМашины0 = ЭтотОбъект.ГосНомерАвтомобиля;
	Если СокрЛП(номерМашины0)="" Тогда
		номерМашины0 = СокрЛП(стр1.Счет.МаркаАвтомобиля);
	КонецЕсли;	
	номерМашины = "";
	N = стрДлина(номерМашины0);
	
	Для i=1 по N Цикл
		Если стрДлина(номерМашины)=3 Тогда прервать; КонецЕсли; // номер из 3х цифр
		симв = сред(номерМашины0,i,1);
		Если массивЦифр.Найти( симв )<>Неопределено Тогда
			номерМашины = номерМашины + симв;
		КонецЕсли;
	КонецЦикла;
	МодельМашины = СокрЛП(ЭтотОбъект.МаркаАвтомобиля);
	
	    Если стрДлина(номерМашины)<3 Тогда
			сообщить("ГосНомер машины должен состоять из 3х цифр '"+номерМашины+"'");
			номерМашины=номерМашины+"-"; //чтобы не было поиска по пустому названию!
		КонецЕсли;

	//6) -------------- субконто НоменклатурныеГруппы----------------------
	Если ЭтоБПЗем Тогда
		
		Если Найти(МодельМашины, " ")>0 Тогда
			МодельМашины = лев(МодельМашины, Найти(МодельМашины, " ")-1);
			сообщить("Модель машины берется только первое слово '"+МодельМашины+"'");
		КонецЕсли;	
		//------------доп.обработка названия----------------
		Если    Найти(нрег(МодельМашины),"муцу")>0	или Найти(нрег(МодельМашины),"мутсу")>0 или Найти(нрег(МодельМашины),"мутцу")>0
			или Найти(нрег(МодельМашины),"мицу")>0	или Найти(нрег(МодельМашины),"митсу")>0 или Найти(нрег(МодельМашины),"митцу")>0 
			или Найти(нрег(МодельМашины),"mitsu")>0        //Mitsubishi Lancer
			или Найти(нрег(МодельМашины),"fuso")>0 Тогда
			МодельМашины="Мицубиси";
		ИначеЕсли МодельМашины="Хендай" или МодельМашины="Хьендай"
			или МодельМашины="Хюндай"   или МодельМашины="Хьюндай"
			или МодельМашины="Хундай"   или МодельМашины="Хуиндай" или МодельМашины="Хёндай"
			или Найти(нрег(МодельМашины),"hyndai")>0
			или Найти(врег(МодельМашины),"HYUNDAI")>0 Тогда
			МодельМашины="Хундай";
		ИначеЕсли Найти(нрег(МодельМашины),"газель")>0 Тогда //ГАЗель, газель...
			МодельМашины="Газель";
		ИначеЕсли Найти(нрег(МодельМашины),"фиат")>0 
			или Найти(нрег(МодельМашины),"fiat")>0
			или Найти(нрег(МодельМашины),"дукато")>0 Тогда //фиат дукато, дукато
			МодельМашины="Фиат";
		ИначеЕсли Найти(нрег(МодельМашины),"скания")>0
			или Найти(нрег(МодельМашины),"scania")>0 Тогда //ГАЗель, газель...
			МодельМашины="Скания";
		ИначеЕсли Найти(нрег(МодельМашины),"волдай")>0 Тогда //ГАЗ Валдай
			МодельМашины="Волдай";
		КонецЕсли;	
	
		назвНомГр = номерМашины+" "+МодельМашины;
		
	Иначе //Воробьев - только номер!
		
		назвНомГр = номерМашины;
			
	КонецЕсли;
	стрУслСубконто = соединение.справочники.НоменклатурныеГруппы.НайтиПоНаименованию( назвНомГр );
	
	Если стрУслСубконто = Неопределено или стрУслСубконто.пустая() Тогда
		#Если Клиент Тогда
			Сообщить("Не найден автомобиль: '"+назвНомГр+"' в справочнике Номенклатурные Группы в БП перевозчика!", СтатусСообщения.Внимание);
		#КонецЕсли	
	Иначе		
		стрУсл.Субконто = стрУслСубконто;
	КонецЕсли;
	
	попытка
		Док.Записать(Соединение.РежимЗаписиДокумента.Проведение);
		#Если Клиент Тогда
				сообщить("Успешно записан и проведен "
				                   +?(этоНовыйДок, "новый","уже существующий")
								   +" документ "+строка(док.Номер)+" от "+строка(док.Дата), СтатусСообщения.Информация );
			#КонецЕсли	
	Исключение
		Док.Записать();
		#Если Клиент Тогда
		сообщить("Ошибка при проведении документа "+строка(док.Номер)+" от "+строка(док.Дата), СтатусСообщения.Информация );
		#КонецЕсли	
	КонецПопытки;
	
	стр1.НомерВхДок = формат( число( прав(док.Номер,6) ) ,"ЧГ=0");
	
	попытка
	док = стр1.Счет.ПолучитьОбъект();
	док.НомерВходящегоДокумента = стр1.НомерВхДок;
	док.ДатаВходящегоДокумента  = док.Дата;
	док.Записать();
	исключение
	сообщить("Номер вх.док. - не изменен!", СтатусСообщения.Информация);
	КонецПопытки;
	
	КонецЦикла;
	
КонецПроцедуры	


////////////////////////////////////////////////////////////////////
//               функции вызова функций создания                  //
////////////////////////////////////////////////////////////////////


//=================Обновить========================
Процедура КоманднаяПанель2Обновить(Кнопка)
	ТаблОбратки =  НайтиПоступлениеДопРасходов();
КонецПроцедуры

Процедура КоманднаяПанель2Подключиться(Кнопка)
	
	Флажок1 = ЛОЖЬ; //+++   Истина - ТЕСТОВЫЙ режим!   ЛОЖЬ - РЕАЛЬНАЯ БАЗА !!!
	
	СтрокаСоединенияCOM="";
	Соединение = Неопределено; //еще раз всегда!
	Base   = "Srvr=""delta:3041"";Ref=""v83ib_zemvorob_bp"""; //17.03.2019
	UsrPwd = "Usr=""Лунева"";Pwd=""luneva151515""";
	v8="V83";  //обе базы БП - 8.3
	
	Если Кнопка<>Неопределено Тогда // только Для файл.баз - спрашиваем откуда брать!
		Если не ВвестиСтроку( base, "Введите Строку подключения к базе 1С "
		                 +?(Найти(Перевозчик,"Малышев Е")>0,"БП Малышев Е.И.", "БП Землянский А.Н.")) Тогда
		Возврат;
		КонецЕсли;	
	КонецЕсли;	
	
	СтрокаСоединенияCOM = Base+";"+UsrPwd;
		
		Если Base = "" или UsrPwd="" Тогда 
		#Если Клиент Тогда
			Сообщить("Не установлена строка подключения к внешней базе данных 1С...", СтатусСообщения.Внимание);
		#КонецЕсли
		Возврат ;
	    КонецЕсли;
	
	//Если Соединение = Неопределено Тогда
		Соединение  = ПолучитьСоединение(СтрокаСоединенияCOM, v8); 
		Если Соединение = Неопределено Тогда
		#Если Клиент Тогда
			Сообщить("НЕТ подключения к базе 1С "+v8+":"+base+" ! ", СтатусСообщения.Внимание);
		#КонецЕсли
			Возврат;
		Иначе
		#Если Клиент Тогда
			Сообщить(строка(ТекущаяДата())+" Успешно Установлено подключения к базе 1С "+v8+":"+base, СтатусСообщения.Информация);
		#КонецЕсли
		КонецЕсли;
	//КонецЕсли;

КонецПроцедуры

//==========Создание документов в ЯШТ============================
Процедура КоманднаяПанель2ВыставитьСчета(Кнопка)

	Если Вопрос("Создать/перезаписать документы поступления доп.расходов?", РежимДиалогаВопрос.ДаНет, 30) <> КодВозвратаДиалога.Да Тогда
	    Возврат;
	КонецЕсли;
 	флПерезаписывать=Истина;
	СоздатьПоступлениеДопРасходов();

КонецПроцедуры

Процедура КоманднаяПанель2ВыгрузитьВБП(Кнопка)
	
	// 11.12.2015  !!!!
	Если ДокументыСданыЛогистам тогда
		ВыгрузитьДопРасходыВБП();
	КонецЕсли;
	
	ВыгрузитьОбраткиВПутевойЛист(НомерПутевогоЛиста); //номера ЗТ: или Реализаций!
	
КонецПроцедуры


Процедура таблЗаказыПробегПриИзменении(Элемент)
	текСтр = ЭлементыФормы.таблЗаказы.ТекущиеДанные;
	текСтр.Сумма = текСтр.Пробег * текСтр.Тариф;
КонецПроцедуры

Процедура таблЗаказыСуммаПриИзменении(Элемент)
	текСтр = ЭлементыФормы.таблЗаказы.ТекущиеДанные;
	текСтр.Тариф = ?(текСтр.Пробег=0, 0, текСтр.Сумма / текСтр.Пробег);
КонецПроцедуры
 
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	сум = таблЗаказы.Итог("Сумма");
	км  = таблЗаказы.Итог("Пробег");
	Если сум<>СуммаДокумента тогда
		СуммаДокумента = сум;
	КонецЕсли;
	Если км<>Километров тогда
		Километров = км;
	КонецЕсли;
	
КонецПроцедуры

Процедура таблЗаказыПриПолученииДанных(Элемент, ОформленияСтрок)
	Километров     = таблЗаказы.Итог("Пробег");	
	СуммаДокумента = таблЗаказы.Итог("Сумма");	
	Кнопка1Нажатие(неопределено);
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	Если таблЗаказы.Количество()=0 тогда
		стр1 = таблЗаказы.Добавить();
		стр1.Контрагент = Контрагент;
	ИначеЕсли таблЗаказы.Количество()=1 тогда
		стр1 = таблЗаказы[0];
		стр1.Контрагент = Контрагент;
	КонецЕсли;
	
КонецПроцедуры

Процедура КилометровПриИзменении(Элемент)
	Если таблЗаказы.Количество()=0 тогда
		текСтр = таблЗаказы.Добавить();
		текСтр.Пробег = Километров;
	ИначеЕсли таблЗаказы.Количество()=1 тогда
		текСтр = таблЗаказы[0];
		текСтр.Пробег = Километров;
	КонецЕсли;
	текСтр.Тариф = ?(текСтр.Пробег=0, 0, текСтр.Сумма / текСтр.Пробег);

КонецПроцедуры

Процедура СуммаДокументаПриИзменении(Элемент)
	Если таблЗаказы.Количество()=0 тогда
		текСтр = таблЗаказы.Добавить();
		текСтр.Сумма = СуммаДокумента;
	ИначеЕсли таблЗаказы.Количество()=1 тогда
		текСтр = таблЗаказы[0];
		текСтр.Сумма = СуммаДокумента;
	КонецЕсли;
	текСтр.Тариф = ?(текСтр.Пробег=0, 0, текСтр.Сумма / текСтр.Пробег);
КонецПроцедуры

Процедура НаправлениеПриИзменении(Элемент)
	Если таблЗаказы.Количество()=0 тогда
		текСтр = таблЗаказы.Добавить();
		текСтр.Направление = Направление;
	ИначеЕсли таблЗаказы.Количество()=1 тогда
		текСтр = таблЗаказы[0];
		текСтр.Направление = Направление;
	КонецЕсли;
КонецПроцедуры

Процедура ОсновнаяПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = 2 тогда
		КоманднаяПанель2Обновить(неопределено);
	КонецЕсли;	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Печать" командной панели
// формы. Процедура отрабатывает выбор печатной формы.
//
Процедура ДействияФормыДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ДействиеПечать.Текст = Кнопка.Текст;
		СтруктураМакета = Новый Структура("Макет, ПредставлениеМакета");
		СписокМакетов = ПолучитьСписокПечатныхФорм();
		СтрокаМакетаВСписке = СписокМакетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаМакетаВСписке <> Неопределено Тогда
			Печать(СтрокаМакетаВСписке.Значение);
			СтруктураМакета.Макет = СтрокаМакетаВСписке.Значение;
			СтруктураМакета.ПредставлениеМакета = СтрокаМакетаВСписке.Представление;			
			
		Иначе
			СсылкаВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрЗаменить(Кнопка.Имя, "_", "-")));
			Печать(СсылкаВнешнейФормы);
			СтруктураМакета.Макет = СсылкаВнешнейФормы;
			СтруктураМакета.ПредставлениеМакета = Кнопка.Текст;
		КонецЕсли;		
		
		мПечатнаяФормаПоУмолчанию = СтруктураМакета.Макет;
		СохранитьТекущуюКнопкуПечати(ЭтотОбъект.Метаданные().Имя, СтруктураМакета);
	КонецЕсли;

КонецПроцедуры // ДействияФормыДействиеВыбратьПечатнуюФормы()

Процедура ПоискНажатие(Элемент)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номер",НомерВходящегоДокумента);
	Запрос.УстановитьПараметр("Дата",ДатаВходящегоДокумента);
	Запрос.УстановитьПараметр("Дата1",НачалоДня(ДатаВходящегоДокумента));
	Запрос.УстановитьПараметр("Дата2",КонецДня(ТекущаяДата()));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслуг.Ссылка,
	               |	ПоступлениеТоваровУслуг.Дата КАК Дата
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |ГДЕ
	               |	ПоступлениеТоваровУслуг.ДатаВходящегоДокумента = &Дата
	               |	И ПоступлениеТоваровУслуг.НомерВходящегоДокумента = &Номер
	               |	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &Дата1 И &Дата2
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата";
	Рез = запрос.Выполнить().Выгрузить();
	Если Рез.Количество() > 0 тогда
		ДокументПоступления = рез[0].ссылка;
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номер",НомерВходящегоДокумента);
		Запрос.УстановитьПараметр("Дата",ДатаВходящегоДокумента);
		Запрос.УстановитьПараметр("Дата1",НачалоДня(ДатаВходящегоДокумента));
		Запрос.УстановитьПараметр("Дата2",КонецДня(ТекущаяДата()));
		Запрос.Текст = "ВЫБРАТЬ
		|	ПеремещениеТоваров.Ссылка,
		|	ПеремещениеТоваров.Дата КАК Дата
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ГДЕ
		//|	ПеремещениеТоваров.Дата = &Дата
		|	ПеремещениеТоваров.Номер = &Номер
		|	И ПеремещениеТоваров.Дата МЕЖДУ &Дата1 И &Дата2
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
		Рез2 = запрос.Выполнить().Выгрузить();
		
		Если Рез.Количество() > 0 тогда
		    ДокументПоступления = рез[0].ссылка;
		Иначе
			Сообщить("Не удалось найти документ!!!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры



//+++ 15.04.2015 - переменные Для переноса в БП
Воробьев   = справочники.Контрагенты.НайтиПоКоду( "93833" );
Землянский = справочники.Контрагенты.НайтиПоКоду( "00216" );
Соединение = Неопределено;
