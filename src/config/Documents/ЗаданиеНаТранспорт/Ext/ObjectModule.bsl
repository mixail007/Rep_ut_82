
Процедура ОбработкаЗаполнения(ДанныеЗаполнения)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		// Заполнение шапки
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		// Заполнение шапки
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаТранспорт") Тогда
		// Заполнение шапки
		Организация = Справочники.Организации.НайтиПоКоду("00001");
		ВесМакс = ДанныеЗаполнения.Вес;
		ЗаявкаНаТранспорт = ДанныеЗаполнения.Ссылка;
		Направление = ДанныеЗаполнения.Направление;
		ОбъемМакс = ДанныеЗаполнения.Объем;
		Контрагент = ДанныеЗаполнения.Контрагент;
		СуммаДокумента = ДанныеЗаполнения.Сумма;
		Километров = ДанныеЗаполнения.Пробег;
		Водитель = ДанныеЗаполнения.Водитель;
		ГосНомерАвтомобиля = ДанныеЗаполнения.ГосНомер; 
		ТелефонВодителя = ДанныеЗаполнения.ТелефонВодителя;
		Контрагент = "Яршинторг";
		
		НовСтр = таблЗаказы.Добавить();
		НовСтр.Направление = ДанныеЗаполнения.Направление;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	
	Выполнено = ЛОЖЬ;
		
	//+++ 17.06.2015 - обнуление реквизитов для тр.затрат
	ДокументыСданыЛогистам = ЛОЖЬ;
	ВсеДокументыСданыВБухгалтерию = ЛОЖЬ;
	Тариф=0;
	Километров=0;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования) 
	
	Выполнено = ЛОЖЬ;
		
	//+++ 17.06.2015 - обнуление реквизитов для тр.затрат
	ДокументыСданыЛогистам = ЛОЖЬ;
	ВсеДокументыСданыВБухгалтерию = ЛОЖЬ;
	Тариф=0;
	Километров=0;

КонецПроцедуры
 
Функция ПолучитьРегионКонтрагента(фактАдрес=истина) Экспорт
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	КонтактнаяИнформация.Поле2 ОбластьКонтрагента,
	|	КонтактнаяИнформация.Поле4 ГородКонтрагента
	|ИЗ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ КонтактнаяИнформация.Объект = &Контрагент
	|	И КонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Если фактАдрес Тогда
		Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	Иначе
		Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	КонецЕсли;
	
	Выборка=Запрос.Выполнить().Выбрать();
	Если  Выборка.Следующий() Тогда
		Возврат ?(ЗначениеНеЗаполнено (Выборка.ГородКонтрагента),Выборка.ОбластьКонтрагента,Выборка.ГородКонтрагента);
	Иначе
		Возврат "";
	КонецЕсли;	 
	 
КонецФункции

 функция ПечатьПропуск()
	ТабДокумент = новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Пропуск");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакета.Параметры.Номер = ЭтотОбъект.Номер;
	ОбластьМакета.Параметры.дата = Формат(макс(ЭтотОбъект.Дата,ЭтотОбъект.ВремяНапоминания),"ДФ='dd MMMM yyyy""г."" hh:mm'");
	ОбластьМакета.Параметры.АвтомобильГосНомерАвтомобиля =  СокрЛП(ЭтотОбъект.МаркаАвтомобиля) 
										+ " "+СокрЛП(ЭтотОбъект.ГосНомерАвтомобиля);
	ОбластьМакета.Параметры.Водитель = СокрЛП(ЭтотОбъект.Водитель);
	
	ТабДокумент.Вывести(ОбластьМакета);
	//ТабДокумент.Вывести(ОбластьМакета);
	//ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет; // 15.10.2015 ВСЕГДА так!
	
	Возврат ТабДокумент;
	
КонецФункции


#Если Клиент Тогда
	
// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСписокПечатныхФорм() экспорт 

	СписокМакетов = Новый СписокЗначений;
	СписокМакетов.Добавить("Пропуск",	  "Пропуск (для водителя)");
    ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
	Возврат СписокМакетов;

КонецФункции // ПолучитьСписокПечатныхФорм()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = ЛОЖЬ) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи.");
		Возврат;
	ИначеЕсли Не РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно прав для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если ЭтотОбъект.Модифицированность() и ЭтотОбъект.Проведен Тогда
		Если РольДоступна("ПолныеПрава") Тогда
			Если Вопрос("Документ изменен. Перед печатью его необходимо записать.
						   |Записать документ?",РежимДиалогаВопрос.ДаНет, 10) = КодВозвратаДиалога.Нет Тогда
						   Возврат;
			КонецЕсли;			   
			ЭтотОбъект.Записать();
		КонецЕсли;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если ТипЗнч(ИмяМакета) = Тип("СправочникСсылка.ДополнительныеПечатныеФормы") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = ИмяМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней печатной формы документа.", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = Ссылка;
		ТабДокумент = Обработка.Печать();	
		
	ИначеЕсли ИмяМакета="Пропуск" Тогда
		   ТабДокумент = ПечатьПропуск();
	 КонецЕсли;

	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект));

КонецПроцедуры // Печать

#КонецЕсли

Функция ПолучитьИнформациюПоПроезду() 
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ИнформацияПоПроезду.НомерОчереди,
	             |	ИнформацияПоПроезду.Контрагент КАК Контрагент,
	             |	ИнформацияПоПроезду.Заказ КАК ЗаказПокупателя,
	             |	ВЫРАЗИТЬ(ИнформацияПоПроезду.Адрес КАК СТРОКА(1000)) КАК АдресДоставки,
	             |	ИнформацияПоПроезду.Организация,
	             |	ИнформацияПоПроезду.СуммаЗаТоварНал,
	             |	ИнформацияПоПроезду.ДоставкаНал,
	             |	ИнформацияПоПроезду.ДоставкаБНал,
	             |	ИнформацияПоПроезду.ДоставкаВЦене,
	             |	ИнформацияПоПроезду.Менеджер КАК Менеджер,
	             |	ИнформацияПоПроезду.Комментарий,
	             |	ИнформацияПоПроезду.Объём,
	             |	ИнформацияПоПроезду.ВсеДокументыСданыВБухгалтерию
	             |ИЗ
	             |	РегистрСведений.ИнформацияПоПроезду КАК ИнформацияПоПроезду
	             |ГДЕ
	             |	ИнформацияПоПроезду.Задание = &Задание
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ИнформацияПоПроезду.НомерОчереди,
	             |	Контрагент,
	             |	Менеджер,
	             |	АдресДоставки
	             |АВТОУПОРЯДОЧИВАНИЕ";
				 Запрос.УстановитьПараметр("Задание",Ссылка);
				 Рез=Запрос.Выполнить().выгрузить();
Возврат рез;	 	 
КонецФункции
 
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	Если ЗначениеЗаполнено(ЗаявкаНаТранспорт) Тогда
		Об = ЗаявкаНаТранспорт.ПолучитьОбъект();
		Если ЗаявкаНаТранспорт.ДокументОтгрузки <> ЭтотОбъект.Ссылка Тогда
			Об.ДокументОтгрузки = ЭтотОбъект.Ссылка;
		КонецЕсли;
		Если ЗаявкаНаТранспорт.Статус = Перечисления.СтатусыЗаявокНаТранспорт.ПеревозчикВыбран Тогда
			Об.Статус = Перечисления.СтатусыЗаявокНаТранспорт.Доставлен;
		КонецЕсли;
		Об.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ	
КонецПроцедуры
