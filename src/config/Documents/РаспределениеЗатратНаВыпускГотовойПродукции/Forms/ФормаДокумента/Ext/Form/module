
перем ВсяГотПродукция, едИзм, мПечатнаяФормаПоУмолчанию;

процедура ЗаполнитьПоляПоУмолчанию()
	
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	Организация   = справочники.Организации.НайтиПоКоду("00001");
	Подразделение = справочники.Подразделения.НайтиПоНаименованию("Производство кованных дисков");
	Склад         = справочники.Склады.НайтиПоНаименованию("Ангар-Ковка");
	НомГруппаЗатрат    = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию("Производство кованных дисков");

	СпособРаспределенияДопЗатрат = перечисления.СпособыРаспределенияДопРасходов.ПоСумме;
		Дата = ТекущаяДата();
		ПериодРасчета = НачалоМесяца( Дата );
	    ВсяГотПродукция = 0;
КонецПроцедуры

Процедура ПриОткрытии()
	Если ЭтоНовый() тогда
		ЗаполнитьПоляПоУмолчанию();
	КонецЕсли;	
	ПериодСтр = формат(ПериодРасчета,"ДФ='MMMM yyyy'")+"г.";
	ОбновитьНадпись(ЛОЖЬ);
	
	СписокМакетов = ЭтотОбъект.ПолучитьСписокПечатныхФорм();
		
	УстановитьПодменюВыбораПечатнойФормы(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати,
	                                       СписокМакетов,
	                                       Новый Действие("ДействияФормыДействиеВыбратьПечатнуюФормы"));

	// Установить печатную форму по умолчанию.
	УстановитьКнопкуПечати(ЭтотОбъект.Метаданные().Имя, ЭтаФорма, СписокМакетов, мПечатнаяФормаПоУмолчанию);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Печать" командной панели
// формы. Процедура отрабатывает выбор печатной формы.
//
Процедура ДействияФормыДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ДействиеПечать.Текст = Кнопка.Текст;
		СтруктураМакета = Новый Структура("Макет, ПредставлениеМакета");
		СписокМакетов = ПолучитьСписокПечатныхФорм();
		СтрокаМакетаВСписке = СписокМакетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаМакетаВСписке <> Неопределено Тогда
			Печать(СтрокаМакетаВСписке.Значение);
			СтруктураМакета.Макет = СтрокаМакетаВСписке.Значение;
			СтруктураМакета.ПредставлениеМакета = СтрокаМакетаВСписке.Представление;			
			
		Иначе
			СсылкаВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрЗаменить(Кнопка.Имя, "_", "-")));
			Печать(СсылкаВнешнейФормы);
			СтруктураМакета.Макет = СсылкаВнешнейФормы;
			СтруктураМакета.ПредставлениеМакета = Кнопка.Текст;
		КонецЕсли;		
		
		мПечатнаяФормаПоУмолчанию = СтруктураМакета.Макет;
		СохранитьТекущуюКнопкуПечати(ЭтотОбъект.Метаданные().Имя, СтруктураМакета);
	КонецЕсли;

КонецПроцедуры // ДействияФормыДействиеВыбратьПечатнуюФормы()


процедура ОбновитьНадпись(ПолучатьДокументы = Истина)
	
	Если ПолучатьДокументы тогда
	ДокументыВыпускаПродукции.Очистить();
	таблДок = мПолучитьДокументы();	
	ДокументыВыпускаПродукции.Загрузить( таблДок );	 
	КонецЕсли;
	 
	ВсяГотПродукция=ДокументыВыпускаПродукции.Итог("ВсяГотПродукция"); едИзм = "";
	Если СпособРаспределенияДопЗатрат = перечисления.СпособыРаспределенияДопРасходов.ПоСумме тогда едИзм = "р.";
	ИначеЕсли СпособРаспределенияДопЗатрат = перечисления.СпособыРаспределенияДопРасходов.ПоКоличеству тогда едИзм ="шт.";
	ИначеЕсли СпособРаспределенияДопЗатрат = перечисления.СпособыРаспределенияДопРасходов.ПоВесу тогда	едИзм ="кг";
	КонецЕсли;
	 
	ЭлементыФормы.Надпись1.Заголовок = "Распределение на "+строка(ВсяГотПродукция) + едИзм+" ("+строка(ДокументыВыпускаПродукции.Количество())+" док)";
	
КонецПроцедуры

Процедура СпособРаспределенияДопЗатратПриИзменении(Элемент)
	ОбновитьНадпись(ЛОЖЬ);
КонецПроцедуры

Процедура ДокументыВыпускаПродукцииПриПолученииДанных(Элемент, ОформленияСтрок)
	ВсяГотПродукция = ДокументыВыпускаПродукции.Итог("ВсяГотПродукция");
	для каждого стр1 из ОформленияСтрок цикл
		стр1.Ячейки.Доля.ОтображатьТекст = истина;
		стр1.Ячейки.Доля.Текст = формат(100*стр1.ДанныеСтроки.ВсяГотПродукция / ВсяГотПродукция,"ЧДЦ=1")+"%";
	КонецЦикла;	
КонецПроцедуры


Процедура ДокументыВыпускаПродукцииВсяГотПродукцияПриИзменении(Элемент)
	ОбновитьНадпись(ЛОЖЬ);
КонецПроцедуры


Процедура КоманднаяПанель2Получить(Кнопка)
	ОбновитьНадпись();
КонецПроцедуры


Процедура МатериалыНоменклатураПриИзменении(Элемент)
	
	стр1 = ЭлементыФормы.Материалы.ТекущиеДанные;
	
	резКолЦена = получитьОстаткиВПроизводствеСебестоимость(стр1.Номенклатура); //03.08.2018
	стр1.Остаток = резКолЦена.Остаток;
	стр1.Цена    = резКолЦена.Цена;
	
	стр1.ОстатокФакт = стр1.Остаток;
	стр1.Количество = 0; 
	
	стр1.Сумма		= стр1.Количество * стр1.Цена;
	
	//ФИКС. СТАТЬИ - как в Требовании накладной!
	стр1.СтатьяЗатрат    = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Производство кованных дисков");
	стр1.СтатьяЗатратУПР = Справочники.СтатьиЗатратУПР.НайтиПоНаименованию("Производство кованных дисков");

КонецПроцедуры

//03.08.2018
функция получитьОстаткиВПроизводствеСебестоимость(тов)
	
	рез = новый Структура;
	рез.Вставить("Остаток", 0);
	рез.Вставить("Цена", 0);
	
	ДатаСреза = этотОбъект.Дата - 1;  //на секунду раньше
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	НезавершенноеПроизводствоОстатки.Номенклатура,
		|	НезавершенноеПроизводствоОстатки.КоличествоОстаток КАК Остаток,
		|	ВЫБОР
		|		КОГДА НезавершенноеПроизводствоОстатки.КоличествоОстаток <> 0
		|			ТОГДА НезавершенноеПроизводствоОстатки.СуммаОстаток / НезавершенноеПроизводствоОстатки.КоличествоОстаток
		|		ИНАЧЕ НезавершенноеПроизводствоОстатки.СуммаОстаток
		|	КОНЕЦ КАК Цена
		|ИЗ
		|	РегистрНакопления.НезавершенноеПроизводство.Остатки(&ДатаСреза, Номенклатура = &Тов) КАК НезавершенноеПроизводствоОстатки"; 
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	Запрос.УстановитьПараметр("Тов", Тов);
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() тогда // нет незавершенки, остаток = 0, берем себестоимость по всем незапрещенным Ярославским складам
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	себест.Номенклатура,
		|	0 КАК Остаток,
		|	ВЫБОР
		|		КОГДА себест.КоличествоОстаток <> 0
		|			ТОГДА себест.СтоимостьОстаток / себест.КоличествоОстаток
		|		ИНАЧЕ себест.СтоимостьОстаток
		|	КОНЕЦ КАК Цена
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаСреза,
		|			Склад.Транзитный = ЛОЖЬ
		|			И Склад.ЗапретитьИспользование = ЛОЖЬ
		|			И Номенклатура = &Тов) КАК себест";
		Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
		Запрос.УстановитьПараметр("Тов", Тов);
		Результат = Запрос.Выполнить();
	КонецЕсли;
	
	выборка = Результат.Выбрать();
	Если выборка.Следующий() тогда
		ЗаполнитьЗначенияСвойств( рез, выборка );
	КонецЕсли;
	
	возврат рез;
	
КонецФункции
  
Процедура ПериодПриИзменении(Элемент)
	ПериодРасчета = НачалоМесяца( ПериодРасчета );	
	ПериодСтр = формат(ПериодРасчета, "ДФ='MMMM yyyy'")+"г.";
	ОбновитьНадпись();
КонецПроцедуры

Процедура ПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка=ЛОЖЬ;
	Элемент.Значение = ДобавитьМесяц(Элемент.Значение, Направление);
	ПериодПриИзменении(Элемент);
КонецПроцедуры


Процедура ДействияФормыяСтруктураПодчиненности(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры


Процедура КоманднаяПанель1Заполнить(Кнопка)
	Если ДопЗатраты.Количество()>0 тогда
		Если Вопрос("Очистить таблицу затрат перед заполнением?",РежимДиалогаВопрос.ДаНет,0)=КодВозвратаДиалога.Да тогда
			ДопЗатраты.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗатратыОбороты.СтатьяЗатрат,
	               |	ЗатратыОбороты.СтатьяЗатратУпр,
	               |	СУММА(ЗатратыОбороты.СуммаОборот) КАК Сумма
	               |ИЗ
	               |	РегистрНакопления.Затраты.Обороты(&ДатаНач, &ДатаКон, Регистратор, Подразделение = &Подразделение) КАК ЗатратыОбороты
	               |ГДЕ
	               |	НЕ ЗатратыОбороты.Регистратор ССЫЛКА Документ.ТребованиеНакладная
	               |	И ЗатратыОбороты.СуммаОборот <> 0
	               |//Усл
	               |СГРУППИРОВАТЬ ПО
	               |	ЗатратыОбороты.СтатьяЗатрат,
	               |	ЗатратыОбороты.СтатьяЗатратУпр";
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца( ПериодРасчета ));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца( ПериодРасчета ));
	Запрос.УстановитьПараметр("Подразделение", Подразделение); // не материальные затраты - "падают" без ном.группы?!
//	Запрос.УстановитьПараметр("НомГруппаМатЗатрат", НомГруппаЗатрат); // БЕЗ материальных затрат, которые "падают" на ном.группу затрат?!
	Если Проведен тогда
		Запрос.Текст = СтрЗаменить( Запрос.Текст,"//Усл", " И Регистратор <> &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", Ссылка); // не материальные затраты - "падают" без ном.группы?!
	КонецЕсли;
	Результат  = Запрос.Выполнить();
	Выборка  = Результат.Выбрать();
	пока Выборка.Следующий() цикл
		стр1 = ДопЗатраты.Добавить();
		ЗаполнитьЗначенияСвойств( стр1, Выборка );
	КонецЦикла;

КонецПроцедуры

//по незавершенке
Процедура КоманднаяПанель3Заполнить(Кнопка)
	
	ДатаКон = КонецМесяца( ПериодРасчета );				   
	Если Проведен и Дата <= ДатаКон тогда
		Предупреждение("Текущий документ - проведен! Невозможно правильно сформировать остатки Материалов в производстве! Отмените проведение и повторите заполнение...", 30);
		Возврат;
	КонецЕсли;
	
	Если Материалы.Количество()>0 тогда
		Если Вопрос("Очистить таблицу Материалы перед заполнением?",РежимДиалогаВопрос.ДаНет,0)=КодВозвратаДиалога.Да тогда
			Материалы.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НезавершенноеПроизводствоОстатки.Номенклатура,
	               |	НезавершенноеПроизводствоОстатки.КоличествоОстаток КАК Остаток,
	               |	НезавершенноеПроизводствоОстатки.КоличествоОстаток КАК ОстатокФакт,
	               |	0 КАК Количество,
	               |	ВЫРАЗИТЬ(НезавершенноеПроизводствоОстатки.СуммаОстаток / НезавершенноеПроизводствоОстатки.КоличествоОстаток КАК ЧИСЛО(15, 2)) КАК Цена,
	               |	0 КАК Сумма
	               |ИЗ
	               |	РегистрНакопления.НезавершенноеПроизводство.Остатки(&ДатаКон, ) КАК НезавершенноеПроизводствоОстатки";
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Результат  = Запрос.Выполнить();
	Выборка  = Результат.Выбрать();
	пока Выборка.Следующий() цикл
		стр1 = Материалы.Добавить();
		ЗаполнитьЗначенияСвойств( стр1, Выборка );
	КонецЦикла;
	
КонецПроцедуры

//--------------изменение полей - влечет изменение других полей в строке------------------
Процедура МатериалыОстатокФактПриИзменении(Элемент)
	текСтр = ЭлементыФормы.Материалы.ТекущиеДанные;
	текСтр.Количество = текСтр.Остаток - текСтр.ОстатокФакт;
	текСтр.Сумма = текСтр.Количество * текСтр.Цена;
КонецПроцедуры

Процедура МатериалыЦенаПриИзменении(Элемент)
	текСтр = ЭлементыФормы.Материалы.ТекущиеДанные;
	текСтр.Сумма = текСтр.Количество * текСтр.Цена;
КонецПроцедуры

Процедура МатериалыКоличествоПриИзменении(Элемент)
	текСтр = ЭлементыФормы.Материалы.ТекущиеДанные;
	текСтр.ОстатокФакт = текСтр.Остаток - текСтр.Количество;
	текСтр.Сумма = текСтр.Количество * текСтр.Цена;
КонецПроцедуры

Процедура МатериалыСуммаПриИзменении(Элемент)
	текСтр = ЭлементыФормы.Материалы.ТекущиеДанные;
	текСтр.Цена = ?(текСтр.Количество=0, текСтр.Сумма, Окр(текСтр.Сумма/текСтр.Количество,2) );
КонецПроцедуры


Процедура МатериалыПриПолученииДанных(Элемент, ОформленияСтрок)
	флАртикул = ЭлементыФормы.Материалы.Колонки.Артикул.Видимость;
	для каждого стр1 из ОформленияСтрок цикл
		стр1.Ячейки.Код.ОтображатьТекст = Истина;
		стр1.Ячейки.Код.Текст = стр1.Ячейки.Номенклатура.Значение.Код;
		Если флАртикул тогда
		стр1.Ячейки.Артикул.ОтображатьТекст = Истина;
		стр1.Ячейки.Артикул.Текст = стр1.Ячейки.Номенклатура.Значение.Код;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры


Процедура ДокументыВыпускаПродукцииВыпускПродукцииПриИзменении(Элемент)
	текСтр = ЭлементыФормы.ДокументыВыпускаПродукции.ТекущиеДанные;
	текСтр.ВсяГотПродукция = текСтр.ВыпускПродукции.ВсяГотПродукция;
	ОбновитьНадпись(ЛОЖЬ);
КонецПроцедуры

