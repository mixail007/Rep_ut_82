перем мВалютаРегламентированногоУчета, мВалютаУпрУчета;

#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьДокумента()

	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Артикул";
		ТекстКодАртикул = "Артикул";
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Код";
		ТекстКодАртикул = "Код";
	Иначе
		ВыводитьКоды    = Ложь;
		Колонка         = "";
		ТекстКодАртикул = "Код";
	КонецЕсли;

	Если ВыводитьКоды Тогда
		ОбластьШапки  = "ШапкаСКодом";
		ОбластьСтроки = "СтрокаСКодом";
	Иначе
		ОбластьШапки  = "ШапкаТаблицы";
		ОбластьСтроки = "Строка";
	Конецесли;

	Запрос = Новый Запрос;
	Если Склад.ВидСклада = Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка Тогда
		ВалютаПечати = мВалютаРегламентированногоУчета;
	Иначе
		ВалютаПечати = мВалютаУпрУчета;
	КонецЕсли;

	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	Организация,
	|	Склад.Представление КАК ПредставлениеСклада,
	|	Организация,
	|	Склад,
	|	Материалы.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Номенклатура."+ ТекстКодАртикул + " КАК КодАртикул,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	//+++ тут именно так!
	|		ОстатокФакт            КАК Количество,
	|		Остаток            КАК КоличествоПоУчету,
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаИзмерения,
	|		Цена,
	|		ОстатокФакт * Цена как Сумма,
	|		Остаток * Цена                    КАК СуммаПоУчету,
	|		Значение(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|		Значение(Справочник.СерииНоменклатуры.ПустаяСсылка)          КАК Серия
	|	)
	|ИЗ
	|	Документ.РаспределениеЗатратНаВыпускГотовойПродукции КАК ИнвентаризацияТоваровНаСкладе
	|
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Материалы.НомерСтроки
	|";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Материалы.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РаспределениеЗатратНаВыпускГотовойПродукции_ИнвентаризацияТоваровНаСкладе";

	Макет = ПолучитьМакет("ИнвентаризацияТоваровНаСкладе");

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, "Распределение затрат на выпуск готовой продукции");
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим данные об организации и складе
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,");
	ОбластьМакета.Параметры.ВалютаНаименование = ВалютаПечати.Наименование;
	ОбластьМакета.Параметры.Валюта             = ВалютаПечати;
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим шапку таблицы
	ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
	Если ВыводитьКоды Тогда
		ОбластьМакета.Параметры.Колонка = Колонка;
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета    = Макет.ПолучитьОбласть(ОбластьСтроки);
	ИтогСуммы        = 0;
	ИтогСуммыПоУчету = 0;

	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.Товар = ВыборкаСтрокТовары.Товар + ПредставлениеСерий(ВыборкаСтрокТовары);

		Если ВыводитьКоды Тогда
			ОбластьМакета.Параметры.КодАртикул = ВыборкаСтрокТовары.КодАртикул;
		КонецЕсли;

		ИтогСуммы        = ИтогСуммы        + ВыборкаСтрокТовары.Сумма;
		ИтогСуммыПоУчету = ИтогСуммыПоУчету + ВыборкаСтрокТовары.СуммаПоУчету;

		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;

	// Вывести Итого
	ОбластьМакета                        = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Всего        = ФорматСумм(ИтогСуммы);
	ОбластьМакета.Параметры.ВсегоПоУчету = ФорматСумм(ИтогСуммыПоУчету);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подписи к документу
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьДокумента()

// ТекстОписания
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
Функция ПечатьИНВ3()

	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;

	Если Склад.ВидСклада = Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка Тогда
		ВалютаПересчета = мВалютаРегламентированногоУчета;
	Иначе
		ВалютаПересчета = мВалютаУпрУчета;
	КонецЕсли;

	ВалютаПечати = мВалютаРегламентированногоУчета;
	Параметры    = ПолучитьКурсВалюты(ВалютаПересчета, Дата);
	Запрос       = Новый Запрос;

	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Курс",            Параметры.Курс);
	Запрос.УстановитьПараметр("Кратность",       Параметры.Кратность);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер КАК НомерДокумента,
	|	Дата  КАК ДатаДокумента,
	|	Дата  КАК ДатаСнятияОстатков,
	|	Организация,
	|	Склад.Представление КАК ПредставлениеСклада,
	|	Материалы.(
	|		НомерСтроки                     КАК Номер,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|		Номенклатура." + ТоварКод + "   КАК ТоварКод,
//+++ тут именно так!
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаИзмеренияНаименование,
	|		Номенклатура.БазоваяЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		Цена      * &Курс / &Кратность КАК Цена,
	|		ОстатокФакт     КАК ФактКоличество,
	|		Остаток			 КАК БухКоличество,
	|		ОстатокФакт*Цена     * &Курс / &Кратность КАК ФактСумма,
	|		Остаток * Цена * &Курс / &Кратность КАК БухСумма,
	|		Значение(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|		Значение(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|	)
	|ИЗ
	|	Документ.РаспределениеЗатратНаВыпускГотовойПродукции КАК ИнвентаризацияТоваровНаСкладе
	|
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Материалы.НомерСтроки
	|";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Материалы.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РаспределениеЗатратНаВыпускГотовойПродукции_ИНВ3";
	Макет       = ПолучитьОбщийМакет("ИНВ3");

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	СведенияОбОрганизации = СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОбОрганизации);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.ДатаСнятияОстатков       = Шапка.ДатаСнятияОстатков;
	ОбластьМакета.Параметры.НомерДокумента           = ПолучитьНомерНаПечать(ЭтотОбъект);
	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	СтрокНаСтранице = 19;
	СтрокШапки      = 5;
	СтрокПодвала    = 5;
	НомерСтраницы   = 2;
	Ном             = 0;

	ИтогФактКоличество = 0;
	ИтогФактСумма      = 0;
	ИтогБухКоличество  = 0;
	ИтогБухСумма       = 0;

	КолвоСтрокПоСтранице = 0;
	КолвоПостранице      = 0;
	СуммаЛиста           = 0;
	ИтогоКолво           = 0;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// Выводим многострочную часть докмента
	ВыборкаСтрокТовары = Шапка.Материалы.Выбрать();
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице                               = Макет.ПолучитьОбласть("ПодвалСтраницы");
			ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество = ИтогФактКоличество;
			ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма      = ИтогФактСумма;
			ОбластьИтоговПоСтранице.Параметры.ИтогоБухКоличество  = ИтогБухКоличество;
			ОбластьИтоговПоСтранице.Параметры.ИтогоБухСумма       = ИтогБухСумма;

			ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
			ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = КоличествоПрописью(КолвоПостранице);
			ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью                 = СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);

			ИтогФактКоличество = 0;
			ИтогФактСумма      = 0;
			ИтогБухКоличество  = 0;
			ИтогБухСумма       = 0;

			КолвоСтрокПоСтранице = 0;
			КолвоПостранице      = 0;
			СуммаЛиста           = 0;

		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование + ПредставлениеСерий(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.Номер             = Ном;

		ТабДокумент.Вывести(ОбластьМакета);

		ИтогФактКоличество = ИтогФактКоличество + ВыборкаСтрокТовары.ФактКоличество;
		ИтогФактСумма      = ИтогФактСумма      + ВыборкаСтрокТовары.ФактСумма;
		ИтогБухКоличество  = ИтогБухКоличество  + ВыборкаСтрокТовары.БухКоличество;
		ИтогБухСумма       = ИтогБухСумма       + ВыборкаСтрокТовары.БухСумма;
		ИтогоКолво         = ИтогоКолво         + ВыборкаСтрокТовары.ФактКоличество;

		КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
		КолвоПостранице      = КолвоПостранице      + ВыборкаСтрокТовары.ФактКоличество;
		СуммаЛиста           = СуммаЛиста           + ВыборкаСтрокТовары.ФактСумма;

	КонецЦикла;

	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество  = ИтогФактКоличество;
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма       = ИтогФактСумма;
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухКоличество   = ИтогБухКоличество;
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухСумма        = ИтогБухСумма;
	ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
	ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = КоличествоПрописью(КолвоПостранице);
	ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью                 = СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

	// Выводим подвал документа
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписи");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НачальныйНомерПоПорядку = 1;
	ОбластьМакета.Параметры.НомерКонца              = ВыборкаСтрокТовары.Количество();
	ОбластьМакета.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = КоличествоПрописью(ИтогоКолво);
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0");
	ОбластьМакета.Параметры.СуммаФактическиНаСтраницеПрописью                 = СформироватьСуммуПрописью(ИтогФактСумма, ВалютаПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху  = 0;
	ТабДокумент.ПолеСлева   = 0;
	ТабДокумент.ПолеСнизу   = 0;
	ТабДокумент.ПолеСправа  = 0;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьИНВ3()

// ТекстОписания
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
Функция ПечатьИНВ19()

	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	Если Склад.ВидСклада = Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка Тогда
		ВалютаПересчета = мВалютаРегламентированногоУчета;
	Иначе
		ВалютаПересчета = мВалютаУпрУчета;
	КонецЕсли;

	ВалютаПечати = мВалютаРегламентированногоУчета;
	Параметры    = ПолучитьКурсВалюты(ВалютаПересчета, Дата);
	Запрос       = Новый Запрос;

	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Курс",            Параметры.Курс);
	Запрос.УстановитьПараметр("Кратность",       Параметры.Кратность);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер  КАК НомерДокумента,
	|	Дата   КАК ДатаДокумента,
	|	Дата   КАК ДатаНачалаИнвентаризации,
	|	Организация КАК Руководители,
	|	Организация,
	|	Склад.Представление КАК ПредставлениеСклада,
	|	Материалы.(
	|		НомерСтроки КАК Номер,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|		Номенклатура." + ТоварКод + "   КАК ТоварКод,
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаИзмеренияНаименование,
	|		Номенклатура.БазоваяЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		Цена      * &Курс / &Кратность КАК Цена,
	|		ОстатокФакт                     КАК ФактКоличество,
	|		Остаток		                    КАК БухКоличество,
	|		ОстатокФакт*Цена* &Курс / &Кратность КАК ФактСумма,
	|		Остаток*Цена * &Курс / &Кратность КАК БухСумма,
	|		Значение(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|		Значение(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия

	|	)
	|ИЗ
	|	Документ.РаспределениеЗатратНаВыпускГотовойПродукции КАК ИнвентаризацияТоваровНаСкладе
	|
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Материалы.НомерСтроки
	|";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Материалы.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РаспределениеЗатратНаВыпускГотовойПродукции_ИНВ19";
	Макет       = ПолучитьОбщийМакет("ИНВ19");

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	СведенияОбОрганизации = СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОбОрганизации);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.ДатаНачалаИнвентаризации = Шапка.ДатаНачалаИнвентаризации;
	ОбластьМакета.Параметры.НомерДокумента           = ПолучитьНомерНаПечать(ЭтотОбъект);

	Руководители = ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;

	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	СтрокНаСтранице = 19;
	СтрокШапки      = 5;
	СтрокПодвала    = 5;
	НомерСтраницы   = 2;
	Ном             = 0;

	ИтогоРезультатИзлишекКолво   = 0;
	ИтогоРезультатИзлишекСумма   = 0;
	ИтогоРезультатНедостачаКолво = 0;
	ИтогоРезультатНедостачаСумма = 0;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы1");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// Выводим многострочную часть докмента
	ВыборкаСтрокТовары = Шапка.Материалы.Выбрать();
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы1");
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоТаблицы1");
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);

		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование + ПредставлениеСерий(ВыборкаСтрокТовары);

		Разница     = 0;
		РазницаСумм = 0;

		Разница     = ВыборкаСтрокТовары.ФактКоличество - ВыборкаСтрокТовары.БухКоличество; 
		РазницаСумм = ВыборкаСтрокТовары.ФактСумма      - ВыборкаСтрокТовары.БухСумма;      
		Если Разница = 0 Тогда
			Продолжить;
		КонецЕсли;

		Если Разница < 0 Тогда
			ОбластьМакета.Параметры.РезультатНедостачаКолво = - Разница;
			ОбластьМакета.Параметры.РезультатНедостачаСумма = - РазницаСумм;
			ОбластьМакета.Параметры.РезультатИзлишекКолво   = 0;
			ОбластьМакета.Параметры.РезультатИзлишекСумма   = 0;

			ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво + (- Разница);
			ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма + (- РазницаСумм);
			ИтогоРезультатИзлишекКолво   = ИтогоРезультатИзлишекКолво   + 0;
			ИтогоРезультатИзлишекСумма   = ИтогоРезультатИзлишекСумма   + 0;
		Иначе
			ОбластьМакета.Параметры.РезультатНедостачаКолво = 0;
			ОбластьМакета.Параметры.РезультатНедостачаСумма = 0;
			ОбластьМакета.Параметры.РезультатИзлишекКолво   = Разница;
			ОбластьМакета.Параметры.РезультатИзлишекСумма   = РазницаСумм;

			ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво + 0;
			ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма + 0;
			ИтогоРезультатИзлишекКолво   = ИтогоРезультатИзлишекКолво   + Разница;
			ИтогоРезультатИзлишекСумма   = ИтогоРезультатИзлишекСумма   + РазницаСумм;
		КонецЕсли;

		ТабДокумент.Вывести(ОбластьМакета);

		Ном = Ном + 1;

	КонецЦикла;

	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоТаблицы1");
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатИзлишекКолво   = ИтогоРезультатИзлишекКолво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатИзлишекСумма   = ИтогоРезультатИзлишекСумма;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма;
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.ФИОБухгалтера =  Бухгалтер;
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху    = 0;
	ТабДокумент.ПолеСлева     = 0;
	ТабДокумент.ПолеСнизу     = 0;
	ТабДокумент.ПолеСправа    = 0;
	ТабДокумент.АвтоМасштаб   = Ложь;
	ТабДокумент.МасштабПечати = 92;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;

КонецФункции // ПечатьИНВ19()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;

	Если Не ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	мВалютаРегламентированногоУчета = константы.ВалютаРегламентированногоУчета.Получить();
	мВалютаУпрУчета = константы.ВалютаУправленческогоУчета.Получить();
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Ведомость" Тогда

		// Печать упр. формы документа
		ТабДокумент = ПечатьДокумента();
	ИначеЕсли ИмяМакета = "ИНВ3" тогда

		// Печать униф. формы ИНВ-3
		ТабДокумент = ПечатьИНВ3();
		
	ИначеЕсли ИмяМакета = "ИНВ19" тогда

		// Печать униф. формы ИНВ-19
		ТабДокумент = ПечатьИНВ19();
		
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("СправочникСсылка.ДополнительныеПечатныеФормы") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = ИмяМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = Ссылка;
		ТабДокумент = Обработка.Печать();

	КонецЕсли; 

	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()));

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСписокПечатныхФорм() Экспорт

	СписокМакетов = Новый СписокЗначений;

	СписокМакетов.Добавить("Ведомость", "Инвентаризация товаров на складе");
	СписокМакетов.Добавить("ИНВ3", "ИНВ-3 (Инвентаризационная опись товаров)");
	СписокМакетов.Добавить("ИНВ19", "ИНВ-19 (Сличительная ведомость)");

	ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
	Возврат СписокМакетов;

КонецФункции // ПолучитьСписокПечатныхФорм()

#КонецЕсли


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
//+++ Свои движения ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	// регистр НезавершенноеПроизводство Приход
	Движения.НезавершенноеПроизводство.Записывать = Истина;
	таблМат = Материалы.Выгрузить();
	таблМат.Свернуть("Номенклатура", "Количество, Сумма");  //без дублей по материалам
	Для Каждого ТекСтрокаМатериалы Из  таблМат Цикл
		Движение = Движения.НезавершенноеПроизводство.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаМатериалы.Номенклатура;
		Движение.Количество = ТекСтрокаМатериалы.Количество;
		Движение.Сумма = ТекСтрокаМатериалы.Сумма;
	КонецЦикла;

	// регистр Затраты Материалов ( + ) 
	Движения.Затраты.Записывать = Истина;
	для каждого стрМ из Материалы цикл 	
		Движение = Движения.Затраты.Добавить();
		Движение.Период = Дата;
		
		Движение.Подразделение        = Подразделение;    // реквизит
		Движение.НоменклатурнаяГруппа = НомГруппаЗатрат;  // реквизит
		
		//может быть любая статья! - не Производство, а Недостача/Брак...
		Движение.СтатьяЗатрат         = стрМ.СтатьяЗатрат;      
		Движение.СтатьяЗатратУпр      = стрМ.СтатьяЗатратУПР;
		Движение.Сумма = стрМ.Сумма;
	КонецЦикла;

	
	
//=================Пересчет документов Выпуска ==========================================
таблДок = ДокументыВыпускаПродукции.Выгрузить();
ВсяГотПродукция = таблДок.Итог("ВсяГотПродукция");
	
Для каждого стр1 из таблДок цикл
	Если стр1.ВсяГотПродукция<=0 тогда
		#Если Клиент тогда
			сообщить("Документ: "+строка(стр1.ВыпускПродукции)+" не участвует в распределении доп.затрат!", СтатусСообщения.Внимание);
		#КонецЕсли	
		продолжить;
	КонецЕсли;	
	
	доля1 = стр1.ВсяГотПродукция / ВсяГотПродукция;
	док1  = стр1.ВыпускПродукции.ПолучитьОбъект();
	
	док1.СпособРаспределенияДопЗатрат = СпособРаспределенияДопЗатрат; //Единый для всех выбранных документов выпуска
	
	Для каждого стрЗатрат из ЭтотОбъект.ДопЗатраты цикл
		строки1 = док1.ДопЗатраты.найтиСтроки(новый Структура("СтатьяЗатрат, СтатьяЗатратУПР",стрЗатрат.СтатьяЗатрат, стрЗатрат.СтатьяЗатратУПР) );
		
		Если строки1.Количество()=0 тогда
			стрЗатрат1 = док1.ДопЗатраты.добавить();
			стрЗатрат1.СтатьяЗатрат = стрЗатрат.СтатьяЗатрат;
			стрЗатрат1.СтатьяЗатратУПР = стрЗатрат.СтатьяЗатратУПР;
		иначеЕсли строки1.Количество()=1 тогда
			стрЗатрат1 = строки1[0];
		иначе // не должно быть дублей строк по 2м полям!
			#Если Клиент тогда
				сообщить("В документе "+строка(док1)+" дублируются строки Затрат по СтатьяЗатрат, СтатьяЗатратУПР!", СтатусСообщения.Внимание);
			#КонецЕсли	
		КонецЕсли;	
		
		стрЗатрат1.Сумма = окр(стрЗатрат.Сумма * доля1,2); // до копеек!
		
	КонецЦикла;	
	
//---------материалы распределяются по той же схеме - пропорционально Доле --------------------
// а уже внутри выпуска - по количеству в спецификации на все товары готовой продукции
//
	Для каждого стрМ из ЭтотОбъект.Материалы цикл
		строки1 = док1.Материалы.найтиСтроки(новый Структура("Номенклатура", стрМ.Номенклатура) ); //СтатьяМатЗатрат, СтатьяМатЗатратУПР - фикс!
		
		Если строки1.Количество()<=1 тогда
			стр1 = док1.Материалы.Добавить();
			стр1.Номенклатура = стрМ.Номенклатура;
			стр1.Распределяется = ИСТИНА;
		Иначе //Если строки1.Количество()>=2 тогда //уже была корректировка! идёт дублем строки по той же номенклатуре
			стр1 = неопределено;
			для i=0 по строки1.Количество()-1 цикл
				Если строки1[i].Распределяется тогда
					стр1 = строки1[i];
				КонецЕсли;
			КонецЦикла;	
			
			Если стр1 = неопределено тогда // нет строк для распределения?! тогда 2-я
			стр1 = строки1[1];
			КонецЕсли;
		
			#Если Клиент тогда
			Если строки1.Количество()>2 тогда
				сообщить("Материал "+строка(стрМ.Номенклатура)+" в документе "+строка(док1)+" повторяется "+строка(строки1.Количество())+" раз!", СтатусСообщения.Внимание);
			КонецЕсли;
			#КонецЕсли	
		КонецЕсли;
		
		стр1.Количество = стрМ.Количество * доля1;
		стр1.Сумма      = стрМ.Сумма * доля1;
		
	КонецЦикла;
	
	попытка
		док1.Записать(РежимЗаписиДокумента.Проведение); // перепроведение!
		#Если Клиент тогда
		Сообщить("Изменен документ: "+строка(док1), СтатусСообщения.Информация );
		#КонецЕсли
	исключение
		#Если Клиент тогда
		Сообщить("Ошибка при проведении документа: "+строка(док1)+" : "+ОписаниеОшибки(), СтатусСообщения.Внимание );
		#КонецЕсли
	КонецПопытки;
	
КонецЦикла;	 //-------------------------------------

//контроль копеек после распределения - пока не готов


//2) ----------перепроведение реализаций (изменение себестоимости продаж)----------------------
масРеализаций = ПолучитьРеализацииЗаПериодПоГотПродукции();
для i=0 по масРеализаций.Количество()-1 цикл
	док1 = масРеализаций[i].ПолучитьОбъект();
	попытка
		док1.Записать(РежимЗаписиДокумента.Проведение); // перепроведение!
		#Если Клиент тогда
		Сообщить("Изменен документ: "+строка(док1), СтатусСообщения.Информация );
		#КонецЕсли
	исключение
		#Если Клиент тогда
		Сообщить("Ошибка при проведении документа: "+строка(док1)+" : "+ОписаниеОшибки(), СтатусСообщения.Внимание );
		#КонецЕсли
	КонецПопытки;
КонецЦикла;	
	
	
// >> нужен стандарный ввод Списания / Оприходования по складу Готовой продукции?!
//	СкладГотовойПродукции = справочники.Склады.НайтиПоНаименованию("Ангар-Ковка");
//
КонецПроцедуры

функция мПолучитьДокументы() Экспорт
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ОтчетПроизводстваЗаСменуГотоваяПродукция.Ссылка как ВыпускПродукции,
	                |	ВЫБОР
	                |		КОГДА ОтчетПроизводстваЗаСменуГотоваяПродукция.СпособРаспределенияДопЗатрат = &СпособРаспределенияДопЗатрат
	                |			ТОГДА ОтчетПроизводстваЗаСменуГотоваяПродукция.ВсяГотПродукция
	                |		ИНАЧЕ -111
	                |	КОНЕЦ КАК ВсяГотПродукция
	                |ИЗ
	                |	Документ.ОтчетПроизводстваЗаСмену КАК ОтчетПроизводстваЗаСменуГотоваяПродукция
	                |ГДЕ
	                |	ОтчетПроизводстваЗаСменуГотоваяПродукция.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                |	И ОтчетПроизводстваЗаСменуГотоваяПродукция.Проведен
	                |	И ОтчетПроизводстваЗаСменуГотоваяПродукция.Организация = &Организация
	                |	И ОтчетПроизводстваЗаСменуГотоваяПродукция.Подразделение = &Подразделение";
	 
	 Запрос.УстановитьПараметр("Организация",   Организация );
	 Запрос.УстановитьПараметр("Подразделение", Подразделение );
	 Запрос.УстановитьПараметр("СпособРаспределенияДопЗатрат",СпособРаспределенияДопЗатрат);
	  
	 Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца( ПериодРасчета ) );
	 Запрос.УстановитьПараметр("ДатаКон", КонецМесяца( ПериодРасчета )  );
	 
	 Результат = Запрос.Выполнить();
	 табл      = Результат.Выгрузить();	 
	 
	Для каждого стр1 из табл цикл
		Если стр1.ВсяГотПродукция<=0 тогда
			#Если Клиент тогда
				сообщить("В документе: "+строка(стр1.ВыпускПродукции)+" указан ДРУГОЙ способ распределения доп.затрат!", СтатусСообщения.Внимание);
			#КонецЕсли	
		КонецЕсли;	
		//---------------делаем новый пересчет!---------------------	
		Если СпособРаспределенияДопЗатрат = перечисления.СпособыРаспределенияДопРасходов.ПоСумме тогда
			ВсяГотПродукция1 =стр1.ВыпускПродукции.ГотоваяПродукция.Итог("СуммаПлан");  едИзм = "р.";
		ИначеЕсли СпособРаспределенияДопЗатрат = перечисления.СпособыРаспределенияДопРасходов.ПоКоличеству тогда
			ВсяГотПродукция1 =стр1.ВыпускПродукции.ГотоваяПродукция.Итог("Количество");едИзм= "шт.";
		ИначеЕсли СпособРаспределенияДопЗатрат = перечисления.СпособыРаспределенияДопРасходов.ПоВесу тогда
			ВсяГотПродукция1 = 0; едИзм = "кг.";
			Для каждого стрГ из стр1.ВыпускПродукции.ГотоваяПродукция цикл
				ВсяГотПродукция1 = ВсяГотПродукция1 + стрГ.Номенклатура.ЕдиницаХраненияОстатков.Вес * стрГ.Количество;
			КонецЦикла;
		КонецЕсли;
		//-----------меняем таблДок и ВсяГотПродукция ---------------------------
		стр1.ВсяГотПродукция = ВсяГотПродукция1;
		#Если Клиент тогда
		сообщить("   Выполнен автоматический расчет по документу >> "+строка(ВсяГотПродукция1)+едИзм, СтатусСообщения.Информация);
		#КонецЕсли	
	КонецЦикла;
	 
	 возврат табл;
	 
КонецФункции

функция ПолучитьРеализацииЗаПериодПоГотПродукции()
 мас = новый массив;
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ различные
	 |	РеализацияТоваровУслугТовары.Ссылка  как Реализация
	 |ИЗ
	 |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	 |ГДЕ
	 |	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	 |	И РеализацияТоваровУслугТовары.Ссылка.Проведен
	 |	И РеализацияТоваровУслугТовары.Номенклатура В("
	 +"ВЫБРАТЬ
  |	ОтчетПроизводстваЗаСменуГотоваяПродукция.Номенклатура
  |ИЗ
  |	Документ.ОтчетПроизводстваЗаСмену.ГотоваяПродукция КАК ОтчетПроизводстваЗаСменуГотоваяПродукция
  |ГДЕ
  |	ОтчетПроизводстваЗаСменуГотоваяПродукция.Ссылка В (&СписДок)"
  	+")";
	 Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца( ПериодРасчета ) );														
	 Запрос.УстановитьПараметр("ДатаКон", КонецМесяца( ПериодРасчета ) );														
	 Запрос.УстановитьПараметр("СписДок",  ДокументыВыпускаПродукции.ВыгрузитьКолонку("ВыпускПродукции") );
	 
	 Результат = Запрос.Выполнить();
	 табл = Результат.Выгрузить();	
	 мас = табл.ВыгрузитьКолонку("Реализация");
	 возврат мас;
КонецФункции