перем мас;

Процедура ПриОткрытии()
	
	Если ЭтоНовый() тогда
		Дата  = ТекущаяДата();
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	иначе
		БонусОтПродажПриИзменении(неопределено);
		ПроизводительПриИзменении(неопределено);
		ПериодГод = НачалоГода(ДатаС);
		проверитьДоступностьПоляПроцентБонуса();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьIDПравилаПоРеквизитам(ID, ном)
ID = 0; ном = 0;
   Запрос = Новый Запрос;
   Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
                  |	ПравилаЦенообразования.ID,
                  |	ПравилаЦенообразования.Приоритет + 1000 КАК Приоритет
                  |ИЗ
                  |	РегистрСведений.ПравилаЦенообразованияОбщие КАК ПравилаЦенообразования
                  |ГДЕ
                  |	ПравилаЦенообразования.Производитель = &Производитель
                  |	И ПравилаЦенообразования.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
                  |	И ПравилаЦенообразования.Категория <> Значение(Перечисление.КатегорииСкидок.ПустаяСсылка)
                  |
                  |УПОРЯДОЧИТЬ ПО
                  |	Приоритет УБЫВ
                  |АВТОУПОРЯДОЧИВАНИЕ";
   Запрос.УстановитьПараметр("Производитель", Производитель);                   
   Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
   Результат = Запрос.Выполнить();
   Выборка = Результат.Выбрать();
   Если Выборка.Следующий() тогда
	    ID = выборка.ID;
	   ном = выборка.Приоритет;
   КонецЕсли;
КонецПроцедуры

Процедура ОткрытьПравилаПоНомеру()
	Если НомерПравила = 0 тогда
		Предупреждение("Не определено правило для Ном.группы и Производителя!", 30);
		возврат;
	КонецЕсли;
	
	номерЧ = НомерПравила;

	ИмяФайла = ПолучитьИмяВременногоФайла();
	файл = новый файл(ИмяФайла);
	обр = справочники.ВнешниеОбработки.НайтиПоКоду("500"); 
	ДвоичныеДанные = обр.ХранилищеВнешнейОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяФайла);

	Обработка = ВнешниеОбработки.Создать(ИмяФайла);
	ФормаПравила = Обработка.ПолучитьФорму("Форма");
	Если Контрагент.Пустая() тогда 
		ФормаПравила.Контрагент = справочники.Контрагенты.НайтиПоКоду("90120"); // (Д) Автодизель без персональных правил...
	Иначе
		ФормаПравила.Контрагент = Контрагент;
	   КонецЕсли;	

	//	ФормаПравила.Открыть();  //возможно множественное открытие... 
	ФормаПравила.флТолькоПерсональные = ЛОЖЬ;
	ФормаПравила.КоманднаяПанель1Обновить(неопределено);
		
//28.09.2018	
	Если номерЧ=-5000 тогда 
		Предупреждение("Фикс.цена клиента!", 10);
	ИначеЕсли номерЧ=-7000 тогда 
		Предупреждение("Цена Распродажи!", 10);
	КонецЕсли;
	
	Если номерЧ=99999 тогда 
		Предупреждение("Используется мин.цена из константы!", 30);
	ИначеЕсли номерЧ=2000 тогда 
		Предупреждение("Используется заглушка Кр.Опт!", 30);
	Иначе
			
		стрВыбора = неопределено;
		для каждого стр1 из ФормаПравила.ДеревоПравил.Строки цикл
			для каждого стр2 из стр1.строки цикл 
			      Если стр2.НоменклатурнаяГруппа<>справочники.НоменклатурныеГруппы.ПустаяСсылка()
						  и стр2.НоменклатурнаяГруппа<>НоменклатурнаяГруппа тогда
						продолжить;
				  КонецЕсли;	
				для каждого стр3 из стр2.строки цикл //производитель
					 Если стр3.Производитель<>справочники.Производители.ПустаяСсылка()
						  и стр3.Производитель<>Производитель тогда
						продолжить;
					 КонецЕсли;	
					для каждого стр4 из стр3.строки цикл // правила!!!
						Если стр4.Приоритет = НомерЧ тогда
								стрВыбора = стр4;  			
						КонецЕсли;	
					КонецЦикла;	//4
					Если стрВыбора <> неопределено тогда прервать;
					КонецЕсли;	
				КонецЦикла;	//3
				Если стрВыбора <> неопределено тогда прервать;
				КонецЕсли;	
			КонецЦикла;	//2
			Если стрВыбора <> неопределено тогда прервать;
			КонецЕсли;	
		КонецЦикла;	//1
		
		Если стрВыбора <> неопределено тогда
		ФормаПравила.ЭлементыФормы.ДеревоПравил.текущаяСтрока = стрВыбора;
		КонецЕсли;
		
	КонецЕсли;
	ФормаПравила.Открыть();

КонецПроцедуры //ОткрытьПравилаПоНомеру()

процедура ПолучитьТаблВходнойПоID()
	ОбновитьТаблВходной();
КонецПроцедуры

процедура ОбновитьТаблВходной()
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ПравилаЦенообразованияВход.Вход,
	                |	ПравилаЦенообразованияВход.Бонус,
	                |	ПравилаЦенообразованияВход.b2b,
	                |	ЕстьNull(ПравилаЦенообразованияВход.СрокОплатыПоставщику, &ПустаяДата) как СрокОплатыПоставщику,
	                |	МЕСЯЦ(ПравилаЦенообразованияВход.Период) КАК Номер
	                |ИЗ
	                |	РегистрСведений.ПравилаЦенообразованияВход КАК ПравилаЦенообразованияВход
	                |ГДЕ
	                |	ПравилаЦенообразованияВход.ID = &ID
	                |	И ПравилаЦенообразованияВход.Период >= НачалоПериода(&Период,ГОД)
	                |	И ПравилаЦенообразованияВход.Период <= КонецПериода(&Период,ГОД)
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Номер
	                |АВТОУПОРЯДОЧИВАНИЕ";
	 Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	 Запрос.УстановитьПараметр("ID", IDправилаЦО);
	 Запрос.УстановитьПараметр("Период",ПериодГод );
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 таблВходнойПроцент.Очистить();
	 
	табл0 = ПолучитьСрез();	 
	
	 для i=0 по 3 цикл
		стр1 = таблВходнойПроцент.Добавить();
		стр1.Поле = мас[i];
					
		ном1=0; знач1=табл0[0][мас[i]]; // !
		для k=1 по 12 цикл //прошлогодние значения!
	 		стр1["Поле"+формат(k,"ЧЦ=2; ЧВН=")] = знач1;
		КонецЦикла;

		пока выборка.Следующий() цикл
			если ном1=0 тогда
				ном1 = выборка.номер; знач1 = выборка[мас[i]];
			иначе
				ном2 = выборка.номер;
				для k=ном1 по ном2-1 цикл
			 	стр1["Поле"+формат(k,"ЧЦ=2; ЧВН=")] = знач1;
				КонецЦикла;
				ном1 = выборка.номер; 
				//если выборка[мас[i]]<>0 тогда  //НЕ срез последних!
					знач1 = выборка[мас[i]];  
				//КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
		
		Если ном1=0 тогда  
			ном1=1;
		КонецЕсли;
		
		для k=ном1 по 12 цикл
	 	стр1["Поле"+формат(k,"ЧЦ=2; ЧВН=")] = знач1;
		КонецЦикла;
		
		выборка.Сбросить();
	 КонецЦикла;	 
	
КонецПроцедуры

функция ПолучитьСрез()
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ЕСТЬNULL(Правила.Вход, 0) КАК Вход,
	                |	ЕСТЬNULL(Правила.Бонус, 0) КАК Бонус,
	                |	ЕСТЬNULL(Правила.b2b, 0) КАК b2b,
	                |	ЕСТЬNULL(Правила.СрокОплатыПоставщику, 0) КАК СрокОплатыПоставщику,
	                |	вв.Код КАК Код
	                |ИЗ
	                |	Справочник.Валюты КАК вв
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                |			ПравилаЦенообразованияВход.Вход КАК Вход,
	                |			ПравилаЦенообразованияВход.Бонус КАК Бонус,
	                |			ПравилаЦенообразованияВход.b2b КАК b2b,
	                |			ПравилаЦенообразованияВход.СрокОплатыПоставщику КАК СрокОплатыПоставщику,
	                |			""643"" КАК КодРуб
	                |		ИЗ
	                |			РегистрСведений.ПравилаЦенообразованияВход.СрезПоследних(&Период, ID = &ID) КАК ПравилаЦенообразованияВход) КАК Правила
	                |		ПО вв.Код = Правила.КодРуб
	                |ГДЕ
	                |	вв.Код = ""643""";
					
	 Запрос.УстановитьПараметр("ID", IDправилаЦО);
	 Запрос.УстановитьПараметр("Период", НачалоГода(ПериодГод)-1 );
	 Результат = Запрос.Выполнить();
	 табл0 = Результат.Выгрузить();
 возврат	табл0; 
 КонецФункции

//===================Интерфейсные========================

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаС, ?(ДатаПо='0001-01-01', ДатаС, КонецДня(ДатаПо)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаС  = НастройкаПериода.ПолучитьДатуНачала();
		ДатаПо = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ДатаПоПриИзменении(Элемент)
	Если ДатаС>ДатаПо тогда 
	  ДатаС = ДатаПо;
	КонецЕсли;	
КонецПроцедуры

Процедура ДатаСПриИзменении(Элемент)
	Если ДатаПо<ДатаС тогда 
		ДатаПо = ДатаС;
	КонецЕсли;
	Если НачалоМесяца(ДатаС) < НачалоМесяца(Дата) тогда
		Если Вопрос("Дата начала программы меньше даты документа?! Вы уверены, что хотите такие условия?",РежимДиалогаВопрос.ДаНет,0)<>КодВозвратаДиалога.Да тогда
		   ДатаС = НачалоМесяца(Дата);  
		   Если ДатаПо<ДатаС тогда ДатаПо = ДатаС КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	ПериодГод = НачалоГода(ДатаС);
	ПериодГодПриИзменении(неопределено);
КонецПроцедуры

Процедура ДатаСРегулирование(Элемент, Направление, СтандартнаяОбработка)
	 ДатаСПриИзменении(Элемент)
КонецПроцедуры

Процедура ДатаПоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ДатаСПриИзменении(Элемент)
КонецПроцедуры

Процедура ПроизводительПриИзменении(Элемент)
	ПолучитьIDПравилаПоРеквизитам(IDправилаЦО, НомерПравила);
	ЭтаФорма.Модифицированность = ложь;
КонецПроцедуры

Процедура НомерПравилаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	ОткрытьПравилаПоНомеру();
КонецПроцедуры

Процедура ПериодГодПриИзменении(Элемент)
	ПолучитьТаблВходнойПоID();
	ЭтаФорма.Модифицированность = ложь;
КонецПроцедуры

Процедура БонусОтПродажПриИзменении(Элемент)
	
	ЭлементыФормы.НадписьСписокИНН.Доступность = БонусОтПродаж;
	ЭлементыФормы.СписокИНН.Доступность = БонусОтПродаж;
	
	ЭлементыФормы.НадписьКонтрагент.Доступность = НЕ БонусОтПродаж;
	ЭлементыФормы.Контрагент.АвтоОтметкаНезаполненного = не БонусОтПродаж;
	ЭлементыФормы.Контрагент.Доступность 		= НЕ БонусОтПродаж;
	
	ЭлементыФормы.Панель1.Страницы.Исключения.Доступность = БонусОтПродаж;
КонецПроцедуры

//==== Доп.Условия ===
Процедура КоманднаяПанель1Очистить(Кнопка)
	Если ДопУсловия.Количество()>0 тогда
		Если Вопрос("Таблица доп.условий не пустая! Вы уверены, что хотите удалить все условия?",РежимДиалогаВопрос.ДаНет,0)=КодВозвратаДиалога.Да тогда
		ДопУсловия.Очистить();
	    КонецЕсли;
	иначе	
		ДопУсловия.Очистить();
	КонецЕсли;
	
	ЭлементыФормы.ПроцентБонуса.Доступность = (ДопУсловия.Количество()=0);
	ЭлементыФормы.ПроцентБонуса.АвтоОтметкаНезаполненного = (ДопУсловия.Количество()=0);
	
КонецПроцедуры


Процедура КоманднаяПанель1СписокМоделей(Кнопка)
	СписМод = "";
	Если ВвестиСтроку(СписМод, "Введите список Названий моделей через ,") тогда
		симв1 = ПолучитьСимвРазделитель(СписМод);
		Если прав(СписМод,1)=симв1 тогда //обрезаем последний символ!
			СписМод = лев(СписМод, стрДлина(СписМод)-1);
		КонецЕсли;	
		
		масКодМод = РазложитьСтрокуВМассивПодстрок(СписМод, симв1);
		масМод = новый массив;
		для i=0 по масКодМод.Количество()-1 цикл
			мод1 = справочники.МоделиТоваров.НайтиПоНаименованию( масКодМод[i] );
			Если мод1=неопределено тогда
				сообщить("Не найдена модель по названию: "+ масКодМод[i], СтатусСообщения.Внимание);
			Иначе	
				масМод.Добавить( мод1 );
			КонецЕсли;	
		КонецЦикла;	
	ДобавитьСтрокиВДопУсловия("Модель", масМод);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1СписокТоваров(Кнопка)
	СписТов = "";
	Если ВвестиСтроку(СписТов, "Введите список Кодов товаров через ,") тогда
		симв1 = ПолучитьСимвРазделитель(СписТов);
		Если прав(СписТов,1)=симв1 тогда //обрезаем последний символ!
			СписТов = лев(СписТов, стрДлина(СписТов)-1);
		КонецЕсли;	
		
		масКодТов = РазложитьСтрокуВМассивПодстрок(СписТов, симв1);
		масТов = новый массив;
		для i=0 по масКодТов.Количество()-1 цикл
			тов1 = справочники.Номенклатура.НайтиПоКоду( масКодТов[i] );
			Если тов1=неопределено тогда
				сообщить("Не найден товар по коду "+ масКодТов[i], СтатусСообщения.Внимание);
			Иначе	
				масТов.Добавить( тов1 );
			КонецЕсли;	
		КонецЦикла;	
		ДобавитьСтрокиВДопУсловия("Номенклатура", масТов);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель2Заполнить(Кнопка)
	
	Если Исключения.Количество()>0 тогда
		Если Вопрос("Таблица исключений не пустая! Очистить таблицу?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да тогда
		Исключения.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	СписКонтр = "";
	Если ВвестиСтроку(СписКонтр, "Введите список Кодов через ,") тогда
		симв1 = ПолучитьСимвРазделитель(СписКонтр);
		Если прав(СписКонтр,1)=симв1 тогда //обрезаем последний символ!
			СписКонтр = лев(СписКонтр, стрДлина(СписКонтр)-1);
		КонецЕсли;	
	КонецЕсли;
	
	масКонтр = РазложитьСтрокуВМассивПодстрок(СписКонтр, симв1);
	Для i=0 по масКонтр.Количество()-1 цикл
		контр1 = Справочники.Контрагенты.НайтиПоКоду( масКонтр[i] );
		Если контр1 =неопределено тогда
			сообщить("Не найден Покупатель по коду: "+ масКонтр[i], СтатусСообщения.Внимание);
		Иначе	
			стр1 = Исключения.Добавить();
			стр1.Контрагент = контр1;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель2Очистить(Кнопка)
	Если Исключения.Количество()>0 тогда
		Если Вопрос("Вы действительно хотите Очистить таблицу Исключений?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да тогда
		Исключения.Очистить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

процедура ДобавитьСтрокиВДопУсловия(НазвКолонки="",масЗнач1 )
	N = масЗнач1.Количество();
	Если N=0 тогда Возврат КонецЕсли;
	
	Если ДопУсловия.Количество() = 0 тогда // чистое добавление
		для i=0 по N-1 цикл 
			стр1 = ДопУсловия.Добавить();
			стр1[НазвКолонки] = масЗнач1[i];
			стр1.ПроцентБонуса = ПроцентБонуса;
		КонецЦикла;	
	Иначе // умножение  N х М	
		ДопУсловия0 = ДопУсловия.Выгрузить();
		 ДопУсловия.Очистить();
		для i=0 по N-1 цикл 
			для каждого стр0 из ДопУсловия0 цикл
				стр1 = ДопУсловия.Добавить();
				ЗаполнитьЗначенияСвойств( стр1, стр0);
				стр1[НазвКолонки] = масЗнач1[i];
			КонецЦикла;
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

Процедура СписокИННОткрытие(Элемент, СтандартнаяОбработка)
	Если СписокИНН<>"" тогда
		СтандартнаяОбработка = ЛОЖЬ;
		списИНН = новый СписокЗначений;
		масИНН = РазложитьСтрокуВМассивПодстрок(СписокИНН, ",");
		для i=0 по масИНН.Количество()-1 цикл
			регион1 = справочники.Регионы.НайтиПоКоду("0"+масИНН[i]);
			если регион1 = неопределено тогда
		    списИНН.Добавить(масИНН[i], "<"+масИНН[i]+"> НЕ НАЙДЕН!");
			иначе
			списИНН.Добавить(масИНН[i], "<"+масИНН[i]+"> "+регион1.Наименование);
			КонецЕсли;
		КонецЦикла;
		списИНН.ВыбратьЭлемент("Список регионов по ИНН");
	КонецЕсли;
КонецПроцедуры

Процедура Панель1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = 1 тогда
		ПериодГодПриИзменении(неопределено);
	КонецЕсли;	
КонецПроцедуры

Процедура ТабличноеПоле1Поле01ПриИзменении(Элемент)
	
	Если ПериодГод<НачалоГода(ТекущаяДата()) тогда
		Если Вопрос("Вы действительно хотите Изменить данные прошлого года?",РежимДиалогаВопрос.ДаНет)<>КодВозвратаДиалога.Да тогда
			ОбновитьТаблВходной();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	текСтр = элементыФормы.таблВходнойПроцент.ТекущиеДанные;
	текКолонка = элементыФормы.таблВходнойПроцент.ТекущаяКолонка.Имя;
	регСв = РегистрыСведений.ПравилаЦенообразованияВход.СоздатьМенеджерЗаписи();
	регСв.Период = Дата(Год(ПериодГод), число( прав(текКолонка,2) ), 1);
	
	Если регСв.Период < НачалоМесяца( Дата ) тогда//11.12.2018
		Если Вопрос("Вы действительно хотите Изменить данные прошлого периода?",РежимДиалогаВопрос.ДаНет)<>КодВозвратаДиалога.Да тогда
			ОбновитьТаблВходной();
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	регСв.ID  = IDправилаЦО;    Флажок1 = ЛОЖЬ; 
	для i=0 по 3 цикл
		 знач1 = таблВходнойПроцент[i][текКолонка];
		 регСв[мас[i]] = ?(знач1=неопределено, ?(Флажок1,'00010101',0), знач1);   //+++ 
	КонецЦикла;
	регСв.Записать();
		
	ОбновитьТаблВходной();
КонецПроцедуры

//=================вспомогательные функции=========================
Функция НезаполненыОбязательныеПоля(Форма) 
    Для каждого ЭлементФормы Из Форма.ЭлементыФормы Цикл
        Если ТипЗнч(ЭлементФормы) = Тип("ПолеВвода") Тогда
			Если ЭлементФормы.АвтоОтметкаНезаполненного 
				и НЕ ЗначениеЗаполнено(Форма.ЭлементыФормы[ЭлементФормы.Имя].Значение) Тогда
                Предупреждение("Не заполнено обязательное поле """ + ЭлементФормы.Имя + """", 10);
                Форма.ТекущийЭлемент = ЭлементФормы;
                Возврат Истина;
            КонецЕсли;
		КонецЕсли;
    КонецЦикла;
    Возврат Ложь;
КонецФункции

процедура проверитьДоступностьПоляПроцентБонуса()
	//+++ 27.12.2018 +++ ЭлементыФормы.ПроцентБонуса.Доступность = (ДопУсловия.Количество()=0);
	ЭлементыФормы.ПроцентБонуса.АвтоОтметкаНезаполненного = (ДопУсловия.Количество()=0);
КонецПроцедуры

Процедура ДопУсловияПриПолученииДанных(Элемент, ОформленияСтрок)
	
	проверитьДоступностьПоляПроцентБонуса();
	
	Для каждого строка1 из ОформленияСтрок цикл
	   списДиаметров = ПолучитьСписокДиаметров(строка1.ДанныеСтроки.Диаметр);
	   строка1.Ячейки.СписокДиаметров.ОтображатьТекст = Истина;
	   строка1.Ячейки.СписокДиаметров.Текст    = списДиаметров;
	   строка1.Ячейки.СписокДиаметров.Значение = списДиаметров;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДопУсловияПослеУдаления(Элемент)
	проверитьДоступностьПоляПроцентБонуса()
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если не Отказ тогда //27.12.2018 - средний бонус!
		Если ДопУсловия.Количество()>0 тогда
			ПроцентБонуса = Окр( ДопУсловия.Итог("ПроцентБонуса") / ДопУсловия.Количество(), 2);
		КонецЕсли;
	КонецЕсли;	

	Если РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
		
		Если НезаполненыОбязательныеПоля(ЭтаФорма) тогда
			Отказ = Истина;
			
		ИначеЕсли ДопУсловия.Количество()>0 тогда
			табл1 = ДопУсловия.Выгрузить();
			табл1.Свернуть("Модель, Диаметр, Номенклатура");
			номСтрНарушения = ПолучитьСтрокуНарушенияПорядкаПравил();
			
			Если табл1.Количество()<ДопУсловия.Количество() тогда
				Предупреждение("Есть повторяющиеся строки в Доп.условиях!", 30);
				Отказ = Истина;
			ИначеЕсли номСтрНарушения>0 тогда
				Предупреждение("Нарушен порядок следования Доп.условий в строке № "+строка(номСтрНарушения),30);
				Отказ = Истина;
			КонецЕсли;
		
		ИначеЕсли БонусОтПродаж тогда
			таблИскл = Исключения.Выгрузить();
			таблИскл.Свернуть("Контрагент"); // различные!
			
			Если таблИскл.Количество()<Исключения.Количество() тогда
				Предупреждение("Есть повторяющиеся строки в таблице ""Исключения""!", 30);
				Отказ = Истина;
			ИначеЕсли таблИскл.Количество()>62 тогда //62 х 8 = 496
				Предупреждение("Слишком много строк в таблице ""Исключения""!", 30);
				Отказ = Истина;
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЕсли;//Проведение

КонецПроцедуры//ПередЗаписью()

//-1 если товар и модель/диаметр вместе - сразу ошибка!
//
//1- сначала товары,  
//2- модели + диаметры, 
//3- потом модели 
//4- потом диаметы... 
//5- все поля пустые
//
функция ПолучитьСтрокуНарушенияПорядкаПравил()
	рез = 0;
	табл1 = ДопУсловия.Выгрузить();
	табл1.Колонки.Добавить("Порядок");
	для каждого стр1 из табл1 цикл
		Если НЕ стр1.Номенклатура.Пустая() 
			и ( НЕ стр1.Модель.Пустая() или стр1.Диаметр <> "") тогда
			стр1.Порядок = -1; //ошибка! 
			Продолжить;
		КонецЕсли;	
		
		Если НЕ стр1.Номенклатура.Пустая() тогда
			стр1.Порядок = 1;
		Иначе // ном.пустая	
	    	Если НЕ стр1.Модель.Пустая() и стр1.Диаметр <> "" тогда
				стр1.Порядок = 2;
		    иначеЕсли НЕ стр1.Модель.Пустая() и стр1.Диаметр = "" тогда
		    	стр1.Порядок = 3;
		    иначеЕсли стр1.Модель.Пустая() и стр1.Диаметр <> "" тогда
		    	стр1.Порядок = 4;
		    иначеЕсли стр1.Модель.Пустая() и стр1.Диаметр = "" тогда
	    		стр1.Порядок = 5;
	        КонецЕсли;
        КонецЕсли;
	КонецЦикла;
	
	табл1.Сортировать("НомерСтроки");
	порядок = 0;
	Для каждого стр1 из табл1 цикл
		если стр1.Порядок < порядок тогда
			рез = стр1.НомерСтроки;
			прервать;
		иначе //новый порядок
			порядок = стр1.Порядок;
		КонецЕсли;	
	КонецЦикла;
	
	возврат рез;
КонецФункции	

функция ПолучитьМассивДокументовПоступления()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
   |	ПоступлениеТоваровУслугТовары.Ссылка
   |ИЗ
   |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
   |ГДЕ
   |	ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаС И &ДатаПо
   |	И ПоступлениеТоваровУслугТовары.Ссылка.Проведен
   |	И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = &Контрагент
   |	И ПоступлениеТоваровУслугТовары.Номенклатура.Производитель = &Производитель
   |	И ПоступлениеТоваровУслугТовары.Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа";
	Запрос.УстановитьПараметр("ДатаС",  ДатаС);
	Запрос.УстановитьПараметр("ДатаПо", КонецДня(ДатаПо) );
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Производитель", Производитель);
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();
	мас  = табл.ВыгрузитьКолонку("Ссылка");
	Возврат мас;
КонецФункции	

функция ПолучитьМассивДокументовРеализации()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслугТовары.Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.Дата между &ДатаС и &ДатаПо
	|	И РеализацияТоваровУслугТовары.Ссылка.Проведен
	|	И РеализацияТоваровУслугТовары.Номенклатура.Производитель = &Производитель
	|	И РеализацияТоваровУслугТовары.Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	|//Исключения	И НЕ РеализацияТоваровУслугТовары.Ссылка.Контрагент В (&МасИскл)
	|//СписокИНН
	|";
	
	Запрос.УстановитьПараметр("ДатаС",  ДатаС);
	Запрос.УстановитьПараметр("ДатаПо", КонецДня(ДатаПо) );
	
	Запрос.УстановитьПараметр("Производитель", Производитель);
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	
//----------Доп.условия ограничения, если заполнены!----------------	
Если СписокИНН<>"" тогда
		масИНН = РазложитьСтрокуВМассивПодстрок(СписокИНН,",");
		текстИНН = ""; 
		для ii=0 по масИНН.Количество()-1 цикл
			текстИНН = текстИНН+ "ИЛИ РеализацияТоваровУслугТовары.Ссылка.Контрагент.ИНН Подобно ("""+масИНН[ii]+"%"")
					   |";
		КонецЦикла;	
		текстИНН = Прав(текстИНН, СтрДлина(текстИНН) - 4);
		текстИНН = "	И ( "+текстИНН+" )";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//СписокИНН", текстИНН);
	КонецЕсли;
	
	Если Исключения.Количество()>0 тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Исключения","");
		МасИскл = Исключения.ВыгрузитьКолонку("Контрагент");
		Запрос.УстановитьПараметр("МасИскл", МасИскл);
	КонецЕсли;	
	
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();
	мас  = табл.ВыгрузитьКолонку("Ссылка");
	Возврат мас;
КонецФункции

функция ВыполнитьДвижениеБонусовПоставщиков(ДокРегистратор)
	
	таблБонусы = яштПоставщики.ПолучитьБонусыПоставщиков( ДокРегистратор ); //06.12.2018
	КолСтрок = 0;
	
	Если таблБонусы.Количество()=0 тогда
		
		Движения0 = РегистрыНакопления.БонусыПоставщиков.СоздатьНаборЗаписей();
		Движения0.Отбор.Регистратор.ВидСравнения  = ВидСравнения.Равно;
		Движения0.Отбор.Регистратор.Значение      = ДокРегистратор;
		Движения0.Отбор.Регистратор.Использование = Истина;
		Движения0.Записать(); 
		
		Возврат КолСтрок;
		
	Иначе//----------------------------------------------------------------
		
		Движения0 = РегистрыНакопления.БонусыПоставщиков.СоздатьНаборЗаписей();
		Движения0.Отбор.Регистратор.ВидСравнения  = ВидСравнения.Равно;
		Движения0.Отбор.Регистратор.Значение      = ДокРегистратор;
		Движения0.Отбор.Регистратор.Использование = Истина;
		Движения0.Записать(); // чистит движения!
		
		для каждого стр1 из таблБонусы цикл
			Движение1 = Движения0.Добавить();
			ЗаполнитьЗначенияСвойств(Движение1, стр1);
			Движение1.Период = ДокРегистратор.Дата;
			Движение1.Регистратор = ДокРегистратор;
		КонецЦикла;
				
		Движения0.Записать();
		КолСтрок = таблБонусы.Количество();
	КонецЕсли;
	
	возврат КолСтрок;
КонецФункции	

Процедура ОсновныеДействияФормыЗаполнитьБонусы(Кнопка)
	
	Если ЭтотОбъект.Проведен = ЛОЖЬ тогда
		Предупреждение("Нельзя делать движения по непроведенному документу!", 30);
		Возврат;
	КонецЕсли;	
		
	Если БонусОтПродаж тогда
		масДок = ПолучитьМассивДокументовРеализации();
	Иначе
		масДок = ПолучитьМассивДокументовПоступления();
	КонецЕсли;
	
	N = масДок.Количество();
	Если Вопрос("Найдено "+строка(N)+" документов. Выполнить расчет бонусов по всем документам?",РежимДиалогаВопрос.ДаНет)<>КодВозвратаДиалога.Да тогда
		Возврат;
	КонецЕсли;
	
	Сообщить(строка(ТекущаяДата())+" --- начало обработки "+строка(N)+" документов для расчета бонусов поставщиков.");
	Для i=0 по N-1 цикл
		кол = ВыполнитьДвижениеБонусовПоставщиков(масДок[i]);
		Если кол=0 тогда
			Сообщить(строка(i+1)+") Нет товаров по "+строка(масДок[i])+" !", СтатусСообщения.Важное);
		Иначе
			Сообщить(строка(i+1)+") "+строка(масДок[i])+" -> "+строка(Кол)+" товаров", СтатусСообщения.Информация);
		КонецЕсли;	
	КонецЦикла;	
	Сообщить(строка(ТекущаяДата())+" --- конец обработки "+строка(N)+" документов для расчета бонусов поставщиков.");
	
КонецПроцедуры

Процедура ПроцентБонусаПриИзменении(Элемент) 
	Если ДопУсловия.Количество()>0 тогда//27.12.2018 - заполнение!
		Если Вопрос("Установить этот % бонуса для всех строк доп.условий?", РежимДиалогаВопрос.ДаНет, 0)=КодВозвратаДиалога.Да тогда
			для каждого стр1 из ДопУсловия цикл
				стр1.ПроцентБонуса = ПроцентБонуса;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

Процедура ПроцентБонусаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	 СтандартнаяОбработка = ЛОЖЬ;
	 Элемент.Значение =Элемент.Значение + Направление * 0.10;
	 ПроцентБонусаПриИзменении(Элемент);
КонецПроцедуры

//значения регистра в строках...  как диаграмма Ганга
 мас = новый массив;   
 мас.Добавить("Вход");
 мас.Добавить("Бонус");
 мас.Добавить("b2b");
 мас.Добавить("СрокОплатыПоставщику");
