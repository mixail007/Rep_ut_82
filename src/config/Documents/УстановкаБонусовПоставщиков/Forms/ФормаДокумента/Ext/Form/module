
Процедура ПриОткрытии()
	
	Если ЭтоНовый() тогда
		Дата  = ТекущаяДата();
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	иначе
		БонусОтПродажПриИзменении(неопределено);
	КонецЕсли;
	
КонецПроцедуры

функция ПолучитьIDПравилаПоРеквизитам()
ID = 0;

возврат ID;
КонецФункции

функция ПолучитьНомерПравилаПоID()
ном = 0;

возврат ном;
КонецФункции

Процедура ОткрытьПравилаПоНомеру()
	//НомерПравила
КонецПроцедуры

процедура ПолучитьТаблВходнойПоID()
	таблВходнойПроцент.Очистить();
КонецПроцедуры
//===================Интерфейсные========================

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаС, ?(ДатаПо='0001-01-01', ДатаС, КонецДня(ДатаПо)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаС  = НастройкаПериода.ПолучитьДатуНачала();
		ДатаПо = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ДатаПоПриИзменении(Элемент)
	Если ДатаС>ДатаПо тогда 
	  ДатаС = ДатаПо;
	КонецЕсли;	
КонецПроцедуры

Процедура ДатаСПриИзменении(Элемент)
	Если ДатаПо<ДатаС тогда 
		ДатаПо = ДатаС;
	КонецЕсли;
	ПериодГод = НачалоГода(ДатаС);
	ПериодГодПриИзменении(неопределено);
КонецПроцедуры

Процедура ДатаСРегулирование(Элемент, Направление, СтандартнаяОбработка)
	 ДатаСПриИзменении(Элемент)
КонецПроцедуры

Процедура ДатаПоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ДатаСПриИзменении(Элемент)
КонецПроцедуры

Процедура ПроизводительПриИзменении(Элемент)
	IDправилаЦО = ПолучитьIDПравилаПоРеквизитам();
	НомерПравила = ПолучитьНомерПравилаПоID();
КонецПроцедуры

Процедура НомерПравилаОткрытие(Элемент, СтандартнаяОбработка)
	ОткрытьПравилаПоНомеру();
КонецПроцедуры

Процедура ПериодГодПриИзменении(Элемент)
	ПолучитьТаблВходнойПоID();
КонецПроцедуры

Процедура БонусОтПродажПриИзменении(Элемент)
	
	ЭлементыФормы.НадписьСписокИНН.Доступность = БонусОтПродаж;
	ЭлементыФормы.СписокИНН.Доступность = БонусОтПродаж;
	
	ЭлементыФормы.НадписьКонтрагент.Доступность = НЕ БонусОтПродаж;
	ЭлементыФормы.Контрагент.АвтоОтметкаНезаполненного = не БонусОтПродаж;
	ЭлементыФормы.Контрагент.Доступность 		= НЕ БонусОтПродаж;
    
КонецПроцедуры

//==== Доп.Условия ===
Процедура КоманднаяПанель1Очистить(Кнопка)
	ДопУсловия.Очистить();
КонецПроцедуры

Процедура КоманднаяПанель1СписокДиаметров(Кнопка)
		СписД = "";
	Если ВвестиСтроку(СписД, "Введите список Диаметров через ,") тогда
		масД = РазложитьСтрокуВМассивПодстрок(СписД, ",");
		ДобавитьСтрокиВДопУсловия("Диаметр", масД);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1СписокМоделей(Кнопка)
	СписМод = "";
	Если ВвестиСтроку(СписМод, "Введите список Названий моделей через ,") тогда
		масКодМод = РазложитьСтрокуВМассивПодстрок(СписМод, ",");
		масМод = новый массив;
		для i=0 по масКодМод.Количество()-1 цикл
			мод1 = справочники.МоделиТоваров.НайтиПоНаименованию( масКодМод[i] );
			Если мод1=неопределено тогда
				сообщить("Не найдена модель по названию: "+ масКодМод[i], СтатусСообщения.Внимание);
			Иначе	
				масМод.Добавить( мод1 );
			КонецЕсли;	
		КонецЦикла;	
	ДобавитьСтрокиВДопУсловия("Модель", масМод);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1СписокТоваров(Кнопка)
	СписТов = "";
	Если ВвестиСтроку(СписТов, "Введите список Кодов товаров через ,") тогда
		масКодТов = РазложитьСтрокуВМассивПодстрок(СписТов, ",");
		масТов = новый массив;
		для i=0 по масКодТов.Количество()-1 цикл
			тов1 = справочники.Номенклатура.НайтиПоКоду( масКодТов[i] );
			Если тов1=неопределено тогда
				сообщить("Не найден товар по коду "+ масКодТов[i], СтатусСообщения.Внимание);
			Иначе	
				масТов.Добавить( тов1 );
			КонецЕсли;	
		КонецЦикла;	
		ДобавитьСтрокиВДопУсловия("Номенклатура", масТов);
	КонецЕсли;
КонецПроцедуры

процедура ДобавитьСтрокиВДопУсловия(НазвКолонки="",масЗнач1 )
	N = масЗнач1.Количество();
	Если N=0 тогда Возврат КонецЕсли;
	
	Если ДопУсловия.Количество() = 0 тогда // чистое добавление
		для i=0 по N-1 цикл 
			стр1 = ДопУсловия.Добавить();
			стр1[НазвКолонки] = масЗнач1[i];
			стр1.ПроцентБонуса = ПроцентБонуса;
		КонецЦикла;	
	Иначе // умножение  N х М	
		ДопУсловия0 = ДопУсловия.Выгрузить();
		 ДопУсловия.Очистить();
		для i=0 по N-1 цикл 
			для каждого стр0 из ДопУсловия0 цикл
				стр1 = ДопУсловия.Добавить();
				ЗаполнитьЗначенияСвойств( стр1, стр0);
				стр1[НазвКолонки] = масЗнач1[i];
			КонецЦикла;
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

Процедура СписокИННОткрытие(Элемент, СтандартнаяОбработка)
	Если СписокИНН<>"" тогда
		СтандартнаяОбработка = ЛОЖЬ;
		списИНН = новый СписокЗначений;
		масИНН = РазложитьСтрокуВМассивПодстрок(СписокИНН, ",");
		для i=0 по масИНН.Количество()-1 цикл
			регион1 = справочники.Регионы.НайтиПоКоду("0"+масИНН[i]);
			если регион1 = неопределено тогда
		    списИНН.Добавить(масИНН[i], "<"+масИНН[i]+"> НЕ НАЙДЕН!");
			иначе
			списИНН.Добавить(масИНН[i], "<"+масИНН[i]+"> "+регион1.Наименование);
			КонецЕсли;
		КонецЦикла;
		списИНН.ВыбратьЭлемент("Список регионов по ИНН");
	КонецЕсли;
КонецПроцедуры

	