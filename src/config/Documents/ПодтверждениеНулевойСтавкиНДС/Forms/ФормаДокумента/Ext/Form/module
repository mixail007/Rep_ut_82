
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнитьШапкуДокумента(ЭтотОбъект, глТекущийПользователь, , "Продажа");
		УстановитьНомерДокумента(ЭтотОбъект);

		УстановитьВремя(РежимАвтоВремя.Последним);
		
		НачалоПериода = НачалоМесяца(Дата); 
		КонецПериода  = КонецМесяца(Дата);

	КонецЕсли;

	// Вывести в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ЗначениеНеЗаполнено(Организация) Тогда

		Предупреждение("Не указана организация. Операция не записана.");
		Отказ = Истина;
		ТекущийЭлемент = ЭлементыФормы.Организация;
		Возврат;

	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанельЗаполнить(Кнопка)

	Состав.Очистить();

	МассивСобытий = Новый Массив();
	МассивСобытий.Добавить(Перечисления.СобытияПоНДСПродажи.Реализация);

	МассивСобытийРезультата = Новый Массив();
	МассивСобытийРезультата.Добавить(Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0);
	МассивСобытийРезультата.Добавить(Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Регистратор",   Ссылка);
	Запрос.УстановитьПараметр("СтавкаНДС",     Перечисления.СтавкиНДС.НДС0);
	Запрос.УстановитьПараметр("СобытияВозникновения", МассивСобытий);
	Запрос.УстановитьПараметр("СобытияРезультата",    МассивСобытийРезультата);
	
	Запрос.Текст = "ВЫБРАТЬ
					|	НДСПродажиОбороты.ВидЦенности,
					|	НДСПродажиОбороты.Покупатель,
					|	НДСПродажиОбороты.СчетФактура,
					|	НДСПродажиОбороты.СтавкаНДС КАК СтавкаНДС,
					|	СУММА(ВЫБОР КОГДА НДСПродажиОбороты.Событие В (&СобытияВозникновения) ТОГДА НДСПродажиОбороты.СуммаБезНДСОборот ИНАЧЕ 0 КОНЕЦ) КАК ОтгруженоПоСтавке0,
					|	СУММА(ВЫБОР КОГДА НДСПродажиОбороты.Событие В (&СобытияРезультата) ТОГДА -(НДСПродажиОбороты.СуммаБезНДСОборот) ИНАЧЕ 0 КОНЕЦ) КАК ОпределенРезультат
					|ИЗ
					|	РегистрНакопления.НДСПродажи.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Организация = &Организация И СтавкаНДС = &СтавкаНДС И (Событие В (&СобытияВозникновения) ИЛИ Событие В (&СобытияРезультата))) КАК НДСПродажиОбороты

					|ГДЕ
					|	НДСПродажиОбороты.Регистратор <> &Регистратор
					
					|СГРУППИРОВАТЬ ПО
					|	НДСПродажиОбороты.ВидЦенности,
					|	НДСПродажиОбороты.Покупатель,
					|	НДСПродажиОбороты.СчетФактура,
					|	НДСПродажиОбороты.СтавкаНДС";
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();

	Для Каждого Выборка Из ТаблицаРезультата Цикл
		Если (Выборка.ОтгруженоПоСтавке0 + Выборка.ОпределенРезультат) Тогда
			СтрокаТП = Состав.Добавить();

			СтрокаТП.ВидЦенности  = Выборка.ВидЦенности;
			СтрокаТП.Покупатель   = Выборка.Покупатель;
			СтрокаТП.ПродажиСНДС0 = (Выборка.ОтгруженоПоСтавке0 + Выборка.ОпределенРезультат);
			СтрокаТП.Событие      = Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0;
			СтрокаТП.СчетФактура  = Выборка.СчетФактура;
			СтрокаТП.СтавкаНДС    = Перечисления.СтавкиНДС.НДС18_118;
			
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура СоставСобытиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.Добавить(Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0);
	Элемент.СписокВыбора.Добавить(Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ВыбПериодНажатие(Элемент)

	НастройкаПериода = Новый НастройкаПериода;

	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));

	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод   = Истина;
	НастройкаПериода.ВариантНастройки         = ВариантНастройкиПериода.Период;

	НастройкаПериода.Редактировать();

	НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонецПериода  = НастройкаПериода.ПолучитьДатуОкончания();

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля дата 
// в диалоге документа.
//
Процедура ДатаПриИзменении(Элемент)

	УстановитьВремя(РежимАвтоВремя.Последним);

	Если (НачалоМесяца(Дата) <> НачалоПериода)
	 или (КонецМесяца(Дата) <> КонецПериода) Тогда
		Ответ = Вопрос("Установить значение периода документа месяцем в который входит текущая дата?", РежимДиалогаВопрос.ДаНет,,,);

		Если Ответ = КодВозвратаДиалога.Да Тогда
			НачалоПериода = НачалоМесяца(Дата);
			КонецПериода  = КонецМесяца(Дата);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры