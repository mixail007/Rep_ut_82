
//Процедура ОсновныеДействияФормыЗакрытьПередать(Кнопка)
//	////проставляем отметку в пути
//	//Для Каждого Строка Из Реестр Цикл
//	//	НаборЗаписей = РегистрыСведений.ПечатныеФормыВНаличии.СоздатьНаборЗаписей();
//	//	НаборЗаписей.Отбор.Документ.Установить(Строка.ссылкаДок);
//	//	НаборЗаписей.отбор.видПечатнойФормы.Установить(Строка.ВидПечатнойформы);
//	//	НаборЗаписей.Прочитать(); 
//	//	НаборЗаписей[0].ВПути = Истина;
//	//	НаборЗаписей[0].ДатаПеремещения = НачалоДня(ТекущаяДата());

//	//	НаборЗаписей.Записать();		
//	//КонецЦикла;
//	//
//	//
//	//Этаформа.ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗакрытьПередать.Доступность = Ложь;
//	//ЭлементыФормы.Реестр.Доступность = Ложь;
//	//Передан = Истина;
//КонецПроцедуры

Процедура ПриОткрытии()
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя")Тогда
		ЭлементыФормы.Подразделение.Доступность = Ложь;
		Этаформа.ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Принять.Доступность= Ложь;
	конецЕсли;	
	
	Если передан Тогда
	ЭлементыФормы.Реестр.Доступность = Ложь;
	Этаформа.ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность = Ложь;
    иначе 
	Этаформа.ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Принять.Доступность= Ложь;
	конецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыПринять(Кнопка)
	//снимаем отметку в пути
	ГоловноеПодразделение = Справочники.Подразделения.НайтиПоКоду("00005");
	Для Каждого Строка Из Реестр Цикл
		Если НЕ Строка.Статус = Справочники.СостояниеДокументов.Дубль Тогда
			НаборЗаписей = РегистрыСведений.ПечатныеФормыВНаличии.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(Строка.ссылкаДок);
			НаборЗаписей.отбор.видПечатнойФормы.Установить(Строка.ВидПечатнойформы);
			НаборЗаписей.Прочитать(); 
			Если НаборЗаписей.Количество()<>0 тогда
				НаборЗаписей[0].ВПути = Ложь;
				НаборЗаписей[0].Местонахождение = ГоловноеПодразделение;
				НаборЗаписей[0].ДатаПеремещения = НачалоДня(ТекущаяДата());
				НаборЗаписей.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	принят=Истина;
КонецПроцедуры

Процедура ОсновныеДействияФормыПечать(Кнопка)
	Если передан тогда
	Печать();
    иначе
	Предупреждение("Сначала закройте реестр!");
	конецЕсли;
КонецПроцедуры

Процедура ПослеЗаписи()
	Если Проведен Тогда
	Этаформа.ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность = Ложь;
	ЭлементыФормы.Реестр.Доступность = Ложь;
   КонецЕсли;
КонецПроцедуры

Процедура РеестрПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		ОформлениеСтроки.Ячейки.Контрагент.ОтображатьТекст = Истина;
		попытка
			ПоказатьКонтрагентаВСтроке(ДанныеСтроки, ОформлениеСтроки);
    	исключение
		конецпопытки;
КонецПроцедуры

Процедура ОсновныеДействияФормыПоМенеджерам(Кнопка)
	Если передан тогда
	ПечатьПоменеджерам();
    иначе
	Предупреждение("Сначала закройте реестр!");
	конецЕсли;
КонецПроцедуры

Функция ПолучитьНаименованиеКонтрагентаИзПеремещения(ДокСсылка)
	
	КонтрагентНаименование = "";
	
	Если НЕ ДокСсылка.Пустая() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПеремещениеТоваров.ВнутреннийЗаказ.ДокументОснование.Контрагент.Наименование КАК КонтрагентНаименование
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ГДЕ
		|	ПеремещениеТоваров.Ссылка = &ДокПеремещение";
		
		Запрос.УстановитьПараметр("ДокПеремещение", ДокСсылка);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			КонтрагентНаименование = Выборка.КонтрагентНаименование;
		КонецЕсли;
	КонецЕсли;
	
	Возврат КонтрагентНаименование;
	
КонецФункции // ПолучитьНаименованиеКонтрагентаИзПеремещения()

Процедура ПоказатьКонтрагентаВСтроке(ДанныеСтроки, ОформлениеСтроки)
	
	Если НЕ ТипЗнч(ДанныеСтроки.СсылкаДок) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ОформлениеСтроки.Ячейки.Контрагент.Текст = ДанныеСтроки.СсылкаДок.Контрагент;
	Иначе
		ОформлениеСтроки.Ячейки.Контрагент.Текст = ПолучитьНаименованиеКонтрагентаИзПеремещения(ДанныеСтроки.СсылкаДок);
	КонецЕсли;

КонецПроцедуры // ПоказатьКонтрагентаВСтроке()