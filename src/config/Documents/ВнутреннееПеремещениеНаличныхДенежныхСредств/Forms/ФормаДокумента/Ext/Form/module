
// Рассчитывает новый курс документа при смене даты
//
Процедура УстановитьКурсДокумента()
	
	СтруктураКурсаВалютаДокумента = ПолучитьКурсВалюты(ВалютаДокумента, Дата);
	КурсДокумента        = СтруктураКурсаВалютаДокумента.Курс;
	КратностьДокумента   = СтруктураКурсаВалютаДокумента.Кратность;
	
КонецПроцедуры // УстановитьКурсДокумента()

Процедура КассаПриИзменении(Элемент)
		
	Если НЕ КассаПолучатель.Пустая() И НЕ Касса.ВалютаДенежныхСредств=КассаПолучатель.ВалютаДенежныхСредств Тогда
		Сообщить("Разные валюты кассы - плательщика и кассы - получателя.");
		КассаПолучатель=Новый ("СправочникСсылка.Кассы");
	КонецЕсли;
	
	ПриИзмененииЗначенияКассыБанковскогоСчета(ВалютаДокумента, КурсДокумента, КратностьДокумента, Дата, СуммаДокумента, Касса.ВалютаДенежныхСредств);

	ЭлементыФормы.НадписьВалютаДокумент.Заголовок=ВалютаДокумента.Наименование;
	
КонецПроцедуры

Процедура КассаПолучательПриИзменении(Элемент)
	
	Если НЕ Касса.Пустая() И НЕ Касса.ВалютаДенежныхСредств=КассаПолучатель.ВалютаДенежныхСредств Тогда
		Сообщить("Разные валюты кассы - плательщика и кассы - получателя.");
		КассаПолучатель=Новый ("СправочникСсылка.Кассы");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если ЭтоНовый() Тогда
		
        УстановитьНомерДокумента(ЭтотОбъект);
		
		Если (ЗначениеНеЗаполнено(Ответственный)) Тогда
			Ответственный = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнойОтветственный");
		КонецЕсли;
		
		Если ЗначениеНеЗаполнено(Касса) Тогда
			Касса = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяКасса");
		 	ВалютаДокумента = Касса.ВалютаДенежныхСредств;
		КонецЕсли;

		Если ЗначениеНеЗаполнено(ВалютаДокумента) Тогда
			ВалютаДокумента = ВалютаРегламентированногоУчета;
		КонецЕсли;
		
		Если ЗначениеНеЗаполнено(КурсДокумента) Тогда
			СтруктураКурсаДокумента      = ПолучитьКурсВалюты(ВалютаДокумента, Дата);
			КурсДокумента 		= СтруктураКурсаДокумента.Курс;
			КратностьДокумента = СтруктураКурсаДокумента.Кратность;	
		КонецЕсли;
			
	Иначе	
						
		УстановитьКурсДокумента();
		
	КонецЕсли;
	
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
		
	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	

Процедура ПослеЗаписи()
	
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Ответственный.Пустая() Тогда
		Ответственный = глТекущийПользователь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	НапечататьДвиженияДокумента(Ссылка);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ЭлементыФормы.НадписьВалютаДокумент.Заголовок=ВалютаДокумента.Наименование;
		
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	РазрешитьОткрывать = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"РазрешитьОткрыватьКассовыеДокументы");
	Если не(РазрешитьОткрывать) Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры





