
Перем ТаблицаОтбора;

Процедура ПриОткрытии()

	ПодключитьОбработчикОжидания("ОбновлениеОтображения", 1800); 
	
	//+++Шарафутдинов 15.05.2018 хотя бы при одной настройке, по идее все настройки надо бы обрабатывать...
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьОтбор") Тогда  		
		
		Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоРегиону")) Тогда
			
			СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджераПоРегиону(ПараметрыСеанса.ТекущийПользователь);
			Если ДокументСписок.Отбор.Найти("Контрагент") = Неопределено Тогда 
				ДокументСписок.Отбор.Добавить("Контрагент");
			КонецЕсли;
			ДокументСписок.Отбор["Контрагент"].Использование = Истина;
			ДокументСписок.Отбор["Контрагент"].ВидСравнения = ВидСравнения.ВСписке;
			ДокументСписок.Отбор["Контрагент"].Значение = СписокКонтрагентовМенеджера;
			//ЭлементыФормы.ДокументСписок.НастройкаОтбора["Контрагент"].Доступность = Ложь;  	
			
		КонецЕсли;
	КонецЕсли;
	
	//---Шарафутдинов 15.05.2018
		
КонецПроцедуры

Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	Если ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	ПоказатьСтруктуруПодчиненностиДокумента(ЭлементыФормы.ДокументСписок.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ДокументСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Ссылка.СостояниеЗаявки = Перечисления.СостоянияЗаявкиНаБрак.ПризнатьБрак 
		ИЛИ ДанныеСтроки.Ссылка.СостояниеЗаявки = Перечисления.СостоянияЗаявкиНаБрак.Отклонить Тогда
	Иначе
		Если ДанныеСтроки.ДатаПриходаОТХ <> Дата(1,1,1) Тогда
			ДнейСМоментаПоступленияНаОТХ = Цел((ТекущаяДата() - ДанныеСтроки.ДатаПриходаОТХ) / 60 / 60 / 24);
			Если ДнейСМоментаПоступленияНаОТХ < 14 Тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗолотистый;
			ИначеЕсли ДнейСМоментаПоступленияНаОТХ > 14 Тогда 
				Если ТекущаяДата() < ДобавитьМесяц(ДанныеСтроки.ДатаПриходаОТХ,1) Тогда
					ОформлениеСтроки.ЦветФона = WebЦвета.Древесный;
				Иначе
					ОформлениеСтроки.ЦветФона = WebЦвета.Васильковый;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ДанныеСтроки.ДатаСписанияОТХ <> Дата(1,1,1) Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗеленый;
		КонецЕсли;
		
		////сначала поиск по таблице
		СтрокаТЗ = ТаблицаОтбора.Найти(ДанныеСтроки.Ссылка);
		Если НЕ СтрокаТЗ = Неопределено Тогда
			Если СтрокаТЗ.ДатаКонтроля <> Дата(1,1,1) Тогда
				ОформлениеСтроки.Ячейки.ДатаКонтроля.УстановитьТекст(СтрокаТЗ.ДатаКонтроля);
				Если ДобавитьМесяц(СтрокаТЗ.ДатаКонтроля, 1) < ТекущаяДата() Тогда
					ОформлениеСтроки.ЦветФона = WebЦвета.ЛососьСветлый;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка.ДокументОснование) Тогда
		Если ТипЗНЧ(ДанныеСтроки.Ссылка.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваров") Тогда
			ОформлениеСтроки.Ячейки.ПричинаВозврата.УстановитьТекст(ДанныеСтроки.Ссылка.ДокументОснование.ПричинаВозврата);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()

	УстановитьФильтрНаШиныДиски();
	
	УстановитьФильтрПоСостояниюЗаявки();
	
КонецПроцедуры

Процедура УстановитьФильтрНаШиныДиски()
	
	Если глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Левченко Ф.С.")
		ИЛИ глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Капченко И.")
		Тогда 
		//Диски
		ОтборПоСписку				 = ДокументСписок.Отбор;
		ОтборПоТипу					 = ОтборПоСписку.ВидТовара;
		ОтборПоТипу.Использование	 = Истина;
		ОтборПоТипу.Значение		 = Перечисления.ВидыТоваров.Диски; 
		ОтборПоТипу.ВидСравнения	 = ВидСравнения.Равно;
	ИначеЕсли глТекущийПользователь	 = Справочники.Пользователи.НайтиПоКоду("Уманский В. А.") Тогда
		//аксы
		ОтборПоСписку				 = ДокументСписок.Отбор;
		ОтборПоТипу					 = ОтборПоСписку.ВидТовара;
		ОтборПоТипу.Использование	 = Истина;
		ОтборПоТипу.Значение		 = Перечисления.ВидыТоваров.Аксессуары; 
		ОтборПоТипу.ВидСравнения	 = ВидСравнения.Равно;		
	ИначеЕсли глТекущийПользователь	 = Справочники.Пользователи.НайтиПоКоду("Куртов К.Д.") Тогда
		//все остальное
		ОтборПоСписку				 = ДокументСписок.Отбор;
		ОтборПоТипу					 = ОтборПоСписку.ВидТовара;
		ОтборПоТипу.Использование	 = Истина;
		ОтборПоТипу.ВидСравнения	 = ВидСравнения.НеВСписке;		
		СписокВидов = Новый СписокЗначений;
		СписокВидов.Добавить(Перечисления.ВидыТоваров.Диски);
		СписокВидов.Добавить(Перечисления.ВидыТоваров.Аксессуары);
		ОтборПоТипу.Значение		 = СписокВидов; 
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьФильтрПоСостояниюЗаявки()
	
	Если ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Левченко Ф.С.") 
		ИЛИ ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Капченко И.")
		ИЛИ ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Куртов К.Д.")
		ИЛИ ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Уманский В. А.")
		//ИЛИ ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Федорова")
		Тогда
		//1. Отбор всех заявок с состоянием "Согласовано"
		//2. Если по заявке на брак есть заявка на возврат и Операция по ОТХ, то ее видно независимо от состояния заявки в п.1
		//3. Брак обнаружен на складе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ПустаяСсылкаЗаявкаНаВозврат", Документы.ЗаявкаНаВозвратТоваров.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустаяСсылкаЗаявкаНаБрак", Документы.ЗаявкаНаБрак.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.Подразделения.ПустаяСсылка());
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЗаявкаНаБрак.Ссылка,
		               |	ЗаявкаНаБрак.ДатаПриходаОТХ КАК ОперацияОТХДата
		               |ПОМЕСТИТЬ ВТ_ОТХ
		               |ИЗ
		               |	Документ.ЗаявкаНаБрак КАК ЗаявкаНаБрак
		               |ГДЕ
		               |	НЕ ЗаявкаНаБрак.ДатаПриходаОТХ = ДАТАВРЕМЯ(1, 1, 1)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЗаявкаНаБрак.Ссылка,
		               |	ЗаявкаНаБрак.ДатаСогласования КАК ДатаКонтроля,
		               |	NULL КАК ОперацияОТХДата
		               |ИЗ
		               |	Документ.ЗаявкаНаБрак КАК ЗаявкаНаБрак
		               |ГДЕ
		               |	НЕ ЗаявкаНаБрак.БракОбнаруженНаСкладе
		               |	И (ЗаявкаНаБрак.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБрак.Согласовано)
		               |			ИЛИ ЗаявкаНаБрак.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБрак.ВРассмотрении))
		               |	И НЕ ЗаявкаНаБрак.Ссылка В
		               |				(ВЫБРАТЬ
		               |					ВТ_ОТХ.Ссылка
		               |				ИЗ
		               |					ВТ_ОТХ КАК ВТ_ОТХ)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ЗаявкаНаБрак.Ссылка,
		               |	ЗаявкаНаБрак.Дата,
		               |	NULL
		               |ИЗ
		               |	Документ.ЗаявкаНаБрак КАК ЗаявкаНаБрак
		               |ГДЕ
		               |	ЗаявкаНаБрак.БракОбнаруженНаСкладе
		               |	И ЗаявкаНаБрак.СостояниеЗаявки <> ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБрак.ПризнатьБрак)
		               |	И ЗаявкаНаБрак.СостояниеЗаявки <> ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБрак.Отклонить)
		               |	И НЕ ЗаявкаНаБрак.Ссылка В
		               |				(ВЫБРАТЬ
		               |					ВТ_ОТХ.Ссылка
		               |				ИЗ
		               |					ВТ_ОТХ КАК ВТ_ОТХ)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ЗаявкаНаБрак.Ссылка,
		               |	ЗаявкаНаБрак.Дата,
		               |	NULL
		               |ИЗ
		               |	Документ.ЗаявкаНаБрак КАК ЗаявкаНаБрак
		               |ГДЕ
		               |	ЗаявкаНаБрак.Проведен
		               |	И (ЗаявкаНаБрак.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБрак.ПризнатьБрак)
		               |			ИЛИ ЗаявкаНаБрак.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБрак.Отклонить))
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ВТ_ОТХ.Ссылка,
		               |	ВТ_ОТХ.ОперацияОТХДата,
		               |	ВТ_ОТХ.ОперацияОТХДата
		               |ИЗ
		               |	ВТ_ОТХ КАК ВТ_ОТХ";

		ТаблицаОтбора = Запрос.Выполнить().Выгрузить();
		
		МассивОтбора = Новый СписокЗначений;
		Для каждого СтрТЗ ИЗ ТаблицаОтбора Цикл
			МассивОтбора.Добавить(СтрТЗ.Ссылка);
		КонецЦикла;
		
		ДокументСписок.Отбор.Ссылка.Использование = Истина;
		ДокументСписок.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
		ДокументСписок.Отбор.Ссылка.Значение = МассивОтбора; 
		
	КонецЕсли;
	
КонецПроцедуры;

ТаблицаОтбора = Новый ТаблицаЗначений;

