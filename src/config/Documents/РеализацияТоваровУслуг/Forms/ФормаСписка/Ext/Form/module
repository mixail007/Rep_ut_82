
//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	//+++ 07.11.2017 - никому этот столбец не нужен кроме Фин.Отдела - ускоряем вывод списка в разы!
	ЭлементыФормы.Список.Колонки.ОтметкаПечататьСтраховоеЗаявление.Видимость = (ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение = справочники.Подразделения.НайтиПоКоду("00007") ); //Фин.Отдел
	
	
	   //+++( 24.08.2012 - отбор по подразделению ВСЕГДА!
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		
		//+++ 01.06.2015 - отбор общий как во всех документах!		
		УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.Список);
		
		Возврат; //+++ 15.07.2013 - больше никаких отборов
	КонецЕсли;
	//+++)

	Если Пени Тогда
		
		Если ДляМенеджера Тогда
			
			СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджера(глТекущийПользователь);
			
			
			Если Отбор.Найти("ДокументыПоКонтрагенту") = Неопределено Тогда 
				Отбор.Добавить("ДокументыПоКонтрагенту");
			КонецЕсли;
			
			Отбор["ДокументыПоКонтрагенту"].Использование = Истина;
			Отбор["ДокументыПоКонтрагенту"].ВидСравнения = ВидСравнения.ВСписке;
			Отбор["ДокументыПоКонтрагенту"].Значение = СписокКонтрагентовМенеджера;
			
			ЭлементыФормы.Список.НастройкаОтбора["ДокументыПоКонтрагенту"].Доступность = Ложь;
			
			ЭлементыФормы.Список.АвтоКонтекстноеМеню = Ложь;
			
		КонецЕсли; 
		
		Если Отбор.Найти("ВыставлениеПени") = Неопределено Тогда 
			Отбор.Добавить("ВыставлениеПени");
		КонецЕсли;
		
		Отбор["ВыставлениеПени"].Использование = Истина;
		Отбор["ВыставлениеПени"].Значение = Истина;
		Отбор["ВыставлениеПени"].ВидСравнения = ВидСравнения.Равно;
		ЭлементыФормы.Список.НастройкаОтбора["ВыставлениеПени"].Доступность = Ложь;
		
		
		ЭтаФорма.Заголовок = "Журнал выставленных пени";
		
		ЭлементыФормы.Список.Колонки.ВидОперации.Видимость = Ложь;
		ЭлементыФормы.Список.Колонки.ВидОперации.ИзменятьНастройку = Ложь;
		ЭлементыФормы.Список.Колонки.ВидПередачи.Видимость = Ложь;
		ЭлементыФормы.Список.Колонки.ВидПередачи.ИзменятьНастройку = Ложь;
		ЭлементыФормы.Список.Колонки.СкладКомпании.Видимость = Ложь;
		ЭлементыФормы.Список.Колонки.СкладКомпании.ИзменятьНастройку = Ложь;
		
		//ЭлементыФормы.ПанельЧП.Видимость = Ложь;
		
	Иначе
		
		ЭлементыФормы.Список.Колонки.ВыставлениеПени.Видимость = Ложь;
		ЭлементыФормы.Список.Колонки.ВыставлениеПени.ИзменятьНастройку = Ложь;
		
		Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ИспользоватьМеханизмДележкиДляГруппы") 
			И НЕ ЗначениеНеЗаполнено(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов")) Тогда
			
			СписокПользователей = Новый СписокЗначений;
			
			Для каждого СтрокаСпр Из ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов").ПользователиГруппы Цикл
				СписокПользователей.Добавить(СтрокаСпр.Пользователь);	
			КонецЦикла; 
			СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджера(СписокПользователей);
			
			Если Отбор.Найти("ДокументыПоКонтрагенту") = Неопределено Тогда 
				Отбор.Добавить("ДокументыПоКонтрагенту");
			КонецЕсли;
			
			Отбор["ДокументыПоКонтрагенту"].Использование = Истина;
			Отбор["ДокументыПоКонтрагенту"].ВидСравнения = ВидСравнения.ВСписке;
			Отбор["ДокументыПоКонтрагенту"].Значение = СписокКонтрагентовМенеджера;
			
			ЭлементыФормы.Список.НастройкаОтбора["ДокументыПоКонтрагенту"].Доступность = Ложь;
		Иначе
			
			УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.Список);	
			
		КонецЕсли;
	КонецЕсли;
	
	Если РольДоступна("ДополнительныеПраваВЭД")и не ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОграниченныйИнтерфейс") = Истина Тогда
		
		Если ДокументСписок.Отбор.Найти("Подразделение") = Неопределено Тогда 
			ДокументСписок.Отбор.Добавить("Подразделение");
		КонецЕсли;
		ДокументСписок.Отбор["Подразделение"].Использование = Истина;
		
		списокПодразделенийПользователя = новый СписокЗначений;
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
		
		ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.ВСписке;
		ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
		
		ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		
	иначеЕсли РольДоступна("яштФинДиректор") и не ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОграниченныйИнтерфейс") = Истина Тогда	
		
	иначе
		
		Если ДокументСписок.Отбор["Подразделение"].Использование  = Ложь Тогда
			ДокументСписок.Отбор["Подразделение"].Использование = Истина;
			
			списокПодразделенийПользователя = новый СписокЗначений;
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
			
			ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.НеВСписке;
			ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
			
			//ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОграниченныйИнтерфейс") = Истина Тогда
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	НЕ ДоговорыКонтрагентов.Наименование ПОДОБНО ""%*%""
		|	И 99 = 99
		|	И 98 = 98
		|	И ДоговорыКонтрагентов.Организация = &Организация";

		Запрос.УстановитьПараметр("Организация",Справочники.Организации.НайтиПоКоду("00001"));	
		//24.09.18 Смирнов
		Если Отбор["ДокументыПоДоговоруКонтрагента"].Использование  = Истина Тогда
			СписокДоступныхДоговоров =Отбор["ДокументыПоДоговоруКонтрагента"].Значение; 
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорыКонтрагентов.Ссылка В(&СписокДоговоров)");	
			Запрос.УстановитьПараметр("СписокДоговоров",СписокДоступныхДоговоров);	
		КонецЕсли;
		Если Отбор["ДокументыПоКонтрагенту"].Использование  = Истина Тогда
			СписокДоступныхКонтрагентов =Отбор["ДокументыПоКонтрагенту"].Значение; 
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"98 = 98","ДоговорыКонтрагентов.Владелец В(&СписокКонтрагентов)");	
			Запрос.УстановитьПараметр("СписокКонтрагентов",СписокДоступныхКонтрагентов);	
		КонецЕсли;
		Результат = Запрос.Выполнить().Выгрузить();
		
		СписокДоговоровМенеджера = Новый СписокЗначений;
	    СписокДоговоровМенеджера.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Ссылка"));
		Отбор["ДокументыПоДоговоруКонтрагента"].Использование = Истина;
		Отбор["ДокументыПоДоговоруКонтрагента"].ВидСравнения = ВидСравнения.ВСписке;
		Отбор["ДокументыПоДоговоруКонтрагента"].Значение = СписокДоговоровМенеджера;
       	ЭлементыФормы.Список.НастройкаОтбора["ДоговорКонтрагента"].Доступность = Ложь;


		Отбор["Подразделение"].Использование = Ложь;
		Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
		Отбор["Подразделение"].Значение = Справочники.Подразделения.ПустаяСсылка() ;
       	ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		
		//Если Отбор["ДоговорКонтрагента"].Использование  = Истина Тогда
		//СписокДоступныхДоговоров =Отбор["ДоговорКонтрагента"].Значение; 
		//Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорыКонтрагентов.Ссылка В(&СписокДоговоров)");	
		//Запрос.УстановитьПараметр("СписокДоговоров",СписокДоступныхДоговоров);	
		//КонецЕсли;
		//  Если Отбор["ДокументыПоКонтрагенту"].Использование  = Истина Тогда
		//СписокДоступныхКонтрагентов =Отбор["ДокументыПоКонтрагенту"].Значение; 
		//Запрос.Текст = СтрЗаменить(Запрос.Текст,"98 = 98","ДоговорыКонтрагентов.Владелец В(&СписокКонтрагентов)");	
		//Запрос.УстановитьПараметр("СписокКонтрагентов",СписокДоступныхКонтрагентов);	
		//КонецЕсли;
		//Результат = Запрос.Выполнить().Выгрузить();
		//СписокДоговоровМенеджера = Новый СписокЗначений;
		//СписокДоговоровМенеджера.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Ссылка"));
		//Отбор["ДоговорКонтрагента"].Использование = Истина;
		//Отбор["ДоговорКонтрагента"].ВидСравнения = ВидСравнения.ВСписке;
		//Отбор["ДоговорКонтрагента"].Значение = СписокДоговоровМенеджера;
		//  ЭлементыФормы.Список.НастройкаОтбора["ДоговорКонтрагента"].Доступность = Ложь;


		//Отбор["Подразделение"].Использование = Ложь;
		//Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
		//Отбор["Подразделение"].Значение = Справочники.Подразделения.ПустаяСсылка() ;
		//  ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		
конецесли;	
	
	
	
КонецПроцедуры

//+++ 07.11.2017 - одним запросов все св-ва по всему списку
функция ПолучитьСвва(списРеал)
	// найти доверенность покупателя
	СвойствоДоверенностьПеревозчика=ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90144");
	СвойствоДоверенностьПокупателя=ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90145");
	СвойствоОтметкаГрузПолучен=ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90146");
	запрос = новый Запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(рс.Объект КАК Документ.РеализацияТоваровУслуг) КАК Ссылка,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА рс.Свойство = &св1
	               |				ТОГДА рс.Значение
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК знач1,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА рс.Свойство = &св2
	               |				ТОГДА рс.Значение
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК знач2,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА рс.Свойство = &св3
	               |				ТОГДА рс.Значение
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК знач3
	               |ИЗ
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК рс
	               |ГДЕ
	               |	ВЫРАЗИТЬ(рс.Объект КАК Документ.РеализацияТоваровУслуг) В (&списРеал)
	               |	И (рс.Свойство = &св1
	               |			ИЛИ рс.Свойство = &св2
	               |			ИЛИ рс.Свойство = &св3)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	рс.Объект";
	запрос.УстановитьПараметр("св1",СвойствоДоверенностьПеревозчика);
	запрос.УстановитьПараметр("св2",СвойствоДоверенностьПокупателя);
	запрос.УстановитьПараметр("св3",СвойствоОтметкаГрузПолучен);
	запрос.УстановитьПараметр("списРеал",списРеал);
	результат = запрос.Выполнить();
	табл = результат.Выгрузить();
	
	возврат табл;
	
КонецФункции

Процедура СписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	масРеал = новый массив;
	Для Каждого Строка Из ОформленияСтрок Цикл
		масРеал.Добавить( Строка.ДанныеСтроки.Ссылка );//1 раз читаем
	КонецЦикла;
	табл123 = ПолучитьСвва(масРеал);
	
	флОтметкаПечататьСтраховоеЗаявление = ЭлементыФормы.Список.Колонки.ОтметкаПечататьСтраховоеЗаявление.Видимость; //07.11.2017
	
	Для Каждого Строка Из ОформленияСтрок Цикл
		Если табл123.Количество()>0 тогда //99% нет свойств!
			стр1 = табл123.найти(Строка.ДанныеСтроки.Ссылка, "Ссылка");
			Если стр1<>неопределено тогда  //есть какое-то св-во
				Если ЗначениеЗаполнено(стр1.знач2) тогда
					Строка.ячейки.ДоверенностьПокупателя.Значение=Строка(стр1.знач2);
				КонецЕсли;	
	 			Если ЗначениеЗаполнено(стр1.знач1) тогда
					Строка.ячейки.ДоверенностьПеревозчика.Значение=Строка(стр1.знач1);
				КонецЕсли;	
				Строка.ячейки.ОтметкаГрузПолучен.ОтображатьФлажок=Истина;
				Если ЗначениеЗаполнено(стр1.знач3) и стр1.знач3 тогда
					Строка.ячейки.ОтметкаГрузПолучен.Флажок=Истина;
				КонецЕсли;	
        	КонецЕсли;
		КонецЕсли; //табл123
		
		Если флОтметкаПечататьСтраховоеЗаявление тогда //+++ 07.11.2017 - нужна только для Фин.Отдела
			Строка.ячейки.ОтметкаПечататьСтраховоеЗаявление.ОтображатьФлажок=Истина;
			Попытка  // Без попытки если столбцы учавствующие в проверке скрыты у пользователя вылетает ошибка 
			зак1 = Строка.ДанныеСтроки.Сделка;//1 раз читаем
			Если ЗначениеЗаполнено(зак1)
				// И ТипЗнч(зак1)=Тип("ДокументСсылка.ЗаказПокупателя")    //среднее время проверки 0,016 сек./строку
				И зак1.ПечататьСтраховоеЗаявление Тогда	
				Строка.ячейки.ОтметкаПечататьСтраховоеЗаявление.Флажок=Истина;
			КонецЕсли;
			Исключение;
			КонецПопытки;
		КонецЕсли;
		
		//ЗаданиеНаОтгрузку
		//строка.ячейки.ЗаданиеНаОтгрузку.Значение = яштРезервыПоТоварам.НайтиЗаданиеНаОтгрузку(реал1);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)
	Если НЕ ЗначениеНеЗаполнено(ЭлементыФормы.Список.ТекущаяСтрока) Тогда
	ОткрытьСвойстваДокумента(ЭлементыФормы.Список.ТекущаяСтрока.Ссылка, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

//21.07.2017
Процедура ДействияФормыПоискПоШтрихКоду(Кнопка)

	Если глТорговоеОборудование <> Неопределено Тогда
		Данные= "";
		Если ВвестиСтроку( Данные, "Сканируйте штрих-код") тогда
			СписокДок = неопределено;
 			Если глТорговоеОборудование.ПолучитьВсеДокументыПоШтрихКоду(Данные, СписокДок) Тогда
				Если СписокДок.Количество() = 1 Тогда
					ОткрытьЗначение(СписокДок[0].Ссылка);
				ИначеЕсли СписокДок.Количество() > 1 Тогда
					СтрокаДок = СписокДок.ВыбратьСтроку("Выберите один из найденных документов.");
					Если СтрокаДок<>Неопределено Тогда
						ОткрытьЗначение(СтрокаДок.Ссылка);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

//21.07.2017 - не всегда работает
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Перем СписокДок;

	Если Не(ВводДоступен()) Тогда
		Возврат;
	КонецЕсли;

	Если глТорговоеОборудование <> Неопределено Тогда
		Если Событие = "BarCodeValue" Тогда
			Если глТорговоеОборудование.ПолучитьВсеДокументыПоШтрихКоду(Данные, СписокДок) Тогда
				Если СписокДок.Количество() = 1 Тогда
					ОткрытьЗначение(СписокДок[0].Ссылка);
				ИначеЕсли СписокДок.Количество() > 1 Тогда
					СтрокаДок = СписокДок.ВыбратьСтроку("Выберите один из найденных документов.");
					Если СтрокаДок<>Неопределено Тогда
						ОткрытьЗначение(СтрокаДок.Ссылка);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			глТорговоеОборудование.СканерПосылкаДанных(1);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


Процедура ДействияФормыФАП(Кнопка)
	УстановитьОтдорПоТипуДоговора(Справочники.ТипыДоговоров.ФормулаАвтоПлюс);
КонецПроцедуры


Процедура ДействияФормыШТЯ(Кнопка)
	УстановитьОтдорПоТипуДоговора(Справочники.ТипыДоговоров.ШинтрейдЯрославль)
КонецПроцедуры

Процедура УстановитьОтдорПоТипуДоговора(ТипДоговора)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.ТипДоговора = &ТипДоговора";

	Запрос.УстановитьПараметр("ТипДоговора", ТипДоговора);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
    СписокДоговоров = Новый СписокЗначений;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокДоговоров.Добавить(ВыборкаДетальныеЗаписи.Ссылка);		
	КонецЦикла;

	ДокументСписок.Отбор.ДоговорКонтрагента.ВидСравнения = ВидСравнения.ВСписке; 
	ДокументСписок.Отбор.ДоговорКонтрагента.Значение = СписокДоговоров; 
	ДокументСписок.Отбор.ДоговорКонтрагента.Использование = Истина;
	
КонецПроцедуры