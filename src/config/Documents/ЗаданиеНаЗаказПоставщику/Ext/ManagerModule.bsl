Процедура ОтправитьНапоминание(ЗаданиеСсылка) экспорт
	//Попытка
	УЗ = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("no-reply@yst76.ru");
	СписокФайловВложений = новый СписокЗначений;
	
	ЕгорМалышев = Справочники.Пользователи.НайтиПоКоду("Малышев Егор");
	
	Выборка = ПолучитьСписокНезаказанныхТоваров(ЗаданиеСсылка);
	Если Выборка.Количество()>0 тогда
		
		Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
		Задача.Дата = ТекущаяДата();
		Задача.Постановщик = ЕгорМалышев;
		Задача.Наименование = "Записано задание на заказ поставщику";
		
		Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Смирнов А.А.");;
		Задача.Описание = ""+ЗаданиеСсылка + " дата согласования: "+Формат(ЗаданиеСсылка.ДатаСогласования,"ДФ=dd.MM.yyyy")+символы.пс; 
		Тема = Задача.Описание;
		
		Задача.Объект = ЗаданиеСсылка;
		ТекстСообщения="Задание на заказ поставщику"+Символы.ПС;
		Пока Выборка.Следующий() цикл
			нстр = Задача.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(нстр,Выборка);
			ТекстСообщения = ТекстСообщения+Выборка.Номенклатура+"	 - "+Выборка.Количество+" "+Выборка.Номенклатура.ЕдиницаХраненияОстатков+символы.ПС;
		КонецЦикла;
		
		Задача.Инициатор = ЕгорМалышев;
		Задача.НаСогласование = Ложь;
		Задача.СрокОповещения = Задача.Дата;
		Задача.Оповещение = Истина;
		Задача.Записать();
		
		АдресМенеджера  = ОпределитьАдресПолучателя(Задача.Исполнитель);
		яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(АдресМенеджера,СписокФайловВложений, УЗ, ТекстСообщения, Тема);
		
		
		Задача2 = Задача.Скопировать();
		Задача2.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Горицкий А. И.");
		Задача2.Дата = ТекущаяДата();
		Задача2.Записать();
		
		АдресМенеджера  = ОпределитьАдресПолучателя(Задача2.Исполнитель);
		яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(АдресМенеджера,СписокФайловВложений, УЗ, ТекстСообщения, Тема);
		
		Задача2 = Задача.Скопировать();
		Задача2.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Беловошин Я.П.");
		Задача2.Дата = ТекущаяДата();
		Задача2.Записать();
		
		АдресМенеджера  = ОпределитьАдресПолучателя(Задача2.Исполнитель);
		яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(АдресМенеджера,СписокФайловВложений, УЗ, ТекстСообщения, Тема);
		
		
		Задача2 = Задача.Скопировать();
		Задача2.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Жарикова В.");
		Задача2.Дата = ТекущаяДата();
		Задача2.Записать();
		
		АдресМенеджера  = ОпределитьАдресПолучателя(Задача2.Исполнитель);
		яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(АдресМенеджера,СписокФайловВложений, УЗ, ТекстСообщения, Тема);

		//Задача2 = Задача.Скопировать();
		//Задача2.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Карышев Максим");
		//Задача2.Дата = ТекущаяДата();
		//Задача2.Записать();
		//
		//АдресМенеджера  = ОпределитьАдресПолучателя(Задача2.Исполнитель);
		//яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(АдресМенеджера,СписокФайловВложений, УЗ, ТекстСообщения, Тема);
		
		
		Если ЗаданиеСсылка.ДатаСогласования+2*24*60*60>НачалоДня(ТекущаяДата()) тогда
			//Задача2 = Задача.Скопировать();
			//Задача2.Исполнитель = ЕгорМалышев;
			//Задача2.Дата = ТекущаяДата();
			//Задача2.Записать();
			
			//АдресМенеджера  = ОпределитьАдресПолучателя(Задача2.Исполнитель);
			АдресМенеджера  = ОпределитьАдресПолучателя(ЕгорМалышев);
			яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(АдресМенеджера,СписокФайловВложений, УЗ, ТекстСообщения, Тема);
		КонецЕсли;
		
		//Исключение
		//КонецПопытки;
	КонецЕсли;
КонецПроцедуры
	
	Функция ПолучитьСписокНезаказанныхТоваров(Задание)
		Запрос = новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	ЗаданиеНаЗаказПоставщикуТовары.Ссылка КАК ЗаданияНаЗаказПоставщику,
		             |	ЗаданиеНаЗаказПоставщикуТовары.Номенклатура,
		             |	СУММА(ЗаданиеНаЗаказПоставщикуТовары.Количество) КАК Количество
		             |ПОМЕСТИТЬ втЗадания
		             |ИЗ
		             |	Документ.ЗаданиеНаЗаказПоставщику.Товары КАК ЗаданиеНаЗаказПоставщикуТовары
		             |ГДЕ
		             |	ЗаданиеНаЗаказПоставщикуТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		             |	И ЗаданиеНаЗаказПоставщикуТовары.Ссылка.Ссылка = &Ссылка
		             |	И ЗаданиеНаЗаказПоставщикуТовары.Ссылка.Согласован = ЛОЖЬ
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	ЗаданиеНаЗаказПоставщикуТовары.Ссылка,
		             |	ЗаданиеНаЗаказПоставщикуТовары.Номенклатура
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	ЗаказПоставщикуСезонныйТовары.Ссылка КАК ЗаказПоставщикуСезонный,
		             |	ЗаказПоставщикуСезонныйТовары.Ссылка.ЗаданиеНаЗаказ,
		             |	ЗаказПоставщикуСезонныйТовары.Номенклатура,
		             |	СУММА(ЗаказПоставщикуСезонныйТовары.Количество) КАК Количество
		             |ПОМЕСТИТЬ втЗаказыПоставщикуСезонные
		             |ИЗ
		             |	Документ.ЗаказПоставщикуСезонный.Товары КАК ЗаказПоставщикуСезонныйТовары
		             |ГДЕ
		             |	ЗаказПоставщикуСезонныйТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		             |	И ЗаказПоставщикуСезонныйТовары.Ссылка.ЗаданиеНаЗаказ В
		             |			(ВЫБРАТЬ
		             |				втЗадания.ЗаданияНаЗаказПоставщику
		             |			ИЗ
		             |				втЗадания)
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	ЗаказПоставщикуСезонныйТовары.Ссылка,
		             |	ЗаказПоставщикуСезонныйТовары.Номенклатура,
		             |	ЗаказПоставщикуСезонныйТовары.Ссылка.ЗаданиеНаЗаказ
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	втЗадания.Номенклатура КАК Номенклатура,
		             |	СУММА(втЗадания.Количество - ЕСТЬNULL(втЗаказыПоставщикуСезонные.Количество, 0)) КАК Количество
		             |ПОМЕСТИТЬ вт
		             |ИЗ
		             |	втЗадания КАК втЗадания
		             |		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказыПоставщикуСезонные КАК втЗаказыПоставщикуСезонные
		             |		ПО втЗадания.ЗаданияНаЗаказПоставщику = втЗаказыПоставщикуСезонные.ЗаданиеНаЗаказ
		             |			И втЗадания.Номенклатура = втЗаказыПоставщикуСезонные.Номенклатура
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	втЗадания.Номенклатура
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	вт.Номенклатура,
		             |	вт.Количество
		             |ИЗ
		             |	вт КАК вт
		             |ГДЕ
		             |	вт.Количество > 0";
		Запрос.УстановитьПараметр("Ссылка",Задание);
		Рез = Запрос.Выполнить().Выбрать();
		
		возврат рез;
		
	КонецФункции