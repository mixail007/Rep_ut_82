
Процедура ПриОткрытии()
	УстановитьПодменюВыбораВидаОперации(ЭлементыФормы.ДействияФормы.Кнопки.ПодменюВидаОперации,
	ВидОперации.Метаданные().ЗначенияПеречисления, 
	Новый Действие("ДействияФормыДействиеУстановитьОперацию"));
	
	Если ЭтоНовый() Тогда									
		
		//ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Недогруз;
		// Отобразить в заголовке формы вид операции.
		КонецЕсли;
	
		
		УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
		
	
	//ЭлементыФормы.ДоговорПолучатель.Видимость = ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз;
	//ЭлементыФормы.ДоговорКонтрагента.Видимость = ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз;
КонецПроцедуры
									
Процедура ДействияФормыДействиеУстановитьОперацию(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		
		Если ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз[Кнопка.Имя] Тогда
			Возврат;
		КонецЕсли; 
		
		ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз[Кнопка.Имя];
		
	КонецЕсли;
	
	// Отобразить в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	
	Ответ = Вопрос("Перезаполнить товары по виду операции?", РежимДиалогаВопрос.ДаНет);
	Отказ = (Ответ = КодВозвратаДиалога.Нет);
	
	Если не отказ тогда
		
		Товары.Очистить();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Заказ",Основание);
		запрос.Текст = "ВЫБРАТЬ
		|	ЗаказыПоставщикамОбороты.ЗаказПоставщику,
		|	ЗаказыПоставщикамОбороты.Номенклатура,
		|	ЕСТЬNULL(ЗаказыПоставщикамОбороты.КоличествоПриход, 0) КАК КоличествоПриход,
		|	ЕСТЬNULL(ЗаказыПоставщикамОбороты.КоличествоРасход, 0) КАК КоличествоРасход,
		|	ЕСТЬNULL(ЗаказыПоставщикамОбороты.СуммаВзаиморасчетовПриход, 0) КАК СуммаВзаиморасчетовПриход,
		|	ЕСТЬNULL(ЗаказыПоставщикамОбороты.СуммаВзаиморасчетовРасход, 0) КАК СуммаВзаиморасчетовРасход,
		|	ЗаказыПоставщикамОбороты.Регистратор,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента.Владелец,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, ЗаказПоставщику = &Заказ) КАК ЗаказыПоставщикамОбороты
		|ГДЕ
		|	(ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|			ИЛИ ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Данные.ЗаказПоставщику
		|ПОМЕСТИТЬ НужныеЗаказы
		|ИЗ
		|	Данные КАК Данные
		|ГДЕ
		|	Данные.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Данные.ЗаказПоставщику,
		|	Данные.Номенклатура,
		|	СУММА(Данные.КоличествоПриход) КАК КоличествоПриход,
		|	СУММА(Данные.КоличествоРасход) КАК КоличествоРасход,
		|	СУММА(Данные.СуммаВзаиморасчетовПриход) КАК СуммаВзаиморасчетовПриход,
		|	СУММА(Данные.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
		|ПОМЕСТИТЬ Итог
		|ИЗ
		|	Данные КАК Данные
		|ГДЕ
		|	Данные.ЗаказПоставщику В
		|			(ВЫБРАТЬ
		|				НужныеЗаказы.ЗаказПоставщику
		|			ИЗ
		|				НужныеЗаказы КАК НужныеЗаказы)
		|
		|СГРУППИРОВАТЬ ПО
		|	Данные.ЗаказПоставщику,
		|	Данные.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Итог.ЗаказПоставщику,
		|	Итог.Номенклатура,
		|	Итог.КоличествоПриход,
		|	Итог.КоличествоРасход,
		|	Итог.СуммаВзаиморасчетовПриход,
		|	Итог.СуммаВзаиморасчетовРасход
		|ИЗ
		|	Итог КАК Итог
		|ГДЕ
		|	Итог.КоличествоПриход - Итог.КоличествоРасход "+?(ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз,"<",">")+" 0";
		
		результат = Запрос.Выполнить().Выгрузить();
		
		коф = ?(ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз,-1,1);
		Для Каждого ТекСтрокаТовары Из результат Цикл
			НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество = коф*(ТекСтрокаТовары.КоличествоПриход - ТекСтрокаТовары.КоличествоРасход);
				НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.Сумма = коф*(ТекСтрокаТовары.СуммаВзаиморасчетовПриход - ТекСтрокаТовары.СуммаВзаиморасчетовРасход);
				НоваяСтрока.Цена = (ТекСтрокаТовары.СуммаВзаиморасчетовПриход - ТекСтрокаТовары.СуммаВзаиморасчетовРасход) / (ТекСтрокаТовары.КоличествоПриход - ТекСтрокаТовары.КоличествоРасход);
		КонецЦикла;
		
	КонецЕсли;
	
	//ЭлементыФормы.ДоговорПолучатель.Видимость = ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз;
	//ЭлементыФормы.ПолеВвода1.Видимость = ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз;
	
КонецПроцедуры // ДействияФормыДействиеУстановитьОперацию()


//Процедура ПолеВвода1НачалоВыбора(Элемент, СтандартнаяОбработка)
//	НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, ДоговорКонтрагента,
//				Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком, СтандартнаяОбработка);

//КонецПроцедуры

