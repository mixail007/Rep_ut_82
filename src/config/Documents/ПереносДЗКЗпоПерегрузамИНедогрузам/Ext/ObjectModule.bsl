
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Список = Новый СписокЗначений();
	Список.Добавить(Перечисления.ВидыОперацийПерегрузНедогруз.Недогруз);
	Список.Добавить(Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз);
	ВыбранныйВидОперации = Список.ВыбратьЭлемент("Выберите вид операции.");
	Если ВыбранныйВидОперации = Неопределено тогда
		ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Недогруз;
	иначе
		ВидОперации = ВыбранныйВидОперации.Значение;
	конецЕсли;	
	
	
	
	
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		// Заполнение шапки
		ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
		Основание = ДанныеЗаполнения.Ссылка;
		ДоговорИзОснования = ДанныеЗаполнения.Ссылка.ДоговорКонтрагента;
		Контрагент = ДанныеЗаполнения.Ссылка.Контрагент;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Заказ",Основание);
		запрос.Текст = "ВЫБРАТЬ
		|	ЗаказыПоставщикамОбороты.ЗаказПоставщику,
		|	ЗаказыПоставщикамОбороты.Номенклатура,
		|	ЕСТЬNULL(ЗаказыПоставщикамОбороты.КоличествоПриход, 0) КАК КоличествоПриход,
		|	ЕСТЬNULL(ЗаказыПоставщикамОбороты.КоличествоРасход, 0) КАК КоличествоРасход,
		|	ЕСТЬNULL(ЗаказыПоставщикамОбороты.СуммаВзаиморасчетовПриход, 0) КАК СуммаВзаиморасчетовПриход,
		|	ЕСТЬNULL(ЗаказыПоставщикамОбороты.СуммаВзаиморасчетовРасход, 0) КАК СуммаВзаиморасчетовРасход,
		|	ЗаказыПоставщикамОбороты.Регистратор,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента.Владелец,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, ЗаказПоставщику = &Заказ) КАК ЗаказыПоставщикамОбороты
		|ГДЕ
		|	(ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|			ИЛИ ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Данные.ЗаказПоставщику
		|ПОМЕСТИТЬ НужныеЗаказы
		|ИЗ
		|	Данные КАК Данные
		|ГДЕ
		|	Данные.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Данные.ЗаказПоставщику,
		|	Данные.Номенклатура,
		|	СУММА(Данные.КоличествоПриход) КАК КоличествоПриход,
		|	СУММА(Данные.КоличествоРасход) КАК КоличествоРасход,
		|	СУММА(Данные.СуммаВзаиморасчетовПриход) КАК СуммаВзаиморасчетовПриход,
		|	СУММА(Данные.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
		|ПОМЕСТИТЬ Итог
		|ИЗ
		|	Данные КАК Данные
		|ГДЕ
		|	Данные.ЗаказПоставщику В
		|			(ВЫБРАТЬ
		|				НужныеЗаказы.ЗаказПоставщику
		|			ИЗ
		|				НужныеЗаказы КАК НужныеЗаказы)
		|
		|СГРУППИРОВАТЬ ПО
		|	Данные.ЗаказПоставщику,
		|	Данные.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Итог.ЗаказПоставщику,
		|	Итог.Номенклатура,
		|	Итог.КоличествоПриход,
		|	Итог.КоличествоРасход,
		|	Итог.СуммаВзаиморасчетовПриход,
		|	Итог.СуммаВзаиморасчетовРасход
		|ИЗ
		|	Итог КАК Итог
		|ГДЕ
		|	Итог.КоличествоПриход - Итог.КоличествоРасход "+?(ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз,"<",">")+" 0";
		
		результат = Запрос.Выполнить().Выгрузить();
		
		коф = ?(ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз,-1,1);
		Для Каждого ТекСтрокаТовары Из результат Цикл
			НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество = коф*(ТекСтрокаТовары.КоличествоПриход - ТекСтрокаТовары.КоличествоРасход);
				НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.Сумма = коф*(ТекСтрокаТовары.СуммаВзаиморасчетовПриход - ТекСтрокаТовары.СуммаВзаиморасчетовРасход);
				НоваяСтрока.Цена = (ТекСтрокаТовары.СуммаВзаиморасчетовПриход - ТекСтрокаТовары.СуммаВзаиморасчетовРасход) / (ТекСтрокаТовары.КоличествоПриход - ТекСтрокаТовары.КоличествоРасход);
		КонецЦикла;
КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	если не ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		отказ = Истина;
		Сообщить("Заполните договор!!!");
		Возврат;
	КонецЕсли;
	
	
		
	Если ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз Тогда
		ВидДвижения = ВидДвиженияНакопления.Расход;
	иначе	
		ВидДвижения = ВидДвиженияНакопления.Приход;
	конецесли;	

		
		
		СуммаИтог = Товары.итог("Сумма");
		// регистр ВзаиморасчетыСКонтрагентами Расход
		Движения.ВзаиморасчетыСКонтрагентами.Записывать = Истина;
		Движения.ВзаиморасчетыСКонтрагентами.Очистить();
		Движение = Движения.ВзаиморасчетыСКонтрагентами.Добавить();
		Движение.ВидДвижения = ВидДвижения;
		Движение.Период = Дата;
		Движение.ДоговорКонтрагента = ДоговорИзОснования;
		Движение.Сделка = Основание;
		Движение.СуммаВзаиморасчетов = -СуммаИтог;
		Движение.СуммаУпр = -СуммаИтог*КурсВзаиморасчетов;
		
		Движение2 = Движения.ВзаиморасчетыСКонтрагентами.Добавить();
		Движение2.ВидДвижения = ВидДвижения;
		Движение2.Период = Дата;
		Движение2.ДоговорКонтрагента = ДоговорКонтрагента;
		Движение2.Сделка = Основание;
		Движение2.СуммаВзаиморасчетов = СуммаИтог;
		Движение2.СуммаУпр = СуммаИтог*КурсВзаиморасчетов;
		
		//теперь рассчитаем курсовые разницы
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток,
		|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
		|			&МоментВремени,
		|			ДоговорКонтрагента = &Договор
		|				И Сделка = &Сделка) КАК ВзаиморасчетыСКонтрагентамиОстатки";
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Сделка", Основание);
		Запрос.УстановитьПараметр("Договор", ДоговорИзОснования);
		
		
		ТаблицаКурсовыхРазниц = Запрос.Выполнить().Выгрузить();
		к =?(ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз,1,-1); 
		Если ТаблицаКурсовыхРазниц[0].СуммаВзаиморасчетовОстаток+К*СуммаИтог =0  и ТаблицаКурсовыхРазниц[0].СуммаУпрОстаток+К*СуммаИтог*КурсВзаиморасчетов<>0  тогда
        Движение3 = Движения.ВзаиморасчетыСКонтрагентами.Добавить();
		Движение3.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение3.Период = Дата;
		Движение3.ДоговорКонтрагента = ДоговорИзОснования;
		Движение3.Сделка = Основание;
		Движение3.СуммаУпр = ТаблицаКурсовыхРазниц[0].СуммаУпрОстаток+К*СуммаИтог*КурсВзаиморасчетов;
        конецЕсли;
		
		
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		//найдем курс документа
	//курс берем из документа поступления по заказу
	если КурсВзаиморасчетов = 0 тогда
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.КурсВзаиморасчетов как Курс
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Сделка = &Сделка";
	
	Запрос.УстановитьПараметр("Сделка", Основание);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда	
		//Если нет документа поступления смысла проводить документ нет
		отказ = Истина;
		Сообщить("Заполните договор!!!");
	иначе
		КурсВзаиморасчетов = Результат.Выгрузить()[0].Курс;
	конецЕсли;	
    конецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	#Если Клиент тогда
		//20.03.19 Смирнов Задача № 64720 //по выбранным клиентам отправляем письма на почту
		Если Контрагент = Справочники.Контрагенты.НайтиПоКоду("95588") //PETLAS LASTIK SANAYI VE TICARET AS
			или Контрагент = Справочники.Контрагенты.НайтиПоКоду("П005407") //Sailun JinyuGroup Co.,Ltd.
			или Контрагент = Справочники.Контрагенты.НайтиПоКоду("П012694") //SHANDONG ZHONGYI RUBBER CO. LTD
			или Контрагент = Справочники.Контрагенты.НайтиПоКоду("П001797") //Tyre Technology
			или Контрагент = Справочники.Контрагенты.НайтиПоКоду("95981") //ZHONGYI RUBBER CO.LTD
			тогда
			
			УЗнаименование = "no-reply@yst76.ru";
			Если НЕ ЗначениеЗаполнено(УЗнаименование) тогда
				УЗнаименование = "no-reply@yst76.ru";
			КонецЕсли;
			УЗ = справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию(УЗнаименование);//10.04.2018
			
			Тема = "Сформирован документ переноса ДЗ/КЗ по перегрузам/недогрузам";
			ТекстСообщения = "Добрый день. 
			|	По "+ Основание+"
			|	Сформирован документ "+ Ссылка+"
			|
			|       	Это письмо создано автоматически.
			|      Отвечать и писать на этот адрес - НЕ НУЖНО!
			|
			|";
			СписокФайловВложений = новый СписокЗначений;
			яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо("v@yst.ru",СписокФайловВложений, УЗ, ТекстСообщения, Тема);
			яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо("z@yst.ru",СписокФайловВложений, УЗ, ТекстСообщения, Тема);
		КонецЕсли;
	#КонецЕсли
КонецПроцедуры
