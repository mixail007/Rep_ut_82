////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ 

#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьДокумента()

	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	//Запрос.Текст ="
	//|ВЫБРАТЬ
	//|	Номер,
	//|	Дата,
	//|	Ответственный.Представление КАК ОтветственныйПредставление
	//|ИЗ
	//|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
	//|
	//|ГДЕ
	//|	УстановкаЦенНоменклатуры.Ссылка = &ТекущийДокумент";

	//Шапка = Запрос.Выполнить().Выбрать();
	//Шапка.Следующий();

	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);

	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	(УстановкаЦенНоменклатуры.ИндексСтрокиТаблицыЦен + 1)    КАК НомерСтроки,
	//|	УстановкаЦенНоменклатуры.Номенклатура,
	//|	УстановкаЦенНоменклатуры.Номенклатура.НаименованиеПолное КАК Товар,
	//|	УстановкаЦенНоменклатуры.ХарактеристикаНоменклатуры      КАК Характеристика,
	//|	NULL                                                     КАК Серия,
	//|	УстановкаЦенНоменклатуры.ТипЦен                          КАК ТипЦен,
	//|	УстановкаЦенНоменклатуры.Цена,
	//|	УстановкаЦенНоменклатуры.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмеренияПредставление,
	//|	УстановкаЦенНоменклатуры.Валюта,
	//|	УстановкаЦенНоменклатуры.Валюта.Представление            КАК ВалютаПредставление,
	//|	УстановкаЦенНоменклатуры.ПроцентСкидкиНаценки
	//|
	//|ИЗ
	//|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатуры
	//|
	//|ГДЕ
	//|	УстановкаЦенНоменклатуры.Ссылка = &ТекущийДокумент
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	УстановкаЦенНоменклатуры.ИндексСтрокиТаблицыЦен,
	//|	УстановкаЦенНоменклатуры.ТипЦен
	//|
	//|ИТОГИ
	//|ПО УстановкаЦенНоменклатуры.ИндексСтрокиТаблицыЦен
	//|";

	//ЗапросПоТоварам = Запрос.Выполнить();

	//ТабДокумент = Новый ТабличныйДокумент;
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УстановкаЦенНоменклатуры_ИзменениеЦен";

	//Макет = ПолучитьМакет("ИзменениеЦен");

	//ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	//ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(ЭтотОбъект, "Изменение цен номенклатуры");
	//ТабДокумент.Вывести(ОбластьМакета);

	//ОбластьШапкаНоменклатура   = Макет.ПолучитьОбласть("ШапкаТаблицы|Номенклатура");
	//ОбластьШапкаТипЦен         = Макет.ПолучитьОбласть("ШапкаТаблицы|Цена");
	//ОбластьСтрокаНоменклатура  = Макет.ПолучитьОбласть("Строка|Номенклатура");
	//ОбластьСтрокаТипЦен        = Макет.ПолучитьОбласть("Строка|Цена");
	//ОбластьПодвалНоменклатура  = Макет.ПолучитьОбласть("Подписи|Номенклатура");
	//ОбластьПодвалТипЦен        = Макет.ПолучитьОбласть("Подписи|Цена");

	//// Выведем шапку
	//ТабДокумент.Вывести(ОбластьШапкаНоменклатура);
	//ВыборкаПоСтрокам = ЗапросПоТоварам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Если ВыборкаПоСтрокам.Следующий() Тогда
	//	Выборка = ВыборкаПоСтрокам.Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		ОбластьШапкаТипЦен.Параметры.Заполнить(Выборка);
	//		ТабДокумент.Присоединить(ОбластьШапкаТипЦен);
	//	КонецЦикла;
	//КонецЕсли;

	//// Выведем таблицу
	//ВыборкаПоСтрокам = ЗапросПоТоварам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Пока ВыборкаПоСтрокам.Следующий() Цикл
	//	НоменклатураВыведена = Ложь;
	//	Выборка = ВыборкаПоСтрокам.Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		Если НЕ НоменклатураВыведена Тогда
	//			ОбластьСтрокаНоменклатура.Параметры.Заполнить(Выборка);
	//			ОбластьСтрокаНоменклатура.Параметры.Товар = Выборка.Товар + ПредставлениеСерий(Выборка);
	//			ТабДокумент.Вывести(ОбластьСтрокаНоменклатура);
	//			НоменклатураВыведена = Истина;
	//		КонецЕсли;
	//		ОбластьСтрокаТипЦен.Параметры.Заполнить(Выборка);
	//		ТабДокумент.Присоединить(ОбластьСтрокаТипЦен);
	//	КонецЦикла;
	//КонецЦикла;

	//// Выведем подвал
	//ОбластьПодвалНоменклатура.Параметры.Заполнить(Шапка);
	//ТабДокумент.Вывести(ОбластьПодвалНоменклатура);
	//ВыборкаПоСтрокам = ЗапросПоТоварам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	//Если ВыборкаПоСтрокам.Следующий() Тогда
	//	Выборка = ВыборкаПоСтрокам.Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		ТабДокумент.Присоединить(ОбластьПодвалТипЦен);
	//	КонецЦикла;
	//КонецЕсли;

	//ТекОбласть = ТабДокумент.Области.ОтветственныйПредставление;

	//ОбластьОтветственного = ТабДокумент.Область(ТекОбласть.Низ, 14, ТекОбласть.Низ, Мин(ТабДокумент.ШиринаТаблицы, 29));
	//ОбластьОтветственного.Объединить();
	//ОбластьОтветственного.ГраницаСнизу            = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
	//ОбластьОтветственного.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;

	//Возврат ТабДокумент;

КонецФункции // ПечатьДокумента()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, Форма = Неопределено) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Форма <> Неопределено Тогда
		Если Не ПроверитьМодифицированностьВФорме(ЭтотОбъект, Форма) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Если Не ПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ИмяМакета = "ПереченьЦен" Тогда
		// Получить экземпляр документа на печать
		ТабДокумент = ПечатьДокумента();
		
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("СправочникСсылка.ДополнительныеПечатныеФормы") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = ИмяМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = Ссылка;
		ТабДокумент = Обработка.Печать();

	КонецЕсли;

	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()));

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСписокПечатныхФорм() Экспорт

	СписокМакетов = Новый СписокЗначений;

	//СписокМакетов.Добавить("ПереченьЦен", "Перечень цен");

	ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
	Возврат СписокМакетов;

КонецФункции // ПолучитьСписокПечатныхФорм()

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ДатаНачалаПланирования, ДатаОкончанияПланирования");

	// Теперь позовем общую процедуру проверки.
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Заголовок = "Проведение документа """ + СокрЛП(Ссылка) + """: ";
	ПроверитьЗаполнениеШапки(неопределено, Отказ, Заголовок);
КонецПроцедуры