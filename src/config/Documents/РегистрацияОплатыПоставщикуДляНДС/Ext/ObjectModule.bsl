////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - структура, содержащая рексвизиты шапки документа и результаты запроса по шапке,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	
	// Теперь позовем общую процедуру проверки.
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
//
Функция ПодготовитьТаблицуПоОплатам(РезультатЗапросаПоОплатам)

	ТаблицаОплат = РезультатЗапросаПоОплатам.Выгрузить();
	
	Возврат ТаблицаОплат;

КонецФункции // ПодготовитьТаблицуПоОплатам()

// Проверяет правильность заполнения строк табличной части.
//
//
Процедура ПроверитьЗаполнениеТабличнойЧастиПоОплатам(ТаблицаПоОплатам, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ВидЦенности, Поставщик, СчетФактура, СтавкаНДС, ДокументОплаты");
	
	// Теперь позовем общую процедуру проверки.
	ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Состав", СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// По результату запроса по шапке документа формируем движения по регистрам.
//
//
Процедура ДвиженияПоРегистрам(ТаблицаПоОплатам, Отказ, Заголовок);
	
	Для Каждого ТекСтрокаОплат Из ТаблицаПоОплатам Цикл
		Движение = Движения.НДСПокупки.Добавить();
		Движение.Период = ?(ЗначениеНеЗаполнено(ТекСтрокаОплат.ДатаОплаты),Дата,ТекСтрокаОплат.ДатаОплаты);
		Движение.Организация = 	Организация;
		Движение.ВидЦенности = 	ТекСтрокаОплат.ВидЦенности;
		Движение.Поставщик = 	ТекСтрокаОплат.Поставщик;
		Движение.СчетФактура = 	ТекСтрокаОплат.СчетФактура;
		Движение.СтавкаНДС = 	ТекСтрокаОплат.СтавкаНДС;
		Движение.СуммаБезНДС = 	ТекСтрокаОплат.СуммаБезНДС;
		Движение.НДС = 			ТекСтрокаОплат.НДС;
		Движение.Событие = 		Перечисления.СобытияПоНДСПокупки.НДСОплачен;
		Движение.ДокументОплаты = ТекСтрокаОплат.ДокументОплаты;
		
	КонецЦикла;

	// записываем движения регистра
	Движения.НДСПокупки.Записать();
								  
КонецПроцедуры // ДвиженияПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);

	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(Отказ, Заголовок);
	
	// Подготовим данные необходимые для проведения и проверки заполенения табличной части.
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("ВидЦенности",		"ВидЦенности");
	СтруктураПолей.Вставить("Поставщик",		"Поставщик");
	СтруктураПолей.Вставить("СчетФактура",		"СчетФактура");
	СтруктураПолей.Вставить("ДатаОплаты",		"ДатаОплаты");
	СтруктураПолей.Вставить("ДокументОплаты",	"ДокументОплаты");
	СтруктураПолей.Вставить("СтавкаНДС",		"СтавкаНДС");
	СтруктураПолей.Вставить("СуммаБезНДС",		"СуммаБезНДС");
	СтруктураПолей.Вставить("НДС",				"НДС");

	РезультатЗапросаПоОплатам = СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Состав", СтруктураПолей);
	ТаблицаПоОплатам = 			ПодготовитьТаблицуПоОплатам(РезультатЗапросаПоОплатам);
	
	ПроверитьЗаполнениеТабличнойЧастиПоОплатам(ТаблицаПоОплатам, Отказ, Заголовок);
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(ТаблицаПоОплатам, Отказ, Заголовок);
	КонецЕсли;
 
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ Отказ Тогда
	
		обЗаписатьПротоколИзменений(ЭтотОбъект);
	
	КонецЕсли; 

КонецПроцедуры
