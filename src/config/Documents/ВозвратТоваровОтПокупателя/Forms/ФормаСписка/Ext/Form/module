
Перем ИспользоватьКомментарийРеализацииВозврата;
Перем СтруктДопОтбор;


//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.Список);
    Элементыформы.ДействияФормы.Кнопки.Удалить(Элементыформы.ДействияФормы.Кнопки.ДополнительныйОтбор);
    Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОграниченныйИнтерфейс") = Истина Тогда
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	НЕ ДоговорыКонтрагентов.Наименование ПОДОБНО ""%*%""
		|	И 99 = 99
		|	И 98 = 98
		|	И ДоговорыКонтрагентов.Организация = &Организация";

		Запрос.УстановитьПараметр("Организация",Справочники.Организации.НайтиПоКоду("00001"));	

		Если Отбор["ДокументыПоДоговоруКонтрагента"].Использование  = Истина Тогда
			СписокДоступныхДоговоров =Отбор["ДокументыПоДоговоруКонтрагента"].Значение; 
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорыКонтрагентов.Ссылка В(&СписокДоговоров)");
			
			Если РольДоступна("БухгалтерФормулыОТХ") тогда
				СписокДоступныхДоговоров = ДобавитьДоговорыФормулыОТХ(СписокДоступныхДоговоров);
			КонецЕсли;
			
			Запрос.УстановитьПараметр("СписокДоговоров",СписокДоступныхДоговоров);	
		КонецЕсли;
		Если Отбор["ДокументыПоКонтрагенту"].Использование  = Истина Тогда
			СписокДоступныхКонтрагентов =Отбор["ДокументыПоКонтрагенту"].Значение; 
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"98 = 98","ДоговорыКонтрагентов.Владелец В(&СписокКонтрагентов)");
			
			Если РольДоступна("БухгалтерФормулыОТХ") тогда
				СписокДоступныхКонтрагентов = ДобавитьКонтрагентовФормулыОТХ(СписокДоступныхКонтрагентов);
			КонецЕсли;
			
			Запрос.УстановитьПараметр("СписокКонтрагентов",СписокДоступныхКонтрагентов);	
		КонецЕсли;
		Результат = Запрос.Выполнить().Выгрузить();
        СписокДоговоровМенеджера = Новый СписокЗначений;
	    СписокДоговоровМенеджера.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Ссылка"));
		Отбор["ДокументыПоДоговоруКонтрагента"].Использование = Истина;
		Отбор["ДокументыПоДоговоруКонтрагента"].ВидСравнения = ВидСравнения.ВСписке;
		Отбор["ДокументыПоДоговоруКонтрагента"].Значение = СписокДоговоровМенеджера;
       	ЭлементыФормы.Список.НастройкаОтбора["ДокументыПоДоговоруКонтрагента"].Доступность = Ложь;


		Отбор["Подразделение"].Использование = Ложь;
		Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
		Отбор["Подразделение"].Значение = Справочники.Подразделения.ПустаяСсылка() ;
       	ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		
конецесли;	
	

КонецПроцедуры

Процедура СписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПоказатьСтатусПоступленияВозвратаКомменты(ОформленияСтрок);
	
КонецПроцедуры

Процедура ПоказатьСтатусПоступленияВозвратаКомменты(ОформленияСтрок)
	
	МасДокНаЭкране = Новый Массив();
	
	Для Каждого ОформлениеТекСтроки Из ОформленияСтрок Цикл
		ТекСтр = ОформлениеТекСтроки.ДанныеСтроки;
		МасДокНаЭкране.Добавить(ТекСтр.Ссылка);
	КонецЦикла;
	
	Если МасДокНаЭкране.Количество() > 0 Тогда
		тзСтатусы = ПолучитьСтатусыПоступленияВозвратовДокументов(МасДокНаЭкране);
		тзКомменты = ПолучитьКомментыПоступленияВозврата(МасДокНаЭкране);
		Для Каждого ОформлениеТекСтроки Из ОформленияСтрок Цикл
			ТекДокСсылка = ОформлениеТекСтроки.ДанныеСтроки.Ссылка;
			СтрокаОформитьСтатусы = тзСтатусы.Найти(ТекДокСсылка, "Объект");
			Если Не СтрокаОформитьСтатусы = Неопределено Тогда
				ОформлениеТекСтроки.Ячейки.Статус.УстановитьТекст(СтрокаОформитьСтатусы.Значение);
			КонецЕсли;
			СтрокаОформитьКомменты = тзКомменты.Найти(ТекДокСсылка, "Объект");
			Если Не СтрокаОформитьКомменты = Неопределено Тогда
				ОформлениеТекСтроки.Ячейки.КомментарийПоступленияВозврата.УстановитьТекст(СтрокаОформитьКомменты.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПоказатьСтатусПоступленияВозвратаКомменты()

Функция ПолучитьСтатусыПоступленияВозвратовДокументов(МасДокПоказатьСтатус)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаСтатусыПоступленияВозвратов();
	
	Запрос.УстановитьПараметр("СписокДокументов", МасДокПоказатьСтатус);
	
	Результат = Запрос.Выполнить();
	Выгрузка  = Результат.Выгрузить();
	
	Возврат Выгрузка;
	
КонецФункции // ПолучитьСтатусыПоступленияВозвратовДокументов()

Функция ТекстЗапросаСтатусыПоступленияВозвратов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект,
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|	И ЗначенияСвойствОбъектов.Объект В(&СписокДокументов)
	|	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтатусПоступленияВозврата)";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаСтатусыПоступленияВозвратов()

Процедура ДействияФормыСтатусПоступленияВозвратаИзменить(Кнопка)
	
	ТекСтр = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекСтр = Неопределено Тогда
		Предупреждение("Выделите строку с документов", 20);
		Возврат;
	КонецЕсли;
	
	СтатусыСписок = ПолучитьСписокСтатусовПоступленийВозвратов();
	
	НовСтатусЭлемСписка = СтатусыСписок.ВыбратьЭлемент("Укажите статус");
	
	Если НЕ НовСтатусЭлемСписка = Неопределено Тогда
		НовСтатус = НовСтатусЭлемСписка.Значение;
		МенеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Объект   = ТекСтр.Ссылка;
		МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.СтатусПоступленияВозврата;
		МенеджерЗаписи.Значение = НовСтатус;
		МенеджерЗаписи.Записать();
		ЭлементыФормы.Список.ОбновитьСтроки(ТекСтр);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокСтатусовПоступленийВозвратов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтатусПоступленияВозврата)";
	Результат = Запрос.Выполнить();
	Выгрузка  = Результат.Выгрузить();
	Мас = Выгрузка.ВыгрузитьКолонку("Ссылка");
	Спис = Новый СписокЗначений();
	Спис.ЗагрузитьЗначения(Мас);
	
	Возврат Спис;
	
КонецФункции // ПолучитьСписокСтатусовПоступленийВозвратов()

Процедура ДействияФормыДополнительныйОтбор(Кнопка)
	
	Фрм = Документы.ВозвратТоваровПоставщику.ПолучитьФорму("ФормаДопОтбор", ЭтаФорма);
	Фрм.СтруктДопОтбор = СтруктДопОтбор;
	Если Фрм.ОткрытьМодально() = "ОК" Тогда
		СтруктДопОтбор = Фрм.СтруктДопОтбор;
		ДополнительныйОтборСтатусВыполнить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнительныйОтборСтатусВыполнить()
	
	НачПериода = ДокументСписок.Отбор.Дата.ЗначениеС;
	Если НачПериода = '00010101000000' Тогда
		НачПериода = НачПериода + 1;
	КонецЕсли;
	КонПериода = ДокументСписок.Отбор.Дата.ЗначениеПо;
	Если КонПериода = '00010101000000' Тогда
		КонПериода = ТекущаяДата();
	КонецЕсли;
	
	Если СтруктДопОтбор.Статус Тогда
		ДокументыОтобрать = ПолучитьДокументыПоДопОтбору(НачПериода, КонПериода);
		Если НЕ ДокументыОтобрать = Неопределено Тогда
			ДокОтборЛок = ДокументыОтобрать;
			Если СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.Равно И НЕ ЗначениеЗаполнено(СтруктДопОтбор.СтатусЗначение) Тогда
				ДокументСписок.Отбор.Ссылка.ВидСравнения  = ВидСравнения.НеВСписке;
			Иначе
				ДокументСписок.Отбор.Ссылка.ВидСравнения  = ВидСравнения.ВСписке;
			КонецЕсли;
			ДокументСписок.Отбор.Ссылка.Значение      = ДокОтборЛок;
			ДокументСписок.Отбор.Ссылка.Использование = Истина;
		Иначе
			ДокументСписок.Отбор.Ссылка.Использование = ЛОЖЬ;
		КонецЕсли;
	Иначе
		ДокументСписок.Отбор.Ссылка.Использование = Ложь;
	КонецЕсли;
	
	ЭлементыФормы.ДействияФормы.Кнопки.ДополнительныйОтбор.Пометка = ДокументСписок.Отбор.Ссылка.Использование;
	
КонецПроцедуры // ДополнительныйОтборСтатусВыполнить()

Функция ПолучитьСтрокуОтборПоСтатусуДляЗапроса(СтруктДопОтбор)
	
	Если СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.Равно И НЕ ЗначениеЗаполнено(СтруктДопОтбор.СтатусЗначение) Тогда
		зтСравнениеСтатус = ""; // Выбираем все документы, а потом на форме отфильтруем их по НеВСписке
	Иначе
		Если СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.Равно Тогда
			зтСравнениеСтатус = " И ЗначенияСвойствОбъектов.Значение = &Статус";
		ИначеЕсли СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.НеРавно Тогда
			зтСравнениеСтатус = " И (НЕ ЗначенияСвойствОбъектов.Значение = &Статус)";
		ИначеЕсли СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.ВСписке Тогда
			зтСравнениеСтатус = " И ЗначенияСвойствОбъектов.Значение В(&Статус)";
		Иначе
			зтСравнениеСтатус = " И (НЕ ЗначенияСвойствОбъектов.Значение В(&Статус))";
		КонецЕсли;
	КонецЕсли;
	
	Возврат зтСравнениеСтатус;
	
КонецФункции // ПолучитьСтрокуОтборПоСтатусуДляЗапроса()

Функция ПолучитьДокументыПоДопОтбору(НачПериода, КонПериода)
	
	Если СтруктДопОтбор.Статус Тогда
		
		Запрос = Новый Запрос;
		
		зтСравнениеСтатус = ПолучитьСтрокуОтборПоСтатусуДляЗапроса(СтруктДопОтбор);
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Документ.ВозвратТоваровОтПокупателя) КАК Док
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект ССЫЛКА Документ.ВозвратТоваровОтПокупателя
		|	И ЗначенияСвойствОбъектов.Объект.Дата МЕЖДУ &НачПериода И &КонПериода
		|	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтатусПоступленияВозврата)
		|	" + зтСравнениеСтатус + "";
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр("Статус", СтруктДопОтбор.СтатусЗначение);
		Запрос.УстановитьПараметр("НачПериода", НачПериода);
		Запрос.УстановитьПараметр("КонПериода", КонПериода);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выгрузка  = РезультатЗапроса.Выгрузить();
		Мас = Выгрузка.ВыгрузитьКолонку("Док");
		Спис = Новый СписокЗначений();
		Спис.ЗагрузитьЗначения(Мас);
	Иначе
		Спис = Неопределено;
	КонецЕсли;
	
	Возврат Спис;
	
КонецФункции // ПолучитьДокументыПоДопОтбору()

Процедура ДействияФормыКомментарийПоступленияВозвратаУстановить(Кнопка)
	
	ТекСтр = ЭлементыФормы.Список.ТекущиеДанные;
	
	Если ТекСтр = Неопределено Тогда
		Предупреждение("Укажите строку, в которую хотите внести комментарий", 20);
		Возврат;
	КонецЕсли;
	
	СуществующийКомментарий = ПолучитьКомментарийПоступленияВозврата(ТекСтр.Ссылка);
	Если СуществующийКомментарий = Неопределено Тогда
		Коммент = "";
	Иначе
		Коммент = СуществующийКомментарий;
	КонецЕсли;
	
	Если ВвестиЗначение(Коммент, "Введите комментарий") Тогда
		ЗапомнитьНовыйКомментарийПоступленияВозврата(ТекСтр.Ссылка, Коммент);
		ЭлементыФормы.Список.ОбновитьСтроки(ТекСтр);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКомментарийПоступленияВозврата(ДокСсылка)
	
	МенеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Объект   = ДокСсылка;
	МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.КомментарийПоступленияВозврата;
	
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи.Значение;
	
КонецФункции // ПолучитьКомментарийПоступленияВозврата()

Процедура ЗапомнитьНовыйКомментарийПоступленияВозврата(ДокСсылка, Коммент)
	
	МенеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Объект   = ДокСсылка;
	МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.КомментарийПоступленияВозврата;
	МенеджерЗаписи.Значение = Коммент;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры // ЗапомнитьНовыйКомментарийПоступленияВозврата()

Функция ПолучитьКомментыПоступленияВозврата(МасДокНаЭкране)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Документ.ВозвратТоваровОтПокупателя) КАК Объект,
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|	И ЗначенияСвойствОбъектов.Объект В(&СписокДокументовКомменты)
	|	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КомментарийПоступленияВозврата)";
	
	Запрос.УстановитьПараметр("СписокДокументовКомменты", МасДокНаЭкране);

	Результат = Запрос.Выполнить();
	Выгрузка  = Результат.Выгрузить();
	
	Возврат Выгрузка;
	
КонецФункции // ПолучитьКомментыПоступленияВозврата()


//////////////////////////////////////////////////////////////////////////////////

СтруктДопОтбор = Новый Структура;
СтруктДопОтбор.Вставить("Статус"            , Ложь);
СтруктДопОтбор.Вставить("СтатусВидСравнения", ВидСравнения.Равно);
СтруктДопОтбор.Вставить("СтатусЗначение"    , Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка());
