Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Хозрасчетный.Очистить();
	Движения.Хозрасчетный.Записать();
	Движения.Хозрасчетный.Записывать = Истина;
	
	НаборДвижений = Движения.Хозрасчетный;
	
	если ЗакрытиеПериода Тогда   //Самый последний, перепроводится автоматом из отчета
		ДвиженияИтогиВРегистр(НаборДвижений);
	иначе
		
		ДвиженияСкладаВРегистр(НаборДвижений);
		
		ДвиженияПоставкиВРегистр(НаборДвижений);
		
		ДвиженияПродажиВРегистр(НаборДвижений);
		
		ДвиженияОплатыВРегистр(НаборДвижений);
		
		ДвиженияПриходДенегВРегистр(НаборДвижений);
		
		ДвиженияБонусыВРегистр(НаборДвижений);
		
		ДвиженияАрендаВРегистр(НаборДвижений);
		
		ДвиженияКредитыТукущиеВРегистр(НаборДвижений);
		
		ДвиженияКредитыПланируемыеВРегистр(НаборДвижений);
		
		ДвиженияНачальныеОстаткиВРегистр(НаборДвижений); 
		
		ДвиженияИнвестицииПланируемыеВРегистр(НаборДвижений);
		
		ДвиженияДивидендыПланируемыеВРегистр(НаборДвижений);

		
	КонецЕсли;
		
Конецпроцедуры  


Процедура ДвиженияСкладаВРегистр(НаборДвижений)
	
	ПериодНачало = ПериодПланирования.ДатаНачала;
	
	Для каждого стр из Склад Цикл
				
		СтрокаДвижений = НаборДвижений.Добавить();
		
		СтрокаДвижений.Период            = ПериодНачало;

		СтрокаДвижений.ПериодПланирования = ПериодПланирования;
		СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
		
		СтрокаДвижений.Менеджер = стр.Менеджер;
				
		СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
		СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
		
		
		УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
		УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
		//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
		
		//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",        стр.Разрез1);
		//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
		//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
		
		СтрокаДвижений.КоличествоДТ = стр.КоличествоНачалоПериода;
		//СтрокаДвижений.КоличествоКТ = стр.КоличествоНачалоПериода;
		
		СтрокаДвижений.Сумма = стр.СебестоимостьНаНачалоПериода; 	
	КонецЦикла;
			
КонецПроцедуры

Процедура ДвиженияПоставкиВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	ПоступленияСвернуть = Поступления.Выгрузить();
	ПоступленияСвернуть.Свернуть("Менеджер,разрез1,разрез2,разрез3,ПроцентДопРасходов","месяц1Количество,Месяц1Сумма,месяц2Количество,Месяц2Сумма,
	|месяц3Количество,Месяц3Сумма,месяц4Количество,Месяц4Сумма,месяц5Количество,Месяц5Сумма,месяц6Количество,Месяц6Сумма,
	|месяц7Количество,Месяц7Сумма,месяц8Количество,Месяц8Сумма,месяц9Количество,Месяц9Сумма,месяц10Количество,Месяц10Сумма,
	|месяц11Количество,Месяц11Сумма,месяц12Количество,Месяц12Сумма,");
	
	Для каждого стр из ПоступленияСвернуть Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = стр.Менеджер;
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
			
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
			
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",        стр.Разрез1);
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Контрагенты",        стр.Разрез3);
			
			СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
			//СтрокаДвижений.КоличествоКТ = стр.КоличествоНачалоПериода;
			СтрокаДвижений.КоличествоКТ = стр.ПроцентДопРасходов;
			СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры

Процедура ДвиженияПродажиВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	Если ПланПродажПоПодразделениям.Количество()>0 тогда
		ТабПродаж = ПланПродажПоПодразделениям;
	иначе
		ТабПродаж = ПланПродаж;
    конецЕсли;	
	Для каждого стр из ТабПродаж Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл
			//списание ос склада===================================================
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = стр.Менеджер;
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
			
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
			//Если ПланПродажПоПодразделениям.Количество()>0 тогда
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",       стр.подразделение);
			//конецЕсли;
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Контрагенты",        стр.Разрез3);
			
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",        стр.Разрез1);
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
			
			//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
			СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
			СуммаСписания = стр["Месяц"+Строка(ии)+"Сумма"] / (стр.Наценка/100+1);
			СтрокаДвижений.Сумма = СуммаСписания;
			
			//Торговая наценка=====================================================
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = стр.Менеджер;
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.ТорговаяНаценка;
			
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
	         Если ПланПродажПоПодразделениям.Количество()>0 тогда
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",       стр.подразделение);
			конецЕсли;
			
			
			
			
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",        стр.Разрез1);
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
			
	         Если ПланПродажПоПодразделениям.Количество()>0 тогда
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Подразделения",       стр.подразделение);
			конецЕсли;
			
			
			
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
			
			//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
			//СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
			
			СуммаНаценки = стр["Месяц"+Строка(ии)+"Сумма"] - СуммаСписания;
			
			СтрокаДвижений.Сумма = СуммаНаценки;

			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры

Процедура ДвиженияОплатыВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	ОплатыСвернуть = ОплатаПоставщикам.Выгрузить();
	ОплатыСвернуть.Свернуть("Менеджер,разрез1,разрез2,разрез3","Месяц1Сумма,Месяц2Сумма,
	|Месяц3Сумма,Месяц4Сумма,Месяц5Сумма,Месяц6Сумма,
	|Месяц7Сумма,Месяц8Сумма,Месяц9Сумма,Месяц10Сумма,
	|Месяц11Сумма,Месяц12Сумма,");
	
	Для каждого стр из ОплатыСвернуть Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = стр.Менеджер;
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
			
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Контрагенты",        стр.Разрез3);
			
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПоставщику);
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"СтатьиЗатрат",        стр.Разрез3);
			
			//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
			//СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
			
			СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры

Процедура ДвиженияПриходДенегВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	ПриходыСвернуть = ПриходДенег.Выгрузить();
	ПриходыСвернуть.Свернуть("Менеджер,разрез1,разрез2,разрез3","Месяц1Сумма,Месяц2Сумма,
	|Месяц3Сумма,Месяц4Сумма,Месяц5Сумма,Месяц6Сумма,
	|Месяц7Сумма,Месяц8Сумма,Месяц9Сумма,Месяц10Сумма,
	|Месяц11Сумма,Месяц12Сумма,");

	
	Для каждого стр из ПриходыСвернуть Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = стр.Менеджер;
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
			
			
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя);
            УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиЗатрат",       Справочники.СтатьиЗатрат.СОтгрузок);

			
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",        стр.Разрез1);
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
			
			//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
			//СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
			
			СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры

Процедура ДвиженияПриходДенегСДебиторкиВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	ПриходыСвернуть = ПриходДенегДебиторка.Выгрузить();
	ПриходыСвернуть.Свернуть("Менеджер,разрез1,разрез2,разрез3","Месяц1Сумма,Месяц2Сумма,
	|Месяц3Сумма,Месяц4Сумма,Месяц5Сумма,Месяц6Сумма,
	|Месяц7Сумма,Месяц8Сумма,Месяц9Сумма,Месяц10Сумма,
	|Месяц11Сумма,Месяц12Сумма,");

	
	Для каждого стр из ПриходыСвернуть Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = стр.Менеджер;
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
			
			
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя);
            УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиЗатрат",       Справочники.СтатьиЗатрат.СДебиторки);

			
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",        стр.Разрез1);
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
			
			//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
			//СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
			
			СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры


Процедура ДвиженияБонусыВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	Для каждого стр из Бонусы Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		Если стр.ВДебиторку Тогда       //Уменьшаем дебиторку за счет бонусов
			
			для ии = 1 по КоличествоМесяцев Цикл			
				СтрокаДвижений = НаборДвижений.Добавить();
				
				СтрокаДвижений.Период            = Датаии+5;
				
				СтрокаДвижений.ПериодПланирования = ПериодПланирования;
				СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
				
				СтрокаДвижений.Менеджер = стр.Менеджер;
				
				СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
				СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.БонусыВходящиеОтПоставщиков;
				
				
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
				//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
				
				//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
				//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.Бонусы);
				
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",        стр.Разрез1);
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
				//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
				
				//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
				//СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
				
				СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
				
				Датаии = ДобавитьМесяц(Датаии,1);
			КонецЦикла;
	
		Иначе                    // Тогда бонусы падают в собственные денежные средства
			
			для ии = 1 по КоличествоМесяцев Цикл			
				СтрокаДвижений = НаборДвижений.Добавить();
				
				СтрокаДвижений.Период            = Датаии+5;
				
				СтрокаДвижений.ПериодПланирования = ПериодПланирования;
				СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
				
				СтрокаДвижений.Менеджер = стр.Менеджер;
				
				СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
				СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.БонусыВходящиеОтПоставщиков;
				
				
				//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
				//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
				//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
				
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.Бонусы);
				
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",        стр.Разрез1);
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
				//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
				
				//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
				//СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
				
				СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
				
				Датаии = ДобавитьМесяц(Датаии,1);
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
			
КонецПроцедуры

Процедура ДвиженияБонусыИсходящиеВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	БонусыИсходящиеСвернуть = БонусыИсходящие.Выгрузить();
	БонусыИсходящиеСвернуть.Свернуть("Менеджер,Подразделение","Месяц1Сумма,Месяц2Сумма,
	|Месяц3Сумма,Месяц4Сумма,Месяц5Сумма,Месяц6Сумма,
	|Месяц7Сумма,Месяц8Сумма,Месяц9Сумма,Месяц10Сумма,
	|Месяц11Сумма,Месяц12Сумма,");

	Для каждого стр из БонусыИсходящиеСвернуть Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
			для ии = 1 по КоличествоМесяцев Цикл			
				СтрокаДвижений = НаборДвижений.Добавить();
				
				СтрокаДвижений.Период            = Датаии+5;
				
				СтрокаДвижений.ПериодПланирования = ПериодПланирования;
				СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
				
				СтрокаДвижений.Менеджер = стр.Менеджер;
				
				СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
				СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
				
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        стр.Подразделение);
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиЗатрат",        Справочники.СтатьиЗатрат.НайтиПоКоду("О0215"));
				
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Подразделения",        стр.Подразделение);
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.Затраты);
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"СтатьиЗатрат",        Справочники.СтатьиЗатрат.НайтиПоКоду("О0215"));
				
				СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
				
				Датаии = ДобавитьМесяц(Датаии,1);
			КонецЦикла;
			
	КонецЦикла;
	
	 ///Запишем подробно забаланс
	 
        ЯШТ= Справочники.Организации.НайтиПоКоду("00001");

	 Для каждого стр из БонусыИсходящие Цикл
		 
		 Датаии = ПериодПланирования.ДатаНачала;
		 
		 для ии = 1 по КоличествоМесяцев Цикл			
			 СтрокаДвижений = НаборДвижений.Добавить();
			 
			 СтрокаДвижений.Период            = Датаии+5;
			 
			 СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			 СтрокаДвижений.Организация = ЯШТ;
			 
			 СтрокаДвижений.Менеджер = стр.ответственный;
			 
			 СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.БонусыИсходящие;
			 
			 УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",стр.Разрез1);
			 УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",стр.Разрез2);
			 УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",стр.Подразделение);
			 СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			 
			 
			 
		 конецЦикла;
	 конецЦикла;		
	
	
КонецПроцедуры


Процедура ДвиженияАрендаВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	Для каждого стр из Услуги Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл    //считаем что продаем услуг столько же, сколько за них получаем денег,
			                                    //поэтому расчеты с контрагентами не двигаем
			СтрокаДвижений = НаборДвижений.Добавить();    //ПриходДенег
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетыПоАрендеСПокупателями;
			
			
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.ВыручкаОтАренды);
			
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",        Справочники.НоменклатурныеГруппы.НайтиПоКоду("F0004"));
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
			
			//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
			//СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
			
			СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры

Процедура ДвиженияКредитыТукущиеВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	Для каждого стр из КредитыТекущие Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл    //считаем что продаем услуг столько же, сколько за них получаем денег,
			                                    //поэтому расчеты с контрагентами не двигаем
			СтрокаДвижений = НаборДвижений.Добавить();    //ПриходДенег
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ДолгосрочныеКредиты;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
			
			
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
			
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.ВозвратКредитовБанкам);
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Контрагенты",        стр.Контрагент);
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
			
			//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
			//СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
			
			СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры

Процедура ДвиженияКредитыПланируемыеВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	Для каждого стр из КредитыПланируемые Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл    //считаем что продаем услуг столько же, сколько за них получаем денег,
			                                    //поэтому расчеты с контрагентами не двигаем
			СтрокаДвижений = НаборДвижений.Добавить();    //ПриходДенег
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.ДолгосрочныеКредиты;
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
			
			
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",        стр.Разрез1);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"ВидыТоваров",        стр.Разрез3);
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.КредитыБанков);
			
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Контрагенты",        стр.Контрагент);
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",       стр.Разрез2);
			//УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"ВидыТоваров",        стр.Разрез3);
			
			//СтрокаДвижений.КоличествоДТ = стр["Месяц"+Строка(ии)+"Количество"];
			//СтрокаДвижений.КоличествоКТ = стр["Месяц"+Строка(ии)+"Количество"];
			
			СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры

Процедура ДвиженияИнвестицииПланируемыеВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	Для каждого стр из Инвестиции Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл    //считаем что продаем услуг столько же, сколько за них получаем денег,
			//поэтому расчеты с контрагентами не двигаем
			СтрокаДвижений = НаборДвижений.Добавить();    //ПриходДенег
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			Если стр.ВидДвижения = Перечисления.ВидыДвиженийПриходРасход.Расход тогда
				
				СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
				СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.Инвестиции;
				
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.Инвестиции);
				
			иначе
				
				СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
				СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Инвестиции;
				
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.Инвестиции);
				
			конецЕсли;
			
			СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДвиженияДивидендыПланируемыеВРегистр(НаборДвижений)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	Для каждого стр из Дивиденды Цикл
		
		Датаии = ПериодПланирования.ДатаНачала;
		
		для ии = 1 по КоличествоМесяцев Цикл    //считаем что продаем услуг столько же, сколько за них получаем денег,
			//поэтому расчеты с контрагентами не двигаем
			СтрокаДвижений = НаборДвижений.Добавить();    //ПриходДенег
			
			СтрокаДвижений.Период            = Датаии+5;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			Если стр.ВидДвижения = Перечисления.ВидыДвиженийПриходРасход.Расход тогда
				
				СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
				СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеОблагаемыеЕНВД;
				
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
				УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.Инвестиции);
				
			иначе
				
				СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
				СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеОблагаемыеЕНВД;
				
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
				УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"СтатьиДвиженияДенежныхСредств",       Справочники.СтатьиДвиженияДенежныхСредств.Инвестиции);
				
			конецЕсли;
			
			СтрокаДвижений.Сумма = стр["Месяц"+Строка(ии)+"Сумма"];
			
			Датаии = ДобавитьМесяц(Датаии,1);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры


Процедура ДвиженияНачальныеОстаткиВРегистр(НаборДвижений)
	
	ПериодНачало = ПериодПланирования.ДатаНачала;
	
	Для каждого стр из НачальныеОстатки Цикл
		Если Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ОсновныеСредства Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ОСвОрганизации;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.Сумма; 
			
		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ВнеоборотныеАктивы Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.НематериальныеАктивыОрганизации;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.Сумма;
			
		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Материалы Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.СырьеИМатериалы;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.Сумма;
			
		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ТоварыНаСкладах Тогда
			 //Добавляем то что есть до балансовой ведичины
			 
			запрос = Новый Запрос;
			запрос.УстановитьПараметр("Дата",ПериодНачало+1);
			запрос.УстановитьПараметр("Товары",ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
			запрос.УстановитьПараметр("ПериодПланирования",ПериодПланирования);
			запрос.УстановитьПараметр("Ссылка",Ссылка);
			запрос.УстановитьПараметр("Брак",Справочники.НоменклатурныеГруппы.НайтиПоКоду("Ф0097"));
			
			Запрос.Текст = "ВЫБРАТЬ
			               |	ВЫБОР
			               |		КОГДА БюджетДоходовНачальныеОстаткиСклад.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(справочник.номенклатурныеГруппы.Пустаяссылка)
			               |			ТОГДА &Брак
			               |		ИНАЧЕ ЕСТЬNULL(БюджетДоходовНачальныеОстаткиСклад.НоменклатурнаяГруппа, &Брак)
			               |	КОНЕЦ КАК НоменклатурнаяГруппа,
			               |	СУММА(БюджетДоходовНачальныеОстаткиСклад.Сумма) КАК Сумма,
			               |	СУММА(БюджетДоходовНачальныеОстаткиСклад.Количество) КАК Количество,
			               |	БюджетДоходовНачальныеОстаткиСклад.Бренд
			               |ПОМЕСТИТЬ Табл
			               |ИЗ
			               |	Документ.БюджетДоходов.НачальныеОстаткиСклад КАК БюджетДоходовНачальныеОстаткиСклад
			               |ГДЕ
			               |	БюджетДоходовНачальныеОстаткиСклад.Ссылка = &Ссылка
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	БюджетДоходовНачальныеОстаткиСклад.НоменклатурнаяГруппа,
			               |	БюджетДоходовНачальныеОстаткиСклад.Бренд,
			               |	ВЫБОР
			               |		КОГДА БюджетДоходовНачальныеОстаткиСклад.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(справочник.номенклатурныеГруппы.Пустаяссылка)
			               |			ТОГДА &Брак
			               |		ИНАЧЕ ЕСТЬNULL(БюджетДоходовНачальныеОстаткиСклад.НоменклатурнаяГруппа, &Брак)
			               |	КОНЕЦ
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	СРЕДНЕЕ(ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстаток, 0)) КАК СуммаОстаток,
			               |	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто1, Табл.НоменклатурнаяГруппа) КАК НомГруппа,
			               |	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, Табл.Бренд) КАК Производитель,
			               |	СУММА(ЕСТЬNULL(Табл.Сумма, 0)) КАК Сумма,
			               |	ЕСТЬNULL(ХозрасчетныйОстатки.Менеджер, Табл.НоменклатурнаяГруппа.Ответственный) КАК Менеджер,
			               |	СУММА(ЕСТЬNULL(Табл.Количество, 0)) КАК Количество,
			               |	СРЕДНЕЕ(ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстатокДт, 0)) КАК КоличествоОстаток
			               |ИЗ
			               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет = &Товары, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
			               |		ПОЛНОЕ СОЕДИНЕНИЕ Табл КАК Табл
			               |		ПО ХозрасчетныйОстатки.Менеджер = Табл.НоменклатурнаяГруппа.Ответственный
			               |			И (ВЫБОР
			               |				КОГДА ХозрасчетныйОстатки.Субконто1.ЭтоГруппа
			               |					ТОГДА ХозрасчетныйОстатки.Субконто1 = Табл.НоменклатурнаяГруппа.Родитель
			               |				ИНАЧЕ ХозрасчетныйОстатки.Субконто1 = Табл.НоменклатурнаяГруппа
			               |			КОНЕЦ)
			               |			И (ВЫБОР
			               |				КОГДА Табл.Бренд = ЗНАЧЕНИЕ(справочник.Производители.Пустаяссылка)
			               |					ТОГДА ИСТИНА
			               |				ИНАЧЕ ХозрасчетныйОстатки.Субконто2 = Табл.Бренд
			               |			КОНЕЦ)
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто1, Табл.НоменклатурнаяГруппа),
			               |	ЕСТЬNULL(ХозрасчетныйОстатки.Менеджер, Табл.НоменклатурнаяГруппа.Ответственный),
			               |	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, Табл.Бренд)";
			Рез = Запрос.Выполнить().Выгрузить();
			СуммаНаСкладе = 0;
			//Если Рез.Количество()>0 Тогда
			//	СуммаНаСкладе = рез[0].СуммаОстаток;	
			//КонецЕсли;
			//
			//СуммаДобавить = стр.Сумма-СуммаНаСкладе;
			Для каждого стр из Рез цикл 
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			Если ЗначениеЗаполнено(стр.Менеджер) тогда
			СтрокаДвижений.Менеджер = стр.Менеджер;
		    иначе
			СтрокаДвижений.Менеджер = стр.Номгруппа.ответственный;
			конецЕсли; 
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",стр.НомГруппа);
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",стр.Производитель);
			СтрокаДвижений.КоличествоДТ = стр.Количество-стр.КоличествоОстаток;

			СтрокаДвижений.Сумма = стр.Сумма-стр.СуммаОстаток;
			конецЦикла;
		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ТоварыНаРеализации Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ТоварыНаСКомиссии;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.Сумма;

		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ВзаиморасчетыСПодотчетнымиЛицами Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.Сумма;
			
		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ДенежныеСредства Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
			
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Подразделения",        Справочники.Подразделения.НайтиПоКоду("00005"));
						
			СтрокаДвижений.Сумма = стр.Сумма;
			
		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ДебиторскаяЗадолженностьСПокупателем Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.Сумма;
			
		//ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ДебиторскаяЗадолженностьСПоставщиком Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.СуммаДоп;
			
		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Инвестиции Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.Инвестиции;
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.Сумма;
									
		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.КредиторскаяЗадолженностьСПоставщиком Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.Сумма;
			
		//ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.КредиторскаяЗадолженностьСПокупателем Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным;
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.СуммаДоп;
			
		ИначеЕсли Стр.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Кредиты Тогда
			
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
			
			СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
			
			СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.ДолгосрочныеКредиты;
			СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
						
			СтрокаДвижений.Сумма = стр.Сумма;

		КонецЕсли;

 	
	КонецЦикла;
    ///расшифровку дебиторки в забаланс
	яшт= Справочники.Организации.НайтиПоКоду("00001");
	Для каждого стр из НачальныеОстаткиДебиторкаКредиторка цикл 
		Если стр.Дебиторка<>0 тогда
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = Яшт;
			
			СтрокаДвижений.Менеджер = стр.ответственный;
			Если стр.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком или  стр.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом тогда
				СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.Поставщики;
				
			иначе	
				СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.Покупатели;
            конецЕсли;
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Контрагенты",стр.Контрагент);
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"НоменклатурныеГруппы",стр.НоменклатурнаяГруппа);
			УстановитьСубконто(СтрокаДвижений.СчетДт,СтрокаДвижений.СубконтоДт,"Производители",стр.Бренд);
			СтрокаДвижений.Сумма = стр.дебиторка;
			
		конецЕсли;	
				Если стр.Кредиторка<>0 тогда
			СтрокаДвижений = НаборДвижений.Добавить();
			
			СтрокаДвижений.Период            = ПериодНачало;
			
			СтрокаДвижений.ПериодПланирования = ПериодПланирования;
			СтрокаДвижений.Организация = ЯШТ;
			
			СтрокаДвижений.Менеджер = стр.ответственный;
			
			Если стр.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком или  стр.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом тогда
				СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Поставщики;
				
			иначе	
				СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Покупатели;
            конецЕсли;

			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Контрагенты",стр.Контрагент);
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"НоменклатурныеГруппы",стр.НоменклатурнаяГруппа);
			УстановитьСубконто(СтрокаДвижений.СчетКт,СтрокаДвижений.СубконтоКт,"Производители",стр.Бренд);
			СтрокаДвижений.Сумма = стр.кредиторка;
			
	 конецЕсли;		

			конецЦикла;

			
КонецПроцедуры

Процедура ДвиженияИтогиВРегистр(НаборДвижений)

Запрос = Новый запрос;
	запрос.УстановитьПараметр("Наценка",ПланыСчетов.Хозрасчетный.ТорговаяНаценка);
	запрос.УстановитьПараметр("ПериодПланирования",ПериодПланирования);
	запрос.УстановитьПараметр("период",ПериодПланирования.ДатаНачала+1);

	//запрос.УстановитьПараметр("Подразделение",Справочники.Подразделения.НайтиПоКоду("00005"));
	запрос.УстановитьПараметр("Услуги",Справочники.СтатьиДвиженияДенежныхСредств.ВыручкаОтАренды);
	запрос.УстановитьПараметр("Затраты",Справочники.СтатьиДвиженияДенежныхСредств.Затраты);
	запрос.УстановитьПараметр("Бонусы",Справочники.СтатьиДвиженияДенежныхСредств.Бонусы);
    запрос.УстановитьПараметр("ДС",ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	запрос.УстановитьПараметр("ОС",ПланыСчетов.Хозрасчетный.ОСвОрганизации);
	Запрос.Текст = "ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.ПериодСекунда, МЕСЯЦ) КАК Период,
	               |	СУММА(ХозрасчетныйОбороты.СуммаОборот) КАК СуммаОборот
	               |ПОМЕСТИТЬ ОС
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&Период, , Авто, Счет = &ОС, , ПериодПланирования = &ПериодПланирования, , ) КАК ХозрасчетныйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.ПериодСекунда, МЕСЯЦ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	""Прибыль (Нарастающим итогом)                      "" КАК Показатель,
	               |	ЕСТЬNULL(-ХозрасчетныйОбороты.СуммаОборот, 0) + ЕСТЬNULL(ХозрасчетныйОбороты1.СуммаОборот, 0) + ЕСТЬNULL(ХозрасчетныйОбороты2.СуммаОборот, 0) + ЕСТЬNULL(ХозрасчетныйОбороты3.СуммаОборот, 0) + ЕСТЬNULL(ОС.СуммаОборот, 0) КАК Сумма,
	               |	ХозрасчетныйОбороты.ПериодМесяц КАК Период
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Авто, Счет = &Наценка, , ПериодПланирования = &ПериодПланирования, , ) КАК ХозрасчетныйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |				,
	               |				,
	               |				Авто,
	               |				Счет = &ДС,
	               |				,
	               |				ПериодПланирования = &ПериодПланирования
	               |					И Субконто2 = &Услуги,
	               |				,
	               |				) КАК ХозрасчетныйОбороты1
	               |		ПО ХозрасчетныйОбороты.ПериодМесяц = ХозрасчетныйОбороты1.ПериодМесяц
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |				,
	               |				,
	               |				Авто,
	               |				Счет = &ДС,
	               |				,
	               |				ПериодПланирования = &ПериодПланирования
	               |					И Субконто2 = &Затраты,
	               |				,
	               |				) КАК ХозрасчетныйОбороты2
	               |		ПО ХозрасчетныйОбороты.ПериодМесяц = ХозрасчетныйОбороты2.ПериодМесяц
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |				,
	               |				,
	               |				Авто,
	               |				Счет = &ДС,
	               |				,
	               |				ПериодПланирования = &ПериодПланирования
	               |					И Субконто2 = &Бонусы,
	               |				,
	               |				) КАК ХозрасчетныйОбороты3
	               |		ПО ХозрасчетныйОбороты.ПериодМесяц = ХозрасчетныйОбороты3.ПериодМесяц
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОС КАК ОС
	               |		ПО ХозрасчетныйОбороты.ПериодМесяц = ОС.Период";
	Итоги1 = Запрос.Выполнить().Выгрузить();
	
	Если Итоги1.Количество()> 0 Тогда
		
		ПервыйМесяц = итоги1[0].Сумма;
		
	иначе
		
		ПервыйМесяц = 0;
		
	КонецЕсли;
	
	
	
	
	
	Запрос = новый Запрос;
	запрос.УстановитьПараметр("Период1",ПериодПланирования.ДатаНачала+10);
	запрос.УстановитьПараметр("ПериодПланирования",ПериодПланирования);
	//запрос.УстановитьПараметр("Подразделение",Справочники.Подразделения.НайтиПоКоду("00005"));
	запрос.УстановитьПараметр("ОС",ПланыСчетов.Хозрасчетный.ОСвОрганизации);
	запрос.УстановитьПараметр("ВА",ПланыСчетов.Хозрасчетный.НематериальныеАктивыОрганизации);
	запрос.УстановитьПараметр("Материалы",ПланыСчетов.Хозрасчетный.СырьеИМатериалы);
	запрос.УстановитьПараметр("ТоварыНаСкладах",ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
	запрос.УстановитьПараметр("ТоварыНаРеализации",ПланыСчетов.Хозрасчетный.ТоварыНаСКомиссии);
	запрос.УстановитьПараметр("Подотчетники",ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
	запрос.УстановитьПараметр("ДС",ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	запрос.УстановитьПараметр("ДЗСПокупателем",ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
	//запрос.УстановитьПараметр("АвансыВыданные",ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным);
	запрос.УстановитьПараметр("Инвестиции",ПланыСчетов.Хозрасчетный.Инвестиции);
	запрос.УстановитьПараметр("Дивиденды",ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеОблагаемыеЕНВД);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма
	               |ПОМЕСТИТЬ итог
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &ОС, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &ВА, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &Материалы, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &ТоварыНаСкладах, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &ТоварыНаРеализации, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &Подотчетники, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &ДС, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &ДЗСПокупателем, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &Инвестиции, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	-ХозрасчетныйОстатки.СуммаОстаток*2
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период1, Счет = &Дивиденды, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(итог.Сумма) КАК Сумма
	               |ИЗ
	               |	итог КАК итог";
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество()> 0 Тогда
		
		СуммаАктив = Рез[0].Сумма;
		
	иначе
		
		СуммаАктив = 0;
		
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	запрос.УстановитьПараметр("Период2",ПериодПланирования.ДатаНачала+10);
	запрос.УстановитьПараметр("ПериодПланирования",ПериодПланирования);
	запрос.УстановитьПараметр("КЗСПоствщиком",ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
	//запрос.УстановитьПараметр("АвансыПолученные",ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным);
	запрос.УстановитьПараметр("Кредиты",ПланыСчетов.Хозрасчетный.ДолгосрочныеКредиты);

	запрос.Текст = "ВЫБРАТЬ
	               |	-ХозрасчетныйОстатки.СуммаОстаток КАК Сумма2
	               |ПОМЕСТИТЬ итог
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период2, Счет = &КЗСПоствщиком, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	-ХозрасчетныйОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период2, Счет = &Кредиты, , ПериодПланирования = &ПериодПланирования) КАК ХозрасчетныйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(итог.Сумма2) КАК Сумма2
	               |ИЗ
	               |	итог КАК итог";
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество()> 0 Тогда
		
		СуммаПассив = Рез[0].Сумма2;
		
	иначе
		
		СуммаПассив = 0;
		
	КонецЕсли;
	
	Разница = СуммаАктив-СуммаПассив-ПервыйМесяц;

		
	
	СтрокаДвижений = НаборДвижений.Добавить();
	
	СтрокаДвижений.Период            = ПериодПланирования.ДатаНачала;
	
	СтрокаДвижений.ПериодПланирования = ПериодПланирования;
	СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
	
	СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
	
	СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеОблагаемыеЕНВД;
	СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
	
	СтрокаДвижений.Сумма = Разница;
	
	Для каждого стр из Итоги1 Цикл
		СтрокаДвижений = НаборДвижений.Добавить();
		
		СтрокаДвижений.Период            = Стр.Период + 5;
		
		СтрокаДвижений.ПериодПланирования = ПериодПланирования;
		СтрокаДвижений.Организация = Справочники.Организации.НайтиПоКоду("00001");
		
		СтрокаДвижений.Менеджер = Справочники.Пользователи.НайтиПоКоду("Межерицкая");
		
		СтрокаДвижений.СЧЕТДТ = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеОблагаемыеЕНВД;
		СтрокаДвижений.СЧЕТКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
		
		СтрокаДвижений.Сумма = стр.Сумма;
		
	КонецЦикла;

КонецПроцедуры




Процедура УстановитьСубконто(Счет, Субконто, ИмяСубконто, ЗначениеСубконто, Сообщать = Ложь, Заголовок = "", ВидыСубконтоСчета = Неопределено) Экспорт

	Если Счет = Неопределено ИЛИ Счет.Пустая() Тогда
		Возврат;
	КонецЕсли;

	Если ВидыСубконтоСчета = Неопределено Тогда
	     ВидыСубконтоСчета = Счет.ВидыСубконто;
	КонецЕсли; 
	
	Если ТипЗнч(ИмяСубконто) = Тип("Число") Тогда

		Если ИмяСубконто > ВидыСубконтоСчета.Количество() Тогда
			Возврат;
		КонецЕсли;

		ВидСубк = ВидыСубконтоСчета[ИмяСубконто - 1].ВидСубконто;

	Иначе

		ВидСубк = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные[ИмяСубконто];

		Если ВидыСубконтоСчета.Найти(ВидСубк) = Неопределено Тогда
			Возврат;
		КонецЕсли;

	КонецЕсли;

	Если ВидСубк.ТипЗначения.СодержитТип(ТипЗнч(ЗначениеСубконто)) Тогда
		Субконто.Вставить(ВидСубк, ЗначениеСубконто);
	КонецЕсли;

КонецПроцедуры // УстановитьСубконто()	

Процедура ПриКопировании(ОбъектКопирования)
	ПериодПланирования = Справочники.ПериодыПланирования.ПустаяСсылка();
	ФормулыДляЯчеек.Очистить();
КонецПроцедуры
	
	
