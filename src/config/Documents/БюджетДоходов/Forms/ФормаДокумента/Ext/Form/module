Перем РежимРедактированияФормулыФ, ЯчейкаДляФормулы;

Перем таблицаСуммИПроцентов;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если ЗакрытиеПериода Тогда
		отказ = Истина;
	КонецЕсли;
	
	// Вставить содержимое обработчика.
	Если Не ЗначениеЗаполнено(Ответственный) Тогда 
		Ответственный = глТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	
	ЭлементыФормы.закрытьдокументы.Видимость = ВидОперацииФинансовый;
	
	ПроверитьДоступность();
	
	УстановитьЗаголовкиКолонок();
	
	Если БюджетУтвержден() Тогда 
		ТолькоПросмотр = истина;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Полугодие) Тогда 
		Если Месяц(ТекущаяДата())<6 Тогда 
			Полугодие = 1;
		Иначе 
			Полугодие = 2;
		Конецесли;
	КонецЕсли;
	
	Если РольДоступна("яштФинДиректор") и ВидОперацииФинансовый Тогда
		ЭлементыФормы.ПродажиФормулы.Страницы.Склад.Видимость = Ложь;
		ЭлементыФормы.ПродажиФормулы.Страницы.Поступления.Видимость = Ложь;
		ЭлементыФормы.ПродажиФормулы.Страницы.ПланПродаж.Видимость = Ложь;
		ЭлементыФормы.ПродажиФормулы.Страницы.ОплатаПоставщикам.Видимость = Ложь;
		ЭлементыФормы.ПродажиФормулы.Страницы.ПриходДенег.Видимость = Ложь;
		ЭлементыФормы.ПродажиФормулы.Страницы.Бонусы.Видимость = Ложь;
		
		ЭлементыФормы.ПродажиФормулы.Страницы.Услуги.Видимость = истина;
		ЭлементыФормы.ПродажиФормулы.Страницы.КредитыТекущие.Видимость = истина;
		ЭлементыФормы.ПродажиФормулы.Страницы.КредитыПланируемые.Видимость = истина;
		ЭлементыФормы.ПродажиФормулы.Страницы.ВходящийБаланс.Видимость = истина;
		ЭлементыФормы.ПродажиФормулы.Страницы.Инвестиции.Видимость = истина;
		ЭлементыФормы.ПродажиФормулы.Страницы.Дивиденды.Видимость = истина;

	КонецЕсли;
	
	ВывестиФормулы(2);
	ЗаполнениеИтогов();
	
	ВевестиПоказателибаланса();
КонецПроцедуры

Процедура ПроверитьДоступность()
    Запрос = Новый Запрос;
	запрос.УстановитьПараметр("Период",ПериодПланирования);
	запрос.Текст ="ВЫБРАТЬ
	              |	БюджетДоходов.Ссылка
	              |ИЗ
	              |	Документ.БюджетДоходов КАК БюджетДоходов
	              |ГДЕ
	              |	БюджетДоходов.ПериодПланирования = &период
	              |	И БюджетДоходов.Проведен = ИСТИНА
	              |	И БюджетДоходов.ЗакрытьДокументы = ИСТИНА
	              |	И БюджетДоходов.ВидОперацииФинансовый = ИСТИНА";
	рез = запрос.Выполнить().Выгрузить();
	
	
	Если Рез.Количество()>0 и не найти(глТекущийПользователь.наименование,"Межерицкая")>0 Тогда
		ЭтаФорма.ТолькоПросмотр= истина;
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ВевестиПоказателибаланса()
	СуммаАктив = 0;
	СуммаПассив = 0;
	Макет  = ПолучитьМакет("БюджетНачальныеПоказатели");
	ЭлементыФормы.ПолеТабличногоДокумента1.Очистить();
	Актив = Макет.ПолучитьОбласть("Актив");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(Актив);


	Если НачальныеОстатки.Количество()>0 Тогда
		для каждого стр11 из НачальныеОстатки Цикл
				
			
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ОсновныеСредства Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ОсновныеСредства;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаАктив = СуммаАктив+стр11.Сумма;
		КонецЕсли;
		
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ВнеоборотныеАктивы Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ВнеоборотныеАктивы;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаАктив = СуммаАктив+стр11.Сумма;
	    КонецЕсли;
	
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Материалы Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.Материалы;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаАктив = СуммаАктив+стр11.Сумма;
		КонецЕсли;
		
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ТоварыНаСкладах Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ТоварыНаСкладах;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаАктив = СуммаАктив+стр11.Сумма;
		КонецЕсли;
		
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ТоварыНаРеализации Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ТоварыНаРеализации;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаАктив = СуммаАктив+стр11.Сумма;
		КонецЕсли;
		
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ВзаиморасчетыСПодотчетнымиЛицами Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ВзаиморасчетыСПодотчетнымиЛицами;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаАктив = СуммаАктив+стр11.Сумма;
		КонецЕсли;
		
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ДенежныеСредства Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ДенежныеСредства;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаАктив = СуммаАктив+стр11.Сумма;
		КонецЕсли;
		
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ДебиторскаяЗадолженностьСПокупателем Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ДебиторскаяЗадолженностьСПокупателем;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		Строка.Параметры.СуммаДоп = Формат(стр11.СуммаДоп,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаАктив = СуммаАктив+стр11.Сумма;
		КонецЕсли;
		
		
		//Нов = НачальныеОстатки.Добавить();
		//Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ДебиторскаяЗадолженностьСПоставщиком;
		//Нов.Сумма = СуммаДЕБСПоставщиком;//
		
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Инвестиции Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.Инвестиции;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаАктив = СуммаАктив+стр11.Сумма;
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = "Итого Актив:";
		Строка.Параметры.Сумма = Формат(СуммаАктив,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
				
		Пассив = Макет.ПолучитьОбласть("Пассив");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(Пассив);
		КонецЕсли;
		
				
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.КредиторскаяЗадолженностьСПоставщиком Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.КредиторскаяЗадолженностьСПоставщиком;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		Строка.Параметры.СуммаДоп = Формат(стр11.СуммаДоп,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаПассив = СуммаПассив+стр11.Сумма;
		КонецЕсли;
		
		//Нов = НачальныеОстатки.Добавить();
		//Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.КредиторскаяЗадолженностьСПокупателем;
		//Нов.Сумма = СуммаКРСПокупателем;//
		
		//Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Аккредитивы Тогда
		//Строка = Макет.ПолучитьОбласть("Строка");
		//Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.Аккредитивы;
		//Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		//ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		//СуммаПассив = СуммаПассив+стр11.Сумма;
		//КонецЕсли;
		
		Если стр11.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Кредиты Тогда
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.Кредиты;
		Строка.Параметры.Сумма = Формат(стр11.Сумма,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		СуммаПассив = СуммаПассив+стр11.Сумма;
		КонецЕсли;
		
	
	КонецЦикла;
	
	
		Прибыль = СуммаАктив - СуммаПассив;
		
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = "Прибыль:";
		Строка.Параметры.Сумма = Формат(Прибыль,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
		
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Показатель = "Итого Пассив:";
		Строка.Параметры.Сумма = Формат(СуммаПассив + Прибыль,"ЧДЦ=2");
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
	КонецЕсли;	
КонецПроцедуры

Процедура УстановитьЗаголовкиКолонок()
	если ЗначениеЗаполнено(ПериодПланирования) Тогда
		соответствие = Новый Соответствие;
		соответствие.Вставить(1,"Январь");
		соответствие.Вставить(2,"Февраль");
		соответствие.Вставить(3,"Март");
		соответствие.Вставить(4,"Апрель");
		соответствие.Вставить(5,"Май");
		соответствие.Вставить(6,"Июнь");
		соответствие.Вставить(7,"Июль");
		соответствие.Вставить(8,"Август");
		соответствие.Вставить(9,"Сентябрь");
		соответствие.Вставить(10,"Октябрь");
		соответствие.Вставить(11,"Ноябрь");
		соответствие.Вставить(12,"Декабрь");
		
		Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
			КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
		иначе
			КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
		КонецЕсли;
				
		Датаии = ПериодПланирования.ДатаНачала;
		для ии = 1 по КоличествоМесяцев Цикл
			
			ЭлементыФормы.Склад.Колонки["Месяц"+Строка(ии)+"Количество"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM"))) + "(Количество)";
			ЭлементыФормы.Склад.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			
			ЭлементыФормы.Поступления.Колонки["Месяц"+Строка(ии)+"Количество"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM"))) + "(Количество)";
			ЭлементыФормы.Поступления.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			
			ЭлементыФормы.ПланПродаж.Колонки["Месяц"+Строка(ии)+"Количество"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM"))) + "(Количество)";
			ЭлементыФормы.ПланПродаж.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			
			//ЭлементыФормы.ОплатаПоставщикам.Колонки["Месяц"+Строка(ии)+"Количество"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM"))) + "(Количество)";
			ЭлементыФормы.ОплатаПоставщикам.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";

			ЭлементыФормы.ПриходДенег.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			
			ЭлементыФормы.Бонусы.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			
			ЭлементыФормы.Услуги.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			ЭлементыФормы.КредитыТекущие.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			ЭлементыФормы.КредитыПланируемые.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			ЭлементыФормы.Инвестиции.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			ЭлементыФормы.Дивиденды.Колонки["Месяц"+Строка(ии)+"Сумма"].ТекстШапки = соответствие.Получить(Число(Формат(Датаии,"ДФ=MM")))+ "(Сумма)";
			
			Датаии = ДобавитьМесяц(Датаии,1);
			
		КонецЦикла;
		
		для ии = (КоличествоМесяцев +1) по 12 Цикл
			
			ЭлементыФормы.Склад.Колонки["Месяц"+Строка(ии)+"Количество"].Видимость = Ложь;
			ЭлементыФормы.Склад.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			
			ЭлементыФормы.Поступления.Колонки["Месяц"+Строка(ии)+"Количество"].Видимость = Ложь;
			ЭлементыФормы.Поступления.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			
			ЭлементыФормы.ПланПродаж.Колонки["Месяц"+Строка(ии)+"Количество"].Видимость = Ложь;
			ЭлементыФормы.ПланПродаж.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			
			//ЭлементыФормы.ОплатаПоставщикам.Колонки["Месяц"+Строка(ии)+"Количество"].Видимость = Ложь;
			ЭлементыФормы.ОплатаПоставщикам.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			
			ЭлементыФормы.ПриходДенег.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			
			ЭлементыФормы.Бонусы.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			
			ЭлементыФормы.Услуги.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			ЭлементыФормы.КредитыТекущие.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			ЭлементыФормы.КредитыПланируемые.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			ЭлементыФормы.Инвестиции.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
			ЭлементыФормы.Дивиденды.Колонки["Месяц"+Строка(ии)+"Сумма"].Видимость = Ложь;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция НайтиТекстМесяца(ИмяКолонки)
	
	Если (Найти(ИмяКолонки,"Месяц1")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Январь","Июль");
	КонецЕсли;
	
	Если (Найти(ИмяКолонки,"Месяц2")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Февраль","Август");
	КонецЕсли;

	Если (Найти(ИмяКолонки,"Месяц3")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Март","Сентябрь");
	КонецЕсли;
	
	Если (Найти(ИмяКолонки,"Месяц4")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Апрель","Октябрь");
	КонецЕсли;
	
	Если (Найти(ИмяКолонки,"Месяц5")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Май","Ноябрь");
	КонецЕсли;
	
	Если (Найти(ИмяКолонки,"Месяц6")) Тогда
		ТекстМесяца = ?(Полугодие=1,"Июнь","Декабрь");
	КонецЕсли;
	
	//  Лапенков 20160119
	//Если (Найти(ИмяКолонки,"Месяц0")) Тогда
	//	ТекстМесяца = "Корректировка";
	//КонецЕсли;
	
	ОбщийТекст = "";
	
	//  Лапенков 20160119
	Если ЗначениеЗаполнено(ТекстМесяца) Тогда
		Если Найти(ИмяКолонки,"Количество") Тогда 
			ОбщийТекст = ТекстМесяца + "(шт.)";			
		Иначе 
			ОбщийТекст = ТекстМесяца + "(руб.)";			
		КонецЕсли;
	КонецЕсли;
	Возврат ОбщийТекст; 
	
КонецФункции

Процедура КоманднаяПанель1Заполнение(Кнопка)
	
	Если Модифицированность() Тогда
		Ответ = Вопрос("Перед заполнением необходимо записать документ.",РежимДиалогаВопрос.ДаНетОтмена);
		Если (Ответ = КодВозвратаДиалога.Да) Тогда 
			Записан = ЗаписатьВФорме();
			Если не Записан Тогда 
				Сообщить("Невозможно записать документ.",СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;
		Иначе 
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	
	ИмяФормы = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Заполнение бюджета доходов");
	ИмяФайла = КаталогВременныхФайлов()+"TmpForm.tmp";
	ОбъектВнешнейФормы = ИмяФормы.ПолучитьОбъект();
	Если ОбъектВнешнейФормы = Неопределено Тогда
		Сообщить("Ошибка получения внешней формы для заполнения. Возможно форма была удалена", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
		
	ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяФайла);
	Обработка = ВнешниеОбработки.Создать(ИмяФайла);
	Форма = Обработка.ПолучитьФорму("Форма");
	Форма.СсылкаНаОбъект = Ссылка;
	Форма.ОткрытьМодально();
	ЭтотОбъект.Прочитать();
    ЭтаФорма.Обновить();
	
КонецПроцедуры

Процедура Полугодие1ПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	УстановитьЗаголовкиКолонок();
КонецПроцедуры

Функция БюджетУтвержден()
	
	Если (Полугодие = 1) Тогда 
		НачПериода = НачалоГода(Дата); 
		КонПериода = Дата(Формат(Год(Дата),"ЧГ=0")+"0630235959");
	Иначе 
		НачПериода = Дата(Формат(Год(Дата),"ЧГ=0")+"0701000000"); 
		КонПериода = КонецГода(Дата); 			
	КонецЕсли;
	
	Запрос = Новый Запрос("Выбрать Менеджер из РегистрСведений.ДанныеПоБюджетуДоходов Где (период между &Дата1 и &Дата2) и (Утвержден)");
	Запрос.УстановитьПараметр("Дата1",НачПериода);
	Запрос.УстановитьПараметр("Дата2",КонПериода);
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Если (Выб.Количество()>0) Тогда 
		Возврат истина;
	КонецЕсли;
	
	Возврат ложь;
КонецФункции

Процедура ЗаполнениеИтогов()
	// Склад
	ЭтаФорма.ЭлементыФормы.Склад.Колонки.ИтогоКоличество.ТекстПодвала = РассчитатьИтогоКоличествоСклад();
	ЭтаФорма.ЭлементыФормы.Склад.Колонки.ИтогоСумма.ТекстПодвала = РассчитатьИтогоСуммаСклад();
	// Поступления
	ЭтаФорма.ЭлементыФормы.Поступления.Колонки.ИтогоКоличество.ТекстПодвала = РассчитатьИтогоКоличествоПоступления();
	ЭтаФорма.ЭлементыФормы.Поступления.Колонки.ИтогоСумма.ТекстПодвала = РассчитатьИтогоСуммаПоступления();
	// Продажи
	ЭтаФорма.ЭлементыФормы.ПланПродаж.Колонки.ИтогоКоличество.ТекстПодвала = РассчитатьИтогоКоличествоПродажи();
	ЭтаФорма.ЭлементыФормы.ПланПродаж.Колонки.ИтогоСумма.ТекстПодвала = РассчитатьИтогоСуммаПродажи();
	// Оплата поставщикам
	ЭтаФорма.ЭлементыФормы.ОплатаПоставщикам.Колонки.ИтогоСумма.ТекстПодвала = РассчитатьИтогоСуммаОплатаПоставщикам();
	// Приход женег
	ЭтаФорма.ЭлементыФормы.ПриходДенег.Колонки.ИтогоСумма.ТекстПодвала = РассчитатьИтогоСуммаПриходДенег();
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
   // Вставить содержимое обработчика. 
    Если ИмяСобытия="ОбновлениеИзОбработкиЗаполнения" тогда
        ЭтотОбъект.Прочитать();
	    ЭтаФорма.Обновить();
	КонецЕсли;	
КонецПроцедуры

Процедура КоманднаяПанель1Пересчет(Кнопка)
	// Вставить содержимое обработчика.
	
	Если Модифицированность() Тогда
		Ответ = Вопрос("Перед заполнением необходимо записать документ.",РежимДиалогаВопрос.ДаНетОтмена);
		Если (Ответ = КодВозвратаДиалога.Да) Тогда 
			Записан = ЗаписатьВФорме();
			Если не Записан Тогда 
				Сообщить("Невозможно записать документ.",СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;
		Иначе 
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	
	ИмяФормы = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Заполнение бюджета доходов");
	ИмяФайла = КаталогВременныхФайлов()+"TmpForm.tmp";
	ОбъектВнешнейФормы = ИмяФормы.ПолучитьОбъект();
	Если ОбъектВнешнейФормы = Неопределено Тогда
		Сообщить("Ошибка получения внешней формы для заполнения. Возможно форма была удалена", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
		
	ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяФайла);
	Обработка = ВнешниеОбработки.Создать(ИмяФайла);
	Обработка.СсылкаНаОбъектОбщ = Ссылка;
	Обработка.ПерезаполнитьДокумент();
	ЭтотОбъект.Прочитать();
    ЭтаФорма.Обновить();
	
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьИзExcel(Кнопка)
	// Вставить содержимое обработчика.
	Если Модифицированность() Тогда
		Ответ = Вопрос("Перед заполнением необходимо записать документ.",РежимДиалогаВопрос.ДаНетОтмена);
		Если (Ответ = КодВозвратаДиалога.Да) Тогда 
			Записан = ЗаписатьВФорме();
			Если не Записан Тогда 
				Сообщить("Невозможно записать документ.",СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;
		Иначе 
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	
	ИмяФормы = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Заполнение бюджета доходов");
	ИмяФайла = КаталогВременныхФайлов()+"TmpForm.tmp";
	ОбъектВнешнейФормы = ИмяФормы.ПолучитьОбъект();
	Если ОбъектВнешнейФормы = Неопределено Тогда
		Сообщить("Ошибка получения внешней формы для заполнения. Возможно форма была удалена", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
		
	ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяФайла);
	Обработка = ВнешниеОбработки.Создать(ИмяФайла);
	Обработка.СсылкаНаОбъектОбщ = Ссылка;
	Форма = Обработка.ПолучитьФорму("ЗаполнениеИзЭксель");
	Форма.СсылкаНаОбъект = Ссылка;
	Форма.ОткрытьМодально();
	ЭтотОбъект.Прочитать();
    ЭтаФорма.Обновить();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Для каждого  стр из Инвестиции Цикл
		Если не ЗначениеЗаполнено(стр.ВидДвижения)тогда
		Отказ= Истина;
		Сообщить("Не заполнен вид движения в инвестициях!");
	    конецЕсли;
	конецЦикла;
	
	Для каждого  стр из Дивиденды Цикл
		Если не ЗначениеЗаполнено(стр.ВидДвижения)тогда
		Отказ= Истина;
		Сообщить("Не заполнен вид движения в дивидендах!");
	    конецЕсли;
	конецЦикла;

	// Вставить содержимое обработчика.
	Если БюджетУтвержден() Тогда 
		Сообщить("Бюджет утвержден ! Изменения больше невозможны. ", СтатусСообщения.Важное);
		Отказ = Истина; 
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда 
		// Лапенков 20160119
	//	ЕстьМинусы(Отказ);
		Если отказ Тогда 
			Сообщить("В бюджете не должно быть отрицательных ячеек. Проведение невозможно.", СтатусСообщения.Важное);
		Конецесли;
	конецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьПоПервойВкладке(Кнопка)
	// Вставить содержимое обработчика.
	й = 0;
	Поступления.Очистить();
	ПланПродаж.Очистить();
	ОплатаПоставщикам.Очистить();
	ПриходДенег.Очистить();
	
	Для каждого Стрх из Склад Цикл
		Стр1 = Поступления.Добавить();
		Стр1.менеджер = СтрХ.Менеджер;
		Стр1.Разрез1 = СтрХ.разрез1;
		Стр1.Разрез2 = стрХ.Разрез2;
		
		Стр1 = ПланПродаж.Добавить();
		Стр1.менеджер = СтрХ.Менеджер;
		Стр1.Разрез1 = СтрХ.разрез1;
		Стр1.Разрез2 = стрХ.Разрез2;
		
		Стр1 = ОплатаПоставщикам.Добавить();
		Стр1.менеджер = СтрХ.Менеджер;
		Стр1.Разрез1 = СтрХ.разрез1;
		Стр1.Разрез2 = стрХ.Разрез2;
		
		Стр1 = ПриходДенег.Добавить();
		Стр1.менеджер = СтрХ.Менеджер;
		Стр1.Разрез1 = СтрХ.разрез1;
		Стр1.Разрез2 = стрХ.Разрез2;
		
	КонеЦЦикла;
КонецПроцедуры

Процедура СкладПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	// Вставить содержимое обработчика.
	Попытка 
		Если не ЗначениеЗаполнено(ЭлементыФормы.Склад.ТекущиеДанные.Менеджер) Тогда 
			ЭлементыФормы.Склад.ТекущиеДанные.Менеджер = глТекущийПользователь;
		КонецЕсли;
	Исключение
		;
	КонецПопытки;
КонецПроцедуры

Процедура Полугодие3ПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	//ВывестиФормулы(ДанныеФормулы);
КонецПроцедуры

Процедура ВывестиФормулы(ДанныеФормулы)
КонецПроцедуры

Функция ЕстьМинусы(Отказ)
	
	Для Каждого СтрХ из Склад Цикл
		Если СтрХ.КоличествоНачалоПериода<0 или СтрХ.СебестоимостьНаНачалоПериода<0 или СтрХ.СредняяЦена<0 или СтрХ.Месяц1Количество<0 или СтрХ.Месяц1Сумма<0 или СтрХ.Месяц2Количество<0 или СтрХ.Месяц2Сумма<0 или СтрХ.Месяц3Количество<0 или СтрХ.Месяц3Сумма<0 или СтрХ.Месяц4Количество<0 или СтрХ.Месяц4Сумма<0 или СтрХ.Месяц5Количество<0 или СтрХ.Месяц5Сумма<0 или СтрХ.Месяц6Количество<0 или СтрХ.Месяц6Сумма<0 Тогда 
			Сообщить("В строке " + Склад.Индекс(СтрХ) + " вкладки ""склад"" есть минус.");
			Отказ=истина;
		КонецЕсли;	
	КонеЦЦикла;
	
	Для Каждого СтрХ из Поступления Цикл
		Если СтрХ.ВходнаяЦена<0 или СтрХ.Месяц1Количество<0 или СтрХ.Месяц1Сумма<0 или СтрХ.Месяц2Количество<0 или СтрХ.Месяц2Сумма<0 или СтрХ.Месяц3Количество<0 или СтрХ.Месяц3Сумма<0 или СтрХ.Месяц4Количество<0 или СтрХ.Месяц4Сумма<0 или СтрХ.Месяц5Количество<0 или СтрХ.Месяц5Сумма<0 или СтрХ.Месяц6Количество<0 или СтрХ.Месяц6Сумма<0 Тогда 
			Сообщить("В строке " + Поступления.Индекс(СтрХ) + " вкладки ""Поступления"" есть минус.");
			Отказ=истина;
		КонецЕсли;	
	КонеЦЦикла;
	
	Для Каждого СтрХ из ПланПродаж Цикл
		Если СтрХ.Наценка<0 или СтрХ.Месяц1Количество<0 или СтрХ.Месяц1Сумма<0 или СтрХ.Месяц2Количество<0 или СтрХ.Месяц2Сумма<0 или СтрХ.Месяц3Количество<0 или СтрХ.Месяц3Сумма<0 или СтрХ.Месяц4Количество<0 или СтрХ.Месяц4Сумма<0 или СтрХ.Месяц5Количество<0 или СтрХ.Месяц5Сумма<0 или СтрХ.Месяц6Количество<0 или СтрХ.Месяц6Сумма<0 Тогда 
			Сообщить("В строке " + ПланПродаж.Индекс(СтрХ) + " вкладки ""План продаж"" есть минус.");
			Отказ=истина;
		КонецЕсли;	
	КонеЦЦикла;
	
	Для Каждого СтрХ из ОплатаПоставщикам Цикл
		Если СтрХ.Месяц1Сумма<0 или СтрХ.Месяц2Сумма<0 или СтрХ.Месяц3Сумма<0 или СтрХ.Месяц4Сумма<0 или СтрХ.Месяц5Сумма<0 или СтрХ.Месяц6Сумма<0 Тогда 
			Сообщить("В строке " + ОплатаПоставщикам.Индекс(СтрХ) + " вкладки ""Оплата поставщикам"" есть минус.");
			Отказ=истина;
		КонецЕсли;	
	КонеЦЦикла;
	
	Для Каждого СтрХ из ПриходДенег Цикл
		Если СтрХ.Месяц1Сумма<0 или СтрХ.Месяц2Сумма<0 или СтрХ.Месяц3Сумма<0 или СтрХ.Месяц4Сумма<0 или СтрХ.Месяц5Сумма<0 или СтрХ.Месяц6Сумма<0 Тогда 
			Сообщить("В строке " + ПриходДенег.Индекс(СтрХ) + " вкладки ""Приход денег"" есть минус.");
			Отказ=истина;
		КонецЕсли;	
	КонеЦЦикла;
	
	Возврат отказ;
КонецФункции

Процедура СкладПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	//ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение = Данныестроки.Месяц0Количество + Данныестроки.Месяц1Количество + Данныестроки.Месяц2Количество + Данныестроки.Месяц3Количество + Данныестроки.Месяц4Количество + Данныестроки.Месяц5Количество + Данныестроки.Месяц6Количество;
	ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение =  Данныестроки.Месяц1Количество + Данныестроки.Месяц2Количество + Данныестроки.Месяц3Количество + Данныестроки.Месяц4Количество + Данныестроки.Месяц5Количество + Данныестроки.Месяц6Количество
	+ Данныестроки.Месяц7Количество + Данныестроки.Месяц8Количество + Данныестроки.Месяц9Количество + Данныестроки.Месяц10Количество + Данныестроки.Месяц11Количество + Данныестроки.Месяц12Количество;
	//ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = Данныестроки.Месяц0Сумма + Данныестроки.Месяц1Сумма + Данныестроки.Месяц2Сумма + Данныестроки.Месяц3Сумма + Данныестроки.Месяц4Сумма + Данныестроки.Месяц5Сумма + Данныестроки.Месяц6Сумма;
	ОформлениеСтроки.Ячейки.ИтогоСумма.Значение =  Данныестроки.Месяц1Сумма + Данныестроки.Месяц2Сумма + Данныестроки.Месяц3Сумма + Данныестроки.Месяц4Сумма + Данныестроки.Месяц5Сумма + Данныестроки.Месяц6Сумма
	+ Данныестроки.Месяц7Сумма + Данныестроки.Месяц8Сумма + Данныестроки.Месяц9Сумма + Данныестроки.Месяц10Сумма + Данныестроки.Месяц11Сумма + Данныестроки.Месяц12Сумма;
	
	Если (ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение = "0") Тогда 
		ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение = "";
	КонецЕсли;
	
	Если (ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "0") Тогда 
		ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоступленияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Вставить содержимое обработчика.
	//ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение = Данныестроки.Месяц0Количество + Данныестроки.Месяц1Количество + Данныестроки.Месяц2Количество + Данныестроки.Месяц3Количество + Данныестроки.Месяц4Количество + Данныестроки.Месяц5Количество + Данныестроки.Месяц6Количество;
	ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение =  Данныестроки.Месяц1Количество + Данныестроки.Месяц2Количество + Данныестроки.Месяц3Количество + Данныестроки.Месяц4Количество + Данныестроки.Месяц5Количество + Данныестроки.Месяц6Количество
	+ Данныестроки.Месяц7Количество + Данныестроки.Месяц8Количество + Данныестроки.Месяц9Количество + Данныестроки.Месяц10Количество + Данныестроки.Месяц11Количество + Данныестроки.Месяц12Количество;
	//ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = Данныестроки.Месяц0Сумма + Данныестроки.Месяц1Сумма + Данныестроки.Месяц2Сумма + Данныестроки.Месяц3Сумма + Данныестроки.Месяц4Сумма + Данныестроки.Месяц5Сумма + Данныестроки.Месяц6Сумма;
	ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = Данныестроки.Месяц1Сумма + Данныестроки.Месяц2Сумма + Данныестроки.Месяц3Сумма + Данныестроки.Месяц4Сумма + Данныестроки.Месяц5Сумма + Данныестроки.Месяц6Сумма
	+ Данныестроки.Месяц7Сумма + Данныестроки.Месяц8Сумма + Данныестроки.Месяц9Сумма + Данныестроки.Месяц10Сумма + Данныестроки.Месяц11Сумма + Данныестроки.Месяц12Сумма;
	
	Если (ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение = "0") Тогда 
		ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение = "";
	КонецЕсли;
	
	Если (ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "0") Тогда 
		ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "";
	КонецЕсли;
	
	//РассчитатьИтогоВподвале();
	
КонецПроцедуры

Процедура ПланПродажПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Вставить содержимое обработчика.
	ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение = Данныестроки.Месяц1Количество + Данныестроки.Месяц2Количество + Данныестроки.Месяц3Количество + Данныестроки.Месяц4Количество + Данныестроки.Месяц5Количество + Данныестроки.Месяц6Количество
	+ Данныестроки.Месяц7Количество + Данныестроки.Месяц8Количество + Данныестроки.Месяц9Количество + Данныестроки.Месяц10Количество + Данныестроки.Месяц11Количество + Данныестроки.Месяц12Количество;
	ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = Данныестроки.Месяц1Сумма + Данныестроки.Месяц2Сумма + Данныестроки.Месяц3Сумма + Данныестроки.Месяц4Сумма + Данныестроки.Месяц5Сумма + Данныестроки.Месяц6Сумма
	+ Данныестроки.Месяц7Сумма + Данныестроки.Месяц8Сумма + Данныестроки.Месяц9Сумма + Данныестроки.Месяц10Сумма + Данныестроки.Месяц11Сумма + Данныестроки.Месяц12Сумма;
	
	Если (ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение = "0") Тогда 
		ОформлениеСтроки.Ячейки.ИтогоКоличество.Значение = "";
	КонецЕсли;
	
	Если (ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "0") Тогда 
		ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "";
	КонецЕсли;
	
КонецПроцедуры

Процедура ОплатаПоставщикамПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Вставить содержимое обработчика.
	ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = Данныестроки.Месяц1Сумма + Данныестроки.Месяц2Сумма + Данныестроки.Месяц3Сумма + Данныестроки.Месяц4Сумма + Данныестроки.Месяц5Сумма + Данныестроки.Месяц6Сумма
	+ Данныестроки.Месяц7Сумма + Данныестроки.Месяц8Сумма + Данныестроки.Месяц9Сумма + Данныестроки.Месяц10Сумма + Данныестроки.Месяц11Сумма + Данныестроки.Месяц12Сумма;
	
	НовыйСтруктура = новый Структура;
	НовыйСтруктура.Вставить("Менеджер",ДанныеСтроки.Менеджер);
	НовыйСтруктура.Вставить("Разрез1",ДанныеСтроки.Разрез1);
	НовыйСтруктура.Вставить("Разрез2",ДанныеСтроки.Разрез2);
	
	СтрокиНай = Поступления.Выгрузить(НовыйСтруктура);
	Если СтрокиНай <> неопределено тогда
		Если СтрокиНай.Количество() > 0 Тогда
	        ОформлениеСтроки.Ячейки.Остаток.Значение = СтрокиНай[0].Месяц1Сумма + СтрокиНай[0].Месяц2Сумма + СтрокиНай[0].Месяц3Сумма + СтрокиНай[0].Месяц4Сумма + СтрокиНай[0].Месяц5Сумма + СтрокиНай[0].Месяц6Сумма
			+ СтрокиНай[0].Месяц7Сумма + СтрокиНай[0].Месяц8Сумма + СтрокиНай[0].Месяц9Сумма + СтрокиНай[0].Месяц10Сумма + СтрокиНай[0].Месяц11Сумма + СтрокиНай[0].Месяц12Сумма - ОформлениеСтроки.Ячейки.ИтогоСумма.Значение;
		КонецЕсли;
	КонецЕсли;
	Если (ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "0") Тогда 
		ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "";
	КонецЕсли;	
КонецПроцедуры

Процедура ПриходДенегПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Вставить содержимое обработчика.
	ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = Данныестроки.Месяц1Сумма + Данныестроки.Месяц2Сумма + Данныестроки.Месяц3Сумма + Данныестроки.Месяц4Сумма + Данныестроки.Месяц5Сумма + Данныестроки.Месяц6Сумма
	+ Данныестроки.Месяц7Сумма + Данныестроки.Месяц8Сумма + Данныестроки.Месяц9Сумма + Данныестроки.Месяц10Сумма + Данныестроки.Месяц11Сумма + Данныестроки.Месяц12Сумма;
	
	Если (ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "0") Тогда 
		ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "";
	КонецЕсли;
	
	НовыйСтруктура = новый Структура;
	НовыйСтруктура.Вставить("Менеджер",ДанныеСтроки.Менеджер);
	НовыйСтруктура.Вставить("Разрез1",ДанныеСтроки.Разрез1);
	НовыйСтруктура.Вставить("Разрез2",ДанныеСтроки.Разрез2);
	
	СтрокиНай = ПланПродаж.Выгрузить(НовыйСтруктура);
	Если СтрокиНай <> неопределено тогда
		Если СтрокиНай.Количество() > 0 Тогда
	        ОформлениеСтроки.Ячейки.Остаток.Значение = СтрокиНай[0].Месяц1Сумма + СтрокиНай[0].Месяц2Сумма + СтрокиНай[0].Месяц3Сумма + СтрокиНай[0].Месяц4Сумма + СтрокиНай[0].Месяц5Сумма + СтрокиНай[0].Месяц6Сумма
			+ СтрокиНай[0].Месяц7Сумма + СтрокиНай[0].Месяц8Сумма + СтрокиНай[0].Месяц9Сумма + СтрокиНай[0].Месяц10Сумма + СтрокиНай[0].Месяц11Сумма + СтрокиНай[0].Месяц12Сумма - ОформлениеСтроки.Ячейки.ИтогоСумма.Значение;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнениеСклада(Кнопка)
	// Вставить содержимое обработчика.
	
	Ответ = Вопрос("Все данные будут уничтожены !!! Вы уверены ?",РежимДиалогаВопрос.ДаНетОтмена);
	
	Если Ответ = КодВозвратаДиалога.Нет или Ответ = КодВозвратаДиалога.Отмена Тогда 
		Возврат;	
	КонецЕсли;
	
	менеджер = глТекущийПользователь;	
	
	КучаМенеджеров = ложь;
	Если глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду("Чарчан                                            ") Тогда 
		КучаМенеджеров = истина;		
	КонецЕсли;	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Менеджер,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез1,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез1Справочно,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез2,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез2Справочно,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез3,
	                      |	ДанныеПоБюджетуДоходовСрезПоследних.Разрез3Справочно
	                      |ИЗ"+
	                      ?(КучаМенеджеров," РегистрСведений.ДанныеПоБюджетуДоходов.СрезПоследних(&Дата) КАК ДанныеПоБюджетуДоходовСрезПоследних","	РегистрСведений.ДанныеПоБюджетуДоходов.СрезПоследних(&Дата,Менеджер = &Менеджер) КАК ДанныеПоБюджетуДоходовСрезПоследних"));
						  
	Конпериода = НачалоДня(Дата(Год,?(Полугодие=1,1,6),1));
	Запрос.УстановитьПараметр("Дата",КонПериода);
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	
	ТаблицаМенеджеровИРазрезов = Запрос.Выполнить().Выгрузить();
	
	// Формируем запрос по складу. 
	
	//1.Остатки по товарам или партиям ? 
	ОстаткиПоТоварам = Истина;
	ШаблонТекстаСтоимость = "ВЫБРАТЬ
	                        |	&Менеджер,
	                        |	&Разрез1 КАК Категория,
	                        |	&Разрез2 КАК Программа,
							|	СУММА(ПартииТоваровНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОбщ,
	                        |	СУММА(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток) КАК СтоимостьОбщ
	                        |ИЗ
	                        |	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	                        |			&Дата,
	                        |			Номенклатура.Производитель в иерархии(&Разрез2) И Номенклатура.НоменклатурнаяГруппа в иерархии(&Разрез1)) КАК ПартииТоваровНаСкладахОстатки";
				   
				   
	ЗапросСтоимость = Новый Запрос(ШаблонТекстаСтоимость);
	
	ЗапросСтоимость.УстановитьПараметр("Дата",Конпериода);
	
	ТаблицаСклада = Новый ТаблицаЗначений;
	
	ТаблицаСклада.Колонки.Добавить("Менеджер");
	ТаблицаСклада.Колонки.Добавить("Разрез1");
	ТаблицаСклада.Колонки.Добавить("Разрез2");
	ТаблицаСклада.Колонки.Добавить("КоличествоНачалоПериода");
	ТаблицаСклада.Колонки.Добавить("СебестоимостьНаНачалоПериода");
	ТаблицаСклада.Колонки.Добавить("СредняяЦена");
	
	Для Каждого СтрХ из ТаблицаМенеджеровИРазрезов Цикл
		
		// По Никитину - виртуальная группа Ling long (грузовые и спец), если стоит группа 
		ЗапросСтоимость.Текст = ШаблонТекстаСтоимость;
		
		Если (СтрХ.Разрез1Справочно) Тогда 
			ЗапросСтоимость.Текст = СтрЗаменить(ЗапросСтоимость.Текст,"Номенклатура.Производитель в иерархии(&Разрез2) И Номенклатура.НоменклатурнаяГруппа в иерархии(&Разрез1)","Номенклатура.Производитель в иерархии(&Разрез2)");
		КонецЕсли;
		
		Если (СтрХ.Разрез2Справочно) Тогда 
			ЗапросСтоимость.Текст = СтрЗаменить(ЗапросСтоимость.Текст,"Номенклатура.Производитель в иерархии(&Разрез2) И Номенклатура.НоменклатурнаяГруппа в иерархии(&Разрез1)","Номенклатура.Номенклатурнаягруппа в иерархии(&Разрез1)");
		КонецЕсли;
		
		ЗапросСтоимость.УстановитьПараметр("Менеджер",СтрХ.Менеджер);
		ЗапросСтоимость.УстановитьПараметр("Разрез1",СтрХ.Разрез1);
		ЗапросСтоимость.УстановитьПараметр("Разрез2",СтрХ.Разрез2);
		
		// По Никитину - виртуальная группа Ling long (грузовые и спец), если стоит группа 
		Если (СтрХ.Разрез1 = Справочники.НоменклатурныеГруппы.НайтиПоКоду("00036")) Тогда 
			МассивНГ = новый массив;
			МассивНГ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00036"));
			МассивНГ.Добавить(Справочники.НоменклатурныеГруппы.НайтиПоКоду("00074"));
			ЗапросСтоимость.УстановитьПараметр("Разрез1",МассивНГ);
		КонецЕсли;
		
		ВыбСтоимость = ЗапросСтоимость.Выполнить().Выбрать();		
		   
		КоличествоОбщ = 0;
		СтоимостьОбщ = 0;
		
		Если ВыбСтоимость.Следующий() Тогда 
			КоличествоОбщ = ?(ВыбСтоимость.КоличествоОбщ=null,0,ВыбСтоимость.КоличествоОбщ);
			СтоимостьОбщ = ?(ВыбСтоимость.Стоимостьобщ=null,0,ВыбСтоимость.Стоимостьобщ);
		КонецЕсли; 				
		
		Отбор = Новый структура;
		Отбор.Вставить("Разрез1",СтрХ.Разрез1);
		Отбор.Вставить("Разрез2",СтрХ.Разрез2);
		Отбор.Вставить("Менеджер",СтрХ.Менеджер);
		
		МассивСтрокН = Склад.НайтиСтроки(Отбор);
		
		Если МассивстрокН.количество()=0 Тогда 
			СтрУ 						= Склад.Добавить();	
		Иначе 
			СтрУ 						= МассивСтрокН[0];
		КонецЕсли;
		
		СтрУ.Менеджер 				= СтрХ.Менеджер;
		СтрУ.Разрез1 				= СтрХ.Разрез1;
		СтрУ.Разрез2 				= СтрХ.Разрез2;
		СтрУ.КоличествоНачалоПериода		= КоличествоОбщ;
		СтрУ.СебестоимостьНаНачалоПериода	 		= СтоимостьОбщ;
		СтрУ.СредняяЦена 			= ?(КоличествоОбщ=0,0,СтоимостьОбщ/КоличествоОбщ);
		
		
		МассивСтрокН = Поступления.НайтиСтроки(Отбор);
		
		Если МассивстрокН.количество()=0 Тогда 
			СтрУ 						= Склад.Добавить();	
		Иначе 
			СтрУ 						= МассивСтрокН[0];
		КонецЕсли;
		
		СтрУ.Менеджер 				= СтрХ.Менеджер;
		СтрУ.Разрез1 				= СтрХ.Разрез1;
		СтрУ.Разрез2 				= СтрХ.Разрез2;
		//СтрУ.ВходнаяЦена			= СтрХ.СредняяЦена;
		
	КонецЦИкла;
	ПересчетВсего();
КонецПроцедуры

Процедура ПересчетВсего()
	ПересчетПродаж();
	ПересчетЗакупок();
	ПересчетСклада();
	ЗаполнениеИтогов();
Конецпроцедуры

Процедура ПересчетПродаж()
	// Рассчитать суммы 
	Для каждого СтрХ из ПланПродаж Цикл
		ВходнаяЦена = ПолучитьВходнуюЦену(СтрХ.Разрез1,Стрх.Разрез2);
		//СтрХ.Месяц0Сумма = СтрХ.Месяц0Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц1Сумма = СтрХ.Месяц1Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц2Сумма = СтрХ.Месяц2Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц3Сумма = СтрХ.Месяц3Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц4Сумма = СтрХ.Месяц4Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц5Сумма = СтрХ.Месяц5Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц6Сумма = СтрХ.Месяц6Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		
		СтрХ.Месяц7Сумма = СтрХ.Месяц7Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц8Сумма = СтрХ.Месяц8Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц9Сумма = СтрХ.Месяц9Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц10Сумма = СтрХ.Месяц10Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц11Сумма = СтрХ.Месяц11Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
		СтрХ.Месяц12Сумма = СтрХ.Месяц12Количество*ВходнаяЦена*(1+СтрХ.Наценка/100);
	КонеЦЦикла;	
Конецпроцедуры 

Процедура ПересчетЗакупок()
	// Рассчитать суммы 
	Для каждого СтрХ из Поступления Цикл
		//СтрХ.Месяц0Сумма = СтрХ.Месяц0Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц1Сумма = СтрХ.Месяц1Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц2Сумма = СтрХ.Месяц2Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц3Сумма = СтрХ.Месяц3Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц4Сумма = СтрХ.Месяц4Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц5Сумма = СтрХ.Месяц5Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц6Сумма = СтрХ.Месяц6Количество*СтрХ.ВходнаяЦена;
		
		СтрХ.Месяц7Сумма = СтрХ.Месяц7Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц8Сумма = СтрХ.Месяц8Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц9Сумма = СтрХ.Месяц9Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц10Сумма = СтрХ.Месяц10Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц11Сумма = СтрХ.Месяц11Количество*СтрХ.ВходнаяЦена;
		СтрХ.Месяц12Сумма = СтрХ.Месяц12Количество*СтрХ.ВходнаяЦена;
	КонеЦЦикла;
Конецпроцедуры 

Процедура ПересчетСклада()
	Для каждого СтрХ из Склад Цикл
		НаценкаР 			= ПолучитьНаценку(СтрХ.Разрез1,СтрХ.Разрез2);
		
		
		КоличествоЗакупок1 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,1);
		КоличествоЗакупок2 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,2);
		КоличествоЗакупок3 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,3);
		КоличествоЗакупок4 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,4);
		КоличествоЗакупок5 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,5);
		КоличествоЗакупок6 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,6);
		
		КоличествоЗакупок7 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,7);
		КоличествоЗакупок8 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,8);
		КоличествоЗакупок9 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,9);
		КоличествоЗакупок10 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,10);
		КоличествоЗакупок11 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,11);
		КоличествоЗакупок12 	= КоличествоЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,12);
		
	
		КоличествоПродаж1  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,1);
		КоличествоПродаж2  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,2);
		КоличествоПродаж3  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,3);
		КоличествоПродаж4  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,4);
		КоличествоПродаж5  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,5);
		КоличествоПродаж6  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,6);
		
		КоличествоПродаж7  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,7);
		КоличествоПродаж8  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,8);
		КоличествоПродаж9  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,9);
		КоличествоПродаж10  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,10);
		КоличествоПродаж11  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,11);
		КоличествоПродаж12  	= КоличествоПродаж(СтрХ.Разрез1,СтрХ.Разрез2,12);
		
	
		СуммаЗакупок1 	   	= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,1);
		СуммаЗакупок2 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,2);
		СуммаЗакупок3 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,3);
		СуммаЗакупок4 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,4);
		СуммаЗакупок5 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,5);
		СуммаЗакупок6 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,6);
		
		СуммаЗакупок7 	   	= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,7);
		СуммаЗакупок8 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,8);
		СуммаЗакупок9 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,9);
		СуммаЗакупок10 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,10);
		СуммаЗакупок11 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,11);
		СуммаЗакупок12 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,12);

		
		
		СуммаЗакупок1 	   	= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,1);
		СуммаЗакупок2 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,2);
		СуммаЗакупок3 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,3);
		СуммаЗакупок4 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,4);
		СуммаЗакупок5 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,5);
		СуммаЗакупок6 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,6);
		
		СуммаЗакупок7 	   	= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,7);
		СуммаЗакупок8 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,8);
		СуммаЗакупок9 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,9);
		СуммаЗакупок10 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,10);
		СуммаЗакупок11 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,11);
		СуммаЗакупок12 		= СуммаЗакупок(СтрХ.Разрез1,СтрХ.Разрез2,12);

		
	
		СуммаПродаж1  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,1);
		СуммаПродаж2  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,2);
		СуммаПродаж3  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,3);
		СуммаПродаж4  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,4);
		СуммаПродаж5  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,5);
		СуммаПродаж6  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,6);
		
		
		СуммаПродаж7  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,7);
		СуммаПродаж8  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,8);
		СуммаПродаж9  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,9);
		СуммаПродаж10  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,10);
		СуммаПродаж11  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,11);
		СуммаПродаж12  		= СуммаПродаж(СтрХ.Разрез1,СтрХ.Разрез2,12);
		
		// Лапенков 20160119
		//СтрХ.Месяц0Количество = СтрХ.ИтогоНачалоПериода + СтрХ.КорректировкаНачалоПериода + КоличествоЗакупок0 - КоличествоПродаж0;
		//СтрХ.Месяц1Количество = СтрХ.Месяц0Количество   + КоличествоЗакупок1 - КоличествоПродаж1;
		СтрХ.Месяц1Количество = СтрХ.КоличествоНачалоПериода + КоличествоЗакупок1 - КоличествоПродаж1;
		СтрХ.Месяц2Количество = СтрХ.Месяц1Количество   + КоличествоЗакупок2 - КоличествоПродаж2;
		СтрХ.Месяц3Количество = СтрХ.Месяц2Количество 	+ КоличествоЗакупок3 - КоличествоПродаж3;
		СтрХ.Месяц4Количество = СтрХ.Месяц3Количество 	+ КоличествоЗакупок4 - КоличествоПродаж4;
		СтрХ.Месяц5Количество = СтрХ.Месяц4Количество 	+ КоличествоЗакупок5 - КоличествоПродаж5;
		СтрХ.Месяц6Количество = СтрХ.Месяц5Количество 	+ КоличествоЗакупок6 - КоличествоПродаж6;
		
		СтрХ.Месяц7Количество = СтрХ.Месяц6Количество 	+ КоличествоЗакупок7 - КоличествоПродаж7;
		СтрХ.Месяц8Количество = СтрХ.Месяц7Количество   + КоличествоЗакупок8 - КоличествоПродаж8;
		СтрХ.Месяц9Количество = СтрХ.Месяц8Количество 	+ КоличествоЗакупок9 - КоличествоПродаж9;
		СтрХ.Месяц10Количество = СтрХ.Месяц9Количество 	+ КоличествоЗакупок10 - КоличествоПродаж10;
		СтрХ.Месяц11Количество = СтрХ.Месяц10Количество 	+ КоличествоЗакупок11 - КоличествоПродаж11;
		СтрХ.Месяц12Количество = СтрХ.Месяц11Количество 	+ КоличествоЗакупок12 - КоличествоПродаж12;
		
		// Лапенков 20160119
		//СтрХ.Месяц0Сумма 	= СтрХ.СебестоимостьНаНачалоПериода + СуммаЗакупок0 - СуммаПродаж0/(1+Наценка/100);
		//СтрХ.Месяц1Сумма 	= СтрХ.Месяц0Сумма  + СуммаЗакупок1 - СуммаПродаж1/(1+Наценка/100);
		СтрХ.Месяц1Сумма 	= СтрХ.СебестоимостьНаНачалоПериода  + СуммаЗакупок1 - СуммаПродаж1/(1+НаценкаР/100);
		СтрХ.Месяц2Сумма 	= СтрХ.Месяц1Сумма  + СуммаЗакупок2 - СуммаПродаж2/(1+НаценкаР/100);
		СтрХ.Месяц3Сумма 	= СтрХ.Месяц2Сумма 	+ СуммаЗакупок3 - СуммаПродаж3/(1+НаценкаР/100);
		СтрХ.Месяц4Сумма 	= СтрХ.Месяц3Сумма 	+ СуммаЗакупок4 - СуммаПродаж4/(1+НаценкаР/100);
		СтрХ.Месяц5Сумма 	= СтрХ.Месяц4Сумма 	+ СуммаЗакупок5 - СуммаПродаж5/(1+НаценкаР/100);
		СтрХ.Месяц6Сумма 	= СтрХ.Месяц5Сумма 	+ СуммаЗакупок6 - СуммаПродаж6/(1+НаценкаР/100);
		
		СтрХ.Месяц7Сумма 	= СтрХ.Месяц6Сумма 	+ СуммаЗакупок7 - СуммаПродаж7/(1+НаценкаР/100);
		СтрХ.Месяц8Сумма 	= СтрХ.Месяц7Сумма  + СуммаЗакупок8 - СуммаПродаж8/(1+НаценкаР/100);
		СтрХ.Месяц9Сумма 	= СтрХ.Месяц8Сумма 	+ СуммаЗакупок9 - СуммаПродаж9/(1+НаценкаР/100);
		СтрХ.Месяц10Сумма 	= СтрХ.Месяц9Сумма 	+ СуммаЗакупок10 - СуммаПродаж10/(1+НаценкаР/100);
		СтрХ.Месяц11Сумма 	= СтрХ.Месяц10Сумма 	+ СуммаЗакупок11 - СуммаПродаж11/(1+НаценкаР/100);
		СтрХ.Месяц12Сумма 	= СтрХ.Месяц11Сумма 	+ СуммаЗакупок12 - СуммаПродаж12/(1+НаценкаР/100);
		
	КонеЦЦикла;
	// Склад
	ЭтаФорма.ЭлементыФормы.Склад.Колонки.ИтогоКоличество.ТекстПодвала = РассчитатьИтогоКоличествоСклад();
	ЭтаФорма.ЭлементыФормы.Склад.Колонки.ИтогоСумма.ТекстПодвала = РассчитатьИтогоСуммаСклад();
КонецПроцедуры

Функция ПолучитьВходнуюЦену(Разрез1,Разрез2)
	Отбор = Новый Структура;
	Отбор.Вставить("Разрез1",Разрез1);
	Отбор.Вставить("Разрез2",Разрез2);
	Массив1 = Склад.НайтиСтроки(Отбор);
	
	Если Массив1.Количество()>0 Тогда
        НачальноеКоличество = Массив1[0].КоличествоНачалоПериода;
		НачальнаяСумма  =  Массив1[0].СебестоимостьНаНачалоПериода;

	иначе
		НачальноеКоличество = 0;
		НачальнаяСумма = 0;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Разрез1",Разрез1);
	Отбор.Вставить("Разрез2",Разрез2);
	М = Поступления.НайтиСтроки(Отбор);
	
	Если М.Количество()=0 Тогда 		
		КоличествоХ = НачальноеКоличество;
		СуммаХ = НачальнаяСумма;
	Иначе 
		КоличествоХ = НачальноеКоличество + М[0].Месяц1Количество + М[0].Месяц2Количество + М[0].Месяц3Количество + М[0].Месяц4Количество + М[0].Месяц5Количество + М[0].Месяц6Количество
			+ М[0].Месяц10Количество + М[0].Месяц7Количество + М[0].Месяц8Количество + М[0].Месяц9Количество + М[0].Месяц11Количество + М[0].Месяц12Количество;
		СуммаХ = НачальнаяСумма + М[0].Месяц1Сумма + М[0].Месяц2Сумма + М[0].Месяц3Сумма + М[0].Месяц4Сумма + М[0].Месяц5Сумма + М[0].Месяц6Сумма
			+ М[0].Месяц10Сумма + М[0].Месяц7Сумма + М[0].Месяц8Сумма + М[0].Месяц9Сумма + М[0].Месяц11Сумма + М[0].Месяц12Сумма;
	КонецЕсли;	
		
	СредняяЦена = ?(КоличествоХ = 0,0,СуммаХ/КоличествоХ);	
		
	Возврат СредняяЦена;
КонецФункции

Функция ПолучитьНаценку(Разрез1,Разрез2)
	Отбор = Новый Структура;
	Отбор.Вставить("Разрез1",Разрез1);
	Отбор.Вставить("Разрез2",Разрез2);
	Массив = ПланПродаж.НайтиСтроки(Отбор);
	
	Если Массив.Количество()>0 Тогда 
		Возврат Массив[0].Наценка;		
	КонецЕсли;
	
	Возврат 0;	
КонецФункции

Функция КоличествоЗакупок(Разрез1,Разрез2,Номер)
	Отбор = Новый Структура;
	Отбор.Вставить("Разрез1",Разрез1);
	Отбор.Вставить("Разрез2",Разрез2);
	Массив = Поступления.Выгрузить(Отбор);
	
	Если Массив.Количество()>0 Тогда 
		Возврат Массив.Итог("Месяц"+Номер+"Количество");		
	КонецЕсли;
	
	Возврат 0;	
КонецФункции

Функция КоличествоПродаж(Разрез1,Разрез2,Номер)
	Отбор = Новый Структура;
	Отбор.Вставить("Разрез1",Разрез1);
	Отбор.Вставить("Разрез2",Разрез2);
	Массив = ПланПродаж.Выгрузить(Отбор);
	
	Если Массив.Количество()>0 Тогда 
		Возврат Массив.Итог("Месяц"+Номер+"Количество");		
	КонецЕсли;
	
	Возврат 0;	
КонецФункции

Функция СуммаЗакупок(Разрез1,Разрез2,Номер)
	Отбор = Новый Структура;
	Отбор.Вставить("Разрез1",Разрез1);
	Отбор.Вставить("Разрез2",Разрез2);
	Массив = Поступления.Выгрузить(Отбор);
	
	Если Массив.Количество()>0 Тогда 
		Возврат Массив.Итог("Месяц"+Номер+"Сумма");		
	КонецЕсли;
	
	Возврат 0;	
КонецФункции

Функция СуммаПродаж(Разрез1,Разрез2,Номер)
	Отбор = Новый Структура;
	Отбор.Вставить("Разрез1",Разрез1);
	Отбор.Вставить("Разрез2",Разрез2);
	Массив = ПланПродаж.Выгрузить(Отбор);
	
	Если Массив.Количество()>0 Тогда 
		Возврат Массив.Итог("Месяц"+Номер+"Сумма");		
	КонецЕсли;
	
	Возврат 0;	
КонецФункции

Процедура ПересчитатьСреднююЦену()
	Для каждого СтрХ из Склад Цикл
		СтрХ.СредняяЦена = СтрХ.СебестоимостьНаНачалоПериода/СтрХ.КоличествоНачалоПериода;
	КонецЦикла;
КонецПроцедуры

Процедура ПересчитатьСебестоимость()
	Для каждого СтрХ из Склад Цикл
		Если СтрХ.КорректировкаНачалоПериодаСумма<>0 Тогда 
			СтрХ.СебестоимостьНаНачалоПериода = СтрХ.КорректировкаНачалоПериодаСумма;
		КонецЕсли;
		Себестоимость1 = СтрХ.СебестоимостьНаНачалоПериода*((СтрХ.КоличествоНачалоПериода+СтрХ.КорректировкаНачалоПериода)/СтрХ.КоличествоНачалоПериода);
		СтрХ.КорректировкаНачалоПериодаСумма = СтрХ.СебестоимостьНаНачалоПериода;
		СтрХ.СебестоимостьНаНачалоПериода = Себестоимость1;
	КонецЦикла;
КонецПроцедуры

Процедура СкладИтогоНачалоПериодаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчитатьСреднююЦену();
КонецПроцедуры

Процедура СкладКорректировкаНачалоПериодаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчитатьСебестоимость();
	ПересчитатьСреднююЦену();
КонецПроцедуры

Процедура СкладСебестоимостьНаНачалоПериодаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчитатьСреднююЦену();
КонецПроцедуры

Процедура ПоступленияВходнаяЦенаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПоступленияМесяц1КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПоступленияМесяц2КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПоступленияМесяц3КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПоступленияМесяц4КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПоступленияМесяц5КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПоступленияМесяц6КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПланПродажНаценкаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПланПродажМесяц1КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПланПродажМесяц2КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПланПродажМесяц3КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПланПродажМесяц4КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПланПродажМесяц5КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчетВсего();
КонецПроцедуры

Процедура ПланПродажМесяц6КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.ПересчетВсего();
	ПересчетВсего();
КонецПроцедуры

Процедура КоманднаяПанельПерезаполнениеСклада(Кнопка)	
	
	Ответ = Вопрос("У уверены что хотите заново сформировать начальные остатки?", РежимДиалогаВопрос.ДаНет);
	Отказ = (Ответ = КодВозвратаДиалога.Нет);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СписокГруппНоменклатуры = Новый СписокЗначений;
    СписокГруппНоменклатуры.Добавить(Справочники.Номенклатура.ВнеоборотныеАктивы);
    СписокГруппНоменклатуры.Добавить(Справочники.Номенклатура.Материалы);
	
	НачДатаЗаполнения=ПериодПланирования.датарасчетаНачальныхостатков;
	//Если не ВвестиДату(НачДатаЗаполнения,"Введите дату для начальных остатков") Тогда
	//	Возврат;
	//КонецЕсли;
	
    
	
	ШаблонТекстаСтоимость = "ВЫБРАТЬ
	                        |	&Менеджер,
	                        |	&Разрез1 КАК Категория,
	                        |	СУММА(ПартииТоваровНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОбщ,
	                        |	СУММА(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток) КАК СтоимостьОбщ
	                        |ИЗ
	                        |	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	                        |			&Дата,
	                        |			Номенклатура.Производитель В ИЕРАРХИИ (&Разрез2)
	                        |				И Номенклатура.НоменклатурнаяГруппа В ИЕРАРХИИ (&Разрез1)
	                        |				И НЕ Номенклатура В ИЕРАРХИИ (&СписокГруппНоменклатуры)) КАК ПартииТоваровНаСкладахОстатки";
							
							
	ШаблонТекстаСтоимостьБезРазреза2 = "ВЫБРАТЬ
	                                   |	&Менеджер,
	                                   |	&Разрез1 КАК Категория,
	                                   |	СУММА(ПартииТоваровНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОбщ,
	                                   |	СУММА(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток) КАК СтоимостьОбщ
	                                   |ИЗ
	                                   |	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	                                   |			&Дата,
	                                   |			Номенклатура.НоменклатурнаяГруппа В ИЕРАРХИИ (&Разрез1)
	                                   |				И НЕ Номенклатура В ИЕРАРХИИ (&СписокГруппНоменклатуры)) КАК ПартииТоваровНаСкладахОстатки";
							
							
	ЗапросСтоимость = Новый Запрос;
	ЗапросСтоимость.УстановитьПараметр("Дата",НачДатаЗаполнения);
	ЗапросСтоимость.УстановитьПараметр("СписокГруппНоменклатуры",СписокГруппНоменклатуры);

	
	Для Каждого СтрХ из Склад Цикл
				
		Если не ЗначениеЗаполнено(СтрХ.Разрез2) Тогда 
			ЗапросСтоимость.Текст = ШаблонТекстаСтоимостьБезРазреза2;
		Иначе 
			ЗапросСтоимость.Текст = ШаблонТекстаСтоимость;
		КонецЕсли;
		
		набор = РегистрыСведений.СоответствиеПроизводителейДляБюджетирования.СоздатьНаборЗаписей();
		набор.Отбор.ОбщаяГруппа.Установить(стрХ.Разрез2);
		Набор.Прочитать();
		
		Спис = Новый СписокЗначений;
		
		Если набор.Количество()>0 ТОгда
			для каждого стр11 из набор цикл
				спис.Добавить(стр11.Бренд);	
			КонецЦикла;
		иначе	
		    спис.Добавить(стрХ.Разрез2);
		КонецЕсли;
		
		ЗапросСтоимость.УстановитьПараметр("Менеджер",СтрХ.Менеджер);
		ЗапросСтоимость.УстановитьПараметр("Разрез1",СтрХ.Разрез1);
		ЗапросСтоимость.УстановитьПараметр("Разрез2",спис);
		ВыбСтоимость = ЗапросСтоимость.Выполнить().Выбрать();		
		
		КоличествоОбщ = 0;
		СтоимостьОбщ = 0;
		
		Если ВыбСтоимость.Следующий() Тогда 
			КоличествоОбщ = ?(ВыбСтоимость.КоличествоОбщ=null,0,ВыбСтоимость.КоличествоОбщ);
			СтоимостьОбщ = ?(ВыбСтоимость.Стоимостьобщ=null,0,ВыбСтоимость.Стоимостьобщ);
		КонецЕсли; 				
				
		СтрХ.КоличествоНачалоПериода		= КоличествоОбщ;
		СтрХ.СебестоимостьНаНачалоПериода	 		= СтоимостьОбщ;
		СтрХ.СредняяЦена 			= ?(КоличествоОбщ=0,0,СтоимостьОбщ/КоличествоОбщ);
				
	КонецЦИкла;	
	 // Лапенков 20160119
	//ПересчетВсего();
	ПересчетСклада();

КонецПроцедуры

Процедура КоманднаяПанель2ПеренестиСреднююЦену(Кнопка)
	// Вставить содержимое обработчика.
	Для каждого СтрХ из Поступления Цикл
		Отбор = Новый структура;
		Отбор.Вставить("Разрез1",СтрХ.Разрез1);
		Отбор.Вставить("Разрез2",СтрХ.Разрез2);
		Отбор.Вставить("Менеджер",СтрХ.Менеджер);
		
		МассивСтрокН = Склад.НайтиСтроки(Отбор);
		
		Если МассивстрокН.количество()<>0 Тогда 
			СтрХ.ВходнаяЦена = МассивстрокН[0].СредняяЦена;	
		КонецЕсли;
	КонеЦЦИкла;
	ПересчетВсего();
КонецПроцедуры

Процедура КоманднаяПанель5ЗаполнитьПоПрошломуПериоду(Кнопка)
	ПриходДенег.Очистить();
	//ТаблицаПроцентовПриходаДенег = новый Массив;
	//ТаблицаПроцентовПриходаДенег.Добавить(100);
	//ТаблицаПроцентовПриходаДенег.Добавить(100);
	//ТаблицаПроцентовПриходаДенег.Добавить(100);
	//ТаблицаПроцентовПриходаДенег.Добавить(100);
	//ТаблицаПроцентовПриходаДенег.Добавить(100);
	//ТаблицаПроцентовПриходаДенег.Добавить(100);
	
	Для каждого Стрх из ПланПродаж Цикл		
		//ТаблицаПроцентовПриходаДенег[0] = 100;
		//ТаблицаПроцентовПриходаДенег[1] = 100;
		//ТаблицаПроцентовПриходаДенег[2] = 100;
		//ТаблицаПроцентовПриходаДенег[3] = 100;
		//ТаблицаПроцентовПриходаДенег[4] = 100;
		//ТаблицаПроцентовПриходаДенег[5] = 100;
		ТаблицаПроцентовПриходаДенег = ПолучитьПроцентовкуЗаПрошлыйГод(Стрх.Разрез1,Стрх.Разрез2);
		
		НовСтр = ПриходДенег.Добавить();
		НовСтр.Разрез1 = СтрХ.Разрез1;
		НовСтр.Разрез2 = СтрХ.Разрез2;
		//СтрУ.Разрез3 = СтрХ.Разрез3;
		НовСтр.Менеджер = СтрХ.Менеджер;
		
		Кол = ТаблицаПроцентовПриходаДенег.Количество();
		
		для ии1 = 1 по Кол Цикл
		
		    для ии2 = 1 по Кол Цикл
			
			    НовСтр["Месяц"+Строка(ии1)+"Сумма"] = НовСтр["Месяц"+Строка(ии1)+"Сумма"]
				
				+ Стрх["Месяц"+Строка(ии2)+"Сумма"] * ?(ТаблицаПроцентовПриходаДенег[ии2-1]["Месяц"+Строка(ии1)] = Неопределено,0,ТаблицаПроцентовПриходаДенег[ии2-1]["Месяц"+Строка(ии1)]);
					
			КонецЦикла;
			
		КонецЦикла;
		
		
	
				//НовСтр.Месяц1Сумма = Стрх.Месяц1Сумма * ?(ТаблицаПроцентовПриходаДенег[0].Месяц1 = Неопределено,0,ТаблицаПроцентовПриходаДенег[0].Месяц1)
				//+ Стрх.Месяц2Сумма * ?(ТаблицаПроцентовПриходаДенег[1].Месяц1 = Неопределено,0,ТаблицаПроцентовПриходаДенег[1].Месяц1)
				//+ Стрх.Месяц3Сумма * ?(ТаблицаПроцентовПриходаДенег[2].Месяц1 = Неопределено,0,ТаблицаПроцентовПриходаДенег[2].Месяц1)
				//+ Стрх.Месяц4Сумма * ?(ТаблицаПроцентовПриходаДенег[3].Месяц1 = Неопределено,0,ТаблицаПроцентовПриходаДенег[3].Месяц1)
				//+ Стрх.Месяц5Сумма * ?(ТаблицаПроцентовПриходаДенег[4].Месяц1 = Неопределено,0,ТаблицаПроцентовПриходаДенег[4].Месяц1)
				//+ Стрх.Месяц6Сумма * ?(ТаблицаПроцентовПриходаДенег[5].Месяц1 = Неопределено,0,ТаблицаПроцентовПриходаДенег[5].Месяц1);
				//
				//НовСтр.Месяц2Сумма = Стрх.Месяц1Сумма * ?(ТаблицаПроцентовПриходаДенег[0].Месяц2 = Неопределено,0,ТаблицаПроцентовПриходаДенег[0].Месяц2)
				//+ Стрх.Месяц2Сумма * ?(ТаблицаПроцентовПриходаДенег[1].Месяц2 = Неопределено,0,ТаблицаПроцентовПриходаДенег[1].Месяц2)
				//+ Стрх.Месяц3Сумма * ?(ТаблицаПроцентовПриходаДенег[2].Месяц2 = Неопределено,0,ТаблицаПроцентовПриходаДенег[2].Месяц2)
				//+ Стрх.Месяц4Сумма * ?(ТаблицаПроцентовПриходаДенег[3].Месяц2 = Неопределено,0,ТаблицаПроцентовПриходаДенег[3].Месяц2)
				//+ Стрх.Месяц5Сумма * ?(ТаблицаПроцентовПриходаДенег[4].Месяц2 = Неопределено,0,ТаблицаПроцентовПриходаДенег[4].Месяц2)
				//+ Стрх.Месяц6Сумма * ?(ТаблицаПроцентовПриходаДенег[5].Месяц2 = Неопределено,0,ТаблицаПроцентовПриходаДенег[5].Месяц2);
				//
				//НовСтр.Месяц3Сумма = Стрх.Месяц1Сумма * ?(ТаблицаПроцентовПриходаДенег[0].Месяц3 = Неопределено,0,ТаблицаПроцентовПриходаДенег[0].Месяц3)
				//+ Стрх.Месяц2Сумма * ?(ТаблицаПроцентовПриходаДенег[1].Месяц3 = Неопределено,0,ТаблицаПроцентовПриходаДенег[1].Месяц3)
				//+ Стрх.Месяц3Сумма * ?(ТаблицаПроцентовПриходаДенег[2].Месяц3 = Неопределено,0,ТаблицаПроцентовПриходаДенег[2].Месяц3)
				//+ Стрх.Месяц4Сумма * ?(ТаблицаПроцентовПриходаДенег[3].Месяц3 = Неопределено,0,ТаблицаПроцентовПриходаДенег[3].Месяц3)
				//+ Стрх.Месяц5Сумма * ?(ТаблицаПроцентовПриходаДенег[4].Месяц3 = Неопределено,0,ТаблицаПроцентовПриходаДенег[4].Месяц3)
				//+ Стрх.Месяц6Сумма * ?(ТаблицаПроцентовПриходаДенег[5].Месяц3 = Неопределено,0,ТаблицаПроцентовПриходаДенег[5].Месяц3);
				//
				//НовСтр.Месяц4Сумма = Стрх.Месяц1Сумма * ?(ТаблицаПроцентовПриходаДенег[0].Месяц4 = Неопределено,0,ТаблицаПроцентовПриходаДенег[0].Месяц4)
				//+ Стрх.Месяц2Сумма * ?(ТаблицаПроцентовПриходаДенег[1].Месяц4 = Неопределено,0,ТаблицаПроцентовПриходаДенег[1].Месяц4)
				//+ Стрх.Месяц3Сумма * ?(ТаблицаПроцентовПриходаДенег[2].Месяц4 = Неопределено,0,ТаблицаПроцентовПриходаДенег[2].Месяц4)
				//+ Стрх.Месяц4Сумма * ?(ТаблицаПроцентовПриходаДенег[3].Месяц4 = Неопределено,0,ТаблицаПроцентовПриходаДенег[3].Месяц4)
				//+ Стрх.Месяц5Сумма * ?(ТаблицаПроцентовПриходаДенег[4].Месяц4 = Неопределено,0,ТаблицаПроцентовПриходаДенег[4].Месяц4)
				//+ Стрх.Месяц6Сумма * ?(ТаблицаПроцентовПриходаДенег[5].Месяц4 = Неопределено,0,ТаблицаПроцентовПриходаДенег[5].Месяц4);
				//
				//НовСтр.Месяц5Сумма = Стрх.Месяц1Сумма * ?(ТаблицаПроцентовПриходаДенег[0].Месяц5 = Неопределено,0,ТаблицаПроцентовПриходаДенег[0].Месяц5)
				//+ Стрх.Месяц2Сумма * ?(ТаблицаПроцентовПриходаДенег[1].Месяц5 = Неопределено,0,ТаблицаПроцентовПриходаДенег[1].Месяц5)
				//+ Стрх.Месяц3Сумма * ?(ТаблицаПроцентовПриходаДенег[2].Месяц5 = Неопределено,0,ТаблицаПроцентовПриходаДенег[2].Месяц5)
				//+ Стрх.Месяц4Сумма * ?(ТаблицаПроцентовПриходаДенег[3].Месяц5 = Неопределено,0,ТаблицаПроцентовПриходаДенег[3].Месяц5)
				//+ Стрх.Месяц5Сумма * ?(ТаблицаПроцентовПриходаДенег[4].Месяц5 = Неопределено,0,ТаблицаПроцентовПриходаДенег[4].Месяц5)
				//+ Стрх.Месяц6Сумма * ?(ТаблицаПроцентовПриходаДенег[5].Месяц5 = Неопределено,0,ТаблицаПроцентовПриходаДенег[5].Месяц5);
				//
				//НовСтр.Месяц6Сумма = Стрх.Месяц1Сумма * ?(ТаблицаПроцентовПриходаДенег[0].Месяц6 = Неопределено,0,ТаблицаПроцентовПриходаДенег[0].Месяц6)
				//+ Стрх.Месяц2Сумма * ?(ТаблицаПроцентовПриходаДенег[1].Месяц6 = Неопределено,0,ТаблицаПроцентовПриходаДенег[1].Месяц6)
				//+ Стрх.Месяц3Сумма * ?(ТаблицаПроцентовПриходаДенег[2].Месяц6 = Неопределено,0,ТаблицаПроцентовПриходаДенег[2].Месяц6)
				//+ Стрх.Месяц4Сумма * ?(ТаблицаПроцентовПриходаДенег[3].Месяц6 = Неопределено,0,ТаблицаПроцентовПриходаДенег[3].Месяц6)
				//+ Стрх.Месяц5Сумма * ?(ТаблицаПроцентовПриходаДенег[4].Месяц6 = Неопределено,0,ТаблицаПроцентовПриходаДенег[4].Месяц6)
				//+ Стрх.Месяц6Сумма * ?(ТаблицаПроцентовПриходаДенег[5].Месяц6 = Неопределено,0,ТаблицаПроцентовПриходаДенег[5].Месяц6);
				
		
		
		
	// Для й=0 по 5 Цикл
	//		СтрПрод = МассивСтрокН[0];
	//		СтрХ.Месяц1Сумма = СтрПрод.Месяц1Сумма*ТаблицаПроцентовПриходаДенег[0]/100;
	//		СтрХ.Месяц2Сумма = СтрПрод.Месяц2Сумма*ТаблицаПроцентовПриходаДенег[1]/100;
	//		СтрХ.Месяц3Сумма = СтрПрод.Месяц3Сумма*ТаблицаПроцентовПриходаДенег[2]/100;
	//		СтрХ.Месяц4Сумма = СтрПрод.Месяц4Сумма*ТаблицаПроцентовПриходаДенег[3]/100;
	//		СтрХ.Месяц5Сумма = СтрПрод.Месяц5Сумма*ТаблицаПроцентовПриходаДенег[4]/100;
	//		СтрХ.Месяц6Сумма = СтрПрод.Месяц6Сумма*ТаблицаПроцентовПриходаДенег[5]/100;			
	//	
КонецЦикла;
ПересчетВсего();
КонецПроцедуры

Процедура КоманднаяПанель5ПерезаполнитьПоПрошломуПериоду(Кнопка)
	
	ФормаПроцентов = ПолучитьФорму("ФормаПроцентов");
	
	ПриходДенег.Очистить();
		
	//ТаблицапроцентовДЗ = ФормаПроцентов.ОткрытьМодально();
	
	ТаблицаПроцентовПриходаДенег = новый Массив;
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	ТаблицаПроцентовПриходаДенег.Добавить(100);
	
	Для каждого Стрх из Склад Цикл		
		
		ТаблицаОплатПомесяцамПоНГ = Новый Массив;
		ТаблицаОплатПомесяцамПоНГ.Добавить(0);
		ТаблицаОплатПомесяцамПоНГ.Добавить(0);
		ТаблицаОплатПомесяцамПоНГ.Добавить(0);
		ТаблицаОплатПомесяцамПоНГ.Добавить(0);
		ТаблицаОплатПомесяцамПоНГ.Добавить(0);
		ТаблицаОплатПомесяцамПоНГ.Добавить(0);
		
		Отбор = Новый структура; 
		Отбор.Вставить("Разрез1",СтрХ.Разрез1);
		Отбор.Вставить("Разрез2",СтрХ.Разрез2);
		Отбор.Вставить("Менеджер",СтрХ.Менеджер);
		МассивСтрокН = ПриходДенег.НайтиСтроки(Отбор);
		
		Если (МассивСтрокН.Количество()=0) Тогда  
			СтрУ = ПриходДенег.Добавить();
			СтрУ.Разрез1 = СтрХ.Разрез1;
			СтрУ.Разрез2 = СтрХ.Разрез2;
			СтрУ.Разрез3 = СтрХ.Разрез3;
			СтрУ.Менеджер = СтрХ.Менеджер;
		Иначе 
			СтрУ = МассивСтрокН[0];	
		КонецЕсли;
		
		Отбор = Новый структура;
		Отбор.Вставить("Разрез1",СтрХ.Разрез1);
		Отбор.Вставить("Разрез2",СтрХ.Разрез2);
		Отбор.Вставить("Менеджер",СтрХ.Менеджер);
		
		МассивСтрокН = ПланПродаж.НайтиСтроки(Отбор);
		
		Если МассивстрокН.количество()=0 Тогда 
			
		Иначе 
			Попытка 
				ДебиторкаОбщ = Число(СтрУ.комментарий);
			Исключение
				ДебиторкаОбщ = 0;
			КонецПопытки;
			
			// Формируем дебиторку
			ТаблицапроцентовДЗ = ПолучитьДебиторкуПоРазрезам(СтрХ.Разрез1,СтрХ.Разрез2);
			ПроцентДЗ1 = ТаблицапроцентовДЗ[0];
			ПроцентДЗ2 = ТаблицапроцентовДЗ[1];
			ПроцентДЗ3 = ТаблицапроцентовДЗ[2];
			ПроцентДЗ4 = ТаблицапроцентовДЗ[3];
			ПроцентДЗ5 = ТаблицапроцентовДЗ[4];
			ПроцентДЗ6 = ТаблицапроцентовДЗ[5];
			Дебиторка = ТаблицапроцентовДЗ[6];
			
			
			// Считаем оплаты продаж 
			СтрПрод = МассивстрокН[0];
			Месяц1СуммаПродаж = СтрПрод.Месяц1Сумма;
			Месяц2СуммаПродаж = СтрПрод.Месяц2Сумма;
			Месяц3СуммаПродаж = СтрПрод.Месяц3Сумма;
			Месяц4СуммаПродаж = СтрПрод.Месяц4Сумма;
			Месяц5СуммаПродаж = СтрПрод.Месяц5Сумма;
			Месяц6СуммаПродаж = СтрПрод.Месяц6Сумма;
			
			ТаблицаПроцентовНГЗаПериод1 = ПолучитьПроцентОплатПоНГЗАпериод(СтрХ.Разрез1,СтрХ.Разрез2,НачалоМесяца(Дата(Год-1,?(Полугодие=1,1,6),1)),КонецМесяца(Дата(Год-1,?(Полугодие=1,1,6),1)));
			ТаблицаПроцентовНГЗаПериод2 = ПолучитьПроцентОплатПоНГЗАпериод(СтрХ.Разрез1,СтрХ.Разрез2,НачалоМесяца(Дата(Год-1,?(Полугодие=1,1,6)+1,1)),КонецМесяца(Дата(Год-1,?(Полугодие=1,1,6)+1,1)));
			ТаблицаПроцентовНГЗаПериод3 = ПолучитьПроцентОплатПоНГЗАпериод(СтрХ.Разрез1,СтрХ.Разрез2,НачалоМесяца(Дата(Год-1,?(Полугодие=1,1,6)+2,1)),КонецМесяца(Дата(Год-1,?(Полугодие=1,1,6)+2,1)));
			ТаблицаПроцентовНГЗаПериод4 = ПолучитьПроцентОплатПоНГЗАпериод(СтрХ.Разрез1,СтрХ.Разрез2,НачалоМесяца(Дата(Год-1,?(Полугодие=1,1,6)+3,1)),КонецМесяца(Дата(Год-1,?(Полугодие=1,1,6)+3,1)));
			ТаблицаПроцентовНГЗаПериод5 = ПолучитьПроцентОплатПоНГЗАпериод(СтрХ.Разрез1,СтрХ.Разрез2,НачалоМесяца(Дата(Год-1,?(Полугодие=1,1,6)+4,1)),КонецМесяца(Дата(Год-1,?(Полугодие=1,1,6)+4,1)));
			ТаблицаПроцентовНГЗаПериод6 = ПолучитьПроцентОплатПоНГЗАпериод(СтрХ.Разрез1,СтрХ.Разрез2,НачалоМесяца(Дата(Год-1,?(Полугодие=1,1,6)+5,1)),КонецМесяца(Дата(Год-1,?(Полугодие=1,1,6)+5,1)));
			
			ТаблицаОплатПомесяцамПоНГ[0] = ТаблицаОплатПомесяцамПоНГ[0] + Месяц1СуммаПродаж * ТаблицаПроцентовНГЗаПериод1[0]/100;
			ТаблицаОплатПомесяцамПоНГ[1] = ТаблицаОплатПомесяцамПоНГ[1] + Месяц2СуммаПродаж * ТаблицаПроцентовНГЗаПериод2[0]/100 + Месяц1СуммаПродаж * ТаблицаПроцентовНГЗаПериод1[1]/100;
			ТаблицаОплатПомесяцамПоНГ[2] = ТаблицаОплатПомесяцамПоНГ[2] + Месяц3СуммаПродаж * ТаблицаПроцентовНГЗаПериод3[0]/100 + Месяц2СуммаПродаж * ТаблицаПроцентовНГЗаПериод2[1]/100 + Месяц1СуммаПродаж * ТаблицаПроцентовНГЗаПериод1[2]/100;
			ТаблицаОплатПомесяцамПоНГ[3] = ТаблицаОплатПомесяцамПоНГ[3] + Месяц4СуммаПродаж * ТаблицаПроцентовНГЗаПериод4[0]/100 + Месяц3СуммаПродаж * ТаблицаПроцентовНГЗаПериод3[1]/100 + Месяц2СуммаПродаж * ТаблицаПроцентовНГЗаПериод2[2]/100 + Месяц1СуммаПродаж * ТаблицаПроцентовНГЗаПериод1[3]/100;
			ТаблицаОплатПомесяцамПоНГ[4] = ТаблицаОплатПомесяцамПоНГ[4] + Месяц5СуммаПродаж * ТаблицаПроцентовНГЗаПериод5[0]/100 + Месяц4СуммаПродаж * ТаблицаПроцентовНГЗаПериод4[1]/100 + Месяц3СуммаПродаж * ТаблицаПроцентовНГЗаПериод3[2]/100 + Месяц2СуммаПродаж * ТаблицаПроцентовНГЗаПериод2[3]/100 + Месяц1СуммаПродаж * ТаблицаПроцентовНГЗаПериод1[4]/100;
			ТаблицаОплатПомесяцамПоНГ[5] = ТаблицаОплатПомесяцамПоНГ[5] + Месяц6СуммаПродаж * ТаблицаПроцентовНГЗаПериод6[0]/100 + Месяц5СуммаПродаж * ТаблицаПроцентовНГЗаПериод5[1]/100 + Месяц4СуммаПродаж * ТаблицаПроцентовНГЗаПериод4[2]/100 + Месяц3СуммаПродаж * ТаблицаПроцентовНГЗаПериод3[3]/100 + Месяц2СуммаПродаж * ТаблицаПроцентовНГЗаПериод2[4]/100+ Месяц1СуммаПродаж * ТаблицаПроцентовНГЗаПериод1[5]/100;
			
			// Формируем итого
			СтрУ.Комментарий = Дебиторка;
			СтрУ.Месяц1Сумма = Дебиторка*ПроцентДЗ1/100 + ТаблицаОплатПомесяцамПоНГ[0];
			СтрУ.Месяц2Сумма = Дебиторка*ПроцентДЗ2/100 + ТаблицаОплатПомесяцамПоНГ[1];
			СтрУ.Месяц3Сумма = Дебиторка*ПроцентДЗ3/100 + ТаблицаОплатПомесяцамПоНГ[2];
			СтрУ.Месяц4Сумма = Дебиторка*ПроцентДЗ4/100 + ТаблицаОплатПомесяцамПоНГ[3];
			СтрУ.Месяц5Сумма = Дебиторка*ПроцентДЗ5/100 + ТаблицаОплатПомесяцамПоНГ[4];
			СтрУ.Месяц6Сумма = Дебиторка*ПроцентДЗ6/100 + ТаблицаОплатПомесяцамПоНГ[5];			
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура КоманднаяПанель5ПерезаполнитьПоДаннымПродаж(Кнопка)
	// Вставить содержимое обработчика.
	ПриходДенег.Очистить();
	Для каждого СтрХ из ПланПродаж Цикл
		СтрУ = ПриходДенег.Добавить();
		ЗаполнитьЗначенияСвойств(Стру,стрХ);
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель5ЗаполнитьПоДаннымПродаж(Кнопка)
	// Вставить содержимое обработчика.
	Для каждого СтрХ из ПланПродаж Цикл
		Отбор = Новый структура;
		Отбор.Вставить("Разрез1",СтрХ.Разрез1);
		Отбор.Вставить("Разрез2",СтрХ.Разрез2);
		Отбор.Вставить("Менеджер",СтрХ.Менеджер);
		
		МассивСтрокН = ПриходДенег.НайтиСтроки(Отбор);
		
		Если МассивстрокН.количество()=0 Тогда 
			СтрУ 						= ПриходДенег.Добавить();	
		Иначе 
			СтрУ 						= МассивСтрокН[0];
		КонецЕсли;

		ЗаполнитьЗначенияСвойств(СтрУ,стрХ);
	КонецЦикла;	
КонецПроцедуры

функция ПолучитьПроцентовкуЗаПрошлыйГод(Разрез1,Разрез2)
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	                                            
	ТаблицаПроцентовПриходаДенег = Новый ТаблицаЗначений;
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("МесяцРасчета");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц1");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц2");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц3");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц4");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц5");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц6");
	
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц7");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц8");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц9");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц10");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц11");
	ТаблицаПроцентовПриходаДенег.Колонки.Добавить("Месяц12");
	
    	
	Если ЗначениеЗаполнено(Разрез2) Тогда 
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ПродажиОбороты.ЗаказПокупателя,
		                      |	ВзаиморасчетыСКонтрагентамиОбороты.ПериодМесяц,
		                      |	ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход
		                      |ПОМЕСТИТЬ Врем
		                      |ИЗ
		                      |	РегистрНакопления.Продажи.Обороты(
		                      |			&Дата1,
		                      |			&дата2,
		                      |			,
		                      |			Номенклатура.НоменклатурнаяГруппа В ИЕРАРХИИ (&НГ)
		                      |				И Номенклатура.Производитель = &Производитель
		                      |				И ТИПЗНАЧЕНИЯ(ДокументПродажи) = ТИП(Документ.РеализацияТоваровУслуг)
		                      |				И ТИПЗНАЧЕНИЯ(ЗаказПокупателя) = ТИП(Документ.ЗаказПокупателя)) КАК ПродажиОбороты
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(, , Авто, ) КАК ВзаиморасчетыСКонтрагентамиОбороты
		                      |		ПО ПродажиОбороты.ЗаказПокупателя = ВзаиморасчетыСКонтрагентамиОбороты.Сделка
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	Врем.ПериодМесяц КАК ПериодМесяц,
		                      |	СУММА(Врем.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
		                      |ИЗ
		                      |	Врем КАК Врем
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	Врем.ПериодМесяц
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	ПериодМесяц");
	Иначе 
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ПродажиОбороты.ЗаказПокупателя,
		                      |	ВзаиморасчетыСКонтрагентамиОбороты.ПериодМесяц,
		                      |	ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход
		                      |ПОМЕСТИТЬ Врем
		                      |ИЗ
		                      |	РегистрНакопления.Продажи.Обороты(
		                      |			&Дата1,
		                      |			&дата2,
		                      |			,
		                      |			Номенклатура.НоменклатурнаяГруппа В ИЕРАРХИИ (&НГ)
		                      |				И ТИПЗНАЧЕНИЯ(ДокументПродажи) = ТИП(Документ.РеализацияТоваровУслуг)
		                      |				И ТИПЗНАЧЕНИЯ(ЗаказПокупателя) = ТИП(Документ.ЗаказПокупателя)) КАК ПродажиОбороты
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(, , Авто, ) КАК ВзаиморасчетыСКонтрагентамиОбороты
		                      |		ПО ПродажиОбороты.ЗаказПокупателя = ВзаиморасчетыСКонтрагентамиОбороты.Сделка
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	Врем.ПериодМесяц КАК ПериодМесяц,
		                      |	СУММА(Врем.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
		                      |ИЗ
		                      |	Врем КАК Врем
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	Врем.ПериодМесяц
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	ПериодМесяц");		
	КонецЕсли;								   
								   
							  
						  
	Запрос.УстановитьПараметр("НГ",Разрез1);
	Запрос.УстановитьПараметр("Производитель",Разрез2);
	
	// Теперь делаем помесячно. 
	//НачПериода = НачалоДня(Дата(Год,?(Полугодие=1,1,7),1));
	НачПериодаПГ = ДобавитьМесяц(ПериодПланирования.ДатаНачала,-12);
	ПериодаПГ1 = НачПериодаПГ;
	ПериодаПГ2 = ДобавитьМесяц(НачПериодаПГ,1);
	ПериодаПГ3 = ДобавитьМесяц(НачПериодаПГ,2);
	ПериодаПГ4 = ДобавитьМесяц(НачПериодаПГ,3);
	ПериодаПГ5 = ДобавитьМесяц(НачПериодаПГ,4);
	ПериодаПГ6 = ДобавитьМесяц(НачПериодаПГ,5);
	
	ПериодаПГ7 = ДобавитьМесяц(НачПериодаПГ,6);
	ПериодаПГ8 = ДобавитьМесяц(НачПериодаПГ,7);
	ПериодаПГ9 = ДобавитьМесяц(НачПериодаПГ,8);
	ПериодаПГ10 = ДобавитьМесяц(НачПериодаПГ,9);
	ПериодаПГ11 = ДобавитьМесяц(НачПериодаПГ,10);
	ПериодаПГ12 = ДобавитьМесяц(НачПериодаПГ,11);
	Для й=0 по КоличествоМесяцев-1 Цикл
		ТекМесяц = ДобавитьМесяц(НачПериодаПГ,й);
		НовЗапись = ТаблицаПроцентовПриходаДенег.Добавить();
		НовЗапись.МесяцРасчета = ТекМесяц;
		//ЗапросПродажиНГ.УстановитьПараметр("Дата1",НачалоМесяца(ТекМесяц));
		//ЗапросПродажиНГ.УстановитьПараметр("Дата2",КонецМесяца(ТекМесяц));
        Запрос.УстановитьПараметр("Дата1",НачалоМесяца(ТекМесяц));
		Запрос.УстановитьПараметр("Дата2",КонецМесяца(ТекМесяц));
		//Запрос.УстановитьПараметр("Дата11",НачалоМесяца(ДобавитьМесяц(НачалоМесяца(ТекМесяц),-12)));
		//Запрос.УстановитьПараметр("Дата22",КонецМесяца(ДобавитьМесяц(КонецМесяца(ТекМесяц),1)));

		//ВыбПродажи = ЗапросПродажиНГ.Выполнить().Выгрузить();
		ВыбОплаты = Запрос.Выполнить().Выгрузить();
		
		СуммаПродаж = ВыбОплаты.Итог("СуммаВзаиморасчетовРасход");
		
		для каждого стр из ВыбОплаты Цикл
			Если стр.ПериодМесяц = ПериодаПГ1 Тогда
				НовЗапись.Месяц1 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ2 Тогда
				НовЗапись.Месяц2 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ3 Тогда
				НовЗапись.Месяц3 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ4 Тогда
				НовЗапись.Месяц4 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ5 Тогда
				НовЗапись.Месяц5 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ6 Тогда
				НовЗапись.Месяц6 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
				
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ7 Тогда
				НовЗапись.Месяц7 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ8 Тогда
				НовЗапись.Месяц8 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ9 Тогда
				НовЗапись.Месяц9 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ10 Тогда
				НовЗапись.Месяц10 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ11 Тогда
				НовЗапись.Месяц11 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			ИначеЕсли стр.ПериодМесяц = ПериодаПГ12 Тогда
				НовЗапись.Месяц12 = стр.СуммаВзаиморасчетовРасход/СуммаПродаж;
			
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	
	Возврат ТаблицаПроцентовПриходаДенег;
КонецФункции

Процедура КоманднаяПанель3РаспределениеПоПроцентам(Кнопка)
	// Вставить содержимое обработчика.
	
	/////Пока отложено
	
	
	Текущаястрока = ЭлементыФормы.ПланПродаж.ТекущиеДанные;
	
	ФормаПроцентов = ПолучитьФорму("ФормаПроцентов");
	//КомментарийПроценты = "";
	//Если (ПланПродаж.Количество()<>0) Тогда
	//	КомментарийПроценты = Текущаястрока.КомментарийФормула;
	//КонецЕсли;	
	//ФормаПроцентов.Комментарий = КомментарийПроценты;
	ФормаПроцентов.ПериодПланирования = ПериодПланирования;
	ФормаПроцентов.таблицаСуммИПроцентов = таблицаСуммИПроцентов;

	ТаблицаСуммИПроцентов = ФормаПроцентов.Открытьмодально();
	
	Если ЗначениеЗаполнено(ТаблицаСуммИПроцентов) Тогда 
		Месяц1Процент = ТаблицаСуммИПроцентов[0].Сумма;
		Месяц2Процент = ТаблицаСуммИПроцентов[1].Сумма;
		Месяц3Процент = ТаблицаСуммИПроцентов[2].Сумма;
		Месяц4Процент = ТаблицаСуммИПроцентов[3].Сумма;
		Месяц5Процент = ТаблицаСуммИПроцентов[4].Сумма;
		Месяц6Процент = ТаблицаСуммИПроцентов[5].Сумма;
		Месяц7Процент = ТаблицаСуммИПроцентов[6].Сумма;
		Месяц8Процент = ТаблицаСуммИПроцентов[7].Сумма;
		Месяц9Процент = ТаблицаСуммИПроцентов[8].Сумма;
		Месяц10Процент = ТаблицаСуммИПроцентов[9].Сумма;
		Месяц11Процент = ТаблицаСуммИПроцентов[10].Сумма;
		Месяц12Процент = ТаблицаСуммИПроцентов[11].Сумма;
		
		СуммаРаспр 	  = ТаблицаСуммИПроцентов[12].Сумма;
		
		СуммаОтОбщего = Окр(СуммаРаспр/ПланПродаж.Количество());
		
		НачальноеКоличество = 0;
		Для каждого СтрХ из ПланПродаж Цикл
			
			Отбор = Новый Структура;
			Отбор.Вставить("Разрез1",СтрХ.Разрез1);
			Отбор.Вставить("Разрез2",СтрХ.Разрез2);
			М = Склад.НайтиСтроки(Отбор);
			
			Если М.Количество()=0 Тогда 
				НачальноеКоличество = 0;
			Иначе
				НачальноеКоличество = М[0].КоличествоНачалоПериода;	
			КонецЕсли;
			
			Отбор = Новый Структура;
			Отбор.Вставить("Разрез1",СтрХ.Разрез1);
			Отбор.Вставить("Разрез2",СтрХ.Разрез2);
			М = Поступления.НайтиСтроки(Отбор);
			
			Если М.Количество()=0 Тогда 
				КоличествоХ = НачальноеКоличество;
			Иначе 
				КоличествоХ = НачальноеКоличество + М[0].Месяц1Количество + М[0].Месяц2Количество + М[0].Месяц3Количество + М[0].Месяц4Количество + М[0].Месяц5Количество + М[0].Месяц6Количество
				+ М[0].Месяц10Количество + М[0].Месяц7Количество + М[0].Месяц8Количество + М[0].Месяц9Количество + М[0].Месяц11Количество + М[0].Месяц12Количество;
			КонецЕсли;
			
			СтрХ.Месяц1Количество = КоличествоХ*Месяц1Процент/100;
			СтрХ.Месяц2Количество = КоличествоХ*Месяц2Процент/100;
			СтрХ.Месяц3Количество = КоличествоХ*Месяц3Процент/100;
			СтрХ.Месяц4Количество = КоличествоХ*Месяц4Процент/100;
			СтрХ.Месяц5Количество = КоличествоХ*Месяц5Процент/100;
			СтрХ.Месяц6Количество = КоличествоХ*Месяц6Процент/100;
			
			СтрХ.Месяц7Количество = КоличествоХ*Месяц7Процент/100;
			СтрХ.Месяц8Количество = КоличествоХ*Месяц8Процент/100;
			СтрХ.Месяц9Количество = КоличествоХ*Месяц9Процент/100;
			СтрХ.Месяц10Количество = КоличествоХ*Месяц10Процент/100;
			СтрХ.Месяц11Количество = КоличествоХ*Месяц11Процент/100;
			СтрХ.Месяц12Количество = КоличествоХ*Месяц12Процент/100;
			
			//КомментарийФормула = "№1-" + ТаблицаСуммИПроцентов[0].Процент + "~1";
			//КомментарийФормула = КомментарийФормула + "№2-" + ТаблицаСуммИПроцентов[1].Процент + "~2";
			//КомментарийФормула = КомментарийФормула + "№3-" + ТаблицаСуммИПроцентов[2].Процент + "~3";
			//КомментарийФормула = КомментарийФормула + "№4-" + ТаблицаСуммИПроцентов[3].Процент + "~4";
			//КомментарийФормула = КомментарийФормула + "№5-" + ТаблицаСуммИПроцентов[4].Процент + "~5";
			//КомментарийФормула = КомментарийФормула + "№6-" + ТаблицаСуммИПроцентов[5].Процент + "~6";
			
			//СтрХ.КомментарийФормула = КомментарийФормула;
			
		КонеЦЦикла;
		
		
	КонецЕсли;
	
	ПересчетВсего();
	
КонецПроцедуры

Процедура СкладСредняяЦенаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
//	Если ЗначениеЗаполнено(ЭлементыФормы.Склад.ТекущиеДанные) и глТекущийПользователь=Справочники.Пользователи.НайтиПоКоду("Никитин                                           ") Тогда 
		ЭлементыФормы.Склад.ТекущиеДанные.СебестоимостьНаНачалоПериода = ЭлементыФормы.Склад.ТекущиеДанные.СредняяЦена*ЭлементыФормы.Склад.ТекущиеДанные.ИтогоНачалоПериода;
		ПересчетВсего();
//	КонецЕсли;
КонецПроцедуры

Функция ПолучитьДебиторкуПоРазрезам(Разрез1,Разрез2=неопределено)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПЗ.НоменклатурнаяГруппа,
	                      |	ПЗ.Производитель,
	                      |	ПЗ.Дебиторка как Дебиторка,
	                      |	ВЫБОР
	                      |		КОГДА ПЗ.ПервыйМесяц > 0
	                      |				И ПЗ.Дебиторка > ПЗ.ПервыйМесяц
	                      |			ТОГДА (ПЗ.Дебиторка - ПЗ.ПервыйМесяц) / ПЗ.Дебиторка * 100
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК Процент1,
	                      |	ВЫБОР
	                      |		КОГДА ПЗ.ВторойМесяц > 0
	                      |				И ПЗ.ПервыйМесяц > ПЗ.ВторойМесяц
	                      |			ТОГДА (ПЗ.ПервыйМесяц - ПЗ.ВторойМесяц) / ПЗ.Дебиторка * 100
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК Процент2,
	                      |	ВЫБОР
	                      |		КОГДА ПЗ.ТретийМесяц > 0
	                      |				И ПЗ.ВторойМесяц > ПЗ.ТретийМесяц
	                      |			ТОГДА (ПЗ.ВторойМесяц - ПЗ.ТретийМесяц) / ПЗ.Дебиторка * 100
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК Процент3,
	                      |	ВЫБОР
	                      |		КОГДА ПЗ.ЧетвертыйМесяц > 0
	                      |				И ПЗ.ТретийМесяц > ПЗ.ЧетвертыйМесяц
	                      |			ТОГДА (ПЗ.ТретийМесяц - ПЗ.ЧетвертыйМесяц) / ПЗ.Дебиторка * 100
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК Процент4,
	                      |	ВЫБОР
	                      |		КОГДА ПЗ.ПятыйМесяц > 0
	                      |				И ПЗ.ЧетвертыйМесяц > ПЗ.ПятыйМесяц
	                      |			ТОГДА (ПЗ.ЧетвертыйМесяц - ПЗ.ПятыйМесяц) / ПЗ.Дебиторка * 100
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК Процент5,
	                      |	ВЫБОР
	                      |		КОГДА ПЗ.ШестойМесяц > 0
	                      |				И ПЗ.ПятыйМесяц > ПЗ.ШестойМесяц
	                      |			ТОГДА (ПЗ.ПятыйМесяц - ПЗ.ШестойМесяц) / ПЗ.Дебиторка * 100
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК Процент6
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		ПЗ.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                      |		ПЗ.Номенклатура.Производитель КАК Производитель,
	                      |		СУММА(ВзаиморасчетыНП.СуммаУпрОстаток) КАК Дебиторка,
	                      |		СУММА(Взаиморасчеты1.СуммаУпрОстаток) КАК ПервыйМесяц,
	                      |		СУММА(Взаиморасчеты2.СуммаУпрОстаток) КАК ВторойМесяц,
	                      |		СУММА(Взаиморасчеты3.СуммаУпрОстаток) КАК ТретийМесяц,
	                      |		СУММА(Взаиморасчеты4.СуммаУпрОстаток) КАК ЧетвертыйМесяц,
	                      |		СУММА(Взаиморасчеты5.СуммаУпрОстаток) КАК ПятыйМесяц,
	                      |		СУММА(Взаиморасчеты6.СуммаУпрОстаток) КАК ШестойМесяц
	                      |	ИЗ
	                      |		Документ.ЗаказПокупателя.Товары КАК ПЗ
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаНачПер, ) КАК ВзаиморасчетыНП
	                      |			ПО (ВзаиморасчетыНП.Сделка = ПЗ.Ссылка)
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата1, ) КАК Взаиморасчеты1
	                      |			ПО (Взаиморасчеты1.Сделка = ПЗ.Ссылка)
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата2, ) КАК Взаиморасчеты2
	                      |			ПО (Взаиморасчеты2.Сделка = ПЗ.Ссылка)
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата3, ) КАК Взаиморасчеты3
	                      |			ПО (Взаиморасчеты3.Сделка = ПЗ.Ссылка)
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата4, ) КАК Взаиморасчеты4
	                      |			ПО (Взаиморасчеты4.Сделка = ПЗ.Ссылка)
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата5, ) КАК Взаиморасчеты5
	                      |			ПО (Взаиморасчеты5.Сделка = ПЗ.Ссылка)
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата6, ) КАК Взаиморасчеты6
	                      |			ПО (Взаиморасчеты6.Сделка = ПЗ.Ссылка)
	                      |	ГДЕ
	                      |		ПЗ.Ссылка.Проведен
	                      |		И ВзаиморасчетыНП.СуммаУпрОстаток > 0
	                      |		И ВзаиморасчетыНП.СуммаУпрОстаток > Взаиморасчеты6.СуммаУпрОстаток
	                      |		И ПЗ.Номенклатура.НоменклатурнаяГруппа = &НГ
	                      |		И ПЗ.Номенклатура.Производитель = &Пр
	                      |	
	                      |	СГРУППИРОВАТЬ ПО
	                      |		ПЗ.Номенклатура.НоменклатурнаяГруппа,
	                      |		ПЗ.Номенклатура.Производитель) КАК ПЗ");
						  
	Если не ЗначениеЗаполнено(Разрез2) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И ПЗ.Номенклатура.Производитель = &Пр","");								  
	Иначе 
		Запрос.УстановитьПараметр("Пр",Разрез2);
	КонецЕсли;						 
	
	НачПериода = НачалоДня(Дата(Год,?(Полугодие=1,1,6),1));
	НачПериодаПГ = ДобавитьМесяц(НачПериода,-12);
		
	Запрос.УстановитьПараметр("НГ",Разрез1);
	Запрос.УстановитьПараметр("ДатаНачПер",НачПериодаПГ);
	Запрос.УстановитьПараметр("Дата1",ДобавитьМесяц(НачПериодаПГ,1));
	Запрос.УстановитьПараметр("Дата2",ДобавитьМесяц(НачПериодаПГ,2));
	Запрос.УстановитьПараметр("Дата3",ДобавитьМесяц(НачПериодаПГ,3));
	Запрос.УстановитьПараметр("Дата4",ДобавитьМесяц(НачПериодаПГ,4));
	Запрос.УстановитьПараметр("Дата5",ДобавитьМесяц(НачПериодаПГ,5));
	Запрос.УстановитьПараметр("Дата6",ДобавитьМесяц(НачПериодаПГ,6));
	
	Выб = Запрос.Выполнить().Выгрузить();

	ТаблицаПроцентов = новый массив;
	
	Если (Выб.Количество()>0) Тогда 
		ТаблицаПроцентов.Добавить(Выб[0].Процент1);
		ТаблицаПроцентов.Добавить(Выб[0].Процент2);
		ТаблицаПроцентов.Добавить(Выб[0].Процент3);
		ТаблицаПроцентов.Добавить(Выб[0].Процент4);
		ТаблицаПроцентов.Добавить(Выб[0].Процент5);
		ТаблицаПроцентов.Добавить(Выб[0].Процент6);
		ТаблицаПроцентов.Добавить(Выб[0].Дебиторка);
	Иначе 
		ТаблицаПроцентов.Добавить(0);
		ТаблицаПроцентов.Добавить(0);
		ТаблицаПроцентов.Добавить(0);
		ТаблицаПроцентов.Добавить(0);
		ТаблицаПроцентов.Добавить(0);
		ТаблицаПроцентов.Добавить(0);
		ТаблицаПроцентов.Добавить(0);
	КонецЕсли;
	
	Возврат ТаблицаПроцентов;
КонецФункции

Функция ПолучитьПроцентОплатПоНГЗАпериод(Разрез1,Разрез2=неопределено,ДатаНач,ДатаКон)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПЗ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                      |	ПЗ.Производитель КАК Производитель,
	                      |	СРЕДНЕЕ(ПЗ.Процент1) КАК Процент1,
	                      |	СРЕДНЕЕ(ПЗ.Процент2) КАК Процент2,
	                      |	СРЕДНЕЕ(ПЗ.Процент3) КАК Процент3,
	                      |	СРЕДНЕЕ(ПЗ.Процент4) КАК Процент4,
	                      |	СРЕДНЕЕ(ПЗ.Процент5) КАК Процент5,
	                      |	СРЕДНЕЕ(ПЗ.Процент6) КАК Процент6
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		ЗаказыНГ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                      |		ЗаказыНГ.Производитель КАК Производитель,
	                      |		ВЫБОР
	                      |			КОГДА ПЗ.Процент1 < 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ ПЗ.Процент1
	                      |		КОНЕЦ КАК Процент1,
	                      |		ВЫБОР
	                      |			КОГДА ПЗ.Процент2 < 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ ПЗ.Процент2
	                      |		КОНЕЦ КАК Процент2,
	                      |		ВЫБОР
	                      |			КОГДА ПЗ.Процент3 < 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ ПЗ.Процент3
	                      |		КОНЕЦ КАК Процент3,
	                      |		ВЫБОР
	                      |			КОГДА ПЗ.Процент4 < 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ ПЗ.Процент4
	                      |		КОНЕЦ КАК Процент4,
	                      |		ВЫБОР
	                      |			КОГДА ПЗ.Процент5 < 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ ПЗ.Процент5
	                      |		КОНЕЦ КАК Процент5,
	                      |		ВЫБОР
	                      |			КОГДА ПЗ.Процент6 < 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ ПЗ.Процент6
	                      |		КОНЕЦ КАК Процент6
	                      |	ИЗ
	                      |		(ВЫБРАТЬ
	                      |			РеализацияТоваровУслугТовары.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                      |			РеализацияТоваровУслугТовары.Номенклатура.Производитель КАК Производитель,
	                      |			РеализацияТоваровУслугТовары.Ссылка.Сделка КАК Сделка
	                      |		ИЗ
	                      |			Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	                      |		ГДЕ
	                      |			РеализацияТоваровУслугТовары.Ссылка.Проведен
	                      |			И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	                      |			И РеализацияТоваровУслугТовары.Ссылка.Сделка ССЫЛКА Документ.ЗаказПокупателя
	                      |			И РеализацияТоваровУслугТовары.Ссылка.Сделка <> &Пусто) КАК ЗаказыНГ
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |				ПЗ.Ссылка КАК Ссылка,
	                      |				ПЗ.Сделка КАК Сделка,
	                      |				ПЗ.СуммаДокумента КАК СуммаДокумента,
	                      |				(ПЗ.СуммаДокумента - ПЗ.СуммаВзаиморасчетовОстаток1) / ПЗ.СуммаДокумента * 100 КАК Процент1,
	                      |				(ПЗ.СуммаВзаиморасчетовОстаток1 - ПЗ.СуммаВзаиморасчетовОстаток2) / ПЗ.СуммаДокумента * 100 КАК Процент2,
	                      |				(ПЗ.СуммаВзаиморасчетовОстаток2 - ПЗ.СуммаВзаиморасчетовОстаток3) / ПЗ.СуммаДокумента * 100 КАК Процент3,
	                      |				(ПЗ.СуммаВзаиморасчетовОстаток3 - ПЗ.СуммаВзаиморасчетовОстаток4) / ПЗ.СуммаДокумента * 100 КАК Процент4,
	                      |				(ПЗ.СуммаВзаиморасчетовОстаток4 - ПЗ.СуммаВзаиморасчетовОстаток5) / ПЗ.СуммаДокумента * 100 КАК Процент5,
	                      |				(ПЗ.СуммаВзаиморасчетовОстаток5 - ПЗ.СуммаВзаиморасчетовОстаток6) / ПЗ.СуммаДокумента * 100 КАК Процент6
	                      |			ИЗ
	                      |				(ВЫБРАТЬ
	                      |					ОбщиеДанные.Ссылка КАК Ссылка,
	                      |					ОбщиеДанные.Сделка КАК Сделка,
	                      |					ОбщиеДанные.СуммаДокумента КАК СуммаДокумента,
	                      |					Период1.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток1,
	                      |					Период2.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток2,
	                      |					Период3.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток3,
	                      |					Период4.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток4,
	                      |					Период5.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток5,
	                      |					Период6.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток6
	                      |				ИЗ
	                      |					(ВЫБРАТЬ
	                      |						РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	                      |						РеализацияТоваровУслуг.Сделка КАК Сделка,
	                      |						РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента
	                      |					ИЗ
	                      |						Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	                      |					ГДЕ
	                      |						РеализацияТоваровУслуг.Ссылка.Проведен
	                      |						И РеализацияТоваровУслуг.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	                      |						И РеализацияТоваровУслуг.Сделка ССЫЛКА Документ.ЗаказПокупателя
	                      |						И РеализацияТоваровУслуг.Сделка <> &Пусто) КАК ОбщиеДанные
	                      |						ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |							ВзаиморасчетыСконтрагентамиОстатки.Сделка КАК Сделка,
	                      |							ВзаиморасчетыСконтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	                      |						ИЗ
	                      |							РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаН1, ) КАК ВзаиморасчетыСконтрагентамиОстатки) КАК Период1
	                      |						ПО ОбщиеДанные.Сделка = Период1.Сделка
	                      |						ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |							ВзаиморасчетыСконтрагентамиОстатки.Сделка КАК Сделка,
	                      |							ВзаиморасчетыСконтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	                      |						ИЗ
	                      |							РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаН2, ) КАК ВзаиморасчетыСконтрагентамиОстатки) КАК Период2
	                      |						ПО ОбщиеДанные.Сделка = Период2.Сделка
	                      |						ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |							ВзаиморасчетыСконтрагентамиОстатки.Сделка КАК Сделка,
	                      |							ВзаиморасчетыСконтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	                      |						ИЗ
	                      |							РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаН3, ) КАК ВзаиморасчетыСконтрагентамиОстатки) КАК Период3
	                      |						ПО ОбщиеДанные.Сделка = Период3.Сделка
	                      |						ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |							ВзаиморасчетыСконтрагентамиОстатки.Сделка КАК Сделка,
	                      |							ВзаиморасчетыСконтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	                      |						ИЗ
	                      |							РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаН4, ) КАК ВзаиморасчетыСконтрагентамиОстатки) КАК Период4
	                      |						ПО ОбщиеДанные.Сделка = Период4.Сделка
	                      |						ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |							ВзаиморасчетыСконтрагентамиОстатки.Сделка КАК Сделка,
	                      |							ВзаиморасчетыСконтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	                      |						ИЗ
	                      |							РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаН5, ) КАК ВзаиморасчетыСконтрагентамиОстатки) КАК Период5
	                      |						ПО ОбщиеДанные.Сделка = Период5.Сделка
	                      |						ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |							ВзаиморасчетыСконтрагентамиОстатки.Сделка КАК Сделка,
	                      |							ВзаиморасчетыСконтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	                      |						ИЗ
	                      |							РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаН6, ) КАК ВзаиморасчетыСконтрагентамиОстатки) КАК Период6
	                      |						ПО ОбщиеДанные.Сделка = Период6.Сделка) КАК ПЗ) КАК ПЗ
	                      |			ПО ЗаказыНГ.Сделка = ПЗ.Сделка) КАК ПЗ
	                      | Где НоменклатурнаяГруппа=&НГ и Производитель=&Производитель
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПЗ.НоменклатурнаяГруппа,
	                      |	ПЗ.Производитель");
						  
	Если Не ЗначениеЗаполнено(Разрез2) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"и Производитель=&Производитель","");							  
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата1",ДатаНач);
	Запрос.УстановитьПараметр("Дата2",ДатаКон);
	Запрос.УстановитьПараметр("ДатаН1",ДатаКон+1);
	Запрос.УстановитьПараметр("ДатаН2",ДобавитьМесяц(ДатаКон+1,1));
	Запрос.УстановитьПараметр("ДатаН3",ДобавитьМесяц(ДатаКон+1,2));
	Запрос.УстановитьПараметр("ДатаН4",ДобавитьМесяц(ДатаКон+1,3));
	Запрос.УстановитьПараметр("ДатаН5",ДобавитьМесяц(ДатаКон+1,4));
	Запрос.УстановитьПараметр("ДатаН6",ДобавитьМесяц(ДатаКон+1,5));
	
	Запрос.УстановитьПараметр("НГ",Разрез1);
	Запрос.УстановитьПараметр("Производитель",Разрез2);
	Запрос.УстановитьПараметр("Пусто",Документы.ЗаказПокупателя.ПустаяСсылка());
	
	Выб = Запрос.Выполнить().Выбрать();
	
	МассивПроцентов = Новый Массив;
	МассивПроцентов.Добавить(0);
	МассивПроцентов.Добавить(0);
	МассивПроцентов.Добавить(0);
	МассивПроцентов.Добавить(0);
	МассивПроцентов.Добавить(0);
	МассивПроцентов.Добавить(0);
	
	Если Выб.Следующий() Тогда 
		МассивПроцентов[0]=Выб.Процент1;
		МассивПроцентов[1]=Выб.Процент2;
		МассивПроцентов[2]=Выб.Процент3;
		МассивПроцентов[3]=Выб.Процент4;
		МассивПроцентов[4]=Выб.Процент5;
		МассивПроцентов[5]=Выб.Процент6;
	КонецЕсли;
	
	Возврат МассивПроцентов;
КонецФункции

//Процедура ПоступленияМесяц0КоличествоПриИзменении(Элемент)
//	// Вставить содержимое обработчика.
//	ПересчетВсего();
//КонецПроцедуры

//Процедура ПланПродажМесяц0КоличествоПриИзменении(Элемент)
//	// Вставить содержимое обработчика.
//	ПересчетВсего();
//КонецПроцедуры

Функция РассчитатьИтогоКоличествоСклад()
	
	ОбщКоличество = 0;
	Для каждого Стрх из Склад Цикл
		Для й = 1 по 12 Цикл
			ОбщКоличество = ОбщКоличество + Стрх["Месяц"+й+"Количество"];
		КонеЦЦикла;	
	КонецЦИкла;
	Возврат ОбщКоличество;
КонецФункции

Функция РассчитатьИтогоСуммаСклад()
	
	ОбщСумма = 0;
	Для каждого Стрх из Склад Цикл
		Для й = 1 по 12 Цикл
			ОбщСумма = ОбщСумма + Стрх["Месяц"+й+"Сумма"];
		КонеЦЦикла;	
	КонецЦИкла;
	Возврат ОбщСумма;	
КонецФункции

Функция РассчитатьИтогоКоличествоПоступления()
	
	ОбщКоличество = 0;
	Для каждого Стрх из Поступления Цикл
		Для й = 1 по 12 Цикл
			ОбщКоличество = ОбщКоличество + Стрх["Месяц"+й+"Количество"];
		КонеЦЦикла;	
	КонецЦИкла;
	Возврат ОбщКоличество;
КонецФункции

Функция РассчитатьИтогоСуммаПоступления()
	
	ОбщСумма = 0;
	Для каждого Стрх из Поступления Цикл
		Для й = 1 по 12 Цикл
			ОбщСумма = ОбщСумма + Стрх["Месяц"+й+"Сумма"];
		КонеЦЦикла;	
	КонецЦИкла;
	Возврат ОбщСумма;	
КонецФункции

Функция РассчитатьИтогоКоличествоПродажи()
	
	ОбщКоличество = 0;
	Для каждого Стрх из ПланПродаж Цикл
		Для й = 1 по 12 Цикл
			ОбщКоличество = ОбщКоличество + Стрх["Месяц"+й+"Количество"];
		КонеЦЦикла;	
	КонецЦИкла;
	Возврат ОбщКоличество;
КонецФункции

Функция РассчитатьИтогоСуммаПродажи()
	
	ОбщСумма = 0;
	Для каждого Стрх из ПланПродаж Цикл
		Для й = 1 по 12 Цикл
			ОбщСумма = ОбщСумма + Стрх["Месяц"+й+"Сумма"];
		КонеЦЦикла;	
	КонецЦИкла;
	Возврат ОбщСумма;	
КонецФункции

Функция РассчитатьИтогоСуммаОплатаПоставщикам()
	
	ОбщСумма = 0;
	Для каждого Стрх из ОплатаПоставщикам Цикл
		Для й = 1 по 12 Цикл
			ОбщСумма = ОбщСумма + Стрх["Месяц"+й+"Сумма"];
		КонеЦЦикла;	
	КонецЦИкла;
	Возврат ОбщСумма;	
КонецФункции

Функция РассчитатьИтогоСуммаПриходДенег()
	
	ОбщСумма = 0;
	Для каждого Стрх из ПриходДенег Цикл
		Для й = 1 по 12 Цикл
			ОбщСумма = ОбщСумма + Стрх["Месяц"+й+"Сумма"];
		КонеЦЦикла;	
	КонецЦИкла;
	Возврат ОбщСумма;	
КонецФункции


Процедура КоманднаяПанель1ДействиеСкрытьКоличество(Кнопка)
	Для сч=0 по ЭлементыФормы.Склад.Колонки.Количество()-1 Цикл
	Колонка = ЭлементыФормы.Склад.Колонки[сч];
	Если Найти(Колонка.Имя,"Количество")>0 Тогда
		   Колонка.Видимость= Не Колонка.Видимость;
    КонецЕсли;		
КонецЦикла;
   Для сч=0 по ЭлементыФормы.Поступления.Колонки.Количество()-1 Цикл
	Колонка = ЭлементыФормы.Поступления.Колонки[сч];
	Если Найти(Колонка.Имя,"Количество")>0 Тогда
		   Колонка.Видимость= Не Колонка.Видимость;
    КонецЕсли;		
КонецЦикла;

 Для сч=0 по ЭлементыФормы.ПланПродаж.Колонки.Количество()-1 Цикл
	Колонка = ЭлементыФормы.ПланПродаж.Колонки[сч];
	Если Найти(Колонка.Имя,"Количество")>0 Тогда
		   Колонка.Видимость= Не Колонка.Видимость;
    КонецЕсли;		
	КонецЦикла;

КонецПроцедуры


Процедура КоманднаяПанель1Перезаполнить(Кнопка)
	//Если НЕ РольДоступна("ПолныеПрава") Тогда
	//	Сообщить("Доступ запрещен!");
	//	Возврат;
	//КонецЕсли;	
	//Для каждого строка Из Склад Цикл
	//		строка.КоличествоНачалоПериода=строка.Месяц0Количество_удал;
	//		строка.СебестоимостьНаНачалоПериода=строка.Месяц0Сумма_удал;
	//КонецЦикла;	
	ПересчетСклада();

КонецПроцедуры


Процедура КоманднаяПанель2РаспределитьПоПроцентам(Кнопка)
	
	////////////////Пока отложено
	
	Текущаястрока = ЭлементыФормы.ПланПродаж.ТекущиеДанные;
	
	ФормаПроцентов = ПолучитьФорму("ФормаПроцентов");
	
    ФормаПроцентов.ПериодПланирования = ПериодПланирования;
	ФормаПроцентов.таблицаСуммИПроцентов = таблицаСуммИПроцентов;
	ТаблицаСуммИПроцентов = ФормаПроцентов.Открытьмодально();
	
	Если ЗначениеЗаполнено(ТаблицаСуммИПроцентов) Тогда 
		Месяц1Процент = ТаблицаСуммИПроцентов[0].Сумма;
		Месяц2Процент = ТаблицаСуммИПроцентов[1].Сумма;
		Месяц3Процент = ТаблицаСуммИПроцентов[2].Сумма;
		Месяц4Процент = ТаблицаСуммИПроцентов[3].Сумма;
		Месяц5Процент = ТаблицаСуммИПроцентов[4].Сумма;
		Месяц6Процент = ТаблицаСуммИПроцентов[5].Сумма;
		
		Месяц7Процент = ТаблицаСуммИПроцентов[6].Сумма;
		Месяц8Процент = ТаблицаСуммИПроцентов[7].Сумма;
		Месяц9Процент = ТаблицаСуммИПроцентов[8].Сумма;
		Месяц10Процент = ТаблицаСуммИПроцентов[9].Сумма;
		Месяц11Процент = ТаблицаСуммИПроцентов[10].Сумма;
		Месяц12Процент = ТаблицаСуммИПроцентов[11].Сумма;
		
		СуммаРаспр 	  = ТаблицаСуммИПроцентов[12].Сумма;
		
		СуммаОтОбщего = Окр(СуммаРаспр/Поступления.Количество());
		
		НачальноеКоличество = 0;
		Для каждого СтрХ из Поступления Цикл
			
			КоличествоХ = СтрХ.РаспределитьКоличество;
			
			
			СтрХ.Месяц1Количество = КоличествоХ*Месяц1Процент/100;
			СтрХ.Месяц2Количество = КоличествоХ*Месяц2Процент/100;
			СтрХ.Месяц3Количество = КоличествоХ*Месяц3Процент/100;
			СтрХ.Месяц4Количество = КоличествоХ*Месяц4Процент/100;
			СтрХ.Месяц5Количество = КоличествоХ*Месяц5Процент/100;
			СтрХ.Месяц6Количество = КоличествоХ*Месяц6Процент/100;
			
			СтрХ.Месяц7Количество = КоличествоХ*Месяц7Процент/100;
			СтрХ.Месяц8Количество = КоличествоХ*Месяц8Процент/100;
			СтрХ.Месяц9Количество = КоличествоХ*Месяц9Процент/100;
			СтрХ.Месяц10Количество = КоличествоХ*Месяц10Процент/100;
			СтрХ.Месяц11Количество = КоличествоХ*Месяц11Процент/100;
			СтрХ.Месяц12Количество = КоличествоХ*Месяц12Процент/100;
			
			//КомментарийФормула = "№1-" + ТаблицаСуммИПроцентов[0].Процент + "~1";
			//КомментарийФормула = КомментарийФормула + "№2-" + ТаблицаСуммИПроцентов[1].Процент + "~2";
			//КомментарийФормула = КомментарийФормула + "№3-" + ТаблицаСуммИПроцентов[2].Процент + "~3";
			//КомментарийФормула = КомментарийФормула + "№4-" + ТаблицаСуммИПроцентов[3].Процент + "~4";
			//КомментарийФормула = КомментарийФормула + "№5-" + ТаблицаСуммИПроцентов[4].Процент + "~5";
			//КомментарийФормула = КомментарийФормула + "№6-" + ТаблицаСуммИПроцентов[5].Процент + "~6";
			//СтрХ.КомментарийФормула = КомментарийФормула;			
		КонеЦЦикла;
		
		
	КонецЕсли;
	
	ПересчетВсего();

КонецПроцедуры


//Процедура КоманднаяПанель2ПеренестиНомГр(Кнопка)
//	Поступления.Очистить();
//	Для каждого стр из склад Цикл
//		НовСтрока = Поступления.Добавить();
//		Новстрока.Менеджер = стр.Менеджер;
//		Новстрока.Разрез1 = стр.Разрез1;
//		Новстрока.Разрез2 = стр.Разрез2;
//	КонецЦикла;	
//КонецПроцедуры


Процедура КоманднаяПанель3ПеренестиНомГр(Кнопка)
	ПланПродаж.Очистить();
	Для каждого стр из склад Цикл
		НовСтрока = ПланПродаж.Добавить();
		Новстрока.Менеджер = стр.Менеджер;
		Новстрока.Разрез1 = стр.Разрез1;
		Новстрока.Разрез2 = стр.Разрез2;
	КонецЦикла;
КонецПроцедуры


Процедура КоманднаяПанель4ЗаполнитьИсходныеДанные(Кнопка)
	ОплатаПоставщикам.Очистить();
	Для каждого стр из склад Цикл
		НовСтрока = ОплатаПоставщикам.Добавить();
		Новстрока.Менеджер = стр.Менеджер;
		Новстрока.Разрез1 = стр.Разрез1;
		Новстрока.Разрез2 = стр.Разрез2;
	КонецЦикла;
КонецПроцедуры


Процедура КоманднаяПанель4ЗаполнениеПоПоставкам(Кнопка)
	
	ОплатаПоставщикам.Очистить();
	Для каждого стр из Склад Цикл
		НовСтрока = ОплатаПоставщикам.Добавить();
		Новстрока.Менеджер = стр.Менеджер;
		Новстрока.Разрез1 = стр.Разрез1;
		Новстрока.Разрез2 = стр.Разрез2;
	КонецЦикла;
	
	//Текущаястрока = ЭлементыФормы.ПланПродаж.ТекущиеДанные;
	
	///Пока отложено
	
	//ФормаФормула = ПолучитьФорму("ФормаФормула");
	//

	//Параметры = ФормаФормула.Открытьмодально();
	//
	//ОплатаПоставщикам.Очистить();
	//
	//Если ЗначениеЗаполнено(Параметры) Тогда 
	//	Для Каждого стр из Поступления Цикл
	//		НовСтр = ОплатаПоставщикам.Добавить();
	//		НовСтр.Менеджер = стр.Менеджер;
	//		НовСтр.Разрез1 = стр.Разрез1;
	//		НовСтр.Разрез2 = стр.Разрез2;
	//		
	//		для сч = 1 по 6 Цикл
	//			НовСтр["Месяц"+Строка(сч)+"Сумма"] = стр["Месяц"+Строка(сч)+"Сумма"] * Параметры.Сразу/100 + ?(сч-параметры.Месяц1<=6 и сч-параметры.Месяц1>=1,стр["Месяц"+строка(сч-параметры.Месяц1)+"Сумма"],0) * Параметры.оплата1/100 + ?(сч-параметры.Месяц1-параметры.Месяц2<=6 и сч-параметры.Месяц1-параметры.Месяц2>=1,стр["Месяц"+Строка(сч-параметры.Месяц1-параметры.Месяц2)+"Сумма"],0) * Параметры.оплата2/100;
	//		КонецЦикла;
	//		
	//		//НовСтр.Остаток = 
	//		
	//		//НовСтрока.Месяц2Сумма = стр.Месяц2Сумма * Параметры.Сразу/100 + ?(Параметры.месяц1 >0,стр.Месяц1Сумма * Параметры.оплата1/100,0);

	//	КонецЦикла;	
	//	
	//	ФормулаПоставщики = Параметры.Формула;
	//КонецЕсли;
	//
	//ПересчетВсего();

КонецПроцедуры


Процедура КоманднаяПанель2ЗаполнитьИсходныеДанные(Кнопка)
	Поступления.Очистить();
	Для каждого стр из склад Цикл
		НовСтрока = Поступления.Добавить();
		Новстрока.Менеджер = стр.Менеджер;
		Новстрока.Разрез1 = стр.Разрез1;
		Новстрока.Разрез2 = стр.Разрез2;
	КонецЦикла;
КонецПроцедуры


Процедура КоманднаяПанель5ЗаполнитьПоФормуле(Кнопка)
	
	ПриходДенег.Очистить();
	Для каждого стр из Склад Цикл
		НовСтрока = ПриходДенег.Добавить();
		Новстрока.Менеджер = стр.Менеджер;
		Новстрока.Разрез1 = стр.Разрез1;
		Новстрока.Разрез2 = стр.Разрез2;
	КонецЦикла;
	
	//Пока отложено
		
	//ФормаФормула = ПолучитьФорму("ФормаФормула");
	//

	//Параметры = ФормаФормула.Открытьмодально();
	//
	//ПриходДенег.Очистить();
	//
	//Если ЗначениеЗаполнено(Параметры) Тогда 
	//	Для Каждого стр из ПланПродаж Цикл
	//		НовСтр = ПриходДенег.Добавить();
	//		НовСтр.Менеджер = стр.Менеджер;
	//		НовСтр.Разрез1 = стр.Разрез1;
	//		НовСтр.Разрез2 = стр.Разрез2;
	//		
	//		для сч = 1 по 6 Цикл
	//			НовСтр["Месяц"+Строка(сч)+"Сумма"] = стр["Месяц"+Строка(сч)+"Сумма"] * Параметры.Сразу/100 + ?(сч-параметры.Месяц1<=6 и сч-параметры.Месяц1>=1,стр["Месяц"+строка(сч-параметры.Месяц1)+"Сумма"],0) * Параметры.оплата1/100 + ?(сч-параметры.Месяц1-параметры.Месяц2<=6 и сч-параметры.Месяц1-параметры.Месяц2>=1,стр["Месяц"+Строка(сч-параметры.Месяц1-параметры.Месяц2)+"Сумма"],0) * Параметры.оплата2/100;
	//		КонецЦикла;
	//		
	//		//НовСтр.Остаток = 
	//		
	//		//НовСтрока.Месяц2Сумма = стр.Месяц2Сумма * Параметры.Сразу/100 + ?(Параметры.месяц1 >0,стр.Месяц1Сумма * Параметры.оплата1/100,0);
	//		ФормулаПродажи = Параметры.Формула;
	//	КонецЦикла;	
	//КонецЕсли;
	//
	//ПересчетВсего();

КонецПроцедуры


Процедура КоманднаяПанель5РасшифроватьПоПрошлому(Кнопка)
	
	ТЧ = ПолучитьПроцентовкуЗаПрошлыйГод(ЭлементыФормы.ПриходДенег.ТекущиеДанные.Разрез1,ЭлементыФормы.ПриходДенег.ТекущиеДанные.Разрез2);
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаРасшифровки");
	Форма.Тч = ТЧ;
	Форма.ПериодПланирования = ПериодПланирования;
	Форма.Открыть();
	
	// Вставить содержимое обработчика.
КонецПроцедуры


Процедура КоманднаяПанель6ЗаполнитьПоФормуле(Кнопка)
	//Бонусы.Очистить();
	Для каждого стр из Бонусы Цикл
		Отбор = Новый Структура;
	    Отбор.Вставить("Разрез1",стр.Разрез1);
		Отбор.Вставить("Разрез2",стр.Разрез2);
		//Отбор.Вставить("Разрез3",стр.Разрез3);
		М = Поступления.НайтиСтроки(Отбор);
		Если м <> неопределено тогда
			если м.Количество() = 1 Тогда
				стр.Месяц1Сумма = м[0].Месяц1Сумма*стр.ПроцентБонуса/100;
				стр.Месяц2Сумма = м[0].Месяц2Сумма*стр.ПроцентБонуса/100;
				стр.Месяц3Сумма = м[0].Месяц3Сумма*стр.ПроцентБонуса/100;
				стр.Месяц4Сумма = м[0].Месяц4Сумма*стр.ПроцентБонуса/100;
				стр.Месяц5Сумма = м[0].Месяц5Сумма*стр.ПроцентБонуса/100;
				стр.Месяц6Сумма = м[0].Месяц6Сумма*стр.ПроцентБонуса/100;
				стр.Месяц7Сумма = м[0].Месяц7Сумма*стр.ПроцентБонуса/100;
				стр.Месяц8Сумма = м[0].Месяц8Сумма*стр.ПроцентБонуса/100;
				стр.Месяц9Сумма = м[0].Месяц9Сумма*стр.ПроцентБонуса/100;
				стр.Месяц10Сумма = м[0].Месяц10Сумма*стр.ПроцентБонуса/100;
				стр.Месяц11Сумма = м[0].Месяц11Сумма*стр.ПроцентБонуса/100;
				стр.Месяц12Сумма = м[0].Месяц12Сумма*стр.ПроцентБонуса/100;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


Процедура КоманднаяПанель6ЗаполнитьИсходные(Кнопка)
	Бонусы.Очистить();
	Для каждого стр из ОплатаПоставщикам Цикл
		НовСтрока = Бонусы.Добавить();
		Новстрока.Менеджер = стр.Менеджер;
		Новстрока.Разрез1 = стр.Разрез1;
		Новстрока.Разрез2 = стр.Разрез2;
	КонецЦикла;
КонецПроцедуры


Процедура БонусыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	//ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = Данныестроки.Месяц1Сумма + Данныестроки.Месяц2Сумма + Данныестроки.Месяц3Сумма + Данныестроки.Месяц4Сумма + Данныестроки.Месяц5Сумма + Данныестроки.Месяц6Сумма;
	//
	//Если (ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "0") Тогда 
	//	ОформлениеСтроки.Ячейки.ИтогоСумма.Значение = "";
	//КонецЕсли;	

	//НовыйСтруктура = новый Структура;
	////НовыйСтруктура.Вставить("Менеджер",ДанныеСтроки.Менеджер);
	//НовыйСтруктура.Вставить("Разрез1",ДанныеСтроки.Разрез1);
	//НовыйСтруктура.Вставить("Разрез2",ДанныеСтроки.Разрез2);
	//
	//СтрокиНай = Поступления.Выгрузить(НовыйСтруктура);
	//Если СтрокиНай <> неопределено тогда
	//	Если СтрокиНай.Количество() > 0 Тогда
	//		ОформлениеСтроки.Ячейки.Остаток.Значение = (СтрокиНай[0].Месяц1Сумма + СтрокиНай[0].Месяц2Сумма + СтрокиНай[0].Месяц3Сумма + СтрокиНай[0].Месяц4Сумма + СтрокиНай[0].Месяц5Сумма + СтрокиНай[0].Месяц6Сумма)*Данныестроки.процентБонуса/100 - ОформлениеСтроки.Ячейки.ИтогоСумма.Значение;
	//	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры


Процедура КоманднаяПанель15ЗаполнитьИсходные(Кнопка)
	
КонецПроцедуры


Процедура КоманднаяПанель15ЗаполнитьПоФормуле(Кнопка)
	
	Услуги.Очистить();
	
	Запрос = Новый Запрос;
	зАПРОС.УстановитьПараметр("ДатаНачала",НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-2)));
	запрос.УстановитьПараметр("ДатаКонца",КонецМесяца(ДобавитьМесяц(ТекущаяДата(),-2)));
	список = новый СписокЗначений;
	Список.Добавить(Справочники.ТипыДоговоров.АрендаДвижимогоИмущества);
	Список.Добавить(Справочники.ТипыДоговоров.АрендаНедвижимогоИмущества);
	запрос.УстановитьПараметр("ТипДоговора",список);
	запрос.УстановитьПараметр("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	запрос.Текст = "ВЫБРАТЬ
	               |	ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход КАК Сумма
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
	               |			&ДатаНачала,
	               |			&ДатаКонца,
	               |			Авто,
	               |			ДоговорКонтрагента.ТипДоговора В (&ТипДоговора)
	               |				И ДоговорКонтрагента.ВидДоговора = &ВидДоговора) КАК ВзаиморасчетыСКонтрагентамиОбороты";
				   
	Рез = Запрос.Выполнить().Выгрузить();
	СуммаЗаМесяц = 0;
	если рез.Количество() > 0 Тогда
		СуммаЗаМесяц = рез[0].Сумма;
	КонецЕсли;
	
	Если СуммаЗаМесяц>0 Тогда
		
		Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
			КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
		иначе
			КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
		КонецЕсли;
				
		Датаии = ПериодПланирования.ДатаНачала;
		НовСтр = Услуги.Добавить();
		для ии = 1 по КоличествоМесяцев Цикл
			НовСтр["Месяц"+Строка(ии)+"Сумма"] = СуммаЗаМесяц;
		КонецЦикла;			
	КонецЕсли;
КонецПроцедуры


Процедура ПолеВвода1ПриИзменении(Элемент)
	УстановитьЗаголовкиКолонок();
КонецПроцедуры


Процедура ДействияФормыВидОперации(Кнопка)
	ВидОперацииФинансовый = Не ВидОперацииФинансовый;
	
	ЭлементыФормы.ПродажиФормулы.Страницы.Склад.Видимость = Не ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.Поступления.Видимость = Не ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.ПланПродаж.Видимость = Не ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.ОплатаПоставщикам.Видимость = Не ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.ПриходДенег.Видимость = Не ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.Бонусы.Видимость = Не ВидОперацииФинансовый;
	
	ЭлементыФормы.ПродажиФормулы.Страницы.Услуги.Видимость = ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.КредитыТекущие.Видимость = ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.КредитыПланируемые.Видимость = ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.ВходящийБаланс.Видимость = ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.Инвестиции.Видимость = ВидОперацииФинансовый;
	ЭлементыФормы.ПродажиФормулы.Страницы.Дивиденды.Видимость = ВидОперацииФинансовый;
	
	ЭлементыФормы.закрытьдокументы.Видимость = ВидОперацииФинансовый;
КонецПроцедуры


Процедура КоманднаяПанель7Действие9(Кнопка)
	
	КредитыТекущие.Очистить();
	
	Запрос = новый Запрос;
	Запрос.УстановитьПараметр("ДатаС",ПериодПланирования.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаПо",ПериодПланирования.ДатаКонца);
	Запрос.УстановитьПараметр("Кредит",Справочники.ТипыДоговоров.Кредит);
	Запрос.УстановитьПараметр("ВидДвижения",Перечисления.ВидыДвиженийПриходРасход.Расход);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента,
	               |	МАКСИМУМ(ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ПериодСекунда) КАК ПериодСекунда,
	               |	СУММА(ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
	               |ПОМЕСТИТЬ ПоследнийРасход
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(
	               |			ДОБАВИТЬКДАТЕ(&ДатаС, МЕСЯЦ, -6),
	               |			&ДатаС,
	               |			Авто,
	               |			,
	               |			ДоговорКонтрагента.ТипДоговора = &Кредит
	               |				И ДоговорКонтрагента.Кр_Транш = ИСТИНА) КАК ВзаиморасчетыСКонтрагентамиОстаткиИОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	               |	-ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК Сумма,
	               |	ДОБАВИТЬКДАТЕ(ПоследнийРасход.ПериодСекунда, ДЕНЬ, ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Кр_СрокТранша) КАК Дата
	               |ПОМЕСТИТЬ Промежуточная
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	               |			&ДатаС,
	               |			ДоговорКонтрагента.ТипДоговора = &Кредит
	               |				И ДоговорКонтрагента.Кр_Транш = ИСТИНА) КАК ВзаиморасчетыСКонтрагентамиОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийРасход КАК ПоследнийРасход
	               |		ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = ПоследнийРасход.ДоговорКонтрагента
	               |ГДЕ
	               |	ДОБАВИТЬКДАТЕ(ПоследнийРасход.ПериодСекунда, ДЕНЬ, ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Кр_СрокТранша) < &ДатаПо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Промежуточная.ДоговорКонтрагента.Владелец КАК Контрагент,
	               |	СУММА(Промежуточная.Сумма) КАК Сумма,
	               |	Промежуточная.Дата,
	               |	Промежуточная.ДоговорКонтрагента
	               |ИЗ
	               |	Промежуточная КАК Промежуточная
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Промежуточная.ДоговорКонтрагента.Владелец,
	               |	Промежуточная.Дата,
	               |	Промежуточная.ДоговорКонтрагента
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	КредитныеЛинии.КредитныйДоговор.Владелец,
	               |	СУММА(КредитныеЛинии.Сумма),
	               |	КредитныеЛинии.Дата,
	               |	КредитныеЛинии.КредитныйДоговор
	               |ИЗ
	               |	РегистрСведений.КредитныеЛинии КАК КредитныеЛинии
	               |ГДЕ
	               |	КредитныеЛинии.Дата МЕЖДУ &ДатаС И &ДатаПо
	               |	И КредитныеЛинии.ВидДвижения = &ВидДвижения
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КредитныеЛинии.КредитныйДоговор.Владелец,
	               |	КредитныеЛинии.Дата,
	               |	КредитныеЛинии.КредитныйДоговор";
				   
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого стр из Результат Цикл	
		Стр.Дата = НачалоМесяца(Стр.Дата);
	КонецЦикла;
	Результат.Свернуть("Контрагент,ДоговорКонтрагента,Дата","Сумма");
	
	Контрагенты = Результат.Скопировать();
	Контрагенты.Свернуть("Контрагент,ДоговорКонтрагента");
	
	
	соответствие = Новый Соответствие;
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	Датаии = ПериодПланирования.ДатаНачала;
	для ии = 1 по КоличествоМесяцев Цикл
		
		соответствие.Вставить(Строка(Формат(Датаии,"ДФ=MM")),Строка(ии));
		
		Датаии = ДобавитьМесяц(Датаии,1);
		
	КонецЦикла;
	
	
	для каждого стр из Контрагенты Цикл
		Отбор = новый Структура;
		Отбор.Вставить("Контрагент",стр.Контрагент);
		Отбор.Вставить("ДоговорКонтрагента",стр.ДоговорКонтрагента);
		
		ПоКонтрагенту = Результат.Скопировать(Отбор);
		
		Если ПоКонтрагенту.Количество()>0 Тогда
			Нов = КредитыТекущие.Добавить();
			для каждого стр11 из ПоКонтрагенту Цикл
				нов.Контрагент = стр.Контрагент;
				нов.ДоговорКонтрагента = стр.ДоговорКонтрагента;
				Нов["Месяц"+соответствие.Получить(Строка(Формат(стр11.Дата,"ДФ=MM")))+"Сумма"] = стр11.Сумма;	
			КонецЦикла;	
		КонецЕсли;	
	КонецЦикла;
				   
				   
КонецПроцедуры


Процедура КоманднаяПанель16Действие9(Кнопка)
	НачальныеОстатки.Очистить();
	СуммаАктив = 0;
	СуммаПассив = 0;
	//Основные средства==========================================================================================
	ЗапросОС = Новый Запрос;
	ЗапросОС.УстановитьПараметр("ДатаКон",ПериодПланирования.датарасчетаНачальныхостатков);
	ЗапросОС.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	
	ЗапросОС.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ПЗ.Стоимость - ПЗ.Амортизация) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА ОС.ВидДвижения = &Приход
		|				ТОГДА ОС.Стоимость
		|			ИНАЧЕ -ОС.Стоимость
		|		КОНЕЦ КАК Стоимость,
		|		ВЫБОР
		|			КОГДА ОС.ВидДвижения = &Приход
		|				ТОГДА ОС.Амортизация
		|			ИНАЧЕ -ОС.Амортизация
		|		КОНЕЦ КАК Амортизация
		|	ИЗ
		|		РегистрНакопления.СтоимостьОС КАК ОС
		|	ГДЕ
		|		ОС.Период <= &ДатаКон
		//|		И ОС.Регистратор.Организация = &Организация
	    | ) КАК ПЗ";
		
	Рез = ЗапросОС.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		СуммаОС = Рез[0].Сумма;
		СуммаАктив = СуммаАктив+СуммаОС; 
	КонецЕсли;
	
	//Внеоборотные активы=======================================================================================
	
	ЗапросВА = Новый Запрос;
	ЗапросВА.УстановитьПараметр("Период",ПериодПланирования.датарасчетаНачальныхостатков);
	
	ЗапросВА.Текст = "ВЫБРАТЬ
	                 |	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК Сумма
	                 |ИЗ
	                 |	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&Период, Номенклатура В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.Номенклатура.ВнеоборотныеАктивы))) КАК ПартииТоваровНаСкладахОстатки";
		
	Рез = ЗапросВА.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		СуммаВА = Рез[0].Сумма;
		СуммаАктив = СуммаАктив+СуммаВА;
	КонецЕсли;
	
	///Материалы================================================================================================
	
	ЗапросМА = Новый Запрос;
	ЗапросМА.УстановитьПараметр("Период",ПериодПланирования.датарасчетаНачальныхостатков);
	
	ЗапросМА.Текст = "ВЫБРАТЬ
	                 |	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК Сумма
	                 |ИЗ
	                 |	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&Период, Номенклатура В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.Номенклатура.Материалы))) КАК ПартииТоваровНаСкладахОстатки";
		
	Рез = ЗапросМА.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		СуммаМА = Рез[0].Сумма;	
		СуммаАктив = СуммаАктив+СуммаМА;
	КонецЕсли;
	
	///Склад====================================================================================================
	
	ЗапросСК = Новый Запрос;
	ЗапросСК.УстановитьПараметр("ДатаНач",ПериодПланирования.датарасчетаНачальныхостатков);
	
	СписокГруппНоменклатуры = Новый СписокЗначений;
    СписокГруппНоменклатуры.Добавить(Справочники.Номенклатура.ВнеоборотныеАктивы);
    СписокГруппНоменклатуры.Добавить(Справочники.Номенклатура.Материалы);
	
	ЗапросСК.УстановитьПараметр("СписокГруппНоменклатуры",СписокГруппНоменклатуры);
	
	ЗапросСК.Текст = "ВЫБРАТЬ
	                 |	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК Сумма
	                 |ИЗ
	                 |	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаНач, НЕ Номенклатура В ИЕРАРХИИ (&СписокГруппНоменклатуры)) КАК ПартииТоваровНаСкладахОстатки";
		
	Рез = ЗапросСК.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		СуммаСК = Рез[0].Сумма;	
		СуммаАктив = СуммаАктив+СуммаСК;
	КонецЕсли;	
	
	//Товары на реализации=====================================================================================
	
	ЗапросТРел = Новый Запрос;
	ЗапросТРел.УстановитьПараметр("ДатаНач",ПериодПланирования.датарасчетаНачальныхостатков);
	
	ЗапросТРел.Текст = "ВЫБРАТЬ
	|	ЕстьNULL(СтоимостьОстаток,0) Сумма
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданные.Остатки(&ДатаНач, ) " ;
		
	Рез = ЗапросТРел.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		СуммаТРел = Рез[0].Сумма;
		СуммаАктив = СуммаАктив+СуммаТРел;
	КонецЕсли;
	
	// Подотчетники=============================================================================================
	
	ЗапросПО = Новый Запрос;
	ЗапросПО.УстановитьПараметр("ДатаКон",ПериодПланирования.датарасчетаНачальныхостатков);
	
	ЗапросПО.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ПЗ.сум) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		таблица.ФизЛицо КАК ФизЛицо,
		|		СУММА(таблица.СуммаУпрОстаток) КАК сум
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ТаблицаРегистра.ФизЛицо КАК ФизЛицо,
		|			ТаблицаРегистра.Валюта КАК Валюта,
		|			ТаблицаРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
		|			СУММА(ТаблицаРегистра.СуммаУпрОстаток) КАК СуммаУпрОстаток
		|		ИЗ
		|			РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Остатки(&ДатаКон, ) КАК ТаблицаРегистра
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТаблицаРегистра.ФизЛицо,
		|			ТаблицаРегистра.Валюта,
		|			ТаблицаРегистра.РасчетныйДокумент) КАК таблица
		|	
		|	СГРУППИРОВАТЬ ПО
		|		таблица.ФизЛицо) КАК ПЗ";
		
	Рез = ЗапросПО.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		СуммаПО = Рез[0].Сумма;
		СуммаАктив = СуммаАктив+СуммаПО;
	КонецЕсли;
	
	//Денежные средства=======================================================================================
	
	ЗапросДС = Новый Запрос;
	ЗапросДС.УстановитьПараметр("ДатаКон",ПериодПланирования.датарасчетаНачальныхостатков);
	ЗапросДС.УстановитьПараметр("руб",Справочники.Валюты.НайтиПоКоду("643"));

	
	ЗапросДС.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ПЗ.Сумма) КАК Сумма,
		|	СУММА(ПЗ.СуммаВал) КАК СуммаВал
		|ИЗ
		|	(ВЫБРАТЬ
		|		Остатки.СуммаУпрОстаток КАК Сумма,
		|		ВЫБОР
		|			КОГДА НЕ Остатки.БанковскийСчетКасса.ВалютаДенежныхСредств = &руб
		|				ТОГДА Остатки.СуммаОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаВал,
		|		Остатки.БанковскийСчетКасса КАК БСК,
		|		1 КАК видрегистра
		|	ИЗ
		|		РегистрНакопления.ДенежныеСредства.Остатки(&ДатаКон, ) КАК Остатки) КАК ПЗ";
		
	Рез = ЗапросДС.Выполнить().Выгрузить();
	
	Отбор = Новый Структура;
	Отбор.Вставить("Валюта",Справочники.Валюты.НайтиПоКоду("840"));
	Срез = РегистрыСведений.КурсыВалют.СрезПоследних(ПериодПланирования.датарасчетаНачальныхостатков,Отбор);
	КурсВ = Срез[0].Курс;
	
	Если Рез.Количество()>0 Тогда
		СуммаДС = Рез[0].Сумма;
		СуммаАктив = СуммаАктив+СуммаДС;
		//СуммаДСВал = Рез[0].СуммаВал;
	КонецЕсли;
	
	//Дебиторка==============================================================================================
	
	ЗапросДЕБ = Новый Запрос;
	ЗапросДЕБ.УстановитьПараметр("ДатаКон",ПериодПланирования.датарасчетаНачальныхостатков);
	
	ИнвестицииИКредит = Новый СписокЗначений;
	ИнвестицииИКредит.Добавить(Справочники.ТипыДоговоров.Инвестиции);
	ИнвестицииИКредит.Добавить(Справочники.ТипыДоговоров.Кредит);
	ИнвестицииИКредит.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
	ИнвестицииИКредит.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);
	
	ЗапросДЕБ.УстановитьПараметр("ИнвестицииИКредит",ИнвестицииИКредит);
	
	ЗапросДЕБ.Текст =  
		"ВЫБРАТЬ
		|	СУММА(ПЗ.СуммаУпрОстаток) КАК Сумма,
		|	ПЗ.ДоговорКонтрагентаВидДоговора КАК ВидДоговора,
		|	ПЗ.ВидДвижения
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|		ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаУпрОстаток,
		|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВидДоговора КАК ДоговорКонтрагентаВидДоговора,
		|		ВЫБОР
		|			КОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток > 0
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход)
		|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход)
		|		КОНЕЦ КАК ВидДвижения
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон, НЕ ДоговорКонтрагента.ТипДоговора В (&ИнвестицииИКредит)) КАК ВзаиморасчетыСКонтрагентамиОстатки
		|	ГДЕ
		|		ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток > 0) КАК ПЗ
		|
		|СГРУППИРОВАТЬ ПО
		|	ПЗ.ДоговорКонтрагентаВидДоговора,
		|	ПЗ.ВидДвижения";
		
	Рез = ЗапросДЕБ.Выполнить().Выгрузить();
	СуммаДЕБСПокупателем = 0;
	СуммаДЕБСПоставщиком = 0;
	
	для Каждого стр11 из рез Цикл
		Если стр11.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем или стр11.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
			СуммаДЕБСПокупателем = СуммаДЕБСПокупателем + стр11.Сумма;	
		Иначе
			СуммаДЕБСПоставщиком = СуммаДЕБСПоставщиком + стр11.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	СуммаАктив = СуммаАктив+СуммаДЕБСПокупателем;
	СуммаПассив = СуммаПассив-СуммаДЕБСПоставщиком;

	
	//Инвестиции=============================================================================================

	ЗапросИН = Новый Запрос;
	ЗапросИН.УстановитьПараметр("ДатаКон",ПериодПланирования.датарасчетаНачальныхостатков);
	
	Инв = новый СписокЗначений;
	Инв.Добавить(Справочники.ТипыДоговоров.Инвестиции);
	Инв.Добавить(Справочники.ТипыДоговоров.ПроцентыПоИнвестициям);
	
	ЗапросИН.УстановитьПараметр("Инвестиции",Инв);
	ЗапросИН.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ПЗ.СуммаУпрОстаток) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|		ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаУпрОстаток
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон, ДоговорКонтрагента.ТипДоговора В (&Инвестиции)) КАК ВзаиморасчетыСКонтрагентамиОстатки) КАК ПЗ";
		
	Рез = ЗапросИН.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		СуммаИН = Рез[0].Сумма;
		СуммаАктив = СуммаАктив+СуммаИН;
	КонецЕсли;

    //Кредиторка==============================================================================================

	ЗапросКР = Новый Запрос;
	ЗапросКР.УстановитьПараметр("ДатаКон",ПериодПланирования.датарасчетаНачальныхостатков);
	ЗапросКР.УстановитьПараметр("Аккредитив",Справочники.ТипыДоговоров.НайтиПоНаименованию("Аккредитивы"));	
	ЗапросКР.УстановитьПараметр("ИнвестицииИКредит",ИнвестицииИКредит);
	ЗапросКР.Текст = 
		"ВЫБРАТЬ
		|	-СУММА(ПЗ.СуммаУпрОстаток) КАК Сумма,
		|	ПЗ.ДоговорКонтрагентаВидДоговора КАК ВидДоговора
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|		ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаУпрОстаток,
		|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВидДоговора КАК ДоговорКонтрагентаВидДоговора
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
		|				&ДатаКон,
		|				НЕ ДоговорКонтрагента.ТипДоговора В (&ИнвестицииИКредит)
		|					И НЕ ДоговорКонтрагента.ТипДоговора = &Аккредитив) КАК ВзаиморасчетыСКонтрагентамиОстатки
		|	ГДЕ
		|		ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток < 0) КАК ПЗ
		|
		|СГРУППИРОВАТЬ ПО
		|	ПЗ.ДоговорКонтрагентаВидДоговора";
		
	Рез = ЗапросКР.Выполнить().Выгрузить();
	СуммаКРСПокупателем = 0;
	СуммаКРСПоставщиком = 0;
	
	для Каждого стр11 из рез Цикл
		Если стр11.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком или стр11.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			СуммаКРСПоставщиком = СуммаКРСПоставщиком + стр11.Сумма;	
		Иначе
			СуммаКРСПокупателем = СуммаКРСПокупателем + стр11.Сумма;		
		КонецЕсли;
	КонецЦикла;
	
	СуммаПассив = СуммаПассив+СуммаКРСПоставщиком;
	СуммаАктив = СуммаАктив-СуммаКРСПокупателем;
	
	Если Рез.Количество()>0 Тогда
		СуммаКР = Рез[0].Сумма;
	КонецЕсли;
	
	//Кредиты===================================================================================================

	ЗапросКРедит= Новый Запрос;
	ЗапросКРедит.УстановитьПараметр("ДатаКон",ПериодПланирования.датарасчетаНачальныхостатков);
	Кр = Новый СписокЗначений;
	Кр.Добавить(Справочники.ТипыДоговоров.Кредит);
	Кр.Добавить(Справочники.ТипыДоговоров.ПроцентыПоКредитам);
	ЗапросКРедит.УстановитьПараметр("Кредит",Кр);	
	//ЗапросАК.УстановитьПараметр("ИнвестицииИКредит",ИнвестицииИКредит);
	ЗапросКРедит.Текст = 
		"ВЫБРАТЬ
		|	-СУММА(ПЗ.СуммаУпрОстаток) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|		ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаУпрОстаток
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон, ДоговорКонтрагента.ТипДоговора В (&Кредит)) КАК ВзаиморасчетыСКонтрагентамиОстатки) КАК ПЗ";
		
	Рез = ЗапросКРедит.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		СуммаКредит = Рез[0].Сумма;
		СуммаПассив = СуммаПассив+СуммаКредит;
	КонецЕсли;
	
	//Аккредитивы===============================================================================================

	ЗапросАК = Новый Запрос;
	ЗапросАК.УстановитьПараметр("ДатаКон",ПериодПланирования.датарасчетаНачальныхостатков);
	ЗапросАК.УстановитьПараметр("Аккредитив",Справочники.ТипыДоговоров.НайтиПоНаименованию("Аккредитивы"));	
	//ЗапросАК.УстановитьПараметр("ИнвестицииИКредит",ИнвестицииИКредит);
	ЗапросАК.Текст = 
		"ВЫБРАТЬ
		|	-СУММА(ПЗ.СуммаУпрОстаток) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|		ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаУпрОстаток
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКон, ДоговорКонтрагента.ТипДоговора = &Аккредитив) КАК ВзаиморасчетыСКонтрагентамиОстатки
		|	ГДЕ
		|		ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток < 0) КАК ПЗ";
		
	Рез = ЗапросАК.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 Тогда
		СуммаАК = Рез[0].Сумма;
		СуммаПассив = СуммаПассив+0;
	КонецЕсли;
	
	
	Макет  = ПолучитьМакет("БюджетНачальныеПоказатели");
	ЭлементыФормы.ПолеТабличногоДокумента1.Очистить();

	Актив = Макет.ПолучитьОбласть("Актив");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(Актив);
	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ОсновныеСредства;
	Нов.Сумма = Формат(СуммаОС,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ОсновныеСредства;
	Строка.Параметры.Сумма = Формат(СуммаОС,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ВнеоборотныеАктивы;
	Нов.Сумма = Формат(СуммаВА,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ВнеоборотныеАктивы;
	Строка.Параметры.Сумма = Формат(СуммаВА,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Материалы;
	Нов.Сумма = Формат(СуммаМА,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.Материалы;
	Строка.Параметры.Сумма = Формат(СуммаМА,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ТоварыНаСкладах;
	Нов.Сумма = Формат(СуммаСК,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ТоварыНаСкладах;
	Строка.Параметры.Сумма = Формат(СуммаСК,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);

	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ТоварыНаРеализации;
	Нов.Сумма = Формат(СуммаТрел,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ТоварыНаРеализации;
	Строка.Параметры.Сумма = Формат(СуммаТрел,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);

	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ВзаиморасчетыСПодотчетнымиЛицами;
	Нов.Сумма = Формат(СуммаПО,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ВзаиморасчетыСПодотчетнымиЛицами;
	Строка.Параметры.Сумма = Формат(СуммаПО,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);

	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ДенежныеСредства;
	Нов.Сумма = Формат(СуммаДС,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ДенежныеСредства;
	Строка.Параметры.Сумма = Формат(СуммаДС,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);

	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ДебиторскаяЗадолженностьСПокупателем;
	Нов.Сумма = Формат(СуммаДЕБСПокупателем-СуммаКРСПокупателем,"ЧДЦ=2");//
    Нов.СуммаДоп = Формат(СуммаКРСПокупателем,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.ДебиторскаяЗадолженностьСПокупателем;
	Строка.Параметры.Сумма = Формат(СуммаДЕБСПокупателем-СуммаКРСПокупателем,"ЧДЦ=2");
	Строка.Параметры.СуммаДоп = Формат(СуммаКРСПокупателем,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);

	
	//Нов = НачальныеОстатки.Добавить();
	//Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.ДебиторскаяЗадолженностьСПоставщиком;
	//Нов.Сумма = СуммаДЕБСПоставщиком;//
	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Инвестиции;
	Нов.Сумма = Формат(СуммаИН,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.Инвестиции;
	Строка.Параметры.Сумма = Формат(СуммаИН,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
	
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = "Итого Актив:";
	Строка.Параметры.Сумма = Формат(СуммаАктив,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
	
	Пассив = Макет.ПолучитьОбласть("Пассив");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(Пассив);
	
	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.КредиторскаяЗадолженностьСПоставщиком;
	Нов.Сумма = Формат(СуммаКРСПоставщиком-СуммаДЕБСПоставщиком,"ЧДЦ=2"); //
	Нов.СуммаДоп = Формат(СуммаДЕБСПоставщиком,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.КредиторскаяЗадолженностьСПоставщиком;
	Строка.Параметры.Сумма = Формат(СуммаКРСПоставщиком-СуммаДЕБСПоставщиком,"ЧДЦ=2");
	Строка.Параметры.СуммаДоп = Формат(СуммаДЕБСПоставщиком,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
	
	//Нов = НачальныеОстатки.Добавить();
	//Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.КредиторскаяЗадолженностьСПокупателем;
	//Нов.Сумма = СуммаКРСПокупателем;//
	
	//Нов = НачальныеОстатки.Добавить();
	//Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Аккредитивы;
	//Нов.Сумма = Формат(СуммаАК,"ЧДЦ=2");
	//Строка = Макет.ПолучитьОбласть("Строка");
	//Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.Аккредитивы;
	//Строка.Параметры.Сумма = Формат(СуммаАК,"ЧДЦ=2");
	//ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);

	
	Нов = НачальныеОстатки.Добавить();
	Нов.ПоказателиБаланса = Перечисления.ПоказателиБаланса.Кредиты;
	Нов.Сумма = Формат(СуммаКредит,"ЧДЦ=2");
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = Перечисления.ПоказателиБаланса.Кредиты;
	Строка.Параметры.Сумма = Формат(СуммаКредит,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
	
	Прибыль = СуммаАктив - СуммаПассив;
	
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = "Прибыль:";
	Строка.Параметры.Сумма = Формат(Прибыль,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);
	
	
	
	Строка = Макет.ПолучитьОбласть("Строка");
	Строка.Параметры.Показатель = "Итого Пассив:";
	Строка.Параметры.Сумма = Формат(СуммаПассив + Прибыль,"ЧДЦ=2");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(строка);

		
КонецПроцедуры


Процедура ПоступленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПересчетВсего();
КонецПроцедуры


Процедура ПланПродажПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПересчетВсего();
КонецПроцедуры

Процедура ПересчитатьВсеЯчейки()
	//табчасть = ЭтотОбъект[ИмяТЧ];
	ПересчитатьТЧ("Склад");
	ПересчитатьТЧ("Поступления");
	ПересчитатьТЧ("ПланПродаж");
	ПересчитатьТЧ("ОплатаПоставщикам");
	ПересчитатьТЧ("ПриходДенег");
КонецПроцедуры
процедура ПересчитатьТЧ(тчИмя)
	тч = ЭтотОбъект[тчИмя];
	тз = ТЧ.выгрузить();
	//
	МассивИменКолонок = Новый Массив;
	Для Каждого Колонка Из тз.Колонки Цикл
		МассивИменКолонок.Добавить(Колонка.Имя);
	КонецЦикла;
	//
	////Обходим всю таблицу
	//
	Для Каждого СтрокаТаблицы Из тч Цикл
		Для Сч = 0 По МассивИменКолонок.ВГраница() Цикл
			попытка
				АктивизацияЯчейки(тчИмя,МассивИменКолонок[Сч],СтрокаТаблицы.НомерСтроки-1,ложь,ложь);//пересчет по формуле
			исключение
				Сообщить(ОписаниеОшибки());
			конецПопытки;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры




Процедура Кнопка1Нажатие(Элемент)
	ПересчитатьВсеЯчейки();
КонецПроцедуры

Процедура КоманднаяПанель16СкопироватьНаКолонку(Кнопка)
	ИмяТЧ = ЭлементыФормы.ПродажиФормулы.ТекущаяСтраница.Имя;
	Колонка = ЭлементыФормы[ИмяТЧ].ТекущаяКолонка.Данные;
	Строка	 = ЭлементыФормы[ИмяТЧ].ТекущаяСтрока; //в табполе номер с 1 в тч с 0
	
	отбор = новый Структура("ТЧ,Менеджер,Разрез1,Разрез2,Разрез3,Колонка");
	отбор.ТЧ = ИмяТЧ;
	отбор.Менеджер = Строка.Менеджер;
	отбор.Разрез1 = Строка.Разрез1;
	отбор.Разрез2 = Строка.Разрез2;
	отбор.Разрез3 = Строка.Разрез3;
	отбор.Колонка = Колонка;
	//Сообщить(ЗначениеВСтрокуВнутр(отбор));
	строки = ФормулыДляЯчеек.НайтиСтроки(Отбор);
	Если строки.Количество()>0 тогда
		формула=строки[0].Формула;
	иначе
		формула="";
	КонецЕсли;
	Если Формула <> "" тогда
		ТЧФормулы = ЭтотОбъект[ИмяТЧ];
		Замена = новый структура("Менеджер,Разрез1,Разрез2,Разрез3");
		Для каждого стр из ТЧФормулы цикл
			Замена.Менеджер = стр.Менеджер;
			Замена.Разрез1 = стр.Разрез1;
			Замена.Разрез2 = стр.Разрез2;
			Замена.Разрез3 = стр.Разрез3;
			ФормулаНовая = РазобратьФормулуДляКопирования(формула,Замена);
			//добавим/перезапишем в тч формул
			отбор = новый структура ("ТЧ,Менеджер,Разрез1,Разрез2,Разрез3,Колонка");
			отбор.ТЧ = ИмяТЧ;
			отбор.Менеджер = Замена.Менеджер;
			отбор.Разрез1 = Замена.Разрез1;
			отбор.Разрез2 = Замена.Разрез2;
			отбор.Разрез3 = Замена.Разрез3;
			отбор.Колонка = Колонка;
			
			строки = ФормулыДляЯчеек.найтиСтроки(отбор);
			Если строки.Количество()=0 тогда
				строкаФ = ФормулыДляЯчеек.Добавить();
				ЗаполнитьЗначенияСвойств(строкаФ,отбор);
				строкаФ.Формула = ФормулаНовая;
			иначе
				Для каждого строкаФ из Строки цикл
					строкаФ.Формула =ФормулаНовая; 
					строкаФ.Колонка = Колонка;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция РазобратьФормулуДляКопирования(Форм,замена)
	ФормулаНовая="";
	Формула=форм;
	позицияНачалаЯчейки = Найти(Формула,"[");
	Если позицияНачалаЯчейки = 0 тогда
		ФормулаНовая = Форм;
	иначе
		позицияКонцаЯчейки = Найти(Формула,"]");
		Формула = лев(Формула,позицияНачалаЯчейки-1);
		ЯчейкаСтр = Сред(Форм,позицияНачалаЯчейки+1,позицияКонцаЯчейки-(позицияНачалаЯчейки+1)) ;
		Остаток = Сред(форм,позицияКонцаЯчейки+1);
		ЯчейкаОтбор = ЗначениеИзСтрокиВнутр(ЯчейкаСтр);
		
		ЯчейкаОтбор.Менеджер = Замена.Менеджер;
		ЯчейкаОтбор.Разрез1 = Замена.Разрез1;
		ЯчейкаОтбор.Разрез2 = Замена.Разрез2;
		ЯчейкаОтбор.Разрез3 = Замена.Разрез3;
		
		ЯчейкаСтрНовая = ЗначениеВСтрокуВнутр(ЯчейкаОтбор);
		ФормулаНовая = лев(Форм,позицияКонцаЯчейки);
		ФормулаНовая = СтрЗаменить(ФормулаНовая,ЯчейкаСтр,ЯчейкаСтрНовая);
		
		ФормулаНовая = ФормулаНовая + РазобратьФормулуДляКопирования(Остаток,Замена);
	КонецЕсли;
	возврат ФормулаНовая;
КонецФункции

Процедура АктивизацияЯчейки(ИмяТЧ,ИмяКолонки,НомерСтроки,РежимРедактированияФормулы=ложь,ВыводитьФормулы=истина)
	ЭлементыФормы.ЗначениеФормулы.Значение="";
	табчасть = ЭтотОбъект[ИмяТЧ];

	Если не ИмяКолонки="НомерСтроки" и не ИмяКолонки="" тогда
		Если не РежимРедактированияФормулы тогда
			//Формула = ПолучитьФормулу(Элемент.Имя,Элемент.ТекущаяКолонка,Элемент.ТекущаяСтрока);
			Формула = ПолучитьФормулу(ИмяТЧ,ИмяКолонки,НомерСтроки);
			//табчасть = ЭтотОбъект[ИмяТЧ];
			Если Формула = "" и ВыводитьФормулы тогда
				//Формула = Элемент.ТекущиеДанные[Элемент.ТекущаяКолонка.Данные];
                Формула = табчасть[НомерСтроки][ИмяКолонки];
				ФормулаЯчейки = Формула;
				РедакторФормулы = "";
			иначе
				если ВыводитьФормулы тогда
					ФормулаЯчейки	= СтрЗаменить(РазобратьФормулу(Формула),Символы.ПС,"");
					ЗначениеФормулы = вычислить(ФормулаЯчейки);
					РедакторФормулы = Формула;
					табчасть[НомерСтроки][ИмяКолонки] = ЗначениеФормулы;
				Иначе
					ФормулаЯчейкиф	= СтрЗаменить(РазобратьФормулу(Формула),Символы.ПС,"");
					Если ФормулаЯчейкиф<>"" тогда
						ЗначениеФормулыф = вычислить(ФормулаЯчейкиф);
						табчасть[НомерСтроки][ИмяКолонки] = ЗначениеФормулыФ;
					КонецЕсли;
				КонецЕсли;
				
				//ТЧ.Значение[ТЧ.ТекущаяСтрока.НомерСтроки-1][ТЧ.ТекущаяКолонка.Имя]=ЗначениеФормулы;
				//табчасть[НомерСтроки][ИмяКолонки] = ЗначениеФормулы;
			КонецЕсли;
			
			//ПересчитатьВсеЯчейки();
		иначе   //редактирование
			отбор = новый Структура("ТЧ,Менеджер,Разрез1,Разрез2,Разрез3,Колонка");
			отбор.ТЧ = ИмяТЧ;
			отбор.Менеджер = табчасть[НомерСтроки]["Менеджер"];
			отбор.Разрез1 = табчасть[НомерСтроки]["Разрез1"];
			отбор.Разрез2 = табчасть[НомерСтроки]["Разрез2"];
			отбор.Разрез3 = табчасть[НомерСтроки]["Разрез3"];;
			отбор.Колонка = ИмяКолонки;
			если ВыводитьФормулы тогда
				РедакторФормулы = РедакторФормулы+символы.ПС+"["+ЗначениеВСтрокуВнутр(отбор)+"]";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Функция РазобратьФормулу(Форм)
	Формула=форм;
	позицияНачалаЯчейки = Найти(Формула,"[");
	Если позицияНачалаЯчейки = 0 тогда
	иначе
		позицияКонцаЯчейки = Найти(Формула,"]");
		Формула = лев(Формула,позицияНачалаЯчейки-1);
		ЯчейкаСтр = Сред(Форм,позицияНачалаЯчейки+1,позицияКонцаЯчейки-(позицияНачалаЯчейки+1)) ;
		ЯчейкаОтбор = ЗначениеИзСтрокиВнутр(ЯчейкаСтр);
		ТЧ = ЭтотОбъект[ЯчейкаОтбор.ТЧ];
		отбор = новый Структура("Менеджер,Разрез1,Разрез2,Разрез3");
		ЗаполнитьЗначенияСвойств(отбор,ЯчейкаОтбор);
		строки = ТЧ.НайтиСтроки(отбор);
		Если строки.Количество()>0 тогда
			ЗначениеЯчейки=строки[0][ЯчейкаОтбор.Колонка];
		иначе
			ЗначениеЯчейки=0;
			Сообщить("!!! не найдено значение ячейки");
		КонецЕсли;

		Формула = Формула+Формат(ЗначениеЯчейки,"ЧРД=.; ЧН=0; ЧГ=0"); 
		Формула = Формула + РазобратьФормулу(Сред(форм,позицияКонцаЯчейки+1));
	КонецЕсли;
	возврат Формула;
КонецФункции

Функция ПолучитьФормулу(ТЧ,Колонка, строка)
	//отбор = новый Структура("ТЧ,Менеджер,Разрез1,Разрез2,Разрез3,Колонка");
	//отбор.ТЧ = ТЧ;
	//тч2 = ЭтотОбъект[тч];
	//отбор.Менеджер = строка.Менеджер;
	//отбор.Разрез1 = строка.Разрез1;
	//отбор.Разрез2 = строка.Разрез2;
	//отбор.Разрез3 = строка.Разрез3;
	//отбор.Колонка = Колонка.Имя;
	////Сообщить(ЗначениеВСтрокуВнутр(отбор));
	//строки = ФормулыДляЯчеек.НайтиСтроки(Отбор);
	//Если строки.Количество()>0 тогда
	//	Возврат строки[0].Формула;
	//иначе
	//	Возврат "";
	//КонецЕсли;
	отбор = новый Структура("ТЧ,Менеджер,Разрез1,Разрез2,Разрез3,Колонка");
	отбор.ТЧ = ТЧ;
	табчасть = ЭтотОбъект[тч];
	отбор.Менеджер = табчасть[строка]["Менеджер"];
	отбор.Разрез1 = табчасть[строка]["Разрез1"];
	отбор.Разрез2 = табчасть[строка]["Разрез2"];
	отбор.Разрез3 = табчасть[строка]["Разрез3"];
	отбор.Колонка = Колонка;
	//Сообщить(ЗначениеВСтрокуВнутр(отбор));
	строки = ФормулыДляЯчеек.НайтиСтроки(Отбор);
	Если строки.Количество()>0 тогда
		Возврат строки[0].Формула;
	иначе
		Возврат "";
	КонецЕсли;
КонецФункции



Процедура НадписьФормулаНажатие(Элемент)
	Если не РежимРедактированияФормулыФ  тогда //редактирование
		РежимРедактированияФормулыФ = истина;
		ЭлементыФормы.НадписьФормула.ЦветФона = WebЦвета.Красный;
		
		ЯчейкаДляФормулы = новый Структура("ТЧ,Менеджер,Разрез1,Разрез2,Разрез3,Колонка");
		
		ТЧ = ЭлементыФормы[ЭлементыФормы.ПродажиФормулы.ТекущаяСтраница.Имя];
		
		ЯчейкаДляФормулы.ТЧ = ЭлементыФормы.ПродажиФормулы.ТекущаяСтраница.Имя;
		ЯчейкаДляФормулы.Менеджер = ТЧ.ТекущаяСтрока.Менеджер;
		ЯчейкаДляФормулы.Разрез1 = ТЧ.ТекущаяСтрока.Разрез1;
		ЯчейкаДляФормулы.Разрез2 = ТЧ.ТекущаяСтрока.Разрез2;
		ЯчейкаДляФормулы.Разрез3 = ТЧ.ТекущаяСтрока.Разрез3;
		ЯчейкаДляФормулы.Колонка = ТЧ.ТекущаяКолонка.Данные;
	Иначе                                                                  //Окончание Редактирования
		СтрокиФормулы = ФормулыДляЯчеек.НайтиСтроки(ЯчейкаДляФормулы);
		Если СтрокиФормулы.Количество() <> 0 тогда
			Для каждого стр из СтрокиФормулы Цикл
				стр.Формула = РедакторФормулы;
			КонецЦикла;
		Иначе
			стр = ФормулыДляЯчеек.Добавить();
			ЗаполнитьЗначенияСвойств(стр,ЯчейкаДляФормулы);
			стр.Формула = РедакторФормулы;
		КонецЕсли;
		РежимРедактированияФормулыФ = ложь;
		ЭлементыФормы.НадписьФормула.ЦветФона = WebЦвета.Белый;
		//пересчитаем значение ячейки по формуле
		ТЧ = ЭлементыФормы[ЭлементыФормы.ПродажиФормулы.ТекущаяСтраница.Имя];
		
		Формула = ПолучитьФормулу(ЭлементыФормы.ПродажиФормулы.ТекущаяСтраница.Имя,ТЧ.ТекущаяКолонка.Данные,ТЧ.ТекущаяСтрока.НомерСтроки-1);
		//Формула = ПолучитьФормулу(ИмяТЧ,ИмяКолонки,НомерСтроки);

		Если Формула = "" тогда
		иначе
			ТЧ.Значение[ТЧ.ТекущаяСтрока.НомерСтроки-1][ТЧ.ТекущаяКолонка.Данные]=вычислить(СтрЗаменить(РазобратьФормулу(Формула),Символы.ПС,""));
		КонецЕсли;
		ПересчитатьВсеЯчейки();
	КонецЕсли;
КонецПроцедуры

Процедура СкладПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущаяСтрока<>неопределено тогда
	ИмяТЧ = Элемент.Имя;
	ИмяКолонки = Элемент.ТекущаяКолонка.Данные;
	НомерСтроки	 = Элемент.ТекущаяСтрока.НомерСтроки-1; //в табполе номер с 1 в тч с 0
	АктивизацияЯчейки(ИмяТЧ,ИмяКолонки,НомерСтроки,РежимРедактированияФормулыФ);
   КонецЕсли;
КонецПроцедуры

Процедура ПоступленияПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущаяСтрока<>неопределено тогда
	ИмяТЧ = Элемент.Имя;
	ИмяКолонки = Элемент.ТекущаяКолонка.Данные;
	НомерСтроки	 = Элемент.ТекущаяСтрока.НомерСтроки-1; //в табполе номер с 1 в тч с 0
	АктивизацияЯчейки(ИмяТЧ,ИмяКолонки,НомерСтроки,РежимРедактированияФормулыФ);
	КонецЕсли;
КонецПроцедуры

Процедура ПриходДенегПриАктивизацииЯчейки(Элемент)
		//АктивизацияЯчейки(Элемент,РежимРедактированияФормулыФ);
	Если Элемент.ТекущаяСтрока<>неопределено тогда
	ИмяТЧ = Элемент.Имя;
	ИмяКолонки = Элемент.ТекущаяКолонка.Данные;
	НомерСтроки	 = Элемент.ТекущаяСтрока.НомерСтроки-1; //в табполе номер с 1 в тч с 0
	КонецЕсли;
КонецПроцедуры

Процедура ПланПродажПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущаяСтрока<>неопределено тогда
	ИмяТЧ = Элемент.Имя;
	ИмяКолонки = Элемент.ТекущаяКолонка.Данные;
	НомерСтроки	 = Элемент.ТекущаяСтрока.НомерСтроки-1; //в табполе номер с 1 в тч с 0
	АктивизацияЯчейки(ИмяТЧ,ИмяКолонки,НомерСтроки,РежимРедактированияФормулыФ);
   КонецЕсли; 
КонецПроцедуры

Процедура ОплатаПоставщикамПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущаяСтрока<>неопределено тогда
	ИмяТЧ = Элемент.Имя;
	ИмяКолонки = Элемент.ТекущаяКолонка.Данные;
	НомерСтроки	 = Элемент.ТекущаяСтрока.НомерСтроки-1; //в табполе номер с 1 в тч с 0
	АктивизацияЯчейки(ИмяТЧ,ИмяКолонки,НомерСтроки,РежимРедактированияФормулыФ);
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыПоказатьСоответствия(Кнопка)
	Форма = РегистрыСведений.СоответствиеПроизводителейДляБюджетирования.ПолучитьФормуСписка();
	Форма.Открыть();
КонецПроцедуры

Процедура КоманднаяПанель1Развернуть(Кнопка)
	Если Склад.Количество()>0 тогда
		Массив = Склад.ВыгрузитьКолонку("Разрез1");
		Список = Новый СписокЗначений;
		список.ЗагрузитьЗначения(Массив);
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("список",Список);
		Запрос.УстановитьПараметр("Дата",ПериодПланирования.ДатаНачала);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
		               |	ЕСТЬNULL(СоответствиеПроизводителейДляБюджетирования.ОбщаяГруппа, ТоварыНаСкладахОстатки.Номенклатура.Производитель) КАК Производитель,
		               |	ТоварыНаСкладахОстатки.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
		               |ПОМЕСТИТЬ Таб
		               |ИЗ
		               |	РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, Номенклатура.НоменклатурнаяГруппа В ИЕРАРХИИ (&Список)) КАК ТоварыНаСкладахОстатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПроизводителейДляБюджетирования КАК СоответствиеПроизводителейДляБюджетирования
		               |		ПО ТоварыНаСкладахОстатки.Номенклатура.Производитель = СоответствиеПроизводителейДляБюджетирования.Бренд
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(Таб.КоличествоОстаток) КАК КоличествоОстаток,
		               |	Таб.Производитель,
		               |	Таб.НоменклатурнаяГруппа
		               |ИЗ
		               |	Таб КАК Таб
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Таб.Производитель,
		               |	Таб.НоменклатурнаяГруппа";
		Производители = Запрос.Выполнить().Выгрузить();
		
		мен = склад[0].Менеджер;
		
		склад.Очистить();
		
		Для каждого стр из Производители Цикл
			
			нов = Склад.Добавить();
			нов.Менеджер = мен;
			нов.Разрез1 = стр.НоменклатурнаяГруппа;
			нов.Разрез2 = стр.Производитель;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель2РаспределитьПоПроцентамПотекущей(Кнопка)
	Текущаястрока = ЭлементыФормы.Поступления.ТекущиеДанные;
	
	если Текущаястрока = Неопределено тогда
		
	    возврат;
		
	КонецЕсли;
	
	ФормаПроцентов = ПолучитьФорму("ФормаПроцентов");
	
    ФормаПроцентов.ПериодПланирования = ПериодПланирования;
	ФормаПроцентов.таблицаСуммИПроцентов = таблицаСуммИПроцентов;
	ТаблицаСуммИПроцентов = ФормаПроцентов.Открытьмодально();
	
	Если ЗначениеЗаполнено(ТаблицаСуммИПроцентов) Тогда 
		Месяц1Процент = ТаблицаСуммИПроцентов[0].Сумма;
		Месяц2Процент = ТаблицаСуммИПроцентов[1].Сумма;
		Месяц3Процент = ТаблицаСуммИПроцентов[2].Сумма;
		Месяц4Процент = ТаблицаСуммИПроцентов[3].Сумма;
		Месяц5Процент = ТаблицаСуммИПроцентов[4].Сумма;
		Месяц6Процент = ТаблицаСуммИПроцентов[5].Сумма;
		
		Месяц7Процент = ТаблицаСуммИПроцентов[6].Сумма;
		Месяц8Процент = ТаблицаСуммИПроцентов[7].Сумма;
		Месяц9Процент = ТаблицаСуммИПроцентов[8].Сумма;
		Месяц10Процент = ТаблицаСуммИПроцентов[9].Сумма;
		Месяц11Процент = ТаблицаСуммИПроцентов[10].Сумма;
		Месяц12Процент = ТаблицаСуммИПроцентов[11].Сумма;
		
		СуммаРаспр 	  = ТаблицаСуммИПроцентов[12].Сумма;
		
		СуммаОтОбщего = Окр(СуммаРаспр/Поступления.Количество());
		
		НачальноеКоличество = 0;
		//Для каждого СтрХ из Поступления Цикл
			
			КоличествоХ = Текущаястрока.РаспределитьКоличество;
			
			
			Текущаястрока.Месяц1Количество = КоличествоХ*Месяц1Процент/100;
			Текущаястрока.Месяц2Количество = КоличествоХ*Месяц2Процент/100;
			Текущаястрока.Месяц3Количество = КоличествоХ*Месяц3Процент/100;
			Текущаястрока.Месяц4Количество = КоличествоХ*Месяц4Процент/100;
			Текущаястрока.Месяц5Количество = КоличествоХ*Месяц5Процент/100;
			Текущаястрока.Месяц6Количество = КоличествоХ*Месяц6Процент/100;
			
			Текущаястрока.Месяц7Количество = КоличествоХ*Месяц7Процент/100;
			Текущаястрока.Месяц8Количество = КоличествоХ*Месяц8Процент/100;
			Текущаястрока.Месяц9Количество = КоличествоХ*Месяц9Процент/100;
			Текущаястрока.Месяц10Количество = КоличествоХ*Месяц10Процент/100;
			Текущаястрока.Месяц11Количество = КоличествоХ*Месяц11Процент/100;
			Текущаястрока.Месяц12Количество = КоличествоХ*Месяц12Процент/100;
			
			//КомментарийФормула = "№1-" + ТаблицаСуммИПроцентов[0].Процент + "~1";
			//КомментарийФормула = КомментарийФормула + "№2-" + ТаблицаСуммИПроцентов[1].Процент + "~2";
			//КомментарийФормула = КомментарийФормула + "№3-" + ТаблицаСуммИПроцентов[2].Процент + "~3";
			//КомментарийФормула = КомментарийФормула + "№4-" + ТаблицаСуммИПроцентов[3].Процент + "~4";
			//КомментарийФормула = КомментарийФормула + "№5-" + ТаблицаСуммИПроцентов[4].Процент + "~5";
			//КомментарийФормула = КомментарийФормула + "№6-" + ТаблицаСуммИПроцентов[5].Процент + "~6";
			//СтрХ.КомментарийФормула = КомментарийФормула;			
		//КонеЦЦикла;
		
		
	КонецЕсли;
	
	ПересчетВсего();
КонецПроцедуры

Процедура КоманднаяПанель3РаспределитьПоПроцентамПоТекущей(Кнопка)
	Текущаястрока = ЭлементыФормы.ПланПродаж.ТекущиеДанные;
		
	если Текущаястрока = Неопределено тогда
		
	    возврат;
		
	КонецЕсли;
	
	ФормаПроцентов = ПолучитьФорму("ФормаПроцентов");
	//КомментарийПроценты = "";
	//Если (ПланПродаж.Количество()<>0) Тогда
	//	КомментарийПроценты = Текущаястрока.КомментарийФормула;
	//КонецЕсли;	
	//ФормаПроцентов.Комментарий = КомментарийПроценты;
	ФормаПроцентов.ПериодПланирования = ПериодПланирования;
	ФормаПроцентов.таблицаСуммИПроцентов = таблицаСуммИПроцентов;

	ТаблицаСуммИПроцентов = ФормаПроцентов.Открытьмодально();
	
	Если ЗначениеЗаполнено(ТаблицаСуммИПроцентов) Тогда 
		Месяц1Процент = ТаблицаСуммИПроцентов[0].Сумма;
		Месяц2Процент = ТаблицаСуммИПроцентов[1].Сумма;
		Месяц3Процент = ТаблицаСуммИПроцентов[2].Сумма;
		Месяц4Процент = ТаблицаСуммИПроцентов[3].Сумма;
		Месяц5Процент = ТаблицаСуммИПроцентов[4].Сумма;
		Месяц6Процент = ТаблицаСуммИПроцентов[5].Сумма;
		Месяц7Процент = ТаблицаСуммИПроцентов[6].Сумма;
		Месяц8Процент = ТаблицаСуммИПроцентов[7].Сумма;
		Месяц9Процент = ТаблицаСуммИПроцентов[8].Сумма;
		Месяц10Процент = ТаблицаСуммИПроцентов[9].Сумма;
		Месяц11Процент = ТаблицаСуммИПроцентов[10].Сумма;
		Месяц12Процент = ТаблицаСуммИПроцентов[11].Сумма;
		
		СуммаРаспр 	  = ТаблицаСуммИПроцентов[12].Сумма;
		
		СуммаОтОбщего = Окр(СуммаРаспр/ПланПродаж.Количество());
		
		НачальноеКоличество = 0;
		//Для каждого СтрХ из ПланПродаж Цикл
			
			Отбор = Новый Структура;
			Отбор.Вставить("Разрез1",Текущаястрока.Разрез1);
			Отбор.Вставить("Разрез2",Текущаястрока.Разрез2);
			М = Склад.НайтиСтроки(Отбор);
			
			Если М.Количество()=0 Тогда 
				НачальноеКоличество = 0;
			иначе
				НачальноеКоличество = М[0].КоличествоНачалоПериода;
			КонецЕсли;
			
			Отбор = Новый Структура;
			Отбор.Вставить("Разрез1",Текущаястрока.Разрез1);
			Отбор.Вставить("Разрез2",Текущаястрока.Разрез2);
			М = Поступления.НайтиСтроки(Отбор);
			
			Если М.Количество()=0 Тогда 
				КоличествоХ = НачальноеКоличество;
			Иначе 
				КоличествоХ = НачальноеКоличество + М[0].Месяц1Количество + М[0].Месяц2Количество + М[0].Месяц3Количество + М[0].Месяц4Количество + М[0].Месяц5Количество + М[0].Месяц6Количество
				+ М[0].Месяц10Количество + М[0].Месяц7Количество + М[0].Месяц8Количество + М[0].Месяц9Количество + М[0].Месяц11Количество + М[0].Месяц12Количество;
			КонецЕсли;
			
			Текущаястрока.Месяц1Количество = КоличествоХ*Месяц1Процент/100;
			Текущаястрока.Месяц2Количество = КоличествоХ*Месяц2Процент/100;
			Текущаястрока.Месяц3Количество = КоличествоХ*Месяц3Процент/100;
			Текущаястрока.Месяц4Количество = КоличествоХ*Месяц4Процент/100;
			Текущаястрока.Месяц5Количество = КоличествоХ*Месяц5Процент/100;
			Текущаястрока.Месяц6Количество = КоличествоХ*Месяц6Процент/100;
			
			Текущаястрока.Месяц7Количество = КоличествоХ*Месяц7Процент/100;
			Текущаястрока.Месяц8Количество = КоличествоХ*Месяц8Процент/100;
			Текущаястрока.Месяц9Количество = КоличествоХ*Месяц9Процент/100;
			Текущаястрока.Месяц10Количество = КоличествоХ*Месяц10Процент/100;
			Текущаястрока.Месяц11Количество = КоличествоХ*Месяц11Процент/100;
			Текущаястрока.Месяц12Количество = КоличествоХ*Месяц12Процент/100;
			
			//КомментарийФормула = "№1-" + ТаблицаСуммИПроцентов[0].Процент + "~1";
			//КомментарийФормула = КомментарийФормула + "№2-" + ТаблицаСуммИПроцентов[1].Процент + "~2";
			//КомментарийФормула = КомментарийФормула + "№3-" + ТаблицаСуммИПроцентов[2].Процент + "~3";
			//КомментарийФормула = КомментарийФормула + "№4-" + ТаблицаСуммИПроцентов[3].Процент + "~4";
			//КомментарийФормула = КомментарийФормула + "№5-" + ТаблицаСуммИПроцентов[4].Процент + "~5";
			//КомментарийФормула = КомментарийФормула + "№6-" + ТаблицаСуммИПроцентов[5].Процент + "~6";
			
			//СтрХ.КомментарийФормула = КомментарийФормула;
			
		//КонеЦЦикла;
		
		
	КонецЕсли;
	
	ПересчетВсего();
КонецПроцедуры

Процедура КоманднаяПанель14ЗаполнитьДействующимиДоговорами(Кнопка)
	КредитыПланируемые.Очистить();
	Для каждого стр из КредитыТекущие Цикл
		Нов = КредитыПланируемые.Добавить();
		Нов.Контрагент = стр.Контрагент;
		Нов.ДоговорКонтрагента = стр.ДоговорКонтрагента;	
	КонецЦикла;
КонецПроцедуры

Процедура ОплатаПоставщикамПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПересчетВсего();
КонецПроцедуры

Процедура ПриходДенегПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПересчетВсего();
КонецПроцедуры

Процедура КоманднаяПанель2ЗаполнитьОбособленно(Кнопка)
	Отбор = Новый Структура;
	отбор.Вставить("Автоматически",Ложь);
	
	ПоступленияТЧ = Поступления.Выгрузить(отбор);
	
	НоваяТЧ = ПоступленияТЧ.Скопировать();
	НоваяТЧ.Очистить();
	
	Для каждого стр из ПоступленияТЧ цикл
		
		Нов  = НоваяТЧ.Добавить();
		ЗаполнитьЗначенияСвойств(Нов,Стр);
		
		Нов2 = НоваяТЧ.Добавить();
		Нов2.Автоматически = истина; 
		Нов2.Менеджер = стр.Менеджер;
		Нов2.Разрез1 =  стр.Разрез1;
		Нов2.Разрез2 =  стр.Разрез2;
		Нов2.ВходнаяЦена = стр.ВходнаяЦена;
		
	КонецЦикла;
	
	Поступления.Очистить();
	Поступления.Загрузить(НоваяТЧ);
	
	Запрос = Новый Запрос;
	запрос.УстановитьПараметр("Дата1",ПериодПланирования.ДатаНачала);
	запрос.УстановитьПараметр("Дата2",ПериодПланирования.ДатаКонца);
	запрос.УстановитьПараметр("ДатаРасчета",ПериодПланирования.датарасчетаНачальныхостатков);
	запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	               |	ЗаказыПоставщикамОстатки.Номенклатура.Производитель КАК Производитель,
	               |	СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	               |	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления, ДЕНЬ, 7), МЕСЯЦ) КАК ДатаПоступления
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДатаРасчета, ) КАК ЗаказыПоставщикамОстатки
	               |ГДЕ
	               |	ДОБАВИТЬКДАТЕ(ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления, ДЕНЬ, 7) МЕЖДУ &дата1 И &дата2
	               |	И ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа,
	               |	ЗаказыПоставщикамОстатки.Номенклатура.Производитель,
	               |	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления, ДЕНЬ, 7), МЕСЯЦ)";
				   
	Рез = запрос.Выполнить().Выгрузить();
	
	соответствие = Новый Соответствие;
	соответствие.Вставить(ПериодПланирования.ДатаНачала,"1");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,1),"2");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,2),"3");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,3),"4");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,4),"5");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,5),"6");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,6),"7");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,7),"8");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,8),"9");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,9),"10");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,10),"11");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,11),"12");

	
	Для каждого стр из Рез Цикл
		Отбор = НОвый Структура;
		отбор.Вставить("Разрез1",стр.НоменклатурнаяГруппа);
		отбор.Вставить("Разрез2",стр.Производитель);
		отбор.Вставить("Автоматически",истина);
		
		НаборСтрок = Поступления.НайтиСтроки(Отбор);
		
		если НаборСтрок.Количество()=0 тогда
			Отбор = НОвый Структура;
		    отбор.Вставить("Разрез1",стр.НоменклатурнаяГруппа);
			отбор.Вставить("Автоматически",истина);
		    НаборСтрок = Поступления.НайтиСтроки(Отбор);
		КонецЕсли;
		
		Если НаборСтрок.Количество() = 0 Тогда
			Продолжить;
		Иначе
			Для каждого стр11 из НаборСтрок Цикл
				стр11["Месяц"+соответствие.Получить(стр.ДатаПоступления)+ "Количество"]  = стр11["Месяц"+соответствие.Получить(стр.ДатаПоступления)+ "Количество"] + стр.КоличествоОстаток;
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	
	ПересчетВсего();
	
КонецПроцедуры

Процедура КоманднаяПанель4ЗаполнитьОплатыПоЗаказам(Кнопка)
	Отбор = Новый Структура;
	отбор.Вставить("Автоматически",Ложь);

	ОплатаПоставщикамТЧ = ОплатаПоставщикам.Выгрузить(Отбор);
	НоваяТЧ = ОплатаПоставщикамТЧ.Скопировать();
	НоваяТЧ.Очистить();
	
	Для каждого стр из ОплатаПоставщикамТЧ цикл
		
		Нов  = НоваяТЧ.Добавить();
		ЗаполнитьЗначенияСвойств(Нов,Стр);
		
		Нов2 = НоваяТЧ.Добавить();
		Нов2.Автоматически = истина; 
		Нов2.Менеджер = стр.Менеджер;
		Нов2.Разрез1 =  стр.Разрез1;
		Нов2.Разрез2 =  стр.Разрез2;
		//Нов2.ВходнаяЦена = стр.ВходнаяЦена;
		
	КонецЦикла;
	
	ОплатаПоставщикам.Очистить();
	ОплатаПоставщикам.Загрузить(НоваяТЧ);
	
	//Заказы
	
	Запрос = Новый Запрос;
	запрос.УстановитьПараметр("Дата1",ПериодПланирования.ДатаНачала);
	запрос.УстановитьПараметр("Дата2",ПериодПланирования.ДатаКонца);
	запрос.УстановитьПараметр("ДатаРасчета",ПериодПланирования.датарасчетаНачальныхостатков);
	запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПоставщикуПлановыеДопРасходы.Ссылка,
	               |	СУММА(ЗаказПоставщикуПлановыеДопРасходы.СуммаУпр) КАК СуммаУпр,
	               |	ЗаказПоставщикуПлановыеДопРасходы.ДатаПлатежа
	               |ПОМЕСТИТЬ ДопРасходыПоДатам
	               |ИЗ
	               |	Документ.ЗаказПоставщику.ПлановыеДопРасходы КАК ЗаказПоставщикуПлановыеДопРасходы
	               |ГДЕ
	               |	ЗаказПоставщикуПлановыеДопРасходы.ДатаПлатежа МЕЖДУ &дата1 И &дата2
	               |	И ЗаказПоставщикуПлановыеДопРасходы.Ссылка.Проведен = ИСТИНА
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказПоставщикуПлановыеДопРасходы.Ссылка,
	               |	ЗаказПоставщикуПлановыеДопРасходы.ДатаПлатежа
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказПоставщикуТовары.Ссылка,
	               |	СУММА(ЗаказПоставщикуТовары.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ ОбщееКоличествоПоЗаказам
	               |ИЗ
	               |	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	               |ГДЕ
	               |	ЗаказПоставщикуТовары.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ДопРасходыПоДатам.Ссылка КАК ссылка
	               |			ИЗ
	               |				ДопРасходыПоДатам КАК ДопРасходыПоДатам)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказПоставщикуТовары.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказПоставщикуТовары.Ссылка,
	               |	ЗаказПоставщикуТовары.Номенклатура.НоменклатурнаяГруппа,
	               |	ЗаказПоставщикуТовары.Номенклатура.Производитель,
	               |	СУММА(ЗаказПоставщикуТовары.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ ВсеЗаказы
	               |ИЗ
	               |	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	               |ГДЕ
	               |	ЗаказПоставщикуТовары.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ДопРасходыПоДатам.Ссылка КАК ссылка
	               |			ИЗ
	               |				ДопРасходыПоДатам КАК ДопРасходыПоДатам)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказПоставщикуТовары.Ссылка,
	               |	ЗаказПоставщикуТовары.Номенклатура.НоменклатурнаяГруппа,
	               |	ЗаказПоставщикуТовары.Номенклатура.Производитель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	               |	ЗаказыПоставщикамОстатки.Номенклатура.Производитель КАК Производитель,
	               |	ЗаказыПоставщикамОстатки.СуммаУпрОстаток КАК Сумма,
	               |	НАЧАЛОПЕРИОДА(ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления, МЕСЯЦ) КАК ДатаПоступления
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДатаРасчета, ) КАК ЗаказыПоставщикамОстатки
	               |ГДЕ
	               |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления МЕЖДУ &дата1 И &дата2
	               |	И ЗаказыПоставщикамОстатки.СуммаУпрОстаток > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПоставщикамОстатки.Номенклатура.НоменклатурнаяГруппа,
	               |	ЗаказыПоставщикамОстатки.Номенклатура.Производитель,
	               |	НАЧАЛОПЕРИОДА(ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления, МЕСЯЦ),
	               |	ЗаказыПоставщикамОстатки.СуммаУпрОстаток
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВсеЗаказы.НоменклатураНоменклатурнаяГруппа,
	               |	ВсеЗаказы.НоменклатураПроизводитель,
	               |	ВЫБОР
	               |		КОГДА ОбщееКоличествоПоЗаказам.Сумма = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ДопРасходыПоДатам.СуммаУпр / ОбщееКоличествоПоЗаказам.Сумма * ВсеЗаказы.Сумма
	               |	КОНЕЦ,
	               |	НАЧАЛОПЕРИОДА(ДопРасходыПоДатам.ДатаПлатежа, МЕСЯЦ)
	               |ИЗ
	               |	ДопРасходыПоДатам КАК ДопРасходыПоДатам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОбщееКоличествоПоЗаказам КАК ОбщееКоличествоПоЗаказам
	               |		ПО ДопРасходыПоДатам.Ссылка = ОбщееКоличествоПоЗаказам.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаказы КАК ВсеЗаказы
	               |		ПО ДопРасходыПоДатам.Ссылка = ВсеЗаказы.Ссылка";
				   
	Рез = запрос.Выполнить().Выгрузить();
	
	соответствие = Новый Соответствие;
	соответствие.Вставить(ПериодПланирования.ДатаНачала,"1");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,1),"2");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,2),"3");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,3),"4");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,4),"5");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,5),"6");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,6),"7");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,7),"8");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,8),"9");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,9),"10");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,10),"11");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,11),"12");

	
	Для каждого стр из Рез Цикл
		Отбор = НОвый Структура;
		отбор.Вставить("Разрез1",стр.НоменклатурнаяГруппа);
		отбор.Вставить("Разрез2",стр.Производитель);
		отбор.Вставить("Автоматически",истина);
		
		НаборСтрок = ОплатаПоставщикам.НайтиСтроки(Отбор);
		
		если НаборСтрок.Количество()=0 тогда
			Отбор = НОвый Структура;
		    отбор.Вставить("Разрез1",стр.НоменклатурнаяГруппа);
			отбор.Вставить("Автоматически",истина);
		    НаборСтрок = ОплатаПоставщикам.НайтиСтроки(Отбор);
		КонецЕсли;
		
		Если НаборСтрок.Количество() = 0 Тогда
			Продолжить;
		Иначе
			Для каждого стр11 из НаборСтрок Цикл
				стр11["Месяц"+соответствие.Получить(стр.ДатаПоступления)+ "Сумма"]  = стр11["Месяц"+соответствие.Получить(стр.ДатаПоступления)+ "Сумма"] + стр.Сумма;
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	
	ПересчетВсего();

КонецПроцедуры

Процедура КоманднаяПанель5ЗаполнитьПоДебиторке(Кнопка)
	Отбор = Новый Структура;
	отбор.Вставить("Автоматически",Ложь);

	ПриходДенегТЧ = ПриходДенег.Выгрузить(Отбор);
	НоваяТЧ = ПриходДенегТЧ.Скопировать();
	НоваяТЧ.Очистить();
	
	Для каждого стр из ПриходДенегТЧ цикл
		
		Нов  = НоваяТЧ.Добавить();
		ЗаполнитьЗначенияСвойств(Нов,Стр);
		
		Нов2 = НоваяТЧ.Добавить();
		Нов2.Автоматически = истина; 
		Нов2.Менеджер = стр.Менеджер;
		Нов2.Разрез1 =  стр.Разрез1;
		Нов2.Разрез2 =  стр.Разрез2;
		
	КонецЦикла;
	
	ПриходДенег.Очистить();
	ПриходДенег.Загрузить(НоваяТЧ);
	
	Запрос = Новый Запрос;
	запрос.УстановитьПараметр("ПоЗаказам",Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам);
	запрос.УстановитьПараметр("Дата2",ПериодПланирования.ДатаКонца);
	запрос.УстановитьПараметр("КонДата",ПериодПланирования.датарасчетаНачальныхостатков);
	запрос.УстановитьПараметр("датаПустая",Дата(1,1,1));	

	запрос.Текст = "ВЫБРАТЬ
	               |	ДТГ.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	               |	ДТГ.Номенклатура.Производитель КАК Производитель,
	               |	СУММА(ДТГ.Сумма) КАК Сумма,
	               |	НАЧАЛОПЕРИОДА(ДТГ.Сделка.ДатаОплаты, МЕСЯЦ) КАК ДатаПоступления
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток > 0
	               |				ТОГДА ""Дебиторка""
	               |			ИНАЧЕ ""Кредиторка""
	               |		КОНЕЦ КАК Вид,
	               |		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	               |		ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |		ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
	               |		Заказы.Номенклатура КАК Номенклатура,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(Заказы.СуммаДокумента, 0) = 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВзаиморасчетыСКонтрагентамиОстатки.Сделка.СуммаВключаетНДС
	               |						ТОГДА ВЫРАЗИТЬ(Заказы.Сумма / Заказы.Сделка.СуммаДокумента * ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК ЧИСЛО(15, 2))
	               |					ИНАЧЕ ВЫРАЗИТЬ((Заказы.Сумма + Заказы.СуммаНДС) / Заказы.Сделка.СуммаДокумента * ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК ЧИСЛО(15, 2))
	               |				КОНЕЦ
	               |		КОНЕЦ КАК Сумма
	               |	ИЗ
	               |		РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&КонДата, ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам) КАК ВзаиморасчетыСКонтрагентамиОстатки
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				А.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |				А.Сделка КАК Сделка,
	               |				А.Номенклатура КАК Номенклатура,
	               |				СУММА(А.Сумма) КАК Сумма,
	               |				СУММА(А.СуммаНДС) КАК СуммаНДС,
	               |				СУММА(А.СуммаДокумента) КАК СуммаДокумента
	               |			ИЗ
	               |				(ВЫБРАТЬ
	               |					ЗаказПокупателяТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |					ЗаказПокупателяТовары.Ссылка КАК Сделка,
	               |					ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	               |					ЗаказПокупателяТовары.Сумма КАК Сумма,
	               |					ЗаказПокупателяТовары.СуммаНДС КАК СуммаНДС,
	               |					ЗаказПокупателяТовары.Ссылка.СуммаДокумента КАК СуммаДокумента
	               |				ИЗ
	               |					Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					ЗаказПоставщикуТовары.Ссылка.ДоговорКонтрагента,
	               |					ЗаказПоставщикуТовары.Ссылка,
	               |					ЗаказПоставщикуТовары.Номенклатура,
	               |					ЗаказПоставщикуТовары.Сумма,
	               |					ЗаказПоставщикуТовары.СуммаНДС,
	               |					ЗаказПоставщикуТовары.Ссылка.СуммаДокумента
	               |				ИЗ
	               |					Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары) КАК А
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				А.ДоговорКонтрагента,
	               |				А.Сделка,
	               |				А.Номенклатура) КАК Заказы
	               |			ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = Заказы.ДоговорКонтрагента
	               |				И ВзаиморасчетыСКонтрагентамиОстатки.Сделка = Заказы.Сделка) КАК ДТГ
	               |ГДЕ
	               |	ДТГ.Вид = ""Дебиторка""
	               |	И ДТГ.Сделка.ДатаОплаты <> &датаПустая
	               |	И ДТГ.Сделка.ДатаОплаты <= &дата2
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДТГ.Номенклатура.НоменклатурнаяГруппа,
	               |	ДТГ.Номенклатура.Производитель,
	               |	НАЧАЛОПЕРИОДА(ДТГ.Сделка.ДатаОплаты, МЕСЯЦ)";
				   
	Рез = запрос.Выполнить().Выгрузить();
	
	соответствие = Новый Соответствие;
	соответствие.Вставить(ПериодПланирования.ДатаНачала,"1");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,1),"2");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,2),"3");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,3),"4");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,4),"5");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,5),"6");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,6),"7");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,7),"8");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,8),"9");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,9),"10");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,10),"11");
	соответствие.Вставить(ДобавитьМесяц(ПериодПланирования.ДатаНачала,11),"12");

	
	Для каждого стр из Рез Цикл
		Отбор = НОвый Структура;
		отбор.Вставить("Разрез1",стр.НоменклатурнаяГруппа);
		отбор.Вставить("Разрез2",стр.Производитель);
		отбор.Вставить("Автоматически",истина);
		
		НаборСтрок = ПриходДенег.НайтиСтроки(Отбор);
		
		если НаборСтрок.Количество()=0 тогда
			Отбор = НОвый Структура;
		    отбор.Вставить("Разрез1",стр.НоменклатурнаяГруппа);
			отбор.Вставить("Автоматически",истина);
		    НаборСтрок = ПриходДенег.НайтиСтроки(Отбор);
		КонецЕсли;
		
		Если НаборСтрок.Количество() = 0 Тогда
			Продолжить;
		Иначе
			Для каждого стр11 из НаборСтрок Цикл
				Если стр.ДатаПоступления < ПериодПланирования.ДатаНачала Тогда
				    стр11["Месяц1Сумма"]  = стр11["Месяц1Сумма"] + стр.Сумма;
				иначе
					стр11["Месяц"+соответствие.Получить(стр.ДатаПоступления)+ "Сумма"]  = стр11["Месяц"+соответствие.Получить(стр.ДатаПоступления)+ "Сумма"] + стр.Сумма;
				КонецЕсли; 
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	
	ПересчетВсего();
КонецПроцедуры

Процедура ДействияФормыДействие6(Кнопка)
	
	ФормаВыбрать = Документы.БюджетДоходов.ПолучитьФормуВыбора();
	пам = ФормаВыбрать.ОткрытьМодально();
	
	Склад.Очистить();
	Поступления.Очистить();
	ПланПродаж.Очистить();
	ОплатаПоставщикам.Очистить();
	ПриходДенег.Очистить();
	Бонусы.Очистить();
	
	КЧ = Новый КвалификаторыЧисла(12,2);
	Массив = Новый Массив;
    Массив.Очистить();
    Массив.Добавить(Тип("Число"));
    ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	
	//ПериодПланирования = пам.ПериодПланирования;
	
	Если Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланирования.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланирования.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	ДатаН = ПериодПланирования.ДатаНачала;
	
	Соответствие = Новый Соответствие;
	
	ТЗ1 = Новый ТаблицаЗначений;
	ТЗ1.Колонки.Добавить("Год",ОписаниеТиповЧ);
	ТЗ1.Колонки.Добавить("Месяц",ОписаниеТиповЧ);
	ТЗ1.Колонки.Добавить("Колонка",ОписаниеТиповЧ);
	
	Для ии = 1 по КоличествоМесяцев Цикл
		ДатаК = ДобавитьМесяц(ДатаН,ии-1);
		//Соответствие.Вставить(Число(Формат(ДатаК,"ДФ=MM")),ии);
		
		Нов = ТЗ1.Добавить();
		Нов.Год  = Число(Формат(ДатаК,"ДФ=yyyy"));
		Нов.Месяц  = Число(Формат(ДатаК,"ДФ=MM"));
		Нов.Колонка  = ии;	
	КонецЦикла;     
	
	ПериодПланированияСтарый = пам.ПериодПланирования;
	
	Если Число(Формат(ПериодПланированияСтарый.ДатаНачала,"ДФ=yyyy")) = Число(Формат(ПериодПланированияСтарый.ДатаКонца,"ДФ=yyyy")) Тогда	
		КоличествоМесяцев = Число(Формат(ПериодПланированияСтарый.ДатаКонца,"ДФ=MM")) - Число(Формат(ПериодПланированияСтарый.ДатаНачала,"ДФ=MM")) +1;
	иначе
		КоличествоМесяцев = 12 - Число(Формат(ПериодПланированияСтарый.ДатаНачала,"ДФ=MM")) +1 + Число(Формат(ПериодПланированияСтарый.ДатаКонца,"ДФ=MM"));
	КонецЕсли;
	
	ДатаН = ПериодПланированияСтарый.ДатаНачала;
	
	Соответствие2 = Новый Соответствие;
	
	ТЗ2 = Новый ТаблицаЗначений;
	ТЗ2.Колонки.Добавить("Месяц",ОписаниеТиповЧ);
	ТЗ2.Колонки.Добавить("Колонка",ОписаниеТиповЧ);
	ТЗ2.Колонки.Добавить("Год",ОписаниеТиповЧ);

	
	Для ии = 1 по КоличествоМесяцев Цикл
		ДатаК = ДобавитьМесяц(ДатаН,ии-1);
		//Соответствие2.Вставить(Число(Формат(ДатаК,"ДФ=MM")),ии);	
		
		Нов = ТЗ2.Добавить();
		Нов.Год  = Число(Формат(ДатаК,"ДФ=yyyy"));
		Нов.Месяц  = Число(Формат(ДатаК,"ДФ=MM"));
		Нов.Колонка  = ии;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ1",ТЗ1);
	Запрос.УстановитьПараметр("ТЗ2",ТЗ2);
	запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ1.Год,
	               |	ТЗ1.Месяц,
	               |	ТЗ1.Колонка
	               |ПОМЕСТИТЬ период1
	               |ИЗ
	               |	&ТЗ1 КАК ТЗ1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗ2.Год,
	               |	ТЗ2.Месяц,
	               |	ТЗ2.Колонка
	               |ПОМЕСТИТЬ период2
	               |ИЗ
	               |	&ТЗ2 КАК ТЗ2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	период1.Колонка КАК КолонкаПериод1,
	               |	период2.Колонка КАК КолонкаПериод2
	               |ИЗ
	               |	период1 КАК период1
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ период2 КАК период2
	               |		ПО период1.Год = период2.Год
	               |			И период1.Месяц = период2.Месяц";
				   
	рез = запрос.Выполнить().Выгрузить();
	
	Для каждого стр из пам.Склад Цикл
		
		Нов = Склад.Добавить();
		Нов.Менеджер = стр.Менеджер;
		Нов.Разрез1 =  стр.Разрез1;
		Нов.Разрез2 =  стр.Разрез2;

	КонецЦикла;
	
	Для каждого стр из пам.Поступления Цикл
		
		Нов = Поступления.Добавить();
		Нов.Менеджер = стр.Менеджер;
		Нов.Разрез1 =  стр.Разрез1;
		Нов.Разрез2 =  стр.Разрез2;
		Нов.ВходнаяЦена = стр.ВходнаяЦена;
		
		Для каждого стр11 из рез Цикл
			
			Нов["Месяц"+Строка(стр11.КолонкаПериод1)+"Количество"] = стр["Месяц"+Строка(стр11.КолонкаПериод2)+"Количество"];
			Нов["Месяц"+Строка(стр11.КолонкаПериод1)+"Сумма"] = стр["Месяц"+Строка(стр11.КолонкаПериод2)+"Сумма"];
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого стр из пам.ПланПродаж Цикл
		
		Нов = ПланПродаж.Добавить();
		Нов.Менеджер = стр.Менеджер;
		Нов.Разрез1 =  стр.Разрез1;
		Нов.Разрез2 =  стр.Разрез2;
		Нов.Наценка = стр.Наценка;
		
		Для каждого стр11 из рез Цикл
			
			Нов["Месяц"+Строка(стр11.КолонкаПериод1)+"Количество"] = стр["Месяц"+Строка(стр11.КолонкаПериод2)+"Количество"];
			Нов["Месяц"+Строка(стр11.КолонкаПериод1)+"Сумма"] = стр["Месяц"+Строка(стр11.КолонкаПериод2)+"Сумма"];
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого стр из пам.ОплатаПоставщикам Цикл
		
		Нов = ОплатаПоставщикам.Добавить();
		Нов.Менеджер = стр.Менеджер;
		Нов.Разрез1 =  стр.Разрез1;
		Нов.Разрез2 =  стр.Разрез2;
		
		Для каждого стр11 из рез Цикл
			
			Нов["Месяц"+Строка(стр11.КолонкаПериод1)+"Сумма"] = стр["Месяц"+Строка(стр11.КолонкаПериод2)+"Сумма"];
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого стр из пам.ПриходДенег Цикл
		
		Нов = ПриходДенег.Добавить();
		Нов.Менеджер = стр.Менеджер;
		Нов.Разрез1 =  стр.Разрез1;
		Нов.Разрез2 =  стр.Разрез2;
		
		Для каждого стр11 из рез Цикл
			
			Нов["Месяц"+Строка(стр11.КолонкаПериод1)+"Сумма"] = стр["Месяц"+Строка(стр11.КолонкаПериод2)+"Сумма"];
			
		КонецЦикла;
		
	КонецЦикла;



КонецПроцедуры

Процедура ЗаполнитьНажатие(Элемент)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	БюджетДоходовПланПродаж.Разрез1 КАК НомГруппа,
		|	СУММА(ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц1Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц2Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц3Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц4Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц5Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц6Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц7Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц8Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц9Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц10Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц11Количество, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц12Количество, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц1Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц2Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц3Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц4Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц5Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц6Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц7Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц8Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц9Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц10Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц11Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц12Сумма, 0)) КАК Сумма,
		|	СУММА((ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц1Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц2Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц3Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц4Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц5Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц6Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц7Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц8Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц9Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц10Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц11Сумма, 0) + ЕСТЬNULL(БюджетДоходовПланПродаж.Месяц12Сумма, 0)) * БюджетДоходовПланПродаж.Наценка / (100 + БюджетДоходовПланПродаж.Наценка)) КАК СуммаНаценки
		|ПОМЕСТИТЬ Док
		|ИЗ
		|	Документ.БюджетДоходов.ПланПродаж КАК БюджетДоходовПланПродаж
		|ГДЕ
		|	БюджетДоходовПланПродаж.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетДоходовПланПродаж.Разрез1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПолугодовойПланДепертаментаПродаж.НоменклатурнаяГруппа,
		|	ПолугодовойПланДепертаментаПродаж.НаправлениеПродаж.Подразделение,
		|	СУММА(ПолугодовойПланДепертаментаПродаж.КоличествоПлан) КАК КоличествоПлан,
		|	СУММА(ПолугодовойПланДепертаментаПродаж.СуммаПлан) КАК СуммаПлан,
		|	СУММА(ПолугодовойПланДепертаментаПродаж.Количество) КАК Количество,
		|	СУММА(ПолугодовойПланДепертаментаПродаж.СуммаНаценкиПлан) КАК СуммаНаценкиПлан,
		|	ПолугодовойПланДепертаментаПродаж.НоменклатурнаяГруппа.Родитель
		|ПОМЕСТИТЬ План
		|ИЗ
		|	РегистрСведений.ПолугодовойПланДепертаментаПродаж КАК ПолугодовойПланДепертаментаПродаж
		|ГДЕ
		|	ПолугодовойПланДепертаментаПродаж.ПериодПланирования = &ПериодПланирования
		|	И ПолугодовойПланДепертаментаПродаж.НоменклатурнаяГруппа.Ответственный = &Менеджер
		|
		|СГРУППИРОВАТЬ ПО
		|	ПолугодовойПланДепертаментаПродаж.НоменклатурнаяГруппа,
		|	ПолугодовойПланДепертаментаПродаж.НаправлениеПродаж.Подразделение,
		|	ПолугодовойПланДепертаментаПродаж.НоменклатурнаяГруппа.Родитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	План.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	План.НаправлениеПродажПодразделение КАК Подразделение,
		|	План.КоличествоПлан КАК ПланПодразделения,
		|	План.СуммаПлан КАК СуммаПодразделения,
		|	ВЫБОР
		|		КОГДА План.СуммаПлан - План.СуммаНаценкиПлан = 0
		|			ТОГДА 0
		|		ИНАЧЕ План.СуммаНаценкиПлан / (План.СуммаПлан - План.СуммаНаценкиПлан) * 100
		|	КОНЕЦ КАК ПроцентНаценкиПодразделения,
		|	Док.НомГруппа КАК НГ,
		|	Док.Сумма КАК СуммаРТГ,
		|	ВЫБОР
		|		КОГДА Док.Сумма - Док.СуммаНаценки = 0
		|			ТОГДА 0
		|		ИНАЧЕ Док.СуммаНаценки / (Док.Сумма - Док.СуммаНаценки) * 100
		|	КОНЕЦ КАК ПроцНаценкиРТГ,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(План.Количество, 0) = 0
		|			ТОГДА 100
		|		ИНАЧЕ (План.КоличествоПлан - План.Количество) / План.Количество * 100
		|	КОНЕЦ КАК Прирост,
		|	Док.Количество КАК ПланРТГ,
		|	План.НоменклатурнаяГруппаРодитель КАК ПапкаНоменклатурнойГруппы,
		|	План.Количество КАК КоличествоП,
		|	План.СуммаНаценкиПлан,
		|	Док.СуммаНаценки
		|ИЗ
		|	Док КАК Док
		|		ПОЛНОЕ СОЕДИНЕНИЕ План КАК План
		|		ПО (ВЫБОР
		|				КОГДА Док.НомГруппа.ЭтоГруппа
		|					ТОГДА Док.НомГруппа = План.НоменклатурнаяГруппаРодитель
		|				ИНАЧЕ Док.НомГруппа = План.НоменклатурнаяГруппа
		|			КОНЕЦ)
		|ИТОГИ
		|	СУММА(ПланПодразделения),
		|	СУММА(СуммаПодразделения),
		|	ВЫБОР
		|		КОГДА СУММА(СуммаПодразделения) - СУММА(План.СуммаНаценкиПлан) = 0
		|			ТОГДА 0
		|		ИНАЧЕ СУММА(План.СуммаНаценкиПлан) / (СУММА(СуммаПодразделения) - СУММА(План.СуммаНаценкиПлан)) * 100
		|	КОНЕЦ КАК ПроцентНаценкиПодразделения,
		|	МАКСИМУМ(НГ),
		|	МАКСИМУМ(СуммаРТГ),
		|	ВЫБОР
		|		КОГДА СУММА(СуммаРТГ) - СУММА(Док.СуммаНаценки) = 0
		|			ТОГДА 0
		|		ИНАЧЕ СУММА(Док.СуммаНаценки) / (СУММА(СуммаРТГ) - СУММА(Док.СуммаНаценки)) * 100
		|	КОНЕЦ КАК ПроцНаценкиРТГ,
		|	ВЫБОР
		|		КОГДА СУММА(КоличествоП) = 0
		|			ТОГДА 0
		|		ИНАЧЕ (СУММА(ПланПодразделения) - СУММА(КоличествоП)) / СУММА(КоличествоП) * 100
		|	КОНЕЦ КАК Прирост,
		|	МАКСИМУМ(ПланРТГ)
		|ПО
		|	ПапкаНоменклатурнойГруппы,
		|	НоменклатурнаяГруппа";

	Запрос.УстановитьПараметр("Менеджер", Ответственный);
	Запрос.УстановитьПараметр("ПериодПланирования", ПериодПланирования);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	ПланыПодразделений = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

	для каждого стр из ПланыПодразделений.Строки цикл
		Если стр.НГ.этоГруппа = Ложь тогда
			ПланРТГ =0;
			СуммаРТГ =0;
			Для каждого ст из стр.строки цикл
				ПланРТГ =ст.ПланРТГ;
				СуммаРТГ =ст.СуммаРТГ;
			конецЦикла;
			стр.ПланРТГ =ПланРТГ;
			стр.СуммаРТГ =СуммаРТГ;
		конецЕсли;	
		Если стр.НГ.этоГруппа = Истина тогда
			Для каждого ст из стр.строки цикл
				ст.ПланРТГ=0;
				ст.СуммаРТГ=0;
				ст.ПроцНаценкиРТГ =0;
				Для каждого с из ст.строки цикл
					с.ПланРТГ=0;
					с.СуммаРТГ=0;
					с.ПроцНаценкиРТГ =0;
				конецЦикла;
			конецЦикла;
		конецЕсли;	
	конецЦикла;	
КонецПроцедуры

Процедура ПланыПодразделенийПриПолученииДанных(Элемент, ОформленияСтрок)
	//Для каждого ОформлениеСтроки из Оформлениястрок Цикл
	//	Если ОформлениеСтроки.ДанныеСтроки.НГ.ЭтоГруппа = Истина Тогда
	//		//Для каждого яч из ОформлениеСтроки.ячейки	Цикл
	//		//	Яч.ТолькоПросмотр = Истина;
	//		//	Яч.Шрифт =  Новый Шрифт(,,Истина,,);
	//		
	//		//конецЦикла;
	//		ОформлениеСтроки.Ячейки.ПрошлыйГод.Видимость = ЛожЬ; 	
	//		ОформлениеСтроки.Ячейки.ТекущийГод.Видимость = ЛожЬ; 
	//	конецЕсли;	
	//	
	//конецЦикла;	

КонецПроцедуры

Процедура Кнопка1Нажатие1(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры


 РежимРедактированияФормулыФ = ложь;
 ЯчейкаДляФормулы = неопределено;


