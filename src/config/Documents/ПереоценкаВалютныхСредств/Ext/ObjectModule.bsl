Перем мВалютаРегламентированногоУчета Экспорт;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует таблицу данных с итогами по подотчетникам
//
Функция ПодготовитьТаблицуПоПодотчетникам(СтруктураШапкиДокумента)

	ЗапросПоДенежнымСредствам = Новый Запрос;
	ЗапросПоДенежнымСредствам.УстановитьПараметр("ДатаДокумента", Дата);
	ЗапросПоДенежнымСредствам.Текст = "
	|ВЫБРАТЬ 
	|	ВзаиморасчетыСПодотчетнымиЛицамиОстатки.ФизЛицо,
	|	ВзаиморасчетыСПодотчетнымиЛицамиОстатки.РасчетныйДокумент,
	|	ВзаиморасчетыСПодотчетнымиЛицамиОстатки.СуммаВзаиморасчетовОстаток  КАК СуммаВзаиморасчетовОстаток,
	|	ВзаиморасчетыСПодотчетнымиЛицамиОстатки.СуммаУпрОстаток             КАК СуммаУпрОстаток,
	|	ВзаиморасчетыСПодотчетнымиЛицамиОстатки.Валюта                      КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс                                        КАК КурсВалютыДенежныхСредств, 
	|	КурсыВалютСрезПоследних.Кратность                                   КАК КратностьВалютыДенежныхСредств 
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Остатки(&ДатаДокумента,) КАК ВзаиморасчетыСПодотчетнымиЛицамиОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента,) КАК КурсыВалютСрезПоследних
	|ПО
	|	КурсыВалютСрезПоследних.Валюта = ВзаиморасчетыСПодотчетнымиЛицамиОстатки.Валюта";
	Выборка = ЗапросПоДенежнымСредствам.Выполнить().Выгрузить();

	Выборка.Колонки.Добавить("СуммаУпр");

	Для каждого СтрокаТаблицы из Выборка Цикл

		Если Не СтрокаТаблицы.КурсВалютыДенежныхСредств=NULL Тогда 
		
		СтрокаТаблицы.СуммаУпр = ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.СуммаВзаиморасчетовОстаток, СтрокаТаблицы.Валюта,
													СтруктураШапкиДокумента.ВалютаУправленческогоУчета, 
													СтрокаТаблицы.КурсВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КурсВалютыУправленческогоУчета,
													СтрокаТаблицы.КратностьВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КратностьВалютыУправленческогоУчета) - 
													СтрокаТаблицы.СуммаУпрОстаток;
		КонецЕсли;											
		
		КонецЦикла;

	Возврат Выборка;

КонецФункции

// Формирует таблицу данных с итогами по взаиморасчетам
//
Функция ПодготовитьТаблицуПоВзаиморасчетам(СтруктураШапкиДокумента)

	ЗапросПоДенежнымСредствам = Новый Запрос;
	ЗапросПоДенежнымСредствам.УстановитьПараметр("ДатаДокумента", Дата);
	ЗапросПоДенежнымСредствам.Текст = "
	|ВЫБРАТЬ 
	|	ВзаиморасчетысКонтрагентамиОстатки.ДоговорКонтрагента,
	|	ВзаиморасчетысКонтрагентамиОстатки.Сделка,
	|	ВзаиморасчетысКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток,
	|	ВзаиморасчетысКонтрагентамиОстатки.СуммаУпрОстаток            КАК СуммаУпрОстаток,
	|	ВзаиморасчетысКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс                                  КАК КурсВалютыДенежныхСредств, 
	|	КурсыВалютСрезПоследних.Кратность                             КАК КратностьВалютыДенежныхСредств 
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетысКонтрагентами.Остатки(&ДатаДокумента,) КАК ВзаиморасчетысКонтрагентамиОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента,) КАК КурсыВалютСрезПоследних
	|ПО
	|	КурсыВалютСрезПоследних.Валюта = ВзаиморасчетысКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов";

	Выборка = ЗапросПоДенежнымСредствам.Выполнить().Выгрузить();

	Выборка.Колонки.Добавить("СуммаУпр");

	Для каждого СтрокаТаблицы из Выборка Цикл
		
		Если Не СтрокаТаблицы.КурсВалютыДенежныхСредств=NULL Тогда 
		
		СтрокаТаблицы.СуммаУпр = ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.СуммаВзаиморасчетовОстаток, СтрокаТаблицы.Валюта,
													СтруктураШапкиДокумента.ВалютаУправленческогоУчета, 
													СтрокаТаблицы.КурсВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КурсВалютыУправленческогоУчета,
													СтрокаТаблицы.КратностьВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КратностьВалютыУправленческогоУчета) - 
													СтрокаТаблицы.СуммаУпрОстаток;
													
		КонецЕсли;											
		
	КонецЦикла;

	Возврат Выборка;

КонецФункции

// Формирует таблицу данных с итогами по расчетам
//
Функция ПодготовитьТаблицуПоРасчетам(СтруктураШапкиДокумента)

	ЗапросПоДенежнымСредствам = Новый Запрос;
	ЗапросПоДенежнымСредствам.УстановитьПараметр("ДатаДокумента", Дата);
	ЗапросПоДенежнымСредствам.Текст = "
	|ВЫБРАТЬ 
	|	ВзаиморасчетысКонтрагентамиОстатки.ДоговорКонтрагента,
	|	ВзаиморасчетысКонтрагентамиОстатки.Сделка,
	|	ВзаиморасчетысКонтрагентамиОстатки.РасчетыВозврат,
	|	ВзаиморасчетысКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток,
	|	ВзаиморасчетысКонтрагентамиОстатки.СуммаУпрОстаток            КАК СуммаУпрОстаток,
	|	ВзаиморасчетысКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс                                  КАК КурсВалютыДенежныхСредств, 
	|	КурсыВалютСрезПоследних.Кратность                             КАК КратностьВалютыДенежныхСредств 
	|ИЗ
	|	РегистрНакопления.РасчетысКонтрагентами.Остатки(&ДатаДокумента,) КАК ВзаиморасчетысКонтрагентамиОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента,) КАК КурсыВалютСрезПоследних
	|ПО
	|	КурсыВалютСрезПоследних.Валюта = ВзаиморасчетысКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов";
	Выборка = ЗапросПоДенежнымСредствам.Выполнить().Выгрузить();

	Выборка.Колонки.Добавить("СуммаУпр");

	Для каждого СтрокаТаблицы из Выборка Цикл

		Если Не СтрокаТаблицы.КурсВалютыДенежныхСредств=NULL Тогда 
		
		СтрокаТаблицы.СуммаУпр = ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.СуммаВзаиморасчетовОстаток, СтрокаТаблицы.Валюта,
													СтруктураШапкиДокумента.ВалютаУправленческогоУчета, 
													СтрокаТаблицы.КурсВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КурсВалютыУправленческогоУчета,
													СтрокаТаблицы.КратностьВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КратностьВалютыУправленческогоУчета) - 
													СтрокаТаблицы.СуммаУпрОстаток;
        КонецЕсли;
													
	КонецЦикла;

	Возврат Выборка;

КонецФункции

// Формирует таблицу данных с итогами по денежным средствам
//
Функция ПодготовитьТаблицуПоДенежнымСредствам(СтруктураШапкиДокумента)

	ЗапросПоДенежнымСредствам = Новый Запрос;
	ЗапросПоДенежнымСредствам.УстановитьПараметр("ДатаДокумента", Дата);
	ЗапросПоДенежнымСредствам.Текст = "
	|ВЫБРАТЬ
	|	ДенежныеСредстваОстатки.БанковскийСчетКасса,
	|	ДенежныеСредстваОстатки.ВидДенежныхСредств,
	|	ДенежныеСредстваОстатки.СуммаОстаток    КАК СуммаОстаток,
	|	ДенежныеСредстваОстатки.СуммаУпрОстаток КАК СуммаУпрОстаток,
	|	ДенежныеСредстваОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	КурсыВалютСрезПоследних.Курс            КАК КурсВалютыДенежныхСредств, 
	|	КурсыВалютСрезПоследних.Кратность       КАК КратностьВалютыДенежныхСредств 
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки(&ДатаДокумента,) КАК ДенежныеСредстваОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента,) КАК КурсыВалютСрезПоследних
	|ПО
	|	КурсыВалютСрезПоследних.Валюта = ДенежныеСредстваОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств";

	Если НЕ ДенежныеСредстваВКассах Тогда

		ЗапросПоДенежнымСредствам.Текст = ЗапросПоДенежнымСредствам.Текст + "
		|ГДЕ
		|	ДенежныеСредстваОстатки.БанковскийСчетКасса ССЫЛКА Справочник.БанковскиеСчета";

	ИначеЕсли НЕ ДенежныеСредстваНаБанковскихСчетах Тогда

		ЗапросПоДенежнымСредствам.Текст = ЗапросПоДенежнымСредствам.Текст + "
		|ГДЕ
		|	ДенежныеСредстваОстатки.БанковскийСчетКасса ССЫЛКА Справочник.Кассы";

	КонецЕсли;

	Выборка = ЗапросПоДенежнымСредствам.Выполнить().Выгрузить();

	Выборка.Колонки.Добавить("СуммаУпр");

	Для каждого СтрокаТаблицы из Выборка Цикл

		Если Не СтрокаТаблицы.КурсВалютыДенежныхСредств=NULL Тогда 
		
		СтрокаТаблицы.СуммаУпр = ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.СуммаОстаток, СтрокаТаблицы.ВалютаДенежныхСредств,
													СтруктураШапкиДокумента.ВалютаУправленческогоУчета, 
													СтрокаТаблицы.КурсВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КурсВалютыУправленческогоУчета,
													СтрокаТаблицы.КратностьВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КратностьВалютыУправленческогоУчета) - 
													СтрокаТаблицы.СуммаУпрОстаток;
        КонецЕсли;
													
	КонецЦикла;

	Возврат Выборка;

КонецФункции

// Формирует таблицу данных с итогами по денежным средствам
//
Функция ПодготовитьТаблицуПоДенежнымСредствамКПолучению(СтруктураШапкиДокумента)

	ЗапросПоДенежнымСредствам = Новый Запрос;
	ЗапросПоДенежнымСредствам.УстановитьПараметр("ДатаДокумента", Дата);
	ЗапросПоДенежнымСредствам.Текст = "
	|ВЫБРАТЬ
	|	ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса,
	|	ДенежныеСредстваКПолучениюОстатки.ВидДенежныхСредств,
	|	ДенежныеСредстваКПолучениюОстатки.ДокументПолучения,
	|	ДенежныеСредстваКПолучениюОстатки.СуммаОстаток    КАК СуммаОстаток,
	|	ДенежныеСредстваКПолучениюОстатки.СуммаУпрОстаток КАК СуммаУпрОстаток,
	|	ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	КурсыВалютСрезПоследних.Курс            КАК КурсВалютыДенежныхСредств, 
	|	КурсыВалютСрезПоследних.Кратность       КАК КратностьВалютыДенежныхСредств 
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКПолучению.Остатки(&ДатаДокумента,) КАК ДенежныеСредстваКПолучениюОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента,) КАК КурсыВалютСрезПоследних
	|ПО
	|	КурсыВалютСрезПоследних.Валюта = ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств";

	Если НЕ ДенежныеСредстваВКассах Тогда

		ЗапросПоДенежнымСредствам.Текст = ЗапросПоДенежнымСредствам.Текст + "
		|ГДЕ
		|	ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса ССЫЛКА Справочник.БанковскиеСчета";

	ИначеЕсли НЕ ДенежныеСредстваНаБанковскихСчетах Тогда

		ЗапросПоДенежнымСредствам.Текст = ЗапросПоДенежнымСредствам.Текст + "
		|ГДЕ
		|	ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса ССЫЛКА Справочник.Кассы";

	КонецЕсли;

	Выборка = ЗапросПоДенежнымСредствам.Выполнить().Выгрузить();

	Выборка.Колонки.Добавить("СуммаУпр");

	Для каждого СтрокаТаблицы из Выборка Цикл

		Если Не СтрокаТаблицы.КурсВалютыДенежныхСредств=NULL Тогда 
		
		СтрокаТаблицы.СуммаУпр = ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.СуммаОстаток, СтрокаТаблицы.ВалютаДенежныхСредств,
													СтруктураШапкиДокумента.ВалютаУправленческогоУчета, 
													СтрокаТаблицы.КурсВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КурсВалютыУправленческогоУчета,
													СтрокаТаблицы.КратностьВалютыДенежныхСредств, 
													СтруктураШапкиДокумента.КратностьВалютыУправленческогоУчета) - 
													СтрокаТаблицы.СуммаУпрОстаток;
        КонецЕсли;
	КонецЦикла;

	Возврат Выборка;

КонецФункции


Процедура ДвиженияПорегистрамВзаиморасчетыСПодотчетнымиЛицамиУпр(РежимПроведения, СтруктураШапкиДокумента, 
			ТаблицаПоПодотчетникам, Отказ, Заголовок)

	Если НЕ СтруктураШапкиДокумента.ВзаиморасчетыСПодотчетнымиЛицами Тогда
		Возврат;
	КонецЕсли;

	НаборДвижений   = Движения.ВзаиморасчетыСПодотчетнымиЛицами;

	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();

	// Заполним таблицу движений.
	ЗагрузитьВТаблицуЗначений(ТаблицаПоПодотчетникам, ТаблицаДвижений);

	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;

	Если Не Отказ Тогда
		Движения.ВзаиморасчетыСПодотчетнымиЛицами.ВыполнитьПриход();
	КонецЕсли;

КонецПроцедуры // ДвиженияПорегистрамВзаиморасчетыСПодотчетнымиЛицамиУпр()

Процедура ДвиженияПорегистрамВзаиморасчетыСКонтрагентамиУпр(РежимПроведения, СтруктураШапкиДокумента, 
			ТаблицаПоВзаиморасчетам,ТаблицаПоРасчетам, Отказ, Заголовок)

	Если НЕ СтруктураШапкиДокумента.ВзаиморасчетыСКонтрагентами Тогда
		Возврат;
	КонецЕсли;

	НаборДвижений = Движения.ВзаиморасчетыСКонтрагентами;

	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();

	// Заполним таблицу движений.
	ЗагрузитьВТаблицуЗначений(ТаблицаПоВзаиморасчетам, ТаблицаДвижений);

	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;

	Если Не Отказ Тогда
		Движения.ВзаиморасчетыСКонтрагентами.ВыполнитьПриход();
	КонецЕсли;

	НаборДвижений = Движения.РасчетыСКонтрагентами;

	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();

	// Заполним таблицу движений.
	ЗагрузитьВТаблицуЗначений(ТаблицаПоРасчетам, ТаблицаДвижений);

	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;

	Если Не Отказ Тогда
		Движения.РасчетыСКонтрагентами.ВыполнитьПриход();
	КонецЕсли;

КонецПроцедуры // ДвиженияПорегистрамВзаиморасчетыСПодотчетнымиЛицамиУпр()

// Формирует движения по денежным средствам
//
Процедура ДвиженияПорегистрамДенежныеСредстваУпр(РежимПроведения, СтруктураШапкиДокумента, 
			ТаблицаПоДенежнымСредствам,ТаблицаПоДенежнымСредствамКПолучению, Отказ, Заголовок)

	Если НЕ (СтруктураШапкиДокумента.ДенежныеСредстваВКассах ИЛИ СтруктураШапкиДокумента.ДенежныеСредстваНаБанковскихСчетах) Тогда
		Возврат;
	КонецЕсли;

	НаборДвижений = Движения.ДенежныеСредства;

	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();

	// Заполним таблицу движений.
	ЗагрузитьВТаблицуЗначений(ТаблицаПоДенежнымСредствам, ТаблицаДвижений);

	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;

	Если Не Отказ Тогда
		Движения.ДенежныеСредства.ВыполнитьПриход();
	КонецЕсли;

	НаборДвижений = Движения.ДенежныеСредстваКПолучению;

	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();

	// Заполним таблицу движений.
	ЗагрузитьВТаблицуЗначений(ТаблицаПоДенежнымСредствамКПолучению, ТаблицаДвижений);

	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;

	Если Не Отказ Тогда
		Движения.ДенежныеСредстваКПолучению.ВыполнитьПриход();
	КонецЕсли;

КонецПроцедуры // ДвиженияПорегистрамДенежныеСредстваУпр()

// По результату запроса по шапке документа формируем движения по регистрам.
//
// Параметры: 
//  РежимПроведения           - режим проведения документа (оперативный или неоперативный),
//  СтруктураШапкиДокумента   - выборка из результата запроса по шапке документа,
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, ТаблицаПоПодотчетникам, ТаблицаПоВзаиморасчетам, 
							ТаблицаПоРасчетам, ТаблицаПоДенежнымСредствам, ТаблицаПоДенежнымСредствамКПолучению, Отказ, Заголовок)

	ДвиженияПорегистрамВзаиморасчетыСПодотчетнымиЛицамиУпр(РежимПроведения, СтруктураШапкиДокумента, 
	                        ТаблицаПоПодотчетникам, Отказ, Заголовок);

	ДвиженияПорегистрамВзаиморасчетыСКонтрагентамиУпр(РежимПроведения, СтруктураШапкиДокумента, 
	                        ТаблицаПоВзаиморасчетам,ТаблицаПоРасчетам, Отказ, Заголовок);

	ДвиженияПорегистрамДенежныеСредстваУпр(РежимПроведения, СтруктураШапкиДокумента, 
	                        ТаблицаПоДенежнымСредствам, ТаблицаПоДенежнымСредствамКПолучению,  Отказ, Заголовок);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимЗаписи, РежимПроведения) 

	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;

	ТаблицаПоПодотчетникам     = Новый ТаблицаЗначений;
	ТаблицаПоВзаиморасчетам    = Новый ТаблицаЗначений;
	ТаблицаПоРасчетам          = Новый ТаблицаЗначений;
	ТаблицаПоДенежнымСредствам = Новый ТаблицаЗначений;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = "Проведение документа """ + СокрЛП(Ссылка) + """: ";

	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Заполним по шапке документа дерево параметров, нужных при проведении.
	ДеревоПолейЗапросаПоШапке = СформироватьДеревоПолейЗапросаПоШапке();
	ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "ВалютаУправленческогоУчета",     "ВалютаУправленческогоУчета");
	ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "КурсВалютыУправленческогоУчета", "КурсВалютыУправленческогоУчета");

	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа
	СтруктураШапкиДокумента = СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета);

	Если ВзаиморасчетыСПодотчетнымиЛицами Тогда
		ТаблицаПоПодотчетникам = ПодготовитьТаблицуПоПодотчетникам(СтруктураШапкиДокумента);
	КонецЕсли;

	Если ВзаиморасчетыСКонтрагентами Тогда
		ТаблицаПоВзаиморасчетам = ПодготовитьТаблицуПоВзаиморасчетам(СтруктураШапкиДокумента);
		ТаблицаПоРасчетам       = ПодготовитьТаблицуПоРасчетам(СтруктураШапкиДокумента);
	КонецЕсли;

	Если ДенежныеСредстваВКассах ИЛИ ДенежныеСредстваНаБанковскихСчетах Тогда
		ТаблицаПоДенежнымСредствам = ПодготовитьТаблицуПоДенежнымСредствам(СтруктураШапкиДокумента);
		ТаблицаПоДенежнымСредствамКПолучению = ПодготовитьТаблицуПоДенежнымСредствамКПолучению(СтруктураШапкиДокумента);
	КонецЕсли;

	// Движения по документу
	Если Не Отказ Тогда

		ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, ТаблицаПоПодотчетникам, ТаблицаПоВзаиморасчетам, 
		                    ТаблицаПоРасчетам, ТаблицаПоДенежнымСредствам, ТаблицаПоДенежнымСредствамКПолучению, Отказ, Заголовок);

	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ Отказ Тогда
	
		обЗаписатьПротоколИзменений(ЭтотОбъект);
	
	КонецЕсли; 

КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();