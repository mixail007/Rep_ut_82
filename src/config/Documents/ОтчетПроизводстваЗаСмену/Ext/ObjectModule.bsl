
процедура ПроверитьСуммуГотПрод(Отказ)
	delta = ГотоваяПродукция.Итог("Сумма") - (Материалы.Итог("Сумма")+ДопЗатраты.Итог("Сумма"));
	Если delta тогда
		Отказ = Истина;
		#Если Клиент тогда
		Сообщить("Сумма готовой продукции: "+строка(ГотоваяПродукция.Итог("Сумма"))
		+"р. отличается от суммы Материалов: "+строка(Материалы.Итог("Сумма"))
		+" и Доп.Затрат: "+строка(ДопЗатраты.Итог("Сумма"))+" на "+строка(delta)+"р.!", СтатусСообщения.Внимание);
		#КонецЕсли	
	КонецЕсли;	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	
	КачествоГотовойПродукции = справочники.Качество.Новый;
	
	ПроверитьСуммуГотПрод(Отказ);
	
	Если Отказ тогда
		возврат;
	КонецЕсли;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//1) регистр НезавершенноеПроизводство Расход
	Движения.НезавершенноеПроизводство.Записывать = Истина;
	Движения.НезавершенноеПроизводство.Очистить();
	Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
		Движение = Движения.НезавершенноеПроизводство.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаМатериалы.Номенклатура;
		Движение.Количество   = ТекСтрокаМатериалы.Количество;
		Движение.Сумма        = ТекСтрокаМатериалы.Сумма;     // сумма вторична!
	КонецЦикла;

	//2) регистр Затраты  - СТОРНО!
	Движения.Затраты.Записывать = Истина;
	Движения.Затраты.Очистить();
		Движение = Движения.Затраты.Добавить();
		Движение.Период = Дата;
		Движение.Подразделение = Подразделение;
		Движение.СтатьяЗатрат 	 = СтатьяМатЗатрат;
		Движение.СтатьяЗатратУпр = СтатьяМатЗатратУПР;
		Движение.НоменклатурнаяГруппа = НомГруппаЗатрат;
		Движение.Сумма = -Материалы.Итог("Сумма");
		
	//+++ доп.затраты - СТОРНО! +++	
	Для Каждого ТекСтрокаДопЗатрат Из ДопЗатраты Цикл
		Движение = Движения.Затраты.Добавить();
		Движение.Период = Дата;
		Движение.Подразделение = Подразделение;
		Движение.СтатьяЗатрат 	 = ТекСтрокаДопЗатрат.СтатьяЗатрат;
		Движение.СтатьяЗатратУпр = ТекСтрокаДопЗатрат.СтатьяЗатратУПР;
		Движение.НоменклатурнаяГруппа = НомГруппаЗатрат;
		Движение.Сумма = -ТекСтрокаДопЗатрат.Сумма;
	КонецЦикла;	
		
	//3) регистр ПартииТоваровНаСкладах Приход
	// сумма = сумма мат. + доп. затрат !
	Движения.ПартииТоваровНаСкладах.Записывать = Истина;
	Движения.ПартииТоваровНаСкладах.Очистить();
	Для Каждого ТекСтрокаГотоваяПродукция Из ГотоваяПродукция Цикл
		Движение = Движения.ПартииТоваровНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Склад  = СкладГотовойПродукции;
		Движение.Качество     = КачествоГотовойПродукции;
		Движение.Номенклатура = ТекСтрокаГотоваяПродукция.Номенклатура;
		Движение.Количество = ТекСтрокаГотоваяПродукция.Количество;
		Движение.Стоимость = ТекСтрокаГотоваяПродукция.Сумма;
	КонецЦикла;
    	
	//4) регистр ТоварыНаСкладах Приход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ТоварыНаСкладах.Очистить();
	Для Каждого ТекСтрокаГотоваяПродукция Из ГотоваяПродукция Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Склад  = СкладГотовойПродукции;
		Движение.Качество     = КачествоГотовойПродукции;
		Движение.Номенклатура = ТекСтрокаГотоваяПродукция.Номенклатура;
		Движение.Количество   = ТекСтрокаГотоваяПродукция.Количество;
	КонецЦикла;

	//5) регистр ТоварыОрганизаций Приход
	Движения.ТоварыОрганизаций.Записывать = Истина;
	Движения.ТоварыОрганизаций.Очистить();
	Для Каждого ТекСтрокаГотоваяПродукция Из ГотоваяПродукция Цикл
		Движение = Движения.ТоварыОрганизаций.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Качество     = КачествоГотовойПродукции;
		Движение.Номенклатура = ТекСтрокаГотоваяПродукция.Номенклатура;
		Движение.Количество   = ТекСтрокаГотоваяПродукция.Количество;
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		// Заполнение шапки
		Комментарий = "На основании Тр.Накл № "+ДанныеЗаполнения.Номер+" от "+формат(ДанныеЗаполнения.Дата,"ДЛФ=D");
		Организация   = ДанныеЗаполнения.Организация;
		Подразделение = ДанныеЗаполнения.Подразделение;
		
		СкладГотовойПродукции = ДанныеЗаполнения.Склад; //куда всё скинули...
		
		Для Каждого ТекСтрокаПродукция Из ДанныеЗаполнения.Продукция Цикл
			НоваяСтрока = ГотоваяПродукция.Добавить();
			НоваяСтрока.Количество   = ТекСтрокаПродукция.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаПродукция.Номенклатура;
			НоваяСтрока.Сумма        = ТекСтрокаПродукция.ПлановаяСтоимость;
		КонецЦикла;
		
		Запрос = новый Запрос; // сумма незавершёнки только в регистре! 
		запрос.Текст = "ВЫБРАТЬ
		               |	НезавершенноеПроизводствоОбороты.Номенклатура,
		               |	НезавершенноеПроизводствоОбороты.КоличествоОборот как Количество,
		               |	НезавершенноеПроизводствоОбороты.СуммаОборот как Сумма
		               |ИЗ
		               |	РегистрНакопления.НезавершенноеПроизводство.Обороты(&НачДата, &КонДата, Регистратор, ) КАК НезавершенноеПроизводствоОбороты
		               |ГДЕ
		               |	НезавершенноеПроизводствоОбороты.Регистратор = &Регистратор";
		запрос.УстановитьПараметр("Регистратор", ДанныеЗаполнения);
		запрос.УстановитьПараметр("НачДата", ДанныеЗаполнения.Дата);
		запрос.УстановитьПараметр("КонДата", ДанныеЗаполнения.Дата+1);
		результат = запрос.Выполнить();
		Если результат.Пустой() тогда
			для каждого выборка из ДанныеЗаполнения.Материалы цикл  // прямо из ТЧ.
			НоваяСтрока = Материалы.Добавить();
			НоваяСтрока.Номенклатура = выборка.Номенклатура;
			НоваяСтрока.Количество   = выборка.Количество; 
			//суммы НЕТ!
			КонецЦикла;	
		Иначе	
			выборка = результат.Выбрать(); 
			пока выборка.Следующий() цикл
			НоваяСтрока = Материалы.Добавить();
			НоваяСтрока.Номенклатура = выборка.Номенклатура;
			НоваяСтрока.Количество   = выборка.Количество;
			НоваяСтрока.Сумма        = выборка.Сумма;
			КонецЦикла;
		КонецЕсли;
		
		//по первой строке (все статьи должны быть одинаковые!
		СтатьяМатЗатрат    = ДанныеЗаполнения.Материалы[0].статьяЗатрат;
		СтатьяМатЗатратУПР = ДанныеЗаполнения.Материалы[0].статьяЗатратУПР;
		
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры
