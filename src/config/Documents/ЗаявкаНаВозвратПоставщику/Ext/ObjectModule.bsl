Функция ПечатьАШК() Экспорт
	ТабДок=Новый ТабличныйДокумент;
	Макет=ПолучитьМакет("ЗаявлениеАШК");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
    ОбластьТовар = Макет.ПолучитьОбласть("Детали");
    ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал = Макет.ПолучитьОбласть("ПдвКуртов");

	СведенияОКонтрагенте = СведенияОЮрФизЛице(Контрагент, Дата);
	ОбластьШапка.Параметры.Контрагент       = СведенияОКонтрагенте.ПолноеНаименование;
	ОбластьШапка.Параметры.ЮридическийАдрес = СведенияОКонтрагенте.ЮридическийАдрес;
	ОбластьШапка.Параметры.Телефоны         = СведенияОКонтрагенте.Телефоны;
	ОбластьШапка.Параметры.Организация = Организация.Наименование;
	ОбластьШапка.Параметры.РеквизитыОрганизации =  ОписаниеОрганизации(СведенияОЮрФизЛице(Организация, Дата), "ЮридическийАдрес, Телефоны");
	ТабДок.Вывести(ОбластьШапка);
	н =1 ;
	Для Каждого СтрТовар из Товары Цикл
		ОбластьТовар.Параметры.Заполнить(СтрТовар);
		ОбластьТовар.Параметры.НомерПП = н;
		ОбластьТовар.Параметры.ДатаИзготовленияИСерийныйНомер = ""  + ?(ЗначениеЗаполнено(СтрТовар.ДатаПроизводства),СтрТовар.ДатаПроизводства,"") + 
		?(ЗначениеЗаполнено(СтрТовар.СерийныйНомер)," №:" + СтрТовар.СерийныйНомер,"");
		ОбластьТовар.Параметры.СчетФактура = ?(ЗначениеЗаполнено(СтрТовар.НомерСФ),"№: " + СтрТовар.НомерСФ,"") + ?(ЗначениеЗаполнено(СтрТовар.ДатаСФ)," от "+ Формат(СтрТовар.ДатаСФ,"ДФ=dd.MM.yyyy"), "");
		ТабДок.Вывести(ОбластьТовар);
		н = н + 1;
	КонецЦикла;	
	ОбластьИтоги.Параметры.КоличествоИтого = Товары.Итог("Количество");
	ТабДок.Вывести(ОбластьИтоги);
	ОбластьПодвал.Параметры.Организация = Организация.Наименование;
	ОбластьПодвал.Параметры.Контрагент  = СведенияОКонтрагенте.ПолноеНаименование;
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	//ТабДок.Показать();
	Возврат ТабДок;
КонецФункции

Функция ПечатьАктаУтилизации() Экспорт
	ТабДок=Новый ТабличныйДокумент;
	Макет=ПолучитьМакет("АктУтилизации");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
    ОбластьТовар = Макет.ПолучитьОбласть("Детали");
    ОбластьДопИнфо = Макет.ПолучитьОбласть("ДопИнфо");
	ОбластьНарушениеХранения = Макет.ПолучитьОбласть("НарушениеХранения");
	//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал = Макет.ПолучитьОбласть("ПдвКуртов");

	ТабДок.Вывести(ОбластьШапка);
	ТЗНоменклатура = ТОвары.Выгрузить();
	ТЗНоменклатура.Свернуть("Номенклатура","Количество");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ЗаявкаНаВозвратПоставщикуТовары.Количество) КАК Количество,
	|	ЗаявкаНаВозвратПоставщикуТовары.ЗаявкаНаБрак,
	|	ЗаявкаНаВозвратПоставщикуТовары.СерийныйНомер,
	|	ЗаявкаНаВозвратПоставщикуТовары.ДатаПроизводства
	|ИЗ
	|	Документ.ЗаявкаНаВозвратПоставщику.Товары КАК ЗаявкаНаВозвратПоставщикуТовары
	|ГДЕ
	|	ЗаявкаНаВозвратПоставщикуТовары.ЗаявкаНаБрак.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБрак.ПризнатьБрак)
	|	И ЗаявкаНаВозвратПоставщикуТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
	|	ЗаявкаНаВозвратПоставщикуТовары.ЗаявкаНаБрак,
	|	ЗаявкаНаВозвратПоставщикуТовары.СерийныйНомер,
	|	ЗаявкаНаВозвратПоставщикуТовары.ДатаПроизводства
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока Выборка.Следующий() Цикл
		СтрокаНоменклатуры = Выборка.Номенклатура.Наименование + " - " + Выборка.Количество + " шт. сер. № ";
		ВыборкаДетали= Выборка.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			Если ВыборкаДетали.ДатаПроизводства = "нет" Тогда
				ДатаПроизводстваСтр = "";
			Иначе
				ДатаПроизводстваСтр = ВыборкаДетали.ДатаПроизводства;
			КонецЕсли;
			СтрокаНоменклатуры = СтрокаНоменклатуры + ДатаПроизводстваСтр + " " + ВыборкаДетали.СерийныйНомер + ";"
		КонецЦикла;
		ОбластьТовар.Параметры.СтрокаНоменклатуры =  СтрокаНоменклатуры;
		ТабДок.Вывести(ОбластьТовар);
	КонецЦикла;
	
	
	ТЗНеправильноеХранение = Товары.Выгрузить(Новый Структура("НарушениеПравилХранения",Истина));
	ТЗНеправильноеХранение.Свернуть("Номенклатура","Количество");
	Если ТЗНеправильноеХранение.Количество() > 0 Тогда
		ТабДок.Вывести(ОбластьДопИнфо);
	КонецЕсли;
	
	Для Каждого СтрТовар из  ТЗНеправильноеХранение Цикл
		СтрокаНепрХранение = СтрТовар.Номенклатура.Наименование  + " - " + СтрТовар.Количество + " шт.";
		ОбластьНарушениеХранения.Параметры.СтрокаНоменклатураХранение = СтрокаНепрХранение;
		ТабДок.Вывести(ОбластьНарушениеХранения);
	КонецЦикла;	
	ОбластьПодвал.Параметры.ТекДата = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");	
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	Возврат ТабДок;
КонецФункции

Функция ПечатьСлужебнойЗаписки()  Экспорт
	ТабДок=Новый ТабличныйДокумент;
	Макет=ПолучитьМакет("СлужебнаяЗаписка");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
    ОбластьТовар = Макет.ПолучитьОбласть("Детали");
	Попытка
		ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСклоненияФИО", "Decl", ТипВнешнейКомпоненты.Native); 
		Объект = Новый("AddIn.Decl.CNameDecl");
	Исключение
		Сообщить("Не удалось подключить внешнюю компоненту по причине: " + ОписаниеОшибки()); 
	КонецПопытки;
	
	Падеж = 2; //Родительный: от кого? чего? 
	
	РезультатФИО = "";
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Сообщить("Не заполнено основное контактное лицо контрагента!", СтатусСообщения.Важное);
	Иначе
		СтрокаФИО = Ответственный.Наименование; 
		РезультатФИО = Объект.Просклонять(СтрокаФИО, Падеж);
	КонецЕсли;		
 	ОбластьШапка.Параметры.ОтветственныйРП = РезультатФИО;
	ОбластьШапка.Параметры.Контрагент = Контрагент.НаименованиеПолное;
	ОбластьШапка.Параметры.Номер = Номер;

	ТабДок.Вывести(ОбластьШапка);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаНаВозвратПоставщикуТовары.Склад,
	|	СУММА(ЗаявкаНаВозвратПоставщикуТовары.Количество) КАК Количество,
	|	ЗаявкаНаВозвратПоставщикуТовары.Поставка,
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура.Код КАК Код,
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура.Артикул КАК Артикул,
	|	ЗаявкаНаВозвратПоставщикуТовары.Цена КАК Цена,
	|	СУММА(ЗаявкаНаВозвратПоставщикуТовары.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ЗаявкаНаВозвратПоставщику.Товары КАК ЗаявкаНаВозвратПоставщикуТовары
	|ГДЕ
	|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
	|	ЗаявкаНаВозвратПоставщикуТовары.Склад,
	|	ЗаявкаНаВозвратПоставщикуТовары.Поставка,
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура.Код,
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура.Артикул,
	|	ЗаявкаНаВозвратПоставщикуТовары.Цена
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	МАКСИМУМ(Цена)
	|ПО
	|	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока Выборка.Следующий() Цикл
		ОбластьТовар.Параметры.Заполнить(Выборка);
		ВыборкаДетали= Выборка.Выбрать();
		Поставка = "";
		ПоставкаПред = "";
		Склад = "";
		СкладПред = "";
		Пока ВыборкаДетали.Следующий() Цикл  
			Если ВыборкаДетали.Поставка <> Документы.ПоступлениеТоваровУслуг.ПустаяСсылка() и  ПоставкаПред <> ВыборкаДетали.Поставка Тогда
				Поставка = Поставка + ВыборкаДетали.Поставка.Номер  + " от " + Формат(ВыборкаДетали.Поставка.Дата, "ДФ=dd.MM.yyyy")+
				?(ВыборкаДетали.Количество() >1," - " + ВыборкаДетали.Количество + " шт;", ";") +  Символы.ПС;
			КонецЕсли;
			ПоставкаПред = ВыборкаДетали.Поставка;
			Если ВыборкаДетали.Склад <> Справочники.Склады.ПустаяСсылка() и  СкладПред <> ВыборкаДетали.Склад Тогда
				Склад = Склад + ";" + ВыборкаДетали.Склад + Символы.ПС;
			КонецЕсли;
			СкладПред = ВыборкаДетали.Поставка;
		КонецЦикла;
		
		ОбластьТовар.Параметры.Поставка =  Поставка;
		ОбластьТовар.Параметры.Склад =  Склад;

		ТабДок.Вывести(ОбластьТовар);
	КонецЦикла;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	Возврат ТабДок;
КонецФункции
