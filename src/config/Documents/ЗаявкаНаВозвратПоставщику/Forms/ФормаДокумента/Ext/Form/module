//06.06.2016 регистрация изменений в договорах
Перем НаборПроверяемыхРеквизитов; 
Перем мКолонкиТовары;
Процедура КоманднаяПанель1ПодборПоЗаявкамНаБрак(Кнопка)	
	Если ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику.ЗаявкаНаРекламацию Тогда
		ФормаПодбора = Документы.ЗаявкаНаБрак.ПолучитьФормуСписка("ФормаСписка", ЭтаФорма);  
		ФормаПодбора.РежимВыбора=Истина;
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь; 
		ФормаПодбора.ДокументСписок.Отбор.СостояниеЗаявки.Значение = Перечисления.СостоянияЗаявкиНаБрак.ВРассмотрении;
		ФормаПодбора.ДокументСписок.Отбор.СостояниеЗаявки.Использование=Истина;	
		ФормаПодбора.Открыть(); 	
	ИначеЕсли ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику.ЗаявкаНаВозврат Тогда
        // Процедура поиска по партиям
	КонецЕсли;
		

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Если ТипЗнч(ЗначениеВыбора) = Тип("ДокументСсылка.ЗаявкаНаБрак") Тогда 
		Для каждого Стр из ЗначениеВыбора.Расшифровка Цикл
			Если Стр.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду("22") Тогда
				НовСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрока,Стр);
				НовСтрока.ПричинаСнятияСЭксплуатации = Стр.Комментарий;
				НовСтрока.ТипКомпенсации = Перечисления.ТипКомпенсацииПоставщика.ВозвратДенег;
				НовСтрока.ЗаявкаНаБрак = ЗначениеВыбора;
				НовСтрока.МаркаАвто = Стр.Марка;
				ДопСвойства = Стр.ДополнительныеСвойства;
				РазмерДискаПоз = Найти(ДопСвойства,"размер диска: ");
				Если РазмерДискаПоз <> 0 Тогда
					ПервыйСимвол = РазмерДискаПоз + 14;
					ДлинаДопСв = СтрДлина(ДопСвойства);
					ДополнительныеСвойстваНов = Прав(ДопСвойства,ДлинаДопСв - ПервыйСимвол);
					ПоследнийСимвол = Найти(ДополнительныеСвойстваНов,Символы.ПС);
					Если ПоследнийСимвол <> 0 Тогда
						РазмерДиска = Лев(ДополнительныеСвойстваНов,ПоследнийСимвол);
						НовСтрока.РазмерДиска = РазмерДиска;
					КонецЕсли;
				КонецЕсли;
				ДавлениеВШинеПоз = Найти(ДопСвойства,"давление в шине: ");
				Если ДавлениеВШинеПоз <> 0 Тогда
					ПервыйСимвол = ДавлениеВШинеПоз + 16;
					ДлинаДопСв = СтрДлина(ДопСвойства);
					ДополнительныеСвойстваНов = Прав(ДопСвойства,ДлинаДопСв - ПервыйСимвол);
					ПоследнийСимвол = Найти(ДополнительныеСвойстваНов,Символы.ПС);
					Если ПоследнийСимвол <> 0 Тогда
						ДавлениеВШине = Лев(ДополнительныеСвойстваНов,ПоследнийСимвол);
						НовСтрока.ДавлениеВШине = ДавлениеВШине;
					КонецЕсли;
				КонецЕсли;
                РасположениеПоз = Найти(ДопСвойства,"расположение шины: ");
				Если РасположениеПоз <> 0 Тогда
					ПервыйСимвол = РасположениеПоз + 18;
					ДлинаДопСв = СтрДлина(ДопСвойства);
					ДополнительныеСвойстваНов = Прав(ДопСвойства,ДлинаДопСв - ПервыйСимвол);
					ПоследнийСимвол = Найти(ДополнительныеСвойстваНов,Символы.ПС);
					Если ПоследнийСимвол <> 0 Тогда
						РасположениеШины = Лев(ДополнительныеСвойстваНов,ПоследнийСимвол);
						НовСтрока.МестоРасположения = РасположениеШины;
					КонецЕсли;
				КонецЕсли;
				НомерСФ = "";
				ДатаСФ = Дата('00010101');
				ДокПоступление = Документы.ПоступлениеТоваровУслуг.ПустаяСсылка();
				НайтиСФ(НомерСФ,ДатаСФ,ДокПоступление,Стр.Реализация,Стр.Номенклатура,Стр.Количество);
                НовСтрока.НомерСФ = НомерСФ;
				НовСтрока.ДатаСФ = ДатаСФ;
				НовСтрока.Поставка = ДокПоступление;
			КонецЕсли;
		КонецЦикла;
 	КонецЕсли;
КонецПроцедуры 

Процедура НайтиСФ(НомерСФ,ДатаСФ,ДокПоступление,Реализация,Номенклатура,Количество)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПартииТоваровНаСкладахОбороты.ДокументОприходования,
	|	ПартииТоваровНаСкладахОбороты.КоличествоРасход КАК КоличествоОборот,
	|	ПартииТоваровНаСкладахОбороты.СтоимостьРасход КАК СтоимостьОборот
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Обороты(, , Регистратор, Номенклатура = &Номенклатура) КАК ПартииТоваровНаСкладахОбороты
	|ГДЕ
	|	ПартииТоваровНаСкладахОбороты.Регистратор = &Регистратор
	|	И ПартииТоваровНаСкладахОбороты.КоличествоРасход >= &Количество";
	Запрос.УстановитьПараметр("Регистратор", Реализация);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Количество",Количество);
	Результат =  Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Если ТипЗнч(Выборка.ДокументОприходования) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			НомерСФ = Выборка.ДокументОприходования.НомерСФ;
			ДатаСФ = Выборка.ДокументОприходования.ДатаСФ;
			ДокПоступление = Выборка.ДокументОприходования.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаявлениеАШК(Кнопка)   
	ТабДок = ПечатьАШК();
	ТабДок.Показать();
КонецПроцедуры

Процедура ПриОткрытии()
	Если ЭтоНовый() Тогда
		Организация = Справочники.Организации.НайтиПоКоду("00001");
		Состояние = Перечисления.СостоянияЗаявкиНаБракПоставщику.Новая;
		ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику.ЗаявкаНаРекламацию;
		Ответственный = глТекущийПользователь;
	КонецЕсли;
	УстановитьПодменюВыбораВидаОперации(ЭлементыФормы.ДействияФормы.Кнопки.Операция,
	                                      ВидОперации.Метаданные().ЗначенияПеречисления,
	                                      Новый Действие("ДействияФормыДействиеУстановитьОперацию"));

	// Вывести в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
    УстановитьВидимость();
КонецПроцедуры

Процедура ПакетФотографийНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	//если ВидПути= назвП тогда
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если ПакетФотографий<>"" тогда
		ДиалогВыбора.Каталог =ПакетФотографий;
	иначе
		ДиалогВыбора.Каталог ="\\Terminal\департамент продаж\Брак Барнаул\";
	КонецЕсли;
	
	Если ДиалогВыбора.Выбрать() Тогда
		ПакетФотографий = ДиалогВыбора.Каталог;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПакетФотографийОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ЗапуститьПриложение(ПакетФотографий);
КонецПроцедуры

//Процедура ПакетФотограцийДляУтилизацииОткрытие(Элемент, СтандартнаяОбработка)
//	СтандартнаяОбработка = ложь;
//	ЗапуститьПриложение(ПакетФотографийДляУтилизации);

//КонецПроцедуры

//Процедура ПакетФотограцийДляУтилизацииНачалоВыбора(Элемент, СтандартнаяОбработка)
//	СтандартнаяОбработка = ложь;
//	//если ВидПути= назвП тогда
//	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
//	Если ПакетФотографийДляУтилизации<>"" тогда
//		ДиалогВыбора.Каталог =ПакетФотографийДляУтилизации;
//	иначе
//		ДиалогВыбора.Каталог ="\\Terminal\департамент продаж\Брак Барнаул\";
//	КонецЕсли;
//	
//	Если ДиалогВыбора.Выбрать() Тогда
//		ПакетФотограцийДляУтилизации = ДиалогВыбора.Каталог;
//	КонецЕсли;
//КонецПроцедуры

Процедура ДействияФормыОтправитьЗаявкуНаРекламацию(Кнопка)
	Если ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику.ЗаявкаНаВозврат Тогда
		Сообщить("По этой заявке нельзя отсылать письмо");
		Возврат;
	КонецЕсли;
	
	//УЗ =  Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("levchenko@yst.ru");
	УЗ =  Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("no-reply@yst76.ru");

	ТекстСообщения ="   Добрый день,
			|
			|Высылаем заявление о рассмотрении товара ненадлежащего качества.
			|
			|
			|-- 
			|С уважением,
			|Федор Левченко, инженер по качеству ЗАО ТК ""Яршинторг""
			|+7 (910) 820 16 26
			|(4852) 200-200 доб. 162
			|icq: 690999552
			|levchenko@yst.ru
			|";
	
	Тема = "Заявление о рассмотрении товара ненадлежащего качества";
	Если УЗ <> Неопределено и УЗ <> Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка() Тогда
		ТабДок = ПечатьАШК();
		ИмяКаталога = ПакетФотографий;
	    ИмяФайлаОтправки = ИмяКаталога + "\Заявка на рекламацию поставщику " +Номер+ " от " +Лев(Дата, 10)+ ".pdf";

	    ТабДок.Записать(ИмяФайлаОтправки, ТипФайлаТабличногоДокумента.PDF);
	    
	    СписокФайловВложений = Новый СписокЗначений;
	    ФайлыМассив = НайтиФайлы(ПакетФотографий, "*"); 
	    Для Каждого ЭлементМассива из ФайлыМассив Цикл
	    	Если  ЭлементМассива.Имя <> "Thumbs.db"  Тогда
	    		СписокФайловВложений.Добавить(ЭлементМассива.ПолноеИмя);
	    	КонецЕсли;
	    КонецЦикла;
	    // Поменять адреса      
		//  яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо("user0795@ashk.ru",СписокФайловВложений, УЗ, ТекстСообщения, Тема,,"levchenko@yst.ru");
		яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо("levchenko@yst.ru",СписокФайловВложений, УЗ, ТекстСообщения, Тема,,"levchenko@yst.ru");
		
	    Состояние = Перечисления.СостоянияЗаявкиНаБракПоставщику.ВРассмотренииУПоставщика;
	    Записать();
	 КонецЕсли;
КонецПроцедуры

// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыДействиеУстановитьОперацию(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику[Кнопка.Имя];
	КонецЕсли;

	// Отобразить в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);

	// Установить видимость реквизитов по виду операции.
	УстановитьВидимость();

КонецПроцедуры // ДействияФормыДействиеУстановитьОперацию()

// Устанавливает видимость реквизитов субконто и подписей к ним.
//
Процедура УстановитьВидимость()
	Если ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику.ЗаявкаНаВозврат Тогда
		ЭлементыФормы.Товары.Колонки.СерийныйНомер.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.ДатаИзготовления.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.МаркаАвто.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.Пробег.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.МестоРасположения.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.ДавлениеВШине.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.РазмерДиска.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.ПричинаСнятияСЭксплуатации.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.НомерШтампаОТК.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.ТипКомпенсации.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.НомерСФ.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.ДатаСФ.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.ЗаявкаНаБрак.Видимость = Ложь;
		ЭлементыФормы.Товары.Колонки.НарушениеПравилХранения.Видимость = Ложь;
	    ЭлементыФормы.Состояние.Видимость = Ложь;
		ЭлементыФормы.НадписьСостояние.Видимость = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Подбор.Доступность = Ложь;

		ЭлементыФормы.КоманднаяПанель1.Кнопки.Подбор.Текст = "Подбор поставок";
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Подбор.Подсказка = "Подбор поставок";
        ЭлементыФормы.Панель1.Страницы.Дополнительно.Видимость = Ложь;
	
	ИначеЕсли  ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику.ЗаявкаНаРекламацию Тогда
		ЭлементыФормы.Товары.Колонки.СерийныйНомер.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.ДатаИзготовления.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.МаркаАвто.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.Пробег.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.МестоРасположения.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.ДавлениеВШине.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.РазмерДиска.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.ПричинаСнятияСЭксплуатации.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.НомерШтампаОТК.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.ТипКомпенсации.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.НомерСФ.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.ДатаСФ.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.ЗаявкаНаБрак.Видимость = Истина;
		ЭлементыФормы.Товары.Колонки.НарушениеПравилХранения.Видимость = Истина;
		ЭлементыФормы.Состояние.Видимость = Истина;
		ЭлементыФормы.НадписьСостояние.Видимость = Истина;

		ЭлементыФормы.КоманднаяПанель1.Кнопки.Подбор.Доступность = Истина;

		ЭлементыФормы.КоманднаяПанель1.Кнопки.Подбор.Текст = "Подбор по заявкам на брак";
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Подбор.Подсказка = "Подбор по заявкам на брак";
		
		ЭлементыФормы.Панель1.Страницы.Дополнительно.Видимость = Истина;

	КонецЕсли;
КонецПроцедуры // УстановитьВидимость()


Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	мТекущийДоговорКонтрагента = ДоговорКонтрагента;

	СписокВидовДоговоров = Новый СписокЗначений;
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.Прочее);
	НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, ДоговорКонтрагента,
	                                        СписокВидовДоговоров, СтандартнаяОбработка);

КонецПроцедуры


Процедура ТоварыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ПоказатьКодАртикул(мКолонкиТовары, ОформлениеСтроки.Ячейки, ДанныеСтроки.Номенклатура);
КонецПроцедуры


Процедура ТоварыЗаявкаНаБракНачалоВыбора(Элемент, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//ФормаПодбора = Документы.ПоступлениеТоваровУслуг.ПолучитьФормуСписка("ФормаСписка", ЭтаФорма);  
	//ФормаПодбора.РежимВыбора=Истина;
	//ФормаПодбора.ЗакрыватьПриВыборе = Ложь; 
	//ФормаПодбора.ДокументСписок.Отбор.ДоговорКонтрагента.Значение = ДоговорКонтрагента;
	//ФормаПодбора.ДокументСписок.Отбор.ДоговорКонтрагента.Использование=Истина;	
	//ФормаПодбора.Открыть(); 	

КонецПроцедуры

Процедура ЗаполнитьПоставкиНажатие(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ДействияФормыОтправитьАктОбУтилизации(Кнопка)
	Если ЭтотОбъект.Модифицированность() Тогда
		Сообщить("Необходиом записать документ!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	Если Состояние = Перечисления.СостоянияЗаявкиНаБракПоставщику.ГотовАктУтилизации Тогда 
		Сообщить("Акт об утилизации уже отправлен");
		Возврат;
	КонецЕсли;
	Если ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику.ЗаявкаНаВозврат Тогда
		Сообщить("По этой заявке нельзя отсылать письмо");
		Возврат;
	КонецЕсли;

	

	Если ПроверкаВозможностиУтилизации() = Истина Тогда
		//УЗ =  Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("levchenko@yst.ru");
		УЗ =  Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("no-reply@yst76.ru");
		ТекстСообщения ="   Добрый день,
		|
		|Высылаем акт об утилизации.
		|
		|
		|
		|
		|-- 
		|С уважением,
		|Федор Левченко, инженер по качеству ЗАО ТК ""Яршинторг""
		|+7 (910) 820 16 26
		|(4852) 200-200 доб. 162
		|icq: 690999552
		|levchenko@yst.ru
		|";
	
		Тема = "Акт об утилизации";
		Если УЗ <> Неопределено и УЗ <> Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка() Тогда
			ТабДок = ПечатьАктаУтилизации();
			ИмяКаталога = ПакетФотографийДляУтилизации;
			ИмяФайлаОтправки = ИмяКаталога + "\Акт об утилизации " +Номер+ " от " +Лев(Дата, 10)+ ".pdf";
			
			ТабДок.Записать(ИмяФайлаОтправки, ТипФайлаТабличногоДокумента.PDF);
			
			СписокФайловВложений = Новый СписокЗначений;
			ФайлыМассив = НайтиФайлы(ПакетФотографийДляУтилизации, "*"); 
			Для Каждого ЭлементМассива из ФайлыМассив Цикл
				Если  ЭлементМассива.Имя <> "Thumbs.db"  Тогда
					СписокФайловВложений.Добавить(ЭлементМассива.ПолноеИмя);
				КонецЕсли;
			КонецЦикла;
			// Поменять адреса
			//яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо("user0795@ashk.ru",СписокФайловВложений, УЗ, ТекстСообщения, Тема,,"kuzmicheva@yst.ru");
			яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо("levchenko@yst.ru",СписокФайловВложений, УЗ, ТекстСообщения, Тема,,"kuzmicheva@yst.ru");

		  
			Состояние = Перечисления.СостоянияЗаявкиНаБракПоставщику.ГотовАктУтилизации;
			Записать();
		КонецЕсли;

		
	КонецЕсли;
КонецПроцедуры

Функция ПроверкаВозможностиУтилизации()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
	|	СУММА(ЗаявкаНаВозвратПоставщикуТовары.Количество) КАК Количество,
	|	ЗаявкаНаВозвратПоставщикуТовары.ЗаявкаНаБрак
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ЗаявкаНаВозвратПоставщику.Товары КАК ЗаявкаНаВозвратПоставщикуТовары
	|ГДЕ
	|	ЗаявкаНаВозвратПоставщикуТовары.ЗаявкаНаБрак.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБрак.ПризнатьБрак)
	|	И ЗаявкаНаВозвратПоставщикуТовары.Ссылка = &Ссылка
	|	И (ЗаявкаНаВозвратПоставщикуТовары.Ссылка.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБракПоставщику.ПолученОтветОтПоставщика)
	|			ИЛИ ЗаявкаНаВозвратПоставщикуТовары.Ссылка.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаявкиНаБракПоставщику.ГотовАктУтилизации))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
	|	ЗаявкаНаВозвратПоставщикуТовары.ЗаявкаНаБрак
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаБракРасшифровка.Номенклатура,
	|	ЗаявкаНаБракРасшифровка.Ссылка КАК ЗаявкаНаБрак,
	|	СУММА(ЗаявкаНаБракРасшифровка.Количество) КАК Количество,
	|	ЗаявкаНаБракРасшифровка.Реализация
	|ПОМЕСТИТЬ ВТ_ТоварСРеал
	|ИЗ
	|	Документ.ЗаявкаНаБрак.Расшифровка КАК ЗаявкаНаБракРасшифровка
	|ГДЕ
	|	(ЗаявкаНаБракРасшифровка.Номенклатура, ЗаявкаНаБракРасшифровка.Количество, ЗаявкаНаБракРасшифровка.Ссылка) В
	|			(ВЫБРАТЬ
	|				ВТ_Товары.Номенклатура,
	|				ВТ_Товары.Количество,
	|				ВТ_Товары.ЗаявкаНаБрак
	|			ИЗ
	|				ВТ_Товары КАК ВТ_Товары)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаБракРасшифровка.Номенклатура,
	|	ЗаявкаНаБракРасшифровка.Ссылка,
	|	ЗаявкаНаБракРасшифровка.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиОбороты.ДокументПродажи,
	|	ПродажиОбороты.Номенклатура,
	|	СУММА(-ПродажиОбороты.КоличествоОборот) КАК Количество
	|ПОМЕСТИТЬ Вт_Продажи
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			(Номенклатура, ДокументПродажи) В
	|				(ВЫБРАТЬ
	|					ВТ_ТоварСРеал.Номенклатура,
	|					ВТ_ТоварСРеал.Реализация
	|				ИЗ
	|					ВТ_ТоварСРеал КАК ВТ_ТоварСРеал)) КАК ПродажиОбороты
	|ГДЕ
	|	ПродажиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.ДокументПродажи,
	|	ПродажиОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вт_Продажи.Номенклатура,
	|	Вт_Продажи.ДокументПродажи,
	|	Вт_Продажи.Количество КАК КоличествоВЗаявке,
	|	ЕСТЬNULL(ВТ_ТоварСРеал.Количество, 0) КАК КоличествоВозврата
	|ИЗ
	|	ВТ_ТоварСРеал КАК ВТ_ТоварСРеал
	|		ЛЕВОЕ СОЕДИНЕНИЕ Вт_Продажи КАК Вт_Продажи
	|		ПО ВТ_ТоварСРеал.Номенклатура = Вт_Продажи.Номенклатура
	|			И ВТ_ТоварСРеал.Реализация = Вт_Продажи.ДокументПродажи
	|ГДЕ
	|	ВТ_ТоварСРеал.Количество - ЕСТЬNULL(ВТ_ТоварСРеал.Количество, 0) > 0";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Процедура ОсновныеДействияФормыАктУтилизации(Кнопка)
	Если ПроверкаВозможностиУтилизации() = Истина Тогда
		ТабДок = ПечатьАктаУтилизации();
		ТабДок.Показать();
	Иначе
		Сообщить("Заявка не готова!",СтатусСообщения.Важное);
    КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1ПодобратьПоступления(Кнопка)
	
	// Сначала заполним товар, в который есть возможность подставить только одну поставку
	Запрос =  Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
	|	ЗаявкаНаВозвратПоставщикуТовары.Количество,
	|	ЗаявкаНаВозвратПоставщикуТовары.НомерСтроки
	|ПОМЕСТИТЬ Док_Тч
	|ИЗ
	|	Документ.ЗаявкаНаВозвратПоставщику.Товары КАК ЗаявкаНаВозвратПоставщикуТовары
	|ГДЕ
	|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка = &Ссылка
	|	И ЗаявкаНаВозвратПоставщикуТовары.Поставка = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования,
	|	ПартииТоваровНаСкладахОстатки.Номенклатура,
	|	СУММА(ПартииТоваровНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования.Дата
	|ПОМЕСТИТЬ ОстаткиПартий
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|			&Дата,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						Док_Тч.Номенклатура
	|					ИЗ
	|						Док_Тч КАК Док_Тч)
	|				И ДокументОприходования.Контрагент = &Контрагент) КАК ПартииТоваровНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахОстатки.Номенклатура,
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования,
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Док_Тч.Номенклатура,
	|	МАКСИМУМ(ОстаткиПартий.ДокументОприходованияДата) КАК ДокументОприходованияДата,
	|	Док_Тч.НомерСтроки,
	|	МАКСИМУМ(Док_Тч.Количество) КАК Количество
	|ПОМЕСТИТЬ МаксДата
	|ИЗ
	|	Док_Тч КАК Док_Тч
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПартий КАК ОстаткиПартий
	|		ПО Док_Тч.Номенклатура = ОстаткиПартий.Номенклатура
	|			И Док_Тч.Количество <= ОстаткиПартий.КоличествоОстаток
	|
	|СГРУППИРОВАТЬ ПО
	|	Док_Тч.Номенклатура,
	|	Док_Тч.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Цена,
	|	ПоступлениеТоваровУслугТовары.Ссылка
	|ПОМЕСТИТЬ ВТ_ЦеныПартий
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	(ПоступлениеТоваровУслугТовары.Ссылка, ПоступлениеТоваровУслугТовары.Номенклатура) В
	|			(ВЫБРАТЬ
	|				ОстаткиПартий.ДокументОприходования,
	|				ОстаткиПартий.Номенклатура
	|			ИЗ
	|				ОстаткиПартий КАК ОстаткиПартий)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксДата.Номенклатура,
	|	МАКСИМУМ(ОстаткиПартий.ДокументОприходования) КАК ДокументОприходования,
	|	МаксДата.НомерСтроки,
	|	СУММА(МаксДата.Количество) КАК Количество,
	|	ЕСТЬNULL(ВТ_ЦеныПартий.Цена, 0) КАК Цена
	|ИЗ
	|	МаксДата КАК МаксДата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПартий КАК ОстаткиПартий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЦеныПартий КАК ВТ_ЦеныПартий
	|			ПО ОстаткиПартий.Номенклатура = ВТ_ЦеныПартий.Номенклатура
	|				И ОстаткиПартий.ДокументОприходования = ВТ_ЦеныПартий.Ссылка
	|		ПО МаксДата.Номенклатура = ОстаткиПартий.Номенклатура
	|			И МаксДата.ДокументОприходованияДата = ОстаткиПартий.ДокументОприходования.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксДата.Номенклатура,
	|	МаксДата.НомерСтроки,
	|	ЕСТЬNULL(ВТ_ЦеныПартий.Цена, 0)" ;
	Запрос.УстановитьПараметр("Дата", Новый Граница(МоментВремени(),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока Выборка.Следующий() Цикл
		Номенклатура = Выборка.Номенклатура;
		Количество = Выборка.КОличество;
		СтрокаТов = Товары.Найти(Выборка.НомерСтроки,"НомерСтроки");
		Если СтрокаТов <> Неопределено Тогда
			СтрокаТов.Поставка = Выборка.ДокументОприходования;
			СтрокаТов.Цена = Выборка.Цена;
		КонецЕсли;
	КонецЦикла;
	Записать();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
	|	ЗаявкаНаВозвратПоставщикуТовары.Количество,
	|	ЗаявкаНаВозвратПоставщикуТовары.НомерСтроки
	|ПОМЕСТИТЬ Док_Тч
	|ИЗ
	|	Документ.ЗаявкаНаВозвратПоставщику.Товары КАК ЗаявкаНаВозвратПоставщикуТовары
	|ГДЕ
	|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка = &Ссылка
	|	И ЗаявкаНаВозвратПоставщикуТовары.Поставка = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладахОстатки.Номенклатура,
	|	СУММА(ПартииТоваровНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования,
	|	СУММА(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток) КАК СтоимостьОстаток
	|ПОМЕСТИТЬ ВТ_Партии
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|			&Дата,
	|			ДокументОприходования.Контрагент = &Контрагент
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						Док_Тч.Номенклатура
	|					ИЗ
	|						Док_Тч КАК Док_Тч)) КАК ПартииТоваровНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахОстатки.Номенклатура,
	|	ПартииТоваровНаСкладахОстатки.ДокументОприходования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Ссылка КАК Партия,
	|	ПоступлениеТоваровУслугТовары.Цена
	|ПОМЕСТИТЬ ЦеныПартий
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	(ПоступлениеТоваровУслугТовары.Ссылка, ПоступлениеТоваровУслугТовары.Номенклатура) В
	|			(ВЫБРАТЬ
	|				ВТ_Партии.ДокументОприходования,
	|				ВТ_Партии.Номенклатура
	|			ИЗ
	|				ВТ_Партии КАК ВТ_Партии)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Док_Тч.Количество) КАК Количество,
	|	Док_Тч.Номенклатура КАК Номенклатура,
	|	Док_Тч.НомерСтроки КАК НомерСтроки,
	|	СУММА(ЕСТЬNULL(ВТ_Партии.КоличествоОстаток, 0)) КАК КоличествоОстаток,
	|	ВТ_Партии.ДокументОприходования,
	|	СУММА(ЕСТЬNULL(ВТ_Партии.СтоимостьОстаток, 0)) КАК СтоимостьОстаток,
	|	ЕСТЬNULL(ЦеныПартий.Цена, 0) КАК Цена
	|ИЗ
	|	Док_Тч КАК Док_Тч
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Партии КАК ВТ_Партии
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЦеныПартий КАК ЦеныПартий
	|			ПО ВТ_Партии.Номенклатура = ЦеныПартий.Номенклатура
	|				И ВТ_Партии.ДокументОприходования = ЦеныПартий.Партия
	|		ПО Док_Тч.Номенклатура = ВТ_Партии.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	Док_Тч.Номенклатура,
	|	ВТ_Партии.ДокументОприходования,
	|	Док_Тч.НомерСтроки,
	|	ЕСТЬNULL(ЦеныПартий.Цена, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ВТ_Партии.ДокументОприходования.МоментВремени УБЫВ
	|ИТОГИ
	|	МИНИМУМ(Количество),
	|	МАКСИМУМ(НомерСтроки),
	|	СУММА(КоличествоОстаток),
	|	СУММА(СтоимостьОстаток)
	|ПО
	|	Номенклатура" ;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока Выборка.Следующий() Цикл
		Номенклатура =  Выборка.Номенклатура;
		КоличествоНужно  = Выборка.Количество;
		КоличествоОстаток  = Выборка.КоличествоОстаток;
		Если КоличествоНужно > КоличествоОстаток Тогда
			Сообщить("Не хватает товара " + Выборка.Номенклатура + ". КоличествоТовара изменили с " + КоличествоНужно + " на " + КоличествоОстаток);
			КоличествоНужно = КоличествоОстаток;
		КонецЕсли;
		ВыборкаДетали = Выборка.Выбрать();
		Пока ВыборкаДетали.Следующий() и КоличествоНужно > 0 Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Номенклатура = ВыборкаДетали.Номенклатура;
			НоваяСтрока.Количество = Мин(ВыборкаДетали.КоличествоОстаток,КоличествоНужно);
			НоваяСтрока.Цена = ВыборкаДетали.Цена;
			НоваяСтрока.Поставка = ВыборкаДетали.ДокументОприходования;
			КоличествоНужно = КоличествоНужно - ВыборкаДетали.КоличествоОстаток; 
		КонецЦикла;
		// Удалим Строки с пустой поставкой
		Отбор = Новый Структура("НомерСтроки", Выборка.НомерСтроки);
		НайденныеСтроки = Товары.НайтиСтроки(Отбор);
		Для каждого СтрТов из НайденныеСТроки Цикл
			Товары.Удалить(СтрТов);
		КонецЦикла;
	КонецЦикла;			
			
КонецПроцедуры

Процедура ОсновныеДействияФормыСлужебнаяЗАпискаНаСклад(Кнопка)
	ТабДок = ПечатьСлужебнойЗаписки();
	ТабДок.Показать();
КонецПроцедуры

Процедура ДействияФормыСоздатьВозвратыПоставщику(Кнопка)
	Если Модифицированность() = Истина Тогда
		Сообщить("Перед создание возвратов необходимо записать документ", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику.ЗаявкаНаВозврат Тогда	
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
		|	СУММА(ЗаявкаНаВозвратПоставщикуТовары.Количество) КАК Количество,
		|	ЗаявкаНаВозвратПоставщикуТовары.Поставка
		|ПОМЕСТИТЬ Вт_ТоварИзЗаявки
		|ИЗ
		|	Документ.ЗаявкаНаВозвратПоставщику.Товары КАК ЗаявкаНаВозвратПоставщикуТовары
		|ГДЕ
		|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
		|	ЗаявкаНаВозвратПоставщикуТовары.Поставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратТоваровПоставщикуТовары.Номенклатура,
		|	СУММА(ВозвратТоваровПоставщикуТовары.Количество) КАК Количество,
		|	ВозвратТоваровПоставщикуТовары.ДокументПоступления
		|ПОМЕСТИТЬ ВТ_Возвраты
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		|ГДЕ
		|	ВозвратТоваровПоставщикуТовары.Ссылка.ДокументОснование = &Ссылка
		|	И НЕ ВозвратТоваровПоставщикуТовары.Ссылка.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ВозвратТоваровПоставщикуТовары.Номенклатура,
		|	ВозвратТоваровПоставщикуТовары.ДокументПоступления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_ТоварИзЗаявки.Номенклатура,
		|	Вт_ТоварИзЗаявки.Количество
		|ИЗ
		|	Вт_ТоварИзЗаявки КАК Вт_ТоварИзЗаявки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК ВТ_Возвраты
		|		ПО Вт_ТоварИзЗаявки.Номенклатура = ВТ_Возвраты.Номенклатура
		|			И Вт_ТоварИзЗаявки.Поставка = ВТ_Возвраты.ДокументПоступления
		|ГДЕ
		|	Вт_ТоварИзЗаявки.Количество > ЕСТЬNULL(ВТ_Возвраты.Количество, 0)";
		Запрос.УстановитьПараметр("Ссылка",Ссылка);    
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Если Выборка.Количество() =0 Тогда
			Сообщить("Возвраты уже сделаны!",СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратТоваровПоставщикуТовары.Номенклатура,
		|	СУММА(ВозвратТоваровПоставщикуТовары.Количество) КАК Количество,
		|	ВозвратТоваровПоставщикуТовары.ДокументПоступления
		|ПОМЕСТИТЬ ВТ_Возвраты
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		|ГДЕ
		|	ВозвратТоваровПоставщикуТовары.Ссылка.ДокументОснование = &Ссылка
		|	И НЕ ВозвратТоваровПоставщикуТовары.Ссылка.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ВозвратТоваровПоставщикуТовары.Номенклатура,
		|	ВозвратТоваровПоставщикуТовары.ДокументПоступления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка,
		|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
		|	СУММА(ЗаявкаНаВозвратПоставщикуТовары.Количество - ЕСТЬNULL(ВТ_Возвраты.Количество, 0)) КАК Количество,
		|	ЗаявкаНаВозвратПоставщикуТовары.Склад,
		|	ЗаявкаНаВозвратПоставщикуТовары.Поставка КАК Поставка,
		|	ЗаявкаНаВозвратПоставщикуТовары.Цена
		|ИЗ
		|	Документ.ЗаявкаНаВозвратПоставщику.Товары КАК ЗаявкаНаВозвратПоставщикуТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК ВТ_Возвраты
		|		ПО ЗаявкаНаВозвратПоставщикуТовары.Номенклатура = ВТ_Возвраты.Номенклатура
		|			И ЗаявкаНаВозвратПоставщикуТовары.Поставка = ВТ_Возвраты.ДокументПоступления
		|ГДЕ
		|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка = &Ссылка
		|	И ЗаявкаНаВозвратПоставщикуТовары.Количество - ЕСТЬNULL(ВТ_Возвраты.Количество, 0) > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка,
		|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
		|	ЗаявкаНаВозвратПоставщикуТовары.Склад,
		|	ЗаявкаНаВозвратПоставщикуТовары.Цена,
		|	ЗаявкаНаВозвратПоставщикуТовары.Поставка
		|ИТОГИ
		|	СУММА(Количество)
		|ПО
		|	Поставка";
		//Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			ДокВозврат = Документы.ВозвратТоваровПоставщику.СоздатьДокумент();
			ДокВозврат.Контрагент = Контрагент;
			ДокВозврат.ДоговорКонтрагента = Выборка.Поставка.ДоговорКонтрагента;
			ДокВозврат.Ответственный = глТекущийПользователь;
			ДокВозврат.Организация = Справочники.Организации.НайтиПоКоду("00001");
			ДокВозврат.Дата = ТекущаяДата();
			ДокВозврат.ВидПередачи = Перечисления.ВидыПередачиТоваров.СоСклада;
			ЗаказПоступление = Выборка.Поставка.Сделка;
			ДокВозврат.ВалютаДокумента = ЗаказПоступление.ВалютаДокумента;
			ДокВозврат.ДокументОснование = Ссылка;
			ДокВозврат.Сделка = ЗаказПоступление;
			ДокВозврат.УчитыватьНДС = Истина;
			ДокВозврат.СуммаВключаетНДС = Истина;
			ДокВозврат.Перевозчик = Перевозчик;
			ДокВозврат.Водитель = Водитель;
			ДокВозврат.МаркаАвтомобиля = МаркаАвтомобиля;
			ДокВозврат.ГосНомерАвтомобиля = ГосНомерАвтомобиля;
			ДокВозврат.Перевозчик = Перевозчик;
			ДокВозврат.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
			ДокВозврат.ДатаДоверенности = ДатаДоверенности;
			ДокВозврат.НомерДоверенности = НомерДоверенности;
			ДокВозврат.ОрганизацияВыдавшаяДоверенность = ОрганизацияВыдавшаяДоверенность;
			ДокВозврат.ФизЛицоДоверенности = ФизЛицоДоверенности;
			ВыборкаДетали = Выборка.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл
				НовСтрока = ДокВозврат.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрока,ВыборкаДетали);
				НовСтрока.ДокументПоступления = ВыборкаДетали.Поставка;
				НовСтрока.Качество = Справочники.Качество.Новый;
				НовСтрока.Склад = ВыборкаДетали.Склад;
				мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить();
				// Выполнить общие действия для всех документов при изменении номенклатуры.
				ПриИзмененииНоменклатурыТабЧасти(НовСтрока, ДокВозврат);
				// Заполняем реквизиты табличной части.
				//ЗаполнитьСтавкуНДСТабЧасти(НовСтрока, ДокВозврат); 
				НовСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
				СтруктураШапкиДокумента = Новый Структура("Контрагент, ТипЦен, ДоговорКонтрагента, ДатаДокумента, ВалютаДокумента, УчитыватьНДС, СуммаВключаетНДС",
				Контрагент, , ДоговорКонтрагента, Дата,ВыборкаДетали.Поставка.ВалютаДокумента, Истина,Истина);
				ЗаполнитьЕдиницуЦенуПокупкиТабЧасти(НовСтрока, ДокВозврат, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета); 
				
				// Рассчитываем реквизиты табличной части.
				РассчитатьСуммуТабЧасти(НовСтрока, ДокВозврат);
				РассчитатьСуммуНДСТабЧасти(НовСтрока, ДокВозврат);
				//СтрокаТабличнойЧасти.СуммаНДС = РассчитатьСуммуНДС(НовСтрока.Сумма,
				//									   УчитыватьНДС, СуммаВключаетНДС,
				//									   ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));

				НовСтрока.Цена = ВыборкаДетали.Цена;
			КонецЦикла;	
			
			Склад = ВыборкаДетали.Склад;
			ПараметрыФормы = Новый Структура("Ключ", ДокВозврат);
			ОткрытьФорму("Документ.ВозвратТоваровПоставщику.Форма.ФормаДокумента", ПараметрыФормы);
		КонецЦикла;
	ИначеЕсли ВидОперации = Перечисления.ВидОперацииЗаявкаНаВозвратПоставщику.ЗаявкаНаРекламацию Тогда
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
		|	СУММА(ЗаявкаНаВозвратПоставщикуТовары.Количество) КАК Количество,
		|	ЗаявкаНаВозвратПоставщикуТовары.Поставка
		|ПОМЕСТИТЬ Вт_ТоварИзЗаявки
		|ИЗ
		|	Документ.ЗаявкаНаВозвратПоставщику.Товары КАК ЗаявкаНаВозвратПоставщикуТовары
		|ГДЕ
		|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка = &Ссылка
		|	И ЗаявкаНаВозвратПоставщикуТовары.ЗаявкаНаБрак.СостояниеЗаявки = &СостояниеЗаявки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
		|	ЗаявкаНаВозвратПоставщикуТовары.Поставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратТоваровПоставщикуТовары.Номенклатура,
		|	СУММА(ВозвратТоваровПоставщикуТовары.Количество) КАК Количество,
		|	ВозвратТоваровПоставщикуТовары.ДокументПоступления
		|ПОМЕСТИТЬ ВТ_Возвраты
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		|ГДЕ
		|	ВозвратТоваровПоставщикуТовары.Ссылка.ДокументОснование = &Ссылка
		|	И НЕ ВозвратТоваровПоставщикуТовары.Ссылка.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ВозвратТоваровПоставщикуТовары.Номенклатура,
		|	ВозвратТоваровПоставщикуТовары.ДокументПоступления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_ТоварИзЗаявки.Номенклатура,
		|	Вт_ТоварИзЗаявки.Количество
		|ИЗ
		|	Вт_ТоварИзЗаявки КАК Вт_ТоварИзЗаявки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК ВТ_Возвраты
		|		ПО Вт_ТоварИзЗаявки.Номенклатура = ВТ_Возвраты.Номенклатура
		|			И Вт_ТоварИзЗаявки.Поставка = ВТ_Возвраты.ДокументПоступления
		|ГДЕ
		|	Вт_ТоварИзЗаявки.Количество > ЕСТЬNULL(ВТ_Возвраты.Количество, 0)";
		Запрос.УстановитьПараметр("Ссылка",Ссылка);  
		Запрос.УстановитьПараметр("СостояниеЗаявки",Перечисления.СостоянияЗаявкиНаБрак.ПризнатьБрак);    
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Если Выборка.Количество() =0 Тогда
			Сообщить("Возвраты уже сделаны!",СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратТоваровПоставщикуТовары.Номенклатура,
		|	СУММА(ВозвратТоваровПоставщикуТовары.Количество) КАК Количество,
		|	ВозвратТоваровПоставщикуТовары.ДокументПоступления
		|ПОМЕСТИТЬ ВТ_Возвраты
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		|ГДЕ
		|	ВозвратТоваровПоставщикуТовары.Ссылка.ДокументОснование = &Ссылка
		|	И НЕ ВозвратТоваровПоставщикуТовары.Ссылка.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ВозвратТоваровПоставщикуТовары.Номенклатура,
		|	ВозвратТоваровПоставщикуТовары.ДокументПоступления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка,
		|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
		|	СУММА(ЗаявкаНаВозвратПоставщикуТовары.Количество - ЕСТЬNULL(ВТ_Возвраты.Количество, 0)) КАК Количество,
		|	ЗаявкаНаВозвратПоставщикуТовары.Склад,
		|	ЗаявкаНаВозвратПоставщикуТовары.Поставка КАК Поставка,
		|	ЗаявкаНаВозвратПоставщикуТовары.Цена
		|ИЗ
		|	Документ.ЗаявкаНаВозвратПоставщику.Товары КАК ЗаявкаНаВозвратПоставщикуТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК ВТ_Возвраты
		|		ПО ЗаявкаНаВозвратПоставщикуТовары.Номенклатура = ВТ_Возвраты.Номенклатура
		|			И ЗаявкаНаВозвратПоставщикуТовары.Поставка = ВТ_Возвраты.ДокументПоступления
		|ГДЕ
		|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка = &Ссылка
		|	И ЗаявкаНаВозвратПоставщикуТовары.Количество - ЕСТЬNULL(ВТ_Возвраты.Количество, 0) > 0
		|	И ЗаявкаНаВозвратПоставщикуТовары.ЗаявкаНаБрак.СостояниеЗаявки = &СостояниеЗаявки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкаНаВозвратПоставщикуТовары.Ссылка,
		|	ЗаявкаНаВозвратПоставщикуТовары.Номенклатура,
		|	ЗаявкаНаВозвратПоставщикуТовары.Склад,
		|	ЗаявкаНаВозвратПоставщикуТовары.Цена,
		|	ЗаявкаНаВозвратПоставщикуТовары.Поставка
		|ИТОГИ
		|	СУММА(Количество)
		|ПО
		|	Поставка";
		//Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			ДокВозврат = Документы.ВозвратТоваровПоставщику.СоздатьДокумент();
			ДокВозврат.Контрагент = Контрагент;
			ДокВозврат.ДоговорКонтрагента = ДоговорКонтрагента;
			ДокВозврат.Ответственный = глТекущийПользователь;
			ДокВозврат.Организация = Справочники.Организации.НайтиПоКоду("00001");
			ДокВозврат.Дата = ТекущаяДата();
			ДокВозврат.ВидПередачи = Перечисления.ВидыПередачиТоваров.СоСклада;
			ЗаказПоступление = Выборка.Поставка.Сделка;
			ДокВозврат.ВалютаДокумента = ЗаказПоступление.ВалютаДокумента;
			ДокВозврат.ДокументОснование = Ссылка;
			ДокВозврат.Сделка = ЗаказПоступление;
			ДокВозврат.Перевозчик = Перевозчик;
			ДокВозврат.Водитель = Водитель;
			ДокВозврат.МаркаАвтомобиля = МаркаАвтомобиля;
			ДокВозврат.ГосНомерАвтомобиля = ГосНомерАвтомобиля;
			ДокВозврат.Перевозчик = Перевозчик;
			ДокВозврат.ВодительскоеУдостоверение = ВодительскоеУдостоверение;
			ДокВозврат.ДатаДоверенности = ДатаДоверенности;
			ДокВозврат.НомерДоверенности = НомерДоверенности;
			ДокВозврат.ОрганизацияВыдавшаяДоверенность = ОрганизацияВыдавшаяДоверенность;
			ДокВозврат.ФизЛицоДоверенности = ФизЛицоДоверенности;

			ВыборкаДетали = Выборка.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл
				НовСтрока = ДокВозврат.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрока,ВыборкаДетали);
				НовСтрока.ДокументПоступления = ВыборкаДетали.Поставка;
				НовСтрока.Качество = Справочники.Качество.Новый;
				мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить();
				// Выполнить общие действия для всех документов при изменении номенклатуры.
				ПриИзмененииНоменклатурыТабЧасти(НовСтрока, ДокВозврат);
				// Заполняем реквизиты табличной части.
				ЗаполнитьСтавкуНДСТабЧасти(НовСтрока, ДокВозврат); 
				
				СтруктураШапкиДокумента = Новый Структура("Контрагент, ТипЦен, ДоговорКонтрагента, ДатаДокумента, ВалютаДокумента, УчитыватьНДС, СуммаВключаетНДС",
				Контрагент, , ДоговорКонтрагента, Дата,ВыборкаДетали.Поставка.ВалютаДокумента, Истина,Истина);
				ЗаполнитьЕдиницуЦенуПокупкиТабЧасти(НовСтрока, ДокВозврат, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета); 
				
				// Рассчитываем реквизиты табличной части.
				РассчитатьСуммуТабЧасти(НовСтрока, ДокВозврат);
				РассчитатьСуммуНДСТабЧасти(НовСтрока, ДокВозврат);
				НовСтрока.Цена = ВыборкаДетали.Цена;
			КонецЦикла;	
			
			Склад = ВыборкаДетали.Склад;
			ПараметрыФормы = Новый Структура("Ключ", ДокВозврат);
			ОткрытьФорму("Документ.ВозвратТоваровПоставщику.Форма.ФормаДокумента", ПараметрыФормы);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ТоварыПоставкаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ТоварыПоставкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	МетаданныеДокумента = ДокументОбъект.Метаданные();

	ФормаВыбора = Документы.ПоступлениеТоваровУслуг.ПолучитьФормуВыбора(,Элемент,);

	ФормаВыбора.ДокументСписок.Отбор.Контрагент.Значение = Контрагент;
	ФормаВыбора.ДокументСписок.Отбор.Контрагент.Использование                       = Истина;
	ФормаВыбора.ДокументСписок.Отбор.Контрагент.ВидСравнения                        = ВидСравнения.Равно;
	ФормаВыбора.ЭлементыФормы.ДокументСписок.НастройкаОтбора.Контрагент.Доступность = Ложь;
    ФормаВыбора.Открыть();


КонецПроцедуры

Процедура ТоварыНоменклатураПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ТоварыПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из ОформленияСтрок Цикл
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;

		ПоказатьКодАртикул(мКолонкиТовары, ОформлениеСтроки.Ячейки, ДанныеСтроки.Номенклатура);
	КонецЦикла;

КонецПроцедуры

Процедура ПакетФотографийДляУтилизацииНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	//если ВидПути= назвП тогда
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если ПакетФотографийДляУтилизации<>"" тогда
		ДиалогВыбора.Каталог =ПакетФотографийДляУтилизации;
	иначе
		ДиалогВыбора.Каталог ="\\Terminal\департамент продаж\Брак Барнаул\";
	КонецЕсли;
	
	Если ДиалогВыбора.Выбрать() Тогда
		ПакетФотографийДляУтилизации = ДиалогВыбора.Каталог;
	КонецЕсли;
КонецПроцедуры

Процедура ПакетФотографийДляУтилизацииОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ЗапуститьПриложение(ПакетФотографийДляУтилизации);
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	Грузополучатель = Контрагент.Грузополучатель;
КонецПроцедуры

Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	РассчитатьСуммуТабЧасти(ЭлементыФормы.Товары.ТекущиеДанные, ЭтотОбъект);
	
КонецПроцедуры

Процедура ТоварыЦенаПриИзменении(Элемент)
	
	РассчитатьСуммуТабЧасти(ЭлементыФормы.Товары.ТекущиеДанные, ЭтотОбъект);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСчет(Кнопка)
	ТабДок = ПечатьСчетаЗаказа("Счет");
	ТабДок.Показать();
КонецПроцедуры


мКолонкиТовары         = ЭлементыФормы.Товары.Колонки;