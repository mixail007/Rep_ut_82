// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

// Хранит текущее значение организации для контроля учетной политики, организация является плательщиком ЕНВД
Перем мТекущаяОрганизация;

// Хранит валюту взаиморасчетов, установленную в текущем договоре взаиморасчетов,
// используется для определения необходимости пересчетов при изменении договора.
Перем мТекущаяВалютаВзаиморасчетов;

// Хранит текущий договор контрагента
// используется для восстановления старого договора в случае некорректного выбора нового
Перем мТекущийДоговорКонтрагента;

Перем мПечатнаяФормаПоУмолчанию;


Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
	
		ДатаНачисления = Дата;	
	    УстановитьНомерДокумента(ЭтотОбъект);
		Организация = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
		ВалютаДокумента = мВалютаРегламентированногоУчета;
		
	Иначе
		
		Если яштПени.ПроверитьВыставление(ЭтотОбъект.Ссылка) Тогда
		
			Предупреждение("По данному документу производилось выставление пеней
						    |документ не может редактироваться!", 5);
							
			ЭтаФорма.ТолькоПросмотр = Истина;
			ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.Доступность = Ложь;
			
		КонецЕсли; 
		
		ПН = Ложь;
		яштПени.ПроверитьПоздниеНачисления(ЭтотОбъект.Ссылка, ПН);
		
		//Если НЕ ЭтаФорма.ТолькоПросмотр И ПН Тогда
		//
		//	Предупреждение("По данному контрагенту производились поздние начисления
		//					|документ не может редактироваться!", 5);
		//					
		//	ЭтаФорма.ТолькоПросмотр = Истина;
		//	ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.Доступность = Ложь;
		//	
		//КонецЕсли; 

	КонецЕсли; 
	
	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;
	мТекущаяВалютаВзаиморасчетов = ДоговорКонтрагента.ВалютаВзаиморасчетов;
	
	// Заполнить подменю выбора печатных форм.
	СписокМакетов = ЭтотОбъект.ПолучитьСписокПечатныхФорм();
	УстановитьПодменюВыбораПечатнойФормы(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати,
	                                       СписокМакетов,
	                                       Новый Действие("КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы"));

	// Установить печатную форму по умолчанию.
	УстановитьКнопкуПечати(ЭтотОбъект.Метаданные().Имя, ЭтаФорма, СписокМакетов, мПечатнаяФормаПоУмолчанию);
    
	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	

Процедура КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ДействиеПечать.Текст = Кнопка.Текст;
		СтруктураМакета = Новый Структура("Макет, ПредставлениеМакета");
		СписокМакетов = ПолучитьСписокПечатныхФорм();
		СтрокаМакетаВСписке = СписокМакетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаМакетаВСписке <> Неопределено Тогда
			Печать(СтрокаМакетаВСписке.Значение);
			СтруктураМакета.Макет = СтрокаМакетаВСписке.Значение;
			СтруктураМакета.ПредставлениеМакета = СтрокаМакетаВСписке.Представление;			
			
		Иначе
			СсылкаВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрЗаменить(Кнопка.Имя, "_", "-")));
			Печать(СсылкаВнешнейФормы,,,ЭтаФорма);
			СтруктураМакета.Макет = СсылкаВнешнейФормы;
			СтруктураМакета.ПредставлениеМакета = Кнопка.Текст;
		КонецЕсли;		
		
		мПечатнаяФормаПоУмолчанию = СтруктураМакета.Макет;
		СохранитьТекущуюКнопкуПечати(ЭтотОбъект.Метаданные().Имя, СтруктураМакета);
	КонецЕсли;

КонецПроцедуры // КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы()

Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	НапечататьДокументПоУмолчанию(ЭтотОбъект, глТекущийПользователь, мПечатнаяФормаПоУмолчанию, ЭтаФорма);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

Процедура КоманднаяПанель1Заполнить(Кнопка)
	
	Если НЕ ЗначениеНеЗаполнено(Организация)
		И НЕ ЗначениеНеЗаполнено(Контрагент) 
		И НЕ ЗначениеНеЗаполнено(ДатаНачисления) Тогда
		
		Если Пени.Количество() > 0 Тогда
			
			Если Вопрос("Перед заполнением табличная часть 
				|будет очищена, продолжить?", РежимДиалогаВопрос.ДаНет, 0) = КодВозвратаДиалога.Да Тогда
				
				Пени.Очистить();
				НачисленияПоЗаказам.Очистить();
				
			Иначе 
				
				Возврат;
				
			КонецЕсли; 
			
		КонецЕсли;
		
		Если ЗначениеНеЗаполнено(ДоговорКонтрагента) Тогда
		
			ДоговорКонтрагента = яштПени.ПолучитьДоговорПени(Контрагент, Организация, глТекущийПользователь,Истина);	
		
		КонецЕсли; 
		
		яштПени.НачислитьПени(Контрагент, ДатаНачисления,,ЭтотОбъект);
		
	Иначе
		
		Предупреждение("Поля: Организация, Контрагент и Дата начисления 
		|должны быть заполнены!");
		
	КонецЕсли; 	
	
	
КонецПроцедуры

Процедура Пересчитать(Элемент)
	
	СтрДока = ЭлементыФормы.Пени.ТекущаяСтрока;
	СтрДока.Пени = СтрДока.Количество * СтрДока.ПросроченнаяСумма * ?(СтрДока.Ставка <> 0, СтрДока.Ставка/100, СтрДока.Ставка);
	
КонецПроцедуры

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	//Если НЕ ЗначениеНеЗаполнено(Контрагент) Тогда
	//
	//	ДоговорКонтрагента.Владелец = Контрагент;
	//
	//КонецЕсли; 
	
КонецПроцедуры

Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	СпособЗаполненияЦен = Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры;

	// Зададим, какие реквизиты надо редактировать.
	СтруктураРеквизитовДокумента = ПолучитьСтруктуруРеквизитовДокументаДляЦенообразования(ЭтотОбъект);

	ПриИзмененииЗначенияДоговора(ЭтотОбъект, мТекущаяВалютаВзаиморасчетов, мВалютаРегламентированногоУчета, СпособЗаполненияЦен, СтруктураРеквизитовДокумента, "Продажа", "Товары", мТекущийДоговорКонтрагента);

	мТекущаяВалютаВзаиморасчетов = ДоговорКонтрагента.ВалютаВзаиморасчетов;

КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если Пени.Количество() > 0 Тогда
	
		ЭлементыФормы.ДатаНачисления.Доступность = Ложь;
		
	Иначе
		
		ЭлементыФормы.ДатаНачисления.Доступность = Истина;
	
	КонецЕсли;
	
	Если ЗначениеНеЗаполнено(Организация)
		ИЛИ ЗначениеНеЗаполнено(Контрагент)
		ИЛИ ЗначениеНеЗаполнено(Организация) 
		ИЛИ ЗначениеНеЗаполнено(ДатаНачисления) Тогда
	
		ЭлементыФормы.Пени.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.Доступность = Ложь;
		
	Иначе
		
		Если НЕ ЭтаФорма.ТолькоПросмотр Тогда
		
			ЭлементыФормы.Пени.ТолькоПросмотр = Ложь;
			ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.Доступность = Истина;
		
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если СуммаДокумента <> Пени.Итог("Пени") Тогда
	
		СуммаДокумента = Пени.Итог("Пени");	
	
	КонецЕсли; 
	
	
	ЭлементыФормы.НадписьСуммаДокумента.Заголовок = "Сумма: " + Строка(СуммаДокумента) + " " + ВалютаДокумента.Наименование;
	
	СформироватьНадписьДолга(ДоговорКонтрагента, Ссылка, ЭлементыФормы.ИнформацияОЗадолженности, Ссылка);
	
КонецПроцедуры

Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	ДоговорКонтрагента = яштПени.ПолучитьДоговорПени(Контрагент, Организация, глТекущийПользователь,Истина);
	
КонецПроцедуры

Процедура ПениСделкаПриИзменении(Элемент)
	
	яштПени.ПолучитьДанныеСтрокиПени(ЭтотОбъект, ЭлементыФормы.Пени.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	
	яштСменаПользователя(ЭтотОбъект, ЭтаФорма, глТекущийПользователь);
	
КонецПроцедуры

Процедура НачисленияПоЗаказамПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	//требуется чтобы отображалась колонка с названием контрагента
	ОформлениеСтроки.Ячейки.ДоговорЗадолженности.ОтображатьТекст=Истина;
	ОформлениеСтроки.Ячейки.ДоговорЗадолженности.Текст=Строка(ДанныеСтроки.Сделка.ДоговорКонтрагента);


КонецПроцедуры


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если РасчетСуммыПениВФайле Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		ЭтотОбъект.ПолучитьФорму("ФормаДокументаРасчетВФайле").Открыть();
	ИначеЕсли АвтоматическийРасчет Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		ЭтотОбъект.ПолучитьФорму("ФормаДокументаАвтоматическийРасчет").Открыть();
	КонецЕсли;
	
КонецПроцедуры

