// Хранит результаты отбора по заявкам
Перем ТабЗаявки Экспорт;

// Создает запрос для получения остатков по регистрам "ЗаявкиНаРасходованиеСредств"
// и "ДенежныеСредстваВРезерве"
//
Функция СформироватьЗапрос(Заявка="") Экспорт
	
	Запрос=Новый Запрос;
	СтруктураПараметров=Новый Структура;
	
	ТекстОтбора="";
	
	Если Заявка="" Тогда // Формируем запрос для заполнения ТЧ
		
		Если ОтборЦФО Тогда
			
			Если ЦФО.Пустая() Тогда
				ТекстОтбора=ТекстОтбора+"
				|И (##.ЦФО = &ЦФО)";
			Иначе
				ТекстОтбора=ТекстОтбора+"
				|И (##.ЦФО В ИЕРАРХИИ (&ЦФО))";
			КонецЕсли;
			
			СтруктураПараметров.Вставить("ЦФО",ЦФО);
			
		КонецЕсли;
				
		Если ОтборКонтрагент Тогда
			
			Если Контрагент.Пустая() Тогда
				ТекстОтбора=ТекстОтбора+"
				|И (##.Контрагент = &Контрагент)";
			Иначе
				ТекстОтбора=ТекстОтбора+"
				|И (##.Контрагент В ИЕРАРХИИ (&Контрагент))";
			КонецЕсли;
			
			СтруктураПараметров.Вставить("Контрагент",Контрагент);
			
		КонецЕсли;
				
		Если ОтборОтветственный Тогда
			
			Если Ответственный.Пустая() Тогда
				ТекстОтбора=ТекстОтбора+"
				|И (##.Ответственный = &Ответственный)";
			Иначе
				ТекстОтбора=ТекстОтбора+"
				|И (##.Ответственный В ИЕРАРХИИ (&Ответственный))";
			КонецЕсли;
			
			СтруктураПараметров.Вставить("Ответственный",ОтветственныйЗаявка);
			
		КонецЕсли;
		
		Если НЕ (ОтборДатаНач='00010101' ИЛИ ОтборДатаКон='00010101') Тогда
			
			ТекстОтбора=ТекстОтбора+"
			|И (##.ДатаРасхода МЕЖДУ &ДатаНач И &ДатаКон)";
			
			СтруктураПараметров.Вставить("ДатаНач",НачалоДня(ОтборДатаНач));
			СтруктураПараметров.Вставить("ДатаКон",КонецДня(ОтборДатаКон));
			
		ИначеЕсли НЕ ОтборДатаНач='00010101' Тогда
			
			ТекстОтбора=ТекстОтбора+"
			|И (##.ДатаРасхода >= &ДатаНач)";
			
			СтруктураПараметров.Вставить("ДатаНач",НачалоДня(ОтборДатаНач));
			
		ИначеЕсли НЕ ОтборДатаКон='00010101' Тогда
			
			ТекстОтбора=ТекстОтбора+"
			|И (##.ДатаРасхода <= &ДатаКон)";
			
			СтруктураПараметров.Вставить("ДатаКон",КонецДня(ОтборДатаКон));
			
		КонецЕсли;

		ТекстОтбора=Сред(ТекстОтбора,4);
		
	Иначе // Формируем запрос по конкретной заявке
		
		ТекстОтбора="##=&Заявка";
		СтруктураПараметров.Вставить("Заявка",Заявка);
		
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
	|	ЗаявкиОстаток.Заявка КАК Заявка,
	|	СУММА(ЗаявкиОстаток.СуммаЗаявкиОстаток) КАК ОстатокЗаявка,
	|	СУММА(ЗаявкиОстаток.СуммаРезерваОстаток) КАК ОстатокРезерв,
	|	СУММА(ЗаявкиОстаток.СуммаРазмещенияОстаток) КАК ОстатокРазмещение,
	|	ЗаявкиОстаток.Заявка.Ответственный КАК Ответственный,
	|	ЗаявкиОстаток.Заявка.ВалютаДокумента КАК ВалютаЗаявка,
	|	ЗаявкиОстаток.Заявка.Контрагент КАК Контрагент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование КАК Заявка,
	|		ЗаявкиНаРасходованиеСредствОстатки.СуммаОстаток КАК СуммаЗаявкиОстаток,
	|		ЗаявкиНаРасходованиеСредствОстатки.СуммаУпрОстаток КАК СуммаУпрЗаявкиОстаток,
	|		ЗаявкиНаРасходованиеСредствОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовЗаявкиОстаток,
	|		0 КАК СуммаРезерваОстаток,
	|       0 КАК СуммаРазмещенияОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаявкиНаРасходованиеСредств.Остатки(&МоментДокумента,"+СтрЗаменить(ТекстОтбора,"##","ЗаявкаНаРасходование")+" ) КАК ЗаявкиНаРасходованиеСредствОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДенежныеСредстваВРезервеОстатки.ДокументРезервирования,
	|		0,
	|		0,
	|		0,
	|		ДенежныеСредстваВРезервеОстатки.СуммаОстаток,
	|		0
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредстваВРезерве.Остатки(&МоментДокумента,"+СтрЗаменить(ТекстОтбора,"##","ДокументРезервирования")+" ) КАК ДенежныеСредстваВРезервеОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументРезервирования,
	|		0,
	|		0,
	|		0,
	|		0,
	|		РазмещениеЗаявокНаРасходованиеСредствОстатки.СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.РазмещениеЗаявокНаРасходованиеСредств.Остатки(&МоментДокумента,"+СтрЗаменить(ТекстОтбора,"##","ДокументРезервирования")+" ) КАК РазмещениеЗаявокНаРасходованиеСредствОстатки) КАК ЗаявкиОстаток
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкиОстаток.Заявка";
	
	Для Каждого Параметр Из СтруктураПараметров Цикл
		
		Запрос.УстановитьПараметр(Параметр.Ключ,Параметр.Значение);
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("МоментДокумента",МоментВремени());
	
	Возврат Запрос;
	
КонецФункции // СформироватьЗапрос()

// Добавляет в табличную часть заявки, по которым есть остатки в регистрах
// "ЗаявкиНаРасходованиеСредств" и (или) в регистре "ДенежныеСредстваВРезерве"
//
Процедура ЗаполнитьЗаявкиПоОстаткам() Экспорт
	
	Запрос=СформироватьЗапрос();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ЗаявкиНаРасходованиеСредств.Добавить();
		НоваяСтрока.Заявка = Выборка.Заявка;
		НоваяСтрока.ВалютаЗаявка=Выборка.ВалютаЗаявка;
		НоваяСтрока.ОстатокЗаявка=Выборка.ОстатокЗаявка;
		НоваяСтрока.ОстатокРезерв=Выборка.ОстатокРезерв;
		НоваяСтрока.ОстатокРазмещение=Выборка.ОстатокРазмещение;
		НоваяСтрока.Контрагент=Выборка.Контрагент;
		НоваяСтрока.Ответственный=Выборка.Ответственный;
	КонецЦикла; 
		
КонецПроцедуры // ЗаполнитьЗаявкиПоОстаткам()

// Формирует движения по регистрам
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(Отказ, Заголовок)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ЗаявкиКЗакрытию.Заявка КАК Заявка,
	|	ЗаявкиКЗакрытию.Заявка.ВидОперации КАК ВидОперации,
	|	ЗаявкиНаРасходованиеСредствОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЗаявкиНаРасходованиеСредствОстатки.Сделка КАК Сделка,
	|	ЗаявкиНаРасходованиеСредствОстатки.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ЗаявкиНаРасходованиеСредствОстатки.Проект КАК Проект,
	|	ЗаявкиНаРасходованиеСредствОстатки.СуммаВзаиморасчетовОстаток КАК ОстатокРасчеты,
	|	ЗаявкиНаРасходованиеСредствОстатки.СуммаУпрОстаток КАК ОстатокРасчетыУпр,
	|	ЗаявкиНаРасходованиеСредствОстатки.СуммаОстаток КАК ОстатокСумма
	|ИЗ
	|	Документ.ЗакрытиеЗаявокНаРасходованиеСредств.ЗаявкиНаРасходованиеСредств КАК ЗаявкиКЗакрытию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаявкиНаРасходованиеСредств.Остатки КАК ЗаявкиНаРасходованиеСредствОстатки
	|		ПО ЗаявкиКЗакрытию.Заявка = ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование
	|ГДЕ
	|	ЗаявкиКЗакрытию.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	// Инициируем наборы движений по регистрам
		
	НаборДвиженийЗаявки = Движения.ЗаявкиНаРасходованиеСредств;
	ТаблицаДвиженийЗаявки = НаборДвиженийЗаявки.Выгрузить();
	
	НаборДвиженийРасчеты = Движения.РасчетыСКонтрагентами;
	ТаблицаДвиженийРасчеты = НаборДвиженийРасчеты.Выгрузить();
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		Если НЕ (РезультатЗапроса.ОстатокСумма=NULL ИЛИ (РезультатЗапроса.ОстатокСумма=0 И РезультатЗапроса.ОстатокРасчеты=0 И РезультатЗапроса.ОстатокРасчетыУпр=0)) Тогда
			
			// По регистру "ЗаявкиНаРасходованиеСредств"
			
			СтрокаДвиженийЗаявки = ТаблицаДвиженийЗаявки.Добавить();
			СтрокаДвиженийЗаявки .ДоговорКонтрагента           			= РезультатЗапроса.ДоговорКонтрагента;
			СтрокаДвиженийЗаявки .Сделка 								= РезультатЗапроса.Сделка;
			СтрокаДвиженийЗаявки .СтатьяДвиженияДенежныхСредств			= РезультатЗапроса.СтатьяДвиженияДенежныхСредств;
			СтрокаДвиженийЗаявки .Проект								= РезультатЗапроса.Проект;
			СтрокаДвиженийЗаявки .СуммаВзаиморасчетов      				= РезультатЗапроса.ОстатокРасчеты;
			СтрокаДвиженийЗаявки .СуммаУпр			      				= РезультатЗапроса.ОстатокРасчетыУпр;
			СтрокаДвиженийЗаявки .Сумма				      				= РезультатЗапроса.ОстатокСумма;
			СтрокаДвиженийЗаявки .ЗаявкаНаРасходование                 	= РезультатЗапроса.Заявка;
			
			Если РезультатЗапроса.ВидОперации=Перечисления.ВидыОперацийЗаявкиНаРасходование.ВозвратДенежныхСредствПокупателю 
				ИЛИ РезультатЗапроса.ВидОперации=Перечисления.ВидыОперацийЗаявкиНаРасходование.ОплатаПоставщику
				ИЛИ РезультатЗапроса.ВидОперации=Перечисления.ВидыОперацийЗаявкиНаРасходование.РасчетыПоКредитамИЗаймамСКонтрагентами Тогда 			
				
				// По регистру "РасчетыСКонтрагентами"
				
				РасчетыВозврат=НаправленияДвиженияДляДокументаДвиженияДенежныхСредствУпр(РезультатЗапроса.ВидОперации);

				СтрокаДвиженийРасчеты = ТаблицаДвиженийРасчеты.Добавить();
				СтрокаДвиженийРасчеты.ДоговорКонтрагента 	= РезультатЗапроса.ДоговорКонтрагента;
				СтрокаДвиженийРасчеты.РасчетыВозврат        = РасчетыВозврат;	
				СтрокаДвиженийРасчеты.Сделка			 	= РезультатЗапроса.Сделка;
				СтрокаДвиженийРасчеты.СуммаВзаиморасчетов   = РезультатЗапроса.ОстатокРасчеты;
				СтрокаДвиженийРасчеты.СуммаУпр			    = РезультатЗапроса.ОстатокРасчетыУпр;
				
			КонецЕсли;
			
		КонецЕсли;
				
	КонецЦикла;
	
	// Записываем наборы движений в регистры
	// По регистру "ЗаявкиНаРасходованиеСредств"
	
	НаборДвиженийЗаявки.мПериод            = Дата;
	НаборДвиженийЗаявки.мТаблицаДвижений   = ТаблицаДвиженийЗаявки;
	
	Движения.ЗаявкиНаРасходованиеСредств.ВыполнитьРасход();
	
	// По регистру "РасчетыСКонтрагентами"
	
	НаборДвиженийРасчеты.мПериод            = Дата;
	НаборДвиженийРасчеты.мТаблицаДвижений   = ТаблицаДвиженийРасчеты;
	
	Движения.РасчетыСКонтрагентами.ВыполнитьРасход();
	
	// Закрываем резерв по заявкам
	
	НаборДвиженийРезерв = Движения.ДенежныеСредстваВРезерве;	
	ТаблицаДвиженийРезерв = НаборДвиженийРезерв.Выгрузить();
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ЗаявкиКЗакрытию.Заявка КАК Заявка,
	|	ДенежныеСредстваВРезервеОстатки.ВидДенежныхСредств КАК ВидДенежныхСредств,
	|	ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредстваВРезервеОстатки.СуммаОстаток КАК ОстатокРезерв
	|ИЗ
	|	Документ.ЗакрытиеЗаявокНаРасходованиеСредств.ЗаявкиНаРасходованиеСредств КАК ЗаявкиКЗакрытию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваВРезерве.Остатки КАК ДенежныеСредстваВРезервеОстатки
	|		ПО ЗаявкиКЗакрытию.Заявка = ДенежныеСредстваВРезервеОстатки.ДокументРезервирования
	|ГДЕ
	|	ЗаявкиКЗакрытию.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		Если НЕ (РезультатЗапроса.ОстатокРезерв=NULL ИЛИ РезультатЗапроса.ОстатокРезерв=0) Тогда
			
			// По регистру "ДенежныеСредстваВРезерве"
			
			СтрокаДвиженийРезерв = ТаблицаДвиженийРезерв.Добавить();
			СтрокаДвиженийРезерв.БанковскийСчетКасса           			= РезультатЗапроса.БанковскийСчетКасса;
			СтрокаДвиженийРезерв.ВидДенежныхСредств 					= РезультатЗапроса.ВидДенежныхСредств;
			СтрокаДвиженийРезерв.Сумма                					= РезультатЗапроса.ОстатокРезерв;
			СтрокаДвиженийРезерв.ДокументРезервирования                	= РезультатЗапроса.Заявка;
			
		КонецЕсли;
		
	КонецЦикла;
		
	НаборДвиженийРезерв.мПериод            = Дата;
	НаборДвиженийРезерв.мТаблицаДвижений   = ТаблицаДвиженийРезерв;
	
	Движения.ДенежныеСредстваВРезерве.ВыполнитьРасход();
	
	//Закрываем размещение по заявкам
		
	НаборДвиженийРазмещение = Движения.РазмещениеЗаявокНаРасходованиеСредств;	
	ТаблицаДвиженийРазмещение = НаборДвиженийРазмещение.Выгрузить();
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ЗаявкиКЗакрытию.Заявка КАК Заявка,
	|	РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументПланирования КАК ДокументПланирования,
	|	РазмещениеЗаявокНаРасходованиеСредствОстатки.СуммаОстаток КАК ОстатокРазмещение
	|ИЗ
	|	Документ.ЗакрытиеЗаявокНаРасходованиеСредств.ЗаявкиНаРасходованиеСредств КАК ЗаявкиКЗакрытию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаявокНаРасходованиеСредств.Остатки КАК РазмещениеЗаявокНаРасходованиеСредствОстатки
	|		ПО ЗаявкиКЗакрытию.Заявка = РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументРезервирования
	|ГДЕ
	|	ЗаявкиКЗакрытию.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		Если НЕ (РезультатЗапроса.ОстатокРазмещение=NULL ИЛИ РезультатЗапроса.ОстатокРазмещение=0) Тогда
			
			// По регистру "РазмещениеЗаявокНаРасходованиеСредств"
			
			СтрокаДвиженийРазмещение = ТаблицаДвиженийРазмещение.Добавить();
			СтрокаДвиженийРазмещение.ДокументПланирования           			= РезультатЗапроса.ДокументПланирования;
			СтрокаДвиженийРазмещение.Сумма                						= РезультатЗапроса.ОстатокРазмещение;
			СтрокаДвиженийРазмещение.ДокументРезервирования                 	= РезультатЗапроса.Заявка;
			
		КонецЕсли;
		
	КонецЦикла;
		
	НаборДвиженийРазмещение.мПериод            = Дата;
	НаборДвиженийРазмещение.мТаблицаДвижений   = ТаблицаДвиженийРазмещение;
	
	Движения.РазмещениеЗаявокНаРасходованиеСредств.ВыполнитьРасход();
					
КонецПроцедуры // ДвиженияПоРегистрам()

Процедура ОбработкаПроведения(Отказ, Режим)

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, Новый Структура("Ответственный,Состояние"), Отказ, Заголовок);
	
	Если Не Отказ Тогда
		
		ДвиженияПоРегистрам(Отказ, Заголовок);
		
	КонецЕсли; 
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ Отказ Тогда
	
		обЗаписатьПротоколИзменений(ЭтотОбъект);
	
	КонецЕсли; 

КонецПроцедуры



 
 