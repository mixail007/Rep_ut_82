
Процедура КоманднаяПанель1СоздатьДокументы(Кнопка)
	Отказ = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОшиповкаТоварДляОшиповки.Комплектующее1,
	|	ОшиповкаТоварДляОшиповки.КоличествоКомплектующего1
	|ПОМЕСТИТЬ ВТ_Комплектация1
	|ИЗ
	|	Документ.Ошиповка.ТоварДляОшиповки КАК ОшиповкаТоварДляОшиповки
	|ГДЕ
	|	ОшиповкаТоварДляОшиповки.Ссылка = &Ссылка
	|	И ОшиповкаТоварДляОшиповки.Комплектация = ЗНАЧЕНИЕ(Документ.КомплектацияНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОшиповкаТоварДляОшиповки.Комплектующее2,
	|	ОшиповкаТоварДляОшиповки.КоличествоКомплектующего2
	|ПОМЕСТИТЬ ВТ_Комплектация2
	|ИЗ
	|	Документ.Ошиповка.ТоварДляОшиповки КАК ОшиповкаТоварДляОшиповки
	|ГДЕ
	|	ОшиповкаТоварДляОшиповки.Ссылка = &Ссылка
	|	И ОшиповкаТоварДляОшиповки.Комплектация = ЗНАЧЕНИЕ(Документ.КомплектацияНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Комплектация1.Комплектующее1,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ВТ_Комплектация1.КоличествоКомплектующего1 КАК Разница
	|ПОМЕСТИТЬ ВТ_Проверка1
	|ИЗ
	|	ВТ_Комплектация1 КАК ВТ_Комплектация1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&Текдата,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							ВТ_Комплектация.Комплектующее1
	|						ИЗ
	|							ВТ_Комплектация1 КАК ВТ_Комплектация)
	|					И Склад = &Склад) КАК ТоварыНаСкладахОстатки
	|		ПО ВТ_Комплектация1.Комплектующее1 = ТоварыНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Комплектация2.Комплектующее2,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ВТ_Комплектация2.КоличествоКомплектующего2, 0) КАК Разница
	|ПОМЕСТИТЬ ВТ_Проверка2
	|ИЗ
	|	ВТ_Комплектация2 КАК ВТ_Комплектация2
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&Текдата,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							ВТ_Комплектация.Комплектующее2
	|						ИЗ
	|							ВТ_Комплектация2 КАК ВТ_Комплектация)
	|					И Склад = &Склад) КАК ТоварыНаСкладахОстатки
	|		ПО ВТ_Комплектация2.Комплектующее2 = ТоварыНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Проверка1.Комплектующее1 КАК Комплектующее,
	|	ВТ_Проверка1.Разница
	|ИЗ
	|	ВТ_Проверка1 КАК ВТ_Проверка1
	|ГДЕ
	|	ВТ_Проверка1.Разница < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Проверка2.Комплектующее2,
	|	ВТ_Проверка2.Разница
	|ИЗ
	|	ВТ_Проверка2 КАК ВТ_Проверка2
	|ГДЕ
	|	ВТ_Проверка2.Разница < 0";
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
    Запрос.УстановитьПараметр("ТекДата",Дата);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Сообщить("На складе "+склад+ " не достаточно комлектующего товара "+Выборка.Комплектующее+" Код: "+Выборка.Комплектующее.Код+". Не хватает "+(-Выборка.Разница)+" шт.");
        Отказ = Истина;
	КонецЦикла;
	
	Если Не Отказ Тогда
		Для Каждого СтрТовар из ТоварДляОшиповки Цикл
			Если СтрТовар.Комплектация = Документы.КомплектацияНоменклатуры.ПустаяСсылка() Тогда
				Комплектация = Документы.КомплектацияНоменклатуры.СоздатьДокумент();
		    	Комплектация.ВидКомплектации = Перечисления.ВидыКомплектации.Производство;
				Комплектация.ВидОперации =  Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация;
				Комплектация.Склад = Склад;
				Комплектация.Организация = Организация;
				Комплектация.Подразделение = Справочники.Подразделения.НайтиПоКоду("00005");
				Комплектация.ОтражатьВУправленческомУчете = Истина;
				Комплектация.ОтражатьВБухгалтерскомУчете = Истина;
				Комплектация.Дата = ТекущаяДата();        
				Комплектация.Номенклатура = СтрТовар.Номенклатура;
				Комплектация.Количество = СтрТовар.Количество;
				Комплектация.Коэффициент = 1;
				Комплектация.ЕдиницаИзмерения = СтрТовар.Номенклатура.ЕдиницаХраненияОстатков;
				СтрокаКомплект=Комплектация.Комплектующие.Добавить();
				СтрокаКомплект.Номенклатура = СтрТовар.Комплектующее1;
				СтрокаКомплект.Количество = СтрТовар.КоличествоКомплектующего1;
				СтрокаКомплект.ЕдиницаИзмерения = СтрТовар.Комплектующее1.ЕдиницаХраненияОстатков;
				СтрокаКомплект.Коэффициент = 1; 
				
				СтрокаКомплект=Комплектация.Комплектующие.Добавить();
				СтрокаКомплект.Номенклатура = СтрТовар.Комплектующее2;
				СтрокаКомплект.Количество = СтрТовар.КоличествоКомплектующего2;
				СтрокаКомплект.ЕдиницаИзмерения = СтрТовар.Комплектующее2.ЕдиницаХраненияОстатков;
                СтрокаКомплект.Коэффициент = 1; 
				Комплектация.Записать(РежимЗаписиДокумента.Проведение);				

				СтрТовар.Комплектация = Комплектация.Ссылка;
			КонецЕсли;
		КонецЦикла;
		
		
	КонецЕсли;
    Записать();
КонецПроцедуры

Процедура ДействияФормыСозадтьПеремещения(Кнопка)
	Для каждого СтрТовары из ТоварДляОшиповки Цикл
		Если ЗначениеНеЗаполнено(СтрТовары.Комплектация) Тогда
			Сообщить("Перед необходимо заполнить комплектацию");
			Возврат ;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
	|	ПеремещениеТоваровТовары.Ссылка.СкладПолучатель
	|ПОМЕСТИТЬ Вт_Перемещения
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка.ДокументОснование = &Ссылка
	|	И ПеремещениеТоваровТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Ссылка.СкладПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОшиповкаТоварДляОшиповки.Ссылка,
	|	ОшиповкаТоварДляОшиповки.Номенклатура,
	|	СУММА(ОшиповкаТоварДляОшиповки.Количество) КАК Количество,
	|	ОшиповкаТоварДляОшиповки.Склад КАК Склад,
	|	СУММА(ОшиповкаТоварДляОшиповки.Количество - ЕСТЬNULL(Вт_Перемещения.Количество, 0)) КАК КоличествоСписать
	|ИЗ
	|	Документ.Ошиповка.ТоварДляОшиповки КАК ОшиповкаТоварДляОшиповки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Вт_Перемещения КАК Вт_Перемещения
	|		ПО ОшиповкаТоварДляОшиповки.Номенклатура = Вт_Перемещения.Номенклатура
	|			И ОшиповкаТоварДляОшиповки.Склад = Вт_Перемещения.СкладПолучатель
	|ГДЕ
	|	ОшиповкаТоварДляОшиповки.Ссылка = &Ссылка
	|	И ОшиповкаТоварДляОшиповки.Количество - ЕСТЬNULL(Вт_Перемещения.Количество, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ОшиповкаТоварДляОшиповки.Номенклатура,
	|	ОшиповкаТоварДляОшиповки.Склад,
	|	ОшиповкаТоварДляОшиповки.Ссылка
	|ИТОГИ
	|	СУММА(КоличествоСписать)
	|ПО
	|	Склад";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Если Выборка.Количество() =0 Тогда
		Сообщить("По этому документу уже созданы перемещения!");
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл 
		ДокПеремещение = Документы.ПеремещениеТоваров.СоздатьДокумент();
		ДокПеремещение.СкладПолучатель = Выборка.Склад;
		ДокПеремещение.ДокументОснование = Ссылка;
		ДокПеремещение.СкладОтправитель = Склад;
		ВыборкаДетали = Выборка.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			НовСтрока = ДокПеремещение.Товары.Добавить();
			НовСтрока.Номенклатура = ВыборкаДетали.Номенклатура;
			НовСтрока.Качество = Справочники.Качество.Новый;
			НовСтрока.Склад = Склад;
			НовСтрока.Количество = ВыборкаДетали.Количество;
			НовСтрока.ЕдиницаИзмерения = НовСтрока.Номенклатура.ЕдиницаХраненияОстатков;
	        НовСтрока.Коэффициент      = НовСтрока.ЕдиницаИзмерения.Коэффициент;
            ВалютаДокумента    = Константы.ВалютаРегламентированногоУчета.Получить();
			КурсДокумента      = 1;
			КратностьДокумента = 1;
			НовСтрока.Цена = ПолучитьРозничнуюЦену(НовСтрока.Номенклатура,, Склад,
			                                                  ВалютаДокумента, Неопределено, ТекущаяДата(),
			                                                  НовСтрока.ЕдиницаИзмерения,
			                                                  ВалютаДокумента, КурсДокумента, КратностьДокумента);
		КонецЦикла;
		ПараметрыФормы = Новый Структура("Ключ", ДокПеремещение);
        ОткрытьФорму("Документ.ПеремещениеТоваров.Форма.ФормаДокумента", ПараметрыФормы);
	КонецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель1ОповеститьМенеджеров(Кнопка)
	Отказ = Ложь;
    Для Каждого СтрТовар из ТоварДляОшиповки Цикл
		Если СтрТовар.Комплектация = Документы.КомплектацияНоменклатуры.ПустаяСсылка() ТОгда
			Сообщить("Нет документа комплектации для номенклатуры: " + СтрТовар.Номенклатура);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	Если Не Отказ  Тогда   // Делаем запись в заказе только при первом проведении
		Запрос = Новый Запрос;          // Если документ распровели, но в заказ уже был ппоменен товар, результат закпроса будет пустым
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОшиповкаТоварДляОшиповки.Комплектующее1,
		|	СУММА(ОшиповкаТоварДляОшиповки.КоличествоКомплектующего1) КАК КоличествоКомплектующего1,
		|	ОшиповкаТоварДляОшиповки.Номенклатура,
		|	СУММА(ОшиповкаТоварДляОшиповки.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_Товар
		|ИЗ
		|	Документ.Ошиповка.ТоварДляОшиповки КАК ОшиповкаТоварДляОшиповки
		|ГДЕ
		|	ОшиповкаТоварДляОшиповки.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ОшиповкаТоварДляОшиповки.Комплектующее1,
		|	ОшиповкаТоварДляОшиповки.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказПокупателяТовары.Ссылка КАК Заказ,
		|	ЗаказПокупателяТовары.Ссылка.МоментВремени КАК МоментВремениЗаказа,
		|	ЗаказПокупателяТовары.Количество КАК КоличествоВЗаказе,
		|	ВТ_Товар.Комплектующее1 КАК Комплектующее,
		|	ВТ_Товар.КоличествоКомплектующего1 КАК КоличествоСделано,
		|	ВТ_Товар.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВТ_Товар КАК ВТ_Товар
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|		ПО ВТ_Товар.Комплектующее1 = ЗаказПокупателяТовары.Номенклатура
		|ГДЕ
		|	ЗаказПокупателяТовары.Ссылка В(&СписокЗаказов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	МоментВремениЗаказа
		|ИТОГИ
		|	СУММА(КоличествоВЗаказе),
		|	МАКСИМУМ(КоличествоСделано)
		|ПО
		|	Номенклатура";
		СписокЗаказов = Новый СписокЗначений();
		Для Каждого Стр из ДокументОснование.ЗаказыПокупателей Цикл
			Если Стр.Реализация <> Документы.ПеремещениеТоваров.ПустаяСсылка() И  Стр.Реализация <> Неопределено Тогда
				СписокЗаказов.Добавить(Стр.ЗаказПокупателя);
			КонецЕсли;
		КонецЦикла;
		Запрос.УстановитьПараметр("СписокЗаказов",СписокЗаказов);
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Результат = Запрос.Выполнить();
		ТЗЗаказов = Новый ТаблицаЗначений;
		ТЗЗаказов.Колонки.Добавить("Заказ", Новый ОписаниеТипов("ДокументСсылка.ЗаказПокупателя"));
		ТЗЗаказов.Колонки.Добавить("Менеджер", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
		ТЗЗаказов.Колонки.Добавить("НоменклатураСт",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТЗЗаказов.Колонки.Добавить("НоменклатураНов",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			КолВоТовараНужно = Выборка.КоличествоСделано;
			ВыборкаДетали = Выборка.Выбрать();
			Пока ВыборкаДетали.Следующий() и КолВоТовараНужно > 0 Цикл
				КоличествоВЗаказе = ВыборкаДетали.КоличествоВЗаказе;
				Если КоличествоВЗаказе > КолВоТовараНужно Тогда
					Сообщить(" В заказе " + ВыборкаДетали.Заказ + " номенклатуры " + ВыборкаДетали.Комплектующее + " больше чем ошиповали.", СтатусСообщения.Важное);
					//Отказ =Истина;
					//Прервать;
				Иначе
					КолВоТовараНужно =  КолВоТовараНужно - КоличествоВЗаказе;
					СтрЗаказ = ТЗЗаказов.Добавить();
					СтрЗаказ.Заказ = ВыборкаДетали.Заказ;
					СтрЗаказ.Менеджер = СтрЗаказ.Заказ.ДоговорКонтрагента.ОтветственноеЛицо;
					СтрЗаказ.НоменклатураСт = ВыборкаДетали.Комплектующее;
					СтрЗаказ.НоменклатураНов = ВыборкаДетали.Номенклатура;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Заказ КАК Заказ,
		|	ТЗ.Менеджер КАК Менеджер,
		|	ТЗ.НоменклатураНов,
		|	ТЗ.НоменклатураСт
		|ПОМЕСТИТЬ ВТ_Мен
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Мен.Заказ КАК Заказ,
		|	ВТ_Мен.Менеджер КАК Менеджер,
		|	ВТ_Мен.НоменклатураНов,
		|	ВТ_Мен.НоменклатураСт
		|ИЗ
		|	ВТ_Мен КАК ВТ_Мен
		|ИТОГИ
		|	МАКСИМУМ(Менеджер)
		|ПО
		|	Заказ";
		Запрос.УстановитьПараметр("ТЗ",ТЗЗаказов);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			Отказ = Ложь;
			ДокЗаказ = Выборка.Заказ.ПолучитьОбъект();
			ВыборкаДетали = Выборка.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл
				МассивТов = ДокЗаказ.Товары.НайтиСтроки(Новый Структура("Номенклатура",ВыборкаДетали.НоменклатураСт));
				МассивТов[0].Номенклатура = ВыборкаДетали.НоменклатураНов;
			КонецЦикла;
			ДокЗаказ.Ошиповка = Ложь;
				
			Попытка
				ДокЗаказ.Записать(РежимЗаписиДокумента.Проведение);
				ТоварыЦенаКонтрагента(ДокЗаказ);
				ДокЗаказ.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщить("Не удалось провести заказ: " + ДокЗаказ + " " + ОписаниеОшибки()  );
				Сообщить("Оповестите менеджера : " + Выборка.Менеджер + " САМИ об ошиповке его товара");
				Отказ = Истина;
			КонецПопытки;
			Если Не Отказ Тогда
				УЗ= Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("no-reply@yst76.ru");
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	КонтактнаяИнформация.Объект,
				|	МАКСИМУМ(ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200))) КАК ЭлПочта
				|ИЗ
				|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
				|ГДЕ
				|	КонтактнаяИнформация.Объект = &Объект
				|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя)
				|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
				|
				|СГРУППИРОВАТЬ ПО
				|	КонтактнаяИнформация.Объект";
				Запрос.УстановитьПараметр("Объект", Выборка.Менеджер);
				РезультатКИ = Запрос.Выполнить();
				ВыборкаКИ = РезультатКИ.Выбрать();
				Если ВыборкаКИ.Следующий() Тогда
					ЭлПочтаМенеджера = СокрЛП(ВыборкаКИ.ЭлПочта);
					
					ТекстСообщения = "По заказу " + Выборка.Заказ.номер + " от " + ФОрмат(Выборка.Заказ.Дата, "ДФ=dd.MM.yyyy") + " произведена ошиповка.";
					Если ВыборкаКИ.ЭлПочта <> "" Тогда
						Попытка
							яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(ЭлПочтаМенеджера,Новый СписокЗначений, УЗ, ТекстСообщения, "Ошиповка");
						Исключение
							Сообщить("Не удалось отправить письмо менеджеру " + Выборка.Менеджер);
						КонецПопытки;
						
					Иначе
						Сообщить("У менеджера "+ Выборка.Объект + " не заведена электронная почта");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

				
		КонецЦикла;
	КонецЕсли;
	

КонецПроцедуры

Процедура ТоварыЦенаКонтрагента(ДокЗаказ)  
	Контрагент = ДокЗаказ.Контрагент;
	Если ДокЗаказ.Товары.Количество()=0 Тогда
		Предупреждение("Нет товаров для пересчета!");
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.ЗагрузитьЗначения( ДокЗаказ.Товары.ВыгрузитьКолонку("Номенклатура") );  //+++ 07.10.2014
	
	//+++ 25.02.2014 - срез цен на дату документа... но не более чем на ВеличинаПодсчетаПериодаВДокументеЦены=30(дней) !
	MaxDays	  = Константы.ВеличинаПодсчетаПериодаВДокументеЦены.Получить(); //30-90 дней = 1-3 мес!
	
	ДатаСреза = ?(Контрагент.ДатаСрезаЦен>'20140101', Контрагент.ДатаСрезаЦен, ДокЗаказ.Дата );
	
	Если ( НачалоДня(ТекущаяДата()) - ДатаСреза )> 86400*MaxDays Тогда
		Предупреждение("Расчет цен на дату: "+формат(ДатаСреза,"")+" 
		|превышает макс.разрешенный период "+строка(MaxDays)+" дней!
		|поэтому расчет цен будет произведен на текущую дату!",30);
		ДатаСреза = неопределено; // на текущую дату!
	КонецЕсли;  
	
	табЗнач1  = Новый ТаблицаЗначений; 
	
	//+++ 26.02.2014  цены и скидки - на дату документа!
	//табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(Контрагент, СписокНом);
	табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(Контрагент, СписокНом, ДатаСреза); // по документу Политика ценообразования 
	
	//+++ 07.11.2013
	Если ТипЗнч(табЗнач1) = Тип("Строка") Тогда //Если нет документа политики ценообразования - то по регистрам сведений "Политика ценообразования"
		табЗнач1  = Новый ТаблицаЗначений;
		
		
		
		
		//+++( 12.01.2015 - экспортный регистр сведений 
		//- только для Экспортных клиентов И ТОЛЬКО для Валютных документов !!!
		флЭкспорт = Контрагент.Экспорт и ДокЗаказ.ВалютаДокумента.Код<>"643";//15.08.2016 по коду быстрее!
		
		ЕСЛИ флЭкспорт тогда
			
			Если  ДатаСреза<>Неопределено и Контрагент.ДатаСрезаЦен>'20140101' Тогда 
				табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСвЭкспорт(Контрагент, СписокНом, ЛОЖЬ, Неопределено, Контрагент.ДатаСрезаЦен);  
			Иначе
				ДатаСреза=Неопределено;
				//+++ 26.02.2014 - по правилам - всегда по текущим ценам пересчет 
				табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСвЭкспорт(Контрагент, СписокНом);  
			КонецЕсли;
			
		ИНАЧЕ //как было раньше
			
			//+++ 08.10.2014 - по дате среза, Если он не превышает MaxDays и только для клиентов, у которых установлена ДатаСрезаЦен!
			Если  ДатаСреза<>Неопределено и Контрагент.ДатаСрезаЦен>'20140101' Тогда 
				табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, СписокНом, ЛОЖЬ, Неопределено, Контрагент.ДатаСрезаЦен);  
			Иначе
				ДатаСреза=Неопределено;
				//+++ 26.02.2014 - по правилам - всегда по текущим ценам пересчет 
				табЗнач1  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, СписокНом);  
			КонецЕсли;
			
		КОНЕЦЕСЛИ;	
		//+++)	
		
		
		
		
		Если ТипЗнч(табЗнач1) = Тип("Строка") Тогда // нет политики ценообразования!
			//Предупреждение(табЗнач1);
			сообщить("Ошибка при пересчете по регистрам правил ценообразования: "+табЗнач1, СтатусСообщения.Внимание); 
			возврат;
		Иначе
			Если флЭкспорт тогда //12.01.2015
				Сообщить("---- Цены пересчитаны по регистру: ""Правила ценообразования Экспорт"" "+?(ДатаСреза=неопределено,"","(на дату среза цен: "+строка(ДатаСреза)+" )")+"----");
			Иначе	
				Сообщить("---- Цены пересчитаны по регистрам: ""Правила ценообразования"" и ""Правила Ценообразования Общие"" "+?(ДатаСреза=неопределено,"","(на дату среза цен: "+строка(ДатаСреза)+" )")+"----");
			КонецЕсли;	
		КонецЕсли;
		
	Иначе
		Сообщить("---- Цены пересчитаны по документу ""Политика ценообразования"" "+?(ДатаСреза=неопределено,"", "(на дату среза цен: "+строка(ДатаСреза)+" )")+" ----");
	КонецЕсли;
	
	
	списокТоваровСНулевойЦеной = Новый СписокЗначений;
	
	//+++ 06.02.2015 - условие по ТИПУ договора = Предоплата И константе!
	услПредоплаты = // константы.СогласованиеПоСкидкамКлиентов.Получить() и  //10.09.2015 ВСЕГДА по договору
	ДокЗаказ.ДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.НайтиПоКоду("00001");
	
	Для каждого стр1 из ДокЗаказ.Товары Цикл
		стр2 = табЗнач1.найти( стр1.Номенклатура, "Номенклатура");
		стр1Цена = стр1.Цена;
		Если стр2 = неопределено Тогда
			стр2МинимальнаяЦена = 0;
			Сообщить(строка(стр1.НомерСтроки)+") "+стр1.Номенклатура.Код+" "+строка(стр1.Номенклатура)
			+" - цена НЕ определена! Возможно не установлена цена по типу цен Базовая и/или Кр.Опт"
			+?(ДатаСреза=неопределено," на текущую дату!"," на "+строка(ДатаСреза) ) , СтатусСообщения.Внимание);
		Иначе
			Если услПредоплаты тогда
				попытка
					стр2МинимальнаяЦена = стр2.ЦенаСоСкидкойПредоплаты; //+++ 06.02.2015
				исключение // если экспортные цены или из Политики... то там нет поля ЦенаСоСкидкойПредоплаты	
					стр2МинимальнаяЦена = стр2.МинимальнаяЦена;
				КонецПопытки;	
			Иначе
				стр2МинимальнаяЦена = стр2.МинимальнаяЦена;
			КонецЕсли;	
			
			//08.10.2014
			Если стр2.Приоритет=2000 Тогда 
				Сообщить(строка(стр1.НомерСтроки)+") "+стр1.Номенклатура.Код+" "+стр1.Номенклатура+" - цена не может быть расчитана по правилам от нулевой цены! Установлена цена Кр.Опта "
				+?( ДатаСреза=неопределено или (стр1.Номенклатура.ВидТовара<>перечисления.ВидыТоваров.Диски), "",
				" на дату "+строка(ДатаСреза)) , СтатусСообщения.Информация);
				//19.09.14 Смирнов
			ИначеЕсли стр2.Приоритет>1000 Тогда 
				Сообщить(строка(стр1.НомерСтроки)+") "+стр1.Номенклатура.Код+" "+стр1.Номенклатура+" - цена расчитана по общему правилам №"+строка(стр2.Приоритет-1000)
				+?( ДатаСреза=неопределено или (стр1.Номенклатура.ВидТовара<>перечисления.ВидыТоваров.Диски), "",
				" на дату "+строка(ДатаСреза)) , СтатусСообщения.Информация);
			КонецЕсли;
		КонецЕсли;
		
		//по 2-му кругу, Если это расчет на срез последних... и есть нулевые цены
		Если  ДатаСреза<>неопределено и Контрагент.ДатаСрезаЦен>'20140101' и стр2МинимальнаяЦена<=0 Тогда
			списокТоваровСНулевойЦеной.Добавить( стр1.Номенклатура );
		КонецЕсли;
		
		//-------------------------------
		Если стр1Цена<>стр2МинимальнаяЦена Тогда
			сообщить(строка(стр1.НомерСтроки)+") Цена: "+Формат(стр1Цена,"ЧДЦ=2")+" >> "+Формат(стр2МинимальнаяЦена,"ЧДЦ=2")
			+?(стр2 = неопределено,"", " По правилу № "+строка(стр2.Приоритет))
			+?(ДатаСреза=неопределено или (стр1.Номенклатура.ВидТовара<>перечисления.ВидыТоваров.Диски),"",
			" на дату "+строка(ДатаСреза)) +?(услПредоплаты," (по предоплате)","")  );
			//стр1.ПроцентСкидкиНаценки = (стр2МинимальнаяЦена/стр1Цена - 1)*100; // СКИДКА
			стр1.Цена = стр2МинимальнаяЦена; // изменение Цены по политике ценообразования
		КонецЕсли;		
		
		//--------пересчет ВСЕГДА!----------------------------
		стр1.СтавкаНДС = перечисления.СтавкиНДС.НДС18; // ВСЕГДА  18%
		РассчитатьСуммуТабЧасти(стр1, ЭтотОбъект);
		РассчитатьСуммуНДСТабЧасти(стр1, ЭтотОбъект);
		
		
	КонецЦикла;
	
	//============================================================================================= 
	//по 2-му кругу, Если это расчет на срез последних... и есть нулевые цены - то еще раз!
	Если  ДатаСреза<>неопределено и Контрагент.ДатаСрезаЦен>'20140101' и списокТоваровСНулевойЦеной.Количество()>0 Тогда 
		
		табЗнач2  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента(Контрагент, списокТоваровСНулевойЦеной); // по документу Политика ценообразования 
		
		//+++ 08.10.2014
		Если ТипЗнч(табЗнач2) = Тип("Строка") Тогда //Если нет документа политики ценообразования - то по регистрам сведений "Политика ценообразования"
			Сообщить("---- Цены для "+строка(списокТоваровСНулевойЦеной.Количество())+" будут пересчитаны по регистрам: ""Правила ценообразования"" и ""Правила Ценообразования Общие"" на текущую дату----");
			табЗнач2  = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв(Контрагент, списокТоваровСНулевойЦеной);  
		Иначе
			Сообщить("---- Цены для "+строка(списокТоваровСНулевойЦеной.Количество())+" пересчитаны по документу: ""Политика ценообразования"" на текущую дату----");
		КонецЕсли;	
		
		Для каждого стр1 из ЭтотОбъект.Товары Цикл
			
			//+++ 15.10.2014 ----------------только для 0 цен перепроверяем!-----------------------
			Если списокТоваровСНулевойЦеной.НайтиПоЗначению( стр1.Номенклатура )=неопределено Тогда
				продолжить;
			КонецЕсли;	
			
			стр2 = табЗнач2.найти( стр1.Номенклатура, "Номенклатура");
			
			стр1Цена = стр1.Цена;
			Если стр2 = неопределено Тогда
				стр2МинимальнаяЦена = 0;
				Сообщить(строка(стр1.НомерСтроки)+") "+стр1.Номенклатура.Код+" "+стр1.Номенклатура+" - цена НЕ определена! Возможно не установлена цена по типу цен Базовая и/или Кр.Опт на текущую дату!", СтатусСообщения.Внимание);
			Иначе
				//+++ 06.02.2015 - только если есть цена и усл.
				//стр2МинимальнаяЦена = стр2.МинимальнаяЦена;
				Если услПредоплаты и стр2.ЦенаСоСкидкойПредоплаты>0 тогда
					стр2МинимальнаяЦена = стр2.ЦенаСоСкидкойПредоплаты; 
				Иначе
					стр2МинимальнаяЦена = стр2.МинимальнаяЦена;
				КонецЕсли;	
				//+++)
				
				Если стр2.Приоритет=2000 Тогда 
					Сообщить(строка(стр1.НомерСтроки)+") "+стр1.Номенклатура.Код+" "+стр1.Номенклатура+" - цена не может быть расчитана по правилам от нулевой цены! Установлена цена Кр.Опта!", СтатусСообщения.Информация);
				ИначеЕсли стр2.Приоритет>1000 Тогда 
					Сообщить(строка(стр1.НомерСтроки)+") "+стр1.Номенклатура.Код+" "+стр1.Номенклатура+" - цена расчитана по общему правилам №"+строка(стр2.Приоритет-1000), СтатусСообщения.Информация);
				КонецЕсли;
			КонецЕсли;
			
			Если стр1Цена<>стр2МинимальнаяЦена Тогда
				сообщить(строка(стр1.НомерСтроки)+") Цена: "+Формат(стр1Цена,"ЧДЦ=2")+" >> "+Формат(стр2МинимальнаяЦена,"ЧДЦ=2")+" на текущую дату"
				+?(стр2 = неопределено,"", " по правилу № "+строка(стр2.Приоритет)) );
				//стр1.ПроцентСкидкиНаценки = (стр2МинимальнаяЦена/стр1Цена - 1)*100; // СКИДКА
				стр1.Цена = стр2МинимальнаяЦена; // изменение Цены по политике ценообразования
				//-------пересчет ВСЕГДА!----------------------------
				стр1.СтавкаНДС = перечисления.СтавкиНДС.НДС18; // ВСЕГДА  18%
				РассчитатьСуммуТабЧасти(стр1, ЭтотОбъект);
				РассчитатьСуммуНДСТабЧасти(стр1, ЭтотОбъект);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	//====================================================================================================================
	ТипЦен = справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00006"); // 16.12.2015 - Ручная
	
	Сообщить("-------------------------------------------------------");
	ДокЗаказ.Записать();
КонецПроцедуры

