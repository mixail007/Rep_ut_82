
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаданиеНаПеремещение") Тогда
		Склад = ДанныеЗаполнения.СкладПолучатель;
		Организация = ДанныеЗаполнения.Организация;
		Ответственный = глТекущийПользователь;
	    ДокументОснование = ДанныеЗаполнения;
		//ТЗ = ДанныеЗаполнения.Товары.Выгрузить();
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СсылкаПерем",ДанныеЗаполнения);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаданиеНаПеремещениеТовары.Номенклатура,
		|	ЗаданиеНаПеремещениеТовары.КоличествоЗаказано КАК Количество,
		|	ЗаданиеНаПеремещениеТовары.Склад
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.ЗаданиеНаПеремещение.Товары КАК ЗаданиеНаПеремещениеТовары
		|ГДЕ
		|	ЗаданиеНаПеремещениеТовары.Ссылка = &СсылкаПерем
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(КомплектующиеНоменклатуры.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
		|	ВТ_Товары.Количество КАК КоличествоКомплектующего,
		|	ВТ_Товары.Номенклатура КАК Комплектующее,
		|	ВТ_Товары.Количество КАК КоличествоНоменклатуры,
		|	ВТ_Товары.Склад
		|ПОМЕСТИТЬ ВТ_ТаблНоменклатурыСКомплектующим
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
		|		ПО ВТ_Товары.Номенклатура = КомплектующиеНоменклатуры.Комплектующая
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблНоменклатурыСКомплектующим.Номенклатура КАК Номенклатура,
		|	ВТ_ТаблНоменклатурыСКомплектующим.КоличествоКомплектующего КАК КоличествоКомплектующегоЗаЕд1,
		|	ВТ_ТаблНоменклатурыСКомплектующим.Комплектующее КАК Комплектующее1,
		|	ВТ_ТаблНоменклатурыСКомплектующим.КоличествоНоменклатуры КАК КоличествоНоменклатуры,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ТаблНоменклатурыСКомплектующим.Номенклатура) КАК НоменклатураКолВо,
		|	ВТ_ТаблНоменклатурыСКомплектующим.Склад КАК Склад,
		|	ЕСТЬNULL(КомплектующиеНоменклатуры.Комплектующая, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Комплектующее2,
		|	ЕСТЬNULL(КомплектующиеНоменклатуры.Количество, 0) * ВТ_ТаблНоменклатурыСКомплектующим.КоличествоНоменклатуры КАК КоличествоКомплектующего
		|ПОМЕСТИТЬ Вт_Пред
		|ИЗ
		|	ВТ_ТаблНоменклатурыСКомплектующим КАК ВТ_ТаблНоменклатурыСКомплектующим
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
		|		ПО ВТ_ТаблНоменклатурыСКомплектующим.Номенклатура = КомплектующиеНоменклатуры.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблНоменклатурыСКомплектующим.Номенклатура,
		|	ВТ_ТаблНоменклатурыСКомплектующим.КоличествоКомплектующего,
		|	ВТ_ТаблНоменклатурыСКомплектующим.Комплектующее,
		|	ВТ_ТаблНоменклатурыСКомплектующим.КоличествоНоменклатуры,
		|	ВТ_ТаблНоменклатурыСКомплектующим.Склад,
		|	ЕСТЬNULL(КомплектующиеНоменклатуры.Количество, 0) * ВТ_ТаблНоменклатурыСКомплектующим.КоличествоНоменклатуры,
		|	ЕСТЬNULL(КомплектующиеНоменклатуры.Комплектующая, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_Пред.Номенклатура,
		|	Вт_Пред.КоличествоКомплектующегоЗаЕд1 КАК КоличествоКомплектующего1,
		|	Вт_Пред.Комплектующее1,
		|	Вт_Пред.КоличествоНоменклатуры,
		|	Вт_Пред.НоменклатураКолВо,
		|	Вт_Пред.Склад,
		|	Вт_Пред.Комплектующее2,
		|	Вт_Пред.КоличествоКомплектующего КАК КоличествоКомплектующего2
		|ИЗ
		|	Вт_Пред КАК Вт_Пред
		|ГДЕ
		|	Вт_Пред.Комплектующее1 <> Вт_Пред.Комплектующее2";
		//Запрос.УстановитьПараметр("Товары",ТЗ);
		Результат  = Запрос.Выполнить();
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			НоваяСтр = ТоварДляОшиповки.Добавить();
            НоваяСтр.Склад = Выборка.Склад;
			Если Выборка.НоменклатураКолВо >2 Тогда
				Сообщить("По комплектующему " + Выборка.Комплектующее1 + " определено несколько товаров");
				НоваяСтр.Комплектующее1 = Выборка.Комплектующее1;
				НоваяСтр.КоличествоКомлектующего1 = Выборка.КоличествоНоменклатуры;
			Иначе
				НоваяСтр.Номенклатура = Выборка.Номенклатура;
				НоваяСтр.Количество = Выборка.КоличествоНоменклатуры;
				НоваяСтр.Комплектующее1 = Выборка.Комплектующее1;
				НоваяСтр.КоличествоКомплектующего1 = Выборка.КоличествоКомплектующего1;
                НоваяСтр.Комплектующее2 = Выборка.Комплектующее2;
				НоваяСтр.КоличествоКомплектующего2 = Выборка.КоличествоКомплектующего2;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
			
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//Для Каждого СтрТовар из ТоварДляОшиповки Цикл
	//	Если СтрТовар.Комплектация = Документы.КомплектацияНоменклатуры.ПустаяСсылка() ТОгда
	//		Сообщить("Нет документа комплектации для номенклатуры: " + СтрТовар.Номенклатура);
	//		Отказ = Истина;
	//	КонецЕсли;
	//КонецЦикла;
	//Если Не Отказ  Тогда   // Делаем запись в заказе только при первом проведении
	//	Запрос = Новый Запрос;          // Если документ распровели, но в заказ уже был ппоменен товар, результат закпроса будет пустым
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ОшиповкаТоварДляОшиповки.Комплектующее1,
	//	|	ОшиповкаТоварДляОшиповки.КоличествоКомплектующего1,
	//	|	ОшиповкаТоварДляОшиповки.Номенклатура,
	//	|	ОшиповкаТоварДляОшиповки.Количество
	//	|ПОМЕСТИТЬ ВТ_Товар
	//	|ИЗ
	//	|	Документ.Ошиповка.ТоварДляОшиповки КАК ОшиповкаТоварДляОшиповки
	//	|ГДЕ
	//	|	ОшиповкаТоварДляОшиповки.Ссылка = &Ссылка
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЗаказПокупателяТовары.Ссылка КАК Заказ,
	//	|	ЗаказПокупателяТовары.Ссылка.МоментВремени КАК МоментВремениЗаказа,
	//	|	ЗаказПокупателяТовары.Количество КАК КоличествоВЗаказе,
	//	|	ВТ_Товар.Комплектующее1 КАК Комплектующее,
	//	|	ВТ_Товар.КоличествоКомплектующего1 КАК КоличествоСделано,
	//	|	ВТ_Товар.Номенклатура КАК Номенклатура
	//	|ИЗ
	//	|	ВТ_Товар КАК ВТ_Товар
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	//	|		ПО ВТ_Товар.Комплектующее1 = ЗаказПокупателяТовары.Номенклатура
	//	|ГДЕ
	//	|	ЗаказПокупателяТовары.Ссылка В(&СписокЗаказов)
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	Номенклатура,
	//	|	МоментВремениЗаказа
	//	|ИТОГИ
	//	|	СУММА(КоличествоВЗаказе),
	//	|	МАКСИМУМ(КоличествоСделано)
	//	|ПО
	//	|	Номенклатура";
	//	СписокЗаказов = Новый СписокЗначений();
	//	Для Каждого Стр из ДокументОснование.ЗаказыПокупателей Цикл
	//		Если Стр.Реализация <> Документы.ПеремещениеТоваров.ПустаяСсылка() И  Стр.Реализация <> Неопределено Тогда
	//			СписокЗаказов.Добавить(Стр.ЗаказПокупателя);
	//		КонецЕсли;
	//	КонецЦикла;
	//	Запрос.УстановитьПараметр("СписокЗаказов",СписокЗаказов);
	//	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	//	Результат = Запрос.Выполнить();
	//	ТЗЗаказов = Новый ТаблицаЗначений;
	//	ТЗЗаказов.Колонки.Добавить("Заказ");
	//	ТЗЗаказов.Колонки.Добавить("Менеджер");
	//	ТЗЗаказов.Колонки.Добавить("НоменклатураСт");
	//	ТЗЗаказов.Колонки.Добавить("НоменклатураНов");
	//	
	//	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//	Пока Выборка.Следующий() Цикл
	//		КолВоТовараНужно = Выборка.КоличествоСделано;
	//		ВыборкаДетали = Выборка.Выбрать();
	//		Пока ВыборкаДетали.Следующий() и КолВоТовараНужно > 0 Цикл
	//			КоличествоВЗаказе = ВыборкаДетали.КоличествоВЗаказе;
	//			Если КоличествоВЗаказе > КолВоТовараНужно Тогда
	//				Сообщить(" В заказе " + ВыборкаДетали.Заказ + " номенклатуры " + ВыборкаДетали.Комплектующее + " больше чем ошиповали.", СтатусСообщения.Важное);
	//				//Отказ =Истина;
	//				//Прервать;
	//			Иначе
	//				КолВоТовараНужно =  КолВоТовараНужно - КоличествоВЗаказе;
	//				СтрЗаказ = ТЗЗаказов.Добавить();
	//				СтрЗаказ.Заказ = ВыборкаДетали.Заказ;
	//				СтрЗаказ.Менеджер = СтрЗаказ.Заказ.ДоговорКонтрагента.ОтветственноеЛицо;
	//				СтрЗаказ.НоменклатураСт = ВыборкаДетали.Комплектующее;
	//				СтрЗаказ.НоменклатураНов = ВыборкаДетали.Номенклатура;
	//			КонецЕсли;
	//		КонецЦикла;
	//	КонецЦикла;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ТЗ.Заказ КАК Заказ,
	//	|	ТЗ.Менеджер КАК Менеджер,
	//	|	ТЗ.НоменклатураНов,
	//	|	ТЗ.НоменклатураСт
	//	|ИЗ
	//	|	&ТЗ КАК ТЗ
	//	|ИТОГИ
	//	|	МАКСИМУМ(Менеджер)
	//	|ПО
	//	|	Заказ";
	//	Запрос.УстановитьПараметр("ТЗ",ТЗЗаказов);
	//	Результат = Запрос.Выполнить();
	//	Выборка = Результат.Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		Отказ = Ложь;
	//		ДокЗаказ = Выборка.Заказ.ПолучитьОбъект();
	//		ВыборкаДетали = Выборка.Выбрать();
	//		Пока ВыборкаДетали.Следующий() Цикл
	//			МассивТов = ДокЗаказ.Товары.НайтиСтроки(Новый Структура("Номенклатура",ВыборкаДетали.НоменклатураСт));
	//			МассивТов[0].Номенклатура = ВыборкаДетали.НоменклатураНов;
	//		КонецЦикла;
	//		ДокЗаказ.Ошиповка = Ложь;
	//			
	//		Попытка
	//			ДокЗаказ.Записать(РежимЗаписиДокумента.Проведение);
	//			ТоварыЦенаКонтрагента(ДокЗаказ);
	//			ДокЗаказ.Записать(РежимЗаписиДокумента.Проведение);
	//		Исключение
	//			Сообщить("Не удалось провести заказ: " + ДокЗаказ + " " + ОписаниеОшибки()  );
	//			Отказ = Истина;
	//		КонецПопытки;
	//		Если Не Отказ Тогда
	//			УЗ= Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("no-reply@yst76.ru");
	//			
	//			Запрос = Новый Запрос;
	//			Запрос.Текст = 
	//			"ВЫБРАТЬ
	//			|	КонтактнаяИнформация.Объект,
	//			|	МАКСИМУМ(ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200))) КАК ЭлПочта
	//			|ИЗ
	//			|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//			|ГДЕ
	//			|	КонтактнаяИнформация.Объект = &Объект
	//			|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя)
	//			|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	//			|
	//			|СГРУППИРОВАТЬ ПО
	//			|	КонтактнаяИнформация.Объект";
	//			Запрос.УстановитьПараметр("Объект", Выборка.Менеджер);
	//			РезультатКИ = Запрос.Выполнить();
	//			ВыборкаКИ = РезультатКИ.Выбрать();
	//			Если ВыборкаКИ.Следующий() Тогда
	//				ЭлПочтаМенеджера = СокрЛП(ВыборкаКИ.ЭлПочта);
	//				
	//				ТекстСообщения = "По заказу " + Выборка.Заказ.номер + " от " + ФОрмат(Выборка.Заказ.Дата, "ДФ=dd.MM.yyyy") + " произведена ошиповка.";
	//				Если ВыборкаКИ.ЭлПочта <> "" Тогда
	//					яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(ЭлПочтаМенеджера,Новый СписокЗначений, УЗ, ТекстСообщения, "Ошиповка");
	//				Иначе
	//					Сообщить("У менеджера "+ Выборка.Объект + " не заведена электронная почта");
	//				КонецЕсли;
	//			КонецЕсли;
	//		КонецЕсли;

	//			
	//	КонецЦикла;
	//КонецЕсли;
	//
				
КонецПроцедуры



Функция СвободныйОстаток(Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) КАК СвободныйОстаток,
	|	СУММА(ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)) КАК КоличествоРезерв,
	|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Номенклатура = Номенклатура
	|				И НЕ Склад.Транзитный
	|				И НЕ Склад.ЗапретитьИспользование) КАК ТоварыНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	|				,
	|				Номенклатура = &Номенклатура
	|					И ЗаказПокупателя.Проверен
	|					И НЕ ЗаказПокупателя.Транзит) КАК ЗаказыПокупателейОстатки
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура";
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если  Выборка.Следующий() Тогда
		Рез = Выборка.СвободныйОстаток;
	Иначе
		Рез = 0;
	КонецЕсли;
	
КонецФункции
