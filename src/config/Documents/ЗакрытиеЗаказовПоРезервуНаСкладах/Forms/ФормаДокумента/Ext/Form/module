Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура правляет видимостью колонки ПричинаЗакрытияЗаказа в ТЧ документа.
//
Процедура УстановитьВидимостьКолонкиПричиныЗакрытия()

//	ЭлементыФормы.Заказы.Колонки.ПричинаЗакрытияЗаказа.Видимость = (ВидОперации = Перечисления.ВидыОперацийЗакрытиеЗаказовПокупателей.ЗакрытиеЗаказов);

КонецПроцедуры

// Выполняет заполнение табличной части "Заказы"
//
// Параметры:
//  ВидЗаполнения - строка, определяющая вид заполнения.
//
Процедура ЗаполнитьТабличнуюЧасть(ВидЗаполнения)

	Если Заказы.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Имя);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
		
		Заказы.Очистить();
	КонецЕсли;

	Если ВидЗаполнения = "ЗаполнитьПоОстаткам" Тогда
		ЗаполнитьЗаказыПоОстаткам();
	ИначеЕсли 	ВидЗаполнения = "ЗаполнитьПоОстаткамНаДатуДокумента" Тогда
		ЗаполнитьЗаказыПоОстаткам(Дата);
	КонецЕсли; 
	
КонецПроцедуры // ЗаполнитьТабличнуюЧастьПоОстаткам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнитьШапкуДокумента(ЭтотОбъект, глТекущийПользователь);
		УстановитьНомерДокумента(ЭтотОбъект);

	КонецЕсли;

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ЗаказПокупателя");

	// Установить ограничение - изменять видимоть колонок для таличной части "Заказы".
	УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.Заказы.Колонки, СтруктураКолонок);

	// Заполняем подменю, вызываемое нажатием кнопки "Операция" командной панели 
	// формы, значениями перечисления "Вид операции" данного вида документа.
	// В качестве обработки выбора вида операции назначается процедура 
	// ДействияФормыДействиеУстановитьОперацию модуля формы.
	УстановитьПодменюВыбораВидаОперации(ЭлементыФормы.ДействияФормы.Кнопки.ПодменюВидаОперации,
	                                      ВидОперации.Метаданные().ЗначенияПеречисления,
	                                      Новый Действие("ДействияФормыДействиеУстановитьОперацию"));

	// Вывести в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;

	// Установить активный реквизит.
	АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	УстановитьВидимостьКолонкиПричиныЗакрытия();

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);

КонецПроцедуры // ПослеЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "Заполнить по остаткам" подменю "Заполнить" командной панели 
// табличного поля "Заказы", вызывает сервисный механизм для заполнения табличной части
//
Процедура КоманднаяПанельЗаказыДействиеЗаполнитьПоОстаткам(Кнопка)

	ЗаполнитьТабличнуюЧасть(Кнопка.Имя);
	
КонецПроцедуры // КоманднаяПанельТоварыДействиеЗаполнитьПоОстаткам()

// Процедура вызывается при нажатии кнопки "Заполнить по просроченным резервам" подменю "Заполнить" командной панели 
// табличного поля "Заказы", вызывает сервисный механизм для заполнения табличной части
//
Процедура КоманднаяПанельЗаказыДействиеЗаполнитьПоПросроченнымРезервам(Кнопка)

	ЗаполнитьТабличнуюЧасть(Кнопка.Имя);

КонецПроцедуры // КоманднаяПанельТоварыДействиеЗаполнитьПоОстаткам()

// Процедура вызывается при выборе пункта подменю "ПодменюВидаОперации" командной панели
// формы. Процедура устанавливает значение реквизита ВидОперации.
//
Процедура ДействияФормыДействиеУстановитьОперацию(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ВидОперации = Перечисления.ВидыОперацийЗакрытиеЗаказовПокупателей[Кнопка.Имя];
	КонецЕсли;

	// Отобразить в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	
	УстановитьВидимостьКолонкиПричиныЗакрытия();

КонецПроцедуры // ДействияФормыДействиеУстановитьОперацию()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры // ДатаПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ ЗАКАЗЫ

// Процедура - обработчик события "ПриВыводеСтроки" табличной части "Заказы".
//
Процедура ЗаказыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если ТипЗнч(ДанныеСтроки.ЗаказПокупателя) = Тип("Неопределено") тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ДанныеСтроки.ЗаказПокупателя) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Если Элемент.Колонки.КонтрагентЗаказа.Видимость Тогда
			ОформлениеСтроки.Ячейки.КонтрагентЗаказа.ОтображатьТекст = Истина;
			ОформлениеСтроки.Ячейки.КонтрагентЗаказа.Текст = ДанныеСтроки.ЗаказПокупателя.Контрагент;
		КонецЕсли;

		Если Элемент.Колонки.СуммаЗаказа.Видимость Тогда
			ОформлениеСтроки.Ячейки.СуммаЗаказа.ОтображатьТекст = Истина;
			ОформлениеСтроки.Ячейки.СуммаЗаказа.Текст = ФорматСумм(ДанныеСтроки.ЗаказПокупателя.СуммаДокумента);
		КонецЕсли;

		Если Элемент.Колонки.ВалютаЗаказа.Видимость Тогда
			ОформлениеСтроки.Ячейки.ВалютаЗаказа.ОтображатьТекст = Истина;
			ОформлениеСтроки.Ячейки.ВалютаЗаказа.Текст = ДанныеСтроки.ЗаказПокупателя.ВалютаДокумента;
		КонецЕсли;

	//	ОформлениеСтроки.Ячейки.ПричинаЗакрытияЗаказа.ТолькоПросмотр = Ложь;

	ИначеЕсли ТипЗнч(ДанныеСтроки.ЗаказПокупателя) = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		Если Элемент.Колонки.КонтрагентЗаказа.Видимость Тогда
			ОформлениеСтроки.Ячейки.КонтрагентЗаказа.УстановитьТекст(ДанныеСтроки.ЗаказПокупателя.Заказчик);
		КонецЕсли;

	//	ОформлениеСтроки.Ячейки.ПричинаЗакрытияЗаказа.ТолькоПросмотр = Истина;

	КонецЕсли;

	Если Элемент.Колонки.ОтветственныйЗаЗаказ.Видимость Тогда
		ОформлениеСтроки.Ячейки.ОтветственныйЗаЗаказ.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.ОтветственныйЗаЗаказ.Текст = ДанныеСтроки.ЗаказПокупателя.Ответственный;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаказыЗаказПокупателяНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если ЗначениеНеЗаполнено(ЭлементыФормы.Заказы.ТекущаяСтрока.ЗаказПокупателя) Тогда
	ЭлементыФормы.Заказы.ТекущаяСтрока.ЗаказПокупателя=Документы.ЗаказПокупателя.ПустаяСсылка();
	КонецЕсли;	
//	НачалоВыбораДокументаЗаказа(ЭтотОбъект, ЭтаФорма, Элемент, СтандартнаяОбработка, Новый Структура(), "Заказы");
	ФормаСписка = Документы.ЗаказПокупателя.ПолучитьФормуСписка(,ЭтаФорма);
	ФормаСписка.РежимВыбора=Истина;
	ФормаСписка.ОткрытьМодально();
	
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	яштСменаПользователя(ЭтотОбъект, ЭтаФорма, глТекущийПользователь);
КонецПроцедуры

Процедура КоманднаяПанельЗаказыЗаполнитьПоОстаткамНаДатуДокумента(Кнопка)
	ЗаполнитьТабличнуюЧасть(Кнопка.Имя);
КонецПроцедуры


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	ЭлементыФормы.Заказы.ТекущаяСтрока.ЗаказПокупателя=ЗначениеВыбора;
	
КонецПроцедуры

