//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РазрешитьОткрывать = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"РазрешитьОткрыватьКассовыеДокументы");
	Если не(РазрешитьОткрывать) Тогда
		Отказ = Истина;
	КонецЕсли;

	//***2015.08.10
	СписокКассПользователя = получитьСписокРазрешенныхОбъектовПользователя(ПараметрыСеанса.ТекущийПользователь, "Кассы"); 
	Если СписокКассПользователя.Количество() > 0 тогда 
		ДокументСписок.Отбор.Касса.ВидСравнения = ВидСравнения.ВСписке;
		ДокументСписок.Отбор.Касса.Значение = СписокКассПользователя;
		ДокументСписок.Отбор.Касса.Использование = Истина;
		ЭлементыФормы.Список.НастройкаОтбора["Касса"].Доступность = Ложь;
	КонецЕсли;
	
	УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.Список);	
	
КонецПроцедуры

Процедура СписокПриПолученииДанных(Элемент, ОформленияСтрок)
		список = новый СписокЗначений; 
	Для Каждого Строка Из ОформленияСтрок Цикл
		список.Добавить( строка.ДанныеСтроки.Ссылка );
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходныйКассовыйОрдер.Ссылка
		|ПОМЕСТИТЬ РКО
		|ИЗ
		|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
		|ГДЕ
		|	РасходныйКассовыйОрдер.ВидОперации = &ВидОперации
		|	И РасходныйКассовыйОрдер.ДатаПогашенияАванса < &Дата
		|	И РасходныйКассовыйОрдер.Ссылка В(&Список)
		|	И РасходныйКассовыйОрдер.ДатаПогашенияАванса <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзаиморасчетыСПодотчетнымиЛицамиОстатки.РасчетныйДокумент
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Остатки(
		|			&Дата,
		|			РасчетныйДокумент В
		|				(ВЫБРАТЬ
		|					РКО.Ссылка
		|				ИЗ
		|					РКО КАК РКО)) КАК ВзаиморасчетыСПодотчетнымиЛицамиОстатки";

	Запрос.УстановитьПараметр("ВидОперации", перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствПодотчетнику);
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Список", Список);

	ДокиСОстатками = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка Из ОформленияСтрок Цикл
        Если ДокиСОстатками.найти(Строка.ДанныеСтроки.Ссылка, "РасчетныйДокумент")<> Неопределено Тогда
		   строка.цветтекста = WebЦвета.Красный;
		конецЕсли;   
	КонецЦикла;	   

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
КонецПроцедуры

Процедура ПриОткрытии()
	Если РольДоступна("ДополнительныеПраваВЭД") Тогда
		списокПодразделенийПользователя = новый СписокЗначений;
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
		Отбор["Подразделение"].Использование = Истина;
		Отбор["Подразделение"].ВидСравнения = ВидСравнения.ВСписке;
		Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
		ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь
			
	иначеЕсли РольДоступна("яштФинДиректор") Тогда	
		
	иначеЕсли не Отбор["Подразделение"].Использование = истина Тогда
		списокПодразделенийПользователя = новый СписокЗначений;
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
		Отбор["Подразделение"].Использование = Истина;
		Отбор["Подразделение"].ВидСравнения = ВидСравнения.НеВСписке;
		Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
		//ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь
	КонецЕсли;
КонецПроцедуры
