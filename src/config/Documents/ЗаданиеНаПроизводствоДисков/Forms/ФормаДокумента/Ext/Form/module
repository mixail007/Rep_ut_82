
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	тов =  товары.Выгрузить(,"Номенклатура");
	тов.Свернуть("Номенклатура");
	Если тов.Количество()< товары.Количество() тогда
		Сообщить(" В товарах есть строки с одинаковой номенклатурой!");
		отказ = истина;
	конецесли;	
	
	Если не ЗначениеЗаполнено(Менеджер) тогда
		менеджер = глТекущийПользователь;
	конецЕсли;	
	
		Для каждого стр из товары цикл
			Если не ЗначениеЗаполнено(стр.Номенклатура) тогда
				Сообщить("В строке "+стр.НомерСтроки+" не заполнена номенклатура!");
				отказ = Истина;
			конецЕсли;	
			Если стр.Количество=0 тогда
				Сообщить("В строке "+стр.НомерСтроки+" не заполнено количество!");
				отказ = Истина;
			конецЕсли;	
	    конеццикла;
	
	если не отказ тогда
		Для каждого стр из товары цикл
			отбор = Новый Структура();
			//1
			Отбор.Вставить("IDТовара",стр.Номенклатура);
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.ПередачаЗаявкиВРаботу);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.ПередачаЗаявкиВРаботу;
				строка.Сдал = Менеджер;
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Гиззатулина");
			конецЕсли;
			//2	
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.НачалоРазработкиМодели);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.НачалоРазработкиМодели;
				строка.Сдал = Справочники.Пользователи.НайтиПоКоду("Гиззатулина");
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Горицкий");
			конецЕсли;
			//3
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.ОкончаниеРазработкиМодели);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.ОкончаниеРазработкиМодели;
				строка.Сдал = Справочники.Пользователи.НайтиПоКоду("Горицкий");
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Гиззатулина");
			конецЕсли;
			//4
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.НачалоСогласованияМоделиСКлиентом);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.НачалоСогласованияМоделиСКлиентом;
				строка.Сдал = Справочники.Пользователи.НайтиПоКоду("Гиззатулина");
				строка.Принял = Менеджер;
			конецЕсли;
			//5
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.ПодтверждениеМоделиСКлиентом);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.ПодтверждениеМоделиСКлиентом;
				строка.Сдал = Менеджер;
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Гиззатулина");
			конецЕсли;
			//6
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.ПередачаЗаявкиНаПроизводство);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.ПередачаЗаявкиНаПроизводство;
				строка.Сдал = Справочники.Пользователи.НайтиПоКоду("Гиззатулина");
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Мамниашвили З. З.");
			конецЕсли;
			//7
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.НачалоРазработкиПрограммДляCNC);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.НачалоРазработкиПрограммДляCNC;
				строка.Сдал = Справочники.Пользователи.НайтиПоКоду("Мамниашвили З. З.");
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Программист (производство)");
			конецЕсли;
			//8
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.ОкончаниеРазработкиПрограммДляCNC);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.ОкончаниеРазработкиПрограммДляCNC;
				строка.Сдал = Справочники.Пользователи.НайтиПоКоду("Программист (производство)");
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Мамниашвили З. З.");
			конецЕсли;
			//9
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.НачалоПроизводстваДисков);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.НачалоПроизводстваДисков;
				строка.Сдал = Справочники.Пользователи.НайтиПоКоду("Мамниашвили З. З.");
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Годовиков Е.");
			конецЕсли;
			//10
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.ОкончаниеПроизводстваДисков);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.ОкончаниеПроизводстваДисков;
				строка.Сдал = Справочники.Пользователи.НайтиПоКоду("Годовиков Е.");
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Мамниашвили З. З.");
			конецЕсли;
			//11
			Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.ВыходГотовойПродукции);
			найден = СогласованиеПроизводства.НайтиСтроки(Отбор);	
			Если Найден.количество()<1 тогда
				строка = СогласованиеПроизводства.Добавить();
				строка.IDТовара = стр.Номенклатура;
				строка.ВидыРабот = Перечисления.ВидыРаботПоПроизводству.ВыходГотовойПродукции;
				строка.Сдал = Справочники.Пользователи.НайтиПоКоду("Мамниашвили З. З.");
				строка.Принял = Справочники.Пользователи.НайтиПоКоду("Гиззатулина");
			конецЕсли;
		конеццикла;
	конецЕсли;
	
КонецПроцедуры

Процедура СогласованиеПроизводстваПриПолученииДанных(Элемент, ОформленияСтрок)
	Значение  = Элементыформы.Товары.ТекущиеДанные;
	ЭлементыФормы.СогласованиеПроизводства.ОтборСтрок.IDТовара.Установить(Значение.номенклатура);
	
КонецПроцедуры

Процедура ТоварыНоменклатураПриИзменении(Элемент)
	текстрока = Элементыформы.товары.текущиеДанные;
	Если  текстрока.номенклатура.номенклатурнаяГруппа<> Справочники.НоменклатурныеГруппы.НайтиПоКоду("00022") тогда
		Сообщить("В задание можно подбирать только кованные диски!");
		текстрока.номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	конецЕсли;	
КонецПроцедуры

Процедура ТоварыПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Данныестроки = ОформлениеСтроки.Данныестроки;
		ОформлениеСтроки.Ячейки.КодДиска.Текст = ДанныеСтроки.Номенклатура.Код;
		ОформлениеСтроки.Ячейки.КодДиска.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.КодЗаготовки.Текст = ДанныеСтроки.Заготовка.Код;
		ОформлениеСтроки.Ячейки.КодЗаготовки.ОтображатьТекст = Истина;
	КонецЦикла;
КонецПроцедуры


Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	текстрока = Элементыформы.товары.текущиеДанные;
	
	отбор = Новый Структура();
	Отбор.Вставить("IDТовара",текстрока.Номенклатура);
	
	нужныеСтроки = СогласованиеПроизводства.НайтиСтроки(Отбор);
	Для каждого стр из нужныеСтроки Цикл
		СогласованиеПроизводства.Удалить(стр); 
	конецЦикла;	 
КонецПроцедуры

Процедура КоманднаяПанель1ПодобратьЗаготовки(Кнопка)
	  //Заготовки.Очистить();	
  //Подбираем из того, что есть на складах, если нет берем 1 попавшуюся
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таб.Номенклатура,
		|	Таб.количество
		|ПОМЕСТИТЬ ВТ_табЧасть
		|ИЗ
		|	&Таб КАК Таб
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КомплектующиеНоменклатуры.Номенклатура,
		|	КомплектующиеНоменклатуры.Комплектующая
		|ПОМЕСТИТЬ Вт_Комплектующие
		|ИЗ
		|	РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
		|ГДЕ
		|	КомплектующиеНоменклатуры.Комплектующая.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
		|	И КомплектующиеНоменклатуры.Номенклатура В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВТ_табЧасть.Номенклатура
		|			ИЗ
		|				ВТ_табЧасть КАК ВТ_табЧасть)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РезервЗаготовокПодЗаказы.Заготовка,
		|	СУММА(РезервЗаготовокПодЗаказы.Количество) КАК КоличествоОстаток
		|ПОМЕСТИТЬ ВТ_Резервы
		|ИЗ
		|	РегистрСведений.РезервЗаготовокПодЗаказы КАК РезервЗаготовокПодЗаказы
		|ГДЕ
		|	РезервЗаготовокПодЗаказы.Регистратор.Выполнено = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	РезервЗаготовокПодЗаказы.Заготовка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток
		|ПОМЕСТИТЬ ВТ_ОстаткиКомплектующих
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			,
		|			Номенклатура В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Вт_Комплектующие.Комплектующая
		|				ИЗ
		|					Вт_Комплектующие КАК Вт_Комплектующие)) КАК ТоварыНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_табЧасть.Номенклатура КАК Номенклатура,
		|	ВТ_табЧасть.количество,
		|	Вт_Комплектующие.Комплектующая,
		|	ЕСТЬNULL(ВТ_ОстаткиКомплектующих.КоличествоОстаток, 0) - ЕСТЬNULL(ВТ_Резервы.КоличествоОстаток, 0) КАК СвободныйОстаток
		|ИЗ
		|	ВТ_табЧасть КАК ВТ_табЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Вт_Комплектующие КАК Вт_Комплектующие
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиКомплектующих КАК ВТ_ОстаткиКомплектующих
		|			ПО Вт_Комплектующие.Комплектующая = ВТ_ОстаткиКомплектующих.Номенклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Резервы КАК ВТ_Резервы
		|			ПО Вт_Комплектующие.Комплектующая = ВТ_Резервы.Заготовка
		|		ПО ВТ_табЧасть.Номенклатура = Вт_Комплектующие.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	СвободныйОстаток УБЫВ";
	Запрос.УстановитьПараметр("Таб", Товары.Выгрузить());
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", Справочники.НоменклатурныеГруппы.НайтиПоКоду("00022"));
	//Запрос.УстановитьПараметр("Организация", Справочники.Организации.НайтиПоКоду("00001"));
	//Запрос.УстановитьПараметр("Ссылка", ссылка);
	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();
    предном = "";
	Пока Выборка.Следующий() Цикл
		если предном <> выборка.номенклатура тогда
			стр = товары.Найти(выборка.номенклатура,"Номенклатура");
			
			//стрЗ = Заготовки.Добавить();
			//стрЗ.Диск = Выборка.номенклатура;
			стр.Заготовка = Выборка.комплектующая;
			//стрЗ.Количество = Выборка.Количество;
			предном = выборка.номенклатура;
		 конецЕсли;
	КонецЦикла;


КонецПроцедуры

Процедура ЗапуститьВРаботуНажатие(Элемент)
	отбор = Новый структура;
	Отбор.Вставить("ВидыРабот",Перечисления.ВидыРаботПоПроизводству.ПередачаЗаявкиВРаботу);
	нужныеСтроки = СогласованиеПроизводства.НайтиСтроки(Отбор);
	Для каждого стр из нужныеСтроки Цикл
		стр.Датасдал = ТекущаяДата(); 
	конецЦикла;	 
КонецПроцедуры

Процедура ПриОткрытии()
	ЭлементыФормы.ЗапуститьВРаботу.Видимость = (Менеджер=глТекущийпользователь);
КонецПроцедуры
