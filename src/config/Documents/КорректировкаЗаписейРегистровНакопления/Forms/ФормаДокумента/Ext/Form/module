
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура создает и настраивает табличные поля на страницах панели ОсновнаяПанель
//
Процедура НастроитьЗакладкиПанели()

	Если ТаблицаРегистровНакопления.Количество() = 0 Тогда
		
		ЭлементыФормы.ОсновнаяПанель.Страницы.Очистить();
		ЭлементыФормы.ОсновнаяПанель.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		
	Иначе
		
		// Добавим новые страницы
		ЭлементыФормы.ОсновнаяПанель.ОтображениеЗакладок = ОтображениеЗакладок.Сверху;
		Для каждого СтрокаТаблицыРегистров Из ТаблицаРегистровНакопления Цикл
			Найдена = Ложь;
			Для каждого СтраницаПанели Из ЭлементыФормы.ОсновнаяПанель.Страницы Цикл
				Если СтраницаПанели.Имя = СтрокаТаблицыРегистров.Имя Тогда
					Найдена = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			Если Найдена Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ТаблицаРегистровНакопления.Индекс(СтрокаТаблицыРегистров) + 1 > ЭлементыФормы.ОсновнаяПанель.Страницы.Количество() Тогда
				СтраницаПанели = ЭлементыФормы.ОсновнаяПанель.Страницы.Добавить(СтрокаТаблицыРегистров.Имя, СтрокаТаблицыРегистров.Представление);
			Иначе
				СтраницаПанели = ЭлементыФормы.ОсновнаяПанель.Страницы.Вставить(ТаблицаРегистровНакопления.Индекс(СтрокаТаблицыРегистров), СтрокаТаблицыРегистров.Имя, СтрокаТаблицыРегистров.Представление);
			КонецЕсли;
			
			ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = СтраницаПанели;
			
			// Расположим на странице командную панель
			КоманднаяПанельРегистра = ЭлементыФормы.Добавить(Тип("КоманднаяПанель"), ("КоманднаяПанель" + СтрокаТаблицыРегистров.Имя), Истина, ЭлементыФормы.ОсновнаяПанель);
			КоманднаяПанельРегистра.Верх = 6;
			КоманднаяПанельРегистра.Лево = 6;
			КоманднаяПанельРегистра.Ширина = ЭлементыФормы.ОсновнаяПанель.Ширина - 12 - 2;
			КоманднаяПанельРегистра.Высота = 24;
			
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Верх);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Низ,КоманднаяПанельРегистра,ГраницаЭлементаУправления.Верх);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Право);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Лево,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Лево);
			
			// Расположим на странице табличное поле
			ПолеРегистра = ЭлементыФормы.Добавить(Тип("ТабличноеПоле"), СтрокаТаблицыРегистров.Имя, Истина, ЭлементыФормы.ОсновнаяПанель);
			ПолеРегистра.Данные = "ДокументОбъект.Движения." + СтрокаТаблицыРегистров.Имя;
			
			Если НЕ ЭтоНовый() Тогда
				ПолеРегистра.Значение.Прочитать();
			КонецЕсли; 
			
			ПолеРегистра.Верх = 30;
			ПолеРегистра.Лево = 6;
			ПолеРегистра.Ширина = ЭлементыФормы.ОсновнаяПанель.Ширина - 12 - 2;
			ПолеРегистра.Высота = ЭлементыФормы.ОсновнаяПанель.Высота - 24 - 12 - 20;
			ПолеРегистра.ТолькоПросмотр = Ложь;
			ПолеРегистра.ИзменятьПорядокСтрок = Истина;
			ПолеРегистра.ИзменятьСоставСтрок = Истина;
			
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Верх);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Низ,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Низ);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Право);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Лево,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Лево);
			
			ПолеРегистра.СоздатьКолонки();
			
			Если Метаданные.РегистрыНакопления[СтрокаТаблицыРегистров.Имя].ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
				КолонкаВидДвижения = ПолеРегистра.Колонки.Вставить(1, "Вид движения");
				КолонкаВидДвижения.Имя = "ВидДвиженияРегистраНакопления";
				КолонкаВидДвижения.УстановитьЭлементУправления(Тип("ПолеВвода"));
				КолонкаВидДвижения.Данные = "ВидДвижения";
				КолонкаВидДвижения.ЭлементУправления.КнопкаВыбора = Истина;
				КолонкаВидДвижения.ЭлементУправления.ВыбиратьТип = Ложь;
			КонецЕсли; 
			
			ПолеРегистра.Колонки.Регистратор.Видимость = Ложь;
			ПолеРегистра.Колонки.Период.Видимость      = Ложь;
			ПолеРегистра.Колонки.НомерСтроки.Видимость = Ложь;
			
			КоманднаяПанельРегистра.ИсточникДействий = ПолеРегистра;
			КоманднаяПанельРегистра.АвтоЗаполнение = Истина;
			КоманднаяПанельРегистра.Кнопки.Добавить("Разделитель" + СтрокаТаблицыРегистров.Имя);
			Кнопка = КоманднаяПанельРегистра.Кнопки.Добавить(СтрокаТаблицыРегистров.Имя, ТипКнопкиКоманднойПанели.Действие, , Новый Действие("ПереключитьАктивность"));
			Кнопка.Отображение = ОтображениеКнопкиКоманднойПанели.Картинка;
			Кнопка.Картинка    = БиблиотекаКартинок.ПереключитьАктивность;
			Кнопка.Подсказка   = "Переключить активность";
			
		КонецЦикла; 
		
		// Удалим лишние страницы
		Индекс = 0;
		Пока 1 = 1 Цикл
			
			Если Индекс > ЭлементыФормы.ОсновнаяПанель.Страницы.Количество() - 1 Тогда
				Прервать;
			КонецЕсли; 
			
			СтраницаПанели = ЭлементыФормы.ОсновнаяПанель.Страницы[Индекс];
			
			Если ТаблицаРегистровНакопления.Найти(СтраницаПанели.Имя, "Имя") = Неопределено Тогда
				ЭлементыФормы.ОсновнаяПанель.Страницы.Удалить(Индекс);
				Продолжить;
			КонецЕсли;
			
			Индекс = Индекс + 1;
		
		КонецЦикла; 
		
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы[0];
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПереключитьАктивность(Кнопка)

	ТекущаяАктивность = Ложь;
	Если ЭлементыФормы[Кнопка.Имя].Значение.Количество() > 0 Тогда
		ТекущаяАктивность = ЭлементыФормы[Кнопка.Имя].Значение[0].Активность;
	КонецЕсли;
	ЭлементыФормы[Кнопка.Имя].Значение.УстановитьАктивность(НЕ ТекущаяАктивность);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события элемента ДействияФормы.Настройка.
// .
Процедура ДействияФормыНастройка(Кнопка)
	
	ФормаНастройки = ЭтотОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма);
	
	ФормаНастройки.СписокРегистровНакопления.Очистить();
	
	Для каждого Набор Из Движения Цикл
		НовыйЭлементСписка = ФормаНастройки.СписокРегистровНакопления.Добавить(Набор.Метаданные().Имя, Набор.Метаданные().Синоним);
		Если Метаданные.РегистрыНакопления[Набор.Метаданные().Имя].ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
			НовыйЭлементСписка.Картинка = БиблиотекаКартинок.РегистрНакопления_Остатки;
		Иначе
			НовыйЭлементСписка.Картинка = БиблиотекаКартинок.РегистрНакопления_Обороты;
		КонецЕсли;
		
		Если ТаблицаРегистровНакопления.Найти(Набор.Метаданные().Имя, "Имя") <> Неопределено Тогда
			НовыйЭлементСписка.Пометка = Истина;
		КонецЕсли; 
		
	КонецЦикла; 
	
	ФормаНастройки.ТЗРегистровНакопления = ТаблицаРегистровНакопления.Выгрузить();
	
	ВозвратОтФормы = ФормаНастройки.ОткрытьМодально();
	
	Если ТипЗнч(ВозвратОтФормы) = Тип("СписокЗначений") Тогда
	
		// Сначала удалим те, у которых сняли флажки
		Индекс = 0;
		Пока 1 = 1 Цикл
		
			Если Индекс > ТаблицаРегистровНакопления.Количество() - 1 Тогда
				Прервать;
			КонецЕсли; 
			
			СтрокаТаблицы = ТаблицаРегистровНакопления[Индекс];
			
			ЭлементСписка = ВозвратОтФормы.НайтиПоЗначению(СтрокаТаблицы.Имя);
			Если ЭлементСписка = Неопределено Тогда
				Движения[СтрокаТаблицы.Имя].Очистить();
				ТаблицаРегистровНакопления.Удалить(СтрокаТаблицы);
				Продолжить;
			КонецЕсли; 
			Если НЕ ЭлементСписка.Пометка Тогда
				Движения[СтрокаТаблицы.Имя].Очистить();
				ТаблицаРегистровНакопления.Удалить(СтрокаТаблицы);
				Продолжить;
			КонецЕсли;
			
			Индекс = Индекс + 1;
		
		КонецЦикла;
		
		// Теперь добавим новые
		Для каждого ЭлементСписка Из ВозвратОтФормы Цикл
		
			Если НЕ ЭлементСписка.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТаблицаРегистровНакопления.Найти(ЭлементСписка.Значение, "Имя") <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаРегистровНакопления.Добавить();
			НоваяСтрока.Имя = ЭлементСписка.Значение;
			НоваяСтрока.Представление = ЭлементСписка.Представление;
		
		КонецЦикла; 
		
		ТаблицаРегистровНакопления.Сортировать("Имя ВОЗР");
		
	КонецЕсли; 
	
	НастроитьЗакладкиПанели();
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		Ответственный = глТекущийПользователь;
	КонецЕсли; 
	
	НастроитьЗакладкиПанели();
	
	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 
	
	Если РольДоступна("ПравоЗавершенияРаботыПользователей") тогда  //+++ 05.11.2014 только для IT-отдела!
		ЭлементыФормы.ДействияФормы.Кнопки.Заполнить.доступность = истина;
	КонецЕсли;	
		
	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если (Организация = Справочники.Организации.ПустаяСсылка()) Тогда 
		Сообщить("Обязательно введите организацию.");
		Отказ = Истина;
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТаблицаРегистровНакопления Цикл
		Для каждого Запись Из Движения[СтрокаТаблицы.Имя] Цикл
			Запись.Период = Дата;
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

//+++ 05.11.2014
Процедура ДействияФормыЗаполнить(Кнопка)
	
имяРег = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя;
типРег = "РегистрНакопления";
	
	Если Метаданные.РегистрыНакопления.Найти(имяРег)=неопределено тогда				
		Предупреждение("Заполнение работает только для Регистров накопления!", 10);
		возврат;
		//Если НЕ Метаданные.РегистрыСведений.Найти(имяРег)=неопределено тогда
		//типРег = "РегистрСведений";
		//ИначеЕсли НЕ Метаданные.РегистрыРасчета.Найти(имяРег)=неопределено тогда									
		//типРег = "РегистрРасчета";
		//конецесли;
	конецесли;	
	
	рег = регистрыНакопления[имяРег].СоздатьНаборЗаписей();//[имяРег]
	рег.Отбор.Регистратор.ВидСравнения = ВидСравнения.Равно;
	рег.Отбор.Регистратор.Значение = ссылка;
	рег.Отбор.Регистратор.Использование = истина;
	
	рег.Прочитать();
	
	Если рег.Количество()>0 тогда
		
		Если Вопрос("Этот документ уже является регистратором для "+строка(рег.Количество())+" записей регистра "+имяРег+"!
				    |Вы действительно уверены в необходимости повторного ПереЗзаполнения?",РежимДиалогаВопрос.ДаНет,  30) = КодВозвратаДиалога.Нет Тогда
    	Возврат;
		Иначе
		рег = регистрыНакопления[имяРег].СоздатьНаборЗаписей();//[имяРег]
		рег.Отбор.Регистратор.ВидСравнения = ВидСравнения.Равно;
		рег.Отбор.Регистратор.Значение = ссылка;
		рег.Отбор.Регистратор.Использование = истина;
		рег.Записать();  // стираем всё
		КонецЕсли;
	
	КонецЕсли;
 	
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ *,
|	&Ссылка как Регистратор,
|	Истина как Активность,
|	&Расход как ВидДвижения,
|	&Дата как Период
|ИЗ
|	"+типРег+"."+имяРег+".Остатки(&Дата,) КАК РегНакопленияОстатки
|ГДЕ
|	РегНакопленияОстатки.КоличествоОстаток <> 0";
Запрос.УстановитьПараметр("Ссылка",Ссылка);
Запрос.УстановитьПараметр("Дата", Ссылка.Дата);
Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
Результат = Запрос.Выполнить();
таблОстатки = Результат.Выгрузить();
	
	
	рег.Загрузить(таблОстатки);
	рег.ЗагрузитьКолонку(таблОстатки.ВыгрузитьКолонку("КоличествоОстаток"), "Количество");
//	рег.мПериод = ссылка.Дата;
		
	попытка
	рег.Записать();
	
	Предупреждение("Заполнение регистра "+имяРег+" завершено!
	|Добавлено "+строка(рег.Количество())+" строк.
	|Нажмите кнопку [Обновить] над таблицей", 10);
	Исключение
	Сообщить("Ошибка: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		Сообщить("У вас недостаточно прав для просмотра документа!");
		отказ = Истина;
		возврат;
	КонецЕсли;
КонецПроцедуры



