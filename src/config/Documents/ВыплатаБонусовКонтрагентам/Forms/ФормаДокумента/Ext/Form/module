Перем мПечатнаяФормаПоУмолчанию;

Процедура РасчитатьБонусыНажатие(Элемент)
	
	Если НачалоПериода = Дата(1,1,1) или КонецПериода = Дата(1,1,1) или ЗначениеНеЗаполнено(Контрагент) тогда
		Предупреждение("Заполните период!!!",30);
		Возврат;
	КонецЕсли;
	
	Если Основание.Пустая() тогда 
		Предупреждение("Заполните Основание!!!",30);
		Возврат;
	КонецЕсли;
	
	Если Состояние = перечисления.СостоянияОбъектов.Утвержден
		или Состояние = перечисления.СостоянияОбъектов.Выполнен 
		или Выполнен тогда
		Предупреждение("Нельзя делать пересчет уже Утвержденного документа!", 10);
		возврат;
	КонецЕсли;	
	
	Бонусы.Очистить();
	ЗапросПоБонусам = Новый Запрос;
	ЗапросПоБонусам.УстановитьПараметр("Контрагент",Контрагент);
	ЗапросПоБонусам.УстановитьПараметр("НачалоПериода",НачалоПериода);
	ЗапросПоБонусам.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода) ); //01.06.2018 до конца дня!
	                                        
//+++ 23.01.2018 --- бонус от суммы продаж по договорам ТОЛЬКО со * или ТОЛЬКО БЕЗ * ---
	ТолькоНал = Нал; //расчет от продаж *
	
	ЗапросПоБонусам.Текст = "ВЫБРАТЬ
	                        |	ПродажиОбороты.ПериодМесяц КАК Дата,
							|	&Контрагент как Контрагент,
	                        |	ПродажиОбороты.Номенклатура.ВидТовара КАК ВидТовара,
	                        |	ПродажиОбороты.Номенклатура.Производитель КАК Производитель,
	                        |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
							
							//+++ 12.12.2017 - ОТК без вычета НДС!  Только для расчета Бонуса - надо /1.18
	                        |	Сумма(ПродажиОбороты.СтоимостьОборот 
							|"+?(Бонус = 0,"/1.18","")+" 
							|)  КАК Сумма,
						    |	Сумма(ПродажиОбороты.КоличествоОборот) КАК Количество,
							|	Сумма(ПродажиСебестоимостьОбороты.СтоимостьОборот) КАК Себестоимость,
							|	0 как СуммаОбрПродаж
							
	                        | ИЗ РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Авто, ДоговорКонтрагента.Владелец = &Контрагент
							| //Зам И ДоговорКонтрагента = &Договор
							| //НомГр И Номенклатура.НоменклатурнаяГруппа = &НомГр
//+++ 24.01.2018 --- для Бонусов - учета Только Нал / БезНал  ---
							|"+?(Бонус=1, "", "И" + ?(ТолькоНал,""," НЕ")
									+" (ДоговорКонтрагента.Наименование Подобно ""%*%"") "
								) +"
							|) КАК ПродажиОбороты
	                        |
							|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&НачалоПериода, &КонецПериода, Авто,
							| //НомГр  Номенклатура.НоменклатурнаяГруппа = &НомГр
							|) КАК ПродажиСебестоимостьОбороты
	                        |		ПО ПродажиОбороты.ЗаказПокупателя = ПродажиСебестоимостьОбороты.ЗаказПокупателя
	                        |			И ПродажиОбороты.Номенклатура = ПродажиСебестоимостьОбороты.Номенклатура
							
							|СГРУППИРОВАТЬ ПО
							|	ПродажиОбороты.ПериодМесяц,
	                  		|	ПродажиОбороты.Номенклатура.ВидТовара,
	                        |	ПродажиОбороты.Номенклатура.Производитель,
	                        |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа
							
							//+++++++++++++++++++++++++СуммаОбрПродаж++++++++++++++++++++++++++++++++++++
							|ОБЪЕДИНИТЬ ВСЕ
							|	ВЫБРАТЬ 
							|	ОбрПродаж.ПериодМесяц КАК Дата,
							|	&Контрагент как Контрагент,
	                        |	ОбрПродаж.Номенклатура.ВидТовара КАК ВидТовара,
	                        |	ОбрПродаж.Номенклатура.Производитель КАК Производитель,
	                        |	ОбрПродаж.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
                            |	0,
							|	-Сумма(ОбрПродаж.КоличествоОборот) КАК Количество,
							
	                        |	-Сумма( ОбрПродаж.СтоимостьОборот
							|"+?(Бонус = 0,"/1.18","")+"
							|) КАК Себестоимость,

							|	Сумма( ОбрПродаж.СтоимостьОборот
							|"+?(Бонус = 0,"/1.18","")+"
							|) как СуммаОбрПродаж
							
                            |ИЗ РегистрНакопления.Закупки.Обороты(&НачалоПериода, &КонецПериода, Авто, ДоговорКонтрагента.Владелец=&Контрагент 
							|"+?(Бонус=1, "", "И" + ?(ТолькоНал,""," НЕ")
									+" (ДоговорКонтрагента.Наименование Подобно ""%*%"") "
								) +"
							| //НомГр И Номенклатура.НоменклатурнаяГруппа = &НомГр
							|	) КАК ОбрПродаж
	                    	|СГРУППИРОВАТЬ ПО
							|	ОбрПродаж.ПериодМесяц,
	                      	|	ОбрПродаж.Номенклатура.ВидТовара,
	                        |	ОбрПродаж.Номенклатура.Производитель,
	                        |	ОбрПродаж.Номенклатура.НоменклатурнаяГруппа
 							|";
							
	Если ЗначениеЗаполнено(Договор) Тогда   //ТОЛЬКО 1 Договор
		ЗапросПоБонусам.Текст = СтрЗаменить(ЗапросПоБонусам.Текст,"//Зам","");						
	    ЗапросПоБонусам.УстановитьПараметр("Договор",Договор);
	КонецЕсли;
	
	Если Бонус=0 тогда
		Предупреждение("Расчет Бонуса будет произведен ТОЛЬКО от сумм продаж
						| по ном.группе: "+строка(Основание.НоменклатурнаяГруппа)+"
						|    и ТОЛЬКО по договорам "+?(ТолькоНал," со *","без *"), 30);
		ЗапросПоБонусам.Текст = СтрЗаменить(ЗапросПоБонусам.Текст,"//НомГр","");					
		ЗапросПоБонусам.УстановитьПараметр("НомГр", Основание.НоменклатурнаяГруппа);   //Новая система - ОДНА ном.группа!
	КонецЕсли;

	Результат = ЗапросПоБонусам.Выполнить().Выгрузить();
		
	Если Бонус = 0 Тогда
		ЭлементыФормы.ТабличноеПоле1.Колонки.СуммаБезОТК.Видимость = Ложь;
		Для каждого стр из результат Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Контрагент",Контрагент);
			Отбор.Вставить("НоменклатурнаяГруппа",стр.НоменклатурнаяГруппа);
			отбор.Вставить("Производитель",стр.Производитель);
			отбор.Вставить("Вид",Перечисления.ВидБонуса.Бонус);
			отбор.Вставить("ТипБонуса",ТипБонуса);
			отбор.Вставить("Основание",Основание);
			СрезНП = РегистрыСведений.СтавкиБонусовКонтрагентов.СрезПоследних(стр.Дата,Отбор);
			
			Отбор = Новый Структура;
			Отбор.Вставить("Контрагент",Контрагент);
			Отбор.Вставить("НоменклатурнаяГруппа",Справочники.НоменклатурныеГруппы.ПустаяСсылка());//---------------
			отбор.Вставить("Производитель",стр.Производитель);
			отбор.Вставить("Вид",Перечисления.ВидБонуса.Бонус);
			отбор.Вставить("ТипБонуса",ТипБонуса);
			отбор.Вставить("Основание",Основание);
			СрезП = РегистрыСведений.СтавкиБонусовКонтрагентов.СрезПоследних(стр.Дата,Отбор);
			
			Отбор = Новый Структура;
			Отбор.Вставить("Контрагент",Контрагент);
			Отбор.Вставить("НоменклатурнаяГруппа",стр.НоменклатурнаяГруппа);
			отбор.Вставить("Производитель",Справочники.Производители.ПустаяСсылка());  	//---------------
			отбор.Вставить("Вид",Перечисления.ВидБонуса.Бонус);
			отбор.Вставить("ТипБонуса",ТипБонуса);
			отбор.Вставить("Основание",Основание);
			СрезН = РегистрыСведений.СтавкиБонусовКонтрагентов.СрезПоследних(стр.Дата,Отбор);
			
			//+++ 18.12.2017 - только по виду с пустым производителем и пустой ном.группой!
			Отбор = Новый Структура;
			Отбор.Вставить("Контрагент",Контрагент);
			Отбор.Вставить("ВидТовара",стр.ВидТовара);
			Отбор.Вставить("НоменклатурнаяГруппа",Справочники.НоменклатурныеГруппы.ПустаяСсылка()); //---------------
			отбор.Вставить("Производитель",Справочники.Производители.ПустаяСсылка());               //---------------
 			отбор.Вставить("Вид",Перечисления.ВидБонуса.Бонус);
			отбор.Вставить("ТипБонуса",ТипБонуса);
			отбор.Вставить("Основание",Основание);
			СрезВ = РегистрыСведений.СтавкиБонусовКонтрагентов.СрезПоследних(стр.Дата,Отбор);
			
			Если СрезНП.Количество() > 0 Тогда
				Если СрезНП[0].Значение > 0 Тогда		
					НовСтр= Бонусы.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,стр);
					НовСтр.СуммаБонуса = (стр.Сумма - стр.СуммаОбрПродаж) * СрезНП[0].Значение/100;
					//НовСтр.Коэффициент = СрезНП[0].Коэффициент;
					НовСтр.ПроцентБонуса = СрезНП[0].Значение;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если СрезП.Количество() > 0 Тогда
				Если СрезП[0].Значение > 0 Тогда		
					НовСтр= Бонусы.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,стр);
					НовСтр.СуммаБонуса = (стр.Сумма - стр.СуммаОбрПродаж)* СрезП[0].Значение/100;
					НовСтр.Коэффициент = СрезП[0].Коэффициент;
					НовСтр.ПроцентБонуса = СрезП[0].Значение;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если СрезН.Количество() > 0 Тогда
				Если СрезН[0].Значение > 0 Тогда		
					НовСтр= Бонусы.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,стр);
					НовСтр.СуммаБонуса = (стр.Сумма - стр.СуммаОбрПродаж)* СрезН[0].Значение/100;
					НовСтр.Коэффициент = СрезН[0].Коэффициент;
					НовСтр.ПроцентБонуса = СрезН[0].Значение;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если СрезВ.Количество() > 0 Тогда
				Если СрезВ[0].Значение > 0 Тогда		
					НовСтр= Бонусы.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,стр);
					НовСтр.СуммаБонуса = (стр.Сумма - стр.СуммаОбрПродаж) * СрезВ[0].Значение/100;
					НовСтр.Коэффициент = СрезВ[0].Коэффициент;
					НовСтр.ПроцентБонуса = СрезВ[0].Значение;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;	
	
	Если Бонус = 1 Тогда//ОТК
		ЭлементыФормы.ТабличноеПоле1.Колонки.СуммаБезОТК.Видимость = Истина;
		Для каждого стр из результат Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Контрагент",Контрагент);
			Отбор.Вставить("ВидТовара",стр.ВидТовара);
			//Отбор.Вставить("НоменклатурнаяГруппа",Справочники.НоменклатурныеГруппы.ПустаяСсылка());
			//отбор.Вставить("Производитель",Справочники.Производители.ПустаяСсылка());

			отбор.Вставить("Вид",Перечисления.ВидБонуса.ОТК);
			Срез = РегистрыСведений.СтавкиБонусовКонтрагентов.СрезПоследних(стр.Дата,Отбор);
			
			Если Срез.Количество() > 0 Тогда
				Если Срез[0].Значение > 0 Тогда		
					НовСтр= Бонусы.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,стр);
					НовСтр.СуммаБонуса = стр.Сумма * Срез[0].Значение/100;
					НовСтр.Коэффициент = Срез[0].Коэффициент;
					НовСтр.ПроцентБонуса = Срез[0].Значение;
					НовСтр.СуммаБезОТК = (100*НовСтр.Сумма/НовСтр.ПроцентБонуса/НовСтр.Коэффициент-100)/(100/НовСтр.ПроцентБонуса/НовСтр.Коэффициент+1);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
 			
	//14.12.2017 + Количество
	Бонусы.Свернуть("ВидТовара, Производитель,НоменклатурнаяГруппа, ПроцентБонуса, Коэффициент", "Сумма,СуммаОбрПродаж,Себестоимость,СуммаБонуса,СуммаБезОТК, Количество"); 
	КоличествоФакт = Бонусы.Итог("Количество");
	
	Если Состояние = перечисления.СостоянияОбъектов.Подготовлен тогда
		Предупреждение("После пересчета - требуется заново отправить данный документ на согласование!", 10);
		ДействияФормыНаСогласование(неопределено);
	КонецЕсли;	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ЭтотОбъект.Ссылка) и ЭтотОбъект.Проведен = Ложь Тогда
		Бонусы.Очистить();
		ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() тогда
		Если Бонус = 0 Тогда
		ЭтотОбъект.УстановитьНовыйНомер("БВ");
		Иначе //Бонус = 1 Тогда
		ЭтотОбъект.УстановитьНовыйНомер("ОТ");
		КонецЕсли;
		Менеджер = глТекущийПользователь;
	КонецЕсли;
		
	Если Основание.Пустая() Тогда
		Предупреждение("Выплата должна вводиться на основании Установки "+?(Бонус = 0,"бонуса","ОТК")+"!
						|Документ не будет записан без документа основания!", 30);
	КонецЕсли;

	ЭлементыФормы.РасчитатьБонусы.Заголовок = "Рассчитать "+ ?(Бонус=0,"бонусы" + ?(нал," *",""),"ОТК"); //06.02.2018
	
//06.02.2018 ----------------способ выплаты - только для задачи... и формирования Поступления -------------------
	ЭлементыФормы.СпособОплаты.СписокВыбора.Очистить();
	ЭлементыФормы.СпособОплаты.СписокВыбора.Добавить("уменьшения дебиторской задолженности"); //43 символа
	ЭлементыФормы.СпособОплаты.СписокВыбора.Добавить("выплаты на расчетный счет"); 
	ЭлементыФормы.СпособОплаты.СписокВыбора.Добавить("выплаты представителю");  // по договору *
	
	
	УстановитьВидимость();
	
	// Установить печатную форму по умолчанию.
	УстановитьКнопкуПечать();
		
КонецПроцедуры

процедура УстановитьКнопкуПечать()
	
	//всё удаляем и заново определяем список из 1-ой печ.формы!
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати.кнопки.Очистить(); 
	
	СписокМакетов = ПолучитьСписокПечатныхФорм();
	УстановитьПодменюВыбораПечатнойФормы(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати,
	                                       СписокМакетов,
	                                       Новый Действие("КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы"));
	
	УстановитьКнопкуПечати(ЭтотОбъект.Метаданные().Имя, ЭтаФорма, СписокМакетов, мПечатнаяФормаПоУмолчанию);
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Пересчет факт.количества
	КоличествоФакт1 = 0;
	для каждого стр1 из Бонусы цикл
		Если стр1.Статус <> перечисления.СтатусыСтрокЗаказа.Отменен тогда
		КоличествоФакт1 = КоличествоФакт1 + стр1.Количество;
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоФакт1<>КоличествоФакт тогда
		Сообщить("Утвержденное количество составило "+строка(КоличествоФакт1)+" шт.");
		КоличествоФакт = КоличествоФакт1;
	КонецЕсли;
	
		
	Если не Отказ и РежимЗаписи = РежимЗаписиДокумента.Проведение тогда //проведение из Формы!
		НоменклатурнаяГруппа = Основание.НоменклатурнаяГруппа;
		
		КонтрольПериодаВыплаты(Отказ);
		Если Отказ и ЭтотОбъект.Проведен тогда
			Отказ = ложь;
		КонецЕсли;

		Если Основание.Пустая() Тогда
			Сообщить("Документ Выплата должен вводиться ТОЛЬКО на основании Установки бонусов!", СтатусСообщения.Внимание);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	
		Если Бонусы.Количество() = 0 Тогда
		Сообщить("Нет данных для выплаты! Выполните Расчет!", СтатусСообщения.Внимание);
		Отказ = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	//22.01.2018 - автозаполнение!
	Если СокрЛП(СпособОплаты) = "" тогда
		Если Бонус=1 тогда  // ОТК
			СпособОплаты = ЭлементыФормы.СпособОплаты.СписокВыбора[2].Значение;
		Иначе
			СпособОплаты = ЭлементыФормы.СпособОплаты.СписокВыбора[0].Значение;
		КонецЕсли;
		Сообщить("Не выбран Способ оплаты! По умолчанию выбран Способ оплаты бонуса, путём '"+СпособОплаты+"' Покупателя.", СтатусСообщения.Информация);
	КонецЕсли;
	
КонецПроцедуры


процедура КонтрольПериодаВыплаты(запрет = ЛОЖЬ, КолМес=0)
	

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("ОТК", (Бонус=1)  );
	Запрос.УстановитьПараметр("ТипБонуса",ТипБонуса);
	Запрос.УстановитьПараметр("Нал", Нал); //06.02.2018
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа",?(НоменклатурнаяГруппа.Пустая(), Основание.НоменклатурнаяГруппа, НоменклатурнаяГруппа) );
	Запрос.Текст = "ВЫБРАТЬ
	               |	БонусыКонтрагентовОстатки.ЗначениеОстаток как КолМес
	               |ИЗ
	               |	РегистрНакопления.БонусыКонтрагентов.Остатки(  ,
	               |			Контрагент = &Контрагент
	               |				И ОТК = &ОТК
				   |				И Нал = &Нал
				   |				И ТипБонуса = &ТипБонуса
				   |				И НоменклатурнаяГруппа = &НоменклатурнаяГруппа) КАК БонусыКонтрагентовОстатки";
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() тогда
	КолМес = Рез.КолМес;
	    Если КолМес<=0 тогда
			запрет = Истина;
			Сообщить(?(Бонус=1,"Перепроведите документ Установки бонусов ОТК!", ?(КолМес=0,"Уже всё выплачено!",
			          "Период выплаты превышает период Устаеновки бонусов на "+строка(КолМес)+" мес.") ), СтатусСообщения.Внимание);
			возврат;
		КонецЕсли;	
		
		Если НЕ Основание.Пустая() тогда
			НачПериода = ПолучитьНачалоВыплаты();
			Если НачалоПериода<НачПериода тогда
				запрет = истина;
				НачалоПериода=НачПериода;
				Сообщить("Начало Периода не может быть меньше "+формат(НачПериода,"ДЛФ=D") );
				возврат;
			КонецЕсли;
		КонецЕсли;	

		Если (Бонус=0) тогда
			
		КолМесДок = Месяц( НачалоМесяца(КонецПериода)) - Месяц( НачалоМесяца(НачалоПериода)) +1
					+ (Год(КонецПериода) - Год(НачалоПериода)) * 12;
					
			Если КолМесДок>КолМес тогда
				запрет = Истина;
				Сообщить("Период выплаты бонусов "+строка(КолМесДок)+" мес. не может быть более остатка установленного бонуса "+строка(КолМес)+" мес.!", СтатусСообщения.Внимание);
				 КонецПериода = ДобавитьМесяц( НачалоПериода, КолМес )- 1;
				возврат;
			КонецЕсли;
		КонецЕсли;
	Иначе
		запрет = Истина;
		Сообщить("Нет документа Установки или уже всё выплачено!", СтатусСообщения.Внимание);
	КонецЕсли;
	
	
	Если запрет тогда 
		Если КолМес=0 тогда
	       Сообщить("Нельзя делать выплату на основании "+строка(Основание), СтатусСообщения.Важное );
		Иначе // пытаемся сдвинуть начало периода!
			Если НЕ Основание.Пустая() тогда
			НачалоПериода = ПолучитьНачалоВыплаты();
			Если КолМес>0 тогда
			КонецПериода  = КонецМесяца( ДобавитьМесяц(НачалоПериода, КолМес) );
			иначе 
			КонецПериода  = НачалоПериода;
			КонецЕсли;
			Сообщить("Начало Периода не может быть меньше "+формат(НачалоПериода,"ДЛФ=D")+", а остаток выплаты составляет "+строка(КолМес)+" мес." ); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПослеЗаписи()
	
	Если не Основание.Пустая() тогда
		Если основание.ДатаС = НачалоПериода и основание.ДатаПо = КонецПериода тогда
			ОснованиеОб = Основание.ПолучитьОбъект();
			
			КоличествоПлан1 = Цел(КоличествоФакт/100)*100;
			ОснованиеОб.КоличествоПлан = КоличествоПлан1;
			ОснованиеОб.Выполнен = ЭтотОбъект.Проведен;    //при распроведении
			
			ОснованиеОб.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	НачалоПериода = Дата(1,1,1);
	КонецПериода = Дата(1,1,1);
КонецПроцедуры

Процедура ПолеВвода1НачалоВыбора(Элемент, СтандартнаяОбработка)
	НачалоВыбораЗначенияДоговораКонтрагента(ЭтотОбъект, ЭтаФорма, Элемент, Контрагент, Договор,
				, СтандартнаяОбработка);
КонецПроцедуры

Процедура КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ДействиеПечать.Текст = Кнопка.Текст;
		СтруктураМакета = Новый Структура("Макет, ПредставлениеМакета");
		СписокМакетов = ПолучитьСписокПечатныхФорм();
		СтрокаМакетаВСписке = СписокМакетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаМакетаВСписке <> Неопределено Тогда
			Печать(СтрокаМакетаВСписке.Значение);
			СтруктураМакета.Макет = СтрокаМакетаВСписке.Значение;
			СтруктураМакета.ПредставлениеМакета = СтрокаМакетаВСписке.Представление;			
			
		Иначе
			СсылкаВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрЗаменить(Кнопка.Имя, "_", "-")));
			Печать(СсылкаВнешнейФормы,,,ЭтаФорма);
			СтруктураМакета.Макет = СсылкаВнешнейФормы;
			СтруктураМакета.ПредставлениеМакета = Кнопка.Текст;
		КонецЕсли;		
		
		мПечатнаяФормаПоУмолчанию = СтруктураМакета.Макет;
		СохранитьТекущуюКнопкуПечати(ЭтотОбъект.Метаданные().Имя, СтруктураМакета);
	КонецЕсли;

КонецПроцедуры // КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы()

Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	НапечататьДокументПоУмолчанию(ЭтотОбъект, глТекущийПользователь, мПечатнаяФормаПоУмолчанию, ЭтаФорма);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если ЭтоНовый() и не ЗначениеЗаполнено(Основание) Тогда
		Бонус = 1;	//ОТК	
	иначе
		Если Бонус = 0 и не ЗначениеЗаполнено(Основание) Тогда // БОНУС !
			//отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСписокПечатныхФорм() 

	СписокМакетов = Новый СписокЗначений;
    Если Бонус=1 тогда
		СписокМакетов.Добавить("Служебка", "Служебная записка (ОТК)");
    иначе
	//	СписокМакетов.Добавить("Акт", "Акт (старая форма)");
	
		Если СпособОплаты = "выплаты представителю" тогда  //30.01.2018
			СписокМакетов.Добавить("СлужебкаБонус", "Служебная записка (Бонус)");
	    Иначе
			ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
			
			Если не Основание.Пустая() тогда
			i= 1; 
				пока i<СписокМакетов.Количество() цикл //10.12.2017 - оставляем только 1 печ.форму!
					Если ТипБонуса = перечисления.ТипыБонусов.Предоплата и СписокМакетов[i].Представление="Акт Предоплата" тогда
						i=i+1;
					ИначеЕсли ТипБонуса = перечисления.ТипыБонусов.Лояльность и СписокМакетов[i].Представление="Акт Лояльность" тогда
						i=i+1;
					ИначеЕсли ТипБонуса = перечисления.ТипыБонусов.Рейтинг и СписокМакетов[i].Представление="Акт Рейтинг" тогда
						i=i+1;
					Иначе
						СписокМакетов.Удалить(i);
						Если i>=СписокМакетов.Количество() тогда 
							Прервать;
						КонецЕсли;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;//"выплаты представителю"
	
	КонецЕсли;

	Возврат СписокМакетов;

КонецФункции // ПолучитьСписокПечатныхФорм()


Процедура БонусПриИзменении(Элемент)
	
	
	Если ЭтоНовый() тогда   //29.01.2018
		Если Бонус = 0 Тогда
		ЭтотОбъект.УстановитьНовыйНомер("БВ");
		Иначе //Бонус = 1 Тогда
		ЭтотОбъект.УстановитьНовыйНомер("ОТ");
		КонецЕсли;
	КонецЕсли;
	
	Если Бонус=1 Тогда
		ТипБонуса = перечисления.ТипыБонусов.ПустаяСсылка();
		НачалоПериода = Дата;
		КонецПериода  = ТекущаяДата();
	Иначе 
		ТипБонуса = Основание.ТипБонуса;
		Если ТипБонуса.Пустая() тогда
			ТипБонуса = перечисления.ТипыБонусов.Предоплата; // по умолчанию
		КонецЕсли;	
	КонецЕсли;
		
	УстановитьКнопкуПечать();
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ТипБонусаПриИзменении(Элемент)
	УстановитьКнопкуПечать();
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
	КонецПериодаПриИзменении(неопределено);
КонецПроцедуры


Процедура ДействияФормыНаСогласование(Кнопка)
	
	Если Бонусы.Количество() = 0 Тогда //17.12.2018  ---  Бонус и ОТК на согласование!?
		Предупреждение("Не заполнена таблица бонусов! Нечего согласовывать!",30);
		возврат;
	КонецЕсли;

	Если НЕ ЭтотОбъект.Проведен тогда
		Отказ=Ложь; 
		КонтрольПериодаВыплаты(Отказ);
		Если Отказ тогда Возврат КонецЕсли;
		
		Если Вопрос("Перед отправкой на согласование - документ надо провести.
					|Провести документ и отправить на согласование?",РежимДиалогаВопрос.ДаНет,0)=КодВозвратаДиалога.Да тогда
			попытка	
				ЭтотОбъект.Записать( РежимЗаписиДокумента.Проведение );
			исключение
			 	Возврат;
			КонецПопытки;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//	ПовторнаяОтправка = Ложь;
	ПовторнаяОтправка =Бонусы[0].Статус <> перечисления.СтатусыСтрокЗаказа.ПустаяСсылка()
							и  Состояние = перечисления.СостоянияОбъектов.ПустаяСсылка();  
							
	Если ПовторнаяОтправка тогда
		отбор = НОвый Структура;
		отбор.Вставить("Статус",Перечисления.СтатусыСтрокЗаказа.НаСогласовании); // не отказанные!
		БонусыНаСогл = Бонусы.НайтиСтроки( отбор );
	Иначе //все строки
		БонусыНаСогл = Бонусы.Выгрузить();
	КонецЕсли;
	
		Если БонусыНаСогл.Количество() > 0 Тогда
			Дата = ТекущаяДата();	
//			ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение);
			таблЗадачи = Новый ТаблицаЗначений; 
			таблЗадачи.Колонки.Добавить("НомерСтрокиОснования");
			таблЗадачи.Колонки.Добавить("Номенклатура");
			
			таблЗадачи.Колонки.Добавить("Скидка");
			таблЗадачи.Колонки.Добавить("СкидкаМин");
			таблЗадачи.Колонки.Добавить("Цена");
			
			таблЗадачи.Колонки.Добавить("Количество");
			таблЗадачи.Колонки.Добавить("Сумма");
			
			таблЗадачи.Колонки.Добавить("ЦенаМин");
			таблЗадачи.Колонки.Добавить("ЦенаПоТипуЦен");
			
			таблЗадачи.Колонки.Добавить("Исполнитель");
			таблЗадачи.Колонки.Добавить("Содержание");
			
			для каждого стр1 из БонусыНаСогл Цикл
				
				менеджерТовГр = ПолучитьМенТовГруппы(Стр1);
					
				ТекстСтрока = Строка(стр1.Производитель)+": "+ Формат(стр1.СуммаБонуса,"ЧДЦ=2") + "р. (" + Строка(стр1.ПроцентБонуса) + "%)";
				
			//12.01.2017 и ОТК и Бонусы идут на мен.тов.групп!!!
					НовСтр = таблЗадачи.Добавить();
					
					НовСтр.НомерСтрокиОснования = стр1.НомерСтроки;
					НовСтр.Номенклатура = ТекстСтрока;
					
					НовСтр.ЦенаПоТипуЦен  = стр1.Сумма;
					НовСтр.ЦенаМин		  = стр1.СуммаОбрПродаж;
					НовСтр.Цена			  = стр1.Сумма - стр1.СуммаОбрПродаж;
					
					НовСтр.Сумма		  = стр1.СуммаБонуса;  // = Цена * Скидка /100
					
					НовСтр.Скидка    = стр1.ПроцентБонуса;
					НовСтр.СкидкаМин = стр1.СуммаБонуса;    // Старая сумма - чтобы сохранилась!
					
					НовСтр.Количество = стр1.Количество;
					
					НовСтр.Исполнитель = менеджерТовГр;
					НовСтр.Содержание = ТекстСтрока;
			КонецЦикла;
			
			таблицаИсполнителей = таблЗадачи.Скопировать();
			таблицаИсполнителей.Свернуть("Исполнитель");
			
			РукНапр = Менеджер.НаправлениеПродаж.Руководитель;
			
			//Именно выплата представителю... делается по служебке!
			Если СпособОплаты=ЭлементыФормы.СпособОплаты.СписокВыбора[2].Значение тогда   //+++ 05.02.2018 - сразу на фин.отдел!
				ГлБух = Справочники.подразделения.НайтиПоКоду("00007").Руководитель; //Финансовый отдел >> "Пятницкая"
			Иначе
				ГлБух = Справочники.подразделения.НайтиПоКоду("00008").Руководитель;  //Бухгалтерия >> Яковлева
			КонецЕсли;
			
			Для каждого стр из таблицаИсполнителей Цикл
				
				структураИсполнители = Новый Структура;
				структураИсполнители.Вставить("Исполнитель",стр.Исполнитель);
				таблицаТоваров =  таблЗадачи.Скопировать(структураИсполнители);
				
				//==================================СОЗДАНИЕ ЗАДАЧ===========================
				Если ПовторнаяОтправка тогда
					задача1 = БонусыНаСогл[0].ЗадачаНаСогласование.ПолучитьОбъект();
					задача1.ПоследовательностьСогласования.Очистить();
					задача1.Выполнена = ЛОЖЬ;
				иначе	
					задача1 = задачи.ЗадачиПользователя.СоздатьЗадачу();
				КонецЕсли;
			
				задача1.Товары.Очистить();
				
				задача1.Наименование = "Согласуйте ВЫПЛАТУ "+?(Бонус=1,"ОТК","Бонусов ("+ВРЕГ(строка(этотОбъект.ТипБонуса))+") только ПО ДОГОВОРАМ")+?(нал,"(*)","(б/н)")
				+" для клиента: "+строка(Контрагент); 
				
				номГр = этотОбъект.Основание.НоменклатурнаяГруппа;
				задача1.Описание = "
				|Выплата "+?(Бонус=1,"ОТК",
								"Бонусов ("+ВРЕГ(строка(этотОбъект.ТипБонуса))+") только ПО ДОГОВОРАМ"+?(нал,",(*)","(б/н)") )
				+" Покупателю: "+строка(Контрагент)+"
				|за период с "+формат(этотОбъект.НачалоПериода,"ДЛФ=D")+" по "+формат(этотОбъект.КонецПериода,"ДЛФ=D")+"
				|"+?(номГр.Пустая(),"", "по ном.группе: "+ Строка(номГр)+"
				|для оплаты путём '"+СпособОплаты+"' Покупателя.
 				|") + СокрЛП(ЭтотОбъект.Комментарий);
							
				задача1.НаСогласование = ИСТИНА;//+++ ОБЯЗАТЕЛЬНО!
				
				//+++ 12.01.2018 для ОТК - ТОЛЬКО на мен.тов.группы (обычное согласование!) 
				Если Бонус=1 тогда
					задача1.Исполнитель = стр.Исполнитель; //МенТовГр
			 	Иначе 
					задача1.Исполнитель = РукНапр; //сначала на рукНапр
				КонецЕсли;	
				
				// для Бонуса - обязательно через ГлБух!
				Если Бонус = 0 Тогда 
					Если стр.Исполнитель=РукНапр тогда //двойное согласование
						Нов3 = задача1.ПоследовательностьСогласования.Добавить();
						нов3.Сотрудник = ГлБух;
 					Иначе
						// тройное согласование через Руководителя, МенТовГр и ГлБух
						Нов2 = задача1.ПоследовательностьСогласования.Добавить();
						нов2.Сотрудник = стр.Исполнитель;
						
						Нов3 = задача1.ПоследовательностьСогласования.Добавить();
						нов3.Сотрудник = ГлБух;
					КонецЕсли;	
					
				//+++ 18.07.2018 - Задача № 51018
					//Если ГлБух = Справочники.подразделения.НайтиПоКоду("00008").Руководитель тогда //4х ступенчатое
					//	Нов = задача1.ПоследовательностьСогласования.Добавить(); 
					//	нов.Сотрудник = Справочники.Подразделения.НайтиПоКоду("00012").Руководитель; //юрист
					//КонецЕсли;
				
				КонецЕсли;
						
				для каждого стр111 из таблицаТоваров Цикл
					стр222 = задача1.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(стр222, стр111);
					задача1.Описание   = задача1.Описание + Символы.ПС+ стр111.Содержание;
				КонецЦикла;
				задача1.Описание = задача1.Описание+ Символы.ПС
				+"Итого: " + строка( задача1.Товары.Итог("Сумма")) + "р."; //18.01.18
				
				задача1.Постановщик    = глТекущийПользователь;//------- Кто делает! ---------- 
				
				//+++( 08.08.2018 ---------на помощника?!----------------------------------
				ЗакрепленныеОператорПомощник = ПолучитьЗакрпленныхЗаРегиономОператораПомощника(Контрагент.Регион, Контрагент);
				//оператор = ЗакрепленныеОператорПомощник.Оператор;
				Помощник = ЗакрепленныеОператорПомощник.Помощник;
 				задача1.Инициатор      = ?(ЗначениеЗаполнено(Помощник), Помощник, ЭтотОбъект.Менеджер);  //------- Кому вернётся обратно ----------
				Сообщить("После всех согласований - задаче вернётся на "+ ?(ЗначениеЗаполнено(Помощник),"Помощника","Менеджера")+": "+строка(задача1.Инициатор));
				//+++)
				
				задача1.Объект   	   = ЭтотОбъект.Ссылка;
				
				задача1.Дата 		   = ТекущаяДата();
				задача1.СрокИсполнения = КонецДня( ТекущаяДата() ); // до конца текущих суток с момента установки - не просрочено!
				
				задача1.Оповещение     = Истина;
				задача1.СрокОповещения = ТекущаяДата(); //сразу (появится не позднее чем через 5 мин
				
				Если задача1.Исполнитель.Пустая() тогда //+++ 12.01.2018  Не пустая!
					задача1.Исполнитель = справочники.Пользователи.НайтиПоКоду("Бондаренко Е.Д. (снабжение)");
				КонецЕсли;	
					
				попытка 
				задача1.Записать();
				
					Сообщить(" + "+?(ПовторнаяОтправка,"Изменена существующая","Сформирована новая")+" Задача на согласование Выплаты "
					+?(Бонус=1,"ОТК","бонусов ("+ВРЕГ(строка(этотОбъект.ТипБонуса))+") только ПО ДОГОВОРАМ"+?(нал,"(*)","(б/н)"))+" для сотрудника: "+строка(задача1.Исполнитель), СтатусСообщения.Информация );	
				исключение
					Сообщить(" - Не удалось сформировать электронную Задачу на согласование Выплаты "
					+?(Бонус=1,"ОТК","бонусов ("+ВРЕГ(строка(этотОбъект.ТипБонуса))+") только ПО ДОГОВОРАМ"+?(нал,"(*)","(б/н)"))+" для сотрудника: "+строка(задача1.Исполнитель), СтатусСообщения.Внимание );	
				КонецПопытки;

				для каждого стр111 из таблицаТоваров Цикл
					ОтборСтрока = Новый Структура;
					ОтборСтрока.Вставить("НомерСтроки",стр111.НомерСтрокиОснования);
					СтрокаОсн = Бонусы[стр111.НомерСтрокиОснования-1];
					СтрокаОсн.ЗадачаНаСогласование = задача1.Ссылка;
				КонецЦикла;
			КонецЦикла;
			
			Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
			
			Для Каждого стр из БонусыНаСогл Цикл
				стр.статус = Перечисления.СтатусыСтрокЗаказа.НаСогласовании;
			КонецЦикла;
			
			ЭтотОбъект.Записать();
			ЭтаФорма.ТолькоПросмотр = Истина;
			
		КонецЕсли;
		
	
КонецПроцедуры

Процедура ТабличноеПоле1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Статус = перечисления.СтатусыСтрокЗаказа.Отменен Тогда
	  ОформлениеСтроки.ЦветФона = WebЦвета.СветлоРозовый;
	ИначеЕсли ДанныеСтроки.Статус = перечисления.СтатусыСтрокЗаказа.Согласован Тогда
	  ОформлениеСтроки.ЦветФона = WebЦвета.Бежевый;
    ИначеЕсли ДанныеСтроки.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден Тогда
	  ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина); // Жирный
	КонецЕсли;
КонецПроцедуры

Процедура НачалоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	Элемент.Значение = ДобавитьМесяц( Элемент.Значение , Направление);
	
	КонецПериодаПриИзменении(Элемент);

КонецПроцедуры

Процедура КонецПериодаПриИзменении(Элемент)
	
	Отказ=ЛОЖЬ; КолМес=0;
	КонтрольПериодаВыплаты(Отказ, КолМес);
		
	Если Отказ тогда 
		Бонусы.Очистить();
	КонецЕсли;
	
	Если Бонусы.Количество()>0 тогда //Обязательно! без вариантов!
		Предупреждение("При изменении периода - будет выполнен пересчет всех выплат!", 10);
		РасчитатьБонусыНажатие(неопределено);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОснованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Основание) тогда
		Бонус = Основание.Бонус;
		ТипБонуса  = Основание.ТипБонуса;
		НоменклатурнаяГруппа = Основание.НоменклатурнаяГруппа;
		
		Нал = Основание.Нал;  //06.02.2018
		Если Нал тогда  //07.02.2018 - > изменение Способа оплаты
			СпособОплаты = ЭлементыФормы.СпособОплаты.СписокВыбора[2].Значение;
		Иначе	//взаимозачёт
			СпособОплаты = ЭлементыФормы.СпособОплаты.СписокВыбора[0].Значение;
		КонецЕсли;
		
		Контрагент = Основание.Контрагент;
		Комментарий = Основание.Комментарий;
		
		Если Бонус=0 тогда
			НачалоПериода = Основание.ДатаС;
			КонецПериода  = Основание.ДатаПо;
		Иначе	
			НачалоПериода = Основание.Дата;
			КонецПериода  = КонецМесяца( Основание.Дата );
		КонецЕсли;
		
		КонецПериодаПриИзменении(неопределено);
	КонецЕсли;
	
	УстановитьВидимость();

КонецПроцедуры

Процедура ОснованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	форма = документы.УстановкаБонусов.ПолучитьФормуВыбора();
	
	форма.ДокументСписок.Отбор.Контрагент.ВидСравнения = ВидСравнения.Равно;
	форма.ДокументСписок.Отбор.Контрагент.Значение = Контрагент;
	форма.ДокументСписок.Отбор.Контрагент.Использование = Истина;
	
	форма.ДокументСписок.Отбор.Бонус.ВидСравнения = ВидСравнения.Равно;
	форма.ДокументСписок.Отбор.Бонус.Значение = Бонус;
	форма.ДокументСписок.Отбор.Бонус.Использование = Истина;
	
	форма.ДокументСписок.Отбор.ТипБонуса.ВидСравнения = ВидСравнения.Равно;
	форма.ДокументСписок.Отбор.ТипБонуса.Значение = ТипБонуса;
	форма.ДокументСписок.Отбор.ТипБонуса.Использование = Истина;

	Основание = форма.ОткрытьМодально();
	ОснованиеПриИзменении(неопределено);
КонецПроцедуры

//заполнение статусов всех строк вручную
Процедура СостояниеПриИзменении(Элемент)
	
		Если Состояние = Перечисления.СостоянияОбъектов.Выполнен тогда
			Выполнен = Истина; // может и вручную отдельно включиться
		КонецЕсли;

		для каждого стр1 из Бонусы цикл
			Если Состояние = Перечисления.СостоянияОбъектов.Утвержден
				или Состояние = Перечисления.СостоянияОбъектов.Выполнен тогда
				стр1.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден;
				
			иначеЕсли Состояние = Перечисления.СостоянияОбъектов.Отклонен 
			      или Состояние = Перечисления.СостоянияОбъектов.Отложен тогда
				стр1.Статус = перечисления.СтатусыСтрокЗаказа.Отменен;
				
			иначеЕсли Состояние = Перечисления.СостоянияОбъектов.Подготовлен 
				или Состояние = Перечисления.СостоянияОбъектов.Согласован тогда
				стр1.Статус = перечисления.СтатусыСтрокЗаказа.НаСогласовании;
				
			иначеЕсли Состояние = Перечисления.СостоянияОбъектов.ПустаяСсылка() тогда
				стр1.Статус = перечисления.СтатусыСтрокЗаказа.ПустаяСсылка();
	
			КонецЕсли;	
		КонецЦикла;
	
КонецПроцедуры

Процедура СпособОплатыПриИзменении(Элемент)
	
	//07.02.2018 --- автоконтроль 
	
	//нал - должен выплачиваться Представителю...
	Если Нал и СпособОплаты <> ЭлементыФормы.СпособОплаты.СписокВыбора[2].Значение тогда
		Если Вопрос("Вы уверены, что бонус от продаж(*) - будет оплачен путём "+СпособОплаты+" Покупателя?", РежимДиалогаВопрос.ДаНет,0)<>КодВозвратаДиалога.Да тогда
			СпособОплаты = ЭлементыФормы.СпособОплаты.СписокВыбора[2].Значение;
		КонецЕсли; 	
	//без/нал - НЕ должен выплачиваться Представителю...
	ИначеЕсли НЕ Нал и СпособОплаты = ЭлементыФормы.СпособОплаты.СписокВыбора[2].Значение тогда
		Если Вопрос("Вы уверены, что бонус от продаж(б/н) - будет оплачен путём "+СпособОплаты+" Покупателя?", РежимДиалогаВопрос.ДаНет,0)<>КодВозвратаДиалога.Да тогда
			СпособОплаты = ЭлементыФормы.СпособОплаты.СписокВыбора[0].Значение;
		КонецЕсли; 	
	КонецЕсли;
	
	УстановитьВидимость();
	УстановитьКнопкуПечать();
	//пересчет делать НЕ надо!	
	//расчет зависит от [v] Нал
КонецПроцедуры


процедура УстановитьВидимость()
	
	ЭтаФорма.Заголовок = "Выплата бонусов "+ ?(Бонус=1,"ОТК", ?(нал," от продаж по договорам(*)","по договорам(б/н)") );//06.02.2018
	Если Состояние = Перечисления.СостоянияОбъектов.Подготовлен и Бонусы.Количество()>0 тогда //видеть у кого на согласовании сейчас
		 ЭтаФорма.Заголовок = ЭтаФорма.Заголовок
		 		+?(НЕ Бонусы[0].ЗадачаНаСогласование.Пустая(),
		 		" - НА СОГЛАСОВАНИИ: "+строка(Бонусы[0].ЗадачаНаСогласование.Исполнитель), "");
	КонецЕсли;			
	
	ЭлементыФормы.РасчитатьБонусы.Заголовок = "Рассчитать "+ ?(Бонус=0,"бонусы"+?(нал," *",""),"ОТК");
	
	ЭлементыФормы.НадписьТипБонуса.Видимость =(Бонус=0);	
	ЭлементыФормы.ТипБонуса.Видимость 		 =(Бонус=0);
	ЭлементыФормы.Нал.Видимость 		     =(Бонус=0);
	//только для Лояльности - нужно Количество
	ЭлементыФормы.НадписьКоличествоФакт.Видимость = (ТипБонуса=Перечисления.ТипыБонусов.Лояльность);
	ЭлементыФормы.КоличествоФакт.Видимость		  = (ТипБонуса=Перечисления.ТипыБонусов.Лояльность);
	ЭлементыФормы.ТабличноеПоле1.Колонки.Количество.Видимость = (ТипБонуса=Перечисления.ТипыБонусов.Лояльность);
	
	//ТЧ--------для Бонусов и ОТК - различаются-----------------
	ЭлементыФормы.ТабличноеПоле1.Колонки.СуммаОбрПродаж.Видимость = (Бонус=0);
	ЭлементыФормы.ТабличноеПоле1.Колонки.Себестоимость.Видимость  = (Бонус=0);
	
	ЭлементыФормы.ТабличноеПоле1.Колонки.Коэффициент.Видимость = (Бонус=1);
    ЭлементыФормы.ТабличноеПоле1.Колонки.СуммаБезОТК.Видимость = (Бонус=1);
		
	ЭлементыФормы.ТабличноеПоле1.Колонки.Сумма.ТекстШапки = "Сумма"+?(Бонус=0,
	?(нал,"*","(б/н)")+" без НДС","")+", руб."; // Бонусы без НДС!
	ЭлементыФормы.ТабличноеПоле1.Колонки.СуммаОбрПродаж.ТекстШапки = "- Сумма обр.продаж "+?(Бонус=0,
	?(нал,"*","(б/н)")+" без НДС","")+", руб.";
	
	//----------------------------------------------------------------
	ЭлементыФормы.ДействияФормы.Кнопки.НаСогласование.Доступность = (Состояние.Пустая() 
						или Состояние = перечисления.СостоянияОбъектов.Подготовлен ); //повторная отправка!
					
	ЭлементыФормы.ОТК.Доступность   = Основание.Пустая();
	ЭлементыФормы.Бонус.Доступность = Основание.Пустая();
	ЭлементыФормы.ТипБонуса.Доступность = Основание.Пустая(); //Если на основании Установки - то менять НЕЛЬЗЯ!
	
	ЭлементыФормы.Контрагент.Доступность = Основание.Пустая();
	ЭлементыФормы.Основание.ТолькоПросмотр = не Основание.Пустая(); //уже нельзя менять!
	
	Если (Состояние = перечисления.СостоянияОбъектов.Утвержден
		  или Состояние = перечисления.СостоянияОбъектов.Согласован //07.02.2018
		  или Состояние = перечисления.СостоянияОбъектов.Выполнен
		   или Выполнен )
		и не РольДоступна("ПравоЗавершенияРаботыПользователей") Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		ЭлементыФормы.РасчитатьБонусы.Доступность = Ложь;
	КонецЕсли;
	
	Если РольДоступна("ПолныеПрава") тогда
		ЭлементыФормы.Основание.ТолькоПросмотр      = ЛОЖЬ;
		ЭлементыФормы.Состояние.ТолькоПросмотр      = ЛОЖЬ;
		ЭлементыФормы.ТабличноеПоле1.ТолькоПросмотр = ЛОЖЬ;
	КонецЕсли;

	
КонецПроцедуры	

//--------------изменение в документе-----------------------
Процедура ТабличноеПоле1СуммаПриИзменении(Элемент)
	текСтр = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные;
	текСтр.СуммаБонуса = ОКР( (текСтр.Сумма - текСтр.СуммаОбрПродаж) * текСтр.ПроцентБонуса/100 ,2);
	текСтр.Статус = перечисления.СтатусыСтрокЗаказа.Согласован;
КонецПроцедуры

Процедура ТабличноеПоле1СуммаБонусаПриИзменении(Элемент)
	текСтр = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные;
	текСтр.ПроцентБонуса = ОКР( текСтр.СуммаБонуса / (текСтр.Сумма - текСтр.СуммаОбрПродаж) *100 ,2);
	текСтр.Статус = перечисления.СтатусыСтрокЗаказа.Согласован;
КонецПроцедуры
