Перем мЖирныйШрифт;
Перем мЗачеркнутыйШрифт;

Перем мСписокЗаказов, мСписокОтгрузок, ВремяОбновления;

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры





Процедура ДействияФормыДействиеАнализ(Кнопка)
	
	АнализЗаказа = Отчеты.АнализСезонныхЗаказов.Создать();
	АнализЗаказаФорма = АнализЗаказа.ПолучитьФорму();
	ТекСтр = ЭлементыФормы.Список.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтр.Ссылка) тогда
		АнализЗаказаФорма.ЭлементыФормы.ДатаНач.Значение = НачалоДня(ТекСтр.Ссылка.Дата);
		АнализЗаказаФорма.ЭлементыФормы.ДатаКон.Значение = КонецГода(ТекСтр.Ссылка.Дата);
		АнализЗаказаФорма.ЭлементыФормы.ПолеНастройкиСсылка.Значение = ТекСтр.Ссылка;
	КонецЕсли;
	АнализЗаказа.ЗаполнитьНачальныеНастройки();
	АнализЗаказаФорма.Открыть();
	АнализЗаказаФорма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	//+++( 24.08.2012 - отбор по подразделению ВСЕГДА!
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		
		//+++ 01.06.2015 - отбор общий как во всех документах!		
		УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.Список);

	КонецЕсли;
	
	Если РольДоступна("ДополнительныеПраваВЭД") Тогда
		
		Если ДокументСписок.Отбор.Найти("Подразделение") = Неопределено Тогда 
			ДокументСписок.Отбор.Добавить("Подразделение");
		КонецЕсли;
		ДокументСписок.Отбор["Подразделение"].Использование = Истина;
		
		списокПодразделенийПользователя = новый СписокЗначений;
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
		
		ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.ВСписке;
		ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
		
		ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		
		Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоДоговору") Тогда
			
			Если ДокументСписок.Отбор.Найти("Ответственный") = Неопределено Тогда 
				ДокументСписок.Отбор.Добавить("Ответственный");
			КонецЕсли;
			ДокументСписок.Отбор["Ответственный"].Использование = Истина;
			
			Польз = Справочники.Пользователи.НайтиПоКоду(СокрЛП(ПользователиИнформационнойБазы.ТекущийПользователь().Имя));
			
			ДокументСписок.Отбор["Ответственный"].ВидСравнения = ВидСравнения.Равно;
			ДокументСписок.Отбор["Ответственный"].Значение = Польз;
			
			ЭлементыФормы.Список.НастройкаОтбора["Ответственный"].Доступность = Ложь;
			
		КонецЕсли;
		
		ЭлементыФормы.Список.Колонки.Завод.Видимость = Истина;
		
	иначеЕсли РольДоступна("яштФинДиректор") Тогда	
		
	иначе
		
		Если ДокументСписок.Отбор["Подразделение"].Использование  = Ложь Тогда
			ДокументСписок.Отбор["Подразделение"].Использование = Истина;
			
			списокПодразделенийПользователя = новый СписокЗначений;
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
			
			ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.НеВСписке;
			ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
			
			//ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура СписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если РольДоступна("ДополнительныеПраваВЭД") Тогда
		
		параметрыЗаказа = ПроверитьСезонныйЗаказПокупателя(ДанныеСтроки.ссылка);
		Если параметрыЗаказа.Отгружен Тогда
		    ОформлениеСтроки.ЦветФона = webЦвета.СветлоСерый;
	    иначеЕсли параметрыЗаказа.ЗаказПоставщику Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.НейтральноЗеленый;
		ИначеЕсли параметрыЗаказа.СезонныйЗаказПоставщику Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.СветлоНебесноГолубой;
		ИначеЕсли параметрыЗаказа.ПросроченоеЗаданиеВЭД Тогда
			ОформлениеСтроки.ЦветФона = webЦвета.ТусклоРозовый;
		ИначеЕсли параметрыЗаказа.ЗаданиеВЭД Тогда
			ОформлениеСтроки.ЦветФона = webЦвета.Бежевый;
		Иначе
			
			//расцветка удаленных и просроченных заказов
			Если ДанныеСтроки.ссылка.ПометкаУдаления 
				или (ДанныеСтроки.ссылка.ДатаДействияПо>'00010101' 
				и ДанныеСтроки.ссылка.ДатаДействияПо<НачалоДня( ТекущаяДата() )
				)  тогда
				ОформлениеСтроки.ЦветФона = webЦвета.СветлоСерый;
			КонецЕсли;
			
		КонецЕсли;
		ОформлениеСтроки.Ячейки.Количество.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.Количество.Текст = ДанныеСтроки.ссылка.товары.Итог("Количество");
		
		Строки = ДанныеСтроки.ссылка.товары.Выгрузить();
		Строки.Свернуть("Завод");
		
		Если Строки.Количество()>1 Тогда
			
		иначеЕсли Строки.Количество()=1 Тогда
			ОформлениеСтроки.Ячейки.Завод.ОтображатьТекст = Истина;			
			ОформлениеСтроки.Ячейки.Завод.Текст = Строки[0].завод;
		КонецЕсли;
	иначе	
		//расцветка удаленных и просроченных заказов
		Если ДанныеСтроки.ссылка.ПометкаУдаления 
			или (ДанныеСтроки.ссылка.ДатаДействияПо>'00010101' 
			и ДанныеСтроки.ссылка.ДатаДействияПо<НачалоДня( ТекущаяДата() )
			)  тогда
			ОформлениеСтроки.ЦветФона = webЦвета.СветлоСерый;
		КонецЕсли;	
		ОформлениеСтроки.Ячейки.Количество.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.Количество.Текст = ДанныеСтроки.ссылка.товары.Итог("Количество");
		
	КонецЕсли;
	
КонецПроцедуры

Функция  ПроверитьСезонныйЗаказПокупателя(ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата1",ссылка.дата);
	Запрос.УстановитьПараметр("Дата2",ссылка.ДатаДействияПо);
	Запрос.УстановитьПараметр("ссылка",ссылка);
	запрос.Текст = "ВЫБРАТЬ
	               |	1 КАК Номер,
	               |	ЗаказПоставщикуСезонный.Ссылка,
	               |	NULL КАК Дата,
	               |	NULL КАК Выполнен,
	               |	NULL КАК Остаток
	               |ИЗ
	               |	Документ.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный
	               |ГДЕ
	               |	ЗаказПоставщикуСезонный.ДокументОснование = &Ссылка
	               |	И ЗаказПоставщикуСезонный.Дата МЕЖДУ &Дата1 И &Дата2
	               |	И ЗаказПоставщикуСезонный.Проведен = ИСТИНА
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	2,
	               |	ЗаказПоставщику.Ссылка,
	               |	NULL,
	               |	NULL,
	               |	NULL
	               |ИЗ
	               |	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	               |ГДЕ
	               |	ЗаказПоставщику.Основание.ДокументОснование = &Ссылка
	               |	И ЗаказПоставщику.Дата МЕЖДУ &Дата1 И &Дата2
	               |	И ЗаказПоставщику.Проведен = ИСТИНА
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	3,
	               |	ЗаданиеОтделуВЭД.Ссылка,
	               |	ЗаданиеОтделуВЭД.Дата,
	               |	ВЫБОР
	               |		КОГДА ЗаданиеОтделуВЭД.СтатусЗаказаПоставщик = ""Подтвержден поставщиком""
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ,
	               |	NULL
	               |ИЗ
	               |	Документ.ЗаданиеОтделуВЭД КАК ЗаданиеОтделуВЭД
	               |ГДЕ
	               |	ЗаданиеОтделуВЭД.Заказ = &Ссылка
	               |	И ЗаданиеОтделуВЭД.Дата МЕЖДУ &Дата1 И &Дата2
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	4,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	ЕСТЬNULL(ЗаказыПокупателейСезонныеОстатки.КоличествоОстаток, 0)
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателейСезонные.Остатки(, ЗаказПокупателяСезонный = &Ссылка) КАК ЗаказыПокупателейСезонныеОстатки";
	рез = запрос.Выполнить().Выгрузить();			   
	Структура = Новый Структура;
	Структура.Вставить("СезонныйЗаказПоставщику");
	Структура.Вставить("ЗаказПоставщику");
	Структура.Вставить("ЗаданиеВЭД");
	Структура.Вставить("ПросроченоеЗаданиеВЭД");
	Структура.Вставить("Отгружен");
	
	Структура.СезонныйЗаказПоставщику = Ложь;
	Структура.ЗаказПоставщику = Ложь;
	Структура.ЗаданиеВЭД = Ложь;
	Структура.ПросроченоеЗаданиеВЭД = Ложь;
	Структура.Отгружен = Ложь;
	
	Для каждого стр из Рез Цикл
		Если стр.Номер = 1 Тогда
			Если ЗначениеЗаполнено(стр.Ссылка) Тогда
				Структура.СезонныйЗаказПоставщику = Истина;
			КонецЕсли;
		ИначеЕсли стр.Номер = 2 Тогда
			Если ЗначениеЗаполнено(стр.Ссылка) Тогда
				Структура.ЗаказПоставщику = Истина;
			КонецЕсли;
		ИначеЕсли стр.Номер = 3 Тогда
			Если ЗначениеЗаполнено(стр.Ссылка) Тогда
				Структура.ЗаданиеВЭД = Истина;
			КонецЕсли;

			Если ЗначениеЗаполнено(стр.Ссылка) и не стр.Выполнен и (стр.Дата + 60*60*24*10) < ТекущаяДата() Тогда
				Структура.ПросроченоеЗаданиеВЭД = Истина;
			КонецЕсли;
		ИначеЕсли стр.Номер = 4 Тогда
			Если стр.остаток = 0 Тогда
				Структура.Отгружен = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Структура;
		
КонецФункции


мСписокЗаказов=Новый Массив;
мСписокОтгрузок=Новый Массив;

мЖирныйШрифт = Новый Шрифт(,, Истина);
мЗачеркнутыйШрифт = Новый Шрифт(,,,,,Истина);
