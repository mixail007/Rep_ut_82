
Процедура ОбработкаПроведения(Отказ, Режим)

	СобытияПоступления = Новый СписокЗначений;
	СобытияПоступления.Добавить(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком);
	СобытияПоступления.Добавить(Перечисления.СобытияПоНДСПокупки.УплаченНДСНаТаможне);
	СобытияПоступления.Добавить(Перечисления.СобытияПоНДСПокупки.ВосстановленНДС);

	СобытияМинусПоступления = Новый СписокЗначений;
	СобытияМинусПоступления.Добавить(Перечисления.СобытияПоНДСПокупки.Возврат);
	
	УчитываемыеСобытия = Новый СписокЗначений;
	УчитываемыеСобытия.Добавить(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком);
	УчитываемыеСобытия.Добавить(Перечисления.СобытияПоНДСПокупки.УплаченНДСНаТаможне);
	УчитываемыеСобытия.Добавить(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету);
	УчитываемыеСобытия.Добавить(Перечисления.СобытияПоНДСПокупки.ВосстановленНДС);
	УчитываемыеСобытия.Добавить(Перечисления.СобытияПоНДСПокупки.ПредполагаетсяСтавка0);
	УчитываемыеСобытия.Добавить(Перечисления.СобытияПоНДСПокупки.НДСВключенВСтоимость);
	УчитываемыеСобытия.Добавить(Перечисления.СобытияПоНДСПокупки.Возврат);

	СобытияПричиныВосстановления = Новый СписокЗначений;
	СобытияПричиныВосстановления.Добавить(Перечисления.СобытияПоНДСПокупки.ПредполагаетсяСтавка0);
	СобытияПричиныВосстановления.Добавить(Перечисления.СобытияПоНДСПокупки.НДСВключенВСтоимость);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",                  Организация);
	Запрос.УстановитьПараметр("Регистратор",                  Ссылка);
	Запрос.УстановитьПараметр("КонецПериода",                 КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("УчитываемыеСобытия",           УчитываемыеСобытия); // Установим фильтр обрабатываемых событий в регистре "НДСПокупки"
	Запрос.УстановитьПараметр("СобытияПоступления",           СобытияПоступления); // События, формирующие сумму, которая потенциально может быть признана к вычету
	Запрос.УстановитьПараметр("СобытияМинусПоступления",      СобытияМинусПоступления); // События, формирующие сумму, которая потенциально может быть признана к вычету
	Запрос.УстановитьПараметр("СобытиеВычетНДС",              Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету);
	Запрос.УстановитьПараметр("СобытиеПричиныВосстановления", СобытияПричиныВосстановления);// Причины по которы может понадобится восстановление НДС принятого ранее к вычету
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НДСПокупки.ВидЦенности КАК ВидЦенности,
	|	НДСПокупки.Поставщик   КАК Поставщик,
	|	НДСПокупки.СчетФактура КАК СчетФактура,
	|	НДСПокупки.СтавкаНДС   КАК СтавкаНДС,
	|	СУММА(ВЫБОР КОГДА НДСПокупки.Событие В (&СобытияПоступления)           ТОГДА НДСПокупки.СуммаБезНДС КОГДА НДСПокупки.Событие В (&СобытияМинусПоступления) ТОГДА - НДСПокупки.СуммаБезНДС ИНАЧЕ 0 КОНЕЦ) КАК ПредъявленоСумма,
	|	СУММА(ВЫБОР КОГДА НДСПокупки.Событие В (&СобытияПоступления)           ТОГДА НДСПокупки.НДС         КОГДА НДСПокупки.Событие В (&СобытияМинусПоступления) ТОГДА - НДСПокупки.НДС 		 ИНАЧЕ 0 КОНЕЦ) КАК ПредъявленоНДС,
	|	СУММА(ВЫБОР КОГДА НДСПокупки.Событие = &СобытиеВычетНДС                ТОГДА НДСПокупки.СуммаБезНДС ИНАЧЕ 0 КОНЕЦ) КАК ВычетСумма,
	|	СУММА(ВЫБОР КОГДА НДСПокупки.Событие = &СобытиеВычетНДС                ТОГДА НДСПокупки.НДС         ИНАЧЕ 0 КОНЕЦ) КАК ВычетНДС,
	|	СУММА(ВЫБОР КОГДА НДСПокупки.Событие В (&СобытиеПричиныВосстановления) ТОГДА НДСПокупки.СуммаБезНДС ИНАЧЕ 0 КОНЕЦ) КАК НужноВосстановитьСумма,
	|	СУММА(ВЫБОР КОГДА НДСПокупки.Событие В (&СобытиеПричиныВосстановления) ТОГДА НДСПокупки.НДС         ИНАЧЕ 0 КОНЕЦ) КАК НужноВосстановитьНДС
	|ИЗ
	|	РегистрНакопления.НДСПокупки КАК НДСПокупки
	|
	|ГДЕ
	|	НДСПокупки.Период      <= &КонецПериода И
	|	НДСПокупки.Регистратор <> &Регистратор  И
	|	НДСПокупки.Организация =  &Организация  И
	|	НДСПокупки.Событие     В  (&УчитываемыеСобытия)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПокупки.ВидЦенности,
	|	НДСПокупки.Поставщик,
	|	НДСПокупки.СчетФактура,
	|	НДСПокупки.СтавкаНДС";

	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл

		СуммаВосстановления = 0;

		Если (Выборка.ПредъявленоСумма > 0)
		   и (Выборка.ВычетСумма > 0)
		   и (Выборка.НужноВосстановитьСумма >= 0) Тогда

			// Требуется произвести расчет базы для НДС, ранее принятой к вычету, но в связи с утратой права на
			// данный вычет, подлежащей восстановлению

			МожетБытьПринятоКВычетуСумма = Выборка.ПредъявленоСумма - Выборка.НужноВосстановитьСумма;

			Если (МожетБытьПринятоКВычетуСумма < Выборка.ВычетСумма)
			   и (МожетБытьПринятоКВычетуСумма >= 0) Тогда

				СуммаВосстановления = Выборка.ВычетСумма - МожетБытьПринятоКВычетуСумма;

			ИначеЕсли МожетБытьПринятоКВычетуСумма < 0 Тогда

				СуммаВосстановления = Выборка.ВычетСумма;

			КонецЕсли;

		КонецЕсли;

		НДСВосстановления = 0;

		Если (Выборка.ПредъявленоНДС > 0)
		   и (Выборка.ВычетНДС > 0)
		   и (Выборка.НужноВосстановитьНДС >= 0) Тогда

			// Требуется произвести расчет суммы НДС, ранее принятой к вычету, но в связи с утратой права на
			// данный вычет, подлежащей восстановлению

			МожетБытьПринятоКВычетуНДС = Выборка.ПредъявленоНДС - Выборка.НужноВосстановитьНДС;

			Если (МожетБытьПринятоКВычетуНДС < Выборка.ВычетНДС)
			   и (МожетБытьПринятоКВычетуНДС >= 0) Тогда

				НДСВосстановления = Выборка.ВычетНДС - МожетБытьПринятоКВычетуНДС;

			ИначеЕсли МожетБытьПринятоКВычетуНДС < 0 Тогда

				НДСВосстановления = Выборка.ВычетНДС;

			КонецЕсли;

		КонецЕсли;

		Если (СуммаВосстановления <> 0) или (НДСВосстановления <> 0) Тогда

			// получаем таблицу идентичную по структуре движениям регистра "НДСПокупки"
			ТаблицаПоступлений = Движения.НДСПокупки.Выгрузить();
			ТаблицаПоступлений.Очистить();
			
			СтрокаДвижения = Движения.НДСПокупки.Добавить();

			СтрокаДвижения.Период       = Дата;
			СтрокаДвижения.Организация  = Организация;
			СтрокаДвижения.ВидЦенности  = Выборка.ВидЦенности;
			СтрокаДвижения.Поставщик    = Выборка.Поставщик;
			СтрокаДвижения.СчетФактура  = Выборка.СчетФактура;
			СтрокаДвижения.Событие      = Перечисления.СобытияПоНДСПокупки.ВосстановленНДС;
			СтрокаДвижения.СтавкаНДС    = Выборка.СтавкаНДС;
			СтрокаДвижения.СуммаБезНДС  = СуммаВосстановления;
			СтрокаДвижения.НДС          = НДСВосстановления;

		КонецЕсли; //Если (СуммаВосстановления <> 0) или (НДСВосстановления <> 0) Тогда

	КонецЦикла; // Пока Выборка.Следующий() Цикл

КонецПроцедуры // ОбработкаПроведения(

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ Отказ Тогда
	
		обЗаписатьПротоколИзменений(ЭтотОбъект);
	
	КонецЕсли; 

КонецПроцедуры
