Перем мПечатнаяФормаПоУмолчанию, списСогласования;

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		Ответственный = глТекущийПользователь;
		Подразделение = глТекущийПользователь.ОсновноеПодразделение;
		ВидОперации = Перечисления.ВидыОперацийУстановкаБонуса.Установка;
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + " Установка";
		ЭтотОбъект.УстановитьНовыйНомер("БН");
		ТипБонуса  = перечисления.ТипыБонусов.Предоплата;
		Предоплата = Истина; //ОБЯЗАТЕЛЬНО!
		//Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;
	
	ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + ?(видОперации=Перечисления.ВидыОперацийУстановкаБонуса.Удаление," Удаление", " Установка");
	
	Если (НЕ Состояние.Пустая() ) // при любом Статусе - менять узже нельзя руками!
		и Не РольДоступна("ПравоЗавершенияРаботыПользователей")  
		Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанель2.Кнопки.ЗаполнитьПоНоменклатурнойГруппе.Доступность = ЛОЖЬ;//07.02.2018
	КонецЕсли;
	
	Если РольДоступна("ПравоЗавершенияРаботыПользователей") Тогда
		ЭлементыФормы.Состояние.ТолькоПросмотр = ЛОЖЬ;
		ЭлементыФормы.ТабличноеПоле1.ТолькоПросмотр = ЛОЖЬ;
	КонецЕсли;
	
	УстановитьВидимость();
	
	//-----------Печатные формы-----------------------
	УстановитьКнопкуПечать();

	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	Если не(РольДоступна("ПолныеПрава")) Тогда
		Если Элемент.Значение.ОсновнойМенеджерКонтрагента <> глТекущийПользователь Тогда
			Сообщить("Выбрать можно только своего контрагента!!!");
			Элемент.Значение = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура НаСогласованиеНажатие(Элемент)
	
	Если НЕ ЭтотОбъект.Проведен тогда
		Если Вопрос("Перед отправкой на согласование - документ надо провести.
					|Провести документ и отправить на согласование?",РежимДиалогаВопрос.ДаНет,0)=КодВозвратаДиалога.Да тогда
			попытка			
			ЭтотОбъект.Записать( РежимЗаписиДокумента.Проведение );
			исключение
			 	Возврат;
			КонецПопытки;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;

//	ТОЛЬКО IT-отдел может повторно отправить...
	ПовторнаяОтправка =Бонусы[0].Статус <> перечисления.СтатусыСтрокЗаказа.ПустаяСсылка()
							и  Состояние = перечисления.СостоянияОбъектов.ПустаяСсылка() ;  
							
	//отк никак не отправляется!
	
	Если Бонус = 0 Тогда         //Бонус
		
		Если Бонусы.Количество() = 0 Тогда
			Предупреждение("Не заполнены Бонусы!", 10);
			возврат;
		КонецЕсли;
		
			Дата = ТекущаяДата();	
			ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение);
			таблЗадачи = Новый ТаблицаЗначений; 
			таблЗадачи.Колонки.Добавить("НомерСтрокиОснования");
			таблЗадачи.Колонки.Добавить("Номенклатура");
			таблЗадачи.Колонки.Добавить("Скидка");
			таблЗадачи.Колонки.Добавить("Количество");
			таблЗадачи.Колонки.Добавить("СкидкаМин");
			таблЗадачи.Колонки.Добавить("Цена");
			таблЗадачи.Колонки.Добавить("ЦенаМин");
			таблЗадачи.Колонки.Добавить("ЦенаПоТипуЦен");
			
			таблЗадачи.Колонки.Добавить("Исполнитель");
			таблЗадачи.Колонки.Добавить("Содержание");
			
			текст = ""; 
			
			Текст0 = ЭтотОбъект.Комментарий+ " 
			    |Согласуйте "
				+?(ВидОперации = Перечисления.ВидыОперацийУстановкаБонуса.Установка,"УСТАНОВКУ","УДАЛЕНИЕ")+
					" Бонусов ("+ВРЕГ(строка(ТипБонуса))+") только ПО ДОГОВОРАМ"+?(нал,"(*)","(б/н)")+" : ";
					
			ТекстСтрока = "";  номГр = "";
			для каждого стр1 из Бонусы Цикл
				//менеджерТовГр = ПолучитьМенТовГруппы(Стр1); //яштПрочее
				Если номГр <> строка(стр1.НоменклатурнаяГруппа) тогда
					ТекстСтрока = ТекстСтрока +?(номГр="","", "
					|")+строка(стр1.НоменклатурнаяГруппа)+": "+строка(стр1.Производитель)+", ";
					НомГр = строка(стр1.НоменклатурнаяГруппа);
				иначе
					ТекстСтрока = ТекстСтрока+ строка(стр1.Производитель)+", ";
				КонецЕсли;	
			КонецЦикла;
			
		//------------------------%%% по месяцам одинаковые----------------------------
		текстМес = "";
            
			//--------------------------Создаём таблицу номенклатуры--------------------------------
			Если Бонус = 0 Тогда
				
				табл1= СтавкиБонуса.Выгрузить();
				табл1.Свернуть("Производитель, Месяц, Ставка");  
		       	 год = Год(ДатаПо)-Год(ДатаС);
			  КолМес = Месяц(ДатаПо) - Месяц(ДатаС) + 1 
				                + ?(год>0, 12*год, 0); // в разных годах

				ставка = ""; мес1=""; мес2="";				
	   		    //------------Текст для 1-ой закладки----------------------------
				Если табл1.Количество()<=КолМес тогда //нет разных ставок по Производителям
					//ЕдинаяСтавка! 18.01.18
					ставкаМин=100; ставкаМакс=0;
					для каждого стр11 из табл1 Цикл 
					ставкаМин= ?(стр11.Ставка<ставкаМин, стр11.Ставка, ставкаМин);
					ставкаМакс= ?(стр11.Ставка>ставкаМакс, стр11.Ставка, ставкаМакс);
					КонецЦикла;
					
					Если ставкаМин=ставкаМакс тогда
						табл1.Сортировать("месяц");
						мес1 = Формат(табл1[0].месяц,"ДФ='MMMM yyyy'");
						мес2 = Формат(табл1[табл1.Количество()-1].месяц,"ДФ='MMMM yyyy'");
 						текстМес = текстМес + мес1+ ?(мес2=мес1, "", " - "+мес2)+ " : " + Строка(стр11.Ставка) + " %
						|";		
					Иначе	
						для каждого стр11 из табл1 Цикл //18.01.18
						текстМес = текстМес + Строка(Формат(стр11.месяц,"ДФ='MMMM yyyy'")) + " : " + Строка(стр11.Ставка) + " %
						|";		
						КонецЦикла;
					КонецЕсли;
					
				Иначе // по Производителям ---------------------------------------------------------------
					произв = "";   произв0 = "";
					табл1= СтавкиБонуса.Выгрузить();
					табл1.Свернуть("Производитель, Месяц, Ставка"); //нужна свёртка  
				    табл1.Сортировать("Производитель, Месяц");
					ставка = ""; мес1=""; мес2="";
					Для каждого стр11 из табл1 Цикл
						
						Если произв<>строка(стр11.Производитель) тогда
							
							Если произв<>произв0 тогда  //+++ 21.01.2018 пишем предыдущие данные!
							  	текстМес = текстМес +"
							   	|--- "+произв+" --- 
							  	|";
							КонецЕсли;
					      	Если ставка<>"" тогда   
						    	текстМес = текстМес + мес1+?(мес2=мес1,""," - "+мес2)+" : "+ставка+"%
								|";
							КонецЕсли;

							произв0 = произв; // напечатали производителя...
							произв=строка(стр11.Производитель);
							ставка = строка(стр11.Ставка); 
						    мес1= формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'");
						    мес2= мес1; //обнуляется мес2
							
					    Иначе // тот же производитель... 
						  
							Если ставка <> строка(стр11.Ставка) тогда
								 Если произв<>произв0 тогда  //+++ 21.01.2018 при изменении производителя!
								  	текстМес = текстМес +"
								  	|--- "+произв+" --- 
								  	|";
								 произв0 = произв; // напечатали производителя...
							     КонецЕсли;
							 
								Если ставка<>"" тогда  //пишем предыдущие данные в текст 
								    	текстМес = текстМес + мес1+?(мес2=мес1,""," - "+мес2)+" : "+ставка+"%
										|";
								КонецЕсли;
  						  ставка = строка(стр11.Ставка); 
						  мес1 = формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'");
						  мес2 = мес1; //новая ставка!
						  Иначе //ставка та же и производитель - тот же - просто продолжаем
						    мес2= формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'");
						  КонецЕсли;

						  
					   КонецЕсли;
				     КонецЦикла;
					 
					 
					 Если произв<>произв0 тогда  //пишем ПОСЛЕДНИЕ данные!
					  	текстМес = текстМес +"
					  	|--- "+произв+" --- 
					  	|";
					 КонецЕсли;
				  	 Если ставка<>"" тогда   
				    	текстМес = текстМес + мес1+?(мес2=мес1,""," - "+мес2)+" : "+ставка+"%
						|";
					 КонецЕсли;
				 

				КонецЕсли;

				Текст1 = "";
				для каждого стр1 из Бонусы Цикл
					менеджерТовГр = ПолучитьМенТовГруппы(Стр1); //яштПрочее
					НовСтр = таблЗадачи.Добавить();
					НовСтр.НомерСтрокиОснования = стр1.НомерСтроки;
					
					текстМес1=""; //-------------по каждому могут быть свои ставки!--------------------------
					
					//ЕдинаяСтавка! 18.01.18
					ставкаМин=100; ставкаМакс=0;
					для каждого стр11 из СтавкиБонуса Цикл
						Если стр1.Производитель = стр11.Производитель  //только по 1 производителю!
							или стр11.Производитель.Пустая() тогда
						ставкаМин = ?(стр11.Ставка<ставкаМин, стр11.Ставка, ставкаМин);
						ставкаМакс= ?(стр11.Ставка>ставкаМакс, стр11.Ставка, ставкаМакс);
						КонецЕсли;
					КонецЦикла;
					
					Если ставкаМин=ставкаМакс тогда
						табл1.Сортировать("месяц");
						мес1 = Формат(табл1[0].месяц,"ДФ='MMMM yyyy'");
						мес2 = Формат(табл1[табл1.Количество()-1].месяц,"ДФ='MMMM yyyy'");
		 				текстМес1 = текстМес1 + мес1+ ?(мес2=мес1, "", " - "+мес2)+ ": " + Строка(ставкаМин) + "%";	
						НовСтр.Скидка = ставкаМин; //14.02.2018
					Иначе //-----------через , --------------------------------------------------------
						мес1=""; мес2=""; ставка = "";
						Для каждого стр11 из СтавкиБонуса Цикл
							Если стр1.Производитель=стр11.Производитель 
								или стр11.Производитель.Пустая() тогда   //в 1 строку
								
								Если мес1="" тогда
									мес1 = формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'");
									мес2 = мес1;
									ставка = строка(стр11.Ставка);
								иначеЕсли ставка <>	строка(стр11.Ставка) тогда
									текстМес1 = текстМес1 +мес1+?(мес2=мес1,""," - "+мес2)+": "+ставка+"%, ";
									
									ставка = строка(стр11.Ставка);
									мес1 = формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'");
									мес2 = мес1;
								Иначе  //продолжаем ту же ставку
									мес2 = формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'");
								КонецЕсли;		
					  	    КонецЕсли;
						КонецЦикла;
						текстМес1 = текстМес1 + мес1 +?(мес2=мес1,""," - "+мес2)+": "+ставка+"%";
						
						НовСтр.Скидка    = ставкаМакс;
						НовСтр.СкидкаМин = ставкаМин;
					КонецЕсли;
					
					Текст1 = строка(стр1.НоменклатурнаяГруппа)+" "+строка(стр1.Производитель)+" : "+текстМес1;
					НовСтр.Номенклатура = Текст1;
					НовСтр.Исполнитель = менеджерТовГр;
					НовСтр.Содержание = Текст1;
				КонецЦикла;
			КонецЕсли;
			
			таблицаИсполнителей = таблЗадачи.Скопировать();
			таблицаИсполнителей.Свернуть("Исполнитель");
			
			Для каждого стр из таблицаИсполнителей Цикл
				структураИсполнители = Новый Структура;
				структураИсполнители.Вставить("Исполнитель",стр.Исполнитель);
				таблицаТоваров =  таблЗадачи.Скопировать(структураИсполнители);
				
				менТовГруппы = Ответственный.НаправлениеПродаж.Руководитель;
				
				//==================================СОЗДАНИЕ ЗАДАЧ===========================
				Если ПовторнаяОтправка тогда //14.02.2018
					задача1 = Бонусы[0].ЗадачаНаСогласование.ПолучитьОбъект();
					задача1.Товары.Очистить();
					задача1.ПоследовательностьСогласования.Очистить();
					задача1.Выполнена = ЛОЖЬ;
				иначе	
					задача1 = задачи.ЗадачиПользователя.СоздатьЗадачу();
				КонецЕсли;	
				
				задача1.Наименование = ?(ВидОперации = Перечисления.ВидыОперацийУстановкаБонуса.Установка,
					                                 "Согласуйте Бонусы ("+ВРЕГ(строка(ТипБонуса))+") только ПО ДОГОВОРАМ"+?(нал,"(*)","(б/н)")+" для клиента: ",
					                    			  "Удалить Бонусы ("+ВРЕГ(строка(ТипБонуса))+") только ПО ДОГОВОРАМ"+?(нал,"(*)","(б/н)")+" для клиента: ")+строка(Контрагент); 
													  //+", равную "+строка(текСтр.СкидкаНаценкаКлиента)+?(текСтр.СкидкаНаценкаКлиента>максПроц," р.","% ")
													  
//==============================Проверка уже существующих утверждений======================================================
				ТекстДругихУстановок = ПолучитьТекстДругихУстановок();//+++ 26.12.2017
					
				задача1.Описание = ТекстДругихУстановок + "	
				|" + Текст0  + "
			    |" + ТекстСтрока + "
			    |с распределением процентов по месяцам: 
			    |"+текстМес;
	 //===============Полное описание===========================================
				задача1.Исполнитель = менТовГруппы;
				задача1.НаСогласование = ИСТИНА;//+++ 17.08.2015
				
		//+++ система согласования ----------------------------------------------------------------------------
		//+++( 17.12.2018 --- на помощника?! НЕ НАДО!-------------------------
			списСогласования.Очистить();
			рукНапрПрод = ответственный.НаправлениеПродаж.Руководитель;
			Если НЕ рукНапрПрод.Пустая() тогда
				Если менТовГруппы<>рукНапрПрод тогда
				списСогласования.Добавить( рукНапрПрод); 
				КонецЕсли;
			иначе рукНапрПрод = менТовГруппы;
			КонецЕсли;
			рукНГ = НоменклатурнаяГруппа.Ответственный;
			Если ЗначениеЗаполнено(рукНГ) 
				и рукНапрПрод<>рукНГ и менТовГруппы<>рукНГ тогда   
				списСогласования.Добавить( рукНГ ); // рук.ном.группы
			КонецЕсли;
			списСогласования.Добавить( Справочники.Подразделения.НайтиПоКоду("00008").Руководитель ); //гл.бух.
			
				//списСогласования.Добавить(стр.Исполнитель); //+++ 16.11.2018 //рук.напр.продаж
				Помощник = справочники.Пользователи.ПустаяСсылка();
				//	ЗакрепленныеОператорПомощник = ПолучитьЗакрпленныхЗаРегиономОператораПомощника(Контрагент.Регион, Контрагент);
				//	Помощник = ЗакрепленныеОператорПомощник.Помощник;
				//Если ЗначениеЗаполнено(Помощник) тогда 
				//		списСогласования.Добавить( Помощник );
				//	КонецЕсли;
				//добавляем "очередь" для Согласования  // рук.напр.продаж, - только Бух?! //Задача № 51018  п.3
				сообщить("1) Задача направлена на согласование: "+строка(задача1.Исполнитель) );
				для i=0 по списСогласования.Количество()-1 цикл
					Нов = задача1.ПоследовательностьСогласования.Добавить();
					нов.Сотрудник = списСогласования[i]; 
					сообщить(строка(i+2)+") на согласование: "+строка(нов.Сотрудник) );
				КонецЦикла;
		//+++)	
				
				для каждого стр111 из таблицаТоваров Цикл
					стр222 = задача1.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(стр222, стр111);
				//	задача1.Описание   = задача1.Описание + Символы.ПС + стр111.Содержание;
				КонецЦикла;
				
				задача1.Постановщик    = глТекущийПользователь;//------- тот, кто сейчас делает! ----------
				//------- Кому потом придёт обратная задача о выполнении - ВСЁ на помощника, Если он есть, иначе на менеджера
				задача1.Инициатор      = ?(ЗначениеЗаполнено(Помощник), Помощник, ЭтотОбъект.Ответственный);  //08.08.2018
				Сообщить("После всех согласований - задаче вернётся на "+ ?(ЗначениеЗаполнено(Помощник),"Помощника","Менеджера")+": "+строка(задача1.Инициатор));
				
				задача1.Объект   	   = ЭтотОбъект.Ссылка;
				
				задача1.Дата 		   = ТекущаяДата();
				задача1.СрокИсполнения = КонецДня( ТекущаяДата() ); // до конца текущих суток с момента установки
				
				задача1.Оповещение     = истина;
				задача1.СрокОповещения = ТекущаяДата(); //сразу (появится не позднее чем через 5 мин
				
				Если задача1.Исполнитель.Пустая() тогда //+++ 12.01.2018 Не пустая!
					задача1.Исполнитель = справочники.Пользователи.НайтиПоКоду("Бондаренко Е.Д. (снабжение)");
				КонецЕсли;	
					
				попытка 
				задача1.Записать();
					Сообщить(" + Сформирована ""Задача на согласование"" для сотрудника: "+строка(задача1.Исполнитель), СтатусСообщения.Информация );	
				исключение
					Сообщить(" - Не удалось сформировать электронную Задачу на согласование для сотрудника: "+строка(задача1.Исполнитель), СтатусСообщения.Внимание );	
				КонецПопытки;
				
				для каждого стр111 из таблицаТоваров Цикл
					ОтборСтрока = Новый Структура;
					ОтборСтрока.Вставить("НомерСтроки",стр111.НомерСтрокиОснования);
					
					СтрокаОсн = Бонусы[стр111.НомерСтрокиОснования-1];
					
					СтрокаОсн.ЗадачаНаСогласование = задача1.Ссылка;
				КонецЦикла;
			КонецЦикла;
			
			Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
			
			Для Каждого стр из Бонусы Цикл
				стр.статус = Перечисления.СтатусыСтрокЗаказа.НаСогласовании;
			КонецЦикла;
			
			ЭтотОбъект.Записать();
			ЭтаФорма.ТолькоПросмотр = Истина;
			
		ИначеЕсли Бонусы.Количество() > 0 Тогда	
			
			отборНов = НОвый Структура;
	        отборНов.Вставить("Статус",Перечисления.СтатусыСтрокЗаказа.ПустаяСсылка());
	
	        НовТАбл = Бонусы.Выгрузить(отборНов);
			НовТАбл.Свернуть("ЗадачаНаСогласование");
			
			для каждого СтрНаСогл из Бонусы Цикл
				Если СтрНаСогл.Статус = Перечисления.СтатусыСтрокЗаказа.ПустаяСсылка() Тогда
					СтрНаСогл.Статус = Перечисления.СтатусыСтрокЗаказа.НаСогласовании;
				КонецЕсли;
			КонецЦикла;
			
			Для каждого стрНов из НовТАбл Цикл
				Если ЗначениеЗаполнено(стрНов.ЗадачаНаСогласование) Тогда
					об = стрНов.ЗадачаНаСогласование.ПолучитьОбъект();
					для каждого р из об.Товары Цикл
						р.Статус = Перечисления.СтатусыСтрокЗаказа.ПустаяСсылка();
					КонецЦикла;
					об.Выполнена = Ложь;
					Об.Записать();
				КонецЕсли;
			КонецЦикла;
			Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
			
			ЭтотОбъект.Записать();
					
	КонецЕсли;

КонецПроцедуры

//+++ 26.12.2017 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
функция ПолучитьТекстДругихУстановок()
	рез = "";
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	БонусыКонтрагентовОстатки.Контрагент,
	                |	БонусыКонтрагентовОстатки.ТипБонуса,
					|	БонусыКонтрагентовОстатки.Нал,
	                |	БонусыКонтрагентовОстатки.ЗначениеОстаток КАК КолМес,
	                |	ЕСТЬNULL(УстановкаБонусовБонусы.Ссылка, """") КАК Установка
	                |ИЗ
	                |	РегистрНакопления.БонусыКонтрагентов.Остатки(
	                |			,
	                |			Контрагент = &Контрагент
	                |				И (ТипБонуса <> &ТипБонуса ИЛИ Нал <> &Нал)
					|				И НоменклатурнаяГруппа.Ответственный = &ОтветственныйТГ
					//все другие! и * и б/н
	                |				И ОТК = ЛОЖЬ) КАК БонусыКонтрагентовОстатки
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                |			док.Контрагент,
	                |			док.ТипБонуса,
					|			док.Нал, 
					|			док.НоменклатурнаяГруппа,
	                |			док.Ссылка
					|		ИЗ
	                |			Документ.УстановкаБонусов КАК док
	                |		ГДЕ
	                |			док.Проведен
	                |			И док.Бонус = 0
					|			И док.НоменклатурнаяГруппа.Ответственный = &ОтветственныйТГ
	                |			И (док.ТипБонуса <> &ТипБонуса ИЛИ док.Нал <> &Нал) ) КАК УстановкаБонусовБонусы
	                |		ПО БонусыКонтрагентовОстатки.Контрагент = УстановкаБонусовБонусы.Контрагент
					//отк - тип пустой, ном.гр. - пустая
	                |			И БонусыКонтрагентовОстатки.ТипБонуса = УстановкаБонусовБонусы.ТипБонуса
					|			И БонусыКонтрагентовОстатки.НоменклатурнаяГруппа = УстановкаБонусовБонусы.НоменклатурнаяГруппа
					|			И БонусыКонтрагентовОстатки.Нал = УстановкаБонусовБонусы.Нал
					|";
					
	 Запрос.УстановитьПараметр("Контрагент", Контрагент);
	 Запрос.УстановитьПараметр("ТипБонуса", ТипБонуса);
	 Запрос.УстановитьПараметр("Нал",Нал);//06.02.2018
	 Запрос.УстановитьПараметр("ОтветственныйТГ", НоменклатурнаяГруппа.Ответственный); //18.01.18
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
	 	Если ЗначениеЗаполнено(выборка.Установка) тогда
				 год = Год(выборка.Установка.ДатаПо)-Год(выборка.Установка.ДатаС);
			  КолМес = Месяц(выборка.Установка.ДатаПо) - Месяц(выборка.Установка.ДатаС) + 1 
				                + ?(год>0, 12*год, 0); // в разных годах
			   КолМес = ?(выборка.КолМес<КолМес, выборка.КолМес, КолМес);   //Если уже частично выплачен
				
		рез = рез + "Уже есть Установка бонуса "+строка(выборка.Установка.Номер)+" ("+ВРЕГ(строка(выборка.ТипБонуса))+") только по договорам"+?(выборка.Нал,"(*)","(б/н)")+" на "+строка(КолМес)+" мес.";
			НомГр = "";
			для каждого стр из выборка.Установка.Бонусы цикл
				Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден Тогда
					Если НомГр<>строка(стр.НоменклатурнаяГруппа) тогда
						НомГр = строка(стр.НоменклатурнаяГруппа);
						рез = рез +"
						|"+НомГр+": "+строка(стр.Производитель)+", ";
					иначе
						рез = рез + строка(стр.Производитель)+", ";
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;	
		      рез  = рез +"
			  |c уже утвержденными процентами бонуса по месяцам:
			  |";
			  произв = "";
			  табл1 = выборка.Установка.СтавкиБонуса.Выгрузить();
			  табл1.Свернуть("Месяц, Ставка");
			  
		Если табл1.Количество() <= КолМес тогда  //нет распределения по ставкам для разных Производителей
			//ЕдинаяСтавка! 18.01.18
			ставкаМин=100; ставкаМакс=0;
			для каждого стр11 из табл1 Цикл 
			ставкаМин= ?(стр11.Ставка<ставкаМин, стр11.Ставка, ставкаМин);
			ставкаМакс= ?(стр11.Ставка>ставкаМакс, стр11.Ставка, ставкаМакс);
			КонецЦикла;
			
			Если ставкаМин=ставкаМакс тогда
				табл1.Сортировать("месяц");
				мес1 = Формат(табл1[0].месяц,"ДФ='MMMM yyyy'");
				мес2 = Формат(табл1[табл1.Количество()-1].месяц,"ДФ='MMMM yyyy'");
 				рез = рез + мес1+ ?(мес2=мес1, "", " - "+мес2)+ " : " + Строка(стр11.Ставка) + " %
				|";		
			Иначе	
			  Для каждого стр11 из выборка.Установка.СтавкиБонуса Цикл
				  рез = рез + формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'")+" : "+строка(стр11.Ставка)+" %
				  |";
			  КонецЦикла;
		  	КонецЕсли; 
		  
		  Иначе // по Производителям ---------------------------------------------------------------------------------------------------------- 
				текстМес = "";  
	  		произв = "";   произв0 = "";
			ставка = ""; мес1="";  мес2="";
			Для каждого стр11 из выборка.Установка.СтавкиБонуса Цикл
				
				Если произв<>строка(стр11.Производитель) тогда
					
					Если произв<>"" тогда  //пишем предыдущие данные!
					  	текстМес = текстМес +"
					   	|--- "+произв+" --- 
					  	|";
					  	Если ставка<>"" тогда   
					    	текстМес = текстМес + мес1+?(мес2=мес1,""," - "+мес2)+" : "+ставка+"%
							|";
						КонецЕсли;
					КонецЕсли;
				  
					произв0 = произв; // напечатали производителя...
					произв=строка(стр11.Производитель);
					ставка = строка(стр11.Ставка); 
				    мес1= формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'");
				    мес2= мес1; //обнуляется мес2
					
			    Иначе // тот же производитель... 
				  
				  Если ставка <> строка(стр11.Ставка) тогда
						Если произв0 <> произв тогда
							текстМес = текстМес +"
						   	|--- "+произв+" --- 
						  	|";
							произв0 = произв;
						КонецЕсли;
						Если ставка<>"" тогда  //пишем предыдущие данные в текст 
						    	текстМес = текстМес + мес1+?(мес2=мес1,""," - "+мес2)+" : "+ставка+"%
								|";
						КонецЕсли;
	  				  ставка = строка(стр11.Ставка); 
					  мес1 = формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'");
					  мес2 = мес1; //новая ставка!
				  Иначе //ставка та же и производитель - тот же - просто продолжаем
				    мес2= формат( НачалоМесяца(стр11.Месяц), "ДФ='MMMМ yyyy'");
				  КонецЕсли;

				  
			   КонецЕсли;
		     КонецЦикла;
			 
			 
			 Если произв<>произв0 тогда  //пишем ПОСЛЕДНИЕ данные!
			  	текстМес = текстМес +"
			  	|--- "+произв+" --- 
			  	|";
			 КонецЕсли;
		  	 Если ставка<>"" тогда //Интервал дат  
		    	текстМес = текстМес + мес1+?(мес2=мес1,""," - "+мес2)+" : "+ставка+"%
				|";
			 КонецЕсли;
		  КонецЕсли;
		  
		КонецЕсли;
		рез = рез +"-------------------------------------------------------------------------------
		|";
	 КонецЦикла;
	
	возврат рез;
КонецФункции	


Процедура ОбновлениеОтображения()
	Если Состояние = Перечисления.СостоянияОбъектов.Согласован 
		или Состояние = Перечисления.СостоянияОбъектов.Утвержден Тогда
		ЭлементыФормы.СтавкиБонуса.ТолькоПросмотр = Истина;
		ЭлементыФормы.ТабличноеПоле1.ТолькоПросмотр = Истина;
		ЭлементыФормы.Дата.Доступность = Ложь;
		ЭлементыФормы.Контрагент.Доступность = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.НаСогласование.Доступность = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

функция получитьIDправила(стр1, флВсеПоля=Истина)
	возврат строка(стр1.ВидТовара) // 0 перечисление
		//+ ?(ЗначениеЗаполнено(стр1.ТипЦен), "."+строка(стр1.ТипЦен.Код),".0")
		+ ?(ЗначениеЗаполнено(стр1.Производитель), "."+строка(стр1.Производитель.Код),".0")
		+?(не флВсеПоля,"", 
		 ?(ЗначениеЗаполнено(стр1.НоменклатурнаяГруппа), "."+строка(стр1.НоменклатурнаяГруппа.Код),".0")
		+ ?(ЗначениеЗаполнено(стр1.ВходитВПапку), "."+строка(стр1.ВходитВПапку.Код),".0")
		+ ?(ЗначениеЗаполнено(стр1.Номенклатура), "."+строка(стр1.Номенклатура.Код),".0")
		//строки
		+ ?(ЗначениеЗаполнено(стр1.Диаметр), "."+строка(стр1.Диаметр),".0")
		+ ?(ЗначениеЗаполнено(стр1.ПодСтрока), "."+строка(стр1.ПодСтрока),".0")
		+";" );
КонецФункции	

Процедура ТабличнаяЧастьСтавкиБонусаПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
	Предупреждение("Нажмите Заполнить для добавления строк...",10);
КонецПроцедуры

Процедура ТабличноеПоле1КоэфПриИзменении(Элемент)
	Если Элемент.Значение < 2 или Элемент.Значение > 5 Тогда
		Сообщить("Коэффициент должен быть от 2 до 5%!!!");
		Элемент.Значение = 2;
	КонецЕсли;
КонецПроцедуры

Процедура БонусПриИзменении(Элемент)
	
	Если Элемент.Значение = 1 тогда
		ЭтотОбъект.УстановитьНовыйНомер("ОТ");
		
		ДатаС   = Дата;
		ДатаПо  = '00010101';
		
		ТипБонуса = перечисления.ТипыБонусов.ПустаяСсылка();
		СтавкиБонуса.Очистить(); 								//нет распределения по месяцам для ОТК!
		НоменклатурнаяГруппа = справочники.НоменклатурныеГруппы.ПустаяСсылка();
		
	ИначеЕсли Элемент.Значение = 0 Тогда
		ЭтотОбъект.УстановитьНовыйНомер("БН");
		ТипБонуса = перечисления.ТипыБонусов.Предоплата;
		
		ДатаС   = НачалоМесяца(Дата);
		ДатаПо  = КонецМесяца(Дата); //на 1 месяц!
		
	КонецЕсли;
		
	//Бонусы.Очистить();
	
	УстановитьВидимость();
	
	УстановитьКнопкуПечать();
	
КонецПроцедуры

процедура УстановитьВидимость()
	
	ЭтаФорма.Заголовок = "Установка бонусов "+ ?(Бонус=1,"ОТК", ?(нал," только по договорам(*)","по договорам(б/н)") );//06.02.2018
	
	Если Состояние = Перечисления.СостоянияОбъектов.Подготовлен и Бонусы.Количество()>0 тогда //видеть у кого на согласовании сейчас
		 ЭтаФорма.Заголовок = ЭтаФорма.Заголовок
		 		+?(НЕ Бонусы[0].ЗадачаНаСогласование.Пустая(),
		 		" - НА СОГЛАСОВАНИИ: "+строка(Бонусы[0].ЗадачаНаСогласование.Исполнитель), "");
	КонецЕсли;	
	
	ЭлементыФормы.ТабличноеПоле1.Колонки.Коэф.Видимость  = (Бонус=1);
	
	//ЭлементыФормы.ТабличноеПоле1.Колонки.Бонус.Видимость = (Бонус=1);
	ЭлементыФормы.ТабличноеПоле1.Колонки.Бонус.ТекстШапки = ?(Бонус=1,"ОТК,%", "Бонус,%");//+++ будет видно средний бонус!
		
	ЭлементыФормы.ДатаС.Доступность = (Бонус=0);
	ЭлементыФормы.ДатаПо.Доступность  = (Бонус=0);
	ЭлементыФормы.КоманднаяПанель1.Кнопки.Заполнить.доступность = (Бонус=0);
	
	//Бонусы из Галок в Тип
	Если Бонус=0 и ТипБонуса.Пустая() тогда
		ТипБонуса = ?(Предоплата, перечисления.ТипыБонусов.Предоплата,
							?(Лояльность, перечисления.ТипыБонусов.Лояльность,
								?(Рейтинг, перечисления.ТипыБонусов.Рейтинг, 
								перечисления.ТипыБонусов.ПустаяСсылка()
					)		)	 );
	//	ЗаписатьВФорме();
	КонецЕсли;						
		
	ЭлементыФормы.НадписьТипБонуса.Видимость = (Бонус=0);
	ЭлементыФормы.ТипБонуса.Видимость 		 = (Бонус=0);
   	ЭлементыФормы.Нал.Видимость = (Бонус=0);  //06.02.2018

	ЭлементыФормы.НадписьНоменклатурнаяГруппа.Видимость = (Бонус=0);
	ЭлементыФормы.НоменклатурнаяГруппа.Видимость 		= (Бонус=0);
	
	ЭлементыФормы.НадписьКоличествоПлан.Видимость = (Бонус=0) и Лояльность;
	ЭлементыФормы.КоличествоПлан.Видимость = (Бонус=0) и Лояльность;
	
	ЭлементыФормы.ДействияФормы.Кнопки.НаСогласование.Доступность = (Бонус=0)
						И (Состояние = перечисления.СостоянияОбъектов.ПустаяСсылка() );
						
	ЭлементыФормы.Ответственный.Доступность = РольДоступна("ПравоЗавершенияРаботыПользователей");

КонецПроцедуры

//-----------Печатные формы-----------------------
процедура УстановитьКнопкуПечать()
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати.Кнопки.Очистить(); // каждый раз заново!
	
	СписокМакетов = ПолучитьСписокПечатныхФорм();
	УстановитьПодменюВыбораПечатнойФормы(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати,
	                                       СписокМакетов,
	                                       Новый Действие("КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы"));
	УстановитьКнопкуПечати(ЭтотОбъект.Метаданные().Имя, ЭтаФорма, СписокМакетов, мПечатнаяФормаПоУмолчанию);
КонецПроцедуры

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСписокПечатныхФорм() ЭКСПОРТ 

	СписокМакетов = Новый СписокЗначений;
	
	//для ОТХ - нет печ.форм!?
	
	Если Бонус=0 тогда //Бонус - нет печ.форм!
		
		ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
		
		i= 1; 
		
		пока i<СписокМакетов.Количество() цикл //10.12.2017 - оставляем только 1 печ.форму!
			Если Предоплата и СписокМакетов[i].Представление="Соглашение Предоплата" тогда
				i=i+1;
			ИначеЕсли Лояльность и СписокМакетов[i].Представление="Соглашение Лояльность" тогда
				i=i+1;
			ИначеЕсли Рейтинг и СписокМакетов[i].Представление="Соглашение Рейтинг" тогда
				i=i+1;
			Иначе
				СписокМакетов.Удалить(i);
				Если i>=СписокМакетов.Количество() тогда 
					Прервать;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
			
	КонецЕсли;

	Возврат СписокМакетов;

КонецФункции // ПолучитьСписокПечатныхФорм()

	
Процедура ТабличноеПоле1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Статус = перечисления.СтатусыСтрокЗаказа.Отменен Тогда
	  ОформлениеСтроки.ЦветФона = WebЦвета.СветлоРозовый;
	ИначеЕсли ДанныеСтроки.Статус = перечисления.СтатусыСтрокЗаказа.Согласован Тогда
	  ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый;
	ИначеЕсли ДанныеСтроки.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден Тогда
	  ОформлениеСтроки.Шрифт = новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина); // Жирный
	КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПоле1НоменклатурнаяГруппаНачалоВыбора(Элемент, СтандартнаяОбработка)
	//Если ЗначениенеЗаполнено(ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.производитель) Тогда
	//	СтандартнаяОбработка = Ложь;
	//	Сообщить("Сначала выберете производителя!!!");
	//КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыУстановка(Кнопка)
	Бонусы.Очистить();
	//ТабличнаяЧастьПравила.Очистить();
	ВидОперации = Перечисления.ВидыОперацийУстановкаБонуса.Установка;
	ЭтаФорма.Заголовок = СтрЗаменить(ЭтаФорма.Заголовок,"Удаление","Установка");
	
	ЭлементыФормы.ТабличноеПоле1.Колонки.Статус.Доступность = Истина;
	//ЭлементыФормы.ТабличноеПоле1.Колонки.ВидТовара.Доступность = Истина;
	ЭлементыФормы.ТабличноеПоле1.Колонки.НоменклатурнаяГруппа.Доступность = Истина;
	ЭлементыФормы.ТабличноеПоле1.Колонки.Производитель.Доступность = Истина;
	ЭлементыФормы.ТабличноеПоле1.Колонки.Бонус.Доступность = Истина;
	ЭлементыФормы.ТабличноеПоле1.Колонки.Коэф.Доступность = Истина;
	
	ЭлементыФормы.КоманднаяПанель2.Кнопки.ЗаполнитьДляУдаления.Доступность = ЛОЖЬ;
	
КонецПроцедуры

Процедура ДействияФормыУдаление(Кнопка)
	Бонусы.Очистить();
	//ТабличнаяЧастьПравила.Очистить();
	ВидОперации = Перечисления.ВидыОперацийУстановкаБонуса.Удаление;
	ЭтаФорма.Заголовок = СтрЗаменить(ЭтаФорма.Заголовок,"Установка","Удаление");
	
	ЭлементыФормы.ТабличноеПоле1.Колонки.Статус.Доступность = Ложь;
	//ЭлементыФормы.ТабличноеПоле1.Колонки.ВидТовара.Доступность = Истина;
	ЭлементыФормы.ТабличноеПоле1.Колонки.НоменклатурнаяГруппа.Доступность = Ложь;
	ЭлементыФормы.ТабличноеПоле1.Колонки.Производитель.Доступность = Ложь;
	ЭлементыФормы.ТабличноеПоле1.Колонки.Бонус.Доступность = Ложь;
	ЭлементыФормы.ТабличноеПоле1.Колонки.Коэф.Доступность = Ложь;
	
	ЭлементыФормы.КоманднаяПанель2.Кнопки.ЗаполнитьДляУдаления.Доступность = Истина;
КонецПроцедуры

Процедура КоманднаяПанель2ЗаполнитьДляУдаления(Кнопка)
	
	Если ВидОперации = Перечисления.ВидыОперацийУстановкаБонуса.Удаление Тогда
	Бонусы.Очистить();
		Запрос = Новый запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СтавкиБонусовКонтрагентовСрезПоследних.ВидТовара,
		               |	СтавкиБонусовКонтрагентовСрезПоследних.Производитель,
		               |	СтавкиБонусовКонтрагентовСрезПоследних.НоменклатурнаяГруппа,
		               |	СтавкиБонусовКонтрагентовСрезПоследних.Значение КАК Бонус,
		               |	СтавкиБонусовКонтрагентовСрезПоследних.Коэффициент
		               |ИЗ
		               |	РегистрСведений.СтавкиБонусовКонтрагентов.СрезПоследних КАК СтавкиБонусовКонтрагентовСрезПоследних
		               |ГДЕ
		               |	СтавкиБонусовКонтрагентовСрезПоследних.Контрагент = &Контрагент
		               |	И СтавкиБонусовКонтрагентовСрезПоследних.Вид = &Вид
					   |//Тип	И СтавкиБонусовКонтрагентовСрезПоследних.ТипБонуса = &ТипБонуса
		               |	И СтавкиБонусовКонтрагентовСрезПоследних.Значение > 0";
		Запрос.УстановитьПараметр("Контрагент",Контрагент);
		Запрос.УстановитьПараметр("Вид",?(Бонус=0, Перечисления.ВидБонуса.Бонус, Перечисления.ВидБонуса.ОТК));
		Если Бонус=0 тогда
			Запрос.Текст = стрЗаменить(Запрос.Текст, "//Тип","");
			Запрос.УстановитьПараметр("ТипБонуса",ТипБонуса);
		КонецЕсли;
	
		Рез = Запрос.Выполнить().Выгрузить();
		Для Каждого стр из Рез Цикл
			НовСтр = Бонусы.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,стр);
	    КонецЦикла;
	Иначе
		Сообщить("Доступно только при виде операции - УДАЛЕНИЕ!!!");
	КонецЕсли;
КонецПроцедуры


Процедура ТабличноеПоле1ПередНачаломДобавления(Элемент, Отказ, Копирование)
	Если ВидОперации = Перечисления.ВидыОперацийУстановкаБонуса.Удаление Тогда
		Отказ = истина;
	КонецЕсли;
	Если ВидОперации = Перечисления.ВидыОперацийУстановкаБонуса.Установка и Бонус = 0 и СтавкиБонуса.Количество()>0 тогда
		Если не СтавкиБонуса[0].Производитель.Пустая() тогда
			Предупреждение("Требуется перезаполнить таблицу по месяцам!", 10);	
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель2ЗаполнитьПоНоменклатурнойГруппе(Кнопка)
	
	Если НоменклатурнаяГруппа.ЭтоГруппа тогда //17.12.2018
		Предупреждение("НЕЛЬЗЯ выбирать Группу! Выберите одну Номенклатурную группу!", 30);
		НоменклатурнаяГруппа = справочники.НоменклатурныеГруппы.ПустаяСсылка();
		Возврат;
	КонецЕсли;	
	
	//07.02.2018
	Если ТипБонуса = перечисления.ТипыБонусов.Рейтинг 
		и НоменклатурнаяГруппа.видТовара <> перечисления.ВидыТоваров.Диски тогда
    	Предупреждение("Для Бонуса Рейтинг - необходимо выбирать ТОЛЬКО Ном.группу по типу товара 'Диски'!",30);
		НоменклатурнаяГруппа = справочники.НоменклатурныеГруппы.ПустаяСсылка();
	КонецЕсли;	
	
	Если НоменклатурнаяГруппа.Пустая() тогда
		НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора();
		//07.02.2018 - ограничение по дискам - заставляем выбирать только диски
		Если ТипБонуса = перечисления.ТипыБонусов.Рейтинг тогда
			НоменклатурнаяГруппа.СправочникСписок.Отбор.ВидТовара.ВидСравнения = ВидСравнения.Равно;
			НоменклатурнаяГруппа.СправочникСписок.Отбор.ВидТовара.Значение = перечисления.ВидыТоваров.Диски;
			НоменклатурнаяГруппа.СправочникСписок.Отбор.ВидТовара.использование = Истина;
			НоменклатурнаяГруппа.СправочникСписок.ИерархическийПросмотр = Ложь;
		КонецЕсли;
		НоменклатурнаяГруппа.ОткрытьМодально();
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Гр",НоменклатурнаяГруппа);
	
	Запрос.УстановитьПараметр("Дата0", ДобавитьМесяц(ТекущаяДата(), -12) );
	Запрос.УстановитьПараметр("Дата1", ТекущаяДата() );
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	спрНоменклатура.Номенклатура.ВидТовара КАК ВидТовара,
				   |"+?(Бонус=1,"2 как Коэффициент,","
				   |	спрНоменклатура.Номенклатура.Производитель КАК Производитель,
				   |	&Гр КАК НоменклатурнаяГруппа,")+"
				   |	1 как Бонус
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Обороты(&Дата0, &Дата1, , Номенклатура.НоменклатурнаяГруппа = (&Гр) ) КАК спрНоменклатура
	                |
				   |УПОРЯДОЧИТЬ ПО
				  |"+?(Бонус=1,"","	Производитель,")+"
	               |	ВидТовара
	               |АВТОУПОРЯДОЧИВАНИЕ
				  |";
				   
	Если НоменклатурнаяГруппа.ЭтоГруппа тогда
		Запрос.Текст = стрЗаменить(Запрос.Текст , "НоменклатурнаяГруппа =","НоменклатурнаяГруппа В ИЕРАРХИИ"); 
	КонецЕсли;
				   
	рез = Запрос.Выполнить().Выгрузить();
	
	Бонусы.Очистить();
	Для каждого стр1 из Рез Цикл
		Нов = Бонусы.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, стр1)
	КонецЦикла;
	
	ЗаполнитьМесяца();
КонецПроцедуры

Процедура ТабличноеПоле1БонусПриИзменении(Элемент)
	Если ВидОперации = Перечисления.ВидыОперацийУстановкаБонуса.Установка и Бонус = 1 Тогда
		ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.Коэффициент = 2;
	КонецЕсли;
КонецПроцедуры


Процедура ТабличноеПоле1НоменклатурнаяГруппаПриИзменении(Элемент)
	//стр1 = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные;
	//Если ЗначениеЗаполнено(стр1.ВидТовара) Тогда
	//	стр1.ВидТовара = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	//КонецЕсли;
	//Если ЗначениеЗаполнено(стр1.Производитель) Тогда
	//	стр1.Производитель = Справочники.Производители.ПустаяСсылка();
	//КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПоле1ПроизводительПриИзменении(Элемент)
	//стр1 = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные;
	//Если ЗначениеЗаполнено(стр1.ВидТовара) Тогда
	//	стр1.ВидТовара = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	//КонецЕсли;
	//Если ЗначениеЗаполнено(стр1.НоменклатурнаяГруппа) Тогда
	//	стр1.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	//КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПоле1ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
//	 ЗаполнитьМесяца()
КонецПроцедуры

процедура ЗаполнитьМесяца()
	

	Если Бонус = 1 тогда
		СтавкиБонуса.Очистить();
		возврат;
	КонецЕсли;
	
	Попытка
		КоличествоМесяцев = Месяц(ДатаПо) - Месяц(ДатаС) + 1
				+ ?( Год(ДатаПо)>Год(ДатаС), 12*( Год(ДатаПо)-Год(ДатаС) ), 0);
	исключение
		КоличествоМесяцев = 0;
	КонецПопытки;
	
	Если Бонусы.Количество()>0 
		тогда Бонус1 = Бонусы[0].Бонус; //1-ый бонус
		иначе Бонус1 = 1;
	КонецЕсли;
	
	Если Вопрос("Заполнить по каждому Производителю в отдельности?",  РежимДиалогаВопрос.ДаНет, 
		30, КодВозвратаДиалога.Нет,"Заполнение таблицы по месяцам", КодВозвратаДиалога.Нет )=КодВозвратаДиалога.Да тогда
		
		СтавкиБонуса.Очистить();
		 для каждого стр1 из Бонусы цикл
			Датаии = ДатаС;
			Бонус1 = стр1.Бонус;  //10.01.2017 у каждого - свой!
			
			для ии = 1 по КоличествоМесяцев Цикл
				новСтр = СтавкиБонуса.Добавить();
				новСтр.Производитель = стр1.Производитель; // +++ 27.12.2017
				новСтр.Месяц  = Датаии;
				новСтр.Ставка = Бонус1;
				Датаии = НачалоМесяца(ДобавитьМесяц(Датаии,1));
			КонецЦикла;
		КонецЦикла;	
		
	Иначе //---------------ОДИНАКОВЫЕ бонусы по ВСЕМ Производителям------------
			СтавкиБонуса.Очистить();
			
			Датаии = ДатаС;
			для ии = 1 по КоличествоМесяцев Цикл
				новСтр = СтавкиБонуса.Добавить();
				новСтр.Производитель = справочники.Производители.ПустаяСсылка(); // +++ 27.12.2017
				новСтр.Месяц  = Датаии;
				новСтр.Ставка = Бонус1;
				Датаии = НачалоМесяца(ДобавитьМесяц(Датаии,1));
			КонецЦикла;
			
			для каждого стр1 из Бонусы цикл //единый бонус по всем производителям
				стр1.Бонус = Бонус1;
			КонецЦикла;	
	КонецЕсли;

	
КонецПроцедуры

Процедура ТабличноеПоле1ПередУдалением(Элемент, Отказ)
	
	Если Бонус = 1 тогда //для ОТК можно спокойно удалять
		возврат;
	КонецЕсли;
	
	Если Отказ тогда 
		Возврат;
	КонецЕсли;
	
	//для Бонусов - удаляем ставки по этому Производителю
	Стр1 = ЭлементыФормы.ТабличноеПоле1.текущиеДанные;	
	Если НЕ Стр1.Производитель.Пустая() тогда
		i=0;
		пока i<СтавкиБонуса.Количество() цикл
			Если СтавкиБонуса[i].Производитель = Стр1.Производитель тогда
			СтавкиБонуса.Удалить(i);
			Иначе i=i+1;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ДействиеПечать.Текст = Кнопка.Текст;
		СтруктураМакета = Новый Структура("Макет, ПредставлениеМакета");
		СписокМакетов = ПолучитьСписокПечатныхФорм();
		СтрокаМакетаВСписке = СписокМакетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаМакетаВСписке <> Неопределено Тогда
			Печать(СтрокаМакетаВСписке.Значение);
			СтруктураМакета.Макет = СтрокаМакетаВСписке.Значение;
			СтруктураМакета.ПредставлениеМакета = СтрокаМакетаВСписке.Представление;			
			
		Иначе
			СсылкаВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрЗаменить(Кнопка.Имя, "_", "-")));
			Печать(СсылкаВнешнейФормы,,,ЭтаФорма);
			СтруктураМакета.Макет = СсылкаВнешнейФормы;
			СтруктураМакета.ПредставлениеМакета = Кнопка.Текст;
		КонецЕсли;		
		
		мПечатнаяФормаПоУмолчанию = СтруктураМакета.Макет;
		СохранитьТекущуюКнопкуПечати(ЭтотОбъект.Метаданные().Имя, СтруктураМакета);
	КонецЕсли;

КонецПроцедуры // КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы()

Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	НапечататьДокументПоУмолчанию(ЭтотОбъект, глТекущийПользователь, мПечатнаяФормаПоУмолчанию, ЭтаФорма);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()


Процедура ТипБонусаПриИзменении(Элемент)

		Предоплата = (ТипБонуса = перечисления.ТипыБонусов.Предоплата);
		Лояльность = (ТипБонуса = перечисления.ТипыБонусов.Лояльность);
		Рейтинг    = (ТипБонуса = перечисления.ТипыБонусов.Рейтинг);
		
		ЭлементыФормы.НадписьКоличествоПлан.Видимость = Лояльность;
		ЭлементыФормы.КоличествоПлан.Видимость 		  = Лояльность;
		КоличествоПлан = ?(Лояльность, КоличествоПлан, 0);
		
	УстановитьКнопкуПечать();		
КонецПроцедуры


Процедура ПолеВвода1Регулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	Элемент.Значение = ДобавитьМесяц( Элемент.Значение , Направление);
	Если ДатаС>ДатаПо тогда
		ДатаПо = КонецМесяца(ДатаС);
	КонецЕсли;	

КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаС, ?(ДатаПо='0001-01-01', ДатаПо, КонецДня(ДатаПо)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаС = НастройкаПериода.ПолучитьДатуНачала();
		ДатаПо = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры


Процедура СостояниеПриИзменении(Элемент)
	
	//при ручной установке Состояния - устанавливаем статусы в строках Бонусов
	для каждого стр1 из Бонусы цикл
		
		Если состояние = перечисления.СостоянияОбъектов.Отклонен тогда
			стр1.Статус = перечисления.СтатусыСтрокЗаказа.Отменен;
			
		ИначеЕсли состояние = перечисления.СостоянияОбъектов.Подготовлен тогда  //должна быть Задача!
			стр1.Статус = перечисления.СтатусыСтрокЗаказа.НаСогласовании;
			
		ИначеЕсли состояние = перечисления.СостоянияОбъектов.Согласован тогда
			
			// и так и сяк... может быть
			Если стр1.Статус = перечисления.СтатусыСтрокЗаказа.ПустаяСсылка() тогда
				стр1.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден;
			КонецЕсли;	
			
		ИначеЕсли состояние = перечисления.СостоянияОбъектов.Утвержден тогда
			стр1.Статус = перечисления.СтатусыСтрокЗаказа.Подтвержден;
			
		КонецЕсли;
		
	КонецЦикла;	
КонецПроцедуры

Процедура ДействияФормыСтавкиБонусов(Кнопка)
	форма = РегистрыСведений.СтавкиБонусовКонтрагентов.ПолучитьФормуСписка();
	форма.Отбор.Контрагент.Значение = Контрагент;
	форма.Отбор.Контрагент.Использование = Истина;
	форма.Отбор.Основание.Значение = ссылка;
	форма.Отбор.Основание.Использование = Истина;
	//чтоб не менял никто и ничё!
	форма.ЭлементыФормы.РегистрСведенийСписок.ТолькоПросмотр = Истина;
	форма.ЭлементыФормы.РегистрСведенийСписок.НастройкаОтбора.Контрагент.Доступность = ЛОЖЬ;
	форма.ЭлементыФормы.РегистрСведенийСписок.НастройкаОтбора.Основание.Доступность = РольДоступна("ПравоЗавершенияРаботыПользователей");
	//много места на экране то что нельзя изменить
	форма.ЭлементыФормы.РегистрСведенийСписок.Колонки.Контрагент.Видимость = ЛОЖЬ;
	форма.ЭлементыФормы.РегистрСведенийСписок.Колонки.Основание.Видимость = ЛОЖЬ;
	форма.Открыть();
КонецПроцедуры

Процедура КоманднаяПанель1Заполнить(Кнопка)
	ЗаполнитьМесяца();
	ТабличноеПоле1ПриАктивизацииСтроки(неопределено);
КонецПроцедуры

Процедура НоменклатурнаяГруппаПриИзменении(Элемент)
	
	Если Бонусы.Количество()>0 тогда
		Если Вопрос("При изменении Ном.группы - все бонусы будут очищены! Продолжить?", РежимДиалогаВопрос.ДаНет, 0) = КодВозвратаДиалога.Да тогда
		КоманднаяПанель2ЗаполнитьПоНоменклатурнойГруппе(неопределено);
		КонецЕсли;
	Иначе
		КоманднаяПанель2ЗаполнитьПоНоменклатурнойГруппе(неопределено);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПоле1ПриАктивизацииСтроки(Элемент)
	Если Бонус=0 тогда
		текСтр = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные;
		Если текСтр<>неопределено тогда
		//старое и новое...
		ЭлементыФормы.СтавкиБонуса.ОтборСтрок.Производитель.ВидСравнения  = ВидСравнения.ВСписке;
		спис = новый СписокЗначений;
		спис.Добавить( текСтр.Производитель);
		спис.Добавить( справочники.Производители.ПустаяСсылка() );
		ЭлементыФормы.СтавкиБонуса.ОтборСтрок.Производитель.Значение      = спис;
		ЭлементыФормы.СтавкиБонуса.ОтборСтрок.Производитель.Использование = Истина;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

Процедура СтавкиБонусаСтавкаПриИзменении(Элемент)
	текСтр = ЭлементыФормы.СтавкиБонуса.ТекущиеДанные;
	Если текСтр.Производитель.Пустая() тогда
		Бонус0 = СтавкиБонуса.Итог("Ставка") / СтавкиБонуса.Количество();
		для каждого стр1 из Бонусы цикл
			стр1.Бонус = Бонус0; 
		КонецЦикла;	
	Иначе //------------только 1 производитель меняется--------------	
		Производитель1 = текСтр.Производитель;
		Бонус1= 0; N = 0;
		для каждого стр1 из СтавкиБонуса цикл
			Если стр1.Производитель = Производитель1 тогда
			Бонус1 = Бонус1 + стр1.Ставка;
			N=N+1;
			КонецЕсли;
		КонецЦикла;
		
		Бонус0 = Бонус1/N;
		для каждого стр1 из Бонусы цикл
			Если стр1.Производитель = Производитель1 тогда
			стр1.Бонус = Бонус0; 
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

Процедура СтавкиБонусаСтавкаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	Элемент.Значение = Элемент.Значение + 0.5 * Направление;
	Если Элемент.Значение<0 тогда
		Элемент.Значение = 0;
	КонецЕсли; 	
	СтавкиБонусаСтавкаПриИзменении(Элемент)
КонецПроцедуры

Процедура ДатаСПриИзменении(Элемент)
	
	Если ДатаС < НачалоМесяца(Дата) тогда //14.11.2018
		Предупреждение("Нельзя устанавливать Бонусы раньше начала текущего месяца!", 30);
	КонецЕсли;	
	
	Если ДатаС>ДатаПо тогда
		ДатаПо = КонецМесяца(ДатаС);
	КонецЕсли;	
	
	Если Бонус = 0 и Бонусы.Количество()>0 тогда //+++ 10.01.2018 Бонусы - надо перезаполнять СРАЗУ! 
		КоманднаяПанель1Заполнить(неопределено);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	
	Если Бонус = 1 тогда // ОТК начинается с даты документа!
		ДатаС   = Дата;
		ДатаПо  = '00010101';
	иначе //+++ 14.11.2018 ---------------------------------------
		ДатаС   = НачалоДня(Дата);
		ДатаПо  = КонецМесяца(ДатаС);
		
		Если ДатаС < НачалоМесяца(ТекущаяДата()) тогда
			Предупреждение("ВНИМАНИЕ! Нельзя устанавливать Бонусы за прошлые периоды!", 30);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ДатаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Элемент.Значение = Элемент.Значение  + 86400*Направление; // +- 1 день
	ДатаПриИзменении(неопределено);
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Бонус=0 тогда //+++ 10.01.2018 только для Бонусов - обязательно только 1 ном.группа!
		
		Если Бонусы.Количество()>0 тогда
			табл = Бонусы.Выгрузить();
			табл.Свернуть("НоменклатурнаяГруппа");
			
			Если НоменклатурнаяГруппа.Пустая() тогда  //заполняем автоматически
				НоменклатурнаяГруппа = табл[0].НоменклатурнаяГруппа;
			КонецЕсли;
			
			Если табл.Количество()>1 тогда
				Предупреждение("В одном документе можно устанавливать Бонусы только по одной Ном.группе!",10);
				Отказ = истина;
			КонецЕсли;
		Иначе
			Предупреждение("Не заполнена таблица Бонусов!",10);
			Отказ = истина;
		КонецЕсли;
		
		Если Дата < ДобавитьМесяц( НачалоМесяца(ТекущаяДата()), -1)  //14.11.2018
		 или ДатаС < НачалоМесяца(Дата) тогда
		 
		 	Если РежимЗаписи=РежимЗаписиДокумента.Проведение  // только при проведении
			 и НЕ РольДоступна("ПолныеПрава") тогда           // для обычных менеджеров   
				 Предупреждение("Нельзя устанавливать Бонусы задним числом!", 30);
				 Сигнал();Сигнал();Сигнал();
				 Отказ = Истина; //для полный прав
			КонецЕсли;	 
			 
		КонецЕсли;	
			
	КонецЕсли;	
	
	Если Бонус=1 тогда //+++ 12.01.2018 для ОТК - обязательно только по виду товара!
		
		Если Бонусы.Количество()>0 тогда
			табл = Бонусы.Выгрузить();
			табл.Свернуть("ВидТовара");
			
			Если табл.Количество()<>Бонусы.Количество() тогда
				Сообщить("Проценты ОТК по документу "+строка(ссылка)+" будет устанавливаться только по Виду товара!", СтатусСообщения.Внимание);
			КонецЕсли;
		Иначе
			Предупреждение("Не заполнена таблица Бонусов!",10);
			Отказ = истина;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры


Процедура НоменклатурнаяГруппаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ложь;
	
		форма1 = Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора();
		//07.02.2018 - ограничение по дискам
		Если ТипБонуса = перечисления.ТипыБонусов.Рейтинг тогда
			
			форма1.СправочникСписок.Отбор.ВидТовара.ВидСравнения = ВидСравнения.Равно;
			форма1.СправочникСписок.Отбор.ВидТовара.Значение = перечисления.ВидыТоваров.Диски;
			форма1.СправочникСписок.Отбор.ВидТовара.использование = Истина;
			
			форма1.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Ложь;
			
		КонецЕсли;
		НоменклатурнаяГруппа = форма1.ОткрытьМодально();
		
		НоменклатурнаяГруппаПриИзменении(Элемент);
КонецПроцедуры

списСогласования = новый массив;
списСогласования.Добавить( Справочники.Подразделения.НайтиПоКоду("00008").Руководитель ); //гл.бух.
//+++ 18.07.2018 - Задача № 51018
//списСогласования.Добавить( Справочники.Подразделения.НайтиПоКоду("00012").Руководитель ); //юрист
			