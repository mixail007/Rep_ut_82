Перем мВалютаРегламентированногоУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Процедура проверяет корректность заполнения реквизитов шапки документа
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	СтрРекв = "Организация";
					
	// Теперь позовем общую процедуру проверки.
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, Новый Структура(СтрРекв), Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Процедура проверяет корректность заполнения реквизитов таб. части документа
//
Процедура ПроверитьЗаполнениеТабЧасти(СтруктураШапкиДокумента, Отказ, Заголовок);

	ОбязательныеРеквизиты = "Номенклатура";

	//проверка заполнения обязательных реквизитов
	ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ДанныеПоПартиям", Новый Структура(ОбязательныеРеквизиты), Отказ, Заголовок);
	
	//Проверка таблицы дополнительных сведений
	ОбязательныеРеквизиты = "ВидЦенности, СтавкаНДС";
	ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ДанныеПоСФ", Новый Структура(ОбязательныеРеквизиты), Отказ, Заголовок);

	ОбязательныеРеквизиты = "СчетФактура";
	ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ДанныеПоСФ", Новый Структура(ОбязательныеРеквизиты), Неопределено, Заголовок);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.Количество,0)) КАК Количество,
	|	МАКСИМУМ(ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.Количество) КАК КоличествоПоПартии,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.НомерСтроки,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.Партия
	|ИЗ
	|	Документ.ВводНачальныхОстатковНДСпоПартиям.ДанныеПоПартиям КАК ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводНачальныхОстатковНДСпоПартиям.ДанныеПоСФ КАК ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ
	|		ПО ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.КлючСтроки = ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.КлючСтроки
	|			И ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.Ссылка = ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.Ссылка
	|ГДЕ
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.НомерСтроки,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.Партия
	|
	|";
		
	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка Из Результат Цикл
		Если Строка.Количество <> Строка.КоличествоПоПартии Тогда
			СтрокаСообщенияОбОшибке = "В строке номер """+ СокрЛП(Строка.НомерСтроки) +
			                               """ табличной части ""Данные по партиям"": Количество по партии не соответствует количеству по счетам-фактурам";
			ОшибкаПриПроведении(СтрокаСообщенияОбОшибке, Отказ, Заголовок);
		КонецЕсли; 
		
		Если ЗначениеНеЗаполнено(Строка.Партия) Тогда
			СтрокаСообщенияОбОшибке = "В строке номер """+ СокрЛП(Строка.НомерСтроки) +
			                               """ табличной части ""Данные по партиям"": Не заполнена партия.";
			СообщитьОбОшибке(СтрокаСообщенияОбОшибке, , Заголовок, СтатусСообщения.Информация);
		КонецЕсли; 
			

	КонецЦикла;
	
КонецПроцедуры // ПроверитьЗаполнениеТабЧасти()

Функция ПодготовитьТаблицуДвиженийДокумента(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	ТаблицаДокумента = Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.Номенклатура,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.Партия,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.Склад,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.СчетФактура,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.ВидЦенности,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.НДСВключенВСтоимость,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.Количество,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.Стоимость,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.СтавкаНДС,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.НДС,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.ХарактеристикаНоменклатуры,
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.СерияНоменклатуры
	|ИЗ
	|	Документ.ВводНачальныхОстатковНДСпоПартиям.ДанныеПоСФ КАК ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводНачальныхОстатковНДСпоПартиям.ДанныеПоПартиям КАК ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям
	|		ПО ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.КлючСтроки = ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.КлючСтроки
	|ГДЕ
	|	ВводНачальныхОстатковНДСпоПартиямДанныеПоСФ.Ссылка = &Ссылка
	|	И ВводНачальныхОстатковНДСпоПартиямДанныеПоПартиям.Ссылка = &Ссылка";
	
	ТаблицаДокумента = Запрос.Выполнить().Выгрузить();
	
	
	Если Не СтруктураШапкиДокумента.ВестиПартионныйУчетПоСкладам Тогда
		ТаблицаДокумента.ЗаполнитьЗначения(Справочники.Склады.ПустаяСсылка(),"Склад");
	КонецЕсли;
	
	Для каждого СтрокаТаблицыДокумента Из ТаблицаДокумента Цикл
		Если ЗначениеНеЗаполнено(СтрокаТаблицыДокумента.Партия) Тогда
			СтрокаТаблицыДокумента.Партия = Неопределено;
		КонецЕсли;
		
	КонецЦикла; 
	
	Возврат ТаблицаДокумента;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ДОКУМЕНТА ПО РЕГИСТРАМ

// Процедура формирования движений по регистрам.
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаДокумента, Отказ,Заголовок)
	
	Если ТаблицаДокумента.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДвижений = Движения.НДСПартииТоваров.Выгрузить();
	ТаблицаДвижений.Очистить();
	ТаблицаДокумента.Колонки.Добавить("Организация");
	ТаблицаДокумента.ЗаполнитьЗначения(СтруктураШапкиДокумента.Организация, "Организация");
	ЗагрузитьВТаблицуЗначений(ТаблицаДокумента,ТаблицаДвижений);
	
	Если ТаблицаДвижений.Количество() > 0 Тогда
		Движения.НДСПартииТоваров.мПериод          = СтруктураШапкиДокумента.Дата;
		Движения.НДСПартииТоваров.мТаблицаДвижений = ТаблицаДвижений;

		Движения.НДСПартииТоваров.ВыполнитьПриход();
		Движения.НДСПартииТоваров.Записать();
	КонецЕсли;
	
КонецПроцедуры // ДвиженияПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ)

	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Заполним по шапке документа дерево параметров, нужных при проведении.
	ДеревоПолейЗапросаПоШапке = СформироватьДеревоПолейЗапросаПоШапке();
	ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "УчетнаяПолитика", 	"ВестиПартионныйУчетПоСкладам", "ВестиПартионныйУчетПоСкладам");

	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа
	СтруктураШапкиДокумента = СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета);
	
	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	ПроверитьЗаполнениеТабЧасти(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	ТаблицаДокумента = ПодготовитьТаблицуДвиженийДокумента(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	Если Не Отказ Тогда
				
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаДокумента, Отказ, Заголовок);
			
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
		
	Если НЕ Отказ Тогда
		
		обЗаписатьПротоколИзменений(ЭтотОбъект);
		
	КонецЕсли; 

КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
