//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
		
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") 
		И НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда  //+++ 09.07.2014
		СообщитьОбОшибке("У Вас недостаточно прав для открытия структуры подчиненности!");
		Возврат;
 	КонецЕсли;

	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.Список);
	
	Если РольДоступна("ДополнительныеПраваВЭД") Тогда
		
		Если ДокументСписок.Отбор.Найти("Подразделение") = Неопределено Тогда 
			ДокументСписок.Отбор.Добавить("Подразделение");
		КонецЕсли;
		ДокументСписок.Отбор["Подразделение"].Использование = Истина;
		
		списокПодразделенийПользователя = новый СписокЗначений;
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
		
		ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.ВСписке;
		ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
		
		ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		
	иначеЕсли РольДоступна("яштФинДиректор") Тогда	
		
	иначе
		Если ДокументСписок.Отбор["Подразделение"].Использование  = Ложь Тогда
			//22.02.17 Смирнов, для пользователей с обособленным подразделением фильтруем только по этому подразделению
			Если ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение.ОбособленноеПодразделение тогда
				ДокументСписок.Отбор["Подразделение"].Использование = Истина;
				ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
				ДокументСписок.Отбор["Подразделение"].Значение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
			Иначе
				
				ДокументСписок.Отбор["Подразделение"].Использование = Истина;
				
				списокПодразделенийПользователя = новый СписокЗначений;
				списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
				списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
				
				ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.НеВСписке;
				ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
				
				//ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//+++ февраль 2012
//Процедура - обработчик внешнего события.
//
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Перем СписокДок;

	Если Не(ВводДоступен()) Тогда
		Возврат;
	КонецЕсли;

	Если глТорговоеОборудование <> Неопределено Тогда
		Если Событие = "BarCodeValue" Тогда
			Если глТорговоеОборудование.ПолучитьВсеДокументыПоШтрихКоду(Данные, СписокДок) Тогда
				Если СписокДок.Количество() = 1 Тогда
					ОткрытьЗначение(СписокДок[0].Ссылка);
				ИначеЕсли СписокДок.Количество() > 1 Тогда
					СтрокаДок = СписокДок.ВыбратьСтроку("Выберите один из найденных документов.");
					Если СтрокаДок<>Неопределено Тогда
						ОткрытьЗначение(СтрокаДок.Ссылка);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			глТорговоеОборудование.СканерПосылкаДанных(1);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура СписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.Количество.ОтображатьТекст = Истина;
	ОформлениеСтроки.Ячейки.Количество.Текст = ДанныеСтроки.Ссылка.Товары.Итог("Количество");
	Если ДанныеСтроки.Ссылка.Товары.найти(1,"Цена")<>неопределено тогда //+++21.11.2013
		ОформлениеСтроки.ЦветФона = WebЦвета.СветлоРозовый;
	КонецЕсли;
	
	//+++( 10.07.2014    расцветка по статусу документа как в Заказах покупателей
	Если Константы.ИспользоватьОстаткиСтороннихПоставщиков.Получить() тогда
		
		//+++ 29.09.2014 - ДанныеСтроки.Статус>>ДанныеСтроки.ссылка.статус  - если статус не видет, то не работает...
		Если ДанныеСтроки.ссылка.статус = перечисления.СтатусыЗаказов.Получен
			или ДанныеСтроки.ссылка.статус = перечисления.СтатусыЗаказов.ПолученЧастично тогда
			
			Если (ДанныеСтроки.Проведен) тогда
			 	ОформлениеСтроки.ЦветТекста = WebЦвета.Синий;
			//иначе
			//	ОформлениеСтроки.ЦветТекста = WebЦвета.Красный; // Заказ не проведен, а есть движение по продажам
			КонецЕсли;	
			
			Если ДанныеСтроки.ссылка.статус = перечисления.СтатусыЗаказов.Получен тогда // полностью получен - значит закрыт!
				ОформлениеСтроки.ЦветФона = WebЦвета.LightGray;
			КонецЕсли;
		
		ИначеЕсли ДанныеСтроки.ссылка.статус = перечисления.СтатусыЗаказов.Отменен 
			и НЕ ДанныеСтроки.ПометкаУдаления тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.Сливовый; //требует удаления !  
			
	 	ИначеЕсли ДанныеСтроки.ссылка.статус = перечисления.СтатусыЗаказов.Подтвержден 
	   	или ДанныеСтроки.ссылка.статус = перечисления.СтатусыЗаказов.ЧастичноПодтвержен тогда
	   	
	    	ОформлениеСтроки.ЦветФона = WebЦвета.Роса; // бледно-зеленый
 			
		ИначеЕсли ЗначениеЗаполнено(ДанныеСтроки.ссылка.статус) тогда // ------------------ в обработке у поставщика...-------------
			ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый; 
		КонецЕсли;
		
	КонецЕсли;
	
	
	Если ДанныеСтроки.ПометкаУдаления тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.LightGray;
	КонецЕсли;
  	Если ДанныеСтроки.Ссылка.Проверен Тогда //исправлено ДанныеСтроки.Проверен тогда
		мЖирныйШрифт = Новый Шрифт(,, Истина);
		ОформлениеСтроки.Шрифт = мЖирныйШрифт;
 	КонецЕсли;
  //+++)

КонецПроцедуры


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") 
		И НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда
		СообщитьОбОшибке("Вы не имеете права открывать заказы поставщикам!", Отказ);
 	КонецЕсли;

КонецПроцедуры
