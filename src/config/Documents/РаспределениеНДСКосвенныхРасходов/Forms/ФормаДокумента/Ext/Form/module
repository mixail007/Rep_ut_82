////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнитьШапкуДокумента(ЭтотОбъект, глТекущийПользователь, , "Продажа");
		УстановитьНомерДокумента(ЭтотОбъект);

		НачалоПериода = НачалоМесяца(Дата); 
		КонецПериода  = КонецМесяца(Дата);

	КонецЕсли;

	// Вывести в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ЗначениеНеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация. Операция не записана.");
		Отказ = Истина;
		ТекущийЭлемент = ЭлементыФормы.Организация;
		Возврат;
	КонецЕсли; 

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	УстановитьНомерДокумента(ЭтотОбъект);

КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода ставки НДС
// в строке табличной части "Товары".
//
Процедура СтавкаНДСПриИзменении(Элемент)

	// Рассчитать реквизиты табличной части.
	ЭлементыФормы.СоставКосвенныхРасходов.ТекущиеДанные.НДСВсего = РассчитатьСуммуНДС(ЭлементыФормы.СоставКосвенныхРасходов.ТекущиеДанные.СуммаВсего, TRUE, FALSE, ПолучитьСтавкуНДС(ЭлементыФормы.СоставКосвенныхРасходов.ТекущиеДанные.СтавкаНДС));

КонецПроцедуры // ТоварыСтавкаНДСПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода СуммаБезНДС
// в строке табличной части "Товары".
//
Процедура СуммаБезНДСПриИзменении(Элемент)

	// Рассчитать реквизиты табличной части.
	ЭлементыФормы.СоставКосвенныхРасходов.ТекущиеДанные.НДСВсего = РассчитатьСуммуНДС(ЭлементыФормы.СоставКосвенныхРасходов.ТекущиеДанные.СуммаВсего, TRUE, FALSE, ПолучитьСтавкуНДС(ЭлементыФормы.СоставКосвенныхРасходов.ТекущиеДанные.СтавкаНДС));

КонецПроцедуры // ТоварыСтавкаНДСПриИзменении()

// Процедура вызывается по кнопке выбора периода в форме диалога документа.
// В процедуре реализуется открытие диалогового окна для того чтобы пользователь в
// удобной форме мог выбрать значения реквизитов дата начала и дата окончания периода.
//
Процедура ВыбПериодНажатие(Элемент)

	НастройкаПериода = Новый НастройкаПериода;

	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));

	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод   = Истина;
	НастройкаПериода.ВариантНастройки         = ВариантНастройкиПериода.Период;

	НастройкаПериода.Редактировать();

	НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонецПериода  = НастройкаПериода.ПолучитьДатуОкончания();

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается по кнопке "Заполнить" в форме диалога документа.
// В процедуре реализуется алгоритм автоматического заполнения строк табличной части документа.
//
Процедура КоманднаяПанельЗаполнить(Кнопка)
	
	Если ЗначениеНеЗаполнено(НачалоПериода) ИЛИ ЗначениеНеЗаполнено(КонецПериода) Тогда
		Предупреждение("Не установлен период заполнения документа!");
		Возврат;
	КонецЕсли; 
	
	Если СоставКосвенныхРасходов.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Табличное поле будет очищено. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	
	// Теперь запоняем табличную часть "СоставКосвенныхРасходов"
	СоставКосвенныхРасходов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	НДСКосвенныеРасходыОбороты.ВидЦенности КАК ВидЦенности,
					|	НДСКосвенныеРасходыОбороты.Поставщик КАК Поставщик,
					|	НДСКосвенныеРасходыОбороты.СчетФактура КАК СчетФактура,
					|	НДСКосвенныеРасходыОбороты.СтавкаНДС КАК СтавкаНДС,
					|	НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации,
					|	СУММА(НДСКосвенныеРасходыОбороты.СуммаБезНДСОборот) КАК ПолученоСумма,
					|	СУММА(НДСКосвенныеРасходыОбороты.НДСОборот) КАК ПолученоНДС
					|ИЗ
					|	РегистрНакопления.НДСКосвенныеРасходы.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Организация = &Организация И СтавкаНДСРеализации = &НеРаспределеноПоСтавкам) КАК НДСКосвенныеРасходыОбороты

					|ГДЕ
					|	НДСКосвенныеРасходыОбороты.Регистратор <> &Регистратор

					|СГРУППИРОВАТЬ ПО
					|	НДСКосвенныеРасходыОбороты.ВидЦенности,
					|	НДСКосвенныеРасходыОбороты.Поставщик,
					|	НДСКосвенныеРасходыОбороты.СчетФактура,
					|	НДСКосвенныеРасходыОбороты.СтавкаНДС,
					|	НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации

					|УПОРЯДОЧИТЬ ПО
					|	СчетФактура";
					
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Регистратор", 	Ссылка);
	Запрос.УстановитьПараметр("НеРаспределеноПоСтавкам", Перечисления.ВариантыРаспределенияНДСКосвенныхРасходов.НеРаспределено);
	
	РаспределеноПоСтавкам = Новый СписокЗначений;
	РаспределеноПоСтавкам.Добавить(Перечисления.ВариантыРаспределенияНДСКосвенныхРасходов.РеализацияБезНДС);
	РаспределеноПоСтавкам.Добавить(Перечисления.ВариантыРаспределенияНДСКосвенныхРасходов.РеализацияНДС0);
	РаспределеноПоСтавкам.Добавить(Перечисления.ВариантыРаспределенияНДСКосвенныхРасходов.РеализацияСНДС);
	Запрос.УстановитьПараметр("РаспределеноПоСтавкам", РаспределеноПоСтавкам);
	
	ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрРез Из ТаблицаРезультатов Цикл
		НоваяСтрока = СоставКосвенныхРасходов.Добавить();
		НоваяСтрока.ВидЦенности	= СтрРез.ВидЦенности;
		НоваяСтрока.Поставщик =   СтрРез.Поставщик;
		НоваяСтрока.СчетФактура = СтрРез.СчетФактура;
		НоваяСтрока.СтавкаНДС =   СтрРез.СтавкаНДС;
		
		НоваяСтрока.СуммаВсего =  СтрРез.ПолученоСумма;
		НоваяСтрока.НДСВсего =    СтрРез.ПолученоНДС;
		
	КонецЦикла;
	
КонецПроцедуры  // КоманднаяПанельЗаполнить(Кнопка)

// Процедура вызывается по кнопке "Распределить" в форме диалога документа.
// В процедуре реализуется алгоритм распределения косвенных расходов в табличной
// части "СоставКосвенныхРасходов" на различные виды реализации в текущем периоде.
//
Процедура КоманднаяПанельРаспределить(Кнопка)

	БазаРаспределения = ВыручкаНДС + ВыручкаБезНДС + ВыручкаЕНВД + ВыручкаНДС0;

	Если БазаРаспределения = 0 Тогда
		Сообщить("На закладке ""Выручка от реализации"" не указаны параметры реализации!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;

	Для Каждого СтрТабЧасти Из СоставКосвенныхРасходов Цикл

		УчтеноСуммы   = 0;
		УчтеноНДС     = 0;
		УчтеноВыручки = 0;

		Если ВыручкаНДС <> 0 Тогда

			СтрТабЧасти.НДССумма = Окр(СтрТабЧасти.СуммаВсего * (ВыручкаНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.НДС      = Окр(СтрТабЧасти.НДСВсего * (ВыручкаНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы     = УчтеноСуммы + СтрТабЧасти.НДССумма;
			УчтеноНДС       = УчтеноНДС + СтрТабЧасти.НДС;
			УчтеноВыручки   = УчтеноВыручки + ВыручкаНДС;

		Иначе
			СтрТабЧасти.НДССумма = 0;
			СтрТабЧасти.НДС      = 0;
		КонецЕсли;

		Если ВыручкаБезНДС <> 0 Тогда

			СтрТабЧасти.БезНДССумма = Окр(СтрТабЧасти.СуммаВсего * (ВыручкаБезНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.БезНДС      = Окр(СтрТабЧасти.НДСВсего * (ВыручкаБезНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы   = УчтеноСуммы + СтрТабЧасти.БезНДССумма;
			УчтеноНДС     = УчтеноНДС + СтрТабЧасти.БезНДС;
			УчтеноВыручки = УчтеноВыручки + ВыручкаБезНДС;

		Иначе
			СтрТабЧасти.БезНДССумма = 0;
			СтрТабЧасти.БезНДС      = 0;

		КонецЕсли;

		Если ВыручкаЕНВД <> 0 Тогда

			СтрТабЧасти.ЕНВДСумма = Окр(СтрТабЧасти.СуммаВсего * (ВыручкаЕНВД + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.ЕНВДНДС   = Окр(СтрТабЧасти.НДСВсего *   (ВыручкаЕНВД + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы   = УчтеноСуммы + СтрТабЧасти.ЕНВДСумма;
			УчтеноНДС     = УчтеноНДС + СтрТабЧасти.ЕНВДНДС;
			УчтеноВыручки = УчтеноВыручки + ВыручкаЕНВД;

		Иначе
			СтрТабЧасти.ЕНВДСумма = 0;
			СтрТабЧасти.ЕНВДНДС   = 0;

		КонецЕсли;
		
		Если ВыручкаНДС0 <> 0 Тогда

			СтрТабЧасти.НДС0Сумма = Окр(СтрТабЧасти.СуммаВсего * (ВыручкаНДС0 + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.НДС0      = Окр(СтрТабЧасти.НДСВсего * (ВыручкаНДС0 + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы   = УчтеноСуммы + СтрТабЧасти.НДС0Сумма;
			УчтеноНДС     = УчтеноНДС + СтрТабЧасти.НДС0;
			УчтеноВыручки = УчтеноВыручки + ВыручкаНДС0;

		Иначе
			СтрТабЧасти.НДС0Сумма = 0;
			СтрТабЧасти.НДС0      = 0;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

// Процедура вызывается по кнопке "Расчитать" из формы диалога документа.
// Выполняется расчет объемов реализации в текущем периоде по данным
// регистра НДСПродажи в разрезе различных ставок НДС.
//
Процедура КоманднаяПанельВыручкиРассчитать(Кнопка)
	
 	Результат = ПроанализироватьРеализацию(НачалоПериода, КонецПериода, Организация);

	Если Результат.Следующий() Тогда
		ВыручкаНДС = Результат.ВыручкаНДС;
		ВыручкаНДС0 = Результат.ВыручкаНДС0;
		ВыручкаБезНДС = Результат.ВыручкаБезНДС;
		ВыручкаЕНВД = Результат.ВыручкаЕНВД;
	КонецЕсли;
	
КонецПроцедуры // КоманднаяПанельВыручкиРассчитать()

// Процедура - обработчик события "ПриИзменении" поля дата 
// в диалоге документа.
//
Процедура ДатаПриИзменении(Элемент)

	УстановитьВремя(РежимАвтоВремя.Последним);

	Если (НачалоМесяца(Дата) <> НачалоПериода)
	 или (КонецМесяца(Дата) <> КонецПериода) Тогда
		Ответ = Вопрос("Установить значение периода документа месяцем в который входит текущая дата?", РежимДиалогаВопрос.ДаНет,,,);

		Если Ответ = КодВозвратаДиалога.Да Тогда
			НачалоПериода = НачалоМесяца(Дата);
			КонецПериода  = КонецМесяца(Дата);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Инициализация списка выбора для реквизита "ВидЦенности"
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.ПосредническиеУслуги);
ЭлементыФормы.СоставКосвенныхРасходов.Колонки.ВидЦенности.ЭлементУправления.СписокВыбора.Добавить(Перечисления.ВидыЦенностей.Товары);
