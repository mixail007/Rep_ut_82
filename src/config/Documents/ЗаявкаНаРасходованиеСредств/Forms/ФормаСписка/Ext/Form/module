Процедура ДействияФормыФайлы(Кнопка)
	// Вставить содержимое обработчика.
	//Если ОбъектДоговорКонтрагента.Ссылка.Пустая() Тогда
	//	Предупреждение("Нет договора!");
	//	Возврат;
	//КонецЕсли;

	//ФормаВыб = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСписка",ЭтаФорма);
	//ФормаВыб.Отбор.Объект.Значение = ОбъектДоговорКонтрагента.Ссылка;
	//ФормаВыб.Отбор.Объект.Использование = Истина;
	//ФормаВыб.Открыть();
	Если НЕ ЭлементыФормы.ДокументСписок.ТекущаяСтрока = Неопределено Тогда
	    ФормаВыб = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСписка",ЭтаФорма);
		ФормаВыб.Отбор.Объект.Значение = ЭлементыФормы.ДокументСписок.ТекущаяСтрока.Ссылка;
		ФормаВыб.Отбор.Объект.Использование = Истина;
	    ФормаВыб.Открыть();
	КонецЕсли; 
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭлементыФормы.ДокументСписок.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	ЭлементыФормы.ДокументСписок.ТекущаяСтрока.ПолучитьОбъект().ПечатьЗаявки();

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ДокументСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если ДанныеСтроки.Ссылка.Проведен Тогда
		СуммаОстаткаПоЗаявке = ПолучитьОстатокПоЗаявке(ДанныеСтроки.Ссылка,ТекущаяДата());
		Если СуммаОстаткаПоЗаявке = 0 Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.НейтральноЗеленый;  //полная оплата
		ИначеЕсли СуммаОстаткаПоЗаявке > 0 Тогда
			Если СуммаОстаткаПоЗаявке = ДанныеСтроки.СуммаДокумента Тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.Белый;  //не было оплаы
			Иначе
				ОформлениеСтроки.ЦветФона = WebЦвета.ГолубойСоСтальнымОттенком;  //частичная оплата
			КонецЕсли;
		ИначеЕсли СуммаОстаткаПоЗаявке < 0  Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.ЛососьСветлый;  //переплата
		КонецЕсли;
	Иначе
		Если ДанныеСтроки.Ссылка.ПометкаУдаления Тогда
			ОформлениеСтроки.ЦветТекста = WebЦвета.СветлоСерый;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	//УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.ДокументСписок); не подходит
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		Если РольДоступна("Кассир") Тогда
			//ограничение, чтоб видели все заявки по подразделению
			Отбор["Подразделение"].Использование = Истина;
			Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
			Отбор["Подразделение"].Значение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
			ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		Иначе
			//ограничение, чтоб видели только свои заявки
			Отбор["Ответственный"].Использование = Истина;
			Отбор["Ответственный"].ВидСравнения = ВидСравнения.Равно;
			Отбор["Ответственный"].Значение = ПараметрыСеанса.ТекущийПользователь;
			ЭлементыФормы.ДокументСписок.НастройкаОтбора["Ответственный"].Доступность = Ложь;
		КонецЕсли;
	Иначе
		Если РольДоступна("ДополнительныеПраваВЭД") Тогда
			списокПодразделенийПользователя = новый СписокЗначений;
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
			Отбор["Подразделение"].Использование = Истина;
			Отбор["Подразделение"].ВидСравнения = ВидСравнения.ВСписке;
			Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
			ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь
		иначе
			Если РольДоступна("ПолныеПрава") или РольДоступна("яштФинДиректор") ИЛИ РольДоступна("ПравоЗавершенияРаботыПользователей") Тогда
				//27.02.17 Смирнов, для доп. права РазрешитьЗаявкиСвоейГруппы показываем заявки своей группы			
			ИначеЕсли ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьЗаявкиСвоейГруппы") Тогда
				СписокОтветственных = новый СписокЗначений;
				Для каждого СтрокаСпр Из ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов").ПользователиГруппы Цикл
					СписокОтветственных.Добавить(СтрокаСпр.Пользователь);	
				КонецЦикла;
				Отбор["Ответственный"].Использование = Истина;
				Отбор["Ответственный"].ВидСравнения = ВидСравнения.ВСписке;
				Отбор["Ответственный"].Значение = СписокОтветственных;
				ЭлементыФормы.ДокументСписок.НастройкаОтбора["Ответственный"].Доступность = Ложь;
				//27.02.17 Смирнов
				
				//ограничение, чтоб видели все заявки по подразделению
				списокПодразделенийПользователя = новый СписокЗначений;
			    списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
			    списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
				Отбор["Подразделение"].Использование = Истина;
				Отбор["Подразделение"].ВидСравнения = ВидСравнения.НеВСписке;
				Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
				ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь
			Иначе
				//ограничение, чтоб видели только свои заявки
				Отбор["Ответственный"].Использование = Истина;
				Отбор["Ответственный"].ВидСравнения = ВидСравнения.Равно;
				Отбор["Ответственный"].Значение = ПараметрыСеанса.ТекущийПользователь;
				ЭлементыФормы.ДокументСписок.НастройкаОтбора["Ответственный"].Доступность = Ложь;
				
				//ограничение, чтоб видели все заявки по подразделению
				списокПодразделенийПользователя = новый СписокЗначений;
				списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
				списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
				Отбор["Подразделение"].Использование = Истина;
				Отбор["Подразделение"].ВидСравнения = ВидСравнения.НеВСписке;
				Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
				ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь
			КонецЕсли;
			
			Если не Отбор["Подразделение"].Использование = истина и не РольДоступна("яштФинДиректор") и не РольДоступна("ПравоЗавершенияРаботыПользователей") Тогда
				списокПодразделенийПользователя = новый СписокЗначений;
				списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
				списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
				Отбор["Подразделение"].Использование = Истина;
				Отбор["Подразделение"].ВидСравнения = ВидСравнения.НеВСписке;
				Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
				//ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
