
// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭлементыФормы.ДокументСписокБезналичные.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.ДокументСписокБезналичные.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ДействияФормыДвиженияДокументаПоРегистрамНал(Кнопка)

	Если ЭлементыФормы.ДокументСписокНаличные.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.ДокументСписокНаличные.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписокБезналичные.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.ДокументСписокБезналичные.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокументаНал(Кнопка)
	
	Если ЭлементыФормы.ДокументСписокНаличные.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.ДокументСписокНаличные.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ДействияФормыФайлы(Кнопка)

	Если НЕ ЭлементыФормы.ДокументСписокБезналичные.ТекущаяСтрока = Неопределено Тогда
	    ФормаВыб = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСписка",ЭтаФорма);
		ФормаВыб.Отбор.Объект.Значение = ЭлементыФормы.ДокументСписокБезналичные.ТекущаяСтрока.Ссылка;
		ФормаВыб.Отбор.Объект.Использование = Истина;
	    ФормаВыб.Открыть();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДействияФормыФайлыНал(Кнопка)

	Если НЕ ЭлементыФормы.ДокументСписокНаличные.ТекущаяСтрока = Неопределено Тогда
	    ФормаВыб = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСписка",ЭтаФорма);
		ФормаВыб.Отбор.Объект.Значение = ЭлементыФормы.ДокументСписокНаличные.ТекущаяСтрока.Ссылка;
		ФормаВыб.Отбор.Объект.Использование = Истина;
	    ФормаВыб.Открыть();
	КонецЕсли; 
	
КонецПроцедуры
 
//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭлементыФормы.ДокументСписокБезналичные.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	ЭлементыФормы.ДокументСписокБезналичные.ТекущаяСтрока.ПолучитьОбъект().ПечатьЗаявки();

КонецПроцедуры // ДействиеПечать()

Процедура ДействияФормыДействиеПечатьНал(Кнопка)

	Если ЭлементыФормы.ДокументСписокНаличные.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	ЭлементыФормы.ДокументСписокНаличные.ТекущаяСтрока.ПолучитьОбъект().ПечатьЗаявки();

КонецПроцедуры // ДействиеПечать()

Процедура ДокументСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если ДанныеСтроки.Ссылка.Проведен Тогда
		СуммаОстаткаПоЗаявке = ПолучитьОстатокПоЗаявке(ДанныеСтроки.Ссылка,ТекущаяДата());
		Если СуммаОстаткаПоЗаявке = 0 Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.НейтральноЗеленый;  //полная оплата
		ИначеЕсли СуммаОстаткаПоЗаявке > 0 Тогда
			Если СуммаОстаткаПоЗаявке = ДанныеСтроки.СуммаДокумента Тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.Белый;  //не было оплаы
			Иначе
				ОформлениеСтроки.ЦветФона = WebЦвета.ГолубойСоСтальнымОттенком;  //частичная оплата
			КонецЕсли;
		ИначеЕсли СуммаОстаткаПоЗаявке < 0  Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.ЛососьСветлый;  //переплата
		КонецЕсли;
	Иначе
		Если ДанныеСтроки.Ссылка.ПометкаУдаления Тогда
			ОформлениеСтроки.ЦветТекста = WebЦвета.СветлоСерый;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ДокументСписокБезналичные.Отбор.ФормаОплаты.Использование = Истина;
	ДокументСписокБезналичные.Отбор.ФормаОплаты.ВидСравнения = ВидСравнения.Равно;
	ДокументСписокБезналичные.Отбор.ФормаОплаты.Значение = Перечисления.ВидыДенежныхСредств.Безналичные;
	ЭлементыФормы.ДокументСписокБезналичные.НастройкаОтбора["ФормаОплаты"].Доступность = Ложь;
	
	ДокументСписокНаличные.Отбор.ФормаОплаты.Использование = Истина;
	ДокументСписокНаличные.Отбор.ФормаОплаты.ВидСравнения = ВидСравнения.Равно;
	ДокументСписокНаличные.Отбор.ФормаОплаты.Значение = Перечисления.ВидыДенежныхСредств.Наличные;
	ЭлементыФормы.ДокументСписокНаличные.НастройкаОтбора["ФормаОплаты"].Доступность = Ложь;
	
	//выставляется ограничение по периоду
	ДатаНачалаВДокументах = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1));   
	ДатаОкончанияВДокументах = КонецМесяца(ТекущаяДата());
	ОсновнаяДатаНачалаОтчетов = ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнаяДатаНачалаОтчетов");
	Если Не ЗначениеНеЗаполнено(ОсновнаяДатаНачалаОтчетов) Тогда
		ДатаНачалаВДокументах = ОсновнаяДатаНачалаОтчетов;
		ДатаОкончанияВДокументах = КонецГода(ТекущаяДата());
	КонецЕсли;
	
	ДокументСписокБезналичные.Отбор.Дата.ЗначениеС = ДатаНачалаВДокументах;
	ДокументСписокБезналичные.Отбор.Дата.ЗначениеПо = ДатаОкончанияВДокументах;
	ДокументСписокБезналичные.Отбор.Дата.Использование = Истина;
	
	ДокументСписокНаличные.Отбор.Дата.ЗначениеС = ДатаНачалаВДокументах;
	ДокументСписокНаличные.Отбор.Дата.ЗначениеПо = ДатаОкончанияВДокументах;
	ДокументСписокНаличные.Отбор.Дата.Использование = Истина;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	УстановитьОтборПоЗаявкам();
	
КонецПроцедуры

Процедура УстановитьОтборПоЗаявкам()
	
	//Ограничения безнал
	Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьПолныйСписокЗаявокБезналичные") Тогда
		Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
			Если РольДоступна("Кассир") Тогда
				//ограничение, чтоб видели все заявки по подразделению
				ДокументСписокБезналичные.Отбор.Подразделение.Использование = Истина;
				ДокументСписокБезналичные.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
				ДокументСписокБезналичные.Отбор.Подразделение.Значение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
				ЭлементыФормы.ДокументСписокБезналичные.НастройкаОтбора["Подразделение"].Доступность = Ложь;
			Иначе
				//ограничение, чтоб видели только свои заявки
				ДокументСписокБезналичные.Отбор.Ответственный.Использование = Истина;
				ДокументСписокБезналичные.Отбор.Ответственный.ВидСравнения = ВидСравнения.Равно;
				ДокументСписокБезналичные.Отбор.Ответственный.Значение = ПараметрыСеанса.ТекущийПользователь;
				ЭлементыФормы.ДокументСписокБезналичные.НастройкаОтбора["Ответственный"].Доступность = Ложь;
			КонецЕсли;
		Иначе
			СписокОтветственных = новый СписокЗначений;
			
			//ограничение, чтоб видели только свои заявки
			СписокОтветственных.Добавить(ПараметрыСеанса.ТекущийПользователь);
			
			//или заявки своей группы
			Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьЗаявкиСвоейГруппы") Тогда  //27.02.17 Смирнов, для доп. права РазрешитьЗаявкиСвоейГруппы показываем заявки своей группы
				Для каждого СтрокаСпр Из ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов").ПользователиГруппы Цикл
					СписокОтветственных.Добавить(СтрокаСпр.Пользователь);	
				КонецЦикла;
			КонецЕсли;
			
			ДокументСписокБезналичные.Отбор.Ответственный.Использование = Истина;
			ДокументСписокБезналичные.Отбор.Ответственный.ВидСравнения = ВидСравнения.ВСписке;
			ДокументСписокБезналичные.Отбор.Ответственный.Значение = СписокОтветственных;
			ЭлементыФормы.ДокументСписокБезналичные.НастройкаОтбора["Ответственный"].Доступность = Ложь;
			
			//дополнительно можно видеть заявки выбранного подразделения
			РазрешенноеПодразделение = ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьЗаявкиПодразделения");
			Если НЕ РазрешенноеПодразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
				МассивДоступныхЗаявок = ПолучитьСписокДоступныхЗаявок(Перечисления.ВидыДенежныхСредств.Безналичные, СписокОтветственных, РазрешенноеПодразделение);
				
				ДокументСписокБезналичные.Отбор.Ссылка.Использование = Истина;
				ДокументСписокБезналичные.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
				ДокументСписокБезналичные.Отбор.Ссылка.Значение = МассивДоступныхЗаявок; 
				
				ДокументСписокБезналичные.Отбор.Ответственный.Использование = Ложь;
				ЭлементыФормы.ДокументСписокБезналичные.НастройкаОтбора["Ответственный"].Доступность = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//Ограничения наличка
	Если НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьПолныйСписокЗаявокНаличные") Тогда
		Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
			Если РольДоступна("Кассир") Тогда
				//ограничение, чтоб видели все заявки по подразделению
				ДокументСписокНаличные.Отбор.Подразделение.Использование = Истина;
				ДокументСписокНаличные.Отбор.Подразделение.ВидСравнения = ВидСравнения.Равно;
				ДокументСписокНаличные.Отбор.Подразделение.Значение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
				ЭлементыФормы.ДокументСписокНаличные.НастройкаОтбора["Подразделение"].Доступность = Ложь;
			Иначе
				//ограничение, чтоб видели только свои заявки
				ДокументСписокНаличные.Отбор.Ответственный.Использование = Истина;
				ДокументСписокНаличные.Отбор.Ответственный.ВидСравнения = ВидСравнения.Равно;
				ДокументСписокНаличные.Отбор.Ответственный.Значение = ПараметрыСеанса.ТекущийПользователь;
				ЭлементыФормы.ДокументСписокНаличные.НастройкаОтбора["Ответственный"].Доступность = Ложь;
			КонецЕсли;
		Иначе
			СписокОтветственных = новый СписокЗначений;
			
			//ограничение, чтоб видели только свои заявки
			СписокОтветственных.Добавить(ПараметрыСеанса.ТекущийПользователь);
			
			//или заявки своей группы
			Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьЗаявкиСвоейГруппы") Тогда  //27.02.17 Смирнов, для доп. права РазрешитьЗаявкиСвоейГруппы показываем заявки своей группы
				Для каждого СтрокаСпр Из ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ГруппаПользователейДляРаспределенияЗаказов").ПользователиГруппы Цикл
					СписокОтветственных.Добавить(СтрокаСпр.Пользователь);	
				КонецЦикла;
			КонецЕсли;
			
			ДокументСписокНаличные.Отбор.Ответственный.Использование = Истина;
			ДокументСписокНаличные.Отбор.Ответственный.ВидСравнения = ВидСравнения.ВСписке;
			ДокументСписокНаличные.Отбор.Ответственный.Значение = СписокОтветственных;
			ЭлементыФормы.ДокументСписокНаличные.НастройкаОтбора["Ответственный"].Доступность = Ложь;
			
			//дополнительно можно видеть заявки выбранного подразделения
			РазрешенноеПодразделение = ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "РазрешитьЗаявкиПодразделения");
			Если НЕ РазрешенноеПодразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
				МассивДоступныхЗаявок = ПолучитьСписокДоступныхЗаявок(Перечисления.ВидыДенежныхСредств.Наличные, СписокОтветственных, РазрешенноеПодразделение);
				
				ДокументСписокНаличные.Отбор.Ссылка.Использование = Истина;
				ДокументСписокНаличные.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
				ДокументСписокНаличные.Отбор.Ссылка.Значение = МассивДоступныхЗаявок; 
				
				ДокументСписокНаличные.Отбор.Ответственный.Использование = Ложь;
				ЭлементыФормы.ДокументСписокНаличные.НастройкаОтбора["Ответственный"].Доступность = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьСписокДоступныхЗаявок(ФормаОплаты, СписокОтветственных, РазрешенноеПодразделение)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФормаОплаты", ФормаОплаты);
	Запрос.УстановитьПараметр("СписокОтветственых", СписокОтветственных);
	Запрос.УстановитьПараметр("Подразделение", РазрешенноеПодразделение);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкаНаРасходованиеСредств.Ссылка
	               |ИЗ
	               |	Документ.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств
	               |ГДЕ
	               |	ЗаявкаНаРасходованиеСредств.ФормаОплаты = &ФормаОплаты
	               |	И ЗаявкаНаРасходованиеСредств.Ответственный В(&СписокОтветственых)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаявкаНаРасходованиеСредств.Ссылка
	               |ИЗ
	               |	Документ.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств
	               |ГДЕ
	               |	ЗаявкаНаРасходованиеСредств.ФормаОплаты = &ФормаОплаты
	               |	И ЗаявкаНаРасходованиеСредств.Подразделение = &Подразделение";
	
	ТаблицаОтбора = Запрос.Выполнить().Выгрузить();
	
	МассивОтбора = Новый СписокЗначений;
	Для каждого СтрТЗ ИЗ ТаблицаОтбора Цикл
		МассивОтбора.Добавить(СтрТЗ.Ссылка);
	КонецЦикла;
	
	Возврат МассивОтбора; 
	
КонецФункции



