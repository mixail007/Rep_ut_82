Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Выполняет заполнение табличной части "Заказы"
//
// Параметры:
//  Нет.
//
Процедура ЗаполнитьТабличнуюЧастьПоОстаткам(поМинусам=ложь)

	Если Заказы.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Имя);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
		
		Заказы.Очистить();
	КонецЕсли;

	ЗаполнитьЗаказыПоОстаткам(поМинусам);
	
КонецПроцедуры // ЗаполнитьТабличнуюЧастьПоОстаткам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнитьШапкуДокумента(ЭтотОбъект, глТекущийПользователь);
		УстановитьНомерДокумента(ЭтотОбъект);

	КонецЕсли;

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ЗаказПоставщику");

	// Установить ограничение - изменять видимоть колонок для таличной части "Заказы".
	УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.Заказы.Колонки, СтруктураКолонок);

	// Вывести в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;

	// Установить активный реквизит.
	АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры // ПослеЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при нажатии кнопки "Заполнить по остаткам" подменю "Заполнить" командной панели 
// табличного поля "Заказы", вызывает сервисный механизм для заполнения табличной части
//
Процедура КоманднаяПанельЗаказыЗаполнитьПоОстаткам(Кнопка)

	ЗаполнитьТабличнуюЧастьПоОстаткам();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры // ДатаПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ ЗАКАЗЫ

// Процедура - обработчик события "ПриВыводеСтроки" табличной части "Заказы".
//
Процедура ЗаказыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если Элемент.Колонки.КонтрагентЗаказа.Видимость Тогда
		ОформлениеСтроки.Ячейки.КонтрагентЗаказа.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.КонтрагентЗаказа.Текст = ДанныеСтроки.ЗаказПоставщику.Контрагент;
	КонецЕсли;

	Если Элемент.Колонки.СуммаЗаказа.Видимость Тогда
		ОформлениеСтроки.Ячейки.СуммаЗаказа.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.СуммаЗаказа.Текст = ФорматСумм(ДанныеСтроки.ЗаказПоставщику.СуммаДокумента);
	КонецЕсли;

	Если Элемент.Колонки.ВалютаЗаказа.Видимость Тогда
		ОформлениеСтроки.Ячейки.ВалютаЗаказа.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.ВалютаЗаказа.Текст = ДанныеСтроки.ЗаказПоставщику.ВалютаДокумента;
	КонецЕсли;

	Если Элемент.Колонки.ОтветственныйЗаЗаказ.Видимость Тогда
		ОформлениеСтроки.Ячейки.ОтветственныйЗаЗаказ.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.ОтветственныйЗаЗаказ.Текст = ДанныеСтроки.ЗаказПоставщику.Ответственный;
	КонецЕсли;
	
	Если Элемент.Колонки.ДатаПоступления.Видимость Тогда
		ОформлениеСтроки.Ячейки.ДатаПоступления.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.ДатаПоступления.Текст = ДанныеСтроки.ЗаказПоставщику.ДатаПоступления;
	КонецЕсли;

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	яштСменаПользователя(ЭтотОбъект, ЭтаФорма, глТекущийПользователь);
КонецПроцедуры

Процедура КоманднаяПанельЗаказыЗаполнитьПоОтрицательнымОстаткам(Кнопка)
	ЗаполнитьТабличнуюЧастьПоОстаткам(истина);
КонецПроцедуры

Процедура КоманднаяПанельЗаказыЗаполнитьПоПоступившемуТовару(Кнопка)
	 ЗаполнитьЗаказыПоКоторымБылоПоступление();
	
КонецПроцедуры

//+++ 20.08.2014 - для Кузьмичевой
// - закрытие "товаров в пути"
//
Процедура КоманднаяПанельЗаказыЗаполнитьПоМенеджеру(Кнопка)
	Запрос = Новый Запрос;
 	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(,Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Шины)
	|//Менеджер				И ДоговорКонтрагента.ОтветственноеЛицо = &Менеджер
	|				И ЗаказПоставщику.Дата < &Дата И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику
	|	И ЗаказыПоставщикамОстатки.КоличествоОстаток > 0";
	
дата1 = ДобавитьМесяц( НачалоМесяца(ТекущаяДата()), -1);	
ВвестиДату(дата1, "Введите дату до которой надо выбрать старые заказы", ЧастиДаты.Дата);
Запрос.УстановитьПараметр("Дата", дата1);

Если Вопрос("Выбирать заказы только по одному менеджеру?", РежимДиалогаВопрос.ДаНет, 10) = КодВозвратаДиалога.Да Тогда
	Менеджер = глТекущийПользователь;
	ВвестиЗначение(Менеджер, "Выберите менеджера");
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.Текст = стрЗаменить(Запрос.Текст , "//Менеджер", "");
КонецЕсли;

Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Заказы.Добавить();
		НоваяСтрока.ЗаказПоставщику = Выборка.ЗаказПоставщику;
	КонецЦикла; 
КонецПроцедуры
