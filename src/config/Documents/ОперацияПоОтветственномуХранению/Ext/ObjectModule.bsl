//БАЛАНС (15.03.2010)                       
//
Перем мПроведениеИзФормы Экспорт; 
Перем ТаблицаОстатковПоСкладам;


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	ПроверитьЗаполнениеТабличнойЧастиТовары(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	яштАдресноеХранение.ПроверитьЗаполнениеТабЧастиТоварыАдресноеХранение(ЭтотОбъект.Ссылка,Отказ);
	
	Если  Отказ Тогда	Возврат  КонецЕсли;
	
	
	// Заполнение Табл. части Грузчики
	
	ДвиженияРегистровГрузчикиИКладовщики(ЭтотОбъект);	
	
	// По регистру ТоварыНаОтветственномХранении.
	НаборДвижений = Движения.ТоварыНаОтветственномХранении;
	
	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	// Заполним таблицу движений.
	
	ТабТовары=Товары.Выгрузить();			
	ТабТовары.Колонки.Добавить("Стоимость");
	ТабТовары.ЗаполнитьЗначения(0,"Стоимость");
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказПоОтветственномуХранению")  //Плотников+++
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами Тогда  
		ПолучитьСтоимостьНоменклатуры(ТабТовары);
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваров") Тогда
		ПолучитьСтоимостьНоменклатурыВозврат(ТабТовары);
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаБрак") Тогда
		ПолучитьСтоимостьНоменклатурыЗаявкаНаБрак(ТабТовары);
	КонецЕсли;
	
	Для каждого строкаТовары Из ТабТовары Цикл			
		СтрокаДвижений = ТаблицаДвижений.Добавить();
		СтрокаДвижений.Контрагент = Контрагент;
		Если  не ЗначениеНеЗаполнено(ДоговорКонтрагента) Тогда // введен на основании
			СтрокаДвижений.ДоговорКонтрагента=ДоговорКонтрагента;
		КонецЕсли;	
		СтрокаДвижений.Склад = строкаТовары.Склад;
		СтрокаДвижений.Номенклатура = строкаТовары.Номенклатура;
		СтрокаДвижений.Количество=строкаТовары.Количество;
		СтрокаДвижений.Стоимость=строкаТовары.Стоимость;
	КонецЦикла;
	
	НаборДвижений.мПериод            = Дата;
	НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;
	
	
	// Проверка на соответствие заказу и контроль остатков осуществляется всегда
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказПоОтветственномуХранению") Тогда  //Плотников+++
		Если ВидОперации <> Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами 
			И не ЗначениеНеЗаполнено(ДокументОснование) Тогда
			НаборДвижений.КонтрольНаСоответствиеОснованию(ЭтотОбъект, "", СтруктураШапкиДокумента, Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.ВидыОперацийПоОтветственномуХранению.Поступление Тогда
		НаборДвижений.КонтрольОстатков(ЭтотОбъект, "", СтруктураШапкиДокумента, Отказ, Заголовок);
	КонецЕсли;
	
	Если  Отказ Тогда	Возврат  КонецЕсли;
	
	
	Если ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.Поступление Тогда
		Движения.ТоварыНаОтветственномХранении.ВыполнитьПриход();
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами Тогда
		Движения.ТоварыНаОтветственномХранении.ВыполнитьРасход();
		ТаблицаДвижений.ЗаполнитьЗначения( СкладПолучатель,"Склад");
		Движения.ТоварыНаОтветственномХранении.ВыполнитьПриход();
	ИначеЕсли 	ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.Списание Тогда	
		Движения.ТоварыНаОтветственномХранении.ВыполнитьРасход();
	КонецЕсли;	
	
	Если ТоварыАдресноеХранение.Количество() > 0 Тогда
		яштАдресноеХранение.ДвиженияПоРегиструТоварыАдресноеХранение(Движения.ТоварыАдресноеХранение, ЭтотОбъект);
	КонецЕсли;				
	

КонецПроцедуры


Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	СтруктураОбязательныхПолей = Новый Структура("Организация, Контрагент");
	
	Если ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами Тогда
		СтруктураОбязательныхПолей.Вставить("СкладПолучатель");
	КонецЕсли;
		// Теперь позовем общую процедуру проверки.
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);		
КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличнойЧастиТовары(СтруктураШапкиДокумента, Отказ, Заголовок) 
	СтруктураОбязательныхПолей = Новый Структура("Номенклатура, Склад, Количество");
	ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Товары", СтруктураОбязательныхПолей, Отказ, Заголовок);	
	КонецПроцедуры	
		


Процедура ОбработкаЗаполнения(Основание) Экспорт
	
	#Если Клиент Тогда
		
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоОтветственномуХранению") Тогда
			Если не Основание.Проведен Тогда 
				Сообщить("Вводить операцию по ответственному хранению можно только на основании проведенного заказа.",СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;	
			ВидОперации = Основание.ВидОперации;
			Контрагент = Основание.Контрагент;
			ДоговорКонтрагента = Основание.ДоговорКонтрагента;
			Организация = Основание.Организация;
			Комментарий = Основание.Комментарий;
			ДокументОснование = Основание.Ссылка;
			СкладПолучатель   = Основание.СкладПолучатель; // 26.02.2016
			
			Подразделение    =  Основание.Подразделение;  //11.07.2016
			//КонецЕсли;
			
			
			// заполнить таблицу остатков по складам
			Если Основание.ВидОперации=Перечисления.ВидыОперацийПоОтветственномуХранению.Поступление Тогда
				Для Каждого строкаОснование ИЗ Основание.Товары Цикл
					НоваяСтрока=Товары.Добавить();
					НоваяСтрока.Номенклатура = строкаОснование.Номенклатура;
					НоваяСтрока.Количество = строкаОснование.Количество;
				КонецЦикла	
				
			ИначеЕсли Основание.ВидОперации=Перечисления.ВидыОперацийПоОтветственномуХранению.Списание Тогда 
				Запрос=Новый Запрос;
				Запрос.Текст="ВЫБРАТЬ
				|	ТоварыНаОтветственномХраненииОстатки.Номенклатура,
				|	ТоварыНаОтветственномХраненииОстатки.Склад,
				|	ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.ТоварыНаОтветственномХранении.Остатки( , 	Номенклатура В
				|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
				|						Документ.ЗаказПоОтветственномуХранению.Товары.Номенклатура
				|					 ИЗ Документ.ЗаказПоОтветственномуХранению.Товары
				|					ГДЕ Документ.ЗаказПоОтветственномуХранению.Товары.Ссылка = &ДокументОснование)
				// списывается со складов на которые оприходован
				//|				И НЕ Склад.Транзитный
				|				И Контрагент = &Контрагент
				|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ТоварыНаОтветственномХраненииОстатки";
				Запрос.УстановитьПараметр("ДокументОснование",Основание);
				Запрос.УстановитьПараметр("ДоговорКонтрагента",Основание.ДоговорКонтрагента);
				Запрос.УстановитьПараметр("Контрагент",Основание.Контрагент);
				
				
				ТаблицаОстатковПоСкладам=Запрос.Выполнить().Выгрузить();	
				
				ЗапросОстатки= Новый Запрос;
				ЗапросОстатки.Текст="ВЫБРАТЬ
				|	ЗаказПоОтветственномуХранениюТовары.НомерСтроки НомерСтроки,
				|	ЗаказПоОтветственномуХранениюТовары.Номенклатура Номенклатура,
				|	ЗаказПоОтветственномуХранениюТовары.Количество - ЕстьNULL(ОперацияПоОтветственномуХранениюТовары.Количество,0) Количество
				|	ИЗ
				|(ВЫБРАТЬ
				|	НомерСтроки,
				|	Номенклатура,
				|	Количество
				|ИЗ
				|	Документ.ЗаказПоОтветственномуХранению.Товары 
				|ГДЕ
				|	Ссылка = &ДокументОснование
				|	И Ссылка.Проведен ) КАК ЗаказПоОтветственномуХранениюТовары
				|	ЛЕВОЕ СОЕДИНЕНИЕ
				|	(  ВЫБРАТЬ
				|	Номенклатура,
				|	СУММА(Количество) Количество
				|ИЗ
				|	Документ.ОперацияПоОтветственномуХранению.Товары 
				|ГДЕ
				|	Ссылка.ДокументОснование = &ДокументОснование
				|	И Ссылка.Проведен
				|	СГРУППИРОВАТЬ ПО Номенклатура 
				|	)КАК ОперацияПоОтветственномуХранениюТовары
				|	ПО
				|ЗаказПоОтветственномуХранениюТовары.Номенклатура=ОперацияПоОтветственномуХранениюТовары.Номенклатура
				|ГДЕ	ЗаказПоОтветственномуХранениюТовары.Количество-ЕстьNULL(ОперацияПоОтветственномуХранениюТовары.Количество,0)>0
				|УПОРЯДОЧИТЬ ПО ЗаказПоОтветственномуХранениюТовары.НомерСтроки";
				
				ЗапросОстатки.УстановитьПараметр("ДокументОснование",Основание);
				
				Выборка=ЗапросОстатки.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					НоваяСтрока = Товары.Добавить();
					НоваяСтрока.Номенклатура = Выборка.Номенклатура;
					НоваяСтрока.Количество   = Выборка.Количество;
					НайдСтрока=ТаблицаОстатковПоСкладам.Найти(Выборка.Номенклатура,"Номенклатура");
					Если НайдСтрока<>Неопределено Тогда
						НоваяСтрока.Склад=НайдСтрока.Склад;
					КонецЕсли;	
				КонецЦикла;
				
				//============================= 17.03.2016 =============================================	
			иначеЕсли Основание.ВидОперации=Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами  тогда
				
				Запрос=Новый Запрос;
				Запрос.Текст="ВЫБРАТЬ
				|	ТоварыНаОтветственномХраненииОстатки.Номенклатура,
				|	ТоварыНаОтветственномХраненииОстатки.Склад,
				|	ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток
				|ПОМЕСТИТЬ ВТ_Товары
				|ИЗ
				|	РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(,
				|			Номенклатура В
				|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
				|						Документ.ЗаказПоОтветственномуХранению.Товары.Номенклатура
				|					ИЗ
				|						Документ.ЗаказПоОтветственномуХранению.Товары
				|					ГДЕ
				|						Документ.ЗаказПоОтветственномуХранению.Товары.Ссылка = &ДокументОснование)
				|				И НЕ Склад.Транзитный
				|				И Контрагент = &Контрагент
				|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ТоварыНаОтветственномХраненииОстатки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЗаказПоОтветственномуХранениюТовары.НомерСтроки КАК НомерСтроки,
				|	ЗаказПоОтветственномуХранениюТовары.Номенклатура КАК Номенклатура,
				|	ЗаказПоОтветственномуХранениюТовары.Количество КАК КоличествоЗаказано,
				
				// максимум Заказано и Есть на Складе по ОТХ
				|	ВЫБОР
				|		КОГДА ЗаказПоОтветственномуХранениюТовары.Количество > ЕСТЬNULL(ЗаказПоОтветственномуХранениюТовары.КоличествоОстаток, 0)
				|			ТОГДА ЕСТЬNULL(ЗаказПоОтветственномуХранениюТовары.КоличествоОстаток, 0)
				|		ИНАЧЕ ЗаказПоОтветственномуХранениюТовары.Количество
				|	КОНЕЦ КАК КоличествоОстаток,
				
				|	ЗаказПоОтветственномуХранениюТовары.Склад КАК Склад
				|ИЗ
				|	(ВЫБРАТЬ
				|		ЗаказПоОтветственномуХранениюТовары.НомерСтроки КАК НомерСтроки,
				|		ЗаказПоОтветственномуХранениюТовары.Номенклатура КАК Номенклатура,
				|		ЗаказПоОтветственномуХранениюТовары.Количество КАК Количество,
				|		Товары.Склад КАК Склад,
				|		Товары.КоличествоОстаток КАК КоличествоОстаток
				|	ИЗ
				|		Документ.ЗаказПоОтветственномуХранению.Товары КАК ЗаказПоОтветственномуХранениюТовары
				|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|				ТоварыОстатки.Номенклатура КАК Номенклатура,
				|				ТоварыОстатки.Склад КАК Склад,
				|				ТоварыОстатки.КоличествоОстаток КАК КоличествоОстаток
				|			ИЗ
				|				ВТ_Товары КАК ТоварыОстатки) КАК Товары
				|			ПО ЗаказПоОтветственномуХранениюТовары.Номенклатура = Товары.Номенклатура
				|	ГДЕ
				|		ЗаказПоОтветственномуХранениюТовары.Ссылка = &ДокументОснование
				|		И ЗаказПоОтветственномуХранениюТовары.Ссылка.Проведен) КАК ЗаказПоОтветственномуХранениюТовары
				|
				|УПОРЯДОЧИТЬ ПО
				|	ЗаказПоОтветственномуХранениюТовары.НомерСтроки
				|ИТОГИ
				|	МАКСИМУМ(КоличествоЗаказано),
				|	СУММА(КоличествоОстаток),
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Склад)
				|ПО
				|	НомерСтроки";
				
				Запрос.УстановитьПараметр("ДокументОснование",Основание);
				Запрос.УстановитьПараметр("ДоговорКонтрагента",Основание.ДоговорКонтрагента);
				Запрос.УстановитьПараметр("Контрагент",Основание.Контрагент);
				
				//отбор по складам только 1 подразделения
				Если Основание.Подразделение.ОбособленноеПодразделение тогда	
					Запрос.Текст = стрЗаменить(Запрос.Текст, "И НЕ Склад.Транзитный","И (Склад.Транзитный И Склад.Подразделение = &Подразделение)");
					Запрос.УстановитьПараметр("Подразделение", Основание.Подразделение);
				КонецЕсли;
				
				ВыборкаТов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаТов.Следующий() Цикл
					выборка = ВыборкаТов.Выбрать();
					КолЗаказано = ВыборкаТов.КоличествоЗаказано;
					//по фифо... по складам
					пока Выборка.Следующий() цикл
						если КолЗаказано=0 тогда
							прервать;
						КонецЕсли;
						
						Если КолЗаказано-Выборка.КоличествоОстаток>=0 тогда
							НоваяСтрока = Товары.Добавить();
							НоваяСтрока.Номенклатура = Выборка.Номенклатура;
							НоваяСтрока.Количество = Выборка.КоличествоОстаток;
							НоваяСтрока.Склад	   = Выборка.Склад;
							КолЗаказано = КолЗаказано - Выборка.КоличествоОстаток;
						иначе
							НоваяСтрока = Товары.Добавить();
							НоваяСтрока.Номенклатура = Выборка.Номенклатура;
							НоваяСтрока.Количество = КолЗаказано;
							НоваяСтрока.Склад	   = Выборка.Склад;
							КолЗаказано = 0;
						КонецЕсли;
					КонецЦикла;	
					
					Если КолЗаказано>0 тогда
						НоваяСтрока = Товары.Добавить();
						НоваяСтрока.Номенклатура = Выборка.Номенклатура;
						НоваяСтрока.Количество = КолЗаказано;
						НоваяСтрока.Склад	   = справочники.Склады.ПустаяСсылка();
						//	Если ВыборкаТов.КоличествоЗаказано>ВыборкаТов.КоличествоОстаток тогда
						сообщить(строка(ВыборкаТов.НомерСтроки)+") "+строка(ВыборкаТов.Номенклатура)+" Количество в документе: "
						+строка(ВыборкаТов.КоличествоЗаказано)+" больше, чем на остатках ОТХ: "+строка(ВыборкаТов.КоличествоЗаказано - КолЗаказано)
						+" шт. Не хватает "+строка(КолЗаказано)+" шт.", СтатусСообщения.Внимание);
					КонецЕсли;
					
				КонецЦикла;    //ВыборкаТов
				
			КонецЕсли;
			
			
		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваров") Тогда  //Плотников+++
			
			Если не Основание.Проведен Тогда 
				Сообщить("Вводить операцию по ответственному хранению можно только на основании проведенной заявки.",СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Док",Основание);
			Запрос.Текст = "ВЫБРАТЬ
			               |	ОперацияПоОтветственномуХранению.Ссылка
			               |ПОМЕСТИТЬ Врем
			               |ИЗ
			               |	Документ.ОперацияПоОтветственномуХранению КАК ОперацияПоОтветственномуХранению
			               |ГДЕ
			               |	ОперацияПоОтветственномуХранению.ДокументОснование = &Док
			               |	И ОперацияПоОтветственномуХранению.Проведен = ИСТИНА
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ТоварыНаОтветственномХраненииОстаткиИОбороты.Номенклатура,
			               |	ТоварыНаОтветственномХраненииОстаткиИОбороты.Склад,
			               |	СУММА(ТоварыНаОтветственномХраненииОстаткиИОбороты.КоличествоОборот) КАК КоличествоОборот,
			               |	СУММА(ТоварыНаОтветственномХраненииОстаткиИОбороты.СтоимостьОборот) КАК СтоимостьОборот,
			               |	ТоварыНаОтветственномХраненииОстаткиИОбороты.ДоговорКонтрагента
			               |ИЗ
			               |	Врем КАК Врем
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.ОстаткиИОбороты(, , Авто, , ) КАК ТоварыНаОтветственномХраненииОстаткиИОбороты
			               |		ПО Врем.Ссылка = ТоварыНаОтветственномХраненииОстаткиИОбороты.Регистратор
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ТоварыНаОтветственномХраненииОстаткиИОбороты.Номенклатура,
			               |	ТоварыНаОтветственномХраненииОстаткиИОбороты.Склад,
			               |	ТоварыНаОтветственномХраненииОстаткиИОбороты.ДоговорКонтрагента";
			Результат = запрос.Выполнить().Выгрузить();
			
			
			Если Результат.Итог("КоличествоОборот") > 0 ТОгда   //По этому документу уже были поступления на ОТХ, нужно выполнить списание с ОТХ
				
				ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.Списание;
				Контрагент = Основание.Контрагент;
				//ДоговорКонтрагента = Основание.Контрагент.ОсновнойДоговорКонтрагента;
				Организация = Справочники.Организации.НайтиПоКоду("00001");
				Комментарий = Основание.Комментарий;
				ДокументОснование = Основание.Ссылка;
				
				//СкладПолучатель   = Основание.СкладПолучатель; 
				Подразделение = Основание.Подразделение;//+++ 11.07.2016
				
				Для Каждого строкаОснование ИЗ Результат Цикл
					Если строкаОснование.КоличествоОборот > 0 Тогда
						НоваяСтрока=Товары.Добавить();
						НоваяСтрока.Номенклатура = строкаОснование.Номенклатура;
						НоваяСтрока.Количество = строкаОснование.КоличествоОборот;
						НоваяСтрока.Склад = строкаОснование.Склад;
						
						//***заполним договор из данных по остаткам
						ДоговорКонтрагента = строкаОснование.ДоговорКонтрагента;
					КонецЕсли;
				КонецЦикла
				
				
			Иначе  //По этому документу не было поступлений на отх
				
				ФормаВыбораСклада = Справочники.Склады.ПолучитьФорму("ФормаВыбора");
				ФормаВыбораСклада.РежимВыбора = Истина;
				Склад = ФормаВыбораСклада.ОткрытьМодально();
				Если ЗначениеНеЗаполнено(склад) Тогда
					Сообщить("Выберите склад!!!",СтатусСообщения.Важное);
					Возврат;
				КонецЕсли;
				
				ВидОперации = Перечисления.ВидыОперацийПоОтветственномуХранению.Поступление;
				Контрагент = Основание.Контрагент;
				ДоговорКонтрагента = Основание.Контрагент.ОсновнойДоговорКонтрагента;
				Организация = Справочники.Организации.НайтиПоКоду("00001");
				Комментарий = Основание.Комментарий;
				ДокументОснование = Основание.Ссылка;
				//СкладПолучатель   = Основание.СкладПолучатель; 
				
				Подразделение = Основание.Подразделение;//+++ 11.07.2016
				
				Для Каждого строкаОснование ИЗ Основание.Товары Цикл
					Если СтрокаОснование.Статус = Перечисления.СтатусыСтрокЗаказа.Подтвержден Тогда
						НоваяСтрока=Товары.Добавить();
						НоваяСтрока.Номенклатура = строкаОснование.Номенклатура;
						НоваяСтрока.Количество = строкаОснование.Количество;
						НоваяСтрока.Склад = Склад;
					КонецЕсли;
				КонецЦикла
				
			КонецЕсли;
			
		КонецЕсли;	
		
		ЗаполнитьВесНетто(Товары); // сразу вес чтобы видеть
		
	# КонецЕсли

КонецПроцедуры



Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	# Если Клиент Тогда
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказПоОтветственномуХранению") Тогда    //Плотников+++
			Если не ЗначениеНеЗаполнено(ДокументОснование) И ДокументОснование.ВидОперации<>ВидОперации Тогда 
				Сообщить("Вид операции должен соответствовать заказу.",СтатусСообщения.Важное);
				Отказ=Истина;
			КонецЕсли;
		КонецЕсли;
	# КонецЕсли
	
		
		Если  ЗначениеНеЗаполнено(ДокументОснование) И не ВидОперации=Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами  Тогда
			  ДоговорКонтрагента=Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;	
		
		
	//+++( 11.07.2016 - для роботов!	
	Если не Отказ Тогда   
		Если сокрЛП(номер)="" Тогда
			СтрокаПрефикс = "ТК";
			Если подразделение.ПрефиксИБ<>"" Тогда
				СтрокаПрефикс = подразделение.ПрефиксИБ;
			КонецЕсли;	
			ЭтотОбъект.УстановитьНовыйНомер(СтрокаПрефикс);	
		КонецЕсли;	
	КонецЕсли;	
	//+++)	

		
	// проверка соответствия веса	
	ВесИтого=ПолучитьОбщийВесНетто(Товары);
	Если ВесИтого<>ОбщийВес Тогда
		ЗаполнитьВесНетто(Товары);
	ОбщийВес=ВесИтого;
	КонецЕсли;
			
	//БАЛАНС (15.03.2010)                       
	//
 	ЗарегистрироватьОбъект(ЭтотОбъект,Отказ,мПроведениеИзФормы);

		//Если ВидОперации= Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами Тогда
		//	Сообщить("Данный вид операции не поддерживается");
		//	Отказ=Истина;
		//КонецЕсли;	
	КонецПроцедуры

Процедура ПолучитьСтоимостьНоменклатуры	 (ТабТовары)
		
		Если ЗначениеНеЗаполнено(ДокументОснование) И ВидОперации<>Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами  Тогда
			 Возврат;
		КонецЕсли ;	
		
		Если ВидОперации=Перечисления.ВидыОперацийПоОтветственномуХранению.Поступление Тогда	
			
			Запрос= Новый Запрос;	
			
			Запрос.Текст="ВЫБРАТЬ 
			|ТаблицаТовары.Номенклатура,
			|ТаблицаТовары.Склад,
			|ТаблицаТовары.Количество,
			|ВЫБОР КОГДА ТаблицаТовары.Количество=ЕстьNULL(ЗаказПоОтветственномуХранению.Количество,0) ТОГДА  
			| ЕстьNULL(ЗаказПоОтветственномуХранению.Сумма,0) 
			| ИНАЧЕ ЕстьNULL(ЗаказПоОтветственномуХранению.Цена,0)*ТаблицаТовары.Количество
			| КОНЕЦ Стоимость ИЗ
			|(ВЫБРАТЬ
			|Номенклатура, Склад, СУММА(Количество) Количество
			|ИЗ  Документ.ОперацияПоОтветственномуХранению.Товары
			|ГДЕ Ссылка = &Ссылка 
			| СГРУППИРОВАТЬ ПО Номенклатура,Склад) ТаблицаТовары
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|(ВЫБРАТЬ
			|	Номенклатура,
			|	Количество,
			|	Цена,
			|	Сумма
			|ИЗ
			|	Документ.ЗаказПоОтветственномуХранению.Товары
			|ГДЕ Ссылка = &Заказ) ЗаказПоОтветственномуХранению
			| ПО ТаблицаТовары.Номенклатура=ЗаказПоОтветственномуХранению.Номенклатура";
			
			Запрос.УстановитьПараметр("Ссылка",Ссылка);
			Запрос.УстановитьПараметр("Заказ",ДокументОснование);
			
			ТабТовары = Запрос.Выполнить().Выгрузить();
			
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийПоОтветственномуХранению.Списание 
			ИЛИ ВидОперации=Перечисления.ВидыОперацийПоОтветственномуХранению.ПеремещениеМеждуСкладами  Тогда	
			Запрос=Новый Запрос;
			Запрос.Текст =  "ВЫБРАТЬ
			                |	ТаблицаТовары.Номенклатура,
			                |	ТаблицаТовары.Склад,
			                |	ТаблицаТовары.Количество,
			                |	ВЫБОР
			                |		КОГДА ЕСТЬNULL(ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток, 0) > 0
			                |			ТОГДА ТаблицаТовары.Количество * ЕСТЬNULL(ТоварыНаОтветственномХраненииОстатки.СтоимостьОстаток, 0) / ЕСТЬNULL(ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток, 0)
			                |		ИНАЧЕ 0
			                |	КОНЕЦ КАК Стоимость
			                |ИЗ
			                |	(ВЫБРАТЬ
			                |		ОперацияПоОтветственномуХранениюТовары.Номенклатура КАК Номенклатура,
			                |		ОперацияПоОтветственномуХранениюТовары.Склад КАК Склад,
			                |		СУММА(ОперацияПоОтветственномуХранениюТовары.Количество) КАК Количество
			                |	ИЗ
			                |		Документ.ОперацияПоОтветственномуХранению.Товары КАК ОперацияПоОтветственномуХранениюТовары
			                |	ГДЕ
			                |		ОперацияПоОтветственномуХранениюТовары.Ссылка = &Ссылка
			                |	
			                |	СГРУППИРОВАТЬ ПО
			                |		ОперацияПоОтветственномуХранениюТовары.Номенклатура,
			                |		ОперацияПоОтветственномуХранениюТовары.Склад) КАК ТаблицаТовары
			                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
			                |				&КонДата,
			                |				Контрагент = &Контрагент
			                |					И ДоговорКонтрагента = &ДоговорКонтрагента
			                |					И Склад В
			                |						(ВЫБРАТЬ
			                |							ОперацияПоОтветственномуХранениюТовары.Склад
			                |						ИЗ
			                |							Документ.ОперацияПоОтветственномуХранению.Товары КАК ОперацияПоОтветственномуХранениюТовары
			                |						ГДЕ
			                |							ОперацияПоОтветственномуХранениюТовары.Ссылка = &Ссылка)) КАК ТоварыНаОтветственномХраненииОстатки
			                |		ПО ТаблицаТовары.Номенклатура = ТоварыНаОтветственномХраненииОстатки.Номенклатура
			                |			И ТаблицаТовары.Склад = ТоварыНаОтветственномХраненииОстатки.Склад";
			 
			Запрос.УстановитьПараметр("ДоговорКонтрагента",Ссылка.ДоговорКонтрагента);
			Запрос.УстановитьПараметр("Контрагент",Ссылка.Контрагент);
			Запрос.УстановитьПараметр("Ссылка",Ссылка);
			Запрос.УстановитьПараметр("КонДата",Новый Граница(МоментВремени(),ВидГраницы.Исключая));
			              
			ТабТовары = Запрос.Выполнить().Выгрузить();

			
	КонецЕсли;
	 
КонецПроцедуры	

Функция ПолучитьСтоимостьНоменклатурыВозврат(ТабТовары)
	ТабТовары.Свернуть("Номенклатура,СерияНоменклатуры, Склад","Количество,Вес,Стоимость");
	
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЗаявкаНаВозвратТоваровТовары.Номенклатура,
			//15.01.2016 ---- на возврат не более, чем есть "+" остаток
	             |	СУММА(Выбор когда ЗаявкаНаВозвратТоваровТовары.Количество>ЕстьNull(Продажи.Количество,0)
				 |		тогда ЕстьNull(Продажи.Количество,0) 
				 |		иначе ЗаявкаНаВозвратТоваровТовары.Количество Конец) как Количество,
				 
	         //    |	ЗаявкаНаВозвратТоваровТовары.Реализация КАК ДокументПартии,
	             |	ЗаявкаНаВозвратТоваровТовары.СкладРеализации КАК Склад,
	        //     |	ЗаявкаНаВозвратТоваровТовары.Реализация.Сделка КАК Заказ,
		  //29.12.2015		 
	      //     |	РеализацияТоваровУслугТовары.Цена,
		  		 | ВЫБОР
		         |       КОГДА ЕСТЬNULL(Продажи.Цена, 0) > 0
			     |             ТОГДА ЕСТЬNULL(Продажи.Цена, 0)
		         |             ИНАЧЕ ВЫБОР
				 |                        КОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоОстаток, 0) > 0
				 |	          ТОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.СуммаВзаиморасчетовОстаток, 0) / ТоварыПереданныеОстатки.КоличествоОстаток
				 |       ИНАЧЕ 0
			     |       КОНЕЦ
	             |   КОНЕЦ КАК Цена 
	            // |	РеализацияТоваровУслугТовары.СтавкаНДС,
	            // |	РеализацияТоваровУслугТовары.ЕдиницаИзмерения,
	            // |	РеализацияТоваровУслугТовары.ЕдиницаИзмеренияМест,
	            // |	РеализацияТоваровУслугТовары.Коэффициент КАК Коэффициент,
	             //|	ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество
	             |ИЗ
	             |	Документ.ЗаявкаНаВозвратТоваров.Товары КАК ЗаявкаНаВозвратТоваровТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |		ПО ЗаявкаНаВозвратТоваровТовары.Реализация = РеализацияТоваровУслугТовары.Ссылка
	             |			И ЗаявкаНаВозвратТоваровТовары.Номенклатура = РеализацияТоваровУслугТовары.Номенклатура
				 |	//ПродажиЦена
	             |ГДЕ
	             |	ЗаявкаНаВозвратТоваровТовары.Ссылка = &Ссылка
			     |   И ЗаявкаНаВозвратТоваровТовары.ДокументВозврата = ЗНАЧЕНИЕ(Документ.ВозвратТоваровОтПокупателя.ПустаяСсылка)
			     |  И ВЫБОР
			     |         КОГДА ЕСТЬNULL(Продажи.Цена, 0) > 0
				 |               ТОГДА ЕСТЬNULL(Продажи.Цена, 0)
			     |               ИНАЧЕ ВЫБОР
				 |	                       КОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоОстаток, 0) > 0
				 |		                   ТОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.СуммаВзаиморасчетовОстаток, 0) / ТоварыПереданныеОстатки.КоличествоОстаток
				 |	                       ИНАЧЕ 0
				 |               КОНЕЦ
				 |         КОНЕЦ > 0
				 |СГРУППИРОВАТЬ ПО
				 |	ЗаявкаНаВозвратТоваровТовары.Номенклатура,
				 |   ЗаявкаНаВозвратТоваровТовары.СкладРеализации,
				 |ВЫБОР
				 |       КОГДА ЕСТЬNULL(Продажи.Цена, 0) > 0
				 |             ТОГДА ЕСТЬNULL(Продажи.Цена, 0)
				 |             ИНАЧЕ ВЫБОР
				 |                        КОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоОстаток, 0) > 0
				 |	          ТОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.СуммаВзаиморасчетовОстаток, 0) / ТоварыПереданныеОстатки.КоличествоОстаток
				 |       ИНАЧЕ 0
				 |       КОНЕЦ
				 |   КОНЕЦ  			 
				 |  " ;
				 //|ИТОГИ ПО
				 //|	Заказ";

	  				 
//29.12.2015----------------------------------------------------------------------------
табл = ДокументОснование.товары.Выгрузить();
табл.Свернуть("Реализация"); // защита от дублей
СписокРеализаций = табл.ВыгрузитьКолонку("Реализация");	

//табл2= ДокументОснование.товары.Выгрузить();
//интересуют товары только из самой Операции!! а не из заявки
табл2= ТабТовары.Скопировать();  
табл2.Свернуть("Номенклатура"); // защита от дублей
СписокНом = табл2.ВыгрузитьКолонку("Номенклатура");	

N = СписокРеализаций.Количество();
	Если N>0 тогда
	Запрос.Текст = стрЗаменить(Запрос.Текст,"//ПродажиЦена", "
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|
	|ВЫБРАТЬ
	|	ПродажиОбороты.ДокументПродажи КАК Реализация,
	|	ПродажиОбороты.Номенклатура,
	//15.01.2016
	|	СУММА(ПродажиОбороты.КоличествоОборот) как Количество,
	|	ВЫБОР
	|		КОГДА СУММА(ПродажиОбороты.КоличествоОборот) > 0
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ПродажиОбороты.СтоимостьОборот) / СУММА(ПродажиОбороты.КоличествоОборот) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&НачДата, ,Авто ,
	//|			ДокументПродажи В (&СписокРеализаций)
	|				Номенклатура В (&СписокНом)) КАК ПродажиОбороты
	|ГДЕ ПродажиОбороты.Регистратор В (&СписокРеализаций)		
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.ДокументПродажи,
	|	ПродажиОбороты.Номенклатура
	
	|) как Продажи 
	|	ПО
	|	ЗаявкаНаВозвратТоваровТовары.Реализация = Продажи.Реализация
	|	И ЗаявкаНаВозвратТоваровТовары.Номенклатура = Продажи.Номенклатура
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыПереданные.Остатки КАК ТоварыПереданныеОстатки
	|	ПО ЗаявкаНаВозвратТоваровТовары.Номенклатура = ТоварыПереданныеОстатки.Номенклатура
	|		И ЗаявкаНаВозвратТоваровТовары.Реализация.Сделка = ТоварыПереданныеОстатки.Сделка		
	|"); 
	
	    начДата = ЭтотОбъект.Дата - 1;
		для i=0 по СписокРеализаций.Количество()-1 цикл
			если СписокРеализаций[i].Дата < начДата тогда
				начДата = СписокРеализаций[i].Дата-1;
			КонецЕсли;
		КонецЦикла;	
		конДата = ТекущаяДата();
		
		//смотрим обороты за 3 месяца
		Запрос.УстановитьПараметр("СписокРеализаций", СписокРеализаций);
		Запрос.УстановитьПараметр("СписокНом", СписокНом);
		
		Запрос.УстановитьПараметр("НачДата", ДобавитьМесяц(начДата,-2) ); // за 3 месяца до даты документа-основания
		Запрос.УстановитьПараметр("КонДата", КонДата );
		# Если Клиент Тогда

	Сообщить("Цены сформированы по регистру ""Продажи"" за период с "+формат(начДата,"ДЛФ=DD")+" по "+формат(КонДата,"ДЛФ=DD")+"
			 |  c отборот по товарам " +?(N=1,"из документа: "+строка(СписокРеализаций[0]), "из списка "+строка(N)+" реализаций") ); 
		# КонецЕсли
	 
	Иначе //быть такого не может!
		Запрос.Текст  = стрЗаменить(Запрос.Текст ,"ЕстьNull(Продажи.Цена,0)", "РеализацияТоваровУслугТовары.Цена");
		# Если Клиент Тогда

		Сообщить("Цены сформированы из реализаций"); 
		 # КонецЕсли
	КонецЕсли;
//----------------------------------------------------------------------------

    КолДок = 0;
	Запрос.УстановитьПараметр("Ссылка",ДокументОснование);
	ВыборкаДетали=Запрос.Выполнить().Выбрать();
	//Пока ВыборкаЗаказ.Следующий() Цикл
	//	ВыборкаДетали=ВыборкаЗаказ.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			если ВыборкаДетали.Цена <=0  тогда //29.12.2015
				# Если Клиент Тогда
					Сообщить("По товару: "+строка(ВыборкаДетали.Номенклатура.Код)+" - "+строка(ВыборкаДетали.Номенклатура)
					+" цена равна "+строка(ВыборкаДетали.Цена)+"р.", СтатусСообщения.Внимание);
				# КонецЕсли
				продолжить;
			КонецЕсли;
			Отбор = Новый Структура;
			ОТБОР.Вставить("Номенклатура",ВыборкаДетали.Номенклатура);			
			СтрокаТабличнойЧасти = ТабТовары.НайтиСтроки(отбор);
			Если СтрокаТабличнойЧасти.Количество() > 0 Тогда
				//СтрокаТабличнойЧасти[0].стоимость = ВыборкаДетали.Цена*ВыборкаДетали.Количество;
				СтрокаТабличнойЧасти[0].стоимость = ВыборкаДетали.Цена*СтрокаТабличнойЧасти[0].Количество;
			КонецЕсли;
		КонецЦикла;
	//КонецЦикла;
	
	Возврат ТабТовары;
КонецФункции

// Сакулина
Функция ПолучитьСтоимостьНоменклатурыЗаявкаНаБрак(ТабТовары)
	Для каждого СтрТовар из ТабТовары Цикл
		СтрТовар.Стоимость = 1* СтрТовар.Количество;
	КонецЦикла;
	Возврат ТабТовары;
КонецФункции
// Сакулина


Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
    # Если Клиент Тогда
	Если Не Проведен Тогда
		Предупреждение("Документ можно распечатать только после его проведения!");
		Возврат;
	ИначеЕсли Не РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;
	Если Не ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если ТипЗнч(ИмяМакета) = Тип("СправочникСсылка.ДополнительныеПечатныеФормы") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = ИмяМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = Ссылка;
		ТабДокумент = Обработка.Печать();
	
	КонецЕсли; 

	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()));
    # КонецЕсли

КонецПроцедуры // Печать

Функция ПолучитьСписокПечатныхФорм() Экспорт
   # Если Клиент Тогда
	СписокМакетов = Новый СписокЗначений;
   ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
	Возврат СписокМакетов;
   # КонецЕсли
КонецФункции // ПолучитьСписокПечатныхФорм()




Процедура ЗаполнитьВесВТоварах() Экспорт
	
	Для сч=0 по Товары.Количество()-1 Цикл
		Стр = Товары.Получить(сч);
		ЗаполнитьВесВТабличнойЧасти(Стр);	
	КонецЦикла;
	
КонецПроцедуры 

Процедура ЗаполнитьВесВТабличнойЧасти(СтрокаТабличнойЧасти) Экспорт
	ВесИтого=0;
	СтрокаТабличнойЧасти.Вес	= СтрокаТабличнойЧасти.Количество*ПолучитьВесНетто(СтрокаТабличнойЧасти.Номенклатура);
	ВесИтого=ВесИтого+СтрокаТабличнойЧасти.Вес;
	ОбщийВес 					= ВесИтого;
	
//	ДанныеПоПогрузкеПанельВесПропорциональноОбщ();
	
КонецПроцедуры



//Процедура ДвиженияРегистровГрузчикиИКладовщики(Отказ)
//	
//		
//		
//КонецПроцедуры

//БАЛАНС (15.03.2010)                       
//
мПроведениеИзФормы = Ложь;
ТаблицаОстатковПоСкладам = Новый ТаблицаЗначений;
