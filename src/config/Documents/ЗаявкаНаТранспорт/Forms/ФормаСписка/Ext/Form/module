

Процедура ДокументСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Статус = Перечисления.СтатусыЗаявокНаТранспорт.Подготовлен Тогда
		 ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый;
		 
	ИначеЕсли ДанныеСтроки.Статус = Перечисления.СтатусыЗаявокНаТранспорт.ПеревозчикВыбран и НайтиВзаданияхНаОтгрузку(ДанныеСтроки.Ссылка) Тогда
		 ОформлениеСтроки.ЦветФона = WebЦвета.БледноСиреневый;	
	ИначеЕсли ДанныеСтроки.Статус = Перечисления.СтатусыЗаявокНаТранспорт.ПеревозчикВыбран и КонецДня(ДанныеСтроки.ДатаДоставкиПо) < ТекущаяДата() Тогда
		 ОформлениеСтроки.ЦветФона = WebЦвета.СветлоРозовый;
	ИначеЕсли ДанныеСтроки.Статус = Перечисления.СтатусыЗаявокНаТранспорт.ПеревозчикВыбран Тогда  
		 ОформлениеСтроки.ЦветФона = WebЦвета.Роса;
	
	ИначеЕсли ДанныеСтроки.Статус = Перечисления.СтатусыЗаявокНаТранспорт.Доставлен или ДанныеСтроки.Статус = Перечисления.СтатусыЗаявокНаТранспорт.Отменен Тогда
		 ОформлениеСтроки.ЦветФона = WebЦвета.LightGray;  
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	// Миронычев
	ЭлементОтбора = Отбор.Найти("ПометкаУдаления");
	Если  ЭлементОтбора = Неопределено Тогда
		ЭлементОтбора = Отбор.Добавить("ПометкаУдаления"); // если нет - добавим в список отборов
	КонецЕсли;
	
	//по настройке пользователя !!!
	Если НЕ ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ДокументыРазрешитьПросмотрПомеченныхНаУдаление") тогда
		ЭлементОтбора.Установить(Ложь); // установим видимость только НЕудаленных
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.ПометкаУдаления.Доступность = ЛОЖЬ;
	иначе // можно видеть удаленные элементы
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.ПометкаУдаления.Доступность = Истина;
	КонецЕсли;
	//КонецМиронычев
	
	Если РольДоступна("Логисты") Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Утвердить.Доступность = Истина;
	Иначе
		ЭлементыФормы.ДействияФормы.Кнопки.Отменить.Доступность = Истина;
	КонецЕсли;
	ДокументСписок.Порядок.Установить("Статус Убыв, Дата Возр");
	//ЭлементыФормы.Список.НастройкаПорядка.Контрагент.Доступность=Истина;
	
	Если не РольДоступна("Логисты") и не РольДоступна("ПолныеПрава") Тогда
	    Отбор["Ответственный"].Использование = Истина;
        Отбор["Ответственный"].ВидСравнения = ВидСравнения.Равно;
	    Отбор["Ответственный"].Значение = ПараметрыСеанса.ТекущийПользователь;
	    ЭлементыФормы.ДокументСписок.НастройкаОтбора["Ответственный"].Доступность = Ложь;
	КонецЕсли;
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда 
		Если не РольДоступна("ПравоЗавершенияРаботыПользователей") Тогда
			Отбор["Подразделение"].Использование = Истина;
			Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
			Отбор["Подразделение"].Значение = ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
			ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыУтвердить(Кнопка)
	Форма = Документы.ЗаявкаНаТранспорт.ПолучитьФорму("Форма");
	Рез = Форма.ОткрытьМодально();
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка.Статус = Перечисления.СтатусыЗаявокНаТранспорт.Подготовлен Тогда
	    Об = ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка.ПолучитьОбъект();
		об.ФактическаяДата = Рез.Дата;
		об.Сумма = Рез.сумма;
	    об.статус = Перечисления.СтатусыЗаявокНаТранспорт.ПеревозчикВыбран;
		об.Выполнил = глТекущийПользователь;
	    Об.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыДействие11(Кнопка)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОтображатьСетку = Ложь;
	Макет = Документы.ЗаявкаНаТранспорт.ПолучитьМакет("Макет");	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	ОбластьЗаголовок.Параметры.Менеджер = глТекущийПользователь; 
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("польз",глТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкаНаТранспорт.Представление,
	               |	ЗаявкаНаТранспорт.Направление,
	               |	ЗаявкаНаТранспорт.Выполнил,
	               |	ЗаявкаНаТранспорт.ДатаДоставкиС КАК ДатаДоставкиС,
	               |	ЗаявкаНаТранспорт.ДатаДоставкиПо,
	               |	ЗаявкаНаТранспорт.ФактическаяДата,
	               |	ЗаявкаНаТранспорт.Сумма,
	               |	ЗаявкаНаТранспорт.Статус
	               |ИЗ
	               |	Документ.ЗаявкаНаТранспорт КАК ЗаявкаНаТранспорт
	               |ГДЕ
	               |	ЗаявкаНаТранспорт.Ответственный = &польз
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаДоставкиС";
	рез = запрос.Выполнить().Выгрузить();
	
	для Каждого стр из рез цикл
		ОбластьСтрокаТаблицы.Параметры.заявка = стр.Представление + ", Маршрут:" + стр.Направление;
		ОбластьСтрокаТаблицы.Параметры.статус = стр.Статус;
		ОбластьСтрокаТаблицы.Параметры.логист = стр.Выполнил;
		ОбластьСтрокаТаблицы.Параметры.сумма = стр.Сумма;
		ОбластьСтрокаТаблицы.Параметры.Дата1 = строка(Формат(стр.ДатаДоставкиС,"ДФ=dd.MM.yyyy")) + " - " + строка(Формат(стр.ДатаДоставкиПо,"ДФ=dd.MM.yyyy"));
		ОбластьСтрокаТаблицы.Параметры.Дата2 = Формат(стр.ФактическаяДата,"ДФ=dd.MM.yyyy");
		ТабДок.Вывести(ОбластьСтрокаТаблицы);
	КонецЦикла;
	
	ТабДок.Показать();
	
КонецПроцедуры

Функция НайтиВзаданияхНаОтгрузку(Док)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Док",Док);
	Запрос.УстановитьПараметр("Дата1",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Дата2",КонецДня(ТекущаяДата()));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаданиеНаОтгрузкуЗаявкиНаТранспорт.Ссылка
	               |ИЗ
	               |	Документ.ЗаданиеНаОтгрузку.ЗаявкиНаТранспорт КАК ЗаданиеНаОтгрузкуЗаявкиНаТранспорт
	               |ГДЕ
	               |	ЗаданиеНаОтгрузкуЗаявкиНаТранспорт.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |	И ЗаданиеНаОтгрузкуЗаявкиНаТранспорт.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	               |	И ЗаданиеНаОтгрузкуЗаявкиНаТранспорт.Заявка = &Док
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаданиеНаОтгрузкуОбратки.Ссылка
	               |ИЗ
	               |	Документ.ЗаданиеНаОтгрузку.Обратки КАК ЗаданиеНаОтгрузкуОбратки
	               |ГДЕ
	               |	ЗаданиеНаОтгрузкуОбратки.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |	И ЗаданиеНаОтгрузкуОбратки.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	               |	И ЗаданиеНаОтгрузкуОбратки.ДокументОснование = &Док";
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() > 0 Тогда
		Возврат Истина;
	Иначе	
	    Возврат Ложь;
	КонецЕсли;
КонецФункции

Процедура ДействияФормыОтменить(Кнопка)
	//Форма = Документы.ЗаявкаНаТранспорт.ПолучитьФорму("Форма");
	//Рез = Форма.ОткрытьМодально();
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка.Статус = Перечисления.СтатусыЗаявокНаТранспорт.Подготовлен и ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка.ответственный = глТекущийПользователь Тогда
	    Об = ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка.ПолучитьОбъект();
		//об.ФактическаяДата = Рез.Дата;
		//об.Сумма = Рез.сумма;
	    об.статус = Перечисления.СтатусыЗаявокНаТранспорт.Отменен;
		об.Выполнил = глТекущийПользователь;
	    Об.Записать();
	КонецЕсли;

КонецПроцедуры

Процедура ДействияФормыСоздатьЗаданиеНаТранспорт(Кнопка)
	ДанныеЗаполнения = ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка;
	док = Документы.ЗаданиеНаТранспорт.СоздатьДокумент();
	
	док.Дата = ТекущаяДата();
	док.Организация = Справочники.Организации.НайтиПоКоду("00001");
	док.ВесМакс = ДанныеЗаполнения.Вес;
	док.ЗаявкаНаТранспорт = ДанныеЗаполнения.Ссылка;
	док.Направление = ДанныеЗаполнения.Направление;
	док.ОбъемМакс = ДанныеЗаполнения.Объем;
	док.Контрагент = ДанныеЗаполнения.Контрагент;
	док.СуммаДокумента = ДанныеЗаполнения.Сумма;
	док.Километров = ДанныеЗаполнения.Пробег;
	
	
	
	док.Выполнено = ЛОЖЬ;
	
	
	док.ДокументыСданыЛогистам = ЛОЖЬ;
	док.ВсеДокументыСданыВБухгалтерию = ЛОЖЬ;
	//док.Тариф=0;
	//док.Километров=0;
	
	Форма = Док.ПолучитьФорму("ФормаДокумента");
	Форма.Открыть();

КонецПроцедуры

Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого стр из ОформленияСтрок Цикл
		Данные = стр.ДанныеСтроки.Ссылка;
		
		Если ЗначениеЗаполнено(данные.Документотгрузки) и ТипЗнч(данные.Документотгрузки) =  Тип("ДокументСсылка.ЗаданиеНаОтгрузку") тогда
			Если данные.Документотгрузки.ДатаВыгрузкиПрямогоРейса <> Дата(1,1,1) Тогда
			стр.Ячейки.Выгрузка.значение = данные.Документотгрузки.ДатаВыгрузкиПрямогоРейса;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры



