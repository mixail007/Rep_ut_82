
Процедура ДатаПриИзменении(Элемент)
	Сформировать();
КонецПроцедуры

Процедура ПриОткрытии()
	ТолькоСобственныеЗаявки = Истина;
	Если РольДоступна("полныеПрава") Тогда
		ЭлементыФормы.ТолькоСобственныеЗаявки.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура ТолькоСобственныеЗаявкиПриИзменении(Элемент)
	Сформировать();
КонецПроцедуры

Процедура Сформировать()
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	Макет = Документы.ЗаявкаНаТранспорт.ПолучитьМакет("Макет");	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	ОбластьСтарые = Макет.ПолучитьОбласть("Старые");
	ОбластьСегодня = Макет.ПолучитьОбласть("Сегодня");

	
	ОбластьЗаголовок.Параметры.Менеджер = глТекущийПользователь; 
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ТабДок.Вывести(ОбластьСтарые);

	ТабДок.Вывести(ОбластьШапкаТаблицы);

	Если Дата< НачалоДня(ТекущаяДата()) Тогда
		
		Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("польз",глТекущийПользователь);
	Запрос.УстановитьПараметр("дата",Дата);
	Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыЗаявокНаТранспорт.Доставлен);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкаНаТранспорт.Представление,
	               |	ЗаявкаНаТранспорт.Направление,
	               |	ЗаявкаНаТранспорт.Выполнил,
	               |	ЗаявкаНаТранспорт.ДатаДоставкиС КАК ДатаДоставкиС,
	               |	ЗаявкаНаТранспорт.ДатаДоставкиПо,
	               |	ЗаявкаНаТранспорт.ФактическаяДата,
	               |	ЗаявкаНаТранспорт.Сумма,
	               |	ЗаявкаНаТранспорт.Статус,
				   |	ЗаявкаНаТранспорт.Ответственный,
	               |	ЗаявкаНаТранспорт.Номер,
				   |	ЗаявкаНаТранспорт.объем,
	               |	ЗаявкаНаТранспорт.Ссылка
	               |ИЗ
	               |	Документ.ЗаявкаНаТранспорт КАК ЗаявкаНаТранспорт
	               |ГДЕ
				   |	 (&Дата Между ЗаявкаНаТранспорт.ДатаДоставкиС и ЗаявкаНаТранспорт.ДатаДоставкиПо или ЗаявкаНаТранспорт.ДатаДоставкиС = &Дата)
	               //|	И ЗаявкаНаТранспорт.ДатаДоставкиС <= &Дата
	               |	И ЗаявкаНаТранспорт.Ответственный = &польз
				   |	И ЗаявкаНаТранспорт.Статус = &Статус
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаДоставкиПо";
				   
				   Если не ТолькоСобственныеЗаявки Тогда
					   Запрос.Текст  = СтрЗаменить(Запрос.Текст,"И ЗаявкаНаТранспорт.Ответственный = &польз","");
				   КонецЕсли;
				   
	рез = запрос.Выполнить().Выгрузить();
	Напечатал = Ложь;

	для Каждого стр из рез цикл
		//если стр.ДатаДоставкиПо >= НачалоДня(Дата) и не Напечатал Тогда
		//	ТабДок.Вывести(ОбластьСегодня);
		//	Напечатал = Истина;
		//КонецЕсли;
		ОбластьСтрокаТаблицы.Параметры.заявка = стр.Представление + ", Маршрут:" + стр.Направление;
		ОбластьСтрокаТаблицы.Параметры.Ссылка = стр.Ссылка;
		ОбластьСтрокаТаблицы.Параметры.статус = "Доставлена";
		ОбластьСтрокаТаблицы.Параметры.объем = стр.объем;
		ОбластьСтрокаТаблицы.Параметры.Ответственный = стр.Ответственный;
		ОбластьСтрокаТаблицы.Параметры.Номер = стр.Номер;
		ОбластьСтрокаТаблицы.Параметры.логист = стр.Выполнил;
		ОбластьСтрокаТаблицы.Параметры.сумма = стр.Сумма;
		ОбластьСтрокаТаблицы.Параметры.Дата1 = строка(Формат(стр.ДатаДоставкиС,"ДФ=dd.MM.yyyy")) + " - " + строка(Формат(стр.ДатаДоставкиПо,"ДФ=dd.MM.yyyy"));
		ОбластьСтрокаТаблицы.Параметры.Дата2 = Формат(стр.ФактическаяДата,"ДФ=dd.MM.yyyy");
		//если не (Дата > ТекущаяДата() и КонецДня(стр.ДатаДоставкиПо) > ТекущаяДата() и стр.ДатаДоставкиС < Дата) Тогда
		//	Если не (Дата<НачалоДня(ТекущаяДата()) и КонецДня(стр.ДатаДоставкиПо) < ТекущаяДата()) ТОгда
		//		Если не (стр.ДатаДоставкиС <> стр.ДатаДоставкиПО и ТекущаяДата() < КонецДня(стр.ДатаДоставкиПО) и ТекущаяДата() > стр.ДатаДоставкиС и НачалоДня(ТекущаяДата()) <> Дата) Тогда
		            ТабДок.Вывести(ОбластьСтрокаТаблицы);
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЕсли;
	КонецЦикла;
	ЭлементыФормы.Реестр.Очистить();
	ЭлементыФормы.Реестр.толькоПросмотр = истина;
	ЭлементыФормы.Реестр.вывести(ТабДок);

		
	Иначе
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("польз",глТекущийПользователь);
	Запрос.УстановитьПараметр("дата",КонецДня(Дата));
	Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыЗаявокНаТранспорт.Доставлен);
	Запрос.УстановитьПараметр("Статус2",Перечисления.СтатусыЗаявокНаТранспорт.Отменен);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкаНаТранспорт.Представление,
	               |	ЗаявкаНаТранспорт.Направление,
	               |	ЗаявкаНаТранспорт.Выполнил,
	               |	ЗаявкаНаТранспорт.ДатаДоставкиС КАК ДатаДоставкиС,
	               |	ЗаявкаНаТранспорт.ДатаДоставкиПо,
	               |	ЗаявкаНаТранспорт.ФактическаяДата,
	               |	ЗаявкаНаТранспорт.Сумма,
	               |	ЗаявкаНаТранспорт.Статус,
				   |	ЗаявкаНаТранспорт.Ответственный,
	               |	ЗаявкаНаТранспорт.Номер,
				   |	ЗаявкаНаТранспорт.объем,
	               |	ЗаявкаНаТранспорт.Ссылка
	               |ИЗ
	               |	Документ.ЗаявкаНаТранспорт КАК ЗаявкаНаТранспорт
	               |ГДЕ
				   |	(ЗаявкаНаТранспорт.ДатаДоставкиПо <= &Дата или ЗаявкаНаТранспорт.ДатаДоставкиС <= &Дата)
	               //|	И ЗаявкаНаТранспорт.ДатаДоставкиС <= &Дата
	               |	И ЗаявкаНаТранспорт.Ответственный = &польз
				   |	И ЗаявкаНаТранспорт.Статус <> &Статус
				    |	И ЗаявкаНаТранспорт.Статус <> &Статус2
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаДоставкиПо";
				   
				   Если не ТолькоСобственныеЗаявки Тогда
					   Запрос.Текст  = СтрЗаменить(Запрос.Текст,"И ЗаявкаНаТранспорт.Ответственный = &польз","");
				   КонецЕсли;
				   
	рез = запрос.Выполнить().Выгрузить();
	Напечатал = Ложь;

	для Каждого стр из рез цикл
		если стр.ДатаДоставкиПо >= НачалоДня(Дата) и не Напечатал Тогда
			ТабДок.Вывести(ОбластьСегодня);
			Напечатал = Истина;
		КонецЕсли;
		ОбластьСтрокаТаблицы.Параметры.заявка = стр.Представление + ", Маршрут:" + стр.Направление;
		ОбластьСтрокаТаблицы.Параметры.Ссылка = стр.Ссылка;
		ОбластьСтрокаТаблицы.Параметры.статус = стр.Статус;
		ОбластьСтрокаТаблицы.Параметры.объем = стр.объем;
		ОбластьСтрокаТаблицы.Параметры.Ответственный = стр.Ответственный;
		ОбластьСтрокаТаблицы.Параметры.Номер = стр.Номер;
		ОбластьСтрокаТаблицы.Параметры.логист = стр.Выполнил;
		ОбластьСтрокаТаблицы.Параметры.сумма = стр.Сумма;
		ОбластьСтрокаТаблицы.Параметры.Дата1 = строка(Формат(стр.ДатаДоставкиС,"ДФ=dd.MM.yyyy")) + " - " + строка(Формат(стр.ДатаДоставкиПо,"ДФ=dd.MM.yyyy"));
		ОбластьСтрокаТаблицы.Параметры.Дата2 = Формат(стр.ФактическаяДата,"ДФ=dd.MM.yyyy");
		если не (Дата > ТекущаяДата() и КонецДня(стр.ДатаДоставкиПо) > ТекущаяДата() и стр.ДатаДоставкиС < Дата) Тогда
			Если не (Дата<НачалоДня(ТекущаяДата()) и КонецДня(стр.ДатаДоставкиПо) < ТекущаяДата()) ТОгда
				Если не (стр.ДатаДоставкиС <> стр.ДатаДоставкиПО и ТекущаяДата() < КонецДня(стр.ДатаДоставкиПО) и ТекущаяДата() > стр.ДатаДоставкиС и НачалоДня(ТекущаяДата()) <> Дата) Тогда
					Если Не (стр.ДатаДоставкиПО < НачалоДня(ТекущаяДата()) и Дата > НачалоДня(ТекущаяДата())) Тогда
		                ТабДок.Вывести(ОбластьСтрокаТаблицы);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЭлементыФормы.Реестр.Очистить();
	ЭлементыФормы.Реестр.толькоПросмотр = истина;
	ЭлементыФормы.Реестр.вывести(ТабДок);
	КонецЕсли;
	//Открыть();
КонецПроцедуры

