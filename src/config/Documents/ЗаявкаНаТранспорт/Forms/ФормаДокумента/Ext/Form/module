
Процедура ДействияФормыДействие6(Кнопка)
	Если ЭтаФорма.Модифицированность тогда
		Предупреждение("Перед установкой категорий - документ будет перезаписан!", 5);
		ЭтаФорма.ЗаписатьВФорме();
	КонецЕсли;	
				
	ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);//монопольно!
	
	ЭтаФорма.ДокументОбъект.Прочитать();  //перечитать данные

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтоНовый() Тогда
		Статус = Перечисления.СтатусыЗаявокНаТранспорт.Подготовлен;
	КонецЕсли;
	
	Подразделение = ?(ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение),ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение,Справочники.Подразделения.НайтиПоКоду("00005"));
КонецПроцедуры

Процедура ПриОткрытии()		
	Если ЭтоНовый() Тогда
		
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			
			Запрос = Новый Запрос;
			запрос.УстановитьПараметр("Контр",Основание.Контрагент);
			запрос.УстановитьПараметр("Адрес",Перечисления.ТипыКонтактнойИнформации.Адрес);
			запрос.УстановитьПараметр("Факт",Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
			Запрос.Текст = "ВЫБРАТЬ
			|	КонтактнаяИнформация.Представление
			|ИЗ
			|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			|ГДЕ
			|	КонтактнаяИнформация.Объект = &Контр
			|	И КонтактнаяИнформация.Вид = &Факт
			|	И КонтактнаяИнформация.Тип = &Адрес";
			Рез = Запрос.Выполнить().Выгрузить();
			Для каждого стр из Рез Цикл
				Отправитель = стр.Представление;
			КонецЦикла;
			
		иначе
			
			Отправитель = "150044, Ярославская обл, Ярославль г, Базовая ул, дом № 3, стр.2";
		КонецЕсли;
	КонецЕсли;

	Если Не РольДоступна("Логисты") Тогда
		//ЭлементыФормы.НадписьВес.Видимость = Ложь;
		//ЭлементыФормы.Вес.Видимость = Ложь;
		//ЭлементыФормы.НадписьМашина.Видимость = Ложь;
		//ЭлементыФормы.Пробег.Видимость = Ложь;
		ЭлементыФормы.Надпись3.Видимость = Ложь;
		//ЭлементыФормы.Надпись5.Видимость = Ложь;
		ЭлементыФормы.НадписьДокументОтгрузки.Видимость = Ложь;
		//ЭлементыФормы.ПолеВвода2.Видимость = Ложь;
		//ЭлементыФормы.ПолеВвода4.Видимость = Ложь;
		ЭлементыФормы.ДокументОтгрузки.Видимость = Ложь;
		ЭлементыФормы.Сумма.Доступность = Ложь;
		ЭлементыФормы.ФактДата.Доступность = Ложь;
		ЭлементыФормы.Выполнил.Доступность = Ложь;
		ЭлементыФормы.Водитель1.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ПолеВвода2.Доступность = Ложь;

		ЭлементыФормы.ДатаДоставкиС.Доступность = Ложь;
		ЭлементыФормы.ДатаДоставкиПо.Доступность = Ложь;
		ЭлементыФормы.Объем.Доступность = Ложь;
		ЭлементыФормы.Отправитель.Доступность = Ложь;
		ЭлементыФормы.Точки.Доступность = Ложь;
		ЭлементыФормы.Направление.Доступность = Ложь;
	КонецЕсли;
	
	если (Статус = Перечисления.СтатусыЗаявокНаТранспорт.ПеревозчикВыбран 
		или Статус = Перечисления.СтатусыЗаявокНаТранспорт.Доставлен) и не РольДоступна("Логисты") тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		ЭлементыФормы.ПолеВвода2.ТолькоПросмотр = Ложь;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПолеВвода3ПриИзменении(Элемент)
    Маршрут = Отправитель;
	Для каждого стр из Точки Цикл
		Маршрут = Маршрут + " >>> " + стр.ТочкаМаршрута;
	КонецЦикла;
	Маршрут = Маршрут + " >>> " + Адрес;
	Направление = Маршрут;
КонецПроцедуры

Процедура ТабличноеПоле1ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Обратка Тогда
		Маршрут = Отправитель;
	    Для каждого стр из Точки Цикл
		    Маршрут = Маршрут + " >>> " + стр.ТочкаМаршрута;
	    КонецЦикла;
	    Направление = Маршрут;
	иначе
	    Маршрут = "";
	    Для каждого стр из Точки Цикл
		    Маршрут = Маршрут  + стр.ТочкаМаршрута + " >>> ";
	    КонецЦикла;
	    Направление = Маршрут;
	КонецЕсли;
КонецПроцедуры

Процедура ПолеВвода4ПриИзменении(Элемент)
	Запрос = Новый Запрос;
	запрос.УстановитьПараметр("Контр",Контрагент);
	запрос.УстановитьПараметр("Адрес",Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтактнаяИнформация.Представление
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Объект = &Контр
	               |	И КонтактнаяИнформация.Тип = &Адрес";
	Рез = Запрос.Выполнить().Выгрузить();
	Для каждого стр из Рез Цикл
		ЭлементыФормы.ПолеВвода3.СписокВыбора.Добавить(стр.Представление);
	КонецЦикла;

КонецПроцедуры

Процедура ПеревозчикПриИзменении(Элемент)
	Если Обратка Тогда
	    Маршрут = Отправитель;
	    Для каждого стр из Точки Цикл
		    Маршрут = Маршрут + " >>> " + стр.ТочкаМаршрута;
	    КонецЦикла;
	    Направление = Маршрут;
	Иначе
		Маршрут = "";
	    Для каждого стр из Точки Цикл
		    Маршрут = Маршрут  + стр.ТочкаМаршрута + " >>> ";
	    КонецЦикла;
	    Направление = Маршрут;
	КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПоле1КонтрагентПриИзменении(Элемент)
	КонецПроцедуры

Процедура ТабличноеПоле1ТочкаМаршрутаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.очистить();
	Запрос = Новый Запрос;
	запрос.УстановитьПараметр("Контр",ЭлементыФормы.Точки.ТекущиеДанные.Контрагент);
	запрос.УстановитьПараметр("Адрес",Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтактнаяИнформация.Представление
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Объект = &Контр
	               |	И КонтактнаяИнформация.Тип = &Адрес";
	Рез = Запрос.Выполнить().Выгрузить();
	Для каждого стр из Рез Цикл
		Элемент.СписокВыбора.Добавить(стр.Представление);
    КонецЦикла;

КонецПроцедуры

Процедура ПолеВвода1ПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Водитель) тогда
		Комментарий = Комментарий + "   тел.водителя: "+ получитьТелефоны(Водитель);
		ТелефонВодителя = получитьТелефоны(Водитель);
		АвтомобильГосНомерАвтомобиля = ПолучитьКонтактнуюИнформацию(Водитель, "Другое");
		ГосНомер = ПолучитьКонтактнуюИнформацию(Водитель, "Другое");
		Комментарий = Комментарий +"
		|"+АвтомобильГосНомерАвтомобиля;   //автомобиль марка + госномер	
	КонецЕсли;

КонецПроцедуры

функция получитьТелефоны(ВодительСсылка)
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	КонтактнаяИнформация.Представление
|ИЗ
|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
|ГДЕ
|	КонтактнаяИнформация.Объект = &Объект
|	И КонтактнаяИнформация.Тип = &Тип";
Запрос.УстановитьПараметр("Объект", ВодительСсылка);
Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
 рез = "";
Пока Выборка.Следующий() Цикл
	Если СокрЛП(Выборка.Представление)<>"" тогда
		рез = рез+СокрЛП(Выборка.Представление)+"; ";
	КонецЕсли;	
КонецЦикла;

возврат рез;
	
КонецФункции

Функция ПолучитьКонтактнуюИнформацию(об1, тип="Телефон")
	
	Если ТипЗнч(Об1)=Тип("Строка") Тогда
		возврат "";
	КонецЕсли;	
	
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	КонтактнаяИнформация.Представление,
               |	КонтактнаяИнформация.Вид
               |ИЗ
               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
               |ГДЕ
               |	КонтактнаяИнформация.Объект = &Объект
               |	И КонтактнаяИнформация.Тип = &Тип";

Запрос.УстановитьПараметр("Объект", Об1);
Если тип="Телефон" Тогда
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);
	Тип1="Тел: ";
иначеЕсли тип="Другое" Тогда
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Другое);
	Тип1="Доп.инфо: ";
иначеЕсли найти(тип,"Факт")>0 тогда
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.Текст = Запрос.Текст +" И КонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Вид", справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	Тип1="Факт.адрес: ";
иначеЕсли найти(тип,"Юр")>0 тогда
	Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.Текст = Запрос.Текст +" И КонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Вид", справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	Тип1="Юр.адрес: ";
КонецЕсли;
	
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
рез = "";
Если Выборка.Следующий() Тогда
	Если Строка(Выборка.Вид) = "Автомобиль" Тогда
		Тип1="Автомобиль: ";
	КонецЕсли;	
рез = рез + Тип1 +выборка.Представление;
КонецЕсли;

ПОКА Выборка.Следующий() ЦИКЛ
рез = рез + ", "+выборка.Представление;
КонецЦикла;

возврат рез;

КонецФункции

Процедура ДатаДоставкиСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Число(Формат(ТекущаяДата(),"ДФ=hh")) >= 15 и НачалоДня(ВыбранноеЗначение-24*60*60) = НачалоДня(ТекущаяДата()) Тогда
		СтандартнаяОбработка = Ложь;
		Сообщить("После 15.00 нельзя ставить дату поика машины на завтрашний день!!!");
	КонецЕсли;
КонецПроцедуры

Процедура ДатаДоставкиПоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Число(Формат(ТекущаяДата(),"ДФ=hh")) >= 15 и НачалоДня(ВыбранноеЗначение-24*60*60) = НачалоДня(ТекущаяДата()) Тогда
		СтандартнаяОбработка = Ложь;
		Сообщить("После 15.00 нельзя ставить дату поика машины на завтрашний день!!!");
	КонецЕсли;
КонецПроцедуры

Процедура ОбраткаПриИзменении(Элемент)
	Если Обратка Тогда
	    Маршрут = Отправитель;
	    Для каждого стр из Точки Цикл
		    Маршрут = Маршрут + " >>> " + стр.ТочкаМаршрута;
	    КонецЦикла;
	    Направление = Маршрут;
	Иначе
		Маршрут = "";
	    Для каждого стр из Точки Цикл
		    Маршрут = Маршрут  + стр.ТочкаМаршрута + " >>> ";
	    КонецЦикла;
	    Направление = Маршрут;
	КонецЕсли;

КонецПроцедуры
