Перем П101;
Перем П104;
Перем П105;
Перем П106;
Перем П107;
Перем П108;
Перем П109;
Перем П110;
Перем ВидДатыОснованияПлатежа;
Перем ВидНомераДокументаПлатежа;
Перем ВидДатыДокументаПлатежа;
Перем СписокКодовБК;
Перем СписокКодовОКАТО;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Определяет состояние формы при изменении
// реквизита "ОснованиеПлатежа1"
//
// Параметры:
//  Нет.
//
Процедура ОбработкаИзмененияОснованияПлатежа()

	ВыбПериодичностьУплаты = ПериодичностьУплаты1;
	ВыбОснованиеПлатежа    = ОснованиеПлатежа1;
	СпОснованияПлатежа     = ЭлементыФормы.ОснованиеПлатежа1.СписокВыбора;
	ИндВыбОснованиеПлатежа = СпОснованияПлатежа.Индекс(СпОснованияПлатежа.НайтиПоЗначению(ОснованиеПлатежа1));

	ЗнВидНомераДокументаПлатежа = ВидНомераДокументаПлатежа.НайтиПоЗначению(ИндВыбОснованиеПлатежа);
	НадписьНомерДокумента       = ?(ЗнВидНомераДокументаПлатежа = Неопределено,"",ЗнВидНомераДокументаПлатежа.Представление);

	ЗнВидДатыДокументаПлатежа  = ВидДатыДокументаПлатежа.НайтиПоЗначению(ИндВыбОснованиеПлатежа);
	НадписьДатаДокументаП      = ?(ЗнВидДатыДокументаПлатежа = Неопределено,"",ЗнВидДатыДокументаПлатежа.Представление);

	Если СтатусСоставителя1="15" Тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница4"];
	Иначе
		
	Если Найти("ТП", ВыбОснованиеПлатежа) > 0 Тогда
	 	
		Если Найти("-", ВыбПериодичностьУплаты) > 0 Тогда
			ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница1"];
			РекДатыДокумента  = "ДатаДокумента1";
			ЭлементыФормы.НадписьДатаПоказателя1.Видимость = Истина;
			ЭлементыФормы.ДатаПоказателя1.Видимость        = Истина;
			ЭлементыФормы.НадписьПериодПлатежа1.Видимость  = Ложь;
			ЭлементыФормы.ПериодПлатежа1.Видимость         = Ложь;
			ЭлементыФормы.НадписьГодПлатежа1.Видимость     = Ложь;
			ЭлементыФормы.ГодПлатежа1.Видимость            = Ложь;
			ЭлементыФормы.ТекстПоказателяПериода.Видимость = Ложь;
		Иначе
			ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница1"];
			РекДатыДокумента  = "ДатаДокумента1";
			ЭлементыФормы.НадписьДатаПоказателя1.Видимость = Ложь;
			ЭлементыФормы.ДатаПоказателя1.Видимость        = Ложь;
			ЭлементыФормы.НадписьПериодПлатежа1.Видимость  = Истина;
			ЭлементыФормы.ПериодПлатежа1.Видимость         = Истина;
			ЭлементыФормы.НадписьГодПлатежа1.Видимость     = Истина;
			ЭлементыФормы.ГодПлатежа1.Видимость            = Истина;
			ЭлементыФормы.ТекстПоказателяПериода.Видимость = Истина;
		КонецЕсли;
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ТекПанельСтраница;
		ЭлементыФормы[РекДатыДокумента].Видимость = Истина;
		
	ИначеЕсли Найти("БФ", ВыбОснованиеПлатежа) > 0 Тогда
		
		  Если Найти("-", ВыбПериодичностьУплаты) > 0 Тогда
			ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница3"];
			РекДатыДокумента  = "ДатаДокумента1";
			ЭлементыФормы.НадписьДатаПоказателя2.Видимость = Истина;
			ЭлементыФормы.ДатаПоказателя2.Видимость        = Истина;
			ЭлементыФормы.НадписьПериодПлатежа2.Видимость  = Ложь;
			ЭлементыФормы.ПериодПлатежа2.Видимость         = Ложь;
			ЭлементыФормы.НадписьГодПлатежа2.Видимость     = Ложь;
			ЭлементыФормы.ГодПлатежа2.Видимость            = Ложь;
			ЭлементыФормы.ТекстПоказателяПериода1.Видимость = Ложь;
		Иначе
			ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница3"];
			РекДатыДокумента  = "ДатаДокумента1";
			ЭлементыФормы.НадписьДатаПоказателя2.Видимость = Ложь;
			ЭлементыФормы.ДатаПоказателя2.Видимость        = Ложь;
			ЭлементыФормы.НадписьПериодПлатежа2.Видимость  = Истина;
			ЭлементыФормы.ПериодПлатежа2.Видимость         = Истина;
			ЭлементыФормы.НадписьГодПлатежа2.Видимость     = Истина;
			ЭлементыФормы.ГодПлатежа2.Видимость            = Истина;
			ЭлементыФормы.ТекстПоказателяПериода1.Видимость = Истина;
		КонецЕсли;
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ТекПанельСтраница;
		ЭлементыФормы[РекДатыДокумента].Видимость = Ложь;
			
	ИначеЕсли Найти("ЗД", ВыбОснованиеПлатежа) > 0 Тогда
	 	
		Если Найти("-", ВыбПериодичностьУплаты) > 0 Тогда
			ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница1"];
			РекДатыДокумента  = "ДатаДокумента1";
			ЭлементыФормы.НадписьДатаПоказателя1.Видимость = Истина;
			ЭлементыФормы.ДатаПоказателя1.Видимость        = Истина;
			ЭлементыФормы.НадписьПериодПлатежа1.Видимость  = Ложь;
			ЭлементыФормы.ПериодПлатежа1.Видимость         = Ложь;
			ЭлементыФормы.НадписьГодПлатежа1.Видимость     = Ложь;
			ЭлементыФормы.ГодПлатежа1.Видимость            = Ложь;
			ЭлементыФормы.ТекстПоказателяПериода.Видимость = Ложь;
		Иначе
			ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница1"];
			РекДатыДокумента  = "ДатаДокумента1";
			ЭлементыФормы.НадписьДатаПоказателя1.Видимость = Ложь;
			ЭлементыФормы.ДатаПоказателя1.Видимость        = Ложь;
			ЭлементыФормы.НадписьПериодПлатежа1.Видимость  = Истина;
			ЭлементыФормы.ПериодПлатежа1.Видимость         = Истина;
			ЭлементыФормы.НадписьГодПлатежа1.Видимость     = Истина;
			ЭлементыФормы.ГодПлатежа1.Видимость            = Истина;
			ЭлементыФормы.ТекстПоказателяПериода.Видимость = Истина;
		КонецЕсли;
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ТекПанельСтраница;
		ЭлементыФормы[РекДатыДокумента].Видимость = Ложь;
		
	ИначеЕсли Найти("АП, АР", ВыбОснованиеПлатежа) > 0 Тогда
	 	
		ЗнВидДатыОснованияПлатежа = ВидДатыОснованияПлатежа.НайтиПоЗначению(ИндВыбОснованиеПлатежа);
		НадписьДатаПлатежа        = ?(ЗнВидДатыОснованияПлатежа = Неопределено,"",ЗнВидДатыОснованияПлатежа.Представление);

		ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница2"];
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ТекПанельСтраница;
	    ЭлементыФормы.ДатаПлатежа1.Видимость  = Ложь;

	Иначе
				
		ЗнВидДатыОснованияПлатежа = ВидДатыОснованияПлатежа.НайтиПоЗначению(ИндВыбОснованиеПлатежа);
		НадписьДатаПлатежа        = ?(ЗнВидДатыОснованияПлатежа = Неопределено,"",ЗнВидДатыОснованияПлатежа.Представление);

		ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница2"];
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ТекПанельСтраница;
	    ЭлементыФормы.ДатаПлатежа1.Видимость  = Истина;

	КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры // ОбработкаИзмененияОснованияПлатежа()

// Определяет состояние формы при изменении
// реквизита "СтатусСоставителя1"
//
// Параметры:
//  Нет.
//
Процедура ОбработкаИзмененияСтатусСоставителя()

	СпОснованиеПлатежа = ЭлементыФормы.ОснованиеПлатежа1.СписокВыбора;
	ЗнОснования0       = СпОснованиеПлатежа.НайтиПоЗначению("0");
	СпТипПлатежа       = ЭлементыФормы.ТипПлатежа1.СписокВыбора;
	ЗнТип0             = СпТипПлатежа.НайтиПоЗначению("0");
	ВыбСтатусСоставителя = СтатусСоставителя1;
	Если Найти("06, 07",ВыбСтатусСоставителя) > 0  Тогда
	    Если ЗнОснования0 = Неопределено Тогда
			СпОснованиеПлатежа.Добавить("0", "0 - Конкретное значение указать невозможно");
			СпТипПлатежа.Добавить("0", "0 - Конкретное значение указать невозможно");
	    КонецЕсли;
	Иначе
		Если НЕ (ЗнОснования0 = Неопределено) Тогда
			Если П106 = "0" Тогда
			    ОснованиеПлатежа1 = СпОснованиеПлатежа[1];
				ОбработкаИзмененияОснованияПлатежа();
			КонецЕсли;
			СпОснованиеПлатежа.Удалить(ЗнОснования0);
			Если П110 = "0" Тогда
				ТипПлатежа1 = СпТипПлатежа[1];
			КонецЕсли;
			Если НЕ(ЗнТип0 = Неопределено) Тогда
				СпТипПлатежа.Удалить(ЗнТип0);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ОбработкаИзмененияСтатусСоставителя()

// Определяет состояние формы при изменении
// реквизита "ПериодичностьУплаты1"
//
// Параметры:
//  Нет.
//
Процедура ОбработкаИзмененияПериодичностьУплаты()

	ВыбПериодичностьУплаты = ПериодичностьУплаты1;
	Если Найти("Д1, Д2, Д3, МС", ВыбПериодичностьУплаты) > 0 Тогда
		НадписьПериодПлатежа1 = "Месяц:";
		ЭлементыФормы.НадписьПериодПлатежа1.Доступность = Истина;
		ЭлементыФормы.ПериодПлатежа1.Доступность = Истина;
	ИначеЕсли Найти("КВ", ВыбПериодичностьУплаты) > 0 Тогда
		НадписьПериодПлатежа1 = "Квартал:";
		ЭлементыФормы.НадписьПериодПлатежа1.Доступность = Истина;
		ЭлементыФормы.ПериодПлатежа1.Доступность = Истина;
	ИначеЕсли Найти("ПЛ", ВыбПериодичностьУплаты) > 0 Тогда
		НадписьПериодПлатежа1 = "Полугодие:";
		ЭлементыФормы.НадписьПериодПлатежа1.Доступность = Истина;
		ЭлементыФормы.ПериодПлатежа1.Доступность = Истина;
	Иначе
		ЭлементыФормы.НадписьПериодПлатежа1.Доступность = Ложь;
		ЭлементыФормы.ПериодПлатежа1.Доступность        = Ложь;
		ПериодПлатежа1 = 00;
	КонецЕсли;
	Если Найти("ТП, ЗД", П106) > 0 Тогда
		Если Найти("-", ВыбПериодичностьУплаты) > 0 Тогда
			ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница1"];
			ЭлементыФормы.НадписьДатаПоказателя1.Видимость = Истина;
			ЭлементыФормы.ДатаПоказателя1.Видимость        = Истина;
			ЭлементыФормы.НадписьПериодПлатежа1.Видимость  = Ложь;
			ЭлементыФормы.ПериодПлатежа1.Видимость         = Ложь;
			ЭлементыФормы.НадписьГодПлатежа1.Видимость     = Ложь;
			ЭлементыФормы.ГодПлатежа1.Видимость            = Ложь;
			ЭлементыФормы.ТекстПоказателяПериода.Видимость = Ложь;
		Иначе
			ТекПанельСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Страница1"];
			ЭлементыФормы.НадписьДатаПоказателя1.Видимость = Ложь;
			ЭлементыФормы.ДатаПоказателя1.Видимость        = Ложь;
			ЭлементыФормы.НадписьПериодПлатежа1.Видимость  = Истина;
			ЭлементыФормы.ПериодПлатежа1.Видимость         = Истина;
			ЭлементыФормы.НадписьГодПлатежа1.Видимость     = Истина;
			ЭлементыФормы.ГодПлатежа1.Видимость            = Истина;
			ЭлементыФормы.ТекстПоказателяПериода.Видимость = Истина;
		КонецЕсли;
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ТекПанельСтраница;
	КонецЕсли;

КонецПроцедуры // ОбработкаИзмененияПериодичностьУплаты()

Процедура ОбработкаИзмененияПериодичностьУплатыБФ()

	ВыбПериодичностьУплаты = ПериодичностьУплаты1;
	Если Найти("МС", ВыбПериодичностьУплаты) > 0 Тогда
		НадписьПериодПлатежа1 = "Месяц:";
		ЭлементыФормы.НадписьПериодПлатежа2.Доступность = Истина;
		ЭлементыФормы.ПериодПлатежа2.Доступность = Истина;
	ИначеЕсли Найти("КВ", ВыбПериодичностьУплаты) > 0 Тогда
		НадписьПериодПлатежа1 = "Квартал:";
		ЭлементыФормы.НадписьПериодПлатежа2.Доступность = Истина;
		ЭлементыФормы.ПериодПлатежа2.Доступность = Истина;
	ИначеЕсли Найти("ПЛ", ВыбПериодичностьУплаты) > 0 Тогда
		НадписьПериодПлатежа1 = "Полугодие:";
		ЭлементыФормы.НадписьПериодПлатежа2.Доступность = Истина;
		ЭлементыФормы.ПериодПлатежа2.Доступность = Истина;
	Иначе
		ЭлементыФормы.НадписьПериодПлатежа2.Доступность = Ложь;
		ЭлементыФормы.ПериодПлатежа2.Доступность        = Ложь;
		ПериодПлатежа1 = 00;
	КонецЕсли;
	
	Если Найти("-", ВыбПериодичностьУплаты) > 0 Тогда
		ЭлементыФормы.НадписьДатаПоказателя2.Видимость = Истина;
		ЭлементыФормы.ДатаПоказателя2.Видимость        = Истина;
		ЭлементыФормы.НадписьПериодПлатежа2.Видимость  = Ложь;
		ЭлементыФормы.ПериодПлатежа2.Видимость         = Ложь;
		ЭлементыФормы.НадписьГодПлатежа2.Видимость     = Ложь;
		ЭлементыФормы.ГодПлатежа2.Видимость            = Ложь;
		ЭлементыФормы.ТекстПоказателяПериода1.Видимость = Ложь;
	Иначе
		
		ЭлементыФормы.НадписьДатаПоказателя2.Видимость = Ложь;
		ЭлементыФормы.ДатаПоказателя2.Видимость        = Ложь;
		ЭлементыФормы.НадписьПериодПлатежа2.Видимость  = Истина;
		ЭлементыФормы.ПериодПлатежа2.Видимость         = Истина;
		ЭлементыФормы.НадписьГодПлатежа2.Видимость     = Истина;
		ЭлементыФормы.ГодПлатежа2.Видимость            = Истина;
		ЭлементыФормы.ТекстПоказателяПериода1.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаИзмененияПериодичностьУплаты()

// Формирует строковые значения параметров П101, П104
// П105,П106,П107,П108,П109,П110,
//
// Параметры:
//  Нет.
//
Процедура СформироватьТекстыПолей()

    П101 = СтатусСоставителя1;
	П104 = КодБК1;
	П105 = КодОКАТО1;
	Если П101 = "08" Тогда
		П106 = "0";
		П107 = "";
		П108 = "0";
		П109 = "";
		П110 = "0";
	Иначе
		П106 = ОснованиеПлатежа1; 
		Если Найти("ТП,БФ", П106) > 0 Тогда
						
			Если ПериодичностьУплаты1 = "-" Тогда
			    П107 = Строка(Формат(ДатаПоказателя1,"ДФ='дд.ММ.гггг'"));
			Иначе
				СтрПериодПл = ?(СтрДлина(СокрЛП(ПериодПлатежа1)) = 1,"0" + ПериодПлатежа1,ПериодПлатежа1);
				П107 = ПериодичностьУплаты1 + "." + СтрПериодПл + "." 
					+ Формат(ГодПлатежа1,"ЧЦ=4");
			КонецЕсли;
			Если П106 = "БФ" Тогда
			    П108 = Строка(НомерДокумента1);
				Если ПустаяСтрока(П108) Тогда
				    П108 = "0";
				КонецЕсли;
				
			Иначе
				П108 = "0";
			КонецЕсли;
			
			П109 = Строка(Формат(ДатаДокументаП,"ДФ='дд.ММ.гггг'"));
			
		ИначеЕсли Найти("ЗД", П106) > 0 Тогда
			Если ПериодичностьУплаты1 = "-" Тогда
			    П107 = Строка(Формат(ДатаПоказателя1,"ДФ='дд.ММ.гггг'"));
			Иначе
				СтрПериодПл = ?(СтрДлина(СокрЛП(ПериодПлатежа1)) = 1,"0" + СокрЛП(ПериодПлатежа1),СокрЛП(ПериодПлатежа1));
				П107 = ПериодичностьУплаты1 + "." + СтрПериодПл + "." 
					+ Формат(ГодПлатежа1,"ЧЦ=4");
			КонецЕсли;
			П108 = "0";
			П109 = "";
		ИначеЕсли Найти("АП, АР", П106) > 0 Тогда
			П107 = "";
			П108 = Строка(НомерДокумента1);
			П109 = Строка(Формат(ДатаДокументаП,"ДФ='дд.ММ.гггг'"));
		Иначе
			П107 = Строка(Формат(ДатаПлатежа1,"ДФ='дд.ММ.гггг'"));
			П108 = Строка(НомерДокумента1); 
			П109 = Строка(Формат(ДатаДокументаП,"ДФ='дд.ММ.гггг'"));		
		КонецЕсли;
		П110 = ТипПлатежа1;	
	КонецЕсли;

	ТекстПоказателяПериода = П107;
КонецПроцедуры // СформироватьТекстыПолей()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	СписокКодовБК 	 = ВосстановитьЗначение("СписокСохраненныхКодовБК");
	Если ТипЗнч(СписокКодовБК) <> Тип("СписокЗначений") Тогда
		СписокКодовБК	 = Новый СписокЗначений;
	КонецЕсли;
	
	СписокКодовОКАТО = ВосстановитьЗначение("СписокСохраненныхКодовОКАТО");
	Если ТипЗнч(СписокКодовОКАТО) <> Тип("СписокЗначений") Тогда
		СписокКодовОКАТО = Новый СписокЗначений;
	КонецЕсли;

	ЭлементыФормы.СтатусСоставителя1.СписокВыбора = ВладелецФормы.ДокументОбъект.ПолучитьСписокСтатусовОтправителя();
	ЭлементыФормы.ОснованиеПлатежа1.СписокВыбора = ВладелецФормы.ДокументОбъект.ПолучитьСписокОснованийПлатежа();
	ЭлементыФормы.ТипПлатежа1.СписокВыбора = ВладелецФормы.ДокументОбъект.ПолучитьСписокПоказателейТипа();


	СпПериодичностьУплаты = ЭлементыФормы.ПериодичностьУплаты1.СписокВыбора;
	СпПериодичностьУплаты.Очистить();
	Если ВладелецФормы.Дата < '20050101' Тогда
		СпПериодичностьУплаты.Добавить("Д1","Д1, Платеж за первую декаду месяца");
		СпПериодичностьУплаты.Добавить("Д2","Д2, Платеж за вторую декаду месяца");
		СпПериодичностьУплаты.Добавить("Д3","Д3, Платеж за третью декаду месяца");
	КонецЕсли;
	СпПериодичностьУплаты.Добавить("МС", "МС - месячный платеж");
	СпПериодичностьУплаты.Добавить("КВ", "КВ - квартальный платеж");
	СпПериодичностьУплаты.Добавить("ПЛ", "ПЛ - полугодовой платеж");
	СпПериодичностьУплаты.Добавить("ГД", "ГД - годовой платеж"); 
	СпПериодичностьУплаты.Добавить("-",  "Платеж по конкретной дате");
	
	ЭлементыФормы.ПериодичностьУплаты2.СписокВыбора=ЭлементыФормы.ПериодичностьУплаты1.СписокВыбора;

	Если ВладелецФормы.Дата >= '20050101' Тогда
		
		ВидДатыДокументаПлатежа = Новый СписокЗначений;
		
		// Значение - номер строки списка "Основание платежа", представление - 
		// текст, выдаваемый к качестве подсказки к полю для указания даты
		ВидДатыДокументаПлатежа.Добавить( 0,  "Дата декларации (расчета), представленной в налоговый орган:");
		ВидДатыДокументаПлатежа.Добавить( 1,  "");
		ВидДатыДокументаПлатежа.Добавить( 2,  "Дата представления декларации, либо дата отправки почтового отправления:");
		ВидДатыДокументаПлатежа.Добавить( 3,  "Дата требования об уплате налогов (сборов) от налогового органа:");
		ВидДатыДокументаПлатежа.Добавить( 4,  "Дата решения о рассрочке:");
		ВидДатыДокументаПлатежа.Добавить( 5,  "Дата решения об отсрочке:");
		ВидДатыДокументаПлатежа.Добавить( 6,  "Дата решения о реструктуризации:");
		ВидДатыДокументаПлатежа.Добавить( 7,  "Дата принятия арбитражным судом решения о введении внешнего управления:");
		ВидДатыДокументаПлатежа.Добавить( 8,  "Дата решения о приостановлении взыскания:"); 
		ВидДатыДокументаПлатежа.Добавить( 9,  "Дата акта проверки:");
		ВидДатыДокументаПлатежа.Добавить( 10, "Дата вынесения исполнительного документа:"); 
		ВидДатыДокументаПлатежа.Добавить( 11,"Показатель даты налогового документа:");
		
		ВидНомераДокументаПлатежа = Новый СписокЗначений;
		
		// Значение - номер строки списка "Основание платежа", представление - 
		// текст, выдаваемый к качестве подсказки к полю для указания номера
		ВидНомераДокументаПлатежа.Добавить( 0, "");
		ВидНомераДокументаПлатежа.Добавить( 1, "");
		ВидНомераДокументаПлатежа.Добавить( 2, "Значение реквизита ""Индекс документа"" из извещения, заполненного налоговым органом:");
		ВидНомераДокументаПлатежа.Добавить( 3, "Номер требования об уплате налогов (сборов) от налогового органа:");
		ВидНомераДокументаПлатежа.Добавить( 4, "Номер решения о рассрочке:");
		ВидНомераДокументаПлатежа.Добавить( 5, "Номер решения об отсрочке:");
		ВидНомераДокументаПлатежа.Добавить( 6, "Номер решения о реструктуризации:");
		ВидНомераДокументаПлатежа.Добавить( 7, "Номер дела или материала, рассмотренного арбитражным судом:");
		ВидНомераДокументаПлатежа.Добавить( 8, "Номер решения о приостановлении взыскания:"); 
		ВидНомераДокументаПлатежа.Добавить( 9, "Номер акта проверки:");
		ВидНомераДокументаПлатежа.Добавить( 10,"Номер исполнительного документа:");
		ВидНомераДокументаПлатежа.Добавить( 11,"Показатель номера налогового документа:");
		
		ВидДатыОснованияПлатежа = Новый СписокЗначений;
		
		// Значение - номер строки списка "Основание платежа", представление - 
		// текст, выдаваемый к качестве подсказки к полю для указания даты
		ВидДатыОснованияПлатежа.Добавить( 3, "Срок уплаты, установленный в требовании об уплате налогов (сборов):");
		ВидДатыОснованияПлатежа.Добавить( 4, "Дата уплаты части рассроченной суммы налога в соответствии с графиком:");
		ВидДатыОснованияПлатежа.Добавить( 5, "Дата завершения отсрочки:");
		ВидДатыОснованияПлатежа.Добавить( 6, "Дата уплаты части реструктурируемой задолженности в соответствии с графиком:");
		ВидДатыОснованияПлатежа.Добавить( 7, "Дата завершения внешнего управления:");
		ВидДатыОснованияПлатежа.Добавить( 8, "Дата завершения приостановления взыскания:"); 
		ВидДатыОснованияПлатежа.Добавить( 9,  "");
		ВидДатыОснованияПлатежа.Добавить( 10, "");
		ВидДатыОснованияПлатежа.Добавить( 11,"Показатель налового периода");
		
	Иначе
		
		ВидДатыДокументаПлатежа = Новый СписокЗначений;
		
		// Значение - номер строки списка "Основание платежа", представление - 
		// текст, выдаваемый к качестве подсказки к полю для указания даты
		ВидДатыДокументаПлатежа.Добавить( 0, "Дата декларации (расчета), представленной в налоговый орган:");
		ВидДатыДокументаПлатежа.Добавить( 1, "");
		ВидДатыДокументаПлатежа.Добавить( 2, "Дата требования об уплате налогов (сборов) от налогового органа:");
		ВидДатыДокументаПлатежа.Добавить( 3, "Дата решения о рассрочке:");
		ВидДатыДокументаПлатежа.Добавить( 4, "Дата решения об отсрочке:");
		ВидДатыДокументаПлатежа.Добавить( 5, "Дата решения о реструктуризации:");
		ВидДатыДокументаПлатежа.Добавить( 6, "Дата принятия арбитражным судом решения о введении внешнего управления:");
		ВидДатыДокументаПлатежа.Добавить( 7, "Дата решения о приостановлении взыскания:"); 
		ВидДатыДокументаПлатежа.Добавить( 8, "Дата акта проверки:");
		ВидДатыДокументаПлатежа.Добавить( 9,"Дата вынесения исполнительного документа:"); 
		ВидДатыДокументаПлатежа.Добавить( 10,"Показатель даты налогового документа:");
		
		ВидНомераДокументаПлатежа = Новый СписокЗначений;
		
		// Значение - номер строки списка "Основание платежа", представление - 
		// текст, выдаваемый к качестве подсказки к полю для указания номера
		ВидНомераДокументаПлатежа.Добавить( 0, "");
		ВидНомераДокументаПлатежа.Добавить( 1, "");
		ВидНомераДокументаПлатежа.Добавить( 2, "Номер требования об уплате налогов (сборов) от налогового органа:");
		ВидНомераДокументаПлатежа.Добавить( 3, "Номер решения о рассрочке:");
		ВидНомераДокументаПлатежа.Добавить( 4, "Номер решения об отсрочке:");
		ВидНомераДокументаПлатежа.Добавить( 5, "Номер решения о реструктуризации:");
		ВидНомераДокументаПлатежа.Добавить( 6, "Номер дела или материала, рассмотренного арбитражным судом:");
		ВидНомераДокументаПлатежа.Добавить( 7, "Номер решения о приостановлении взыскания:"); 
		ВидНомераДокументаПлатежа.Добавить( 8, "Номер акта проверки:");
		ВидНомераДокументаПлатежа.Добавить( 9,"Номер исполнительного документа:");
		ВидНомераДокументаПлатежа.Добавить( 10,"Показатель номера налогового документа:");
		
		ВидДатыОснованияПлатежа = Новый СписокЗначений;
		
		// Значение - номер строки списка "Основание платежа", представление - 
		// текст, выдаваемый к качестве подсказки к полю для указания даты
		ВидДатыОснованияПлатежа.Добавить( 2, "Срок уплаты, установленный в требовании об уплате налогов (сборов):");
		ВидДатыОснованияПлатежа.Добавить( 3, "Дата уплаты части рассроченной суммы налога в соответствии с графиком:");
		ВидДатыОснованияПлатежа.Добавить( 4, "Дата завершения отсрочки:");
		ВидДатыОснованияПлатежа.Добавить( 5, "Дата уплаты части реструктурируемой задолженности в соответствии с графиком:");
		ВидДатыОснованияПлатежа.Добавить( 6, "Дата завершения внешнего управления:");
		ВидДатыОснованияПлатежа.Добавить( 7, "Дата завершения приостановления взыскания:"); 
		ВидДатыОснованияПлатежа.Добавить( 8, "");
		ВидДатыОснованияПлатежа.Добавить( 9,"");
		ВидДатыОснованияПлатежа.Добавить( 10,"Показатель налового периода");
		
	КонецЕсли;

    ВладФормы = ЭтаФорма.ВладелецФормы;
	П101 = ВладФормы.ЭлементыФормы.СтатусСоставителя.Значение;
	П104 = ВладФормы.ЭлементыФормы.КодБК.Значение;
	П105 = ВладФормы.ЭлементыФормы.КодОКАТО.Значение;
	П106 = ВладФормы.ЭлементыФормы.ПоказательОснования.Значение;
	П107 = ВладФормы.ЭлементыФормы.ПоказательПериода.Значение;
	П108 = ВладФормы.ЭлементыФормы.ПоказательНомера.Значение;
	П109 = Строка(Формат(ВладФормы.ЭлементыФормы.ПоказательДаты.Значение,"ДФ='дд.ММ.гггг'"));
	П110 = ВладФормы.ЭлементыФормы.ПоказательТипа.Значение;

	СпСтатусСоставителя = ЭлементыФормы.СтатусСоставителя1.СписокВыбора;
	НачЗнСтатусСоставителя = СпСтатусСоставителя.НайтиПоЗначению(П101);
	Если НЕ(НачЗнСтатусСоставителя = Неопределено) Тогда
		СтатусСоставителя1 = НачЗнСтатусСоставителя.Значение;
	Иначе
		СтатусСоставителя1 = СпСтатусСоставителя[1].Значение;
	КонецЕсли; 
	ОбработкаИзмененияСтатусСоставителя();

	КодБК1 	  = П104;
	КодОКАТО1 = П105;

	СпОснованиеПлатежа = ЭлементыФормы.ОснованиеПлатежа1.СписокВыбора;
	НачЗнОснованиеПлатежа = СпОснованиеПлатежа.НайтиПоЗначению(П106);
	Если НЕ(НачЗнОснованиеПлатежа = Неопределено) Тогда
		ОснованиеПлатежа1 = НачЗнОснованиеПлатежа.Значение;
	Иначе
		ОснованиеПлатежа1 = СпОснованиеПлатежа[0].Значение;
	КонецЕсли;                                                               
	ПериодичностьУплаты1 = ЭлементыФормы.ПериодичностьУплаты1.СписокВыбора[0];
	ОбработкаИзмененияОснованияПлатежа();

	ДД = Сред(СокрЛП(П107), 1, 2); 
	ММ = Сред(СокрЛП(П107), 4, 2);
	ГГ = Сред(СокрЛП(П107), 7, 4);

	СпПериодичностьУплаты     = ЭлементыФормы.ПериодичностьУплаты1.СписокВыбора;
	НачЗнПериодичностьУплаты  = СпПериодичностьУплаты.НайтиПоЗначению(ДД);
	Если НЕ(НачЗнПериодичностьУплаты = Неопределено) Тогда
		ПериодичностьУплаты1 = НачЗнПериодичностьУплаты.Значение;
		ПериодПлатежа1       = ММ; 
		ГодПлатежа1          = ГГ;
	ИначеЕсли  Найти("ТП, ЗД", П106) > 0 Тогда
		ДатаПоказателя1 = Дата(Число(ГГ),Число(ММ),Число(ДД));
		ПериодичностьУплаты1 = ЭлементыФормы.ПериодичностьУплаты1.СписокВыбора[7].Значение;
	Иначе 
		Если ПустаяСтрока(ГГ) или ПустаяСтрока(ММ) или ПустаяСтрока(ДД) Тогда
			ДатаПлатежа1 = "";
		Иначе	
			ДатаПлатежа1 = Дата(Число(ГГ),Число(ММ),Число(ДД));
		КонецЕсли;	
		ПериодичностьУплаты1 = ЭлементыФормы.ПериодичностьУплаты1.СписокВыбора[0].Значение;
	КонецЕсли;                                                               
	ОбработкаИзмененияПериодичностьУплаты();

	НомерДокумента1 = П108;
	ДД = Сред(СокрЛП(П109), 1, 2); 
	ММ = Сред(СокрЛП(П109), 4, 2);
	ГГ = Сред(СокрЛП(П109), 7, 4);
	Если ПустаяСтрока(ДД) или ПустаяСтрока(ММ) или ПустаяСтрока(ГГ) Тогда
		ДатаДокументаП = "";
	Иначе	
		ДатаДокументаП = Дата(Число(ГГ),Число(ММ),Число(ДД));
	КонецЕсли;	

	СпТипПлатежа1   = ЭлементыФормы.ТипПлатежа1.СписокВыбора;
	НачЗнТипПлатежа = СпТипПлатежа1.НайтиПоЗначению(П110);
	Если НЕ(НачЗнТипПлатежа = Неопределено) Тогда
		ТипПлатежа1 = НачЗнТипПлатежа.Значение;
	Иначе
		ТипПлатежа1 = СпТипПлатежа1[0].Значение;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Обработчик события "ПриИзменении" реквизита "СтатусСоставителя1"
//
Процедура СтатусСоставителя1ПриИзменении(Элемент)
	ОбработкаИзмененияСтатусСоставителя();
	ОбработкаИзмененияОснованияПлатежа();
КонецПроцедуры // СтатусСоставителя1ПриИзменении()

// Обработчик события "ПриИзменении" реквизита "ОснованиеПлатежа1"
//
Процедура ОснованиеПлатежа1ПриИзменении(Элемент)
	ОбработкаИзмененияОснованияПлатежа();
КонецПроцедуры

// Обработчик события "ПриИзменении" реквизита "ПериодичностьУплаты1"
//
Процедура ПериодичностьУплаты1ПриИзменении(Элемент)
	ОбработкаИзмененияПериодичностьУплаты();
КонецПроцедуры // ПериодичностьУплаты1ПриИзменении()

// Обработчик события обновления формы
//
Процедура ОбновлениеОтображения()
	СформироватьТекстыПолей();
КонецПроцедуры // ОбновлениеОтображения()

// Обработчик события "Нажатие" кнопки "ОК"
//
Процедура КнопкаОКНажатие(Элемент)
	СформироватьТекстыПолей();

	ВладФормы = ЭтаФорма.ВладелецФормы;
	ВладФормы.СтатусСоставителя = П101; 
	ВладФормы.КодБК	                 = П104;
	ВладФормы.КодОКАТО               = ?(П105="0","",П105);
	ВладФормы.ПоказательОснования    = ?(П106="0","",П106);;
	ВладФормы.ПоказательПериода      = ?(ПустаяСтрока(СокрЛП(СтрЗаменить(П107,"."," "))),"",П107);
	ВладФормы.ПоказательНомера       = ?(П108="0","",П108);;
	ВладФормы.ПоказательДаты         = ?(ПустаяСтрока(П109),'00010101000000',Дата(Сред(П109,7,4) + Сред(П109,4,2) + Сред(П109,1,2)));
	ВладФормы.ПоказательТипа         = ?(П110="0","",П110);; 
	
	// Запоминаем введенный код бюджетной классификации
	Если НЕ ПустаяСтрока(П104) Тогда
		ЗнПоиска = СписокКодовБК.НайтиПоЗначению(СокрЛП(П104));
		Если ЗнПоиска = Неопределено Тогда
			СписокКодовБК.Вставить(0, СокрЛП(П104));
			
			Если СписокКодовБК.Количество() > 10 Тогда
				СписокКодовБК.Удалить(СписокКодовБК.Количество() - 1);
			КонецЕсли;
			
			СохранитьЗначение("СписокСохраненныхКодовБК", СписокКодовБК);
			
		КонецЕсли;
	КонецЕсли;

	// Запоминаем введенный код ОКАТО
	Если НЕ ПустаяСтрока(П105) Тогда
		ЗнПоиска = СписокКодовОКАТО.НайтиПоЗначению(СокрЛП(П105));
		Если ЗнПоиска = Неопределено Тогда
			СписокКодовОКАТО.Вставить(0, СокрЛП(П105));
			
			Если СписокКодовОКАТО.Количество() > 10 Тогда
				СписокКодовОКАТО.Удалить(СписокКодовОКАТО.Количество() - 1);
			КонецЕсли;
			
			СохранитьЗначение("СписокСохраненныхКодовОКАТО", СписокКодовОКАТО);
			
		КонецЕсли;
	КонецЕсли;

	ЭтаФорма.Закрыть();
КонецПроцедуры

// Обработчик события "НачалоВыбора" реквизита "КодБК1"
//
Процедура КодБК1НачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбЭлемент = ВыбратьИзСписка(СписокКодовБК,ЭлементыФормы.КодБК1);
	Если НЕ (ВыбЭлемент = Неопределено) Тогда
		КодБК1 = ВыбЭлемент.Значение;
	КонецЕсли;	
КонецПроцедуры // КодБК1НачалоВыбора()

// Обработчик события "НачалоВыбора" реквизита "КодОКАТО1"
//
Процедура КодОКАТО1НачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбЭлемент = ВыбратьИзСписка(СписокКодовОКАТО,ЭлементыФормы.КодОКАТО1);
	Если НЕ (ВыбЭлемент = Неопределено) Тогда
		КодОКАТО1 = ВыбЭлемент.Значение;
	КонецЕсли;	
КонецПроцедуры // КодОКАТО1НачалоВыбора()

Процедура ПериодичностьУплаты2ПриИзменении(Элемент)
	
	ОбработкаИзмененияПериодичностьУплатыБФ();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ВладелецФормы.Метаданные().Имя="ПлатежноеПоручениеИсходящее" Тогда
		Сообщить("Эта форма предназначена для открытия только из формы платежного поручения.");
		Отказ=Истина;
	КонецЕсли;
	
КонецПроцедуры






