////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 

Перем мПечатнаяФормаПоУмолчанию;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		Если ДокументОснование <> Неопределено Тогда

			Если НЕ ЗначениеНеЗаполнено(ДокументОснование.Организация) Тогда

				Если ЗначениеНеЗаполнено(ДокументОснование.Организация.Префикс) Тогда
					УстановитьНовыйНомер("0");

				Иначе
					УстановитьНовыйНомер(ДокументОснование.Организация.Префикс);

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	// Заполнить подменю выбора печатных форм.
	СписокМакетов = ЭтотОбъект.ПолучитьСписокПечатныхФорм();
	УстановитьПодменюВыбораПечатнойФормы(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати,
	                                     СписокМакетов, Новый Действие("ДействияФормыДействиеВыбратьПечатнуюФормы"));

	// Установить печатную форму по умолчанию.
	УстановитьКнопкуПечати(ЭтотОбъект.Метаданные().Имя, ЭтаФорма, СписокМакетов, мПечатнаяФормаПоУмолчанию);

	// Вывести в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;

	// Если форма открыта из формы документа, то не будем давать 
	// менять основание
	Если (ВладелецФормы <> Неопределено)
	   И (Не ЗначениеНеЗаполнено(ДокументОснование)) Тогда
		ЭлементыФормы.ДокументОснование.ТолькоПросмотр = Истина;
	КонецЕсли;

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Установить активный реквизит.
	АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
    
	//БАЛАНС (04.12.2007)                       
	//
	мПроведениеИзФормы = Истина;
	
	Если НЕ ЭтоНовый() Тогда
		
		УстановитьЭлементыИсторииКнопка(Ссылка, ЭтаФорма);
		
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	

// Процедура - обработчик события "ОбновлениеОтображения" формы.
//
Процедура ОбновлениеОтображения()

	Попытка

		Если НЕ ЗначениеНеЗаполнено(ДокументОснование) Тогда

			Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда

				Сумма     = 0;
				СуммаНДС  = 0;
				Поставщик = "";

				РасчетСуммыПоСчетуФактуре(Ссылка, Сумма, СуммаНДС, Поставщик);
				ЭлементыФормы.ТекстКонтрагент.Заголовок     = Поставщик;
				ЭлементыФормы.СуммаДокумента.Заголовок = "" + (Сумма + СуммаНДС) + " " + ДокументОснование.ВалютаДокумента;

			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
				// это входящие услуги (комиссионное вознаграждение за релизованные товары)
				ЭлементыФормы.ТекстКонтрагент.Заголовок     = ДокументОснование.Контрагент;
				ЭлементыФормы.СуммаДокумента.Заголовок = "" + ДокументОснование.Товары.Итог("СуммаВознаграждения") + " " + ДокументОснование.ВалютаДокумента;
				
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС") Тогда
				// это входящие услуги (комиссионное вознаграждение за релизованные товары)
				ЭлементыФормы.ТекстКонтрагент.Заголовок     = ДокументОснование.Контрагент;
				ЭлементыФормы.СуммаДокумента.Заголовок = "" + (ДокументОснование.ТоварыИУслуги.Итог("Сумма") + ДокументОснование.ТоварыИУслуги.Итог("СуммаНДС")) + " " + мВалютаРегламентированногоУчета;
				
			Иначе
				ЭлементыФормы.ТекстКонтрагент.Заголовок     = ДокументОснование.Контрагент;
				ЭлементыФормы.СуммаДокумента.Заголовок = "" + ДокументОснование.СуммаДокумента + " " + ДокументОснование.ВалютаДокумента;

			КонецЕсли;

		КонецЕсли;

	Исключение

	КонецПопытки;

КонецПроцедуры // ОбновлениеОтображения()

// Функция вызывается из тела процедуры "ОбновлениеОтображения"
// Выполняет расчет общей суммы и суммы НДС по счету-фактуре для 
// тех случаев, когда документа-основания это "Авансовый отчет"
Процедура РасчетСуммыПоСчетуФактуре(СчетФактура, Сумма, СуммаНДС, Поставщик)

	Если НЕ (ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный")) Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетФактура",    СчетФактура);
	Запрос.УстановитьПараметр("АвансовыйОтчет", СчетФактура.ДокументОснование);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	АвансовыйОтчетТовары.Поставщик,
	|	АвансовыйОтчетТовары.СчетФактура,
	|	АвансовыйОтчетТовары.СтавкаНДС,
	|	СУММА(АвансовыйОтчетТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВЫБОР КОГДА АвансовыйОтчетТовары.Ссылка.СуммаВключаетНДС ТОГДА АвансовыйОтчетТовары.Сумма - АвансовыйОтчетТовары.СуммаНДС ИНАЧЕ АвансовыйОтчетТовары.Сумма КОНЕЦ) КАК Сумма
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары

	|ГДЕ
	|	АвансовыйОтчетТовары.СчетФактура = &СчетФактура И
	|	АвансовыйОтчетТовары.Ссылка      = &АвансовыйОтчет

	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетТовары.Поставщик,
	|	АвансовыйОтчетТовары.СчетФактура,
	|	АвансовыйОтчетТовары.СтавкаНДС

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	АвансовыйОтчетПрочее.Поставщик,
	|	АвансовыйОтчетПрочее.СчетФактура,
	|	АвансовыйОтчетПрочее.СтавкаНДС,
	|	СУММА(АвансовыйОтчетПрочее.СуммаНДС),
	|	СУММА(ВЫБОР КОГДА АвансовыйОтчетПрочее.Ссылка.СуммаВключаетНДС ТОГДА АвансовыйОтчетПрочее.Сумма - АвансовыйОтчетПрочее.СуммаНДС ИНАЧЕ АвансовыйОтчетПрочее.Сумма КОНЕЦ)
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее

	|ГДЕ
	|	АвансовыйОтчетПрочее.СчетФактура = &СчетФактура И
	|	АвансовыйОтчетПрочее.Ссылка      = &АвансовыйОтчет

	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетПрочее.Поставщик,
	|	АвансовыйОтчетПрочее.СчетФактура,
	|	АвансовыйОтчетПрочее.СтавкаНДС";
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		Поставщик = Выборка.Поставщик;
		Сумма     = Сумма    + Выборка.Сумма;
		СуммаНДС  = СуммаНДС + Выборка.СуммаНДС;

	КонецЦикла;

КонецПроцедуры // РасчетСуммыПоСчетуФактуре()

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Если открыли данную форму из формы документа, то там надо поменять текст
	Если НЕ ЗначениеНеЗаполнено(ВладелецФормы) Тогда

		// Надо поменять текст про счет-фактуру в форме-владельце
		Если ТипЗнч(ВладелецФормы) = Тип("Форма") тогда
			ВладелецФормы.ЗаполнитьТекстПроСчетФактуру();
		КонецЕсли;

	КонецЕсли; 

КонецПроцедуры // ПослеЗаписи()

// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)

	НапечататьДокументПоУмолчанию(ЭтотОбъект, глТекущийПользователь, мПечатнаяФормаПоУмолчанию);

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Печать" командной панели
// формы. Процедура отрабатывает выбор печатной формы.
//
Процедура ДействияФормыДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ДействиеПечать.Текст = Кнопка.Текст;
		СтруктураМакета = Новый Структура("Макет, ПредставлениеМакета");
		СписокМакетов = ПолучитьСписокПечатныхФорм();
		СтрокаМакетаВСписке = СписокМакетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаМакетаВСписке <> Неопределено Тогда
			Печать(СтрокаМакетаВСписке.Значение);
			СтруктураМакета.Макет = СтрокаМакетаВСписке.Значение;
			СтруктураМакета.ПредставлениеМакета = СтрокаМакетаВСписке.Представление;			
			
		Иначе
			СсылкаВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрЗаменить(Кнопка.Имя, "_", "-")));
			Печать(СсылкаВнешнейФормы);
			СтруктураМакета.Макет = СсылкаВнешнейФормы;
			СтруктураМакета.ПредставлениеМакета = Кнопка.Текст;
		КонецЕсли;		
		
		мПечатнаяФормаПоУмолчанию = СтруктураМакета.Макет;
		СохранитьТекущуюКнопкуПечати(ЭтотОбъект.Метаданные().Имя, СтруктураМакета);
	КонецЕсли;

КонецПроцедуры // ДействияФормыДействиеВыбратьПечатнуюФормы()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ДокументОснованиеНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	СписокТипов = Новый СписокЗначений;
	СписокТипов.Добавить(Метаданные.Документы.ОтчетКомиссионераОПродажах.Имя, Метаданные.Документы.ОтчетКомиссионераОПродажах.Представление());
	СписокТипов.Добавить(Метаданные.Документы.ПоступлениеДопРасходов.Имя,     Метаданные.Документы.ПоступлениеДопРасходов.Представление());
	СписокТипов.Добавить(Метаданные.Документы.ПоступлениеТоваровУслуг.Имя,    Метаданные.Документы.ПоступлениеТоваровУслуг.Представление());
	СписокТипов.Добавить(Метаданные.Документы.ПоступлениеТоваровУслугВНеавтоматизированнуюТорговуюТочку.Имя,    Метаданные.Документы.ПоступлениеТоваровУслугВНеавтоматизированнуюТорговуюТочку.Представление());
	СписокТипов.Добавить(Метаданные.Документы.АвансовыйОтчет.Имя,             Метаданные.Документы.АвансовыйОтчет.Представление());

	ВыбранныйЭлемент = ЭтаФорма.ВыбратьИзСписка(СписокТипов,Элемент);

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Элемент.Значение = Документы[ВыбранныйЭлемент.Значение].ПустаяСсылка();

	// В качестве владельца формы выбора устанавливаем данный элемент формы, чтобы выбранное
	// значение было присвоено стандартно.
	ФормаВыбора = Документы[ВыбранныйЭлемент.Значение].ПолучитьФормуВыбора(, Элемент,);

	ФормаВыбора.РежимВыбора = Истина;
	ФормаВыбора.Открыть();

КонецПроцедуры

Процедура ДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если НЕ ЗначениеНеЗаполнено(ВыбранноеЗначение.Организация) Тогда

		Если ЗначениеНеЗаполнено(ВыбранноеЗначение.Организация.Префикс) Тогда
			УстановитьНовыйНомер("0");

		Иначе
			УстановитьНовыйНомер(ВыбранноеЗначение.Организация.Префикс);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);

	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры // ДатаПриИзменении()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	яштСменаПользователя(ЭтотОбъект, ЭтаФорма, глТекущийПользователь);
КонецПроцедуры
