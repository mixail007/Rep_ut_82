
Перем мВалютаРегламентированногоУчета;

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	ВалютаРегламентированногоУчета         = Константы.ВалютаРегламентированногоУчета.Получить();
	КолонкиФормы                           = ЭлементыФормы.Список.Колонки;
	КолонкиФормы.СуммаДокумента.ТекстШапки = "Сумма (" + ВалютаРегламентированногоУчета + ")";
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)

	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;

	ПоказатьСтруктуруПодчиненностиДокумента(ЭлементыФормы.Список.ТекущаяСтрока);

КонецПроцедуры

Процедура ДействияФормыXОтчет(Кнопка)
	ИскомаяСтрока = глТорговоеОборудование.млФР.Найти(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяКассаККМ"), "КассаККМ");
	Ответ = "";

	глТорговоеОборудование.ХОтчет(ИскомаяСтрока, Ответ);

КонецПроцедуры

Процедура ДействияФормыОтчетПоККМ(Кнопка)
	Перем мОсновнаяКассаККМ;
	Перем мОсновнаяКассаККМДляКредитов;
	врОтчет = Отчеты.ОтчетОстаткиИОбороты.Создать();
	
	врОтчет.ИмяРегистра = "РозничнаяВыручка";
	
	врОтчет.ЗаполнитьНачальныеНастройки();
	РаскрашиватьИзмерения = Истина;
	ВыводитьИтогиПоВсемУровням = Истина;
	ВыводитьПоказателиВСтроку = Истина;
	
	врСЗ = Новый СписокЗначений();
	мОсновнаяКассаККМ=ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяКассаККМ");
	мОсновнаяКассаККМДляКредитов=ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяКассаККМДляКредитов");
	Если  не ЗначениеНеЗаполнено(мОсновнаяКассаККМ) Тогда
	врСЗ.Добавить(мОсновнаяКассаККМ);	
	КонецЕсли;
	Если  не ЗначениеНеЗаполнено(мОсновнаяКассаККМДляКредитов) Тогда
	врСЗ.Добавить(мОсновнаяКассаККМДляКредитов);	
	КонецЕсли;
	
	врОтчет.ПостроительОтчета.Отбор.РозничнаяТочка.ВидСравнения = ВидСравнения.ВСписке;
	врОтчет.ПостроительОтчета.Отбор.РозничнаяТочка.Значение = врСЗ;
	врОтчет.ПостроительОтчета.Отбор.РозничнаяТочка.Использование = Истина;
	
	врФормаОтчета = врОтчет.ПолучитьОсновнуюФорму();
	
	врФормаОтчета.ТолькоПросмотр = Истина;
	врФормаОтчета.ЭлементыФормы.КоманднаяПанельФормы.Доступность = Ложь;
	
	врФормаОтчета.Открыть();

	врФормаОтчета.ЭлементыФормы.ДатаНач.Значение = ТекущаяДата();
	врФормаОтчета.ЭлементыФормы.ДатаКон.Значение = ТекущаяДата();
    врФормаОтчета.ОбновитьОтчет();

КонецПроцедуры

Процедура ДействияФормыОприходованиеИзККМ(Кнопка)
		ДокПКООбъект = Документы.ПриходныйКассовыйОрдер.СоздатьДокумент();
		ДокПКО = ДокПКООбъект.ПолучитьФорму("ФормаДокумента");
		ЗаполнитьШапкуДокумента(ДокПКООбъект, глТекущийПользователь, мВалютаРегламентированногоУчета, "ПриемРозничнойВыручки");
		ДокПКО.ВидОперации = Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка;
		ДокПКО.ВидПриемаРозничнойВыручки = Перечисления.ВидПриемаРозничнойВыручки.ИзКассы;
		мОсновнаяКассаККМ=ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяКассаККМ");	
  		ДокПКО.Касса = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяКасса");	
		ДокПКО.Контрагент = мОсновнаяКассаККМ;	
		СуммаПКО = ПолучитьСумму(мОсновнаяКассаККМ);
		ДокПКО.СуммаДокумента = СуммаПКО;
		ДокПКО.Открыть();
КонецПроцедуры

Функция ПолучитьСумму(КассаВход, Безнал = Ложь, Детально = Ложь)

	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамПериодНач", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("парамПериодКон", КонецДня(ТекущаяДата()));
	
	Запрос.УстановитьПараметр("КассаККМ", КассаВход);
	
	Запрос.Текст = " 
	|ВЫБРАТЬ
	|	ЕСТЬNULL(РозничнаяВыручка.СуммаОборот, 0) КАК Выручка,
	|	ЕСТЬNULL(РозничнаяВыручка.СуммаБезналОборот, 0) КАК ВыручкаБезнал
	|ИЗ
	|	РегистрНакопления.РозничнаяВыручка.Обороты(&парамПериодНач, &парамПериодКон,, РозничнаяТочка = &КассаККМ) КАК РозничнаяВыручка
	|";
	 
    СуммаВозврат = Запрос.Выполнить().Выбрать();
	СуммаВозврат.Следующий();
	Если НЕ Безнал Тогда
		Возврат СуммаВозврат.Выручка;
	Иначе
		МассивДанных = Новый Массив;
		МассивДанных.Добавить(СуммаВозврат.Выручка);
		МассивДанных.Добавить(СуммаВозврат.Выручка - СуммаВозврат.ВыручкаБезнал);
		МассивДанных.Добавить(СуммаВозврат.ВыручкаБезнал);
		Возврат МассивДанных;
	КонецЕсли;
	
КонецФункции // ПолучитьСумму()

Процедура ДействияФормыИнкассация(Кнопка)
	ДокРКООбъект = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
	ДокРКО = ДокРКООбъект.ПолучитьФорму("ФормаДокумента");
	
	ЗаполнитьШапкуДокумента(ДокРКООбъект, глТекущийПользователь, мВалютаРегламентированногоУчета);
	ДокРКО.ВидОперации = Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк;
	ДокРКО.Касса = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяКасса");	
	ДокРКО.Открыть();

КонецПроцедуры

Процедура ДействияФормыВыдачаНакопительнойКарты(Кнопка)
//	врФорма = ПолучитьФорму("ФормаВыдачиНакопительнойКарты");
//	врРезультат = врФорма.ОткрытьМодально();
//	
//	Если врРезультат <> Неопределено Тогда
//		ДисконтнаяКарта = врРезультат;
////		ПриИзмененииДисконтнойКарты();
//	КонецЕсли; 

КонецПроцедуры

Процедура ДействияФормыВозвратОтПокупателя(Кнопка)


	//ФормаВозврата = Документы.ВозвратТоваровОтПокупателя.ПолучитьФормуНовогоДокумента(, ЭтотОбъект);
	//ФормаВозврата.ОткрытьМодально();


КонецПроцедуры

Процедура ДействияФормыZОтчет(Кнопка)
	ФормаЗакрытияСмены = Обработки.ЗакрытиеКассовойСменыАвтозапчасти.ПолучитьФорму();
	ФормаЗакрытияСмены.мКассаККМ = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяКассаККМ");
	ФормаЗакрытияСмены.Открыть();

КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();