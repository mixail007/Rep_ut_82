//Адиянов<<<22.06.2016
Перем МассивПользователейДляПоискаЦены1USD;
Перем ПеремТипДокументаЗаказПоставщику;
Перем ПеремВалютаUSD;
//Адиянов>>>22.06.2016

Перем КнтргСверитьЦеныСЗаказомАлтШин, КнтргСверитьЦеныСЗаказомНортек;
Перем ПодкрашиватьПоступленияПриРасхожденииСЗаказом;
Перем РаботаСоСтатусомПоступленияВозврата;
Перем СтруктДопОтбор;
Перем ИспользоватьКомментарийПоступленияВозврата;


//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	ТекущиеДанные = ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущиеДанные; 
	Если ТекущиеДанные <> Неопределено тогда
		НапечататьДокументИзФормыСписка(ТекущиеДанные.Ссылка.
		ПолучитьОбъект());
	КонецЕсли;


КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	ТекущиеДанные = ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущиеДанные; 
	Если ТекущиеДанные <> Неопределено тогда
		НапечататьДвиженияДокумента(ТекущиеДанные.Ссылка);
	КонецЕсли;

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ДокументСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если не(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"РазрешитьДобавлятьПоступлениеТоваров")) Тогда
		Предупреждение("Вы не имеете право на прямое добавление документов прихода.");
		Отказ = истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ГрафикОплаты.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.ГрафикОплаты.ОтображатьТекст    = Ложь;
	ОформлениеСтроки.Ячейки.ГрафикОплаты.ОтображатьФлажок   = Ложь;

	
	Если ДанныеСтроки.Ссылка.ГрафикОплаты.Количество() > 0 Тогда
	
		ОформлениеСтроки.Ячейки.ГрафикОплаты.ИндексКартинки = 0;
		
	Иначе
		
		ОформлениеСтроки.Ячейки.ГрафикОплаты.ОтображатьКартинку = Ложь;
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.ДокументСписок);	
	
	Если РольДоступна("ДополнительныеПраваВЭД") Тогда
		
		Если ДокументСписок.Отбор.Найти("Подразделение") = Неопределено Тогда 
			ДокументСписок.Отбор.Добавить("Подразделение");
		КонецЕсли;
		ДокументСписок.Отбор["Подразделение"].Использование = Истина;
		
		списокПодразделенийПользователя = новый СписокЗначений;
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
		списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
		
		ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.ВСписке;
		ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
		
		ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь;
	иначеЕсли РольДоступна("ТолькоПросмотрНоменклатура") Тогда
		//нужны поступления только по валютным договорам
			ДокументСписок.Отбор["ВалютаДокумента"].Использование = Истина;
			ДокументСписок.Отбор["ВалютаДокумента"].ВидСравнения = ВидСравнения.Равно;
			ДокументСписок.Отбор["ВалютаДокумента"].значение = справочники.Валюты.НайтиПоКоду("840");
		//	ДокументСписок.Отбор["ВалютаДокумента"].Доступность = ложь;
	иначеЕсли РольДоступна("яштФинДиректор") Тогда
		
	иначе
		
		Если ДокументСписок.Отбор["Подразделение"].Использование  = Ложь Тогда
			ДокументСписок.Отбор["Подразделение"].Использование = Истина;
			
			списокПодразделенийПользователя = новый СписокЗначений;
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00162"));
			списокПодразделенийПользователя.Добавить(Справочники.Подразделения.НайтиПоКоду("00166"));
			
			ДокументСписок.Отбор["Подразделение"].ВидСравнения = ВидСравнения.НеВСписке;
			ДокументСписок.Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
			
			//ЭлементыФормы.Список.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ПодкрашиватьПоступленияПриРасхожденииСЗаказом = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ПодкрашиватьПоступленияПриРасхожденииСЗаказом");
	ЭлементыФормы.НадписьЕстьРасхождениеСЗаказом.Видимость = ПодкрашиватьПоступленияПриРасхожденииСЗаказом;
	
	//РаботаСоСтатусомПоступленияВозврата = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "РаботаСоСтатусомПоступленияВозврата");
	//ЭлементыФормы.ДокументСписок.Колонки.Статус.Видимость = РаботаСоСтатусомПоступленияВозврата;

	//ИспользоватьКомментарийПоступленияВозврата = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ИспользоватьКомментарийПоступленияВозврата");
	//ЭлементыФормы.ДокументСписок.Колонки.КомментарийПоступленияВозврата.Видимость = ИспользоватьКомментарийПоступленияВозврата;
	
КонецПроцедуры


Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	//Адиянов<<< Поиск в табличной части Товары цены "1" и красим цвет текста 
	Если МассивПользователейДляПоискаЦены1USD.Найти(глТекущийПользователь) <> Неопределено Тогда 
	//Адиянов>>>
		КраситьКрасным = Истина;
	Иначе
		КраситьКрасным = Ложь;
	КонецЕсли;
	
	Если КраситьКрасным Или ПодкрашиватьПоступленияПриРасхожденииСЗаказом Или РаботаСоСтатусомПоступленияВозврата Тогда
		
		Если ПодкрашиватьПоступленияПриРасхожденииСЗаказом Тогда
			МасДокументыДляПроверки = Новый Массив();
		КонецЕсли;
		
		Если РаботаСоСтатусомПоступленияВозврата Тогда
			МасДокПоказатьСтатус = Новый Массив();
		КонецЕсли;
		
		МасДокКомменты = Новый Массив();
		
		Для Каждого Строка Из ОформленияСтрок Цикл
			ТекСтр = Строка.ДанныеСтроки;
			ДокументСсылка = ТекСтр.Ссылка;
			Если КраситьКрасным И ТипЗнч(ДокументСсылка.Сделка) = ПеремТипДокументаЗаказПоставщику И
				ДокументСсылка.ВалютаДокумента = ПеремВалютаUSD Тогда 
				Если ДокументСсылка.Товары.Найти(1,"Цена") <> Неопределено Тогда 
					Строка.ЦветТекста = WebЦвета.Красный;
				КонецЕсли;	
			КонецЕсли;
			
			Если ПодкрашиватьПоступленияПриРасхожденииСЗаказом Тогда
				Если ТекСтр.Контрагент = КнтргСверитьЦеныСЗаказомАлтШин Или ТекСтр.Контрагент = КнтргСверитьЦеныСЗаказомНортек Тогда
					МасДокументыДляПроверки.Добавить(ДокументСсылка);
				КонецЕсли;
			КонецЕсли;
			
			Если РаботаСоСтатусомПоступленияВозврата Тогда
				МасДокПоказатьСтатус.Добавить(ДокументСсылка);
			КонецЕсли;
			МасДокКомменты.Добавить(ДокументСсылка);
		КонецЦикла;	
		
	КонецЕсли;	
	
	Если ПодкрашиватьПоступленияПриРасхожденииСЗаказом ИЛИ РаботаСоСтатусомПоступленияВозврата Тогда
		Запрос = Новый Запрос;
		ТекстЗапроса = ТекстЗапросаКомментыПоступленияВозврата();
		Если ПодкрашиватьПоступленияПриРасхожденииСЗаказом Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|" + ТекстЗапросаПоступленияГдеЕстьРасхождения();
			Запрос.УстановитьПараметр("ДокПоступление", МасДокументыДляПроверки);
			Если РаботаСоСтатусомПоступленияВозврата Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|;
                |
				|////////////////////////////////////////////////////////////////////////////////
				|" + ТекстЗапросаСтатусыПоступленияВозвратов();
				Запрос.УстановитьПараметр("СписокДокументов", МасДокПоказатьСтатус);
			КонецЕсли;
		Иначе
			Если РаботаСоСтатусомПоступленияВозврата Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|" + ТекстЗапросаСтатусыПоступленияВозвратов();
				Запрос.УстановитьПараметр("СписокДокументов", МасДокПоказатьСтатус);
			КонецЕсли;
		КонецЕсли;
		Запрос.УстановитьПараметр("СписокДокументовКомменты", МасДокКомменты);
		Запрос.Текст = ТекстЗапроса;
		РезультатПакет = Запрос.ВыполнитьПакет();
		тзКомменты = РезультатПакет[0].Выгрузить();
		Если ПодкрашиватьПоступленияПриРасхожденииСЗаказом Тогда
			тзЕстьРасхожденияЦен = РезультатПакет[2].Выгрузить();
			Если РаботаСоСтатусомПоступленияВозврата Тогда
				тзСтатусы = РезультатПакет[3].Выгрузить();
			КонецЕсли;
		Иначе
			Если РаботаСоСтатусомПоступленияВозврата Тогда
				тзСтатусы = РезультатПакет[1].Выгрузить();
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			ДокСсылка = ОформлениеСтроки.ДанныеСтроки.Ссылка;
			СтрКоммент = тзКомменты.Найти(ДокСсылка, "Объект");
			Если НЕ СтрКоммент = Неопределено Тогда
				ОформлениеСтроки.Ячейки.КомментарийПоступленияВозврата.УстановитьТекст(СтрКоммент.Значение);
			КонецЕсли;
			Если ПодкрашиватьПоступленияПриРасхожденииСЗаказом Тогда
				СтрЕстьРасхождение = тзЕстьРасхожденияЦен.Найти(ДокСсылка, "ДокПоступления");
				Если НЕ СтрЕстьРасхождение = Неопределено Тогда
					ОформлениеСтроки.ЦветФона = WebЦвета.Розовый;
				КонецЕсли;
			КонецЕсли;
			Если РаботаСоСтатусомПоступленияВозврата Тогда
				СтрЕстьСтатус = тзСтатусы.Найти(ДокСсылка, "Объект");
				Если НЕ СтрЕстьСтатус = Неопределено Тогда
					ОформлениеСтроки.Ячейки.Статус.УстановитьТекст(СтрЕстьСтатус.Значение);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	//Если ПодкрашиватьПоступленияПриРасхожденииСЗаказом Тогда
	//	ПодкраситьСтрокиРасхождениеЦенСЗаказомПоставщика(ОформленияСтрок);
	//КонецЕсли;
	//
	//Если РаботаСоСтатусомПоступленияВозврата Тогда
	//	ПоказатьСтатусПоступленияВозврата(ОформленияСтрок);
	//КонецЕсли;
	
	//Если ИспользоватьКомментарийПоступленияВозврата Тогда
	//	ПоказатьКомментарийПоступленияВозврата(ОформленияСтрок);
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПодкраситьСтрокиРасхождениеЦенСЗаказомПоставщика(ОформленияСтрок)
	
	МасДокументыДляПроверки = Новый Массив();
	
	Для Каждого ОформлениеТекСтроки Из ОформленияСтрок Цикл
		ТекСтр = ОформлениеТекСтроки.ДанныеСтроки;
		Если ТекСтр.Контрагент = КнтргСверитьЦеныСЗаказомАлтШин Или ТекСтр.Контрагент = КнтргСверитьЦеныСЗаказомНортек Тогда
			МасДокументыДляПроверки.Добавить(ТекСтр.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Если МасДокументыДляПроверки.Количество() > 0 Тогда
		тзДокЕстьРасхождения = ПолучитьПоступленияГдеЕстьРасхождения(МасДокументыДляПроверки);
		Если тзДокЕстьРасхождения.Количество() > 0 Тогда
			Для Каждого ОформлениеТекСтроки Из ОформленияСтрок Цикл
				ТекСтр = ОформлениеТекСтроки.ДанныеСтроки;
				СтрокаОформить = тзДокЕстьРасхождения.Найти(ТекСтр.Ссылка, "ДокПоступления");
				Если НЕ СтрокаОформить = Неопределено Тогда
					ОформлениеТекСтроки.ЦветФона = WebЦвета.Розовый;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПодкраситьСтрокиРасхождениеЦенСЗаказомПоставщика()

Процедура ПоказатьСтатусПоступленияВозврата(ОформленияСтрок)
	
	МасДокПоказатьСтатус = Новый Массив();
	
	Для Каждого ОформлениеТекСтроки Из ОформленияСтрок Цикл
		ТекСтр = ОформлениеТекСтроки.ДанныеСтроки;
		МасДокПоказатьСтатус.Добавить(ТекСтр.Ссылка);
	КонецЦикла;
	
	Если МасДокПоказатьСтатус.Количество() > 0 Тогда
		тзСтатусы = ПолучитьСтатусыПоступленияВозвратовДокументов(МасДокПоказатьСтатус);
		Для Каждого ОформлениеТекСтроки Из ОформленияСтрок Цикл
			СтрокаОформить = тзСтатусы.Найти(ОформлениеТекСтроки.ДанныеСтроки.Ссылка, "Объект");
			Если Не СтрокаОформить = Неопределено Тогда
				ОформлениеТекСтроки.Ячейки.Статус.УстановитьТекст(СтрокаОформить.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПоказатьСтатусПоступленияВозврата()

Функция ПолучитьСтатусыПоступленияВозвратовДокументов(МасДокПоказатьСтатус)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаСтатусыПоступленияВозвратов();
	
	Запрос.УстановитьПараметр("СписокДокументов", МасДокПоказатьСтатус);
	
	Результат = Запрос.Выполнить();
	Выгрузка  = Результат.Выгрузить();
	
	Возврат Выгрузка;
	
КонецФункции // ПолучитьСтатусыПоступленияВозвратовДокументов()

Функция ПолучитьПоступленияГдеЕстьРасхождения(МасДокументыДляПроверки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПоступленияГдеЕстьРасхождения();
	
	Запрос.УстановитьПараметр("ДокПоступление", МасДокументыДляПроверки);
	
	Результат = Запрос.Выполнить();
	Выгрузка  = Результат.Выгрузить();

	Возврат Выгрузка;
	
КонецФункции // ПолучитьПоступленияГдеЕстьРасхождения()

Функция ТекстЗапросаПоступленияГдеЕстьРасхождения()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Ссылка КАК ДокПоступления,
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	СУММА(ПоступлениеТоваровУслугТовары.Сумма) КАК Сумма,
	//|	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровУслугТовары.Ссылка.Сделка КАК Документ.ЗаказПоставщику) КАК ДокЗаказ
	|ПОМЕСТИТЬ втДанныеПоступлений
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В (&ДокПоступление)
	|	И ПоступлениеТоваровУслугТовары.Ссылка.Сделка ССЫЛКА Документ.ЗаказПоставщику
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровУслугТовары.Ссылка.Сделка КАК Документ.ЗаказПоставщику)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втДанныеПоступлений.ДокПоступления
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказПоставщикуТовары.Ссылка КАК ДокЗаказ,
	|		ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	//|		СУММА(ЗаказПоставщикуТовары.Количество) КАК Количество,
	|		СУММА(ЗаказПоставщикуТовары.Сумма) КАК Сумма
	|	ИЗ
	|		Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				втДанныеПоступлений.ДокЗаказ КАК ДокЗаказ
	|			ИЗ
	|				втДанныеПоступлений КАК втДанныеПоступлений) КАК зтЗаказыПоставщику
	|			ПО ЗаказПоставщикуТовары.Ссылка = зтЗаказыПоставщику.ДокЗаказ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаказПоставщикуТовары.Ссылка,
	|		ЗаказПоставщикуТовары.Номенклатура) КАК зтДанныеЗаказов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеПоступлений КАК втДанныеПоступлений
	|		ПО зтДанныеЗаказов.Номенклатура = втДанныеПоступлений.Номенклатура
	|			И зтДанныеЗаказов.ДокЗаказ = втДанныеПоступлений.ДокЗаказ
	|			И зтДанныеЗаказов.Сумма <> втДанныеПоступлений.Сумма";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаПоступленияГдеЕстьРасхождения()

Функция ТекстЗапросаСтатусыПоступленияВозвратов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект,
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И ЗначенияСвойствОбъектов.Объект В(&СписокДокументов)
	|	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтатусПоступленияВозврата)";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаСтатусыПоступленияВозвратов()

Процедура ДополнительныйОтборУстановить(Кнопка)
	
	Фрм = Документы.ПоступлениеТоваровУслуг.ПолучитьФорму("ФормаДопОтбор", ЭтаФорма);
	Фрм.СтруктДопОтбор = СтруктДопОтбор;
	Если Фрм.ОткрытьМодально() = "ОК" Тогда
		СтруктДопОтбор = Фрм.СтруктДопОтбор;
		ДополнительныйОтборСтатусВыполнить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнительныйОтборСтатусВыполнить()
	
	НачПериода = ДокументСписок.Отбор.Дата.ЗначениеС;
	Если НачПериода = '00010101000000' Тогда
		НачПериода = НачПериода + 1;
	КонецЕсли;
	КонПериода = ДокументСписок.Отбор.Дата.ЗначениеПо;
	Если КонПериода = '00010101000000' Тогда
		КонПериода = ТекущаяДата();
	КонецЕсли;
	
	Если СтруктДопОтбор.Статус Тогда
		ДокументыОтобрать = ПолучитьДокументыПоДопОтбору(НачПериода, КонПериода);
		Если НЕ ДокументыОтобрать = Неопределено Тогда
			ДокОтборЛок = ДокументыОтобрать;
			Если СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.Равно И НЕ ЗначениеЗаполнено(СтруктДопОтбор.СтатусЗначение) Тогда
				ДокументСписок.Отбор.Ссылка.ВидСравнения  = ВидСравнения.НеВСписке;
			Иначе
				ДокументСписок.Отбор.Ссылка.ВидСравнения  = ВидСравнения.ВСписке;
			КонецЕсли;
			ДокументСписок.Отбор.Ссылка.Значение      = ДокОтборЛок;
			ДокументСписок.Отбор.Ссылка.Использование = Истина;
		Иначе
			ДокументСписок.Отбор.Ссылка.Использование = ЛОЖЬ;
		КонецЕсли;
	Иначе
		ДокументСписок.Отбор.Ссылка.Использование = Ложь;
	КонецЕсли;
	
	ЭлементыФормы.ДействияФормы.Кнопки.ДополнительныйОтбор.Пометка = ДокументСписок.Отбор.Ссылка.Использование;
	
КонецПроцедуры // ДополнительныйОтборСтатусВыполнить()

Функция ПолучитьСтрокуОтборПоСтатусуДляЗапроса(СтруктДопОтбор)
	
	Если СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.Равно И НЕ ЗначениеЗаполнено(СтруктДопОтбор.СтатусЗначение) Тогда
		зтСравнениеСтатус = ""; // Выбираем все документы, а потом на форме отфильтруем их по НеВСписке
	Иначе
		Если СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.Равно Тогда
			зтСравнениеСтатус = " И ЗначенияСвойствОбъектов.Значение = &Статус";
		ИначеЕсли СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.НеРавно Тогда
			зтСравнениеСтатус = " И (НЕ ЗначенияСвойствОбъектов.Значение = &Статус)";
		ИначеЕсли СтруктДопОтбор.СтатусВидСравнения = ВидСравнения.ВСписке Тогда
			зтСравнениеСтатус = " И ЗначенияСвойствОбъектов.Значение В(&Статус)";
		Иначе
			зтСравнениеСтатус = " И (НЕ ЗначенияСвойствОбъектов.Значение В(&Статус))";
		КонецЕсли;
	КонецЕсли;
	
	Возврат зтСравнениеСтатус;
	
КонецФункции // ПолучитьСтрокуОтборПоСтатусуДляЗапроса()

Функция ПолучитьДокументыПоДопОтбору(НачПериода, КонПериода)
	
	Если СтруктДопОтбор.Статус Тогда
		
		Запрос = Новый Запрос;
		
		зтСравнениеСтатус = ПолучитьСтрокуОтборПоСтатусуДляЗапроса(СтруктДопОтбор);
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Документ.ПоступлениеТоваровУслуг) КАК Поступление
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|	И ЗначенияСвойствОбъектов.Объект.Дата МЕЖДУ &НачПериода И &КонПериода
		|	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтатусПоступленияВозврата)
		|	" + зтСравнениеСтатус + "";
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр("Статус", СтруктДопОтбор.СтатусЗначение);
		Запрос.УстановитьПараметр("НачПериода", НачПериода);
		Запрос.УстановитьПараметр("КонПериода", КонПериода);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выгрузка  = РезультатЗапроса.Выгрузить();
		Мас = Выгрузка.ВыгрузитьКолонку("Поступление");
		Спис = Новый СписокЗначений();
		Спис.ЗагрузитьЗначения(Мас);
	Иначе
		Спис = Неопределено;
	КонецЕсли;
	
	Возврат Спис;
	
КонецФункции // ПолучитьДокументыПоДопОтбору()

Процедура ДействияФормыСтатусПоступленияВозвратаИзменить(Кнопка)
	
	ТекСтр = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если ТекСтр = Неопределено Тогда
		Предупреждение("Выделите строку с документов", 20);
		Возврат;
	КонецЕсли;
	
	СтатусыСписок = ПолучитьСписокСтатусовПоступленийВозвратов();
	
	НовСтатусЭлемСписка = СтатусыСписок.ВыбратьЭлемент("Укажите статус");
	
	Если НЕ НовСтатусЭлемСписка = Неопределено Тогда
		НовСтатус = НовСтатусЭлемСписка.Значение;
		МенеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Объект   = ТекСтр.Ссылка;
		МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.СтатусПоступленияВозврата;
		МенеджерЗаписи.Значение = НовСтатус;
		МенеджерЗаписи.Записать();
		ЭлементыФормы.ДокументСписок.ОбновитьСтроки(ТекСтр);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокСтатусовПоступленийВозвратов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтатусПоступленияВозврата)";
	Результат = Запрос.Выполнить();
	Выгрузка  = Результат.Выгрузить();
	Мас = Выгрузка.ВыгрузитьКолонку("Ссылка");
	Спис = Новый СписокЗначений();
	Спис.ЗагрузитьЗначения(Мас);
	
	Возврат Спис;
	
КонецФункции // ПолучитьСписокСтатусовПоступленийВозвратов()

Процедура ПоказатьКомментарийПоступленияВозврата(ОформленияСтрок, МасДокПоказатьКоммент)
	
	//Для Каждого ОформлениеТекСтроки Из ОформленияСтрок Цикл
	//	МасДокПоказатьКоммент = Новый Массив();
	//	МасДокПоказатьКоммент.Добавить(ОформлениеТекСтроки.ДанныеСтроки.Ссылка);
	//КонецЦикла;
	
	Если МасДокПоказатьКоммент.Количество() > 0 Тогда
		тзКомменты = ПолучитьКомментыПоступленияВозврата(МасДокПоказатьКоммент);
		Для Каждого ОформлениеТекСтроки Из ОформленияСтрок Цикл
			СтрокаОформить = тзКомменты.Найти(ОформлениеТекСтроки.ДанныеСтроки.Ссылка, "Объект");
			Если Не СтрокаОформить = Неопределено Тогда
				ОформлениеТекСтроки.Ячейки.КомментарийПоступленияВозврата.УстановитьТекст(СтрокаОформить.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПоказатьКомментарийПоступленияВозврата()

Функция ПолучитьКомментыПоступленияВозврата(МасДокПоказатьКоммент)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаКомментыПоступленияВозврата();
	
	Запрос.УстановитьПараметр("СписокДокументовКомменты", МасДокПоказатьКоммент);
	
	Результат = Запрос.Выполнить();
	Выгрузка  = Результат.Выгрузить();
	
	Возврат Выгрузка;
	
КонецФункции // ПолучитьКомментыПоступленияВозврата()

Функция ТекстЗапросаКомментыПоступленияВозврата()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Документ.ПоступлениеТоваровУслуг) КАК Объект,
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И ЗначенияСвойствОбъектов.Объект В(&СписокДокументовКомменты)
	|	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КомментарийПоступленияВозврата)";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаКомментыПоступленияВозврата()

Процедура ДействияФормыКомментарийПоступленияВозвратаУстановить(Кнопка)
	
	ТекСтр = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	
	Если ТекСтр = Неопределено Тогда
		Предупреждение("Укажите строку, в которую хотите внести комментарий", 20);
		Возврат;
	КонецЕсли;
	
	СуществующийКомментарий = ПолучитьКомментарийПоступленияВозврата(ТекСтр.Ссылка);
	Если СуществующийКомментарий = Неопределено Тогда
		Коммент = "";
	Иначе
		Коммент = СуществующийКомментарий;
	КонецЕсли;
	
	Если ВвестиЗначение(Коммент, "Введите комментарий") Тогда
		ЗапомнитьНовыйКомментарийПоступленияВозврата(ТекСтр.Ссылка, Коммент);
		ЭлементыФормы.ДокументСписок.ОбновитьСтроки(ТекСтр);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКомментарийПоступленияВозврата(ДокСсылка)
	
	МенеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Объект   = ДокСсылка;
	МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.КомментарийПоступленияВозврата;
	
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи.Значение;
	
КонецФункции // ПолучитьКомментарийПоступленияВозврата()

Процедура ЗапомнитьНовыйКомментарийПоступленияВозврата(ДокСсылка, Коммент)
	
	МенеджерЗаписи = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Объект   = ДокСсылка;
	МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.КомментарийПоступленияВозврата;
	МенеджерЗаписи.Значение = Коммент;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры // ЗапомнитьНовыйКомментарийПоступленияВозврата()


///////////////////////////////////////////////////////////////////////////

//Адиянов<<<Опишем переменные в модуле, чтобы не описывать их каждый раз при получении данных списка документов
	//Массив пользователей .Пользователи указаны Светланой Новиковой 
МассивПользователейДляПоискаЦены1USD = Новый Массив;
МассивПользователейДляПоискаЦены1USD.Добавить(Справочники.Пользователи.НайтиПоКоду("Серебренникова А.А."));
МассивПользователейДляПоискаЦены1USD.Добавить(Справочники.Пользователи.НайтиПоКоду("Горицкий А. И."));
МассивПользователейДляПоискаЦены1USD.Добавить(Справочники.Пользователи.НайтиПоКоду("Балдина О. Э."));
//Программисты
МассивПользователейДляПоискаЦены1USD.Добавить(Справочники.Пользователи.НайтиПоКоду("Адиянов"));
МассивПользователейДляПоискаЦены1USD.Добавить(Справочники.Пользователи.НайтиПоКоду("Огородников"));

ПеремТипДокументаЗаказПоставщику = Тип("ДокументСсылка.ЗаказПоставщику");
ПеремВалютаUSD = Справочники.Валюты.НайтиПоКоду("840");

КнтргСверитьЦеныСЗаказомАлтШин = Справочники.Контрагенты.НайтиПоКоду("П002518"); // "Алтайский шинный комбинат"
КнтргСверитьЦеныСЗаказомНортек = Справочники.Контрагенты.НайтиПоКоду("П007527"); // "Нортек"

СтруктДопОтбор = Новый Структура;
СтруктДопОтбор.Вставить("Статус"            , Ложь);
СтруктДопОтбор.Вставить("СтатусВидСравнения", ВидСравнения.Равно);
СтруктДопОтбор.Вставить("СтатусЗначение"    , Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка());

РаботаСоСтатусомПоступленияВозврата = Истина;
ИспользоватьКомментарийПоступленияВозврата = Ложь;