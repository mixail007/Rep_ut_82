
Процедура ОсновныеДействияФормыДействие(Кнопка)
	//распределим сумму пропорционально кубатуре выбранных реализаций
	//и запишем в регистр
	список1 = новый СписокЗначений;
	суммаОбщ = 0; Коэффициент = 0;
	
	для i=0 по ТабличноеПоле1.Количество()-1 цикл
		стр1 = ТабличноеПоле1[i];
		если стр1.Выбран тогда
			список1.Добавить(стр1.Ссылка);
		КонецЕсли;	
	КонецЦикла;

	Если список1.Количество()=0 тогда
		Предупреждение("Выберите Документы для распределения!",10);
		возврат;	
	КонецЕсли;
    Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	РеализацияТоваровУслугТовары.Ссылка,
	             |	РеализацияТоваровУслугТовары.Номенклатура,
	             |	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	             |	РеализацияТоваровУслугТовары.Номенклатура.ВидТовара,
	             |	РеализацияТоваровУслугТовары.Номенклатура.Типоразмер
	             |ПОМЕСТИТЬ втт
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |ГДЕ
	             |	РеализацияТоваровУслугТовары.Ссылка В(&Список)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровУслугТовары.Ссылка,
	             |	РеализацияТоваровУслугТовары.Номенклатура,
	             |	РеализацияТоваровУслугТовары.Номенклатура.ВидТовара,
	             |	РеализацияТоваровУслугТовары.Номенклатура.Типоразмер
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	НормыЗагрузки.Типоразмер,
	             |	НормыЗагрузки.ВидПродукции,
	             |	МАКСИМУМ(НормыЗагрузки.НормаЗагрузки) КАК НормаЗагрузки
	             |ПОМЕСТИТЬ втНормы
	             |ИЗ
	             |	Справочник.НормыЗагрузки КАК НормыЗагрузки
	             |ГДЕ
	             |	НормыЗагрузки.ПометкаУдаления = ЛОЖЬ
	             |	И НормыЗагрузки.НормаЗагрузки <> 0
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	НормыЗагрузки.ВидПродукции,
	             |	НормыЗагрузки.Типоразмер
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втт.Ссылка,
	             |	втт.Номенклатура,
	             |	втт.Количество * ВЫБОР
	             |		КОГДА ЕСТЬNULL(втНормы.НормаЗагрузки, 0) <> 0
	             |			ТОГДА втНормы.НормаЗагрузки
	             |		ИНАЧЕ 1
	             |	КОНЕЦ КАК Количество
	             |ПОМЕСТИТЬ втТовары
	             |ИЗ
	             |	втт КАК втт
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втНормы КАК втНормы
	             |		ПО втт.НоменклатураВидТовара = втНормы.ВидПродукции
	             |			И втт.НоменклатураТипоразмер = втНормы.Типоразмер
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	втТовары.Ссылка КАК Реализация,
	             |	СУММА(втТовары.Количество) КАК Количество
	             |ИЗ
	             |	втТовары КАК втТовары
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	втТовары.Ссылка
	             |ИТОГИ
	             |	СУММА(Количество)
	             |ПО
	             |	ОБЩИЕ,
	             |	Реализация";
				Запрос.УстановитьПараметр("Список", список1);
				Результат = Запрос.Выполнить();

				Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Выборка.Следующий(); // общие итоги
				КолОбщ   = Выборка.Количество;
                Коэффициент = ?(КолОбщ=0, 0, СуммаКРаспределению / КолОбщ);
                ВыборкаРеализация = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				НаборЗаписей = РегистрыСведений.ТранспортныеЗатратыПоРеализациям.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Поступление.Установить(ВладелецФормы.ЭтотОбъект.Ссылка);
                НаборЗаписей.Отбор.Возмещение.Установить(Истина);

				
				Пока ВыборкаРеализация.Следующий() Цикл//
					НаборЗаписей.Отбор.Реализация.Установить(ВыборкаРеализация.Реализация);
					//НаборЗаписей.Прочитать();
					НаборЗаписей.Очистить();
					НаборЗаписей.Записать();
					Сумма= ВыборкаРеализация.Количество*Коэффициент;
					
					НоваяЗапись=НаборЗаписей.Добавить();
					НоваяЗапись.Поступление=ВладелецФормы.ЭтотОбъект.Ссылка;
					НоваяЗапись.Реализация = ВыборкаРеализация.Реализация;
					НоваяЗапись.Возмещение=Истина;
                    НоваяЗапись.Сумма=Сумма;
					НаборЗаписей.Записать();
				КонецЦикла;
				
				
ЭтаФорма.Закрыть(); 
КонецПроцедуры

Процедура ТабличноеПоле1Выбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ВыбраннаяСтрока.Выбран = не ВыбраннаяСтрока.Выбран;
КонецПроцедуры

Процедура ТабличноеПоле1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	//	ОформлениеСтроки.Ячейки.Выбран.ОтображатьТекст = ЛОЖЬ;   // для отображения уартинки флажка
	Если ДанныеСтроки.Выбран=Истина тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый;
	КонецЕсли;	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = КонецДня(НастройкаПериода.ПолучитьДатуОкончания());
	КонецЕсли;
	КоманднаяПанель1Обновить(неопределено);	
КонецПроцедуры
Процедура ГосНомерПриИзменении(Элемент)
	КоманднаяПанель1Обновить(неопределено);
КонецПроцедуры
Процедура КоманднаяПанель1Обновить(Кнопка)
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТранспортныеЗатратыПоРеализациям.Реализация
	|ПОМЕСТИТЬ втОтмеченныеРеализации
	|ИЗ
	|	РегистрСведений.ТранспортныеЗатратыПоРеализациям КАК ТранспортныеЗатратыПоРеализациям
	|ГДЕ
	|	ТранспортныеЗатратыПоРеализациям.Поступление = &Поступление
	|	И (НЕ ТранспортныеЗатратыПоРеализациям.Реализация = ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка))
	|	И ТранспортныеЗатратыПоРеализациям.Возмещение = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Ссылка.Дата КАК Дата,
	|	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
	|	РеализацияТоваровУслугТовары.Ссылка.СрокДоставки,
	|	РеализацияТоваровУслугТовары.Ссылка.Организация,
	|	РеализацияТоваровУслугТовары.Ссылка.Подразделение,
	|	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК СуммаТоваров,
	|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	|	РеализацияТоваровУслугТовары.Ссылка.Ответственный,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)) КАК НоменклатурныеГруппы
	|ПОМЕСТИТЬ втРеализации
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И (НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления)
	|	И (НЕ РеализацияТоваровУслугТовары.Сумма = 0)
	|	И РеализацияТоваровУслугТовары.Ссылка.ГосНомерАвтомобиля ПОДОБНО &ГосНомер
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Ссылка,
	|	РеализацияТоваровУслугТовары.Ссылка.Дата,
	|	РеализацияТоваровУслугТовары.Ссылка.Номер,
	|	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
	|	РеализацияТоваровУслугТовары.Ссылка.СрокДоставки,
	|	РеализацияТоваровУслугТовары.Ссылка.Организация,
	|	РеализацияТоваровУслугТовары.Ссылка.Подразделение,
	|	РеализацияТоваровУслугТовары.Ссылка.Ответственный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втОтмеченныеРеализации.Реализация ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК выбран,
	|	втРеализации.Дата КАК Дата,
	|	втРеализации.Номер КАК Номер,
	|	втРеализации.Ссылка,
	|	втРеализации.Контрагент,
	|	втРеализации.СрокДоставки,
	|	втРеализации.Организация,
	|	втРеализации.Подразделение,
	|	втРеализации.СуммаТоваров,
	|	втРеализации.Количество,
	|	втРеализации.Ответственный,
	|	втРеализации.НоменклатурныеГруппы
	|ИЗ
	|	втРеализации КАК втРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОтмеченныеРеализации КАК втОтмеченныеРеализации
	|		ПО втРеализации.Ссылка = втОтмеченныеРеализации.Реализация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Номер
	|АВТОУПОРЯДОЧИВАНИЕ";
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	ЛОЖЬ КАК Выбран,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Дата КАК Дата,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	//			   |	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.СрокДоставки,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Организация,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Подразделение,
	//			   |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК СуммаТоваров,
	//			   |	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Ответственный,
	//			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)) КАК НоменклатурныеГруппы
	//			   |ИЗ
	//			   |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//			   |ГДЕ
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	//			   |	И (НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления)
	//			   |	И (НЕ РеализацияТоваровУслугТовары.Сумма = 0)
	//			   |    И РеализацияТоваровУслугТовары.Ссылка.ГосНомерАвтомобиля Подобно &ГосНомер
	//			   |
	//			   |СГРУППИРОВАТЬ ПО
	//			   |	РеализацияТоваровУслугТовары.Ссылка
	//			   //|	,РеализацияТоваровУслугТовары.Ссылка.Организация,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Подразделение,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Номер,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Дата,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.СрокДоставки,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Ответственный
	//			   |
	//			   |УПОРЯДОЧИТЬ ПО
	//			   |	Дата,
	//			   |	Номер
	//			   |АВТОУПОРЯДОЧИВАНИЕ";                                          
	
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Поступление",ВладелецФормы.ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ГосНомер", "%"+СокрЛП(ГосНомер)+"%");
	
	список1 = новый Списокзначений;
	Запрос.УстановитьПараметр("ПустойСписок",список1);
	
	Результат = Запрос.Выполнить();
	ТабличноеПоле1 = Результат.Выгрузить();
	Если ТабличноеПоле1.Количество()>0 тогда
		ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока = ТабличноеПоле1[ТабличноеПоле1.Количество()-1]; // последняя строка
	КонецЕсли;
КонецПроцедуры
Процедура КоманднаяПанель1Действие9(Кнопка)
	
	Если ТабличноеПоле1.Количество()>0 тогда
	Строка1 = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.НоменклатурныеГруппы;
		Если Вопрос("Список реализаций может быть неполным из-за предыдущих отборов. 
				   |Обновить весь список, отменить отметки ""Выбран"" 
				   |и после этого сделать отбор Ном.группа = '"+Строка1+"'?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Да тогда
			КоманднаяПанель1Обновить(неопределено);
		КонецЕсли;
	иначе // нет строк
		КоманднаяПанель1Обновить(неопределено);
	КонецЕсли;
	
	Если ВвестиСтроку(Строка1, "Введите Номенклатурную группу для отбора") тогда
		i=0; N=ТабличноеПоле1.Количество();
		пока i<N цикл 
			стр1 = ТабличноеПоле1[i];
			Если Найти(нрег(стр1.НоменклатурныеГруппы), нрег(строка1))=0 тогда
				ТабличноеПоле1.Удалить(i); N=N-1;
			иначе
				i=i+1;
			КонецЕсли;	
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1ВыбратьВсе(Кнопка)
	для каждого стр1 из ТабличноеПоле1 цикл
	 стр1.выбран = истина;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1СнятьВсе(Кнопка)
	для каждого стр1 из ТабличноеПоле1 цикл
	 стр1.выбран = Ложь;
	КонецЦикла;
КонецПроцедуры
Процедура КоманднаяПанель1ОтборПоТекКолонке(Кнопка)
	ИмяПоля1  = ЭлементыФормы.ТабличноеПоле1.ТекущаяКолонка.Имя;
	ЗначПоля1 = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные[ИмяПоля1];
	
		i=0; N=ТабличноеПоле1.Количество();
		пока i<N цикл 
			стр1 = ТабличноеПоле1[i];
			Если стр1[ИмяПоля1]<>ЗначПоля1 тогда
				ТабличноеПоле1.Удалить(i); N=N-1;
			иначе
				i=i+1;
			КонецЕсли;	
		КонецЦикла;		
		
КонецПроцедуры


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	ДатаНач = Дата(НачалоДня(ВладелецФормы.ЭтотОбъект.Дата) - 14*86400); // за 14 дней до даты документа поступления
	ДатаКон = КонецДня(ВладелецФормы.ЭтотОбъект.Дата);  //по конец тек.дня документа Поступления
	КоманднаяПанель1Обновить(неопределено);//сразу заполним списком!
	
КонецПроцедуры


Процедура ОсновныеДействияФормыОчиститьВсеПривязки(Кнопка)
			Если Вопрос("Вы действительно хотите очистить все привязки?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Да тогда
			  НаборЗаписей = РегистрыСведений.ТранспортныеЗатратыПоРеализациям.СоздатьНаборЗаписей();
			  НаборЗаписей.Отбор.Поступление.Установить(ВладелецФормы.ЭтотОбъект.Ссылка);
              НаборЗаписей.Отбор.Возмещение.Установить(Истина);
              НаборЗаписей.Записать();
			  КоманднаяПанель1Обновить(неопределено);
		КонецЕсли;
КонецПроцедуры

