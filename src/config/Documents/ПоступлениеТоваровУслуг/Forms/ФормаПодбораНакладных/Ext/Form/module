
//--------Выбор и закрытие формы-----------------------
Процедура ДействияФормыВыбрать(Кнопка)
	
	Если СуммаКРаспределению=0 тогда
		Предупреждение("Заполните Сумму услуги к распределению...",10);
		возврат;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Номенклатура) тогда
		Предупреждение("Заполните Услугу распределения...",10);
		возврат;
	КонецЕсли;	
	
	Если НЕ Номенклатура.Услуга тогда
		Предупреждение("Выбранная номенклатура - не является Услугой!
					   |И не может быть выбрана для распределения...",10);
		возврат;
	КонецЕсли;	

	Если НЕ ЗначениеЗаполнено(СтатьяЗатрат) тогда
		Предупреждение("Выберите 'Статью затрат' для распределения услуги...",10);
		возврат;
	КонецЕсли;	

	
	// по всем строкам - где Выбран
	суммаОбщ = 0; Коэффициент = 0;
	СписокОбщЗаказов = новый СписокЗначений;
	СписокПервичныхЗаказов = новый СписокЗначений;
	
	
	список1 = новый СписокЗначений;
	для i=0 по ТабличноеПоле1.Количество()-1 цикл
		стр1 = ТабличноеПоле1[i];
		Если стр1.Выбран тогда
			список1.Добавить(стр1.Ссылка);
		КонецЕсли;	
	КонецЦикла;
	
	
	список2 = новый СписокЗначений;
	для i=0 по ТабличноеПолеПеремещения.Количество()-1 цикл
		стр2 = ТабличноеПолеПеремещения[i];
		Если стр2.Выбран тогда
			список2.Добавить(стр2.Ссылка);
		КонецЕсли;	
	КонецЦикла;
	
	Если список1.Количество()=0 и список2.Количество()=0 тогда
		Предупреждение("Выберите Документы для распределения!",10);
		возврат;	
	КонецЕсли;
	
	
//===================Распределение по Ном.Группам (ОТДЕЛЬНО!)===================================================================	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	а.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				   |	а.ПодразделениеДок как ПодразделениеДок,
				    |	а.Заказ,
	               |	а.Количество КАК Количество,
	               |	а.Объем КАК Объем,
	               |	а.Сумма КАК Сумма
				   |ИЗ
	               |	(
				   |"+?(список1.Количество()=0,"","ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		РеализацияТоваровУслугТовары.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				   
				   |		РеализацияТоваровУслугТовары.Ссылка.Подразделение как ПодразделениеДок,
				   
				    |		РеализацияТоваровУслугТовары.Ссылка.Сделка как Заказ,
				   
	               |		СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	               |		СУММА(РеализацияТоваровУслугТовары.Количество * РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаХраненияОстатков.Объем) КАК Объем,
	               |		СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма
	                |	ИЗ
	               |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |	ГДЕ
	               |		РеализацияТоваровУслугТовары.Ссылка В(&Список1)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		РеализацияТоваровУслугТовары.Номенклатура.НоменклатурнаяГруппа,
	               |		РеализацияТоваровУслугТовары.Ссылка.Подразделение
				 //+++ 25.04.2018
				  |	, РеализацияТоваровУслугТовары.Ссылка.Сделка
				  |")
				   
				   + ?( список1.Количество()>0 и список2.Количество()>0,"ОБЪЕДИНИТЬ ВСЕ","")
				   
				   //========================перемещения=======================================
	               +?(список2.Количество()=0,"","
				   |ВЫБРАТЬ
				    |	тов.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				    |	тов.Ссылка.Подразделение КАК ПодразделениеДок,
				    |	ВЫБОР
				    |		КОГДА тов.Ссылка.ВнутреннийЗаказ = ЗНАЧЕНИЕ(Документ.ВнутреннийЗаказ.ПустаяСсылка)
				    |			ТОГДА ВЫБОР
				    |					КОГДА тов.Ссылка.Перемещение = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
				    |						ТОГДА НЕОПРЕДЕЛЕНО
				    |					ИНАЧЕ ВЫБОР
				    |							КОГДА тов.Ссылка.Перемещение.ВнутреннийЗаказ = ЗНАЧЕНИЕ(Документ.ВнутреннийЗаказ.ПустаяСсылка)
				    |								ТОГДА НЕОПРЕДЕЛЕНО
				    |							ИНАЧЕ тов.Ссылка.Перемещение.ВнутреннийЗаказ.ДокументОснование
				    |						КОНЕЦ
				    |				КОНЕЦ
				    |		ИНАЧЕ тов.Ссылка.ВнутреннийЗаказ.ДокументОснование
				    |	КОНЕЦ КАК Заказ,
				    |	СУММА(тов.Количество) КАК Количество,
				    |	СУММА(тов.Количество * тов.Номенклатура.ЕдиницаХраненияОстатков.Объем) КАК Объем,
				    |	СУММА(тов.Цена * тов.Количество) КАК Сумма
				    |ИЗ
				    |	Документ.ПеремещениеТоваров.Товары КАК тов
				    |ГДЕ
				    |	тов.Ссылка В(&Список2)
				    |
				    |СГРУППИРОВАТЬ ПО
				    |	тов.Номенклатура.НоменклатурнаяГруппа,
				    |	тов.Ссылка.Подразделение,
				    |	ВЫБОР
				    |		КОГДА тов.Ссылка.ВнутреннийЗаказ = ЗНАЧЕНИЕ(Документ.ВнутреннийЗаказ.ПустаяСсылка)
				    |			ТОГДА ВЫБОР
				    |					КОГДА тов.Ссылка.Перемещение = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
				    |						ТОГДА НЕОПРЕДЕЛЕНО
				    |					ИНАЧЕ ВЫБОР
				    |							КОГДА тов.Ссылка.Перемещение.ВнутреннийЗаказ = ЗНАЧЕНИЕ(Документ.ВнутреннийЗаказ.ПустаяСсылка)
				    |								ТОГДА НЕОПРЕДЕЛЕНО
				    |							ИНАЧЕ тов.Ссылка.Перемещение.ВнутреннийЗаказ.ДокументОснование
				    |						КОНЕЦ
				    |				КОНЕЦ
				    |		ИНАЧЕ тов.Ссылка.ВнутреннийЗаказ.ДокументОснование
				    |	КОНЕЦ")

				   +" ) КАК а
	              |
	               |УПОРЯДОЧИТЬ ПО
	                |	НоменклатурнаяГруппа,
					|	ПодразделениеДок
	              |АВТОУПОРЯДОЧИВАНИЕ";
				   
	Запрос.УстановитьПараметр("Список1", список1);
	Запрос.УстановитьПараметр("Список2", список2);
	
	Результат = Запрос.Выполнить();
	таблНГ = Результат.Выгрузить();
	
//+++( 20.04.2018 ============Распределение по Подразделениям=======================================
//  таблНГ  - изначальная таблица с распределением по НГ
//по заказу:
// Если Заказ в СписокОбщЗаказов - тогда надо разделять по подразделениям первичных заказов...
// Иначе по подразделению бюджета из менеджера Заказа
// => ПодразделениеДок

N = ТаблНГ.Количество()-1;
для i=0 по N цикл
	стр1 = ТаблНГ[i];
	Если стр1.Заказ = неопределено тогда // нет заказа - подразделение документа
		продолжить;
	КонецЕсли;	
	
	Если стр1.Заказ.типЗаказа = 7  тогда// ТОЛЬКО заказы 293 и 295 обработок!!!  -  или  стр1.Заказ.типЗаказа = 6 простые объединения не надо разделять?!
		
		КолНГ = стр1.Количество;
		
		для каждого стр2 из стр1.Заказ.Заказы цикл
			закПервичный = стр2.ЗаказПокупателя;
			
			табл3 = закПервичный.Товары.выгрузить(,"Номенклатура,Количество");
			табл3.Колонки.Добавить("НоменклатурнаяГруппа");
			для каждого стр3 из табл3 цикл
				стр3.НоменклатурнаяГруппа = стр3.Номенклатура.НоменклатурнаяГруппа;
			КонецЦикла;
			табл3.Свернуть("НоменклатурнаяГруппа", "Количество"); //меньше строк!
			
			для каждого стр3 из табл3 цикл
				Если стр1.НоменклатурнаяГруппа = стр3.НоменклатурнаяГруппа тогда
					колНадо = мин(КолНГ, стр3.Количество);
					Если КолНГ = КолНадо тогда
						стр1.ПодразделениеДок = подразделениеМенеджера(закПервичный);
						стр1.Объем = Окр( ?(стр1.Количество<=0,0,стр1.Объем * КолНадо / стр1.Количество),6);
						стр1.Сумма = Окр( ?(стр1.Количество<=0,0,стр1.Сумма * КолНадо / стр1.Количество),4);
						стр1.Количество = КолНадо;
						стр1.Заказ = закПервичный;
						КолНГ = 0;
					ИначеЕсли колНадо>0 тогда //+++ прибавляем новую строку!
						стр4 = ТаблНГ.Добавить();
						ЗаполнитьЗначенияСвойств(стр4, стр1);
						стр4.ПодразделениеДок = подразделениеМенеджера(закПервичный);
						стр4.Объем = Окр(?(стр4.Количество<=0,0,стр4.Объем * КолНадо / стр4.Количество),6);
						стр4.Сумма = Окр(?(стр4.Количество<=0,0,стр4.Сумма * КолНадо / стр4.Количество),4);
						стр4.Заказ = закПервичный;
						стр4.Количество = КолНадо;
						КолНГ = КолНГ - КолНадо;
					КонецЕсли;
				КонецЕсли;	
					
				Если КолНГ=0 тогда 
					прервать;
				КонецЕсли;	
			КонецЦикла;//--------------по товарам закПервичный -------------
			
			Если КолНГ=0 тогда  //Если уже не надо больше - выходим из цикла по заказам
				прервать;
			Иначе
				колНадо = мин(КолНГ, стр1.Количество);
				//стр1.ПодразделениеДок = подразделениеМенеджера(закПервичный);
				стр1.Объем = Окр( ?(стр1.Количество<=0,0,стр1.Объем * КолНадо / стр1.Количество),6);
				стр1.Сумма = Окр( ?(стр1.Количество<=0,0,стр1.Сумма * КолНадо / стр1.Количество),4);
				стр1.Количество = КолНадо;
			КонецЕсли;	
		КонецЦикла;	
		
	Иначе //--------------подразделение менеджера из Заказа-----------
		стр1.ПодразделениеДок = ПодразделениеМенеджера(стр1.Заказ);
	КонецЕсли;
	
КонецЦикла;	
	запрос2 = новый запрос;
	запрос2.Текст = "ВЫБРАТЬ
	                |	а.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                |	а.ПодразделениеДок КАК ПодразделениеДок,
	                |	а.Количество, а.Объем, а.Сумма
					|ПОМЕСТИТЬ ВТ_табл
	                |ИЗ &ТаблНГ КАК а;
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	табл.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                |	табл.ПодразделениеДок КАК Подразделение,
	                |	СУММА(табл.Количество) КАК Количество,
	                |	СУММА(табл.Объем) КАК Объем,
	                |	СУММА(табл.Сумма) КАК Сумма
	                |ИЗ
	                |	ВТ_табл КАК табл
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	табл.НоменклатурнаяГруппа,
	                |	табл.ПодразделениеДок
	                |ИТОГИ
	                |	СУММА(Количество),
	                |	СУММА(Объем),
	                |	СУММА(Сумма)
	                |ПО
	                |	ОБЩИЕ";
	запрос2.УстановитьПараметр("таблНГ", таблНГ);
	рез = запрос2.Выполнить();
	выборка = рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
//+++)

	Выборка.Следующий(); // общие итоги
	
	суммаОбщ = Выборка.Сумма;
	//+++ 02.04.2018 - распределение по количеству>> по объему 
	//КолОбщ   = Выборка.Количество;
	КолОбщ   = Выборка.Объем;
	
	Коэффициент = ?(суммаОбщ=0, 0, СуммаКРаспределению / суммаОбщ);
	КолвоКРаспределению = ?(КолвоКРаспределению=0, 1, КолвоКРаспределению);
	КоэффициентК = ?(суммаОбщ=0, 0, КолвоКРаспределению / суммаОбщ); 
		
	//ЦенаСредняя = Окр(СуммаКРаспределению/КолвоКРаспределению, 2); //средняя цена для всех строк - одинаковая
	ЦенаСредняя = Окр(СуммаКРаспределению/КолОбщ, 2); //средняя цена для всех строк - одинаковая
	
	ВыборкаНомГрупп = Выборка.Выбрать(); //без группировок!
	
//+++ 26.04.2018 по задаче № 44703	
подразделениеИМ   = справочники.Подразделения.НайтиПоКоду("00139"); // отдел интернет-продаж
статьяЗатратУпрИМ = Справочники.СтатьиЗатратУПР.НайтиПоКоду("00016"); 
	
	Пока ВыборкаНомГрупп.Следующий() Цикл //+++ потом по каждому подразделению - по ном.группам
			
		стр2 = ВладелецФормы.Услуги.Добавить();
		
		стр2.СтатьяЗатрат = СтатьяЗатрат; //Номенклатура.СтатьяЗатрат;
		стр2.Номенклатура = Номенклатура;
		стр2.Содержание   = Номенклатура.НаименованиеПолное;
		стр2.Подразделение = ВыборкаНомГрупп.Подразделение;//---------единое------------
		
		//+++ 26.04.2018 по задаче № 44703	от 
		Если стр2.Подразделение = подразделениеИМ тогда    
			стр2.СтатьяЗатратУПР = статьяЗатратУпрИМ;
		КонецЕсли;	
		
		стр2.НоменклатурнаяГруппа = ВыборкаНомГрупп.НоменклатурнаяГруппа;  
		стр2.Количество =  КолвоКРаспределению; //+++ 
		
		//+++ 02.04.2018 - по объему!
		//стр2.Сумма = Окр(ЦенаСредняя * ВыборкаНомГрупп.Количество, 2, 1);
		стр2.Сумма = Окр(ЦенаСредняя * ВыборкаНомГрупп.Объем, 2); //
		стр2.Цена  = ?(стр2.Количество=0, стр2.Сумма, Окр(стр2.Сумма / стр2.Количество,2,1) ); // <>ЦенаСредняя; округляется в большую сторону!
			
//-------Исправление очень малого количеста или суммы ---------------------------------		
		Если стр2.Количество=0 и стр2.Сумма<>0 тогда
	//		сообщить(Строка(стр2.НомерСтроки)+" строка: Установлено Количество=0.001, т.к. Сумма распределения = "+формат(ЦенаСредняя * ВыборкаНомГрупп.сумма * КоэффициентК, "ЧДЦ=2; ЧН=0,00")+" р. для подразделения:'"+ВыборкаПодразделение.Подразделение+"' по ном.группе:'"+строка(ВыборкаНомГрупп.НоменклатурнаяГруппа)+"'. Цена пересчитана автоматически.", СтатусСообщения.Информация);
			стр2.Количество= 0.001;
			стр2.Цена  = Окр(стр2.Сумма / стр2.Количество, 2, 1); // <>ЦенаСредняя;  
		ИначеЕсли стр2.Сумма=0 тогда
	//		сообщить("---> НЕ учитываются затраты по подразделению '"+ВыборкаПодразделение.Подразделение+"' по ном.группе: '"+строка(ВыборкаНомГрупп.НоменклатурнаяГруппа)+"' т.к. Сумма распределения < 0.5 коп.("+формат(ЦенаСредняя * ВыборкаНомГрупп.сумма * КоэффициентК*100, "ЧДЦ=2; ЧН=0,00")+"), Количество="+формат(ВыборкаНомГрупп.сумма * КоэффициентК, "ЧДЦ=3; ЧН=0,000")+" шт.!", СтатусСообщения.Информация);
			//1) удаляем 
			ВладелецФормы.Услуги.Удалить(ВладелецФормы.Услуги.Количество()-1);//удалим последнюю строку!
			продолжить;
		КонецЕсли;
		
		//+++ 2 вариант: пересчет Суммы по округленной цене!
		//// стр2.Цена  = ЦенаСредняя;  // Сумма = +- 0.1% от Цены - это может оказаться Очень большая погрешность до нескольких тысяч рублей!!!
	    стр2.Сумма = стр2.Цена * стр2.Количество; 		
	
//-----------------Учет НДС-----------------------------------------------		
		Если ВладелецФормы.ЭтотОбъект.УчитыватьНДС тогда 
			стр2.СтавкаНДС = СтавкаНДС;//+++ из формы!!!
			Если стр2.СтавкаНДС=перечисления.СтавкиНДС.БезНДС или стр2.СтавкаНДС=перечисления.СтавкиНДС.НДС0 тогда
				стр2.СуммаНДС = 0;
			ИначеЕсли стр2.СтавкаНДС=перечисления.СтавкиНДС.НДС18 или стр2.СтавкаНДС=перечисления.СтавкиНДС.НДС18_118 тогда
				Если ВладелецФормы.ЭтотОбъект.СуммаВключаетНДС тогда
				стр2.СуммаНДС = Окр(стр2.Сумма * 18/118,2);
			 	Иначе //не включает
			    стр2.СуммаНДС =  Окр(стр2.Сумма * 18/100,2);
				КонецЕсли;
			ИначеЕсли стр2.СтавкаНДС=перечисления.СтавкиНДС.НДС10 или стр2.СтавкаНДС=перечисления.СтавкиНДС.НДС10_110 тогда
				Если ВладелецФормы.ЭтотОбъект.СуммаВключаетНДС тогда
				стр2.СуммаНДС =  Окр(стр2.Сумма * 10/110,2);
			 	Иначе //не включает
			    стр2.СуммаНДС = Окр(стр2.Сумма * 10/100,2);
				КонецЕсли;
			ИначеЕсли стр2.СтавкаНДС=перечисления.СтавкиНДС.НДС20 или стр2.СтавкаНДС=перечисления.СтавкиНДС.НДС20_120 тогда
				Если ВладелецФормы.ЭтотОбъект.СуммаВключаетНДС тогда
				стр2.СуммаНДС = Окр(стр2.Сумма * 20/120,2);
			 	Иначе //не включает
			    стр2.СуммаНДС = Окр(стр2.Сумма * 20/100,2);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; //Учитывается НДС
	КонецЦикла;	//	ВыборкаНомГрупп		

//цена в последней строке может быть не равна средней цене после "выравнивания"
	//------------выравнивание копеек в строке с максимальной суммой... для минимизации погрешности!----------------------------
	дельта = СуммаКРаспределению - ВладелецФормы.Услуги.Итог("Сумма");    
	дельтаК = КолвоКРаспределению*ВладелецФормы.Услуги.Количество() - ВладелецФормы.Услуги.Итог("Количество"); //+++ 25.01.2012
	
	Если дельта<>0 тогда
		//стр2 = ВладелецФормы.Услуги[ВладелецФормы.Услуги.Количество()-1];
		
		//определяем максимум в Табл.Части
		ТЗ = ВладелецФормы.Услуги.Выгрузить(,"Сумма");
		ТЗ.Сортировать("Сумма убыв");
		максСумма =  ТЗ[0].Сумма;
		//находим по значению
		стр2 = ВладелецФормы.Услуги.Найти(максСумма, "Сумма" );
		
		//расшифровка для "показа" незначительности погрешности
		строка222 = " (с макс.Суммой = "+формат(максСумма,"ЧДЦ=2")+"р.)";
		//проц = дельта*100/максСумма;
		//строка222 = строка222 +?(проц>-21 и проц<-0.04 и проц<21 и проц>0.04, " "+Формат(проц,"ЧДЦ=1; ЧН=0")+"%", ""); //0.1 до 11%
		сообщить("ошибка округления Общей Суммы = "+Формат(дельта, "ЧДЦ=2")+" руб.   Разность добавлена в строку № "+Строка(стр2.НомерСтроки)+строка222+" Цена пересчита автоматически.", СтатусСообщения.Информация);
		
		стр2.Сумма = стр2.Сумма  + дельта;
		стр2.Цена  = ?(стр2.Количество=0, ЦенаСредняя, стр2.Сумма / стр2.Количество); // <>ЦенаСредняя; 
	   	//стр2.Сумма = стр2.Цена * стр2.Количество; // обратный пересчет
		
		//-----------------пересчет НДС-----------------------------------------------		
		Если ВладелецФормы.ЭтотОбъект.УчитыватьНДС тогда 
			стр2.СтавкаНДС = СтавкаНДС;//+++ из формы!!!
			чНДС = ПолучитьСтавкуНДС(стр2.СтавкаНДС); //28.12.2018 - 18 или 20% -> 10/100 или 18/118
			стр2.СуммаНДС  = Окр(стр2.Сумма * чНДС/(100+?(ВладелецФормы.ЭтотОбъект.СуммаВключаетНДС,чНДС,0) ), 2);
		КонецЕсли; //Учитывается НДС
				
 	КонецЕсли;	
	
	//варавнивание количества в строке с максимальным количеством... для минимизации погрешности!
	Если дельтаК<>0 тогда
		//стр2 = ВладелецФормы.Услуги[ВладелецФормы.Услуги.Количество()-1];
		
		//определяем максимум в Табл.Части
		Если дельта=0 тогда 
			ТЗ = ВладелецФормы.Услуги.Выгрузить(,"Количество");
			ТЗ.Сортировать("Количество убыв");
			максКол =  ТЗ[0].Количество;
			стр2 = ВладелецФормы.Услуги.Найти(максКол, "Количество" );
		Иначе // Если опреледен максимум Суммы, то в этой же строке и максимум Количества и повторный поиск - не нужен!
			максКол = стр2.Количество;
		КонецЕсли;
	
		//расшифровка для "показа" незначительности погрешности
		строка222 = " (с макс.Количеством = "+формат(максКол,"ЧДЦ=3")+"шт.)";
		//проц = дельтаК*100/максКол;
		//строка222 = строка222 +?(проц>-21 и проц<-0.04 и проц<21 и проц>0.04, " ("+Формат(проц,"ЧДЦ=1; ЧН=0")+"%)", "");//процент, но не очень большой <11%
		сообщить("ошибка округления Общего Количества = "+Формат(дельтаК, "ЧДЦ=3")+" шт. Разность добавлена в строку № "+Строка(стр2.НомерСтроки)+строка222+"    Цена пересчита автоматически.", СтатусСообщения.Информация);
	 	
		стр2.Количество = стр2.Количество  + дельтаК;
		стр2.Цена  = ?(стр2.Количество=0, ЦенаСредняя, стр2.Сумма / стр2.Количество); // <>ЦенаСредняя; 
		//стр2.Сумма = стр2.Цена * стр2.Количество; // обратный пересчет
	КонецЕсли;
//Сообщить("Цена скорректирована из расчета Суммы и Количества по каждой Ном.Группе.  Средняя цена - не изменилась.", СтатусСообщения.Информация);	


//----по НДС также могут накопиться несоответствия ---------
	Если ВладелецФормы.ЭтотОбъект.УчитыватьНДС тогда 
	СуммаИтог = ВладелецФормы.Услуги.Итог("Сумма"); 
		Если СтавкаНДС=перечисления.СтавкиНДС.НДС18 или  СтавкаНДС=перечисления.СтавкиНДС.НДС18_118 тогда
			Если ВладелецФормы.СуммаВключаетНДС тогда
			 СуммаНДС = Окр(СуммаИтог * 18/118,2,1);
			 Иначе //не включает
			 СуммаНДС =  Окр(СуммаИтог * 18/100,2,1);
			КонецЕсли;
		ИначеЕсли  СтавкаНДС=перечисления.СтавкиНДС.НДС10 или СтавкаНДС=перечисления.СтавкиНДС.НДС10_110 тогда
			Если ВладелецФормы.СуммаВключаетНДС тогда
			СуммаНДС =  Окр(СуммаИтог * 10/110,2,1);
			 Иначе //не включает
			СуммаНДС = Окр(СуммаИтог * 10/100,2,1);
			КонецЕсли;
		ИначеЕсли СтавкаНДС=перечисления.СтавкиНДС.НДС20 или СтавкаНДС=перечисления.СтавкиНДС.НДС20_120 тогда
			Если ВладелецФормы.СуммаВключаетНДС тогда
			СуммаНДС = Окр(СуммаИтог * 20/120,2,1);
			 Иначе //не включает
			СуммаНДС = Окр(СуммаИтог * 20/100,2,1);
			КонецЕсли;
		Иначе
			СуммаНДС = 0;
		КонецЕсли;
			
	дельтаНДС = СуммаНДС - ВладелецФормы.Услуги.Итог("СуммаНДС");
		Если дельтаНДС<>0 тогда
		   Если дельта=0 и дельтаК=0 тогда 
			ТЗ = ВладелецФормы.Услуги.Выгрузить(,"СуммаНДС");
			ТЗ.Сортировать("СуммаНДС убыв");
			максНДС =  ТЗ[0].СуммаНДС;
			стр2 = ВладелецФормы.Услуги.Найти(максНДС, "СуммаНДС" );
		   Иначе // Если опреледен максимум Суммы, то в этой же строке и максимум Количества и повторный поиск - не нужен!
			максНДС = стр2.СуммаНДС;
		   КонецЕсли;
       	   
		//расшифровка для "показа" незначительности погрешности
		строка222 = " с макс. Суммой НДС = "+формат(максНДС,"ЧДЦ=2")+" р.";
		проц = ?(максНДС=0, 100, дельтаНДС*100/максНДС);
		строка222 = строка222 +?(проц>-21 и проц<-0.04 и проц<21 и проц>0.04, " ("+Формат(проц,"ЧДЦ=1; ЧН=0")+"%)", "");//процент, но не очень большой <11%
		сообщить("ошибка округления Общего НДС составляет "+Формат(дельтаНДС, "ЧДЦ=2")+" р. Разность добавлена в строку № "+Строка(стр2.НомерСтроки)+строка222, СтатусСообщения.Информация);
 		
		стр2.СуммаНДС = стр2.СуммаНДС  + дельтаНДС;
		КонецЕсли; //дельтаНДС
	
    КонецЕсли;//учитывается НДС
    //
	//дописываем строки не на затраты
	Для Каждого СтрТЗ из ТабУслугиНеНаЗатраты цикл
		стр2 = ВладелецФормы.Услуги.Добавить();
		ЗаполнитьЗначенияСвойств(стр2,СтрТЗ);
	КонецЦикла;	

	//
НаборЗаписей = РегистрыСведений.ТранспортныеЗатратыПоРеализациям.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.Поступление.Установить(ВладелецФормы.ЭтотОбъект.Ссылка);
НаборЗаписей.Отбор.Возмещение.Установить(Ложь);
Для сч=0 по список1.Количество()-1 Цикл
	
		НоваяЗапись=НаборЗаписей.Добавить();
		НоваяЗапись.Поступление=ВладелецФормы.ЭтотОбъект.Ссылка;
		НоваяЗапись.Реализация = список1[сч].Значение;
		НоваяЗапись.Возмещение=Ложь;
	
КонецЦикла;
НаборЗаписей.Записать();
	
	
ЭтаФорма.Закрыть(); // в параметр формы передается выбранные накладные
	
КонецПроцедуры


функция ПодразделениеМенеджера(Заказ)
	мен = Заказ.ДоговорКонтрагента.ОтветственноеЛицо;
	Если мен.ПодразделениеБюджет.Пустая() тогда 
		Если мен.ОсновноеПодразделение.Пустая() тогда
		Подразделение1 = Заказ.Подразделение;
		Иначе
	    Подразделение1 = мен.ОсновноеПодразделение;
		КонецЕсли;
	Иначе
		Подразделение1 = мен.ПодразделениеБюджет;
	КонецЕсли;	
	возврат Подразделение1;	
КонецФункции	

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	ДатаНач = Дата(НачалоДня(ВладелецФормы.ЭтотОбъект.Дата) - 14*86400); // за 14 дней до даты документа поступления
	ДатаКон = КонецДня(ВладелецФормы.ЭтотОбъект.Дата);  //по конец тек.дня документа Поступления
	КоманднаяПанель1Обновить(неопределено);//сразу заполним списком!
	
	
	ДатаНачПеремещения = Дата(НачалоДня(ВладелецФормы.ЭтотОбъект.Дата) - 14*86400); // за 14 дней до даты документа поступления
	ДатаКонПеремещения = КонецДня(ВладелецФормы.ЭтотОбъект.Дата);  //по конец тек.дня документа Поступления
	КоманднаяПанель2Обновить(неопределено);//сразу заполним списком!

КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = КонецДня(НастройкаПериода.ПолучитьДатуОкончания());
	КонецЕсли;
КоманднаяПанель1Обновить(неопределено);	
КонецПроцедуры

Процедура КоманднаяПанель1Обновить(Кнопка)
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ТранспортныеЗатратыПоРеализациям.Реализация
	             |ПОМЕСТИТЬ втОтмеченныеРеализации
	             |ИЗ
	             |	РегистрСведений.ТранспортныеЗатратыПоРеализациям КАК ТранспортныеЗатратыПоРеализациям
	             |ГДЕ
	             |	ТранспортныеЗатратыПоРеализациям.Поступление = &Поступление
	             |	И (НЕ ТранспортныеЗатратыПоРеализациям.Реализация = ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка))
	             |	И ТранспортныеЗатратыПоРеализациям.Возмещение = ЛОЖЬ
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ТранспортныеЗатратыПоРеализациям.Реализация
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	РеализацияТоваровУслугТовары.Ссылка.Дата КАК Дата,
	             |	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	             |	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	             |	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
	             |	РеализацияТоваровУслугТовары.Ссылка.СрокДоставки,
	             |	РеализацияТоваровУслугТовары.Ссылка.Организация,
	             |	РеализацияТоваровУслугТовары.Ссылка.Подразделение,
	             |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК СуммаТоваров,
	             |	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	             |	РеализацияТоваровУслугТовары.Ссылка.Ответственный,
	             |	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)) КАК НоменклатурныеГруппы
	             |ПОМЕСТИТЬ втРеализации
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |ГДЕ
	             |	(РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	             |				И (НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления)
	             |				И (НЕ РеализацияТоваровУслугТовары.Сумма = 0)
	             |				И РеализацияТоваровУслугТовары.Ссылка.ГосНомерАвтомобиля ПОДОБНО &ГосНомер
	             |			ИЛИ РеализацияТоваровУслугТовары.Ссылка В
	             |				(ВЫБРАТЬ
	             |					втОтмеченныеРеализации.Реализация
	             |				ИЗ
	             |					втОтмеченныеРеализации КАК втОтмеченныеРеализации))
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровУслугТовары.Ссылка,
	             |	РеализацияТоваровУслугТовары.Ссылка.Дата,
	             |	РеализацияТоваровУслугТовары.Ссылка.Номер,
	             |	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
	             |	РеализацияТоваровУслугТовары.Ссылка.СрокДоставки,
	             |	РеализацияТоваровУслугТовары.Ссылка.Организация,
	             |	РеализацияТоваровУслугТовары.Ссылка.Подразделение,
	             |	РеализацияТоваровУслугТовары.Ссылка.Ответственный
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫБОР
	             |		КОГДА втОтмеченныеРеализации.Реализация ЕСТЬ NULL 
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК выбран,
	             |	втРеализации.Дата КАК Дата,
	             |	втРеализации.Номер КАК Номер,
	             |	втРеализации.Ссылка,
	             |	втРеализации.Контрагент,
	             |	втРеализации.СрокДоставки,
	             |	втРеализации.Организация,
	             |	втРеализации.Подразделение,
	             |	втРеализации.СуммаТоваров,
	             |	втРеализации.Количество,
	             |	втРеализации.Ответственный,
	             |	втРеализации.НоменклатурныеГруппы
	             |ИЗ
	             |	втРеализации КАК втРеализации
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втОтмеченныеРеализации КАК втОтмеченныеРеализации
	             |		ПО втРеализации.Ссылка = втОтмеченныеРеализации.Реализация
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Дата,
	             |	Номер
	             |АВТОУПОРЯДОЧИВАНИЕ";
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	ЛОЖЬ КАК Выбран,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Дата КАК Дата,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	//			   |	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.СрокДоставки,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Организация,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Подразделение,
	//			   |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК СуммаТоваров,
	//			   |	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Ответственный,
	//			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)) КАК НоменклатурныеГруппы
	//			   |ИЗ
	//			   |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//			   |ГДЕ
	//			   |	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	//			   |	И (НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления)
	//			   |	И (НЕ РеализацияТоваровУслугТовары.Сумма = 0)
	//			   |    И РеализацияТоваровУслугТовары.Ссылка.ГосНомерАвтомобиля Подобно &ГосНомер
	//			   |
	//			   |СГРУППИРОВАТЬ ПО
	//			   |	РеализацияТоваровУслугТовары.Ссылка
	//			   //|	,РеализацияТоваровУслугТовары.Ссылка.Организация,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Подразделение,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Номер,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Дата,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.СрокДоставки,
	//			   //|	РеализацияТоваровУслугТовары.Ссылка.Ответственный
	//			   |
	//			   |УПОРЯДОЧИТЬ ПО
	//			   |	Дата,
	//			   |	Номер
	//			   |АВТОУПОРЯДОЧИВАНИЕ";                                          
	
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Поступление",ВладелецФормы.ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ГосНомер", "%"+СокрЛП(ГосНомер)+"%");
	
	список1 = новый Списокзначений;
	Запрос.УстановитьПараметр("ПустойСписок",список1);
	
	Результат = Запрос.Выполнить();
	ТабличноеПоле1 = Результат.Выгрузить();
	Если ТабличноеПоле1.Количество()>0 тогда
		ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока = ТабличноеПоле1[ТабличноеПоле1.Количество()-1]; // последняя строка
	КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПоле1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
//	ОформлениеСтроки.Ячейки.Выбран.ОтображатьТекст = ЛОЖЬ;   // для отображения уартинки флажка
	Если ДанныеСтроки.Выбран=Истина тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый;
	КонецЕсли;	
	
//для 1 строки [*]	
Если СокрЛП(ДанныеСтроки.НоменклатурныеГруппы) = "" тогда
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РеализацияТоваровУслугТовары.Номенклатура.НоменклатурнаяГруппа.Наименование КАК НомГруппа
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |ГДЕ
	               |	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомГруппа
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеСтроки.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	ОформлениеСтроки.ячейки.НоменклатурныеГруппы.Текст = "";
	ДанныеСтроки.НоменклатурныеГруппы = "";
	Пока Выборка.Следующий() Цикл
	//ОформлениеСтроки.ячейки.НоменклатурныеГруппы.Значение.Добавить(Выборка.НомГруппа);
	ДанныеСтроки.НоменклатурныеГруппы = ДанныеСтроки.НоменклатурныеГруппы + Выборка.НомГруппа+"; ";
	ОформлениеСтроки.ячейки.НоменклатурныеГруппы.Текст = ОформлениеСтроки.ячейки.НоменклатурныеГруппы.Текст + Выборка.НомГруппа+"; ";
	КонецЦикла;
КонецЕсли;

КонецПроцедуры

Процедура НоменклатураПриИзменении(Элемент)
	
	СтатьяЗатрат = Номенклатура.СтатьяЗатрат;
	СтавкаНДС    = Номенклатура.СтавкаНДС;
	
КонецПроцедуры

Процедура КоманднаяПанель1Действие9(Кнопка)
	
	Если ТабличноеПоле1.Количество()>0 тогда
	Строка1 = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные.НоменклатурныеГруппы;
		Если Вопрос("Список реализаций может быть неполным из-за предыдущих отборов. 
				   |Обновить весь список, отменить отметки ""Выбран"" 
				   |и после этого сделать отбор Ном.группа = '"+Строка1+"'?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Да тогда
			КоманднаяПанель1Обновить(неопределено);
		КонецЕсли;
	Иначе // нет строк
		КоманднаяПанель1Обновить(неопределено);
	КонецЕсли;
	
	Если ВвестиСтроку(Строка1, "Введите Номенклатурную группу для отбора") тогда
		i=0; N=ТабличноеПоле1.Количество();
		пока i<N цикл 
			стр1 = ТабличноеПоле1[i];
			Если Найти(нрег(стр1.НоменклатурныеГруппы), нрег(строка1))=0 тогда
				ТабличноеПоле1.Удалить(i); N=N-1;
			Иначе
				i=i+1;
			КонецЕсли;	
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1ВыбратьВсе(Кнопка)
	для каждого стр1 из ТабличноеПоле1 цикл
	 стр1.выбран = истина;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1СнятьВсе(Кнопка)
	для каждого стр1 из ТабличноеПоле1 цикл
	 стр1.выбран = Ложь;
	КонецЦикла;
КонецПроцедуры

Процедура ТабличноеПоле1Выбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ВыбраннаяСтрока.Выбран = не ВыбраннаяСтрока.Выбран;
КонецПроцедуры

Процедура КоманднаяПанель1ОтборПоТекКолонке(Кнопка)
	ИмяПоля1  = ЭлементыФормы.ТабличноеПоле1.ТекущаяКолонка.Имя;
	ЗначПоля1 = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные[ИмяПоля1];
	
		i=0; N=ТабличноеПоле1.Количество();
		пока i<N цикл 
			стр1 = ТабличноеПоле1[i];
			Если стр1[ИмяПоля1]<>ЗначПоля1 тогда
				ТабличноеПоле1.Удалить(i); N=N-1;
			Иначе
				i=i+1;
			КонецЕсли;	
		КонецЦикла;		
		
КонецПроцедуры

Процедура ТабличноеПоле1СсылкаПриИзменении(Элемент)
	стр1 = ЭлементыФормы.ТабличноеПоле1.ТекущиеДанные;
	стр1.Дата  = стр1.Ссылка.Дата;
	стр1.Номер = стр1.Ссылка.Номер;
	стр1.Контрагент   = стр1.Ссылка.Контрагент;
	стр1.СуммаТоваров = стр1.Ссылка.Товары.Итог("Сумма");
	стр1.Количество   = стр1.Ссылка.Товары.Итог("Количество");
	стр1.СрокДоставки = стр1.Ссылка.СрокДоставки;
	стр1.Организация  = стр1.Ссылка.Организация;
	стр1.Подразделение= стр1.Ссылка.Подразделение;
	стр1.Ответственный= стр1.Ссылка.Ответственный;
	стр1.НоменклатурныеГруппы = "";
КонецПроцедуры

Процедура ГосНомерПриИзменении(Элемент)
	КоманднаяПанель1Обновить(неопределено);
КонецПроцедуры

Процедура ОсновныеДействияФормыОчиститьВсеПривязки(Кнопка)
	НаборЗаписей = РегистрыСведений.ТранспортныеЗатратыПоРеализациям.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Поступление.Установить(ВладелецФормы.ЭтотОбъект.Ссылка);
	НаборЗаписей.Отбор.Возмещение.Установить(Ложь);
    НаборЗаписей.Записать();
    КоманднаяПанель1Обновить(неопределено);
	КоманднаяПанель2Обновить(неопределено);
КонецПроцедуры

Процедура КоманднаяПанель2Обновить(Кнопка)
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ТранспортныеЗатратыПоРеализациям.Реализация
	             |ПОМЕСТИТЬ втОтмеченныеДокументы
	             |ИЗ
	             |	РегистрСведений.ТранспортныеЗатратыПоРеализациям КАК ТранспортныеЗатратыПоРеализациям
	             |ГДЕ
	             |	ТранспортныеЗатратыПоРеализациям.Поступление = &Поступление
	             |	И (НЕ ТранспортныеЗатратыПоРеализациям.Реализация = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка))
	             |	И ТранспортныеЗатратыПоРеализациям.Возмещение = ЛОЖЬ
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ТранспортныеЗатратыПоРеализациям.Реализация
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПеремещениеТоваровТовары.Ссылка.Дата КАК Дата,
	             |	ПеремещениеТоваровТовары.Ссылка.Номер КАК Номер,
	             |	ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	             |	ПеремещениеТоваровТовары.Ссылка.Организация,
	             |	ПеремещениеТоваровТовары.Ссылка.Подразделение,
	             |	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
	             |	ПеремещениеТоваровТовары.Ссылка.Ответственный,
	             |	ВЫРАЗИТЬ("""" КАК СТРОКА(1000)) КАК НоменклатурныеГруппы,
	             |	ПеремещениеТоваровТовары.Ссылка.Перевозчик
	             |ПОМЕСТИТЬ втДокумент
	             |ИЗ
	             |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	             |ГДЕ
	             |	(ПеремещениеТоваровТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	             |				И (НЕ ПеремещениеТоваровТовары.Ссылка.ПометкаУдаления)
	             |				И ПеремещениеТоваровТовары.Ссылка.ГосНомерАвтомобиля ПОДОБНО &ГосНомер
	             |			ИЛИ ПеремещениеТоваровТовары.Ссылка В
	             |				(ВЫБРАТЬ
	             |					втОтмеченныеДокументы.Реализация
	             |				ИЗ
	             |					втОтмеченныеДокументы КАК втОтмеченныеДокументы))
	       //+++30.03.2015 ВСЕ перемещения!     |	И ПОДСТРОКА(ПеремещениеТоваровТовары.Ссылка.Перевозчик, 1, 1) <> "" ""
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПеремещениеТоваровТовары.Ссылка,
	             |	ПеремещениеТоваровТовары.Ссылка.Дата,
	             |	ПеремещениеТоваровТовары.Ссылка.Номер,
	             |	ПеремещениеТоваровТовары.Ссылка.Организация,
	             |	ПеремещениеТоваровТовары.Ссылка.Подразделение,
	             |	ПеремещениеТоваровТовары.Ссылка.Ответственный,
	             |	ПеремещениеТоваровТовары.Ссылка.Перевозчик
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫБОР
	             |		КОГДА втОтмеченныеДокументы.Реализация ЕСТЬ NULL 
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК выбран,
	             |	втДокумент.Дата КАК Дата,
	             |	втДокумент.Номер КАК Номер,
	             |	втДокумент.Ссылка,
	             |	втДокумент.Организация,
	             |	втДокумент.Подразделение,
	             |	втДокумент.Количество,
	             |	втДокумент.Ответственный,
	             |	втДокумент.НоменклатурныеГруппы,
	             |	втДокумент.Перевозчик
	             |ИЗ
	             |	втДокумент КАК втДокумент
	             |		ЛЕВОЕ СОЕДИНЕНИЕ втОтмеченныеДокументы КАК втОтмеченныеДокументы
	             |		ПО втДокумент.Ссылка = втОтмеченныеДокументы.Реализация
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Дата,
	             |	Номер
	             |АВТОУПОРЯДОЧИВАНИЕ";
                 Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНачПеремещения));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКонПеремещения));
	Запрос.УстановитьПараметр("Поступление",ВладелецФормы.ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ГосНомер", "%"+СокрЛП(ГосНомерПеремещения)+"%");
	
	список1 = новый Списокзначений;
	Запрос.УстановитьПараметр("ПустойСписок",список1);
	
	Результат = Запрос.Выполнить();
	ТабличноеПолеПеремещения = Результат.Выгрузить();
	Если ТабличноеПолеПеремещения.Количество()>0 тогда
		ЭлементыФормы.ТабличноеПолеПеремещения.ТекущаяСтрока = ТабличноеПолеПеремещения[ТабличноеПолеПеремещения.Количество()-1]; // последняя строка
	КонецЕсли;

КонецПроцедуры

Процедура ТабличноеПолеПеремещенияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	//	ОформлениеСтроки.Ячейки.Выбран.ОтображатьТекст = ЛОЖЬ;   // для отображения уартинки флажка
	Если ДанныеСтроки.Выбран=Истина тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.СветлоЖелтый;
	КонецЕсли;	
	
	//для 1 строки [*]	
	Если СокрЛП(ДанныеСтроки.НоменклатурныеГруппы) = "" тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПеремещениеТоваровТовары.Номенклатура.НоменклатурнаяГруппа.Наименование КАК НомГруппа
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|ГДЕ
		|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомГруппа
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеСтроки.Ссылка);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		ОформлениеСтроки.ячейки.НоменклатурныеГруппы.Текст = "";
		ДанныеСтроки.НоменклатурныеГруппы = "";
		Пока Выборка.Следующий() Цикл
			//ОформлениеСтроки.ячейки.НоменклатурныеГруппы.Значение.Добавить(Выборка.НомГруппа);
			ДанныеСтроки.НоменклатурныеГруппы = ДанныеСтроки.НоменклатурныеГруппы + Выборка.НомГруппа+"; ";
			ОформлениеСтроки.ячейки.НоменклатурныеГруппы.Текст = ОформлениеСтроки.ячейки.НоменклатурныеГруппы.Текст + Выборка.НомГруппа+"; ";
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПолеПеремещенияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ВыбраннаяСтрока.Выбран = не ВыбраннаяСтрока.Выбран;
КонецПроцедуры

Процедура ГосНомерПеремещенияПриИзменении(Элемент)
	КоманднаяПанель2Обновить(неопределено);
КонецПроцедуры

Процедура КоманднаяПанель2СнятьВсе(Кнопка)
	для каждого стр1 из ТабличноеПолеПеремещения цикл
		стр1.выбран = Ложь;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель2ВыбратьВсе(Кнопка)
	для каждого стр1 из ТабличноеПолеПеремещения цикл
		стр1.выбран = Истина;
	КонецЦикла
КонецПроцедуры

Процедура КоманднаяПанель2ОтборПоТекКолонке(Кнопка)
	ИмяПоля1  = ЭлементыФормы.ТабличноеПолеПеремещения.ТекущаяКолонка.Имя;
	ЗначПоля1 = ЭлементыФормы.ТабличноеПолеПеремещения.ТекущиеДанные[ИмяПоля1];
	
	i=0; N=ТабличноеПолеПеремещения.Количество();
	пока i<N цикл 
		стр1 = ТабличноеПолеПеремещения[i];
		Если стр1[ИмяПоля1]<>ЗначПоля1 тогда
			ТабличноеПолеПеремещения.Удалить(i); N=N-1;
		Иначе
			i=i+1;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель2Действие9(Кнопка)
	Если ТабличноеПолеПеремещения.Количество()>0 тогда
		Строка1 = ЭлементыФормы.ТабличноеПолеПеремещения.ТекущиеДанные.НоменклатурныеГруппы;
		Если Вопрос("Список реализаций может быть неполным из-за предыдущих отборов. 
			|Обновить весь список, отменить отметки ""Выбран"" 
			|и после этого сделать отбор Ном.группа = '"+Строка1+"'?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Да тогда
			КоманднаяПанель2Обновить(неопределено);
		КонецЕсли;
	Иначе // нет строк
		КоманднаяПанель2Обновить(неопределено);
	КонецЕсли;
	
	Если ВвестиСтроку(Строка1, "Введите Номенклатурную группу для отбора") тогда
		i=0; N=ТабличноеПолеПеремещения.Количество();
		пока i<N цикл 
			стр1 = ТабличноеПолеПеремещения[i];
			Если Найти(нрег(стр1.НоменклатурныеГруппы), нрег(строка1))=0 тогда
				ТабличноеПолеПеремещения.Удалить(i); N=N-1;
			Иначе
				i=i+1;
			КонецЕсли;	
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры




