
Процедура ПриОткрытии()
	ЗапросДопРасходы = Новый Запрос;
	ЗапросДопРасходы.Текст = "ВЫБРАТЬ
	|	ДанныеПоДопРасходам.Контрагент,
	|	ДанныеПоДопРасходам.Договор,
	|	ДанныеПоДопРасходам.Услуга,
	|	0 КАК Сумма
	|ИЗ
	|	РегистрСведений.ДанныеПоДопРасходам КАК ДанныеПоДопРасходам";
	ДопРасходы = ЗапросДопРасходы.Выполнить().Выгрузить();
	
	ЗапросКурсы=новый Запрос;
	ЗапросКурсы.Текст="ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(, ) КАК КурсыВалютСрезПоследних";	
	Курсы=ЗапросКурсы.Выполнить().Выгрузить();
	ЭлементыФормы.Курсы.СоздатьКолонки();
	
КонецПроцедуры

Процедура КоманднаяПанельДействийКнопкаДа(Кнопка)
	МассивФорм = Новый Массив;
	Для Каждого СтрокаРасходов Из ДопРасходы Цикл
		Если СтрокаРасходов.Сумма > 0 Тогда
			ДокДопРасходов = Документы.ПоступлениеДопРасходов.СоздатьДокумент();
			ЗаполнитьШапкуДокументаПоОснованию(ДокДопРасходов, Ссылка);
			ДокДопРасходов.ЗаполнитьТоварыПоПоступлениюТоваров(Ссылка, ДокДопРасходов.Товары);
			ДокДопРасходов.Дата = Ссылка.Дата + 1;
			ДокДопРасходов.СпособРаспределения = Перечисления.СпособыРаспределенияДопРасходов.ПоСумме;
			ДокДопРасходов.Контрагент = СтрокаРасходов.Контрагент;
			ДокДопРасходов.ДоговорКонтрагента = СтрокаРасходов.Договор;
						ДокДопРасходов.Услуга = СтрокаРасходов.Услуга;
			ДокДопРасходов.ВидОперации = Перечисления.ВидыОперацийПоступлениеДопРасходов.УслугаСтороннейОрганизации;
			Валюта=СтрокаРасходов.Договор.ВалютаВзаиморасчетов;
			Курс=1;
			стрКурс=Курсы.Найти(Валюта,"Валюта");
			Если стрКурс<>Неопределено тогда
				Курс=стрКурс.Курс;
			КонецЕсли;
			ДокДопРасходов.Сумма = СтрокаРасходов.Сумма*Курс;
			//ДокДопРасходов.КурсВзаиморасчетов=Курс;
			ДокДопрасходов.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
			ДокДопрасходов.ОтражатьВБухгалтерскомУчете = Ложь;
			ДокДопрасходов.ОтражатьВНалоговомУчете = Ложь;
			//ДокДопРасходов.Записать();
			ДокДопРасходов.Записать(РежимЗаписиДокумента.Проведение);
			ФормаДокДопРасходов = ДокДопРасходов.ПолучитьФорму("ФормаДокумента");
			МассивФорм.Добавить(ФормаДокДопРасходов);
		КонецЕсли;
	КонецЦикла;
	Если ТипЗнч(Ссылка.Сделка.Основание)=тип("ДокументСсылка.ЗаказПоставщикуСезонный") и Ссылка.Сделка.Основание<>Документы.ЗаказПоставщикуСезонный.ПустаяСсылка() тогда
	СформироватьДопРасходыКрышки(Ссылка.Сделка.Основание,МассивФорм);
	КонецЕсли;
	ЭтаФорма.Закрыть();
	Если МассивФорм.Количество() > 0 Тогда
		Для Каждого ФормаДок Из МассивФорм Цикл
			//ФормаДок.Открыть();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельДействийОтмена(Кнопка)
	ЭтаФорма.Закрыть();
КонецПроцедуры

Функция СформироватьДопРасходыКрышки(СезонныйЗаказ,МассивФорм)
	
	Запрос = новый запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура
	|ПОМЕСТИТЬ втНоменклатураДопРасходов
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &ДокДопРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втНоменклатураДопРасходов.Номенклатура,
	|	КомплектующиеНоменклатуры.Комплектующая
	|ПОМЕСТИТЬ втДискиСКрышками
	|ИЗ
	|	втНоменклатураДопРасходов КАК втНоменклатураДопРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	|		ПО втНоменклатураДопРасходов.Номенклатура = КомплектующиеНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	МАКСИМУМ(ЗаказПоставщикуТовары.Цена) КАК Цена
	|ПОМЕСТИТЬ втЦеныКрышек
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка.Основание = &ЗаказПоставщикуСезонный
	|	И ЗаказПоставщикуТовары.Номенклатура В ИЕРАРХИИ(&Крышки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщикуТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДискиСКрышками.Номенклатура,
	|	втЦеныКрышек.Цена
	|ИЗ
	|	втДискиСКрышками КАК втДискиСКрышками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦеныКрышек КАК втЦеныКрышек
	|		ПО втДискиСКрышками.Комплектующая = втЦеныКрышек.Номенклатура";
	Запрос.УстановитьПараметр("ЗаказПоставщикуСезонный",СезонныйЗаказ);
	Запрос.УстановитьПараметр("Крышки",Справочники.Номенклатура.НайтиПоКоду("0080004"));
	
	Запрос.УстановитьПараметр("ДокДопРасходов",Ссылка);
	Рез=Запрос.Выполнить().Выгрузить();
	Если Рез.Количество()>0 тогда
		Если Вопрос("Сформировать доп. расходы по крышкам?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да тогда
			ДокДопРасходов = Документы.ПоступлениеДопРасходов.СоздатьДокумент();
			ЗаполнитьШапкуДокументаПоОснованию(ДокДопРасходов, Ссылка);
			ДокДопРасходов.ЗаполнитьТоварыПоПоступлениюТоваров(Ссылка, ДокДопРасходов.Товары);
			ДокДопРасходов.Дата = ТекущаяДата();
			ДокДопРасходов.СпособРаспределения = Перечисления.СпособыРаспределенияДопРасходов.ПоСумме;
			//ДокДопРасходов.Сделка=Ссылка.Сделка;
			//ДокДопРасходов.Контрагент = СтрокаРасходов.Контрагент;
			ДокДопРасходов.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			//ДокДопРасходов.Услуга = СтрокаРасходов.Услуга;
			ДокДопРасходов.ВидОперации = Перечисления.ВидыОперацийПоступлениеДопРасходов.УслугаСтороннейОрганизации;
			Валюта=Справочники.Валюты.НайтиПоКоду("840");
			Курс=1;
			ДокДопРасходов.Комментарий="Крышки.";
			стрКурс=Курсы.Найти(Валюта,"Валюта");
			Если стрКурс<>Неопределено тогда
				Курс=стрКурс.Курс;
			КонецЕсли;
			//ДокДопРасходов.Сумма = СтрокаРасходов.Сумма*Курс;
			ДокДопРасходов.КурсВзаиморасчетов=Курс;
			ДокДопрасходов.ВалютаДокумента = Валюта;
			ДокДопрасходов.ОтражатьВБухгалтерскомУчете = Ложь;
			ДокДопрасходов.ОтражатьВНалоговомУчете = Ложь;
			
			ДокДопРасходов.Записать();
			
			Для каждого стр из ДокДопРасходов.Товары цикл
				стрКрышка=Рез.Найти(стр.Номенклатура,"Номенклатура");
				Если стрКрышка<>Неопределено тогда
					стр.Сумма=Стр.Количество*стрКрышка.Цена;
				КонецЕсли; 
			КонецЦикла;
			ДокДопРасходов.Записать();
			ФормаДокДопРасходов = ДокДопРасходов.ПолучитьФорму("ФормаДокумента");
			МассивФорм.Добавить(ФормаДокДопРасходов);
		КонецЕсли;
	КонецЕсли;
КонецФункции	
