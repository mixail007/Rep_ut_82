перем ПервыйДень,ПоследнийДень;

Процедура ПриОткрытии()
	ПервыйДень = Новый Массив(6);
	ПоследнийДень= Новый Массив(6);
	Если  ЭтоНовый() тогда
	валюта = константы.ВалютаРегламентированногоУчета.Получить();	
	конецЕсли;
	
	ПервыйДень[1] = ПлановыйПериод ;
	последнийДень[1] =ПервыйДень[1]+(7- ДеньНедели(Плановыйпериод))*24*60*60;
	//////////////////////////////////////////////////
	ПервыйДень[2] = последнийДень[1]+24*60*60;
	последнийДень[2] =ПервыйДень[2]+(7- ДеньНедели(ПервыйДень[2]))*24*60*60;
	/////////////////////////////////////////////////
	ПервыйДень[3] = последнийДень[2]+24*60*60;
	последнийДень[3] =ПервыйДень[3]+(7- ДеньНедели(ПервыйДень[3]))*24*60*60;
	////////////////////////////////////////////////
	ПервыйДень[4] = последнийДень[3]+24*60*60;
	последнийДень[4] =ПервыйДень[4]+(7- ДеньНедели(ПервыйДень[4]))*24*60*60;
	///////////////////////////////////////	
	ПервыйДень[5] = последнийДень[4]+24*60*60;
	последнийДень[5] =НачалоДня(конецМесяца(плановыйПериод));

		
	Если ЭтоНовый() Тогда									
		
		Ответственный_ = глТекущийПользователь;
		Если  глТекущийПользователь.ОсновноеПодразделение.ОбособленноеПодразделение тогда
		Подразделение = глТекущийПользователь.ОсновноеПодразделение;
	    иначе
		подразделение = Справочники.Подразделения.НайтиПоКоду("00005");
		конецЕсли;
		НаправлениеПродаж = Ответственный_.направлениеПродаж;

		
		периодПланирования = НачалоМесяца(ТекущаяДата()); 
	иначе	
		модифицированность = Ложь;	
	КонецЕсли;
	ЭлементыФормы.Панель.Страницы.Поступление.Видимость =поступление;
	ЭлементыФормы.Панель.Страницы.Расход.Видимость = Расход;
	ЭлементыФормы.Панель.Страницы.Страница2.Видимость = Расход;
	
	 	// прочитаем все из регистра сведений
	наборЗаписей = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.МесяцПланирования.Установить(ПлановыйПериод);
		ВалютаДляОтбора = ?(ПлановыйПериод<Дата('20180701'),Справочники.Валюты.ПустаяСсылка(),Валюта);
	наборЗаписей.Отбор.Валюта.Установить(ВалютаДляОтбора);

   // наборЗаписей.Отбор.ответственноеЛицо.Установить(Ответственный_);
	наборЗаписей.Отбор.приходРасход.Установить(Перечисления.ВидыДвиженийПриходРасход.Приход);
	наборЗаписей.Прочитать();
	Для каждого Запись из НаборЗаписей Цикл
		Если Запись.Исполнитель = Ответственный_ Тогда
			стр = ЭлементыФормы.Поступления.Значение.Добавить();
			ЗаполнитьЗначенияСвойств(стр,Запись);
			Если Валюта <> Константы.ВалютаРегламентированногоУчета.Получить() и Курс>0 тогда
				стр.Неделя1 = стр.Неделя1/Курс;
				стр.Неделя2 = стр.Неделя2/Курс;
				стр.Неделя3 = стр.Неделя3/Курс;
				стр.Неделя4 = стр.Неделя4/Курс;
				стр.Неделя5 = стр.Неделя5/Курс;
				стр.Перенос = стр.Перенос/Курс;
			конецЕсли;
			
			
			стр.Итого = стр.Неделя1+стр.Неделя2+стр.Неделя3+стр.Неделя4+стр.Неделя5;
			Если стр.Дебиторка <>0 тогда
				стр.Разница = стр.Дебиторка-стр.Итого;
			конецЕсли;
		конецЕсли;
	конецЦикла;	
	
	наборЗаписей = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.МесяцПланирования.Установить(ПлановыйПериод);
    наборЗаписей.Отбор.ответственноеЛицо.Установить(Ответственный_);
	ВалютаДляОтбора = ?(ПлановыйПериод<Дата('20180701'),Справочники.Валюты.ПустаяСсылка(),Валюта);
	наборЗаписей.Отбор.Валюта.Установить(ВалютаДляОтбора);
	наборЗаписей.Отбор.приходРасход.Установить(Перечисления.ВидыДвиженийПриходРасход.Расход);
	наборЗаписей.Прочитать();
	Для каждого Запись из НаборЗаписей Цикл
		стр = ЭлементыФормы.Расходы.Значение.Добавить();
		ЗаполнитьЗначенияСвойств(стр,Запись);
		Если Валюта <> Константы.ВалютаРегламентированногоУчета.Получить() и Курс>0 тогда
		стр.Неделя1 = стр.Неделя1/Курс;
		стр.Неделя2 = стр.Неделя2/Курс;
		стр.Неделя3 = стр.Неделя3/Курс;
		стр.Неделя4 = стр.Неделя4/Курс;
		стр.Неделя5 = стр.Неделя5/Курс;
		стр.Перенос = стр.Перенос/Курс;
		конецЕсли;

		стр.Итого = стр.Неделя1+стр.Неделя2+стр.Неделя3+стр.Неделя4+стр.Неделя5;
	конецЦикла;	
    
	//ЭлементыФормы.ПолеВвода1.Видимость = ВидОперации = Перечисления.ВидыОперацийПерегрузНедогруз.Перегруз;
	//Если ПлановыйПериод = Дата(1,1,1) Тогда
	//	 Элементыформы.Планирование.Доступность = Ложь;
	//конецЕсли;
	
	Если ПлановыйПериод<>Дата(1,1,1) Тогда
		ЭлементыФормы.Расходы.Колонки.Неделя1.ТекстШапки = ""+Формат(ПервыйДень[1], "ДФ=dd.MM")+" - "+Формат(последнийДень[1], "ДФ=dd.MM");
		ЭлементыФормы.Расходы.Колонки.Неделя2.ТекстШапки = ""+Формат(ПервыйДень[2], "ДФ=dd.MM")+" - "+Формат(последнийДень[2], "ДФ=dd.MM");
		ЭлементыФормы.Расходы.Колонки.Неделя3.ТекстШапки = ""+Формат(ПервыйДень[3], "ДФ=dd.MM")+" - "+Формат(последнийДень[3], "ДФ=dd.MM");
		ЭлементыФормы.Расходы.Колонки.Неделя4.ТекстШапки = ""+Формат(ПервыйДень[4], "ДФ=dd.MM")+" - "+Формат(последнийДень[4], "ДФ=dd.MM");
		
		ЭлементыФормы.Поступления.Колонки.Неделя1.ТекстШапки = ""+Формат(ПервыйДень[1], "ДФ=dd.MM")+" - "+Формат(последнийДень[1], "ДФ=dd.MM");
		ЭлементыФормы.Поступления.Колонки.Неделя2.ТекстШапки = ""+Формат(ПервыйДень[2], "ДФ=dd.MM")+" - "+Формат(последнийДень[2], "ДФ=dd.MM");
		ЭлементыФормы.Поступления.Колонки.Неделя3.ТекстШапки = ""+Формат(ПервыйДень[3], "ДФ=dd.MM")+" - "+Формат(последнийДень[3], "ДФ=dd.MM");
		ЭлементыФормы.Поступления.Колонки.Неделя4.ТекстШапки = ""+Формат(ПервыйДень[4], "ДФ=dd.MM")+" - "+Формат(последнийДень[4], "ДФ=dd.MM");
		
		Если НачалоДня(конецМесяца(плановыйПериод)) > последнийДень[4] тогда
			ЭлементыФормы.Расходы.Колонки.Неделя5.ТекстШапки = ""+Формат(ПервыйДень[5], "ДФ=dd.MM")+" - "+Формат(последнийДень[5], "ДФ=dd.MM");
			ЭлементыФормы.Поступления.Колонки.Неделя5.ТекстШапки = ""+Формат(ПервыйДень[5], "ДФ=dd.MM")+" - "+Формат(последнийДень[5], "ДФ=dd.MM");

		иначе
			ЭлементыФормы.Расходы.Колонки.Неделя5.Видимость = Ложь;
			ЭлементыФормы.Поступления.Колонки.Неделя5.Видимость = Ложь;
		конецесли;
	конецЕсли;
	Если не РольДоступна("яштФинДиректор") тогда
		ЭлементыФормы.Ответственный_.Доступность = Ложь;
	конецесли;	
	//Запретим расход у того, кого нет в насторойках
	
		ОтветственныйЗаПланирование = глТекущийПользователь;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПользователей.Значение
		|ИЗ
		|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
		|ГДЕ
		|	НастройкиПользователей.Пользователь = &Пользователь
		|	И НастройкиПользователей.Настройка = &Настройка";
		
		Запрос.УстановитьПараметр("Настройка", планыВидовХарактеристик.НастройкиПользователей.НайтиПоКоду("00193"));
		Запрос.УстановитьПараметр("Пользователь", глТекущийПользователь);
		
		Результат = Запрос.Выполнить();
		Если не Результат.Пустой() Тогда
			Результат = Результат.Выгрузить();
			Если Результат[0].Значение <> Истина Тогда
			 //Сообщить("Вам не разрешено планировать движения денежных средств");
			 //Отказ = Истина;
			 ЭлементыФормы.Расход.Видимость = Ложь;
			 Приход = Истина;
		    конецесли;
		Иначе
			 //Сообщить("Вам не разрешено планировать движения денежных средств");
			 //Отказ = Истина;
			 ЭлементыФормы.Расход.Видимость = Ложь;
			 Приход = Истина;
	   конецЕсли;	
       Если Поступления.Количество()>0 тогда
	   Если поступления[0].согласован = истина тогда
		 ЭтаФорма.ТолькоПросмотр = Истина;  
	   конецЕсли;
	   конецЕсли;
КонецПроцедуры


Процедура ПлановыйПериодПриИзменении(Элемент)
	Выборка= Документы.ПланированиеДвиженийДС.Выбрать(НачалоМесяца(ПлановыйПериод),КонецМесяца(ПлановыйПериод),новый структура("Ответственный_",Ответственный_));
	Пока Выборка.Следующий() Цикл
		Если Выборка.плановыйПериод = НачалоМесяца(ПлановыйПериод) и Выборка.ссылка <> Ссылка  и Выборка.Валюта = Валюта Тогда
		 Сообщить("В выбраном периоде уже существует заполненный документ!");
		 ПлановыйПериод = Дата(1,1,1);
		 возврат;
		конецЕсли;  
	конецЦикла;
	 
	ПлановыйПериод = НачалоМесяца(ПлановыйПериод);
	Дата = НачалоМесяца(ПлановыйПериод);
	
	//заголовки в таблице
	
	ПервыйДень = Новый Массив(6);
	ПоследнийДень= Новый Массив(6);
	
	ПервыйДень[1] = ПлановыйПериод ;
	последнийДень[1] =ПервыйДень[1]+(7- ДеньНедели(Плановыйпериод))*24*60*60;
	//////////////////////////////////////////////////
	ПервыйДень[2] = последнийДень[1]+24*60*60;
	последнийДень[2] =ПервыйДень[2]+(7- ДеньНедели(ПервыйДень[2]))*24*60*60;
	/////////////////////////////////////////////////
	ПервыйДень[3] = последнийДень[2]+24*60*60;
	последнийДень[3] =ПервыйДень[3]+(7- ДеньНедели(ПервыйДень[3]))*24*60*60;
	////////////////////////////////////////////////
	ПервыйДень[4] = последнийДень[3]+24*60*60;
	последнийДень[4] =ПервыйДень[4]+(7- ДеньНедели(ПервыйДень[4]))*24*60*60;
	///////////////////////////////////////	
	ПервыйДень[5] = последнийДень[4]+24*60*60;
	последнийДень[5] =НачалоДня(конецМесяца(плановыйПериод));
	
	Если ПлановыйПериод<>Дата(1,1,1) Тогда
		ЭлементыФормы.Расходы.Колонки.Неделя1.ТекстШапки = ""+Формат(ПервыйДень[1], "ДФ=dd.MM")+" - "+Формат(последнийДень[1], "ДФ=dd.MM");
		ЭлементыФормы.Расходы.Колонки.Неделя2.ТекстШапки = ""+Формат(ПервыйДень[2], "ДФ=dd.MM")+" - "+Формат(последнийДень[2], "ДФ=dd.MM");
		ЭлементыФормы.Расходы.Колонки.Неделя3.ТекстШапки = ""+Формат(ПервыйДень[3], "ДФ=dd.MM")+" - "+Формат(последнийДень[3], "ДФ=dd.MM");
		ЭлементыФормы.Расходы.Колонки.Неделя4.ТекстШапки = ""+Формат(ПервыйДень[4], "ДФ=dd.MM")+" - "+Формат(последнийДень[4], "ДФ=dd.MM");

		ЭлементыФормы.Поступления.Колонки.Неделя1.ТекстШапки = ""+Формат(ПервыйДень[1], "ДФ=dd.MM")+" - "+Формат(последнийДень[1], "ДФ=dd.MM");
		ЭлементыФормы.Поступления.Колонки.Неделя2.ТекстШапки = ""+Формат(ПервыйДень[2], "ДФ=dd.MM")+" - "+Формат(последнийДень[2], "ДФ=dd.MM");
		ЭлементыФормы.Поступления.Колонки.Неделя3.ТекстШапки = ""+Формат(ПервыйДень[3], "ДФ=dd.MM")+" - "+Формат(последнийДень[3], "ДФ=dd.MM");
		ЭлементыФормы.Поступления.Колонки.Неделя4.ТекстШапки = ""+Формат(ПервыйДень[4], "ДФ=dd.MM")+" - "+Формат(последнийДень[4], "ДФ=dd.MM");

		
		Если НачалоДня(конецМесяца(плановыйПериод)) > последнийДень[4] тогда
			ЭлементыФормы.Расходы.Колонки.Неделя5.ТекстШапки = ""+Формат(ПервыйДень[5], "ДФ=dd.MM")+" - "+Формат(последнийДень[5], "ДФ=dd.MM");
			ЭлементыФормы.Поступления.Колонки.Неделя5.ТекстШапки = ""+Формат(ПервыйДень[5], "ДФ=dd.MM")+" - "+Формат(последнийДень[5], "ДФ=dd.MM");

		иначе
			ЭлементыФормы.Расходы.Колонки.Неделя5.Видимость = Ложь;
			ЭлементыФормы.Поступления.Колонки.Неделя5.Видимость = Ложь;
		конецесли;
	конецЕсли;
	
	Если ПлановыйПериод<> Дата(1,1,1) тогда
	УстановитьКурс();	
	конецЕсли;	

	
	//Если ПлановыйПериод <> Дата(1,1,1) Тогда
	//	 Элементыформы.Планирование.Доступность = Истина;
	//конецЕсли;

КонецПроцедуры

Процедура ПланированиеСтатьяРасходаПриИзменении(Элемент)
	//ТекСтрока = Элементыформы.Планирование.ТекущиеДанные;
	//Если не ТекСтрока.СтатьяРасхода.ПоКонтрагентам тогда
	//Элементыформы.Планирование.ТекущаяСтрока.Контрагент.Доступность = Ложь;	
	//конецЕсли;	
КонецПроцедуры

//Процедура ОсновныеДействияФормыПодтветрдить(Кнопка)
//	Если ЭтоНовый() Тогда
//		Записать();
//	конецЕсли;	
//	Если подразделение.ОбособленноеПодразделение и глТекущийпользователь= Справочники.Пользователи.НайтиПоКоду("Марешева И.Г.") тогда
//		Согласовано = Истина;
//	иначеЕсли глТекущийпользователь= Справочники.Пользователи.НайтиПоКоду("Серков")или глТекущийпользователь= Справочники.Пользователи.НайтиПоКоду("Голубева В.С.") или глТекущийпользователь= Справочники.Пользователи.НайтиПоКоду("Горохов") тогда
//		Утверждено = Истина;
//	иначеЕсли глТекущийпользователь= Справочники.Пользователи.НайтиПоКоду("Пятницкая")или глТекущийпользователь= Справочники.Пользователи.НайтиПоКоду("Межерицкая") тогда
//		Принято = Истина;
//	конецЕсли;
//	Записать();
//КонецПроцедуры

Процедура КоманднаяПанель1СоздатьЗаявки(Кнопка)
Форма = ЭтотОбъект.ПолучитьФорму("СозданиеЗаявок");
Форма.валюта = Валюта;
Форма.плановыйпериод = ПлановыйПериод;
Форма.ОтветственноеЛицо = Ответственный_;
форма.Открыть();

КонецПроцедуры

Процедура ОтветственныйПриИзменении(Элемент)
			НаправлениеПродаж = Ответственный_.направлениеПродаж;
КонецПроцедуры

Процедура КоманднаяПанель1ПоГрафикуПлатежей(Кнопка)
	Если не ЗначениеЗаполнено(ПлановыйПериод)тогда
	Сообщить("Заполните плановый период!");	
	возврат;
	конецЕсли;	
	ЭлементыФормы.Расходы.Значение.Очистить();
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслугГрафикОплаты.Ссылка.Контрагент,
		|	ВЫБОР
		|		КОГДА &Датакон < КОНЕЦПЕРИОДА(ПоступлениеТоваровУслугГрафикОплаты.Дата, НЕДЕЛЯ)
		|			ТОГДА &Датакон
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ПоступлениеТоваровУслугГрафикОплаты.Дата, НЕДЕЛЯ)
		|	КОНЕЦ КАК ДатаОплаты,
		|	СУММА(ПоступлениеТоваровУслугГрафикОплаты.ПроцентОплаты * ПоступлениеТоваровУслугГрафикОплаты.Ссылка.СуммаДокумента / 100) КАК СуммаОплаты,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходов.ОплатаПоставщику) КАК СтатьяРасхода
		|ПОМЕСТИТЬ НужныеПлатежи
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ГрафикОплаты КАК ПоступлениеТоваровУслугГрафикОплаты
		|ГДЕ
		|	ПоступлениеТоваровУслугГрафикОплаты.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ПоступлениеТоваровУслугГрафикОплаты.Ссылка.ДоговорКонтрагента.ОтветственноеЛицо = &ОтветственноеЛицо
		|	И ПоступлениеТоваровУслугГрафикОплаты.Ссылка.ВалютаДокумента = &Валюта
		|	И ПоступлениеТоваровУслугГрафикОплаты.Ссылка.Проведен = ИСТИНА
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровУслугГрафикОплаты.Ссылка.Контрагент,
		|	ВЫБОР
		|		КОГДА &Датакон < КОНЕЦПЕРИОДА(ПоступлениеТоваровУслугГрафикОплаты.Дата, НЕДЕЛЯ)
		|			ТОГДА &Датакон
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ПоступлениеТоваровУслугГрафикОплаты.Дата, НЕДЕЛЯ)
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НужныеПлатежи.Контрагент,
		|	НужныеПлатежи.СуммаОплаты КАК Неделя1,
		|	0 КАК Неделя2,
		|	0 КАК Неделя3,
		|	0 КАК Неделя4,
		|	0 КАК Неделя5,
		|	НужныеПлатежи.СтатьяРасхода
		|ПОМЕСТИТЬ Свод
		|ИЗ
		|	НужныеПлатежи КАК НужныеПлатежи
		|ГДЕ
		|	НужныеПлатежи.ДатаОплаты = &ПН
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НужныеПлатежи.Контрагент,
		|	0,
		|	НужныеПлатежи.СуммаОплаты,
		|	0,
		|	0,
		|	0,
		|	НужныеПлатежи.СтатьяРасхода
		|ИЗ
		|	НужныеПлатежи КАК НужныеПлатежи
		|ГДЕ
		|	НужныеПлатежи.ДатаОплаты = &ВН
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НужныеПлатежи.Контрагент,
		|	0,
		|	0,
		|	НужныеПлатежи.СуммаОплаты,
		|	0,
		|	0,
		|	НужныеПлатежи.СтатьяРасхода
		|ИЗ
		|	НужныеПлатежи КАК НужныеПлатежи
		|ГДЕ
		|	НужныеПлатежи.ДатаОплаты = &ТН
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НужныеПлатежи.Контрагент,
		|	0,
		|	0,
		|	0,
		|	НужныеПлатежи.СуммаОплаты,
		|	0,
		|	НужныеПлатежи.СтатьяРасхода
		|ИЗ
		|	НужныеПлатежи КАК НужныеПлатежи
		|ГДЕ
		|	НужныеПлатежи.ДатаОплаты = &ЧН
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НужныеПлатежи.Контрагент,
		|	0,
		|	0,
		|	0,
		|	0,
		|	НужныеПлатежи.СуммаОплаты,
		|	НужныеПлатежи.СтатьяРасхода
		|ИЗ
		|	НужныеПлатежи КАК НужныеПлатежи
		|ГДЕ
		|	НужныеПлатежи.ДатаОплаты = &ПяН
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Свод.Контрагент,
		|	СУММА(Свод.Неделя1) КАК Неделя1,
		|	СУММА(Свод.Неделя2) КАК Неделя2,
		|	СУММА(Свод.Неделя3) КАК Неделя3,
		|	СУММА(Свод.Неделя4) КАК Неделя4,
		|	СУММА(Свод.Неделя5) КАК Неделя5,
		|	Свод.СтатьяРасхода КАК Статья,
		|	ЛОЖЬ КАК Согласован,
		|	ЛОЖЬ КАК Утвержден,
		|	ЛОЖЬ КАК Принят,
		|	СУММА(Свод.Неделя1 + Свод.Неделя2 + Свод.Неделя3 + Свод.Неделя4 + Свод.Неделя5) КАК Итого
		|ИЗ
		|	Свод КАК Свод
		|
		|СГРУППИРОВАТЬ ПО
		|	Свод.Контрагент,
		|	Свод.СтатьяРасхода";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПлановыйПериод));
		Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ПлановыйПериод));
		Запрос.УстановитьПараметр("ПН", конецДня(последнийДень[1]));
		Запрос.УстановитьПараметр("ВН", конецДня(последнийДень[2]));
		Запрос.УстановитьПараметр("ТН", конецДня(последнийДень[3]));
		Запрос.УстановитьПараметр("ЧН", конецДня(последнийДень[4]));
		Запрос.УстановитьПараметр("ПяН",конецДня(последнийДень[5]));
		Запрос.УстановитьПараметр("Валюта", Валюта);
		Запрос.УстановитьПараметр("ОтветственноеЛицо", Ответственный_);

		ЭлементыФормы.Расходы.Значение = Запрос.Выполнить().Выгрузить().Скопировать();
		

КонецПроцедуры

Процедура КоманднаяПанель1ПоДаннымБюджета(Кнопка)
	Если не ЗначениеЗаполнено(ПлановыйПериод)тогда
	Сообщить("Заполните плановый период!");	
	возврат;
	конецЕсли;	

	
	Если ввестиЗначение(ПериодБюджета,"Выберите период бюджета",Тип("СправочникСсылка.ПериодыПланирования"))  тогда
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.ПериодСекунда, ДЕНЬ) КАК Период,
		|	ХозрасчетныйОбороты.Субконто2 КАК СтатьяЗатрат,
		|	ХозрасчетныйОбороты.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			,
		|			,
		|			Авто,
		|			Счет = &Затраты,
		|			,
		|			ПериодПланирования = &ПериодБюджета
		|				И Менеджер = &Ответственный,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.ПериодСекунда, ДЕНЬ) = &ПериодПланирования";

	Запрос.УстановитьПараметр("Затраты", ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	Запрос.УстановитьПараметр("Ответственный", Ответственный_);
	Запрос.УстановитьПараметр("ПериодПланирования", ПлановыйПериод);
	Запрос.УстановитьПараметр("ПериодБюджета", ПериодБюджета);
	ДанныеБюджета.Загрузить(Запрос.Выполнить().Выгрузить());
    ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Страница2;
	ПересчетПоСтатьямРасходов();
	
	
конецЕсли;	
КонецПроцедуры

процедура ПересчетПоСтатьямРасходов()
	Планирование.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеБаланса.Сумма КАК Сумма,
		|	ДанныеБаланса.СтатьяЗатрат
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ДанныеБаланса КАК ДанныеБаланса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ.Сумма) КАК Неделя4,
		|	СтатьиРасходовСтатьиЗатрат.Ссылка КАК Статья,
		|	ЛОЖЬ КАК Согласован,
		|	ЛОЖЬ КАК Утвержден,
		|	ЛОЖЬ КАК Принят,
		|	0 КАК Неделя1,
		|	0 КАК Неделя2,
		|	0 КАК Неделя3,
		|	0 КАК Неделя5,
		|	СУММА(ВТ.Сумма) КАК Итого,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.Пустаяссылка) КАК Контрагент
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиРасходов.СтатьиЗатрат КАК СтатьиРасходовСтатьиЗатрат
		|		ПО ВТ.СтатьяЗатрат = СтатьиРасходовСтатьиЗатрат.СтатьяЗатрат
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатьиРасходовСтатьиЗатрат.Ссылка";
		
	Запрос.УстановитьПараметр("ДанныеБаланса", ЭлементыФормы.ДанныеБюджета.Значение);

	ЭлементыФормы.Расходы.Значение=(Запрос.Выполнить().Выгрузить().Скопировать());

	
конецПроцедуры	

Процедура ДанныеБюджетаСуммаПриИзменении(Элемент)
	ПересчетПоСтатьямРасходов();
КонецПроцедуры


Процедура ПоступлениеПриИзменении(Элемент)
	ЭлементыФормы.Панель.Страницы.Поступление.Видимость = Поступление;
	Если не поступление тогда
		ЭлементыФормы.Поступления.Значение.Очистить();
	КонецЕсли;	
КонецПроцедуры


Процедура РасходПриИзменении(Элемент)
	ЭлементыФормы.Панель.Страницы.Расход.Видимость = Расход;
	ЭлементыФормы.Панель.Страницы.Страница2.Видимость = Расход; 
	Если не Расход тогда
		ЭлементыФормы.Расходы.Значение.очистить();
	конецЕсли;	
КонецПроцедуры


Процедура КоманднаяПанель1Заполнить(Кнопка)
	Если не ЗначениеЗаполнено(ПлановыйПериод)тогда
	Сообщить("Заполните плановый период!");	
	возврат;
	конецЕсли;	
	ЭлементыФормы.поступления.Значение.очистить();
	Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СудыПоДебиторамДляДЗКЗ.Контрагент
		|ПОМЕСТИТЬ Суды
		|ИЗ
		|	РегистрСведений.СудыПоДебиторамДляДЗКЗ КАК СудыПоДебиторамДляДЗКЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА КОНЕЦПЕРИОДА(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, НЕДЕЛЯ) < &ДатаНач
		|			ТОГДА КОНЕЦПЕРИОДА(&ДатаНач, НЕДЕЛЯ)
		|		КОГДА КОНЕЦПЕРИОДА(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, НЕДЕЛЯ) > &ДатаКон
		|			ТОГДА &ДатаКон
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, НЕДЕЛЯ)
		|	КОНЕЦ КАК ПериодОплаты,
		|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец,
		|	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток
		|ПОМЕСТИТЬ Выборка
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
		|			,
		|			ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам)
		|				И ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
		|				И ДоговорКонтрагента.ВалютаВзаиморасчетов = &Валюта
		|				И 99 = 99) КАК ВзаиморасчетыСКонтрагентамиОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Суды КАК Суды
		|		ПО ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец = Суды.Контрагент
		|ГДЕ
		|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты МЕЖДУ &ДатаНачГода И &ДатаКон
		|	И Суды.Контрагент ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА КОНЕЦПЕРИОДА(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, НЕДЕЛЯ) < &ДатаНач
		|			ТОГДА КОНЕЦПЕРИОДА(&ДатаНач, НЕДЕЛЯ)
		|		КОГДА КОНЕЦПЕРИОДА(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, НЕДЕЛЯ) > &ДатаКон
		|			ТОГДА &ДатаКон
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ВзаиморасчетыСКонтрагентамиОстатки.Сделка.ДатаОплаты, НЕДЕЛЯ)
		|	КОНЕЦ,
		|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выборка.ПериодОплаты,
		|	Выборка.ДоговорКонтрагентаВладелец,
		|	СУММА(Выборка.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток
		|ПОМЕСТИТЬ НужныеОстатки
		|ИЗ
		|	Выборка КАК Выборка
		|ГДЕ
		|	Выборка.СуммаВзаиморасчетовОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	Выборка.ПериодОплаты,
		|	Выборка.ДоговорКонтрагентаВладелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НужныеОстатки.ДоговорКонтрагентаВладелец,
		|	НужныеОстатки.СуммаВзаиморасчетовОстаток КАК Неделя1,
		|	0 КАК Неделя2,
		|	0 КАК Неделя3,
		|	0 КАК Неделя4,
		|	0 КАК Неделя5
		|ПОМЕСТИТЬ Свод
		|ИЗ
		|	НужныеОстатки КАК НужныеОстатки
		|ГДЕ
		|	НужныеОстатки.ПериодОплаты = &ПН
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НужныеОстатки.ДоговорКонтрагентаВладелец,
		|	0,
		|	НужныеОстатки.СуммаВзаиморасчетовОстаток,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	НужныеОстатки КАК НужныеОстатки
		|ГДЕ
		|	НужныеОстатки.ПериодОплаты = &ВН
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НужныеОстатки.ДоговорКонтрагентаВладелец,
		|	0,
		|	0,
		|	НужныеОстатки.СуммаВзаиморасчетовОстаток,
		|	0,
		|	0
		|ИЗ
		|	НужныеОстатки КАК НужныеОстатки
		|ГДЕ
		|	НужныеОстатки.ПериодОплаты = &ТН
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НужныеОстатки.ДоговорКонтрагентаВладелец,
		|	0,
		|	0,
		|	0,
		|	НужныеОстатки.СуммаВзаиморасчетовОстаток,
		|	0
		|ИЗ
		|	НужныеОстатки КАК НужныеОстатки
		|ГДЕ
		|	НужныеОстатки.ПериодОплаты = &ЧН
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НужныеОстатки.ДоговорКонтрагентаВладелец,
		|	0,
		|	0,
		|	0,
		|	0,
		|	НужныеОстатки.СуммаВзаиморасчетовОстаток
		|ИЗ
		|	НужныеОстатки КАК НужныеОстатки
		|ГДЕ
		|	НужныеОстатки.ПериодОплаты = &ПяН
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Свод.ДоговорКонтрагентаВладелец КАК Контрагент,
		|	СУММА(Свод.Неделя1) КАК Неделя1,
		|	СУММА(Свод.Неделя2) КАК Неделя2,
		|	СУММА(Свод.Неделя3) КАК Неделя3,
		|	СУММА(Свод.Неделя4) КАК Неделя4,
		|	СУММА(Свод.Неделя5) КАК Неделя5,
		|	&СтатьяПрихода КАК Статья,
		|	ЛОЖЬ КАК Согласован,
		|	ЛОЖЬ КАК Утвержден,
		|	ЛОЖЬ КАК Принят,
		|	СУММА(Свод.Неделя1 + Свод.Неделя2 + Свод.Неделя3 + Свод.Неделя4 + Свод.Неделя5) КАК Итого,
		|	СУММА(Свод.Неделя1 + Свод.Неделя2 + Свод.Неделя3 + Свод.Неделя4 + Свод.Неделя5) КАК Дебиторка,
		|	0 КАК Разница,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(100)) КАК Комментарий
		|ИЗ
		|	Свод КАК Свод
		|
		|СГРУППИРОВАТЬ ПО
		|	Свод.ДоговорКонтрагентаВладелец";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПлановыйПериод));
		Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ПлановыйПериод));
		Запрос.УстановитьПараметр("ДатаНачГода", ДобавитьМесяц(НачалоМесяца(ПлановыйПериод),-12));
		Запрос.УстановитьПараметр("ПН", конецДня(последнийДень[1]));
		Запрос.УстановитьПараметр("ВН", конецДня(последнийДень[2]));
		Запрос.УстановитьПараметр("ТН", конецДня(последнийДень[3]));
		Запрос.УстановитьПараметр("ЧН", конецДня(последнийДень[4]));
		Запрос.УстановитьПараметр("ПяН",конецДня(последнийДень[5]));
		Запрос.УстановитьПараметр("Валюта", Валюта);
		Запрос.УстановитьПараметр("СтатьяПрихода",Справочники.СтатьиРасходов.ПоступленияСДебиторки);
		Если Подразделение.ОбособленноеПодразделение Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо.ОсновноеПодразделение = &Подразделение");
		    Запрос.УстановитьПараметр("Подразделение",Подразделение);
		иначе	
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"99 = 99","ДоговорКонтрагента.ОтветственноеЛицо = &ОтветственноеЛицо");
			Запрос.УстановитьПараметр("ОтветственноеЛицо",Ответственный_);
		конецЕсли;
		ЭлементыФормы.Поступления.Значение=Запрос.Выполнить().Выгрузить().Скопировать();
		стр = Поступления.Добавить();
		Стр.статья = Справочники.СтатьиРасходов.ПоступленияСОтгрузок;
		

КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//проверим на дубли строк
	Для каждого строка из ЭлементыФормы.Расходы.Значение Цикл
		отбор = новый структура;
		отбор.Вставить("Статья",Строка.Статья);
		отбор.Вставить("Контрагент",строка.Контрагент);
		нужныеСтроки = ЭлементыФормы.Расходы.Значение.НайтиСтроки(Отбор);
		Если НужныеСтроки.Количество()>1 Тогда
			Сообщить("в таблице расходов дубли строки с контрагентом "+строка.контрагент+" и статьей "+строка.Статья +"!");
			отказ=Истина;
		иначе 
			Если Строка.Статья.ПоКонтрагентам и  строка.Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
			Сообщить("Для статьи "+строка.Статья +" не указан контрагент!");
			отказ=Истина;
			конецЕсли;	
		конецЕсли;
	конецЦикла;
	
	Для каждого строка из ЭлементыФормы.Поступления.Значение Цикл
		отбор = новый структура;
		отбор.Вставить("Статья",Строка.Статья);
		отбор.Вставить("Контрагент",строка.Контрагент);
		нужныеСтроки = ЭлементыФормы.Поступления.Значение.НайтиСтроки(Отбор);
		Если НужныеСтроки.Количество()>1 Тогда
			Сообщить("в таблице поступлений дубли строки с контрагентом "+строка.контрагент+" и статьей "+строка.Статья +"!");
			отказ=Истина;
		иначе 
			Если Строка.Статья.ПоКонтрагентам и  строка.Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
				Сообщить("Для статьи "+строка.Статья +" не указан контрагент!");
				отказ=Истина;
			конецЕсли;	
		конецЕсли;
		
	конецЦикла;
	
	Если не отказ и не пометкаУдаления тогда
		// запишем все в регистр сведений
	наборЗаписей = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.МесяцПланирования.Установить(ПлановыйПериод);
    наборЗаписей.Отбор.ответственноеЛицо.Установить(Ответственный_);
	ВалютаДляОтбора = ?(ПлановыйПериод<Дата('20180701'),Справочники.Валюты.ПустаяСсылка(),Валюта);
	наборЗаписей.Отбор.Валюта.Установить(ВалютаДляОтбора);

	наборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
    наборЗаписей.Записать();	
	Для каждого стр из ЭлементыФормы.Поступления.Значение Цикл
		Запись = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись,стр);
		
		Если ПлановыйПериод< Дата('20180701') тогда
		Запись.Валюта = Справочники.Валюты.ПустаяСсылка();
		иначе
		Запись.Валюта = Валюта;
		конецЕсли;	
		Запись.МесяцПланирования = ПлановыйПериод;
		Запись.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Приход;
		Запись.Подразделение = Подразделение;
		Запись.ОтветственноеЛицо = Ответственный_;
		Запись.Исполнитель = Ответственный_;
		Если Валюта <> Константы.ВалютаРегламентированногоУчета.Получить() тогда
		Запись.Неделя1 = стр.Неделя1*Курс;
		Запись.Неделя2 = стр.Неделя2*Курс;
		Запись.Неделя3 = стр.Неделя3*Курс;
		Запись.Неделя4 = стр.Неделя4*Курс;
		Запись.Неделя5 = стр.Неделя5*Курс;
		Запись.Перенос = стр.Перенос*Курс;
		конецЕсли;
		Запись.АктивностьЗаписи = Истина;
		Запись.Записать();
	конецЦикла;	
	
	Для каждого стр из ЭлементыФормы.Расходы.Значение Цикл
		Запись = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьМенеджерЗаписи();
		Если ПлановыйПериод< Дата('20180701') тогда
		Запись.Валюта = Справочники.Валюты.ПустаяСсылка();
		иначе
		Запись.Валюта = Валюта;
		конецЕсли;	

		ЗаполнитьЗначенияСвойств(Запись,стр);
		Если не стр.Статья.Поконтрагентам тогда
		Запись.Контрагент = Справочники.Контрагенты.ПустаяСсылка();	
		конецЕсли;	
		Запись.МесяцПланирования = ПлановыйПериод;
		Запись.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Расход;
		Запись.ОтветственноеЛицо = Ответственный_;
		Запись.Исполнитель = Ответственный_;
		Запись.АктивностьЗаписи = Истина;
		Если Валюта <> Константы.ВалютаРегламентированногоУчета.Получить() тогда
		Запись.Неделя1 = стр.Неделя1*Курс;
		Запись.Неделя2 = стр.Неделя2*Курс;
		Запись.Неделя3 = стр.Неделя3*Курс;
		Запись.Неделя4 = стр.Неделя4*Курс;
		Запись.Неделя5 = стр.Неделя5*Курс;
		Запись.Перенос = стр.Перенос*Курс;
		конецЕсли;

		Запись.Записать();
	конецЦикла;	

	
	конецЕсли;	
КонецПроцедуры


Процедура РасходыПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого стр из ОформленияСтрок Цикл
		Данные =стр.ДанныеСтроки;
		Если  Данные.Принят = Истина и не РольДоступна("яштФинДиректор") Тогда //значит не детальные записи
			стр.ЦветФона = webцвета.СеребристоСерый;
			ЭлементыФормы.КоманднаяПанель2.Доступность = Ложь;
			ЭлементыФормы.Расходы.ТолькоПросмотр = Истина;
			ЭлементыФормы.ДанныеБюджета.ТолькоПросмотр = Истина;
			ЭлементыФормы.ПлановыйПериод.ТолькоПросмотр = Истина;
			ЭлементыФормы.Поступление.Доступность = Ложь;
			ЭлементыФормы.Расход.Доступность = Ложь;
			
			Для каждого ячейка из стр.ячейки Цикл
				Ячейка.ТолькоПросмотр = Истина;
			конецЦикла;	
		конецЕсли;	
	конецЦИкла;

КонецПроцедуры


Процедура ПоступленияПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого стр из ОформленияСтрок Цикл
		Данные =стр.ДанныеСтроки;
		Если (Данные.Принят = Истина или Данные.Согласован = Истина) и  не РольДоступна("яштФинДиректор") Тогда //значит не детальные записи
			Если Данные.Принят = Истина тогда
			стр.ЦветФона = webцвета.СеребристоСерый;
			иначеесли Данные.Согласован = Истина тогда
			стр.ЦветФона = webцвета.СветлоЖелтый;
            конецЕсли;
			ЭлементыФормы.КоманднаяПанель1.Доступность = Ложь;
			ЭлементыФормы.Поступления.ТолькоПросмотр = Истина;
			ЭлементыФормы.ПлановыйПериод.ТолькоПросмотр = Истина;
			ЭлементыФормы.Поступление.Доступность = Ложь;
			ЭлементыФормы.Расход.Доступность = Ложь;

			Для каждого ячейка из стр.ячейки Цикл
				Ячейка.ТолькоПросмотр = Истина;
			конецЦикла;	
		конецЕсли;	
	конецЦИкла;
КонецПроцедуры


Процедура Ответственный_ПриИзменении(Элемент)
	Выборка= Документы.ПланированиеДвиженийДС.Выбрать(НачалоМесяца(ПлановыйПериод),КонецМесяца(ПлановыйПериод),новый структура("Ответственный_",Ответственный_));
	Пока Выборка.Следующий() Цикл
		Если Выборка.плановыйПериод = НачалоМесяца(ПлановыйПериод) и Выборка.ссылка <> Ссылка  и Выборка.Валюта = Валюта Тогда
		 Сообщить("В выбраном периоде уже существует заполненный документ!");
		 ПлановыйПериод = Дата(1,1,1);
		 возврат;
		конецЕсли;  
	конецЦикла;

КонецПроцедуры


Процедура РасходыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	строка = Элементыформы.Расходы.текущиеДанные;
	Если  строка.Неделя1<> Неопределено Тогда
	Строка.итого= строка.Неделя1+строка.Неделя2+строка.Неделя3+строка.Неделя4+строка.Неделя5;
	конецЕсли;
КонецПроцедуры


Процедура ПоступленияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	строка = Элементыформы.Поступления.текущиеДанные;
	Если  строка.Неделя1<> Неопределено Тогда
		Строка.итого= строка.Неделя1+строка.Неделя2+строка.Неделя3+строка.Неделя4+строка.Неделя5;
		Если Строка.дебиторка>0 тогда
			строка.Разница = Строка.Дебиторка-Строка.итого;	
		конецЕсли;	
	конецесли;
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	   // ОтветственныйЗаПланирование = глТекущийПользователь;
	   // Запрос = Новый Запрос;
	   // Запрос.Текст = 
	   // "ВЫБРАТЬ
	   // |	НастройкиПользователей.Значение
	   // |ИЗ
	   // |	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	   // |ГДЕ
	   // |	НастройкиПользователей.Пользователь = &Пользователь
	   // |	И НастройкиПользователей.Настройка = &Настройка";
	   // 
	   // Запрос.УстановитьПараметр("Настройка", планыВидовХарактеристик.НастройкиПользователей.НайтиПоКоду("00193"));
	   // Запрос.УстановитьПараметр("Пользователь", глТекущийПользователь);
	   // 
	   // Результат = Запрос.Выполнить();
	   // Если не Результат.Пустой() Тогда
	   // 	Результат = Результат.Выгрузить();
	   // 	Если Результат[0].Значение <> Истина Тогда
	   // 	 Сообщить("Вам не разрешено планировать движения денежных средств");
	   // 	 Отказ = Истина;
	   //	 конецесли;
	   // Иначе
	   // 	 Сообщить("Вам не разрешено планировать движения денежных средств");
	   // 	 Отказ = Истина;
	   //конецЕсли;	
КонецПроцедуры

Процедура ПоступленияСтатьяПриИзменении(Элемент)
	ТекСтр = ЭлементыФормы.Поступления.ТекущиеДанные;
	Если  ТекСТР.статья.ВидДвижения  <> Перечисления.ВидыДвиженийПриходРасход.Приход Тогда
		Сообщить("Выбрана не правильная статья!");
		ТекСТР.статья="";
	конецЕсли;	
	Если ПлановыйПериод>=Дата('20180701') Тогда
	Если Валюта <> Константы.ВалютаРегламентированногоУчета.Получить() и не ТекСТР.статья.ВВалюте тогда
		Сообщить("Статья не предназначена для планирования в валюте!");
		ТекСТР.статья="";
	конецЕсли;
	конецЕсли;
КонецПроцедуры

Процедура РасходыСтатьяПриИзменении(Элемент)
	ТекСтр = ЭлементыФормы.Расходы.ТекущиеДанные;
	Если  ТекСТР.статья.ВидДвижения  <> Перечисления.ВидыДвиженийПриходРасход.Расход Тогда
		Сообщить("Выбрана не правильная статья!");
		ТекСТР.статья="";
	конецЕсли;	
	Если ПлановыйПериод>=Дата('20180701') Тогда
	Если Валюта <> Константы.ВалютаРегламентированногоУчета.Получить() и не ТекСТР.статья.ВВалюте тогда
		Сообщить("Статья не предназначена для планирования в валюте!");
		ТекСТР.статья="";
	конецЕсли;
	конецЕсли;
КонецПроцедуры

Процедура ПоступленияПередУдалением(Элемент, Отказ)
	ТекСтр = ЭлементыФормы.Поступления.ТекущиеДанные;
	Если ТекСтр.дебиторка<>0 и ТекСтр.дебиторка<>Неопределено Тогда
		Сообщить("Строки с дебиторкой удалять нельзя!");
		отказ = Истина;
	конецЕсли;	
КонецПроцедуры

Процедура ВалютаПриИзменении(Элемент)
	Если ПлановыйПериод<> Дата(1,1,1) тогда
	УстановитьКурс();	
	конецЕсли;	
КонецПроцедуры

Процедура УстановитьКурс()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютСрезПоследних
	|ГДЕ
	|	КурсыВалютСрезПоследних.Валюта = &Валюта";
	
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("Дата", ДобавитьМесяц(ПлановыйПериод,-1)+25*24*60*60);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() тогда
		курс = Выборка.Курс+3;
	иначе 
		курс=1;	
	КонецЕсли;
	
	
	
	
	
	
	
	
конецПроцедуры	
