
Процедура ОбработкаПроведения(Отказ, Режим)
	//ПервыйДень = Новый Массив(6);
	//ПоследнийДень= Новый Массив(6);
	//
	//
	//
	//ПервыйДень[1] = ПлановыйПериод ;
	//последнийДень[1] =ПервыйДень[1]+(7- ДеньНедели(Плановыйпериод))*24*60*60;
	////////////////////////////////////////////////////
	//ПервыйДень[2] = последнийДень[1]+24*60*60;
	//последнийДень[2] =ПервыйДень[2]+(7- ДеньНедели(ПервыйДень[2]))*24*60*60;
	///////////////////////////////////////////////////
	//ПервыйДень[3] = последнийДень[2]+24*60*60;
	//последнийДень[3] =ПервыйДень[3]+(7- ДеньНедели(ПервыйДень[3]))*24*60*60;
	//////////////////////////////////////////////////
	//ПервыйДень[4] = последнийДень[3]+24*60*60;
	//последнийДень[4] =ПервыйДень[4]+(7- ДеньНедели(ПервыйДень[4]))*24*60*60;
	/////////////////////////////////////////	
	//ПервыйДень[5] = последнийДень[4]+24*60*60;
	//последнийДень[5] =НачалоДня(конецМесяца(плановыйПериод));
	//

	//Движения.ПланируемыеДвиженияДС.Записывать = Истина;
	//Движения.ПланируемыеДвиженияДС.Очистить();

	//
	//
	//Для Каждого ТекСтрока Из Планирование Цикл
	//	сч=1;
	//	пока сч<6 цикл
	//		Если ТекСтрока["Неделя"+сч]<>0 Тогда	
	//			Движение = Движения.ПланируемыеДвиженияДС.Добавить();
	//			Движение.Период = Дата;
	//			Движение.ПлановаяДатаНачала = ПервыйДень[сч];
	//			Движение.ПлановаяДатаОкончания = последнийДень[сч];
	//			Если видоперации = Перечисления.ВидыОперацийПланированияДвиженийДС.Поступление тогда
	//				Движение.Подразделение = Подразделение;
	//			конецЕсли;
	//			Движение.Контрагент = ТекСтрока.Контрагент;
	//			Движение.Сумма = ТекСтрока["Неделя"+сч];
	//			Если видоперации = Перечисления.ВидыОперацийПланированияДвиженийДС.Расход тогда
	//				Движение.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Расход;
	//				Движение.СтатьяРасхода = ТекСтрока.СтатьяРасхода;
	//			иначе	
	//				Движение.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Приход;
	//				Движение.СтатьяРасхода = НаправлениеПродаж;
	//			конецЕсли;	
	//		конецЕсли;
	//		сч=сч+1;
	//	конецЦикла;
	//КонецЦикла;
    Движения.КонтрольПланируемыхРасходовДС.Записывать = Истина;
	Движения.КонтрольПланируемыхРасходовДС.Очистить();

	
	наборЗаписей = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.МесяцПланирования.Установить(ПлановыйПериод);
    наборЗаписей.Отбор.ответственноеЛицо.Установить(Ответственный_);
	наборЗаписей.Отбор.Валюта.Установить(Валюта);
	наборЗаписей.Отбор.приходРасход.Установить(Перечисления.ВидыДвиженийПриходРасход.Расход);
	наборЗаписей.Прочитать();

	
	Для Каждого ТекСтрока Из НаборЗаписей Цикл
				Движение = Движения.КонтрольПланируемыхРасходовДС.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = ПлановыйПериод;
				Если ТекСтрока.Статья.ПоКонтрагентам тогда
				Движение.Контрагент = ТекСтрока.Контрагент;
			    конецЕсли;
			    Движение.Ответственный = Ответственный_;
			    Движение.ПериодПланирования = ПлановыйПериод;
				Движение.СтатьяРасхода = ТекСтрока.Статья;
				Движение.Сумма = ТекСтрока.Неделя1+ТекСтрока.Неделя2+ТекСтрока.Неделя3+ТекСтрока.Неделя4+ТекСтрока.Неделя5;
			КонецЦикла;
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	наборЗаписей = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.МесяцПланирования.Установить(ПлановыйПериод);
    наборЗаписей.Отбор.ответственноеЛицо.Установить(Ответственный_);
	наборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
    наборЗаписей.Записать();	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	наборЗаписей = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.МесяцПланирования.Установить(ПлановыйПериод);
    наборЗаписей.Отбор.ответственноеЛицо.Установить(Ответственный_);
	наборЗаписей.Прочитать();
	Для каждого стр из НаборЗаписей Цикл
	стр.АктивностьЗаписи = Ложь;	
    конецЦикла;	
	наборЗаписей.Записать();
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если пометкаУдаления тогда
	наборЗаписей = РегистрыСведений.ПланДвиженийДенежныхСредств.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.МесяцПланирования.Установить(ПлановыйПериод);
    наборЗаписей.Отбор.ответственноеЛицо.Установить(Ответственный_);
	наборЗаписей.Прочитать();
	Для каждого стр из НаборЗаписей Цикл
	стр.АктивностьЗаписи = Ложь;	
    конецЦикла;	
	наборЗаписей.Записать();
	
	конецЕсли;	
КонецПроцедуры



