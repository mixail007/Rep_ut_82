
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Перем ТаблицаВыработкаСотрудников;
	
	// Вставить содержимое обработчика.	
	Для Каждого СтрокаРабота из Работы Цикл
		
		найдСтроки=Исполнители.НайтиСтроки(Новый Структура ("Работа",СтрокаРабота.Работа));	
		Если (найдСтроки.Количество()=0) Тогда
			Сообщить("Нет исполнителей по работе " + СтрокаРабота.Работа,СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	// ТОВАРЫ ПО РЕГИСТРУ Продажи.

	Отказ=не (Состояние=Перечисления.СостояниеЗаказНаряда.Закрыт);
	
	Если Отказ Тогда 
		Сообщить("Проводить заказ-наряд можно только со статусом ""Закрыт""",СтатусСообщения.Важное); 
	КонецЕсли;
	НаборДвижений = Движения.ВыработкаСотрудников;

	ТаблицаДвижений = НаборДвижений.Выгрузить();
    ТаблицаВыработкаСотрудников=ПодготовитьТаблицуВыработкаСотрудников();
			
	//// Заполним таблицу движений.
	ЗагрузитьВТаблицуЗначений(ТаблицаВыработкаСотрудников, ТаблицаДвижений);
	ТаблицаДвижений.ЗаполнитьЗначения(Автомобиль,"Автомобиль");
	ТаблицаДвижений.ЗаполнитьЗначения(Цех,"Цех");

	НаборДвижений.мПериод            = Дата;
	НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;
                                                                 
	Если Не Отказ Тогда
		Движения.ВыработкаСотрудников.ВыполнитьДвижения();
	КонецЕсли;
	//ПодготовитьТаблицуВыработкаСотрудников();			

КонецПроцедуры

Функция ПодготовитьТаблицуВыработкаСотрудников()			
				
	ТЗРаботы= Новый ТаблицаЗначений;	
	ТЗРаботы.Колонки.Добавить("Работа");
	ТЗРаботы.Колонки.Добавить("Исполнитель");
	ТЗРаботы.Колонки.Добавить("Количество");
	ТЗРаботы.Колонки.Добавить("СуммаУпр");
			
	Для каждого СтрокаРабота Из Работы Цикл
		найдСтроки=Исполнители.НайтиСтроки(Новый Структура ("Работа",СтрокаРабота.Работа));	
		РассчитатьСуммуПоИсполнителям(СтрокаРабота.Сумма,СтрокаРабота.Количество,найдСтроки,ТЗРаботы);
	КонецЦикла;	

	Возврат ТЗРаботы;
КонецФункции

Функция ПолучитьСписокПечатныхФорм()  Экспорт
	СписокМакетов = Новый СписокЗначений;
	ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
	Возврат СписокМакетов;

КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли; 

	Если Не ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если      ИмяМакета = "Накладная" Тогда
				
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("СправочникСсылка.ДополнительныеПечатныеФормы") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = ИмяМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = Ссылка;
		ТабДокумент = Обработка.Печать();
		
	КонецЕсли;

	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект));

КонецПроцедуры // Печать

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ Отказ Тогда
	
		обЗаписатьПротоколИзменений(ЭтотОбъект);
	
	КонецЕсли; 

КонецПроцедуры
