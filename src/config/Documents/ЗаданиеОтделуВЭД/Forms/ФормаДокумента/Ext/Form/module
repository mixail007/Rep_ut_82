
Процедура ТоварыДизайнКоробкиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.очистить();
	Элемент.СписокВыбора.Добавить("Стандартный YST");
	Элемент.СписокВыбора.Добавить("Индивидульный");
КонецПроцедуры

Процедура ТоварыИзготовительНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	//Элемент.СписокВыбора.очистить();
	//
	//Элемент.СписокВыбора.Добавить("Freeman");
	//Элемент.СписокВыбора.Добавить("Jiangsu");
	//Элемент.СписокВыбора.Добавить("Xiamen");
КонецПроцедуры

Процедура КоманднаяПанель1СкопироватьЗначение(Кнопка)
	Значение = ЭлементыФормы.Товары.ТекущиеДанные[ЭлементыФормы.Товары.ТекущаяКолонка.Имя];
	для каждого стр из Товары Цикл
		стр[ЭлементыФормы.Товары.ТекущаяКолонка.Имя] = Значение;		
	КонецЦикла;
КонецПроцедуры

Процедура УсловияПоставкиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.очистить();
	Элемент.СписокВыбора.Добавить("FOB");
	Элемент.СписокВыбора.Добавить("FCA");
	Элемент.СписокВыбора.Добавить("DAP");
	Элемент.СписокВыбора.Добавить("DDP");
КонецПроцедуры

Процедура ПортВыгрузкиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.очистить();
	Элемент.СписокВыбора.Добавить("Ningbo");
	Элемент.СписокВыбора.Добавить("Zapu");
	Элемент.СписокВыбора.Добавить("Shanghai");
КонецПроцедуры

Процедура РазмерКонтейнераНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.очистить();
	Элемент.СписокВыбора.Добавить("20' DC");
	Элемент.СписокВыбора.Добавить("20' HC");
	Элемент.СписокВыбора.Добавить("40' DV");
	Элемент.СписокВыбора.Добавить("40' HC");
	Элемент.СписокВыбора.Добавить("40' HCPW");
	Элемент.СписокВыбора.Добавить("45' HCPW");
КонецПроцедуры

Процедура СтатусЗаказаКлиентНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.очистить();
	Элемент.СписокВыбора.Добавить("Для расчета");
	Элемент.СписокВыбора.Добавить("Подтвержден покупателем");
КонецПроцедуры

Процедура СтатусЗаказаПоставщикНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.очистить();
	Элемент.СписокВыбора.Добавить("В обработке у поставщика");
	Элемент.СписокВыбора.Добавить("Подтвержден поставщиком");
КонецПроцедуры

Процедура ПриОткрытии()
	УстановитьДоступность();
КонецПроцедуры

Процедура УстановитьДоступность()
	ЭлементыФормы.ДатаОтгрузкиПоДаннымПокупателя.Доступность = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.УсловияПоставки.Доступность                = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.ПортНазначения.Доступность                 = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.АдресДоставки.Доступность                  = не ОПГотов или глТекущийПользователь = Ответственный;;
	ЭлементыФормы.СтатусЗаказаКлиент.Доступность             = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.РазмерКонтейнера.Доступность               = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.ТребованияКУпаковкеКонтейнера.Доступность  = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.ВыслатьФото.Доступность       = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.ДизайнКоробки.Доступность     = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.Запросить3Dмакет.Доступность  = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.ЗапроситьЧертеж.Доступность   = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.Макет3DСогласован.Доступность = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.Номенклатура.Доступность      = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.Количество.Доступность        = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.Цена.Доступность              = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.Крышка.Доступность            = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.СпецТребованияСертификат.Доступность = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.Сумма.Доступность             = не ОПГотов или глТекущийПользователь = Ответственный;
	ЭлементыФормы.Товары.Колонки.Комментарий.Доступность       = не ОПГотов или глТекущийПользователь = Ответственный;

	ЭлементыФормы.Товары.Колонки.ЦенаFOB.Доступность            = не ВЭДГотов или глТекущийПользователь <> Ответственный;
	ЭлементыФормы.Товары.Колонки.Изготовитель.Доступность       = не ВЭДГотов или глТекущийПользователь <> Ответственный;
	ЭлементыФормы.СтатусЗаказаПоставщик.Доступность             = не ВЭДГотов или глТекущийПользователь <> Ответственный;
	ЭлементыФормы.ДатаОтгрузкиПоДаннымПоставщика.Доступность    = не ВЭДГотов или глТекущийПользователь <> Ответственный;
	ЭлементыФормы.ПортВыгрузки.Доступность                      = не ВЭДГотов или глТекущийПользователь <> Ответственный;
КонецПроцедуры

Процедура Флажок1ПриИзменении(Элемент)
	УстановитьДоступность();
	ОтветНаВопрос = Вопрос("Отослать уведомление в ВЭД?", РежимДиалогаВопрос.ДаНет);
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ОтправитьПисьмо("ft@yst.ru;novikova@yst.ru;goritsky@yst.ru");
	КонецЕсли;
КонецПроцедуры

Процедура Флажок2ПриИзменении(Элемент)
	УстановитьДоступность();
	ОтветНаВопрос = Вопрос("Отослать уведомление в Отдел продаж?", РежимДиалогаВопрос.ДаНет);
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ОтправитьПисьмо("nikitin_m@yst.ru;alekseeva@yst.ru;sales@yst-group.com;gur@yst-group.com");
	КонецЕсли;
КонецПроцедуры

Процедура ОтправитьУведомлениеНажатие(Элемент)
	ОтветНаВопрос = Вопрос("Отослать уведомление в ВЭД?", РежимДиалогаВопрос.ДаНет);
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ОтправитьПисьмо("ft@yst.ru;novikova@yst.ru;goritsky@yst.ru");
	КонецЕсли;
КонецПроцедуры

Процедура ОтпраитьУведомлениеНажатие(Элемент)
	ОтветНаВопрос = Вопрос("Отослать уведомление в Отдел продаж?", РежимДиалогаВопрос.ДаНет);
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		если Найти(Заказ.Ответственный.Наименование,"Алексеева")>0 или Найти(Заказ.Ответственный.Наименование,"Куракина")>0 Тогда
		    ОтправитьПисьмо("alekseeva@yst.ru;kurakina@yst.ru");
		ИначеЕсли Найти(Заказ.Ответственный.Наименование,"Аталай")>0 или Найти(Заказ.Ответственный.Наименование,"Васенина")>0 Тогда
			ОтправитьПисьмо("gur@yst-group.com;vasenina@yst.ru");
		ИначеЕсли Найти(Заказ.Ответственный.Наименование,"Никитин")>0 или Найти(Заказ.Ответственный.Наименование,"Гиззатуллина")>0 Тогда
			ОтправитьПисьмо("nikitin_m@yst.ru;200200140@yst.ru");
		ИначеЕсли Найти(Заказ.Ответственный.Наименование,"Щиголева")>0 или Найти(Заказ.Ответственный.Наименование,"Гиззатуллина")>0 Тогда
			ОтправитьПисьмо("sales@yst-group.com;200200140@yst.ru");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОтправитьПисьмо(Адрес)
	УЗ = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("no-reply@yst76.ru");
	Тема = "Создано/обновлено новое задание для отдела ВЭД № " + ЭтотОбъект.Номер;
	список = Новый СписокЗначений;
	ТекстСообщения = "Создано/обновлено новое задание для отдела ВЭД № " + ЭтотОбъект.Номер + "
	|
	|   по " +  Строка(Заказ) + " для контрагента " + заказ.Контрагент.Наименование;
	
	
	АдресПолучателя = Адрес;
	
	Состояние(строка(ТекущаяДата())+" идет отправка письма на адрес: "+АдресПолучателя);
	Если ЗначениеЗаполнено(АдресПолучателя) Тогда
		яштРезервыПоТоварам.ПослатьЭлектронноеПисьмо(АдресПолучателя,Список, УЗ, ТекстСообщения, Тема);
	КонецЕсли;	
КонецПроцедуры

Процедура ТоварыПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки из ОформленияСтрок Цикл
		ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
		ПоказатьКодАртикул(ЭлементыФормы.Товары.Колонки, ОформлениеСтроки.Ячейки, ДанныеСтроки.Номенклатура);	
	КонецЦикла;
КонецПроцедуры

Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	Макет = ПолучитьМакет("Макет");
	
	табДокумент = НОвый ТабличныйДокумент;
	табДокумент.АвтоМасштаб = Истина;
	табДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	
	область = макет.ПолучитьОбласть("Шапка");
	Область.Параметры.ДатаОтгрузкиПок=	Ссылка.ДатаОтгрузкиПоДаннымПокупателя;			
	Область.Параметры.ДатаОтгрузкиПост=	Ссылка.ДатаОтгрузкиПоДаннымПоставщика;			
	Область.Параметры.Усл=	Ссылка.УсловияПоставки;			
	Область.Параметры.ПортВ	=Ссылка.ПортВыгрузки;			
	Область.Параметры.ПортН= Ссылка.ПортНазначения;			
	Область.Параметры.Адрес	=Ссылка.АдресДоставки;			
	Область.Параметры.СтатусКл=	Ссылка.СтатусЗаказаКлиент;			
	Область.Параметры.СтатусПост=Ссылка.СтатусЗаказаПоставщик;				
	Область.Параметры.Контейнер	=Ссылка.РазмерКонтейнера;			
	Область.Параметры.Упак=	Ссылка.ТребованияКУпаковкеКонтейнера;	
	
    табДокумент.Вывести(область);
	
	для Каждого стр из Ссылка.товары Цикл
		нов = макет.ПолучитьОбласть("Строка");
		Нов.Параметры.Номер	= стр.НомерСтроки;
		Нов.Параметры.Код	= стр.Номенклатура.Код;
		Нов.Параметры.Товар	= стр.Номенклатура.наименование;
		Нов.Параметры.Кол	= стр.Количество;
		Нов.Параметры.Ед	= стр.Номенклатура.БазоваяЕдиницаИзмерения.наименование;
		Нов.Параметры.Цена	= стр.Цена;
		Нов.Параметры.Сумма	= стр.Сумма;
		Нов.Параметры.ЦенаF	= стр.ЦенаFOB;
		Нов.Параметры.макет	= стр.Запросить3Dмакет;
		Нов.Параметры.чертеж= стр.ЗапроситьЧертеж;	
		Нов.Параметры.макетсогласован=стр.Макет3DСогласован;
		Нов.Параметры.Дизайн= стр.ДизайнКоробки;	
		Нов.Параметры.фото	= стр.ВыслатьФото;
		Нов.Параметры.Изготовитель   = стр.Изготовитель;	
		//Набор = РегистрыСведений.СоответствиеТипоразмеровАвтомобилям.СоздатьНаборЗаписей();
		//Набор.Отбор.типоразмер.Установить(стр.Номенклатура.Типоразмер);
		//набор.Прочитать();
		//если набор.Количество()>0 Тогда
		//	Авт = набор[0].Автомобили;
		//КонецЕсли;
		//Нов.Параметры.Применяемость  = Авт;	
		Нов.Параметры.Комментарий    = стр.Комментарий;
		Нов.Параметры.Крышка= стр.Крышка;	
		Нов.Параметры.серт  = стр.СпецТребованияСертификат;  
		табДокумент.Вывести(Нов);
	КонецЦикла;
	
	табДокумент.Показать();
КонецПроцедуры

