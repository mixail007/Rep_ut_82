
Процедура РазобратьПоFIFOНажатие(Элемент)
	товары.Свернуть("Номенклатура","Количество");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Табл.Номенклатура,
		|	Табл.количество
		|ПОМЕСТИТЬ ВТ_Таблица
		|ИЗ
		|	&Табл КАК Табл
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТоварыПереданныеОстатки.Сделка КАК Документ.ЗаказПокупателя) КАК Сделка,
		|	ТоварыПереданныеОстатки.Номенклатура,
		|	ТоварыПереданныеОстатки.КоличествоОстаток,
		|	ТоварыПереданныеОстатки.СуммаВзаиморасчетовОстаток
		|ПОМЕСТИТЬ ВТ_Остатки
		|ИЗ
		|	РегистрНакопления.ТоварыПереданные.Остатки(&Дата, ) КАК ТоварыПереданныеОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Таблица.Номенклатура КАК Номенклатура,
		|	ВТ_Таблица.количество КАК количество,
		|	ВТ_Остатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ВТ_Остатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток,
		|	ВТ_Остатки.Сделка,
		|	ВТ_Остатки.Сделка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) < &ДатаС
		|			ТОГДА &ДатаС
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ)
		|	КОНЕЦ КАК ДатаОтгрузки
		|ИЗ
		|	ВТ_Таблица КАК ВТ_Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|			ПО ВТ_Остатки.Сделка = РеализацияТоваровУслуг.Сделка
		|		ПО ВТ_Таблица.Номенклатура = ВТ_Остатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	ВТ_Остатки.Сделка.МоментВремени
		|ИТОГИ
		|	СРЕДНЕЕ(количество),
		|	СУММА(КоличествоОстаток),
		|	СУММА(СуммаВзаиморасчетовОстаток)
		|ПО
		|	Номенклатура";

	Запрос.УстановитьПараметр("Табл", Товары);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("ДатаС", ДатаС);
	Результат = Запрос.Выполнить();

	ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если  выборкаНоменклатура.количество> ВыборкаНоменклатура.КоличествоОстаток тогда
			Сообщить("У контрагента остатка номенклатуры "+выборкаНоменклатура.Номенклатура.Код +" "+выборкаНоменклатура.Номенклатура +" на хранении не достаточно!");
			продолжить;
		конецЕсли;
		распределить= ВыборкаНоменклатура.Количество;
		Выборка = ВыборкаНоменклатура.Выбрать();
		
		Пока Выборка.Следующий() и Распределить>0 Цикл
			Строка = ТоварыПоЗаказам.Добавить();
			Строка.номенклатура = Выборка.номенклатура;
			строка.Заказ = Выборка.Сделка;
			строка.ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			строка.ДатаОтгрузки = Выборка.датаОтгрузки;
			если Распределить<Выборка.КоличествоОстаток тогда
				списать = Распределить;
				строка.количество = Списать;
			иначе
				списать = Выборка.КоличествоОстаток;
			конецЕсли;  
			распределить=распределить-списать;
			
			строка.количество = Списать;
			строка.Сумма = Списать*(выборкаНоменклатура.СуммаВзаиморасчетовОстаток/выборкаНоменклатура.КоличествоОстаток);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Процедура КоманднаяПанель1ПодобратьПоПродажам(Кнопка)
	ФормаЗаполнения = ПолучитьФорму("ФормаПодбра", ЭтаФорма);
	ФормаЗаполнения.Контрагент=Контрагент;
	ФормаЗаполнения.ДатаПо=ДатаПо;
	ФормаЗаполнения.ДатаС=ДатаС;
	ФормаЗаполнения.Открыть();

КонецПроцедуры


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Если ТипЗнч(ЗначениеВыбора) = Тип("ТаблицаЗначений") Тогда
		Для каждого стр из ЗначениеВыбора цикл
		     если стр.количество <>0 тогда
				ст = товары.Добавить();
				ст.Номенклатура = стр.номенклатура;
				ст.Количество = стр.количество;
			 конецЕсли;	 
		конецЦикла;
	конецЕсли;	
	
КонецПроцедуры

Процедура СоздатьДокументыНажатие(Элемент)
	если товары.итог("Количество")<> товарыПоЗаказам.итог("Количество") тогда
		Сообщить("Не все товары распределены по заказам");
	иначе
		
		//0. найдем или создадим Склад
		нужныйСклад = справочники.Склады.НайтиПоНаименованию(""+ Контрагент.код+" (ОТХ)");
		Если НужныйСклад = Справочники.Склады.ПустаяСсылка() тогда
			НужныйСклад = справочники.Склады.СоздатьЭлемент();
			НужныйСклад.Наименование =""+ Контрагент.код+" (ОТХ)";
			НужныйСклад.Комментарий = Контрагент.Наименование;
			НужныйСклад.Записать();
		конецЕсли;
		
		//1. Создаем возврат
		списокВозвратов = новый списокЗначений;
		Заказы = ТоварыПоЗаказам.Выгрузить(,"Заказ");
		Заказы.свернуть("Заказ");
		для каждого стр из Заказы цикл
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	РеализацияТоваровУслуг.Ссылка
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			|ГДЕ
			|	РеализацияТоваровУслуг.Сделка = &Сделка";
			
			Запрос.УстановитьПараметр("Сделка", стр.Заказ);
			
			Результат = Запрос.Выполнить().Выгрузить();
			
			
			
			
			Строки = ТоварыПоЗаказам.НайтиСтроки(Новый структура("Заказ",стр.Заказ));
			ДокВозврат = Документы.ВозвратТоваровОтПокупателя.СоздатьДокумент();
			ДокВозврат.Дата = ТекущаяДата();
			ДокВозврат.ВидПоступления = перечисления.ВидыПоступленияТоваров.НаСклад;
			ДокВозврат.Заполнить(стр.Заказ);
			ДокВозврат.Товары.очистить();
			ДокВозврат.Комментарий = "Продажи по договору отх";
			Для каждого ст из Строки цикл
				с = ДокВозврат.Товары.Добавить();
				с.номенклатура = ст.номенклатура;
				с.количество = ст.количество;
				с.ЕдиницаИзмерения = ст.номенклатура.ЕдиницаХраненияОстатков;
				с.Коэффициент =1;
				с.Цена =  ст.Сумма/ст.Количество;
				с.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
				с.Сумма = ст.Сумма;
				с.ДокументПартии = Результат[0].ссылка;
				с.Качество = справочники.Качество.Новый;
				с.склад = нужныйСклад.Ссылка;
			конецЦикла;
			списокВозвратов.Добавить(ДокВозврат);
		конецЦикла;
		//2.Создаем заказы
		
		списокЗаказов = Новый СписокЗначений;
		если ЗначениеЗаполнено(ДокументОснование)  тогда
			
			Заказ = ДокументОснование.ПолучитьОбъект();
			Заказ.Проверен = Истина;
			Заказ.записать(РежимЗаписиДокумента.Проведение);
			СписокЗаказов.Добавить(Заказ);
		иначе
			Договоры = ТоварыПоЗаказам.Выгрузить(,"ДоговорКонтрагента,ДатаОтгрузки");
			Договоры.свернуть("ДоговорКонтрагента,ДатаОтгрузки");
			
			
			Для каждого стр из Договоры Цикл
				// найдем или создадим нужный договор
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДоговорыКонтрагентов.Ссылка
				|ИЗ
				|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
				|ГДЕ
				|	ДоговорыКонтрагентов.ОтветственноеЛицо = &ОтветственноеЛицо
				|	И ДоговорыКонтрагентов.ТипДоговора = &ТипДоговора";
				
				Запрос.УстановитьПараметр("ОтветственноеЛицо", стр.ДоговорКонтрагента.ОтветственноеЛицо);
				Запрос.УстановитьПараметр("ТипДоговора", Справочники.ТипыДоговоров.ОтсрочкаОТХ);
				
				Результат = Запрос.Выполнить();
				
				Если не результат.Пустой() тогда
					Выборка = Результат.Выбрать();
					Выборка.Следующий();
					нужныйДоговор = Выборка.ссылка;
				иначе
					новДог = стр.договорконтрагента.Скопировать;
					НовДог.Наименование = "Договор отсрочки ОТХ";
					НовДог.типДоговора = Справочники.ТипыДоговоров.ОтсрочкаОТХ;
					НовДог.Записать();
					нужныйДоговор = новДог.ссылка; 
				конецЕсли;
				
				
				
				
				Отбор = Новый структура;
				Отбор.Вставить("ДоговорКонтрагента",стр.ДоговорКонтрагента);
				Отбор.Вставить("ДатаОтгрузки",стр.ДатаОтгрузки);
				
				Строки = ТоварыПоЗаказам.НайтиСтроки(отбор);
				
				Заказ = Строки[0].Заказ.Скопировать();
				Заказ.Дата = ДатаС;
				
				СтрокаПрефикс = "ТК";
				Если Заказ.Подразделение.ПрефиксИБ<>"" Тогда
					СтрокаПрефикс = Заказ.подразделение.ПрефиксИБ;
				КонецЕсли;	
				Заказ.УстановитьНовыйНомер(СтрокаПрефикс);	
				
				
				
				
				
				
				//	 Заказ.Заполнить(ТаблицаНавозврат[0].Заказ);
				Заказ.ДоговорКонтрагента = НужныйДоговор;
				Заказ.ДатаОтгрузки = ТекущаяДата();
				Заказ.ДатаОплаты = ДатаПо+7*24*60*60;
				Заказ.Товары.Очистить();
				Для каждого стр1 из строки цикл
					ст = Заказ.Товары.Добавить();
					ст.Номенклатура = стр1.номенклатура;
					ст.количество = стр1.количество;
					ст.ЕдиницаИзмерения = стр1.номенклатура.ЕдиницаХраненияОстатков;
					ст.Коэффициент =1;
					ст.Цена =  стр1.Сумма/стр1.Количество;
					ст.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
					ст.Сумма = стр1.Сумма;
				конецЦикла;
				//если требуется, свернем заказы по средней цене
				
				
				///--------------------------------------------------
				СписокЗаказов.Добавить(Заказ);
			конецЦикла; 
		конецЕсли;
		начатьТранзакцию();
		Для каждого воз из  списокВозвратов цикл
			Док =Воз.Значение;  
			Док.Записать(РежимЗаписиДокумента.Проведение);  
		конецЦикла;
		
		Для каждого зак из списокЗаказов цикл
			Заказ = Зак.Значение;	
			Заказ.Записать(РежимЗаписиДокумента.Проведение);
			
			//3. Создаем реализацию
			
			Реализация = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			
			если Реализация.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ПредоплатаПоСчетам тогда
				реализация.Дата = ТекущаяДата();
			иначе
				Реализация.Дата = Заказ.Дата;
			конецесли;
			Реализация.Заполнить(Заказ.ссылка);
			СтрокаПрефикс = "ТК";
			Если Реализация.Подразделение.ПрефиксИБ<>"" Тогда
				СтрокаПрефикс = Реализация.подразделение.ПрефиксИБ;
			КонецЕсли;	
			Реализация.УстановитьНовыйНомер(СтрокаПрефикс);	
			
			Для каждого стр из Реализация.Товары цикл
				стр.Склад = НужныйСклад.Ссылка;  
				стр.Качество = справочники.Качество.Новый;
			конецЦикла;
			
			реализация.Записать(РежимЗаписиДокумента.Проведение);
			
		конецЦикла;
		
		
		ДокументыСформированы = Истина;
		
		
		ЗафиксироватьТранзакцию();
		
		Если ДокументыСформированы  тогда
			Записать();
			ЭлементыФормы.СтатусДокумент.Заголовок = "Документы сформированы";
			ЭлементыФормы.СтатусДокумент.ЦветТекста = Webцвета.Зеленый;
			ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодобратьПоПродажам.Доступность = Истина;
			ЭлементыФормы.Товары.ТолькоПросмотр = Истина;
			ЭлементыФормы.ТоварыПоЗаказам.ТолькоПросмотр = истина;
			ЭлементыФормы.СоздатьДокументы.Доступность = Ложь;
		иначе	
			ЭлементыФормы.СтатусДокумент.Заголовок = "Документы не сформированы";
			ЭлементыФормы.СтатусДокумент.ЦветТекста = Webцвета.Красный;
		конецЕсли;		
	конецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	Если ДокументыСформированы  тогда
		ЭлементыФормы.СтатусДокумент.Заголовок = "Документы на отгрузку сформированы";
		ЭлементыФормы.СтатусДокумент.ЦветТекста = Webцвета.Зеленый;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодобратьПоПродажам.Доступность = Истина;
		ЭлементыФормы.Товары.ТолькоПросмотр = Истина;
		ЭлементыФормы.ТоварыПоЗаказам.ТолькоПросмотр = истина;
		ЭлементыФормы.СоздатьДокументы.Доступность = Ложь;
	иначе	
		ЭлементыФормы.СтатусДокумент.Заголовок = "Документы на отгрузку не сформированы";
		ЭлементыФормы.СтатусДокумент.ЦветТекста = Webцвета.Красный;
	конецЕсли;	
	Если не Рольдоступна("ПолныеПрава")  тогда
		ЭлементыФормы.Панель1.Страницы.ПоЗаказам.Видимость = Ложь;
		ЭлементыФормы.СоздатьДокументы.Доступность = Ложь;
		ЭлементыФормы.РазобратьПоFIFO.Доступность = Ложь;
	конецЕсли;	
КонецПроцедуры

Процедура ТоварыПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Данныестроки = ОформлениеСтроки.Данныестроки;
		ОформлениеСтроки.Ячейки.Код.Текст = ДанныеСтроки.Номенклатура.Код;
		ОформлениеСтроки.Ячейки.Код.ОтображатьТекст = Истина;
	КонецЦикла;
КонецПроцедуры

Процедура ТоварыПоЗаказамПриПолученииДанных(Элемент, ОформленияСтрок)
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Данныестроки = ОформлениеСтроки.Данныестроки;
		ОформлениеСтроки.Ячейки.Код.Текст = ДанныеСтроки.Номенклатура.Код;
		ОформлениеСтроки.Ячейки.Код.ОтображатьТекст = Истина;
	КонецЦикла;

КонецПроцедуры



