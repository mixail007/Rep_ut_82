Перем мВалютаРегламентированногоУчета Экспорт;



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		// Заполнение шапки
	Заказпокупателя = ДанныеЗаполнения;
		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Сделка = &Сделка";
	
	Запрос.УстановитьПараметр("Сделка", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	 списокРеализаций = Новый СписокЗначений; 
	 Пока Выборка.Следующий() Цикл
		СписокРеализаций.Добавить(Выборка.ссылка); 
	КонецЦикла;
	   Если СписокРеализаций.Количество() =0 Тогда
		Предупреждение("По данному заказу нет ни одной реализации!");
	   ИначеЕсли СписокРеализаций.Количество() >1 Тогда
        ВыбранныйЭлемент = списокРеализаций.ВыбратьЭлемент("Выберите реализацию для корректировки");
		Если ВыбранныйЭлемент <> Неопределено Тогда
		ДокументРеализации = ВыбранныйЭлемент.Значение;	
		конецЕсли;	
	   иначе
       ДокументРеализации = СписокРеализаций[0].Значение;
       конецЕсли;
          //Найдем Корректировку реализации
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаРеализации.Ссылка
		|ИЗ
		|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|ГДЕ
		|	КорректировкаРеализации.ДокументРеализации = &ДокументРеализации
		|	И КорректировкаРеализации.Проведен";
	
	Запрос.УстановитьПараметр("ДокументРеализации", ДокументРеализации);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
		Если Выборка.Следующий() Тогда		
		ВызватьИсключение("По реализации заказа уже были корректировки реализации! Корректировать заказ нельзя!");
		 возврат;
		КонецЕсли;
	  
		ДанныеЗаполнения =ДокументРеализации;
		
		ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
//		Закрыт = ДанныеЗаполнения.Закрыт;
	//	Комментарий = ДанныеЗаполнения.Комментарий;
	    Подразделение = ДанныеЗаполнения.Подразделение;

		Контрагент = ДанныеЗаполнения.Контрагент;
		КратностьВзаиморасчетов = ДанныеЗаполнения.КратностьВзаиморасчетов;
		КурсВзаиморасчетов = ДанныеЗаполнения.КурсВзаиморасчетов;
		Организация = ДанныеЗаполнения.Организация;
		Ответственный = глТекущийпользователь;
		СуммаВключаетНДС = ДанныеЗаполнения.СуммаВключаетНДС;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		ТипЦен = ДанныеЗаполнения.ТипЦен;
		УчитыватьНДС = ДанныеЗаполнения.УчитыватьНДС;
		Для Каждого ТекСтрокаВозвратнаяТара Из ДанныеЗаполнения.ВозвратнаяТара Цикл
			НоваяСтрока = ВозвратнаяТара.Добавить();
			НоваяСтрока.Количество = ТекСтрокаВозвратнаяТара.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаВозвратнаяТара.Номенклатура;
			НоваяСтрока.Размещение = ТекСтрокаВозвратнаяТара.Размещение;
			НоваяСтрока.Сумма = ТекСтрокаВозвратнаяТара.Сумма;
			НоваяСтрока.Цена = ТекСтрокаВозвратнаяТара.Цена;
		КонецЦикла;
		//Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
		//	НоваяСтрока = Товары.Добавить();
		//	НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
		//	НоваяСтрока.ЕдиницаИзмеренияМест = ТекСтрокаТовары.ЕдиницаИзмеренияМест;
		//	НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
		//	НоваяСтрока.КоличествоМест = ТекСтрокаТовары.КоличествоМест;
		//	НоваяСтрока.Коэффициент = ТекСтрокаТовары.Коэффициент;
		//	НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
		//	НоваяСтрока.КоличествоДоИзменения = ТекСтрокаТовары.Количество;
		//	НоваяСтрока.СтавкаНДС = ТекСтрокаТовары.СтавкаНДС;
		//	НоваяСтрока.СтавкаНДСДоИзменения = ТекСтрокаТовары.СтавкаНДС;
		//	НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
		//	НоваяСтрока.СуммаНДС = ТекСтрокаТовары.СуммаНДС;
		//	НоваяСтрока.СуммаДоИзменения = ТекСтрокаТовары.Сумма;
		//	НоваяСтрока.СуммаНДСДоИзменения = ТекСтрокаТовары.СуммаНДС;
		//	НоваяСтрока.ХарактеристикаНоменклатуры = ТекСтрокаТовары.ХарактеристикаНоменклатуры;
		//	НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
		//	НоваяСтрока.ЦенаДоИзменения = ТекСтрокаТовары.Цена;
		//	НоваяСтрока.Склад = ТекСтрокаТовары.Склад;
		//	НоваяСтрока.СпособСписанияОстаткаТоваров = ТекСтрокаТовары.СпособСписанияОстаткаТоваров;
	//	КонецЦикла;
		//Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
		//	НоваяСтрока = Услуги.Добавить();
		//	НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
		//	НоваяСтрока.Номенклатура = ТекСтрокаУслуги.Номенклатура;
		//	НоваяСтрока.ПроцентСкидкиНаценки = ТекСтрокаУслуги.ПроцентСкидкиНаценки;
		//	НоваяСтрока.Содержание = ТекСтрокаУслуги.Содержание;
		//	НоваяСтрока.СтавкаНДС = ТекСтрокаУслуги.СтавкаНДС;
		//	НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
		//	НоваяСтрока.СуммаНДС = ТекСтрокаУслуги.СуммаНДС;
		//	НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
		//КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.ЕдиницаИзмерения,
		|	РеализацияТоваровУслугТовары.ЕдиницаИзмеренияМест,
		|	РеализацияТоваровУслугТовары.Количество,
		|	РеализацияТоваровУслугТовары.КоличествоМест,
		|	РеализацияТоваровУслугТовары.Коэффициент,
		|	РеализацияТоваровУслугТовары.Номенклатура,
		|	РеализацияТоваровУслугТовары.ПроцентСкидкиНаценки,
		|	РеализацияТоваровУслугТовары.СерияНоменклатуры,
		|	РеализацияТоваровУслугТовары.СпособСписанияОстаткаТоваров,
		|	РеализацияТоваровУслугТовары.СтавкаНДС,
		|	РеализацияТоваровУслугТовары.Сумма,
		|	РеализацияТоваровУслугТовары.СуммаНДС,
		|	РеализацияТоваровУслугТовары.ХарактеристикаНоменклатуры,
		|	РеализацияТоваровУслугТовары.Цена,
		|	РеализацияТоваровУслугТовары.Склад,
		|	РеализацияТоваровУслугТовары.ПроцентАвтоматическихСкидок,
		|	РеализацияТоваровУслугТовары.УсловиеАвтоматическойСкидки,
		|	РеализацияТоваровУслугТовары.ЗначениеУсловияАвтоматическойСкидки,
		|	РеализацияТоваровУслугТовары.Вес,
		|	РеализацияТоваровУслугТовары.Качество
		|ПОМЕСТИТЬ Свод
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмерения,
		|	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмеренияМест,
		|	-ВозвратТоваровОтПокупателяТовары.Количество,
		|	-ВозвратТоваровОтПокупателяТовары.КоличествоМест,
		|	ВозвратТоваровОтПокупателяТовары.Коэффициент,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
		|	NULL,
		|	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры,
		|	NULL,
		|	ВозвратТоваровОтПокупателяТовары.СтавкаНДС,
		|	-ВозвратТоваровОтПокупателяТовары.Сумма,
		|	-ВозвратТоваровОтПокупателяТовары.СуммаНДС,
		|	ВозвратТоваровОтПокупателяТовары.ХарактеристикаНоменклатуры,
		|	ВозвратТоваровОтПокупателяТовары.Цена,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	-ВозвратТоваровОтПокупателяТовары.Вес,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
		|ГДЕ
		|	ВозвратТоваровОтПокупателяТовары.ДокументПартии = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Свод.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Свод.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
		|	СУММА(Свод.Количество) КАК Количество,
		|	СУММА(Свод.КоличествоМест) КАК КоличествоМест,
		|	Свод.Коэффициент КАК Коэффициент,
		|	Свод.Номенклатура КАК Номенклатура,
		|	СУММА(Свод.ПроцентСкидкиНаценки) КАК ПроцентСкидкиНаценки,
		|	Свод.СерияНоменклатуры КАК СерияНоменклатуры,
		|	МАКСИМУМ(Свод.СпособСписанияОстаткаТоваров) КАК СпособСписанияОстаткаТоваров,
		|	Свод.СтавкаНДС КАК СтавкаНДС,
		|	СУММА(Свод.Сумма) КАК Сумма,
		|	СУММА(Свод.СуммаНДС) КАК СуммаНДС,
		|	Свод.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	Свод.Цена КАК Цена,
		|	МАКСИМУМ(Свод.Склад) КАК Склад,
		|	СУММА(Свод.ПроцентАвтоматическихСкидок) КАК ПроцентАвтоматическихСкидок,
		|	МАКСИМУМ(Свод.УсловиеАвтоматическойСкидки) КАК УсловиеАвтоматическойСкидки,
		|	МАКСИМУМ(Свод.ЗначениеУсловияАвтоматическойСкидки) КАК ЗначениеУсловияАвтоматическойСкидки,
		|	СУММА(Свод.Вес) КАК Вес,
		|	МАКСИМУМ(Свод.Качество) КАК Качество
		|ИЗ
		|	Свод КАК Свод
		|
		|СГРУППИРОВАТЬ ПО
		|	Свод.Номенклатура,
		|	Свод.Цена,
		|	Свод.ХарактеристикаНоменклатуры,
		|	Свод.СтавкаНДС,
		|	Свод.СерияНоменклатуры,
		|	Свод.Коэффициент,
		|	Свод.ЕдиницаИзмерения,
		|	Свод.ЕдиницаИзмеренияМест
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовСтр = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
		НовСтр.ЦенаДоИзменения = НовСтр.Цена;
		НовСтр.СуммаДоИзменения = НовСтр.Сумма;
		НовСтр.КоличествоДоИзменения = НовСтр.Количество;
		НовСтр.СтавкаНДСДоИзменения = НовСтр.СтавкаНДС;
		НовСтр.СуммаНДСДоИзменения = НовСтр.СуммаНДС;
	КонецЦикла;
	
    //24.06.2016 изменение ввода на основании ТЧ Услуги	
	ЗаполнитьНаОснованииТЧУслуги(ДанныеЗаполнения);
	//24.06.2016
	
	КонецЕсли;	
	
КонецПроцедуры 

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
				Префикс = "ТК";
			Если подразделение.ПрефиксИБ<>"" Тогда
				Префикс = подразделение.ПрефиксИБ;
			КонецЕсли;	
КонецПроцедуры


Процедура ЗаполнитьНаОснованииТЧУслуги(ДанныеЗаполнения)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугУслуги.Количество,
		|	РеализацияТоваровУслугУслуги.Номенклатура,
		|	РеализацияТоваровУслугУслуги.СтавкаНДС,
		|	РеализацияТоваровУслугУслуги.Сумма,
		|	РеализацияТоваровУслугУслуги.СуммаНДС,
		|	РеализацияТоваровУслугУслуги.Цена,
		|	РеализацияТоваровУслугУслуги.Содержание
		|ПОМЕСТИТЬ Свод
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|ГДЕ
		|	РеализацияТоваровУслугУслуги.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ВозвратТоваровОтПокупателяУслуги.Количество,
		|	ВозвратТоваровОтПокупателяУслуги.Номенклатура,
		|	ВозвратТоваровОтПокупателяУслуги.СтавкаНДС,
		|	-ВозвратТоваровОтПокупателяУслуги.Сумма,
		|	-ВозвратТоваровОтПокупателяУслуги.СуммаНДС,
		|	ВозвратТоваровОтПокупателяУслуги.Цена,
		|	ВозвратТоваровОтПокупателяУслуги.Содержание
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Услуги КАК ВозвратТоваровОтПокупателяУслуги
		|ГДЕ
		|	ВозвратТоваровОтПокупателяУслуги.Ссылка В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ВозвратТоваровОтПокупателяТовары.Ссылка
		|			ИЗ
		|				Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
		|			ГДЕ
		|				ВозвратТоваровОтПокупателяТовары.ДокументПартии = &Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(Свод.Количество) КАК Количество,
		|	Свод.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(Свод.СтавкаНДС, &БезНДС) КАК СтавкаНДС,
		|	СУММА(Свод.Сумма) КАК Сумма,
		|	СУММА(Свод.СуммаНДС) КАК СуммаНДС,
		|	Свод.Цена КАК Цена,
		|	Свод.Содержание
		|ПОМЕСТИТЬ ВТ_3
		|ИЗ
		|	Свод КАК Свод
		|
		|СГРУППИРОВАТЬ ПО
		|	Свод.Номенклатура,
		|	Свод.Цена,
		|	ЕСТЬNULL(Свод.СтавкаНДС, &БезНДС),
		|	Свод.Содержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_3.Количество,
		|	ВТ_3.Номенклатура,
		|	ВТ_3.СтавкаНДС,
		|	ВТ_3.Сумма,
		|	ВТ_3.СуммаНДС,
		|	ВТ_3.Цена,
		|	ВТ_3.Содержание
		|ИЗ
		|	ВТ_3 КАК ВТ_3
		|ГДЕ
		|	ВТ_3.Количество > 0";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("БезНДС", Перечисления.СтавкиНДС.БезНДС);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовСтр = Услуги.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
		НовСтр.ЦенаДоИзменения = НовСтр.Цена;
		НовСтр.СуммаДоИзменения = НовСтр.Сумма;
		НовСтр.КоличествоДоИзменения = НовСтр.Количество;
		НовСтр.СтавкаНДСДоИзменения = НовСтр.СтавкаНДС;
		НовСтр.СуммаНДСДоИзменения = НовСтр.СуммаНДС;
	КонецЦикла;    	
	
	
КонецПроцедуры	

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

