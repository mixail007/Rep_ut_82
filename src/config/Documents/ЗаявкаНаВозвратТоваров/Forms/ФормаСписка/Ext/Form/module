
Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	флСогласовано = ЭлементыФормы.ДокументСписок.Колонки.Согласованно.Видимость;
	
	спис = новый СписокЗначений;  //оптимизация 
	Для Каждого Строка Из ОформленияСтрок Цикл
		спис.Добавить(строка.ДанныеСтроки.Ссылка );
	КонецЦикла;
	
	Переданные = Документы.ЗаявкаНаВозвратТоваров.Получитьпереданные(спис);
	
	//+Лукьяненков 24.11.2017 по задаче №34392
	//Сравниваем сумму всех поступлений с суммой заявки на возврат товаров "Обратная продажа"
	
	МассивЗаявокНаВозврат = Новый Массив;
	МинДатаЗаявки = ТекущаяДата();
	Для Каждого Строка Из ОформленияСтрок Цикл
		Если Строка.ДанныеСтроки.Ссылка.ПричинаВозврата = Перечисления.ПричиныВозвратаТовара.ОбратнаяПродажа Тогда
			МассивЗаявокНаВозврат.Добавить(Строка.ДанныеСтроки.Ссылка);
			Если МинДатаЗаявки > Строка.ДанныеСтроки.Дата Тогда
				МинДатаЗаявки = Строка.ДанныеСтроки.Дата;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	МинДатаЗаявки = НачалоДня(МинДатаЗаявки)-3600;
	
		ЗапросСуммыПоступлений = Новый Запрос;
		ЗапросСуммыПоступлений.Текст =
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамОбороты.ЗаказПоставщику.Основание КАК ЗаявкаНаВозврат,
		|	ЗаказыПоставщикамОбороты.СуммаУпрРасход КАК СуммаПриходов
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Обороты(&МинДата, , , ЗаказПоставщику.Основание В (&СписокЗаявокНаВозврат)) КАК ЗаказыПоставщикамОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамОбороты.ЗаказПоставщику.Основание,
		|	ЗаказыПоставщикамОбороты.СуммаУпрРасход";
		ЗапросСуммыПоступлений.УстановитьПараметр("СписокЗаявокНаВозврат", МассивЗаявокНаВозврат);
		ЗапросСуммыПоступлений.УстановитьПараметр("МинДата", МинДатаЗаявки);
		
		ТЗСуммыПоступлений = неопределено;
		Если МассивЗаявокНаВозврат.Количество() > 0 Тогда
			ТЗСуммыПоступлений = ЗапросСуммыПоступлений.Выполнить().Выгрузить();
		КонецЕсли;
	//-Лукьяненков 24.11.2017
	
	//15.12.16 Смирнов перенес функцию в модуль менеджера
	табл = Документы.ЗаявкаНаВозвратТоваров.ПроверитьЕстьЛиВозвраты(спис); //ЕДИНЫЙ ЗАПРОС ПО ВСЕМ Заявкам - время проверок с 1,5-2 сек до 0,1 с
	i=0;
	Для Каждого Строка Из ОформленияСтрок Цикл
		к=Строка;
		//// ОбработкаПрерыванияПользователя();
		док1 = Строка.ДанныеСтроки.Ссылка;
		
		Попытка
			стр1 = табл[i]; 
		Исключение
		КонецПопытки;
		
		если стр1.Ссылка <> док1 тогда
			стр1 = табл.найти(док1, "Ссылка");
			//   i = табл.Индекс(стр1);  
		КонецЕсли;  
		если стр1 = Неопределено Тогда
			Продолжить;
		конецЕсли;	
		
		строка.Ячейки.ВРаботе.ОтображатьТекст = Истина;
		Если Док1.вРаботе =1 Тогда
			строка.Ячейки.вРаботе.Текст = "В работе";
		иначеЕсли Док1.вРаботе =2 Тогда
			строка.Ячейки.вРаботе.Текст = "Отработана складом";
		иначе
			строка.Ячейки.вРаботе.Текст = "Не привозили";
		конецЕсли;
		
		если Переданные.найти(Док1,"Документ")<> Неопределено Тогда
				Строка.ЦветФона = WebЦвета.Желтый;   
		конецесли;

		если стр1.Статус = "1.Есть все возвраты"  и стр1.Ссылка.ПричинаВозврата <> Перечисления.ПричиныВозвратаТовара.ОбратнаяПродажа тогда
			Строка.ЦветФона = WebЦвета.НейтральноЗеленый;  
		ИначеЕсли стр1.статус = "2.Возвраты есть частично" тогда
			Строка.ЦветФона = WebЦвета.ЛососьСветлый; 
			//Строка.ЦветФона =WebЦвета.ГолубойСоСтальнымОттенком;  
		ИначеЕсли стр1.статус = "3.Возврат больше заявки" тогда
			Строка.ЦветФона = WebЦвета.Сливовый; //малиновый 
		ИначеЕсли стр1.КоличествоОТХ > 0 и ТекущаяДата()-стр1.ДатаОТХ < 60*60*24*7 Тогда   //Плотников++++
			Строка.ЦветФона = WindowsЦвета.ЗаголовокНеактивногоОкна;
			строка.Ячейки.ОТХ.Значение = стр1.ДатаОТХ;
		ИначеЕсли стр1.КоличествоОТХ > 0 и ТекущаяДата()-стр1.ДатаОТХ >= 60*60*24*7 Тогда   //Плотников++++
			Строка.ЦветФона = Новый Цвет(255, 146, 146);
			строка.Ячейки.ОТХ.Значение = стр1.ДатаОТХ;
		ИначеЕсли Док1.Вработе=1 и ТекущаяДата()-Док1.ДатаВРаботе > 60*60*24 Тогда
			Строка.ЦветФона = WebЦвета.КрасноФиолетовый;
		Иначе
			//если хотябы 1 позиция согласованна - подсвечиваем
			Статусы = Док1.товары.найтистроки(новый Структура("Статус",Перечисления.СтатусыСтрокЗаказа.Подтвержден));
			Если статусы.количество()> 0 тогда
				Строка.ЦветФона = WebЦвета.БледноМиндальный;   
				Строка.Шрифт = новый Шрифт(Строка.Шрифт ,,,Истина); // Жирный
			конецЕсли;
		конецЕсли;
		Если флСогласовано тогда
			если Строка.ДанныеСтроки.Согласованно тогда
				Строка.Шрифт = новый Шрифт(Строка.Шрифт ,,,Истина); // Жирный
			КонецЕсли;
		иначе //по ссылкам не очень хорошо...
			если док1.Согласованно тогда
				Строка.Шрифт = новый Шрифт(Строка.Шрифт ,,,Истина); // Жирный
			КонецЕсли;
		КонецЕсли;
		//23.06.2016 - если нет документов - подсвечиваем
		Если Стр1.Ссылка.НетДокументов и стр1.Статус <> "1.Есть все возвраты" Тогда
			Строка.ЦветФона = WebЦвета.СинеСерый;   
		КонецЕсли;			
		//23.06.2016
		i=i+1;
		
		//+Лукьяненков 24.11.2017 по задаче №34392
		
		Если ТЗСуммыПоступлений <> неопределено и стр1.Ссылка.ПричинаВозврата = Перечисления.ПричиныВозвратаТовара.ОбратнаяПродажа Тогда
			СуммаПоступленийСтрока = ТЗСуммыПоступлений.Найти(стр1.Ссылка,"ЗаявкаНаВозврат");
			Если СуммаПоступленийСтрока = неопределено Тогда //Поступлений вообще нет, нечего не делаем
			ИначеЕсли СуммаПоступленийСтрока.СуммаПриходов = стр1.Ссылка.Товары.Итог("Сумма") Тогда //Сумма по поступлениям равна заявке на возврат
				Строка.ЦветФона = WebЦвета.НейтральноЗеленый;	
			Иначе //Поступления есть, но сумма поступлений меньше заявки на возврат
				РазницаСуммП = стр1.Ссылка.Товары.Итог("Сумма") - СуммаПоступленийСтрока.СуммаПриходов;
				Строка.ЦветФона = WebЦвета.СинеСерый;
				Строка.Ячейки.КомментарийБухгалтерии.Текст = ?(ЗначениеЗаполнено(Строка.Ячейки.КомментарийБухгалтерии.Текст),Строка.Ячейки.КомментарийБухгалтерии.Текст+Символы.ПС+"Расхождение: "+РазницаСуммП,"Расхождение: "+РазницаСуммП);
			КонецЕсли;
		КонецЕсли;
		
		//-Лукьяненков 24.11.2017
		
	КонецЦикла;		
КонецПроцедуры

Процедура ПриОткрытии()
	
	//Адиянов <<<20161222 
	ЭлементОтбора = Отбор.Найти("ПометкаУдаления");
	Если  ЭлементОтбора = Неопределено Тогда
		ЭлементОтбора = Отбор.Добавить("ПометкаУдаления"); // если нет - добавим в список отборов
	КонецЕсли;
	
	//по настройке пользователя !!!
	Если НЕ ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ДокументыРазрешитьПросмотрПомеченныхНаУдаление") тогда
		ЭлементОтбора.Установить(Ложь); // установим видимость только НЕудаленных
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.ПометкаУдаления.Доступность = ЛОЖЬ;
	иначе // можно видеть удаленные элементы
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.ПометкаУдаления.Доступность = Истина;
	КонецЕсли;
	//Адиянов >>>20161222 

	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		
		Если Отбор.Найти("Подразделение") = Неопределено Тогда 
			Отбор.Добавить("Подразделение");
		КонецЕсли;
		Отбор["Подразделение"].Использование = Истина;
		
		//+++( 27.05.2015 - отбор по 1 или нескольким подразделениям
		ОдноПодразделение = ?(РольДоступна("Партнер"), ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновноеПодразделение"), ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение);
		списокПодразделенийПользователя = получитьСписокРазрешенныхОбъектовПользователя(ПараметрыСеанса.ТекущийПользователь, "Подразделения"); 
		
		если списокПодразделенийПользователя.Количество()=0 тогда // как было
			Отбор["Подразделение"].ВидСравнения = ВидСравнения.Равно;
			Отбор["Подразделение"].Значение = ОдноПодразделение;
		иначе	
			Отбор["Подразделение"].ВидСравнения = ВидСравнения.ВСписке;
			Отбор["Подразделение"].Значение = списокПодразделенийПользователя;
		КонецЕсли;
		//+++)
		
		ЭлементыФормы.ДокументСписок.НастройкаОтбора["Подразделение"].Доступность = Ложь;
		
		
		Возврат; //+++ 15.07.2013 - больше никаких отборов
	КонецЕсли;
	
	
	//+++Шарафутдинов 15.05.2018 хотя бы при одной настройке, по идее все настройки надо бы обрабатывать...
	
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ИспользоватьОтбор") Тогда  		
		
		Если (ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЖурналыОтборПоРегиону")) Тогда
			
			СписокКонтрагентовМенеджера = ПолучитьСписокКонтрагентовМенеджераПоРегиону(ПараметрыСеанса.ТекущийПользователь);
			Если ДокументСписок.Отбор.Найти("Контрагент") = Неопределено Тогда 
				ДокументСписок.Отбор.Добавить("Контрагент");
			КонецЕсли;
			ДокументСписок.Отбор["Контрагент"].Использование = Истина;
			ДокументСписок.Отбор["Контрагент"].ВидСравнения = ВидСравнения.ВСписке;
			ДокументСписок.Отбор["Контрагент"].Значение = СписокКонтрагентовМенеджера;
			ЭлементыФормы.ДокументСписок.НастройкаОтбора["Контрагент"].Доступность = Ложь;  	
			
		КонецЕсли;
	КонецЕсли;
	
	//---Шарафутдинов 15.05.2018
	
	
	ЗаполнитьЦветовуюСхему();
	//ЗаполнитьЦветовуюСхему(ТабЦветоваяСхемаНеСогласовано);
	
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненности(Кнопка)
	
	текСтр = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	
Если текСтр <> неопределено тогда 
		// Вставить содержимое обработчика.
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") 
		И НЕ ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "СтаршийМенеджерПодразделения") Тогда  //+++ 09.07.2014
		СообщитьОбОшибке("У Вас недостаточно прав для открытия структуры подчиненности!");
		Возврат;
 	КонецЕсли;
	
	реализация = неопределено;
	
	если текСтр.Ссылка.Товары.Количество()>0 тогда
	реализация = текСтр.Ссылка.Товары[0].реализация;
	 Для каждого стр1 из текСтр.Ссылка.Товары цикл
		если реализация <> стр1.реализация тогда
			реализация = неопределено;
			Прервать;
		 КонецЕсли;
	 КонецЦикла;
 	КонецЕсли; 
 
	Если ЗначениеЗаполнено(реализация) тогда
		ПоказатьСтруктуруПодчиненностиДокумента(реализация);	
	Иначе
		ПоказатьСтруктуруПодчиненностиДокумента(текСтр.Ссылка);	
	КонецЕсли;
	
КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьЦветовуюСхему()
	
	Жирн = новый Шрифт(ЭлементыФормы.ПолеВвода1.Шрифт ,,,Истина);

	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода1, ЭлементыФормы.ПолеВвода1, WebЦвета.НейтральноЗеленый, "Статус = 1.Есть все возвраты | Для обратных продаж Сумма поступлений = Сумма заявки", Жирн);
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода2, ЭлементыФормы.ПолеВвода2, WebЦвета.ЛососьСветлый, "Статус = 2.Возвраты есть частично", Жирн);
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода3, ЭлементыФормы.ПолеВвода3, WebЦвета.Сливовый, "Статус = 3.Возврат больше заявки", Жирн);
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода4, ЭлементыФормы.ПолеВвода4, WindowsЦвета.ЗаголовокНеактивногоОкна, "Кол-во на ответ. хранен. > 0 и прошло меньше недели", Жирн);
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода5, ЭлементыФормы.ПолеВвода5, Новый Цвет(255, 146, 146), "Кол-во на ответ. хранен. > 0 и прошло больше или равно недели", Жирн);
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода6, ЭлементыФормы.ПолеВвода6, WebЦвета.КрасноФиолетовый, "Состояние = В Работе и прошло больше суток", Жирн);
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода7, ЭлементыФормы.ПолеВвода7, WebЦвета.БледноМиндальный, "Хотя бы одна позиция согласована", Жирн);
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода8, ЭлементыФормы.ПолеВвода8, WebЦвета.Желтый, "Оформлен", Жирн);
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода9, ЭлементыФормы.ПолеВвода9, WebЦвета.СинеСерый, "Нет документов и Статус НЕ = 1.Есть все возвраты | Для обратных продаж Сумма поступлений отличается от Суммы заявки", Жирн);
	
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода10, ЭлементыФормы.ПолеВвода10, WebЦвета.НейтральноЗеленый, "Статус = 1.Есть все возвраты | Для обратных продаж Сумма поступлений = Сумма заявки");
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода11, ЭлементыФормы.ПолеВвода11, WebЦвета.ЛососьСветлый, "Статус = 2.Возвраты есть частично");
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода12, ЭлементыФормы.ПолеВвода12, WebЦвета.Сливовый, "Статус = 3.Возврат больше заявки");
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода13, ЭлементыФормы.ПолеВвода13, WindowsЦвета.ЗаголовокНеактивногоОкна, "Кол-во на ответ. хранен. > 0 и прошло меньше недели");
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода14, ЭлементыФормы.ПолеВвода14, Новый Цвет(255, 146, 146), "Кол-во на ответ. хранен. > 0 и прошло больше или равно недели");
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода15, ЭлементыФормы.ПолеВвода15, WebЦвета.КрасноФиолетовый, "Состояние = В Работе и прошло больше суток");
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода16, ЭлементыФормы.ПолеВвода16, WebЦвета.БледноМиндальный, "Хотя бы одна позиция согласована", Жирн);
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода17, ЭлементыФормы.ПолеВвода17, WebЦвета.Желтый, "Оформлен");
	ЗаполнитьЗначениеОформлениеПоля(ПолеВвода18, ЭлементыФормы.ПолеВвода18, WebЦвета.СинеСерый, "Нет документов и Статус НЕ = 1.Есть все возвраты | Для обратных продаж Сумма поступлений отличается от Суммы заявки");
	
КонецПроцедуры // ЗаполнитьЦветовуюСхему()

Процедура ЗаполнитьЗначениеОформлениеПоля(Поле, ЭлемФормы, ЦвелЛок, Наименование, ШрифтЛок = Неопределено)
	
	Поле = Наименование;
	ЭлемФормы.ЦветФонаПоля = ЦвелЛок;
	Если НЕ ШрифтЛок = Неопределено Тогда
		ЭлемФормы.Шрифт = ШрифтЛок;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьЗначениеОформлениеПоля()


Процедура ОформитьЦветовуюСхему(ОформленияСтрок, флСогласованоЛок)
	
	Счетчик = 1;
	
	Для Каждого ТекОформление Из ОформленияСтрок Цикл
		
		Если Счетчик = 1 Тогда
			ТекОформление.Ячейки.Наименование.Текст = "Статус = 1.Есть все возвраты";
			ТекОформление.ЦветФона = WebЦвета.НейтральноЗеленый;
		ИначеЕсли Счетчик = 2 Тогда
			ТекОформление.Ячейки.Наименование.Текст = "Статус = 2.Возвраты есть частично";                                 // 2
			ТекОформление.ЦветФона = WebЦвета.ЛососьСветлый;
		ИначеЕсли Счетчик = 3 Тогда
			ТекОформление.Ячейки.Наименование.Текст = "Статус = 3.Возврат больше заявки";                                  // 3
			ТекОформление.ЦветФона = WebЦвета.Сливовый;
		ИначеЕсли Счетчик = 4 Тогда
			ТекОформление.Ячейки.Наименование.Текст = "Кол-во на ответ. хранен. > 0 и прошло меньше недели";               // 4
			ТекОформление.ЦветФона = WindowsЦвета.ЗаголовокНеактивногоОкна;
		ИначеЕсли Счетчик = 5 Тогда
			ТекОформление.Ячейки.Наименование.Текст = "Кол-во на ответ. хранен. > 0 и прошло больше или равно недели";     // 5
			ТекОформление.ЦветФона = Новый Цвет(255, 146, 146);
		ИначеЕсли Счетчик = 6 Тогда
			ТекОформление.Ячейки.Наименование.Текст = "Состояние = В Работе и прошло больше суток";                        // 6
			ТекОформление.ЦветФона = WebЦвета.КрасноФиолетовый;
		ИначеЕсли Счетчик = 7 Тогда
			ТекОформление.Ячейки.Наименование.Текст = "Хотя бы одна позиция согласована";                                  // 7
			ТекОформление.ЦветФона = WebЦвета.БледноМиндальный;
			ТекОформление.Шрифт = новый Шрифт(ТекОформление.Шрифт ,,,Истина);
		ИначеЕсли Счетчик = 8 Тогда
			ТекОформление.Ячейки.Наименование.Текст = "Оформлен";                                                          // 8
			ТекОформление.ЦветФона = WebЦвета.Желтый;
		ИначеЕсли Счетчик = 9 Тогда
			ТекОформление.Ячейки.Наименование.Текст = "Нет документов и Статус НЕ = 1.Есть все возвраты";
			ТекОформление.ЦветФона = WebЦвета.СинеСерый;
		КонецЕсли;
		
		Если флСогласованоЛок Тогда
			ТекОформление.Шрифт = новый Шрифт(ТекОформление.Шрифт ,,,Истина);
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
КонецПроцедуры // ОформитьЦветовуюСхему()

