перем мВалютаДокумента, мПечатнаяФормаПоУмолчанию, МассивРукУтв;

Процедура КоманднаяПанель1Заполнить(Кнопка)
	
	Если Расходы.Количество()>0 тогда 
		Режим = РежимДиалогаВопрос.ДаНет;
		Текст = "ru = ""Список расходов не пустой.
					    |Очистить список перед заполнением?"";"
		     + " en = ""Do you want to continue?""";
		Ответ = Вопрос(НСтр(Текст), Режим, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Расходы.Очистить();
		КонецЕсли;
	КонецЕсли;
	//http://infportal.ru/kadry/sutochnye-v-2015-godu.html
	курс = константы.КурсUSD.Получить();

    Суточные = ?(ВалютаДокумента.Код = "643", 700, окр(2500/курс,2) );  // 2500р. по курсу из константы
	стр1 = расходы.Добавить();	стр1.ВидКомандировочногоРасхода = "Суточные"; стр1.Сумма = ( (ДатаПрибытия - ДатаУбытия)/86400 ) * Суточные;
	стр1 = расходы.Добавить();	стр1.ВидКомандировочногоРасхода = "Проживание";
	стр1 = расходы.Добавить();	стр1.ВидКомандировочногоРасхода = "Проезд";
	стр1 = расходы.Добавить();	стр1.ВидКомандировочногоРасхода = "Представительские расходы";
	стр1 = расходы.Добавить();	стр1.ВидКомандировочногоРасхода = "Прочие расходы";
	
	РасходыПриПолученииДанных(неопределено, неопределено);
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаУбытия, ?(ДатаПрибытия='0001-01-01', ДатаПрибытия, КонецДня(ДатаПрибытия)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаУбытия = НастройкаПериода.ПолучитьДатуНачала();
		ДатаПрибытия = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры


//=================Согласование=======================================
функция СуммыСовпадают(ВыводитьСообщения = истина)
	Если СуммаДокумента = Расходы.Итог("Сумма") тогда
	    отказ1 = Истина;
	иначе
		отказ1 = ложь;
		Если ВыводитьСообщения тогда
			Предупреждение("Сумма на командировку: "+строка(СуммаДокумента)+" "+строка(ВалютаДокумента)+"
							|не соответствует сумме в таблице 'Планируемые расходы': "+строка(Расходы.Итог("Сумма"))+"!
							|Заполните все виды расходов или измените сумму командировки.", 30);
		КонецЕсли;	
	КонецЕсли;
	возврат отказ1;	
КонецФункции

Процедура ОсновныеДействияФормыДействиеПодготовить(Кнопка)
	Если Состояние = Перечисления.СостоянияОбъектов.ПустаяСсылка() тогда
		
		Если СуммыСовпадают() тогда
			
			Если Вопрос("После установки статуса: Подготовлен
				|  Документ нельзя будет изменить!
				|Установить статус Подготовлен?", РежимДиалогаВопрос.ДаНет, 0) = КодВозвратаДиалога.Да Тогда
				
				Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
				
				//сразу после подготовки - можно согласовать
				флСогласовать = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "РазрешитьУтверждатьЗаявки")
				или (Найти(глТекущийПользователь.Код,"Серков")>0)
				или глТекущийПользователь = Подразделение.Руководитель
				//+++ 12.02.2016 - для Ярославля - руководитель направления может согласовать
				или (Подразделение.Код ="00005" 
				и глТекущийПользователь = Ответственный.НаправлениеПродаж.Руководитель);
				
				
				ЭлементыФормы.ДействияФормы.Кнопки.ДействиеСогласовать.доступность = флСогласовать;
				
				Записать();

			//Иначе
				//09.08.2017 Смирнов создадим задачу на согласование
				Если ЗначениеЗаполнено(Ответственный.НаправлениеПродаж) тогда
					Если ЗначениеЗаполнено(Ответственный.НаправлениеПродаж.Согласование) тогда
						Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
						Записать();
						//Если ЗначениеНеЗаполнено(Подразделение) Тогда
						//	Исполнитель = Справочники.Пользователи.НайтиПоКоду("Серков");
						//Иначе
						//	Пользователь = Ответственный; //Справочники.Пользователи.НайтиПоРеквизиту("ФизЛицо",Сотрудник);
						//	Исполнитель =  ?(ЗначениеЗаполнено(Пользователь.НаправлениеПродаж),Пользователь.НаправлениеПродаж.Согласование,Справочники.Пользователи.НайтиПоКоду("Серков"));
						//КонецЕсли;
						//
						//Если Исполнитель = Неопределено или Исполнитель = Справочники.Пользователи.ПустаяСсылка() Тогда
						//	Исполнитель = Справочники.Пользователи.НайтиПоКоду("Серков");
						//КонецЕсли;
						
						Исполнитель =  Ответственный.НаправлениеПродаж.Согласование;
						
						
						Задача.Исполнитель = Исполнитель;
						//+Лукьяненков 20.09.2017
						Если Задача.Исполнитель = Справочники.Пользователи.НайтиПоКоду("Серков") Тогда
							Задача.Оповещение     = Ложь;
						КонецЕсли;
						//-Лукьяненков 20.09.2017
						задача.НаСогласование = Истина;
						задача.Наименование = "Согласовать заявку на коммандировку "; 
						задача.Описание = "Согласовать заявку на коммандировку для сотрудника "+строка(Сотрудник)+ 
						" в " + МестоКомандировки +" на сумму "+ СуммаДокумента+" "+ВалютаДокумента;
						
						задача.Инициатор   = глТекущийПользователь;
						задача.Объект   	 = ссылка;
						задача.Дата 		    = ТекущаяДата();
						задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
						задача.Оповещение     = истина;
						задача.СрокОповещения = ТекущаяДата(); 
						задача.РеквизитДляСогласования = "Ссылка";
						задача.ЗначениеРеквизитаДляСогласования = "Согласование руководителя";
						
						Попытка
							задача.Записать();
							Сообщить(" + Сформирована ""Задача на согласование"" для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Информация );	
						исключение
							Сообщить(" - Не удалось сформировать электронную Задачу на согласование для сотрудника: "+строка(задача.Исполнитель), СтатусСообщения.Внимание );	
						КонецПопытки;
					КонецЕсли;
				КонецЕсли;
		
								
			КонецЕсли;
			
			
		КонецЕсли;
	иначе
		если Состояние = Перечисления.СостоянияОбъектов.Подготовлен тогда
			Предупреждение("Статус документа уже '"+строка(Состояние)+"'", 30);
		иначе	
			Предупреждение("Статус документа уже '"+строка(Состояние)+"'!
			|Нельзя изменить статус на 'Подготовлен'!", 30);
		КонецЕсли;				
	КонецЕсли;					
	
КонецПроцедуры

Процедура ДействияФормыДействиеУтвердить(Кнопка)
	Если СуммыСовпадают() тогда
		Если Состояние = Перечисления.СостоянияОбъектов.Согласован тогда
			Состояние = Перечисления.СостоянияОбъектов.Утвержден;
			Утвердил = глТекущийПользователь; //12.02.2016 - видно кто утвердил реально!
			ЭлементыФормы.КнопкаЗУП.доступность = Истина;//Сразу после утверждения
			ЭтотОбъект.Записать();
			
			Если Подразделение.ОбособленноеПодразделение тогда //18.03.2016
				ДействияФормыСоздатьЗаявку(неопределено);
			иначе
				Предупреждение("Заявка утверждена, Можно выгружать документ в ЗУП.", 10);
			КонецЕсли;
			
		Иначе
			Предупреждение("Перед утверждением, документ должен быть предварительно Согласован!", 10);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыДействиеСогласовать(Кнопка)
	Если СуммыСовпадают() тогда
		Если Состояние = Перечисления.СостоянияОбъектов.Утвержден
			или Состояние = Перечисления.СостоянияОбъектов.Отклонен тогда
			Предупреждение("Документ уже Утвержден или Отклонен!
			|Уже не нужно согласовывать данный документ...", 10);	
		Иначе
			Состояние = Перечисления.СостоянияОбъектов.Согласован;
			Согласовал = глТекущийПользователь; //12.02.2016 - видно кто согласовал реально!
	//		ЭтотОбъект.Записать();
	
			//сразу после согласования - становится доступной следующая кнопка
			флУтверждения = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "РазрешитьУтверждатьЗаявки");
			для i=0 по МассивРукУтв.Количество()-1 цикл
					флУтверждения = флУтверждения  или (Найти(глТекущийПользователь.Код,МассивРукУтв[i])>0); //+++12.02.2016  - Серков ИЛИ 
			КонецЦикла;		
			ЭлементыФормы.ДействияФормы.Кнопки.ДействиеУтвердить.доступность = флУтверждения;
			
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыДействиеОтклонить(Кнопка)
	
	Если Состояние = Перечисления.СостоянияОбъектов.Подготовлен тогда
		Согласовал = глТекущийПользователь; // оклонил согласователь
	ИначеЕсли Состояние = Перечисления.СостоянияОбъектов.Согласован тогда
	    Утвердил = глТекущийПользователь; //утвердитель
	ИначеЕсли Состояние = Перечисления.СостоянияОбъектов.Утвержден тогда // последний кто менял!
		если Утвердил<>глТекущийПользователь тогда
		Ответственный  = глТекущийПользователь;
		КонецЕсли;
	КонецЕсли;	
	
	фл = СуммыСовпадают(); // отклонять можно и при несоответствии сумм!
	Состояние = Перечисления.СостоянияОбъектов.Отклонен;
			
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() тогда
		мВалютаРегламентированногоУчета = константы.ВалютаРегламентированногоУчета.Получить();
		ЗаполнитьШапкуДокумента(ЭтотОбъект, глТекущийПользователь, мВалютаРегламентированногоУчета, "Продажа");
		
		Организация = справочники.Организации.НайтиПоКоду("00001"); // Яршинторг ВСЕГДА!
		
		Ответственный = глТекущийПользователь;
		Сотрудник     = глТекущийПользователь.ФизЛицо; // в 90% - на себя 
		УстановитьНомерДокумента(ЭтотОбъект);
		
	//	КоманднаяПанель1Заполнить(неопределено);
		ДатаКомандировки = Дата;//Плотников 01.07.2016
	иначе // раскраска суммы
		РасходыПриПолученииДанных(неопределено, неопределено);
	КонецЕсли;	
	мВалютаДокумента = ВалютаДокумента; // для отслеживания изменений!

	// Заполнить подменю выбора печатных форм.
	СписокМакетов = ЭтотОбъект.ПолучитьСписокПечатныхФорм();
	УстановитьПодменюВыбораПечатнойФормы(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПодменюПечати,
	                                       СписокМакетов,
	                                       Новый Действие("КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы"));
	// Установить печатную форму по умолчанию.
	УстановитьКнопкуПечати(ЭтотОбъект.Метаданные().Имя, ЭтаФорма, СписокМакетов, мПечатнаяФормаПоУмолчанию);

	
//================Ограничения доступа===========================================	

	//сразу после согласования - становится доступной следующая кнопка
	// + Сакулина. Добавляем возможность утверждать по филиалам Марешевой
	флУтверждения = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "РазрешитьУтверждатьЗаявки");
	для i=0 по МассивРукУтв.Количество()-1 цикл
			флУтверждения = флУтверждения  или (Найти(глТекущийПользователь.Код, МассивРукУтв[i])>0); //12.02.2016
	КонецЦикла;		

	флСогласовать = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "РазрешитьУтверждатьЗаявки")
					или (Найти(глТекущийПользователь.Код,"Серков")>0)
					//--Смирнов А.А. руководителю нельзя, только через задачи
					//или глТекущийПользователь = Подразделение.Руководитель
					//+++ 14.03.2016 - по НЕ филиалам - согласовывать может Аверкина!
					или (не Подразделение.ОбособленноеПодразделение и флУтверждения) 
					//+++ 12.02.2016 - для Ярославля - любой руководитель направления может согласовать
					или (не Подразделение.ОбособленноеПодразделение 
					     и глТекущийПользователь = Ответственный.НаправлениеПродаж.Руководитель);
					
	ЭлементыФормы.ДействияФормы.Кнопки.ДействиеОтклонить.доступность = флУтверждения или флСогласовать; // только Согласователь или Утвердитель!
	//полько после подготовки
	ЭлементыФормы.ДействияФормы.Кнопки.ДействиеСогласовать.доступность = (Состояние=перечисления.СостоянияОбъектов.Подготовлен) и флСогласовать;
	//только после согласования - становится доступной
	ЭлементыФормы.ДействияФормы.Кнопки.ДействиеУтвердить.доступность = (Состояние=перечисления.СостоянияОбъектов.Согласован) и флУтверждения;
	
	ЭлементыФормы.КнопкаЗУП.доступность = (Состояние=перечисления.СостоянияОбъектов.Утвержден) и флУтверждения;//ТОЛЬКО ПОСЛЕ УТВЕРЖДЕНИЯ
	ЭлементыФормы.КнопкаЗУП.Видимость = (Найти(глТекущийПользователь.Код,"Аверкина")>0);
	
	//Бухгалтер(Кассир) или Согласователь или Утвердитель - может изменить заявку!
	ЭтаФорма.ТолькоПросмотр = ЗначениеЗаполнено(Состояние) И не (флУтверждения или флСогласовать или РольДоступна("Кассир"));
	
	//--------любые изменения состояния!---------------------------------------
	Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "УправлениеСостояниемДокументов") Тогда
		ЭлементыФормы.Состояние.Доступность = Истина;	
		ЭтаФорма.ТолькоПросмотр = ЛОЖЬ;
	КонецЕсли;
	
КонецПроцедуры

Процедура РасходыПриПолученииДанных(Элемент, ОформленияСтрок)
	//СуммаДокумента = Расходы.Итог("Сумма");
	
		Если СуммаДокумента > Расходы.Итог("Сумма") тогда // еще не все внесли
			ЭлементыФормы.СуммаДокумента.ЦветТекстаПоля= webЦвета.Красный;		
		иначеЕсли СуммаДокумента < Расходы.Итог("Сумма") тогда
			ЭлементыФормы.СуммаДокумента.ЦветТекстаПоля= webЦвета.Синий;		
		иначеЕсли СуммаДокумента = Расходы.Итог("Сумма") тогда
			ЭлементыФормы.СуммаДокумента.ЦветТекстаПоля = webЦвета.Черный;		
		КонецЕсли;

КонецПроцедуры

Процедура СуммаДокументаПриИзменении(Элемент)
	
	Если Расходы.Количество()=0 тогда
		Предупреждение("Заполнените таблицу 'Планируемые расходы'.",10);
	иначе
		фл = СуммыСовпадают();
		РасходыПриПолученииДанных(неопределено, неопределено);
		
	КонецЕсли;
				
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Для каждого стр из Расходы Цикл
		Если не ЗначениеЗаполнено(стр.ВидКомандировочногоРасхода) тогда
			Сообщить("В строке №"+стр.НомерСтроки+" не заполнен вид расхода!");
			отказ=истина;
		конецЕсли;
	конецЦикла;
	//Если не ЗначениеЗаполнено(Запланировал)тогда
	//	Сообщить("Укажите ответсвенного за планирование");
	//КонецЕсли;	
	
	Если СуммаДокумента <> Расходы.Итог("Сумма") тогда
		если Состояние = Перечисления.СостоянияОбъектов.Подготовлен тогда
			 Отказ = не СуммыСовпадают(); // не даём записать заявку, после установки состояния в форме!
		иначе	
		 	Если Вопрос("Запрашиваемая сумма на командировку: "+строка(СуммаДокумента)+" "+строка(ВалютаДокумента)+"
			|не соответствует сумме в таблице 'Планируемые расходы': "+строка(Расходы.Итог("Сумма"))+"
			|Исправить Запрашиваемая сумма?",РежимДиалогаВопрос.ДаНет,30) = КодВозвратаДиалога.Да Тогда
			    СуммаДокумента = Расходы.Итог("Сумма"); 
			КонецЕсли;
		КонецЕсли;	
 КонецЕсли;	
	
КонецПроцедуры


Процедура Кнопка1Нажатие(Элемент)
	СуммаДокумента = Расходы.Итог("Сумма");
	РасходыПриПолученииДанных(неопределено, неопределено);
КонецПроцедуры


Процедура Панель1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ЭлементыФормы.Расходы.Колонки.Сумма.ТекстШапки = "Сумма, "+строка(ВалютаДокумента);
КонецПроцедуры


Процедура ВалютаДокументаПриИзменении(Элемент)
	
	если ВалютаДокумента <> мВалютаДокумента тогда
		мВалютаДокумента = ВалютаДокумента;
		Если Расходы.Количество()>0 тогда
			Если Вопрос("Пересчитать все суммы по курсу?",РежимДиалогаВопрос.ДаНет,30) = КодВозвратаДиалога.Да Тогда
				
				курс = константы.КурсUSD.Получить();
				ввестиЧисло(курс, "Введите курс валюты");
					копейки=2;
				если ВалютаДокумента.Код = "643" тогда // наоборот в рубли!
					курс = 1/курс;  копейки=0;//округление до рублей
				КонецЕсли;	
				
				для каждого стр1 из Расходы цикл
					стр1.Сумма = Окр( стр1.Сумма / курс, копейки);
				КонецЦикла;	
				
				СуммаДокумента = Окр( СуммаДокумента / курс, копейки);
				если СуммаДокумента-Расходы.Итог("Сумма")>-10 и СуммаДокумента-Расходы.Итог("Сумма")<10 тогда
					СуммаДокумента=Расходы.Итог("Сумма");
				КонецЕсли;
			
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры


Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ПроверяемыеРеквизиты.Количество()>0 тогда
		Для каждого реквизит1 из ПроверяемыеРеквизиты цикл
			если ЗначениеНеЗаполнено(реквизит1.Значение) тогда
			сообщить("Не заполнено обязательное поле '"+строка(реквизит1.Имя)+"'", СтатусСообщения.Внимание);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры


Процедура ОсновныеДействияФормыДействиеПечать(Кнопка)
		НапечататьДокументПоУмолчанию(ЭтотОбъект, глТекущийПользователь, мПечатнаяФормаПоУмолчанию, ЭтаФорма);
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Печать" командной панели
// формы. Процедура отрабатывает выбор печатной формы.
//
Процедура КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы(Кнопка)

	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ДействиеПечать.Текст = Кнопка.Текст;
		СтруктураМакета = Новый Структура("Макет, ПредставлениеМакета");
		СписокМакетов = ПолучитьСписокПечатныхФорм();
		СтрокаМакетаВСписке = СписокМакетов.НайтиПоЗначению(Кнопка.Имя);
		Если СтрокаМакетаВСписке <> Неопределено Тогда
			Печать(СтрокаМакетаВСписке.Значение);
			СтруктураМакета.Макет = СтрокаМакетаВСписке.Значение;
			СтруктураМакета.ПредставлениеМакета = СтрокаМакетаВСписке.Представление;			
			
		Иначе
			СсылкаВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрЗаменить(Кнопка.Имя, "_", "-")));
			Печать(СсылкаВнешнейФормы,,,ЭтаФорма);
			СтруктураМакета.Макет = СсылкаВнешнейФормы;
			СтруктураМакета.ПредставлениеМакета = Кнопка.Текст;
		КонецЕсли;		
		
		мПечатнаяФормаПоУмолчанию = СтруктураМакета.Макет;
		СохранитьТекущуюКнопкуПечати(ЭтотОбъект.Метаданные().Имя, СтруктураМакета);
	КонецЕсли;

КонецПроцедуры // КоманднаяПанельФормыДействиеВыбратьПечатнуюФормы()

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	
	//24.02.2016 
	СтрокаСоединенияCOM = "Srvr=""Server:3041"";Ref=""v83ib_otdelk_zup"";Usr=""Лунева"";Pwd=""keytdf515""";
	//	СтрокаСоединенияCOM = "File=""D:\1с_моё\Базы разные\ЗУП_ЯШТ_копия"";Usr=""Лунева"";Pwd=""keytdf515""";
	Соединение = ПодключитьСоединение( СтрокаСоединенияCOM );
	Если Соединение = неопределено тогда
		Предупреждение("Не удалось установить соединение с базой ЗУП", 10);
		сообщить("Не удалось установить соединение с базой ЗУП!", СтатусСообщения.Внимание);
		возврат;
	иначе
		сообщить("Установлено соединение с базой ЗУП...", СтатусСообщения.Информация);
	КонецЕсли;	
	
	Если НомерКомандировки<>"" тогда
		
		докСсылка = соединение.Документы.КомандировкиОрганизаций.НайтиПоНомеру(НомерКомандировки, ДатаКомандировки);
		
		Если докСсылка=неопределено тогда 
			Предупреждение("Не найдена командировка № "+НомерКомандировки+" от "+строка(ДатаКомандировки), 10);
			сообщить("Не найдена командировка № "+НомерКомандировки+" от "+строка(ДатаКомандировки), СтатусСообщения.Внимание);
			возврат;
		Иначе
			
			Если Вопрос("Найден существующий документ командировки № "+НомерКомандировки+" от "+строка(ДатаКомандировки)+"
					    |Перезаписать существующий документ в базе ЗУП?", РежимДиалогаВопрос.ДаНет, 0) <> КодВозвратаДиалога.Да тогда  
				возврат;
			КонецЕсли;
			
			//сообщить("Найден существующий документ командировки № "+НомерКомандировки+" от "+строка(ДатаКомандировки), СтатусСообщения.Информация);
			док = докСсылка.ПолучитьОбъект(); //старый
		КонецЕсли;
		
	Иначе//========Новый документ=========
		док = соединение.Документы.КомандировкиОрганизаций.СоздатьДокумент();
		док.Дата        = ТекущаяДата();
		док.Организация = соединение.Справочники.Организации.найтиПоКоду("00015");
	КонецЕсли;
	
	//док.ОрганизацияНазначения = МестоКомандировки;
	док.СтранаНазначения = МестоКомандировки;
	
	Если состояние = Перечисления.СостоянияОбъектов.Отклонен тогда
		док.ПометкаУдаления = Истина;
		//Если Утвердил.Пустая() тогда
		//	док.Комментарий = "Командировка сотруднику: "+строка(Сотрудник)+" Отклонил: "+строка(Согласовал)+"
		//	|"+ЭтотОбъект.Комментарий;
		//иначе
		//	док.Комментарий = "Командировка сотруднику: "+строка(Сотрудник)+" Согласовал: "+строка(Согласовал)+" Отклонил: "+строка(Утвердил)+"
		//	|"+ЭтотОбъект.Комментарий;
		//КонецЕсли;
	иначе
		док.ПометкаУдаления = ЛОЖЬ;
		//	док.Комментарий = "Командировка сотруднику: "+строка(Сотрудник)+" Согласовал: "+строка(Согласовал)+" Утвердил: "+строка(Утвердил);
	КонецЕсли;
	
	//----------  ТЧ -------------------
	док.РаботникиОрганизации.Очистить();
	стр1 = док.РаботникиОрганизации.Добавить();
	стр1.Цель =  Описание;
	стр1.ИсточникФинансирования = "ЗАО ТК ""Яршинторг""";
	стр1.ФизЛицо   = соединение.Справочники.ФизическиеЛица.найтиПоКоду(Сотрудник.Код);
	Если стр1.ФизЛицо.Пустая() тогда
		Сообщить("Не найдено физ.Лицо по коду: "+Сотрудник.Код);
		стр1.ФизЛицо   = соединение.Справочники.ФизическиеЛица.найтиПоНаименованию(Сотрудник.Наименование);
	КонецЕсли;	
	стр1.Сотрудник = соединение.Справочники.СотрудникиОрганизаций.найтиПоРеквизиту("Физлицо", стр1.ФизЛицо);
	стр1.ДатаНачала    = ДатаУбытия;
	стр1.ДатаОкончания = ДатаПрибытия;
	
	попытка
		док.Записать();
		
		док.ОснованиеКомандировки = "Служебное задание № "+строка(док.Номер)+" от "+формат(док.Дата,"ДФ=dd.MM.yyyy"); 
		док.Записать();// еще раз записать
		
		НомерКомандировки= док.Номер;
		ДатаКомандировки = док.дата; 
		сообщить("Успешно создан документ ""Командировка организаций"" в базе 1С ЗУП.", СтатусСообщения.Информация);
	исключение
		сообщить("Не удалось записать документ ""Командировка организаций"" в ЗУП!", СтатусСообщения.Внимание);
	КонецПопытки;
	
	ЭтотОбъект.Записать();
	
	Соединение = неопределено; // отключаемся
	
	Если Вопрос("Создать документ ""Заявка на расход денежных средств""
		|для сотрудника: "+строка(Сотрудник)+"
		|для выплаты наличных в размере "+строка(СуммаДокумента)+" "+строка(ВалютаДокумента)+"?", РежимДиалогаВопрос.ДаНет, 0)=КодВозвратаДиалога.Да тогда 	
		СоздатьЗаявкуНаРасходДС(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры


//02.02.2014 - база ЯШТ переведена на V82 !!!
// возвращает число: +1 все хорошо, -1 нет соединения, 0 - как было так и осталось...
//
Функция ПодключитьСоединение(СтрокаСоединенияCOM, v8="V83") Экспорт
	
	Попытка
			v8connect = Новый COMОбъект(v8+".ComConnector");
			Соединение = v8connect.Connect(СтрокаСоединенияCOM);
	Исключение
		Соединение = неопределено; //"Ошибка соединения с базой: " + ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

Процедура ПослеЗаписи()
	
	Если Состояние=Перечисления.СостоянияОбъектов.Согласован тогда
		
		  задача = задачи.ЗадачиПользователя.СоздатьЗадачу();
		  
		  задача.Инициатор   = Согласовал;
		  задача.Исполнитель = ?( (Подразделение.Код ="00005")  //04.03.2016
		                           или (Найти(нрег(МестоКомандировки), "ярославль")>0 ), справочники.Пользователи.НайтиПоКоду("Аверкина"),
		  				справочники.Пользователи.НайтиПоКоду("Марешева И.Г.") );   // Сакулина. Меняем оповещение с Серкова на Марешеву
						
			задача.Наименование = "Утвердите Согласованную Заявку на командировку для "+строка(Сотрудник); 
		 	задача.Описание = задача.Наименование+"
			|c "+формат(ДатаУбытия,"ДЛФ=DD")+" по "+формат(ДатаПрибытия,"ДЛФ=DD")+"
			|Место: "+МестоКомандировки+"
			|Цель: "+Описание+"
			|Сумма по заявке: "+строка(СуммаДокумента)+" "+строка(ВалютаДокумента);
			задача.Объект = Ссылка;
			
		 задача.Дата 		    = ТекущаяДата();
		 задача.СрокИсполнения = КонецДня( ТекущаяДата() ); // до конца текущих суток с момента установки
		 
		 задача.Оповещение     = истина;
		 задача.СрокОповещения = ТекущаяДата(); //сразу (появится не позднее чем через 5 мин
						 
	 	попытка
			задача.Записать();
			сообщить("Создана задача (уведомление) для "+строка( задача.Исполнитель ), СтатусСообщения.Информация);
		исключение
			сообщить("Не удалось создать уведомление для утверждения! Позвоните сотруднику: "+строка( задача.Исполнитель ) , СтатусСообщения.Внимание);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры


//==================Создание заявки (автоматически)=================
процедура СоздатьЗаявкуНаРасходДС(Основание)

	Если Основание.Состояние <> Перечисления.СостоянияОбъектов.Утвержден тогда
		Предупреждение("Нельзя создавать Заявку на расход ДО Утверждения!", 10);
		Возврат;
	КонецЕсли;	
	
	//Если Основание.Подразделение.Код<>"00005" тогда
	//	Предупреждение("Создавать Заявку на расход ДС автоматически можно только по Головному подразделению!", 10);
	//	Возврат;
	//КонецЕсли;	
	
ДокСсылка = найтиЗаявкуДС(Основание.Ссылка);
Если ДокСсылка = неопределено тогда
	ДокЗаявки = документы.ЗаявкаНаРасходованиеСредств.СоздатьДокумент();
иначе
	Предупреждение("Уже есть "+строка(ДокСсылка), 10);
	Возврат;
КонецЕсли;	

	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнитьШапкуДокументаПоОснованию(ДокЗаявки, Основание);

	ДокЗаявки.ВалютаДокумента  = ВалютаДокумента;
	СтрокаПлатеж=ДокЗаявки.РасшифровкаПлатежа.Добавить();

	 //+++ 30.03.2016
	 СтрокаПлатеж.ДатаРасхода = ДатаКомандировки;
	 ДокЗаявки.ДатаРасхода    = ДатаКомандировки; 
	
	//	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаявкаНаКомандировку")  тогда
			
			ДокЗаявки.Получатель                   = Основание.Сотрудник;
			
			ДокЗаявки.НазначениеПлатежа = "Командировочные на поездку в "+Основание.МестоКомандировки;
			
			если Основание.Состояние = перечисления.СостоянияОбъектов.Утвержден тогда
				ДокЗаявки.ВключатьВПлатежныйКалендарь = истина;
			иначе	
				ДокЗаявки.ПричинаОтклонения = "Заявка на командировку еще НЕ УТВЕРЖЕНА!";
			КонецЕсли;
			ЗаполнитьЗначенияСвойств( ДокЗаявки, Основание );
			ДокЗаявки.Ответственный	= глТекущийПользователь;
			ДокЗаявки.Комментарий = "На основании Заявки на командировку "+Основание.Номер+" от "+формат(Основание.Дата,"ДЛФ=DD");
			
			СтрокаПлатеж.СуммаПлатежа 	     = Основание.СуммаДокумента;
			СтрокаПлатеж.СуммаВзаиморасчетов = Основание.СуммаДокумента;
			
			СтрокаПлатеж.Сделка = Основание;// для структуры подчиненности
			
			ДокЗаявки.ДатаПогашенияАванса = макс( Основание.ДатаКомандировки, Основание.Дата); // до начала Командировки - надо выдать деньги
			ДокЗаявки.ПериодПланирования  = НачалоМесяца(ДокЗаявки.ДатаПогашенияАванса);
			ДокЗаявки.ОжидаемыйСрокПоставки = ДокЗаявки.ДатаПогашенияАванса;
     //КонецЕсли;
	ДокЗаявки.ВидОперации = Перечисления.ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствПодотчетнику;
	ДокЗаявки.ФормаОплаты = Перечисления.ВидыДенежныхСредств.Наличные;
		
		ДокЗаявки.РасчетныйДокумент                = Основание;
		ДокЗаявки.ВалютаВзаиморасчетовПодотчетника = Основание.ВалютаДокумента;
		
		СтруктураКурсаВзаиморасчетов     = ПолучитьКурсВалюты(ДокЗаявки.ВалютаВзаиморасчетовПодотчетника, ТекущаяДата());
		СтрокаПлатеж.КурсВзаиморасчетов               = СтруктураКурсаВзаиморасчетов.Курс;
		СтрокаПлатеж.КратностьВзаиморасчетов          = СтруктураКурсаВзаиморасчетов.Кратность;
		
//++++++++++++++ добавки +++++++++++++++++++++++++++++		
		СтрокаПлатеж.СтатьяДвиженияДенежныхСредств = справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствПодотчетнику;
	    СтрокаПлатеж.Сделка = Основание.Ссылка; //СВЯЗЬ с ЭтимДокументом!
		ДокЗаявки.Состояние = Основание.Состояние; 
 		ДокЗаявки.УстановитьНовыйНомер(Основание.Подразделение.ПрефиксИБ);

		если СтрокаПлатеж.КурсВзаиморасчетов>0 тогда //+++ 23.11.2015
			 СтрокаПлатеж.СуммаПлатежа = СтрокаПлатеж.СуммаВзаиморасчетов * СтрокаПлатеж.КурсВзаиморасчетов;
			 ДокЗаявки.СуммаДокумента = ДокЗаявки.СуммаДокумента * СтрокаПлатеж.КурсВзаиморасчетов;
        КонецЕсли;
//для планирования
        СтрокаПлатеж.СтатьяРасхода = Справочники.СтатьиРасходов.НайтиПоКоду("000000037");
		строкаПлатеж.ОтветственныйЗаПланирование = глТекущийпользователь;
		
		
		
//--------------------------------------КАССА---------------------------			
		Если Подразделение.Код = "00005" тогда
			ДокЗаявки.БанковскийСчетКасса =справочники.Кассы.НайтиПоКоду("00004"); //всегда 1
		иначе
			если Подразделение.Код = "00106" тогда
				ДокЗаявки.БанковскийСчетКасса =справочники.Кассы.НайтиПоКоду("00013"); //Касса Ростов-на-Дону №2
			иначеесли Подразделение.Код = "00112" тогда
				ДокЗаявки.БанковскийСчетКасса =справочники.Кассы.НайтиПоКоду("00011"); //Ячейка СПб
			иначеесли Подразделение.Код = "00138" тогда
				ДокЗаявки.БанковскийСчетКасса =справочники.Кассы.НайтиПоКоду("00012"); //Касса-Ячейка Екат
			иначеесли Подразделение.Код = "00133" тогда
				ДокЗаявки.БанковскийСчетКасса =справочники.Кассы.НайтиПоКоду("00010"); //Касса Москва
		 	иначе	
				ДокЗаявки.БанковскийСчетКасса = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяКасса");
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДокЗаявки.БанковскийСчетКасса) Тогда
			ДокЗаявки.ВалютаДокумента=ДокЗаявки.БанковскийСчетКасса.ВалютаДенежныхСредств;
			если ДокЗаявки.ВалютаДокумента<>справочники.Валюты.НайтиПоКоду("643") тогда
 				СтруктураКурсаДокумента      = ПолучитьКурсВалюты(ДокЗаявки.ВалютаДокумента, ДокЗаявки.Дата);
				ДокЗаявки.КурсДокумента      = СтруктураКурсаДокумента.Курс;
				ДокЗаявки.КратностьДокумента = СтруктураКурсаДокумента.Кратность;
			КонецЕсли;	
		Иначе
			ДокЗаявки.ВалютаДокумента=справочники.Валюты.НайтиПоКоду("643");
		КонецЕсли;
		
//----------------------------------------------------------------------		
докСоздан = ложь;
   Попытка
	   ДокЗаявки.Записать();
	   докСоздан = истина;
   Исключение
	   Сообщить("Не удалось сформировать Заявку на расходование денежных средств! "+ОписаниеОшибки(), СтатусСообщения.Внимание);
   КонецПопытки;
	   
	   
  попытка	   
	   ДокЗаявки.Записать( РежимЗаписиДокумента.Проведение );
	   Сообщить("Записана и проведена ""Заявка на расходование денежных средств"" "+строка(ДокЗаявки.Номер)+" от "+формат(ДокЗаявки.Дата,"ДЛФ=DD"), СтатусСообщения.Информация);
   Исключение
	   Форма = ДокЗаявки.ПолучитьФорму();
	   Форма.Открыть();
	   Сообщить("Не удалось провести Заявку на расходование денежных средств! "+ОписаниеОшибки(), СтатусСообщения.Внимание);
   КонецПопытки;

КонецПроцедуры

Функция найтиЗаявкуДС(Заявка)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ 
				   |	ЗаявкаНаРасходованиеСредствРасшифровкаПлатежа.Ссылка
	               |ИЗ
	               |	Документ.ЗаявкаНаРасходованиеСредств.РасшифровкаПлатежа КАК ЗаявкаНаРасходованиеСредствРасшифровкаПлатежа
	               |ГДЕ
	               |	(ВЫРАЗИТЬ(ЗаявкаНаРасходованиеСредствРасшифровкаПлатежа.Сделка КАК Документ.ЗаявкаНаКомандировку)) = &Сделка
				   |	И ЗаявкаНаРасходованиеСредствРасшифровкаПлатежа.Сделка.Дата >= &Дата
	               |	И НЕ ЗаявкаНаРасходованиеСредствРасшифровкаПлатежа.Ссылка.ПометкаУдаления";

	Запрос.УстановитьПараметр("Дата", НачалоДня(Заявка.Дата) ); // не раньше чем Заявка на командировку!
	Запрос.УстановитьПараметр("Сделка", Заявка);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	если  Выборка.Следующий() тогда
	  рез = выборка.Ссылка;
	иначе
	  рез = Неопределено;
	КонецЕсли;
	  
	возврат рез;
	
КонецФункции

Процедура ДействияФормыСоздатьЗаявку(Кнопка)
	
	Если Вопрос("Создать Заявку на расход денежных средств в размере "+строка(СуммаДокумента)+" "+строка(ВалютаДокумента)+" ?", РежимДиалогаВопрос.ДаНет, 0)=КодВозвратаДиалога.Да тогда 	
		СоздатьЗаявкуНаРасходДС(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры
			
			
			
 МассивРукУтв = новый Массив;
  МассивРукУтв.Добавить("Серков");
  МассивРукУтв.Добавить("Аверкина");//12.02.2016
 