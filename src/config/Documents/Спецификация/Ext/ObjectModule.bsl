
Функция ПечатьДокумента()
	
	//ТабДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", Ссылка.ДокументОснование.Дата);
	Запрос.УстановитьПараметр("ВидОтветственногоЛица", Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
	//Запрос.УстановитьПараметр("РольКонтактногоЛица1", Справочники.РолиКонтактныхЛиц.ГенеральныйДиректор);
	Запрос.УстановитьПараметр("РольКонтактногоЛица2", Справочники.РолиКонтактныхЛиц.Директор);
	//Запрос.УстановитьПараметр("РольКонтактногоЛица3", Справочники.РолиКонтактныхЛиц.Руководитель);
	Запрос.УстановитьПараметр("ПустаяРольКонтактногоЛица", Справочники.РолиКонтактныхЛиц.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяДолжность", Справочники.ДолжностиОрганизаций.ПустаяСсылка());
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.ДатаДоговора,
	|	Документ.НомерДоговора,
	|	Документ.СпособОтгрузки,
	|	Документ.НомерДляПечати КАК НомерСпецификации,
	|	Документ.Пени,
	|	Документ.ДокументОснование.Дата КАК Дата,
	|	Документ.Номер КАК Номер,
	|	Документ.Организация КАК Компания,
	|	Документ.Контрагент.НаименованиеПолное КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Документ.ДокументОснование.Сделка ССЫЛКА Документ.ЗаказПокупателя
	|			ТОГДА Документ.ДокументОснование.Сделка.ДатаОплаты
	|		ИНАЧЕ Документ.ДокументОснование.Дата
	|	КОНЕЦ КАК ДатаОплаты,
	|   ВЫБОР КОГДА ОтветственныеЛицаОрганизацииСрезПоследних.Должность <> &ПустаяДолжность ТОГДА
	|		ОтветственныеЛицаОрганизацииСрезПоследних.Должность
	|   ИНАЧЕ ВЫБОР КОГДА ЕСТЬNULL(ОтветственныеЛицаОрганизацииСрезПоследних.ОтветственноеЛицо, """") = """" ТОГДА
	|		    	""Руководитель""
	|		  ИНАЧЕ
	|				ОтветственныеЛицаОрганизацииСрезПоследних.ОтветственноеЛицо
	|		  КОНЕЦ
	|	КОНЕЦ КАК РольРуководителяКомпании,
	|	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо КАК РуководительКомпании,
	|	ЕСТЬNULL(КонтактныеЛица.Роль,"""") КАК РольРуководителяКонтрагента,
	|	ВЫБОР
	|		КОГДА КонтактныеЛица.Ссылка ССЫЛКА Справочник.КонтактныеЛица
	|			  И (КонтактныеЛица.Роль = &РольКонтактногоЛица1
	|				 ИЛИ КонтактныеЛица.Роль = &РольКонтактногоЛица2
	|				 ИЛИ КонтактныеЛица.Роль = &РольКонтактногоЛица3)
	|			  И КонтактныеЛица.Роль <> &ПустаяРольКонтактногоЛица
	|			ТОГДА КонтактныеЛица.Представление
	|		ИНАЧЕ ""/_______________/""
	|	КОНЕЦ КАК РуководительКонтрагента
	|ИЗ
	|	Документ.Спецификация КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &ВидОтветственногоЛица) КАК ОтветственныеЛицаОрганизацииСрезПоследних
	|		ПО Документ.Организация = ОтветственныеЛицаОрганизацииСрезПоследних.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛица КАК КонтактныеЛица
	|		ПО Документ.Контрагент = КонтактныеЛица.ОбъектВладелец
	|			И (КонтактныеЛица.Роль = &РольКонтактногоЛица1
	|			   ИЛИ КонтактныеЛица.Роль = &РольКонтактногоЛица2
	|			   ИЛИ КонтактныеЛица.Роль = &РольКонтактногоЛица3)
	|ГДЕ
	|	Документ.Ссылка = &ТекущийДокумент";
		
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	
	ТабДокумент  = Новый ТабличныйДокумент;
	
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_ТОРГ12";

	Макет = ПолучитьМакет("Спецификация");	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументОснование.Ссылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номенклатура,
	|   ЕдиницаИзмерения,
	|   СУММА(Количество) КАК Количество,
	|   Цена,
	|   СУММА(Сумма) КАК Сумма
	|ИЗ
	|   Документ.РеализацияТоваровУслуг.Товары КАК Документ
	|ГДЕ
	|   Документ.Ссылка = &ТекущийДокумент
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|   ЕдиницаИзмерения,
	|   Цена
	|УПОРЯДОЧИТЬ ПО
	|	ПОДСТРОКА(Номенклатура.НаименованиеПолное,1,50) ВОЗР
	|ИТОГИ
	|	СУММА(Количество) КАК Количество, 
	|	СУММА(Сумма) КАК Сумма 
	|ПО 
	|	Общие
	|";
	
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьШапка.Параметры.Заполнить(Шапка);
	ОбластьШапка.Параметры.ШапкаДата  	 = Формат(Шапка.Дата, "ДФ=""дд ММММ гггг 'г.'""");
	ОбластьШапка.Параметры.ДатаДоговора  = Формат(Шапка.ДатаДоговора, "ДФ=""дд ММММ гггг 'г.'""");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.Заполнить(Шапка);
	ОбластьПодвал.Параметры.Пени = ?(Пени = 0, ", согласно Договору, ", " в размере " + Строка(Пени) + "% в день");
	РукПр = ?(ЗначениеНеЗаполнено(Шапка.РуководительКомпании), "", СокрЛП(Шапка.РуководительКомпании.Наименование));
	Массив = Новый Массив;
	Инд = 0;
	Массив.Добавить();
	Массив[Инд] = "";
	Для Сч = 1 По СтрДлина(РукПр) Цикл
	
		Если Сред(РукПр, Сч, 1) = " " Тогда
		
			Инд = Инд + 1;
			Массив.Добавить();
			Массив[Инд] = "";
			
		Иначе
			
			Массив[Инд] = Массив[Инд] + Сред(РукПр, Сч, 1);
		
		КонецЕсли; 
	
	КонецЦикла; 
		
	ПредставлениеРуководителя = Массив[0];
	
	Если Массив.Количество() = 2 Тогда
	
		ПредставлениеРуководителя = ПредставлениеРуководителя + " " + Сред(Массив[1],1,1) + "."; 
		
	ИначеЕсли Массив.Количество() >= 3 Тогда
		
		ПредставлениеРуководителя = ПредставлениеРуководителя + " " + Сред(Массив[1],1,1) + "." + Сред(Массив[2],1,1) + ".";
	
	КонецЕсли; 
	
	
	ОбластьПодвал.Параметры.РуководительКомпании = ПредставлениеРуководителя;

	ОбластьПодвал.Параметры.ДатаОплаты = Формат(Шапка.ДатаОплаты, "ДФ=dd.MM.yyyy"); 
	ОбластьИтоги = Макет.ПолучитьОбласть("СтрокаИтоги");
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	ТабДокумент.Вывести(ОбластьШапка);
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	
	ОбщийИтог = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ОбщийИтог.Следующий() Тогда
	
		ОбластьИтоги.Параметры.Заполнить(ОбщийИтог);		
	
	КонецЕсли; 
	
	ТабЧасть = ОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ТабЧасть.Следующий() Цикл
		
		ОбластьСтроки.Параметры.Заполнить(ТабЧасть);
		ОбластьСтроки.Параметры.Номенклатура = ТабЧасть.Номенклатура.НаименованиеПолное;
		ТабДокумент.Вывести(ОбластьСтроки);
		
	КонецЦикла;
	
	ТабДокумент.Вывести(ОбластьИтоги);
	ТабДокумент.Вывести(ОбластьПодвал);
	
	//ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	
	Возврат ТабДокумент;

	
	//Возврат ТабДокумент;
	
КонецФункции

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Организация			 = Основание.Организация;
		Контрагент			 = Основание.Контрагент;
		ДоговорКонтрагента	 = Основание.ДоговорКонтрагента;
		ДокументОснование	 = Основание.Ссылка;
		СпособОплаты 		 = Перечисления.ВидыДенежныхСредств.Безналичные;
		Подразделение		 = Основание.Подразделение;
		Если не ЗначениеНеЗаполнено(Основание.Сделка) И ТипЗнч(Основание.Сделка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			СпособОтгрузки 	 = Основание.Сделка.СпособОтгрузки;
		КонецЕсли;	
		
		Если Основание.ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда    //***2018.02.13
			
			УстановитьНовыйНомер();
			ДлинаСтандартногоНомера = СтрДлина(Номер);
			
			НомерФА = СокрЛП(Основание.НомерФормулаАвто);
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ДокументОснование", Основание.Ссылка);
			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			               |	Спецификация.Ссылка КАК Ссылка
			               |ИЗ
			               |	Документ.Спецификация КАК Спецификация
			               |ГДЕ
			               |	Спецификация.ДокументОснование = &ДокументОснование";
			ЧислоСпецификацийПоРеализации = Запрос.Выполнить().Выбрать().Количество();
			Если ЧислоСпецификацийПоРеализации = 0 Тогда
				Номер = НомерФА;
			Иначе
				НомерКорректировки = НомерФА + "/" + Строка(ЧислоСпецификацийПоРеализации);
				Номер = НомерКорректировки;
			КонецЕсли;
			
			ДлинаНомера = СтрДлина(СокрЛП(Номер));
			
			Пока ДлинаНомера < ДлинаСтандартногоНомера Цикл
				Номер = "0" + СокрЛП(Номер);
				ДлинаНомера = ДлинаНомера + 1;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, Форма = Неопределено) Экспорт

	Если ЭтоНовый() Тогда
		#Если Клиент тогда
		Предупреждение("Документ можно распечатать только после его записи");
		#КонецЕсли
		Возврат;
	ИначеЕсли Не РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		#Если Клиент тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		#КонецЕсли
		Возврат;
	КонецЕсли; 

	#Если Клиент тогда
	Если Не ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
    #КонецЕсли
	
    //+++ 29.04.2014  как в реализации
    Если НЕ ( РольДоступна("ПолныеПрава")или РольДоступна("яштФинДиректор") или РольДоступна("Кассир")  ) и Дата<Дата('20140701') тогда
	#Если Клиент тогда
		Предупреждение("Вы не можете печать отгрузочные документы! 
						|Печать разрешена только для бухгалтерии!",30);
   	#КонецЕсли
		Возврат;
    КонецЕсли;	
	
	// Получить экземпляр документа на печать
	Если      ИмяМакета = "Спецификация" Тогда
		#Если Клиент тогда
		Предупреждение("Данная печатная форма не актуальна. Выберите Спецификация - новая форма");
		#КонецЕсли
		Возврат;
		//    ТабДокумент = ПечатьДокумента();
	//ИначеЕсли ИмяМакета = "ТОРГ12" тогда
	//		ТабДокумент = ПечатьТОРГ12();
	//ИначеЕсли ИмяМакета = "Акт" Тогда
	//		ТабДокумент = ПечатьАктаОбОказанииУслуг();
	//ИначеЕсли ИмяМакета = "1Т" Тогда
	//		ТабДокумент = ПечатьТТН();
	//ИначеЕсли ИмяМакета = "1Т - ЯШТ" Тогда
	//		ТабДокумент = ПечатьТТН(1, Форма);
			
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("СправочникСсылка.ДополнительныеПечатныеФормы") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = ИмяМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней формы документа. Возможно форма была удалена", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = Ссылка;
		ТабДокумент = Обработка.Печать();
		
	КонецЕсли;
    #Если не ВнешнееСоединение тогда
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект));
    #КонецЕсли
КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
&НаКлиенте
Функция ПолучитьСписокПечатныхФорм() Экспорт

	СписокМакетов = Новый СписокЗначений;

	СписокМакетов.Добавить("Спецификация", "Спецификация");
		ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
	Возврат СписокМакетов;

КонецФункции // ПолучитьСписокПечатныхФорм()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ПроверкаВозможностиИзмененияДокумента(ЭтотОбъект, Отказ);
	Если НЕ Отказ Тогда
		
		обЗаписатьПротоколИзменений(ЭтотОбъект);
		
	КонецЕсли; 

	
КонецПроцедуры


Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	//// +++ 09.01.2017 - выключена
	//
	//Если Префикс = "ТК" Тогда 
	//	СтандартнаяОбработка = Ложь;
	//	ЭтотОбъект.Номер = ПолучитьНомер(Префикс);
	//КонецЕсли;
	
КонецПроцедуры

//Адиянов<<< 20161031
//Поиск последнего и вычисление нового номера.
//Добавлено из-за нарушения длины нумерации объектов.
Функция ПолучитьНомер(Префикс)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Спецификация.Номер КАК Номер
	|ИЗ
	|	Документ.Спецификация КАК Спецификация
	|ГДЕ
	|	Спецификация.Номер ПОДОБНО &Номер
	|	И Спецификация.Дата МЕЖДУ &Дата1 И &Дата2
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер УБЫВ";
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("Дата2", КонецГода(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("Номер", "%" + Префикс + "%");
	
	ТаблицаНомеров = Запрос.Выполнить().Выгрузить();
	ТаблицаНомеров.Колонки.Добавить("НомерЧисло",Новый ОписаниеТипов("Число"));
	
	Для Каждого СтрНомер Из ТаблицаНомеров Цикл 
		ОбработкаПрерыванияПользователя();
		НомерСтрокой = СтрЗаменить(СтрНомер.Номер,Префикс,"");
		НомерСтрокой = СтрЗаменить(НомерСтрокой,"*","");
		Попытка
			СтрНомер.НомерЧисло = Число(Сокрлп(НомерСтрокой));
		Исключение
			СтрНомер.НомерЧисло = 0 ;
		КонецПопытки;
	КонецЦикла;	
	ТаблицаНомеров.Сортировать("НомерЧисло Убыв");
	
	ПоследнийНомер = ТаблицаНомеров[0].НомерЧисло;
	
	ЧислоНомерБезПрефикса = ПоследнийНомер + 1;
	
	НовыйНомер = Префикс + Формат(ЧислоНомерБезПрефикса,"ЧЦ=6; ЧВН=; ЧГ=0");
	
	Возврат НовыйНомер;
	
КонецФункции
//Адиянов>>> 20161031
