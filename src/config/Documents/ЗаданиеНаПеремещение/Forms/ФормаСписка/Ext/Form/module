Перем мЖирныйШрифт;

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ПоказатьСтруктуруПодчиненностиДокумента(ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
  //  УстановитьОтборВЖурналеДокументов(ДокументСписок.Отбор, ЭлементыФормы.Список);	
  
  //+++( 26.04.2012
	//установка ограничения видимости помеченных на удаление документов
	ЭлементОтбора =ДокументСписок.Отбор.Найти("ПометкаУдаления");
		Если  ЭлементОтбора = Неопределено Тогда
			ЭлементОтбора = ДокументСписок.Отбор.Добавить("ПометкаУдаления"); // если нет - добавим в список отборов
		КонецЕсли;
		
		//по настройке пользователя !!!
		Если НЕ ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ДокументыРазрешитьПросмотрПомеченныхНаУдаление") тогда
			ЭлементОтбора.Установить(Ложь); // установим видимость только НЕудаленных
	    	ЭлементыФормы.ДокументСписок.НастройкаОтбора.ПометкаУдаления.Доступность = ЛОЖЬ;
	 	иначе // можно видеть удаленные элементы
			ЭлементыФормы.ДокументСписок.НастройкаОтбора.ПометкаУдаления.Доступность = Истина;
        КонецЕсли;
	//+++)

	//------------------ограничение по подразделению!----------------------------------------
	Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") тогда
		ЭлементОтбора = ДокументСписок.Отбор.Найти("Подразделение");
		ЭлементОтбора.Установить(глТекущийПользователь.ОсновноеПодразделение); 
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.Подразделение.Доступность = ЛОЖЬ;
	КонецЕсли;	
	
	//---------------ограничение просмотра заданий только по себе----------------------------------------
	Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОтображатьТолькоСобственныеЗаказы") тогда
		ЭлементОтбора = ДокументСписок.Отбор.Найти("Ответственный");
        ЭлементОтбора.Установить(глТекущийПользователь);
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.Ответственный.Доступность = ЛОЖЬ;
	КонецЕсли;	
	
	//---------------ограничение просмотра приходов----------------------------------------
	Если НЕ (РольДоступна("ПолныеПрава") 
	         или РольДоступна("Кладовщик")
	         или РольДоступна("МенеджерПоЗакупкам")
			 или РольДоступна("МенеджерПоЗакупкамСОграничениемПравДоступа")
			 или РольДоступна("яштФинДиректор") ) тогда
		ЭлементОтбора = ДокументСписок.Отбор.Найти("ВидОперации");
        ЭлементОтбора.Установить(перечисления.ВидыДвиженийПриходРасход.Расход);
  		ЭлементыФормы.ДокументСписок.НастройкаОтбора.ВидОперации.Доступность = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры


//проверяет наличие хотя бы одной проведенной реализации
//если такая есть, то пересчет заказанного количества - невозможен
функция естьРеализацииПОЗаданию(ссылка, ЕстьПроведенные=истина)
	рез = ложь;
	тзЗакПок = ссылка.ЗаказыПокупателей.Выгрузить();
	тзЗакПок.Свернуть("Реализация", "НомерСтроки");
	N = 0;  
	Если тзЗакПок.Количество()=0 и Ссылка.ЗаявкиНаБрак.Количество() = 0 тогда  // нет заданий! нет реализаций! // Сакулина. добавила условие на Ссылка.ЗаявкиНаБрак.Количество() = 0
		возврат ложь;
	КонецЕсли;
	
	для i=0 по тзЗакПок.Количество()-1 цикл
		Если не тзЗакПок[i].реализация=неопределено и не тзЗакПок[i].реализация.пустая()
			и ( не ЕстьПроведенные или (ЕстьПроведенные и тзЗакПок[i].реализация.проведен) ) Тогда
			N = N + 1;	
		КонецЕсли;	
	КонецЦикла;
	
	//
	рез = (не ЕстьПроведенные и (N>0)) или (ЕстьПроведенные и (N = тзЗакПок.Количество())); 
	
	//Сакулина
	Если Ссылка.ЗаказыПокупателей.Количество() = 0 и Ссылка.ЗаявкиНаБрак.Количество() > 0 Тогда
		КолВоРеал = 0;
		Для Каждого СтрЗаказ из Ссылка.ЗаявкиНаБрак Цикл
			Если Не СтрЗаказ.ДокументОтгрузки = Неопределено и Не СтрЗаказ.ДокументОтгрузки = Документы.ОперацияПоОтветственномуХранению.ПустаяСсылка() Тогда
				КолВоРеал = КолВоРеал +1;
			КонецЕсли;
		КонецЦикла;
		Рез = ?(КолВоРеал = Ссылка.ЗаявкиНаБрак.Количество(), Истина,Ложь);
	КонецЕсли;
    //Сакулина

	
	возврат рез;
КонецФункции


Процедура СписокПриПолученииДанных(Элемент, ОформленияСтрок)
	мТекущаяДата=ТекущаяДата();
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		задание = ОформлениеСтроки.ДанныеСтроки.Ссылка;
		
		Если ОформлениеСтроки.ДанныеСтроки.ВидОперации=Перечисления.ВидыДвиженийПриходРасход.Приход Тогда
			
			//ОформлениеСтроки.ЦветТекста=WebЦвета.Красный; ///Теперь есть приход
			
		//ИначеЕсли ОформлениеСтроки.ДанныеСтроки.Дата <> ОформлениеСтроки.ДанныеСтроки.Ссылка.ДатаДокументаПервая Тогда
		ИначеЕсли естьРеализацииПОЗаданию(задание, истина) Тогда // все реализации проведены...
			ОформлениеСтроки.ЦветТекста=WebЦвета.Синий;	// идет отгрузка		
		КонецЕсли;		
		
		// ОформлениеСтроки.ДанныеСтроки.ВидОперации=Перечисления.ВидыДвиженийПриходРасход.Расход 
		Если (  (задание.ИтогКоличествоШтук>0
			     и задание.ИтогКоличествоШтук = задание.ЗаказыПокупателей.Итог("КоличествоШтукОтгружено")
			     ) //или док.выполнено
			  ) тогда // все реализации проведены, количество заказано = отгружено!
			ОформлениеСтроки.ЦветФона = WebЦвета.LightGray;   // 100% отгрузка и проведение!
		КонецЕсли;		
		
		                                                                    // 2 часа
		Если (ОформлениеСтроки.ДанныеСтроки.Ссылка.ДатаМодификацииДокумента+7200) > мТекущаяДата Тогда
			ОформлениеСтроки.Шрифт = мЖирныйШрифт;
		КонецЕсли;	

		
		
		ОформлениеСтроки.ячейки.важность.ОтображатьТекст = ложь;
		Если ОформлениеСтроки.ДанныеСтроки.Важность <> Перечисления.Важность.Средняя тогда
		ОформлениеСтроки.ячейки.важность.ОтображатьКартинку = истина;
			Если ОформлениеСтроки.ДанныеСтроки.Важность = Перечисления.Важность.Высокая тогда
			ОформлениеСтроки.ячейки.важность.ИндексКартинки = 0;
			иначеЕсли ОформлениеСтроки.ДанныеСтроки.Важность = Перечисления.Важность.Низкая тогда
			ОформлениеСтроки.ячейки.важность.ИндексКартинки = 1;
			КонецЕсли;
		КонецЕсли;
		
		//+++ 19.10.2015
		Если ОформлениеСтроки.ДанныеСтроки.Контрагент = справочники.Контрагенты.НайтиПоКоду("94143") тогда
			ОформлениеСтроки.ячейки.важность.ОтображатьКартинку = истина;
			ОформлениеСтроки.ячейки.важность.ИндексКартинки = 2;
        КонецЕсли;
		//----------------картинка приход/расход--------------------------------------
		//ОформлениеСтроки.ячейки.ВидОперации.ОтображатьТекст = ложь;
		//ОформлениеСтроки.ячейки.ВидОперации.ОтображатьКартинку = истина;
		//Если ОформлениеСтроки.ДанныеСтроки.ВидОперации = Перечисления.ВидыДвиженийПриходРасход.Приход тогда
		//	ОформлениеСтроки.ячейки.ВидОперации.ИндексКартинки = 1;
		//иначеЕсли ОформлениеСтроки.ДанныеСтроки.ВидОперации = Перечисления.ВидыДвиженийПриходРасход.Расход тогда
		//	ОформлениеСтроки.ячейки.ВидОперации.ИндексКартинки = 0;
		//КонецЕсли;

		
		//+++ проценты и цвет для быстрой оценки
		Если ОформлениеСтроки.ДанныеСтроки.ВидОперации=Перечисления.ВидыДвиженийПриходРасход.Расход
			и ОформлениеСтроки.ДанныеСтроки.ИтогКоличествоШтук>0 тогда  
		 Док = ОформлениеСтроки.ДанныеСтроки.ссылка;
		 колЗак = мин(Док.ГруппыСкладов.Итог("КоличествоЗаказано"), Док.ГруппыСкладов.Итог("КоличествоСвободно"));
		 колОтгр= мин( Док.Товары.Итог("Количество"), Док.ЗаказыПокупателей.Итог("КоличествоШтукОтгружено"));
		 ОформлениеСтроки.ячейки.ПроцентНаОтгрузку.значение = окр( колЗак*100 / Док.ИтогКоличествоШтук, 0) ;
		 ОформлениеСтроки.ячейки.ПроцентОтгружено.значение  = окр( ?(колЗак=0, 0, (колОтгр*100/колЗак)), 0);
		 
		 //-------------идет отгрузка... заказано но еще не все отгружено!---------------------------------------
		// Если док.Товары.Итог("КоличествоЗаказано")>Док.ЗаказыПокупателей.Итог("КоличествоШтукОтгружено") тогда
		  Если колЗак>0 и не док.выполнено и Док.проведен тогда
			Если колЗак = Док.ИтогКоличествоШтук и (колОтгр=0) тогда
		    	  ОформлениеСтроки.ЦветФона = WebЦвета.НейтральноЗеленый;// в работе, все что заказано >> на отгрузку	 
			Иначе
				Если колЗак<Док.ИтогКоличествоШтук и (колОтгр=0 или колОтгр=колЗак) тогда
 					ОформлениеСтроки.ЦветФона = WebЦвета.СветлоРозовый;	//недозаказ склада! 
				ИначеЕсли колОтгр>0 и колОтгр<колЗак тогда	
					ОформлениеСтроки.ЦветФона = WebЦвета.Сливовый; // НедоГруз на складе!
				Иначе 
				    ОформлениеСтроки.ЦветФона = WebЦвета.НейтральноЗеленый;// в работе	 
				конецЕсли;
	 	  	КонецЕсли;
 	  	  КонецЕсли;

		 
		Иначе	
		  ОформлениеСтроки.ячейки.ПроцентНаОтгрузку.значение = 0;
		  ОформлениеСтроки.ячейки.ПроцентОтгружено.значение  = 0;
	  КонецЕсли;
	  
	  // Сакулина
	  КоличествоЗаказов = ОформлениеСтроки.ДанныеСтроки.ссылка.ЗаказыПокупателей.Количество();
	  КоличествоБрака = ОформлениеСтроки.ДанныеСтроки.ссылка.ЗаявкиНаБрак.Количество();
	  ПеремещеноБрак = ОформлениеСтроки.ДанныеСтроки.ссылка.ЗаявкиНаБрак.Итог("КоличествоПеремещено");
	  НужноПереместить = ОформлениеСтроки.ДанныеСтроки.ссылка.ЗаявкиНаБрак.Итог("Количество");

	  Если КоличествоЗаказов = 0  и КоличествоБрака > 0 Тогда
		  Если НужноПереместить = ПеремещеноБрак Тогда
			  ОформлениеСтроки.ЦветФона = WebЦвета.LightGray ;
		  КонецЕсли;
		  Если  не ОформлениеСтроки.ДанныеСтроки.ссылка.Проведен тогда
			  Если ПеремещеноБрак = 0 тогда
				  ОформлениеСтроки.ЦветФона = WebЦвета.НейтральноЗеленый;// в работе, все что заказано >> на отгрузку	
			  ИначеЕсли ПеремещеноБрак < НужноПереместить и ПеремещеноБрак > 0 тогда	
				  ОформлениеСтроки.ЦветФона = WebЦвета.Сливовый; // НедоГруз на складе!
			  КонецЕсли;
		  КонецЕсли;		  
	  КонецЕсли;
	  
	  
	  
  КонецЦикла;
	
КонецПроцедуры

Процедура ДокументСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	стр1 = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если Копирование и не стр1.ссылка.Выполнено тогда
		Предупреждение("Копировать можно только Выполненный заказ!");
		Отказ = истина;
	КонецЕсли;	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
		Перем СписокДок;

	Если Не(ВводДоступен()) Тогда
		Возврат;
	КонецЕсли;

	Если глТорговоеОборудование <> Неопределено Тогда
		Если Событие = "BarCodeValue" Тогда
			Если глТорговоеОборудование.ПолучитьВсеДокументыПоШтрихКоду(Данные, СписокДок) Тогда
				Если СписокДок.Количество() = 1 Тогда
					ОткрытьЗначение(СписокДок[0].Ссылка);
				ИначеЕсли СписокДок.Количество() > 1 Тогда
					СтрокаДок = СписокДок.ВыбратьСтроку("Выберите один из найденных документов.");
					Если СтрокаДок<>Неопределено Тогда
						ОткрытьЗначение(СтрокаДок.Ссылка);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			глТорговоеОборудование.СканерПосылкаДанных(1);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


мЖирныйШрифт= Новый Шрифт(,, Истина);