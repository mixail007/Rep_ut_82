////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 

// Устанавливается в значение "Истина", если пользователю можно менять цену
// в документе
Перем мМожноМенятьЦенуВДокументе;

Перем мКолонкиТовары, мКолонкиВозвратнаяТара;

Перем мПечатнаяФормаПоУмолчанию;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	Если ЭтоНовый() Тогда
		мСкладДляПодстановки = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнойСклад");
		СкладОтправитель=мСкладДляПодстановки; 
		СкладПолучатель=мСкладДляПодстановки; 
		Организация = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
	КонецЕсли;

	
КонецПроцедуры

Процедура ВыводИстории(Элемент)
	
	ВывестиИсторию(Ссылка, ЭтаФорма);
	
КонецПроцедуры
	
	

// Процедура - обработчик события "ОбновлениеОтображения" формы.
//
Процедура ОбновлениеОтображения()

	// Подсчитаем количество строк в табличных частях.
	ЗаголовокТовары = "Товары (";
	Для каждого СтраницаПанели из ЭлементыФормы.ОсновнаяПанель.Страницы Цикл

		Если СтраницаПанели.Имя = "Товары" Тогда
			СтраницаПанели.Заголовок = ЗаголовокТовары  + ДокументОбъект.Товары.Количество() + " поз.)";
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // ОбновлениеОтображения()


// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	//УстановитьЗаголовокФормыДокументаСУчетомСклада(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма, СкладПолучатель);

КонецПроцедуры // ПослеЗаписи()

Процедура ТоварыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ПоказатьКодАртикул(мКолонкиТовары, ОформлениеСтроки.Ячейки, ДанныеСтроки.Номенклатура);	
	
КонецПроцедуры

// Процедура вызывается при выборе пункта "Из терминала сбора данных"
// меню кнопки "Заполнить" командной панели табличного поля "ТоварыАдресноеХранение"
//
Процедура КоманднаяПанельТоварыИзТерминалаСбораДанных(Кнопка)
	Перем Ответ, Данные, ВремТовар, ВремЕдиница;
	
	//+++ переподключение принудительное - всегда!
			глТорговоеОборудование.ОтключитьОборудование();
		    глТорговоеОборудование.ПодключитьОборудование();


	Если глТорговоеОборудование = Неопределено Тогда
		Предупреждение("Торговое оборудование не подключено");
	ИначеЕсли глТорговоеОборудование.млТерминал.Количество() = 0 Тогда
		Предупреждение("Терминал сбора данных не подключен");
	Иначе
		Если глТорговоеОборудование.млТерминал.Количество() = 1 Тогда

			РезультатВыбора = глТорговоеОборудование.млТерминал[0];

		Иначе

			СписокТерминаловСбораДанных = Новый СписокЗначений;
			Для Каждого ТерминалСбораДанных из глТорговоеОборудование.млТерминал Цикл
				СписокТерминаловСбораДанных.Добавить(ТерминалСбораДанных, ТерминалСбораДанных.Модель);
			КонецЦикла;
			РезультатВыбора = СписокТерминаловСбораДанных.ВыбратьЭлемент("Выберите терминал сбора данных");
			Если РезультатВыбора = Неопределено Тогда
				Возврат;
			КонецЕсли;
			РезультатВыбора = РезультатВыбора.Значение;

		КонецЕсли;
		
///++++++++++++++++++++++++++++++++++++++++++++++Плотников Терминалы Моторолла
		
		Если РезультатВыбора.Модель = Справочники.ТорговоеОборудование.НайтиПоНаименованию("КПК под управлением «АТОЛ: Mobile Logistics»") Тогда
			
			Ответ = глТорговоеОборудование.ТСДЗагрузитьДанные(Данные);
			
		Если Не ПустаяСтрока(Ответ) Тогда
			Предупреждение(Ответ);
		ИначеЕсли Данные.Количество() = 0 Тогда
			Предупреждение("Из терминала сбора данных не загружено ни одного товара...");
		Иначе
			
			i=0;    
			пустойСклад = справочники.Склады.ПустаяСсылка();
	//--------------------------------------------------------------------------------------------------------------------------		
	        Для Каждого СтрокаДанных Из Данные Цикл
		
		        Если стрДлина(СтрокаДанных.штриХкод)=13 тогда //16.11.2015  - поиск по штрихКоду
				    если лев(СтрокаДанных.штриХкод,5) = "05000" тогда // "наш" код = префикс + код товара + КС
				        Код = сред(СтрокаДанных.штриХкод, 6,7);
				    иначе	
				        Код = "9999999"; // не существующий код!
				    КонецЕсли; 
			    иначе
				    Код = ЛЕВ(СтрокаДанных.штриХкод,7);
				КонецЕсли;
				
				Если стрДлина(СтрокаДанных.Ячейка)>6 и лев(СтрокаДанных.Ячейка,1) = "1" тогда // "обрезаем" префикс для 5000
				    АдресХ = сред(СтрокаДанных.Ячейка,2,6);  
			    Иначе //как есть но в поле Адреса
				    АдресХ = лев(СтрокаДанных.Ячейка,7);
				КонецЕсли;
				
				Если стрДлина(СтрокаДанных.Ячейка2)>6 и лев(СтрокаДанных.Ячейка2,1) = "1" тогда // "обрезаем" префикс для 5000
				    АдресХ2 = сред(СтрокаДанных.Ячейка2,2,6);  
			    Иначе //как есть но в поле Адреса
				    АдресХ2 = лев(СтрокаДанных.Ячейка2,7);
			    КонецЕсли;


		
				i=i+1;
				//+++ Если глТорговоеОборудование.ПолучитьТоварПоШтрихкоду(СтрокаДанных.Штрихкод, ВремТовар) Тогда
				ВремТовар = Справочники.Номенклатура.НайтиПоКоду(Код);  //+++
				
				//09.11.2015 - Аксессуары
				 Если НЕ ЗначениеЗаполнено(ВремТовар) тогда
					ВремТоварТабл = новый ТаблицаЗначений;
					глТорговоеОборудование.ПолучитьТоварПоШтрихкоду(СтрокаДанных.Штрихкод, ВремТоварТабл);
					Если ВремТоварТабл.Количество()>0 тогда
						ВремТовар = ВремТоварТабл[0].Номенклатура;
					КонецЕсли;	
					#Если Клиент тогда 
					Если ЗначениеЗаполнено(ВремТовар) тогда 
						Сообщить("По ШК: "+СокрЛП(СтрокаДанных.Штрихкод)+" Найден товар: "+строка(ВремТовар.Код)+" "+строка(ВремТовар), СтатусСообщения.Информация);
					иначе	
						Сообщить("По ШК: "+СокрЛП(СтрокаДанных.Штрихкод)+" НЕ Найден товар!", СтатусСообщения.Внимание);
					КонецЕсли;	
					#КонецЕсли	
				КонецЕсли;	

				Если ЗначениеЗаполнено(ВремТовар) тогда
					
					//+++ 24.12.2012
					Адрес  = справочники.АдресаХранения.НайтиПоКоду(АдресХ);   // ,,, СкладОтправитель);
					Адрес2 = справочники.АдресаХранения.НайтиПоКоду(АдресХ2); // ,,, СкладОтправитель);

					
					Если НЕ ЗначениеЗаполнено(Адрес) тогда
						сообщить(строка(i)+" строка - Не найден Адрес Отправителя: "+СтрокаДанных.Адрес, СтатусСообщения.Внимание);
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(Адрес2) тогда
						сообщить(строка(i)+" строка - Не найден Адрес Получателя: "+СтрокаДанных.Адрес2, СтатусСообщения.Внимание);
					КонецЕсли;

					СтруктураОтбора = Новый Структура();
					СтруктураОтбора.Вставить("Номенклатура", ВремТовар);
					СтруктураОтбора.Вставить("АдресОтправитель",Адрес);
					СтруктураОтбора.Вставить("АдресПолучатель", Адрес2);
					
					СтрокаТабличнойЧасти = НайтиСтрокуТабЧасти(Товары, СтруктураОтбора);  //+++ для добавления в 1 строку и устранения дублей
					
					Если СтрокаТабличнойЧасти <> Неопределено Тогда
 						// Нашли, увеличиваем количество в первой найденной строке.
						СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + СтрокаДанных.Количество;
 					Иначе
 						// Не нашли - добавляем новую строку.
						СтрокаТабличнойЧасти = Товары.Добавить();
						СтрокаТабличнойЧасти.Номенклатура           = ВремТовар;  //+++
						
						СтрокаТабличнойЧасти.АдресОтправитель		= Адрес;
						СтрокаТабличнойЧасти.АдресПолучатель		= Адрес2;
						СтрокаТабличнойЧасти.Количество             = СтрокаДанных.Количество;
						
						//проверка складов
						СтрокаТабличнойЧастиСклад					= ?(ЗначениеЗаполнено(Адрес), Адрес.Владелец, пустойСклад );
						СтрокаТабличнойЧастиСклад2					= ?(ЗначениеЗаполнено(Адрес2), Адрес2.Владелец, пустойСклад );
						Если СкладОтправитель <> справочники.Склады.ПустаяСсылка() тогда //+++ 18.01.2013
							Если СкладОтправитель<>СтрокаТабличнойЧастиСклад тогда
								Предупреждение("Склад документа: "+строка(СкладОтправитель)+" не совпадает со складом: "+ строка(СтрокаТабличнойЧастиСклад)+" ячейки отправителя: "+строка(Адрес) );
							КонецЕсли;	
							Если СкладОтправитель<>СтрокаТабличнойЧастиСклад2 тогда
								Предупреждение("Склад документа: "+строка(СкладОтправитель)+" не совпадает со складом: "+ строка(СтрокаТабличнойЧастиСклад2)+" ячейки получателя: "+строка(Адрес2) );
							КонецЕсли;	
						иначе
							СкладОтправитель = СтрокаТабличнойЧастиСклад;
						КонецЕсли;
						
						
						// Выполнить общие действия для всех документов при изменении номенклатуры.
						ПриИзмененииНоменклатурыТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);

					КонецЕсли;

					// Рассчитать реквизиты табличной части.
					//РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
					//РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);

					ЭлементыФормы.Товары.ТекущаяСтрока = СтрокаТабличнойЧасти;
				КонецЕсли;
			КонецЦикла;

			Ответ = Вопрос("Очистить память терминала сбора данных?", РежимДиалогаВопрос.ДаНет);
			//Если Ответ = КодВозвратаДиалога.Да Тогда
			//	СтрокаТаблицыТерминала = неопределено;
			//	Если глТорговоеОборудование = Неопределено 
			//		или глТорговоеОборудование.млТерминал.Количество()>0 тогда
			//		СтрокаТаблицыТерминала = новый Структура; //+++ 09.01.2012
			//		СтрокаТаблицыТерминала.Вставить("Объект" , глТорговоеОборудование.млТерминал[0].Объект );
			//		СтрокаТаблицыТерминала.Вставить("НомерЛУ", глТорговоеОборудование.млТерминал[0].НомерЛУ);
			//		СтрокаТаблицыТерминала.Вставить("Модель",  глТорговоеОборудование.млТерминал[0].Модель);
			//	//иначе // ТСД не подключен.	
			//	КонецЕсли;
			//	Ответ = глТорговоеОборудование.ОчиститьПамятьТерминалаСбораДанных(СтрокаТаблицыТерминала);
			//	Если Не ПустаяСтрока(Ответ) Тогда
			//		Предупреждение(Ответ);
			//	КонецЕсли;
			//КонецЕсли;
			
		КонецЕсли;
			
///++++++++++++++++++++++++++++++++++++++++++++++Продолжение огородников
		Иначе
		нетАдреса = ЛОЖЬ; //+++ это ВАЖНО !!!
		Ответ = глТорговоеОборудование.ЗагрузитьДанныеИзТерминалаСбораДанных(РезультатВыбора, Данные, нетАдреса);
		
		Если Не ПустаяСтрока(Ответ) Тогда
			Предупреждение(Ответ);
		ИначеЕсли Данные.Количество() = 0 Тогда
			Предупреждение("Из терминала сбора данных не загружено ни одного товара...");
		Иначе
			
			i=0;    
			пустойСклад = справочники.Склады.ПустаяСсылка();
	//--------------------------------------------------------------------------------------------------------------------------		
			Для Каждого СтрокаДанных Из Данные Цикл
				i=i+1;
				//+++ Если глТорговоеОборудование.ПолучитьТоварПоШтрихкоду(СтрокаДанных.Штрихкод, ВремТовар) Тогда
				ВремТовар = Справочники.Номенклатура.НайтиПоКоду(СтрокаДанных.Код);  //+++
				
				//09.11.2015 - Аксессуары
				 Если НЕ ЗначениеЗаполнено(ВремТовар) тогда
					ВремТоварТабл = новый ТаблицаЗначений;
					глТорговоеОборудование.ПолучитьТоварПоШтрихкоду(СтрокаДанных.Штрихкод, ВремТоварТабл);
					Если ВремТоварТабл.Количество()>0 тогда
						ВремТовар = ВремТоварТабл[0].Номенклатура;
					КонецЕсли;	
					#Если Клиент тогда 
					Если ЗначениеЗаполнено(ВремТовар) тогда 
						Сообщить("По ШК: "+СокрЛП(СтрокаДанных.Штрихкод)+" Найден товар: "+строка(ВремТовар.Код)+" "+строка(ВремТовар), СтатусСообщения.Информация);
					иначе	
						Сообщить("По ШК: "+СокрЛП(СтрокаДанных.Штрихкод)+" НЕ Найден товар!", СтатусСообщения.Внимание);
					КонецЕсли;	
					#КонецЕсли	
				КонецЕсли;	

				Если ЗначениеЗаполнено(ВремТовар) тогда
					
					//+++ 24.12.2012
					Адрес  = справочники.АдресаХранения.НайтиПоКоду(СтрокаДанных.Адрес);   // ,,, СкладОтправитель);
					Адрес2 = справочники.АдресаХранения.НайтиПоКоду(СтрокаДанных.Адрес2); // ,,, СкладОтправитель);

					
					Если НЕ ЗначениеЗаполнено(Адрес) тогда
						сообщить(строка(i)+" строка - Не найден Адрес Отправителя: "+СтрокаДанных.Адрес, СтатусСообщения.Внимание);
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(Адрес2) тогда
						сообщить(строка(i)+" строка - Не найден Адрес Получателя: "+СтрокаДанных.Адрес2, СтатусСообщения.Внимание);
					КонецЕсли;

					СтруктураОтбора = Новый Структура();
					СтруктураОтбора.Вставить("Номенклатура", ВремТовар);
					СтруктураОтбора.Вставить("АдресОтправитель",Адрес);
					СтруктураОтбора.Вставить("АдресПолучатель", Адрес2);
					
					СтрокаТабличнойЧасти = НайтиСтрокуТабЧасти(Товары, СтруктураОтбора);  //+++ для добавления в 1 строку и устранения дублей
					
					Если СтрокаТабличнойЧасти <> Неопределено Тогда
 						// Нашли, увеличиваем количество в первой найденной строке.
						СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + СтрокаДанных.Количество;
 					Иначе
 						// Не нашли - добавляем новую строку.
						СтрокаТабличнойЧасти = Товары.Добавить();
						СтрокаТабличнойЧасти.Номенклатура           = ВремТовар;  //+++
						
						СтрокаТабличнойЧасти.АдресОтправитель		= Адрес;
						СтрокаТабличнойЧасти.АдресПолучатель		= Адрес2;
						СтрокаТабличнойЧасти.Количество             = СтрокаДанных.Количество;
						
						//проверка складов
						СтрокаТабличнойЧастиСклад					= ?(ЗначениеЗаполнено(Адрес), Адрес.Владелец, пустойСклад );
						СтрокаТабличнойЧастиСклад2					= ?(ЗначениеЗаполнено(Адрес2), Адрес2.Владелец, пустойСклад );
						Если СкладОтправитель <> справочники.Склады.ПустаяСсылка() тогда //+++ 18.01.2013
							Если СкладОтправитель<>СтрокаТабличнойЧастиСклад тогда
								Предупреждение("Склад документа: "+строка(СкладОтправитель)+" не совпадает со складом: "+ строка(СтрокаТабличнойЧастиСклад)+" ячейки отправителя: "+строка(Адрес) );
							КонецЕсли;	
							Если СкладОтправитель<>СтрокаТабличнойЧастиСклад2 тогда
								Предупреждение("Склад документа: "+строка(СкладОтправитель)+" не совпадает со складом: "+ строка(СтрокаТабличнойЧастиСклад2)+" ячейки получателя: "+строка(Адрес2) );
							КонецЕсли;	
						иначе
							СкладОтправитель = СтрокаТабличнойЧастиСклад;
						КонецЕсли;
						
						
						// Выполнить общие действия для всех документов при изменении номенклатуры.
						ПриИзмененииНоменклатурыТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);

					КонецЕсли;

					// Рассчитать реквизиты табличной части.
					//РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
					//РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);

					ЭлементыФормы.Товары.ТекущаяСтрока = СтрокаТабличнойЧасти;
				КонецЕсли;
			КонецЦикла;

			Ответ = Вопрос("Очистить память терминала сбора данных?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				СтрокаТаблицыТерминала = неопределено;
				Если глТорговоеОборудование = Неопределено 
					или глТорговоеОборудование.млТерминал.Количество()>0 тогда
					СтрокаТаблицыТерминала = новый Структура; //+++ 09.01.2012
					СтрокаТаблицыТерминала.Вставить("Объект" , глТорговоеОборудование.млТерминал[0].Объект );
					СтрокаТаблицыТерминала.Вставить("НомерЛУ", глТорговоеОборудование.млТерминал[0].НомерЛУ);
					СтрокаТаблицыТерминала.Вставить("Модель",  глТорговоеОборудование.млТерминал[0].Модель);
				//иначе // ТСД не подключен.	
				КонецЕсли;
				Ответ = глТорговоеОборудование.ОчиститьПамятьТерминалаСбораДанных(СтрокаТаблицыТерминала);
				Если Не ПустаяСтрока(Ответ) Тогда
					Предупреждение(Ответ);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		КонецЕсли;//Конец Плотников
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	яштСменаПользователя(ЭтотОбъект, ЭтаФорма, глТекущийПользователь);		
КонецПроцедуры

Процедура ТоварыАдресОтправительНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	форма = справочники.АдресаХранения.ПолучитьФормуВыбора();
	форма.Отбор["Владелец"].Использование = Истина;
	форма.Отбор["Владелец"].ВидСравнения = ВидСравнения.Равно;
	форма.Отбор["Владелец"].Значение = СкладОтправитель;
	форма.ЭлементыФормы.СправочникСписок.НастройкаОтбора["Владелец"].Доступность = Ложь;
	
	Элемент.значение = форма.ОткрытьМодально();
	
КонецПроцедуры

Процедура ТоварыАдресПолучательНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	форма = справочники.АдресаХранения.ПолучитьФормуВыбора();
	форма.Отбор["Владелец"].Использование = Истина;
	форма.Отбор["Владелец"].ВидСравнения = ВидСравнения.Равно;
	форма.Отбор["Владелец"].Значение = СкладПолучатель;
	форма.ЭлементыФормы.СправочникСписок.НастройкаОтбора["Владелец"].Доступность = Ложь;
	
	Элемент.значение = форма.ОткрытьМодально();

КонецПроцедуры

Процедура СкладОтправительПриИзменении(Элемент)
	Если не СкладОтправитель.АдресноеХранение тогда
		Предупреждение("Склад "+строка(СкладОтправитель)+" 
		|не является складом Адресного хранения!
		|		Выберите другой склад!",30);
		СкладПолучатель = справочники.Склады.ПустаяСсылка();
	возврат;
	КонецЕсли;
	СкладПолучатель = СкладОтправитель;  //11.01.2018 всегда
	
	//+++ 21.12.2017 - по # Яковлевой заблокирован СкладПолучатель и БУ, НУ
	Предупреждение("Перемещение по ячейкам ограничено только в пределах 1 склада!",30);   
	
КонецПроцедуры

Процедура СкладПолучательПриИзменении(Элемент)
	Если не СкладПолучатель.АдресноеХранение тогда
		Предупреждение("Склад "+строка(СкладОтправитель)+" 
		|не является складом Адресного хранения!
		|		Выберите другой склад!",30);
		возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ТоварыАдресОтправительПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.значение) тогда
		Если Элемент.значение.Владелец <> СкладОтправитель тогда
			Предупреждение("Адрес не пренадлежит складу отправителю: "+строка(СкладОтправитель)+"
			|Выберите адрес из списка, нажав [...]", 30);
			Элемент.значение = справочники.АдресаХранения.ПустаяСсылка();
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура ТоварыАдресПолучательПриИзменении(Элемент)
		Если ЗначениеЗаполнено(Элемент.значение) тогда
		Если Элемент.значение.Владелец <> СкладПолучатель тогда
			Предупреждение("Адрес не пренадлежит складу получателю: "+строка(СкладПолучатель)+"
			|Выберите адрес из списка, нажав [...]", 30);
			Элемент.значение = справочники.АдресаХранения.ПустаяСсылка();
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура КоманднаяПанель1Заполнить(Кнопка)
	ЗаполнитьВесНетто(Товары);
	ОбщийВес=Товары.Итог("Вес");

ДанныеПоПогрузке.Очистить();
	
//+++ перераспределение КТУ по грузчикам по группам складов
Если Константы.КТУгрузчиковПоСкладам.Получить() тогда
	
	ЗаполнениеКТУГрузчиковВнПерем(ЭтотОбъект, "СкладОтправитель"); // или "СкладПолучатель"
	
иначе // как раньше было
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|Ссылка Грузчик
	|ИЗ
	|	Справочник.ФизическиеЛица
	|ГДЕ Официальный";
	
	Выборка=Запрос.Выполнить().Выбрать();
	КоличествоСтрок=Выборка.Количество();
	
	Пока Выборка.Следующий() Цикл
		Строка=ДанныеПоПогрузке.Добавить();
		Строка.Грузчик=Выборка.Грузчик;
		Строка.Вес=1;
	КонецЦикла;
КонецЕсли;
	
КонецПроцедуры


Процедура КоманднаяПанель1ЗаполнитьПоПолучателю(Кнопка)
	ЗаполнитьВесНетто(Товары);
	ОбщийВес=Товары.Итог("Вес");

ДанныеПоПогрузке.Очистить();
	
//+++ перераспределение КТУ по грузчикам по группам складов
Если Константы.КТУгрузчиковПоСкладам.Получить() тогда
	
	ЗаполнениеКТУГрузчиковВнПерем(ЭтотОбъект, "СкладПолучатель");
	
иначе // как раньше было
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|Ссылка Грузчик
	|ИЗ
	|	Справочник.ФизическиеЛица
	|ГДЕ Официальный";
	
	Выборка=Запрос.Выполнить().Выбрать();
	КоличествоСтрок=Выборка.Количество();
	
	Пока Выборка.Следующий() Цикл
		Строка=ДанныеПоПогрузке.Добавить();
		Строка.Грузчик=Выборка.Грузчик;
		Строка.Вес=1;
	КонецЦикла;
КонецЕсли;
	
КонецПроцедуры


//+++ заполнение КТУ по всем грузчикам... 
//или по ГруппамСкладов при авто-расчете документов
//
Процедура ЗаполнениеКТУГрузчиковВнПерем(Док, назвСклада = "СкладОтправитель")
	
	Если началоДня(Док.Дата) <> НачалоДня(ТекущаяДата()) тогда
		#Если Клиент тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Список грузчиков заполняется на текущий день!
			|и может не совпадать на "+Формат(Док.Дата, "ДЛФ=D")+".
			|Продолжить?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		#КонецЕсли
	КонецЕсли;	
	
	//============================Неравное распределение КТУ==========================
	Док.ДанныеПоПогрузке.Очистить();
	
	ЗаполнитьВесНетто(Док.Товары);
	Док.ОбщийВес = Док.Товары.Итог("Вес");
	
	табЗнач = Док.Товары.выгрузить();
	
	 //+++ 26.05.2014
	табЗнач.Колонки.Добавить("Склад");
	табЗнач.ЗаполнитьЗначения(?(назвСклада = "СкладОтправитель", док.СкладОтправитель, док.СкладПолучатель) , "Склад");
	
	табЗнач.Свернуть("Склад", "Вес, Количество");
	табЗнач.Колонки.Добавить("ГруппаСкладов");
	Для Каждого стр1 из табЗнач Цикл
		//+++ 03.03.2014 при отгрузке с МеталлКриалТранзит - берем грузчиков 5000 
		Если стр1.Склад = справочники.Склады.НайтиПоНаименованию("МеталлКриалТранзит") тогда 
			стр1.ГруппаСкладов = справочники.ГруппыСкладов.НайтиПоКоду("01");//01-5000 или 08-8000	
		Иначе	
			стр1.ГруппаСкладов = стр1.Склад.ГруппаСкладов;
		КонецЕсли;
	КонецЦикла;
	табЗнач.Свернуть("ГруппаСкладов", "Вес, Количество");
	
	среднВес = ?(табЗнач.Количество()=0, Док.ОбщийВес, Док.ОбщийВес/табЗнач.Количество());
	Если среднВес=0 тогда	
		#Если Клиент тогда
			СообщитьОбОшибке("Не определен вес товаров в документе: "+строка(Док)+". КТУ грузчиков будет равен 1!");
		#КонецЕсли
		среднВес=1;
	КонецЕсли;
	
	Для Каждого стрГр из табЗнач Цикл
		
		Если стрГр.ГруппаСкладов.пустая() Тогда			
			ГруппаСкладов = справочники.ГруппыСкладов.ОсновнойСклад;
		Иначе
			ГруппаСкладов = стрГр.ГруппаСкладов;
		КонецЕсли;
		
		//среднее по группам! если 300+700 соответственно будет среднее 500
		ВесОдногоИзГруппы = стрГр.Вес/среднВес;   //среднВес 1,6 и 0,4 =  0.8 и 0.2  - Док.ОбщийВес
		ВесОдногоИзГруппы =?(Док.ОбщийВес=0, 1, ВесОдногоИзГруппы); //КТУ не может быть = 0
		
		ВесОдногоГрузчика = Окр(ВесОдногоИзГруппы, 3); //погрешность 0.05% = 5кг / 10 тонн
		//Заполнение состава грузчиков
		Для Каждого стрСостава из ГруппаСкладов.Состав Цикл
			//  ВесОдногоИзГруппы = стрГр.Вес / Док.ОбщийВес
			// ВесОдногоГрузчика  = ВесОдногоИзГруппы / ГруппаСкладов.Состав.Количество();
			Строка=Док.ДанныеПоПогрузке.Добавить();
			Строка.Грузчик = стрСостава.ФизЛицо;
			Строка.Вес	   = ВесОдногоГрузчика;
		КонецЦикла;	
		
	КонецЦикла;
	//погрешность 0.0005 * числоГрузчиков (для 100 грузчиков = 0.05)
	
	//КонецЕсли;
	
КонецПроцедуры







//////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мКолонкиТовары         = ЭлементыФормы.Товары.Колонки;

