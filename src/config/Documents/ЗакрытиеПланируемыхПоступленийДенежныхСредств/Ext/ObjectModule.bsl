// Хранит результаты отбора по заявкам

Перем ТабПоступление Экспорт;

// Создает запрос для получения остатков по регистрам "ЗаявкиНаРасходованиеСредств"
// и "ДенежныеСредстваВРезерве"
//
Функция СформироватьЗапрос(ДокументПланирования="") Экспорт
	
	Запрос=Новый Запрос;
	СтруктураПараметров=Новый Структура;
	
	ТекстОтбора="";
	
	Если ДокументПланирования="" Тогда // Формируем запрос для заполнения ТЧ
		
		Если ОтборЦФО Тогда
			
			Если ЦФО.Пустая() Тогда
				ТекстОтбора=ТекстОтбора+"
				|И (##.ЦФО = &ЦФО)";
			Иначе
				ТекстОтбора=ТекстОтбора+"
				|И (##.ЦФО В ИЕРАРХИИ (&ЦФО))";
			КонецЕсли;
			
			СтруктураПараметров.Вставить("ЦФО",ЦФО);
			
		КонецЕсли;
				
		Если ОтборКонтрагент Тогда
			
			Если Контрагент.Пустая() Тогда
				ТекстОтбора=ТекстОтбора+"
				|И (##.Контрагент = &Контрагент)";
			Иначе
				ТекстОтбора=ТекстОтбора+"
				|И (##.Контрагент В ИЕРАРХИИ (&Контрагент))";
			КонецЕсли;
			
			СтруктураПараметров.Вставить("Контрагент",Контрагент);
			
		КонецЕсли;
				
		Если ОтборОтветственный Тогда
			
			Если Ответственный.Пустая() Тогда
				ТекстОтбора=ТекстОтбора+"
				|И (##.Ответственный = &Ответственный)";
			Иначе
				ТекстОтбора=ТекстОтбора+"
				|И (##.Ответственный В ИЕРАРХИИ (&Ответственный))";
			КонецЕсли;
			
			СтруктураПараметров.Вставить("Ответственный",ОтветственныйПоступление);
			
		КонецЕсли;
		
		Если НЕ (ОтборДатаНач='00010101' ИЛИ ОтборДатаКон='00010101') Тогда
			
			ТекстОтбора=ТекстОтбора+"
			|И (##.ДатаПоступления МЕЖДУ &ДатаНач И &ДатаКон)";
			
			СтруктураПараметров.Вставить("ДатаНач",НачалоДня(ОтборДатаНач));
			СтруктураПараметров.Вставить("ДатаКон",КонецДня(ОтборДатаКон));
			
		ИначеЕсли НЕ ОтборДатаНач='00010101' Тогда
			
			ТекстОтбора=ТекстОтбора+"
			|И (##.ДатаПоступления >= &ДатаНач)";
			
			СтруктураПараметров.Вставить("ДатаНач",НачалоДня(ОтборДатаНач));
			
		ИначеЕсли НЕ ОтборДатаКон='00010101' Тогда
			
			ТекстОтбора=ТекстОтбора+"
			|И (##.ДатаПоступления <= &ДатаКон)";
			
			СтруктураПараметров.Вставить("ДатаКон",КонецДня(ОтборДатаКон));
			
		КонецЕсли;
		
		ТекстОтбора=Сред(ТекстОтбора,4);
		
	Иначе // Формируем запрос по конкретной заявке
		
		ТекстОтбора="##=&ДокументПланирования";
		СтруктураПараметров.Вставить("ДокументПланирования",ДокументПланирования);
		
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
	|	ПланируемоеПоступлениеОстаток.ДокументПланирования КАК ДокументПланирования,
	|	СУММА(ПланируемоеПоступлениеОстаток.СуммаПоступленияОстаток) КАК ОстатокПоступление,
	|	СУММА(ПланируемоеПоступлениеОстаток.СуммаРазмещенияОстаток) КАК ОстатокРазмещение,
	|	ПланируемоеПоступлениеОстаток.ДокументПланирования.Ответственный КАК Ответственный,
	|	ПланируемоеПоступлениеОстаток.ДокументПланирования.ВалютаДокумента КАК ВалютаПоступление,
	|	ПланируемоеПоступлениеОстаток.ДокументПланирования.Контрагент КАК Контрагент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоступлениеДСОстатки.ДокументПланирования КАК ДокументПланирования,
	|		ПоступлениеДСОстатки.СуммаОстаток КАК СуммаПоступленияОстаток,
	|		ПоступлениеДСОстатки.СуммаУпрОстаток КАК СуммаУпрПоступленияОстаток,
	|		ПоступлениеДСОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовПоступленияОстаток,
	|       0 КАК СуммаРазмещенияОстаток
	|	ИЗ
	|		РегистрНакопления.ПланируемыеПоступленияДенежныхСредств.Остатки(&МоментВремени,"+СтрЗаменить(ТекстОтбора,"##","ДокументПланирования")+" ) КАК ПоступлениеДСОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументПланирования,
	|		0,
	|		0,
	|		0,
	|		РазмещениеЗаявокНаРасходованиеСредствОстатки.СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.РазмещениеЗаявокНаРасходованиеСредств.Остатки(&МоментВремени,"+СтрЗаменить(ТекстОтбора,"##","ДокументПланирования")+" ) КАК РазмещениеЗаявокНаРасходованиеСредствОстатки) КАК ПланируемоеПоступлениеОстаток
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланируемоеПоступлениеОстаток.ДокументПланирования";
	
	Для Каждого Параметр Из СтруктураПараметров Цикл
		
		Запрос.УстановитьПараметр(Параметр.Ключ,Параметр.Значение);
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("МоментВремени",МоментВремени());
	
	Возврат Запрос;
	
КонецФункции // СформироватьЗапрос()

// Добавляет в табличную часть документы планирования, по которым есть остатки в регистрах
// "ПланируемыеПоступленияДенежныхСредств" и (или) в регистре "РазмещениеЗаявокНаРасходованиеСредств"
//
Процедура ЗаполнитьДокументыПланированияПоОстаткам() Экспорт
	
	Запрос=СформироватьЗапрос();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ПланируемыеПоступленияДС.Добавить();
		НоваяСтрока.ДокументПланирования = Выборка.ДокументПланирования;
		НоваяСтрока.ВалютаПоступление=Выборка.ВалютаПоступление;
		НоваяСтрока.ОстатокПоступление=Выборка.ОстатокПоступление;
		НоваяСтрока.ОстатокРазмещение=Выборка.ОстатокРазмещение;
		НоваяСтрока.Контрагент=Выборка.Контрагент;
		НоваяСтрока.Ответственный=Выборка.Ответственный;
		
	КонецЦикла; 
		
КонецПроцедуры // ЗаполнитьЗаявкиПоОстаткам()

// Формирует движения по регистрам
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(Отказ, Заголовок)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ПланируемыеПоступленияКЗакрытию.ДокументПланирования КАК ДокументПланирования,
	|	ПланируемыеПоступленияКЗакрытию.ДокументПланирования.ВидОперации КАК ВидОперации,
	|	ПланируемыеПоступленияОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПланируемыеПоступленияОстатки.Сделка КАК Сделка,
	|	ПланируемыеПоступленияОстатки.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ПланируемыеПоступленияОстатки.Проект КАК Проект,
	|	ПланируемыеПоступленияОстатки.СуммаВзаиморасчетовОстаток КАК ОстатокРасчеты,
	|	ПланируемыеПоступленияОстатки.СуммаУпрОстаток КАК ОстатокРасчетыУпр,
	|	ПланируемыеПоступленияОстатки.СуммаОстаток КАК ОстатокСумма
	|ИЗ
	|	Документ.ЗакрытиеПланируемыхПоступленийДенежныхСредств.ПланируемыеПоступленияДС КАК ПланируемыеПоступленияКЗакрытию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПланируемыеПоступленияДенежныхСредств.Остатки КАК ПланируемыеПоступленияОстатки
	|		ПО ПланируемыеПоступленияКЗакрытию.ДокументПланирования = ПланируемыеПоступленияОстатки.ДокументПланирования
	|ГДЕ
	|	ПланируемыеПоступленияКЗакрытию.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	// Инициируем наборы движений по регистрам
		
	НаборДвиженийПоступление = Движения.ПланируемыеПоступленияДенежныхСредств;
	ТаблицаДвиженийПоступление = НаборДвиженийПоступление.Выгрузить();
	//01.04.2019 
	//НаборДвиженийРасчеты = Движения.РасчетыСКонтрагентами;
	//ТаблицаДвиженийРасчеты = НаборДвиженийРасчеты.Выгрузить();
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		Если НЕ (РезультатЗапроса.ОстатокСумма=NULL ИЛИ (РезультатЗапроса.ОстатокСумма=0 И РезультатЗапроса.ОстатокРасчеты=0 И РезультатЗапроса.ОстатокРасчетыУпр=0)) Тогда
			
			// По регистру "ПланируемыеПоступленияДенежныхСредств"
			
			СтрокаДвиженийЗаявки = ТаблицаДвиженийПоступление.Добавить();
			СтрокаДвиженийЗаявки .ДоговорКонтрагента           			= РезультатЗапроса.ДоговорКонтрагента;
			СтрокаДвиженийЗаявки .Сделка 								= РезультатЗапроса.Сделка;
			СтрокаДвиженийЗаявки .СуммаВзаиморасчетов      				= РезультатЗапроса.ОстатокРасчеты;
			СтрокаДвиженийЗаявки .СуммаУпр			      				= РезультатЗапроса.ОстатокРасчетыУпр;
			СтрокаДвиженийЗаявки .Сумма				      				= РезультатЗапроса.ОстатокСумма;
			СтрокаДвиженийЗаявки .ДокументПланирования                 	= РезультатЗапроса.ДокументПланирования;
			СтрокаДвиженийЗаявки .СтатьяДвиженияДенежныхСредств         = РезультатЗапроса.СтатьяДвиженияДенежныхСредств;
			СтрокаДвиженийЗаявки .Проект						        = РезультатЗапроса.Проект;
			
			//+++ 01.04.2019 ВЫКЛЮЧЕНО движение По регистру "РасчетыСКонтрагентами"
			//
			//Если НЕ РезультатЗапроса.ВидОперации=Перечисления.ВидыОперацийПланируемоеПоступлениеДС.ПриходДенежныхСредствРозничнаяВыручка Тогда 			
			//	
			//	РасчетыВозврат=НаправленияДвиженияДляДокументаДвиженияДенежныхСредствУпр(РезультатЗапроса.ВидОперации);

			//	СтрокаДвиженийРасчеты = ТаблицаДвиженийРасчеты.Добавить();
			//	СтрокаДвиженийРасчеты.ДоговорКонтрагента 	= РезультатЗапроса.ДоговорКонтрагента;
			//	СтрокаДвиженийРасчеты.РасчетыВозврат        = РасчетыВозврат;	
			//	СтрокаДвиженийРасчеты.Сделка			 	= РезультатЗапроса.Сделка;
			//	СтрокаДвиженийРасчеты.СуммаВзаиморасчетов   = РезультатЗапроса.ОстатокРасчеты;
			//	СтрокаДвиженийРасчеты.СуммаУпр			    = РезультатЗапроса.ОстатокРасчетыУпр;
			//	
			//КонецЕсли;
			
		КонецЕсли;
				
	КонецЦикла;
	
	// Записываем наборы движений в регистры
	// По регистру "ЗаявкиНаРасходованиеСредств"
	
	НаборДвиженийПоступление.мПериод            = Дата;
	НаборДвиженийПоступление.мТаблицаДвижений   = ТаблицаДвиженийПоступление;
	
	Движения.ПланируемыеПоступленияДенежныхСредств.ВыполнитьРасход();
	
	//01.04.2019 - По регистру "РасчетыСКонтрагентами"
	//НаборДвиженийРасчеты.мПериод            = Дата;
	//НаборДвиженийРасчеты.мТаблицаДвижений   = ТаблицаДвиженийРасчеты;
	//Движения.РасчетыСКонтрагентами.ВыполнитьПриход();
		
	//Закрываем размещение по заявкам
		
	НаборДвиженийРазмещение = Движения.РазмещениеЗаявокНаРасходованиеСредств;	
	ТаблицаДвиженийРазмещение = НаборДвиженийРазмещение.Выгрузить();
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ПланируемыеПоступленияКЗакрытию.ДокументПланирования КАК ДокументПланирования,
	|	РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументРезервирования КАК ДокументРезервирования,
	|	РазмещениеЗаявокНаРасходованиеСредствОстатки.СуммаОстаток КАК ОстатокРазмещение
	|ИЗ
	|	Документ.ЗакрытиеПланируемыхПоступленийДенежныхСредств.ПланируемыеПоступленияДС КАК ПланируемыеПоступленияКЗакрытию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаявокНаРасходованиеСредств.Остатки КАК РазмещениеЗаявокНаРасходованиеСредствОстатки
	|		ПО ПланируемыеПоступленияКЗакрытию.ДокументПланирования = РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументПланирования
	|ГДЕ
	|	ПланируемыеПоступленияКЗакрытию.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		Если НЕ (РезультатЗапроса.ОстатокРазмещение=NULL ИЛИ РезультатЗапроса.ОстатокРазмещение=0) Тогда
			
			// По регистру "РазмещениеЗаявокНаРасходованиеСредств"
			
			СтрокаДвиженийРазмещение = ТаблицаДвиженийРазмещение.Добавить();
			СтрокаДвиженийРазмещение.ДокументПланирования           			= РезультатЗапроса.ДокументПланирования;
			СтрокаДвиженийРазмещение.Сумма                						= РезультатЗапроса.ОстатокРазмещение;
			СтрокаДвиженийРазмещение.ДокументРезервирования                 	= РезультатЗапроса.ДокументРезервирования;
			
		КонецЕсли;
		
	КонецЦикла;
		
	НаборДвиженийРазмещение.мПериод            = Дата;
	НаборДвиженийРазмещение.мТаблицаДвижений   = ТаблицаДвиженийРазмещение;
	
	Движения.РазмещениеЗаявокНаРасходованиеСредств.ВыполнитьРасход();
					
КонецПроцедуры // ДвиженияПоРегистрам()

Процедура ОбработкаПроведения(Отказ, Режим)

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, Новый Структура("Ответственный,Состояние"), Отказ, Заголовок);
	
	Если Не Отказ Тогда
		
		ДвиженияПоРегистрам(Отказ, Заголовок);
		
	КонецЕсли; 
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ Отказ Тогда
	
		обЗаписатьПротоколИзменений(ЭтотОбъект);
	
	КонецЕсли; 

КонецПроцедуры


 
 