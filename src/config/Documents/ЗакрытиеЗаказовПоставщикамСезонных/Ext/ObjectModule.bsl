
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("СписокЗаказов", Заказы.ВыгрузитьКолонку("ЗаказПоставщикуСезонный"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
	               |	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток,
	               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(&Период, ЗаказПоставщикуСезонный В (&СписокЗаказов)) КАК ЗаказыПоставщикамСезонныеОстатки
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	Результат = Запрос.Выполнить().Выгрузить();
	Для каждого СтрЗаказ ИЗ Заказы Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("ЗаказПоставщикуСезонный", СтрЗаказ.ЗаказПоставщикуСезонный);
		СтрокиТЗ = Результат.НайтиСтроки(Отбор);
		Для Каждого СтрТЗ ИЗ СтрокиТЗ Цикл
			Движение = Движения.ЗаказыПоставщикамСезонные.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата; 
			Движение.ЗаказПоставщикуСезонный = СтрЗаказ.ЗаказПоставщикуСезонный;
			Движение.Номенклатура = СтрТЗ.Номенклатура;
			Движение.Количество   = СтрТЗ.КоличествоОстаток * (-1); //сторно
			Если СтрЗаказ.ЗаказПоставщикуСезонный.Дата >= Дата("20170101000000") Тогда
			Движение.Подразделение = СтрЗаказ.ЗаказПоставщикуСезонный.Подразделение; 
			Движение.ВЭД = СтрЗаказ.ЗаказПоставщикуСезонный.Подразделение.ВЭД;
			конецЕсли;
			Движение.Дата = Дата;
		КонецЦикла;
	КонецЦикла;	
	
	
	
	Движения.ВзаиморасчетыСКонтрагентами.Записывать = Истина;
	Движения.ВзаиморасчетыСКонтрагентами.Очистить();
	
	
	
	Сделки = Новый СписокЗначений;
	для каждого стр из Заказы Цикл
	Сделки.Добавить(стр.ЗаказПоставщикуСезонный.ЗаказДубль);	
	конецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВал,
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаРуб,
	|	ВзаиморасчетыСКонтрагентамиОстатки.Сделка КАК Заказ
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата, Сделка В (&Сделки)) КАК ВзаиморасчетыСКонтрагентамиОстатки";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Сделки", Сделки);
	
	Результат = Запрос.Выполнить();
	
	Если не результат.Пустой()>0 Тогда	
		 НаборДвижений = Движения.ВзаиморасчетыСКонтрагентами;
	     ТаблицаДвижений = НаборДвижений.Выгрузить();
	     ТаблицаДвижений.Очистить();

		 выборка=Результат.Выбрать();
		пока Выборка.Следующий() Цикл 
		
		СтрокаДвижений = ТаблицаДвижений.Добавить();
		СтрокаДвижений.ДоговорКонтрагента  = Выборка.Заказ.Договорконтрагента;
		СтрокаДвижений.Сделка              = Выборка.Заказ;
		СтрокаДвижений.СуммаВзаиморасчетов = -Выборка.СуммаВал;
		СтрокаДвижений.СуммаУпр            = -Выборка.СуммаРуб;
		
		СтрокаДвижений = ТаблицаДвижений.Добавить();
		СтрокаДвижений.ДоговорКонтрагента  = Выборка.Заказ.Договорконтрагента;
		СтрокаДвижений.Сделка              = неопределено;
		СтрокаДвижений.СуммаВзаиморасчетов = Выборка.СуммаВал;
		СтрокаДвижений.СуммаУпр            = Выборка.СуммаРуб;
	   конецЦикла;
		НаборДвижений.мПериод            = дата;
		НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;
		Движения.ВзаиморасчетыСКонтрагентами.ВыполнитьПриход();
		
	конецЕсли;
	

КонецПроцедуры
