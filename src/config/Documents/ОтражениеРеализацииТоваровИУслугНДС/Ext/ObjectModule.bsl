Перем мВалютаРегламентированногоУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	СтруктураОбязательныхПолей = Новый Структура("Организация, Контрагент, ДоговорКонтрагента");

	// Теперь позовем общую процедуру проверки.
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
// Параметры: 
//  РезультатЗапросаПоТоварам - результат запроса по табличной части "Товары",
//  СтруктураШапкиДокумента   - выборка по результату запроса по шапке документа.
//
// Возвращаемое значение:
//  Сформированная таблиица значений.
//
Функция ПодготовитьТаблицуТоваров(РезультатЗапросаПоТоварам, СтруктураШапкиДокумента)

	ТаблицаТоваров = РезультатЗапросаПоТоварам.Выгрузить();

	ТаблицаТоваров.Колонки.Добавить("Период");
	ТаблицаТоваров.Колонки.Добавить("Активность");
	ТаблицаТоваров.Колонки.Добавить("ВидЦенности");
	ТаблицаТоваров.Колонки.Добавить("Организация");
	ТаблицаТоваров.Колонки.Добавить("Покупатель");
	ТаблицаТоваров.Колонки.Добавить("Событие");
	ТаблицаТоваров.Колонки.Добавить("СчетФактура");

	ТаблицаТоваров.ЗаполнитьЗначения(СтруктураШапкиДокумента.Организация,         "Организация");
	ТаблицаТоваров.ЗаполнитьЗначения(СтруктураШапкиДокумента.Контрагент,          "Покупатель");
	ТаблицаТоваров.ЗаполнитьЗначения(СтруктураШапкиДокумента.Ссылка,			  "СчетФактура");
	ТаблицаТоваров.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПродажи.НДСНачисленКУплате, "Событие");

	Для Каждого СтрокаТД Из ТаблицаТоваров Цикл
		СтрокаТД.ВидЦенности = ОпределитьВидЦенности(СтрокаТД.Номенклатура, "");
	КонецЦикла;

	Возврат ТаблицаТоваров;

КонецФункции // ПодготовитьТаблицуТоваров()

// Проверяет правильность заполнения строк табличной части "Товары".
//
// Параметры:
// Параметры: 
//  ТаблицаПоТоварам        - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении.
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиТовары(ТаблицаПоТоварам, СтруктураШапкиДокумента, Отказ, Заголовок)

	ИмяТабличнойЧасти = "ТоварыИУслуги";

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Номенклатура, Сумма, СтавкаНДС, СуммаНДС");

	// Теперь вызовем общую процедуру проверки.
	ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, ИмяТабличнойЧасти, СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// Процедура выполняет движения по регистрам
//
Процедура ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, ТаблицаПоТоварам, Отказ, Заголовок)

	Движения.НДСПродажи.мПериод          = Дата;
	Движения.НДСПродажи.мТаблицаДвижений = ТаблицаПоТоварам;

	Движения.НДСПродажи.ДобавитьДвижение();
	
	Если ТипЗнч(СтруктураШапкиДокумента.РасчетныйДокумент) = Тип("ДокументСсылка.ВводНачальныхОстатковНДС") Тогда
		// Если это режим ввода начальных остатков, то необходимо провести документ по взаиморасчетам
		ДокОснованиеОбъект = СтруктураШапкиДокумента.РасчетныйДокумент.ПолучитьОбъект();
		
		СтруктураПолей = Новый Структура;
		СтруктураПолей.Вставить("СчетФактура", "СчетФактура");
		СтруктураПолей.Вставить("СуммаБезНДС", "СуммаБезНДС");
		СтруктураПолей.Вставить("НДС", 		   "НДС");

		РезультатЗапросаПоТабЧасти = СформироватьЗапросПоТабличнойЧасти(ДокОснованиеОбъект, "ДанныеПоСФ", СтруктураПолей);
		
		СформироватьДвиженияВводаОстатковПоРегиструВзаиморасчетыСПокупателямиДляНДС(СтруктураШапкиДокумента, РезультатЗапросаПоТабЧасти.Выгрузить(), Отказ, Заголовок);
		
	КонецЕсли;


КонецПроцедуры // ДвиженияПоРегистрам()

// Процедура формирования движений по регистру Взаиморасчеты с покупателями для НДС при вводе
// остатков НДС по авансам и задолженностям покупателей.
//
Процедура СформироватьДвиженияВводаОстатковПоРегиструВзаиморасчетыСПокупателямиДляНДС(СтруктураШапкиДокумента, ТаблицаДокументаОснования, Отказ,Заголовок)
	
	ТаблицаДвиженийПокупатели = Движения.ВзаиморасчетыСПокупателямиДляНДС.Выгрузить();
	ТаблицаДвиженийПокупатели.Очистить();
	
	ТаблицаДокументаОснования.Свернуть("СчетФактура", "СуммаБезНДС, НДС");
	
	СтрокаДок = ТаблицаДокументаОснования.Найти(СтруктураШапкиДокумента.Ссылка, "СчетФактура");
	
	Если СтрокаДок <> Неопределено Тогда
		СтрокаДвижения = ТаблицаДвиженийПокупатели.Добавить();
		
		СтрокаДвижения.Организация = СтруктураШапкиДокумента.Организация;
		СтрокаДвижения.ДоговорКонтрагента = СтруктураШапкиДокумента.ДоговорКонтрагента;
		СтрокаДвижения.Сделка = СтруктураШапкиДокумента.Сделка;
		СтрокаДвижения.Сумма = СтрокаДок.СуммаБезНДС + СтрокаДок.НДС;
		
	КонецЕсли;
		
	Если ТаблицаДвиженийПокупатели.Количество() > 0 Тогда
		Движения.ВзаиморасчетыСПокупателямиДляНДС.мПериод          = Дата;
		Движения.ВзаиморасчетыСПокупателямиДляНДС.мТаблицаДвижений = ТаблицаДвиженийПокупатели;
		Движения.ВзаиморасчетыСПокупателямиДляНДС.ВыполнитьПриход();
		Движения.ВзаиморасчетыСПокупателямиДляНДС.Записать();
	КонецЕсли;
	
КонецПроцедуры // СформироватьДвиженияВводаОстатковПоРегиструВзаиморасчетыСПокупателямиДляНДС()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура вызывается перед записью документа 
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = ТоварыИУслуги.Итог("Сумма") + ТоварыИУслуги.Итог("СуммаНДС");
	
	Если НЕ Отказ Тогда
	
		обЗаписатьПротоколИзменений(ЭтотОбъект);
	
	КонецЕсли; 

	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = "Проведение документа """ + СокрЛП(Ссылка) + """: ";

	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);

	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура", "Номенклатура");
	СтруктураПолей.Вставить("СуммаБезНДС" , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"   , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"         , "СуммаНДС");

	РезультатЗапросаПоТоварам = СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ТоварыИУслуги", СтруктураПолей);

	// Подготовим таблицу товаров для проведения.
	ТаблицаПоТоварам = ПодготовитьТаблицуТоваров(РезультатЗапросаПоТоварам, СтруктураШапкиДокумента);

	ПроверитьЗаполнениеТабличнойЧастиТовары(ТаблицаПоТоварам, СтруктураШапкиДокумента, Отказ, Заголовок);

	Если Не Отказ Тогда
		ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, ТаблицаПоТоварам, Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
