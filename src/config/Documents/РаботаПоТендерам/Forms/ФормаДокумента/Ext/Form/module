
Процедура СписокЗаказовНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ложь;
	
	форма1 = этотОбъект.ПолучитьФорму("ФормаСпискаЗаказов");
	форма1.ОткрытьМодально();
	
	СписокЗаказов = "";
	для каждого стр1 из ЭтотОбъект.Заказы цикл
	СписокЗаказов = СписокЗаказов + стр1.ЗаказПокупателя.Номер+", ";
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказамНажатие(Элемент)
	Если Заказы.Количество()=0 тогда
		Предупреждение("Список заказов покупателей - пуст!", 60);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	               |	СУММА(ЗаказПокупателяТовары.Количество) КАК Количество,
	               |	ВЫРАЗИТЬ(СУММА(ЗаказПокупателяТовары.Сумма) / СУММА(ЗаказПокупателяТовары.Количество) КАК ЧИСЛО(15, 2)) КАК Цена,
	               |	СУММА(ЗаказПокупателяТовары.Сумма) КАК Сумма,
	               |	МИНИМУМ(ЗаказПокупателяТовары.НомерСтроки) КАК НомерСтроки
	               |ИЗ
	               |	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |ГДЕ
	               |	ЗаказПокупателяТовары.Ссылка В(&СписЗак)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказПокупателяТовары.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
				   //Задача №26960
	               |	НомерСтроки
	               |АВТОУПОРЯДОЧИВАНИЕ";
	СписЗак = Заказы.ВыгрузитьКолонку("ЗаказПокупателя");
	Запрос.УстановитьПараметр("СписЗак", СписЗак);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Товары.Очистить();
	Пока Выборка.Следующий() Цикл
	      стр1 = Товары.Добавить();
	 ЗаполнитьЗначенияСвойств(стр1,выборка);
	КонецЦикла;
 
	ПересчетНажатие(Элемент); // пересчет тр.затрат / Вход / VIP 

КонецПроцедуры






//если Элемент = неопределено  - расчет только наценок
Процедура ПересчетНажатие(Элемент)
	
// 1) пересчет суммы тр.--------------------------------------------
	суммаИтог =товары.Итог("Сумма"); 
	для каждого стр1 из Товары цикл
	  стр1.СуммаТр  = ?(суммаИтог=0, 0, Окр(СуммаТрЗатрат * стр1.Сумма/суммаИтог,2) ); // до копеек!
	  стр1.СуммаСТр = стр1.Сумма + стр1.СуммаТр;
	  стр1.ЦенаТр   = ?( стр1.Количество=0, стр1.СуммаСтр, стр1.СуммаСтр / стр1.Количество);
	  //обратный пересчет
	  стр1.СуммаСтр = стр1.ЦенаТр * стр1.Количество;
	  стр1.СуммаТр  = стр1.СуммаСтр - стр1.Сумма; //уменьшаем сумму!
 	КонецЦикла;
	
//==========корректировка тр.затрат=======================	
суммаТр = товары.Итог("СуммаТр");
delta = суммаТр - СуммаТрЗатрат;
если delta<>0 тогда
	стр0 = неопределено; максСумма = 0;
	для каждого стр1 из Товары цикл
		если стр1.Сумма>максСумма тогда
			стр0 = стр1; максСумма = стр1.Сумма;
		КонецЕсли;	
	КонецЦикла;	
	стр0.СуммаТр = 	стр0.СуммаТр - delta;
	стр0.СуммаСтр=  стр0.СуммаСтр- delta;
	стр0.ЦенаТр  =  ?( стр0.Количество=0, стр0.СуммаСтр, стр0.СуммаСтр/стр0.Количество);
	  //обратный пересчет
	  стр0.СуммаСтр = стр0.ЦенаТр * стр0.Количество;
	  стр0.СуммаТр  =  стр0.СуммаСтр - стр0.Сумма;
КонецЕсли;


Если Элемент<>неопределено тогда //-------------пересчет 1 раз делается!------------
	
	списТов = Товары.ВыгрузитьКолонку("Номенклатура");
	
// 2) поиск цен Входа -----------------------------------------------
 ТабЗнач   = ПолучитьЦены(списТов, -1);
 ТабСебест = ПолучитьЦеныСебест(списТов);
 Для каждого стр1 из Товары цикл
	 стр2 = табЗнач.найти(стр1.Номенклатура, "Номенклатура");
	 если стр2<>неопределено тогда
		 если стр2.ЦенаПоТипуЦен <> стр2.ЦенаСоСкидкойПредоплаты тогда
		 стр1.ЦенаВход  = стр2.ЦенаСоСкидкойПредоплаты; // Вход + Бонус (каскадом)
	 	 Иначе //----------------Себестоимость!------------------
			стр3 = ТабСебест.найти(стр1.Номенклатура, "Номенклатура");
			если стр3<>неопределено тогда
			стр1.ЦенаВход  =  стр3.Цена;
			иначе
			стр1.ЦенаВход  = стр2.ЦенаПоТипуЦен; // Базовая / Кр.Опт
	 	 	КонецЕсли;	
		 КонецЕсли;
		 стр1.СуммаВход = стр1.Количество * стр1.ЦенаВход;
	 КонецЕсли;	 
 КонецЦикла;
 
// 3) поиск цен VIP  ------------------------------------------------
ТабЗнач  = ПолучитьЦены(списТов, 0);
 Для каждого стр1 из Товары цикл
	 стр2 = табЗнач.найти(стр1.Номенклатура, "Номенклатура");
	 если стр2<>неопределено тогда
		 если ДоговорКонтрагента.ТипДоговора = Справочники.ТипыДоговоров.НайтиПоКоду("00001") тогда
		 стр1.ЦенаVIP  = стр2.ЦенаСоСкидкойПредоплаты; // VIP-кидка + Скидка предоплаты (каскадом)
		 иначе
		 стр1.ЦенаVIP  = стр2.МинимальнаяЦена; // ТОЛЬКО VIP-кидка
		 КонецЕсли;
		 стр1.СуммаVIP = стр1.Количество * стр1.ЦенаVIP;
	 КонецЕсли;	 
 КонецЦикла;
   
  //4) пересчет нижней таблицы ---------------------------------------
  Порог = товары.Итог("СуммаVIP") + СуммаТрЗатрат;
  СуммаЛотаПриИзменении(неопределено);
КонецЕсли;


// 5) пересчет наценок от входа--------------------------------------
 Для каждого стр1 из Товары цикл
	  Если  стр1.СуммаВход=0 тогда // вход = VIP
		  стр1.СуммаВход = стр1.СуммаVIP;
	  КонецЕсли;
	  
	  Если  стр1.СуммаВход>0 тогда // просто наценку
		  стр1.НаценкаСумма = стр1.Сумма - стр1.СуммаВход;
		  стр1.НаценкаVIPсумма = стр1.СуммаVIP - стр1.СуммаВход;
		  
		  стр1.Наценка    = (стр1.Сумма / стр1.СуммаВход - 1)*100;
		  стр1.НаценкаVIP = (стр1.СуммаVIP/стр1.СуммаВход- 1)*100;
	  Иначе
		  стр1.НаценкаСумма = стр1.Сумма;
		  стр1.НаценкаVIPсумма = стр1.СуммаVIP;
		  стр1.Наценка    = 100;
		  стр1.НаценкаVIP = 0;
	  КонецЕсли;	
  КонецЦикла;


КонецПроцедуры

//11.05.2017 - расчет себест всегда на тек.дату (по нажатию на кнопку!) 
функция ПолучитьЦеныСебест( списТов )
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПартииТоваровНаСкладахОстатки.Номенклатура,
	               |	выбор когда ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоОстаток, 1) =0 тогда 0
				   |	иначе выразить( ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток, 0) / ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоОстаток, 1) как число(15,2)) 
				   |	Конец КАК Цена
	               |ИЗ
	               |	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
				   //&Дата
				   |			, Номенклатура В (&СписТов)    
				   |		) КАК ПартииТоваровНаСкладахОстатки";
	//Запрос.УстановитьПараметр("Дата", этотОбъект.Дата);
	Запрос.УстановитьПараметр("списТов",списТов);
 	Результат = Запрос.Выполнить();
	таб   = Результат.Выгрузить();
	возврат таб;
КонецФункции

функция ПолучитьЦены(списТов, ТипЦен = 0)
		//--------------общие правила с макс скидкой---------------
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПравилаЦенообразованияОбщие.Приоритет,
	|	ПравилаЦенообразованияОбщие.ВидТовара,
	|	ПравилаЦенообразованияОбщие.Производитель,
	|	ПравилаЦенообразованияОбщие.НоменклатурнаяГруппа,
	|	ПравилаЦенообразованияОбщие.ВходитВПапку,
	|	ПравилаЦенообразованияОбщие.Диаметр,
	|	ПравилаЦенообразованияОбщие.Номенклатура,
	|	ПравилаЦенообразованияОбщие.ТипЦен,
	|	ПравилаЦенообразованияОбщие.ПодСтрока, 
	
	//+++ 05.07.2016	
	|	 ПравилаЦенообразованияОбщие.ВидДефектаДляУценки,
	
	|0 //типЦен
	
	|ИЗ
	|	РегистрСведений.ПравилаЦенообразованияОбщие КАК ПравилаЦенообразованияОбщие
	|ГДЕ ПравилаЦенообразованияОбщие.Категория = Значение(перечисление.категорииСкидок.VIP)";
	
	Если ТипЦен=-1 тогда
	 Запрос.Текст = стрЗаменить(Запрос.Текст , "0 //типЦен", "ПравилаЦенообразованияОбщие.Вход как СкидкаНаценка,
	 														 |ПравилаЦенообразованияОбщие.Бонус как СкидкаПредоплаты");

    ИначеЕсли ТипЦен=0 тогда
	 Запрос.Текст = стрЗаменить(Запрос.Текст , "0 //типЦен", "ПравилаЦенообразованияОбщие.СкидкаНаценка как СкидкаНаценка,
	 														 |ПравилаЦенообразованияОбщие.СкидкаПредоплаты как СкидкаПредоплаты");
	иначе
	возврат неопределено;														 
	КонецЕсли;
 	Результат = Запрос.Выполнить();
	ТекущаяПолитикаПравила = Результат.Выгрузить();
	
	контр = справочники.Контрагенты.ПустаяСсылка();
	таб   = ОбменСУТИнтернетМагазин.ПолучитьЦеныДляКонтрагента_РегСв( контр, списТов, ЛОЖЬ, ТекущаяПолитикаПравила);

	возврат таб;
	
КонецФункции	

//при изменении кол-ва или цены - происходит перераспределение тр.затрат!
Процедура ТоварыКоличествоПриИзменении(Элемент)
	стр1 = ЭлементыФормы.Товары.ТекущиеДанные;
	стр1.сумма = стр1.Количество * стр1.Цена;
	ПересчетНажатие(неопределено);
КонецПроцедуры

Процедура ТоварыСуммаПриИзменении(Элемент)
	стр1 = ЭлементыФормы.Товары.ТекущиеДанные;
	стр1.Цена = стр1.Сумма / стр1.Количество;
	стр1Сумма = стр1.Сумма;
	стр1.Сумма = стр1.Цена*стр1.Количество;
	Если стр1.Сумма<>стр1Сумма тогда
		Предупреждение("Нельзя ввести сумму "+строка(стр1Сумма)+", которая не кратна количеству!", 60);
	КонецЕсли;	
	ПересчетНажатие(неопределено);
КонецПроцедуры

Процедура ТоварыСуммаТрПриИзменении(Элемент)
	стр1 = ЭлементыФормы.Товары.ТекущиеДанные;
	стр1.СуммаСтр = стр1.Сумма + стр1.СуммаТр;
	стр1.ЦенаТр   = окр(стр1.СуммаСтр/стр1.Количество,2);
	
	стр1.СуммаСтр = стр1.ЦенаТр * стр1.Количество;
	стр1.Сумма   = стр1.СуммаСтр - стр1.СуммаТр; //меняем сумму
КонецПроцедуры


Процедура ТоварыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.ячейки.Код.Значение = ДанныеСтроки.Номенклатура.Код;
КонецПроцедуры

//===================Заполнение средней и нижней части =========================
Процедура СуммаЛотаПриИзменении(Элемент)
	Шаг1 = Окр( СуммаЛота * 0.995, 0);
	Шаг2 = Окр( СуммаЛота * (1 + Шаг2проц/100),0);
	Шаг5 = Окр(СуммаЛота * 0.95,0);
	
	если СуммаЛота>0 тогда
	ШагПредел = (Порог/СуммаЛота - 1)*100;
	ЭлементыФормы.ШагПредел.Заголовок = "Предельный шаг: "+формат(ШагПредел,"ЧДЦ=2");
	КонецЕсли;

	ТабЗнач = новый ТаблицаЗначений;
	ТабЗнач.Колонки.Добавить("Шаг");
	ТабЗнач.Колонки.Добавить("Сумма");
	стр0 = ТабЗнач.Добавить();  стр0.Шаг = "0%"; стр0.Сумма =  СуммаЛота;
	стр0 = ТабЗнач.Добавить();  стр0.Шаг = "-0,5%"; стр0.Сумма =  Шаг1;
	стр0 = ТабЗнач.Добавить();  стр0.Шаг = строка(Шаг2Проц)+"%"; стр0.Сумма =  Шаг2;
	стр0 = ТабЗнач.Добавить();  стр0.Шаг = "-5%"; стр0.Сумма =  Шаг5;
	
	стр0 = ТабЗнач.Добавить();  стр0.Шаг = ЭлементыФормы.ШагПредел.Заголовок; стр0.Сумма =  Порог;
	
	СуммаВход = Товары.Итог("СуммаВход");
	СуммаВход = ?(СуммаВход=0, Порог - СуммаТрЗатрат, СуммаВход);
	ТабличноеПоле1.Очистить();
	для каждого стр1 из ТабЗнач цикл
	стр0 = ТабличноеПоле1.Добавить();
	стр0.Шаг = стр1.Шаг;
	стр0.Сумма  = стр1.Сумма;
	стр0.СуммаБезТр   = стр1.Сумма - СуммаТрЗатрат;
	стр0.НаценкаСумма = стр0.СуммаБезТр - СуммаВход;
	стр0.Наценка      = ?(СуммаВход=0, -100, 100*( стр0.СуммаБезТр/СуммаВход - 1) );
	КонецЦикла;
//================== расцветка ==================
Если СуммаЛота<Порог тогда
	ЭлементыФормы.СуммаЛота.ЦветТекстаПоля = webЦвета.Красный;
иначе 	ЭлементыФормы.СуммаЛота.ЦветТекстаПоля = webЦвета.Черный;
КонецЕсли;
Если Шаг1<Порог тогда
	ЭлементыФормы.Шаг1.ЦветТекстаПоля = webЦвета.Красный;
иначе 	ЭлементыФормы.Шаг1.ЦветТекстаПоля = webЦвета.Черный;
КонецЕсли;
Если Шаг2<Порог тогда
	ЭлементыФормы.Шаг2.ЦветТекстаПоля = webЦвета.Красный;
иначе 	ЭлементыФормы.Шаг2.ЦветТекстаПоля = webЦвета.Черный;
КонецЕсли;
Если Шаг5<Порог тогда
	ЭлементыФормы.Шаг5.ЦветТекстаПоля = webЦвета.Красный;
иначе 	ЭлементыФормы.Шаг5.ЦветТекстаПоля = webЦвета.Черный;
КонецЕсли;
   ЭтаФорма.Обновить();
   
//---------Автоматический обратный пересчет товаров--------   
   Если НЕ ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗаполнитьТовары.Доступность тогда
   ЗаполнитьТоварыНажатие(неопределено);
   КонецЕсли;
   
КонецПроцедуры

//изменение  шага 2
Процедура Шаг2процРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Элемент.Значение = Элемент.Значение  + Направление*0.5;
	 если Элемент.Значение>-0.5 тогда
		Элемент.Значение = -0.5;
	КонецЕсли;	 
	 если Элемент.Значение<-5 тогда
		Элемент.Значение = -5;
	КонецЕсли;	 

	Шаг2процПриИзменении(неопределено);
	
КонецПроцедуры

Процедура Шаг2процПриИзменении(Элемент)
	
	шаг2 = Окр(СуммаЛота * (1 + Шаг2проц/100),0);
	
	Если Шаг2<Порог тогда   //подсветка крастым
	ЭлементыФормы.Шаг2.ЦветТекстаПоля = webЦвета.Красный;
	иначе 	ЭлементыФормы.Шаг2.ЦветТекстаПоля = webЦвета.Черный;
	КонецЕсли;
	
	стр0 = ТабличноеПоле1[2]; 	СуммаВход = Товары.Итог("СуммаВход");
	стр0.Шаг    = строка(Шаг2Проц)+"%";
	стр0.Сумма  = Шаг2;
	стр0.СуммаБезТр   = Шаг2 - СуммаТрЗатрат;
	стр0.НаценкаСумма = стр0.СуммаБезТр - СуммаВход;
	стр0.Наценка      = ?(СуммаВход=0, -100, 100*( стр0.СуммаБезТр/СуммаВход - 1) );
КонецПроцедуры

Процедура шаг2ПриИзменении(Элемент)
	Шаг2проц = (шаг2/СуммаЛота - 1)*100;
КонецПроцедуры


//------------кнопки << -----------------------
Процедура Кнопка1Нажатие(Элемент)
	СуммаЛота = Шаг1;
	СуммаЛотаПриИзменении(Элемент);
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	СуммаЛота = Шаг2;
	СуммаЛотаПриИзменении(Элемент);
КонецПроцедуры

Процедура Кнопка5Нажатие(Элемент)
	СуммаЛота = Шаг5;
	СуммаЛотаПриИзменении(Элемент);
КонецПроцедуры

//обратное заполнение сумм и цен товаров
Процедура ЗаполнитьТоварыНажатие(Элемент)
	
	Сумма0 = Товары.Итог("СуммаСтр");
	Сумма1 = СуммаЛота;
	для каждого стр1 из Товары цикл
		стр1.СуммаСтр = Окр(стр1.СуммаСтр*Сумма1/Сумма0,0);
		стр1.ЦенаТр   = Окр(стр1.СуммаСтр / стр1.Количество,0);
		стр1.СуммаСтр = стр1.ЦенаТр*стр1.Количество;
	КонецЦикла;	
	
//==========корректировка Суммы=======================	
сумма0 = товары.Итог("СуммаСтр");
delta = сумма0 - Сумма1;
если delta<>0 тогда
	стр0 = неопределено; максСумма = 0;
	для каждого стр1 из Товары цикл
		если стр1.СуммаСтр>максСумма тогда
			стр0 = стр1; 
			максСумма = стр1.СуммаСтр;
		КонецЕсли;	
	КонецЦикла;	
	d0= стр0.СуммаСтр;
	стр0.СуммаСтр = стр0.СуммаСтр - delta;   //все копейки на 1 строку
	стр0.ЦенаТр   = Окр(стр0.СуммаСтр / стр0.Количество,2);
	стр0.СуммаСтр = стр0.ЦенаТр*стр0.Количество;
	
	delta =  delta - (стр0.СуммаСтр - d0);
	
	Сообщить("Скорректирована 1-я строка № "+строка(стр0.НомерСтроки)+" на "+строка( (стр0.СуммаСтр - d0) )+"р.");

КонецЕсли;

сумма0 = товары.Итог("СуммаСтр");
delta =  сумма0 - Сумма1;
//Предупреждение("ЕСТЬ Ошибки округления "+формат(delta,"ЧДЦ=2")+" р. !", 60);	

//--------------------------2-я строка-----------------------------------------------	
Если delta<>0 тогда 
	Если delta>0 тогда  //лишнего НЕ Надо
		стр0.ЦенаТр  = стр0.ЦенаТр - 0.01;  //уменьшаем цену
		d0 = стр0.СуммаСтр;
		стр0.СуммаСтр = стр0.ЦенаТр*стр0.Количество;
		delta =  delta - (d0 - стр0.СуммаСтр); 
		Сообщить("Уменьшена цена тр. строки № "+строка(стр0.НомерСтроки)+" на 1 коп. для исключения превышения суммы товаров.");
	КонецЕсли;

	delta2 = ?(delta<0,-delta,delta)*100; ост0 = 1000000;
	для каждого стр1 из Товары цикл
		ост = delta2%стр1.Количество;
		Если ост=0 тогда
			стр1.ЦенаТр =стр1.ЦенаТр - delta/стр1.Количество;
			d0 =стр1.СуммаСтр;
			стр1.СуммаСтр = стр1.ЦенаТр*стр1.Количество;
			delta = 0;
			Сообщить("Скорректирована 2-я строка № "+строка(стр1.НомерСтроки)+" на "+строка((стр1.СуммаСтр - d0))+"р.");
			прервать;
		ИначеЕсли ост<ост0 и Цел(delta2/стр1.Количество)>0 тогда  //ищем мин.остаток копеек
			ост0=ост;
			стр0 = стр1; 
		КонецЕсли;	
	КонецЦикла;	
	
	Если delta<>0 тогда 
	//	стр0.Цена = стр0.Цена - Цел(delta*100/стр0.Количество)/100;      //для 2х итераций
		стр0.ЦенаТр = стр0.ЦенаТр - Цел(delta*100/стр0.Количество)/100-0.01; //  для 3-ей итерации!
		d0 = стр0.СуммаСтр;
		стр0.СуммаСтр = стр0.ЦенаТр*стр0.Количество;
		delta =  delta + (стр0.СуммаСтр - d0);
		Сообщить("Скорректирована 2-я строка № "+строка(стр1.НомерСтроки)+" на "+строка((стр0.СуммаСтр - d0))+"р., но осталось распределить "+строка(-delta*100)+" коп." );
		
//Предупреждение("ЕСТЬ Ошибки округления "+формат(delta,"ЧДЦ=2")+" р. !", 60);	

//--------------------------3-я строка------------------------------------	
	delta3 = ?(delta<0,-delta,delta)*100; ост0 = 1000000;
	для каждого стр1 из Товары цикл
		ост = delta3%стр1.Количество;
		Если ост=0 тогда
			стр1.ЦенаТр =стр1.ЦенаТр - delta/стр1.Количество;
			d0 = стр1.СуммаСтр;
			стр1.СуммаСтр = стр1.СуммаСтр*стр1.Количество;
			delta = 0;
			Сообщить("Скорректирована 3-я строка № "+строка(стр1.НомерСтроки)+" на "+строка((стр1.СуммаСтр - d0))+"р.");
			прервать;
		ИначеЕсли ост<ост0 и Цел(delta3/стр1.Количество)>0 тогда  //ищем мин.остаток копеек
			ост0=ост;
			стр0 = стр1; 
		КонецЕсли;	
	КонецЦикла;	
	Если delta<>0 тогда 
	стр0.ЦенаТр = стр0.ЦенаТр - Цел(delta*100/стр0.Количество)/100;   //delta < 0      -0.01  для 3-ей итерации!
	d0 = стр0.СуммаСтр;
	стр0.СуммаСтр = стр0.ЦенаТр*стр0.Количество;
	delta =  delta + (стр0.СуммаТр - d0);
	Сообщить("Скорректирована 3-я строка № "+строка(стр1.НомерСтроки)+" на "+строка((стр0.СуммаТр - d0))+"р., но осталось распределить "+строка(-delta*100)+" коп." );
		Предупреждение("ЕСТЬ Ошибки округления "+формат(delta,"ЧДЦ=2")+" р. !", 60);	
	иначе
		Предупреждение("Сумма полностью распределена по товарам.", 60);	
	КонецЕсли;//3
//---------------конец-----------3-я строка------------------------------------	
	
	
	Иначе
		Предупреждение("Сумма полностью распределена по товарам.", 60);	
	КонецЕсли;//2
	
иначе
	Предупреждение("Сумма полностью распределена по товарам.", 60);	
КонецЕсли;//2

//+++ 23.05.2017 - пересчет обратно
для каждого стр1 из Товары цикл
	стр1.Сумма = стр1.СуммаСтр - стр1.СуммаТр;
	стр1.Цена  = Окр(стр1.Сумма / стр1.Количество,2);
	стр1.Сумма = стр1.Цена*стр1.Количество
КонецЦикла;	

//Если ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗаполнитьТовары.Доступность тогда	
//	Если вопрос("Выполнять автоматический пересчет при изменении Суммы Лота?", РежимДиалогаВопрос.ДаНет,0)=КодВозвратаДиалога.Да тогда
//		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗаполнитьТовары.Доступность = ложь;
//	КонецЕсли;
//КонецЕсли;

КонецПроцедуры


Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ложь;
	
	ФормаВыбора = справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора(,Элемент,);
	ФормаВыбора.ПараметрОтборПоВладельцу = Контрагент;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;
	ФормаВыбора.ОткрытьМодально();
	
	Если вопрос("После изменения договора требуется перезаполнить таблицу! 
				 |Выполнить полный пересчет всех цен по списку заказов?", РежимДиалогаВопрос.ДаНет,0)=КодВозвратаДиалога.Да тогда
	ПересчетНажатие(Элемент);
	КонецЕсли;
	
КонецПроцедуры


//=====================функции формы===============================
Процедура ПриОткрытии()
	Шаг2проц = -2;
	СуммаЛотаПриИзменении(неопределено);
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	если заказы.Количество()>0 тогда
		Организация   = заказы[0].ЗаказПокупателя.Организация;	
		Подразделение = заказы[0].ЗаказПокупателя.Подразделение;	
	КонецЕсли;
	Ответственный = глТекущийПользователь;
	
	Если не Отказ и РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
	ПровестиЗаказы(Отказ);
	КонецЕсли;
	
КонецПроцедуры

 //проверяем уже существующее количество
функция ПолучитьСтарыеОстаткиПоставщика(ДляТендеров, списТов)
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	ОстаткиНоменклатурыКонтрагентов.Номенклатура,
				|	ОстаткиНоменклатурыКонтрагентов.Остаток
				|ИЗ
				|	РегистрСведений.ОстаткиНоменклатурыКонтрагентов КАК ОстаткиНоменклатурыКонтрагентов
				|ГДЕ
				|	ОстаткиНоменклатурыКонтрагентов.Контрагент = &Контрагент
				|	И ОстаткиНоменклатурыКонтрагентов.Подразделение = Значение(Справочник.Подразделения.ПустаяСсылка)
				|	И ОстаткиНоменклатурыКонтрагентов.Номенклатура В (&списТов)";
				Запрос.УстановитьПараметр("Контрагент", ДляТендеров);
				Запрос.УстановитьПараметр("списТов", списТов);
				Результат  = Запрос.Выполнить();
				табУжеЕсть = Результат.Выгрузить();
возврат табУжеЕсть;
КонецФункции

//28.07.2017
процедура ПровестиЗаказы(Отказ=ЛОЖЬ)	
		 Тендеры = Справочники.КатегорииОбъектов.НайтиПоКоду("00044");
		 ТендерыНазв = Тендеры.Наименование;
		 
		 ДляТендеров = справочники.Контрагенты.НайтиПоКоду("94769"); //ДляТендеров
			 
		//------идём по всем заказам и меняем цены/суммы----
		для каждого стрЗак из Заказы цикл
			закОб = стрЗак.ЗаказПокупателя.ПолучитьОбъект();
			  суммаТр = 0;
			для каждого стр1 из закОб.Товары цикл
				стр0 = Товары.Найти(стр1.Номенклатура, 	"Номенклатура");
				стр1.Цена  = стр0.ЦенаТр;  //нужна только цена С УЧЕТОМ ТРАНСПОРТА!
				стр1.Сумма = стр1.Цена * стр1.Количество;
				стр1.СуммаНДС = Окр(стр1.Сумма * 18/118, 2); // 18% в цене ВСЕГДА!
				суммаТр = суммаТр + Окр(стр0.СуммаТр * стр1.Количество / стр0.Количество,2);
			КонецЦикла;	
			закОб.ТРБезНал = 0;
			закОб.ТРнал    = 0;
			закОб.ТРвЦене  = суммаТр;    //всегда в цене!
			
			//меняем контрагента!
			закОб.Контрагент = ЭтотОбъект.Контрагент;
			закОб.ДоговорКонтрагента = ЭтотОбъект.ДоговорКонтрагента;
			Если закОб.ДатаОтгрузки < ТекущаяДата() тогда
				закОб.ДатаОтгрузки = ТекущаяДата();
				закОб.ДатаОплаты   = закОб.ДатаОтгрузки + закОб.ЧислоДнейСМоментаОтгрузки*86400;
			КонецЕсли;	

		    попытка
				закОб.ПометкаУдаления = ложь;
				закОб.Проверен = Истина; // проделиваем
				закОб.Записать(РежимЗаписиДокумента.Проведение);
			
				#Если Клиент тогда
				Сообщить("Заказ № "+строка(закОб.Номер)+" успешно изменен. Сумма тр. затрат: "+строка(суммаТр)+"р. (в цене)", СтатусСообщения.Информация);
				#КонецЕсли
				
			исключение
				#Если Клиент тогда
				Сообщить("Ошибка при записи Заказа № "+строка(закОб.Номер)+" : "+ОписаниеОшибки(), СтатусСообщения.Важное);
				#КонецЕсли
				Отказ = Истина;
			КонецПопытки;
			
		//16.05.2017 ======================авто-установки категории отгрузки на Тендеры=======================
			Если не Отказ и ЗакОб.Проведен и закОб.Проверен тогда // только проделенные!
				регСв = РегистрыСведений.КатегорииОбъектов.СоздатьМенеджерЗаписи();
				регСв.Объект = ЗакОб.Ссылка;
				регСв.Категория = Тендеры; // Тендеры
				регСв.Записать();
				Сообщить("Для Заказа № "+строка(закОб.Номер)+" - установлена [v] "+строка(ТендерыНазв));
			КонецЕсли;
				
		Если Отказ тогда // 28.07.2017 =======невозможно проделить заказ...
			 Отказ = ЛОЖЬ;
				
				//---------------все товары из заказа >> отстатки поставщика ---------------
				списТов = закОб.Товары.ВыгрузитьКолонку("Номенклатура");
				табУжеЕсть = ПолучитьСтарыеОстаткиПоставщика(ДляТендеров, списТов);
				флУжеЕсть  = (табУжеЕсть.Количество()>0);
				
				//--------пишем в регистр ОстаткиНоменклатурыКонтрагентов для проделивания в "минус"-----------------
				Для каждого стр1 из закОб.Товары цикл
					ТоЧтоУжеЗаказано = 0;
					Если флУжеЕсть тогда
						стр2=табУжеЕсть.найти(стр1.Номенклатура, "Номенклатура");
						Если стр2<>неопределено тогда
						ТоЧтоУжеЗаказано = стр2.Остаток;
						КонецЕсли;
					КонецЕсли;
					регСв = РегистрыСведений.ОстаткиНоменклатурыКонтрагентов.СоздатьМенеджерЗаписи();
					регСв.Контрагент    = ДляТендеров;
					регСв.Подразделение = справочники.Подразделения.ПустаяСсылка();  // для Ярославля - пустая!
					регСв.Номенклатура  = стр1.Номенклатура;
					регСв.Остаток       = макс( стр1.Количество, ТоЧтоУжеЗаказано);  //максимум!
					регСв.Записать(Истина);//перезапись !!!
				КонецЦикла;	
					
			попытка //вторая попытка
				закОб.Проверен  = Истина;
				закОб.Поставщик = ДляТендеров;// спец.поставщик
				закОб.Статус    = перечисления.СтатусыЗаказов.Подтвержден; // сразу!
				закОб.Записать(РежимЗаписиДокумента.Проведение);
				#Если Клиент тогда
				Сообщить("Заказ № "+строка(закОб.Номер)+" успешно проделен для заказа на поставщика 'ДляТендеров'. Сумма тр. затрат: "+строка(суммаТр)+"р. (в цене)", СтатусСообщения.Информация);
				#КонецЕсли
			исключение
				#Если Клиент тогда
				Сообщить("Ошибка при ""дележке"" Заказа № "+строка(закОб.Номер)+" : "+ОписаниеОшибки(), СтатусСообщения.Важное);
				#КонецЕсли
				Отказ=Истина;
			КонецПопытки;

			//--------------------удаляем в любом случае, чтоб никто больше не проделил в "минус"!----------------------------------				
			Для каждого стр1 из закОб.Товары цикл
				ТоЧтоУжеЗаказано = 0;
				Если флУжеЕсть тогда
					стр2=табУжеЕсть.найти(стр1.Номенклатура, "Номенклатура");
					Если стр2<>неопределено тогда
					ТоЧтоУжеЗаказано = стр2.Остаток;
					КонецЕсли;
				КонецЕсли;
				регСв = РегистрыСведений.ОстаткиНоменклатурыКонтрагентов.СоздатьМенеджерЗаписи();
				регСв.Контрагент    = ДляТендеров;
				регСв.Подразделение = справочники.Подразделения.ПустаяСсылка();  // для Ярославля - пустая!
				регСв.Номенклатура  = стр1.Номенклатура;
				регСв.Остаток       = ТоЧтоУжеЗаказано;  //максимум!
				Если ТоЧтоУжеЗаказано=0 тогда
					регСв.Удалить();
				иначе
					регСв.Записать(Истина);//перезапись !!!
				КонецЕсли;
				
			КонецЦикла;	

			КонецЕсли;
		
		КонецЦикла;	//========================== по всем заказам ====================
		
		
		#Если Клиент тогда
		Сообщить("Работа по тендерам по списку заказов "+этотОбъект.СписокЗаказов+" - завершена.", СтатусСообщения.Информация);
		#КонецЕсли
КонецПроцедуры

Процедура ОсновныеДействияФормыДействие(Кнопка)
	Если Вопрос("Вы действительно хотите закрыть все Заказы покупателей и завершить торги?",РежимДиалогаВопрос.ДаНет,0)<>КодВозвратаДиалога.Да тогда
		Возврат;
	КонецЕсли;	
	для каждого стр1 из ЭтотОбъект.Заказы цикл
		закОб = стр1.ЗаказПокупателя.ПолучитьОбъект();
		попытка
			если закОб.Проведен тогда
				закОб.Записать(РежимЗаписиДокумента.ОтменаПроведения);  //удаляет ВСЕ движения!
			КонецЕсли;
			
			закОб.ПометкаУдаления = истина;  //не должно быть реализаций по заказу!
			закОб.Записать();
		исключение
		Сообщить("Не удалось закрыть "+строка(закОб), СтатусСообщения.Внимание);
		КонецПопытки;
	КонецЦикла;	
	
	ЭтотОбъект.Проведен = ложь;
	ЭтотОбъект.ПометкаУдаления = истина;
	ЗаписатьВФорме();
	
	ЭтаФорма.Закрыть();
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	ДоговорКонтрагента = Контрагент.ОсновнойДоговорКонтрагента;
	Предупреждение("Выбран основной договор контрагента.",10);
КонецПроцедуры

Процедура СуммаТрЗатратПриИзменении(Элемент)  //11.05.2017
	Порог = Товары.Итог("СуммаVIP")+СуммаТрЗатрат;
	 ПересчетНажатие(неопределено);
	СуммаЛотаПриИзменении(неопределено);
КонецПроцедуры
 
Процедура ТоварыЦенаТрПриИзменении(Элемент)
	Стр1 = ЭлементыФормы.Товары.ТекущиеДанные;
    Стр1.СуммаСтр = Стр1.ЦенаТр*Стр1.Количество;
	Стр1.Сумма    = Стр1.СуммаСтр - стр1.СуммаТр;
КонецПроцедуры



