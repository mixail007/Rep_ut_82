
Перем ДниНедели;
Перем ТЗТарСтавки;
Перем ТарифнаяСтавка0;

Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма);
КонецПроцедуры

Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
РегулированиеПредставленияПериодаРегистрации(Направление, СтандартнаяОбработка, ПериодРегистрации, МесяцСтрока);
УстановитьВидимостьКолонокТаблицыОтработанноеВремя();
ОформитьЗаголовкиДнейМесяца();
ОчиститьДанные();
КонецПроцедуры

Процедура ПериодРегистрацииОчистка(Элемент, СтандартнаяОбработка)
		СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЗаполнитьТарифныеСтавки();
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнитьШапкуДокумента(ЭтотОбъект, глТекущийПользователь, , "");
	//	УстановитьНомерДокумента(ЭтотОбъект);

	КонецЕсли;

	//УправлениеПризнакомОтраженияВРеглУчете( ЭтотОбъект, ЭтаФорма,,, мОтражатьВРегламентированномУчете);
	
	// Вывести в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	мТекущаяДатаДокумента = Дата;

	//УстановитьВидимость();
	
	МесяцСтрока = ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);
	
	Для ИндексКолонки = 1 По 31 Цикл
		ЭлементыФормы.ДанныеТабеля.Колонки["День" + Строка(ИндексКолонки)].Ширина = 5;
	КонецЦикла;
    УстановитьВидимостьКолонокТаблицыОтработанноеВремя();
	ОформитьЗаголовкиДнейМесяца();
	
    ЗаполнитьИтогиВТабличнойЧасти();
КонецПроцедуры


Процедура УстановитьВидимостьКолонокТаблицыОтработанноеВремя()
	ДеньНачалаПериода = День(ПериодРегистрации);
	ДеньОкончанияПериода = День(КонецМесяца(ПериодРегистрации));
	ИндексНачалаВидимыхКолонок = ДеньНачалаПериода+2;
	ИндексКонцаВидимыхКолонок = ДеньОкончанияПериода+2;
	Для ИндексКолонки = 1 По 31 Цикл
		ЭлементыФормы.ДанныеТабеля.Колонки["День" + Строка(ИндексКолонки)].Видимость = 
		((ИндексКолонки <= ДеньОкончанияПериода) И (ИндексКолонки >= ДеньНачалаПериода));
	КонецЦикла;
	
	КонецПроцедуры

Процедура ПериодРегистрацииПриИзменении(Элемент)
	УстановитьВидимостьКолонокТаблицыОтработанноеВремя();
КонецПроцедуры

Процедура ОформитьЗаголовкиДнейМесяца()
	ДеньНеделиМесяца = ДеньНедели(НачалоМесяца(ПериодРегистрации));
		Для ДеньМесяца = 1 по День(КонецМесяца(ПериодРегистрации)) Цикл
			
			Колонка = ЭлементыФормы.ДанныеТабеля.Колонки["День"+Строка(ДеньМесяца)];
			
			Колонка.ТекстШапки = Строка(ДеньМесяца) + Символы.ПС + ДниНедели[ДеньНеделиМесяца];
			Если ДеньНеделиМесяца = 6 Или ДеньНеделиМесяца = 7 Тогда
				Колонка.ЦветТекстаШапки = ЦветаСтиля.ЦветОсобогоТекста;
				Колонка.ШрифтШапки = ШрифтыСтиля.ШрифтВажнойНадписи;
			Иначе
				Колонка.ЦветТекстаШапки = Новый Цвет();	
				Колонка.ШрифтШапки = Новый Шрифт();
			КонецЕсли;
			
			ДеньНеделиМесяца = (ДеньНеделиМесяца%7)+1;
		КонецЦикла;

	КонецПроцедуры	
	
	Процедура ЗаполнитьИтогиВТабличнойЧасти()
			
		ТабЗнчДанныеТабеля=ДанныеТабеля.Выгрузить();
	// итоги по столбцам	
		Для счКол = 1 по 31 Цикл
			ИтогПоКолонке=0;	
			Для счСтр=0 по ДанныеТабеля.Количество()-1 Цикл
				ИтогПоКолонке=ИтогПоКолонке+ВернутьЧислоЧасовПереработки(ТабЗнчДанныеТабеля[счСтр]["День"+счКол]);
			КонецЦикла;	
				ЭлементыФормы.ДанныеТабеля.Колонки["День"+счКол].ТекстПодвала=ИтогПоКолонке;
		КонецЦикла;	
		
		
		
	КонецПроцедуры	

	Процедура ДанныеТабеляДеньОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		ЧислоЧасов =	ВернутьЧислоЧасовПереработки(Текст);
		Если ЧислоЧасов=Неопределено Тогда
			СообщитьОбОшибке("Неверный формат ввода значения");
			СтандартнаяОбработка=Ложь;
		Иначе	
			СтандартнаяОбработка=Истина;
		КонецЕсли;
		
	КонецПроцедуры

	Процедура ДанныеТабеляДеньПриИзменении(Элемент)
//		ЗаполнитьИтогиВТабличнойЧасти();
	КонецПроцедуры

	Процедура ДанныеТабеляПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		ЗаполнитьИтогиВТабличнойЧасти();
		ЗаполнитьИтогиПоСтрокам();
	КонецПроцедуры

	Процедура ДанныеТабеляПослеУдаления(Элемент)
		ЗаполнитьИтогиВТабличнойЧасти();
	КонецПроцедуры

	Процедура ПериодРегистрацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		УстановитьВидимостьКолонокТаблицыОтработанноеВремя();
		ОформитьЗаголовкиДнейМесяца();
	КонецПроцедуры

	Процедура ОчиститьДанные()
		Для ИндексКолонки = 1 По 31 Цикл
			Для сч=0 по ДанныеТабеля.Количество()-1 Цикл
				ДанныеТабеля[сч]["День"+ИндексКолонки]="";
			КонецЦикла;	
		КонецЦикла;	
	КонецПроцедуры	

	Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		ЗаполнитьИтогиВТабличнойЧасти();
		Если Ответственный<>глТекущийПользователь Тогда
			Ответственный=глТекущийПользователь;
		КОнецЕсли;	
	КонецПроцедуры
	
	Процедура ЗаполнитьТарифныеСтавки()
		
		Запрос =Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	Объект ФизЛицо,
		|	ЕстьNULL(Значение,0) Ставка
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов
		|ГДЕ
		|	Свойство = &Свойство";
		Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00142"));
		Результат=Запрос.Выполнить();
		
		ТарифнаяСтавка0=Ложь;
		Если Результат.Пустой() Тогда
			ТарифнаяСтавка0=Истина;
		Иначе
			ТЗТарСтавки=Результат.Выгрузить();
		Конецесли;	
		
		
	КонецПроцедуры	
	
	Процедура ЗаполнитьИтогиПоСтрокам()
		ТабЗнчДанныеТабеля=ДанныеТабеля.Выгрузить();
		
		// итоги по строкам
		Для счСтр=0 по ДанныеТабеля.Количество()-1 Цикл
			ИтогПоСтроке=0;	
			Для счКол = 1 по 31 Цикл
				ИтогПоСтроке=ИтогПоСтроке+ВернутьЧислоЧасовПереработки(ТабЗнчДанныеТабеля[счСтр]["День"+счКол]);
			КонецЦикла;	
			
			ИтогПоСтроке = ИтогПоСтроке + ДанныеТабеля[счСтр]["ПриказЧасов"];
			
			ДанныеТабеля[счСтр]["ПереработкаЧасов"] = ИтогПоСтроке;
			
			Если  Не ТарифнаяСтавка0 Тогда
				НайдСтрока=ТЗТарСтавки.Найти(ДанныеТабеля[счСтр].Сотрудник,"ФизЛицо");
				Если НайдСтрока<>Неопределено Тогда
					ДанныеТабеля[счСтр]["ПереработкаСумма"]=ИтогПоСтроке*НайдСтрока.Ставка;
				Иначе
					ДанныеТабеля[счСтр]["ПереработкаСумма"]=0;
				КонецЕсли;	
				
			КонецЕсли;	
		КонецЦикла;	
		
	КонецПроцедуры	

	Процедура ДанныеТабеляСотрудникПриИзменении(Элемент)
		  ЗаполнитьИтогиПоСтрокам();
	КонецПроцедуры
	
ДлинаСуток = 86400;
ПерваяДата = НачалоДня(ПолучитьРабочуюДату());
ПерваяДата = ПерваяДата - ДеньНедели(ПерваяДата) * ДлинаСуток;
	
ДниНедели = Новый Соответствие;
Для ДеньНедели = 1 По 7 Цикл
	ДниНедели.Вставить(ДеньНедели, НРег(Формат(ПерваяДата + ДеньНедели * ДлинаСуток,"ДФ=ддд")));
КонецЦикла;


