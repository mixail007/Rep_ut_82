
Процедура ОбработкаЗаполнения(Основание)
	
	Если типЗнч(Основание) = Тип("ДокументСсылка.ЗаданиеНаОтгрузку") Тогда
		ВидОперации = Основание.ВидОперации;
		Контрагент  = Основание.Контрагент;
		Направление = Основание.Направление;
		Комментарий = "# дозагрузка по заданию № "+Основание.Номер+" от "+формат(Основание.Дата,"ДЛФ=DD");
		РегионКонтрагента        = Основание.РегионКонтрагента;
		ВводитьТолькоПеремещение = Основание.ВводитьТолькоПеремещение; //признак перемещения
		Важность = Основание.Важность;
		
	ИначеЕсли типЗнч(Основание) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ВидОперации=Перечисления.ВидыДвиженийПриходРасход.Расход;
		Контрагент=Основание.Контрагент;
		Если не Основание.Проверен Тогда
			сообщить("Заказ не проделен! Отгружать его нельзя!");
			Возврат;
		КонецЕсли;
		
		НеСогласован = Ложь;
		
		Для каждого стр из Основание.Товары Цикл
			Если стр.Статус = Перечисления.СтатусыСтрокЗаказа.НаСогласовании Тогда
				НеСогласован = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если НеСогласован и Основание.ТипЗаказа = 12 Тогда
			сообщить("Заказ не согласован! Отгружать его нельзя!");
			Возврат;
		КонецЕсли;
		
		//Подарки
		Отбор = Новый Структура;
		Отбор.Вставить("Бонус",Ложь);
		
		Строки = Основание.Бонусы.НайтиСтроки(Отбор);
		
		Если Строки.Количество()>0 и не Основание.СогласованаТребованиеНакладная Тогда
			
			#Если Клиент Тогда
			Предупреждение("Внимание! Подарки не согласованы,
			|  Нельзя отгружать!!!", 30);
			Возврат;
			#КонецЕсли
		КонецЕсли;

		
		стр1 = ЗаказыПокупателей.Добавить();
		стр1.ЗаказПокупателя = Основание;
		Комментарий = ?(сокрЛП(Основание.Комментарий)="", "", СокрЛП(Основание.номер)+": "+сокрЛП(Основание.Комментарий)+"
		|");
   		ВводитьТолькоПеремещение = Основание.ВводитьТолькоПеремещение; //признак перемещения

		Важность = ?(ЭтоКлиент11категории(Основание), перечисления.Важность.Высокая,  перечисления.Важность.Средняя);
		
		//01.12.2015 - прямое добавление - Подразделение из заказа...
		//Подразделение = Основание.Подразделение; 
		#Если не Клиент Тогда
			глТекущийПользователь = справочники.Пользователи.НайтиПоКоду("Робот (центр - номенклатура)");
		#КонецЕсли
		
		//10.12.2015 - только Если пользователь - из филиала - меняем подразделение
		Если ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
			Подразделение = глТекущийПользователь.ОсновноеПодразделение;
		иначе
			Подразделение = справочники.Подразделения.НайтиПоКоду("00005"); // Головное!
		КонецЕсли;

	ИначеЕсли типЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ВидОперации=Перечисления.ВидыДвиженийПриходРасход.Приход;
		Контрагент=Основание.Контрагент;
		стр1 = ЗаказыПоставщикам.Добавить();
		стр1.ЗаказПоставщику = Основание;
		Комментарий = Основание.Комментарий;
		Важность = ?(ЭтоКлиент11категории(Основание), перечисления.Важность.Высокая,  перечисления.Важность.Средняя);
	КонецЕсли;	
	
		Выполнено = ЛОЖЬ;
		
		//+++ 17.06.2015 - обнуление реквизитов для тр.затрат
		ДокументыСданыЛогистам = ЛОЖЬ;
		ВсеДокументыСданыВБухгалтерию = ЛОЖЬ;
		Тариф=0;
		Километров=0;
		
		СуммаОбратки=0;
		СуммаОбраткиЯШТ=0;
		ВидОбратки="";
		

КонецПроцедуры

//+++ 10.09.2013
функция ЭтоКлиент11категории(Основание1)
	
	Если Основание1.Контрагент=Неопределено Тогда
		Возврат ЛОЖЬ;
	ИначеЕсли типЗнч(Основание1.Контрагент)<>тип("СправочникСсылка.Контрагенты") Тогда
		Возврат ЛОЖЬ;
	КонецЕсли;	
	
	//+++ 17.06.2015
	рез =(Основание1.Контрагент.КатегорияПокупателя = справочники.КатегорииПокупателей.ИнтернетМагазин);
	
	Если рез Тогда
		Возврат Истина; // по реквизиту!
	Иначе 			    // по старому свойству
		стр1 = новый Структура;
		стр1.Вставить("Объект", Основание1.Контрагент);
		КатегорияПок =  ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00119");
		стр1.Вставить("Свойство", КатегорияПок);
	
		регСв = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(стр1);
		Если регСв<>Неопределено Тогда
			Если ЗначениеЗаполнено(регСв.Значение) 
				и регСв.Значение=11 
		     //// ограничение по типу договора
			 // и Основание1.ДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.НайтиПоКоду("00011") 
			Тогда
				Возврат Истина;
			Иначе
				Возврат ЛОЖЬ; // не та категория 	 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции	

//+++ 17.04.2013     
Процедура ПриКопировании(ОбъектКопирования) 
	Товары.Очистить();
	ГруппыСкладов.Очистить();
	
	//-------------чистим реализации------------------
	Для каждого стр1 из ЗаказыПокупателей цикл
		стр1.Реализация = документы.РеализацияТоваровУслуг.ПустаяСсылка();
	КонецЦикла;	
	
	//--------удаляем уже отгруженные заказы совсем!---------------------------
	i=0; N=ЗаказыПокупателей.Количество();
	пока i<N цикл
		стр1 = ЗаказыПокупателей[i];
		Если стр1.КоличествоШтук = стр1.КоличествоШтукОтгружено Тогда
           ЗаказыПокупателей.Удалить(i); N=N-1;
	    Иначе
		   i=i+1;
	   КонецЕсли;
   КонецЦикла;
   
КонецПроцедуры


Функция ПолучитьРегионКонтрагента(фактАдрес=Истина) Экспорт
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	КонтактнаяИнформация.Поле2 ОбластьКонтрагента,
	|	КонтактнаяИнформация.Поле4 ГородКонтрагента
	|ИЗ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ КонтактнаяИнформация.Объект = &Контрагент
	|	И КонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Если фактАдрес Тогда
		Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	Иначе
		Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	КонецЕсли;
	
	Выборка=Запрос.Выполнить().Выбрать();
	Если  Выборка.Следующий() Тогда
		Возврат ?(ЗначениеНеЗаполнено (Выборка.ГородКонтрагента),Выборка.ОбластьКонтрагента,Выборка.ГородКонтрагента);
	Иначе
		Возврат "";
	КонецЕсли;	 
	 
КонецФункции

//проверяет наличие хотя бы одной проведенной реализации
//Если такая есть, то пересчет заказанного количества - невозможен
функция естьРеализации(ЕстьПроведенные=Истина, Заказ=Неопределено) экспорт
	рез = ЛОЖЬ;
	тзЗакПок = ЗаказыПокупателей.Выгрузить();
	тзЗакПок.Свернуть("Реализация", "НомерСтроки");
	
	для i=0 по тзЗакПок.Количество()-1 цикл
		Если не тзЗакПок[i].реализация=Неопределено и не тзЗакПок[i].реализация.пустая()
			и ( не ЕстьПроведенные или (ЕстьПроведенные и тзЗакПок[i].реализация.проведен) ) Тогда
			
			Если (Заказ=Неопределено) 
				или (ЗаказыПокупателей[тзЗакПок[i].НомерСтроки-1].ЗаказПокупателя = Заказ) Тогда
					рез = Истина;
				прервать;
			КонецЕсли;
			
		КонецЕсли;	
	КонецЦикла;
	
	Возврат рез;
КонецФункции

//---------------встроенная функция, аналог как в "Поездка подмосковье"------------------------------------
функция ПечатьТоварыПоЗаказам(ПечатьПоФакту=Истина)
	
//--------------ограничения, которые сразу отменяют печать---------------------------------------	
	Если ВидОперации = Перечисления.ВидыДвиженийПриходРасход.Приход Тогда
		#Если Клиент Тогда
		Предупреждение("Данная печатная форма предназначена только для Отгрузки!");
		#КонецЕсли
		Возврат Неопределено;
	КонецЕсли;
	
	Если ссылка.Проведен и Товары.Итог("КоличествоЗаказано")=0 Тогда 
		#Если Клиент Тогда
		Предупреждение("Для печати - выберите Порядок Отгрузки и перезаполните Товары!");
		#КонецЕсли
		Возврат Неопределено;
	КонецЕсли;	
	
	Если  Товары.Итог("КоличествоЗаказано")<>ГруппыСкладов.Итог("КоличествоЗаказано") Тогда
		#Если Клиент Тогда
		Предупреждение("Несоответствие количества в таблице Порядок Отгрузки "+строка(ГруппыСкладов.Итог("КоличествоЗаказано"))+" и Товары "+строка(Товары.Итог("КоличествоЗаказано"))+"!");
		#КонецЕсли
		//Возврат Неопределено;
	КонецЕсли;	
	
	
	Если ПечатьПоФакту Тогда
		Если не естьРеализации(ЛОЖЬ) Тогда // 2 вариант - по реализациям - факт
			#Если Клиент Тогда
			Предупреждение("Для печати - перезаполните реализации!");
			#КонецЕсли
		Возврат Неопределено;
		КонецЕсли;	
	Иначе // не ПечатьПоФакту - печатаем по регистру РезервНаСкладах по данному документу
		Если не ссылка.Проведен Тогда
			#Если Клиент Тогда
			Предупреждение("Для печати необходимо провести документ!",60);
			#КонецЕсли
		Возврат Неопределено;
		КонецЕсли;	
			
		Если естьРеализации() Тогда  // 2 вариант - по резервам  - план	
			#Если Клиент Тогда
			Предупреждение("Для печати - перезаполните реализации!",60);
			#КонецЕсли
			Возврат Неопределено;
		КонецЕсли;	
	КонецЕсли;

//--------------получаем макет документа и области печати---------------------------------------	
	ТабДокумент = новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "Документ_ЗаданиеНаОтгрузку_ТоварыПоЗаказам";
	
	Макет = ПолучитьМакет("ТоварыПоЗаказам");
    ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Номер = ЭтотОбъект.Номер;
	ОбластьМакета.Параметры.Дата  = ЭтотОбъект.Дата;
	ОбластьМакета.Параметры.СловоВажный = ?(ЭтотОбъект.Важность = перечисления.Важность.Высокая, "!!!", ""); //+++ 13.09.2013
    ОбластьМакета.Параметры.НомерОчереди = ?(ЭтотОбъект.НомерОчереди=0,"",ЭтотОбъект.НомерОчереди); //+++ 03.09.2014
	
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьИтого = Макет.ПолучитьОбласть("ИтогоВсего");
    ОбластьЗаказ = Макет.ПолучитьОбласть("СтрокаЗаказ");
	ОбластьИтогоЗаказ = Макет.ПолучитьОбласть("ИтогоЗаказ");
	ОбластьТовар = Макет.ПолучитьОбласть("СтрокаТовар");
 	ОбластьТовар1 = Макет.ПолучитьОбласть("СтрокаТовар1");
    
//-----------------------2х уровневый Запрос----------------------	
	Запрос1 = получитьЗапросТоварыПоЗаказам(ПечатьПоФакту);
	Результат1 = Запрос1.выполнить();
	Выборка = результат1.выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);			
	
	
//+++( 29.10.2013 номер очереди в печ.форму +++
Заказы2 = ЭтотОбъект.ЗаказыПокупателей.Выгрузить();
Заказы2.Колонки.Добавить("КонтрагентКод");
Заказы2.Колонки.Добавить("АдресДоставки");
Заказы2.Колонки.Добавить("Ответственный");

для каждого стр2 из Заказы2 цикл
	стр2.КонтрагентКод = стр2.ЗаказПокупателя.Контрагент.Код;
	стр2.АдресДоставки = СокрЛП(стр2.ЗаказПокупателя.АдресДоставки);
	стр2.Ответственный = стр2.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо;
КонецЦикла;	
Заказы2.Свернуть("КонтрагентКод, АдресДоставки, Ответственный, НомерОчереди", "КоличествоШтук"); //15.11.2016
//+++)

 
//----------Общие итоги------------------------------------------------	
Выборка.Следующий(); // Общие итоги
ОбластьИтого.Параметры.Заполнить(Выборка); // итоги
	
	//-----------------По Заказам-----------------------------------------------	
	выборкаЗаказ = Выборка.выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока выборкаЗаказ.Следующий() Цикл
		ОбластьЗаказ.Параметры.Заполнить(выборкаЗаказ); 	 // итоги по заказу
		ОбластьИтогоЗаказ.Параметры.Заполнить(выборкаЗаказ); // итоги по заказу
		ОбластьИтогоЗаказ.Параметры.Адрес = выборкаЗаказ.Адрес - 1; //+++
       		
		ЗаказПокупателя1 = выборкаЗаказ.ЗаказПокупателя; // так быстрее обращение
		
		ОбластьЗаказ.Параметры.Контрагент = ЗаказПокупателя1.Контрагент;
		
		ОбластьЗаказ.Параметры.Менеджер=ЗаказПокупателя1.ДоговорКонтрагента.ОтветственноеЛицо;
		МенеджерфизЛицо =ЗаказПокупателя1.ДоговорКонтрагента.ОтветственноеЛицо.ФизЛицо;
		
		//+++( 29.10.2013 - получим номер очереди из Заказы2
		ОбластьЗаказ.Параметры.НомОчередь = выборкаЗаказ.НомерСтрокиЗаказа;
		НомОчередь = 0;
		Для каждого стр2 из Заказы2 цикл
			НомОчередь = НомОчередь + 1;
			СтрПоиска1 = Строка(ЗаказПокупателя1.Контрагент.Код)+"-"+Строка(СокрЛП(ЗаказПокупателя1.АдресДоставки))+"-"+Строка(ЗаказПокупателя1.ДоговорКонтрагента.ОтветственноеЛицо);
			СтрПоиска2 = Строка(стр2.КонтрагентКод)+"-"+Строка(стр2.АдресДоставки)+"-"+Строка(стр2.Ответственный); //+++ 11.07.2013
			Если СтрПоиска1 = стрПоиска2 Тогда
				прервать;
			КонецЕсли;
		КонецЦикла;	
       // ОбластьЗаказ.Параметры.НомОчередь =Строка(НомОчередь)+"."; // 5я точка...
	    ОбластьЗаказ.Параметры.НомОчередь =Строка(стр2.НомерОчереди)+"."; //15.11.2016
	   
		ОбластьЗаказ.Параметры.АдресДоставки = ?(СокрЛП(ЗаказПокупателя1.АдресДоставки)="", "", "Адрес доставки: "+СокрЛП(ЗаказПокупателя1.АдресДоставки));
		//+++) 
		
		//------------------телефоны менеджера в физ лице---------------------------------------
		Если ЗначениеЗаполнено(МенеджерфизЛицо) Тогда
		отбор1 = новый Структура("Объект", МенеджерфизЛицо);
		отбор1.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);
		отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
		рс = регистрыСведений.КонтактнаяИнформация.Получить(отбор1);
		значТел = "";
			Если рс<>Неопределено Тогда
				значТел = рс.Представление; //ТаблЗнач1[i].Заказ.ТелефонМенеджера;
				ОбластьЗаказ.Параметры.Менеджер = строка(ЗаказПокупателя1.ДоговорКонтрагента.ОтветственноеЛицо) +" тел.: "+значТел;
			КонецЕсли;
		КонецЕсли;
	
		ОбластьЗаказ.Параметры.Номер=СокрЛП(ЗаказПокупателя1.Номер);
		ОбластьЗаказ.Параметры.Дата =Формат(ЗаказПокупателя1.Дата, "ДЛФ=DD");
		
		//+++ 20.11.2017 по задаче №36271 - тут можно полный комментарий
		Если ЭтотОбъект.Подразделение.ОбособленноеПодразделение тогда
			ОбластьЗаказ.Параметры.Комментарий = ЗаказПокупателя1.Комментарий;
		Иначе 	
			ОбластьЗаказ.Параметры.Комментарий =""; //+++ 25.10.2017 ФРОЛОВ
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьЗаказ);
		
		//-----------------По Заказам-----------------------------------------------	
		выборкаТовар = выборкаЗаказ.выбрать();
		N=0;   итогКоличествоЗаказано =0; итогКоличество=0;
		номПред = справочники.Номенклатура.ПустаяСсылка();
		табДокумент.НачатьГруппуСтрок();
		
		списУбрать = мПолучитьЛитыеБезНагрузки();//25.10.2017
		Пока выборкаТовар.Следующий() Цикл   //======================================================
			Если списУбрать.НайтиПоЗначению(выборкаТовар.Номенклатура)<>Неопределено тогда//25.10.2017
				продолжить;
			КонецЕсли;	

			колЗак = 0; // чтобы не дублилось для разных складов и адресов...
			Если номПред <> выборкаТовар.Номенклатура Тогда
				N= N + 1;	
				номПред = выборкаТовар.Номенклатура;
				 колЗак = выборкаТовар.КоличествоЗаказано;
			КонецЕсли;	
			Если выборкаТовар.КоличествоЗаказано=выборкаТовар.Количество или (колЗак=0) Тогда
				ОбластьТовар.Параметры.Заполнить(выборкаТовар); 	 // итоги по заказу
				ОбластьТовар.Параметры.НомерСтроки = N;   			 // порядковый номер
				ОбластьТовар.Параметры.КоличествоЗаказано =  колЗак; 
				
				//+++( 18.07.2017 - для Аксессуаров нужен Артикул!
				Если ЗначениеЗаполнено(выборкаТовар.Номенклатура) 
					И (выборкаТовар.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Аксессуары  ) 
					Тогда
             	 ОбластьТовар.Параметры.Артикул = СокрЛП(выборкаТовар.Номенклатура.Код)+"
				 								|арт."+СокрЛП(выборкаТовар.Номенклатура.Артикул);
          		 КонецЕсли;

		//------------обнуление, так как это продолжение отгрузки с другого склада---------------
				Если колЗак=0 Тогда
					ОбластьТовар.Параметры.Артикул 		= "";
					ОбластьТовар.Параметры.Номенклатура = "";
					ОбластьТовар.Параметры.НомерСтроки  = "";
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьТовар);
			Иначе	
			 	ОбластьТовар1.Параметры.Заполнить(выборкаТовар); 	 // итоги по заказу
				ОбластьТовар1.Параметры.НомерСтроки = N;   			 // порядковый номер
				ОбластьТовар1.Параметры.КоличествоЗаказано = колЗак;
				//+++( 18.07.2017 - для Аксессуаров нужен Артикул!
				Если выборкаТовар.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Аксессуары 
									Тогда
             	 ОбластьТовар1.Параметры.Артикул = строка(выборкаТовар.Номенклатура.Код)+"
				 								|арт."+СокрЛП(выборкаТовар.Номенклатура.Артикул);
          		 КонецЕсли;
				ТабДокумент.Вывести(ОбластьТовар1);
			КонецЕсли;
			итогКоличествоЗаказано = итогКоличествоЗаказано + колЗак;
			итогКоличество = итогКоличество + выборкаТовар.Количество;
		КонецЦикла;
	табДокумент.ЗакончитьГруппуСтрок();
			
	ОбластьИтогоЗаказ.Параметры.КоличествоЗаказано = итогКоличествоЗаказано;	
	ОбластьИтогоЗаказ.Параметры.Количество = итогКоличество;
	ТабДокумент.Вывести(ОбластьИтогоЗаказ);
	КонецЦикла;

ТабДокумент.Вывести(ОбластьИтого);
//--------------------------------------------------------------	
    
    Возврат ТабДокумент;
	
КонецФункции	

//в зависимости от параметра ПоФакту - берутся разные запросы
//1) ПоФакту = Истина  - берем все из реализаций и заказов ТЧЗаказыПокупателй
//2) ПоФакту = ЛОЖЬ	   - берем из регистра РезервНаСкладах по регистратору текущего документа
//
функция получитьЗапросТоварыПоЗаказам(ПоФакту)
	Запрос = новый Запрос;
		
	Если ПоФакту Тогда
		//---------------подготовим виртуальную таблицу заранее-------------------
		ТаблЗнач = ЗаказыПокупателей.Выгрузить();
		ТаблЗнач.Свернуть("НомерСтроки, ЗаказПокупателя, Реализация");
		i=0; N=ТаблЗнач.Количество();
		Пока i<N Цикл
			док = ТаблЗнач[i].Реализация;
			Если док=Неопределено или док.пустая() Тогда
				ТаблЗнач.Удалить(i); N=N-1;
			Иначе //есть документ - такая строка нужна
				i=i+1;
			КонецЕсли;
		КонецЦикла;	
		Запрос.УстановитьПараметр("ВТ", ТаблЗнач);
		Запрос.УстановитьПараметр("Дата", ЭтотОбъект.Дата);
		//--------------------------------------------------------------------------
		запрос.Текст = "ВЫБРАТЬ
		               |	ВТ.НомерСтроки КАК НомерСтроки,
		               |	ВТ.ЗаказПокупателя КАК ЗаказПокупателя,
		               |	ВТ.Реализация КАК Реализация
		               |ПОМЕСТИТЬ ВТ
		               |ИЗ
		               |	&ВТ КАК ВТ
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ЗаказПокупателя
		               |;
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ.НомерСтроки КАК НомерСтрокиЗаказа,
		               |	ВТ.ЗаказПокупателя КАК ЗаказПокупателя,
		               |	ЕСТЬNULL(ТовРеализации.НомерСтроки, 0) КАК НомерСтроки,
		               |	ТовРеализации.Номенклатура.Код КАК Артикул,
		               |	ТовРеализации.Номенклатура КАК Номенклатура,
		               |	ТовРеализации.Типоразмер КАК Типоразмер,
					   //+++ BugFix: 07.02.2019 - может быть Null
		               |	ЕстьNull(ТовРеализации.Количество,0) КАК Количество,
		               |	ЕстьNull(ТовРеализации.КоличествоФакт,0) КАК КоличествоФакт,
		               |	ЕстьNull(ТовРеализации.Вес,0) КАК Вес,
		               |	ЕСТЬNULL(ТовРеализации.КоличествоЗаказано, 0) КАК КоличествоЗаказано,
		               |	"""" КАК Адрес,
		               |	ТовРеализации.Склад КАК Склад
		               |ИЗ
		               |	ВТ КАК ВТ
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ТовРеализации.Ссылка КАК Ссылка,
		               |			СУММА(1) КАК НомерСтроки,
		               |			ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
		               |			ЗаказыПокупателейОстатки.Номенклатура.Модель.Наименование + "" "" + ЗаказыПокупателейОстатки.Номенклатура.Типоразмер.Диаметр + "" х "" + ЗаказыПокупателейОстатки.Номенклатура.Типоразмер.Ширина КАК Типоразмер,
		               |			СУММА(ЕСТЬNULL(ТовРеализации.Количество, 0)) КАК Количество,
		               |			СУММА(0) КАК КоличествоФакт,
		               |			СУММА(ЕСТЬNULL(ТовРеализации.Вес, 0)) КАК Вес,
		               |			СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК КоличествоЗаказано,
		               |			ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
		               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТовРеализации.Склад) КАК Склад
		               |		ИЗ
		               |			РегистрНакопления.ЗаказыПокупателей.Остатки( , ЗаказПокупателя В
		               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ 	ВТ.ЗаказПокупателя
		               |						ИЗ ВТ КАК ВТ)) КАК ЗаказыПокупателейОстатки
		               |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |					ТовРеализации.Ссылка КАК Ссылка,
		               |					ТовРеализации.Номенклатура КАК Номенклатура,
		               |					ТовРеализации.Количество КАК Количество,
		               |					ТовРеализации.Вес КАК Вес,
		               |					ТовРеализации.Склад КАК Склад
		               |				ИЗ
		               |					Документ.РеализацияТоваровУслуг.Товары КАК ТовРеализации
		               |				ГДЕ
		               |					ТовРеализации.Ссылка.Дата >= &Дата
		               |					И ТовРеализации.Ссылка В (ВЫБРАТЬ ВТ.Реализация
		               |							ИЗ ВТ КАК ВТ)) КАК ТовРеализации
		               |				ПО ЗаказыПокупателейОстатки.ЗаказПокупателя = ТовРеализации.Ссылка
		               |					И ЗаказыПокупателейОстатки.Номенклатура = ТовРеализации.Номенклатура
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			ЗаказыПокупателейОстатки.Номенклатура,
		               |			ЗаказыПокупателейОстатки.ЗаказПокупателя,
		               |			ЗаказыПокупателейОстатки.Номенклатура.Модель.Наименование + "" "" + ЗаказыПокупателейОстатки.Номенклатура.Типоразмер.Диаметр + "" х "" + ЗаказыПокупателейОстатки.Номенклатура.Типоразмер.Ширина,
		               |			ТовРеализации.Ссылка) КАК ТовРеализации
		               |		ПО ВТ.ЗаказПокупателя = ТовРеализации.ЗаказПокупателя
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	НомерСтрокиЗаказа,
		               |	НомерСтроки
		               |ИТОГИ
		               |	МИНИМУМ(НомерСтрокиЗаказа),
		               |	МИНИМУМ(НомерСтроки),
		               |	СУММА(Количество),
		               |	СУММА(КоличествоФакт),
		               |	СУММА(Вес),
		               |	СУММА(КоличествоЗаказано),
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Адрес),
		               |	СУММА(Склад)
		               |ПО
		               |	ОБЩИЕ,
		               |	ЗаказПокупателя
		               |АВТОУПОРЯДОЧИВАНИЕ";
					   
			Если ВводитьТолькоПеремещение Тогда
			запрос.Текст = стрЗаменить(запрос.Текст, "РеализацияТоваровУслуг.Товары", "ПеремещениеТоваров.Товары");
			запрос.Текст = стрЗаменить(запрос.Текст, "ТовРеализации.Ссылка.Сделка",  "ТовРеализации.Ссылка.ВнутненнийЗаказ.ДокументОснование");
			КонецЕсли;		   
	КонецЕсли;				   
	Если НЕ ПоФакту тогда //план!
	Запрос.УстановитьПараметр("СписокЗаказов", ЗаказыПокупателей.ВыгрузитьКолонку("ЗаказПокупателя") );
	ТаблЗнач = ЗаказыПокупателей.Выгрузить();
	ТаблЗнач.Свернуть("НомерСтроки, ЗаказПокупателя");
	Запрос.УстановитьПараметр("ВТ", ТаблЗнач  );
	
	Запрос.УстановитьПараметр("НачДата", новый Граница(ЭтотОбъект.Дата-60, ВидГраницы.Включая) ); //+- 1 мин.
	Запрос.УстановитьПараметр("КонДата", новый Граница(ЭтотОбъект.Дата+60, ВидГраницы.Включая)  );
		ТЗ=Товары.Выгрузить();
		ТЗ.Свернуть("Номенклатура");
		Запрос.УстановитьПараметр("Список",ТЗ.ВыгрузитьКолонку("Номенклатура") );
		
		запрос.Текст = "ВЫБРАТЬ
		               |	ВТ.НомерСтроки,
		               |	ВТ.ЗаказПокупателя КАК ЗаказПокупателя
		               |ПОМЕСТИТЬ ВТ
		               |ИЗ
		               |	&ВТ КАК ВТ
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ЗаказПокупателя
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ.ЗаказПокупателя КАК ЗаказПокупателя,
		               |	ВТ.НомерСтроки КАК НомерСтрокиЗаказа,
		               |	ЗаказыПокупателейОстатки.Номенклатура.Код КАК Артикул,
		               |	ЗаказыПокупателейОстатки.Номенклатура,
		               |	ЗаказыПокупателейОстатки.Номенклатура.Модель.Наименование + "" "" + ЗаказыПокупателейОстатки.Номенклатура.Типоразмер.Диаметр + "" х "" + ЗаказыПокупателейОстатки.Номенклатура.Типоразмер.Ширина КАК Типоразмер,
		               |	ЕСТЬNULL(РезервНаСкладахОбороты.КоличествоПриход, 0) КАК Количество,
		               |	ЕСТЬNULL(РезервНаСкладахОбороты.КоличествоРасход, 0) КАК КоличествоФакт,
		               |	0 КАК Вес,
		               |	1 КАК НомерСтроки,
		               |	ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КоличествоЗаказано,
		               |	ВЫБОР
		               |		КОГДА РезервНаСкладахОбороты.Склад.АдресноеХранение
		               |			ТОГДА РезервНаСкладахОбороты.АдресХранения
		               |		ИНАЧЕ """"
		               |	КОНЕЦ КАК Адрес,
		               |	ВЫБОР
		               |		КОГДА РезервНаСкладахОбороты.Склад.АдресноеХранение
		               |			ТОГДА ЕСТЬNULL(ТоварыАдресноеХранениеОстатки.КоличествоОстаток, 0)
		               |		ИНАЧЕ ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
		               |	КОНЕЦ КАК Остаток,
		               |	РезервНаСкладахОбороты.Склад КАК Склад
		               |ИЗ
		               |	ВТ КАК ВТ
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя В (&СписокЗаказов)) КАК ЗаказыПокупателейОстатки
		               |		ПО ВТ.ЗаказПокупателя = ЗаказыПокупателейОстатки.ЗаказПокупателя
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервНаСкладах.Обороты(&НачДата, &КонДата, Регистратор, ЗаказПокупателя В (&СписокЗаказов)) КАК РезервНаСкладахОбороты
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыАдресноеХранение.Остатки(, Номенклатура В (&Список)) КАК ТоварыАдресноеХранениеОстатки
		               |			ПО РезервНаСкладахОбороты.Номенклатура = ТоварыАдресноеХранениеОстатки.Номенклатура
		               |				И РезервНаСкладахОбороты.Склад = ТоварыАдресноеХранениеОстатки.Склад
		               |				И РезервНаСкладахОбороты.АдресХранения = ТоварыАдресноеХранениеОстатки.АдресХранения
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура В (&Список)) КАК ТоварыНаСкладахОстатки
		               |			ПО РезервНаСкладахОбороты.Склад = ТоварыНаСкладахОстатки.Склад
		               |				И РезервНаСкладахОбороты.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		               |		ПО (ЗаказыПокупателейОстатки.ЗаказПокупателя = РезервНаСкладахОбороты.ЗаказПокупателя)
		               |			И (ЗаказыПокупателейОстатки.Номенклатура = РезервНаСкладахОбороты.Номенклатура)
		               |ГДЕ
		               |	ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 0
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	НомерСтрокиЗаказа
		               |ИТОГИ
		               |	СУММА(Количество),
		               |	СУММА(КоличествоФакт),
		               |	СУММА(Вес),
		               |	СУММА(НомерСтроки),
		               |	СУММА(КоличествоЗаказано),
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Адрес),
		               |	СУММА(Остаток),
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Склад)
		               |ПО
		               |	ОБЩИЕ,
		               |	ЗаказПокупателя
		               |АВТОУПОРЯДОЧИВАНИЕ";

	
	КонецЕсли;	

	Возврат Запрос;
КонецФункции	
                                                 
//------------------все печати - только на клиенте!-----------------------------
#Если Клиент Тогда
функция ПечатьЗаданияНаОтгрузку(ТолькоТоЧтоОсталосьОтгрузкить=Истина)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаданиеНаОтгрузку_Новый";

   Макет = ПолучитьМакет("Заказ");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить() );
	Запрос.Текст = 	"ВЫБРАТЬ
	               	|	ЗаданиеНаОтгрузкуТовары.НомерСтроки КАК НомерСтроки,
	               	|	ЗаданиеНаОтгрузкуТовары.Номенклатура КАК Номенклатура,
	               	|	ЗаданиеНаОтгрузкуТовары.КоличествоЗаказано КАК КОличествоЗаказано,
	               	|	ЗаданиеНаОтгрузкуТовары.Количество КАК КОличество,
	               	|	ЗаданиеНаОтгрузкуТовары.КоличествоСвободно КАК КоличествоОстаток,
	               	|	ЗаданиеНаОтгрузкуТовары.ГруппаСкладов,
	               	|	ЗаданиеНаОтгрузкуТовары.Склад КАК Склад,
	               	|	ЗаданиеНаОтгрузкуТовары.АдресХранения КАК АдресХранения
	               	|ПОМЕСТИТЬ ЗаданиеНаОтгрузкуТовары
	               	|ИЗ
	               	|	&Товары КАК ЗаданиеНаОтгрузкуТовары
	               	|
					|//ГДЕ ЗаданиеНаОтгрузкуТовары.КоличествоЗаказано <> ЗаданиеНаОтгрузкуТовары.Количество
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	ЗаданиеНаОтгрузкуТовары.НомерСтроки КАК НомерСтроки,
	               	|	ЗаданиеНаОтгрузкуТовары.Номенклатура КАК Номенклатура,
	               	|	ЗаданиеНаОтгрузкуТовары.КОличествоЗаказано КАК КОличествоЗаказано,
	               	|	ЗаданиеНаОтгрузкуТовары.КОличество КАК Количество,
	               	|	ЗаданиеНаОтгрузкуТовары.КоличествоОстаток КАК КоличествоОстаток,
	               	|	ЗаданиеНаОтгрузкуТовары.ГруппаСкладов КАК ГруппаСкладов,
	               	|	ЗаданиеНаОтгрузкуТовары.Склад КАК Склад,
	               	|	ЗаданиеНаОтгрузкуТовары.АдресХранения КАК АдресХранения,
	               	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладе,
	               	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстатокОТХ, 0) КАК ОстатокОТХНаСкладе,
	               	|	ЕСТЬNULL(ТоварыАХОстатки.КоличествоОстаток, 0) КАК ОстатокВАдресе,
	               	|	ЕСТЬNULL(ТоварыАХОстаткиАдрес.КоличествоОстатокВАдресе, 0) КАК ОстатокАдреса
	               	|ИЗ
	               	|	ЗаданиеНаОтгрузкуТовары КАК ЗаданиеНаОтгрузкуТовары
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               	|			рнТовары.Номенклатура КАК Номенклатура,
	               	|			рнТовары.Склад КАК Склад,
	               	|			рнТовары.КоличествоОстаток КАК КоличествоОстаток,
	               	|			ЕСТЬNULL(ТоварыОТХНаСкладах.КоличествоОстаток, 0) КАК КоличествоОстатокОТХ
	               	|		ИЗ
	               	|			РегистрНакопления.ТоварыНаСкладах.Остатки(
	               	|					,
	               	|					(НЕ Склад.Транзитный)
	               	|						И (НЕ Склад.ЗапретитьИспользование)
	               	|						И Номенклатура В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								т.Номенклатура
	               	|							ИЗ
	               	|								ЗаданиеНаОтгрузкуТовары КАК т)) КАК рнТовары
	               	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	               	|						,
	               	|						(НЕ Склад.Транзитный)
	                	|							И Номенклатура В
	               	|								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|									т.Номенклатура
	               	|								ИЗ
	               	|									ЗаданиеНаОтгрузкуТовары КАК т)) КАК ТоварыОТХНаСкладах
	               	|				ПО рнТовары.Номенклатура = ТоварыОТХНаСкладах.Номенклатура
	               	|					И рнТовары.Склад = ТоварыОТХНаСкладах.Склад) КАК ТоварыНаСкладахОстатки
	               	|		ПО ЗаданиеНаОтгрузкуТовары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               	|			И ЗаданиеНаОтгрузкуТовары.Склад = ТоварыНаСкладахОстатки.Склад
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               	|			рнТовары.Номенклатура КАК Номенклатура,
	               	|			рнТовары.Склад КАК Склад,
	               	|			рнТовары.АдресХранения КАК АдресХранения,
	               	|			рнТовары.КоличествоОстаток КАК КоличествоОстаток
	               	|		ИЗ
	               	|			РегистрНакопления.ТоварыАдресноеХранение.Остатки(
	               	|					,
	               	|					Номенклатура В
	               	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|							т.Номенклатура
	               	|						ИЗ
	               	|							ЗаданиеНаОтгрузкуТовары КАК т)) КАК рнТовары) КАК ТоварыАХОстатки
	               	|		ПО ЗаданиеНаОтгрузкуТовары.Номенклатура = ТоварыАХОстатки.Номенклатура
	               	|			И ЗаданиеНаОтгрузкуТовары.Склад = ТоварыАХОстатки.Склад
	               	|			И ЗаданиеНаОтгрузкуТовары.АдресХранения = ТоварыАХОстатки.АдресХранения
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               	|			рнТовары.Склад КАК Склад,
	               	|			рнТовары.АдресХранения КАК АдресХранения,
	               	|			рнТовары.КоличествоОстаток КАК КоличествоОстатокВАдресе
	               	|		ИЗ
	               	|			РегистрНакопления.ТоварыАдресноеХранение.Остатки(
	               	|					,
	               	|					Номенклатура В
	               	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|							т.Номенклатура
	               	|						ИЗ
	               	|							ЗаданиеНаОтгрузкуТовары КАК т)) КАК рнТовары) КАК ТоварыАХОстаткиАдрес
	               	|		ПО ЗаданиеНаОтгрузкуТовары.Склад = ТоварыАХОстаткиАдрес.Склад
	               	|			И ЗаданиеНаОтгрузкуТовары.АдресХранения = ТоварыАХОстаткиАдрес.АдресХранения
	               	|
	               	|УПОРЯДОЧИТЬ ПО
	               	|	НомерСтроки
	               	|ИТОГИ
	               	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура),
	               	|	СУММА(КОличествоЗаказано),
	               	|	СУММА(Количество),
	               	|	СУММА(КоличествоОстаток),
	               	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Склад),
	               	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ АдресХранения),
	               	|	СУММА(ОстатокНаСкладе),
	               	|	СУММА(ОстатокОТХНаСкладе),
	               	|	СУММА(ОстатокВАдресе),
	               	|	СУММА(ОстатокАдреса)
	               	|ПО
	               	|	ГруппаСкладов
	               	|АВТОУПОРЯДОЧИВАНИЕ";
					
//+++ 30.11.2015					
	Если ЭтотОбъект.Подразделение.ОбособленноеПодразделение Тогда
		Запрос.Текст =  стрЗаменить(Запрос.Текст , "(НЕ Склад.Транзитный)"  , "(Склад.Транзитный и Склад.Подразделение=&Подразделение)");
		Запрос.Параметры.Вставить("Подразделение",ЭтотОбъект.Подразделение);
	КонецЕсли;	 
	
	
	Если ТолькоТоЧтоОсталосьОтгрузкить Тогда
		Запрос.Текст = стрЗаменить(Запрос.Текст, "//ГДЕ ", "ГДЕ ");
	КонецЕсли;	
	             					
	Результат = Запрос.Выполнить();
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Строка");
	
	КоличествоСтрок=0; КоличествоЗаказаноИтого=0; КоличествоИтого=0;
	
Если не Результат.Пустой() Тогда
	ВыборкаГруппаСкладов = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	пока ВыборкаГруппаСкладов.Следующий() цикл
			// Выводим шапку накладной
	
		Если  СокрЛП(МаркаАвтомобиля)<>"" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Авто");
		ОбластьМакета.Параметры.Авто = СокрЛП(МаркаАвтомобиля);
		ОбластьМакета.Параметры.НомерАвто = СокрЛП(ГосНомерАвтомобиля);
		ОбластьМакета.Параметры.Пункт = Направление; //+++ 23.04.2015
		ТабДокумент.Вывести(ОбластьМакета);
		КОнецЕсли;
		 
	//СведенияОПоставщике = СведенияОЮрФизЛице(Организация, Шапка.Дата);

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	#Если Клиент Тогда
		ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(Ссылка, "Задание на отгрузку");
	#КонецЕсли
	
	ОбластьМакета.Параметры.ТекстВодитель  = СокрЛП(ссылка.МаркаАвтомобиля)+" "+СокрЛП(ссылка.ГосНомерАвтомобиля)+" "+СокрЛП(ссылка.Водитель) + " "+СокрЛП(ссылка.ТелефонВодителя);//+++ 31.03.2014
	ОбластьМакета.Параметры.Перевозчик = ЭтотОбъект.Перевозчик; // +++ 11.05.2017

	ОбластьМакета.Параметры.СловоВажный = ?(ЭтотОбъект.Важность = перечисления.Важность.Высокая, "!!!", "");//+++ 13.09.2013
   ОбластьМакета.Параметры.НомерОчереди = ?(ЭтотОбъект.НомерОчереди=0,"",ЭтотОбъект.НомерОчереди); //+++ 03.09.2014
	
	//+++ Штрих-Код номера документа - февраль 2012
	// требуется установленная компонента 1CBarCode.exe
    	ОбШтрихКодСообщение = глТорговоеОборудование.ПолучитьШтрихКодПоДокументу(Ссылка);
		попытка
		ОбШтрихКод=ОбластьМакета.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
		КонецПопытки; 
	//+++)
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(Организация, Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ПоставщикТекст = "Поставщик:";//+++
	ТабДокумент.Вывести(ОбластьМакета);

	//СведенияОПолучателе = СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(КОнтрагент, Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ПокупательТекст = "Покупатель:";
		
	ТабДокумент.Вывести(ОбластьМакета);

		
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);

	ВыборкаНоменклатура = ВыборкаГруппаСкладов.Выбрать();
	КоличествоСтрок=0; КоличествоЗаказаноИтого=0; КоличествоИтого=0; ОстатокНаСкладеИтого = 0;
	
	списУбрать = мПолучитьЛитыеБезНагрузки();//25.10.2017
	
	Пока ВыборкаНоменклатура.Следующий() Цикл     //======================================================
		
		Если списУбрать.НайтиПоЗначению(ВыборкаНоменклатура.Номенклатура)<>Неопределено тогда//25.10.2017
			продолжить;
		КонецЕсли;	
		КоличествоСтрок = КоличествоСтрок + 1;
		КоличествоЗаказаноИтого = КоличествоЗаказаноИтого + ВыборкаНоменклатура.КоличествоЗаказано;
		КоличествоИтого = КоличествоИтого + ВыборкаНоменклатура.Количество;
		
		//+++( 25.07.2014 - для Аксессуаров нужен Артикул!
		Если ВыборкаНоменклатура.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Аксессуары
				или ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(46) 
				или ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(3946)//+++ 27.04.2018
		  Тогда
             ОбластьНоменклатура =Макет.ПолучитьОбласть("Строка3");
             ОбластьНоменклатура.Параметры.Артикул ="арт."+СокрЛП(ВыборкаНоменклатура.Номенклатура.Артикул);   //27.04.2018 строка(ВыборкаНоменклатура.Номенклатура.ВидТовара)+": "+
          Иначе
             ОбластьНоменклатура =Макет.ПолучитьОбласть("Строка");
          КонецЕсли;
  	   //+++)

		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		Если СокрЛП(ВыборкаНоменклатура.АдресХранения) <> "" Тогда
			ОстатокНаСкладеИтого = ОстатокНаСкладеИтого + ВыборкаНоменклатура.ОстатокВАдресе;
			
			//------------остаток товара в адресе / полный остаток на складе---------------------
			
			стрОстаток =" "+?(ВыборкаНоменклатура.ОстатокНаСкладе>ВыборкаНоменклатура.ОстатокВАдресе, 
			строка(ВыборкаНоменклатура.ОстатокВАдресе)+"/"+строка(ВыборкаНоменклатура.ОстатокНаСкладе),
			строка(ВыборкаНоменклатура.ОстатокВАдресе) );
			
			delta = ВыборкаНоменклатура.ОстатокАдреса - ВыборкаНоменклатура.ОстатокВАдресе;
			Если delta>0 Тогда // есть другие товары в ячейке!
				ОбластьНоменклатура.Параметры.Склад = строка(ВыборкаНоменклатура.Склад)+":"+строка(ВыборкаНоменклатура.АдресХранения)+" (+"+строка(delta)+")";
				ОбластьНоменклатура.Параметры.ОстатокНаСкладе = "*"+стрОстаток;
			Иначе
				ОбластьНоменклатура.Параметры.Склад = строка(ВыборкаНоменклатура.Склад)+":"+строка(ВыборкаНоменклатура.АдресХранения);
				ОбластьНоменклатура.Параметры.ОстатокНаСкладе = стрОстаток;
			КонецЕсли;			
		Иначе
			//-----------------------отражение ОТХ------------------------------------------------
			delta = ВыборкаНоменклатура.ОстатокОТХНаСкладе;
			Если delta>0 Тогда
				ОбластьНоменклатура.Параметры.Склад = строка(ВыборкаНоменклатура.Склад)+" (+"+строка(delta)+"отх)";
				ОбластьНоменклатура.Параметры.ОстатокНаСкладе = строка(ВыборкаНоменклатура.ОстатокНаСкладе)+" / "+строка(ВыборкаНоменклатура.ОстатокНаСкладе+delta);
			КонецЕсли;
			
			ОстатокНаСкладеИтого = ОстатокНаСкладеИтого + ВыборкаНоменклатура.ОстатокНаСкладе;
		КонецЕсли;	
		
		//+++ 25.07.2014 для аксессуаров "Артикул - Товар"---------------------------------------------
		Если ВыборкаНоменклатура.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Аксессуары 
			или ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(46) 
				или ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(3946)//+++ 27.04.2018
        тогда
			ОбластьНоменклатура.Параметры.Номенклатура = строка(ВыборкаНоменклатура.Номенклатура);
		Иначе
			ОбластьНоменклатура.Параметры.Номенклатура = строка(ВыборкаНоменклатура.Номенклатура.ВидТовара)+": "+ строка(ВыборкаНоменклатура.Номенклатура);
		КонецЕсли;	
		
		ОбластьНоменклатура.Параметры.Код = СокрЛП(ВыборкаНоменклатура.Номенклатура.Код);
		ТабДокумент.Вывести(ОбластьНоменклатура);
	КонецЦикла;	   

	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
    ОбластьИтого.Параметры.КоличествоЗаказаноИтого = КоличествоЗаказаноИтого;
    ОбластьИтого.Параметры.КоличествоИтого		   = КоличествоИтого;
	ОбластьИтого.Параметры.ОстатокНаСкладеИтого    = ОстатокНаСкладеИтого;
	ОбластьИтого.Параметры.КоличествоСтрок = КоличествоСтрок;
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьПримечение = Макет.ПолучитьОбласть("Примечание");
	//+++ 20.11.2017 по задаче №36271
	Если ЭтотОбъект.Подразделение.ОбособленноеПодразделение тогда
		ОбластьПримечение.Параметры.Комментарий = Комментарий;
	Иначе 	
		ОбластьПримечение.Параметры.Комментарий = ""; //+++ 25.10.2017 ФРОЛОВ
	КонецЕсли;
	
	//стрЗаменить(Комментарий, символы.ПС," ");// в 1 строку!
	ТабДокумент.Вывести(ОбластьПримечение);
	
	
	ОбластьПодвалЗаказа = Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьПодвалЗаказа.Параметры.ФИОИсполнителя = "";
	//ОбластьПодвалЗаказа.Параметры.Менеджер = "";
	
	//+++( определение одного или нескольких менеджеров по заказам
	менеджеры = ""; 
	списЗнач1 = ссылка.ЗаказыПокупателей.ВыгрузитьКолонку("ЗаказПокупателя");
	Если списЗнач1.Количество()>0 Тогда
		мен1 = СокрЛП(списЗнач1[0].ДоговорКонтрагента.ОтветственноеЛицо.Код);
		физЛицо1  = списЗнач1[0].ДоговорКонтрагента.ОтветственноеЛицо.ФизЛицо;
				Если ЗначениеЗаполнено(физЛицо1) Тогда
				 тел1 = ПолучитьВсеТелефоны(физЛицо1); //14.08.2017
				 менеджеры = строка(мен1)+": "+тел1;   //краткое!
    			Иначе
					менеджеры = мен1; //ТелефонМенеджера;
				КонецЕсли;

		для i=1 по списЗнач1.Количество()-1 цикл
			мен = СокрЛП(списЗнач1[i].ДоговорКонтрагента.ОтветственноеЛицо.Код);
			Если Найти(менеджеры, мен)=0 Тогда
			физЛицо1 = списЗнач1[i].ДоговорКонтрагента.ОтветственноеЛицо.ФизЛицо;
				Если ЗначениеЗаполнено(физЛицо1) Тогда
	            тел1 = ПолучитьВсеТелефоны(физЛицо1); //14.08.2017
				менеджеры = менеджеры+",
				|"+строка(мен)+": "+тел1;
				Иначе
				менеджеры = менеджеры+",
				|"+мен;
			    КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
		менеджеры = менеджеры+".";
	КонецЕсли;
	ОбластьПодвалЗаказа.Параметры.Менеджер = менеджеры;
	//+++)
	
	ТабДокумент.Вывести(ОбластьПодвалЗаказа);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();  
КонецЦикла;

КонецЕсли;

    Если Подразделение = Справочники.Подразделения.НайтиПоКоду("00112") Тогда   //Плотников, для Питера печатать еще крышки
		ИмяМакета = "КрышкиЗадание";
		ОбъектВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.НайтиПоНаименованию(ИмяМакета).ПолучитьОбъект();
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = ЭтотОбъект.Ссылка;
		ТабличныйДокументОбъект  = Обработка.Печать();
		ТабличныйДокументОбъект.Показать();	
	КонецЕсли; 
	
	Возврат ТабДокумент;
	
КонецФункции	

функция ПолучитьВсеТелефоны(ФизЛицо1)
	рез = "";
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	КонтактнаяИнформация.Представление,
	                |	КонтактнаяИнформация.Вид,
	                |	КонтактнаяИнформация.Объект
	                |ПОМЕСТИТЬ Сотовый
	                |ИЗ
	                |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                |ГДЕ
	                |	КонтактнаяИнформация.Тип = &Тип
	                |	И КонтактнаяИнформация.Объект = &Объект
	                |	И КонтактнаяИнформация.Вид = &Вид1
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	КонтактнаяИнформация.Представление,
	                |	КонтактнаяИнформация.Вид,
	                |	КонтактнаяИнформация.Объект
	                |ПОМЕСТИТЬ Внутренний
	                |ИЗ
	                |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                |ГДЕ
	                |	КонтактнаяИнформация.Тип = &Тип
	                |	И КонтактнаяИнформация.Объект = &Объект
	                |	И КонтактнаяИнформация.Вид = &Вид2
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	КонтактнаяИнформация.Представление,
	                |	КонтактнаяИнформация.Вид,
	                |	КонтактнаяИнформация.Объект
	                |ПОМЕСТИТЬ Сотовый2
	                |ИЗ
	                |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                |ГДЕ
	                |	КонтактнаяИнформация.Тип = &Тип
	                |	И КонтактнаяИнформация.Объект = &Объект
	                |	И КонтактнаяИнформация.Вид = &Вид3
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	Сотовый.Представление КАК Сотовый,
	                |	Внутренний.Представление КАК Внутренний,
	                |	Сотовый2.Представление КАК Помошник
	                |ИЗ
	                |	Сотовый2 КАК Сотовый2
	                |		ПОЛНОЕ СОЕДИНЕНИЕ Внутренний КАК Внутренний
	                |		ПО (ИСТИНА)
	                |		ПОЛНОЕ СОЕДИНЕНИЕ Сотовый КАК Сотовый
	                |		ПО (ИСТИНА)";
	 Запрос.УстановитьПараметр("Вид1", Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00022"));
	 Запрос.УстановитьПараметр("Вид3", Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("00024"));
	 Запрос.УстановитьПараметр("Вид2", Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("38840"));
	 Запрос.УстановитьПараметр("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);
	 Запрос.УстановитьПараметр("Объект", ФизЛицо1); 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	// Рез = Выборка.Сотовый +"; " + " вн. " +Выборка.Внутренний+"; " + + Выборка.Помошник+"; ";
	 Пока Выборка.Следующий() Цикл
	 //рез = рез +?(строка(выборка.Вид)="Внутренний телефон" и СокрЛП(выборка.Представление)<>"","вн.", "")
	 //			+ СокрЛП(выборка.Представление)+"; ";
	 Рез = "" + Выборка.Сотовый +"; " + " вн. " +Выборка.Внутренний+"; " +  Выборка.Помошник+"; ";
	 КонецЦикла;
	
	возврат рез;
 КонецФункции
 
//---------------------------------------------------------------
функция ПечатьЗаданияНаОтгрузкуПоОчередям()
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаданиеНаОтгрузку_Новый";

    Макет = ПолучитьМакет("Заказ");
    Запрос = Новый Запрос;
	//15.08.2013  заменен на признак .АдресноеХранение
	//Склад5000 = справочники.Склады.НайтиПоКоду("00642");
	
	Запрос.УстановитьПараметр("Регистратор", ссылка );
	Запрос.УстановитьПараметр("Дата0", Дата - 1 );
	Запрос.УстановитьПараметр("Дата1", Дата + 1 );
	//Запрос.УстановитьПараметр("Склад5000", Склад5000 );
	
//-----------------------Определение Очередей-------------------------
Заказы2 = ЗаказыПокупателей.Выгрузить(); 


// Создание описателя типов для таблицы значений
КЧ = Новый КвалификаторыЧисла(3,0);
КС7 = Новый КвалификаторыСтроки(7);
КС8 = Новый КвалификаторыСтроки(8);
КС50 = Новый КвалификаторыСтроки(50);
КС250 = Новый КвалификаторыСтроки(250);
Массив = Новый Массив;
Массив.Добавить(Тип("Строка"));
ОписаниеТиповС7 = Новый ОписаниеТипов(Массив, , КС7);
Массив.Очистить();
Массив.Добавить(Тип("Строка"));
ОписаниеТиповС8 = Новый ОписаниеТипов(Массив, , КС8);

Массив.Очистить();
Массив.Добавить(Тип("Строка"));
ОписаниеТиповС50 = Новый ОписаниеТипов(Массив, , КС50);
Массив.Очистить();
Массив.Добавить(Тип("Строка"));
ОписаниеТиповС250 = Новый ОписаниеТипов(Массив, , КС250);
Массив.Очистить();
Массив.Добавить(Тип("Число"));
ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);

Заказы2.Колонки.Добавить("КонтрагентКод",ОписаниеТиповС7, 	"КонтрагентКод", 7);
Заказы2.Колонки.Добавить("АдресДоставки",ОписаниеТиповС250, "АдресДоставки", 250);
Заказы2.Колонки.Добавить("Ответственный",ОписаниеТиповС50,  "Ответственный", 50);
Заказы2.Колонки.Добавить("Очередь",		 ОписаниеТиповЧ, 	"Очередь",3); 							//15.11.2016
Заказы2.Колонки.Добавить("Номер", 		ОписаниеТиповС8, 	"Номер",8); 	//+++ 03.11.2017  8+2 х N до 20 заказов


для каждого стр2 из Заказы2 цикл      //+++ 01.08.2014 - для запроса нужно как есть (без СокрЛП() )
	стр2.КонтрагентКод = стр2.ЗаказПокупателя.Контрагент.Код;
	стр2.АдресДоставки = стр2.ЗаказПокупателя.АдресДоставки; 
	стр2.Ответственный = стр2.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо.Код;
	стр2.Очередь  	= стр2.НомерОчереди;                                                    		//15.11.2016
	
	стр2.Номер  	=  стр2.ЗаказПокупателя.Номер;	//+++ 03.11.2017
	
КонецЦикла;	
Заказы1 = Заказы2.Скопировать(); //+++ 03.11.2017
Заказы1.Свернуть("КонтрагентКод, АдресДоставки, Ответственный, Очередь, Номер", "КоличествоШтук");	
	
Заказы2.Свернуть("КонтрагентКод, АдресДоставки, Ответственный, Очередь", "КоличествоШтук");	//15.11.2016

//---------Сборка номеров в 1 поле------
Заказы2.Колонки.Добавить("Номер", ОписаниеТиповС250, "Номер",250); 	//+++ 03.11.2017  8+2 х N до 20 заказов
N = ЗаказыПокупателей.Количество();
 Очередь = 0;
Для каждого стр2 из Заказы2 цикл
	
	СтрПоиска2 = СокрЛП(стр2.КонтрагентКод)+"-"+СокрЛП(стр2.АдресДоставки)
						+"-"+СокрЛП(стр2.Ответственный)+"-"+СокрЛП(стр2.Очередь); //+++ 03.11.2017
	
	номерНакл = "";
	СписЗак = новый СписокЗначений;
	Для i=0 по N-1 цикл
		стр1 = ЗаказыПокупателей[i];
		СтрПоиска1 = СокрЛП(стр1.ЗаказПокупателя.Контрагент.Код)+"-"+СокрЛП(стр1.ЗаказПокупателя.АдресДоставки)
			+"-"+СокрЛП(стр1.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо.Код)+"-"+СокрЛП(стр1.НомерОчереди); //+++ 03.11.2017
			Если СтрПоиска1 = СтрПоиска2 Тогда
			номерНакл = номерНакл  + Строка(стр1.ЗаказПокупателя.Номер)+", ";
			СписЗак.Добавить( стр1.ЗаказПокупателя );
			КонецЕсли;	
	КонецЦикла;	
	стр2.Номер = Лев(номерНакл, стрДлина(номерНакл) - 2); //", "
КонецЦикла;	

//Запрос.УстановитьПараметр("Заказы2", Заказы2);
Запрос.УстановитьПараметр("Заказы1", Заказы1);

Товары2 = товары.Выгрузить();
Товары2.Колонки.Добавить("НоменклатураКод", ОписаниеТиповС7, "НоменклатураКод", 7);
Для каждого стр2 из Товары2 цикл
	стр2.НоменклатураКод = стр2.Номенклатура.Код;
КонецЦикла;	
Запрос.УстановитьПараметр("Товары2", Товары2);
 
	Запрос.Текст = 	"ВЫБРАТЬ
	               	|	Заказы1.Очередь КАК НомерОчереди,
	               	|	Заказы1.КонтрагентКод КАК КонтрагентКод,
	               	|	Заказы1.АдресДоставки КАК АдресДоставки,
	               	|	Заказы1.Ответственный КАК МенеджерКод,
	               	|	Заказы1.Номер КАК Номер
	               	|ПОМЕСТИТЬ ВТ1
	               	|ИЗ
	               	|	&Заказы1 КАК Заказы1
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	Товары2.НомерСтроки КАК НомерСтроки,
	               	|	Товары2.НоменклатураКод КАК НоменклатураКод,
	               	|	Товары2.Склад КАК Склад,
	               	|	Товары2.АдресХранения КАК АдресХранения,
	               	|	Товары2.Количество КАК УжеОтгружено
	               	|ПОМЕСТИТЬ ВТовары
	               	|ИЗ
	               	|	&Товары2 КАК Товары2
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	РезервНаСкладахОбороты.Номенклатура КАК Номенклатура,
	               	|	РезервНаСкладахОбороты.Склад КАК Склад,
	               	|	РезервНаСкладахОбороты.АдресХранения КАК АдресХранения,
	               	|	РезервНаСкладахОбороты.КоличествоПриход КАК КоличествоЗаказано,
	               	|	РезервНаСкладахОбороты.КоличествоРасход КАК Количество,
	               	|	РезервНаСкладахОбороты.Склад.ГруппаСкладов КАК ГруппаСкладов,
	               	|	ВЫБОР
	               	|		КОГДА РезервНаСкладахОбороты.Склад.АдресноеХранение
	               	|			ТОГДА ЕСТЬNULL(ТоварыАдресноеХранениеОстатки.КоличествоОстаток, 0)
	               	|		ИНАЧЕ ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
	               	|	КОНЕЦ КАК ОстатокНаСкладе,
	               	|	РезервНаСкладахОбороты.ЗаказПокупателя.Контрагент КАК Контрагент,
	               	|	ВТ2.НомерОчереди КАК НомерОчереди,
	               	|	ВТ2.КонтрагентКод КАК КонтрагентКод,
	               	|	ВТ2.МенеджерКод КАК МенеджерКод,
	               	|	ВТ2.АдресДоставки КАК АдресДоставки,
	               	|	ВТовары2.НомерСтроки КАК НомерСтроки,
	               	|	ЕСТЬNULL(ТоварыНаОтветственномХраненииОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокОТХ,
	               	|	ЕСТЬNULL(ТоварыАдресноеХранениеОстатки1.КоличествоОстаток, 0) КАК ОстатокВАдресе
	               	|ИЗ
	               	|	ВТ1 КАК ВТ2
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервНаСкладах.Обороты(
	               	|				&Дата0,
	               	|				&Дата1,
	               	|				Регистратор,
	               	|				Номенклатура.Код В
	               	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|						вт.НоменклатураКод
	               	|					ИЗ
	               	|						ВТовары КАК вт)) КАК РезервНаСкладахОбороты
	               	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	               	|					,
	               	|					Номенклатура.Код В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								вт.НоменклатураКод
	               	|							ИЗ
	               	|								ВТовары КАК вт)
	               	|						И Склад В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								вт.Склад
	               	|							ИЗ
	               	|								ВТовары КАК вт)) КАК ТоварыНаСкладахОстатки
	               	|			ПО РезервНаСкладахОбороты.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               	|				И РезервНаСкладахОбороты.Склад = ТоварыНаСкладахОстатки.Склад
	               	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыАдресноеХранение.Остатки(
	               	|					,
	               	|					Номенклатура.Код В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								вт.НоменклатураКод
	               	|							ИЗ
	               	|								ВТовары КАК вт)
	               	|						И АдресХранения В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								вт.АдресХранения
	               	|							ИЗ
	               	|								ВТовары КАК вт)) КАК ТоварыАдресноеХранениеОстатки
	               	|			ПО РезервНаСкладахОбороты.Номенклатура = ТоварыАдресноеХранениеОстатки.Номенклатура
	               	|				И РезервНаСкладахОбороты.АдресХранения = ТоварыАдресноеХранениеОстатки.АдресХранения
	               	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	               	|					,
	               	|					Номенклатура.Код В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								вт.НоменклатураКод
	               	|							ИЗ
	               	|								ВТовары КАК вт)
	               	|						И Склад В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								вт.Склад
	               	|							ИЗ
	               	|								ВТовары КАК вт)) КАК ТоварыНаОтветственномХраненииОстатки
	               	|			ПО РезервНаСкладахОбороты.Номенклатура = ТоварыНаОтветственномХраненииОстатки.Номенклатура
	               	|				И РезервНаСкладахОбороты.Склад = ТоварыНаОтветственномХраненииОстатки.Склад
	               	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыАдресноеХранение.Остатки(
	               	|					,
	               	|					Номенклатура.Код В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								вт.НоменклатураКод
	               	|							ИЗ
	               	|								ВТовары КАК вт)
	               	|						И АдресХранения В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								вт.АдресХранения
	               	|							ИЗ
	               	|								ВТовары КАК вт)) КАК ТоварыАдресноеХранениеОстатки1
	               	|			ПО РезервНаСкладахОбороты.АдресХранения = ТоварыАдресноеХранениеОстатки1.АдресХранения
	               	|			ПОЛНОЕ СОЕДИНЕНИЕ ВТовары КАК ВТовары2
	               	|			ПО РезервНаСкладахОбороты.Номенклатура.Код = ВТовары2.НоменклатураКод
	               	|				И РезервНаСкладахОбороты.Склад = ВТовары2.Склад
	               	|				И РезервНаСкладахОбороты.АдресХранения = ВТовары2.АдресХранения
	               	|		ПО (ВТ2.Номер = (ВЫРАЗИТЬ(РезервНаСкладахОбороты.ЗаказПокупателя.Номер КАК СТРОКА(8))))
	               	|ГДЕ
	               	|	РезервНаСкладахОбороты.Регистратор = &Регистратор
	               	|	И РезервНаСкладахОбороты.КоличествоОборот <> 0
	               	|
	               	|УПОРЯДОЧИТЬ ПО
	               	|	НомерСтроки,
	               	|	Склад,
	               	|	АдресХранения,
	               	|	НомерОчереди
	               	|ИТОГИ
//+++ 07.11.2017 ---------------------------------------------------------------------------
				//+++ 07.11.2017 - так правильнее
	               	|	МИНИМУМ(АдресХранения),
					
	               	|	Сумма(КоличествоЗаказано),
	           	//+++ 07.11.2017 - так правильнее
	               	|	минимум(Количество),
	               	|	минимум(ОстатокНаСкладе),
					
	               	|	МАКСИМУМ(Контрагент),
	               	|	МАКСИМУМ(КонтрагентКод),
	               	|	МАКСИМУМ(МенеджерКод),
	               	|	МАКСИМУМ(АдресДоставки),
	               	|	МИНИМУМ(НомерСтроки),
	           	//+++ 07.11.2017 - так правильнее
	               	|	минимум(КоличествоОстатокОТХ),
	               	|	минимум(ОстатокВАдресе)
	               	|ПО
	               	|	ГруппаСкладов,
	               	|	Номенклатура,
	               	|	Склад,
	               	|	НомерОчереди
	               	|АВТОУПОРЯДОЧИВАНИЕ";
					
	Результат = Запрос.Выполнить();
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Строка1");
	
	ОбластьОчередь = Макет.ПолучитьОбласть("Строка2");//+++
	
	КоличествоСтрок=0; КоличествоЗаказаноИтого=0; КоличествоИтого=0;
	
	//+++ 03.02.2017 -  анализ уже отгруженных товаров по порядку очередей и номера строки...
	таблТов = Товары.Выгрузить();
	списУбрать = мПолучитьЛитыеБезНагрузки();//25.10.2017

Если не Результат.Пустой() Тогда
	ВыборкаГруппаСкладов = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	пока ВыборкаГруппаСкладов.Следующий() цикл
		
	ВыборкаНоменклатура = ВыборкаГруппаСкладов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
//+++ 05.08.2018 --- для 8000 и Ангаров	-- 2 раза проходим 
	флРазделятьПоВидамТоваров = ложь; флРазделятьДиски=ложь; 
	Если НЕ ВыборкаГруппаСкладов.ГруппаСкладов.Транзит //только Ярославские группы
	и (ВыборкаГруппаСкладов.ГруппаСкладов.Код = "08"
		или Найти(ВыборкаГруппаСкладов.ГруппаСкладов.Наименование,"Ангар")>0) тогда //любой ангар - ремонт или -И
		
		Если ВыборкаГруппаСкладов.ГруппаСкладов.Код <> "12"	тогда   
			флРазделятьПоВидамТоваров = Истина;
			//+++( 24.08.2018 - предварительный анализ Ш или Д или и То и Другое ==========================	 
			колШины=0; колДиски=0;
			Пока ВыборкаНоменклатура.Следующий() Цикл     
				Если списУбрать.НайтиПоЗначению(ВыборкаНоменклатура.Номенклатура)<>Неопределено тогда//25.10.2017
					продолжить;
				КонецЕсли;	
			
				Если флРазделятьПоВидамТоваров тогда //+++ 05.08.2018
				    Если ВыборкаНоменклатура.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Шины тогда
						колШины = колШины + 1;//а есть ли шины?
					иначе  //не шины!
						колДиски=колДиски+1;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если колШины=0 и колДиски=0 тогда //нечего разделять!
			флРазделятьПоВидамТоваров = ЛОЖЬ;
			КонецЕсли; 		
			
		 // сначала "Шины",потов всё остальное! если нет,Шин, Сначала нешины(Диски)
		 	флРазделятьДиски  = ?(колШины>0, ЛОЖЬ, Истина); 
		 	флРазделятьДиски0 = флРазделятьДиски; // для "выхода" из перехода!
	  	КонецЕсли;
	 
   КонецЕсли;
   		
		// Выводим шапку накладной ============================================================
~111:	Если  СокрЛП(МаркаАвтомобиля)<>"" Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Авто");
			ОбластьМакета.Параметры.Авто = СокрЛП(МаркаАвтомобиля);
			ОбластьМакета.Параметры.НомерАвто = СокрЛП(ГосНомерАвтомобиля);
			ОбластьМакета.Параметры.Пункт = Направление; //+++ 23.04.2015
			ТабДокумент.Вывести(ОбластьМакета);
		КОнецЕсли;
	//СведенияОПоставщике = СведенияОЮрФизЛице(Организация, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	#Если Клиент Тогда
		ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(Ссылка, "Задание на отгрузку");
	#КонецЕсли	
	ОбластьМакета.Параметры.СловоВажный = ?(ЭтотОбъект.Важность = перечисления.Важность.Высокая, "!!!", ""); //+++ 13.09.2013
	ОбластьМакета.Параметры.НомерОчереди = ?(ЭтотОбъект.НомерОчереди=0,"",Строка(ЭтотОбъект.НомерОчереди))   //+++ 24.08.2018 Число>>Строку
													+?(флРазделятьПоВидамТоваров, ?(флРазделятьДиски,"д","ш"),""); //+++ 05.08.2018
	
	ОбластьМакета.Параметры.ТекстВодитель = СокрЛП(ссылка.МаркаАвтомобиля)+" "+СокрЛП(ссылка.ГосНомерАвтомобиля)+" "+СокрЛП(ссылка.Водитель)+ " "+СокрЛП(ссылка.ТелефонВодителя);//+++ 31.03.2014
	ОбластьМакета.Параметры.Перевозчик = ЭтотОбъект.Перевозчик; // +++ 11.05.2017
	//+++ Штрих-Код номера документа - февраль 2012
	// требуется установленная компонента 1CBarCode.exe
    	ОбШтрихКодСообщение = глТорговоеОборудование.ПолучитьШтрихКодПоДокументу(Ссылка);
		попытка
		ОбШтрихКод=ОбластьМакета.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
		КонецПопытки; 
	//+++)
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(Организация, Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ПоставщикТекст = "Поставщик:";//+++
	ТабДокумент.Вывести(ОбластьМакета);

	//СведенияОПолучателе = СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(КОнтрагент, Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ПокупательТекст = "Покупатель:";
		
	ТабДокумент.Вывести(ОбластьМакета);
    		
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ВыборкаНоменклатура.Сбросить(); //24.08.2018 c начала каждый раз!
	КоличествоСтрок=0; КоличествоЗаказаноИтого=0; КоличествоИтого=0; ОстатокНаСкладеИтого = 0;
	
	Пока ВыборкаНоменклатура.Следующий() Цикл     //======================================================
		
		Если списУбрать.НайтиПоЗначению(ВыборкаНоменклатура.Номенклатура)<>Неопределено тогда//25.10.2017
			продолжить;
		КонецЕсли;	
		
		Если флРазделятьПоВидамТоваров тогда //+++ 05.08.2018
			если флРазделятьДиски тогда
				Если ВыборкаНоменклатура.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Шины тогда
				//	колШины = колШины + 1;//а есть ли шины? уже выше посчитано
				 продолжить;
			 	КонецЕсли;
			иначе //НЕ шины уже показаны, теперь только Шины (если они были)
				Если ВыборкаНоменклатура.Номенклатура.ВидТовара <> перечисления.ВидыТоваров.Шины тогда
				//	колдиски=колдиски+1; // уже выше посчитано
				 продолжить;
			 	КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		КоличествоСтрок = КоличествоСтрок + 1;
		КоличествоЗаказаноИтого = КоличествоЗаказаноИтого + ВыборкаНоменклатура.КоличествоЗаказано;
		//+++( 03.02.2017 общее количество по товару...
		//КоличествоИтого = КоличествоИтого + ВыборкаНоменклатура.Количество;
		
		//итоговое количество по товару по группе складов!
		таблТов1 = таблТов.НайтиСтроки(новый Структура("Номенклатура, ГруппаСкладов",ВыборкаНоменклатура.Номенклатура,
					?(ВыборкаНоменклатура.ГруппаСкладов.Пустая(), справочники.ГруппыСкладов.ОсновнойСклад, ВыборкаНоменклатура.ГруппаСкладов)
					                  )               );
		колТов = 0;
		для каждого стрТов из таблТов1 цикл
		 колТов = колТов + стрТов.Количество;
		КонецЦикла;
		//КоличествоИтого = КоличествоИтого + стрТов.Количество;
		//+++)
		ОстатокНаСкладеИтого = ОстатокНаСкладеИтого + ВыборкаНоменклатура.ОстатокНаСкладе;
		
		//+++ 27.07.2014
		Если ВыборкаНоменклатура.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Аксессуары 
					или ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(46) 
					 или ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(3946)
			Тогда 
			ОбластьНоменклатура = Макет.ПолучитьОбласть("Строка4");
			ОбластьНоменклатура.параметры.Артикул = "арт."+СокрЛП(ВыборкаНоменклатура.Номенклатура.Артикул);  //строка(ВыборкаНоменклатура.Номенклатура.ВидТовара)+": "+ 
		Иначе	
        	ОбластьНоменклатура = Макет.ПолучитьОбласть("Строка1");
        КонецЕсли;

		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		// 03.02.2017 - "анализ" что отгружено v, превышает ! или меньше -
		ОбластьНоменклатура.Параметры.Количество = ?(ВыборкаНоменклатура.КоличествоЗаказано=колТов, "", 
														?(ВыборкаНоменклатура.КоличествоЗаказано<колТов,"< ", 
														     ?(колТов>0,"!!! ","") ) )
												   + формат(колТов,"ЧН=' '"); 
		//+++ 07.11.2017  тут нет склада!
		//Если СокрЛП(ВыборкаНоменклатура.АдресХранения) <> "" Тогда
		//	ОбластьНоменклатура.Параметры.Склад = СокрЛП(ВыборкаНоменклатура.Склад)+": "+ВыборкаНоменклатура.АдресХранения;
		//КонецЕсли;	
		
		//27.07.2014------------------------------------------------------------------------
		Если ВыборкаНоменклатура.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Аксессуары 
			или ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(46) 
				или ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(3946)//+++ 27.04.2018
        Тогда
			ОбластьНоменклатура.Параметры.Номенклатура = строка(ВыборкаНоменклатура.Номенклатура); //28.04
		Иначе
			ОбластьНоменклатура.Параметры.Номенклатура = строка(ВыборкаНоменклатура.Номенклатура.ВидТовара)+": "+ строка(ВыборкаНоменклатура.Номенклатура);
		КонецЕсли;
		
		ОбластьНоменклатура.Параметры.Код = СокрЛП(ВыборкаНоменклатура.Номенклатура.Код);
		ТабДокумент.Вывести(ОбластьНоменклатура);
		
		//==========================Группировка по складу и адресу для вывода очередей============================
		ВыборкаСклад = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСклад.Следующий() Цикл     
			
			ВыборкаОчередь = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); //+++ 07.11.2017  - еще одна группировка! нужна для адресов!
			Пока ВыборкаОчередь.Следующий() Цикл  
			ВыборкаОчередьАдрес = ВыборкаОчередь.Выбрать(); 
			
			//ВыборкаОчередьАдрес = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
			
			Пока ВыборкаОчередьАдрес.Следующий() Цикл     
			ЗаполнитьЗначенияСвойств(ОбластьОчередь.Параметры, ВыборкаОчередьАдрес);	
			
			   Если СокрЛП(ВыборкаОчередьАдрес.АдресХранения)<>"" Тогда
				ОбластьОчередь.Параметры.Склад = СокрЛП(ВыборкаОчередьАдрес.Склад)+": "+ВыборкаОчередьАдрес.АдресХранения;
				     //16.08.2013- здесь в поле ОстатокНаСкладе = Кол.1 Товара в Адресе
					delta = ВыборкаОчередьАдрес.ОстатокНаСкладе - ВыборкаОчередьАдрес.ОстатокВАдресе;
					Если delta>0 Тогда // есть другие товары в ячейке!
						ОбластьОчередь.Параметры.Склад = СокрЛП(ВыборкаОчередьАдрес.Склад)+":"+ВыборкаОчередьАдрес.АдресХранения+" (+"+строка(delta)+")";
						ОбластьОчередь.Параметры.ОстатокНаСкладе = "*"+строка(ВыборкаОчередьАдрес.ОстатокНаСкладе); //+++ 06.10.2014   ОбластьОчередь.
					КонецЕсли;
				Иначе //обычный склад
					delta = ВыборкаОчередьАдрес.КоличествоОстатокОТХ; //16.08.2013
					Если delta>0 Тогда
						ОбластьОчередь.Параметры.Склад = СокрЛП(ВыборкаОчередьАдрес.Склад)+" (+"+строка(delta)+"отх)";
						ОбластьОчередь.Параметры.ОстатокНаСкладе = строка(ВыборкаОчередьАдрес.ОстатокНаСкладе)+" / "+строка(ВыборкаОчередьАдрес.ОстатокНаСкладе + delta);
					ИначеЕсли ВыборкаОчередьАдрес.ОстатокНаСкладе>0 Тогда //+++ 01.08.2014
						ОбластьОчередь.Параметры.Склад = СокрЛП(ВыборкаОчередьАдрес.Склад);
						ОбластьОчередь.Параметры.ОстатокНаСкладе = строка(ВыборкаОчередьАдрес.ОстатокНаСкладе);
					КонецЕсли;	
				КонецЕсли;
				
				//+++ 01.08.2014 - выводит склад и количество обязательно, даже Если инфо по очереди полностью или частично потеряно
				Если    СокрЛП(ВыборкаОчередьАдрес.НомерОчереди) <>"" 
					или СокрЛП(ВыборкаОчередьАдрес.КонтрагентКод)<>""
				 	или СокрЛП(ВыборкаОчередьАдрес.АдресДоставки)<>"" 
					  или ВыборкаОчередьАдрес.ОстатокНаСкладе>0
					  или ВыборкаОчередьАдрес.КоличествоОстатокОТХ>0 Тогда
					  
					  Контр = справочники.Контрагенты.НайтиПоКоду(ВыборкаОчередьАдрес.КонтрагентКод);
						
					ФизЮрАдрес = ?(СокрЛП(ВыборкаОчередьАдрес.АдресДоставки)="", "", " ["+Лев(СокрЛП(ВыборкаОчередьАдрес.АдресДоставки),50)
					  +?(стрДлина(ВыборкаОчередьАдрес.АдресДоставки)>50,"...", "")+"]");

					//+++ 03.02.2017 уменьшаем количество в таблице
					стрТов = таблТов.Найти(ВыборкаОчередьАдрес.НомерСтроки, "НомерСтроки");
					   
					 //  Кол = мин(стрТов.Количество, ВыборкаОчередьАдрес.КоличествоЗаказано);	 // сколько надо , сколоко отгружено всего
					     Кол2 = мин(колТов, ВыборкаОчередьАдрес.КоличествоЗаказано); 
						 
					   	 ОбластьОчередь.Параметры.Количество = Кол2; // распределяется по фифо!
						 колТов = колТов - Кол2;
						
						стрТов.Количество = стрТов.Количество - Кол2; // уменьшаем количество в строке c учетом переноса по Фифо!
						КоличествоИтого = КоличествоИтого + Кол2;
						
						Если ВыборкаОчередьАдрес.НомерСтроки = ВыборкаНоменклатура.НомерСтроки тогда 
					    ОбластьОчередь.Параметры.НомерСтроки = "";
						КонецЕсли;
					//+++)
					  
					ОбластьОчередь.Параметры.КолОтгружено =СокрЛП(ВыборкаОчередьАдрес.НомерОчереди)+") "+
					   ?(ЗначениеЗаполнено(Контр),	строка(Контр), СокрЛП(ВыборкаОчередьАдрес.КонтрагентКод))+" ("+СокрЛП(ВыборкаОчередьАдрес.МенеджерКод)+")"+СокрЛП(ФизЮрАдрес); //+++ 29.10.2013
					//ОбластьОчередь.Параметры.Очередь = ВыборкаОчередьАдрес.НомерОчереди;
					ТабДокумент.Вывести(ОбластьОчередь);
				КонецЕсли;

			КонецЦикла;
			КонецЦикла;  //+++ 07.11.2017 ВыборкаОчередь
		КонецЦикла;//ВыборкаСклад
	
	КонецЦикла;	//ВыборкаНоменклатура   

	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
    ОбластьИтого.Параметры.КоличествоЗаказаноИтого = КоличествоЗаказаноИтого;
    ОбластьИтого.Параметры.КоличествоИтого		   = КоличествоИтого;
	ОбластьИтого.Параметры.ОстатокНаСкладеИтого    = ОстатокНаСкладеИтого;
	ОбластьИтого.Параметры.КоличествоСтрок = КоличествоСтрок;
	ТабДокумент.Вывести(ОбластьИтого);
	
//+++( 27.07.2014 - проверка 
  Если ВыборкаГруппаСкладов.ГруппаСкладов = справочники.ГруппыСкладов.ПустаяСсылка() Тогда
      ГруппыСкладов1 = справочники.ГруппыСкладов.НайтиПоКоду("00"); // Основной склад
  Иначе ГруппыСкладов1 = ВыборкаГруппаСкладов.ГруппаСкладов; 
  КонецЕсли;
  	стрГруппыСкладов = ЭтотОбъект.ГруппыСкладов.Найти(ГруппыСкладов1, "ГруппаСкладов");
	КоличествоЗаказаноПоГруппе = стрГруппыСкладов.КоличествоЗаказано;
	Если КоличествоЗаказаноИтого <> КоличествоЗаказаноПоГруппе и не флРазделятьПоВидамТоваров Тогда //05.08.2018 - если флРазделятьПоВидамТоваров - то это нормально
		#Если Клиент Тогда
		сигнал(); 	сигнал();
		Предупреждение("    !!! ВНИМАНИЕ !!!
		|Количество 'Надо отгрузить' по Группе: "+строка(ГруппыСкладов1)+" равно: "+строка(КоличествоЗаказаноПоГруппе)+" шт.
		|а по очередям  'Надо отгрузить' "+строка(КоличествоЗаказаноИтого)+" шт, что отличается на "+строка(КоличествоЗаказаноИтого - КоличествоЗаказаноПоГруппе)+" шт.", 300); // 5 мин. на "понимание"
		#КонецЕсли
	КонецЕсли;
//+++)
	
	ОбластьПримечение = Макет.ПолучитьОбласть("Примечание");
	Если ЭтотОбъект.Подразделение.ОбособленноеПодразделение тогда
		ОбластьПримечение.Параметры.Комментарий = Комментарий;  //+++ 20.11.2017 по задаче №36271
	Иначе 	
		ОбластьПримечение.Параметры.комментарий = ?(флРазделятьПоВидамТоваров, ?(флРазделятьДиски,"не шины!","Только Шины!"),"") //+++ 05.08.2018 Задача 52016 Фролов
		 + ""; //+++ 25.10.2017 ФРОЛОВ
	КонецЕсли;	                              
	ТабДокумент.Вывести(ОбластьПримечение);
	
	
	ОбластьПодвалЗаказа = Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьПодвалЗаказа.Параметры.ФИОИсполнителя = "";
	//ОбластьПодвалЗаказа.Параметры.Менеджер = "";
	
	//+++( определение одного или нескольких менеджеров по заказам
	менеджеры = ""; 
	списЗнач1 = ссылка.ЗаказыПокупателей.ВыгрузитьКолонку("ЗаказПокупателя");
	Если списЗнач1.Количество()>0 Тогда
		менеджеры = СокрЛП(списЗнач1[0].ДоговорКонтрагента.ОтветственноеЛицо);
			Если ЗначениеЗаполнено(списЗнач1[0].ДоговорКонтрагента.ОтветственноеЛицо.ФизЛицо) Тогда
				отбор1 = новый Структура("Объект", списЗнач1[0].ДоговорКонтрагента.ОтветственноеЛицо.ФизЛицо);
				отбор1.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);
				отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
				рс = регистрыСведений.КонтактнаяИнформация.Получить(отбор1);
					Если рс<>Неопределено Тогда
						менеджеры = менеджеры +": "+СокрЛП(рс.Представление); //ТелефонМенеджера;
					КонецЕсли;
    			КонецЕсли;

		для i=1 по списЗнач1.Количество()-1 цикл
			мен = СокрЛП(списЗнач1[i].ДоговорКонтрагента.ОтветственноеЛицо);
			Если Найти(менеджеры, мен)=0 Тогда
			менеджеры = менеджеры+",
			|"+мен;
			
				Если ЗначениеЗаполнено(списЗнач1[i].ДоговорКонтрагента.ОтветственноеЛицо.ФизЛицо) Тогда
				отбор1 = новый Структура("Объект", списЗнач1[i].ДоговорКонтрагента.ОтветственноеЛицо.ФизЛицо);
				отбор1.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);
				отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
				рс = регистрыСведений.КонтактнаяИнформация.Получить(отбор1);
					Если рс<>Неопределено Тогда
						менеджеры = менеджеры +": "+СокрЛП(рс.Представление); //ТелефонМенеджера;
					КонецЕсли;
    			КонецЕсли;

			КонецЕсли;
		КонецЦикла;	
		менеджеры = менеджеры+".";
	КонецЕсли;
	ОбластьПодвалЗаказа.Параметры.Менеджер = менеджеры;
	//+++)

	ТабДокумент.Вывести(ОбластьПодвалЗаказа);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц(); 
	
	Если флРазделятьПоВидамТоваров тогда //+++ 05.08.2018
		флРазделятьДиски = не флРазделятьДиски;
		Если флРазделятьДиски<>флРазделятьДиски0 //24.08.2018 - только 1 переход возможен!
			и ( (флРазделятьДиски и колДиски>0)  //Ш>Д  - если есть
		    или (не флРазделятьДиски и колШины>0)//Д>Ш  - если есть
			  ) тогда    
			перейти ~111; // ещё раз ту же группу только Шины!
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла;  //----------------------группа складов -------------------------

КонецЕсли;

    Если Подразделение = Справочники.Подразделения.НайтиПоКоду("00112") Тогда   //Плотников, для Питера печатать еще крышки
		ИмяМакета = "КрышкиЗадание";
		ОбъектВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.НайтиПоНаименованию(ИмяМакета).ПолучитьОбъект();
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = ЭтотОбъект.Ссылка;
		ТабличныйДокументОбъект  = Обработка.Печать();
		ТабличныйДокументОбъект.Показать();	
	КонецЕсли;
	
	Возврат ТабДокумент; 
	
КонецФункции	

//--------------------------------------------------
функция ПечатьЗаказов()
	
	ТабДокумент = новый ТабличныйДокумент;
	Макет = ПолучитьМакет("МакетПроезд");

		Заказы2 = ЗаказыПокупателей.Выгрузить(); 
		Заказы2.Колонки.Добавить("Контрагент");
		Заказы2.Колонки.Добавить("АдресДоставки");
		Заказы2.Колонки.Добавить("Ответственный");
		для каждого стр2 из Заказы2 цикл
			стр2.Контрагент    = стр2.ЗаказПокупателя.Контрагент;
			стр2.АдресДоставки = стр2.ЗаказПокупателя.АдресДоставки;
			стр2.Ответственный = стр2.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо;
		КонецЦикла;	
		Заказы2.Свернуть("Контрагент, АдресДоставки, Ответственный", "КоличествоШтук");
		
		//---------Сборка номеров в 1 поле------
		Заказы2.Колонки.Добавить("Номер");
		
		N = ЗаказыПокупателей.Количество();
		Для каждого стр2 из Заказы2 цикл
			
			СтрПоиска2 = Строка(стр2.Контрагент)+"-"+Строка(стр2.АдресДоставки)+"-"+Строка(стр2.Ответственный);
			номерНакл = "";
			Для i=0 по N-1 цикл
				стр1 = ЗаказыПокупателей[i];
				СтрПоиска1 = Строка(стр1.ЗаказПокупателя.Контрагент)+"-"+Строка(стр1.ЗаказПокупателя.АдресДоставки)+"-"+Строка(стр1.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо);
				Если СтрПоиска1 = СтрПоиска2 Тогда
					номерНакл = номерНакл  + Строка(стр1.ЗаказПокупателя.Номер)+", ";
				КонецЕсли;	
				
			КонецЦикла;	
			
			стр2.Номер = Лев(номерНакл, стрДлина(номерНакл) - 2);
			
		КонецЦикла;	
		
		
		//-------------Определение автомобиля---------------------------------
		ТаблЗнач1 = новый ТаблицаЗначений;
		ТаблЗнач1.Колонки.Добавить("Автомобиль");
		ТаблЗнач1.Колонки.Добавить("ГосНомерАвтомобиля");
		ТаблЗнач1.Колонки.Добавить("Водитель");
		
		
		i=0;
		для каждого стр1 из ЗаказыПокупателей цикл
			
			Если ЗначениеЗаполнено(МаркаАвтомобиля) или ЗначениеЗаполнено(ГосНомерАвтомобиля) Тогда
				ТаблЗнач1.Добавить();
				стр2 = ТаблЗнач1[i];
				стр2.Автомобиль = МаркаАвтомобиля;
				стр2.ГосНомерАвтомобиля = ГосНомерАвтомобиля;
				i=i+1;
			КонецЕсли;	
		КонецЦикла;	
		ТаблЗнач1.Свернуть("Автомобиль, ГосНомерАвтомобиля, Водитель");//все телефоны вместе
		//------------------------
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьМакета.Параметры.Водитель = "Водитель:"; 
		ОбластьМакета.Параметры.ТелефонВодителя = "";
		
		NNN = ТаблЗнач1.Количество();
		Если NNN>0 Тогда // пустые тоже сворачиваются!
			ОбластьМакета.Параметры.АвтомобильГосНомерАвтомобиля = "Автомобиль: "+ТаблЗнач1[0].Автомобиль+"  "+ТаблЗнач1[0].ГосНомерАвтомобиля;
			
			водитель111 = ЭтотОбъект.Водитель;  //физ.лицо уже обновлено...
			
			ОбластьМакета.Параметры.Водитель = ОбластьМакета.Параметры.Водитель + " "+водитель111;
			телВод = ЭтотОбъект.ТелефонВодителя; //телефон водителя!
			
			ОбластьМакета.Параметры.ТелефонВодителя = ОбластьМакета.Параметры.ТелефонВодителя + телВод;
			
			Если NNN>1 Тогда
				сообщить("В выбранных заказах найдено "+строка(NNN)+" автомобилей, но будет использован только 1-ый!", СтатусСообщения.Внимание);
			КонецЕсли;
		Иначе
			Если значениеЗаполнено(ЭтотОбъект.Водитель) Тогда
				ОбластьМакета.Параметры.Водитель = ОбластьМакета.Параметры.Водитель + ЭтотОбъект.Водитель;
				телВод = ""; //ПолучитьКонтактнуюИнформацию(ЭтотОбъект.Водитель,"Телефон");
				ОбластьМакета.Параметры.ТелефонВодителя = ОбластьМакета.Параметры.ТелефонВодителя + телВод;
				
				АвтомобильГосНомерАвтомобиля = ""; //ПолучитьКонтактнуюИнформацию(ЭтотОбъект.Водитель, "Другое");
				ОбластьМакета.Параметры.АвтомобильГосНомерАвтомобиля = АвтомобильГосНомерАвтомобиля;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Номер = число(прав(Номер,5));
		ОбластьМакета.Параметры.Дата  = Формат(Дата,"ДЛФ=DD");
		
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		//------------------------
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаМенеджер");
		
		ТаблЗнач1 = новый ТаблицаЗначений;
		ТаблЗнач1.Колонки.Добавить("Менеджер");
		i=0;
		для каждого стр1 из ЗаказыПокупателей цикл
			ТаблЗнач1.Добавить();
			стр2 = ТаблЗнач1[i];
			стр2.Менеджер = стр1.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо;
			i=i+1;
		КонецЦикла;	
		ТаблЗнач1.Свернуть("Менеджер");//все телефоны вместе
		//---------------------------------------------------
		
		для i=0 по ТаблЗнач1.Количество()-1 цикл
			мен1 = ТаблЗнач1[i].Менеджер;
			//-----------определение телефона-------------------------	
			физЛицо1 = ТаблЗнач1[i].Менеджер.ФизЛицо;
			Если ЗначениеЗаполнено(физЛицо1) Тогда
				ОбластьМакета.Параметры.Менеджер = физЛицо1.Наименование; //ПОЛНОЕ ФИО
                значТел = ПолучитьВсеТелефоны(физЛицо1); //+++ 14.08.2017
				ОбластьМакета.Параметры.Телефон  = значТел;
			Иначе // по сотруднику
				ОбластьМакета.Параметры.Менеджер = мен1;
				сообщить("Для пользователя: "+ строка(ТаблЗнач1[i].Менеджер) +" - не установлено Физ.Лицо! Контактная информация - не доступна!", СтатусСообщения.Внимание);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		//----------------------------------------
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьМакета);
		
		//------------------Основная таблица заказов----------------------
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");   НомерСтроки =1;
		СуммаВсего = 0; ИтогРасстояние = 0;
		для i=0 по Заказы2.Количество()-1 цикл
			
			Выборка = Заказы2[i];	
			ОбластьМакета.Параметры.Номер = Выборка.Номер;
			ОбластьМакета.Параметры.Контрагент = Выборка.Контрагент;
			ОбластьМакета.Параметры.Менеджер   = Выборка.Ответственный;
			//+++ 29.10.2013 
			Если СокрЛП(Выборка.АдресДоставки)="" Тогда
				ФизЮрАдрес = ПолучитьАдресИзКонтактнойИнформации(Выборка.Контрагент,"доставки");  //+++ 03.02.2016 сначала Доставки!
				ФизЮрАдрес = ?(СокрЛП(ФизЮрАдрес) = "", ПолучитьАдресИзКонтактнойИнформации(Выборка.Контрагент,"Фактический"), ФизЮрАдрес);
				ФизЮрАдрес = ?(СокрЛП(ФизЮрАдрес) = "", ПолучитьАдресИзКонтактнойИнформации(Выборка.Контрагент,"Юридический"), ФизЮрАдрес);
				ОбластьМакета.Параметры.АдресТелефон = СокрЛП(ФизЮрАдрес)
			Иначе 
				ОбластьМакета.Параметры.АдресТелефон = СокрЛП(Выборка.АдресДоставки);
			КонецЕсли;
		
			ОбластьМакета.Параметры.НомерСтроки = строка(НомерСтроки);
			
			ОбластьМакета.Параметры.Количество = Выборка.КоличествоШтук;//+" "+Выборка.Контрагент.ОсновноеКонтактноеЛицо;
			СуммаВсего = СуммаВсего + Выборка.КоличествоШтук;
			
			ТабДокумент.Вывести(ОбластьМакета);
			НомерСтроки = НомерСтроки+1;
		КонецЦикла;
		
		//------------------Конец----------------------
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		//СуммаВсего = Заказы2.Итог("СуммаДоставки"); // Сумма всего!
		
		ОбластьМакета.Параметры.СуммаКоличество = СуммаВсего;
		ТабДокумент.Вывести(ОбластьМакета);
	Возврат ТабДокумент;
	
КонецФункции

функция ПечатьПропуск()
	ТабДокумент = новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Пропуск");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакета.Параметры.Номер = ЭтотОбъект.Номер;
	ОбластьМакета.Параметры.дата = Формат(макс(ЭтотОбъект.Дата,ЭтотОбъект.ВремяНапоминания),"ДФ='dd MMMM yyyy""г."" hh:mm'");
	ОбластьМакета.Параметры.АвтомобильГосНомерАвтомобиля =  СокрЛП(ЭтотОбъект.МаркаАвтомобиля) 
										+ " "+СокрЛП(ЭтотОбъект.ГосНомерАвтомобиля);
	ОбластьМакета.Параметры.Водитель = СокрЛП(ЭтотОбъект.Водитель);
	
	ТабДокумент.Вывести(ОбластьМакета);
	//ТабДокумент.Вывести(ОбластьМакета);
	//ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет; // 15.10.2015 ВСЕГДА так!
	
	Возврат ТабДокумент;
	
КонецФункции

функция ПечатьЗаявокНаБрак()
	ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
	ОбъектВнешнейФормы = Справочники.ДополнительныеПечатныеФормы.НайтиПоНаименованию("Печать брака для задания на отгрузку").ПолучитьОбъект();
	Если ОбъектВнешнейФормы = Неопределено Тогда
	    Сообщить("Ошибка получения внешней печатной формы документа.", СтатусСообщения.Важное);
		Возврат Неопределено;
	КонецЕсли;
		
	ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяФайла);
	Обработка = ВнешниеОбработки.Создать(ИмяФайла);
	Обработка.СсылкаНаОбъект = Ссылка;
	ТабДокумент = Обработка.Печать();
	Возврат ТабДокумент;
КонецФункции


// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСписокПечатныхФорм() экспорт 

	СписокМакетов = Новый СписокЗначений;
	СписокМакетов.Добавить("ЗаказНовый",           "Отгрузка по складам"); 
	СписокМакетов.Добавить("ЗаказНовыйПоОчередям", "Отгрузка по складам (по очередям)"); 
	СписокМакетов.Добавить("ТоварыПоЗаказам", 	   "Товары по заказам");
	СписокМакетов.Добавить("---","--------------------------");
	СписокМакетов.Добавить("СписокЗаказов",	  "Задание (для водителя)");
	СписокМакетов.Добавить("Пропуск",	  "Пропуск (для водителя)");
    ДобавитьВСписокДополнительныеФормы(СписокМакетов, Метаданные());
	Возврат СписокМакетов;

КонецФункции // ПолучитьСписокПечатныхФорм()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = ЛОЖЬ) Экспорт

	Если ЭтоНовый() Тогда
		#Если Клиент Тогда
		Предупреждение("Документ можно распечатать только после его записи.");
		#КонецЕсли
		Возврат;
	ИначеЕсли Не РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		#Если Клиент Тогда
		Предупреждение("Недостаточно прав для печати непроведенного документа!");
		#КонецЕсли
		Возврат;
	КонецЕсли;

	Если ЭтотОбъект.Модифицированность() и ЭтотОбъект.Проведен Тогда
		Если РольДоступна("ПолныеПрава") Тогда
			Если Вопрос("Документ изменен. Перед печатью его необходимо записать.
						   |Записать документ?",РежимДиалогаВопрос.ДаНет, 10) = КодВозвратаДиалога.Нет Тогда
						   Возврат;
			КонецЕсли;			   
			ЭтотОбъект.Записать();
		КонецЕсли;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если ТипЗнч(ИмяМакета) = Тип("СправочникСсылка.ДополнительныеПечатныеФормы") Тогда
		
		ИмяФайла = КаталогВременныхФайлов()+"PrnForm.tmp";
		ОбъектВнешнейФормы = ИмяМакета.ПолучитьОбъект();
		Если ОбъектВнешнейФормы = Неопределено Тогда
			Сообщить("Ошибка получения внешней печатной формы документа.", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанные = ОбъектВнешнейФормы.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.СсылкаНаОбъект = Ссылка;
		ТабДокумент = Обработка.Печать();	
		
	ИначеЕсли ИмяМакета="ТоварыПоЗаказам" Тогда
		   поРеализациям = естьРеализации(Истина); // только по проведенным реализациям!
		   ТабДокумент = ПечатьТоварыПоЗаказам(поРеализациям); //всегда по регистру
		   
	 ИначеЕсли ИмяМакета="ЗаказНовый" Тогда  //Отгрука по складам
		
		ВидПечати = Истина;
		
		Режим = РежимДиалогаВопрос.ДаНет;//+++ 03.10.2013
		Ответ = Вопрос("Печатать только Не отгруженный товар?", Режим, 10);
		Если Ответ = КодВозвратаДиалога.Нет Тогда  	
			ВидПечати = ЛОЖЬ;
		КонецЕсли;

		ТабДокумент = ПечатьЗаданияНаОтгрузку(ВидПечати);
		
		Если ЗаявкиНаБрак.Количество() > 0 Тогда
		
		    ТабДокумент2 = ПечатьЗаявокНаБрак();
			   
		КонецЕсли;
		   
	ИначеЕсли ИмяМакета="ЗаказНовыйПоОчередям" Тогда //+++ 22.04.2013
		
		//+++ 23.04.2015
		Если Вопрос("Печатать отдельно по каждой очереди (по новому)?",РежимДиалогаВопрос.ДаНет, 30) = КодВозвратаДиалога.Да Тогда
			
			массивОчередей = получитьМассивОчередей();
			
			ЭтотОбъектНомерОчереди = ЭтотОбъект.НомерОчереди;
			ЭтотОбъектКонтрагент   = ЭтотОбъект.Контрагент;
			
			для номОч=0 по массивОчередей.Количество()-1 цикл
//22.06.2015  - печать в обратном порядке!
			//	ТабДокумент =ПечатьПоОчереди(массивОчередей[номОч]);
				номерОбр = массивОчередей.Количество()-1 -номОч; 
				номОчереди1 = номОч+1;  //+++ 24.07.2015
				
				ТабДокумент = ПечатьПоОчереди(массивОчередей[номерОбр],ЛОЖЬ, номОчереди1 );
				
				#Если Клиент Тогда
					НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект));
				#КонецЕсли
				
			КонецЦикла;
			
		    ЭтотОбъект.НомерОчереди = ЭтотОбъектНомерОчереди;
			ЭтотОбъект.Контрагент   = ЭтотОбъектКонтрагент;
			
			
		Иначе // как было
			ТабДокумент = ПечатьЗаданияНаОтгрузкуПоОчередям();
		КонецЕсли;
		
		Если ЗаявкиНаБрак.Количество() > 0 Тогда
		
		    ТабДокумент2 = ПечатьЗаявокНаБрак();
			   
		КонецЕсли;
		
	ИначеЕсли ИмяМакета="СписокЗаказов" Тогда
		   ТабДокумент = ПечатьЗаказов();
		   
	 ИначеЕсли ИмяМакета="Пропуск" Тогда
		   ТабДокумент = ПечатьПропуск();
	 КонецЕсли;

		#Если Клиент Тогда
			НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект));
			
			
			Если ТабДокумент2 <> Неопределено Тогда
		        НапечататьДокумент(ТабДокумент2, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект)+", брак");
	        КонецЕсли;	
		#КонецЕсли
		
		

КонецПроцедуры // Печать

#КонецЕсли

Функция ПолучитьИнформациюПоПроезду() 
	Запрос = новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ИнформацияПоПроезду.НомерОчереди,
	             |	ИнформацияПоПроезду.Контрагент КАК Контрагент,
	             |	ИнформацияПоПроезду.Заказ КАК ЗаказПокупателя,
	             |	ВЫРАЗИТЬ(ИнформацияПоПроезду.Адрес КАК СТРОКА(1000)) КАК АдресДоставки,
	             |	ИнформацияПоПроезду.Организация,
	             |	ИнформацияПоПроезду.СуммаЗаТоварНал,
	             |	ИнформацияПоПроезду.ДоставкаНал,
	             |	ИнформацияПоПроезду.ДоставкаБНал,
	             |	ИнформацияПоПроезду.ДоставкаВЦене,
	             |	ИнформацияПоПроезду.Менеджер КАК Менеджер,
	             |	ИнформацияПоПроезду.Комментарий,
	             |	ИнформацияПоПроезду.Объём,
	             |	ИнформацияПоПроезду.ВсеДокументыСданыВБухгалтерию
	             |ИЗ
	             |	РегистрСведений.ИнформацияПоПроезду КАК ИнформацияПоПроезду
	             |ГДЕ
	             |	ИнформацияПоПроезду.Задание = &Задание
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ИнформацияПоПроезду.НомерОчереди,
	             |	Контрагент,
	             |	Менеджер,
	             |	АдресДоставки
	             |АВТОУПОРЯДОЧИВАНИЕ";
				 Запрос.УстановитьПараметр("Задание",Ссылка);
				 Рез=Запрос.Выполнить().выгрузить();
Возврат рез;	 	 
КонецФункции
 
//+++ 23.04.2015
функция получитьМассивОчередей()
	
	рез = новый массив;
	
	стрСтар = "";  Ном=0; списЗак = новый СписокЗначений;
  	СтруктураОднойОчереди = новый Структура;
	
	ИнфоПоездки = ПолучитьИнформациюПоПроезду();
	
	Если ИнфоПоездки.Количество()=0 Тогда
		#Если Клиент Тогда
		Предупреждение("Заполните и Запишите номера очередей на закладке 'Информация по проезду'!", 30);
		#КонецЕсли
		Возврат рез ;
	КонецЕсли;

для каждого стр1 из ИнфоПоездки цикл
	
	стрНов = стр1.ЗаказПокупателя.Контрагент.Код+"_"+строка(стр1.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо)
//12.10.2018 --- адреса могут быть разные! ---
	//+"_"+СокрЛП(стр1.ЗаказПокупателя.АдресДоставки)
	+"-"+строка(стр1.НомерОчереди);//+++ 03.11.2017 с учетом очереди!
	
	Если  стрСтар<>стрНов Тогда
		
		Если Ном>0 Тогда // запишем старое
		СтруктураОднойОчереди.Вставить("СписокЗаказов", списЗак);
		рез.Добавить(СтруктураОднойОчереди);
	    КонецЕсли;
		
	стрСтар = стрНов; Ном=Ном+1;   // новое
	СтруктураОднойОчереди = новый Структура;
	СтруктураОднойОчереди.Вставить("НомерОчереди", стр1.НомерОчереди); //12.10.2018 Ном >> стр1.НомерОчереди - из Тр.Затрат!
	СтруктураОднойОчереди.Вставить("Контрагент", стр1.ЗаказПокупателя.Контрагент);
	СтруктураОднойОчереди.Вставить("Менеджер", стр1.ЗаказПокупателя.ДоговорКонтрагента.ОтветственноеЛицо);
	СтруктураОднойОчереди.Вставить("Адрес", стр1.ЗаказПокупателя.АдресДоставки);
	СтруктураОднойОчереди.Вставить("Организация", ПолучитьОрганизацию(стр1.ЗаказПокупателя));
	списЗак = новый СписокЗначений;
	списЗак.Добавить( стр1.ЗаказПокупателя );
 
	ИначеЕсли стрСтар=стрНов Тогда
		
		списЗак.Добавить( стр1.ЗаказПокупателя );
	
	КонецЕсли;
	
КонецЦикла;

	Если ном>0 Тогда
 	СтруктураОднойОчереди.Вставить("СписокЗаказов", списЗак);
	рез.Добавить( СтруктураОднойОчереди ); // записали старое
    КонецЕсли;
	
	Возврат рез;
	
КонецФункции	


функция мПолучитьЛитыеБезНагрузки() экспорт//24.10.2017
	
	списТов = новый СписокЗначений;
	Если НЕ Константы.УбратьЛитыеБезНагрузки.Получить()
		или ЭтотОбъект.Подразделение.ОбособленноеПодразделение тогда //у филиалов нет ограничений!
		возврат списТов;
	КонецЕсли;
	
	табл = Товары.Выгрузить(,"Номенклатура");
	табл.Свернуть("Номенклатура");
	списТов.ЗагрузитьЗначения( табл.ВыгрузитьКолонку("Номенклатура") );
	i=0; Литые = справочники.НоменклатурныеГруппы.НайтиПоНаименованию("Литые");
	Пока i < списТов.Количество() цикл
		Если списТов[i].Значение.НоменклатурнаяГруппа <> Литые тогда
			 списТов.Удалить(i);
		Иначе i=i+1;
		КонецЕсли;	 
	КонецЦикла;	
	Если списТов.Количество()=0 тогда
		возврат списТов;
	КонецЕсли;
	
    Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Объект как Номенклатура,
	               |	ЗначенияСвойствОбъектов.Значение
	               |ИЗ
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство = &Свойство
	               |	И ЗначенияСвойствОбъектов.Объект В (&списТов)
				   |	И ЗначенияСвойствОбъектов.Значение=Истина";
	Запрос.УстановитьПараметр("списТов", списТов);
	Запрос.УстановитьПараметр("Свойство", Планывидовхарактеристик.СвойстваОбъектов.НайтиПоКоду("90255") );
	
	Результат = Запрос.Выполнить();
	ВыборкаДа = Результат.Выбрать();
	
	Пока ВыборкаДа.Следующий() Цикл
	эл1 = списТов.НайтиПоЗначению( ВыборкаДа.Номенклатура );
	списТов.Удалить(эл1);	
	КонецЦикла;
	
	возврат списТов;
КонецФункции


//+++ 23.04.2015 полностью аналогично печати на отгрузку, только не по всем товарам и заказам, а только по 1 очереди!
//функция ПечатьЗаданияНаОтгрузку(ТолькоТоЧтоОсталосьОтгрузкить=Истина)
//
#Если Клиент Тогда
функция ПечатьПоОчереди(структураОчереди, ТолькоТоЧтоОсталосьОтгрузкить=ЛОЖЬ, НомОчереди=0)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаданиеНаОтгрузку_Новый";
    Макет = ПолучитьМакет("Заказ");
	
	Запрос = Новый Запрос;
	//-------------из структуры получим-----------------------------
	Запрос.УстановитьПараметр("СписокЗаказов", структураОчереди.СписокЗаказов );
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//+++ 22.06.2015
	Запрос.УстановитьПараметр("Пустая", справочники.ГруппыСкладов.ПустаяСсылка() );
    Запрос.УстановитьПараметр("ОснСклад", справочники.ГруппыСкладов.ОсновнойСклад );
	
	ЭтотОбъект.НомерОчереди = ?(НомОчереди=0, структураОчереди.НомерОчереди, НомОчереди); //+++ 24.07.2015 - явное указание очереди
	ЭтотОбъект.Контрагент   = структураОчереди.Контрагент; 
	Запрос.Текст = 	"ВЫБРАТЬ
	               	|	ЗаданиеНаОтгрузкуТовары1.НомерСтроки,
	               	|	ЗаданиеНаОтгрузкуТовары.Номенклатура КАК Номенклатура,
	               	|	ЗаданиеНаОтгрузкуТовары.КоличествоОстаток КАК КОличествоЗаказано,
	               	|	ЗаданиеНаОтгрузкуТовары1.Количество КАК Количество,
	               	|	ЗаданиеНаОтгрузкуТовары1.КоличествоСвободно КАК КоличествоОстаток,
	               	|	ЗаданиеНаОтгрузкуТовары.Склад.ГруппаСкладов КАК ГруппаСкладов,
	               	|	ЗаданиеНаОтгрузкуТовары.Склад КАК Склад,
	               	|	ЗаданиеНаОтгрузкуТовары.АдресХранения КАК АдресХранения
	               	|ПОМЕСТИТЬ ЗаданиеНаОтгрузкуТовары
	               	|ИЗ
					//+++++ 15.04.2016 +++++сумма по заказам ++++++++
	            //	|	РегистрНакопления.РезервНаСкладах.Остатки(, ЗаказПокупателя В (&СписокЗаказов)) как ЗаданиеНаОтгрузкуТовары
					  |	(выбрать Резерв.Номенклатура,
					|		Резерв.Склад, Резерв.АдресХранения,
					|        Сумма(Резерв.КоличествоОстаток) как КоличествоОстаток
					|	из РегистрНакопления.РезервНаСкладах.Остатки(, ЗаказПокупателя В (&СписокЗаказов)) как Резерв
					|	СГРУППИРОВАТЬ ПО Резерв.Номенклатура, Резерв.Склад, Резерв.АдресХранения
					|	) КАК ЗаданиеНаОтгрузкуТовары
					//+++++++++++++++++++++++++++++++++++++++++++++++
					
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаОтгрузку.Товары КАК ЗаданиеНаОтгрузкуТовары1
	               	|		ПО ЗаданиеНаОтгрузкуТовары.Номенклатура = ЗаданиеНаОтгрузкуТовары1.Номенклатура
	               	|			И ЗаданиеНаОтгрузкуТовары.Склад = ЗаданиеНаОтгрузкуТовары1.Склад
	               	|			И ЗаданиеНаОтгрузкуТовары.АдресХранения = ЗаданиеНаОтгрузкуТовары1.АдресХранения
					//+++ 22.06.2015 - осн.склад - это пустой!
//               	|			И ЗаданиеНаОтгрузкуТовары.Склад.ГруппаСкладов = ЗаданиеНаОтгрузкуТовары1.ГруппаСкладов
	               	|			И выбор когда ЗаданиеНаОтгрузкуТовары.Склад.ГруппаСкладов=&Пустая Тогда &ОснСклад
					|			иначе ЗаданиеНаОтгрузкуТовары.Склад.ГруппаСкладов Конец
					|			= ЗаданиеНаОтгрузкуТовары1.ГруппаСкладов

	               	|ГДЕ
	               	|	ЗаданиеНаОтгрузкуТовары1.Ссылка = &Ссылка
	               	|//ТолькоТоЧтоОсталосьОтгрузкить   И  ЗаданиеНаОтгрузкуТовары1.КоличествоЗаказано <> ЗаданиеНаОтгрузкуТовары1.Количество 
					|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	ЗаданиеНаОтгрузкуТовары.НомерСтроки КАК НомерСтроки,
	               	|	ЗаданиеНаОтгрузкуТовары.Номенклатура КАК Номенклатура,
	               	|	ЗаданиеНаОтгрузкуТовары.КОличествоЗаказано КАК КОличествоЗаказано,
	               	|	ЗаданиеНаОтгрузкуТовары.Количество КАК Количество,
	               	|	ЗаданиеНаОтгрузкуТовары.КоличествоОстаток КАК КоличествоОстаток,
	               	|	ЗаданиеНаОтгрузкуТовары.ГруппаСкладов КАК ГруппаСкладов,
	               	|	ЗаданиеНаОтгрузкуТовары.Склад КАК Склад,
	               	|	ЗаданиеНаОтгрузкуТовары.АдресХранения КАК АдресХранения,
	               	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладе,
	               	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстатокОТХ, 0) КАК ОстатокОТХНаСкладе,
	               	|	ЕСТЬNULL(ТоварыАХОстатки.КоличествоОстаток, 0) КАК ОстатокВАдресе,
	               	|	ЕСТЬNULL(ТоварыАХОстаткиАдрес.КоличествоОстатокВАдресе, 0) КАК ОстатокАдреса
	               	|ИЗ
	               	|	ЗаданиеНаОтгрузкуТовары КАК ЗаданиеНаОтгрузкуТовары
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               	|			рнТовары.Номенклатура КАК Номенклатура,
	               	|			рнТовары.Склад КАК Склад,
	               	|			рнТовары.КоличествоОстаток КАК КоличествоОстаток,
	               	|			ЕСТЬNULL(ТоварыОТХНаСкладах.КоличествоОстаток, 0) КАК КоличествоОстатокОТХ
	               	|		ИЗ
	               	|			РегистрНакопления.ТоварыНаСкладах.Остатки(
	               	|					,
	               	|					НЕ Склад.Транзитный
	               	|						И НЕ Склад.ЗапретитьИспользование
	               	|						И Номенклатура В
	               	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|								т.Номенклатура
	               	|							ИЗ
	               	|								ЗаданиеНаОтгрузкуТовары КАК т)) КАК рнТовары
	               	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаОтветственномХранении.Остатки(
	               	|						,
	               	|						НЕ Склад.Транзитный
	              	|						И Номенклатура В
	               	|								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|									т.Номенклатура
	               	|								ИЗ
	               	|									ЗаданиеНаОтгрузкуТовары КАК т)) КАК ТоварыОТХНаСкладах
	               	|				ПО рнТовары.Номенклатура = ТоварыОТХНаСкладах.Номенклатура
	               	|					И рнТовары.Склад = ТоварыОТХНаСкладах.Склад) КАК ТоварыНаСкладахОстатки
	               	|		ПО ЗаданиеНаОтгрузкуТовары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               	|			И ЗаданиеНаОтгрузкуТовары.Склад = ТоварыНаСкладахОстатки.Склад
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               	|			рнТовары.Номенклатура КАК Номенклатура,
	               	|			рнТовары.Склад КАК Склад,
	               	|			рнТовары.АдресХранения КАК АдресХранения,
	               	|			рнТовары.КоличествоОстаток КАК КоличествоОстаток
	               	|		ИЗ
	               	|			РегистрНакопления.ТоварыАдресноеХранение.Остатки(
	               	|					,
					|					НЕ Склад.Транзитный
	               	|					И Номенклатура В
	               	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|							т.Номенклатура
	               	|						ИЗ
	               	|							ЗаданиеНаОтгрузкуТовары КАК т)) КАК рнТовары) КАК ТоварыАХОстатки
	               	|		ПО ЗаданиеНаОтгрузкуТовары.Номенклатура = ТоварыАХОстатки.Номенклатура
	               	|			И ЗаданиеНаОтгрузкуТовары.Склад = ТоварыАХОстатки.Склад
	               	|			И ЗаданиеНаОтгрузкуТовары.АдресХранения = ТоварыАХОстатки.АдресХранения
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               	|			рнТовары.Склад КАК Склад,
	               	|			рнТовары.АдресХранения КАК АдресХранения,
	               	|			рнТовары.КоличествоОстаток КАК КоличествоОстатокВАдресе
	               	|		ИЗ
	               	|			РегистрНакопления.ТоварыАдресноеХранение.Остатки(
	               	|					,
	               	|					НЕ Склад.Транзитный
	               	|					И Номенклатура В
	               	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               	|							т.Номенклатура
	               	|						ИЗ
	               	|							ЗаданиеНаОтгрузкуТовары КАК т)) КАК рнТовары) КАК ТоварыАХОстаткиАдрес
	               	|		ПО ЗаданиеНаОтгрузкуТовары.Склад = ТоварыАХОстаткиАдрес.Склад
	               	|			И ЗаданиеНаОтгрузкуТовары.АдресХранения = ТоварыАХОстаткиАдрес.АдресХранения
	               	|
	               	|УПОРЯДОЧИТЬ ПО
					//+++ 04.09.2015 - ЗМЕЙКОЙ
					|	ЗаданиеНаОтгрузкуТовары.АдресХранения.Порядок,
	               	|	НомерСтроки
	               	|ИТОГИ
	               	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура),
	               	|	СУММА(КОличествоЗаказано),
	               	|	СУММА(Количество),
	               	|	СУММА(КоличествоОстаток),
	               	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Склад),
	               	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ АдресХранения),
	               	|	СУММА(ОстатокНаСкладе),
	               	|	СУММА(ОстатокОТХНаСкладе),
	               	|	СУММА(ОстатокВАдресе),
	               	|	СУММА(ОстатокАдреса)
	               	|ПО
	               	|	ГруппаСкладов
	               	|АВТОУПОРЯДОЧИВАНИЕ";
					
//+++ 30.11.2015					
	Если ЭтотОбъект.Подразделение.ОбособленноеПодразделение Тогда
		Запрос.Текст =  стрЗаменить(Запрос.Текст , "НЕ Склад.Транзитный"  , "(Склад.Транзитный и Склад.Подразделение=&Подразделение)");
		Запрос.Параметры.Вставить("Подразделение",ЭтотОбъект.Подразделение);
	КонецЕсли;	
	
	Если ТолькоТоЧтоОсталосьОтгрузкить Тогда
		Запрос.Текст = стрЗаменить(Запрос.Текст, "//ТолькоТоЧтоОсталосьОтгрузкить", "");
	КонецЕсли;	
	             					
	Результат = Запрос.Выполнить();
	ОбластьНоменклатура = Макет.ПолучитьОбласть("Строка");
	
	КоличествоСтрок=0; КоличествоЗаказаноИтого=0; КоличествоИтого=0;
	
Если не Результат.Пустой() Тогда
	ВыборкаГруппаСкладов = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	пока ВыборкаГруппаСкладов.Следующий() цикл
			// Выводим шапку накладной
	
		Если  СокрЛП(МаркаАвтомобиля)<>"" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Авто");
		ОбластьМакета.Параметры.Авто = СокрЛП(МаркаАвтомобиля);
		ОбластьМакета.Параметры.НомерАвто = СокрЛП(ГосНомерАвтомобиля);
		ОбластьМакета.Параметры.Пункт = Направление; //+++ 23.04.2015
		ТабДокумент.Вывести(ОбластьМакета);
		КОнецЕсли;
		 
	//СведенияОПоставщике = СведенияОЮрФизЛице(Организация, Шапка.Дата);

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СформироватьЗаголовокДокумента(Ссылка, "Задание на отгрузку");
	
	ОбластьМакета.Параметры.ТекстВодитель  = СокрЛП(ссылка.МаркаАвтомобиля)+" "+СокрЛП(ссылка.ГосНомерАвтомобиля)+" "+СокрЛП(ссылка.Водитель) + " "+СокрЛП(ссылка.ТелефонВодителя);//+++ 31.03.2014
	
	ОбластьМакета.Параметры.Перевозчик  = ЭтотОбъект.Перевозчик;//+++ 11.05.2017

	ОбластьМакета.Параметры.СловоВажный = ?(ЭтотОбъект.Важность = перечисления.Важность.Высокая, "!!!", "");//+++ 13.09.2013
   ОбластьМакета.Параметры.НомерОчереди = ?(ЭтотОбъект.НомерОчереди=0,"",ЭтотОбъект.НомерОчереди); //+++ 03.09.2014
	
	//+++ Штрих-Код номера документа - февраль 2012
	// требуется установленная компонента 1CBarCode.exe
	#Если не Клиент Тогда
		глТорговоеОборудование = Обработки.ТорговоеОборудование.Создать();
	#КонецЕсли

    	ОбШтрихКодСообщение = глТорговоеОборудование.ПолучитьШтрихКодПоДокументу(Ссылка);
		попытка
		ОбШтрихКод=ОбластьМакета.Рисунки.ШК.Объект;
		ОбШтрихКод.Сообщение = ОбШтрихКодСообщение; 
		ОбШтрихКод.ТекстКода = ОбШтрихКодСообщение; 
		//ОбШтрихКод.ВидимостьКС = ЛОЖЬ; // не показывать контрольныйСимвол в тексте
		исключение
		 //нет компоненты 1CBarCode.exe
		КонецПопытки; 
	//+++)
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ОписаниеОрганизации(СведенияОЮрФизЛице(Организация, Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ПоставщикТекст = "Поставщик:";//+++
	ТабДокумент.Вывести(ОбластьМакета);
	
	//СведенияОПолучателе = СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ОписаниеОрганизации(СведенияОЮрФизЛице(КОнтрагент, Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ПокупательТекст = "Покупатель:";
		
	ТабДокумент.Вывести(ОбластьМакета);

		
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);

	ВыборкаНоменклатура = ВыборкаГруппаСкладов.Выбрать();
	КоличествоСтрок=0; КоличествоЗаказаноИтого=0; КоличествоИтого=0; ОстатокНаСкладеИтого = 0;
	
	списУбрать = мПолучитьЛитыеБезНагрузки();//25.10.2017
	
	Пока ВыборкаНоменклатура.Следующий() Цикл     //======================================================
		
		Если списУбрать.НайтиПоЗначению(ВыборкаНоменклатура.Номенклатура)<>Неопределено тогда//25.10.2017
			продолжить;
		КонецЕсли;	
		
		КоличествоСтрок = КоличествоСтрок + 1;
		КоличествоЗаказаноИтого = КоличествоЗаказаноИтого + ВыборкаНоменклатура.КоличествоЗаказано;
		КоличествоИтого = КоличествоИтого + ВыборкаНоменклатура.Количество;
		
		//+++( 25.07.2014 - для Аксессуаров нужен Артикул!
		Если ВыборкаНоменклатура.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Аксессуары Тогда
             ОбластьНоменклатура =Макет.ПолучитьОбласть("Строка3");
             ОбластьНоменклатура.Параметры.Артикул = СокрЛП(ВыборкаНоменклатура.Номенклатура.Артикул); //строка(ВыборкаНоменклатура.Номенклатура.ВидТовара)+": "+ 
          Иначе
              ОбластьНоменклатура =Макет.ПолучитьОбласть("Строка");
          КонецЕсли;
  	   //+++)

		ОбластьНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
		Если СокрЛП(ВыборкаНоменклатура.АдресХранения) <> "" Тогда
			ОстатокНаСкладеИтого = ОстатокНаСкладеИтого + ВыборкаНоменклатура.ОстатокВАдресе;
			
			//------------остаток товара в адресе / полный остаток на складе---------------------
			
			стрОстаток =" "+?(ВыборкаНоменклатура.ОстатокНаСкладе>ВыборкаНоменклатура.ОстатокВАдресе, 
			строка(ВыборкаНоменклатура.ОстатокВАдресе)+"/"+строка(ВыборкаНоменклатура.ОстатокНаСкладе),
			строка(ВыборкаНоменклатура.ОстатокВАдресе) );
			
			delta = ВыборкаНоменклатура.ОстатокАдреса - ВыборкаНоменклатура.ОстатокВАдресе;
			Если delta>0 Тогда // есть другие товары в ячейке!
				ОбластьНоменклатура.Параметры.Склад = строка(ВыборкаНоменклатура.Склад)+":"+строка(ВыборкаНоменклатура.АдресХранения)+" (+"+строка(delta)+")";
				ОбластьНоменклатура.Параметры.ОстатокНаСкладе = "*"+стрОстаток;
			Иначе
				ОбластьНоменклатура.Параметры.Склад = строка(ВыборкаНоменклатура.Склад)+":"+строка(ВыборкаНоменклатура.АдресХранения);
				ОбластьНоменклатура.Параметры.ОстатокНаСкладе = стрОстаток;
			КонецЕсли;			
		Иначе
			//-----------------------отражение ОТХ------------------------------------------------
			delta = ВыборкаНоменклатура.ОстатокОТХНаСкладе;
			Если delta>0 Тогда
				ОбластьНоменклатура.Параметры.Склад = строка(ВыборкаНоменклатура.Склад)+" (+"+строка(delta)+"отх)";
				ОбластьНоменклатура.Параметры.ОстатокНаСкладе = строка(ВыборкаНоменклатура.ОстатокНаСкладе)+" / "+строка(ВыборкаНоменклатура.ОстатокНаСкладе+delta);
			КонецЕсли;
			
			ОстатокНаСкладеИтого = ОстатокНаСкладеИтого + ВыборкаНоменклатура.ОстатокНаСкладе;
		КонецЕсли;	
		
		//+++ 25.07.2014 для аксессуаров "Артикул - Товар"---------------------------------------------
		Если ВыборкаНоменклатура.Номенклатура.ВидТовара = перечисления.ВидыТоваров.Аксессуары тогда
				ОбластьНоменклатура.Параметры.Номенклатура = строка(ВыборкаНоменклатура.Номенклатура); //28.04 - артикул уже есть!
				
		ИначеЕсли ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(46)  //28.04
				или ВыборкаНоменклатура.Номенклатура.Производитель = Справочники.Производители.НайтиПоКоду(3946)//+++ 27.04.2018
			Тогда
				ОбластьНоменклатура.Параметры.Номенклатура = "арт."+строка(ВыборкаНоменклатура.Номенклатура.Артикул)+" "+строка(ВыборкаНоменклатура.Номенклатура); 
		Иначе
			ОбластьНоменклатура.Параметры.Номенклатура = строка(ВыборкаНоменклатура.Номенклатура.ВидТовара)+": "+ строка(ВыборкаНоменклатура.Номенклатура);
		КонецЕсли;	
		
		ОбластьНоменклатура.Параметры.Код = СокрЛП(ВыборкаНоменклатура.Номенклатура.Код);
		ТабДокумент.Вывести(ОбластьНоменклатура);
	КонецЦикла;	   

	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
    ОбластьИтого.Параметры.КоличествоЗаказаноИтого = КоличествоЗаказаноИтого;
    ОбластьИтого.Параметры.КоличествоИтого		   = КоличествоИтого;
	ОбластьИтого.Параметры.ОстатокНаСкладеИтого    = ОстатокНаСкладеИтого;
	ОбластьИтого.Параметры.КоличествоСтрок = КоличествоСтрок;
	ТабДокумент.Вывести(ОбластьИтого);
	
	ОбластьПримечение = Макет.ПолучитьОбласть("Примечание");
	
	комм = "";
	зак0 = документы.ЗаказПокупателя.ПустаяСсылка(); 
	для i=0 по структураОчереди.СписокЗаказов.Количество()-1 цикл
		зак1 = структураОчереди.СписокЗаказов[i].Значение;
		Если зак0<>зак1 Тогда  //+++ 29.09.2015 устранение повторов
		 комм = комм + зак1.Номер+": "+СокрЛП(зак1.Комментарий);
		 зак0=зак1;
		КонецЕсли; 
	КонецЦикла;	
	
		//+++ 20.11.2017 по задаче №36271
	Если ЭтотОбъект.Подразделение.ОбособленноеПодразделение тогда
		ОбластьПримечение.Параметры.Комментарий = комм;
	Иначе 	
		ОбластьПримечение.Параметры.комментарий = ""; //+++ 25.10.2017 ФРОЛОВ
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьПримечение);
	
	
	ОбластьПодвалЗаказа = Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьПодвалЗаказа.Параметры.ФИОИсполнителя = "";
	//ОбластьПодвалЗаказа.Параметры.Менеджер = "";
	
	//+++( определение одного!  и только 1 менеджера по 1 очереди!
	менеджеры = ""; 
	Если структураОчереди.СписокЗаказов.Количество()>0 Тогда
		менеджеры = СокрЛП(структураОчереди.Менеджер);
				Если ЗначениеЗаполнено(структураОчереди.Менеджер.ФизЛицо) Тогда
				отбор1 = новый Структура("Объект", структураОчереди.Менеджер.ФизЛицо);
				отбор1.Вставить("Тип", перечисления.ТипыКонтактнойИнформации.Телефон);
				отбор1.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
				рс = регистрыСведений.КонтактнаяИнформация.Получить(отбор1);
					Если рс<>Неопределено Тогда
						менеджеры = менеджеры +": "+СокрЛП(рс.Представление); //ТелефонМенеджера;
					КонецЕсли;
    			КонецЕсли;
 		менеджеры = менеджеры+".";
	КонецЕсли;
	ОбластьПодвалЗаказа.Параметры.Менеджер = менеджеры;
	//+++)
	
	ТабДокумент.Вывести(ОбластьПодвалЗаказа);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();  
КонецЦикла;

КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции	
#КонецЕсли

//+++ 09.04.2015
функция ПолучитьОрганизацию(Зак, ТаблОрг=неопределено) Экспорт
	
	ЗакОрганизация = "";
	
		Если СокрЛП(зак.ДоговорКонтрагента.ТипДоговора.Код) = "Я0004" Тогда
			ЗакОрганизация = "Формула Авто";
		ИначеЕсли зак.ДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.ФормулаАвтоПлюс Тогда
			ЗакОрганизация = "Формула Авто Плюс";
	    ИначеЕсли зак.ДоговорКонтрагента.ТипДоговора = справочники.ТипыДоговоров.ШинтрейдЯрославль Тогда
			ЗакОрганизация = "Шинтрейд";
	

		//--------перевыставляется фикс.цена от ЯШТ--------------
		ИначеЕсли // СокрЛП(зак.Контрагент.Код) = "92797" или 
			ТаблОрг<>неопределено Тогда
			
			для i=0 по ТаблОрг.Количество()-1 цикл
				Если  зак.Контрагент = ТаблОрг[i].Контрагент Тогда
				ЗакОрганизация = ТаблОрг[i].Организация;
				КонецЕсли;
			КонецЦикла;
			
			//+++ 04.07.2015
			Если ЗакОрганизация = "" Тогда
				ЗакОрганизация = "Яршинторг";
			КонецЕсли;
		
		КонецЕсли;
		
		
Возврат ЗакОрганизация;

КонецФункции


Процедура ДвижениеПоРегиструРезервНаСкладах_БЕЗЗаказов()
	
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		// регистр РезервНаСкладах Приход
		Движение = Движения.РезервНаСкладах.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		
		Движение.Регистратор = ссылка;
		
		ЗаполнитьЗначенияСвойств(Движение, ТекСтрокаТовары); //все поля =
		Движение.Количество = текСтрокаТовары.КоличествоЗаказано;
		
		//25.03.2013 -------------Здесь же, а не в Реализации - расход ----------------------------
		Если текСтрокаТовары.Количество>0 Тогда
			Движение = Движения.РезервНаСкладах.Добавить();
			Движение.Период = Дата;   // Дата снятия резерва = фактической дате окончания отгрузки
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			
			Движение.Регистратор = ссылка;
			
			ЗаполнитьЗначенияСвойств(Движение, ТекСтрокаТовары); //все поля =
			Движение.Количество = текСтрокаТовары.Количество;
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры

//----------------Основная процедура движения по регистру РезервНаСкладах------------------------
// 1. получаем Товары и Заказанные Товары по ЗаказамПокупателей
// 2. идем в цикле и вычитаем по очереди...
//
Процедура ДвижениеПоРегиструРезервНаСкладах()

	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	 			|	ТЧЗаказыПокупателейЗадания.НомерСтроки КАК НомерСтроки,
		   		|	ТЧЗаказыПокупателейЗадания.ЗаказПокупателя КАК ЗаказПокупателя
	             |ПОМЕСТИТЬ ТЧЗаказыПокупателейЗадания
	              |ИЗ
	              |	&ТЧЗаказыПокупателей КАК ТЧЗаказыПокупателейЗадания
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
			 	  |	ТЧЗаказыПокупателей.НомерСтроки КАК НомерСтрокиЗаказа,  
	              |	ТЧЗаказыПокупателей.ЗаказПокупателя КАК Заказ,
	              |	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	              |	ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) КАК КоличествоПоРегистру,
	              |	ЕСТЬNULL(ЗаказыПокупателейОстатки.Цена, 0) КАК Цена
	              |ИЗ
	              |	ТЧЗаказыПокупателейЗадания КАК ТЧЗаказыПокупателей
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(&ДатаОстатков, ЗаказПокупателя В (&СписокЗаказовПокупателя)) КАК ЗаказыПокупателейОстатки
	              |		ПО (ЗаказыПокупателейОстатки.ЗаказПокупателя = ТЧЗаказыПокупателей.ЗаказПокупателя)
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	НомерСтрокиЗаказа
	              |ИТОГИ
	              |	МИНИМУМ(НомерСтрокиЗаказа),
	              |	СУММА(КоличествоПоРегистру)
				  |ПО
	              |	Заказ
	              |АВТОУПОРЯДОЧИВАНИЕ";
				   
		Запрос.УстановитьПараметр("СписокЗаказовПокупателя", ЗаказыПокупателей.ВыгрузитьКолонку("ЗаказПокупателя") );
		
		//+++ 14.07.2014 - отдельный приоритет для ФормулаАвтоПлюс  // анализ в Запросе - невозможен!
		//Запрос.УстановитьПараметр("ТЧЗаказыПокупателей", ЗаказыПокупателей.Выгрузить() );
		
		ТЧЗаказыПокупателей = ЗаказыПокупателей.Выгрузить();
		ФормулаАвтоПлюс = справочники.Контрагенты.НайтиПоКоду("92797");
		 для каждого стр1 из ТЧЗаказыПокупателей цикл
			 Если стр1.ЗаказПокупателя.Контрагент = ФормулаАвтоПлюс Тогда
				 стр1.НомерСтроки = 0;
			 КонецЕсли;
		КонецЦикла;	 
		Запрос.УстановитьПараметр("ТЧЗаказыПокупателей", ТЧЗаказыПокупателей );
		//+++)
		
		//посмотрим, есть ли проведенные реализации и возьмем самую позднюю дату
		ДатаОстатков = Дата(1,1,1);
		Для каждого стр из Заказыпокупателей Цикл
			Если ЗначениеЗаполнено(стр.Реализация) Тогда
			Если стр.Реализация.Проведен и стр.Реализация.Дата>ДатаОстатков Тогда
				ДатаОстатков = стр.Реализация.Дата;
			конецЕсли;
			конецЕсли;
		конецЦикла;
		Запрос.УстановитьПараметр("ДатаОстатков",?(ДатаОстатков='00010101','00010101', ДатаОстатков+1) );//04.02.2016 - на дату реализаций!
		
		//Запрос.УстановитьПараметр("МоменВремени",Новый граница(Дата, ВидГраницы.Исключая));
		
		результат = Запрос.Выполнить(); // основной запрос выполяется здесь сразу по всем заказам - получаем ЗАКАЗАННУЮ Номенклатуру
		СтрокаЗаказаПокупателя = результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		
		
	// для каждой номенклатуры - определяем в какие заказы попадет + и -
	тзТовары = Товары.Выгрузить(); // виртуальная таблица по которой и вычитаются остатки

  
	//-------------------Основной Цикл по Номенклатуре и Заказам--------------------
	Пока СтрокаЗаказаПокупателя.Следующий() цикл
		
	//--------общеее число Заказано по Номенклатуре и текущему заказу - делим для каждого склада...
	//КолПоЗаказу = СтрокаЗаказаПокупателя.КоличествоПоЗаданию;
	КолПоЗаказуВсего = СтрокаЗаказаПокупателя.КоличествоПоРегистру; // для Номенклатуры в Заказе и Остатках Заказано
		
	РеализацияПоЗаказуПроведена = естьРеализации(Истина, СтрокаЗаказаПокупателя.Заказ);//+++ ограничение снятия резерва!
	
	 ТекСтрокаПоНоменклатуре = СтрокаЗаказаПокупателя.Выбрать(); // открываем номенклатуру, заказанную в заказе по регистру
	 
	 Если КолПоЗаказуВсего<=0 Тогда // нет заказанных товаров по заказу
		 продолжить;
	 КонецЕсли;
	 
	 //--------------------по заказанной в заказе номенклатуре - ищем ее же в таблице Товары по всем складам------------------------
	 Пока ТекСтрокаПоНоменклатуре.Следующий() Цикл
		 
		КолПоЗаказуВ  = ТекСтрокаПоНоменклатуре.КоличествоПоРегистру;
		КолПоЗаказуИз = ТекСтрокаПоНоменклатуре.КоличествоПоРегистру;
				
		строкиТовары = тзТовары.НайтиСтроки(новый Структура("Номенклатура", ТекСтрокаПоНоменклатуре.Номенклатура)); // однозначно определяет строку, индекс = номерСтроки - 1
				
		//------------------------------------------------------------------------
		Для i=0 по строкиТовары.Количество()-1 Цикл
		строкаТовары =тзТовары[строкиТовары[i].номерСтроки-1];
		
		Если строкаТовары.КоличествоЗаказано<=0 и строкаТовары.Количество<=0 Тогда
			Продолжить; // уже все отгрузили в предыдущих заказах по данному складу-адресу
		КонецЕсли;	
		
		Если КолПоЗаказуВ<=0 и КолПоЗаказуИз<=0 Тогда  // всё заказанное количество по номенклатуре заказа - распределили по склад-адресу...
			Прервать;
		КонецЕсли;	
			
		//------------------------------ГЛАВНЫЕ УСЛОВИЯ ДЕЛЕНИЯ -------------------------------
		    // КолВ = количество В резерв    - по текущему складу-адресу
		    // КолИз = количество Из резерва - по текущему складу-адресу
			
		Если КолПоЗаказуВ>=строкаТовары.КоличествоЗаказано Тогда
			КолВ = строкаТовары.КоличествоЗаказано;
			КолПоЗаказуВ = КолПоЗаказуВ - строкаТовары.КоличествоЗаказано;
			строкаТовары.КоличествоЗаказано = 0; //все отгрузили с этого склада
		Иначе
			КолВ = КолПоЗаказуВ;  // не отрицательный!
			КолПоЗаказуВ = 0;
			строкаТовары.КоличествоЗаказано = строкаТовары.КоличествоЗаказано - КолВ;
		КонецЕсли;
		
		Если КолПоЗаказуИз>=строкаТовары.Количество Тогда
			КолИз = строкаТовары.Количество;
			КолПоЗаказуИз = КолПоЗаказуИз - строкаТовары.Количество;
			строкаТовары.Количество = 0;
		Иначе
			КолИз = КолПоЗаказуИз; // не отрицательный!
			КолПоЗаказуИз = 0;
			строкаТовары.Количество = строкаТовары.Количество - КолИз;
 		КонецЕсли;

		//-------------------------ДВИЖЕНИЯ  В Резерв (Приход)-------------------------------
		Если КолВ>0 Тогда
		Движение = Движения.РезервНаСкладах.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		
		Движение.Регистратор = ссылка;
		
		ЗаполнитьЗначенияСвойств(Движение, строкаТовары); //все поля =
	
		Движение.ЗаказПокупателя = ТекСтрокаПоНоменклатуре.Заказ; 
		Движение.Количество = КолВ;
		КонецЕсли;
	
		//-------------------ДВИЖЕНИЯ Из Резерва (Расход)----------------------------
		флВыполнено = ЭтотОбъект.Выполнено;
		Если (КолИз>0 и РеализацияПоЗаказуПроведена) или флВыполнено Тогда 
			Движение = Движения.РезервНаСкладах.Добавить();
			Движение.Период = Дата;   // Дата снятия резерва = фактической дате окончания отгрузки
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			
			Движение.Регистратор = ссылка;
		   
			ЗаполнитьЗначенияСвойств(Движение, строкаТовары); //все поля =
			
			Движение.ЗаказПокупателя = ТекСтрокаПоНоменклатуре.Заказ; 
			Движение.Количество  = ?(флВыполнено, КолВ, КолИз); // выполнено закрываем в 0!
		КонецЕсли;	
		
	    КонецЦикла;// по Складам и Адресам

	КонецЦикла;// по Заказам
	
КонецЦикла; // по номенклатуре
	

КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	
	//-------------------------с разбивкой по Заказам Покупателей---------------
	Если ВидОперации = Перечисления.ВидыДвиженийПриходРасход.Расход 
		И Константы.ИспользованиеРезерваНаСкладах.Получить()
		И НЕ Отказ Тогда
		ДвижениеПоРегиструРезервНаСкладах();  
	КонецЕсли;
	
	//-------------стандартный мастер настройки движений----------------------------
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 
	
	Если ЭтотОбъект.ВидОперации = перечисления.ВидыДвиженийПриходРасход.Приход Тогда
		
		Если ЗаказыПоставщикам.Количество()>0 Тогда//+++ 11.08.2016 - подразделение как и по заказам покупателей
			Если ЭтотОбъект.Подразделение <> ЗаказыПоставщикам[0].ЗаказПоставщику.Подразделение Тогда
			ЭтотОбъект.Подразделение = ЗаказыПоставщикам[0].ЗаказПоставщику.Подразделение;
			ном0 = ЭтотОбъект.Номер;
			
		//	УстановитьНомерДокумента(ЭтотОбъект);  >> заменена процедура 28.07.2016 на явное изменение префикса
			Если ЭтотОбъект.Подразделение.Код = "00005" Тогда СтрокаПрефикс = "ТК"
			Иначе СтрокаПрефикс = ЭтотОбъект.Подразделение.ПрефиксИБ
			КонецЕсли;	
			Если СокрЛП(СтрокаПрефикс)="" Тогда
				СтрокаПрефикс = "00";
			КонецЕсли;	
			ЭтотОбъект.УстановитьНовыйНомер(СтрокаПрефикс);	
           	#Если Клиент Тогда
			сообщить("В документе установлено: "+строка(ЭтотОбъект.Подразделение)+" -> Номер изменился "+строка(ном0)+" >> "+строка(ЭтотОбъект.Номер), СтатусСообщения.Внимание);
			#КонецЕсли	

			КонецЕсли;
		КонецЕсли;
		
    	 возврат;
	 КонецЕсли; 
	 
	//+++( 20.07.2016 ---подразделение отгрузки определяется подразделением 1-го Заказа!----
	Если ЗаказыПокупателей.Количество()>0 Тогда
		Если ЭтотОбъект.Подразделение <> ЗаказыПокупателей[0].ЗаказПокупателя.Подразделение Тогда
			ЭтотОбъект.Подразделение = ЗаказыПокупателей[0].ЗаказПокупателя.Подразделение;
			ном0 = ЭтотОбъект.Номер;
			
		//	УстановитьНомерДокумента(ЭтотОбъект);  >> заменена процедура 28.07.2016 на явное изменение префикса
			Если ЭтотОбъект.Подразделение.Код = "00005" Тогда СтрокаПрефикс = "ТК"
			Иначе СтрокаПрефикс = ЭтотОбъект.Подразделение.ПрефиксИБ
			КонецЕсли;	
			Если СокрЛП(СтрокаПрефикс)="" Тогда
				СтрокаПрефикс = "00";
			КонецЕсли;	
			ЭтотОбъект.УстановитьНовыйНомер(СтрокаПрефикс);	
 
			#Если Клиент Тогда
			сообщить("В документе установлено: "+строка(ЭтотОбъект.Подразделение)+" -> Номер изменился "+строка(ном0)+" >> "+строка(ЭтотОбъект.Номер), СтатусСообщения.Внимание);
			#КонецЕсли	
		КонецЕсли;	
	КонецЕсли;
	
	Для каждого стр1 из ЗаказыПокупателей цикл
		Если стр1.ЗаказПокупателя.Подразделение<>Подразделение Тогда
			#Если Клиент Тогда
			сообщить("Подразделение в "+строка(стр1.ЗаказПокупателя)+" - не совпадает с подразделением документа!", СтатусСообщения.Внимание);
			#КонецЕсли	
			ОТКАЗ=НЕ РольДоступна("ПравоЗавершенияРаботыПользователей");
		КонецЕсли;
	КонецЦикла;
	//+++)
	
		// +++( 24.07.2013	
	// Проверка превышения лимита дебиторской задолженности - по каждому Контрагенту и всем заказам сразу
	Если  ( ЭтотОбъект.ЗаказыПокупателей.Количество()>0 
		      и НЕ (РежимЗаписи=РежимЗаписиДокумента.ОтменаПроведения)
			  и не ЭтотОбъект.ПометкаУдаления
			  и не ЭтотОбъект.Выполнено) Тогда   //+++ 07.11.2013  НЕ  ОтменаПроведения
		
		списокЗаказов = новый СписокЗначений;
		//+++ 17.03.2014 не 1 раз, а каждый раз!
		//списокЗаказов.ЗагрузитьЗначения( ЭтотОбъект.ЗаказыПокупателей.ВыгрузитьКолонку("ЗаказПокупателя") ); 
		
		отказ1 = Отказ;
		//+++ 27.03.2015 - не надо проверять лимит при "выполнении",
	    // уже сформированы реализации и ограничения еще раз учитывают эти же заказы...
		
		
		
//+++ (01.10.2015 - было так - сколько заказов столько и проверок!

		Для каждого Заказ1 из ЭтотОбъект.ЗаказыПокупателей цикл //+++ 24.07.2013 - переделанная процедура
			Отказ1 = ложь;
			Отказ2 = ложь;

			//+++ 17.03.2014 - список надо загружать заново каждый раз!
	    	списокЗаказов.ЗагрузитьЗначения( ЭтотОбъект.ЗаказыПокупателей.ВыгрузитьКолонку("ЗаказПокупателя") ); 
		
		//+++ 21.10.2013 - потенциальные покупатели - не грузятся!
	    	Если Заказ1.ЗаказПокупателя.Контрагент.ПринадлежитЭлементу(Справочники.Контрагенты.ПотенциальныеПокупатели) Тогда
	   			#Если Клиент Тогда
					Сообщить("Контрагент: "+строка(Заказ1.ЗаказПокупателя.Контрагент)+" - находится в Потенциальных покупателях! Отгрузка невозможна!", СтатусСообщения.Внимание);
	 			#КонецЕсли			   
		   		Отказ1 = Истина;
			Иначе
	//    	ПроверитьПревышениеОбщегоЛимитаДЗСУчетомЗаказа(списокЗаказов, отказ1, Заказ1.ЗаказПокупателя.Контрагент, Дата);   //*** 2015.09.17 передается Дата
			ПроверитьПревышениеОбщегоЛимитаДЗСУчетомЗаказа(списокЗаказов, отказ1, Заказ1.ЗаказПокупателя.Контрагент);   //*** 12.10.2015 НЕ нужна дата!!!
		
			//==========ПРОВЕРКА ПРИ ЛЮБОЙ ЗАПИСИ!================
			ЗакОб = Заказ1.ЗаказПокупателя.ПолучитьОбъект();
			ЗакОб.ОбменДанными.Загрузка = ЛОЖЬ;
			максДата = макс(ЭтотОбъект.дата, ЗакОб.ДатаОтгрузки);
			//Миронычев
			Если ЗакОб.ДоговорКонтрагента.ТипДоговора <> Справочники.ТипыДоговоров.ПредоплатаПоСчетам тогда
				ПроверитьДоговорВЗаказеПокупателя(ЗакОб, Отказ2, Истина, максДата); //+++  12-21.09.2016 ЗАПРЕТ!
			КонецЕсли;
			//КонецМиронычев

			Если ЗакОб.ОтгрузкаСПодразделенияСклада Тогда//22.09.2016
				#Если Клиент Тогда
					Предупреждение("Нельзя ставить Заказ "+ЗакОб.Номер+" - на отгрузку из Ярославля!
							   |Этот заказ уже предназначен [v] для отгрузки со склада филиала:
							   |"+сокрЛП(ЗакОб.Склад.Подразделение.Наименование)+" !",30);
				#КонецЕсли			   
				Отказ2 = Истина;
			КонецЕсли;		
			ЗакОб = неопределено; //15.05.2017  освобождаем объект!
			
			КонецЕсли;
			
			//+++ 22.06 - 08.08.2016  НЕЛЬЗЯ ДЕЛАТЬ 2 ЗАДАНИЯ НА 1 ЗАКАЗ !!!  Если это новое задание на отгрузку - проверяем!
			Если ЭтоНовый() Тогда
			 	выборка = яштРезервыПоТоварам.ЕстьРезервПоЗаказу(Заказ1.ЗаказПокупателя, Истина);  // и Отказ1 
				Если выборка.Следующий() Тогда
					Если выборка.Тип = "Задание на перемещение" Тогда
						Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
							Отказ1 = Истина;
							СообщитьОбОшибке(" ВНИМАНИЕ! По заказу "+строка(Заказ1.НомерСтроки)+" - еще НЕ ВЫПОЛНЕНО "+выборка.Тип+" № "+выборка.Номер+" от "+строка(выборка.Дата)+" ПРОВОДИТЬ Задание на отгрузку НЕЛЬЗЯ!", Отказ1, "!!! ВНИМАНИЕ !!!");
						иначе	
							Отказ1 = ЛОЖЬ;
							#Если Клиент Тогда
							Сообщить(" Внимание! По заказу "+строка(Заказ1.НомерСтроки)+" - еще НЕ ВЫПОЛНЕНО "+выборка.Тип+" № "+выборка.Номер+" от "+строка(выборка.Дата)+"!", СтатусСообщения.Внимание);
							#КонецЕсли			   
						КонецЕсли;	
					иначе	
						Отказ1 = Истина;
						СообщитьОбОшибке("НЕЛЬЗЯ ДЕЛАТЬ 2 задания на 1 заказ!!!  По заказу "+строка(Заказ1.НомерСтроки)+" - УЖЕ ЕСТЬ "+выборка.Тип+" № "+выборка.Номер+" от "+строка(выборка.Дата)+" !", Отказ1, "!!! ВНИМАНИЕ !!!");
					КонецЕсли;
			 	КонецЕсли;
			КонецЕсли;

			Если отказ1 или отказ2 Тогда
	    		Отказ = Истина;
			КонецЕсли;	
			
	    КонецЦикла;
	    
		Если Отказ Тогда
			возврат; 
	    КонецЕсли;
				
	КонецЕсли; 	// конец контроля лимитов!!!
	
	//+++ Шарафутдинов 20.04.2018 по задаче 43189 
	Если не отказ и РежимЗаписи =  РежимЗаписиДокумента.ОтменаПроведения тогда
		Если естьРеализации() тогда
			СообщитьОбОшибке("Нельзя отменять задание, в которому осуществлена реализация!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	//--- Шарафутдинов 20.04.2018 по задаче 43189 
	
	
	//+++ при ручном вводе документа 10.09.2013
	Если ЭтотОбъект.ВидОперации = перечисления.ВидыДвиженийПриходРасход.Расход Тогда
		Важность = ?(Важность <> перечисления.Важность.ПустаяСсылка(), Важность, // ручная важность!
		?(ЭтоКлиент11категории(ЭтотОбъект), перечисления.Важность.Высокая,  перечисления.Важность.Средняя) );
	КонецЕсли;
	

	Если ДатаДокументаПервая='00010101' Тогда
		ДатаДокументаПервая = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры	

//+++ Шарафутдинов    29.06.2018
#Если Клиент тогда
Процедура ВыбратьИВыгрузитьЭДО(СЗ)Экспорт 
	
	СписокКонтрагентов = новый СписокЗначений;
	СписокДокументов = новый СписокЗначений;
	для каждого стр из СЗ цикл
		Если ОтправлятьЭД(стр.значение.Контрагент) тогда			
			СписокДокументов.Добавить(стр.значение);
		КонецЕсли;
	КонецЦикла;
	
	Если СписокДокументов.Количество()>0 тогда
				
			//обработка Диадок
			попытка
				ТекСсылка=Справочники.ВнешниеОбработки.НайтиПоНаименованию("Diadoc",истина);
				ИмяФайла = ПолучитьИмяВременногоФайла(); 
				ДвоичныеДанные = ТекСсылка.ХранилищеВнешнейОбработки.Получить(); 
				ДвоичныеДанные.Записать(ИмяФайла); 
				Если ТекСсылка.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда 
					Обработка = ВнешниеОтчеты.Создать(ИмяФайла,ложь); 
				Иначе 
					Обработка = ВнешниеОбработки.Создать(ИмяФайла,Ложь); 
				КонецЕсли;
				
				//+++заполнение ТЧ обработки
				Обработка.ТаблицаДокументовИсходящих.Очистить(); 
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	РеализацияТоваровУслуг.Ссылка КАК РеализацияСсылка,
				|	РеализацияТоваровУслуг.Номер,
				|	РеализацияТоваровУслуг.Дата,
				|	РеализацияТоваровУслуг.Проведен,
				|	РеализацияТоваровУслуг.ВидОперации,
				|	РеализацияТоваровУслуг.Организация,
				|	РеализацияТоваровУслуг.БанковскийСчетОрганизации,
				|	РеализацияТоваровУслуг.Подразделение,
				|	РеализацияТоваровУслуг.Комментарий,
				|	РеализацияТоваровУслуг.Сделка,
				|	РеализацияТоваровУслуг.Склад,
				|	РеализацияТоваровУслуг.ДоговорКонтрагента,
				|	РеализацияТоваровУслуг.Контрагент,
				|	РеализацияТоваровУслуг.ТипЦен,
				|	РеализацияТоваровУслуг.ВалютаДокумента КАК Валюта,
				|	РеализацияТоваровУслуг.УчитыватьНДС,
				|	РеализацияТоваровУслуг.СуммаВключаетНДС,
				|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
				|	РеализацияТоваровУслуг.КратностьВзаиморасчетов,
				|	РеализацияТоваровУслуг.Ответственный,
				|	РеализацияТоваровУслуг.ВидПередачи,
				|	РеализацияТоваровУслуг.АдресДоставки,
				|	РеализацияТоваровУслуг.Грузополучатель,
				|	РеализацияТоваровУслуг.Грузоотправитель,
				|	РеализацияТоваровУслуг.Проверен,
				|	РеализацияТоваровУслуг.КонтрагентДляПечати,
				|	РеализацияТоваровУслуг.СрокДоставки,
				|	РеализацияТоваровУслуг.Водитель,
				|	РеализацияТоваровУслуг.Перевозчик,
				|	РеализацияТоваровУслуг.Заказчик,
				|	РеализацияТоваровУслуг.ОбщийВес КАК Вес,
				|	РеализацияТоваровУслуг.ОтгрузкаВагона,
				|	РеализацияТоваровУслуг.ИзОбработки,
				|	РеализацияТоваровУслуг.ЗаказНаряд,
				|	РеализацияТоваровУслуг.Автомобиль,
				|	РеализацияТоваровУслуг.Выгружен,
				|	РеализацияТоваровУслуг.Состояние,
				|	РеализацияТоваровУслуг.ОрганизацияДляПечати,
				|	РеализацияТоваровУслуг.ДатаДоверенности,
				|	РеализацияТоваровУслуг.НомерДоверенности,
				|	РеализацияТоваровУслуг.ОрганизацияВыдавшаяДоверенность,
				|	РеализацияТоваровУслуг.ФизЛицоДоверенности,
				|	РеализацияТоваровУслуг.Водитель2,
				|	РеализацияТоваровУслуг.Перевозчик2,
				|	РеализацияТоваровУслуг.СуммаКомпенсацииТранспорта,
				|	РеализацияТоваровУслуг.БезНал,
				|	РеализацияТоваровУслуг.НеФинансироватьФакторинг,
				|	РеализацияТоваровУслуг.ТранспортДатаРеализации,
				|	РеализацияТоваровУслуг.НомерФормулаАвто,
				|	РеализацияТоваровУслуг.УПД,
				|	РеализацияТоваровУслуг.Основание,
				|	""Реализация товаров и услуг"" КАК ЗначениеТипаДокумента
				|ИЗ
				|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				|ГДЕ
				|	РеализацияТоваровУслуг.Ссылка В (&ссылки)
				|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
				//|	И РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
				|	И НЕ РеализацияТоваровУслуг.ДоговорКонтрагента.Наименование ПОДОБНО ""%*""";
				
				
				Запрос.УстановитьПараметр("ссылки",СписокДокументов );
				
				
				Результат = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = Результат.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					НовСтр = Обработка.ТаблицаДокументовИсходящих.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,ВыборкаДетальныеЗаписи);
					НовСтр.Вкл = истина;
				КонецЦикла;
				
				
				для каждого стр из Обработка.ТаблицаДокументовИсходящих цикл
					СписокКонтрагентов.Добавить(стр.Контрагент);
				КонецЦикла;                       				
				
				СтрокаКонтрагенты = "";
				для каждого стр из СписокКонтрагентов цикл
					СтрокаКонтрагенты = СтрокаКонтрагенты + строка(стр.Значение) + Символы.ПС;
				КонецЦикла;
				
				#Если не Клиент Тогда
					Возврат;
				#Иначе
					
					Режим = РежимДиалогаВопрос.ДаНет;
					Текст = "Выгрузить УПД следующим контрагентам:"  + Символы.ПС + СтрокаКонтрагенты + " ?";
					
					Ответ = Вопрос(Текст, Режим, 0);
				#КонецЕсли
				
				
				Если Ответ = КодВозвратаДиалога.Нет Тогда
					Возврат;
				иначе 			
					
					Сообщить("Начало выгрузки электронных документов!");					
					//---заполнение ТЧ обработки			.
					Обработка.ОтправитьУПД(истина);
					
					Сообщить("Окончание выгрузки электронных документов!");
				КонецЕсли;
			исключение
				ЗаписьЖурналаРегистрации("Diadoc",
				УровеньЖурналаРегистрации.Информация,
				,
				,
				ОписаниеОшибки(),
				);
			КонецПопытки;
				
			
		
	КонецЕсли;
	
	
КонецПроцедуры
#КонецЕсли
//--- Шарафутдинов    29.06.2018

