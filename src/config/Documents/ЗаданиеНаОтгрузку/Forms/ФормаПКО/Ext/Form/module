
Процедура ОсновныеДействияФормыСформироватьДокументы(Кнопка)
	НайденныйДокумент = Документы.ОтчетВодителяОСдачеДенежныхСредств.НайтиПоРеквизиту("ЗаданиеНаОтгрузку", Этаформа.ВладелецФормы.Ссылка);
	если НайденныйДокумент = Документы.ОтчетВодителяОСдачеДенежныхСредств.ПустаяСсылка() Тогда
		ДокОтчет = Документы.ОтчетВодителяОСдачеДенежныхСредств.СоздатьДокумент();
		ДокОтчет.Водитель = Этаформа.ВладелецФормы.Ссылка.Водитель;
		ДокОтчет.ЗаданиеНаОтгрузку = Этаформа.ВладелецФормы.Ссылка;
		ДокОтчет.Дата = ТекущаяДата();// всегда оперативно как ПКО
	иначе
		ДокОтчет = НайденныйДокумент.ПолучитьОбъект();
		ДокОтчет.Расшифровка.Очистить();// перезапишем
		ДокОтчет.Дата = ТекущаяДата();// всегда оперативно как ПКО
		
	конецЕсли;	
	Для каждого строка из 	ЭлементыФормы.ТабличноеПоле.Значение Цикл
		Если Строка.ТоварВнесено+строка.ПредыдущиеПоставкиВнесено+строка.ТранспортВнесено <>Строка.Товар+строка.ПредыдущиеПоставки+строка.Транспорт Тогда  ///
		  //создадим уведомление менеджеру
		  менеджер =  Строка.Реализация.ДоговорКонтрагента.ОтветственноеЛицо;	
		  задача = задачи.ЗадачиПользователя.СоздатьЗадачу();
		  Задача.Исполнитель = менеджер;
		  задача.НаСогласование = Ложь;
		  задача.Наименование = "Сумма, привезенная водителем "+ Этаформа.ВладелецФормы.Ссылка.Водитель+" от контрагента "+строка.Заказ.Контрагент+" , не совпадает с плановой."; 
		  задача.Описание = "Заказ покупателя "+строка.Заказ.Номер+ " от "+строка.Заказ.Дата+ ", Реализация "+строка.Реализация.Номер+ " от "+строка.Реализация.Дата+ " ";	  
		  Если строка.Товар<> строка.ТоварВнесено Тогда
			 задача.Описание =задача.Описание+ "Сумма за товар по плану "+строка.Товар+ ", по факту "+строка.ТоварВнесено+"; ";  
		  конецЕсли;
		  Если строка.ПредыдущиеПоставки <> строка.ПредыдущиеПоставкиВнесено Тогда
			 задача.Описание =задача.Описание+ "Сумма за предыдущие отгрузки по плану "+строка.ПредыдущиеПоставки+ ", по факту "+строка.ПредыдущиеПоставкиВнесено+"; ";  
		  конецЕсли;
		  Если строка.Транспорт<> строка.ТранспортВнесено Тогда
			 задача.Описание =задача.Описание+ "Сумма за доставку по плану "+строка.Транспорт+ ", по факту "+строка.ТранспортВнесено+"; ";  
		  конецЕсли;
		  
		  
		  задача.Инициатор   = глТекущийПользователь;
		  задача.Дата 		    = ТекущаяДата();
		  задача.СрокИсполнения = КонецДня( ТекущаяДата() ); 	
		  задача.Оповещение     = ложь;
		  Задача.Объект = Строка.заказ;
		  задача.СрокОповещения = ТекущаяДата(); 
		  попытка
			  задача.Записать();
		  исключение
		конецПопытки;  
		 конецЕсли;
		
		
		Если Строка.ТоварВнесено+строка.ПредыдущиеПоставкиВнесено+строка.ТранспортВнесено >0 Тогда  ///запишем в отчет водителя
			текСтрока = ДокОтчет.Расшифровка.Добавить();
			текСтрока.Заказ = строка.заказ;
			текСтрока.Реализация = Строка.Реализация;
			ТекСтрока.Сумма = ?(строка.ПредыдущиеПоставкиВнесено<0,строка.ТоварВнесено-строка.ПредыдущиеПоставкиВнесено,строка.ТоварВнесено);
			ТекСтрока.СуммаТранспорт = строка.ТранспортВнесено;
			ТекСтрока.СуммаПредыдущийДолг = строка.ПредыдущиеПоставкиВнесено;
		конецЕсли;
		//за доставку
		Если строка.транспортВнесено >0 Тогда
			если НЕ ЗначениеЗаполнено(строка.ПКОТранспорт) Тогда     //создадим новый
				ДокПКО = Документы.ПриходныйКассовыйОрдер.СоздатьДокумент();
			иначеЕсли ПерезаполнятьПКО Тогда //	 перезапишем если стоит нужный флаг
				ДокПКО = Строка.ПКОТранспорт.ПолучитьОбъект();
			конецЕсли;
			Если ДокПКО <> Неопределено Тогда
				Если ДокПКО.этоНовый() Тогда
					ЗаполнитьЗначенияСвойств(ДокПКО, строка.Реализация);
					ДокПКО.Дата = ТекущаяДата();
					УстановитьНомерДокумента(ДокПКО);
				КонецЕсли;
				ДокПКО.ОтражатьВБухгалтерскомУчете = Ложь;
				ДокПКО.ОтражатьвНалоговомУчете = Ложь;
				ДокПКО.Проверен = Ложь;
				ДокПКО.ОтраженоВОперУчете = Истина;
				ДокПКО.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя;
				
				ДокПКО.Дата		   = ТекущаяДата();  //всегда оперативное проведение!
				ДокПКО.ДокументОснование = строка.РеализацияТранспорт;
				ДокПКО.Касса = ПолучитьКассу();//справочники.Кассы.НайтиПоКоду("00004"); // Касса ячейка - 00004, (основная - 00001)
				ДокПКО.Ответственный = глТекущийПользователь;
				ДокПКО.СтатьяДвиженияДенежныхСредств = справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя;
				
				ДокПКО.ПринятоОт =  Этаформа.ВладелецФормы.Ссылка.Водитель;
				
				ДокПКО.РасшифровкаПлатежа.Очистить();
				стрПКО = ДокПКО.РасшифровкаПлатежа.Добавить();
				стрПКО.ДоговорКонтрагента=строка.РеализацияТранспорт.ДоговорКонтрагента;
				стрПКО.СтатьяДвиженияДенежныхСредств = справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя;
				стрПКО.Сделка = строка.РеализацияТранспорт;
				стрПКО.КурсВзаиморасчетов = 1;   
				стрПКО.КратностьВзаиморасчетов = 1;
				стрПКО.СуммаПлатежа = строка.ТранспортВнесено;
				стрПКО.СуммаВзаиморасчетов = строка.ТранспортВнесено;
				стрПКО.СтавкаНДС    = Перечисления.СтавкиНДС.БезНДС;
				ДокПКО.СуммаДокумента = строка.ТранспортВнесено;
				ДокПКО.Оплачено = Истина;
				ДокПКО.СсылкаЗаданиеНаОтгрузку   = Этаформа.ВладелецФормы.Ссылка;
				ДокПКО.Основание   = "Оплата транспортных услуг по маршруту "+строка( Этаформа.ВладелецФормы.Ссылка.Номер)+" от "+формат( Этаформа.ВладелецФормы.Ссылка.Дата,"ДЛФ=DD");
				ДокПКО.Комментарий ="# Задание "+строка( Этаформа.ВладелецФормы.Ссылка.Номер)+" от "+строка( Этаформа.ВладелецФормы.Ссылка.Дата); 
				ДокПКО.Записать(РежимЗаписиДокумента.Проведение);
				строка.ПКОТранспорт = ДокПКО.ссылка;
				
				//ДокПКО.ПолучитьФорму("ФормаДокумента").ОткрытьМодально();
			КонецЕсли;
		конецЕсли;
		//за товар
		ДокПКО = Неопределено;
		Если строка.ТоварВнесено >0 Тогда
			если НЕ ЗначениеЗаполнено(строка.ПКОТовар) Тогда     //создадим новый
				ДокПКО = Документы.ПриходныйКассовыйОрдер.СоздатьДокумент();
			иначеЕсли ПерезаполнятьПКО Тогда //	 перезапишем если стоит нужный флаг
				ДокПКО = Строка.ПКОТовар.ПолучитьОбъект();
			конецЕсли;
			Если ДокПКО <> Неопределено Тогда
				
				Если ДокПКО.этоНовый() Тогда
					ЗаполнитьЗначенияСвойств(ДокПКО, строка.Реализация);
					ДокПКО.Дата = ТекущаяДата();
					УстановитьНомерДокумента(ДокПКО);
				КонецЕсли;
				ДокПКО.ОтражатьВБухгалтерскомУчете = Ложь;
				ДокПКО.ОтражатьвНалоговомУчете = Ложь;
				ДокПКО.Проверен = Ложь;
				ДокПКО.ОтраженоВОперУчете = Истина;
				ДокПКО.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя;
				ДокПКО.Дата		   = ТекущаяДата();  //всегда оперативное проведение!
				ДокПКО.ДокументОснование = строка.Реализация;
				
				//Адиянов<<<
				ДокПКО.Касса = ПолучитьКассу();//справочники.Кассы.НайтиПоКоду("00004"); // Касса ячейка - 00004, (основная - 00001)
				//Адиянов>>>
				ДокПКО.Ответственный = глТекущийПользователь;
				ДокПКО.СтатьяДвиженияДенежныхСредств = справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя;
				
				ДокПКО.ПринятоОт =  Этаформа.ВладелецФормы.Ссылка.Водитель;
				
				ДокПКО.РасшифровкаПлатежа.Очистить();
				стрПКО = ДокПКО.РасшифровкаПлатежа.Добавить();
				стрПКО.ДоговорКонтрагента=строка.Реализация.ДоговорКонтрагента;
				стрПКО.СтатьяДвиженияДенежныхСредств = справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя;
				стрПКО.Сделка = строка.Реализация.Сделка;
				стрПКО.КурсВзаиморасчетов = 1;   
				стрПКО.КратностьВзаиморасчетов = 1;
				стрПКО.СуммаПлатежа = строка.ТоварВнесено;
				стрПКО.СуммаВзаиморасчетов = строка.ТоварВнесено;
				стрПКО.СтавкаНДС    = Перечисления.СтавкиНДС.БезНДС;
				ДокПКО.СуммаДокумента = строка.ТоварВнесено;
				ДокПКО.Оплачено = Истина;
				ДокПКО.СсылкаЗаданиеНаОтгрузку   =   Этаформа.ВладелецФормы.Ссылка;
				ДокПКО.Основание   = "Оплата за товар по реализации "+строка(строка.Реализация.Номер)+" от "+формат(строка.Реализация.Дата,"ДЛФ=DD");
				ДокПКО.Комментарий ="# Задание "+строка( Этаформа.ВладелецФормы.Ссылка.Номер)+" от "+строка( Этаформа.ВладелецФормы.Ссылка.Дата); 
				ДокПКО.Записать(РежимЗаписиДокумента.Проведение);
				строка.ПКОТовар =  ДокПКО.ссылка;
				
				//ДокПКО.ПолучитьФорму("ФормаДокумента").ОткрытьМодально();
			конецЕсли;		
		конецЕсли;
		//за доставку
		ДокПКО = Неопределено;
		Если строка.ПредыдущиеПоставкиВнесено >0 Тогда
			если НЕ ЗначениеЗаполнено(строка.ПКОПредыдущиеПоставки) Тогда     //создадим новый
				ДокПКО = Документы.ПриходныйКассовыйОрдер.СоздатьДокумент();
			иначеЕсли ПерезаполнятьПКО Тогда //	 перезапишем если стоит нужный флаг
				ДокПКО = Строка.ПКОТовар.ПолучитьОбъект();
			конецЕсли;
			Если ДокПКО <> Неопределено Тогда
				
				Если ДокПКО.этоНовый() Тогда
					ЗаполнитьЗначенияСвойств(ДокПКО, строка.Реализация);
					ДокПКО.Дата = ТекущаяДата();
					УстановитьНомерДокумента(ДокПКО);
				КонецЕсли;
				ДокПКО.ОтражатьВБухгалтерскомУчете = Ложь;
				ДокПКО.ОтражатьвНалоговомУчете = Ложь;
				ДокПКО.Проверен = Ложь;
				ДокПКО.ОтраженоВОперУчете = Истина;
				ДокПКО.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя;
				ДокПКО.Дата		   = ТекущаяДата();  //всегда оперативное проведение!
				ДокПКО.ДокументОснование = строка.заказ;
				ДокПКО.Касса =  ПолучитьКассу();//справочники.Кассы.НайтиПоКоду("00004"); // Касса ячейка - 00004, (основная - 00001)
				ДокПКО.Ответственный = глТекущийПользователь;
				ДокПКО.СтатьяДвиженияДенежныхСредств = справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя;
				
				ДокПКО.ПринятоОт =  Этаформа.ВладелецФормы.Ссылка.Водитель;
				
				ДокПКО.РасшифровкаПлатежа.Очистить();
				стрПКО = ДокПКО.РасшифровкаПлатежа.Добавить();
				стрПКО.ДоговорКонтрагента=строка.Реализация.ДоговорКонтрагента;
				стрПКО.СтатьяДвиженияДенежныхСредств = справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя;

				//стрПКО.Сделка = РеализацияСсылка;
				стрПКО.КурсВзаиморасчетов = 1;   
				стрПКО.КратностьВзаиморасчетов = 1;
				стрПКО.СуммаПлатежа = строка.ПредыдущиеПоставкиВнесено;
				стрПКО.СуммаВзаиморасчетов = строка.ПредыдущиеПоставкиВнесено;
				стрПКО.СтавкаНДС    = Перечисления.СтавкиНДС.БезНДС;
				ДокПКО.СуммаДокумента  = строка.ПредыдущиеПоставкиВнесено;
				ДокПКО.Оплачено = Истина;
				ДокПКО.СсылкаЗаданиеНаОтгрузку   =   Этаформа.ВладелецФормы.Ссылка;
				ДокПКО.Основание   = "Оплата за предыдущие отгрузки";
				ДокПКО.Комментарий ="# Задание "+строка( Этаформа.ВладелецФормы.Ссылка.Номер)+" от "+строка( Этаформа.ВладелецФормы.Ссылка.Дата); 
				//	ДокПКО.ПолучитьФорму("ФормаДокумента").ОткрытьМодально();
				ДокПКО.Записать(РежимЗаписиДокумента.Проведение);
				строка.ПКОПредыдущиеПоставки =  ДокПКО.ссылка;
			конецЕсли;
		конецЕсли;
		
		
	КонецЦикла;
	Если ДокОтчет.Расшифровка.Количество()>0 Тогда
		ДокОтчет.Записать(РежимЗаписиДокумента.Проведение);
	конецесли;	   
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.Заказ,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.Реализация КАК Реализация,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.ЗаданиеНаОтгрузку,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.СуммаРасход КАК ТоварВнесено,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.СуммаПриход КАК Товар,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.СуммаКонечныйОстаток КАК ТоварОстаток,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.СуммаТранспортПриход КАК Транспорт,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.СуммаТранспортРасход КАК ТранспортВнесено,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.СуммаТранспортКонечныйОстаток КАК ТранспортОстаток,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.СуммаПредыдущийДолгПриход КАК ПредыдущиеПоставки,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.СуммаПредыдущийДолгРасход КАК ПредыдущиеПоставкиВнесено,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.СуммаПредыдущийДолгКонечныйОстаток КАК ПредыдущиеПоставкиОстаток,
	|	УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты.Реализация.Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.пустаяссылка) КАК РеализацияТранспорт
	|ИЗ
	|	РегистрНакопления.УчетДенежныхСредствВПодотчетеУВодителей.ОстаткиИОбороты(, , , , ЗаданиеНаОтгрузку = &Ссылка) КАК УчетДенежныхСредствВПодотчетеУВодителейОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Ссылка", Этаформа.ВладелецФормы.Ссылка);
	
	Таб = ЭлементыФормы.ТабличноеПоле.Значение;
	 Результат = Запрос.Выполнить().Выгрузить();
	 Для каждого ст из Результат Цикл
	ЗаполнитьЗначенияСвойств(Таб.Добавить(),ст);	 
	 конецЦикла;	 
	
	Для каждого стр из Таб Цикл 
		Если стр.ТоварВнесено>0 Тогда
			стр.ПКОТовар = НайтиПКО(стр.Контрагент, стр.Реализация);	 
		конецЕсли;
		Если Стр.Транспорт> 0 Тогда
			РеализацияСсылка = найтиРеализациюТрУсл(стр.Контрагент, стр.Транспорт,справочники.Номенклатура.НайтиПоНаименованию("Транспортная услуга 44-ТР возмещаемые"), Истина,"");
			стр.реализацияТранспорт = РеализацияСсылка; 
		конецЕсли;	
		Если стр.ТранспортВнесено>0 Тогда
			Стр.ПКОТранспорт = НайтиПКО(стр.Контрагент, РеализацияСсылка);
		конецЕсли;
		Если стр.ПредыдущиеПоставкиВнесено>0 Тогда
			стр.ПКОПредыдущиеПоставки = НайтиПКО(стр.Контрагент, стр.заказ);
		конецЕсли;
	ЭлементыФормы.ТабличноеПоле.Значение= Таб;
			
	
		
	конецЦикла;
   обновитьНадпись();	
   
КонецПроцедуры

процедура обновитьНадпись()
	Таб = ЭлементыФормы.ТабличноеПоле.Значение;
	ЭлементыФормы.ТабличноеПоле.Значение =	Таб ;
    ОбщаяСуммаДолга = Таб.Итог("Товар")+Таб.итог("ПредыдущиеПоставки")+таб.Итог("Транспорт");
    ОбщаяСуммаВнесено = Таб.Итог("ТоварВнесено")+Таб.итог("ПредыдущиеПоставкиВнесено")+таб.Итог("ТранспортВнесено");
	ЭлементыФормы.ОбщаяСумма.Заголовок = "Общая сумма по маршрутному листу "+ОбщаяСуммаДолга+" руб.   Внесено в кассу "+Общаясуммавнесено+" руб.";
конецпроцедуры


Функция найтиРеализациюТрУсл(Контрагент1, Сумма1=0, ном1, ДогНал=ЛОЖЬ, стрФА="")
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	 |	РеализацияТоваровУслугУслуги.Ссылка
	 |ИЗ
	 |	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	 |ГДЕ
	 |	РеализацияТоваровУслугУслуги.Ссылка.Контрагент = &Контрагент
	 | И "+?(НЕ ДогНал, "НЕ ","")+"РеализацияТоваровУслугУслуги.Ссылка.ДоговорКонтрагента.Наименование подобно (""%*%"")
	 
	 | И "+?(стрФА="", "НЕ ","")+"( РеализацияТоваровУслугУслуги.Ссылка.ДоговорКонтрагента.Наименование подобно (""%ФА%"")
	 | И "+?(найти(стрФА,"+")=0, "НЕ","")+" РеализацияТоваровУслугУслуги.Ссылка.ДоговорКонтрагента.Наименование ПОДОБНО (""%ФА+%"") 
	 | "+?(стрФА="", ""," И РеализацияТоваровУслугУслуги.Ссылка.ДоговорКонтрагента.Наименование ПОДОБНО (""%"+стрФА+"%"")")+" 
 	 |	И НЕ РеализацияТоваровУслугУслуги.Ссылка.ДоговорКонтрагента.Наименование ПОДОБНО ""% факторинг%"" )
			
	 |	И РеализацияТоваровУслугУслуги.Номенклатура = &Номенклатура
	 |	И РеализацияТоваровУслугУслуги.Ссылка.Комментарий ПОДОБНО (&Задание)
	 |	И РеализацияТоваровУслугУслуги.Ссылка.Дата>&ДатаНач
//---------------------пометки на удаление только у ТаблОрг...------------------------------------------	 
	 |  И НЕ РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления
	 
	 |";
	 
	 Запрос.УстановитьПараметр("Контрагент", Контрагент1);
	// Запрос.УстановитьПараметр("Сумма", Сумма1);
	 Запрос.УстановитьПараметр("Номенклатура", ном1);
	 Запрос.УстановитьПараметр("Задание","%Задание "+СокрЛП(Этаформа.ВладелецФормы.Ссылка.Номер)+"%");
	 Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Этаформа.ВладелецФормы.Ссылка.дата) - 31*86400);     
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Если Выборка.Следующий() Тогда
		 рез = выборка.ссылка;
	 Иначе
		 рез = Неопределено;
	 КонецЕсли;
	 
	 Возврат рез;
	 
КонецФункции

Функция НайтиПКО(Контр, Реализация, Договор=Неопределено )
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
					|	ПриходныйКассовыйОрдер.Ссылка
					|ИЗ
					|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
					|ГДЕ
					|	ПриходныйКассовыйОрдер.ДокументОснование = &ДокументОснование
					|	И ПриходныйКассовыйОрдер.СсылкаЗаданиеНаОтгрузку = &Ссылка
					|	И ПриходныйКассовыйОрдер.Контрагент = &Контр
					|	//и ПриходныйКассовыйОрдер.ДоговорКонтрагента = &Договор
					|
					|УПОРЯДОЧИТЬ ПО
					|	ПриходныйКассовыйОрдер.Дата УБЫВ
					|АВТОУПОРЯДОЧИВАНИЕ";
	 Запрос.УстановитьПараметр("Контр",Контр);
	 Запрос.УстановитьПараметр("Ссылка", Этаформа.ВладелецФормы.Ссылка );
	 Запрос.УстановитьПараметр("ДокументОснование", реализация );
	 //Запрос.УстановитьПараметр("ДатаНач", НачалоДня( Этаформа.ВладелецФормы.Ссылка.Дата) - 31*86400);
	 Если Договор<>Неопределено Тогда
	  Запрос.УстановитьПараметр("Договор",Договор);
	  Запрос.Текст=СтрЗаменить(Запрос.Текст,"//","");	 
	 конецЕсли;
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	Если Выборка.Следующий() Тогда
	рез = выборка.Ссылка;
	Иначе рез = Неопределено;
	КонецЕсли;
	
	Возврат рез;
КонецФункции	

Процедура ЗаполнитьПоПлануНажатие(Элемент)
	Для каждого стр из 	ЭлементыФормы.ТабличноеПоле.Значение Цикл
	Если  Стр.ПредыдущиеПоставки<0 Тогда	
	стр.ТоварВнесено= стр.Товар+ Стр.ПредыдущиеПоставки;
	Стр.ПредыдущиеПоставкиВнесено = 0;
    иначе
	стр.ТоварВнесено= стр.Товар;
	Стр.ПредыдущиеПоставкиВнесено = Стр.ПредыдущиеПоставки;
	конецЕсли;
	стр.ТранспортВнесено = Стр.Транспорт;
    конецЦикла;	
обновитьНадпись();
КонецПроцедуры

Процедура ТабличноеПолеТоварВнесеноПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.ТабличноеПоле.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.ПКОТовар)и (не ПерезаполнятьПКО)  Тогда
		Сообщить("ПКО уже создан. Сумму менять нельзя!");
	текСтрока.ТоварВнесено = ТекСтрока.ПКОТовар.СуммаДокумента;	
	конецЕсли;	
	обновитьНадпись();
	
КонецПроцедуры

Процедура ТабличноеПолеПредыдущиеПоставкиВнесеноПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.ТабличноеПоле.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.ПКОПредыдущиеПоставки)и (не ПерезаполнятьПКО)  Тогда
		Сообщить("ПКО уже создан. Сумму менять нельзя!");
	  текСтрока.ПредыдущиеПоставкиВнесено = ТекСтрока.ПКОПредыдущиеПоставки.СуммаДокумента;	
	конецЕсли;	
  	обновитьНадпись();

КонецПроцедуры

Процедура ТабличноеПолеТранспортВнесеноПриИзменении(Элемент)
	ТекСтрока = ЭлементыФормы.ТабличноеПоле.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.ПКОТранспорт)и (не ПерезаполнятьПКО)  Тогда
		Сообщить("ПКО уже создан. Сумму менять нельзя!");
	  текСтрока.ТранспортВнесено = ТекСтрока.ПКОТранспорт.СуммаДокумента;	
	конецЕсли;	
   	обновитьНадпись();

КонецПроцедуры


Процедура ПерезаполнятьПКОПриИзменении(Элемент)
	Если Не ПерезаполнятьПКО Тогда
		Для каждого стр из Элементыформы.ТабличноеПоле.Значение Цикл
			Если ЗначениеЗаполнено(стр.ПКОТовар)  Тогда
				стр.ТоварВнесено = стр.ПКОТовар.СуммаДокумента;	
			конецЕсли;	
			Если ЗначениеЗаполнено(стр.ПКОПредыдущиеПоставки)  Тогда
				стр.ПредыдущиеПоставкиВнесено = стр.ПКОПредыдущиеПоставки.СуммаДокумента;	
			конецЕсли;	
			Если ЗначениеЗаполнено(стр.ПКОТранспорт) Тогда
				стр.ТранспортВнесено = стр.ПКОТранспорт.СуммаДокумента;	
			конецЕсли;	
			
		конецЦикла;
	конецЕсли;	
	обновитьНадпись();
КонецПроцедуры

//Адиянов.
//Если Веселова создает ПКО то касса "Основная"
Функция ПолучитьКассу()
	// Касса ячейка - 00004, (основная - 00001)
	Если глТекущийПользователь = справочники.Пользователи.НайтиПоКоду("Веселова") Тогда 
		Возврат Справочники.Кассы.НайтиПоКоду("00001"); 
	КонецЕсли;  
	
	Возврат Справочники.Кассы.НайтиПоКоду("00004"); 
	
КонецФункции