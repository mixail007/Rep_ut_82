
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Номенклатура,
	|	СУММА(ВТ.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура,
	|	ЕСТЬNULL(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток, 0) - ВТ_Товары.Количество КАК Остаток
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(&Дата, ЗаказПоставщикуСезонный = &Заказ) КАК ЗаказыПоставщикамСезонныеОстатки
	|		ПО ВТ_Товары.Номенклатура = ЗаказыПоставщикамСезонныеОстатки.Номенклатура";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Заказ",ЗаказПоставщикуСезонный);
	Запрос.УстановитьПараметр("Товары", Товары);
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Остаток < 0 Тогда
			Сообщить("Для номенклатуры "+Выборка.Номенклатура+" По выбранному документу не хватает свободного остатка в производстве!", СтатусСообщения.Важное );
			Отказ = Истина;
		КонецЕсли;	
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		Движения.ЗаказыПоставщикамСезонные.Записывать = Истина;
		Движения.ЗаказыПоставщикамСезонные.Очистить();
		Движения.ВзаиморасчетыСКонтрагентами.Записывать = Истина;
		Движения.ВзаиморасчетыСКонтрагентами.Очистить();
		
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.ЗаказыПоставщикамСезонные.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.ЗаказПоставщикуСезонный = ЗаказПоставщикуСезонный;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Количество = -ТекСтрокаТовары.Количество;
			Если ЗаказПоставщикуСезонный.Дата >= Дата("20170101000000") Тогда
				Движение.Подразделение = ЗаказПоставщикуСезонный.Подразделение;
				Движение.ВЭД = ЗаказПоставщикуСезонный.Подразделение.ВЭД;
			КонецЕсли;
			Движение.Дата = Дата;
		КонецЦикла;
		Движения.Записать();
	КонецЕсли;
	

	
	МаксПредоплата = яштПоставщики.РассчитатьСуммуМаксимальнойОплаты(ЗаказПоставщикуСезонный.ЗаказДубль, Новый Граница(МоментВремени(), ВидГраницы.Включая));
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаОстаток,
	|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	|			&Дата,
	|			ДоговорКонтрагента = &Договор
	|				И Сделка = &Сделка) КАК ВзаиморасчетыСКонтрагентамиОстатки";	
	
	Запрос.УстановитьПараметр("Дата", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Договор",ЗаказПоставщикуСезонный.ЗаказДубль.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Сделка", ЗаказПоставщикуСезонный.ЗаказДубль);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	текпредоплата = 0;
	Если Выборка.Следующий() Тогда
		ТекПредоплата = Выборка.СуммаОстаток;
		ТекПредоплатаУпр = Выборка.СуммаУпрОстаток;
		
		ТекКурс = Выборка.СуммаУпрОстаток/?(Выборка.СуммаОстаток=0,1,Выборка.СуммаОстаток);
		
	конецЕсли;
	Списать = ТекПредоплата-МаксПредоплата.НевыполненоОстаток*?(ЗаказПоставщикуСезонный.ПроцентПредоплаты=0,0.2,ЗаказПоставщикуСезонный.ПроцентПредоплаты/100);
	Если Списать> 0 Тогда
		НаборДвижений = Движения.ВзаиморасчетыСКонтрагентами;
		ТаблицаДвижений = НаборДвижений.Выгрузить();
		ТаблицаДвижений.Очистить();
		//Если МаксПредоплата = 0 Тогда //спишем все, что бы не зависали копейки
		//	СтрокаДвижений = ТаблицаДвижений.Добавить();
		//	СтрокаДвижений.ДоговорКонтрагента  = ЗаказпоставщикуСезонный.ЗаказДубль.Договорконтрагента;
		//	СтрокаДвижений.Сделка              = ЗаказпоставщикуСезонный.ЗаказДубль;
		//	СтрокаДвижений.СуммаВзаиморасчетов = -ТекПредоплата;
		//	СтрокаДвижений.СуммаУпр            = -ТекПредоплатаУпр;
		//	
		//	СтрокаДвижений = ТаблицаДвижений.Добавить();
		//	СтрокаДвижений.ДоговорКонтрагента  = ЗаказпоставщикуСезонный.ЗаказДубль.Договорконтрагента;
		//	СтрокаДвижений.Сделка              = неопределено;
		//	СтрокаДвижений.СуммаВзаиморасчетов = ТекПредоплата;
		//	СтрокаДвижений.СуммаУпр            = ТекПредоплатаУпр;
		//	
		//иначе
			СтрокаДвижений = ТаблицаДвижений.Добавить();
			СтрокаДвижений.ДоговорКонтрагента  = ЗаказпоставщикуСезонный.ЗаказДубль.Договорконтрагента;
			СтрокаДвижений.Сделка              = ЗаказпоставщикуСезонный.ЗаказДубль;
			СтрокаДвижений.СуммаВзаиморасчетов = -Списать;
			СтрокаДвижений.СуммаУпр            = -Списать*ТекКурс;
			
			СтрокаДвижений = ТаблицаДвижений.Добавить();
			СтрокаДвижений.ДоговорКонтрагента  = ЗаказпоставщикуСезонный.ЗаказДубль.Договорконтрагента;
			СтрокаДвижений.Сделка              = неопределено;
			СтрокаДвижений.СуммаВзаиморасчетов = Списать;
			СтрокаДвижений.СуммаУпр            = Списать*ТекКурс;
		//конецЕсли;		  
		
		НаборДвижений.мПериод            = дата;
		НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;
		Движения.ВзаиморасчетыСКонтрагентами.ВыполнитьПриход();
	конецЕсли;
	
	
	Движения.ПениИШтрафыПоставщикам.Записывать = Истина;
	Движения.ПениИШтрафыПоставщикам.Очистить();
	Если начислятьШтраф Тогда		  
		Для Каждого ТекСтрокаРасшифровка Из товары Цикл
			Если ТекСтрокаРасшифровка.Количество>ТекСтрокаРасшифровка.РазрешенныйНедогруз тогда
				Движение = Движения.ПениИШтрафыПоставщикам.Добавить();
				Движение.Период = Дата;
				Движение.Контрагент =ЗаказПоставщикуСезонный.Контрагент;
				Движение.ЗаказПоставщикуСезонный = ЗаказПоставщикуСезонный;
				Движение.Номенклатура = ТекСтрокаРасшифровка.Номенклатура;
				Движение.Количество = ТекСтрокаРасшифровка.Количество-ТекСтрокаРасшифровка.РазрешенныйНедогруз;
				Движение.Штраф = (ТекСтрокаРасшифровка.Количество-ТекСтрокаРасшифровка.РазрешенныйНедогруз)*ТекСтрокаРасшифровка.РазмерШтрафа/100;
			конецЕсли;
		КонецЦикла;
	конецЕсли;	
	 
КонецПроцедуры
