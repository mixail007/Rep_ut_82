Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт
	
	ВыполнитьДвижениеПоРегистру(ЭтотОбъект);

КонецПроцедуры // ВыполнитьДвижения()



//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ
// 

// Обработчик события "ПередЗаписью".
// Проверяет возможность изменения записей регистра.
// Проверяет заполнение корреспонденции.
// Замещает пустные значения субконто составного типа значением Неопределено.
//
Процедура ПередЗаписью(Отказ, Замещение)
		
	ПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Количество()>0 Тогда
	    Заголовок = СокрЛП(ЭтотОбъект.Отбор.Регистратор.Значение);
	Иначе
		Возврат;
	КонецЕсли; 
	
	Для Каждого Проводка Из ЭтотОбъект Цикл
		
		Если ЗначениеНеЗаполнено(Проводка.СчетДт) И НЕ Проводка.СчетКт.Забалансовый Тогда
			СообщитьОбОшибке("Проводка № "+(Проводка.НомерСтроки+1) +" <"+Проводка.Содержание+">: не заполнен счет дебета.",Отказ,Заголовок);
		КонецЕсли;
		
		Если ЗначениеНеЗаполнено(Проводка.СчетКт) И НЕ Проводка.СчетДт.Забалансовый Тогда
			СообщитьОбОшибке("Проводка № "+(Проводка.НомерСтроки+1) +" <"+Проводка.Содержание+">: не заполнен счет кредита.",Отказ,Заголовок);
		КонецЕсли;
		
		// Приведение пустых значений субконто составного типа.
		Для Каждого Субконто Из Проводка.СубконтоДт Цикл
			Если Субконто.Ключ.ТипЗначения.Типы().Количество() > 1
			   И ЗначениеНеЗаполнено(Субконто.Значение) 
			   И НЕ (Субконто.Значение = Неопределено) Тогда
				Проводка.СубконтоДт.Вставить(Субконто.Ключ, Неопределено);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Субконто Из Проводка.СубконтоКт Цикл
			Если Субконто.Ключ.ТипЗначения.Типы().Количество() > 1
			   И ЗначениеНеЗаполнено(Субконто.Значение) 
			   И НЕ (Субконто.Значение = Неопределено) Тогда
				Проводка.СубконтоКт.Вставить(Субконто.Ключ, Неопределено);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры // ПередЗаписью()

