Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.ИмяРегистра = "ДенежныеСредства";
	ОбщийОтчет.НП = Новый НастройкаПериода;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	
	ОписаниеТиповСтрока = ПолучитьОписаниеТиповСтроки(100);

	ОбщийОтчет.мТаблицаПоказатели  = Новый ТаблицаЗначений;
	ОбщийОтчет.мТаблицаПоказатели.Колонки.Добавить("ИмяПоля", ОписаниеТиповСтрока);
	ОбщийОтчет.мТаблицаПоказатели.Колонки.Добавить("ПредставлениеПоля", ОписаниеТиповСтрока);
	ОбщийОтчет.мТаблицаПоказатели.Колонки.Добавить("ФорматнаяСтрока", ОписаниеТиповСтрока);
	
	ОбщийОтчет.ЗаполнитьПоказатели("ТекущийОстатокВВалютеДенСредств", "Остаток в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	ОбщийОтчет.ЗаполнитьПоказатели("ТекущийОстатокВУпрВалюте", "Остаток в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаКСписаниюВВалютеДенСредств", "К списанию в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаКСписаниюВУпрВалюте", "К списанию в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаКПолучениюВВалютеДенСредств", "К получению в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаКПолучениюВУпрВалюте", "К получению в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаВРезервеВВалютеДенСредств", "В резерве в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаВРезервеВУпрВалюте", "В резерве в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаСвободныйОстатокВВалютеДенСредств", "Свободный остаток в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	ОбщийОтчет.ЗаполнитьПоказатели("СуммаСвободныйОстатокВУпрВалюте", "Свободный остаток в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");

	ОбщийОтчет.мРежимВводаПериода = 1;
	ОбщийОтчет.мНазваниеОтчета = "Анализ доступности денежных средств";
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("БанковскийСчетКасса");
	МассивОтбора.Добавить("ВидДенежныхСредств");
	
	//ЗаполнитьНачальныеНастройкиПоМакету(ПолучитьМакет("ПараметрыОтчетовОжидаемыеВходящиеПлатежиКомпании"), СтруктураПредставлениеПолей, МассивОтбора, ОбщийОтчет, "СписокКроссТаблица");
	ОбщийОтчет.ПостроительОтчета.Текст = 
	"
	|ВЫБРАТЬ
	|	ВидДенежныхСредств,
	|	БанковскийСчетКасса,
	|	БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаСчетаКассы,
	|	ТекущийОстатокВВалютеДенСредств,
	|	ТекущийОстатокВУпрВалюте,
	|	СуммаКСписаниюВВалютеДенСредств,
	|	СуммаКСписаниюВУпрВалюте,
	|	СуммаКПолучениюВВалютеДенСредств,
	|	СуммаКПолучениюВУпрВалюте,
	|	СуммаВРезервеВВалютеДенСредств,
	|	СуммаВРезервеВУпрВалюте,
	|	(ТекущийОстатокВУпрВалюте - СуммаКСписаниюВУпрВалюте + СуммаКПолучениюВУпрВалюте - СуммаВРезервеВУпрВалюте) КАК СуммаСвободныйОстатокВУпрВалюте,
	|	(ТекущийОстатокВВалютеДенСредств - СуммаКСписаниюВВалютеДенСредств + СуммаКПолучениюВВалютеДенСредств - СуммаВРезервеВВалютеДенСредств) КАК СуммаСвободныйОстатокВВалютеДенСредств
	|{
	|ВЫБРАТЬ
	|	БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаСчетаКассы,
	|	БанковскийСчетКасса.*}
	|ИЗ
	|(ВЫБРАТЬ
	|	ДенежныеСредстваОстатки.ВидДенежныхСредств,
	|	ДенежныеСредстваОстатки.БанковскийСчетКасса,
	|	ДенежныеСредстваОстатки.СуммаОстаток КАК ТекущийОстатокВВалютеДенСредств,
	|	ДенежныеСредстваОстатки.СуммаУпрОстаток КАК ТекущийОстатокВУпрВалюте,
	|	0 КАК СуммаКСписаниюВВалютеДенСредств,
	|	0 КАК СуммаКСписаниюВУпрВалюте,
	|	0 КАК СуммаКПолучениюВВалютеДенСредств,
	|	0 КАК СуммаКПолучениюВУпрВалюте,
	|	0 КАК СуммаВРезервеВВалютеДенСредств,
	|	0 КАК СуммаВРезервеВУпрВалюте
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки(&ДатаКон, ) КАК ДенежныеСредстваОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредстваКСписаниюОстатки.ВидДенежныхСредств,
	|	ДенежныеСредстваКСписаниюОстатки.БанковскийСчетКасса,
	|	0,
	|	0,
	|	ДенежныеСредстваКСписаниюОстатки.СуммаОстаток,
	|	ДенежныеСредстваКСписаниюОстатки.СуммаОстаток*КурсыВалют.Курс/КурсыВалют.Кратность/КурсУпрВалюты.Курс*КурсУпрВалюты.Кратность,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКСписанию.Остатки(&ДатаКон) КАК ДенежныеСредстваКСписаниюОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон) КАК КурсыВалют
	|			ПО КурсыВалют.Валюта = ДенежныеСредстваКСписаниюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств
	|		, РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон, Валюта = &ВалютаУправленческогоУчета) КАК КурсУпрВалюты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредстваКПолучениюОстатки.ВидДенежныхСредств,
	|	ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ДенежныеСредстваКПолучениюОстатки.СуммаОстаток,
	|	ДенежныеСредстваКПолучениюОстатки.СуммаОстаток*КурсыВалют.Курс/КурсыВалют.Кратность/КурсУпрВалюты.Курс*КурсУпрВалюты.Кратность,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКПолучению.Остатки(&ДатаКон) КАК ДенежныеСредстваКПолучениюОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон) КАК КурсыВалют
	|			ПО КурсыВалют.Валюта = ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств
	|		, РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон, Валюта = &ВалютаУправленческогоУчета) КАК КурсУпрВалюты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредстваВРезервеОстатки.ВидДенежныхСредств,
	|	ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ДенежныеСредстваВРезервеОстатки.СуммаОстаток,
	|	ДенежныеСредстваВРезервеОстатки.СуммаОстаток*КурсыВалют.Курс/КурсыВалют.Кратность/КурсУпрВалюты.Курс*КурсУпрВалюты.Кратность
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваВРезерве.Остатки(&ДатаКон) КАК ДенежныеСредстваВРезервеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон) КАК КурсыВалют
	|			ПО КурсыВалют.Валюта = ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств
	|		, РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон, Валюта = &ВалютаУправленческогоУчета) КАК КурсУпрВалюты
	|) КАК СостояниеДенежныхСредств
	|
	|{
	|ГДЕ
	|	БанковскийСчетКасса,
	|	ВидДенежныхСредств КАК ВидДенежныхСредств
	|}
	|ИТОГИ
	|	СУММА(ТекущийОстатокВВалютеДенСредств),
	|	СУММА(ТекущийОстатокВУпрВалюте),
	|	СУММА(СуммаКСписаниюВВалютеДенСредств),
	|	СУММА(СуммаКСписаниюВУпрВалюте),
	|	СУММА(СуммаКПолучениюВВалютеДенСредств),
	|	СУММА(СуммаКПолучениюВУпрВалюте),
	|	СУММА(СуммаВРезервеВВалютеДенСредств),
	|	СУММА(СуммаВРезервеВУпрВалюте),
	|	СУММА(СуммаСвободныйОстатокВВалютеДенСредств),
	|	СУММА(СуммаСвободныйОстатокВУпрВалюте)
	|ПО
	|	ОБЩИЕ,
	|	ВалютаСчетаКассы, 
	|	БанковскийСчетКасса
	|{
	|ИТОГИ ПО
	|	ВалютаСчетаКассы, 
	|	БанковскийСчетКасса.*
	|}
	|";
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("БанковскийСчетКасса", "Банковский счет/касса");
	СтруктураПредставлениеПолей.Вставить("ВидДенежныхСредств", "Вид денежных средств");
	СтруктураПредставлениеПолей.Вставить("ВалютаСчетаКассы", "Валюта счета/кассы");

	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ОбщийОтчет.ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ОбщийОтчет.ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ОбщийОтчет.ПостроительОтчета);

	// Структура, оперделяющая связь показателей и измерений: выше этих измерений итог по числовому показателю
	// может не иметь смысла из-за суммирования данных в разных единицах измерения или валютах
	// Эти итоги
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений = Новый Структура;

	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ТекущийОстатокВВалютеДенСредств", Новый Структура("БанковскийСчетКасса, ВалютаСчетКассы"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СуммаКСписаниюВВалютеДенСредств", Новый Структура("БанковскийСчетКасса, ВалютаСчетКассы"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СуммаКПолучениюВВалютеДенСредств", Новый Структура("БанковскийСчетКасса, ВалютаСчетКассы"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СуммаВРезервеВВалютеДенСредств", Новый Структура("БанковскийСчетКасса, ВалютаСчетКассы"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СуммаСвободныйОстатокВВалютеДенСредств", Новый Структура("БанковскийСчетКасса, ВалютаСчетКассы"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ТекущийОстатокВУпрВалюте", Новый Структура);
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СуммаКСписаниюВУпрВалюте", Новый Структура);
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СуммаВРезервеВУпрВалюте", Новый Структура);
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СуммаКПолучениюВУпрВалюте", Новый Структура);
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СуммаСвободныйОстатокВУпрВалюте", Новый Структура);
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПроцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		СтандартнаяОбработка=Ложь;
		
		// Расшифровка колонки находится в заголовке колонки
		ТекстКолонки = ПолеТД.Область(ВысотаЗаголовка+2+ОбщийОтчет.ПостроительОтчета.ИзмеренияКолонки.Количество(), ПолеТД.ТекущаяОбласть.Лево).Текст;
		
		ОтчетРасшифровка=Отчеты.ОтчетСписокКроссТаблица.Создать();
		ОтчетРасшифровка.мРежимВводаПериода=1;
		ОтчетРасшифровка.ДатаКон=ОбщийОтчет.ДатаКон;
		ОтчетРасшифровка.мВыбиратьИмяРегистра=Ложь;
		Если Найти(ТекстКолонки,"Остаток")>0 Тогда
			ОтчетРасшифровка.ИмяРегистра="ДенежныеСредства";
		ИначеЕсли Найти(ТекстКолонки,"К списанию")>0 Тогда
			ОтчетРасшифровка.ИмяРегистра="ДенежныеСредстваКСписанию";
		ИначеЕсли Найти(ТекстКолонки,"К получению")>0 Тогда
			ОтчетРасшифровка.ИмяРегистра="ДенежныеСредстваКПолучению";
		ИначеЕсли Найти(ТекстКолонки,"В резерве")>0 Тогда
			ОтчетРасшифровка.ИмяРегистра="ДенежныеСредстваВРезерве";
		Иначе
			Возврат;
		КонецЕсли;
		
		ОтчетРасшифровка.ЗаполнитьНачальныеНастройки();
		
		Для Каждого Элемент Из РасшифровкаСтроки Цикл
			
			Если Элемент.Ключ="БанковскийСчетКасса" Тогда
				
				НовыйОтбор=ОтчетРасшифровка.ПостроительОтчета.Отбор.БанковскийСчетКасса;
				НовыйОтбор.ВидСравнения=?(Элемент.Значение.ЭтоГруппа,ВидСравнения.ВИерархии,ВидСравнения.Равно);
				НовыйОтбор.Значение=Элемент.Значение;
				НовыйОтбор.Использование=Истина;
				
			ИначеЕсли Элемент.Ключ="ВалютаСчетаКассы" Тогда
				
				НовыйОтбор=ОтчетРасшифровка.ПостроительОтчета.Отбор.Добавить("БанковскийСчетКасса.ВалютаДенежныхСредств","ВалютаСчетаКассы","Валюта счета, кассы");
				НовыйОтбор.ВидСравнения=ВидСравнения.Равно;
				НовыйОтбор.Значение=Элемент.Значение;
				НовыйОтбор.Использование=Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ФормаОтчета=ОтчетРасшифровка.ПолучитьФорму();
		ФормаОтчета.ОбновитьОтчет();
		ФормаОтчета.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

