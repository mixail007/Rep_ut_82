
Перем мСтруктураСвязиЭлементовСДанными Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик нажатия кнопки ОК.
//
Процедура ОсновныеДействияФормыОК(Кнопка)

	Закрыть(Истина);

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "ИспользоватьСвойстваИКатегории".
//
Процедура ИспользоватьСвойстваИКатегорииПриИзменении(Элемент)

	// Запоминаем текущую настройку
	Настройки = ОбщийОтчет.ПостроительОтчета.ПолучитьНастройки();

	// Перезаполнение объекта (с новым текстом запроса)
	ЗаполнитьНачальныеНастройки();

	Для Каждого Элемент Из мСтруктураСвязиЭлементовСДанными Цикл
		ВладелецФормы.ЭлементыФормы[Элемент.Ключ].Данные = Элемент.Значение;
	КонецЦикла;

	// Восстанавливаем запомненную настройку
	ОбщийОтчет.ПостроительОтчета.УстановитьНастройки(Настройки);

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля "Значение" табличной части "Отбор".
//
Процедура ОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	// Отборы по свойствам и категориям должны быть обработаны специальным образом
	// Они определяются по представлению 
	Если Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "категории") Тогда

		// Ограничение списка категорий
		Назначение = ОбщийОтчет.мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборКатегории(Элемент, Назначение, ЭтаФорма, СтандартнаяОбработка);

	ИначеЕсли Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "св-во") Тогда

		Свойство = ОбщийОтчет.мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборСвойства(Элемент, Свойство, ЭтаФорма, СтандартнаяОбработка);

	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "Удаление строки" табличной части "Отбор".
//
Процедура ОтборПередУдалением(Элемент, Отказ)
	Отказ = НЕ ПустаяСтрока(Элемент.ТекущаяСтрока.Имя);
КонецПроцедуры

// Процедура - обработчик события "Обработка выбора" колонки "Имя" грида "Отбор"
// не дает выбирать другие отборы вместо тех, которые уже связаны с реквизитами основной формы отчета
//
Процедура ОтборИмяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если Не ПустаяСтрока(ЭлементыФормы.Отбор.ТекущаяСтрока.Имя) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли; 

КонецПроцедуры

// Процедура - обработчик события "Очистка" колонки "Имя" грида "Отбор"
//не дает очищать имена отборов, связанных с реквизитами основной формы отчета
Процедура ОтборИмяОчистка(Элемент, СтандартнаяОбработка)

	Если Не ПустаяСтрока(ЭлементыФормы.Отбор.ТекущаяСтрока.Имя) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли; 

КонецПроцедуры

// Процедура - обработчик события "При изменении" элемента управления "Интервалы".
//
Процедура ЛинейкаПриИзменении(Элемент)
	ЗаполнитьПараметрыНастройкиИнтервалов(Истина);
КонецПроцедуры

// Процедура - обработчик события "Выделить все" командной панели элемента управления "СписокИнтервалов".
//
Процедура КоманднаяПанельНастройкиИнтерваловВыделитьВсе(Кнопка)
	ЗаполнитьПараметрыНастройкиИнтервалов(Истина);
КонецПроцедуры

Процедура КоманднаяПанельНастройкиИнтерваловСнятьУВсех(Кнопка)
	ЗаполнитьПараметрыНастройкиИнтервалов(Ложь);
КонецПроцедуры

Процедура КоманднаяПанельПоказателиВыделитьВсе(Кнопка)
	
	Для каждого Строка Из ОбщийОтчет.Показатели Цикл
		Строка.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельПоказателиСнятьВсе(Кнопка)
	
	Для каждого Строка Из  ОбщийОтчет.Показатели Цикл
		Строка.Использование = Ложь;
	КонецЦикла;
	
КонецПроцедуры








