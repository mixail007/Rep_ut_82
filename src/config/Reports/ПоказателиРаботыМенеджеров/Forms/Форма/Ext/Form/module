
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет данными ПолеТабличногоДокумента отчета
//
Процедура Сформировать(Кнопка)

	СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);
	
КонецПроцедуры

// Процедура изменяет доступность элемента формы РаскрашиватьГруппировки.
//
Процедура ДоступностьРаскрашиватьГруппировки()

	ЭлементыФормы.РаскрашиватьГруппировки.Доступность = ПоказыватьПокупателей;

КонецПроцедуры

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	Если ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ОтборМенеджер,, "ОбработкаОбъект.ОтборМенеджер");
	
	ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	УправлениеПометкамиКнопокКоманднойПанели();
	ДоступностьРаскрашиватьГруппировки();
	
КонецПроцедуры

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если НЕ ИспользоватьСтандартныеНастройки Тогда
	
		ДатаНачала = НачалоДня(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов"));
		ДатаКонца = КонецДня(ТекущаяДата());
		Если ДатаНачала > ДатаКонца Тогда
			ДатаНачала = ДатаКонца;
		КонецЕсли; 

		ПоказыватьЗаголовок = Истина;

	КонецЕсли; 

	НП.УстановитьПериод(ДатаНачала, ДатаКонца);
	
КонецПроцедуры

// Обработчик события ПередСохранениемЗначений формы.
//
Процедура ПередСохранениемЗначений(Отказ)

	СохраненныеНастройки = Новый Структура;

	СохраненныеНастройки.Вставить("ДатаНачала"             , ДатаНачала);
	СохраненныеНастройки.Вставить("ДатаКонца"              , ДатаКонца);
	СохраненныеНастройки.Вставить("НастройкиДиаграммы"     , НастройкиДиаграммы);
	СохраненныеНастройки.Вставить("РаскрашиватьГруппировки", РаскрашиватьГруппировки);
	СохраненныеНастройки.Вставить("ПоказыватьПокупателей"  , ПоказыватьПокупателей);
	СохраненныеНастройки.Вставить("ПоказателиОтчета"       , ПоказателиОтчета.Выгрузить());

	СохраненныеНастройки.Вставить("СтруктураОтбора"        , ПолучитьСтруктуруОтбора(ОтборМенеджер));
	
КонецПроцедуры

// Обработчик события ПослеВосстановленияЗначений формы.
//
Процедура ПослеВосстановленияЗначений()

	Перем ТаблицаПоказателейОтчета;
	Перем СтруктураОтбора;

	Если НЕ ИспользоватьСтандартныеНастройки И ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда
	
		СохраненныеНастройки.Свойство("ДатаНачала"             , ДатаНачала);
		СохраненныеНастройки.Свойство("ДатаКонца"              , ДатаКонца);
		СохраненныеНастройки.Свойство("НастройкиДиаграммы"     , НастройкиДиаграммы);
		СохраненныеНастройки.Свойство("РаскрашиватьГруппировки", РаскрашиватьГруппировки);
		СохраненныеНастройки.Свойство("ПоказыватьПокупателей"  , ПоказыватьПокупателей);
		
		СохраненныеНастройки.Свойство("ПоказателиОтчета"       , ТаблицаПоказателейОтчета);
		ПоказателиОтчета.Загрузить(ТаблицаПоказателейОтчета);

		СохраненныеНастройки.Свойство("СтруктураОтбора", СтруктураОтбора);
		ЗаполнитьОтборИзСтруктуры(ОтборМенеджер, СтруктураОтбора);
	
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события элемента КоманднаяПанельФормы.Настройка.
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)

	ФормаДополнительно = ПолучитьФорму("ФормаДополнительно", ЭтаФорма);
	РезультатГруппировок = ФормаДополнительно.ОткрытьМодально();

	Если РезультатГруппировок <> Неопределено И РезультатГруппировок Тогда

		СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);

	КонецЕсли;
	
	ДоступностьРаскрашиватьГруппировки();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанель.Заголовок.
//
Процедура КоманднаяПанельФормыЗаголовок(Кнопка)

	ПоказыватьЗаголовок = НЕ ПоказыватьЗаголовок;
	ИзменитьВидимостьЗаголовка(ЭлементыФормы.ПолеТабличногоДокумента);
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Отбор.
//
Процедура КоманднаяПанельФормыОтбор(Кнопка)

	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Диаграмма.
//
Процедура КоманднаяПанельФормыДиаграмма(Кнопка)
	
	Если ТипЗнч(мСтруктураТаблицДанныхДиаграммы) <> Тип("Структура") Тогда
		Предупреждение("Отсутствуют данные в отчете. Формирование диаграммы невозможно.");
		Возврат;
	КонецЕсли; 
	
	ФормаНастройкиДиаграммы = ЭтотОбъект.ПолучитьФорму("ФормаНастройкиДиаграммы", ЭтаФорма);
	
	ФормаНастройкиДиаграммы.ОткрытьМодально();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		ДатаНачала = НП.ПолучитьДатуНачала();
		ДатаКонца = НП.ПолучитьДатуОкончания();

	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Обработчик события ПриИзменении элемента формы ПоказыватьПокупателей.
//
Процедура ПоказыватьПокупателейПриИзменении(Элемент)
	
	ДоступностьРаскрашиватьГруппировки();
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияМенеджер.
//
Процедура ПолеВидаСравненияМенеджерПриИзменении(Элемент)

	ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиМенеджер.
//
Процедура ПолеНастройкиМенеджерПриИзменении(Элемент)
	
	ПолеНастройкиПриИзменении(Элемент, ОтборМенеджер);
	
КонецПроцедуры


