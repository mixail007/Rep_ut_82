
// Обработчик события Нажатие элемента ОсновныеДействияФормы.ОК.
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ИмяПоказателя = "";
	ПредставлениеПоказателя = "";
	
	Для каждого СтрокаТаблицы Из ПоказателиДиаграммы Цикл
		Если СтрокаТаблицы.Использование Тогда
			ИмяПоказателя = СтрокаТаблицы.Имя;
			ПредставлениеПоказателя = СтрокаТаблицы.Представление;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Если ПустаяСтрока(ИмяПоказателя) Тогда
		Предупреждение("Необходимо выбрать показатель.");
		Возврат;
	КонецЕсли; 
	
	ТаблицаДанныхДиаграммы = Новый ТаблицаЗначений;
	
	Если ОбъектАнализа = "Контрагент" Тогда
		ТаблицаДанныхДиаграммы.Колонки.Добавить("Объект", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ИначеЕсли ОбъектАнализа = "Номенклатура" Тогда
		ТаблицаДанныхДиаграммы.Колонки.Добавить("Объект", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Иначе
		ТаблицаДанныхДиаграммы.Колонки.Добавить("Объект", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	КонецЕсли;
	
	КопияТаблицы = ТаблицаДиаграммы.Скопировать();
	КопияТаблицы.Свернуть("Класс");
	КопияТаблицы.Сортировать("Класс ВОЗР");
	
	Для каждого Класс Из КопияТаблицы Цикл
		Если Класс.Класс = Перечисления.ABCКлассификация.AКласс Тогда
			Колонка = ТаблицаДанныхДиаграммы.Колонки.Добавить("AКласс", Новый ОписаниеТипов("Число"));
			Колонка.Заголовок = "А-класс";
		ИначеЕсли Класс.Класс = Перечисления.ABCКлассификация.BКласс Тогда
			Колонка = ТаблицаДанныхДиаграммы.Колонки.Добавить("BКласс", Новый ОписаниеТипов("Число"));
			Колонка.Заголовок = "В-класс";
		Иначе
			Колонка = ТаблицаДанныхДиаграммы.Колонки.Добавить("CКласс", Новый ОписаниеТипов("Число"));
			Колонка.Заголовок = "С-класс";
		КонецЕсли; 
	КонецЦикла;
	
	ТаблицаДиаграммы.Сортировать("Объект ВОЗР");
	
	Для каждого СтрокаТаблицы Из ТаблицаДиаграммы Цикл
		
		НайденнаяСтрокаТаблицы = ТаблицаДанныхДиаграммы.Найти(СтрокаТаблицы.Объект, "Объект");
		Если НайденнаяСтрокаТаблицы = Неопределено Тогда
			НайденнаяСтрокаТаблицы = ТаблицаДанныхДиаграммы.Добавить();
			НайденнаяСтрокаТаблицы.Объект = СтрокаТаблицы.Объект;
		КонецЕсли; 
		
		Если СтрокаТаблицы.Класс = Перечисления.ABCКлассификация.AКласс Тогда
			ИмяКласса = "AКласс";
		ИначеЕсли СтрокаТаблицы.Класс = Перечисления.ABCКлассификация.BКласс Тогда
			ИмяКласса = "BКласс";
		Иначе
			ИмяКласса = "CКласс";
		КонецЕсли; 
		НайденнаяСтрокаТаблицы[ИмяКласса] = НайденнаяСтрокаТаблицы[ИмяКласса] + СтрокаТаблицы[ИмяПоказателя];
		
	КонецЦикла; 
	
	ОтчетДиаграмма = Отчеты.Диаграмма.Создать();
	ОтчетДиаграмма.ТаблицаИсходныхДанных = ТаблицаДанныхДиаграммы;
	
	ОтчетДиаграмма.ИмяДиаграммы = "АВС-анализ продаж, " + СформироватьСтрокуПериода() + ", " + ПредставлениеПоказателя;
	ОтчетДиаграмма.НастройкиДиаграммы = НастройкиДиаграммы;
	
	ФормаОтчета = ОтчетДиаграмма.ПолучитьФорму(, Этаформа.ВладелецФормы);
	
	ОтчетДиаграмма.ПостроитьДиаграмму(ФормаОтчета.ЭлементыФормы.Диаграмма);
	
	ЭтаФорма.Закрыть();
	
	ФормаОтчета.Открыть();
	
КонецПроцедуры

// Обработчик события ПриОткрытии Формы.
//
Процедура ПриОткрытии()
	
	СтрокаПоказателя = ПоказателиДиаграммы.Найти(ПараметрАнализа, "Имя");
	
	Если СтрокаПоказателя <> Неопределено Тогда
		СтрокаПоказателя.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПриИзмененииФлажка элемента формы ПоказателиДиаграммы.
//
Процедура ПоказателиДиаграммыПриИзмененииФлажка(Элемент, Колонка)
	
	Для каждого СтрокаТаблицы Из ПоказателиДиаграммы Цикл
		Если СтрокаТаблицы <> ЭлементыФормы.ПоказателиДиаграммы.ТекущаяСтрока Тогда
			СтрокаТаблицы.Использование = Ложь;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента Формы ПоказателиДиаграммы.
//
Процедура ПоказателиДиаграммыПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента Формы ПоказателиДиаграммы.
//
Процедура ПоказателиДиаграммыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

ПоказателиДиаграммы.Колонки.Добавить("Имя" , Новый ОписаниеТипов("Строка"));
