
Перем ДокументРезультат;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура изменяет пометку кнопки транспонирования диаграммы.
//
Процедура СостояниеКнопкиТранспонирования() Экспорт

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ТранспонироватьДиаграмму.Пометка           = НЕ СерииВСтроках;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки[0].Кнопки.ТранспонироватьДиаграмму.Пометка = НЕ СерииВСтроках;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ТаблицаИсходныхДанных.Количество() = 0 И ТаблицаИсходныхДанных.Колонки.Количество() = 0 Тогда
		ТекстВопроса = "Нет данных для построения диаграммы. Отчет используется в качестве расширения представления других отчетов.
					   |Для построения диаграммы можно воспользоваться отчетом ""Диаграмма универсальная"". Открыть универсальную диаграмму?";
		ОтветНаВопрос = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			Отчеты.ОтчетДиаграмма.ПолучитьФорму().Открыть();
		КонецЕсли; 
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.График                                       , "График");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ГрафикСОбластями                             , "График с областями");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ГрафикСОбластямиИНакоплением                 , "График с областями и накоплением");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.Круговая                                     , "Круговая");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.КруговаяОбъемная                             , "Круговая объемная");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.Гистограмма                                  , "Гистограмма");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ГистограммаОбъемная                          , "Гистограмма объемная");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ГистограммаСНакоплением                      , "Гистограмма с накоплением");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ГистограммаСНакоплениемОбъемная              , "Гистограмма с накоплением объемная");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ГистограммаГоризонтальная                    , "Гистограмма горизонтальная");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ГистограммаСНакоплениемГоризонтальная        , "Гистограмма горизонтальная с накоплением");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ГистограммаГоризонтальнаяОбъемная            , "Гистограмма горизонтальная объемная");
	ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ГистограммаСНакоплениемГоризонтальнаяОбъемная, "Гистограмма горизонтальная объемная с накоплением");
	
	Если ТаблицаИсходныхДанных.Колонки.Количество() > 2 Тогда
		ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.Изометрическая              , "Изометрическая");
		ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ИзометрическаяПирамида      , "Изометрическая пирамида");
		ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ИзометрическаяНепрерывная   , "Изометрическая непрерывная");
		ЭлементыФормы.ТекущийТипДиаграммы.СписокВыбора.Добавить(ТипДиаграммы.ИзометрическаяЛента         , "Изометрическая лента");
	КонецЕсли;
	
	ЗаполнитьНастройкиДиаграммы(ЭлементыФормы.Диаграмма);
	
	ЗаполнитьЗначенияКонтролов(ЭлементыФормы.Диаграмма);
	
	СостояниеКнопкиТранспонирования();
	
КонецПроцедуры

// Обработчик события ПриЗакрытии формы.
//
Процедура ПриЗакрытии()
	
	НастройкиДиаграммы = Новый Структура;
	
	НастройкиДиаграммы.Вставить("ВидПодписей"            , ВидПодписиКруговойДиаграммы);
	НастройкиДиаграммы.Вставить("МаксимумСерий"          , ОграничениеСерий);
	НастройкиДиаграммы.Вставить("МаксимумСерийКоличество", КоличествоОграничения);
	НастройкиДиаграммы.Вставить("МаксимумСерийПроцент"   , КоличествоОграничения);
	НастройкиДиаграммы.Вставить("ТипДиаграммы"           , ТекущийТипДиаграммы);
	НастройкиДиаграммы.Вставить("ОтображатьЛегенду"      , Легенда);
	НастройкиДиаграммы.Вставить("РежимПробелов"          , РежимПробелов);
	НастройкиДиаграммы.Вставить("БазовоеЗначение"        , БазовоеЗначение);
	НастройкиДиаграммы.Вставить("АвтоРаздвижениеСерий"   , АвтоматическоеРаздвижениеСекторов);
	НастройкиДиаграммы.Вставить("Окантовка"              , Окантовка);
	НастройкиДиаграммы.Вставить("Свет"                   , Свет);
	НастройкиДиаграммы.Вставить("Градиент"               , Градиент);
	НастройкиДиаграммы.Вставить("Ориентация"             , Ориентация);
	НастройкиДиаграммы.Вставить("СерииВСтроках"          , СерииВСтроках);
	НастройкиДиаграммы.Вставить("ВертикальныеМетки"      , ВертикальныеМетки);
	
	Если ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("Форма") И ЕстьРеквизитОтчета("НастройкиДиаграммы", ЭтаФорма.ВладелецФормы.ЭтотОбъект.Метаданные()) Тогда
		ЭтаФорма.ВладелецФормы.ЭтотОбъект.НастройкиДиаграммы = НастройкиДиаграммы;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события Нажатие элемента формы КоманднаяПанельФормы.Сформировать.
//
Процедура КоманднаяПанельФормыСформировать(Элемент)
	
	ПостроитьДиаграмму(ЭлементыФормы.Диаграмма);
	
	ЗаполнитьЗначенияКонтролов(ЭлементыФормы.Диаграмма);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ТекущийТипДиаграммы.
//
Процедура ТекущийТипДиаграммыПриИзменении(Элемент)
	
	Если ТипЗнч(Элемент.Значение) = Тип("ТипДиаграммы") Тогда
		ЭлементыФормы.Диаграмма.ТипДиаграммы = Элемент.Значение;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельФормы.ТранспонироватьДиаграмму.
//
Процедура КоманднаяПанельФормыТранспонироватьДиаграмму(Кнопка)
	
	СерииВСтроках = НЕ СерииВСтроках;
	ЭлементыФормы.Диаграмма.СерииВСтроках = СерииВСтроках;
	
	СостояниеКнопкиТранспонирования();
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельФормы.Печать.
//
Процедура КоманднаяПанельФормыПечать(Кнопка)
	
	ДокументРезультат.Очистить();
	ДокументРезультат.Вывести(ПолучитьМакет("Макет"));

	ДиаграммаПечати = ДокументРезультат.Рисунки.Диаграмма.Объект;
	
	ПостроитьДиаграмму(ДиаграммаПечати);
	УстановитьСвойстваДиаграммы(ДиаграммаПечати);
	
	ДокументРезультат.Показать();
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы КоманднаяПанельФормы.Настройка.
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	ФормаНастройки = ЭтотОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма);
	ФормаНастройки.КонтролДиаграмма = ЭлементыФормы.Диаграмма;
	ФормаНастройки.ОткрытьМодально();
	
КонецПроцедуры

ДокументРезультат = Новый ТабличныйДокумент;
