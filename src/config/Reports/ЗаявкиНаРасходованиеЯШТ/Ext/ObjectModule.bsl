Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	МассивОтбора = Новый Массив;
	
Текст =
	"ВЫБРАТЬ
	|		Сумма КАК Сумма
	|{ ВЫБРАТЬ	ЗаявкаНаРасходование.Контрагент Контрагент,
	|	ДоговорКонтрагента.*,
	|	Сделка,
	|	ЗаявкаНаРасходование.*,
	|	ЗаявкаНаРасходование.Ответственный Ответственный,
	|	ЗаявкиНаРасходованиеСредств.Сумма КАК Сумма,
	|	НАЧАЛОПЕРИОДА(ЗаявкиНаРасходованиеСредств.ДатаРасхода,ДЕНЬ) КАК ДатаРасхода,
	|	НАЧАЛОПЕРИОДА(ЗаявкиНаРасходованиеСредств.ДатаРасхода,НЕДЕЛЯ) КАК НеделяДатыРасхода}
	|ИЗ
	|	РегистрНакопления.ЗаявкиНаРасходованиеСредств   ЗаявкиНаРасходованиеСредств
	|ГДЕ
	|	Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И Активность
	|	И ВидДвижения = &ВидДвиженияПриход
	|	Упорядочить по ЗаявкиНаРасходованиеСредств.ДатаРасхода
	| {ГДЕ ДоговорКонтрагента.*,ЗаявкаНаРасходование.*}
	|{ИТОГИ ПО
	|	ЗаявкаНаРасходование.Контрагент Контрагент,  ДоговорКонтрагента.*, ЗаявкаНаРасходование.*,ЗаявкаНаРасходование.Ответственный Ответственный,
	|НАЧАЛОПЕРИОДА(ЗаявкиНаРасходованиеСредств.ДатаРасхода,ДЕНЬ) ДатаРасхода,
	|НАЧАЛОПЕРИОДА(ЗаявкиНаРасходованиеСредств.ДатаРасхода,НЕДЕЛЯ) НеделяДатыРасхода}
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ
	|	Контрагент";

	СтруктураПредставлениеПолей = Новый Структура("
	|Контрагент,
	|ДоговорКонтрагента,
	|Сделка,
	|ЗаявкаНаРасходование,
	|ДатаРасхода,
	|НеделяДатыРасхода", 
	"Контрагент",
	"Договор контрагента",
	"Сделка",
	"Заявка",
	"Дата расхода",
	"Неделя расхода");
	
	
	ПостроительОтчета.Текст = Текст;
	МассивОтбора = Новый Массив;

	ПостроительОтчета.Параметры.Вставить("ВидДвиженияПриход", ВидДвиженияНакопления.Приход);
	
	ПостроительОтчета.ИзмеренияСтроки.Добавить("Контрагент");
	ПостроительОтчета.ИзмеренияКолонки.Добавить("ДатаРасхода");
	
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	//ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Истина;
	
	ОбщийОтчет.ЗаполнитьПоказатели("Сумма", "Сумма", Истина, "ЧЦ=15; ЧДЦ=2");


	ОбщийОтчет.мНазваниеОтчета = "Отчет по заявкам на расходование";
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Установим дату начала отчета
	Если ЗначениеНеЗаполнено(ОбщийОтчет.ДатаНач) Тогда
		Если Не ЗначениеНеЗаполнено(глТекущийПользователь) Тогда
			ОбщийОтчет.ДатаНач = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("РентабельностьПродаж", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ПроцентНаценки", Новый Структура("ТакогоИзмеренияНетВОтчете")); // Рентабельность не выводится в итогах по группировкам, только в детальных записях
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПРоцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "Продажи";