////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//  Заполняет реквизиты по диалогу
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьОбъектПоДиалогу()

	// Здесь должно быть расположено заполнение реквизитов
	// отчета по реквизитам формы, непосредственно не связанным
	// с реквизитами отчета (если таковые имеются)
	
КонецПроцедуры // ЗаполнитьОбъектПоДиалогу()

// Заполняет диалог по значениям реквизитов отчета
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьДиалогПоОбъекту()

	// Здесь должно быть расположено заполнение реквизитов формы
	// по реквизитам отчета, если они непосредственно не связаны
	// с реквизитами отчета (если таковые имеются)
	Если мВыбиратьИмяРегистра = Ложь Тогда
		ЭлементыФормы.ПанельРазделУчета.Свертка = РежимСверткиЭлементаУправления.Верх;
		
	Иначе
		ЭлементыФормы.ПанельРазделУчета.Свертка = РежимСверткиЭлементаУправления.Нет;
		
	КонецЕсли; 

	Если мВыбиратьИспользованиеСвойств = Ложь Тогда
		ЭлементыФормы.ПанельИспользоватьСвойства.Свертка = РежимСверткиЭлементаУправления.Верх;
		
	Иначе
		ЭлементыФормы.ПанельИспользоватьСвойства.Свертка = РежимСверткиЭлементаУправления.Нет;
		
	КонецЕсли; 
	
КонецПроцедуры // ЗаполнитьДиалогПоОбъекту()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "Перед открытием" формы отчета.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Заголовок = мНазваниеОтчета;

	ЗаполнитьДиалогПоОбъекту();

КонецПроцедуры // ПередОткрытием()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик изменения раздела учета.
//
Процедура ИмяРегистраПриИзменении(Элемент)

	Состояние("Заполнение по умолчанию");
	ЗаполнитьНачальныеНастройки();
	ЗаполнитьДиалогПоОбъекту();
	Оповестить("ИзмененоИмяРегистра",,ЭтаФорма);
	
	Заголовок = мНазваниеОтчета;
	
КонецПроцедуры // ПолеВыбораИмяРегистраПриИзменении()

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	Если НП.Редактировать() Тогда
		
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();
		
	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик нажатия кнопки ОК.
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Закрыть(Истина);
	
КонецПроцедуры // ОсновныеДействияФормыОК()

// Процедура - обработчик изменения флажка "Использовать свойства и категории".
//
Процедура ИспользоватьСвойстваИКатегорииПриИзменении(Элемент)

	// Запоминаем текущую настройку
	Настройки = ПостроительОтчета.ПолучитьНастройки(Истина, Истина, Истина, Истина);
	ТабПоказатели = Показатели.Выгрузить();

	// Перезаполнение объекта (с новым текстом запроса)
	Если мВыбиратьИмяРегистра Тогда
		ЗаполнитьНачальныеНастройки();
	Иначе
		ВладелецФормы.ЭтотОтчет.ЗаполнитьНачальныеНастройки();
	КонецЕсли;

	// Восстанавливаем запомненную настройку
	ПостроительОтчета.УстановитьНастройки(Настройки, Истина, Истина, Истина, Истина);
	
	Для Каждого Показатель Из Показатели Цикл
		НайдСтр = ТабПоказатели.Найти(Показатель.Имя, "Имя");
		Если НайдСтр<>Неопределено Тогда
			Показатель.Использование = НайдСтр.Использование;
		КонецЕсли; 
	КонецЦикла;

	Оповестить("ИзмененТекстЗапроса", , ЭтаФорма);
	
КонецПроцедуры // ИспользоватьСвойстваИКатегорииПриИзменении()

// Процедура - обработчик нажатия кнопки "Установить все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейУстановитьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Строка.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Снять все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейСнятьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Строка.Использование = Ложь;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик начала выбора значения отбора
//
Процедура ОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	// Отборы по свойствам и категориям должны быть обработаны специальным образом
	// Они определяются по представлению 
	Если Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "категории") Тогда

		// Ограничение списка категорий
		Назначение = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборКатегории(Элемент, Назначение, ЭтаФорма, СтандартнаяОбработка);

	ИначеЕсли Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "св-во") Тогда

		Свойство = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборСвойства(Элемент, Свойство, ЭтаФорма, СтандартнаяОбработка);

	КонецЕсли;
		
КонецПроцедуры // ОтборЗначениеНачалоВыбора()

// Процедура - обработчик перед удалением строки отбора
//
Процедура ОтборПередУдалением(Элемент, Отказ)
	
	Если Не ПустаяСтрока(Элемент.ТекущаяСтрока.Имя) Тогда
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры // ОтборПередУдалением()

// Процедура - обработчик изменения даты начала периода
//
Процедура ДатаНачПриИзменении(Элемент)
	
	НП.УстановитьПериод(ДатаНач, КонецДня(ДатаКон), Истина);
	
КонецПроцедуры

// Процедура - обработчик изменения даты конца периода
//
Процедура ДатаКонПриИзменении(Элемент)
	
	НП.УстановитьПериод(ДатаНач, КонецДня(ДатаКон), Истина);
	
КонецПроцедуры

// Список доступных регистров для универсального отчета
СписокРегистров = ПолучитьСписокРегистровОстатков();
ЭлементыФормы.ИмяРегистра.СписокВыбора = СписокРегистров;
