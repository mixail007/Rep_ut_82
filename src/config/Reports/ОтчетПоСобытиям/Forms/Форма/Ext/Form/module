
// Структура содержащая данные о связи элементов управления быстрых отборов с данными
Перем СтруктураСвязиЭлементовСДанными;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанель.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	Если ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанель.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанель.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Процедура заполняет данными ПолеТабличногоДокумента отчета
//
Процедура Сформировать(Кнопка)

	СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ДатаНачала = НачалоДня(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов"));
		ДатаКонца = КонецДня(ТекущаяДата());
		Если ДатаНачала > ДатаКонца Тогда
			ДатаНачала = ДатаКонца;
		КонецЕсли; 
	КонецЕсли; 
	
	ЗаполнитьНачальныеНастройки();
	
	НП.УстановитьПериод(ДатаНачала, ДатаОкончания);
	
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными, "ОбработкаОбъект.ПостроительОтчета.Отбор");
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ДатаНачала = НачалоДня(ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов"));
		ДатаОкончания = КонецДня(ТекущаяДата());
	КонецЕсли; 
	
	ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	
	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры

// Обработчик события ПередСохранениемЗначений формы.
//
Процедура ПередСохранениемЗначений(Отказ)

	СохраненныеНастройки = Новый Структура;

	СохраненныеНастройки.Вставить("ИспользоватьСвойстваИКатегории", ИспользоватьСвойстваИКатегории);
	СохраненныеНастройки.Вставить("ПоказыватьЗаголовок"           , ПоказыватьЗаголовок);
	СохраненныеНастройки.Вставить("НастройкиПостроителя"          , ПостроительОтчета.ПолучитьНастройки());
	СохраненныеНастройки.Вставить("РаскрашиватьГруппировки"       , РаскрашиватьГруппировки);

КонецПроцедуры

// Обработчик события ПослеВосстановленияЗначений формы.
//
Процедура ПослеВосстановленияЗначений()

	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
	
		Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда
			
			СохраненныеНастройки.Свойство("ИспользоватьСвойстваИКатегории", ИспользоватьСвойстваИКатегории);
			
			ЗаполнитьНачальныеНастройки();
			
			ПостроительОтчета.УстановитьНастройки(СохраненныеНастройки.НастройкиПостроителя);
			
			СохраненныеНастройки.Свойство("ПоказыватьЗаголовок"           , ПоказыватьЗаголовок);
			СохраненныеНастройки.Свойство("РаскрашиватьГруппировки"       , РаскрашиватьГруппировки);
		
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ОбработкаОповещения формы.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененТекстЗапроса" Тогда

		// Перезаполним привязку отбора к данным
		Для Каждого Элемент Из СтруктураСвязиЭлементовСДанными Цикл
		
			ЭлементыФормы[Элемент.Ключ].Данные = Элемент.Значение;
		
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события элемента КоманднаяПанельФормы.Настройка.
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)

	
	ОтветОтФормы = ОбработкаОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма).ОткрытьМодально();
	
	Если ОтветОтФормы = Истина Тогда
		СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокумента);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанель.Заголовок.
//
Процедура КоманднаяПанельЗаголовок(Кнопка)

	ПоказыватьЗаголовок = НЕ ПоказыватьЗаголовок;
	ИзменитьВидимостьЗаголовка(ЭлементыФормы.ПолеТабличногоДокумента);
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Отбор.
//
Процедура КоманднаяПанельОтбор(Кнопка)

	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ОбработкаРасшифровки элемента формы ПолеТабличногоДокумента.
//
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	Если Элемент.ТекущаяОбласть.Текст = "Открыть список" Тогда
	
		СтандартнаяОбработка = Ложь;

		Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда

			ЗначениеРасшифровки = Неопределено;
			Расшифровка.Свойство("ЗначениеРасшифровки", ЗначениеРасшифровки);

			Если ЗначениеРасшифровки = Неопределено Тогда
				Возврат;
			КонецЕсли; 
			
			ФормаФайлов = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСпискаФайловИИзображений", ЭтаФорма);
			
			ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Использование                       = Истина;
			ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Значение                            = ЗначениеРасшифровки;
			ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.НастройкаОтбора.Объект.Доступность = Ложь;
			ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.Колонки.Объект.Видимость           = Ложь;

			ОбязательныеОтборы = Новый Структура;

			Если ЗначениеРасшифровки.ВидСобытия = Перечисления.ВидыСобытий.ЭлектронноеПисьмо
			   И ЗначениеРасшифровки.ТипСобытия = Перечисления.ВходящееИсходящееСобытие.Входящее Тогда
			
				ФормаФайлов.ЭлементыФормы.ПанельЗакладок.ТекущаяСтраница = ФормаФайлов.ЭлементыФормы.ПанельЗакладок.Страницы.Файлы;
				ФормаФайлов.ЭлементыФормы.ПанельЗакладок.Страницы.Изображения.Видимость = Ложь;
				ОбязательныеОтборы.Вставить("ВидДанных",Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл);

			Иначе

				ФормаФайлов.Изображения.Отбор.Объект.Использование                       = Истина;
				ФормаФайлов.Изображения.Отбор.Объект.Значение                            = ЗначениеРасшифровки;
				ФормаФайлов.ЭлементыФормы.Изображения.НастройкаОтбора.Объект.Доступность = Ложь;
				ФормаФайлов.ЭлементыФормы.Изображения.Колонки.Объект.Видимость           = Ложь;
				
			КонецЕсли; 

			ОбязательныеОтборы.Вставить("Объект",ЗначениеРасшифровки);

			ФормаФайлов.ОбязательныеОтборы = ОбязательныеОтборы;
			
			ФормаФайлов.Открыть();
		
		КонецЕсли; 
	
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		ДатаНачала = НП.ПолучитьДатуНачала();
		ДатаКонца = НП.ПолучитьДатуОкончания();

	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияКонтрагент.
//
Процедура ПолеВидаСравненияКонтрагентПриИзменении(Элемент)
	
	ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеВидаСравненияКонтактноеЛицо.
//
Процедура ПолеВидаСравненияКонтактноеЛицоПриИзменении(Элемент)
	
	ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиКонтрагент.
//
Процедура ПолеНастройкиКонтрагентПриИзменении(Элемент)
	
	ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ПолеНастройкиКонтактноеЛицо.
//
Процедура ПолеНастройкиКонтактноеЛицоПриИзменении(Элемент)
	
	ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры
