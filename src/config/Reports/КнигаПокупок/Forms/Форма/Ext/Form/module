// Вызывается из тела процедуры "Сформировать"
// осуществляет проверку значений "НачалоПериода" и "КонецПериода"
// введенных пользователем.
Функция ПроверкаПериода()
	
	ПроверкаПройдена=Истина;
	
	Если НачалоПериода > КонецПериода Тогда
		
		Предупреждение("Неправильно задан период формирования отчета!"+Символы.ПС+
		               "Дата начала больше даты окончания периода.");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли НачалоПериода='00010101' Тогда
		
		Предупреждение("Не указана дата начала отчета");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли КонецПериода='00010101' Тогда
		
		Предупреждение("Не указана дата конца отчета");
					   
		ПроверкаПройдена=Ложь;
	
	КонецЕсли;
		
	Возврат ПроверкаПройдена;
	
КонецФункции // ПроверкаПериода()

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
КонецПроцедуры

Процедура Сформировать(Кнопка)
	
	Если ЗначениеНеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация.");
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверкаПериода() Тогда
		Возврат;
	КонецЕсли;

	ЭлементыФормы.ТабличныйДокумент.Очистить();
	
	Макет = ПолучитьМакет("Макет");
	
	// Вывод шапки
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.УстановленныйОтбор = "";
	Секция.Параметры.НачалоПериода = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	Секция.Параметры.ИННОрганизации = "" + Организация.ИНН + ?(ЗначениеНеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	ЭлементыФормы.ТабличныйДокумент.Вывести(Секция);
	
	ИтогВсегоПокупок = 0;
	ИтогВсегоБезНДС = 0;
	ИтогВсегоНДС0 = 0;
	ИтогВсегоСуммаНДС20 = 0;
	ИтогВсегоСуммаНДС18 = 0;
	ИтогВсегоСуммаНДС10 = 0;
	ИтогВсегоНДС20 = 0;
	ИтогВсегоНДС18 = 0;
	ИтогВсегоНДС10 = 0;
	
	// Создаем общий запрос
	МассивСобытий = Новый Массив();
	МассивСобытий.Добавить(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету);
	МассивСобытий.Добавить(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету0);
	МассивСобытий.Добавить(Перечисления.СобытияПоНДСПокупки.ВосстановленНДС);

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	НДСПокупки.Период,
					|	НДСПокупки.Организация,
					|	НДСПокупки.Поставщик,
					|	НДСПокупки.СчетФактура КАК СчетФактура,
					|	НДСПокупки.Событие,
					|	НДСПокупки.ДокументОплаты КАК ДокументОплаты,
					|	НДСПокупки.СтавкаНДС КАК СтавкаНДС,
					|	СУММА(НДСПокупки.СуммаБезНДС) КАК СуммаБезНДС,
					|	СУММА(НДСПокупки.НДС) КАК НДС
					|ИЗ
					|	РегистрНакопления.НДСПокупки КАК НДСПокупки

					|ГДЕ
					|	НДСПокупки.Организация = &Организация И
					|	НДСПокупки.Период МЕЖДУ &НачалоПериода И &КонецПериода И
					|	НДСПокупки.Событие В(&События)

					|СГРУППИРОВАТЬ ПО
					|	НДСПокупки.ДокументОплаты,
					|	НДСПокупки.СчетФактура,
					|	НДСПокупки.СтавкаНДС,
					|	НДСПокупки.Организация,
					|	НДСПокупки.Поставщик,
					|	НДСПокупки.Событие,
					|	НДСПокупки.Период

					|УПОРЯДОЧИТЬ ПО
					|	ДокументОплаты

					|ИТОГИ СУММА(СуммаБезНДС), СУММА(НДС) ПО
					|	ДокументОплаты,
					|	СчетФактура,
					|	СтавкаНДС";			   
				   
	Запрос.УстановитьПараметр("События",		МассивСобытий);
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", 	Организация);

	Результат = Запрос.Выполнить();
	ВыборкаПоОплатам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Счетчик = 0;
	Пока ВыборкаПоОплатам.Следующий() Цикл
		// Вывод шапки
		Секция = Макет.ПолучитьОбласть("Строка");
		
		ВыборкаПоСчетамФактурам = ВыборкаПоОплатам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);		
		
		ЭтоАванс = Ложь;
		
		Пока ВыборкаПоСчетамФактурам.Следующий() Цикл
			Счетчик = Счетчик + 1;
			
			Если ТипЗнч(ВыборкаПоСчетамФактурам.СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
				ДатаНомер = "" + Формат(ВыборкаПоСчетамФактурам.СчетФактура.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + ВыборкаПоСчетамФактурам.СчетФактура.НомерВходящегоДокумента;
			ИначеЕсли ТипЗнч(ВыборкаПоСчетамФактурам.СчетФактура) = Тип("ДокументСсылка.ГТДИмпорт") Тогда
				ДатаНомер = "" + Формат(ВыборкаПоСчетамФактурам.СчетФактура.Дата, "ДФ=dd.MM.yyyy") + ", №" + ВыборкаПоСчетамФактурам.СчетФактура.НомерГТД;
			Иначе
				Документ = НайтиПодчиненныйДокумент(ВыборкаПоСчетамФактурам.СчетФактура, "СчетФактураПолученный");
				
				Если Документ = Неопределено Тогда
					Документ = НайтиПодчиненныйДокумент(ВыборкаПоСчетамФактурам.СчетФактура, "СчетФактураВыданный");
					Если Документ = Неопределено Тогда
						Попытка
							ДатаНомер = "" + Формат(ВыборкаПоСчетамФактурам.СчетФактура.Дата, "ДФ=dd.MM.yyyy") + ", №" + ВыборкаПоСчетамФактурам.СчетФактура.Номер;
						Исключение
							ДатаНомер = "";
						КонецПопытки;
					Иначе
						ДатаНомер = "" + Формат(Документ.Дата, "ДФ=dd.MM.yyyy") + ", №" + Документ.Номер;
						ЭтоАванс = Документ.НаАванс;
					КонецЕсли
					
				Иначе
					ДатаНомер = "" + Формат(Документ.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + Документ.НомерВходящегоДокумента;
				КонецЕсли;
				
			КонецЕсли;
			
			Секция.Параметры.ДатаНомер = ДатаНомер;

			СуммаВсегоВыставлено = 0;
			СуммаВсегоОплачено = 0;
			
			УстановитьДатыОприходования(ВыборкаПоСчетамФактурам.СчетФактура, Секция.Параметры.ДатаОприходования, СуммаВсегоВыставлено, СуммаВсегоОплачено);
			
			СообщениеЧастОпл = "";
			// Устанавливаем факт частичной оплаты
			Если СуммаВсегоОплачено < СуммаВсегоВыставлено Тогда
				// Данная оплата является частичной
				СообщениеЧастОпл = ", частичная оплата";				
			КонецЕсли;
			
			Если ВыборкаПоСчетамФактурам.ДокументОплаты <> Неопределено Тогда
				Секция.Параметры.ДатаОплаты   = Формат(ВыборкаПоСчетамФактурам.ДокументОплаты.Дата, "ДФ=dd.MM.yyyy") + СообщениеЧастОпл;
			Иначе
				Секция.Параметры.ДатаОплаты   = Формат(ВыборкаПоСчетамФактурам.Период, "ДФ=dd.MM.yyyy") + СообщениеЧастОпл;
			КонецЕсли;
			
			// Формирование строки со страной происхождения товаров и номерами ГТД
			Если ТипЗнч(ВыборкаПоСчетамФактурам.СчетФактура) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
				Секция.Параметры.НомерГТД = СформироватьСтрокуПоСтранамИГТД(ВыборкаПоСчетамФактурам.СчетФактура);
			Иначе
				Секция.Параметры.НомерГТД = "";
			КонецЕсли;
			
			// Для записей, введенных вручную
			Если ТипЗнч(ВыборкаПоСчетамФактурам.СчетФактура) = Тип("ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС") Тогда
				СчетФактураОбъект = ВыборкаПоСчетамФактурам.СчетФактура.ПолучитьОбъект();
				Если ЗначениеНеЗаполнено(СчетФактураОбъект.РасчетныйДокумент) Тогда
					// Это ручная запись книги покупок
					Секция.Параметры.ДатаОприходования = Формат(СчетФактураОбъект.ДатаОприходования, "ДФ=dd.MM.yyyy");
					Секция.Параметры.ДатаОплаты = 		 Формат(СчетФактураОбъект.ДатаОплаты, "ДФ=dd.MM.yyyy");
				КонецЕсли;
			КонецЕсли;
			
			Секция.Параметры.Ном = Счетчик;
			
			Секция.Параметры.ВсегоПокупок =  0;
			Секция.Параметры.СуммаБезНДС18 = 0;
			Секция.Параметры.НДС18 = 0;
			Секция.Параметры.СуммаБезНДС10 = 0;
			Секция.Параметры.НДС10 = 0;
			Секция.Параметры.НДС0 = 0;
			Секция.Параметры.СуммаБезНДС20 = 0;
			Секция.Параметры.НДС20 = 0;
			Секция.Параметры.СуммаСовсемБезНДС = 0;
			
			ВыборкаПоСтавкам = ВыборкаПоСчетамФактурам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			Пока ВыборкаПоСтавкам.Следующий() Цикл
				Выборка = ВыборкаПоСтавкам.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					Если ЭтоАванс Тогда
						// В графу продавец ставится наименование того кто фактически
						// оплатил НДС в бюджет, в случае полученных авансов - это сама организация
						Секция.Параметры.Продавец = Организация.НаименованиеПолное;
						Секция.Параметры.ПродавецИНН = Организация.ИНН;
						Секция.Параметры.ПродавецКПП = Организация.КПП;
						
					Иначе
						Если ПустаяСтрока(Выборка.Поставщик.НаименованиеПолное) Тогда
							Секция.Параметры.Продавец = Выборка.Поставщик.Наименование;
						Иначе
							Секция.Параметры.Продавец = Выборка.Поставщик.НаименованиеПолное;
						КонецЕсли;
						Секция.Параметры.ПродавецИНН = Выборка.Поставщик.ИНН;
						Секция.Параметры.ПродавецКПП = Выборка.Поставщик.КПП;
						
					КонецЕсли;
					
					Знак = ?(Выборка.Событие = Перечисления.СобытияПоНДСПокупки.ВосстановленНДС, -1, 1);
					
					Если (Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20) или (Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120) Тогда
						Секция.Параметры.СуммаБезНДС20 = Секция.Параметры.СуммаБезНДС20 + Знак * Выборка.СуммаБезНДС;
						Секция.Параметры.НДС20 = Секция.Параметры.НДС20 + Знак * Выборка.НДС;
						
					ИначеЕсли (Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18) или (Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118) Тогда
						Секция.Параметры.СуммаБезНДС18 = Секция.Параметры.СуммаБезНДС18 + Знак * Выборка.СуммаБезНДС;
						Секция.Параметры.НДС18 = Секция.Параметры.НДС18 + Знак * Выборка.НДС;
						
					ИначеЕсли (Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10) или (Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110) Тогда
						Секция.Параметры.СуммаБезНДС10 = Секция.Параметры.СуммаБезНДС10 + Знак * Выборка.СуммаБезНДС;
						Секция.Параметры.НДС10 = Секция.Параметры.НДС10 + Знак * Выборка.НДС;
					ИначеЕсли Выборка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
						Секция.Параметры.СуммаСовсемБезНДС = Секция.Параметры.СуммаСовсемБезНДС + Знак * Выборка.СуммаБезНДС;
					ИначеЕсли Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
						Секция.Параметры.НДС0 = Секция.Параметры.НДС0 + Знак * Выборка.СуммаБезНДС;
					КонецЕсли;
					
					Если ЭтоАванс Тогда
						// Обнуляем суммы без НДС с авансов
						Секция.Параметры.СуммаБезНДС20 = 0;
						Секция.Параметры.СуммаБезНДС18 = 0;
						Секция.Параметры.СуммаБезНДС10 = 0;
					КонецЕсли;
					
					Секция.Параметры.ВсегоПокупок  = Секция.Параметры.ВсегоПокупок + Знак * Выборка.НДС + Знак * Выборка.СуммаБезНДС;
					
				КонецЦикла;
				
			КонецЦикла;
			
			// Подсчитываем итоговые суммы по строке книги покупок
			ИтогВсегоПокупок = ИтогВсегоПокупок + Секция.Параметры.ВсегоПокупок;
			ИтогВсегоБезНДС =  ИтогВсегоБезНДС + Секция.Параметры.СуммаСовсемБезНДС;
			ИтогВсегоНДС0 =    ИтогВсегоНДС0 + Секция.Параметры.НДС0;
			ИтогВсегоСуммаНДС20 = ИтогВсегоСуммаНДС20 + Секция.Параметры.СуммаБезНДС20;
			ИтогВсегоСуммаНДС18 = ИтогВсегоСуммаНДС18 + Секция.Параметры.СуммаБезНДС18;
			ИтогВсегоСуммаНДС10 = ИтогВсегоСуммаНДС10 + Секция.Параметры.СуммаБезНДС10;
			ИтогВсегоНДС20 = ИтогВсегоНДС20 + Секция.Параметры.НДС20;
			ИтогВсегоНДС18 = ИтогВсегоНДС18 + Секция.Параметры.НДС18;
			ИтогВсегоНДС10 = ИтогВсегоНДС10 + Секция.Параметры.НДС10;
			
			ЭлементыФормы.ТабличныйДокумент.Вывести(Секция);
			
		КонецЦикла; // Пока ВыборкаПоСчетамФактурам.Следующий() Цикл
		
	КонецЦикла; // Пока ВыборкаПоОплатам.Следующий() Цикл

	// Вывод всего
	ВыборкаДетальная = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтавкаНДС",);
	Секция = Макет.ПолучитьОбласть("Всего");

	Секция.Параметры.ВсегоПокупок = 	ИтогВсегоПокупок;
	Секция.Параметры.СуммаБезНДС18 = 	ИтогВсегоСуммаНДС18;
	Секция.Параметры.НДС18 = 			ИтогВсегоНДС18;
	Секция.Параметры.СуммаБезНДС10 = 	ИтогВсегоСуммаНДС10;
	Секция.Параметры.НДС10 = 			ИтогВсегоНДС10;
	Секция.Параметры.НДС0 = 			ИтогВсегоНДС0;
	Секция.Параметры.СуммаБезНДС20 = 	ИтогВсегоСуммаНДС20;
	Секция.Параметры.НДС20 = 			ИтогВсегоНДС20;
	Секция.Параметры.СуммаСовсемБезНДС= ИтогВсегоБезНДС;
	
	ЭлементыФормы.ТабличныйДокумент.Вывести(Секция);

	// Вывод подвала
	Секция = Макет.ПолучитьОбласть("Подвал");
	Секция.Параметры.ИмяБух = ОтветственныеЛицаОрганизации(Организация, КонецПериода).ГлавныйБухгалтер;
	Секция.Параметры.ИмяОрг = "";

	ЭлементыФормы.ТабличныйДокумент.Вывести(Секция);

КонецПроцедуры

// Функция вызывается из тела процедуры "Сформировать"
// для документа поступления товаров, указанного в качестве 
// параметра процедуры, из ИБ выбираются значения реквизитов
// страна происхождения и номера ГТД, указанные в строках 
// данного документа, и по их значениям формируется текстовая строка.
Функция СформироватьСтрокуПоСтранамИГТД(ДокументПоступления)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	ПоступлениеТоваровУслугТовары.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
					|	ПоступлениеТоваровУслугТовары.СерияНоменклатуры.НомерГТД КАК НомерГТД,
					|	СУММА(1) КАК КоличествоЭлементов
					|ИЗ
					|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары

					|ГДЕ
					|	ПоступлениеТоваровУслугТовары.Ссылка = &ДокументПоступления
					

					|СГРУППИРОВАТЬ ПО
					|	ПоступлениеТоваровУслугТовары.СерияНоменклатуры.СтранаПроисхождения,
					|	ПоступлениеТоваровУслугТовары.СерияНоменклатуры.НомерГТД

					|ИТОГИ СУММА(КоличествоЭлементов) ПО
					|	СтранаПроисхождения
					|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("ДокументПоступления", ДокументПоступления);

	Результат = Запрос.Выполнить();
	ВыборкаПоСтранам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	СтрРез = "";
	
	Пока ВыборкаПоСтранам.Следующий() Цикл
		Если ВыборкаПоСтранам.СтранаПроисхождения <> Неопределено Тогда
			СтрРез = ?(СтрРез = "",""," ") + ВыборкаПоСтранам.СтранаПроисхождения + " ";
		КонецЕсли;
		
		ВыборкаПоГТД = ВыборкаПоСтранам.Выбрать();
		Пока ВыборкаПоГТД.Следующий() Цикл
			Если ВыборкаПоГТД.НомерГТД <> Неопределено Тогда
				СтрРез = СтрРез + ВыборкаПоГТД.НомерГТД + " ";
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат СтрРез;

КонецФункции // СформироватьСтрокуПоСтранамИГТД()

Процедура УстановитьДатыОприходования(СчетФактура, ДатаОприходования, СуммаВсегоВыставлено, СуммаВсегоОплачено)
	
	ДатаОприходования = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	НДСПокупкиОбороты.Период,
				   |	НДСПокупкиОбороты.Регистратор,
				   |	НДСПокупкиОбороты.Событие,
				   |	НДСПокупкиОбороты.СуммаБезНДСОборот КАК СуммаБезНДС,
				   |	НДСПокупкиОбороты.НДСОборот КАК НДС
	               |ИЗ
				   |	РегистрНакопления.НДСПокупки.Обороты(, &КонецПериода, Регистратор, (Организация = &Организация) и (СчетФактура = &СчетФактура) и ((Событие в (&ПредъявленНДС)) или (Событие = &ОплаченНДС)) ) КАК НДСПокупкиОбороты";
	
	Запрос.УстановитьПараметр("КонецПериода", 	КонецПериода);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("СчетФактура", 	СчетФактура);
	
	ПредъявленНДС = Новый СписокЗначений;
	ПредъявленНДС.Добавить(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком);
	ПредъявленНДС.Добавить(Перечисления.СобытияПоНДСПокупки.Возврат);
	
	Запрос.УстановитьПараметр("ПредъявленНДС",	ПредъявленНДС);
	Запрос.УстановитьПараметр("ОплаченНДС",		Перечисления.СобытияПоНДСПокупки.НДСОплачен);

	Выборка = Запрос.Выполнить().Выбрать();
	
	СуммаВсегоВыставлено = 0;
	СуммаВсегоОплачено   = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Событие = Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком Тогда
			// поступление
			СуммаВсегоВыставлено = СуммаВсегоВыставлено + Выборка.СуммаБезНДС + Выборка.НДС;
			Если ДатаОприходования <> "" Тогда
				ДатаОприходования = ДатаОприходования + ", ";
			КонецЕсли;
					     
			ДатаОприходования = ДатаОприходования + Формат(Выборка.Период, "ДФ=dd.MM.yyyy");
			
		ИначеЕсли Выборка.Событие = Перечисления.СобытияПоНДСПокупки.Возврат Тогда
			// возврат уменьшает сумму поступления
			СуммаВсегоВыставлено = СуммаВсегоВыставлено - (Выборка.СуммаБезНДС + Выборка.НДС);
			
		Иначе
			// оплата
			СуммаВсегоОплачено = СуммаВсегоОплачено + Выборка.СуммаБезНДС + Выборка.НДС;
			
		КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	НачалоПериода = НачалоМесяца(РабочаяДата);
	КонецПериода = КонецМесяца(РабочаяДата);

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Организация = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
	
КонецПроцедуры
