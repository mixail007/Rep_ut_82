Функция ПолучитьПредставлениеДанных(Данные)
	
	Результат = "";
	
	Если Данные.НомерСтроки = 1 Тогда
		Результат = "Эталонный период.";
	Иначе
		Результат = "Сравниваемый период " + Строка(Данные.НомерСтроки - 1) + ".";
	КонецЕсли;
	
	Результат = Результат + Символы.ПС + Данные.ТипДанных + ". " + Символы.ПС;
	
	Если Данные.ДатаНач = '00010101000000' И Данные.ДатаКон = '00010101000000' Тогда
		Если ОбщийОтчет.ДатаНач = '00010101000000' И ОбщийОтчет.ДатаКон = '00010101000000' Тогда
			Результат = Результат + "Без ограничения периода";
		Иначе
			Результат = Результат + "С " + Формат(ОбщийОтчет.ДатаНач, "ДЛФ=Д; ДП = ""...""") + " по " + Формат(ОбщийОтчет.ДатаКон, "ДЛФ=Д; ДП = ""...""");
		КонецЕсли;
	Иначе
		Результат = Результат + "С " + Формат(Данные.ДатаНач, "ДЛФ=Д; ДП = ""...""") + " по " + Формат(Данные.ДатаКон, "ДЛФ=Д; ДП = ""...""");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ПолучитьПредставлениеДанных()

// В текст для построителя отчета вставляет свойства и категории
Процедура ДобавитьВТекстСвойстваИКатегорииЛокально(ТаблицаПолей, Текст, СтруктураПредставлениеПолей, мСоответствиеНазначений, 
	                                          СтруктураПараметры, ТекстИсточникиСведений="", ТекстПоляКатегорий="", 
	                                          ТекстПоляСвойств="", ТекстПоляСгруппироватьПо = "", 
	                                          ЗаменятьСвойства = "//СВОЙСТВА", ЗаменятьКатегории = "//КАТЕГОРИИ", 
	                                          ЗаменятьСоединения = "//СОЕДИНЕНИЯ", ЗаменятьСгруппироватьПо = "//СГРУППИРОВАТЬПО",
	                                          ИдентификаторыПараметровДляОтборовПоКатегориям = "", ФормироватьПоляДляИтогов = Ложь)

	// Добавляемые фрагменты запроса
	ТекстПоляКатегорийДляГруппировки ="";
	ТекстИсточникиСведений ="";
	ТекстПоляКатегорий = "";
	ТекстПоляСвойств = "";

	ИдентификаторыПараметровДляОтборовПоКатегориям = Новый Структура;

	Индекс = 0;

	Выборка = ПланыВидовХарактеристик.СвойстваОбъектов.Выбрать();
	Пока Выборка.Следующий() Цикл

		Если Выборка.ЭтоГруппа 
			ИЛИ Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;

		Выборка = Выборка;
		НайденнаяСтрока = ТаблицаПолей.Найти(Выборка.НазначениеСвойства, "Назначение");
		Если НайденнаяСтрока <> Неопределено Тогда

			// Для списка всех полей
			Если ФормироватьПоляДляИтогов Тогда
				ТекстПоляСвойств = ТекстПоляСвойств + ",
				|	Свойство"+Индекс+"Значение" + " КАК " + "Свойство"+Индекс+"Значение";
			Иначе
				ТекстПоляСвойств = ТекстПоляСвойств + ",
				|	Свойство"+Индекс+".Значение" + " КАК " + "Свойство"+Индекс+"Значение";
			КонецЕсли; 

			ТекстПоляКатегорийДляГруппировки = ТекстПоляКатегорийДляГруппировки + ",
			|	Свойство"+Индекс+".Значение";

			// Источник для свойств
			ТекстИсточникиСведений = ТекстИсточникиСведений + Символы.ПС + 
			"{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК Свойство"+Индекс+"
			|ПО Свойство"+Индекс+".Объект = " + НайденнаяСтрока.ПутьКДанным + "
			|И  Свойство"+Индекс+".Свойство = &ПараметрСвойство"+Индекс+ "}";

			СтруктураПараметры.Вставить("ПараметрСвойство"+Индекс, Выборка.Ссылка);

			СтруктураПредставлениеПолей.Вставить("Свойство"+Индекс+"Значение", Выборка.Наименование + " (св-во " + НайденнаяСтрока.Представление + ")");

			мСоответствиеНазначений.Вставить(Выборка.Наименование + " (св-во " + НайденнаяСтрока.Представление + ")", Выборка.Ссылка);

			Индекс = Индекс + 1;

		КонецЕсли; 

	КонецЦикла;

	Для каждого Строка Из ТаблицаПолей Цикл

		Если НЕ (Строка.НетКатегорий=Истина) Тогда


			ТекстИсточникиСведений = ТекстИсточникиСведений + Символы.ПС + 
			"{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК Категории"+Индекс+"
			|ПО Категории"+Индекс+".Объект = " + Строка.ПутьКДанным + "
			|И  Категории"+Индекс+".Категория В (&ПараметрКатегории"+Индекс+")}";

			ТекстПоляКатегорий = ТекстПоляКатегорий + ",
			|	ВЫБОР
			|		КОГДА Категории"+Индекс+".Категория ЕСТЬ НЕ NULL 
			|			ТОГДА Категории"+Индекс+".Категория
			|	ИНАЧЕ "+Строка.ПутьКДанным + "
			|	КОНЕЦ КАК Категории"+Индекс+"Категория";

			ТекстПоляКатегорийДляГруппировки = ТекстПоляКатегорийДляГруппировки + ",
			|	Категории"+Индекс+".Категория";

			СтруктураПредставлениеПолей.Вставить("Категории"+Индекс+"Категория", "Категории " + Строка.Представление);

			ИдентификаторыПараметровДляОтборовПоКатегориям.Вставить("Категории"+Индекс+"Категория", "ПараметрКатегории"+Индекс);

			мСоответствиеНазначений.Вставить("Категории " + Строка.Представление, Строка.Назначение);

			Индекс = Индекс + 1;

		КонецЕсли; 
	
	КонецЦикла; 

	//ВЫБРАТЬ РАЗЛИЧНЫЕ съедает достаточно много ресурсов - поэтому если 
	//не надо, то обойдемся без него.
	Если ТекстПоляКатегорийДляГруппировки <> "" Тогда

		Текст = СтрЗаменить(Текст, "//РАЗЛИЧНЫЕ", "РАЗЛИЧНЫЕ");

	КонецЕсли;
	Текст = СтрЗаменить(Текст, ЗаменятьСвойства, ТекстПоляСвойств);
	Текст = СтрЗаменить(Текст, ЗаменятьКатегории, ТекстПоляКатегорий);
	Текст = СтрЗаменить(Текст, ЗаменятьСоединения, ТекстИсточникиСведений);
	Текст = СтрЗаменить(Текст, ЗаменятьСгруппироватьПо, ТекстПоляКатегорийДляГруппировки);

КонецПроцедуры

Функция ПолучитьТекстЗапроса() Экспорт
	
	Текст = "";
	
	ЭталонныйТипДанных = ДанныеОтчета[0].ТипДанных;
	Если Детализация = Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
		ПоНоменклатурнымГруппам = Истина;
	Иначе
		ПоНоменклатурнымГруппам = Ложь;
	КонецЕсли;
	
	Для каждого Данные из ДанныеОтчета Цикл
		
		НомерСтроки = Данные.НомерСтроки;
		ТипДанных   = Данные.ТипДанных;
		
		//Планы продаж
		Если ТипДанных = "Планы продаж" Тогда
			
			//Эталонные данные
			Если НомерСтроки = 1 Тогда
				
				Если ПоНоменклатурнымГруппам Тогда
					
					Текст = Текст + "
					|ВЫБРАТЬ //РАЗЛИЧНЫЕ
					|	&ТипДанных" + НомерСтроки + " КАК ТипДанных,
					|	ВЫБОР КОГДА ПланыПродажОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА
					|			ПланыПродажОбороты.Номенклатура.НоменклатурнаяГруппа
					|		ИНАЧЕ
					|			ПланыПродажОбороты.Номенклатура
					|		КОНЕЦ
					|	КАК Номенклатура,
					|	СУММА(ПланыПродажОбороты.КоличествоОборот) КАК Количество,
					|	СУММА((ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот) * &Коэффициент) КАК Стоимость,
					|	0 КАК КоличествоОтклонение,
					|	0 КАК СтоимостьОтклонение,
					|	0 КАК КоличествоОтклонениеПроцент,
					|	0 КАК СтоимостьОтклонениеПроцент
					|	//СВОЙСТВА_ПЛАНЫПРОДАЖ
					|
					|ИЗ
					|	РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
					|		ВЫБОР КОГДА Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа ИНАЧЕ Истина КОНЕЦ
					|		{Номенклатура.* КАК Номенклатура, Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
					|	) КАК ПланыПродажОбороты
					|	//СОЕДИНЕНИЯ_ПЛАНЫПРОДАЖ
					|
					|{ГДЕ
					|	ПланыПродажОбороты.Номенклатура.* КАК Номенклатура
					|	//СВОЙСТВА_ПЛАНЫПРОДАЖ
					|	//КАТЕГОРИИ_ПЛАНЫПРОДАЖ
					|}
					|
					|СГРУППИРОВАТЬ ПО
					|	ВЫБОР КОГДА ПланыПродажОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА
					|			ПланыПродажОбороты.Номенклатура.НоменклатурнаяГруппа
					|		ИНАЧЕ
					|			ПланыПродажОбороты.Номенклатура
					|		КОНЕЦ
					|	//СГРУППИРОВАТЬПО_ПЛАНЫПРОДАЖ";
			
				Иначе
					
					Текст = Текст + "
					|ВЫБРАТЬ //РАЗЛИЧНЫЕ
					|	&ТипДанных" + НомерСтроки + " КАК ТипДанных,
					|	ПланыПродажОбороты.Номенклатура КАК Номенклатура,
					|	ПланыПродажОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
					|	СУММА(ПланыПродажОбороты.КоличествоОборот) КАК Количество,
					|	СУММА((ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот) * &Коэффициент) КАК Стоимость,
					|	0 КАК КоличествоОтклонение,
					|	0 КАК СтоимостьОтклонение,
					|	0 КАК КоличествоОтклонениеПроцент,
					|	0 КАК СтоимостьОтклонениеПроцент
					|	//СВОЙСТВА_ПЛАНЫПРОДАЖ
					|
					|ИЗ
					|	РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
					|		Номенклатура ССЫЛКА Справочник.Номенклатура
					|		{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
					|	) КАК ПланыПродажОбороты
					|	//СОЕДИНЕНИЯ_ПЛАНЫПРОДАЖ
					|
					|{ГДЕ
					|	ПланыПродажОбороты.Номенклатура.* КАК Номенклатура,
					|	ПланыПродажОбороты.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры
					|	//СВОЙСТВА_ПЛАНЫПРОДАЖ
					|	//КАТЕГОРИИ_ПЛАНЫПРОДАЖ
					|}
					|
					|СГРУППИРОВАТЬ ПО
					|	ПланыПродажОбороты.Номенклатура,
					|	ПланыПродажОбороты.ХарактеристикаНоменклатуры
					|	//СГРУППИРОВАТЬПО_ПЛАНЫПРОДАЖ";
					
				КонецЕсли;
				
			//Сравниваемые данные	
			Иначе
				
				Если ПоНоменклатурнымГруппам Тогда
					
					Текст = Текст + "
					|ВЫБРАТЬ //РАЗЛИЧНЫЕ
					|	&ТипДанных" + НомерСтроки + " КАК ТипДанных,
					|	ВЫБОР КОГДА ПланыПродажОбороты.Номенклатура ЕСТЬ NULL ТОГДА
					|			ВЫБОР КОГДА ЭталонныеДанные.Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА
					|					ЭталонныеДанные.Номенклатура.НоменклатурнаяГруппа
					|				ИНАЧЕ
					|					ЭталонныеДанные.Номенклатура
					|				КОНЕЦ
					|		ИНАЧЕ
					|			ВЫБОР КОГДА ПланыПродажОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА
					|					ПланыПродажОбороты.Номенклатура.НоменклатурнаяГруппа
					|				ИНАЧЕ
					|					ПланыПродажОбороты.Номенклатура
					|				КОНЕЦ
					|		КОНЕЦ
					|	КАК Номенклатура,";
					
				Иначе
					
					Текст = Текст + "
					|ВЫБРАТЬ //РАЗЛИЧНЫЕ
					|	&ТипДанных" + НомерСтроки + " КАК ТипДанных,
					|	ВЫБОР КОГДА ПланыПродажОбороты.Номенклатура ЕСТЬ NULL ТОГДА
					|			ЭталонныеДанные.Номенклатура
					|		ИНАЧЕ
					|			ПланыПродажОбороты.Номенклатура
					|		КОНЕЦ
					|	КАК Номенклатура,
					|	ВЫБОР КОГДА ПланыПродажОбороты.ХарактеристикаНоменклатуры ЕСТЬ NULL ТОГДА
					|			ЭталонныеДанные.ХарактеристикаНоменклатуры
					|		ИНАЧЕ
					|			ПланыПродажОбороты.ХарактеристикаНоменклатуры
					|		КОНЕЦ
					|	КАК ХарактеристикаНоменклатуры,";
					
				КонецЕсли;
				
				Если ЭталонныйТипДанных = "Планы продаж" Тогда
					
					Текст = Текст + "
					|	СУММА(ПланыПродажОбороты.КоличествоОборот) КАК Количество,
					|	СУММА((ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот) * &Коэффициент) КАК Стоимость,
					|	СУММА(ВЫБОР
					|			КОГДА ЭталонныеДанные.КоличествоОборот ЕСТЬ NULL ТОГДА
					|				ПланыПродажОбороты.КоличествоОборот
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.КоличествоОборот ЕСТЬ NULL ТОГДА
					|						- ЭталонныеДанные.КоличествоОборот
					|					ИНАЧЕ
					|						ПланыПродажОбороты.КоличествоОборот - ЭталонныеДанные.КоличествоОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК КоличествоОтклонение,
					|	СУММА(ВЫБОР
					|			КОГДА ЭталонныеДанные.СтоимостьОборот + ЭталонныеДанные.НДСОборот ЕСТЬ NULL ТОГДА
					|				(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот) * &Коэффициент
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот ЕСТЬ NULL ТОГДА
					|						(- ЭталонныеДанные.СтоимостьОборот - ЭталонныеДанные.НДСОборот) * &Коэффициент
					|					ИНАЧЕ
					|						(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот - ЭталонныеДанные.СтоимостьОборот - ЭталонныеДанные.НДСОборот) * &Коэффициент
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК СтоимостьОтклонение,
					|	МАКСИМУМ(ВЫБОР
					|			КОГДА ЭталонныеДанные.КоличествоОборот ЕСТЬ NULL ИЛИ ЭталонныеДанные.КоличествоОборот = 0 ТОГДА
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.КоличествоОборот ЕСТЬ NULL ИЛИ ПланыПродажОбороты.КоличествоОборот = 0 ТОГДА
					|						0
					|					ИНАЧЕ
					|						100
					|					КОНЕЦ
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.КоличествоОборот ЕСТЬ NULL ИЛИ ПланыПродажОбороты.КоличествоОборот = 0 ТОГДА
					|						-100
					|					ИНАЧЕ
					|						(ПланыПродажОбороты.КоличествоОборот - ЭталонныеДанные.КоличествоОборот) * 100 / ЭталонныеДанные.КоличествоОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК КоличествоОтклонениеПроцент,
					|	МАКСИМУМ(ВЫБОР
					|			КОГДА ЭталонныеДанные.СтоимостьОборот + ЭталонныеДанные.НДСОборот ЕСТЬ NULL ИЛИ ЭталонныеДанные.СтоимостьОборот + ЭталонныеДанные.НДСОборот = 0 ТОГДА
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот ЕСТЬ NULL ИЛИ ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот = 0 ТОГДА
					|						0
					|					ИНАЧЕ
					|						100
					|					КОНЕЦ
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот ЕСТЬ NULL ИЛИ ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот = 0 ТОГДА
					|						-100
					|					ИНАЧЕ
					|						(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот - ЭталонныеДанные.СтоимостьОборот - ЭталонныеДанные.НДСОборот) * 100 / (ЭталонныеДанные.СтоимостьОборот + ЭталонныеДанные.НДСОборот)
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК СтоимостьОтклонениеПроцент";
					
					Если ПоНоменклатурнымГруппам Тогда
						
						Текст = Текст + "
						|	//СВОЙСТВА_ПЛАНЫПРОДАЖ
						|ИЗ
						|	РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
						|		ВЫБОР КОГДА Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа ИНАЧЕ Истина КОНЕЦ
						|		{Номенклатура.* КАК Номенклатура, Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
						|	) КАК ПланыПродажОбороты
						|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач1, &ДатаКон1,,
						|			ВЫБОР КОГДА Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа ИНАЧЕ Истина КОНЕЦ
						|			{Номенклатура.* КАК Номенклатура, Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
						|		) КАК ЭталонныеДанные
						|			ПО ПланыПродажОбороты.Номенклатура = ЭталонныеДанные.Номенклатура
						|	//СОЕДИНЕНИЯ_ПЛАНЫПРОДАЖ";
						
					Иначе
						
						Текст = Текст + "
						|	//СВОЙСТВА_ПЛАНЫПРОДАЖ
						|ИЗ
						|	РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
						|		Номенклатура ССЫЛКА Справочник.Номенклатура
						|		{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
						|	) КАК ПланыПродажОбороты
						|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач1, &ДатаКон1,,
						|			Номенклатура ССЫЛКА Справочник.Номенклатура
						|			{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
						|		) КАК ЭталонныеДанные
						|			ПО ПланыПродажОбороты.Номенклатура = ЭталонныеДанные.Номенклатура
						|			И ПланыПродажОбороты.ХарактеристикаНоменклатуры = ЭталонныеДанные.ХарактеристикаНоменклатуры
						|	//СОЕДИНЕНИЯ_ПЛАНЫПРОДАЖ";
						
					КонецЕсли;
					
				ИначеЕсли ЭталонныйТипДанных = "Фактические продажи" Тогда
					
					Текст = Текст + "
					|	СУММА(ПланыПродажОбороты.КоличествоОборот) КАК Количество,
					|	СУММА((ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот) * &Коэффициент) КАК Стоимость,
					|	СУММА(ВЫБОР
					|			КОГДА ЭталонныеДанные.КоличествоОборот ЕСТЬ NULL ТОГДА
					|				ПланыПродажОбороты.КоличествоОборот
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.КоличествоОборот ЕСТЬ NULL ТОГДА
					|						- ЭталонныеДанные.КоличествоОборот
					|					ИНАЧЕ
					|						ПланыПродажОбороты.КоличествоОборот - ЭталонныеДанные.КоличествоОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК КоличествоОтклонение,
					|	СУММА(ВЫБОР
					|			КОГДА ЭталонныеДанные.СтоимостьОборот ЕСТЬ NULL ТОГДА
					|				(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот) * &Коэффициент
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот ЕСТЬ NULL ТОГДА
					|						(- ЭталонныеДанные.СтоимостьОборот) * &Коэффициент
					|					ИНАЧЕ
					|						(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот - ЭталонныеДанные.СтоимостьОборот) * &Коэффициент
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК СтоимостьОтклонение,
					|	МАКСИМУМ(ВЫБОР
					|			КОГДА ЭталонныеДанные.КоличествоОборот ЕСТЬ NULL ИЛИ ЭталонныеДанные.КоличествоОборот = 0 ТОГДА
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.КоличествоОборот ЕСТЬ NULL ИЛИ ПланыПродажОбороты.КоличествоОборот = 0 ТОГДА
					|						0
					|					ИНАЧЕ
					|						100
					|					КОНЕЦ
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.КоличествоОборот ЕСТЬ NULL ИЛИ ПланыПродажОбороты.КоличествоОборот = 0 ТОГДА
					|						-100
					|					ИНАЧЕ
					|						(ПланыПродажОбороты.КоличествоОборот - ЭталонныеДанные.КоличествоОборот) * 100 / ЭталонныеДанные.КоличествоОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК КоличествоОтклонениеПроцент,
					|	МАКСИМУМ(ВЫБОР
					|			КОГДА ЭталонныеДанные.СтоимостьОборот ЕСТЬ NULL ИЛИ ЭталонныеДанные.СтоимостьОборот = 0 ТОГДА
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот ЕСТЬ NULL ИЛИ ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот = 0 ТОГДА
					|						0
					|					ИНАЧЕ
					|						100
					|					КОНЕЦ
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот ЕСТЬ NULL ИЛИ ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот = 0 ТОГДА
					|						-100
					|					ИНАЧЕ
					|						(ПланыПродажОбороты.СтоимостьОборот + ПланыПродажОбороты.НДСОборот - ЭталонныеДанные.СтоимостьОборот) * 100 / ЭталонныеДанные.СтоимостьОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК СтоимостьОтклонениеПроцент";
					
					Если ПоНоменклатурнымГруппам Тогда
						
						Текст = Текст + "
						|ИЗ
						|	РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
						|		ВЫБОР КОГДА Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа ИНАЧЕ Истина КОНЕЦ
						|		{Номенклатура.* КАК Номенклатура, Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
						|	) КАК ПланыПродажОбороты
						|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&ДатаНач1, &ДатаКон1,,
						|			Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа
						|			{Номенклатура.* КАК Номенклатура, ДокументПродажи.* КАК ДокументПродажи}
						|		) КАК ЭталонныеДанные
						|			ПО ПланыПродажОбороты.Номенклатура = ЭталонныеДанные.Номенклатура
						|	//СОЕДИНЕНИЯ_ПЛАНЫПРОДАЖ";
						
					Иначе
						
						Текст = Текст + "
						|ИЗ
						|	РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
						|		Номенклатура ССЫЛКА Справочник.Номенклатура
						|		{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
						|	) КАК ПланыПродажОбороты
						|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&ДатаНач1, &ДатаКон1,,
						|			Номенклатура ССЫЛКА Справочник.Номенклатура
						|			{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, ДокументПродажи.* КАК ДокументПродажи}
						|		) КАК ЭталонныеДанные
						|			ПО ПланыПродажОбороты.Номенклатура = ЭталонныеДанные.Номенклатура
						|			И ПланыПродажОбороты.ХарактеристикаНоменклатуры = ЭталонныеДанные.ХарактеристикаНоменклатуры
						|	//СОЕДИНЕНИЯ_ПЛАНЫПРОДАЖ";
						
					КонецЕсли;
					
				КонецЕсли;
				
				
				Если ПоНоменклатурнымГруппам Тогда
					
					Текст = Текст + "
					|
					|{ГДЕ
					|	ПланыПродажОбороты.Номенклатура.* КАК Номенклатура
					|	//СВОЙСТВА_ПЛАНЫПРОДАЖ
					|	//КАТЕГОРИИ_ПЛАНЫПРОДАЖ
					|}
					|
					|СГРУППИРОВАТЬ ПО
					|	ВЫБОР КОГДА ПланыПродажОбороты.Номенклатура ЕСТЬ NULL ТОГДА
					|			ВЫБОР КОГДА ЭталонныеДанные.Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА
					|					ЭталонныеДанные.Номенклатура.НоменклатурнаяГруппа
					|				ИНАЧЕ
					|					ЭталонныеДанные.Номенклатура
					|				КОНЕЦ
					|		ИНАЧЕ
					|			ВЫБОР КОГДА ПланыПродажОбороты.Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА
					|					ПланыПродажОбороты.Номенклатура.НоменклатурнаяГруппа
					|				ИНАЧЕ
					|					ПланыПродажОбороты.Номенклатура
					|				КОНЕЦ
					|		КОНЕЦ
					|	//СГРУППИРОВАТЬПО_ПЛАНЫПРОДАЖ";
					
				Иначе
					
					Текст = Текст + "
					|
					|{ГДЕ
					|	ПланыПродажОбороты.Номенклатура.* КАК Номенклатура
					|	//СВОЙСТВА_ПЛАНЫПРОДАЖ
					|	//КАТЕГОРИИ_ПЛАНЫПРОДАЖ
					|}
					|
					|СГРУППИРОВАТЬ ПО
					|	ВЫБОР КОГДА ПланыПродажОбороты.Номенклатура ЕСТЬ NULL ТОГДА
					|			ЭталонныеДанные.Номенклатура
					|		ИНАЧЕ
					|			ПланыПродажОбороты.Номенклатура
					|		КОНЕЦ,
					|	ВЫБОР КОГДА ПланыПродажОбороты.ХарактеристикаНоменклатуры ЕСТЬ NULL ТОГДА
					|			ЭталонныеДанные.ХарактеристикаНоменклатуры
					|		ИНАЧЕ
					|			ПланыПродажОбороты.ХарактеристикаНоменклатуры
					|		КОНЕЦ
					|	//СГРУППИРОВАТЬПО_ПЛАНЫПРОДАЖ";
					
				КонецЕсли;
				
			КонецЕсли;
			
		//Фактические продажи
		ИначеЕсли Данные.ТипДанных = "Фактические продажи" Тогда
			
			//Эталонные данные
			Если НомерСтроки = 1 Тогда
				
				Если ПоНоменклатурнымГруппам Тогда
					
					Текст = Текст + "
					|ВЫБРАТЬ //РАЗЛИЧНЫЕ
					|	&ТипДанных" + НомерСтроки + " КАК ТипДанных,
					|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа	КАК Номенклатура,
					|	СУММА(ПродажиОбороты.КоличествоОборот) КАК Количество,
					|	СУММА(ПродажиОбороты.СтоимостьОборот * &Коэффициент) КАК Стоимость,
					|	0 КАК КоличествоОтклонение,
					|	0 КАК СтоимостьОтклонение,
					|	0 КАК КоличествоОтклонениеПроцент,
					|	0 КАК СтоимостьОтклонениеПроцент
					|	//СВОЙСТВА_ФАКТИЧЕСКИЕПРОДАЖИ
					|
					|ИЗ
					|	РегистрНакопления.Продажи.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
					|		Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа
					|		{Номенклатура.* КАК Номенклатура, Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, ДокументПродажи.* КАК ДокументПродажи}
					|	) КАК ПродажиОбороты
					|	//СОЕДИНЕНИЯ_ФАКТИЧЕСКИЕПРОДАЖИ
					|
					|{ГДЕ
					|	ПродажиОбороты.Номенклатура.* КАК Номенклатура
					|	//СВОЙСТВА_ФАКТИЧЕСКИЕПРОДАЖИ
					|	//КАТЕГОРИИ_ФАКТИЧЕСКИЕПРОДАЖИ
					|}
					|
					|СГРУППИРОВАТЬ ПО
					|	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа
					|	//СГРУППИРОВАТЬПО_ФАКТИЧЕСКИЕПРОДАЖИ";
			
				Иначе
					
					Текст = Текст + "
					|ВЫБРАТЬ //РАЗЛИЧНЫЕ
					|	&ТипДанных" + НомерСтроки + " КАК ТипДанных,
					|	ПродажиОбороты.Номенклатура КАК Номенклатура,
					|	ПродажиОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
					|	СУММА(ПродажиОбороты.КоличествоОборот) КАК Количество,
					|	СУММА(ПродажиОбороты.СтоимостьОборот * &Коэффициент) КАК Стоимость,
					|	0 КАК КоличествоОтклонение,
					|	0 КАК СтоимостьОтклонение,
					|	0 КАК КоличествоОтклонениеПроцент,
					|	0 КАК СтоимостьОтклонениеПроцент
					|	//СВОЙСТВА_ФАКТИЧЕСКИЕПРОДАЖИ
					|
					|ИЗ
					|	РегистрНакопления.Продажи.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
					|		Номенклатура ССЫЛКА Справочник.Номенклатура
					|		{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, ДокументПродажи.* КАК ДокументПродажи}
					|	) КАК ПродажиОбороты
					|	//СОЕДИНЕНИЯ_ФАКТИЧЕСКИЕПРОДАЖИ
					|
					|{ГДЕ
					|	ПродажиОбороты.Номенклатура.* КАК Номенклатура,
					|	ПродажиОбороты.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры
					|	//СВОЙСТВА_ФАКТИЧЕСКИЕПРОДАЖИ
					|	//КАТЕГОРИИ_ФАКТИЧЕСКИЕПРОДАЖИ
					|}
					|
					|СГРУППИРОВАТЬ ПО
					|	ПродажиОбороты.Номенклатура,
					|	ПродажиОбороты.ХарактеристикаНоменклатуры
					|	//СГРУППИРОВАТЬПО_ФАКТИЧЕСКИЕПРОДАЖИ";
					
				КонецЕсли;
				
			//Сравниваемые данные	
			Иначе
				
				Если ПоНоменклатурнымГруппам Тогда
					
					Текст = Текст + "
					|ВЫБРАТЬ //РАЗЛИЧНЫЕ
					|	&ТипДанных" + НомерСтроки + " КАК ТипДанных,
					|	ВЫБОР КОГДА ПродажиОбороты.Номенклатура ЕСТЬ NULL ТОГДА
					|			ВЫБОР КОГДА ЭталонныеДанные.Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА
					|					ЭталонныеДанные.Номенклатура.НоменклатурнаяГруппа
					|				ИНАЧЕ
					|					ЭталонныеДанные.Номенклатура
					|				КОНЕЦ
					|		ИНАЧЕ
					|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа
					|		КОНЕЦ
					|	КАК Номенклатура,";
					
				Иначе
					
					Текст = Текст + "
					|ВЫБРАТЬ //РАЗЛИЧНЫЕ
					|	&ТипДанных" + НомерСтроки + " КАК ТипДанных,
					|	ВЫБОР КОГДА ПродажиОбороты.Номенклатура ЕСТЬ NULL ТОГДА
					|			ЭталонныеДанные.Номенклатура
					|		ИНАЧЕ
					|			ПродажиОбороты.Номенклатура
					|		КОНЕЦ
					|	КАК Номенклатура,
					|	ВЫБОР КОГДА ПродажиОбороты.ХарактеристикаНоменклатуры ЕСТЬ NULL ТОГДА
					|			ЭталонныеДанные.ХарактеристикаНоменклатуры
					|		ИНАЧЕ
					|			ПродажиОбороты.ХарактеристикаНоменклатуры
					|		КОНЕЦ
					|	КАК ХарактеристикаНоменклатуры,";
					
				КонецЕсли;
				
				Если ЭталонныйТипДанных = "Планы продаж" Тогда
					
					Текст = Текст + "
					|	СУММА(ПродажиОбороты.КоличествоОборот) КАК Количество,
					|	СУММА(ПродажиОбороты.СтоимостьОборот * &Коэффициент) КАК Стоимость,
					|	СУММА(ВЫБОР
					|			КОГДА ЭталонныеДанные.КоличествоОборот ЕСТЬ NULL ТОГДА
					|				ПродажиОбороты.КоличествоОборот
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.КоличествоОборот ЕСТЬ NULL ТОГДА
					|						- ЭталонныеДанные.КоличествоОборот
					|					ИНАЧЕ
					|						ПродажиОбороты.КоличествоОборот - ЭталонныеДанные.КоличествоОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК КоличествоОтклонение,
					|	СУММА(ВЫБОР
					|			КОГДА ЭталонныеДанные.СтоимостьОборот + ЭталонныеДанные.НДСОборот ЕСТЬ NULL ТОГДА
					|				ПродажиОбороты.СтоимостьОборот * &Коэффициент
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.СтоимостьОборот ЕСТЬ NULL ТОГДА
					|						(- ЭталонныеДанные.СтоимостьОборот - ЭталонныеДанные.НДСОборот) * &Коэффициент
					|					ИНАЧЕ
					|						(ПродажиОбороты.СтоимостьОборот - ЭталонныеДанные.СтоимостьОборот - ЭталонныеДанные.НДСОборот) * &Коэффициент
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК СтоимостьОтклонение,
					|	МАКСИМУМ(ВЫБОР
					|			КОГДА ЭталонныеДанные.КоличествоОборот ЕСТЬ NULL ИЛИ ЭталонныеДанные.КоличествоОборот = 0 ТОГДА
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.КоличествоОборот ЕСТЬ NULL ИЛИ ПродажиОбороты.КоличествоОборот = 0 ТОГДА
					|						0
					|					ИНАЧЕ
					|						100
					|					КОНЕЦ
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.КоличествоОборот ЕСТЬ NULL ИЛИ ПродажиОбороты.КоличествоОборот = 0 ТОГДА
					|						-100
					|					ИНАЧЕ
					|						(ПродажиОбороты.КоличествоОборот - ЭталонныеДанные.КоличествоОборот) * 100 / ЭталонныеДанные.КоличествоОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК КоличествоОтклонениеПроцент,
					|	МАКСИМУМ(ВЫБОР
					|			КОГДА ЭталонныеДанные.СтоимостьОборот + ЭталонныеДанные.НДСОборот ЕСТЬ NULL ИЛИ ЭталонныеДанные.СтоимостьОборот + ЭталонныеДанные.НДСОборот = 0 ТОГДА
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.СтоимостьОборот ЕСТЬ NULL ИЛИ ПродажиОбороты.СтоимостьОборот = 0 ТОГДА
					|						0
					|					ИНАЧЕ
					|						100
					|					КОНЕЦ
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.СтоимостьОборот ЕСТЬ NULL ИЛИ ПродажиОбороты.СтоимостьОборот = 0 ТОГДА
					|						-100
					|					ИНАЧЕ
					|						(ПродажиОбороты.СтоимостьОборот - ЭталонныеДанные.СтоимостьОборот - ЭталонныеДанные.НДСОборот) * 100 / (ЭталонныеДанные.СтоимостьОборот + ЭталонныеДанные.НДСОборот)
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК СтоимостьОтклонениеПроцент";
					
					Если ПоНоменклатурнымГруппам Тогда
						
						Текст = Текст + "
						|	//СВОЙСТВА_ФАКТИЧЕСКИЕПРОДАЖИ
						|ИЗ
						|	РегистрНакопления.Продажи.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
						|		Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа
						|		{Номенклатура.* КАК Номенклатура, Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, ДокументПродажи.* КАК ДокументПродажи}
						|	) КАК ПродажиОбороты
						|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач1, &ДатаКон1,,
						|			ВЫБОР КОГДА Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа ИНАЧЕ Истина КОНЕЦ
						|			{Номенклатура.* КАК Номенклатура, Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
						|		) КАК ЭталонныеДанные
						|			ПО ПродажиОбороты.Номенклатура = ЭталонныеДанные.Номенклатура
						|	//СОЕДИНЕНИЯ_ФАКТИЧЕСКИЕПРОДАЖИ";
						
					Иначе
						
						Текст = Текст + "
						|	//СВОЙСТВА_ФАКТИЧЕСКИЕПРОДАЖИ
						|ИЗ
						|	РегистрНакопления.Продажи.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
						|		Номенклатура ССЫЛКА Справочник.Номенклатура
						|		{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, ДокументПродажи.* КАК ДокументПродажи}
						|	) КАК ПродажиОбороты
						|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыПродаж.Обороты(&ДатаНач1, &ДатаКон1,,
						|			Номенклатура ССЫЛКА Справочник.Номенклатура
						|			{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, Сценарий.* КАК Сценарий, ДокументПланирования.* КАК ДокументПланирования}
						|		) КАК ЭталонныеДанные
						|			ПО ПродажиОбороты.Номенклатура = ЭталонныеДанные.Номенклатура
						|			И ПродажиОбороты.ХарактеристикаНоменклатуры = ЭталонныеДанные.ХарактеристикаНоменклатуры
						|	//СОЕДИНЕНИЯ_ФАКТИЧЕСКИЕПРОДАЖИ";
						
					КонецЕсли;
					
				ИначеЕсли ЭталонныйТипДанных = "Фактические продажи" Тогда
					
					Текст = Текст + "
					|	СУММА(ПродажиОбороты.КоличествоОборот) КАК Количество,
					|	СУММА(ПродажиОбороты.СтоимостьОборот * &Коэффициент) КАК Стоимость,
					|	СУММА(ВЫБОР
					|			КОГДА ЭталонныеДанные.КоличествоОборот ЕСТЬ NULL ТОГДА
					|				ПродажиОбороты.КоличествоОборот
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.КоличествоОборот ЕСТЬ NULL ТОГДА
					|						- ЭталонныеДанные.КоличествоОборот
					|					ИНАЧЕ
					|						ПродажиОбороты.КоличествоОборот - ЭталонныеДанные.КоличествоОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК КоличествоОтклонение,
					|	СУММА(ВЫБОР
					|			КОГДА ЭталонныеДанные.СтоимостьОборот ЕСТЬ NULL ТОГДА
					|				ПродажиОбороты.СтоимостьОборот * &Коэффициент
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.СтоимостьОборот ЕСТЬ NULL ТОГДА
					|						(- ЭталонныеДанные.СтоимостьОборот) * &Коэффициент
					|					ИНАЧЕ
					|						(ПродажиОбороты.СтоимостьОборот - ЭталонныеДанные.СтоимостьОборот) * &Коэффициент
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК СтоимостьОтклонение,
					|	МАКСИМУМ(ВЫБОР
					|			КОГДА ЭталонныеДанные.КоличествоОборот ЕСТЬ NULL ИЛИ ЭталонныеДанные.КоличествоОборот = 0 ТОГДА
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.КоличествоОборот ЕСТЬ NULL ИЛИ ПродажиОбороты.КоличествоОборот = 0 ТОГДА
					|						0
					|					ИНАЧЕ
					|						100
					|					КОНЕЦ
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.КоличествоОборот ЕСТЬ NULL ИЛИ ПродажиОбороты.КоличествоОборот = 0 ТОГДА
					|						-100
					|					ИНАЧЕ
					|						(ПродажиОбороты.КоличествоОборот - ЭталонныеДанные.КоличествоОборот) * 100 / ЭталонныеДанные.КоличествоОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК КоличествоОтклонениеПроцент,
					|	МАКСИМУМ(ВЫБОР
					|			КОГДА ЭталонныеДанные.СтоимостьОборот ЕСТЬ NULL ИЛИ ЭталонныеДанные.СтоимостьОборот = 0 ТОГДА
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.СтоимостьОборот ЕСТЬ NULL ИЛИ ПродажиОбороты.СтоимостьОборот = 0 ТОГДА
					|						0
					|					ИНАЧЕ
					|						100
					|					КОНЕЦ
					|			ИНАЧЕ
					|				ВЫБОР
					|					КОГДА ПродажиОбороты.СтоимостьОборот ЕСТЬ NULL ИЛИ ПродажиОбороты.СтоимостьОборот = 0 ТОГДА
					|						-100
					|					ИНАЧЕ
					|						(ПродажиОбороты.СтоимостьОборот - ЭталонныеДанные.СтоимостьОборот) * 100 / ЭталонныеДанные.СтоимостьОборот
					|					КОНЕЦ
					|			КОНЕЦ
					|	) КАК СтоимостьОтклонениеПроцент";
					
					Если ПоНоменклатурнымГруппам Тогда
						
						Текст = Текст + "
						|ИЗ
						|	РегистрНакопления.Продажи.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
						|		Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа
						|		{Номенклатура.* КАК Номенклатура, Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, ДокументПродажи.* КАК ДокументПродажи}
						|	) КАК ПродажиОбороты
						|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&ДатаНач1, &ДатаКон1,,
						|			Номенклатура.НоменклатурнаяГруппа <> &ПустаяСсылкаНоменклатурнаяГруппа
						|			{Номенклатура.* КАК Номенклатура, Номенклатура.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, ДокументПродажи.* КАК ДокументПродажи}
						|		) КАК ЭталонныеДанные
						|			ПО ПродажиОбороты.Номенклатура = ЭталонныеДанные.Номенклатура
						|	//СОЕДИНЕНИЯ_ФАКТИЧЕСКИЕПРОДАЖИ";
						
					Иначе
						
						Текст = Текст + "
						|ИЗ
						|	РегистрНакопления.Продажи.Обороты(&ДатаНач" + НомерСтроки + ", &ДатаКон" + НомерСтроки + ",,
						|		Номенклатура ССЫЛКА Справочник.Номенклатура
						|		{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, ДокументПродажи.* КАК ДокументПродажи}
						|	) КАК ПродажиОбороты
						|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&ДатаНач1, &ДатаКон1,,
						|			Номенклатура ССЫЛКА Справочник.Номенклатура
						|			{Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, ДокументПродажи.* КАК ДокументПродажи}
						|		) КАК ЭталонныеДанные
						|			ПО ПродажиОбороты.Номенклатура = ЭталонныеДанные.Номенклатура
						|			И ПродажиОбороты.ХарактеристикаНоменклатуры = ЭталонныеДанные.ХарактеристикаНоменклатуры
						|	//СОЕДИНЕНИЯ_ФАКТИЧЕСКИЕПРОДАЖИ";
						
					КонецЕсли;
					
				КонецЕсли;
				
				
				Если ПоНоменклатурнымГруппам Тогда
					
					Текст = Текст + "
					|
					|{ГДЕ
					|	ПродажиОбороты.Номенклатура.* КАК Номенклатура
					|	//СВОЙСТВА_ФАКТИЧЕСКИЕПРОДАЖИ
					|	//КАТЕГОРИИ_ФАКТИЧЕСКИЕПРОДАЖИ
					|}
					|
					|СГРУППИРОВАТЬ ПО
					|	ВЫБОР КОГДА ПродажиОбороты.Номенклатура ЕСТЬ NULL ТОГДА
					|			ВЫБОР КОГДА ЭталонныеДанные.Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА
					|					ЭталонныеДанные.Номенклатура.НоменклатурнаяГруппа
					|				ИНАЧЕ
					|					ЭталонныеДанные.Номенклатура
					|				КОНЕЦ
					|		ИНАЧЕ
					|			ПродажиОбороты.Номенклатура.НоменклатурнаяГруппа
					|		КОНЕЦ
					|	//СГРУППИРОВАТЬПО_ФАКТИЧЕСКИЕПРОДАЖИ";
					
				Иначе
					
					Текст = Текст + "
					|
					|{ГДЕ
					|	ПродажиОбороты.Номенклатура.* КАК Номенклатура,
					|	ПродажиОбороты.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры
					|	//СВОЙСТВА_ФАКТИЧЕСКИЕПРОДАЖИ
					|	//КАТЕГОРИИ_ФАКТИЧЕСКИЕПРОДАЖИ
					|}
					|
					|СГРУППИРОВАТЬ ПО
					|	ВЫБОР КОГДА ПродажиОбороты.Номенклатура ЕСТЬ NULL ТОГДА
					|			ЭталонныеДанные.Номенклатура
					|		ИНАЧЕ
					|			ПродажиОбороты.Номенклатура
					|		КОНЕЦ,
					|	ВЫБОР КОГДА ПродажиОбороты.ХарактеристикаНоменклатуры ЕСТЬ NULL ТОГДА
					|			ЭталонныеДанные.ХарактеристикаНоменклатуры
					|		ИНАЧЕ
					|			ПродажиОбороты.ХарактеристикаНоменклатуры
					|		КОНЕЦ
					|	//СГРУППИРОВАТЬПО_ФАКТИЧЕСКИЕПРОДАЖИ";
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Данные.НомерСтроки < ДанныеОтчета.Количество() Тогда
			
			Текст = Текст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеОтчета.Количество() > 0 Тогда
		
		Если ПоНоменклатурнымГруппам Тогда
			
			Текст = Текст + "
			|
			|{УПОРЯДОЧИТЬ ПО
			|	Номенклатура.*
			|	//СВОЙСТВА_ОБЩИЕ
			|}
			|
			|ИТОГИ СУММА(Количество), СУММА(Стоимость), СУММА(КоличествоОтклонение), СУММА(СтоимостьОтклонение), СРЕДНЕЕ(КоличествоОтклонениеПроцент), СРЕДНЕЕ(СтоимостьОтклонениеПроцент)
			|	ПО ОБЩИЕ,
			|	ТипДанных,
			|	Номенклатура ИЕРАРХИЯ
			|	
			|{ИТОГИ ПО
			|	ТипДанных,
			|	Номенклатура.*
			|	//СВОЙСТВА_ОБЩИЕ
			|}
			|";
			
		Иначе
			
			Текст = Текст + "
			|
			|{УПОРЯДОЧИТЬ ПО
			|	Номенклатура.*,
			|	ХарактеристикаНоменклатуры.*
			|	//СВОЙСТВА_ОБЩИЕ
			|}
			|
			|ИТОГИ СУММА(Количество), СУММА(Стоимость), СУММА(КоличествоОтклонение), СУММА(СтоимостьОтклонение), СРЕДНЕЕ(КоличествоОтклонениеПроцент), СРЕДНЕЕ(СтоимостьОтклонениеПроцент)
			|	ПО ОБЩИЕ,
			|	ТипДанных,
			|	Номенклатура ИЕРАРХИЯ,
			|	ХарактеристикаНоменклатуры
			|	
			|{ИТОГИ ПО
			|	ТипДанных,
			|	Номенклатура.*,
			|	ХарактеристикаНоменклатуры.*
			|	//СВОЙСТВА_ОБЩИЕ
			|}
			|";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции // ПолучитьТекстЗапроса()

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	НовСтрока = ДанныеОтчета.Добавить();
	НовСтрока.ТипДанных = "Планы продаж";
	
	НовСтрока = ДанныеОтчета.Добавить();
	НовСтрока.ТипДанных = "Фактические продажи";
	
	Если ДанныеОтчета.Количество() = 0 Тогда
		Предупреждение("Не заполнены данные отчета!");
		Возврат;	
	Иначе
		Для каждого Строка из ДанныеОтчета Цикл
			Если ЗначениеНеЗаполнено(Строка.ТипДанных) Тогда
				Предупреждение("Не заполнен тип в данных отчета!");
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	МассивОтбора = Новый Массив;
	ОбщийОтчет.мСоответствиеНазначений = Новый Соответствие;
	ОбщийОтчет.мСтруктураДляОтбораПоКатегориям = Новый Структура;

	ТекстЗапроса = ПолучитьТекстЗапроса();
	
	СтруктураПредставлениеПолей = Новый Структура(
	"Номенклатура,
	|НоменклатурнаяГруппа,
	|ХарактеристикаНоменклатуры,
	|ДокументПланирования,
	|ДокументПродажи,
	|ТипДанных",
	"Номенклатура",
	"Номенклатурная группа",
	"Характеристика номенклатуры",
	"Документ планирования",
	"Документ продажи",
	"Источник данных");
	
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории = Истина Тогда
		
		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и
													   // категории. Используется в условии соединения с регистром сведений,
													   // хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
		
		//планы продаж
		ТаблицаПолей.Очистить();
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПланыПродажОбороты.Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПланыПродажОбороты.ДокументПланирования";
		СтрокаТаблицы.Представление = "Контрагенты";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПланыПродажОбороты.ДокументПланирования";
		СтрокаТаблицы.Представление = "Документ планирования, документ продажи";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы;
		
		ТекстПоляКатегорий = "";
		ТекстПоляСвойств = "";

		ДобавитьВТекстСвойстваИКатегорииЛокально(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ПЛАНЫПРОДАЖ", "//КАТЕГОРИИ_ПЛАНЫПРОДАЖ", "//СОЕДИНЕНИЯ_ПЛАНЫПРОДАЖ", "//СГРУППИРОВАТЬПО_ПЛАНЫПРОДАЖ", ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);
		
		//фактические продажи
		ТаблицаПолей.Очистить();
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПродажиОбороты.Номенклатура";
		СтрокаТаблицы.Представление = "Номенклатура";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПродажиОбороты.ДоговорКонтрагента.Владелец";
		СтрокаТаблицы.Представление = "Контрагенты";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты;
		
		СтрокаТаблицы = ТаблицаПолей.Добавить();
		СтрокаТаблицы.ПутьКДанным = "ПродажиОбороты.ДокументПродажи";
		СтрокаТаблицы.Представление = "Документ планирования, документ продажи";
		СтрокаТаблицы.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы;
		
		ТекстПоляКатегорий = "";
		ТекстПоляСвойств = "";

		ДобавитьВТекстСвойстваИКатегорииЛокально(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,, "//СВОЙСТВА_ФАКТИЧЕСКИЕПРОДАЖИ", "//КАТЕГОРИИ_ФАКТИЧЕСКИЕПРОДАЖИ", "//СОЕДИНЕНИЯ_ФАКТИЧЕСКИЕПРОДАЖИ", "//СГРУППИРОВАТЬПО_ФАКТИЧЕСКИЕПРОДАЖИ", ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);
				
		ДобавитьВТекстСвойстваОбщие(ТекстЗапроса, ТекстПоляСвойств, "//СВОЙСТВА_ОБЩИЕ");

	КонецЕсли;
	
	ПостроительОтчета.Текст = ТекстЗапроса;
	
	ПостроительОтчета.ДоступныеПоля.Номенклатура.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Номенклатура");
	
	Если Детализация = Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
		МассивОтбора.Добавить("НоменклатурнаяГруппа");
		ПостроительОтчета.ДоступныеПоля.НоменклатурнаяГруппа.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы");
	Иначе
		МассивОтбора.Добавить("ХарактеристикаНоменклатуры");
	КонецЕсли;
	
	//ТипДанных в измерения колонки
	ИзмерениеТипДанных = ПостроительОтчета.ИзмеренияСтроки.Найти("ТипДанных");
	Если ИзмерениеТипДанных <> Неопределено Тогда
		ПутьКДанным = ИзмерениеТипДанных.ПутьКДанным;
		ТипИзмерения = ИзмерениеТипДанных.ТипИзмерения;
		ПостроительОтчета.ИзмеренияСтроки.Удалить(ИзмерениеТипДанных);
		ПостроительОтчета.ИзмеренияКолонки.Добавить(ПутьКДанным, , ТипИзмерения);
	КонецЕсли;
	
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории = Истина Тогда
		УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, ОбщийОтчет.мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;
	
	Если ОбщийОтчет.Показатели.Найти("Количество", "Имя") = Неопределено Тогда
		ОбщийОтчет.ЗаполнитьПоказатели("Количество", "Количество (в единицах хранения)", Истина, "ЧЦ=15; ЧДЦ=3");
	КонецЕсли;
	Если ОбщийОтчет.Показатели.Найти("Стоимость", "Имя") = Неопределено Тогда
		ОбщийОтчет.ЗаполнитьПоказатели("Стоимость", "Сумма", Истина, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	Если ОбщийОтчет.Показатели.Найти("КоличествоОтклонение", "Имя") = Неопределено Тогда
		ОбщийОтчет.ЗаполнитьПоказатели("КоличествоОтклонение", "Отклонение количества (в единицах хранения)", Ложь, "ЧЦ=15; ЧДЦ=3");
	КонецЕсли;
	Если ОбщийОтчет.Показатели.Найти("СтоимостьОтклонение", "Имя") = Неопределено Тогда
		ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьОтклонение", "Отклонение суммы", Ложь, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	Если ОбщийОтчет.Показатели.Найти("КоличествоОтклонениеПроцент", "Имя") = Неопределено Тогда
		ОбщийОтчет.ЗаполнитьПоказатели("КоличествоОтклонениеПроцент", "Отклонение количества %", Ложь, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	Если ОбщийОтчет.Показатели.Найти("СтоимостьОтклонениеПроцент", "Имя") = Неопределено Тогда
		ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьОтклонениеПроцент", "Отклонение суммы %", Ложь, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("Количество", Новый Структура("ТипДанных"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("Стоимость", Новый Структура("ТипДанных"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("КоличествоОтклонение", Новый Структура("ТипДанных"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СтоимостьОтклонение", Новый Структура("ТипДанных"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("КоличествоОтклонениеПроцент", Новый Структура("ТипДанных"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СтоимостьОтклонениеПроцент", Новый Структура("ТипДанных"));
	
	ОбщийОтчет.мНазваниеОтчета = "План - фактный анализ продаж";
	
	ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.РаскрашиватьИзмерения = Истина;
	
	// Установим дату начала отчета
	Если Не ЗначениеНеЗаполнено(глТекущийПользователь) Тогда
		ОбщийОтчет.ДатаНач = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьНачальныеНастройки()

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт
	
	ВалютаУпр = ПолучитьКурсВалюты(Константы.ВалютаУправленческогоУчета.Получить(), ОбщийОтчет.ДатаКон);
	ВалютаРег = ПолучитьКурсВалюты(Константы.ВалютаРегламентированногоУчета.Получить(), ОбщийОтчет.ДатаКон);
	
	Если ВВалютеРегламентированногоУчета Тогда
		Коэффициент = (ВалютаУпр.Курс * ВалютаРег.Кратность) / (ВалютаРег.Курс * ВалютаУпр.Кратность);
	Иначе
		Коэффициент = 1;
	КонецЕсли;
	
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Коэффициент",  Коэффициент);
	
	Для каждого Данные из ДанныеОтчета Цикл
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ТипДанных" + Данные.НомерСтроки, ПолучитьПредставлениеДанных(Данные));
		Если Данные.ДатаНач = '00010101000000' И Данные.ДатаКон = '00010101000000' Тогда
			ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач" + Данные.НомерСтроки, ОбщийОтчет.ДатаНач);
			ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон" + Данные.НомерСтроки, ОбщийОтчет.ДатаКон);
		Иначе
			ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач" + Данные.НомерСтроки, Данные.ДатаНач);
			ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон" + Данные.НомерСтроки, Данные.ДатаКон);
		КонецЕсли;
	КонецЦикла;
	
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ПустаяСсылкаНоменклатурнаяГруппа", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);
	
	Если ОбщийОтчет.ВыводитьПоказателиВСтроку Тогда
		
		РезультатПоиска = ДокументРезультат.НайтиТекст("Эталонный период");
		
		Если РезультатПоиска <> Неопределено Тогда
			
			УдаляемыеСтолбцы = Новый Массив;
			Индекс = 0;
			
			Для каждого Показатель из ОбщийОтчет.Показатели Цикл
				
				Если Показатель.Использование И
					(Показатель.Имя = "КоличествоОтклонение" ИЛИ
					Показатель.Имя = "СтоимостьОтклонение" ИЛИ
					Показатель.Имя = "КоличествоОтклонениеПроцент"
					ИЛИ Показатель.Имя = "СтоимостьОтклонениеПроцент") Тогда
					
					УдаляемыеСтолбцы.Добавить(РезультатПоиска.Лево + Индекс);
					
				КонецЕсли;
				
				Если Показатель.Использование Тогда
					
					Индекс = Индекс + 1;
					
				КонецЕсли;

			КонецЦикла;
			
			Индекс = УдаляемыеСтолбцы.Количество() - 1;
			
			Пока Индекс >= 0 Цикл
				
				УдаляемаяОбласть = ДокументРезультат.Область(, УдаляемыеСтолбцы[Индекс],, УдаляемыеСтолбцы[Индекс]);
				ДокументРезультат.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				
				Индекс = Индекс - 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПРоцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт
	
	ВВалютеРегламентированногоУчета = Параметры["ЭтотОтчет"].ВВалютеРегламентированногоУчета;
	Детализация = Параметры["ЭтотОтчет"].Детализация;
	ДанныеОтчета.Загрузить(Параметры["ЭтотОтчет"].ДанныеОтчета.Выгрузить());

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший порцедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры
