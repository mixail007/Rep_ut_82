
Процедура ОтчетСформировать(Кнопка) Экспорт
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	Если СезонныйЗаказ.Подразделение.ВЭД Тогда
		
		ОтчетВЭД(ТабДок);
		
	иначе
		
		Отчет(ТабДок);
		
	КонецЕсли;

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ_ПРОЦЕДУРА_ВЫЗОВА
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	// не даем выбирать другие сезонные заказы
	Если ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "УчетТолькоПоПодразделениюПользователя") Тогда
		ЭлементыФормы.СезонныйЗаказ.Доступность = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если не СезонныйЗаказ.Подразделение.ВЭД Тогда
		
		Если Найти (Элемент.ТекущаяОбласть.Имя, "C8") > 0  //было 13
			или  Найти (Элемент.ТекущаяОбласть.Имя, "C9") > 0 Тогда   // Колонка "Товары в пути"  //было 14
			СтандартнаяОбработка=Ложь;
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	вложенный.ДатаПоступления КАК ДатаПоступления,
			|	вложенный.ЗаказПоставщику,
			|	вложенный.ОтветственноеЛицо,
			|	вложенный.Номенклатура КАК Номенклатура,
			|	СУММА(вложенный.КоличествоОстаток) КАК КоличествоОстаток
			|ИЗ
			|	(ВЫБРАТЬ
			|		ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA КАК ДатаПоступления,
			|		ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
			|		ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
			|		ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
			|		ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
			|	ИЗ
			|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
			|				,
			|				Номенклатура = &Номенклатура И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
			|					И НЕ ЗаказПоставщику.Транзит
			|					И (( ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДатаКон) или ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA = ДатаВремя(1,1,1)) ) КАК ЗаказыПоставщикамОстатки
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо,
			|		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный,
			|		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДоговорКонтрагента.ОтветственноеЛицо,
			|		ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
			|		ВЫБОР
			|			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток <= 0
			|				ТОГДА 0
			|			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
			|		КОНЕЦ
			|	ИЗ
			|		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
			|				,
			|				Номенклатура = &Номенклатура И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
			|					И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) >= &ТекДата 
			|					И НЕ ЗаказПоставщикуСезонный.Транзит) КАК ЗаказыПоставщикамСезонныеОстатки) КАК вложенный
			|
			|СГРУППИРОВАТЬ ПО
			|	вложенный.ОтветственноеЛицо,
			|	вложенный.ЗаказПоставщику,
			|	вложенный.Номенклатура,
			|	вложенный.ДатаПоступления
			|
			|УПОРЯДОЧИТЬ ПО
			|	вложенный.ДатаПоступления
			|ИТОГИ
			|	МАКСИМУМ(ДатаПоступления),
			|	СУММА(КоличествоОстаток)
			|ПО
			|	Номенклатура";
			
			//Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
			Запрос.УстановитьПараметр("ПустаяДата", '00010101');
			Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачДата) );
			Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонДата));
			Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );
			
			Запрос.УстановитьПараметр("Номенклатура", Расшифровка); 		
			
			
			
			//ТаблицаТоварыВПути=Запрос.Выполнить().Выгрузить();
			//ТаблицаТоварыВПути.ВыбратьСтроку();
			ТабДок = Новый ТабличныйДокумент;
			
			ВыборкаИтого=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Макет=ПолучитьМакет("ТоварыВПути");	
			ОбластьИтого=Макет.ПолучитьОбласть("Итого");
			
			Если ВыборкаИтого.Количество()>0 Тогда
				ВыборкаИтого.Следующий(); // итоги есть!
				ОбластьИтого.Параметры.ДатаПоступления = ВыборкаИтого.ДатаПоступления;
				ОбластьИтого.Параметры.КоличествоОстаток = ВыборкаИтого.КоличествоОстаток;
				ОбластьИтого.Параметры.Комментарий =ВыборкаИтого.Номенклатура.Код;
				ОбластьИтого.Параметры.ЗаказПоставщику = ВыборкаИтого.Номенклатура;
				
				Выборка	= ВыборкаИтого.Выбрать();
				
				Если Выборка.Количество()>0 Тогда
					ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
					ТабДок.Вывести(ОбластьШапка);
					Пока Выборка.Следующий() Цикл
						ОбластьДетали=Макет.ПолучитьОбласть("Детали");
						ОбластьДетали.Параметры.Заполнить(Выборка);
						ОбластьДетали.Параметры.Комментарий=Выборка.ЗаказПоставщику.Комментарий;
						ТабДок.Вывести(ОбластьДетали);
					КонецЦикла;	
				КонецЕсли; //Выборка
				
				ТабДок.Вывести(ОбластьИтого);
			КонецЕсли; //ВыборкаИтого
			
			ТабДок.ТолькоПросмотр=Истина;		
			ТабДок.Показать();
			
		КонецЕсли;	
		
		Если Найти (Элемент.ТекущаяОбласть.Имя, "C10") > 0 //было15
			или Найти (Элемент.ТекущаяОбласть.Имя, "C11") > 0  Тогда   // Колонка "Товары в пути ТРАНЗИТ"  //было 16
			СтандартнаяОбработка=Ложь;
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA КАК ДатаПоступления,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
			|	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
			|	СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоОстаток
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
			|			,
			|			Номенклатура = &Номенклатура
			|				И ЗаказПоставщику.Транзит И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
			|				И ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДатаКон
			|				И (ЗаказПоставщику.Подразделение = &Подразделение
			|					ИЛИ ЗаказПоставщику.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))) КАК ЗаказыПоставщикамОстатки
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаказыПоставщикамОстатки.Номенклатура,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA,
			|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо,
			|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный,
			|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДоговорКонтрагента.ОтветственноеЛицо,
			|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
			|	СУММА(ВЫБОР
			|			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток <= 0
			|				ТОГДА 0
			|			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
			|		КОНЕЦ)
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
			|			,
			|			ЗаказПоставщикуСезонный.Транзит И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
			|				И Номенклатура = &Номенклатура
			|				И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) >= &ТекДата
			|				И (ЗаказПоставщикуСезонный.Подразделение = &Подразделение
			|					ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))) КАК ЗаказыПоставщикамСезонныеОстатки
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
			|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный,
			|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо,
			|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДоговорКонтрагента.ОтветственноеЛицо
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаПоступления
			|ИТОГИ
			|	МАКСИМУМ(ДатаПоступления),
			|	СУММА(КоличествоОстаток)
			|ПО
			|	Номенклатура";
			
			//	Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
			Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачДата) );
			Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонДата));
			Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );//+++ 02.04.2014
			
			//+++ 14.10.2014
			//Филиал = яштПоставщики.ПолучитьМассивФилиалов();
			//Если ВидСклада<Филиал.Количество() тогда
			//	Подразделение=Филиал[ВидСклада];
			//КонецЕсли;	
			Если ВидСклада=0 тогда
				Подразделение=Справочники.Подразделения.ПустаяСсылка();
			ИначеЕсли ВидСклада=1 тогда
				Подразделение=Справочники.Подразделения.НайтиПоКоду("00106");
			ИначеЕсли ВидСклада=2 тогда
				Подразделение=Справочники.Подразделения.НайтиПоКоду("00112");	
			ИначеЕсли ВидСклада=3 Тогда
				//	Подразделение=Справочники.Подразделения.НайтиПоКоду("00122");	
				Подразделение=Справочники.Подразделения.НайтиПоКоду("00138");	
			КонецЕсли;
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
			
			Запрос.УстановитьПараметр("Номенклатура", Расшифровка); 
			
			
			//ТаблицаТоварыВПути=Запрос.Выполнить().Выгрузить();
			//ТаблицаТоварыВПути.ВыбратьСтроку();
			ТабДок = Новый ТабличныйДокумент;
			
			ВыборкаИтого=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Макет=ПолучитьМакет("ТоварыВПути");	
			ОбластьИтого=Макет.ПолучитьОбласть("Итого");
			
			Если ВыборкаИтого.Количество()>0 Тогда
				ВыборкаИтого.Следующий(); // итоги есть!
				ОбластьИтого.Параметры.ДатаПоступления = ВыборкаИтого.ДатаПоступления;
				ОбластьИтого.Параметры.КоличествоОстаток = ВыборкаИтого.КоличествоОстаток;
				ОбластьИтого.Параметры.Комментарий =ВыборкаИтого.Номенклатура.Код;
				ОбластьИтого.Параметры.ЗаказПоставщику = ВыборкаИтого.Номенклатура;
				
				
				Выборка	= ВыборкаИтого.Выбрать();
				
				Если Выборка.Количество()>0 Тогда
					ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
					ТабДок.Вывести(ОбластьШапка);
					Пока Выборка.Следующий() Цикл
						ОбластьДетали=Макет.ПолучитьОбласть("Детали");
						ОбластьДетали.Параметры.Заполнить(Выборка);
						ОбластьДетали.Параметры.Комментарий=Выборка.ЗаказПоставщику.Комментарий;
						ТабДок.Вывести(ОбластьДетали);
					КонецЦикла;	
				КонецЕсли; //Выборка
				
				ТабДок.Вывести(ОбластьИтого);
				
			КонецЕсли; //ВыборкаИтого
			
			ТабДок.ТолькоПросмотр=Истина;		
			ТабДок.Показать();
			
		КонецЕсли;	
		
		Если Найти (Элемент.ТекущаяОбласть.Имя, "C16") > 0   Тогда   
			СтандартнаяОбработка=Ложь;
			ТабДок = Новый ТабличныйДокумент;
			Макет=ПолучитьМакет("ЗаказаноДругими");	
			ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
			ТабДок.Вывести(ОбластьШапка);
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаказыПокупателейСезонныеОстатки.ЗаказПокупателяСезонный КАК Заказ,
			|	ЗаказыПокупателейСезонныеОстатки.КоличествоОстаток КАК Остаток,
			|	ЗаказыПокупателейСезонныеОстатки.Контрагент
			|ИЗ
			|	РегистрНакопления.ЗаказыПокупателейСезонные.Остатки(
			|			,
			|			ЗаказПокупателяСезонный <> &Ссылка
			|				И Номенклатура = &Номенклатура и естьNull(Подразделение.ВЭД,ЛОЖЬ)=ложь) КАК ЗаказыПокупателейСезонныеОстатки
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЗаказыПокупателейСезонныеОстатки.ЗаказПокупателяСезонный.Дата";
			
			Запрос.УстановитьПараметр("Ссылка", СезонныйЗаказ);
			Запрос.УстановитьПараметр("Номенклатура", Расшифровка);
			Результат = Запрос.Выполнить();
			
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ОбластьДетали=Макет.ПолучитьОбласть("Строка");
				ОбластьДетали.Параметры.Заполнить(Выборка);
				ТабДок.Вывести(ОбластьДетали);
			КонецЦикла;
			ТабДок.ТолькоПросмотр=Истина;		
			ТабДок.Показать();
		конецЕсли;
		
	Иначе
		
		Если Найти (Элемент.ТекущаяОбласть.Имя, "C8") > 0  тогда//было 13
			СтандартнаяОбработка=Ложь;
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщику,
			             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
			             |	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо КАК ДатаПоступления,
			             |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
			             |	ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоОстаток
			             |ИЗ
			             |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
			             |			,
			             |			ЗаказПоставщикуСезонный.ДокументОснование = &ссылка
			             |				И Номенклатура = &Номенклатура) КАК ЗаказыПоставщикамСезонныеОстатки
			             |ИТОГИ
			             |	МАКСИМУМ(ДатаПоступления),
			             |	СУММА(КоличествоОстаток)
			             |ПО
			             |	Номенклатура";
			
			//Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
			//Запрос.УстановитьПараметр("ПустаяДата", '00010101');
			//Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачДата) );
			//Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонДата));
			Запрос.УстановитьПараметр("Ссылка", СезонныйЗаказ );
			////
			Запрос.УстановитьПараметр("Номенклатура", Расшифровка); 		
			
			
			
			//ТаблицаТоварыВПути=Запрос.Выполнить().Выгрузить();
			//ТаблицаТоварыВПути.ВыбратьСтроку();
			ТабДок = Новый ТабличныйДокумент;
			
			ВыборкаИтого=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Макет=ПолучитьМакет("ТоварыВПути");	
			ОбластьИтого=Макет.ПолучитьОбласть("Итого");
			
			Если ВыборкаИтого.Количество()>0 Тогда
				ВыборкаИтого.Следующий(); // итоги есть!
				ОбластьИтого.Параметры.ДатаПоступления = ВыборкаИтого.ДатаПоступления;
				ОбластьИтого.Параметры.КоличествоОстаток = ВыборкаИтого.КоличествоОстаток;
				ОбластьИтого.Параметры.Комментарий =ВыборкаИтого.Номенклатура.Код;
				ОбластьИтого.Параметры.ЗаказПоставщику = ВыборкаИтого.Номенклатура;
				
				Выборка	= ВыборкаИтого.Выбрать();
				
				Если Выборка.Количество()>0 Тогда
					ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
					ТабДок.Вывести(ОбластьШапка);
					Пока Выборка.Следующий() Цикл
						ОбластьДетали=Макет.ПолучитьОбласть("Детали");
						ОбластьДетали.Параметры.Заполнить(Выборка);
						ОбластьДетали.Параметры.Комментарий=Выборка.ЗаказПоставщику.Комментарий;
						ТабДок.Вывести(ОбластьДетали);
					КонецЦикла;	
				КонецЕсли; //Выборка
				
				ТабДок.Вывести(ОбластьИтого);
			КонецЕсли; //ВыборкаИтого
			
			ТабДок.ТолькоПросмотр=Истина;		
			ТабДок.Показать();
			
		КонецЕсли;		
		
		
		Если Найти (Элемент.ТекущаяОбласть.Имя, "C7") > 0  тогда//было 13
			СтандартнаяОбработка=Ложь;
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
			             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДоговорКонтрагента.ОтветственноеЛицо КАК ОтветственноеЛицо,
			             |	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата КАК ДатаПоступления,
			             |	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
			             |	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
			             |ИЗ
			             |	РегистрНакопления.ЗаказыПоставщикам.Остатки(
			             |			,
			             |			ЗаказПоставщику.Основание.ДокументОснование = &ссылка
			             |				И Номенклатура = &Номенклатура) КАК ЗаказыПоставщикамОстатки
			             |ИТОГИ
			             |	МАКСИМУМ(ДатаПоступления),
			             |	СУММА(КоличествоОстаток)
			             |ПО
			             |	Номенклатура";
			
			//Запрос.УстановитьПараметр("СвойствоДатаПоступленияВПорт", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("90160")); 
			//Запрос.УстановитьПараметр("ПустаяДата", '00010101');
			//Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачДата) );
			//Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонДата));
			Запрос.УстановитьПараметр("Ссылка", СезонныйЗаказ );
			////
			Запрос.УстановитьПараметр("Номенклатура", Расшифровка); 		
			
			
			
			//ТаблицаТоварыВПути=Запрос.Выполнить().Выгрузить();
			//ТаблицаТоварыВПути.ВыбратьСтроку();
			ТабДок = Новый ТабличныйДокумент;
			
			ВыборкаИтого=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Макет=ПолучитьМакет("ТоварыВПути");	
			ОбластьИтого=Макет.ПолучитьОбласть("Итого");
			
			Если ВыборкаИтого.Количество()>0 Тогда
				ВыборкаИтого.Следующий(); // итоги есть!
				ОбластьИтого.Параметры.ДатаПоступления = ВыборкаИтого.ДатаПоступления;
				ОбластьИтого.Параметры.КоличествоОстаток = ВыборкаИтого.КоличествоОстаток;
				ОбластьИтого.Параметры.Комментарий =ВыборкаИтого.Номенклатура.Код;
				ОбластьИтого.Параметры.ЗаказПоставщику = ВыборкаИтого.Номенклатура;
				
				Выборка	= ВыборкаИтого.Выбрать();
				
				Если Выборка.Количество()>0 Тогда
					ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
					ТабДок.Вывести(ОбластьШапка);
					Пока Выборка.Следующий() Цикл
						ОбластьДетали=Макет.ПолучитьОбласть("Детали");
						ОбластьДетали.Параметры.Заполнить(Выборка);
						ОбластьДетали.Параметры.Комментарий=Выборка.ЗаказПоставщику.Комментарий;
						ТабДок.Вывести(ОбластьДетали);
					КонецЦикла;	
				КонецЕсли; //Выборка
				
				ТабДок.Вывести(ОбластьИтого);
			КонецЕсли; //ВыборкаИтого
			
			ТабДок.ТолькоПросмотр=Истина;		
			ТабДок.Показать();
			
		КонецЕсли;		

		
	КонецЕсли;
	
КонецПроцедуры

Процедура Отчет(ТабДок) Экспорт
	Если СезонныйЗаказ.СУчетомАналогов Тогда
	ОтчетСАналогами(ТабДок);
	возврат;
	конецЕсли;

    //--------------анализ по остаткам на складах БЕЗ учета ОТХ?!--------------------------
	
	Если ЗначениеНеЗаполнено(СезонныйЗаказ) Тогда
		Сообщить("Необходимо выбрать сезонный заказ для анализа!");
		Возврат;
	КонецЕсли;	
	
Если ВидСклада = 0 тогда // отчет по филиалам
	Макет = ПолучитьМакет("НовыйОтчет");
Иначе	
	Макет = ПолучитьМакет("НовыйОтчет"); //+++ 13.10.2014   10я столбец
КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
				  	Запрос.Текст =
					
					"ВЫБРАТЬ
					|	СУММА(ВЫБОР
					|			КОГДА ЗаказыПокупателейСезонныеОбороты.ВРезерве = ЛОЖЬ
					|					И ЗаказыПокупателейСезонныеОбороты.КоличествоПриход > 0
					|				ТОГДА ЗаказыПокупателейСезонныеОбороты.КоличествоПриход
					|			ИНАЧЕ 0
					|		КОНЕЦ) КАК Запланировано,
					|	СУММА(ВЫБОР
					|			КОГДА ЗаказыПокупателейСезонныеОбороты.ВРезерве = ЛОЖЬ
					|					И ЗаказыПокупателейСезонныеОбороты.КоличествоПриход< 0
					|				ТОГДА -ЗаказыПокупателейСезонныеОбороты.КоличествоПриход
					|			ИНАЧЕ 0
					|		КОНЕЦ) КАК Закрыто,
					
					|	СУММА(ВЫБОР
					|			КОГДА ЗаказыПокупателейСезонныеОбороты.ВРезерве
					|					И ЗаказыПокупателейСезонныеОбороты.КоличествоПриход > 0
					|				ТОГДА ЗаказыПокупателейСезонныеОбороты.КоличествоПриход
					|			ИНАЧЕ 0
					|		КОНЕЦ) КАК Отгружено,
					|	СУММА(ВЫБОР
					|			КОГДА ЗаказыПокупателейСезонныеОбороты.ВРезерве
					|				ТОГДА -ЗаказыПокупателейСезонныеОбороты.КоличествоОборот
					|			ИНАЧЕ 0
					|		КОНЕЦ) КАК ЗаказаноКонтрагентом,
					|	ЗаказыПокупателейСезонныеОбороты.Номенклатура,
					|	ЗаказыПокупателейСезонныеОбороты.ЗаказПокупателяСезонный КАК Ссылка
					|ПОМЕСТИТЬ СЗТовары
					|ИЗ
					|	РегистрНакопления.ЗаказыПокупателейСезонные.Обороты(, , , ЗаказПокупателяСезонный = &ссылка) КАК ЗаказыПокупателейСезонныеОбороты
					|
					|СГРУППИРОВАТЬ ПО
					|	ЗаказыПокупателейСезонныеОбороты.Номенклатура,
					|	ЗаказыПокупателейСезонныеОбороты.ЗаказПокупателяСезонный
					|;
					|////////////////////////////////////////////////////////////////////////////////
					|	 ВЫБРАТЬ
					
					|	СУММА(ВЫБОР
					|			КОГДА а.КоличествоВпроизводстве < 0
					|				ТОГДА 0
					|			ИНАЧЕ а.КоличествоВпроизводстве
					|		КОНЕЦ) КАК КоличествоВПроизводстве,
					|	а.Номенклатура
					|ПОМЕСТИТЬ ВТ_ТоварыВПроизводстве
					|ИЗ
					|	(ВЫБРАТЬ
					|		ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоВпроизводстве,
					|		ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
					|		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный
					|	ИЗ
					|		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
					|				,
					|				НЕ ЗаказПоставщикуСезонный.Транзит И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
					|					И  ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки) КАК а
					|
					|СГРУППИРОВАТЬ ПО
					|	а.Номенклатура
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	СУММА(ВЫБОР
					|			КОГДА б.КоличествоВпроизводстве < 0
					|				ТОГДА 0
					|			ИНАЧЕ б.КоличествоВпроизводстве
					|		КОНЕЦ) КАК КоличествоВпроизводстве,
					|	б.Номенклатура
					|ПОМЕСТИТЬ ВТ_ТоварыВПроизводствеТ
					|ИЗ
					|	(ВЫБРАТЬ
					|		ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоВпроизводстве,
					|		ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
					|		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный
					|	ИЗ
					|		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
					|				,
					|				ЗаказПоставщикуСезонный.Транзит И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
					|                  и ЗаказПоставщикуСезонный = &Ссылка
					|                  и ЗаказПоставщикуСезонный.Грузополучатель = &Контрагент
					|					И (ЗаказПоставщикуСезонный.Подразделение = &Подразделение
					|						ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
					|					И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки) КАК б
					|
					|СГРУППИРОВАТЬ ПО
					|	б.Номенклатура
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|ЗаказыПокупателейСезонныеОстатки.Номенклатура,
					|ЗаказыПокупателейСезонныеОстатки.КоличествоОстаток
					|ПОМЕСТИТЬ ВСЗостальных
					|ИЗ
					|	РегистрНакопления.ЗаказыПокупателейСезонные.Остатки(, ЗаказПокупателяСезонный <> &ссылка и естьNull(Подразделение.ВЭД,ЛОЖЬ)=ложь) КАК ЗаказыПокупателейСезонныеОстатки
					|;
					
					
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ различные
					| СЗТовары.Номенклатура КАК Номенклатура,
					| СЗТовары.Номенклатура.Код КАК Код,
					| СЗТовары.Запланировано,
					| СЗТовары.Закрыто,
					| СЗТовары.Отгружено,
					| СЗТовары.ЗаказаноКонтрагентом,
					| ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) КАК Заказано,
					| ЕстьNull(ВСЗостальных.КоличествоОстаток,0) КАК ЗаказаноОстальными,
					| СЗТовары.Запланировано - СЗТовары.Отгружено - СЗТовары.ЗаказаноКонтрагентом КАК ОсталосьЗаказать,
					|	ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0) КАК ОстатокНаСкладах,
					//+++ 13.10.2014
					|//_ОстаткиФилЯр ЕСТЬNULL(ОстаткиТоваров.КоличествоОстатокЯШТ,0) как СвободныйОстатокЯШТ,
					|	ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) КАК СвободныйОстаток,
					|	ЕСТЬNULL(ТоварыВПути.КоличествоОстаток, 0) КАК КоличествоЗаказаноУПоставщика,
					
					|	 ЕстьNULL(ВЫБОР
					|		КОГДА ВТ_ТоварыВПроизводстве.КоличествоВпроизводстве <= 0
					|			ТОГДА 0
					|		ИНАЧЕ ВТ_ТоварыВПроизводстве.КоличествоВпроизводстве
					|	КОНЕЦ,0) КАК КоличествоЗаказаноУПоставщикаПр,
					
					|	ЕСТЬNULL(ТоварыВПутиТ.КоличествоОстаток, 0) КАК КоличествоЗаказаноУПоставщика2,
					
					|	ЕстьNULL(ВЫБОР КОГДА ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве <= 0
					|			ТОГДА 0
					|		    ИНАЧЕ ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве
					|	КОНЕЦ,0) КАК КоличествоЗаказаноУПоставщика2Пр
					//+++)
					
					|ИЗ
					|	СЗТовары КАК СЗТовары
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
					|				,
					|				ЗаказПокупателя.Проверен
					|					И (&Транзит
					|							И ЗаказПокупателя.Транзит
					|							И ЗаказПокупателя.Подразделение = &Подразделение
					|						ИЛИ НЕ &Транзит
					|							И НЕ ЗаказПокупателя.Транзит)) КАК ЗаказыПокупателей
					|		ПО СЗТовары.Номенклатура = ЗаказыПокупателей.Номенклатура
					//+++ 13.10.2014 - учет остатков и филиалиала и ярославлся в разных колонках-----------------------------------------------------------------------				  
					|//ОстаткиФилЯр
					|//яр_		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, НЕ Склад.ЗапретитьИспользование
					|//яр_		И НЕ Склад.Транзитный) КАК ОстаткиТоваров
					//---------------------------------------------------------------------------------------------------------------------------------				  
					|		ПО СЗТовары.Номенклатура = ОстаткиТоваров.Номенклатура
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыВПроизводствеТ КАК ВТ_ТоварыВПроизводствеТ
					|		ПО СЗТовары.Номенклатура = ВТ_ТоварыВПроизводствеТ.Номенклатура
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыВПроизводстве КАК ВТ_ТоварыВПроизводстве
					|		ПО СЗТовары.Номенклатура = ВТ_ТоварыВПроизводстве.Номенклатура
					|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					|			ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
					|			СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоОстаток
					|		ИЗ
					|			РегистрНакопления.ЗаказыПоставщикам.Остатки( ,
					|					НЕ ЗаказПоставщику.Транзит  И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
					|						И Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
					//27.10.14 Смирнов для новых поступлений не всегда извесна дата поступления и поэтому она какое то время пустая. Их тоже надо учитывать (Егор)
					|						И (( ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA <= &ДатаКон)) или ЗаказПоставщику.ДатаПоступления=ДатаВремя(1,1,1)) КАК ЗаказыПоставщикамОстатки
					|		
					|		СГРУППИРОВАТЬ ПО
					|			ЗаказыПоставщикамОстатки.Номенклатура) КАК ТоварыВПути
					|		ПО СЗТовары.Номенклатура = ТоварыВПути.Номенклатура
					|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					|			ЗаказыПоставщикамОстаткиТ.Номенклатура КАК Номенклатура,
					|			СУММА(ЗаказыПоставщикамОстаткиТ.КоличествоОстаток) КАК КоличествоОстаток
					|		ИЗ
					|			РегистрНакопления.ЗаказыПоставщикам.Остатки(  , ЗаказПоставщику.Транзит
					|						И ЗаказПоставщику.Подразделение = &Подразделение И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
					|                       И ЗаказПоставщику.Грузополучатель = &Контрагент
					|						И Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
					//27.10.14 Смирнов для новых поступлений не всегда извесна дата поступления и поэтому она какое то время пустая. Их тоже надо учитывать (Егор)
					|							И (ЗаказПоставщику.ДатаПоступления <= &ДатаКон) или ЗаказПоставщику.ДатаПоступления=ДатаВремя(1,1,1)) КАК ЗаказыПоставщикамОстаткиТ
					|		
					|		СГРУППИРОВАТЬ ПО
					|			ЗаказыПоставщикамОстаткиТ.Номенклатура) КАК ТоварыВПутиТ
					|		ПО СЗТовары.Номенклатура = ТоварыВПутиТ.Номенклатура
					|
					|  		ЛЕВОЕ СОЕДИНЕНИЕ ВСЗостальных КАК ВСЗостальных
		            |        ПО СЗТовары.Номенклатура = ВСЗостальных.Номенклатура
					|//ФИЛИАЛ_ВЫБОРКА
					|";
					
	НачДата = ?(НачДата='00010101', НачалоДня(СезонныйЗаказ.Дата)-14*24*60*60, НачДата);
	КонДата = ?(КонДата='00010101', 
					?(ЗначениеНеЗаполнено(СезонныйЗаказ.ДатаДействияПо), КонецГода(СезонныйЗаказ.Дата), КонецДня(СезонныйЗаказ.ДатаДействияПо)) 
					, КонецДня(КонДата) );

//+++ 17.03.2014
	Запрос.УстановитьПараметр("ДатаНач", НачДата);
	Запрос.УстановитьПараметр("ДатаКон", КонДата);
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );//+++ 02.04.2014 - товары в производстве по действующим заказам поставщикам сезонным
	
	Запрос.УстановитьПараметр("Контрагент", СезонныйЗаказ.Контрагент);
	
//+++ 05.11.2015 список клиентов и договоров
КонтрагентСписок = 	новый СписокЗначений;
ДоговорКонтрагентаСписок = новый СписокЗначений;

если НЕ СезонныйЗаказ.СписокКонтрагентов тогда
	КонтрагентСписок.Добавить( СезонныйЗаказ.Контрагент );
	Если НЕ СезонныйЗаказ.Ссылка.ДоговорКонтрагента.Пустая() тогда
	   ДоговорКонтрагентаСписок.Добавить( СезонныйЗаказ.Ссылка.ДоговорКонтрагента );
	КонецЕсли;
Иначе // по списку	
	//КонтрагентСписок.ЗагрузитьЗначения(  СезонныйЗаказ.Контрагенты.ВыгрузитьКолонку("Контрагент") );
	//ДоговорКонтрагентаСписок.ЗагрузитьЗначения(  СезонныйЗаказ.Контрагенты.ВыгрузитьКолонку("ДоговорКонтрагента") );
	для каждого стр1 из СезонныйЗаказ.Контрагенты цикл
	КонтрагентСписок.Добавить( стр1.Контрагент );
	
			если не стр1.ДоговорКонтрагента.Пустая() тогда
			 ДоговорКонтрагентаСписок.Добавить( стр1.ДоговорКонтрагента );
			Иначе
			//-------------добавляем все договоры (для продаж) по Контрагенту----------------
			 Запрос111 = Новый Запрос;
			 Запрос111.Текст = "ВЫБРАТЬ
			 |	ДоговорыКонтрагентов.Ссылка
			 |ИЗ
			 |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			 |ГДЕ
			 |	НЕ ДоговорыКонтрагентов.ПометкаУдаления
			 |	И ДоговорыКонтрагентов.Владелец = &Владелец
			 |	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
			 |	И ДоговорыКонтрагентов.ТипДоговора в (&СписокТипаДоговоров)
			 |";
			 
			 Запрос111.УстановитьПараметр("Владелец", стр1.Контрагент);
			 Запрос111.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
			 СписокТипаДоговоров = новый СписокЗначений;
			 СписокТипаДоговоров.Добавить( справочники.ТипыДоговоров.Факторинг );//00002
			 СписокТипаДоговоров.Добавить( справочники.ТипыДоговоров.НайтиПоКоду("00004") ); // отсрочка
			 СписокТипаДоговоров.Добавить( справочники.ТипыДоговоров.НайтиПоКоду("00001") ); // предоплата			 
			 Запрос111.УстановитьПараметр("СписокТипаДоговоров", СписокТипаДоговоров);
			 Результат111 = Запрос111.Выполнить();
			 Выборка111 = Результат111.Выбрать();
			 
			 Пока Выборка111.Следующий() Цикл
			   ДоговорКонтрагентаСписок.Добавить( выборка111.Ссылка );
			 КонецЦикла;
			КонецЕсли;
			 
	КонецЦикла;	
	
КонецЕсли;

Запрос.УстановитьПараметр("КонтрагентСписок", КонтрагентСписок);

//+++ 08.05.2015 - продажи только по 1 договору!
Если ДоговорКонтрагентаСписок.Количество()>0 тогда
	Предупреждение("Анализ будет произведен по "+строка(ДоговорКонтрагентаСписок.Количество())+" договору(ам), 
				   |указанным в Сезонном заказе покупателя!", 10);
				   
	Запрос.Текст = стрЗаменить(Запрос.Текст, "//ОтборПоОдномуДоговору","");
	Запрос.УстановитьПараметр("ДоговорКонтрагентаСписок", ДоговорКонтрагентаСписок);
КонецЕсли;
//+++)


	//+++ 14.10.2014
	//Филиал = яштПоставщики.ПолучитьМассивФилиалов();
	//Если ВидСклада<Филиал.Количество() тогда
	//	Подразделение=Филиал[ВидСклада];
	//КонецЕсли;	
	Если ВидСклада=0 тогда
		Подразделение=Справочники.Подразделения.ПустаяСсылка();
	ИначеЕсли ВидСклада=1 тогда
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00106");
	ИначеЕсли ВидСклада=2 тогда
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00112");	
	ИначеЕсли ВидСклада=3 Тогда
//		Подразделение=Справочники.Подразделения.НайтиПоКоду("00122");	
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00138");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Транзит", ? (ВидСклада = 0, Ложь, Истина));
	
//+++ 13.10.2014 - для филиалов - еще 1 столбец "Св.Остатки в Ярославле"
	Если ВидСклада = 0 тогда // отчет по филиалам
	Запрос.текст = стрЗаменить(Запрос.текст ,	"//яр_", "");	
Иначе
	Запрос.текст = стрЗаменить(Запрос.текст ,	"//_ОстаткиФилЯр","");

	Запрос.текст = стрЗаменить(Запрос.текст ,	"//ОстаткиФилЯр",
"ЛЕВОЕ СОЕДИНЕНИЕ (
|"+
"ВЫБРАТЬ
|	Ост.Номенклатура,
|	МАКСИМУМ(Ост.КоличествоОстаток) КАК КоличествоОстаток,
|	МАКСИМУМ(Ост.КоличествоОстатокЯШТ) КАК КоличествоОстатокЯШТ
|ИЗ
|	(ВЫБРАТЬ
|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
|		0 КАК КоличествоОстатокЯШТ
|	ИЗ
|		РегистрНакопления.ТоварыНаСкладах.Остатки(
|				,
|				НЕ Склад.ЗапретитьИспользование
|					И (Склад.Транзитный
|						И Склад.Подразделение = &Подразделение)) КАК ТоварыНаСкладахОстатки
|	ГДЕ
|		ТоварыНаСкладахОстатки.КоличествоОстаток > 0
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		ТоварыНаСкладахОстатки.Номенклатура,
|		0,
|		ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
|	ИЗ
|		РегистрНакопления.ТоварыНаСкладах.Остатки(
|				,
|				НЕ Склад.ЗапретитьИспользование
|					И НЕ Склад.Транзитный) КАК ТоварыНаСкладахОстатки
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
|					,
|					НЕ ЗаказПокупателя.Транзит
|						И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателейОстатки
|			ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
|	ГДЕ
|		ТоварыНаСкладахОстатки.КоличествоОстаток > 0) КАК Ост
|
|СГРУППИРОВАТЬ ПО
|	Ост.Номенклатура"+") КАК ОстаткиТоваров");		
	КонецЕсли;	
		
	//+++ 30.07.2014 
		//для Транзитных Сезонных заказов - делаем заказ для перемещение - ТОЛЬКО для Контрагента = филиал !!!
		// и в "свободных" остатках - вычитаем ВСЕ заказы на перемещение, которые Проделены !
		
	Если СезонныйЗаказ.Транзит тогда // транзитный и автокомплектация >> для перемещения в филиал
		// сразу делается заказ для перемещения на Склад или в Подразделение!
		Если СокрЛП(СезонныйЗаказ.Контрагент.Код) = "93187" 
			или СокрЛП(СезонныйЗаказ.Контрагент.Код) = "П000835"
			или СокрЛП(СезонныйЗаказ.Контрагент.Код) = "93801"
			//или Основание.Склад.Транзитный 
			тогда
					
		Запрос.текст = стрЗаменить(запрос.Текст, "//филиал_перемещение", "");
		
//смотрим все проведенные, проделенные заказы на перемещение с ЯШТ 
// на филиал или в транзитный склад!
		Запрос.текст = стрЗаменить(запрос.Текст, "//ФИЛИАЛ_ВЫБОРКА", "ЛЕВОЕ СОЕДИНЕНИЕ 
		|(ВЫБРАТЬ
		|	ЗакПокТов.Номенклатура,
		|	СУММА(ЗакПокТов.Количество) КАК Количество
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗакПокТов
		|ГДЕ
		|	ЗакПокТов.Ссылка.Дата >= &ДатаНач
		|	И ЗакПокТов.Ссылка.Контрагент = &Контрагент
		|	И НЕ ЗакПокТов.Ссылка.ПометкаУдаления
		|	И НЕ ЗакПокТов.Ссылка.транзит
		|	И ЗакПокТов.Ссылка.ВводитьТолькоПеремещение
		|	И ЗакПокТов.Ссылка.Проведен
		|	И ЗакПокТов.Ссылка.Проверен
		|	И ЗакПокТов.Ссылка.Подразделение = &Подразделение
		|//отборПоТранзитномуСкладу И ЗакПокТов.Ссылка.Склад = &Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакПокТов.Номенклатура
		|) как ЗаказыПокупателейНаПеремещение
		|		ПО ЗаказыПокупателейНаПеремещение.Номенклатура = ОстаткиТоваров.Номенклатура");
		
		//Если Основание.Склад.Транзитный 
		//  и не (СокрЛП(Основание.Контрагент.Код) = "93187" 
		//	или СокрЛП(Основание.Контрагент.Код) = "П000835"
		//	или СокрЛП(Основание.Контрагент.Код) = "93801") тогда
		//Запрос.текст = стрЗаменить(запрос.Текст, "//отборПоТранзитномуСкладу", "");
		//КонецЕсли;
		
		КонецЕсли;
	КонецЕсли;
	//+++)
	
	Запрос.УстановитьПараметр("Ссылка", СезонныйЗаказ.Ссылка);
    Запрос.УстановитьПараметр("ДатаОснования",СезонныйЗаказ.Дата);
	Результат = Запрос.Выполнить();
	
	Если ПоСрокамДоставки Тогда
		// соберем все по срокам
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA КАК ДатаПоступления,
		|	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		|	СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоВПути,
		|	0 КАК КоличествоВПроизводстве
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|			,
		|			Номенклатура В (&Номенклатура) И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
		|				И ЗаказПоставщику.ДатаПоступления <= &ДатаКон
		|				И (ЗаказПоставщику.Подразделение = &Подразделение
		|					ИЛИ ЗаказПоставщику.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))) КАК ЗаказыПоставщикамОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамОстатки.Номенклатура,
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо,
		|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
		|	0,
		|	СУММА(ВЫБОР
		|			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток <= 0
		|				ТОГДА 0
		|			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		|		КОНЕЦ)
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
		|			,
		|				 Номенклатура В (&Номенклатура) И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
		|				И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) >= &ТекДата
		|				И (ЗаказПоставщикуСезонный.Подразделение = &Подразделение
		|					ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))) КАК ЗаказыПоставщикамСезонныеОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
		|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Данные.ДатаПоступления КАК ДатаПоступления,
		|	Данные.Номенклатура КАК Номенклатура,
		|	СУММА(Данные.КоличествоВПути) КАК КоличествоВПути,
		|	СУММА(Данные.КоличествоВПроизводстве) КАК КоличествоВПроизводстве
		|ИЗ
		|	Данные КАК Данные
		|
		|СГРУППИРОВАТЬ ПО
		|	Данные.Номенклатура,
		|	Данные.ДатаПоступления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	ДатаПоступления";

	Запрос.УстановитьПараметр("ДатаКон", КонДата);
	Запрос.УстановитьПараметр("Номенклатура",СезонныйЗаказ.Товары.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("Подразделение", Справочники.Подразделения.НайтиПоКоду("00005"));
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());

	ПоставкиПоСрокам = Запрос.Выполнить().Выгрузить();
	Макет = ПолучитьМакет("НовыйОтчетСДоставкой");

	
    конецЕсли;
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	Если ПоСрокамДоставки Тогда
	ОбластьЗаписейСроков = Макет.ПолучитьОбласть("ДеталиСроки");
	конецЕсли;
	ТабДок.Очистить();
	
	ОбластьЗаголовок.Параметры.ПредставлениеЗаказа =  Строка (СезонныйЗаказ.Ссылка) +" от "+ СезонныйЗаказ.Ссылка.Контрагент.Наименование;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();
     пп=0;
	 Пока ВыборкаДетали.Следующий() Цикл
		 пп=пп+1;
		 ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		 ОбластьДетальныхЗаписей.Параметры.НомерСтроки = пп;
		 ОстатокНаСкладах = ?(ВидОстатков =0, ВыборкаДетали.ОстатокНаСкладах, ВыборкаДетали.СвободныйОстаток) 
		 + ?(ВидСклада>0, ВыборкаДетали.СвободныйОстатокЯШТ, 0);   //+++ 13.10.2014
		  Если не ПоСрокамДоставки Тогда
		 ОбластьДетальныхЗаписей.Параметры.КоличествоМожноОтгрузить = Макс(Мин (ВыборкаДетали.ОсталосьЗаказать, ОстатокНаСкладах) ,0)  ;
		 конецЕсли;
		 Если Не ФлагНенулевые ИЛИ ОбластьДетальныхЗаписей.Параметры.КоличествоМожноОтгрузить > 0 Тогда
			 Если не ПоСрокамДоставки Тогда
				 ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
			 иначе
				 ТабДок.Вывести(ОбластьДетальныхЗаписей, 0);
				 СтрокиНоменклатуры = ПоставкипоСрокам.НайтиСтроки(Новый структура("Номенклатура",ВыборкаДетали.Номенклатура));
				 Для каждого Срок из СтрокиНоменклатуры Цикл
					    ОбластьЗаписейСроков.Параметры.Заполнить(Срок);
						Если Срок.количествоВПути> 50 Тогда
							  ОбластьЗаписейСроков.Параметры.количествоВПути = ">50";
					    КонецЕсли;	
						Если Срок.количествоВПроизводстве> 50 Тогда
							  ОбластьЗаписейСроков.Параметры.количествоВПроизводстве = ">50";
						КонецЕсли;	  
						ТабДок.Вывести(ОбластьЗаписейСроков,1);
				 конецЦикла;	
			 конецЕсли;
		 КонецЕсли;
	 КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры


Процедура ОтчетСАналогами(ТабДок) Экспорт
    //--------------анализ по остаткам на складах БЕЗ учета ОТХ?!--------------------------
	
	Если ЗначениеНеЗаполнено(СезонныйЗаказ) Тогда
		Сообщить("Необходимо выбрать сезонный заказ для анализа!");
		Возврат;
	КонецЕсли;	
	
Если ВидСклада = 0 тогда // отчет по филиалам
	Макет = ПолучитьМакет("НовыйОтчет");
Иначе	
	Макет = ПолучитьМакет("НовыйОтчет"); //+++ 13.10.2014   10я столбец
КонецЕсли;

	Запрос = Новый Запрос;
	
 				Запрос.Текст =
				
				"ВЫБРАТЬ
				|	ВЫБОР
				|		КОГДА ЗаказыПокупателейСезонныеОбороты.ВРезерве = ЛОЖЬ
				|				И ЗаказыПокупателейСезонныеОбороты.КоличествоПриход > 0
				|			ТОГДА ЗаказыПокупателейСезонныеОбороты.КоличествоПриход
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК Количество,
				|	ВЫБОР
				|		КОГДА ЗаказыПокупателейСезонныеОбороты.ВРезерве = ЛОЖЬ
				|				И ЗаказыПокупателейСезонныеОбороты.КоличествоПриход < 0
				|			ТОГДА -ЗаказыПокупателейСезонныеОбороты.КоличествоПриход
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК Закрыто,
				
				|	ВЫБОР
				|		КОГДА ЗаказыПокупателейСезонныеОбороты.ВРезерве
				|				И ЗаказыПокупателейСезонныеОбороты.КоличествоПриход > 0
				|			ТОГДА ЗаказыПокупателейСезонныеОбороты.КоличествоПриход
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК Отгружено,
				|	ВЫБОР
				|		КОГДА ЗаказыПокупателейСезонныеОбороты.ВРезерве
				|			ТОГДА -ЗаказыПокупателейСезонныеОбороты.КоличествоОборот
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК ЗаказаноКонтрагентом,
				|	ЗаказыПокупателейСезонныеОбороты.Номенклатура,
				|	ЗаказыПокупателейСезонныеОбороты.ЗаказПокупателяСезонный КАК Ссылка,
				|	ЗаказыПокупателейСезонныеОбороты.Аналог
				|ПОМЕСТИТЬ СЗТовары
				|ИЗ
				|	РегистрНакопления.ЗаказыПокупателейСезонные.Обороты(, , , ЗаказПокупателяСезонный = &ссылка) КАК ЗаказыПокупателейСезонныеОбороты
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	АналогиДисков.Номенклатура КАК Номенклатура,
				|	АналогиДисков.Аналог КАК Аналог
				|ПОМЕСТИТЬ АналогиДисков
				|ИЗ
				|	РегистрСведений.АналогиДисков КАК АналогиДисков
				|ГДЕ
				|	АналогиДисков.Номенклатура В
				|			(ВЫБРАТЬ
				|				СЗТовары.Номенклатура
				|			ИЗ
				|				СЗТовары КАК СЗТовары)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	АналогиДисков.Аналог,
				|	АналогиДисков.Номенклатура
				|ИЗ
				|	РегистрСведений.АналогиДисков КАК АналогиДисков
				|ГДЕ
				|	АналогиДисков.Аналог В
				|			(ВЫБРАТЬ
				|				СЗТовары.Номенклатура
				|			ИЗ
				|				СЗТовары КАК СЗТовары)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	АналогиДисков.Аналог,
				|	АналогиДисков1.Аналог
				|ИЗ
				|	РегистрСведений.АналогиДисков КАК АналогиДисков
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналогиДисков КАК АналогиДисков1
				|		ПО АналогиДисков.Номенклатура = АналогиДисков1.Номенклатура
				|ГДЕ
				|	АналогиДисков.Аналог В
				|			(ВЫБРАТЬ
				|				СЗТовары.Номенклатура
				|			ИЗ
				|				СЗТовары КАК СЗТовары)
				|	И АналогиДисков.Аналог <> ЕСТЬNULL(АналогиДисков1.Аналог, АналогиДисков.Аналог)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	АналогиДисков.Номенклатура,
				|	АналогиДисков1.Номенклатура
				|ИЗ
				|	РегистрСведений.АналогиДисков КАК АналогиДисков
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналогиДисков КАК АналогиДисков1
				|		ПО АналогиДисков.Аналог = АналогиДисков1.Аналог
				|ГДЕ
				|	АналогиДисков.Номенклатура В
				|			(ВЫБРАТЬ
				|				СЗТовары.Номенклатура
				|			ИЗ
				|				СЗТовары КАК СЗТовары)
				|	И АналогиДисков.Номенклатура <> ЕСТЬNULL(АналогиДисков1.Номенклатура, АналогиДисков.Номенклатура)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	АналогиДисков.Номенклатура,
				|	АналогиДисков1.Аналог
				|ИЗ
				|	РегистрСведений.АналогиДисков КАК АналогиДисков
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналогиДисков КАК АналогиДисков1
				|		ПО АналогиДисков.Аналог = АналогиДисков1.Номенклатура
				|ГДЕ
				|	АналогиДисков.Номенклатура В
				|			(ВЫБРАТЬ
				|				СЗТовары.Номенклатура
				|			ИЗ
				|				СЗТовары КАК СЗТовары)
				|	И АналогиДисков.Номенклатура <> ЕСТЬNULL(АналогиДисков1.Аналог, АналогиДисков.Номенклатура)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	АналогиДисков.Аналог,
				|	АналогиДисков1.Номенклатура
				|ИЗ
				|	РегистрСведений.АналогиДисков КАК АналогиДисков
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналогиДисков КАК АналогиДисков1
				|		ПО АналогиДисков.Номенклатура = АналогиДисков1.Аналог
				|ГДЕ
				|	АналогиДисков.Аналог В
				|			(ВЫБРАТЬ
				|				СЗТовары.Номенклатура
				|			ИЗ
				|				СЗТовары КАК СЗТовары)
				|	И АналогиДисков.Аналог <> ЕСТЬNULL(АналогиДисков1.Номенклатура, АналогиДисков.Аналог)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	СЗТовары.Номенклатура,
				|	СЗТовары.Номенклатура
				|ИЗ
				|	СЗТовары КАК СЗТовары
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	СЗТовары.Номенклатура,
				|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
				|ИЗ
				|	СЗТовары КАК СЗТовары
				
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|АналогиДисков.Номенклатура,
				|АналогиДисков.Аналог
				|ПОМЕСТИТЬ АналогиДисков1
				|ИЗ
				|АналогиДисков КАК АналогиДисков
				|;
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СУММА(ВЫБОР
				|			КОГДА а.КоличествоВпроизводстве < 0
				|				ТОГДА 0
				|			ИНАЧЕ а.КоличествоВпроизводстве
				|		КОНЕЦ) КАК КоличествоВПроизводстве,
				|	а.Номенклатура
				|ПОМЕСТИТЬ ВТ_ТоварыВПроизводстве
				|ИЗ
				|	(ВЫБРАТЬ
				|		ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоВпроизводстве,
				|		ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
				|		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный
				|	ИЗ
				|		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
				|				,
				|				НЕ ЗаказПоставщикуСезонный.Транзит И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
				
				|					И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки) КАК а
				|
				|СГРУППИРОВАТЬ ПО
				|	а.Номенклатура
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СУММА(ВЫБОР
				|			КОГДА б.КоличествоВпроизводстве < 0
				|				ТОГДА 0
				|			ИНАЧЕ б.КоличествоВпроизводстве
				|		КОНЕЦ) КАК КоличествоВпроизводстве,
				|	б.Номенклатура
				|ПОМЕСТИТЬ ВТ_ТоварыВПроизводствеТ
				|ИЗ
				|	(ВЫБРАТЬ
				|		ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток КАК КоличествоВпроизводстве,
				|		ЗаказыПоставщикамСезонныеОстатки.Номенклатура КАК Номенклатура,
				|		ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный КАК ЗаказПоставщикуСезонный
				|	ИЗ
				|		РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
				|				,
				|				ЗаказПоставщикуСезонный.Транзит И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
				|                  и ЗаказПоставщикуСезонный = &Ссылка
				|                  и ЗаказПоставщикуСезонный.Грузополучатель = &Контрагент
				|					И (ЗаказПоставщикуСезонный.Подразделение = &Подразделение
				|						ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
				|					И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) >= &ТекДата) КАК ЗаказыПоставщикамСезонныеОстатки) КАК б
				|
				|СГРУППИРОВАТЬ ПО
				|	б.Номенклатура
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|ЗаказыПокупателейСезонныеОстатки.Номенклатура,
				|ЗаказыПокупателейСезонныеОстатки.КоличествоОстаток
				|ПОМЕСТИТЬ ВСЗостальных
				|ИЗ
				|	РегистрНакопления.ЗаказыПокупателейСезонные.Остатки(, ЗаказПокупателяСезонный <> &ссылка и естьNull(Подразделение.ВЭД,ЛОЖЬ)=ложь) КАК ЗаказыПокупателейСезонныеОстатки
				|;
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЕСТЬNULL(АналогиДисков.Номенклатура, СЗТовары.Номенклатура) КАК Номенклатура,
				|	ЕСТЬNULL(АналогиДисков.Аналог.Код, СЗТовары.Аналог.Код) КАК Код,
				|	ВЫБОР
				|		КОГДА СЗТовары.Аналог = ЗНАЧЕНИЕ(справочник.номенклатура.пустаяссылка)
				|			ТОГДА СЗТовары.Количество
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК Запланировано,
				|	ВЫБОР
				|		КОГДА СЗТовары.Аналог = ЗНАЧЕНИЕ(справочник.номенклатура.пустаяссылка)
				|			ТОГДА СЗТовары.Закрыто
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК Закрыто,
				
				|	СЗТовары.Отгружено КАК Отгружено,
				|	ВЫБОР
				|		КОГДА СЗТовары.Аналог = ЗНАЧЕНИЕ(справочник.номенклатура.пустаяссылка)
				|			ТОГДА СЗТовары.Количество - СЗТовары.Отгружено - СЗТовары.ЗаказаноКонтрагентом
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК ОсталосьЗаказать,
				|	СЗТовары.ЗаказаноКонтрагентом КАК ЗаказаноКонтрагентом,
				|	ЕстьNull(ВСЗостальных.КоличествоОстаток,0) КАК ЗаказаноОстальными,
				
				|	ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) КАК Заказано,
				|	ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0) КАК ОстатокНаСкладах,
				|//_ОстаткиФилЯр ЕСТЬNULL(ОстаткиТоваров.КоличествоОстатокЯШТ,0) как СвободныйОстатокЯШТ,
				
				|	ЕСТЬNULL(ОстаткиТоваров.КоличествоОстаток, 0) - ЕСТЬNULL(ЗаказыПокупателей.КоличествоОстаток, 0) КАК СвободныйОстаток,
				|	ЕСТЬNULL(ТоварыВПути.КоличествоОстаток, 0) КАК КоличествоЗаказаноУПоставщика,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА ВТ_ТоварыВПроизводстве.КоличествоВПроизводстве <= 0
				|				ТОГДА 0
				|			ИНАЧЕ ВТ_ТоварыВПроизводстве.КоличествоВПроизводстве
				|		КОНЕЦ, 0) КАК КоличествоЗаказаноУПоставщикаПр,
				|	ЕСТЬNULL(ТоварыВПутиТ.КоличествоОстаток, 0) КАК КоличествоЗаказаноУПоставщика2,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве <= 0
				|				ТОГДА 0
				|			ИНАЧЕ ВТ_ТоварыВПроизводствеТ.КоличествоВпроизводстве
				|		КОНЕЦ, 0) КАК КоличествоЗаказаноУПоставщика2Пр,
				|	АналогиДисков.Аналог
				|ИЗ
				|	АналогиДисков1 КАК АналогиДисков
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
				|				,
				|				ЗаказПокупателя.Проверен
				|					И (&Транзит
				|							И ЗаказПокупателя.Транзит
				|							И ЗаказПокупателя.Подразделение = &Подразделение
				|						ИЛИ НЕ &Транзит
				|							И НЕ ЗаказПокупателя.Транзит)) КАК ЗаказыПокупателей
				|		ПО АналогиДисков.Аналог = ЗаказыПокупателей.Номенклатура
				//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
				//|				,
				//|				НЕ Склад.ЗапретитьИспользование
				//|					И НЕ Склад.Транзитный) КАК ОстаткиТоваров
				//
				|//ОстаткиФилЯр
				|//яр_		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, НЕ Склад.ЗапретитьИспользование
				|//яр_		И НЕ Склад.Транзитный) КАК ОстаткиТоваров
				
				
				
				
				
				
				|		ПО АналогиДисков.Аналог = ОстаткиТоваров.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыВПроизводствеТ КАК ВТ_ТоварыВПроизводствеТ
				|		ПО АналогиДисков.Аналог = ВТ_ТоварыВПроизводствеТ.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыВПроизводстве КАК ВТ_ТоварыВПроизводстве
				|		ПО АналогиДисков.Аналог = ВТ_ТоварыВПроизводстве.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
				|			СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоОстаток
				|		ИЗ
				|			РегистрНакопления.ЗаказыПоставщикам.Остатки(
				|					,
				|					НЕ ЗаказПоставщику.Транзит И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
				|							И Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
				|							И ( ЗаказПоставщику.ДатаПоступления <= &ДатаКон)
				|						ИЛИ ЗаказПоставщику.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)) КАК ЗаказыПоставщикамОстатки
				|		
				|		СГРУППИРОВАТЬ ПО
				|			ЗаказыПоставщикамОстатки.Номенклатура) КАК ТоварыВПути
				|		ПО АналогиДисков.Аналог = ТоварыВПути.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			ЗаказыПоставщикамОстаткиТ.Номенклатура КАК Номенклатура,
				|			СУММА(ЗаказыПоставщикамОстаткиТ.КоличествоОстаток) КАК КоличествоОстаток
				|		ИЗ
				|			РегистрНакопления.ЗаказыПоставщикам.Остатки(
				|					,
				|					ЗаказПоставщику.Транзит И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
				|							И ЗаказПоставщику.Подразделение = &Подразделение
				|							И ЗаказПоставщику.Грузополучатель = &Контрагент
				|							И Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Прочее)
				|							И ЗаказПоставщику.ДатаПоступления <= &ДатаКон
				|						ИЛИ ЗаказПоставщику.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)) КАК ЗаказыПоставщикамОстаткиТ
				|		
				|		СГРУППИРОВАТЬ ПО
				|			ЗаказыПоставщикамОстаткиТ.Номенклатура) КАК ТоварыВПутиТ
				|		ПО АналогиДисков.Аналог = ТоварыВПутиТ.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ СЗТовары КАК СЗТовары
				|		ПО (СЗТовары.Номенклатура = АналогиДисков.Номенклатура)
				|			И (СЗТовары.Аналог = АналогиДисков.Аналог)
				|  		ЛЕВОЕ СОЕДИНЕНИЕ ВСЗостальных КАК ВСЗостальных
				|        ПО АналогиДисков.Аналог = ВСЗостальных.Номенклатура
				|ИТОГИ
				|	СУММА(Запланировано),
				|	СУММА(Отгружено),
				|	СУММА(Закрыто),
				|	СУММА(ОсталосьЗаказать),
				|	СУММА(ЗаказаноКонтрагентом),
				|	СУММА(Заказано),
				|	СУММА(ОстатокНаСкладах),
				|	СУММА(СвободныйОстаток),
				|//_ОстаткиФилЯр Сумма(СвободныйОстатокЯШТ),
				|	СУММА(КоличествоЗаказаноУПоставщика),
				|	СУММА(КоличествоЗаказаноУПоставщикаПр),
				|	СУММА(КоличествоЗаказаноУПоставщика2),
				|	СУММА(КоличествоЗаказаноУПоставщика2Пр),
				|	СУММА(ЗаказаноОстальными)
				|ПО
				|	Номенклатура";
				
				
				
				  
				  
				  

				  
				  
	НачДата = ?(НачДата='00010101', НачалоДня(СезонныйЗаказ.Дата)-14*24*60*60, НачДата);
	КонДата = ?(КонДата='00010101', 
					?(ЗначениеНеЗаполнено(СезонныйЗаказ.ДатаДействияПо), КонецГода(СезонныйЗаказ.Дата), КонецДня(СезонныйЗаказ.ДатаДействияПо)) 
					, КонецДня(КонДата) );

//+++ 17.03.2014
	Запрос.УстановитьПараметр("ДатаНач", НачДата);
	Запрос.УстановитьПараметр("ДатаКон", КонДата);
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()) );//+++ 02.04.2014 - товары в производстве по действующим заказам поставщикам сезонным
	
	Запрос.УстановитьПараметр("Контрагент", СезонныйЗаказ.Контрагент);
	
//+++ 05.11.2015 список клиентов и договоров
КонтрагентСписок = 	новый СписокЗначений;
ДоговорКонтрагентаСписок = новый СписокЗначений;

если НЕ СезонныйЗаказ.СписокКонтрагентов тогда
	КонтрагентСписок.Добавить( СезонныйЗаказ.Контрагент );
	Если НЕ СезонныйЗаказ.Ссылка.ДоговорКонтрагента.Пустая() тогда
	   ДоговорКонтрагентаСписок.Добавить( СезонныйЗаказ.Ссылка.ДоговорКонтрагента );
	КонецЕсли;
Иначе // по списку	
	//КонтрагентСписок.ЗагрузитьЗначения(  СезонныйЗаказ.Контрагенты.ВыгрузитьКолонку("Контрагент") );
	//ДоговорКонтрагентаСписок.ЗагрузитьЗначения(  СезонныйЗаказ.Контрагенты.ВыгрузитьКолонку("ДоговорКонтрагента") );
	для каждого стр1 из СезонныйЗаказ.Контрагенты цикл
	КонтрагентСписок.Добавить( стр1.Контрагент );
	
			если не стр1.ДоговорКонтрагента.Пустая() тогда
			 ДоговорКонтрагентаСписок.Добавить( стр1.ДоговорКонтрагента );
			Иначе
			//-------------добавляем все договоры (для продаж) по Контрагенту----------------
			 Запрос111 = Новый Запрос;
			 Запрос111.Текст = "ВЫБРАТЬ
			 |	ДоговорыКонтрагентов.Ссылка
			 |ИЗ
			 |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			 |ГДЕ
			 |	НЕ ДоговорыКонтрагентов.ПометкаУдаления
			 |	И ДоговорыКонтрагентов.Владелец = &Владелец
			 |	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
			 |	И ДоговорыКонтрагентов.ТипДоговора в (&СписокТипаДоговоров)
			 |";
			 
			 Запрос111.УстановитьПараметр("Владелец", стр1.Контрагент);
			 Запрос111.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
			 СписокТипаДоговоров = новый СписокЗначений;
			 СписокТипаДоговоров.Добавить( справочники.ТипыДоговоров.Факторинг );//00002
			 СписокТипаДоговоров.Добавить( справочники.ТипыДоговоров.НайтиПоКоду("00004") ); // отсрочка
			 СписокТипаДоговоров.Добавить( справочники.ТипыДоговоров.НайтиПоКоду("00001") ); // предоплата			 
			 Запрос111.УстановитьПараметр("СписокТипаДоговоров", СписокТипаДоговоров);
			 Результат111 = Запрос111.Выполнить();
			 Выборка111 = Результат111.Выбрать();
			 
			 Пока Выборка111.Следующий() Цикл
			   ДоговорКонтрагентаСписок.Добавить( выборка111.Ссылка );
			 КонецЦикла;
			КонецЕсли;
			 
	КонецЦикла;	
	
КонецЕсли;

Запрос.УстановитьПараметр("КонтрагентСписок", КонтрагентСписок);

//+++ 08.05.2015 - продажи только по 1 договору!
Если ДоговорКонтрагентаСписок.Количество()>0 тогда
	Предупреждение("Анализ будет произведен по "+строка(ДоговорКонтрагентаСписок.Количество())+" договору(ам), 
				   |указанным в Сезонном заказе покупателя!", 10);
				   
	Запрос.Текст = стрЗаменить(Запрос.Текст, "//ОтборПоОдномуДоговору","");
	Запрос.УстановитьПараметр("ДоговорКонтрагентаСписок", ДоговорКонтрагентаСписок);
КонецЕсли;
//+++)


	//+++ 14.10.2014
	//Филиал = яштПоставщики.ПолучитьМассивФилиалов();
	//Если ВидСклада<Филиал.Количество() тогда
	//	Подразделение=Филиал[ВидСклада];
	//КонецЕсли;	
	Если ВидСклада=0 тогда
		Подразделение=Справочники.Подразделения.ПустаяСсылка();
	ИначеЕсли ВидСклада=1 тогда
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00106");
	ИначеЕсли ВидСклада=2 тогда
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00112");	
	ИначеЕсли ВидСклада=3 Тогда
//		Подразделение=Справочники.Подразделения.НайтиПоКоду("00122");	
		Подразделение=Справочники.Подразделения.НайтиПоКоду("00138");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Транзит", ? (ВидСклада = 0, Ложь, Истина));
	
//+++ 13.10.2014 - для филиалов - еще 1 столбец "Св.Остатки в Ярославле"
	Если ВидСклада = 0 тогда // отчет по филиалам
	Запрос.текст = стрЗаменить(Запрос.текст ,	"//яр_", "");	
Иначе
	Запрос.текст = стрЗаменить(Запрос.текст ,	"//_ОстаткиФилЯр","");

	Запрос.текст = стрЗаменить(Запрос.текст ,	"//ОстаткиФилЯр",
"ЛЕВОЕ СОЕДИНЕНИЕ (
|"+
"ВЫБРАТЬ
|	Ост.Номенклатура,
|	МАКСИМУМ(Ост.КоличествоОстаток) КАК КоличествоОстаток,
|	МАКСИМУМ(Ост.КоличествоОстатокЯШТ) КАК КоличествоОстатокЯШТ
|ИЗ
|	(ВЫБРАТЬ
|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
|		0 КАК КоличествоОстатокЯШТ
|	ИЗ
|		РегистрНакопления.ТоварыНаСкладах.Остатки(
|				,
|				НЕ Склад.ЗапретитьИспользование
|					И (Склад.Транзитный
|						И Склад.Подразделение = &Подразделение)) КАК ТоварыНаСкладахОстатки
|	ГДЕ
|		ТоварыНаСкладахОстатки.КоличествоОстаток > 0
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		ТоварыНаСкладахОстатки.Номенклатура,
|		0,
|		ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0)
|	ИЗ
|		РегистрНакопления.ТоварыНаСкладах.Остатки(
|				,
|				НЕ Склад.ЗапретитьИспользование
|					И НЕ Склад.Транзитный) КАК ТоварыНаСкладахОстатки
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
|					,
|					НЕ ЗаказПокупателя.Транзит
|						И ЗаказПокупателя.Проверен) КАК ЗаказыПокупателейОстатки
|			ПО ТоварыНаСкладахОстатки.Номенклатура = ЗаказыПокупателейОстатки.Номенклатура
|	ГДЕ
|		ТоварыНаСкладахОстатки.КоличествоОстаток > 0) КАК Ост
|
|СГРУППИРОВАТЬ ПО
|	Ост.Номенклатура"+") КАК ОстаткиТоваров");		
	КонецЕсли;	
		
	//+++ 30.07.2014 
		//для Транзитных Сезонных заказов - делаем заказ для перемещение - ТОЛЬКО для Контрагента = филиал !!!
		// и в "свободных" остатках - вычитаем ВСЕ заказы на перемещение, которые Проделены !
		
	Если СезонныйЗаказ.Транзит тогда // транзитный и автокомплектация >> для перемещения в филиал
		// сразу делается заказ для перемещения на Склад или в Подразделение!
		Если СокрЛП(СезонныйЗаказ.Контрагент.Код) = "93187" 
			или СокрЛП(СезонныйЗаказ.Контрагент.Код) = "П000835"
			или СокрЛП(СезонныйЗаказ.Контрагент.Код) = "93801"
			//или Основание.Склад.Транзитный 
			тогда
					
		Запрос.текст = стрЗаменить(запрос.Текст, "//филиал_перемещение", "");
		
//смотрим все проведенные, проделенные заказы на перемещение с ЯШТ 
// на филиал или в транзитный склад!
		Запрос.текст = стрЗаменить(запрос.Текст, "//ФИЛИАЛ_ВЫБОРКА", "ЛЕВОЕ СОЕДИНЕНИЕ 
		|(ВЫБРАТЬ
		|	ЗакПокТов.Номенклатура,
		|	СУММА(ЗакПокТов.Количество) КАК Количество
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗакПокТов
		|ГДЕ
		|	ЗакПокТов.Ссылка.Дата >= &ДатаНач
		|	И ЗакПокТов.Ссылка.Контрагент = &Контрагент
		|	И НЕ ЗакПокТов.Ссылка.ПометкаУдаления
		|	И НЕ ЗакПокТов.Ссылка.транзит
		|	И ЗакПокТов.Ссылка.ВводитьТолькоПеремещение
		|	И ЗакПокТов.Ссылка.Проведен
		|	И ЗакПокТов.Ссылка.Проверен
		|	И ЗакПокТов.Ссылка.Подразделение = &Подразделение
		|//отборПоТранзитномуСкладу И ЗакПокТов.Ссылка.Склад = &Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакПокТов.Номенклатура
		|) как ЗаказыПокупателейНаПеремещение
		|		ПО ЗаказыПокупателейНаПеремещение.Номенклатура = ОстаткиТоваров.Номенклатура");
		
		//Если Основание.Склад.Транзитный 
		//  и не (СокрЛП(Основание.Контрагент.Код) = "93187" 
		//	или СокрЛП(Основание.Контрагент.Код) = "П000835"
		//	или СокрЛП(Основание.Контрагент.Код) = "93801") тогда
		//Запрос.текст = стрЗаменить(запрос.Текст, "//отборПоТранзитномуСкладу", "");
		//КонецЕсли;
		
		КонецЕсли;
	КонецЕсли;
	//+++)
	
	Запрос.УстановитьПараметр("Ссылка", СезонныйЗаказ.Ссылка);
	Запрос.УстановитьПараметр("ДатаОснования", СезонныйЗаказ.Дата);
	Результат = Запрос.Выполнить();
	
		Если ПоСрокамДоставки Тогда
		// соберем все по срокам
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA КАК ДатаПоступления,
		|	ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
		|	СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоВПути,
		|	0 КАК КоличествоВПроизводстве
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|			,
		|			Номенклатура В (&Номенклатура) И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
		|				И ЗаказПоставщику.ДатаПоступления <= &ДатаКон
		|				И (ЗаказПоставщику.Подразделение = &Подразделение
		|					ИЛИ ЗаказПоставщику.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))) КАК ЗаказыПоставщикамОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамОстатки.Номенклатура,
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПриходаВПортИлиНаТаможнюETA
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо,
		|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
		|	0,
		|	СУММА(ВЫБОР
		|			КОГДА ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток <= 0
		|				ТОГДА 0
		|			ИНАЧЕ ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток
		|		КОНЕЦ)
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(
		|			,
		|				 Номенклатура В (&Номенклатура) И ЕСТЬNULL(Подразделение.ВЭД, ЛОЖЬ) = ЛОЖЬ
		|				И ДОБАВИТЬКДАТЕ(ЗаказПоставщикуСезонный.ДатаДействияПо, МЕСЯЦ, 1) >= &ТекДата
		|				И (ЗаказПоставщикуСезонный.Подразделение = &Подразделение
		|					ИЛИ ЗаказПоставщикуСезонный.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))) КАК ЗаказыПоставщикамСезонныеОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
		|	ЗаказыПоставщикамСезонныеОстатки.ЗаказПоставщикуСезонный.ДатаДействияПо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Данные.ДатаПоступления КАК ДатаПоступления,
		|	Данные.Номенклатура КАК Номенклатура,
		|	СУММА(Данные.КоличествоВПути) КАК КоличествоВПути,
		|	СУММА(Данные.КоличествоВПроизводстве) КАК КоличествоВПроизводстве
		|ИЗ
		|	Данные КАК Данные
		|
		|СГРУППИРОВАТЬ ПО
		|	Данные.Номенклатура,
		|	Данные.ДатаПоступления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	ДатаПоступления";

	Запрос.УстановитьПараметр("ДатаКон", КонДата);
	Запрос.УстановитьПараметр("Номенклатура",Результат.Выгрузить().ВыгрузитьКолонку("Аналог"));
	Запрос.УстановитьПараметр("Подразделение", Справочники.Подразделения.НайтиПоКоду("00005"));
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());

	ПоставкиПоСрокам = Запрос.Выполнить().Выгрузить();
	Макет = ПолучитьМакет("НовыйОтчетСДоставкой");

	
    конецЕсли;

	
	
	
	
	
	
	
	
	
	

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	Если ПоСрокамДоставки Тогда
	ОбластьЗаписейСроков = Макет.ПолучитьОбласть("ДеталиСроки");
	конецЕсли;
	ОбластьЗаписей = Макет.ПолучитьОбласть("Номенклатура");
	ТабДок.Очистить();
	
	ОбластьЗаголовок.Параметры.ПредставлениеЗаказа =  Строка (СезонныйЗаказ.Ссылка) +" от "+ СезонныйЗаказ.Ссылка.Контрагент.Наименование;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	пп=0;
	пока Выборка.Следующий() Цикл
		пп=пп+1;
		ОбластьЗаписей.Параметры.Заполнить(Выборка);
		ТребуетсяОтгрузить = Выборка.запланировано-Выборка.Отгружено-Выборка.ЗаказаноКонтрагентом;
		ОбластьЗаписей.Параметры.код = Выборка.Номенклатура.Код;
		ОбластьЗаписей.Параметры.номерСтроки = пп;
		//ОстатокНаСкладах = ?(ВидОстатков =0, ВыборкаДетали.ОстатокНаСкладах, ВыборкаДетали.СвободныйОстаток) 
		//					+ ?(ВидСклада>0, ВыборкаДетали.СвободныйОстатокЯШТ, 0);   //+++ 13.10.2014
		//ОбластьДетальныхЗаписей.Параметры.КоличествоМожноОтгрузить = Макс(Мин (ВыборкаДетали.ОсталосьЗаказать, ОстатокНаСкладах) ,0)  ;
		ВыборкаДетали = Выборка.Выбрать();
		Если ВыборкаДетали.количество()> 1 Тогда
			Если Не ФлагНенулевые ИЛИ ОбластьЗаписей.Параметры.КоличествоМожноОтгрузить > 0 Тогда
				ОстатокНаСкладах = ?(ВидОстатков =0, Выборка.ОстатокНаСкладах, Выборка.СвободныйОстаток) 
				+ ?(ВидСклада>0, Выборка.СвободныйОстатокЯШТ, 0);   //+++ 13.10.2014
				Если не ПоСрокамДоставки Тогда
				ОбластьЗаписей.Параметры.ОсталосьЗаказать = ТребуетсяОтгрузить ;
				
				ОбластьЗаписей.Параметры.КоличествоМожноОтгрузить = Макс(Мин (ТребуетсяОтгрузить, ОстатокНаСкладах) ,0)  ;
				конецЕсли;
				ТабДок.Вывести(ОбластьЗаписей, Выборка.Уровень());
			КонецЕсли;
			Пока ВыборкаДетали.Следующий() Цикл
				Если  ВыборкаДетали.Аналог.пустая() Тогда
					продолжить;
				конецЕсли;	
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
				ОбластьДетальныхЗаписей.Параметры.Номенклатура = ВыборкаДетали.Аналог;
				ОбластьДетальныхЗаписей.Параметры.номерСтроки = пп;
				Если не ПоСрокамДоставки Тогда
				ОбластьДетальныхЗаписей.Параметры.ОсталосьЗаказать =0;
                
				ОстатокНаСкладах = ?(ВидОстатков =0, ВыборкаДетали.ОстатокНаСкладах, ВыборкаДетали.СвободныйОстаток) 
				+ ?(ВидСклада>0, ВыборкаДетали.СвободныйОстатокЯШТ, 0);   //+++ 13.10.2014
				ОбластьДетальныхЗаписей.Параметры.КоличествоМожноОтгрузить = Макс(Мин (ТребуетсяОтгрузить, ОстатокНаСкладах) ,0)  ;
				 конецЕсли;

				Если Не ФлагНенулевые ИЛИ ОбластьДетальныхЗаписей.Параметры.КоличествоМожноОтгрузить > 0 Тогда
					Если не ПоСрокамДоставки Тогда
						ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
					иначе
						ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
						СтрокиНоменклатуры = ПоставкипоСрокам.НайтиСтроки(Новый структура("Номенклатура",ВыборкаДетали.Аналог));
						Для каждого Срок из СтрокиНоменклатуры Цикл
							ОбластьЗаписейСроков.Параметры.Заполнить(Срок);
							Если Срок.количествоВПути> 50 Тогда
								ОбластьЗаписейСроков.Параметры.количествоВПути = ">50";
							КонецЕсли;	
							Если Срок.количествоВПроизводстве> 50 Тогда
								ОбластьЗаписейСроков.Параметры.количествоВПроизводстве = ">50";
							КонецЕсли;	  
							ТабДок.Вывести(ОбластьЗаписейСроков,ВыборкаДетали.Уровень()+1);
						конецЦикла;	
					конецЕсли;	
					КонецЕсли;
				КонецЦикла;
			иначе
				ВыборкаДетали.Следующий();
				ОбластьЗаписей.Параметры.Заполнить(ВыборкаДетали);
				ОстатокНаСкладах = ?(ВидОстатков =0, ВыборкаДетали.ОстатокНаСкладах, ВыборкаДетали.СвободныйОстаток) 
				+ ?(ВидСклада>0, ВыборкаДетали.СвободныйОстатокЯШТ, 0);   //+++ 13.10.2014
				Если ПоСрокамДоставки Тогда
					ОбластьЗаписей.Параметры.КоличествоМожноОтгрузить = Макс(Мин (ТребуетсяОтгрузить, ОстатокНаСкладах) ,0)  ;
					ОбластьЗаписей.Параметры.ОсталосьЗаказать = ТребуетсяОтгрузить ;
				конецЕсли;
				Если Не ФлагНенулевые ИЛИ ОбластьДетальныхЗаписей.Параметры.КоличествоМожноОтгрузить > 0 Тогда
					Если не ПоСрокамДоставки Тогда
						ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
					иначе
						ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
						СтрокиНоменклатуры = ПоставкипоСрокам.НайтиСтроки(Новый структура("Номенклатура",ВыборкаДетали.Аналог));
						Для каждого Срок из СтрокиНоменклатуры Цикл
							ОбластьЗаписейСроков.Параметры.Заполнить(Срок);
							Если Срок.количествоВПути> 50 Тогда
								ОбластьЗаписейСроков.Параметры.количествоВПути = ">50";
							КонецЕсли;	
							Если Срок.количествоВПроизводстве> 50 Тогда
								ОбластьЗаписейСроков.Параметры.количествоВПроизводстве = ">50";
							КонецЕсли;	  
							ТабДок.Вывести(ОбластьЗаписейСроков,Выборка.Уровень()+1);
						конецЦикла;	
						
						
						
					конецЕсли;
				КонецЕсли;
			КонецЕсли;	
	конецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры

Процедура ОтчетВЭД(ТабДок) Экспорт
	
	Если ЗначениеНеЗаполнено(СезонныйЗаказ) Тогда
		Сообщить("Необходимо выбрать сезонный заказ для анализа!");
		Возврат;
	КонецЕсли;	
	
	Макет = ПолучитьМакет("НовыйОтчетВЭД");
	
	Запрос  = Новый Запрос;
	запрос.УстановитьПараметр("Ссылка",СезонныйЗаказ);
	запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура,
	               |	СУММА(ЗаказПокупателяСезонныйТовары.Количество) КАК Количество
	               |ПОМЕСТИТЬ Заказано
	               |ИЗ
	               |	Документ.ЗаказПокупателяСезонный.Товары КАК ЗаказПокупателяСезонныйТовары
	               |ГДЕ
	               |	ЗаказПокупателяСезонныйТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказПокупателяСезонныйТовары.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказыПокупателейСезонныеОстатки.Номенклатура,
	               |	СУММА(ЗаказыПокупателейСезонныеОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ОсталосьОтгрузить
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПокупателейСезонные.Остатки(, ЗаказПокупателяСезонный = &ссылка) КАК ЗаказыПокупателейСезонныеОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПокупателейСезонныеОстатки.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура,
	               |	СУММА(ЗаказыПоставщикамСезонныеОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ОстатокВПроизводстве
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикамСезонные.Остатки(, ЗаказПоставщикуСезонный.ДокументОснование = &Ссылка) КАК ЗаказыПоставщикамСезонныеОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПоставщикамСезонныеОстатки.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказыПоставщикамОстатки.Номенклатура,
	               |	СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ОстатокВПути
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ЗаказПоставщику.Основание.ДокументОснование = &Ссылка) КАК ЗаказыПоставщикамОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказыПоставщикамОстатки.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Заказано.Номенклатура,
	               |	Заказано.Номенклатура.Код КАК Код,
	               |	Заказано.Количество КАК Запланировано,
	               |	Заказано.Количество - ОсталосьОтгрузить.КоличествоОстаток КАК Отгружено,
	               |	ОстатокВПути.КоличествоОстаток КАК КоличествоЗаказаноУПоставщика,
	               |	ОстатокВПроизводстве.КоличествоОстаток КАК КоличествоЗаказаноУПоставщикаПр
	               |ИЗ
	               |	Заказано КАК Заказано
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОсталосьОтгрузить КАК ОсталосьОтгрузить
	               |		ПО Заказано.Номенклатура = ОсталосьОтгрузить.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОстатокВПроизводстве КАК ОстатокВПроизводстве
	               |		ПО Заказано.Номенклатура = ОстатокВПроизводстве.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОстатокВПути КАК ОстатокВПути
	               |		ПО Заказано.Номенклатура = ОстатокВПути.Номенклатура";
	Результат = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	
	ОбластьЗаголовок.Параметры.ПредставлениеЗаказа =  Строка (СезонныйЗаказ.Ссылка) +" от "+ СезонныйЗаказ.Ссылка.Контрагент.Наименование;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетали = Результат.Выбрать();
     пп=0;
	 Пока ВыборкаДетали.Следующий() Цикл
		 пп=пп+1;
		 ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		 ОбластьДетальныхЗаписей.Параметры.НомерСтроки = пп;
		 ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	 КонецЦикла;

	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ВЫХОДНЫХ_ФОРМ
КонецПроцедуры
