Перем ВысотаЗаголовка;
Перем ФормаНастройка;
Перем СтруктураРеквизитов;
Перем НеВосстанавливатьНастройку Экспорт;
Перем СтруктураСвязиЭлементовСДанными;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	Если ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
	КонецЕсли;
		
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьТаблицуОтчета() Экспорт

	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	Если НЕ ЗначениеНеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	ВысотаТаблицы=ЭлементыФормы.ДокументРезультат.ВысотаТаблицы;
	ШиринаТаблицы=ЭлементыФормы.ДокументРезультат.ШиринаТаблицы;
	
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры // ОбновитьОтчет()

//  Управляет выводом заголовка
//
// Параметры:
//	Нет.
//
Процедура ВыводЗаголовка()

	ЗаполнитьНачальныеНастройки();
	
	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда

		СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина);
		
	КонецЕсли;

	Если НЕ ЗначениеНеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными);
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры // ВыводЗаголовка()

// Формирует текст заголовка
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	Заголовок = СформироватьЗаголовокОсновнойФормы(ДатаНач, ДатаКон, мНазваниеОтчета, 0);

КонецПроцедуры // СформироватьЗаголовокФормы()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек() Экспорт
	
	СтруктНастр = Новый Структура;
	СтруктНастр.Вставить("ЗаголовокПомечен", ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка);
	СтруктНастр.Вставить("ОтборПомечен", ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка);
	СтруктНастр.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки());
	СтруктНастр.Вставить("Показатели",Показатели.Выгрузить());
	СтруктНастр.Вставить("ОсновныеГруппировки",ОсновныеГруппировки.Выгрузить());
	СтруктНастр.Вставить("ДополнительныеГруппировки",ДополнительныеГруппировки.Выгрузить());
	
	Возврат СтруктНастр;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт

	ПостроительОтчета.УстановитьНастройки(СтруктураСНастройками.НастройкиПостроителя);
	ОсновныеГруппировки.Загрузить(СтруктураСНастройками.ОсновныеГруппировки);
	ДополнительныеГруппировки.Загрузить(СтруктураСНастройками.ДополнительныеГруппировки);
	Показатели.Загрузить(СтруктураСНастройками.Показатели);

	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = СтруктураСНастройками.ЗаголовокПомечен;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

// Процедура - обработчик нажатия кнопки "Настройка".
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	//ВызовСтандартнойНастройки(ЭтаФорма);
	
	ФормаНастройка = ПолучитьФорму("ФормаНастройка", ЭтаФорма);

	СтруктураСНастройками = СформироватьСтруктуруДляСохраненияНастроек();

	СтараяДатаКон = ДатаКон;
	СтараяДатаНач = ДатаНач;
	
	РезультатОткрытия = ФормаНастройка.ОткрытьМодально();

	Если РезультатОткрытия = Истина Тогда

		ОбновитьТаблицуОтчета();

	Иначе
		//форму закрыли эскейпом или по "Закрыть" - восстановим настройки, отчет формировать не будем!
		//восстанавливаем значения
		НеВосстанавливатьНастройку = Ложь;
		ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками);
		ДатаКон = СтараяДатаКон;
		ДатаНач = СтараяДатаНач;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Отбор".
//
Процедура КоманднаяПанельФормыОтбор(Кнопка)

	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Обновить".
//
Процедура КоманднаяПанельФормыОбновить(Кнопка)

	ОбновитьТаблицуОтчета();

КонецПроцедуры // ВыполнитьНажатие()

// Процедура - обработчик нажатия кнопки "Заголовок".
//
Процедура КоманднаяПанельЗаголовок(Кнопка)
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик обновления данных формы
//
Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ОбновлениеОтображения()

// Процедура - обработчик события перед открытием формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Если форма открывается для несформированного отчета ...
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда
		
		// Установим дату начала отчета
		Если Не ЗначениеНеЗаполнено(глТекущийПользователь) Тогда
			ДатаНач = ПолучитьЗначениеПоУмолчанию(глТекущийПользователь,"ОсновнаяДатаНачалаОтчетов");
		КонецЕсли;

		НП.УстановитьПериод(ДатаНач,ДатаКон);

		ВысотаЗаголовка = 0;

		СформироватьЗаголовокФормы();

	Иначе

		СтруктураРеквизитов = Новый Структура;

		Для каждого Реквизит Из Метаданные().Реквизиты Цикл
			СтруктураРеквизитов.Вставить(Реквизит.Имя, ЭтотОбъект[Реквизит.Имя]);
		КонецЦикла; 

		Для каждого ТЧ Из Метаданные().ТабличныеЧасти Цикл
			СтруктураРеквизитов.Вставить(ТЧ.Имя, ЭтотОбъект[ТЧ.Имя].Выгрузить());
		КонецЦикла; 

		НеВосстанавливатьНастройку = Истина;
		
		СформироватьЗаголовокФормы();

	КонецЕсли;
	
КонецПроцедуры // ПередОткрытием()     ЭтотОбъект

// Процедура - обработчик события при открытии формы
//
Процедура ПриОткрытии()
	
	УстановилиСверткуИзНастройки = Ложь;
	
	Если НЕ (НеВосстанавливатьНастройку = Истина) Тогда
		//отработаем сворачивание панели "Отбор"...
		Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда

			УстановилиСверткуИзНастройки = истина;
			ЭлементыФормы.ПанельОтбор.Свертка = ?(СохраненныеНастройки.ОтборПомечен, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Верх);
			//Это, что выше, не работает при еще не открытой форме.
			УправлениеПОметкамиКнопокКоманднойПанели();
		КонецЕсли;
		ЗаполнитьНачальныеНастройки();
	Иначе
		//в следующий раз настройку мы все-таки восстановим - форма уже открыта...
		НеВосстанавливатьНастройку = Ложь;
		
	КонецЕсли;
	Если НЕ УстановилиСверткуИзНастройки Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
	Если ДатаНач='00010101' Тогда
		ДатаНач=ДатаНачалаПериода(РабочаяДата,Перечисления.Периодичность.Месяц);
	КонецЕсли;
	
	Если ДатаКон='00010101' Тогда
		ДатаКон=ДатаКонцаПериода(РабочаяДата,Перечисления.Периодичность.Месяц);
	КонецЕсли;
	
	НП.УстановитьПериод(ДатаНач,ДатаКон);
	
	УправлениеПометкамиКнопокКоманднойПанели();
	
	УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными);
	
КонецПроцедуры

// Процедура - обработчик события перед сохранением значений формы
//
Процедура ПередСохранениемЗначений(Отказ)

	СохраненныеНастройки = СформироватьСтруктуруДляСохраненияНастроек();

КонецПроцедуры // ПередСохранениемЗначений()

// Процедура - обработчик события после восстановления значений формы
//
Процедура ПослеВосстановленияЗначений()

	Если Не Открыта() И (НеВосстанавливатьНастройку = Истина) Тогда

		Для каждого Реквизит Из Метаданные().Реквизиты Цикл
			ЭтотОбъект[Реквизит.Имя] = СтруктураРеквизитов[Реквизит.Имя];
		КонецЦикла; 

		Для каждого ТЧ Из Метаданные().ТабличныеЧасти Цикл
			ЭтотОбъект[ТЧ.Имя].Загрузить(СтруктураРеквизитов[ТЧ.Имя]);
		КонецЦикла; 

		Возврат;

	КонецЕсли; 

	Если Не НеВосстанавливатьНастройку Тогда 
	
	Пока ПостроительОтчета.Отбор.Количество()>0 Цикл
		ПостроительОтчета.Отбор.Удалить(0);
	КонецЦикла; 

	Состояние("Заполнение по умолчанию");
	ЗаполнитьНачальныеНастройки();
	
	Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда

		ПостроительОтчета.УстановитьНастройки(СохраненныеНастройки.НастройкиПостроителя);
		Показатели.Загрузить(СохраненныеНастройки.Показатели);
		ОсновныеГруппировки.Загрузить(СохраненныеНастройки.ОсновныеГруппировки);
		ДополнительныеГруппировки.Загрузить(СохраненныеНастройки.ДополнительныеГруппировки);

		// Остальные реквизиты отчета восстанавливаются стандартно

	КонецЕсли; 

	ЭлементыФормы.ДокументРезультат.Очистить();
	
	СформироватьЗаголовокФормы();
	
	КонецЕсли;

КонецПроцедуры // ПослеВосстановленияЗначений()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройки1ПриИзменении(Элемент)

	ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры // ПолеНастройки1ПриИзменении()

// Процедура - обработчик изменения данных в поле значения отбора С
//
Процедура ПолеНастройкиС1ПриИзменении(Элемент)

	ПолеНастройкиСПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры // ПолеНастройкиС1ПриИзменении()

// Процедура - обработчик изменения данных в поле значения отбора ПО
//
Процедура ПолеНастройкиПо1ПриИзменении(Элемент)

	ПолеНастройкиПоПриИзменении(Элемент, ПостроительОтчета.Отбор);

КонецПроцедуры // ПолеНастройкиПо1ПриИзменении()

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравнения1ПриИзменении(Элемент)

	ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры // ПолеВидаСравнения1ПриИзменении()

// Процедура - обработчик нажатия кнопки настройки периода
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
		
	Если НП.Редактировать() Тогда
		
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();
		
	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик события "Обработка расшифровки" поля табличного документа ДокументРезультат
//
Процедура ДокументРезультатОбработкаРасшифровки(Элемент, РасшифровкаСтроки, СтандартнаяОбработка)
	
	РасшифровкаСтроки=Элемент.Область(Элемент.ТекущаяОбласть.Верх, 3).Расшифровка;
	
	Если ТипЗнч(РасшифровкаСтроки)=Тип("Структура") Тогда
		
		СтандартнаяОбработка=Ложь;
		
		Расшифровка=СкопироватьУниверсальнуюКоллекцию(РасшифровкаСтроки);
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = Элемент.Область(ВысотаЗаголовка+1, Элемент.ТекущаяОбласть.Лево).Расшифровка;
		
		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда
			
			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;
			
		КонецЕсли;
		
		
		ОбработкаРасшифровкиСводныхЗначений(Расшифровка);
		
	КонецЕсли;
	
КонецПроцедуры // ДокументРезультатОбработкаРасшифровки()

Процедура ДетализацияПоПериодамПриИзменении(Элемент)
	
	СформироватьНастройкиОтчета(Новый Массив,Новый Структура);
	
КонецПроцедуры

