

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНач, ДатаКон);
	Если НП.Редактировать() Тогда
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();
	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик нажатия кнопки ОК.
//
Процедура ОсновныеДействияФормыОК(Кнопка)

	ЕстьОшибки = Ложь;
	Для Инд=0 По ПостроительОтчета.ИзмеренияКолонки.Количество()-1  Цикл
	
		Для Инд2=0 По ПостроительОтчета.ИзмеренияСтроки.Количество()-1  Цикл

			Если ПостроительОтчета.ИзмеренияКолонки[Инд].ПутьКДанным = ПостроительОтчета.ИзмеренияСтроки[Инд2].ПутьКДанным Тогда

				Предупреждение("Повторяющаяся группировка " + ПостроительОтчета.ИзмеренияКолонки[Инд].Представление +"."+ Символы.ПС+
				"Нельзя использовать одинаковые поля группировки в строках и в колонках!");
				ЕстьОшибки = Истина;
			
			КонецЕсли; 
		КонецЦикла;
	
	КонецЦикла;

	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(Истина);
	
КонецПроцедуры // ОсновныеДействияФормыОК()

// Процедура - обработчик нажатия кнопки "Установить все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейУстановитьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Строка.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Снять все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейСнятьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Строка.Использование = Ложь;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик начала выбора значения отбора
//
Процедура ОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	// Отборы по свойствам и категориям должны быть обработаны специальным образом
	// Они определяются по представлению 
	Если Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "категории") Тогда

		// Ограничение списка категорий
		Назначение = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);
		СтандартнаяОбработка = Ложь;

		ФормаВыбораКатегории= Справочники.КатегорииОбъектов.ПолучитьФормуВыбора(, Элемент,);
		ФормаВыбораКатегории.РежимВыбора = Истина;
		ФормаВыбораКатегории.Отбор.НазначениеКатегории.Установить(Назначение);

		ФормаВыбораКатегории.Открыть();
		
	ИначеЕсли Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "св-во") Тогда

		Свойство = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);
		ТипыОтбора = Свойство.ТипЗначения;
		МассивТипов = ТипыОтбора.Типы();

			
		// Ограничение выбираемых типов
		Если МассивТипов.Количество() = 1 Тогда

			// Ограничение списка свойств
			Если ТипЗнч(Элемент.Значение) <> Тип("СписокЗначений") Тогда
				Если МассивТипов[0]=Тип("Число") Тогда
					Элемент.Значение=0;
				ИначеЕсли МассивТипов[0]=Тип("Строка") Тогда
					Элемент.Значение="";
				ИначеЕсли МассивТипов[0]=Тип("Дата") Тогда
					Элемент.Значение=ДатаНач;
				ИначеЕсли МассивТипов[0]=Тип("Булево") Тогда
					Элемент.Значение=Ложь;
				Иначе
					Элемент.Значение = Новый(МассивТипов[0]);
				КонецЕсли;
			Иначе
				Элемент.Значение.ТипЗначения = ТипыОтбора;
			КонецЕсли;

			Элемент.ВыбиратьТип = Ложь;

		Иначе

			Элемент.ОграничениеТипа = ТипыОтбора;
			Элемент.ВыбиратьТип = Истина;

		КонецЕсли;


		// Ограничение списка свойств
		Если ТипЗнч(Элемент.Значение) <> Тип("СписокЗначений") Тогда
			
			Элемент.ВыборПоВладельцу = Свойство;

		КонецЕсли; 
	
	КонецЕсли;
	
КонецПроцедуры // ОтборЗначениеНачалоВыбора()

// Процедура - обработчик начала выбора значения отбора
//
Процедура ОтборВидСравненияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	// В отборе по категориям можно использовать только равенство или неравенство одному значению
	Если Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "категории") Тогда

		Элемент.СписокВыбора.Очистить();
		Элемент.СписокВыбора.Добавить(ВидСравнения.Равно);
		
	КонецЕсли;
	
КонецПроцедуры // ОтборВидСравненияНачалоВыбораИзСписка()

// Процедура - обработчик перед удалением строки отбора
//
Процедура ОтборПередУдалением(Элемент, Отказ)
	
	Если Не ПустаяСтрока(Элемент.ТекущаяСтрока.Имя) Тогда
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры // ОтборПередУдалением()
