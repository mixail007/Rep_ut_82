Перем НП Экспорт;

// Выполняет запрос и формирует таблицу соответствующую базе распределения
// косвенных расходов
//
Процедура ВывестиВОтчетДанныеПоБазеРаспределения(ДокументРезультат, Макет)
	
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ПараметрыБазыРаспределения");
	
	Результат = ПроанализироватьРеализацию(ДатаНач, ДатаКон, Организация);
	Если Результат.Следующий() Тогда
		ОбластьШапкаТаблицы.Параметры.ВыручкаБезНДС = Результат.ВыручкаБезНДС + Результат.ВыручкаЕНВД;
		ОбластьШапкаТаблицы.Параметры.ВыручкаНДС0 =   Результат.ВыручкаНДС0;
		ОбластьШапкаТаблицы.Параметры.ВыручкаНДС =    Результат.ВыручкаНДС;
		ОбластьШапкаТаблицы.Параметры.ВсегоВыручка =  Результат.ВыручкаНДС + Результат.ВыручкаНДС0 + Результат.ВыручкаБезНДС + Результат.ВыручкаЕНВД;
	КонецЕсли;
		
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);

КонецПроцедуры

// Выполняет запрос к регистру НДСПоКосвеннымРасходам
// и выбирает информацию по косвенным расходам текущего периода, которые были
// распределены на соответствующие ставки реализации
//
Процедура ВывестиВОтчетДанныеПоРаспределениюКосвенныхРасходов(ДокументРезультат, Макет)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	НДСКосвенныеРасходыОбороты.ВидЦенности,
					|	НДСКосвенныеРасходыОбороты.Поставщик,
					|	НДСКосвенныеРасходыОбороты.СчетФактура,
					|	НДСКосвенныеРасходыОбороты.СтавкаНДС,
					|	ВЫБОР КОГДА НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации = &ГруппаСтавокБезНДС 	ТОГДА НДСКосвенныеРасходыОбороты.СуммаБезНДСОборот 	ИНАЧЕ 0 КОНЕЦ КАК БезНДССумма,
					|	ВЫБОР КОГДА НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации = &ГруппаСтавокБезНДС 	ТОГДА НДСКосвенныеРасходыОбороты.НДСОборот 			ИНАЧЕ 0 КОНЕЦ КАК БезНДС,
					|	ВЫБОР КОГДА НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации = &ГруппаСтавокНДС0 		ТОГДА НДСКосвенныеРасходыОбороты.СуммаБезНДСОборот 	ИНАЧЕ 0 КОНЕЦ КАК НДС0Сумма,
					|	ВЫБОР КОГДА НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации = &ГруппаСтавокНДС0 		ТОГДА НДСКосвенныеРасходыОбороты.НДСОборот 			ИНАЧЕ 0 КОНЕЦ КАК НДС0,
					|	ВЫБОР КОГДА НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации = &ГруппаСтавокНДС 		ТОГДА НДСКосвенныеРасходыОбороты.СуммаБезНДСОборот 	ИНАЧЕ 0 КОНЕЦ КАК Сумма,
					|	ВЫБОР КОГДА НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации = &ГруппаСтавокНДС	 	ТОГДА НДСКосвенныеРасходыОбороты.НДСОборот 			ИНАЧЕ 0 КОНЕЦ КАК НДС,
					|	ВЫБОР КОГДА НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации = &НеРаспределено 		ТОГДА НДСКосвенныеРасходыОбороты.СуммаБезНДСОборот 	ИНАЧЕ 0 КОНЕЦ КАК ВсегоСумма,
					|	ВЫБОР КОГДА НДСКосвенныеРасходыОбороты.СтавкаНДСРеализации = &НеРаспределено		ТОГДА НДСКосвенныеРасходыОбороты.НДСОборот 			ИНАЧЕ 0 КОНЕЦ КАК ВсегоНДС
					|
					|ИЗ
					|	РегистрНакопления.НДСКосвенныеРасходы.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК НДСКосвенныеРасходыОбороты
					|
					|АВТОУПОРЯДОЧИВАНИЕ";
					
	Запрос.УстановитьПараметр("Организация", 			Организация);
	Запрос.УстановитьПараметр("НачалоПериода", 			Новый Граница(ДатаНач, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",  			Новый Граница(КонецДня(ДатаКон), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГруппаСтавокБезНДС", 	Перечисления.ВариантыРаспределенияНДСКосвенныхРасходов.РеализацияБезНДС);
	Запрос.УстановитьПараметр("ГруппаСтавокНДС0", 		Перечисления.ВариантыРаспределенияНДСКосвенныхРасходов.РеализацияНДС0);
	Запрос.УстановитьПараметр("ГруппаСтавокНДС", 		Перечисления.ВариантыРаспределенияНДСКосвенныхРасходов.РеализацияСНДС);
	Запрос.УстановитьПараметр("НеРаспределено", 		Перечисления.ВариантыРаспределенияНДСКосвенныхРасходов.НеРаспределено);
	
	Результат = Запрос.Выполнить();
	ТаблицаРезультата = Результат.Выгрузить();
    ТаблицаРезультата.Свернуть("ВидЦенности,Поставщик,СчетФактура,СтавкаНДС", "ВсегоСумма, ВсегоНДС, БезНДССумма, БезНДС, НДС0Сумма, НДС0, Сумма, НДС");
	
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицыРаспределения");
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги  = Макет.ПолучитьОбласть("Итоги");
	
	Для Каждого СтрРез Из ТаблицаРезультата Цикл
		Если ТипЗнч(СтрРез.СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			ОбластьСтрока.Параметры.ДатаОперации = "" + Формат(СтрРез.СчетФактура.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + СтрРез.СчетФактура.НомерВходящегоДокумента;
		Иначе
			Документ = НайтиПодчиненныйДокумент(СтрРез.СчетФактура, "СчетФактураПолученный");
			Если Документ = Неопределено Тогда
				Попытка
					ОбластьСтрока.Параметры.ДатаОперации = "" + Формат(СтрРез.СчетФактура.Дата, "ДФ=dd.MM.yyyy") + ", №" + СтрРез.СчетФактура.Номер;
				Исключение
					ОбластьСтрока.Параметры.ДатаОперации = "";
				КонецПопытки; 
			Иначе
				ОбластьСтрока.Параметры.ДатаОперации = "" + Формат(Документ.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + Документ.НомерВходящегоДокумента;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.НаименованиеПродавца = СтрРез.Поставщик;
		ОбластьСтрока.Параметры.ВидЦенности = 	СтрРез.ВидЦенности;
		ОбластьСтрока.Параметры.ВсегоСумма = 	СтрРез.ВсегоСумма;
		ОбластьСтрока.Параметры.ВсегоНДС = 		СтрРез.ВсегоНДС;
		ОбластьСтрока.Параметры.БезНДССумма = 	СтрРез.БезНДССумма;
		ОбластьСтрока.Параметры.БезНДС = 		СтрРез.БезНДС;
		ОбластьСтрока.Параметры.НДС0Сумма = 	СтрРез.НДС0Сумма;
		ОбластьСтрока.Параметры.НДС0 = 			СтрРез.НДС0;
		ОбластьСтрока.Параметры.Сумма = 		СтрРез.Сумма;
		ОбластьСтрока.Параметры.НДС = 			СтрРез.НДС;
		
		ДокументРезультат.Вывести(ОбластьСтрока);
		
	КонецЦикла;

	ОбластьИтоги.Параметры.ИтогВсегоСумма = 	ТаблицаРезультата.Итог("ВсегоСумма");
	ОбластьИтоги.Параметры.ИтогВсегоНДС = 		ТаблицаРезультата.Итог("ВсегоНДС");
	ОбластьИтоги.Параметры.ИтогБезНДССумма = 	ТаблицаРезультата.Итог("БезНДССумма");
	ОбластьИтоги.Параметры.ИтогБезНДС = 		ТаблицаРезультата.Итог("БезНДС");
	ОбластьИтоги.Параметры.ИтогНДС0Сумма = 		ТаблицаРезультата.Итог("НДС0Сумма");
	ОбластьИтоги.Параметры.ИтогНДС0 = 			ТаблицаРезультата.Итог("НДС0");
	ОбластьИтоги.Параметры.ИтогСумма = 			ТаблицаРезультата.Итог("Сумма");
	ОбластьИтоги.Параметры.ИтогНДС = 			ТаблицаРезультата.Итог("НДС");
	
	ДокументРезультат.Вывести(ОбластьИтоги);
	
КонецПроцедуры
	
// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	НачалоПериода = ДатаНач;
	КонецПериода = ДатаКон;
	
	ДокументРезультат.Очистить();
	
	Макет = ПолучитьМакет("Таблица");	

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	Заголовок = "Распределение сумм НДС по приобретенным ценностям, относящимся к косвенным расходам";
	
	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.Заголовок 		   = Заголовок;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеНеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	Запрос = Новый Запрос;
	
	ВывестиВОтчетДанныеПоБазеРаспределения(ДокументРезультат, Макет);
	
	ВывестиВОтчетДанныеПоРаспределениюКосвенныхРасходов(ДокументРезультат, Макет);

КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП           = Новый НастройкаПериода;

