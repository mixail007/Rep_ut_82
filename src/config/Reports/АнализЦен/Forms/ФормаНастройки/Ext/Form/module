////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик нажатия кнопки ОК.
//
Процедура ОсновныеДействияФормыОК(Кнопка)

	Закрыть(Истина);

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "ИспользоватьСвойстваИКатегории".
//
Процедура ИспользоватьСвойстваИКатегорииПриИзменении(Элемент)

	// Запоминаем текущую настройку
	Настройки = ПостроительОтчета.ПолучитьНастройки();

	// Перезаполнение объекта (с новым текстом запроса)
	ЗаполнитьНачальныеНастройки();

	// Восстанавливаем запомненную настройку
	ПостроительОтчета.УстановитьНастройки(Настройки);

	Оповестить("ИзмененТекстЗапроса", , ЭтаФорма);
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля "Значение" табличной части "Отбор".
//
Процедура ОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	// Отборы по свойствам и категориям должны быть обработаны специальным образом
	// Они определяются по представлению 
	Если Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "категории") Тогда

		// Ограничение списка категорий
		Назначение = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборКатегории(Элемент, Назначение, ЭтаФорма, СтандартнаяОбработка);

	ИначеЕсли Найти(НРег(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление), "св-во") Тогда

		Свойство = мСоответствиеНазначений.Получить(ЭлементыФормы.Отбор.ТекущаяСтрока.Представление);

		ОсуществитьВыборСвойства(Элемент, Свойство, ЭтаФорма, СтандартнаяОбработка);

	КонецЕсли;
		
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Установить все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейУстановитьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Строка.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Снять все" командной панели списка показателей
//
Процедура КоманднаяПанельСписокПоказателейСнятьВсе(Кнопка)
	
	Для каждого Строка Из  Показатели Цикл
		Если Строка.Имя<>"Цена" Тогда
			Строка.Использование = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик события "Редактирование значения" поля "Значение" табличной части "Отбор"
//
Процедура ОтборЗначениеОткрытие(Элемент, СтандартнаяОбработка)
	Элемент.ОграничениеТипа = Новый ОписаниеТипов("Дата",,, новый КвалификаторыДаты(ЧастиДаты.Дата));

КонецПроцедуры

// Процедура - обработчик события "Изменение значения" поля "Значение" табличной части "Отбор"
//
Процедура ОтборЗначениеПриИзменении(Элемент)
	Если ЭлементыФОрмы.Отбор.ТекущаяСтрока.Имя = "ПериодЦен" тогда
		Элемент.Значение = КонецДня(Элемент.Значение);
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "Изменение значения" поля "ЗначениеПо" табличной части "Отбор"
//
Процедура ОтборЗначениеПоПриИзменении(Элемент)
	Если ЭлементыФОрмы.Отбор.ТекущаяСтрока.Имя = "ПериодЦен" тогда
		Элемент.Значение = КонецДня(Элемент.Значение);
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "Изменение значения" поля "ЗначениеС" табличной части "Отбор"
//
Процедура ОтборЗначениеСПриИзменении(Элемент)
	Если ЭлементыФОрмы.Отбор.ТекущаяСтрока.Имя = "ПериодЦен" тогда
		Элемент.Значение = КонецДня(Элемент.Значение);
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "Изменение флажка" табличной части "Показатели"
//
Процедура СписокПоказателейПриИзмененииФлажка(Элемент, Колонка)
	Если Элемент.ТекущиеДанные.Имя = "Цена" тогда
		Элемент.ТекущиеДанные.Использование = Истина;
		Предупреждение("Показатель ""Цена"" всегда выводится в отчете!");
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" элемента формы "ВалютаОтчета"
//
Процедура ВалютаОтчетаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Показатели.Найти("Цена", "Имя").Представление = "Цена в "+ВалютаОтчета.Наименование;
КонецПроцедуры

// Процедура - обработчик события "ПередУдалением" элемента формы "Отбор"
//
Процедура ОтборПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если мСписокОтбора.НайтиПоЗначению(Элемент.ТекущиеДанные.Имя) <> Неопределено Тогда
			Отказ = Истина;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры
