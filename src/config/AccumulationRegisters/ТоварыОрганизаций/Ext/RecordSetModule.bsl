Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	
	Если ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаСерийИХарактеристикТоваров") Тогда
		ТекстХарактеристикаНоменклатуры = "ХарактеристикаНоменклатурыСтарая";
		ТекстСерияНоменклатуры = "СерияНоменклатурыСтарая";
	Иначе
		ТекстХарактеристикаНоменклатуры = "ХарактеристикаНоменклатуры";
		ТекстСерияНоменклатуры = "СерияНоменклатуры";
	КонецЕсли; 
	
	ТекстКачество = "Качество";
	
	ЕстьСерия             = ЕстьРеквизитТабЧастиДокумента(ТекстХарактеристикаНоменклатуры, МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьХарактеристика    = ЕстьРеквизитТабЧастиДокумента(ТекстСерияНоменклатуры, МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьДокументРезерва   = ЕстьРеквизитТабЧастиДокумента("ДокументРезерва", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьДокументПередачи  = ЕстьРеквизитДокумента("ДокументПередачи", МетаданныеДокумента);
	ЕстьКачество          = ЕстьРеквизитТабЧастиДокумента(ТекстКачество, МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьФлагУказанияСерий = ЕстьРеквизитТабЧастиДокумента("СерияУказываетсяПриОтпускеСоСклада", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьКоэффициент       = ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);

	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ  Ссылка = &ДокументСсылка";


	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация); 
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка()); 
	
	Если СтруктураШапкиДокумента.Свойство("Комиссионер") Тогда
		Запрос.УстановитьПараметр("Комиссионер", СтруктураШапкиДокумента.Комиссионер); 
	Иначе
		Запрос.УстановитьПараметр("Комиссионер", Справочники.Контрагенты.ПустаяСсылка()); 
	КонецЕсли;
	
	Если ЕстьДокументПередачи Тогда
		Запрос.УстановитьПараметр("ДокументПередачи", СтруктураШапкиДокумента.ДокументПередачи);
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док." + ТекстХарактеристикаНоменклатуры + ".Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"")
	+ ?(ЕстьСерия, "
	|	Док." + ТекстСерияНоменклатуры + ".Представление                    КАК СерияНоменклатурыПредставление,"
	,"") + "
	|   &Комиссионер                                           КАК Комиссионер," 
	+ ?(ЕстьКоэффициент, "
	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество,", "
	|	СУММА(Док.Количество)                                  КАК ДокументКоличество,") + "
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                    КАК ОстатокКоличество,
	|	МАКСИМУМ(ОстаткиКПередаче.КоличествоОстаток)           КАК ОстатокКПередаче,
	|	0                                                      КАК ОстатокКПередачеПоДокументу
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
	|	И Организация = &Организация
	|   И Комиссионер = &Комиссионер
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура        = Остатки.Номенклатура "
	+ ?(ЕстьХарактеристика, "
	| И Док." + ТекстСерияНоменклатуры + "= Остатки.СерияНоменклатуры"
	,"")
	+ ?(ЕстьСерия, "
	| И Док." + ТекстСерияНоменклатуры + "           = Остатки.СерияНоменклатуры"
	,"") + "
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеОрганизаций.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
	|	И Организация = &Организация"
	+ ?(ЕстьДокументПередачи,	"
	|	И ДокументПередачи <> &ДокументПередачи", "") + "
	|	) КАК ОстаткиКПередаче
	|ПО 
	|	Док.Номенклатура                            = ОстаткиКПередаче.Номенклатура "
	+ ?(ЕстьХарактеристика, "
	| И Док." + ТекстХарактеристикаНоменклатуры + " = ОстаткиКПередаче.ХарактеристикаНоменклатуры"
	,"")
	+ ?(ЕстьСерия, "
	| И Док." + ТекстСерияНоменклатуры + "= ОстаткиКПередаче.СерияНоменклатуры"
	,"") 
	+ ?(ЕстьКачество, "
	| И Док." + ТекстКачество + "                   = ОстаткиКПередаче.Качество"
	,"") 
	+ ?(ЕстьДокументРезерва, "
	| И Док.ДокументРезерва                   <> ОстаткиКПередаче.ДокументПередачи"
	,"") + "
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|	И Не Док.Номенклатура.Услуга // остатки по услугам контролировать не надо.
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура "
	+ ?(ЕстьХарактеристика, "
	|	, Док." + ТекстХарактеристикаНоменклатуры
	,"")
	+ ?(ЕстьСерия, "
	|	, Док." + ТекстСерияНоменклатуры
	,"")
	+ ?(ЕстьКачество, "
	|	, Док." + ТекстКачество
	,"") + "
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыОрганизаций.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоПоОрганизации        = ?(Выборка.ОстатокКоличество = NULL, 0, Выборка.ОстатокКоличество);
		КоличествоКПередаче            = ?(Выборка.ОстатокКПередаче = NULL, 0, Выборка.ОстатокКПередаче);
		КоличествоКПередачеПоДокументу = 0;//?(Выборка.ОстатокКПередачеПоДокументу = NULL, 0, Выборка.ОстатокКПередачеПоДокументу);

		Если КоличествоПоОрганизации - (КоличествоКПередаче - КоличествоКПередачеПоДокументу) < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка по организации " + ДокументОбъект.Организация + " товара " +  
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, ""),
			                          ?(ЕстьСерия, Выборка.СерияНоменклатурыПредставление,"")) + 
			                          ?(ЗначениеНеЗаполнено(Выборка.Комиссионер), "", " у комиссионера " + Выборка.Комиссионер) +
			" недостаточно.";

			Если НЕ РазрешеноПревышениеОстаткаТоваровОрганизации() Тогда
				ОшибкаНетОстатка(СтрокаСообщения, КоличествоПоОрганизации, Выборка.ДокументКоличество,
				Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);
			Иначе
				СтрокаСообщения = СтрокаСообщения + Символы.ПС + Символы.Таб
				                + "Не хватает " + (Выборка.ДокументКоличество - (КоличествоПоОрганизации - (КоличествоКПередаче - КоличествоКПередачеПоДокументу))) + " " + Выборка.ЕдиницаХраненияОстатковПредставление
				                + "; Остаток " + КоличествоПоОрганизации + " " + Выборка.ЕдиницаХраненияОстатковПредставление
				                + "; Требуется " + Выборка.ДокументКоличество + " " + Выборка.ЕдиницаХраненияОстатковПредставление;
				СообщитьОбОшибке(СтрокаСообщения);
			КонецЕсли;
			Сообщить("Зарезервировано под выписанные документы: " + (КоличествоКПередаче - КоличествоКПередачеПоДокументу));

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатковРазукомплектация(ДокументОбъект, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента;
	
	Если ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаСерийИХарактеристикТоваров") Тогда
		ТекстХарактеристикаНоменклатуры = "ХарактеристикаНоменклатурыСтарая";
		ТекстСерияНоменклатуры = "СерияНоменклатурыСтарая";
	Иначе
		ТекстХарактеристикаНоменклатуры = "ХарактеристикаНоменклатуры";
		ТекстСерияНоменклатуры = "СерияНоменклатуры";
	КонецЕсли; 
	
	ЕстьСерия           = ЕстьРеквизитДокумента(ТекстХарактеристикаНоменклатуры, МетаданныеДокумента);
	ЕстьХарактеристика  = ЕстьРеквизитДокумента(ТекстСерияНоменклатуры, МетаданныеДокумента);
	ЕстьДокументРезерва = ЕстьРеквизитДокумента("ДокументРезерва", МетаданныеДокумента);

	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";


	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация); 
	
	Если СтруктураШапкиДокумента.Свойство("Комиссионер") Тогда
		Запрос.УстановитьПараметр("Комиссионер", СтруктураШапкиДокумента.Комиссионер); 
	Иначе
		Запрос.УстановитьПараметр("Комиссионер", Справочники.Контрагенты.ПустаяСсылка()); 
	КонецЕсли;
	
		

	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док." + ТекстХарактеристикаНоменклатуры + ".Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"")
	+ ?(ЕстьСерия, "
	|	Док." + ТекстСерияНоменклатуры + ".Представление                    КАК СерияНоменклатурыПредставление,"
	,"") + "
	|   &Комиссионер                                           КАК Комиссионер,
	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество, 
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                    КАК ОстатокКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
	|	И Организация = &Организация
	|   И Комиссионер = &Комиссионер
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура        = Остатки.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	| И Док." + ТекстХарактеристикаНоменклатуры + "   = Остатки.ХарактеристикаНоменклатуры"
	,"")
	+ ?(ЕстьСерия, "
	| И Док." + ТекстСерияНоменклатуры + "           = Остатки.СерияНоменклатуры"
	,"") + "
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|	И Не Док.Номенклатура.Услуга" // остатки по услугам контролировать не надо.
	+ ?(ЕстьДокументРезерва, "
	| // Если мы списываем горячий резерв, то контроль остатков по организации не нужен,
	| //поскольку с организации этот товар уже списан
	|   И НЕ (Док.ДокументРезерва ССЫЛКА Документ.РеализацияТоваровУслуг
	|         ИЛИ Док.ДокументРезерва ССЫЛКА Документ.ПередачаТоваров)", "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	|	, Док." + ТекстХарактеристикаНоменклатуры
	,"")
	+ ?(ЕстьСерия, "
	|	, Док." + ТекстСерияНоменклатуры
	,"") + "
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыОрганизаций.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоНаСкладе = ?(Выборка.ОстатокКоличество = NULL, 0, Выборка.ОстатокКоличество);

		Если КоличествоНаСкладе < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка по организации " + ДокументОбъект.Организация + " товара " +  
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, ""),
			                          ?(ЕстьСерия, Выборка.СерияНоменклатурыПредставление,"")) + 
			                          ?(ЗначениеНеЗаполнено(Выборка.Комиссионер), "", " у комиссионера " + Выборка.Комиссионер) +
			" недостаточно.";

			Если НЕ РазрешеноПревышениеОстаткаТоваровОрганизации() Тогда
				ОшибкаНетОстатка(СтрокаСообщения, КоличествоНаСкладе, Выборка.ДокументКоличество,
				Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);
			Иначе
				СтрокаСообщения = СтрокаСообщения + Символы.ПС + Символы.Таб
				                + "Не хватает " + (Выборка.ДокументКоличество - КоличествоНаСкладе) + " " + Выборка.ЕдиницаХраненияОстатковПредставление
				                + "; Остаток " + КоличествоНаСкладе + " " + Выборка.ЕдиницаХраненияОстатковПредставление
				                + "; Требуется " + Выборка.ДокументКоличество + " " + Выборка.ЕдиницаХраненияОстатковПредставление;
				СообщитьОбОшибке(СтрокаСообщения);
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()

Процедура ПередЗаписью(Отказ, Замещение)
		
	ПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры

