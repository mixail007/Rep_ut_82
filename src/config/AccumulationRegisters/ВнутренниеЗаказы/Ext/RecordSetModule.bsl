Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщение.
//
// Параметры:
//  ДокументОбъект - объект проводимого документа, 
//  Параметры      - структура, содержащая значения параметров, необходимых для контроля остатков
//  Отказ          - флаг отказа в проведении,
//  Заголовок      - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, Параметры, Отказ, Заголовок) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТабличнойЧасти   = Параметры["ИмяТабЧасти"];
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ЕстьХарактеристика  = ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ИмяРеквизитаЗаказ   = Параметры["ИмяРеквизитаЗаказ"];
	ПутьКЗаказу         = ?( Параметры["ЗаказВШапке"], "Ссылка.", "") + ИмяРеквизитаЗаказ;
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр( "ДокументСсылка",  ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СтатусПартии", ?( ИмяТабличнойЧасти = "ВозвратнаяТара",
		Перечисления.СтатусыПартийТоваров.ВозвратнаяТара,
		Перечисления.СтатусыПартийТоваров.Купленный));
	Запрос.УстановитьПараметр( "ПустВнутрЗаказ",  Документы.ВнутреннийЗаказ.ПустаяСсылка());
	
	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док." + ПутьКЗаказу + ".Представление            КАК ЗаказПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"") + "
	|	СУММА(Док.Количество )                                 КАК ДокументКоличество, 
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                    КАК ОстатокКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ВнутренниеЗаказы.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
	|   И СтатусПартии    = &СтатусПартии) КАК Остатки
	|ПО 
	|	Док.Номенклатура  = Остатки.Номенклатура
	|	И Док." + ПутьКЗаказу + " = Остатки.ВнутреннийЗаказ "
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры"
	,"") + "
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	| И Док." + ПутьКЗаказу + " ССЫЛКА Документ.ВнутреннийЗаказ
	| И Док." + ПутьКЗаказу + " <> &ПустВнутрЗаказ
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура,
	|	Док." + ПутьКЗаказу
	+ ?(ЕстьХарактеристика, "
	|	, Док.ХарактеристикаНоменклатуры "
	,"") + "
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ВнутренниеЗаказы.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоОстаток = ?(Выборка.ОстатокКоличество = NULL, 0, Выборка.ОстатокКоличество);

		Если КоличествоОстаток < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка " + 
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление,
									  ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, "")) +
			", заказанного по документу " + (Выборка.ЗаказПредставление) + " недостаточно.";

			ОшибкаНетОстатка(СтрокаСообщения, КоличествоОстаток, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()

Процедура ПередЗаписью(Отказ, Замещение)
		
	ПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры