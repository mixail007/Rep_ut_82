Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента    = ДокументОбъект.Метаданные();
	ИмяДокумента           = МетаданныеДокумента.Имя;
	ИмяТаблицы             = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ЕстьХарактеристика     = ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьИсходноеРазмещение = ЕстьРеквизитТабЧастиДокумента("ИсходноеРазмещение", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьСделка             = ЕстьРеквизитДокумента("Сделка", МетаданныеДокумента);
	ЕстьКоэффициент        = ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);
	
	Если ЕстьСделка Тогда
		ЗаказПоставщику    = СтруктураШапкиДокумента.Сделка;
	Иначе
		ЗаказПоставщику    = СтруктураШапкиДокумента.Ссылка;
	КонецЕсли;
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";


	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ЗаказПоставщику",       ЗаказПоставщику);
	Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойВнутреннийЗаказ", Документы.ВнутреннийЗаказ.ПустаяСсылка());
	
	Если ЕстьИсходноеРазмещение Тогда
		ИмяРазмещения = "ИсходноеРазмещение";
	Иначе
		ИмяРазмещения = "ЗаказПокупателя";
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"") + "
	|	Док."+ ИмяРазмещения + "                               КАК Размещение,"
	+ ?(ЕстьКоэффициент, "
	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество,", "
	|	СУММА(Док.Количество)                                  КАК ДокументКоличество,") + "
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                    КАК ОстатокКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
	|	И ЗаказПоставщику            = &ЗаказПоставщику
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура
	|	И Остатки.ЗаказПокупателя       = Док." + ИмяРазмещения
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры"
	,"") + "
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|	И Док." + ИмяРазмещения + " <> Неопределено
	|	И Док." + ИмяРазмещения + " <> &ПустойЗаказПокупателя
	|	И Док." + ИмяРазмещения + " <> &ПустойВнутреннийЗаказ
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	|	, Док.ХарактеристикаНоменклатуры "
	,"") + "
	|	, Док." + ИмяРазмещения + "
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоОстаток = ?(Выборка.ОстатокКоличество = NULL, 0, Выборка.ОстатокКоличество);

		Если КоличествоОстаток < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка " + 
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, "")) +
			", размещенного по документу " + (Выборка.Размещение) + " недостаточно.";

			ОшибкаНетОстатка(СтрокаСообщения, КоличествоОстаток, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);
            //+++ 09.10.2014
			Отказ = ложь;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()

// Процедура контролирует остаток по заказам покупателей при проведении 
// по данному регистру по переданному документу и его табличной части. 
// В случае недостатка товаров выставляется флаг отказа и выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатковПоЗаказам(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ЕстьХарактеристика  = ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьНовоеРазмещение = ЕстьРеквизитТабЧастиДокумента("НовоеРазмещение", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьЗаказПокупателя = ЕстьРеквизитТабЧастиДокумента("ЗаказПокупателя", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьКоэффициент     = ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);
	
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";

	ТекстЗапросаОграниченияПоКомплектам = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	Номенклатура 
	|ИЗ 	
	|	РегистрСведений.КомплектующиеНоменклатуры 
	|ГДЕ
	|	Номенклатура В (
	|					ВЫБРАТЬ
	|						ЗакПостОстатки.Номенклатура
	|					ИЗ
	|						РегистрНакопления.ЗаказыПокупателей.Остатки КАК ЗакПостОстатки
	|					СОЕДИНЕНИЕ // Оставим только нужные заказы покупателя
	|						Документ.ЗаказПоставщику.Товары КАК ДокЗакПост
	|					ПО
	|						ЗакПостОстатки.ЗаказПокупателя  = ДокЗакПост.ЗаказПокупателя
	|						И ДокЗакПост.Ссылка = &ДокументСсылка
	|					)";
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",          ДокументОбъект.Ссылка);
	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		Запрос.УстановитьПараметр("СтатусПартии", Перечисления.СтатусыПартийТоваров.ВозвратнаяТара);
	Иначе
		Запрос.УстановитьПараметр("СтатусПартии", Перечисления.СтатусыПартийТоваров.Купленный);
	КонецЕсли;
	
	МассивПустыхЗаказов = Новый Массив;
	МассивПустыхЗаказов.Добавить( Документы.ЗаказПокупателя.ПустаяСсылка());
	МассивПустыхЗаказов.Добавить( Документы.ВнутреннийЗаказ.ПустаяСсылка());
	МассивПустыхЗаказов.Добавить( Неопределено);
	
	//Запрос.УстановитьПараметр("ПустойЗаказПокупателя", МассивПустыхЗаказов);
	Запрос.УстановитьПараметр("ПустыеЗаказы", МассивПустыхЗаказов);

	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление, " +
	?(ЕстьНовоеРазмещение, "
	|	Док.НовоеРазмещение                                    КАК Размещение, ", "
	|	Док.ЗаказПокупателя                                    КАК Размещение,") + "
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"")
	+ ?(ЕстьКоэффициент, "
	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество,", "
	|	СУММА(Док.Количество)                                  КАК ДокументКоличество,") 
	+ ?(ИмяТабличнойЧасти = "Товары", "
	|	МАКСИМУМ(ОстаткиКомплектующихВКомплектах.КоличествоВКомплектах) КАК КоличествоВКомплектах,", "")
	+ ?(ЕстьНовоеРазмещение, "
	|	МАКСИМУМ(ВЫБОР КОГДА Док.НовоеРазмещение ССЫЛКА Документ.ВнутреннийЗаказ  ТОГДА
	|		ОстаткиВнутр.КоличествоОстаток
	|	ИНАЧЕ
	|		Остатки.КоличествоОстаток
	|	КОНЕЦ) КАК ОстатокКоличество", "
	|	МАКСИМУМ(ВЫБОР КОГДА Док.ЗаказПокупателя ССЫЛКА Документ.ВнутреннийЗаказ  ТОГДА
	|		ОстаткиВнутр.КоличествоОстаток
	|	ИНАЧЕ
	|		Остатки.КоличествоОстаток
	|	КОНЕЦ) КАК ОстатокКоличество") + "
	
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
	|   И СтатусПартии = &СтатусПартии
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура" + 
	?(ЕстьНовоеРазмещение, "
	|	И Остатки.ЗаказПокупателя       = Док.НовоеРазмещение",
	?(ЕстьЗаказПокупателя, "
	|	И Остатки.ЗаказПокупателя       = Док.ЗаказПокупателя", ""))
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры"
	,"") + "
	// Остатки по внутренним заказам
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ВнутренниеЗаказы.Остатки(,
	|			Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Номенклатура 
	|							ИЗ
	|								Документ." + ИмяТаблицы + "
	|							ГДЕ Ссылка = &ДокументСсылка)
	|							   И СтатусПартии = &СтатусПартии
	|							) КАК ОстаткиВнутр
	|	ПО 
	|		Док.Номенклатура               = ОстаткиВнутр.Номенклатура
	|" + ?(ЕстьНовоеРазмещение, "
	|	  И Док.НовоеРазмещение            = ОстаткиВнутр.ВнутреннийЗаказ", "
	|     И Док.ЗаказПокупателя            = ОстаткиВнутр.ВнутреннийЗаказ") + "
	|" + ?(ЕстьХарактеристика, "
	|	  И Док.ХарактеристикаНоменклатуры = ОстаткиВнутр.ХарактеристикаНоменклатуры", "") + "
	|" +
	?(ИмяТабличнойЧасти = "Товары", "
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ // Остатки по комплектующим в комплектах
	|	(
	|		ВЫБРАТЬ
	|			Комплектующие.Комплектующая               КАК Номенклатура,
	|			Комплектующие.ХарактеристикаКомплектующей КАК ХарактеристикаНоменклатуры,
	|			СУММА((Комплекты.КоличествоОстатокПоЗаказу - Комплекты.КоличествоВДокументе - Комплекты.КоличествоРезервПоЗаказу - Комплекты.КоличествоЗаказаноПоЗаказу) * Комплектующие.Количество) КАК КоличествоВКомплектах
	|		ИЗ
	|		  (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Заказы.Номенклатура               КАК Номенклатура,
	|					Заказы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|					Заказы.КоличествоОстаток          КАК КоличествоОстатокПоЗаказу,
	|					ВЫБОР КОГДА Док.Количество ЕСТЬ NULL ТОГДА 0 ИНАЧЕ Док.Количество КОНЕЦ КАК КоличествоВДокументе,
	|					ВЫБОР КОГДА Резервы.КоличествоОстаток ЕСТЬ NULL ТОГДА 0 ИНАЧЕ Резервы.КоличествоОстаток КОНЕЦ КАК КоличествоРезервПоЗаказу,
	|					ВЫБОР КОГДА Заказано.КоличествоОстаток ЕСТЬ NULL ТОГДА 0 ИНАЧЕ Заказано.КоличествоОстаток КОНЕЦ КАК КоличествоЗаказаноПоЗаказу
	|				ИЗ 
	|					РегистрНакопления.ЗаказыПокупателей.Остатки(,Номенклатура В ("+ТекстЗапросаОграниченияПоКомплектам+")
	|																			И СтатусПартии = &СтатусПартии) КАК Заказы
	|				СОЕДИНЕНИЕ // Оставим только нужные заказы покупателя
	|					Документ.ЗаказПоставщику.Товары КАК ДокЗП
	|				ПО
	|					Заказы.ЗаказПокупателя  = ДокЗП.ЗаказПокупателя
	|				  И ДокЗП.Ссылка = &ДокументСсылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ // вычислим, сколько комплектов уже есть
	|					Документ.ЗаказПоставщику.Товары КАК Док
	|				ПО
	|					Док.Ссылка = &ДокументСсылка
	|				  И Док.Номенклатура               = Заказы.Номенклатура
	|				  И Док.ХарактеристикаНоменклатуры = Заказы.ХарактеристикаНоменклатуры
	|				ЛЕВОЕ СОЕДИНЕНИЕ // Остатки зарезервированного товара
	|					РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура 
	|																			ИЗ 	РегистрСведений.КомплектующиеНоменклатуры)) КАК Резервы
	|				ПО
	|					Резервы.Номенклатура                = Заказы.Номенклатура
	|				  И Резервы.ХарактеристикаНоменклатуры  = Заказы.ХарактеристикаНоменклатуры
	|				  И Резервы.ДокументРезерва             = Заказы.ЗаказПокупателя
	|				ЛЕВОЕ СОЕДИНЕНИЕ // Остатки зарезервированного товара
	|					РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(,Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура 
	|																			ИЗ 	РегистрСведений.КомплектующиеНоменклатуры)) КАК Заказано
	|				ПО
	|					Заказано.Номенклатура                = Заказы.Номенклатура
	|				  И Заказано.ХарактеристикаНоменклатуры  = Заказы.ХарактеристикаНоменклатуры
	|				  И Заказано.ЗаказПокупателя             = Заказы.ЗаказПокупателя
	|		  ) КАК Комплекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.КомплектующиеНоменклатуры КАК Комплектующие
	|		ПО
	|		   Комплекты.Номенклатура               = Комплектующие.Номенклатура
	|		 И Комплекты.ХарактеристикаНоменклатуры = Комплектующие.ХарактеристикаНоменклатуры
	|
	|		СГРУППИРОВАТЬ ПО
	|			Комплектующие.Комплектующая,
	|			Комплектующие.ХарактеристикаКомплектующей
	|
	|	) КАК ОстаткиКомплектующихВКомплектах
	|ПО
	|	ОстаткиКомплектующихВКомплектах.Номенклатура                = Док.Номенклатура
	| И ОстаткиКомплектующихВКомплектах.ХарактеристикаНоменклатуры  = Док.ХарактеристикаНоменклатуры
	|", "") + "
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка" +
	?(ЕстьНовоеРазмещение, "
	|	И Док.НовоеРазмещение Не В(&ПустыеЗаказы)", "
	|	И Док.ЗаказПокупателя Не В(&ПустыеЗаказы)") + "
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура " +
	?(ЕстьНовоеРазмещение, ",
	|	Док.НовоеРазмещение", ",
	|	Док.ЗаказПокупателя")
	+ ?(ЕстьХарактеристика, "
	|	, Док.ХарактеристикаНоменклатуры "
	,"") + "
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ЗаказыПокупателей.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоОстаток = ?(Выборка.ОстатокКоличество = NULL, 0, Выборка.ОстатокКоличество);
		Если ИмяТабличнойЧасти = "Товары" Тогда
			КоличествоВКомплектах = ?(Выборка.КоличествоВКомплектах = NULL, 0, Выборка.КоличествоВКомплектах);
		Иначе
			КоличествоВКомплектах = 0;
		КонецЕсли; 
		
		Если (КоличествоОстаток + КоличествоВКомплектах) < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка " + 
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, "")) +
			", заказанного по документу " + (Выборка.Размещение) + " недостаточно для размещения.";

			ОшибкаНетОстатка(СтрокаСообщения, КоличествоОстаток + КоличествоВКомплектах, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатковПоЗаказам()

// Процедура контролирует остаток по заказам поставщикам при проведении 
// по данному регистру по переданному документу и его табличной части. 
// В случае недостатка товаров выставляется флаг отказа и выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатковПоЗаказамПоставщикам(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ЕстьХарактеристика  = ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьНовоеРазмещение = ЕстьРеквизитТабЧастиДокумента("НовоеРазмещение", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьКоэффициент     = ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";


	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",          ДокументОбъект.Ссылка);
	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		Запрос.УстановитьПараметр("СтатусПартии", Перечисления.СтатусыПартийТоваров.ВозвратнаяТара);
		Запрос.УстановитьПараметр("ТоварТара", Перечисления.ТоварТара.Тара);
	Иначе
		Запрос.УстановитьПараметр("СтатусПартии", Перечисления.СтатусыПартийТоваров.Купленный);
		Запрос.УстановитьПараметр("ТоварТара", Перечисления.ТоварТара.Товар);
	КонецЕсли;
	Запрос.УстановитьПараметр("ПустойЗаказПоставщику", Документы.ЗаказПоставщику.ПустаяСсылка());

	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление, " +
	?(ЕстьНовоеРазмещение, "
	|	Док.НовоеРазмещение                                    КАК Размещение, ", "
	|	Док.Размещение                                         КАК Размещение,") + "
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"") + "
	|	СУММА(Док.Количество )                                 КАК ДокументКоличество,
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                    КАК ОстатокКоличество,
	|	МАКСИМУМ(ОстаткиРазмещенные.КоличествоОстаток)         КАК ОстатокКоличествоРазмещено
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
	|   И СтатусПартии = &СтатусПартии
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура" + 
	?(ЕстьНовоеРазмещение, "
	|	И Остатки.ЗаказПоставщику               = Док.НовоеРазмещение", "
	|	И Остатки.ЗаказПоставщику               = Док.Размещение")
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры"
	,"") + "
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
	|   И ТоварТара = &ТоварТара
	|) КАК ОстаткиРазмещенные
	|ПО 
	|	Док.Номенклатура                = ОстаткиРазмещенные.Номенклатура" + 
	?(ЕстьНовоеРазмещение, "
	|	И ОстаткиРазмещенные.ЗаказПоставщику               = Док.НовоеРазмещение", "
	|	И ОстаткиРазмещенные.ЗаказПоставщику               = Док.Размещение")
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = ОстаткиРазмещенные.ХарактеристикаНоменклатуры"
	,"") + "
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка" +
	?(ЕстьНовоеРазмещение, "
	|	И НЕ (Док.НовоеРазмещение ССЫЛКА Справочник.Склады)
	|	И Док.НовоеРазмещение <> Неопределено
	|	И Док.НовоеРазмещение <> &ПустойЗаказПоставщику", "
	|	И НЕ (Док.Размещение ССЫЛКА Справочник.Склады)
	|	И Док.Размещение <> Неопределено
	|	И Док.Размещение <> &ПустойЗаказПоставщику") + "
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура " +
	?(ЕстьНовоеРазмещение, ",
	|	Док.НовоеРазмещение", ",
	|	Док.Размещение")
	+ ?(ЕстьХарактеристика, "
	|	, Док.ХарактеристикаНоменклатуры "
	,"") + "
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ЗаказыПоставщикам.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоОстаток          = ?(Выборка.ОстатокКоличество = NULL, 0, Выборка.ОстатокКоличество);
		КоличествоОстатокРазмещено = ?(Выборка.ОстатокКоличествоРазмещено = NULL, 0, Выборка.ОстатокКоличествоРазмещено);
		
		Если КоличествоОстаток - КоличествоОстатокРазмещено < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка " + 
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, "")) +
			", заказанного по документу " + (Выборка.Размещение) + " недостаточно для размещения.";

			ОшибкаНетОстатка(СтрокаСообщения, КоличествоОстаток - КоличествоОстатокРазмещено, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатковПоЗаказамПоставщикам()


Процедура ПередЗаписью(Отказ, Замещение)
		
	ПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры

