Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента     = ДокументОбъект.Метаданные();
	ИмяДокумента            = МетаданныеДокумента.Имя;
	ИмяТаблицы              = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ЕстьХарактеристика      = ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьКачество            = ЕстьРеквизитТабЧастиДокумента("Качество", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьОрдерВТабЧасти      = ЕстьРеквизитТабЧастиДокумента("ПриходныйОрдер", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьСкладВТабЧасти      = ЕстьРеквизитТабЧастиДокумента("Склад", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьДокументРезерва     = ЕстьРеквизитТабЧастиДокумента("ДокументРезерва", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьДокументПеремещения = ЕстьРеквизитДокумента("ДокументПеремещения", МетаданныеДокумента);
	ЕстьДокументПередачи    = ЕстьРеквизитДокумента("ДокументПередачи", МетаданныеДокумента);
	ЕстьКоэффициент         = ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",          СтруктураШапкиДокумента.Ссылка);
	Если ЕстьРеквизитДокумента("СкладОрдер", МетаданныеДокумента) Тогда
		Запрос.УстановитьПараметр("ПриходныйОрдер",          СтруктураШапкиДокумента.СкладОрдер);
		Запрос.УстановитьПараметр("Склад",                   СтруктураШапкиДокумента.СкладПриходногоОрдера);
	ИначеЕсли ЕстьДокументПеремещения Тогда
		Запрос.УстановитьПараметр("ПриходныйОрдер",     СтруктураШапкиДокумента.ДокументПеремещения);
		Запрос.УстановитьПараметр("Склад",                   СтруктураШапкиДокумента.Склад);
	ИначеЕсли ЕстьДокументПередачи Тогда
		Запрос.УстановитьПараметр("ПриходныйОрдер",          СтруктураШапкиДокумента.ДокументПередачи);
		Запрос.УстановитьПараметр("Склад",                   СтруктураШапкиДокумента.Склад);
	Иначе
		Запрос.УстановитьПараметр("ПриходныйОрдер",          Неопределено);
		Запрос.УстановитьПараметр("Склад",                   СтруктураШапкиДокумента.СкладОтправитель);
	КонецЕсли;

	Если ЕстьДокументПеремещения Тогда
		Запрос.УстановитьПараметр("ДокументПеремещения",  СтруктураШапкиДокумента.ДокументПеремещения);
	КонецЕсли;
		
	МассивПустыхСсылок = Новый Массив;
	МассивПустыхСсылок.Добавить(Неопределено);
	МассивПустыхСсылок.Добавить(Документы.ЗаказПокупателя.ПустаяСсылка());
	МассивПустыхСсылок.Добавить(Документы.ПриходныйОрдерНаТовары.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("МассивПустыхСсылок", МассивПустыхСсылок);

	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,"
	+ ?(ЕстьСкладВТабЧасти, "
	|   Док.Склад                                              КАК Склад,", "
	|   &Склад                                                 КАК Склад,") 
	+ ?(ЕстьОрдерВТабЧасти, "
	|   Док.ПриходныйОрдер                                     КАК ПриходныйОрдер,", 
	?(ЕстьДокументРезерва, ?(ИмяДокумента = "ПеремещениеТоваров", "
	|   Док.ДокументРезерва                                    КАК ПриходныйОрдер,", " 
	|   Док.ДокументРезерва                                    КАК ДокументРезерва,"), " 
	|   &ПриходныйОрдер                                        КАК ПриходныйОрдер,")) + "
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"")
	+ ?(ЕстьКачество, "
	|	Док.Качество.Представление                             КАК КачествоПредставление,"
	,"") 
	+ ?(ЕстьКоэффициент, "
	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество,", "
	|	СУММА(Док.Количество)                                  КАК ДокументКоличество,") + "
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                    КАК ОстатокКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПолучениюНаСклады.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")"
	+ ?(ЕстьСкладВТабЧасти ИЛИ ЕстьДокументРезерва, "", "
	|   И ДокументПолучения = &ПриходныйОрдер")
	+ ?(ЕстьОрдерВТабЧасти, "", "
	|   И Склад             = &Склад")
	+ ?(ЕстьДокументПеремещения,"
	|   И ДокументПолучения = &ДокументПеремещения"
	,"") + "
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры"
	,"")
	+ ?(ЕстьКачество, "
	| И Док.Качество  = Остатки.Качество"
	,"") 
	+ ?(ЕстьОрдерВТабЧасти, "
	| И Док.ПриходныйОрдер = Остатки.ДокументПолучения", "")
	+ ?(ЕстьДокументРезерва, ?(ИмяДокумента = "ПеремещениеТоваров", "
	| И Док.ДокументРезерва = Остатки.ДокументПолучения", "
	| И Док.ДокументРезерва = Остатки.ДокументРезерва"), "")
	+ ?(ЕстьСкладВТабЧасти, "
	| И Док.Склад          = Остатки.Склад", "") + "
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка"
	+ ?(ЕстьДокументРезерва И ИмяДокумента = "ПеремещениеТоваров", "
	|	И НЕ Док.ДокументРезерва В (&МассивПустыхСсылок)", "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	|	, Док.ХарактеристикаНоменклатуры "
	,"")
	+ ?(ЕстьКачество, "
	|	, Док.Качество "
	,"")
	+ ?(ЕстьОрдерВТабЧасти, "
	|	, Док.ПриходныйОрдер "
	,"")
	+ ?(ЕстьДокументРезерва, "
	|	, Док.ДокументРезерва "
	,"")
	+ ?(ЕстьСкладВТабЧасти, "
	|	, Док.Склад "
	,"") + "
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыКПолучениюНаСклады.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоОстаток = ?(Выборка.ОстатокКоличество = NULL, 0, ?(ЕстьДокументПеремещения, - Выборка.ОстатокКоличество, Выборка.ОстатокКоличество));

		Если КоличествоОстаток < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка " + 
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, "")) +
			" к получению на склад " + СокрЛП(Выборка.Склад) + ?(ЕстьДокументПередачи," по документу " + СтруктураШапкиДокумента.ДокументПередачи, "")
			+ ?(ЕстьКачество, " с качеством " + Выборка.КачествоПредставление, "") 
			+ ?(ЕстьДокументРезерва И ИмяДокумента <> "ПеремещениеТоваров", ?(ЗначениеНеЗаполнено(Выборка.ДокументРезерва),""," с документом резерва " + СокрЛП(Выборка.ДокументРезерва)), "") + " недостаточно.";

			ОшибкаНетОстатка(СтрокаСообщения, КоличествоОстаток, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()

Процедура ПередЗаписью(Отказ, Замещение)
		
	ПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры



