Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ЕстьХарактеристика  = ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьСпособСписания  = ЕстьРеквизитТабЧастиДокумента("СпособСписанияОстаткаТоваров", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьДокументРезерва = ЕстьРеквизитТабЧастиДокумента("ДокументРезерва", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьСкладВТабЧасти  = ЕстьРеквизитТабЧастиДокумента("Склад", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьЗаказВТабЧасти  = ЕстьРеквизитТабЧастиДокумента("Заказ", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьКоэффициент     = ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);
	
	ИмяДокументРезерва = "ДокументРезерва";
	Если ЕстьЗаказВТабЧасти Тогда
		ЕстьДокументРезерва = Истина;
		ИмяДокументРезерва = "Заказ";
	ИначеЕсли ЕстьРеквизитТабЧастиДокумента("ЗаказПокупателя", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		ЕстьЗаказВТабЧасти = Истина;
		ЕстьДокументРезерва = Истина;
		ИмяДокументРезерва = "ЗаказПокупателя";
	ИначеЕсли ЕстьРеквизитТабЧастиДокумента("ВнутреннийЗаказ", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		ЕстьЗаказВТабЧасти = Истина;
		ЕстьДокументРезерва = Истина;
		ИмяДокументРезерва = "ВнутреннийЗаказ";
	КонецЕсли;
	
	ЕстьЗаказПокупателяВШапке = Ложь;
	
	ИмяРеквЗаказ = "";
	Если ЕстьРеквизитДокумента("Сделка", МетаданныеДокумента) Тогда
		ИмяРеквЗаказ = "Сделка";
	ИначеЕсли ЕстьРеквизитДокумента("Заказ", МетаданныеДокумента) Тогда
		ИмяРеквЗаказ = "Заказ";
	ИначеЕсли ЕстьРеквизитДокумента("ЗаказПокупателя", МетаданныеДокумента) Тогда
		ИмяРеквЗаказ = "ЗаказПокупателя";
	КонецЕсли;
	
	ЕстьЗаказПокупателяВШапке = НЕ ПустаяСтрока( ИмяРеквЗаказ)
		  И ЕстьРеквизитДокумента ( ИмяРеквЗаказ, МетаданныеДокумента)
	   И НЕ ЗначениеНеЗаполнено   ( СтруктураШапкиДокумента[ ИмяРеквЗаказ])
	      И ( ТипЗнч( СтруктураШапкиДокумента[ ИмяРеквЗаказ]) = Тип("ДокументСсылка.ЗаказПокупателя")
	      ИЛИ ТипЗнч( СтруктураШапкиДокумента[ ИмяРеквЗаказ]) = Тип("ДокументСсылка.ВнутреннийЗаказ"));
		
	ЕстьСкладОрдерВШапке = ЕстьРеквизитДокумента("СкладОрдер", МетаданныеДокумента);
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";


	Запрос = Новый Запрос;

	// Для перемещения надо проверять по складу "Склад-отправитель", а для остальных документов - просто "Склад"
	ТекСклад = ?(ЕстьРеквизитДокумента("СкладОрдер", МетаданныеДокумента), СтруктураШапкиДокумента.СкладПриходногоОрдера, СтруктураШапкиДокумента.Склад);
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("Склад", ТекСклад); 
	Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка()); 
	Запрос.УстановитьПараметр("ИзРезерва", Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва); 
	Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка()); 
	Если Не ЕстьДокументРезерва Тогда
		Если ЕстьЗаказПокупателяВШапке Тогда
			Запрос.УстановитьПараметр("ДокументРезерва", СтруктураШапкиДокумента[ИмяРеквЗаказ]);
		ИначеЕсли ЕстьСкладОрдерВШапке Тогда
			Запрос.УстановитьПараметр("ДокументРезерва", СтруктураШапкиДокумента.СкладОрдер);
		Иначе
			Запрос.УстановитьПараметр("ДокументРезерва", СтруктураШапкиДокумента.ДокументПередачи);
		КонецЕсли;
	КонецЕсли;
	
	МассивПустыхСсылок = Новый Массив;
	МассивПустыхСсылок.Добавить(Неопределено);
	МассивПустыхСсылок.Добавить(Документы.ЗаказПокупателя.ПустаяСсылка());
	МассивПустыхСсылок.Добавить(Документы.ВнутреннийЗаказ.ПустаяСсылка());
	МассивПустыхСсылок.Добавить(Документы.ПриходныйОрдерНаТовары.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("МассивПустыхСсылок", МассивПустыхСсылок);

	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"")
	+ ?(ЕстьДокументРезерва, "
	|	Док."+ИмяДокументРезерва+"                   		   КАК ДокументРезерва,", "
	|   &ДокументРезерва                                       КАК ДокументРезерва,")
	+ ?(Не ЕстьСкладВТабЧасти, "
	|   &Склад                                                 КАК Склад, ", "
	|   Док.Склад                                              КАК Склад,")
	+ ?(ЕстьКоэффициент, "
	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество,", "
	|	СУММА(Док.Количество)                                  КАК ДокументКоличество,") + "
	|	МАКСИМУМ(Резервы.КоличествоОстаток)                    КАК РезервыКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")"
	+ ?(Не ЕстьСкладВТабЧасти, "
	|		И Склад = &Склад", "") 
	+ ?(ЕстьЗаказПокупателяВШапке, "
	|       И ДокументРезерва = &ДокументРезерва"
	,"") + ") КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры"
	,"")
	+ ?(ЕстьСкладВТабЧасти, "
	| И Док.Склад                       = Резервы.Склад"
	,"")
	+ ?(ЕстьДокументРезерва, "
	| И Док."+ИмяДокументРезерва+"      = Резервы.ДокументРезерва"
	,"") + "
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка"
	+ ?(ЕстьСпособСписания И НЕ(ЕстьДокументРезерва И ИмяДокументРезерва = "ДокументРезерва"), "
	| И (Док.СпособСписанияОстаткаТоваров       = &ИзРезерва" + ?(ЕстьДокументРезерва, " И (Док."+ИмяДокументРезерва+" <> Неопределено и Док."+ИмяДокументРезерва+" <> &ПустойЗаказПокупателя))", ")")
	,"")
	+ ?(ЕстьДокументРезерва И Не ЕстьЗаказВТабЧасти, "
	|	И НЕ Док."+ИмяДокументРезерва+" В (&МассивПустыхСсылок)
	|   И (НЕ Док."+ИмяДокументРезерва+" ССЫЛКА Документ.ПриходныйОрдерНаТовары
	|      ИЛИ Док."+ИмяДокументРезерва+".БезПраваПродажи)", "")
	+ ?(ЕстьЗаказВТабЧасти, " И НЕ Док."+ИмяДокументРезерва+" В (&МассивПустыхСсылок)", "") + "
	|
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура"
	+ ?(ЕстьХарактеристика, ",
	|	Док.ХарактеристикаНоменклатуры "
	,"")
	+ ?(ЕстьДокументРезерва, ",
	|	Док."+ИмяДокументРезерва+""
	,"")
	+ ?(ЕстьСкладВТабЧасти, ",
	|	Док.Склад"
	,"") + "
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоВРезерве = ?(Выборка.РезервыКоличество = NULL, 0, Выборка.РезервыКоличество);

		Если КоличествоВРезерве < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка резерва " + 
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, ""),"") +									  
			" на складе """ + СокрЛП(Выборка.Склад) + """ по документу """ + СокрЛП(Выборка.ДокументРезерва) + 
			""" недостаточно.";

			ОшибкаНетОстатка(СтрокаСообщения, КоличествоВРезерве, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатковРазукомплектация(ДокументОбъект, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента;
	ЕстьХарактеристика  = ЕстьРеквизитДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента);
	ЕстьСпособСписания  = ЕстьРеквизитДокумента("СпособСписания", МетаданныеДокумента);
	ЕстьДокументРезерва = ЕстьРеквизитДокумента("ДокументРезерва", МетаданныеДокумента);
	
	ЕстьЗаказПокупателяВШапке = Ложь;
	
	ИмяРеквЗаказ = "";
	Если ЕстьРеквизитДокумента("Сделка", МетаданныеДокумента) Тогда
		ИмяРеквЗаказ = "Сделка";
	ИначеЕсли ЕстьРеквизитДокумента("Заказ", МетаданныеДокумента) Тогда
		ИмяРеквЗаказ = "Заказ";
	ИначеЕсли ЕстьРеквизитДокумента("ЗаказПокупателя", МетаданныеДокумента) Тогда
		ИмяРеквЗаказ = "ЗаказПокупателя";
	КонецЕсли;
	
	ЕстьЗаказПокупателяВШапке = НЕ ПустаяСтрока( ИмяРеквЗаказ)
		  И ЕстьРеквизитДокумента ( ИмяРеквЗаказ, МетаданныеДокумента)
	   И НЕ ЗначениеНеЗаполнено   ( СтруктураШапкиДокумента[ ИмяРеквЗаказ])
	      И ТипЗнч( СтруктураШапкиДокумента[ ИмяРеквЗаказ]) = Тип("ДокументСсылка.ЗаказПокупателя");
		
 	ЕстьСкладОрдерВШапке = ЕстьРеквизитДокумента("СкладОрдер", МетаданныеДокумента);
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";


	Запрос = Новый Запрос;

	// Для перемещения надо проверять по складу "Склад-отправитель", а для остальных документов - просто "Склад"
	ТекСклад = ?(ЕстьРеквизитДокумента("СкладОрдер", МетаданныеДокумента), СтруктураШапкиДокумента.СкладПриходногоОрдера, СтруктураШапкиДокумента.Склад);
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("Склад", ТекСклад); 
	Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка()); 
	Запрос.УстановитьПараметр("ИзРезерва", Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва); 
	Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка()); 
	Если ЕстьЗаказПокупателяВШапке Тогда
		Запрос.УстановитьПараметр("ДокументРезерва", СтруктураШапкиДокумента[ИмяРеквЗаказ]);
	ИначеЕсли ЕстьСкладОрдерВШапке Тогда
		Запрос.УстановитьПараметр("ДокументРезерва", СтруктураШапкиДокумента.СкладОрдер);
	Иначе
		Запрос.УстановитьПараметр("ДокументРезерва", СтруктураШапкиДокумента.ДокументПередачи);
	КонецЕсли;

	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"")
	+ ?(ЕстьДокументРезерва, "
	|	Док.ДокументРезерва                                    КАК ДокументРезерва,", "
	|   &ДокументРезерва                                       КАК ДокументРезерва,") + "
	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество, 
	|	МАКСИМУМ(Резервы.КоличествоОстаток)                    КАК РезервыКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
	|		И Склад = &Склад" 
	+ ?(ЕстьЗаказПокупателяВШапке, "
	|       И ДокументРезерва = &ДокументРезерва"
	,"") + ") КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры"
	,"")
	+ ?(ЕстьДокументРезерва, "
	| И Док.ДокументРезерва             = Резервы.ДокументРезерва"
	,"") + "
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка"
	+ ?(ЕстьСпособСписания, "
	| И (Док.СпособСписания       = &ИзРезерва" + ?(ЕстьДокументРезерва, " ИЛИ (Док.ДокументРезерва <> Неопределено и Док.ДокументРезерва <> &ПустойЗаказПокупателя))", ")")
	,"") + "
	|
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура"
	+ ?(ЕстьХарактеристика, ",
	|	Док.ХарактеристикаНоменклатуры "
	,"")
	+ ?(ЕстьДокументРезерва, ",
	|	Док.ДокументРезерва"
	,"") + "
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоВРезерве = ?(Выборка.РезервыКоличество = NULL, 0, Выборка.РезервыКоличество);

		Если КоличествоВРезерве < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка резерва " + 
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, ""),"") +									  
			" на складе """ + СокрЛП(ТекСклад) + """ по документу " + СокрЛП(Выборка.ДокументРезерва) + 
			""" недостаточно.";

			ОшибкаНетОстатка(СтрокаСообщения, КоличествоВРезерве, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольСвободныхОстатков(ДокументОбъект, ИмяТабличнойЧасти,  СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ЕстьХарактеристика  = ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьХарактеристика  = ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьРазмещение      = ЕстьРеквизитТабЧастиДокумента("Размещение", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьНовоеРазмещение = ЕстьРеквизитТабЧастиДокумента("НовоеРазмещение", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьКоэффициент     = ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";


	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("ИзРезерва", Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва); 

	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаНоменклатурыПредставление,", "")
	+ ?(ЕстьРазмещение, "
	|   Док.Размещение                                         КАК Склад,", "") 
	+ ?(ЕстьНовоеРазмещение, "
	|   Док.НовоеРазмещение                                    КАК Склад,", "")
	+ ?(ЕстьКоэффициент, "
	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество,", "
	|	СУММА(Док.Количество)                                  КАК ДокументКоличество,") + "
	|	МАКСИМУМ(Резервы.КоличествоОстаток)                    КАК РезервыКоличество,
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                    КАК ОстаткиКоличество,
	|	МАКСИМУМ(КПередаче.КоличествоОстаток)                  КАК КПередачеКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура "
	+ ?(ЕстьРазмещение, "
	|   И Док.Размещение                = Остатки.Склад ", "") 
	+ ?(ЕстьНовоеРазмещение, "
	|   И Док.НовоеРазмещение           = Остатки.Склад ", "")
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры", "") + "
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура "
	+ ?(ЕстьРазмещение, "
	|   И Док.Размещение                = Резервы.Склад ", "") 
	+ ?(ЕстьНовоеРазмещение, "
	|   И Док.Ссылка.ЗаказПокупателя   <> Резервы.ДокументРезерва
	|   И Док.НовоеРазмещение           = Резервы.Склад ", "")
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры"
	,"") + "
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")) КАК КПередаче
	|ПО 
	|	Док.Номенклатура                = КПередаче.Номенклатура "
	+ ?(ЕстьРазмещение, "
	|   И Док.Размещение                = КПередаче.Склад ", "")
	+ ?(ЕстьНовоеРазмещение, "
	|   И Док.НовоеРазмещение                = КПередаче.Склад ", "")
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = КПередаче.ХарактеристикаНоменклатуры"
	,"") + "
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка "
	+ ?(ЕстьРазмещение, "
	|   И Док.Размещение ССЫЛКА Справочник.Склады ", "")
	+ ?(ЕстьНовоеРазмещение, "
	|   И Док.НовоеРазмещение ССЫЛКА Справочник.Склады ", "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура"
	+ ?(ЕстьХарактеристика, ",
	|	Док.ХарактеристикаНоменклатуры "
	,"")
	+ ?(ЕстьРазмещение, ",
	|   Док.Размещение", "") 
	+ ?(ЕстьНовоеРазмещение, ",
	|   Док.НовоеРазмещение", "") + "
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки, РегистрНакопления.ТоварыНаСкладах.Остатки, РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоВРезерве  = ?(Выборка.РезервыКоличество   = NULL, 0, Выборка.РезервыКоличество);
		КоличествоНаСкладе  = ?(Выборка.ОстаткиКоличество   = NULL, 0, Выборка.ОстаткиКоличество);
		КоличествоКПередаче = ?(Выборка.КПередачеКоличество = NULL, 0, Выборка.КПередачеКоличество);
		СвободныйОстаток = КоличествоНаСкладе - КоличествоВРезерве - КоличествоКПередаче;

		Если СвободныйОстаток < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Свободного остатка для резервирования" + 
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, ""),"") +									  
			" на складе """ + СокрЛП(Выборка.Склад) + """ недостаточно.";

			ОшибкаНетОстатка(СтрокаСообщения, СвободныйОстаток, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()

// Процедура контролирует резервы по заказам, с целью недопустить превышение
// резерва объема заказа.
//
Процедура КонтрольОстатковПоЗаказам(ДокСсылка, ДопПараметры, Отказ, Заголовок) Экспорт

	МетаДок  = ДокСсылка.Метаданные().Имя;
	ТабЧасть = ДопПараметры["ИмяТабЧасти"];
	Склад    = ДопПараметры["Склад"];
	
	ПутьКТабЧасти = МетаДок + "." + ТабЧасть;
	
	МассивПустыхЗаказов = Новый Массив;
	МассивПустыхЗаказов.Добавить(Неопределено);
	МассивПустыхЗаказов.Добавить(Документы.ЗаказПокупателя.ПустаяСсылка());
	МассивПустыхЗаказов.Добавить(Документы.ВнутреннийЗаказ.ПустаяСсылка());

	Если ТабЧасть = "Товары" Тогда
		ТекстЗапроса = "
		|ВЫБРАТЬ 
		|	Поступление.ЗаказПокупателя 
		|ИЗ Документ." + ПутьКТабЧасти + " КАК Поступление
		|ГДЕ Поступление.Ссылка = &ТекДок И Поступление.ЗаказПокупателя Не В (&ПустЗаказ)
		|СГРУППИРОВАТЬ ПО
		|	Поступление.ЗаказПокупателя";
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр( "ПустЗаказ", МассивПустыхЗаказов);
		Запрос.УстановитьПараметр( "ТекДок",    ДокСсылка);
		
		ТаблицаЗаказовПокупателей = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДокПоступление.Номенклатура,
	|	ДокПоступление.ХарактеристикаНоменклатуры,
	|	ДокПоступление.ЗаказПокупателя,
	|	ДокПоступление.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,
	|	ДокПоступление.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	ДокПоступление.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаПредставление,
	|	ДокПоступление.ЗаказПокупателя.Представление                      КАК ЗаказПредставление,
	|	СУММА(ДокПоступление.Количество * ДокПоступление.Коэффициент /ДокПоступление.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК Количество,
	|	СУММА(ВЫБОР КОГДА ДокПоступление.ЗаказПокупателя ССЫЛКА Документ.ВнутреннийЗаказ ТОГДА
	|		ВЫБОР КОГДА РегВнутрЗаказы.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|			0
	|		ИНАЧЕ
	|			РегВнутрЗаказы.КоличествоОстаток
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВЫБОР КОГДА РегЗаказы.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|			0
	|		ИНАЧЕ
	|			РегЗаказы.КоличествоОстаток
	|		КОНЕЦ
	|	КОНЕЦ) КАК КолЗаказано,
	|	СУММА(ВЫБОР КОГДА РегРезервы.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|		0
	|	ИНАЧЕ
	|		РегРезервы.КоличествоОстаток
	|	КОНЕЦ) КАК КолРезерв,
	|	СУММА(ВЫБОР КОГДА СоставыКомплектов.Количество ЕСТЬ NULL ТОГДА
	|		0
	|	ИНАЧЕ
	|		СоставыКомплектов.Количество
	|	КОНЕЦ) КАК КоличествоВКомплектах
	|ИЗ
	|	Документ." + ПутьКТабЧасти + " КАК ДокПоступление
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(&КонДата) КАК РегЗаказы
	|		ПО ДокПоступление.ЗаказПокупателя            = РегЗаказы.ЗаказПокупателя
	|		 И ДокПоступление.Номенклатура               = РегЗаказы.Номенклатура
	|		 И ДокПоступление.ХарактеристикаНоменклатуры = РегЗаказы.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВнутренниеЗаказы.Остатки(&КонДата) КАК РегВнутрЗаказы
	|		ПО ДокПоступление.ЗаказПокупателя            = РегВнутрЗаказы.ВнутреннийЗаказ
	|		 И ДокПоступление.Номенклатура               = РегВнутрЗаказы.Номенклатура
	|		 И ДокПоступление.ХарактеристикаНоменклатуры = РегВнутрЗаказы.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&КонДата, Склад = &Склад) КАК РегРезервы
	|		ПО ДокПоступление.ЗаказПокупателя            = РегРезервы.ДокументРезерва
	|		 И ДокПоступление.Номенклатура               = РегРезервы.Номенклатура
	|		 И ДокПоступление.ХарактеристикаНоменклатуры = РегРезервы.ХарактеристикаНоменклатуры"
	+ ?(ТабЧасть = "Товары","
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК СоставыКомплектов
	|		ПО ДокПоступление.Номенклатура               = СоставыКомплектов.Комплектующая
	|   	 И ДокПоступление.ХарактеристикаНоменклатуры = СоставыКомплектов.ХарактеристикаКомплектующей
	|		 И СоставыКомплектов.Номенклатура В (
	|				ВЫБРАТЬ 
	|					ЗаказыПокупателей.Номенклатура 
	|				ИЗ РегистрНакопления.ЗаказыПокупателей.Остатки(&КонДата) КАК ЗаказыПокупателей
	|				ГДЕ ЗаказыПокупателей.ЗаказПокупателя В (&ТаблицаЗаказовПокупателей))","") + "
	|
	|ГДЕ
	|	ДокПоступление.Ссылка = &ТекДок И
	|	ДокПоступление.ЗаказПокупателя Не В (&ПустЗаказ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокПоступление.Номенклатура,
	|	ДокПоступление.ЗаказПокупателя,
	|	ДокПоступление.ХарактеристикаНоменклатуры,
	|	РегРезервы.КоличествоОстаток";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр( "ПустЗаказ", МассивПустыхЗаказов);
	Запрос.УстановитьПараметр( "ТекДок",    ДокСсылка);
	Запрос.УстановитьПараметр( "Склад",     Склад);
	Запрос.УстановитьПараметр( "КонДата",   ДокСсылка.Дата);
	Если ТабЧасть = "Товары" Тогда
		Запрос.УстановитьПараметр( "ТаблицаЗаказовПокупателей", ТаблицаЗаказовПокупателей);
	КонецЕсли;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Если (ТабЧасть = "Товары") И (Выборка.КоличествоВКомплектах > 0) Тогда
			ЕстьКомплектующие = 1;
		Иначе
			ЕстьКомплектующие = 0;
		КонецЕсли;
		
		Если (Выборка.КолЗаказано - Выборка.КолРезерв < Выборка.Количество) И НЕ ЕстьКомплектующие Тогда

			СтрокаСообщения = "Резервирование по заказу превышает объем заказа: "
				+ Выборка.ЗаказПредставление + " "
				+ ПредставлениеНоменклатуры(
						Выборка.НоменклатураПредставление,
						Выборка.ХарактеристикаПредставление, "");

			ОшибкаНетОстатка(
				СтрокаСообщения,
				Выборка.КолЗаказано - Выборка.КолРезерв,
				Выборка.Количество,
				Выборка.ЕдиницаХраненияОстатковПредставление,
				Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры // КонтрольПревышенияОбъемаЗаказа()

Процедура ПередЗаписью(Отказ, Замещение)
		
	ПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры