Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

Процедура ПередЗаписью(Отказ, Замещение)
		
//	ПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Функция КонтрольОстатков(ДокументОбъект, ИмяТабличнойЧасти, Заголовок) Экспорт
	
	Отказ = Ложь;
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	

	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокЗаявок = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументПланированияПлатежа 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ  Ссылка = &ДокументСсылка";


	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументОбъект.Ссылка);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкиНаРасходованиеСредствОстатки.ДоговорКонтрагента,
	               |	ЗаявкиНаРасходованиеСредствОстатки.Сделка,
	               |	ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование,
	               |	ЗаявкиНаРасходованиеСредствОстатки.СуммаВзаиморасчетовОстаток как СуммаОстаток        //***2016.05.30 переделано на СуммуВаиморасч. До этого была Сумма
	               |ИЗ
	               |	РегистрНакопления.ЗаявкиНаРасходованиеСредств.Остатки(, ЗаявкаНаРасходование В (" + ТекстЗапросаСписокЗаявок + ")) КАК ЗаявкиНаРасходованиеСредствОстатки
	               |ГДЕ
	               |	ЗаявкиНаРасходованиеСредствОстатки.СуммаВзаиморасчетовОстаток > 0";
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрТЧ ИЗ ДокументОбъект.РасшифровкаПлатежа Цикл
		
		СтруктураОтбора = Новый Структура();
		СтруктураОтбора.Вставить("ДоговорКонтрагента", СтрТЧ.ДоговорКонтрагента);
		СтруктураОтбора.Вставить("Сделка", ?(ЗначениеЗаполнено(СтрТЧ.Сделка), СтрТЧ.Сделка, Неопределено));
		СтруктураОтбора.Вставить("ЗаявкаНаРасходование", СтрТЧ.ДокументПланированияПлатежа);
		МассивСтрок = Выборка.НайтиСтроки(СтруктураОтбора);
		Если МассивСтрок.Количество() = 0 Тогда
			Сообщить("В строке расшифровки платежа № "+ Строка(СтрТЧ.НомерСтроки) + " Договор контрагента и Сделка не совпадают с указанными значениями в Заявке на расходование стредств.");
			Отказ = Истина;
		Иначе
			Если СтрТЧ.СуммаПлатежа > МассивСтрок[0].СуммаОстаток Тогда
				Сообщить("В строке расшифровки платежа № "+ Строка(СтрТЧ.НомерСтроки) + " сумма платежа превышает остаток по Заявке на расходование средств.");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;
	
	Возврат Отказ;

КонецФункции // КонтрольОстатков()