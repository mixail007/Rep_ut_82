//Перем РежимПроведения Экспорт; // Режим проведения документа. Если проведение неоперативное - проверов остатков нет

//Перем ДокументОбъект Экспорт; //Документ, осуществляющий движение по регистру
//Перем РезультатЗапросаПоРаботам Экспорт; //Выборка табличной части или таблица значений табличной части работ
//Перем РезультатЗапросаПоИсполнителям Экспорт; //Выборка табличной части или таблица значений табличной части исполнителей
//Перем ВидРемонта Экспорт; //Ссылка на справочник видов ремонта. Если значение неопределено, вид ремонта берется из объекта документа
//Перем Автомобиль Экспорт; //Ссылка на справочник автомобилей. Если значение неопределено, автомобиль берется из объекта документа
//Перем ПериодДвижения Экспорт; //Период движения регистра. Если период не задан, он берется из ДокументОбъект.Дата

Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Возвращает результат запроса по таблице работ
//Функция ПолучитьТаблицуРабот()
//	// получим результат запроса по таблице работ
//	ВидДок=ДокументОбъект.Метаданные().Имя;
//	Запрос=Новый Запрос();
//	ТекстЗапроса="
//	|ВЫБРАТЬ
//	|	ДокументРаботы.Работа КАК Работа,
//	|	ДокументРаботы.Количество*ДокументРаботы.Коэффициент КАК Количество,
//	|	ДокументРаботы.СуммаВсего КАК Сумма,
//	|	ДокументРаботы.СуммаСкидки КАК СуммаСкидки
//	|ИЗ
//	|	Документ."+ВидДок+".Работы КАК ДокументРаботы
//	|ГДЕ
//	|	ДокументРаботы.Ссылка=&Ссылка
//	|";
//	Запрос.Текст=ТекстЗапроса;
//	Запрос.УстановитьПараметр("Ссылка",ДокументОбъект.Ссылка);
//	Возврат Запрос.Выполнить();
//КонецФункции

// Возвращает результат запроса по таблице исполнителей
//Функция ПолучитьТаблицуИсполнителей()
//	// получим результат запроса по таблице исполнителей
//	ВидДок=ДокументОбъект.Метаданные().Имя;
//	Запрос=Новый Запрос();
//	ТекстЗапроса="
//	|ВЫБРАТЬ
//	|	ДокументИсполнители.Работа КАК Работа,
//	|	ДокументИсполнители.Исполнитель КАК Исполнитель,
//	|	ДокументИсполнители.Цех КАК Цех,
//	|	ДокументИсполнители.Процент КАК Процент
//	|ИЗ
//	|	Документ."+ВидДок+".Исполнители КАК ДокументИсполнители
//	|ГДЕ
//	|	ДокументИсполнители.Ссылка=&Ссылка
//	|";
//	Запрос.Текст=ТекстЗапроса;
//	Запрос.УстановитьПараметр("Ссылка",ДокументОбъект.Ссылка);
//	Возврат Запрос.Выполнить();
//КонецФункции

// Формирует движения по регистру
// Возвращаемое значение: Булево. Истина - все ОК, Ложь - ошибка.
//Функция Движение() Экспорт
//	ВсеОК=Истина;
//	
//	// получим имя Хоз. операции документа
//	ИмяХОДокумента=ДокументОбъект.ПолучитьИмяТекущейХозОперации();
//	
//	// получим таблицу работ
//	Если (РезультатЗапросаПоРаботам=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоРаботам)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоРаботам)<>Тип("ТаблицаЗначений")) Тогда
//		РезультатЗапросаПоРаботам=ПолучитьТаблицуРабот();
//	КонецЕсли;
//	Если ТипЗнч(РезультатЗапросаПоРаботам)=Тип("РезультатЗапроса") Тогда
//		РезультатЗапросаПоРаботам=РезультатЗапросаПоРаботам.Выгрузить();
//	КонецЕсли;
//	// получим таблицу исполнителей
//	Если (РезультатЗапросаПоИсполнителям=Неопределено) ИЛИ (ТипЗнч(РезультатЗапросаПоИсполнителям)<>Тип("РезультатЗапроса")) И (ТипЗнч(РезультатЗапросаПоИсполнителям)<>Тип("ТаблицаЗначений")) Тогда
//		РезультатЗапросаПоИсполнителям=ПолучитьТаблицуИсполнителей();
//	КонецЕсли;
//	Если ТипЗнч(РезультатЗапросаПоИсполнителям)=Тип("РезультатЗапроса") Тогда
//		РезультатЗапросаПоИсполнителям=РезультатЗапросаПоИсполнителям.Выгрузить();
//	КонецЕсли;
//	
//	//Получим валюту и курс управленческого учета
//	ПериодДвижения=?(ПериодДвижения=Неопределено,ДокументОбъект.Дата,ПериодДвижения);
//	ВалютаУпр=Константы.ВалютаУправленческогоУчетаКомпании.Получить(); КурсУпр=обКурсДляВалюты(ВалютаУпр,ПериодДвижения).Курс;
//	ТекВидРемонта=?(ВидРемонта=Неопределено,ДокументОбъект.ВидРемонта,ВидРемонта);
//	ТекАвтомобиль=?(Автомобиль=Неопределено,ДокументОбъект.Автомобиль,Автомобиль);
//	
//	//Преребераем строки работ
//	Для каждого СтрокаРабот Из РезультатЗапросаПоРаботам Цикл
//		Работа=СтрокаРабот.Работа;
//		Количество=СтрокаРабот.Количество;
//		//Получим сумму работы с и без скидки в валюте управленческого учета
//		Сумма=СтрокаРабот.Сумма;
//		СуммаСкидки=СтрокаРабот.СуммаСкидки;
//		СуммаСоСкидкой=Сумма-СуммаСкидки;
//		СуммаУпр=обПересчет(Сумма,ДокументОбъект.ВалютаДокумента,ДокументОбъект.КурсДокумента,ВалютаУпр,КурсУпр);
//		СуммаСоСкидкойУпр=обПересчет(СуммаСоСкидкой,ДокументОбъект.ВалютаДокумента,ДокументОбъект.КурсДокумента,ВалютаУпр,КурсУпр);
//		ИсполнителиРаботы=РезультатЗапросаПоИсполнителям.НайтиСтроки(Новый Структура("Работа",Работа));
//		ОбщийПроцент=0;
//		Для каждого СтрокаИсполнителей Из ИсполнителиРаботы Цикл
//			Исполнитель=СтрокаИсполнителей.Исполнитель;
//			Цех=СтрокаИсполнителей.Цех;
//			Процент=СтрокаИсполнителей.Процент;
//			ОбщийПроцент=ОбщийПроцент+Процент;
//			//Расчитаем участие исполнителя в выполнении работы
//			КоличествоИсполнителя=(Количество*Процент)/100;
//			СуммаИсполнителя=(СуммаУпр*Процент)/100;
//			СуммаИсполнителяСоСкидкой=(СуммаСоСкидкойУпр*Процент)/100;
//			Если ВсеОК Тогда
//				// Создаем запись регистра
//				НоваяЗапись=Добавить();
//				//НоваяЗапись.ВидДвижения=ВидДвиженияНакопления.Приход;
//				НоваяЗапись.Период=ПериодДвижения;
//				НоваяЗапись.Регистратор=ДокументОбъект.Ссылка;
//				НоваяЗапись.Сотрудник=Исполнитель;
//				НоваяЗапись.Работа=Работа;
//				НоваяЗапись.ВидРемонта=ТекВидРемонта;
//				НоваяЗапись.Автомобиль=ТекАвтомобиль;
//				НоваяЗапись.Цех=Цех;
//				НоваяЗапись.Количество=КоличествоИсполнителя;
//				НоваяЗапись.СуммаУпр=Окр(СуммаИсполнителя,2);
//				НоваяЗапись.СуммаУпрСоСкидкой=Окр(СуммаИсполнителяСоСкидкой,2);
//				// определяемся с хоз. операцией
//				НоваяЗапись.ХозОперация=ДокументОбъект.ХозОперация;
//			КонецЕсли; 
//		КонецЦикла; 
//		Если обМод(ОбщийПроцент-100)>=0.01 Тогда
//			//общий процент исполнения работ по исполнителям не равен 100 процентам
//			дкСообщитьРезультат("По работе """+СокрЛП(Работа)+""" процент распределения работ по исполнителям составляет "+СокрЛП(ОбщийПроцент)+"% , а должен быть равен 100%.","Важное&Выработка сотрудников:",ДокументОбъект);
//			ВсеОК=Ложь;
//		КонецЕсли; 
//	КонецЦикла; 
//	
//	// запись движений
//	Если ВсеОК Тогда Записать(); КонецЕсли; 
//	
//	ДокументОбъект=Неопределено;
//	
//	Возврат ВсеОК;
//КонецФункции



// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект);

КонецПроцедуры // ВыполнитьДвижения()

Процедура ПередЗаписью(Отказ, Замещение)
		
	ПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////
//Инициализация переменных модуля набора записей

//РежимПроведения=РежимПроведенияДокумента.Оперативный;

//ДокументОбъект=Неопределено; // !!! Обязательный к заполнению перед началом проведения
//РезультатЗапросаПоРаботам=Неопределено;
//РезультатЗапросаПоИсполнителям=Неопределено;
//ВидРемонта=Неопределено;
//Автомобиль=Неопределено;
//ПериодДвижения=Неопределено;
