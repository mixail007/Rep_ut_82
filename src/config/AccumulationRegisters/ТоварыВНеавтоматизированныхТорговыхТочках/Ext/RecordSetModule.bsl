Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщегние.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ЕстьСерия           = ЕстьРеквизитТабЧастиДокумента("СерияНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьХарактеристика  = ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьЦена            = ЕстьРеквизитТабЧастиДокумента("Цена", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьСкладВТабЧасти  = ЕстьРеквизитТабЧастиДокумента("Склад", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьКоэффициент     = ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);
	
	Если ЕстьРеквизитТабЧастиДокумента("ЦенаВРозницеСтарая", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		ИмяПоляЦены = "ЦенаВРозницеСтарая";
	ИначеЕсли ЕстьРеквизитТабЧастиДокумента("ЦенаВРознице", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		ИмяПоляЦены = "ЦенаВРознице";
	ИначеЕсли ЕстьРеквизитТабЧастиДокумента("Цена", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		ИмяПоляЦены = "Цена";
	Иначе
		ИмяПоляЦены = "";
	КонецЕсли;

	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";


	Запрос = Новый Запрос;

	// Для перемещения надо проверять по складу "Склад-отправитель", а для остальных документов - просто "Склад"
	ТекСклад = СтруктураШапкиДокумента.Склад;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("Склад", ТекСклад); 
	Запрос.УстановитьПараметр("НТТ", Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка); 
	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		Запрос.УстановитьПараметр("ТоварТара", Перечисления.ТоварТара.Тара);
		ИмяПоляЦены = "";
	Иначе
		Запрос.УстановитьПараметр("ТоварТара", Перечисления.ТоварТара.Товар);
	КонецЕсли;

	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаНоменклатурыПредставление,"
	,"")
	+ ?(ЕстьСерия, "
	|	Док.СерияНоменклатуры.Представление                    КАК СерияНоменклатурыПредставление,"
	,"")
	+ ?(Не ЗначениеНеЗаполнено(ИмяПоляЦены), "
	|   Док." + ИмяПоляЦены + "                                КАК ЦенаВРознице, "
	,"
	|   0                                                      КАК ЦенаВРознице,")
	+ ?(Не ЕстьСкладВТабЧасти, "
	|   &Склад                                                 КАК Склад, ", "
	|   Док.Склад,")
	+ ?(ЕстьКоэффициент, "
	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество,", "
	|	СУММА(Док.Количество)                                  КАК ДокументКоличество,") + "
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                    КАК ОстатокКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВНеавтоматизированныхТорговыхТочках.Остатки(,
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ") "
	+ ?(Не ЕстьСкладВТабЧасти, "
	|	И Склад = &Склад ", "") + "
	|	И ТоварТара = &ТоварТара
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры"
	,"")
	+ ?(ЕстьСерия, "
	| И Док.СерияНоменклатуры           = Остатки.СерияНоменклатуры"
	,"")
	+ ?(Не ЗначениеНеЗаполнено(ИмяПоляЦены), "
	| И Док." + ИмяПоляЦены + "         = Остатки.ЦенаВРознице"
	,"")
	+ ?(ЕстьСкладВТабЧасти, "
	| И Док.Склад                       = Остатки.Склад "
	, "") + "
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка 
	|	И Не Док.Номенклатура.Услуга" // остатки по услугам контролировать не надо.
	+ ?(ЕстьСкладВТабЧасти, "
	|	И Док.Склад.ВидСклада = &НТТ"
	, "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура"
	+ ?(ЕстьХарактеристика, ",
	|	Док.ХарактеристикаНоменклатуры"
	,"")
	+ ?(ЕстьСерия, ",
	|	Док.СерияНоменклатуры"
	,"")
	+ ?(Не ЗначениеНеЗаполнено(ИмяПоляЦены), "
	|  , Док." + ИмяПоляЦены 
	,"") 
	+ ?(ЕстьСкладВТабЧасти, ",
	|   Док.Склад", "") + "
	
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВНеавтоматизированныхТорговыхТочках.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		КоличествоНаСкладе = ?(Выборка.ОстатокКоличество = NULL, 0, Выборка.ОстатокКоличество);

		Если КоличествоНаСкладе < Выборка.ДокументКоличество Тогда

			СтрокаСообщения = "Остатка " + 
			ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			                          ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатурыПредставление, ""),
			                          ?(ЕстьСерия, Выборка.СерияНоменклатурыПредставление,"")) +
			" на складе """ + СокрЛП(Выборка.Склад) + """ по цене " + Выборка.ЦенаВРознице + 
			" недостаточно.";

			ОшибкаНетОстатка(СтрокаСообщения, КоличествоНаСкладе, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()

Процедура ПередЗаписью(Отказ, Замещение)
		
	ПроверкаПериодаЗаписей(ЭтотОбъект, Отказ);
	
КонецПроцедуры